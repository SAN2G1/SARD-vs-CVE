command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2623783	File	data/converged/CVE-2019-16718~_radare2/libr_asm_arch_arm_armass.c								
ANR	2623784	ClassDef	<unnamed>	12:8:240:364							
ANR	2623785	DeclStmt									
ANR	2623786	Decl							ut64	ut64	off
ANR	2623787	DeclStmt									
ANR	2623788	Decl							ut32	ut32	o
ANR	2623789	DeclStmt									
ANR	2623790	Decl							char	char [ 128 ]	op
ANR	2623791	DeclStmt									
ANR	2623792	Decl							char	char [ 128 ]	opstr
ANR	2623793	DeclStmt									
ANR	2623794	Decl							char	char * [ 16 ]	a
ANR	2623795	DeclStmt									
ANR	2623796	Decl									ArmOpcode
ANR	2623797	ClassDef	<unnamed>	20:8:375:432							
ANR	2623798	DeclStmt									
ANR	2623799	Decl							const char	const char *	name
ANR	2623800	DeclStmt									
ANR	2623801	Decl							int	int	code
ANR	2623802	DeclStmt									
ANR	2623803	Decl							int	int	type
ANR	2623804	DeclStmt									
ANR	2623805	Decl									ArmOp
ANR	2623806	ClassDef	<unnamed>	26:0:435:777							
ANR	2623807	Function	strcmpnull	50:0:781:874							
ANR	2623808	FunctionDef	"strcmpnull (const char * a , const char * b)"		2623807	0					
ANR	2623809	CompoundStatement		50:52:833:874	2623807	0					
ANR	2623810	ReturnStatement	"return ( a && b ) ? strcmp ( a , b ) : - 1 ;"	51:1:836:872	2623807	0	True				
ANR	2623811	ConditionalExpression	"( a && b ) ? strcmp ( a , b ) : - 1"		2623807	0					
ANR	2623812	Condition	a && b		2623807	0					
ANR	2623813	AndExpression	a && b		2623807	0		&&			
ANR	2623814	Identifier	a		2623807	0					
ANR	2623815	Identifier	b		2623807	1					
ANR	2623816	CallExpression	"strcmp ( a , b )"		2623807	1					
ANR	2623817	Callee	strcmp		2623807	0					
ANR	2623818	Identifier	strcmp		2623807	0					
ANR	2623819	ArgumentList	a		2623807	1					
ANR	2623820	Argument	a		2623807	0					
ANR	2623821	Identifier	a		2623807	0					
ANR	2623822	Argument	b		2623807	1					
ANR	2623823	Identifier	b		2623807	0					
ANR	2623824	UnaryOperationExpression	- 1		2623807	2					
ANR	2623825	UnaryOperator	-		2623807	0					
ANR	2623826	PrimaryExpression	1		2623807	1					
ANR	2623827	ReturnType	static int		2623807	1					
ANR	2623828	Identifier	strcmpnull		2623807	2					
ANR	2623829	ParameterList	"const char * a , const char * b"		2623807	3					
ANR	2623830	Parameter	const char * a	50:22:803:815	2623807	0	True				
ANR	2623831	ParameterType	const char *		2623807	0					
ANR	2623832	Identifier	a		2623807	1					
ANR	2623833	Parameter	const char * b	50:37:818:830	2623807	1	True				
ANR	2623834	ParameterType	const char *		2623807	0					
ANR	2623835	Identifier	b		2623807	1					
ANR	2623836	CFGEntryNode	ENTRY		2623807		True				
ANR	2623837	CFGExitNode	EXIT		2623807		True				
ANR	2623838	Symbol	strcmp		2623807						
ANR	2623839	Symbol	a		2623807						
ANR	2623840	Symbol	b		2623807						
ANR	2623841	DeclStmt									
ANR	2623842	Decl							ArmOp	ArmOp [ ]	ops
ANR	2623843	DeclStmt									
ANR	2623844	Decl							const ut64	const ut64	M_BIT
ANR	2623845	DeclStmt									
ANR	2623846	Decl							const ut64	const ut64	S_BIT
ANR	2623847	DeclStmt									
ANR	2623848	Decl							const ut64	const ut64	C_BITS
ANR	2623849	DeclStmt									
ANR	2623850	Decl							const ut64	const ut64	DOTN_BIT
ANR	2623851	DeclStmt									
ANR	2623852	Decl							const ut64	const ut64	DOTW_BIT
ANR	2623853	DeclStmt									
ANR	2623854	Decl							const ut64	const ut64	L_BIT
ANR	2623855	DeclStmt									
ANR	2623856	Decl							const ut64	const ut64	X_BIT
ANR	2623857	DeclStmt									
ANR	2623858	Decl							const ut64	const ut64	TWO_BIT
ANR	2623859	DeclStmt									
ANR	2623860	Decl							const ut64	const ut64	IE_BIT
ANR	2623861	DeclStmt									
ANR	2623862	Decl							const ut64	const ut64	ID_BIT
ANR	2623863	DeclStmt									
ANR	2623864	Decl							const ut64	const ut64	EA_BIT
ANR	2623865	DeclStmt									
ANR	2623866	Decl							const ut64	const ut64	FD_BIT
ANR	2623867	DeclStmt									
ANR	2623868	Decl							const ut64	const ut64	T_BIT
ANR	2623869	DeclStmt									
ANR	2623870	Decl							const ut64	const ut64	B_BIT
ANR	2623871	DeclStmt									
ANR	2623872	Decl							const ut64	const ut64	H_BIT
ANR	2623873	DeclStmt									
ANR	2623874	Decl							const ut64	const ut64	D_BIT
ANR	2623875	DeclStmt									
ANR	2623876	Decl							const ut64	const ut64	W_BIT
ANR	2623877	DeclStmt									
ANR	2623878	Decl							const ut64	const ut64	EIGHT_BIT
ANR	2623879	DeclStmt									
ANR	2623880	Decl							const ut64	const ut64	SIXTEEN_BIT
ANR	2623881	DeclStmt									
ANR	2623882	Decl							const ut64	const ut64	BB_BIT
ANR	2623883	DeclStmt									
ANR	2623884	Decl							const ut64	const ut64	BT_BIT
ANR	2623885	DeclStmt									
ANR	2623886	Decl							const ut64	const ut64	TB_BIT
ANR	2623887	DeclStmt									
ANR	2623888	Decl							const ut64	const ut64	TT_BIT
ANR	2623889	DeclStmt									
ANR	2623890	Decl							const ut64	const ut64	R_BIT
ANR	2623891	DeclStmt									
ANR	2623892	Decl							const ut64	const ut64	IA_BIT
ANR	2623893	DeclStmt									
ANR	2623894	Decl							const ut64	const ut64	DB_BIT
ANR	2623895	DeclStmt									
ANR	2623896	Decl							const ut64	const ut64	SH_BIT
ANR	2623897	DeclStmt									
ANR	2623898	Decl							const ut64	const ut64	WB_BIT
ANR	2623899	DeclStmt									
ANR	2623900	Decl							const ut64	const ut64	WT_BIT
ANR	2623901	DeclStmt									
ANR	2623902	Decl							const ut64	const ut64	C_MATCH_BIT
ANR	2623903	Function	parse_hints	187:0:4688:4950							
ANR	2623904	FunctionDef	parse_hints (char * input)		2623903	0					
ANR	2623905	CompoundStatement		187:38:4726:4950	2623903	0					
ANR	2623906	IfStatement	"if ( ! strcmpnull ( input , ""unst"" ) )"		2623903	0					
ANR	2623907	Condition	"! strcmpnull ( input , ""unst"" )"	188:5:4733:4759	2623903	0	True				
ANR	2623908	UnaryOperationExpression	"! strcmpnull ( input , ""unst"" )"		2623903	0					
ANR	2623909	UnaryOperator	!		2623903	0					
ANR	2623910	CallExpression	"strcmpnull ( input , ""unst"" )"		2623903	1					
ANR	2623911	Callee	strcmpnull		2623903	0					
ANR	2623912	Identifier	strcmpnull		2623903	0					
ANR	2623913	ArgumentList	input		2623903	1					
ANR	2623914	Argument	input		2623903	0					
ANR	2623915	Identifier	input		2623903	0					
ANR	2623916	Argument	"""unst"""		2623903	1					
ANR	2623917	PrimaryExpression	"""unst"""		2623903	0					
ANR	2623918	CompoundStatement		2:34:35:35	2623903	1					
ANR	2623919	ReturnStatement	"return ""6"" ;"	189:2:4766:4776	2623903	0	True				
ANR	2623920	PrimaryExpression	"""6"""		2623903	0					
ANR	2623921	IfStatement	"if ( ! strcmpnull ( input , ""un"" ) )"		2623903	1					
ANR	2623922	Condition	"! strcmpnull ( input , ""un"" )"	191:5:4786:4810	2623903	0	True				
ANR	2623923	UnaryOperationExpression	"! strcmpnull ( input , ""un"" )"		2623903	0					
ANR	2623924	UnaryOperator	!		2623903	0					
ANR	2623925	CallExpression	"strcmpnull ( input , ""un"" )"		2623903	1					
ANR	2623926	Callee	strcmpnull		2623903	0					
ANR	2623927	Identifier	strcmpnull		2623903	0					
ANR	2623928	ArgumentList	input		2623903	1					
ANR	2623929	Argument	input		2623903	0					
ANR	2623930	Identifier	input		2623903	0					
ANR	2623931	Argument	"""un"""		2623903	1					
ANR	2623932	PrimaryExpression	"""un"""		2623903	0					
ANR	2623933	CompoundStatement		5:32:86:86	2623903	1					
ANR	2623934	ReturnStatement	"return ""7"" ;"	192:2:4817:4827	2623903	0	True				
ANR	2623935	PrimaryExpression	"""7"""		2623903	0					
ANR	2623936	IfStatement	"if ( ! strcmpnull ( input , ""st"" ) )"		2623903	2					
ANR	2623937	Condition	"! strcmpnull ( input , ""st"" )"	194:5:4837:4861	2623903	0	True				
ANR	2623938	UnaryOperationExpression	"! strcmpnull ( input , ""st"" )"		2623903	0					
ANR	2623939	UnaryOperator	!		2623903	0					
ANR	2623940	CallExpression	"strcmpnull ( input , ""st"" )"		2623903	1					
ANR	2623941	Callee	strcmpnull		2623903	0					
ANR	2623942	Identifier	strcmpnull		2623903	0					
ANR	2623943	ArgumentList	input		2623903	1					
ANR	2623944	Argument	input		2623903	0					
ANR	2623945	Identifier	input		2623903	0					
ANR	2623946	Argument	"""st"""		2623903	1					
ANR	2623947	PrimaryExpression	"""st"""		2623903	0					
ANR	2623948	CompoundStatement		8:32:137:137	2623903	1					
ANR	2623949	ReturnStatement	"return ""14"" ;"	195:2:4868:4879	2623903	0	True				
ANR	2623950	PrimaryExpression	"""14"""		2623903	0					
ANR	2623951	IfStatement	"if ( ! strcmpnull ( input , ""sy"" ) )"		2623903	3					
ANR	2623952	Condition	"! strcmpnull ( input , ""sy"" )"	197:5:4889:4913	2623903	0	True				
ANR	2623953	UnaryOperationExpression	"! strcmpnull ( input , ""sy"" )"		2623903	0					
ANR	2623954	UnaryOperator	!		2623903	0					
ANR	2623955	CallExpression	"strcmpnull ( input , ""sy"" )"		2623903	1					
ANR	2623956	Callee	strcmpnull		2623903	0					
ANR	2623957	Identifier	strcmpnull		2623903	0					
ANR	2623958	ArgumentList	input		2623903	1					
ANR	2623959	Argument	input		2623903	0					
ANR	2623960	Identifier	input		2623903	0					
ANR	2623961	Argument	"""sy"""		2623903	1					
ANR	2623962	PrimaryExpression	"""sy"""		2623903	0					
ANR	2623963	CompoundStatement		11:32:189:189	2623903	1					
ANR	2623964	ReturnStatement	"return ""15"" ;"	198:2:4920:4931	2623903	0	True				
ANR	2623965	PrimaryExpression	"""15"""		2623903	0					
ANR	2623966	ReturnStatement	"return ""-1"" ;"	200:1:4937:4948	2623903	4	True				
ANR	2623967	PrimaryExpression	"""-1"""		2623903	0					
ANR	2623968	ReturnType	static char *		2623903	1					
ANR	2623969	Identifier	parse_hints		2623903	2					
ANR	2623970	ParameterList	char * input		2623903	3					
ANR	2623971	Parameter	char * input	187:25:4713:4723	2623903	0	True				
ANR	2623972	ParameterType	char *		2623903	0					
ANR	2623973	Identifier	input		2623903	1					
ANR	2623974	CFGEntryNode	ENTRY		2623903		True				
ANR	2623975	CFGExitNode	EXIT		2623903		True				
ANR	2623976	Symbol	input		2623903						
ANR	2623977	Symbol	strcmpnull		2623903						
ANR	2623978	Function	iflag	203:0:4953:5254							
ANR	2623979	FunctionDef	iflag (char * input)		2623978	0					
ANR	2623980	CompoundStatement		203:30:4983:5254	2623978	0					
ANR	2623981	IdentifierDeclStatement	st8 res = 0 ;	204:1:4986:4997	2623978	0	True				
ANR	2623982	IdentifierDecl	res = 0		2623978	0					
ANR	2623983	IdentifierDeclType	st8		2623978	0					
ANR	2623984	Identifier	res		2623978	1					
ANR	2623985	AssignmentExpression	res = 0		2623978	2		=			
ANR	2623986	Identifier	res		2623978	0					
ANR	2623987	PrimaryExpression	0		2623978	1					
ANR	2623988	IdentifierDeclStatement	ut8 i ;	205:1:5000:5005	2623978	1	True				
ANR	2623989	IdentifierDecl	i		2623978	0					
ANR	2623990	IdentifierDeclType	ut8		2623978	0					
ANR	2623991	Identifier	i		2623978	1					
ANR	2623992	ExpressionStatement	"r_str_case ( input , false )"	206:1:5008:5033	2623978	2	True				
ANR	2623993	CallExpression	"r_str_case ( input , false )"		2623978	0					
ANR	2623994	Callee	r_str_case		2623978	0					
ANR	2623995	Identifier	r_str_case		2623978	0					
ANR	2623996	ArgumentList	input		2623978	1					
ANR	2623997	Argument	input		2623978	0					
ANR	2623998	Identifier	input		2623978	0					
ANR	2623999	Argument	false		2623978	1					
ANR	2624000	Identifier	false		2623978	0					
ANR	2624001	ForStatement	for ( i = 0 ; i < strlen ( input ) ; i ++ )		2623978	3					
ANR	2624002	ForInit	i = 0 ;	208:6:5043:5048	2623978	0	True				
ANR	2624003	AssignmentExpression	i = 0		2623978	0		=			
ANR	2624004	Identifier	i		2623978	0					
ANR	2624005	PrimaryExpression	0		2623978	1					
ANR	2624006	Condition	i < strlen ( input )	208:13:5050:5066	2623978	1	True				
ANR	2624007	RelationalExpression	i < strlen ( input )		2623978	0		<			
ANR	2624008	Identifier	i		2623978	0					
ANR	2624009	CallExpression	strlen ( input )		2623978	1					
ANR	2624010	Callee	strlen		2623978	0					
ANR	2624011	Identifier	strlen		2623978	0					
ANR	2624012	ArgumentList	input		2623978	1					
ANR	2624013	Argument	input		2623978	0					
ANR	2624014	Identifier	input		2623978	0					
ANR	2624015	PostIncDecOperationExpression	i ++	208:32:5069:5071	2623978	2	True				
ANR	2624016	Identifier	i		2623978	0					
ANR	2624017	IncDec	++		2623978	1					
ANR	2624018	CompoundStatement		6:37:90:90	2623978	3					
ANR	2624019	SwitchStatement	switch ( input [ i ] )		2623978	0					
ANR	2624020	Condition	input [ i ]	209:10:5086:5093	2623978	0	True				
ANR	2624021	ArrayIndexing	input [ i ]		2623978	0					
ANR	2624022	Identifier	input		2623978	0					
ANR	2624023	Identifier	i		2623978	1					
ANR	2624024	CompoundStatement		7:20:112:112	2623978	1					
ANR	2624025	Label	case 'a' :	210:2:5100:5108	2623978	0	True				
ANR	2624026	ExpressionStatement	res |= 0x4	211:3:5113:5123	2623978	1	True				
ANR	2624027	AssignmentExpression	res |= 0x4		2623978	0		|=			
ANR	2624028	Identifier	res		2623978	0					
ANR	2624029	PrimaryExpression	0x4		2623978	1					
ANR	2624030	BreakStatement	break ;	212:3:5128:5133	2623978	2	True				
ANR	2624031	Label	case 'i' :	213:2:5137:5145	2623978	3	True				
ANR	2624032	ExpressionStatement	res |= 0x2	214:3:5150:5160	2623978	4	True				
ANR	2624033	AssignmentExpression	res |= 0x2		2623978	0		|=			
ANR	2624034	Identifier	res		2623978	0					
ANR	2624035	PrimaryExpression	0x2		2623978	1					
ANR	2624036	BreakStatement	break ;	215:3:5165:5170	2623978	5	True				
ANR	2624037	Label	case 'f' :	216:2:5174:5182	2623978	6	True				
ANR	2624038	ExpressionStatement	res |= 0x1	217:3:5187:5197	2623978	7	True				
ANR	2624039	AssignmentExpression	res |= 0x1		2623978	0		|=			
ANR	2624040	Identifier	res		2623978	0					
ANR	2624041	PrimaryExpression	0x1		2623978	1					
ANR	2624042	BreakStatement	break ;	218:3:5202:5207	2623978	8	True				
ANR	2624043	Label	default :	219:2:5211:5218	2623978	9	True				
ANR	2624044	Identifier	default		2623978	0					
ANR	2624045	ReturnStatement	return - 1 ;	220:3:5223:5232	2623978	10	True				
ANR	2624046	UnaryOperationExpression	- 1		2623978	0					
ANR	2624047	UnaryOperator	-		2623978	0					
ANR	2624048	PrimaryExpression	1		2623978	1					
ANR	2624049	ReturnStatement	return res ;	223:1:5242:5252	2623978	4	True				
ANR	2624050	Identifier	res		2623978	0					
ANR	2624051	ReturnType	static st8		2623978	1					
ANR	2624052	Identifier	iflag		2623978	2					
ANR	2624053	ParameterList	char * input		2623978	3					
ANR	2624054	Parameter	char * input	203:17:4970:4980	2623978	0	True				
ANR	2624055	ParameterType	char *		2623978	0					
ANR	2624056	Identifier	input		2623978	1					
ANR	2624057	CFGEntryNode	ENTRY		2623978		True				
ANR	2624058	CFGExitNode	EXIT		2623978		True				
ANR	2624059	Symbol	input		2623978						
ANR	2624060	Symbol	res		2623978						
ANR	2624061	Symbol	strlen		2623978						
ANR	2624062	Symbol	* i		2623978						
ANR	2624063	Symbol	false		2623978						
ANR	2624064	Symbol	* input		2623978						
ANR	2624065	Symbol	i		2623978						
ANR	2624066	Function	cqcheck	226:0:5257:5893							
ANR	2624067	FunctionDef	cqcheck (char * * input)		2624066	0					
ANR	2624068	CompoundStatement		226:34:5291:5893	2624066	0					
ANR	2624069	IdentifierDeclStatement	ut64 res = 0 ;	227:1:5294:5306	2624066	0	True				
ANR	2624070	IdentifierDecl	res = 0		2624066	0					
ANR	2624071	IdentifierDeclType	ut64		2624066	0					
ANR	2624072	Identifier	res		2624066	1					
ANR	2624073	AssignmentExpression	res = 0		2624066	2		=			
ANR	2624074	Identifier	res		2624066	0					
ANR	2624075	PrimaryExpression	0		2624066	1					
ANR	2624076	IdentifierDeclStatement	int i ;	228:1:5309:5314	2624066	1	True				
ANR	2624077	IdentifierDecl	i		2624066	0					
ANR	2624078	IdentifierDeclType	int		2624066	0					
ANR	2624079	Identifier	i		2624066	1					
ANR	2624080	IdentifierDeclStatement	ut8 offset = 0 ;	229:1:5317:5331	2624066	2	True				
ANR	2624081	IdentifierDecl	offset = 0		2624066	0					
ANR	2624082	IdentifierDeclType	ut8		2624066	0					
ANR	2624083	Identifier	offset		2624066	1					
ANR	2624084	AssignmentExpression	offset = 0		2624066	2		=			
ANR	2624085	Identifier	offset		2624066	0					
ANR	2624086	PrimaryExpression	0		2624066	1					
ANR	2624087	IdentifierDeclStatement	"const char * conds [ ] = { ""eq"" , ""ne"" , ""cs"" , ""cc"" , ""mi"" , ""pl"" , ""vs"" , ""vc"" , ""hi"" , ""ls"" , ""ge"" , ""lt"" , ""gt"" , ""le"" , ""al"" , ""nv"" , 0 } ;"	231:1:5336:5464	2624066	3	True				
ANR	2624088	IdentifierDecl	"* conds [ ] = { ""eq"" , ""ne"" , ""cs"" , ""cc"" , ""mi"" , ""pl"" , ""vs"" , ""vc"" , ""hi"" , ""ls"" , ""ge"" , ""lt"" , ""gt"" , ""le"" , ""al"" , ""nv"" , 0 }"		2624066	0					
ANR	2624089	IdentifierDeclType	const char * [ ]		2624066	0					
ANR	2624090	Identifier	conds		2624066	1					
ANR	2624091	AssignmentExpression	"* conds [ ] = { ""eq"" , ""ne"" , ""cs"" , ""cc"" , ""mi"" , ""pl"" , ""vs"" , ""vc"" , ""hi"" , ""ls"" , ""ge"" , ""lt"" , ""gt"" , ""le"" , ""al"" , ""nv"" , 0 }"		2624066	2		=			
ANR	2624092	Identifier	conds		2624066	0					
ANR	2624093	InitializerList	"""eq"""		2624066	1					
ANR	2624094	PrimaryExpression	"""eq"""		2624066	0					
ANR	2624095	PrimaryExpression	"""ne"""		2624066	1					
ANR	2624096	PrimaryExpression	"""cs"""		2624066	2					
ANR	2624097	PrimaryExpression	"""cc"""		2624066	3					
ANR	2624098	PrimaryExpression	"""mi"""		2624066	4					
ANR	2624099	PrimaryExpression	"""pl"""		2624066	5					
ANR	2624100	PrimaryExpression	"""vs"""		2624066	6					
ANR	2624101	PrimaryExpression	"""vc"""		2624066	7					
ANR	2624102	PrimaryExpression	"""hi"""		2624066	8					
ANR	2624103	PrimaryExpression	"""ls"""		2624066	9					
ANR	2624104	PrimaryExpression	"""ge"""		2624066	10					
ANR	2624105	PrimaryExpression	"""lt"""		2624066	11					
ANR	2624106	PrimaryExpression	"""gt"""		2624066	12					
ANR	2624107	PrimaryExpression	"""le"""		2624066	13					
ANR	2624108	PrimaryExpression	"""al"""		2624066	14					
ANR	2624109	PrimaryExpression	"""nv"""		2624066	15					
ANR	2624110	PrimaryExpression	0		2624066	16					
ANR	2624111	ForStatement	for ( i = 0 ; conds [ i ] ; i ++ )		2624066	4					
ANR	2624112	ForInit	i = 0 ;	235:6:5472:5477	2624066	0	True				
ANR	2624113	AssignmentExpression	i = 0		2624066	0		=			
ANR	2624114	Identifier	i		2624066	0					
ANR	2624115	PrimaryExpression	0		2624066	1					
ANR	2624116	Condition	conds [ i ]	235:13:5479:5486	2624066	1	True				
ANR	2624117	ArrayIndexing	conds [ i ]		2624066	0					
ANR	2624118	Identifier	conds		2624066	0					
ANR	2624119	Identifier	i		2624066	1					
ANR	2624120	PostIncDecOperationExpression	i ++	235:23:5489:5491	2624066	2	True				
ANR	2624121	Identifier	i		2624066	0					
ANR	2624122	IncDec	++		2624066	1					
ANR	2624123	CompoundStatement		10:28:202:202	2624066	3					
ANR	2624124	IfStatement	"if ( r_str_startswith ( * input , conds [ i ] ) )"		2624066	0					
ANR	2624125	Condition	"r_str_startswith ( * input , conds [ i ] )"	236:6:5502:5536	2624066	0	True				
ANR	2624126	CallExpression	"r_str_startswith ( * input , conds [ i ] )"		2624066	0					
ANR	2624127	Callee	r_str_startswith		2624066	0					
ANR	2624128	Identifier	r_str_startswith		2624066	0					
ANR	2624129	ArgumentList	* input		2624066	1					
ANR	2624130	Argument	* input		2624066	0					
ANR	2624131	UnaryOperationExpression	* input		2624066	0					
ANR	2624132	UnaryOperator	*		2624066	0					
ANR	2624133	Identifier	input		2624066	1					
ANR	2624134	Argument	conds [ i ]		2624066	1					
ANR	2624135	ArrayIndexing	conds [ i ]		2624066	0					
ANR	2624136	Identifier	conds		2624066	0					
ANR	2624137	Identifier	i		2624066	1					
ANR	2624138	CompoundStatement		11:43:247:247	2624066	1					
ANR	2624139	ExpressionStatement	res |= C_MATCH_BIT	237:3:5544:5562	2624066	0	True				
ANR	2624140	AssignmentExpression	res |= C_MATCH_BIT		2624066	0		|=			
ANR	2624141	Identifier	res		2624066	0					
ANR	2624142	Identifier	C_MATCH_BIT		2624066	1					
ANR	2624143	ExpressionStatement	res |= i << 2	238:3:5567:5580	2624066	1	True				
ANR	2624144	AssignmentExpression	res |= i << 2		2624066	0		|=			
ANR	2624145	Identifier	res		2624066	0					
ANR	2624146	ShiftExpression	i << 2		2624066	1		<<			
ANR	2624147	Identifier	i		2624066	0					
ANR	2624148	PrimaryExpression	2		2624066	1					
ANR	2624149	ExpressionStatement	* input += 2	239:3:5585:5596	2624066	2	True				
ANR	2624150	AssignmentExpression	* input += 2		2624066	0		+=			
ANR	2624151	UnaryOperationExpression	* input		2624066	0					
ANR	2624152	UnaryOperator	*		2624066	0					
ANR	2624153	Identifier	input		2624066	1					
ANR	2624154	PrimaryExpression	2		2624066	1					
ANR	2624155	ExpressionStatement	offset += 2	240:3:5601:5612	2624066	3	True				
ANR	2624156	AssignmentExpression	offset += 2		2624066	0		+=			
ANR	2624157	Identifier	offset		2624066	0					
ANR	2624158	PrimaryExpression	2		2624066	1					
ANR	2624159	BreakStatement	break ;	241:3:5617:5622	2624066	4	True				
ANR	2624160	IfStatement	"if ( r_str_startswith ( * input , "".n"" ) )"		2624066	5					
ANR	2624161	Condition	"r_str_startswith ( * input , "".n"" )"	244:5:5636:5666	2624066	0	True				
ANR	2624162	CallExpression	"r_str_startswith ( * input , "".n"" )"		2624066	0					
ANR	2624163	Callee	r_str_startswith		2624066	0					
ANR	2624164	Identifier	r_str_startswith		2624066	0					
ANR	2624165	ArgumentList	* input		2624066	1					
ANR	2624166	Argument	* input		2624066	0					
ANR	2624167	UnaryOperationExpression	* input		2624066	0					
ANR	2624168	UnaryOperator	*		2624066	0					
ANR	2624169	Identifier	input		2624066	1					
ANR	2624170	Argument	""".n"""		2624066	1					
ANR	2624171	PrimaryExpression	""".n"""		2624066	0					
ANR	2624172	CompoundStatement		19:38:377:377	2624066	1					
ANR	2624173	ExpressionStatement	res |= DOTN_BIT	245:2:5673:5688	2624066	0	True				
ANR	2624174	AssignmentExpression	res |= DOTN_BIT		2624066	0		|=			
ANR	2624175	Identifier	res		2624066	0					
ANR	2624176	Identifier	DOTN_BIT		2624066	1					
ANR	2624177	ExpressionStatement	* input += 2	246:2:5692:5703	2624066	1	True				
ANR	2624178	AssignmentExpression	* input += 2		2624066	0		+=			
ANR	2624179	UnaryOperationExpression	* input		2624066	0					
ANR	2624180	UnaryOperator	*		2624066	0					
ANR	2624181	Identifier	input		2624066	1					
ANR	2624182	PrimaryExpression	2		2624066	1					
ANR	2624183	ExpressionStatement	offset += 2	247:2:5707:5718	2624066	2	True				
ANR	2624184	AssignmentExpression	offset += 2		2624066	0		+=			
ANR	2624185	Identifier	offset		2624066	0					
ANR	2624186	PrimaryExpression	2		2624066	1					
ANR	2624187	ElseStatement	else		2624066	0					
ANR	2624188	IfStatement	"if ( r_str_startswith ( * input , "".w"" ) )"		2624066	0					
ANR	2624189	Condition	"r_str_startswith ( * input , "".w"" )"	249:5:5733:5763	2624066	0	True				
ANR	2624190	CallExpression	"r_str_startswith ( * input , "".w"" )"		2624066	0					
ANR	2624191	Callee	r_str_startswith		2624066	0					
ANR	2624192	Identifier	r_str_startswith		2624066	0					
ANR	2624193	ArgumentList	* input		2624066	1					
ANR	2624194	Argument	* input		2624066	0					
ANR	2624195	UnaryOperationExpression	* input		2624066	0					
ANR	2624196	UnaryOperator	*		2624066	0					
ANR	2624197	Identifier	input		2624066	1					
ANR	2624198	Argument	""".w"""		2624066	1					
ANR	2624199	PrimaryExpression	""".w"""		2624066	0					
ANR	2624200	CompoundStatement		24:38:474:474	2624066	1					
ANR	2624201	ExpressionStatement	res |= DOTW_BIT	250:2:5770:5785	2624066	0	True				
ANR	2624202	AssignmentExpression	res |= DOTW_BIT		2624066	0		|=			
ANR	2624203	Identifier	res		2624066	0					
ANR	2624204	Identifier	DOTW_BIT		2624066	1					
ANR	2624205	ExpressionStatement	* input += 2	251:2:5789:5800	2624066	1	True				
ANR	2624206	AssignmentExpression	* input += 2		2624066	0		+=			
ANR	2624207	UnaryOperationExpression	* input		2624066	0					
ANR	2624208	UnaryOperator	*		2624066	0					
ANR	2624209	Identifier	input		2624066	1					
ANR	2624210	PrimaryExpression	2		2624066	1					
ANR	2624211	ExpressionStatement	offset += 2	252:2:5804:5815	2624066	2	True				
ANR	2624212	AssignmentExpression	offset += 2		2624066	0		+=			
ANR	2624213	Identifier	offset		2624066	0					
ANR	2624214	PrimaryExpression	2		2624066	1					
ANR	2624215	IfStatement	if ( * * input == '\\0' )		2624066	6					
ANR	2624216	Condition	* * input == '\\0'	255:5:5827:5841	2624066	0	True				
ANR	2624217	EqualityExpression	* * input == '\\0'		2624066	0		==			
ANR	2624218	UnaryOperationExpression	* * input		2624066	0					
ANR	2624219	UnaryOperator	*		2624066	0					
ANR	2624220	UnaryOperationExpression	* input		2624066	1					
ANR	2624221	UnaryOperator	*		2624066	0					
ANR	2624222	Identifier	input		2624066	1					
ANR	2624223	PrimaryExpression	'\\0'		2624066	1					
ANR	2624224	CompoundStatement		30:22:552:552	2624066	1					
ANR	2624225	ReturnStatement	return res ;	256:2:5848:5858	2624066	0	True				
ANR	2624226	Identifier	res		2624066	0					
ANR	2624227	ExpressionStatement	* input -= offset	258:1:5864:5880	2624066	7	True				
ANR	2624228	AssignmentExpression	* input -= offset		2624066	0		-=			
ANR	2624229	UnaryOperationExpression	* input		2624066	0					
ANR	2624230	UnaryOperator	*		2624066	0					
ANR	2624231	Identifier	input		2624066	1					
ANR	2624232	Identifier	offset		2624066	1					
ANR	2624233	ReturnStatement	return 0 ;	259:1:5883:5891	2624066	8	True				
ANR	2624234	PrimaryExpression	0		2624066	0					
ANR	2624235	ReturnType	static ut64		2624066	1					
ANR	2624236	Identifier	cqcheck		2624066	2					
ANR	2624237	ParameterList	char * * input		2624066	3					
ANR	2624238	Parameter	char * * input	226:20:5277:5288	2624066	0	True				
ANR	2624239	ParameterType	char * *		2624066	0					
ANR	2624240	Identifier	input		2624066	1					
ANR	2624241	CFGEntryNode	ENTRY		2624066		True				
ANR	2624242	CFGExitNode	EXIT		2624066		True				
ANR	2624243	Symbol	r_str_startswith		2624066						
ANR	2624244	Symbol	res		2624066						
ANR	2624245	Symbol	offset		2624066						
ANR	2624246	Symbol	* * input		2624066						
ANR	2624247	Symbol	* input		2624066						
ANR	2624248	Symbol	i		2624066						
ANR	2624249	Symbol	input		2624066						
ANR	2624250	Symbol	* i		2624066						
ANR	2624251	Symbol	* conds		2624066						
ANR	2624252	Symbol	DOTW_BIT		2624066						
ANR	2624253	Symbol	conds		2624066						
ANR	2624254	Symbol	C_MATCH_BIT		2624066						
ANR	2624255	Symbol	DOTN_BIT		2624066						
ANR	2624256	Function	opmask	262:0:5896:9230							
ANR	2624257	FunctionDef	"opmask (char * input , char * opcode , ut64 allowed_mask)"		2624256	0					
ANR	2624258	CompoundStatement		262:65:5961:9230	2624256	0					
ANR	2624259	IdentifierDeclStatement	ut64 res = 0 ;	263:1:5964:5976	2624256	0	True				
ANR	2624260	IdentifierDecl	res = 0		2624256	0					
ANR	2624261	IdentifierDeclType	ut64		2624256	0					
ANR	2624262	Identifier	res		2624256	1					
ANR	2624263	AssignmentExpression	res = 0		2624256	2		=			
ANR	2624264	Identifier	res		2624256	0					
ANR	2624265	PrimaryExpression	0		2624256	1					
ANR	2624266	ExpressionStatement	"r_str_case ( input , false )"	265:1:5981:6006	2624256	1	True				
ANR	2624267	CallExpression	"r_str_case ( input , false )"		2624256	0					
ANR	2624268	Callee	r_str_case		2624256	0					
ANR	2624269	Identifier	r_str_case		2624256	0					
ANR	2624270	ArgumentList	input		2624256	1					
ANR	2624271	Argument	input		2624256	0					
ANR	2624272	Identifier	input		2624256	0					
ANR	2624273	Argument	false		2624256	1					
ANR	2624274	Identifier	false		2624256	0					
ANR	2624275	IfStatement	if ( strlen ( opcode ) > strlen ( input ) )		2624256	2					
ANR	2624276	Condition	strlen ( opcode ) > strlen ( input )	266:5:6013:6044	2624256	0	True				
ANR	2624277	RelationalExpression	strlen ( opcode ) > strlen ( input )		2624256	0		>			
ANR	2624278	CallExpression	strlen ( opcode )		2624256	0					
ANR	2624279	Callee	strlen		2624256	0					
ANR	2624280	Identifier	strlen		2624256	0					
ANR	2624281	ArgumentList	opcode		2624256	1					
ANR	2624282	Argument	opcode		2624256	0					
ANR	2624283	Identifier	opcode		2624256	0					
ANR	2624284	CallExpression	strlen ( input )		2624256	1					
ANR	2624285	Callee	strlen		2624256	0					
ANR	2624286	Identifier	strlen		2624256	0					
ANR	2624287	ArgumentList	input		2624256	1					
ANR	2624288	Argument	input		2624256	0					
ANR	2624289	Identifier	input		2624256	0					
ANR	2624290	CompoundStatement		5:39:85:85	2624256	1					
ANR	2624291	ReturnStatement	return 0 ;	267:2:6051:6059	2624256	0	True				
ANR	2624292	PrimaryExpression	0		2624256	0					
ANR	2624293	IfStatement	"if ( r_str_startswith ( input , opcode ) )"		2624256	3					
ANR	2624294	Condition	"r_str_startswith ( input , opcode )"	269:5:6069:6100	2624256	0	True				
ANR	2624295	CallExpression	"r_str_startswith ( input , opcode )"		2624256	0					
ANR	2624296	Callee	r_str_startswith		2624256	0					
ANR	2624297	Identifier	r_str_startswith		2624256	0					
ANR	2624298	ArgumentList	input		2624256	1					
ANR	2624299	Argument	input		2624256	0					
ANR	2624300	Identifier	input		2624256	0					
ANR	2624301	Argument	opcode		2624256	1					
ANR	2624302	Identifier	opcode		2624256	0					
ANR	2624303	CompoundStatement		8:39:141:141	2624256	1					
ANR	2624304	ExpressionStatement	input += strlen ( opcode )	270:2:6107:6131	2624256	0	True				
ANR	2624305	AssignmentExpression	input += strlen ( opcode )		2624256	0		+=			
ANR	2624306	Identifier	input		2624256	0					
ANR	2624307	CallExpression	strlen ( opcode )		2624256	1					
ANR	2624308	Callee	strlen		2624256	0					
ANR	2624309	Identifier	strlen		2624256	0					
ANR	2624310	ArgumentList	opcode		2624256	1					
ANR	2624311	Argument	opcode		2624256	0					
ANR	2624312	Identifier	opcode		2624256	0					
ANR	2624313	ExpressionStatement	res |= M_BIT	271:2:6135:6147	2624256	1	True				
ANR	2624314	AssignmentExpression	res |= M_BIT		2624256	0		|=			
ANR	2624315	Identifier	res		2624256	0					
ANR	2624316	Identifier	M_BIT		2624256	1					
ANR	2624317	ExpressionStatement	res |= cqcheck ( & input )	272:2:6151:6174	2624256	2	True				
ANR	2624318	AssignmentExpression	res |= cqcheck ( & input )		2624256	0		|=			
ANR	2624319	Identifier	res		2624256	0					
ANR	2624320	CallExpression	cqcheck ( & input )		2624256	1					
ANR	2624321	Callee	cqcheck		2624256	0					
ANR	2624322	Identifier	cqcheck		2624256	0					
ANR	2624323	ArgumentList	& input		2624256	1					
ANR	2624324	Argument	& input		2624256	0					
ANR	2624325	UnaryOperationExpression	& input		2624256	0					
ANR	2624326	UnaryOperator	&		2624256	0					
ANR	2624327	Identifier	input		2624256	1					
ANR	2624328	IfStatement	if ( ( * input == 's' ) && ( S_BIT & allowed_mask ) )		2624256	3					
ANR	2624329	Condition	( * input == 's' ) && ( S_BIT & allowed_mask )	274:6:6185:6225	2624256	0	True				
ANR	2624330	AndExpression	( * input == 's' ) && ( S_BIT & allowed_mask )		2624256	0		&&			
ANR	2624331	EqualityExpression	* input == 's'		2624256	0		==			
ANR	2624332	UnaryOperationExpression	* input		2624256	0					
ANR	2624333	UnaryOperator	*		2624256	0					
ANR	2624334	Identifier	input		2624256	1					
ANR	2624335	PrimaryExpression	's'		2624256	1					
ANR	2624336	BitAndExpression	S_BIT & allowed_mask		2624256	1		&			
ANR	2624337	Identifier	S_BIT		2624256	0					
ANR	2624338	Identifier	allowed_mask		2624256	1					
ANR	2624339	CompoundStatement		13:49:266:266	2624256	1					
ANR	2624340	ExpressionStatement	res |= S_BIT	275:3:6233:6245	2624256	0	True				
ANR	2624341	AssignmentExpression	res |= S_BIT		2624256	0		|=			
ANR	2624342	Identifier	res		2624256	0					
ANR	2624343	Identifier	S_BIT		2624256	1					
ANR	2624344	ExpressionStatement	input ++	276:3:6250:6257	2624256	1	True				
ANR	2624345	PostIncDecOperationExpression	input ++		2624256	0					
ANR	2624346	Identifier	input		2624256	0					
ANR	2624347	IncDec	++		2624256	1					
ANR	2624348	ExpressionStatement	res |= cqcheck ( & input )	278:2:6265:6288	2624256	4	True				
ANR	2624349	AssignmentExpression	res |= cqcheck ( & input )		2624256	0		|=			
ANR	2624350	Identifier	res		2624256	0					
ANR	2624351	CallExpression	cqcheck ( & input )		2624256	1					
ANR	2624352	Callee	cqcheck		2624256	0					
ANR	2624353	Identifier	cqcheck		2624256	0					
ANR	2624354	ArgumentList	& input		2624256	1					
ANR	2624355	Argument	& input		2624256	0					
ANR	2624356	UnaryOperationExpression	& input		2624256	0					
ANR	2624357	UnaryOperator	&		2624256	0					
ANR	2624358	Identifier	input		2624256	1					
ANR	2624359	IfStatement	"if ( ( r_str_startswith ( input , ""wb"" ) ) && ( WB_BIT & allowed_mask ) )"		2624256	5					
ANR	2624360	Condition	"( r_str_startswith ( input , ""wb"" ) ) && ( WB_BIT & allowed_mask )"	280:6:6297:6355	2624256	0	True				
ANR	2624361	AndExpression	"( r_str_startswith ( input , ""wb"" ) ) && ( WB_BIT & allowed_mask )"		2624256	0		&&			
ANR	2624362	CallExpression	"r_str_startswith ( input , ""wb"" )"		2624256	0					
ANR	2624363	Callee	r_str_startswith		2624256	0					
ANR	2624364	Identifier	r_str_startswith		2624256	0					
ANR	2624365	ArgumentList	input		2624256	1					
ANR	2624366	Argument	input		2624256	0					
ANR	2624367	Identifier	input		2624256	0					
ANR	2624368	Argument	"""wb"""		2624256	1					
ANR	2624369	PrimaryExpression	"""wb"""		2624256	0					
ANR	2624370	BitAndExpression	WB_BIT & allowed_mask		2624256	1		&			
ANR	2624371	Identifier	WB_BIT		2624256	0					
ANR	2624372	Identifier	allowed_mask		2624256	1					
ANR	2624373	CompoundStatement		19:67:396:396	2624256	1					
ANR	2624374	ExpressionStatement	res |= WB_BIT	281:3:6363:6376	2624256	0	True				
ANR	2624375	AssignmentExpression	res |= WB_BIT		2624256	0		|=			
ANR	2624376	Identifier	res		2624256	0					
ANR	2624377	Identifier	WB_BIT		2624256	1					
ANR	2624378	ExpressionStatement	input += 2	282:3:6381:6391	2624256	1	True				
ANR	2624379	AssignmentExpression	input += 2		2624256	0		+=			
ANR	2624380	Identifier	input		2624256	0					
ANR	2624381	PrimaryExpression	2		2624256	1					
ANR	2624382	IfStatement	"if ( ( r_str_startswith ( input , ""wt"" ) ) && ( WT_BIT & allowed_mask ) )"		2624256	6					
ANR	2624383	Condition	"( r_str_startswith ( input , ""wt"" ) ) && ( WT_BIT & allowed_mask )"	284:6:6403:6461	2624256	0	True				
ANR	2624384	AndExpression	"( r_str_startswith ( input , ""wt"" ) ) && ( WT_BIT & allowed_mask )"		2624256	0		&&			
ANR	2624385	CallExpression	"r_str_startswith ( input , ""wt"" )"		2624256	0					
ANR	2624386	Callee	r_str_startswith		2624256	0					
ANR	2624387	Identifier	r_str_startswith		2624256	0					
ANR	2624388	ArgumentList	input		2624256	1					
ANR	2624389	Argument	input		2624256	0					
ANR	2624390	Identifier	input		2624256	0					
ANR	2624391	Argument	"""wt"""		2624256	1					
ANR	2624392	PrimaryExpression	"""wt"""		2624256	0					
ANR	2624393	BitAndExpression	WT_BIT & allowed_mask		2624256	1		&			
ANR	2624394	Identifier	WT_BIT		2624256	0					
ANR	2624395	Identifier	allowed_mask		2624256	1					
ANR	2624396	CompoundStatement		23:67:502:502	2624256	1					
ANR	2624397	ExpressionStatement	res |= WT_BIT	285:3:6469:6482	2624256	0	True				
ANR	2624398	AssignmentExpression	res |= WT_BIT		2624256	0		|=			
ANR	2624399	Identifier	res		2624256	0					
ANR	2624400	Identifier	WT_BIT		2624256	1					
ANR	2624401	ExpressionStatement	input += 2	286:3:6487:6497	2624256	1	True				
ANR	2624402	AssignmentExpression	input += 2		2624256	0		+=			
ANR	2624403	Identifier	input		2624256	0					
ANR	2624404	PrimaryExpression	2		2624256	1					
ANR	2624405	ExpressionStatement	res |= cqcheck ( & input )	288:2:6505:6528	2624256	7	True				
ANR	2624406	AssignmentExpression	res |= cqcheck ( & input )		2624256	0		|=			
ANR	2624407	Identifier	res		2624256	0					
ANR	2624408	CallExpression	cqcheck ( & input )		2624256	1					
ANR	2624409	Callee	cqcheck		2624256	0					
ANR	2624410	Identifier	cqcheck		2624256	0					
ANR	2624411	ArgumentList	& input		2624256	1					
ANR	2624412	Argument	& input		2624256	0					
ANR	2624413	UnaryOperationExpression	& input		2624256	0					
ANR	2624414	UnaryOperator	&		2624256	0					
ANR	2624415	Identifier	input		2624256	1					
ANR	2624416	IfStatement	"if ( ( r_str_startswith ( input , ""db"" ) ) && ( DB_BIT & allowed_mask ) )"		2624256	8					
ANR	2624417	Condition	"( r_str_startswith ( input , ""db"" ) ) && ( DB_BIT & allowed_mask )"	289:6:6536:6594	2624256	0	True				
ANR	2624418	AndExpression	"( r_str_startswith ( input , ""db"" ) ) && ( DB_BIT & allowed_mask )"		2624256	0		&&			
ANR	2624419	CallExpression	"r_str_startswith ( input , ""db"" )"		2624256	0					
ANR	2624420	Callee	r_str_startswith		2624256	0					
ANR	2624421	Identifier	r_str_startswith		2624256	0					
ANR	2624422	ArgumentList	input		2624256	1					
ANR	2624423	Argument	input		2624256	0					
ANR	2624424	Identifier	input		2624256	0					
ANR	2624425	Argument	"""db"""		2624256	1					
ANR	2624426	PrimaryExpression	"""db"""		2624256	0					
ANR	2624427	BitAndExpression	DB_BIT & allowed_mask		2624256	1		&			
ANR	2624428	Identifier	DB_BIT		2624256	0					
ANR	2624429	Identifier	allowed_mask		2624256	1					
ANR	2624430	CompoundStatement		28:67:635:635	2624256	1					
ANR	2624431	ExpressionStatement	res |= DB_BIT	290:3:6602:6615	2624256	0	True				
ANR	2624432	AssignmentExpression	res |= DB_BIT		2624256	0		|=			
ANR	2624433	Identifier	res		2624256	0					
ANR	2624434	Identifier	DB_BIT		2624256	1					
ANR	2624435	ExpressionStatement	input += 2	291:3:6620:6630	2624256	1	True				
ANR	2624436	AssignmentExpression	input += 2		2624256	0		+=			
ANR	2624437	Identifier	input		2624256	0					
ANR	2624438	PrimaryExpression	2		2624256	1					
ANR	2624439	IfStatement	"if ( ( r_str_startswith ( input , ""ea"" ) ) && ( EA_BIT & allowed_mask ) )"		2624256	9					
ANR	2624440	Condition	"( r_str_startswith ( input , ""ea"" ) ) && ( EA_BIT & allowed_mask )"	293:6:6642:6700	2624256	0	True				
ANR	2624441	AndExpression	"( r_str_startswith ( input , ""ea"" ) ) && ( EA_BIT & allowed_mask )"		2624256	0		&&			
ANR	2624442	CallExpression	"r_str_startswith ( input , ""ea"" )"		2624256	0					
ANR	2624443	Callee	r_str_startswith		2624256	0					
ANR	2624444	Identifier	r_str_startswith		2624256	0					
ANR	2624445	ArgumentList	input		2624256	1					
ANR	2624446	Argument	input		2624256	0					
ANR	2624447	Identifier	input		2624256	0					
ANR	2624448	Argument	"""ea"""		2624256	1					
ANR	2624449	PrimaryExpression	"""ea"""		2624256	0					
ANR	2624450	BitAndExpression	EA_BIT & allowed_mask		2624256	1		&			
ANR	2624451	Identifier	EA_BIT		2624256	0					
ANR	2624452	Identifier	allowed_mask		2624256	1					
ANR	2624453	CompoundStatement		32:67:741:741	2624256	1					
ANR	2624454	ExpressionStatement	res |= EA_BIT	294:3:6708:6721	2624256	0	True				
ANR	2624455	AssignmentExpression	res |= EA_BIT		2624256	0		|=			
ANR	2624456	Identifier	res		2624256	0					
ANR	2624457	Identifier	EA_BIT		2624256	1					
ANR	2624458	ExpressionStatement	input += 2	295:3:6726:6736	2624256	1	True				
ANR	2624459	AssignmentExpression	input += 2		2624256	0		+=			
ANR	2624460	Identifier	input		2624256	0					
ANR	2624461	PrimaryExpression	2		2624256	1					
ANR	2624462	IfStatement	"if ( ( r_str_startswith ( input , ""ia"" ) ) && ( IA_BIT & allowed_mask ) )"		2624256	10					
ANR	2624463	Condition	"( r_str_startswith ( input , ""ia"" ) ) && ( IA_BIT & allowed_mask )"	297:6:6748:6806	2624256	0	True				
ANR	2624464	AndExpression	"( r_str_startswith ( input , ""ia"" ) ) && ( IA_BIT & allowed_mask )"		2624256	0		&&			
ANR	2624465	CallExpression	"r_str_startswith ( input , ""ia"" )"		2624256	0					
ANR	2624466	Callee	r_str_startswith		2624256	0					
ANR	2624467	Identifier	r_str_startswith		2624256	0					
ANR	2624468	ArgumentList	input		2624256	1					
ANR	2624469	Argument	input		2624256	0					
ANR	2624470	Identifier	input		2624256	0					
ANR	2624471	Argument	"""ia"""		2624256	1					
ANR	2624472	PrimaryExpression	"""ia"""		2624256	0					
ANR	2624473	BitAndExpression	IA_BIT & allowed_mask		2624256	1		&			
ANR	2624474	Identifier	IA_BIT		2624256	0					
ANR	2624475	Identifier	allowed_mask		2624256	1					
ANR	2624476	CompoundStatement		36:67:847:847	2624256	1					
ANR	2624477	ExpressionStatement	res |= IA_BIT	298:3:6814:6827	2624256	0	True				
ANR	2624478	AssignmentExpression	res |= IA_BIT		2624256	0		|=			
ANR	2624479	Identifier	res		2624256	0					
ANR	2624480	Identifier	IA_BIT		2624256	1					
ANR	2624481	ExpressionStatement	input += 2	299:3:6832:6842	2624256	1	True				
ANR	2624482	AssignmentExpression	input += 2		2624256	0		+=			
ANR	2624483	Identifier	input		2624256	0					
ANR	2624484	PrimaryExpression	2		2624256	1					
ANR	2624485	IfStatement	"if ( ( r_str_startswith ( input , ""fd"" ) ) && ( FD_BIT & allowed_mask ) )"		2624256	11					
ANR	2624486	Condition	"( r_str_startswith ( input , ""fd"" ) ) && ( FD_BIT & allowed_mask )"	301:6:6854:6912	2624256	0	True				
ANR	2624487	AndExpression	"( r_str_startswith ( input , ""fd"" ) ) && ( FD_BIT & allowed_mask )"		2624256	0		&&			
ANR	2624488	CallExpression	"r_str_startswith ( input , ""fd"" )"		2624256	0					
ANR	2624489	Callee	r_str_startswith		2624256	0					
ANR	2624490	Identifier	r_str_startswith		2624256	0					
ANR	2624491	ArgumentList	input		2624256	1					
ANR	2624492	Argument	input		2624256	0					
ANR	2624493	Identifier	input		2624256	0					
ANR	2624494	Argument	"""fd"""		2624256	1					
ANR	2624495	PrimaryExpression	"""fd"""		2624256	0					
ANR	2624496	BitAndExpression	FD_BIT & allowed_mask		2624256	1		&			
ANR	2624497	Identifier	FD_BIT		2624256	0					
ANR	2624498	Identifier	allowed_mask		2624256	1					
ANR	2624499	CompoundStatement		40:67:953:953	2624256	1					
ANR	2624500	ExpressionStatement	res |= FD_BIT	302:3:6920:6933	2624256	0	True				
ANR	2624501	AssignmentExpression	res |= FD_BIT		2624256	0		|=			
ANR	2624502	Identifier	res		2624256	0					
ANR	2624503	Identifier	FD_BIT		2624256	1					
ANR	2624504	ExpressionStatement	input += 2	303:3:6938:6948	2624256	1	True				
ANR	2624505	AssignmentExpression	input += 2		2624256	0		+=			
ANR	2624506	Identifier	input		2624256	0					
ANR	2624507	PrimaryExpression	2		2624256	1					
ANR	2624508	ExpressionStatement	res |= cqcheck ( & input )	305:2:6956:6979	2624256	12	True				
ANR	2624509	AssignmentExpression	res |= cqcheck ( & input )		2624256	0		|=			
ANR	2624510	Identifier	res		2624256	0					
ANR	2624511	CallExpression	cqcheck ( & input )		2624256	1					
ANR	2624512	Callee	cqcheck		2624256	0					
ANR	2624513	Identifier	cqcheck		2624256	0					
ANR	2624514	ArgumentList	& input		2624256	1					
ANR	2624515	Argument	& input		2624256	0					
ANR	2624516	UnaryOperationExpression	& input		2624256	0					
ANR	2624517	UnaryOperator	&		2624256	0					
ANR	2624518	Identifier	input		2624256	1					
ANR	2624519	IfStatement	if ( ( * input == 'l' ) && ( L_BIT & allowed_mask ) )		2624256	13					
ANR	2624520	Condition	( * input == 'l' ) && ( L_BIT & allowed_mask )	306:6:6987:7027	2624256	0	True				
ANR	2624521	AndExpression	( * input == 'l' ) && ( L_BIT & allowed_mask )		2624256	0		&&			
ANR	2624522	EqualityExpression	* input == 'l'		2624256	0		==			
ANR	2624523	UnaryOperationExpression	* input		2624256	0					
ANR	2624524	UnaryOperator	*		2624256	0					
ANR	2624525	Identifier	input		2624256	1					
ANR	2624526	PrimaryExpression	'l'		2624256	1					
ANR	2624527	BitAndExpression	L_BIT & allowed_mask		2624256	1		&			
ANR	2624528	Identifier	L_BIT		2624256	0					
ANR	2624529	Identifier	allowed_mask		2624256	1					
ANR	2624530	CompoundStatement		45:49:1068:1068	2624256	1					
ANR	2624531	ExpressionStatement	res |= L_BIT	307:3:7035:7047	2624256	0	True				
ANR	2624532	AssignmentExpression	res |= L_BIT		2624256	0		|=			
ANR	2624533	Identifier	res		2624256	0					
ANR	2624534	Identifier	L_BIT		2624256	1					
ANR	2624535	ExpressionStatement	input ++	308:3:7052:7059	2624256	1	True				
ANR	2624536	PostIncDecOperationExpression	input ++		2624256	0					
ANR	2624537	Identifier	input		2624256	0					
ANR	2624538	IncDec	++		2624256	1					
ANR	2624539	ExpressionStatement	res |= cqcheck ( & input )	310:2:7067:7090	2624256	14	True				
ANR	2624540	AssignmentExpression	res |= cqcheck ( & input )		2624256	0		|=			
ANR	2624541	Identifier	res		2624256	0					
ANR	2624542	CallExpression	cqcheck ( & input )		2624256	1					
ANR	2624543	Callee	cqcheck		2624256	0					
ANR	2624544	Identifier	cqcheck		2624256	0					
ANR	2624545	ArgumentList	& input		2624256	1					
ANR	2624546	Argument	& input		2624256	0					
ANR	2624547	UnaryOperationExpression	& input		2624256	0					
ANR	2624548	UnaryOperator	&		2624256	0					
ANR	2624549	Identifier	input		2624256	1					
ANR	2624550	IfStatement	"if ( ( r_str_startswith ( input , ""bb"" ) ) && ( BB_BIT & allowed_mask ) )"		2624256	15					
ANR	2624551	Condition	"( r_str_startswith ( input , ""bb"" ) ) && ( BB_BIT & allowed_mask )"	311:6:7098:7156	2624256	0	True				
ANR	2624552	AndExpression	"( r_str_startswith ( input , ""bb"" ) ) && ( BB_BIT & allowed_mask )"		2624256	0		&&			
ANR	2624553	CallExpression	"r_str_startswith ( input , ""bb"" )"		2624256	0					
ANR	2624554	Callee	r_str_startswith		2624256	0					
ANR	2624555	Identifier	r_str_startswith		2624256	0					
ANR	2624556	ArgumentList	input		2624256	1					
ANR	2624557	Argument	input		2624256	0					
ANR	2624558	Identifier	input		2624256	0					
ANR	2624559	Argument	"""bb"""		2624256	1					
ANR	2624560	PrimaryExpression	"""bb"""		2624256	0					
ANR	2624561	BitAndExpression	BB_BIT & allowed_mask		2624256	1		&			
ANR	2624562	Identifier	BB_BIT		2624256	0					
ANR	2624563	Identifier	allowed_mask		2624256	1					
ANR	2624564	CompoundStatement		50:67:1197:1197	2624256	1					
ANR	2624565	ExpressionStatement	res |= BB_BIT	312:3:7164:7177	2624256	0	True				
ANR	2624566	AssignmentExpression	res |= BB_BIT		2624256	0		|=			
ANR	2624567	Identifier	res		2624256	0					
ANR	2624568	Identifier	BB_BIT		2624256	1					
ANR	2624569	ExpressionStatement	input += 2	313:3:7182:7192	2624256	1	True				
ANR	2624570	AssignmentExpression	input += 2		2624256	0		+=			
ANR	2624571	Identifier	input		2624256	0					
ANR	2624572	PrimaryExpression	2		2624256	1					
ANR	2624573	IfStatement	"if ( ( r_str_startswith ( input , ""tt"" ) ) && ( TT_BIT & allowed_mask ) )"		2624256	16					
ANR	2624574	Condition	"( r_str_startswith ( input , ""tt"" ) ) && ( TT_BIT & allowed_mask )"	315:6:7204:7262	2624256	0	True				
ANR	2624575	AndExpression	"( r_str_startswith ( input , ""tt"" ) ) && ( TT_BIT & allowed_mask )"		2624256	0		&&			
ANR	2624576	CallExpression	"r_str_startswith ( input , ""tt"" )"		2624256	0					
ANR	2624577	Callee	r_str_startswith		2624256	0					
ANR	2624578	Identifier	r_str_startswith		2624256	0					
ANR	2624579	ArgumentList	input		2624256	1					
ANR	2624580	Argument	input		2624256	0					
ANR	2624581	Identifier	input		2624256	0					
ANR	2624582	Argument	"""tt"""		2624256	1					
ANR	2624583	PrimaryExpression	"""tt"""		2624256	0					
ANR	2624584	BitAndExpression	TT_BIT & allowed_mask		2624256	1		&			
ANR	2624585	Identifier	TT_BIT		2624256	0					
ANR	2624586	Identifier	allowed_mask		2624256	1					
ANR	2624587	CompoundStatement		54:67:1303:1303	2624256	1					
ANR	2624588	ExpressionStatement	res |= TT_BIT	316:3:7270:7283	2624256	0	True				
ANR	2624589	AssignmentExpression	res |= TT_BIT		2624256	0		|=			
ANR	2624590	Identifier	res		2624256	0					
ANR	2624591	Identifier	TT_BIT		2624256	1					
ANR	2624592	ExpressionStatement	input += 2	317:3:7288:7298	2624256	1	True				
ANR	2624593	AssignmentExpression	input += 2		2624256	0		+=			
ANR	2624594	Identifier	input		2624256	0					
ANR	2624595	PrimaryExpression	2		2624256	1					
ANR	2624596	IfStatement	"if ( ( r_str_startswith ( input , ""bt"" ) ) && ( BT_BIT & allowed_mask ) )"		2624256	17					
ANR	2624597	Condition	"( r_str_startswith ( input , ""bt"" ) ) && ( BT_BIT & allowed_mask )"	319:6:7310:7368	2624256	0	True				
ANR	2624598	AndExpression	"( r_str_startswith ( input , ""bt"" ) ) && ( BT_BIT & allowed_mask )"		2624256	0		&&			
ANR	2624599	CallExpression	"r_str_startswith ( input , ""bt"" )"		2624256	0					
ANR	2624600	Callee	r_str_startswith		2624256	0					
ANR	2624601	Identifier	r_str_startswith		2624256	0					
ANR	2624602	ArgumentList	input		2624256	1					
ANR	2624603	Argument	input		2624256	0					
ANR	2624604	Identifier	input		2624256	0					
ANR	2624605	Argument	"""bt"""		2624256	1					
ANR	2624606	PrimaryExpression	"""bt"""		2624256	0					
ANR	2624607	BitAndExpression	BT_BIT & allowed_mask		2624256	1		&			
ANR	2624608	Identifier	BT_BIT		2624256	0					
ANR	2624609	Identifier	allowed_mask		2624256	1					
ANR	2624610	CompoundStatement		58:67:1409:1409	2624256	1					
ANR	2624611	ExpressionStatement	res |= BT_BIT	320:3:7376:7389	2624256	0	True				
ANR	2624612	AssignmentExpression	res |= BT_BIT		2624256	0		|=			
ANR	2624613	Identifier	res		2624256	0					
ANR	2624614	Identifier	BT_BIT		2624256	1					
ANR	2624615	ExpressionStatement	input += 2	321:3:7394:7404	2624256	1	True				
ANR	2624616	AssignmentExpression	input += 2		2624256	0		+=			
ANR	2624617	Identifier	input		2624256	0					
ANR	2624618	PrimaryExpression	2		2624256	1					
ANR	2624619	IfStatement	"if ( ( r_str_startswith ( input , ""tb"" ) ) && ( TB_BIT & allowed_mask ) )"		2624256	18					
ANR	2624620	Condition	"( r_str_startswith ( input , ""tb"" ) ) && ( TB_BIT & allowed_mask )"	323:6:7416:7474	2624256	0	True				
ANR	2624621	AndExpression	"( r_str_startswith ( input , ""tb"" ) ) && ( TB_BIT & allowed_mask )"		2624256	0		&&			
ANR	2624622	CallExpression	"r_str_startswith ( input , ""tb"" )"		2624256	0					
ANR	2624623	Callee	r_str_startswith		2624256	0					
ANR	2624624	Identifier	r_str_startswith		2624256	0					
ANR	2624625	ArgumentList	input		2624256	1					
ANR	2624626	Argument	input		2624256	0					
ANR	2624627	Identifier	input		2624256	0					
ANR	2624628	Argument	"""tb"""		2624256	1					
ANR	2624629	PrimaryExpression	"""tb"""		2624256	0					
ANR	2624630	BitAndExpression	TB_BIT & allowed_mask		2624256	1		&			
ANR	2624631	Identifier	TB_BIT		2624256	0					
ANR	2624632	Identifier	allowed_mask		2624256	1					
ANR	2624633	CompoundStatement		62:67:1515:1515	2624256	1					
ANR	2624634	ExpressionStatement	res |= TB_BIT	324:3:7482:7495	2624256	0	True				
ANR	2624635	AssignmentExpression	res |= TB_BIT		2624256	0		|=			
ANR	2624636	Identifier	res		2624256	0					
ANR	2624637	Identifier	TB_BIT		2624256	1					
ANR	2624638	ExpressionStatement	input += 2	325:3:7500:7510	2624256	1	True				
ANR	2624639	AssignmentExpression	input += 2		2624256	0		+=			
ANR	2624640	Identifier	input		2624256	0					
ANR	2624641	PrimaryExpression	2		2624256	1					
ANR	2624642	ExpressionStatement	res |= cqcheck ( & input )	327:2:7518:7541	2624256	19	True				
ANR	2624643	AssignmentExpression	res |= cqcheck ( & input )		2624256	0		|=			
ANR	2624644	Identifier	res		2624256	0					
ANR	2624645	CallExpression	cqcheck ( & input )		2624256	1					
ANR	2624646	Callee	cqcheck		2624256	0					
ANR	2624647	Identifier	cqcheck		2624256	0					
ANR	2624648	ArgumentList	& input		2624256	1					
ANR	2624649	Argument	& input		2624256	0					
ANR	2624650	UnaryOperationExpression	& input		2624256	0					
ANR	2624651	UnaryOperator	&		2624256	0					
ANR	2624652	Identifier	input		2624256	1					
ANR	2624653	IfStatement	if ( ( * input == 'w' ) && ( W_BIT & allowed_mask ) )		2624256	20					
ANR	2624654	Condition	( * input == 'w' ) && ( W_BIT & allowed_mask )	328:6:7549:7589	2624256	0	True				
ANR	2624655	AndExpression	( * input == 'w' ) && ( W_BIT & allowed_mask )		2624256	0		&&			
ANR	2624656	EqualityExpression	* input == 'w'		2624256	0		==			
ANR	2624657	UnaryOperationExpression	* input		2624256	0					
ANR	2624658	UnaryOperator	*		2624256	0					
ANR	2624659	Identifier	input		2624256	1					
ANR	2624660	PrimaryExpression	'w'		2624256	1					
ANR	2624661	BitAndExpression	W_BIT & allowed_mask		2624256	1		&			
ANR	2624662	Identifier	W_BIT		2624256	0					
ANR	2624663	Identifier	allowed_mask		2624256	1					
ANR	2624664	CompoundStatement		67:49:1630:1630	2624256	1					
ANR	2624665	ExpressionStatement	res |= W_BIT	329:3:7597:7609	2624256	0	True				
ANR	2624666	AssignmentExpression	res |= W_BIT		2624256	0		|=			
ANR	2624667	Identifier	res		2624256	0					
ANR	2624668	Identifier	W_BIT		2624256	1					
ANR	2624669	ExpressionStatement	input ++	330:3:7614:7621	2624256	1	True				
ANR	2624670	PostIncDecOperationExpression	input ++		2624256	0					
ANR	2624671	Identifier	input		2624256	0					
ANR	2624672	IncDec	++		2624256	1					
ANR	2624673	IfStatement	if ( ( * input == 'b' ) && ( B_BIT & allowed_mask ) )		2624256	21					
ANR	2624674	Condition	( * input == 'b' ) && ( B_BIT & allowed_mask )	332:6:7633:7673	2624256	0	True				
ANR	2624675	AndExpression	( * input == 'b' ) && ( B_BIT & allowed_mask )		2624256	0		&&			
ANR	2624676	EqualityExpression	* input == 'b'		2624256	0		==			
ANR	2624677	UnaryOperationExpression	* input		2624256	0					
ANR	2624678	UnaryOperator	*		2624256	0					
ANR	2624679	Identifier	input		2624256	1					
ANR	2624680	PrimaryExpression	'b'		2624256	1					
ANR	2624681	BitAndExpression	B_BIT & allowed_mask		2624256	1		&			
ANR	2624682	Identifier	B_BIT		2624256	0					
ANR	2624683	Identifier	allowed_mask		2624256	1					
ANR	2624684	CompoundStatement		71:49:1714:1714	2624256	1					
ANR	2624685	ExpressionStatement	res |= B_BIT	333:3:7681:7693	2624256	0	True				
ANR	2624686	AssignmentExpression	res |= B_BIT		2624256	0		|=			
ANR	2624687	Identifier	res		2624256	0					
ANR	2624688	Identifier	B_BIT		2624256	1					
ANR	2624689	ExpressionStatement	input ++	334:3:7698:7705	2624256	1	True				
ANR	2624690	PostIncDecOperationExpression	input ++		2624256	0					
ANR	2624691	Identifier	input		2624256	0					
ANR	2624692	IncDec	++		2624256	1					
ANR	2624693	ElseStatement	else		2624256	0					
ANR	2624694	IfStatement	if ( ( * input == 'h' ) && ( H_BIT & allowed_mask ) )		2624256	0					
ANR	2624695	Condition	( * input == 'h' ) && ( H_BIT & allowed_mask )	336:13:7729:7769	2624256	0	True				
ANR	2624696	AndExpression	( * input == 'h' ) && ( H_BIT & allowed_mask )		2624256	0		&&			
ANR	2624697	EqualityExpression	* input == 'h'		2624256	0		==			
ANR	2624698	UnaryOperationExpression	* input		2624256	0					
ANR	2624699	UnaryOperator	*		2624256	0					
ANR	2624700	Identifier	input		2624256	1					
ANR	2624701	PrimaryExpression	'h'		2624256	1					
ANR	2624702	BitAndExpression	H_BIT & allowed_mask		2624256	1		&			
ANR	2624703	Identifier	H_BIT		2624256	0					
ANR	2624704	Identifier	allowed_mask		2624256	1					
ANR	2624705	CompoundStatement		75:56:1810:1810	2624256	1					
ANR	2624706	ExpressionStatement	res |= H_BIT	337:3:7777:7789	2624256	0	True				
ANR	2624707	AssignmentExpression	res |= H_BIT		2624256	0		|=			
ANR	2624708	Identifier	res		2624256	0					
ANR	2624709	Identifier	H_BIT		2624256	1					
ANR	2624710	ExpressionStatement	input ++	338:3:7794:7801	2624256	1	True				
ANR	2624711	PostIncDecOperationExpression	input ++		2624256	0					
ANR	2624712	Identifier	input		2624256	0					
ANR	2624713	IncDec	++		2624256	1					
ANR	2624714	ElseStatement	else		2624256	0					
ANR	2624715	IfStatement	if ( ( * input == 'd' ) && ( D_BIT & allowed_mask ) )		2624256	0					
ANR	2624716	Condition	( * input == 'd' ) && ( D_BIT & allowed_mask )	340:6:7818:7858	2624256	0	True				
ANR	2624717	AndExpression	( * input == 'd' ) && ( D_BIT & allowed_mask )		2624256	0		&&			
ANR	2624718	EqualityExpression	* input == 'd'		2624256	0		==			
ANR	2624719	UnaryOperationExpression	* input		2624256	0					
ANR	2624720	UnaryOperator	*		2624256	0					
ANR	2624721	Identifier	input		2624256	1					
ANR	2624722	PrimaryExpression	'd'		2624256	1					
ANR	2624723	BitAndExpression	D_BIT & allowed_mask		2624256	1		&			
ANR	2624724	Identifier	D_BIT		2624256	0					
ANR	2624725	Identifier	allowed_mask		2624256	1					
ANR	2624726	CompoundStatement		79:49:1899:1899	2624256	1					
ANR	2624727	ExpressionStatement	res |= D_BIT	341:3:7866:7878	2624256	0	True				
ANR	2624728	AssignmentExpression	res |= D_BIT		2624256	0		|=			
ANR	2624729	Identifier	res		2624256	0					
ANR	2624730	Identifier	D_BIT		2624256	1					
ANR	2624731	ExpressionStatement	input ++	342:3:7883:7890	2624256	1	True				
ANR	2624732	PostIncDecOperationExpression	input ++		2624256	0					
ANR	2624733	Identifier	input		2624256	0					
ANR	2624734	IncDec	++		2624256	1					
ANR	2624735	IfStatement	if ( ( * input == 't' ) && ( T_BIT & allowed_mask ) )		2624256	22					
ANR	2624736	Condition	( * input == 't' ) && ( T_BIT & allowed_mask )	344:6:7902:7942	2624256	0	True				
ANR	2624737	AndExpression	( * input == 't' ) && ( T_BIT & allowed_mask )		2624256	0		&&			
ANR	2624738	EqualityExpression	* input == 't'		2624256	0		==			
ANR	2624739	UnaryOperationExpression	* input		2624256	0					
ANR	2624740	UnaryOperator	*		2624256	0					
ANR	2624741	Identifier	input		2624256	1					
ANR	2624742	PrimaryExpression	't'		2624256	1					
ANR	2624743	BitAndExpression	T_BIT & allowed_mask		2624256	1		&			
ANR	2624744	Identifier	T_BIT		2624256	0					
ANR	2624745	Identifier	allowed_mask		2624256	1					
ANR	2624746	CompoundStatement		83:49:1983:1983	2624256	1					
ANR	2624747	ExpressionStatement	res |= T_BIT	345:3:7950:7962	2624256	0	True				
ANR	2624748	AssignmentExpression	res |= T_BIT		2624256	0		|=			
ANR	2624749	Identifier	res		2624256	0					
ANR	2624750	Identifier	T_BIT		2624256	1					
ANR	2624751	ExpressionStatement	input ++	346:3:7967:7974	2624256	1	True				
ANR	2624752	PostIncDecOperationExpression	input ++		2624256	0					
ANR	2624753	Identifier	input		2624256	0					
ANR	2624754	IncDec	++		2624256	1					
ANR	2624755	IfStatement	if ( ( * input == 's' ) && ( S_BIT & allowed_mask ) )		2624256	23					
ANR	2624756	Condition	( * input == 's' ) && ( S_BIT & allowed_mask )	348:6:7986:8026	2624256	0	True				
ANR	2624757	AndExpression	( * input == 's' ) && ( S_BIT & allowed_mask )		2624256	0		&&			
ANR	2624758	EqualityExpression	* input == 's'		2624256	0		==			
ANR	2624759	UnaryOperationExpression	* input		2624256	0					
ANR	2624760	UnaryOperator	*		2624256	0					
ANR	2624761	Identifier	input		2624256	1					
ANR	2624762	PrimaryExpression	's'		2624256	1					
ANR	2624763	BitAndExpression	S_BIT & allowed_mask		2624256	1		&			
ANR	2624764	Identifier	S_BIT		2624256	0					
ANR	2624765	Identifier	allowed_mask		2624256	1					
ANR	2624766	CompoundStatement		87:49:2067:2067	2624256	1					
ANR	2624767	ExpressionStatement	res |= S_BIT	349:3:8034:8046	2624256	0	True				
ANR	2624768	AssignmentExpression	res |= S_BIT		2624256	0		|=			
ANR	2624769	Identifier	res		2624256	0					
ANR	2624770	Identifier	S_BIT		2624256	1					
ANR	2624771	ExpressionStatement	input ++	350:3:8051:8058	2624256	1	True				
ANR	2624772	PostIncDecOperationExpression	input ++		2624256	0					
ANR	2624773	Identifier	input		2624256	0					
ANR	2624774	IncDec	++		2624256	1					
ANR	2624775	ExpressionStatement	res |= cqcheck ( & input )	352:2:8066:8089	2624256	24	True				
ANR	2624776	AssignmentExpression	res |= cqcheck ( & input )		2624256	0		|=			
ANR	2624777	Identifier	res		2624256	0					
ANR	2624778	CallExpression	cqcheck ( & input )		2624256	1					
ANR	2624779	Callee	cqcheck		2624256	0					
ANR	2624780	Identifier	cqcheck		2624256	0					
ANR	2624781	ArgumentList	& input		2624256	1					
ANR	2624782	Argument	& input		2624256	0					
ANR	2624783	UnaryOperationExpression	& input		2624256	0					
ANR	2624784	UnaryOperator	&		2624256	0					
ANR	2624785	Identifier	input		2624256	1					
ANR	2624786	IfStatement	if ( ( * input == 'r' ) && ( R_BIT & allowed_mask ) )		2624256	25					
ANR	2624787	Condition	( * input == 'r' ) && ( R_BIT & allowed_mask )	353:6:8097:8137	2624256	0	True				
ANR	2624788	AndExpression	( * input == 'r' ) && ( R_BIT & allowed_mask )		2624256	0		&&			
ANR	2624789	EqualityExpression	* input == 'r'		2624256	0		==			
ANR	2624790	UnaryOperationExpression	* input		2624256	0					
ANR	2624791	UnaryOperator	*		2624256	0					
ANR	2624792	Identifier	input		2624256	1					
ANR	2624793	PrimaryExpression	'r'		2624256	1					
ANR	2624794	BitAndExpression	R_BIT & allowed_mask		2624256	1		&			
ANR	2624795	Identifier	R_BIT		2624256	0					
ANR	2624796	Identifier	allowed_mask		2624256	1					
ANR	2624797	CompoundStatement		92:49:2178:2178	2624256	1					
ANR	2624798	ExpressionStatement	res |= R_BIT	354:3:8145:8157	2624256	0	True				
ANR	2624799	AssignmentExpression	res |= R_BIT		2624256	0		|=			
ANR	2624800	Identifier	res		2624256	0					
ANR	2624801	Identifier	R_BIT		2624256	1					
ANR	2624802	ExpressionStatement	input ++	355:3:8162:8169	2624256	1	True				
ANR	2624803	PostIncDecOperationExpression	input ++		2624256	0					
ANR	2624804	Identifier	input		2624256	0					
ANR	2624805	IncDec	++		2624256	1					
ANR	2624806	ExpressionStatement	res |= cqcheck ( & input )	357:2:8177:8200	2624256	26	True				
ANR	2624807	AssignmentExpression	res |= cqcheck ( & input )		2624256	0		|=			
ANR	2624808	Identifier	res		2624256	0					
ANR	2624809	CallExpression	cqcheck ( & input )		2624256	1					
ANR	2624810	Callee	cqcheck		2624256	0					
ANR	2624811	Identifier	cqcheck		2624256	0					
ANR	2624812	ArgumentList	& input		2624256	1					
ANR	2624813	Argument	& input		2624256	0					
ANR	2624814	UnaryOperationExpression	& input		2624256	0					
ANR	2624815	UnaryOperator	&		2624256	0					
ANR	2624816	Identifier	input		2624256	1					
ANR	2624817	IfStatement	if ( ( * input == '2' ) && ( TWO_BIT & allowed_mask ) )		2624256	27					
ANR	2624818	Condition	( * input == '2' ) && ( TWO_BIT & allowed_mask )	358:6:8208:8250	2624256	0	True				
ANR	2624819	AndExpression	( * input == '2' ) && ( TWO_BIT & allowed_mask )		2624256	0		&&			
ANR	2624820	EqualityExpression	* input == '2'		2624256	0		==			
ANR	2624821	UnaryOperationExpression	* input		2624256	0					
ANR	2624822	UnaryOperator	*		2624256	0					
ANR	2624823	Identifier	input		2624256	1					
ANR	2624824	PrimaryExpression	'2'		2624256	1					
ANR	2624825	BitAndExpression	TWO_BIT & allowed_mask		2624256	1		&			
ANR	2624826	Identifier	TWO_BIT		2624256	0					
ANR	2624827	Identifier	allowed_mask		2624256	1					
ANR	2624828	CompoundStatement		97:51:2291:2291	2624256	1					
ANR	2624829	ExpressionStatement	res |= TWO_BIT	359:3:8258:8272	2624256	0	True				
ANR	2624830	AssignmentExpression	res |= TWO_BIT		2624256	0		|=			
ANR	2624831	Identifier	res		2624256	0					
ANR	2624832	Identifier	TWO_BIT		2624256	1					
ANR	2624833	ExpressionStatement	input ++	360:3:8277:8284	2624256	1	True				
ANR	2624834	PostIncDecOperationExpression	input ++		2624256	0					
ANR	2624835	Identifier	input		2624256	0					
ANR	2624836	IncDec	++		2624256	1					
ANR	2624837	IfStatement	if ( ( * input == '8' ) && ( EIGHT_BIT & allowed_mask ) )		2624256	28					
ANR	2624838	Condition	( * input == '8' ) && ( EIGHT_BIT & allowed_mask )	362:6:8296:8340	2624256	0	True				
ANR	2624839	AndExpression	( * input == '8' ) && ( EIGHT_BIT & allowed_mask )		2624256	0		&&			
ANR	2624840	EqualityExpression	* input == '8'		2624256	0		==			
ANR	2624841	UnaryOperationExpression	* input		2624256	0					
ANR	2624842	UnaryOperator	*		2624256	0					
ANR	2624843	Identifier	input		2624256	1					
ANR	2624844	PrimaryExpression	'8'		2624256	1					
ANR	2624845	BitAndExpression	EIGHT_BIT & allowed_mask		2624256	1		&			
ANR	2624846	Identifier	EIGHT_BIT		2624256	0					
ANR	2624847	Identifier	allowed_mask		2624256	1					
ANR	2624848	CompoundStatement		101:53:2381:2381	2624256	1					
ANR	2624849	ExpressionStatement	res |= EIGHT_BIT	363:3:8348:8364	2624256	0	True				
ANR	2624850	AssignmentExpression	res |= EIGHT_BIT		2624256	0		|=			
ANR	2624851	Identifier	res		2624256	0					
ANR	2624852	Identifier	EIGHT_BIT		2624256	1					
ANR	2624853	ExpressionStatement	input ++	364:3:8369:8376	2624256	1	True				
ANR	2624854	PostIncDecOperationExpression	input ++		2624256	0					
ANR	2624855	Identifier	input		2624256	0					
ANR	2624856	IncDec	++		2624256	1					
ANR	2624857	IfStatement	"if ( ( r_str_startswith ( input , ""16"" ) ) && ( SIXTEEN_BIT & allowed_mask ) )"		2624256	29					
ANR	2624858	Condition	"( r_str_startswith ( input , ""16"" ) ) && ( SIXTEEN_BIT & allowed_mask )"	366:6:8388:8451	2624256	0	True				
ANR	2624859	AndExpression	"( r_str_startswith ( input , ""16"" ) ) && ( SIXTEEN_BIT & allowed_mask )"		2624256	0		&&			
ANR	2624860	CallExpression	"r_str_startswith ( input , ""16"" )"		2624256	0					
ANR	2624861	Callee	r_str_startswith		2624256	0					
ANR	2624862	Identifier	r_str_startswith		2624256	0					
ANR	2624863	ArgumentList	input		2624256	1					
ANR	2624864	Argument	input		2624256	0					
ANR	2624865	Identifier	input		2624256	0					
ANR	2624866	Argument	"""16"""		2624256	1					
ANR	2624867	PrimaryExpression	"""16"""		2624256	0					
ANR	2624868	BitAndExpression	SIXTEEN_BIT & allowed_mask		2624256	1		&			
ANR	2624869	Identifier	SIXTEEN_BIT		2624256	0					
ANR	2624870	Identifier	allowed_mask		2624256	1					
ANR	2624871	CompoundStatement		105:72:2492:2492	2624256	1					
ANR	2624872	ExpressionStatement	res |= SIXTEEN_BIT	367:3:8459:8477	2624256	0	True				
ANR	2624873	AssignmentExpression	res |= SIXTEEN_BIT		2624256	0		|=			
ANR	2624874	Identifier	res		2624256	0					
ANR	2624875	Identifier	SIXTEEN_BIT		2624256	1					
ANR	2624876	ExpressionStatement	input += 2	368:3:8482:8492	2624256	1	True				
ANR	2624877	AssignmentExpression	input += 2		2624256	0		+=			
ANR	2624878	Identifier	input		2624256	0					
ANR	2624879	PrimaryExpression	2		2624256	1					
ANR	2624880	ExpressionStatement	res |= cqcheck ( & input )	370:2:8500:8523	2624256	30	True				
ANR	2624881	AssignmentExpression	res |= cqcheck ( & input )		2624256	0		|=			
ANR	2624882	Identifier	res		2624256	0					
ANR	2624883	CallExpression	cqcheck ( & input )		2624256	1					
ANR	2624884	Callee	cqcheck		2624256	0					
ANR	2624885	Identifier	cqcheck		2624256	0					
ANR	2624886	ArgumentList	& input		2624256	1					
ANR	2624887	Argument	& input		2624256	0					
ANR	2624888	UnaryOperationExpression	& input		2624256	0					
ANR	2624889	UnaryOperator	&		2624256	0					
ANR	2624890	Identifier	input		2624256	1					
ANR	2624891	IfStatement	if ( ( * input == 'l' ) && ( L_BIT & allowed_mask ) )		2624256	31					
ANR	2624892	Condition	( * input == 'l' ) && ( L_BIT & allowed_mask )	371:6:8531:8571	2624256	0	True				
ANR	2624893	AndExpression	( * input == 'l' ) && ( L_BIT & allowed_mask )		2624256	0		&&			
ANR	2624894	EqualityExpression	* input == 'l'		2624256	0		==			
ANR	2624895	UnaryOperationExpression	* input		2624256	0					
ANR	2624896	UnaryOperator	*		2624256	0					
ANR	2624897	Identifier	input		2624256	1					
ANR	2624898	PrimaryExpression	'l'		2624256	1					
ANR	2624899	BitAndExpression	L_BIT & allowed_mask		2624256	1		&			
ANR	2624900	Identifier	L_BIT		2624256	0					
ANR	2624901	Identifier	allowed_mask		2624256	1					
ANR	2624902	CompoundStatement		110:49:2612:2612	2624256	1					
ANR	2624903	ExpressionStatement	res |= L_BIT	372:3:8579:8591	2624256	0	True				
ANR	2624904	AssignmentExpression	res |= L_BIT		2624256	0		|=			
ANR	2624905	Identifier	res		2624256	0					
ANR	2624906	Identifier	L_BIT		2624256	1					
ANR	2624907	ExpressionStatement	input ++	373:3:8596:8603	2624256	1	True				
ANR	2624908	PostIncDecOperationExpression	input ++		2624256	0					
ANR	2624909	Identifier	input		2624256	0					
ANR	2624910	IncDec	++		2624256	1					
ANR	2624911	IfStatement	if ( ( * input == 'x' ) && ( X_BIT & allowed_mask ) )		2624256	32					
ANR	2624912	Condition	( * input == 'x' ) && ( X_BIT & allowed_mask )	375:6:8615:8655	2624256	0	True				
ANR	2624913	AndExpression	( * input == 'x' ) && ( X_BIT & allowed_mask )		2624256	0		&&			
ANR	2624914	EqualityExpression	* input == 'x'		2624256	0		==			
ANR	2624915	UnaryOperationExpression	* input		2624256	0					
ANR	2624916	UnaryOperator	*		2624256	0					
ANR	2624917	Identifier	input		2624256	1					
ANR	2624918	PrimaryExpression	'x'		2624256	1					
ANR	2624919	BitAndExpression	X_BIT & allowed_mask		2624256	1		&			
ANR	2624920	Identifier	X_BIT		2624256	0					
ANR	2624921	Identifier	allowed_mask		2624256	1					
ANR	2624922	CompoundStatement		114:49:2696:2696	2624256	1					
ANR	2624923	ExpressionStatement	res |= X_BIT	376:3:8663:8675	2624256	0	True				
ANR	2624924	AssignmentExpression	res |= X_BIT		2624256	0		|=			
ANR	2624925	Identifier	res		2624256	0					
ANR	2624926	Identifier	X_BIT		2624256	1					
ANR	2624927	ExpressionStatement	input ++	377:3:8680:8687	2624256	1	True				
ANR	2624928	PostIncDecOperationExpression	input ++		2624256	0					
ANR	2624929	Identifier	input		2624256	0					
ANR	2624930	IncDec	++		2624256	1					
ANR	2624931	ExpressionStatement	res |= cqcheck ( & input )	379:2:8695:8718	2624256	33	True				
ANR	2624932	AssignmentExpression	res |= cqcheck ( & input )		2624256	0		|=			
ANR	2624933	Identifier	res		2624256	0					
ANR	2624934	CallExpression	cqcheck ( & input )		2624256	1					
ANR	2624935	Callee	cqcheck		2624256	0					
ANR	2624936	Identifier	cqcheck		2624256	0					
ANR	2624937	ArgumentList	& input		2624256	1					
ANR	2624938	Argument	& input		2624256	0					
ANR	2624939	UnaryOperationExpression	& input		2624256	0					
ANR	2624940	UnaryOperator	&		2624256	0					
ANR	2624941	Identifier	input		2624256	1					
ANR	2624942	IfStatement	"if ( ( r_str_startswith ( input , ""id"" ) ) && ( ID_BIT & allowed_mask ) )"		2624256	34					
ANR	2624943	Condition	"( r_str_startswith ( input , ""id"" ) ) && ( ID_BIT & allowed_mask )"	380:6:8726:8784	2624256	0	True				
ANR	2624944	AndExpression	"( r_str_startswith ( input , ""id"" ) ) && ( ID_BIT & allowed_mask )"		2624256	0		&&			
ANR	2624945	CallExpression	"r_str_startswith ( input , ""id"" )"		2624256	0					
ANR	2624946	Callee	r_str_startswith		2624256	0					
ANR	2624947	Identifier	r_str_startswith		2624256	0					
ANR	2624948	ArgumentList	input		2624256	1					
ANR	2624949	Argument	input		2624256	0					
ANR	2624950	Identifier	input		2624256	0					
ANR	2624951	Argument	"""id"""		2624256	1					
ANR	2624952	PrimaryExpression	"""id"""		2624256	0					
ANR	2624953	BitAndExpression	ID_BIT & allowed_mask		2624256	1		&			
ANR	2624954	Identifier	ID_BIT		2624256	0					
ANR	2624955	Identifier	allowed_mask		2624256	1					
ANR	2624956	CompoundStatement		119:67:2825:2825	2624256	1					
ANR	2624957	ExpressionStatement	res |= ID_BIT	381:3:8792:8805	2624256	0	True				
ANR	2624958	AssignmentExpression	res |= ID_BIT		2624256	0		|=			
ANR	2624959	Identifier	res		2624256	0					
ANR	2624960	Identifier	ID_BIT		2624256	1					
ANR	2624961	ExpressionStatement	input += 2	382:3:8810:8820	2624256	1	True				
ANR	2624962	AssignmentExpression	input += 2		2624256	0		+=			
ANR	2624963	Identifier	input		2624256	0					
ANR	2624964	PrimaryExpression	2		2624256	1					
ANR	2624965	IfStatement	"if ( ( r_str_startswith ( input , ""ie"" ) ) && ( IE_BIT & allowed_mask ) )"		2624256	35					
ANR	2624966	Condition	"( r_str_startswith ( input , ""ie"" ) ) && ( IE_BIT & allowed_mask )"	384:6:8832:8890	2624256	0	True				
ANR	2624967	AndExpression	"( r_str_startswith ( input , ""ie"" ) ) && ( IE_BIT & allowed_mask )"		2624256	0		&&			
ANR	2624968	CallExpression	"r_str_startswith ( input , ""ie"" )"		2624256	0					
ANR	2624969	Callee	r_str_startswith		2624256	0					
ANR	2624970	Identifier	r_str_startswith		2624256	0					
ANR	2624971	ArgumentList	input		2624256	1					
ANR	2624972	Argument	input		2624256	0					
ANR	2624973	Identifier	input		2624256	0					
ANR	2624974	Argument	"""ie"""		2624256	1					
ANR	2624975	PrimaryExpression	"""ie"""		2624256	0					
ANR	2624976	BitAndExpression	IE_BIT & allowed_mask		2624256	1		&			
ANR	2624977	Identifier	IE_BIT		2624256	0					
ANR	2624978	Identifier	allowed_mask		2624256	1					
ANR	2624979	CompoundStatement		123:67:2931:2931	2624256	1					
ANR	2624980	ExpressionStatement	res |= IE_BIT	385:3:8898:8911	2624256	0	True				
ANR	2624981	AssignmentExpression	res |= IE_BIT		2624256	0		|=			
ANR	2624982	Identifier	res		2624256	0					
ANR	2624983	Identifier	IE_BIT		2624256	1					
ANR	2624984	ExpressionStatement	input += 2	386:3:8916:8926	2624256	1	True				
ANR	2624985	AssignmentExpression	input += 2		2624256	0		+=			
ANR	2624986	Identifier	input		2624256	0					
ANR	2624987	PrimaryExpression	2		2624256	1					
ANR	2624988	ExpressionStatement	res |= cqcheck ( & input )	388:2:8934:8957	2624256	36	True				
ANR	2624989	AssignmentExpression	res |= cqcheck ( & input )		2624256	0		|=			
ANR	2624990	Identifier	res		2624256	0					
ANR	2624991	CallExpression	cqcheck ( & input )		2624256	1					
ANR	2624992	Callee	cqcheck		2624256	0					
ANR	2624993	Identifier	cqcheck		2624256	0					
ANR	2624994	ArgumentList	& input		2624256	1					
ANR	2624995	Argument	& input		2624256	0					
ANR	2624996	UnaryOperationExpression	& input		2624256	0					
ANR	2624997	UnaryOperator	&		2624256	0					
ANR	2624998	Identifier	input		2624256	1					
ANR	2624999	IfStatement	"if ( ( r_str_startswith ( input , ""sh"" ) ) && ( SH_BIT & allowed_mask ) )"		2624256	37					
ANR	2625000	Condition	"( r_str_startswith ( input , ""sh"" ) ) && ( SH_BIT & allowed_mask )"	389:6:8965:9023	2624256	0	True				
ANR	2625001	AndExpression	"( r_str_startswith ( input , ""sh"" ) ) && ( SH_BIT & allowed_mask )"		2624256	0		&&			
ANR	2625002	CallExpression	"r_str_startswith ( input , ""sh"" )"		2624256	0					
ANR	2625003	Callee	r_str_startswith		2624256	0					
ANR	2625004	Identifier	r_str_startswith		2624256	0					
ANR	2625005	ArgumentList	input		2624256	1					
ANR	2625006	Argument	input		2624256	0					
ANR	2625007	Identifier	input		2624256	0					
ANR	2625008	Argument	"""sh"""		2624256	1					
ANR	2625009	PrimaryExpression	"""sh"""		2624256	0					
ANR	2625010	BitAndExpression	SH_BIT & allowed_mask		2624256	1		&			
ANR	2625011	Identifier	SH_BIT		2624256	0					
ANR	2625012	Identifier	allowed_mask		2624256	1					
ANR	2625013	CompoundStatement		128:67:3064:3064	2624256	1					
ANR	2625014	ExpressionStatement	res |= SH_BIT	390:3:9031:9044	2624256	0	True				
ANR	2625015	AssignmentExpression	res |= SH_BIT		2624256	0		|=			
ANR	2625016	Identifier	res		2624256	0					
ANR	2625017	Identifier	SH_BIT		2624256	1					
ANR	2625018	ExpressionStatement	input += 2	391:3:9049:9059	2624256	1	True				
ANR	2625019	AssignmentExpression	input += 2		2624256	0		+=			
ANR	2625020	Identifier	input		2624256	0					
ANR	2625021	PrimaryExpression	2		2624256	1					
ANR	2625022	ExpressionStatement	res |= cqcheck ( & input )	393:2:9067:9090	2624256	38	True				
ANR	2625023	AssignmentExpression	res |= cqcheck ( & input )		2624256	0		|=			
ANR	2625024	Identifier	res		2624256	0					
ANR	2625025	CallExpression	cqcheck ( & input )		2624256	1					
ANR	2625026	Callee	cqcheck		2624256	0					
ANR	2625027	Identifier	cqcheck		2624256	0					
ANR	2625028	ArgumentList	& input		2624256	1					
ANR	2625029	Argument	& input		2624256	0					
ANR	2625030	UnaryOperationExpression	& input		2624256	0					
ANR	2625031	UnaryOperator	&		2624256	0					
ANR	2625032	Identifier	input		2624256	1					
ANR	2625033	IfStatement	if ( ! ( res & C_MATCH_BIT ) )		2624256	39					
ANR	2625034	Condition	! ( res & C_MATCH_BIT )	394:6:9098:9117	2624256	0	True				
ANR	2625035	UnaryOperationExpression	! ( res & C_MATCH_BIT )		2624256	0					
ANR	2625036	UnaryOperator	!		2624256	0					
ANR	2625037	BitAndExpression	res & C_MATCH_BIT		2624256	1		&			
ANR	2625038	Identifier	res		2624256	0					
ANR	2625039	Identifier	C_MATCH_BIT		2624256	1					
ANR	2625040	CompoundStatement		133:28:3158:3158	2624256	1					
ANR	2625041	ExpressionStatement	res |= 15 << 2	395:3:9125:9139	2624256	0	True				
ANR	2625042	AssignmentExpression	res |= 15 << 2		2624256	0		|=			
ANR	2625043	Identifier	res		2624256	0					
ANR	2625044	ShiftExpression	15 << 2		2624256	1		<<			
ANR	2625045	PrimaryExpression	15		2624256	0					
ANR	2625046	PrimaryExpression	2		2624256	1					
ANR	2625047	IfStatement	if ( * input == 0 )		2624256	40					
ANR	2625048	Condition	* input == 0	397:6:9182:9192	2624256	0	True				
ANR	2625049	EqualityExpression	* input == 0		2624256	0		==			
ANR	2625050	UnaryOperationExpression	* input		2624256	0					
ANR	2625051	UnaryOperator	*		2624256	0					
ANR	2625052	Identifier	input		2624256	1					
ANR	2625053	PrimaryExpression	0		2624256	1					
ANR	2625054	CompoundStatement		136:19:3233:3233	2624256	1					
ANR	2625055	ReturnStatement	return res ;	398:3:9200:9210	2624256	0	True				
ANR	2625056	Identifier	res		2624256	0					
ANR	2625057	ReturnStatement	return 0 ;	401:1:9220:9228	2624256	4	True				
ANR	2625058	PrimaryExpression	0		2624256	0					
ANR	2625059	ReturnType	static ut64		2624256	1					
ANR	2625060	Identifier	opmask		2624256	2					
ANR	2625061	ParameterList	"char * input , char * opcode , ut64 allowed_mask"		2624256	3					
ANR	2625062	Parameter	char * input	262:19:5915:5925	2624256	0	True				
ANR	2625063	ParameterType	char *		2624256	0					
ANR	2625064	Identifier	input		2624256	1					
ANR	2625065	Parameter	char * opcode	262:32:5928:5939	2624256	1	True				
ANR	2625066	ParameterType	char *		2624256	0					
ANR	2625067	Identifier	opcode		2624256	1					
ANR	2625068	Parameter	ut64 allowed_mask	262:46:5942:5958	2624256	2	True				
ANR	2625069	ParameterType	ut64		2624256	0					
ANR	2625070	Identifier	allowed_mask		2624256	1					
ANR	2625071	CFGEntryNode	ENTRY		2624256		True				
ANR	2625072	CFGExitNode	EXIT		2624256		True				
ANR	2625073	Symbol	BB_BIT		2624256						
ANR	2625074	Symbol	IE_BIT		2624256						
ANR	2625075	Symbol	X_BIT		2624256						
ANR	2625076	Symbol	SH_BIT		2624256						
ANR	2625077	Symbol	* input		2624256						
ANR	2625078	Symbol	T_BIT		2624256						
ANR	2625079	Symbol	SIXTEEN_BIT		2624256						
ANR	2625080	Symbol	WT_BIT		2624256						
ANR	2625081	Symbol	opcode		2624256						
ANR	2625082	Symbol	TT_BIT		2624256						
ANR	2625083	Symbol	strlen		2624256						
ANR	2625084	Symbol	M_BIT		2624256						
ANR	2625085	Symbol	& input		2624256						
ANR	2625086	Symbol	H_BIT		2624256						
ANR	2625087	Symbol	IA_BIT		2624256						
ANR	2625088	Symbol	D_BIT		2624256						
ANR	2625089	Symbol	cqcheck		2624256						
ANR	2625090	Symbol	TWO_BIT		2624256						
ANR	2625091	Symbol	r_str_startswith		2624256						
ANR	2625092	Symbol	res		2624256						
ANR	2625093	Symbol	L_BIT		2624256						
ANR	2625094	Symbol	allowed_mask		2624256						
ANR	2625095	Symbol	false		2624256						
ANR	2625096	Symbol	BT_BIT		2624256						
ANR	2625097	Symbol	R_BIT		2624256						
ANR	2625098	Symbol	input		2624256						
ANR	2625099	Symbol	FD_BIT		2624256						
ANR	2625100	Symbol	W_BIT		2624256						
ANR	2625101	Symbol	EA_BIT		2624256						
ANR	2625102	Symbol	ID_BIT		2624256						
ANR	2625103	Symbol	EIGHT_BIT		2624256						
ANR	2625104	Symbol	C_MATCH_BIT		2624256						
ANR	2625105	Symbol	TB_BIT		2624256						
ANR	2625106	Symbol	WB_BIT		2624256						
ANR	2625107	Symbol	DB_BIT		2624256						
ANR	2625108	Symbol	S_BIT		2624256						
ANR	2625109	Symbol	B_BIT		2624256						
ANR	2625110	Function	itmask	404:0:9233:9753							
ANR	2625111	FunctionDef	itmask (char * input)		2625110	0					
ANR	2625112	CompoundStatement		404:32:9265:9753	2625110	0					
ANR	2625113	IdentifierDeclStatement	ut32 res = 0 ;	405:1:9268:9280	2625110	0	True				
ANR	2625114	IdentifierDecl	res = 0		2625110	0					
ANR	2625115	IdentifierDeclType	ut32		2625110	0					
ANR	2625116	Identifier	res		2625110	1					
ANR	2625117	AssignmentExpression	res = 0		2625110	2		=			
ANR	2625118	Identifier	res		2625110	0					
ANR	2625119	PrimaryExpression	0		2625110	1					
ANR	2625120	IdentifierDeclStatement	"ut32 i , length ;"	406:1:9283:9297	2625110	1	True				
ANR	2625121	IdentifierDecl	i		2625110	0					
ANR	2625122	IdentifierDeclType	ut32		2625110	0					
ANR	2625123	Identifier	i		2625110	1					
ANR	2625124	IdentifierDecl	length		2625110	1					
ANR	2625125	IdentifierDeclType	ut32		2625110	0					
ANR	2625126	Identifier	length		2625110	1					
ANR	2625127	ExpressionStatement	"r_str_case ( input , false )"	407:1:9300:9325	2625110	2	True				
ANR	2625128	CallExpression	"r_str_case ( input , false )"		2625110	0					
ANR	2625129	Callee	r_str_case		2625110	0					
ANR	2625130	Identifier	r_str_case		2625110	0					
ANR	2625131	ArgumentList	input		2625110	1					
ANR	2625132	Argument	input		2625110	0					
ANR	2625133	Identifier	input		2625110	0					
ANR	2625134	Argument	false		2625110	1					
ANR	2625135	Identifier	false		2625110	0					
ANR	2625136	IfStatement	if ( 2 > strlen ( input ) )		2625110	3					
ANR	2625137	Condition	2 > strlen ( input )	408:5:9332:9349	2625110	0	True				
ANR	2625138	RelationalExpression	2 > strlen ( input )		2625110	0		>			
ANR	2625139	PrimaryExpression	2		2625110	0					
ANR	2625140	CallExpression	strlen ( input )		2625110	1					
ANR	2625141	Callee	strlen		2625110	0					
ANR	2625142	Identifier	strlen		2625110	0					
ANR	2625143	ArgumentList	input		2625110	1					
ANR	2625144	Argument	input		2625110	0					
ANR	2625145	Identifier	input		2625110	0					
ANR	2625146	CompoundStatement		5:25:86:86	2625110	1					
ANR	2625147	ReturnStatement	return 0 ;	409:2:9356:9364	2625110	0	True				
ANR	2625148	PrimaryExpression	0		2625110	0					
ANR	2625149	IfStatement	"if ( r_str_startswith ( input , ""it"" ) )"		2625110	4					
ANR	2625150	Condition	"r_str_startswith ( input , ""it"" )"	411:5:9374:9403	2625110	0	True				
ANR	2625151	CallExpression	"r_str_startswith ( input , ""it"" )"		2625110	0					
ANR	2625152	Callee	r_str_startswith		2625110	0					
ANR	2625153	Identifier	r_str_startswith		2625110	0					
ANR	2625154	ArgumentList	input		2625110	1					
ANR	2625155	Argument	input		2625110	0					
ANR	2625156	Identifier	input		2625110	0					
ANR	2625157	Argument	"""it"""		2625110	1					
ANR	2625158	PrimaryExpression	"""it"""		2625110	0					
ANR	2625159	CompoundStatement		8:37:140:140	2625110	1					
ANR	2625160	ExpressionStatement	input += 2	412:2:9410:9420	2625110	0	True				
ANR	2625161	AssignmentExpression	input += 2		2625110	0		+=			
ANR	2625162	Identifier	input		2625110	0					
ANR	2625163	PrimaryExpression	2		2625110	1					
ANR	2625164	ExpressionStatement	res |= 1	413:2:9424:9432	2625110	1	True				
ANR	2625165	AssignmentExpression	res |= 1		2625110	0		|=			
ANR	2625166	Identifier	res		2625110	0					
ANR	2625167	PrimaryExpression	1		2625110	1					
ANR	2625168	IfStatement	if ( strlen ( input ) > 3 )		2625110	2					
ANR	2625169	Condition	strlen ( input ) > 3	414:6:9451:9467	2625110	0	True				
ANR	2625170	RelationalExpression	strlen ( input ) > 3		2625110	0		>			
ANR	2625171	CallExpression	strlen ( input )		2625110	0					
ANR	2625172	Callee	strlen		2625110	0					
ANR	2625173	Identifier	strlen		2625110	0					
ANR	2625174	ArgumentList	input		2625110	1					
ANR	2625175	Argument	input		2625110	0					
ANR	2625176	Identifier	input		2625110	0					
ANR	2625177	PrimaryExpression	3		2625110	1					
ANR	2625178	CompoundStatement		11:25:204:204	2625110	1					
ANR	2625179	ReturnStatement	return 0 ;	415:3:9475:9483	2625110	0	True				
ANR	2625180	PrimaryExpression	0		2625110	0					
ANR	2625181	ExpressionStatement	res |= ( strlen ( input ) & 0x3 ) << 4	417:2:9491:9525	2625110	3	True				
ANR	2625182	AssignmentExpression	res |= ( strlen ( input ) & 0x3 ) << 4		2625110	0		|=			
ANR	2625183	Identifier	res		2625110	0					
ANR	2625184	ShiftExpression	( strlen ( input ) & 0x3 ) << 4		2625110	1		<<			
ANR	2625185	BitAndExpression	strlen ( input ) & 0x3		2625110	0		&			
ANR	2625186	CallExpression	strlen ( input )		2625110	0					
ANR	2625187	Callee	strlen		2625110	0					
ANR	2625188	Identifier	strlen		2625110	0					
ANR	2625189	ArgumentList	input		2625110	1					
ANR	2625190	Argument	input		2625110	0					
ANR	2625191	Identifier	input		2625110	0					
ANR	2625192	PrimaryExpression	0x3		2625110	1					
ANR	2625193	PrimaryExpression	4		2625110	1					
ANR	2625194	ExpressionStatement	length = strlen ( input )	418:2:9529:9552	2625110	4	True				
ANR	2625195	AssignmentExpression	length = strlen ( input )		2625110	0		=			
ANR	2625196	Identifier	length		2625110	0					
ANR	2625197	CallExpression	strlen ( input )		2625110	1					
ANR	2625198	Callee	strlen		2625110	0					
ANR	2625199	Identifier	strlen		2625110	0					
ANR	2625200	ArgumentList	input		2625110	1					
ANR	2625201	Argument	input		2625110	0					
ANR	2625202	Identifier	input		2625110	0					
ANR	2625203	ForStatement	"for ( i = 0 ; i < length ; i ++ , input ++ )"		2625110	5					
ANR	2625204	ForInit	i = 0 ;	419:7:9561:9566	2625110	0	True				
ANR	2625205	AssignmentExpression	i = 0		2625110	0		=			
ANR	2625206	Identifier	i		2625110	0					
ANR	2625207	PrimaryExpression	0		2625110	1					
ANR	2625208	Condition	i < length	419:14:9568:9577	2625110	1	True				
ANR	2625209	RelationalExpression	i < length		2625110	0		<			
ANR	2625210	Identifier	i		2625110	0					
ANR	2625211	Identifier	length		2625110	1					
ANR	2625212	Expression	"i ++ , input ++"	419:26:9580:9591	2625110	2	True				
ANR	2625213	PostIncDecOperationExpression	i ++		2625110	0					
ANR	2625214	Identifier	i		2625110	0					
ANR	2625215	IncDec	++		2625110	1					
ANR	2625216	PostIncDecOperationExpression	input ++		2625110	1					
ANR	2625217	Identifier	input		2625110	0					
ANR	2625218	IncDec	++		2625110	1					
ANR	2625219	CompoundStatement		16:41:329:329	2625110	3					
ANR	2625220	IfStatement	if ( * input == 'e' )		2625110	0					
ANR	2625221	Condition	* input == 'e'	420:7:9604:9616	2625110	0	True				
ANR	2625222	EqualityExpression	* input == 'e'		2625110	0		==			
ANR	2625223	UnaryOperationExpression	* input		2625110	0					
ANR	2625224	UnaryOperator	*		2625110	0					
ANR	2625225	Identifier	input		2625110	1					
ANR	2625226	PrimaryExpression	'e'		2625110	1					
ANR	2625227	CompoundStatement		17:22:353:353	2625110	1					
ANR	2625228	ExpressionStatement	res |= 1 << ( 3 - i )	421:4:9625:9644	2625110	0	True				
ANR	2625229	AssignmentExpression	res |= 1 << ( 3 - i )		2625110	0		|=			
ANR	2625230	Identifier	res		2625110	0					
ANR	2625231	ShiftExpression	1 << ( 3 - i )		2625110	1		<<			
ANR	2625232	PrimaryExpression	1		2625110	0					
ANR	2625233	AdditiveExpression	3 - i		2625110	1		-			
ANR	2625234	PrimaryExpression	3		2625110	0					
ANR	2625235	Identifier	i		2625110	1					
ANR	2625236	ContinueStatement	continue ;	422:4:9650:9658	2625110	1	True				
ANR	2625237	IfStatement	if ( * input == 't' )		2625110	1					
ANR	2625238	Condition	* input == 't'	424:7:9672:9684	2625110	0	True				
ANR	2625239	EqualityExpression	* input == 't'		2625110	0		==			
ANR	2625240	UnaryOperationExpression	* input		2625110	0					
ANR	2625241	UnaryOperator	*		2625110	0					
ANR	2625242	Identifier	input		2625110	1					
ANR	2625243	PrimaryExpression	't'		2625110	1					
ANR	2625244	CompoundStatement		21:22:421:421	2625110	1					
ANR	2625245	ContinueStatement	continue ;	425:4:9693:9701	2625110	0	True				
ANR	2625246	ReturnStatement	return 0 ;	427:3:9711:9719	2625110	2	True				
ANR	2625247	PrimaryExpression	0		2625110	0					
ANR	2625248	ReturnStatement	return res ;	429:2:9727:9737	2625110	6	True				
ANR	2625249	Identifier	res		2625110	0					
ANR	2625250	ReturnStatement	return 0 ;	431:1:9743:9751	2625110	5	True				
ANR	2625251	PrimaryExpression	0		2625110	0					
ANR	2625252	ReturnType	static ut32		2625110	1					
ANR	2625253	Identifier	itmask		2625110	2					
ANR	2625254	ParameterList	char * input		2625110	3					
ANR	2625255	Parameter	char * input	404:19:9252:9262	2625110	0	True				
ANR	2625256	ParameterType	char *		2625110	0					
ANR	2625257	Identifier	input		2625110	1					
ANR	2625258	CFGEntryNode	ENTRY		2625110		True				
ANR	2625259	CFGExitNode	EXIT		2625110		True				
ANR	2625260	Symbol	r_str_startswith		2625110						
ANR	2625261	Symbol	input		2625110						
ANR	2625262	Symbol	res		2625110						
ANR	2625263	Symbol	strlen		2625110						
ANR	2625264	Symbol	length		2625110						
ANR	2625265	Symbol	false		2625110						
ANR	2625266	Symbol	* input		2625110						
ANR	2625267	Symbol	i		2625110						
ANR	2625268	DeclStmt									
ANR	2625269	Decl							bool	bool	err
ANR	2625270	Function	getnum	436:0:9796:10083							
ANR	2625271	FunctionDef	getnum (const char * str)		2625270	0					
ANR	2625272	CompoundStatement		436:36:9832:10083	2625270	0					
ANR	2625273	IdentifierDeclStatement	char * endptr ;	437:1:9835:9847	2625270	0	True				
ANR	2625274	IdentifierDecl	* endptr		2625270	0					
ANR	2625275	IdentifierDeclType	char *		2625270	0					
ANR	2625276	Identifier	endptr		2625270	1					
ANR	2625277	ExpressionStatement	err = false	438:1:9850:9861	2625270	1	True				
ANR	2625278	AssignmentExpression	err = false		2625270	0		=			
ANR	2625279	Identifier	err		2625270	0					
ANR	2625280	Identifier	false		2625270	1					
ANR	2625281	IdentifierDeclStatement	ut64 val ;	439:1:9864:9872	2625270	2	True				
ANR	2625282	IdentifierDecl	val		2625270	0					
ANR	2625283	IdentifierDeclType	ut64		2625270	0					
ANR	2625284	Identifier	val		2625270	1					
ANR	2625285	IfStatement	if ( ! str )		2625270	3					
ANR	2625286	Condition	! str	441:5:9880:9883	2625270	0	True				
ANR	2625287	UnaryOperationExpression	! str		2625270	0					
ANR	2625288	UnaryOperator	!		2625270	0					
ANR	2625289	Identifier	str		2625270	1					
ANR	2625290	CompoundStatement		6:11:53:53	2625270	1					
ANR	2625291	ExpressionStatement	err = true	442:2:9890:9900	2625270	0	True				
ANR	2625292	AssignmentExpression	err = true		2625270	0		=			
ANR	2625293	Identifier	err		2625270	0					
ANR	2625294	Identifier	true		2625270	1					
ANR	2625295	ReturnStatement	return 0 ;	443:2:9904:9912	2625270	1	True				
ANR	2625296	PrimaryExpression	0		2625270	0					
ANR	2625297	WhileStatement	while ( * str == '$' || * str == '#' )		2625270	4					
ANR	2625298	Condition	* str == '$' || * str == '#'	445:8:9925:9950	2625270	0	True				
ANR	2625299	OrExpression	* str == '$' || * str == '#'		2625270	0		||			
ANR	2625300	EqualityExpression	* str == '$'		2625270	0		==			
ANR	2625301	UnaryOperationExpression	* str		2625270	0					
ANR	2625302	UnaryOperator	*		2625270	0					
ANR	2625303	Identifier	str		2625270	1					
ANR	2625304	PrimaryExpression	'$'		2625270	1					
ANR	2625305	EqualityExpression	* str == '#'		2625270	1		==			
ANR	2625306	UnaryOperationExpression	* str		2625270	0					
ANR	2625307	UnaryOperator	*		2625270	0					
ANR	2625308	Identifier	str		2625270	1					
ANR	2625309	PrimaryExpression	'#'		2625270	1					
ANR	2625310	CompoundStatement		10:36:120:120	2625270	1					
ANR	2625311	ExpressionStatement	str ++	446:2:9957:9962	2625270	0	True				
ANR	2625312	PostIncDecOperationExpression	str ++		2625270	0					
ANR	2625313	Identifier	str		2625270	0					
ANR	2625314	IncDec	++		2625270	1					
ANR	2625315	ExpressionStatement	"val = strtoll ( str , & endptr , 0 )"	448:1:9968:9999	2625270	5	True				
ANR	2625316	AssignmentExpression	"val = strtoll ( str , & endptr , 0 )"		2625270	0		=			
ANR	2625317	Identifier	val		2625270	0					
ANR	2625318	CallExpression	"strtoll ( str , & endptr , 0 )"		2625270	1					
ANR	2625319	Callee	strtoll		2625270	0					
ANR	2625320	Identifier	strtoll		2625270	0					
ANR	2625321	ArgumentList	str		2625270	1					
ANR	2625322	Argument	str		2625270	0					
ANR	2625323	Identifier	str		2625270	0					
ANR	2625324	Argument	& endptr		2625270	1					
ANR	2625325	UnaryOperationExpression	& endptr		2625270	0					
ANR	2625326	UnaryOperator	&		2625270	0					
ANR	2625327	Identifier	endptr		2625270	1					
ANR	2625328	Argument	0		2625270	2					
ANR	2625329	PrimaryExpression	0		2625270	0					
ANR	2625330	IfStatement	if ( str != endptr && * endptr == '\\0' )		2625270	6					
ANR	2625331	Condition	str != endptr && * endptr == '\\0'	449:5:10006:10037	2625270	0	True				
ANR	2625332	AndExpression	str != endptr && * endptr == '\\0'		2625270	0		&&			
ANR	2625333	EqualityExpression	str != endptr		2625270	0		!=			
ANR	2625334	Identifier	str		2625270	0					
ANR	2625335	Identifier	endptr		2625270	1					
ANR	2625336	EqualityExpression	* endptr == '\\0'		2625270	1		==			
ANR	2625337	UnaryOperationExpression	* endptr		2625270	0					
ANR	2625338	UnaryOperator	*		2625270	0					
ANR	2625339	Identifier	endptr		2625270	1					
ANR	2625340	PrimaryExpression	'\\0'		2625270	1					
ANR	2625341	CompoundStatement		14:39:207:207	2625270	1					
ANR	2625342	ReturnStatement	return val ;	450:2:10044:10054	2625270	0	True				
ANR	2625343	Identifier	val		2625270	0					
ANR	2625344	ExpressionStatement	err = true	452:1:10060:10070	2625270	7	True				
ANR	2625345	AssignmentExpression	err = true		2625270	0		=			
ANR	2625346	Identifier	err		2625270	0					
ANR	2625347	Identifier	true		2625270	1					
ANR	2625348	ReturnStatement	return 0 ;	453:1:10073:10081	2625270	8	True				
ANR	2625349	PrimaryExpression	0		2625270	0					
ANR	2625350	ReturnType	static ut64		2625270	1					
ANR	2625351	Identifier	getnum		2625270	2					
ANR	2625352	ParameterList	const char * str		2625270	3					
ANR	2625353	Parameter	const char * str	436:19:9815:9829	2625270	0	True				
ANR	2625354	ParameterType	const char *		2625270	0					
ANR	2625355	Identifier	str		2625270	1					
ANR	2625356	CFGEntryNode	ENTRY		2625270		True				
ANR	2625357	CFGExitNode	EXIT		2625270		True				
ANR	2625358	Symbol	str		2625270						
ANR	2625359	Symbol	val		2625270						
ANR	2625360	Symbol	err		2625270						
ANR	2625361	Symbol	endptr		2625270						
ANR	2625362	Symbol	* endptr		2625270						
ANR	2625363	Symbol	& endptr		2625270						
ANR	2625364	Symbol	strtoll		2625270						
ANR	2625365	Symbol	false		2625270						
ANR	2625366	Symbol	true		2625270						
ANR	2625367	Symbol	* str		2625270						
ANR	2625368	Function	getnumbang	456:0:10086:10382							
ANR	2625369	FunctionDef	getnumbang (const char * str)		2625368	0					
ANR	2625370	CompoundStatement		456:40:10126:10382	2625368	0					
ANR	2625371	IdentifierDeclStatement	ut64 res ;	457:1:10129:10137	2625368	0	True				
ANR	2625372	IdentifierDecl	res		2625368	0					
ANR	2625373	IdentifierDeclType	ut64		2625368	0					
ANR	2625374	Identifier	res		2625368	1					
ANR	2625375	IfStatement	"if ( ! str || ! * str || ! r_str_endswith ( str , ""!"" ) )"		2625368	1					
ANR	2625376	Condition	"! str || ! * str || ! r_str_endswith ( str , ""!"" )"	459:5:10145:10187	2625368	0	True				
ANR	2625377	OrExpression	"! str || ! * str || ! r_str_endswith ( str , ""!"" )"		2625368	0		||			
ANR	2625378	UnaryOperationExpression	! str		2625368	0					
ANR	2625379	UnaryOperator	!		2625368	0					
ANR	2625380	Identifier	str		2625368	1					
ANR	2625381	OrExpression	"! * str || ! r_str_endswith ( str , ""!"" )"		2625368	1		||			
ANR	2625382	UnaryOperationExpression	! * str		2625368	0					
ANR	2625383	UnaryOperator	!		2625368	0					
ANR	2625384	UnaryOperationExpression	* str		2625368	1					
ANR	2625385	UnaryOperator	*		2625368	0					
ANR	2625386	Identifier	str		2625368	1					
ANR	2625387	UnaryOperationExpression	"! r_str_endswith ( str , ""!"" )"		2625368	1					
ANR	2625388	UnaryOperator	!		2625368	0					
ANR	2625389	CallExpression	"r_str_endswith ( str , ""!"" )"		2625368	1					
ANR	2625390	Callee	r_str_endswith		2625368	0					
ANR	2625391	Identifier	r_str_endswith		2625368	0					
ANR	2625392	ArgumentList	str		2625368	1					
ANR	2625393	Argument	str		2625368	0					
ANR	2625394	Identifier	str		2625368	0					
ANR	2625395	Argument	"""!"""		2625368	1					
ANR	2625396	PrimaryExpression	"""!"""		2625368	0					
ANR	2625397	CompoundStatement		4:50:63:63	2625368	1					
ANR	2625398	ExpressionStatement	err = true	460:2:10194:10204	2625368	0	True				
ANR	2625399	AssignmentExpression	err = true		2625368	0		=			
ANR	2625400	Identifier	err		2625368	0					
ANR	2625401	Identifier	true		2625368	1					
ANR	2625402	ReturnStatement	return 0 ;	461:2:10208:10216	2625368	1	True				
ANR	2625403	PrimaryExpression	0		2625368	0					
ANR	2625404	IdentifierDeclStatement	"char * temp = r_str_ndup ( str , strlen ( str ) - 1 ) ;"	463:1:10222:10269	2625368	2	True				
ANR	2625405	IdentifierDecl	"* temp = r_str_ndup ( str , strlen ( str ) - 1 )"		2625368	0					
ANR	2625406	IdentifierDeclType	char *		2625368	0					
ANR	2625407	Identifier	temp		2625368	1					
ANR	2625408	AssignmentExpression	"* temp = r_str_ndup ( str , strlen ( str ) - 1 )"		2625368	2		=			
ANR	2625409	Identifier	temp		2625368	0					
ANR	2625410	CallExpression	"r_str_ndup ( str , strlen ( str ) - 1 )"		2625368	1					
ANR	2625411	Callee	r_str_ndup		2625368	0					
ANR	2625412	Identifier	r_str_ndup		2625368	0					
ANR	2625413	ArgumentList	str		2625368	1					
ANR	2625414	Argument	str		2625368	0					
ANR	2625415	Identifier	str		2625368	0					
ANR	2625416	Argument	strlen ( str ) - 1		2625368	1					
ANR	2625417	AdditiveExpression	strlen ( str ) - 1		2625368	0		-			
ANR	2625418	CallExpression	strlen ( str )		2625368	0					
ANR	2625419	Callee	strlen		2625368	0					
ANR	2625420	Identifier	strlen		2625368	0					
ANR	2625421	ArgumentList	str		2625368	1					
ANR	2625422	Argument	str		2625368	0					
ANR	2625423	Identifier	str		2625368	0					
ANR	2625424	PrimaryExpression	1		2625368	1					
ANR	2625425	IfStatement	if ( ! temp )		2625368	3					
ANR	2625426	Condition	! temp	464:5:10276:10280	2625368	0	True				
ANR	2625427	UnaryOperationExpression	! temp		2625368	0					
ANR	2625428	UnaryOperator	!		2625368	0					
ANR	2625429	Identifier	temp		2625368	1					
ANR	2625430	CompoundStatement		9:12:156:156	2625368	1					
ANR	2625431	ReturnStatement	return - 1 ;	465:2:10287:10296	2625368	0	True				
ANR	2625432	UnaryOperationExpression	- 1		2625368	0					
ANR	2625433	UnaryOperator	-		2625368	0					
ANR	2625434	PrimaryExpression	1		2625368	1					
ANR	2625435	ExpressionStatement	err = false	467:1:10302:10313	2625368	4	True				
ANR	2625436	AssignmentExpression	err = false		2625368	0		=			
ANR	2625437	Identifier	err		2625368	0					
ANR	2625438	Identifier	false		2625368	1					
ANR	2625439	ExpressionStatement	res = getnum ( temp )	468:1:10316:10335	2625368	5	True				
ANR	2625440	AssignmentExpression	res = getnum ( temp )		2625368	0		=			
ANR	2625441	Identifier	res		2625368	0					
ANR	2625442	CallExpression	getnum ( temp )		2625368	1					
ANR	2625443	Callee	getnum		2625368	0					
ANR	2625444	Identifier	getnum		2625368	0					
ANR	2625445	ArgumentList	temp		2625368	1					
ANR	2625446	Argument	temp		2625368	0					
ANR	2625447	Identifier	temp		2625368	0					
ANR	2625448	ExpressionStatement	free ( temp )	469:1:10338:10349	2625368	6	True				
ANR	2625449	CallExpression	free ( temp )		2625368	0					
ANR	2625450	Callee	free		2625368	0					
ANR	2625451	Identifier	free		2625368	0					
ANR	2625452	ArgumentList	temp		2625368	1					
ANR	2625453	Argument	temp		2625368	0					
ANR	2625454	Identifier	temp		2625368	0					
ANR	2625455	ReturnStatement	return res ;	470:1:10352:10362	2625368	7	True				
ANR	2625456	Identifier	res		2625368	0					
ANR	2625457	ReturnType	static ut64		2625368	1					
ANR	2625458	Identifier	getnumbang		2625368	2					
ANR	2625459	ParameterList	const char * str		2625368	3					
ANR	2625460	Parameter	const char * str	456:23:10109:10123	2625368	0	True				
ANR	2625461	ParameterType	const char *		2625368	0					
ANR	2625462	Identifier	str		2625368	1					
ANR	2625463	CFGEntryNode	ENTRY		2625368		True				
ANR	2625464	CFGExitNode	EXIT		2625368		True				
ANR	2625465	Symbol	str		2625368						
ANR	2625466	Symbol	res		2625368						
ANR	2625467	Symbol	strlen		2625368						
ANR	2625468	Symbol	temp		2625368						
ANR	2625469	Symbol	err		2625368						
ANR	2625470	Symbol	r_str_ndup		2625368						
ANR	2625471	Symbol	true		2625368						
ANR	2625472	Symbol	false		2625368						
ANR	2625473	Symbol	getnum		2625368						
ANR	2625474	Symbol	r_str_endswith		2625368						
ANR	2625475	Symbol	* str		2625368						
ANR	2625476	Function	getimmed8	473:0:10386:10730							
ANR	2625477	FunctionDef	getimmed8 (const char * str)		2625476	0					
ANR	2625478	CompoundStatement		473:39:10425:10730	2625476	0					
ANR	2625479	IdentifierDeclStatement	ut32 num = getnum ( str ) ;	474:1:10428:10451	2625476	0	True				
ANR	2625480	IdentifierDecl	num = getnum ( str )		2625476	0					
ANR	2625481	IdentifierDeclType	ut32		2625476	0					
ANR	2625482	Identifier	num		2625476	1					
ANR	2625483	AssignmentExpression	num = getnum ( str )		2625476	2		=			
ANR	2625484	Identifier	num		2625476	0					
ANR	2625485	CallExpression	getnum ( str )		2625476	1					
ANR	2625486	Callee	getnum		2625476	0					
ANR	2625487	Identifier	getnum		2625476	0					
ANR	2625488	ArgumentList	str		2625476	1					
ANR	2625489	Argument	str		2625476	0					
ANR	2625490	Identifier	str		2625476	0					
ANR	2625491	IfStatement	if ( err )		2625476	1					
ANR	2625492	Condition	err	475:5:10458:10460	2625476	0	True				
ANR	2625493	Identifier	err		2625476	0					
ANR	2625494	CompoundStatement		3:10:37:37	2625476	1					
ANR	2625495	ReturnStatement	return 0 ;	476:2:10467:10475	2625476	0	True				
ANR	2625496	PrimaryExpression	0		2625476	0					
ANR	2625497	IdentifierDeclStatement	ut32 rotate ;	478:1:10481:10492	2625476	2	True				
ANR	2625498	IdentifierDecl	rotate		2625476	0					
ANR	2625499	IdentifierDeclType	ut32		2625476	0					
ANR	2625500	Identifier	rotate		2625476	1					
ANR	2625501	IfStatement	if ( num <= 0xff )		2625476	3					
ANR	2625502	Condition	num <= 0xff	479:5:10499:10509	2625476	0	True				
ANR	2625503	RelationalExpression	num <= 0xff		2625476	0		<=			
ANR	2625504	Identifier	num		2625476	0					
ANR	2625505	PrimaryExpression	0xff		2625476	1					
ANR	2625506	CompoundStatement		7:18:86:86	2625476	1					
ANR	2625507	ReturnStatement	return num ;	480:2:10516:10526	2625476	0	True				
ANR	2625508	Identifier	num		2625476	0					
ANR	2625509	ElseStatement	else		2625476	0					
ANR	2625510	CompoundStatement		9:8:110:110	2625476	0					
ANR	2625511	ForStatement	for ( rotate = 1 ; rotate < 16 ; rotate ++ )		2625476	0					
ANR	2625512	ForInit	rotate = 1 ;	482:7:10545:10555	2625476	0	True				
ANR	2625513	AssignmentExpression	rotate = 1		2625476	0		=			
ANR	2625514	Identifier	rotate		2625476	0					
ANR	2625515	PrimaryExpression	1		2625476	1					
ANR	2625516	Condition	rotate < 16	482:19:10557:10567	2625476	1	True				
ANR	2625517	RelationalExpression	rotate < 16		2625476	0		<			
ANR	2625518	Identifier	rotate		2625476	0					
ANR	2625519	PrimaryExpression	16		2625476	1					
ANR	2625520	PostIncDecOperationExpression	rotate ++	482:32:10570:10577	2625476	2	True				
ANR	2625521	Identifier	rotate		2625476	0					
ANR	2625522	IncDec	++		2625476	1					
ANR	2625523	CompoundStatement		10:42:154:154	2625476	3					
ANR	2625524	ExpressionStatement	num = ( ( num << 2 ) | ( num >> 30 ) )	484:3:10597:10629	2625476	0	True				
ANR	2625525	AssignmentExpression	num = ( ( num << 2 ) | ( num >> 30 ) )		2625476	0		=			
ANR	2625526	Identifier	num		2625476	0					
ANR	2625527	InclusiveOrExpression	( num << 2 ) | ( num >> 30 )		2625476	1		|			
ANR	2625528	ShiftExpression	num << 2		2625476	0		<<			
ANR	2625529	Identifier	num		2625476	0					
ANR	2625530	PrimaryExpression	2		2625476	1					
ANR	2625531	ShiftExpression	num >> 30		2625476	1		>>			
ANR	2625532	Identifier	num		2625476	0					
ANR	2625533	PrimaryExpression	30		2625476	1					
ANR	2625534	IfStatement	if ( num == ( num & 0xff ) )		2625476	1					
ANR	2625535	Condition	num == ( num & 0xff )	485:7:10638:10656	2625476	0	True				
ANR	2625536	EqualityExpression	num == ( num & 0xff )		2625476	0		==			
ANR	2625537	Identifier	num		2625476	0					
ANR	2625538	BitAndExpression	num & 0xff		2625476	1		&			
ANR	2625539	Identifier	num		2625476	0					
ANR	2625540	PrimaryExpression	0xff		2625476	1					
ANR	2625541	CompoundStatement		13:28:233:233	2625476	1					
ANR	2625542	ReturnStatement	return ( num | ( rotate << 8 ) ) ;	486:4:10665:10693	2625476	0	True				
ANR	2625543	InclusiveOrExpression	num | ( rotate << 8 )		2625476	0		|			
ANR	2625544	Identifier	num		2625476	0					
ANR	2625545	ShiftExpression	rotate << 8		2625476	1		<<			
ANR	2625546	Identifier	rotate		2625476	0					
ANR	2625547	PrimaryExpression	8		2625476	1					
ANR	2625548	ExpressionStatement	err = 1	489:2:10706:10713	2625476	1	True				
ANR	2625549	AssignmentExpression	err = 1		2625476	0		=			
ANR	2625550	Identifier	err		2625476	0					
ANR	2625551	PrimaryExpression	1		2625476	1					
ANR	2625552	ReturnStatement	return 0 ;	490:2:10717:10725	2625476	2	True				
ANR	2625553	PrimaryExpression	0		2625476	0					
ANR	2625554	ReturnType	static ut32		2625476	1					
ANR	2625555	Identifier	getimmed8		2625476	2					
ANR	2625556	ParameterList	const char * str		2625476	3					
ANR	2625557	Parameter	const char * str	473:22:10408:10422	2625476	0	True				
ANR	2625558	ParameterType	const char *		2625476	0					
ANR	2625559	Identifier	str		2625476	1					
ANR	2625560	CFGEntryNode	ENTRY		2625476		True				
ANR	2625561	CFGExitNode	EXIT		2625476		True				
ANR	2625562	Symbol	str		2625476						
ANR	2625563	Symbol	rotate		2625476						
ANR	2625564	Symbol	err		2625476						
ANR	2625565	Symbol	num		2625476						
ANR	2625566	Symbol	getnum		2625476						
ANR	2625567	Function	firstsigdigit	494:0:10733:11106							
ANR	2625568	FunctionDef	firstsigdigit (ut32 num)		2625567	0					
ANR	2625569	CompoundStatement		494:37:10770:11106	2625567	0					
ANR	2625570	IdentifierDeclStatement	st32 f = - 1 ;	495:1:10773:10784	2625567	0	True				
ANR	2625571	IdentifierDecl	f = - 1		2625567	0					
ANR	2625572	IdentifierDeclType	st32		2625567	0					
ANR	2625573	Identifier	f		2625567	1					
ANR	2625574	AssignmentExpression	f = - 1		2625567	2		=			
ANR	2625575	Identifier	f		2625567	0					
ANR	2625576	UnaryOperationExpression	- 1		2625567	1					
ANR	2625577	UnaryOperator	-		2625567	0					
ANR	2625578	PrimaryExpression	1		2625567	1					
ANR	2625579	IdentifierDeclStatement	st32 b = - 1 ;	496:1:10787:10798	2625567	1	True				
ANR	2625580	IdentifierDecl	b = - 1		2625567	0					
ANR	2625581	IdentifierDeclType	st32		2625567	0					
ANR	2625582	Identifier	b		2625567	1					
ANR	2625583	AssignmentExpression	b = - 1		2625567	2		=			
ANR	2625584	Identifier	b		2625567	0					
ANR	2625585	UnaryOperationExpression	- 1		2625567	1					
ANR	2625586	UnaryOperator	-		2625567	0					
ANR	2625587	PrimaryExpression	1		2625567	1					
ANR	2625588	IdentifierDeclStatement	ut32 forwardmask = 0x80000000 ;	497:1:10801:10830	2625567	2	True				
ANR	2625589	IdentifierDecl	forwardmask = 0x80000000		2625567	0					
ANR	2625590	IdentifierDeclType	ut32		2625567	0					
ANR	2625591	Identifier	forwardmask		2625567	1					
ANR	2625592	AssignmentExpression	forwardmask = 0x80000000		2625567	2		=			
ANR	2625593	Identifier	forwardmask		2625567	0					
ANR	2625594	PrimaryExpression	0x80000000		2625567	1					
ANR	2625595	IdentifierDeclStatement	ut32 backwardmask = 0x1 ;	498:1:10833:10856	2625567	3	True				
ANR	2625596	IdentifierDecl	backwardmask = 0x1		2625567	0					
ANR	2625597	IdentifierDeclType	ut32		2625567	0					
ANR	2625598	Identifier	backwardmask		2625567	1					
ANR	2625599	AssignmentExpression	backwardmask = 0x1		2625567	2		=			
ANR	2625600	Identifier	backwardmask		2625567	0					
ANR	2625601	PrimaryExpression	0x1		2625567	1					
ANR	2625602	IdentifierDeclStatement	ut32 i ;	499:1:10859:10865	2625567	4	True				
ANR	2625603	IdentifierDecl	i		2625567	0					
ANR	2625604	IdentifierDeclType	ut32		2625567	0					
ANR	2625605	Identifier	i		2625567	1					
ANR	2625606	ForStatement	for ( i = 0 ; i < 32 ; i ++ )		2625567	5					
ANR	2625607	ForInit	i = 0 ;	500:6:10873:10878	2625567	0	True				
ANR	2625608	AssignmentExpression	i = 0		2625567	0		=			
ANR	2625609	Identifier	i		2625567	0					
ANR	2625610	PrimaryExpression	0		2625567	1					
ANR	2625611	Condition	i < 32	500:13:10880:10885	2625567	1	True				
ANR	2625612	RelationalExpression	i < 32		2625567	0		<			
ANR	2625613	Identifier	i		2625567	0					
ANR	2625614	PrimaryExpression	32		2625567	1					
ANR	2625615	PostIncDecOperationExpression	i ++	500:21:10888:10890	2625567	2	True				
ANR	2625616	Identifier	i		2625567	0					
ANR	2625617	IncDec	++		2625567	1					
ANR	2625618	CompoundStatement		7:27:123:123	2625567	3					
ANR	2625619	IfStatement	if ( ( forwardmask & num ) && ( f == - 1 ) )		2625567	0					
ANR	2625620	Condition	( forwardmask & num ) && ( f == - 1 )	501:7:10903:10934	2625567	0	True				
ANR	2625621	AndExpression	( forwardmask & num ) && ( f == - 1 )		2625567	0		&&			
ANR	2625622	BitAndExpression	forwardmask & num		2625567	0		&			
ANR	2625623	Identifier	forwardmask		2625567	0					
ANR	2625624	Identifier	num		2625567	1					
ANR	2625625	EqualityExpression	f == - 1		2625567	1		==			
ANR	2625626	Identifier	f		2625567	0					
ANR	2625627	UnaryOperationExpression	- 1		2625567	1					
ANR	2625628	UnaryOperator	-		2625567	0					
ANR	2625629	PrimaryExpression	1		2625567	1					
ANR	2625630	CompoundStatement		8:41:166:166	2625567	1					
ANR	2625631	ExpressionStatement	f = i	502:3:10942:10947	2625567	0	True				
ANR	2625632	AssignmentExpression	f = i		2625567	0		=			
ANR	2625633	Identifier	f		2625567	0					
ANR	2625634	Identifier	i		2625567	1					
ANR	2625635	IfStatement	if ( ( backwardmask & num ) && ( b == - 1 ) )		2625567	1					
ANR	2625636	Condition	( backwardmask & num ) && ( b == - 1 )	504:7:10960:10992	2625567	0	True				
ANR	2625637	AndExpression	( backwardmask & num ) && ( b == - 1 )		2625567	0		&&			
ANR	2625638	BitAndExpression	backwardmask & num		2625567	0		&			
ANR	2625639	Identifier	backwardmask		2625567	0					
ANR	2625640	Identifier	num		2625567	1					
ANR	2625641	EqualityExpression	b == - 1		2625567	1		==			
ANR	2625642	Identifier	b		2625567	0					
ANR	2625643	UnaryOperationExpression	- 1		2625567	1					
ANR	2625644	UnaryOperator	-		2625567	0					
ANR	2625645	PrimaryExpression	1		2625567	1					
ANR	2625646	CompoundStatement		11:42:224:224	2625567	1					
ANR	2625647	ExpressionStatement	b = 32 - i	505:3:11000:11008	2625567	0	True				
ANR	2625648	AssignmentExpression	b = 32 - i		2625567	0		=			
ANR	2625649	Identifier	b		2625567	0					
ANR	2625650	AdditiveExpression	32 - i		2625567	1		-			
ANR	2625651	PrimaryExpression	32		2625567	0					
ANR	2625652	Identifier	i		2625567	1					
ANR	2625653	ExpressionStatement	forwardmask >>= 1	507:2:11016:11033	2625567	2	True				
ANR	2625654	AssignmentExpression	forwardmask >>= 1		2625567	0		>>=			
ANR	2625655	Identifier	forwardmask		2625567	0					
ANR	2625656	PrimaryExpression	1		2625567	1					
ANR	2625657	ExpressionStatement	backwardmask <<= 1	508:2:11037:11055	2625567	3	True				
ANR	2625658	AssignmentExpression	backwardmask <<= 1		2625567	0		<<=			
ANR	2625659	Identifier	backwardmask		2625567	0					
ANR	2625660	PrimaryExpression	1		2625567	1					
ANR	2625661	IfStatement	if ( ( b - f ) < 9 )		2625567	6					
ANR	2625662	Condition	( b - f ) < 9	511:5:11066:11074	2625567	0	True				
ANR	2625663	RelationalExpression	( b - f ) < 9		2625567	0		<			
ANR	2625664	AdditiveExpression	b - f		2625567	0		-			
ANR	2625665	Identifier	b		2625567	0					
ANR	2625666	Identifier	f		2625567	1					
ANR	2625667	PrimaryExpression	9		2625567	1					
ANR	2625668	CompoundStatement		18:16:306:306	2625567	1					
ANR	2625669	ReturnStatement	return f ;	512:2:11081:11089	2625567	0	True				
ANR	2625670	Identifier	f		2625567	0					
ANR	2625671	ReturnStatement	return - 1 ;	514:1:11095:11104	2625567	7	True				
ANR	2625672	UnaryOperationExpression	- 1		2625567	0					
ANR	2625673	UnaryOperator	-		2625567	0					
ANR	2625674	PrimaryExpression	1		2625567	1					
ANR	2625675	ReturnType	static st32		2625567	1					
ANR	2625676	Identifier	firstsigdigit		2625567	2					
ANR	2625677	ParameterList	ut32 num		2625567	3					
ANR	2625678	Parameter	ut32 num	494:27:10760:10767	2625567	0	True				
ANR	2625679	ParameterType	ut32		2625567	0					
ANR	2625680	Identifier	num		2625567	1					
ANR	2625681	CFGEntryNode	ENTRY		2625567		True				
ANR	2625682	CFGExitNode	EXIT		2625567		True				
ANR	2625683	Symbol	backwardmask		2625567						
ANR	2625684	Symbol	b		2625567						
ANR	2625685	Symbol	forwardmask		2625567						
ANR	2625686	Symbol	f		2625567						
ANR	2625687	Symbol	num		2625567						
ANR	2625688	Symbol	i		2625567						
ANR	2625689	Function	getthbimmed	517:0:11109:11619							
ANR	2625690	FunctionDef	getthbimmed (st32 number)		2625689	0					
ANR	2625691	CompoundStatement		517:37:11146:11619	2625689	0					
ANR	2625692	IdentifierDeclStatement	ut32 res = 0 ;	518:1:11149:11161	2625689	0	True				
ANR	2625693	IdentifierDecl	res = 0		2625689	0					
ANR	2625694	IdentifierDeclType	ut32		2625689	0					
ANR	2625695	Identifier	res		2625689	1					
ANR	2625696	AssignmentExpression	res = 0		2625689	2		=			
ANR	2625697	Identifier	res		2625689	0					
ANR	2625698	PrimaryExpression	0		2625689	1					
ANR	2625699	IfStatement	if ( number < 0 )		2625689	1					
ANR	2625700	Condition	number < 0	519:5:11168:11177	2625689	0	True				
ANR	2625701	RelationalExpression	number < 0		2625689	0		<			
ANR	2625702	Identifier	number		2625689	0					
ANR	2625703	PrimaryExpression	0		2625689	1					
ANR	2625704	CompoundStatement		3:17:33:33	2625689	1					
ANR	2625705	ExpressionStatement	res |= 1 << 18	520:2:11184:11198	2625689	0	True				
ANR	2625706	AssignmentExpression	res |= 1 << 18		2625689	0		|=			
ANR	2625707	Identifier	res		2625689	0					
ANR	2625708	ShiftExpression	1 << 18		2625689	1		<<			
ANR	2625709	PrimaryExpression	1		2625689	0					
ANR	2625710	PrimaryExpression	18		2625689	1					
ANR	2625711	ExpressionStatement	number >>= 1	522:1:11204:11216	2625689	2	True				
ANR	2625712	AssignmentExpression	number >>= 1		2625689	0		>>=			
ANR	2625713	Identifier	number		2625689	0					
ANR	2625714	PrimaryExpression	1		2625689	1					
ANR	2625715	ExpressionStatement	res |= ( ( number & 0xff ) << 8 )	523:1:11219:11249	2625689	3	True				
ANR	2625716	AssignmentExpression	res |= ( ( number & 0xff ) << 8 )		2625689	0		|=			
ANR	2625717	Identifier	res		2625689	0					
ANR	2625718	ShiftExpression	( number & 0xff ) << 8		2625689	1		<<			
ANR	2625719	BitAndExpression	number & 0xff		2625689	0		&			
ANR	2625720	Identifier	number		2625689	0					
ANR	2625721	PrimaryExpression	0xff		2625689	1					
ANR	2625722	PrimaryExpression	8		2625689	1					
ANR	2625723	ExpressionStatement	number >>= 8	524:1:11252:11264	2625689	4	True				
ANR	2625724	AssignmentExpression	number >>= 8		2625689	0		>>=			
ANR	2625725	Identifier	number		2625689	0					
ANR	2625726	PrimaryExpression	8		2625689	1					
ANR	2625727	ExpressionStatement	res |= ( number & 0x07 )	525:1:11267:11290	2625689	5	True				
ANR	2625728	AssignmentExpression	res |= ( number & 0x07 )		2625689	0		|=			
ANR	2625729	Identifier	res		2625689	0					
ANR	2625730	BitAndExpression	number & 0x07		2625689	1		&			
ANR	2625731	Identifier	number		2625689	0					
ANR	2625732	PrimaryExpression	0x07		2625689	1					
ANR	2625733	ExpressionStatement	number >>= 3	526:1:11293:11305	2625689	6	True				
ANR	2625734	AssignmentExpression	number >>= 3		2625689	0		>>=			
ANR	2625735	Identifier	number		2625689	0					
ANR	2625736	PrimaryExpression	3		2625689	1					
ANR	2625737	ExpressionStatement	res |= ( ( number & 0xff ) << 24 )	527:1:11308:11339	2625689	7	True				
ANR	2625738	AssignmentExpression	res |= ( ( number & 0xff ) << 24 )		2625689	0		|=			
ANR	2625739	Identifier	res		2625689	0					
ANR	2625740	ShiftExpression	( number & 0xff ) << 24		2625689	1		<<			
ANR	2625741	BitAndExpression	number & 0xff		2625689	0		&			
ANR	2625742	Identifier	number		2625689	0					
ANR	2625743	PrimaryExpression	0xff		2625689	1					
ANR	2625744	PrimaryExpression	24		2625689	1					
ANR	2625745	ExpressionStatement	number >>= 8	528:1:11342:11354	2625689	8	True				
ANR	2625746	AssignmentExpression	number >>= 8		2625689	0		>>=			
ANR	2625747	Identifier	number		2625689	0					
ANR	2625748	PrimaryExpression	8		2625689	1					
ANR	2625749	ExpressionStatement	res |= ( ( number & 0x3 ) << 16 )	529:1:11357:11387	2625689	9	True				
ANR	2625750	AssignmentExpression	res |= ( ( number & 0x3 ) << 16 )		2625689	0		|=			
ANR	2625751	Identifier	res		2625689	0					
ANR	2625752	ShiftExpression	( number & 0x3 ) << 16		2625689	1		<<			
ANR	2625753	BitAndExpression	number & 0x3		2625689	0		&			
ANR	2625754	Identifier	number		2625689	0					
ANR	2625755	PrimaryExpression	0x3		2625689	1					
ANR	2625756	PrimaryExpression	16		2625689	1					
ANR	2625757	ExpressionStatement	number >>= 2	530:1:11390:11402	2625689	10	True				
ANR	2625758	AssignmentExpression	number >>= 2		2625689	0		>>=			
ANR	2625759	Identifier	number		2625689	0					
ANR	2625760	PrimaryExpression	2		2625689	1					
ANR	2625761	IfStatement	if ( number < 0 )		2625689	11					
ANR	2625762	Condition	number < 0	531:5:11409:11418	2625689	0	True				
ANR	2625763	RelationalExpression	number < 0		2625689	0		<			
ANR	2625764	Identifier	number		2625689	0					
ANR	2625765	PrimaryExpression	0		2625689	1					
ANR	2625766	CompoundStatement		15:17:274:274	2625689	1					
ANR	2625767	ExpressionStatement	res |= ( ( number & 0x1 ) << 3 )	532:2:11425:11454	2625689	0	True				
ANR	2625768	AssignmentExpression	res |= ( ( number & 0x1 ) << 3 )		2625689	0		|=			
ANR	2625769	Identifier	res		2625689	0					
ANR	2625770	ShiftExpression	( number & 0x1 ) << 3		2625689	1		<<			
ANR	2625771	BitAndExpression	number & 0x1		2625689	0		&			
ANR	2625772	Identifier	number		2625689	0					
ANR	2625773	PrimaryExpression	0x1		2625689	1					
ANR	2625774	PrimaryExpression	3		2625689	1					
ANR	2625775	ExpressionStatement	number >>= 1	533:2:11458:11470	2625689	1	True				
ANR	2625776	AssignmentExpression	number >>= 1		2625689	0		>>=			
ANR	2625777	Identifier	number		2625689	0					
ANR	2625778	PrimaryExpression	1		2625689	1					
ANR	2625779	ExpressionStatement	res |= ( ( number & 0x1 ) << 5 )	534:2:11474:11503	2625689	2	True				
ANR	2625780	AssignmentExpression	res |= ( ( number & 0x1 ) << 5 )		2625689	0		|=			
ANR	2625781	Identifier	res		2625689	0					
ANR	2625782	ShiftExpression	( number & 0x1 ) << 5		2625689	1		<<			
ANR	2625783	BitAndExpression	number & 0x1		2625689	0		&			
ANR	2625784	Identifier	number		2625689	0					
ANR	2625785	PrimaryExpression	0x1		2625689	1					
ANR	2625786	PrimaryExpression	5		2625689	1					
ANR	2625787	ElseStatement	else		2625689	0					
ANR	2625788	CompoundStatement		19:8:366:366	2625689	0					
ANR	2625789	ExpressionStatement	res |= ( ( ! ( number & 0x1 ) ) << 3 )	536:2:11517:11549	2625689	0	True				
ANR	2625790	AssignmentExpression	res |= ( ( ! ( number & 0x1 ) ) << 3 )		2625689	0		|=			
ANR	2625791	Identifier	res		2625689	0					
ANR	2625792	ShiftExpression	( ! ( number & 0x1 ) ) << 3		2625689	1		<<			
ANR	2625793	UnaryOperationExpression	! ( number & 0x1 )		2625689	0					
ANR	2625794	UnaryOperator	!		2625689	0					
ANR	2625795	BitAndExpression	number & 0x1		2625689	1		&			
ANR	2625796	Identifier	number		2625689	0					
ANR	2625797	PrimaryExpression	0x1		2625689	1					
ANR	2625798	PrimaryExpression	3		2625689	1					
ANR	2625799	ExpressionStatement	number >>= 1	537:2:11553:11565	2625689	1	True				
ANR	2625800	AssignmentExpression	number >>= 1		2625689	0		>>=			
ANR	2625801	Identifier	number		2625689	0					
ANR	2625802	PrimaryExpression	1		2625689	1					
ANR	2625803	ExpressionStatement	res |= ( ( ! ( number & 0x1 ) ) << 5 )	538:2:11569:11601	2625689	2	True				
ANR	2625804	AssignmentExpression	res |= ( ( ! ( number & 0x1 ) ) << 5 )		2625689	0		|=			
ANR	2625805	Identifier	res		2625689	0					
ANR	2625806	ShiftExpression	( ! ( number & 0x1 ) ) << 5		2625689	1		<<			
ANR	2625807	UnaryOperationExpression	! ( number & 0x1 )		2625689	0					
ANR	2625808	UnaryOperator	!		2625689	0					
ANR	2625809	BitAndExpression	number & 0x1		2625689	1		&			
ANR	2625810	Identifier	number		2625689	0					
ANR	2625811	PrimaryExpression	0x1		2625689	1					
ANR	2625812	PrimaryExpression	5		2625689	1					
ANR	2625813	ReturnStatement	return res ;	540:1:11607:11617	2625689	12	True				
ANR	2625814	Identifier	res		2625689	0					
ANR	2625815	ReturnType	static ut32		2625689	1					
ANR	2625816	Identifier	getthbimmed		2625689	2					
ANR	2625817	ParameterList	st32 number		2625689	3					
ANR	2625818	Parameter	st32 number	517:24:11133:11143	2625689	0	True				
ANR	2625819	ParameterType	st32		2625689	0					
ANR	2625820	Identifier	number		2625689	1					
ANR	2625821	CFGEntryNode	ENTRY		2625689		True				
ANR	2625822	CFGExitNode	EXIT		2625689		True				
ANR	2625823	Symbol	number		2625689						
ANR	2625824	Symbol	res		2625689						
ANR	2625825	Function	getthzeroimmed12	543:0:11622:11787							
ANR	2625826	FunctionDef	getthzeroimmed12 (ut32 number)		2625825	0					
ANR	2625827	CompoundStatement		543:42:11664:11787	2625825	0					
ANR	2625828	IdentifierDeclStatement	ut32 res = 0 ;	544:1:11667:11679	2625825	0	True				
ANR	2625829	IdentifierDecl	res = 0		2625825	0					
ANR	2625830	IdentifierDeclType	ut32		2625825	0					
ANR	2625831	Identifier	res		2625825	1					
ANR	2625832	AssignmentExpression	res = 0		2625825	2		=			
ANR	2625833	Identifier	res		2625825	0					
ANR	2625834	PrimaryExpression	0		2625825	1					
ANR	2625835	ExpressionStatement	res |= ( number & 0x800 ) << 7	545:1:11682:11710	2625825	1	True				
ANR	2625836	AssignmentExpression	res |= ( number & 0x800 ) << 7		2625825	0		|=			
ANR	2625837	Identifier	res		2625825	0					
ANR	2625838	ShiftExpression	( number & 0x800 ) << 7		2625825	1		<<			
ANR	2625839	BitAndExpression	number & 0x800		2625825	0		&			
ANR	2625840	Identifier	number		2625825	0					
ANR	2625841	PrimaryExpression	0x800		2625825	1					
ANR	2625842	PrimaryExpression	7		2625825	1					
ANR	2625843	ExpressionStatement	res |= ( number & 0x700 ) >> 4	546:1:11713:11741	2625825	2	True				
ANR	2625844	AssignmentExpression	res |= ( number & 0x700 ) >> 4		2625825	0		|=			
ANR	2625845	Identifier	res		2625825	0					
ANR	2625846	ShiftExpression	( number & 0x700 ) >> 4		2625825	1		>>			
ANR	2625847	BitAndExpression	number & 0x700		2625825	0		&			
ANR	2625848	Identifier	number		2625825	0					
ANR	2625849	PrimaryExpression	0x700		2625825	1					
ANR	2625850	PrimaryExpression	4		2625825	1					
ANR	2625851	ExpressionStatement	res |= ( number & 0x0ff ) << 8	547:1:11744:11772	2625825	3	True				
ANR	2625852	AssignmentExpression	res |= ( number & 0x0ff ) << 8		2625825	0		|=			
ANR	2625853	Identifier	res		2625825	0					
ANR	2625854	ShiftExpression	( number & 0x0ff ) << 8		2625825	1		<<			
ANR	2625855	BitAndExpression	number & 0x0ff		2625825	0		&			
ANR	2625856	Identifier	number		2625825	0					
ANR	2625857	PrimaryExpression	0x0ff		2625825	1					
ANR	2625858	PrimaryExpression	8		2625825	1					
ANR	2625859	ReturnStatement	return res ;	548:1:11775:11785	2625825	4	True				
ANR	2625860	Identifier	res		2625825	0					
ANR	2625861	ReturnType	static ut32		2625825	1					
ANR	2625862	Identifier	getthzeroimmed12		2625825	2					
ANR	2625863	ParameterList	ut32 number		2625825	3					
ANR	2625864	Parameter	ut32 number	543:29:11651:11661	2625825	0	True				
ANR	2625865	ParameterType	ut32		2625825	0					
ANR	2625866	Identifier	number		2625825	1					
ANR	2625867	CFGEntryNode	ENTRY		2625825		True				
ANR	2625868	CFGExitNode	EXIT		2625825		True				
ANR	2625869	Symbol	number		2625825						
ANR	2625870	Symbol	res		2625825						
ANR	2625871	Function	getthzeroimmed16	551:0:11790:11991							
ANR	2625872	FunctionDef	getthzeroimmed16 (ut32 number)		2625871	0					
ANR	2625873	CompoundStatement		551:42:11832:11991	2625871	0					
ANR	2625874	IdentifierDeclStatement	ut32 res = 0 ;	552:1:11835:11847	2625871	0	True				
ANR	2625875	IdentifierDecl	res = 0		2625871	0					
ANR	2625876	IdentifierDeclType	ut32		2625871	0					
ANR	2625877	Identifier	res		2625871	1					
ANR	2625878	AssignmentExpression	res = 0		2625871	2		=			
ANR	2625879	Identifier	res		2625871	0					
ANR	2625880	PrimaryExpression	0		2625871	1					
ANR	2625881	ExpressionStatement	res |= ( number & 0xf000 ) << 12	553:1:11850:11880	2625871	1	True				
ANR	2625882	AssignmentExpression	res |= ( number & 0xf000 ) << 12		2625871	0		|=			
ANR	2625883	Identifier	res		2625871	0					
ANR	2625884	ShiftExpression	( number & 0xf000 ) << 12		2625871	1		<<			
ANR	2625885	BitAndExpression	number & 0xf000		2625871	0		&			
ANR	2625886	Identifier	number		2625871	0					
ANR	2625887	PrimaryExpression	0xf000		2625871	1					
ANR	2625888	PrimaryExpression	12		2625871	1					
ANR	2625889	ExpressionStatement	res |= ( number & 0x0800 ) << 7	554:1:11883:11912	2625871	2	True				
ANR	2625890	AssignmentExpression	res |= ( number & 0x0800 ) << 7		2625871	0		|=			
ANR	2625891	Identifier	res		2625871	0					
ANR	2625892	ShiftExpression	( number & 0x0800 ) << 7		2625871	1		<<			
ANR	2625893	BitAndExpression	number & 0x0800		2625871	0		&			
ANR	2625894	Identifier	number		2625871	0					
ANR	2625895	PrimaryExpression	0x0800		2625871	1					
ANR	2625896	PrimaryExpression	7		2625871	1					
ANR	2625897	ExpressionStatement	res |= ( number & 0x0700 ) >> 4	555:1:11915:11944	2625871	3	True				
ANR	2625898	AssignmentExpression	res |= ( number & 0x0700 ) >> 4		2625871	0		|=			
ANR	2625899	Identifier	res		2625871	0					
ANR	2625900	ShiftExpression	( number & 0x0700 ) >> 4		2625871	1		>>			
ANR	2625901	BitAndExpression	number & 0x0700		2625871	0		&			
ANR	2625902	Identifier	number		2625871	0					
ANR	2625903	PrimaryExpression	0x0700		2625871	1					
ANR	2625904	PrimaryExpression	4		2625871	1					
ANR	2625905	ExpressionStatement	res |= ( number & 0x00ff ) << 8	556:1:11947:11976	2625871	4	True				
ANR	2625906	AssignmentExpression	res |= ( number & 0x00ff ) << 8		2625871	0		|=			
ANR	2625907	Identifier	res		2625871	0					
ANR	2625908	ShiftExpression	( number & 0x00ff ) << 8		2625871	1		<<			
ANR	2625909	BitAndExpression	number & 0x00ff		2625871	0		&			
ANR	2625910	Identifier	number		2625871	0					
ANR	2625911	PrimaryExpression	0x00ff		2625871	1					
ANR	2625912	PrimaryExpression	8		2625871	1					
ANR	2625913	ReturnStatement	return res ;	557:1:11979:11989	2625871	5	True				
ANR	2625914	Identifier	res		2625871	0					
ANR	2625915	ReturnType	static ut32		2625871	1					
ANR	2625916	Identifier	getthzeroimmed16		2625871	2					
ANR	2625917	ParameterList	ut32 number		2625871	3					
ANR	2625918	Parameter	ut32 number	551:29:11819:11829	2625871	0	True				
ANR	2625919	ParameterType	ut32		2625871	0					
ANR	2625920	Identifier	number		2625871	1					
ANR	2625921	CFGEntryNode	ENTRY		2625871		True				
ANR	2625922	CFGExitNode	EXIT		2625871		True				
ANR	2625923	Symbol	number		2625871						
ANR	2625924	Symbol	res		2625871						
ANR	2625925	Function	getthimmed12	560:0:11994:13040							
ANR	2625926	FunctionDef	getthimmed12 (const char * str)		2625925	0					
ANR	2625927	CompoundStatement		560:42:12036:13040	2625925	0					
ANR	2625928	IdentifierDeclStatement	ut64 num = getnum ( str ) ;	561:1:12039:12062	2625925	0	True				
ANR	2625929	IdentifierDecl	num = getnum ( str )		2625925	0					
ANR	2625930	IdentifierDeclType	ut64		2625925	0					
ANR	2625931	Identifier	num		2625925	1					
ANR	2625932	AssignmentExpression	num = getnum ( str )		2625925	2		=			
ANR	2625933	Identifier	num		2625925	0					
ANR	2625934	CallExpression	getnum ( str )		2625925	1					
ANR	2625935	Callee	getnum		2625925	0					
ANR	2625936	Identifier	getnum		2625925	0					
ANR	2625937	ArgumentList	str		2625925	1					
ANR	2625938	Argument	str		2625925	0					
ANR	2625939	Identifier	str		2625925	0					
ANR	2625940	IfStatement	if ( err )		2625925	1					
ANR	2625941	Condition	err	562:5:12069:12071	2625925	0	True				
ANR	2625942	Identifier	err		2625925	0					
ANR	2625943	CompoundStatement		3:10:37:37	2625925	1					
ANR	2625944	ReturnStatement	return 0 ;	563:2:12078:12086	2625925	0	True				
ANR	2625945	PrimaryExpression	0		2625925	0					
ANR	2625946	IdentifierDeclStatement	st32 FSD = 0 ;	566:1:12093:12105	2625925	2	True				
ANR	2625947	IdentifierDecl	FSD = 0		2625925	0					
ANR	2625948	IdentifierDeclType	st32		2625925	0					
ANR	2625949	Identifier	FSD		2625925	1					
ANR	2625950	AssignmentExpression	FSD = 0		2625925	2		=			
ANR	2625951	Identifier	FSD		2625925	0					
ANR	2625952	PrimaryExpression	0		2625925	1					
ANR	2625953	IdentifierDeclStatement	ut64 result = 0 ;	567:1:12108:12123	2625925	3	True				
ANR	2625954	IdentifierDecl	result = 0		2625925	0					
ANR	2625955	IdentifierDeclType	ut64		2625925	0					
ANR	2625956	Identifier	result		2625925	1					
ANR	2625957	AssignmentExpression	result = 0		2625925	2		=			
ANR	2625958	Identifier	result		2625925	0					
ANR	2625959	PrimaryExpression	0		2625925	1					
ANR	2625960	IfStatement	if ( num <= 0xff )		2625925	4					
ANR	2625961	Condition	num <= 0xff	568:5:12130:12140	2625925	0	True				
ANR	2625962	RelationalExpression	num <= 0xff		2625925	0		<=			
ANR	2625963	Identifier	num		2625925	0					
ANR	2625964	PrimaryExpression	0xff		2625925	1					
ANR	2625965	CompoundStatement		9:18:106:106	2625925	1					
ANR	2625966	ReturnStatement	return num << 8 ;	569:2:12147:12162	2625925	0	True				
ANR	2625967	ShiftExpression	num << 8		2625925	0		<<			
ANR	2625968	Identifier	num		2625925	0					
ANR	2625969	PrimaryExpression	8		2625925	1					
ANR	2625970	ElseStatement	else		2625925	0					
ANR	2625971	IfStatement	if ( ( ( num & 0xff00ff00 ) == 0 ) && ( ( num & 0x00ff0000 ) == ( ( num & 0x000000ff ) << 16 ) ) )		2625925	0					
ANR	2625972	Condition	( ( num & 0xff00ff00 ) == 0 ) && ( ( num & 0x00ff0000 ) == ( ( num & 0x000000ff ) << 16 ) )	570:13:12177:12255	2625925	0	True				
ANR	2625973	AndExpression	( ( num & 0xff00ff00 ) == 0 ) && ( ( num & 0x00ff0000 ) == ( ( num & 0x000000ff ) << 16 ) )		2625925	0		&&			
ANR	2625974	EqualityExpression	( num & 0xff00ff00 ) == 0		2625925	0		==			
ANR	2625975	BitAndExpression	num & 0xff00ff00		2625925	0		&			
ANR	2625976	Identifier	num		2625925	0					
ANR	2625977	PrimaryExpression	0xff00ff00		2625925	1					
ANR	2625978	PrimaryExpression	0		2625925	1					
ANR	2625979	EqualityExpression	( num & 0x00ff0000 ) == ( ( num & 0x000000ff ) << 16 )		2625925	1		==			
ANR	2625980	BitAndExpression	num & 0x00ff0000		2625925	0		&			
ANR	2625981	Identifier	num		2625925	0					
ANR	2625982	PrimaryExpression	0x00ff0000		2625925	1					
ANR	2625983	ShiftExpression	( num & 0x000000ff ) << 16		2625925	1		<<			
ANR	2625984	BitAndExpression	num & 0x000000ff		2625925	0		&			
ANR	2625985	Identifier	num		2625925	0					
ANR	2625986	PrimaryExpression	0x000000ff		2625925	1					
ANR	2625987	PrimaryExpression	16		2625925	1					
ANR	2625988	CompoundStatement		11:95:222:222	2625925	1					
ANR	2625989	ExpressionStatement	result |= ( num & 0x000000ff ) << 8	571:2:12263:12296	2625925	0	True				
ANR	2625990	AssignmentExpression	result |= ( num & 0x000000ff ) << 8		2625925	0		|=			
ANR	2625991	Identifier	result		2625925	0					
ANR	2625992	ShiftExpression	( num & 0x000000ff ) << 8		2625925	1		<<			
ANR	2625993	BitAndExpression	num & 0x000000ff		2625925	0		&			
ANR	2625994	Identifier	num		2625925	0					
ANR	2625995	PrimaryExpression	0x000000ff		2625925	1					
ANR	2625996	PrimaryExpression	8		2625925	1					
ANR	2625997	ExpressionStatement	result |= 0x00000010	572:2:12300:12320	2625925	1	True				
ANR	2625998	AssignmentExpression	result |= 0x00000010		2625925	0		|=			
ANR	2625999	Identifier	result		2625925	0					
ANR	2626000	PrimaryExpression	0x00000010		2625925	1					
ANR	2626001	ReturnStatement	return result ;	573:2:12324:12337	2625925	2	True				
ANR	2626002	Identifier	result		2625925	0					
ANR	2626003	ElseStatement	else		2625925	0					
ANR	2626004	IfStatement	if ( ( ( num & 0x00ff00ff ) == 0 ) && ( ( num & 0xff000000 ) == ( ( num & 0x0000ff00 ) << 16 ) ) )		2625925	0					
ANR	2626005	Condition	( ( num & 0x00ff00ff ) == 0 ) && ( ( num & 0xff000000 ) == ( ( num & 0x0000ff00 ) << 16 ) )	574:13:12352:12430	2625925	0	True				
ANR	2626006	AndExpression	( ( num & 0x00ff00ff ) == 0 ) && ( ( num & 0xff000000 ) == ( ( num & 0x0000ff00 ) << 16 ) )		2625925	0		&&			
ANR	2626007	EqualityExpression	( num & 0x00ff00ff ) == 0		2625925	0		==			
ANR	2626008	BitAndExpression	num & 0x00ff00ff		2625925	0		&			
ANR	2626009	Identifier	num		2625925	0					
ANR	2626010	PrimaryExpression	0x00ff00ff		2625925	1					
ANR	2626011	PrimaryExpression	0		2625925	1					
ANR	2626012	EqualityExpression	( num & 0xff000000 ) == ( ( num & 0x0000ff00 ) << 16 )		2625925	1		==			
ANR	2626013	BitAndExpression	num & 0xff000000		2625925	0		&			
ANR	2626014	Identifier	num		2625925	0					
ANR	2626015	PrimaryExpression	0xff000000		2625925	1					
ANR	2626016	ShiftExpression	( num & 0x0000ff00 ) << 16		2625925	1		<<			
ANR	2626017	BitAndExpression	num & 0x0000ff00		2625925	0		&			
ANR	2626018	Identifier	num		2625925	0					
ANR	2626019	PrimaryExpression	0x0000ff00		2625925	1					
ANR	2626020	PrimaryExpression	16		2625925	1					
ANR	2626021	CompoundStatement		15:95:397:397	2625925	1					
ANR	2626022	ExpressionStatement	result |= num & 0x0000ff00	575:2:12438:12464	2625925	0	True				
ANR	2626023	AssignmentExpression	result |= num & 0x0000ff00		2625925	0		|=			
ANR	2626024	Identifier	result		2625925	0					
ANR	2626025	BitAndExpression	num & 0x0000ff00		2625925	1		&			
ANR	2626026	Identifier	num		2625925	0					
ANR	2626027	PrimaryExpression	0x0000ff00		2625925	1					
ANR	2626028	ExpressionStatement	result |= 0x00000020	576:2:12468:12488	2625925	1	True				
ANR	2626029	AssignmentExpression	result |= 0x00000020		2625925	0		|=			
ANR	2626030	Identifier	result		2625925	0					
ANR	2626031	PrimaryExpression	0x00000020		2625925	1					
ANR	2626032	ReturnStatement	return result ;	577:2:12492:12505	2625925	2	True				
ANR	2626033	Identifier	result		2625925	0					
ANR	2626034	ElseStatement	else		2625925	0					
ANR	2626035	IfStatement	if ( ( ( num & 0xff000000 ) == ( ( num & 0x00ff0000 ) << 8 ) ) && ( ( num & 0xff000000 ) == ( ( num & 0x0000ff00 ) << 16 ) ) && ( ( num & 0xff000000 ) == ( ( num & 0x000000ff ) << 24 ) ) )		2625925	0					
ANR	2626036	Condition	( ( num & 0xff000000 ) == ( ( num & 0x00ff0000 ) << 8 ) ) && ( ( num & 0xff000000 ) == ( ( num & 0x0000ff00 ) << 16 ) ) && ( ( num & 0xff000000 ) == ( ( num & 0x000000ff ) << 24 ) )	578:13:12520:12675	2625925	0	True				
ANR	2626037	AndExpression	( ( num & 0xff000000 ) == ( ( num & 0x00ff0000 ) << 8 ) ) && ( ( num & 0xff000000 ) == ( ( num & 0x0000ff00 ) << 16 ) ) && ( ( num & 0xff000000 ) == ( ( num & 0x000000ff ) << 24 ) )		2625925	0		&&			
ANR	2626038	EqualityExpression	( num & 0xff000000 ) == ( ( num & 0x00ff0000 ) << 8 )		2625925	0		==			
ANR	2626039	BitAndExpression	num & 0xff000000		2625925	0		&			
ANR	2626040	Identifier	num		2625925	0					
ANR	2626041	PrimaryExpression	0xff000000		2625925	1					
ANR	2626042	ShiftExpression	( num & 0x00ff0000 ) << 8		2625925	1		<<			
ANR	2626043	BitAndExpression	num & 0x00ff0000		2625925	0		&			
ANR	2626044	Identifier	num		2625925	0					
ANR	2626045	PrimaryExpression	0x00ff0000		2625925	1					
ANR	2626046	PrimaryExpression	8		2625925	1					
ANR	2626047	AndExpression	( ( num & 0xff000000 ) == ( ( num & 0x0000ff00 ) << 16 ) ) && ( ( num & 0xff000000 ) == ( ( num & 0x000000ff ) << 24 ) )		2625925	1		&&			
ANR	2626048	EqualityExpression	( num & 0xff000000 ) == ( ( num & 0x0000ff00 ) << 16 )		2625925	0		==			
ANR	2626049	BitAndExpression	num & 0xff000000		2625925	0		&			
ANR	2626050	Identifier	num		2625925	0					
ANR	2626051	PrimaryExpression	0xff000000		2625925	1					
ANR	2626052	ShiftExpression	( num & 0x0000ff00 ) << 16		2625925	1		<<			
ANR	2626053	BitAndExpression	num & 0x0000ff00		2625925	0		&			
ANR	2626054	Identifier	num		2625925	0					
ANR	2626055	PrimaryExpression	0x0000ff00		2625925	1					
ANR	2626056	PrimaryExpression	16		2625925	1					
ANR	2626057	EqualityExpression	( num & 0xff000000 ) == ( ( num & 0x000000ff ) << 24 )		2625925	1		==			
ANR	2626058	BitAndExpression	num & 0xff000000		2625925	0		&			
ANR	2626059	Identifier	num		2625925	0					
ANR	2626060	PrimaryExpression	0xff000000		2625925	1					
ANR	2626061	ShiftExpression	( num & 0x000000ff ) << 24		2625925	1		<<			
ANR	2626062	BitAndExpression	num & 0x000000ff		2625925	0		&			
ANR	2626063	Identifier	num		2625925	0					
ANR	2626064	PrimaryExpression	0x000000ff		2625925	1					
ANR	2626065	PrimaryExpression	24		2625925	1					
ANR	2626066	CompoundStatement		19:172:642:642	2625925	1					
ANR	2626067	ExpressionStatement	result |= num & 0x0000ff00	579:2:12683:12709	2625925	0	True				
ANR	2626068	AssignmentExpression	result |= num & 0x0000ff00		2625925	0		|=			
ANR	2626069	Identifier	result		2625925	0					
ANR	2626070	BitAndExpression	num & 0x0000ff00		2625925	1		&			
ANR	2626071	Identifier	num		2625925	0					
ANR	2626072	PrimaryExpression	0x0000ff00		2625925	1					
ANR	2626073	ExpressionStatement	result |= 0x00000030	580:2:12713:12733	2625925	1	True				
ANR	2626074	AssignmentExpression	result |= 0x00000030		2625925	0		|=			
ANR	2626075	Identifier	result		2625925	0					
ANR	2626076	PrimaryExpression	0x00000030		2625925	1					
ANR	2626077	ReturnStatement	return result ;	581:2:12737:12750	2625925	2	True				
ANR	2626078	Identifier	result		2625925	0					
ANR	2626079	ElseStatement	else		2625925	0					
ANR	2626080	CompoundStatement		23:8:723:723	2625925	0					
ANR	2626081	ExpressionStatement	FSD = firstsigdigit ( num )	583:2:12764:12788	2625925	0	True				
ANR	2626082	AssignmentExpression	FSD = firstsigdigit ( num )		2625925	0		=			
ANR	2626083	Identifier	FSD		2625925	0					
ANR	2626084	CallExpression	firstsigdigit ( num )		2625925	1					
ANR	2626085	Callee	firstsigdigit		2625925	0					
ANR	2626086	Identifier	firstsigdigit		2625925	0					
ANR	2626087	ArgumentList	num		2625925	1					
ANR	2626088	Argument	num		2625925	0					
ANR	2626089	Identifier	num		2625925	0					
ANR	2626090	IfStatement	if ( FSD != - 1 )		2625925	1					
ANR	2626091	Condition	FSD != - 1	584:6:12796:12804	2625925	0	True				
ANR	2626092	EqualityExpression	FSD != - 1		2625925	0		!=			
ANR	2626093	Identifier	FSD		2625925	0					
ANR	2626094	UnaryOperationExpression	- 1		2625925	1					
ANR	2626095	UnaryOperator	-		2625925	0					
ANR	2626096	PrimaryExpression	1		2625925	1					
ANR	2626097	CompoundStatement		25:17:770:770	2625925	1					
ANR	2626098	ExpressionStatement	result |= ( ( num >> ( 24 - FSD ) ) & 0x0000007f ) << 8	585:10:12819:12866	2625925	0	True				
ANR	2626099	AssignmentExpression	result |= ( ( num >> ( 24 - FSD ) ) & 0x0000007f ) << 8		2625925	0		|=			
ANR	2626100	Identifier	result		2625925	0					
ANR	2626101	ShiftExpression	( ( num >> ( 24 - FSD ) ) & 0x0000007f ) << 8		2625925	1		<<			
ANR	2626102	BitAndExpression	( num >> ( 24 - FSD ) ) & 0x0000007f		2625925	0		&			
ANR	2626103	ShiftExpression	num >> ( 24 - FSD )		2625925	0		>>			
ANR	2626104	Identifier	num		2625925	0					
ANR	2626105	AdditiveExpression	24 - FSD		2625925	1		-			
ANR	2626106	PrimaryExpression	24		2625925	0					
ANR	2626107	Identifier	FSD		2625925	1					
ANR	2626108	PrimaryExpression	0x0000007f		2625925	1					
ANR	2626109	PrimaryExpression	8		2625925	1					
ANR	2626110	ExpressionStatement	result |= ( ( 8 + FSD ) & 0x1 ) << 15	586:3:12871:12902	2625925	1	True				
ANR	2626111	AssignmentExpression	result |= ( ( 8 + FSD ) & 0x1 ) << 15		2625925	0		|=			
ANR	2626112	Identifier	result		2625925	0					
ANR	2626113	ShiftExpression	( ( 8 + FSD ) & 0x1 ) << 15		2625925	1		<<			
ANR	2626114	BitAndExpression	( 8 + FSD ) & 0x1		2625925	0		&			
ANR	2626115	AdditiveExpression	8 + FSD		2625925	0		+			
ANR	2626116	PrimaryExpression	8		2625925	0					
ANR	2626117	Identifier	FSD		2625925	1					
ANR	2626118	PrimaryExpression	0x1		2625925	1					
ANR	2626119	PrimaryExpression	15		2625925	1					
ANR	2626120	ExpressionStatement	result |= ( ( 8 + FSD ) & 0xe ) << 3	587:3:12907:12937	2625925	2	True				
ANR	2626121	AssignmentExpression	result |= ( ( 8 + FSD ) & 0xe ) << 3		2625925	0		|=			
ANR	2626122	Identifier	result		2625925	0					
ANR	2626123	ShiftExpression	( ( 8 + FSD ) & 0xe ) << 3		2625925	1		<<			
ANR	2626124	BitAndExpression	( 8 + FSD ) & 0xe		2625925	0		&			
ANR	2626125	AdditiveExpression	8 + FSD		2625925	0		+			
ANR	2626126	PrimaryExpression	8		2625925	0					
ANR	2626127	Identifier	FSD		2625925	1					
ANR	2626128	PrimaryExpression	0xe		2625925	1					
ANR	2626129	PrimaryExpression	3		2625925	1					
ANR	2626130	ExpressionStatement	result |= ( ( 8 + FSD ) & 0x10 ) << 14	588:3:12942:12974	2625925	3	True				
ANR	2626131	AssignmentExpression	result |= ( ( 8 + FSD ) & 0x10 ) << 14		2625925	0		|=			
ANR	2626132	Identifier	result		2625925	0					
ANR	2626133	ShiftExpression	( ( 8 + FSD ) & 0x10 ) << 14		2625925	1		<<			
ANR	2626134	BitAndExpression	( 8 + FSD ) & 0x10		2625925	0		&			
ANR	2626135	AdditiveExpression	8 + FSD		2625925	0		+			
ANR	2626136	PrimaryExpression	8		2625925	0					
ANR	2626137	Identifier	FSD		2625925	1					
ANR	2626138	PrimaryExpression	0x10		2625925	1					
ANR	2626139	PrimaryExpression	14		2625925	1					
ANR	2626140	ReturnStatement	return result ;	589:3:12979:12992	2625925	4	True				
ANR	2626141	Identifier	result		2625925	0					
ANR	2626142	ElseStatement	else		2625925	0					
ANR	2626143	CompoundStatement		31:9:966:966	2625925	0					
ANR	2626144	ExpressionStatement	err = true	591:3:13008:13018	2625925	0	True				
ANR	2626145	AssignmentExpression	err = true		2625925	0		=			
ANR	2626146	Identifier	err		2625925	0					
ANR	2626147	Identifier	true		2625925	1					
ANR	2626148	ReturnStatement	return 0 ;	592:3:13023:13031	2625925	1	True				
ANR	2626149	PrimaryExpression	0		2625925	0					
ANR	2626150	ReturnType	static ut32		2625925	1					
ANR	2626151	Identifier	getthimmed12		2625925	2					
ANR	2626152	ParameterList	const char * str		2625925	3					
ANR	2626153	Parameter	const char * str	560:25:12019:12033	2625925	0	True				
ANR	2626154	ParameterType	const char *		2625925	0					
ANR	2626155	Identifier	str		2625925	1					
ANR	2626156	CFGEntryNode	ENTRY		2625925		True				
ANR	2626157	CFGExitNode	EXIT		2625925		True				
ANR	2626158	Symbol	str		2625925						
ANR	2626159	Symbol	result		2625925						
ANR	2626160	Symbol	err		2625925						
ANR	2626161	Symbol	FSD		2625925						
ANR	2626162	Symbol	num		2625925						
ANR	2626163	Symbol	getnum		2625925						
ANR	2626164	Symbol	firstsigdigit		2625925						
ANR	2626165	Symbol	true		2625925						
ANR	2626166	Function	getrange	597:0:13043:13326							
ANR	2626167	FunctionDef	getrange (char * s)		2626166	0					
ANR	2626168	CompoundStatement		597:31:13074:13326	2626166	0					
ANR	2626169	IdentifierDeclStatement	char * p = NULL ;	598:1:13077:13091	2626166	0	True				
ANR	2626170	IdentifierDecl	* p = NULL		2626166	0					
ANR	2626171	IdentifierDeclType	char *		2626166	0					
ANR	2626172	Identifier	p		2626166	1					
ANR	2626173	AssignmentExpression	* p = NULL		2626166	2		=			
ANR	2626174	Identifier	NULL		2626166	0					
ANR	2626175	Identifier	NULL		2626166	1					
ANR	2626176	WhileStatement	while ( s && * s )		2626166	1					
ANR	2626177	Condition	s && * s	599:8:13101:13107	2626166	0	True				
ANR	2626178	AndExpression	s && * s		2626166	0		&&			
ANR	2626179	Identifier	s		2626166	0					
ANR	2626180	UnaryOperationExpression	* s		2626166	1					
ANR	2626181	UnaryOperator	*		2626166	0					
ANR	2626182	Identifier	s		2626166	1					
ANR	2626183	CompoundStatement		3:17:35:35	2626166	1					
ANR	2626184	IfStatement	"if ( * s == ',' )"		2626166	0					
ANR	2626185	Condition	"* s == ','"	600:6:13118:13126	2626166	0	True				
ANR	2626186	EqualityExpression	"* s == ','"		2626166	0		==			
ANR	2626187	UnaryOperationExpression	* s		2626166	0					
ANR	2626188	UnaryOperator	*		2626166	0					
ANR	2626189	Identifier	s		2626166	1					
ANR	2626190	PrimaryExpression	"','"		2626166	1					
ANR	2626191	CompoundStatement		4:17:54:54	2626166	1					
ANR	2626192	ExpressionStatement	p = s + 1	601:3:13134:13141	2626166	0	True				
ANR	2626193	AssignmentExpression	p = s + 1		2626166	0		=			
ANR	2626194	Identifier	p		2626166	0					
ANR	2626195	AdditiveExpression	s + 1		2626166	1		+			
ANR	2626196	Identifier	s		2626166	0					
ANR	2626197	PrimaryExpression	1		2626166	1					
ANR	2626198	ExpressionStatement	* p = 0	602:3:13146:13150	2626166	1	True				
ANR	2626199	AssignmentExpression	* p = 0		2626166	0		=			
ANR	2626200	UnaryOperationExpression	* p		2626166	0					
ANR	2626201	UnaryOperator	*		2626166	0					
ANR	2626202	Identifier	p		2626166	1					
ANR	2626203	PrimaryExpression	0		2626166	1					
ANR	2626204	IfStatement	if ( * s == '[' || * s == ']' )		2626166	1					
ANR	2626205	Condition	* s == '[' || * s == ']'	604:6:13162:13183	2626166	0	True				
ANR	2626206	OrExpression	* s == '[' || * s == ']'		2626166	0		||			
ANR	2626207	EqualityExpression	* s == '['		2626166	0		==			
ANR	2626208	UnaryOperationExpression	* s		2626166	0					
ANR	2626209	UnaryOperator	*		2626166	0					
ANR	2626210	Identifier	s		2626166	1					
ANR	2626211	PrimaryExpression	'['		2626166	1					
ANR	2626212	EqualityExpression	* s == ']'		2626166	1		==			
ANR	2626213	UnaryOperationExpression	* s		2626166	0					
ANR	2626214	UnaryOperator	*		2626166	0					
ANR	2626215	Identifier	s		2626166	1					
ANR	2626216	PrimaryExpression	']'		2626166	1					
ANR	2626217	CompoundStatement		8:30:111:111	2626166	1					
ANR	2626218	ExpressionStatement	"memmove ( s , s + 1 , strlen ( s + 1 ) + 1 )"	605:3:13191:13229	2626166	0	True				
ANR	2626219	CallExpression	"memmove ( s , s + 1 , strlen ( s + 1 ) + 1 )"		2626166	0					
ANR	2626220	Callee	memmove		2626166	0					
ANR	2626221	Identifier	memmove		2626166	0					
ANR	2626222	ArgumentList	s		2626166	1					
ANR	2626223	Argument	s		2626166	0					
ANR	2626224	Identifier	s		2626166	0					
ANR	2626225	Argument	s + 1		2626166	1					
ANR	2626226	AdditiveExpression	s + 1		2626166	0		+			
ANR	2626227	Identifier	s		2626166	0					
ANR	2626228	PrimaryExpression	1		2626166	1					
ANR	2626229	Argument	strlen ( s + 1 ) + 1		2626166	2					
ANR	2626230	AdditiveExpression	strlen ( s + 1 ) + 1		2626166	0		+			
ANR	2626231	CallExpression	strlen ( s + 1 )		2626166	0					
ANR	2626232	Callee	strlen		2626166	0					
ANR	2626233	Identifier	strlen		2626166	0					
ANR	2626234	ArgumentList	s + 1		2626166	1					
ANR	2626235	Argument	s + 1		2626166	0					
ANR	2626236	AdditiveExpression	s + 1		2626166	0		+			
ANR	2626237	Identifier	s		2626166	0					
ANR	2626238	PrimaryExpression	1		2626166	1					
ANR	2626239	PrimaryExpression	1		2626166	1					
ANR	2626240	IfStatement	if ( * s == '}' )		2626166	2					
ANR	2626241	Condition	* s == '}'	607:6:13241:13249	2626166	0	True				
ANR	2626242	EqualityExpression	* s == '}'		2626166	0		==			
ANR	2626243	UnaryOperationExpression	* s		2626166	0					
ANR	2626244	UnaryOperator	*		2626166	0					
ANR	2626245	Identifier	s		2626166	1					
ANR	2626246	PrimaryExpression	'}'		2626166	1					
ANR	2626247	CompoundStatement		11:17:177:177	2626166	1					
ANR	2626248	ExpressionStatement	* s = 0	608:3:13257:13263	2626166	0	True				
ANR	2626249	AssignmentExpression	* s = 0		2626166	0		=			
ANR	2626250	UnaryOperationExpression	* s		2626166	0					
ANR	2626251	UnaryOperator	*		2626166	0					
ANR	2626252	Identifier	s		2626166	1					
ANR	2626253	PrimaryExpression	0		2626166	1					
ANR	2626254	ExpressionStatement	s ++	610:2:13271:13274	2626166	3	True				
ANR	2626255	PostIncDecOperationExpression	s ++		2626166	0					
ANR	2626256	Identifier	s		2626166	0					
ANR	2626257	IncDec	++		2626166	1					
ANR	2626258	WhileStatement	while ( p && * p == ' ' )		2626166	2					
ANR	2626259	Condition	p && * p == ' '	612:8:13287:13300	2626166	0	True				
ANR	2626260	AndExpression	p && * p == ' '		2626166	0		&&			
ANR	2626261	Identifier	p		2626166	0					
ANR	2626262	EqualityExpression	* p == ' '		2626166	1		==			
ANR	2626263	UnaryOperationExpression	* p		2626166	0					
ANR	2626264	UnaryOperator	*		2626166	0					
ANR	2626265	Identifier	p		2626166	1					
ANR	2626266	PrimaryExpression	' '		2626166	1					
ANR	2626267	CompoundStatement		16:24:228:228	2626166	1					
ANR	2626268	ExpressionStatement	p ++	613:2:13307:13310	2626166	0	True				
ANR	2626269	PostIncDecOperationExpression	p ++		2626166	0					
ANR	2626270	Identifier	p		2626166	0					
ANR	2626271	IncDec	++		2626166	1					
ANR	2626272	ReturnStatement	return p ;	615:1:13316:13324	2626166	3	True				
ANR	2626273	Identifier	p		2626166	0					
ANR	2626274	ReturnType	static char *		2626166	1					
ANR	2626275	Identifier	getrange		2626166	2					
ANR	2626276	ParameterList	char * s		2626166	3					
ANR	2626277	Parameter	char * s	597:22:13065:13071	2626166	0	True				
ANR	2626278	ParameterType	char *		2626166	0					
ANR	2626279	Identifier	s		2626166	1					
ANR	2626280	CFGEntryNode	ENTRY		2626166		True				
ANR	2626281	CFGExitNode	EXIT		2626166		True				
ANR	2626282	Symbol	p		2626166						
ANR	2626283	Symbol	strlen		2626166						
ANR	2626284	Symbol	s		2626166						
ANR	2626285	Symbol	NULL		2626166						
ANR	2626286	Symbol	* p		2626166						
ANR	2626287	Symbol	* s		2626166						
ANR	2626288	Function	getreg	619:0:13360:13805							
ANR	2626289	FunctionDef	getreg (const char * str)		2626288	0					
ANR	2626290	CompoundStatement		619:35:13395:13805	2626288	0					
ANR	2626291	IdentifierDeclStatement	int i ;	620:1:13398:13403	2626288	0	True				
ANR	2626292	IdentifierDecl	i		2626288	0					
ANR	2626293	IdentifierDeclType	int		2626288	0					
ANR	2626294	Identifier	i		2626288	1					
ANR	2626295	IdentifierDeclStatement	char * ep ;	621:1:13406:13414	2626288	1	True				
ANR	2626296	IdentifierDecl	* ep		2626288	0					
ANR	2626297	IdentifierDeclType	char *		2626288	0					
ANR	2626298	Identifier	ep		2626288	1					
ANR	2626299	IdentifierDeclStatement	"const char * aliases [ ] = { ""sl"" , ""fp"" , ""ip"" , ""sp"" , ""lr"" , ""pc"" , NULL } ;"	622:1:13417:13485	2626288	2	True				
ANR	2626300	IdentifierDecl	"* aliases [ ] = { ""sl"" , ""fp"" , ""ip"" , ""sp"" , ""lr"" , ""pc"" , NULL }"		2626288	0					
ANR	2626301	IdentifierDeclType	const char * [ ]		2626288	0					
ANR	2626302	Identifier	aliases		2626288	1					
ANR	2626303	AssignmentExpression	"* aliases [ ] = { ""sl"" , ""fp"" , ""ip"" , ""sp"" , ""lr"" , ""pc"" , NULL }"		2626288	2		=			
ANR	2626304	Identifier	aliases		2626288	0					
ANR	2626305	InitializerList	"""sl"""		2626288	1					
ANR	2626306	PrimaryExpression	"""sl"""		2626288	0					
ANR	2626307	PrimaryExpression	"""fp"""		2626288	1					
ANR	2626308	PrimaryExpression	"""ip"""		2626288	2					
ANR	2626309	PrimaryExpression	"""sp"""		2626288	3					
ANR	2626310	PrimaryExpression	"""lr"""		2626288	4					
ANR	2626311	PrimaryExpression	"""pc"""		2626288	5					
ANR	2626312	Identifier	NULL		2626288	6					
ANR	2626313	IfStatement	if ( ! str || ! * str )		2626288	3					
ANR	2626314	Condition	! str || ! * str	623:5:13492:13504	2626288	0	True				
ANR	2626315	OrExpression	! str || ! * str		2626288	0		||			
ANR	2626316	UnaryOperationExpression	! str		2626288	0					
ANR	2626317	UnaryOperator	!		2626288	0					
ANR	2626318	Identifier	str		2626288	1					
ANR	2626319	UnaryOperationExpression	! * str		2626288	1					
ANR	2626320	UnaryOperator	!		2626288	0					
ANR	2626321	UnaryOperationExpression	* str		2626288	1					
ANR	2626322	UnaryOperator	*		2626288	0					
ANR	2626323	Identifier	str		2626288	1					
ANR	2626324	CompoundStatement		5:20:111:111	2626288	1					
ANR	2626325	ReturnStatement	return - 1 ;	624:2:13511:13520	2626288	0	True				
ANR	2626326	UnaryOperationExpression	- 1		2626288	0					
ANR	2626327	UnaryOperator	-		2626288	0					
ANR	2626328	PrimaryExpression	1		2626288	1					
ANR	2626329	IfStatement	if ( * str == 'r' )		2626288	4					
ANR	2626330	Condition	* str == 'r'	626:5:13530:13540	2626288	0	True				
ANR	2626331	EqualityExpression	* str == 'r'		2626288	0		==			
ANR	2626332	UnaryOperationExpression	* str		2626288	0					
ANR	2626333	UnaryOperator	*		2626288	0					
ANR	2626334	Identifier	str		2626288	1					
ANR	2626335	PrimaryExpression	'r'		2626288	1					
ANR	2626336	CompoundStatement		9:2:151:186	2626288	1					
ANR	2626337	IdentifierDeclStatement	"int reg = strtol ( str + 1 , & ep , 10 ) ;"	627:2:13547:13582	2626288	0	True				
ANR	2626338	IdentifierDecl	"reg = strtol ( str + 1 , & ep , 10 )"		2626288	0					
ANR	2626339	IdentifierDeclType	int		2626288	0					
ANR	2626340	Identifier	reg		2626288	1					
ANR	2626341	AssignmentExpression	"reg = strtol ( str + 1 , & ep , 10 )"		2626288	2		=			
ANR	2626342	Identifier	reg		2626288	0					
ANR	2626343	CallExpression	"strtol ( str + 1 , & ep , 10 )"		2626288	1					
ANR	2626344	Callee	strtol		2626288	0					
ANR	2626345	Identifier	strtol		2626288	0					
ANR	2626346	ArgumentList	str + 1		2626288	1					
ANR	2626347	Argument	str + 1		2626288	0					
ANR	2626348	AdditiveExpression	str + 1		2626288	0		+			
ANR	2626349	Identifier	str		2626288	0					
ANR	2626350	PrimaryExpression	1		2626288	1					
ANR	2626351	Argument	& ep		2626288	1					
ANR	2626352	UnaryOperationExpression	& ep		2626288	0					
ANR	2626353	UnaryOperator	&		2626288	0					
ANR	2626354	Identifier	ep		2626288	1					
ANR	2626355	Argument	10		2626288	2					
ANR	2626356	PrimaryExpression	10		2626288	0					
ANR	2626357	IfStatement	if ( ( ep [ 0 ] != '\\0' ) || ( str [ 1 ] == '\\0' ) )		2626288	1					
ANR	2626358	Condition	( ep [ 0 ] != '\\0' ) || ( str [ 1 ] == '\\0' )	628:6:13590:13624	2626288	0	True				
ANR	2626359	OrExpression	( ep [ 0 ] != '\\0' ) || ( str [ 1 ] == '\\0' )		2626288	0		||			
ANR	2626360	EqualityExpression	ep [ 0 ] != '\\0'		2626288	0		!=			
ANR	2626361	ArrayIndexing	ep [ 0 ]		2626288	0					
ANR	2626362	Identifier	ep		2626288	0					
ANR	2626363	PrimaryExpression	0		2626288	1					
ANR	2626364	PrimaryExpression	'\\0'		2626288	1					
ANR	2626365	EqualityExpression	str [ 1 ] == '\\0'		2626288	1		==			
ANR	2626366	ArrayIndexing	str [ 1 ]		2626288	0					
ANR	2626367	Identifier	str		2626288	0					
ANR	2626368	PrimaryExpression	1		2626288	1					
ANR	2626369	PrimaryExpression	'\\0'		2626288	1					
ANR	2626370	CompoundStatement		10:43:231:231	2626288	1					
ANR	2626371	ReturnStatement	return - 1 ;	629:3:13632:13641	2626288	0	True				
ANR	2626372	UnaryOperationExpression	- 1		2626288	0					
ANR	2626373	UnaryOperator	-		2626288	0					
ANR	2626374	PrimaryExpression	1		2626288	1					
ANR	2626375	IfStatement	if ( reg < 16 && reg >= 0 )		2626288	2					
ANR	2626376	Condition	reg < 16 && reg >= 0	631:6:13653:13672	2626288	0	True				
ANR	2626377	AndExpression	reg < 16 && reg >= 0		2626288	0		&&			
ANR	2626378	RelationalExpression	reg < 16		2626288	0		<			
ANR	2626379	Identifier	reg		2626288	0					
ANR	2626380	PrimaryExpression	16		2626288	1					
ANR	2626381	RelationalExpression	reg >= 0		2626288	1		>=			
ANR	2626382	Identifier	reg		2626288	0					
ANR	2626383	PrimaryExpression	0		2626288	1					
ANR	2626384	CompoundStatement		13:28:279:279	2626288	1					
ANR	2626385	ReturnStatement	return reg ;	632:3:13680:13690	2626288	0	True				
ANR	2626386	Identifier	reg		2626288	0					
ANR	2626387	ForStatement	for ( i = 0 ; aliases [ i ] ; i ++ )		2626288	5					
ANR	2626388	ForInit	i = 0 ;	635:6:13705:13708	2626288	0	True				
ANR	2626389	AssignmentExpression	i = 0		2626288	0		=			
ANR	2626390	Identifier	i		2626288	0					
ANR	2626391	PrimaryExpression	0		2626288	1					
ANR	2626392	Condition	aliases [ i ]	635:11:13710:13719	2626288	1	True				
ANR	2626393	ArrayIndexing	aliases [ i ]		2626288	0					
ANR	2626394	Identifier	aliases		2626288	0					
ANR	2626395	Identifier	i		2626288	1					
ANR	2626396	PostIncDecOperationExpression	i ++	635:23:13722:13724	2626288	2	True				
ANR	2626397	Identifier	i		2626288	0					
ANR	2626398	IncDec	++		2626288	1					
ANR	2626399	CompoundStatement		17:28:331:331	2626288	3					
ANR	2626400	IfStatement	"if ( ! strcmpnull ( str , aliases [ i ] ) )"		2626288	0					
ANR	2626401	Condition	"! strcmpnull ( str , aliases [ i ] )"	636:6:13735:13763	2626288	0	True				
ANR	2626402	UnaryOperationExpression	"! strcmpnull ( str , aliases [ i ] )"		2626288	0					
ANR	2626403	UnaryOperator	!		2626288	0					
ANR	2626404	CallExpression	"strcmpnull ( str , aliases [ i ] )"		2626288	1					
ANR	2626405	Callee	strcmpnull		2626288	0					
ANR	2626406	Identifier	strcmpnull		2626288	0					
ANR	2626407	ArgumentList	str		2626288	1					
ANR	2626408	Argument	str		2626288	0					
ANR	2626409	Identifier	str		2626288	0					
ANR	2626410	Argument	aliases [ i ]		2626288	1					
ANR	2626411	ArrayIndexing	aliases [ i ]		2626288	0					
ANR	2626412	Identifier	aliases		2626288	0					
ANR	2626413	Identifier	i		2626288	1					
ANR	2626414	CompoundStatement		18:37:370:370	2626288	1					
ANR	2626415	ReturnStatement	return 10 + i ;	637:3:13771:13784	2626288	0	True				
ANR	2626416	AdditiveExpression	10 + i		2626288	0		+			
ANR	2626417	PrimaryExpression	10		2626288	0					
ANR	2626418	Identifier	i		2626288	1					
ANR	2626419	ReturnStatement	return - 1 ;	640:1:13794:13803	2626288	6	True				
ANR	2626420	UnaryOperationExpression	- 1		2626288	0					
ANR	2626421	UnaryOperator	-		2626288	0					
ANR	2626422	PrimaryExpression	1		2626288	1					
ANR	2626423	ReturnType	static int		2626288	1					
ANR	2626424	Identifier	getreg		2626288	2					
ANR	2626425	ParameterList	const char * str		2626288	3					
ANR	2626426	Parameter	const char * str	619:18:13378:13392	2626288	0	True				
ANR	2626427	ParameterType	const char *		2626288	0					
ANR	2626428	Identifier	str		2626288	1					
ANR	2626429	CFGEntryNode	ENTRY		2626288		True				
ANR	2626430	CFGExitNode	EXIT		2626288		True				
ANR	2626431	Symbol	NULL		2626288						
ANR	2626432	Symbol	aliases		2626288						
ANR	2626433	Symbol	i		2626288						
ANR	2626434	Symbol	ep		2626288						
ANR	2626435	Symbol	str		2626288						
ANR	2626436	Symbol	strcmpnull		2626288						
ANR	2626437	Symbol	* ep		2626288						
ANR	2626438	Symbol	* i		2626288						
ANR	2626439	Symbol	& ep		2626288						
ANR	2626440	Symbol	reg		2626288						
ANR	2626441	Symbol	strtol		2626288						
ANR	2626442	Symbol	* aliases		2626288						
ANR	2626443	Symbol	* str		2626288						
ANR	2626444	Function	getlistmask	644:0:13809:14946							
ANR	2626445	FunctionDef	getlistmask (char * input)		2626444	0					
ANR	2626446	CompoundStatement		644:37:13846:14946	2626444	0					
ANR	2626447	IdentifierDeclStatement	"st32 tempres , res = 0 ;"	645:1:13849:13870	2626444	0	True				
ANR	2626448	IdentifierDecl	tempres		2626444	0					
ANR	2626449	IdentifierDeclType	st32		2626444	0					
ANR	2626450	Identifier	tempres		2626444	1					
ANR	2626451	IdentifierDecl	res = 0		2626444	1					
ANR	2626452	IdentifierDeclType	st32		2626444	0					
ANR	2626453	Identifier	res		2626444	1					
ANR	2626454	AssignmentExpression	res = 0		2626444	2		=			
ANR	2626455	Identifier	res		2626444	0					
ANR	2626456	PrimaryExpression	0		2626444	1					
ANR	2626457	IdentifierDeclStatement	"int i , j , start , end ;"	646:1:13873:13893	2626444	1	True				
ANR	2626458	IdentifierDecl	i		2626444	0					
ANR	2626459	IdentifierDeclType	int		2626444	0					
ANR	2626460	Identifier	i		2626444	1					
ANR	2626461	IdentifierDecl	j		2626444	1					
ANR	2626462	IdentifierDeclType	int		2626444	0					
ANR	2626463	Identifier	j		2626444	1					
ANR	2626464	IdentifierDecl	start		2626444	2					
ANR	2626465	IdentifierDeclType	int		2626444	0					
ANR	2626466	Identifier	start		2626444	1					
ANR	2626467	IdentifierDecl	end		2626444	3					
ANR	2626468	IdentifierDeclType	int		2626444	0					
ANR	2626469	Identifier	end		2626444	1					
ANR	2626470	IdentifierDeclStatement	char * temp = NULL ;	647:1:13896:13913	2626444	2	True				
ANR	2626471	IdentifierDecl	* temp = NULL		2626444	0					
ANR	2626472	IdentifierDeclType	char *		2626444	0					
ANR	2626473	Identifier	temp		2626444	1					
ANR	2626474	AssignmentExpression	* temp = NULL		2626444	2		=			
ANR	2626475	Identifier	NULL		2626444	0					
ANR	2626476	Identifier	NULL		2626444	1					
ANR	2626477	IdentifierDeclStatement	char * otemp = NULL ;	648:1:13916:13934	2626444	3	True				
ANR	2626478	IdentifierDecl	* otemp = NULL		2626444	0					
ANR	2626479	IdentifierDeclType	char *		2626444	0					
ANR	2626480	Identifier	otemp		2626444	1					
ANR	2626481	AssignmentExpression	* otemp = NULL		2626444	2		=			
ANR	2626482	Identifier	NULL		2626444	0					
ANR	2626483	Identifier	NULL		2626444	1					
ANR	2626484	IdentifierDeclStatement	char * temp2 = malloc ( strlen ( input ) + 1 ) ;	649:1:13937:13978	2626444	4	True				
ANR	2626485	IdentifierDecl	* temp2 = malloc ( strlen ( input ) + 1 )		2626444	0					
ANR	2626486	IdentifierDeclType	char *		2626444	0					
ANR	2626487	Identifier	temp2		2626444	1					
ANR	2626488	AssignmentExpression	* temp2 = malloc ( strlen ( input ) + 1 )		2626444	2		=			
ANR	2626489	Identifier	temp2		2626444	0					
ANR	2626490	CallExpression	malloc ( strlen ( input ) + 1 )		2626444	1					
ANR	2626491	Callee	malloc		2626444	0					
ANR	2626492	Identifier	malloc		2626444	0					
ANR	2626493	ArgumentList	strlen ( input ) + 1		2626444	1					
ANR	2626494	Argument	strlen ( input ) + 1		2626444	0					
ANR	2626495	AdditiveExpression	strlen ( input ) + 1		2626444	0		+			
ANR	2626496	CallExpression	strlen ( input )		2626444	0					
ANR	2626497	Callee	strlen		2626444	0					
ANR	2626498	Identifier	strlen		2626444	0					
ANR	2626499	ArgumentList	input		2626444	1					
ANR	2626500	Argument	input		2626444	0					
ANR	2626501	Identifier	input		2626444	0					
ANR	2626502	PrimaryExpression	1		2626444	1					
ANR	2626503	IfStatement	if ( ! temp2 )		2626444	5					
ANR	2626504	Condition	! temp2	650:5:13985:13990	2626444	0	True				
ANR	2626505	UnaryOperationExpression	! temp2		2626444	0					
ANR	2626506	UnaryOperator	!		2626444	0					
ANR	2626507	Identifier	temp2		2626444	1					
ANR	2626508	CompoundStatement		7:13:146:146	2626444	1					
ANR	2626509	ExpressionStatement	res = - 1	651:2:13997:14005	2626444	0	True				
ANR	2626510	AssignmentExpression	res = - 1		2626444	0		=			
ANR	2626511	Identifier	res		2626444	0					
ANR	2626512	UnaryOperationExpression	- 1		2626444	1					
ANR	2626513	UnaryOperator	-		2626444	0					
ANR	2626514	PrimaryExpression	1		2626444	1					
ANR	2626515	GotoStatement	goto end ;	652:2:14009:14017	2626444	1	True				
ANR	2626516	Identifier	end		2626444	0					
ANR	2626517	ExpressionStatement	temp = ( char * ) malloc ( strlen ( input ) + 1 )	654:1:14023:14065	2626444	6	True				
ANR	2626518	AssignmentExpression	temp = ( char * ) malloc ( strlen ( input ) + 1 )		2626444	0		=			
ANR	2626519	Identifier	temp		2626444	0					
ANR	2626520	CastExpression	( char * ) malloc ( strlen ( input ) + 1 )		2626444	1					
ANR	2626521	CastTarget	char *		2626444	0					
ANR	2626522	CallExpression	malloc ( strlen ( input ) + 1 )		2626444	1					
ANR	2626523	Callee	malloc		2626444	0					
ANR	2626524	Identifier	malloc		2626444	0					
ANR	2626525	ArgumentList	strlen ( input ) + 1		2626444	1					
ANR	2626526	Argument	strlen ( input ) + 1		2626444	0					
ANR	2626527	AdditiveExpression	strlen ( input ) + 1		2626444	0		+			
ANR	2626528	CallExpression	strlen ( input )		2626444	0					
ANR	2626529	Callee	strlen		2626444	0					
ANR	2626530	Identifier	strlen		2626444	0					
ANR	2626531	ArgumentList	input		2626444	1					
ANR	2626532	Argument	input		2626444	0					
ANR	2626533	Identifier	input		2626444	0					
ANR	2626534	PrimaryExpression	1		2626444	1					
ANR	2626535	IfStatement	if ( ! temp )		2626444	7					
ANR	2626536	Condition	! temp	655:5:14072:14076	2626444	0	True				
ANR	2626537	UnaryOperationExpression	! temp		2626444	0					
ANR	2626538	UnaryOperator	!		2626444	0					
ANR	2626539	Identifier	temp		2626444	1					
ANR	2626540	CompoundStatement		12:12:232:232	2626444	1					
ANR	2626541	ExpressionStatement	res = - 1	656:2:14083:14091	2626444	0	True				
ANR	2626542	AssignmentExpression	res = - 1		2626444	0		=			
ANR	2626543	Identifier	res		2626444	0					
ANR	2626544	UnaryOperationExpression	- 1		2626444	1					
ANR	2626545	UnaryOperator	-		2626444	0					
ANR	2626546	PrimaryExpression	1		2626444	1					
ANR	2626547	GotoStatement	goto end ;	657:2:14095:14103	2626444	1	True				
ANR	2626548	Identifier	end		2626444	0					
ANR	2626549	ExpressionStatement	otemp = temp	659:1:14109:14121	2626444	8	True				
ANR	2626550	AssignmentExpression	otemp = temp		2626444	0		=			
ANR	2626551	Identifier	otemp		2626444	0					
ANR	2626552	Identifier	temp		2626444	1					
ANR	2626553	WhileStatement	while ( * input != '\\0' )		2626444	9					
ANR	2626554	Condition	* input != '\\0'	660:8:14131:14144	2626444	0	True				
ANR	2626555	EqualityExpression	* input != '\\0'		2626444	0		!=			
ANR	2626556	UnaryOperationExpression	* input		2626444	0					
ANR	2626557	UnaryOperator	*		2626444	0					
ANR	2626558	Identifier	input		2626444	1					
ANR	2626559	PrimaryExpression	'\\0'		2626444	1					
ANR	2626560	CompoundStatement		17:24:300:300	2626444	1					
ANR	2626561	ForStatement	for ( ; * input == ' ' ; input ++ )		2626444	0					
ANR	2626562	Condition	* input == ' '	661:9:14158:14170	2626444	0	True				
ANR	2626563	EqualityExpression	* input == ' '		2626444	0		==			
ANR	2626564	UnaryOperationExpression	* input		2626444	0					
ANR	2626565	UnaryOperator	*		2626444	0					
ANR	2626566	Identifier	input		2626444	1					
ANR	2626567	PrimaryExpression	' '		2626444	1					
ANR	2626568	PostIncDecOperationExpression	input ++	661:24:14173:14179	2626444	1	True				
ANR	2626569	Identifier	input		2626444	0					
ANR	2626570	IncDec	++		2626444	1					
ANR	2626571	CompoundStatement		18:33:335:335	2626444	2					
ANR	2626572	ExpressionStatement		662:3:14187:14187	2626444	0	True				
ANR	2626573	ForStatement	"for ( i = 0 ; input [ i ] != ',' && input [ i ] != '\\0' ; i ++ )"		2626444	1					
ANR	2626574	ForInit	i = 0 ;	664:7:14200:14205	2626444	0	True				
ANR	2626575	AssignmentExpression	i = 0		2626444	0		=			
ANR	2626576	Identifier	i		2626444	0					
ANR	2626577	PrimaryExpression	0		2626444	1					
ANR	2626578	Condition	"input [ i ] != ',' && input [ i ] != '\\0'"	664:14:14207:14241	2626444	1	True				
ANR	2626579	AndExpression	"input [ i ] != ',' && input [ i ] != '\\0'"		2626444	0		&&			
ANR	2626580	EqualityExpression	"input [ i ] != ','"		2626444	0		!=			
ANR	2626581	ArrayIndexing	input [ i ]		2626444	0					
ANR	2626582	Identifier	input		2626444	0					
ANR	2626583	Identifier	i		2626444	1					
ANR	2626584	PrimaryExpression	"','"		2626444	1					
ANR	2626585	EqualityExpression	input [ i ] != '\\0'		2626444	1		!=			
ANR	2626586	ArrayIndexing	input [ i ]		2626444	0					
ANR	2626587	Identifier	input		2626444	0					
ANR	2626588	Identifier	i		2626444	1					
ANR	2626589	PrimaryExpression	'\\0'		2626444	1					
ANR	2626590	PostIncDecOperationExpression	i ++	664:51:14244:14246	2626444	2	True				
ANR	2626591	Identifier	i		2626444	0					
ANR	2626592	IncDec	++		2626444	1					
ANR	2626593	CompoundStatement		21:56:402:402	2626444	3					
ANR	2626594	ExpressionStatement		665:3:14254:14254	2626444	0	True				
ANR	2626595	ExpressionStatement	"r_str_ncpy ( temp , input , i + 1 )"	667:2:14262:14293	2626444	2	True				
ANR	2626596	CallExpression	"r_str_ncpy ( temp , input , i + 1 )"		2626444	0					
ANR	2626597	Callee	r_str_ncpy		2626444	0					
ANR	2626598	Identifier	r_str_ncpy		2626444	0					
ANR	2626599	ArgumentList	temp		2626444	1					
ANR	2626600	Argument	temp		2626444	0					
ANR	2626601	Identifier	temp		2626444	0					
ANR	2626602	Argument	input		2626444	1					
ANR	2626603	Identifier	input		2626444	0					
ANR	2626604	Argument	i + 1		2626444	2					
ANR	2626605	AdditiveExpression	i + 1		2626444	0		+			
ANR	2626606	Identifier	i		2626444	0					
ANR	2626607	PrimaryExpression	1		2626444	1					
ANR	2626608	ExpressionStatement	input += i	669:2:14298:14308	2626444	3	True				
ANR	2626609	AssignmentExpression	input += i		2626444	0		+=			
ANR	2626610	Identifier	input		2626444	0					
ANR	2626611	Identifier	i		2626444	1					
ANR	2626612	IfStatement	if ( * input != '\\0' )		2626444	4					
ANR	2626613	Condition	* input != '\\0'	670:6:14316:14329	2626444	0	True				
ANR	2626614	EqualityExpression	* input != '\\0'		2626444	0		!=			
ANR	2626615	UnaryOperationExpression	* input		2626444	0					
ANR	2626616	UnaryOperator	*		2626444	0					
ANR	2626617	Identifier	input		2626444	1					
ANR	2626618	PrimaryExpression	'\\0'		2626444	1					
ANR	2626619	CompoundStatement		27:22:485:485	2626444	1					
ANR	2626620	ExpressionStatement	input ++	671:3:14337:14344	2626444	0	True				
ANR	2626621	PostIncDecOperationExpression	input ++		2626444	0					
ANR	2626622	Identifier	input		2626444	0					
ANR	2626623	IncDec	++		2626444	1					
ANR	2626624	ForStatement	for ( i = 0 ; temp [ i ] != '-' && temp [ i ] != '\\0' ; i ++ )		2626444	5					
ANR	2626625	ForInit	i = 0 ;	674:7:14358:14363	2626444	0	True				
ANR	2626626	AssignmentExpression	i = 0		2626444	0		=			
ANR	2626627	Identifier	i		2626444	0					
ANR	2626628	PrimaryExpression	0		2626444	1					
ANR	2626629	Condition	temp [ i ] != '-' && temp [ i ] != '\\0'	674:14:14365:14397	2626444	1	True				
ANR	2626630	AndExpression	temp [ i ] != '-' && temp [ i ] != '\\0'		2626444	0		&&			
ANR	2626631	EqualityExpression	temp [ i ] != '-'		2626444	0		!=			
ANR	2626632	ArrayIndexing	temp [ i ]		2626444	0					
ANR	2626633	Identifier	temp		2626444	0					
ANR	2626634	Identifier	i		2626444	1					
ANR	2626635	PrimaryExpression	'-'		2626444	1					
ANR	2626636	EqualityExpression	temp [ i ] != '\\0'		2626444	1		!=			
ANR	2626637	ArrayIndexing	temp [ i ]		2626444	0					
ANR	2626638	Identifier	temp		2626444	0					
ANR	2626639	Identifier	i		2626444	1					
ANR	2626640	PrimaryExpression	'\\0'		2626444	1					
ANR	2626641	PostIncDecOperationExpression	i ++	674:49:14400:14402	2626444	2	True				
ANR	2626642	Identifier	i		2626444	0					
ANR	2626643	IncDec	++		2626444	1					
ANR	2626644	CompoundStatement		31:54:558:558	2626444	3					
ANR	2626645	ExpressionStatement		675:3:14410:14410	2626444	0	True				
ANR	2626646	IfStatement	if ( i == strlen ( temp ) )		2626444	6					
ANR	2626647	Condition	i == strlen ( temp )	677:6:14422:14439	2626444	0	True				
ANR	2626648	EqualityExpression	i == strlen ( temp )		2626444	0		==			
ANR	2626649	Identifier	i		2626444	0					
ANR	2626650	CallExpression	strlen ( temp )		2626444	1					
ANR	2626651	Callee	strlen		2626444	0					
ANR	2626652	Identifier	strlen		2626444	0					
ANR	2626653	ArgumentList	temp		2626444	1					
ANR	2626654	Argument	temp		2626444	0					
ANR	2626655	Identifier	temp		2626444	0					
ANR	2626656	CompoundStatement		34:26:595:595	2626444	1					
ANR	2626657	ExpressionStatement	tempres = getreg ( temp )	678:3:14447:14470	2626444	0	True				
ANR	2626658	AssignmentExpression	tempres = getreg ( temp )		2626444	0		=			
ANR	2626659	Identifier	tempres		2626444	0					
ANR	2626660	CallExpression	getreg ( temp )		2626444	1					
ANR	2626661	Callee	getreg		2626444	0					
ANR	2626662	Identifier	getreg		2626444	0					
ANR	2626663	ArgumentList	temp		2626444	1					
ANR	2626664	Argument	temp		2626444	0					
ANR	2626665	Identifier	temp		2626444	0					
ANR	2626666	IfStatement	if ( tempres == - 1 || tempres > 15 )		2626444	1					
ANR	2626667	Condition	tempres == - 1 || tempres > 15	679:7:14479:14507	2626444	0	True				
ANR	2626668	OrExpression	tempres == - 1 || tempres > 15		2626444	0		||			
ANR	2626669	EqualityExpression	tempres == - 1		2626444	0		==			
ANR	2626670	Identifier	tempres		2626444	0					
ANR	2626671	UnaryOperationExpression	- 1		2626444	1					
ANR	2626672	UnaryOperator	-		2626444	0					
ANR	2626673	PrimaryExpression	1		2626444	1					
ANR	2626674	RelationalExpression	tempres > 15		2626444	1		>			
ANR	2626675	Identifier	tempres		2626444	0					
ANR	2626676	PrimaryExpression	15		2626444	1					
ANR	2626677	CompoundStatement		36:38:663:663	2626444	1					
ANR	2626678	ExpressionStatement	res = - 1	680:4:14516:14524	2626444	0	True				
ANR	2626679	AssignmentExpression	res = - 1		2626444	0		=			
ANR	2626680	Identifier	res		2626444	0					
ANR	2626681	UnaryOperationExpression	- 1		2626444	1					
ANR	2626682	UnaryOperator	-		2626444	0					
ANR	2626683	PrimaryExpression	1		2626444	1					
ANR	2626684	GotoStatement	goto end ;	681:4:14530:14538	2626444	1	True				
ANR	2626685	Identifier	end		2626444	0					
ANR	2626686	ExpressionStatement	res |= 1 << tempres	683:3:14548:14567	2626444	2	True				
ANR	2626687	AssignmentExpression	res |= 1 << tempres		2626444	0		|=			
ANR	2626688	Identifier	res		2626444	0					
ANR	2626689	ShiftExpression	1 << tempres		2626444	1		<<			
ANR	2626690	PrimaryExpression	1		2626444	0					
ANR	2626691	Identifier	tempres		2626444	1					
ANR	2626692	ElseStatement	else		2626444	0					
ANR	2626693	CompoundStatement		41:9:731:731	2626444	0					
ANR	2626694	ExpressionStatement	"strncpy ( temp2 , temp , i )"	685:3:14583:14607	2626444	0	True				
ANR	2626695	CallExpression	"strncpy ( temp2 , temp , i )"		2626444	0					
ANR	2626696	Callee	strncpy		2626444	0					
ANR	2626697	Identifier	strncpy		2626444	0					
ANR	2626698	ArgumentList	temp2		2626444	1					
ANR	2626699	Argument	temp2		2626444	0					
ANR	2626700	Identifier	temp2		2626444	0					
ANR	2626701	Argument	temp		2626444	1					
ANR	2626702	Identifier	temp		2626444	0					
ANR	2626703	Argument	i		2626444	2					
ANR	2626704	Identifier	i		2626444	0					
ANR	2626705	ExpressionStatement	temp2 [ i ] = 0	686:3:14612:14624	2626444	1	True				
ANR	2626706	AssignmentExpression	temp2 [ i ] = 0		2626444	0		=			
ANR	2626707	ArrayIndexing	temp2 [ i ]		2626444	0					
ANR	2626708	Identifier	temp2		2626444	0					
ANR	2626709	Identifier	i		2626444	1					
ANR	2626710	PrimaryExpression	0		2626444	1					
ANR	2626711	ExpressionStatement	temp += i + 1	687:3:14629:14642	2626444	2	True				
ANR	2626712	AssignmentExpression	temp += i + 1		2626444	0		+=			
ANR	2626713	Identifier	temp		2626444	0					
ANR	2626714	AdditiveExpression	i + 1		2626444	1		+			
ANR	2626715	Identifier	i		2626444	0					
ANR	2626716	PrimaryExpression	1		2626444	1					
ANR	2626717	ExpressionStatement	start = getreg ( temp2 )	688:3:14647:14669	2626444	3	True				
ANR	2626718	AssignmentExpression	start = getreg ( temp2 )		2626444	0		=			
ANR	2626719	Identifier	start		2626444	0					
ANR	2626720	CallExpression	getreg ( temp2 )		2626444	1					
ANR	2626721	Callee	getreg		2626444	0					
ANR	2626722	Identifier	getreg		2626444	0					
ANR	2626723	ArgumentList	temp2		2626444	1					
ANR	2626724	Argument	temp2		2626444	0					
ANR	2626725	Identifier	temp2		2626444	0					
ANR	2626726	IfStatement	if ( start == - 1 || start > 15 )		2626444	4					
ANR	2626727	Condition	start == - 1 || start > 15	689:7:14678:14702	2626444	0	True				
ANR	2626728	OrExpression	start == - 1 || start > 15		2626444	0		||			
ANR	2626729	EqualityExpression	start == - 1		2626444	0		==			
ANR	2626730	Identifier	start		2626444	0					
ANR	2626731	UnaryOperationExpression	- 1		2626444	1					
ANR	2626732	UnaryOperator	-		2626444	0					
ANR	2626733	PrimaryExpression	1		2626444	1					
ANR	2626734	RelationalExpression	start > 15		2626444	1		>			
ANR	2626735	Identifier	start		2626444	0					
ANR	2626736	PrimaryExpression	15		2626444	1					
ANR	2626737	CompoundStatement		46:34:858:858	2626444	1					
ANR	2626738	ExpressionStatement	res = - 1	690:4:14711:14719	2626444	0	True				
ANR	2626739	AssignmentExpression	res = - 1		2626444	0		=			
ANR	2626740	Identifier	res		2626444	0					
ANR	2626741	UnaryOperationExpression	- 1		2626444	1					
ANR	2626742	UnaryOperator	-		2626444	0					
ANR	2626743	PrimaryExpression	1		2626444	1					
ANR	2626744	GotoStatement	goto end ;	691:4:14725:14733	2626444	1	True				
ANR	2626745	Identifier	end		2626444	0					
ANR	2626746	ExpressionStatement	end = getreg ( temp )	693:3:14743:14762	2626444	5	True				
ANR	2626747	AssignmentExpression	end = getreg ( temp )		2626444	0		=			
ANR	2626748	Identifier	end		2626444	0					
ANR	2626749	CallExpression	getreg ( temp )		2626444	1					
ANR	2626750	Callee	getreg		2626444	0					
ANR	2626751	Identifier	getreg		2626444	0					
ANR	2626752	ArgumentList	temp		2626444	1					
ANR	2626753	Argument	temp		2626444	0					
ANR	2626754	Identifier	temp		2626444	0					
ANR	2626755	IfStatement	if ( end == - 1 || end > 15 )		2626444	6					
ANR	2626756	Condition	end == - 1 || end > 15	694:7:14771:14791	2626444	0	True				
ANR	2626757	OrExpression	end == - 1 || end > 15		2626444	0		||			
ANR	2626758	EqualityExpression	end == - 1		2626444	0		==			
ANR	2626759	Identifier	end		2626444	0					
ANR	2626760	UnaryOperationExpression	- 1		2626444	1					
ANR	2626761	UnaryOperator	-		2626444	0					
ANR	2626762	PrimaryExpression	1		2626444	1					
ANR	2626763	RelationalExpression	end > 15		2626444	1		>			
ANR	2626764	Identifier	end		2626444	0					
ANR	2626765	PrimaryExpression	15		2626444	1					
ANR	2626766	CompoundStatement		51:30:947:947	2626444	1					
ANR	2626767	ExpressionStatement	res = - 1	695:4:14800:14808	2626444	0	True				
ANR	2626768	AssignmentExpression	res = - 1		2626444	0		=			
ANR	2626769	Identifier	res		2626444	0					
ANR	2626770	UnaryOperationExpression	- 1		2626444	1					
ANR	2626771	UnaryOperator	-		2626444	0					
ANR	2626772	PrimaryExpression	1		2626444	1					
ANR	2626773	GotoStatement	goto end ;	696:4:14814:14822	2626444	1	True				
ANR	2626774	Identifier	end		2626444	0					
ANR	2626775	ForStatement	for ( j = start ; j <= end ; j ++ )		2626444	7					
ANR	2626776	ForInit	j = start ;	699:8:14838:14847	2626444	0	True				
ANR	2626777	AssignmentExpression	j = start		2626444	0		=			
ANR	2626778	Identifier	j		2626444	0					
ANR	2626779	Identifier	start		2626444	1					
ANR	2626780	Condition	j <= end	699:19:14849:14856	2626444	1	True				
ANR	2626781	RelationalExpression	j <= end		2626444	0		<=			
ANR	2626782	Identifier	j		2626444	0					
ANR	2626783	Identifier	end		2626444	1					
ANR	2626784	PostIncDecOperationExpression	j ++	699:29:14859:14861	2626444	2	True				
ANR	2626785	Identifier	j		2626444	0					
ANR	2626786	IncDec	++		2626444	1					
ANR	2626787	CompoundStatement		56:35:1018:1018	2626444	3					
ANR	2626788	ExpressionStatement	res |= 1 << j	700:4:14871:14884	2626444	0	True				
ANR	2626789	AssignmentExpression	res |= 1 << j		2626444	0		|=			
ANR	2626790	Identifier	res		2626444	0					
ANR	2626791	ShiftExpression	1 << j		2626444	1		<<			
ANR	2626792	PrimaryExpression	1		2626444	0					
ANR	2626793	Identifier	j		2626444	1					
ANR	2626794	Label	end :	704:0:14898:14901	2626444	10	True				
ANR	2626795	Identifier	end		2626444	0					
ANR	2626796	ExpressionStatement	free ( otemp )	705:1:14904:14916	2626444	11	True				
ANR	2626797	CallExpression	free ( otemp )		2626444	0					
ANR	2626798	Callee	free		2626444	0					
ANR	2626799	Identifier	free		2626444	0					
ANR	2626800	ArgumentList	otemp		2626444	1					
ANR	2626801	Argument	otemp		2626444	0					
ANR	2626802	Identifier	otemp		2626444	0					
ANR	2626803	ExpressionStatement	free ( temp2 )	706:1:14919:14931	2626444	12	True				
ANR	2626804	CallExpression	free ( temp2 )		2626444	0					
ANR	2626805	Callee	free		2626444	0					
ANR	2626806	Identifier	free		2626444	0					
ANR	2626807	ArgumentList	temp2		2626444	1					
ANR	2626808	Argument	temp2		2626444	0					
ANR	2626809	Identifier	temp2		2626444	0					
ANR	2626810	ReturnStatement	return res ;	707:1:14934:14944	2626444	13	True				
ANR	2626811	Identifier	res		2626444	0					
ANR	2626812	ReturnType	static st32		2626444	1					
ANR	2626813	Identifier	getlistmask		2626444	2					
ANR	2626814	ParameterList	char * input		2626444	3					
ANR	2626815	Parameter	char * input	644:24:13833:13843	2626444	0	True				
ANR	2626816	ParameterType	char *		2626444	0					
ANR	2626817	Identifier	input		2626444	1					
ANR	2626818	CFGEntryNode	ENTRY		2626444		True				
ANR	2626819	CFGExitNode	EXIT		2626444		True				
ANR	2626820	Symbol	res		2626444						
ANR	2626821	Symbol	malloc		2626444						
ANR	2626822	Symbol	temp		2626444						
ANR	2626823	Symbol	NULL		2626444						
ANR	2626824	Symbol	start		2626444						
ANR	2626825	Symbol	* input		2626444						
ANR	2626826	Symbol	i		2626444						
ANR	2626827	Symbol	j		2626444						
ANR	2626828	Symbol	tempres		2626444						
ANR	2626829	Symbol	temp2		2626444						
ANR	2626830	Symbol	* temp		2626444						
ANR	2626831	Symbol	input		2626444						
ANR	2626832	Symbol	otemp		2626444						
ANR	2626833	Symbol	strlen		2626444						
ANR	2626834	Symbol	* i		2626444						
ANR	2626835	Symbol	getreg		2626444						
ANR	2626836	Symbol	end		2626444						
ANR	2626837	Symbol	* temp2		2626444						
ANR	2626838	Function	getregmemstart	710:0:14949:15098							
ANR	2626839	FunctionDef	getregmemstart (const char * input)		2626838	0					
ANR	2626840	CompoundStatement		710:46:14995:15098	2626838	0					
ANR	2626841	IfStatement	if ( ( strlen ( input ) < 1 ) || ( ! ( * input == '[' ) ) )		2626838	0					
ANR	2626842	Condition	( strlen ( input ) < 1 ) || ( ! ( * input == '[' ) )	711:5:15002:15043	2626838	0	True				
ANR	2626843	OrExpression	( strlen ( input ) < 1 ) || ( ! ( * input == '[' ) )		2626838	0		||			
ANR	2626844	RelationalExpression	strlen ( input ) < 1		2626838	0		<			
ANR	2626845	CallExpression	strlen ( input )		2626838	0					
ANR	2626846	Callee	strlen		2626838	0					
ANR	2626847	Identifier	strlen		2626838	0					
ANR	2626848	ArgumentList	input		2626838	1					
ANR	2626849	Argument	input		2626838	0					
ANR	2626850	Identifier	input		2626838	0					
ANR	2626851	PrimaryExpression	1		2626838	1					
ANR	2626852	UnaryOperationExpression	! ( * input == '[' )		2626838	1					
ANR	2626853	UnaryOperator	!		2626838	0					
ANR	2626854	EqualityExpression	* input == '['		2626838	1		==			
ANR	2626855	UnaryOperationExpression	* input		2626838	0					
ANR	2626856	UnaryOperator	*		2626838	0					
ANR	2626857	Identifier	input		2626838	1					
ANR	2626858	PrimaryExpression	'['		2626838	1					
ANR	2626859	CompoundStatement		2:49:50:50	2626838	1					
ANR	2626860	ReturnStatement	return - 1 ;	712:2:15050:15059	2626838	0	True				
ANR	2626861	UnaryOperationExpression	- 1		2626838	0					
ANR	2626862	UnaryOperator	-		2626838	0					
ANR	2626863	PrimaryExpression	1		2626838	1					
ANR	2626864	ExpressionStatement	input ++	714:1:15065:15072	2626838	1	True				
ANR	2626865	PostIncDecOperationExpression	input ++		2626838	0					
ANR	2626866	Identifier	input		2626838	0					
ANR	2626867	IncDec	++		2626838	1					
ANR	2626868	ReturnStatement	return getreg ( input ) ;	715:1:15075:15096	2626838	2	True				
ANR	2626869	CallExpression	getreg ( input )		2626838	0					
ANR	2626870	Callee	getreg		2626838	0					
ANR	2626871	Identifier	getreg		2626838	0					
ANR	2626872	ArgumentList	input		2626838	1					
ANR	2626873	Argument	input		2626838	0					
ANR	2626874	Identifier	input		2626838	0					
ANR	2626875	ReturnType	static st32		2626838	1					
ANR	2626876	Identifier	getregmemstart		2626838	2					
ANR	2626877	ParameterList	const char * input		2626838	3					
ANR	2626878	Parameter	const char * input	710:27:14976:14992	2626838	0	True				
ANR	2626879	ParameterType	const char *		2626838	0					
ANR	2626880	Identifier	input		2626838	1					
ANR	2626881	CFGEntryNode	ENTRY		2626838		True				
ANR	2626882	CFGExitNode	EXIT		2626838		True				
ANR	2626883	Symbol	input		2626838						
ANR	2626884	Symbol	strlen		2626838						
ANR	2626885	Symbol	getreg		2626838						
ANR	2626886	Symbol	* input		2626838						
ANR	2626887	Function	getregmemstartend	718:0:15102:15413							
ANR	2626888	FunctionDef	getregmemstartend (const char * input)		2626887	0					
ANR	2626889	CompoundStatement		718:49:15151:15413	2626887	0					
ANR	2626890	IdentifierDeclStatement	st32 res ;	719:1:15154:15162	2626887	0	True				
ANR	2626891	IdentifierDecl	res		2626887	0					
ANR	2626892	IdentifierDeclType	st32		2626887	0					
ANR	2626893	Identifier	res		2626887	1					
ANR	2626894	IfStatement	"if ( ! input || ( strlen ( input ) < 2 ) || ( * input != '[' ) || ! r_str_endswith ( input , ""]"" ) )"		2626887	1					
ANR	2626895	Condition	"! input || ( strlen ( input ) < 2 ) || ( * input != '[' ) || ! r_str_endswith ( input , ""]"" )"	720:5:15169:15249	2626887	0	True				
ANR	2626896	OrExpression	"! input || ( strlen ( input ) < 2 ) || ( * input != '[' ) || ! r_str_endswith ( input , ""]"" )"		2626887	0		||			
ANR	2626897	UnaryOperationExpression	! input		2626887	0					
ANR	2626898	UnaryOperator	!		2626887	0					
ANR	2626899	Identifier	input		2626887	1					
ANR	2626900	OrExpression	"( strlen ( input ) < 2 ) || ( * input != '[' ) || ! r_str_endswith ( input , ""]"" )"		2626887	1		||			
ANR	2626901	RelationalExpression	strlen ( input ) < 2		2626887	0		<			
ANR	2626902	CallExpression	strlen ( input )		2626887	0					
ANR	2626903	Callee	strlen		2626887	0					
ANR	2626904	Identifier	strlen		2626887	0					
ANR	2626905	ArgumentList	input		2626887	1					
ANR	2626906	Argument	input		2626887	0					
ANR	2626907	Identifier	input		2626887	0					
ANR	2626908	PrimaryExpression	2		2626887	1					
ANR	2626909	OrExpression	"( * input != '[' ) || ! r_str_endswith ( input , ""]"" )"		2626887	1		||			
ANR	2626910	EqualityExpression	* input != '['		2626887	0		!=			
ANR	2626911	UnaryOperationExpression	* input		2626887	0					
ANR	2626912	UnaryOperator	*		2626887	0					
ANR	2626913	Identifier	input		2626887	1					
ANR	2626914	PrimaryExpression	'['		2626887	1					
ANR	2626915	UnaryOperationExpression	"! r_str_endswith ( input , ""]"" )"		2626887	1					
ANR	2626916	UnaryOperator	!		2626887	0					
ANR	2626917	CallExpression	"r_str_endswith ( input , ""]"" )"		2626887	1					
ANR	2626918	Callee	r_str_endswith		2626887	0					
ANR	2626919	Identifier	r_str_endswith		2626887	0					
ANR	2626920	ArgumentList	input		2626887	1					
ANR	2626921	Argument	input		2626887	0					
ANR	2626922	Identifier	input		2626887	0					
ANR	2626923	Argument	"""]"""		2626887	1					
ANR	2626924	PrimaryExpression	"""]"""		2626887	0					
ANR	2626925	CompoundStatement		3:88:100:100	2626887	1					
ANR	2626926	ReturnStatement	return - 1 ;	721:2:15256:15265	2626887	0	True				
ANR	2626927	UnaryOperationExpression	- 1		2626887	0					
ANR	2626928	UnaryOperator	-		2626887	0					
ANR	2626929	PrimaryExpression	1		2626887	1					
ANR	2626930	ExpressionStatement	input ++	723:1:15271:15278	2626887	2	True				
ANR	2626931	PostIncDecOperationExpression	input ++		2626887	0					
ANR	2626932	Identifier	input		2626887	0					
ANR	2626933	IncDec	++		2626887	1					
ANR	2626934	IdentifierDeclStatement	"char * temp = r_str_ndup ( input , strlen ( input ) - 1 ) ;"	724:1:15281:15332	2626887	3	True				
ANR	2626935	IdentifierDecl	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		2626887	0					
ANR	2626936	IdentifierDeclType	char *		2626887	0					
ANR	2626937	Identifier	temp		2626887	1					
ANR	2626938	AssignmentExpression	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		2626887	2		=			
ANR	2626939	Identifier	temp		2626887	0					
ANR	2626940	CallExpression	"r_str_ndup ( input , strlen ( input ) - 1 )"		2626887	1					
ANR	2626941	Callee	r_str_ndup		2626887	0					
ANR	2626942	Identifier	r_str_ndup		2626887	0					
ANR	2626943	ArgumentList	input		2626887	1					
ANR	2626944	Argument	input		2626887	0					
ANR	2626945	Identifier	input		2626887	0					
ANR	2626946	Argument	strlen ( input ) - 1		2626887	1					
ANR	2626947	AdditiveExpression	strlen ( input ) - 1		2626887	0		-			
ANR	2626948	CallExpression	strlen ( input )		2626887	0					
ANR	2626949	Callee	strlen		2626887	0					
ANR	2626950	Identifier	strlen		2626887	0					
ANR	2626951	ArgumentList	input		2626887	1					
ANR	2626952	Argument	input		2626887	0					
ANR	2626953	Identifier	input		2626887	0					
ANR	2626954	PrimaryExpression	1		2626887	1					
ANR	2626955	IfStatement	if ( ! temp )		2626887	4					
ANR	2626956	Condition	! temp	725:5:15339:15343	2626887	0	True				
ANR	2626957	UnaryOperationExpression	! temp		2626887	0					
ANR	2626958	UnaryOperator	!		2626887	0					
ANR	2626959	Identifier	temp		2626887	1					
ANR	2626960	CompoundStatement		8:12:194:194	2626887	1					
ANR	2626961	ReturnStatement	return - 1 ;	726:2:15350:15359	2626887	0	True				
ANR	2626962	UnaryOperationExpression	- 1		2626887	0					
ANR	2626963	UnaryOperator	-		2626887	0					
ANR	2626964	PrimaryExpression	1		2626887	1					
ANR	2626965	ExpressionStatement	res = getreg ( temp )	728:1:15365:15384	2626887	5	True				
ANR	2626966	AssignmentExpression	res = getreg ( temp )		2626887	0		=			
ANR	2626967	Identifier	res		2626887	0					
ANR	2626968	CallExpression	getreg ( temp )		2626887	1					
ANR	2626969	Callee	getreg		2626887	0					
ANR	2626970	Identifier	getreg		2626887	0					
ANR	2626971	ArgumentList	temp		2626887	1					
ANR	2626972	Argument	temp		2626887	0					
ANR	2626973	Identifier	temp		2626887	0					
ANR	2626974	ExpressionStatement	free ( temp )	729:1:15387:15398	2626887	6	True				
ANR	2626975	CallExpression	free ( temp )		2626887	0					
ANR	2626976	Callee	free		2626887	0					
ANR	2626977	Identifier	free		2626887	0					
ANR	2626978	ArgumentList	temp		2626887	1					
ANR	2626979	Argument	temp		2626887	0					
ANR	2626980	Identifier	temp		2626887	0					
ANR	2626981	ReturnStatement	return res ;	730:1:15401:15411	2626887	7	True				
ANR	2626982	Identifier	res		2626887	0					
ANR	2626983	ReturnType	static st32		2626887	1					
ANR	2626984	Identifier	getregmemstartend		2626887	2					
ANR	2626985	ParameterList	const char * input		2626887	3					
ANR	2626986	Parameter	const char * input	718:30:15132:15148	2626887	0	True				
ANR	2626987	ParameterType	const char *		2626887	0					
ANR	2626988	Identifier	input		2626887	1					
ANR	2626989	CFGEntryNode	ENTRY		2626887		True				
ANR	2626990	CFGExitNode	EXIT		2626887		True				
ANR	2626991	Symbol	input		2626887						
ANR	2626992	Symbol	res		2626887						
ANR	2626993	Symbol	strlen		2626887						
ANR	2626994	Symbol	temp		2626887						
ANR	2626995	Symbol	r_str_ndup		2626887						
ANR	2626996	Symbol	getreg		2626887						
ANR	2626997	Symbol	* input		2626887						
ANR	2626998	Symbol	r_str_endswith		2626887						
ANR	2626999	Function	getregmemend	733:0:15417:15682							
ANR	2627000	FunctionDef	getregmemend (const char * input)		2626999	0					
ANR	2627001	CompoundStatement		733:44:15461:15682	2626999	0					
ANR	2627002	IdentifierDeclStatement	st32 res ;	734:1:15464:15472	2626999	0	True				
ANR	2627003	IdentifierDecl	res		2626999	0					
ANR	2627004	IdentifierDeclType	st32		2626999	0					
ANR	2627005	Identifier	res		2626999	1					
ANR	2627006	IfStatement	"if ( ! input || ! * input || ! r_str_endswith ( input , ""]"" ) )"		2626999	1					
ANR	2627007	Condition	"! input || ! * input || ! r_str_endswith ( input , ""]"" )"	735:5:15479:15527	2626999	0	True				
ANR	2627008	OrExpression	"! input || ! * input || ! r_str_endswith ( input , ""]"" )"		2626999	0		||			
ANR	2627009	UnaryOperationExpression	! input		2626999	0					
ANR	2627010	UnaryOperator	!		2626999	0					
ANR	2627011	Identifier	input		2626999	1					
ANR	2627012	OrExpression	"! * input || ! r_str_endswith ( input , ""]"" )"		2626999	1		||			
ANR	2627013	UnaryOperationExpression	! * input		2626999	0					
ANR	2627014	UnaryOperator	!		2626999	0					
ANR	2627015	UnaryOperationExpression	* input		2626999	1					
ANR	2627016	UnaryOperator	*		2626999	0					
ANR	2627017	Identifier	input		2626999	1					
ANR	2627018	UnaryOperationExpression	"! r_str_endswith ( input , ""]"" )"		2626999	1					
ANR	2627019	UnaryOperator	!		2626999	0					
ANR	2627020	CallExpression	"r_str_endswith ( input , ""]"" )"		2626999	1					
ANR	2627021	Callee	r_str_endswith		2626999	0					
ANR	2627022	Identifier	r_str_endswith		2626999	0					
ANR	2627023	ArgumentList	input		2626999	1					
ANR	2627024	Argument	input		2626999	0					
ANR	2627025	Identifier	input		2626999	0					
ANR	2627026	Argument	"""]"""		2626999	1					
ANR	2627027	PrimaryExpression	"""]"""		2626999	0					
ANR	2627028	CompoundStatement		3:56:68:68	2626999	1					
ANR	2627029	ReturnStatement	return - 1 ;	736:2:15534:15543	2626999	0	True				
ANR	2627030	UnaryOperationExpression	- 1		2626999	0					
ANR	2627031	UnaryOperator	-		2626999	0					
ANR	2627032	PrimaryExpression	1		2626999	1					
ANR	2627033	IdentifierDeclStatement	"char * temp = r_str_ndup ( input , strlen ( input ) - 1 ) ;"	739:1:15550:15601	2626999	2	True				
ANR	2627034	IdentifierDecl	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		2626999	0					
ANR	2627035	IdentifierDeclType	char *		2626999	0					
ANR	2627036	Identifier	temp		2626999	1					
ANR	2627037	AssignmentExpression	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		2626999	2		=			
ANR	2627038	Identifier	temp		2626999	0					
ANR	2627039	CallExpression	"r_str_ndup ( input , strlen ( input ) - 1 )"		2626999	1					
ANR	2627040	Callee	r_str_ndup		2626999	0					
ANR	2627041	Identifier	r_str_ndup		2626999	0					
ANR	2627042	ArgumentList	input		2626999	1					
ANR	2627043	Argument	input		2626999	0					
ANR	2627044	Identifier	input		2626999	0					
ANR	2627045	Argument	strlen ( input ) - 1		2626999	1					
ANR	2627046	AdditiveExpression	strlen ( input ) - 1		2626999	0		-			
ANR	2627047	CallExpression	strlen ( input )		2626999	0					
ANR	2627048	Callee	strlen		2626999	0					
ANR	2627049	Identifier	strlen		2626999	0					
ANR	2627050	ArgumentList	input		2626999	1					
ANR	2627051	Argument	input		2626999	0					
ANR	2627052	Identifier	input		2626999	0					
ANR	2627053	PrimaryExpression	1		2626999	1					
ANR	2627054	IfStatement	if ( ! temp )		2626999	3					
ANR	2627055	Condition	! temp	740:5:15608:15612	2626999	0	True				
ANR	2627056	UnaryOperationExpression	! temp		2626999	0					
ANR	2627057	UnaryOperator	!		2626999	0					
ANR	2627058	Identifier	temp		2626999	1					
ANR	2627059	CompoundStatement		8:12:153:153	2626999	1					
ANR	2627060	ReturnStatement	return - 1 ;	741:2:15619:15628	2626999	0	True				
ANR	2627061	UnaryOperationExpression	- 1		2626999	0					
ANR	2627062	UnaryOperator	-		2626999	0					
ANR	2627063	PrimaryExpression	1		2626999	1					
ANR	2627064	ExpressionStatement	res = getreg ( temp )	743:1:15634:15653	2626999	4	True				
ANR	2627065	AssignmentExpression	res = getreg ( temp )		2626999	0		=			
ANR	2627066	Identifier	res		2626999	0					
ANR	2627067	CallExpression	getreg ( temp )		2626999	1					
ANR	2627068	Callee	getreg		2626999	0					
ANR	2627069	Identifier	getreg		2626999	0					
ANR	2627070	ArgumentList	temp		2626999	1					
ANR	2627071	Argument	temp		2626999	0					
ANR	2627072	Identifier	temp		2626999	0					
ANR	2627073	ExpressionStatement	free ( temp )	744:1:15656:15667	2626999	5	True				
ANR	2627074	CallExpression	free ( temp )		2626999	0					
ANR	2627075	Callee	free		2626999	0					
ANR	2627076	Identifier	free		2626999	0					
ANR	2627077	ArgumentList	temp		2626999	1					
ANR	2627078	Argument	temp		2626999	0					
ANR	2627079	Identifier	temp		2626999	0					
ANR	2627080	ReturnStatement	return res ;	745:1:15670:15680	2626999	6	True				
ANR	2627081	Identifier	res		2626999	0					
ANR	2627082	ReturnType	static st32		2626999	1					
ANR	2627083	Identifier	getregmemend		2626999	2					
ANR	2627084	ParameterList	const char * input		2626999	3					
ANR	2627085	Parameter	const char * input	733:25:15442:15458	2626999	0	True				
ANR	2627086	ParameterType	const char *		2626999	0					
ANR	2627087	Identifier	input		2626999	1					
ANR	2627088	CFGEntryNode	ENTRY		2626999		True				
ANR	2627089	CFGExitNode	EXIT		2626999		True				
ANR	2627090	Symbol	input		2626999						
ANR	2627091	Symbol	res		2626999						
ANR	2627092	Symbol	strlen		2626999						
ANR	2627093	Symbol	temp		2626999						
ANR	2627094	Symbol	r_str_ndup		2626999						
ANR	2627095	Symbol	getreg		2626999						
ANR	2627096	Symbol	* input		2626999						
ANR	2627097	Symbol	r_str_endswith		2626999						
ANR	2627098	Function	getreglist	748:0:15686:16016							
ANR	2627099	FunctionDef	getreglist (const char * input)		2627098	0					
ANR	2627100	CompoundStatement		748:42:15728:16016	2627098	0					
ANR	2627101	IdentifierDeclStatement	st32 res ;	749:1:15731:15739	2627098	0	True				
ANR	2627102	IdentifierDecl	res		2627098	0					
ANR	2627103	IdentifierDeclType	st32		2627098	0					
ANR	2627104	Identifier	res		2627098	1					
ANR	2627105	IfStatement	"if ( ! input || ( strlen ( input ) < 2 ) || ( * input != '{' ) || ! r_str_endswith ( input , ""}"" ) )"		2627098	1					
ANR	2627106	Condition	"! input || ( strlen ( input ) < 2 ) || ( * input != '{' ) || ! r_str_endswith ( input , ""}"" )"	751:5:15748:15828	2627098	0	True				
ANR	2627107	OrExpression	"! input || ( strlen ( input ) < 2 ) || ( * input != '{' ) || ! r_str_endswith ( input , ""}"" )"		2627098	0		||			
ANR	2627108	UnaryOperationExpression	! input		2627098	0					
ANR	2627109	UnaryOperator	!		2627098	0					
ANR	2627110	Identifier	input		2627098	1					
ANR	2627111	OrExpression	"( strlen ( input ) < 2 ) || ( * input != '{' ) || ! r_str_endswith ( input , ""}"" )"		2627098	1		||			
ANR	2627112	RelationalExpression	strlen ( input ) < 2		2627098	0		<			
ANR	2627113	CallExpression	strlen ( input )		2627098	0					
ANR	2627114	Callee	strlen		2627098	0					
ANR	2627115	Identifier	strlen		2627098	0					
ANR	2627116	ArgumentList	input		2627098	1					
ANR	2627117	Argument	input		2627098	0					
ANR	2627118	Identifier	input		2627098	0					
ANR	2627119	PrimaryExpression	2		2627098	1					
ANR	2627120	OrExpression	"( * input != '{' ) || ! r_str_endswith ( input , ""}"" )"		2627098	1		||			
ANR	2627121	EqualityExpression	* input != '{'		2627098	0		!=			
ANR	2627122	UnaryOperationExpression	* input		2627098	0					
ANR	2627123	UnaryOperator	*		2627098	0					
ANR	2627124	Identifier	input		2627098	1					
ANR	2627125	PrimaryExpression	'{'		2627098	1					
ANR	2627126	UnaryOperationExpression	"! r_str_endswith ( input , ""}"" )"		2627098	1					
ANR	2627127	UnaryOperator	!		2627098	0					
ANR	2627128	CallExpression	"r_str_endswith ( input , ""}"" )"		2627098	1					
ANR	2627129	Callee	r_str_endswith		2627098	0					
ANR	2627130	Identifier	r_str_endswith		2627098	0					
ANR	2627131	ArgumentList	input		2627098	1					
ANR	2627132	Argument	input		2627098	0					
ANR	2627133	Identifier	input		2627098	0					
ANR	2627134	Argument	"""}"""		2627098	1					
ANR	2627135	PrimaryExpression	"""}"""		2627098	0					
ANR	2627136	CompoundStatement		4:88:102:102	2627098	1					
ANR	2627137	ReturnStatement	return - 1 ;	752:2:15835:15844	2627098	0	True				
ANR	2627138	UnaryOperationExpression	- 1		2627098	0					
ANR	2627139	UnaryOperator	-		2627098	0					
ANR	2627140	PrimaryExpression	1		2627098	1					
ANR	2627141	IfStatement	if ( * input )		2627098	2					
ANR	2627142	Condition	* input	754:5:15854:15859	2627098	0	True				
ANR	2627143	UnaryOperationExpression	* input		2627098	0					
ANR	2627144	UnaryOperator	*		2627098	0					
ANR	2627145	Identifier	input		2627098	1					
ANR	2627146	CompoundStatement		7:13:133:133	2627098	1					
ANR	2627147	ExpressionStatement	input ++	755:2:15866:15873	2627098	0	True				
ANR	2627148	PostIncDecOperationExpression	input ++		2627098	0					
ANR	2627149	Identifier	input		2627098	0					
ANR	2627150	IncDec	++		2627098	1					
ANR	2627151	IdentifierDeclStatement	"char * temp = r_str_ndup ( input , strlen ( input ) - 1 ) ;"	757:1:15879:15930	2627098	3	True				
ANR	2627152	IdentifierDecl	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		2627098	0					
ANR	2627153	IdentifierDeclType	char *		2627098	0					
ANR	2627154	Identifier	temp		2627098	1					
ANR	2627155	AssignmentExpression	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		2627098	2		=			
ANR	2627156	Identifier	temp		2627098	0					
ANR	2627157	CallExpression	"r_str_ndup ( input , strlen ( input ) - 1 )"		2627098	1					
ANR	2627158	Callee	r_str_ndup		2627098	0					
ANR	2627159	Identifier	r_str_ndup		2627098	0					
ANR	2627160	ArgumentList	input		2627098	1					
ANR	2627161	Argument	input		2627098	0					
ANR	2627162	Identifier	input		2627098	0					
ANR	2627163	Argument	strlen ( input ) - 1		2627098	1					
ANR	2627164	AdditiveExpression	strlen ( input ) - 1		2627098	0		-			
ANR	2627165	CallExpression	strlen ( input )		2627098	0					
ANR	2627166	Callee	strlen		2627098	0					
ANR	2627167	Identifier	strlen		2627098	0					
ANR	2627168	ArgumentList	input		2627098	1					
ANR	2627169	Argument	input		2627098	0					
ANR	2627170	Identifier	input		2627098	0					
ANR	2627171	PrimaryExpression	1		2627098	1					
ANR	2627172	IfStatement	if ( ! temp )		2627098	4					
ANR	2627173	Condition	! temp	758:5:15937:15941	2627098	0	True				
ANR	2627174	UnaryOperationExpression	! temp		2627098	0					
ANR	2627175	UnaryOperator	!		2627098	0					
ANR	2627176	Identifier	temp		2627098	1					
ANR	2627177	CompoundStatement		11:12:215:215	2627098	1					
ANR	2627178	ReturnStatement	return - 1 ;	759:2:15948:15957	2627098	0	True				
ANR	2627179	UnaryOperationExpression	- 1		2627098	0					
ANR	2627180	UnaryOperator	-		2627098	0					
ANR	2627181	PrimaryExpression	1		2627098	1					
ANR	2627182	ExpressionStatement	res = getlistmask ( temp )	761:1:15963:15987	2627098	5	True				
ANR	2627183	AssignmentExpression	res = getlistmask ( temp )		2627098	0		=			
ANR	2627184	Identifier	res		2627098	0					
ANR	2627185	CallExpression	getlistmask ( temp )		2627098	1					
ANR	2627186	Callee	getlistmask		2627098	0					
ANR	2627187	Identifier	getlistmask		2627098	0					
ANR	2627188	ArgumentList	temp		2627098	1					
ANR	2627189	Argument	temp		2627098	0					
ANR	2627190	Identifier	temp		2627098	0					
ANR	2627191	ExpressionStatement	free ( temp )	762:1:15990:16001	2627098	6	True				
ANR	2627192	CallExpression	free ( temp )		2627098	0					
ANR	2627193	Callee	free		2627098	0					
ANR	2627194	Identifier	free		2627098	0					
ANR	2627195	ArgumentList	temp		2627098	1					
ANR	2627196	Argument	temp		2627098	0					
ANR	2627197	Identifier	temp		2627098	0					
ANR	2627198	ReturnStatement	return res ;	763:1:16004:16014	2627098	7	True				
ANR	2627199	Identifier	res		2627098	0					
ANR	2627200	ReturnType	static st32		2627098	1					
ANR	2627201	Identifier	getreglist		2627098	2					
ANR	2627202	ParameterList	const char * input		2627098	3					
ANR	2627203	Parameter	const char * input	748:23:15709:15725	2627098	0	True				
ANR	2627204	ParameterType	const char *		2627098	0					
ANR	2627205	Identifier	input		2627098	1					
ANR	2627206	CFGEntryNode	ENTRY		2627098		True				
ANR	2627207	CFGExitNode	EXIT		2627098		True				
ANR	2627208	Symbol	getlistmask		2627098						
ANR	2627209	Symbol	input		2627098						
ANR	2627210	Symbol	res		2627098						
ANR	2627211	Symbol	strlen		2627098						
ANR	2627212	Symbol	temp		2627098						
ANR	2627213	Symbol	r_str_ndup		2627098						
ANR	2627214	Symbol	* input		2627098						
ANR	2627215	Symbol	r_str_endswith		2627098						
ANR	2627216	Function	getnummemend	766:0:16019:16326							
ANR	2627217	FunctionDef	getnummemend (const char * input)		2627216	0					
ANR	2627218	CompoundStatement		766:45:16064:16326	2627216	0					
ANR	2627219	IdentifierDeclStatement	st32 res ;	767:1:16067:16075	2627216	0	True				
ANR	2627220	IdentifierDecl	res		2627216	0					
ANR	2627221	IdentifierDeclType	st32		2627216	0					
ANR	2627222	Identifier	res		2627216	1					
ANR	2627223	ExpressionStatement	err = false	768:1:16078:16089	2627216	1	True				
ANR	2627224	AssignmentExpression	err = false		2627216	0		=			
ANR	2627225	Identifier	err		2627216	0					
ANR	2627226	Identifier	false		2627216	1					
ANR	2627227	IfStatement	"if ( ! input || ! * input || ! r_str_endswith ( input , ""]"" ) )"		2627216	2					
ANR	2627228	Condition	"! input || ! * input || ! r_str_endswith ( input , ""]"" )"	769:5:16096:16144	2627216	0	True				
ANR	2627229	OrExpression	"! input || ! * input || ! r_str_endswith ( input , ""]"" )"		2627216	0		||			
ANR	2627230	UnaryOperationExpression	! input		2627216	0					
ANR	2627231	UnaryOperator	!		2627216	0					
ANR	2627232	Identifier	input		2627216	1					
ANR	2627233	OrExpression	"! * input || ! r_str_endswith ( input , ""]"" )"		2627216	1		||			
ANR	2627234	UnaryOperationExpression	! * input		2627216	0					
ANR	2627235	UnaryOperator	!		2627216	0					
ANR	2627236	UnaryOperationExpression	* input		2627216	1					
ANR	2627237	UnaryOperator	*		2627216	0					
ANR	2627238	Identifier	input		2627216	1					
ANR	2627239	UnaryOperationExpression	"! r_str_endswith ( input , ""]"" )"		2627216	1					
ANR	2627240	UnaryOperator	!		2627216	0					
ANR	2627241	CallExpression	"r_str_endswith ( input , ""]"" )"		2627216	1					
ANR	2627242	Callee	r_str_endswith		2627216	0					
ANR	2627243	Identifier	r_str_endswith		2627216	0					
ANR	2627244	ArgumentList	input		2627216	1					
ANR	2627245	Argument	input		2627216	0					
ANR	2627246	Identifier	input		2627216	0					
ANR	2627247	Argument	"""]"""		2627216	1					
ANR	2627248	PrimaryExpression	"""]"""		2627216	0					
ANR	2627249	CompoundStatement		4:56:82:82	2627216	1					
ANR	2627250	ExpressionStatement	err = true	770:2:16151:16161	2627216	0	True				
ANR	2627251	AssignmentExpression	err = true		2627216	0		=			
ANR	2627252	Identifier	err		2627216	0					
ANR	2627253	Identifier	true		2627216	1					
ANR	2627254	ReturnStatement	return - 1 ;	771:2:16165:16174	2627216	1	True				
ANR	2627255	UnaryOperationExpression	- 1		2627216	0					
ANR	2627256	UnaryOperator	-		2627216	0					
ANR	2627257	PrimaryExpression	1		2627216	1					
ANR	2627258	IdentifierDeclStatement	"char * temp = r_str_ndup ( input , strlen ( input ) - 1 ) ;"	773:1:16180:16231	2627216	3	True				
ANR	2627259	IdentifierDecl	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		2627216	0					
ANR	2627260	IdentifierDeclType	char *		2627216	0					
ANR	2627261	Identifier	temp		2627216	1					
ANR	2627262	AssignmentExpression	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		2627216	2		=			
ANR	2627263	Identifier	temp		2627216	0					
ANR	2627264	CallExpression	"r_str_ndup ( input , strlen ( input ) - 1 )"		2627216	1					
ANR	2627265	Callee	r_str_ndup		2627216	0					
ANR	2627266	Identifier	r_str_ndup		2627216	0					
ANR	2627267	ArgumentList	input		2627216	1					
ANR	2627268	Argument	input		2627216	0					
ANR	2627269	Identifier	input		2627216	0					
ANR	2627270	Argument	strlen ( input ) - 1		2627216	1					
ANR	2627271	AdditiveExpression	strlen ( input ) - 1		2627216	0		-			
ANR	2627272	CallExpression	strlen ( input )		2627216	0					
ANR	2627273	Callee	strlen		2627216	0					
ANR	2627274	Identifier	strlen		2627216	0					
ANR	2627275	ArgumentList	input		2627216	1					
ANR	2627276	Argument	input		2627216	0					
ANR	2627277	Identifier	input		2627216	0					
ANR	2627278	PrimaryExpression	1		2627216	1					
ANR	2627279	IfStatement	if ( ! temp )		2627216	4					
ANR	2627280	Condition	! temp	774:5:16238:16242	2627216	0	True				
ANR	2627281	UnaryOperationExpression	! temp		2627216	0					
ANR	2627282	UnaryOperator	!		2627216	0					
ANR	2627283	Identifier	temp		2627216	1					
ANR	2627284	CompoundStatement		9:12:180:180	2627216	1					
ANR	2627285	ExpressionStatement	err = true	775:2:16249:16259	2627216	0	True				
ANR	2627286	AssignmentExpression	err = true		2627216	0		=			
ANR	2627287	Identifier	err		2627216	0					
ANR	2627288	Identifier	true		2627216	1					
ANR	2627289	ReturnStatement	return - 1 ;	776:2:16263:16272	2627216	1	True				
ANR	2627290	UnaryOperationExpression	- 1		2627216	0					
ANR	2627291	UnaryOperator	-		2627216	0					
ANR	2627292	PrimaryExpression	1		2627216	1					
ANR	2627293	ExpressionStatement	res = getnum ( temp )	778:1:16278:16297	2627216	5	True				
ANR	2627294	AssignmentExpression	res = getnum ( temp )		2627216	0		=			
ANR	2627295	Identifier	res		2627216	0					
ANR	2627296	CallExpression	getnum ( temp )		2627216	1					
ANR	2627297	Callee	getnum		2627216	0					
ANR	2627298	Identifier	getnum		2627216	0					
ANR	2627299	ArgumentList	temp		2627216	1					
ANR	2627300	Argument	temp		2627216	0					
ANR	2627301	Identifier	temp		2627216	0					
ANR	2627302	ExpressionStatement	free ( temp )	779:1:16300:16311	2627216	6	True				
ANR	2627303	CallExpression	free ( temp )		2627216	0					
ANR	2627304	Callee	free		2627216	0					
ANR	2627305	Identifier	free		2627216	0					
ANR	2627306	ArgumentList	temp		2627216	1					
ANR	2627307	Argument	temp		2627216	0					
ANR	2627308	Identifier	temp		2627216	0					
ANR	2627309	ReturnStatement	return res ;	780:1:16314:16324	2627216	7	True				
ANR	2627310	Identifier	res		2627216	0					
ANR	2627311	ReturnType	static st32		2627216	1					
ANR	2627312	Identifier	getnummemend		2627216	2					
ANR	2627313	ParameterList	const char * input		2627216	3					
ANR	2627314	Parameter	const char * input	766:26:16045:16061	2627216	0	True				
ANR	2627315	ParameterType	const char *		2627216	0					
ANR	2627316	Identifier	input		2627216	1					
ANR	2627317	CFGEntryNode	ENTRY		2627216		True				
ANR	2627318	CFGExitNode	EXIT		2627216		True				
ANR	2627319	Symbol	input		2627216						
ANR	2627320	Symbol	res		2627216						
ANR	2627321	Symbol	strlen		2627216						
ANR	2627322	Symbol	temp		2627216						
ANR	2627323	Symbol	err		2627216						
ANR	2627324	Symbol	r_str_ndup		2627216						
ANR	2627325	Symbol	false		2627216						
ANR	2627326	Symbol	* input		2627216						
ANR	2627327	Symbol	true		2627216						
ANR	2627328	Symbol	getnum		2627216						
ANR	2627329	Symbol	r_str_endswith		2627216						
ANR	2627330	Function	getnummemendbang	783:0:16329:16688							
ANR	2627331	FunctionDef	getnummemendbang (const char * input)		2627330	0					
ANR	2627332	CompoundStatement		783:49:16378:16688	2627330	0					
ANR	2627333	IdentifierDeclStatement	st32 res ;	784:1:16381:16389	2627330	0	True				
ANR	2627334	IdentifierDecl	res		2627330	0					
ANR	2627335	IdentifierDeclType	st32		2627330	0					
ANR	2627336	Identifier	res		2627330	1					
ANR	2627337	ExpressionStatement	err = false	785:1:16392:16403	2627330	1	True				
ANR	2627338	AssignmentExpression	err = false		2627330	0		=			
ANR	2627339	Identifier	err		2627330	0					
ANR	2627340	Identifier	false		2627330	1					
ANR	2627341	IfStatement	"if ( ! input || ( strlen ( input ) < 2 ) || ( input [ strlen ( input ) - 2 ] != ']' || ! r_str_endswith ( input , ""!"" ) ) )"		2627330	2					
ANR	2627342	Condition	"! input || ( strlen ( input ) < 2 ) || ( input [ strlen ( input ) - 2 ] != ']' || ! r_str_endswith ( input , ""!"" ) )"	786:5:16410:16508	2627330	0	True				
ANR	2627343	OrExpression	"! input || ( strlen ( input ) < 2 ) || ( input [ strlen ( input ) - 2 ] != ']' || ! r_str_endswith ( input , ""!"" ) )"		2627330	0		||			
ANR	2627344	UnaryOperationExpression	! input		2627330	0					
ANR	2627345	UnaryOperator	!		2627330	0					
ANR	2627346	Identifier	input		2627330	1					
ANR	2627347	OrExpression	"( strlen ( input ) < 2 ) || ( input [ strlen ( input ) - 2 ] != ']' || ! r_str_endswith ( input , ""!"" ) )"		2627330	1		||			
ANR	2627348	RelationalExpression	strlen ( input ) < 2		2627330	0		<			
ANR	2627349	CallExpression	strlen ( input )		2627330	0					
ANR	2627350	Callee	strlen		2627330	0					
ANR	2627351	Identifier	strlen		2627330	0					
ANR	2627352	ArgumentList	input		2627330	1					
ANR	2627353	Argument	input		2627330	0					
ANR	2627354	Identifier	input		2627330	0					
ANR	2627355	PrimaryExpression	2		2627330	1					
ANR	2627356	OrExpression	"input [ strlen ( input ) - 2 ] != ']' || ! r_str_endswith ( input , ""!"" )"		2627330	1		||			
ANR	2627357	EqualityExpression	input [ strlen ( input ) - 2 ] != ']'		2627330	0		!=			
ANR	2627358	ArrayIndexing	input [ strlen ( input ) - 2 ]		2627330	0					
ANR	2627359	Identifier	input		2627330	0					
ANR	2627360	AdditiveExpression	strlen ( input ) - 2		2627330	1		-			
ANR	2627361	CallExpression	strlen ( input )		2627330	0					
ANR	2627362	Callee	strlen		2627330	0					
ANR	2627363	Identifier	strlen		2627330	0					
ANR	2627364	ArgumentList	input		2627330	1					
ANR	2627365	Argument	input		2627330	0					
ANR	2627366	Identifier	input		2627330	0					
ANR	2627367	PrimaryExpression	2		2627330	1					
ANR	2627368	PrimaryExpression	']'		2627330	1					
ANR	2627369	UnaryOperationExpression	"! r_str_endswith ( input , ""!"" )"		2627330	1					
ANR	2627370	UnaryOperator	!		2627330	0					
ANR	2627371	CallExpression	"r_str_endswith ( input , ""!"" )"		2627330	1					
ANR	2627372	Callee	r_str_endswith		2627330	0					
ANR	2627373	Identifier	r_str_endswith		2627330	0					
ANR	2627374	ArgumentList	input		2627330	1					
ANR	2627375	Argument	input		2627330	0					
ANR	2627376	Identifier	input		2627330	0					
ANR	2627377	Argument	"""!"""		2627330	1					
ANR	2627378	PrimaryExpression	"""!"""		2627330	0					
ANR	2627379	CompoundStatement		4:106:132:132	2627330	1					
ANR	2627380	ExpressionStatement	err = true	787:2:16515:16525	2627330	0	True				
ANR	2627381	AssignmentExpression	err = true		2627330	0		=			
ANR	2627382	Identifier	err		2627330	0					
ANR	2627383	Identifier	true		2627330	1					
ANR	2627384	ReturnStatement	return 0 ;	788:2:16529:16537	2627330	1	True				
ANR	2627385	PrimaryExpression	0		2627330	0					
ANR	2627386	IdentifierDeclStatement	"char * temp = r_str_ndup ( input , strlen ( input ) - 2 ) ;"	790:1:16543:16594	2627330	3	True				
ANR	2627387	IdentifierDecl	"* temp = r_str_ndup ( input , strlen ( input ) - 2 )"		2627330	0					
ANR	2627388	IdentifierDeclType	char *		2627330	0					
ANR	2627389	Identifier	temp		2627330	1					
ANR	2627390	AssignmentExpression	"* temp = r_str_ndup ( input , strlen ( input ) - 2 )"		2627330	2		=			
ANR	2627391	Identifier	temp		2627330	0					
ANR	2627392	CallExpression	"r_str_ndup ( input , strlen ( input ) - 2 )"		2627330	1					
ANR	2627393	Callee	r_str_ndup		2627330	0					
ANR	2627394	Identifier	r_str_ndup		2627330	0					
ANR	2627395	ArgumentList	input		2627330	1					
ANR	2627396	Argument	input		2627330	0					
ANR	2627397	Identifier	input		2627330	0					
ANR	2627398	Argument	strlen ( input ) - 2		2627330	1					
ANR	2627399	AdditiveExpression	strlen ( input ) - 2		2627330	0		-			
ANR	2627400	CallExpression	strlen ( input )		2627330	0					
ANR	2627401	Callee	strlen		2627330	0					
ANR	2627402	Identifier	strlen		2627330	0					
ANR	2627403	ArgumentList	input		2627330	1					
ANR	2627404	Argument	input		2627330	0					
ANR	2627405	Identifier	input		2627330	0					
ANR	2627406	PrimaryExpression	2		2627330	1					
ANR	2627407	IfStatement	if ( ! temp )		2627330	4					
ANR	2627408	Condition	! temp	791:5:16601:16605	2627330	0	True				
ANR	2627409	UnaryOperationExpression	! temp		2627330	0					
ANR	2627410	UnaryOperator	!		2627330	0					
ANR	2627411	Identifier	temp		2627330	1					
ANR	2627412	CompoundStatement		9:12:229:229	2627330	1					
ANR	2627413	ExpressionStatement	err = true	792:2:16612:16622	2627330	0	True				
ANR	2627414	AssignmentExpression	err = true		2627330	0		=			
ANR	2627415	Identifier	err		2627330	0					
ANR	2627416	Identifier	true		2627330	1					
ANR	2627417	ReturnStatement	return 0 ;	793:2:16626:16634	2627330	1	True				
ANR	2627418	PrimaryExpression	0		2627330	0					
ANR	2627419	ExpressionStatement	res = getnum ( temp )	795:1:16640:16659	2627330	5	True				
ANR	2627420	AssignmentExpression	res = getnum ( temp )		2627330	0		=			
ANR	2627421	Identifier	res		2627330	0					
ANR	2627422	CallExpression	getnum ( temp )		2627330	1					
ANR	2627423	Callee	getnum		2627330	0					
ANR	2627424	Identifier	getnum		2627330	0					
ANR	2627425	ArgumentList	temp		2627330	1					
ANR	2627426	Argument	temp		2627330	0					
ANR	2627427	Identifier	temp		2627330	0					
ANR	2627428	ExpressionStatement	free ( temp )	796:1:16662:16673	2627330	6	True				
ANR	2627429	CallExpression	free ( temp )		2627330	0					
ANR	2627430	Callee	free		2627330	0					
ANR	2627431	Identifier	free		2627330	0					
ANR	2627432	ArgumentList	temp		2627330	1					
ANR	2627433	Argument	temp		2627330	0					
ANR	2627434	Identifier	temp		2627330	0					
ANR	2627435	ReturnStatement	return res ;	797:1:16676:16686	2627330	7	True				
ANR	2627436	Identifier	res		2627330	0					
ANR	2627437	ReturnType	static st32		2627330	1					
ANR	2627438	Identifier	getnummemendbang		2627330	2					
ANR	2627439	ParameterList	const char * input		2627330	3					
ANR	2627440	Parameter	const char * input	783:30:16359:16375	2627330	0	True				
ANR	2627441	ParameterType	const char *		2627330	0					
ANR	2627442	Identifier	input		2627330	1					
ANR	2627443	CFGEntryNode	ENTRY		2627330		True				
ANR	2627444	CFGExitNode	EXIT		2627330		True				
ANR	2627445	Symbol	input		2627330						
ANR	2627446	Symbol	res		2627330						
ANR	2627447	Symbol	strlen		2627330						
ANR	2627448	Symbol	temp		2627330						
ANR	2627449	Symbol	err		2627330						
ANR	2627450	Symbol	* strlen		2627330						
ANR	2627451	Symbol	r_str_ndup		2627330						
ANR	2627452	Symbol	false		2627330						
ANR	2627453	Symbol	* input		2627330						
ANR	2627454	Symbol	true		2627330						
ANR	2627455	Symbol	getnum		2627330						
ANR	2627456	Symbol	r_str_endswith		2627330						
ANR	2627457	Function	getregmembang	800:0:16691:16956							
ANR	2627458	FunctionDef	getregmembang (const char * input)		2627457	0					
ANR	2627459	CompoundStatement		800:45:16736:16956	2627457	0					
ANR	2627460	IdentifierDeclStatement	st32 res ;	801:1:16739:16747	2627457	0	True				
ANR	2627461	IdentifierDecl	res		2627457	0					
ANR	2627462	IdentifierDeclType	st32		2627457	0					
ANR	2627463	Identifier	res		2627457	1					
ANR	2627464	IfStatement	"if ( ! input || ! * input || ! r_str_endswith ( input , ""!"" ) )"		2627457	1					
ANR	2627465	Condition	"! input || ! * input || ! r_str_endswith ( input , ""!"" )"	802:5:16754:16802	2627457	0	True				
ANR	2627466	OrExpression	"! input || ! * input || ! r_str_endswith ( input , ""!"" )"		2627457	0		||			
ANR	2627467	UnaryOperationExpression	! input		2627457	0					
ANR	2627468	UnaryOperator	!		2627457	0					
ANR	2627469	Identifier	input		2627457	1					
ANR	2627470	OrExpression	"! * input || ! r_str_endswith ( input , ""!"" )"		2627457	1		||			
ANR	2627471	UnaryOperationExpression	! * input		2627457	0					
ANR	2627472	UnaryOperator	!		2627457	0					
ANR	2627473	UnaryOperationExpression	* input		2627457	1					
ANR	2627474	UnaryOperator	*		2627457	0					
ANR	2627475	Identifier	input		2627457	1					
ANR	2627476	UnaryOperationExpression	"! r_str_endswith ( input , ""!"" )"		2627457	1					
ANR	2627477	UnaryOperator	!		2627457	0					
ANR	2627478	CallExpression	"r_str_endswith ( input , ""!"" )"		2627457	1					
ANR	2627479	Callee	r_str_endswith		2627457	0					
ANR	2627480	Identifier	r_str_endswith		2627457	0					
ANR	2627481	ArgumentList	input		2627457	1					
ANR	2627482	Argument	input		2627457	0					
ANR	2627483	Identifier	input		2627457	0					
ANR	2627484	Argument	"""!"""		2627457	1					
ANR	2627485	PrimaryExpression	"""!"""		2627457	0					
ANR	2627486	CompoundStatement		3:56:68:68	2627457	1					
ANR	2627487	ReturnStatement	return - 1 ;	803:2:16809:16818	2627457	0	True				
ANR	2627488	UnaryOperationExpression	- 1		2627457	0					
ANR	2627489	UnaryOperator	-		2627457	0					
ANR	2627490	PrimaryExpression	1		2627457	1					
ANR	2627491	IdentifierDeclStatement	"char * temp = r_str_ndup ( input , strlen ( input ) - 1 ) ;"	805:1:16824:16875	2627457	2	True				
ANR	2627492	IdentifierDecl	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		2627457	0					
ANR	2627493	IdentifierDeclType	char *		2627457	0					
ANR	2627494	Identifier	temp		2627457	1					
ANR	2627495	AssignmentExpression	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		2627457	2		=			
ANR	2627496	Identifier	temp		2627457	0					
ANR	2627497	CallExpression	"r_str_ndup ( input , strlen ( input ) - 1 )"		2627457	1					
ANR	2627498	Callee	r_str_ndup		2627457	0					
ANR	2627499	Identifier	r_str_ndup		2627457	0					
ANR	2627500	ArgumentList	input		2627457	1					
ANR	2627501	Argument	input		2627457	0					
ANR	2627502	Identifier	input		2627457	0					
ANR	2627503	Argument	strlen ( input ) - 1		2627457	1					
ANR	2627504	AdditiveExpression	strlen ( input ) - 1		2627457	0		-			
ANR	2627505	CallExpression	strlen ( input )		2627457	0					
ANR	2627506	Callee	strlen		2627457	0					
ANR	2627507	Identifier	strlen		2627457	0					
ANR	2627508	ArgumentList	input		2627457	1					
ANR	2627509	Argument	input		2627457	0					
ANR	2627510	Identifier	input		2627457	0					
ANR	2627511	PrimaryExpression	1		2627457	1					
ANR	2627512	IfStatement	if ( ! temp )		2627457	3					
ANR	2627513	Condition	! temp	806:5:16882:16886	2627457	0	True				
ANR	2627514	UnaryOperationExpression	! temp		2627457	0					
ANR	2627515	UnaryOperator	!		2627457	0					
ANR	2627516	Identifier	temp		2627457	1					
ANR	2627517	CompoundStatement		7:12:152:152	2627457	1					
ANR	2627518	ReturnStatement	return - 1 ;	807:2:16893:16902	2627457	0	True				
ANR	2627519	UnaryOperationExpression	- 1		2627457	0					
ANR	2627520	UnaryOperator	-		2627457	0					
ANR	2627521	PrimaryExpression	1		2627457	1					
ANR	2627522	ExpressionStatement	res = getreg ( temp )	809:1:16908:16927	2627457	4	True				
ANR	2627523	AssignmentExpression	res = getreg ( temp )		2627457	0		=			
ANR	2627524	Identifier	res		2627457	0					
ANR	2627525	CallExpression	getreg ( temp )		2627457	1					
ANR	2627526	Callee	getreg		2627457	0					
ANR	2627527	Identifier	getreg		2627457	0					
ANR	2627528	ArgumentList	temp		2627457	1					
ANR	2627529	Argument	temp		2627457	0					
ANR	2627530	Identifier	temp		2627457	0					
ANR	2627531	ExpressionStatement	free ( temp )	810:1:16930:16941	2627457	5	True				
ANR	2627532	CallExpression	free ( temp )		2627457	0					
ANR	2627533	Callee	free		2627457	0					
ANR	2627534	Identifier	free		2627457	0					
ANR	2627535	ArgumentList	temp		2627457	1					
ANR	2627536	Argument	temp		2627457	0					
ANR	2627537	Identifier	temp		2627457	0					
ANR	2627538	ReturnStatement	return res ;	811:1:16944:16954	2627457	6	True				
ANR	2627539	Identifier	res		2627457	0					
ANR	2627540	ReturnType	static st32		2627457	1					
ANR	2627541	Identifier	getregmembang		2627457	2					
ANR	2627542	ParameterList	const char * input		2627457	3					
ANR	2627543	Parameter	const char * input	800:26:16717:16733	2627457	0	True				
ANR	2627544	ParameterType	const char *		2627457	0					
ANR	2627545	Identifier	input		2627457	1					
ANR	2627546	CFGEntryNode	ENTRY		2627457		True				
ANR	2627547	CFGExitNode	EXIT		2627457		True				
ANR	2627548	Symbol	input		2627457						
ANR	2627549	Symbol	res		2627457						
ANR	2627550	Symbol	strlen		2627457						
ANR	2627551	Symbol	temp		2627457						
ANR	2627552	Symbol	r_str_ndup		2627457						
ANR	2627553	Symbol	getreg		2627457						
ANR	2627554	Symbol	* input		2627457						
ANR	2627555	Symbol	r_str_endswith		2627457						
ANR	2627556	Function	getcoproc	814:0:16959:17246							
ANR	2627557	FunctionDef	getcoproc (const char * str)		2627556	0					
ANR	2627558	CompoundStatement		814:38:16997:17246	2627556	0					
ANR	2627559	IdentifierDeclStatement	char * ep ;	815:1:17000:17008	2627556	0	True				
ANR	2627560	IdentifierDecl	* ep		2627556	0					
ANR	2627561	IdentifierDeclType	char *		2627556	0					
ANR	2627562	Identifier	ep		2627556	1					
ANR	2627563	IfStatement	if ( ! str || ! * str )		2627556	1					
ANR	2627564	Condition	! str || ! * str	816:5:17015:17027	2627556	0	True				
ANR	2627565	OrExpression	! str || ! * str		2627556	0		||			
ANR	2627566	UnaryOperationExpression	! str		2627556	0					
ANR	2627567	UnaryOperator	!		2627556	0					
ANR	2627568	Identifier	str		2627556	1					
ANR	2627569	UnaryOperationExpression	! * str		2627556	1					
ANR	2627570	UnaryOperator	!		2627556	0					
ANR	2627571	UnaryOperationExpression	* str		2627556	1					
ANR	2627572	UnaryOperator	*		2627556	0					
ANR	2627573	Identifier	str		2627556	1					
ANR	2627574	CompoundStatement		3:20:32:32	2627556	1					
ANR	2627575	ReturnStatement	return - 1 ;	817:2:17034:17043	2627556	0	True				
ANR	2627576	UnaryOperationExpression	- 1		2627556	0					
ANR	2627577	UnaryOperator	-		2627556	0					
ANR	2627578	PrimaryExpression	1		2627556	1					
ANR	2627579	IfStatement	if ( * str == 'p' )		2627556	2					
ANR	2627580	Condition	* str == 'p'	819:5:17053:17063	2627556	0	True				
ANR	2627581	EqualityExpression	* str == 'p'		2627556	0		==			
ANR	2627582	UnaryOperationExpression	* str		2627556	0					
ANR	2627583	UnaryOperator	*		2627556	0					
ANR	2627584	Identifier	str		2627556	1					
ANR	2627585	PrimaryExpression	'p'		2627556	1					
ANR	2627586	CompoundStatement		7:2:72:110	2627556	1					
ANR	2627587	IdentifierDeclStatement	"int coproc = strtol ( str + 1 , & ep , 10 ) ;"	820:2:17070:17108	2627556	0	True				
ANR	2627588	IdentifierDecl	"coproc = strtol ( str + 1 , & ep , 10 )"		2627556	0					
ANR	2627589	IdentifierDeclType	int		2627556	0					
ANR	2627590	Identifier	coproc		2627556	1					
ANR	2627591	AssignmentExpression	"coproc = strtol ( str + 1 , & ep , 10 )"		2627556	2		=			
ANR	2627592	Identifier	coproc		2627556	0					
ANR	2627593	CallExpression	"strtol ( str + 1 , & ep , 10 )"		2627556	1					
ANR	2627594	Callee	strtol		2627556	0					
ANR	2627595	Identifier	strtol		2627556	0					
ANR	2627596	ArgumentList	str + 1		2627556	1					
ANR	2627597	Argument	str + 1		2627556	0					
ANR	2627598	AdditiveExpression	str + 1		2627556	0		+			
ANR	2627599	Identifier	str		2627556	0					
ANR	2627600	PrimaryExpression	1		2627556	1					
ANR	2627601	Argument	& ep		2627556	1					
ANR	2627602	UnaryOperationExpression	& ep		2627556	0					
ANR	2627603	UnaryOperator	&		2627556	0					
ANR	2627604	Identifier	ep		2627556	1					
ANR	2627605	Argument	10		2627556	2					
ANR	2627606	PrimaryExpression	10		2627556	0					
ANR	2627607	IfStatement	if ( ( ep [ 0 ] != '\\0' ) || ( str [ 1 ] == '\\0' ) )		2627556	1					
ANR	2627608	Condition	( ep [ 0 ] != '\\0' ) || ( str [ 1 ] == '\\0' )	821:6:17116:17150	2627556	0	True				
ANR	2627609	OrExpression	( ep [ 0 ] != '\\0' ) || ( str [ 1 ] == '\\0' )		2627556	0		||			
ANR	2627610	EqualityExpression	ep [ 0 ] != '\\0'		2627556	0		!=			
ANR	2627611	ArrayIndexing	ep [ 0 ]		2627556	0					
ANR	2627612	Identifier	ep		2627556	0					
ANR	2627613	PrimaryExpression	0		2627556	1					
ANR	2627614	PrimaryExpression	'\\0'		2627556	1					
ANR	2627615	EqualityExpression	str [ 1 ] == '\\0'		2627556	1		==			
ANR	2627616	ArrayIndexing	str [ 1 ]		2627556	0					
ANR	2627617	Identifier	str		2627556	0					
ANR	2627618	PrimaryExpression	1		2627556	1					
ANR	2627619	PrimaryExpression	'\\0'		2627556	1					
ANR	2627620	CompoundStatement		8:43:155:155	2627556	1					
ANR	2627621	ReturnStatement	return - 1 ;	822:3:17158:17167	2627556	0	True				
ANR	2627622	UnaryOperationExpression	- 1		2627556	0					
ANR	2627623	UnaryOperator	-		2627556	0					
ANR	2627624	PrimaryExpression	1		2627556	1					
ANR	2627625	IfStatement	if ( coproc < 16 && coproc >= 0 )		2627556	2					
ANR	2627626	Condition	coproc < 16 && coproc >= 0	824:6:17179:17204	2627556	0	True				
ANR	2627627	AndExpression	coproc < 16 && coproc >= 0		2627556	0		&&			
ANR	2627628	RelationalExpression	coproc < 16		2627556	0		<			
ANR	2627629	Identifier	coproc		2627556	0					
ANR	2627630	PrimaryExpression	16		2627556	1					
ANR	2627631	RelationalExpression	coproc >= 0		2627556	1		>=			
ANR	2627632	Identifier	coproc		2627556	0					
ANR	2627633	PrimaryExpression	0		2627556	1					
ANR	2627634	CompoundStatement		11:34:209:209	2627556	1					
ANR	2627635	ReturnStatement	return coproc ;	825:3:17212:17225	2627556	0	True				
ANR	2627636	Identifier	coproc		2627556	0					
ANR	2627637	ReturnStatement	return - 1 ;	828:1:17235:17244	2627556	3	True				
ANR	2627638	UnaryOperationExpression	- 1		2627556	0					
ANR	2627639	UnaryOperator	-		2627556	0					
ANR	2627640	PrimaryExpression	1		2627556	1					
ANR	2627641	ReturnType	static int		2627556	1					
ANR	2627642	Identifier	getcoproc		2627556	2					
ANR	2627643	ParameterList	const char * str		2627556	3					
ANR	2627644	Parameter	const char * str	814:21:16980:16994	2627556	0	True				
ANR	2627645	ParameterType	const char *		2627556	0					
ANR	2627646	Identifier	str		2627556	1					
ANR	2627647	CFGEntryNode	ENTRY		2627556		True				
ANR	2627648	CFGExitNode	EXIT		2627556		True				
ANR	2627649	Symbol	str		2627556						
ANR	2627650	Symbol	coproc		2627556						
ANR	2627651	Symbol	* ep		2627556						
ANR	2627652	Symbol	& ep		2627556						
ANR	2627653	Symbol	strtol		2627556						
ANR	2627654	Symbol	ep		2627556						
ANR	2627655	Symbol	* str		2627556						
ANR	2627656	Function	getcoprocreg	831:0:17249:17545							
ANR	2627657	FunctionDef	getcoprocreg (const char * str)		2627656	0					
ANR	2627658	CompoundStatement		831:41:17290:17545	2627656	0					
ANR	2627659	IdentifierDeclStatement	char * ep ;	832:1:17293:17301	2627656	0	True				
ANR	2627660	IdentifierDecl	* ep		2627656	0					
ANR	2627661	IdentifierDeclType	char *		2627656	0					
ANR	2627662	Identifier	ep		2627656	1					
ANR	2627663	IfStatement	if ( ! str || ! * str )		2627656	1					
ANR	2627664	Condition	! str || ! * str	834:5:17310:17322	2627656	0	True				
ANR	2627665	OrExpression	! str || ! * str		2627656	0		||			
ANR	2627666	UnaryOperationExpression	! str		2627656	0					
ANR	2627667	UnaryOperator	!		2627656	0					
ANR	2627668	Identifier	str		2627656	1					
ANR	2627669	UnaryOperationExpression	! * str		2627656	1					
ANR	2627670	UnaryOperator	!		2627656	0					
ANR	2627671	UnaryOperationExpression	* str		2627656	1					
ANR	2627672	UnaryOperator	*		2627656	0					
ANR	2627673	Identifier	str		2627656	1					
ANR	2627674	CompoundStatement		4:20:34:34	2627656	1					
ANR	2627675	ReturnStatement	return - 1 ;	835:2:17329:17338	2627656	0	True				
ANR	2627676	UnaryOperationExpression	- 1		2627656	0					
ANR	2627677	UnaryOperator	-		2627656	0					
ANR	2627678	PrimaryExpression	1		2627656	1					
ANR	2627679	IfStatement	"if ( r_str_startswith ( str , ""c"" ) )"		2627656	2					
ANR	2627680	Condition	"r_str_startswith ( str , ""c"" )"	837:5:17348:17374	2627656	0	True				
ANR	2627681	CallExpression	"r_str_startswith ( str , ""c"" )"		2627656	0					
ANR	2627682	Callee	r_str_startswith		2627656	0					
ANR	2627683	Identifier	r_str_startswith		2627656	0					
ANR	2627684	ArgumentList	str		2627656	1					
ANR	2627685	Argument	str		2627656	0					
ANR	2627686	Identifier	str		2627656	0					
ANR	2627687	Argument	"""c"""		2627656	1					
ANR	2627688	PrimaryExpression	"""c"""		2627656	0					
ANR	2627689	CompoundStatement		8:2:90:125	2627656	1					
ANR	2627690	IdentifierDeclStatement	"int reg = strtol ( str + 1 , & ep , 10 ) ;"	838:2:17381:17416	2627656	0	True				
ANR	2627691	IdentifierDecl	"reg = strtol ( str + 1 , & ep , 10 )"		2627656	0					
ANR	2627692	IdentifierDeclType	int		2627656	0					
ANR	2627693	Identifier	reg		2627656	1					
ANR	2627694	AssignmentExpression	"reg = strtol ( str + 1 , & ep , 10 )"		2627656	2		=			
ANR	2627695	Identifier	reg		2627656	0					
ANR	2627696	CallExpression	"strtol ( str + 1 , & ep , 10 )"		2627656	1					
ANR	2627697	Callee	strtol		2627656	0					
ANR	2627698	Identifier	strtol		2627656	0					
ANR	2627699	ArgumentList	str + 1		2627656	1					
ANR	2627700	Argument	str + 1		2627656	0					
ANR	2627701	AdditiveExpression	str + 1		2627656	0		+			
ANR	2627702	Identifier	str		2627656	0					
ANR	2627703	PrimaryExpression	1		2627656	1					
ANR	2627704	Argument	& ep		2627656	1					
ANR	2627705	UnaryOperationExpression	& ep		2627656	0					
ANR	2627706	UnaryOperator	&		2627656	0					
ANR	2627707	Identifier	ep		2627656	1					
ANR	2627708	Argument	10		2627656	2					
ANR	2627709	PrimaryExpression	10		2627656	0					
ANR	2627710	IfStatement	if ( ( ep [ 0 ] != '\\0' ) || ( str [ 1 ] == '\\0' ) )		2627656	1					
ANR	2627711	Condition	( ep [ 0 ] != '\\0' ) || ( str [ 1 ] == '\\0' )	839:6:17424:17458	2627656	0	True				
ANR	2627712	OrExpression	( ep [ 0 ] != '\\0' ) || ( str [ 1 ] == '\\0' )		2627656	0		||			
ANR	2627713	EqualityExpression	ep [ 0 ] != '\\0'		2627656	0		!=			
ANR	2627714	ArrayIndexing	ep [ 0 ]		2627656	0					
ANR	2627715	Identifier	ep		2627656	0					
ANR	2627716	PrimaryExpression	0		2627656	1					
ANR	2627717	PrimaryExpression	'\\0'		2627656	1					
ANR	2627718	EqualityExpression	str [ 1 ] == '\\0'		2627656	1		==			
ANR	2627719	ArrayIndexing	str [ 1 ]		2627656	0					
ANR	2627720	Identifier	str		2627656	0					
ANR	2627721	PrimaryExpression	1		2627656	1					
ANR	2627722	PrimaryExpression	'\\0'		2627656	1					
ANR	2627723	CompoundStatement		9:43:170:170	2627656	1					
ANR	2627724	ReturnStatement	return - 1 ;	840:3:17466:17475	2627656	0	True				
ANR	2627725	UnaryOperationExpression	- 1		2627656	0					
ANR	2627726	UnaryOperator	-		2627656	0					
ANR	2627727	PrimaryExpression	1		2627656	1					
ANR	2627728	IfStatement	if ( reg < 16 && reg >= 0 )		2627656	2					
ANR	2627729	Condition	reg < 16 && reg >= 0	842:6:17487:17506	2627656	0	True				
ANR	2627730	AndExpression	reg < 16 && reg >= 0		2627656	0		&&			
ANR	2627731	RelationalExpression	reg < 16		2627656	0		<			
ANR	2627732	Identifier	reg		2627656	0					
ANR	2627733	PrimaryExpression	16		2627656	1					
ANR	2627734	RelationalExpression	reg >= 0		2627656	1		>=			
ANR	2627735	Identifier	reg		2627656	0					
ANR	2627736	PrimaryExpression	0		2627656	1					
ANR	2627737	CompoundStatement		12:28:218:218	2627656	1					
ANR	2627738	ReturnStatement	return reg ;	843:3:17514:17524	2627656	0	True				
ANR	2627739	Identifier	reg		2627656	0					
ANR	2627740	ReturnStatement	return - 1 ;	846:1:17534:17543	2627656	3	True				
ANR	2627741	UnaryOperationExpression	- 1		2627656	0					
ANR	2627742	UnaryOperator	-		2627656	0					
ANR	2627743	PrimaryExpression	1		2627656	1					
ANR	2627744	ReturnType	static int		2627656	1					
ANR	2627745	Identifier	getcoprocreg		2627656	2					
ANR	2627746	ParameterList	const char * str		2627656	3					
ANR	2627747	Parameter	const char * str	831:24:17273:17287	2627656	0	True				
ANR	2627748	ParameterType	const char *		2627656	0					
ANR	2627749	Identifier	str		2627656	1					
ANR	2627750	CFGEntryNode	ENTRY		2627656		True				
ANR	2627751	CFGExitNode	EXIT		2627656		True				
ANR	2627752	Symbol	str		2627656						
ANR	2627753	Symbol	r_str_startswith		2627656						
ANR	2627754	Symbol	* ep		2627656						
ANR	2627755	Symbol	& ep		2627656						
ANR	2627756	Symbol	strtol		2627656						
ANR	2627757	Symbol	reg		2627656						
ANR	2627758	Symbol	ep		2627656						
ANR	2627759	Symbol	* str		2627656						
ANR	2627760	Function	interpret_msrbank	849:0:17548:18250							
ANR	2627761	FunctionDef	"interpret_msrbank (char * str , ut8 * spsr)"		2627760	0					
ANR	2627762	CompoundStatement		849:52:17600:18250	2627760	0					
ANR	2627763	IdentifierDeclStatement	"const char fields [ ] = { 'c' , 'x' , 's' , 'f' , 0 } ;"	850:1:17603:17648	2627760	0	True				
ANR	2627764	IdentifierDecl	"fields [ ] = { 'c' , 'x' , 's' , 'f' , 0 }"		2627760	0					
ANR	2627765	IdentifierDeclType	const char [ ]		2627760	0					
ANR	2627766	Identifier	fields		2627760	1					
ANR	2627767	AssignmentExpression	"fields [ ] = { 'c' , 'x' , 's' , 'f' , 0 }"		2627760	2		=			
ANR	2627768	Identifier	fields		2627760	0					
ANR	2627769	InitializerList	'c'		2627760	1					
ANR	2627770	PrimaryExpression	'c'		2627760	0					
ANR	2627771	PrimaryExpression	'x'		2627760	1					
ANR	2627772	PrimaryExpression	's'		2627760	2					
ANR	2627773	PrimaryExpression	'f'		2627760	3					
ANR	2627774	PrimaryExpression	0		2627760	4					
ANR	2627775	IdentifierDeclStatement	int res = 0 ;	851:1:17651:17662	2627760	1	True				
ANR	2627776	IdentifierDecl	res = 0		2627760	0					
ANR	2627777	IdentifierDeclType	int		2627760	0					
ANR	2627778	Identifier	res		2627760	1					
ANR	2627779	AssignmentExpression	res = 0		2627760	2		=			
ANR	2627780	Identifier	res		2627760	0					
ANR	2627781	PrimaryExpression	0		2627760	1					
ANR	2627782	IdentifierDeclStatement	"int i , j ;"	852:1:17665:17673	2627760	2	True				
ANR	2627783	IdentifierDecl	i		2627760	0					
ANR	2627784	IdentifierDeclType	int		2627760	0					
ANR	2627785	Identifier	i		2627760	1					
ANR	2627786	IdentifierDecl	j		2627760	1					
ANR	2627787	IdentifierDeclType	int		2627760	0					
ANR	2627788	Identifier	j		2627760	1					
ANR	2627789	IfStatement	"if ( r_str_startswith ( str , ""spsr_"" ) )"		2627760	3					
ANR	2627790	Condition	"r_str_startswith ( str , ""spsr_"" )"	853:5:17680:17710	2627760	0	True				
ANR	2627791	CallExpression	"r_str_startswith ( str , ""spsr_"" )"		2627760	0					
ANR	2627792	Callee	r_str_startswith		2627760	0					
ANR	2627793	Identifier	r_str_startswith		2627760	0					
ANR	2627794	ArgumentList	str		2627760	1					
ANR	2627795	Argument	str		2627760	0					
ANR	2627796	Identifier	str		2627760	0					
ANR	2627797	Argument	"""spsr_"""		2627760	1					
ANR	2627798	PrimaryExpression	"""spsr_"""		2627760	0					
ANR	2627799	CompoundStatement		5:38:112:112	2627760	1					
ANR	2627800	ExpressionStatement	* spsr = 1	854:2:17717:17726	2627760	0	True				
ANR	2627801	AssignmentExpression	* spsr = 1		2627760	0		=			
ANR	2627802	UnaryOperationExpression	* spsr		2627760	0					
ANR	2627803	UnaryOperator	*		2627760	0					
ANR	2627804	Identifier	spsr		2627760	1					
ANR	2627805	PrimaryExpression	1		2627760	1					
ANR	2627806	ElseStatement	else		2627760	0					
ANR	2627807	CompoundStatement		7:8:135:135	2627760	0					
ANR	2627808	ExpressionStatement	* spsr = 0	856:2:17740:17749	2627760	0	True				
ANR	2627809	AssignmentExpression	* spsr = 0		2627760	0		=			
ANR	2627810	UnaryOperationExpression	* spsr		2627760	0					
ANR	2627811	UnaryOperator	*		2627760	0					
ANR	2627812	Identifier	spsr		2627760	1					
ANR	2627813	PrimaryExpression	0		2627760	1					
ANR	2627814	IfStatement	"if ( r_str_startswith ( str , ""apsr_"" ) )"		2627760	4					
ANR	2627815	Condition	"r_str_startswith ( str , ""apsr_"" )"	859:5:17763:17793	2627760	0	True				
ANR	2627816	CallExpression	"r_str_startswith ( str , ""apsr_"" )"		2627760	0					
ANR	2627817	Callee	r_str_startswith		2627760	0					
ANR	2627818	Identifier	r_str_startswith		2627760	0					
ANR	2627819	ArgumentList	str		2627760	1					
ANR	2627820	Argument	str		2627760	0					
ANR	2627821	Identifier	str		2627760	0					
ANR	2627822	Argument	"""apsr_"""		2627760	1					
ANR	2627823	PrimaryExpression	"""apsr_"""		2627760	0					
ANR	2627824	CompoundStatement		11:38:195:195	2627760	1					
ANR	2627825	IfStatement	"if ( ! ( strcmp ( str + 5 , ""g"" ) ) )"		2627760	0					
ANR	2627826	Condition	"! ( strcmp ( str + 5 , ""g"" ) )"	860:6:17804:17825	2627760	0	True				
ANR	2627827	UnaryOperationExpression	"! ( strcmp ( str + 5 , ""g"" ) )"		2627760	0					
ANR	2627828	UnaryOperator	!		2627760	0					
ANR	2627829	CallExpression	"strcmp ( str + 5 , ""g"" )"		2627760	1					
ANR	2627830	Callee	strcmp		2627760	0					
ANR	2627831	Identifier	strcmp		2627760	0					
ANR	2627832	ArgumentList	str + 5		2627760	1					
ANR	2627833	Argument	str + 5		2627760	0					
ANR	2627834	AdditiveExpression	str + 5		2627760	0		+			
ANR	2627835	Identifier	str		2627760	0					
ANR	2627836	PrimaryExpression	5		2627760	1					
ANR	2627837	Argument	"""g"""		2627760	1					
ANR	2627838	PrimaryExpression	"""g"""		2627760	0					
ANR	2627839	CompoundStatement		12:30:227:227	2627760	1					
ANR	2627840	ReturnStatement	return 0x4 ;	861:3:17833:17843	2627760	0	True				
ANR	2627841	PrimaryExpression	0x4		2627760	0					
ANR	2627842	IfStatement	"if ( ! ( strcmp ( str + 5 , ""nzcvq"" ) ) )"		2627760	1					
ANR	2627843	Condition	"! ( strcmp ( str + 5 , ""nzcvq"" ) )"	863:6:17855:17880	2627760	0	True				
ANR	2627844	UnaryOperationExpression	"! ( strcmp ( str + 5 , ""nzcvq"" ) )"		2627760	0					
ANR	2627845	UnaryOperator	!		2627760	0					
ANR	2627846	CallExpression	"strcmp ( str + 5 , ""nzcvq"" )"		2627760	1					
ANR	2627847	Callee	strcmp		2627760	0					
ANR	2627848	Identifier	strcmp		2627760	0					
ANR	2627849	ArgumentList	str + 5		2627760	1					
ANR	2627850	Argument	str + 5		2627760	0					
ANR	2627851	AdditiveExpression	str + 5		2627760	0		+			
ANR	2627852	Identifier	str		2627760	0					
ANR	2627853	PrimaryExpression	5		2627760	1					
ANR	2627854	Argument	"""nzcvq"""		2627760	1					
ANR	2627855	PrimaryExpression	"""nzcvq"""		2627760	0					
ANR	2627856	CompoundStatement		15:34:282:282	2627760	1					
ANR	2627857	ReturnStatement	return 0x8 ;	864:3:17888:17898	2627760	0	True				
ANR	2627858	PrimaryExpression	0x8		2627760	0					
ANR	2627859	IfStatement	"if ( ! ( strcmp ( str + 5 , ""nzcvqg"" ) ) )"		2627760	2					
ANR	2627860	Condition	"! ( strcmp ( str + 5 , ""nzcvqg"" ) )"	866:6:17910:17936	2627760	0	True				
ANR	2627861	UnaryOperationExpression	"! ( strcmp ( str + 5 , ""nzcvqg"" ) )"		2627760	0					
ANR	2627862	UnaryOperator	!		2627760	0					
ANR	2627863	CallExpression	"strcmp ( str + 5 , ""nzcvqg"" )"		2627760	1					
ANR	2627864	Callee	strcmp		2627760	0					
ANR	2627865	Identifier	strcmp		2627760	0					
ANR	2627866	ArgumentList	str + 5		2627760	1					
ANR	2627867	Argument	str + 5		2627760	0					
ANR	2627868	AdditiveExpression	str + 5		2627760	0		+			
ANR	2627869	Identifier	str		2627760	0					
ANR	2627870	PrimaryExpression	5		2627760	1					
ANR	2627871	Argument	"""nzcvqg"""		2627760	1					
ANR	2627872	PrimaryExpression	"""nzcvqg"""		2627760	0					
ANR	2627873	CompoundStatement		18:35:338:338	2627760	1					
ANR	2627874	ReturnStatement	return 0xc ;	867:3:17944:17954	2627760	0	True				
ANR	2627875	PrimaryExpression	0xc		2627760	0					
ANR	2627876	IfStatement	"if ( r_str_startswith ( str , ""cpsr_"" ) || r_str_startswith ( str , ""spsr_"" ) )"		2627760	5					
ANR	2627877	Condition	"r_str_startswith ( str , ""cpsr_"" ) || r_str_startswith ( str , ""spsr_"" )"	870:5:17968:18033	2627760	0	True				
ANR	2627878	OrExpression	"r_str_startswith ( str , ""cpsr_"" ) || r_str_startswith ( str , ""spsr_"" )"		2627760	0		||			
ANR	2627879	CallExpression	"r_str_startswith ( str , ""cpsr_"" )"		2627760	0					
ANR	2627880	Callee	r_str_startswith		2627760	0					
ANR	2627881	Identifier	r_str_startswith		2627760	0					
ANR	2627882	ArgumentList	str		2627760	1					
ANR	2627883	Argument	str		2627760	0					
ANR	2627884	Identifier	str		2627760	0					
ANR	2627885	Argument	"""cpsr_"""		2627760	1					
ANR	2627886	PrimaryExpression	"""cpsr_"""		2627760	0					
ANR	2627887	CallExpression	"r_str_startswith ( str , ""spsr_"" )"		2627760	1					
ANR	2627888	Callee	r_str_startswith		2627760	0					
ANR	2627889	Identifier	r_str_startswith		2627760	0					
ANR	2627890	ArgumentList	str		2627760	1					
ANR	2627891	Argument	str		2627760	0					
ANR	2627892	Identifier	str		2627760	0					
ANR	2627893	Argument	"""spsr_"""		2627760	1					
ANR	2627894	PrimaryExpression	"""spsr_"""		2627760	0					
ANR	2627895	CompoundStatement		22:73:435:435	2627760	1					
ANR	2627896	ForStatement	for ( i = 0 ; str [ 5 + i ] ; i ++ )		2627760	0					
ANR	2627897	ForInit	i = 0 ;	871:7:18045:18050	2627760	0	True				
ANR	2627898	AssignmentExpression	i = 0		2627760	0		=			
ANR	2627899	Identifier	i		2627760	0					
ANR	2627900	PrimaryExpression	0		2627760	1					
ANR	2627901	Condition	str [ 5 + i ]	871:14:18052:18059	2627760	1	True				
ANR	2627902	ArrayIndexing	str [ 5 + i ]		2627760	0					
ANR	2627903	Identifier	str		2627760	0					
ANR	2627904	AdditiveExpression	5 + i		2627760	1		+			
ANR	2627905	PrimaryExpression	5		2627760	0					
ANR	2627906	Identifier	i		2627760	1					
ANR	2627907	PostIncDecOperationExpression	i ++	871:24:18062:18064	2627760	2	True				
ANR	2627908	Identifier	i		2627760	0					
ANR	2627909	IncDec	++		2627760	1					
ANR	2627910	CompoundStatement		23:29:466:466	2627760	3					
ANR	2627911	ForStatement	for ( j = 0 ; fields [ j ] ; j ++ )		2627760	0					
ANR	2627912	ForInit	j = 0 ;	872:8:18077:18082	2627760	0	True				
ANR	2627913	AssignmentExpression	j = 0		2627760	0		=			
ANR	2627914	Identifier	j		2627760	0					
ANR	2627915	PrimaryExpression	0		2627760	1					
ANR	2627916	Condition	fields [ j ]	872:15:18084:18092	2627760	1	True				
ANR	2627917	ArrayIndexing	fields [ j ]		2627760	0					
ANR	2627918	Identifier	fields		2627760	0					
ANR	2627919	Identifier	j		2627760	1					
ANR	2627920	PostIncDecOperationExpression	j ++	872:26:18095:18097	2627760	2	True				
ANR	2627921	Identifier	j		2627760	0					
ANR	2627922	IncDec	++		2627760	1					
ANR	2627923	CompoundStatement		24:31:499:499	2627760	3					
ANR	2627924	IfStatement	if ( str [ 5 + i ] == fields [ j ] )		2627760	0					
ANR	2627925	Condition	str [ 5 + i ] == fields [ j ]	873:8:18110:18130	2627760	0	True				
ANR	2627926	EqualityExpression	str [ 5 + i ] == fields [ j ]		2627760	0		==			
ANR	2627927	ArrayIndexing	str [ 5 + i ]		2627760	0					
ANR	2627928	Identifier	str		2627760	0					
ANR	2627929	AdditiveExpression	5 + i		2627760	1		+			
ANR	2627930	PrimaryExpression	5		2627760	0					
ANR	2627931	Identifier	i		2627760	1					
ANR	2627932	ArrayIndexing	fields [ j ]		2627760	1					
ANR	2627933	Identifier	fields		2627760	0					
ANR	2627934	Identifier	j		2627760	1					
ANR	2627935	CompoundStatement		25:31:532:532	2627760	1					
ANR	2627936	BreakStatement	break ;	874:5:18140:18145	2627760	0	True				
ANR	2627937	IfStatement	if ( ! ( fields [ j ] ) )		2627760	1					
ANR	2627938	Condition	! ( fields [ j ] )	877:7:18165:18176	2627760	0	True				
ANR	2627939	UnaryOperationExpression	! ( fields [ j ] )		2627760	0					
ANR	2627940	UnaryOperator	!		2627760	0					
ANR	2627941	ArrayIndexing	fields [ j ]		2627760	1					
ANR	2627942	Identifier	fields		2627760	0					
ANR	2627943	Identifier	j		2627760	1					
ANR	2627944	CompoundStatement		29:21:578:578	2627760	1					
ANR	2627945	ReturnStatement	return 0 ;	878:4:18185:18193	2627760	0	True				
ANR	2627946	PrimaryExpression	0		2627760	0					
ANR	2627947	ExpressionStatement	res |= 1 << j	880:3:18203:18216	2627760	2	True				
ANR	2627948	AssignmentExpression	res |= 1 << j		2627760	0		|=			
ANR	2627949	Identifier	res		2627760	0					
ANR	2627950	ShiftExpression	1 << j		2627760	1		<<			
ANR	2627951	PrimaryExpression	1		2627760	0					
ANR	2627952	Identifier	j		2627760	1					
ANR	2627953	ReturnStatement	return res ;	882:2:18224:18234	2627760	1	True				
ANR	2627954	Identifier	res		2627760	0					
ANR	2627955	ReturnStatement	return 0 ;	884:1:18240:18248	2627760	6	True				
ANR	2627956	PrimaryExpression	0		2627760	0					
ANR	2627957	ReturnType	static ut8		2627760	1					
ANR	2627958	Identifier	interpret_msrbank		2627760	2					
ANR	2627959	ParameterList	"char * str , ut8 * spsr"		2627760	3					
ANR	2627960	Parameter	char * str	849:30:17578:17586	2627760	0	True				
ANR	2627961	ParameterType	char *		2627760	0					
ANR	2627962	Identifier	str		2627760	1					
ANR	2627963	Parameter	ut8 * spsr	849:41:17589:17597	2627760	1	True				
ANR	2627964	ParameterType	ut8 *		2627760	0					
ANR	2627965	Identifier	spsr		2627760	1					
ANR	2627966	CFGEntryNode	ENTRY		2627760		True				
ANR	2627967	CFGExitNode	EXIT		2627760		True				
ANR	2627968	Symbol	r_str_startswith		2627760						
ANR	2627969	Symbol	strcmp		2627760						
ANR	2627970	Symbol	res		2627760						
ANR	2627971	Symbol	spsr		2627760						
ANR	2627972	Symbol	i		2627760						
ANR	2627973	Symbol	j		2627760						
ANR	2627974	Symbol	str		2627760						
ANR	2627975	Symbol	* fields		2627760						
ANR	2627976	Symbol	* i		2627760						
ANR	2627977	Symbol	* j		2627760						
ANR	2627978	Symbol	* spsr		2627760						
ANR	2627979	Symbol	* str		2627760						
ANR	2627980	Symbol	fields		2627760						
ANR	2627981	Function	thumb_getshift	887:0:18255:19257							
ANR	2627982	FunctionDef	thumb_getshift (const char * str)		2627981	0					
ANR	2627983	CompoundStatement		887:44:18299:19257	2627981	0					
ANR	2627984	IdentifierDeclStatement	"const char * shifts [ ] = { ""LSL"" , ""LSR"" , ""ASR"" , ""ROR"" , 0 , ""RRX"" } ;"	889:1:18392:18458	2627981	0	True				
ANR	2627985	IdentifierDecl	"* shifts [ ] = { ""LSL"" , ""LSR"" , ""ASR"" , ""ROR"" , 0 , ""RRX"" }"		2627981	0					
ANR	2627986	IdentifierDeclType	const char * [ ]		2627981	0					
ANR	2627987	Identifier	shifts		2627981	1					
ANR	2627988	AssignmentExpression	"* shifts [ ] = { ""LSL"" , ""LSR"" , ""ASR"" , ""ROR"" , 0 , ""RRX"" }"		2627981	2		=			
ANR	2627989	Identifier	shifts		2627981	0					
ANR	2627990	InitializerList	"""LSL"""		2627981	1					
ANR	2627991	PrimaryExpression	"""LSL"""		2627981	0					
ANR	2627992	PrimaryExpression	"""LSR"""		2627981	1					
ANR	2627993	PrimaryExpression	"""ASR"""		2627981	2					
ANR	2627994	PrimaryExpression	"""ROR"""		2627981	3					
ANR	2627995	PrimaryExpression	0		2627981	4					
ANR	2627996	PrimaryExpression	"""RRX"""		2627981	5					
ANR	2627997	IdentifierDeclStatement	char * type = strdup ( str ) ;	892:1:18461:18486	2627981	1	True				
ANR	2627998	IdentifierDecl	* type = strdup ( str )		2627981	0					
ANR	2627999	IdentifierDeclType	char *		2627981	0					
ANR	2628000	Identifier	type		2627981	1					
ANR	2628001	AssignmentExpression	* type = strdup ( str )		2627981	2		=			
ANR	2628002	Identifier	type		2627981	0					
ANR	2628003	CallExpression	strdup ( str )		2627981	1					
ANR	2628004	Callee	strdup		2627981	0					
ANR	2628005	Identifier	strdup		2627981	0					
ANR	2628006	ArgumentList	str		2627981	1					
ANR	2628007	Argument	str		2627981	0					
ANR	2628008	Identifier	str		2627981	0					
ANR	2628009	IdentifierDeclStatement	char * arg ;	893:1:18489:18498	2627981	2	True				
ANR	2628010	IdentifierDecl	* arg		2627981	0					
ANR	2628011	IdentifierDeclType	char *		2627981	0					
ANR	2628012	Identifier	arg		2627981	1					
ANR	2628013	IdentifierDeclStatement	char * space ;	894:1:18501:18512	2627981	3	True				
ANR	2628014	IdentifierDecl	* space		2627981	0					
ANR	2628015	IdentifierDeclType	char *		2627981	0					
ANR	2628016	Identifier	space		2627981	1					
ANR	2628017	IdentifierDeclStatement	ut32 res = 0 ;	895:1:18515:18527	2627981	4	True				
ANR	2628018	IdentifierDecl	res = 0		2627981	0					
ANR	2628019	IdentifierDeclType	ut32		2627981	0					
ANR	2628020	Identifier	res		2627981	1					
ANR	2628021	AssignmentExpression	res = 0		2627981	2		=			
ANR	2628022	Identifier	res		2627981	0					
ANR	2628023	PrimaryExpression	0		2627981	1					
ANR	2628024	IdentifierDeclStatement	ut32 shift = false ;	896:1:18530:18548	2627981	5	True				
ANR	2628025	IdentifierDecl	shift = false		2627981	0					
ANR	2628026	IdentifierDeclType	ut32		2627981	0					
ANR	2628027	Identifier	shift		2627981	1					
ANR	2628028	AssignmentExpression	shift = false		2627981	2		=			
ANR	2628029	Identifier	false		2627981	0					
ANR	2628030	Identifier	false		2627981	1					
ANR	2628031	ExpressionStatement	err = false	897:1:18551:18562	2627981	6	True				
ANR	2628032	AssignmentExpression	err = false		2627981	0		=			
ANR	2628033	Identifier	err		2627981	0					
ANR	2628034	Identifier	false		2627981	1					
ANR	2628035	IdentifierDeclStatement	ut32 argn ;	898:1:18565:18574	2627981	7	True				
ANR	2628036	IdentifierDecl	argn		2627981	0					
ANR	2628037	IdentifierDeclType	ut32		2627981	0					
ANR	2628038	Identifier	argn		2627981	1					
ANR	2628039	IdentifierDeclStatement	ut32 i ;	899:1:18577:18583	2627981	8	True				
ANR	2628040	IdentifierDecl	i		2627981	0					
ANR	2628041	IdentifierDeclType	ut32		2627981	0					
ANR	2628042	Identifier	i		2627981	1					
ANR	2628043	ExpressionStatement	"r_str_case ( type , true )"	901:1:18588:18610	2627981	9	True				
ANR	2628044	CallExpression	"r_str_case ( type , true )"		2627981	0					
ANR	2628045	Callee	r_str_case		2627981	0					
ANR	2628046	Identifier	r_str_case		2627981	0					
ANR	2628047	ArgumentList	type		2627981	1					
ANR	2628048	Argument	type		2627981	0					
ANR	2628049	Identifier	type		2627981	0					
ANR	2628050	Argument	true		2627981	1					
ANR	2628051	Identifier	true		2627981	0					
ANR	2628052	IfStatement	"if ( ! strcmp ( type , shifts [ 5 ] ) )"		2627981	10					
ANR	2628053	Condition	"! strcmp ( type , shifts [ 5 ] )"	903:5:18619:18643	2627981	0	True				
ANR	2628054	UnaryOperationExpression	"! strcmp ( type , shifts [ 5 ] )"		2627981	0					
ANR	2628055	UnaryOperator	!		2627981	0					
ANR	2628056	CallExpression	"strcmp ( type , shifts [ 5 ] )"		2627981	1					
ANR	2628057	Callee	strcmp		2627981	0					
ANR	2628058	Identifier	strcmp		2627981	0					
ANR	2628059	ArgumentList	type		2627981	1					
ANR	2628060	Argument	type		2627981	0					
ANR	2628061	Identifier	type		2627981	0					
ANR	2628062	Argument	shifts [ 5 ]		2627981	1					
ANR	2628063	ArrayIndexing	shifts [ 5 ]		2627981	0					
ANR	2628064	Identifier	shifts		2627981	0					
ANR	2628065	PrimaryExpression	5		2627981	1					
ANR	2628066	CompoundStatement		17:32:346:346	2627981	1					
ANR	2628067	ExpressionStatement	res |= 3 << 12	905:2:18677:18691	2627981	0	True				
ANR	2628068	AssignmentExpression	res |= 3 << 12		2627981	0		|=			
ANR	2628069	Identifier	res		2627981	0					
ANR	2628070	ShiftExpression	3 << 12		2627981	1		<<			
ANR	2628071	PrimaryExpression	3		2627981	0					
ANR	2628072	PrimaryExpression	12		2627981	1					
ANR	2628073	ExpressionStatement	free ( type )	906:2:18696:18707	2627981	1	True				
ANR	2628074	CallExpression	free ( type )		2627981	0					
ANR	2628075	Callee	free		2627981	0					
ANR	2628076	Identifier	free		2627981	0					
ANR	2628077	ArgumentList	type		2627981	1					
ANR	2628078	Argument	type		2627981	0					
ANR	2628079	Identifier	type		2627981	0					
ANR	2628080	ReturnStatement	return res ;	907:2:18711:18721	2627981	2	True				
ANR	2628081	Identifier	res		2627981	0					
ANR	2628082	ExpressionStatement	"space = strchr ( type , ' ' )"	910:1:18729:18755	2627981	11	True				
ANR	2628083	AssignmentExpression	"space = strchr ( type , ' ' )"		2627981	0		=			
ANR	2628084	Identifier	space		2627981	0					
ANR	2628085	CallExpression	"strchr ( type , ' ' )"		2627981	1					
ANR	2628086	Callee	strchr		2627981	0					
ANR	2628087	Identifier	strchr		2627981	0					
ANR	2628088	ArgumentList	type		2627981	1					
ANR	2628089	Argument	type		2627981	0					
ANR	2628090	Identifier	type		2627981	0					
ANR	2628091	Argument	' '		2627981	1					
ANR	2628092	PrimaryExpression	' '		2627981	0					
ANR	2628093	IfStatement	if ( ! space )		2627981	12					
ANR	2628094	Condition	! space	911:5:18762:18767	2627981	0	True				
ANR	2628095	UnaryOperationExpression	! space		2627981	0					
ANR	2628096	UnaryOperator	!		2627981	0					
ANR	2628097	Identifier	space		2627981	1					
ANR	2628098	CompoundStatement		25:13:470:470	2627981	1					
ANR	2628099	ExpressionStatement	free ( type )	912:2:18774:18785	2627981	0	True				
ANR	2628100	CallExpression	free ( type )		2627981	0					
ANR	2628101	Callee	free		2627981	0					
ANR	2628102	Identifier	free		2627981	0					
ANR	2628103	ArgumentList	type		2627981	1					
ANR	2628104	Argument	type		2627981	0					
ANR	2628105	Identifier	type		2627981	0					
ANR	2628106	ExpressionStatement	err = true	913:2:18789:18799	2627981	1	True				
ANR	2628107	AssignmentExpression	err = true		2627981	0		=			
ANR	2628108	Identifier	err		2627981	0					
ANR	2628109	Identifier	true		2627981	1					
ANR	2628110	ReturnStatement	return 0 ;	914:2:18803:18811	2627981	2	True				
ANR	2628111	PrimaryExpression	0		2627981	0					
ANR	2628112	ExpressionStatement	* space = 0	916:1:18817:18827	2627981	13	True				
ANR	2628113	AssignmentExpression	* space = 0		2627981	0		=			
ANR	2628114	UnaryOperationExpression	* space		2627981	0					
ANR	2628115	UnaryOperator	*		2627981	0					
ANR	2628116	Identifier	space		2627981	1					
ANR	2628117	PrimaryExpression	0		2627981	1					
ANR	2628118	ExpressionStatement	arg = strdup ( ++ space )	917:1:18830:18852	2627981	14	True				
ANR	2628119	AssignmentExpression	arg = strdup ( ++ space )		2627981	0		=			
ANR	2628120	Identifier	arg		2627981	0					
ANR	2628121	CallExpression	strdup ( ++ space )		2627981	1					
ANR	2628122	Callee	strdup		2627981	0					
ANR	2628123	Identifier	strdup		2627981	0					
ANR	2628124	ArgumentList	++ space		2627981	1					
ANR	2628125	Argument	++ space		2627981	0					
ANR	2628126	UnaryExpression	++ space		2627981	0					
ANR	2628127	IncDec	++		2627981	0					
ANR	2628128	Identifier	space		2627981	1					
ANR	2628129	ForStatement	for ( i = 0 ; shifts [ i ] ; i ++ )		2627981	15					
ANR	2628130	ForInit	i = 0 ;	919:6:18862:18867	2627981	0	True				
ANR	2628131	AssignmentExpression	i = 0		2627981	0		=			
ANR	2628132	Identifier	i		2627981	0					
ANR	2628133	PrimaryExpression	0		2627981	1					
ANR	2628134	Condition	shifts [ i ]	919:13:18869:18877	2627981	1	True				
ANR	2628135	ArrayIndexing	shifts [ i ]		2627981	0					
ANR	2628136	Identifier	shifts		2627981	0					
ANR	2628137	Identifier	i		2627981	1					
ANR	2628138	PostIncDecOperationExpression	i ++	919:24:18880:18882	2627981	2	True				
ANR	2628139	Identifier	i		2627981	0					
ANR	2628140	IncDec	++		2627981	1					
ANR	2628141	CompoundStatement		33:29:585:585	2627981	3					
ANR	2628142	IfStatement	"if ( ! strcmp ( type , shifts [ i ] ) )"		2627981	0					
ANR	2628143	Condition	"! strcmp ( type , shifts [ i ] )"	920:6:18893:18917	2627981	0	True				
ANR	2628144	UnaryOperationExpression	"! strcmp ( type , shifts [ i ] )"		2627981	0					
ANR	2628145	UnaryOperator	!		2627981	0					
ANR	2628146	CallExpression	"strcmp ( type , shifts [ i ] )"		2627981	1					
ANR	2628147	Callee	strcmp		2627981	0					
ANR	2628148	Identifier	strcmp		2627981	0					
ANR	2628149	ArgumentList	type		2627981	1					
ANR	2628150	Argument	type		2627981	0					
ANR	2628151	Identifier	type		2627981	0					
ANR	2628152	Argument	shifts [ i ]		2627981	1					
ANR	2628153	ArrayIndexing	shifts [ i ]		2627981	0					
ANR	2628154	Identifier	shifts		2627981	0					
ANR	2628155	Identifier	i		2627981	1					
ANR	2628156	CompoundStatement		34:33:620:620	2627981	1					
ANR	2628157	ExpressionStatement	shift = true	921:3:18925:18937	2627981	0	True				
ANR	2628158	AssignmentExpression	shift = true		2627981	0		=			
ANR	2628159	Identifier	shift		2627981	0					
ANR	2628160	Identifier	true		2627981	1					
ANR	2628161	BreakStatement	break ;	922:3:18942:18947	2627981	1	True				
ANR	2628162	IfStatement	if ( ! shift )		2627981	16					
ANR	2628163	Condition	! shift	925:5:18961:18966	2627981	0	True				
ANR	2628164	UnaryOperationExpression	! shift		2627981	0					
ANR	2628165	UnaryOperator	!		2627981	0					
ANR	2628166	Identifier	shift		2627981	1					
ANR	2628167	CompoundStatement		39:13:669:669	2627981	1					
ANR	2628168	ExpressionStatement	err = true	926:2:18973:18983	2627981	0	True				
ANR	2628169	AssignmentExpression	err = true		2627981	0		=			
ANR	2628170	Identifier	err		2627981	0					
ANR	2628171	Identifier	true		2627981	1					
ANR	2628172	ExpressionStatement	free ( type )	927:2:18987:18998	2627981	1	True				
ANR	2628173	CallExpression	free ( type )		2627981	0					
ANR	2628174	Callee	free		2627981	0					
ANR	2628175	Identifier	free		2627981	0					
ANR	2628176	ArgumentList	type		2627981	1					
ANR	2628177	Argument	type		2627981	0					
ANR	2628178	Identifier	type		2627981	0					
ANR	2628179	ExpressionStatement	free ( arg )	928:2:19002:19012	2627981	2	True				
ANR	2628180	CallExpression	free ( arg )		2627981	0					
ANR	2628181	Callee	free		2627981	0					
ANR	2628182	Identifier	free		2627981	0					
ANR	2628183	ArgumentList	arg		2627981	1					
ANR	2628184	Argument	arg		2627981	0					
ANR	2628185	Identifier	arg		2627981	0					
ANR	2628186	ReturnStatement	return 0 ;	929:2:19016:19024	2627981	3	True				
ANR	2628187	PrimaryExpression	0		2627981	0					
ANR	2628188	ExpressionStatement	res |= i << 12	931:1:19030:19044	2627981	17	True				
ANR	2628189	AssignmentExpression	res |= i << 12		2627981	0		|=			
ANR	2628190	Identifier	res		2627981	0					
ANR	2628191	ShiftExpression	i << 12		2627981	1		<<			
ANR	2628192	Identifier	i		2627981	0					
ANR	2628193	PrimaryExpression	12		2627981	1					
ANR	2628194	ExpressionStatement	argn = getnum ( arg )	933:1:19050:19069	2627981	18	True				
ANR	2628195	AssignmentExpression	argn = getnum ( arg )		2627981	0		=			
ANR	2628196	Identifier	argn		2627981	0					
ANR	2628197	CallExpression	getnum ( arg )		2627981	1					
ANR	2628198	Callee	getnum		2627981	0					
ANR	2628199	Identifier	getnum		2627981	0					
ANR	2628200	ArgumentList	arg		2627981	1					
ANR	2628201	Argument	arg		2627981	0					
ANR	2628202	Identifier	arg		2627981	0					
ANR	2628203	IfStatement	if ( err || argn > 32 )		2627981	19					
ANR	2628204	Condition	err || argn > 32	934:5:19076:19091	2627981	0	True				
ANR	2628205	OrExpression	err || argn > 32		2627981	0		||			
ANR	2628206	Identifier	err		2627981	0					
ANR	2628207	RelationalExpression	argn > 32		2627981	1		>			
ANR	2628208	Identifier	argn		2627981	0					
ANR	2628209	PrimaryExpression	32		2627981	1					
ANR	2628210	CompoundStatement		48:23:794:794	2627981	1					
ANR	2628211	ExpressionStatement	err = true	935:2:19098:19108	2627981	0	True				
ANR	2628212	AssignmentExpression	err = true		2627981	0		=			
ANR	2628213	Identifier	err		2627981	0					
ANR	2628214	Identifier	true		2627981	1					
ANR	2628215	ExpressionStatement	free ( type )	936:2:19112:19123	2627981	1	True				
ANR	2628216	CallExpression	free ( type )		2627981	0					
ANR	2628217	Callee	free		2627981	0					
ANR	2628218	Identifier	free		2627981	0					
ANR	2628219	ArgumentList	type		2627981	1					
ANR	2628220	Argument	type		2627981	0					
ANR	2628221	Identifier	type		2627981	0					
ANR	2628222	ExpressionStatement	free ( arg )	937:2:19127:19137	2627981	2	True				
ANR	2628223	CallExpression	free ( arg )		2627981	0					
ANR	2628224	Callee	free		2627981	0					
ANR	2628225	Identifier	free		2627981	0					
ANR	2628226	ArgumentList	arg		2627981	1					
ANR	2628227	Argument	arg		2627981	0					
ANR	2628228	Identifier	arg		2627981	0					
ANR	2628229	ReturnStatement	return 0 ;	938:2:19141:19149	2627981	3	True				
ANR	2628230	PrimaryExpression	0		2627981	0					
ANR	2628231	ExpressionStatement	res |= ( ( argn & 0x1c ) << 2 )	940:1:19155:19183	2627981	20	True				
ANR	2628232	AssignmentExpression	res |= ( ( argn & 0x1c ) << 2 )		2627981	0		|=			
ANR	2628233	Identifier	res		2627981	0					
ANR	2628234	ShiftExpression	( argn & 0x1c ) << 2		2627981	1		<<			
ANR	2628235	BitAndExpression	argn & 0x1c		2627981	0		&			
ANR	2628236	Identifier	argn		2627981	0					
ANR	2628237	PrimaryExpression	0x1c		2627981	1					
ANR	2628238	PrimaryExpression	2		2627981	1					
ANR	2628239	ExpressionStatement	res |= ( ( argn & 0x3 ) << 14 )	941:1:19186:19214	2627981	21	True				
ANR	2628240	AssignmentExpression	res |= ( ( argn & 0x3 ) << 14 )		2627981	0		|=			
ANR	2628241	Identifier	res		2627981	0					
ANR	2628242	ShiftExpression	( argn & 0x3 ) << 14		2627981	1		<<			
ANR	2628243	BitAndExpression	argn & 0x3		2627981	0		&			
ANR	2628244	Identifier	argn		2627981	0					
ANR	2628245	PrimaryExpression	0x3		2627981	1					
ANR	2628246	PrimaryExpression	14		2627981	1					
ANR	2628247	ExpressionStatement	free ( type )	943:1:19218:19229	2627981	22	True				
ANR	2628248	CallExpression	free ( type )		2627981	0					
ANR	2628249	Callee	free		2627981	0					
ANR	2628250	Identifier	free		2627981	0					
ANR	2628251	ArgumentList	type		2627981	1					
ANR	2628252	Argument	type		2627981	0					
ANR	2628253	Identifier	type		2627981	0					
ANR	2628254	ExpressionStatement	free ( arg )	944:1:19232:19242	2627981	23	True				
ANR	2628255	CallExpression	free ( arg )		2627981	0					
ANR	2628256	Callee	free		2627981	0					
ANR	2628257	Identifier	free		2627981	0					
ANR	2628258	ArgumentList	arg		2627981	1					
ANR	2628259	Argument	arg		2627981	0					
ANR	2628260	Identifier	arg		2627981	0					
ANR	2628261	ReturnStatement	return res ;	945:1:19245:19255	2627981	24	True				
ANR	2628262	Identifier	res		2627981	0					
ANR	2628263	ReturnType	static ut32		2627981	1					
ANR	2628264	Identifier	thumb_getshift		2627981	2					
ANR	2628265	ParameterList	const char * str		2627981	3					
ANR	2628266	Parameter	const char * str	887:27:18282:18296	2627981	0	True				
ANR	2628267	ParameterType	const char *		2627981	0					
ANR	2628268	Identifier	str		2627981	1					
ANR	2628269	CFGEntryNode	ENTRY		2627981		True				
ANR	2628270	CFGExitNode	EXIT		2627981		True				
ANR	2628271	Symbol	strcmp		2627981						
ANR	2628272	Symbol	res		2627981						
ANR	2628273	Symbol	err		2627981						
ANR	2628274	Symbol	shift		2627981						
ANR	2628275	Symbol	* shifts		2627981						
ANR	2628276	Symbol	false		2627981						
ANR	2628277	Symbol	i		2627981						
ANR	2628278	Symbol	strchr		2627981						
ANR	2628279	Symbol	type		2627981						
ANR	2628280	Symbol	space		2627981						
ANR	2628281	Symbol	str		2627981						
ANR	2628282	Symbol	* i		2627981						
ANR	2628283	Symbol	argn		2627981						
ANR	2628284	Symbol	arg		2627981						
ANR	2628285	Symbol	true		2627981						
ANR	2628286	Symbol	getnum		2627981						
ANR	2628287	Symbol	shifts		2627981						
ANR	2628288	Symbol	* space		2627981						
ANR	2628289	Symbol	strdup		2627981						
ANR	2628290	Function	getshiftmemend	948:0:19260:19535							
ANR	2628291	FunctionDef	getshiftmemend (const char * input)		2628290	0					
ANR	2628292	CompoundStatement		948:46:19306:19535	2628290	0					
ANR	2628293	IdentifierDeclStatement	st32 res ;	949:1:19309:19317	2628290	0	True				
ANR	2628294	IdentifierDecl	res		2628290	0					
ANR	2628295	IdentifierDeclType	st32		2628290	0					
ANR	2628296	Identifier	res		2628290	1					
ANR	2628297	IfStatement	"if ( ! input || ! * input || ! r_str_endswith ( input , ""]"" ) )"		2628290	1					
ANR	2628298	Condition	"! input || ! * input || ! r_str_endswith ( input , ""]"" )"	950:5:19324:19372	2628290	0	True				
ANR	2628299	OrExpression	"! input || ! * input || ! r_str_endswith ( input , ""]"" )"		2628290	0		||			
ANR	2628300	UnaryOperationExpression	! input		2628290	0					
ANR	2628301	UnaryOperator	!		2628290	0					
ANR	2628302	Identifier	input		2628290	1					
ANR	2628303	OrExpression	"! * input || ! r_str_endswith ( input , ""]"" )"		2628290	1		||			
ANR	2628304	UnaryOperationExpression	! * input		2628290	0					
ANR	2628305	UnaryOperator	!		2628290	0					
ANR	2628306	UnaryOperationExpression	* input		2628290	1					
ANR	2628307	UnaryOperator	*		2628290	0					
ANR	2628308	Identifier	input		2628290	1					
ANR	2628309	UnaryOperationExpression	"! r_str_endswith ( input , ""]"" )"		2628290	1					
ANR	2628310	UnaryOperator	!		2628290	0					
ANR	2628311	CallExpression	"r_str_endswith ( input , ""]"" )"		2628290	1					
ANR	2628312	Callee	r_str_endswith		2628290	0					
ANR	2628313	Identifier	r_str_endswith		2628290	0					
ANR	2628314	ArgumentList	input		2628290	1					
ANR	2628315	Argument	input		2628290	0					
ANR	2628316	Identifier	input		2628290	0					
ANR	2628317	Argument	"""]"""		2628290	1					
ANR	2628318	PrimaryExpression	"""]"""		2628290	0					
ANR	2628319	CompoundStatement		3:56:68:68	2628290	1					
ANR	2628320	ReturnStatement	return - 1 ;	951:2:19379:19388	2628290	0	True				
ANR	2628321	UnaryOperationExpression	- 1		2628290	0					
ANR	2628322	UnaryOperator	-		2628290	0					
ANR	2628323	PrimaryExpression	1		2628290	1					
ANR	2628324	IdentifierDeclStatement	"char * temp = r_str_ndup ( input , strlen ( input ) - 1 ) ;"	954:1:19395:19446	2628290	2	True				
ANR	2628325	IdentifierDecl	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		2628290	0					
ANR	2628326	IdentifierDeclType	char *		2628290	0					
ANR	2628327	Identifier	temp		2628290	1					
ANR	2628328	AssignmentExpression	"* temp = r_str_ndup ( input , strlen ( input ) - 1 )"		2628290	2		=			
ANR	2628329	Identifier	temp		2628290	0					
ANR	2628330	CallExpression	"r_str_ndup ( input , strlen ( input ) - 1 )"		2628290	1					
ANR	2628331	Callee	r_str_ndup		2628290	0					
ANR	2628332	Identifier	r_str_ndup		2628290	0					
ANR	2628333	ArgumentList	input		2628290	1					
ANR	2628334	Argument	input		2628290	0					
ANR	2628335	Identifier	input		2628290	0					
ANR	2628336	Argument	strlen ( input ) - 1		2628290	1					
ANR	2628337	AdditiveExpression	strlen ( input ) - 1		2628290	0		-			
ANR	2628338	CallExpression	strlen ( input )		2628290	0					
ANR	2628339	Callee	strlen		2628290	0					
ANR	2628340	Identifier	strlen		2628290	0					
ANR	2628341	ArgumentList	input		2628290	1					
ANR	2628342	Argument	input		2628290	0					
ANR	2628343	Identifier	input		2628290	0					
ANR	2628344	PrimaryExpression	1		2628290	1					
ANR	2628345	IfStatement	if ( ! temp )		2628290	3					
ANR	2628346	Condition	! temp	955:5:19453:19457	2628290	0	True				
ANR	2628347	UnaryOperationExpression	! temp		2628290	0					
ANR	2628348	UnaryOperator	!		2628290	0					
ANR	2628349	Identifier	temp		2628290	1					
ANR	2628350	CompoundStatement		8:12:153:153	2628290	1					
ANR	2628351	ReturnStatement	return - 1 ;	956:2:19464:19473	2628290	0	True				
ANR	2628352	UnaryOperationExpression	- 1		2628290	0					
ANR	2628353	UnaryOperator	-		2628290	0					
ANR	2628354	PrimaryExpression	1		2628290	1					
ANR	2628355	ExpressionStatement	res = thumb_getshift ( temp )	958:1:19479:19506	2628290	4	True				
ANR	2628356	AssignmentExpression	res = thumb_getshift ( temp )		2628290	0		=			
ANR	2628357	Identifier	res		2628290	0					
ANR	2628358	CallExpression	thumb_getshift ( temp )		2628290	1					
ANR	2628359	Callee	thumb_getshift		2628290	0					
ANR	2628360	Identifier	thumb_getshift		2628290	0					
ANR	2628361	ArgumentList	temp		2628290	1					
ANR	2628362	Argument	temp		2628290	0					
ANR	2628363	Identifier	temp		2628290	0					
ANR	2628364	ExpressionStatement	free ( temp )	959:1:19509:19520	2628290	5	True				
ANR	2628365	CallExpression	free ( temp )		2628290	0					
ANR	2628366	Callee	free		2628290	0					
ANR	2628367	Identifier	free		2628290	0					
ANR	2628368	ArgumentList	temp		2628290	1					
ANR	2628369	Argument	temp		2628290	0					
ANR	2628370	Identifier	temp		2628290	0					
ANR	2628371	ReturnStatement	return res ;	960:1:19523:19533	2628290	6	True				
ANR	2628372	Identifier	res		2628290	0					
ANR	2628373	ReturnType	static st32		2628290	1					
ANR	2628374	Identifier	getshiftmemend		2628290	2					
ANR	2628375	ParameterList	const char * input		2628290	3					
ANR	2628376	Parameter	const char * input	948:27:19287:19303	2628290	0	True				
ANR	2628377	ParameterType	const char *		2628290	0					
ANR	2628378	Identifier	input		2628290	1					
ANR	2628379	CFGEntryNode	ENTRY		2628290		True				
ANR	2628380	CFGExitNode	EXIT		2628290		True				
ANR	2628381	Symbol	input		2628290						
ANR	2628382	Symbol	res		2628290						
ANR	2628383	Symbol	strlen		2628290						
ANR	2628384	Symbol	temp		2628290						
ANR	2628385	Symbol	r_str_ndup		2628290						
ANR	2628386	Symbol	thumb_getshift		2628290						
ANR	2628387	Symbol	* input		2628290						
ANR	2628388	Symbol	r_str_endswith		2628290						
ANR	2628389	Function	collect_list	963:0:19538:20237							
ANR	2628390	FunctionDef	collect_list (char * input [ ])		2628389	0					
ANR	2628391	CompoundStatement		963:33:19571:20237	2628389	0					
ANR	2628392	IfStatement	if ( input [ 0 ] == NULL )		2628389	0					
ANR	2628393	Condition	input [ 0 ] == NULL	964:5:19578:19593	2628389	0	True				
ANR	2628394	EqualityExpression	input [ 0 ] == NULL		2628389	0		==			
ANR	2628395	ArrayIndexing	input [ 0 ]		2628389	0					
ANR	2628396	Identifier	input		2628389	0					
ANR	2628397	PrimaryExpression	0		2628389	1					
ANR	2628398	Identifier	NULL		2628389	1					
ANR	2628399	CompoundStatement		2:23:24:24	2628389	1					
ANR	2628400	ReturnStatement	return ;	965:2:19600:19606	2628389	0	True				
ANR	2628401	IdentifierDeclStatement	char * temp = malloc ( 500 ) ;	967:1:19612:19638	2628389	1	True				
ANR	2628402	IdentifierDecl	* temp = malloc ( 500 )		2628389	0					
ANR	2628403	IdentifierDeclType	char *		2628389	0					
ANR	2628404	Identifier	temp		2628389	1					
ANR	2628405	AssignmentExpression	* temp = malloc ( 500 )		2628389	2		=			
ANR	2628406	Identifier	temp		2628389	0					
ANR	2628407	CallExpression	malloc ( 500 )		2628389	1					
ANR	2628408	Callee	malloc		2628389	0					
ANR	2628409	Identifier	malloc		2628389	0					
ANR	2628410	ArgumentList	500		2628389	1					
ANR	2628411	Argument	500		2628389	0					
ANR	2628412	PrimaryExpression	500		2628389	0					
ANR	2628413	IfStatement	if ( ! temp )		2628389	2					
ANR	2628414	Condition	! temp	968:5:19645:19649	2628389	0	True				
ANR	2628415	UnaryOperationExpression	! temp		2628389	0					
ANR	2628416	UnaryOperator	!		2628389	0					
ANR	2628417	Identifier	temp		2628389	1					
ANR	2628418	CompoundStatement		6:12:80:80	2628389	1					
ANR	2628419	ReturnStatement	return ;	969:2:19656:19662	2628389	0	True				
ANR	2628420	ExpressionStatement	temp [ 0 ] = 0	971:1:19668:19679	2628389	3	True				
ANR	2628421	AssignmentExpression	temp [ 0 ] = 0		2628389	0		=			
ANR	2628422	ArrayIndexing	temp [ 0 ]		2628389	0					
ANR	2628423	Identifier	temp		2628389	0					
ANR	2628424	PrimaryExpression	0		2628389	1					
ANR	2628425	PrimaryExpression	0		2628389	1					
ANR	2628426	IdentifierDeclStatement	int i ;	972:1:19682:19687	2628389	4	True				
ANR	2628427	IdentifierDecl	i		2628389	0					
ANR	2628428	IdentifierDeclType	int		2628389	0					
ANR	2628429	Identifier	i		2628389	1					
ANR	2628430	IdentifierDeclStatement	int conc = 0 ;	973:1:19690:19702	2628389	5	True				
ANR	2628431	IdentifierDecl	conc = 0		2628389	0					
ANR	2628432	IdentifierDeclType	int		2628389	0					
ANR	2628433	Identifier	conc		2628389	1					
ANR	2628434	AssignmentExpression	conc = 0		2628389	2		=			
ANR	2628435	Identifier	conc		2628389	0					
ANR	2628436	PrimaryExpression	0		2628389	1					
ANR	2628437	IdentifierDeclStatement	"int start , end = 0 ;"	974:1:19705:19723	2628389	6	True				
ANR	2628438	IdentifierDecl	start		2628389	0					
ANR	2628439	IdentifierDeclType	int		2628389	0					
ANR	2628440	Identifier	start		2628389	1					
ANR	2628441	IdentifierDecl	end = 0		2628389	1					
ANR	2628442	IdentifierDeclType	int		2628389	0					
ANR	2628443	Identifier	end		2628389	1					
ANR	2628444	AssignmentExpression	end = 0		2628389	2		=			
ANR	2628445	Identifier	end		2628389	0					
ANR	2628446	PrimaryExpression	0		2628389	1					
ANR	2628447	IdentifierDeclStatement	int arrsz ;	975:1:19726:19735	2628389	7	True				
ANR	2628448	IdentifierDecl	arrsz		2628389	0					
ANR	2628449	IdentifierDeclType	int		2628389	0					
ANR	2628450	Identifier	arrsz		2628389	1					
ANR	2628451	ForStatement	for ( arrsz = 1 ; input [ arrsz ] != NULL ; arrsz ++ )		2628389	8					
ANR	2628452	ForInit	arrsz = 1 ;	976:6:19743:19752	2628389	0	True				
ANR	2628453	AssignmentExpression	arrsz = 1		2628389	0		=			
ANR	2628454	Identifier	arrsz		2628389	0					
ANR	2628455	PrimaryExpression	1		2628389	1					
ANR	2628456	Condition	input [ arrsz ] != NULL	976:17:19754:19773	2628389	1	True				
ANR	2628457	EqualityExpression	input [ arrsz ] != NULL		2628389	0		!=			
ANR	2628458	ArrayIndexing	input [ arrsz ]		2628389	0					
ANR	2628459	Identifier	input		2628389	0					
ANR	2628460	Identifier	arrsz		2628389	1					
ANR	2628461	Identifier	NULL		2628389	1					
ANR	2628462	PostIncDecOperationExpression	arrsz ++	976:39:19776:19782	2628389	2	True				
ANR	2628463	Identifier	arrsz		2628389	0					
ANR	2628464	IncDec	++		2628389	1					
ANR	2628465	CompoundStatement		14:48:213:213	2628389	3					
ANR	2628466	ExpressionStatement		977:2:19789:19789	2628389	0	True				
ANR	2628467	ForStatement	for ( i = 0 ; input [ i ] ; i ++ )		2628389	9					
ANR	2628468	ForInit	i = 0 ;	980:6:19801:19806	2628389	0	True				
ANR	2628469	AssignmentExpression	i = 0		2628389	0		=			
ANR	2628470	Identifier	i		2628389	0					
ANR	2628471	PrimaryExpression	0		2628389	1					
ANR	2628472	Condition	input [ i ]	980:13:19808:19815	2628389	1	True				
ANR	2628473	ArrayIndexing	input [ i ]		2628389	0					
ANR	2628474	Identifier	input		2628389	0					
ANR	2628475	Identifier	i		2628389	1					
ANR	2628476	PostIncDecOperationExpression	i ++	980:23:19818:19820	2628389	2	True				
ANR	2628477	Identifier	i		2628389	0					
ANR	2628478	IncDec	++		2628389	1					
ANR	2628479	CompoundStatement		18:28:251:251	2628389	3					
ANR	2628480	IfStatement	if ( conc )		2628389	0					
ANR	2628481	Condition	conc	981:6:19831:19834	2628389	0	True				
ANR	2628482	Identifier	conc		2628389	0					
ANR	2628483	CompoundStatement		19:12:265:265	2628389	1					
ANR	2628484	ExpressionStatement	"strcat ( temp , "", "" )"	982:3:19842:19861	2628389	0	True				
ANR	2628485	CallExpression	"strcat ( temp , "", "" )"		2628389	0					
ANR	2628486	Callee	strcat		2628389	0					
ANR	2628487	Identifier	strcat		2628389	0					
ANR	2628488	ArgumentList	temp		2628389	1					
ANR	2628489	Argument	temp		2628389	0					
ANR	2628490	Identifier	temp		2628389	0					
ANR	2628491	Argument	""", """		2628389	1					
ANR	2628492	PrimaryExpression	""", """		2628389	0					
ANR	2628493	ExpressionStatement	"strcat ( temp , input [ i ] )"	983:3:19866:19889	2628389	1	True				
ANR	2628494	CallExpression	"strcat ( temp , input [ i ] )"		2628389	0					
ANR	2628495	Callee	strcat		2628389	0					
ANR	2628496	Identifier	strcat		2628389	0					
ANR	2628497	ArgumentList	temp		2628389	1					
ANR	2628498	Argument	temp		2628389	0					
ANR	2628499	Identifier	temp		2628389	0					
ANR	2628500	Argument	input [ i ]		2628389	1					
ANR	2628501	ArrayIndexing	input [ i ]		2628389	0					
ANR	2628502	Identifier	input		2628389	0					
ANR	2628503	Identifier	i		2628389	1					
ANR	2628504	IfStatement	if ( input [ i ] [ 0 ] == '{' )		2628389	1					
ANR	2628505	Condition	input [ i ] [ 0 ] == '{'	985:6:19901:19918	2628389	0	True				
ANR	2628506	EqualityExpression	input [ i ] [ 0 ] == '{'		2628389	0		==			
ANR	2628507	ArrayIndexing	input [ i ] [ 0 ]		2628389	0					
ANR	2628508	ArrayIndexing	input [ i ]		2628389	0					
ANR	2628509	Identifier	input		2628389	0					
ANR	2628510	Identifier	i		2628389	1					
ANR	2628511	PrimaryExpression	0		2628389	1					
ANR	2628512	PrimaryExpression	'{'		2628389	1					
ANR	2628513	CompoundStatement		23:26:349:349	2628389	1					
ANR	2628514	ExpressionStatement	conc = 1	986:3:19926:19934	2628389	0	True				
ANR	2628515	AssignmentExpression	conc = 1		2628389	0		=			
ANR	2628516	Identifier	conc		2628389	0					
ANR	2628517	PrimaryExpression	1		2628389	1					
ANR	2628518	ExpressionStatement	"strcat ( temp , input [ i ] )"	987:3:19939:19962	2628389	1	True				
ANR	2628519	CallExpression	"strcat ( temp , input [ i ] )"		2628389	0					
ANR	2628520	Callee	strcat		2628389	0					
ANR	2628521	Identifier	strcat		2628389	0					
ANR	2628522	ArgumentList	temp		2628389	1					
ANR	2628523	Argument	temp		2628389	0					
ANR	2628524	Identifier	temp		2628389	0					
ANR	2628525	Argument	input [ i ]		2628389	1					
ANR	2628526	ArrayIndexing	input [ i ]		2628389	0					
ANR	2628527	Identifier	input		2628389	0					
ANR	2628528	Identifier	i		2628389	1					
ANR	2628529	ExpressionStatement	start = i	988:3:19967:19976	2628389	2	True				
ANR	2628530	AssignmentExpression	start = i		2628389	0		=			
ANR	2628531	Identifier	start		2628389	0					
ANR	2628532	Identifier	i		2628389	1					
ANR	2628533	IfStatement	if ( ( conc ) & ( input [ i ] [ strlen ( input [ i ] ) - 1 ] == '}' ) )		2628389	2					
ANR	2628534	Condition	( conc ) & ( input [ i ] [ strlen ( input [ i ] ) - 1 ] == '}' )	990:6:19988:20036	2628389	0	True				
ANR	2628535	CastExpression	( conc ) & ( input [ i ] [ strlen ( input [ i ] ) - 1 ] == '}' )		2628389	0					
ANR	2628536	CastTarget	conc		2628389	0					
ANR	2628537	UnaryOperationExpression	& ( input [ i ] [ strlen ( input [ i ] ) - 1 ] == '}' )		2628389	1					
ANR	2628538	UnaryOperator	&		2628389	0					
ANR	2628539	EqualityExpression	input [ i ] [ strlen ( input [ i ] ) - 1 ] == '}'		2628389	1		==			
ANR	2628540	ArrayIndexing	input [ i ] [ strlen ( input [ i ] ) - 1 ]		2628389	0					
ANR	2628541	ArrayIndexing	input [ i ]		2628389	0					
ANR	2628542	Identifier	input		2628389	0					
ANR	2628543	Identifier	i		2628389	1					
ANR	2628544	AdditiveExpression	strlen ( input [ i ] ) - 1		2628389	1		-			
ANR	2628545	CallExpression	strlen ( input [ i ] )		2628389	0					
ANR	2628546	Callee	strlen		2628389	0					
ANR	2628547	Identifier	strlen		2628389	0					
ANR	2628548	ArgumentList	input [ i ]		2628389	1					
ANR	2628549	Argument	input [ i ]		2628389	0					
ANR	2628550	ArrayIndexing	input [ i ]		2628389	0					
ANR	2628551	Identifier	input		2628389	0					
ANR	2628552	Identifier	i		2628389	1					
ANR	2628553	PrimaryExpression	1		2628389	1					
ANR	2628554	PrimaryExpression	'}'		2628389	1					
ANR	2628555	CompoundStatement		28:57:467:467	2628389	1					
ANR	2628556	ExpressionStatement	conc = 0	991:3:20044:20052	2628389	0	True				
ANR	2628557	AssignmentExpression	conc = 0		2628389	0		=			
ANR	2628558	Identifier	conc		2628389	0					
ANR	2628559	PrimaryExpression	0		2628389	1					
ANR	2628560	ExpressionStatement	end = i	992:3:20057:20064	2628389	1	True				
ANR	2628561	AssignmentExpression	end = i		2628389	0		=			
ANR	2628562	Identifier	end		2628389	0					
ANR	2628563	Identifier	i		2628389	1					
ANR	2628564	IfStatement	if ( end == 0 )		2628389	10					
ANR	2628565	Condition	end == 0	995:5:20078:20085	2628389	0	True				
ANR	2628566	EqualityExpression	end == 0		2628389	0		==			
ANR	2628567	Identifier	end		2628389	0					
ANR	2628568	PrimaryExpression	0		2628389	1					
ANR	2628569	CompoundStatement		33:15:516:516	2628389	1					
ANR	2628570	ExpressionStatement	free ( temp )	996:2:20092:20103	2628389	0	True				
ANR	2628571	CallExpression	free ( temp )		2628389	0					
ANR	2628572	Callee	free		2628389	0					
ANR	2628573	Identifier	free		2628389	0					
ANR	2628574	ArgumentList	temp		2628389	1					
ANR	2628575	Argument	temp		2628389	0					
ANR	2628576	Identifier	temp		2628389	0					
ANR	2628577	ReturnStatement	return ;	997:2:20107:20113	2628389	1	True				
ANR	2628578	ExpressionStatement	input [ start ] = temp	999:1:20119:20138	2628389	11	True				
ANR	2628579	AssignmentExpression	input [ start ] = temp		2628389	0		=			
ANR	2628580	ArrayIndexing	input [ start ]		2628389	0					
ANR	2628581	Identifier	input		2628389	0					
ANR	2628582	Identifier	start		2628389	1					
ANR	2628583	Identifier	temp		2628389	1					
ANR	2628584	ForStatement	for ( i = start + 1 ; i < arrsz ; i ++ )		2628389	12					
ANR	2628585	ForInit	i = start + 1 ;	1000:6:20146:20159	2628389	0	True				
ANR	2628586	AssignmentExpression	i = start + 1		2628389	0		=			
ANR	2628587	Identifier	i		2628389	0					
ANR	2628588	AdditiveExpression	start + 1		2628389	1		+			
ANR	2628589	Identifier	start		2628389	0					
ANR	2628590	PrimaryExpression	1		2628389	1					
ANR	2628591	Condition	i < arrsz	1000:21:20161:20169	2628389	1	True				
ANR	2628592	RelationalExpression	i < arrsz		2628389	0		<			
ANR	2628593	Identifier	i		2628389	0					
ANR	2628594	Identifier	arrsz		2628389	1					
ANR	2628595	PostIncDecOperationExpression	i ++	1000:32:20172:20174	2628389	2	True				
ANR	2628596	Identifier	i		2628389	0					
ANR	2628597	IncDec	++		2628389	1					
ANR	2628598	CompoundStatement		38:37:605:605	2628389	3					
ANR	2628599	ExpressionStatement	input [ i ] = input [ ( end - start ) + i ]	1001:2:20181:20214	2628389	0	True				
ANR	2628600	AssignmentExpression	input [ i ] = input [ ( end - start ) + i ]		2628389	0		=			
ANR	2628601	ArrayIndexing	input [ i ]		2628389	0					
ANR	2628602	Identifier	input		2628389	0					
ANR	2628603	Identifier	i		2628389	1					
ANR	2628604	ArrayIndexing	input [ ( end - start ) + i ]		2628389	1					
ANR	2628605	Identifier	input		2628389	0					
ANR	2628606	AdditiveExpression	( end - start ) + i		2628389	1		+			
ANR	2628607	AdditiveExpression	end - start		2628389	0		-			
ANR	2628608	Identifier	end		2628389	0					
ANR	2628609	Identifier	start		2628389	1					
ANR	2628610	Identifier	i		2628389	1					
ANR	2628611	ExpressionStatement	input [ i ] = NULL	1003:1:20220:20235	2628389	13	True				
ANR	2628612	AssignmentExpression	input [ i ] = NULL		2628389	0		=			
ANR	2628613	ArrayIndexing	input [ i ]		2628389	0					
ANR	2628614	Identifier	input		2628389	0					
ANR	2628615	Identifier	i		2628389	1					
ANR	2628616	Identifier	NULL		2628389	1					
ANR	2628617	ReturnType	void		2628389	1					
ANR	2628618	Identifier	collect_list		2628389	2					
ANR	2628619	ParameterList	char * input [ ]		2628389	3					
ANR	2628620	Parameter	char * input [ ]	963:18:19556:19568	2628389	0	True				
ANR	2628621	ParameterType	char * [ ]		2628389	0					
ANR	2628622	Identifier	input		2628389	1					
ANR	2628623	CFGEntryNode	ENTRY		2628389		True				
ANR	2628624	CFGExitNode	EXIT		2628389		True				
ANR	2628625	Symbol	malloc		2628389						
ANR	2628626	Symbol	temp		2628389						
ANR	2628627	Symbol	* * i		2628389						
ANR	2628628	Symbol	NULL		2628389						
ANR	2628629	Symbol	arrsz		2628389						
ANR	2628630	Symbol	* * input		2628389						
ANR	2628631	Symbol	* start		2628389						
ANR	2628632	Symbol	* input		2628389						
ANR	2628633	Symbol	start		2628389						
ANR	2628634	Symbol	i		2628389						
ANR	2628635	Symbol	* temp		2628389						
ANR	2628636	Symbol	conc		2628389						
ANR	2628637	Symbol	input		2628389						
ANR	2628638	Symbol	strlen		2628389						
ANR	2628639	Symbol	* i		2628389						
ANR	2628640	Symbol	end		2628389						
ANR	2628641	Symbol	* end		2628389						
ANR	2628642	Symbol	* arrsz		2628389						
ANR	2628643	Function	thumb_selector	1006:0:20240:21618							
ANR	2628644	FunctionDef	thumb_selector (char * args [ ])		2628643	0					
ANR	2628645	CompoundStatement		1006:41:20281:21618	2628643	0					
ANR	2628646	ExpressionStatement	collect_list ( args )	1007:1:20284:20302	2628643	0	True				
ANR	2628647	CallExpression	collect_list ( args )		2628643	0					
ANR	2628648	Callee	collect_list		2628643	0					
ANR	2628649	Identifier	collect_list		2628643	0					
ANR	2628650	ArgumentList	args		2628643	1					
ANR	2628651	Argument	args		2628643	0					
ANR	2628652	Identifier	args		2628643	0					
ANR	2628653	IdentifierDeclStatement	ut64 res = 0 ;	1008:1:20305:20317	2628643	1	True				
ANR	2628654	IdentifierDecl	res = 0		2628643	0					
ANR	2628655	IdentifierDeclType	ut64		2628643	0					
ANR	2628656	Identifier	res		2628643	1					
ANR	2628657	AssignmentExpression	res = 0		2628643	2		=			
ANR	2628658	Identifier	res		2628643	0					
ANR	2628659	PrimaryExpression	0		2628643	1					
ANR	2628660	IdentifierDeclStatement	ut8 i ;	1009:1:20320:20325	2628643	2	True				
ANR	2628661	IdentifierDecl	i		2628643	0					
ANR	2628662	IdentifierDeclType	ut8		2628643	0					
ANR	2628663	Identifier	i		2628643	1					
ANR	2628664	ForStatement	for ( i = 0 ; i < 15 ; i ++ )		2628643	3					
ANR	2628665	ForInit	i = 0 ;	1010:6:20333:20338	2628643	0	True				
ANR	2628666	AssignmentExpression	i = 0		2628643	0		=			
ANR	2628667	Identifier	i		2628643	0					
ANR	2628668	PrimaryExpression	0		2628643	1					
ANR	2628669	Condition	i < 15	1010:13:20340:20345	2628643	1	True				
ANR	2628670	RelationalExpression	i < 15		2628643	0		<			
ANR	2628671	Identifier	i		2628643	0					
ANR	2628672	PrimaryExpression	15		2628643	1					
ANR	2628673	PostIncDecOperationExpression	i ++	1010:21:20348:20350	2628643	2	True				
ANR	2628674	Identifier	i		2628643	0					
ANR	2628675	IncDec	++		2628643	1					
ANR	2628676	CompoundStatement		5:26:71:71	2628643	3					
ANR	2628677	IfStatement	if ( args [ i ] == NULL )		2628643	0					
ANR	2628678	Condition	args [ i ] == NULL	1011:6:20361:20375	2628643	0	True				
ANR	2628679	EqualityExpression	args [ i ] == NULL		2628643	0		==			
ANR	2628680	ArrayIndexing	args [ i ]		2628643	0					
ANR	2628681	Identifier	args		2628643	0					
ANR	2628682	Identifier	i		2628643	1					
ANR	2628683	Identifier	NULL		2628643	1					
ANR	2628684	CompoundStatement		6:23:96:96	2628643	1					
ANR	2628685	BreakStatement	break ;	1012:3:20383:20388	2628643	0	True				
ANR	2628686	IfStatement	if ( getreg ( args [ i ] ) != - 1 )		2628643	1					
ANR	2628687	Condition	getreg ( args [ i ] ) != - 1	1014:6:20400:20421	2628643	0	True				
ANR	2628688	EqualityExpression	getreg ( args [ i ] ) != - 1		2628643	0		!=			
ANR	2628689	CallExpression	getreg ( args [ i ] )		2628643	0					
ANR	2628690	Callee	getreg		2628643	0					
ANR	2628691	Identifier	getreg		2628643	0					
ANR	2628692	ArgumentList	args [ i ]		2628643	1					
ANR	2628693	Argument	args [ i ]		2628643	0					
ANR	2628694	ArrayIndexing	args [ i ]		2628643	0					
ANR	2628695	Identifier	args		2628643	0					
ANR	2628696	Identifier	i		2628643	1					
ANR	2628697	UnaryOperationExpression	- 1		2628643	1					
ANR	2628698	UnaryOperator	-		2628643	0					
ANR	2628699	PrimaryExpression	1		2628643	1					
ANR	2628700	CompoundStatement		9:30:142:142	2628643	1					
ANR	2628701	ExpressionStatement	res |= 1 << ( i * 4 )	1015:3:20429:20446	2628643	0	True				
ANR	2628702	AssignmentExpression	res |= 1 << ( i * 4 )		2628643	0		|=			
ANR	2628703	Identifier	res		2628643	0					
ANR	2628704	ShiftExpression	1 << ( i * 4 )		2628643	1		<<			
ANR	2628705	PrimaryExpression	1		2628643	0					
ANR	2628706	MultiplicativeExpression	i * 4		2628643	1		*			
ANR	2628707	Identifier	i		2628643	0					
ANR	2628708	PrimaryExpression	4		2628643	1					
ANR	2628709	ContinueStatement	continue ;	1016:3:20451:20459	2628643	1	True				
ANR	2628710	ExpressionStatement	err = false	1018:2:20467:20478	2628643	2	True				
ANR	2628711	AssignmentExpression	err = false		2628643	0		=			
ANR	2628712	Identifier	err		2628643	0					
ANR	2628713	Identifier	false		2628643	1					
ANR	2628714	ExpressionStatement	getnum ( args [ i ] )	1019:2:20482:20498	2628643	3	True				
ANR	2628715	CallExpression	getnum ( args [ i ] )		2628643	0					
ANR	2628716	Callee	getnum		2628643	0					
ANR	2628717	Identifier	getnum		2628643	0					
ANR	2628718	ArgumentList	args [ i ]		2628643	1					
ANR	2628719	Argument	args [ i ]		2628643	0					
ANR	2628720	ArrayIndexing	args [ i ]		2628643	0					
ANR	2628721	Identifier	args		2628643	0					
ANR	2628722	Identifier	i		2628643	1					
ANR	2628723	IfStatement	if ( ! err )		2628643	4					
ANR	2628724	Condition	! err	1020:6:20506:20509	2628643	0	True				
ANR	2628725	UnaryOperationExpression	! err		2628643	0					
ANR	2628726	UnaryOperator	!		2628643	0					
ANR	2628727	Identifier	err		2628643	1					
ANR	2628728	CompoundStatement		15:12:230:230	2628643	1					
ANR	2628729	ExpressionStatement	res |= 2 << ( i * 4 )	1021:3:20517:20534	2628643	0	True				
ANR	2628730	AssignmentExpression	res |= 2 << ( i * 4 )		2628643	0		|=			
ANR	2628731	Identifier	res		2628643	0					
ANR	2628732	ShiftExpression	2 << ( i * 4 )		2628643	1		<<			
ANR	2628733	PrimaryExpression	2		2628643	0					
ANR	2628734	MultiplicativeExpression	i * 4		2628643	1		*			
ANR	2628735	Identifier	i		2628643	0					
ANR	2628736	PrimaryExpression	4		2628643	1					
ANR	2628737	ContinueStatement	continue ;	1022:3:20539:20547	2628643	1	True				
ANR	2628738	ExpressionStatement	err = false	1024:2:20555:20566	2628643	5	True				
ANR	2628739	AssignmentExpression	err = false		2628643	0		=			
ANR	2628740	Identifier	err		2628643	0					
ANR	2628741	Identifier	false		2628643	1					
ANR	2628742	ExpressionStatement	thumb_getshift ( args [ i ] )	1025:2:20574:20598	2628643	6	True				
ANR	2628743	CallExpression	thumb_getshift ( args [ i ] )		2628643	0					
ANR	2628744	Callee	thumb_getshift		2628643	0					
ANR	2628745	Identifier	thumb_getshift		2628643	0					
ANR	2628746	ArgumentList	args [ i ]		2628643	1					
ANR	2628747	Argument	args [ i ]		2628643	0					
ANR	2628748	ArrayIndexing	args [ i ]		2628643	0					
ANR	2628749	Identifier	args		2628643	0					
ANR	2628750	Identifier	i		2628643	1					
ANR	2628751	IfStatement	if ( ! err )		2628643	7					
ANR	2628752	Condition	! err	1026:6:20606:20609	2628643	0	True				
ANR	2628753	UnaryOperationExpression	! err		2628643	0					
ANR	2628754	UnaryOperator	!		2628643	0					
ANR	2628755	Identifier	err		2628643	1					
ANR	2628756	CompoundStatement		21:12:330:330	2628643	1					
ANR	2628757	ExpressionStatement	res |= 3 << ( i * 4 )	1027:3:20617:20634	2628643	0	True				
ANR	2628758	AssignmentExpression	res |= 3 << ( i * 4 )		2628643	0		|=			
ANR	2628759	Identifier	res		2628643	0					
ANR	2628760	ShiftExpression	3 << ( i * 4 )		2628643	1		<<			
ANR	2628761	PrimaryExpression	3		2628643	0					
ANR	2628762	MultiplicativeExpression	i * 4		2628643	1		*			
ANR	2628763	Identifier	i		2628643	0					
ANR	2628764	PrimaryExpression	4		2628643	1					
ANR	2628765	ContinueStatement	continue ;	1028:3:20639:20647	2628643	1	True				
ANR	2628766	IfStatement	if ( getcoproc ( args [ i ] ) != - 1 )		2628643	8					
ANR	2628767	Condition	getcoproc ( args [ i ] ) != - 1	1030:6:20659:20683	2628643	0	True				
ANR	2628768	EqualityExpression	getcoproc ( args [ i ] ) != - 1		2628643	0		!=			
ANR	2628769	CallExpression	getcoproc ( args [ i ] )		2628643	0					
ANR	2628770	Callee	getcoproc		2628643	0					
ANR	2628771	Identifier	getcoproc		2628643	0					
ANR	2628772	ArgumentList	args [ i ]		2628643	1					
ANR	2628773	Argument	args [ i ]		2628643	0					
ANR	2628774	ArrayIndexing	args [ i ]		2628643	0					
ANR	2628775	Identifier	args		2628643	0					
ANR	2628776	Identifier	i		2628643	1					
ANR	2628777	UnaryOperationExpression	- 1		2628643	1					
ANR	2628778	UnaryOperator	-		2628643	0					
ANR	2628779	PrimaryExpression	1		2628643	1					
ANR	2628780	CompoundStatement		25:33:404:404	2628643	1					
ANR	2628781	ExpressionStatement	res |= 4 << ( i * 4 )	1031:3:20691:20708	2628643	0	True				
ANR	2628782	AssignmentExpression	res |= 4 << ( i * 4 )		2628643	0		|=			
ANR	2628783	Identifier	res		2628643	0					
ANR	2628784	ShiftExpression	4 << ( i * 4 )		2628643	1		<<			
ANR	2628785	PrimaryExpression	4		2628643	0					
ANR	2628786	MultiplicativeExpression	i * 4		2628643	1		*			
ANR	2628787	Identifier	i		2628643	0					
ANR	2628788	PrimaryExpression	4		2628643	1					
ANR	2628789	ContinueStatement	continue ;	1032:3:20713:20721	2628643	1	True				
ANR	2628790	IfStatement	if ( getcoprocreg ( args [ i ] ) != - 1 )		2628643	9					
ANR	2628791	Condition	getcoprocreg ( args [ i ] ) != - 1	1034:6:20733:20760	2628643	0	True				
ANR	2628792	EqualityExpression	getcoprocreg ( args [ i ] ) != - 1		2628643	0		!=			
ANR	2628793	CallExpression	getcoprocreg ( args [ i ] )		2628643	0					
ANR	2628794	Callee	getcoprocreg		2628643	0					
ANR	2628795	Identifier	getcoprocreg		2628643	0					
ANR	2628796	ArgumentList	args [ i ]		2628643	1					
ANR	2628797	Argument	args [ i ]		2628643	0					
ANR	2628798	ArrayIndexing	args [ i ]		2628643	0					
ANR	2628799	Identifier	args		2628643	0					
ANR	2628800	Identifier	i		2628643	1					
ANR	2628801	UnaryOperationExpression	- 1		2628643	1					
ANR	2628802	UnaryOperator	-		2628643	0					
ANR	2628803	PrimaryExpression	1		2628643	1					
ANR	2628804	CompoundStatement		29:36:481:481	2628643	1					
ANR	2628805	ExpressionStatement	res |= 5 << ( i * 4 )	1035:3:20768:20785	2628643	0	True				
ANR	2628806	AssignmentExpression	res |= 5 << ( i * 4 )		2628643	0		|=			
ANR	2628807	Identifier	res		2628643	0					
ANR	2628808	ShiftExpression	5 << ( i * 4 )		2628643	1		<<			
ANR	2628809	PrimaryExpression	5		2628643	0					
ANR	2628810	MultiplicativeExpression	i * 4		2628643	1		*			
ANR	2628811	Identifier	i		2628643	0					
ANR	2628812	PrimaryExpression	4		2628643	1					
ANR	2628813	ContinueStatement	continue ;	1036:3:20790:20798	2628643	1	True				
ANR	2628814	IfStatement	if ( getregmemstart ( args [ i ] ) != - 1 )		2628643	10					
ANR	2628815	Condition	getregmemstart ( args [ i ] ) != - 1	1038:6:20810:20839	2628643	0	True				
ANR	2628816	EqualityExpression	getregmemstart ( args [ i ] ) != - 1		2628643	0		!=			
ANR	2628817	CallExpression	getregmemstart ( args [ i ] )		2628643	0					
ANR	2628818	Callee	getregmemstart		2628643	0					
ANR	2628819	Identifier	getregmemstart		2628643	0					
ANR	2628820	ArgumentList	args [ i ]		2628643	1					
ANR	2628821	Argument	args [ i ]		2628643	0					
ANR	2628822	ArrayIndexing	args [ i ]		2628643	0					
ANR	2628823	Identifier	args		2628643	0					
ANR	2628824	Identifier	i		2628643	1					
ANR	2628825	UnaryOperationExpression	- 1		2628643	1					
ANR	2628826	UnaryOperator	-		2628643	0					
ANR	2628827	PrimaryExpression	1		2628643	1					
ANR	2628828	CompoundStatement		33:38:560:560	2628643	1					
ANR	2628829	ExpressionStatement	res |= 6 << ( i * 4 )	1039:3:20847:20864	2628643	0	True				
ANR	2628830	AssignmentExpression	res |= 6 << ( i * 4 )		2628643	0		|=			
ANR	2628831	Identifier	res		2628643	0					
ANR	2628832	ShiftExpression	6 << ( i * 4 )		2628643	1		<<			
ANR	2628833	PrimaryExpression	6		2628643	0					
ANR	2628834	MultiplicativeExpression	i * 4		2628643	1		*			
ANR	2628835	Identifier	i		2628643	0					
ANR	2628836	PrimaryExpression	4		2628643	1					
ANR	2628837	ContinueStatement	continue ;	1040:3:20869:20877	2628643	1	True				
ANR	2628838	IfStatement	if ( getregmemstartend ( args [ i ] ) != - 1 )		2628643	11					
ANR	2628839	Condition	getregmemstartend ( args [ i ] ) != - 1	1042:6:20889:20921	2628643	0	True				
ANR	2628840	EqualityExpression	getregmemstartend ( args [ i ] ) != - 1		2628643	0		!=			
ANR	2628841	CallExpression	getregmemstartend ( args [ i ] )		2628643	0					
ANR	2628842	Callee	getregmemstartend		2628643	0					
ANR	2628843	Identifier	getregmemstartend		2628643	0					
ANR	2628844	ArgumentList	args [ i ]		2628643	1					
ANR	2628845	Argument	args [ i ]		2628643	0					
ANR	2628846	ArrayIndexing	args [ i ]		2628643	0					
ANR	2628847	Identifier	args		2628643	0					
ANR	2628848	Identifier	i		2628643	1					
ANR	2628849	UnaryOperationExpression	- 1		2628643	1					
ANR	2628850	UnaryOperator	-		2628643	0					
ANR	2628851	PrimaryExpression	1		2628643	1					
ANR	2628852	CompoundStatement		37:41:642:642	2628643	1					
ANR	2628853	ExpressionStatement	res |= 7 << ( i * 4 )	1043:3:20929:20946	2628643	0	True				
ANR	2628854	AssignmentExpression	res |= 7 << ( i * 4 )		2628643	0		|=			
ANR	2628855	Identifier	res		2628643	0					
ANR	2628856	ShiftExpression	7 << ( i * 4 )		2628643	1		<<			
ANR	2628857	PrimaryExpression	7		2628643	0					
ANR	2628858	MultiplicativeExpression	i * 4		2628643	1		*			
ANR	2628859	Identifier	i		2628643	0					
ANR	2628860	PrimaryExpression	4		2628643	1					
ANR	2628861	ContinueStatement	continue ;	1044:3:20951:20959	2628643	1	True				
ANR	2628862	ExpressionStatement	err = false	1046:2:20967:20978	2628643	12	True				
ANR	2628863	AssignmentExpression	err = false		2628643	0		=			
ANR	2628864	Identifier	err		2628643	0					
ANR	2628865	Identifier	false		2628643	1					
ANR	2628866	ExpressionStatement	getnummemend ( args [ i ] )	1047:2:20982:21003	2628643	13	True				
ANR	2628867	CallExpression	getnummemend ( args [ i ] )		2628643	0					
ANR	2628868	Callee	getnummemend		2628643	0					
ANR	2628869	Identifier	getnummemend		2628643	0					
ANR	2628870	ArgumentList	args [ i ]		2628643	1					
ANR	2628871	Argument	args [ i ]		2628643	0					
ANR	2628872	ArrayIndexing	args [ i ]		2628643	0					
ANR	2628873	Identifier	args		2628643	0					
ANR	2628874	Identifier	i		2628643	1					
ANR	2628875	IfStatement	if ( ! err )		2628643	14					
ANR	2628876	Condition	! err	1048:6:21011:21014	2628643	0	True				
ANR	2628877	UnaryOperationExpression	! err		2628643	0					
ANR	2628878	UnaryOperator	!		2628643	0					
ANR	2628879	Identifier	err		2628643	1					
ANR	2628880	CompoundStatement		43:12:735:735	2628643	1					
ANR	2628881	ExpressionStatement	res |= 8 << ( i * 4 )	1049:3:21022:21039	2628643	0	True				
ANR	2628882	AssignmentExpression	res |= 8 << ( i * 4 )		2628643	0		|=			
ANR	2628883	Identifier	res		2628643	0					
ANR	2628884	ShiftExpression	8 << ( i * 4 )		2628643	1		<<			
ANR	2628885	PrimaryExpression	8		2628643	0					
ANR	2628886	MultiplicativeExpression	i * 4		2628643	1		*			
ANR	2628887	Identifier	i		2628643	0					
ANR	2628888	PrimaryExpression	4		2628643	1					
ANR	2628889	ContinueStatement	continue ;	1050:3:21044:21052	2628643	1	True				
ANR	2628890	ExpressionStatement	err = false	1052:2:21060:21071	2628643	15	True				
ANR	2628891	AssignmentExpression	err = false		2628643	0		=			
ANR	2628892	Identifier	err		2628643	0					
ANR	2628893	Identifier	false		2628643	1					
ANR	2628894	ExpressionStatement	getnummemendbang ( args [ i ] )	1053:2:21075:21100	2628643	16	True				
ANR	2628895	CallExpression	getnummemendbang ( args [ i ] )		2628643	0					
ANR	2628896	Callee	getnummemendbang		2628643	0					
ANR	2628897	Identifier	getnummemendbang		2628643	0					
ANR	2628898	ArgumentList	args [ i ]		2628643	1					
ANR	2628899	Argument	args [ i ]		2628643	0					
ANR	2628900	ArrayIndexing	args [ i ]		2628643	0					
ANR	2628901	Identifier	args		2628643	0					
ANR	2628902	Identifier	i		2628643	1					
ANR	2628903	IfStatement	if ( ! err )		2628643	17					
ANR	2628904	Condition	! err	1054:6:21108:21111	2628643	0	True				
ANR	2628905	UnaryOperationExpression	! err		2628643	0					
ANR	2628906	UnaryOperator	!		2628643	0					
ANR	2628907	Identifier	err		2628643	1					
ANR	2628908	CompoundStatement		49:12:832:832	2628643	1					
ANR	2628909	ExpressionStatement	res |= 9 << ( i * 4 )	1055:3:21119:21136	2628643	0	True				
ANR	2628910	AssignmentExpression	res |= 9 << ( i * 4 )		2628643	0		|=			
ANR	2628911	Identifier	res		2628643	0					
ANR	2628912	ShiftExpression	9 << ( i * 4 )		2628643	1		<<			
ANR	2628913	PrimaryExpression	9		2628643	0					
ANR	2628914	MultiplicativeExpression	i * 4		2628643	1		*			
ANR	2628915	Identifier	i		2628643	0					
ANR	2628916	PrimaryExpression	4		2628643	1					
ANR	2628917	ContinueStatement	continue ;	1056:3:21141:21149	2628643	1	True				
ANR	2628918	IfStatement	if ( getregmembang ( args [ i ] ) != - 1 )		2628643	18					
ANR	2628919	Condition	getregmembang ( args [ i ] ) != - 1	1058:6:21161:21189	2628643	0	True				
ANR	2628920	EqualityExpression	getregmembang ( args [ i ] ) != - 1		2628643	0		!=			
ANR	2628921	CallExpression	getregmembang ( args [ i ] )		2628643	0					
ANR	2628922	Callee	getregmembang		2628643	0					
ANR	2628923	Identifier	getregmembang		2628643	0					
ANR	2628924	ArgumentList	args [ i ]		2628643	1					
ANR	2628925	Argument	args [ i ]		2628643	0					
ANR	2628926	ArrayIndexing	args [ i ]		2628643	0					
ANR	2628927	Identifier	args		2628643	0					
ANR	2628928	Identifier	i		2628643	1					
ANR	2628929	UnaryOperationExpression	- 1		2628643	1					
ANR	2628930	UnaryOperator	-		2628643	0					
ANR	2628931	PrimaryExpression	1		2628643	1					
ANR	2628932	CompoundStatement		53:37:910:910	2628643	1					
ANR	2628933	ExpressionStatement	res |= 0xa << ( i * 4 )	1059:3:21197:21216	2628643	0	True				
ANR	2628934	AssignmentExpression	res |= 0xa << ( i * 4 )		2628643	0		|=			
ANR	2628935	Identifier	res		2628643	0					
ANR	2628936	ShiftExpression	0xa << ( i * 4 )		2628643	1		<<			
ANR	2628937	PrimaryExpression	0xa		2628643	0					
ANR	2628938	MultiplicativeExpression	i * 4		2628643	1		*			
ANR	2628939	Identifier	i		2628643	0					
ANR	2628940	PrimaryExpression	4		2628643	1					
ANR	2628941	ContinueStatement	continue ;	1060:3:21221:21229	2628643	1	True				
ANR	2628942	IfStatement	if ( getreglist ( args [ i ] ) != - 1 )		2628643	19					
ANR	2628943	Condition	getreglist ( args [ i ] ) != - 1	1062:6:21241:21266	2628643	0	True				
ANR	2628944	EqualityExpression	getreglist ( args [ i ] ) != - 1		2628643	0		!=			
ANR	2628945	CallExpression	getreglist ( args [ i ] )		2628643	0					
ANR	2628946	Callee	getreglist		2628643	0					
ANR	2628947	Identifier	getreglist		2628643	0					
ANR	2628948	ArgumentList	args [ i ]		2628643	1					
ANR	2628949	Argument	args [ i ]		2628643	0					
ANR	2628950	ArrayIndexing	args [ i ]		2628643	0					
ANR	2628951	Identifier	args		2628643	0					
ANR	2628952	Identifier	i		2628643	1					
ANR	2628953	UnaryOperationExpression	- 1		2628643	1					
ANR	2628954	UnaryOperator	-		2628643	0					
ANR	2628955	PrimaryExpression	1		2628643	1					
ANR	2628956	CompoundStatement		57:34:987:987	2628643	1					
ANR	2628957	ExpressionStatement	res |= 0xb << ( i * 4 )	1063:3:21274:21293	2628643	0	True				
ANR	2628958	AssignmentExpression	res |= 0xb << ( i * 4 )		2628643	0		|=			
ANR	2628959	Identifier	res		2628643	0					
ANR	2628960	ShiftExpression	0xb << ( i * 4 )		2628643	1		<<			
ANR	2628961	PrimaryExpression	0xb		2628643	0					
ANR	2628962	MultiplicativeExpression	i * 4		2628643	1		*			
ANR	2628963	Identifier	i		2628643	0					
ANR	2628964	PrimaryExpression	4		2628643	1					
ANR	2628965	ContinueStatement	continue ;	1064:3:21298:21306	2628643	1	True				
ANR	2628966	IfStatement	if ( getregmemend ( args [ i ] ) != - 1 )		2628643	20					
ANR	2628967	Condition	getregmemend ( args [ i ] ) != - 1	1066:6:21318:21345	2628643	0	True				
ANR	2628968	EqualityExpression	getregmemend ( args [ i ] ) != - 1		2628643	0		!=			
ANR	2628969	CallExpression	getregmemend ( args [ i ] )		2628643	0					
ANR	2628970	Callee	getregmemend		2628643	0					
ANR	2628971	Identifier	getregmemend		2628643	0					
ANR	2628972	ArgumentList	args [ i ]		2628643	1					
ANR	2628973	Argument	args [ i ]		2628643	0					
ANR	2628974	ArrayIndexing	args [ i ]		2628643	0					
ANR	2628975	Identifier	args		2628643	0					
ANR	2628976	Identifier	i		2628643	1					
ANR	2628977	UnaryOperationExpression	- 1		2628643	1					
ANR	2628978	UnaryOperator	-		2628643	0					
ANR	2628979	PrimaryExpression	1		2628643	1					
ANR	2628980	CompoundStatement		61:36:1066:1066	2628643	1					
ANR	2628981	ExpressionStatement	res |= 0xc << ( i * 4 )	1067:3:21353:21372	2628643	0	True				
ANR	2628982	AssignmentExpression	res |= 0xc << ( i * 4 )		2628643	0		|=			
ANR	2628983	Identifier	res		2628643	0					
ANR	2628984	ShiftExpression	0xc << ( i * 4 )		2628643	1		<<			
ANR	2628985	PrimaryExpression	0xc		2628643	0					
ANR	2628986	MultiplicativeExpression	i * 4		2628643	1		*			
ANR	2628987	Identifier	i		2628643	0					
ANR	2628988	PrimaryExpression	4		2628643	1					
ANR	2628989	ContinueStatement	continue ;	1068:3:21377:21385	2628643	1	True				
ANR	2628990	IfStatement	if ( getshiftmemend ( args [ i ] ) != - 1 )		2628643	21					
ANR	2628991	Condition	getshiftmemend ( args [ i ] ) != - 1	1070:6:21397:21426	2628643	0	True				
ANR	2628992	EqualityExpression	getshiftmemend ( args [ i ] ) != - 1		2628643	0		!=			
ANR	2628993	CallExpression	getshiftmemend ( args [ i ] )		2628643	0					
ANR	2628994	Callee	getshiftmemend		2628643	0					
ANR	2628995	Identifier	getshiftmemend		2628643	0					
ANR	2628996	ArgumentList	args [ i ]		2628643	1					
ANR	2628997	Argument	args [ i ]		2628643	0					
ANR	2628998	ArrayIndexing	args [ i ]		2628643	0					
ANR	2628999	Identifier	args		2628643	0					
ANR	2629000	Identifier	i		2628643	1					
ANR	2629001	UnaryOperationExpression	- 1		2628643	1					
ANR	2629002	UnaryOperator	-		2628643	0					
ANR	2629003	PrimaryExpression	1		2628643	1					
ANR	2629004	CompoundStatement		65:38:1147:1147	2628643	1					
ANR	2629005	ExpressionStatement	res |= 0xd << ( i * 4 )	1071:3:21434:21453	2628643	0	True				
ANR	2629006	AssignmentExpression	res |= 0xd << ( i * 4 )		2628643	0		|=			
ANR	2629007	Identifier	res		2628643	0					
ANR	2629008	ShiftExpression	0xd << ( i * 4 )		2628643	1		<<			
ANR	2629009	PrimaryExpression	0xd		2628643	0					
ANR	2629010	MultiplicativeExpression	i * 4		2628643	1		*			
ANR	2629011	Identifier	i		2628643	0					
ANR	2629012	PrimaryExpression	4		2628643	1					
ANR	2629013	ContinueStatement	continue ;	1072:3:21458:21466	2628643	1	True				
ANR	2629014	ExpressionStatement	err = false	1074:2:21474:21485	2628643	22	True				
ANR	2629015	AssignmentExpression	err = false		2628643	0		=			
ANR	2629016	Identifier	err		2628643	0					
ANR	2629017	Identifier	false		2628643	1					
ANR	2629018	ExpressionStatement	getnumbang ( args [ i ] )	1075:2:21489:21508	2628643	23	True				
ANR	2629019	CallExpression	getnumbang ( args [ i ] )		2628643	0					
ANR	2629020	Callee	getnumbang		2628643	0					
ANR	2629021	Identifier	getnumbang		2628643	0					
ANR	2629022	ArgumentList	args [ i ]		2628643	1					
ANR	2629023	Argument	args [ i ]		2628643	0					
ANR	2629024	ArrayIndexing	args [ i ]		2628643	0					
ANR	2629025	Identifier	args		2628643	0					
ANR	2629026	Identifier	i		2628643	1					
ANR	2629027	IfStatement	if ( ! err )		2628643	24					
ANR	2629028	Condition	! err	1076:6:21516:21519	2628643	0	True				
ANR	2629029	UnaryOperationExpression	! err		2628643	0					
ANR	2629030	UnaryOperator	!		2628643	0					
ANR	2629031	Identifier	err		2628643	1					
ANR	2629032	CompoundStatement		71:12:1240:1240	2628643	1					
ANR	2629033	ExpressionStatement	res |= 0xe << ( i * 4 )	1077:3:21527:21546	2628643	0	True				
ANR	2629034	AssignmentExpression	res |= 0xe << ( i * 4 )		2628643	0		|=			
ANR	2629035	Identifier	res		2628643	0					
ANR	2629036	ShiftExpression	0xe << ( i * 4 )		2628643	1		<<			
ANR	2629037	PrimaryExpression	0xe		2628643	0					
ANR	2629038	MultiplicativeExpression	i * 4		2628643	1		*			
ANR	2629039	Identifier	i		2628643	0					
ANR	2629040	PrimaryExpression	4		2628643	1					
ANR	2629041	ContinueStatement	continue ;	1078:3:21551:21559	2628643	1	True				
ANR	2629042	ExpressionStatement	res |= 0xf << ( i * 4 )	1080:2:21567:21586	2628643	25	True				
ANR	2629043	AssignmentExpression	res |= 0xf << ( i * 4 )		2628643	0		|=			
ANR	2629044	Identifier	res		2628643	0					
ANR	2629045	ShiftExpression	0xf << ( i * 4 )		2628643	1		<<			
ANR	2629046	PrimaryExpression	0xf		2628643	0					
ANR	2629047	MultiplicativeExpression	i * 4		2628643	1		*			
ANR	2629048	Identifier	i		2628643	0					
ANR	2629049	PrimaryExpression	4		2628643	1					
ANR	2629050	ExpressionStatement	err = false	1082:1:21592:21603	2628643	4	True				
ANR	2629051	AssignmentExpression	err = false		2628643	0		=			
ANR	2629052	Identifier	err		2628643	0					
ANR	2629053	Identifier	false		2628643	1					
ANR	2629054	ReturnStatement	return res ;	1083:1:21606:21616	2628643	5	True				
ANR	2629055	Identifier	res		2628643	0					
ANR	2629056	ReturnType	static ut64		2628643	1					
ANR	2629057	Identifier	thumb_selector		2628643	2					
ANR	2629058	ParameterList	char * args [ ]		2628643	3					
ANR	2629059	Parameter	char * args [ ]	1006:27:20267:20278	2628643	0	True				
ANR	2629060	ParameterType	char * [ ]		2628643	0					
ANR	2629061	Identifier	args		2628643	1					
ANR	2629062	CFGEntryNode	ENTRY		2628643		True				
ANR	2629063	CFGExitNode	EXIT		2628643		True				
ANR	2629064	Symbol	res		2628643						
ANR	2629065	Symbol	NULL		2628643						
ANR	2629066	Symbol	err		2628643						
ANR	2629067	Symbol	getregmembang		2628643						
ANR	2629068	Symbol	false		2628643						
ANR	2629069	Symbol	i		2628643						
ANR	2629070	Symbol	getregmemstartend		2628643						
ANR	2629071	Symbol	getcoproc		2628643						
ANR	2629072	Symbol	getregmemend		2628643						
ANR	2629073	Symbol	getregmemstart		2628643						
ANR	2629074	Symbol	getreglist		2628643						
ANR	2629075	Symbol	* args		2628643						
ANR	2629076	Symbol	getshiftmemend		2628643						
ANR	2629077	Symbol	args		2628643						
ANR	2629078	Symbol	* i		2628643						
ANR	2629079	Symbol	getreg		2628643						
ANR	2629080	Symbol	getcoprocreg		2628643						
ANR	2629081	Function	getshift	1086:0:21623:22758							
ANR	2629082	FunctionDef	getshift (const char * str)		2629081	0					
ANR	2629083	CompoundStatement		1086:38:21661:22758	2629081	0					
ANR	2629084	IdentifierDeclStatement	char type [ 128 ] ;	1087:1:21664:21678	2629081	0	True				
ANR	2629085	IdentifierDecl	type [ 128 ]		2629081	0					
ANR	2629086	IdentifierDeclType	char [ 128 ]		2629081	0					
ANR	2629087	Identifier	type		2629081	1					
ANR	2629088	PrimaryExpression	128		2629081	2					
ANR	2629089	IdentifierDeclStatement	char arg [ 128 ] ;	1088:1:21681:21694	2629081	1	True				
ANR	2629090	IdentifierDecl	arg [ 128 ]		2629081	0					
ANR	2629091	IdentifierDeclType	char [ 128 ]		2629081	0					
ANR	2629092	Identifier	arg		2629081	1					
ANR	2629093	PrimaryExpression	128		2629081	2					
ANR	2629094	IdentifierDeclStatement	char * space ;	1089:1:21697:21708	2629081	2	True				
ANR	2629095	IdentifierDecl	* space		2629081	0					
ANR	2629096	IdentifierDeclType	char *		2629081	0					
ANR	2629097	Identifier	space		2629081	1					
ANR	2629098	IdentifierDeclStatement	"ut32 i = 0 , shift = 0 ;"	1090:1:21711:21728	2629081	3	True				
ANR	2629099	IdentifierDecl	i = 0		2629081	0					
ANR	2629100	IdentifierDeclType	ut32		2629081	0					
ANR	2629101	Identifier	i		2629081	1					
ANR	2629102	AssignmentExpression	i = 0		2629081	2		=			
ANR	2629103	Identifier	i		2629081	0					
ANR	2629104	PrimaryExpression	0		2629081	1					
ANR	2629105	IdentifierDecl	shift = 0		2629081	1					
ANR	2629106	IdentifierDeclType	ut32		2629081	0					
ANR	2629107	Identifier	shift		2629081	1					
ANR	2629108	AssignmentExpression	shift = 0		2629081	2		=			
ANR	2629109	Identifier	shift		2629081	0					
ANR	2629110	PrimaryExpression	0		2629081	1					
ANR	2629111	IdentifierDeclStatement	"const char * shifts [ ] = { ""LSL"" , ""LSR"" , ""ASR"" , ""ROR"" , 0 , ""RRX"" } ;"	1091:1:21731:21819	2629081	4	True				
ANR	2629112	IdentifierDecl	"* shifts [ ] = { ""LSL"" , ""LSR"" , ""ASR"" , ""ROR"" , 0 , ""RRX"" }"		2629081	0					
ANR	2629113	IdentifierDeclType	const char * [ ]		2629081	0					
ANR	2629114	Identifier	shifts		2629081	1					
ANR	2629115	AssignmentExpression	"* shifts [ ] = { ""LSL"" , ""LSR"" , ""ASR"" , ""ROR"" , 0 , ""RRX"" }"		2629081	2		=			
ANR	2629116	Identifier	shifts		2629081	0					
ANR	2629117	InitializerList	"""LSL"""		2629081	1					
ANR	2629118	PrimaryExpression	"""LSL"""		2629081	0					
ANR	2629119	PrimaryExpression	"""LSR"""		2629081	1					
ANR	2629120	PrimaryExpression	"""ASR"""		2629081	2					
ANR	2629121	PrimaryExpression	"""ROR"""		2629081	3					
ANR	2629122	PrimaryExpression	0		2629081	4					
ANR	2629123	PrimaryExpression	"""RRX"""		2629081	5					
ANR	2629124	ExpressionStatement	"strncpy ( type , str , sizeof ( type ) - 1 )"	1096:1:21823:21861	2629081	5	True				
ANR	2629125	CallExpression	"strncpy ( type , str , sizeof ( type ) - 1 )"		2629081	0					
ANR	2629126	Callee	strncpy		2629081	0					
ANR	2629127	Identifier	strncpy		2629081	0					
ANR	2629128	ArgumentList	type		2629081	1					
ANR	2629129	Argument	type		2629081	0					
ANR	2629130	Identifier	type		2629081	0					
ANR	2629131	Argument	str		2629081	1					
ANR	2629132	Identifier	str		2629081	0					
ANR	2629133	Argument	sizeof ( type ) - 1		2629081	2					
ANR	2629134	AdditiveExpression	sizeof ( type ) - 1		2629081	0		-			
ANR	2629135	SizeofExpression	sizeof ( type )		2629081	0					
ANR	2629136	Sizeof	sizeof		2629081	0					
ANR	2629137	SizeofOperand	type		2629081	1					
ANR	2629138	PrimaryExpression	1		2629081	1					
ANR	2629139	IfStatement	"if ( ! r_str_casecmp ( type , shifts [ 5 ] ) )"		2629081	6					
ANR	2629140	Condition	"! r_str_casecmp ( type , shifts [ 5 ] )"	1098:5:21909:21940	2629081	0	True				
ANR	2629141	UnaryOperationExpression	"! r_str_casecmp ( type , shifts [ 5 ] )"		2629081	0					
ANR	2629142	UnaryOperator	!		2629081	0					
ANR	2629143	CallExpression	"r_str_casecmp ( type , shifts [ 5 ] )"		2629081	1					
ANR	2629144	Callee	r_str_casecmp		2629081	0					
ANR	2629145	Identifier	r_str_casecmp		2629081	0					
ANR	2629146	ArgumentList	type		2629081	1					
ANR	2629147	Argument	type		2629081	0					
ANR	2629148	Identifier	type		2629081	0					
ANR	2629149	Argument	shifts [ 5 ]		2629081	1					
ANR	2629150	ArrayIndexing	shifts [ 5 ]		2629081	0					
ANR	2629151	Identifier	shifts		2629081	0					
ANR	2629152	PrimaryExpression	5		2629081	1					
ANR	2629153	CompoundStatement		13:39:281:281	2629081	1					
ANR	2629154	ExpressionStatement	shift = 6	1100:2:21974:21983	2629081	0	True				
ANR	2629155	AssignmentExpression	shift = 6		2629081	0		=			
ANR	2629156	Identifier	shift		2629081	0					
ANR	2629157	PrimaryExpression	6		2629081	1					
ANR	2629158	ElseStatement	else		2629081	0					
ANR	2629159	CompoundStatement		16:8:331:331	2629081	0					
ANR	2629160	ExpressionStatement	"space = strchr ( type , ' ' )"	1102:2:22022:22048	2629081	0	True				
ANR	2629161	AssignmentExpression	"space = strchr ( type , ' ' )"		2629081	0		=			
ANR	2629162	Identifier	space		2629081	0					
ANR	2629163	CallExpression	"strchr ( type , ' ' )"		2629081	1					
ANR	2629164	Callee	strchr		2629081	0					
ANR	2629165	Identifier	strchr		2629081	0					
ANR	2629166	ArgumentList	type		2629081	1					
ANR	2629167	Argument	type		2629081	0					
ANR	2629168	Identifier	type		2629081	0					
ANR	2629169	Argument	' '		2629081	1					
ANR	2629170	PrimaryExpression	' '		2629081	0					
ANR	2629171	IfStatement	if ( ! space )		2629081	1					
ANR	2629172	Condition	! space	1103:6:22056:22061	2629081	0	True				
ANR	2629173	UnaryOperationExpression	! space		2629081	0					
ANR	2629174	UnaryOperator	!		2629081	0					
ANR	2629175	Identifier	space		2629081	1					
ANR	2629176	CompoundStatement		18:14:402:402	2629081	1					
ANR	2629177	ReturnStatement	return 0 ;	1104:3:22069:22077	2629081	0	True				
ANR	2629178	PrimaryExpression	0		2629081	0					
ANR	2629179	ExpressionStatement	* space = 0	1106:2:22085:22095	2629081	2	True				
ANR	2629180	AssignmentExpression	* space = 0		2629081	0		=			
ANR	2629181	UnaryOperationExpression	* space		2629081	0					
ANR	2629182	UnaryOperator	*		2629081	0					
ANR	2629183	Identifier	space		2629081	1					
ANR	2629184	PrimaryExpression	0		2629081	1					
ANR	2629185	ExpressionStatement	"strncpy ( arg , ++ space , sizeof ( arg ) - 1 )"	1107:2:22099:22138	2629081	3	True				
ANR	2629186	CallExpression	"strncpy ( arg , ++ space , sizeof ( arg ) - 1 )"		2629081	0					
ANR	2629187	Callee	strncpy		2629081	0					
ANR	2629188	Identifier	strncpy		2629081	0					
ANR	2629189	ArgumentList	arg		2629081	1					
ANR	2629190	Argument	arg		2629081	0					
ANR	2629191	Identifier	arg		2629081	0					
ANR	2629192	Argument	++ space		2629081	1					
ANR	2629193	UnaryExpression	++ space		2629081	0					
ANR	2629194	IncDec	++		2629081	0					
ANR	2629195	Identifier	space		2629081	1					
ANR	2629196	Argument	sizeof ( arg ) - 1		2629081	2					
ANR	2629197	AdditiveExpression	sizeof ( arg ) - 1		2629081	0		-			
ANR	2629198	SizeofExpression	sizeof ( arg )		2629081	0					
ANR	2629199	Sizeof	sizeof		2629081	0					
ANR	2629200	SizeofOperand	arg		2629081	1					
ANR	2629201	PrimaryExpression	1		2629081	1					
ANR	2629202	ForStatement	for ( i = 0 ; shifts [ i ] ; i ++ )		2629081	4					
ANR	2629203	ForInit	i = 0 ;	1109:7:22148:22153	2629081	0	True				
ANR	2629204	AssignmentExpression	i = 0		2629081	0		=			
ANR	2629205	Identifier	i		2629081	0					
ANR	2629206	PrimaryExpression	0		2629081	1					
ANR	2629207	Condition	shifts [ i ]	1109:14:22155:22163	2629081	1	True				
ANR	2629208	ArrayIndexing	shifts [ i ]		2629081	0					
ANR	2629209	Identifier	shifts		2629081	0					
ANR	2629210	Identifier	i		2629081	1					
ANR	2629211	PostIncDecOperationExpression	i ++	1109:25:22166:22168	2629081	2	True				
ANR	2629212	Identifier	i		2629081	0					
ANR	2629213	IncDec	++		2629081	1					
ANR	2629214	CompoundStatement		24:30:509:509	2629081	3					
ANR	2629215	IfStatement	"if ( ! r_str_casecmp ( type , shifts [ i ] ) )"		2629081	0					
ANR	2629216	Condition	"! r_str_casecmp ( type , shifts [ i ] )"	1110:7:22180:22211	2629081	0	True				
ANR	2629217	UnaryOperationExpression	"! r_str_casecmp ( type , shifts [ i ] )"		2629081	0					
ANR	2629218	UnaryOperator	!		2629081	0					
ANR	2629219	CallExpression	"r_str_casecmp ( type , shifts [ i ] )"		2629081	1					
ANR	2629220	Callee	r_str_casecmp		2629081	0					
ANR	2629221	Identifier	r_str_casecmp		2629081	0					
ANR	2629222	ArgumentList	type		2629081	1					
ANR	2629223	Argument	type		2629081	0					
ANR	2629224	Identifier	type		2629081	0					
ANR	2629225	Argument	shifts [ i ]		2629081	1					
ANR	2629226	ArrayIndexing	shifts [ i ]		2629081	0					
ANR	2629227	Identifier	shifts		2629081	0					
ANR	2629228	Identifier	i		2629081	1					
ANR	2629229	CompoundStatement		25:41:552:552	2629081	1					
ANR	2629230	ExpressionStatement	shift = 1	1111:4:22220:22229	2629081	0	True				
ANR	2629231	AssignmentExpression	shift = 1		2629081	0		=			
ANR	2629232	Identifier	shift		2629081	0					
ANR	2629233	PrimaryExpression	1		2629081	1					
ANR	2629234	BreakStatement	break ;	1112:4:22235:22240	2629081	1	True				
ANR	2629235	IfStatement	if ( ! shift )		2629081	5					
ANR	2629236	Condition	! shift	1115:6:22257:22262	2629081	0	True				
ANR	2629237	UnaryOperationExpression	! shift		2629081	0					
ANR	2629238	UnaryOperator	!		2629081	0					
ANR	2629239	Identifier	shift		2629081	1					
ANR	2629240	CompoundStatement		30:14:603:603	2629081	1					
ANR	2629241	ReturnStatement	return 0 ;	1116:3:22270:22278	2629081	0	True				
ANR	2629242	PrimaryExpression	0		2629081	0					
ANR	2629243	ExpressionStatement	shift = i * 2	1118:2:22286:22299	2629081	6	True				
ANR	2629244	AssignmentExpression	shift = i * 2		2629081	0		=			
ANR	2629245	Identifier	shift		2629081	0					
ANR	2629246	MultiplicativeExpression	i * 2		2629081	1		*			
ANR	2629247	Identifier	i		2629081	0					
ANR	2629248	PrimaryExpression	2		2629081	1					
ANR	2629249	IfStatement	if ( ( i = getreg ( arg ) ) != - 1 )		2629081	7					
ANR	2629250	Condition	( i = getreg ( arg ) ) != - 1	1119:6:22307:22330	2629081	0	True				
ANR	2629251	EqualityExpression	( i = getreg ( arg ) ) != - 1		2629081	0		!=			
ANR	2629252	AssignmentExpression	i = getreg ( arg )		2629081	0		=			
ANR	2629253	Identifier	i		2629081	0					
ANR	2629254	CallExpression	getreg ( arg )		2629081	1					
ANR	2629255	Callee	getreg		2629081	0					
ANR	2629256	Identifier	getreg		2629081	0					
ANR	2629257	ArgumentList	arg		2629081	1					
ANR	2629258	Argument	arg		2629081	0					
ANR	2629259	Identifier	arg		2629081	0					
ANR	2629260	UnaryOperationExpression	- 1		2629081	1					
ANR	2629261	UnaryOperator	-		2629081	0					
ANR	2629262	PrimaryExpression	1		2629081	1					
ANR	2629263	CompoundStatement		34:32:671:671	2629081	1					
ANR	2629264	ExpressionStatement	i <<= 8	1120:3:22338:22345	2629081	0	True				
ANR	2629265	AssignmentExpression	i <<= 8		2629081	0		<<=			
ANR	2629266	Identifier	i		2629081	0					
ANR	2629267	PrimaryExpression	8		2629081	1					
ANR	2629268	ExpressionStatement	i |= ( 1 << 4 )	1122:3:22383:22396	2629081	1	True				
ANR	2629269	AssignmentExpression	i |= ( 1 << 4 )		2629081	0		|=			
ANR	2629270	Identifier	i		2629081	0					
ANR	2629271	ShiftExpression	1 << 4		2629081	1		<<			
ANR	2629272	PrimaryExpression	1		2629081	0					
ANR	2629273	PrimaryExpression	4		2629081	1					
ANR	2629274	ExpressionStatement	i |= shift << 4	1123:3:22413:22428	2629081	2	True				
ANR	2629275	AssignmentExpression	i |= shift << 4		2629081	0		|=			
ANR	2629276	Identifier	i		2629081	0					
ANR	2629277	ShiftExpression	shift << 4		2629081	1		<<			
ANR	2629278	Identifier	shift		2629081	0					
ANR	2629279	PrimaryExpression	4		2629081	1					
ANR	2629280	IfStatement	if ( shift == 6 )		2629081	3					
ANR	2629281	Condition	shift == 6	1124:7:22455:22464	2629081	0	True				
ANR	2629282	EqualityExpression	shift == 6		2629081	0		==			
ANR	2629283	Identifier	shift		2629081	0					
ANR	2629284	PrimaryExpression	6		2629081	1					
ANR	2629285	CompoundStatement		39:19:805:805	2629081	1					
ANR	2629286	ExpressionStatement	i |= ( 1 << 20 )	1125:4:22473:22487	2629081	0	True				
ANR	2629287	AssignmentExpression	i |= ( 1 << 20 )		2629081	0		|=			
ANR	2629288	Identifier	i		2629081	0					
ANR	2629289	ShiftExpression	1 << 20		2629081	1		<<			
ANR	2629290	PrimaryExpression	1		2629081	0					
ANR	2629291	PrimaryExpression	20		2629081	1					
ANR	2629292	ElseStatement	else		2629081	0					
ANR	2629293	CompoundStatement		43:3:846:879	2629081	0					
ANR	2629294	IdentifierDeclStatement	"char * bracket = strchr ( arg , ']' ) ;"	1128:3:22508:22541	2629081	0	True				
ANR	2629295	IdentifierDecl	"* bracket = strchr ( arg , ']' )"		2629081	0					
ANR	2629296	IdentifierDeclType	char *		2629081	0					
ANR	2629297	Identifier	bracket		2629081	1					
ANR	2629298	AssignmentExpression	"* bracket = strchr ( arg , ']' )"		2629081	2		=			
ANR	2629299	Identifier	bracket		2629081	0					
ANR	2629300	CallExpression	"strchr ( arg , ']' )"		2629081	1					
ANR	2629301	Callee	strchr		2629081	0					
ANR	2629302	Identifier	strchr		2629081	0					
ANR	2629303	ArgumentList	arg		2629081	1					
ANR	2629304	Argument	arg		2629081	0					
ANR	2629305	Identifier	arg		2629081	0					
ANR	2629306	Argument	']'		2629081	1					
ANR	2629307	PrimaryExpression	']'		2629081	0					
ANR	2629308	IfStatement	if ( bracket )		2629081	1					
ANR	2629309	Condition	bracket	1129:7:22550:22556	2629081	0	True				
ANR	2629310	Identifier	bracket		2629081	0					
ANR	2629311	CompoundStatement		44:16:897:897	2629081	1					
ANR	2629312	ExpressionStatement	* bracket = '\\0'	1130:4:22565:22580	2629081	0	True				
ANR	2629313	AssignmentExpression	* bracket = '\\0'		2629081	0		=			
ANR	2629314	UnaryOperationExpression	* bracket		2629081	0					
ANR	2629315	UnaryOperator	*		2629081	0					
ANR	2629316	Identifier	bracket		2629081	1					
ANR	2629317	PrimaryExpression	'\\0'		2629081	1					
ANR	2629318	ExpressionStatement	i &= 0x1f	1133:3:22635:22644	2629081	2	True				
ANR	2629319	AssignmentExpression	i &= 0x1f		2629081	0		&=			
ANR	2629320	Identifier	i		2629081	0					
ANR	2629321	PrimaryExpression	0x1f		2629081	1					
ANR	2629322	IfStatement	if ( ! i )		2629081	3					
ANR	2629323	Condition	! i	1134:7:22653:22654	2629081	0	True				
ANR	2629324	UnaryOperationExpression	! i		2629081	0					
ANR	2629325	UnaryOperator	!		2629081	0					
ANR	2629326	Identifier	i		2629081	1					
ANR	2629327	CompoundStatement		49:11:995:995	2629081	1					
ANR	2629328	ExpressionStatement	i = 32	1135:4:22663:22669	2629081	0	True				
ANR	2629329	AssignmentExpression	i = 32		2629081	0		=			
ANR	2629330	Identifier	i		2629081	0					
ANR	2629331	PrimaryExpression	32		2629081	1					
ANR	2629332	ExpressionStatement	i = ( i * 8 )	1137:3:22679:22690	2629081	4	True				
ANR	2629333	AssignmentExpression	i = ( i * 8 )		2629081	0		=			
ANR	2629334	Identifier	i		2629081	0					
ANR	2629335	MultiplicativeExpression	i * 8		2629081	1		*			
ANR	2629336	Identifier	i		2629081	0					
ANR	2629337	PrimaryExpression	8		2629081	1					
ANR	2629338	ExpressionStatement	i |= shift	1138:3:22695:22705	2629081	5	True				
ANR	2629339	AssignmentExpression	i |= shift		2629081	0		|=			
ANR	2629340	Identifier	i		2629081	0					
ANR	2629341	Identifier	shift		2629081	1					
ANR	2629342	ExpressionStatement	i = i << 4	1139:3:22727:22737	2629081	6	True				
ANR	2629343	AssignmentExpression	i = i << 4		2629081	0		=			
ANR	2629344	Identifier	i		2629081	0					
ANR	2629345	ShiftExpression	i << 4		2629081	1		<<			
ANR	2629346	Identifier	i		2629081	0					
ANR	2629347	PrimaryExpression	4		2629081	1					
ANR	2629348	ReturnStatement	return i ;	1143:1:22748:22756	2629081	7	True				
ANR	2629349	Identifier	i		2629081	0					
ANR	2629350	ReturnType	static ut32		2629081	1					
ANR	2629351	Identifier	getshift		2629081	2					
ANR	2629352	ParameterList	const char * str		2629081	3					
ANR	2629353	Parameter	const char * str	1086:21:21644:21658	2629081	0	True				
ANR	2629354	ParameterType	const char *		2629081	0					
ANR	2629355	Identifier	str		2629081	1					
ANR	2629356	CFGEntryNode	ENTRY		2629081		True				
ANR	2629357	CFGExitNode	EXIT		2629081		True				
ANR	2629358	Symbol	* bracket		2629081						
ANR	2629359	Symbol	shift		2629081						
ANR	2629360	Symbol	* shifts		2629081						
ANR	2629361	Symbol	i		2629081						
ANR	2629362	Symbol	strchr		2629081						
ANR	2629363	Symbol	type		2629081						
ANR	2629364	Symbol	space		2629081						
ANR	2629365	Symbol	str		2629081						
ANR	2629366	Symbol	* i		2629081						
ANR	2629367	Symbol	getreg		2629081						
ANR	2629368	Symbol	arg		2629081						
ANR	2629369	Symbol	bracket		2629081						
ANR	2629370	Symbol	shifts		2629081						
ANR	2629371	Symbol	* space		2629081						
ANR	2629372	Symbol	r_str_casecmp		2629081						
ANR	2629373	Function	arm_opcode_parse	1146:0:22761:23300							
ANR	2629374	FunctionDef	"arm_opcode_parse (ArmOpcode * ao , const char * str)"		2629373	0					
ANR	2629375	CompoundStatement		1146:61:22822:23300	2629373	0					
ANR	2629376	IdentifierDeclStatement	int i ;	1147:1:22825:22830	2629373	0	True				
ANR	2629377	IdentifierDecl	i		2629373	0					
ANR	2629378	IdentifierDeclType	int		2629373	0					
ANR	2629379	Identifier	i		2629373	1					
ANR	2629380	ExpressionStatement	"memset ( ao , 0 , sizeof ( ArmOpcode ) )"	1148:1:22833:22867	2629373	1	True				
ANR	2629381	CallExpression	"memset ( ao , 0 , sizeof ( ArmOpcode ) )"		2629373	0					
ANR	2629382	Callee	memset		2629373	0					
ANR	2629383	Identifier	memset		2629373	0					
ANR	2629384	ArgumentList	ao		2629373	1					
ANR	2629385	Argument	ao		2629373	0					
ANR	2629386	Identifier	ao		2629373	0					
ANR	2629387	Argument	0		2629373	1					
ANR	2629388	PrimaryExpression	0		2629373	0					
ANR	2629389	Argument	sizeof ( ArmOpcode )		2629373	2					
ANR	2629390	SizeofExpression	sizeof ( ArmOpcode )		2629373	0					
ANR	2629391	Sizeof	sizeof		2629373	0					
ANR	2629392	SizeofOperand	ArmOpcode		2629373	1					
ANR	2629393	IfStatement	if ( strlen ( str ) + 1 >= sizeof ( ao -> op ) )		2629373	2					
ANR	2629394	Condition	strlen ( str ) + 1 >= sizeof ( ao -> op )	1149:5:22874:22908	2629373	0	True				
ANR	2629395	RelationalExpression	strlen ( str ) + 1 >= sizeof ( ao -> op )		2629373	0		>=			
ANR	2629396	AdditiveExpression	strlen ( str ) + 1		2629373	0		+			
ANR	2629397	CallExpression	strlen ( str )		2629373	0					
ANR	2629398	Callee	strlen		2629373	0					
ANR	2629399	Identifier	strlen		2629373	0					
ANR	2629400	ArgumentList	str		2629373	1					
ANR	2629401	Argument	str		2629373	0					
ANR	2629402	Identifier	str		2629373	0					
ANR	2629403	PrimaryExpression	1		2629373	1					
ANR	2629404	SizeofExpression	sizeof ( ao -> op )		2629373	1					
ANR	2629405	Sizeof	sizeof		2629373	0					
ANR	2629406	PtrMemberAccess	ao -> op		2629373	1					
ANR	2629407	Identifier	ao		2629373	0					
ANR	2629408	Identifier	op		2629373	1					
ANR	2629409	CompoundStatement		4:42:88:88	2629373	1					
ANR	2629410	ReturnStatement	return ;	1150:2:22915:22921	2629373	0	True				
ANR	2629411	ExpressionStatement	"strncpy ( ao -> op , str , sizeof ( ao -> op ) - 1 )"	1152:1:22927:22967	2629373	3	True				
ANR	2629412	CallExpression	"strncpy ( ao -> op , str , sizeof ( ao -> op ) - 1 )"		2629373	0					
ANR	2629413	Callee	strncpy		2629373	0					
ANR	2629414	Identifier	strncpy		2629373	0					
ANR	2629415	ArgumentList	ao -> op		2629373	1					
ANR	2629416	Argument	ao -> op		2629373	0					
ANR	2629417	PtrMemberAccess	ao -> op		2629373	0					
ANR	2629418	Identifier	ao		2629373	0					
ANR	2629419	Identifier	op		2629373	1					
ANR	2629420	Argument	str		2629373	1					
ANR	2629421	Identifier	str		2629373	0					
ANR	2629422	Argument	sizeof ( ao -> op ) - 1		2629373	2					
ANR	2629423	AdditiveExpression	sizeof ( ao -> op ) - 1		2629373	0		-			
ANR	2629424	SizeofExpression	sizeof ( ao -> op )		2629373	0					
ANR	2629425	Sizeof	sizeof		2629373	0					
ANR	2629426	PtrMemberAccess	ao -> op		2629373	1					
ANR	2629427	Identifier	ao		2629373	0					
ANR	2629428	Identifier	op		2629373	1					
ANR	2629429	PrimaryExpression	1		2629373	1					
ANR	2629430	ExpressionStatement	"strcpy ( ao -> opstr , ao -> op )"	1153:1:22970:22996	2629373	4	True				
ANR	2629431	CallExpression	"strcpy ( ao -> opstr , ao -> op )"		2629373	0					
ANR	2629432	Callee	strcpy		2629373	0					
ANR	2629433	Identifier	strcpy		2629373	0					
ANR	2629434	ArgumentList	ao -> opstr		2629373	1					
ANR	2629435	Argument	ao -> opstr		2629373	0					
ANR	2629436	PtrMemberAccess	ao -> opstr		2629373	0					
ANR	2629437	Identifier	ao		2629373	0					
ANR	2629438	Identifier	opstr		2629373	1					
ANR	2629439	Argument	ao -> op		2629373	1					
ANR	2629440	PtrMemberAccess	ao -> op		2629373	0					
ANR	2629441	Identifier	ao		2629373	0					
ANR	2629442	Identifier	op		2629373	1					
ANR	2629443	ExpressionStatement	"ao -> a [ 0 ] = strchr ( ao -> op , ' ' )"	1154:1:22999:23030	2629373	5	True				
ANR	2629444	AssignmentExpression	"ao -> a [ 0 ] = strchr ( ao -> op , ' ' )"		2629373	0		=			
ANR	2629445	ArrayIndexing	ao -> a [ 0 ]		2629373	0					
ANR	2629446	PtrMemberAccess	ao -> a		2629373	0					
ANR	2629447	Identifier	ao		2629373	0					
ANR	2629448	Identifier	a		2629373	1					
ANR	2629449	PrimaryExpression	0		2629373	1					
ANR	2629450	CallExpression	"strchr ( ao -> op , ' ' )"		2629373	1					
ANR	2629451	Callee	strchr		2629373	0					
ANR	2629452	Identifier	strchr		2629373	0					
ANR	2629453	ArgumentList	ao -> op		2629373	1					
ANR	2629454	Argument	ao -> op		2629373	0					
ANR	2629455	PtrMemberAccess	ao -> op		2629373	0					
ANR	2629456	Identifier	ao		2629373	0					
ANR	2629457	Identifier	op		2629373	1					
ANR	2629458	Argument	' '		2629373	1					
ANR	2629459	PrimaryExpression	' '		2629373	0					
ANR	2629460	ForStatement	for ( i = 0 ; i < 15 ; i ++ )		2629373	6					
ANR	2629461	ForInit	i = 0 ;	1155:6:23038:23041	2629373	0	True				
ANR	2629462	AssignmentExpression	i = 0		2629373	0		=			
ANR	2629463	Identifier	i		2629373	0					
ANR	2629464	PrimaryExpression	0		2629373	1					
ANR	2629465	Condition	i < 15	1155:11:23043:23046	2629373	1	True				
ANR	2629466	RelationalExpression	i < 15		2629373	0		<			
ANR	2629467	Identifier	i		2629373	0					
ANR	2629468	PrimaryExpression	15		2629373	1					
ANR	2629469	PostIncDecOperationExpression	i ++	1155:17:23049:23051	2629373	2	True				
ANR	2629470	Identifier	i		2629373	0					
ANR	2629471	IncDec	++		2629373	1					
ANR	2629472	CompoundStatement		10:22:231:231	2629373	3					
ANR	2629473	IfStatement	if ( ao -> a [ i ] )		2629373	0					
ANR	2629474	Condition	ao -> a [ i ]	1156:6:23062:23069	2629373	0	True				
ANR	2629475	ArrayIndexing	ao -> a [ i ]		2629373	0					
ANR	2629476	PtrMemberAccess	ao -> a		2629373	0					
ANR	2629477	Identifier	ao		2629373	0					
ANR	2629478	Identifier	a		2629373	1					
ANR	2629479	Identifier	i		2629373	1					
ANR	2629480	CompoundStatement		11:16:249:249	2629373	1					
ANR	2629481	ExpressionStatement	* ao -> a [ i ] = 0	1157:3:23077:23090	2629373	0	True				
ANR	2629482	AssignmentExpression	* ao -> a [ i ] = 0		2629373	0		=			
ANR	2629483	UnaryOperationExpression	* ao -> a [ i ]		2629373	0					
ANR	2629484	UnaryOperator	*		2629373	0					
ANR	2629485	ArrayIndexing	ao -> a [ i ]		2629373	1					
ANR	2629486	PtrMemberAccess	ao -> a		2629373	0					
ANR	2629487	Identifier	ao		2629373	0					
ANR	2629488	Identifier	a		2629373	1					
ANR	2629489	Identifier	i		2629373	1					
ANR	2629490	PrimaryExpression	0		2629373	1					
ANR	2629491	ExpressionStatement	"ao -> a [ i + 1 ] = strchr ( ++ ao -> a [ i ] , ',' )"	1158:3:23095:23132	2629373	1	True				
ANR	2629492	AssignmentExpression	"ao -> a [ i + 1 ] = strchr ( ++ ao -> a [ i ] , ',' )"		2629373	0		=			
ANR	2629493	ArrayIndexing	ao -> a [ i + 1 ]		2629373	0					
ANR	2629494	PtrMemberAccess	ao -> a		2629373	0					
ANR	2629495	Identifier	ao		2629373	0					
ANR	2629496	Identifier	a		2629373	1					
ANR	2629497	AdditiveExpression	i + 1		2629373	1		+			
ANR	2629498	Identifier	i		2629373	0					
ANR	2629499	PrimaryExpression	1		2629373	1					
ANR	2629500	CallExpression	"strchr ( ++ ao -> a [ i ] , ',' )"		2629373	1					
ANR	2629501	Callee	strchr		2629373	0					
ANR	2629502	Identifier	strchr		2629373	0					
ANR	2629503	ArgumentList	++ ao -> a [ i ]		2629373	1					
ANR	2629504	Argument	++ ao -> a [ i ]		2629373	0					
ANR	2629505	UnaryExpression	++ ao -> a [ i ]		2629373	0					
ANR	2629506	IncDec	++		2629373	0					
ANR	2629507	ArrayIndexing	ao -> a [ i ]		2629373	1					
ANR	2629508	PtrMemberAccess	ao -> a		2629373	0					
ANR	2629509	Identifier	ao		2629373	0					
ANR	2629510	Identifier	a		2629373	1					
ANR	2629511	Identifier	i		2629373	1					
ANR	2629512	Argument	"','"		2629373	1					
ANR	2629513	PrimaryExpression	"','"		2629373	0					
ANR	2629514	ElseStatement	else		2629373	0					
ANR	2629515	CompoundStatement		14:9:320:320	2629373	0					
ANR	2629516	BreakStatement	break ;	1160:3:23148:23153	2629373	0	True				
ANR	2629517	IfStatement	if ( ao -> a [ i ] )		2629373	7					
ANR	2629518	Condition	ao -> a [ i ]	1163:5:23167:23174	2629373	0	True				
ANR	2629519	ArrayIndexing	ao -> a [ i ]		2629373	0					
ANR	2629520	PtrMemberAccess	ao -> a		2629373	0					
ANR	2629521	Identifier	ao		2629373	0					
ANR	2629522	Identifier	a		2629373	1					
ANR	2629523	Identifier	i		2629373	1					
ANR	2629524	CompoundStatement		18:15:354:354	2629373	1					
ANR	2629525	ExpressionStatement	* ao -> a [ i ] = 0	1164:2:23181:23194	2629373	0	True				
ANR	2629526	AssignmentExpression	* ao -> a [ i ] = 0		2629373	0		=			
ANR	2629527	UnaryOperationExpression	* ao -> a [ i ]		2629373	0					
ANR	2629528	UnaryOperator	*		2629373	0					
ANR	2629529	ArrayIndexing	ao -> a [ i ]		2629373	1					
ANR	2629530	PtrMemberAccess	ao -> a		2629373	0					
ANR	2629531	Identifier	ao		2629373	0					
ANR	2629532	Identifier	a		2629373	1					
ANR	2629533	Identifier	i		2629373	1					
ANR	2629534	PrimaryExpression	0		2629373	1					
ANR	2629535	ExpressionStatement	ao -> a [ i ] ++	1165:2:23198:23208	2629373	1	True				
ANR	2629536	PostIncDecOperationExpression	ao -> a [ i ] ++		2629373	0					
ANR	2629537	ArrayIndexing	ao -> a [ i ]		2629373	0					
ANR	2629538	PtrMemberAccess	ao -> a		2629373	0					
ANR	2629539	Identifier	ao		2629373	0					
ANR	2629540	Identifier	a		2629373	1					
ANR	2629541	Identifier	i		2629373	1					
ANR	2629542	IncDec	++		2629373	1					
ANR	2629543	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		2629373	8					
ANR	2629544	ForInit	i = 0 ;	1167:6:23219:23222	2629373	0	True				
ANR	2629545	AssignmentExpression	i = 0		2629373	0		=			
ANR	2629546	Identifier	i		2629373	0					
ANR	2629547	PrimaryExpression	0		2629373	1					
ANR	2629548	Condition	i < 16	1167:11:23224:23227	2629373	1	True				
ANR	2629549	RelationalExpression	i < 16		2629373	0		<			
ANR	2629550	Identifier	i		2629373	0					
ANR	2629551	PrimaryExpression	16		2629373	1					
ANR	2629552	PostIncDecOperationExpression	i ++	1167:17:23230:23232	2629373	2	True				
ANR	2629553	Identifier	i		2629373	0					
ANR	2629554	IncDec	++		2629373	1					
ANR	2629555	CompoundStatement		22:22:412:412	2629373	3					
ANR	2629556	WhileStatement	while ( ao -> a [ i ] && * ao -> a [ i ] == ' ' )		2629373	0					
ANR	2629557	Condition	ao -> a [ i ] && * ao -> a [ i ] == ' '	1168:9:23246:23273	2629373	0	True				
ANR	2629558	AndExpression	ao -> a [ i ] && * ao -> a [ i ] == ' '		2629373	0		&&			
ANR	2629559	ArrayIndexing	ao -> a [ i ]		2629373	0					
ANR	2629560	PtrMemberAccess	ao -> a		2629373	0					
ANR	2629561	Identifier	ao		2629373	0					
ANR	2629562	Identifier	a		2629373	1					
ANR	2629563	Identifier	i		2629373	1					
ANR	2629564	EqualityExpression	* ao -> a [ i ] == ' '		2629373	1		==			
ANR	2629565	UnaryOperationExpression	* ao -> a [ i ]		2629373	0					
ANR	2629566	UnaryOperator	*		2629373	0					
ANR	2629567	ArrayIndexing	ao -> a [ i ]		2629373	1					
ANR	2629568	PtrMemberAccess	ao -> a		2629373	0					
ANR	2629569	Identifier	ao		2629373	0					
ANR	2629570	Identifier	a		2629373	1					
ANR	2629571	Identifier	i		2629373	1					
ANR	2629572	PrimaryExpression	' '		2629373	1					
ANR	2629573	CompoundStatement		23:39:453:453	2629373	1					
ANR	2629574	ExpressionStatement	ao -> a [ i ] ++	1169:3:23281:23291	2629373	0	True				
ANR	2629575	PostIncDecOperationExpression	ao -> a [ i ] ++		2629373	0					
ANR	2629576	ArrayIndexing	ao -> a [ i ]		2629373	0					
ANR	2629577	PtrMemberAccess	ao -> a		2629373	0					
ANR	2629578	Identifier	ao		2629373	0					
ANR	2629579	Identifier	a		2629373	1					
ANR	2629580	Identifier	i		2629373	1					
ANR	2629581	IncDec	++		2629373	1					
ANR	2629582	ReturnType	static void		2629373	1					
ANR	2629583	Identifier	arm_opcode_parse		2629373	2					
ANR	2629584	ParameterList	"ArmOpcode * ao , const char * str"		2629373	3					
ANR	2629585	Parameter	ArmOpcode * ao	1146:29:22790:22802	2629373	0	True				
ANR	2629586	ParameterType	ArmOpcode *		2629373	0					
ANR	2629587	Identifier	ao		2629373	1					
ANR	2629588	Parameter	const char * str	1146:44:22805:22819	2629373	1	True				
ANR	2629589	ParameterType	const char *		2629373	0					
ANR	2629590	Identifier	str		2629373	1					
ANR	2629591	CFGEntryNode	ENTRY		2629373		True				
ANR	2629592	CFGExitNode	EXIT		2629373		True				
ANR	2629593	Symbol	* * i		2629373						
ANR	2629594	Symbol	ao -> opstr		2629373						
ANR	2629595	Symbol	i		2629373						
ANR	2629596	Symbol	ao -> op		2629373						
ANR	2629597	Symbol	strchr		2629373						
ANR	2629598	Symbol	* ao -> a [ i ]		2629373						
ANR	2629599	Symbol	* * ao -> a		2629373						
ANR	2629600	Symbol	* * * ao		2629373						
ANR	2629601	Symbol	ao		2629373						
ANR	2629602	Symbol	str		2629373						
ANR	2629603	Symbol	* ao -> a		2629373						
ANR	2629604	Symbol	strlen		2629373						
ANR	2629605	Symbol	* i		2629373						
ANR	2629606	Symbol	* ao		2629373						
ANR	2629607	Symbol	* * ao		2629373						
ANR	2629608	Symbol	ao -> a		2629373						
ANR	2629609	Function	arm_opcode_cond	1174:0:23303:23691							
ANR	2629610	FunctionDef	"arm_opcode_cond (ArmOpcode * ao , int delta)"		2629609	0					
ANR	2629611	CompoundStatement		1174:60:23363:23691	2629609	0					
ANR	2629612	IdentifierDeclStatement	"const char * conds [ ] = { ""eq"" , ""ne"" , ""cs"" , ""cc"" , ""mi"" , ""pl"" , ""vs"" , ""vc"" , ""hi"" , ""ls"" , ""ge"" , ""lt"" , ""gt"" , ""le"" , ""al"" , ""nv"" , 0 } ;"	1175:1:23366:23494	2629609	0	True				
ANR	2629613	IdentifierDecl	"* conds [ ] = { ""eq"" , ""ne"" , ""cs"" , ""cc"" , ""mi"" , ""pl"" , ""vs"" , ""vc"" , ""hi"" , ""ls"" , ""ge"" , ""lt"" , ""gt"" , ""le"" , ""al"" , ""nv"" , 0 }"		2629609	0					
ANR	2629614	IdentifierDeclType	const char * [ ]		2629609	0					
ANR	2629615	Identifier	conds		2629609	1					
ANR	2629616	AssignmentExpression	"* conds [ ] = { ""eq"" , ""ne"" , ""cs"" , ""cc"" , ""mi"" , ""pl"" , ""vs"" , ""vc"" , ""hi"" , ""ls"" , ""ge"" , ""lt"" , ""gt"" , ""le"" , ""al"" , ""nv"" , 0 }"		2629609	2		=			
ANR	2629617	Identifier	conds		2629609	0					
ANR	2629618	InitializerList	"""eq"""		2629609	1					
ANR	2629619	PrimaryExpression	"""eq"""		2629609	0					
ANR	2629620	PrimaryExpression	"""ne"""		2629609	1					
ANR	2629621	PrimaryExpression	"""cs"""		2629609	2					
ANR	2629622	PrimaryExpression	"""cc"""		2629609	3					
ANR	2629623	PrimaryExpression	"""mi"""		2629609	4					
ANR	2629624	PrimaryExpression	"""pl"""		2629609	5					
ANR	2629625	PrimaryExpression	"""vs"""		2629609	6					
ANR	2629626	PrimaryExpression	"""vc"""		2629609	7					
ANR	2629627	PrimaryExpression	"""hi"""		2629609	8					
ANR	2629628	PrimaryExpression	"""ls"""		2629609	9					
ANR	2629629	PrimaryExpression	"""ge"""		2629609	10					
ANR	2629630	PrimaryExpression	"""lt"""		2629609	11					
ANR	2629631	PrimaryExpression	"""gt"""		2629609	12					
ANR	2629632	PrimaryExpression	"""le"""		2629609	13					
ANR	2629633	PrimaryExpression	"""al"""		2629609	14					
ANR	2629634	PrimaryExpression	"""nv"""		2629609	15					
ANR	2629635	PrimaryExpression	0		2629609	16					
ANR	2629636	IdentifierDeclStatement	"int i , cond = 14 ;"	1179:1:23497:23513	2629609	1	True				
ANR	2629637	IdentifierDecl	i		2629609	0					
ANR	2629638	IdentifierDeclType	int		2629609	0					
ANR	2629639	Identifier	i		2629609	1					
ANR	2629640	IdentifierDecl	cond = 14		2629609	1					
ANR	2629641	IdentifierDeclType	int		2629609	0					
ANR	2629642	Identifier	cond		2629609	1					
ANR	2629643	AssignmentExpression	cond = 14		2629609	2		=			
ANR	2629644	Identifier	cond		2629609	0					
ANR	2629645	PrimaryExpression	14		2629609	1					
ANR	2629646	IdentifierDeclStatement	char * c = ao -> op + delta ;	1180:1:23539:23561	2629609	2	True				
ANR	2629647	IdentifierDecl	* c = ao -> op + delta		2629609	0					
ANR	2629648	IdentifierDeclType	char *		2629609	0					
ANR	2629649	Identifier	c		2629609	1					
ANR	2629650	AssignmentExpression	* c = ao -> op + delta		2629609	2		=			
ANR	2629651	Identifier	c		2629609	0					
ANR	2629652	AdditiveExpression	ao -> op + delta		2629609	1		+			
ANR	2629653	PtrMemberAccess	ao -> op		2629609	0					
ANR	2629654	Identifier	ao		2629609	0					
ANR	2629655	Identifier	op		2629609	1					
ANR	2629656	Identifier	delta		2629609	1					
ANR	2629657	ForStatement	for ( i = 0 ; conds [ i ] ; i ++ )		2629609	3					
ANR	2629658	ForInit	i = 0 ;	1181:6:23569:23572	2629609	0	True				
ANR	2629659	AssignmentExpression	i = 0		2629609	0		=			
ANR	2629660	Identifier	i		2629609	0					
ANR	2629661	PrimaryExpression	0		2629609	1					
ANR	2629662	Condition	conds [ i ]	1181:11:23574:23581	2629609	1	True				
ANR	2629663	ArrayIndexing	conds [ i ]		2629609	0					
ANR	2629664	Identifier	conds		2629609	0					
ANR	2629665	Identifier	i		2629609	1					
ANR	2629666	PostIncDecOperationExpression	i ++	1181:21:23584:23586	2629609	2	True				
ANR	2629667	Identifier	i		2629609	0					
ANR	2629668	IncDec	++		2629609	1					
ANR	2629669	CompoundStatement		8:26:225:225	2629609	3					
ANR	2629670	IfStatement	"if ( ! strcmpnull ( c , conds [ i ] ) )"		2629609	0					
ANR	2629671	Condition	"! strcmpnull ( c , conds [ i ] )"	1182:6:23597:23621	2629609	0	True				
ANR	2629672	UnaryOperationExpression	"! strcmpnull ( c , conds [ i ] )"		2629609	0					
ANR	2629673	UnaryOperator	!		2629609	0					
ANR	2629674	CallExpression	"strcmpnull ( c , conds [ i ] )"		2629609	1					
ANR	2629675	Callee	strcmpnull		2629609	0					
ANR	2629676	Identifier	strcmpnull		2629609	0					
ANR	2629677	ArgumentList	c		2629609	1					
ANR	2629678	Argument	c		2629609	0					
ANR	2629679	Identifier	c		2629609	0					
ANR	2629680	Argument	conds [ i ]		2629609	1					
ANR	2629681	ArrayIndexing	conds [ i ]		2629609	0					
ANR	2629682	Identifier	conds		2629609	0					
ANR	2629683	Identifier	i		2629609	1					
ANR	2629684	CompoundStatement		9:33:260:260	2629609	1					
ANR	2629685	ExpressionStatement	cond = i	1183:3:23629:23637	2629609	0	True				
ANR	2629686	AssignmentExpression	cond = i		2629609	0		=			
ANR	2629687	Identifier	cond		2629609	0					
ANR	2629688	Identifier	i		2629609	1					
ANR	2629689	BreakStatement	break ;	1184:3:23642:23647	2629609	1	True				
ANR	2629690	ExpressionStatement	ao -> o |= cond << 4	1187:1:23657:23675	2629609	4	True				
ANR	2629691	AssignmentExpression	ao -> o |= cond << 4		2629609	0		|=			
ANR	2629692	PtrMemberAccess	ao -> o		2629609	0					
ANR	2629693	Identifier	ao		2629609	0					
ANR	2629694	Identifier	o		2629609	1					
ANR	2629695	ShiftExpression	cond << 4		2629609	1		<<			
ANR	2629696	Identifier	cond		2629609	0					
ANR	2629697	PrimaryExpression	4		2629609	1					
ANR	2629698	ReturnStatement	return cond ;	1188:1:23678:23689	2629609	5	True				
ANR	2629699	Identifier	cond		2629609	0					
ANR	2629700	ReturnType	static inline int		2629609	1					
ANR	2629701	Identifier	arm_opcode_cond		2629609	2					
ANR	2629702	ParameterList	"ArmOpcode * ao , int delta"		2629609	3					
ANR	2629703	Parameter	ArmOpcode * ao	1174:34:23337:23349	2629609	0	True				
ANR	2629704	ParameterType	ArmOpcode *		2629609	0					
ANR	2629705	Identifier	ao		2629609	1					
ANR	2629706	Parameter	int delta	1174:49:23352:23360	2629609	1	True				
ANR	2629707	ParameterType	int		2629609	0					
ANR	2629708	Identifier	delta		2629609	1					
ANR	2629709	CFGEntryNode	ENTRY		2629609		True				
ANR	2629710	CFGExitNode	EXIT		2629609		True				
ANR	2629711	Symbol	strcmpnull		2629609						
ANR	2629712	Symbol	c		2629609						
ANR	2629713	Symbol	* conds		2629609						
ANR	2629714	Symbol	* i		2629609						
ANR	2629715	Symbol	conds		2629609						
ANR	2629716	Symbol	* ao		2629609						
ANR	2629717	Symbol	delta		2629609						
ANR	2629718	Symbol	i		2629609						
ANR	2629719	Symbol	ao -> op		2629609						
ANR	2629720	Symbol	cond		2629609						
ANR	2629721	Symbol	ao -> o		2629609						
ANR	2629722	Symbol	ao		2629609						
ANR	2629723	Function	thumb_getoffset	1191:0:23694:23917							
ANR	2629724	FunctionDef	"thumb_getoffset (char * label , ut64 cur)"		2629723	0					
ANR	2629725	CompoundStatement		1191:51:23745:23917	2629723	0					
ANR	2629726	IdentifierDeclStatement	"st32 res = r_num_math ( NULL , label ) ;"	1192:1:23748:23783	2629723	0	True				
ANR	2629727	IdentifierDecl	"res = r_num_math ( NULL , label )"		2629723	0					
ANR	2629728	IdentifierDeclType	st32		2629723	0					
ANR	2629729	Identifier	res		2629723	1					
ANR	2629730	AssignmentExpression	"res = r_num_math ( NULL , label )"		2629723	2		=			
ANR	2629731	Identifier	res		2629723	0					
ANR	2629732	CallExpression	"r_num_math ( NULL , label )"		2629723	1					
ANR	2629733	Callee	r_num_math		2629723	0					
ANR	2629734	Identifier	r_num_math		2629723	0					
ANR	2629735	ArgumentList	NULL		2629723	1					
ANR	2629736	Argument	NULL		2629723	0					
ANR	2629737	Identifier	NULL		2629723	0					
ANR	2629738	Argument	label		2629723	1					
ANR	2629739	Identifier	label		2629723	0					
ANR	2629740	ExpressionStatement	res -= 4	1193:1:23786:23794	2629723	1	True				
ANR	2629741	AssignmentExpression	res -= 4		2629723	0		-=			
ANR	2629742	Identifier	res		2629723	0					
ANR	2629743	PrimaryExpression	4		2629723	1					
ANR	2629744	ExpressionStatement	res -= cur	1194:1:23797:23807	2629723	2	True				
ANR	2629745	AssignmentExpression	res -= cur		2629723	0		-=			
ANR	2629746	Identifier	res		2629723	0					
ANR	2629747	Identifier	cur		2629723	1					
ANR	2629748	ReturnStatement	return res ;	1196:1:23905:23915	2629723	3	True				
ANR	2629749	Identifier	res		2629723	0					
ANR	2629750	ReturnType	static st32		2629723	1					
ANR	2629751	Identifier	thumb_getoffset		2629723	2					
ANR	2629752	ParameterList	"char * label , ut64 cur"		2629723	3					
ANR	2629753	Parameter	char * label	1191:28:23722:23732	2629723	0	True				
ANR	2629754	ParameterType	char *		2629723	0					
ANR	2629755	Identifier	label		2629723	1					
ANR	2629756	Parameter	ut64 cur	1191:41:23735:23742	2629723	1	True				
ANR	2629757	ParameterType	ut64		2629723	0					
ANR	2629758	Identifier	cur		2629723	1					
ANR	2629759	CFGEntryNode	ENTRY		2629723		True				
ANR	2629760	CFGExitNode	EXIT		2629723		True				
ANR	2629761	Symbol	cur		2629723						
ANR	2629762	Symbol	res		2629723						
ANR	2629763	Symbol	NULL		2629723						
ANR	2629764	Symbol	label		2629723						
ANR	2629765	Symbol	r_num_math		2629723						
ANR	2629766	Function	std_16bit_2reg	1199:0:23920:24145							
ANR	2629767	FunctionDef	"std_16bit_2reg (ArmOpcode * ao , ut64 m)"		2629766	0					
ANR	2629768	CompoundStatement		1199:49:23969:24145	2629766	0					
ANR	2629769	IdentifierDeclStatement	ut8 rd = getreg ( ao -> a [ 0 ] ) ;	1200:1:23972:23998	2629766	0	True				
ANR	2629770	IdentifierDecl	rd = getreg ( ao -> a [ 0 ] )		2629766	0					
ANR	2629771	IdentifierDeclType	ut8		2629766	0					
ANR	2629772	Identifier	rd		2629766	1					
ANR	2629773	AssignmentExpression	rd = getreg ( ao -> a [ 0 ] )		2629766	2		=			
ANR	2629774	Identifier	rd		2629766	0					
ANR	2629775	CallExpression	getreg ( ao -> a [ 0 ] )		2629766	1					
ANR	2629776	Callee	getreg		2629766	0					
ANR	2629777	Identifier	getreg		2629766	0					
ANR	2629778	ArgumentList	ao -> a [ 0 ]		2629766	1					
ANR	2629779	Argument	ao -> a [ 0 ]		2629766	0					
ANR	2629780	ArrayIndexing	ao -> a [ 0 ]		2629766	0					
ANR	2629781	PtrMemberAccess	ao -> a		2629766	0					
ANR	2629782	Identifier	ao		2629766	0					
ANR	2629783	Identifier	a		2629766	1					
ANR	2629784	PrimaryExpression	0		2629766	1					
ANR	2629785	IdentifierDeclStatement	ut8 rn = getreg ( ao -> a [ 1 ] ) ;	1201:1:24001:24027	2629766	1	True				
ANR	2629786	IdentifierDecl	rn = getreg ( ao -> a [ 1 ] )		2629766	0					
ANR	2629787	IdentifierDeclType	ut8		2629766	0					
ANR	2629788	Identifier	rn		2629766	1					
ANR	2629789	AssignmentExpression	rn = getreg ( ao -> a [ 1 ] )		2629766	2		=			
ANR	2629790	Identifier	rn		2629766	0					
ANR	2629791	CallExpression	getreg ( ao -> a [ 1 ] )		2629766	1					
ANR	2629792	Callee	getreg		2629766	0					
ANR	2629793	Identifier	getreg		2629766	0					
ANR	2629794	ArgumentList	ao -> a [ 1 ]		2629766	1					
ANR	2629795	Argument	ao -> a [ 1 ]		2629766	0					
ANR	2629796	ArrayIndexing	ao -> a [ 1 ]		2629766	0					
ANR	2629797	PtrMemberAccess	ao -> a		2629766	0					
ANR	2629798	Identifier	ao		2629766	0					
ANR	2629799	Identifier	a		2629766	1					
ANR	2629800	PrimaryExpression	1		2629766	1					
ANR	2629801	IfStatement	if ( ( rd < 8 ) && ( rn < 8 ) && ! ( m & DOTW_BIT ) )		2629766	2					
ANR	2629802	Condition	( rd < 8 ) && ( rn < 8 ) && ! ( m & DOTW_BIT )	1202:6:24035:24073	2629766	0	True				
ANR	2629803	AndExpression	( rd < 8 ) && ( rn < 8 ) && ! ( m & DOTW_BIT )		2629766	0		&&			
ANR	2629804	RelationalExpression	rd < 8		2629766	0		<			
ANR	2629805	Identifier	rd		2629766	0					
ANR	2629806	PrimaryExpression	8		2629766	1					
ANR	2629807	AndExpression	( rn < 8 ) && ! ( m & DOTW_BIT )		2629766	1		&&			
ANR	2629808	RelationalExpression	rn < 8		2629766	0		<			
ANR	2629809	Identifier	rn		2629766	0					
ANR	2629810	PrimaryExpression	8		2629766	1					
ANR	2629811	UnaryOperationExpression	! ( m & DOTW_BIT )		2629766	1					
ANR	2629812	UnaryOperator	!		2629766	0					
ANR	2629813	BitAndExpression	m & DOTW_BIT		2629766	1		&			
ANR	2629814	Identifier	m		2629766	0					
ANR	2629815	Identifier	DOTW_BIT		2629766	1					
ANR	2629816	CompoundStatement		4:47:106:106	2629766	1					
ANR	2629817	ExpressionStatement	ao -> o |= rd << 8	1203:2:24080:24096	2629766	0	True				
ANR	2629818	AssignmentExpression	ao -> o |= rd << 8		2629766	0		|=			
ANR	2629819	PtrMemberAccess	ao -> o		2629766	0					
ANR	2629820	Identifier	ao		2629766	0					
ANR	2629821	Identifier	o		2629766	1					
ANR	2629822	ShiftExpression	rd << 8		2629766	1		<<			
ANR	2629823	Identifier	rd		2629766	0					
ANR	2629824	PrimaryExpression	8		2629766	1					
ANR	2629825	ExpressionStatement	ao -> o |= rn << 11	1204:2:24100:24117	2629766	1	True				
ANR	2629826	AssignmentExpression	ao -> o |= rn << 11		2629766	0		|=			
ANR	2629827	PtrMemberAccess	ao -> o		2629766	0					
ANR	2629828	Identifier	ao		2629766	0					
ANR	2629829	Identifier	o		2629766	1					
ANR	2629830	ShiftExpression	rn << 11		2629766	1		<<			
ANR	2629831	Identifier	rn		2629766	0					
ANR	2629832	PrimaryExpression	11		2629766	1					
ANR	2629833	ReturnStatement	return 2 ;	1205:2:24121:24129	2629766	2	True				
ANR	2629834	PrimaryExpression	2		2629766	0					
ANR	2629835	ReturnStatement	return 0 ;	1207:1:24135:24143	2629766	3	True				
ANR	2629836	PrimaryExpression	0		2629766	0					
ANR	2629837	ReturnType	static st8		2629766	1					
ANR	2629838	Identifier	std_16bit_2reg		2629766	2					
ANR	2629839	ParameterList	"ArmOpcode * ao , ut64 m"		2629766	3					
ANR	2629840	Parameter	ArmOpcode * ao	1199:26:23946:23958	2629766	0	True				
ANR	2629841	ParameterType	ArmOpcode *		2629766	0					
ANR	2629842	Identifier	ao		2629766	1					
ANR	2629843	Parameter	ut64 m	1199:41:23961:23966	2629766	1	True				
ANR	2629844	ParameterType	ut64		2629766	0					
ANR	2629845	Identifier	m		2629766	1					
ANR	2629846	CFGEntryNode	ENTRY		2629766		True				
ANR	2629847	CFGExitNode	EXIT		2629766		True				
ANR	2629848	Symbol	* ao -> a		2629766						
ANR	2629849	Symbol	rd		2629766						
ANR	2629850	Symbol	DOTW_BIT		2629766						
ANR	2629851	Symbol	getreg		2629766						
ANR	2629852	Symbol	* ao		2629766						
ANR	2629853	Symbol	* * ao		2629766						
ANR	2629854	Symbol	ao -> a		2629766						
ANR	2629855	Symbol	rn		2629766						
ANR	2629856	Symbol	ao -> o		2629766						
ANR	2629857	Symbol	m		2629766						
ANR	2629858	Symbol	ao		2629766						
ANR	2629859	Function	mem_16bit_2reg	1210:0:24148:24381							
ANR	2629860	FunctionDef	"mem_16bit_2reg (ArmOpcode * ao , ut64 m)"		2629859	0					
ANR	2629861	CompoundStatement		1210:49:24197:24381	2629859	0					
ANR	2629862	IdentifierDeclStatement	ut8 rd = getreg ( ao -> a [ 0 ] ) ;	1211:1:24200:24226	2629859	0	True				
ANR	2629863	IdentifierDecl	rd = getreg ( ao -> a [ 0 ] )		2629859	0					
ANR	2629864	IdentifierDeclType	ut8		2629859	0					
ANR	2629865	Identifier	rd		2629859	1					
ANR	2629866	AssignmentExpression	rd = getreg ( ao -> a [ 0 ] )		2629859	2		=			
ANR	2629867	Identifier	rd		2629859	0					
ANR	2629868	CallExpression	getreg ( ao -> a [ 0 ] )		2629859	1					
ANR	2629869	Callee	getreg		2629859	0					
ANR	2629870	Identifier	getreg		2629859	0					
ANR	2629871	ArgumentList	ao -> a [ 0 ]		2629859	1					
ANR	2629872	Argument	ao -> a [ 0 ]		2629859	0					
ANR	2629873	ArrayIndexing	ao -> a [ 0 ]		2629859	0					
ANR	2629874	PtrMemberAccess	ao -> a		2629859	0					
ANR	2629875	Identifier	ao		2629859	0					
ANR	2629876	Identifier	a		2629859	1					
ANR	2629877	PrimaryExpression	0		2629859	1					
ANR	2629878	IdentifierDeclStatement	ut8 rn = getregmemstart ( ao -> a [ 1 ] ) ;	1212:1:24229:24263	2629859	1	True				
ANR	2629879	IdentifierDecl	rn = getregmemstart ( ao -> a [ 1 ] )		2629859	0					
ANR	2629880	IdentifierDeclType	ut8		2629859	0					
ANR	2629881	Identifier	rn		2629859	1					
ANR	2629882	AssignmentExpression	rn = getregmemstart ( ao -> a [ 1 ] )		2629859	2		=			
ANR	2629883	Identifier	rn		2629859	0					
ANR	2629884	CallExpression	getregmemstart ( ao -> a [ 1 ] )		2629859	1					
ANR	2629885	Callee	getregmemstart		2629859	0					
ANR	2629886	Identifier	getregmemstart		2629859	0					
ANR	2629887	ArgumentList	ao -> a [ 1 ]		2629859	1					
ANR	2629888	Argument	ao -> a [ 1 ]		2629859	0					
ANR	2629889	ArrayIndexing	ao -> a [ 1 ]		2629859	0					
ANR	2629890	PtrMemberAccess	ao -> a		2629859	0					
ANR	2629891	Identifier	ao		2629859	0					
ANR	2629892	Identifier	a		2629859	1					
ANR	2629893	PrimaryExpression	1		2629859	1					
ANR	2629894	IfStatement	if ( ( rd < 8 ) && ( rn < 8 ) && ! ( m & DOTW_BIT ) )		2629859	2					
ANR	2629895	Condition	( rd < 8 ) && ( rn < 8 ) && ! ( m & DOTW_BIT )	1213:6:24271:24309	2629859	0	True				
ANR	2629896	AndExpression	( rd < 8 ) && ( rn < 8 ) && ! ( m & DOTW_BIT )		2629859	0		&&			
ANR	2629897	RelationalExpression	rd < 8		2629859	0		<			
ANR	2629898	Identifier	rd		2629859	0					
ANR	2629899	PrimaryExpression	8		2629859	1					
ANR	2629900	AndExpression	( rn < 8 ) && ! ( m & DOTW_BIT )		2629859	1		&&			
ANR	2629901	RelationalExpression	rn < 8		2629859	0		<			
ANR	2629902	Identifier	rn		2629859	0					
ANR	2629903	PrimaryExpression	8		2629859	1					
ANR	2629904	UnaryOperationExpression	! ( m & DOTW_BIT )		2629859	1					
ANR	2629905	UnaryOperator	!		2629859	0					
ANR	2629906	BitAndExpression	m & DOTW_BIT		2629859	1		&			
ANR	2629907	Identifier	m		2629859	0					
ANR	2629908	Identifier	DOTW_BIT		2629859	1					
ANR	2629909	CompoundStatement		4:47:114:114	2629859	1					
ANR	2629910	ExpressionStatement	ao -> o |= rd << 8	1214:2:24316:24332	2629859	0	True				
ANR	2629911	AssignmentExpression	ao -> o |= rd << 8		2629859	0		|=			
ANR	2629912	PtrMemberAccess	ao -> o		2629859	0					
ANR	2629913	Identifier	ao		2629859	0					
ANR	2629914	Identifier	o		2629859	1					
ANR	2629915	ShiftExpression	rd << 8		2629859	1		<<			
ANR	2629916	Identifier	rd		2629859	0					
ANR	2629917	PrimaryExpression	8		2629859	1					
ANR	2629918	ExpressionStatement	ao -> o |= rn << 11	1215:2:24336:24353	2629859	1	True				
ANR	2629919	AssignmentExpression	ao -> o |= rn << 11		2629859	0		|=			
ANR	2629920	PtrMemberAccess	ao -> o		2629859	0					
ANR	2629921	Identifier	ao		2629859	0					
ANR	2629922	Identifier	o		2629859	1					
ANR	2629923	ShiftExpression	rn << 11		2629859	1		<<			
ANR	2629924	Identifier	rn		2629859	0					
ANR	2629925	PrimaryExpression	11		2629859	1					
ANR	2629926	ReturnStatement	return 2 ;	1216:2:24357:24365	2629859	2	True				
ANR	2629927	PrimaryExpression	2		2629859	0					
ANR	2629928	ReturnStatement	return 0 ;	1218:1:24371:24379	2629859	3	True				
ANR	2629929	PrimaryExpression	0		2629859	0					
ANR	2629930	ReturnType	static st8		2629859	1					
ANR	2629931	Identifier	mem_16bit_2reg		2629859	2					
ANR	2629932	ParameterList	"ArmOpcode * ao , ut64 m"		2629859	3					
ANR	2629933	Parameter	ArmOpcode * ao	1210:26:24174:24186	2629859	0	True				
ANR	2629934	ParameterType	ArmOpcode *		2629859	0					
ANR	2629935	Identifier	ao		2629859	1					
ANR	2629936	Parameter	ut64 m	1210:41:24189:24194	2629859	1	True				
ANR	2629937	ParameterType	ut64		2629859	0					
ANR	2629938	Identifier	m		2629859	1					
ANR	2629939	CFGEntryNode	ENTRY		2629859		True				
ANR	2629940	CFGExitNode	EXIT		2629859		True				
ANR	2629941	Symbol	* ao -> a		2629859						
ANR	2629942	Symbol	rd		2629859						
ANR	2629943	Symbol	DOTW_BIT		2629859						
ANR	2629944	Symbol	getreg		2629859						
ANR	2629945	Symbol	* ao		2629859						
ANR	2629946	Symbol	* * ao		2629859						
ANR	2629947	Symbol	ao -> a		2629859						
ANR	2629948	Symbol	rn		2629859						
ANR	2629949	Symbol	ao -> o		2629859						
ANR	2629950	Symbol	m		2629859						
ANR	2629951	Symbol	getregmemstart		2629859						
ANR	2629952	Symbol	ao		2629859						
ANR	2629953	Function	std_32bit_2reg	1221:0:24384:24838							
ANR	2629954	FunctionDef	"std_32bit_2reg (ArmOpcode * ao , ut64 m , bool shift)"		2629953	0					
ANR	2629955	CompoundStatement		1221:61:24445:24838	2629953	0					
ANR	2629956	IdentifierDeclStatement	ut8 rd = getreg ( ao -> a [ 0 ] ) ;	1222:1:24448:24474	2629953	0	True				
ANR	2629957	IdentifierDecl	rd = getreg ( ao -> a [ 0 ] )		2629953	0					
ANR	2629958	IdentifierDeclType	ut8		2629953	0					
ANR	2629959	Identifier	rd		2629953	1					
ANR	2629960	AssignmentExpression	rd = getreg ( ao -> a [ 0 ] )		2629953	2		=			
ANR	2629961	Identifier	rd		2629953	0					
ANR	2629962	CallExpression	getreg ( ao -> a [ 0 ] )		2629953	1					
ANR	2629963	Callee	getreg		2629953	0					
ANR	2629964	Identifier	getreg		2629953	0					
ANR	2629965	ArgumentList	ao -> a [ 0 ]		2629953	1					
ANR	2629966	Argument	ao -> a [ 0 ]		2629953	0					
ANR	2629967	ArrayIndexing	ao -> a [ 0 ]		2629953	0					
ANR	2629968	PtrMemberAccess	ao -> a		2629953	0					
ANR	2629969	Identifier	ao		2629953	0					
ANR	2629970	Identifier	a		2629953	1					
ANR	2629971	PrimaryExpression	0		2629953	1					
ANR	2629972	IdentifierDeclStatement	ut8 rn = getreg ( ao -> a [ 1 ] ) ;	1223:1:24477:24503	2629953	1	True				
ANR	2629973	IdentifierDecl	rn = getreg ( ao -> a [ 1 ] )		2629953	0					
ANR	2629974	IdentifierDeclType	ut8		2629953	0					
ANR	2629975	Identifier	rn		2629953	1					
ANR	2629976	AssignmentExpression	rn = getreg ( ao -> a [ 1 ] )		2629953	2		=			
ANR	2629977	Identifier	rn		2629953	0					
ANR	2629978	CallExpression	getreg ( ao -> a [ 1 ] )		2629953	1					
ANR	2629979	Callee	getreg		2629953	0					
ANR	2629980	Identifier	getreg		2629953	0					
ANR	2629981	ArgumentList	ao -> a [ 1 ]		2629953	1					
ANR	2629982	Argument	ao -> a [ 1 ]		2629953	0					
ANR	2629983	ArrayIndexing	ao -> a [ 1 ]		2629953	0					
ANR	2629984	PtrMemberAccess	ao -> a		2629953	0					
ANR	2629985	Identifier	ao		2629953	0					
ANR	2629986	Identifier	a		2629953	1					
ANR	2629987	PrimaryExpression	1		2629953	1					
ANR	2629988	IfStatement	if ( ( rd > 15 ) || ( rn > 15 ) || ( m & DOTN_BIT ) )		2629953	2					
ANR	2629989	Condition	( rd > 15 ) || ( rn > 15 ) || ( m & DOTN_BIT )	1224:5:24510:24549	2629953	0	True				
ANR	2629990	OrExpression	( rd > 15 ) || ( rn > 15 ) || ( m & DOTN_BIT )		2629953	0		||			
ANR	2629991	RelationalExpression	rd > 15		2629953	0		>			
ANR	2629992	Identifier	rd		2629953	0					
ANR	2629993	PrimaryExpression	15		2629953	1					
ANR	2629994	OrExpression	( rn > 15 ) || ( m & DOTN_BIT )		2629953	1		||			
ANR	2629995	RelationalExpression	rn > 15		2629953	0		>			
ANR	2629996	Identifier	rn		2629953	0					
ANR	2629997	PrimaryExpression	15		2629953	1					
ANR	2629998	BitAndExpression	m & DOTN_BIT		2629953	1		&			
ANR	2629999	Identifier	m		2629953	0					
ANR	2630000	Identifier	DOTN_BIT		2629953	1					
ANR	2630001	CompoundStatement		4:47:106:106	2629953	1					
ANR	2630002	ReturnStatement	return - 1 ;	1225:2:24556:24565	2629953	0	True				
ANR	2630003	UnaryOperationExpression	- 1		2629953	0					
ANR	2630004	UnaryOperator	-		2629953	0					
ANR	2630005	PrimaryExpression	1		2629953	1					
ANR	2630006	IfStatement	if ( m & S_BIT )		2629953	3					
ANR	2630007	Condition	m & S_BIT	1227:5:24575:24583	2629953	0	True				
ANR	2630008	BitAndExpression	m & S_BIT		2629953	0		&			
ANR	2630009	Identifier	m		2629953	0					
ANR	2630010	Identifier	S_BIT		2629953	1					
ANR	2630011	CompoundStatement		7:16:140:140	2629953	1					
ANR	2630012	ExpressionStatement	ao -> o |= 1 << 28	1228:2:24590:24606	2629953	0	True				
ANR	2630013	AssignmentExpression	ao -> o |= 1 << 28		2629953	0		|=			
ANR	2630014	PtrMemberAccess	ao -> o		2629953	0					
ANR	2630015	Identifier	ao		2629953	0					
ANR	2630016	Identifier	o		2629953	1					
ANR	2630017	ShiftExpression	1 << 28		2629953	1		<<			
ANR	2630018	PrimaryExpression	1		2629953	0					
ANR	2630019	PrimaryExpression	28		2629953	1					
ANR	2630020	IfStatement	if ( shift )		2629953	4					
ANR	2630021	Condition	shift	1230:5:24616:24620	2629953	0	True				
ANR	2630022	Identifier	shift		2629953	0					
ANR	2630023	CompoundStatement		12:2:196:237	2629953	1					
ANR	2630024	ExpressionStatement	err = false	1231:2:24627:24638	2629953	0	True				
ANR	2630025	AssignmentExpression	err = false		2629953	0		=			
ANR	2630026	Identifier	err		2629953	0					
ANR	2630027	Identifier	false		2629953	1					
ANR	2630028	IdentifierDeclStatement	ut32 shiftnum = thumb_getshift ( ao -> a [ 2 ] ) ;	1232:2:24642:24683	2629953	1	True				
ANR	2630029	IdentifierDecl	shiftnum = thumb_getshift ( ao -> a [ 2 ] )		2629953	0					
ANR	2630030	IdentifierDeclType	ut32		2629953	0					
ANR	2630031	Identifier	shiftnum		2629953	1					
ANR	2630032	AssignmentExpression	shiftnum = thumb_getshift ( ao -> a [ 2 ] )		2629953	2		=			
ANR	2630033	Identifier	shiftnum		2629953	0					
ANR	2630034	CallExpression	thumb_getshift ( ao -> a [ 2 ] )		2629953	1					
ANR	2630035	Callee	thumb_getshift		2629953	0					
ANR	2630036	Identifier	thumb_getshift		2629953	0					
ANR	2630037	ArgumentList	ao -> a [ 2 ]		2629953	1					
ANR	2630038	Argument	ao -> a [ 2 ]		2629953	0					
ANR	2630039	ArrayIndexing	ao -> a [ 2 ]		2629953	0					
ANR	2630040	PtrMemberAccess	ao -> a		2629953	0					
ANR	2630041	Identifier	ao		2629953	0					
ANR	2630042	Identifier	a		2629953	1					
ANR	2630043	PrimaryExpression	2		2629953	1					
ANR	2630044	IfStatement	if ( err )		2629953	2					
ANR	2630045	Condition	err	1233:6:24691:24693	2629953	0	True				
ANR	2630046	Identifier	err		2629953	0					
ANR	2630047	CompoundStatement		13:11:250:250	2629953	1					
ANR	2630048	ReturnStatement	return - 1 ;	1234:3:24701:24710	2629953	0	True				
ANR	2630049	UnaryOperationExpression	- 1		2629953	0					
ANR	2630050	UnaryOperator	-		2629953	0					
ANR	2630051	PrimaryExpression	1		2629953	1					
ANR	2630052	ExpressionStatement	ao -> o |= shiftnum	1236:2:24718:24735	2629953	3	True				
ANR	2630053	AssignmentExpression	ao -> o |= shiftnum		2629953	0		|=			
ANR	2630054	PtrMemberAccess	ao -> o		2629953	0					
ANR	2630055	Identifier	ao		2629953	0					
ANR	2630056	Identifier	o		2629953	1					
ANR	2630057	Identifier	shiftnum		2629953	1					
ANR	2630058	ExpressionStatement	ao -> o |= rd << 24	1237:2:24739:24756	2629953	4	True				
ANR	2630059	AssignmentExpression	ao -> o |= rd << 24		2629953	0		|=			
ANR	2630060	PtrMemberAccess	ao -> o		2629953	0					
ANR	2630061	Identifier	ao		2629953	0					
ANR	2630062	Identifier	o		2629953	1					
ANR	2630063	ShiftExpression	rd << 24		2629953	1		<<			
ANR	2630064	Identifier	rd		2629953	0					
ANR	2630065	PrimaryExpression	24		2629953	1					
ANR	2630066	ExpressionStatement	ao -> o |= rn << 8	1238:2:24760:24776	2629953	5	True				
ANR	2630067	AssignmentExpression	ao -> o |= rn << 8		2629953	0		|=			
ANR	2630068	PtrMemberAccess	ao -> o		2629953	0					
ANR	2630069	Identifier	ao		2629953	0					
ANR	2630070	Identifier	o		2629953	1					
ANR	2630071	ShiftExpression	rn << 8		2629953	1		<<			
ANR	2630072	Identifier	rn		2629953	0					
ANR	2630073	PrimaryExpression	8		2629953	1					
ANR	2630074	ElseStatement	else		2629953	0					
ANR	2630075	CompoundStatement		19:8:340:340	2629953	0					
ANR	2630076	ExpressionStatement	ao -> o |= rd	1240:2:24790:24801	2629953	0	True				
ANR	2630077	AssignmentExpression	ao -> o |= rd		2629953	0		|=			
ANR	2630078	PtrMemberAccess	ao -> o		2629953	0					
ANR	2630079	Identifier	ao		2629953	0					
ANR	2630080	Identifier	o		2629953	1					
ANR	2630081	Identifier	rd		2629953	1					
ANR	2630082	ExpressionStatement	ao -> o |= rn << 24	1241:2:24805:24822	2629953	1	True				
ANR	2630083	AssignmentExpression	ao -> o |= rn << 24		2629953	0		|=			
ANR	2630084	PtrMemberAccess	ao -> o		2629953	0					
ANR	2630085	Identifier	ao		2629953	0					
ANR	2630086	Identifier	o		2629953	1					
ANR	2630087	ShiftExpression	rn << 24		2629953	1		<<			
ANR	2630088	Identifier	rn		2629953	0					
ANR	2630089	PrimaryExpression	24		2629953	1					
ANR	2630090	ReturnStatement	return 4 ;	1243:1:24828:24836	2629953	5	True				
ANR	2630091	PrimaryExpression	4		2629953	0					
ANR	2630092	ReturnType	static st8		2629953	1					
ANR	2630093	Identifier	std_32bit_2reg		2629953	2					
ANR	2630094	ParameterList	"ArmOpcode * ao , ut64 m , bool shift"		2629953	3					
ANR	2630095	Parameter	ArmOpcode * ao	1221:26:24410:24422	2629953	0	True				
ANR	2630096	ParameterType	ArmOpcode *		2629953	0					
ANR	2630097	Identifier	ao		2629953	1					
ANR	2630098	Parameter	ut64 m	1221:41:24425:24430	2629953	1	True				
ANR	2630099	ParameterType	ut64		2629953	0					
ANR	2630100	Identifier	m		2629953	1					
ANR	2630101	Parameter	bool shift	1221:49:24433:24442	2629953	2	True				
ANR	2630102	ParameterType	bool		2629953	0					
ANR	2630103	Identifier	shift		2629953	1					
ANR	2630104	CFGEntryNode	ENTRY		2629953		True				
ANR	2630105	CFGExitNode	EXIT		2629953		True				
ANR	2630106	Symbol	err		2629953						
ANR	2630107	Symbol	thumb_getshift		2629953						
ANR	2630108	Symbol	shift		2629953						
ANR	2630109	Symbol	false		2629953						
ANR	2630110	Symbol	shiftnum		2629953						
ANR	2630111	Symbol	ao -> o		2629953						
ANR	2630112	Symbol	m		2629953						
ANR	2630113	Symbol	ao		2629953						
ANR	2630114	Symbol	* ao -> a		2629953						
ANR	2630115	Symbol	rd		2629953						
ANR	2630116	Symbol	getreg		2629953						
ANR	2630117	Symbol	* ao		2629953						
ANR	2630118	Symbol	* * ao		2629953						
ANR	2630119	Symbol	DOTN_BIT		2629953						
ANR	2630120	Symbol	ao -> a		2629953						
ANR	2630121	Symbol	rn		2629953						
ANR	2630122	Symbol	S_BIT		2629953						
ANR	2630123	Function	mem_32bit_2reg	1246:0:24841:25073							
ANR	2630124	FunctionDef	"mem_32bit_2reg (ArmOpcode * ao , ut64 m)"		2630123	0					
ANR	2630125	CompoundStatement		1246:49:24890:25073	2630123	0					
ANR	2630126	IdentifierDeclStatement	ut8 rd = getreg ( ao -> a [ 0 ] ) ;	1247:1:24893:24919	2630123	0	True				
ANR	2630127	IdentifierDecl	rd = getreg ( ao -> a [ 0 ] )		2630123	0					
ANR	2630128	IdentifierDeclType	ut8		2630123	0					
ANR	2630129	Identifier	rd		2630123	1					
ANR	2630130	AssignmentExpression	rd = getreg ( ao -> a [ 0 ] )		2630123	2		=			
ANR	2630131	Identifier	rd		2630123	0					
ANR	2630132	CallExpression	getreg ( ao -> a [ 0 ] )		2630123	1					
ANR	2630133	Callee	getreg		2630123	0					
ANR	2630134	Identifier	getreg		2630123	0					
ANR	2630135	ArgumentList	ao -> a [ 0 ]		2630123	1					
ANR	2630136	Argument	ao -> a [ 0 ]		2630123	0					
ANR	2630137	ArrayIndexing	ao -> a [ 0 ]		2630123	0					
ANR	2630138	PtrMemberAccess	ao -> a		2630123	0					
ANR	2630139	Identifier	ao		2630123	0					
ANR	2630140	Identifier	a		2630123	1					
ANR	2630141	PrimaryExpression	0		2630123	1					
ANR	2630142	IdentifierDeclStatement	ut8 rn = getregmemstart ( ao -> a [ 1 ] ) ;	1248:1:24922:24956	2630123	1	True				
ANR	2630143	IdentifierDecl	rn = getregmemstart ( ao -> a [ 1 ] )		2630123	0					
ANR	2630144	IdentifierDeclType	ut8		2630123	0					
ANR	2630145	Identifier	rn		2630123	1					
ANR	2630146	AssignmentExpression	rn = getregmemstart ( ao -> a [ 1 ] )		2630123	2		=			
ANR	2630147	Identifier	rn		2630123	0					
ANR	2630148	CallExpression	getregmemstart ( ao -> a [ 1 ] )		2630123	1					
ANR	2630149	Callee	getregmemstart		2630123	0					
ANR	2630150	Identifier	getregmemstart		2630123	0					
ANR	2630151	ArgumentList	ao -> a [ 1 ]		2630123	1					
ANR	2630152	Argument	ao -> a [ 1 ]		2630123	0					
ANR	2630153	ArrayIndexing	ao -> a [ 1 ]		2630123	0					
ANR	2630154	PtrMemberAccess	ao -> a		2630123	0					
ANR	2630155	Identifier	ao		2630123	0					
ANR	2630156	Identifier	a		2630123	1					
ANR	2630157	PrimaryExpression	1		2630123	1					
ANR	2630158	IfStatement	if ( ( rd > 15 ) || ( rn > 15 ) || ( m & DOTN_BIT ) )		2630123	2					
ANR	2630159	Condition	( rd > 15 ) || ( rn > 15 ) || ( m & DOTN_BIT )	1249:5:24963:25002	2630123	0	True				
ANR	2630160	OrExpression	( rd > 15 ) || ( rn > 15 ) || ( m & DOTN_BIT )		2630123	0		||			
ANR	2630161	RelationalExpression	rd > 15		2630123	0		>			
ANR	2630162	Identifier	rd		2630123	0					
ANR	2630163	PrimaryExpression	15		2630123	1					
ANR	2630164	OrExpression	( rn > 15 ) || ( m & DOTN_BIT )		2630123	1		||			
ANR	2630165	RelationalExpression	rn > 15		2630123	0		>			
ANR	2630166	Identifier	rn		2630123	0					
ANR	2630167	PrimaryExpression	15		2630123	1					
ANR	2630168	BitAndExpression	m & DOTN_BIT		2630123	1		&			
ANR	2630169	Identifier	m		2630123	0					
ANR	2630170	Identifier	DOTN_BIT		2630123	1					
ANR	2630171	CompoundStatement		4:47:114:114	2630123	1					
ANR	2630172	ReturnStatement	return - 1 ;	1250:2:25009:25018	2630123	0	True				
ANR	2630173	UnaryOperationExpression	- 1		2630123	0					
ANR	2630174	UnaryOperator	-		2630123	0					
ANR	2630175	PrimaryExpression	1		2630123	1					
ANR	2630176	ExpressionStatement	ao -> o |= rd << 4	1252:1:25024:25040	2630123	3	True				
ANR	2630177	AssignmentExpression	ao -> o |= rd << 4		2630123	0		|=			
ANR	2630178	PtrMemberAccess	ao -> o		2630123	0					
ANR	2630179	Identifier	ao		2630123	0					
ANR	2630180	Identifier	o		2630123	1					
ANR	2630181	ShiftExpression	rd << 4		2630123	1		<<			
ANR	2630182	Identifier	rd		2630123	0					
ANR	2630183	PrimaryExpression	4		2630123	1					
ANR	2630184	ExpressionStatement	ao -> o |= rn << 24	1253:1:25043:25060	2630123	4	True				
ANR	2630185	AssignmentExpression	ao -> o |= rn << 24		2630123	0		|=			
ANR	2630186	PtrMemberAccess	ao -> o		2630123	0					
ANR	2630187	Identifier	ao		2630123	0					
ANR	2630188	Identifier	o		2630123	1					
ANR	2630189	ShiftExpression	rn << 24		2630123	1		<<			
ANR	2630190	Identifier	rn		2630123	0					
ANR	2630191	PrimaryExpression	24		2630123	1					
ANR	2630192	ReturnStatement	return 4 ;	1254:1:25063:25071	2630123	5	True				
ANR	2630193	PrimaryExpression	4		2630123	0					
ANR	2630194	ReturnType	static st8		2630123	1					
ANR	2630195	Identifier	mem_32bit_2reg		2630123	2					
ANR	2630196	ParameterList	"ArmOpcode * ao , ut64 m"		2630123	3					
ANR	2630197	Parameter	ArmOpcode * ao	1246:26:24867:24879	2630123	0	True				
ANR	2630198	ParameterType	ArmOpcode *		2630123	0					
ANR	2630199	Identifier	ao		2630123	1					
ANR	2630200	Parameter	ut64 m	1246:41:24882:24887	2630123	1	True				
ANR	2630201	ParameterType	ut64		2630123	0					
ANR	2630202	Identifier	m		2630123	1					
ANR	2630203	CFGEntryNode	ENTRY		2630123		True				
ANR	2630204	CFGExitNode	EXIT		2630123		True				
ANR	2630205	Symbol	* ao -> a		2630123						
ANR	2630206	Symbol	rd		2630123						
ANR	2630207	Symbol	getreg		2630123						
ANR	2630208	Symbol	* ao		2630123						
ANR	2630209	Symbol	* * ao		2630123						
ANR	2630210	Symbol	DOTN_BIT		2630123						
ANR	2630211	Symbol	ao -> a		2630123						
ANR	2630212	Symbol	rn		2630123						
ANR	2630213	Symbol	ao -> o		2630123						
ANR	2630214	Symbol	m		2630123						
ANR	2630215	Symbol	getregmemstart		2630123						
ANR	2630216	Symbol	ao		2630123						
ANR	2630217	Function	std_32bit_3reg	1257:0:25076:25538							
ANR	2630218	FunctionDef	"std_32bit_3reg (ArmOpcode * ao , ut64 m , bool shift)"		2630217	0					
ANR	2630219	CompoundStatement		1257:61:25137:25538	2630217	0					
ANR	2630220	IdentifierDeclStatement	ut8 rd = getreg ( ao -> a [ 0 ] ) ;	1258:1:25140:25166	2630217	0	True				
ANR	2630221	IdentifierDecl	rd = getreg ( ao -> a [ 0 ] )		2630217	0					
ANR	2630222	IdentifierDeclType	ut8		2630217	0					
ANR	2630223	Identifier	rd		2630217	1					
ANR	2630224	AssignmentExpression	rd = getreg ( ao -> a [ 0 ] )		2630217	2		=			
ANR	2630225	Identifier	rd		2630217	0					
ANR	2630226	CallExpression	getreg ( ao -> a [ 0 ] )		2630217	1					
ANR	2630227	Callee	getreg		2630217	0					
ANR	2630228	Identifier	getreg		2630217	0					
ANR	2630229	ArgumentList	ao -> a [ 0 ]		2630217	1					
ANR	2630230	Argument	ao -> a [ 0 ]		2630217	0					
ANR	2630231	ArrayIndexing	ao -> a [ 0 ]		2630217	0					
ANR	2630232	PtrMemberAccess	ao -> a		2630217	0					
ANR	2630233	Identifier	ao		2630217	0					
ANR	2630234	Identifier	a		2630217	1					
ANR	2630235	PrimaryExpression	0		2630217	1					
ANR	2630236	IdentifierDeclStatement	ut8 rn = getreg ( ao -> a [ 1 ] ) ;	1259:1:25169:25195	2630217	1	True				
ANR	2630237	IdentifierDecl	rn = getreg ( ao -> a [ 1 ] )		2630217	0					
ANR	2630238	IdentifierDeclType	ut8		2630217	0					
ANR	2630239	Identifier	rn		2630217	1					
ANR	2630240	AssignmentExpression	rn = getreg ( ao -> a [ 1 ] )		2630217	2		=			
ANR	2630241	Identifier	rn		2630217	0					
ANR	2630242	CallExpression	getreg ( ao -> a [ 1 ] )		2630217	1					
ANR	2630243	Callee	getreg		2630217	0					
ANR	2630244	Identifier	getreg		2630217	0					
ANR	2630245	ArgumentList	ao -> a [ 1 ]		2630217	1					
ANR	2630246	Argument	ao -> a [ 1 ]		2630217	0					
ANR	2630247	ArrayIndexing	ao -> a [ 1 ]		2630217	0					
ANR	2630248	PtrMemberAccess	ao -> a		2630217	0					
ANR	2630249	Identifier	ao		2630217	0					
ANR	2630250	Identifier	a		2630217	1					
ANR	2630251	PrimaryExpression	1		2630217	1					
ANR	2630252	IdentifierDeclStatement	ut8 rm = getreg ( ao -> a [ 2 ] ) ;	1260:1:25198:25224	2630217	2	True				
ANR	2630253	IdentifierDecl	rm = getreg ( ao -> a [ 2 ] )		2630217	0					
ANR	2630254	IdentifierDeclType	ut8		2630217	0					
ANR	2630255	Identifier	rm		2630217	1					
ANR	2630256	AssignmentExpression	rm = getreg ( ao -> a [ 2 ] )		2630217	2		=			
ANR	2630257	Identifier	rm		2630217	0					
ANR	2630258	CallExpression	getreg ( ao -> a [ 2 ] )		2630217	1					
ANR	2630259	Callee	getreg		2630217	0					
ANR	2630260	Identifier	getreg		2630217	0					
ANR	2630261	ArgumentList	ao -> a [ 2 ]		2630217	1					
ANR	2630262	Argument	ao -> a [ 2 ]		2630217	0					
ANR	2630263	ArrayIndexing	ao -> a [ 2 ]		2630217	0					
ANR	2630264	PtrMemberAccess	ao -> a		2630217	0					
ANR	2630265	Identifier	ao		2630217	0					
ANR	2630266	Identifier	a		2630217	1					
ANR	2630267	PrimaryExpression	2		2630217	1					
ANR	2630268	IfStatement	if ( ( rd > 15 ) || ( rn > 15 ) || ( rm > 15 ) || ( m & DOTN_BIT ) )		2630217	3					
ANR	2630269	Condition	( rd > 15 ) || ( rn > 15 ) || ( rm > 15 ) || ( m & DOTN_BIT )	1261:5:25231:25283	2630217	0	True				
ANR	2630270	OrExpression	( rd > 15 ) || ( rn > 15 ) || ( rm > 15 ) || ( m & DOTN_BIT )		2630217	0		||			
ANR	2630271	RelationalExpression	rd > 15		2630217	0		>			
ANR	2630272	Identifier	rd		2630217	0					
ANR	2630273	PrimaryExpression	15		2630217	1					
ANR	2630274	OrExpression	( rn > 15 ) || ( rm > 15 ) || ( m & DOTN_BIT )		2630217	1		||			
ANR	2630275	RelationalExpression	rn > 15		2630217	0		>			
ANR	2630276	Identifier	rn		2630217	0					
ANR	2630277	PrimaryExpression	15		2630217	1					
ANR	2630278	OrExpression	( rm > 15 ) || ( m & DOTN_BIT )		2630217	1		||			
ANR	2630279	RelationalExpression	rm > 15		2630217	0		>			
ANR	2630280	Identifier	rm		2630217	0					
ANR	2630281	PrimaryExpression	15		2630217	1					
ANR	2630282	BitAndExpression	m & DOTN_BIT		2630217	1		&			
ANR	2630283	Identifier	m		2630217	0					
ANR	2630284	Identifier	DOTN_BIT		2630217	1					
ANR	2630285	CompoundStatement		5:60:148:148	2630217	1					
ANR	2630286	ReturnStatement	return - 1 ;	1262:2:25290:25299	2630217	0	True				
ANR	2630287	UnaryOperationExpression	- 1		2630217	0					
ANR	2630288	UnaryOperator	-		2630217	0					
ANR	2630289	PrimaryExpression	1		2630217	1					
ANR	2630290	ExpressionStatement	ao -> o |= rd	1264:1:25305:25316	2630217	4	True				
ANR	2630291	AssignmentExpression	ao -> o |= rd		2630217	0		|=			
ANR	2630292	PtrMemberAccess	ao -> o		2630217	0					
ANR	2630293	Identifier	ao		2630217	0					
ANR	2630294	Identifier	o		2630217	1					
ANR	2630295	Identifier	rd		2630217	1					
ANR	2630296	ExpressionStatement	ao -> o |= rn << 24	1265:1:25319:25336	2630217	5	True				
ANR	2630297	AssignmentExpression	ao -> o |= rn << 24		2630217	0		|=			
ANR	2630298	PtrMemberAccess	ao -> o		2630217	0					
ANR	2630299	Identifier	ao		2630217	0					
ANR	2630300	Identifier	o		2630217	1					
ANR	2630301	ShiftExpression	rn << 24		2630217	1		<<			
ANR	2630302	Identifier	rn		2630217	0					
ANR	2630303	PrimaryExpression	24		2630217	1					
ANR	2630304	ExpressionStatement	ao -> o |= rm << 8	1266:1:25339:25355	2630217	6	True				
ANR	2630305	AssignmentExpression	ao -> o |= rm << 8		2630217	0		|=			
ANR	2630306	PtrMemberAccess	ao -> o		2630217	0					
ANR	2630307	Identifier	ao		2630217	0					
ANR	2630308	Identifier	o		2630217	1					
ANR	2630309	ShiftExpression	rm << 8		2630217	1		<<			
ANR	2630310	Identifier	rm		2630217	0					
ANR	2630311	PrimaryExpression	8		2630217	1					
ANR	2630312	IfStatement	if ( shift )		2630217	7					
ANR	2630313	Condition	shift	1267:5:25362:25366	2630217	0	True				
ANR	2630314	Identifier	shift		2630217	0					
ANR	2630315	CompoundStatement		13:2:250:291	2630217	1					
ANR	2630316	ExpressionStatement	err = false	1268:2:25373:25384	2630217	0	True				
ANR	2630317	AssignmentExpression	err = false		2630217	0		=			
ANR	2630318	Identifier	err		2630217	0					
ANR	2630319	Identifier	false		2630217	1					
ANR	2630320	IdentifierDeclStatement	ut32 shiftnum = thumb_getshift ( ao -> a [ 3 ] ) ;	1269:2:25388:25429	2630217	1	True				
ANR	2630321	IdentifierDecl	shiftnum = thumb_getshift ( ao -> a [ 3 ] )		2630217	0					
ANR	2630322	IdentifierDeclType	ut32		2630217	0					
ANR	2630323	Identifier	shiftnum		2630217	1					
ANR	2630324	AssignmentExpression	shiftnum = thumb_getshift ( ao -> a [ 3 ] )		2630217	2		=			
ANR	2630325	Identifier	shiftnum		2630217	0					
ANR	2630326	CallExpression	thumb_getshift ( ao -> a [ 3 ] )		2630217	1					
ANR	2630327	Callee	thumb_getshift		2630217	0					
ANR	2630328	Identifier	thumb_getshift		2630217	0					
ANR	2630329	ArgumentList	ao -> a [ 3 ]		2630217	1					
ANR	2630330	Argument	ao -> a [ 3 ]		2630217	0					
ANR	2630331	ArrayIndexing	ao -> a [ 3 ]		2630217	0					
ANR	2630332	PtrMemberAccess	ao -> a		2630217	0					
ANR	2630333	Identifier	ao		2630217	0					
ANR	2630334	Identifier	a		2630217	1					
ANR	2630335	PrimaryExpression	3		2630217	1					
ANR	2630336	IfStatement	if ( err )		2630217	2					
ANR	2630337	Condition	err	1270:6:25437:25439	2630217	0	True				
ANR	2630338	Identifier	err		2630217	0					
ANR	2630339	CompoundStatement		14:11:304:304	2630217	1					
ANR	2630340	ReturnStatement	return - 1 ;	1271:3:25447:25456	2630217	0	True				
ANR	2630341	UnaryOperationExpression	- 1		2630217	0					
ANR	2630342	UnaryOperator	-		2630217	0					
ANR	2630343	PrimaryExpression	1		2630217	1					
ANR	2630344	ExpressionStatement	ao -> o |= shiftnum	1273:2:25464:25481	2630217	3	True				
ANR	2630345	AssignmentExpression	ao -> o |= shiftnum		2630217	0		|=			
ANR	2630346	PtrMemberAccess	ao -> o		2630217	0					
ANR	2630347	Identifier	ao		2630217	0					
ANR	2630348	Identifier	o		2630217	1					
ANR	2630349	Identifier	shiftnum		2630217	1					
ANR	2630350	IfStatement	if ( m & S_BIT )		2630217	8					
ANR	2630351	Condition	m & S_BIT	1275:5:25491:25499	2630217	0	True				
ANR	2630352	BitAndExpression	m & S_BIT		2630217	0		&			
ANR	2630353	Identifier	m		2630217	0					
ANR	2630354	Identifier	S_BIT		2630217	1					
ANR	2630355	CompoundStatement		19:16:364:364	2630217	1					
ANR	2630356	ExpressionStatement	ao -> o |= 1 << 28	1276:2:25506:25522	2630217	0	True				
ANR	2630357	AssignmentExpression	ao -> o |= 1 << 28		2630217	0		|=			
ANR	2630358	PtrMemberAccess	ao -> o		2630217	0					
ANR	2630359	Identifier	ao		2630217	0					
ANR	2630360	Identifier	o		2630217	1					
ANR	2630361	ShiftExpression	1 << 28		2630217	1		<<			
ANR	2630362	PrimaryExpression	1		2630217	0					
ANR	2630363	PrimaryExpression	28		2630217	1					
ANR	2630364	ReturnStatement	return 4 ;	1278:1:25528:25536	2630217	9	True				
ANR	2630365	PrimaryExpression	4		2630217	0					
ANR	2630366	ReturnType	static st8		2630217	1					
ANR	2630367	Identifier	std_32bit_3reg		2630217	2					
ANR	2630368	ParameterList	"ArmOpcode * ao , ut64 m , bool shift"		2630217	3					
ANR	2630369	Parameter	ArmOpcode * ao	1257:26:25102:25114	2630217	0	True				
ANR	2630370	ParameterType	ArmOpcode *		2630217	0					
ANR	2630371	Identifier	ao		2630217	1					
ANR	2630372	Parameter	ut64 m	1257:41:25117:25122	2630217	1	True				
ANR	2630373	ParameterType	ut64		2630217	0					
ANR	2630374	Identifier	m		2630217	1					
ANR	2630375	Parameter	bool shift	1257:49:25125:25134	2630217	2	True				
ANR	2630376	ParameterType	bool		2630217	0					
ANR	2630377	Identifier	shift		2630217	1					
ANR	2630378	CFGEntryNode	ENTRY		2630217		True				
ANR	2630379	CFGExitNode	EXIT		2630217		True				
ANR	2630380	Symbol	err		2630217						
ANR	2630381	Symbol	thumb_getshift		2630217						
ANR	2630382	Symbol	shift		2630217						
ANR	2630383	Symbol	false		2630217						
ANR	2630384	Symbol	shiftnum		2630217						
ANR	2630385	Symbol	ao -> o		2630217						
ANR	2630386	Symbol	m		2630217						
ANR	2630387	Symbol	ao		2630217						
ANR	2630388	Symbol	* ao -> a		2630217						
ANR	2630389	Symbol	rd		2630217						
ANR	2630390	Symbol	getreg		2630217						
ANR	2630391	Symbol	* ao		2630217						
ANR	2630392	Symbol	* * ao		2630217						
ANR	2630393	Symbol	DOTN_BIT		2630217						
ANR	2630394	Symbol	ao -> a		2630217						
ANR	2630395	Symbol	rm		2630217						
ANR	2630396	Symbol	rn		2630217						
ANR	2630397	Symbol	S_BIT		2630217						
ANR	2630398	Function	std_opt_2	1281:0:25541:25624							
ANR	2630399	FunctionDef	std_opt_2 (ArmOpcode * ao)		2630398	0					
ANR	2630400	CompoundStatement		1281:37:25578:25624	2630398	0					
ANR	2630401	ExpressionStatement	ao -> a [ 2 ] = ao -> a [ 1 ]	1282:1:25581:25600	2630398	0	True				
ANR	2630402	AssignmentExpression	ao -> a [ 2 ] = ao -> a [ 1 ]		2630398	0		=			
ANR	2630403	ArrayIndexing	ao -> a [ 2 ]		2630398	0					
ANR	2630404	PtrMemberAccess	ao -> a		2630398	0					
ANR	2630405	Identifier	ao		2630398	0					
ANR	2630406	Identifier	a		2630398	1					
ANR	2630407	PrimaryExpression	2		2630398	1					
ANR	2630408	ArrayIndexing	ao -> a [ 1 ]		2630398	1					
ANR	2630409	PtrMemberAccess	ao -> a		2630398	0					
ANR	2630410	Identifier	ao		2630398	0					
ANR	2630411	Identifier	a		2630398	1					
ANR	2630412	PrimaryExpression	1		2630398	1					
ANR	2630413	ExpressionStatement	ao -> a [ 1 ] = ao -> a [ 0 ]	1283:1:25603:25622	2630398	1	True				
ANR	2630414	AssignmentExpression	ao -> a [ 1 ] = ao -> a [ 0 ]		2630398	0		=			
ANR	2630415	ArrayIndexing	ao -> a [ 1 ]		2630398	0					
ANR	2630416	PtrMemberAccess	ao -> a		2630398	0					
ANR	2630417	Identifier	ao		2630398	0					
ANR	2630418	Identifier	a		2630398	1					
ANR	2630419	PrimaryExpression	1		2630398	1					
ANR	2630420	ArrayIndexing	ao -> a [ 0 ]		2630398	1					
ANR	2630421	PtrMemberAccess	ao -> a		2630398	0					
ANR	2630422	Identifier	ao		2630398	0					
ANR	2630423	Identifier	a		2630398	1					
ANR	2630424	PrimaryExpression	0		2630398	1					
ANR	2630425	ReturnType	static void		2630398	1					
ANR	2630426	Identifier	std_opt_2		2630398	2					
ANR	2630427	ParameterList	ArmOpcode * ao		2630398	3					
ANR	2630428	Parameter	ArmOpcode * ao	1281:22:25563:25575	2630398	0	True				
ANR	2630429	ParameterType	ArmOpcode *		2630398	0					
ANR	2630430	Identifier	ao		2630398	1					
ANR	2630431	CFGEntryNode	ENTRY		2630398		True				
ANR	2630432	CFGExitNode	EXIT		2630398		True				
ANR	2630433	Symbol	* ao -> a		2630398						
ANR	2630434	Symbol	* ao		2630398						
ANR	2630435	Symbol	* * ao		2630398						
ANR	2630436	Symbol	ao -> a		2630398						
ANR	2630437	Symbol	ao		2630398						
ANR	2630438	Function	std_opt_3	1286:0:25627:25732							
ANR	2630439	FunctionDef	std_opt_3 (ArmOpcode * ao)		2630438	0					
ANR	2630440	CompoundStatement		1286:37:25664:25732	2630438	0					
ANR	2630441	ExpressionStatement	ao -> a [ 3 ] = ao -> a [ 2 ]	1287:1:25667:25686	2630438	0	True				
ANR	2630442	AssignmentExpression	ao -> a [ 3 ] = ao -> a [ 2 ]		2630438	0		=			
ANR	2630443	ArrayIndexing	ao -> a [ 3 ]		2630438	0					
ANR	2630444	PtrMemberAccess	ao -> a		2630438	0					
ANR	2630445	Identifier	ao		2630438	0					
ANR	2630446	Identifier	a		2630438	1					
ANR	2630447	PrimaryExpression	3		2630438	1					
ANR	2630448	ArrayIndexing	ao -> a [ 2 ]		2630438	1					
ANR	2630449	PtrMemberAccess	ao -> a		2630438	0					
ANR	2630450	Identifier	ao		2630438	0					
ANR	2630451	Identifier	a		2630438	1					
ANR	2630452	PrimaryExpression	2		2630438	1					
ANR	2630453	ExpressionStatement	ao -> a [ 2 ] = ao -> a [ 1 ]	1288:1:25689:25708	2630438	1	True				
ANR	2630454	AssignmentExpression	ao -> a [ 2 ] = ao -> a [ 1 ]		2630438	0		=			
ANR	2630455	ArrayIndexing	ao -> a [ 2 ]		2630438	0					
ANR	2630456	PtrMemberAccess	ao -> a		2630438	0					
ANR	2630457	Identifier	ao		2630438	0					
ANR	2630458	Identifier	a		2630438	1					
ANR	2630459	PrimaryExpression	2		2630438	1					
ANR	2630460	ArrayIndexing	ao -> a [ 1 ]		2630438	1					
ANR	2630461	PtrMemberAccess	ao -> a		2630438	0					
ANR	2630462	Identifier	ao		2630438	0					
ANR	2630463	Identifier	a		2630438	1					
ANR	2630464	PrimaryExpression	1		2630438	1					
ANR	2630465	ExpressionStatement	ao -> a [ 1 ] = ao -> a [ 0 ]	1289:1:25711:25730	2630438	2	True				
ANR	2630466	AssignmentExpression	ao -> a [ 1 ] = ao -> a [ 0 ]		2630438	0		=			
ANR	2630467	ArrayIndexing	ao -> a [ 1 ]		2630438	0					
ANR	2630468	PtrMemberAccess	ao -> a		2630438	0					
ANR	2630469	Identifier	ao		2630438	0					
ANR	2630470	Identifier	a		2630438	1					
ANR	2630471	PrimaryExpression	1		2630438	1					
ANR	2630472	ArrayIndexing	ao -> a [ 0 ]		2630438	1					
ANR	2630473	PtrMemberAccess	ao -> a		2630438	0					
ANR	2630474	Identifier	ao		2630438	0					
ANR	2630475	Identifier	a		2630438	1					
ANR	2630476	PrimaryExpression	0		2630438	1					
ANR	2630477	ReturnType	static void		2630438	1					
ANR	2630478	Identifier	std_opt_3		2630438	2					
ANR	2630479	ParameterList	ArmOpcode * ao		2630438	3					
ANR	2630480	Parameter	ArmOpcode * ao	1286:22:25649:25661	2630438	0	True				
ANR	2630481	ParameterType	ArmOpcode *		2630438	0					
ANR	2630482	Identifier	ao		2630438	1					
ANR	2630483	CFGEntryNode	ENTRY		2630438		True				
ANR	2630484	CFGExitNode	EXIT		2630438		True				
ANR	2630485	Symbol	* ao -> a		2630438						
ANR	2630486	Symbol	* ao		2630438						
ANR	2630487	Symbol	* * ao		2630438						
ANR	2630488	Symbol	ao -> a		2630438						
ANR	2630489	Symbol	ao		2630438						
ANR	2630490	Function	thumb_assemble	1293:0:25790:128268							
ANR	2630491	FunctionDef	"thumb_assemble (ArmOpcode * ao , ut64 off , const char * str)"		2630490	0					
ANR	2630492	CompoundStatement		1293:68:25858:128268	2630490	0					
ANR	2630493	IdentifierDeclStatement	ut64 m ;	1294:1:25861:25867	2630490	0	True				
ANR	2630494	IdentifierDecl	m		2630490	0					
ANR	2630495	IdentifierDeclType	ut64		2630490	0					
ANR	2630496	Identifier	m		2630490	1					
ANR	2630497	ExpressionStatement	ao -> o = UT32_MAX	1295:1:25870:25886	2630490	1	True				
ANR	2630498	AssignmentExpression	ao -> o = UT32_MAX		2630490	0		=			
ANR	2630499	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630500	Identifier	ao		2630490	0					
ANR	2630501	Identifier	o		2630490	1					
ANR	2630502	Identifier	UT32_MAX		2630490	1					
ANR	2630503	IfStatement	"if ( ! strcmpnull ( ao -> op , ""udf"" ) )"		2630490	2					
ANR	2630504	Condition	"! strcmpnull ( ao -> op , ""udf"" )"	1296:5:25893:25919	2630490	0	True				
ANR	2630505	UnaryOperationExpression	"! strcmpnull ( ao -> op , ""udf"" )"		2630490	0					
ANR	2630506	UnaryOperator	!		2630490	0					
ANR	2630507	CallExpression	"strcmpnull ( ao -> op , ""udf"" )"		2630490	1					
ANR	2630508	Callee	strcmpnull		2630490	0					
ANR	2630509	Identifier	strcmpnull		2630490	0					
ANR	2630510	ArgumentList	ao -> op		2630490	1					
ANR	2630511	Argument	ao -> op		2630490	0					
ANR	2630512	PtrMemberAccess	ao -> op		2630490	0					
ANR	2630513	Identifier	ao		2630490	0					
ANR	2630514	Identifier	op		2630490	1					
ANR	2630515	Argument	"""udf"""		2630490	1					
ANR	2630516	PrimaryExpression	"""udf"""		2630490	0					
ANR	2630517	CompoundStatement		4:34:63:63	2630490	1					
ANR	2630518	ExpressionStatement	ao -> o = 0xde	1297:2:25926:25938	2630490	0	True				
ANR	2630519	AssignmentExpression	ao -> o = 0xde		2630490	0		=			
ANR	2630520	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630521	Identifier	ao		2630490	0					
ANR	2630522	Identifier	o		2630490	1					
ANR	2630523	PrimaryExpression	0xde		2630490	1					
ANR	2630524	ExpressionStatement	ao -> o |= getnum ( ao -> a [ 0 ] ) << 8	1298:2:25942:25973	2630490	1	True				
ANR	2630525	AssignmentExpression	ao -> o |= getnum ( ao -> a [ 0 ] ) << 8		2630490	0		|=			
ANR	2630526	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630527	Identifier	ao		2630490	0					
ANR	2630528	Identifier	o		2630490	1					
ANR	2630529	ShiftExpression	getnum ( ao -> a [ 0 ] ) << 8		2630490	1		<<			
ANR	2630530	CallExpression	getnum ( ao -> a [ 0 ] )		2630490	0					
ANR	2630531	Callee	getnum		2630490	0					
ANR	2630532	Identifier	getnum		2630490	0					
ANR	2630533	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2630534	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2630535	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2630536	PtrMemberAccess	ao -> a		2630490	0					
ANR	2630537	Identifier	ao		2630490	0					
ANR	2630538	Identifier	a		2630490	1					
ANR	2630539	PrimaryExpression	0		2630490	1					
ANR	2630540	PrimaryExpression	8		2630490	1					
ANR	2630541	ReturnStatement	return 2 ;	1299:2:25977:25985	2630490	2	True				
ANR	2630542	PrimaryExpression	2		2630490	0					
ANR	2630543	ElseStatement	else		2630490	0					
ANR	2630544	IfStatement	"if ( ( m = opmask ( ao -> op , ""add"" , S_BIT | W_BIT ) ) )"		2630490	0					
ANR	2630545	Condition	"m = opmask ( ao -> op , ""add"" , S_BIT | W_BIT )"	1301:5:26000:26042	2630490	0	True				
ANR	2630546	AssignmentExpression	"m = opmask ( ao -> op , ""add"" , S_BIT | W_BIT )"		2630490	0		=			
ANR	2630547	Identifier	m		2630490	0					
ANR	2630548	CallExpression	"opmask ( ao -> op , ""add"" , S_BIT | W_BIT )"		2630490	1					
ANR	2630549	Callee	opmask		2630490	0					
ANR	2630550	Identifier	opmask		2630490	0					
ANR	2630551	ArgumentList	ao -> op		2630490	1					
ANR	2630552	Argument	ao -> op		2630490	0					
ANR	2630553	PtrMemberAccess	ao -> op		2630490	0					
ANR	2630554	Identifier	ao		2630490	0					
ANR	2630555	Identifier	op		2630490	1					
ANR	2630556	Argument	"""add"""		2630490	1					
ANR	2630557	PrimaryExpression	"""add"""		2630490	0					
ANR	2630558	Argument	S_BIT | W_BIT		2630490	2					
ANR	2630559	InclusiveOrExpression	S_BIT | W_BIT		2630490	0		|			
ANR	2630560	Identifier	S_BIT		2630490	0					
ANR	2630561	Identifier	W_BIT		2630490	1					
ANR	2630562	CompoundStatement		10:2:190:224	2630490	1					
ANR	2630563	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1302:2:26049:26083	2630490	0	True				
ANR	2630564	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2630565	IdentifierDeclType	ut64		2630490	0					
ANR	2630566	Identifier	argt		2630490	1					
ANR	2630567	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2630568	Identifier	argt		2630490	0					
ANR	2630569	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2630570	Callee	thumb_selector		2630490	0					
ANR	2630571	Identifier	thumb_selector		2630490	0					
ANR	2630572	ArgumentList	ao -> a		2630490	1					
ANR	2630573	Argument	ao -> a		2630490	0					
ANR	2630574	PtrMemberAccess	ao -> a		2630490	0					
ANR	2630575	Identifier	ao		2630490	0					
ANR	2630576	Identifier	a		2630490	1					
ANR	2630577	SwitchStatement	switch ( argt )		2630490	1					
ANR	2630578	Condition	argt	1303:10:26095:26098	2630490	0	True				
ANR	2630579	Identifier	argt		2630490	0					
ANR	2630580	CompoundStatement		11:16:242:242	2630490	1					
ANR	2630581	Label	case THUMB_REG_CONST :	1304:2:26105:26125	2630490	0	True				
ANR	2630582	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2630583	CompoundStatement		12:24:268:268	2630490	1					
ANR	2630584	ExpressionStatement	std_opt_2 ( ao )	1305:3:26132:26146	2630490	0	True				
ANR	2630585	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2630586	Callee	std_opt_2		2630490	0					
ANR	2630587	Identifier	std_opt_2		2630490	0					
ANR	2630588	ArgumentList	ao		2630490	1					
ANR	2630589	Argument	ao		2630490	0					
ANR	2630590	Identifier	ao		2630490	0					
ANR	2630591	Label	case THUMB_REG_REG_CONST :	1308:2:26192:26216	2630490	2	True				
ANR	2630592	Identifier	THUMB_REG_REG_CONST		2630490	0					
ANR	2630593	CompoundStatement		78:3:1592:1628	2630490	3					
ANR	2630594	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1309:3:26223:26251	2630490	0	True				
ANR	2630595	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2630596	IdentifierDeclType	ut8		2630490	0					
ANR	2630597	Identifier	reg1		2630490	1					
ANR	2630598	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2630599	Identifier	reg1		2630490	0					
ANR	2630600	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2630601	Callee	getreg		2630490	0					
ANR	2630602	Identifier	getreg		2630490	0					
ANR	2630603	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2630604	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2630605	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2630606	PtrMemberAccess	ao -> a		2630490	0					
ANR	2630607	Identifier	ao		2630490	0					
ANR	2630608	Identifier	a		2630490	1					
ANR	2630609	PrimaryExpression	0		2630490	1					
ANR	2630610	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	1310:3:26256:26284	2630490	1	True				
ANR	2630611	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2630612	IdentifierDeclType	ut8		2630490	0					
ANR	2630613	Identifier	reg2		2630490	1					
ANR	2630614	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2630615	Identifier	reg2		2630490	0					
ANR	2630616	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2630617	Callee	getreg		2630490	0					
ANR	2630618	Identifier	getreg		2630490	0					
ANR	2630619	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2630620	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2630621	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2630622	PtrMemberAccess	ao -> a		2630490	0					
ANR	2630623	Identifier	ao		2630490	0					
ANR	2630624	Identifier	a		2630490	1					
ANR	2630625	PrimaryExpression	1		2630490	1					
ANR	2630626	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 2 ] ) ;	1311:3:26289:26317	2630490	2	True				
ANR	2630627	IdentifierDecl	num = getnum ( ao -> a [ 2 ] )		2630490	0					
ANR	2630628	IdentifierDeclType	ut32		2630490	0					
ANR	2630629	Identifier	num		2630490	1					
ANR	2630630	AssignmentExpression	num = getnum ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2630631	Identifier	num		2630490	0					
ANR	2630632	CallExpression	getnum ( ao -> a [ 2 ] )		2630490	1					
ANR	2630633	Callee	getnum		2630490	0					
ANR	2630634	Identifier	getnum		2630490	0					
ANR	2630635	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2630636	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2630637	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2630638	PtrMemberAccess	ao -> a		2630490	0					
ANR	2630639	Identifier	ao		2630490	0					
ANR	2630640	Identifier	a		2630490	1					
ANR	2630641	PrimaryExpression	2		2630490	1					
ANR	2630642	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) )		2630490	3					
ANR	2630643	Condition	( reg1 > 15 ) || ( reg2 > 15 )	1313:7:26327:26352	2630490	0	True				
ANR	2630644	OrExpression	( reg1 > 15 ) || ( reg2 > 15 )		2630490	0		||			
ANR	2630645	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2630646	Identifier	reg1		2630490	0					
ANR	2630647	PrimaryExpression	15		2630490	1					
ANR	2630648	RelationalExpression	reg2 > 15		2630490	1		>			
ANR	2630649	Identifier	reg2		2630490	0					
ANR	2630650	PrimaryExpression	15		2630490	1					
ANR	2630651	CompoundStatement		21:35:496:496	2630490	1					
ANR	2630652	ReturnStatement	return - 1 ;	1314:4:26361:26370	2630490	0	True				
ANR	2630653	UnaryOperationExpression	- 1		2630490	0					
ANR	2630654	UnaryOperator	-		2630490	0					
ANR	2630655	PrimaryExpression	1		2630490	1					
ANR	2630656	IfStatement	if ( reg2 == 13 )		2630490	4					
ANR	2630657	Condition	reg2 == 13	1317:7:26388:26397	2630490	0	True				
ANR	2630658	EqualityExpression	reg2 == 13		2630490	0		==			
ANR	2630659	Identifier	reg2		2630490	0					
ANR	2630660	PrimaryExpression	13		2630490	1					
ANR	2630661	CompoundStatement		40:4:923:959	2630490	1					
ANR	2630662	IfStatement	if ( ( reg1 < 8 ) && ( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) )		2630490	0					
ANR	2630663	Condition	( reg1 < 8 ) && ( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )	1318:8:26410:26492	2630490	0	True				
ANR	2630664	AndExpression	( reg1 < 8 ) && ( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )		2630490	0		&&			
ANR	2630665	RelationalExpression	reg1 < 8		2630490	0		<			
ANR	2630666	Identifier	reg1		2630490	0					
ANR	2630667	PrimaryExpression	8		2630490	1					
ANR	2630668	AndExpression	( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )		2630490	1		&&			
ANR	2630669	RelationalExpression	num < 1024		2630490	0		<			
ANR	2630670	Identifier	num		2630490	0					
ANR	2630671	PrimaryExpression	1024		2630490	1					
ANR	2630672	AndExpression	( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )		2630490	1		&&			
ANR	2630673	EqualityExpression	num % 4 == 0		2630490	0		==			
ANR	2630674	MultiplicativeExpression	num % 4		2630490	0		%			
ANR	2630675	Identifier	num		2630490	0					
ANR	2630676	PrimaryExpression	4		2630490	1					
ANR	2630677	PrimaryExpression	0		2630490	1					
ANR	2630678	AndExpression	( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )		2630490	1		&&			
ANR	2630679	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	0					
ANR	2630680	UnaryOperator	!		2630490	0					
ANR	2630681	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2630682	Identifier	m		2630490	0					
ANR	2630683	Identifier	DOTW_BIT		2630490	1					
ANR	2630684	UnaryOperationExpression	! ( m & W_BIT )		2630490	1					
ANR	2630685	UnaryOperator	!		2630490	0					
ANR	2630686	BitAndExpression	m & W_BIT		2630490	1		&			
ANR	2630687	Identifier	m		2630490	0					
ANR	2630688	Identifier	W_BIT		2630490	1					
ANR	2630689	CompoundStatement		26:93:636:636	2630490	1					
ANR	2630690	ExpressionStatement	ao -> o = 0x00a8	1319:5:26502:26516	2630490	0	True				
ANR	2630691	AssignmentExpression	ao -> o = 0x00a8		2630490	0		=			
ANR	2630692	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630693	Identifier	ao		2630490	0					
ANR	2630694	Identifier	o		2630490	1					
ANR	2630695	PrimaryExpression	0x00a8		2630490	1					
ANR	2630696	ExpressionStatement	ao -> o |= reg1	1320:5:26523:26536	2630490	1	True				
ANR	2630697	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2630698	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630699	Identifier	ao		2630490	0					
ANR	2630700	Identifier	o		2630490	1					
ANR	2630701	Identifier	reg1		2630490	1					
ANR	2630702	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	1321:5:26543:26567	2630490	2	True				
ANR	2630703	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		2630490	0		|=			
ANR	2630704	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630705	Identifier	ao		2630490	0					
ANR	2630706	Identifier	o		2630490	1					
ANR	2630707	ShiftExpression	( num >> 2 ) << 8		2630490	1		<<			
ANR	2630708	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2630709	Identifier	num		2630490	0					
ANR	2630710	PrimaryExpression	2		2630490	1					
ANR	2630711	PrimaryExpression	8		2630490	1					
ANR	2630712	ReturnStatement	return 2 ;	1322:5:26574:26582	2630490	3	True				
ANR	2630713	PrimaryExpression	2		2630490	0					
ANR	2630714	IfStatement	if ( ( reg1 == 13 ) && ( num < 512 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) )		2630490	1					
ANR	2630715	Condition	( reg1 == 13 ) && ( num < 512 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )	1325:8:26599:26682	2630490	0	True				
ANR	2630716	AndExpression	( reg1 == 13 ) && ( num < 512 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )		2630490	0		&&			
ANR	2630717	EqualityExpression	reg1 == 13		2630490	0		==			
ANR	2630718	Identifier	reg1		2630490	0					
ANR	2630719	PrimaryExpression	13		2630490	1					
ANR	2630720	AndExpression	( num < 512 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )		2630490	1		&&			
ANR	2630721	RelationalExpression	num < 512		2630490	0		<			
ANR	2630722	Identifier	num		2630490	0					
ANR	2630723	PrimaryExpression	512		2630490	1					
ANR	2630724	AndExpression	( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )		2630490	1		&&			
ANR	2630725	EqualityExpression	num % 4 == 0		2630490	0		==			
ANR	2630726	MultiplicativeExpression	num % 4		2630490	0		%			
ANR	2630727	Identifier	num		2630490	0					
ANR	2630728	PrimaryExpression	4		2630490	1					
ANR	2630729	PrimaryExpression	0		2630490	1					
ANR	2630730	AndExpression	( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) )		2630490	1		&&			
ANR	2630731	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	0					
ANR	2630732	UnaryOperator	!		2630490	0					
ANR	2630733	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2630734	Identifier	m		2630490	0					
ANR	2630735	Identifier	DOTW_BIT		2630490	1					
ANR	2630736	UnaryOperationExpression	! ( m & W_BIT )		2630490	1					
ANR	2630737	UnaryOperator	!		2630490	0					
ANR	2630738	BitAndExpression	m & W_BIT		2630490	1		&			
ANR	2630739	Identifier	m		2630490	0					
ANR	2630740	Identifier	W_BIT		2630490	1					
ANR	2630741	CompoundStatement		33:94:826:826	2630490	1					
ANR	2630742	ExpressionStatement	ao -> o = 0x00b0	1326:5:26692:26706	2630490	0	True				
ANR	2630743	AssignmentExpression	ao -> o = 0x00b0		2630490	0		=			
ANR	2630744	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630745	Identifier	ao		2630490	0					
ANR	2630746	Identifier	o		2630490	1					
ANR	2630747	PrimaryExpression	0x00b0		2630490	1					
ANR	2630748	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	1327:5:26713:26737	2630490	1	True				
ANR	2630749	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		2630490	0		|=			
ANR	2630750	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630751	Identifier	ao		2630490	0					
ANR	2630752	Identifier	o		2630490	1					
ANR	2630753	ShiftExpression	( num >> 2 ) << 8		2630490	1		<<			
ANR	2630754	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2630755	Identifier	num		2630490	0					
ANR	2630756	PrimaryExpression	2		2630490	1					
ANR	2630757	PrimaryExpression	8		2630490	1					
ANR	2630758	ReturnStatement	return 2 ;	1328:5:26744:26752	2630490	2	True				
ANR	2630759	PrimaryExpression	2		2630490	0					
ANR	2630760	ExpressionStatement	err = false	1331:4:26765:26776	2630490	2	True				
ANR	2630761	AssignmentExpression	err = false		2630490	0		=			
ANR	2630762	Identifier	err		2630490	0					
ANR	2630763	Identifier	false		2630490	1					
ANR	2630764	IdentifierDeclStatement	ut32 thnum = getthimmed12 ( ao -> a [ 2 ] ) ;	1332:4:26782:26818	2630490	3	True				
ANR	2630765	IdentifierDecl	thnum = getthimmed12 ( ao -> a [ 2 ] )		2630490	0					
ANR	2630766	IdentifierDeclType	ut32		2630490	0					
ANR	2630767	Identifier	thnum		2630490	1					
ANR	2630768	AssignmentExpression	thnum = getthimmed12 ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2630769	Identifier	thnum		2630490	0					
ANR	2630770	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		2630490	1					
ANR	2630771	Callee	getthimmed12		2630490	0					
ANR	2630772	Identifier	getthimmed12		2630490	0					
ANR	2630773	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2630774	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2630775	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2630776	PtrMemberAccess	ao -> a		2630490	0					
ANR	2630777	Identifier	ao		2630490	0					
ANR	2630778	Identifier	a		2630490	1					
ANR	2630779	PrimaryExpression	2		2630490	1					
ANR	2630780	IfStatement	if ( ! err && ( ! ( m & W_BIT ) ) )		2630490	4					
ANR	2630781	Condition	! err && ( ! ( m & W_BIT ) )	1333:8:26828:26849	2630490	0	True				
ANR	2630782	AndExpression	! err && ( ! ( m & W_BIT ) )		2630490	0		&&			
ANR	2630783	UnaryOperationExpression	! err		2630490	0					
ANR	2630784	UnaryOperator	!		2630490	0					
ANR	2630785	Identifier	err		2630490	1					
ANR	2630786	UnaryOperationExpression	! ( m & W_BIT )		2630490	1					
ANR	2630787	UnaryOperator	!		2630490	0					
ANR	2630788	BitAndExpression	m & W_BIT		2630490	1		&			
ANR	2630789	Identifier	m		2630490	0					
ANR	2630790	Identifier	W_BIT		2630490	1					
ANR	2630791	CompoundStatement		41:32:993:993	2630490	1					
ANR	2630792	ExpressionStatement	ao -> o = 0x0df10000	1334:5:26859:26877	2630490	0	True				
ANR	2630793	AssignmentExpression	ao -> o = 0x0df10000		2630490	0		=			
ANR	2630794	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630795	Identifier	ao		2630490	0					
ANR	2630796	Identifier	o		2630490	1					
ANR	2630797	PrimaryExpression	0x0df10000		2630490	1					
ANR	2630798	ExpressionStatement	ao -> o |= reg1	1335:5:26884:26897	2630490	1	True				
ANR	2630799	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2630800	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630801	Identifier	ao		2630490	0					
ANR	2630802	Identifier	o		2630490	1					
ANR	2630803	Identifier	reg1		2630490	1					
ANR	2630804	ExpressionStatement	ao -> o |= thnum	1336:5:26904:26918	2630490	2	True				
ANR	2630805	AssignmentExpression	ao -> o |= thnum		2630490	0		|=			
ANR	2630806	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630807	Identifier	ao		2630490	0					
ANR	2630808	Identifier	o		2630490	1					
ANR	2630809	Identifier	thnum		2630490	1					
ANR	2630810	IfStatement	if ( m & S_BIT )		2630490	3					
ANR	2630811	Condition	m & S_BIT	1337:9:26929:26937	2630490	0	True				
ANR	2630812	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2630813	Identifier	m		2630490	0					
ANR	2630814	Identifier	S_BIT		2630490	1					
ANR	2630815	CompoundStatement		45:20:1081:1081	2630490	1					
ANR	2630816	ExpressionStatement	ao -> o |= 1 << 28	1338:6:26948:26964	2630490	0	True				
ANR	2630817	AssignmentExpression	ao -> o |= 1 << 28		2630490	0		|=			
ANR	2630818	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630819	Identifier	ao		2630490	0					
ANR	2630820	Identifier	o		2630490	1					
ANR	2630821	ShiftExpression	1 << 28		2630490	1		<<			
ANR	2630822	PrimaryExpression	1		2630490	0					
ANR	2630823	PrimaryExpression	28		2630490	1					
ANR	2630824	ReturnStatement	return 4 ;	1340:5:26978:26986	2630490	4	True				
ANR	2630825	PrimaryExpression	4		2630490	0					
ANR	2630826	IfStatement	if ( num > 4095 )		2630490	5					
ANR	2630827	Condition	num > 4095	1343:8:27003:27012	2630490	0	True				
ANR	2630828	RelationalExpression	num > 4095		2630490	0		>			
ANR	2630829	Identifier	num		2630490	0					
ANR	2630830	PrimaryExpression	4095		2630490	1					
ANR	2630831	CompoundStatement		51:20:1156:1156	2630490	1					
ANR	2630832	ReturnStatement	return - 1 ;	1344:5:27022:27031	2630490	0	True				
ANR	2630833	UnaryOperationExpression	- 1		2630490	0					
ANR	2630834	UnaryOperator	-		2630490	0					
ANR	2630835	PrimaryExpression	1		2630490	1					
ANR	2630836	ExpressionStatement	ao -> o = 0x0df20000	1347:4:27044:27062	2630490	6	True				
ANR	2630837	AssignmentExpression	ao -> o = 0x0df20000		2630490	0		=			
ANR	2630838	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630839	Identifier	ao		2630490	0					
ANR	2630840	Identifier	o		2630490	1					
ANR	2630841	PrimaryExpression	0x0df20000		2630490	1					
ANR	2630842	ExpressionStatement	ao -> o |= reg1	1348:4:27068:27081	2630490	7	True				
ANR	2630843	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2630844	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630845	Identifier	ao		2630490	0					
ANR	2630846	Identifier	o		2630490	1					
ANR	2630847	Identifier	reg1		2630490	1					
ANR	2630848	ExpressionStatement	ao -> o |= getthzeroimmed12 ( num )	1349:4:27087:27118	2630490	8	True				
ANR	2630849	AssignmentExpression	ao -> o |= getthzeroimmed12 ( num )		2630490	0		|=			
ANR	2630850	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630851	Identifier	ao		2630490	0					
ANR	2630852	Identifier	o		2630490	1					
ANR	2630853	CallExpression	getthzeroimmed12 ( num )		2630490	1					
ANR	2630854	Callee	getthzeroimmed12		2630490	0					
ANR	2630855	Identifier	getthzeroimmed12		2630490	0					
ANR	2630856	ArgumentList	num		2630490	1					
ANR	2630857	Argument	num		2630490	0					
ANR	2630858	Identifier	num		2630490	0					
ANR	2630859	ReturnStatement	return 4 ;	1350:4:27124:27132	2630490	9	True				
ANR	2630860	PrimaryExpression	4		2630490	0					
ANR	2630861	IfStatement	if ( num < 8 )		2630490	5					
ANR	2630862	Condition	num < 8	1353:7:27147:27153	2630490	0	True				
ANR	2630863	RelationalExpression	num < 8		2630490	0		<			
ANR	2630864	Identifier	num		2630490	0					
ANR	2630865	PrimaryExpression	8		2630490	1					
ANR	2630866	CompoundStatement		61:16:1297:1297	2630490	1					
ANR	2630867	ExpressionStatement	ao -> o = 0x001c	1354:4:27162:27176	2630490	0	True				
ANR	2630868	AssignmentExpression	ao -> o = 0x001c		2630490	0		=			
ANR	2630869	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630870	Identifier	ao		2630490	0					
ANR	2630871	Identifier	o		2630490	1					
ANR	2630872	PrimaryExpression	0x001c		2630490	1					
ANR	2630873	ExpressionStatement	ao -> o |= ( num & 0x3 ) << 14	1355:4:27182:27208	2630490	1	True				
ANR	2630874	AssignmentExpression	ao -> o |= ( num & 0x3 ) << 14		2630490	0		|=			
ANR	2630875	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630876	Identifier	ao		2630490	0					
ANR	2630877	Identifier	o		2630490	1					
ANR	2630878	ShiftExpression	( num & 0x3 ) << 14		2630490	1		<<			
ANR	2630879	BitAndExpression	num & 0x3		2630490	0		&			
ANR	2630880	Identifier	num		2630490	0					
ANR	2630881	PrimaryExpression	0x3		2630490	1					
ANR	2630882	PrimaryExpression	14		2630490	1					
ANR	2630883	ExpressionStatement	ao -> o |= ( num >> 2 )	1356:4:27214:27233	2630490	2	True				
ANR	2630884	AssignmentExpression	ao -> o |= ( num >> 2 )		2630490	0		|=			
ANR	2630885	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630886	Identifier	ao		2630490	0					
ANR	2630887	Identifier	o		2630490	1					
ANR	2630888	ShiftExpression	num >> 2		2630490	1		>>			
ANR	2630889	Identifier	num		2630490	0					
ANR	2630890	PrimaryExpression	2		2630490	1					
ANR	2630891	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	3					
ANR	2630892	Condition	"std_16bit_2reg ( ao , m )"	1357:8:27243:27264	2630490	0	True				
ANR	2630893	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2630894	Callee	std_16bit_2reg		2630490	0					
ANR	2630895	Identifier	std_16bit_2reg		2630490	0					
ANR	2630896	ArgumentList	ao		2630490	1					
ANR	2630897	Argument	ao		2630490	0					
ANR	2630898	Identifier	ao		2630490	0					
ANR	2630899	Argument	m		2630490	1					
ANR	2630900	Identifier	m		2630490	0					
ANR	2630901	CompoundStatement		65:32:1408:1408	2630490	1					
ANR	2630902	ReturnStatement	return 2 ;	1358:5:27274:27282	2630490	0	True				
ANR	2630903	PrimaryExpression	2		2630490	0					
ANR	2630904	IfStatement	if ( ( reg1 < 8 ) && ( reg1 == reg2 ) && ( num < 256 ) )		2630490	6					
ANR	2630905	Condition	( reg1 < 8 ) && ( reg1 == reg2 ) && ( num < 256 )	1362:7:27303:27345	2630490	0	True				
ANR	2630906	AndExpression	( reg1 < 8 ) && ( reg1 == reg2 ) && ( num < 256 )		2630490	0		&&			
ANR	2630907	RelationalExpression	reg1 < 8		2630490	0		<			
ANR	2630908	Identifier	reg1		2630490	0					
ANR	2630909	PrimaryExpression	8		2630490	1					
ANR	2630910	AndExpression	( reg1 == reg2 ) && ( num < 256 )		2630490	1		&&			
ANR	2630911	EqualityExpression	reg1 == reg2		2630490	0		==			
ANR	2630912	Identifier	reg1		2630490	0					
ANR	2630913	Identifier	reg2		2630490	1					
ANR	2630914	RelationalExpression	num < 256		2630490	1		<			
ANR	2630915	Identifier	num		2630490	0					
ANR	2630916	PrimaryExpression	256		2630490	1					
ANR	2630917	CompoundStatement		70:52:1489:1489	2630490	1					
ANR	2630918	ExpressionStatement	ao -> o = 0x0030	1363:4:27354:27368	2630490	0	True				
ANR	2630919	AssignmentExpression	ao -> o = 0x0030		2630490	0		=			
ANR	2630920	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630921	Identifier	ao		2630490	0					
ANR	2630922	Identifier	o		2630490	1					
ANR	2630923	PrimaryExpression	0x0030		2630490	1					
ANR	2630924	ExpressionStatement	ao -> o |= reg1	1364:4:27374:27387	2630490	1	True				
ANR	2630925	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2630926	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630927	Identifier	ao		2630490	0					
ANR	2630928	Identifier	o		2630490	1					
ANR	2630929	Identifier	reg1		2630490	1					
ANR	2630930	ExpressionStatement	ao -> o |= num << 8	1365:4:27393:27410	2630490	2	True				
ANR	2630931	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2630932	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630933	Identifier	ao		2630490	0					
ANR	2630934	Identifier	o		2630490	1					
ANR	2630935	ShiftExpression	num << 8		2630490	1		<<			
ANR	2630936	Identifier	num		2630490	0					
ANR	2630937	PrimaryExpression	8		2630490	1					
ANR	2630938	ReturnStatement	return 2 ;	1366:4:27416:27424	2630490	3	True				
ANR	2630939	PrimaryExpression	2		2630490	0					
ANR	2630940	ExpressionStatement	err = false	1369:3:27435:27446	2630490	7	True				
ANR	2630941	AssignmentExpression	err = false		2630490	0		=			
ANR	2630942	Identifier	err		2630490	0					
ANR	2630943	Identifier	false		2630490	1					
ANR	2630944	IdentifierDeclStatement	ut32 thnum = getthimmed12 ( ao -> a [ 2 ] ) ;	1370:3:27451:27487	2630490	8	True				
ANR	2630945	IdentifierDecl	thnum = getthimmed12 ( ao -> a [ 2 ] )		2630490	0					
ANR	2630946	IdentifierDeclType	ut32		2630490	0					
ANR	2630947	Identifier	thnum		2630490	1					
ANR	2630948	AssignmentExpression	thnum = getthimmed12 ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2630949	Identifier	thnum		2630490	0					
ANR	2630950	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		2630490	1					
ANR	2630951	Callee	getthimmed12		2630490	0					
ANR	2630952	Identifier	getthimmed12		2630490	0					
ANR	2630953	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2630954	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2630955	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2630956	PtrMemberAccess	ao -> a		2630490	0					
ANR	2630957	Identifier	ao		2630490	0					
ANR	2630958	Identifier	a		2630490	1					
ANR	2630959	PrimaryExpression	2		2630490	1					
ANR	2630960	IfStatement	if ( ! err && ( ! ( m & W_BIT ) ) )		2630490	9					
ANR	2630961	Condition	! err && ( ! ( m & W_BIT ) )	1371:7:27496:27517	2630490	0	True				
ANR	2630962	AndExpression	! err && ( ! ( m & W_BIT ) )		2630490	0		&&			
ANR	2630963	UnaryOperationExpression	! err		2630490	0					
ANR	2630964	UnaryOperator	!		2630490	0					
ANR	2630965	Identifier	err		2630490	1					
ANR	2630966	UnaryOperationExpression	! ( m & W_BIT )		2630490	1					
ANR	2630967	UnaryOperator	!		2630490	0					
ANR	2630968	BitAndExpression	m & W_BIT		2630490	1		&			
ANR	2630969	Identifier	m		2630490	0					
ANR	2630970	Identifier	W_BIT		2630490	1					
ANR	2630971	CompoundStatement		79:31:1661:1661	2630490	1					
ANR	2630972	ExpressionStatement	ao -> o = 0x00f10000	1372:4:27526:27544	2630490	0	True				
ANR	2630973	AssignmentExpression	ao -> o = 0x00f10000		2630490	0		=			
ANR	2630974	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630975	Identifier	ao		2630490	0					
ANR	2630976	Identifier	o		2630490	1					
ANR	2630977	PrimaryExpression	0x00f10000		2630490	1					
ANR	2630978	ExpressionStatement	ao -> o |= thnum	1373:4:27550:27564	2630490	1	True				
ANR	2630979	AssignmentExpression	ao -> o |= thnum		2630490	0		|=			
ANR	2630980	PtrMemberAccess	ao -> o		2630490	0					
ANR	2630981	Identifier	ao		2630490	0					
ANR	2630982	Identifier	o		2630490	1					
ANR	2630983	Identifier	thnum		2630490	1					
ANR	2630984	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	1374:4:27570:27606	2630490	2	True				
ANR	2630985	CallExpression	"std_32bit_2reg ( ao , m , false )"		2630490	0					
ANR	2630986	Callee	std_32bit_2reg		2630490	0					
ANR	2630987	Identifier	std_32bit_2reg		2630490	0					
ANR	2630988	ArgumentList	ao		2630490	1					
ANR	2630989	Argument	ao		2630490	0					
ANR	2630990	Identifier	ao		2630490	0					
ANR	2630991	Argument	m		2630490	1					
ANR	2630992	Identifier	m		2630490	0					
ANR	2630993	Argument	false		2630490	2					
ANR	2630994	Identifier	false		2630490	0					
ANR	2630995	IfStatement	if ( num > 4095 )		2630490	10					
ANR	2630996	Condition	num > 4095	1377:7:27621:27630	2630490	0	True				
ANR	2630997	RelationalExpression	num > 4095		2630490	0		>			
ANR	2630998	Identifier	num		2630490	0					
ANR	2630999	PrimaryExpression	4095		2630490	1					
ANR	2631000	CompoundStatement		85:19:1774:1774	2630490	1					
ANR	2631001	ReturnStatement	return - 1 ;	1378:4:27639:27648	2630490	0	True				
ANR	2631002	UnaryOperationExpression	- 1		2630490	0					
ANR	2631003	UnaryOperator	-		2630490	0					
ANR	2631004	PrimaryExpression	1		2630490	1					
ANR	2631005	ExpressionStatement	ao -> o = 0x00f20000	1381:3:27659:27677	2630490	11	True				
ANR	2631006	AssignmentExpression	ao -> o = 0x00f20000		2630490	0		=			
ANR	2631007	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631008	Identifier	ao		2630490	0					
ANR	2631009	Identifier	o		2630490	1					
ANR	2631010	PrimaryExpression	0x00f20000		2630490	1					
ANR	2631011	ExpressionStatement	ao -> o |= getthzeroimmed12 ( num )	1382:3:27682:27713	2630490	12	True				
ANR	2631012	AssignmentExpression	ao -> o |= getthzeroimmed12 ( num )		2630490	0		|=			
ANR	2631013	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631014	Identifier	ao		2630490	0					
ANR	2631015	Identifier	o		2630490	1					
ANR	2631016	CallExpression	getthzeroimmed12 ( num )		2630490	1					
ANR	2631017	Callee	getthzeroimmed12		2630490	0					
ANR	2631018	Identifier	getthzeroimmed12		2630490	0					
ANR	2631019	ArgumentList	num		2630490	1					
ANR	2631020	Argument	num		2630490	0					
ANR	2631021	Identifier	num		2630490	0					
ANR	2631022	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	1383:3:27718:27754	2630490	13	True				
ANR	2631023	CallExpression	"std_32bit_2reg ( ao , m , false )"		2630490	0					
ANR	2631024	Callee	std_32bit_2reg		2630490	0					
ANR	2631025	Identifier	std_32bit_2reg		2630490	0					
ANR	2631026	ArgumentList	ao		2630490	1					
ANR	2631027	Argument	ao		2630490	0					
ANR	2631028	Identifier	ao		2630490	0					
ANR	2631029	Argument	m		2630490	1					
ANR	2631030	Identifier	m		2630490	0					
ANR	2631031	Argument	false		2630490	2					
ANR	2631032	Identifier	false		2630490	0					
ANR	2631033	BreakStatement	break ;	1385:3:27771:27776	2630490	4	True				
ANR	2631034	Label	case THUMB_REG_REG :	1386:2:27780:27798	2630490	5	True				
ANR	2631035	Identifier	THUMB_REG_REG		2630490	0					
ANR	2631036	CompoundStatement		94:22:1941:1941	2630490	6					
ANR	2631037	ExpressionStatement	std_opt_2 ( ao )	1387:3:27805:27819	2630490	0	True				
ANR	2631038	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2631039	Callee	std_opt_2		2630490	0					
ANR	2631040	Identifier	std_opt_2		2630490	0					
ANR	2631041	ArgumentList	ao		2630490	1					
ANR	2631042	Argument	ao		2630490	0					
ANR	2631043	Identifier	ao		2630490	0					
ANR	2631044	Label	case THUMB_REG_REG_REG :	1390:2:27865:27887	2630490	7	True				
ANR	2631045	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2631046	CompoundStatement		98:26:2030:2030	2630490	8					
ANR	2631047	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	1391:3:27894:27912	2630490	0	True				
ANR	2631048	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		2630490	0		=			
ANR	2631049	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2631050	PtrMemberAccess	ao -> a		2630490	0					
ANR	2631051	Identifier	ao		2630490	0					
ANR	2631052	Identifier	a		2630490	1					
ANR	2631053	PrimaryExpression	3		2630490	1					
ANR	2631054	PrimaryExpression	"""lsl 0"""		2630490	1					
ANR	2631055	Label	case THUMB_REG_REG_SHIFT :	1394:2:27958:27982	2630490	9	True				
ANR	2631056	Identifier	THUMB_REG_REG_SHIFT		2630490	0					
ANR	2631057	CompoundStatement		102:28:2125:2125	2630490	10					
ANR	2631058	IfStatement	if ( ao -> a [ 3 ] == NULL )		2630490	0					
ANR	2631059	Condition	ao -> a [ 3 ] == NULL	1395:7:27993:28008	2630490	0	True				
ANR	2631060	EqualityExpression	ao -> a [ 3 ] == NULL		2630490	0		==			
ANR	2631061	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2631062	PtrMemberAccess	ao -> a		2630490	0					
ANR	2631063	Identifier	ao		2630490	0					
ANR	2631064	Identifier	a		2630490	1					
ANR	2631065	PrimaryExpression	3		2630490	1					
ANR	2631066	Identifier	NULL		2630490	1					
ANR	2631067	CompoundStatement		103:25:2152:2152	2630490	1					
ANR	2631068	ExpressionStatement	std_opt_3 ( ao )	1396:4:28039:28053	2630490	0	True				
ANR	2631069	CallExpression	std_opt_3 ( ao )		2630490	0					
ANR	2631070	Callee	std_opt_3		2630490	0					
ANR	2631071	Identifier	std_opt_3		2630490	0					
ANR	2631072	ArgumentList	ao		2630490	1					
ANR	2631073	Argument	ao		2630490	0					
ANR	2631074	Identifier	ao		2630490	0					
ANR	2631075	Label	case THUMB_REG_REG_REG_SHIFT :	1400:2:28104:28132	2630490	11	True				
ANR	2631076	Identifier	THUMB_REG_REG_REG_SHIFT		2630490	0					
ANR	2631077	CompoundStatement		112:3:2379:2417	2630490	12					
ANR	2631078	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1401:3:28139:28167	2630490	0	True				
ANR	2631079	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2631080	IdentifierDeclType	ut8		2630490	0					
ANR	2631081	Identifier	reg1		2630490	1					
ANR	2631082	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2631083	Identifier	reg1		2630490	0					
ANR	2631084	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2631085	Callee	getreg		2630490	0					
ANR	2631086	Identifier	getreg		2630490	0					
ANR	2631087	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2631088	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2631089	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2631090	PtrMemberAccess	ao -> a		2630490	0					
ANR	2631091	Identifier	ao		2630490	0					
ANR	2631092	Identifier	a		2630490	1					
ANR	2631093	PrimaryExpression	0		2630490	1					
ANR	2631094	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	1402:3:28172:28200	2630490	1	True				
ANR	2631095	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2631096	IdentifierDeclType	ut8		2630490	0					
ANR	2631097	Identifier	reg2		2630490	1					
ANR	2631098	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2631099	Identifier	reg2		2630490	0					
ANR	2631100	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2631101	Callee	getreg		2630490	0					
ANR	2631102	Identifier	getreg		2630490	0					
ANR	2631103	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2631104	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2631105	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2631106	PtrMemberAccess	ao -> a		2630490	0					
ANR	2631107	Identifier	ao		2630490	0					
ANR	2631108	Identifier	a		2630490	1					
ANR	2631109	PrimaryExpression	1		2630490	1					
ANR	2631110	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	1403:3:28205:28233	2630490	2	True				
ANR	2631111	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2631112	IdentifierDeclType	ut8		2630490	0					
ANR	2631113	Identifier	reg3		2630490	1					
ANR	2631114	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2631115	Identifier	reg3		2630490	0					
ANR	2631116	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2631117	Callee	getreg		2630490	0					
ANR	2631118	Identifier	getreg		2630490	0					
ANR	2631119	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2631120	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2631121	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2631122	PtrMemberAccess	ao -> a		2630490	0					
ANR	2631123	Identifier	ao		2630490	0					
ANR	2631124	Identifier	a		2630490	1					
ANR	2631125	PrimaryExpression	2		2630490	1					
ANR	2631126	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 3 ] ) ;	1404:3:28238:28276	2630490	3	True				
ANR	2631127	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 3 ] )		2630490	0					
ANR	2631128	IdentifierDeclType	ut32		2630490	0					
ANR	2631129	Identifier	shift		2630490	1					
ANR	2631130	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2631131	Identifier	shift		2630490	0					
ANR	2631132	CallExpression	thumb_getshift ( ao -> a [ 3 ] )		2630490	1					
ANR	2631133	Callee	thumb_getshift		2630490	0					
ANR	2631134	Identifier	thumb_getshift		2630490	0					
ANR	2631135	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2631136	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2631137	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2631138	PtrMemberAccess	ao -> a		2630490	0					
ANR	2631139	Identifier	ao		2630490	0					
ANR	2631140	Identifier	a		2630490	1					
ANR	2631141	PrimaryExpression	3		2630490	1					
ANR	2631142	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) )		2630490	4					
ANR	2631143	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 )	1406:7:28286:28326	2630490	0	True				
ANR	2631144	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 )		2630490	0		||			
ANR	2631145	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2631146	Identifier	reg1		2630490	0					
ANR	2631147	PrimaryExpression	15		2630490	1					
ANR	2631148	OrExpression	( reg2 > 15 ) || ( reg3 > 15 )		2630490	1		||			
ANR	2631149	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2631150	Identifier	reg2		2630490	0					
ANR	2631151	PrimaryExpression	15		2630490	1					
ANR	2631152	RelationalExpression	reg3 > 15		2630490	1		>			
ANR	2631153	Identifier	reg3		2630490	0					
ANR	2631154	PrimaryExpression	15		2630490	1					
ANR	2631155	CompoundStatement		114:50:2470:2470	2630490	1					
ANR	2631156	ReturnStatement	return - 1 ;	1407:4:28335:28344	2630490	0	True				
ANR	2631157	UnaryOperationExpression	- 1		2630490	0					
ANR	2631158	UnaryOperator	-		2630490	0					
ANR	2631159	PrimaryExpression	1		2630490	1					
ANR	2631160	IfStatement	if ( reg2 == 13 )		2630490	5					
ANR	2631161	Condition	reg2 == 13	1410:7:28363:28372	2630490	0	True				
ANR	2631162	EqualityExpression	reg2 == 13		2630490	0		==			
ANR	2631163	Identifier	reg2		2630490	0					
ANR	2631164	PrimaryExpression	13		2630490	1					
ANR	2631165	CompoundStatement		118:19:2516:2516	2630490	1					
ANR	2631166	IfStatement	if ( ( reg1 == reg3 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 ) )		2630490	0					
ANR	2631167	Condition	( reg1 == reg3 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 )	1411:8:28385:28435	2630490	0	True				
ANR	2631168	AndExpression	( reg1 == reg3 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 )		2630490	0		&&			
ANR	2631169	EqualityExpression	reg1 == reg3		2630490	0		==			
ANR	2631170	Identifier	reg1		2630490	0					
ANR	2631171	Identifier	reg3		2630490	1					
ANR	2631172	AndExpression	( ! ( m & DOTW_BIT ) ) && ( shift == 0 )		2630490	1		&&			
ANR	2631173	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	0					
ANR	2631174	UnaryOperator	!		2630490	0					
ANR	2631175	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2631176	Identifier	m		2630490	0					
ANR	2631177	Identifier	DOTW_BIT		2630490	1					
ANR	2631178	EqualityExpression	shift == 0		2630490	1		==			
ANR	2631179	Identifier	shift		2630490	0					
ANR	2631180	PrimaryExpression	0		2630490	1					
ANR	2631181	CompoundStatement		119:61:2579:2579	2630490	1					
ANR	2631182	ExpressionStatement	ao -> o = 0x6844	1412:5:28445:28459	2630490	0	True				
ANR	2631183	AssignmentExpression	ao -> o = 0x6844		2630490	0		=			
ANR	2631184	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631185	Identifier	ao		2630490	0					
ANR	2631186	Identifier	o		2630490	1					
ANR	2631187	PrimaryExpression	0x6844		2630490	1					
ANR	2631188	ExpressionStatement	ao -> o |= ( reg1 & 0x7 ) << 8	1413:5:28466:28492	2630490	1	True				
ANR	2631189	AssignmentExpression	ao -> o |= ( reg1 & 0x7 ) << 8		2630490	0		|=			
ANR	2631190	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631191	Identifier	ao		2630490	0					
ANR	2631192	Identifier	o		2630490	1					
ANR	2631193	ShiftExpression	( reg1 & 0x7 ) << 8		2630490	1		<<			
ANR	2631194	BitAndExpression	reg1 & 0x7		2630490	0		&			
ANR	2631195	Identifier	reg1		2630490	0					
ANR	2631196	PrimaryExpression	0x7		2630490	1					
ANR	2631197	PrimaryExpression	8		2630490	1					
ANR	2631198	ExpressionStatement	ao -> o |= ( reg1 >> 3 ) << 15	1414:5:28499:28525	2630490	2	True				
ANR	2631199	AssignmentExpression	ao -> o |= ( reg1 >> 3 ) << 15		2630490	0		|=			
ANR	2631200	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631201	Identifier	ao		2630490	0					
ANR	2631202	Identifier	o		2630490	1					
ANR	2631203	ShiftExpression	( reg1 >> 3 ) << 15		2630490	1		<<			
ANR	2631204	ShiftExpression	reg1 >> 3		2630490	0		>>			
ANR	2631205	Identifier	reg1		2630490	0					
ANR	2631206	PrimaryExpression	3		2630490	1					
ANR	2631207	PrimaryExpression	15		2630490	1					
ANR	2631208	ReturnStatement	return 2 ;	1415:5:28532:28540	2630490	3	True				
ANR	2631209	PrimaryExpression	2		2630490	0					
ANR	2631210	IfStatement	if ( ( reg1 == 13 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 ) )		2630490	1					
ANR	2631211	Condition	( reg1 == 13 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 )	1418:8:28557:28605	2630490	0	True				
ANR	2631212	AndExpression	( reg1 == 13 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 )		2630490	0		&&			
ANR	2631213	EqualityExpression	reg1 == 13		2630490	0		==			
ANR	2631214	Identifier	reg1		2630490	0					
ANR	2631215	PrimaryExpression	13		2630490	1					
ANR	2631216	AndExpression	( ! ( m & DOTW_BIT ) ) && ( shift == 0 )		2630490	1		&&			
ANR	2631217	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	0					
ANR	2631218	UnaryOperator	!		2630490	0					
ANR	2631219	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2631220	Identifier	m		2630490	0					
ANR	2631221	Identifier	DOTW_BIT		2630490	1					
ANR	2631222	EqualityExpression	shift == 0		2630490	1		==			
ANR	2631223	Identifier	shift		2630490	0					
ANR	2631224	PrimaryExpression	0		2630490	1					
ANR	2631225	CompoundStatement		126:59:2749:2749	2630490	1					
ANR	2631226	ExpressionStatement	ao -> o = 0x8544	1419:5:28615:28629	2630490	0	True				
ANR	2631227	AssignmentExpression	ao -> o = 0x8544		2630490	0		=			
ANR	2631228	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631229	Identifier	ao		2630490	0					
ANR	2631230	Identifier	o		2630490	1					
ANR	2631231	PrimaryExpression	0x8544		2630490	1					
ANR	2631232	ExpressionStatement	ao -> o |= reg3 << 11	1420:5:28636:28655	2630490	1	True				
ANR	2631233	AssignmentExpression	ao -> o |= reg3 << 11		2630490	0		|=			
ANR	2631234	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631235	Identifier	ao		2630490	0					
ANR	2631236	Identifier	o		2630490	1					
ANR	2631237	ShiftExpression	reg3 << 11		2630490	1		<<			
ANR	2631238	Identifier	reg3		2630490	0					
ANR	2631239	PrimaryExpression	11		2630490	1					
ANR	2631240	ReturnStatement	return 2 ;	1421:5:28662:28670	2630490	2	True				
ANR	2631241	PrimaryExpression	2		2630490	0					
ANR	2631242	ExpressionStatement	ao -> o = 0x0deb0000	1424:4:28683:28701	2630490	2	True				
ANR	2631243	AssignmentExpression	ao -> o = 0x0deb0000		2630490	0		=			
ANR	2631244	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631245	Identifier	ao		2630490	0					
ANR	2631246	Identifier	o		2630490	1					
ANR	2631247	PrimaryExpression	0x0deb0000		2630490	1					
ANR	2631248	ExpressionStatement	ao -> o |= reg1	1425:4:28707:28720	2630490	3	True				
ANR	2631249	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2631250	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631251	Identifier	ao		2630490	0					
ANR	2631252	Identifier	o		2630490	1					
ANR	2631253	Identifier	reg1		2630490	1					
ANR	2631254	ExpressionStatement	ao -> o |= reg3 << 8	1426:4:28726:28744	2630490	4	True				
ANR	2631255	AssignmentExpression	ao -> o |= reg3 << 8		2630490	0		|=			
ANR	2631256	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631257	Identifier	ao		2630490	0					
ANR	2631258	Identifier	o		2630490	1					
ANR	2631259	ShiftExpression	reg3 << 8		2630490	1		<<			
ANR	2631260	Identifier	reg3		2630490	0					
ANR	2631261	PrimaryExpression	8		2630490	1					
ANR	2631262	ExpressionStatement	ao -> o |= shift	1427:4:28750:28764	2630490	5	True				
ANR	2631263	AssignmentExpression	ao -> o |= shift		2630490	0		|=			
ANR	2631264	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631265	Identifier	ao		2630490	0					
ANR	2631266	Identifier	o		2630490	1					
ANR	2631267	Identifier	shift		2630490	1					
ANR	2631268	IfStatement	if ( m & S_BIT )		2630490	6					
ANR	2631269	Condition	m & S_BIT	1428:8:28774:28782	2630490	0	True				
ANR	2631270	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2631271	Identifier	m		2630490	0					
ANR	2631272	Identifier	S_BIT		2630490	1					
ANR	2631273	CompoundStatement		136:19:2926:2926	2630490	1					
ANR	2631274	ExpressionStatement	ao -> o |= 1 << 28	1429:5:28792:28808	2630490	0	True				
ANR	2631275	AssignmentExpression	ao -> o |= 1 << 28		2630490	0		|=			
ANR	2631276	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631277	Identifier	ao		2630490	0					
ANR	2631278	Identifier	o		2630490	1					
ANR	2631279	ShiftExpression	1 << 28		2630490	1		<<			
ANR	2631280	PrimaryExpression	1		2630490	0					
ANR	2631281	PrimaryExpression	28		2630490	1					
ANR	2631282	ReturnStatement	return 4 ;	1431:4:28820:28828	2630490	7	True				
ANR	2631283	PrimaryExpression	4		2630490	0					
ANR	2631284	IfStatement	if ( ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 ) )		2630490	6					
ANR	2631285	Condition	( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 )	1434:7:28843:28889	2630490	0	True				
ANR	2631286	AndExpression	( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 )		2630490	0		&&			
ANR	2631287	RelationalExpression	reg3 < 8		2630490	0		<			
ANR	2631288	Identifier	reg3		2630490	0					
ANR	2631289	PrimaryExpression	8		2630490	1					
ANR	2631290	AndExpression	( ! ( m & DOTW_BIT ) ) && ( shift == 0 )		2630490	1		&&			
ANR	2631291	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	0					
ANR	2631292	UnaryOperator	!		2630490	0					
ANR	2631293	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2631294	Identifier	m		2630490	0					
ANR	2631295	Identifier	DOTW_BIT		2630490	1					
ANR	2631296	EqualityExpression	shift == 0		2630490	1		==			
ANR	2631297	Identifier	shift		2630490	0					
ANR	2631298	PrimaryExpression	0		2630490	1					
ANR	2631299	CompoundStatement		142:56:3033:3033	2630490	1					
ANR	2631300	ExpressionStatement	ao -> o = 0x0018	1435:4:28898:28912	2630490	0	True				
ANR	2631301	AssignmentExpression	ao -> o = 0x0018		2630490	0		=			
ANR	2631302	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631303	Identifier	ao		2630490	0					
ANR	2631304	Identifier	o		2630490	1					
ANR	2631305	PrimaryExpression	0x0018		2630490	1					
ANR	2631306	ExpressionStatement	ao -> o |= ( reg3 >> 2 )	1436:4:28918:28938	2630490	1	True				
ANR	2631307	AssignmentExpression	ao -> o |= ( reg3 >> 2 )		2630490	0		|=			
ANR	2631308	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631309	Identifier	ao		2630490	0					
ANR	2631310	Identifier	o		2630490	1					
ANR	2631311	ShiftExpression	reg3 >> 2		2630490	1		>>			
ANR	2631312	Identifier	reg3		2630490	0					
ANR	2631313	PrimaryExpression	2		2630490	1					
ANR	2631314	ExpressionStatement	ao -> o |= ( reg3 & 0x3 ) << 14	1437:4:28944:28971	2630490	2	True				
ANR	2631315	AssignmentExpression	ao -> o |= ( reg3 & 0x3 ) << 14		2630490	0		|=			
ANR	2631316	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631317	Identifier	ao		2630490	0					
ANR	2631318	Identifier	o		2630490	1					
ANR	2631319	ShiftExpression	( reg3 & 0x3 ) << 14		2630490	1		<<			
ANR	2631320	BitAndExpression	reg3 & 0x3		2630490	0		&			
ANR	2631321	Identifier	reg3		2630490	0					
ANR	2631322	PrimaryExpression	0x3		2630490	1					
ANR	2631323	PrimaryExpression	14		2630490	1					
ANR	2631324	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	3					
ANR	2631325	Condition	"std_16bit_2reg ( ao , m )"	1438:8:28981:29002	2630490	0	True				
ANR	2631326	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2631327	Callee	std_16bit_2reg		2630490	0					
ANR	2631328	Identifier	std_16bit_2reg		2630490	0					
ANR	2631329	ArgumentList	ao		2630490	1					
ANR	2631330	Argument	ao		2630490	0					
ANR	2631331	Identifier	ao		2630490	0					
ANR	2631332	Argument	m		2630490	1					
ANR	2631333	Identifier	m		2630490	0					
ANR	2631334	CompoundStatement		146:32:3146:3146	2630490	1					
ANR	2631335	ReturnStatement	return 2 ;	1439:5:29012:29020	2630490	0	True				
ANR	2631336	PrimaryExpression	2		2630490	0					
ANR	2631337	IfStatement	if ( ( reg1 == reg2 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 ) )		2630490	7					
ANR	2631338	Condition	( reg1 == reg2 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 )	1443:7:29041:29091	2630490	0	True				
ANR	2631339	AndExpression	( reg1 == reg2 ) && ( ! ( m & DOTW_BIT ) ) && ( shift == 0 )		2630490	0		&&			
ANR	2631340	EqualityExpression	reg1 == reg2		2630490	0		==			
ANR	2631341	Identifier	reg1		2630490	0					
ANR	2631342	Identifier	reg2		2630490	1					
ANR	2631343	AndExpression	( ! ( m & DOTW_BIT ) ) && ( shift == 0 )		2630490	1		&&			
ANR	2631344	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	0					
ANR	2631345	UnaryOperator	!		2630490	0					
ANR	2631346	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2631347	Identifier	m		2630490	0					
ANR	2631348	Identifier	DOTW_BIT		2630490	1					
ANR	2631349	EqualityExpression	shift == 0		2630490	1		==			
ANR	2631350	Identifier	shift		2630490	0					
ANR	2631351	PrimaryExpression	0		2630490	1					
ANR	2631352	CompoundStatement		151:60:3235:3235	2630490	1					
ANR	2631353	ExpressionStatement	ao -> o = 0x0044	1444:4:29100:29114	2630490	0	True				
ANR	2631354	AssignmentExpression	ao -> o = 0x0044		2630490	0		=			
ANR	2631355	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631356	Identifier	ao		2630490	0					
ANR	2631357	Identifier	o		2630490	1					
ANR	2631358	PrimaryExpression	0x0044		2630490	1					
ANR	2631359	ExpressionStatement	ao -> o |= ( reg1 & 0x7 ) << 8	1445:4:29120:29146	2630490	1	True				
ANR	2631360	AssignmentExpression	ao -> o |= ( reg1 & 0x7 ) << 8		2630490	0		|=			
ANR	2631361	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631362	Identifier	ao		2630490	0					
ANR	2631363	Identifier	o		2630490	1					
ANR	2631364	ShiftExpression	( reg1 & 0x7 ) << 8		2630490	1		<<			
ANR	2631365	BitAndExpression	reg1 & 0x7		2630490	0		&			
ANR	2631366	Identifier	reg1		2630490	0					
ANR	2631367	PrimaryExpression	0x7		2630490	1					
ANR	2631368	PrimaryExpression	8		2630490	1					
ANR	2631369	ExpressionStatement	ao -> o |= ( reg1 >> 3 ) << 15	1446:4:29152:29178	2630490	2	True				
ANR	2631370	AssignmentExpression	ao -> o |= ( reg1 >> 3 ) << 15		2630490	0		|=			
ANR	2631371	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631372	Identifier	ao		2630490	0					
ANR	2631373	Identifier	o		2630490	1					
ANR	2631374	ShiftExpression	( reg1 >> 3 ) << 15		2630490	1		<<			
ANR	2631375	ShiftExpression	reg1 >> 3		2630490	0		>>			
ANR	2631376	Identifier	reg1		2630490	0					
ANR	2631377	PrimaryExpression	3		2630490	1					
ANR	2631378	PrimaryExpression	15		2630490	1					
ANR	2631379	ExpressionStatement	ao -> o |= reg3 << 11	1447:4:29184:29203	2630490	3	True				
ANR	2631380	AssignmentExpression	ao -> o |= reg3 << 11		2630490	0		|=			
ANR	2631381	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631382	Identifier	ao		2630490	0					
ANR	2631383	Identifier	o		2630490	1					
ANR	2631384	ShiftExpression	reg3 << 11		2630490	1		<<			
ANR	2631385	Identifier	reg3		2630490	0					
ANR	2631386	PrimaryExpression	11		2630490	1					
ANR	2631387	ReturnStatement	return 2 ;	1448:4:29209:29217	2630490	4	True				
ANR	2631388	PrimaryExpression	2		2630490	0					
ANR	2631389	ExpressionStatement	ao -> o = 0x00eb0000	1451:3:29228:29246	2630490	8	True				
ANR	2631390	AssignmentExpression	ao -> o = 0x00eb0000		2630490	0		=			
ANR	2631391	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631392	Identifier	ao		2630490	0					
ANR	2631393	Identifier	o		2630490	1					
ANR	2631394	PrimaryExpression	0x00eb0000		2630490	1					
ANR	2631395	ReturnStatement	"return std_32bit_3reg ( ao , m , true ) ;"	1452:3:29251:29286	2630490	9	True				
ANR	2631396	CallExpression	"std_32bit_3reg ( ao , m , true )"		2630490	0					
ANR	2631397	Callee	std_32bit_3reg		2630490	0					
ANR	2631398	Identifier	std_32bit_3reg		2630490	0					
ANR	2631399	ArgumentList	ao		2630490	1					
ANR	2631400	Argument	ao		2630490	0					
ANR	2631401	Identifier	ao		2630490	0					
ANR	2631402	Argument	m		2630490	1					
ANR	2631403	Identifier	m		2630490	0					
ANR	2631404	Argument	true		2630490	2					
ANR	2631405	Identifier	true		2630490	0					
ANR	2631406	BreakStatement	break ;	1454:3:29303:29308	2630490	13	True				
ANR	2631407	Label	default :	1455:2:29312:29319	2630490	14	True				
ANR	2631408	Identifier	default		2630490	0					
ANR	2631409	ReturnStatement	return - 1 ;	1456:3:29324:29333	2630490	15	True				
ANR	2631410	UnaryOperationExpression	- 1		2630490	0					
ANR	2631411	UnaryOperator	-		2630490	0					
ANR	2631412	PrimaryExpression	1		2630490	1					
ANR	2631413	ElseStatement	else		2630490	0					
ANR	2631414	IfStatement	"if ( ( m = opmask ( ao -> op , ""adc"" , S_BIT ) ) )"		2630490	0					
ANR	2631415	Condition	"m = opmask ( ao -> op , ""adc"" , S_BIT )"	1459:5:29352:29386	2630490	0	True				
ANR	2631416	AssignmentExpression	"m = opmask ( ao -> op , ""adc"" , S_BIT )"		2630490	0		=			
ANR	2631417	Identifier	m		2630490	0					
ANR	2631418	CallExpression	"opmask ( ao -> op , ""adc"" , S_BIT )"		2630490	1					
ANR	2631419	Callee	opmask		2630490	0					
ANR	2631420	Identifier	opmask		2630490	0					
ANR	2631421	ArgumentList	ao -> op		2630490	1					
ANR	2631422	Argument	ao -> op		2630490	0					
ANR	2631423	PtrMemberAccess	ao -> op		2630490	0					
ANR	2631424	Identifier	ao		2630490	0					
ANR	2631425	Identifier	op		2630490	1					
ANR	2631426	Argument	"""adc"""		2630490	1					
ANR	2631427	PrimaryExpression	"""adc"""		2630490	0					
ANR	2631428	Argument	S_BIT		2630490	2					
ANR	2631429	Identifier	S_BIT		2630490	0					
ANR	2631430	CompoundStatement		168:2:3534:3568	2630490	1					
ANR	2631431	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1460:2:29393:29427	2630490	0	True				
ANR	2631432	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2631433	IdentifierDeclType	ut64		2630490	0					
ANR	2631434	Identifier	argt		2630490	1					
ANR	2631435	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2631436	Identifier	argt		2630490	0					
ANR	2631437	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2631438	Callee	thumb_selector		2630490	0					
ANR	2631439	Identifier	thumb_selector		2630490	0					
ANR	2631440	ArgumentList	ao -> a		2630490	1					
ANR	2631441	Argument	ao -> a		2630490	0					
ANR	2631442	PtrMemberAccess	ao -> a		2630490	0					
ANR	2631443	Identifier	ao		2630490	0					
ANR	2631444	Identifier	a		2630490	1					
ANR	2631445	SwitchStatement	switch ( argt )		2630490	1					
ANR	2631446	Condition	argt	1461:10:29439:29442	2630490	0	True				
ANR	2631447	Identifier	argt		2630490	0					
ANR	2631448	CompoundStatement		169:16:3586:3586	2630490	1					
ANR	2631449	Label	case THUMB_REG_CONST :	1462:2:29449:29469	2630490	0	True				
ANR	2631450	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2631451	CompoundStatement		170:24:3612:3612	2630490	1					
ANR	2631452	ExpressionStatement	std_opt_2 ( ao )	1463:3:29476:29490	2630490	0	True				
ANR	2631453	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2631454	Callee	std_opt_2		2630490	0					
ANR	2631455	Identifier	std_opt_2		2630490	0					
ANR	2631456	ArgumentList	ao		2630490	1					
ANR	2631457	Argument	ao		2630490	0					
ANR	2631458	Identifier	ao		2630490	0					
ANR	2631459	Label	case THUMB_REG_REG_CONST :	1466:2:29536:29560	2630490	2	True				
ANR	2631460	Identifier	THUMB_REG_REG_CONST		2630490	0					
ANR	2631461	CompoundStatement		174:28:3703:3703	2630490	3					
ANR	2631462	ExpressionStatement	ao -> o = 0x40f10000	1467:3:29567:29585	2630490	0	True				
ANR	2631463	AssignmentExpression	ao -> o = 0x40f10000		2630490	0		=			
ANR	2631464	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631465	Identifier	ao		2630490	0					
ANR	2631466	Identifier	o		2630490	1					
ANR	2631467	PrimaryExpression	0x40f10000		2630490	1					
ANR	2631468	ExpressionStatement	ao -> o |= getthimmed12 ( ao -> a [ 2 ] )	1468:3:29590:29622	2630490	1	True				
ANR	2631469	AssignmentExpression	ao -> o |= getthimmed12 ( ao -> a [ 2 ] )		2630490	0		|=			
ANR	2631470	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631471	Identifier	ao		2630490	0					
ANR	2631472	Identifier	o		2630490	1					
ANR	2631473	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		2630490	1					
ANR	2631474	Callee	getthimmed12		2630490	0					
ANR	2631475	Identifier	getthimmed12		2630490	0					
ANR	2631476	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2631477	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2631478	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2631479	PtrMemberAccess	ao -> a		2630490	0					
ANR	2631480	Identifier	ao		2630490	0					
ANR	2631481	Identifier	a		2630490	1					
ANR	2631482	PrimaryExpression	2		2630490	1					
ANR	2631483	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	1469:3:29627:29663	2630490	2	True				
ANR	2631484	CallExpression	"std_32bit_2reg ( ao , m , false )"		2630490	0					
ANR	2631485	Callee	std_32bit_2reg		2630490	0					
ANR	2631486	Identifier	std_32bit_2reg		2630490	0					
ANR	2631487	ArgumentList	ao		2630490	1					
ANR	2631488	Argument	ao		2630490	0					
ANR	2631489	Identifier	ao		2630490	0					
ANR	2631490	Argument	m		2630490	1					
ANR	2631491	Identifier	m		2630490	0					
ANR	2631492	Argument	false		2630490	2					
ANR	2631493	Identifier	false		2630490	0					
ANR	2631494	BreakStatement	break ;	1471:3:29680:29685	2630490	4	True				
ANR	2631495	Label	case THUMB_REG_REG :	1472:2:29689:29707	2630490	5	True				
ANR	2631496	Identifier	THUMB_REG_REG		2630490	0					
ANR	2631497	CompoundStatement		180:22:3850:3850	2630490	6					
ANR	2631498	ExpressionStatement	ao -> o = 0x4041	1473:3:29714:29728	2630490	0	True				
ANR	2631499	AssignmentExpression	ao -> o = 0x4041		2630490	0		=			
ANR	2631500	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631501	Identifier	ao		2630490	0					
ANR	2631502	Identifier	o		2630490	1					
ANR	2631503	PrimaryExpression	0x4041		2630490	1					
ANR	2631504	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	1					
ANR	2631505	Condition	"std_16bit_2reg ( ao , m )"	1474:7:29737:29758	2630490	0	True				
ANR	2631506	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2631507	Callee	std_16bit_2reg		2630490	0					
ANR	2631508	Identifier	std_16bit_2reg		2630490	0					
ANR	2631509	ArgumentList	ao		2630490	1					
ANR	2631510	Argument	ao		2630490	0					
ANR	2631511	Identifier	ao		2630490	0					
ANR	2631512	Argument	m		2630490	1					
ANR	2631513	Identifier	m		2630490	0					
ANR	2631514	CompoundStatement		182:31:3902:3902	2630490	1					
ANR	2631515	ReturnStatement	return 2 ;	1475:4:29767:29775	2630490	0	True				
ANR	2631516	PrimaryExpression	2		2630490	0					
ANR	2631517	ExpressionStatement	std_opt_2 ( ao )	1477:3:29785:29799	2630490	2	True				
ANR	2631518	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2631519	Callee	std_opt_2		2630490	0					
ANR	2631520	Identifier	std_opt_2		2630490	0					
ANR	2631521	ArgumentList	ao		2630490	1					
ANR	2631522	Argument	ao		2630490	0					
ANR	2631523	Identifier	ao		2630490	0					
ANR	2631524	Label	case THUMB_REG_REG_REG :	1480:2:29845:29867	2630490	7	True				
ANR	2631525	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2631526	CompoundStatement		188:26:4010:4010	2630490	8					
ANR	2631527	ExpressionStatement	ao -> o = 0x40eb0000	1481:3:29874:29892	2630490	0	True				
ANR	2631528	AssignmentExpression	ao -> o = 0x40eb0000		2630490	0		=			
ANR	2631529	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631530	Identifier	ao		2630490	0					
ANR	2631531	Identifier	o		2630490	1					
ANR	2631532	PrimaryExpression	0x40eb0000		2630490	1					
ANR	2631533	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	1482:3:29897:29933	2630490	1	True				
ANR	2631534	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2631535	Callee	std_32bit_3reg		2630490	0					
ANR	2631536	Identifier	std_32bit_3reg		2630490	0					
ANR	2631537	ArgumentList	ao		2630490	1					
ANR	2631538	Argument	ao		2630490	0					
ANR	2631539	Identifier	ao		2630490	0					
ANR	2631540	Argument	m		2630490	1					
ANR	2631541	Identifier	m		2630490	0					
ANR	2631542	Argument	false		2630490	2					
ANR	2631543	Identifier	false		2630490	0					
ANR	2631544	BreakStatement	break ;	1484:3:29950:29955	2630490	9	True				
ANR	2631545	Label	case THUMB_REG_REG_SHIFT :	1485:2:29959:29983	2630490	10	True				
ANR	2631546	Identifier	THUMB_REG_REG_SHIFT		2630490	0					
ANR	2631547	CompoundStatement		193:28:4126:4126	2630490	11					
ANR	2631548	ExpressionStatement	std_opt_3 ( ao )	1486:3:29990:30004	2630490	0	True				
ANR	2631549	CallExpression	std_opt_3 ( ao )		2630490	0					
ANR	2631550	Callee	std_opt_3		2630490	0					
ANR	2631551	Identifier	std_opt_3		2630490	0					
ANR	2631552	ArgumentList	ao		2630490	1					
ANR	2631553	Argument	ao		2630490	0					
ANR	2631554	Identifier	ao		2630490	0					
ANR	2631555	Label	case THUMB_REG_REG_REG_SHIFT :	1490:2:30080:30108	2630490	12	True				
ANR	2631556	Identifier	THUMB_REG_REG_REG_SHIFT		2630490	0					
ANR	2631557	CompoundStatement		198:32:4251:4251	2630490	13					
ANR	2631558	ExpressionStatement	ao -> o = 0x40eb0000	1491:3:30115:30133	2630490	0	True				
ANR	2631559	AssignmentExpression	ao -> o = 0x40eb0000		2630490	0		=			
ANR	2631560	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631561	Identifier	ao		2630490	0					
ANR	2631562	Identifier	o		2630490	1					
ANR	2631563	PrimaryExpression	0x40eb0000		2630490	1					
ANR	2631564	ReturnStatement	"return std_32bit_3reg ( ao , m , true ) ;"	1492:3:30138:30172	2630490	1	True				
ANR	2631565	CallExpression	"std_32bit_3reg ( ao , m , true )"		2630490	0					
ANR	2631566	Callee	std_32bit_3reg		2630490	0					
ANR	2631567	Identifier	std_32bit_3reg		2630490	0					
ANR	2631568	ArgumentList	ao		2630490	1					
ANR	2631569	Argument	ao		2630490	0					
ANR	2631570	Identifier	ao		2630490	0					
ANR	2631571	Argument	m		2630490	1					
ANR	2631572	Identifier	m		2630490	0					
ANR	2631573	Argument	true		2630490	2					
ANR	2631574	Identifier	true		2630490	0					
ANR	2631575	BreakStatement	break ;	1494:3:30189:30194	2630490	14	True				
ANR	2631576	Label	default :	1495:2:30198:30205	2630490	15	True				
ANR	2631577	Identifier	default		2630490	0					
ANR	2631578	ReturnStatement	return - 1 ;	1496:3:30210:30219	2630490	16	True				
ANR	2631579	UnaryOperationExpression	- 1		2630490	0					
ANR	2631580	UnaryOperator	-		2630490	0					
ANR	2631581	PrimaryExpression	1		2630490	1					
ANR	2631582	ElseStatement	else		2630490	0					
ANR	2631583	IfStatement	"if ( ( m = opmask ( ao -> op , ""adr"" , 0 ) ) )"		2630490	0					
ANR	2631584	Condition	"m = opmask ( ao -> op , ""adr"" , 0 )"	1499:5:30238:30268	2630490	0	True				
ANR	2631585	AssignmentExpression	"m = opmask ( ao -> op , ""adr"" , 0 )"		2630490	0		=			
ANR	2631586	Identifier	m		2630490	0					
ANR	2631587	CallExpression	"opmask ( ao -> op , ""adr"" , 0 )"		2630490	1					
ANR	2631588	Callee	opmask		2630490	0					
ANR	2631589	Identifier	opmask		2630490	0					
ANR	2631590	ArgumentList	ao -> op		2630490	1					
ANR	2631591	Argument	ao -> op		2630490	0					
ANR	2631592	PtrMemberAccess	ao -> op		2630490	0					
ANR	2631593	Identifier	ao		2630490	0					
ANR	2631594	Identifier	op		2630490	1					
ANR	2631595	Argument	"""adr"""		2630490	1					
ANR	2631596	PrimaryExpression	"""adr"""		2630490	0					
ANR	2631597	Argument	0		2630490	2					
ANR	2631598	PrimaryExpression	0		2630490	0					
ANR	2631599	CompoundStatement		208:2:4416:4450	2630490	1					
ANR	2631600	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1500:2:30275:30309	2630490	0	True				
ANR	2631601	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2631602	IdentifierDeclType	ut64		2630490	0					
ANR	2631603	Identifier	argt		2630490	1					
ANR	2631604	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2631605	Identifier	argt		2630490	0					
ANR	2631606	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2631607	Callee	thumb_selector		2630490	0					
ANR	2631608	Identifier	thumb_selector		2630490	0					
ANR	2631609	ArgumentList	ao -> a		2630490	1					
ANR	2631610	Argument	ao -> a		2630490	0					
ANR	2631611	PtrMemberAccess	ao -> a		2630490	0					
ANR	2631612	Identifier	ao		2630490	0					
ANR	2631613	Identifier	a		2630490	1					
ANR	2631614	SwitchStatement	switch ( argt )		2630490	1					
ANR	2631615	Condition	argt	1501:10:30321:30324	2630490	0	True				
ANR	2631616	Identifier	argt		2630490	0					
ANR	2631617	CompoundStatement		209:16:4468:4468	2630490	1					
ANR	2631618	Label	case THUMB_REG_CONST :	1502:2:30331:30351	2630490	0	True				
ANR	2631619	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2631620	CompoundStatement		212:3:4531:4561	2630490	1					
ANR	2631621	IdentifierDeclStatement	ut8 reg = getreg ( ao -> a [ 0 ] ) ;	1503:3:30358:30385	2630490	0	True				
ANR	2631622	IdentifierDecl	reg = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2631623	IdentifierDeclType	ut8		2630490	0					
ANR	2631624	Identifier	reg		2630490	1					
ANR	2631625	AssignmentExpression	reg = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2631626	Identifier	reg		2630490	0					
ANR	2631627	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2631628	Callee	getreg		2630490	0					
ANR	2631629	Identifier	getreg		2630490	0					
ANR	2631630	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2631631	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2631632	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2631633	PtrMemberAccess	ao -> a		2630490	0					
ANR	2631634	Identifier	ao		2630490	0					
ANR	2631635	Identifier	a		2630490	1					
ANR	2631636	PrimaryExpression	0		2630490	1					
ANR	2631637	IdentifierDeclStatement	st32 label = getnum ( ao -> a [ 1 ] ) ;	1504:3:30390:30420	2630490	1	True				
ANR	2631638	IdentifierDecl	label = getnum ( ao -> a [ 1 ] )		2630490	0					
ANR	2631639	IdentifierDeclType	st32		2630490	0					
ANR	2631640	Identifier	label		2630490	1					
ANR	2631641	AssignmentExpression	label = getnum ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2631642	Identifier	label		2630490	0					
ANR	2631643	CallExpression	getnum ( ao -> a [ 1 ] )		2630490	1					
ANR	2631644	Callee	getnum		2630490	0					
ANR	2631645	Identifier	getnum		2630490	0					
ANR	2631646	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2631647	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2631648	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2631649	PtrMemberAccess	ao -> a		2630490	0					
ANR	2631650	Identifier	ao		2630490	0					
ANR	2631651	Identifier	a		2630490	1					
ANR	2631652	PrimaryExpression	1		2630490	1					
ANR	2631653	IfStatement	if ( ! ( m & DOTW_BIT ) && ( reg < 8 ) && ( label < 1024 ) && ( label >= 0 ) && ( label % 4 == 0 ) )		2630490	2					
ANR	2631654	Condition	! ( m & DOTW_BIT ) && ( reg < 8 ) && ( label < 1024 ) && ( label >= 0 ) && ( label % 4 == 0 )	1505:8:30430:30511	2630490	0	True				
ANR	2631655	AndExpression	! ( m & DOTW_BIT ) && ( reg < 8 ) && ( label < 1024 ) && ( label >= 0 ) && ( label % 4 == 0 )		2630490	0		&&			
ANR	2631656	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	0					
ANR	2631657	UnaryOperator	!		2630490	0					
ANR	2631658	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2631659	Identifier	m		2630490	0					
ANR	2631660	Identifier	DOTW_BIT		2630490	1					
ANR	2631661	AndExpression	( reg < 8 ) && ( label < 1024 ) && ( label >= 0 ) && ( label % 4 == 0 )		2630490	1		&&			
ANR	2631662	RelationalExpression	reg < 8		2630490	0		<			
ANR	2631663	Identifier	reg		2630490	0					
ANR	2631664	PrimaryExpression	8		2630490	1					
ANR	2631665	AndExpression	( label < 1024 ) && ( label >= 0 ) && ( label % 4 == 0 )		2630490	1		&&			
ANR	2631666	RelationalExpression	label < 1024		2630490	0		<			
ANR	2631667	Identifier	label		2630490	0					
ANR	2631668	PrimaryExpression	1024		2630490	1					
ANR	2631669	AndExpression	( label >= 0 ) && ( label % 4 == 0 )		2630490	1		&&			
ANR	2631670	RelationalExpression	label >= 0		2630490	0		>=			
ANR	2631671	Identifier	label		2630490	0					
ANR	2631672	PrimaryExpression	0		2630490	1					
ANR	2631673	EqualityExpression	label % 4 == 0		2630490	1		==			
ANR	2631674	MultiplicativeExpression	label % 4		2630490	0		%			
ANR	2631675	Identifier	label		2630490	0					
ANR	2631676	PrimaryExpression	4		2630490	1					
ANR	2631677	PrimaryExpression	0		2630490	1					
ANR	2631678	CompoundStatement		213:92:4655:4655	2630490	1					
ANR	2631679	ExpressionStatement	ao -> o = 0x00a0	1506:4:30520:30534	2630490	0	True				
ANR	2631680	AssignmentExpression	ao -> o = 0x00a0		2630490	0		=			
ANR	2631681	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631682	Identifier	ao		2630490	0					
ANR	2631683	Identifier	o		2630490	1					
ANR	2631684	PrimaryExpression	0x00a0		2630490	1					
ANR	2631685	ExpressionStatement	ao -> o |= reg	1507:4:30540:30552	2630490	1	True				
ANR	2631686	AssignmentExpression	ao -> o |= reg		2630490	0		|=			
ANR	2631687	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631688	Identifier	ao		2630490	0					
ANR	2631689	Identifier	o		2630490	1					
ANR	2631690	Identifier	reg		2630490	1					
ANR	2631691	ExpressionStatement	ao -> o |= ( label / 4 ) << 8	1508:4:30558:30583	2630490	2	True				
ANR	2631692	AssignmentExpression	ao -> o |= ( label / 4 ) << 8		2630490	0		|=			
ANR	2631693	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631694	Identifier	ao		2630490	0					
ANR	2631695	Identifier	o		2630490	1					
ANR	2631696	ShiftExpression	( label / 4 ) << 8		2630490	1		<<			
ANR	2631697	MultiplicativeExpression	label / 4		2630490	0		/			
ANR	2631698	Identifier	label		2630490	0					
ANR	2631699	PrimaryExpression	4		2630490	1					
ANR	2631700	PrimaryExpression	8		2630490	1					
ANR	2631701	ReturnStatement	return 2 ;	1509:4:30589:30597	2630490	3	True				
ANR	2631702	PrimaryExpression	2		2630490	0					
ANR	2631703	ElseStatement	else		2630490	0					
ANR	2631704	IfStatement	if ( ( label < 0 ) && ( label > - 4096 ) )		2630490	0					
ANR	2631705	Condition	( label < 0 ) && ( label > - 4096 )	1510:14:30613:30642	2630490	0	True				
ANR	2631706	AndExpression	( label < 0 ) && ( label > - 4096 )		2630490	0		&&			
ANR	2631707	RelationalExpression	label < 0		2630490	0		<			
ANR	2631708	Identifier	label		2630490	0					
ANR	2631709	PrimaryExpression	0		2630490	1					
ANR	2631710	RelationalExpression	label > - 4096		2630490	1		>			
ANR	2631711	Identifier	label		2630490	0					
ANR	2631712	UnaryOperationExpression	- 4096		2630490	1					
ANR	2631713	UnaryOperator	-		2630490	0					
ANR	2631714	PrimaryExpression	4096		2630490	1					
ANR	2631715	CompoundStatement		218:46:4786:4786	2630490	1					
ANR	2631716	IfStatement	if ( m & DOTN_BIT )		2630490	0					
ANR	2631717	Condition	m & DOTN_BIT	1511:8:30655:30666	2630490	0	True				
ANR	2631718	BitAndExpression	m & DOTN_BIT		2630490	0		&			
ANR	2631719	Identifier	m		2630490	0					
ANR	2631720	Identifier	DOTN_BIT		2630490	1					
ANR	2631721	CompoundStatement		219:22:4810:4810	2630490	1					
ANR	2631722	ReturnStatement	return - 1 ;	1513:5:30712:30721	2630490	0	True				
ANR	2631723	UnaryOperationExpression	- 1		2630490	0					
ANR	2631724	UnaryOperator	-		2630490	0					
ANR	2631725	PrimaryExpression	1		2630490	1					
ANR	2631726	ExpressionStatement	ao -> o = 0xaff20000	1515:4:30733:30751	2630490	1	True				
ANR	2631727	AssignmentExpression	ao -> o = 0xaff20000		2630490	0		=			
ANR	2631728	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631729	Identifier	ao		2630490	0					
ANR	2631730	Identifier	o		2630490	1					
ANR	2631731	PrimaryExpression	0xaff20000		2630490	1					
ANR	2631732	ExpressionStatement	ao -> o |= reg	1516:4:30757:30769	2630490	2	True				
ANR	2631733	AssignmentExpression	ao -> o |= reg		2630490	0		|=			
ANR	2631734	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631735	Identifier	ao		2630490	0					
ANR	2631736	Identifier	o		2630490	1					
ANR	2631737	Identifier	reg		2630490	1					
ANR	2631738	ExpressionStatement	ao -> o |= getthzeroimmed12 ( - label )	1517:4:30775:30809	2630490	3	True				
ANR	2631739	AssignmentExpression	ao -> o |= getthzeroimmed12 ( - label )		2630490	0		|=			
ANR	2631740	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631741	Identifier	ao		2630490	0					
ANR	2631742	Identifier	o		2630490	1					
ANR	2631743	CallExpression	getthzeroimmed12 ( - label )		2630490	1					
ANR	2631744	Callee	getthzeroimmed12		2630490	0					
ANR	2631745	Identifier	getthzeroimmed12		2630490	0					
ANR	2631746	ArgumentList	- label		2630490	1					
ANR	2631747	Argument	- label		2630490	0					
ANR	2631748	UnaryOperationExpression	- label		2630490	0					
ANR	2631749	UnaryOperator	-		2630490	0					
ANR	2631750	Identifier	label		2630490	1					
ANR	2631751	ReturnStatement	return 4 ;	1518:4:30815:30823	2630490	4	True				
ANR	2631752	PrimaryExpression	4		2630490	0					
ANR	2631753	ElseStatement	else		2630490	0					
ANR	2631754	IfStatement	if ( ( label > 0 ) && ( label < 4096 ) )		2630490	0					
ANR	2631755	Condition	( label > 0 ) && ( label < 4096 )	1519:14:30839:30867	2630490	0	True				
ANR	2631756	AndExpression	( label > 0 ) && ( label < 4096 )		2630490	0		&&			
ANR	2631757	RelationalExpression	label > 0		2630490	0		>			
ANR	2631758	Identifier	label		2630490	0					
ANR	2631759	PrimaryExpression	0		2630490	1					
ANR	2631760	RelationalExpression	label < 4096		2630490	1		<			
ANR	2631761	Identifier	label		2630490	0					
ANR	2631762	PrimaryExpression	4096		2630490	1					
ANR	2631763	CompoundStatement		227:45:5011:5011	2630490	1					
ANR	2631764	IfStatement	if ( m & DOTN_BIT )		2630490	0					
ANR	2631765	Condition	m & DOTN_BIT	1520:8:30880:30891	2630490	0	True				
ANR	2631766	BitAndExpression	m & DOTN_BIT		2630490	0		&			
ANR	2631767	Identifier	m		2630490	0					
ANR	2631768	Identifier	DOTN_BIT		2630490	1					
ANR	2631769	CompoundStatement		228:22:5035:5035	2630490	1					
ANR	2631770	ReturnStatement	return - 1 ;	1522:5:30937:30946	2630490	0	True				
ANR	2631771	UnaryOperationExpression	- 1		2630490	0					
ANR	2631772	UnaryOperator	-		2630490	0					
ANR	2631773	PrimaryExpression	1		2630490	1					
ANR	2631774	ExpressionStatement	ao -> o = 0x0ff20000	1524:4:30958:30976	2630490	1	True				
ANR	2631775	AssignmentExpression	ao -> o = 0x0ff20000		2630490	0		=			
ANR	2631776	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631777	Identifier	ao		2630490	0					
ANR	2631778	Identifier	o		2630490	1					
ANR	2631779	PrimaryExpression	0x0ff20000		2630490	1					
ANR	2631780	ExpressionStatement	ao -> o |= reg	1525:4:30982:30994	2630490	2	True				
ANR	2631781	AssignmentExpression	ao -> o |= reg		2630490	0		|=			
ANR	2631782	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631783	Identifier	ao		2630490	0					
ANR	2631784	Identifier	o		2630490	1					
ANR	2631785	Identifier	reg		2630490	1					
ANR	2631786	ExpressionStatement	ao -> o |= getthzeroimmed12 ( label )	1526:4:31000:31033	2630490	3	True				
ANR	2631787	AssignmentExpression	ao -> o |= getthzeroimmed12 ( label )		2630490	0		|=			
ANR	2631788	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631789	Identifier	ao		2630490	0					
ANR	2631790	Identifier	o		2630490	1					
ANR	2631791	CallExpression	getthzeroimmed12 ( label )		2630490	1					
ANR	2631792	Callee	getthzeroimmed12		2630490	0					
ANR	2631793	Identifier	getthzeroimmed12		2630490	0					
ANR	2631794	ArgumentList	label		2630490	1					
ANR	2631795	Argument	label		2630490	0					
ANR	2631796	Identifier	label		2630490	0					
ANR	2631797	ReturnStatement	return 4 ;	1527:4:31039:31047	2630490	4	True				
ANR	2631798	PrimaryExpression	4		2630490	0					
ANR	2631799	ReturnStatement	return - 1 ;	1529:3:31057:31066	2630490	3	True				
ANR	2631800	UnaryOperationExpression	- 1		2630490	0					
ANR	2631801	UnaryOperator	-		2630490	0					
ANR	2631802	PrimaryExpression	1		2630490	1					
ANR	2631803	BreakStatement	break ;	1531:3:31083:31088	2630490	2	True				
ANR	2631804	Label	default :	1532:2:31092:31099	2630490	3	True				
ANR	2631805	Identifier	default		2630490	0					
ANR	2631806	ReturnStatement	return - 1 ;	1533:3:31104:31113	2630490	4	True				
ANR	2631807	UnaryOperationExpression	- 1		2630490	0					
ANR	2631808	UnaryOperator	-		2630490	0					
ANR	2631809	PrimaryExpression	1		2630490	1					
ANR	2631810	ElseStatement	else		2630490	0					
ANR	2631811	IfStatement	"if ( ( m = opmask ( ao -> op , ""and"" , S_BIT ) ) )"		2630490	0					
ANR	2631812	Condition	"m = opmask ( ao -> op , ""and"" , S_BIT )"	1536:5:31132:31166	2630490	0	True				
ANR	2631813	AssignmentExpression	"m = opmask ( ao -> op , ""and"" , S_BIT )"		2630490	0		=			
ANR	2631814	Identifier	m		2630490	0					
ANR	2631815	CallExpression	"opmask ( ao -> op , ""and"" , S_BIT )"		2630490	1					
ANR	2631816	Callee	opmask		2630490	0					
ANR	2631817	Identifier	opmask		2630490	0					
ANR	2631818	ArgumentList	ao -> op		2630490	1					
ANR	2631819	Argument	ao -> op		2630490	0					
ANR	2631820	PtrMemberAccess	ao -> op		2630490	0					
ANR	2631821	Identifier	ao		2630490	0					
ANR	2631822	Identifier	op		2630490	1					
ANR	2631823	Argument	"""and"""		2630490	1					
ANR	2631824	PrimaryExpression	"""and"""		2630490	0					
ANR	2631825	Argument	S_BIT		2630490	2					
ANR	2631826	Identifier	S_BIT		2630490	0					
ANR	2631827	CompoundStatement		245:2:5314:5348	2630490	1					
ANR	2631828	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1537:2:31173:31207	2630490	0	True				
ANR	2631829	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2631830	IdentifierDeclType	ut64		2630490	0					
ANR	2631831	Identifier	argt		2630490	1					
ANR	2631832	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2631833	Identifier	argt		2630490	0					
ANR	2631834	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2631835	Callee	thumb_selector		2630490	0					
ANR	2631836	Identifier	thumb_selector		2630490	0					
ANR	2631837	ArgumentList	ao -> a		2630490	1					
ANR	2631838	Argument	ao -> a		2630490	0					
ANR	2631839	PtrMemberAccess	ao -> a		2630490	0					
ANR	2631840	Identifier	ao		2630490	0					
ANR	2631841	Identifier	a		2630490	1					
ANR	2631842	SwitchStatement	switch ( argt )		2630490	1					
ANR	2631843	Condition	argt	1538:10:31219:31222	2630490	0	True				
ANR	2631844	Identifier	argt		2630490	0					
ANR	2631845	CompoundStatement		246:16:5366:5366	2630490	1					
ANR	2631846	Label	case THUMB_REG_REG :	1539:2:31229:31247	2630490	0	True				
ANR	2631847	Identifier	THUMB_REG_REG		2630490	0					
ANR	2631848	CompoundStatement		247:22:5390:5390	2630490	1					
ANR	2631849	ExpressionStatement	ao -> o = 0x0040	1540:3:31254:31268	2630490	0	True				
ANR	2631850	AssignmentExpression	ao -> o = 0x0040		2630490	0		=			
ANR	2631851	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631852	Identifier	ao		2630490	0					
ANR	2631853	Identifier	o		2630490	1					
ANR	2631854	PrimaryExpression	0x0040		2630490	1					
ANR	2631855	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	1					
ANR	2631856	Condition	"std_16bit_2reg ( ao , m )"	1541:7:31277:31298	2630490	0	True				
ANR	2631857	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2631858	Callee	std_16bit_2reg		2630490	0					
ANR	2631859	Identifier	std_16bit_2reg		2630490	0					
ANR	2631860	ArgumentList	ao		2630490	1					
ANR	2631861	Argument	ao		2630490	0					
ANR	2631862	Identifier	ao		2630490	0					
ANR	2631863	Argument	m		2630490	1					
ANR	2631864	Identifier	m		2630490	0					
ANR	2631865	CompoundStatement		249:31:5442:5442	2630490	1					
ANR	2631866	ReturnStatement	return 2 ;	1542:4:31307:31315	2630490	0	True				
ANR	2631867	PrimaryExpression	2		2630490	0					
ANR	2631868	ExpressionStatement	std_opt_2 ( ao )	1544:3:31325:31339	2630490	2	True				
ANR	2631869	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2631870	Callee	std_opt_2		2630490	0					
ANR	2631871	Identifier	std_opt_2		2630490	0					
ANR	2631872	ArgumentList	ao		2630490	1					
ANR	2631873	Argument	ao		2630490	0					
ANR	2631874	Identifier	ao		2630490	0					
ANR	2631875	Label	case THUMB_REG_REG_REG :	1547:2:31385:31407	2630490	2	True				
ANR	2631876	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2631877	CompoundStatement		255:26:5550:5550	2630490	3					
ANR	2631878	ExpressionStatement	ao -> o = 0x00ea0000	1548:3:31414:31432	2630490	0	True				
ANR	2631879	AssignmentExpression	ao -> o = 0x00ea0000		2630490	0		=			
ANR	2631880	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631881	Identifier	ao		2630490	0					
ANR	2631882	Identifier	o		2630490	1					
ANR	2631883	PrimaryExpression	0x00ea0000		2630490	1					
ANR	2631884	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	1549:3:31437:31473	2630490	1	True				
ANR	2631885	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2631886	Callee	std_32bit_3reg		2630490	0					
ANR	2631887	Identifier	std_32bit_3reg		2630490	0					
ANR	2631888	ArgumentList	ao		2630490	1					
ANR	2631889	Argument	ao		2630490	0					
ANR	2631890	Identifier	ao		2630490	0					
ANR	2631891	Argument	m		2630490	1					
ANR	2631892	Identifier	m		2630490	0					
ANR	2631893	Argument	false		2630490	2					
ANR	2631894	Identifier	false		2630490	0					
ANR	2631895	BreakStatement	break ;	1551:3:31490:31495	2630490	4	True				
ANR	2631896	Label	case THUMB_REG_CONST :	1552:2:31499:31519	2630490	5	True				
ANR	2631897	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2631898	CompoundStatement		260:24:5662:5662	2630490	6					
ANR	2631899	ExpressionStatement	std_opt_2 ( ao )	1553:3:31526:31540	2630490	0	True				
ANR	2631900	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2631901	Callee	std_opt_2		2630490	0					
ANR	2631902	Identifier	std_opt_2		2630490	0					
ANR	2631903	ArgumentList	ao		2630490	1					
ANR	2631904	Argument	ao		2630490	0					
ANR	2631905	Identifier	ao		2630490	0					
ANR	2631906	Label	case THUMB_REG_REG_CONST :	1556:2:31586:31610	2630490	7	True				
ANR	2631907	Identifier	THUMB_REG_REG_CONST		2630490	0					
ANR	2631908	CompoundStatement		265:3:5758:5792	2630490	8					
ANR	2631909	IdentifierDeclStatement	ut32 imm = getthimmed12 ( ao -> a [ 2 ] ) ;	1557:3:31617:31651	2630490	0	True				
ANR	2631910	IdentifierDecl	imm = getthimmed12 ( ao -> a [ 2 ] )		2630490	0					
ANR	2631911	IdentifierDeclType	ut32		2630490	0					
ANR	2631912	Identifier	imm		2630490	1					
ANR	2631913	AssignmentExpression	imm = getthimmed12 ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2631914	Identifier	imm		2630490	0					
ANR	2631915	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		2630490	1					
ANR	2631916	Callee	getthimmed12		2630490	0					
ANR	2631917	Identifier	getthimmed12		2630490	0					
ANR	2631918	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2631919	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2631920	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2631921	PtrMemberAccess	ao -> a		2630490	0					
ANR	2631922	Identifier	ao		2630490	0					
ANR	2631923	Identifier	a		2630490	1					
ANR	2631924	PrimaryExpression	2		2630490	1					
ANR	2631925	ExpressionStatement	ao -> o = 0x00f00000	1558:3:31656:31674	2630490	1	True				
ANR	2631926	AssignmentExpression	ao -> o = 0x00f00000		2630490	0		=			
ANR	2631927	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631928	Identifier	ao		2630490	0					
ANR	2631929	Identifier	o		2630490	1					
ANR	2631930	PrimaryExpression	0x00f00000		2630490	1					
ANR	2631931	ExpressionStatement	ao -> o |= imm	1559:3:31679:31691	2630490	2	True				
ANR	2631932	AssignmentExpression	ao -> o |= imm		2630490	0		|=			
ANR	2631933	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631934	Identifier	ao		2630490	0					
ANR	2631935	Identifier	o		2630490	1					
ANR	2631936	Identifier	imm		2630490	1					
ANR	2631937	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	1560:3:31696:31732	2630490	3	True				
ANR	2631938	CallExpression	"std_32bit_2reg ( ao , m , false )"		2630490	0					
ANR	2631939	Callee	std_32bit_2reg		2630490	0					
ANR	2631940	Identifier	std_32bit_2reg		2630490	0					
ANR	2631941	ArgumentList	ao		2630490	1					
ANR	2631942	Argument	ao		2630490	0					
ANR	2631943	Identifier	ao		2630490	0					
ANR	2631944	Argument	m		2630490	1					
ANR	2631945	Identifier	m		2630490	0					
ANR	2631946	Argument	false		2630490	2					
ANR	2631947	Identifier	false		2630490	0					
ANR	2631948	BreakStatement	break ;	1562:3:31749:31754	2630490	9	True				
ANR	2631949	Label	case THUMB_REG_REG_SHIFT :	1563:2:31758:31782	2630490	10	True				
ANR	2631950	Identifier	THUMB_REG_REG_SHIFT		2630490	0					
ANR	2631951	CompoundStatement		271:28:5925:5925	2630490	11					
ANR	2631952	ExpressionStatement	std_opt_3 ( ao )	1564:3:31789:31803	2630490	0	True				
ANR	2631953	CallExpression	std_opt_3 ( ao )		2630490	0					
ANR	2631954	Callee	std_opt_3		2630490	0					
ANR	2631955	Identifier	std_opt_3		2630490	0					
ANR	2631956	ArgumentList	ao		2630490	1					
ANR	2631957	Argument	ao		2630490	0					
ANR	2631958	Identifier	ao		2630490	0					
ANR	2631959	Label	case THUMB_REG_REG_REG_SHIFT :	1567:2:31849:31877	2630490	12	True				
ANR	2631960	Identifier	THUMB_REG_REG_REG_SHIFT		2630490	0					
ANR	2631961	CompoundStatement		275:32:6020:6020	2630490	13					
ANR	2631962	ExpressionStatement	ao -> o = 0x00ea0000	1568:3:31884:31902	2630490	0	True				
ANR	2631963	AssignmentExpression	ao -> o = 0x00ea0000		2630490	0		=			
ANR	2631964	PtrMemberAccess	ao -> o		2630490	0					
ANR	2631965	Identifier	ao		2630490	0					
ANR	2631966	Identifier	o		2630490	1					
ANR	2631967	PrimaryExpression	0x00ea0000		2630490	1					
ANR	2631968	ReturnStatement	"return std_32bit_3reg ( ao , m , true ) ;"	1569:3:31907:31942	2630490	1	True				
ANR	2631969	CallExpression	"std_32bit_3reg ( ao , m , true )"		2630490	0					
ANR	2631970	Callee	std_32bit_3reg		2630490	0					
ANR	2631971	Identifier	std_32bit_3reg		2630490	0					
ANR	2631972	ArgumentList	ao		2630490	1					
ANR	2631973	Argument	ao		2630490	0					
ANR	2631974	Identifier	ao		2630490	0					
ANR	2631975	Argument	m		2630490	1					
ANR	2631976	Identifier	m		2630490	0					
ANR	2631977	Argument	true		2630490	2					
ANR	2631978	Identifier	true		2630490	0					
ANR	2631979	BreakStatement	break ;	1571:3:31959:31964	2630490	14	True				
ANR	2631980	Label	default :	1572:2:31968:31975	2630490	15	True				
ANR	2631981	Identifier	default		2630490	0					
ANR	2631982	ReturnStatement	return - 1 ;	1573:3:31980:31989	2630490	16	True				
ANR	2631983	UnaryOperationExpression	- 1		2630490	0					
ANR	2631984	UnaryOperator	-		2630490	0					
ANR	2631985	PrimaryExpression	1		2630490	1					
ANR	2631986	ElseStatement	else		2630490	0					
ANR	2631987	IfStatement	"if ( ( m = opmask ( ao -> op , ""asr"" , S_BIT ) ) )"		2630490	0					
ANR	2631988	Condition	"m = opmask ( ao -> op , ""asr"" , S_BIT )"	1576:5:32008:32042	2630490	0	True				
ANR	2631989	AssignmentExpression	"m = opmask ( ao -> op , ""asr"" , S_BIT )"		2630490	0		=			
ANR	2631990	Identifier	m		2630490	0					
ANR	2631991	CallExpression	"opmask ( ao -> op , ""asr"" , S_BIT )"		2630490	1					
ANR	2631992	Callee	opmask		2630490	0					
ANR	2631993	Identifier	opmask		2630490	0					
ANR	2631994	ArgumentList	ao -> op		2630490	1					
ANR	2631995	Argument	ao -> op		2630490	0					
ANR	2631996	PtrMemberAccess	ao -> op		2630490	0					
ANR	2631997	Identifier	ao		2630490	0					
ANR	2631998	Identifier	op		2630490	1					
ANR	2631999	Argument	"""asr"""		2630490	1					
ANR	2632000	PrimaryExpression	"""asr"""		2630490	0					
ANR	2632001	Argument	S_BIT		2630490	2					
ANR	2632002	Identifier	S_BIT		2630490	0					
ANR	2632003	CompoundStatement		285:2:6190:6224	2630490	1					
ANR	2632004	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1577:2:32049:32083	2630490	0	True				
ANR	2632005	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2632006	IdentifierDeclType	ut64		2630490	0					
ANR	2632007	Identifier	argt		2630490	1					
ANR	2632008	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2632009	Identifier	argt		2630490	0					
ANR	2632010	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2632011	Callee	thumb_selector		2630490	0					
ANR	2632012	Identifier	thumb_selector		2630490	0					
ANR	2632013	ArgumentList	ao -> a		2630490	1					
ANR	2632014	Argument	ao -> a		2630490	0					
ANR	2632015	PtrMemberAccess	ao -> a		2630490	0					
ANR	2632016	Identifier	ao		2630490	0					
ANR	2632017	Identifier	a		2630490	1					
ANR	2632018	SwitchStatement	switch ( argt )		2630490	1					
ANR	2632019	Condition	argt	1578:10:32095:32098	2630490	0	True				
ANR	2632020	Identifier	argt		2630490	0					
ANR	2632021	CompoundStatement		286:16:6242:6242	2630490	1					
ANR	2632022	Label	case THUMB_REG_REG_CONST :	1579:2:32105:32129	2630490	0	True				
ANR	2632023	Identifier	THUMB_REG_REG_CONST		2630490	0					
ANR	2632024	CompoundStatement		290:3:6343:6371	2630490	1					
ANR	2632025	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1580:3:32136:32164	2630490	0	True				
ANR	2632026	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2632027	IdentifierDeclType	ut8		2630490	0					
ANR	2632028	Identifier	reg1		2630490	1					
ANR	2632029	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2632030	Identifier	reg1		2630490	0					
ANR	2632031	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2632032	Callee	getreg		2630490	0					
ANR	2632033	Identifier	getreg		2630490	0					
ANR	2632034	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2632035	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2632036	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2632037	PtrMemberAccess	ao -> a		2630490	0					
ANR	2632038	Identifier	ao		2630490	0					
ANR	2632039	Identifier	a		2630490	1					
ANR	2632040	PrimaryExpression	0		2630490	1					
ANR	2632041	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	1581:3:32169:32197	2630490	1	True				
ANR	2632042	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2632043	IdentifierDeclType	ut8		2630490	0					
ANR	2632044	Identifier	reg2		2630490	1					
ANR	2632045	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2632046	Identifier	reg2		2630490	0					
ANR	2632047	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2632048	Callee	getreg		2630490	0					
ANR	2632049	Identifier	getreg		2630490	0					
ANR	2632050	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2632051	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2632052	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2632053	PtrMemberAccess	ao -> a		2630490	0					
ANR	2632054	Identifier	ao		2630490	0					
ANR	2632055	Identifier	a		2630490	1					
ANR	2632056	PrimaryExpression	1		2630490	1					
ANR	2632057	IdentifierDeclStatement	ut32 imm = getnum ( ao -> a [ 2 ] ) ;	1582:3:32202:32230	2630490	2	True				
ANR	2632058	IdentifierDecl	imm = getnum ( ao -> a [ 2 ] )		2630490	0					
ANR	2632059	IdentifierDeclType	ut32		2630490	0					
ANR	2632060	Identifier	imm		2630490	1					
ANR	2632061	AssignmentExpression	imm = getnum ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2632062	Identifier	imm		2630490	0					
ANR	2632063	CallExpression	getnum ( ao -> a [ 2 ] )		2630490	1					
ANR	2632064	Callee	getnum		2630490	0					
ANR	2632065	Identifier	getnum		2630490	0					
ANR	2632066	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2632067	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2632068	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2632069	PtrMemberAccess	ao -> a		2630490	0					
ANR	2632070	Identifier	ao		2630490	0					
ANR	2632071	Identifier	a		2630490	1					
ANR	2632072	PrimaryExpression	2		2630490	1					
ANR	2632073	IfStatement	if ( ( ( int ) imm < 1 ) && ( ( int ) imm > 32 ) )		2630490	3					
ANR	2632074	Condition	( ( int ) imm < 1 ) && ( ( int ) imm > 32 )	1583:7:32239:32271	2630490	0	True				
ANR	2632075	AndExpression	( ( int ) imm < 1 ) && ( ( int ) imm > 32 )		2630490	0		&&			
ANR	2632076	RelationalExpression	( int ) imm < 1		2630490	0		<			
ANR	2632077	CastExpression	( int ) imm		2630490	0					
ANR	2632078	CastTarget	int		2630490	0					
ANR	2632079	Identifier	imm		2630490	1					
ANR	2632080	PrimaryExpression	1		2630490	1					
ANR	2632081	RelationalExpression	( int ) imm > 32		2630490	1		>			
ANR	2632082	CastExpression	( int ) imm		2630490	0					
ANR	2632083	CastTarget	int		2630490	0					
ANR	2632084	Identifier	imm		2630490	1					
ANR	2632085	PrimaryExpression	32		2630490	1					
ANR	2632086	CompoundStatement		291:42:6415:6415	2630490	1					
ANR	2632087	ReturnStatement	return - 1 ;	1584:4:32280:32289	2630490	0	True				
ANR	2632088	UnaryOperationExpression	- 1		2630490	0					
ANR	2632089	UnaryOperator	-		2630490	0					
ANR	2632090	PrimaryExpression	1		2630490	1					
ANR	2632091	ExpressionStatement	ao -> o = 0x0010	1586:3:32299:32313	2630490	4	True				
ANR	2632092	AssignmentExpression	ao -> o = 0x0010		2630490	0		=			
ANR	2632093	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632094	Identifier	ao		2630490	0					
ANR	2632095	Identifier	o		2630490	1					
ANR	2632096	PrimaryExpression	0x0010		2630490	1					
ANR	2632097	ExpressionStatement	ao -> o |= ( imm & 0x3 ) << 14	1587:3:32318:32344	2630490	5	True				
ANR	2632098	AssignmentExpression	ao -> o |= ( imm & 0x3 ) << 14		2630490	0		|=			
ANR	2632099	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632100	Identifier	ao		2630490	0					
ANR	2632101	Identifier	o		2630490	1					
ANR	2632102	ShiftExpression	( imm & 0x3 ) << 14		2630490	1		<<			
ANR	2632103	BitAndExpression	imm & 0x3		2630490	0		&			
ANR	2632104	Identifier	imm		2630490	0					
ANR	2632105	PrimaryExpression	0x3		2630490	1					
ANR	2632106	PrimaryExpression	14		2630490	1					
ANR	2632107	ExpressionStatement	ao -> o |= ( imm & 0x1c ) >> 2	1588:3:32349:32375	2630490	6	True				
ANR	2632108	AssignmentExpression	ao -> o |= ( imm & 0x1c ) >> 2		2630490	0		|=			
ANR	2632109	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632110	Identifier	ao		2630490	0					
ANR	2632111	Identifier	o		2630490	1					
ANR	2632112	ShiftExpression	( imm & 0x1c ) >> 2		2630490	1		>>			
ANR	2632113	BitAndExpression	imm & 0x1c		2630490	0		&			
ANR	2632114	Identifier	imm		2630490	0					
ANR	2632115	PrimaryExpression	0x1c		2630490	1					
ANR	2632116	PrimaryExpression	2		2630490	1					
ANR	2632117	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	7					
ANR	2632118	Condition	"std_16bit_2reg ( ao , m )"	1589:7:32384:32405	2630490	0	True				
ANR	2632119	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2632120	Callee	std_16bit_2reg		2630490	0					
ANR	2632121	Identifier	std_16bit_2reg		2630490	0					
ANR	2632122	ArgumentList	ao		2630490	1					
ANR	2632123	Argument	ao		2630490	0					
ANR	2632124	Identifier	ao		2630490	0					
ANR	2632125	Argument	m		2630490	1					
ANR	2632126	Identifier	m		2630490	0					
ANR	2632127	CompoundStatement		297:31:6549:6549	2630490	1					
ANR	2632128	ReturnStatement	return 2 ;	1590:4:32414:32422	2630490	0	True				
ANR	2632129	PrimaryExpression	2		2630490	0					
ANR	2632130	ExpressionStatement	ao -> o = 0x4fea2000	1592:3:32432:32450	2630490	8	True				
ANR	2632131	AssignmentExpression	ao -> o = 0x4fea2000		2630490	0		=			
ANR	2632132	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632133	Identifier	ao		2630490	0					
ANR	2632134	Identifier	o		2630490	1					
ANR	2632135	PrimaryExpression	0x4fea2000		2630490	1					
ANR	2632136	ExpressionStatement	ao -> o |= reg1	1593:3:32455:32468	2630490	9	True				
ANR	2632137	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2632138	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632139	Identifier	ao		2630490	0					
ANR	2632140	Identifier	o		2630490	1					
ANR	2632141	Identifier	reg1		2630490	1					
ANR	2632142	ExpressionStatement	ao -> o |= reg2 << 8	1594:3:32473:32491	2630490	10	True				
ANR	2632143	AssignmentExpression	ao -> o |= reg2 << 8		2630490	0		|=			
ANR	2632144	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632145	Identifier	ao		2630490	0					
ANR	2632146	Identifier	o		2630490	1					
ANR	2632147	ShiftExpression	reg2 << 8		2630490	1		<<			
ANR	2632148	Identifier	reg2		2630490	0					
ANR	2632149	PrimaryExpression	8		2630490	1					
ANR	2632150	ExpressionStatement	ao -> o |= ( imm & 0x3 ) << 14	1595:3:32496:32522	2630490	11	True				
ANR	2632151	AssignmentExpression	ao -> o |= ( imm & 0x3 ) << 14		2630490	0		|=			
ANR	2632152	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632153	Identifier	ao		2630490	0					
ANR	2632154	Identifier	o		2630490	1					
ANR	2632155	ShiftExpression	( imm & 0x3 ) << 14		2630490	1		<<			
ANR	2632156	BitAndExpression	imm & 0x3		2630490	0		&			
ANR	2632157	Identifier	imm		2630490	0					
ANR	2632158	PrimaryExpression	0x3		2630490	1					
ANR	2632159	PrimaryExpression	14		2630490	1					
ANR	2632160	ExpressionStatement	ao -> o |= ( imm & 0x1c ) << 2	1596:3:32527:32553	2630490	12	True				
ANR	2632161	AssignmentExpression	ao -> o |= ( imm & 0x1c ) << 2		2630490	0		|=			
ANR	2632162	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632163	Identifier	ao		2630490	0					
ANR	2632164	Identifier	o		2630490	1					
ANR	2632165	ShiftExpression	( imm & 0x1c ) << 2		2630490	1		<<			
ANR	2632166	BitAndExpression	imm & 0x1c		2630490	0		&			
ANR	2632167	Identifier	imm		2630490	0					
ANR	2632168	PrimaryExpression	0x1c		2630490	1					
ANR	2632169	PrimaryExpression	2		2630490	1					
ANR	2632170	IfStatement	if ( m & S_BIT )		2630490	13					
ANR	2632171	Condition	m & S_BIT	1597:7:32562:32570	2630490	0	True				
ANR	2632172	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2632173	Identifier	m		2630490	0					
ANR	2632174	Identifier	S_BIT		2630490	1					
ANR	2632175	CompoundStatement		305:18:6714:6714	2630490	1					
ANR	2632176	ExpressionStatement	ao -> o |= 1 << 28	1598:4:32579:32595	2630490	0	True				
ANR	2632177	AssignmentExpression	ao -> o |= 1 << 28		2630490	0		|=			
ANR	2632178	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632179	Identifier	ao		2630490	0					
ANR	2632180	Identifier	o		2630490	1					
ANR	2632181	ShiftExpression	1 << 28		2630490	1		<<			
ANR	2632182	PrimaryExpression	1		2630490	0					
ANR	2632183	PrimaryExpression	28		2630490	1					
ANR	2632184	ReturnStatement	return 4 ;	1600:3:32605:32613	2630490	14	True				
ANR	2632185	PrimaryExpression	4		2630490	0					
ANR	2632186	BreakStatement	break ;	1602:3:32630:32635	2630490	2	True				
ANR	2632187	Label	case THUMB_REG_REG :	1603:2:32639:32657	2630490	3	True				
ANR	2632188	Identifier	THUMB_REG_REG		2630490	0					
ANR	2632189	CompoundStatement		311:22:6800:6800	2630490	4					
ANR	2632190	ExpressionStatement	ao -> o = 0x0041	1604:3:32664:32678	2630490	0	True				
ANR	2632191	AssignmentExpression	ao -> o = 0x0041		2630490	0		=			
ANR	2632192	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632193	Identifier	ao		2630490	0					
ANR	2632194	Identifier	o		2630490	1					
ANR	2632195	PrimaryExpression	0x0041		2630490	1					
ANR	2632196	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	1					
ANR	2632197	Condition	"std_16bit_2reg ( ao , m )"	1605:7:32687:32708	2630490	0	True				
ANR	2632198	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2632199	Callee	std_16bit_2reg		2630490	0					
ANR	2632200	Identifier	std_16bit_2reg		2630490	0					
ANR	2632201	ArgumentList	ao		2630490	1					
ANR	2632202	Argument	ao		2630490	0					
ANR	2632203	Identifier	ao		2630490	0					
ANR	2632204	Argument	m		2630490	1					
ANR	2632205	Identifier	m		2630490	0					
ANR	2632206	CompoundStatement		313:31:6852:6852	2630490	1					
ANR	2632207	ReturnStatement	return 2 ;	1606:4:32717:32725	2630490	0	True				
ANR	2632208	PrimaryExpression	2		2630490	0					
ANR	2632209	ExpressionStatement	std_opt_2 ( ao )	1608:3:32735:32749	2630490	2	True				
ANR	2632210	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2632211	Callee	std_opt_2		2630490	0					
ANR	2632212	Identifier	std_opt_2		2630490	0					
ANR	2632213	ArgumentList	ao		2630490	1					
ANR	2632214	Argument	ao		2630490	0					
ANR	2632215	Identifier	ao		2630490	0					
ANR	2632216	Label	case THUMB_REG_REG_REG :	1611:2:32795:32817	2630490	5	True				
ANR	2632217	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2632218	CompoundStatement		319:26:6960:6960	2630490	6					
ANR	2632219	ExpressionStatement	ao -> o = 0x40fa00f0	1612:3:32824:32842	2630490	0	True				
ANR	2632220	AssignmentExpression	ao -> o = 0x40fa00f0		2630490	0		=			
ANR	2632221	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632222	Identifier	ao		2630490	0					
ANR	2632223	Identifier	o		2630490	1					
ANR	2632224	PrimaryExpression	0x40fa00f0		2630490	1					
ANR	2632225	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	1613:3:32847:32883	2630490	1	True				
ANR	2632226	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2632227	Callee	std_32bit_3reg		2630490	0					
ANR	2632228	Identifier	std_32bit_3reg		2630490	0					
ANR	2632229	ArgumentList	ao		2630490	1					
ANR	2632230	Argument	ao		2630490	0					
ANR	2632231	Identifier	ao		2630490	0					
ANR	2632232	Argument	m		2630490	1					
ANR	2632233	Identifier	m		2630490	0					
ANR	2632234	Argument	false		2630490	2					
ANR	2632235	Identifier	false		2630490	0					
ANR	2632236	BreakStatement	break ;	1615:3:32900:32905	2630490	7	True				
ANR	2632237	Label	default :	1616:2:32909:32916	2630490	8	True				
ANR	2632238	Identifier	default		2630490	0					
ANR	2632239	ReturnStatement	return - 1 ;	1617:3:32921:32930	2630490	9	True				
ANR	2632240	UnaryOperationExpression	- 1		2630490	0					
ANR	2632241	UnaryOperator	-		2630490	0					
ANR	2632242	PrimaryExpression	1		2630490	1					
ANR	2632243	ElseStatement	else		2630490	0					
ANR	2632244	IfStatement	"if ( ( m = opmask ( ao -> op , ""b"" , 0 ) ) )"		2630490	0					
ANR	2632245	Condition	"m = opmask ( ao -> op , ""b"" , 0 )"	1620:5:32949:32979	2630490	0	True				
ANR	2632246	AssignmentExpression	"m = opmask ( ao -> op , ""b"" , 0 )"		2630490	0		=			
ANR	2632247	Identifier	m		2630490	0					
ANR	2632248	CallExpression	"opmask ( ao -> op , ""b"" , 0 )"		2630490	1					
ANR	2632249	Callee	opmask		2630490	0					
ANR	2632250	Identifier	opmask		2630490	0					
ANR	2632251	ArgumentList	ao -> op		2630490	1					
ANR	2632252	Argument	ao -> op		2630490	0					
ANR	2632253	PtrMemberAccess	ao -> op		2630490	0					
ANR	2632254	Identifier	ao		2630490	0					
ANR	2632255	Identifier	op		2630490	1					
ANR	2632256	Argument	"""b"""		2630490	1					
ANR	2632257	PrimaryExpression	"""b"""		2630490	0					
ANR	2632258	Argument	0		2630490	2					
ANR	2632259	PrimaryExpression	0		2630490	0					
ANR	2632260	CompoundStatement		329:2:7127:7161	2630490	1					
ANR	2632261	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1621:2:32986:33020	2630490	0	True				
ANR	2632262	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2632263	IdentifierDeclType	ut64		2630490	0					
ANR	2632264	Identifier	argt		2630490	1					
ANR	2632265	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2632266	Identifier	argt		2630490	0					
ANR	2632267	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2632268	Callee	thumb_selector		2630490	0					
ANR	2632269	Identifier	thumb_selector		2630490	0					
ANR	2632270	ArgumentList	ao -> a		2630490	1					
ANR	2632271	Argument	ao -> a		2630490	0					
ANR	2632272	PtrMemberAccess	ao -> a		2630490	0					
ANR	2632273	Identifier	ao		2630490	0					
ANR	2632274	Identifier	a		2630490	1					
ANR	2632275	SwitchStatement	switch ( argt )		2630490	1					
ANR	2632276	Condition	argt	1622:10:33032:33035	2630490	0	True				
ANR	2632277	Identifier	argt		2630490	0					
ANR	2632278	CompoundStatement		330:16:7179:7179	2630490	1					
ANR	2632279	Label	case THUMB_CONST :	1623:2:33042:33058	2630490	0	True				
ANR	2632280	Identifier	THUMB_CONST		2630490	0					
ANR	2632281	CompoundStatement		332:3:7206:7251	2630490	1					
ANR	2632282	IdentifierDeclStatement	"st32 offset = thumb_getoffset ( ao -> a [ 0 ] , off ) ;"	1624:3:33065:33110	2630490	0	True				
ANR	2632283	IdentifierDecl	"offset = thumb_getoffset ( ao -> a [ 0 ] , off )"		2630490	0					
ANR	2632284	IdentifierDeclType	st32		2630490	0					
ANR	2632285	Identifier	offset		2630490	1					
ANR	2632286	AssignmentExpression	"offset = thumb_getoffset ( ao -> a [ 0 ] , off )"		2630490	2		=			
ANR	2632287	Identifier	offset		2630490	0					
ANR	2632288	CallExpression	"thumb_getoffset ( ao -> a [ 0 ] , off )"		2630490	1					
ANR	2632289	Callee	thumb_getoffset		2630490	0					
ANR	2632290	Identifier	thumb_getoffset		2630490	0					
ANR	2632291	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2632292	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2632293	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2632294	PtrMemberAccess	ao -> a		2630490	0					
ANR	2632295	Identifier	ao		2630490	0					
ANR	2632296	Identifier	a		2630490	1					
ANR	2632297	PrimaryExpression	0		2630490	1					
ANR	2632298	Argument	off		2630490	1					
ANR	2632299	Identifier	off		2630490	0					
ANR	2632300	IfStatement	if ( offset % 2 != 0 )		2630490	1					
ANR	2632301	Condition	offset % 2 != 0	1625:7:33119:33133	2630490	0	True				
ANR	2632302	EqualityExpression	offset % 2 != 0		2630490	0		!=			
ANR	2632303	MultiplicativeExpression	offset % 2		2630490	0		%			
ANR	2632304	Identifier	offset		2630490	0					
ANR	2632305	PrimaryExpression	2		2630490	1					
ANR	2632306	PrimaryExpression	0		2630490	1					
ANR	2632307	CompoundStatement		333:24:7277:7277	2630490	1					
ANR	2632308	ReturnStatement	return - 1 ;	1626:4:33142:33151	2630490	0	True				
ANR	2632309	UnaryOperationExpression	- 1		2630490	0					
ANR	2632310	UnaryOperator	-		2630490	0					
ANR	2632311	PrimaryExpression	1		2630490	1					
ANR	2632312	IfStatement	if ( ( m & C_BITS ) == C_BITS )		2630490	2					
ANR	2632313	Condition	( m & C_BITS ) == C_BITS	1629:7:33166:33187	2630490	0	True				
ANR	2632314	EqualityExpression	( m & C_BITS ) == C_BITS		2630490	0		==			
ANR	2632315	BitAndExpression	m & C_BITS		2630490	0		&			
ANR	2632316	Identifier	m		2630490	0					
ANR	2632317	Identifier	C_BITS		2630490	1					
ANR	2632318	Identifier	C_BITS		2630490	1					
ANR	2632319	CompoundStatement		337:31:7331:7331	2630490	1					
ANR	2632320	IfStatement	if ( ( offset >= - 2048 ) && ( offset <= 2046 ) && ( ! ( m & DOTW_BIT ) ) )		2630490	0					
ANR	2632321	Condition	( offset >= - 2048 ) && ( offset <= 2046 ) && ( ! ( m & DOTW_BIT ) )	1630:8:33200:33257	2630490	0	True				
ANR	2632322	AndExpression	( offset >= - 2048 ) && ( offset <= 2046 ) && ( ! ( m & DOTW_BIT ) )		2630490	0		&&			
ANR	2632323	RelationalExpression	offset >= - 2048		2630490	0		>=			
ANR	2632324	Identifier	offset		2630490	0					
ANR	2632325	UnaryOperationExpression	- 2048		2630490	1					
ANR	2632326	UnaryOperator	-		2630490	0					
ANR	2632327	PrimaryExpression	2048		2630490	1					
ANR	2632328	AndExpression	( offset <= 2046 ) && ( ! ( m & DOTW_BIT ) )		2630490	1		&&			
ANR	2632329	RelationalExpression	offset <= 2046		2630490	0		<=			
ANR	2632330	Identifier	offset		2630490	0					
ANR	2632331	PrimaryExpression	2046		2630490	1					
ANR	2632332	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	1					
ANR	2632333	UnaryOperator	!		2630490	0					
ANR	2632334	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2632335	Identifier	m		2630490	0					
ANR	2632336	Identifier	DOTW_BIT		2630490	1					
ANR	2632337	CompoundStatement		338:68:7401:7401	2630490	1					
ANR	2632338	ExpressionStatement	ao -> o = 0x00e0	1631:5:33267:33281	2630490	0	True				
ANR	2632339	AssignmentExpression	ao -> o = 0x00e0		2630490	0		=			
ANR	2632340	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632341	Identifier	ao		2630490	0					
ANR	2632342	Identifier	o		2630490	1					
ANR	2632343	PrimaryExpression	0x00e0		2630490	1					
ANR	2632344	ExpressionStatement	ao -> o |= ( ( offset / 2 & 0xff ) << 8 )	1632:5:33288:33321	2630490	1	True				
ANR	2632345	AssignmentExpression	ao -> o |= ( ( offset / 2 & 0xff ) << 8 )		2630490	0		|=			
ANR	2632346	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632347	Identifier	ao		2630490	0					
ANR	2632348	Identifier	o		2630490	1					
ANR	2632349	ShiftExpression	( offset / 2 & 0xff ) << 8		2630490	1		<<			
ANR	2632350	BitAndExpression	offset / 2 & 0xff		2630490	0		&			
ANR	2632351	MultiplicativeExpression	offset / 2		2630490	0		/			
ANR	2632352	Identifier	offset		2630490	0					
ANR	2632353	PrimaryExpression	2		2630490	1					
ANR	2632354	PrimaryExpression	0xff		2630490	1					
ANR	2632355	PrimaryExpression	8		2630490	1					
ANR	2632356	ExpressionStatement	ao -> o |= ( ( offset / 2 & 0x700 ) >> 8 )	1633:5:33328:33362	2630490	2	True				
ANR	2632357	AssignmentExpression	ao -> o |= ( ( offset / 2 & 0x700 ) >> 8 )		2630490	0		|=			
ANR	2632358	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632359	Identifier	ao		2630490	0					
ANR	2632360	Identifier	o		2630490	1					
ANR	2632361	ShiftExpression	( offset / 2 & 0x700 ) >> 8		2630490	1		>>			
ANR	2632362	BitAndExpression	offset / 2 & 0x700		2630490	0		&			
ANR	2632363	MultiplicativeExpression	offset / 2		2630490	0		/			
ANR	2632364	Identifier	offset		2630490	0					
ANR	2632365	PrimaryExpression	2		2630490	1					
ANR	2632366	PrimaryExpression	0x700		2630490	1					
ANR	2632367	PrimaryExpression	8		2630490	1					
ANR	2632368	ReturnStatement	return 2 ;	1634:5:33369:33377	2630490	3	True				
ANR	2632369	PrimaryExpression	2		2630490	0					
ANR	2632370	IfStatement	if ( ( offset < - 16777216 ) || ( offset > 16777214 ) || ( offset % 2 != 0 ) )		2630490	1					
ANR	2632371	Condition	( offset < - 16777216 ) || ( offset > 16777214 ) || ( offset % 2 != 0 )	1636:8:33393:33456	2630490	0	True				
ANR	2632372	OrExpression	( offset < - 16777216 ) || ( offset > 16777214 ) || ( offset % 2 != 0 )		2630490	0		||			
ANR	2632373	RelationalExpression	offset < - 16777216		2630490	0		<			
ANR	2632374	Identifier	offset		2630490	0					
ANR	2632375	UnaryOperationExpression	- 16777216		2630490	1					
ANR	2632376	UnaryOperator	-		2630490	0					
ANR	2632377	PrimaryExpression	16777216		2630490	1					
ANR	2632378	OrExpression	( offset > 16777214 ) || ( offset % 2 != 0 )		2630490	1		||			
ANR	2632379	RelationalExpression	offset > 16777214		2630490	0		>			
ANR	2632380	Identifier	offset		2630490	0					
ANR	2632381	PrimaryExpression	16777214		2630490	1					
ANR	2632382	EqualityExpression	offset % 2 != 0		2630490	1		!=			
ANR	2632383	MultiplicativeExpression	offset % 2		2630490	0		%			
ANR	2632384	Identifier	offset		2630490	0					
ANR	2632385	PrimaryExpression	2		2630490	1					
ANR	2632386	PrimaryExpression	0		2630490	1					
ANR	2632387	CompoundStatement		344:74:7600:7600	2630490	1					
ANR	2632388	ReturnStatement	return - 1 ;	1637:5:33466:33475	2630490	0	True				
ANR	2632389	UnaryOperationExpression	- 1		2630490	0					
ANR	2632390	UnaryOperator	-		2630490	0					
ANR	2632391	PrimaryExpression	1		2630490	1					
ANR	2632392	ExpressionStatement	ao -> o = 0x00f00090	1639:4:33487:33505	2630490	2	True				
ANR	2632393	AssignmentExpression	ao -> o = 0x00f00090		2630490	0		=			
ANR	2632394	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632395	Identifier	ao		2630490	0					
ANR	2632396	Identifier	o		2630490	1					
ANR	2632397	PrimaryExpression	0x00f00090		2630490	1					
ANR	2632398	ExpressionStatement	ao -> o |= getthbimmed ( offset )	1640:4:33511:33539	2630490	3	True				
ANR	2632399	AssignmentExpression	ao -> o |= getthbimmed ( offset )		2630490	0		|=			
ANR	2632400	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632401	Identifier	ao		2630490	0					
ANR	2632402	Identifier	o		2630490	1					
ANR	2632403	CallExpression	getthbimmed ( offset )		2630490	1					
ANR	2632404	Callee	getthbimmed		2630490	0					
ANR	2632405	Identifier	getthbimmed		2630490	0					
ANR	2632406	ArgumentList	offset		2630490	1					
ANR	2632407	Argument	offset		2630490	0					
ANR	2632408	Identifier	offset		2630490	0					
ANR	2632409	ReturnStatement	return 4 ;	1641:4:33545:33553	2630490	4	True				
ANR	2632410	PrimaryExpression	4		2630490	0					
ANR	2632411	ElseStatement	else		2630490	0					
ANR	2632412	CompoundStatement		350:10:7706:7706	2630490	0					
ANR	2632413	IfStatement	if ( ( offset >= - 256 ) && ( offset <= 254 ) && ( ! ( m & DOTW_BIT ) ) )		2630490	0					
ANR	2632414	Condition	( offset >= - 256 ) && ( offset <= 254 ) && ( ! ( m & DOTW_BIT ) )	1643:8:33575:33630	2630490	0	True				
ANR	2632415	AndExpression	( offset >= - 256 ) && ( offset <= 254 ) && ( ! ( m & DOTW_BIT ) )		2630490	0		&&			
ANR	2632416	RelationalExpression	offset >= - 256		2630490	0		>=			
ANR	2632417	Identifier	offset		2630490	0					
ANR	2632418	UnaryOperationExpression	- 256		2630490	1					
ANR	2632419	UnaryOperator	-		2630490	0					
ANR	2632420	PrimaryExpression	256		2630490	1					
ANR	2632421	AndExpression	( offset <= 254 ) && ( ! ( m & DOTW_BIT ) )		2630490	1		&&			
ANR	2632422	RelationalExpression	offset <= 254		2630490	0		<=			
ANR	2632423	Identifier	offset		2630490	0					
ANR	2632424	PrimaryExpression	254		2630490	1					
ANR	2632425	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	1					
ANR	2632426	UnaryOperator	!		2630490	0					
ANR	2632427	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2632428	Identifier	m		2630490	0					
ANR	2632429	Identifier	DOTW_BIT		2630490	1					
ANR	2632430	CompoundStatement		351:66:7774:7774	2630490	1					
ANR	2632431	ExpressionStatement	ao -> o = 0x00d0	1644:5:33640:33654	2630490	0	True				
ANR	2632432	AssignmentExpression	ao -> o = 0x00d0		2630490	0		=			
ANR	2632433	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632434	Identifier	ao		2630490	0					
ANR	2632435	Identifier	o		2630490	1					
ANR	2632436	PrimaryExpression	0x00d0		2630490	1					
ANR	2632437	ExpressionStatement	ao -> o |= ( ut16 ) ( ( offset / 2 ) << 8 )	1645:5:33661:33694	2630490	1	True				
ANR	2632438	AssignmentExpression	ao -> o |= ( ut16 ) ( ( offset / 2 ) << 8 )		2630490	0		|=			
ANR	2632439	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632440	Identifier	ao		2630490	0					
ANR	2632441	Identifier	o		2630490	1					
ANR	2632442	CastExpression	( ut16 ) ( ( offset / 2 ) << 8 )		2630490	1					
ANR	2632443	CastTarget	ut16		2630490	0					
ANR	2632444	ShiftExpression	( offset / 2 ) << 8		2630490	1		<<			
ANR	2632445	MultiplicativeExpression	offset / 2		2630490	0		/			
ANR	2632446	Identifier	offset		2630490	0					
ANR	2632447	PrimaryExpression	2		2630490	1					
ANR	2632448	PrimaryExpression	8		2630490	1					
ANR	2632449	ExpressionStatement	ao -> o |= ( ( m & C_BITS ) >> 2 )	1646:5:33701:33729	2630490	2	True				
ANR	2632450	AssignmentExpression	ao -> o |= ( ( m & C_BITS ) >> 2 )		2630490	0		|=			
ANR	2632451	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632452	Identifier	ao		2630490	0					
ANR	2632453	Identifier	o		2630490	1					
ANR	2632454	ShiftExpression	( m & C_BITS ) >> 2		2630490	1		>>			
ANR	2632455	BitAndExpression	m & C_BITS		2630490	0		&			
ANR	2632456	Identifier	m		2630490	0					
ANR	2632457	Identifier	C_BITS		2630490	1					
ANR	2632458	PrimaryExpression	2		2630490	1					
ANR	2632459	ReturnStatement	return 2 ;	1647:5:33736:33744	2630490	3	True				
ANR	2632460	PrimaryExpression	2		2630490	0					
ANR	2632461	IfStatement	if ( ( offset < - 1048576 ) || ( offset > 1048574 ) || ( offset % 2 != 0 ) )		2630490	1					
ANR	2632462	Condition	( offset < - 1048576 ) || ( offset > 1048574 ) || ( offset % 2 != 0 )	1649:8:33760:33821	2630490	0	True				
ANR	2632463	OrExpression	( offset < - 1048576 ) || ( offset > 1048574 ) || ( offset % 2 != 0 )		2630490	0		||			
ANR	2632464	RelationalExpression	offset < - 1048576		2630490	0		<			
ANR	2632465	Identifier	offset		2630490	0					
ANR	2632466	UnaryOperationExpression	- 1048576		2630490	1					
ANR	2632467	UnaryOperator	-		2630490	0					
ANR	2632468	PrimaryExpression	1048576		2630490	1					
ANR	2632469	OrExpression	( offset > 1048574 ) || ( offset % 2 != 0 )		2630490	1		||			
ANR	2632470	RelationalExpression	offset > 1048574		2630490	0		>			
ANR	2632471	Identifier	offset		2630490	0					
ANR	2632472	PrimaryExpression	1048574		2630490	1					
ANR	2632473	EqualityExpression	offset % 2 != 0		2630490	1		!=			
ANR	2632474	MultiplicativeExpression	offset % 2		2630490	0		%			
ANR	2632475	Identifier	offset		2630490	0					
ANR	2632476	PrimaryExpression	2		2630490	1					
ANR	2632477	PrimaryExpression	0		2630490	1					
ANR	2632478	CompoundStatement		357:72:7965:7965	2630490	1					
ANR	2632479	ReturnStatement	return - 1 ;	1650:5:33831:33840	2630490	0	True				
ANR	2632480	UnaryOperationExpression	- 1		2630490	0					
ANR	2632481	UnaryOperator	-		2630490	0					
ANR	2632482	PrimaryExpression	1		2630490	1					
ANR	2632483	ExpressionStatement	ao -> o = 0x00f00080	1653:4:33853:33871	2630490	2	True				
ANR	2632484	AssignmentExpression	ao -> o = 0x00f00080		2630490	0		=			
ANR	2632485	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632486	Identifier	ao		2630490	0					
ANR	2632487	Identifier	o		2630490	1					
ANR	2632488	PrimaryExpression	0x00f00080		2630490	1					
ANR	2632489	ExpressionStatement	ao -> o |= ( ut32 ) ( offset & 0x80000 ) >> 16	1654:4:33877:33916	2630490	3	True				
ANR	2632490	AssignmentExpression	ao -> o |= ( ut32 ) ( offset & 0x80000 ) >> 16		2630490	0		|=			
ANR	2632491	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632492	Identifier	ao		2630490	0					
ANR	2632493	Identifier	o		2630490	1					
ANR	2632494	ShiftExpression	( ut32 ) ( offset & 0x80000 ) >> 16		2630490	1		>>			
ANR	2632495	CastExpression	( ut32 ) ( offset & 0x80000 )		2630490	0					
ANR	2632496	CastTarget	ut32		2630490	0					
ANR	2632497	BitAndExpression	offset & 0x80000		2630490	1		&			
ANR	2632498	Identifier	offset		2630490	0					
ANR	2632499	PrimaryExpression	0x80000		2630490	1					
ANR	2632500	PrimaryExpression	16		2630490	1					
ANR	2632501	ExpressionStatement	ao -> o |= ( ut32 ) ( offset & 0x40000 ) >> 13	1655:4:33922:33961	2630490	4	True				
ANR	2632502	AssignmentExpression	ao -> o |= ( ut32 ) ( offset & 0x40000 ) >> 13		2630490	0		|=			
ANR	2632503	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632504	Identifier	ao		2630490	0					
ANR	2632505	Identifier	o		2630490	1					
ANR	2632506	ShiftExpression	( ut32 ) ( offset & 0x40000 ) >> 13		2630490	1		>>			
ANR	2632507	CastExpression	( ut32 ) ( offset & 0x40000 )		2630490	0					
ANR	2632508	CastTarget	ut32		2630490	0					
ANR	2632509	BitAndExpression	offset & 0x40000		2630490	1		&			
ANR	2632510	Identifier	offset		2630490	0					
ANR	2632511	PrimaryExpression	0x40000		2630490	1					
ANR	2632512	PrimaryExpression	13		2630490	1					
ANR	2632513	ExpressionStatement	ao -> o |= ( ut32 ) ( offset & 0x3f000 ) << 12	1656:4:33967:34006	2630490	5	True				
ANR	2632514	AssignmentExpression	ao -> o |= ( ut32 ) ( offset & 0x3f000 ) << 12		2630490	0		|=			
ANR	2632515	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632516	Identifier	ao		2630490	0					
ANR	2632517	Identifier	o		2630490	1					
ANR	2632518	ShiftExpression	( ut32 ) ( offset & 0x3f000 ) << 12		2630490	1		<<			
ANR	2632519	CastExpression	( ut32 ) ( offset & 0x3f000 )		2630490	0					
ANR	2632520	CastTarget	ut32		2630490	0					
ANR	2632521	BitAndExpression	offset & 0x3f000		2630490	1		&			
ANR	2632522	Identifier	offset		2630490	0					
ANR	2632523	PrimaryExpression	0x3f000		2630490	1					
ANR	2632524	PrimaryExpression	12		2630490	1					
ANR	2632525	ExpressionStatement	ao -> o |= ( ut32 ) ( offset & 0xe00 ) >> 9	1657:4:34012:34048	2630490	6	True				
ANR	2632526	AssignmentExpression	ao -> o |= ( ut32 ) ( offset & 0xe00 ) >> 9		2630490	0		|=			
ANR	2632527	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632528	Identifier	ao		2630490	0					
ANR	2632529	Identifier	o		2630490	1					
ANR	2632530	ShiftExpression	( ut32 ) ( offset & 0xe00 ) >> 9		2630490	1		>>			
ANR	2632531	CastExpression	( ut32 ) ( offset & 0xe00 )		2630490	0					
ANR	2632532	CastTarget	ut32		2630490	0					
ANR	2632533	BitAndExpression	offset & 0xe00		2630490	1		&			
ANR	2632534	Identifier	offset		2630490	0					
ANR	2632535	PrimaryExpression	0xe00		2630490	1					
ANR	2632536	PrimaryExpression	9		2630490	1					
ANR	2632537	ExpressionStatement	ao -> o |= ( ut32 ) ( offset & 0x1fe ) << 7	1658:4:34054:34090	2630490	7	True				
ANR	2632538	AssignmentExpression	ao -> o |= ( ut32 ) ( offset & 0x1fe ) << 7		2630490	0		|=			
ANR	2632539	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632540	Identifier	ao		2630490	0					
ANR	2632541	Identifier	o		2630490	1					
ANR	2632542	ShiftExpression	( ut32 ) ( offset & 0x1fe ) << 7		2630490	1		<<			
ANR	2632543	CastExpression	( ut32 ) ( offset & 0x1fe )		2630490	0					
ANR	2632544	CastTarget	ut32		2630490	0					
ANR	2632545	BitAndExpression	offset & 0x1fe		2630490	1		&			
ANR	2632546	Identifier	offset		2630490	0					
ANR	2632547	PrimaryExpression	0x1fe		2630490	1					
ANR	2632548	PrimaryExpression	7		2630490	1					
ANR	2632549	IfStatement	if ( offset < 0 )		2630490	8					
ANR	2632550	Condition	offset < 0	1659:8:34100:34109	2630490	0	True				
ANR	2632551	RelationalExpression	offset < 0		2630490	0		<			
ANR	2632552	Identifier	offset		2630490	0					
ANR	2632553	PrimaryExpression	0		2630490	1					
ANR	2632554	CompoundStatement		367:20:8253:8253	2630490	1					
ANR	2632555	ExpressionStatement	ao -> o |= 1 << 18	1660:5:34119:34135	2630490	0	True				
ANR	2632556	AssignmentExpression	ao -> o |= 1 << 18		2630490	0		|=			
ANR	2632557	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632558	Identifier	ao		2630490	0					
ANR	2632559	Identifier	o		2630490	1					
ANR	2632560	ShiftExpression	1 << 18		2630490	1		<<			
ANR	2632561	PrimaryExpression	1		2630490	0					
ANR	2632562	PrimaryExpression	18		2630490	1					
ANR	2632563	ExpressionStatement	ao -> o |= ( ( ( m & C_BITS ) & 0xc ) << 28 )	1662:4:34147:34184	2630490	9	True				
ANR	2632564	AssignmentExpression	ao -> o |= ( ( ( m & C_BITS ) & 0xc ) << 28 )		2630490	0		|=			
ANR	2632565	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632566	Identifier	ao		2630490	0					
ANR	2632567	Identifier	o		2630490	1					
ANR	2632568	ShiftExpression	( ( m & C_BITS ) & 0xc ) << 28		2630490	1		<<			
ANR	2632569	BitAndExpression	( m & C_BITS ) & 0xc		2630490	0		&			
ANR	2632570	BitAndExpression	m & C_BITS		2630490	0		&			
ANR	2632571	Identifier	m		2630490	0					
ANR	2632572	Identifier	C_BITS		2630490	1					
ANR	2632573	PrimaryExpression	0xc		2630490	1					
ANR	2632574	PrimaryExpression	28		2630490	1					
ANR	2632575	ExpressionStatement	ao -> o |= ( ( ( m & C_BITS ) & 0x30 ) << 12 )	1663:4:34190:34228	2630490	10	True				
ANR	2632576	AssignmentExpression	ao -> o |= ( ( ( m & C_BITS ) & 0x30 ) << 12 )		2630490	0		|=			
ANR	2632577	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632578	Identifier	ao		2630490	0					
ANR	2632579	Identifier	o		2630490	1					
ANR	2632580	ShiftExpression	( ( m & C_BITS ) & 0x30 ) << 12		2630490	1		<<			
ANR	2632581	BitAndExpression	( m & C_BITS ) & 0x30		2630490	0		&			
ANR	2632582	BitAndExpression	m & C_BITS		2630490	0		&			
ANR	2632583	Identifier	m		2630490	0					
ANR	2632584	Identifier	C_BITS		2630490	1					
ANR	2632585	PrimaryExpression	0x30		2630490	1					
ANR	2632586	PrimaryExpression	12		2630490	1					
ANR	2632587	ReturnStatement	return 4 ;	1664:4:34234:34242	2630490	11	True				
ANR	2632588	PrimaryExpression	4		2630490	0					
ANR	2632589	BreakStatement	break ;	1667:3:34264:34269	2630490	2	True				
ANR	2632590	Label	default :	1668:2:34273:34280	2630490	3	True				
ANR	2632591	Identifier	default		2630490	0					
ANR	2632592	ReturnStatement	return - 1 ;	1669:3:34285:34294	2630490	4	True				
ANR	2632593	UnaryOperationExpression	- 1		2630490	0					
ANR	2632594	UnaryOperator	-		2630490	0					
ANR	2632595	PrimaryExpression	1		2630490	1					
ANR	2632596	ElseStatement	else		2630490	0					
ANR	2632597	IfStatement	"if ( ( m = opmask ( ao -> op , ""bl"" , 0 ) ) )"		2630490	0					
ANR	2632598	Condition	"m = opmask ( ao -> op , ""bl"" , 0 )"	1672:5:34313:34344	2630490	0	True				
ANR	2632599	AssignmentExpression	"m = opmask ( ao -> op , ""bl"" , 0 )"		2630490	0		=			
ANR	2632600	Identifier	m		2630490	0					
ANR	2632601	CallExpression	"opmask ( ao -> op , ""bl"" , 0 )"		2630490	1					
ANR	2632602	Callee	opmask		2630490	0					
ANR	2632603	Identifier	opmask		2630490	0					
ANR	2632604	ArgumentList	ao -> op		2630490	1					
ANR	2632605	Argument	ao -> op		2630490	0					
ANR	2632606	PtrMemberAccess	ao -> op		2630490	0					
ANR	2632607	Identifier	ao		2630490	0					
ANR	2632608	Identifier	op		2630490	1					
ANR	2632609	Argument	"""bl"""		2630490	1					
ANR	2632610	PrimaryExpression	"""bl"""		2630490	0					
ANR	2632611	Argument	0		2630490	2					
ANR	2632612	PrimaryExpression	0		2630490	0					
ANR	2632613	CompoundStatement		381:2:8492:8526	2630490	1					
ANR	2632614	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1673:2:34351:34385	2630490	0	True				
ANR	2632615	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2632616	IdentifierDeclType	ut64		2630490	0					
ANR	2632617	Identifier	argt		2630490	1					
ANR	2632618	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2632619	Identifier	argt		2630490	0					
ANR	2632620	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2632621	Callee	thumb_selector		2630490	0					
ANR	2632622	Identifier	thumb_selector		2630490	0					
ANR	2632623	ArgumentList	ao -> a		2630490	1					
ANR	2632624	Argument	ao -> a		2630490	0					
ANR	2632625	PtrMemberAccess	ao -> a		2630490	0					
ANR	2632626	Identifier	ao		2630490	0					
ANR	2632627	Identifier	a		2630490	1					
ANR	2632628	SwitchStatement	switch ( argt )		2630490	1					
ANR	2632629	Condition	argt	1674:10:34397:34400	2630490	0	True				
ANR	2632630	Identifier	argt		2630490	0					
ANR	2632631	CompoundStatement		382:16:8544:8544	2630490	1					
ANR	2632632	Label	case THUMB_CONST :	1675:2:34407:34423	2630490	0	True				
ANR	2632633	Identifier	THUMB_CONST		2630490	0					
ANR	2632634	CompoundStatement		384:3:8571:8616	2630490	1					
ANR	2632635	IdentifierDeclStatement	"st32 offset = thumb_getoffset ( ao -> a [ 0 ] , off ) ;"	1676:3:34430:34475	2630490	0	True				
ANR	2632636	IdentifierDecl	"offset = thumb_getoffset ( ao -> a [ 0 ] , off )"		2630490	0					
ANR	2632637	IdentifierDeclType	st32		2630490	0					
ANR	2632638	Identifier	offset		2630490	1					
ANR	2632639	AssignmentExpression	"offset = thumb_getoffset ( ao -> a [ 0 ] , off )"		2630490	2		=			
ANR	2632640	Identifier	offset		2630490	0					
ANR	2632641	CallExpression	"thumb_getoffset ( ao -> a [ 0 ] , off )"		2630490	1					
ANR	2632642	Callee	thumb_getoffset		2630490	0					
ANR	2632643	Identifier	thumb_getoffset		2630490	0					
ANR	2632644	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2632645	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2632646	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2632647	PtrMemberAccess	ao -> a		2630490	0					
ANR	2632648	Identifier	ao		2630490	0					
ANR	2632649	Identifier	a		2630490	1					
ANR	2632650	PrimaryExpression	0		2630490	1					
ANR	2632651	Argument	off		2630490	1					
ANR	2632652	Identifier	off		2630490	0					
ANR	2632653	ExpressionStatement	ao -> o = 0x00f000d0	1677:3:34480:34498	2630490	1	True				
ANR	2632654	AssignmentExpression	ao -> o = 0x00f000d0		2630490	0		=			
ANR	2632655	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632656	Identifier	ao		2630490	0					
ANR	2632657	Identifier	o		2630490	1					
ANR	2632658	PrimaryExpression	0x00f000d0		2630490	1					
ANR	2632659	IfStatement	if ( ( offset > 16777214 ) || ( offset < - 16777216 ) || ( offset % 2 != 0 ) )		2630490	2					
ANR	2632660	Condition	( offset > 16777214 ) || ( offset < - 16777216 ) || ( offset % 2 != 0 )	1678:7:34507:34570	2630490	0	True				
ANR	2632661	OrExpression	( offset > 16777214 ) || ( offset < - 16777216 ) || ( offset % 2 != 0 )		2630490	0		||			
ANR	2632662	RelationalExpression	offset > 16777214		2630490	0		>			
ANR	2632663	Identifier	offset		2630490	0					
ANR	2632664	PrimaryExpression	16777214		2630490	1					
ANR	2632665	OrExpression	( offset < - 16777216 ) || ( offset % 2 != 0 )		2630490	1		||			
ANR	2632666	RelationalExpression	offset < - 16777216		2630490	0		<			
ANR	2632667	Identifier	offset		2630490	0					
ANR	2632668	UnaryOperationExpression	- 16777216		2630490	1					
ANR	2632669	UnaryOperator	-		2630490	0					
ANR	2632670	PrimaryExpression	16777216		2630490	1					
ANR	2632671	EqualityExpression	offset % 2 != 0		2630490	1		!=			
ANR	2632672	MultiplicativeExpression	offset % 2		2630490	0		%			
ANR	2632673	Identifier	offset		2630490	0					
ANR	2632674	PrimaryExpression	2		2630490	1					
ANR	2632675	PrimaryExpression	0		2630490	1					
ANR	2632676	CompoundStatement		386:73:8714:8714	2630490	1					
ANR	2632677	ReturnStatement	return - 1 ;	1679:4:34579:34588	2630490	0	True				
ANR	2632678	UnaryOperationExpression	- 1		2630490	0					
ANR	2632679	UnaryOperator	-		2630490	0					
ANR	2632680	PrimaryExpression	1		2630490	1					
ANR	2632681	ExpressionStatement	ao -> o |= getthbimmed ( offset )	1681:3:34598:34626	2630490	3	True				
ANR	2632682	AssignmentExpression	ao -> o |= getthbimmed ( offset )		2630490	0		|=			
ANR	2632683	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632684	Identifier	ao		2630490	0					
ANR	2632685	Identifier	o		2630490	1					
ANR	2632686	CallExpression	getthbimmed ( offset )		2630490	1					
ANR	2632687	Callee	getthbimmed		2630490	0					
ANR	2632688	Identifier	getthbimmed		2630490	0					
ANR	2632689	ArgumentList	offset		2630490	1					
ANR	2632690	Argument	offset		2630490	0					
ANR	2632691	Identifier	offset		2630490	0					
ANR	2632692	ReturnStatement	return 4 ;	1682:3:34631:34639	2630490	4	True				
ANR	2632693	PrimaryExpression	4		2630490	0					
ANR	2632694	BreakStatement	break ;	1684:3:34656:34661	2630490	2	True				
ANR	2632695	Label	default :	1685:2:34665:34672	2630490	3	True				
ANR	2632696	Identifier	default		2630490	0					
ANR	2632697	ReturnStatement	return - 1 ;	1686:3:34677:34686	2630490	4	True				
ANR	2632698	UnaryOperationExpression	- 1		2630490	0					
ANR	2632699	UnaryOperator	-		2630490	0					
ANR	2632700	PrimaryExpression	1		2630490	1					
ANR	2632701	ElseStatement	else		2630490	0					
ANR	2632702	IfStatement	"if ( ( m = opmask ( ao -> op , ""bx"" , 0 ) ) )"		2630490	0					
ANR	2632703	Condition	"m = opmask ( ao -> op , ""bx"" , 0 )"	1689:5:34705:34736	2630490	0	True				
ANR	2632704	AssignmentExpression	"m = opmask ( ao -> op , ""bx"" , 0 )"		2630490	0		=			
ANR	2632705	Identifier	m		2630490	0					
ANR	2632706	CallExpression	"opmask ( ao -> op , ""bx"" , 0 )"		2630490	1					
ANR	2632707	Callee	opmask		2630490	0					
ANR	2632708	Identifier	opmask		2630490	0					
ANR	2632709	ArgumentList	ao -> op		2630490	1					
ANR	2632710	Argument	ao -> op		2630490	0					
ANR	2632711	PtrMemberAccess	ao -> op		2630490	0					
ANR	2632712	Identifier	ao		2630490	0					
ANR	2632713	Identifier	op		2630490	1					
ANR	2632714	Argument	"""bx"""		2630490	1					
ANR	2632715	PrimaryExpression	"""bx"""		2630490	0					
ANR	2632716	Argument	0		2630490	2					
ANR	2632717	PrimaryExpression	0		2630490	0					
ANR	2632718	CompoundStatement		398:2:8884:8918	2630490	1					
ANR	2632719	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1690:2:34743:34777	2630490	0	True				
ANR	2632720	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2632721	IdentifierDeclType	ut64		2630490	0					
ANR	2632722	Identifier	argt		2630490	1					
ANR	2632723	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2632724	Identifier	argt		2630490	0					
ANR	2632725	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2632726	Callee	thumb_selector		2630490	0					
ANR	2632727	Identifier	thumb_selector		2630490	0					
ANR	2632728	ArgumentList	ao -> a		2630490	1					
ANR	2632729	Argument	ao -> a		2630490	0					
ANR	2632730	PtrMemberAccess	ao -> a		2630490	0					
ANR	2632731	Identifier	ao		2630490	0					
ANR	2632732	Identifier	a		2630490	1					
ANR	2632733	SwitchStatement	switch ( argt )		2630490	1					
ANR	2632734	Condition	argt	1691:10:34789:34792	2630490	0	True				
ANR	2632735	Identifier	argt		2630490	0					
ANR	2632736	CompoundStatement		399:16:8936:8936	2630490	1					
ANR	2632737	Label	case THUMB_REG :	1692:2:34799:34813	2630490	0	True				
ANR	2632738	Identifier	THUMB_REG		2630490	0					
ANR	2632739	CompoundStatement		401:3:8961:8990	2630490	1					
ANR	2632740	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 0 ] ) ;	1693:3:34820:34849	2630490	0	True				
ANR	2632741	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2632742	IdentifierDeclType	ut32		2630490	0					
ANR	2632743	Identifier	reg1		2630490	1					
ANR	2632744	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2632745	Identifier	reg1		2630490	0					
ANR	2632746	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2632747	Callee	getreg		2630490	0					
ANR	2632748	Identifier	getreg		2630490	0					
ANR	2632749	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2632750	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2632751	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2632752	PtrMemberAccess	ao -> a		2630490	0					
ANR	2632753	Identifier	ao		2630490	0					
ANR	2632754	Identifier	a		2630490	1					
ANR	2632755	PrimaryExpression	0		2630490	1					
ANR	2632756	ExpressionStatement	ao -> o = 0x0047	1694:3:34854:34868	2630490	1	True				
ANR	2632757	AssignmentExpression	ao -> o = 0x0047		2630490	0		=			
ANR	2632758	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632759	Identifier	ao		2630490	0					
ANR	2632760	Identifier	o		2630490	1					
ANR	2632761	PrimaryExpression	0x0047		2630490	1					
ANR	2632762	ExpressionStatement	ao -> o |= reg1 << 11	1695:3:34873:34892	2630490	2	True				
ANR	2632763	AssignmentExpression	ao -> o |= reg1 << 11		2630490	0		|=			
ANR	2632764	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632765	Identifier	ao		2630490	0					
ANR	2632766	Identifier	o		2630490	1					
ANR	2632767	ShiftExpression	reg1 << 11		2630490	1		<<			
ANR	2632768	Identifier	reg1		2630490	0					
ANR	2632769	PrimaryExpression	11		2630490	1					
ANR	2632770	ReturnStatement	return 2 ;	1696:3:34897:34905	2630490	3	True				
ANR	2632771	PrimaryExpression	2		2630490	0					
ANR	2632772	BreakStatement	break ;	1698:3:34922:34927	2630490	2	True				
ANR	2632773	Label	default :	1699:2:34931:34938	2630490	3	True				
ANR	2632774	Identifier	default		2630490	0					
ANR	2632775	ReturnStatement	return - 1 ;	1700:3:34943:34952	2630490	4	True				
ANR	2632776	UnaryOperationExpression	- 1		2630490	0					
ANR	2632777	UnaryOperator	-		2630490	0					
ANR	2632778	PrimaryExpression	1		2630490	1					
ANR	2632779	ElseStatement	else		2630490	0					
ANR	2632780	IfStatement	"if ( ( m = opmask ( ao -> op , ""blx"" , 0 ) ) )"		2630490	0					
ANR	2632781	Condition	"m = opmask ( ao -> op , ""blx"" , 0 )"	1703:5:34972:35004	2630490	0	True				
ANR	2632782	AssignmentExpression	"m = opmask ( ao -> op , ""blx"" , 0 )"		2630490	0		=			
ANR	2632783	Identifier	m		2630490	0					
ANR	2632784	CallExpression	"opmask ( ao -> op , ""blx"" , 0 )"		2630490	1					
ANR	2632785	Callee	opmask		2630490	0					
ANR	2632786	Identifier	opmask		2630490	0					
ANR	2632787	ArgumentList	ao -> op		2630490	1					
ANR	2632788	Argument	ao -> op		2630490	0					
ANR	2632789	PtrMemberAccess	ao -> op		2630490	0					
ANR	2632790	Identifier	ao		2630490	0					
ANR	2632791	Identifier	op		2630490	1					
ANR	2632792	Argument	"""blx"""		2630490	1					
ANR	2632793	PrimaryExpression	"""blx"""		2630490	0					
ANR	2632794	Argument	0		2630490	2					
ANR	2632795	PrimaryExpression	0		2630490	0					
ANR	2632796	CompoundStatement		412:2:9152:9186	2630490	1					
ANR	2632797	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1704:2:35011:35045	2630490	0	True				
ANR	2632798	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2632799	IdentifierDeclType	ut64		2630490	0					
ANR	2632800	Identifier	argt		2630490	1					
ANR	2632801	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2632802	Identifier	argt		2630490	0					
ANR	2632803	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2632804	Callee	thumb_selector		2630490	0					
ANR	2632805	Identifier	thumb_selector		2630490	0					
ANR	2632806	ArgumentList	ao -> a		2630490	1					
ANR	2632807	Argument	ao -> a		2630490	0					
ANR	2632808	PtrMemberAccess	ao -> a		2630490	0					
ANR	2632809	Identifier	ao		2630490	0					
ANR	2632810	Identifier	a		2630490	1					
ANR	2632811	SwitchStatement	switch ( argt )		2630490	1					
ANR	2632812	Condition	argt	1705:10:35057:35060	2630490	0	True				
ANR	2632813	Identifier	argt		2630490	0					
ANR	2632814	CompoundStatement		413:16:9204:9204	2630490	1					
ANR	2632815	Label	case THUMB_REG :	1706:2:35067:35081	2630490	0	True				
ANR	2632816	Identifier	THUMB_REG		2630490	0					
ANR	2632817	CompoundStatement		415:3:9229:9258	2630490	1					
ANR	2632818	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 0 ] ) ;	1707:3:35088:35117	2630490	0	True				
ANR	2632819	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2632820	IdentifierDeclType	ut32		2630490	0					
ANR	2632821	Identifier	reg1		2630490	1					
ANR	2632822	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2632823	Identifier	reg1		2630490	0					
ANR	2632824	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2632825	Callee	getreg		2630490	0					
ANR	2632826	Identifier	getreg		2630490	0					
ANR	2632827	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2632828	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2632829	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2632830	PtrMemberAccess	ao -> a		2630490	0					
ANR	2632831	Identifier	ao		2630490	0					
ANR	2632832	Identifier	a		2630490	1					
ANR	2632833	PrimaryExpression	0		2630490	1					
ANR	2632834	ExpressionStatement	ao -> o = 0x8047	1708:3:35122:35136	2630490	1	True				
ANR	2632835	AssignmentExpression	ao -> o = 0x8047		2630490	0		=			
ANR	2632836	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632837	Identifier	ao		2630490	0					
ANR	2632838	Identifier	o		2630490	1					
ANR	2632839	PrimaryExpression	0x8047		2630490	1					
ANR	2632840	ExpressionStatement	ao -> o |= reg1 << 11	1709:3:35141:35160	2630490	2	True				
ANR	2632841	AssignmentExpression	ao -> o |= reg1 << 11		2630490	0		|=			
ANR	2632842	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632843	Identifier	ao		2630490	0					
ANR	2632844	Identifier	o		2630490	1					
ANR	2632845	ShiftExpression	reg1 << 11		2630490	1		<<			
ANR	2632846	Identifier	reg1		2630490	0					
ANR	2632847	PrimaryExpression	11		2630490	1					
ANR	2632848	ReturnStatement	return 2 ;	1710:3:35165:35173	2630490	3	True				
ANR	2632849	PrimaryExpression	2		2630490	0					
ANR	2632850	BreakStatement	break ;	1712:3:35190:35195	2630490	2	True				
ANR	2632851	Label	case THUMB_CONST :	1713:2:35199:35215	2630490	3	True				
ANR	2632852	Identifier	THUMB_CONST		2630490	0					
ANR	2632853	CompoundStatement		422:3:9363:9408	2630490	4					
ANR	2632854	IdentifierDeclStatement	"st32 offset = thumb_getoffset ( ao -> a [ 0 ] , off ) ;"	1714:3:35222:35267	2630490	0	True				
ANR	2632855	IdentifierDecl	"offset = thumb_getoffset ( ao -> a [ 0 ] , off )"		2630490	0					
ANR	2632856	IdentifierDeclType	st32		2630490	0					
ANR	2632857	Identifier	offset		2630490	1					
ANR	2632858	AssignmentExpression	"offset = thumb_getoffset ( ao -> a [ 0 ] , off )"		2630490	2		=			
ANR	2632859	Identifier	offset		2630490	0					
ANR	2632860	CallExpression	"thumb_getoffset ( ao -> a [ 0 ] , off )"		2630490	1					
ANR	2632861	Callee	thumb_getoffset		2630490	0					
ANR	2632862	Identifier	thumb_getoffset		2630490	0					
ANR	2632863	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2632864	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2632865	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2632866	PtrMemberAccess	ao -> a		2630490	0					
ANR	2632867	Identifier	ao		2630490	0					
ANR	2632868	Identifier	a		2630490	1					
ANR	2632869	PrimaryExpression	0		2630490	1					
ANR	2632870	Argument	off		2630490	1					
ANR	2632871	Identifier	off		2630490	0					
ANR	2632872	ExpressionStatement	ao -> o = 0x00f000c0	1715:3:35272:35290	2630490	1	True				
ANR	2632873	AssignmentExpression	ao -> o = 0x00f000c0		2630490	0		=			
ANR	2632874	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632875	Identifier	ao		2630490	0					
ANR	2632876	Identifier	o		2630490	1					
ANR	2632877	PrimaryExpression	0x00f000c0		2630490	1					
ANR	2632878	IfStatement	if ( ( offset > 16777214 ) || ( offset < - 16777216 ) || ( offset % 2 != 0 ) )		2630490	2					
ANR	2632879	Condition	( offset > 16777214 ) || ( offset < - 16777216 ) || ( offset % 2 != 0 )	1716:7:35299:35362	2630490	0	True				
ANR	2632880	OrExpression	( offset > 16777214 ) || ( offset < - 16777216 ) || ( offset % 2 != 0 )		2630490	0		||			
ANR	2632881	RelationalExpression	offset > 16777214		2630490	0		>			
ANR	2632882	Identifier	offset		2630490	0					
ANR	2632883	PrimaryExpression	16777214		2630490	1					
ANR	2632884	OrExpression	( offset < - 16777216 ) || ( offset % 2 != 0 )		2630490	1		||			
ANR	2632885	RelationalExpression	offset < - 16777216		2630490	0		<			
ANR	2632886	Identifier	offset		2630490	0					
ANR	2632887	UnaryOperationExpression	- 16777216		2630490	1					
ANR	2632888	UnaryOperator	-		2630490	0					
ANR	2632889	PrimaryExpression	16777216		2630490	1					
ANR	2632890	EqualityExpression	offset % 2 != 0		2630490	1		!=			
ANR	2632891	MultiplicativeExpression	offset % 2		2630490	0		%			
ANR	2632892	Identifier	offset		2630490	0					
ANR	2632893	PrimaryExpression	2		2630490	1					
ANR	2632894	PrimaryExpression	0		2630490	1					
ANR	2632895	CompoundStatement		424:73:9506:9506	2630490	1					
ANR	2632896	ReturnStatement	return - 1 ;	1717:4:35371:35380	2630490	0	True				
ANR	2632897	UnaryOperationExpression	- 1		2630490	0					
ANR	2632898	UnaryOperator	-		2630490	0					
ANR	2632899	PrimaryExpression	1		2630490	1					
ANR	2632900	ExpressionStatement	offset += off & 0x2	1719:3:35390:35409	2630490	3	True				
ANR	2632901	AssignmentExpression	offset += off & 0x2		2630490	0		+=			
ANR	2632902	Identifier	offset		2630490	0					
ANR	2632903	BitAndExpression	off & 0x2		2630490	1		&			
ANR	2632904	Identifier	off		2630490	0					
ANR	2632905	PrimaryExpression	0x2		2630490	1					
ANR	2632906	ExpressionStatement	ao -> o |= getthbimmed ( offset )	1720:3:35430:35459	2630490	4	True				
ANR	2632907	AssignmentExpression	ao -> o |= getthbimmed ( offset )		2630490	0		|=			
ANR	2632908	PtrMemberAccess	ao -> o		2630490	0					
ANR	2632909	Identifier	ao		2630490	0					
ANR	2632910	Identifier	o		2630490	1					
ANR	2632911	CallExpression	getthbimmed ( offset )		2630490	1					
ANR	2632912	Callee	getthbimmed		2630490	0					
ANR	2632913	Identifier	getthbimmed		2630490	0					
ANR	2632914	ArgumentList	offset		2630490	1					
ANR	2632915	Argument	offset		2630490	0					
ANR	2632916	Identifier	offset		2630490	0					
ANR	2632917	ReturnStatement	return 4 ;	1721:3:35464:35472	2630490	5	True				
ANR	2632918	PrimaryExpression	4		2630490	0					
ANR	2632919	BreakStatement	break ;	1723:3:35489:35494	2630490	5	True				
ANR	2632920	Label	default :	1724:2:35498:35505	2630490	6	True				
ANR	2632921	Identifier	default		2630490	0					
ANR	2632922	ReturnStatement	return - 1 ;	1725:3:35510:35519	2630490	7	True				
ANR	2632923	UnaryOperationExpression	- 1		2630490	0					
ANR	2632924	UnaryOperator	-		2630490	0					
ANR	2632925	PrimaryExpression	1		2630490	1					
ANR	2632926	ElseStatement	else		2630490	0					
ANR	2632927	IfStatement	"if ( ( m = opmask ( ao -> op , ""bfc"" , 0 ) ) )"		2630490	0					
ANR	2632928	Condition	"m = opmask ( ao -> op , ""bfc"" , 0 )"	1728:5:35538:35570	2630490	0	True				
ANR	2632929	AssignmentExpression	"m = opmask ( ao -> op , ""bfc"" , 0 )"		2630490	0		=			
ANR	2632930	Identifier	m		2630490	0					
ANR	2632931	CallExpression	"opmask ( ao -> op , ""bfc"" , 0 )"		2630490	1					
ANR	2632932	Callee	opmask		2630490	0					
ANR	2632933	Identifier	opmask		2630490	0					
ANR	2632934	ArgumentList	ao -> op		2630490	1					
ANR	2632935	Argument	ao -> op		2630490	0					
ANR	2632936	PtrMemberAccess	ao -> op		2630490	0					
ANR	2632937	Identifier	ao		2630490	0					
ANR	2632938	Identifier	op		2630490	1					
ANR	2632939	Argument	"""bfc"""		2630490	1					
ANR	2632940	PrimaryExpression	"""bfc"""		2630490	0					
ANR	2632941	Argument	0		2630490	2					
ANR	2632942	PrimaryExpression	0		2630490	0					
ANR	2632943	CompoundStatement		437:2:9718:9752	2630490	1					
ANR	2632944	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1729:2:35577:35611	2630490	0	True				
ANR	2632945	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2632946	IdentifierDeclType	ut64		2630490	0					
ANR	2632947	Identifier	argt		2630490	1					
ANR	2632948	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2632949	Identifier	argt		2630490	0					
ANR	2632950	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2632951	Callee	thumb_selector		2630490	0					
ANR	2632952	Identifier	thumb_selector		2630490	0					
ANR	2632953	ArgumentList	ao -> a		2630490	1					
ANR	2632954	Argument	ao -> a		2630490	0					
ANR	2632955	PtrMemberAccess	ao -> a		2630490	0					
ANR	2632956	Identifier	ao		2630490	0					
ANR	2632957	Identifier	a		2630490	1					
ANR	2632958	SwitchStatement	switch ( argt )		2630490	1					
ANR	2632959	Condition	argt	1730:10:35623:35626	2630490	0	True				
ANR	2632960	Identifier	argt		2630490	0					
ANR	2632961	CompoundStatement		438:16:9770:9770	2630490	1					
ANR	2632962	Label	case THUMB_REG_CONST_CONST :	1731:2:35633:35659	2630490	0	True				
ANR	2632963	Identifier	THUMB_REG_CONST_CONST		2630490	0					
ANR	2632964	CompoundStatement		447:3:9986:10012	2630490	1					
ANR	2632965	IfStatement	if ( m & DOTN_BIT )		2630490	0					
ANR	2632966	Condition	m & DOTN_BIT	1732:7:35670:35681	2630490	0	True				
ANR	2632967	BitAndExpression	m & DOTN_BIT		2630490	0		&			
ANR	2632968	Identifier	m		2630490	0					
ANR	2632969	Identifier	DOTN_BIT		2630490	1					
ANR	2632970	CompoundStatement		440:21:9825:9825	2630490	1					
ANR	2632971	ReturnStatement	return - 1 ;	1734:4:35725:35734	2630490	0	True				
ANR	2632972	UnaryOperationExpression	- 1		2630490	0					
ANR	2632973	UnaryOperator	-		2630490	0					
ANR	2632974	PrimaryExpression	1		2630490	1					
ANR	2632975	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1736:3:35744:35772	2630490	1	True				
ANR	2632976	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2632977	IdentifierDeclType	ut8		2630490	0					
ANR	2632978	Identifier	reg1		2630490	1					
ANR	2632979	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2632980	Identifier	reg1		2630490	0					
ANR	2632981	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2632982	Callee	getreg		2630490	0					
ANR	2632983	Identifier	getreg		2630490	0					
ANR	2632984	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2632985	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2632986	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2632987	PtrMemberAccess	ao -> a		2630490	0					
ANR	2632988	Identifier	ao		2630490	0					
ANR	2632989	Identifier	a		2630490	1					
ANR	2632990	PrimaryExpression	0		2630490	1					
ANR	2632991	IdentifierDeclStatement	ut32 lsb = getnum ( ao -> a [ 1 ] ) ;	1737:3:35777:35805	2630490	2	True				
ANR	2632992	IdentifierDecl	lsb = getnum ( ao -> a [ 1 ] )		2630490	0					
ANR	2632993	IdentifierDeclType	ut32		2630490	0					
ANR	2632994	Identifier	lsb		2630490	1					
ANR	2632995	AssignmentExpression	lsb = getnum ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2632996	Identifier	lsb		2630490	0					
ANR	2632997	CallExpression	getnum ( ao -> a [ 1 ] )		2630490	1					
ANR	2632998	Callee	getnum		2630490	0					
ANR	2632999	Identifier	getnum		2630490	0					
ANR	2633000	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2633001	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2633002	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2633003	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633004	Identifier	ao		2630490	0					
ANR	2633005	Identifier	a		2630490	1					
ANR	2633006	PrimaryExpression	1		2630490	1					
ANR	2633007	IdentifierDeclStatement	ut32 width = getnum ( ao -> a [ 2 ] ) ;	1738:3:35810:35840	2630490	3	True				
ANR	2633008	IdentifierDecl	width = getnum ( ao -> a [ 2 ] )		2630490	0					
ANR	2633009	IdentifierDeclType	ut32		2630490	0					
ANR	2633010	Identifier	width		2630490	1					
ANR	2633011	AssignmentExpression	width = getnum ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2633012	Identifier	width		2630490	0					
ANR	2633013	CallExpression	getnum ( ao -> a [ 2 ] )		2630490	1					
ANR	2633014	Callee	getnum		2630490	0					
ANR	2633015	Identifier	getnum		2630490	0					
ANR	2633016	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2633017	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2633018	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2633019	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633020	Identifier	ao		2630490	0					
ANR	2633021	Identifier	a		2630490	1					
ANR	2633022	PrimaryExpression	2		2630490	1					
ANR	2633023	IdentifierDeclStatement	ut32 msb = lsb + width - 1 ;	1739:3:35845:35871	2630490	4	True				
ANR	2633024	IdentifierDecl	msb = lsb + width - 1		2630490	0					
ANR	2633025	IdentifierDeclType	ut32		2630490	0					
ANR	2633026	Identifier	msb		2630490	1					
ANR	2633027	AssignmentExpression	msb = lsb + width - 1		2630490	2		=			
ANR	2633028	Identifier	msb		2630490	0					
ANR	2633029	AdditiveExpression	lsb + width - 1		2630490	1		+			
ANR	2633030	Identifier	lsb		2630490	0					
ANR	2633031	AdditiveExpression	width - 1		2630490	1		-			
ANR	2633032	Identifier	width		2630490	0					
ANR	2633033	PrimaryExpression	1		2630490	1					
ANR	2633034	IfStatement	if ( ( lsb > 31 ) || ( msb > 31 ) )		2630490	5					
ANR	2633035	Condition	( lsb > 31 ) || ( msb > 31 )	1740:7:35880:35903	2630490	0	True				
ANR	2633036	OrExpression	( lsb > 31 ) || ( msb > 31 )		2630490	0		||			
ANR	2633037	RelationalExpression	lsb > 31		2630490	0		>			
ANR	2633038	Identifier	lsb		2630490	0					
ANR	2633039	PrimaryExpression	31		2630490	1					
ANR	2633040	RelationalExpression	msb > 31		2630490	1		>			
ANR	2633041	Identifier	msb		2630490	0					
ANR	2633042	PrimaryExpression	31		2630490	1					
ANR	2633043	CompoundStatement		448:33:10047:10047	2630490	1					
ANR	2633044	ReturnStatement	return - 1 ;	1741:4:35912:35921	2630490	0	True				
ANR	2633045	UnaryOperationExpression	- 1		2630490	0					
ANR	2633046	UnaryOperator	-		2630490	0					
ANR	2633047	PrimaryExpression	1		2630490	1					
ANR	2633048	ExpressionStatement	ao -> o = 0x6ff30000	1743:3:35931:35949	2630490	6	True				
ANR	2633049	AssignmentExpression	ao -> o = 0x6ff30000		2630490	0		=			
ANR	2633050	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633051	Identifier	ao		2630490	0					
ANR	2633052	Identifier	o		2630490	1					
ANR	2633053	PrimaryExpression	0x6ff30000		2630490	1					
ANR	2633054	ExpressionStatement	ao -> o |= reg1	1744:3:35954:35967	2630490	7	True				
ANR	2633055	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2633056	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633057	Identifier	ao		2630490	0					
ANR	2633058	Identifier	o		2630490	1					
ANR	2633059	Identifier	reg1		2630490	1					
ANR	2633060	ExpressionStatement	ao -> o |= ( ( lsb & 0x1c ) << 2 )	1745:3:35972:36000	2630490	8	True				
ANR	2633061	AssignmentExpression	ao -> o |= ( ( lsb & 0x1c ) << 2 )		2630490	0		|=			
ANR	2633062	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633063	Identifier	ao		2630490	0					
ANR	2633064	Identifier	o		2630490	1					
ANR	2633065	ShiftExpression	( lsb & 0x1c ) << 2		2630490	1		<<			
ANR	2633066	BitAndExpression	lsb & 0x1c		2630490	0		&			
ANR	2633067	Identifier	lsb		2630490	0					
ANR	2633068	PrimaryExpression	0x1c		2630490	1					
ANR	2633069	PrimaryExpression	2		2630490	1					
ANR	2633070	ExpressionStatement	ao -> o |= ( ( lsb & 0x3 ) << 14 )	1746:3:36005:36033	2630490	9	True				
ANR	2633071	AssignmentExpression	ao -> o |= ( ( lsb & 0x3 ) << 14 )		2630490	0		|=			
ANR	2633072	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633073	Identifier	ao		2630490	0					
ANR	2633074	Identifier	o		2630490	1					
ANR	2633075	ShiftExpression	( lsb & 0x3 ) << 14		2630490	1		<<			
ANR	2633076	BitAndExpression	lsb & 0x3		2630490	0		&			
ANR	2633077	Identifier	lsb		2630490	0					
ANR	2633078	PrimaryExpression	0x3		2630490	1					
ANR	2633079	PrimaryExpression	14		2630490	1					
ANR	2633080	ExpressionStatement	ao -> o |= ( msb << 8 )	1747:3:36038:36057	2630490	10	True				
ANR	2633081	AssignmentExpression	ao -> o |= ( msb << 8 )		2630490	0		|=			
ANR	2633082	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633083	Identifier	ao		2630490	0					
ANR	2633084	Identifier	o		2630490	1					
ANR	2633085	ShiftExpression	msb << 8		2630490	1		<<			
ANR	2633086	Identifier	msb		2630490	0					
ANR	2633087	PrimaryExpression	8		2630490	1					
ANR	2633088	ReturnStatement	return 4 ;	1748:3:36062:36070	2630490	11	True				
ANR	2633089	PrimaryExpression	4		2630490	0					
ANR	2633090	BreakStatement	break ;	1750:3:36087:36092	2630490	2	True				
ANR	2633091	Label	default :	1751:2:36096:36103	2630490	3	True				
ANR	2633092	Identifier	default		2630490	0					
ANR	2633093	ReturnStatement	return - 1 ;	1752:3:36108:36117	2630490	4	True				
ANR	2633094	UnaryOperationExpression	- 1		2630490	0					
ANR	2633095	UnaryOperator	-		2630490	0					
ANR	2633096	PrimaryExpression	1		2630490	1					
ANR	2633097	ElseStatement	else		2630490	0					
ANR	2633098	IfStatement	"if ( ( m = opmask ( ao -> op , ""bfi"" , 0 ) ) )"		2630490	0					
ANR	2633099	Condition	"m = opmask ( ao -> op , ""bfi"" , 0 )"	1755:5:36136:36168	2630490	0	True				
ANR	2633100	AssignmentExpression	"m = opmask ( ao -> op , ""bfi"" , 0 )"		2630490	0		=			
ANR	2633101	Identifier	m		2630490	0					
ANR	2633102	CallExpression	"opmask ( ao -> op , ""bfi"" , 0 )"		2630490	1					
ANR	2633103	Callee	opmask		2630490	0					
ANR	2633104	Identifier	opmask		2630490	0					
ANR	2633105	ArgumentList	ao -> op		2630490	1					
ANR	2633106	Argument	ao -> op		2630490	0					
ANR	2633107	PtrMemberAccess	ao -> op		2630490	0					
ANR	2633108	Identifier	ao		2630490	0					
ANR	2633109	Identifier	op		2630490	1					
ANR	2633110	Argument	"""bfi"""		2630490	1					
ANR	2633111	PrimaryExpression	"""bfi"""		2630490	0					
ANR	2633112	Argument	0		2630490	2					
ANR	2633113	PrimaryExpression	0		2630490	0					
ANR	2633114	CompoundStatement		464:2:10316:10350	2630490	1					
ANR	2633115	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1756:2:36175:36209	2630490	0	True				
ANR	2633116	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2633117	IdentifierDeclType	ut64		2630490	0					
ANR	2633118	Identifier	argt		2630490	1					
ANR	2633119	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2633120	Identifier	argt		2630490	0					
ANR	2633121	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2633122	Callee	thumb_selector		2630490	0					
ANR	2633123	Identifier	thumb_selector		2630490	0					
ANR	2633124	ArgumentList	ao -> a		2630490	1					
ANR	2633125	Argument	ao -> a		2630490	0					
ANR	2633126	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633127	Identifier	ao		2630490	0					
ANR	2633128	Identifier	a		2630490	1					
ANR	2633129	SwitchStatement	switch ( argt )		2630490	1					
ANR	2633130	Condition	argt	1757:10:36221:36224	2630490	0	True				
ANR	2633131	Identifier	argt		2630490	0					
ANR	2633132	CompoundStatement		465:16:10368:10368	2630490	1					
ANR	2633133	Label	case THUMB_REG_REG_CONST_CONST :	1758:2:36231:36261	2630490	0	True				
ANR	2633134	Identifier	THUMB_REG_REG_CONST_CONST		2630490	0					
ANR	2633135	CompoundStatement		469:3:10477:10503	2630490	1					
ANR	2633136	IdentifierDeclStatement	ut32 lsb = getnum ( ao -> a [ 2 ] ) ;	1759:3:36268:36296	2630490	0	True				
ANR	2633137	IdentifierDecl	lsb = getnum ( ao -> a [ 2 ] )		2630490	0					
ANR	2633138	IdentifierDeclType	ut32		2630490	0					
ANR	2633139	Identifier	lsb		2630490	1					
ANR	2633140	AssignmentExpression	lsb = getnum ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2633141	Identifier	lsb		2630490	0					
ANR	2633142	CallExpression	getnum ( ao -> a [ 2 ] )		2630490	1					
ANR	2633143	Callee	getnum		2630490	0					
ANR	2633144	Identifier	getnum		2630490	0					
ANR	2633145	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2633146	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2633147	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2633148	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633149	Identifier	ao		2630490	0					
ANR	2633150	Identifier	a		2630490	1					
ANR	2633151	PrimaryExpression	2		2630490	1					
ANR	2633152	IdentifierDeclStatement	ut32 width = getnum ( ao -> a [ 3 ] ) ;	1760:3:36301:36331	2630490	1	True				
ANR	2633153	IdentifierDecl	width = getnum ( ao -> a [ 3 ] )		2630490	0					
ANR	2633154	IdentifierDeclType	ut32		2630490	0					
ANR	2633155	Identifier	width		2630490	1					
ANR	2633156	AssignmentExpression	width = getnum ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2633157	Identifier	width		2630490	0					
ANR	2633158	CallExpression	getnum ( ao -> a [ 3 ] )		2630490	1					
ANR	2633159	Callee	getnum		2630490	0					
ANR	2633160	Identifier	getnum		2630490	0					
ANR	2633161	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2633162	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2633163	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2633164	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633165	Identifier	ao		2630490	0					
ANR	2633166	Identifier	a		2630490	1					
ANR	2633167	PrimaryExpression	3		2630490	1					
ANR	2633168	IdentifierDeclStatement	ut32 msb = lsb + width - 1 ;	1761:3:36336:36362	2630490	2	True				
ANR	2633169	IdentifierDecl	msb = lsb + width - 1		2630490	0					
ANR	2633170	IdentifierDeclType	ut32		2630490	0					
ANR	2633171	Identifier	msb		2630490	1					
ANR	2633172	AssignmentExpression	msb = lsb + width - 1		2630490	2		=			
ANR	2633173	Identifier	msb		2630490	0					
ANR	2633174	AdditiveExpression	lsb + width - 1		2630490	1		+			
ANR	2633175	Identifier	lsb		2630490	0					
ANR	2633176	AdditiveExpression	width - 1		2630490	1		-			
ANR	2633177	Identifier	width		2630490	0					
ANR	2633178	PrimaryExpression	1		2630490	1					
ANR	2633179	IfStatement	if ( ( lsb > 31 ) || ( msb > 31 ) )		2630490	3					
ANR	2633180	Condition	( lsb > 31 ) || ( msb > 31 )	1762:7:36371:36394	2630490	0	True				
ANR	2633181	OrExpression	( lsb > 31 ) || ( msb > 31 )		2630490	0		||			
ANR	2633182	RelationalExpression	lsb > 31		2630490	0		>			
ANR	2633183	Identifier	lsb		2630490	0					
ANR	2633184	PrimaryExpression	31		2630490	1					
ANR	2633185	RelationalExpression	msb > 31		2630490	1		>			
ANR	2633186	Identifier	msb		2630490	0					
ANR	2633187	PrimaryExpression	31		2630490	1					
ANR	2633188	CompoundStatement		470:33:10538:10538	2630490	1					
ANR	2633189	ReturnStatement	return - 1 ;	1763:4:36403:36412	2630490	0	True				
ANR	2633190	UnaryOperationExpression	- 1		2630490	0					
ANR	2633191	UnaryOperator	-		2630490	0					
ANR	2633192	PrimaryExpression	1		2630490	1					
ANR	2633193	ExpressionStatement	ao -> o = 0x60f30000	1765:3:36422:36440	2630490	4	True				
ANR	2633194	AssignmentExpression	ao -> o = 0x60f30000		2630490	0		=			
ANR	2633195	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633196	Identifier	ao		2630490	0					
ANR	2633197	Identifier	o		2630490	1					
ANR	2633198	PrimaryExpression	0x60f30000		2630490	1					
ANR	2633199	ExpressionStatement	ao -> o |= ( ( lsb & 0x1c ) << 2 )	1766:3:36445:36473	2630490	5	True				
ANR	2633200	AssignmentExpression	ao -> o |= ( ( lsb & 0x1c ) << 2 )		2630490	0		|=			
ANR	2633201	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633202	Identifier	ao		2630490	0					
ANR	2633203	Identifier	o		2630490	1					
ANR	2633204	ShiftExpression	( lsb & 0x1c ) << 2		2630490	1		<<			
ANR	2633205	BitAndExpression	lsb & 0x1c		2630490	0		&			
ANR	2633206	Identifier	lsb		2630490	0					
ANR	2633207	PrimaryExpression	0x1c		2630490	1					
ANR	2633208	PrimaryExpression	2		2630490	1					
ANR	2633209	ExpressionStatement	ao -> o |= ( ( lsb & 0x3 ) << 14 )	1767:3:36478:36506	2630490	6	True				
ANR	2633210	AssignmentExpression	ao -> o |= ( ( lsb & 0x3 ) << 14 )		2630490	0		|=			
ANR	2633211	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633212	Identifier	ao		2630490	0					
ANR	2633213	Identifier	o		2630490	1					
ANR	2633214	ShiftExpression	( lsb & 0x3 ) << 14		2630490	1		<<			
ANR	2633215	BitAndExpression	lsb & 0x3		2630490	0		&			
ANR	2633216	Identifier	lsb		2630490	0					
ANR	2633217	PrimaryExpression	0x3		2630490	1					
ANR	2633218	PrimaryExpression	14		2630490	1					
ANR	2633219	ExpressionStatement	ao -> o |= ( msb << 8 )	1768:3:36511:36530	2630490	7	True				
ANR	2633220	AssignmentExpression	ao -> o |= ( msb << 8 )		2630490	0		|=			
ANR	2633221	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633222	Identifier	ao		2630490	0					
ANR	2633223	Identifier	o		2630490	1					
ANR	2633224	ShiftExpression	msb << 8		2630490	1		<<			
ANR	2633225	Identifier	msb		2630490	0					
ANR	2633226	PrimaryExpression	8		2630490	1					
ANR	2633227	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	1769:3:36535:36571	2630490	8	True				
ANR	2633228	CallExpression	"std_32bit_2reg ( ao , m , false )"		2630490	0					
ANR	2633229	Callee	std_32bit_2reg		2630490	0					
ANR	2633230	Identifier	std_32bit_2reg		2630490	0					
ANR	2633231	ArgumentList	ao		2630490	1					
ANR	2633232	Argument	ao		2630490	0					
ANR	2633233	Identifier	ao		2630490	0					
ANR	2633234	Argument	m		2630490	1					
ANR	2633235	Identifier	m		2630490	0					
ANR	2633236	Argument	false		2630490	2					
ANR	2633237	Identifier	false		2630490	0					
ANR	2633238	BreakStatement	break ;	1771:3:36588:36593	2630490	2	True				
ANR	2633239	Label	default :	1772:2:36597:36604	2630490	3	True				
ANR	2633240	Identifier	default		2630490	0					
ANR	2633241	ReturnStatement	return - 1 ;	1773:3:36609:36618	2630490	4	True				
ANR	2633242	UnaryOperationExpression	- 1		2630490	0					
ANR	2633243	UnaryOperator	-		2630490	0					
ANR	2633244	PrimaryExpression	1		2630490	1					
ANR	2633245	ElseStatement	else		2630490	0					
ANR	2633246	IfStatement	"if ( ( m = opmask ( ao -> op , ""bic"" , S_BIT ) ) )"		2630490	0					
ANR	2633247	Condition	"m = opmask ( ao -> op , ""bic"" , S_BIT )"	1776:5:36637:36673	2630490	0	True				
ANR	2633248	AssignmentExpression	"m = opmask ( ao -> op , ""bic"" , S_BIT )"		2630490	0		=			
ANR	2633249	Identifier	m		2630490	0					
ANR	2633250	CallExpression	"opmask ( ao -> op , ""bic"" , S_BIT )"		2630490	1					
ANR	2633251	Callee	opmask		2630490	0					
ANR	2633252	Identifier	opmask		2630490	0					
ANR	2633253	ArgumentList	ao -> op		2630490	1					
ANR	2633254	Argument	ao -> op		2630490	0					
ANR	2633255	PtrMemberAccess	ao -> op		2630490	0					
ANR	2633256	Identifier	ao		2630490	0					
ANR	2633257	Identifier	op		2630490	1					
ANR	2633258	Argument	"""bic"""		2630490	1					
ANR	2633259	PrimaryExpression	"""bic"""		2630490	0					
ANR	2633260	Argument	S_BIT		2630490	2					
ANR	2633261	Identifier	S_BIT		2630490	0					
ANR	2633262	CompoundStatement		485:2:10821:10855	2630490	1					
ANR	2633263	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1777:2:36680:36714	2630490	0	True				
ANR	2633264	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2633265	IdentifierDeclType	ut64		2630490	0					
ANR	2633266	Identifier	argt		2630490	1					
ANR	2633267	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2633268	Identifier	argt		2630490	0					
ANR	2633269	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2633270	Callee	thumb_selector		2630490	0					
ANR	2633271	Identifier	thumb_selector		2630490	0					
ANR	2633272	ArgumentList	ao -> a		2630490	1					
ANR	2633273	Argument	ao -> a		2630490	0					
ANR	2633274	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633275	Identifier	ao		2630490	0					
ANR	2633276	Identifier	a		2630490	1					
ANR	2633277	SwitchStatement	switch ( argt )		2630490	1					
ANR	2633278	Condition	argt	1778:10:36726:36729	2630490	0	True				
ANR	2633279	Identifier	argt		2630490	0					
ANR	2633280	CompoundStatement		486:16:10873:10873	2630490	1					
ANR	2633281	Label	case THUMB_REG_REG :	1779:2:36736:36754	2630490	0	True				
ANR	2633282	Identifier	THUMB_REG_REG		2630490	0					
ANR	2633283	CompoundStatement		487:22:10897:10897	2630490	1					
ANR	2633284	ExpressionStatement	ao -> o = 0x8043	1780:3:36761:36775	2630490	0	True				
ANR	2633285	AssignmentExpression	ao -> o = 0x8043		2630490	0		=			
ANR	2633286	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633287	Identifier	ao		2630490	0					
ANR	2633288	Identifier	o		2630490	1					
ANR	2633289	PrimaryExpression	0x8043		2630490	1					
ANR	2633290	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	1					
ANR	2633291	Condition	"std_16bit_2reg ( ao , m )"	1781:7:36784:36805	2630490	0	True				
ANR	2633292	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2633293	Callee	std_16bit_2reg		2630490	0					
ANR	2633294	Identifier	std_16bit_2reg		2630490	0					
ANR	2633295	ArgumentList	ao		2630490	1					
ANR	2633296	Argument	ao		2630490	0					
ANR	2633297	Identifier	ao		2630490	0					
ANR	2633298	Argument	m		2630490	1					
ANR	2633299	Identifier	m		2630490	0					
ANR	2633300	CompoundStatement		489:31:10949:10949	2630490	1					
ANR	2633301	ReturnStatement	return 2 ;	1782:4:36814:36822	2630490	0	True				
ANR	2633302	PrimaryExpression	2		2630490	0					
ANR	2633303	ExpressionStatement	std_opt_2 ( ao )	1784:3:36832:36846	2630490	2	True				
ANR	2633304	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2633305	Callee	std_opt_2		2630490	0					
ANR	2633306	Identifier	std_opt_2		2630490	0					
ANR	2633307	ArgumentList	ao		2630490	1					
ANR	2633308	Argument	ao		2630490	0					
ANR	2633309	Identifier	ao		2630490	0					
ANR	2633310	Label	case THUMB_REG_REG_REG :	1787:2:36892:36914	2630490	2	True				
ANR	2633311	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2633312	CompoundStatement		495:26:11057:11057	2630490	3					
ANR	2633313	ExpressionStatement	ao -> o = 0x20ea0000	1788:3:36921:36939	2630490	0	True				
ANR	2633314	AssignmentExpression	ao -> o = 0x20ea0000		2630490	0		=			
ANR	2633315	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633316	Identifier	ao		2630490	0					
ANR	2633317	Identifier	o		2630490	1					
ANR	2633318	PrimaryExpression	0x20ea0000		2630490	1					
ANR	2633319	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	1789:3:36944:36980	2630490	1	True				
ANR	2633320	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2633321	Callee	std_32bit_3reg		2630490	0					
ANR	2633322	Identifier	std_32bit_3reg		2630490	0					
ANR	2633323	ArgumentList	ao		2630490	1					
ANR	2633324	Argument	ao		2630490	0					
ANR	2633325	Identifier	ao		2630490	0					
ANR	2633326	Argument	m		2630490	1					
ANR	2633327	Identifier	m		2630490	0					
ANR	2633328	Argument	false		2630490	2					
ANR	2633329	Identifier	false		2630490	0					
ANR	2633330	BreakStatement	break ;	1791:3:36997:37002	2630490	4	True				
ANR	2633331	Label	case THUMB_REG_CONST :	1792:2:37006:37026	2630490	5	True				
ANR	2633332	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2633333	CompoundStatement		500:24:11169:11169	2630490	6					
ANR	2633334	ExpressionStatement	std_opt_2 ( ao )	1793:3:37033:37047	2630490	0	True				
ANR	2633335	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2633336	Callee	std_opt_2		2630490	0					
ANR	2633337	Identifier	std_opt_2		2630490	0					
ANR	2633338	ArgumentList	ao		2630490	1					
ANR	2633339	Argument	ao		2630490	0					
ANR	2633340	Identifier	ao		2630490	0					
ANR	2633341	Label	case THUMB_REG_REG_CONST :	1796:2:37093:37117	2630490	7	True				
ANR	2633342	Identifier	THUMB_REG_REG_CONST		2630490	0					
ANR	2633343	CompoundStatement		504:28:11260:11260	2630490	8					
ANR	2633344	ExpressionStatement	ao -> o = 0x20f00000	1797:3:37124:37142	2630490	0	True				
ANR	2633345	AssignmentExpression	ao -> o = 0x20f00000		2630490	0		=			
ANR	2633346	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633347	Identifier	ao		2630490	0					
ANR	2633348	Identifier	o		2630490	1					
ANR	2633349	PrimaryExpression	0x20f00000		2630490	1					
ANR	2633350	ExpressionStatement	ao -> o |= getthimmed12 ( ao -> a [ 2 ] )	1798:3:37147:37179	2630490	1	True				
ANR	2633351	AssignmentExpression	ao -> o |= getthimmed12 ( ao -> a [ 2 ] )		2630490	0		|=			
ANR	2633352	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633353	Identifier	ao		2630490	0					
ANR	2633354	Identifier	o		2630490	1					
ANR	2633355	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		2630490	1					
ANR	2633356	Callee	getthimmed12		2630490	0					
ANR	2633357	Identifier	getthimmed12		2630490	0					
ANR	2633358	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2633359	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2633360	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2633361	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633362	Identifier	ao		2630490	0					
ANR	2633363	Identifier	a		2630490	1					
ANR	2633364	PrimaryExpression	2		2630490	1					
ANR	2633365	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	1799:3:37184:37220	2630490	2	True				
ANR	2633366	CallExpression	"std_32bit_2reg ( ao , m , false )"		2630490	0					
ANR	2633367	Callee	std_32bit_2reg		2630490	0					
ANR	2633368	Identifier	std_32bit_2reg		2630490	0					
ANR	2633369	ArgumentList	ao		2630490	1					
ANR	2633370	Argument	ao		2630490	0					
ANR	2633371	Identifier	ao		2630490	0					
ANR	2633372	Argument	m		2630490	1					
ANR	2633373	Identifier	m		2630490	0					
ANR	2633374	Argument	false		2630490	2					
ANR	2633375	Identifier	false		2630490	0					
ANR	2633376	BreakStatement	break ;	1801:3:37237:37242	2630490	9	True				
ANR	2633377	Label	case THUMB_REG_REG_SHIFT :	1802:2:37246:37270	2630490	10	True				
ANR	2633378	Identifier	THUMB_REG_REG_SHIFT		2630490	0					
ANR	2633379	CompoundStatement		510:28:11413:11413	2630490	11					
ANR	2633380	ExpressionStatement	std_opt_3 ( ao )	1803:3:37277:37291	2630490	0	True				
ANR	2633381	CallExpression	std_opt_3 ( ao )		2630490	0					
ANR	2633382	Callee	std_opt_3		2630490	0					
ANR	2633383	Identifier	std_opt_3		2630490	0					
ANR	2633384	ArgumentList	ao		2630490	1					
ANR	2633385	Argument	ao		2630490	0					
ANR	2633386	Identifier	ao		2630490	0					
ANR	2633387	Label	case THUMB_REG_REG_REG_SHIFT :	1806:2:37337:37365	2630490	12	True				
ANR	2633388	Identifier	THUMB_REG_REG_REG_SHIFT		2630490	0					
ANR	2633389	CompoundStatement		514:32:11508:11508	2630490	13					
ANR	2633390	ExpressionStatement	ao -> o = 0x20ea0000	1807:3:37372:37390	2630490	0	True				
ANR	2633391	AssignmentExpression	ao -> o = 0x20ea0000		2630490	0		=			
ANR	2633392	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633393	Identifier	ao		2630490	0					
ANR	2633394	Identifier	o		2630490	1					
ANR	2633395	PrimaryExpression	0x20ea0000		2630490	1					
ANR	2633396	ReturnStatement	"return std_32bit_3reg ( ao , m , true ) ;"	1808:3:37395:37430	2630490	1	True				
ANR	2633397	CallExpression	"std_32bit_3reg ( ao , m , true )"		2630490	0					
ANR	2633398	Callee	std_32bit_3reg		2630490	0					
ANR	2633399	Identifier	std_32bit_3reg		2630490	0					
ANR	2633400	ArgumentList	ao		2630490	1					
ANR	2633401	Argument	ao		2630490	0					
ANR	2633402	Identifier	ao		2630490	0					
ANR	2633403	Argument	m		2630490	1					
ANR	2633404	Identifier	m		2630490	0					
ANR	2633405	Argument	true		2630490	2					
ANR	2633406	Identifier	true		2630490	0					
ANR	2633407	BreakStatement	break ;	1810:3:37447:37452	2630490	14	True				
ANR	2633408	Label	default :	1811:2:37456:37463	2630490	15	True				
ANR	2633409	Identifier	default		2630490	0					
ANR	2633410	ReturnStatement	return - 1 ;	1812:3:37468:37477	2630490	16	True				
ANR	2633411	UnaryOperationExpression	- 1		2630490	0					
ANR	2633412	UnaryOperator	-		2630490	0					
ANR	2633413	PrimaryExpression	1		2630490	1					
ANR	2633414	ElseStatement	else		2630490	0					
ANR	2633415	IfStatement	"if ( ( m = opmask ( ao -> op , ""bkpt"" , 0 ) ) )"		2630490	0					
ANR	2633416	Condition	"m = opmask ( ao -> op , ""bkpt"" , 0 )"	1815:5:37496:37529	2630490	0	True				
ANR	2633417	AssignmentExpression	"m = opmask ( ao -> op , ""bkpt"" , 0 )"		2630490	0		=			
ANR	2633418	Identifier	m		2630490	0					
ANR	2633419	CallExpression	"opmask ( ao -> op , ""bkpt"" , 0 )"		2630490	1					
ANR	2633420	Callee	opmask		2630490	0					
ANR	2633421	Identifier	opmask		2630490	0					
ANR	2633422	ArgumentList	ao -> op		2630490	1					
ANR	2633423	Argument	ao -> op		2630490	0					
ANR	2633424	PtrMemberAccess	ao -> op		2630490	0					
ANR	2633425	Identifier	ao		2630490	0					
ANR	2633426	Identifier	op		2630490	1					
ANR	2633427	Argument	"""bkpt"""		2630490	1					
ANR	2633428	PrimaryExpression	"""bkpt"""		2630490	0					
ANR	2633429	Argument	0		2630490	2					
ANR	2633430	PrimaryExpression	0		2630490	0					
ANR	2633431	CompoundStatement		524:2:11677:11711	2630490	1					
ANR	2633432	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1816:2:37536:37570	2630490	0	True				
ANR	2633433	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2633434	IdentifierDeclType	ut64		2630490	0					
ANR	2633435	Identifier	argt		2630490	1					
ANR	2633436	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2633437	Identifier	argt		2630490	0					
ANR	2633438	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2633439	Callee	thumb_selector		2630490	0					
ANR	2633440	Identifier	thumb_selector		2630490	0					
ANR	2633441	ArgumentList	ao -> a		2630490	1					
ANR	2633442	Argument	ao -> a		2630490	0					
ANR	2633443	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633444	Identifier	ao		2630490	0					
ANR	2633445	Identifier	a		2630490	1					
ANR	2633446	SwitchStatement	switch ( argt )		2630490	1					
ANR	2633447	Condition	argt	1817:10:37582:37585	2630490	0	True				
ANR	2633448	Identifier	argt		2630490	0					
ANR	2633449	CompoundStatement		525:16:11729:11729	2630490	1					
ANR	2633450	Label	case THUMB_CONST :	1818:2:37592:37608	2630490	0	True				
ANR	2633451	Identifier	THUMB_CONST		2630490	0					
ANR	2633452	CompoundStatement		527:3:11756:11784	2630490	1					
ANR	2633453	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 0 ] ) ;	1819:3:37615:37643	2630490	0	True				
ANR	2633454	IdentifierDecl	num = getnum ( ao -> a [ 0 ] )		2630490	0					
ANR	2633455	IdentifierDeclType	ut32		2630490	0					
ANR	2633456	Identifier	num		2630490	1					
ANR	2633457	AssignmentExpression	num = getnum ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2633458	Identifier	num		2630490	0					
ANR	2633459	CallExpression	getnum ( ao -> a [ 0 ] )		2630490	1					
ANR	2633460	Callee	getnum		2630490	0					
ANR	2633461	Identifier	getnum		2630490	0					
ANR	2633462	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2633463	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2633464	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2633465	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633466	Identifier	ao		2630490	0					
ANR	2633467	Identifier	a		2630490	1					
ANR	2633468	PrimaryExpression	0		2630490	1					
ANR	2633469	IfStatement	if ( num > 255 )		2630490	1					
ANR	2633470	Condition	num > 255	1820:7:37652:37660	2630490	0	True				
ANR	2633471	RelationalExpression	num > 255		2630490	0		>			
ANR	2633472	Identifier	num		2630490	0					
ANR	2633473	PrimaryExpression	255		2630490	1					
ANR	2633474	CompoundStatement		528:18:11804:11804	2630490	1					
ANR	2633475	ReturnStatement	return - 1 ;	1821:4:37669:37678	2630490	0	True				
ANR	2633476	UnaryOperationExpression	- 1		2630490	0					
ANR	2633477	UnaryOperator	-		2630490	0					
ANR	2633478	PrimaryExpression	1		2630490	1					
ANR	2633479	ExpressionStatement	ao -> o = 0x00be	1823:3:37688:37702	2630490	2	True				
ANR	2633480	AssignmentExpression	ao -> o = 0x00be		2630490	0		=			
ANR	2633481	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633482	Identifier	ao		2630490	0					
ANR	2633483	Identifier	o		2630490	1					
ANR	2633484	PrimaryExpression	0x00be		2630490	1					
ANR	2633485	ExpressionStatement	ao -> o |= num << 8	1824:3:37707:37724	2630490	3	True				
ANR	2633486	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2633487	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633488	Identifier	ao		2630490	0					
ANR	2633489	Identifier	o		2630490	1					
ANR	2633490	ShiftExpression	num << 8		2630490	1		<<			
ANR	2633491	Identifier	num		2630490	0					
ANR	2633492	PrimaryExpression	8		2630490	1					
ANR	2633493	ReturnStatement	return 2 ;	1825:3:37729:37737	2630490	4	True				
ANR	2633494	PrimaryExpression	2		2630490	0					
ANR	2633495	BreakStatement	break ;	1827:3:37754:37759	2630490	2	True				
ANR	2633496	Label	default :	1828:2:37763:37770	2630490	3	True				
ANR	2633497	Identifier	default		2630490	0					
ANR	2633498	ReturnStatement	return - 1 ;	1829:3:37775:37784	2630490	4	True				
ANR	2633499	UnaryOperationExpression	- 1		2630490	0					
ANR	2633500	UnaryOperator	-		2630490	0					
ANR	2633501	PrimaryExpression	1		2630490	1					
ANR	2633502	ElseStatement	else		2630490	0					
ANR	2633503	IfStatement	"if ( ( m = opmask ( ao -> op , ""cbnz"" , 0 ) ) )"		2630490	0					
ANR	2633504	Condition	"m = opmask ( ao -> op , ""cbnz"" , 0 )"	1832:5:37803:37836	2630490	0	True				
ANR	2633505	AssignmentExpression	"m = opmask ( ao -> op , ""cbnz"" , 0 )"		2630490	0		=			
ANR	2633506	Identifier	m		2630490	0					
ANR	2633507	CallExpression	"opmask ( ao -> op , ""cbnz"" , 0 )"		2630490	1					
ANR	2633508	Callee	opmask		2630490	0					
ANR	2633509	Identifier	opmask		2630490	0					
ANR	2633510	ArgumentList	ao -> op		2630490	1					
ANR	2633511	Argument	ao -> op		2630490	0					
ANR	2633512	PtrMemberAccess	ao -> op		2630490	0					
ANR	2633513	Identifier	ao		2630490	0					
ANR	2633514	Identifier	op		2630490	1					
ANR	2633515	Argument	"""cbnz"""		2630490	1					
ANR	2633516	PrimaryExpression	"""cbnz"""		2630490	0					
ANR	2633517	Argument	0		2630490	2					
ANR	2633518	PrimaryExpression	0		2630490	0					
ANR	2633519	CompoundStatement		541:2:11984:12018	2630490	1					
ANR	2633520	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1833:2:37843:37877	2630490	0	True				
ANR	2633521	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2633522	IdentifierDeclType	ut64		2630490	0					
ANR	2633523	Identifier	argt		2630490	1					
ANR	2633524	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2633525	Identifier	argt		2630490	0					
ANR	2633526	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2633527	Callee	thumb_selector		2630490	0					
ANR	2633528	Identifier	thumb_selector		2630490	0					
ANR	2633529	ArgumentList	ao -> a		2630490	1					
ANR	2633530	Argument	ao -> a		2630490	0					
ANR	2633531	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633532	Identifier	ao		2630490	0					
ANR	2633533	Identifier	a		2630490	1					
ANR	2633534	SwitchStatement	switch ( argt )		2630490	1					
ANR	2633535	Condition	argt	1834:10:37889:37892	2630490	0	True				
ANR	2633536	Identifier	argt		2630490	0					
ANR	2633537	CompoundStatement		542:16:12036:12036	2630490	1					
ANR	2633538	Label	case THUMB_REG_CONST :	1835:2:37899:37919	2630490	0	True				
ANR	2633539	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2633540	CompoundStatement		545:3:12100:12145	2630490	1					
ANR	2633541	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1836:3:37926:37954	2630490	0	True				
ANR	2633542	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2633543	IdentifierDeclType	ut8		2630490	0					
ANR	2633544	Identifier	reg1		2630490	1					
ANR	2633545	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2633546	Identifier	reg1		2630490	0					
ANR	2633547	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2633548	Callee	getreg		2630490	0					
ANR	2633549	Identifier	getreg		2630490	0					
ANR	2633550	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2633551	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2633552	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2633553	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633554	Identifier	ao		2630490	0					
ANR	2633555	Identifier	a		2630490	1					
ANR	2633556	PrimaryExpression	0		2630490	1					
ANR	2633557	IdentifierDeclStatement	"st32 offset = thumb_getoffset ( ao -> a [ 1 ] , off ) ;"	1837:3:37959:38004	2630490	1	True				
ANR	2633558	IdentifierDecl	"offset = thumb_getoffset ( ao -> a [ 1 ] , off )"		2630490	0					
ANR	2633559	IdentifierDeclType	st32		2630490	0					
ANR	2633560	Identifier	offset		2630490	1					
ANR	2633561	AssignmentExpression	"offset = thumb_getoffset ( ao -> a [ 1 ] , off )"		2630490	2		=			
ANR	2633562	Identifier	offset		2630490	0					
ANR	2633563	CallExpression	"thumb_getoffset ( ao -> a [ 1 ] , off )"		2630490	1					
ANR	2633564	Callee	thumb_getoffset		2630490	0					
ANR	2633565	Identifier	thumb_getoffset		2630490	0					
ANR	2633566	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2633567	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2633568	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2633569	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633570	Identifier	ao		2630490	0					
ANR	2633571	Identifier	a		2630490	1					
ANR	2633572	PrimaryExpression	1		2630490	1					
ANR	2633573	Argument	off		2630490	1					
ANR	2633574	Identifier	off		2630490	0					
ANR	2633575	IfStatement	if ( ( reg1 > 7 ) || ( offset > 127 ) || ( offset % 2 != 0 ) )		2630490	2					
ANR	2633576	Condition	( reg1 > 7 ) || ( offset > 127 ) || ( offset % 2 != 0 )	1838:7:38013:38061	2630490	0	True				
ANR	2633577	OrExpression	( reg1 > 7 ) || ( offset > 127 ) || ( offset % 2 != 0 )		2630490	0		||			
ANR	2633578	RelationalExpression	reg1 > 7		2630490	0		>			
ANR	2633579	Identifier	reg1		2630490	0					
ANR	2633580	PrimaryExpression	7		2630490	1					
ANR	2633581	OrExpression	( offset > 127 ) || ( offset % 2 != 0 )		2630490	1		||			
ANR	2633582	RelationalExpression	offset > 127		2630490	0		>			
ANR	2633583	Identifier	offset		2630490	0					
ANR	2633584	PrimaryExpression	127		2630490	1					
ANR	2633585	EqualityExpression	offset % 2 != 0		2630490	1		!=			
ANR	2633586	MultiplicativeExpression	offset % 2		2630490	0		%			
ANR	2633587	Identifier	offset		2630490	0					
ANR	2633588	PrimaryExpression	2		2630490	1					
ANR	2633589	PrimaryExpression	0		2630490	1					
ANR	2633590	CompoundStatement		546:58:12205:12205	2630490	1					
ANR	2633591	ReturnStatement	return - 1 ;	1839:4:38070:38079	2630490	0	True				
ANR	2633592	UnaryOperationExpression	- 1		2630490	0					
ANR	2633593	UnaryOperator	-		2630490	0					
ANR	2633594	PrimaryExpression	1		2630490	1					
ANR	2633595	ExpressionStatement	ao -> o = 0x00b9	1841:3:38089:38103	2630490	3	True				
ANR	2633596	AssignmentExpression	ao -> o = 0x00b9		2630490	0		=			
ANR	2633597	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633598	Identifier	ao		2630490	0					
ANR	2633599	Identifier	o		2630490	1					
ANR	2633600	PrimaryExpression	0x00b9		2630490	1					
ANR	2633601	ExpressionStatement	ao -> o |= reg1 << 8	1842:3:38108:38126	2630490	4	True				
ANR	2633602	AssignmentExpression	ao -> o |= reg1 << 8		2630490	0		|=			
ANR	2633603	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633604	Identifier	ao		2630490	0					
ANR	2633605	Identifier	o		2630490	1					
ANR	2633606	ShiftExpression	reg1 << 8		2630490	1		<<			
ANR	2633607	Identifier	reg1		2630490	0					
ANR	2633608	PrimaryExpression	8		2630490	1					
ANR	2633609	ExpressionStatement	ao -> o |= ( offset & 0x3e ) << 10	1843:3:38131:38161	2630490	5	True				
ANR	2633610	AssignmentExpression	ao -> o |= ( offset & 0x3e ) << 10		2630490	0		|=			
ANR	2633611	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633612	Identifier	ao		2630490	0					
ANR	2633613	Identifier	o		2630490	1					
ANR	2633614	ShiftExpression	( offset & 0x3e ) << 10		2630490	1		<<			
ANR	2633615	BitAndExpression	offset & 0x3e		2630490	0		&			
ANR	2633616	Identifier	offset		2630490	0					
ANR	2633617	PrimaryExpression	0x3e		2630490	1					
ANR	2633618	PrimaryExpression	10		2630490	1					
ANR	2633619	ExpressionStatement	ao -> o |= ( offset & 0x40 ) >> 5	1844:3:38166:38195	2630490	6	True				
ANR	2633620	AssignmentExpression	ao -> o |= ( offset & 0x40 ) >> 5		2630490	0		|=			
ANR	2633621	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633622	Identifier	ao		2630490	0					
ANR	2633623	Identifier	o		2630490	1					
ANR	2633624	ShiftExpression	( offset & 0x40 ) >> 5		2630490	1		>>			
ANR	2633625	BitAndExpression	offset & 0x40		2630490	0		&			
ANR	2633626	Identifier	offset		2630490	0					
ANR	2633627	PrimaryExpression	0x40		2630490	1					
ANR	2633628	PrimaryExpression	5		2630490	1					
ANR	2633629	ReturnStatement	return 2 ;	1845:3:38200:38208	2630490	7	True				
ANR	2633630	PrimaryExpression	2		2630490	0					
ANR	2633631	BreakStatement	break ;	1847:3:38225:38230	2630490	2	True				
ANR	2633632	Label	default :	1848:2:38234:38241	2630490	3	True				
ANR	2633633	Identifier	default		2630490	0					
ANR	2633634	ReturnStatement	return - 1 ;	1849:3:38246:38255	2630490	4	True				
ANR	2633635	UnaryOperationExpression	- 1		2630490	0					
ANR	2633636	UnaryOperator	-		2630490	0					
ANR	2633637	PrimaryExpression	1		2630490	1					
ANR	2633638	ElseStatement	else		2630490	0					
ANR	2633639	IfStatement	"if ( ( m = opmask ( ao -> op , ""cbz"" , 0 ) ) )"		2630490	0					
ANR	2633640	Condition	"m = opmask ( ao -> op , ""cbz"" , 0 )"	1852:5:38274:38306	2630490	0	True				
ANR	2633641	AssignmentExpression	"m = opmask ( ao -> op , ""cbz"" , 0 )"		2630490	0		=			
ANR	2633642	Identifier	m		2630490	0					
ANR	2633643	CallExpression	"opmask ( ao -> op , ""cbz"" , 0 )"		2630490	1					
ANR	2633644	Callee	opmask		2630490	0					
ANR	2633645	Identifier	opmask		2630490	0					
ANR	2633646	ArgumentList	ao -> op		2630490	1					
ANR	2633647	Argument	ao -> op		2630490	0					
ANR	2633648	PtrMemberAccess	ao -> op		2630490	0					
ANR	2633649	Identifier	ao		2630490	0					
ANR	2633650	Identifier	op		2630490	1					
ANR	2633651	Argument	"""cbz"""		2630490	1					
ANR	2633652	PrimaryExpression	"""cbz"""		2630490	0					
ANR	2633653	Argument	0		2630490	2					
ANR	2633654	PrimaryExpression	0		2630490	0					
ANR	2633655	CompoundStatement		561:2:12454:12488	2630490	1					
ANR	2633656	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1853:2:38313:38347	2630490	0	True				
ANR	2633657	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2633658	IdentifierDeclType	ut64		2630490	0					
ANR	2633659	Identifier	argt		2630490	1					
ANR	2633660	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2633661	Identifier	argt		2630490	0					
ANR	2633662	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2633663	Callee	thumb_selector		2630490	0					
ANR	2633664	Identifier	thumb_selector		2630490	0					
ANR	2633665	ArgumentList	ao -> a		2630490	1					
ANR	2633666	Argument	ao -> a		2630490	0					
ANR	2633667	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633668	Identifier	ao		2630490	0					
ANR	2633669	Identifier	a		2630490	1					
ANR	2633670	SwitchStatement	switch ( argt )		2630490	1					
ANR	2633671	Condition	argt	1854:10:38359:38362	2630490	0	True				
ANR	2633672	Identifier	argt		2630490	0					
ANR	2633673	CompoundStatement		562:16:12506:12506	2630490	1					
ANR	2633674	Label	case THUMB_REG_CONST :	1855:2:38369:38389	2630490	0	True				
ANR	2633675	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2633676	CompoundStatement		565:3:12570:12615	2630490	1					
ANR	2633677	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1856:3:38396:38424	2630490	0	True				
ANR	2633678	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2633679	IdentifierDeclType	ut8		2630490	0					
ANR	2633680	Identifier	reg1		2630490	1					
ANR	2633681	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2633682	Identifier	reg1		2630490	0					
ANR	2633683	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2633684	Callee	getreg		2630490	0					
ANR	2633685	Identifier	getreg		2630490	0					
ANR	2633686	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2633687	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2633688	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2633689	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633690	Identifier	ao		2630490	0					
ANR	2633691	Identifier	a		2630490	1					
ANR	2633692	PrimaryExpression	0		2630490	1					
ANR	2633693	IdentifierDeclStatement	"st32 offset = thumb_getoffset ( ao -> a [ 1 ] , off ) ;"	1857:3:38429:38474	2630490	1	True				
ANR	2633694	IdentifierDecl	"offset = thumb_getoffset ( ao -> a [ 1 ] , off )"		2630490	0					
ANR	2633695	IdentifierDeclType	st32		2630490	0					
ANR	2633696	Identifier	offset		2630490	1					
ANR	2633697	AssignmentExpression	"offset = thumb_getoffset ( ao -> a [ 1 ] , off )"		2630490	2		=			
ANR	2633698	Identifier	offset		2630490	0					
ANR	2633699	CallExpression	"thumb_getoffset ( ao -> a [ 1 ] , off )"		2630490	1					
ANR	2633700	Callee	thumb_getoffset		2630490	0					
ANR	2633701	Identifier	thumb_getoffset		2630490	0					
ANR	2633702	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2633703	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2633704	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2633705	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633706	Identifier	ao		2630490	0					
ANR	2633707	Identifier	a		2630490	1					
ANR	2633708	PrimaryExpression	1		2630490	1					
ANR	2633709	Argument	off		2630490	1					
ANR	2633710	Identifier	off		2630490	0					
ANR	2633711	IfStatement	if ( ( reg1 > 7 ) || ( offset > 127 ) || ( offset % 2 != 0 ) )		2630490	2					
ANR	2633712	Condition	( reg1 > 7 ) || ( offset > 127 ) || ( offset % 2 != 0 )	1858:7:38483:38531	2630490	0	True				
ANR	2633713	OrExpression	( reg1 > 7 ) || ( offset > 127 ) || ( offset % 2 != 0 )		2630490	0		||			
ANR	2633714	RelationalExpression	reg1 > 7		2630490	0		>			
ANR	2633715	Identifier	reg1		2630490	0					
ANR	2633716	PrimaryExpression	7		2630490	1					
ANR	2633717	OrExpression	( offset > 127 ) || ( offset % 2 != 0 )		2630490	1		||			
ANR	2633718	RelationalExpression	offset > 127		2630490	0		>			
ANR	2633719	Identifier	offset		2630490	0					
ANR	2633720	PrimaryExpression	127		2630490	1					
ANR	2633721	EqualityExpression	offset % 2 != 0		2630490	1		!=			
ANR	2633722	MultiplicativeExpression	offset % 2		2630490	0		%			
ANR	2633723	Identifier	offset		2630490	0					
ANR	2633724	PrimaryExpression	2		2630490	1					
ANR	2633725	PrimaryExpression	0		2630490	1					
ANR	2633726	CompoundStatement		566:58:12675:12675	2630490	1					
ANR	2633727	ReturnStatement	return - 1 ;	1859:4:38540:38549	2630490	0	True				
ANR	2633728	UnaryOperationExpression	- 1		2630490	0					
ANR	2633729	UnaryOperator	-		2630490	0					
ANR	2633730	PrimaryExpression	1		2630490	1					
ANR	2633731	ExpressionStatement	ao -> o = 0x00b1	1861:3:38559:38573	2630490	3	True				
ANR	2633732	AssignmentExpression	ao -> o = 0x00b1		2630490	0		=			
ANR	2633733	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633734	Identifier	ao		2630490	0					
ANR	2633735	Identifier	o		2630490	1					
ANR	2633736	PrimaryExpression	0x00b1		2630490	1					
ANR	2633737	ExpressionStatement	ao -> o |= reg1 << 8	1862:3:38578:38596	2630490	4	True				
ANR	2633738	AssignmentExpression	ao -> o |= reg1 << 8		2630490	0		|=			
ANR	2633739	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633740	Identifier	ao		2630490	0					
ANR	2633741	Identifier	o		2630490	1					
ANR	2633742	ShiftExpression	reg1 << 8		2630490	1		<<			
ANR	2633743	Identifier	reg1		2630490	0					
ANR	2633744	PrimaryExpression	8		2630490	1					
ANR	2633745	ExpressionStatement	ao -> o |= ( offset & 0x3e ) << 10	1863:3:38601:38631	2630490	5	True				
ANR	2633746	AssignmentExpression	ao -> o |= ( offset & 0x3e ) << 10		2630490	0		|=			
ANR	2633747	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633748	Identifier	ao		2630490	0					
ANR	2633749	Identifier	o		2630490	1					
ANR	2633750	ShiftExpression	( offset & 0x3e ) << 10		2630490	1		<<			
ANR	2633751	BitAndExpression	offset & 0x3e		2630490	0		&			
ANR	2633752	Identifier	offset		2630490	0					
ANR	2633753	PrimaryExpression	0x3e		2630490	1					
ANR	2633754	PrimaryExpression	10		2630490	1					
ANR	2633755	ExpressionStatement	ao -> o |= ( offset & 0x40 ) >> 5	1864:3:38636:38665	2630490	6	True				
ANR	2633756	AssignmentExpression	ao -> o |= ( offset & 0x40 ) >> 5		2630490	0		|=			
ANR	2633757	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633758	Identifier	ao		2630490	0					
ANR	2633759	Identifier	o		2630490	1					
ANR	2633760	ShiftExpression	( offset & 0x40 ) >> 5		2630490	1		>>			
ANR	2633761	BitAndExpression	offset & 0x40		2630490	0		&			
ANR	2633762	Identifier	offset		2630490	0					
ANR	2633763	PrimaryExpression	0x40		2630490	1					
ANR	2633764	PrimaryExpression	5		2630490	1					
ANR	2633765	ReturnStatement	return 2 ;	1865:3:38670:38678	2630490	7	True				
ANR	2633766	PrimaryExpression	2		2630490	0					
ANR	2633767	BreakStatement	break ;	1867:3:38695:38700	2630490	2	True				
ANR	2633768	Label	default :	1868:2:38704:38711	2630490	3	True				
ANR	2633769	Identifier	default		2630490	0					
ANR	2633770	ReturnStatement	return - 1 ;	1869:3:38716:38725	2630490	4	True				
ANR	2633771	UnaryOperationExpression	- 1		2630490	0					
ANR	2633772	UnaryOperator	-		2630490	0					
ANR	2633773	PrimaryExpression	1		2630490	1					
ANR	2633774	ElseStatement	else		2630490	0					
ANR	2633775	IfStatement	"if ( ( m = opmask ( ao -> op , ""cdp"" , TWO_BIT ) ) )"		2630490	0					
ANR	2633776	Condition	"m = opmask ( ao -> op , ""cdp"" , TWO_BIT )"	1872:5:38744:38782	2630490	0	True				
ANR	2633777	AssignmentExpression	"m = opmask ( ao -> op , ""cdp"" , TWO_BIT )"		2630490	0		=			
ANR	2633778	Identifier	m		2630490	0					
ANR	2633779	CallExpression	"opmask ( ao -> op , ""cdp"" , TWO_BIT )"		2630490	1					
ANR	2633780	Callee	opmask		2630490	0					
ANR	2633781	Identifier	opmask		2630490	0					
ANR	2633782	ArgumentList	ao -> op		2630490	1					
ANR	2633783	Argument	ao -> op		2630490	0					
ANR	2633784	PtrMemberAccess	ao -> op		2630490	0					
ANR	2633785	Identifier	ao		2630490	0					
ANR	2633786	Identifier	op		2630490	1					
ANR	2633787	Argument	"""cdp"""		2630490	1					
ANR	2633788	PrimaryExpression	"""cdp"""		2630490	0					
ANR	2633789	Argument	TWO_BIT		2630490	2					
ANR	2633790	Identifier	TWO_BIT		2630490	0					
ANR	2633791	CompoundStatement		581:2:12930:12964	2630490	1					
ANR	2633792	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1873:2:38789:38823	2630490	0	True				
ANR	2633793	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2633794	IdentifierDeclType	ut64		2630490	0					
ANR	2633795	Identifier	argt		2630490	1					
ANR	2633796	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2633797	Identifier	argt		2630490	0					
ANR	2633798	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2633799	Callee	thumb_selector		2630490	0					
ANR	2633800	Identifier	thumb_selector		2630490	0					
ANR	2633801	ArgumentList	ao -> a		2630490	1					
ANR	2633802	Argument	ao -> a		2630490	0					
ANR	2633803	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633804	Identifier	ao		2630490	0					
ANR	2633805	Identifier	a		2630490	1					
ANR	2633806	SwitchStatement	switch ( argt )		2630490	1					
ANR	2633807	Condition	argt	1874:10:38835:38838	2630490	0	True				
ANR	2633808	Identifier	argt		2630490	0					
ANR	2633809	CompoundStatement		582:16:12982:12982	2630490	1					
ANR	2633810	Label	case THUMB_COPROC_CONST_COREG_COREG_COREG :	1875:2:38845:38886	2630490	0	True				
ANR	2633811	Identifier	THUMB_COPROC_CONST_COREG_COREG_COREG		2630490	0					
ANR	2633812	CompoundStatement		583:45:13029:13029	2630490	1					
ANR	2633813	ExpressionStatement	"ao -> a [ 5 ] = ""0"""	1876:3:38893:38907	2630490	0	True				
ANR	2633814	AssignmentExpression	"ao -> a [ 5 ] = ""0"""		2630490	0		=			
ANR	2633815	ArrayIndexing	ao -> a [ 5 ]		2630490	0					
ANR	2633816	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633817	Identifier	ao		2630490	0					
ANR	2633818	Identifier	a		2630490	1					
ANR	2633819	PrimaryExpression	5		2630490	1					
ANR	2633820	PrimaryExpression	"""0"""		2630490	1					
ANR	2633821	Label	case THUMB_COPROC_CONST_COREG_COREG_COREG_CONST :	1879:2:38952:38999	2630490	2	True				
ANR	2633822	Identifier	THUMB_COPROC_CONST_COREG_COREG_COREG_CONST		2630490	0					
ANR	2633823	CompoundStatement		593:3:13337:13366	2630490	3					
ANR	2633824	IdentifierDeclStatement	ut32 coproc = getcoproc ( ao -> a [ 0 ] ) ;	1880:3:39006:39040	2630490	0	True				
ANR	2633825	IdentifierDecl	coproc = getcoproc ( ao -> a [ 0 ] )		2630490	0					
ANR	2633826	IdentifierDeclType	ut32		2630490	0					
ANR	2633827	Identifier	coproc		2630490	1					
ANR	2633828	AssignmentExpression	coproc = getcoproc ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2633829	Identifier	coproc		2630490	0					
ANR	2633830	CallExpression	getcoproc ( ao -> a [ 0 ] )		2630490	1					
ANR	2633831	Callee	getcoproc		2630490	0					
ANR	2633832	Identifier	getcoproc		2630490	0					
ANR	2633833	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2633834	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2633835	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2633836	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633837	Identifier	ao		2630490	0					
ANR	2633838	Identifier	a		2630490	1					
ANR	2633839	PrimaryExpression	0		2630490	1					
ANR	2633840	IdentifierDeclStatement	ut32 opc1 = getnum ( ao -> a [ 1 ] ) ;	1881:3:39045:39074	2630490	1	True				
ANR	2633841	IdentifierDecl	opc1 = getnum ( ao -> a [ 1 ] )		2630490	0					
ANR	2633842	IdentifierDeclType	ut32		2630490	0					
ANR	2633843	Identifier	opc1		2630490	1					
ANR	2633844	AssignmentExpression	opc1 = getnum ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2633845	Identifier	opc1		2630490	0					
ANR	2633846	CallExpression	getnum ( ao -> a [ 1 ] )		2630490	1					
ANR	2633847	Callee	getnum		2630490	0					
ANR	2633848	Identifier	getnum		2630490	0					
ANR	2633849	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2633850	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2633851	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2633852	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633853	Identifier	ao		2630490	0					
ANR	2633854	Identifier	a		2630490	1					
ANR	2633855	PrimaryExpression	1		2630490	1					
ANR	2633856	IdentifierDeclStatement	ut8 reg1 = getcoprocreg ( ao -> a [ 2 ] ) ;	1882:3:39079:39113	2630490	2	True				
ANR	2633857	IdentifierDecl	reg1 = getcoprocreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2633858	IdentifierDeclType	ut8		2630490	0					
ANR	2633859	Identifier	reg1		2630490	1					
ANR	2633860	AssignmentExpression	reg1 = getcoprocreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2633861	Identifier	reg1		2630490	0					
ANR	2633862	CallExpression	getcoprocreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2633863	Callee	getcoprocreg		2630490	0					
ANR	2633864	Identifier	getcoprocreg		2630490	0					
ANR	2633865	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2633866	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2633867	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2633868	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633869	Identifier	ao		2630490	0					
ANR	2633870	Identifier	a		2630490	1					
ANR	2633871	PrimaryExpression	2		2630490	1					
ANR	2633872	IdentifierDeclStatement	ut8 reg2 = getcoprocreg ( ao -> a [ 3 ] ) ;	1883:3:39118:39152	2630490	3	True				
ANR	2633873	IdentifierDecl	reg2 = getcoprocreg ( ao -> a [ 3 ] )		2630490	0					
ANR	2633874	IdentifierDeclType	ut8		2630490	0					
ANR	2633875	Identifier	reg2		2630490	1					
ANR	2633876	AssignmentExpression	reg2 = getcoprocreg ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2633877	Identifier	reg2		2630490	0					
ANR	2633878	CallExpression	getcoprocreg ( ao -> a [ 3 ] )		2630490	1					
ANR	2633879	Callee	getcoprocreg		2630490	0					
ANR	2633880	Identifier	getcoprocreg		2630490	0					
ANR	2633881	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2633882	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2633883	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2633884	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633885	Identifier	ao		2630490	0					
ANR	2633886	Identifier	a		2630490	1					
ANR	2633887	PrimaryExpression	3		2630490	1					
ANR	2633888	IdentifierDeclStatement	ut8 reg3 = getcoprocreg ( ao -> a [ 4 ] ) ;	1884:3:39157:39191	2630490	4	True				
ANR	2633889	IdentifierDecl	reg3 = getcoprocreg ( ao -> a [ 4 ] )		2630490	0					
ANR	2633890	IdentifierDeclType	ut8		2630490	0					
ANR	2633891	Identifier	reg3		2630490	1					
ANR	2633892	AssignmentExpression	reg3 = getcoprocreg ( ao -> a [ 4 ] )		2630490	2		=			
ANR	2633893	Identifier	reg3		2630490	0					
ANR	2633894	CallExpression	getcoprocreg ( ao -> a [ 4 ] )		2630490	1					
ANR	2633895	Callee	getcoprocreg		2630490	0					
ANR	2633896	Identifier	getcoprocreg		2630490	0					
ANR	2633897	ArgumentList	ao -> a [ 4 ]		2630490	1					
ANR	2633898	Argument	ao -> a [ 4 ]		2630490	0					
ANR	2633899	ArrayIndexing	ao -> a [ 4 ]		2630490	0					
ANR	2633900	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633901	Identifier	ao		2630490	0					
ANR	2633902	Identifier	a		2630490	1					
ANR	2633903	PrimaryExpression	4		2630490	1					
ANR	2633904	IdentifierDeclStatement	ut32 opc2 = getnum ( ao -> a [ 5 ] ) ;	1885:3:39196:39225	2630490	5	True				
ANR	2633905	IdentifierDecl	opc2 = getnum ( ao -> a [ 5 ] )		2630490	0					
ANR	2633906	IdentifierDeclType	ut32		2630490	0					
ANR	2633907	Identifier	opc2		2630490	1					
ANR	2633908	AssignmentExpression	opc2 = getnum ( ao -> a [ 5 ] )		2630490	2		=			
ANR	2633909	Identifier	opc2		2630490	0					
ANR	2633910	CallExpression	getnum ( ao -> a [ 5 ] )		2630490	1					
ANR	2633911	Callee	getnum		2630490	0					
ANR	2633912	Identifier	getnum		2630490	0					
ANR	2633913	ArgumentList	ao -> a [ 5 ]		2630490	1					
ANR	2633914	Argument	ao -> a [ 5 ]		2630490	0					
ANR	2633915	ArrayIndexing	ao -> a [ 5 ]		2630490	0					
ANR	2633916	PtrMemberAccess	ao -> a		2630490	0					
ANR	2633917	Identifier	ao		2630490	0					
ANR	2633918	Identifier	a		2630490	1					
ANR	2633919	PrimaryExpression	5		2630490	1					
ANR	2633920	IfStatement	if ( ( coproc > 15 ) || ( opc1 > 15 ) || ( opc2 > 7 ) )		2630490	6					
ANR	2633921	Condition	( coproc > 15 ) || ( opc1 > 15 ) || ( opc2 > 7 )	1886:14:39241:39282	2630490	0	True				
ANR	2633922	OrExpression	( coproc > 15 ) || ( opc1 > 15 ) || ( opc2 > 7 )		2630490	0		||			
ANR	2633923	RelationalExpression	coproc > 15		2630490	0		>			
ANR	2633924	Identifier	coproc		2630490	0					
ANR	2633925	PrimaryExpression	15		2630490	1					
ANR	2633926	OrExpression	( opc1 > 15 ) || ( opc2 > 7 )		2630490	1		||			
ANR	2633927	RelationalExpression	opc1 > 15		2630490	0		>			
ANR	2633928	Identifier	opc1		2630490	0					
ANR	2633929	PrimaryExpression	15		2630490	1					
ANR	2633930	RelationalExpression	opc2 > 7		2630490	1		>			
ANR	2633931	Identifier	opc2		2630490	0					
ANR	2633932	PrimaryExpression	7		2630490	1					
ANR	2633933	CompoundStatement		594:58:13426:13426	2630490	1					
ANR	2633934	ReturnStatement	return - 1 ;	1887:4:39291:39300	2630490	0	True				
ANR	2633935	UnaryOperationExpression	- 1		2630490	0					
ANR	2633936	UnaryOperator	-		2630490	0					
ANR	2633937	PrimaryExpression	1		2630490	1					
ANR	2633938	ExpressionStatement	ao -> o = 0x00ee0000	1889:3:39310:39328	2630490	7	True				
ANR	2633939	AssignmentExpression	ao -> o = 0x00ee0000		2630490	0		=			
ANR	2633940	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633941	Identifier	ao		2630490	0					
ANR	2633942	Identifier	o		2630490	1					
ANR	2633943	PrimaryExpression	0x00ee0000		2630490	1					
ANR	2633944	IfStatement	if ( m & TWO_BIT )		2630490	8					
ANR	2633945	Condition	m & TWO_BIT	1890:7:39337:39347	2630490	0	True				
ANR	2633946	BitAndExpression	m & TWO_BIT		2630490	0		&			
ANR	2633947	Identifier	m		2630490	0					
ANR	2633948	Identifier	TWO_BIT		2630490	1					
ANR	2633949	CompoundStatement		598:20:13491:13491	2630490	1					
ANR	2633950	ExpressionStatement	ao -> o |= 1 << 20	1891:4:39356:39372	2630490	0	True				
ANR	2633951	AssignmentExpression	ao -> o |= 1 << 20		2630490	0		|=			
ANR	2633952	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633953	Identifier	ao		2630490	0					
ANR	2633954	Identifier	o		2630490	1					
ANR	2633955	ShiftExpression	1 << 20		2630490	1		<<			
ANR	2633956	PrimaryExpression	1		2630490	0					
ANR	2633957	PrimaryExpression	20		2630490	1					
ANR	2633958	ExpressionStatement	ao -> o |= coproc	1893:3:39382:39397	2630490	9	True				
ANR	2633959	AssignmentExpression	ao -> o |= coproc		2630490	0		|=			
ANR	2633960	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633961	Identifier	ao		2630490	0					
ANR	2633962	Identifier	o		2630490	1					
ANR	2633963	Identifier	coproc		2630490	1					
ANR	2633964	ExpressionStatement	ao -> o |= opc1 << 28	1894:3:39402:39421	2630490	10	True				
ANR	2633965	AssignmentExpression	ao -> o |= opc1 << 28		2630490	0		|=			
ANR	2633966	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633967	Identifier	ao		2630490	0					
ANR	2633968	Identifier	o		2630490	1					
ANR	2633969	ShiftExpression	opc1 << 28		2630490	1		<<			
ANR	2633970	Identifier	opc1		2630490	0					
ANR	2633971	PrimaryExpression	28		2630490	1					
ANR	2633972	ExpressionStatement	ao -> o |= reg1 << 4	1895:3:39426:39444	2630490	11	True				
ANR	2633973	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2633974	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633975	Identifier	ao		2630490	0					
ANR	2633976	Identifier	o		2630490	1					
ANR	2633977	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2633978	Identifier	reg1		2630490	0					
ANR	2633979	PrimaryExpression	4		2630490	1					
ANR	2633980	ExpressionStatement	ao -> o |= reg2 << 24	1896:3:39449:39468	2630490	12	True				
ANR	2633981	AssignmentExpression	ao -> o |= reg2 << 24		2630490	0		|=			
ANR	2633982	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633983	Identifier	ao		2630490	0					
ANR	2633984	Identifier	o		2630490	1					
ANR	2633985	ShiftExpression	reg2 << 24		2630490	1		<<			
ANR	2633986	Identifier	reg2		2630490	0					
ANR	2633987	PrimaryExpression	24		2630490	1					
ANR	2633988	ExpressionStatement	ao -> o |= reg3 << 8	1897:3:39473:39491	2630490	13	True				
ANR	2633989	AssignmentExpression	ao -> o |= reg3 << 8		2630490	0		|=			
ANR	2633990	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633991	Identifier	ao		2630490	0					
ANR	2633992	Identifier	o		2630490	1					
ANR	2633993	ShiftExpression	reg3 << 8		2630490	1		<<			
ANR	2633994	Identifier	reg3		2630490	0					
ANR	2633995	PrimaryExpression	8		2630490	1					
ANR	2633996	ExpressionStatement	ao -> o |= opc2 << 13	1898:3:39496:39515	2630490	14	True				
ANR	2633997	AssignmentExpression	ao -> o |= opc2 << 13		2630490	0		|=			
ANR	2633998	PtrMemberAccess	ao -> o		2630490	0					
ANR	2633999	Identifier	ao		2630490	0					
ANR	2634000	Identifier	o		2630490	1					
ANR	2634001	ShiftExpression	opc2 << 13		2630490	1		<<			
ANR	2634002	Identifier	opc2		2630490	0					
ANR	2634003	PrimaryExpression	13		2630490	1					
ANR	2634004	ReturnStatement	return 4 ;	1899:3:39520:39528	2630490	15	True				
ANR	2634005	PrimaryExpression	4		2630490	0					
ANR	2634006	BreakStatement	break ;	1901:3:39545:39550	2630490	4	True				
ANR	2634007	Label	default :	1902:2:39554:39561	2630490	5	True				
ANR	2634008	Identifier	default		2630490	0					
ANR	2634009	ReturnStatement	return - 1 ;	1903:3:39566:39575	2630490	6	True				
ANR	2634010	UnaryOperationExpression	- 1		2630490	0					
ANR	2634011	UnaryOperator	-		2630490	0					
ANR	2634012	PrimaryExpression	1		2630490	1					
ANR	2634013	ElseStatement	else		2630490	0					
ANR	2634014	IfStatement	"if ( ( m = opmask ( ao -> op , ""clrex"" , 0 ) ) )"		2630490	0					
ANR	2634015	Condition	"m = opmask ( ao -> op , ""clrex"" , 0 )"	1906:5:39596:39630	2630490	0	True				
ANR	2634016	AssignmentExpression	"m = opmask ( ao -> op , ""clrex"" , 0 )"		2630490	0		=			
ANR	2634017	Identifier	m		2630490	0					
ANR	2634018	CallExpression	"opmask ( ao -> op , ""clrex"" , 0 )"		2630490	1					
ANR	2634019	Callee	opmask		2630490	0					
ANR	2634020	Identifier	opmask		2630490	0					
ANR	2634021	ArgumentList	ao -> op		2630490	1					
ANR	2634022	Argument	ao -> op		2630490	0					
ANR	2634023	PtrMemberAccess	ao -> op		2630490	0					
ANR	2634024	Identifier	ao		2630490	0					
ANR	2634025	Identifier	op		2630490	1					
ANR	2634026	Argument	"""clrex"""		2630490	1					
ANR	2634027	PrimaryExpression	"""clrex"""		2630490	0					
ANR	2634028	Argument	0		2630490	2					
ANR	2634029	PrimaryExpression	0		2630490	0					
ANR	2634030	CompoundStatement		615:2:13778:13812	2630490	1					
ANR	2634031	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1907:2:39637:39671	2630490	0	True				
ANR	2634032	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2634033	IdentifierDeclType	ut64		2630490	0					
ANR	2634034	Identifier	argt		2630490	1					
ANR	2634035	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2634036	Identifier	argt		2630490	0					
ANR	2634037	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2634038	Callee	thumb_selector		2630490	0					
ANR	2634039	Identifier	thumb_selector		2630490	0					
ANR	2634040	ArgumentList	ao -> a		2630490	1					
ANR	2634041	Argument	ao -> a		2630490	0					
ANR	2634042	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634043	Identifier	ao		2630490	0					
ANR	2634044	Identifier	a		2630490	1					
ANR	2634045	SwitchStatement	switch ( argt )		2630490	1					
ANR	2634046	Condition	argt	1908:10:39683:39686	2630490	0	True				
ANR	2634047	Identifier	argt		2630490	0					
ANR	2634048	CompoundStatement		616:16:13830:13830	2630490	1					
ANR	2634049	Label	case THUMB_NONE :	1909:2:39693:39708	2630490	0	True				
ANR	2634050	Identifier	THUMB_NONE		2630490	0					
ANR	2634051	CompoundStatement		617:19:13851:13851	2630490	1					
ANR	2634052	ExpressionStatement	ao -> o = 0xbff32f8f	1910:3:39715:39733	2630490	0	True				
ANR	2634053	AssignmentExpression	ao -> o = 0xbff32f8f		2630490	0		=			
ANR	2634054	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634055	Identifier	ao		2630490	0					
ANR	2634056	Identifier	o		2630490	1					
ANR	2634057	PrimaryExpression	0xbff32f8f		2630490	1					
ANR	2634058	ReturnStatement	return 4 ;	1911:3:39738:39746	2630490	1	True				
ANR	2634059	PrimaryExpression	4		2630490	0					
ANR	2634060	BreakStatement	break ;	1913:3:39763:39768	2630490	2	True				
ANR	2634061	Label	default :	1914:2:39772:39779	2630490	3	True				
ANR	2634062	Identifier	default		2630490	0					
ANR	2634063	ReturnStatement	return - 1 ;	1915:3:39784:39793	2630490	4	True				
ANR	2634064	UnaryOperationExpression	- 1		2630490	0					
ANR	2634065	UnaryOperator	-		2630490	0					
ANR	2634066	PrimaryExpression	1		2630490	1					
ANR	2634067	ElseStatement	else		2630490	0					
ANR	2634068	IfStatement	"if ( ( m = opmask ( ao -> op , ""clz"" , 0 ) ) )"		2630490	0					
ANR	2634069	Condition	"m = opmask ( ao -> op , ""clz"" , 0 )"	1918:5:39812:39844	2630490	0	True				
ANR	2634070	AssignmentExpression	"m = opmask ( ao -> op , ""clz"" , 0 )"		2630490	0		=			
ANR	2634071	Identifier	m		2630490	0					
ANR	2634072	CallExpression	"opmask ( ao -> op , ""clz"" , 0 )"		2630490	1					
ANR	2634073	Callee	opmask		2630490	0					
ANR	2634074	Identifier	opmask		2630490	0					
ANR	2634075	ArgumentList	ao -> op		2630490	1					
ANR	2634076	Argument	ao -> op		2630490	0					
ANR	2634077	PtrMemberAccess	ao -> op		2630490	0					
ANR	2634078	Identifier	ao		2630490	0					
ANR	2634079	Identifier	op		2630490	1					
ANR	2634080	Argument	"""clz"""		2630490	1					
ANR	2634081	PrimaryExpression	"""clz"""		2630490	0					
ANR	2634082	Argument	0		2630490	2					
ANR	2634083	PrimaryExpression	0		2630490	0					
ANR	2634084	CompoundStatement		627:2:13992:14026	2630490	1					
ANR	2634085	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1919:2:39851:39885	2630490	0	True				
ANR	2634086	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2634087	IdentifierDeclType	ut64		2630490	0					
ANR	2634088	Identifier	argt		2630490	1					
ANR	2634089	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2634090	Identifier	argt		2630490	0					
ANR	2634091	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2634092	Callee	thumb_selector		2630490	0					
ANR	2634093	Identifier	thumb_selector		2630490	0					
ANR	2634094	ArgumentList	ao -> a		2630490	1					
ANR	2634095	Argument	ao -> a		2630490	0					
ANR	2634096	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634097	Identifier	ao		2630490	0					
ANR	2634098	Identifier	a		2630490	1					
ANR	2634099	SwitchStatement	switch ( argt )		2630490	1					
ANR	2634100	Condition	argt	1920:10:39897:39900	2630490	0	True				
ANR	2634101	Identifier	argt		2630490	0					
ANR	2634102	CompoundStatement		628:16:14044:14044	2630490	1					
ANR	2634103	Label	case THUMB_REG_REG :	1921:2:39907:39925	2630490	0	True				
ANR	2634104	Identifier	THUMB_REG_REG		2630490	0					
ANR	2634105	CompoundStatement		629:22:14068:14068	2630490	1					
ANR	2634106	ExpressionStatement	ao -> o = 0xb0fa80f0	1922:3:39932:39950	2630490	0	True				
ANR	2634107	AssignmentExpression	ao -> o = 0xb0fa80f0		2630490	0		=			
ANR	2634108	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634109	Identifier	ao		2630490	0					
ANR	2634110	Identifier	o		2630490	1					
ANR	2634111	PrimaryExpression	0xb0fa80f0		2630490	1					
ANR	2634112	ExpressionStatement	ao -> a [ 2 ] = ao -> a [ 1 ]	1923:3:39955:39974	2630490	1	True				
ANR	2634113	AssignmentExpression	ao -> a [ 2 ] = ao -> a [ 1 ]		2630490	0		=			
ANR	2634114	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2634115	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634116	Identifier	ao		2630490	0					
ANR	2634117	Identifier	a		2630490	1					
ANR	2634118	PrimaryExpression	2		2630490	1					
ANR	2634119	ArrayIndexing	ao -> a [ 1 ]		2630490	1					
ANR	2634120	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634121	Identifier	ao		2630490	0					
ANR	2634122	Identifier	a		2630490	1					
ANR	2634123	PrimaryExpression	1		2630490	1					
ANR	2634124	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	1924:3:39979:40015	2630490	2	True				
ANR	2634125	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2634126	Callee	std_32bit_3reg		2630490	0					
ANR	2634127	Identifier	std_32bit_3reg		2630490	0					
ANR	2634128	ArgumentList	ao		2630490	1					
ANR	2634129	Argument	ao		2630490	0					
ANR	2634130	Identifier	ao		2630490	0					
ANR	2634131	Argument	m		2630490	1					
ANR	2634132	Identifier	m		2630490	0					
ANR	2634133	Argument	false		2630490	2					
ANR	2634134	Identifier	false		2630490	0					
ANR	2634135	BreakStatement	break ;	1926:3:40032:40037	2630490	2	True				
ANR	2634136	Label	default :	1927:2:40041:40048	2630490	3	True				
ANR	2634137	Identifier	default		2630490	0					
ANR	2634138	ReturnStatement	return - 1 ;	1928:3:40053:40062	2630490	4	True				
ANR	2634139	UnaryOperationExpression	- 1		2630490	0					
ANR	2634140	UnaryOperator	-		2630490	0					
ANR	2634141	PrimaryExpression	1		2630490	1					
ANR	2634142	ElseStatement	else		2630490	0					
ANR	2634143	IfStatement	"if ( ( m = opmask ( ao -> op , ""cmn"" , 0 ) ) )"		2630490	0					
ANR	2634144	Condition	"m = opmask ( ao -> op , ""cmn"" , 0 )"	1931:5:40081:40113	2630490	0	True				
ANR	2634145	AssignmentExpression	"m = opmask ( ao -> op , ""cmn"" , 0 )"		2630490	0		=			
ANR	2634146	Identifier	m		2630490	0					
ANR	2634147	CallExpression	"opmask ( ao -> op , ""cmn"" , 0 )"		2630490	1					
ANR	2634148	Callee	opmask		2630490	0					
ANR	2634149	Identifier	opmask		2630490	0					
ANR	2634150	ArgumentList	ao -> op		2630490	1					
ANR	2634151	Argument	ao -> op		2630490	0					
ANR	2634152	PtrMemberAccess	ao -> op		2630490	0					
ANR	2634153	Identifier	ao		2630490	0					
ANR	2634154	Identifier	op		2630490	1					
ANR	2634155	Argument	"""cmn"""		2630490	1					
ANR	2634156	PrimaryExpression	"""cmn"""		2630490	0					
ANR	2634157	Argument	0		2630490	2					
ANR	2634158	PrimaryExpression	0		2630490	0					
ANR	2634159	CompoundStatement		640:2:14261:14295	2630490	1					
ANR	2634160	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1932:2:40120:40154	2630490	0	True				
ANR	2634161	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2634162	IdentifierDeclType	ut64		2630490	0					
ANR	2634163	Identifier	argt		2630490	1					
ANR	2634164	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2634165	Identifier	argt		2630490	0					
ANR	2634166	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2634167	Callee	thumb_selector		2630490	0					
ANR	2634168	Identifier	thumb_selector		2630490	0					
ANR	2634169	ArgumentList	ao -> a		2630490	1					
ANR	2634170	Argument	ao -> a		2630490	0					
ANR	2634171	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634172	Identifier	ao		2630490	0					
ANR	2634173	Identifier	a		2630490	1					
ANR	2634174	SwitchStatement	switch ( argt )		2630490	1					
ANR	2634175	Condition	argt	1933:10:40166:40169	2630490	0	True				
ANR	2634176	Identifier	argt		2630490	0					
ANR	2634177	CompoundStatement		641:16:14313:14313	2630490	1					
ANR	2634178	Label	case THUMB_REG_CONST :	1934:2:40176:40196	2630490	0	True				
ANR	2634179	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2634180	CompoundStatement		644:3:14377:14411	2630490	1					
ANR	2634181	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1935:3:40203:40231	2630490	0	True				
ANR	2634182	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2634183	IdentifierDeclType	ut8		2630490	0					
ANR	2634184	Identifier	reg1		2630490	1					
ANR	2634185	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2634186	Identifier	reg1		2630490	0					
ANR	2634187	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2634188	Callee	getreg		2630490	0					
ANR	2634189	Identifier	getreg		2630490	0					
ANR	2634190	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2634191	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2634192	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2634193	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634194	Identifier	ao		2630490	0					
ANR	2634195	Identifier	a		2630490	1					
ANR	2634196	PrimaryExpression	0		2630490	1					
ANR	2634197	IdentifierDeclStatement	ut32 num = getthimmed12 ( ao -> a [ 1 ] ) ;	1936:3:40236:40270	2630490	1	True				
ANR	2634198	IdentifierDecl	num = getthimmed12 ( ao -> a [ 1 ] )		2630490	0					
ANR	2634199	IdentifierDeclType	ut32		2630490	0					
ANR	2634200	Identifier	num		2630490	1					
ANR	2634201	AssignmentExpression	num = getthimmed12 ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2634202	Identifier	num		2630490	0					
ANR	2634203	CallExpression	getthimmed12 ( ao -> a [ 1 ] )		2630490	1					
ANR	2634204	Callee	getthimmed12		2630490	0					
ANR	2634205	Identifier	getthimmed12		2630490	0					
ANR	2634206	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2634207	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2634208	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2634209	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634210	Identifier	ao		2630490	0					
ANR	2634211	Identifier	a		2630490	1					
ANR	2634212	PrimaryExpression	1		2630490	1					
ANR	2634213	ExpressionStatement	ao -> o = 0x10f1000f	1937:3:40275:40293	2630490	2	True				
ANR	2634214	AssignmentExpression	ao -> o = 0x10f1000f		2630490	0		=			
ANR	2634215	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634216	Identifier	ao		2630490	0					
ANR	2634217	Identifier	o		2630490	1					
ANR	2634218	PrimaryExpression	0x10f1000f		2630490	1					
ANR	2634219	ExpressionStatement	ao -> o |= reg1 << 24	1938:3:40298:40317	2630490	3	True				
ANR	2634220	AssignmentExpression	ao -> o |= reg1 << 24		2630490	0		|=			
ANR	2634221	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634222	Identifier	ao		2630490	0					
ANR	2634223	Identifier	o		2630490	1					
ANR	2634224	ShiftExpression	reg1 << 24		2630490	1		<<			
ANR	2634225	Identifier	reg1		2630490	0					
ANR	2634226	PrimaryExpression	24		2630490	1					
ANR	2634227	ExpressionStatement	ao -> o |= num	1939:3:40322:40334	2630490	4	True				
ANR	2634228	AssignmentExpression	ao -> o |= num		2630490	0		|=			
ANR	2634229	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634230	Identifier	ao		2630490	0					
ANR	2634231	Identifier	o		2630490	1					
ANR	2634232	Identifier	num		2630490	1					
ANR	2634233	ReturnStatement	return 4 ;	1940:3:40339:40347	2630490	5	True				
ANR	2634234	PrimaryExpression	4		2630490	0					
ANR	2634235	BreakStatement	break ;	1942:3:40364:40369	2630490	2	True				
ANR	2634236	Label	case THUMB_REG_REG :	1943:2:40373:40391	2630490	3	True				
ANR	2634237	Identifier	THUMB_REG_REG		2630490	0					
ANR	2634238	CompoundStatement		651:22:14534:14534	2630490	4					
ANR	2634239	ExpressionStatement	ao -> o = 0xc042	1944:3:40398:40412	2630490	0	True				
ANR	2634240	AssignmentExpression	ao -> o = 0xc042		2630490	0		=			
ANR	2634241	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634242	Identifier	ao		2630490	0					
ANR	2634243	Identifier	o		2630490	1					
ANR	2634244	PrimaryExpression	0xc042		2630490	1					
ANR	2634245	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	1					
ANR	2634246	Condition	"std_16bit_2reg ( ao , m )"	1945:7:40421:40442	2630490	0	True				
ANR	2634247	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2634248	Callee	std_16bit_2reg		2630490	0					
ANR	2634249	Identifier	std_16bit_2reg		2630490	0					
ANR	2634250	ArgumentList	ao		2630490	1					
ANR	2634251	Argument	ao		2630490	0					
ANR	2634252	Identifier	ao		2630490	0					
ANR	2634253	Argument	m		2630490	1					
ANR	2634254	Identifier	m		2630490	0					
ANR	2634255	CompoundStatement		653:31:14586:14586	2630490	1					
ANR	2634256	ReturnStatement	return 2 ;	1946:4:40451:40459	2630490	0	True				
ANR	2634257	PrimaryExpression	2		2630490	0					
ANR	2634258	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 0"""	1948:3:40469:40487	2630490	2	True				
ANR	2634259	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 0"""		2630490	0		=			
ANR	2634260	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2634261	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634262	Identifier	ao		2630490	0					
ANR	2634263	Identifier	a		2630490	1					
ANR	2634264	PrimaryExpression	2		2630490	1					
ANR	2634265	PrimaryExpression	"""lsl 0"""		2630490	1					
ANR	2634266	Label	case THUMB_REG_REG_SHIFT :	1951:2:40533:40557	2630490	5	True				
ANR	2634267	Identifier	THUMB_REG_REG_SHIFT		2630490	0					
ANR	2634268	CompoundStatement		659:28:14700:14700	2630490	6					
ANR	2634269	ExpressionStatement	ao -> o = 0x10eb000f	1952:3:40564:40582	2630490	0	True				
ANR	2634270	AssignmentExpression	ao -> o = 0x10eb000f		2630490	0		=			
ANR	2634271	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634272	Identifier	ao		2630490	0					
ANR	2634273	Identifier	o		2630490	1					
ANR	2634274	PrimaryExpression	0x10eb000f		2630490	1					
ANR	2634275	ReturnStatement	"return std_32bit_2reg ( ao , m , true ) ;"	1953:3:40587:40622	2630490	1	True				
ANR	2634276	CallExpression	"std_32bit_2reg ( ao , m , true )"		2630490	0					
ANR	2634277	Callee	std_32bit_2reg		2630490	0					
ANR	2634278	Identifier	std_32bit_2reg		2630490	0					
ANR	2634279	ArgumentList	ao		2630490	1					
ANR	2634280	Argument	ao		2630490	0					
ANR	2634281	Identifier	ao		2630490	0					
ANR	2634282	Argument	m		2630490	1					
ANR	2634283	Identifier	m		2630490	0					
ANR	2634284	Argument	true		2630490	2					
ANR	2634285	Identifier	true		2630490	0					
ANR	2634286	BreakStatement	break ;	1955:3:40639:40644	2630490	7	True				
ANR	2634287	Label	default :	1956:2:40648:40655	2630490	8	True				
ANR	2634288	Identifier	default		2630490	0					
ANR	2634289	ReturnStatement	return - 1 ;	1957:3:40660:40669	2630490	9	True				
ANR	2634290	UnaryOperationExpression	- 1		2630490	0					
ANR	2634291	UnaryOperator	-		2630490	0					
ANR	2634292	PrimaryExpression	1		2630490	1					
ANR	2634293	ElseStatement	else		2630490	0					
ANR	2634294	IfStatement	"if ( ( m = opmask ( ao -> op , ""cmp"" , 0 ) ) )"		2630490	0					
ANR	2634295	Condition	"m = opmask ( ao -> op , ""cmp"" , 0 )"	1960:5:40688:40720	2630490	0	True				
ANR	2634296	AssignmentExpression	"m = opmask ( ao -> op , ""cmp"" , 0 )"		2630490	0		=			
ANR	2634297	Identifier	m		2630490	0					
ANR	2634298	CallExpression	"opmask ( ao -> op , ""cmp"" , 0 )"		2630490	1					
ANR	2634299	Callee	opmask		2630490	0					
ANR	2634300	Identifier	opmask		2630490	0					
ANR	2634301	ArgumentList	ao -> op		2630490	1					
ANR	2634302	Argument	ao -> op		2630490	0					
ANR	2634303	PtrMemberAccess	ao -> op		2630490	0					
ANR	2634304	Identifier	ao		2630490	0					
ANR	2634305	Identifier	op		2630490	1					
ANR	2634306	Argument	"""cmp"""		2630490	1					
ANR	2634307	PrimaryExpression	"""cmp"""		2630490	0					
ANR	2634308	Argument	0		2630490	2					
ANR	2634309	PrimaryExpression	0		2630490	0					
ANR	2634310	CompoundStatement		669:2:14868:14902	2630490	1					
ANR	2634311	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	1961:2:40727:40761	2630490	0	True				
ANR	2634312	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2634313	IdentifierDeclType	ut64		2630490	0					
ANR	2634314	Identifier	argt		2630490	1					
ANR	2634315	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2634316	Identifier	argt		2630490	0					
ANR	2634317	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2634318	Callee	thumb_selector		2630490	0					
ANR	2634319	Identifier	thumb_selector		2630490	0					
ANR	2634320	ArgumentList	ao -> a		2630490	1					
ANR	2634321	Argument	ao -> a		2630490	0					
ANR	2634322	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634323	Identifier	ao		2630490	0					
ANR	2634324	Identifier	a		2630490	1					
ANR	2634325	SwitchStatement	switch ( argt )		2630490	1					
ANR	2634326	Condition	argt	1962:10:40773:40776	2630490	0	True				
ANR	2634327	Identifier	argt		2630490	0					
ANR	2634328	CompoundStatement		670:16:14920:14920	2630490	1					
ANR	2634329	Label	case THUMB_REG_CONST :	1963:2:40783:40803	2630490	0	True				
ANR	2634330	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2634331	CompoundStatement		673:3:14984:15012	2630490	1					
ANR	2634332	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1964:3:40810:40838	2630490	0	True				
ANR	2634333	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2634334	IdentifierDeclType	ut8		2630490	0					
ANR	2634335	Identifier	reg1		2630490	1					
ANR	2634336	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2634337	Identifier	reg1		2630490	0					
ANR	2634338	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2634339	Callee	getreg		2630490	0					
ANR	2634340	Identifier	getreg		2630490	0					
ANR	2634341	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2634342	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2634343	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2634344	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634345	Identifier	ao		2630490	0					
ANR	2634346	Identifier	a		2630490	1					
ANR	2634347	PrimaryExpression	0		2630490	1					
ANR	2634348	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 1 ] ) ;	1965:3:40843:40871	2630490	1	True				
ANR	2634349	IdentifierDecl	num = getnum ( ao -> a [ 1 ] )		2630490	0					
ANR	2634350	IdentifierDeclType	ut32		2630490	0					
ANR	2634351	Identifier	num		2630490	1					
ANR	2634352	AssignmentExpression	num = getnum ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2634353	Identifier	num		2630490	0					
ANR	2634354	CallExpression	getnum ( ao -> a [ 1 ] )		2630490	1					
ANR	2634355	Callee	getnum		2630490	0					
ANR	2634356	Identifier	getnum		2630490	0					
ANR	2634357	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2634358	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2634359	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2634360	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634361	Identifier	ao		2630490	0					
ANR	2634362	Identifier	a		2630490	1					
ANR	2634363	PrimaryExpression	1		2630490	1					
ANR	2634364	IfStatement	if ( ( num < 256 ) && ( ! ( m & DOTW_BIT ) ) )		2630490	2					
ANR	2634365	Condition	( num < 256 ) && ( ! ( m & DOTW_BIT ) )	1966:7:40880:40911	2630490	0	True				
ANR	2634366	AndExpression	( num < 256 ) && ( ! ( m & DOTW_BIT ) )		2630490	0		&&			
ANR	2634367	RelationalExpression	num < 256		2630490	0		<			
ANR	2634368	Identifier	num		2630490	0					
ANR	2634369	PrimaryExpression	256		2630490	1					
ANR	2634370	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	1					
ANR	2634371	UnaryOperator	!		2630490	0					
ANR	2634372	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2634373	Identifier	m		2630490	0					
ANR	2634374	Identifier	DOTW_BIT		2630490	1					
ANR	2634375	CompoundStatement		674:41:15055:15055	2630490	1					
ANR	2634376	ExpressionStatement	ao -> o = 0x0028	1967:4:40920:40934	2630490	0	True				
ANR	2634377	AssignmentExpression	ao -> o = 0x0028		2630490	0		=			
ANR	2634378	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634379	Identifier	ao		2630490	0					
ANR	2634380	Identifier	o		2630490	1					
ANR	2634381	PrimaryExpression	0x0028		2630490	1					
ANR	2634382	ExpressionStatement	ao -> o |= reg1	1968:4:40940:40953	2630490	1	True				
ANR	2634383	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2634384	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634385	Identifier	ao		2630490	0					
ANR	2634386	Identifier	o		2630490	1					
ANR	2634387	Identifier	reg1		2630490	1					
ANR	2634388	ExpressionStatement	ao -> o |= num << 8	1969:4:40959:40976	2630490	2	True				
ANR	2634389	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2634390	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634391	Identifier	ao		2630490	0					
ANR	2634392	Identifier	o		2630490	1					
ANR	2634393	ShiftExpression	num << 8		2630490	1		<<			
ANR	2634394	Identifier	num		2630490	0					
ANR	2634395	PrimaryExpression	8		2630490	1					
ANR	2634396	ReturnStatement	return 2 ;	1970:4:40982:40990	2630490	3	True				
ANR	2634397	PrimaryExpression	2		2630490	0					
ANR	2634398	ExpressionStatement	num = getthimmed12 ( ao -> a [ 1 ] )	1972:3:41000:41029	2630490	3	True				
ANR	2634399	AssignmentExpression	num = getthimmed12 ( ao -> a [ 1 ] )		2630490	0		=			
ANR	2634400	Identifier	num		2630490	0					
ANR	2634401	CallExpression	getthimmed12 ( ao -> a [ 1 ] )		2630490	1					
ANR	2634402	Callee	getthimmed12		2630490	0					
ANR	2634403	Identifier	getthimmed12		2630490	0					
ANR	2634404	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2634405	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2634406	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2634407	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634408	Identifier	ao		2630490	0					
ANR	2634409	Identifier	a		2630490	1					
ANR	2634410	PrimaryExpression	1		2630490	1					
ANR	2634411	ExpressionStatement	ao -> o = 0xb0f1000f	1973:3:41034:41052	2630490	4	True				
ANR	2634412	AssignmentExpression	ao -> o = 0xb0f1000f		2630490	0		=			
ANR	2634413	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634414	Identifier	ao		2630490	0					
ANR	2634415	Identifier	o		2630490	1					
ANR	2634416	PrimaryExpression	0xb0f1000f		2630490	1					
ANR	2634417	ExpressionStatement	ao -> o |= reg1 << 24	1974:3:41057:41076	2630490	5	True				
ANR	2634418	AssignmentExpression	ao -> o |= reg1 << 24		2630490	0		|=			
ANR	2634419	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634420	Identifier	ao		2630490	0					
ANR	2634421	Identifier	o		2630490	1					
ANR	2634422	ShiftExpression	reg1 << 24		2630490	1		<<			
ANR	2634423	Identifier	reg1		2630490	0					
ANR	2634424	PrimaryExpression	24		2630490	1					
ANR	2634425	ExpressionStatement	ao -> o |= num	1975:3:41081:41093	2630490	6	True				
ANR	2634426	AssignmentExpression	ao -> o |= num		2630490	0		|=			
ANR	2634427	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634428	Identifier	ao		2630490	0					
ANR	2634429	Identifier	o		2630490	1					
ANR	2634430	Identifier	num		2630490	1					
ANR	2634431	ReturnStatement	return 4 ;	1976:3:41098:41106	2630490	7	True				
ANR	2634432	PrimaryExpression	4		2630490	0					
ANR	2634433	BreakStatement	break ;	1978:3:41123:41128	2630490	2	True				
ANR	2634434	Label	case THUMB_REG_REG :	1979:2:41132:41150	2630490	3	True				
ANR	2634435	Identifier	THUMB_REG_REG		2630490	0					
ANR	2634436	CompoundStatement		689:3:15331:15359	2630490	4					
ANR	2634437	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1980:3:41157:41185	2630490	0	True				
ANR	2634438	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2634439	IdentifierDeclType	ut8		2630490	0					
ANR	2634440	Identifier	reg1		2630490	1					
ANR	2634441	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2634442	Identifier	reg1		2630490	0					
ANR	2634443	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2634444	Callee	getreg		2630490	0					
ANR	2634445	Identifier	getreg		2630490	0					
ANR	2634446	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2634447	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2634448	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2634449	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634450	Identifier	ao		2630490	0					
ANR	2634451	Identifier	a		2630490	1					
ANR	2634452	PrimaryExpression	0		2630490	1					
ANR	2634453	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	1981:3:41190:41218	2630490	1	True				
ANR	2634454	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2634455	IdentifierDeclType	ut8		2630490	0					
ANR	2634456	Identifier	reg2		2630490	1					
ANR	2634457	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2634458	Identifier	reg2		2630490	0					
ANR	2634459	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2634460	Callee	getreg		2630490	0					
ANR	2634461	Identifier	getreg		2630490	0					
ANR	2634462	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2634463	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2634464	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2634465	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634466	Identifier	ao		2630490	0					
ANR	2634467	Identifier	a		2630490	1					
ANR	2634468	PrimaryExpression	1		2630490	1					
ANR	2634469	ExpressionStatement	ao -> o = 0x8042	1982:3:41223:41237	2630490	2	True				
ANR	2634470	AssignmentExpression	ao -> o = 0x8042		2630490	0		=			
ANR	2634471	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634472	Identifier	ao		2630490	0					
ANR	2634473	Identifier	o		2630490	1					
ANR	2634474	PrimaryExpression	0x8042		2630490	1					
ANR	2634475	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	3					
ANR	2634476	Condition	"std_16bit_2reg ( ao , m )"	1983:7:41246:41267	2630490	0	True				
ANR	2634477	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2634478	Callee	std_16bit_2reg		2630490	0					
ANR	2634479	Identifier	std_16bit_2reg		2630490	0					
ANR	2634480	ArgumentList	ao		2630490	1					
ANR	2634481	Argument	ao		2630490	0					
ANR	2634482	Identifier	ao		2630490	0					
ANR	2634483	Argument	m		2630490	1					
ANR	2634484	Identifier	m		2630490	0					
ANR	2634485	CompoundStatement		691:31:15411:15411	2630490	1					
ANR	2634486	ReturnStatement	return 2 ;	1984:4:41276:41284	2630490	0	True				
ANR	2634487	PrimaryExpression	2		2630490	0					
ANR	2634488	IfStatement	if ( ! ( m & DOTW_BIT ) )		2630490	4					
ANR	2634489	Condition	! ( m & DOTW_BIT )	1986:7:41298:41312	2630490	0	True				
ANR	2634490	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	0					
ANR	2634491	UnaryOperator	!		2630490	0					
ANR	2634492	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2634493	Identifier	m		2630490	0					
ANR	2634494	Identifier	DOTW_BIT		2630490	1					
ANR	2634495	CompoundStatement		694:24:15456:15456	2630490	1					
ANR	2634496	ExpressionStatement	ao -> o = 0x0045	1987:4:41321:41335	2630490	0	True				
ANR	2634497	AssignmentExpression	ao -> o = 0x0045		2630490	0		=			
ANR	2634498	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634499	Identifier	ao		2630490	0					
ANR	2634500	Identifier	o		2630490	1					
ANR	2634501	PrimaryExpression	0x0045		2630490	1					
ANR	2634502	ExpressionStatement	ao -> o |= ( ( reg1 & 0x7 ) << 8 )	1988:4:41341:41369	2630490	1	True				
ANR	2634503	AssignmentExpression	ao -> o |= ( ( reg1 & 0x7 ) << 8 )		2630490	0		|=			
ANR	2634504	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634505	Identifier	ao		2630490	0					
ANR	2634506	Identifier	o		2630490	1					
ANR	2634507	ShiftExpression	( reg1 & 0x7 ) << 8		2630490	1		<<			
ANR	2634508	BitAndExpression	reg1 & 0x7		2630490	0		&			
ANR	2634509	Identifier	reg1		2630490	0					
ANR	2634510	PrimaryExpression	0x7		2630490	1					
ANR	2634511	PrimaryExpression	8		2630490	1					
ANR	2634512	ExpressionStatement	ao -> o |= ( ( reg1 & 0x8 ) << 12 )	1989:4:41375:41404	2630490	2	True				
ANR	2634513	AssignmentExpression	ao -> o |= ( ( reg1 & 0x8 ) << 12 )		2630490	0		|=			
ANR	2634514	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634515	Identifier	ao		2630490	0					
ANR	2634516	Identifier	o		2630490	1					
ANR	2634517	ShiftExpression	( reg1 & 0x8 ) << 12		2630490	1		<<			
ANR	2634518	BitAndExpression	reg1 & 0x8		2630490	0		&			
ANR	2634519	Identifier	reg1		2630490	0					
ANR	2634520	PrimaryExpression	0x8		2630490	1					
ANR	2634521	PrimaryExpression	12		2630490	1					
ANR	2634522	ExpressionStatement	ao -> o |= reg2 << 11	1990:4:41410:41429	2630490	3	True				
ANR	2634523	AssignmentExpression	ao -> o |= reg2 << 11		2630490	0		|=			
ANR	2634524	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634525	Identifier	ao		2630490	0					
ANR	2634526	Identifier	o		2630490	1					
ANR	2634527	ShiftExpression	reg2 << 11		2630490	1		<<			
ANR	2634528	Identifier	reg2		2630490	0					
ANR	2634529	PrimaryExpression	11		2630490	1					
ANR	2634530	ReturnStatement	return 2 ;	1991:4:41435:41443	2630490	4	True				
ANR	2634531	PrimaryExpression	2		2630490	0					
ANR	2634532	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 0"""	1993:3:41453:41471	2630490	5	True				
ANR	2634533	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 0"""		2630490	0		=			
ANR	2634534	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2634535	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634536	Identifier	ao		2630490	0					
ANR	2634537	Identifier	a		2630490	1					
ANR	2634538	PrimaryExpression	2		2630490	1					
ANR	2634539	PrimaryExpression	"""lsl 0"""		2630490	1					
ANR	2634540	Label	case THUMB_REG_REG_SHIFT :	1996:2:41517:41541	2630490	5	True				
ANR	2634541	Identifier	THUMB_REG_REG_SHIFT		2630490	0					
ANR	2634542	CompoundStatement		707:3:15755:15793	2630490	6					
ANR	2634543	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	1997:3:41548:41576	2630490	0	True				
ANR	2634544	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2634545	IdentifierDeclType	ut8		2630490	0					
ANR	2634546	Identifier	reg1		2630490	1					
ANR	2634547	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2634548	Identifier	reg1		2630490	0					
ANR	2634549	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2634550	Callee	getreg		2630490	0					
ANR	2634551	Identifier	getreg		2630490	0					
ANR	2634552	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2634553	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2634554	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2634555	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634556	Identifier	ao		2630490	0					
ANR	2634557	Identifier	a		2630490	1					
ANR	2634558	PrimaryExpression	0		2630490	1					
ANR	2634559	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	1998:3:41581:41609	2630490	1	True				
ANR	2634560	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2634561	IdentifierDeclType	ut8		2630490	0					
ANR	2634562	Identifier	reg2		2630490	1					
ANR	2634563	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2634564	Identifier	reg2		2630490	0					
ANR	2634565	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2634566	Callee	getreg		2630490	0					
ANR	2634567	Identifier	getreg		2630490	0					
ANR	2634568	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2634569	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2634570	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2634571	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634572	Identifier	ao		2630490	0					
ANR	2634573	Identifier	a		2630490	1					
ANR	2634574	PrimaryExpression	1		2630490	1					
ANR	2634575	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 2 ] ) ;	1999:3:41614:41652	2630490	2	True				
ANR	2634576	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 2 ] )		2630490	0					
ANR	2634577	IdentifierDeclType	ut32		2630490	0					
ANR	2634578	Identifier	shift		2630490	1					
ANR	2634579	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2634580	Identifier	shift		2630490	0					
ANR	2634581	CallExpression	thumb_getshift ( ao -> a [ 2 ] )		2630490	1					
ANR	2634582	Callee	thumb_getshift		2630490	0					
ANR	2634583	Identifier	thumb_getshift		2630490	0					
ANR	2634584	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2634585	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2634586	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2634587	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634588	Identifier	ao		2630490	0					
ANR	2634589	Identifier	a		2630490	1					
ANR	2634590	PrimaryExpression	2		2630490	1					
ANR	2634591	ExpressionStatement	ao -> o = 0xb0eb000f	2000:3:41657:41675	2630490	3	True				
ANR	2634592	AssignmentExpression	ao -> o = 0xb0eb000f		2630490	0		=			
ANR	2634593	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634594	Identifier	ao		2630490	0					
ANR	2634595	Identifier	o		2630490	1					
ANR	2634596	PrimaryExpression	0xb0eb000f		2630490	1					
ANR	2634597	ExpressionStatement	ao -> o |= reg1 << 24	2001:3:41680:41699	2630490	4	True				
ANR	2634598	AssignmentExpression	ao -> o |= reg1 << 24		2630490	0		|=			
ANR	2634599	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634600	Identifier	ao		2630490	0					
ANR	2634601	Identifier	o		2630490	1					
ANR	2634602	ShiftExpression	reg1 << 24		2630490	1		<<			
ANR	2634603	Identifier	reg1		2630490	0					
ANR	2634604	PrimaryExpression	24		2630490	1					
ANR	2634605	ExpressionStatement	ao -> o |= reg2 << 8	2002:3:41704:41722	2630490	5	True				
ANR	2634606	AssignmentExpression	ao -> o |= reg2 << 8		2630490	0		|=			
ANR	2634607	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634608	Identifier	ao		2630490	0					
ANR	2634609	Identifier	o		2630490	1					
ANR	2634610	ShiftExpression	reg2 << 8		2630490	1		<<			
ANR	2634611	Identifier	reg2		2630490	0					
ANR	2634612	PrimaryExpression	8		2630490	1					
ANR	2634613	ExpressionStatement	ao -> o |= shift	2003:3:41727:41741	2630490	6	True				
ANR	2634614	AssignmentExpression	ao -> o |= shift		2630490	0		|=			
ANR	2634615	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634616	Identifier	ao		2630490	0					
ANR	2634617	Identifier	o		2630490	1					
ANR	2634618	Identifier	shift		2630490	1					
ANR	2634619	ReturnStatement	return 4 ;	2004:3:41746:41754	2630490	7	True				
ANR	2634620	PrimaryExpression	4		2630490	0					
ANR	2634621	BreakStatement	break ;	2006:3:41771:41776	2630490	7	True				
ANR	2634622	Label	default :	2007:2:41780:41787	2630490	8	True				
ANR	2634623	Identifier	default		2630490	0					
ANR	2634624	ReturnStatement	return - 1 ;	2008:3:41792:41801	2630490	9	True				
ANR	2634625	UnaryOperationExpression	- 1		2630490	0					
ANR	2634626	UnaryOperator	-		2630490	0					
ANR	2634627	PrimaryExpression	1		2630490	1					
ANR	2634628	ElseStatement	else		2630490	0					
ANR	2634629	IfStatement	"if ( ( m = opmask ( ao -> op , ""cps"" , ID_BIT | IE_BIT ) ) )"		2630490	0					
ANR	2634630	Condition	"m = opmask ( ao -> op , ""cps"" , ID_BIT | IE_BIT )"	2011:5:41820:41866	2630490	0	True				
ANR	2634631	AssignmentExpression	"m = opmask ( ao -> op , ""cps"" , ID_BIT | IE_BIT )"		2630490	0		=			
ANR	2634632	Identifier	m		2630490	0					
ANR	2634633	CallExpression	"opmask ( ao -> op , ""cps"" , ID_BIT | IE_BIT )"		2630490	1					
ANR	2634634	Callee	opmask		2630490	0					
ANR	2634635	Identifier	opmask		2630490	0					
ANR	2634636	ArgumentList	ao -> op		2630490	1					
ANR	2634637	Argument	ao -> op		2630490	0					
ANR	2634638	PtrMemberAccess	ao -> op		2630490	0					
ANR	2634639	Identifier	ao		2630490	0					
ANR	2634640	Identifier	op		2630490	1					
ANR	2634641	Argument	"""cps"""		2630490	1					
ANR	2634642	PrimaryExpression	"""cps"""		2630490	0					
ANR	2634643	Argument	ID_BIT | IE_BIT		2630490	2					
ANR	2634644	InclusiveOrExpression	ID_BIT | IE_BIT		2630490	0		|			
ANR	2634645	Identifier	ID_BIT		2630490	0					
ANR	2634646	Identifier	IE_BIT		2630490	1					
ANR	2634647	CompoundStatement		720:2:16014:16048	2630490	1					
ANR	2634648	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2012:2:41873:41907	2630490	0	True				
ANR	2634649	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2634650	IdentifierDeclType	ut64		2630490	0					
ANR	2634651	Identifier	argt		2630490	1					
ANR	2634652	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2634653	Identifier	argt		2630490	0					
ANR	2634654	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2634655	Callee	thumb_selector		2630490	0					
ANR	2634656	Identifier	thumb_selector		2630490	0					
ANR	2634657	ArgumentList	ao -> a		2630490	1					
ANR	2634658	Argument	ao -> a		2630490	0					
ANR	2634659	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634660	Identifier	ao		2630490	0					
ANR	2634661	Identifier	a		2630490	1					
ANR	2634662	SwitchStatement	switch ( argt )		2630490	1					
ANR	2634663	Condition	argt	2013:10:41919:41922	2630490	0	True				
ANR	2634664	Identifier	argt		2630490	0					
ANR	2634665	CompoundStatement		721:16:16066:16066	2630490	1					
ANR	2634666	Label	case THUMB_OTHER :	2014:2:41929:41945	2630490	0	True				
ANR	2634667	Identifier	THUMB_OTHER		2630490	0					
ANR	2634668	CompoundStatement		723:3:16093:16118	2630490	1					
ANR	2634669	IdentifierDeclStatement	st8 aif = iflag ( ao -> a [ 0 ] ) ;	2015:3:41952:41977	2630490	0	True				
ANR	2634670	IdentifierDecl	aif = iflag ( ao -> a [ 0 ] )		2630490	0					
ANR	2634671	IdentifierDeclType	st8		2630490	0					
ANR	2634672	Identifier	aif		2630490	1					
ANR	2634673	AssignmentExpression	aif = iflag ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2634674	Identifier	aif		2630490	0					
ANR	2634675	CallExpression	iflag ( ao -> a [ 0 ] )		2630490	1					
ANR	2634676	Callee	iflag		2630490	0					
ANR	2634677	Identifier	iflag		2630490	0					
ANR	2634678	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2634679	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2634680	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2634681	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634682	Identifier	ao		2630490	0					
ANR	2634683	Identifier	a		2630490	1					
ANR	2634684	PrimaryExpression	0		2630490	1					
ANR	2634685	IfStatement	if ( aif == - 1 )		2630490	1					
ANR	2634686	Condition	aif == - 1	2016:7:41986:41994	2630490	0	True				
ANR	2634687	EqualityExpression	aif == - 1		2630490	0		==			
ANR	2634688	Identifier	aif		2630490	0					
ANR	2634689	UnaryOperationExpression	- 1		2630490	1					
ANR	2634690	UnaryOperator	-		2630490	0					
ANR	2634691	PrimaryExpression	1		2630490	1					
ANR	2634692	CompoundStatement		724:18:16138:16138	2630490	1					
ANR	2634693	ReturnStatement	return - 1 ;	2017:4:42003:42012	2630490	0	True				
ANR	2634694	UnaryOperationExpression	- 1		2630490	0					
ANR	2634695	UnaryOperator	-		2630490	0					
ANR	2634696	PrimaryExpression	1		2630490	1					
ANR	2634697	IfStatement	if ( ! ( m & DOTW_BIT ) )		2630490	2					
ANR	2634698	Condition	! ( m & DOTW_BIT )	2019:7:42026:42040	2630490	0	True				
ANR	2634699	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	0					
ANR	2634700	UnaryOperator	!		2630490	0					
ANR	2634701	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2634702	Identifier	m		2630490	0					
ANR	2634703	Identifier	DOTW_BIT		2630490	1					
ANR	2634704	CompoundStatement		727:24:16184:16184	2630490	1					
ANR	2634705	ExpressionStatement	ao -> o = 0x60b6	2020:4:42049:42063	2630490	0	True				
ANR	2634706	AssignmentExpression	ao -> o = 0x60b6		2630490	0		=			
ANR	2634707	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634708	Identifier	ao		2630490	0					
ANR	2634709	Identifier	o		2630490	1					
ANR	2634710	PrimaryExpression	0x60b6		2630490	1					
ANR	2634711	ExpressionStatement	ao -> o |= aif << 8	2021:4:42069:42086	2630490	1	True				
ANR	2634712	AssignmentExpression	ao -> o |= aif << 8		2630490	0		|=			
ANR	2634713	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634714	Identifier	ao		2630490	0					
ANR	2634715	Identifier	o		2630490	1					
ANR	2634716	ShiftExpression	aif << 8		2630490	1		<<			
ANR	2634717	Identifier	aif		2630490	0					
ANR	2634718	PrimaryExpression	8		2630490	1					
ANR	2634719	IfStatement	if ( m & ID_BIT )		2630490	2					
ANR	2634720	Condition	m & ID_BIT	2022:8:42096:42105	2630490	0	True				
ANR	2634721	BitAndExpression	m & ID_BIT		2630490	0		&			
ANR	2634722	Identifier	m		2630490	0					
ANR	2634723	Identifier	ID_BIT		2630490	1					
ANR	2634724	CompoundStatement		730:20:16249:16249	2630490	1					
ANR	2634725	ExpressionStatement	ao -> o |= 1 << 12	2023:5:42115:42131	2630490	0	True				
ANR	2634726	AssignmentExpression	ao -> o |= 1 << 12		2630490	0		|=			
ANR	2634727	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634728	Identifier	ao		2630490	0					
ANR	2634729	Identifier	o		2630490	1					
ANR	2634730	ShiftExpression	1 << 12		2630490	1		<<			
ANR	2634731	PrimaryExpression	1		2630490	0					
ANR	2634732	PrimaryExpression	12		2630490	1					
ANR	2634733	ReturnStatement	return 2 ;	2025:4:42143:42151	2630490	3	True				
ANR	2634734	PrimaryExpression	2		2630490	0					
ANR	2634735	ExpressionStatement	"ao -> a [ 1 ] = ""0"""	2027:3:42161:42175	2630490	3	True				
ANR	2634736	AssignmentExpression	"ao -> a [ 1 ] = ""0"""		2630490	0		=			
ANR	2634737	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2634738	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634739	Identifier	ao		2630490	0					
ANR	2634740	Identifier	a		2630490	1					
ANR	2634741	PrimaryExpression	1		2630490	1					
ANR	2634742	PrimaryExpression	"""0"""		2630490	1					
ANR	2634743	Label	case THUMB_OTHER_CONST :	2030:2:42221:42243	2630490	2	True				
ANR	2634744	Identifier	THUMB_OTHER_CONST		2630490	0					
ANR	2634745	CompoundStatement		740:3:16421:16449	2630490	3					
ANR	2634746	IdentifierDeclStatement	st8 aif = iflag ( ao -> a [ 0 ] ) ;	2031:3:42250:42275	2630490	0	True				
ANR	2634747	IdentifierDecl	aif = iflag ( ao -> a [ 0 ] )		2630490	0					
ANR	2634748	IdentifierDeclType	st8		2630490	0					
ANR	2634749	Identifier	aif		2630490	1					
ANR	2634750	AssignmentExpression	aif = iflag ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2634751	Identifier	aif		2630490	0					
ANR	2634752	CallExpression	iflag ( ao -> a [ 0 ] )		2630490	1					
ANR	2634753	Callee	iflag		2630490	0					
ANR	2634754	Identifier	iflag		2630490	0					
ANR	2634755	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2634756	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2634757	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2634758	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634759	Identifier	ao		2630490	0					
ANR	2634760	Identifier	a		2630490	1					
ANR	2634761	PrimaryExpression	0		2630490	1					
ANR	2634762	IdentifierDeclStatement	ut8 mode = getnum ( ao -> a [ 1 ] ) ;	2032:3:42280:42308	2630490	1	True				
ANR	2634763	IdentifierDecl	mode = getnum ( ao -> a [ 1 ] )		2630490	0					
ANR	2634764	IdentifierDeclType	ut8		2630490	0					
ANR	2634765	Identifier	mode		2630490	1					
ANR	2634766	AssignmentExpression	mode = getnum ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2634767	Identifier	mode		2630490	0					
ANR	2634768	CallExpression	getnum ( ao -> a [ 1 ] )		2630490	1					
ANR	2634769	Callee	getnum		2630490	0					
ANR	2634770	Identifier	getnum		2630490	0					
ANR	2634771	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2634772	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2634773	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2634774	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634775	Identifier	ao		2630490	0					
ANR	2634776	Identifier	a		2630490	1					
ANR	2634777	PrimaryExpression	1		2630490	1					
ANR	2634778	IfStatement	if ( ( mode > 31 ) || ( aif == - 1 ) )		2630490	2					
ANR	2634779	Condition	( mode > 31 ) || ( aif == - 1 )	2033:7:42317:42342	2630490	0	True				
ANR	2634780	OrExpression	( mode > 31 ) || ( aif == - 1 )		2630490	0		||			
ANR	2634781	RelationalExpression	mode > 31		2630490	0		>			
ANR	2634782	Identifier	mode		2630490	0					
ANR	2634783	PrimaryExpression	31		2630490	1					
ANR	2634784	EqualityExpression	aif == - 1		2630490	1		==			
ANR	2634785	Identifier	aif		2630490	0					
ANR	2634786	UnaryOperationExpression	- 1		2630490	1					
ANR	2634787	UnaryOperator	-		2630490	0					
ANR	2634788	PrimaryExpression	1		2630490	1					
ANR	2634789	CompoundStatement		741:35:16486:16486	2630490	1					
ANR	2634790	ReturnStatement	return - 1 ;	2034:4:42351:42360	2630490	0	True				
ANR	2634791	UnaryOperationExpression	- 1		2630490	0					
ANR	2634792	UnaryOperator	-		2630490	0					
ANR	2634793	PrimaryExpression	1		2630490	1					
ANR	2634794	ExpressionStatement	ao -> o = 0xaff30085	2036:3:42370:42388	2630490	3	True				
ANR	2634795	AssignmentExpression	ao -> o = 0xaff30085		2630490	0		=			
ANR	2634796	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634797	Identifier	ao		2630490	0					
ANR	2634798	Identifier	o		2630490	1					
ANR	2634799	PrimaryExpression	0xaff30085		2630490	1					
ANR	2634800	ExpressionStatement	ao -> o |= mode << 8	2037:3:42393:42411	2630490	4	True				
ANR	2634801	AssignmentExpression	ao -> o |= mode << 8		2630490	0		|=			
ANR	2634802	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634803	Identifier	ao		2630490	0					
ANR	2634804	Identifier	o		2630490	1					
ANR	2634805	ShiftExpression	mode << 8		2630490	1		<<			
ANR	2634806	Identifier	mode		2630490	0					
ANR	2634807	PrimaryExpression	8		2630490	1					
ANR	2634808	ExpressionStatement	ao -> o |= aif << 13	2038:3:42416:42434	2630490	5	True				
ANR	2634809	AssignmentExpression	ao -> o |= aif << 13		2630490	0		|=			
ANR	2634810	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634811	Identifier	ao		2630490	0					
ANR	2634812	Identifier	o		2630490	1					
ANR	2634813	ShiftExpression	aif << 13		2630490	1		<<			
ANR	2634814	Identifier	aif		2630490	0					
ANR	2634815	PrimaryExpression	13		2630490	1					
ANR	2634816	IfStatement	if ( m & ID_BIT )		2630490	6					
ANR	2634817	Condition	m & ID_BIT	2039:7:42443:42452	2630490	0	True				
ANR	2634818	BitAndExpression	m & ID_BIT		2630490	0		&			
ANR	2634819	Identifier	m		2630490	0					
ANR	2634820	Identifier	ID_BIT		2630490	1					
ANR	2634821	CompoundStatement		747:19:16596:16596	2630490	1					
ANR	2634822	ExpressionStatement	ao -> o |= 1 << 1	2040:4:42461:42476	2630490	0	True				
ANR	2634823	AssignmentExpression	ao -> o |= 1 << 1		2630490	0		|=			
ANR	2634824	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634825	Identifier	ao		2630490	0					
ANR	2634826	Identifier	o		2630490	1					
ANR	2634827	ShiftExpression	1 << 1		2630490	1		<<			
ANR	2634828	PrimaryExpression	1		2630490	0					
ANR	2634829	PrimaryExpression	1		2630490	1					
ANR	2634830	ReturnStatement	return 4 ;	2042:3:42486:42494	2630490	7	True				
ANR	2634831	PrimaryExpression	4		2630490	0					
ANR	2634832	BreakStatement	break ;	2044:3:42511:42516	2630490	4	True				
ANR	2634833	Label	case THUMB_CONST :	2045:2:42520:42536	2630490	5	True				
ANR	2634834	Identifier	THUMB_CONST		2630490	0					
ANR	2634835	CompoundStatement		754:3:16684:16712	2630490	6					
ANR	2634836	IdentifierDeclStatement	ut8 mode = getnum ( ao -> a [ 0 ] ) ;	2046:3:42543:42571	2630490	0	True				
ANR	2634837	IdentifierDecl	mode = getnum ( ao -> a [ 0 ] )		2630490	0					
ANR	2634838	IdentifierDeclType	ut8		2630490	0					
ANR	2634839	Identifier	mode		2630490	1					
ANR	2634840	AssignmentExpression	mode = getnum ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2634841	Identifier	mode		2630490	0					
ANR	2634842	CallExpression	getnum ( ao -> a [ 0 ] )		2630490	1					
ANR	2634843	Callee	getnum		2630490	0					
ANR	2634844	Identifier	getnum		2630490	0					
ANR	2634845	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2634846	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2634847	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2634848	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634849	Identifier	ao		2630490	0					
ANR	2634850	Identifier	a		2630490	1					
ANR	2634851	PrimaryExpression	0		2630490	1					
ANR	2634852	IfStatement	if ( ( m & ID_BIT ) || ( m & IE_BIT ) || ( mode > 31 ) )		2630490	1					
ANR	2634853	Condition	( m & ID_BIT ) || ( m & IE_BIT ) || ( mode > 31 )	2047:7:42580:42622	2630490	0	True				
ANR	2634854	OrExpression	( m & ID_BIT ) || ( m & IE_BIT ) || ( mode > 31 )		2630490	0		||			
ANR	2634855	BitAndExpression	m & ID_BIT		2630490	0		&			
ANR	2634856	Identifier	m		2630490	0					
ANR	2634857	Identifier	ID_BIT		2630490	1					
ANR	2634858	OrExpression	( m & IE_BIT ) || ( mode > 31 )		2630490	1		||			
ANR	2634859	BitAndExpression	m & IE_BIT		2630490	0		&			
ANR	2634860	Identifier	m		2630490	0					
ANR	2634861	Identifier	IE_BIT		2630490	1					
ANR	2634862	RelationalExpression	mode > 31		2630490	1		>			
ANR	2634863	Identifier	mode		2630490	0					
ANR	2634864	PrimaryExpression	31		2630490	1					
ANR	2634865	CompoundStatement		755:52:16766:16766	2630490	1					
ANR	2634866	ReturnStatement	return - 1 ;	2048:4:42631:42640	2630490	0	True				
ANR	2634867	UnaryOperationExpression	- 1		2630490	0					
ANR	2634868	UnaryOperator	-		2630490	0					
ANR	2634869	PrimaryExpression	1		2630490	1					
ANR	2634870	ExpressionStatement	ao -> o = 0xaff30081	2050:3:42650:42668	2630490	2	True				
ANR	2634871	AssignmentExpression	ao -> o = 0xaff30081		2630490	0		=			
ANR	2634872	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634873	Identifier	ao		2630490	0					
ANR	2634874	Identifier	o		2630490	1					
ANR	2634875	PrimaryExpression	0xaff30081		2630490	1					
ANR	2634876	ExpressionStatement	ao -> o |= mode << 8	2051:3:42673:42691	2630490	3	True				
ANR	2634877	AssignmentExpression	ao -> o |= mode << 8		2630490	0		|=			
ANR	2634878	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634879	Identifier	ao		2630490	0					
ANR	2634880	Identifier	o		2630490	1					
ANR	2634881	ShiftExpression	mode << 8		2630490	1		<<			
ANR	2634882	Identifier	mode		2630490	0					
ANR	2634883	PrimaryExpression	8		2630490	1					
ANR	2634884	ReturnStatement	return 4 ;	2052:3:42696:42704	2630490	4	True				
ANR	2634885	PrimaryExpression	4		2630490	0					
ANR	2634886	BreakStatement	break ;	2054:3:42721:42726	2630490	7	True				
ANR	2634887	Label	default :	2055:2:42730:42737	2630490	8	True				
ANR	2634888	Identifier	default		2630490	0					
ANR	2634889	ReturnStatement	return - 1 ;	2056:3:42742:42751	2630490	9	True				
ANR	2634890	UnaryOperationExpression	- 1		2630490	0					
ANR	2634891	UnaryOperator	-		2630490	0					
ANR	2634892	PrimaryExpression	1		2630490	1					
ANR	2634893	ElseStatement	else		2630490	0					
ANR	2634894	IfStatement	"if ( ( m = opmask ( ao -> op , ""dbg"" , 0 ) ) )"		2630490	0					
ANR	2634895	Condition	"m = opmask ( ao -> op , ""dbg"" , 0 )"	2059:5:42770:42800	2630490	0	True				
ANR	2634896	AssignmentExpression	"m = opmask ( ao -> op , ""dbg"" , 0 )"		2630490	0		=			
ANR	2634897	Identifier	m		2630490	0					
ANR	2634898	CallExpression	"opmask ( ao -> op , ""dbg"" , 0 )"		2630490	1					
ANR	2634899	Callee	opmask		2630490	0					
ANR	2634900	Identifier	opmask		2630490	0					
ANR	2634901	ArgumentList	ao -> op		2630490	1					
ANR	2634902	Argument	ao -> op		2630490	0					
ANR	2634903	PtrMemberAccess	ao -> op		2630490	0					
ANR	2634904	Identifier	ao		2630490	0					
ANR	2634905	Identifier	op		2630490	1					
ANR	2634906	Argument	"""dbg"""		2630490	1					
ANR	2634907	PrimaryExpression	"""dbg"""		2630490	0					
ANR	2634908	Argument	0		2630490	2					
ANR	2634909	PrimaryExpression	0		2630490	0					
ANR	2634910	CompoundStatement		768:2:16948:16982	2630490	1					
ANR	2634911	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2060:2:42807:42841	2630490	0	True				
ANR	2634912	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2634913	IdentifierDeclType	ut64		2630490	0					
ANR	2634914	Identifier	argt		2630490	1					
ANR	2634915	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2634916	Identifier	argt		2630490	0					
ANR	2634917	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2634918	Callee	thumb_selector		2630490	0					
ANR	2634919	Identifier	thumb_selector		2630490	0					
ANR	2634920	ArgumentList	ao -> a		2630490	1					
ANR	2634921	Argument	ao -> a		2630490	0					
ANR	2634922	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634923	Identifier	ao		2630490	0					
ANR	2634924	Identifier	a		2630490	1					
ANR	2634925	SwitchStatement	switch ( argt )		2630490	1					
ANR	2634926	Condition	argt	2061:10:42853:42856	2630490	0	True				
ANR	2634927	Identifier	argt		2630490	0					
ANR	2634928	CompoundStatement		769:16:17000:17000	2630490	1					
ANR	2634929	Label	case THUMB_CONST :	2062:2:42863:42879	2630490	0	True				
ANR	2634930	Identifier	THUMB_CONST		2630490	0					
ANR	2634931	CompoundStatement		771:3:17027:17058	2630490	1					
ANR	2634932	IdentifierDeclStatement	ut32 option = getnum ( ao -> a [ 0 ] ) ;	2063:3:42886:42917	2630490	0	True				
ANR	2634933	IdentifierDecl	option = getnum ( ao -> a [ 0 ] )		2630490	0					
ANR	2634934	IdentifierDeclType	ut32		2630490	0					
ANR	2634935	Identifier	option		2630490	1					
ANR	2634936	AssignmentExpression	option = getnum ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2634937	Identifier	option		2630490	0					
ANR	2634938	CallExpression	getnum ( ao -> a [ 0 ] )		2630490	1					
ANR	2634939	Callee	getnum		2630490	0					
ANR	2634940	Identifier	getnum		2630490	0					
ANR	2634941	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2634942	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2634943	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2634944	PtrMemberAccess	ao -> a		2630490	0					
ANR	2634945	Identifier	ao		2630490	0					
ANR	2634946	Identifier	a		2630490	1					
ANR	2634947	PrimaryExpression	0		2630490	1					
ANR	2634948	IfStatement	if ( option > 15 )		2630490	1					
ANR	2634949	Condition	option > 15	2064:7:42926:42936	2630490	0	True				
ANR	2634950	RelationalExpression	option > 15		2630490	0		>			
ANR	2634951	Identifier	option		2630490	0					
ANR	2634952	PrimaryExpression	15		2630490	1					
ANR	2634953	CompoundStatement		772:20:17080:17080	2630490	1					
ANR	2634954	ReturnStatement	return - 1 ;	2065:4:42945:42954	2630490	0	True				
ANR	2634955	UnaryOperationExpression	- 1		2630490	0					
ANR	2634956	UnaryOperator	-		2630490	0					
ANR	2634957	PrimaryExpression	1		2630490	1					
ANR	2634958	ExpressionStatement	ao -> o = 0xaff3f080	2067:3:42964:42982	2630490	2	True				
ANR	2634959	AssignmentExpression	ao -> o = 0xaff3f080		2630490	0		=			
ANR	2634960	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634961	Identifier	ao		2630490	0					
ANR	2634962	Identifier	o		2630490	1					
ANR	2634963	PrimaryExpression	0xaff3f080		2630490	1					
ANR	2634964	ExpressionStatement	ao -> o |= option << 8	2068:3:42987:43007	2630490	3	True				
ANR	2634965	AssignmentExpression	ao -> o |= option << 8		2630490	0		|=			
ANR	2634966	PtrMemberAccess	ao -> o		2630490	0					
ANR	2634967	Identifier	ao		2630490	0					
ANR	2634968	Identifier	o		2630490	1					
ANR	2634969	ShiftExpression	option << 8		2630490	1		<<			
ANR	2634970	Identifier	option		2630490	0					
ANR	2634971	PrimaryExpression	8		2630490	1					
ANR	2634972	ReturnStatement	return 4 ;	2069:3:43012:43020	2630490	4	True				
ANR	2634973	PrimaryExpression	4		2630490	0					
ANR	2634974	Label	default :	2071:2:43036:43043	2630490	2	True				
ANR	2634975	Identifier	default		2630490	0					
ANR	2634976	ReturnStatement	return - 1 ;	2072:3:43048:43057	2630490	3	True				
ANR	2634977	UnaryOperationExpression	- 1		2630490	0					
ANR	2634978	UnaryOperator	-		2630490	0					
ANR	2634979	PrimaryExpression	1		2630490	1					
ANR	2634980	ElseStatement	else		2630490	0					
ANR	2634981	IfStatement	"if ( ( m = opmask ( ao -> op , ""dmb"" , 0 ) ) )"		2630490	0					
ANR	2634982	Condition	"m = opmask ( ao -> op , ""dmb"" , 0 )"	2075:5:43076:43106	2630490	0	True				
ANR	2634983	AssignmentExpression	"m = opmask ( ao -> op , ""dmb"" , 0 )"		2630490	0		=			
ANR	2634984	Identifier	m		2630490	0					
ANR	2634985	CallExpression	"opmask ( ao -> op , ""dmb"" , 0 )"		2630490	1					
ANR	2634986	Callee	opmask		2630490	0					
ANR	2634987	Identifier	opmask		2630490	0					
ANR	2634988	ArgumentList	ao -> op		2630490	1					
ANR	2634989	Argument	ao -> op		2630490	0					
ANR	2634990	PtrMemberAccess	ao -> op		2630490	0					
ANR	2634991	Identifier	ao		2630490	0					
ANR	2634992	Identifier	op		2630490	1					
ANR	2634993	Argument	"""dmb"""		2630490	1					
ANR	2634994	PrimaryExpression	"""dmb"""		2630490	0					
ANR	2634995	Argument	0		2630490	2					
ANR	2634996	PrimaryExpression	0		2630490	0					
ANR	2634997	CompoundStatement		784:2:17254:17288	2630490	1					
ANR	2634998	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2076:2:43113:43147	2630490	0	True				
ANR	2634999	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2635000	IdentifierDeclType	ut64		2630490	0					
ANR	2635001	Identifier	argt		2630490	1					
ANR	2635002	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2635003	Identifier	argt		2630490	0					
ANR	2635004	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2635005	Callee	thumb_selector		2630490	0					
ANR	2635006	Identifier	thumb_selector		2630490	0					
ANR	2635007	ArgumentList	ao -> a		2630490	1					
ANR	2635008	Argument	ao -> a		2630490	0					
ANR	2635009	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635010	Identifier	ao		2630490	0					
ANR	2635011	Identifier	a		2630490	1					
ANR	2635012	SwitchStatement	switch ( argt )		2630490	1					
ANR	2635013	Condition	argt	2077:10:43159:43162	2630490	0	True				
ANR	2635014	Identifier	argt		2630490	0					
ANR	2635015	CompoundStatement		785:16:17306:17306	2630490	1					
ANR	2635016	Label	case THUMB_NONE :	2078:2:43169:43184	2630490	0	True				
ANR	2635017	Identifier	THUMB_NONE		2630490	0					
ANR	2635018	CompoundStatement		786:19:17327:17327	2630490	1					
ANR	2635019	ExpressionStatement	ao -> o = 0xbff35f8f	2079:3:43191:43209	2630490	0	True				
ANR	2635020	AssignmentExpression	ao -> o = 0xbff35f8f		2630490	0		=			
ANR	2635021	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635022	Identifier	ao		2630490	0					
ANR	2635023	Identifier	o		2630490	1					
ANR	2635024	PrimaryExpression	0xbff35f8f		2630490	1					
ANR	2635025	ReturnStatement	return 4 ;	2080:3:43214:43222	2630490	1	True				
ANR	2635026	PrimaryExpression	4		2630490	0					
ANR	2635027	BreakStatement	break ;	2082:3:43239:43244	2630490	2	True				
ANR	2635028	Label	case THUMB_OTHER :	2083:2:43248:43264	2630490	3	True				
ANR	2635029	Identifier	THUMB_OTHER		2630490	0					
ANR	2635030	CompoundStatement		791:20:17407:17407	2630490	4					
ANR	2635031	ExpressionStatement	"r_str_case ( ao -> a [ 0 ] , false )"	2084:3:43271:43299	2630490	0	True				
ANR	2635032	CallExpression	"r_str_case ( ao -> a [ 0 ] , false )"		2630490	0					
ANR	2635033	Callee	r_str_case		2630490	0					
ANR	2635034	Identifier	r_str_case		2630490	0					
ANR	2635035	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2635036	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2635037	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2635038	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635039	Identifier	ao		2630490	0					
ANR	2635040	Identifier	a		2630490	1					
ANR	2635041	PrimaryExpression	0		2630490	1					
ANR	2635042	Argument	false		2630490	1					
ANR	2635043	Identifier	false		2630490	0					
ANR	2635044	IfStatement	"if ( strcmpnull ( ao -> a [ 0 ] , ""sy"" ) )"		2630490	1					
ANR	2635045	Condition	"strcmpnull ( ao -> a [ 0 ] , ""sy"" )"	2085:7:43308:43334	2630490	0	True				
ANR	2635046	CallExpression	"strcmpnull ( ao -> a [ 0 ] , ""sy"" )"		2630490	0					
ANR	2635047	Callee	strcmpnull		2630490	0					
ANR	2635048	Identifier	strcmpnull		2630490	0					
ANR	2635049	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2635050	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2635051	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2635052	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635053	Identifier	ao		2630490	0					
ANR	2635054	Identifier	a		2630490	1					
ANR	2635055	PrimaryExpression	0		2630490	1					
ANR	2635056	Argument	"""sy"""		2630490	1					
ANR	2635057	PrimaryExpression	"""sy"""		2630490	0					
ANR	2635058	CompoundStatement		793:36:17478:17478	2630490	1					
ANR	2635059	ReturnStatement	return - 1 ;	2086:4:43343:43352	2630490	0	True				
ANR	2635060	UnaryOperationExpression	- 1		2630490	0					
ANR	2635061	UnaryOperator	-		2630490	0					
ANR	2635062	PrimaryExpression	1		2630490	1					
ANR	2635063	ExpressionStatement	"ao -> a [ 0 ] = ""15"""	2088:3:43362:43377	2630490	2	True				
ANR	2635064	AssignmentExpression	"ao -> a [ 0 ] = ""15"""		2630490	0		=			
ANR	2635065	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2635066	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635067	Identifier	ao		2630490	0					
ANR	2635068	Identifier	a		2630490	1					
ANR	2635069	PrimaryExpression	0		2630490	1					
ANR	2635070	PrimaryExpression	"""15"""		2630490	1					
ANR	2635071	Label	case THUMB_CONST :	2091:2:43423:43439	2630490	5	True				
ANR	2635072	Identifier	THUMB_CONST		2630490	0					
ANR	2635073	CompoundStatement		800:3:17587:17618	2630490	6					
ANR	2635074	IdentifierDeclStatement	ut32 option = getnum ( ao -> a [ 0 ] ) ;	2092:3:43446:43477	2630490	0	True				
ANR	2635075	IdentifierDecl	option = getnum ( ao -> a [ 0 ] )		2630490	0					
ANR	2635076	IdentifierDeclType	ut32		2630490	0					
ANR	2635077	Identifier	option		2630490	1					
ANR	2635078	AssignmentExpression	option = getnum ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2635079	Identifier	option		2630490	0					
ANR	2635080	CallExpression	getnum ( ao -> a [ 0 ] )		2630490	1					
ANR	2635081	Callee	getnum		2630490	0					
ANR	2635082	Identifier	getnum		2630490	0					
ANR	2635083	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2635084	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2635085	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2635086	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635087	Identifier	ao		2630490	0					
ANR	2635088	Identifier	a		2630490	1					
ANR	2635089	PrimaryExpression	0		2630490	1					
ANR	2635090	IfStatement	if ( option != 15 )		2630490	1					
ANR	2635091	Condition	option != 15	2093:7:43486:43497	2630490	0	True				
ANR	2635092	EqualityExpression	option != 15		2630490	0		!=			
ANR	2635093	Identifier	option		2630490	0					
ANR	2635094	PrimaryExpression	15		2630490	1					
ANR	2635095	CompoundStatement		801:21:17641:17641	2630490	1					
ANR	2635096	ReturnStatement	return - 1 ;	2094:4:43506:43515	2630490	0	True				
ANR	2635097	UnaryOperationExpression	- 1		2630490	0					
ANR	2635098	UnaryOperator	-		2630490	0					
ANR	2635099	PrimaryExpression	1		2630490	1					
ANR	2635100	ExpressionStatement	ao -> o = 0xbff3508f	2096:3:43525:43543	2630490	2	True				
ANR	2635101	AssignmentExpression	ao -> o = 0xbff3508f		2630490	0		=			
ANR	2635102	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635103	Identifier	ao		2630490	0					
ANR	2635104	Identifier	o		2630490	1					
ANR	2635105	PrimaryExpression	0xbff3508f		2630490	1					
ANR	2635106	ExpressionStatement	ao -> o |= option << 8	2097:3:43548:43568	2630490	3	True				
ANR	2635107	AssignmentExpression	ao -> o |= option << 8		2630490	0		|=			
ANR	2635108	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635109	Identifier	ao		2630490	0					
ANR	2635110	Identifier	o		2630490	1					
ANR	2635111	ShiftExpression	option << 8		2630490	1		<<			
ANR	2635112	Identifier	option		2630490	0					
ANR	2635113	PrimaryExpression	8		2630490	1					
ANR	2635114	ReturnStatement	return 4 ;	2098:3:43573:43581	2630490	4	True				
ANR	2635115	PrimaryExpression	4		2630490	0					
ANR	2635116	BreakStatement	break ;	2100:3:43598:43603	2630490	7	True				
ANR	2635117	Label	default :	2101:2:43607:43614	2630490	8	True				
ANR	2635118	Identifier	default		2630490	0					
ANR	2635119	ReturnStatement	return - 1 ;	2102:3:43619:43628	2630490	9	True				
ANR	2635120	UnaryOperationExpression	- 1		2630490	0					
ANR	2635121	UnaryOperator	-		2630490	0					
ANR	2635122	PrimaryExpression	1		2630490	1					
ANR	2635123	ElseStatement	else		2630490	0					
ANR	2635124	IfStatement	"if ( ( m = opmask ( ao -> op , ""dsb"" , 0 ) ) )"		2630490	0					
ANR	2635125	Condition	"m = opmask ( ao -> op , ""dsb"" , 0 )"	2105:5:43647:43677	2630490	0	True				
ANR	2635126	AssignmentExpression	"m = opmask ( ao -> op , ""dsb"" , 0 )"		2630490	0		=			
ANR	2635127	Identifier	m		2630490	0					
ANR	2635128	CallExpression	"opmask ( ao -> op , ""dsb"" , 0 )"		2630490	1					
ANR	2635129	Callee	opmask		2630490	0					
ANR	2635130	Identifier	opmask		2630490	0					
ANR	2635131	ArgumentList	ao -> op		2630490	1					
ANR	2635132	Argument	ao -> op		2630490	0					
ANR	2635133	PtrMemberAccess	ao -> op		2630490	0					
ANR	2635134	Identifier	ao		2630490	0					
ANR	2635135	Identifier	op		2630490	1					
ANR	2635136	Argument	"""dsb"""		2630490	1					
ANR	2635137	PrimaryExpression	"""dsb"""		2630490	0					
ANR	2635138	Argument	0		2630490	2					
ANR	2635139	PrimaryExpression	0		2630490	0					
ANR	2635140	CompoundStatement		814:2:17825:17859	2630490	1					
ANR	2635141	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2106:2:43684:43718	2630490	0	True				
ANR	2635142	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2635143	IdentifierDeclType	ut64		2630490	0					
ANR	2635144	Identifier	argt		2630490	1					
ANR	2635145	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2635146	Identifier	argt		2630490	0					
ANR	2635147	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2635148	Callee	thumb_selector		2630490	0					
ANR	2635149	Identifier	thumb_selector		2630490	0					
ANR	2635150	ArgumentList	ao -> a		2630490	1					
ANR	2635151	Argument	ao -> a		2630490	0					
ANR	2635152	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635153	Identifier	ao		2630490	0					
ANR	2635154	Identifier	a		2630490	1					
ANR	2635155	SwitchStatement	switch ( argt )		2630490	1					
ANR	2635156	Condition	argt	2107:10:43730:43733	2630490	0	True				
ANR	2635157	Identifier	argt		2630490	0					
ANR	2635158	CompoundStatement		815:16:17877:17877	2630490	1					
ANR	2635159	Label	case THUMB_NONE :	2108:2:43740:43755	2630490	0	True				
ANR	2635160	Identifier	THUMB_NONE		2630490	0					
ANR	2635161	CompoundStatement		816:19:17898:17898	2630490	1					
ANR	2635162	ExpressionStatement	ao -> o = 0xbff34f8f	2109:3:43762:43780	2630490	0	True				
ANR	2635163	AssignmentExpression	ao -> o = 0xbff34f8f		2630490	0		=			
ANR	2635164	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635165	Identifier	ao		2630490	0					
ANR	2635166	Identifier	o		2630490	1					
ANR	2635167	PrimaryExpression	0xbff34f8f		2630490	1					
ANR	2635168	ReturnStatement	return 4 ;	2110:3:43785:43793	2630490	1	True				
ANR	2635169	PrimaryExpression	4		2630490	0					
ANR	2635170	Label	case THUMB_OTHER :	2113:2:43839:43855	2630490	2	True				
ANR	2635171	Identifier	THUMB_OTHER		2630490	0					
ANR	2635172	CompoundStatement		821:20:17998:17998	2630490	3					
ANR	2635173	ExpressionStatement	"r_str_case ( ao -> a [ 0 ] , false )"	2114:3:43862:43890	2630490	0	True				
ANR	2635174	CallExpression	"r_str_case ( ao -> a [ 0 ] , false )"		2630490	0					
ANR	2635175	Callee	r_str_case		2630490	0					
ANR	2635176	Identifier	r_str_case		2630490	0					
ANR	2635177	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2635178	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2635179	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2635180	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635181	Identifier	ao		2630490	0					
ANR	2635182	Identifier	a		2630490	1					
ANR	2635183	PrimaryExpression	0		2630490	1					
ANR	2635184	Argument	false		2630490	1					
ANR	2635185	Identifier	false		2630490	0					
ANR	2635186	IfStatement	"if ( ! strcmpnull ( ( ao -> a [ 0 ] = parse_hints ( ao -> a [ 0 ] ) ) , ""-1"" ) )"		2630490	1					
ANR	2635187	Condition	"! strcmpnull ( ( ao -> a [ 0 ] = parse_hints ( ao -> a [ 0 ] ) ) , ""-1"" )"	2115:7:43899:43952	2630490	0	True				
ANR	2635188	UnaryOperationExpression	"! strcmpnull ( ( ao -> a [ 0 ] = parse_hints ( ao -> a [ 0 ] ) ) , ""-1"" )"		2630490	0					
ANR	2635189	UnaryOperator	!		2630490	0					
ANR	2635190	CallExpression	"strcmpnull ( ( ao -> a [ 0 ] = parse_hints ( ao -> a [ 0 ] ) ) , ""-1"" )"		2630490	1					
ANR	2635191	Callee	strcmpnull		2630490	0					
ANR	2635192	Identifier	strcmpnull		2630490	0					
ANR	2635193	ArgumentList	ao -> a [ 0 ] = parse_hints ( ao -> a [ 0 ] )		2630490	1					
ANR	2635194	Argument	ao -> a [ 0 ] = parse_hints ( ao -> a [ 0 ] )		2630490	0					
ANR	2635195	AssignmentExpression	ao -> a [ 0 ] = parse_hints ( ao -> a [ 0 ] )		2630490	0		=			
ANR	2635196	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2635197	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635198	Identifier	ao		2630490	0					
ANR	2635199	Identifier	a		2630490	1					
ANR	2635200	PrimaryExpression	0		2630490	1					
ANR	2635201	CallExpression	parse_hints ( ao -> a [ 0 ] )		2630490	1					
ANR	2635202	Callee	parse_hints		2630490	0					
ANR	2635203	Identifier	parse_hints		2630490	0					
ANR	2635204	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2635205	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2635206	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2635207	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635208	Identifier	ao		2630490	0					
ANR	2635209	Identifier	a		2630490	1					
ANR	2635210	PrimaryExpression	0		2630490	1					
ANR	2635211	Argument	"""-1"""		2630490	1					
ANR	2635212	PrimaryExpression	"""-1"""		2630490	0					
ANR	2635213	CompoundStatement		823:63:18096:18096	2630490	1					
ANR	2635214	ReturnStatement	return - 1 ;	2116:4:43961:43970	2630490	0	True				
ANR	2635215	UnaryOperationExpression	- 1		2630490	0					
ANR	2635216	UnaryOperator	-		2630490	0					
ANR	2635217	PrimaryExpression	1		2630490	1					
ANR	2635218	Label	case THUMB_CONST :	2120:2:44021:44037	2630490	4	True				
ANR	2635219	Identifier	THUMB_CONST		2630490	0					
ANR	2635220	CompoundStatement		829:3:18185:18216	2630490	5					
ANR	2635221	IdentifierDeclStatement	ut32 option = getnum ( ao -> a [ 0 ] ) ;	2121:3:44044:44075	2630490	0	True				
ANR	2635222	IdentifierDecl	option = getnum ( ao -> a [ 0 ] )		2630490	0					
ANR	2635223	IdentifierDeclType	ut32		2630490	0					
ANR	2635224	Identifier	option		2630490	1					
ANR	2635225	AssignmentExpression	option = getnum ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2635226	Identifier	option		2630490	0					
ANR	2635227	CallExpression	getnum ( ao -> a [ 0 ] )		2630490	1					
ANR	2635228	Callee	getnum		2630490	0					
ANR	2635229	Identifier	getnum		2630490	0					
ANR	2635230	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2635231	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2635232	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2635233	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635234	Identifier	ao		2630490	0					
ANR	2635235	Identifier	a		2630490	1					
ANR	2635236	PrimaryExpression	0		2630490	1					
ANR	2635237	IfStatement	if ( ( option != 6 ) && ( option != 7 ) && ( option != 14 ) && ( option != 15 ) )		2630490	1					
ANR	2635238	Condition	( option != 6 ) && ( option != 7 ) && ( option != 14 ) && ( option != 15 )	2122:7:44084:44149	2630490	0	True				
ANR	2635239	AndExpression	( option != 6 ) && ( option != 7 ) && ( option != 14 ) && ( option != 15 )		2630490	0		&&			
ANR	2635240	EqualityExpression	option != 6		2630490	0		!=			
ANR	2635241	Identifier	option		2630490	0					
ANR	2635242	PrimaryExpression	6		2630490	1					
ANR	2635243	AndExpression	( option != 7 ) && ( option != 14 ) && ( option != 15 )		2630490	1		&&			
ANR	2635244	EqualityExpression	option != 7		2630490	0		!=			
ANR	2635245	Identifier	option		2630490	0					
ANR	2635246	PrimaryExpression	7		2630490	1					
ANR	2635247	AndExpression	( option != 14 ) && ( option != 15 )		2630490	1		&&			
ANR	2635248	EqualityExpression	option != 14		2630490	0		!=			
ANR	2635249	Identifier	option		2630490	0					
ANR	2635250	PrimaryExpression	14		2630490	1					
ANR	2635251	EqualityExpression	option != 15		2630490	1		!=			
ANR	2635252	Identifier	option		2630490	0					
ANR	2635253	PrimaryExpression	15		2630490	1					
ANR	2635254	CompoundStatement		830:75:18293:18293	2630490	1					
ANR	2635255	ReturnStatement	return - 1 ;	2123:4:44158:44167	2630490	0	True				
ANR	2635256	UnaryOperationExpression	- 1		2630490	0					
ANR	2635257	UnaryOperator	-		2630490	0					
ANR	2635258	PrimaryExpression	1		2630490	1					
ANR	2635259	ExpressionStatement	ao -> o = 0xbff3408f	2125:3:44177:44195	2630490	2	True				
ANR	2635260	AssignmentExpression	ao -> o = 0xbff3408f		2630490	0		=			
ANR	2635261	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635262	Identifier	ao		2630490	0					
ANR	2635263	Identifier	o		2630490	1					
ANR	2635264	PrimaryExpression	0xbff3408f		2630490	1					
ANR	2635265	ExpressionStatement	ao -> o |= option << 8	2126:3:44200:44220	2630490	3	True				
ANR	2635266	AssignmentExpression	ao -> o |= option << 8		2630490	0		|=			
ANR	2635267	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635268	Identifier	ao		2630490	0					
ANR	2635269	Identifier	o		2630490	1					
ANR	2635270	ShiftExpression	option << 8		2630490	1		<<			
ANR	2635271	Identifier	option		2630490	0					
ANR	2635272	PrimaryExpression	8		2630490	1					
ANR	2635273	ReturnStatement	return 4 ;	2127:3:44225:44233	2630490	4	True				
ANR	2635274	PrimaryExpression	4		2630490	0					
ANR	2635275	BreakStatement	break ;	2129:3:44250:44255	2630490	6	True				
ANR	2635276	Label	default :	2130:2:44259:44266	2630490	7	True				
ANR	2635277	Identifier	default		2630490	0					
ANR	2635278	ReturnStatement	return - 1 ;	2131:3:44271:44280	2630490	8	True				
ANR	2635279	UnaryOperationExpression	- 1		2630490	0					
ANR	2635280	UnaryOperator	-		2630490	0					
ANR	2635281	PrimaryExpression	1		2630490	1					
ANR	2635282	ElseStatement	else		2630490	0					
ANR	2635283	IfStatement	"if ( ( m = opmask ( ao -> op , ""eor"" , S_BIT ) ) )"		2630490	0					
ANR	2635284	Condition	"m = opmask ( ao -> op , ""eor"" , S_BIT )"	2134:5:44299:44333	2630490	0	True				
ANR	2635285	AssignmentExpression	"m = opmask ( ao -> op , ""eor"" , S_BIT )"		2630490	0		=			
ANR	2635286	Identifier	m		2630490	0					
ANR	2635287	CallExpression	"opmask ( ao -> op , ""eor"" , S_BIT )"		2630490	1					
ANR	2635288	Callee	opmask		2630490	0					
ANR	2635289	Identifier	opmask		2630490	0					
ANR	2635290	ArgumentList	ao -> op		2630490	1					
ANR	2635291	Argument	ao -> op		2630490	0					
ANR	2635292	PtrMemberAccess	ao -> op		2630490	0					
ANR	2635293	Identifier	ao		2630490	0					
ANR	2635294	Identifier	op		2630490	1					
ANR	2635295	Argument	"""eor"""		2630490	1					
ANR	2635296	PrimaryExpression	"""eor"""		2630490	0					
ANR	2635297	Argument	S_BIT		2630490	2					
ANR	2635298	Identifier	S_BIT		2630490	0					
ANR	2635299	CompoundStatement		843:2:18481:18515	2630490	1					
ANR	2635300	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2135:2:44340:44374	2630490	0	True				
ANR	2635301	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2635302	IdentifierDeclType	ut64		2630490	0					
ANR	2635303	Identifier	argt		2630490	1					
ANR	2635304	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2635305	Identifier	argt		2630490	0					
ANR	2635306	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2635307	Callee	thumb_selector		2630490	0					
ANR	2635308	Identifier	thumb_selector		2630490	0					
ANR	2635309	ArgumentList	ao -> a		2630490	1					
ANR	2635310	Argument	ao -> a		2630490	0					
ANR	2635311	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635312	Identifier	ao		2630490	0					
ANR	2635313	Identifier	a		2630490	1					
ANR	2635314	SwitchStatement	switch ( argt )		2630490	1					
ANR	2635315	Condition	argt	2136:10:44386:44389	2630490	0	True				
ANR	2635316	Identifier	argt		2630490	0					
ANR	2635317	CompoundStatement		844:16:18533:18533	2630490	1					
ANR	2635318	Label	case THUMB_REG_CONST :	2137:2:44396:44416	2630490	0	True				
ANR	2635319	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2635320	ExpressionStatement	std_opt_2 ( ao )	2138:3:44421:44435	2630490	1	True				
ANR	2635321	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2635322	Callee	std_opt_2		2630490	0					
ANR	2635323	Identifier	std_opt_2		2630490	0					
ANR	2635324	ArgumentList	ao		2630490	1					
ANR	2635325	Argument	ao		2630490	0					
ANR	2635326	Identifier	ao		2630490	0					
ANR	2635327	Label	case THUMB_REG_REG_CONST :	2140:2:44469:44493	2630490	2	True				
ANR	2635328	Identifier	THUMB_REG_REG_CONST		2630490	0					
ANR	2635329	CompoundStatement		850:3:18657:18691	2630490	3					
ANR	2635330	ExpressionStatement	err = false	2141:3:44500:44511	2630490	0	True				
ANR	2635331	AssignmentExpression	err = false		2630490	0		=			
ANR	2635332	Identifier	err		2630490	0					
ANR	2635333	Identifier	false		2630490	1					
ANR	2635334	IdentifierDeclStatement	ut32 imm = getthimmed12 ( ao -> a [ 2 ] ) ;	2142:3:44516:44550	2630490	1	True				
ANR	2635335	IdentifierDecl	imm = getthimmed12 ( ao -> a [ 2 ] )		2630490	0					
ANR	2635336	IdentifierDeclType	ut32		2630490	0					
ANR	2635337	Identifier	imm		2630490	1					
ANR	2635338	AssignmentExpression	imm = getthimmed12 ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2635339	Identifier	imm		2630490	0					
ANR	2635340	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		2630490	1					
ANR	2635341	Callee	getthimmed12		2630490	0					
ANR	2635342	Identifier	getthimmed12		2630490	0					
ANR	2635343	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2635344	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2635345	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2635346	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635347	Identifier	ao		2630490	0					
ANR	2635348	Identifier	a		2630490	1					
ANR	2635349	PrimaryExpression	2		2630490	1					
ANR	2635350	IfStatement	if ( err )		2630490	2					
ANR	2635351	Condition	err	2143:7:44559:44561	2630490	0	True				
ANR	2635352	Identifier	err		2630490	0					
ANR	2635353	CompoundStatement		851:12:18705:18705	2630490	1					
ANR	2635354	ReturnStatement	return - 1 ;	2144:4:44570:44579	2630490	0	True				
ANR	2635355	UnaryOperationExpression	- 1		2630490	0					
ANR	2635356	UnaryOperator	-		2630490	0					
ANR	2635357	PrimaryExpression	1		2630490	1					
ANR	2635358	ExpressionStatement	ao -> o = 0x80f00000	2146:3:44589:44607	2630490	3	True				
ANR	2635359	AssignmentExpression	ao -> o = 0x80f00000		2630490	0		=			
ANR	2635360	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635361	Identifier	ao		2630490	0					
ANR	2635362	Identifier	o		2630490	1					
ANR	2635363	PrimaryExpression	0x80f00000		2630490	1					
ANR	2635364	ExpressionStatement	ao -> o |= imm	2147:3:44612:44624	2630490	4	True				
ANR	2635365	AssignmentExpression	ao -> o |= imm		2630490	0		|=			
ANR	2635366	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635367	Identifier	ao		2630490	0					
ANR	2635368	Identifier	o		2630490	1					
ANR	2635369	Identifier	imm		2630490	1					
ANR	2635370	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	2148:3:44629:44665	2630490	5	True				
ANR	2635371	CallExpression	"std_32bit_2reg ( ao , m , false )"		2630490	0					
ANR	2635372	Callee	std_32bit_2reg		2630490	0					
ANR	2635373	Identifier	std_32bit_2reg		2630490	0					
ANR	2635374	ArgumentList	ao		2630490	1					
ANR	2635375	Argument	ao		2630490	0					
ANR	2635376	Identifier	ao		2630490	0					
ANR	2635377	Argument	m		2630490	1					
ANR	2635378	Identifier	m		2630490	0					
ANR	2635379	Argument	false		2630490	2					
ANR	2635380	Identifier	false		2630490	0					
ANR	2635381	BreakStatement	break ;	2150:3:44682:44687	2630490	4	True				
ANR	2635382	Label	case THUMB_REG_REG :	2151:2:44691:44709	2630490	5	True				
ANR	2635383	Identifier	THUMB_REG_REG		2630490	0					
ANR	2635384	CompoundStatement		859:22:18852:18852	2630490	6					
ANR	2635385	ExpressionStatement	ao -> o = 0x4040	2152:3:44716:44730	2630490	0	True				
ANR	2635386	AssignmentExpression	ao -> o = 0x4040		2630490	0		=			
ANR	2635387	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635388	Identifier	ao		2630490	0					
ANR	2635389	Identifier	o		2630490	1					
ANR	2635390	PrimaryExpression	0x4040		2630490	1					
ANR	2635391	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	1					
ANR	2635392	Condition	"std_16bit_2reg ( ao , m )"	2153:7:44739:44760	2630490	0	True				
ANR	2635393	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2635394	Callee	std_16bit_2reg		2630490	0					
ANR	2635395	Identifier	std_16bit_2reg		2630490	0					
ANR	2635396	ArgumentList	ao		2630490	1					
ANR	2635397	Argument	ao		2630490	0					
ANR	2635398	Identifier	ao		2630490	0					
ANR	2635399	Argument	m		2630490	1					
ANR	2635400	Identifier	m		2630490	0					
ANR	2635401	CompoundStatement		861:31:18904:18904	2630490	1					
ANR	2635402	ReturnStatement	return 2 ;	2154:4:44769:44777	2630490	0	True				
ANR	2635403	PrimaryExpression	2		2630490	0					
ANR	2635404	ExpressionStatement	std_opt_2 ( ao )	2156:3:44787:44801	2630490	2	True				
ANR	2635405	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2635406	Callee	std_opt_2		2630490	0					
ANR	2635407	Identifier	std_opt_2		2630490	0					
ANR	2635408	ArgumentList	ao		2630490	1					
ANR	2635409	Argument	ao		2630490	0					
ANR	2635410	Identifier	ao		2630490	0					
ANR	2635411	Label	case THUMB_REG_REG_REG :	2159:2:44847:44869	2630490	7	True				
ANR	2635412	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2635413	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	2160:3:44874:44892	2630490	8	True				
ANR	2635414	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		2630490	0		=			
ANR	2635415	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2635416	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635417	Identifier	ao		2630490	0					
ANR	2635418	Identifier	a		2630490	1					
ANR	2635419	PrimaryExpression	3		2630490	1					
ANR	2635420	PrimaryExpression	"""lsl 0"""		2630490	1					
ANR	2635421	Label	case THUMB_REG_REG_REG_SHIFT :	2162:2:44926:44954	2630490	9	True				
ANR	2635422	Identifier	THUMB_REG_REG_REG_SHIFT		2630490	0					
ANR	2635423	CompoundStatement		870:32:19097:19097	2630490	10					
ANR	2635424	ExpressionStatement	ao -> o = 0x80ea0000	2163:3:44961:44979	2630490	0	True				
ANR	2635425	AssignmentExpression	ao -> o = 0x80ea0000		2630490	0		=			
ANR	2635426	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635427	Identifier	ao		2630490	0					
ANR	2635428	Identifier	o		2630490	1					
ANR	2635429	PrimaryExpression	0x80ea0000		2630490	1					
ANR	2635430	ReturnStatement	"return std_32bit_3reg ( ao , m , true ) ;"	2164:3:44984:45019	2630490	1	True				
ANR	2635431	CallExpression	"std_32bit_3reg ( ao , m , true )"		2630490	0					
ANR	2635432	Callee	std_32bit_3reg		2630490	0					
ANR	2635433	Identifier	std_32bit_3reg		2630490	0					
ANR	2635434	ArgumentList	ao		2630490	1					
ANR	2635435	Argument	ao		2630490	0					
ANR	2635436	Identifier	ao		2630490	0					
ANR	2635437	Argument	m		2630490	1					
ANR	2635438	Identifier	m		2630490	0					
ANR	2635439	Argument	true		2630490	2					
ANR	2635440	Identifier	true		2630490	0					
ANR	2635441	BreakStatement	break ;	2166:3:45036:45041	2630490	11	True				
ANR	2635442	Label	default :	2167:2:45045:45052	2630490	12	True				
ANR	2635443	Identifier	default		2630490	0					
ANR	2635444	ReturnStatement	return - 1 ;	2168:3:45057:45066	2630490	13	True				
ANR	2635445	UnaryOperationExpression	- 1		2630490	0					
ANR	2635446	UnaryOperator	-		2630490	0					
ANR	2635447	PrimaryExpression	1		2630490	1					
ANR	2635448	ElseStatement	else		2630490	0					
ANR	2635449	IfStatement	"if ( ( m = opmask ( ao -> op , ""isb"" , 0 ) ) )"		2630490	0					
ANR	2635450	Condition	"m = opmask ( ao -> op , ""isb"" , 0 )"	2171:5:45085:45115	2630490	0	True				
ANR	2635451	AssignmentExpression	"m = opmask ( ao -> op , ""isb"" , 0 )"		2630490	0		=			
ANR	2635452	Identifier	m		2630490	0					
ANR	2635453	CallExpression	"opmask ( ao -> op , ""isb"" , 0 )"		2630490	1					
ANR	2635454	Callee	opmask		2630490	0					
ANR	2635455	Identifier	opmask		2630490	0					
ANR	2635456	ArgumentList	ao -> op		2630490	1					
ANR	2635457	Argument	ao -> op		2630490	0					
ANR	2635458	PtrMemberAccess	ao -> op		2630490	0					
ANR	2635459	Identifier	ao		2630490	0					
ANR	2635460	Identifier	op		2630490	1					
ANR	2635461	Argument	"""isb"""		2630490	1					
ANR	2635462	PrimaryExpression	"""isb"""		2630490	0					
ANR	2635463	Argument	0		2630490	2					
ANR	2635464	PrimaryExpression	0		2630490	0					
ANR	2635465	CompoundStatement		880:2:19263:19297	2630490	1					
ANR	2635466	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2172:2:45122:45156	2630490	0	True				
ANR	2635467	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2635468	IdentifierDeclType	ut64		2630490	0					
ANR	2635469	Identifier	argt		2630490	1					
ANR	2635470	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2635471	Identifier	argt		2630490	0					
ANR	2635472	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2635473	Callee	thumb_selector		2630490	0					
ANR	2635474	Identifier	thumb_selector		2630490	0					
ANR	2635475	ArgumentList	ao -> a		2630490	1					
ANR	2635476	Argument	ao -> a		2630490	0					
ANR	2635477	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635478	Identifier	ao		2630490	0					
ANR	2635479	Identifier	a		2630490	1					
ANR	2635480	SwitchStatement	switch ( argt )		2630490	1					
ANR	2635481	Condition	argt	2173:10:45168:45171	2630490	0	True				
ANR	2635482	Identifier	argt		2630490	0					
ANR	2635483	CompoundStatement		881:16:19315:19315	2630490	1					
ANR	2635484	Label	case THUMB_NONE :	2174:2:45178:45193	2630490	0	True				
ANR	2635485	Identifier	THUMB_NONE		2630490	0					
ANR	2635486	CompoundStatement		882:19:19336:19336	2630490	1					
ANR	2635487	ExpressionStatement	ao -> o = 0xbff36f8f	2175:3:45200:45218	2630490	0	True				
ANR	2635488	AssignmentExpression	ao -> o = 0xbff36f8f		2630490	0		=			
ANR	2635489	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635490	Identifier	ao		2630490	0					
ANR	2635491	Identifier	o		2630490	1					
ANR	2635492	PrimaryExpression	0xbff36f8f		2630490	1					
ANR	2635493	ReturnStatement	return 4 ;	2176:3:45223:45231	2630490	1	True				
ANR	2635494	PrimaryExpression	4		2630490	0					
ANR	2635495	Label	case THUMB_OTHER :	2179:2:45277:45293	2630490	2	True				
ANR	2635496	Identifier	THUMB_OTHER		2630490	0					
ANR	2635497	CompoundStatement		887:20:19436:19436	2630490	3					
ANR	2635498	ExpressionStatement	"r_str_case ( ao -> a [ 0 ] , false )"	2180:3:45300:45328	2630490	0	True				
ANR	2635499	CallExpression	"r_str_case ( ao -> a [ 0 ] , false )"		2630490	0					
ANR	2635500	Callee	r_str_case		2630490	0					
ANR	2635501	Identifier	r_str_case		2630490	0					
ANR	2635502	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2635503	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2635504	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2635505	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635506	Identifier	ao		2630490	0					
ANR	2635507	Identifier	a		2630490	1					
ANR	2635508	PrimaryExpression	0		2630490	1					
ANR	2635509	Argument	false		2630490	1					
ANR	2635510	Identifier	false		2630490	0					
ANR	2635511	IfStatement	"if ( strcmpnull ( ao -> a [ 0 ] , ""sy"" ) )"		2630490	1					
ANR	2635512	Condition	"strcmpnull ( ao -> a [ 0 ] , ""sy"" )"	2181:7:45337:45363	2630490	0	True				
ANR	2635513	CallExpression	"strcmpnull ( ao -> a [ 0 ] , ""sy"" )"		2630490	0					
ANR	2635514	Callee	strcmpnull		2630490	0					
ANR	2635515	Identifier	strcmpnull		2630490	0					
ANR	2635516	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2635517	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2635518	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2635519	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635520	Identifier	ao		2630490	0					
ANR	2635521	Identifier	a		2630490	1					
ANR	2635522	PrimaryExpression	0		2630490	1					
ANR	2635523	Argument	"""sy"""		2630490	1					
ANR	2635524	PrimaryExpression	"""sy"""		2630490	0					
ANR	2635525	CompoundStatement		889:36:19507:19507	2630490	1					
ANR	2635526	ReturnStatement	return - 1 ;	2182:4:45372:45381	2630490	0	True				
ANR	2635527	UnaryOperationExpression	- 1		2630490	0					
ANR	2635528	UnaryOperator	-		2630490	0					
ANR	2635529	PrimaryExpression	1		2630490	1					
ANR	2635530	ExpressionStatement	"ao -> a [ 0 ] = ""15"""	2184:3:45391:45406	2630490	2	True				
ANR	2635531	AssignmentExpression	"ao -> a [ 0 ] = ""15"""		2630490	0		=			
ANR	2635532	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2635533	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635534	Identifier	ao		2630490	0					
ANR	2635535	Identifier	a		2630490	1					
ANR	2635536	PrimaryExpression	0		2630490	1					
ANR	2635537	PrimaryExpression	"""15"""		2630490	1					
ANR	2635538	Label	case THUMB_CONST :	2187:2:45452:45468	2630490	4	True				
ANR	2635539	Identifier	THUMB_CONST		2630490	0					
ANR	2635540	CompoundStatement		896:3:19616:19647	2630490	5					
ANR	2635541	IdentifierDeclStatement	ut32 option = getnum ( ao -> a [ 0 ] ) ;	2188:3:45475:45506	2630490	0	True				
ANR	2635542	IdentifierDecl	option = getnum ( ao -> a [ 0 ] )		2630490	0					
ANR	2635543	IdentifierDeclType	ut32		2630490	0					
ANR	2635544	Identifier	option		2630490	1					
ANR	2635545	AssignmentExpression	option = getnum ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2635546	Identifier	option		2630490	0					
ANR	2635547	CallExpression	getnum ( ao -> a [ 0 ] )		2630490	1					
ANR	2635548	Callee	getnum		2630490	0					
ANR	2635549	Identifier	getnum		2630490	0					
ANR	2635550	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2635551	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2635552	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2635553	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635554	Identifier	ao		2630490	0					
ANR	2635555	Identifier	a		2630490	1					
ANR	2635556	PrimaryExpression	0		2630490	1					
ANR	2635557	IfStatement	if ( option != 15 )		2630490	1					
ANR	2635558	Condition	option != 15	2189:7:45515:45526	2630490	0	True				
ANR	2635559	EqualityExpression	option != 15		2630490	0		!=			
ANR	2635560	Identifier	option		2630490	0					
ANR	2635561	PrimaryExpression	15		2630490	1					
ANR	2635562	CompoundStatement		897:21:19670:19670	2630490	1					
ANR	2635563	ReturnStatement	return - 1 ;	2190:4:45535:45544	2630490	0	True				
ANR	2635564	UnaryOperationExpression	- 1		2630490	0					
ANR	2635565	UnaryOperator	-		2630490	0					
ANR	2635566	PrimaryExpression	1		2630490	1					
ANR	2635567	ExpressionStatement	ao -> o = 0xbff3608f	2192:3:45554:45572	2630490	2	True				
ANR	2635568	AssignmentExpression	ao -> o = 0xbff3608f		2630490	0		=			
ANR	2635569	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635570	Identifier	ao		2630490	0					
ANR	2635571	Identifier	o		2630490	1					
ANR	2635572	PrimaryExpression	0xbff3608f		2630490	1					
ANR	2635573	ExpressionStatement	ao -> o |= option << 8	2193:3:45577:45597	2630490	3	True				
ANR	2635574	AssignmentExpression	ao -> o |= option << 8		2630490	0		|=			
ANR	2635575	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635576	Identifier	ao		2630490	0					
ANR	2635577	Identifier	o		2630490	1					
ANR	2635578	ShiftExpression	option << 8		2630490	1		<<			
ANR	2635579	Identifier	option		2630490	0					
ANR	2635580	PrimaryExpression	8		2630490	1					
ANR	2635581	ReturnStatement	return 4 ;	2194:3:45602:45610	2630490	4	True				
ANR	2635582	PrimaryExpression	4		2630490	0					
ANR	2635583	BreakStatement	break ;	2196:3:45627:45632	2630490	6	True				
ANR	2635584	Label	default :	2197:2:45636:45643	2630490	7	True				
ANR	2635585	Identifier	default		2630490	0					
ANR	2635586	ReturnStatement	return - 1 ;	2198:3:45648:45657	2630490	8	True				
ANR	2635587	UnaryOperationExpression	- 1		2630490	0					
ANR	2635588	UnaryOperator	-		2630490	0					
ANR	2635589	PrimaryExpression	1		2630490	1					
ANR	2635590	ElseStatement	else		2630490	0					
ANR	2635591	IfStatement	if ( ( m = itmask ( ao -> op ) ) )		2630490	0					
ANR	2635592	Condition	m = itmask ( ao -> op )	2201:5:45676:45696	2630490	0	True				
ANR	2635593	AssignmentExpression	m = itmask ( ao -> op )		2630490	0		=			
ANR	2635594	Identifier	m		2630490	0					
ANR	2635595	CallExpression	itmask ( ao -> op )		2630490	1					
ANR	2635596	Callee	itmask		2630490	0					
ANR	2635597	Identifier	itmask		2630490	0					
ANR	2635598	ArgumentList	ao -> op		2630490	1					
ANR	2635599	Argument	ao -> op		2630490	0					
ANR	2635600	PtrMemberAccess	ao -> op		2630490	0					
ANR	2635601	Identifier	ao		2630490	0					
ANR	2635602	Identifier	op		2630490	1					
ANR	2635603	CompoundStatement		910:2:19844:19878	2630490	1					
ANR	2635604	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2202:2:45703:45737	2630490	0	True				
ANR	2635605	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2635606	IdentifierDeclType	ut64		2630490	0					
ANR	2635607	Identifier	argt		2630490	1					
ANR	2635608	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2635609	Identifier	argt		2630490	0					
ANR	2635610	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2635611	Callee	thumb_selector		2630490	0					
ANR	2635612	Identifier	thumb_selector		2630490	0					
ANR	2635613	ArgumentList	ao -> a		2630490	1					
ANR	2635614	Argument	ao -> a		2630490	0					
ANR	2635615	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635616	Identifier	ao		2630490	0					
ANR	2635617	Identifier	a		2630490	1					
ANR	2635618	SwitchStatement	switch ( argt )		2630490	1					
ANR	2635619	Condition	argt	2203:10:45749:45752	2630490	0	True				
ANR	2635620	Identifier	argt		2630490	0					
ANR	2635621	CompoundStatement		911:16:19896:19896	2630490	1					
ANR	2635622	Label	case THUMB_OTHER :	2204:2:45759:45775	2630490	0	True				
ANR	2635623	Identifier	THUMB_OTHER		2630490	0					
ANR	2635624	CompoundStatement		935:3:20357:20371	2630490	1					
ANR	2635625	IdentifierDeclStatement	ut16 cond = 0 ;	2205:3:45782:45795	2630490	0	True				
ANR	2635626	IdentifierDecl	cond = 0		2630490	0					
ANR	2635627	IdentifierDeclType	ut16		2630490	0					
ANR	2635628	Identifier	cond		2630490	1					
ANR	2635629	AssignmentExpression	cond = 0		2630490	2		=			
ANR	2635630	Identifier	cond		2630490	0					
ANR	2635631	PrimaryExpression	0		2630490	1					
ANR	2635632	IdentifierDeclStatement	ut16 i ;	2206:3:45800:45806	2630490	1	True				
ANR	2635633	IdentifierDecl	i		2630490	0					
ANR	2635634	IdentifierDeclType	ut16		2630490	0					
ANR	2635635	Identifier	i		2630490	1					
ANR	2635636	IdentifierDeclStatement	"const char * conds [ ] = { ""eq"" , ""ne"" , ""cs"" , ""cc"" , ""mi"" , ""pl"" , ""vs"" , ""vc"" , ""hi"" , ""ls"" , ""ge"" , ""lt"" , ""gt"" , ""le"" , ""al"" , ""nv"" , 0 } ;"	2208:3:45815:45949	2630490	2	True				
ANR	2635637	IdentifierDecl	"* conds [ ] = { ""eq"" , ""ne"" , ""cs"" , ""cc"" , ""mi"" , ""pl"" , ""vs"" , ""vc"" , ""hi"" , ""ls"" , ""ge"" , ""lt"" , ""gt"" , ""le"" , ""al"" , ""nv"" , 0 }"		2630490	0					
ANR	2635638	IdentifierDeclType	const char * [ ]		2630490	0					
ANR	2635639	Identifier	conds		2630490	1					
ANR	2635640	AssignmentExpression	"* conds [ ] = { ""eq"" , ""ne"" , ""cs"" , ""cc"" , ""mi"" , ""pl"" , ""vs"" , ""vc"" , ""hi"" , ""ls"" , ""ge"" , ""lt"" , ""gt"" , ""le"" , ""al"" , ""nv"" , 0 }"		2630490	2		=			
ANR	2635641	Identifier	conds		2630490	0					
ANR	2635642	InitializerList	"""eq"""		2630490	1					
ANR	2635643	PrimaryExpression	"""eq"""		2630490	0					
ANR	2635644	PrimaryExpression	"""ne"""		2630490	1					
ANR	2635645	PrimaryExpression	"""cs"""		2630490	2					
ANR	2635646	PrimaryExpression	"""cc"""		2630490	3					
ANR	2635647	PrimaryExpression	"""mi"""		2630490	4					
ANR	2635648	PrimaryExpression	"""pl"""		2630490	5					
ANR	2635649	PrimaryExpression	"""vs"""		2630490	6					
ANR	2635650	PrimaryExpression	"""vc"""		2630490	7					
ANR	2635651	PrimaryExpression	"""hi"""		2630490	8					
ANR	2635652	PrimaryExpression	"""ls"""		2630490	9					
ANR	2635653	PrimaryExpression	"""ge"""		2630490	10					
ANR	2635654	PrimaryExpression	"""lt"""		2630490	11					
ANR	2635655	PrimaryExpression	"""gt"""		2630490	12					
ANR	2635656	PrimaryExpression	"""le"""		2630490	13					
ANR	2635657	PrimaryExpression	"""al"""		2630490	14					
ANR	2635658	PrimaryExpression	"""nv"""		2630490	15					
ANR	2635659	PrimaryExpression	0		2630490	16					
ANR	2635660	ExpressionStatement	"r_str_case ( ao -> a [ 0 ] , false )"	2212:3:45954:45982	2630490	3	True				
ANR	2635661	CallExpression	"r_str_case ( ao -> a [ 0 ] , false )"		2630490	0					
ANR	2635662	Callee	r_str_case		2630490	0					
ANR	2635663	Identifier	r_str_case		2630490	0					
ANR	2635664	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2635665	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2635666	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2635667	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635668	Identifier	ao		2630490	0					
ANR	2635669	Identifier	a		2630490	1					
ANR	2635670	PrimaryExpression	0		2630490	1					
ANR	2635671	Argument	false		2630490	1					
ANR	2635672	Identifier	false		2630490	0					
ANR	2635673	ForStatement	for ( i = 0 ; conds [ i ] ; i ++ )		2630490	4					
ANR	2635674	ForInit	i = 0 ;	2213:8:45992:45997	2630490	0	True				
ANR	2635675	AssignmentExpression	i = 0		2630490	0		=			
ANR	2635676	Identifier	i		2630490	0					
ANR	2635677	PrimaryExpression	0		2630490	1					
ANR	2635678	Condition	conds [ i ]	2213:15:45999:46006	2630490	1	True				
ANR	2635679	ArrayIndexing	conds [ i ]		2630490	0					
ANR	2635680	Identifier	conds		2630490	0					
ANR	2635681	Identifier	i		2630490	1					
ANR	2635682	PostIncDecOperationExpression	i ++	2213:25:46009:46011	2630490	2	True				
ANR	2635683	Identifier	i		2630490	0					
ANR	2635684	IncDec	++		2630490	1					
ANR	2635685	CompoundStatement		921:30:20155:20155	2630490	3					
ANR	2635686	IfStatement	"if ( ! ( strcmpnull ( ao -> a [ 0 ] , conds [ i ] ) ) )"		2630490	0					
ANR	2635687	Condition	"! ( strcmpnull ( ao -> a [ 0 ] , conds [ i ] ) )"	2214:8:46024:46056	2630490	0	True				
ANR	2635688	UnaryOperationExpression	"! ( strcmpnull ( ao -> a [ 0 ] , conds [ i ] ) )"		2630490	0					
ANR	2635689	UnaryOperator	!		2630490	0					
ANR	2635690	CallExpression	"strcmpnull ( ao -> a [ 0 ] , conds [ i ] )"		2630490	1					
ANR	2635691	Callee	strcmpnull		2630490	0					
ANR	2635692	Identifier	strcmpnull		2630490	0					
ANR	2635693	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2635694	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2635695	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2635696	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635697	Identifier	ao		2630490	0					
ANR	2635698	Identifier	a		2630490	1					
ANR	2635699	PrimaryExpression	0		2630490	1					
ANR	2635700	Argument	conds [ i ]		2630490	1					
ANR	2635701	ArrayIndexing	conds [ i ]		2630490	0					
ANR	2635702	Identifier	conds		2630490	0					
ANR	2635703	Identifier	i		2630490	1					
ANR	2635704	CompoundStatement		922:43:20200:20200	2630490	1					
ANR	2635705	ExpressionStatement	cond = i	2215:5:46066:46074	2630490	0	True				
ANR	2635706	AssignmentExpression	cond = i		2630490	0		=			
ANR	2635707	Identifier	cond		2630490	0					
ANR	2635708	Identifier	i		2630490	1					
ANR	2635709	BreakStatement	break ;	2216:5:46081:46086	2630490	1	True				
ANR	2635710	IfStatement	if ( i == 16 )		2630490	5					
ANR	2635711	Condition	i == 16	2220:7:46107:46113	2630490	0	True				
ANR	2635712	EqualityExpression	i == 16		2630490	0		==			
ANR	2635713	Identifier	i		2630490	0					
ANR	2635714	PrimaryExpression	16		2630490	1					
ANR	2635715	CompoundStatement		928:16:20257:20257	2630490	1					
ANR	2635716	ReturnStatement	return - 1 ;	2221:4:46122:46131	2630490	0	True				
ANR	2635717	UnaryOperationExpression	- 1		2630490	0					
ANR	2635718	UnaryOperator	-		2630490	0					
ANR	2635719	PrimaryExpression	1		2630490	1					
ANR	2635720	ExpressionStatement	ao -> o = 0x00bf	2223:3:46141:46155	2630490	6	True				
ANR	2635721	AssignmentExpression	ao -> o = 0x00bf		2630490	0		=			
ANR	2635722	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635723	Identifier	ao		2630490	0					
ANR	2635724	Identifier	o		2630490	1					
ANR	2635725	PrimaryExpression	0x00bf		2630490	1					
ANR	2635726	ExpressionStatement	ao -> o |= cond << 12	2224:3:46160:46179	2630490	7	True				
ANR	2635727	AssignmentExpression	ao -> o |= cond << 12		2630490	0		|=			
ANR	2635728	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635729	Identifier	ao		2630490	0					
ANR	2635730	Identifier	o		2630490	1					
ANR	2635731	ShiftExpression	cond << 12		2630490	1		<<			
ANR	2635732	Identifier	cond		2630490	0					
ANR	2635733	PrimaryExpression	12		2630490	1					
ANR	2635734	IdentifierDeclStatement	ut8 nrcs = ( m & 0x30 ) >> 4 ;	2226:3:46185:46211	2630490	8	True				
ANR	2635735	IdentifierDecl	nrcs = ( m & 0x30 ) >> 4		2630490	0					
ANR	2635736	IdentifierDeclType	ut8		2630490	0					
ANR	2635737	Identifier	nrcs		2630490	1					
ANR	2635738	AssignmentExpression	nrcs = ( m & 0x30 ) >> 4		2630490	2		=			
ANR	2635739	Identifier	nrcs		2630490	0					
ANR	2635740	ShiftExpression	( m & 0x30 ) >> 4		2630490	1		>>			
ANR	2635741	BitAndExpression	m & 0x30		2630490	0		&			
ANR	2635742	Identifier	m		2630490	0					
ANR	2635743	PrimaryExpression	0x30		2630490	1					
ANR	2635744	PrimaryExpression	4		2630490	1					
ANR	2635745	IdentifierDeclStatement	ut8 thiset = 0 ;	2227:3:46216:46230	2630490	9	True				
ANR	2635746	IdentifierDecl	thiset = 0		2630490	0					
ANR	2635747	IdentifierDeclType	ut8		2630490	0					
ANR	2635748	Identifier	thiset		2630490	1					
ANR	2635749	AssignmentExpression	thiset = 0		2630490	2		=			
ANR	2635750	Identifier	thiset		2630490	0					
ANR	2635751	PrimaryExpression	0		2630490	1					
ANR	2635752	ForStatement	for ( i = 0 ; i < nrcs ; i ++ )		2630490	10					
ANR	2635753	ForInit	i = 0 ;	2229:8:46241:46246	2630490	0	True				
ANR	2635754	AssignmentExpression	i = 0		2630490	0		=			
ANR	2635755	Identifier	i		2630490	0					
ANR	2635756	PrimaryExpression	0		2630490	1					
ANR	2635757	Condition	i < nrcs	2229:15:46248:46255	2630490	1	True				
ANR	2635758	RelationalExpression	i < nrcs		2630490	0		<			
ANR	2635759	Identifier	i		2630490	0					
ANR	2635760	Identifier	nrcs		2630490	1					
ANR	2635761	PostIncDecOperationExpression	i ++	2229:25:46258:46260	2630490	2	True				
ANR	2635762	Identifier	i		2630490	0					
ANR	2635763	IncDec	++		2630490	1					
ANR	2635764	CompoundStatement		937:30:20404:20404	2630490	3					
ANR	2635765	ExpressionStatement	thiset = ( ( m & ( 1 << ( 3 - i ) ) ) >> ( 3 - i ) )	2230:4:46269:46311	2630490	0	True				
ANR	2635766	AssignmentExpression	thiset = ( ( m & ( 1 << ( 3 - i ) ) ) >> ( 3 - i ) )		2630490	0		=			
ANR	2635767	Identifier	thiset		2630490	0					
ANR	2635768	ShiftExpression	( m & ( 1 << ( 3 - i ) ) ) >> ( 3 - i )		2630490	1		>>			
ANR	2635769	BitAndExpression	m & ( 1 << ( 3 - i ) )		2630490	0		&			
ANR	2635770	Identifier	m		2630490	0					
ANR	2635771	ShiftExpression	1 << ( 3 - i )		2630490	1		<<			
ANR	2635772	PrimaryExpression	1		2630490	0					
ANR	2635773	AdditiveExpression	3 - i		2630490	1		-			
ANR	2635774	PrimaryExpression	3		2630490	0					
ANR	2635775	Identifier	i		2630490	1					
ANR	2635776	AdditiveExpression	3 - i		2630490	1		-			
ANR	2635777	PrimaryExpression	3		2630490	0					
ANR	2635778	Identifier	i		2630490	1					
ANR	2635779	ExpressionStatement	ao -> o |= ( ( cond & 0x1 ) ^ thiset ) << ( 11 - i )	2231:4:46317:46361	2630490	1	True				
ANR	2635780	AssignmentExpression	ao -> o |= ( ( cond & 0x1 ) ^ thiset ) << ( 11 - i )		2630490	0		|=			
ANR	2635781	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635782	Identifier	ao		2630490	0					
ANR	2635783	Identifier	o		2630490	1					
ANR	2635784	ShiftExpression	( ( cond & 0x1 ) ^ thiset ) << ( 11 - i )		2630490	1		<<			
ANR	2635785	ExclusiveOrExpression	( cond & 0x1 ) ^ thiset		2630490	0		^			
ANR	2635786	BitAndExpression	cond & 0x1		2630490	0		&			
ANR	2635787	Identifier	cond		2630490	0					
ANR	2635788	PrimaryExpression	0x1		2630490	1					
ANR	2635789	Identifier	thiset		2630490	1					
ANR	2635790	AdditiveExpression	11 - i		2630490	1		-			
ANR	2635791	PrimaryExpression	11		2630490	0					
ANR	2635792	Identifier	i		2630490	1					
ANR	2635793	ExpressionStatement	ao -> o |= 1 << ( 11 - i )	2233:3:46371:46393	2630490	11	True				
ANR	2635794	AssignmentExpression	ao -> o |= 1 << ( 11 - i )		2630490	0		|=			
ANR	2635795	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635796	Identifier	ao		2630490	0					
ANR	2635797	Identifier	o		2630490	1					
ANR	2635798	ShiftExpression	1 << ( 11 - i )		2630490	1		<<			
ANR	2635799	PrimaryExpression	1		2630490	0					
ANR	2635800	AdditiveExpression	11 - i		2630490	1		-			
ANR	2635801	PrimaryExpression	11		2630490	0					
ANR	2635802	Identifier	i		2630490	1					
ANR	2635803	ReturnStatement	return 2 ;	2234:3:46398:46406	2630490	12	True				
ANR	2635804	PrimaryExpression	2		2630490	0					
ANR	2635805	BreakStatement	break ;	2236:3:46423:46428	2630490	2	True				
ANR	2635806	Label	default :	2237:2:46432:46439	2630490	3	True				
ANR	2635807	Identifier	default		2630490	0					
ANR	2635808	ReturnStatement	return - 1 ;	2238:3:46444:46453	2630490	4	True				
ANR	2635809	UnaryOperationExpression	- 1		2630490	0					
ANR	2635810	UnaryOperator	-		2630490	0					
ANR	2635811	PrimaryExpression	1		2630490	1					
ANR	2635812	ElseStatement	else		2630490	0					
ANR	2635813	IfStatement	"if ( ( m = opmask ( ao -> op , ""ldc"" , TWO_BIT | L_BIT ) ) )"		2630490	0					
ANR	2635814	Condition	"m = opmask ( ao -> op , ""ldc"" , TWO_BIT | L_BIT )"	2241:5:46472:46516	2630490	0	True				
ANR	2635815	AssignmentExpression	"m = opmask ( ao -> op , ""ldc"" , TWO_BIT | L_BIT )"		2630490	0		=			
ANR	2635816	Identifier	m		2630490	0					
ANR	2635817	CallExpression	"opmask ( ao -> op , ""ldc"" , TWO_BIT | L_BIT )"		2630490	1					
ANR	2635818	Callee	opmask		2630490	0					
ANR	2635819	Identifier	opmask		2630490	0					
ANR	2635820	ArgumentList	ao -> op		2630490	1					
ANR	2635821	Argument	ao -> op		2630490	0					
ANR	2635822	PtrMemberAccess	ao -> op		2630490	0					
ANR	2635823	Identifier	ao		2630490	0					
ANR	2635824	Identifier	op		2630490	1					
ANR	2635825	Argument	"""ldc"""		2630490	1					
ANR	2635826	PrimaryExpression	"""ldc"""		2630490	0					
ANR	2635827	Argument	TWO_BIT | L_BIT		2630490	2					
ANR	2635828	InclusiveOrExpression	TWO_BIT | L_BIT		2630490	0		|			
ANR	2635829	Identifier	TWO_BIT		2630490	0					
ANR	2635830	Identifier	L_BIT		2630490	1					
ANR	2635831	CompoundStatement		950:2:20664:20698	2630490	1					
ANR	2635832	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2242:2:46523:46557	2630490	0	True				
ANR	2635833	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2635834	IdentifierDeclType	ut64		2630490	0					
ANR	2635835	Identifier	argt		2630490	1					
ANR	2635836	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2635837	Identifier	argt		2630490	0					
ANR	2635838	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2635839	Callee	thumb_selector		2630490	0					
ANR	2635840	Identifier	thumb_selector		2630490	0					
ANR	2635841	ArgumentList	ao -> a		2630490	1					
ANR	2635842	Argument	ao -> a		2630490	0					
ANR	2635843	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635844	Identifier	ao		2630490	0					
ANR	2635845	Identifier	a		2630490	1					
ANR	2635846	SwitchStatement	switch ( argt )		2630490	1					
ANR	2635847	Condition	argt	2243:10:46569:46572	2630490	0	True				
ANR	2635848	Identifier	argt		2630490	0					
ANR	2635849	CompoundStatement		951:16:20716:20716	2630490	1					
ANR	2635850	Label	case THUMB_COPROC_COREG_BRACKREG_CONSTBRACK :	2244:2:46579:46622	2630490	0	True				
ANR	2635851	Identifier	THUMB_COPROC_COREG_BRACKREG_CONSTBRACK		2630490	0					
ANR	2635852	CompoundStatement		956:3:20886:20920	2630490	1					
ANR	2635853	IdentifierDeclStatement	ut8 proc = getcoproc ( ao -> a [ 0 ] ) ;	2245:3:46629:46660	2630490	0	True				
ANR	2635854	IdentifierDecl	proc = getcoproc ( ao -> a [ 0 ] )		2630490	0					
ANR	2635855	IdentifierDeclType	ut8		2630490	0					
ANR	2635856	Identifier	proc		2630490	1					
ANR	2635857	AssignmentExpression	proc = getcoproc ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2635858	Identifier	proc		2630490	0					
ANR	2635859	CallExpression	getcoproc ( ao -> a [ 0 ] )		2630490	1					
ANR	2635860	Callee	getcoproc		2630490	0					
ANR	2635861	Identifier	getcoproc		2630490	0					
ANR	2635862	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2635863	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2635864	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2635865	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635866	Identifier	ao		2630490	0					
ANR	2635867	Identifier	a		2630490	1					
ANR	2635868	PrimaryExpression	0		2630490	1					
ANR	2635869	IdentifierDeclStatement	ut8 reg1 = getcoprocreg ( ao -> a [ 1 ] ) ;	2246:3:46665:46699	2630490	1	True				
ANR	2635870	IdentifierDecl	reg1 = getcoprocreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2635871	IdentifierDeclType	ut8		2630490	0					
ANR	2635872	Identifier	reg1		2630490	1					
ANR	2635873	AssignmentExpression	reg1 = getcoprocreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2635874	Identifier	reg1		2630490	0					
ANR	2635875	CallExpression	getcoprocreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2635876	Callee	getcoprocreg		2630490	0					
ANR	2635877	Identifier	getcoprocreg		2630490	0					
ANR	2635878	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2635879	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2635880	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2635881	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635882	Identifier	ao		2630490	0					
ANR	2635883	Identifier	a		2630490	1					
ANR	2635884	PrimaryExpression	1		2630490	1					
ANR	2635885	IdentifierDeclStatement	ut8 reg2 = getregmemstart ( ao -> a [ 2 ] ) ;	2247:3:46704:46740	2630490	2	True				
ANR	2635886	IdentifierDecl	reg2 = getregmemstart ( ao -> a [ 2 ] )		2630490	0					
ANR	2635887	IdentifierDeclType	ut8		2630490	0					
ANR	2635888	Identifier	reg2		2630490	1					
ANR	2635889	AssignmentExpression	reg2 = getregmemstart ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2635890	Identifier	reg2		2630490	0					
ANR	2635891	CallExpression	getregmemstart ( ao -> a [ 2 ] )		2630490	1					
ANR	2635892	Callee	getregmemstart		2630490	0					
ANR	2635893	Identifier	getregmemstart		2630490	0					
ANR	2635894	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2635895	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2635896	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2635897	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635898	Identifier	ao		2630490	0					
ANR	2635899	Identifier	a		2630490	1					
ANR	2635900	PrimaryExpression	2		2630490	1					
ANR	2635901	IdentifierDeclStatement	st32 imm = getnummemend ( ao -> a [ 3 ] ) ;	2248:3:46745:46779	2630490	3	True				
ANR	2635902	IdentifierDecl	imm = getnummemend ( ao -> a [ 3 ] )		2630490	0					
ANR	2635903	IdentifierDeclType	st32		2630490	0					
ANR	2635904	Identifier	imm		2630490	1					
ANR	2635905	AssignmentExpression	imm = getnummemend ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2635906	Identifier	imm		2630490	0					
ANR	2635907	CallExpression	getnummemend ( ao -> a [ 3 ] )		2630490	1					
ANR	2635908	Callee	getnummemend		2630490	0					
ANR	2635909	Identifier	getnummemend		2630490	0					
ANR	2635910	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2635911	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2635912	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2635913	PtrMemberAccess	ao -> a		2630490	0					
ANR	2635914	Identifier	ao		2630490	0					
ANR	2635915	Identifier	a		2630490	1					
ANR	2635916	PrimaryExpression	3		2630490	1					
ANR	2635917	ExpressionStatement	ao -> o = 0x10ed0000	2249:3:46784:46802	2630490	4	True				
ANR	2635918	AssignmentExpression	ao -> o = 0x10ed0000		2630490	0		=			
ANR	2635919	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635920	Identifier	ao		2630490	0					
ANR	2635921	Identifier	o		2630490	1					
ANR	2635922	PrimaryExpression	0x10ed0000		2630490	1					
ANR	2635923	IfStatement	if ( m & L_BIT )		2630490	5					
ANR	2635924	Condition	m & L_BIT	2250:7:46811:46819	2630490	0	True				
ANR	2635925	BitAndExpression	m & L_BIT		2630490	0		&			
ANR	2635926	Identifier	m		2630490	0					
ANR	2635927	Identifier	L_BIT		2630490	1					
ANR	2635928	CompoundStatement		958:18:20963:20963	2630490	1					
ANR	2635929	ExpressionStatement	ao -> o |= 1 << 30	2251:4:46828:46844	2630490	0	True				
ANR	2635930	AssignmentExpression	ao -> o |= 1 << 30		2630490	0		|=			
ANR	2635931	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635932	Identifier	ao		2630490	0					
ANR	2635933	Identifier	o		2630490	1					
ANR	2635934	ShiftExpression	1 << 30		2630490	1		<<			
ANR	2635935	PrimaryExpression	1		2630490	0					
ANR	2635936	PrimaryExpression	30		2630490	1					
ANR	2635937	IfStatement	if ( m & TWO_BIT )		2630490	6					
ANR	2635938	Condition	m & TWO_BIT	2253:7:46858:46868	2630490	0	True				
ANR	2635939	BitAndExpression	m & TWO_BIT		2630490	0		&			
ANR	2635940	Identifier	m		2630490	0					
ANR	2635941	Identifier	TWO_BIT		2630490	1					
ANR	2635942	CompoundStatement		961:20:21012:21012	2630490	1					
ANR	2635943	ExpressionStatement	ao -> o |= 1 << 20	2254:4:46877:46893	2630490	0	True				
ANR	2635944	AssignmentExpression	ao -> o |= 1 << 20		2630490	0		|=			
ANR	2635945	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635946	Identifier	ao		2630490	0					
ANR	2635947	Identifier	o		2630490	1					
ANR	2635948	ShiftExpression	1 << 20		2630490	1		<<			
ANR	2635949	PrimaryExpression	1		2630490	0					
ANR	2635950	PrimaryExpression	20		2630490	1					
ANR	2635951	IfStatement	if ( imm < 0 )		2630490	7					
ANR	2635952	Condition	imm < 0	2256:7:46907:46913	2630490	0	True				
ANR	2635953	RelationalExpression	imm < 0		2630490	0		<			
ANR	2635954	Identifier	imm		2630490	0					
ANR	2635955	PrimaryExpression	0		2630490	1					
ANR	2635956	CompoundStatement		964:16:21057:21057	2630490	1					
ANR	2635957	ExpressionStatement	imm = - imm	2257:4:46922:46932	2630490	0	True				
ANR	2635958	AssignmentExpression	imm = - imm		2630490	0		=			
ANR	2635959	Identifier	imm		2630490	0					
ANR	2635960	UnaryOperationExpression	- imm		2630490	1					
ANR	2635961	UnaryOperator	-		2630490	0					
ANR	2635962	Identifier	imm		2630490	1					
ANR	2635963	ElseStatement	else		2630490	0					
ANR	2635964	CompoundStatement		966:10:21085:21085	2630490	0					
ANR	2635965	ExpressionStatement	ao -> o |= 1 << 31	2259:4:46950:46966	2630490	0	True				
ANR	2635966	AssignmentExpression	ao -> o |= 1 << 31		2630490	0		|=			
ANR	2635967	PtrMemberAccess	ao -> o		2630490	0					
ANR	2635968	Identifier	ao		2630490	0					
ANR	2635969	Identifier	o		2630490	1					
ANR	2635970	ShiftExpression	1 << 31		2630490	1		<<			
ANR	2635971	PrimaryExpression	1		2630490	0					
ANR	2635972	PrimaryExpression	31		2630490	1					
ANR	2635973	IfStatement	if ( ( proc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 ) )		2630490	8					
ANR	2635974	Condition	( proc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )	2261:7:46984:47058	2630490	0	True				
ANR	2635975	OrExpression	( proc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )		2630490	0		||			
ANR	2635976	RelationalExpression	proc > 15		2630490	0		>			
ANR	2635977	Identifier	proc		2630490	0					
ANR	2635978	PrimaryExpression	15		2630490	1					
ANR	2635979	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )		2630490	1		||			
ANR	2635980	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2635981	Identifier	reg1		2630490	0					
ANR	2635982	PrimaryExpression	15		2630490	1					
ANR	2635983	OrExpression	( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )		2630490	1		||			
ANR	2635984	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2635985	Identifier	reg2		2630490	0					
ANR	2635986	PrimaryExpression	15		2630490	1					
ANR	2635987	OrExpression	( imm > 1024 ) || ( imm % 4 != 0 )		2630490	1		||			
ANR	2635988	RelationalExpression	imm > 1024		2630490	0		>			
ANR	2635989	Identifier	imm		2630490	0					
ANR	2635990	PrimaryExpression	1024		2630490	1					
ANR	2635991	EqualityExpression	imm % 4 != 0		2630490	1		!=			
ANR	2635992	MultiplicativeExpression	imm % 4		2630490	0		%			
ANR	2635993	Identifier	imm		2630490	0					
ANR	2635994	PrimaryExpression	4		2630490	1					
ANR	2635995	PrimaryExpression	0		2630490	1					
ANR	2635996	CompoundStatement		969:84:21202:21202	2630490	1					
ANR	2635997	ReturnStatement	return - 1 ;	2262:4:47067:47076	2630490	0	True				
ANR	2635998	UnaryOperationExpression	- 1		2630490	0					
ANR	2635999	UnaryOperator	-		2630490	0					
ANR	2636000	PrimaryExpression	1		2630490	1					
ANR	2636001	ExpressionStatement	ao -> o |= proc	2264:3:47086:47099	2630490	9	True				
ANR	2636002	AssignmentExpression	ao -> o |= proc		2630490	0		|=			
ANR	2636003	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636004	Identifier	ao		2630490	0					
ANR	2636005	Identifier	o		2630490	1					
ANR	2636006	Identifier	proc		2630490	1					
ANR	2636007	ExpressionStatement	ao -> o |= reg1 << 4	2265:3:47104:47122	2630490	10	True				
ANR	2636008	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2636009	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636010	Identifier	ao		2630490	0					
ANR	2636011	Identifier	o		2630490	1					
ANR	2636012	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2636013	Identifier	reg1		2630490	0					
ANR	2636014	PrimaryExpression	4		2630490	1					
ANR	2636015	ExpressionStatement	ao -> o |= ( imm >> 2 ) << 8	2266:3:47127:47151	2630490	11	True				
ANR	2636016	AssignmentExpression	ao -> o |= ( imm >> 2 ) << 8		2630490	0		|=			
ANR	2636017	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636018	Identifier	ao		2630490	0					
ANR	2636019	Identifier	o		2630490	1					
ANR	2636020	ShiftExpression	( imm >> 2 ) << 8		2630490	1		<<			
ANR	2636021	ShiftExpression	imm >> 2		2630490	0		>>			
ANR	2636022	Identifier	imm		2630490	0					
ANR	2636023	PrimaryExpression	2		2630490	1					
ANR	2636024	PrimaryExpression	8		2630490	1					
ANR	2636025	ExpressionStatement	ao -> o |= reg2 << 24	2267:3:47156:47175	2630490	12	True				
ANR	2636026	AssignmentExpression	ao -> o |= reg2 << 24		2630490	0		|=			
ANR	2636027	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636028	Identifier	ao		2630490	0					
ANR	2636029	Identifier	o		2630490	1					
ANR	2636030	ShiftExpression	reg2 << 24		2630490	1		<<			
ANR	2636031	Identifier	reg2		2630490	0					
ANR	2636032	PrimaryExpression	24		2630490	1					
ANR	2636033	ReturnStatement	return 4 ;	2268:3:47180:47188	2630490	13	True				
ANR	2636034	PrimaryExpression	4		2630490	0					
ANR	2636035	BreakStatement	break ;	2270:3:47205:47210	2630490	2	True				
ANR	2636036	Label	case THUMB_COPROC_COREG_BRACKREGBRACK :	2271:2:47214:47251	2630490	3	True				
ANR	2636037	Identifier	THUMB_COPROC_COREG_BRACKREGBRACK		2630490	0					
ANR	2636038	ExpressionStatement	"ao -> a [ 3 ] = ""0"""	2272:3:47256:47270	2630490	4	True				
ANR	2636039	AssignmentExpression	"ao -> a [ 3 ] = ""0"""		2630490	0		=			
ANR	2636040	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2636041	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636042	Identifier	ao		2630490	0					
ANR	2636043	Identifier	a		2630490	1					
ANR	2636044	PrimaryExpression	3		2630490	1					
ANR	2636045	PrimaryExpression	"""0"""		2630490	1					
ANR	2636046	Label	case THUMB_COPROC_COREG_BRACKREGBRACK_CONST :	2274:2:47304:47347	2630490	5	True				
ANR	2636047	Identifier	THUMB_COPROC_COREG_BRACKREGBRACK_CONST		2630490	0					
ANR	2636048	CompoundStatement		986:3:21614:21642	2630490	6					
ANR	2636049	IdentifierDeclStatement	ut8 proc = getcoproc ( ao -> a [ 0 ] ) ;	2275:3:47354:47385	2630490	0	True				
ANR	2636050	IdentifierDecl	proc = getcoproc ( ao -> a [ 0 ] )		2630490	0					
ANR	2636051	IdentifierDeclType	ut8		2630490	0					
ANR	2636052	Identifier	proc		2630490	1					
ANR	2636053	AssignmentExpression	proc = getcoproc ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2636054	Identifier	proc		2630490	0					
ANR	2636055	CallExpression	getcoproc ( ao -> a [ 0 ] )		2630490	1					
ANR	2636056	Callee	getcoproc		2630490	0					
ANR	2636057	Identifier	getcoproc		2630490	0					
ANR	2636058	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2636059	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2636060	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2636061	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636062	Identifier	ao		2630490	0					
ANR	2636063	Identifier	a		2630490	1					
ANR	2636064	PrimaryExpression	0		2630490	1					
ANR	2636065	IdentifierDeclStatement	ut8 reg1 = getcoprocreg ( ao -> a [ 1 ] ) ;	2276:3:47390:47424	2630490	1	True				
ANR	2636066	IdentifierDecl	reg1 = getcoprocreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2636067	IdentifierDeclType	ut8		2630490	0					
ANR	2636068	Identifier	reg1		2630490	1					
ANR	2636069	AssignmentExpression	reg1 = getcoprocreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2636070	Identifier	reg1		2630490	0					
ANR	2636071	CallExpression	getcoprocreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2636072	Callee	getcoprocreg		2630490	0					
ANR	2636073	Identifier	getcoprocreg		2630490	0					
ANR	2636074	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2636075	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2636076	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2636077	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636078	Identifier	ao		2630490	0					
ANR	2636079	Identifier	a		2630490	1					
ANR	2636080	PrimaryExpression	1		2630490	1					
ANR	2636081	IdentifierDeclStatement	ut8 reg2 = getregmemstartend ( ao -> a [ 2 ] ) ;	2277:3:47429:47468	2630490	2	True				
ANR	2636082	IdentifierDecl	reg2 = getregmemstartend ( ao -> a [ 2 ] )		2630490	0					
ANR	2636083	IdentifierDeclType	ut8		2630490	0					
ANR	2636084	Identifier	reg2		2630490	1					
ANR	2636085	AssignmentExpression	reg2 = getregmemstartend ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2636086	Identifier	reg2		2630490	0					
ANR	2636087	CallExpression	getregmemstartend ( ao -> a [ 2 ] )		2630490	1					
ANR	2636088	Callee	getregmemstartend		2630490	0					
ANR	2636089	Identifier	getregmemstartend		2630490	0					
ANR	2636090	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2636091	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2636092	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2636093	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636094	Identifier	ao		2630490	0					
ANR	2636095	Identifier	a		2630490	1					
ANR	2636096	PrimaryExpression	2		2630490	1					
ANR	2636097	IdentifierDeclStatement	st32 imm = getnum ( ao -> a [ 3 ] ) ;	2278:3:47473:47501	2630490	3	True				
ANR	2636098	IdentifierDecl	imm = getnum ( ao -> a [ 3 ] )		2630490	0					
ANR	2636099	IdentifierDeclType	st32		2630490	0					
ANR	2636100	Identifier	imm		2630490	1					
ANR	2636101	AssignmentExpression	imm = getnum ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2636102	Identifier	imm		2630490	0					
ANR	2636103	CallExpression	getnum ( ao -> a [ 3 ] )		2630490	1					
ANR	2636104	Callee	getnum		2630490	0					
ANR	2636105	Identifier	getnum		2630490	0					
ANR	2636106	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2636107	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2636108	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2636109	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636110	Identifier	ao		2630490	0					
ANR	2636111	Identifier	a		2630490	1					
ANR	2636112	PrimaryExpression	3		2630490	1					
ANR	2636113	ExpressionStatement	ao -> o = 0x30ec0000	2279:3:47506:47524	2630490	4	True				
ANR	2636114	AssignmentExpression	ao -> o = 0x30ec0000		2630490	0		=			
ANR	2636115	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636116	Identifier	ao		2630490	0					
ANR	2636117	Identifier	o		2630490	1					
ANR	2636118	PrimaryExpression	0x30ec0000		2630490	1					
ANR	2636119	IfStatement	if ( m & L_BIT )		2630490	5					
ANR	2636120	Condition	m & L_BIT	2280:7:47533:47541	2630490	0	True				
ANR	2636121	BitAndExpression	m & L_BIT		2630490	0		&			
ANR	2636122	Identifier	m		2630490	0					
ANR	2636123	Identifier	L_BIT		2630490	1					
ANR	2636124	CompoundStatement		988:18:21685:21685	2630490	1					
ANR	2636125	ExpressionStatement	ao -> o |= 1 << 30	2281:4:47550:47566	2630490	0	True				
ANR	2636126	AssignmentExpression	ao -> o |= 1 << 30		2630490	0		|=			
ANR	2636127	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636128	Identifier	ao		2630490	0					
ANR	2636129	Identifier	o		2630490	1					
ANR	2636130	ShiftExpression	1 << 30		2630490	1		<<			
ANR	2636131	PrimaryExpression	1		2630490	0					
ANR	2636132	PrimaryExpression	30		2630490	1					
ANR	2636133	IfStatement	if ( m & TWO_BIT )		2630490	6					
ANR	2636134	Condition	m & TWO_BIT	2283:7:47580:47590	2630490	0	True				
ANR	2636135	BitAndExpression	m & TWO_BIT		2630490	0		&			
ANR	2636136	Identifier	m		2630490	0					
ANR	2636137	Identifier	TWO_BIT		2630490	1					
ANR	2636138	CompoundStatement		991:20:21734:21734	2630490	1					
ANR	2636139	ExpressionStatement	ao -> o |= 1 << 20	2284:4:47599:47615	2630490	0	True				
ANR	2636140	AssignmentExpression	ao -> o |= 1 << 20		2630490	0		|=			
ANR	2636141	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636142	Identifier	ao		2630490	0					
ANR	2636143	Identifier	o		2630490	1					
ANR	2636144	ShiftExpression	1 << 20		2630490	1		<<			
ANR	2636145	PrimaryExpression	1		2630490	0					
ANR	2636146	PrimaryExpression	20		2630490	1					
ANR	2636147	IfStatement	if ( imm < 0 )		2630490	7					
ANR	2636148	Condition	imm < 0	2286:7:47629:47635	2630490	0	True				
ANR	2636149	RelationalExpression	imm < 0		2630490	0		<			
ANR	2636150	Identifier	imm		2630490	0					
ANR	2636151	PrimaryExpression	0		2630490	1					
ANR	2636152	CompoundStatement		994:16:21779:21779	2630490	1					
ANR	2636153	ExpressionStatement	imm = - imm	2287:4:47644:47654	2630490	0	True				
ANR	2636154	AssignmentExpression	imm = - imm		2630490	0		=			
ANR	2636155	Identifier	imm		2630490	0					
ANR	2636156	UnaryOperationExpression	- imm		2630490	1					
ANR	2636157	UnaryOperator	-		2630490	0					
ANR	2636158	Identifier	imm		2630490	1					
ANR	2636159	ElseStatement	else		2630490	0					
ANR	2636160	CompoundStatement		996:10:21807:21807	2630490	0					
ANR	2636161	ExpressionStatement	ao -> o |= 1 << 31	2289:4:47672:47688	2630490	0	True				
ANR	2636162	AssignmentExpression	ao -> o |= 1 << 31		2630490	0		|=			
ANR	2636163	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636164	Identifier	ao		2630490	0					
ANR	2636165	Identifier	o		2630490	1					
ANR	2636166	ShiftExpression	1 << 31		2630490	1		<<			
ANR	2636167	PrimaryExpression	1		2630490	0					
ANR	2636168	PrimaryExpression	31		2630490	1					
ANR	2636169	IfStatement	if ( ( proc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 ) )		2630490	8					
ANR	2636170	Condition	( proc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )	2291:7:47706:47780	2630490	0	True				
ANR	2636171	OrExpression	( proc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )		2630490	0		||			
ANR	2636172	RelationalExpression	proc > 15		2630490	0		>			
ANR	2636173	Identifier	proc		2630490	0					
ANR	2636174	PrimaryExpression	15		2630490	1					
ANR	2636175	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )		2630490	1		||			
ANR	2636176	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2636177	Identifier	reg1		2630490	0					
ANR	2636178	PrimaryExpression	15		2630490	1					
ANR	2636179	OrExpression	( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )		2630490	1		||			
ANR	2636180	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2636181	Identifier	reg2		2630490	0					
ANR	2636182	PrimaryExpression	15		2630490	1					
ANR	2636183	OrExpression	( imm > 1024 ) || ( imm % 4 != 0 )		2630490	1		||			
ANR	2636184	RelationalExpression	imm > 1024		2630490	0		>			
ANR	2636185	Identifier	imm		2630490	0					
ANR	2636186	PrimaryExpression	1024		2630490	1					
ANR	2636187	EqualityExpression	imm % 4 != 0		2630490	1		!=			
ANR	2636188	MultiplicativeExpression	imm % 4		2630490	0		%			
ANR	2636189	Identifier	imm		2630490	0					
ANR	2636190	PrimaryExpression	4		2630490	1					
ANR	2636191	PrimaryExpression	0		2630490	1					
ANR	2636192	CompoundStatement		999:84:21924:21924	2630490	1					
ANR	2636193	ReturnStatement	return - 1 ;	2292:4:47789:47798	2630490	0	True				
ANR	2636194	UnaryOperationExpression	- 1		2630490	0					
ANR	2636195	UnaryOperator	-		2630490	0					
ANR	2636196	PrimaryExpression	1		2630490	1					
ANR	2636197	ExpressionStatement	ao -> o |= proc	2294:3:47808:47821	2630490	9	True				
ANR	2636198	AssignmentExpression	ao -> o |= proc		2630490	0		|=			
ANR	2636199	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636200	Identifier	ao		2630490	0					
ANR	2636201	Identifier	o		2630490	1					
ANR	2636202	Identifier	proc		2630490	1					
ANR	2636203	ExpressionStatement	ao -> o |= reg1 << 4	2295:3:47826:47844	2630490	10	True				
ANR	2636204	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2636205	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636206	Identifier	ao		2630490	0					
ANR	2636207	Identifier	o		2630490	1					
ANR	2636208	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2636209	Identifier	reg1		2630490	0					
ANR	2636210	PrimaryExpression	4		2630490	1					
ANR	2636211	ExpressionStatement	ao -> o |= ( imm >> 2 ) << 8	2296:3:47849:47873	2630490	11	True				
ANR	2636212	AssignmentExpression	ao -> o |= ( imm >> 2 ) << 8		2630490	0		|=			
ANR	2636213	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636214	Identifier	ao		2630490	0					
ANR	2636215	Identifier	o		2630490	1					
ANR	2636216	ShiftExpression	( imm >> 2 ) << 8		2630490	1		<<			
ANR	2636217	ShiftExpression	imm >> 2		2630490	0		>>			
ANR	2636218	Identifier	imm		2630490	0					
ANR	2636219	PrimaryExpression	2		2630490	1					
ANR	2636220	PrimaryExpression	8		2630490	1					
ANR	2636221	ExpressionStatement	ao -> o |= reg2 << 24	2297:3:47878:47897	2630490	12	True				
ANR	2636222	AssignmentExpression	ao -> o |= reg2 << 24		2630490	0		|=			
ANR	2636223	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636224	Identifier	ao		2630490	0					
ANR	2636225	Identifier	o		2630490	1					
ANR	2636226	ShiftExpression	reg2 << 24		2630490	1		<<			
ANR	2636227	Identifier	reg2		2630490	0					
ANR	2636228	PrimaryExpression	24		2630490	1					
ANR	2636229	ReturnStatement	return 4 ;	2298:3:47902:47910	2630490	13	True				
ANR	2636230	PrimaryExpression	4		2630490	0					
ANR	2636231	BreakStatement	break ;	2300:3:47927:47932	2630490	7	True				
ANR	2636232	Label	case THUMB_COPROC_COREG_BRACKREG_CONSTBRACKBANG :	2301:2:47936:47983	2630490	8	True				
ANR	2636233	Identifier	THUMB_COPROC_COREG_BRACKREG_CONSTBRACKBANG		2630490	0					
ANR	2636234	CompoundStatement		1013:3:22247:22285	2630490	9					
ANR	2636235	IdentifierDeclStatement	ut8 proc = getcoproc ( ao -> a [ 0 ] ) ;	2302:3:47990:48021	2630490	0	True				
ANR	2636236	IdentifierDecl	proc = getcoproc ( ao -> a [ 0 ] )		2630490	0					
ANR	2636237	IdentifierDeclType	ut8		2630490	0					
ANR	2636238	Identifier	proc		2630490	1					
ANR	2636239	AssignmentExpression	proc = getcoproc ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2636240	Identifier	proc		2630490	0					
ANR	2636241	CallExpression	getcoproc ( ao -> a [ 0 ] )		2630490	1					
ANR	2636242	Callee	getcoproc		2630490	0					
ANR	2636243	Identifier	getcoproc		2630490	0					
ANR	2636244	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2636245	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2636246	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2636247	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636248	Identifier	ao		2630490	0					
ANR	2636249	Identifier	a		2630490	1					
ANR	2636250	PrimaryExpression	0		2630490	1					
ANR	2636251	IdentifierDeclStatement	ut8 reg1 = getcoprocreg ( ao -> a [ 1 ] ) ;	2303:3:48026:48060	2630490	1	True				
ANR	2636252	IdentifierDecl	reg1 = getcoprocreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2636253	IdentifierDeclType	ut8		2630490	0					
ANR	2636254	Identifier	reg1		2630490	1					
ANR	2636255	AssignmentExpression	reg1 = getcoprocreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2636256	Identifier	reg1		2630490	0					
ANR	2636257	CallExpression	getcoprocreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2636258	Callee	getcoprocreg		2630490	0					
ANR	2636259	Identifier	getcoprocreg		2630490	0					
ANR	2636260	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2636261	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2636262	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2636263	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636264	Identifier	ao		2630490	0					
ANR	2636265	Identifier	a		2630490	1					
ANR	2636266	PrimaryExpression	1		2630490	1					
ANR	2636267	IdentifierDeclStatement	ut8 reg2 = getregmemstart ( ao -> a [ 2 ] ) ;	2304:3:48065:48101	2630490	2	True				
ANR	2636268	IdentifierDecl	reg2 = getregmemstart ( ao -> a [ 2 ] )		2630490	0					
ANR	2636269	IdentifierDeclType	ut8		2630490	0					
ANR	2636270	Identifier	reg2		2630490	1					
ANR	2636271	AssignmentExpression	reg2 = getregmemstart ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2636272	Identifier	reg2		2630490	0					
ANR	2636273	CallExpression	getregmemstart ( ao -> a [ 2 ] )		2630490	1					
ANR	2636274	Callee	getregmemstart		2630490	0					
ANR	2636275	Identifier	getregmemstart		2630490	0					
ANR	2636276	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2636277	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2636278	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2636279	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636280	Identifier	ao		2630490	0					
ANR	2636281	Identifier	a		2630490	1					
ANR	2636282	PrimaryExpression	2		2630490	1					
ANR	2636283	IdentifierDeclStatement	st32 imm = getnummemendbang ( ao -> a [ 3 ] ) ;	2305:3:48106:48144	2630490	3	True				
ANR	2636284	IdentifierDecl	imm = getnummemendbang ( ao -> a [ 3 ] )		2630490	0					
ANR	2636285	IdentifierDeclType	st32		2630490	0					
ANR	2636286	Identifier	imm		2630490	1					
ANR	2636287	AssignmentExpression	imm = getnummemendbang ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2636288	Identifier	imm		2630490	0					
ANR	2636289	CallExpression	getnummemendbang ( ao -> a [ 3 ] )		2630490	1					
ANR	2636290	Callee	getnummemendbang		2630490	0					
ANR	2636291	Identifier	getnummemendbang		2630490	0					
ANR	2636292	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2636293	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2636294	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2636295	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636296	Identifier	ao		2630490	0					
ANR	2636297	Identifier	a		2630490	1					
ANR	2636298	PrimaryExpression	3		2630490	1					
ANR	2636299	ExpressionStatement	ao -> o = 0x30ed0000	2306:3:48149:48167	2630490	4	True				
ANR	2636300	AssignmentExpression	ao -> o = 0x30ed0000		2630490	0		=			
ANR	2636301	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636302	Identifier	ao		2630490	0					
ANR	2636303	Identifier	o		2630490	1					
ANR	2636304	PrimaryExpression	0x30ed0000		2630490	1					
ANR	2636305	IfStatement	if ( m & L_BIT )		2630490	5					
ANR	2636306	Condition	m & L_BIT	2307:7:48176:48184	2630490	0	True				
ANR	2636307	BitAndExpression	m & L_BIT		2630490	0		&			
ANR	2636308	Identifier	m		2630490	0					
ANR	2636309	Identifier	L_BIT		2630490	1					
ANR	2636310	CompoundStatement		1015:18:22328:22328	2630490	1					
ANR	2636311	ExpressionStatement	ao -> o |= 1 << 30	2308:4:48193:48209	2630490	0	True				
ANR	2636312	AssignmentExpression	ao -> o |= 1 << 30		2630490	0		|=			
ANR	2636313	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636314	Identifier	ao		2630490	0					
ANR	2636315	Identifier	o		2630490	1					
ANR	2636316	ShiftExpression	1 << 30		2630490	1		<<			
ANR	2636317	PrimaryExpression	1		2630490	0					
ANR	2636318	PrimaryExpression	30		2630490	1					
ANR	2636319	IfStatement	if ( m & TWO_BIT )		2630490	6					
ANR	2636320	Condition	m & TWO_BIT	2310:7:48223:48233	2630490	0	True				
ANR	2636321	BitAndExpression	m & TWO_BIT		2630490	0		&			
ANR	2636322	Identifier	m		2630490	0					
ANR	2636323	Identifier	TWO_BIT		2630490	1					
ANR	2636324	CompoundStatement		1018:20:22377:22377	2630490	1					
ANR	2636325	ExpressionStatement	ao -> o |= 1 << 20	2311:4:48242:48258	2630490	0	True				
ANR	2636326	AssignmentExpression	ao -> o |= 1 << 20		2630490	0		|=			
ANR	2636327	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636328	Identifier	ao		2630490	0					
ANR	2636329	Identifier	o		2630490	1					
ANR	2636330	ShiftExpression	1 << 20		2630490	1		<<			
ANR	2636331	PrimaryExpression	1		2630490	0					
ANR	2636332	PrimaryExpression	20		2630490	1					
ANR	2636333	IfStatement	if ( imm < 0 )		2630490	7					
ANR	2636334	Condition	imm < 0	2313:7:48272:48278	2630490	0	True				
ANR	2636335	RelationalExpression	imm < 0		2630490	0		<			
ANR	2636336	Identifier	imm		2630490	0					
ANR	2636337	PrimaryExpression	0		2630490	1					
ANR	2636338	CompoundStatement		1021:16:22422:22422	2630490	1					
ANR	2636339	ExpressionStatement	imm = - imm	2314:4:48287:48297	2630490	0	True				
ANR	2636340	AssignmentExpression	imm = - imm		2630490	0		=			
ANR	2636341	Identifier	imm		2630490	0					
ANR	2636342	UnaryOperationExpression	- imm		2630490	1					
ANR	2636343	UnaryOperator	-		2630490	0					
ANR	2636344	Identifier	imm		2630490	1					
ANR	2636345	ElseStatement	else		2630490	0					
ANR	2636346	CompoundStatement		1023:10:22450:22450	2630490	0					
ANR	2636347	ExpressionStatement	ao -> o |= 1 << 31	2316:4:48315:48331	2630490	0	True				
ANR	2636348	AssignmentExpression	ao -> o |= 1 << 31		2630490	0		|=			
ANR	2636349	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636350	Identifier	ao		2630490	0					
ANR	2636351	Identifier	o		2630490	1					
ANR	2636352	ShiftExpression	1 << 31		2630490	1		<<			
ANR	2636353	PrimaryExpression	1		2630490	0					
ANR	2636354	PrimaryExpression	31		2630490	1					
ANR	2636355	IfStatement	if ( ( proc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 ) )		2630490	8					
ANR	2636356	Condition	( proc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )	2318:7:48349:48423	2630490	0	True				
ANR	2636357	OrExpression	( proc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )		2630490	0		||			
ANR	2636358	RelationalExpression	proc > 15		2630490	0		>			
ANR	2636359	Identifier	proc		2630490	0					
ANR	2636360	PrimaryExpression	15		2630490	1					
ANR	2636361	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )		2630490	1		||			
ANR	2636362	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2636363	Identifier	reg1		2630490	0					
ANR	2636364	PrimaryExpression	15		2630490	1					
ANR	2636365	OrExpression	( reg2 > 15 ) || ( imm > 1024 ) || ( imm % 4 != 0 )		2630490	1		||			
ANR	2636366	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2636367	Identifier	reg2		2630490	0					
ANR	2636368	PrimaryExpression	15		2630490	1					
ANR	2636369	OrExpression	( imm > 1024 ) || ( imm % 4 != 0 )		2630490	1		||			
ANR	2636370	RelationalExpression	imm > 1024		2630490	0		>			
ANR	2636371	Identifier	imm		2630490	0					
ANR	2636372	PrimaryExpression	1024		2630490	1					
ANR	2636373	EqualityExpression	imm % 4 != 0		2630490	1		!=			
ANR	2636374	MultiplicativeExpression	imm % 4		2630490	0		%			
ANR	2636375	Identifier	imm		2630490	0					
ANR	2636376	PrimaryExpression	4		2630490	1					
ANR	2636377	PrimaryExpression	0		2630490	1					
ANR	2636378	CompoundStatement		1026:84:22567:22567	2630490	1					
ANR	2636379	ReturnStatement	return - 1 ;	2319:4:48432:48441	2630490	0	True				
ANR	2636380	UnaryOperationExpression	- 1		2630490	0					
ANR	2636381	UnaryOperator	-		2630490	0					
ANR	2636382	PrimaryExpression	1		2630490	1					
ANR	2636383	ExpressionStatement	ao -> o |= proc	2321:3:48451:48464	2630490	9	True				
ANR	2636384	AssignmentExpression	ao -> o |= proc		2630490	0		|=			
ANR	2636385	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636386	Identifier	ao		2630490	0					
ANR	2636387	Identifier	o		2630490	1					
ANR	2636388	Identifier	proc		2630490	1					
ANR	2636389	ExpressionStatement	ao -> o |= reg1 << 4	2322:3:48469:48487	2630490	10	True				
ANR	2636390	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2636391	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636392	Identifier	ao		2630490	0					
ANR	2636393	Identifier	o		2630490	1					
ANR	2636394	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2636395	Identifier	reg1		2630490	0					
ANR	2636396	PrimaryExpression	4		2630490	1					
ANR	2636397	ExpressionStatement	ao -> o |= ( imm >> 2 ) << 8	2323:3:48492:48516	2630490	11	True				
ANR	2636398	AssignmentExpression	ao -> o |= ( imm >> 2 ) << 8		2630490	0		|=			
ANR	2636399	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636400	Identifier	ao		2630490	0					
ANR	2636401	Identifier	o		2630490	1					
ANR	2636402	ShiftExpression	( imm >> 2 ) << 8		2630490	1		<<			
ANR	2636403	ShiftExpression	imm >> 2		2630490	0		>>			
ANR	2636404	Identifier	imm		2630490	0					
ANR	2636405	PrimaryExpression	2		2630490	1					
ANR	2636406	PrimaryExpression	8		2630490	1					
ANR	2636407	ExpressionStatement	ao -> o |= reg2 << 24	2324:3:48521:48540	2630490	12	True				
ANR	2636408	AssignmentExpression	ao -> o |= reg2 << 24		2630490	0		|=			
ANR	2636409	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636410	Identifier	ao		2630490	0					
ANR	2636411	Identifier	o		2630490	1					
ANR	2636412	ShiftExpression	reg2 << 24		2630490	1		<<			
ANR	2636413	Identifier	reg2		2630490	0					
ANR	2636414	PrimaryExpression	24		2630490	1					
ANR	2636415	ReturnStatement	return 4 ;	2325:3:48545:48553	2630490	13	True				
ANR	2636416	PrimaryExpression	4		2630490	0					
ANR	2636417	BreakStatement	break ;	2327:3:48570:48575	2630490	10	True				
ANR	2636418	Label	default :	2328:2:48579:48586	2630490	11	True				
ANR	2636419	Identifier	default		2630490	0					
ANR	2636420	ReturnStatement	return - 1 ;	2329:3:48591:48600	2630490	12	True				
ANR	2636421	UnaryOperationExpression	- 1		2630490	0					
ANR	2636422	UnaryOperator	-		2630490	0					
ANR	2636423	PrimaryExpression	1		2630490	1					
ANR	2636424	ElseStatement	else		2630490	0					
ANR	2636425	IfStatement	"if ( ( m = opmask ( ao -> op , ""ldm"" , DB_BIT | EA_BIT | IA_BIT | FD_BIT ) ) )"		2630490	0					
ANR	2636426	Condition	"m = opmask ( ao -> op , ""ldm"" , DB_BIT | EA_BIT | IA_BIT | FD_BIT )"	2332:5:48619:48681	2630490	0	True				
ANR	2636427	AssignmentExpression	"m = opmask ( ao -> op , ""ldm"" , DB_BIT | EA_BIT | IA_BIT | FD_BIT )"		2630490	0		=			
ANR	2636428	Identifier	m		2630490	0					
ANR	2636429	CallExpression	"opmask ( ao -> op , ""ldm"" , DB_BIT | EA_BIT | IA_BIT | FD_BIT )"		2630490	1					
ANR	2636430	Callee	opmask		2630490	0					
ANR	2636431	Identifier	opmask		2630490	0					
ANR	2636432	ArgumentList	ao -> op		2630490	1					
ANR	2636433	Argument	ao -> op		2630490	0					
ANR	2636434	PtrMemberAccess	ao -> op		2630490	0					
ANR	2636435	Identifier	ao		2630490	0					
ANR	2636436	Identifier	op		2630490	1					
ANR	2636437	Argument	"""ldm"""		2630490	1					
ANR	2636438	PrimaryExpression	"""ldm"""		2630490	0					
ANR	2636439	Argument	DB_BIT | EA_BIT | IA_BIT | FD_BIT		2630490	2					
ANR	2636440	InclusiveOrExpression	DB_BIT | EA_BIT | IA_BIT | FD_BIT		2630490	0		|			
ANR	2636441	Identifier	DB_BIT		2630490	0					
ANR	2636442	InclusiveOrExpression	EA_BIT | IA_BIT | FD_BIT		2630490	1		|			
ANR	2636443	Identifier	EA_BIT		2630490	0					
ANR	2636444	InclusiveOrExpression	IA_BIT | FD_BIT		2630490	1		|			
ANR	2636445	Identifier	IA_BIT		2630490	0					
ANR	2636446	Identifier	FD_BIT		2630490	1					
ANR	2636447	CompoundStatement		1041:2:22829:22863	2630490	1					
ANR	2636448	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2333:2:48688:48722	2630490	0	True				
ANR	2636449	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2636450	IdentifierDeclType	ut64		2630490	0					
ANR	2636451	Identifier	argt		2630490	1					
ANR	2636452	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2636453	Identifier	argt		2630490	0					
ANR	2636454	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2636455	Callee	thumb_selector		2630490	0					
ANR	2636456	Identifier	thumb_selector		2630490	0					
ANR	2636457	ArgumentList	ao -> a		2630490	1					
ANR	2636458	Argument	ao -> a		2630490	0					
ANR	2636459	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636460	Identifier	ao		2630490	0					
ANR	2636461	Identifier	a		2630490	1					
ANR	2636462	SwitchStatement	switch ( argt )		2630490	1					
ANR	2636463	Condition	argt	2334:10:48734:48737	2630490	0	True				
ANR	2636464	Identifier	argt		2630490	0					
ANR	2636465	CompoundStatement		1042:16:22881:22881	2630490	1					
ANR	2636466	Label	case THUMB_REGBANG_LIST :	2335:2:48744:48767	2630490	0	True				
ANR	2636467	Identifier	THUMB_REGBANG_LIST		2630490	0					
ANR	2636468	CompoundStatement		1045:3:22955:22988	2630490	1					
ANR	2636469	IdentifierDeclStatement	ut8 reg1 = getregmembang ( ao -> a [ 0 ] ) ;	2336:3:48774:48809	2630490	0	True				
ANR	2636470	IdentifierDecl	reg1 = getregmembang ( ao -> a [ 0 ] )		2630490	0					
ANR	2636471	IdentifierDeclType	ut8		2630490	0					
ANR	2636472	Identifier	reg1		2630490	1					
ANR	2636473	AssignmentExpression	reg1 = getregmembang ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2636474	Identifier	reg1		2630490	0					
ANR	2636475	CallExpression	getregmembang ( ao -> a [ 0 ] )		2630490	1					
ANR	2636476	Callee	getregmembang		2630490	0					
ANR	2636477	Identifier	getregmembang		2630490	0					
ANR	2636478	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2636479	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2636480	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2636481	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636482	Identifier	ao		2630490	0					
ANR	2636483	Identifier	a		2630490	1					
ANR	2636484	PrimaryExpression	0		2630490	1					
ANR	2636485	IdentifierDeclStatement	ut32 list = getreglist ( ao -> a [ 1 ] ) ;	2337:3:48814:48847	2630490	1	True				
ANR	2636486	IdentifierDecl	list = getreglist ( ao -> a [ 1 ] )		2630490	0					
ANR	2636487	IdentifierDeclType	ut32		2630490	0					
ANR	2636488	Identifier	list		2630490	1					
ANR	2636489	AssignmentExpression	list = getreglist ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2636490	Identifier	list		2630490	0					
ANR	2636491	CallExpression	getreglist ( ao -> a [ 1 ] )		2630490	1					
ANR	2636492	Callee	getreglist		2630490	0					
ANR	2636493	Identifier	getreglist		2630490	0					
ANR	2636494	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2636495	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2636496	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2636497	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636498	Identifier	ao		2630490	0					
ANR	2636499	Identifier	a		2630490	1					
ANR	2636500	PrimaryExpression	1		2630490	1					
ANR	2636501	IfStatement	if ( ! ( ( m & DB_BIT ) || ( m & EA_BIT ) ) && ! ( list & 0xff00 ) && ( reg1 < 8 ) && ! ( m & DOTW_BIT ) )		2630490	2					
ANR	2636502	Condition	! ( ( m & DB_BIT ) || ( m & EA_BIT ) ) && ! ( list & 0xff00 ) && ( reg1 < 8 ) && ! ( m & DOTW_BIT )	2338:7:48856:48939	2630490	0	True				
ANR	2636503	AndExpression	! ( ( m & DB_BIT ) || ( m & EA_BIT ) ) && ! ( list & 0xff00 ) && ( reg1 < 8 ) && ! ( m & DOTW_BIT )		2630490	0		&&			
ANR	2636504	UnaryOperationExpression	! ( ( m & DB_BIT ) || ( m & EA_BIT ) )		2630490	0					
ANR	2636505	UnaryOperator	!		2630490	0					
ANR	2636506	OrExpression	( m & DB_BIT ) || ( m & EA_BIT )		2630490	1		||			
ANR	2636507	BitAndExpression	m & DB_BIT		2630490	0		&			
ANR	2636508	Identifier	m		2630490	0					
ANR	2636509	Identifier	DB_BIT		2630490	1					
ANR	2636510	BitAndExpression	m & EA_BIT		2630490	1		&			
ANR	2636511	Identifier	m		2630490	0					
ANR	2636512	Identifier	EA_BIT		2630490	1					
ANR	2636513	AndExpression	! ( list & 0xff00 ) && ( reg1 < 8 ) && ! ( m & DOTW_BIT )		2630490	1		&&			
ANR	2636514	UnaryOperationExpression	! ( list & 0xff00 )		2630490	0					
ANR	2636515	UnaryOperator	!		2630490	0					
ANR	2636516	BitAndExpression	list & 0xff00		2630490	1		&			
ANR	2636517	Identifier	list		2630490	0					
ANR	2636518	PrimaryExpression	0xff00		2630490	1					
ANR	2636519	AndExpression	( reg1 < 8 ) && ! ( m & DOTW_BIT )		2630490	1		&&			
ANR	2636520	RelationalExpression	reg1 < 8		2630490	0		<			
ANR	2636521	Identifier	reg1		2630490	0					
ANR	2636522	PrimaryExpression	8		2630490	1					
ANR	2636523	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	1					
ANR	2636524	UnaryOperator	!		2630490	0					
ANR	2636525	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2636526	Identifier	m		2630490	0					
ANR	2636527	Identifier	DOTW_BIT		2630490	1					
ANR	2636528	CompoundStatement		1046:93:23083:23083	2630490	1					
ANR	2636529	ExpressionStatement	ao -> o = 0x00c8	2339:4:48948:48962	2630490	0	True				
ANR	2636530	AssignmentExpression	ao -> o = 0x00c8		2630490	0		=			
ANR	2636531	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636532	Identifier	ao		2630490	0					
ANR	2636533	Identifier	o		2630490	1					
ANR	2636534	PrimaryExpression	0x00c8		2630490	1					
ANR	2636535	ExpressionStatement	ao -> o |= reg1	2340:4:48968:48981	2630490	1	True				
ANR	2636536	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2636537	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636538	Identifier	ao		2630490	0					
ANR	2636539	Identifier	o		2630490	1					
ANR	2636540	Identifier	reg1		2630490	1					
ANR	2636541	IfStatement	if ( list & ( 1 << reg1 ) )		2630490	2					
ANR	2636542	Condition	list & ( 1 << reg1 )	2341:8:48991:49008	2630490	0	True				
ANR	2636543	BitAndExpression	list & ( 1 << reg1 )		2630490	0		&			
ANR	2636544	Identifier	list		2630490	0					
ANR	2636545	ShiftExpression	1 << reg1		2630490	1		<<			
ANR	2636546	PrimaryExpression	1		2630490	0					
ANR	2636547	Identifier	reg1		2630490	1					
ANR	2636548	CompoundStatement		1049:28:23152:23152	2630490	1					
ANR	2636549	ExpressionStatement	list ^= 1 << ( reg1 )	2342:5:49018:49037	2630490	0	True				
ANR	2636550	AssignmentExpression	list ^= 1 << ( reg1 )		2630490	0		^=			
ANR	2636551	Identifier	list		2630490	0					
ANR	2636552	ShiftExpression	1 << ( reg1 )		2630490	1		<<			
ANR	2636553	PrimaryExpression	1		2630490	0					
ANR	2636554	Identifier	reg1		2630490	1					
ANR	2636555	ExpressionStatement	ao -> o |= ( list & 0xff ) << 8	2344:4:49049:49076	2630490	3	True				
ANR	2636556	AssignmentExpression	ao -> o |= ( list & 0xff ) << 8		2630490	0		|=			
ANR	2636557	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636558	Identifier	ao		2630490	0					
ANR	2636559	Identifier	o		2630490	1					
ANR	2636560	ShiftExpression	( list & 0xff ) << 8		2630490	1		<<			
ANR	2636561	BitAndExpression	list & 0xff		2630490	0		&			
ANR	2636562	Identifier	list		2630490	0					
ANR	2636563	PrimaryExpression	0xff		2630490	1					
ANR	2636564	PrimaryExpression	8		2630490	1					
ANR	2636565	ReturnStatement	return 2 ;	2346:4:49088:49096	2630490	4	True				
ANR	2636566	PrimaryExpression	2		2630490	0					
ANR	2636567	IfStatement	if ( list & 0x2000 )		2630490	3					
ANR	2636568	Condition	list & 0x2000	2348:7:49110:49122	2630490	0	True				
ANR	2636569	BitAndExpression	list & 0x2000		2630490	0		&			
ANR	2636570	Identifier	list		2630490	0					
ANR	2636571	PrimaryExpression	0x2000		2630490	1					
ANR	2636572	CompoundStatement		1056:22:23266:23266	2630490	1					
ANR	2636573	ReturnStatement	return - 1 ;	2349:4:49131:49140	2630490	0	True				
ANR	2636574	UnaryOperationExpression	- 1		2630490	0					
ANR	2636575	UnaryOperator	-		2630490	0					
ANR	2636576	PrimaryExpression	1		2630490	1					
ANR	2636577	IfStatement	if ( ( m & DB_BIT ) || ( m & EA_BIT ) )		2630490	4					
ANR	2636578	Condition	( m & DB_BIT ) || ( m & EA_BIT )	2351:7:49154:49181	2630490	0	True				
ANR	2636579	OrExpression	( m & DB_BIT ) || ( m & EA_BIT )		2630490	0		||			
ANR	2636580	BitAndExpression	m & DB_BIT		2630490	0		&			
ANR	2636581	Identifier	m		2630490	0					
ANR	2636582	Identifier	DB_BIT		2630490	1					
ANR	2636583	BitAndExpression	m & EA_BIT		2630490	1		&			
ANR	2636584	Identifier	m		2630490	0					
ANR	2636585	Identifier	EA_BIT		2630490	1					
ANR	2636586	CompoundStatement		1059:37:23325:23325	2630490	1					
ANR	2636587	ExpressionStatement	ao -> o = 0x30e90000	2352:4:49190:49208	2630490	0	True				
ANR	2636588	AssignmentExpression	ao -> o = 0x30e90000		2630490	0		=			
ANR	2636589	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636590	Identifier	ao		2630490	0					
ANR	2636591	Identifier	o		2630490	1					
ANR	2636592	PrimaryExpression	0x30e90000		2630490	1					
ANR	2636593	ElseStatement	else		2630490	0					
ANR	2636594	CompoundStatement		1061:10:23361:23361	2630490	0					
ANR	2636595	ExpressionStatement	ao -> o = 0xb0e80000	2355:4:49255:49273	2630490	0	True				
ANR	2636596	AssignmentExpression	ao -> o = 0xb0e80000		2630490	0		=			
ANR	2636597	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636598	Identifier	ao		2630490	0					
ANR	2636599	Identifier	o		2630490	1					
ANR	2636600	PrimaryExpression	0xb0e80000		2630490	1					
ANR	2636601	ExpressionStatement	ao -> o |= reg1 << 24	2358:3:49288:49307	2630490	5	True				
ANR	2636602	AssignmentExpression	ao -> o |= reg1 << 24		2630490	0		|=			
ANR	2636603	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636604	Identifier	ao		2630490	0					
ANR	2636605	Identifier	o		2630490	1					
ANR	2636606	ShiftExpression	reg1 << 24		2630490	1		<<			
ANR	2636607	Identifier	reg1		2630490	0					
ANR	2636608	PrimaryExpression	24		2630490	1					
ANR	2636609	ExpressionStatement	ao -> o |= ( list & 0xff ) << 8	2359:3:49312:49339	2630490	6	True				
ANR	2636610	AssignmentExpression	ao -> o |= ( list & 0xff ) << 8		2630490	0		|=			
ANR	2636611	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636612	Identifier	ao		2630490	0					
ANR	2636613	Identifier	o		2630490	1					
ANR	2636614	ShiftExpression	( list & 0xff ) << 8		2630490	1		<<			
ANR	2636615	BitAndExpression	list & 0xff		2630490	0		&			
ANR	2636616	Identifier	list		2630490	0					
ANR	2636617	PrimaryExpression	0xff		2630490	1					
ANR	2636618	PrimaryExpression	8		2630490	1					
ANR	2636619	ExpressionStatement	ao -> o |= ( list & 0xff00 ) >> 8	2360:3:49344:49373	2630490	7	True				
ANR	2636620	AssignmentExpression	ao -> o |= ( list & 0xff00 ) >> 8		2630490	0		|=			
ANR	2636621	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636622	Identifier	ao		2630490	0					
ANR	2636623	Identifier	o		2630490	1					
ANR	2636624	ShiftExpression	( list & 0xff00 ) >> 8		2630490	1		>>			
ANR	2636625	BitAndExpression	list & 0xff00		2630490	0		&			
ANR	2636626	Identifier	list		2630490	0					
ANR	2636627	PrimaryExpression	0xff00		2630490	1					
ANR	2636628	PrimaryExpression	8		2630490	1					
ANR	2636629	ReturnStatement	return 4 ;	2361:3:49378:49386	2630490	8	True				
ANR	2636630	PrimaryExpression	4		2630490	0					
ANR	2636631	BreakStatement	break ;	2363:3:49403:49408	2630490	2	True				
ANR	2636632	Label	case THUMB_REG_LIST :	2364:2:49412:49431	2630490	3	True				
ANR	2636633	Identifier	THUMB_REG_LIST		2630490	0					
ANR	2636634	CompoundStatement		1074:3:23612:23645	2630490	4					
ANR	2636635	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2365:3:49438:49466	2630490	0	True				
ANR	2636636	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2636637	IdentifierDeclType	ut8		2630490	0					
ANR	2636638	Identifier	reg1		2630490	1					
ANR	2636639	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2636640	Identifier	reg1		2630490	0					
ANR	2636641	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2636642	Callee	getreg		2630490	0					
ANR	2636643	Identifier	getreg		2630490	0					
ANR	2636644	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2636645	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2636646	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2636647	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636648	Identifier	ao		2630490	0					
ANR	2636649	Identifier	a		2630490	1					
ANR	2636650	PrimaryExpression	0		2630490	1					
ANR	2636651	IdentifierDeclStatement	ut32 list = getreglist ( ao -> a [ 1 ] ) ;	2366:3:49471:49504	2630490	1	True				
ANR	2636652	IdentifierDecl	list = getreglist ( ao -> a [ 1 ] )		2630490	0					
ANR	2636653	IdentifierDeclType	ut32		2630490	0					
ANR	2636654	Identifier	list		2630490	1					
ANR	2636655	AssignmentExpression	list = getreglist ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2636656	Identifier	list		2630490	0					
ANR	2636657	CallExpression	getreglist ( ao -> a [ 1 ] )		2630490	1					
ANR	2636658	Callee	getreglist		2630490	0					
ANR	2636659	Identifier	getreglist		2630490	0					
ANR	2636660	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2636661	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2636662	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2636663	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636664	Identifier	ao		2630490	0					
ANR	2636665	Identifier	a		2630490	1					
ANR	2636666	PrimaryExpression	1		2630490	1					
ANR	2636667	IfStatement	if ( ! ( ( m & DB_BIT ) || ( m & EA_BIT ) ) && ! ( list & 0xff00 ) && ( reg1 < 8 ) && ! ( m & DOTW_BIT ) )		2630490	2					
ANR	2636668	Condition	! ( ( m & DB_BIT ) || ( m & EA_BIT ) ) && ! ( list & 0xff00 ) && ( reg1 < 8 ) && ! ( m & DOTW_BIT )	2367:7:49513:49596	2630490	0	True				
ANR	2636669	AndExpression	! ( ( m & DB_BIT ) || ( m & EA_BIT ) ) && ! ( list & 0xff00 ) && ( reg1 < 8 ) && ! ( m & DOTW_BIT )		2630490	0		&&			
ANR	2636670	UnaryOperationExpression	! ( ( m & DB_BIT ) || ( m & EA_BIT ) )		2630490	0					
ANR	2636671	UnaryOperator	!		2630490	0					
ANR	2636672	OrExpression	( m & DB_BIT ) || ( m & EA_BIT )		2630490	1		||			
ANR	2636673	BitAndExpression	m & DB_BIT		2630490	0		&			
ANR	2636674	Identifier	m		2630490	0					
ANR	2636675	Identifier	DB_BIT		2630490	1					
ANR	2636676	BitAndExpression	m & EA_BIT		2630490	1		&			
ANR	2636677	Identifier	m		2630490	0					
ANR	2636678	Identifier	EA_BIT		2630490	1					
ANR	2636679	AndExpression	! ( list & 0xff00 ) && ( reg1 < 8 ) && ! ( m & DOTW_BIT )		2630490	1		&&			
ANR	2636680	UnaryOperationExpression	! ( list & 0xff00 )		2630490	0					
ANR	2636681	UnaryOperator	!		2630490	0					
ANR	2636682	BitAndExpression	list & 0xff00		2630490	1		&			
ANR	2636683	Identifier	list		2630490	0					
ANR	2636684	PrimaryExpression	0xff00		2630490	1					
ANR	2636685	AndExpression	( reg1 < 8 ) && ! ( m & DOTW_BIT )		2630490	1		&&			
ANR	2636686	RelationalExpression	reg1 < 8		2630490	0		<			
ANR	2636687	Identifier	reg1		2630490	0					
ANR	2636688	PrimaryExpression	8		2630490	1					
ANR	2636689	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	1					
ANR	2636690	UnaryOperator	!		2630490	0					
ANR	2636691	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2636692	Identifier	m		2630490	0					
ANR	2636693	Identifier	DOTW_BIT		2630490	1					
ANR	2636694	CompoundStatement		1075:93:23740:23740	2630490	1					
ANR	2636695	ExpressionStatement	ao -> o = 0x00c8	2368:4:49605:49619	2630490	0	True				
ANR	2636696	AssignmentExpression	ao -> o = 0x00c8		2630490	0		=			
ANR	2636697	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636698	Identifier	ao		2630490	0					
ANR	2636699	Identifier	o		2630490	1					
ANR	2636700	PrimaryExpression	0x00c8		2630490	1					
ANR	2636701	ExpressionStatement	ao -> o |= reg1	2369:4:49625:49638	2630490	1	True				
ANR	2636702	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2636703	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636704	Identifier	ao		2630490	0					
ANR	2636705	Identifier	o		2630490	1					
ANR	2636706	Identifier	reg1		2630490	1					
ANR	2636707	ExpressionStatement	ao -> o |= 1 << ( reg1 + 8 )	2370:4:49644:49668	2630490	2	True				
ANR	2636708	AssignmentExpression	ao -> o |= 1 << ( reg1 + 8 )		2630490	0		|=			
ANR	2636709	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636710	Identifier	ao		2630490	0					
ANR	2636711	Identifier	o		2630490	1					
ANR	2636712	ShiftExpression	1 << ( reg1 + 8 )		2630490	1		<<			
ANR	2636713	PrimaryExpression	1		2630490	0					
ANR	2636714	AdditiveExpression	reg1 + 8		2630490	1		+			
ANR	2636715	Identifier	reg1		2630490	0					
ANR	2636716	PrimaryExpression	8		2630490	1					
ANR	2636717	ExpressionStatement	ao -> o |= ( list & 0xff ) << 8	2371:4:49674:49701	2630490	3	True				
ANR	2636718	AssignmentExpression	ao -> o |= ( list & 0xff ) << 8		2630490	0		|=			
ANR	2636719	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636720	Identifier	ao		2630490	0					
ANR	2636721	Identifier	o		2630490	1					
ANR	2636722	ShiftExpression	( list & 0xff ) << 8		2630490	1		<<			
ANR	2636723	BitAndExpression	list & 0xff		2630490	0		&			
ANR	2636724	Identifier	list		2630490	0					
ANR	2636725	PrimaryExpression	0xff		2630490	1					
ANR	2636726	PrimaryExpression	8		2630490	1					
ANR	2636727	ReturnStatement	return 2 ;	2372:4:49707:49715	2630490	4	True				
ANR	2636728	PrimaryExpression	2		2630490	0					
ANR	2636729	IfStatement	if ( list & 0x2000 )		2630490	3					
ANR	2636730	Condition	list & 0x2000	2374:7:49729:49741	2630490	0	True				
ANR	2636731	BitAndExpression	list & 0x2000		2630490	0		&			
ANR	2636732	Identifier	list		2630490	0					
ANR	2636733	PrimaryExpression	0x2000		2630490	1					
ANR	2636734	CompoundStatement		1082:22:23885:23885	2630490	1					
ANR	2636735	ReturnStatement	return - 1 ;	2375:4:49750:49759	2630490	0	True				
ANR	2636736	UnaryOperationExpression	- 1		2630490	0					
ANR	2636737	UnaryOperator	-		2630490	0					
ANR	2636738	PrimaryExpression	1		2630490	1					
ANR	2636739	IfStatement	if ( ( m & DB_BIT ) || ( m & EA_BIT ) )		2630490	4					
ANR	2636740	Condition	( m & DB_BIT ) || ( m & EA_BIT )	2378:7:49777:49804	2630490	0	True				
ANR	2636741	OrExpression	( m & DB_BIT ) || ( m & EA_BIT )		2630490	0		||			
ANR	2636742	BitAndExpression	m & DB_BIT		2630490	0		&			
ANR	2636743	Identifier	m		2630490	0					
ANR	2636744	Identifier	DB_BIT		2630490	1					
ANR	2636745	BitAndExpression	m & EA_BIT		2630490	1		&			
ANR	2636746	Identifier	m		2630490	0					
ANR	2636747	Identifier	EA_BIT		2630490	1					
ANR	2636748	CompoundStatement		1086:37:23948:23948	2630490	1					
ANR	2636749	ExpressionStatement	ao -> o = 0x10e90000	2379:4:49813:49831	2630490	0	True				
ANR	2636750	AssignmentExpression	ao -> o = 0x10e90000		2630490	0		=			
ANR	2636751	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636752	Identifier	ao		2630490	0					
ANR	2636753	Identifier	o		2630490	1					
ANR	2636754	PrimaryExpression	0x10e90000		2630490	1					
ANR	2636755	ElseStatement	else		2630490	0					
ANR	2636756	CompoundStatement		1088:10:23984:23984	2630490	0					
ANR	2636757	ExpressionStatement	ao -> o = 0x90e80000	2381:4:49849:49867	2630490	0	True				
ANR	2636758	AssignmentExpression	ao -> o = 0x90e80000		2630490	0		=			
ANR	2636759	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636760	Identifier	ao		2630490	0					
ANR	2636761	Identifier	o		2630490	1					
ANR	2636762	PrimaryExpression	0x90e80000		2630490	1					
ANR	2636763	ExpressionStatement	ao -> o |= reg1 << 24	2384:3:49882:49901	2630490	5	True				
ANR	2636764	AssignmentExpression	ao -> o |= reg1 << 24		2630490	0		|=			
ANR	2636765	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636766	Identifier	ao		2630490	0					
ANR	2636767	Identifier	o		2630490	1					
ANR	2636768	ShiftExpression	reg1 << 24		2630490	1		<<			
ANR	2636769	Identifier	reg1		2630490	0					
ANR	2636770	PrimaryExpression	24		2630490	1					
ANR	2636771	ExpressionStatement	ao -> o |= ( list & 0xff ) << 8	2385:3:49906:49933	2630490	6	True				
ANR	2636772	AssignmentExpression	ao -> o |= ( list & 0xff ) << 8		2630490	0		|=			
ANR	2636773	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636774	Identifier	ao		2630490	0					
ANR	2636775	Identifier	o		2630490	1					
ANR	2636776	ShiftExpression	( list & 0xff ) << 8		2630490	1		<<			
ANR	2636777	BitAndExpression	list & 0xff		2630490	0		&			
ANR	2636778	Identifier	list		2630490	0					
ANR	2636779	PrimaryExpression	0xff		2630490	1					
ANR	2636780	PrimaryExpression	8		2630490	1					
ANR	2636781	ExpressionStatement	ao -> o |= ( list & 0xff00 ) >> 8	2386:3:49938:49967	2630490	7	True				
ANR	2636782	AssignmentExpression	ao -> o |= ( list & 0xff00 ) >> 8		2630490	0		|=			
ANR	2636783	PtrMemberAccess	ao -> o		2630490	0					
ANR	2636784	Identifier	ao		2630490	0					
ANR	2636785	Identifier	o		2630490	1					
ANR	2636786	ShiftExpression	( list & 0xff00 ) >> 8		2630490	1		>>			
ANR	2636787	BitAndExpression	list & 0xff00		2630490	0		&			
ANR	2636788	Identifier	list		2630490	0					
ANR	2636789	PrimaryExpression	0xff00		2630490	1					
ANR	2636790	PrimaryExpression	8		2630490	1					
ANR	2636791	ReturnStatement	return 4 ;	2387:3:49972:49980	2630490	8	True				
ANR	2636792	PrimaryExpression	4		2630490	0					
ANR	2636793	BreakStatement	break ;	2389:3:49997:50002	2630490	5	True				
ANR	2636794	Label	default :	2390:2:50006:50013	2630490	6	True				
ANR	2636795	Identifier	default		2630490	0					
ANR	2636796	ReturnStatement	return - 1 ;	2391:3:50018:50027	2630490	7	True				
ANR	2636797	UnaryOperationExpression	- 1		2630490	0					
ANR	2636798	UnaryOperator	-		2630490	0					
ANR	2636799	PrimaryExpression	1		2630490	1					
ANR	2636800	ElseStatement	else		2630490	0					
ANR	2636801	IfStatement	"if ( ( m = opmask ( ao -> op , ""ldr"" , B_BIT | H_BIT | D_BIT | T_BIT | S_BIT ) ) )"		2630490	0					
ANR	2636802	Condition	"m = opmask ( ao -> op , ""ldr"" , B_BIT | H_BIT | D_BIT | T_BIT | S_BIT )"	2394:5:50046:50112	2630490	0	True				
ANR	2636803	AssignmentExpression	"m = opmask ( ao -> op , ""ldr"" , B_BIT | H_BIT | D_BIT | T_BIT | S_BIT )"		2630490	0		=			
ANR	2636804	Identifier	m		2630490	0					
ANR	2636805	CallExpression	"opmask ( ao -> op , ""ldr"" , B_BIT | H_BIT | D_BIT | T_BIT | S_BIT )"		2630490	1					
ANR	2636806	Callee	opmask		2630490	0					
ANR	2636807	Identifier	opmask		2630490	0					
ANR	2636808	ArgumentList	ao -> op		2630490	1					
ANR	2636809	Argument	ao -> op		2630490	0					
ANR	2636810	PtrMemberAccess	ao -> op		2630490	0					
ANR	2636811	Identifier	ao		2630490	0					
ANR	2636812	Identifier	op		2630490	1					
ANR	2636813	Argument	"""ldr"""		2630490	1					
ANR	2636814	PrimaryExpression	"""ldr"""		2630490	0					
ANR	2636815	Argument	B_BIT | H_BIT | D_BIT | T_BIT | S_BIT		2630490	2					
ANR	2636816	InclusiveOrExpression	B_BIT | H_BIT | D_BIT | T_BIT | S_BIT		2630490	0		|			
ANR	2636817	Identifier	B_BIT		2630490	0					
ANR	2636818	InclusiveOrExpression	H_BIT | D_BIT | T_BIT | S_BIT		2630490	1		|			
ANR	2636819	Identifier	H_BIT		2630490	0					
ANR	2636820	InclusiveOrExpression	D_BIT | T_BIT | S_BIT		2630490	1		|			
ANR	2636821	Identifier	D_BIT		2630490	0					
ANR	2636822	InclusiveOrExpression	T_BIT | S_BIT		2630490	1		|			
ANR	2636823	Identifier	T_BIT		2630490	0					
ANR	2636824	Identifier	S_BIT		2630490	1					
ANR	2636825	CompoundStatement		1104:2:24298:24339	2630490	1					
ANR	2636826	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2395:2:50119:50153	2630490	0	True				
ANR	2636827	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2636828	IdentifierDeclType	ut64		2630490	0					
ANR	2636829	Identifier	argt		2630490	1					
ANR	2636830	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2636831	Identifier	argt		2630490	0					
ANR	2636832	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2636833	Callee	thumb_selector		2630490	0					
ANR	2636834	Identifier	thumb_selector		2630490	0					
ANR	2636835	ArgumentList	ao -> a		2630490	1					
ANR	2636836	Argument	ao -> a		2630490	0					
ANR	2636837	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636838	Identifier	ao		2630490	0					
ANR	2636839	Identifier	a		2630490	1					
ANR	2636840	IdentifierDeclStatement	ut32 ldrsel = m & ( B_BIT | H_BIT | D_BIT ) ;	2396:2:50157:50198	2630490	1	True				
ANR	2636841	IdentifierDecl	ldrsel = m & ( B_BIT | H_BIT | D_BIT )		2630490	0					
ANR	2636842	IdentifierDeclType	ut32		2630490	0					
ANR	2636843	Identifier	ldrsel		2630490	1					
ANR	2636844	AssignmentExpression	ldrsel = m & ( B_BIT | H_BIT | D_BIT )		2630490	2		=			
ANR	2636845	Identifier	ldrsel		2630490	0					
ANR	2636846	BitAndExpression	m & ( B_BIT | H_BIT | D_BIT )		2630490	1		&			
ANR	2636847	Identifier	m		2630490	0					
ANR	2636848	InclusiveOrExpression	B_BIT | H_BIT | D_BIT		2630490	1		|			
ANR	2636849	Identifier	B_BIT		2630490	0					
ANR	2636850	InclusiveOrExpression	H_BIT | D_BIT		2630490	1		|			
ANR	2636851	Identifier	H_BIT		2630490	0					
ANR	2636852	Identifier	D_BIT		2630490	1					
ANR	2636853	IfStatement	if ( ( m & S_BIT ) && ! ( m & ( B_BIT | H_BIT ) ) )		2630490	2					
ANR	2636854	Condition	( m & S_BIT ) && ! ( m & ( B_BIT | H_BIT ) )	2397:6:50206:50242	2630490	0	True				
ANR	2636855	AndExpression	( m & S_BIT ) && ! ( m & ( B_BIT | H_BIT ) )		2630490	0		&&			
ANR	2636856	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2636857	Identifier	m		2630490	0					
ANR	2636858	Identifier	S_BIT		2630490	1					
ANR	2636859	UnaryOperationExpression	! ( m & ( B_BIT | H_BIT ) )		2630490	1					
ANR	2636860	UnaryOperator	!		2630490	0					
ANR	2636861	BitAndExpression	m & ( B_BIT | H_BIT )		2630490	1		&			
ANR	2636862	Identifier	m		2630490	0					
ANR	2636863	InclusiveOrExpression	B_BIT | H_BIT		2630490	1		|			
ANR	2636864	Identifier	B_BIT		2630490	0					
ANR	2636865	Identifier	H_BIT		2630490	1					
ANR	2636866	CompoundStatement		1105:45:24386:24386	2630490	1					
ANR	2636867	ReturnStatement	return - 1 ;	2398:3:50250:50259	2630490	0	True				
ANR	2636868	UnaryOperationExpression	- 1		2630490	0					
ANR	2636869	UnaryOperator	-		2630490	0					
ANR	2636870	PrimaryExpression	1		2630490	1					
ANR	2636871	SwitchStatement	switch ( argt )		2630490	3					
ANR	2636872	Condition	argt	2400:10:50275:50278	2630490	0	True				
ANR	2636873	Identifier	argt		2630490	0					
ANR	2636874	CompoundStatement		1108:16:24422:24422	2630490	1					
ANR	2636875	Label	case THUMB_REG_CONST :	2401:2:50285:50305	2630490	0	True				
ANR	2636876	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2636877	ExpressionStatement	ao -> a [ 2 ] = ao -> a [ 1 ]	2402:3:50310:50329	2630490	1	True				
ANR	2636878	AssignmentExpression	ao -> a [ 2 ] = ao -> a [ 1 ]		2630490	0		=			
ANR	2636879	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2636880	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636881	Identifier	ao		2630490	0					
ANR	2636882	Identifier	a		2630490	1					
ANR	2636883	PrimaryExpression	2		2630490	1					
ANR	2636884	ArrayIndexing	ao -> a [ 1 ]		2630490	1					
ANR	2636885	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636886	Identifier	ao		2630490	0					
ANR	2636887	Identifier	a		2630490	1					
ANR	2636888	PrimaryExpression	1		2630490	1					
ANR	2636889	ExpressionStatement	"strcat ( ao -> a [ 2 ] , ""]"" )"	2403:3:50334:50355	2630490	2	True				
ANR	2636890	CallExpression	"strcat ( ao -> a [ 2 ] , ""]"" )"		2630490	0					
ANR	2636891	Callee	strcat		2630490	0					
ANR	2636892	Identifier	strcat		2630490	0					
ANR	2636893	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2636894	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2636895	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2636896	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636897	Identifier	ao		2630490	0					
ANR	2636898	Identifier	a		2630490	1					
ANR	2636899	PrimaryExpression	2		2630490	1					
ANR	2636900	Argument	"""]"""		2630490	1					
ANR	2636901	PrimaryExpression	"""]"""		2630490	0					
ANR	2636902	ExpressionStatement	"ao -> a [ 1 ] = ""[r15"""	2404:3:50360:50377	2630490	3	True				
ANR	2636903	AssignmentExpression	"ao -> a [ 1 ] = ""[r15"""		2630490	0		=			
ANR	2636904	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2636905	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636906	Identifier	ao		2630490	0					
ANR	2636907	Identifier	a		2630490	1					
ANR	2636908	PrimaryExpression	1		2630490	1					
ANR	2636909	PrimaryExpression	"""[r15"""		2630490	1					
ANR	2636910	Label	case THUMB_REG_BRACKREGBRACK :	2406:2:50411:50439	2630490	4	True				
ANR	2636911	Identifier	THUMB_REG_BRACKREGBRACK		2630490	0					
ANR	2636912	IfStatement	if ( ao -> a [ 2 ] == NULL )		2630490	5					
ANR	2636913	Condition	ao -> a [ 2 ] == NULL	2407:7:50448:50463	2630490	0	True				
ANR	2636914	EqualityExpression	ao -> a [ 2 ] == NULL		2630490	0		==			
ANR	2636915	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2636916	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636917	Identifier	ao		2630490	0					
ANR	2636918	Identifier	a		2630490	1					
ANR	2636919	PrimaryExpression	2		2630490	1					
ANR	2636920	Identifier	NULL		2630490	1					
ANR	2636921	CompoundStatement		1115:25:24607:24607	2630490	1					
ANR	2636922	ExpressionStatement	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'	2408:4:50494:50531	2630490	0	True				
ANR	2636923	AssignmentExpression	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'		2630490	0		=			
ANR	2636924	ArrayIndexing	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ]		2630490	0					
ANR	2636925	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2636926	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636927	Identifier	ao		2630490	0					
ANR	2636928	Identifier	a		2630490	1					
ANR	2636929	PrimaryExpression	1		2630490	1					
ANR	2636930	AdditiveExpression	strlen ( ao -> a [ 1 ] ) - 1		2630490	1		-			
ANR	2636931	CallExpression	strlen ( ao -> a [ 1 ] )		2630490	0					
ANR	2636932	Callee	strlen		2630490	0					
ANR	2636933	Identifier	strlen		2630490	0					
ANR	2636934	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2636935	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2636936	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2636937	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636938	Identifier	ao		2630490	0					
ANR	2636939	Identifier	a		2630490	1					
ANR	2636940	PrimaryExpression	1		2630490	1					
ANR	2636941	PrimaryExpression	1		2630490	1					
ANR	2636942	PrimaryExpression	'\\0'		2630490	1					
ANR	2636943	ExpressionStatement	"ao -> a [ 2 ] = ""0]"""	2409:4:50537:50552	2630490	1	True				
ANR	2636944	AssignmentExpression	"ao -> a [ 2 ] = ""0]"""		2630490	0		=			
ANR	2636945	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2636946	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636947	Identifier	ao		2630490	0					
ANR	2636948	Identifier	a		2630490	1					
ANR	2636949	PrimaryExpression	2		2630490	1					
ANR	2636950	PrimaryExpression	"""0]"""		2630490	1					
ANR	2636951	Label	case THUMB_REG_BRACKREG_CONSTBRACK :	2412:2:50591:50625	2630490	6	True				
ANR	2636952	Identifier	THUMB_REG_BRACKREG_CONSTBRACK		2630490	0					
ANR	2636953	CompoundStatement		1123:3:24847:24881	2630490	7					
ANR	2636954	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2413:3:50632:50660	2630490	0	True				
ANR	2636955	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2636956	IdentifierDeclType	ut8		2630490	0					
ANR	2636957	Identifier	reg1		2630490	1					
ANR	2636958	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2636959	Identifier	reg1		2630490	0					
ANR	2636960	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2636961	Callee	getreg		2630490	0					
ANR	2636962	Identifier	getreg		2630490	0					
ANR	2636963	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2636964	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2636965	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2636966	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636967	Identifier	ao		2630490	0					
ANR	2636968	Identifier	a		2630490	1					
ANR	2636969	PrimaryExpression	0		2630490	1					
ANR	2636970	IdentifierDeclStatement	ut8 reg2 = getregmemstart ( ao -> a [ 1 ] ) ;	2414:3:50665:50701	2630490	1	True				
ANR	2636971	IdentifierDecl	reg2 = getregmemstart ( ao -> a [ 1 ] )		2630490	0					
ANR	2636972	IdentifierDeclType	ut8		2630490	0					
ANR	2636973	Identifier	reg2		2630490	1					
ANR	2636974	AssignmentExpression	reg2 = getregmemstart ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2636975	Identifier	reg2		2630490	0					
ANR	2636976	CallExpression	getregmemstart ( ao -> a [ 1 ] )		2630490	1					
ANR	2636977	Callee	getregmemstart		2630490	0					
ANR	2636978	Identifier	getregmemstart		2630490	0					
ANR	2636979	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2636980	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2636981	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2636982	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636983	Identifier	ao		2630490	0					
ANR	2636984	Identifier	a		2630490	1					
ANR	2636985	PrimaryExpression	1		2630490	1					
ANR	2636986	IdentifierDeclStatement	st32 num = getnummemend ( ao -> a [ 2 ] ) ;	2415:3:50706:50740	2630490	2	True				
ANR	2636987	IdentifierDecl	num = getnummemend ( ao -> a [ 2 ] )		2630490	0					
ANR	2636988	IdentifierDeclType	st32		2630490	0					
ANR	2636989	Identifier	num		2630490	1					
ANR	2636990	AssignmentExpression	num = getnummemend ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2636991	Identifier	num		2630490	0					
ANR	2636992	CallExpression	getnummemend ( ao -> a [ 2 ] )		2630490	1					
ANR	2636993	Callee	getnummemend		2630490	0					
ANR	2636994	Identifier	getnummemend		2630490	0					
ANR	2636995	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2636996	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2636997	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2636998	PtrMemberAccess	ao -> a		2630490	0					
ANR	2636999	Identifier	ao		2630490	0					
ANR	2637000	Identifier	a		2630490	1					
ANR	2637001	PrimaryExpression	2		2630490	1					
ANR	2637002	IfStatement	if ( ldrsel == 0 )		2630490	3					
ANR	2637003	Condition	ldrsel == 0	2416:7:50749:50759	2630490	0	True				
ANR	2637004	EqualityExpression	ldrsel == 0		2630490	0		==			
ANR	2637005	Identifier	ldrsel		2630490	0					
ANR	2637006	PrimaryExpression	0		2630490	1					
ANR	2637007	CompoundStatement		1124:20:24903:24903	2630490	1					
ANR	2637008	IfStatement	if ( m & T_BIT )		2630490	0					
ANR	2637009	Condition	m & T_BIT	2417:8:50772:50780	2630490	0	True				
ANR	2637010	BitAndExpression	m & T_BIT		2630490	0		&			
ANR	2637011	Identifier	m		2630490	0					
ANR	2637012	Identifier	T_BIT		2630490	1					
ANR	2637013	CompoundStatement		1125:19:24924:24924	2630490	1					
ANR	2637014	IfStatement	if ( ( num < 0 ) || ( num > 255 ) )		2630490	0					
ANR	2637015	Condition	( num < 0 ) || ( num > 255 )	2418:9:50794:50817	2630490	0	True				
ANR	2637016	OrExpression	( num < 0 ) || ( num > 255 )		2630490	0		||			
ANR	2637017	RelationalExpression	num < 0		2630490	0		<			
ANR	2637018	Identifier	num		2630490	0					
ANR	2637019	PrimaryExpression	0		2630490	1					
ANR	2637020	RelationalExpression	num > 255		2630490	1		>			
ANR	2637021	Identifier	num		2630490	0					
ANR	2637022	PrimaryExpression	255		2630490	1					
ANR	2637023	CompoundStatement		1126:35:24961:24961	2630490	1					
ANR	2637024	ReturnStatement	return - 1 ;	2419:6:50828:50837	2630490	0	True				
ANR	2637025	UnaryOperationExpression	- 1		2630490	0					
ANR	2637026	UnaryOperator	-		2630490	0					
ANR	2637027	PrimaryExpression	1		2630490	1					
ANR	2637028	ExpressionStatement	ao -> o = 0x50f8000e	2421:5:50851:50869	2630490	1	True				
ANR	2637029	AssignmentExpression	ao -> o = 0x50f8000e		2630490	0		=			
ANR	2637030	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637031	Identifier	ao		2630490	0					
ANR	2637032	Identifier	o		2630490	1					
ANR	2637033	PrimaryExpression	0x50f8000e		2630490	1					
ANR	2637034	ExpressionStatement	ao -> o |= num << 8	2422:5:50876:50893	2630490	2	True				
ANR	2637035	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2637036	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637037	Identifier	ao		2630490	0					
ANR	2637038	Identifier	o		2630490	1					
ANR	2637039	ShiftExpression	num << 8		2630490	1		<<			
ANR	2637040	Identifier	num		2630490	0					
ANR	2637041	PrimaryExpression	8		2630490	1					
ANR	2637042	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2423:5:50900:50929	2630490	3	True				
ANR	2637043	CallExpression	"mem_32bit_2reg ( ao , m )"		2630490	0					
ANR	2637044	Callee	mem_32bit_2reg		2630490	0					
ANR	2637045	Identifier	mem_32bit_2reg		2630490	0					
ANR	2637046	ArgumentList	ao		2630490	1					
ANR	2637047	Argument	ao		2630490	0					
ANR	2637048	Identifier	ao		2630490	0					
ANR	2637049	Argument	m		2630490	1					
ANR	2637050	Identifier	m		2630490	0					
ANR	2637051	IfStatement	if ( reg2 == 15 )		2630490	1					
ANR	2637052	Condition	reg2 == 15	2425:8:50945:50954	2630490	0	True				
ANR	2637053	EqualityExpression	reg2 == 15		2630490	0		==			
ANR	2637054	Identifier	reg2		2630490	0					
ANR	2637055	PrimaryExpression	15		2630490	1					
ANR	2637056	CompoundStatement		1133:20:25098:25098	2630490	1					
ANR	2637057	IfStatement	if ( ( num > 4095 ) || ( num < - 4095 ) )		2630490	0					
ANR	2637058	Condition	( num > 4095 ) || ( num < - 4095 )	2426:9:50968:50996	2630490	0	True				
ANR	2637059	OrExpression	( num > 4095 ) || ( num < - 4095 )		2630490	0		||			
ANR	2637060	RelationalExpression	num > 4095		2630490	0		>			
ANR	2637061	Identifier	num		2630490	0					
ANR	2637062	PrimaryExpression	4095		2630490	1					
ANR	2637063	RelationalExpression	num < - 4095		2630490	1		<			
ANR	2637064	Identifier	num		2630490	0					
ANR	2637065	UnaryOperationExpression	- 4095		2630490	1					
ANR	2637066	UnaryOperator	-		2630490	0					
ANR	2637067	PrimaryExpression	4095		2630490	1					
ANR	2637068	CompoundStatement		1134:40:25140:25140	2630490	1					
ANR	2637069	ReturnStatement	return - 1 ;	2427:6:51007:51016	2630490	0	True				
ANR	2637070	UnaryOperationExpression	- 1		2630490	0					
ANR	2637071	UnaryOperator	-		2630490	0					
ANR	2637072	PrimaryExpression	1		2630490	1					
ANR	2637073	IfStatement	if ( ( reg1 < 8 ) && ( num < 1024 ) && ( num % 4 == 0 ) )		2630490	1					
ANR	2637074	Condition	( reg1 < 8 ) && ( num < 1024 ) && ( num % 4 == 0 )	2429:9:51034:51077	2630490	0	True				
ANR	2637075	AndExpression	( reg1 < 8 ) && ( num < 1024 ) && ( num % 4 == 0 )		2630490	0		&&			
ANR	2637076	RelationalExpression	reg1 < 8		2630490	0		<			
ANR	2637077	Identifier	reg1		2630490	0					
ANR	2637078	PrimaryExpression	8		2630490	1					
ANR	2637079	AndExpression	( num < 1024 ) && ( num % 4 == 0 )		2630490	1		&&			
ANR	2637080	RelationalExpression	num < 1024		2630490	0		<			
ANR	2637081	Identifier	num		2630490	0					
ANR	2637082	PrimaryExpression	1024		2630490	1					
ANR	2637083	EqualityExpression	num % 4 == 0		2630490	1		==			
ANR	2637084	MultiplicativeExpression	num % 4		2630490	0		%			
ANR	2637085	Identifier	num		2630490	0					
ANR	2637086	PrimaryExpression	4		2630490	1					
ANR	2637087	PrimaryExpression	0		2630490	1					
ANR	2637088	CompoundStatement		1137:55:25221:25221	2630490	1					
ANR	2637089	ExpressionStatement	ao -> o = 0x0048	2430:6:51088:51102	2630490	0	True				
ANR	2637090	AssignmentExpression	ao -> o = 0x0048		2630490	0		=			
ANR	2637091	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637092	Identifier	ao		2630490	0					
ANR	2637093	Identifier	o		2630490	1					
ANR	2637094	PrimaryExpression	0x0048		2630490	1					
ANR	2637095	ExpressionStatement	ao -> o |= reg1	2431:6:51110:51123	2630490	1	True				
ANR	2637096	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2637097	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637098	Identifier	ao		2630490	0					
ANR	2637099	Identifier	o		2630490	1					
ANR	2637100	Identifier	reg1		2630490	1					
ANR	2637101	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	2432:6:51131:51155	2630490	2	True				
ANR	2637102	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		2630490	0		|=			
ANR	2637103	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637104	Identifier	ao		2630490	0					
ANR	2637105	Identifier	o		2630490	1					
ANR	2637106	ShiftExpression	( num >> 2 ) << 8		2630490	1		<<			
ANR	2637107	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2637108	Identifier	num		2630490	0					
ANR	2637109	PrimaryExpression	2		2630490	1					
ANR	2637110	PrimaryExpression	8		2630490	1					
ANR	2637111	ReturnStatement	return 2 ;	2433:6:51163:51171	2630490	3	True				
ANR	2637112	PrimaryExpression	2		2630490	0					
ANR	2637113	ExpressionStatement	ao -> o = 0x5ff80000	2435:5:51185:51203	2630490	2	True				
ANR	2637114	AssignmentExpression	ao -> o = 0x5ff80000		2630490	0		=			
ANR	2637115	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637116	Identifier	ao		2630490	0					
ANR	2637117	Identifier	o		2630490	1					
ANR	2637118	PrimaryExpression	0x5ff80000		2630490	1					
ANR	2637119	IfStatement	if ( num < 0 )		2630490	3					
ANR	2637120	Condition	num < 0	2436:9:51214:51220	2630490	0	True				
ANR	2637121	RelationalExpression	num < 0		2630490	0		<			
ANR	2637122	Identifier	num		2630490	0					
ANR	2637123	PrimaryExpression	0		2630490	1					
ANR	2637124	CompoundStatement		1144:18:25364:25364	2630490	1					
ANR	2637125	ExpressionStatement	num = - num	2437:6:51231:51241	2630490	0	True				
ANR	2637126	AssignmentExpression	num = - num		2630490	0		=			
ANR	2637127	Identifier	num		2630490	0					
ANR	2637128	UnaryOperationExpression	- num		2630490	1					
ANR	2637129	UnaryOperator	-		2630490	0					
ANR	2637130	Identifier	num		2630490	1					
ANR	2637131	ElseStatement	else		2630490	0					
ANR	2637132	CompoundStatement		1146:12:25396:25396	2630490	0					
ANR	2637133	ExpressionStatement	ao -> o |= 1 << 31	2439:6:51263:51279	2630490	0	True				
ANR	2637134	AssignmentExpression	ao -> o |= 1 << 31		2630490	0		|=			
ANR	2637135	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637136	Identifier	ao		2630490	0					
ANR	2637137	Identifier	o		2630490	1					
ANR	2637138	ShiftExpression	1 << 31		2630490	1		<<			
ANR	2637139	PrimaryExpression	1		2630490	0					
ANR	2637140	PrimaryExpression	31		2630490	1					
ANR	2637141	ExpressionStatement	ao -> o |= reg1 << 4	2441:5:51293:51311	2630490	4	True				
ANR	2637142	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2637143	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637144	Identifier	ao		2630490	0					
ANR	2637145	Identifier	o		2630490	1					
ANR	2637146	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2637147	Identifier	reg1		2630490	0					
ANR	2637148	PrimaryExpression	4		2630490	1					
ANR	2637149	ExpressionStatement	ao -> o |= ( num & 0xff ) << 8	2442:5:51318:51344	2630490	5	True				
ANR	2637150	AssignmentExpression	ao -> o |= ( num & 0xff ) << 8		2630490	0		|=			
ANR	2637151	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637152	Identifier	ao		2630490	0					
ANR	2637153	Identifier	o		2630490	1					
ANR	2637154	ShiftExpression	( num & 0xff ) << 8		2630490	1		<<			
ANR	2637155	BitAndExpression	num & 0xff		2630490	0		&			
ANR	2637156	Identifier	num		2630490	0					
ANR	2637157	PrimaryExpression	0xff		2630490	1					
ANR	2637158	PrimaryExpression	8		2630490	1					
ANR	2637159	ExpressionStatement	ao -> o |= ( num & 0x0f00 ) >> 8	2443:5:51351:51379	2630490	6	True				
ANR	2637160	AssignmentExpression	ao -> o |= ( num & 0x0f00 ) >> 8		2630490	0		|=			
ANR	2637161	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637162	Identifier	ao		2630490	0					
ANR	2637163	Identifier	o		2630490	1					
ANR	2637164	ShiftExpression	( num & 0x0f00 ) >> 8		2630490	1		>>			
ANR	2637165	BitAndExpression	num & 0x0f00		2630490	0		&			
ANR	2637166	Identifier	num		2630490	0					
ANR	2637167	PrimaryExpression	0x0f00		2630490	1					
ANR	2637168	PrimaryExpression	8		2630490	1					
ANR	2637169	ReturnStatement	return 4 ;	2444:5:51386:51394	2630490	7	True				
ANR	2637170	PrimaryExpression	4		2630490	0					
ANR	2637171	IfStatement	if ( ( reg2 == 13 ) && ( reg1 < 8 ) && ( num >= 0 ) && ( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) ) )		2630490	2					
ANR	2637172	Condition	( reg2 == 13 ) && ( reg1 < 8 ) && ( num >= 0 ) && ( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) )	2446:8:51410:51504	2630490	0	True				
ANR	2637173	AndExpression	( reg2 == 13 ) && ( reg1 < 8 ) && ( num >= 0 ) && ( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) )		2630490	0		&&			
ANR	2637174	EqualityExpression	reg2 == 13		2630490	0		==			
ANR	2637175	Identifier	reg2		2630490	0					
ANR	2637176	PrimaryExpression	13		2630490	1					
ANR	2637177	AndExpression	( reg1 < 8 ) && ( num >= 0 ) && ( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) )		2630490	1		&&			
ANR	2637178	RelationalExpression	reg1 < 8		2630490	0		<			
ANR	2637179	Identifier	reg1		2630490	0					
ANR	2637180	PrimaryExpression	8		2630490	1					
ANR	2637181	AndExpression	( num >= 0 ) && ( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) )		2630490	1		&&			
ANR	2637182	RelationalExpression	num >= 0		2630490	0		>=			
ANR	2637183	Identifier	num		2630490	0					
ANR	2637184	PrimaryExpression	0		2630490	1					
ANR	2637185	AndExpression	( num < 1024 ) && ( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) )		2630490	1		&&			
ANR	2637186	RelationalExpression	num < 1024		2630490	0		<			
ANR	2637187	Identifier	num		2630490	0					
ANR	2637188	PrimaryExpression	1024		2630490	1					
ANR	2637189	AndExpression	( num % 4 == 0 ) && ( ! ( m & DOTW_BIT ) )		2630490	1		&&			
ANR	2637190	EqualityExpression	num % 4 == 0		2630490	0		==			
ANR	2637191	MultiplicativeExpression	num % 4		2630490	0		%			
ANR	2637192	Identifier	num		2630490	0					
ANR	2637193	PrimaryExpression	4		2630490	1					
ANR	2637194	PrimaryExpression	0		2630490	1					
ANR	2637195	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	1					
ANR	2637196	UnaryOperator	!		2630490	0					
ANR	2637197	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2637198	Identifier	m		2630490	0					
ANR	2637199	Identifier	DOTW_BIT		2630490	1					
ANR	2637200	CompoundStatement		1154:105:25648:25648	2630490	1					
ANR	2637201	ExpressionStatement	ao -> o = 0x0098	2447:5:51514:51528	2630490	0	True				
ANR	2637202	AssignmentExpression	ao -> o = 0x0098		2630490	0		=			
ANR	2637203	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637204	Identifier	ao		2630490	0					
ANR	2637205	Identifier	o		2630490	1					
ANR	2637206	PrimaryExpression	0x0098		2630490	1					
ANR	2637207	ExpressionStatement	ao -> o |= reg1	2448:5:51535:51548	2630490	1	True				
ANR	2637208	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2637209	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637210	Identifier	ao		2630490	0					
ANR	2637211	Identifier	o		2630490	1					
ANR	2637212	Identifier	reg1		2630490	1					
ANR	2637213	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	2449:5:51555:51579	2630490	2	True				
ANR	2637214	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		2630490	0		|=			
ANR	2637215	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637216	Identifier	ao		2630490	0					
ANR	2637217	Identifier	o		2630490	1					
ANR	2637218	ShiftExpression	( num >> 2 ) << 8		2630490	1		<<			
ANR	2637219	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2637220	Identifier	num		2630490	0					
ANR	2637221	PrimaryExpression	2		2630490	1					
ANR	2637222	PrimaryExpression	8		2630490	1					
ANR	2637223	ReturnStatement	return 2 ;	2450:5:51586:51594	2630490	3	True				
ANR	2637224	PrimaryExpression	2		2630490	0					
ANR	2637225	IfStatement	if ( ( num >= 0 ) && ( num < 128 ) && ( num % 4 == 0 ) )		2630490	3					
ANR	2637226	Condition	( num >= 0 ) && ( num < 128 ) && ( num % 4 == 0 )	2452:8:51610:51652	2630490	0	True				
ANR	2637227	AndExpression	( num >= 0 ) && ( num < 128 ) && ( num % 4 == 0 )		2630490	0		&&			
ANR	2637228	RelationalExpression	num >= 0		2630490	0		>=			
ANR	2637229	Identifier	num		2630490	0					
ANR	2637230	PrimaryExpression	0		2630490	1					
ANR	2637231	AndExpression	( num < 128 ) && ( num % 4 == 0 )		2630490	1		&&			
ANR	2637232	RelationalExpression	num < 128		2630490	0		<			
ANR	2637233	Identifier	num		2630490	0					
ANR	2637234	PrimaryExpression	128		2630490	1					
ANR	2637235	EqualityExpression	num % 4 == 0		2630490	1		==			
ANR	2637236	MultiplicativeExpression	num % 4		2630490	0		%			
ANR	2637237	Identifier	num		2630490	0					
ANR	2637238	PrimaryExpression	4		2630490	1					
ANR	2637239	PrimaryExpression	0		2630490	1					
ANR	2637240	CompoundStatement		1160:53:25796:25796	2630490	1					
ANR	2637241	ExpressionStatement	ao -> o = 0x0068	2453:5:51662:51676	2630490	0	True				
ANR	2637242	AssignmentExpression	ao -> o = 0x0068		2630490	0		=			
ANR	2637243	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637244	Identifier	ao		2630490	0					
ANR	2637245	Identifier	o		2630490	1					
ANR	2637246	PrimaryExpression	0x0068		2630490	1					
ANR	2637247	ExpressionStatement	ao -> o |= ( num >> 4 )	2454:5:51683:51702	2630490	1	True				
ANR	2637248	AssignmentExpression	ao -> o |= ( num >> 4 )		2630490	0		|=			
ANR	2637249	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637250	Identifier	ao		2630490	0					
ANR	2637251	Identifier	o		2630490	1					
ANR	2637252	ShiftExpression	num >> 4		2630490	1		>>			
ANR	2637253	Identifier	num		2630490	0					
ANR	2637254	PrimaryExpression	4		2630490	1					
ANR	2637255	ExpressionStatement	ao -> o |= ( ( num >> 2 ) & 0x3 ) << 14	2455:5:51709:51742	2630490	2	True				
ANR	2637256	AssignmentExpression	ao -> o |= ( ( num >> 2 ) & 0x3 ) << 14		2630490	0		|=			
ANR	2637257	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637258	Identifier	ao		2630490	0					
ANR	2637259	Identifier	o		2630490	1					
ANR	2637260	ShiftExpression	( ( num >> 2 ) & 0x3 ) << 14		2630490	1		<<			
ANR	2637261	BitAndExpression	( num >> 2 ) & 0x3		2630490	0		&			
ANR	2637262	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2637263	Identifier	num		2630490	0					
ANR	2637264	PrimaryExpression	2		2630490	1					
ANR	2637265	PrimaryExpression	0x3		2630490	1					
ANR	2637266	PrimaryExpression	14		2630490	1					
ANR	2637267	IfStatement	"if ( mem_16bit_2reg ( ao , m ) )"		2630490	3					
ANR	2637268	Condition	"mem_16bit_2reg ( ao , m )"	2456:9:51753:51774	2630490	0	True				
ANR	2637269	CallExpression	"mem_16bit_2reg ( ao , m )"		2630490	0					
ANR	2637270	Callee	mem_16bit_2reg		2630490	0					
ANR	2637271	Identifier	mem_16bit_2reg		2630490	0					
ANR	2637272	ArgumentList	ao		2630490	1					
ANR	2637273	Argument	ao		2630490	0					
ANR	2637274	Identifier	ao		2630490	0					
ANR	2637275	Argument	m		2630490	1					
ANR	2637276	Identifier	m		2630490	0					
ANR	2637277	CompoundStatement		1164:33:25918:25918	2630490	1					
ANR	2637278	ReturnStatement	return 2 ;	2457:6:51785:51793	2630490	0	True				
ANR	2637279	PrimaryExpression	2		2630490	0					
ANR	2637280	IfStatement	if ( ( num > 4095 ) || ( num < - 1023 ) )		2630490	4					
ANR	2637281	Condition	( num > 4095 ) || ( num < - 1023 )	2460:8:51816:51844	2630490	0	True				
ANR	2637282	OrExpression	( num > 4095 ) || ( num < - 1023 )		2630490	0		||			
ANR	2637283	RelationalExpression	num > 4095		2630490	0		>			
ANR	2637284	Identifier	num		2630490	0					
ANR	2637285	PrimaryExpression	4095		2630490	1					
ANR	2637286	RelationalExpression	num < - 1023		2630490	1		<			
ANR	2637287	Identifier	num		2630490	0					
ANR	2637288	UnaryOperationExpression	- 1023		2630490	1					
ANR	2637289	UnaryOperator	-		2630490	0					
ANR	2637290	PrimaryExpression	1023		2630490	1					
ANR	2637291	CompoundStatement		1168:39:25988:25988	2630490	1					
ANR	2637292	ReturnStatement	return - 1 ;	2461:5:51854:51863	2630490	0	True				
ANR	2637293	UnaryOperationExpression	- 1		2630490	0					
ANR	2637294	UnaryOperator	-		2630490	0					
ANR	2637295	PrimaryExpression	1		2630490	1					
ANR	2637296	IfStatement	if ( num >= 0 )		2630490	5					
ANR	2637297	Condition	num >= 0	2463:8:51879:51886	2630490	0	True				
ANR	2637298	RelationalExpression	num >= 0		2630490	0		>=			
ANR	2637299	Identifier	num		2630490	0					
ANR	2637300	PrimaryExpression	0		2630490	1					
ANR	2637301	CompoundStatement		1171:18:26030:26030	2630490	1					
ANR	2637302	ExpressionStatement	ao -> o = 0xd0f80000	2464:5:51896:51914	2630490	0	True				
ANR	2637303	AssignmentExpression	ao -> o = 0xd0f80000		2630490	0		=			
ANR	2637304	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637305	Identifier	ao		2630490	0					
ANR	2637306	Identifier	o		2630490	1					
ANR	2637307	PrimaryExpression	0xd0f80000		2630490	1					
ANR	2637308	ExpressionStatement	ao -> o |= ( num & 0xff ) << 8	2465:5:51921:51947	2630490	1	True				
ANR	2637309	AssignmentExpression	ao -> o |= ( num & 0xff ) << 8		2630490	0		|=			
ANR	2637310	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637311	Identifier	ao		2630490	0					
ANR	2637312	Identifier	o		2630490	1					
ANR	2637313	ShiftExpression	( num & 0xff ) << 8		2630490	1		<<			
ANR	2637314	BitAndExpression	num & 0xff		2630490	0		&			
ANR	2637315	Identifier	num		2630490	0					
ANR	2637316	PrimaryExpression	0xff		2630490	1					
ANR	2637317	PrimaryExpression	8		2630490	1					
ANR	2637318	ExpressionStatement	ao -> o |= ( num & 0xf00 ) >> 8	2466:5:51954:51981	2630490	2	True				
ANR	2637319	AssignmentExpression	ao -> o |= ( num & 0xf00 ) >> 8		2630490	0		|=			
ANR	2637320	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637321	Identifier	ao		2630490	0					
ANR	2637322	Identifier	o		2630490	1					
ANR	2637323	ShiftExpression	( num & 0xf00 ) >> 8		2630490	1		>>			
ANR	2637324	BitAndExpression	num & 0xf00		2630490	0		&			
ANR	2637325	Identifier	num		2630490	0					
ANR	2637326	PrimaryExpression	0xf00		2630490	1					
ANR	2637327	PrimaryExpression	8		2630490	1					
ANR	2637328	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2467:5:51988:52017	2630490	3	True				
ANR	2637329	CallExpression	"mem_32bit_2reg ( ao , m )"		2630490	0					
ANR	2637330	Callee	mem_32bit_2reg		2630490	0					
ANR	2637331	Identifier	mem_32bit_2reg		2630490	0					
ANR	2637332	ArgumentList	ao		2630490	1					
ANR	2637333	Argument	ao		2630490	0					
ANR	2637334	Identifier	ao		2630490	0					
ANR	2637335	Argument	m		2630490	1					
ANR	2637336	Identifier	m		2630490	0					
ANR	2637337	ExpressionStatement	ao -> o = 0x50f8000c	2469:4:52029:52047	2630490	6	True				
ANR	2637338	AssignmentExpression	ao -> o = 0x50f8000c		2630490	0		=			
ANR	2637339	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637340	Identifier	ao		2630490	0					
ANR	2637341	Identifier	o		2630490	1					
ANR	2637342	PrimaryExpression	0x50f8000c		2630490	1					
ANR	2637343	ExpressionStatement	ao -> o |= ( - num & 0xff ) << 8	2470:4:52053:52080	2630490	7	True				
ANR	2637344	AssignmentExpression	ao -> o |= ( - num & 0xff ) << 8		2630490	0		|=			
ANR	2637345	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637346	Identifier	ao		2630490	0					
ANR	2637347	Identifier	o		2630490	1					
ANR	2637348	ShiftExpression	( - num & 0xff ) << 8		2630490	1		<<			
ANR	2637349	BitAndExpression	- num & 0xff		2630490	0		&			
ANR	2637350	UnaryOperationExpression	- num		2630490	0					
ANR	2637351	UnaryOperator	-		2630490	0					
ANR	2637352	Identifier	num		2630490	1					
ANR	2637353	PrimaryExpression	0xff		2630490	1					
ANR	2637354	PrimaryExpression	8		2630490	1					
ANR	2637355	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2471:4:52086:52115	2630490	8	True				
ANR	2637356	CallExpression	"mem_32bit_2reg ( ao , m )"		2630490	0					
ANR	2637357	Callee	mem_32bit_2reg		2630490	0					
ANR	2637358	Identifier	mem_32bit_2reg		2630490	0					
ANR	2637359	ArgumentList	ao		2630490	1					
ANR	2637360	Argument	ao		2630490	0					
ANR	2637361	Identifier	ao		2630490	0					
ANR	2637362	Argument	m		2630490	1					
ANR	2637363	Identifier	m		2630490	0					
ANR	2637364	ElseStatement	else		2630490	0					
ANR	2637365	IfStatement	if ( ldrsel == B_BIT )		2630490	0					
ANR	2637366	Condition	ldrsel == B_BIT	2473:7:52134:52148	2630490	0	True				
ANR	2637367	EqualityExpression	ldrsel == B_BIT		2630490	0		==			
ANR	2637368	Identifier	ldrsel		2630490	0					
ANR	2637369	Identifier	B_BIT		2630490	1					
ANR	2637370	CompoundStatement		1181:24:26292:26292	2630490	1					
ANR	2637371	IfStatement	if ( m & T_BIT )		2630490	0					
ANR	2637372	Condition	m & T_BIT	2474:8:52161:52169	2630490	0	True				
ANR	2637373	BitAndExpression	m & T_BIT		2630490	0		&			
ANR	2637374	Identifier	m		2630490	0					
ANR	2637375	Identifier	T_BIT		2630490	1					
ANR	2637376	CompoundStatement		1182:19:26313:26313	2630490	1					
ANR	2637377	IfStatement	if ( ( num < 0 ) || ( num > 255 ) )		2630490	0					
ANR	2637378	Condition	( num < 0 ) || ( num > 255 )	2475:9:52183:52206	2630490	0	True				
ANR	2637379	OrExpression	( num < 0 ) || ( num > 255 )		2630490	0		||			
ANR	2637380	RelationalExpression	num < 0		2630490	0		<			
ANR	2637381	Identifier	num		2630490	0					
ANR	2637382	PrimaryExpression	0		2630490	1					
ANR	2637383	RelationalExpression	num > 255		2630490	1		>			
ANR	2637384	Identifier	num		2630490	0					
ANR	2637385	PrimaryExpression	255		2630490	1					
ANR	2637386	CompoundStatement		1183:35:26350:26350	2630490	1					
ANR	2637387	ReturnStatement	return - 1 ;	2476:6:52217:52226	2630490	0	True				
ANR	2637388	UnaryOperationExpression	- 1		2630490	0					
ANR	2637389	UnaryOperator	-		2630490	0					
ANR	2637390	PrimaryExpression	1		2630490	1					
ANR	2637391	ExpressionStatement	ao -> o = 0x10f8000e	2478:5:52240:52258	2630490	1	True				
ANR	2637392	AssignmentExpression	ao -> o = 0x10f8000e		2630490	0		=			
ANR	2637393	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637394	Identifier	ao		2630490	0					
ANR	2637395	Identifier	o		2630490	1					
ANR	2637396	PrimaryExpression	0x10f8000e		2630490	1					
ANR	2637397	IfStatement	if ( m & S_BIT )		2630490	2					
ANR	2637398	Condition	m & S_BIT	2479:9:52269:52277	2630490	0	True				
ANR	2637399	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2637400	Identifier	m		2630490	0					
ANR	2637401	Identifier	S_BIT		2630490	1					
ANR	2637402	CompoundStatement		1187:20:26421:26421	2630490	1					
ANR	2637403	ExpressionStatement	ao -> o |= 1 << 16	2480:6:52288:52304	2630490	0	True				
ANR	2637404	AssignmentExpression	ao -> o |= 1 << 16		2630490	0		|=			
ANR	2637405	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637406	Identifier	ao		2630490	0					
ANR	2637407	Identifier	o		2630490	1					
ANR	2637408	ShiftExpression	1 << 16		2630490	1		<<			
ANR	2637409	PrimaryExpression	1		2630490	0					
ANR	2637410	PrimaryExpression	16		2630490	1					
ANR	2637411	ExpressionStatement	ao -> o |= num << 8	2482:5:52318:52335	2630490	3	True				
ANR	2637412	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2637413	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637414	Identifier	ao		2630490	0					
ANR	2637415	Identifier	o		2630490	1					
ANR	2637416	ShiftExpression	num << 8		2630490	1		<<			
ANR	2637417	Identifier	num		2630490	0					
ANR	2637418	PrimaryExpression	8		2630490	1					
ANR	2637419	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2483:5:52342:52371	2630490	4	True				
ANR	2637420	CallExpression	"mem_32bit_2reg ( ao , m )"		2630490	0					
ANR	2637421	Callee	mem_32bit_2reg		2630490	0					
ANR	2637422	Identifier	mem_32bit_2reg		2630490	0					
ANR	2637423	ArgumentList	ao		2630490	1					
ANR	2637424	Argument	ao		2630490	0					
ANR	2637425	Identifier	ao		2630490	0					
ANR	2637426	Argument	m		2630490	1					
ANR	2637427	Identifier	m		2630490	0					
ANR	2637428	IfStatement	if ( reg2 == 15 )		2630490	1					
ANR	2637429	Condition	reg2 == 15	2485:8:52387:52396	2630490	0	True				
ANR	2637430	EqualityExpression	reg2 == 15		2630490	0		==			
ANR	2637431	Identifier	reg2		2630490	0					
ANR	2637432	PrimaryExpression	15		2630490	1					
ANR	2637433	CompoundStatement		1193:20:26540:26540	2630490	1					
ANR	2637434	IfStatement	if ( ( num > 4095 ) || ( num < - 4095 ) )		2630490	0					
ANR	2637435	Condition	( num > 4095 ) || ( num < - 4095 )	2486:9:52410:52438	2630490	0	True				
ANR	2637436	OrExpression	( num > 4095 ) || ( num < - 4095 )		2630490	0		||			
ANR	2637437	RelationalExpression	num > 4095		2630490	0		>			
ANR	2637438	Identifier	num		2630490	0					
ANR	2637439	PrimaryExpression	4095		2630490	1					
ANR	2637440	RelationalExpression	num < - 4095		2630490	1		<			
ANR	2637441	Identifier	num		2630490	0					
ANR	2637442	UnaryOperationExpression	- 4095		2630490	1					
ANR	2637443	UnaryOperator	-		2630490	0					
ANR	2637444	PrimaryExpression	4095		2630490	1					
ANR	2637445	CompoundStatement		1194:40:26582:26582	2630490	1					
ANR	2637446	ReturnStatement	return - 1 ;	2487:6:52449:52458	2630490	0	True				
ANR	2637447	UnaryOperationExpression	- 1		2630490	0					
ANR	2637448	UnaryOperator	-		2630490	0					
ANR	2637449	PrimaryExpression	1		2630490	1					
ANR	2637450	ExpressionStatement	ao -> o = 0x1ff80000	2489:5:52472:52490	2630490	1	True				
ANR	2637451	AssignmentExpression	ao -> o = 0x1ff80000		2630490	0		=			
ANR	2637452	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637453	Identifier	ao		2630490	0					
ANR	2637454	Identifier	o		2630490	1					
ANR	2637455	PrimaryExpression	0x1ff80000		2630490	1					
ANR	2637456	IfStatement	if ( m & S_BIT )		2630490	2					
ANR	2637457	Condition	m & S_BIT	2490:9:52501:52509	2630490	0	True				
ANR	2637458	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2637459	Identifier	m		2630490	0					
ANR	2637460	Identifier	S_BIT		2630490	1					
ANR	2637461	CompoundStatement		1198:20:26653:26653	2630490	1					
ANR	2637462	ExpressionStatement	ao -> o |= 1 << 16	2491:6:52520:52536	2630490	0	True				
ANR	2637463	AssignmentExpression	ao -> o |= 1 << 16		2630490	0		|=			
ANR	2637464	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637465	Identifier	ao		2630490	0					
ANR	2637466	Identifier	o		2630490	1					
ANR	2637467	ShiftExpression	1 << 16		2630490	1		<<			
ANR	2637468	PrimaryExpression	1		2630490	0					
ANR	2637469	PrimaryExpression	16		2630490	1					
ANR	2637470	IfStatement	if ( num < 0 )		2630490	3					
ANR	2637471	Condition	num < 0	2493:9:52554:52560	2630490	0	True				
ANR	2637472	RelationalExpression	num < 0		2630490	0		<			
ANR	2637473	Identifier	num		2630490	0					
ANR	2637474	PrimaryExpression	0		2630490	1					
ANR	2637475	CompoundStatement		1201:18:26704:26704	2630490	1					
ANR	2637476	ExpressionStatement	num = - num	2494:6:52571:52581	2630490	0	True				
ANR	2637477	AssignmentExpression	num = - num		2630490	0		=			
ANR	2637478	Identifier	num		2630490	0					
ANR	2637479	UnaryOperationExpression	- num		2630490	1					
ANR	2637480	UnaryOperator	-		2630490	0					
ANR	2637481	Identifier	num		2630490	1					
ANR	2637482	ElseStatement	else		2630490	0					
ANR	2637483	CompoundStatement		1203:12:26736:26736	2630490	0					
ANR	2637484	ExpressionStatement	ao -> o |= 1 << 31	2496:6:52603:52619	2630490	0	True				
ANR	2637485	AssignmentExpression	ao -> o |= 1 << 31		2630490	0		|=			
ANR	2637486	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637487	Identifier	ao		2630490	0					
ANR	2637488	Identifier	o		2630490	1					
ANR	2637489	ShiftExpression	1 << 31		2630490	1		<<			
ANR	2637490	PrimaryExpression	1		2630490	0					
ANR	2637491	PrimaryExpression	31		2630490	1					
ANR	2637492	ExpressionStatement	ao -> o |= reg1 << 4	2498:5:52633:52651	2630490	4	True				
ANR	2637493	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2637494	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637495	Identifier	ao		2630490	0					
ANR	2637496	Identifier	o		2630490	1					
ANR	2637497	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2637498	Identifier	reg1		2630490	0					
ANR	2637499	PrimaryExpression	4		2630490	1					
ANR	2637500	ExpressionStatement	ao -> o |= ( num & 0xff ) << 8	2499:5:52658:52684	2630490	5	True				
ANR	2637501	AssignmentExpression	ao -> o |= ( num & 0xff ) << 8		2630490	0		|=			
ANR	2637502	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637503	Identifier	ao		2630490	0					
ANR	2637504	Identifier	o		2630490	1					
ANR	2637505	ShiftExpression	( num & 0xff ) << 8		2630490	1		<<			
ANR	2637506	BitAndExpression	num & 0xff		2630490	0		&			
ANR	2637507	Identifier	num		2630490	0					
ANR	2637508	PrimaryExpression	0xff		2630490	1					
ANR	2637509	PrimaryExpression	8		2630490	1					
ANR	2637510	ExpressionStatement	ao -> o |= ( num & 0x0f00 ) >> 8	2500:5:52691:52719	2630490	6	True				
ANR	2637511	AssignmentExpression	ao -> o |= ( num & 0x0f00 ) >> 8		2630490	0		|=			
ANR	2637512	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637513	Identifier	ao		2630490	0					
ANR	2637514	Identifier	o		2630490	1					
ANR	2637515	ShiftExpression	( num & 0x0f00 ) >> 8		2630490	1		>>			
ANR	2637516	BitAndExpression	num & 0x0f00		2630490	0		&			
ANR	2637517	Identifier	num		2630490	0					
ANR	2637518	PrimaryExpression	0x0f00		2630490	1					
ANR	2637519	PrimaryExpression	8		2630490	1					
ANR	2637520	ReturnStatement	return 4 ;	2501:5:52726:52734	2630490	7	True				
ANR	2637521	PrimaryExpression	4		2630490	0					
ANR	2637522	IfStatement	if ( ( num >= 0 ) && ( num < 32 ) && ( ! ( m & S_BIT ) ) )		2630490	2					
ANR	2637523	Condition	( num >= 0 ) && ( num < 32 ) && ( ! ( m & S_BIT ) )	2503:8:52750:52791	2630490	0	True				
ANR	2637524	AndExpression	( num >= 0 ) && ( num < 32 ) && ( ! ( m & S_BIT ) )		2630490	0		&&			
ANR	2637525	RelationalExpression	num >= 0		2630490	0		>=			
ANR	2637526	Identifier	num		2630490	0					
ANR	2637527	PrimaryExpression	0		2630490	1					
ANR	2637528	AndExpression	( num < 32 ) && ( ! ( m & S_BIT ) )		2630490	1		&&			
ANR	2637529	RelationalExpression	num < 32		2630490	0		<			
ANR	2637530	Identifier	num		2630490	0					
ANR	2637531	PrimaryExpression	32		2630490	1					
ANR	2637532	UnaryOperationExpression	! ( m & S_BIT )		2630490	1					
ANR	2637533	UnaryOperator	!		2630490	0					
ANR	2637534	BitAndExpression	m & S_BIT		2630490	1		&			
ANR	2637535	Identifier	m		2630490	0					
ANR	2637536	Identifier	S_BIT		2630490	1					
ANR	2637537	CompoundStatement		1211:52:26935:26935	2630490	1					
ANR	2637538	ExpressionStatement	ao -> o = 0x0078	2504:5:52801:52815	2630490	0	True				
ANR	2637539	AssignmentExpression	ao -> o = 0x0078		2630490	0		=			
ANR	2637540	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637541	Identifier	ao		2630490	0					
ANR	2637542	Identifier	o		2630490	1					
ANR	2637543	PrimaryExpression	0x0078		2630490	1					
ANR	2637544	ExpressionStatement	ao -> o |= ( num >> 2 )	2505:5:52822:52841	2630490	1	True				
ANR	2637545	AssignmentExpression	ao -> o |= ( num >> 2 )		2630490	0		|=			
ANR	2637546	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637547	Identifier	ao		2630490	0					
ANR	2637548	Identifier	o		2630490	1					
ANR	2637549	ShiftExpression	num >> 2		2630490	1		>>			
ANR	2637550	Identifier	num		2630490	0					
ANR	2637551	PrimaryExpression	2		2630490	1					
ANR	2637552	ExpressionStatement	ao -> o |= ( num & 0x3 ) << 14	2506:5:52848:52874	2630490	2	True				
ANR	2637553	AssignmentExpression	ao -> o |= ( num & 0x3 ) << 14		2630490	0		|=			
ANR	2637554	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637555	Identifier	ao		2630490	0					
ANR	2637556	Identifier	o		2630490	1					
ANR	2637557	ShiftExpression	( num & 0x3 ) << 14		2630490	1		<<			
ANR	2637558	BitAndExpression	num & 0x3		2630490	0		&			
ANR	2637559	Identifier	num		2630490	0					
ANR	2637560	PrimaryExpression	0x3		2630490	1					
ANR	2637561	PrimaryExpression	14		2630490	1					
ANR	2637562	IfStatement	"if ( mem_16bit_2reg ( ao , m ) )"		2630490	3					
ANR	2637563	Condition	"mem_16bit_2reg ( ao , m )"	2507:9:52885:52906	2630490	0	True				
ANR	2637564	CallExpression	"mem_16bit_2reg ( ao , m )"		2630490	0					
ANR	2637565	Callee	mem_16bit_2reg		2630490	0					
ANR	2637566	Identifier	mem_16bit_2reg		2630490	0					
ANR	2637567	ArgumentList	ao		2630490	1					
ANR	2637568	Argument	ao		2630490	0					
ANR	2637569	Identifier	ao		2630490	0					
ANR	2637570	Argument	m		2630490	1					
ANR	2637571	Identifier	m		2630490	0					
ANR	2637572	CompoundStatement		1215:33:27050:27050	2630490	1					
ANR	2637573	ReturnStatement	return 2 ;	2508:6:52917:52925	2630490	0	True				
ANR	2637574	PrimaryExpression	2		2630490	0					
ANR	2637575	IfStatement	if ( ( num > 4095 ) || ( num < - 255 ) )		2630490	3					
ANR	2637576	Condition	( num > 4095 ) || ( num < - 255 )	2511:8:52948:52975	2630490	0	True				
ANR	2637577	OrExpression	( num > 4095 ) || ( num < - 255 )		2630490	0		||			
ANR	2637578	RelationalExpression	num > 4095		2630490	0		>			
ANR	2637579	Identifier	num		2630490	0					
ANR	2637580	PrimaryExpression	4095		2630490	1					
ANR	2637581	RelationalExpression	num < - 255		2630490	1		<			
ANR	2637582	Identifier	num		2630490	0					
ANR	2637583	UnaryOperationExpression	- 255		2630490	1					
ANR	2637584	UnaryOperator	-		2630490	0					
ANR	2637585	PrimaryExpression	255		2630490	1					
ANR	2637586	CompoundStatement		1219:38:27119:27119	2630490	1					
ANR	2637587	ReturnStatement	return - 1 ;	2512:5:52985:52994	2630490	0	True				
ANR	2637588	UnaryOperationExpression	- 1		2630490	0					
ANR	2637589	UnaryOperator	-		2630490	0					
ANR	2637590	PrimaryExpression	1		2630490	1					
ANR	2637591	IfStatement	if ( num >= 0 )		2630490	4					
ANR	2637592	Condition	num >= 0	2514:8:53010:53017	2630490	0	True				
ANR	2637593	RelationalExpression	num >= 0		2630490	0		>=			
ANR	2637594	Identifier	num		2630490	0					
ANR	2637595	PrimaryExpression	0		2630490	1					
ANR	2637596	CompoundStatement		1222:18:27161:27161	2630490	1					
ANR	2637597	ExpressionStatement	ao -> o = 0x90f80000	2515:5:53027:53045	2630490	0	True				
ANR	2637598	AssignmentExpression	ao -> o = 0x90f80000		2630490	0		=			
ANR	2637599	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637600	Identifier	ao		2630490	0					
ANR	2637601	Identifier	o		2630490	1					
ANR	2637602	PrimaryExpression	0x90f80000		2630490	1					
ANR	2637603	IfStatement	if ( m & S_BIT )		2630490	1					
ANR	2637604	Condition	m & S_BIT	2516:9:53056:53064	2630490	0	True				
ANR	2637605	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2637606	Identifier	m		2630490	0					
ANR	2637607	Identifier	S_BIT		2630490	1					
ANR	2637608	CompoundStatement		1224:20:27208:27208	2630490	1					
ANR	2637609	ExpressionStatement	ao -> o |= 1 << 16	2517:6:53075:53091	2630490	0	True				
ANR	2637610	AssignmentExpression	ao -> o |= 1 << 16		2630490	0		|=			
ANR	2637611	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637612	Identifier	ao		2630490	0					
ANR	2637613	Identifier	o		2630490	1					
ANR	2637614	ShiftExpression	1 << 16		2630490	1		<<			
ANR	2637615	PrimaryExpression	1		2630490	0					
ANR	2637616	PrimaryExpression	16		2630490	1					
ANR	2637617	ExpressionStatement	ao -> o |= ( num & 0xff ) << 8	2519:5:53105:53131	2630490	2	True				
ANR	2637618	AssignmentExpression	ao -> o |= ( num & 0xff ) << 8		2630490	0		|=			
ANR	2637619	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637620	Identifier	ao		2630490	0					
ANR	2637621	Identifier	o		2630490	1					
ANR	2637622	ShiftExpression	( num & 0xff ) << 8		2630490	1		<<			
ANR	2637623	BitAndExpression	num & 0xff		2630490	0		&			
ANR	2637624	Identifier	num		2630490	0					
ANR	2637625	PrimaryExpression	0xff		2630490	1					
ANR	2637626	PrimaryExpression	8		2630490	1					
ANR	2637627	ExpressionStatement	ao -> o |= ( num & 0xf00 ) >> 8	2520:5:53138:53165	2630490	3	True				
ANR	2637628	AssignmentExpression	ao -> o |= ( num & 0xf00 ) >> 8		2630490	0		|=			
ANR	2637629	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637630	Identifier	ao		2630490	0					
ANR	2637631	Identifier	o		2630490	1					
ANR	2637632	ShiftExpression	( num & 0xf00 ) >> 8		2630490	1		>>			
ANR	2637633	BitAndExpression	num & 0xf00		2630490	0		&			
ANR	2637634	Identifier	num		2630490	0					
ANR	2637635	PrimaryExpression	0xf00		2630490	1					
ANR	2637636	PrimaryExpression	8		2630490	1					
ANR	2637637	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2521:5:53172:53201	2630490	4	True				
ANR	2637638	CallExpression	"mem_32bit_2reg ( ao , m )"		2630490	0					
ANR	2637639	Callee	mem_32bit_2reg		2630490	0					
ANR	2637640	Identifier	mem_32bit_2reg		2630490	0					
ANR	2637641	ArgumentList	ao		2630490	1					
ANR	2637642	Argument	ao		2630490	0					
ANR	2637643	Identifier	ao		2630490	0					
ANR	2637644	Argument	m		2630490	1					
ANR	2637645	Identifier	m		2630490	0					
ANR	2637646	ExpressionStatement	ao -> o = 0x10f8000c	2523:4:53213:53231	2630490	5	True				
ANR	2637647	AssignmentExpression	ao -> o = 0x10f8000c		2630490	0		=			
ANR	2637648	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637649	Identifier	ao		2630490	0					
ANR	2637650	Identifier	o		2630490	1					
ANR	2637651	PrimaryExpression	0x10f8000c		2630490	1					
ANR	2637652	IfStatement	if ( m & S_BIT )		2630490	6					
ANR	2637653	Condition	m & S_BIT	2524:8:53241:53249	2630490	0	True				
ANR	2637654	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2637655	Identifier	m		2630490	0					
ANR	2637656	Identifier	S_BIT		2630490	1					
ANR	2637657	CompoundStatement		1232:19:27393:27393	2630490	1					
ANR	2637658	ExpressionStatement	ao -> o |= 1 << 16	2525:5:53259:53275	2630490	0	True				
ANR	2637659	AssignmentExpression	ao -> o |= 1 << 16		2630490	0		|=			
ANR	2637660	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637661	Identifier	ao		2630490	0					
ANR	2637662	Identifier	o		2630490	1					
ANR	2637663	ShiftExpression	1 << 16		2630490	1		<<			
ANR	2637664	PrimaryExpression	1		2630490	0					
ANR	2637665	PrimaryExpression	16		2630490	1					
ANR	2637666	ExpressionStatement	ao -> o |= - num << 8	2527:4:53287:53305	2630490	7	True				
ANR	2637667	AssignmentExpression	ao -> o |= - num << 8		2630490	0		|=			
ANR	2637668	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637669	Identifier	ao		2630490	0					
ANR	2637670	Identifier	o		2630490	1					
ANR	2637671	ShiftExpression	- num << 8		2630490	1		<<			
ANR	2637672	UnaryOperationExpression	- num		2630490	0					
ANR	2637673	UnaryOperator	-		2630490	0					
ANR	2637674	Identifier	num		2630490	1					
ANR	2637675	PrimaryExpression	8		2630490	1					
ANR	2637676	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2528:4:53311:53340	2630490	8	True				
ANR	2637677	CallExpression	"mem_32bit_2reg ( ao , m )"		2630490	0					
ANR	2637678	Callee	mem_32bit_2reg		2630490	0					
ANR	2637679	Identifier	mem_32bit_2reg		2630490	0					
ANR	2637680	ArgumentList	ao		2630490	1					
ANR	2637681	Argument	ao		2630490	0					
ANR	2637682	Identifier	ao		2630490	0					
ANR	2637683	Argument	m		2630490	1					
ANR	2637684	Identifier	m		2630490	0					
ANR	2637685	ElseStatement	else		2630490	0					
ANR	2637686	IfStatement	if ( ldrsel == H_BIT )		2630490	0					
ANR	2637687	Condition	ldrsel == H_BIT	2530:7:53359:53373	2630490	0	True				
ANR	2637688	EqualityExpression	ldrsel == H_BIT		2630490	0		==			
ANR	2637689	Identifier	ldrsel		2630490	0					
ANR	2637690	Identifier	H_BIT		2630490	1					
ANR	2637691	CompoundStatement		1238:24:27517:27517	2630490	1					
ANR	2637692	IfStatement	if ( m & T_BIT )		2630490	0					
ANR	2637693	Condition	m & T_BIT	2531:8:53386:53394	2630490	0	True				
ANR	2637694	BitAndExpression	m & T_BIT		2630490	0		&			
ANR	2637695	Identifier	m		2630490	0					
ANR	2637696	Identifier	T_BIT		2630490	1					
ANR	2637697	CompoundStatement		1239:19:27538:27538	2630490	1					
ANR	2637698	IfStatement	if ( ( num < 0 ) || ( num > 255 ) )		2630490	0					
ANR	2637699	Condition	( num < 0 ) || ( num > 255 )	2532:9:53408:53431	2630490	0	True				
ANR	2637700	OrExpression	( num < 0 ) || ( num > 255 )		2630490	0		||			
ANR	2637701	RelationalExpression	num < 0		2630490	0		<			
ANR	2637702	Identifier	num		2630490	0					
ANR	2637703	PrimaryExpression	0		2630490	1					
ANR	2637704	RelationalExpression	num > 255		2630490	1		>			
ANR	2637705	Identifier	num		2630490	0					
ANR	2637706	PrimaryExpression	255		2630490	1					
ANR	2637707	CompoundStatement		1240:35:27575:27575	2630490	1					
ANR	2637708	ReturnStatement	return - 1 ;	2533:6:53442:53451	2630490	0	True				
ANR	2637709	UnaryOperationExpression	- 1		2630490	0					
ANR	2637710	UnaryOperator	-		2630490	0					
ANR	2637711	PrimaryExpression	1		2630490	1					
ANR	2637712	ExpressionStatement	ao -> o = 0x30f8000e	2535:5:53465:53483	2630490	1	True				
ANR	2637713	AssignmentExpression	ao -> o = 0x30f8000e		2630490	0		=			
ANR	2637714	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637715	Identifier	ao		2630490	0					
ANR	2637716	Identifier	o		2630490	1					
ANR	2637717	PrimaryExpression	0x30f8000e		2630490	1					
ANR	2637718	IfStatement	if ( m & S_BIT )		2630490	2					
ANR	2637719	Condition	m & S_BIT	2536:9:53494:53502	2630490	0	True				
ANR	2637720	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2637721	Identifier	m		2630490	0					
ANR	2637722	Identifier	S_BIT		2630490	1					
ANR	2637723	CompoundStatement		1244:20:27646:27646	2630490	1					
ANR	2637724	ExpressionStatement	ao -> o |= 1 << 16	2537:6:53513:53529	2630490	0	True				
ANR	2637725	AssignmentExpression	ao -> o |= 1 << 16		2630490	0		|=			
ANR	2637726	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637727	Identifier	ao		2630490	0					
ANR	2637728	Identifier	o		2630490	1					
ANR	2637729	ShiftExpression	1 << 16		2630490	1		<<			
ANR	2637730	PrimaryExpression	1		2630490	0					
ANR	2637731	PrimaryExpression	16		2630490	1					
ANR	2637732	ExpressionStatement	ao -> o |= num << 8	2539:5:53543:53560	2630490	3	True				
ANR	2637733	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2637734	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637735	Identifier	ao		2630490	0					
ANR	2637736	Identifier	o		2630490	1					
ANR	2637737	ShiftExpression	num << 8		2630490	1		<<			
ANR	2637738	Identifier	num		2630490	0					
ANR	2637739	PrimaryExpression	8		2630490	1					
ANR	2637740	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2540:5:53567:53596	2630490	4	True				
ANR	2637741	CallExpression	"mem_32bit_2reg ( ao , m )"		2630490	0					
ANR	2637742	Callee	mem_32bit_2reg		2630490	0					
ANR	2637743	Identifier	mem_32bit_2reg		2630490	0					
ANR	2637744	ArgumentList	ao		2630490	1					
ANR	2637745	Argument	ao		2630490	0					
ANR	2637746	Identifier	ao		2630490	0					
ANR	2637747	Argument	m		2630490	1					
ANR	2637748	Identifier	m		2630490	0					
ANR	2637749	IfStatement	if ( reg2 == 15 )		2630490	1					
ANR	2637750	Condition	reg2 == 15	2542:8:53612:53621	2630490	0	True				
ANR	2637751	EqualityExpression	reg2 == 15		2630490	0		==			
ANR	2637752	Identifier	reg2		2630490	0					
ANR	2637753	PrimaryExpression	15		2630490	1					
ANR	2637754	CompoundStatement		1250:20:27765:27765	2630490	1					
ANR	2637755	IfStatement	if ( ( num > 4095 ) || ( num < - 4095 ) )		2630490	0					
ANR	2637756	Condition	( num > 4095 ) || ( num < - 4095 )	2543:9:53635:53663	2630490	0	True				
ANR	2637757	OrExpression	( num > 4095 ) || ( num < - 4095 )		2630490	0		||			
ANR	2637758	RelationalExpression	num > 4095		2630490	0		>			
ANR	2637759	Identifier	num		2630490	0					
ANR	2637760	PrimaryExpression	4095		2630490	1					
ANR	2637761	RelationalExpression	num < - 4095		2630490	1		<			
ANR	2637762	Identifier	num		2630490	0					
ANR	2637763	UnaryOperationExpression	- 4095		2630490	1					
ANR	2637764	UnaryOperator	-		2630490	0					
ANR	2637765	PrimaryExpression	4095		2630490	1					
ANR	2637766	CompoundStatement		1251:40:27807:27807	2630490	1					
ANR	2637767	ReturnStatement	return - 1 ;	2544:6:53674:53683	2630490	0	True				
ANR	2637768	UnaryOperationExpression	- 1		2630490	0					
ANR	2637769	UnaryOperator	-		2630490	0					
ANR	2637770	PrimaryExpression	1		2630490	1					
ANR	2637771	ExpressionStatement	ao -> o = 0x3ff80000	2546:5:53697:53715	2630490	1	True				
ANR	2637772	AssignmentExpression	ao -> o = 0x3ff80000		2630490	0		=			
ANR	2637773	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637774	Identifier	ao		2630490	0					
ANR	2637775	Identifier	o		2630490	1					
ANR	2637776	PrimaryExpression	0x3ff80000		2630490	1					
ANR	2637777	IfStatement	if ( m & S_BIT )		2630490	2					
ANR	2637778	Condition	m & S_BIT	2547:9:53726:53734	2630490	0	True				
ANR	2637779	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2637780	Identifier	m		2630490	0					
ANR	2637781	Identifier	S_BIT		2630490	1					
ANR	2637782	CompoundStatement		1255:20:27878:27878	2630490	1					
ANR	2637783	ExpressionStatement	ao -> o |= 1 << 16	2548:6:53745:53761	2630490	0	True				
ANR	2637784	AssignmentExpression	ao -> o |= 1 << 16		2630490	0		|=			
ANR	2637785	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637786	Identifier	ao		2630490	0					
ANR	2637787	Identifier	o		2630490	1					
ANR	2637788	ShiftExpression	1 << 16		2630490	1		<<			
ANR	2637789	PrimaryExpression	1		2630490	0					
ANR	2637790	PrimaryExpression	16		2630490	1					
ANR	2637791	IfStatement	if ( num < 0 )		2630490	3					
ANR	2637792	Condition	num < 0	2550:9:53779:53785	2630490	0	True				
ANR	2637793	RelationalExpression	num < 0		2630490	0		<			
ANR	2637794	Identifier	num		2630490	0					
ANR	2637795	PrimaryExpression	0		2630490	1					
ANR	2637796	CompoundStatement		1258:18:27929:27929	2630490	1					
ANR	2637797	ExpressionStatement	num = - num	2551:6:53796:53806	2630490	0	True				
ANR	2637798	AssignmentExpression	num = - num		2630490	0		=			
ANR	2637799	Identifier	num		2630490	0					
ANR	2637800	UnaryOperationExpression	- num		2630490	1					
ANR	2637801	UnaryOperator	-		2630490	0					
ANR	2637802	Identifier	num		2630490	1					
ANR	2637803	ElseStatement	else		2630490	0					
ANR	2637804	CompoundStatement		1260:12:27961:27961	2630490	0					
ANR	2637805	ExpressionStatement	ao -> o |= 1 << 31	2553:6:53828:53844	2630490	0	True				
ANR	2637806	AssignmentExpression	ao -> o |= 1 << 31		2630490	0		|=			
ANR	2637807	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637808	Identifier	ao		2630490	0					
ANR	2637809	Identifier	o		2630490	1					
ANR	2637810	ShiftExpression	1 << 31		2630490	1		<<			
ANR	2637811	PrimaryExpression	1		2630490	0					
ANR	2637812	PrimaryExpression	31		2630490	1					
ANR	2637813	ExpressionStatement	ao -> o |= reg1 << 4	2555:5:53858:53876	2630490	4	True				
ANR	2637814	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2637815	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637816	Identifier	ao		2630490	0					
ANR	2637817	Identifier	o		2630490	1					
ANR	2637818	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2637819	Identifier	reg1		2630490	0					
ANR	2637820	PrimaryExpression	4		2630490	1					
ANR	2637821	ExpressionStatement	ao -> o |= ( num & 0xff ) << 8	2556:5:53883:53909	2630490	5	True				
ANR	2637822	AssignmentExpression	ao -> o |= ( num & 0xff ) << 8		2630490	0		|=			
ANR	2637823	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637824	Identifier	ao		2630490	0					
ANR	2637825	Identifier	o		2630490	1					
ANR	2637826	ShiftExpression	( num & 0xff ) << 8		2630490	1		<<			
ANR	2637827	BitAndExpression	num & 0xff		2630490	0		&			
ANR	2637828	Identifier	num		2630490	0					
ANR	2637829	PrimaryExpression	0xff		2630490	1					
ANR	2637830	PrimaryExpression	8		2630490	1					
ANR	2637831	ExpressionStatement	ao -> o |= ( num & 0x0f00 ) >> 8	2557:5:53916:53944	2630490	6	True				
ANR	2637832	AssignmentExpression	ao -> o |= ( num & 0x0f00 ) >> 8		2630490	0		|=			
ANR	2637833	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637834	Identifier	ao		2630490	0					
ANR	2637835	Identifier	o		2630490	1					
ANR	2637836	ShiftExpression	( num & 0x0f00 ) >> 8		2630490	1		>>			
ANR	2637837	BitAndExpression	num & 0x0f00		2630490	0		&			
ANR	2637838	Identifier	num		2630490	0					
ANR	2637839	PrimaryExpression	0x0f00		2630490	1					
ANR	2637840	PrimaryExpression	8		2630490	1					
ANR	2637841	ReturnStatement	return 4 ;	2558:5:53951:53959	2630490	7	True				
ANR	2637842	PrimaryExpression	4		2630490	0					
ANR	2637843	IfStatement	if ( ( num >= 0 ) && ( num < 64 ) && ( num % 2 == 0 ) && ( ! ( m & S_BIT ) ) )		2630490	2					
ANR	2637844	Condition	( num >= 0 ) && ( num < 64 ) && ( num % 2 == 0 ) && ( ! ( m & S_BIT ) )	2560:8:53975:54034	2630490	0	True				
ANR	2637845	AndExpression	( num >= 0 ) && ( num < 64 ) && ( num % 2 == 0 ) && ( ! ( m & S_BIT ) )		2630490	0		&&			
ANR	2637846	RelationalExpression	num >= 0		2630490	0		>=			
ANR	2637847	Identifier	num		2630490	0					
ANR	2637848	PrimaryExpression	0		2630490	1					
ANR	2637849	AndExpression	( num < 64 ) && ( num % 2 == 0 ) && ( ! ( m & S_BIT ) )		2630490	1		&&			
ANR	2637850	RelationalExpression	num < 64		2630490	0		<			
ANR	2637851	Identifier	num		2630490	0					
ANR	2637852	PrimaryExpression	64		2630490	1					
ANR	2637853	AndExpression	( num % 2 == 0 ) && ( ! ( m & S_BIT ) )		2630490	1		&&			
ANR	2637854	EqualityExpression	num % 2 == 0		2630490	0		==			
ANR	2637855	MultiplicativeExpression	num % 2		2630490	0		%			
ANR	2637856	Identifier	num		2630490	0					
ANR	2637857	PrimaryExpression	2		2630490	1					
ANR	2637858	PrimaryExpression	0		2630490	1					
ANR	2637859	UnaryOperationExpression	! ( m & S_BIT )		2630490	1					
ANR	2637860	UnaryOperator	!		2630490	0					
ANR	2637861	BitAndExpression	m & S_BIT		2630490	1		&			
ANR	2637862	Identifier	m		2630490	0					
ANR	2637863	Identifier	S_BIT		2630490	1					
ANR	2637864	CompoundStatement		1268:70:28178:28178	2630490	1					
ANR	2637865	ExpressionStatement	ao -> o = 0x0088	2561:5:54044:54058	2630490	0	True				
ANR	2637866	AssignmentExpression	ao -> o = 0x0088		2630490	0		=			
ANR	2637867	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637868	Identifier	ao		2630490	0					
ANR	2637869	Identifier	o		2630490	1					
ANR	2637870	PrimaryExpression	0x0088		2630490	1					
ANR	2637871	ExpressionStatement	ao -> o |= ( num >> 3 )	2562:5:54065:54084	2630490	1	True				
ANR	2637872	AssignmentExpression	ao -> o |= ( num >> 3 )		2630490	0		|=			
ANR	2637873	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637874	Identifier	ao		2630490	0					
ANR	2637875	Identifier	o		2630490	1					
ANR	2637876	ShiftExpression	num >> 3		2630490	1		>>			
ANR	2637877	Identifier	num		2630490	0					
ANR	2637878	PrimaryExpression	3		2630490	1					
ANR	2637879	ExpressionStatement	ao -> o |= ( ( num >> 1 ) & 0x3 ) << 14	2563:5:54091:54124	2630490	2	True				
ANR	2637880	AssignmentExpression	ao -> o |= ( ( num >> 1 ) & 0x3 ) << 14		2630490	0		|=			
ANR	2637881	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637882	Identifier	ao		2630490	0					
ANR	2637883	Identifier	o		2630490	1					
ANR	2637884	ShiftExpression	( ( num >> 1 ) & 0x3 ) << 14		2630490	1		<<			
ANR	2637885	BitAndExpression	( num >> 1 ) & 0x3		2630490	0		&			
ANR	2637886	ShiftExpression	num >> 1		2630490	0		>>			
ANR	2637887	Identifier	num		2630490	0					
ANR	2637888	PrimaryExpression	1		2630490	1					
ANR	2637889	PrimaryExpression	0x3		2630490	1					
ANR	2637890	PrimaryExpression	14		2630490	1					
ANR	2637891	IfStatement	"if ( mem_16bit_2reg ( ao , m ) )"		2630490	3					
ANR	2637892	Condition	"mem_16bit_2reg ( ao , m )"	2564:9:54135:54156	2630490	0	True				
ANR	2637893	CallExpression	"mem_16bit_2reg ( ao , m )"		2630490	0					
ANR	2637894	Callee	mem_16bit_2reg		2630490	0					
ANR	2637895	Identifier	mem_16bit_2reg		2630490	0					
ANR	2637896	ArgumentList	ao		2630490	1					
ANR	2637897	Argument	ao		2630490	0					
ANR	2637898	Identifier	ao		2630490	0					
ANR	2637899	Argument	m		2630490	1					
ANR	2637900	Identifier	m		2630490	0					
ANR	2637901	CompoundStatement		1272:33:28300:28300	2630490	1					
ANR	2637902	ReturnStatement	return 2 ;	2565:6:54167:54175	2630490	0	True				
ANR	2637903	PrimaryExpression	2		2630490	0					
ANR	2637904	IfStatement	if ( ( num > 4095 ) || ( num < - 255 ) )		2630490	3					
ANR	2637905	Condition	( num > 4095 ) || ( num < - 255 )	2568:8:54198:54225	2630490	0	True				
ANR	2637906	OrExpression	( num > 4095 ) || ( num < - 255 )		2630490	0		||			
ANR	2637907	RelationalExpression	num > 4095		2630490	0		>			
ANR	2637908	Identifier	num		2630490	0					
ANR	2637909	PrimaryExpression	4095		2630490	1					
ANR	2637910	RelationalExpression	num < - 255		2630490	1		<			
ANR	2637911	Identifier	num		2630490	0					
ANR	2637912	UnaryOperationExpression	- 255		2630490	1					
ANR	2637913	UnaryOperator	-		2630490	0					
ANR	2637914	PrimaryExpression	255		2630490	1					
ANR	2637915	CompoundStatement		1276:38:28369:28369	2630490	1					
ANR	2637916	ReturnStatement	return - 1 ;	2569:5:54235:54244	2630490	0	True				
ANR	2637917	UnaryOperationExpression	- 1		2630490	0					
ANR	2637918	UnaryOperator	-		2630490	0					
ANR	2637919	PrimaryExpression	1		2630490	1					
ANR	2637920	IfStatement	if ( num >= 0 )		2630490	4					
ANR	2637921	Condition	num >= 0	2571:8:54260:54267	2630490	0	True				
ANR	2637922	RelationalExpression	num >= 0		2630490	0		>=			
ANR	2637923	Identifier	num		2630490	0					
ANR	2637924	PrimaryExpression	0		2630490	1					
ANR	2637925	CompoundStatement		1279:18:28411:28411	2630490	1					
ANR	2637926	ExpressionStatement	ao -> o = 0xb0f80000	2572:5:54277:54295	2630490	0	True				
ANR	2637927	AssignmentExpression	ao -> o = 0xb0f80000		2630490	0		=			
ANR	2637928	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637929	Identifier	ao		2630490	0					
ANR	2637930	Identifier	o		2630490	1					
ANR	2637931	PrimaryExpression	0xb0f80000		2630490	1					
ANR	2637932	IfStatement	if ( m & S_BIT )		2630490	1					
ANR	2637933	Condition	m & S_BIT	2573:9:54306:54314	2630490	0	True				
ANR	2637934	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2637935	Identifier	m		2630490	0					
ANR	2637936	Identifier	S_BIT		2630490	1					
ANR	2637937	CompoundStatement		1281:20:28458:28458	2630490	1					
ANR	2637938	ExpressionStatement	ao -> o |= 1 << 16	2574:6:54325:54341	2630490	0	True				
ANR	2637939	AssignmentExpression	ao -> o |= 1 << 16		2630490	0		|=			
ANR	2637940	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637941	Identifier	ao		2630490	0					
ANR	2637942	Identifier	o		2630490	1					
ANR	2637943	ShiftExpression	1 << 16		2630490	1		<<			
ANR	2637944	PrimaryExpression	1		2630490	0					
ANR	2637945	PrimaryExpression	16		2630490	1					
ANR	2637946	ExpressionStatement	ao -> o |= ( num & 0xff ) << 8	2576:5:54355:54381	2630490	2	True				
ANR	2637947	AssignmentExpression	ao -> o |= ( num & 0xff ) << 8		2630490	0		|=			
ANR	2637948	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637949	Identifier	ao		2630490	0					
ANR	2637950	Identifier	o		2630490	1					
ANR	2637951	ShiftExpression	( num & 0xff ) << 8		2630490	1		<<			
ANR	2637952	BitAndExpression	num & 0xff		2630490	0		&			
ANR	2637953	Identifier	num		2630490	0					
ANR	2637954	PrimaryExpression	0xff		2630490	1					
ANR	2637955	PrimaryExpression	8		2630490	1					
ANR	2637956	ExpressionStatement	ao -> o |= ( num & 0xf00 ) >> 8	2577:5:54388:54415	2630490	3	True				
ANR	2637957	AssignmentExpression	ao -> o |= ( num & 0xf00 ) >> 8		2630490	0		|=			
ANR	2637958	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637959	Identifier	ao		2630490	0					
ANR	2637960	Identifier	o		2630490	1					
ANR	2637961	ShiftExpression	( num & 0xf00 ) >> 8		2630490	1		>>			
ANR	2637962	BitAndExpression	num & 0xf00		2630490	0		&			
ANR	2637963	Identifier	num		2630490	0					
ANR	2637964	PrimaryExpression	0xf00		2630490	1					
ANR	2637965	PrimaryExpression	8		2630490	1					
ANR	2637966	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2578:5:54422:54451	2630490	4	True				
ANR	2637967	CallExpression	"mem_32bit_2reg ( ao , m )"		2630490	0					
ANR	2637968	Callee	mem_32bit_2reg		2630490	0					
ANR	2637969	Identifier	mem_32bit_2reg		2630490	0					
ANR	2637970	ArgumentList	ao		2630490	1					
ANR	2637971	Argument	ao		2630490	0					
ANR	2637972	Identifier	ao		2630490	0					
ANR	2637973	Argument	m		2630490	1					
ANR	2637974	Identifier	m		2630490	0					
ANR	2637975	ExpressionStatement	ao -> o = 0x30f8000c	2580:4:54463:54481	2630490	5	True				
ANR	2637976	AssignmentExpression	ao -> o = 0x30f8000c		2630490	0		=			
ANR	2637977	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637978	Identifier	ao		2630490	0					
ANR	2637979	Identifier	o		2630490	1					
ANR	2637980	PrimaryExpression	0x30f8000c		2630490	1					
ANR	2637981	IfStatement	if ( m & S_BIT )		2630490	6					
ANR	2637982	Condition	m & S_BIT	2581:8:54491:54499	2630490	0	True				
ANR	2637983	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2637984	Identifier	m		2630490	0					
ANR	2637985	Identifier	S_BIT		2630490	1					
ANR	2637986	CompoundStatement		1289:19:28643:28643	2630490	1					
ANR	2637987	ExpressionStatement	ao -> o |= 1 << 16	2582:5:54509:54525	2630490	0	True				
ANR	2637988	AssignmentExpression	ao -> o |= 1 << 16		2630490	0		|=			
ANR	2637989	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637990	Identifier	ao		2630490	0					
ANR	2637991	Identifier	o		2630490	1					
ANR	2637992	ShiftExpression	1 << 16		2630490	1		<<			
ANR	2637993	PrimaryExpression	1		2630490	0					
ANR	2637994	PrimaryExpression	16		2630490	1					
ANR	2637995	ExpressionStatement	ao -> o |= - num << 8	2584:4:54537:54555	2630490	7	True				
ANR	2637996	AssignmentExpression	ao -> o |= - num << 8		2630490	0		|=			
ANR	2637997	PtrMemberAccess	ao -> o		2630490	0					
ANR	2637998	Identifier	ao		2630490	0					
ANR	2637999	Identifier	o		2630490	1					
ANR	2638000	ShiftExpression	- num << 8		2630490	1		<<			
ANR	2638001	UnaryOperationExpression	- num		2630490	0					
ANR	2638002	UnaryOperator	-		2630490	0					
ANR	2638003	Identifier	num		2630490	1					
ANR	2638004	PrimaryExpression	8		2630490	1					
ANR	2638005	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2585:4:54561:54590	2630490	8	True				
ANR	2638006	CallExpression	"mem_32bit_2reg ( ao , m )"		2630490	0					
ANR	2638007	Callee	mem_32bit_2reg		2630490	0					
ANR	2638008	Identifier	mem_32bit_2reg		2630490	0					
ANR	2638009	ArgumentList	ao		2630490	1					
ANR	2638010	Argument	ao		2630490	0					
ANR	2638011	Identifier	ao		2630490	0					
ANR	2638012	Argument	m		2630490	1					
ANR	2638013	Identifier	m		2630490	0					
ANR	2638014	ElseStatement	else		2630490	0					
ANR	2638015	CompoundStatement		1294:10:28743:28743	2630490	0					
ANR	2638016	ReturnStatement	return - 1 ;	2587:4:54608:54617	2630490	0	True				
ANR	2638017	UnaryOperationExpression	- 1		2630490	0					
ANR	2638018	UnaryOperator	-		2630490	0					
ANR	2638019	PrimaryExpression	1		2630490	1					
ANR	2638020	BreakStatement	break ;	2590:3:54642:54647	2630490	8	True				
ANR	2638021	Label	case THUMB_REG_BRACKREGBRACK_CONST :	2591:2:54651:54685	2630490	9	True				
ANR	2638022	Identifier	THUMB_REG_BRACKREGBRACK_CONST		2630490	0					
ANR	2638023	CompoundStatement		1302:3:28910:28938	2630490	10					
ANR	2638024	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2592:3:54692:54720	2630490	0	True				
ANR	2638025	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2638026	IdentifierDeclType	ut8		2630490	0					
ANR	2638027	Identifier	reg1		2630490	1					
ANR	2638028	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2638029	Identifier	reg1		2630490	0					
ANR	2638030	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2638031	Callee	getreg		2630490	0					
ANR	2638032	Identifier	getreg		2630490	0					
ANR	2638033	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2638034	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2638035	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2638036	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638037	Identifier	ao		2630490	0					
ANR	2638038	Identifier	a		2630490	1					
ANR	2638039	PrimaryExpression	0		2630490	1					
ANR	2638040	IdentifierDeclStatement	ut8 reg2 = getregmemstartend ( ao -> a [ 1 ] ) ;	2593:3:54725:54764	2630490	1	True				
ANR	2638041	IdentifierDecl	reg2 = getregmemstartend ( ao -> a [ 1 ] )		2630490	0					
ANR	2638042	IdentifierDeclType	ut8		2630490	0					
ANR	2638043	Identifier	reg2		2630490	1					
ANR	2638044	AssignmentExpression	reg2 = getregmemstartend ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2638045	Identifier	reg2		2630490	0					
ANR	2638046	CallExpression	getregmemstartend ( ao -> a [ 1 ] )		2630490	1					
ANR	2638047	Callee	getregmemstartend		2630490	0					
ANR	2638048	Identifier	getregmemstartend		2630490	0					
ANR	2638049	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2638050	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2638051	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2638052	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638053	Identifier	ao		2630490	0					
ANR	2638054	Identifier	a		2630490	1					
ANR	2638055	PrimaryExpression	1		2630490	1					
ANR	2638056	IdentifierDeclStatement	st32 num = getnum ( ao -> a [ 2 ] ) ;	2594:3:54769:54797	2630490	2	True				
ANR	2638057	IdentifierDecl	num = getnum ( ao -> a [ 2 ] )		2630490	0					
ANR	2638058	IdentifierDeclType	st32		2630490	0					
ANR	2638059	Identifier	num		2630490	1					
ANR	2638060	AssignmentExpression	num = getnum ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2638061	Identifier	num		2630490	0					
ANR	2638062	CallExpression	getnum ( ao -> a [ 2 ] )		2630490	1					
ANR	2638063	Callee	getnum		2630490	0					
ANR	2638064	Identifier	getnum		2630490	0					
ANR	2638065	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2638066	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2638067	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2638068	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638069	Identifier	ao		2630490	0					
ANR	2638070	Identifier	a		2630490	1					
ANR	2638071	PrimaryExpression	2		2630490	1					
ANR	2638072	IfStatement	if ( ( num < - 255 ) || ( num > 255 ) )		2630490	3					
ANR	2638073	Condition	( num < - 255 ) || ( num > 255 )	2595:7:54806:54832	2630490	0	True				
ANR	2638074	OrExpression	( num < - 255 ) || ( num > 255 )		2630490	0		||			
ANR	2638075	RelationalExpression	num < - 255		2630490	0		<			
ANR	2638076	Identifier	num		2630490	0					
ANR	2638077	UnaryOperationExpression	- 255		2630490	1					
ANR	2638078	UnaryOperator	-		2630490	0					
ANR	2638079	PrimaryExpression	255		2630490	1					
ANR	2638080	RelationalExpression	num > 255		2630490	1		>			
ANR	2638081	Identifier	num		2630490	0					
ANR	2638082	PrimaryExpression	255		2630490	1					
ANR	2638083	CompoundStatement		1303:36:28976:28976	2630490	1					
ANR	2638084	ReturnStatement	return - 1 ;	2596:4:54841:54850	2630490	0	True				
ANR	2638085	UnaryOperationExpression	- 1		2630490	0					
ANR	2638086	UnaryOperator	-		2630490	0					
ANR	2638087	PrimaryExpression	1		2630490	1					
ANR	2638088	IfStatement	if ( ldrsel == 0 )		2630490	4					
ANR	2638089	Condition	ldrsel == 0	2598:7:54864:54874	2630490	0	True				
ANR	2638090	EqualityExpression	ldrsel == 0		2630490	0		==			
ANR	2638091	Identifier	ldrsel		2630490	0					
ANR	2638092	PrimaryExpression	0		2630490	1					
ANR	2638093	CompoundStatement		1306:20:29018:29018	2630490	1					
ANR	2638094	ExpressionStatement	ao -> o = 0x50f80009	2599:4:54883:54901	2630490	0	True				
ANR	2638095	AssignmentExpression	ao -> o = 0x50f80009		2630490	0		=			
ANR	2638096	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638097	Identifier	ao		2630490	0					
ANR	2638098	Identifier	o		2630490	1					
ANR	2638099	PrimaryExpression	0x50f80009		2630490	1					
ANR	2638100	ElseStatement	else		2630490	0					
ANR	2638101	IfStatement	if ( ldrsel == B_BIT )		2630490	0					
ANR	2638102	Condition	ldrsel == B_BIT	2601:7:54921:54935	2630490	0	True				
ANR	2638103	EqualityExpression	ldrsel == B_BIT		2630490	0		==			
ANR	2638104	Identifier	ldrsel		2630490	0					
ANR	2638105	Identifier	B_BIT		2630490	1					
ANR	2638106	CompoundStatement		1309:24:29079:29079	2630490	1					
ANR	2638107	ExpressionStatement	ao -> o = 0x10f80009	2602:4:54944:54962	2630490	0	True				
ANR	2638108	AssignmentExpression	ao -> o = 0x10f80009		2630490	0		=			
ANR	2638109	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638110	Identifier	ao		2630490	0					
ANR	2638111	Identifier	o		2630490	1					
ANR	2638112	PrimaryExpression	0x10f80009		2630490	1					
ANR	2638113	ElseStatement	else		2630490	0					
ANR	2638114	IfStatement	if ( ldrsel == H_BIT )		2630490	0					
ANR	2638115	Condition	ldrsel == H_BIT	2604:7:54982:54996	2630490	0	True				
ANR	2638116	EqualityExpression	ldrsel == H_BIT		2630490	0		==			
ANR	2638117	Identifier	ldrsel		2630490	0					
ANR	2638118	Identifier	H_BIT		2630490	1					
ANR	2638119	CompoundStatement		1312:24:29140:29140	2630490	1					
ANR	2638120	ExpressionStatement	ao -> o = 0x30f80009	2605:4:55005:55023	2630490	0	True				
ANR	2638121	AssignmentExpression	ao -> o = 0x30f80009		2630490	0		=			
ANR	2638122	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638123	Identifier	ao		2630490	0					
ANR	2638124	Identifier	o		2630490	1					
ANR	2638125	PrimaryExpression	0x30f80009		2630490	1					
ANR	2638126	ElseStatement	else		2630490	0					
ANR	2638127	CompoundStatement		1314:10:29176:29176	2630490	0					
ANR	2638128	ReturnStatement	return - 1 ;	2607:4:55041:55050	2630490	0	True				
ANR	2638129	UnaryOperationExpression	- 1		2630490	0					
ANR	2638130	UnaryOperator	-		2630490	0					
ANR	2638131	PrimaryExpression	1		2630490	1					
ANR	2638132	IfStatement	if ( m & S_BIT )		2630490	5					
ANR	2638133	Condition	m & S_BIT	2609:7:55064:55072	2630490	0	True				
ANR	2638134	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2638135	Identifier	m		2630490	0					
ANR	2638136	Identifier	S_BIT		2630490	1					
ANR	2638137	CompoundStatement		1317:18:29216:29216	2630490	1					
ANR	2638138	ExpressionStatement	ao -> o |= 1 << 16	2610:4:55081:55097	2630490	0	True				
ANR	2638139	AssignmentExpression	ao -> o |= 1 << 16		2630490	0		|=			
ANR	2638140	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638141	Identifier	ao		2630490	0					
ANR	2638142	Identifier	o		2630490	1					
ANR	2638143	ShiftExpression	1 << 16		2630490	1		<<			
ANR	2638144	PrimaryExpression	1		2630490	0					
ANR	2638145	PrimaryExpression	16		2630490	1					
ANR	2638146	IfStatement	if ( num < 0 )		2630490	6					
ANR	2638147	Condition	num < 0	2612:7:55111:55117	2630490	0	True				
ANR	2638148	RelationalExpression	num < 0		2630490	0		<			
ANR	2638149	Identifier	num		2630490	0					
ANR	2638150	PrimaryExpression	0		2630490	1					
ANR	2638151	CompoundStatement		1320:16:29261:29261	2630490	1					
ANR	2638152	ExpressionStatement	num = - num	2613:4:55126:55136	2630490	0	True				
ANR	2638153	AssignmentExpression	num = - num		2630490	0		=			
ANR	2638154	Identifier	num		2630490	0					
ANR	2638155	UnaryOperationExpression	- num		2630490	1					
ANR	2638156	UnaryOperator	-		2630490	0					
ANR	2638157	Identifier	num		2630490	1					
ANR	2638158	ElseStatement	else		2630490	0					
ANR	2638159	CompoundStatement		1322:10:29289:29289	2630490	0					
ANR	2638160	ExpressionStatement	ao -> o |= 1 << 1	2615:4:55154:55169	2630490	0	True				
ANR	2638161	AssignmentExpression	ao -> o |= 1 << 1		2630490	0		|=			
ANR	2638162	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638163	Identifier	ao		2630490	0					
ANR	2638164	Identifier	o		2630490	1					
ANR	2638165	ShiftExpression	1 << 1		2630490	1		<<			
ANR	2638166	PrimaryExpression	1		2630490	0					
ANR	2638167	PrimaryExpression	1		2630490	1					
ANR	2638168	ExpressionStatement	ao -> o |= num << 8	2617:3:55179:55196	2630490	7	True				
ANR	2638169	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2638170	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638171	Identifier	ao		2630490	0					
ANR	2638172	Identifier	o		2630490	1					
ANR	2638173	ShiftExpression	num << 8		2630490	1		<<			
ANR	2638174	Identifier	num		2630490	0					
ANR	2638175	PrimaryExpression	8		2630490	1					
ANR	2638176	ExpressionStatement	ao -> o |= reg1 << 4	2618:3:55201:55219	2630490	8	True				
ANR	2638177	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2638178	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638179	Identifier	ao		2630490	0					
ANR	2638180	Identifier	o		2630490	1					
ANR	2638181	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2638182	Identifier	reg1		2630490	0					
ANR	2638183	PrimaryExpression	4		2630490	1					
ANR	2638184	ExpressionStatement	ao -> o |= reg2 << 24	2619:3:55224:55243	2630490	9	True				
ANR	2638185	AssignmentExpression	ao -> o |= reg2 << 24		2630490	0		|=			
ANR	2638186	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638187	Identifier	ao		2630490	0					
ANR	2638188	Identifier	o		2630490	1					
ANR	2638189	ShiftExpression	reg2 << 24		2630490	1		<<			
ANR	2638190	Identifier	reg2		2630490	0					
ANR	2638191	PrimaryExpression	24		2630490	1					
ANR	2638192	ReturnStatement	return 4 ;	2620:3:55248:55256	2630490	10	True				
ANR	2638193	PrimaryExpression	4		2630490	0					
ANR	2638194	BreakStatement	break ;	2622:3:55273:55278	2630490	11	True				
ANR	2638195	Label	case THUMB_REG_BRACKREG_CONSTBRACKBANG :	2623:2:55282:55320	2630490	12	True				
ANR	2638196	Identifier	THUMB_REG_BRACKREG_CONSTBRACKBANG		2630490	0					
ANR	2638197	CompoundStatement		1332:3:29468:29506	2630490	13					
ANR	2638198	IdentifierDeclStatement	st32 num = getnummemendbang ( ao -> a [ 2 ] ) ;	2624:3:55327:55365	2630490	0	True				
ANR	2638199	IdentifierDecl	num = getnummemendbang ( ao -> a [ 2 ] )		2630490	0					
ANR	2638200	IdentifierDeclType	st32		2630490	0					
ANR	2638201	Identifier	num		2630490	1					
ANR	2638202	AssignmentExpression	num = getnummemendbang ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2638203	Identifier	num		2630490	0					
ANR	2638204	CallExpression	getnummemendbang ( ao -> a [ 2 ] )		2630490	1					
ANR	2638205	Callee	getnummemendbang		2630490	0					
ANR	2638206	Identifier	getnummemendbang		2630490	0					
ANR	2638207	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2638208	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2638209	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2638210	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638211	Identifier	ao		2630490	0					
ANR	2638212	Identifier	a		2630490	1					
ANR	2638213	PrimaryExpression	2		2630490	1					
ANR	2638214	IfStatement	if ( ( num < - 255 ) || ( num > 255 ) )		2630490	1					
ANR	2638215	Condition	( num < - 255 ) || ( num > 255 )	2625:7:55374:55400	2630490	0	True				
ANR	2638216	OrExpression	( num < - 255 ) || ( num > 255 )		2630490	0		||			
ANR	2638217	RelationalExpression	num < - 255		2630490	0		<			
ANR	2638218	Identifier	num		2630490	0					
ANR	2638219	UnaryOperationExpression	- 255		2630490	1					
ANR	2638220	UnaryOperator	-		2630490	0					
ANR	2638221	PrimaryExpression	255		2630490	1					
ANR	2638222	RelationalExpression	num > 255		2630490	1		>			
ANR	2638223	Identifier	num		2630490	0					
ANR	2638224	PrimaryExpression	255		2630490	1					
ANR	2638225	CompoundStatement		1333:36:29544:29544	2630490	1					
ANR	2638226	ReturnStatement	return - 1 ;	2626:4:55409:55418	2630490	0	True				
ANR	2638227	UnaryOperationExpression	- 1		2630490	0					
ANR	2638228	UnaryOperator	-		2630490	0					
ANR	2638229	PrimaryExpression	1		2630490	1					
ANR	2638230	IfStatement	if ( ldrsel == 0 )		2630490	2					
ANR	2638231	Condition	ldrsel == 0	2628:7:55432:55442	2630490	0	True				
ANR	2638232	EqualityExpression	ldrsel == 0		2630490	0		==			
ANR	2638233	Identifier	ldrsel		2630490	0					
ANR	2638234	PrimaryExpression	0		2630490	1					
ANR	2638235	CompoundStatement		1336:20:29586:29586	2630490	1					
ANR	2638236	ExpressionStatement	ao -> o = 0x50f8000d	2629:4:55451:55469	2630490	0	True				
ANR	2638237	AssignmentExpression	ao -> o = 0x50f8000d		2630490	0		=			
ANR	2638238	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638239	Identifier	ao		2630490	0					
ANR	2638240	Identifier	o		2630490	1					
ANR	2638241	PrimaryExpression	0x50f8000d		2630490	1					
ANR	2638242	ElseStatement	else		2630490	0					
ANR	2638243	IfStatement	if ( ldrsel == B_BIT )		2630490	0					
ANR	2638244	Condition	ldrsel == B_BIT	2631:7:55489:55503	2630490	0	True				
ANR	2638245	EqualityExpression	ldrsel == B_BIT		2630490	0		==			
ANR	2638246	Identifier	ldrsel		2630490	0					
ANR	2638247	Identifier	B_BIT		2630490	1					
ANR	2638248	CompoundStatement		1339:24:29647:29647	2630490	1					
ANR	2638249	ExpressionStatement	ao -> o = 0x10f8000d	2632:4:55512:55530	2630490	0	True				
ANR	2638250	AssignmentExpression	ao -> o = 0x10f8000d		2630490	0		=			
ANR	2638251	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638252	Identifier	ao		2630490	0					
ANR	2638253	Identifier	o		2630490	1					
ANR	2638254	PrimaryExpression	0x10f8000d		2630490	1					
ANR	2638255	ElseStatement	else		2630490	0					
ANR	2638256	IfStatement	if ( ldrsel == H_BIT )		2630490	0					
ANR	2638257	Condition	ldrsel == H_BIT	2634:7:55550:55564	2630490	0	True				
ANR	2638258	EqualityExpression	ldrsel == H_BIT		2630490	0		==			
ANR	2638259	Identifier	ldrsel		2630490	0					
ANR	2638260	Identifier	H_BIT		2630490	1					
ANR	2638261	CompoundStatement		1342:24:29708:29708	2630490	1					
ANR	2638262	ExpressionStatement	ao -> o = 0x30f8000d	2635:4:55573:55591	2630490	0	True				
ANR	2638263	AssignmentExpression	ao -> o = 0x30f8000d		2630490	0		=			
ANR	2638264	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638265	Identifier	ao		2630490	0					
ANR	2638266	Identifier	o		2630490	1					
ANR	2638267	PrimaryExpression	0x30f8000d		2630490	1					
ANR	2638268	ElseStatement	else		2630490	0					
ANR	2638269	CompoundStatement		1344:10:29744:29744	2630490	0					
ANR	2638270	ReturnStatement	return - 1 ;	2637:4:55609:55618	2630490	0	True				
ANR	2638271	UnaryOperationExpression	- 1		2630490	0					
ANR	2638272	UnaryOperator	-		2630490	0					
ANR	2638273	PrimaryExpression	1		2630490	1					
ANR	2638274	IfStatement	if ( m & S_BIT )		2630490	3					
ANR	2638275	Condition	m & S_BIT	2639:7:55632:55640	2630490	0	True				
ANR	2638276	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2638277	Identifier	m		2630490	0					
ANR	2638278	Identifier	S_BIT		2630490	1					
ANR	2638279	CompoundStatement		1347:18:29784:29784	2630490	1					
ANR	2638280	ExpressionStatement	ao -> o |= 1 << 16	2640:4:55649:55665	2630490	0	True				
ANR	2638281	AssignmentExpression	ao -> o |= 1 << 16		2630490	0		|=			
ANR	2638282	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638283	Identifier	ao		2630490	0					
ANR	2638284	Identifier	o		2630490	1					
ANR	2638285	ShiftExpression	1 << 16		2630490	1		<<			
ANR	2638286	PrimaryExpression	1		2630490	0					
ANR	2638287	PrimaryExpression	16		2630490	1					
ANR	2638288	IfStatement	if ( num < 0 )		2630490	4					
ANR	2638289	Condition	num < 0	2642:7:55679:55685	2630490	0	True				
ANR	2638290	RelationalExpression	num < 0		2630490	0		<			
ANR	2638291	Identifier	num		2630490	0					
ANR	2638292	PrimaryExpression	0		2630490	1					
ANR	2638293	CompoundStatement		1350:16:29829:29829	2630490	1					
ANR	2638294	ExpressionStatement	num = - num	2643:4:55694:55704	2630490	0	True				
ANR	2638295	AssignmentExpression	num = - num		2630490	0		=			
ANR	2638296	Identifier	num		2630490	0					
ANR	2638297	UnaryOperationExpression	- num		2630490	1					
ANR	2638298	UnaryOperator	-		2630490	0					
ANR	2638299	Identifier	num		2630490	1					
ANR	2638300	ElseStatement	else		2630490	0					
ANR	2638301	CompoundStatement		1352:10:29857:29857	2630490	0					
ANR	2638302	ExpressionStatement	ao -> o |= 1 << 1	2645:4:55722:55737	2630490	0	True				
ANR	2638303	AssignmentExpression	ao -> o |= 1 << 1		2630490	0		|=			
ANR	2638304	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638305	Identifier	ao		2630490	0					
ANR	2638306	Identifier	o		2630490	1					
ANR	2638307	ShiftExpression	1 << 1		2630490	1		<<			
ANR	2638308	PrimaryExpression	1		2630490	0					
ANR	2638309	PrimaryExpression	1		2630490	1					
ANR	2638310	ExpressionStatement	ao -> o |= num << 8	2647:3:55747:55764	2630490	5	True				
ANR	2638311	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2638312	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638313	Identifier	ao		2630490	0					
ANR	2638314	Identifier	o		2630490	1					
ANR	2638315	ShiftExpression	num << 8		2630490	1		<<			
ANR	2638316	Identifier	num		2630490	0					
ANR	2638317	PrimaryExpression	8		2630490	1					
ANR	2638318	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2648:3:55769:55798	2630490	6	True				
ANR	2638319	CallExpression	"mem_32bit_2reg ( ao , m )"		2630490	0					
ANR	2638320	Callee	mem_32bit_2reg		2630490	0					
ANR	2638321	Identifier	mem_32bit_2reg		2630490	0					
ANR	2638322	ArgumentList	ao		2630490	1					
ANR	2638323	Argument	ao		2630490	0					
ANR	2638324	Identifier	ao		2630490	0					
ANR	2638325	Argument	m		2630490	1					
ANR	2638326	Identifier	m		2630490	0					
ANR	2638327	BreakStatement	break ;	2650:3:55815:55820	2630490	14	True				
ANR	2638328	Label	case THUMB_REG_BRACKREG_REGBRACK :	2651:2:55824:55856	2630490	15	True				
ANR	2638329	Identifier	THUMB_REG_BRACKREG_REGBRACK		2630490	0					
ANR	2638330	CompoundStatement		1360:3:30004:30038	2630490	16					
ANR	2638331	IdentifierDeclStatement	ut8 reg3 = getregmemend ( ao -> a [ 2 ] ) ;	2652:3:55863:55897	2630490	0	True				
ANR	2638332	IdentifierDecl	reg3 = getregmemend ( ao -> a [ 2 ] )		2630490	0					
ANR	2638333	IdentifierDeclType	ut8		2630490	0					
ANR	2638334	Identifier	reg3		2630490	1					
ANR	2638335	AssignmentExpression	reg3 = getregmemend ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2638336	Identifier	reg3		2630490	0					
ANR	2638337	CallExpression	getregmemend ( ao -> a [ 2 ] )		2630490	1					
ANR	2638338	Callee	getregmemend		2630490	0					
ANR	2638339	Identifier	getregmemend		2630490	0					
ANR	2638340	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2638341	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2638342	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2638343	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638344	Identifier	ao		2630490	0					
ANR	2638345	Identifier	a		2630490	1					
ANR	2638346	PrimaryExpression	2		2630490	1					
ANR	2638347	IfStatement	if ( reg3 < 8 )		2630490	1					
ANR	2638348	Condition	reg3 < 8	2653:7:55906:55913	2630490	0	True				
ANR	2638349	RelationalExpression	reg3 < 8		2630490	0		<			
ANR	2638350	Identifier	reg3		2630490	0					
ANR	2638351	PrimaryExpression	8		2630490	1					
ANR	2638352	CompoundStatement		1361:17:30057:30057	2630490	1					
ANR	2638353	IfStatement	if ( ldrsel == 0 )		2630490	0					
ANR	2638354	Condition	ldrsel == 0	2654:8:55926:55936	2630490	0	True				
ANR	2638355	EqualityExpression	ldrsel == 0		2630490	0		==			
ANR	2638356	Identifier	ldrsel		2630490	0					
ANR	2638357	PrimaryExpression	0		2630490	1					
ANR	2638358	CompoundStatement		1362:21:30080:30080	2630490	1					
ANR	2638359	ExpressionStatement	ao -> o = 0x0058	2655:5:55946:55960	2630490	0	True				
ANR	2638360	AssignmentExpression	ao -> o = 0x0058		2630490	0		=			
ANR	2638361	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638362	Identifier	ao		2630490	0					
ANR	2638363	Identifier	o		2630490	1					
ANR	2638364	PrimaryExpression	0x0058		2630490	1					
ANR	2638365	ElseStatement	else		2630490	0					
ANR	2638366	IfStatement	if ( ldrsel == B_BIT )		2630490	0					
ANR	2638367	Condition	ldrsel == B_BIT	2657:8:55981:55995	2630490	0	True				
ANR	2638368	EqualityExpression	ldrsel == B_BIT		2630490	0		==			
ANR	2638369	Identifier	ldrsel		2630490	0					
ANR	2638370	Identifier	B_BIT		2630490	1					
ANR	2638371	CompoundStatement		1365:25:30139:30139	2630490	1					
ANR	2638372	IfStatement	if ( m & S_BIT )		2630490	0					
ANR	2638373	Condition	m & S_BIT	2658:9:56009:56017	2630490	0	True				
ANR	2638374	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2638375	Identifier	m		2630490	0					
ANR	2638376	Identifier	S_BIT		2630490	1					
ANR	2638377	CompoundStatement		1366:20:30161:30161	2630490	1					
ANR	2638378	ExpressionStatement	ao -> o = 0x0056	2659:6:56028:56042	2630490	0	True				
ANR	2638379	AssignmentExpression	ao -> o = 0x0056		2630490	0		=			
ANR	2638380	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638381	Identifier	ao		2630490	0					
ANR	2638382	Identifier	o		2630490	1					
ANR	2638383	PrimaryExpression	0x0056		2630490	1					
ANR	2638384	ElseStatement	else		2630490	0					
ANR	2638385	CompoundStatement		1368:12:30197:30197	2630490	0					
ANR	2638386	ExpressionStatement	ao -> o = 0x005c	2661:6:56064:56078	2630490	0	True				
ANR	2638387	AssignmentExpression	ao -> o = 0x005c		2630490	0		=			
ANR	2638388	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638389	Identifier	ao		2630490	0					
ANR	2638390	Identifier	o		2630490	1					
ANR	2638391	PrimaryExpression	0x005c		2630490	1					
ANR	2638392	ElseStatement	else		2630490	0					
ANR	2638393	IfStatement	if ( ldrsel == H_BIT )		2630490	0					
ANR	2638394	Condition	ldrsel == H_BIT	2664:8:56106:56120	2630490	0	True				
ANR	2638395	EqualityExpression	ldrsel == H_BIT		2630490	0		==			
ANR	2638396	Identifier	ldrsel		2630490	0					
ANR	2638397	Identifier	H_BIT		2630490	1					
ANR	2638398	CompoundStatement		1372:25:30264:30264	2630490	1					
ANR	2638399	IfStatement	if ( m & S_BIT )		2630490	0					
ANR	2638400	Condition	m & S_BIT	2665:9:56134:56142	2630490	0	True				
ANR	2638401	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2638402	Identifier	m		2630490	0					
ANR	2638403	Identifier	S_BIT		2630490	1					
ANR	2638404	CompoundStatement		1373:20:30286:30286	2630490	1					
ANR	2638405	ExpressionStatement	ao -> o = 0x005e	2666:6:56153:56167	2630490	0	True				
ANR	2638406	AssignmentExpression	ao -> o = 0x005e		2630490	0		=			
ANR	2638407	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638408	Identifier	ao		2630490	0					
ANR	2638409	Identifier	o		2630490	1					
ANR	2638410	PrimaryExpression	0x005e		2630490	1					
ANR	2638411	ElseStatement	else		2630490	0					
ANR	2638412	CompoundStatement		1375:12:30322:30322	2630490	0					
ANR	2638413	ExpressionStatement	ao -> o = 0x005a	2668:6:56189:56203	2630490	0	True				
ANR	2638414	AssignmentExpression	ao -> o = 0x005a		2630490	0		=			
ANR	2638415	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638416	Identifier	ao		2630490	0					
ANR	2638417	Identifier	o		2630490	1					
ANR	2638418	PrimaryExpression	0x005a		2630490	1					
ANR	2638419	ElseStatement	else		2630490	0					
ANR	2638420	CompoundStatement		1379:4:30368:30368	2630490	0					
ANR	2638421	ReturnStatement	return - 1 ;	2672:5:56234:56243	2630490	0	True				
ANR	2638422	UnaryOperationExpression	- 1		2630490	0					
ANR	2638423	UnaryOperator	-		2630490	0					
ANR	2638424	PrimaryExpression	1		2630490	1					
ANR	2638425	ExpressionStatement	ao -> o |= ( reg3 & 0x3 ) << 14	2674:4:56255:56282	2630490	1	True				
ANR	2638426	AssignmentExpression	ao -> o |= ( reg3 & 0x3 ) << 14		2630490	0		|=			
ANR	2638427	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638428	Identifier	ao		2630490	0					
ANR	2638429	Identifier	o		2630490	1					
ANR	2638430	ShiftExpression	( reg3 & 0x3 ) << 14		2630490	1		<<			
ANR	2638431	BitAndExpression	reg3 & 0x3		2630490	0		&			
ANR	2638432	Identifier	reg3		2630490	0					
ANR	2638433	PrimaryExpression	0x3		2630490	1					
ANR	2638434	PrimaryExpression	14		2630490	1					
ANR	2638435	ExpressionStatement	ao -> o |= ( reg3 & 0x4 ) >> 2	2675:4:56288:56314	2630490	2	True				
ANR	2638436	AssignmentExpression	ao -> o |= ( reg3 & 0x4 ) >> 2		2630490	0		|=			
ANR	2638437	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638438	Identifier	ao		2630490	0					
ANR	2638439	Identifier	o		2630490	1					
ANR	2638440	ShiftExpression	( reg3 & 0x4 ) >> 2		2630490	1		>>			
ANR	2638441	BitAndExpression	reg3 & 0x4		2630490	0		&			
ANR	2638442	Identifier	reg3		2630490	0					
ANR	2638443	PrimaryExpression	0x4		2630490	1					
ANR	2638444	PrimaryExpression	2		2630490	1					
ANR	2638445	IfStatement	"if ( mem_16bit_2reg ( ao , m ) )"		2630490	3					
ANR	2638446	Condition	"mem_16bit_2reg ( ao , m )"	2676:8:56324:56345	2630490	0	True				
ANR	2638447	CallExpression	"mem_16bit_2reg ( ao , m )"		2630490	0					
ANR	2638448	Callee	mem_16bit_2reg		2630490	0					
ANR	2638449	Identifier	mem_16bit_2reg		2630490	0					
ANR	2638450	ArgumentList	ao		2630490	1					
ANR	2638451	Argument	ao		2630490	0					
ANR	2638452	Identifier	ao		2630490	0					
ANR	2638453	Argument	m		2630490	1					
ANR	2638454	Identifier	m		2630490	0					
ANR	2638455	CompoundStatement		1384:32:30489:30489	2630490	1					
ANR	2638456	ReturnStatement	return 2 ;	2677:5:56355:56363	2630490	0	True				
ANR	2638457	PrimaryExpression	2		2630490	0					
ANR	2638458	ExpressionStatement	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'	2680:3:56379:56416	2630490	2	True				
ANR	2638459	AssignmentExpression	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'		2630490	0		=			
ANR	2638460	ArrayIndexing	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ]		2630490	0					
ANR	2638461	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2638462	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638463	Identifier	ao		2630490	0					
ANR	2638464	Identifier	a		2630490	1					
ANR	2638465	PrimaryExpression	2		2630490	1					
ANR	2638466	AdditiveExpression	strlen ( ao -> a [ 2 ] ) - 1		2630490	1		-			
ANR	2638467	CallExpression	strlen ( ao -> a [ 2 ] )		2630490	0					
ANR	2638468	Callee	strlen		2630490	0					
ANR	2638469	Identifier	strlen		2630490	0					
ANR	2638470	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2638471	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2638472	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2638473	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638474	Identifier	ao		2630490	0					
ANR	2638475	Identifier	a		2630490	1					
ANR	2638476	PrimaryExpression	2		2630490	1					
ANR	2638477	PrimaryExpression	1		2630490	1					
ANR	2638478	PrimaryExpression	'\\0'		2630490	1					
ANR	2638479	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0]"""	2681:3:56421:56440	2630490	3	True				
ANR	2638480	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0]"""		2630490	0		=			
ANR	2638481	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2638482	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638483	Identifier	ao		2630490	0					
ANR	2638484	Identifier	a		2630490	1					
ANR	2638485	PrimaryExpression	3		2630490	1					
ANR	2638486	PrimaryExpression	"""lsl 0]"""		2630490	1					
ANR	2638487	Label	case THUMB_REG_BRACKREG_REG_SHIFTBRACK :	2684:2:56486:56524	2630490	17	True				
ANR	2638488	Identifier	THUMB_REG_BRACKREG_REG_SHIFTBRACK		2630490	0					
ANR	2638489	CompoundStatement		1394:3:30705:30743	2630490	18					
ANR	2638490	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	2685:3:56531:56559	2630490	0	True				
ANR	2638491	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2638492	IdentifierDeclType	ut8		2630490	0					
ANR	2638493	Identifier	reg3		2630490	1					
ANR	2638494	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2638495	Identifier	reg3		2630490	0					
ANR	2638496	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2638497	Callee	getreg		2630490	0					
ANR	2638498	Identifier	getreg		2630490	0					
ANR	2638499	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2638500	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2638501	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2638502	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638503	Identifier	ao		2630490	0					
ANR	2638504	Identifier	a		2630490	1					
ANR	2638505	PrimaryExpression	2		2630490	1					
ANR	2638506	IdentifierDeclStatement	ut32 shift = getshiftmemend ( ao -> a [ 3 ] ) ;	2686:3:56564:56602	2630490	1	True				
ANR	2638507	IdentifierDecl	shift = getshiftmemend ( ao -> a [ 3 ] )		2630490	0					
ANR	2638508	IdentifierDeclType	ut32		2630490	0					
ANR	2638509	Identifier	shift		2630490	1					
ANR	2638510	AssignmentExpression	shift = getshiftmemend ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2638511	Identifier	shift		2630490	0					
ANR	2638512	CallExpression	getshiftmemend ( ao -> a [ 3 ] )		2630490	1					
ANR	2638513	Callee	getshiftmemend		2630490	0					
ANR	2638514	Identifier	getshiftmemend		2630490	0					
ANR	2638515	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2638516	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2638517	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2638518	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638519	Identifier	ao		2630490	0					
ANR	2638520	Identifier	a		2630490	1					
ANR	2638521	PrimaryExpression	3		2630490	1					
ANR	2638522	ExpressionStatement	shift >>= 2	2688:3:56608:56619	2630490	2	True				
ANR	2638523	AssignmentExpression	shift >>= 2		2630490	0		>>=			
ANR	2638524	Identifier	shift		2630490	0					
ANR	2638525	PrimaryExpression	2		2630490	1					
ANR	2638526	IfStatement	if ( shift & 0xffffcfff )		2630490	3					
ANR	2638527	Condition	shift & 0xffffcfff	2689:7:56628:56645	2630490	0	True				
ANR	2638528	BitAndExpression	shift & 0xffffcfff		2630490	0		&			
ANR	2638529	Identifier	shift		2630490	0					
ANR	2638530	PrimaryExpression	0xffffcfff		2630490	1					
ANR	2638531	CompoundStatement		1397:27:30789:30789	2630490	1					
ANR	2638532	ReturnStatement	return - 1 ;	2690:4:56654:56663	2630490	0	True				
ANR	2638533	UnaryOperationExpression	- 1		2630490	0					
ANR	2638534	UnaryOperator	-		2630490	0					
ANR	2638535	PrimaryExpression	1		2630490	1					
ANR	2638536	IfStatement	if ( ldrsel == 0 )		2630490	4					
ANR	2638537	Condition	ldrsel == 0	2693:7:56678:56688	2630490	0	True				
ANR	2638538	EqualityExpression	ldrsel == 0		2630490	0		==			
ANR	2638539	Identifier	ldrsel		2630490	0					
ANR	2638540	PrimaryExpression	0		2630490	1					
ANR	2638541	CompoundStatement		1401:20:30832:30832	2630490	1					
ANR	2638542	ExpressionStatement	ao -> o = 0x50f80000	2694:4:56697:56715	2630490	0	True				
ANR	2638543	AssignmentExpression	ao -> o = 0x50f80000		2630490	0		=			
ANR	2638544	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638545	Identifier	ao		2630490	0					
ANR	2638546	Identifier	o		2630490	1					
ANR	2638547	PrimaryExpression	0x50f80000		2630490	1					
ANR	2638548	ElseStatement	else		2630490	0					
ANR	2638549	IfStatement	if ( ldrsel == B_BIT )		2630490	0					
ANR	2638550	Condition	ldrsel == B_BIT	2696:7:56734:56748	2630490	0	True				
ANR	2638551	EqualityExpression	ldrsel == B_BIT		2630490	0		==			
ANR	2638552	Identifier	ldrsel		2630490	0					
ANR	2638553	Identifier	B_BIT		2630490	1					
ANR	2638554	CompoundStatement		1404:24:30892:30892	2630490	1					
ANR	2638555	ExpressionStatement	ao -> o = 0x10f80000	2697:4:56757:56775	2630490	0	True				
ANR	2638556	AssignmentExpression	ao -> o = 0x10f80000		2630490	0		=			
ANR	2638557	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638558	Identifier	ao		2630490	0					
ANR	2638559	Identifier	o		2630490	1					
ANR	2638560	PrimaryExpression	0x10f80000		2630490	1					
ANR	2638561	ElseStatement	else		2630490	0					
ANR	2638562	IfStatement	if ( ldrsel == H_BIT )		2630490	0					
ANR	2638563	Condition	ldrsel == H_BIT	2699:7:56794:56808	2630490	0	True				
ANR	2638564	EqualityExpression	ldrsel == H_BIT		2630490	0		==			
ANR	2638565	Identifier	ldrsel		2630490	0					
ANR	2638566	Identifier	H_BIT		2630490	1					
ANR	2638567	CompoundStatement		1407:24:30952:30952	2630490	1					
ANR	2638568	ExpressionStatement	ao -> o = 0x30f80000	2700:4:56817:56835	2630490	0	True				
ANR	2638569	AssignmentExpression	ao -> o = 0x30f80000		2630490	0		=			
ANR	2638570	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638571	Identifier	ao		2630490	0					
ANR	2638572	Identifier	o		2630490	1					
ANR	2638573	PrimaryExpression	0x30f80000		2630490	1					
ANR	2638574	ElseStatement	else		2630490	0					
ANR	2638575	CompoundStatement		1410:3:30991:30991	2630490	0					
ANR	2638576	ReturnStatement	return - 1 ;	2703:4:56856:56865	2630490	0	True				
ANR	2638577	UnaryOperationExpression	- 1		2630490	0					
ANR	2638578	UnaryOperator	-		2630490	0					
ANR	2638579	PrimaryExpression	1		2630490	1					
ANR	2638580	IfStatement	if ( m & S_BIT )		2630490	5					
ANR	2638581	Condition	m & S_BIT	2705:7:56879:56887	2630490	0	True				
ANR	2638582	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2638583	Identifier	m		2630490	0					
ANR	2638584	Identifier	S_BIT		2630490	1					
ANR	2638585	CompoundStatement		1413:18:31031:31031	2630490	1					
ANR	2638586	ExpressionStatement	ao -> o |= 1 << 16	2706:4:56896:56912	2630490	0	True				
ANR	2638587	AssignmentExpression	ao -> o |= 1 << 16		2630490	0		|=			
ANR	2638588	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638589	Identifier	ao		2630490	0					
ANR	2638590	Identifier	o		2630490	1					
ANR	2638591	ShiftExpression	1 << 16		2630490	1		<<			
ANR	2638592	PrimaryExpression	1		2630490	0					
ANR	2638593	PrimaryExpression	16		2630490	1					
ANR	2638594	ExpressionStatement	ao -> o |= reg3 << 8	2708:3:56922:56940	2630490	6	True				
ANR	2638595	AssignmentExpression	ao -> o |= reg3 << 8		2630490	0		|=			
ANR	2638596	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638597	Identifier	ao		2630490	0					
ANR	2638598	Identifier	o		2630490	1					
ANR	2638599	ShiftExpression	reg3 << 8		2630490	1		<<			
ANR	2638600	Identifier	reg3		2630490	0					
ANR	2638601	PrimaryExpression	8		2630490	1					
ANR	2638602	ExpressionStatement	ao -> o |= shift	2709:3:56945:56959	2630490	7	True				
ANR	2638603	AssignmentExpression	ao -> o |= shift		2630490	0		|=			
ANR	2638604	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638605	Identifier	ao		2630490	0					
ANR	2638606	Identifier	o		2630490	1					
ANR	2638607	Identifier	shift		2630490	1					
ANR	2638608	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2710:3:56964:56993	2630490	8	True				
ANR	2638609	CallExpression	"mem_32bit_2reg ( ao , m )"		2630490	0					
ANR	2638610	Callee	mem_32bit_2reg		2630490	0					
ANR	2638611	Identifier	mem_32bit_2reg		2630490	0					
ANR	2638612	ArgumentList	ao		2630490	1					
ANR	2638613	Argument	ao		2630490	0					
ANR	2638614	Identifier	ao		2630490	0					
ANR	2638615	Argument	m		2630490	1					
ANR	2638616	Identifier	m		2630490	0					
ANR	2638617	BreakStatement	break ;	2712:3:57010:57015	2630490	19	True				
ANR	2638618	Label	case THUMB_REG_REG_BRACKREGBRACK :	2713:2:57019:57051	2630490	20	True				
ANR	2638619	Identifier	THUMB_REG_REG_BRACKREGBRACK		2630490	0					
ANR	2638620	CompoundStatement		1421:36:31194:31194	2630490	21					
ANR	2638621	ExpressionStatement	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'	2714:3:57058:57095	2630490	0	True				
ANR	2638622	AssignmentExpression	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'		2630490	0		=			
ANR	2638623	ArrayIndexing	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ]		2630490	0					
ANR	2638624	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2638625	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638626	Identifier	ao		2630490	0					
ANR	2638627	Identifier	a		2630490	1					
ANR	2638628	PrimaryExpression	2		2630490	1					
ANR	2638629	AdditiveExpression	strlen ( ao -> a [ 2 ] ) - 1		2630490	1		-			
ANR	2638630	CallExpression	strlen ( ao -> a [ 2 ] )		2630490	0					
ANR	2638631	Callee	strlen		2630490	0					
ANR	2638632	Identifier	strlen		2630490	0					
ANR	2638633	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2638634	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2638635	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2638636	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638637	Identifier	ao		2630490	0					
ANR	2638638	Identifier	a		2630490	1					
ANR	2638639	PrimaryExpression	2		2630490	1					
ANR	2638640	PrimaryExpression	1		2630490	1					
ANR	2638641	PrimaryExpression	'\\0'		2630490	1					
ANR	2638642	ExpressionStatement	"ao -> a [ 3 ] = ""0]"""	2715:3:57100:57115	2630490	1	True				
ANR	2638643	AssignmentExpression	"ao -> a [ 3 ] = ""0]"""		2630490	0		=			
ANR	2638644	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2638645	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638646	Identifier	ao		2630490	0					
ANR	2638647	Identifier	a		2630490	1					
ANR	2638648	PrimaryExpression	3		2630490	1					
ANR	2638649	PrimaryExpression	"""0]"""		2630490	1					
ANR	2638650	Label	case THUMB_REG_REG_BRACKREG_CONSTBRACK :	2718:2:57161:57199	2630490	22	True				
ANR	2638651	Identifier	THUMB_REG_REG_BRACKREG_CONSTBRACK		2630490	0					
ANR	2638652	CompoundStatement		1430:3:31454:31488	2630490	23					
ANR	2638653	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2719:3:57206:57234	2630490	0	True				
ANR	2638654	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2638655	IdentifierDeclType	ut8		2630490	0					
ANR	2638656	Identifier	reg1		2630490	1					
ANR	2638657	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2638658	Identifier	reg1		2630490	0					
ANR	2638659	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2638660	Callee	getreg		2630490	0					
ANR	2638661	Identifier	getreg		2630490	0					
ANR	2638662	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2638663	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2638664	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2638665	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638666	Identifier	ao		2630490	0					
ANR	2638667	Identifier	a		2630490	1					
ANR	2638668	PrimaryExpression	0		2630490	1					
ANR	2638669	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	2720:3:57239:57267	2630490	1	True				
ANR	2638670	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2638671	IdentifierDeclType	ut8		2630490	0					
ANR	2638672	Identifier	reg2		2630490	1					
ANR	2638673	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2638674	Identifier	reg2		2630490	0					
ANR	2638675	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2638676	Callee	getreg		2630490	0					
ANR	2638677	Identifier	getreg		2630490	0					
ANR	2638678	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2638679	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2638680	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2638681	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638682	Identifier	ao		2630490	0					
ANR	2638683	Identifier	a		2630490	1					
ANR	2638684	PrimaryExpression	1		2630490	1					
ANR	2638685	IdentifierDeclStatement	ut8 reg3 = getregmemstart ( ao -> a [ 2 ] ) ;	2721:3:57272:57308	2630490	2	True				
ANR	2638686	IdentifierDecl	reg3 = getregmemstart ( ao -> a [ 2 ] )		2630490	0					
ANR	2638687	IdentifierDeclType	ut8		2630490	0					
ANR	2638688	Identifier	reg3		2630490	1					
ANR	2638689	AssignmentExpression	reg3 = getregmemstart ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2638690	Identifier	reg3		2630490	0					
ANR	2638691	CallExpression	getregmemstart ( ao -> a [ 2 ] )		2630490	1					
ANR	2638692	Callee	getregmemstart		2630490	0					
ANR	2638693	Identifier	getregmemstart		2630490	0					
ANR	2638694	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2638695	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2638696	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2638697	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638698	Identifier	ao		2630490	0					
ANR	2638699	Identifier	a		2630490	1					
ANR	2638700	PrimaryExpression	2		2630490	1					
ANR	2638701	IdentifierDeclStatement	st32 num = getnummemend ( ao -> a [ 3 ] ) ;	2722:3:57313:57347	2630490	3	True				
ANR	2638702	IdentifierDecl	num = getnummemend ( ao -> a [ 3 ] )		2630490	0					
ANR	2638703	IdentifierDeclType	st32		2630490	0					
ANR	2638704	Identifier	num		2630490	1					
ANR	2638705	AssignmentExpression	num = getnummemend ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2638706	Identifier	num		2630490	0					
ANR	2638707	CallExpression	getnummemend ( ao -> a [ 3 ] )		2630490	1					
ANR	2638708	Callee	getnummemend		2630490	0					
ANR	2638709	Identifier	getnummemend		2630490	0					
ANR	2638710	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2638711	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2638712	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2638713	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638714	Identifier	ao		2630490	0					
ANR	2638715	Identifier	a		2630490	1					
ANR	2638716	PrimaryExpression	3		2630490	1					
ANR	2638717	IfStatement	if ( ( num > 1020 ) || ( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT ) )		2630490	4					
ANR	2638718	Condition	( num > 1020 ) || ( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT )	2724:7:57357:57424	2630490	0	True				
ANR	2638719	OrExpression	( num > 1020 ) || ( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT )		2630490	0		||			
ANR	2638720	RelationalExpression	num > 1020		2630490	0		>			
ANR	2638721	Identifier	num		2630490	0					
ANR	2638722	PrimaryExpression	1020		2630490	1					
ANR	2638723	OrExpression	( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT )		2630490	1		||			
ANR	2638724	RelationalExpression	num < - 1020		2630490	0		<			
ANR	2638725	Identifier	num		2630490	0					
ANR	2638726	UnaryOperationExpression	- 1020		2630490	1					
ANR	2638727	UnaryOperator	-		2630490	0					
ANR	2638728	PrimaryExpression	1020		2630490	1					
ANR	2638729	OrExpression	( num % 4 != 0 ) || ( ldrsel != D_BIT )		2630490	1		||			
ANR	2638730	EqualityExpression	num % 4 != 0		2630490	0		!=			
ANR	2638731	MultiplicativeExpression	num % 4		2630490	0		%			
ANR	2638732	Identifier	num		2630490	0					
ANR	2638733	PrimaryExpression	4		2630490	1					
ANR	2638734	PrimaryExpression	0		2630490	1					
ANR	2638735	EqualityExpression	ldrsel != D_BIT		2630490	1		!=			
ANR	2638736	Identifier	ldrsel		2630490	0					
ANR	2638737	Identifier	D_BIT		2630490	1					
ANR	2638738	CompoundStatement		1432:77:31568:31568	2630490	1					
ANR	2638739	ReturnStatement	return - 1 ;	2725:4:57433:57442	2630490	0	True				
ANR	2638740	UnaryOperationExpression	- 1		2630490	0					
ANR	2638741	UnaryOperator	-		2630490	0					
ANR	2638742	PrimaryExpression	1		2630490	1					
ANR	2638743	ExpressionStatement	ao -> o = 0x50e90000	2727:3:57452:57470	2630490	5	True				
ANR	2638744	AssignmentExpression	ao -> o = 0x50e90000		2630490	0		=			
ANR	2638745	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638746	Identifier	ao		2630490	0					
ANR	2638747	Identifier	o		2630490	1					
ANR	2638748	PrimaryExpression	0x50e90000		2630490	1					
ANR	2638749	IfStatement	if ( num < 0 )		2630490	6					
ANR	2638750	Condition	num < 0	2728:7:57479:57485	2630490	0	True				
ANR	2638751	RelationalExpression	num < 0		2630490	0		<			
ANR	2638752	Identifier	num		2630490	0					
ANR	2638753	PrimaryExpression	0		2630490	1					
ANR	2638754	CompoundStatement		1436:16:31629:31629	2630490	1					
ANR	2638755	ExpressionStatement	num = - num	2729:4:57494:57504	2630490	0	True				
ANR	2638756	AssignmentExpression	num = - num		2630490	0		=			
ANR	2638757	Identifier	num		2630490	0					
ANR	2638758	UnaryOperationExpression	- num		2630490	1					
ANR	2638759	UnaryOperator	-		2630490	0					
ANR	2638760	Identifier	num		2630490	1					
ANR	2638761	ElseStatement	else		2630490	0					
ANR	2638762	CompoundStatement		1438:10:31657:31657	2630490	0					
ANR	2638763	ExpressionStatement	ao -> o |= 1 << 31	2731:4:57522:57538	2630490	0	True				
ANR	2638764	AssignmentExpression	ao -> o |= 1 << 31		2630490	0		|=			
ANR	2638765	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638766	Identifier	ao		2630490	0					
ANR	2638767	Identifier	o		2630490	1					
ANR	2638768	ShiftExpression	1 << 31		2630490	1		<<			
ANR	2638769	PrimaryExpression	1		2630490	0					
ANR	2638770	PrimaryExpression	31		2630490	1					
ANR	2638771	ExpressionStatement	ao -> o |= reg1 << 4	2733:3:57548:57566	2630490	7	True				
ANR	2638772	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2638773	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638774	Identifier	ao		2630490	0					
ANR	2638775	Identifier	o		2630490	1					
ANR	2638776	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2638777	Identifier	reg1		2630490	0					
ANR	2638778	PrimaryExpression	4		2630490	1					
ANR	2638779	ExpressionStatement	ao -> o |= reg2	2734:3:57571:57584	2630490	8	True				
ANR	2638780	AssignmentExpression	ao -> o |= reg2		2630490	0		|=			
ANR	2638781	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638782	Identifier	ao		2630490	0					
ANR	2638783	Identifier	o		2630490	1					
ANR	2638784	Identifier	reg2		2630490	1					
ANR	2638785	ExpressionStatement	ao -> o |= reg3 << 24	2735:3:57589:57608	2630490	9	True				
ANR	2638786	AssignmentExpression	ao -> o |= reg3 << 24		2630490	0		|=			
ANR	2638787	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638788	Identifier	ao		2630490	0					
ANR	2638789	Identifier	o		2630490	1					
ANR	2638790	ShiftExpression	reg3 << 24		2630490	1		<<			
ANR	2638791	Identifier	reg3		2630490	0					
ANR	2638792	PrimaryExpression	24		2630490	1					
ANR	2638793	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	2736:3:57613:57637	2630490	10	True				
ANR	2638794	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		2630490	0		|=			
ANR	2638795	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638796	Identifier	ao		2630490	0					
ANR	2638797	Identifier	o		2630490	1					
ANR	2638798	ShiftExpression	( num >> 2 ) << 8		2630490	1		<<			
ANR	2638799	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2638800	Identifier	num		2630490	0					
ANR	2638801	PrimaryExpression	2		2630490	1					
ANR	2638802	PrimaryExpression	8		2630490	1					
ANR	2638803	ReturnStatement	return 4 ;	2737:3:57642:57650	2630490	11	True				
ANR	2638804	PrimaryExpression	4		2630490	0					
ANR	2638805	BreakStatement	break ;	2739:3:57667:57672	2630490	24	True				
ANR	2638806	Label	case THUMB_REG_REG_BRACKREGBRACK_CONST :	2740:2:57676:57714	2630490	25	True				
ANR	2638807	Identifier	THUMB_REG_REG_BRACKREGBRACK_CONST		2630490	0					
ANR	2638808	CompoundStatement		1452:3:31972:32000	2630490	26					
ANR	2638809	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2741:3:57721:57749	2630490	0	True				
ANR	2638810	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2638811	IdentifierDeclType	ut8		2630490	0					
ANR	2638812	Identifier	reg1		2630490	1					
ANR	2638813	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2638814	Identifier	reg1		2630490	0					
ANR	2638815	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2638816	Callee	getreg		2630490	0					
ANR	2638817	Identifier	getreg		2630490	0					
ANR	2638818	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2638819	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2638820	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2638821	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638822	Identifier	ao		2630490	0					
ANR	2638823	Identifier	a		2630490	1					
ANR	2638824	PrimaryExpression	0		2630490	1					
ANR	2638825	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	2742:3:57754:57782	2630490	1	True				
ANR	2638826	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2638827	IdentifierDeclType	ut8		2630490	0					
ANR	2638828	Identifier	reg2		2630490	1					
ANR	2638829	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2638830	Identifier	reg2		2630490	0					
ANR	2638831	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2638832	Callee	getreg		2630490	0					
ANR	2638833	Identifier	getreg		2630490	0					
ANR	2638834	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2638835	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2638836	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2638837	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638838	Identifier	ao		2630490	0					
ANR	2638839	Identifier	a		2630490	1					
ANR	2638840	PrimaryExpression	1		2630490	1					
ANR	2638841	IdentifierDeclStatement	ut8 reg3 = getregmemstartend ( ao -> a [ 2 ] ) ;	2743:3:57787:57826	2630490	2	True				
ANR	2638842	IdentifierDecl	reg3 = getregmemstartend ( ao -> a [ 2 ] )		2630490	0					
ANR	2638843	IdentifierDeclType	ut8		2630490	0					
ANR	2638844	Identifier	reg3		2630490	1					
ANR	2638845	AssignmentExpression	reg3 = getregmemstartend ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2638846	Identifier	reg3		2630490	0					
ANR	2638847	CallExpression	getregmemstartend ( ao -> a [ 2 ] )		2630490	1					
ANR	2638848	Callee	getregmemstartend		2630490	0					
ANR	2638849	Identifier	getregmemstartend		2630490	0					
ANR	2638850	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2638851	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2638852	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2638853	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638854	Identifier	ao		2630490	0					
ANR	2638855	Identifier	a		2630490	1					
ANR	2638856	PrimaryExpression	2		2630490	1					
ANR	2638857	IdentifierDeclStatement	st32 num = getnum ( ao -> a [ 3 ] ) ;	2744:3:57831:57859	2630490	3	True				
ANR	2638858	IdentifierDecl	num = getnum ( ao -> a [ 3 ] )		2630490	0					
ANR	2638859	IdentifierDeclType	st32		2630490	0					
ANR	2638860	Identifier	num		2630490	1					
ANR	2638861	AssignmentExpression	num = getnum ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2638862	Identifier	num		2630490	0					
ANR	2638863	CallExpression	getnum ( ao -> a [ 3 ] )		2630490	1					
ANR	2638864	Callee	getnum		2630490	0					
ANR	2638865	Identifier	getnum		2630490	0					
ANR	2638866	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2638867	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2638868	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2638869	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638870	Identifier	ao		2630490	0					
ANR	2638871	Identifier	a		2630490	1					
ANR	2638872	PrimaryExpression	3		2630490	1					
ANR	2638873	IfStatement	if ( ( num > 1020 ) || ( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT ) )		2630490	4					
ANR	2638874	Condition	( num > 1020 ) || ( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT )	2745:7:57868:57935	2630490	0	True				
ANR	2638875	OrExpression	( num > 1020 ) || ( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT )		2630490	0		||			
ANR	2638876	RelationalExpression	num > 1020		2630490	0		>			
ANR	2638877	Identifier	num		2630490	0					
ANR	2638878	PrimaryExpression	1020		2630490	1					
ANR	2638879	OrExpression	( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT )		2630490	1		||			
ANR	2638880	RelationalExpression	num < - 1020		2630490	0		<			
ANR	2638881	Identifier	num		2630490	0					
ANR	2638882	UnaryOperationExpression	- 1020		2630490	1					
ANR	2638883	UnaryOperator	-		2630490	0					
ANR	2638884	PrimaryExpression	1020		2630490	1					
ANR	2638885	OrExpression	( num % 4 != 0 ) || ( ldrsel != D_BIT )		2630490	1		||			
ANR	2638886	EqualityExpression	num % 4 != 0		2630490	0		!=			
ANR	2638887	MultiplicativeExpression	num % 4		2630490	0		%			
ANR	2638888	Identifier	num		2630490	0					
ANR	2638889	PrimaryExpression	4		2630490	1					
ANR	2638890	PrimaryExpression	0		2630490	1					
ANR	2638891	EqualityExpression	ldrsel != D_BIT		2630490	1		!=			
ANR	2638892	Identifier	ldrsel		2630490	0					
ANR	2638893	Identifier	D_BIT		2630490	1					
ANR	2638894	CompoundStatement		1453:77:32079:32079	2630490	1					
ANR	2638895	ReturnStatement	return - 1 ;	2746:4:57944:57953	2630490	0	True				
ANR	2638896	UnaryOperationExpression	- 1		2630490	0					
ANR	2638897	UnaryOperator	-		2630490	0					
ANR	2638898	PrimaryExpression	1		2630490	1					
ANR	2638899	ExpressionStatement	ao -> o = 0x70e80000	2748:3:57963:57981	2630490	5	True				
ANR	2638900	AssignmentExpression	ao -> o = 0x70e80000		2630490	0		=			
ANR	2638901	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638902	Identifier	ao		2630490	0					
ANR	2638903	Identifier	o		2630490	1					
ANR	2638904	PrimaryExpression	0x70e80000		2630490	1					
ANR	2638905	IfStatement	if ( num < 0 )		2630490	6					
ANR	2638906	Condition	num < 0	2749:7:57990:57996	2630490	0	True				
ANR	2638907	RelationalExpression	num < 0		2630490	0		<			
ANR	2638908	Identifier	num		2630490	0					
ANR	2638909	PrimaryExpression	0		2630490	1					
ANR	2638910	CompoundStatement		1457:16:32140:32140	2630490	1					
ANR	2638911	ExpressionStatement	num = - num	2750:4:58005:58015	2630490	0	True				
ANR	2638912	AssignmentExpression	num = - num		2630490	0		=			
ANR	2638913	Identifier	num		2630490	0					
ANR	2638914	UnaryOperationExpression	- num		2630490	1					
ANR	2638915	UnaryOperator	-		2630490	0					
ANR	2638916	Identifier	num		2630490	1					
ANR	2638917	ElseStatement	else		2630490	0					
ANR	2638918	CompoundStatement		1459:10:32168:32168	2630490	0					
ANR	2638919	ExpressionStatement	ao -> o |= 1 << 31	2752:4:58033:58049	2630490	0	True				
ANR	2638920	AssignmentExpression	ao -> o |= 1 << 31		2630490	0		|=			
ANR	2638921	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638922	Identifier	ao		2630490	0					
ANR	2638923	Identifier	o		2630490	1					
ANR	2638924	ShiftExpression	1 << 31		2630490	1		<<			
ANR	2638925	PrimaryExpression	1		2630490	0					
ANR	2638926	PrimaryExpression	31		2630490	1					
ANR	2638927	ExpressionStatement	ao -> o |= reg1 << 4	2754:3:58059:58077	2630490	7	True				
ANR	2638928	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2638929	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638930	Identifier	ao		2630490	0					
ANR	2638931	Identifier	o		2630490	1					
ANR	2638932	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2638933	Identifier	reg1		2630490	0					
ANR	2638934	PrimaryExpression	4		2630490	1					
ANR	2638935	ExpressionStatement	ao -> o |= reg2	2755:3:58082:58095	2630490	8	True				
ANR	2638936	AssignmentExpression	ao -> o |= reg2		2630490	0		|=			
ANR	2638937	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638938	Identifier	ao		2630490	0					
ANR	2638939	Identifier	o		2630490	1					
ANR	2638940	Identifier	reg2		2630490	1					
ANR	2638941	ExpressionStatement	ao -> o |= reg3 << 24	2756:3:58100:58119	2630490	9	True				
ANR	2638942	AssignmentExpression	ao -> o |= reg3 << 24		2630490	0		|=			
ANR	2638943	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638944	Identifier	ao		2630490	0					
ANR	2638945	Identifier	o		2630490	1					
ANR	2638946	ShiftExpression	reg3 << 24		2630490	1		<<			
ANR	2638947	Identifier	reg3		2630490	0					
ANR	2638948	PrimaryExpression	24		2630490	1					
ANR	2638949	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	2757:3:58124:58148	2630490	10	True				
ANR	2638950	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		2630490	0		|=			
ANR	2638951	PtrMemberAccess	ao -> o		2630490	0					
ANR	2638952	Identifier	ao		2630490	0					
ANR	2638953	Identifier	o		2630490	1					
ANR	2638954	ShiftExpression	( num >> 2 ) << 8		2630490	1		<<			
ANR	2638955	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2638956	Identifier	num		2630490	0					
ANR	2638957	PrimaryExpression	2		2630490	1					
ANR	2638958	PrimaryExpression	8		2630490	1					
ANR	2638959	ReturnStatement	return 4 ;	2758:3:58153:58161	2630490	11	True				
ANR	2638960	PrimaryExpression	4		2630490	0					
ANR	2638961	BreakStatement	break ;	2760:3:58178:58183	2630490	27	True				
ANR	2638962	Label	case THUMB_REG_REG_BRACKREG_CONSTBRACKBANG :	2761:2:58187:58229	2630490	28	True				
ANR	2638963	Identifier	THUMB_REG_REG_BRACKREG_CONSTBRACKBANG		2630490	0					
ANR	2638964	CompoundStatement		1473:3:32484:32522	2630490	29					
ANR	2638965	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2762:3:58236:58264	2630490	0	True				
ANR	2638966	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2638967	IdentifierDeclType	ut8		2630490	0					
ANR	2638968	Identifier	reg1		2630490	1					
ANR	2638969	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2638970	Identifier	reg1		2630490	0					
ANR	2638971	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2638972	Callee	getreg		2630490	0					
ANR	2638973	Identifier	getreg		2630490	0					
ANR	2638974	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2638975	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2638976	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2638977	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638978	Identifier	ao		2630490	0					
ANR	2638979	Identifier	a		2630490	1					
ANR	2638980	PrimaryExpression	0		2630490	1					
ANR	2638981	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	2763:3:58269:58297	2630490	1	True				
ANR	2638982	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2638983	IdentifierDeclType	ut8		2630490	0					
ANR	2638984	Identifier	reg2		2630490	1					
ANR	2638985	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2638986	Identifier	reg2		2630490	0					
ANR	2638987	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2638988	Callee	getreg		2630490	0					
ANR	2638989	Identifier	getreg		2630490	0					
ANR	2638990	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2638991	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2638992	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2638993	PtrMemberAccess	ao -> a		2630490	0					
ANR	2638994	Identifier	ao		2630490	0					
ANR	2638995	Identifier	a		2630490	1					
ANR	2638996	PrimaryExpression	1		2630490	1					
ANR	2638997	IdentifierDeclStatement	ut8 reg3 = getregmemstart ( ao -> a [ 2 ] ) ;	2764:3:58302:58338	2630490	2	True				
ANR	2638998	IdentifierDecl	reg3 = getregmemstart ( ao -> a [ 2 ] )		2630490	0					
ANR	2638999	IdentifierDeclType	ut8		2630490	0					
ANR	2639000	Identifier	reg3		2630490	1					
ANR	2639001	AssignmentExpression	reg3 = getregmemstart ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2639002	Identifier	reg3		2630490	0					
ANR	2639003	CallExpression	getregmemstart ( ao -> a [ 2 ] )		2630490	1					
ANR	2639004	Callee	getregmemstart		2630490	0					
ANR	2639005	Identifier	getregmemstart		2630490	0					
ANR	2639006	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2639007	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2639008	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2639009	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639010	Identifier	ao		2630490	0					
ANR	2639011	Identifier	a		2630490	1					
ANR	2639012	PrimaryExpression	2		2630490	1					
ANR	2639013	IdentifierDeclStatement	st32 num = getnummemendbang ( ao -> a [ 3 ] ) ;	2765:3:58343:58381	2630490	3	True				
ANR	2639014	IdentifierDecl	num = getnummemendbang ( ao -> a [ 3 ] )		2630490	0					
ANR	2639015	IdentifierDeclType	st32		2630490	0					
ANR	2639016	Identifier	num		2630490	1					
ANR	2639017	AssignmentExpression	num = getnummemendbang ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2639018	Identifier	num		2630490	0					
ANR	2639019	CallExpression	getnummemendbang ( ao -> a [ 3 ] )		2630490	1					
ANR	2639020	Callee	getnummemendbang		2630490	0					
ANR	2639021	Identifier	getnummemendbang		2630490	0					
ANR	2639022	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2639023	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2639024	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2639025	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639026	Identifier	ao		2630490	0					
ANR	2639027	Identifier	a		2630490	1					
ANR	2639028	PrimaryExpression	3		2630490	1					
ANR	2639029	IfStatement	if ( ( num > 1020 ) || ( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT ) )		2630490	4					
ANR	2639030	Condition	( num > 1020 ) || ( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT )	2766:7:58390:58457	2630490	0	True				
ANR	2639031	OrExpression	( num > 1020 ) || ( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT )		2630490	0		||			
ANR	2639032	RelationalExpression	num > 1020		2630490	0		>			
ANR	2639033	Identifier	num		2630490	0					
ANR	2639034	PrimaryExpression	1020		2630490	1					
ANR	2639035	OrExpression	( num < - 1020 ) || ( num % 4 != 0 ) || ( ldrsel != D_BIT )		2630490	1		||			
ANR	2639036	RelationalExpression	num < - 1020		2630490	0		<			
ANR	2639037	Identifier	num		2630490	0					
ANR	2639038	UnaryOperationExpression	- 1020		2630490	1					
ANR	2639039	UnaryOperator	-		2630490	0					
ANR	2639040	PrimaryExpression	1020		2630490	1					
ANR	2639041	OrExpression	( num % 4 != 0 ) || ( ldrsel != D_BIT )		2630490	1		||			
ANR	2639042	EqualityExpression	num % 4 != 0		2630490	0		!=			
ANR	2639043	MultiplicativeExpression	num % 4		2630490	0		%			
ANR	2639044	Identifier	num		2630490	0					
ANR	2639045	PrimaryExpression	4		2630490	1					
ANR	2639046	PrimaryExpression	0		2630490	1					
ANR	2639047	EqualityExpression	ldrsel != D_BIT		2630490	1		!=			
ANR	2639048	Identifier	ldrsel		2630490	0					
ANR	2639049	Identifier	D_BIT		2630490	1					
ANR	2639050	CompoundStatement		1474:77:32601:32601	2630490	1					
ANR	2639051	ReturnStatement	return - 1 ;	2767:4:58466:58475	2630490	0	True				
ANR	2639052	UnaryOperationExpression	- 1		2630490	0					
ANR	2639053	UnaryOperator	-		2630490	0					
ANR	2639054	PrimaryExpression	1		2630490	1					
ANR	2639055	ExpressionStatement	ao -> o = 0x70e90000	2769:3:58485:58503	2630490	5	True				
ANR	2639056	AssignmentExpression	ao -> o = 0x70e90000		2630490	0		=			
ANR	2639057	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639058	Identifier	ao		2630490	0					
ANR	2639059	Identifier	o		2630490	1					
ANR	2639060	PrimaryExpression	0x70e90000		2630490	1					
ANR	2639061	IfStatement	if ( num < 0 )		2630490	6					
ANR	2639062	Condition	num < 0	2770:7:58512:58518	2630490	0	True				
ANR	2639063	RelationalExpression	num < 0		2630490	0		<			
ANR	2639064	Identifier	num		2630490	0					
ANR	2639065	PrimaryExpression	0		2630490	1					
ANR	2639066	CompoundStatement		1478:16:32662:32662	2630490	1					
ANR	2639067	ExpressionStatement	num = - num	2771:4:58527:58537	2630490	0	True				
ANR	2639068	AssignmentExpression	num = - num		2630490	0		=			
ANR	2639069	Identifier	num		2630490	0					
ANR	2639070	UnaryOperationExpression	- num		2630490	1					
ANR	2639071	UnaryOperator	-		2630490	0					
ANR	2639072	Identifier	num		2630490	1					
ANR	2639073	ElseStatement	else		2630490	0					
ANR	2639074	CompoundStatement		1480:10:32690:32690	2630490	0					
ANR	2639075	ExpressionStatement	ao -> o |= 1 << 31	2773:4:58555:58571	2630490	0	True				
ANR	2639076	AssignmentExpression	ao -> o |= 1 << 31		2630490	0		|=			
ANR	2639077	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639078	Identifier	ao		2630490	0					
ANR	2639079	Identifier	o		2630490	1					
ANR	2639080	ShiftExpression	1 << 31		2630490	1		<<			
ANR	2639081	PrimaryExpression	1		2630490	0					
ANR	2639082	PrimaryExpression	31		2630490	1					
ANR	2639083	ExpressionStatement	ao -> o |= reg1 << 4	2775:3:58581:58599	2630490	7	True				
ANR	2639084	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2639085	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639086	Identifier	ao		2630490	0					
ANR	2639087	Identifier	o		2630490	1					
ANR	2639088	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2639089	Identifier	reg1		2630490	0					
ANR	2639090	PrimaryExpression	4		2630490	1					
ANR	2639091	ExpressionStatement	ao -> o |= reg2	2776:3:58604:58617	2630490	8	True				
ANR	2639092	AssignmentExpression	ao -> o |= reg2		2630490	0		|=			
ANR	2639093	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639094	Identifier	ao		2630490	0					
ANR	2639095	Identifier	o		2630490	1					
ANR	2639096	Identifier	reg2		2630490	1					
ANR	2639097	ExpressionStatement	ao -> o |= reg3 << 24	2777:3:58622:58641	2630490	9	True				
ANR	2639098	AssignmentExpression	ao -> o |= reg3 << 24		2630490	0		|=			
ANR	2639099	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639100	Identifier	ao		2630490	0					
ANR	2639101	Identifier	o		2630490	1					
ANR	2639102	ShiftExpression	reg3 << 24		2630490	1		<<			
ANR	2639103	Identifier	reg3		2630490	0					
ANR	2639104	PrimaryExpression	24		2630490	1					
ANR	2639105	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	2778:3:58646:58670	2630490	10	True				
ANR	2639106	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		2630490	0		|=			
ANR	2639107	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639108	Identifier	ao		2630490	0					
ANR	2639109	Identifier	o		2630490	1					
ANR	2639110	ShiftExpression	( num >> 2 ) << 8		2630490	1		<<			
ANR	2639111	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2639112	Identifier	num		2630490	0					
ANR	2639113	PrimaryExpression	2		2630490	1					
ANR	2639114	PrimaryExpression	8		2630490	1					
ANR	2639115	ReturnStatement	return 4 ;	2779:3:58675:58683	2630490	11	True				
ANR	2639116	PrimaryExpression	4		2630490	0					
ANR	2639117	BreakStatement	break ;	2781:3:58700:58705	2630490	30	True				
ANR	2639118	Label	default :	2782:2:58709:58716	2630490	31	True				
ANR	2639119	Identifier	default		2630490	0					
ANR	2639120	ReturnStatement	return - 1 ;	2783:3:58721:58730	2630490	32	True				
ANR	2639121	UnaryOperationExpression	- 1		2630490	0					
ANR	2639122	UnaryOperator	-		2630490	0					
ANR	2639123	PrimaryExpression	1		2630490	1					
ANR	2639124	ElseStatement	else		2630490	0					
ANR	2639125	IfStatement	"if ( ( m = opmask ( ao -> op , ""ldrex"" , B_BIT | H_BIT | D_BIT ) ) )"		2630490	0					
ANR	2639126	Condition	"m = opmask ( ao -> op , ""ldrex"" , B_BIT | H_BIT | D_BIT )"	2786:5:58749:58801	2630490	0	True				
ANR	2639127	AssignmentExpression	"m = opmask ( ao -> op , ""ldrex"" , B_BIT | H_BIT | D_BIT )"		2630490	0		=			
ANR	2639128	Identifier	m		2630490	0					
ANR	2639129	CallExpression	"opmask ( ao -> op , ""ldrex"" , B_BIT | H_BIT | D_BIT )"		2630490	1					
ANR	2639130	Callee	opmask		2630490	0					
ANR	2639131	Identifier	opmask		2630490	0					
ANR	2639132	ArgumentList	ao -> op		2630490	1					
ANR	2639133	Argument	ao -> op		2630490	0					
ANR	2639134	PtrMemberAccess	ao -> op		2630490	0					
ANR	2639135	Identifier	ao		2630490	0					
ANR	2639136	Identifier	op		2630490	1					
ANR	2639137	Argument	"""ldrex"""		2630490	1					
ANR	2639138	PrimaryExpression	"""ldrex"""		2630490	0					
ANR	2639139	Argument	B_BIT | H_BIT | D_BIT		2630490	2					
ANR	2639140	InclusiveOrExpression	B_BIT | H_BIT | D_BIT		2630490	0		|			
ANR	2639141	Identifier	B_BIT		2630490	0					
ANR	2639142	InclusiveOrExpression	H_BIT | D_BIT		2630490	1		|			
ANR	2639143	Identifier	H_BIT		2630490	0					
ANR	2639144	Identifier	D_BIT		2630490	1					
ANR	2639145	CompoundStatement		1496:2:32987:33028	2630490	1					
ANR	2639146	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2787:2:58808:58842	2630490	0	True				
ANR	2639147	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2639148	IdentifierDeclType	ut64		2630490	0					
ANR	2639149	Identifier	argt		2630490	1					
ANR	2639150	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2639151	Identifier	argt		2630490	0					
ANR	2639152	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2639153	Callee	thumb_selector		2630490	0					
ANR	2639154	Identifier	thumb_selector		2630490	0					
ANR	2639155	ArgumentList	ao -> a		2630490	1					
ANR	2639156	Argument	ao -> a		2630490	0					
ANR	2639157	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639158	Identifier	ao		2630490	0					
ANR	2639159	Identifier	a		2630490	1					
ANR	2639160	IdentifierDeclStatement	ut32 ldrsel = m & ( B_BIT | H_BIT | D_BIT ) ;	2788:2:58846:58887	2630490	1	True				
ANR	2639161	IdentifierDecl	ldrsel = m & ( B_BIT | H_BIT | D_BIT )		2630490	0					
ANR	2639162	IdentifierDeclType	ut32		2630490	0					
ANR	2639163	Identifier	ldrsel		2630490	1					
ANR	2639164	AssignmentExpression	ldrsel = m & ( B_BIT | H_BIT | D_BIT )		2630490	2		=			
ANR	2639165	Identifier	ldrsel		2630490	0					
ANR	2639166	BitAndExpression	m & ( B_BIT | H_BIT | D_BIT )		2630490	1		&			
ANR	2639167	Identifier	m		2630490	0					
ANR	2639168	InclusiveOrExpression	B_BIT | H_BIT | D_BIT		2630490	1		|			
ANR	2639169	Identifier	B_BIT		2630490	0					
ANR	2639170	InclusiveOrExpression	H_BIT | D_BIT		2630490	1		|			
ANR	2639171	Identifier	H_BIT		2630490	0					
ANR	2639172	Identifier	D_BIT		2630490	1					
ANR	2639173	SwitchStatement	switch ( argt )		2630490	2					
ANR	2639174	Condition	argt	2789:10:58899:58902	2630490	0	True				
ANR	2639175	Identifier	argt		2630490	0					
ANR	2639176	CompoundStatement		1497:16:33046:33046	2630490	1					
ANR	2639177	Label	case THUMB_REG_BRACKREGBRACK :	2790:2:58909:58937	2630490	0	True				
ANR	2639178	Identifier	THUMB_REG_BRACKREGBRACK		2630490	0					
ANR	2639179	CompoundStatement		1500:3:33118:33157	2630490	1					
ANR	2639180	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2791:3:58944:58972	2630490	0	True				
ANR	2639181	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2639182	IdentifierDeclType	ut8		2630490	0					
ANR	2639183	Identifier	reg1		2630490	1					
ANR	2639184	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2639185	Identifier	reg1		2630490	0					
ANR	2639186	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2639187	Callee	getreg		2630490	0					
ANR	2639188	Identifier	getreg		2630490	0					
ANR	2639189	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2639190	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2639191	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2639192	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639193	Identifier	ao		2630490	0					
ANR	2639194	Identifier	a		2630490	1					
ANR	2639195	PrimaryExpression	0		2630490	1					
ANR	2639196	IdentifierDeclStatement	ut8 reg2 = getregmemstartend ( ao -> a [ 1 ] ) ;	2792:3:58977:59016	2630490	1	True				
ANR	2639197	IdentifierDecl	reg2 = getregmemstartend ( ao -> a [ 1 ] )		2630490	0					
ANR	2639198	IdentifierDeclType	ut8		2630490	0					
ANR	2639199	Identifier	reg2		2630490	1					
ANR	2639200	AssignmentExpression	reg2 = getregmemstartend ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2639201	Identifier	reg2		2630490	0					
ANR	2639202	CallExpression	getregmemstartend ( ao -> a [ 1 ] )		2630490	1					
ANR	2639203	Callee	getregmemstartend		2630490	0					
ANR	2639204	Identifier	getregmemstartend		2630490	0					
ANR	2639205	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2639206	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2639207	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2639208	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639209	Identifier	ao		2630490	0					
ANR	2639210	Identifier	a		2630490	1					
ANR	2639211	PrimaryExpression	1		2630490	1					
ANR	2639212	IfStatement	if ( ldrsel == B_BIT )		2630490	2					
ANR	2639213	Condition	ldrsel == B_BIT	2794:7:59029:59043	2630490	0	True				
ANR	2639214	EqualityExpression	ldrsel == B_BIT		2630490	0		==			
ANR	2639215	Identifier	ldrsel		2630490	0					
ANR	2639216	Identifier	B_BIT		2630490	1					
ANR	2639217	CompoundStatement		1502:24:33187:33187	2630490	1					
ANR	2639218	ExpressionStatement	ao -> o = 0xd0e84f0f	2795:4:59052:59070	2630490	0	True				
ANR	2639219	AssignmentExpression	ao -> o = 0xd0e84f0f		2630490	0		=			
ANR	2639220	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639221	Identifier	ao		2630490	0					
ANR	2639222	Identifier	o		2630490	1					
ANR	2639223	PrimaryExpression	0xd0e84f0f		2630490	1					
ANR	2639224	ExpressionStatement	ao -> o |= reg1 << 4	2796:4:59076:59094	2630490	1	True				
ANR	2639225	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2639226	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639227	Identifier	ao		2630490	0					
ANR	2639228	Identifier	o		2630490	1					
ANR	2639229	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2639230	Identifier	reg1		2630490	0					
ANR	2639231	PrimaryExpression	4		2630490	1					
ANR	2639232	ExpressionStatement	ao -> o |= reg2 << 24	2797:4:59100:59119	2630490	2	True				
ANR	2639233	AssignmentExpression	ao -> o |= reg2 << 24		2630490	0		|=			
ANR	2639234	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639235	Identifier	ao		2630490	0					
ANR	2639236	Identifier	o		2630490	1					
ANR	2639237	ShiftExpression	reg2 << 24		2630490	1		<<			
ANR	2639238	Identifier	reg2		2630490	0					
ANR	2639239	PrimaryExpression	24		2630490	1					
ANR	2639240	ReturnStatement	return 4 ;	2798:4:59125:59133	2630490	3	True				
ANR	2639241	PrimaryExpression	4		2630490	0					
ANR	2639242	ElseStatement	else		2630490	0					
ANR	2639243	IfStatement	if ( ldrsel == H_BIT )		2630490	0					
ANR	2639244	Condition	ldrsel == H_BIT	2800:7:59152:59166	2630490	0	True				
ANR	2639245	EqualityExpression	ldrsel == H_BIT		2630490	0		==			
ANR	2639246	Identifier	ldrsel		2630490	0					
ANR	2639247	Identifier	H_BIT		2630490	1					
ANR	2639248	CompoundStatement		1508:24:33310:33310	2630490	1					
ANR	2639249	ExpressionStatement	ao -> o = 0xd0e85f0f	2801:4:59175:59193	2630490	0	True				
ANR	2639250	AssignmentExpression	ao -> o = 0xd0e85f0f		2630490	0		=			
ANR	2639251	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639252	Identifier	ao		2630490	0					
ANR	2639253	Identifier	o		2630490	1					
ANR	2639254	PrimaryExpression	0xd0e85f0f		2630490	1					
ANR	2639255	ExpressionStatement	ao -> o |= reg1 << 4	2802:4:59199:59217	2630490	1	True				
ANR	2639256	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2639257	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639258	Identifier	ao		2630490	0					
ANR	2639259	Identifier	o		2630490	1					
ANR	2639260	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2639261	Identifier	reg1		2630490	0					
ANR	2639262	PrimaryExpression	4		2630490	1					
ANR	2639263	ExpressionStatement	ao -> o |= reg2 << 24	2803:4:59223:59242	2630490	2	True				
ANR	2639264	AssignmentExpression	ao -> o |= reg2 << 24		2630490	0		|=			
ANR	2639265	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639266	Identifier	ao		2630490	0					
ANR	2639267	Identifier	o		2630490	1					
ANR	2639268	ShiftExpression	reg2 << 24		2630490	1		<<			
ANR	2639269	Identifier	reg2		2630490	0					
ANR	2639270	PrimaryExpression	24		2630490	1					
ANR	2639271	ReturnStatement	return 4 ;	2804:4:59248:59256	2630490	3	True				
ANR	2639272	PrimaryExpression	4		2630490	0					
ANR	2639273	ElseStatement	else		2630490	0					
ANR	2639274	IfStatement	if ( ldrsel == 0 )		2630490	0					
ANR	2639275	Condition	ldrsel == 0	2806:7:59275:59285	2630490	0	True				
ANR	2639276	EqualityExpression	ldrsel == 0		2630490	0		==			
ANR	2639277	Identifier	ldrsel		2630490	0					
ANR	2639278	PrimaryExpression	0		2630490	1					
ANR	2639279	CompoundStatement		1514:20:33429:33429	2630490	1					
ANR	2639280	ExpressionStatement	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'	2807:4:59294:59332	2630490	0	True				
ANR	2639281	AssignmentExpression	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'		2630490	0		=			
ANR	2639282	ArrayIndexing	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ]		2630490	0					
ANR	2639283	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2639284	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639285	Identifier	ao		2630490	0					
ANR	2639286	Identifier	a		2630490	1					
ANR	2639287	PrimaryExpression	1		2630490	1					
ANR	2639288	AdditiveExpression	strlen ( ao -> a [ 1 ] ) - 1		2630490	1		-			
ANR	2639289	CallExpression	strlen ( ao -> a [ 1 ] )		2630490	0					
ANR	2639290	Callee	strlen		2630490	0					
ANR	2639291	Identifier	strlen		2630490	0					
ANR	2639292	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2639293	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2639294	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2639295	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639296	Identifier	ao		2630490	0					
ANR	2639297	Identifier	a		2630490	1					
ANR	2639298	PrimaryExpression	1		2630490	1					
ANR	2639299	PrimaryExpression	1		2630490	1					
ANR	2639300	PrimaryExpression	'\\0'		2630490	1					
ANR	2639301	ExpressionStatement	"ao -> a [ 2 ] = ""0]"""	2808:4:59338:59353	2630490	1	True				
ANR	2639302	AssignmentExpression	"ao -> a [ 2 ] = ""0]"""		2630490	0		=			
ANR	2639303	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2639304	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639305	Identifier	ao		2630490	0					
ANR	2639306	Identifier	a		2630490	1					
ANR	2639307	PrimaryExpression	2		2630490	1					
ANR	2639308	PrimaryExpression	"""0]"""		2630490	1					
ANR	2639309	ElseStatement	else		2630490	0					
ANR	2639310	CompoundStatement		1517:10:33506:33506	2630490	0					
ANR	2639311	ReturnStatement	return - 1 ;	2810:4:59371:59380	2630490	0	True				
ANR	2639312	UnaryOperationExpression	- 1		2630490	0					
ANR	2639313	UnaryOperator	-		2630490	0					
ANR	2639314	PrimaryExpression	1		2630490	1					
ANR	2639315	Label	case THUMB_REG_BRACKREG_CONSTBRACK :	2814:2:59424:59458	2630490	2	True				
ANR	2639316	Identifier	THUMB_REG_BRACKREG_CONSTBRACK		2630490	0					
ANR	2639317	CompoundStatement		1523:3:33606:33640	2630490	3					
ANR	2639318	IdentifierDeclStatement	st32 num = getnummemend ( ao -> a [ 2 ] ) ;	2815:3:59465:59499	2630490	0	True				
ANR	2639319	IdentifierDecl	num = getnummemend ( ao -> a [ 2 ] )		2630490	0					
ANR	2639320	IdentifierDeclType	st32		2630490	0					
ANR	2639321	Identifier	num		2630490	1					
ANR	2639322	AssignmentExpression	num = getnummemend ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2639323	Identifier	num		2630490	0					
ANR	2639324	CallExpression	getnummemend ( ao -> a [ 2 ] )		2630490	1					
ANR	2639325	Callee	getnummemend		2630490	0					
ANR	2639326	Identifier	getnummemend		2630490	0					
ANR	2639327	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2639328	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2639329	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2639330	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639331	Identifier	ao		2630490	0					
ANR	2639332	Identifier	a		2630490	1					
ANR	2639333	PrimaryExpression	2		2630490	1					
ANR	2639334	IfStatement	if ( ( ldrsel != 0 ) || ( num < 0 ) || ( num > 1020 ) || ( num % 4 != 0 ) )		2630490	1					
ANR	2639335	Condition	( ldrsel != 0 ) || ( num < 0 ) || ( num > 1020 ) || ( num % 4 != 0 )	2816:7:59508:59567	2630490	0	True				
ANR	2639336	OrExpression	( ldrsel != 0 ) || ( num < 0 ) || ( num > 1020 ) || ( num % 4 != 0 )		2630490	0		||			
ANR	2639337	EqualityExpression	ldrsel != 0		2630490	0		!=			
ANR	2639338	Identifier	ldrsel		2630490	0					
ANR	2639339	PrimaryExpression	0		2630490	1					
ANR	2639340	OrExpression	( num < 0 ) || ( num > 1020 ) || ( num % 4 != 0 )		2630490	1		||			
ANR	2639341	RelationalExpression	num < 0		2630490	0		<			
ANR	2639342	Identifier	num		2630490	0					
ANR	2639343	PrimaryExpression	0		2630490	1					
ANR	2639344	OrExpression	( num > 1020 ) || ( num % 4 != 0 )		2630490	1		||			
ANR	2639345	RelationalExpression	num > 1020		2630490	0		>			
ANR	2639346	Identifier	num		2630490	0					
ANR	2639347	PrimaryExpression	1020		2630490	1					
ANR	2639348	EqualityExpression	num % 4 != 0		2630490	1		!=			
ANR	2639349	MultiplicativeExpression	num % 4		2630490	0		%			
ANR	2639350	Identifier	num		2630490	0					
ANR	2639351	PrimaryExpression	4		2630490	1					
ANR	2639352	PrimaryExpression	0		2630490	1					
ANR	2639353	CompoundStatement		1524:69:33711:33711	2630490	1					
ANR	2639354	ReturnStatement	return - 1 ;	2817:4:59576:59585	2630490	0	True				
ANR	2639355	UnaryOperationExpression	- 1		2630490	0					
ANR	2639356	UnaryOperator	-		2630490	0					
ANR	2639357	PrimaryExpression	1		2630490	1					
ANR	2639358	ExpressionStatement	ao -> o = 0x50e8000f	2819:3:59595:59613	2630490	2	True				
ANR	2639359	AssignmentExpression	ao -> o = 0x50e8000f		2630490	0		=			
ANR	2639360	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639361	Identifier	ao		2630490	0					
ANR	2639362	Identifier	o		2630490	1					
ANR	2639363	PrimaryExpression	0x50e8000f		2630490	1					
ANR	2639364	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	2820:3:59618:59642	2630490	3	True				
ANR	2639365	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		2630490	0		|=			
ANR	2639366	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639367	Identifier	ao		2630490	0					
ANR	2639368	Identifier	o		2630490	1					
ANR	2639369	ShiftExpression	( num >> 2 ) << 8		2630490	1		<<			
ANR	2639370	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2639371	Identifier	num		2630490	0					
ANR	2639372	PrimaryExpression	2		2630490	1					
ANR	2639373	PrimaryExpression	8		2630490	1					
ANR	2639374	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	2821:3:59647:59676	2630490	4	True				
ANR	2639375	CallExpression	"mem_32bit_2reg ( ao , m )"		2630490	0					
ANR	2639376	Callee	mem_32bit_2reg		2630490	0					
ANR	2639377	Identifier	mem_32bit_2reg		2630490	0					
ANR	2639378	ArgumentList	ao		2630490	1					
ANR	2639379	Argument	ao		2630490	0					
ANR	2639380	Identifier	ao		2630490	0					
ANR	2639381	Argument	m		2630490	1					
ANR	2639382	Identifier	m		2630490	0					
ANR	2639383	BreakStatement	break ;	2823:3:59693:59698	2630490	4	True				
ANR	2639384	Label	case THUMB_REG_REG_BRACKREGBRACK :	2824:2:59702:59734	2630490	5	True				
ANR	2639385	Identifier	THUMB_REG_REG_BRACKREGBRACK		2630490	0					
ANR	2639386	CompoundStatement		1535:3:33948:33987	2630490	6					
ANR	2639387	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2825:3:59741:59769	2630490	0	True				
ANR	2639388	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2639389	IdentifierDeclType	ut8		2630490	0					
ANR	2639390	Identifier	reg1		2630490	1					
ANR	2639391	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2639392	Identifier	reg1		2630490	0					
ANR	2639393	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2639394	Callee	getreg		2630490	0					
ANR	2639395	Identifier	getreg		2630490	0					
ANR	2639396	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2639397	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2639398	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2639399	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639400	Identifier	ao		2630490	0					
ANR	2639401	Identifier	a		2630490	1					
ANR	2639402	PrimaryExpression	0		2630490	1					
ANR	2639403	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	2826:3:59774:59802	2630490	1	True				
ANR	2639404	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2639405	IdentifierDeclType	ut8		2630490	0					
ANR	2639406	Identifier	reg2		2630490	1					
ANR	2639407	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2639408	Identifier	reg2		2630490	0					
ANR	2639409	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2639410	Callee	getreg		2630490	0					
ANR	2639411	Identifier	getreg		2630490	0					
ANR	2639412	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2639413	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2639414	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2639415	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639416	Identifier	ao		2630490	0					
ANR	2639417	Identifier	a		2630490	1					
ANR	2639418	PrimaryExpression	1		2630490	1					
ANR	2639419	IdentifierDeclStatement	ut8 reg3 = getregmemstartend ( ao -> a [ 2 ] ) ;	2827:3:59807:59846	2630490	2	True				
ANR	2639420	IdentifierDecl	reg3 = getregmemstartend ( ao -> a [ 2 ] )		2630490	0					
ANR	2639421	IdentifierDeclType	ut8		2630490	0					
ANR	2639422	Identifier	reg3		2630490	1					
ANR	2639423	AssignmentExpression	reg3 = getregmemstartend ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2639424	Identifier	reg3		2630490	0					
ANR	2639425	CallExpression	getregmemstartend ( ao -> a [ 2 ] )		2630490	1					
ANR	2639426	Callee	getregmemstartend		2630490	0					
ANR	2639427	Identifier	getregmemstartend		2630490	0					
ANR	2639428	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2639429	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2639430	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2639431	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639432	Identifier	ao		2630490	0					
ANR	2639433	Identifier	a		2630490	1					
ANR	2639434	PrimaryExpression	2		2630490	1					
ANR	2639435	IfStatement	if ( ! ( ldrsel & D_BIT ) )		2630490	3					
ANR	2639436	Condition	! ( ldrsel & D_BIT )	2828:7:59855:59871	2630490	0	True				
ANR	2639437	UnaryOperationExpression	! ( ldrsel & D_BIT )		2630490	0					
ANR	2639438	UnaryOperator	!		2630490	0					
ANR	2639439	BitAndExpression	ldrsel & D_BIT		2630490	1		&			
ANR	2639440	Identifier	ldrsel		2630490	0					
ANR	2639441	Identifier	D_BIT		2630490	1					
ANR	2639442	CompoundStatement		1536:26:34015:34015	2630490	1					
ANR	2639443	ReturnStatement	return - 1 ;	2829:4:59880:59889	2630490	0	True				
ANR	2639444	UnaryOperationExpression	- 1		2630490	0					
ANR	2639445	UnaryOperator	-		2630490	0					
ANR	2639446	PrimaryExpression	1		2630490	1					
ANR	2639447	ExpressionStatement	ao -> o = 0xd0e87f00	2831:3:59899:59917	2630490	4	True				
ANR	2639448	AssignmentExpression	ao -> o = 0xd0e87f00		2630490	0		=			
ANR	2639449	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639450	Identifier	ao		2630490	0					
ANR	2639451	Identifier	o		2630490	1					
ANR	2639452	PrimaryExpression	0xd0e87f00		2630490	1					
ANR	2639453	ExpressionStatement	ao -> o |= reg1 << 4	2832:3:59922:59940	2630490	5	True				
ANR	2639454	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2639455	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639456	Identifier	ao		2630490	0					
ANR	2639457	Identifier	o		2630490	1					
ANR	2639458	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2639459	Identifier	reg1		2630490	0					
ANR	2639460	PrimaryExpression	4		2630490	1					
ANR	2639461	ExpressionStatement	ao -> o |= reg2	2833:3:59945:59958	2630490	6	True				
ANR	2639462	AssignmentExpression	ao -> o |= reg2		2630490	0		|=			
ANR	2639463	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639464	Identifier	ao		2630490	0					
ANR	2639465	Identifier	o		2630490	1					
ANR	2639466	Identifier	reg2		2630490	1					
ANR	2639467	ExpressionStatement	ao -> o |= reg3 << 24	2834:3:59963:59982	2630490	7	True				
ANR	2639468	AssignmentExpression	ao -> o |= reg3 << 24		2630490	0		|=			
ANR	2639469	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639470	Identifier	ao		2630490	0					
ANR	2639471	Identifier	o		2630490	1					
ANR	2639472	ShiftExpression	reg3 << 24		2630490	1		<<			
ANR	2639473	Identifier	reg3		2630490	0					
ANR	2639474	PrimaryExpression	24		2630490	1					
ANR	2639475	ReturnStatement	return 4 ;	2835:3:59987:59995	2630490	8	True				
ANR	2639476	PrimaryExpression	4		2630490	0					
ANR	2639477	BreakStatement	break ;	2837:3:60004:60009	2630490	7	True				
ANR	2639478	Label	default :	2838:2:60013:60020	2630490	8	True				
ANR	2639479	Identifier	default		2630490	0					
ANR	2639480	ReturnStatement	return - 1 ;	2839:3:60025:60034	2630490	9	True				
ANR	2639481	UnaryOperationExpression	- 1		2630490	0					
ANR	2639482	UnaryOperator	-		2630490	0					
ANR	2639483	PrimaryExpression	1		2630490	1					
ANR	2639484	ElseStatement	else		2630490	0					
ANR	2639485	IfStatement	"if ( ( m = opmask ( ao -> op , ""lsl"" , S_BIT ) ) )"		2630490	0					
ANR	2639486	Condition	"m = opmask ( ao -> op , ""lsl"" , S_BIT )"	2842:5:60053:60087	2630490	0	True				
ANR	2639487	AssignmentExpression	"m = opmask ( ao -> op , ""lsl"" , S_BIT )"		2630490	0		=			
ANR	2639488	Identifier	m		2630490	0					
ANR	2639489	CallExpression	"opmask ( ao -> op , ""lsl"" , S_BIT )"		2630490	1					
ANR	2639490	Callee	opmask		2630490	0					
ANR	2639491	Identifier	opmask		2630490	0					
ANR	2639492	ArgumentList	ao -> op		2630490	1					
ANR	2639493	Argument	ao -> op		2630490	0					
ANR	2639494	PtrMemberAccess	ao -> op		2630490	0					
ANR	2639495	Identifier	ao		2630490	0					
ANR	2639496	Identifier	op		2630490	1					
ANR	2639497	Argument	"""lsl"""		2630490	1					
ANR	2639498	PrimaryExpression	"""lsl"""		2630490	0					
ANR	2639499	Argument	S_BIT		2630490	2					
ANR	2639500	Identifier	S_BIT		2630490	0					
ANR	2639501	CompoundStatement		1551:2:34235:34269	2630490	1					
ANR	2639502	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2843:2:60094:60128	2630490	0	True				
ANR	2639503	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2639504	IdentifierDeclType	ut64		2630490	0					
ANR	2639505	Identifier	argt		2630490	1					
ANR	2639506	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2639507	Identifier	argt		2630490	0					
ANR	2639508	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2639509	Callee	thumb_selector		2630490	0					
ANR	2639510	Identifier	thumb_selector		2630490	0					
ANR	2639511	ArgumentList	ao -> a		2630490	1					
ANR	2639512	Argument	ao -> a		2630490	0					
ANR	2639513	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639514	Identifier	ao		2630490	0					
ANR	2639515	Identifier	a		2630490	1					
ANR	2639516	SwitchStatement	switch ( argt )		2630490	1					
ANR	2639517	Condition	argt	2844:10:60140:60143	2630490	0	True				
ANR	2639518	Identifier	argt		2630490	0					
ANR	2639519	CompoundStatement		1552:16:34287:34287	2630490	1					
ANR	2639520	Label	case THUMB_REG_REG_CONST :	2845:2:60150:60174	2630490	0	True				
ANR	2639521	Identifier	THUMB_REG_REG_CONST		2630490	0					
ANR	2639522	CompoundStatement		1556:3:34388:34416	2630490	1					
ANR	2639523	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2846:3:60181:60209	2630490	0	True				
ANR	2639524	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2639525	IdentifierDeclType	ut8		2630490	0					
ANR	2639526	Identifier	reg1		2630490	1					
ANR	2639527	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2639528	Identifier	reg1		2630490	0					
ANR	2639529	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2639530	Callee	getreg		2630490	0					
ANR	2639531	Identifier	getreg		2630490	0					
ANR	2639532	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2639533	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2639534	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2639535	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639536	Identifier	ao		2630490	0					
ANR	2639537	Identifier	a		2630490	1					
ANR	2639538	PrimaryExpression	0		2630490	1					
ANR	2639539	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	2847:3:60214:60242	2630490	1	True				
ANR	2639540	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2639541	IdentifierDeclType	ut8		2630490	0					
ANR	2639542	Identifier	reg2		2630490	1					
ANR	2639543	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2639544	Identifier	reg2		2630490	0					
ANR	2639545	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2639546	Callee	getreg		2630490	0					
ANR	2639547	Identifier	getreg		2630490	0					
ANR	2639548	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2639549	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2639550	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2639551	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639552	Identifier	ao		2630490	0					
ANR	2639553	Identifier	a		2630490	1					
ANR	2639554	PrimaryExpression	1		2630490	1					
ANR	2639555	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 2 ] ) ;	2848:3:60247:60275	2630490	2	True				
ANR	2639556	IdentifierDecl	num = getnum ( ao -> a [ 2 ] )		2630490	0					
ANR	2639557	IdentifierDeclType	ut32		2630490	0					
ANR	2639558	Identifier	num		2630490	1					
ANR	2639559	AssignmentExpression	num = getnum ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2639560	Identifier	num		2630490	0					
ANR	2639561	CallExpression	getnum ( ao -> a [ 2 ] )		2630490	1					
ANR	2639562	Callee	getnum		2630490	0					
ANR	2639563	Identifier	getnum		2630490	0					
ANR	2639564	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2639565	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2639566	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2639567	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639568	Identifier	ao		2630490	0					
ANR	2639569	Identifier	a		2630490	1					
ANR	2639570	PrimaryExpression	2		2630490	1					
ANR	2639571	IfStatement	if ( num > 32 )		2630490	3					
ANR	2639572	Condition	num > 32	2849:7:60284:60291	2630490	0	True				
ANR	2639573	RelationalExpression	num > 32		2630490	0		>			
ANR	2639574	Identifier	num		2630490	0					
ANR	2639575	PrimaryExpression	32		2630490	1					
ANR	2639576	CompoundStatement		1557:17:34435:34435	2630490	1					
ANR	2639577	ReturnStatement	return - 1 ;	2850:4:60300:60309	2630490	0	True				
ANR	2639578	UnaryOperationExpression	- 1		2630490	0					
ANR	2639579	UnaryOperator	-		2630490	0					
ANR	2639580	PrimaryExpression	1		2630490	1					
ANR	2639581	ExpressionStatement	ao -> o = 0x0000	2852:3:60319:60333	2630490	4	True				
ANR	2639582	AssignmentExpression	ao -> o = 0x0000		2630490	0		=			
ANR	2639583	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639584	Identifier	ao		2630490	0					
ANR	2639585	Identifier	o		2630490	1					
ANR	2639586	PrimaryExpression	0x0000		2630490	1					
ANR	2639587	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	5					
ANR	2639588	Condition	"std_16bit_2reg ( ao , m )"	2853:7:60345:60366	2630490	0	True				
ANR	2639589	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2639590	Callee	std_16bit_2reg		2630490	0					
ANR	2639591	Identifier	std_16bit_2reg		2630490	0					
ANR	2639592	ArgumentList	ao		2630490	1					
ANR	2639593	Argument	ao		2630490	0					
ANR	2639594	Identifier	ao		2630490	0					
ANR	2639595	Argument	m		2630490	1					
ANR	2639596	Identifier	m		2630490	0					
ANR	2639597	CompoundStatement		1561:31:34510:34510	2630490	1					
ANR	2639598	ExpressionStatement	ao -> o |= ( num & 0x03 ) << 14	2854:4:60375:60402	2630490	0	True				
ANR	2639599	AssignmentExpression	ao -> o |= ( num & 0x03 ) << 14		2630490	0		|=			
ANR	2639600	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639601	Identifier	ao		2630490	0					
ANR	2639602	Identifier	o		2630490	1					
ANR	2639603	ShiftExpression	( num & 0x03 ) << 14		2630490	1		<<			
ANR	2639604	BitAndExpression	num & 0x03		2630490	0		&			
ANR	2639605	Identifier	num		2630490	0					
ANR	2639606	PrimaryExpression	0x03		2630490	1					
ANR	2639607	PrimaryExpression	14		2630490	1					
ANR	2639608	ExpressionStatement	ao -> o |= num >> 2	2855:4:60408:60425	2630490	1	True				
ANR	2639609	AssignmentExpression	ao -> o |= num >> 2		2630490	0		|=			
ANR	2639610	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639611	Identifier	ao		2630490	0					
ANR	2639612	Identifier	o		2630490	1					
ANR	2639613	ShiftExpression	num >> 2		2630490	1		>>			
ANR	2639614	Identifier	num		2630490	0					
ANR	2639615	PrimaryExpression	2		2630490	1					
ANR	2639616	ReturnStatement	return 2 ;	2856:4:60431:60439	2630490	2	True				
ANR	2639617	PrimaryExpression	2		2630490	0					
ANR	2639618	ExpressionStatement	ao -> o = 0x4fea0000	2858:3:60449:60467	2630490	6	True				
ANR	2639619	AssignmentExpression	ao -> o = 0x4fea0000		2630490	0		=			
ANR	2639620	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639621	Identifier	ao		2630490	0					
ANR	2639622	Identifier	o		2630490	1					
ANR	2639623	PrimaryExpression	0x4fea0000		2630490	1					
ANR	2639624	ExpressionStatement	ao -> o |= reg1	2859:3:60472:60485	2630490	7	True				
ANR	2639625	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2639626	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639627	Identifier	ao		2630490	0					
ANR	2639628	Identifier	o		2630490	1					
ANR	2639629	Identifier	reg1		2630490	1					
ANR	2639630	ExpressionStatement	ao -> o |= reg2 << 8	2860:3:60490:60508	2630490	8	True				
ANR	2639631	AssignmentExpression	ao -> o |= reg2 << 8		2630490	0		|=			
ANR	2639632	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639633	Identifier	ao		2630490	0					
ANR	2639634	Identifier	o		2630490	1					
ANR	2639635	ShiftExpression	reg2 << 8		2630490	1		<<			
ANR	2639636	Identifier	reg2		2630490	0					
ANR	2639637	PrimaryExpression	8		2630490	1					
ANR	2639638	ExpressionStatement	ao -> o |= ( num >> 2 ) << 4	2861:3:60513:60537	2630490	9	True				
ANR	2639639	AssignmentExpression	ao -> o |= ( num >> 2 ) << 4		2630490	0		|=			
ANR	2639640	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639641	Identifier	ao		2630490	0					
ANR	2639642	Identifier	o		2630490	1					
ANR	2639643	ShiftExpression	( num >> 2 ) << 4		2630490	1		<<			
ANR	2639644	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2639645	Identifier	num		2630490	0					
ANR	2639646	PrimaryExpression	2		2630490	1					
ANR	2639647	PrimaryExpression	4		2630490	1					
ANR	2639648	ExpressionStatement	ao -> o |= ( num & 0x3 ) << 14	2862:3:60542:60568	2630490	10	True				
ANR	2639649	AssignmentExpression	ao -> o |= ( num & 0x3 ) << 14		2630490	0		|=			
ANR	2639650	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639651	Identifier	ao		2630490	0					
ANR	2639652	Identifier	o		2630490	1					
ANR	2639653	ShiftExpression	( num & 0x3 ) << 14		2630490	1		<<			
ANR	2639654	BitAndExpression	num & 0x3		2630490	0		&			
ANR	2639655	Identifier	num		2630490	0					
ANR	2639656	PrimaryExpression	0x3		2630490	1					
ANR	2639657	PrimaryExpression	14		2630490	1					
ANR	2639658	IfStatement	if ( m & S_BIT )		2630490	11					
ANR	2639659	Condition	m & S_BIT	2863:7:60577:60585	2630490	0	True				
ANR	2639660	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2639661	Identifier	m		2630490	0					
ANR	2639662	Identifier	S_BIT		2630490	1					
ANR	2639663	CompoundStatement		1571:18:34729:34729	2630490	1					
ANR	2639664	ExpressionStatement	ao -> o |= 1 << 28	2864:4:60594:60610	2630490	0	True				
ANR	2639665	AssignmentExpression	ao -> o |= 1 << 28		2630490	0		|=			
ANR	2639666	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639667	Identifier	ao		2630490	0					
ANR	2639668	Identifier	o		2630490	1					
ANR	2639669	ShiftExpression	1 << 28		2630490	1		<<			
ANR	2639670	PrimaryExpression	1		2630490	0					
ANR	2639671	PrimaryExpression	28		2630490	1					
ANR	2639672	ReturnStatement	return 4 ;	2866:3:60620:60628	2630490	12	True				
ANR	2639673	PrimaryExpression	4		2630490	0					
ANR	2639674	BreakStatement	break ;	2868:3:60645:60650	2630490	2	True				
ANR	2639675	Label	case THUMB_REG_REG :	2869:2:60654:60672	2630490	3	True				
ANR	2639676	Identifier	THUMB_REG_REG		2630490	0					
ANR	2639677	CompoundStatement		1577:22:34815:34815	2630490	4					
ANR	2639678	ExpressionStatement	ao -> o = 0x8040	2870:3:60679:60693	2630490	0	True				
ANR	2639679	AssignmentExpression	ao -> o = 0x8040		2630490	0		=			
ANR	2639680	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639681	Identifier	ao		2630490	0					
ANR	2639682	Identifier	o		2630490	1					
ANR	2639683	PrimaryExpression	0x8040		2630490	1					
ANR	2639684	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	1					
ANR	2639685	Condition	"std_16bit_2reg ( ao , m )"	2871:7:60702:60723	2630490	0	True				
ANR	2639686	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2639687	Callee	std_16bit_2reg		2630490	0					
ANR	2639688	Identifier	std_16bit_2reg		2630490	0					
ANR	2639689	ArgumentList	ao		2630490	1					
ANR	2639690	Argument	ao		2630490	0					
ANR	2639691	Identifier	ao		2630490	0					
ANR	2639692	Argument	m		2630490	1					
ANR	2639693	Identifier	m		2630490	0					
ANR	2639694	CompoundStatement		1579:31:34867:34867	2630490	1					
ANR	2639695	ReturnStatement	return 2 ;	2872:4:60732:60740	2630490	0	True				
ANR	2639696	PrimaryExpression	2		2630490	0					
ANR	2639697	ExpressionStatement	std_opt_2 ( ao )	2874:3:60750:60764	2630490	2	True				
ANR	2639698	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2639699	Callee	std_opt_2		2630490	0					
ANR	2639700	Identifier	std_opt_2		2630490	0					
ANR	2639701	ArgumentList	ao		2630490	1					
ANR	2639702	Argument	ao		2630490	0					
ANR	2639703	Identifier	ao		2630490	0					
ANR	2639704	Label	case THUMB_REG_REG_REG :	2877:2:60810:60832	2630490	5	True				
ANR	2639705	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2639706	CompoundStatement		1585:26:34975:34975	2630490	6					
ANR	2639707	ExpressionStatement	ao -> o = 0x00fa00f0	2878:3:60839:60857	2630490	0	True				
ANR	2639708	AssignmentExpression	ao -> o = 0x00fa00f0		2630490	0		=			
ANR	2639709	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639710	Identifier	ao		2630490	0					
ANR	2639711	Identifier	o		2630490	1					
ANR	2639712	PrimaryExpression	0x00fa00f0		2630490	1					
ANR	2639713	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	2879:3:60862:60898	2630490	1	True				
ANR	2639714	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2639715	Callee	std_32bit_3reg		2630490	0					
ANR	2639716	Identifier	std_32bit_3reg		2630490	0					
ANR	2639717	ArgumentList	ao		2630490	1					
ANR	2639718	Argument	ao		2630490	0					
ANR	2639719	Identifier	ao		2630490	0					
ANR	2639720	Argument	m		2630490	1					
ANR	2639721	Identifier	m		2630490	0					
ANR	2639722	Argument	false		2630490	2					
ANR	2639723	Identifier	false		2630490	0					
ANR	2639724	BreakStatement	break ;	2881:3:60915:60920	2630490	7	True				
ANR	2639725	Label	default :	2882:2:60924:60931	2630490	8	True				
ANR	2639726	Identifier	default		2630490	0					
ANR	2639727	ReturnStatement	return - 1 ;	2883:3:60936:60945	2630490	9	True				
ANR	2639728	UnaryOperationExpression	- 1		2630490	0					
ANR	2639729	UnaryOperator	-		2630490	0					
ANR	2639730	PrimaryExpression	1		2630490	1					
ANR	2639731	ElseStatement	else		2630490	0					
ANR	2639732	IfStatement	"if ( ( m = opmask ( ao -> op , ""lsr"" , S_BIT ) ) )"		2630490	0					
ANR	2639733	Condition	"m = opmask ( ao -> op , ""lsr"" , S_BIT )"	2886:5:60966:61000	2630490	0	True				
ANR	2639734	AssignmentExpression	"m = opmask ( ao -> op , ""lsr"" , S_BIT )"		2630490	0		=			
ANR	2639735	Identifier	m		2630490	0					
ANR	2639736	CallExpression	"opmask ( ao -> op , ""lsr"" , S_BIT )"		2630490	1					
ANR	2639737	Callee	opmask		2630490	0					
ANR	2639738	Identifier	opmask		2630490	0					
ANR	2639739	ArgumentList	ao -> op		2630490	1					
ANR	2639740	Argument	ao -> op		2630490	0					
ANR	2639741	PtrMemberAccess	ao -> op		2630490	0					
ANR	2639742	Identifier	ao		2630490	0					
ANR	2639743	Identifier	op		2630490	1					
ANR	2639744	Argument	"""lsr"""		2630490	1					
ANR	2639745	PrimaryExpression	"""lsr"""		2630490	0					
ANR	2639746	Argument	S_BIT		2630490	2					
ANR	2639747	Identifier	S_BIT		2630490	0					
ANR	2639748	CompoundStatement		1595:2:35148:35182	2630490	1					
ANR	2639749	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2887:2:61007:61041	2630490	0	True				
ANR	2639750	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2639751	IdentifierDeclType	ut64		2630490	0					
ANR	2639752	Identifier	argt		2630490	1					
ANR	2639753	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2639754	Identifier	argt		2630490	0					
ANR	2639755	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2639756	Callee	thumb_selector		2630490	0					
ANR	2639757	Identifier	thumb_selector		2630490	0					
ANR	2639758	ArgumentList	ao -> a		2630490	1					
ANR	2639759	Argument	ao -> a		2630490	0					
ANR	2639760	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639761	Identifier	ao		2630490	0					
ANR	2639762	Identifier	a		2630490	1					
ANR	2639763	SwitchStatement	switch ( argt )		2630490	1					
ANR	2639764	Condition	argt	2888:10:61053:61056	2630490	0	True				
ANR	2639765	Identifier	argt		2630490	0					
ANR	2639766	CompoundStatement		1596:16:35200:35200	2630490	1					
ANR	2639767	Label	case THUMB_REG_REG_CONST :	2889:2:61063:61087	2630490	0	True				
ANR	2639768	Identifier	THUMB_REG_REG_CONST		2630490	0					
ANR	2639769	CompoundStatement		1600:3:35301:35329	2630490	1					
ANR	2639770	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	2890:3:61094:61122	2630490	0	True				
ANR	2639771	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2639772	IdentifierDeclType	ut8		2630490	0					
ANR	2639773	Identifier	reg1		2630490	1					
ANR	2639774	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2639775	Identifier	reg1		2630490	0					
ANR	2639776	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2639777	Callee	getreg		2630490	0					
ANR	2639778	Identifier	getreg		2630490	0					
ANR	2639779	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2639780	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2639781	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2639782	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639783	Identifier	ao		2630490	0					
ANR	2639784	Identifier	a		2630490	1					
ANR	2639785	PrimaryExpression	0		2630490	1					
ANR	2639786	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	2891:3:61127:61155	2630490	1	True				
ANR	2639787	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2639788	IdentifierDeclType	ut8		2630490	0					
ANR	2639789	Identifier	reg2		2630490	1					
ANR	2639790	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2639791	Identifier	reg2		2630490	0					
ANR	2639792	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2639793	Callee	getreg		2630490	0					
ANR	2639794	Identifier	getreg		2630490	0					
ANR	2639795	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2639796	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2639797	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2639798	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639799	Identifier	ao		2630490	0					
ANR	2639800	Identifier	a		2630490	1					
ANR	2639801	PrimaryExpression	1		2630490	1					
ANR	2639802	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 2 ] ) ;	2892:3:61160:61188	2630490	2	True				
ANR	2639803	IdentifierDecl	num = getnum ( ao -> a [ 2 ] )		2630490	0					
ANR	2639804	IdentifierDeclType	ut32		2630490	0					
ANR	2639805	Identifier	num		2630490	1					
ANR	2639806	AssignmentExpression	num = getnum ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2639807	Identifier	num		2630490	0					
ANR	2639808	CallExpression	getnum ( ao -> a [ 2 ] )		2630490	1					
ANR	2639809	Callee	getnum		2630490	0					
ANR	2639810	Identifier	getnum		2630490	0					
ANR	2639811	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2639812	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2639813	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2639814	PtrMemberAccess	ao -> a		2630490	0					
ANR	2639815	Identifier	ao		2630490	0					
ANR	2639816	Identifier	a		2630490	1					
ANR	2639817	PrimaryExpression	2		2630490	1					
ANR	2639818	IfStatement	if ( num > 32 )		2630490	3					
ANR	2639819	Condition	num > 32	2893:7:61197:61204	2630490	0	True				
ANR	2639820	RelationalExpression	num > 32		2630490	0		>			
ANR	2639821	Identifier	num		2630490	0					
ANR	2639822	PrimaryExpression	32		2630490	1					
ANR	2639823	CompoundStatement		1601:17:35348:35348	2630490	1					
ANR	2639824	ReturnStatement	return - 1 ;	2894:4:61213:61222	2630490	0	True				
ANR	2639825	UnaryOperationExpression	- 1		2630490	0					
ANR	2639826	UnaryOperator	-		2630490	0					
ANR	2639827	PrimaryExpression	1		2630490	1					
ANR	2639828	ExpressionStatement	ao -> o = 0x0008	2896:3:61232:61246	2630490	4	True				
ANR	2639829	AssignmentExpression	ao -> o = 0x0008		2630490	0		=			
ANR	2639830	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639831	Identifier	ao		2630490	0					
ANR	2639832	Identifier	o		2630490	1					
ANR	2639833	PrimaryExpression	0x0008		2630490	1					
ANR	2639834	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	5					
ANR	2639835	Condition	"std_16bit_2reg ( ao , m )"	2897:7:61255:61276	2630490	0	True				
ANR	2639836	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2639837	Callee	std_16bit_2reg		2630490	0					
ANR	2639838	Identifier	std_16bit_2reg		2630490	0					
ANR	2639839	ArgumentList	ao		2630490	1					
ANR	2639840	Argument	ao		2630490	0					
ANR	2639841	Identifier	ao		2630490	0					
ANR	2639842	Argument	m		2630490	1					
ANR	2639843	Identifier	m		2630490	0					
ANR	2639844	CompoundStatement		1605:31:35420:35420	2630490	1					
ANR	2639845	ExpressionStatement	ao -> o |= ( num & 0x03 ) << 14	2898:4:61285:61312	2630490	0	True				
ANR	2639846	AssignmentExpression	ao -> o |= ( num & 0x03 ) << 14		2630490	0		|=			
ANR	2639847	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639848	Identifier	ao		2630490	0					
ANR	2639849	Identifier	o		2630490	1					
ANR	2639850	ShiftExpression	( num & 0x03 ) << 14		2630490	1		<<			
ANR	2639851	BitAndExpression	num & 0x03		2630490	0		&			
ANR	2639852	Identifier	num		2630490	0					
ANR	2639853	PrimaryExpression	0x03		2630490	1					
ANR	2639854	PrimaryExpression	14		2630490	1					
ANR	2639855	ExpressionStatement	ao -> o |= num >> 2	2899:4:61318:61335	2630490	1	True				
ANR	2639856	AssignmentExpression	ao -> o |= num >> 2		2630490	0		|=			
ANR	2639857	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639858	Identifier	ao		2630490	0					
ANR	2639859	Identifier	o		2630490	1					
ANR	2639860	ShiftExpression	num >> 2		2630490	1		>>			
ANR	2639861	Identifier	num		2630490	0					
ANR	2639862	PrimaryExpression	2		2630490	1					
ANR	2639863	ReturnStatement	return 2 ;	2900:4:61341:61349	2630490	2	True				
ANR	2639864	PrimaryExpression	2		2630490	0					
ANR	2639865	ExpressionStatement	ao -> o = 0x4fea1000	2902:3:61359:61377	2630490	6	True				
ANR	2639866	AssignmentExpression	ao -> o = 0x4fea1000		2630490	0		=			
ANR	2639867	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639868	Identifier	ao		2630490	0					
ANR	2639869	Identifier	o		2630490	1					
ANR	2639870	PrimaryExpression	0x4fea1000		2630490	1					
ANR	2639871	ExpressionStatement	ao -> o |= reg1	2903:3:61382:61395	2630490	7	True				
ANR	2639872	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2639873	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639874	Identifier	ao		2630490	0					
ANR	2639875	Identifier	o		2630490	1					
ANR	2639876	Identifier	reg1		2630490	1					
ANR	2639877	ExpressionStatement	ao -> o |= reg2 << 8	2904:3:61400:61418	2630490	8	True				
ANR	2639878	AssignmentExpression	ao -> o |= reg2 << 8		2630490	0		|=			
ANR	2639879	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639880	Identifier	ao		2630490	0					
ANR	2639881	Identifier	o		2630490	1					
ANR	2639882	ShiftExpression	reg2 << 8		2630490	1		<<			
ANR	2639883	Identifier	reg2		2630490	0					
ANR	2639884	PrimaryExpression	8		2630490	1					
ANR	2639885	ExpressionStatement	ao -> o |= ( num >> 2 ) << 4	2905:3:61423:61447	2630490	9	True				
ANR	2639886	AssignmentExpression	ao -> o |= ( num >> 2 ) << 4		2630490	0		|=			
ANR	2639887	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639888	Identifier	ao		2630490	0					
ANR	2639889	Identifier	o		2630490	1					
ANR	2639890	ShiftExpression	( num >> 2 ) << 4		2630490	1		<<			
ANR	2639891	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2639892	Identifier	num		2630490	0					
ANR	2639893	PrimaryExpression	2		2630490	1					
ANR	2639894	PrimaryExpression	4		2630490	1					
ANR	2639895	ExpressionStatement	ao -> o |= ( num & 0x3 ) << 14	2906:3:61452:61478	2630490	10	True				
ANR	2639896	AssignmentExpression	ao -> o |= ( num & 0x3 ) << 14		2630490	0		|=			
ANR	2639897	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639898	Identifier	ao		2630490	0					
ANR	2639899	Identifier	o		2630490	1					
ANR	2639900	ShiftExpression	( num & 0x3 ) << 14		2630490	1		<<			
ANR	2639901	BitAndExpression	num & 0x3		2630490	0		&			
ANR	2639902	Identifier	num		2630490	0					
ANR	2639903	PrimaryExpression	0x3		2630490	1					
ANR	2639904	PrimaryExpression	14		2630490	1					
ANR	2639905	IfStatement	if ( m & S_BIT )		2630490	11					
ANR	2639906	Condition	m & S_BIT	2907:7:61487:61495	2630490	0	True				
ANR	2639907	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2639908	Identifier	m		2630490	0					
ANR	2639909	Identifier	S_BIT		2630490	1					
ANR	2639910	CompoundStatement		1615:18:35639:35639	2630490	1					
ANR	2639911	ExpressionStatement	ao -> o |= 1 << 28	2908:4:61504:61520	2630490	0	True				
ANR	2639912	AssignmentExpression	ao -> o |= 1 << 28		2630490	0		|=			
ANR	2639913	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639914	Identifier	ao		2630490	0					
ANR	2639915	Identifier	o		2630490	1					
ANR	2639916	ShiftExpression	1 << 28		2630490	1		<<			
ANR	2639917	PrimaryExpression	1		2630490	0					
ANR	2639918	PrimaryExpression	28		2630490	1					
ANR	2639919	ReturnStatement	return 4 ;	2910:3:61530:61538	2630490	12	True				
ANR	2639920	PrimaryExpression	4		2630490	0					
ANR	2639921	BreakStatement	break ;	2912:3:61555:61560	2630490	2	True				
ANR	2639922	Label	case THUMB_REG_REG :	2913:2:61564:61582	2630490	3	True				
ANR	2639923	Identifier	THUMB_REG_REG		2630490	0					
ANR	2639924	CompoundStatement		1621:22:35725:35725	2630490	4					
ANR	2639925	ExpressionStatement	ao -> o = 0xc040	2914:3:61589:61603	2630490	0	True				
ANR	2639926	AssignmentExpression	ao -> o = 0xc040		2630490	0		=			
ANR	2639927	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639928	Identifier	ao		2630490	0					
ANR	2639929	Identifier	o		2630490	1					
ANR	2639930	PrimaryExpression	0xc040		2630490	1					
ANR	2639931	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	1					
ANR	2639932	Condition	"std_16bit_2reg ( ao , m )"	2915:7:61612:61633	2630490	0	True				
ANR	2639933	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2639934	Callee	std_16bit_2reg		2630490	0					
ANR	2639935	Identifier	std_16bit_2reg		2630490	0					
ANR	2639936	ArgumentList	ao		2630490	1					
ANR	2639937	Argument	ao		2630490	0					
ANR	2639938	Identifier	ao		2630490	0					
ANR	2639939	Argument	m		2630490	1					
ANR	2639940	Identifier	m		2630490	0					
ANR	2639941	CompoundStatement		1623:31:35777:35777	2630490	1					
ANR	2639942	ReturnStatement	return 2 ;	2916:4:61642:61650	2630490	0	True				
ANR	2639943	PrimaryExpression	2		2630490	0					
ANR	2639944	ExpressionStatement	std_opt_2 ( ao )	2918:3:61660:61674	2630490	2	True				
ANR	2639945	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2639946	Callee	std_opt_2		2630490	0					
ANR	2639947	Identifier	std_opt_2		2630490	0					
ANR	2639948	ArgumentList	ao		2630490	1					
ANR	2639949	Argument	ao		2630490	0					
ANR	2639950	Identifier	ao		2630490	0					
ANR	2639951	Label	case THUMB_REG_REG_REG :	2921:2:61720:61742	2630490	5	True				
ANR	2639952	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2639953	CompoundStatement		1629:26:35885:35885	2630490	6					
ANR	2639954	ExpressionStatement	ao -> o = 0x20fa00f0	2922:3:61749:61767	2630490	0	True				
ANR	2639955	AssignmentExpression	ao -> o = 0x20fa00f0		2630490	0		=			
ANR	2639956	PtrMemberAccess	ao -> o		2630490	0					
ANR	2639957	Identifier	ao		2630490	0					
ANR	2639958	Identifier	o		2630490	1					
ANR	2639959	PrimaryExpression	0x20fa00f0		2630490	1					
ANR	2639960	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	2923:3:61772:61808	2630490	1	True				
ANR	2639961	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2639962	Callee	std_32bit_3reg		2630490	0					
ANR	2639963	Identifier	std_32bit_3reg		2630490	0					
ANR	2639964	ArgumentList	ao		2630490	1					
ANR	2639965	Argument	ao		2630490	0					
ANR	2639966	Identifier	ao		2630490	0					
ANR	2639967	Argument	m		2630490	1					
ANR	2639968	Identifier	m		2630490	0					
ANR	2639969	Argument	false		2630490	2					
ANR	2639970	Identifier	false		2630490	0					
ANR	2639971	BreakStatement	break ;	2925:3:61825:61830	2630490	7	True				
ANR	2639972	Label	default :	2926:2:61834:61841	2630490	8	True				
ANR	2639973	Identifier	default		2630490	0					
ANR	2639974	ReturnStatement	return - 1 ;	2927:3:61846:61855	2630490	9	True				
ANR	2639975	UnaryOperationExpression	- 1		2630490	0					
ANR	2639976	UnaryOperator	-		2630490	0					
ANR	2639977	PrimaryExpression	1		2630490	1					
ANR	2639978	ElseStatement	else		2630490	0					
ANR	2639979	IfStatement	"if ( ( m = opmask ( ao -> op , ""mcr"" , R_BIT | TWO_BIT ) ) )"		2630490	0					
ANR	2639980	Condition	"m = opmask ( ao -> op , ""mcr"" , R_BIT | TWO_BIT )"	2930:5:61874:61918	2630490	0	True				
ANR	2639981	AssignmentExpression	"m = opmask ( ao -> op , ""mcr"" , R_BIT | TWO_BIT )"		2630490	0		=			
ANR	2639982	Identifier	m		2630490	0					
ANR	2639983	CallExpression	"opmask ( ao -> op , ""mcr"" , R_BIT | TWO_BIT )"		2630490	1					
ANR	2639984	Callee	opmask		2630490	0					
ANR	2639985	Identifier	opmask		2630490	0					
ANR	2639986	ArgumentList	ao -> op		2630490	1					
ANR	2639987	Argument	ao -> op		2630490	0					
ANR	2639988	PtrMemberAccess	ao -> op		2630490	0					
ANR	2639989	Identifier	ao		2630490	0					
ANR	2639990	Identifier	op		2630490	1					
ANR	2639991	Argument	"""mcr"""		2630490	1					
ANR	2639992	PrimaryExpression	"""mcr"""		2630490	0					
ANR	2639993	Argument	R_BIT | TWO_BIT		2630490	2					
ANR	2639994	InclusiveOrExpression	R_BIT | TWO_BIT		2630490	0		|			
ANR	2639995	Identifier	R_BIT		2630490	0					
ANR	2639996	Identifier	TWO_BIT		2630490	1					
ANR	2639997	CompoundStatement		1639:2:36066:36100	2630490	1					
ANR	2639998	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2931:2:61925:61959	2630490	0	True				
ANR	2639999	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2640000	IdentifierDeclType	ut64		2630490	0					
ANR	2640001	Identifier	argt		2630490	1					
ANR	2640002	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2640003	Identifier	argt		2630490	0					
ANR	2640004	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2640005	Callee	thumb_selector		2630490	0					
ANR	2640006	Identifier	thumb_selector		2630490	0					
ANR	2640007	ArgumentList	ao -> a		2630490	1					
ANR	2640008	Argument	ao -> a		2630490	0					
ANR	2640009	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640010	Identifier	ao		2630490	0					
ANR	2640011	Identifier	a		2630490	1					
ANR	2640012	SwitchStatement	switch ( argt )		2630490	1					
ANR	2640013	Condition	argt	2932:10:61971:61974	2630490	0	True				
ANR	2640014	Identifier	argt		2630490	0					
ANR	2640015	CompoundStatement		1640:16:36118:36118	2630490	1					
ANR	2640016	Label	case THUMB_COPROC_CONST_REG_COREG_COREG :	2933:2:61981:62020	2630490	0	True				
ANR	2640017	Identifier	THUMB_COPROC_CONST_REG_COREG_COREG		2630490	0					
ANR	2640018	CompoundStatement		1641:43:36163:36163	2630490	1					
ANR	2640019	ExpressionStatement	"ao -> a [ 5 ] = ""0"""	2934:3:62027:62041	2630490	0	True				
ANR	2640020	AssignmentExpression	"ao -> a [ 5 ] = ""0"""		2630490	0		=			
ANR	2640021	ArrayIndexing	ao -> a [ 5 ]		2630490	0					
ANR	2640022	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640023	Identifier	ao		2630490	0					
ANR	2640024	Identifier	a		2630490	1					
ANR	2640025	PrimaryExpression	5		2630490	1					
ANR	2640026	PrimaryExpression	"""0"""		2630490	1					
ANR	2640027	Label	case THUMB_COPROC_CONST_REG_COREG_COREG_CONST :	2937:2:62087:62132	2630490	2	True				
ANR	2640028	Identifier	THUMB_COPROC_CONST_REG_COREG_COREG_CONST		2630490	0					
ANR	2640029	CompoundStatement		1651:3:36471:36500	2630490	3					
ANR	2640030	IdentifierDeclStatement	ut32 coproc = getcoproc ( ao -> a [ 0 ] ) ;	2938:3:62139:62173	2630490	0	True				
ANR	2640031	IdentifierDecl	coproc = getcoproc ( ao -> a [ 0 ] )		2630490	0					
ANR	2640032	IdentifierDeclType	ut32		2630490	0					
ANR	2640033	Identifier	coproc		2630490	1					
ANR	2640034	AssignmentExpression	coproc = getcoproc ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2640035	Identifier	coproc		2630490	0					
ANR	2640036	CallExpression	getcoproc ( ao -> a [ 0 ] )		2630490	1					
ANR	2640037	Callee	getcoproc		2630490	0					
ANR	2640038	Identifier	getcoproc		2630490	0					
ANR	2640039	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2640040	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2640041	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2640042	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640043	Identifier	ao		2630490	0					
ANR	2640044	Identifier	a		2630490	1					
ANR	2640045	PrimaryExpression	0		2630490	1					
ANR	2640046	IdentifierDeclStatement	ut32 opc1 = getnum ( ao -> a [ 1 ] ) ;	2939:3:62178:62207	2630490	1	True				
ANR	2640047	IdentifierDecl	opc1 = getnum ( ao -> a [ 1 ] )		2630490	0					
ANR	2640048	IdentifierDeclType	ut32		2630490	0					
ANR	2640049	Identifier	opc1		2630490	1					
ANR	2640050	AssignmentExpression	opc1 = getnum ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2640051	Identifier	opc1		2630490	0					
ANR	2640052	CallExpression	getnum ( ao -> a [ 1 ] )		2630490	1					
ANR	2640053	Callee	getnum		2630490	0					
ANR	2640054	Identifier	getnum		2630490	0					
ANR	2640055	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2640056	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2640057	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2640058	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640059	Identifier	ao		2630490	0					
ANR	2640060	Identifier	a		2630490	1					
ANR	2640061	PrimaryExpression	1		2630490	1					
ANR	2640062	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 2 ] ) ;	2940:3:62212:62241	2630490	2	True				
ANR	2640063	IdentifierDecl	reg1 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2640064	IdentifierDeclType	ut32		2630490	0					
ANR	2640065	Identifier	reg1		2630490	1					
ANR	2640066	AssignmentExpression	reg1 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2640067	Identifier	reg1		2630490	0					
ANR	2640068	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2640069	Callee	getreg		2630490	0					
ANR	2640070	Identifier	getreg		2630490	0					
ANR	2640071	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2640072	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2640073	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2640074	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640075	Identifier	ao		2630490	0					
ANR	2640076	Identifier	a		2630490	1					
ANR	2640077	PrimaryExpression	2		2630490	1					
ANR	2640078	IdentifierDeclStatement	ut32 coreg1 = getcoprocreg ( ao -> a [ 3 ] ) ;	2941:3:62246:62283	2630490	3	True				
ANR	2640079	IdentifierDecl	coreg1 = getcoprocreg ( ao -> a [ 3 ] )		2630490	0					
ANR	2640080	IdentifierDeclType	ut32		2630490	0					
ANR	2640081	Identifier	coreg1		2630490	1					
ANR	2640082	AssignmentExpression	coreg1 = getcoprocreg ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2640083	Identifier	coreg1		2630490	0					
ANR	2640084	CallExpression	getcoprocreg ( ao -> a [ 3 ] )		2630490	1					
ANR	2640085	Callee	getcoprocreg		2630490	0					
ANR	2640086	Identifier	getcoprocreg		2630490	0					
ANR	2640087	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2640088	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2640089	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2640090	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640091	Identifier	ao		2630490	0					
ANR	2640092	Identifier	a		2630490	1					
ANR	2640093	PrimaryExpression	3		2630490	1					
ANR	2640094	IdentifierDeclStatement	ut32 coreg2 = getcoprocreg ( ao -> a [ 4 ] ) ;	2942:3:62288:62325	2630490	4	True				
ANR	2640095	IdentifierDecl	coreg2 = getcoprocreg ( ao -> a [ 4 ] )		2630490	0					
ANR	2640096	IdentifierDeclType	ut32		2630490	0					
ANR	2640097	Identifier	coreg2		2630490	1					
ANR	2640098	AssignmentExpression	coreg2 = getcoprocreg ( ao -> a [ 4 ] )		2630490	2		=			
ANR	2640099	Identifier	coreg2		2630490	0					
ANR	2640100	CallExpression	getcoprocreg ( ao -> a [ 4 ] )		2630490	1					
ANR	2640101	Callee	getcoprocreg		2630490	0					
ANR	2640102	Identifier	getcoprocreg		2630490	0					
ANR	2640103	ArgumentList	ao -> a [ 4 ]		2630490	1					
ANR	2640104	Argument	ao -> a [ 4 ]		2630490	0					
ANR	2640105	ArrayIndexing	ao -> a [ 4 ]		2630490	0					
ANR	2640106	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640107	Identifier	ao		2630490	0					
ANR	2640108	Identifier	a		2630490	1					
ANR	2640109	PrimaryExpression	4		2630490	1					
ANR	2640110	IdentifierDeclStatement	ut32 opc2 = getnum ( ao -> a [ 5 ] ) ;	2943:3:62330:62359	2630490	5	True				
ANR	2640111	IdentifierDecl	opc2 = getnum ( ao -> a [ 5 ] )		2630490	0					
ANR	2640112	IdentifierDeclType	ut32		2630490	0					
ANR	2640113	Identifier	opc2		2630490	1					
ANR	2640114	AssignmentExpression	opc2 = getnum ( ao -> a [ 5 ] )		2630490	2		=			
ANR	2640115	Identifier	opc2		2630490	0					
ANR	2640116	CallExpression	getnum ( ao -> a [ 5 ] )		2630490	1					
ANR	2640117	Callee	getnum		2630490	0					
ANR	2640118	Identifier	getnum		2630490	0					
ANR	2640119	ArgumentList	ao -> a [ 5 ]		2630490	1					
ANR	2640120	Argument	ao -> a [ 5 ]		2630490	0					
ANR	2640121	ArrayIndexing	ao -> a [ 5 ]		2630490	0					
ANR	2640122	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640123	Identifier	ao		2630490	0					
ANR	2640124	Identifier	a		2630490	1					
ANR	2640125	PrimaryExpression	5		2630490	1					
ANR	2640126	IfStatement	if ( ( coproc > 15 ) || ( opc1 > 7 ) || ( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 ) || ( m & R_BIT ) )		2630490	6					
ANR	2640127	Condition	( coproc > 15 ) || ( opc1 > 7 ) || ( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 ) || ( m & R_BIT )	2945:7:62369:62473	2630490	0	True				
ANR	2640128	OrExpression	( coproc > 15 ) || ( opc1 > 7 ) || ( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 ) || ( m & R_BIT )		2630490	0		||			
ANR	2640129	RelationalExpression	coproc > 15		2630490	0		>			
ANR	2640130	Identifier	coproc		2630490	0					
ANR	2640131	PrimaryExpression	15		2630490	1					
ANR	2640132	OrExpression	( opc1 > 7 ) || ( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 ) || ( m & R_BIT )		2630490	1		||			
ANR	2640133	RelationalExpression	opc1 > 7		2630490	0		>			
ANR	2640134	Identifier	opc1		2630490	0					
ANR	2640135	PrimaryExpression	7		2630490	1					
ANR	2640136	OrExpression	( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 ) || ( m & R_BIT )		2630490	1		||			
ANR	2640137	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2640138	Identifier	reg1		2630490	0					
ANR	2640139	PrimaryExpression	15		2630490	1					
ANR	2640140	OrExpression	( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 ) || ( m & R_BIT )		2630490	1		||			
ANR	2640141	RelationalExpression	coreg1 > 15		2630490	0		>			
ANR	2640142	Identifier	coreg1		2630490	0					
ANR	2640143	PrimaryExpression	15		2630490	1					
ANR	2640144	OrExpression	( coreg2 > 15 ) || ( opc2 > 7 ) || ( m & R_BIT )		2630490	1		||			
ANR	2640145	RelationalExpression	coreg2 > 15		2630490	0		>			
ANR	2640146	Identifier	coreg2		2630490	0					
ANR	2640147	PrimaryExpression	15		2630490	1					
ANR	2640148	OrExpression	( opc2 > 7 ) || ( m & R_BIT )		2630490	1		||			
ANR	2640149	RelationalExpression	opc2 > 7		2630490	0		>			
ANR	2640150	Identifier	opc2		2630490	0					
ANR	2640151	PrimaryExpression	7		2630490	1					
ANR	2640152	BitAndExpression	m & R_BIT		2630490	1		&			
ANR	2640153	Identifier	m		2630490	0					
ANR	2640154	Identifier	R_BIT		2630490	1					
ANR	2640155	CompoundStatement		1653:114:36617:36617	2630490	1					
ANR	2640156	ReturnStatement	return - 1 ;	2946:4:62482:62491	2630490	0	True				
ANR	2640157	UnaryOperationExpression	- 1		2630490	0					
ANR	2640158	UnaryOperator	-		2630490	0					
ANR	2640159	PrimaryExpression	1		2630490	1					
ANR	2640160	ExpressionStatement	ao -> o = 0x00ee1000	2949:3:62502:62520	2630490	7	True				
ANR	2640161	AssignmentExpression	ao -> o = 0x00ee1000		2630490	0		=			
ANR	2640162	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640163	Identifier	ao		2630490	0					
ANR	2640164	Identifier	o		2630490	1					
ANR	2640165	PrimaryExpression	0x00ee1000		2630490	1					
ANR	2640166	IfStatement	if ( m & TWO_BIT )		2630490	8					
ANR	2640167	Condition	m & TWO_BIT	2950:7:62529:62539	2630490	0	True				
ANR	2640168	BitAndExpression	m & TWO_BIT		2630490	0		&			
ANR	2640169	Identifier	m		2630490	0					
ANR	2640170	Identifier	TWO_BIT		2630490	1					
ANR	2640171	CompoundStatement		1658:20:36683:36683	2630490	1					
ANR	2640172	ExpressionStatement	ao -> o |= 1 << 20	2951:4:62548:62564	2630490	0	True				
ANR	2640173	AssignmentExpression	ao -> o |= 1 << 20		2630490	0		|=			
ANR	2640174	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640175	Identifier	ao		2630490	0					
ANR	2640176	Identifier	o		2630490	1					
ANR	2640177	ShiftExpression	1 << 20		2630490	1		<<			
ANR	2640178	PrimaryExpression	1		2630490	0					
ANR	2640179	PrimaryExpression	20		2630490	1					
ANR	2640180	ExpressionStatement	ao -> o |= coproc	2953:3:62574:62589	2630490	9	True				
ANR	2640181	AssignmentExpression	ao -> o |= coproc		2630490	0		|=			
ANR	2640182	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640183	Identifier	ao		2630490	0					
ANR	2640184	Identifier	o		2630490	1					
ANR	2640185	Identifier	coproc		2630490	1					
ANR	2640186	ExpressionStatement	ao -> o |= opc1 << 29	2954:3:62594:62613	2630490	10	True				
ANR	2640187	AssignmentExpression	ao -> o |= opc1 << 29		2630490	0		|=			
ANR	2640188	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640189	Identifier	ao		2630490	0					
ANR	2640190	Identifier	o		2630490	1					
ANR	2640191	ShiftExpression	opc1 << 29		2630490	1		<<			
ANR	2640192	Identifier	opc1		2630490	0					
ANR	2640193	PrimaryExpression	29		2630490	1					
ANR	2640194	ExpressionStatement	ao -> o |= reg1 << 4	2955:3:62618:62636	2630490	11	True				
ANR	2640195	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2640196	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640197	Identifier	ao		2630490	0					
ANR	2640198	Identifier	o		2630490	1					
ANR	2640199	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2640200	Identifier	reg1		2630490	0					
ANR	2640201	PrimaryExpression	4		2630490	1					
ANR	2640202	ExpressionStatement	ao -> o |= coreg1 << 24	2956:3:62641:62662	2630490	12	True				
ANR	2640203	AssignmentExpression	ao -> o |= coreg1 << 24		2630490	0		|=			
ANR	2640204	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640205	Identifier	ao		2630490	0					
ANR	2640206	Identifier	o		2630490	1					
ANR	2640207	ShiftExpression	coreg1 << 24		2630490	1		<<			
ANR	2640208	Identifier	coreg1		2630490	0					
ANR	2640209	PrimaryExpression	24		2630490	1					
ANR	2640210	ExpressionStatement	ao -> o |= coreg2 << 8	2957:3:62667:62687	2630490	13	True				
ANR	2640211	AssignmentExpression	ao -> o |= coreg2 << 8		2630490	0		|=			
ANR	2640212	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640213	Identifier	ao		2630490	0					
ANR	2640214	Identifier	o		2630490	1					
ANR	2640215	ShiftExpression	coreg2 << 8		2630490	1		<<			
ANR	2640216	Identifier	coreg2		2630490	0					
ANR	2640217	PrimaryExpression	8		2630490	1					
ANR	2640218	ExpressionStatement	ao -> o |= opc2 << 13	2958:3:62692:62711	2630490	14	True				
ANR	2640219	AssignmentExpression	ao -> o |= opc2 << 13		2630490	0		|=			
ANR	2640220	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640221	Identifier	ao		2630490	0					
ANR	2640222	Identifier	o		2630490	1					
ANR	2640223	ShiftExpression	opc2 << 13		2630490	1		<<			
ANR	2640224	Identifier	opc2		2630490	0					
ANR	2640225	PrimaryExpression	13		2630490	1					
ANR	2640226	ReturnStatement	return 4 ;	2959:3:62716:62724	2630490	15	True				
ANR	2640227	PrimaryExpression	4		2630490	0					
ANR	2640228	BreakStatement	break ;	2961:3:62741:62746	2630490	4	True				
ANR	2640229	Label	case THUMB_COPROC_CONST_REG_REG_COREG :	2962:2:62750:62787	2630490	5	True				
ANR	2640230	Identifier	THUMB_COPROC_CONST_REG_REG_COREG		2630490	0					
ANR	2640231	CompoundStatement		1675:3:37075:37111	2630490	6					
ANR	2640232	IdentifierDeclStatement	ut32 coproc = getcoproc ( ao -> a [ 0 ] ) ;	2963:3:62794:62828	2630490	0	True				
ANR	2640233	IdentifierDecl	coproc = getcoproc ( ao -> a [ 0 ] )		2630490	0					
ANR	2640234	IdentifierDeclType	ut32		2630490	0					
ANR	2640235	Identifier	coproc		2630490	1					
ANR	2640236	AssignmentExpression	coproc = getcoproc ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2640237	Identifier	coproc		2630490	0					
ANR	2640238	CallExpression	getcoproc ( ao -> a [ 0 ] )		2630490	1					
ANR	2640239	Callee	getcoproc		2630490	0					
ANR	2640240	Identifier	getcoproc		2630490	0					
ANR	2640241	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2640242	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2640243	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2640244	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640245	Identifier	ao		2630490	0					
ANR	2640246	Identifier	a		2630490	1					
ANR	2640247	PrimaryExpression	0		2630490	1					
ANR	2640248	IdentifierDeclStatement	ut32 opc = getnum ( ao -> a [ 1 ] ) ;	2964:3:62833:62861	2630490	1	True				
ANR	2640249	IdentifierDecl	opc = getnum ( ao -> a [ 1 ] )		2630490	0					
ANR	2640250	IdentifierDeclType	ut32		2630490	0					
ANR	2640251	Identifier	opc		2630490	1					
ANR	2640252	AssignmentExpression	opc = getnum ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2640253	Identifier	opc		2630490	0					
ANR	2640254	CallExpression	getnum ( ao -> a [ 1 ] )		2630490	1					
ANR	2640255	Callee	getnum		2630490	0					
ANR	2640256	Identifier	getnum		2630490	0					
ANR	2640257	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2640258	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2640259	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2640260	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640261	Identifier	ao		2630490	0					
ANR	2640262	Identifier	a		2630490	1					
ANR	2640263	PrimaryExpression	1		2630490	1					
ANR	2640264	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 2 ] ) ;	2965:3:62866:62895	2630490	2	True				
ANR	2640265	IdentifierDecl	reg1 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2640266	IdentifierDeclType	ut32		2630490	0					
ANR	2640267	Identifier	reg1		2630490	1					
ANR	2640268	AssignmentExpression	reg1 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2640269	Identifier	reg1		2630490	0					
ANR	2640270	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2640271	Callee	getreg		2630490	0					
ANR	2640272	Identifier	getreg		2630490	0					
ANR	2640273	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2640274	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2640275	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2640276	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640277	Identifier	ao		2630490	0					
ANR	2640278	Identifier	a		2630490	1					
ANR	2640279	PrimaryExpression	2		2630490	1					
ANR	2640280	IdentifierDeclStatement	ut32 reg2 = getreg ( ao -> a [ 3 ] ) ;	2966:3:62900:62929	2630490	3	True				
ANR	2640281	IdentifierDecl	reg2 = getreg ( ao -> a [ 3 ] )		2630490	0					
ANR	2640282	IdentifierDeclType	ut32		2630490	0					
ANR	2640283	Identifier	reg2		2630490	1					
ANR	2640284	AssignmentExpression	reg2 = getreg ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2640285	Identifier	reg2		2630490	0					
ANR	2640286	CallExpression	getreg ( ao -> a [ 3 ] )		2630490	1					
ANR	2640287	Callee	getreg		2630490	0					
ANR	2640288	Identifier	getreg		2630490	0					
ANR	2640289	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2640290	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2640291	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2640292	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640293	Identifier	ao		2630490	0					
ANR	2640294	Identifier	a		2630490	1					
ANR	2640295	PrimaryExpression	3		2630490	1					
ANR	2640296	IdentifierDeclStatement	ut32 coreg = getcoprocreg ( ao -> a [ 4 ] ) ;	2967:3:62934:62970	2630490	4	True				
ANR	2640297	IdentifierDecl	coreg = getcoprocreg ( ao -> a [ 4 ] )		2630490	0					
ANR	2640298	IdentifierDeclType	ut32		2630490	0					
ANR	2640299	Identifier	coreg		2630490	1					
ANR	2640300	AssignmentExpression	coreg = getcoprocreg ( ao -> a [ 4 ] )		2630490	2		=			
ANR	2640301	Identifier	coreg		2630490	0					
ANR	2640302	CallExpression	getcoprocreg ( ao -> a [ 4 ] )		2630490	1					
ANR	2640303	Callee	getcoprocreg		2630490	0					
ANR	2640304	Identifier	getcoprocreg		2630490	0					
ANR	2640305	ArgumentList	ao -> a [ 4 ]		2630490	1					
ANR	2640306	Argument	ao -> a [ 4 ]		2630490	0					
ANR	2640307	ArrayIndexing	ao -> a [ 4 ]		2630490	0					
ANR	2640308	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640309	Identifier	ao		2630490	0					
ANR	2640310	Identifier	a		2630490	1					
ANR	2640311	PrimaryExpression	4		2630490	1					
ANR	2640312	IfStatement	if ( ( coproc > 15 ) || ( opc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 ) || ( ! ( m & R_BIT ) ) )		2630490	5					
ANR	2640313	Condition	( coproc > 15 ) || ( opc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 ) || ( ! ( m & R_BIT ) )	2969:7:62980:63070	2630490	0	True				
ANR	2640314	OrExpression	( coproc > 15 ) || ( opc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 ) || ( ! ( m & R_BIT ) )		2630490	0		||			
ANR	2640315	RelationalExpression	coproc > 15		2630490	0		>			
ANR	2640316	Identifier	coproc		2630490	0					
ANR	2640317	PrimaryExpression	15		2630490	1					
ANR	2640318	OrExpression	( opc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 ) || ( ! ( m & R_BIT ) )		2630490	1		||			
ANR	2640319	RelationalExpression	opc > 15		2630490	0		>			
ANR	2640320	Identifier	opc		2630490	0					
ANR	2640321	PrimaryExpression	15		2630490	1					
ANR	2640322	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 ) || ( ! ( m & R_BIT ) )		2630490	1		||			
ANR	2640323	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2640324	Identifier	reg1		2630490	0					
ANR	2640325	PrimaryExpression	15		2630490	1					
ANR	2640326	OrExpression	( reg2 > 15 ) || ( coreg > 15 ) || ( ! ( m & R_BIT ) )		2630490	1		||			
ANR	2640327	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2640328	Identifier	reg2		2630490	0					
ANR	2640329	PrimaryExpression	15		2630490	1					
ANR	2640330	OrExpression	( coreg > 15 ) || ( ! ( m & R_BIT ) )		2630490	1		||			
ANR	2640331	RelationalExpression	coreg > 15		2630490	0		>			
ANR	2640332	Identifier	coreg		2630490	0					
ANR	2640333	PrimaryExpression	15		2630490	1					
ANR	2640334	UnaryOperationExpression	! ( m & R_BIT )		2630490	1					
ANR	2640335	UnaryOperator	!		2630490	0					
ANR	2640336	BitAndExpression	m & R_BIT		2630490	1		&			
ANR	2640337	Identifier	m		2630490	0					
ANR	2640338	Identifier	R_BIT		2630490	1					
ANR	2640339	CompoundStatement		1677:100:37214:37214	2630490	1					
ANR	2640340	ReturnStatement	return - 1 ;	2970:4:63079:63088	2630490	0	True				
ANR	2640341	UnaryOperationExpression	- 1		2630490	0					
ANR	2640342	UnaryOperator	-		2630490	0					
ANR	2640343	PrimaryExpression	1		2630490	1					
ANR	2640344	ExpressionStatement	ao -> o = 0x40ec0000	2973:3:63099:63117	2630490	6	True				
ANR	2640345	AssignmentExpression	ao -> o = 0x40ec0000		2630490	0		=			
ANR	2640346	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640347	Identifier	ao		2630490	0					
ANR	2640348	Identifier	o		2630490	1					
ANR	2640349	PrimaryExpression	0x40ec0000		2630490	1					
ANR	2640350	IfStatement	if ( m & TWO_BIT )		2630490	7					
ANR	2640351	Condition	m & TWO_BIT	2974:7:63126:63136	2630490	0	True				
ANR	2640352	BitAndExpression	m & TWO_BIT		2630490	0		&			
ANR	2640353	Identifier	m		2630490	0					
ANR	2640354	Identifier	TWO_BIT		2630490	1					
ANR	2640355	CompoundStatement		1682:20:37280:37280	2630490	1					
ANR	2640356	ExpressionStatement	ao -> o |= 1 << 20	2975:4:63145:63161	2630490	0	True				
ANR	2640357	AssignmentExpression	ao -> o |= 1 << 20		2630490	0		|=			
ANR	2640358	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640359	Identifier	ao		2630490	0					
ANR	2640360	Identifier	o		2630490	1					
ANR	2640361	ShiftExpression	1 << 20		2630490	1		<<			
ANR	2640362	PrimaryExpression	1		2630490	0					
ANR	2640363	PrimaryExpression	20		2630490	1					
ANR	2640364	ExpressionStatement	ao -> o |= coproc	2977:3:63171:63186	2630490	8	True				
ANR	2640365	AssignmentExpression	ao -> o |= coproc		2630490	0		|=			
ANR	2640366	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640367	Identifier	ao		2630490	0					
ANR	2640368	Identifier	o		2630490	1					
ANR	2640369	Identifier	coproc		2630490	1					
ANR	2640370	ExpressionStatement	ao -> o |= opc << 12	2978:3:63191:63209	2630490	9	True				
ANR	2640371	AssignmentExpression	ao -> o |= opc << 12		2630490	0		|=			
ANR	2640372	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640373	Identifier	ao		2630490	0					
ANR	2640374	Identifier	o		2630490	1					
ANR	2640375	ShiftExpression	opc << 12		2630490	1		<<			
ANR	2640376	Identifier	opc		2630490	0					
ANR	2640377	PrimaryExpression	12		2630490	1					
ANR	2640378	ExpressionStatement	ao -> o |= reg1 << 4	2979:3:63214:63232	2630490	10	True				
ANR	2640379	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2640380	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640381	Identifier	ao		2630490	0					
ANR	2640382	Identifier	o		2630490	1					
ANR	2640383	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2640384	Identifier	reg1		2630490	0					
ANR	2640385	PrimaryExpression	4		2630490	1					
ANR	2640386	ExpressionStatement	ao -> o |= reg2 << 24	2980:3:63237:63256	2630490	11	True				
ANR	2640387	AssignmentExpression	ao -> o |= reg2 << 24		2630490	0		|=			
ANR	2640388	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640389	Identifier	ao		2630490	0					
ANR	2640390	Identifier	o		2630490	1					
ANR	2640391	ShiftExpression	reg2 << 24		2630490	1		<<			
ANR	2640392	Identifier	reg2		2630490	0					
ANR	2640393	PrimaryExpression	24		2630490	1					
ANR	2640394	ExpressionStatement	ao -> o |= coreg << 8	2981:3:63261:63280	2630490	12	True				
ANR	2640395	AssignmentExpression	ao -> o |= coreg << 8		2630490	0		|=			
ANR	2640396	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640397	Identifier	ao		2630490	0					
ANR	2640398	Identifier	o		2630490	1					
ANR	2640399	ShiftExpression	coreg << 8		2630490	1		<<			
ANR	2640400	Identifier	coreg		2630490	0					
ANR	2640401	PrimaryExpression	8		2630490	1					
ANR	2640402	ReturnStatement	return 4 ;	2982:3:63285:63293	2630490	13	True				
ANR	2640403	PrimaryExpression	4		2630490	0					
ANR	2640404	BreakStatement	break ;	2984:3:63310:63315	2630490	7	True				
ANR	2640405	Label	default :	2985:2:63319:63326	2630490	8	True				
ANR	2640406	Identifier	default		2630490	0					
ANR	2640407	ReturnStatement	return - 1 ;	2986:3:63331:63340	2630490	9	True				
ANR	2640408	UnaryOperationExpression	- 1		2630490	0					
ANR	2640409	UnaryOperator	-		2630490	0					
ANR	2640410	PrimaryExpression	1		2630490	1					
ANR	2640411	ElseStatement	else		2630490	0					
ANR	2640412	IfStatement	"if ( ( m = opmask ( ao -> op , ""mla"" , 0 ) ) )"		2630490	0					
ANR	2640413	Condition	"m = opmask ( ao -> op , ""mla"" , 0 )"	2989:5:63359:63389	2630490	0	True				
ANR	2640414	AssignmentExpression	"m = opmask ( ao -> op , ""mla"" , 0 )"		2630490	0		=			
ANR	2640415	Identifier	m		2630490	0					
ANR	2640416	CallExpression	"opmask ( ao -> op , ""mla"" , 0 )"		2630490	1					
ANR	2640417	Callee	opmask		2630490	0					
ANR	2640418	Identifier	opmask		2630490	0					
ANR	2640419	ArgumentList	ao -> op		2630490	1					
ANR	2640420	Argument	ao -> op		2630490	0					
ANR	2640421	PtrMemberAccess	ao -> op		2630490	0					
ANR	2640422	Identifier	ao		2630490	0					
ANR	2640423	Identifier	op		2630490	1					
ANR	2640424	Argument	"""mla"""		2630490	1					
ANR	2640425	PrimaryExpression	"""mla"""		2630490	0					
ANR	2640426	Argument	0		2630490	2					
ANR	2640427	PrimaryExpression	0		2630490	0					
ANR	2640428	CompoundStatement		1698:2:37537:37571	2630490	1					
ANR	2640429	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	2990:2:63396:63430	2630490	0	True				
ANR	2640430	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2640431	IdentifierDeclType	ut64		2630490	0					
ANR	2640432	Identifier	argt		2630490	1					
ANR	2640433	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2640434	Identifier	argt		2630490	0					
ANR	2640435	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2640436	Callee	thumb_selector		2630490	0					
ANR	2640437	Identifier	thumb_selector		2630490	0					
ANR	2640438	ArgumentList	ao -> a		2630490	1					
ANR	2640439	Argument	ao -> a		2630490	0					
ANR	2640440	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640441	Identifier	ao		2630490	0					
ANR	2640442	Identifier	a		2630490	1					
ANR	2640443	SwitchStatement	switch ( argt )		2630490	1					
ANR	2640444	Condition	argt	2991:10:63442:63445	2630490	0	True				
ANR	2640445	Identifier	argt		2630490	0					
ANR	2640446	CompoundStatement		1699:16:37589:37589	2630490	1					
ANR	2640447	Label	case THUMB_REG_REG_REG_REG :	2992:2:63452:63478	2630490	0	True				
ANR	2640448	Identifier	THUMB_REG_REG_REG_REG		2630490	0					
ANR	2640449	CompoundStatement		1701:3:37626:37655	2630490	1					
ANR	2640450	IdentifierDeclStatement	ut32 reg4 = getreg ( ao -> a [ 3 ] ) ;	2993:3:63485:63514	2630490	0	True				
ANR	2640451	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		2630490	0					
ANR	2640452	IdentifierDeclType	ut32		2630490	0					
ANR	2640453	Identifier	reg4		2630490	1					
ANR	2640454	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2640455	Identifier	reg4		2630490	0					
ANR	2640456	CallExpression	getreg ( ao -> a [ 3 ] )		2630490	1					
ANR	2640457	Callee	getreg		2630490	0					
ANR	2640458	Identifier	getreg		2630490	0					
ANR	2640459	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2640460	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2640461	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2640462	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640463	Identifier	ao		2630490	0					
ANR	2640464	Identifier	a		2630490	1					
ANR	2640465	PrimaryExpression	3		2630490	1					
ANR	2640466	IfStatement	if ( reg4 > 15 )		2630490	1					
ANR	2640467	Condition	reg4 > 15	2994:7:63523:63531	2630490	0	True				
ANR	2640468	RelationalExpression	reg4 > 15		2630490	0		>			
ANR	2640469	Identifier	reg4		2630490	0					
ANR	2640470	PrimaryExpression	15		2630490	1					
ANR	2640471	CompoundStatement		1702:18:37675:37675	2630490	1					
ANR	2640472	ReturnStatement	return - 1 ;	2995:4:63540:63549	2630490	0	True				
ANR	2640473	UnaryOperationExpression	- 1		2630490	0					
ANR	2640474	UnaryOperator	-		2630490	0					
ANR	2640475	PrimaryExpression	1		2630490	1					
ANR	2640476	ExpressionStatement	ao -> o = 0x00fb0000	2997:3:63559:63577	2630490	2	True				
ANR	2640477	AssignmentExpression	ao -> o = 0x00fb0000		2630490	0		=			
ANR	2640478	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640479	Identifier	ao		2630490	0					
ANR	2640480	Identifier	o		2630490	1					
ANR	2640481	PrimaryExpression	0x00fb0000		2630490	1					
ANR	2640482	ExpressionStatement	ao -> o |= reg4 << 4	2998:3:63582:63600	2630490	3	True				
ANR	2640483	AssignmentExpression	ao -> o |= reg4 << 4		2630490	0		|=			
ANR	2640484	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640485	Identifier	ao		2630490	0					
ANR	2640486	Identifier	o		2630490	1					
ANR	2640487	ShiftExpression	reg4 << 4		2630490	1		<<			
ANR	2640488	Identifier	reg4		2630490	0					
ANR	2640489	PrimaryExpression	4		2630490	1					
ANR	2640490	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3000:3:63606:63642	2630490	4	True				
ANR	2640491	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2640492	Callee	std_32bit_3reg		2630490	0					
ANR	2640493	Identifier	std_32bit_3reg		2630490	0					
ANR	2640494	ArgumentList	ao		2630490	1					
ANR	2640495	Argument	ao		2630490	0					
ANR	2640496	Identifier	ao		2630490	0					
ANR	2640497	Argument	m		2630490	1					
ANR	2640498	Identifier	m		2630490	0					
ANR	2640499	Argument	false		2630490	2					
ANR	2640500	Identifier	false		2630490	0					
ANR	2640501	BreakStatement	break ;	3002:3:63659:63664	2630490	2	True				
ANR	2640502	Label	default :	3003:2:63668:63675	2630490	3	True				
ANR	2640503	Identifier	default		2630490	0					
ANR	2640504	ReturnStatement	return - 1 ;	3004:3:63680:63689	2630490	4	True				
ANR	2640505	UnaryOperationExpression	- 1		2630490	0					
ANR	2640506	UnaryOperator	-		2630490	0					
ANR	2640507	PrimaryExpression	1		2630490	1					
ANR	2640508	ElseStatement	else		2630490	0					
ANR	2640509	IfStatement	"if ( ( m = opmask ( ao -> op , ""mls"" , 0 ) ) )"		2630490	0					
ANR	2640510	Condition	"m = opmask ( ao -> op , ""mls"" , 0 )"	3007:5:63708:63738	2630490	0	True				
ANR	2640511	AssignmentExpression	"m = opmask ( ao -> op , ""mls"" , 0 )"		2630490	0		=			
ANR	2640512	Identifier	m		2630490	0					
ANR	2640513	CallExpression	"opmask ( ao -> op , ""mls"" , 0 )"		2630490	1					
ANR	2640514	Callee	opmask		2630490	0					
ANR	2640515	Identifier	opmask		2630490	0					
ANR	2640516	ArgumentList	ao -> op		2630490	1					
ANR	2640517	Argument	ao -> op		2630490	0					
ANR	2640518	PtrMemberAccess	ao -> op		2630490	0					
ANR	2640519	Identifier	ao		2630490	0					
ANR	2640520	Identifier	op		2630490	1					
ANR	2640521	Argument	"""mls"""		2630490	1					
ANR	2640522	PrimaryExpression	"""mls"""		2630490	0					
ANR	2640523	Argument	0		2630490	2					
ANR	2640524	PrimaryExpression	0		2630490	0					
ANR	2640525	CompoundStatement		1716:2:37886:37920	2630490	1					
ANR	2640526	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3008:2:63745:63779	2630490	0	True				
ANR	2640527	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2640528	IdentifierDeclType	ut64		2630490	0					
ANR	2640529	Identifier	argt		2630490	1					
ANR	2640530	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2640531	Identifier	argt		2630490	0					
ANR	2640532	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2640533	Callee	thumb_selector		2630490	0					
ANR	2640534	Identifier	thumb_selector		2630490	0					
ANR	2640535	ArgumentList	ao -> a		2630490	1					
ANR	2640536	Argument	ao -> a		2630490	0					
ANR	2640537	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640538	Identifier	ao		2630490	0					
ANR	2640539	Identifier	a		2630490	1					
ANR	2640540	SwitchStatement	switch ( argt )		2630490	1					
ANR	2640541	Condition	argt	3009:10:63791:63794	2630490	0	True				
ANR	2640542	Identifier	argt		2630490	0					
ANR	2640543	CompoundStatement		1717:16:37938:37938	2630490	1					
ANR	2640544	Label	case THUMB_REG_REG_REG_REG :	3010:2:63801:63827	2630490	0	True				
ANR	2640545	Identifier	THUMB_REG_REG_REG_REG		2630490	0					
ANR	2640546	CompoundStatement		1719:3:37975:38004	2630490	1					
ANR	2640547	IdentifierDeclStatement	ut32 reg4 = getreg ( ao -> a [ 3 ] ) ;	3011:3:63834:63863	2630490	0	True				
ANR	2640548	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		2630490	0					
ANR	2640549	IdentifierDeclType	ut32		2630490	0					
ANR	2640550	Identifier	reg4		2630490	1					
ANR	2640551	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2640552	Identifier	reg4		2630490	0					
ANR	2640553	CallExpression	getreg ( ao -> a [ 3 ] )		2630490	1					
ANR	2640554	Callee	getreg		2630490	0					
ANR	2640555	Identifier	getreg		2630490	0					
ANR	2640556	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2640557	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2640558	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2640559	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640560	Identifier	ao		2630490	0					
ANR	2640561	Identifier	a		2630490	1					
ANR	2640562	PrimaryExpression	3		2630490	1					
ANR	2640563	IfStatement	if ( reg4 > 15 )		2630490	1					
ANR	2640564	Condition	reg4 > 15	3012:7:63872:63880	2630490	0	True				
ANR	2640565	RelationalExpression	reg4 > 15		2630490	0		>			
ANR	2640566	Identifier	reg4		2630490	0					
ANR	2640567	PrimaryExpression	15		2630490	1					
ANR	2640568	CompoundStatement		1720:18:38024:38024	2630490	1					
ANR	2640569	ReturnStatement	return - 1 ;	3013:4:63889:63898	2630490	0	True				
ANR	2640570	UnaryOperationExpression	- 1		2630490	0					
ANR	2640571	UnaryOperator	-		2630490	0					
ANR	2640572	PrimaryExpression	1		2630490	1					
ANR	2640573	ExpressionStatement	ao -> o = 0x00fb1000	3015:3:63908:63926	2630490	2	True				
ANR	2640574	AssignmentExpression	ao -> o = 0x00fb1000		2630490	0		=			
ANR	2640575	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640576	Identifier	ao		2630490	0					
ANR	2640577	Identifier	o		2630490	1					
ANR	2640578	PrimaryExpression	0x00fb1000		2630490	1					
ANR	2640579	ExpressionStatement	ao -> o |= reg4 << 4	3016:3:63931:63949	2630490	3	True				
ANR	2640580	AssignmentExpression	ao -> o |= reg4 << 4		2630490	0		|=			
ANR	2640581	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640582	Identifier	ao		2630490	0					
ANR	2640583	Identifier	o		2630490	1					
ANR	2640584	ShiftExpression	reg4 << 4		2630490	1		<<			
ANR	2640585	Identifier	reg4		2630490	0					
ANR	2640586	PrimaryExpression	4		2630490	1					
ANR	2640587	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3018:3:63955:63991	2630490	4	True				
ANR	2640588	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2640589	Callee	std_32bit_3reg		2630490	0					
ANR	2640590	Identifier	std_32bit_3reg		2630490	0					
ANR	2640591	ArgumentList	ao		2630490	1					
ANR	2640592	Argument	ao		2630490	0					
ANR	2640593	Identifier	ao		2630490	0					
ANR	2640594	Argument	m		2630490	1					
ANR	2640595	Identifier	m		2630490	0					
ANR	2640596	Argument	false		2630490	2					
ANR	2640597	Identifier	false		2630490	0					
ANR	2640598	BreakStatement	break ;	3020:3:64008:64013	2630490	2	True				
ANR	2640599	Label	default :	3021:2:64017:64024	2630490	3	True				
ANR	2640600	Identifier	default		2630490	0					
ANR	2640601	ReturnStatement	return - 1 ;	3022:3:64029:64038	2630490	4	True				
ANR	2640602	UnaryOperationExpression	- 1		2630490	0					
ANR	2640603	UnaryOperator	-		2630490	0					
ANR	2640604	PrimaryExpression	1		2630490	1					
ANR	2640605	ElseStatement	else		2630490	0					
ANR	2640606	IfStatement	"if ( ( m = opmask ( ao -> op , ""mov"" , S_BIT | W_BIT | T_BIT ) ) )"		2630490	0					
ANR	2640607	Condition	"m = opmask ( ao -> op , ""mov"" , S_BIT | W_BIT | T_BIT )"	3025:5:64057:64107	2630490	0	True				
ANR	2640608	AssignmentExpression	"m = opmask ( ao -> op , ""mov"" , S_BIT | W_BIT | T_BIT )"		2630490	0		=			
ANR	2640609	Identifier	m		2630490	0					
ANR	2640610	CallExpression	"opmask ( ao -> op , ""mov"" , S_BIT | W_BIT | T_BIT )"		2630490	1					
ANR	2640611	Callee	opmask		2630490	0					
ANR	2640612	Identifier	opmask		2630490	0					
ANR	2640613	ArgumentList	ao -> op		2630490	1					
ANR	2640614	Argument	ao -> op		2630490	0					
ANR	2640615	PtrMemberAccess	ao -> op		2630490	0					
ANR	2640616	Identifier	ao		2630490	0					
ANR	2640617	Identifier	op		2630490	1					
ANR	2640618	Argument	"""mov"""		2630490	1					
ANR	2640619	PrimaryExpression	"""mov"""		2630490	0					
ANR	2640620	Argument	S_BIT | W_BIT | T_BIT		2630490	2					
ANR	2640621	InclusiveOrExpression	S_BIT | W_BIT | T_BIT		2630490	0		|			
ANR	2640622	Identifier	S_BIT		2630490	0					
ANR	2640623	InclusiveOrExpression	W_BIT | T_BIT		2630490	1		|			
ANR	2640624	Identifier	W_BIT		2630490	0					
ANR	2640625	Identifier	T_BIT		2630490	1					
ANR	2640626	CompoundStatement		1734:2:38255:38289	2630490	1					
ANR	2640627	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3026:2:64114:64148	2630490	0	True				
ANR	2640628	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2640629	IdentifierDeclType	ut64		2630490	0					
ANR	2640630	Identifier	argt		2630490	1					
ANR	2640631	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2640632	Identifier	argt		2630490	0					
ANR	2640633	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2640634	Callee	thumb_selector		2630490	0					
ANR	2640635	Identifier	thumb_selector		2630490	0					
ANR	2640636	ArgumentList	ao -> a		2630490	1					
ANR	2640637	Argument	ao -> a		2630490	0					
ANR	2640638	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640639	Identifier	ao		2630490	0					
ANR	2640640	Identifier	a		2630490	1					
ANR	2640641	SwitchStatement	switch ( argt )		2630490	1					
ANR	2640642	Condition	argt	3027:10:64160:64163	2630490	0	True				
ANR	2640643	Identifier	argt		2630490	0					
ANR	2640644	CompoundStatement		1735:16:38307:38307	2630490	1					
ANR	2640645	Label	case THUMB_REG_CONST :	3028:2:64170:64190	2630490	0	True				
ANR	2640646	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2640647	CompoundStatement		1739:3:38388:38416	2630490	1					
ANR	2640648	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 0 ] ) ;	3029:3:64197:64226	2630490	0	True				
ANR	2640649	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2640650	IdentifierDeclType	ut32		2630490	0					
ANR	2640651	Identifier	reg1		2630490	1					
ANR	2640652	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2640653	Identifier	reg1		2630490	0					
ANR	2640654	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2640655	Callee	getreg		2630490	0					
ANR	2640656	Identifier	getreg		2630490	0					
ANR	2640657	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2640658	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2640659	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2640660	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640661	Identifier	ao		2630490	0					
ANR	2640662	Identifier	a		2630490	1					
ANR	2640663	PrimaryExpression	0		2630490	1					
ANR	2640664	ExpressionStatement	err = false	3030:3:64231:64242	2630490	1	True				
ANR	2640665	AssignmentExpression	err = false		2630490	0		=			
ANR	2640666	Identifier	err		2630490	0					
ANR	2640667	Identifier	false		2630490	1					
ANR	2640668	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 1 ] ) ;	3031:3:64247:64275	2630490	2	True				
ANR	2640669	IdentifierDecl	num = getnum ( ao -> a [ 1 ] )		2630490	0					
ANR	2640670	IdentifierDeclType	ut32		2630490	0					
ANR	2640671	Identifier	num		2630490	1					
ANR	2640672	AssignmentExpression	num = getnum ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2640673	Identifier	num		2630490	0					
ANR	2640674	CallExpression	getnum ( ao -> a [ 1 ] )		2630490	1					
ANR	2640675	Callee	getnum		2630490	0					
ANR	2640676	Identifier	getnum		2630490	0					
ANR	2640677	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2640678	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2640679	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2640680	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640681	Identifier	ao		2630490	0					
ANR	2640682	Identifier	a		2630490	1					
ANR	2640683	PrimaryExpression	1		2630490	1					
ANR	2640684	IfStatement	if ( reg1 > 15 )		2630490	3					
ANR	2640685	Condition	reg1 > 15	3033:7:64285:64293	2630490	0	True				
ANR	2640686	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2640687	Identifier	reg1		2630490	0					
ANR	2640688	PrimaryExpression	15		2630490	1					
ANR	2640689	CompoundStatement		1741:18:38437:38437	2630490	1					
ANR	2640690	ReturnStatement	return - 1 ;	3034:4:64302:64311	2630490	0	True				
ANR	2640691	UnaryOperationExpression	- 1		2630490	0					
ANR	2640692	UnaryOperator	-		2630490	0					
ANR	2640693	PrimaryExpression	1		2630490	1					
ANR	2640694	IfStatement	if ( ( m & W_BIT ) || ( m & T_BIT ) )		2630490	4					
ANR	2640695	Condition	( m & W_BIT ) || ( m & T_BIT )	3037:7:64329:64354	2630490	0	True				
ANR	2640696	OrExpression	( m & W_BIT ) || ( m & T_BIT )		2630490	0		||			
ANR	2640697	BitAndExpression	m & W_BIT		2630490	0		&			
ANR	2640698	Identifier	m		2630490	0					
ANR	2640699	Identifier	W_BIT		2630490	1					
ANR	2640700	BitAndExpression	m & T_BIT		2630490	1		&			
ANR	2640701	Identifier	m		2630490	0					
ANR	2640702	Identifier	T_BIT		2630490	1					
ANR	2640703	CompoundStatement		1746:4:38504:38533	2630490	1					
ANR	2640704	IdentifierDeclStatement	ut32 wnum = getnum ( ao -> a [ 1 ] ) ;	3038:4:64363:64392	2630490	0	True				
ANR	2640705	IdentifierDecl	wnum = getnum ( ao -> a [ 1 ] )		2630490	0					
ANR	2640706	IdentifierDeclType	ut32		2630490	0					
ANR	2640707	Identifier	wnum		2630490	1					
ANR	2640708	AssignmentExpression	wnum = getnum ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2640709	Identifier	wnum		2630490	0					
ANR	2640710	CallExpression	getnum ( ao -> a [ 1 ] )		2630490	1					
ANR	2640711	Callee	getnum		2630490	0					
ANR	2640712	Identifier	getnum		2630490	0					
ANR	2640713	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2640714	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2640715	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2640716	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640717	Identifier	ao		2630490	0					
ANR	2640718	Identifier	a		2630490	1					
ANR	2640719	PrimaryExpression	1		2630490	1					
ANR	2640720	IfStatement	if ( wnum > 65535 )		2630490	1					
ANR	2640721	Condition	wnum > 65535	3039:8:64402:64413	2630490	0	True				
ANR	2640722	RelationalExpression	wnum > 65535		2630490	0		>			
ANR	2640723	Identifier	wnum		2630490	0					
ANR	2640724	PrimaryExpression	65535		2630490	1					
ANR	2640725	CompoundStatement		1747:22:38557:38557	2630490	1					
ANR	2640726	ReturnStatement	return - 1 ;	3040:5:64423:64432	2630490	0	True				
ANR	2640727	UnaryOperationExpression	- 1		2630490	0					
ANR	2640728	UnaryOperator	-		2630490	0					
ANR	2640729	PrimaryExpression	1		2630490	1					
ANR	2640730	ExpressionStatement	ao -> o = 0x40f20000	3042:4:64444:64462	2630490	2	True				
ANR	2640731	AssignmentExpression	ao -> o = 0x40f20000		2630490	0		=			
ANR	2640732	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640733	Identifier	ao		2630490	0					
ANR	2640734	Identifier	o		2630490	1					
ANR	2640735	PrimaryExpression	0x40f20000		2630490	1					
ANR	2640736	IfStatement	if ( m & T_BIT )		2630490	3					
ANR	2640737	Condition	m & T_BIT	3043:8:64472:64480	2630490	0	True				
ANR	2640738	BitAndExpression	m & T_BIT		2630490	0		&			
ANR	2640739	Identifier	m		2630490	0					
ANR	2640740	Identifier	T_BIT		2630490	1					
ANR	2640741	CompoundStatement		1751:19:38624:38624	2630490	1					
ANR	2640742	ExpressionStatement	ao -> o |= 1 << 31	3044:5:64490:64506	2630490	0	True				
ANR	2640743	AssignmentExpression	ao -> o |= 1 << 31		2630490	0		|=			
ANR	2640744	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640745	Identifier	ao		2630490	0					
ANR	2640746	Identifier	o		2630490	1					
ANR	2640747	ShiftExpression	1 << 31		2630490	1		<<			
ANR	2640748	PrimaryExpression	1		2630490	0					
ANR	2640749	PrimaryExpression	31		2630490	1					
ANR	2640750	ExpressionStatement	ao -> o |= reg1	3046:4:64518:64531	2630490	4	True				
ANR	2640751	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2640752	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640753	Identifier	ao		2630490	0					
ANR	2640754	Identifier	o		2630490	1					
ANR	2640755	Identifier	reg1		2630490	1					
ANR	2640756	ExpressionStatement	ao -> o |= getthzeroimmed16 ( wnum )	3047:4:64537:64569	2630490	5	True				
ANR	2640757	AssignmentExpression	ao -> o |= getthzeroimmed16 ( wnum )		2630490	0		|=			
ANR	2640758	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640759	Identifier	ao		2630490	0					
ANR	2640760	Identifier	o		2630490	1					
ANR	2640761	CallExpression	getthzeroimmed16 ( wnum )		2630490	1					
ANR	2640762	Callee	getthzeroimmed16		2630490	0					
ANR	2640763	Identifier	getthzeroimmed16		2630490	0					
ANR	2640764	ArgumentList	wnum		2630490	1					
ANR	2640765	Argument	wnum		2630490	0					
ANR	2640766	Identifier	wnum		2630490	0					
ANR	2640767	ReturnStatement	return 4 ;	3048:4:64575:64583	2630490	6	True				
ANR	2640768	PrimaryExpression	4		2630490	0					
ANR	2640769	IfStatement	if ( err )		2630490	5					
ANR	2640770	Condition	err	3051:7:64601:64603	2630490	0	True				
ANR	2640771	Identifier	err		2630490	0					
ANR	2640772	CompoundStatement		1759:12:38747:38747	2630490	1					
ANR	2640773	ReturnStatement	return - 1 ;	3052:4:64612:64621	2630490	0	True				
ANR	2640774	UnaryOperationExpression	- 1		2630490	0					
ANR	2640775	UnaryOperator	-		2630490	0					
ANR	2640776	PrimaryExpression	1		2630490	1					
ANR	2640777	IfStatement	if ( ( num < 256 ) && ( reg1 < 8 ) && ( ! ( m & DOTW_BIT ) ) )		2630490	6					
ANR	2640778	Condition	( num < 256 ) && ( reg1 < 8 ) && ( ! ( m & DOTW_BIT ) )	3055:7:64639:64684	2630490	0	True				
ANR	2640779	AndExpression	( num < 256 ) && ( reg1 < 8 ) && ( ! ( m & DOTW_BIT ) )		2630490	0		&&			
ANR	2640780	RelationalExpression	num < 256		2630490	0		<			
ANR	2640781	Identifier	num		2630490	0					
ANR	2640782	PrimaryExpression	256		2630490	1					
ANR	2640783	AndExpression	( reg1 < 8 ) && ( ! ( m & DOTW_BIT ) )		2630490	1		&&			
ANR	2640784	RelationalExpression	reg1 < 8		2630490	0		<			
ANR	2640785	Identifier	reg1		2630490	0					
ANR	2640786	PrimaryExpression	8		2630490	1					
ANR	2640787	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	1					
ANR	2640788	UnaryOperator	!		2630490	0					
ANR	2640789	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2640790	Identifier	m		2630490	0					
ANR	2640791	Identifier	DOTW_BIT		2630490	1					
ANR	2640792	CompoundStatement		1763:55:38828:38828	2630490	1					
ANR	2640793	ExpressionStatement	ao -> o = 0x0020	3056:4:64693:64707	2630490	0	True				
ANR	2640794	AssignmentExpression	ao -> o = 0x0020		2630490	0		=			
ANR	2640795	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640796	Identifier	ao		2630490	0					
ANR	2640797	Identifier	o		2630490	1					
ANR	2640798	PrimaryExpression	0x0020		2630490	1					
ANR	2640799	ExpressionStatement	ao -> o |= reg1	3057:4:64713:64726	2630490	1	True				
ANR	2640800	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2640801	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640802	Identifier	ao		2630490	0					
ANR	2640803	Identifier	o		2630490	1					
ANR	2640804	Identifier	reg1		2630490	1					
ANR	2640805	ExpressionStatement	ao -> o |= num << 8	3058:4:64732:64749	2630490	2	True				
ANR	2640806	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2640807	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640808	Identifier	ao		2630490	0					
ANR	2640809	Identifier	o		2630490	1					
ANR	2640810	ShiftExpression	num << 8		2630490	1		<<			
ANR	2640811	Identifier	num		2630490	0					
ANR	2640812	PrimaryExpression	8		2630490	1					
ANR	2640813	ReturnStatement	return 2 ;	3059:4:64755:64763	2630490	3	True				
ANR	2640814	PrimaryExpression	2		2630490	0					
ANR	2640815	ExpressionStatement	ao -> o = 0x4ff00000	3062:3:64778:64796	2630490	7	True				
ANR	2640816	AssignmentExpression	ao -> o = 0x4ff00000		2630490	0		=			
ANR	2640817	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640818	Identifier	ao		2630490	0					
ANR	2640819	Identifier	o		2630490	1					
ANR	2640820	PrimaryExpression	0x4ff00000		2630490	1					
ANR	2640821	ExpressionStatement	ao -> o |= reg1	3063:3:64801:64814	2630490	8	True				
ANR	2640822	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2640823	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640824	Identifier	ao		2630490	0					
ANR	2640825	Identifier	o		2630490	1					
ANR	2640826	Identifier	reg1		2630490	1					
ANR	2640827	ExpressionStatement	ao -> o |= getthimmed12 ( ao -> a [ 1 ] )	3064:3:64819:64851	2630490	9	True				
ANR	2640828	AssignmentExpression	ao -> o |= getthimmed12 ( ao -> a [ 1 ] )		2630490	0		|=			
ANR	2640829	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640830	Identifier	ao		2630490	0					
ANR	2640831	Identifier	o		2630490	1					
ANR	2640832	CallExpression	getthimmed12 ( ao -> a [ 1 ] )		2630490	1					
ANR	2640833	Callee	getthimmed12		2630490	0					
ANR	2640834	Identifier	getthimmed12		2630490	0					
ANR	2640835	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2640836	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2640837	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2640838	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640839	Identifier	ao		2630490	0					
ANR	2640840	Identifier	a		2630490	1					
ANR	2640841	PrimaryExpression	1		2630490	1					
ANR	2640842	IfStatement	if ( m & S_BIT )		2630490	10					
ANR	2640843	Condition	m & S_BIT	3065:7:64860:64868	2630490	0	True				
ANR	2640844	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2640845	Identifier	m		2630490	0					
ANR	2640846	Identifier	S_BIT		2630490	1					
ANR	2640847	CompoundStatement		1773:18:39012:39012	2630490	1					
ANR	2640848	ExpressionStatement	ao -> o |= 1 << 28	3066:4:64877:64893	2630490	0	True				
ANR	2640849	AssignmentExpression	ao -> o |= 1 << 28		2630490	0		|=			
ANR	2640850	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640851	Identifier	ao		2630490	0					
ANR	2640852	Identifier	o		2630490	1					
ANR	2640853	ShiftExpression	1 << 28		2630490	1		<<			
ANR	2640854	PrimaryExpression	1		2630490	0					
ANR	2640855	PrimaryExpression	28		2630490	1					
ANR	2640856	ReturnStatement	return 4 ;	3068:3:64903:64911	2630490	11	True				
ANR	2640857	PrimaryExpression	4		2630490	0					
ANR	2640858	BreakStatement	break ;	3070:3:64928:64933	2630490	2	True				
ANR	2640859	Label	case THUMB_REG_REG :	3071:2:64937:64955	2630490	3	True				
ANR	2640860	Identifier	THUMB_REG_REG		2630490	0					
ANR	2640861	CompoundStatement		1781:3:39137:39166	2630490	4					
ANR	2640862	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 0 ] ) ;	3072:3:64962:64991	2630490	0	True				
ANR	2640863	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2640864	IdentifierDeclType	ut32		2630490	0					
ANR	2640865	Identifier	reg1		2630490	1					
ANR	2640866	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2640867	Identifier	reg1		2630490	0					
ANR	2640868	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2640869	Callee	getreg		2630490	0					
ANR	2640870	Identifier	getreg		2630490	0					
ANR	2640871	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2640872	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2640873	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2640874	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640875	Identifier	ao		2630490	0					
ANR	2640876	Identifier	a		2630490	1					
ANR	2640877	PrimaryExpression	0		2630490	1					
ANR	2640878	IdentifierDeclStatement	ut32 reg2 = getreg ( ao -> a [ 1 ] ) ;	3073:3:64996:65025	2630490	1	True				
ANR	2640879	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2640880	IdentifierDeclType	ut32		2630490	0					
ANR	2640881	Identifier	reg2		2630490	1					
ANR	2640882	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2640883	Identifier	reg2		2630490	0					
ANR	2640884	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2640885	Callee	getreg		2630490	0					
ANR	2640886	Identifier	getreg		2630490	0					
ANR	2640887	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2640888	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2640889	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2640890	PtrMemberAccess	ao -> a		2630490	0					
ANR	2640891	Identifier	ao		2630490	0					
ANR	2640892	Identifier	a		2630490	1					
ANR	2640893	PrimaryExpression	1		2630490	1					
ANR	2640894	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) )		2630490	2					
ANR	2640895	Condition	( reg1 > 15 ) || ( reg2 > 15 )	3075:7:65038:65063	2630490	0	True				
ANR	2640896	OrExpression	( reg1 > 15 ) || ( reg2 > 15 )		2630490	0		||			
ANR	2640897	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2640898	Identifier	reg1		2630490	0					
ANR	2640899	PrimaryExpression	15		2630490	1					
ANR	2640900	RelationalExpression	reg2 > 15		2630490	1		>			
ANR	2640901	Identifier	reg2		2630490	0					
ANR	2640902	PrimaryExpression	15		2630490	1					
ANR	2640903	CompoundStatement		1783:35:39207:39207	2630490	1					
ANR	2640904	ReturnStatement	return - 1 ;	3076:4:65072:65081	2630490	0	True				
ANR	2640905	UnaryOperationExpression	- 1		2630490	0					
ANR	2640906	UnaryOperator	-		2630490	0					
ANR	2640907	PrimaryExpression	1		2630490	1					
ANR	2640908	IfStatement	if ( ( ! ( m & S_BIT ) ) && ( ! ( m & DOTW_BIT ) ) )		2630490	3					
ANR	2640909	Condition	( ! ( m & S_BIT ) ) && ( ! ( m & DOTW_BIT ) )	3079:7:65096:65130	2630490	0	True				
ANR	2640910	AndExpression	( ! ( m & S_BIT ) ) && ( ! ( m & DOTW_BIT ) )		2630490	0		&&			
ANR	2640911	UnaryOperationExpression	! ( m & S_BIT )		2630490	0					
ANR	2640912	UnaryOperator	!		2630490	0					
ANR	2640913	BitAndExpression	m & S_BIT		2630490	1		&			
ANR	2640914	Identifier	m		2630490	0					
ANR	2640915	Identifier	S_BIT		2630490	1					
ANR	2640916	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	1					
ANR	2640917	UnaryOperator	!		2630490	0					
ANR	2640918	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2640919	Identifier	m		2630490	0					
ANR	2640920	Identifier	DOTW_BIT		2630490	1					
ANR	2640921	CompoundStatement		1787:44:39274:39274	2630490	1					
ANR	2640922	ExpressionStatement	ao -> o = 0x0046	3080:4:65139:65153	2630490	0	True				
ANR	2640923	AssignmentExpression	ao -> o = 0x0046		2630490	0		=			
ANR	2640924	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640925	Identifier	ao		2630490	0					
ANR	2640926	Identifier	o		2630490	1					
ANR	2640927	PrimaryExpression	0x0046		2630490	1					
ANR	2640928	ExpressionStatement	ao -> o |= ( reg1 & 0x7 ) << 8	3081:4:65159:65185	2630490	1	True				
ANR	2640929	AssignmentExpression	ao -> o |= ( reg1 & 0x7 ) << 8		2630490	0		|=			
ANR	2640930	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640931	Identifier	ao		2630490	0					
ANR	2640932	Identifier	o		2630490	1					
ANR	2640933	ShiftExpression	( reg1 & 0x7 ) << 8		2630490	1		<<			
ANR	2640934	BitAndExpression	reg1 & 0x7		2630490	0		&			
ANR	2640935	Identifier	reg1		2630490	0					
ANR	2640936	PrimaryExpression	0x7		2630490	1					
ANR	2640937	PrimaryExpression	8		2630490	1					
ANR	2640938	ExpressionStatement	ao -> o |= ( reg1 & 0x8 ) << 12	3082:4:65191:65218	2630490	2	True				
ANR	2640939	AssignmentExpression	ao -> o |= ( reg1 & 0x8 ) << 12		2630490	0		|=			
ANR	2640940	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640941	Identifier	ao		2630490	0					
ANR	2640942	Identifier	o		2630490	1					
ANR	2640943	ShiftExpression	( reg1 & 0x8 ) << 12		2630490	1		<<			
ANR	2640944	BitAndExpression	reg1 & 0x8		2630490	0		&			
ANR	2640945	Identifier	reg1		2630490	0					
ANR	2640946	PrimaryExpression	0x8		2630490	1					
ANR	2640947	PrimaryExpression	12		2630490	1					
ANR	2640948	ExpressionStatement	ao -> o |= reg2 << 11	3083:4:65224:65243	2630490	3	True				
ANR	2640949	AssignmentExpression	ao -> o |= reg2 << 11		2630490	0		|=			
ANR	2640950	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640951	Identifier	ao		2630490	0					
ANR	2640952	Identifier	o		2630490	1					
ANR	2640953	ShiftExpression	reg2 << 11		2630490	1		<<			
ANR	2640954	Identifier	reg2		2630490	0					
ANR	2640955	PrimaryExpression	11		2630490	1					
ANR	2640956	ReturnStatement	return 2 ;	3084:4:65249:65257	2630490	4	True				
ANR	2640957	PrimaryExpression	2		2630490	0					
ANR	2640958	IfStatement	if ( ( reg1 < 8 ) && ( reg2 < 8 ) && ( ! ( m & DOTW_BIT ) ) )		2630490	4					
ANR	2640959	Condition	( reg1 < 8 ) && ( reg2 < 8 ) && ( ! ( m & DOTW_BIT ) )	3087:7:65275:65319	2630490	0	True				
ANR	2640960	AndExpression	( reg1 < 8 ) && ( reg2 < 8 ) && ( ! ( m & DOTW_BIT ) )		2630490	0		&&			
ANR	2640961	RelationalExpression	reg1 < 8		2630490	0		<			
ANR	2640962	Identifier	reg1		2630490	0					
ANR	2640963	PrimaryExpression	8		2630490	1					
ANR	2640964	AndExpression	( reg2 < 8 ) && ( ! ( m & DOTW_BIT ) )		2630490	1		&&			
ANR	2640965	RelationalExpression	reg2 < 8		2630490	0		<			
ANR	2640966	Identifier	reg2		2630490	0					
ANR	2640967	PrimaryExpression	8		2630490	1					
ANR	2640968	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	1					
ANR	2640969	UnaryOperator	!		2630490	0					
ANR	2640970	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2640971	Identifier	m		2630490	0					
ANR	2640972	Identifier	DOTW_BIT		2630490	1					
ANR	2640973	CompoundStatement		1795:54:39463:39463	2630490	1					
ANR	2640974	ExpressionStatement	ao -> o = 0	3088:4:65328:65337	2630490	0	True				
ANR	2640975	AssignmentExpression	ao -> o = 0		2630490	0		=			
ANR	2640976	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640977	Identifier	ao		2630490	0					
ANR	2640978	Identifier	o		2630490	1					
ANR	2640979	PrimaryExpression	0		2630490	1					
ANR	2640980	ExpressionStatement	ao -> o |= reg1 << 8	3089:4:65343:65361	2630490	1	True				
ANR	2640981	AssignmentExpression	ao -> o |= reg1 << 8		2630490	0		|=			
ANR	2640982	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640983	Identifier	ao		2630490	0					
ANR	2640984	Identifier	o		2630490	1					
ANR	2640985	ShiftExpression	reg1 << 8		2630490	1		<<			
ANR	2640986	Identifier	reg1		2630490	0					
ANR	2640987	PrimaryExpression	8		2630490	1					
ANR	2640988	ExpressionStatement	ao -> o |= reg2 << 11	3090:4:65367:65386	2630490	2	True				
ANR	2640989	AssignmentExpression	ao -> o |= reg2 << 11		2630490	0		|=			
ANR	2640990	PtrMemberAccess	ao -> o		2630490	0					
ANR	2640991	Identifier	ao		2630490	0					
ANR	2640992	Identifier	o		2630490	1					
ANR	2640993	ShiftExpression	reg2 << 11		2630490	1		<<			
ANR	2640994	Identifier	reg2		2630490	0					
ANR	2640995	PrimaryExpression	11		2630490	1					
ANR	2640996	ReturnStatement	return 2 ;	3091:4:65392:65400	2630490	3	True				
ANR	2640997	PrimaryExpression	2		2630490	0					
ANR	2640998	ExpressionStatement	ao -> o = 0x4fea0000	3094:3:65414:65432	2630490	5	True				
ANR	2640999	AssignmentExpression	ao -> o = 0x4fea0000		2630490	0		=			
ANR	2641000	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641001	Identifier	ao		2630490	0					
ANR	2641002	Identifier	o		2630490	1					
ANR	2641003	PrimaryExpression	0x4fea0000		2630490	1					
ANR	2641004	ExpressionStatement	ao -> o |= reg1	3095:3:65437:65450	2630490	6	True				
ANR	2641005	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2641006	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641007	Identifier	ao		2630490	0					
ANR	2641008	Identifier	o		2630490	1					
ANR	2641009	Identifier	reg1		2630490	1					
ANR	2641010	ExpressionStatement	ao -> o |= reg2 << 8	3096:3:65455:65473	2630490	7	True				
ANR	2641011	AssignmentExpression	ao -> o |= reg2 << 8		2630490	0		|=			
ANR	2641012	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641013	Identifier	ao		2630490	0					
ANR	2641014	Identifier	o		2630490	1					
ANR	2641015	ShiftExpression	reg2 << 8		2630490	1		<<			
ANR	2641016	Identifier	reg2		2630490	0					
ANR	2641017	PrimaryExpression	8		2630490	1					
ANR	2641018	IfStatement	if ( m & S_BIT )		2630490	8					
ANR	2641019	Condition	m & S_BIT	3097:7:65482:65490	2630490	0	True				
ANR	2641020	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2641021	Identifier	m		2630490	0					
ANR	2641022	Identifier	S_BIT		2630490	1					
ANR	2641023	CompoundStatement		1805:18:39634:39634	2630490	1					
ANR	2641024	ExpressionStatement	ao -> o |= 1 << 28	3098:4:65499:65515	2630490	0	True				
ANR	2641025	AssignmentExpression	ao -> o |= 1 << 28		2630490	0		|=			
ANR	2641026	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641027	Identifier	ao		2630490	0					
ANR	2641028	Identifier	o		2630490	1					
ANR	2641029	ShiftExpression	1 << 28		2630490	1		<<			
ANR	2641030	PrimaryExpression	1		2630490	0					
ANR	2641031	PrimaryExpression	28		2630490	1					
ANR	2641032	ReturnStatement	return 4 ;	3100:3:65525:65533	2630490	9	True				
ANR	2641033	PrimaryExpression	4		2630490	0					
ANR	2641034	BreakStatement	break ;	3102:3:65550:65555	2630490	5	True				
ANR	2641035	Label	default :	3103:2:65559:65566	2630490	6	True				
ANR	2641036	Identifier	default		2630490	0					
ANR	2641037	ReturnStatement	return - 1 ;	3104:3:65571:65580	2630490	7	True				
ANR	2641038	UnaryOperationExpression	- 1		2630490	0					
ANR	2641039	UnaryOperator	-		2630490	0					
ANR	2641040	PrimaryExpression	1		2630490	1					
ANR	2641041	ElseStatement	else		2630490	0					
ANR	2641042	IfStatement	"if ( ( m = opmask ( ao -> op , ""mrc"" , TWO_BIT ) ) )"		2630490	0					
ANR	2641043	Condition	"m = opmask ( ao -> op , ""mrc"" , TWO_BIT )"	3107:5:65600:65636	2630490	0	True				
ANR	2641044	AssignmentExpression	"m = opmask ( ao -> op , ""mrc"" , TWO_BIT )"		2630490	0		=			
ANR	2641045	Identifier	m		2630490	0					
ANR	2641046	CallExpression	"opmask ( ao -> op , ""mrc"" , TWO_BIT )"		2630490	1					
ANR	2641047	Callee	opmask		2630490	0					
ANR	2641048	Identifier	opmask		2630490	0					
ANR	2641049	ArgumentList	ao -> op		2630490	1					
ANR	2641050	Argument	ao -> op		2630490	0					
ANR	2641051	PtrMemberAccess	ao -> op		2630490	0					
ANR	2641052	Identifier	ao		2630490	0					
ANR	2641053	Identifier	op		2630490	1					
ANR	2641054	Argument	"""mrc"""		2630490	1					
ANR	2641055	PrimaryExpression	"""mrc"""		2630490	0					
ANR	2641056	Argument	TWO_BIT		2630490	2					
ANR	2641057	Identifier	TWO_BIT		2630490	0					
ANR	2641058	CompoundStatement		1816:2:39784:39818	2630490	1					
ANR	2641059	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3108:2:65643:65677	2630490	0	True				
ANR	2641060	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2641061	IdentifierDeclType	ut64		2630490	0					
ANR	2641062	Identifier	argt		2630490	1					
ANR	2641063	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2641064	Identifier	argt		2630490	0					
ANR	2641065	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2641066	Callee	thumb_selector		2630490	0					
ANR	2641067	Identifier	thumb_selector		2630490	0					
ANR	2641068	ArgumentList	ao -> a		2630490	1					
ANR	2641069	Argument	ao -> a		2630490	0					
ANR	2641070	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641071	Identifier	ao		2630490	0					
ANR	2641072	Identifier	a		2630490	1					
ANR	2641073	SwitchStatement	switch ( argt )		2630490	1					
ANR	2641074	Condition	argt	3109:10:65689:65692	2630490	0	True				
ANR	2641075	Identifier	argt		2630490	0					
ANR	2641076	CompoundStatement		1817:16:39836:39836	2630490	1					
ANR	2641077	Label	case THUMB_COPROC_CONST_REG_COREG_COREG :	3110:2:65699:65738	2630490	0	True				
ANR	2641078	Identifier	THUMB_COPROC_CONST_REG_COREG_COREG		2630490	0					
ANR	2641079	CompoundStatement		1818:43:39881:39881	2630490	1					
ANR	2641080	ExpressionStatement	"ao -> a [ 5 ] = ""0"""	3111:3:65745:65759	2630490	0	True				
ANR	2641081	AssignmentExpression	"ao -> a [ 5 ] = ""0"""		2630490	0		=			
ANR	2641082	ArrayIndexing	ao -> a [ 5 ]		2630490	0					
ANR	2641083	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641084	Identifier	ao		2630490	0					
ANR	2641085	Identifier	a		2630490	1					
ANR	2641086	PrimaryExpression	5		2630490	1					
ANR	2641087	PrimaryExpression	"""0"""		2630490	1					
ANR	2641088	Label	case THUMB_COPROC_CONST_REG_COREG_COREG_CONST :	3114:2:65805:65850	2630490	2	True				
ANR	2641089	Identifier	THUMB_COPROC_CONST_REG_COREG_COREG_CONST		2630490	0					
ANR	2641090	CompoundStatement		1828:3:40189:40218	2630490	3					
ANR	2641091	IdentifierDeclStatement	ut32 coproc = getcoproc ( ao -> a [ 0 ] ) ;	3115:3:65857:65891	2630490	0	True				
ANR	2641092	IdentifierDecl	coproc = getcoproc ( ao -> a [ 0 ] )		2630490	0					
ANR	2641093	IdentifierDeclType	ut32		2630490	0					
ANR	2641094	Identifier	coproc		2630490	1					
ANR	2641095	AssignmentExpression	coproc = getcoproc ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2641096	Identifier	coproc		2630490	0					
ANR	2641097	CallExpression	getcoproc ( ao -> a [ 0 ] )		2630490	1					
ANR	2641098	Callee	getcoproc		2630490	0					
ANR	2641099	Identifier	getcoproc		2630490	0					
ANR	2641100	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2641101	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2641102	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2641103	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641104	Identifier	ao		2630490	0					
ANR	2641105	Identifier	a		2630490	1					
ANR	2641106	PrimaryExpression	0		2630490	1					
ANR	2641107	IdentifierDeclStatement	ut32 opc1 = getnum ( ao -> a [ 1 ] ) ;	3116:3:65896:65925	2630490	1	True				
ANR	2641108	IdentifierDecl	opc1 = getnum ( ao -> a [ 1 ] )		2630490	0					
ANR	2641109	IdentifierDeclType	ut32		2630490	0					
ANR	2641110	Identifier	opc1		2630490	1					
ANR	2641111	AssignmentExpression	opc1 = getnum ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2641112	Identifier	opc1		2630490	0					
ANR	2641113	CallExpression	getnum ( ao -> a [ 1 ] )		2630490	1					
ANR	2641114	Callee	getnum		2630490	0					
ANR	2641115	Identifier	getnum		2630490	0					
ANR	2641116	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2641117	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2641118	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2641119	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641120	Identifier	ao		2630490	0					
ANR	2641121	Identifier	a		2630490	1					
ANR	2641122	PrimaryExpression	1		2630490	1					
ANR	2641123	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 2 ] ) ;	3117:3:65930:65959	2630490	2	True				
ANR	2641124	IdentifierDecl	reg1 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2641125	IdentifierDeclType	ut32		2630490	0					
ANR	2641126	Identifier	reg1		2630490	1					
ANR	2641127	AssignmentExpression	reg1 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2641128	Identifier	reg1		2630490	0					
ANR	2641129	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2641130	Callee	getreg		2630490	0					
ANR	2641131	Identifier	getreg		2630490	0					
ANR	2641132	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2641133	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2641134	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2641135	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641136	Identifier	ao		2630490	0					
ANR	2641137	Identifier	a		2630490	1					
ANR	2641138	PrimaryExpression	2		2630490	1					
ANR	2641139	IdentifierDeclStatement	ut32 coreg1 = getcoprocreg ( ao -> a [ 3 ] ) ;	3118:3:65964:66001	2630490	3	True				
ANR	2641140	IdentifierDecl	coreg1 = getcoprocreg ( ao -> a [ 3 ] )		2630490	0					
ANR	2641141	IdentifierDeclType	ut32		2630490	0					
ANR	2641142	Identifier	coreg1		2630490	1					
ANR	2641143	AssignmentExpression	coreg1 = getcoprocreg ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2641144	Identifier	coreg1		2630490	0					
ANR	2641145	CallExpression	getcoprocreg ( ao -> a [ 3 ] )		2630490	1					
ANR	2641146	Callee	getcoprocreg		2630490	0					
ANR	2641147	Identifier	getcoprocreg		2630490	0					
ANR	2641148	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2641149	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2641150	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2641151	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641152	Identifier	ao		2630490	0					
ANR	2641153	Identifier	a		2630490	1					
ANR	2641154	PrimaryExpression	3		2630490	1					
ANR	2641155	IdentifierDeclStatement	ut32 coreg2 = getcoprocreg ( ao -> a [ 4 ] ) ;	3119:3:66006:66043	2630490	4	True				
ANR	2641156	IdentifierDecl	coreg2 = getcoprocreg ( ao -> a [ 4 ] )		2630490	0					
ANR	2641157	IdentifierDeclType	ut32		2630490	0					
ANR	2641158	Identifier	coreg2		2630490	1					
ANR	2641159	AssignmentExpression	coreg2 = getcoprocreg ( ao -> a [ 4 ] )		2630490	2		=			
ANR	2641160	Identifier	coreg2		2630490	0					
ANR	2641161	CallExpression	getcoprocreg ( ao -> a [ 4 ] )		2630490	1					
ANR	2641162	Callee	getcoprocreg		2630490	0					
ANR	2641163	Identifier	getcoprocreg		2630490	0					
ANR	2641164	ArgumentList	ao -> a [ 4 ]		2630490	1					
ANR	2641165	Argument	ao -> a [ 4 ]		2630490	0					
ANR	2641166	ArrayIndexing	ao -> a [ 4 ]		2630490	0					
ANR	2641167	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641168	Identifier	ao		2630490	0					
ANR	2641169	Identifier	a		2630490	1					
ANR	2641170	PrimaryExpression	4		2630490	1					
ANR	2641171	IdentifierDeclStatement	ut32 opc2 = getnum ( ao -> a [ 5 ] ) ;	3120:3:66048:66077	2630490	5	True				
ANR	2641172	IdentifierDecl	opc2 = getnum ( ao -> a [ 5 ] )		2630490	0					
ANR	2641173	IdentifierDeclType	ut32		2630490	0					
ANR	2641174	Identifier	opc2		2630490	1					
ANR	2641175	AssignmentExpression	opc2 = getnum ( ao -> a [ 5 ] )		2630490	2		=			
ANR	2641176	Identifier	opc2		2630490	0					
ANR	2641177	CallExpression	getnum ( ao -> a [ 5 ] )		2630490	1					
ANR	2641178	Callee	getnum		2630490	0					
ANR	2641179	Identifier	getnum		2630490	0					
ANR	2641180	ArgumentList	ao -> a [ 5 ]		2630490	1					
ANR	2641181	Argument	ao -> a [ 5 ]		2630490	0					
ANR	2641182	ArrayIndexing	ao -> a [ 5 ]		2630490	0					
ANR	2641183	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641184	Identifier	ao		2630490	0					
ANR	2641185	Identifier	a		2630490	1					
ANR	2641186	PrimaryExpression	5		2630490	1					
ANR	2641187	IfStatement	if ( ( coproc > 15 ) || ( opc1 > 7 ) || ( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 ) )		2630490	6					
ANR	2641188	Condition	( coproc > 15 ) || ( opc1 > 7 ) || ( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 )	3122:7:66087:66176	2630490	0	True				
ANR	2641189	OrExpression	( coproc > 15 ) || ( opc1 > 7 ) || ( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 )		2630490	0		||			
ANR	2641190	RelationalExpression	coproc > 15		2630490	0		>			
ANR	2641191	Identifier	coproc		2630490	0					
ANR	2641192	PrimaryExpression	15		2630490	1					
ANR	2641193	OrExpression	( opc1 > 7 ) || ( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 )		2630490	1		||			
ANR	2641194	RelationalExpression	opc1 > 7		2630490	0		>			
ANR	2641195	Identifier	opc1		2630490	0					
ANR	2641196	PrimaryExpression	7		2630490	1					
ANR	2641197	OrExpression	( reg1 > 15 ) || ( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 )		2630490	1		||			
ANR	2641198	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2641199	Identifier	reg1		2630490	0					
ANR	2641200	PrimaryExpression	15		2630490	1					
ANR	2641201	OrExpression	( coreg1 > 15 ) || ( coreg2 > 15 ) || ( opc2 > 7 )		2630490	1		||			
ANR	2641202	RelationalExpression	coreg1 > 15		2630490	0		>			
ANR	2641203	Identifier	coreg1		2630490	0					
ANR	2641204	PrimaryExpression	15		2630490	1					
ANR	2641205	OrExpression	( coreg2 > 15 ) || ( opc2 > 7 )		2630490	1		||			
ANR	2641206	RelationalExpression	coreg2 > 15		2630490	0		>			
ANR	2641207	Identifier	coreg2		2630490	0					
ANR	2641208	PrimaryExpression	15		2630490	1					
ANR	2641209	RelationalExpression	opc2 > 7		2630490	1		>			
ANR	2641210	Identifier	opc2		2630490	0					
ANR	2641211	PrimaryExpression	7		2630490	1					
ANR	2641212	CompoundStatement		1830:99:40320:40320	2630490	1					
ANR	2641213	ReturnStatement	return - 1 ;	3123:4:66185:66194	2630490	0	True				
ANR	2641214	UnaryOperationExpression	- 1		2630490	0					
ANR	2641215	UnaryOperator	-		2630490	0					
ANR	2641216	PrimaryExpression	1		2630490	1					
ANR	2641217	ExpressionStatement	ao -> o = 0x10ee1000	3126:3:66205:66223	2630490	7	True				
ANR	2641218	AssignmentExpression	ao -> o = 0x10ee1000		2630490	0		=			
ANR	2641219	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641220	Identifier	ao		2630490	0					
ANR	2641221	Identifier	o		2630490	1					
ANR	2641222	PrimaryExpression	0x10ee1000		2630490	1					
ANR	2641223	IfStatement	if ( m & TWO_BIT )		2630490	8					
ANR	2641224	Condition	m & TWO_BIT	3127:7:66232:66242	2630490	0	True				
ANR	2641225	BitAndExpression	m & TWO_BIT		2630490	0		&			
ANR	2641226	Identifier	m		2630490	0					
ANR	2641227	Identifier	TWO_BIT		2630490	1					
ANR	2641228	CompoundStatement		1835:20:40386:40386	2630490	1					
ANR	2641229	ExpressionStatement	ao -> o |= 1 << 20	3128:4:66251:66267	2630490	0	True				
ANR	2641230	AssignmentExpression	ao -> o |= 1 << 20		2630490	0		|=			
ANR	2641231	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641232	Identifier	ao		2630490	0					
ANR	2641233	Identifier	o		2630490	1					
ANR	2641234	ShiftExpression	1 << 20		2630490	1		<<			
ANR	2641235	PrimaryExpression	1		2630490	0					
ANR	2641236	PrimaryExpression	20		2630490	1					
ANR	2641237	ExpressionStatement	ao -> o |= coproc	3130:3:66277:66292	2630490	9	True				
ANR	2641238	AssignmentExpression	ao -> o |= coproc		2630490	0		|=			
ANR	2641239	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641240	Identifier	ao		2630490	0					
ANR	2641241	Identifier	o		2630490	1					
ANR	2641242	Identifier	coproc		2630490	1					
ANR	2641243	ExpressionStatement	ao -> o |= opc1 << 29	3131:3:66297:66316	2630490	10	True				
ANR	2641244	AssignmentExpression	ao -> o |= opc1 << 29		2630490	0		|=			
ANR	2641245	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641246	Identifier	ao		2630490	0					
ANR	2641247	Identifier	o		2630490	1					
ANR	2641248	ShiftExpression	opc1 << 29		2630490	1		<<			
ANR	2641249	Identifier	opc1		2630490	0					
ANR	2641250	PrimaryExpression	29		2630490	1					
ANR	2641251	ExpressionStatement	ao -> o |= reg1 << 4	3132:3:66321:66339	2630490	11	True				
ANR	2641252	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2641253	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641254	Identifier	ao		2630490	0					
ANR	2641255	Identifier	o		2630490	1					
ANR	2641256	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2641257	Identifier	reg1		2630490	0					
ANR	2641258	PrimaryExpression	4		2630490	1					
ANR	2641259	ExpressionStatement	ao -> o |= coreg1 << 24	3133:3:66344:66365	2630490	12	True				
ANR	2641260	AssignmentExpression	ao -> o |= coreg1 << 24		2630490	0		|=			
ANR	2641261	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641262	Identifier	ao		2630490	0					
ANR	2641263	Identifier	o		2630490	1					
ANR	2641264	ShiftExpression	coreg1 << 24		2630490	1		<<			
ANR	2641265	Identifier	coreg1		2630490	0					
ANR	2641266	PrimaryExpression	24		2630490	1					
ANR	2641267	ExpressionStatement	ao -> o |= coreg2 << 8	3134:3:66370:66390	2630490	13	True				
ANR	2641268	AssignmentExpression	ao -> o |= coreg2 << 8		2630490	0		|=			
ANR	2641269	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641270	Identifier	ao		2630490	0					
ANR	2641271	Identifier	o		2630490	1					
ANR	2641272	ShiftExpression	coreg2 << 8		2630490	1		<<			
ANR	2641273	Identifier	coreg2		2630490	0					
ANR	2641274	PrimaryExpression	8		2630490	1					
ANR	2641275	ExpressionStatement	ao -> o |= opc2 << 13	3135:3:66395:66414	2630490	14	True				
ANR	2641276	AssignmentExpression	ao -> o |= opc2 << 13		2630490	0		|=			
ANR	2641277	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641278	Identifier	ao		2630490	0					
ANR	2641279	Identifier	o		2630490	1					
ANR	2641280	ShiftExpression	opc2 << 13		2630490	1		<<			
ANR	2641281	Identifier	opc2		2630490	0					
ANR	2641282	PrimaryExpression	13		2630490	1					
ANR	2641283	ReturnStatement	return 4 ;	3136:3:66419:66427	2630490	15	True				
ANR	2641284	PrimaryExpression	4		2630490	0					
ANR	2641285	BreakStatement	break ;	3138:3:66444:66449	2630490	4	True				
ANR	2641286	Label	default :	3139:2:66453:66460	2630490	5	True				
ANR	2641287	Identifier	default		2630490	0					
ANR	2641288	ReturnStatement	return - 1 ;	3140:3:66465:66474	2630490	6	True				
ANR	2641289	UnaryOperationExpression	- 1		2630490	0					
ANR	2641290	UnaryOperator	-		2630490	0					
ANR	2641291	PrimaryExpression	1		2630490	1					
ANR	2641292	ElseStatement	else		2630490	0					
ANR	2641293	IfStatement	"if ( ( m = opmask ( ao -> op , ""mrrc"" , TWO_BIT ) ) )"		2630490	0					
ANR	2641294	Condition	"m = opmask ( ao -> op , ""mrrc"" , TWO_BIT )"	3143:5:66493:66530	2630490	0	True				
ANR	2641295	AssignmentExpression	"m = opmask ( ao -> op , ""mrrc"" , TWO_BIT )"		2630490	0		=			
ANR	2641296	Identifier	m		2630490	0					
ANR	2641297	CallExpression	"opmask ( ao -> op , ""mrrc"" , TWO_BIT )"		2630490	1					
ANR	2641298	Callee	opmask		2630490	0					
ANR	2641299	Identifier	opmask		2630490	0					
ANR	2641300	ArgumentList	ao -> op		2630490	1					
ANR	2641301	Argument	ao -> op		2630490	0					
ANR	2641302	PtrMemberAccess	ao -> op		2630490	0					
ANR	2641303	Identifier	ao		2630490	0					
ANR	2641304	Identifier	op		2630490	1					
ANR	2641305	Argument	"""mrrc"""		2630490	1					
ANR	2641306	PrimaryExpression	"""mrrc"""		2630490	0					
ANR	2641307	Argument	TWO_BIT		2630490	2					
ANR	2641308	Identifier	TWO_BIT		2630490	0					
ANR	2641309	CompoundStatement		1852:2:40678:40712	2630490	1					
ANR	2641310	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3144:2:66537:66571	2630490	0	True				
ANR	2641311	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2641312	IdentifierDeclType	ut64		2630490	0					
ANR	2641313	Identifier	argt		2630490	1					
ANR	2641314	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2641315	Identifier	argt		2630490	0					
ANR	2641316	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2641317	Callee	thumb_selector		2630490	0					
ANR	2641318	Identifier	thumb_selector		2630490	0					
ANR	2641319	ArgumentList	ao -> a		2630490	1					
ANR	2641320	Argument	ao -> a		2630490	0					
ANR	2641321	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641322	Identifier	ao		2630490	0					
ANR	2641323	Identifier	a		2630490	1					
ANR	2641324	SwitchStatement	switch ( argt )		2630490	1					
ANR	2641325	Condition	argt	3145:10:66583:66586	2630490	0	True				
ANR	2641326	Identifier	argt		2630490	0					
ANR	2641327	CompoundStatement		1853:16:40730:40730	2630490	1					
ANR	2641328	Label	case THUMB_COPROC_CONST_REG_REG_COREG :	3146:2:66593:66630	2630490	0	True				
ANR	2641329	Identifier	THUMB_COPROC_CONST_REG_REG_COREG		2630490	0					
ANR	2641330	CompoundStatement		1859:3:40918:40954	2630490	1					
ANR	2641331	IdentifierDeclStatement	ut32 coproc = getcoproc ( ao -> a [ 0 ] ) ;	3147:3:66637:66671	2630490	0	True				
ANR	2641332	IdentifierDecl	coproc = getcoproc ( ao -> a [ 0 ] )		2630490	0					
ANR	2641333	IdentifierDeclType	ut32		2630490	0					
ANR	2641334	Identifier	coproc		2630490	1					
ANR	2641335	AssignmentExpression	coproc = getcoproc ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2641336	Identifier	coproc		2630490	0					
ANR	2641337	CallExpression	getcoproc ( ao -> a [ 0 ] )		2630490	1					
ANR	2641338	Callee	getcoproc		2630490	0					
ANR	2641339	Identifier	getcoproc		2630490	0					
ANR	2641340	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2641341	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2641342	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2641343	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641344	Identifier	ao		2630490	0					
ANR	2641345	Identifier	a		2630490	1					
ANR	2641346	PrimaryExpression	0		2630490	1					
ANR	2641347	IdentifierDeclStatement	ut32 opc = getnum ( ao -> a [ 1 ] ) ;	3148:3:66676:66704	2630490	1	True				
ANR	2641348	IdentifierDecl	opc = getnum ( ao -> a [ 1 ] )		2630490	0					
ANR	2641349	IdentifierDeclType	ut32		2630490	0					
ANR	2641350	Identifier	opc		2630490	1					
ANR	2641351	AssignmentExpression	opc = getnum ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2641352	Identifier	opc		2630490	0					
ANR	2641353	CallExpression	getnum ( ao -> a [ 1 ] )		2630490	1					
ANR	2641354	Callee	getnum		2630490	0					
ANR	2641355	Identifier	getnum		2630490	0					
ANR	2641356	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2641357	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2641358	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2641359	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641360	Identifier	ao		2630490	0					
ANR	2641361	Identifier	a		2630490	1					
ANR	2641362	PrimaryExpression	1		2630490	1					
ANR	2641363	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 2 ] ) ;	3149:3:66709:66738	2630490	2	True				
ANR	2641364	IdentifierDecl	reg1 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2641365	IdentifierDeclType	ut32		2630490	0					
ANR	2641366	Identifier	reg1		2630490	1					
ANR	2641367	AssignmentExpression	reg1 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2641368	Identifier	reg1		2630490	0					
ANR	2641369	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2641370	Callee	getreg		2630490	0					
ANR	2641371	Identifier	getreg		2630490	0					
ANR	2641372	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2641373	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2641374	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2641375	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641376	Identifier	ao		2630490	0					
ANR	2641377	Identifier	a		2630490	1					
ANR	2641378	PrimaryExpression	2		2630490	1					
ANR	2641379	IdentifierDeclStatement	ut32 reg2 = getreg ( ao -> a [ 3 ] ) ;	3150:3:66743:66772	2630490	3	True				
ANR	2641380	IdentifierDecl	reg2 = getreg ( ao -> a [ 3 ] )		2630490	0					
ANR	2641381	IdentifierDeclType	ut32		2630490	0					
ANR	2641382	Identifier	reg2		2630490	1					
ANR	2641383	AssignmentExpression	reg2 = getreg ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2641384	Identifier	reg2		2630490	0					
ANR	2641385	CallExpression	getreg ( ao -> a [ 3 ] )		2630490	1					
ANR	2641386	Callee	getreg		2630490	0					
ANR	2641387	Identifier	getreg		2630490	0					
ANR	2641388	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2641389	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2641390	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2641391	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641392	Identifier	ao		2630490	0					
ANR	2641393	Identifier	a		2630490	1					
ANR	2641394	PrimaryExpression	3		2630490	1					
ANR	2641395	IdentifierDeclStatement	ut32 coreg = getcoprocreg ( ao -> a [ 4 ] ) ;	3151:3:66777:66813	2630490	4	True				
ANR	2641396	IdentifierDecl	coreg = getcoprocreg ( ao -> a [ 4 ] )		2630490	0					
ANR	2641397	IdentifierDeclType	ut32		2630490	0					
ANR	2641398	Identifier	coreg		2630490	1					
ANR	2641399	AssignmentExpression	coreg = getcoprocreg ( ao -> a [ 4 ] )		2630490	2		=			
ANR	2641400	Identifier	coreg		2630490	0					
ANR	2641401	CallExpression	getcoprocreg ( ao -> a [ 4 ] )		2630490	1					
ANR	2641402	Callee	getcoprocreg		2630490	0					
ANR	2641403	Identifier	getcoprocreg		2630490	0					
ANR	2641404	ArgumentList	ao -> a [ 4 ]		2630490	1					
ANR	2641405	Argument	ao -> a [ 4 ]		2630490	0					
ANR	2641406	ArrayIndexing	ao -> a [ 4 ]		2630490	0					
ANR	2641407	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641408	Identifier	ao		2630490	0					
ANR	2641409	Identifier	a		2630490	1					
ANR	2641410	PrimaryExpression	4		2630490	1					
ANR	2641411	IfStatement	if ( ( coproc > 15 ) || ( opc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 ) )		2630490	5					
ANR	2641412	Condition	( coproc > 15 ) || ( opc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 )	3153:7:66823:66895	2630490	0	True				
ANR	2641413	OrExpression	( coproc > 15 ) || ( opc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 )		2630490	0		||			
ANR	2641414	RelationalExpression	coproc > 15		2630490	0		>			
ANR	2641415	Identifier	coproc		2630490	0					
ANR	2641416	PrimaryExpression	15		2630490	1					
ANR	2641417	OrExpression	( opc > 15 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 )		2630490	1		||			
ANR	2641418	RelationalExpression	opc > 15		2630490	0		>			
ANR	2641419	Identifier	opc		2630490	0					
ANR	2641420	PrimaryExpression	15		2630490	1					
ANR	2641421	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( coreg > 15 )		2630490	1		||			
ANR	2641422	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2641423	Identifier	reg1		2630490	0					
ANR	2641424	PrimaryExpression	15		2630490	1					
ANR	2641425	OrExpression	( reg2 > 15 ) || ( coreg > 15 )		2630490	1		||			
ANR	2641426	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2641427	Identifier	reg2		2630490	0					
ANR	2641428	PrimaryExpression	15		2630490	1					
ANR	2641429	RelationalExpression	coreg > 15		2630490	1		>			
ANR	2641430	Identifier	coreg		2630490	0					
ANR	2641431	PrimaryExpression	15		2630490	1					
ANR	2641432	CompoundStatement		1861:82:41039:41039	2630490	1					
ANR	2641433	ReturnStatement	return - 1 ;	3154:4:66904:66913	2630490	0	True				
ANR	2641434	UnaryOperationExpression	- 1		2630490	0					
ANR	2641435	UnaryOperator	-		2630490	0					
ANR	2641436	PrimaryExpression	1		2630490	1					
ANR	2641437	ExpressionStatement	ao -> o = 0x50ec0000	3157:3:66924:66942	2630490	6	True				
ANR	2641438	AssignmentExpression	ao -> o = 0x50ec0000		2630490	0		=			
ANR	2641439	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641440	Identifier	ao		2630490	0					
ANR	2641441	Identifier	o		2630490	1					
ANR	2641442	PrimaryExpression	0x50ec0000		2630490	1					
ANR	2641443	IfStatement	if ( m & TWO_BIT )		2630490	7					
ANR	2641444	Condition	m & TWO_BIT	3158:7:66951:66961	2630490	0	True				
ANR	2641445	BitAndExpression	m & TWO_BIT		2630490	0		&			
ANR	2641446	Identifier	m		2630490	0					
ANR	2641447	Identifier	TWO_BIT		2630490	1					
ANR	2641448	CompoundStatement		1866:20:41105:41105	2630490	1					
ANR	2641449	ExpressionStatement	ao -> o |= 1 << 20	3159:4:66970:66986	2630490	0	True				
ANR	2641450	AssignmentExpression	ao -> o |= 1 << 20		2630490	0		|=			
ANR	2641451	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641452	Identifier	ao		2630490	0					
ANR	2641453	Identifier	o		2630490	1					
ANR	2641454	ShiftExpression	1 << 20		2630490	1		<<			
ANR	2641455	PrimaryExpression	1		2630490	0					
ANR	2641456	PrimaryExpression	20		2630490	1					
ANR	2641457	ExpressionStatement	ao -> o |= coproc	3161:3:66996:67011	2630490	8	True				
ANR	2641458	AssignmentExpression	ao -> o |= coproc		2630490	0		|=			
ANR	2641459	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641460	Identifier	ao		2630490	0					
ANR	2641461	Identifier	o		2630490	1					
ANR	2641462	Identifier	coproc		2630490	1					
ANR	2641463	ExpressionStatement	ao -> o |= opc << 12	3162:3:67016:67034	2630490	9	True				
ANR	2641464	AssignmentExpression	ao -> o |= opc << 12		2630490	0		|=			
ANR	2641465	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641466	Identifier	ao		2630490	0					
ANR	2641467	Identifier	o		2630490	1					
ANR	2641468	ShiftExpression	opc << 12		2630490	1		<<			
ANR	2641469	Identifier	opc		2630490	0					
ANR	2641470	PrimaryExpression	12		2630490	1					
ANR	2641471	ExpressionStatement	ao -> o |= reg1 << 4	3163:3:67039:67057	2630490	10	True				
ANR	2641472	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2641473	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641474	Identifier	ao		2630490	0					
ANR	2641475	Identifier	o		2630490	1					
ANR	2641476	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2641477	Identifier	reg1		2630490	0					
ANR	2641478	PrimaryExpression	4		2630490	1					
ANR	2641479	ExpressionStatement	ao -> o |= reg2 << 24	3164:3:67062:67081	2630490	11	True				
ANR	2641480	AssignmentExpression	ao -> o |= reg2 << 24		2630490	0		|=			
ANR	2641481	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641482	Identifier	ao		2630490	0					
ANR	2641483	Identifier	o		2630490	1					
ANR	2641484	ShiftExpression	reg2 << 24		2630490	1		<<			
ANR	2641485	Identifier	reg2		2630490	0					
ANR	2641486	PrimaryExpression	24		2630490	1					
ANR	2641487	ExpressionStatement	ao -> o |= coreg << 8	3165:3:67086:67105	2630490	12	True				
ANR	2641488	AssignmentExpression	ao -> o |= coreg << 8		2630490	0		|=			
ANR	2641489	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641490	Identifier	ao		2630490	0					
ANR	2641491	Identifier	o		2630490	1					
ANR	2641492	ShiftExpression	coreg << 8		2630490	1		<<			
ANR	2641493	Identifier	coreg		2630490	0					
ANR	2641494	PrimaryExpression	8		2630490	1					
ANR	2641495	ReturnStatement	return 4 ;	3166:3:67110:67118	2630490	13	True				
ANR	2641496	PrimaryExpression	4		2630490	0					
ANR	2641497	BreakStatement	break ;	3168:3:67135:67140	2630490	2	True				
ANR	2641498	Label	default :	3169:2:67144:67151	2630490	3	True				
ANR	2641499	Identifier	default		2630490	0					
ANR	2641500	ReturnStatement	return - 1 ;	3170:3:67156:67165	2630490	4	True				
ANR	2641501	UnaryOperationExpression	- 1		2630490	0					
ANR	2641502	UnaryOperator	-		2630490	0					
ANR	2641503	PrimaryExpression	1		2630490	1					
ANR	2641504	ElseStatement	else		2630490	0					
ANR	2641505	IfStatement	"if ( ( m = opmask ( ao -> op , ""mrs"" , 0 ) ) )"		2630490	0					
ANR	2641506	Condition	"m = opmask ( ao -> op , ""mrs"" , 0 )"	3173:5:67184:67214	2630490	0	True				
ANR	2641507	AssignmentExpression	"m = opmask ( ao -> op , ""mrs"" , 0 )"		2630490	0		=			
ANR	2641508	Identifier	m		2630490	0					
ANR	2641509	CallExpression	"opmask ( ao -> op , ""mrs"" , 0 )"		2630490	1					
ANR	2641510	Callee	opmask		2630490	0					
ANR	2641511	Identifier	opmask		2630490	0					
ANR	2641512	ArgumentList	ao -> op		2630490	1					
ANR	2641513	Argument	ao -> op		2630490	0					
ANR	2641514	PtrMemberAccess	ao -> op		2630490	0					
ANR	2641515	Identifier	ao		2630490	0					
ANR	2641516	Identifier	op		2630490	1					
ANR	2641517	Argument	"""mrs"""		2630490	1					
ANR	2641518	PrimaryExpression	"""mrs"""		2630490	0					
ANR	2641519	Argument	0		2630490	2					
ANR	2641520	PrimaryExpression	0		2630490	0					
ANR	2641521	CompoundStatement		1882:2:41362:41396	2630490	1					
ANR	2641522	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3174:2:67221:67255	2630490	0	True				
ANR	2641523	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2641524	IdentifierDeclType	ut64		2630490	0					
ANR	2641525	Identifier	argt		2630490	1					
ANR	2641526	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2641527	Identifier	argt		2630490	0					
ANR	2641528	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2641529	Callee	thumb_selector		2630490	0					
ANR	2641530	Identifier	thumb_selector		2630490	0					
ANR	2641531	ArgumentList	ao -> a		2630490	1					
ANR	2641532	Argument	ao -> a		2630490	0					
ANR	2641533	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641534	Identifier	ao		2630490	0					
ANR	2641535	Identifier	a		2630490	1					
ANR	2641536	SwitchStatement	switch ( argt )		2630490	1					
ANR	2641537	Condition	argt	3175:10:67267:67270	2630490	0	True				
ANR	2641538	Identifier	argt		2630490	0					
ANR	2641539	CompoundStatement		1883:16:41414:41414	2630490	1					
ANR	2641540	Label	case THUMB_REG_OTHER :	3176:2:67277:67297	2630490	0	True				
ANR	2641541	Identifier	THUMB_REG_OTHER		2630490	0					
ANR	2641542	CompoundStatement		1885:3:41445:41474	2630490	1					
ANR	2641543	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 0 ] ) ;	3177:3:67304:67333	2630490	0	True				
ANR	2641544	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2641545	IdentifierDeclType	ut32		2630490	0					
ANR	2641546	Identifier	reg1		2630490	1					
ANR	2641547	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2641548	Identifier	reg1		2630490	0					
ANR	2641549	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2641550	Callee	getreg		2630490	0					
ANR	2641551	Identifier	getreg		2630490	0					
ANR	2641552	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2641553	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2641554	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2641555	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641556	Identifier	ao		2630490	0					
ANR	2641557	Identifier	a		2630490	1					
ANR	2641558	PrimaryExpression	0		2630490	1					
ANR	2641559	ExpressionStatement	"r_str_case ( ao -> a [ 1 ] , false )"	3178:3:67338:67366	2630490	1	True				
ANR	2641560	CallExpression	"r_str_case ( ao -> a [ 1 ] , false )"		2630490	0					
ANR	2641561	Callee	r_str_case		2630490	0					
ANR	2641562	Identifier	r_str_case		2630490	0					
ANR	2641563	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2641564	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2641565	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2641566	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641567	Identifier	ao		2630490	0					
ANR	2641568	Identifier	a		2630490	1					
ANR	2641569	PrimaryExpression	1		2630490	1					
ANR	2641570	Argument	false		2630490	1					
ANR	2641571	Identifier	false		2630490	0					
ANR	2641572	IfStatement	if ( reg1 > 15 )		2630490	2					
ANR	2641573	Condition	reg1 > 15	3180:7:67376:67384	2630490	0	True				
ANR	2641574	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2641575	Identifier	reg1		2630490	0					
ANR	2641576	PrimaryExpression	15		2630490	1					
ANR	2641577	CompoundStatement		1888:18:41528:41528	2630490	1					
ANR	2641578	ReturnStatement	return - 1 ;	3181:4:67393:67402	2630490	0	True				
ANR	2641579	UnaryOperationExpression	- 1		2630490	0					
ANR	2641580	UnaryOperator	-		2630490	0					
ANR	2641581	PrimaryExpression	1		2630490	1					
ANR	2641582	IfStatement	"if ( ( ! strcmp ( ao -> a [ 1 ] , ""cpsr"" ) ) || ( ! strcmp ( ao -> a [ 1 ] , ""apsr"" ) ) )"		2630490	3					
ANR	2641583	Condition	"( ! strcmp ( ao -> a [ 1 ] , ""cpsr"" ) ) || ( ! strcmp ( ao -> a [ 1 ] , ""apsr"" ) )"	3184:7:67417:67474	2630490	0	True				
ANR	2641584	OrExpression	"( ! strcmp ( ao -> a [ 1 ] , ""cpsr"" ) ) || ( ! strcmp ( ao -> a [ 1 ] , ""apsr"" ) )"		2630490	0		||			
ANR	2641585	UnaryOperationExpression	"! strcmp ( ao -> a [ 1 ] , ""cpsr"" )"		2630490	0					
ANR	2641586	UnaryOperator	!		2630490	0					
ANR	2641587	CallExpression	"strcmp ( ao -> a [ 1 ] , ""cpsr"" )"		2630490	1					
ANR	2641588	Callee	strcmp		2630490	0					
ANR	2641589	Identifier	strcmp		2630490	0					
ANR	2641590	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2641591	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2641592	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2641593	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641594	Identifier	ao		2630490	0					
ANR	2641595	Identifier	a		2630490	1					
ANR	2641596	PrimaryExpression	1		2630490	1					
ANR	2641597	Argument	"""cpsr"""		2630490	1					
ANR	2641598	PrimaryExpression	"""cpsr"""		2630490	0					
ANR	2641599	UnaryOperationExpression	"! strcmp ( ao -> a [ 1 ] , ""apsr"" )"		2630490	1					
ANR	2641600	UnaryOperator	!		2630490	0					
ANR	2641601	CallExpression	"strcmp ( ao -> a [ 1 ] , ""apsr"" )"		2630490	1					
ANR	2641602	Callee	strcmp		2630490	0					
ANR	2641603	Identifier	strcmp		2630490	0					
ANR	2641604	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2641605	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2641606	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2641607	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641608	Identifier	ao		2630490	0					
ANR	2641609	Identifier	a		2630490	1					
ANR	2641610	PrimaryExpression	1		2630490	1					
ANR	2641611	Argument	"""apsr"""		2630490	1					
ANR	2641612	PrimaryExpression	"""apsr"""		2630490	0					
ANR	2641613	CompoundStatement		1892:67:41618:41618	2630490	1					
ANR	2641614	ExpressionStatement	ao -> o = 0xeff30080	3185:4:67483:67501	2630490	0	True				
ANR	2641615	AssignmentExpression	ao -> o = 0xeff30080		2630490	0		=			
ANR	2641616	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641617	Identifier	ao		2630490	0					
ANR	2641618	Identifier	o		2630490	1					
ANR	2641619	PrimaryExpression	0xeff30080		2630490	1					
ANR	2641620	ExpressionStatement	ao -> o |= reg1	3186:4:67507:67520	2630490	1	True				
ANR	2641621	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2641622	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641623	Identifier	ao		2630490	0					
ANR	2641624	Identifier	o		2630490	1					
ANR	2641625	Identifier	reg1		2630490	1					
ANR	2641626	ReturnStatement	return 4 ;	3187:4:67526:67534	2630490	2	True				
ANR	2641627	PrimaryExpression	4		2630490	0					
ANR	2641628	IfStatement	"if ( ! strcmp ( ao -> a [ 1 ] , ""spsr"" ) )"		2630490	4					
ANR	2641629	Condition	"! strcmp ( ao -> a [ 1 ] , ""spsr"" )"	3190:7:67549:67573	2630490	0	True				
ANR	2641630	UnaryOperationExpression	"! strcmp ( ao -> a [ 1 ] , ""spsr"" )"		2630490	0					
ANR	2641631	UnaryOperator	!		2630490	0					
ANR	2641632	CallExpression	"strcmp ( ao -> a [ 1 ] , ""spsr"" )"		2630490	1					
ANR	2641633	Callee	strcmp		2630490	0					
ANR	2641634	Identifier	strcmp		2630490	0					
ANR	2641635	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2641636	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2641637	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2641638	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641639	Identifier	ao		2630490	0					
ANR	2641640	Identifier	a		2630490	1					
ANR	2641641	PrimaryExpression	1		2630490	1					
ANR	2641642	Argument	"""spsr"""		2630490	1					
ANR	2641643	PrimaryExpression	"""spsr"""		2630490	0					
ANR	2641644	CompoundStatement		1898:34:41717:41717	2630490	1					
ANR	2641645	ExpressionStatement	ao -> o = 0xfff30080	3191:4:67582:67600	2630490	0	True				
ANR	2641646	AssignmentExpression	ao -> o = 0xfff30080		2630490	0		=			
ANR	2641647	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641648	Identifier	ao		2630490	0					
ANR	2641649	Identifier	o		2630490	1					
ANR	2641650	PrimaryExpression	0xfff30080		2630490	1					
ANR	2641651	ExpressionStatement	ao -> o |= reg1	3192:4:67606:67619	2630490	1	True				
ANR	2641652	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2641653	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641654	Identifier	ao		2630490	0					
ANR	2641655	Identifier	o		2630490	1					
ANR	2641656	Identifier	reg1		2630490	1					
ANR	2641657	ReturnStatement	return 4 ;	3193:4:67625:67633	2630490	2	True				
ANR	2641658	PrimaryExpression	4		2630490	0					
ANR	2641659	ReturnStatement	return - 1 ;	3196:3:67647:67656	2630490	5	True				
ANR	2641660	UnaryOperationExpression	- 1		2630490	0					
ANR	2641661	UnaryOperator	-		2630490	0					
ANR	2641662	PrimaryExpression	1		2630490	1					
ANR	2641663	BreakStatement	break ;	3198:3:67673:67678	2630490	2	True				
ANR	2641664	Label	default :	3199:2:67682:67689	2630490	3	True				
ANR	2641665	Identifier	default		2630490	0					
ANR	2641666	ReturnStatement	return - 1 ;	3200:3:67694:67703	2630490	4	True				
ANR	2641667	UnaryOperationExpression	- 1		2630490	0					
ANR	2641668	UnaryOperator	-		2630490	0					
ANR	2641669	PrimaryExpression	1		2630490	1					
ANR	2641670	ElseStatement	else		2630490	0					
ANR	2641671	IfStatement	"if ( ( m = opmask ( ao -> op , ""msr"" , 0 ) ) )"		2630490	0					
ANR	2641672	Condition	"m = opmask ( ao -> op , ""msr"" , 0 )"	3203:5:67723:67753	2630490	0	True				
ANR	2641673	AssignmentExpression	"m = opmask ( ao -> op , ""msr"" , 0 )"		2630490	0		=			
ANR	2641674	Identifier	m		2630490	0					
ANR	2641675	CallExpression	"opmask ( ao -> op , ""msr"" , 0 )"		2630490	1					
ANR	2641676	Callee	opmask		2630490	0					
ANR	2641677	Identifier	opmask		2630490	0					
ANR	2641678	ArgumentList	ao -> op		2630490	1					
ANR	2641679	Argument	ao -> op		2630490	0					
ANR	2641680	PtrMemberAccess	ao -> op		2630490	0					
ANR	2641681	Identifier	ao		2630490	0					
ANR	2641682	Identifier	op		2630490	1					
ANR	2641683	Argument	"""msr"""		2630490	1					
ANR	2641684	PrimaryExpression	"""msr"""		2630490	0					
ANR	2641685	Argument	0		2630490	2					
ANR	2641686	PrimaryExpression	0		2630490	0					
ANR	2641687	CompoundStatement		1912:2:41901:41935	2630490	1					
ANR	2641688	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3204:2:67760:67794	2630490	0	True				
ANR	2641689	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2641690	IdentifierDeclType	ut64		2630490	0					
ANR	2641691	Identifier	argt		2630490	1					
ANR	2641692	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2641693	Identifier	argt		2630490	0					
ANR	2641694	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2641695	Callee	thumb_selector		2630490	0					
ANR	2641696	Identifier	thumb_selector		2630490	0					
ANR	2641697	ArgumentList	ao -> a		2630490	1					
ANR	2641698	Argument	ao -> a		2630490	0					
ANR	2641699	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641700	Identifier	ao		2630490	0					
ANR	2641701	Identifier	a		2630490	1					
ANR	2641702	SwitchStatement	switch ( argt )		2630490	1					
ANR	2641703	Condition	argt	3205:10:67806:67809	2630490	0	True				
ANR	2641704	Identifier	argt		2630490	0					
ANR	2641705	CompoundStatement		1913:16:41953:41953	2630490	1					
ANR	2641706	Label	case THUMB_OTHER_REG :	3206:2:67816:67836	2630490	0	True				
ANR	2641707	Identifier	THUMB_OTHER_REG		2630490	0					
ANR	2641708	CompoundStatement		1918:3:42085:42114	2630490	1					
ANR	2641709	ExpressionStatement	"r_str_case ( ao -> a [ 0 ] , false )"	3207:3:67843:67871	2630490	0	True				
ANR	2641710	CallExpression	"r_str_case ( ao -> a [ 0 ] , false )"		2630490	0					
ANR	2641711	Callee	r_str_case		2630490	0					
ANR	2641712	Identifier	r_str_case		2630490	0					
ANR	2641713	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2641714	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2641715	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2641716	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641717	Identifier	ao		2630490	0					
ANR	2641718	Identifier	a		2630490	1					
ANR	2641719	PrimaryExpression	0		2630490	1					
ANR	2641720	Argument	false		2630490	1					
ANR	2641721	Identifier	false		2630490	0					
ANR	2641722	IdentifierDeclStatement	ut8 spsr = 0 ;	3208:3:67876:67888	2630490	1	True				
ANR	2641723	IdentifierDecl	spsr = 0		2630490	0					
ANR	2641724	IdentifierDeclType	ut8		2630490	0					
ANR	2641725	Identifier	spsr		2630490	1					
ANR	2641726	AssignmentExpression	spsr = 0		2630490	2		=			
ANR	2641727	Identifier	spsr		2630490	0					
ANR	2641728	PrimaryExpression	0		2630490	1					
ANR	2641729	IdentifierDeclStatement	"ut8 bank = interpret_msrbank ( ao -> a [ 0 ] , & spsr ) ;"	3209:3:67893:67939	2630490	2	True				
ANR	2641730	IdentifierDecl	"bank = interpret_msrbank ( ao -> a [ 0 ] , & spsr )"		2630490	0					
ANR	2641731	IdentifierDeclType	ut8		2630490	0					
ANR	2641732	Identifier	bank		2630490	1					
ANR	2641733	AssignmentExpression	"bank = interpret_msrbank ( ao -> a [ 0 ] , & spsr )"		2630490	2		=			
ANR	2641734	Identifier	bank		2630490	0					
ANR	2641735	CallExpression	"interpret_msrbank ( ao -> a [ 0 ] , & spsr )"		2630490	1					
ANR	2641736	Callee	interpret_msrbank		2630490	0					
ANR	2641737	Identifier	interpret_msrbank		2630490	0					
ANR	2641738	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2641739	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2641740	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2641741	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641742	Identifier	ao		2630490	0					
ANR	2641743	Identifier	a		2630490	1					
ANR	2641744	PrimaryExpression	0		2630490	1					
ANR	2641745	Argument	& spsr		2630490	1					
ANR	2641746	UnaryOperationExpression	& spsr		2630490	0					
ANR	2641747	UnaryOperator	&		2630490	0					
ANR	2641748	Identifier	spsr		2630490	1					
ANR	2641749	IdentifierDeclStatement	ut32 reg1 = getreg ( ao -> a [ 1 ] ) ;	3210:3:67944:67973	2630490	3	True				
ANR	2641750	IdentifierDecl	reg1 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2641751	IdentifierDeclType	ut32		2630490	0					
ANR	2641752	Identifier	reg1		2630490	1					
ANR	2641753	AssignmentExpression	reg1 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2641754	Identifier	reg1		2630490	0					
ANR	2641755	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2641756	Callee	getreg		2630490	0					
ANR	2641757	Identifier	getreg		2630490	0					
ANR	2641758	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2641759	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2641760	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2641761	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641762	Identifier	ao		2630490	0					
ANR	2641763	Identifier	a		2630490	1					
ANR	2641764	PrimaryExpression	1		2630490	1					
ANR	2641765	IfStatement	if ( ( bank == 0 ) || ( reg1 > 15 ) )		2630490	4					
ANR	2641766	Condition	( bank == 0 ) || ( reg1 > 15 )	3212:7:67983:68008	2630490	0	True				
ANR	2641767	OrExpression	( bank == 0 ) || ( reg1 > 15 )		2630490	0		||			
ANR	2641768	EqualityExpression	bank == 0		2630490	0		==			
ANR	2641769	Identifier	bank		2630490	0					
ANR	2641770	PrimaryExpression	0		2630490	1					
ANR	2641771	RelationalExpression	reg1 > 15		2630490	1		>			
ANR	2641772	Identifier	reg1		2630490	0					
ANR	2641773	PrimaryExpression	15		2630490	1					
ANR	2641774	CompoundStatement		1920:35:42152:42152	2630490	1					
ANR	2641775	ReturnStatement	return - 1 ;	3213:4:68017:68026	2630490	0	True				
ANR	2641776	UnaryOperationExpression	- 1		2630490	0					
ANR	2641777	UnaryOperator	-		2630490	0					
ANR	2641778	PrimaryExpression	1		2630490	1					
ANR	2641779	ExpressionStatement	ao -> o = 0x80f30080	3216:3:68040:68058	2630490	5	True				
ANR	2641780	AssignmentExpression	ao -> o = 0x80f30080		2630490	0		=			
ANR	2641781	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641782	Identifier	ao		2630490	0					
ANR	2641783	Identifier	o		2630490	1					
ANR	2641784	PrimaryExpression	0x80f30080		2630490	1					
ANR	2641785	ExpressionStatement	ao -> o |= reg1 << 24	3217:3:68063:68082	2630490	6	True				
ANR	2641786	AssignmentExpression	ao -> o |= reg1 << 24		2630490	0		|=			
ANR	2641787	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641788	Identifier	ao		2630490	0					
ANR	2641789	Identifier	o		2630490	1					
ANR	2641790	ShiftExpression	reg1 << 24		2630490	1		<<			
ANR	2641791	Identifier	reg1		2630490	0					
ANR	2641792	PrimaryExpression	24		2630490	1					
ANR	2641793	ExpressionStatement	ao -> o |= bank	3218:3:68087:68100	2630490	7	True				
ANR	2641794	AssignmentExpression	ao -> o |= bank		2630490	0		|=			
ANR	2641795	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641796	Identifier	ao		2630490	0					
ANR	2641797	Identifier	o		2630490	1					
ANR	2641798	Identifier	bank		2630490	1					
ANR	2641799	IfStatement	if ( spsr != 0 )		2630490	8					
ANR	2641800	Condition	spsr != 0	3219:7:68109:68117	2630490	0	True				
ANR	2641801	EqualityExpression	spsr != 0		2630490	0		!=			
ANR	2641802	Identifier	spsr		2630490	0					
ANR	2641803	PrimaryExpression	0		2630490	1					
ANR	2641804	CompoundStatement		1927:18:42261:42261	2630490	1					
ANR	2641805	ExpressionStatement	ao -> o |= 1 << 28	3220:4:68126:68142	2630490	0	True				
ANR	2641806	AssignmentExpression	ao -> o |= 1 << 28		2630490	0		|=			
ANR	2641807	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641808	Identifier	ao		2630490	0					
ANR	2641809	Identifier	o		2630490	1					
ANR	2641810	ShiftExpression	1 << 28		2630490	1		<<			
ANR	2641811	PrimaryExpression	1		2630490	0					
ANR	2641812	PrimaryExpression	28		2630490	1					
ANR	2641813	ReturnStatement	return 4 ;	3222:3:68152:68160	2630490	9	True				
ANR	2641814	PrimaryExpression	4		2630490	0					
ANR	2641815	BreakStatement	break ;	3224:3:68177:68182	2630490	2	True				
ANR	2641816	Label	default :	3225:2:68186:68193	2630490	3	True				
ANR	2641817	Identifier	default		2630490	0					
ANR	2641818	ReturnStatement	return - 1 ;	3226:3:68198:68207	2630490	4	True				
ANR	2641819	UnaryOperationExpression	- 1		2630490	0					
ANR	2641820	UnaryOperator	-		2630490	0					
ANR	2641821	PrimaryExpression	1		2630490	1					
ANR	2641822	ElseStatement	else		2630490	0					
ANR	2641823	IfStatement	"if ( ( m = opmask ( ao -> op , ""mul"" , 0 ) ) )"		2630490	0					
ANR	2641824	Condition	"m = opmask ( ao -> op , ""mul"" , 0 )"	3229:5:68226:68256	2630490	0	True				
ANR	2641825	AssignmentExpression	"m = opmask ( ao -> op , ""mul"" , 0 )"		2630490	0		=			
ANR	2641826	Identifier	m		2630490	0					
ANR	2641827	CallExpression	"opmask ( ao -> op , ""mul"" , 0 )"		2630490	1					
ANR	2641828	Callee	opmask		2630490	0					
ANR	2641829	Identifier	opmask		2630490	0					
ANR	2641830	ArgumentList	ao -> op		2630490	1					
ANR	2641831	Argument	ao -> op		2630490	0					
ANR	2641832	PtrMemberAccess	ao -> op		2630490	0					
ANR	2641833	Identifier	ao		2630490	0					
ANR	2641834	Identifier	op		2630490	1					
ANR	2641835	Argument	"""mul"""		2630490	1					
ANR	2641836	PrimaryExpression	"""mul"""		2630490	0					
ANR	2641837	Argument	0		2630490	2					
ANR	2641838	PrimaryExpression	0		2630490	0					
ANR	2641839	CompoundStatement		1938:2:42404:42438	2630490	1					
ANR	2641840	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3230:2:68263:68297	2630490	0	True				
ANR	2641841	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2641842	IdentifierDeclType	ut64		2630490	0					
ANR	2641843	Identifier	argt		2630490	1					
ANR	2641844	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2641845	Identifier	argt		2630490	0					
ANR	2641846	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2641847	Callee	thumb_selector		2630490	0					
ANR	2641848	Identifier	thumb_selector		2630490	0					
ANR	2641849	ArgumentList	ao -> a		2630490	1					
ANR	2641850	Argument	ao -> a		2630490	0					
ANR	2641851	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641852	Identifier	ao		2630490	0					
ANR	2641853	Identifier	a		2630490	1					
ANR	2641854	SwitchStatement	switch ( argt )		2630490	1					
ANR	2641855	Condition	argt	3231:10:68309:68312	2630490	0	True				
ANR	2641856	Identifier	argt		2630490	0					
ANR	2641857	CompoundStatement		1939:16:42456:42456	2630490	1					
ANR	2641858	Label	case THUMB_REG_REG :	3232:2:68319:68337	2630490	0	True				
ANR	2641859	Identifier	THUMB_REG_REG		2630490	0					
ANR	2641860	CompoundStatement		1940:22:42480:42480	2630490	1					
ANR	2641861	ExpressionStatement	std_opt_2 ( ao )	3233:3:68344:68358	2630490	0	True				
ANR	2641862	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2641863	Callee	std_opt_2		2630490	0					
ANR	2641864	Identifier	std_opt_2		2630490	0					
ANR	2641865	ArgumentList	ao		2630490	1					
ANR	2641866	Argument	ao		2630490	0					
ANR	2641867	Identifier	ao		2630490	0					
ANR	2641868	Label	case THUMB_REG_REG_REG :	3236:2:68404:68426	2630490	2	True				
ANR	2641869	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2641870	CompoundStatement		1946:3:42607:42635	2630490	3					
ANR	2641871	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	3237:3:68433:68461	2630490	0	True				
ANR	2641872	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2641873	IdentifierDeclType	ut8		2630490	0					
ANR	2641874	Identifier	reg1		2630490	1					
ANR	2641875	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2641876	Identifier	reg1		2630490	0					
ANR	2641877	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2641878	Callee	getreg		2630490	0					
ANR	2641879	Identifier	getreg		2630490	0					
ANR	2641880	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2641881	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2641882	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2641883	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641884	Identifier	ao		2630490	0					
ANR	2641885	Identifier	a		2630490	1					
ANR	2641886	PrimaryExpression	0		2630490	1					
ANR	2641887	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	3238:3:68466:68494	2630490	1	True				
ANR	2641888	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2641889	IdentifierDeclType	ut8		2630490	0					
ANR	2641890	Identifier	reg3		2630490	1					
ANR	2641891	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2641892	Identifier	reg3		2630490	0					
ANR	2641893	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2641894	Callee	getreg		2630490	0					
ANR	2641895	Identifier	getreg		2630490	0					
ANR	2641896	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2641897	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2641898	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2641899	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641900	Identifier	ao		2630490	0					
ANR	2641901	Identifier	a		2630490	1					
ANR	2641902	PrimaryExpression	2		2630490	1					
ANR	2641903	ExpressionStatement	ao -> o = 0x4043	3240:3:68500:68514	2630490	2	True				
ANR	2641904	AssignmentExpression	ao -> o = 0x4043		2630490	0		=			
ANR	2641905	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641906	Identifier	ao		2630490	0					
ANR	2641907	Identifier	o		2630490	1					
ANR	2641908	PrimaryExpression	0x4043		2630490	1					
ANR	2641909	IfStatement	"if ( ( reg1 == reg3 ) && ( std_16bit_2reg ( ao , m ) ) )"		2630490	3					
ANR	2641910	Condition	"( reg1 == reg3 ) && ( std_16bit_2reg ( ao , m ) )"	3241:7:68523:68564	2630490	0	True				
ANR	2641911	AndExpression	"( reg1 == reg3 ) && ( std_16bit_2reg ( ao , m ) )"		2630490	0		&&			
ANR	2641912	EqualityExpression	reg1 == reg3		2630490	0		==			
ANR	2641913	Identifier	reg1		2630490	0					
ANR	2641914	Identifier	reg3		2630490	1					
ANR	2641915	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	1					
ANR	2641916	Callee	std_16bit_2reg		2630490	0					
ANR	2641917	Identifier	std_16bit_2reg		2630490	0					
ANR	2641918	ArgumentList	ao		2630490	1					
ANR	2641919	Argument	ao		2630490	0					
ANR	2641920	Identifier	ao		2630490	0					
ANR	2641921	Argument	m		2630490	1					
ANR	2641922	Identifier	m		2630490	0					
ANR	2641923	CompoundStatement		1949:51:42708:42708	2630490	1					
ANR	2641924	ReturnStatement	return 2 ;	3242:4:68573:68581	2630490	0	True				
ANR	2641925	PrimaryExpression	2		2630490	0					
ANR	2641926	ExpressionStatement	ao -> o = 0x00fb00f0	3245:3:68592:68610	2630490	4	True				
ANR	2641927	AssignmentExpression	ao -> o = 0x00fb00f0		2630490	0		=			
ANR	2641928	PtrMemberAccess	ao -> o		2630490	0					
ANR	2641929	Identifier	ao		2630490	0					
ANR	2641930	Identifier	o		2630490	1					
ANR	2641931	PrimaryExpression	0x00fb00f0		2630490	1					
ANR	2641932	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3246:3:68615:68651	2630490	5	True				
ANR	2641933	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2641934	Callee	std_32bit_3reg		2630490	0					
ANR	2641935	Identifier	std_32bit_3reg		2630490	0					
ANR	2641936	ArgumentList	ao		2630490	1					
ANR	2641937	Argument	ao		2630490	0					
ANR	2641938	Identifier	ao		2630490	0					
ANR	2641939	Argument	m		2630490	1					
ANR	2641940	Identifier	m		2630490	0					
ANR	2641941	Argument	false		2630490	2					
ANR	2641942	Identifier	false		2630490	0					
ANR	2641943	BreakStatement	break ;	3248:3:68668:68673	2630490	4	True				
ANR	2641944	Label	default :	3249:2:68677:68684	2630490	5	True				
ANR	2641945	Identifier	default		2630490	0					
ANR	2641946	ReturnStatement	return - 1 ;	3250:3:68689:68698	2630490	6	True				
ANR	2641947	UnaryOperationExpression	- 1		2630490	0					
ANR	2641948	UnaryOperator	-		2630490	0					
ANR	2641949	PrimaryExpression	1		2630490	1					
ANR	2641950	ElseStatement	else		2630490	0					
ANR	2641951	IfStatement	"if ( ( m = opmask ( ao -> op , ""mvn"" , S_BIT ) ) )"		2630490	0					
ANR	2641952	Condition	"m = opmask ( ao -> op , ""mvn"" , S_BIT )"	3253:5:68717:68751	2630490	0	True				
ANR	2641953	AssignmentExpression	"m = opmask ( ao -> op , ""mvn"" , S_BIT )"		2630490	0		=			
ANR	2641954	Identifier	m		2630490	0					
ANR	2641955	CallExpression	"opmask ( ao -> op , ""mvn"" , S_BIT )"		2630490	1					
ANR	2641956	Callee	opmask		2630490	0					
ANR	2641957	Identifier	opmask		2630490	0					
ANR	2641958	ArgumentList	ao -> op		2630490	1					
ANR	2641959	Argument	ao -> op		2630490	0					
ANR	2641960	PtrMemberAccess	ao -> op		2630490	0					
ANR	2641961	Identifier	ao		2630490	0					
ANR	2641962	Identifier	op		2630490	1					
ANR	2641963	Argument	"""mvn"""		2630490	1					
ANR	2641964	PrimaryExpression	"""mvn"""		2630490	0					
ANR	2641965	Argument	S_BIT		2630490	2					
ANR	2641966	Identifier	S_BIT		2630490	0					
ANR	2641967	CompoundStatement		1962:2:42899:42933	2630490	1					
ANR	2641968	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3254:2:68758:68792	2630490	0	True				
ANR	2641969	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2641970	IdentifierDeclType	ut64		2630490	0					
ANR	2641971	Identifier	argt		2630490	1					
ANR	2641972	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2641973	Identifier	argt		2630490	0					
ANR	2641974	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2641975	Callee	thumb_selector		2630490	0					
ANR	2641976	Identifier	thumb_selector		2630490	0					
ANR	2641977	ArgumentList	ao -> a		2630490	1					
ANR	2641978	Argument	ao -> a		2630490	0					
ANR	2641979	PtrMemberAccess	ao -> a		2630490	0					
ANR	2641980	Identifier	ao		2630490	0					
ANR	2641981	Identifier	a		2630490	1					
ANR	2641982	SwitchStatement	switch ( argt )		2630490	1					
ANR	2641983	Condition	argt	3255:10:68804:68807	2630490	0	True				
ANR	2641984	Identifier	argt		2630490	0					
ANR	2641985	CompoundStatement		1963:16:42951:42951	2630490	1					
ANR	2641986	Label	case THUMB_REG_CONST :	3256:2:68814:68834	2630490	0	True				
ANR	2641987	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2641988	CompoundStatement		1967:3:43031:43065	2630490	1					
ANR	2641989	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	3257:3:68841:68869	2630490	0	True				
ANR	2641990	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2641991	IdentifierDeclType	ut8		2630490	0					
ANR	2641992	Identifier	reg1		2630490	1					
ANR	2641993	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2641994	Identifier	reg1		2630490	0					
ANR	2641995	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2641996	Callee	getreg		2630490	0					
ANR	2641997	Identifier	getreg		2630490	0					
ANR	2641998	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2641999	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2642000	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2642001	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642002	Identifier	ao		2630490	0					
ANR	2642003	Identifier	a		2630490	1					
ANR	2642004	PrimaryExpression	0		2630490	1					
ANR	2642005	ExpressionStatement	err = false	3258:3:68874:68885	2630490	1	True				
ANR	2642006	AssignmentExpression	err = false		2630490	0		=			
ANR	2642007	Identifier	err		2630490	0					
ANR	2642008	Identifier	false		2630490	1					
ANR	2642009	IdentifierDeclStatement	ut32 num = getthimmed12 ( ao -> a [ 1 ] ) ;	3259:3:68890:68924	2630490	2	True				
ANR	2642010	IdentifierDecl	num = getthimmed12 ( ao -> a [ 1 ] )		2630490	0					
ANR	2642011	IdentifierDeclType	ut32		2630490	0					
ANR	2642012	Identifier	num		2630490	1					
ANR	2642013	AssignmentExpression	num = getthimmed12 ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2642014	Identifier	num		2630490	0					
ANR	2642015	CallExpression	getthimmed12 ( ao -> a [ 1 ] )		2630490	1					
ANR	2642016	Callee	getthimmed12		2630490	0					
ANR	2642017	Identifier	getthimmed12		2630490	0					
ANR	2642018	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2642019	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2642020	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2642021	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642022	Identifier	ao		2630490	0					
ANR	2642023	Identifier	a		2630490	1					
ANR	2642024	PrimaryExpression	1		2630490	1					
ANR	2642025	IfStatement	if ( ( reg1 > 15 ) || err )		2630490	3					
ANR	2642026	Condition	( reg1 > 15 ) || err	3261:7:68937:68954	2630490	0	True				
ANR	2642027	OrExpression	( reg1 > 15 ) || err		2630490	0		||			
ANR	2642028	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2642029	Identifier	reg1		2630490	0					
ANR	2642030	PrimaryExpression	15		2630490	1					
ANR	2642031	Identifier	err		2630490	1					
ANR	2642032	CompoundStatement		1969:27:43098:43098	2630490	1					
ANR	2642033	ReturnStatement	return - 1 ;	3262:4:68963:68972	2630490	0	True				
ANR	2642034	UnaryOperationExpression	- 1		2630490	0					
ANR	2642035	UnaryOperator	-		2630490	0					
ANR	2642036	PrimaryExpression	1		2630490	1					
ANR	2642037	ExpressionStatement	ao -> o = 0x6ff00000	3265:3:68983:69001	2630490	4	True				
ANR	2642038	AssignmentExpression	ao -> o = 0x6ff00000		2630490	0		=			
ANR	2642039	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642040	Identifier	ao		2630490	0					
ANR	2642041	Identifier	o		2630490	1					
ANR	2642042	PrimaryExpression	0x6ff00000		2630490	1					
ANR	2642043	ExpressionStatement	ao -> o |= reg1	3266:3:69006:69019	2630490	5	True				
ANR	2642044	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2642045	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642046	Identifier	ao		2630490	0					
ANR	2642047	Identifier	o		2630490	1					
ANR	2642048	Identifier	reg1		2630490	1					
ANR	2642049	ExpressionStatement	ao -> o |= num	3267:3:69024:69036	2630490	6	True				
ANR	2642050	AssignmentExpression	ao -> o |= num		2630490	0		|=			
ANR	2642051	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642052	Identifier	ao		2630490	0					
ANR	2642053	Identifier	o		2630490	1					
ANR	2642054	Identifier	num		2630490	1					
ANR	2642055	IfStatement	if ( m & S_BIT )		2630490	7					
ANR	2642056	Condition	m & S_BIT	3268:7:69045:69053	2630490	0	True				
ANR	2642057	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2642058	Identifier	m		2630490	0					
ANR	2642059	Identifier	S_BIT		2630490	1					
ANR	2642060	CompoundStatement		1976:18:43197:43197	2630490	1					
ANR	2642061	ExpressionStatement	ao -> o |= 1 << 28	3269:4:69062:69078	2630490	0	True				
ANR	2642062	AssignmentExpression	ao -> o |= 1 << 28		2630490	0		|=			
ANR	2642063	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642064	Identifier	ao		2630490	0					
ANR	2642065	Identifier	o		2630490	1					
ANR	2642066	ShiftExpression	1 << 28		2630490	1		<<			
ANR	2642067	PrimaryExpression	1		2630490	0					
ANR	2642068	PrimaryExpression	28		2630490	1					
ANR	2642069	ReturnStatement	return 4 ;	3271:3:69088:69096	2630490	8	True				
ANR	2642070	PrimaryExpression	4		2630490	0					
ANR	2642071	BreakStatement	break ;	3273:3:69113:69118	2630490	2	True				
ANR	2642072	Label	case THUMB_REG_REG :	3274:2:69122:69140	2630490	3	True				
ANR	2642073	Identifier	THUMB_REG_REG		2630490	0					
ANR	2642074	CompoundStatement		1982:22:43283:43283	2630490	4					
ANR	2642075	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 0"""	3275:3:69147:69165	2630490	0	True				
ANR	2642076	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 0"""		2630490	0		=			
ANR	2642077	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2642078	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642079	Identifier	ao		2630490	0					
ANR	2642080	Identifier	a		2630490	1					
ANR	2642081	PrimaryExpression	2		2630490	1					
ANR	2642082	PrimaryExpression	"""lsl 0"""		2630490	1					
ANR	2642083	Label	case THUMB_REG_REG_SHIFT :	3278:2:69211:69235	2630490	5	True				
ANR	2642084	Identifier	THUMB_REG_REG_SHIFT		2630490	0					
ANR	2642085	CompoundStatement		1989:3:43449:43487	2630490	6					
ANR	2642086	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	3279:3:69242:69270	2630490	0	True				
ANR	2642087	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2642088	IdentifierDeclType	ut8		2630490	0					
ANR	2642089	Identifier	reg1		2630490	1					
ANR	2642090	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2642091	Identifier	reg1		2630490	0					
ANR	2642092	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2642093	Callee	getreg		2630490	0					
ANR	2642094	Identifier	getreg		2630490	0					
ANR	2642095	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2642096	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2642097	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2642098	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642099	Identifier	ao		2630490	0					
ANR	2642100	Identifier	a		2630490	1					
ANR	2642101	PrimaryExpression	0		2630490	1					
ANR	2642102	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	3280:3:69275:69303	2630490	1	True				
ANR	2642103	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2642104	IdentifierDeclType	ut8		2630490	0					
ANR	2642105	Identifier	reg2		2630490	1					
ANR	2642106	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2642107	Identifier	reg2		2630490	0					
ANR	2642108	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2642109	Callee	getreg		2630490	0					
ANR	2642110	Identifier	getreg		2630490	0					
ANR	2642111	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2642112	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2642113	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2642114	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642115	Identifier	ao		2630490	0					
ANR	2642116	Identifier	a		2630490	1					
ANR	2642117	PrimaryExpression	1		2630490	1					
ANR	2642118	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 2 ] ) ;	3281:3:69308:69346	2630490	2	True				
ANR	2642119	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 2 ] )		2630490	0					
ANR	2642120	IdentifierDeclType	ut32		2630490	0					
ANR	2642121	Identifier	shift		2630490	1					
ANR	2642122	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2642123	Identifier	shift		2630490	0					
ANR	2642124	CallExpression	thumb_getshift ( ao -> a [ 2 ] )		2630490	1					
ANR	2642125	Callee	thumb_getshift		2630490	0					
ANR	2642126	Identifier	thumb_getshift		2630490	0					
ANR	2642127	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2642128	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2642129	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2642130	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642131	Identifier	ao		2630490	0					
ANR	2642132	Identifier	a		2630490	1					
ANR	2642133	PrimaryExpression	2		2630490	1					
ANR	2642134	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) )		2630490	3					
ANR	2642135	Condition	( reg1 > 15 ) || ( reg2 > 15 )	3283:7:69356:69381	2630490	0	True				
ANR	2642136	OrExpression	( reg1 > 15 ) || ( reg2 > 15 )		2630490	0		||			
ANR	2642137	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2642138	Identifier	reg1		2630490	0					
ANR	2642139	PrimaryExpression	15		2630490	1					
ANR	2642140	RelationalExpression	reg2 > 15		2630490	1		>			
ANR	2642141	Identifier	reg2		2630490	0					
ANR	2642142	PrimaryExpression	15		2630490	1					
ANR	2642143	CompoundStatement		1991:35:43525:43525	2630490	1					
ANR	2642144	ReturnStatement	return - 1 ;	3284:4:69390:69399	2630490	0	True				
ANR	2642145	UnaryOperationExpression	- 1		2630490	0					
ANR	2642146	UnaryOperator	-		2630490	0					
ANR	2642147	PrimaryExpression	1		2630490	1					
ANR	2642148	ExpressionStatement	ao -> o = 0xc043	3287:3:69413:69427	2630490	4	True				
ANR	2642149	AssignmentExpression	ao -> o = 0xc043		2630490	0		=			
ANR	2642150	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642151	Identifier	ao		2630490	0					
ANR	2642152	Identifier	o		2630490	1					
ANR	2642153	PrimaryExpression	0xc043		2630490	1					
ANR	2642154	IfStatement	"if ( ( shift == 0 ) && ( std_16bit_2reg ( ao , m ) ) )"		2630490	5					
ANR	2642155	Condition	"( shift == 0 ) && ( std_16bit_2reg ( ao , m ) )"	3288:7:69436:69475	2630490	0	True				
ANR	2642156	AndExpression	"( shift == 0 ) && ( std_16bit_2reg ( ao , m ) )"		2630490	0		&&			
ANR	2642157	EqualityExpression	shift == 0		2630490	0		==			
ANR	2642158	Identifier	shift		2630490	0					
ANR	2642159	PrimaryExpression	0		2630490	1					
ANR	2642160	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	1					
ANR	2642161	Callee	std_16bit_2reg		2630490	0					
ANR	2642162	Identifier	std_16bit_2reg		2630490	0					
ANR	2642163	ArgumentList	ao		2630490	1					
ANR	2642164	Argument	ao		2630490	0					
ANR	2642165	Identifier	ao		2630490	0					
ANR	2642166	Argument	m		2630490	1					
ANR	2642167	Identifier	m		2630490	0					
ANR	2642168	CompoundStatement		1996:49:43619:43619	2630490	1					
ANR	2642169	ReturnStatement	return 2 ;	3289:4:69484:69492	2630490	0	True				
ANR	2642170	PrimaryExpression	2		2630490	0					
ANR	2642171	ExpressionStatement	ao -> o = 0x6fea0000	3292:3:69503:69521	2630490	6	True				
ANR	2642172	AssignmentExpression	ao -> o = 0x6fea0000		2630490	0		=			
ANR	2642173	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642174	Identifier	ao		2630490	0					
ANR	2642175	Identifier	o		2630490	1					
ANR	2642176	PrimaryExpression	0x6fea0000		2630490	1					
ANR	2642177	ExpressionStatement	ao -> o |= reg1	3293:3:69526:69539	2630490	7	True				
ANR	2642178	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2642179	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642180	Identifier	ao		2630490	0					
ANR	2642181	Identifier	o		2630490	1					
ANR	2642182	Identifier	reg1		2630490	1					
ANR	2642183	ExpressionStatement	ao -> o |= reg2 << 8	3294:3:69544:69562	2630490	8	True				
ANR	2642184	AssignmentExpression	ao -> o |= reg2 << 8		2630490	0		|=			
ANR	2642185	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642186	Identifier	ao		2630490	0					
ANR	2642187	Identifier	o		2630490	1					
ANR	2642188	ShiftExpression	reg2 << 8		2630490	1		<<			
ANR	2642189	Identifier	reg2		2630490	0					
ANR	2642190	PrimaryExpression	8		2630490	1					
ANR	2642191	ExpressionStatement	ao -> o |= shift	3295:3:69567:69581	2630490	9	True				
ANR	2642192	AssignmentExpression	ao -> o |= shift		2630490	0		|=			
ANR	2642193	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642194	Identifier	ao		2630490	0					
ANR	2642195	Identifier	o		2630490	1					
ANR	2642196	Identifier	shift		2630490	1					
ANR	2642197	IfStatement	if ( m & S_BIT )		2630490	10					
ANR	2642198	Condition	m & S_BIT	3296:7:69590:69598	2630490	0	True				
ANR	2642199	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2642200	Identifier	m		2630490	0					
ANR	2642201	Identifier	S_BIT		2630490	1					
ANR	2642202	CompoundStatement		2004:18:43742:43742	2630490	1					
ANR	2642203	ExpressionStatement	ao -> o |= 1 << 28	3297:4:69607:69623	2630490	0	True				
ANR	2642204	AssignmentExpression	ao -> o |= 1 << 28		2630490	0		|=			
ANR	2642205	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642206	Identifier	ao		2630490	0					
ANR	2642207	Identifier	o		2630490	1					
ANR	2642208	ShiftExpression	1 << 28		2630490	1		<<			
ANR	2642209	PrimaryExpression	1		2630490	0					
ANR	2642210	PrimaryExpression	28		2630490	1					
ANR	2642211	ReturnStatement	return 4 ;	3299:3:69633:69641	2630490	11	True				
ANR	2642212	PrimaryExpression	4		2630490	0					
ANR	2642213	BreakStatement	break ;	3301:3:69658:69663	2630490	7	True				
ANR	2642214	Label	default :	3302:2:69667:69674	2630490	8	True				
ANR	2642215	Identifier	default		2630490	0					
ANR	2642216	ReturnStatement	return - 1 ;	3303:3:69679:69688	2630490	9	True				
ANR	2642217	UnaryOperationExpression	- 1		2630490	0					
ANR	2642218	UnaryOperator	-		2630490	0					
ANR	2642219	PrimaryExpression	1		2630490	1					
ANR	2642220	ElseStatement	else		2630490	0					
ANR	2642221	IfStatement	"if ( ( m = opmask ( ao -> op , ""nop"" , 0 ) ) )"		2630490	0					
ANR	2642222	Condition	"m = opmask ( ao -> op , ""nop"" , 0 )"	3306:5:69707:69737	2630490	0	True				
ANR	2642223	AssignmentExpression	"m = opmask ( ao -> op , ""nop"" , 0 )"		2630490	0		=			
ANR	2642224	Identifier	m		2630490	0					
ANR	2642225	CallExpression	"opmask ( ao -> op , ""nop"" , 0 )"		2630490	1					
ANR	2642226	Callee	opmask		2630490	0					
ANR	2642227	Identifier	opmask		2630490	0					
ANR	2642228	ArgumentList	ao -> op		2630490	1					
ANR	2642229	Argument	ao -> op		2630490	0					
ANR	2642230	PtrMemberAccess	ao -> op		2630490	0					
ANR	2642231	Identifier	ao		2630490	0					
ANR	2642232	Identifier	op		2630490	1					
ANR	2642233	Argument	"""nop"""		2630490	1					
ANR	2642234	PrimaryExpression	"""nop"""		2630490	0					
ANR	2642235	Argument	0		2630490	2					
ANR	2642236	PrimaryExpression	0		2630490	0					
ANR	2642237	CompoundStatement		2015:2:43885:43919	2630490	1					
ANR	2642238	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3307:2:69744:69778	2630490	0	True				
ANR	2642239	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2642240	IdentifierDeclType	ut64		2630490	0					
ANR	2642241	Identifier	argt		2630490	1					
ANR	2642242	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2642243	Identifier	argt		2630490	0					
ANR	2642244	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2642245	Callee	thumb_selector		2630490	0					
ANR	2642246	Identifier	thumb_selector		2630490	0					
ANR	2642247	ArgumentList	ao -> a		2630490	1					
ANR	2642248	Argument	ao -> a		2630490	0					
ANR	2642249	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642250	Identifier	ao		2630490	0					
ANR	2642251	Identifier	a		2630490	1					
ANR	2642252	SwitchStatement	switch ( argt )		2630490	1					
ANR	2642253	Condition	argt	3308:10:69790:69793	2630490	0	True				
ANR	2642254	Identifier	argt		2630490	0					
ANR	2642255	CompoundStatement		2016:16:43937:43937	2630490	1					
ANR	2642256	Label	case THUMB_NONE :	3309:2:69800:69815	2630490	0	True				
ANR	2642257	Identifier	THUMB_NONE		2630490	0					
ANR	2642258	CompoundStatement		2017:19:43958:43958	2630490	1					
ANR	2642259	IfStatement	if ( m & DOTW_BIT )		2630490	0					
ANR	2642260	Condition	m & DOTW_BIT	3310:7:69826:69837	2630490	0	True				
ANR	2642261	BitAndExpression	m & DOTW_BIT		2630490	0		&			
ANR	2642262	Identifier	m		2630490	0					
ANR	2642263	Identifier	DOTW_BIT		2630490	1					
ANR	2642264	CompoundStatement		2018:21:43981:43981	2630490	1					
ANR	2642265	ExpressionStatement	ao -> o = 0xaff30080	3311:4:69846:69864	2630490	0	True				
ANR	2642266	AssignmentExpression	ao -> o = 0xaff30080		2630490	0		=			
ANR	2642267	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642268	Identifier	ao		2630490	0					
ANR	2642269	Identifier	o		2630490	1					
ANR	2642270	PrimaryExpression	0xaff30080		2630490	1					
ANR	2642271	ReturnStatement	return 4 ;	3312:4:69870:69878	2630490	1	True				
ANR	2642272	PrimaryExpression	4		2630490	0					
ANR	2642273	ExpressionStatement	ao -> o = 0x00bf	3314:3:69888:69902	2630490	1	True				
ANR	2642274	AssignmentExpression	ao -> o = 0x00bf		2630490	0		=			
ANR	2642275	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642276	Identifier	ao		2630490	0					
ANR	2642277	Identifier	o		2630490	1					
ANR	2642278	PrimaryExpression	0x00bf		2630490	1					
ANR	2642279	ReturnStatement	return 2 ;	3315:3:69907:69915	2630490	2	True				
ANR	2642280	PrimaryExpression	2		2630490	0					
ANR	2642281	BreakStatement	break ;	3317:3:69932:69937	2630490	2	True				
ANR	2642282	Label	default :	3318:2:69941:69948	2630490	3	True				
ANR	2642283	Identifier	default		2630490	0					
ANR	2642284	ReturnStatement	return - 1 ;	3319:3:69953:69962	2630490	4	True				
ANR	2642285	UnaryOperationExpression	- 1		2630490	0					
ANR	2642286	UnaryOperator	-		2630490	0					
ANR	2642287	PrimaryExpression	1		2630490	1					
ANR	2642288	ElseStatement	else		2630490	0					
ANR	2642289	IfStatement	"if ( ( m = opmask ( ao -> op , ""orn"" , S_BIT ) ) )"		2630490	0					
ANR	2642290	Condition	"m = opmask ( ao -> op , ""orn"" , S_BIT )"	3322:5:69981:70015	2630490	0	True				
ANR	2642291	AssignmentExpression	"m = opmask ( ao -> op , ""orn"" , S_BIT )"		2630490	0		=			
ANR	2642292	Identifier	m		2630490	0					
ANR	2642293	CallExpression	"opmask ( ao -> op , ""orn"" , S_BIT )"		2630490	1					
ANR	2642294	Callee	opmask		2630490	0					
ANR	2642295	Identifier	opmask		2630490	0					
ANR	2642296	ArgumentList	ao -> op		2630490	1					
ANR	2642297	Argument	ao -> op		2630490	0					
ANR	2642298	PtrMemberAccess	ao -> op		2630490	0					
ANR	2642299	Identifier	ao		2630490	0					
ANR	2642300	Identifier	op		2630490	1					
ANR	2642301	Argument	"""orn"""		2630490	1					
ANR	2642302	PrimaryExpression	"""orn"""		2630490	0					
ANR	2642303	Argument	S_BIT		2630490	2					
ANR	2642304	Identifier	S_BIT		2630490	0					
ANR	2642305	CompoundStatement		2031:2:44163:44197	2630490	1					
ANR	2642306	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3323:2:70022:70056	2630490	0	True				
ANR	2642307	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2642308	IdentifierDeclType	ut64		2630490	0					
ANR	2642309	Identifier	argt		2630490	1					
ANR	2642310	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2642311	Identifier	argt		2630490	0					
ANR	2642312	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2642313	Callee	thumb_selector		2630490	0					
ANR	2642314	Identifier	thumb_selector		2630490	0					
ANR	2642315	ArgumentList	ao -> a		2630490	1					
ANR	2642316	Argument	ao -> a		2630490	0					
ANR	2642317	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642318	Identifier	ao		2630490	0					
ANR	2642319	Identifier	a		2630490	1					
ANR	2642320	SwitchStatement	switch ( argt )		2630490	1					
ANR	2642321	Condition	argt	3324:10:70068:70071	2630490	0	True				
ANR	2642322	Identifier	argt		2630490	0					
ANR	2642323	CompoundStatement		2032:16:44215:44215	2630490	1					
ANR	2642324	Label	case THUMB_REG_CONST :	3325:2:70078:70098	2630490	0	True				
ANR	2642325	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2642326	CompoundStatement		2033:24:44241:44241	2630490	1					
ANR	2642327	ExpressionStatement	std_opt_2 ( ao )	3326:3:70105:70119	2630490	0	True				
ANR	2642328	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2642329	Callee	std_opt_2		2630490	0					
ANR	2642330	Identifier	std_opt_2		2630490	0					
ANR	2642331	ArgumentList	ao		2630490	1					
ANR	2642332	Argument	ao		2630490	0					
ANR	2642333	Identifier	ao		2630490	0					
ANR	2642334	Label	case THUMB_REG_REG_CONST :	3329:2:70165:70189	2630490	2	True				
ANR	2642335	Identifier	THUMB_REG_REG_CONST		2630490	0					
ANR	2642336	CompoundStatement		2039:3:44353:44387	2630490	3					
ANR	2642337	ExpressionStatement	err = false	3330:3:70196:70207	2630490	0	True				
ANR	2642338	AssignmentExpression	err = false		2630490	0		=			
ANR	2642339	Identifier	err		2630490	0					
ANR	2642340	Identifier	false		2630490	1					
ANR	2642341	IdentifierDeclStatement	ut32 num = getthimmed12 ( ao -> a [ 2 ] ) ;	3331:3:70212:70246	2630490	1	True				
ANR	2642342	IdentifierDecl	num = getthimmed12 ( ao -> a [ 2 ] )		2630490	0					
ANR	2642343	IdentifierDeclType	ut32		2630490	0					
ANR	2642344	Identifier	num		2630490	1					
ANR	2642345	AssignmentExpression	num = getthimmed12 ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2642346	Identifier	num		2630490	0					
ANR	2642347	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		2630490	1					
ANR	2642348	Callee	getthimmed12		2630490	0					
ANR	2642349	Identifier	getthimmed12		2630490	0					
ANR	2642350	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2642351	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2642352	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2642353	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642354	Identifier	ao		2630490	0					
ANR	2642355	Identifier	a		2630490	1					
ANR	2642356	PrimaryExpression	2		2630490	1					
ANR	2642357	IfStatement	if ( err )		2630490	2					
ANR	2642358	Condition	err	3333:7:70256:70258	2630490	0	True				
ANR	2642359	Identifier	err		2630490	0					
ANR	2642360	CompoundStatement		2041:12:44402:44402	2630490	1					
ANR	2642361	ReturnStatement	return - 1 ;	3334:4:70267:70276	2630490	0	True				
ANR	2642362	UnaryOperationExpression	- 1		2630490	0					
ANR	2642363	UnaryOperator	-		2630490	0					
ANR	2642364	PrimaryExpression	1		2630490	1					
ANR	2642365	ExpressionStatement	ao -> o = 0x60f00000	3337:3:70287:70305	2630490	3	True				
ANR	2642366	AssignmentExpression	ao -> o = 0x60f00000		2630490	0		=			
ANR	2642367	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642368	Identifier	ao		2630490	0					
ANR	2642369	Identifier	o		2630490	1					
ANR	2642370	PrimaryExpression	0x60f00000		2630490	1					
ANR	2642371	ExpressionStatement	ao -> o |= num	3338:3:70310:70322	2630490	4	True				
ANR	2642372	AssignmentExpression	ao -> o |= num		2630490	0		|=			
ANR	2642373	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642374	Identifier	ao		2630490	0					
ANR	2642375	Identifier	o		2630490	1					
ANR	2642376	Identifier	num		2630490	1					
ANR	2642377	ReturnStatement	"return ( std_32bit_2reg ( ao , m , false ) ) ;"	3339:3:70327:70365	2630490	5	True				
ANR	2642378	CallExpression	"std_32bit_2reg ( ao , m , false )"		2630490	0					
ANR	2642379	Callee	std_32bit_2reg		2630490	0					
ANR	2642380	Identifier	std_32bit_2reg		2630490	0					
ANR	2642381	ArgumentList	ao		2630490	1					
ANR	2642382	Argument	ao		2630490	0					
ANR	2642383	Identifier	ao		2630490	0					
ANR	2642384	Argument	m		2630490	1					
ANR	2642385	Identifier	m		2630490	0					
ANR	2642386	Argument	false		2630490	2					
ANR	2642387	Identifier	false		2630490	0					
ANR	2642388	BreakStatement	break ;	3341:3:70382:70387	2630490	4	True				
ANR	2642389	Label	case THUMB_REG_REG :	3342:2:70391:70409	2630490	5	True				
ANR	2642390	Identifier	THUMB_REG_REG		2630490	0					
ANR	2642391	CompoundStatement		2050:22:44552:44552	2630490	6					
ANR	2642392	ExpressionStatement	std_opt_2 ( ao )	3343:3:70416:70430	2630490	0	True				
ANR	2642393	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2642394	Callee	std_opt_2		2630490	0					
ANR	2642395	Identifier	std_opt_2		2630490	0					
ANR	2642396	ArgumentList	ao		2630490	1					
ANR	2642397	Argument	ao		2630490	0					
ANR	2642398	Identifier	ao		2630490	0					
ANR	2642399	Label	case THUMB_REG_REG_REG :	3346:2:70476:70498	2630490	7	True				
ANR	2642400	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2642401	CompoundStatement		2054:26:44641:44641	2630490	8					
ANR	2642402	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	3347:3:70505:70523	2630490	0	True				
ANR	2642403	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		2630490	0		=			
ANR	2642404	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2642405	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642406	Identifier	ao		2630490	0					
ANR	2642407	Identifier	a		2630490	1					
ANR	2642408	PrimaryExpression	3		2630490	1					
ANR	2642409	PrimaryExpression	"""lsl 0"""		2630490	1					
ANR	2642410	Label	case THUMB_REG_REG_SHIFT :	3350:2:70569:70593	2630490	9	True				
ANR	2642411	Identifier	THUMB_REG_REG_SHIFT		2630490	0					
ANR	2642412	CompoundStatement		2058:28:44736:44736	2630490	10					
ANR	2642413	IfStatement	if ( ao -> a [ 3 ] == NULL )		2630490	0					
ANR	2642414	Condition	ao -> a [ 3 ] == NULL	3351:7:70604:70619	2630490	0	True				
ANR	2642415	EqualityExpression	ao -> a [ 3 ] == NULL		2630490	0		==			
ANR	2642416	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2642417	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642418	Identifier	ao		2630490	0					
ANR	2642419	Identifier	a		2630490	1					
ANR	2642420	PrimaryExpression	3		2630490	1					
ANR	2642421	Identifier	NULL		2630490	1					
ANR	2642422	CompoundStatement		2059:25:44763:44763	2630490	1					
ANR	2642423	ExpressionStatement	std_opt_3 ( ao )	3352:4:70650:70664	2630490	0	True				
ANR	2642424	CallExpression	std_opt_3 ( ao )		2630490	0					
ANR	2642425	Callee	std_opt_3		2630490	0					
ANR	2642426	Identifier	std_opt_3		2630490	0					
ANR	2642427	ArgumentList	ao		2630490	1					
ANR	2642428	Argument	ao		2630490	0					
ANR	2642429	Identifier	ao		2630490	0					
ANR	2642430	Label	case THUMB_REG_REG_REG_SHIFT :	3356:2:70715:70743	2630490	11	True				
ANR	2642431	Identifier	THUMB_REG_REG_REG_SHIFT		2630490	0					
ANR	2642432	CompoundStatement		2064:32:44886:44886	2630490	12					
ANR	2642433	ExpressionStatement	ao -> o = 0x60ea0000	3357:3:70750:70768	2630490	0	True				
ANR	2642434	AssignmentExpression	ao -> o = 0x60ea0000		2630490	0		=			
ANR	2642435	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642436	Identifier	ao		2630490	0					
ANR	2642437	Identifier	o		2630490	1					
ANR	2642438	PrimaryExpression	0x60ea0000		2630490	1					
ANR	2642439	ReturnStatement	"return std_32bit_3reg ( ao , m , true ) ;"	3358:3:70773:70808	2630490	1	True				
ANR	2642440	CallExpression	"std_32bit_3reg ( ao , m , true )"		2630490	0					
ANR	2642441	Callee	std_32bit_3reg		2630490	0					
ANR	2642442	Identifier	std_32bit_3reg		2630490	0					
ANR	2642443	ArgumentList	ao		2630490	1					
ANR	2642444	Argument	ao		2630490	0					
ANR	2642445	Identifier	ao		2630490	0					
ANR	2642446	Argument	m		2630490	1					
ANR	2642447	Identifier	m		2630490	0					
ANR	2642448	Argument	true		2630490	2					
ANR	2642449	Identifier	true		2630490	0					
ANR	2642450	BreakStatement	break ;	3360:3:70825:70830	2630490	13	True				
ANR	2642451	Label	default :	3361:2:70834:70841	2630490	14	True				
ANR	2642452	Identifier	default		2630490	0					
ANR	2642453	ReturnStatement	return - 1 ;	3362:3:70846:70855	2630490	15	True				
ANR	2642454	UnaryOperationExpression	- 1		2630490	0					
ANR	2642455	UnaryOperator	-		2630490	0					
ANR	2642456	PrimaryExpression	1		2630490	1					
ANR	2642457	ElseStatement	else		2630490	0					
ANR	2642458	IfStatement	"if ( ( m = opmask ( ao -> op , ""orr"" , S_BIT ) ) )"		2630490	0					
ANR	2642459	Condition	"m = opmask ( ao -> op , ""orr"" , S_BIT )"	3365:5:70875:70909	2630490	0	True				
ANR	2642460	AssignmentExpression	"m = opmask ( ao -> op , ""orr"" , S_BIT )"		2630490	0		=			
ANR	2642461	Identifier	m		2630490	0					
ANR	2642462	CallExpression	"opmask ( ao -> op , ""orr"" , S_BIT )"		2630490	1					
ANR	2642463	Callee	opmask		2630490	0					
ANR	2642464	Identifier	opmask		2630490	0					
ANR	2642465	ArgumentList	ao -> op		2630490	1					
ANR	2642466	Argument	ao -> op		2630490	0					
ANR	2642467	PtrMemberAccess	ao -> op		2630490	0					
ANR	2642468	Identifier	ao		2630490	0					
ANR	2642469	Identifier	op		2630490	1					
ANR	2642470	Argument	"""orr"""		2630490	1					
ANR	2642471	PrimaryExpression	"""orr"""		2630490	0					
ANR	2642472	Argument	S_BIT		2630490	2					
ANR	2642473	Identifier	S_BIT		2630490	0					
ANR	2642474	CompoundStatement		2074:2:45057:45091	2630490	1					
ANR	2642475	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3366:2:70916:70950	2630490	0	True				
ANR	2642476	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2642477	IdentifierDeclType	ut64		2630490	0					
ANR	2642478	Identifier	argt		2630490	1					
ANR	2642479	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2642480	Identifier	argt		2630490	0					
ANR	2642481	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2642482	Callee	thumb_selector		2630490	0					
ANR	2642483	Identifier	thumb_selector		2630490	0					
ANR	2642484	ArgumentList	ao -> a		2630490	1					
ANR	2642485	Argument	ao -> a		2630490	0					
ANR	2642486	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642487	Identifier	ao		2630490	0					
ANR	2642488	Identifier	a		2630490	1					
ANR	2642489	SwitchStatement	switch ( argt )		2630490	1					
ANR	2642490	Condition	argt	3367:10:70962:70965	2630490	0	True				
ANR	2642491	Identifier	argt		2630490	0					
ANR	2642492	CompoundStatement		2075:16:45109:45109	2630490	1					
ANR	2642493	Label	case THUMB_REG_CONST :	3368:2:70972:70992	2630490	0	True				
ANR	2642494	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2642495	CompoundStatement		2076:24:45135:45135	2630490	1					
ANR	2642496	ExpressionStatement	std_opt_2 ( ao )	3369:3:70999:71013	2630490	0	True				
ANR	2642497	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2642498	Callee	std_opt_2		2630490	0					
ANR	2642499	Identifier	std_opt_2		2630490	0					
ANR	2642500	ArgumentList	ao		2630490	1					
ANR	2642501	Argument	ao		2630490	0					
ANR	2642502	Identifier	ao		2630490	0					
ANR	2642503	Label	case THUMB_REG_REG_CONST :	3372:2:71059:71083	2630490	2	True				
ANR	2642504	Identifier	THUMB_REG_REG_CONST		2630490	0					
ANR	2642505	CompoundStatement		2082:3:45247:45281	2630490	3					
ANR	2642506	ExpressionStatement	err = false	3373:3:71090:71101	2630490	0	True				
ANR	2642507	AssignmentExpression	err = false		2630490	0		=			
ANR	2642508	Identifier	err		2630490	0					
ANR	2642509	Identifier	false		2630490	1					
ANR	2642510	IdentifierDeclStatement	ut32 num = getthimmed12 ( ao -> a [ 2 ] ) ;	3374:3:71106:71140	2630490	1	True				
ANR	2642511	IdentifierDecl	num = getthimmed12 ( ao -> a [ 2 ] )		2630490	0					
ANR	2642512	IdentifierDeclType	ut32		2630490	0					
ANR	2642513	Identifier	num		2630490	1					
ANR	2642514	AssignmentExpression	num = getthimmed12 ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2642515	Identifier	num		2630490	0					
ANR	2642516	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		2630490	1					
ANR	2642517	Callee	getthimmed12		2630490	0					
ANR	2642518	Identifier	getthimmed12		2630490	0					
ANR	2642519	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2642520	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2642521	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2642522	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642523	Identifier	ao		2630490	0					
ANR	2642524	Identifier	a		2630490	1					
ANR	2642525	PrimaryExpression	2		2630490	1					
ANR	2642526	IfStatement	if ( err )		2630490	2					
ANR	2642527	Condition	err	3376:7:71150:71152	2630490	0	True				
ANR	2642528	Identifier	err		2630490	0					
ANR	2642529	CompoundStatement		2084:12:45296:45296	2630490	1					
ANR	2642530	ReturnStatement	return - 1 ;	3377:4:71161:71170	2630490	0	True				
ANR	2642531	UnaryOperationExpression	- 1		2630490	0					
ANR	2642532	UnaryOperator	-		2630490	0					
ANR	2642533	PrimaryExpression	1		2630490	1					
ANR	2642534	ExpressionStatement	ao -> o = 0x40f00000	3380:3:71181:71199	2630490	3	True				
ANR	2642535	AssignmentExpression	ao -> o = 0x40f00000		2630490	0		=			
ANR	2642536	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642537	Identifier	ao		2630490	0					
ANR	2642538	Identifier	o		2630490	1					
ANR	2642539	PrimaryExpression	0x40f00000		2630490	1					
ANR	2642540	ExpressionStatement	ao -> o |= num	3381:3:71204:71216	2630490	4	True				
ANR	2642541	AssignmentExpression	ao -> o |= num		2630490	0		|=			
ANR	2642542	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642543	Identifier	ao		2630490	0					
ANR	2642544	Identifier	o		2630490	1					
ANR	2642545	Identifier	num		2630490	1					
ANR	2642546	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	3382:3:71221:71257	2630490	5	True				
ANR	2642547	CallExpression	"std_32bit_2reg ( ao , m , false )"		2630490	0					
ANR	2642548	Callee	std_32bit_2reg		2630490	0					
ANR	2642549	Identifier	std_32bit_2reg		2630490	0					
ANR	2642550	ArgumentList	ao		2630490	1					
ANR	2642551	Argument	ao		2630490	0					
ANR	2642552	Identifier	ao		2630490	0					
ANR	2642553	Argument	m		2630490	1					
ANR	2642554	Identifier	m		2630490	0					
ANR	2642555	Argument	false		2630490	2					
ANR	2642556	Identifier	false		2630490	0					
ANR	2642557	BreakStatement	break ;	3384:3:71274:71279	2630490	4	True				
ANR	2642558	Label	case THUMB_REG_REG :	3385:2:71283:71301	2630490	5	True				
ANR	2642559	Identifier	THUMB_REG_REG		2630490	0					
ANR	2642560	CompoundStatement		2093:22:45444:45444	2630490	6					
ANR	2642561	ExpressionStatement	ao -> o = 0x0043	3386:3:71308:71322	2630490	0	True				
ANR	2642562	AssignmentExpression	ao -> o = 0x0043		2630490	0		=			
ANR	2642563	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642564	Identifier	ao		2630490	0					
ANR	2642565	Identifier	o		2630490	1					
ANR	2642566	PrimaryExpression	0x0043		2630490	1					
ANR	2642567	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	1					
ANR	2642568	Condition	"std_16bit_2reg ( ao , m )"	3387:7:71331:71352	2630490	0	True				
ANR	2642569	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2642570	Callee	std_16bit_2reg		2630490	0					
ANR	2642571	Identifier	std_16bit_2reg		2630490	0					
ANR	2642572	ArgumentList	ao		2630490	1					
ANR	2642573	Argument	ao		2630490	0					
ANR	2642574	Identifier	ao		2630490	0					
ANR	2642575	Argument	m		2630490	1					
ANR	2642576	Identifier	m		2630490	0					
ANR	2642577	CompoundStatement		2095:31:45496:45496	2630490	1					
ANR	2642578	ReturnStatement	return 2 ;	3388:4:71361:71369	2630490	0	True				
ANR	2642579	PrimaryExpression	2		2630490	0					
ANR	2642580	ExpressionStatement	std_opt_2 ( ao )	3390:3:71379:71393	2630490	2	True				
ANR	2642581	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2642582	Callee	std_opt_2		2630490	0					
ANR	2642583	Identifier	std_opt_2		2630490	0					
ANR	2642584	ArgumentList	ao		2630490	1					
ANR	2642585	Argument	ao		2630490	0					
ANR	2642586	Identifier	ao		2630490	0					
ANR	2642587	Label	case THUMB_REG_REG_REG :	3393:2:71439:71461	2630490	7	True				
ANR	2642588	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2642589	CompoundStatement		2101:26:45604:45604	2630490	8					
ANR	2642590	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	3394:3:71468:71486	2630490	0	True				
ANR	2642591	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		2630490	0		=			
ANR	2642592	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2642593	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642594	Identifier	ao		2630490	0					
ANR	2642595	Identifier	a		2630490	1					
ANR	2642596	PrimaryExpression	3		2630490	1					
ANR	2642597	PrimaryExpression	"""lsl 0"""		2630490	1					
ANR	2642598	Label	case THUMB_REG_REG_SHIFT :	3397:2:71532:71556	2630490	9	True				
ANR	2642599	Identifier	THUMB_REG_REG_SHIFT		2630490	0					
ANR	2642600	CompoundStatement		2105:28:45699:45699	2630490	10					
ANR	2642601	IfStatement	if ( ao -> a [ 3 ] == NULL )		2630490	0					
ANR	2642602	Condition	ao -> a [ 3 ] == NULL	3398:7:71567:71582	2630490	0	True				
ANR	2642603	EqualityExpression	ao -> a [ 3 ] == NULL		2630490	0		==			
ANR	2642604	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2642605	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642606	Identifier	ao		2630490	0					
ANR	2642607	Identifier	a		2630490	1					
ANR	2642608	PrimaryExpression	3		2630490	1					
ANR	2642609	Identifier	NULL		2630490	1					
ANR	2642610	CompoundStatement		2106:25:45726:45726	2630490	1					
ANR	2642611	ExpressionStatement	std_opt_3 ( ao )	3399:4:71613:71627	2630490	0	True				
ANR	2642612	CallExpression	std_opt_3 ( ao )		2630490	0					
ANR	2642613	Callee	std_opt_3		2630490	0					
ANR	2642614	Identifier	std_opt_3		2630490	0					
ANR	2642615	ArgumentList	ao		2630490	1					
ANR	2642616	Argument	ao		2630490	0					
ANR	2642617	Identifier	ao		2630490	0					
ANR	2642618	Label	case THUMB_REG_REG_REG_SHIFT :	3403:2:71678:71706	2630490	11	True				
ANR	2642619	Identifier	THUMB_REG_REG_REG_SHIFT		2630490	0					
ANR	2642620	CompoundStatement		2111:32:45849:45849	2630490	12					
ANR	2642621	ExpressionStatement	ao -> o = 0x40ea0000	3404:3:71713:71731	2630490	0	True				
ANR	2642622	AssignmentExpression	ao -> o = 0x40ea0000		2630490	0		=			
ANR	2642623	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642624	Identifier	ao		2630490	0					
ANR	2642625	Identifier	o		2630490	1					
ANR	2642626	PrimaryExpression	0x40ea0000		2630490	1					
ANR	2642627	ReturnStatement	"return ( std_32bit_3reg ( ao , m , true ) ) ;"	3405:3:71736:71773	2630490	1	True				
ANR	2642628	CallExpression	"std_32bit_3reg ( ao , m , true )"		2630490	0					
ANR	2642629	Callee	std_32bit_3reg		2630490	0					
ANR	2642630	Identifier	std_32bit_3reg		2630490	0					
ANR	2642631	ArgumentList	ao		2630490	1					
ANR	2642632	Argument	ao		2630490	0					
ANR	2642633	Identifier	ao		2630490	0					
ANR	2642634	Argument	m		2630490	1					
ANR	2642635	Identifier	m		2630490	0					
ANR	2642636	Argument	true		2630490	2					
ANR	2642637	Identifier	true		2630490	0					
ANR	2642638	BreakStatement	break ;	3407:3:71790:71795	2630490	13	True				
ANR	2642639	Label	default :	3408:2:71799:71806	2630490	14	True				
ANR	2642640	Identifier	default		2630490	0					
ANR	2642641	ReturnStatement	return - 1 ;	3409:3:71811:71820	2630490	15	True				
ANR	2642642	UnaryOperationExpression	- 1		2630490	0					
ANR	2642643	UnaryOperator	-		2630490	0					
ANR	2642644	PrimaryExpression	1		2630490	1					
ANR	2642645	ElseStatement	else		2630490	0					
ANR	2642646	IfStatement	"if ( ( m = opmask ( ao -> op , ""pkh"" , BT_BIT | TB_BIT ) ) )"		2630490	0					
ANR	2642647	Condition	"m = opmask ( ao -> op , ""pkh"" , BT_BIT | TB_BIT )"	3412:5:71840:71884	2630490	0	True				
ANR	2642648	AssignmentExpression	"m = opmask ( ao -> op , ""pkh"" , BT_BIT | TB_BIT )"		2630490	0		=			
ANR	2642649	Identifier	m		2630490	0					
ANR	2642650	CallExpression	"opmask ( ao -> op , ""pkh"" , BT_BIT | TB_BIT )"		2630490	1					
ANR	2642651	Callee	opmask		2630490	0					
ANR	2642652	Identifier	opmask		2630490	0					
ANR	2642653	ArgumentList	ao -> op		2630490	1					
ANR	2642654	Argument	ao -> op		2630490	0					
ANR	2642655	PtrMemberAccess	ao -> op		2630490	0					
ANR	2642656	Identifier	ao		2630490	0					
ANR	2642657	Identifier	op		2630490	1					
ANR	2642658	Argument	"""pkh"""		2630490	1					
ANR	2642659	PrimaryExpression	"""pkh"""		2630490	0					
ANR	2642660	Argument	BT_BIT | TB_BIT		2630490	2					
ANR	2642661	InclusiveOrExpression	BT_BIT | TB_BIT		2630490	0		|			
ANR	2642662	Identifier	BT_BIT		2630490	0					
ANR	2642663	Identifier	TB_BIT		2630490	1					
ANR	2642664	CompoundStatement		2121:2:46032:46066	2630490	1					
ANR	2642665	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3413:2:71891:71925	2630490	0	True				
ANR	2642666	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2642667	IdentifierDeclType	ut64		2630490	0					
ANR	2642668	Identifier	argt		2630490	1					
ANR	2642669	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2642670	Identifier	argt		2630490	0					
ANR	2642671	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2642672	Callee	thumb_selector		2630490	0					
ANR	2642673	Identifier	thumb_selector		2630490	0					
ANR	2642674	ArgumentList	ao -> a		2630490	1					
ANR	2642675	Argument	ao -> a		2630490	0					
ANR	2642676	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642677	Identifier	ao		2630490	0					
ANR	2642678	Identifier	a		2630490	1					
ANR	2642679	SwitchStatement	switch ( argt )		2630490	1					
ANR	2642680	Condition	argt	3414:10:71937:71940	2630490	0	True				
ANR	2642681	Identifier	argt		2630490	0					
ANR	2642682	CompoundStatement		2122:16:46084:46084	2630490	1					
ANR	2642683	Label	case THUMB_REG_REG :	3415:2:71947:71965	2630490	0	True				
ANR	2642684	Identifier	THUMB_REG_REG		2630490	0					
ANR	2642685	CompoundStatement		2123:22:46108:46108	2630490	1					
ANR	2642686	ExpressionStatement	std_opt_2 ( ao )	3416:3:71972:71986	2630490	0	True				
ANR	2642687	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2642688	Callee	std_opt_2		2630490	0					
ANR	2642689	Identifier	std_opt_2		2630490	0					
ANR	2642690	ArgumentList	ao		2630490	1					
ANR	2642691	Argument	ao		2630490	0					
ANR	2642692	Identifier	ao		2630490	0					
ANR	2642693	Label	case THUMB_REG_REG_REG :	3419:2:72032:72054	2630490	2	True				
ANR	2642694	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2642695	CompoundStatement		2127:26:46197:46197	2630490	3					
ANR	2642696	IfStatement	if ( m & TB_BIT )		2630490	0					
ANR	2642697	Condition	m & TB_BIT	3420:7:72065:72074	2630490	0	True				
ANR	2642698	BitAndExpression	m & TB_BIT		2630490	0		&			
ANR	2642699	Identifier	m		2630490	0					
ANR	2642700	Identifier	TB_BIT		2630490	1					
ANR	2642701	CompoundStatement		2128:19:46218:46218	2630490	1					
ANR	2642702	ExpressionStatement	"ao -> a [ 3 ] = ""asr 0"""	3421:4:72083:72101	2630490	0	True				
ANR	2642703	AssignmentExpression	"ao -> a [ 3 ] = ""asr 0"""		2630490	0		=			
ANR	2642704	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2642705	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642706	Identifier	ao		2630490	0					
ANR	2642707	Identifier	a		2630490	1					
ANR	2642708	PrimaryExpression	3		2630490	1					
ANR	2642709	PrimaryExpression	"""asr 0"""		2630490	1					
ANR	2642710	ElseStatement	else		2630490	0					
ANR	2642711	IfStatement	if ( m & BT_BIT )		2630490	0					
ANR	2642712	Condition	m & BT_BIT	3423:7:72120:72129	2630490	0	True				
ANR	2642713	BitAndExpression	m & BT_BIT		2630490	0		&			
ANR	2642714	Identifier	m		2630490	0					
ANR	2642715	Identifier	BT_BIT		2630490	1					
ANR	2642716	CompoundStatement		2131:19:46273:46273	2630490	1					
ANR	2642717	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	3424:4:72138:72156	2630490	0	True				
ANR	2642718	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		2630490	0		=			
ANR	2642719	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2642720	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642721	Identifier	ao		2630490	0					
ANR	2642722	Identifier	a		2630490	1					
ANR	2642723	PrimaryExpression	3		2630490	1					
ANR	2642724	PrimaryExpression	"""lsl 0"""		2630490	1					
ANR	2642725	ElseStatement	else		2630490	0					
ANR	2642726	CompoundStatement		2133:10:46309:46309	2630490	0					
ANR	2642727	ReturnStatement	return - 1 ;	3426:4:72174:72183	2630490	0	True				
ANR	2642728	UnaryOperationExpression	- 1		2630490	0					
ANR	2642729	UnaryOperator	-		2630490	0					
ANR	2642730	PrimaryExpression	1		2630490	1					
ANR	2642731	Label	case THUMB_REG_REG_SHIFT :	3430:2:72234:72258	2630490	4	True				
ANR	2642732	Identifier	THUMB_REG_REG_SHIFT		2630490	0					
ANR	2642733	CompoundStatement		2138:28:46401:46401	2630490	5					
ANR	2642734	IfStatement	if ( ao -> a [ 3 ] == NULL )		2630490	0					
ANR	2642735	Condition	ao -> a [ 3 ] == NULL	3431:7:72269:72284	2630490	0	True				
ANR	2642736	EqualityExpression	ao -> a [ 3 ] == NULL		2630490	0		==			
ANR	2642737	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2642738	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642739	Identifier	ao		2630490	0					
ANR	2642740	Identifier	a		2630490	1					
ANR	2642741	PrimaryExpression	3		2630490	1					
ANR	2642742	Identifier	NULL		2630490	1					
ANR	2642743	CompoundStatement		2139:25:46428:46428	2630490	1					
ANR	2642744	ExpressionStatement	std_opt_3 ( ao )	3432:4:72315:72329	2630490	0	True				
ANR	2642745	CallExpression	std_opt_3 ( ao )		2630490	0					
ANR	2642746	Callee	std_opt_3		2630490	0					
ANR	2642747	Identifier	std_opt_3		2630490	0					
ANR	2642748	ArgumentList	ao		2630490	1					
ANR	2642749	Argument	ao		2630490	0					
ANR	2642750	Identifier	ao		2630490	0					
ANR	2642751	Label	case THUMB_REG_REG_REG_SHIFT :	3436:2:72380:72408	2630490	6	True				
ANR	2642752	Identifier	THUMB_REG_REG_REG_SHIFT		2630490	0					
ANR	2642753	CompoundStatement		2145:3:46556:46594	2630490	7					
ANR	2642754	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 3 ] ) ;	3437:3:72415:72453	2630490	0	True				
ANR	2642755	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 3 ] )		2630490	0					
ANR	2642756	IdentifierDeclType	ut32		2630490	0					
ANR	2642757	Identifier	shift		2630490	1					
ANR	2642758	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2642759	Identifier	shift		2630490	0					
ANR	2642760	CallExpression	thumb_getshift ( ao -> a [ 3 ] )		2630490	1					
ANR	2642761	Callee	thumb_getshift		2630490	0					
ANR	2642762	Identifier	thumb_getshift		2630490	0					
ANR	2642763	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2642764	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2642765	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2642766	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642767	Identifier	ao		2630490	0					
ANR	2642768	Identifier	a		2630490	1					
ANR	2642769	PrimaryExpression	3		2630490	1					
ANR	2642770	IfStatement	if ( ( ( m & TB_BIT ) && ( ( shift & 0x00003000 ) != 0x00002000 ) ) || ( ( m & BT_BIT ) && ( ( shift & 0x00003000 ) != 0 ) ) || ( ( m & ( TB_BIT | BT_BIT ) ) == 0 ) )		2630490	1					
ANR	2642771	Condition	( ( m & TB_BIT ) && ( ( shift & 0x00003000 ) != 0x00002000 ) ) || ( ( m & BT_BIT ) && ( ( shift & 0x00003000 ) != 0 ) ) || ( ( m & ( TB_BIT | BT_BIT ) ) == 0 )	3439:7:72463:72599	2630490	0	True				
ANR	2642772	OrExpression	( ( m & TB_BIT ) && ( ( shift & 0x00003000 ) != 0x00002000 ) ) || ( ( m & BT_BIT ) && ( ( shift & 0x00003000 ) != 0 ) ) || ( ( m & ( TB_BIT | BT_BIT ) ) == 0 )		2630490	0		||			
ANR	2642773	AndExpression	( m & TB_BIT ) && ( ( shift & 0x00003000 ) != 0x00002000 )		2630490	0		&&			
ANR	2642774	BitAndExpression	m & TB_BIT		2630490	0		&			
ANR	2642775	Identifier	m		2630490	0					
ANR	2642776	Identifier	TB_BIT		2630490	1					
ANR	2642777	EqualityExpression	( shift & 0x00003000 ) != 0x00002000		2630490	1		!=			
ANR	2642778	BitAndExpression	shift & 0x00003000		2630490	0		&			
ANR	2642779	Identifier	shift		2630490	0					
ANR	2642780	PrimaryExpression	0x00003000		2630490	1					
ANR	2642781	PrimaryExpression	0x00002000		2630490	1					
ANR	2642782	OrExpression	( ( m & BT_BIT ) && ( ( shift & 0x00003000 ) != 0 ) ) || ( ( m & ( TB_BIT | BT_BIT ) ) == 0 )		2630490	1		||			
ANR	2642783	AndExpression	( m & BT_BIT ) && ( ( shift & 0x00003000 ) != 0 )		2630490	0		&&			
ANR	2642784	BitAndExpression	m & BT_BIT		2630490	0		&			
ANR	2642785	Identifier	m		2630490	0					
ANR	2642786	Identifier	BT_BIT		2630490	1					
ANR	2642787	EqualityExpression	( shift & 0x00003000 ) != 0		2630490	1		!=			
ANR	2642788	BitAndExpression	shift & 0x00003000		2630490	0		&			
ANR	2642789	Identifier	shift		2630490	0					
ANR	2642790	PrimaryExpression	0x00003000		2630490	1					
ANR	2642791	PrimaryExpression	0		2630490	1					
ANR	2642792	EqualityExpression	( m & ( TB_BIT | BT_BIT ) ) == 0		2630490	1		==			
ANR	2642793	BitAndExpression	m & ( TB_BIT | BT_BIT )		2630490	0		&			
ANR	2642794	Identifier	m		2630490	0					
ANR	2642795	InclusiveOrExpression	TB_BIT | BT_BIT		2630490	1		|			
ANR	2642796	Identifier	TB_BIT		2630490	0					
ANR	2642797	Identifier	BT_BIT		2630490	1					
ANR	2642798	PrimaryExpression	0		2630490	1					
ANR	2642799	CompoundStatement		2147:146:46743:46743	2630490	1					
ANR	2642800	ReturnStatement	return - 1 ;	3440:4:72609:72618	2630490	0	True				
ANR	2642801	UnaryOperationExpression	- 1		2630490	0					
ANR	2642802	UnaryOperator	-		2630490	0					
ANR	2642803	PrimaryExpression	1		2630490	1					
ANR	2642804	ExpressionStatement	ao -> o = 0xc0ea0000	3443:3:72629:72647	2630490	2	True				
ANR	2642805	AssignmentExpression	ao -> o = 0xc0ea0000		2630490	0		=			
ANR	2642806	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642807	Identifier	ao		2630490	0					
ANR	2642808	Identifier	o		2630490	1					
ANR	2642809	PrimaryExpression	0xc0ea0000		2630490	1					
ANR	2642810	ReturnStatement	"return ( std_32bit_3reg ( ao , m , true ) ) ;"	3444:3:72652:72689	2630490	3	True				
ANR	2642811	CallExpression	"std_32bit_3reg ( ao , m , true )"		2630490	0					
ANR	2642812	Callee	std_32bit_3reg		2630490	0					
ANR	2642813	Identifier	std_32bit_3reg		2630490	0					
ANR	2642814	ArgumentList	ao		2630490	1					
ANR	2642815	Argument	ao		2630490	0					
ANR	2642816	Identifier	ao		2630490	0					
ANR	2642817	Argument	m		2630490	1					
ANR	2642818	Identifier	m		2630490	0					
ANR	2642819	Argument	true		2630490	2					
ANR	2642820	Identifier	true		2630490	0					
ANR	2642821	BreakStatement	break ;	3446:3:72706:72711	2630490	8	True				
ANR	2642822	Label	default :	3447:2:72715:72722	2630490	9	True				
ANR	2642823	Identifier	default		2630490	0					
ANR	2642824	ReturnStatement	return - 1 ;	3448:3:72727:72736	2630490	10	True				
ANR	2642825	UnaryOperationExpression	- 1		2630490	0					
ANR	2642826	UnaryOperator	-		2630490	0					
ANR	2642827	PrimaryExpression	1		2630490	1					
ANR	2642828	ElseStatement	else		2630490	0					
ANR	2642829	IfStatement	"if ( ( m = opmask ( ao -> op , ""pld"" , 0 ) ) )"		2630490	0					
ANR	2642830	Condition	"m = opmask ( ao -> op , ""pld"" , 0 )"	3451:5:72755:72785	2630490	0	True				
ANR	2642831	AssignmentExpression	"m = opmask ( ao -> op , ""pld"" , 0 )"		2630490	0		=			
ANR	2642832	Identifier	m		2630490	0					
ANR	2642833	CallExpression	"opmask ( ao -> op , ""pld"" , 0 )"		2630490	1					
ANR	2642834	Callee	opmask		2630490	0					
ANR	2642835	Identifier	opmask		2630490	0					
ANR	2642836	ArgumentList	ao -> op		2630490	1					
ANR	2642837	Argument	ao -> op		2630490	0					
ANR	2642838	PtrMemberAccess	ao -> op		2630490	0					
ANR	2642839	Identifier	ao		2630490	0					
ANR	2642840	Identifier	op		2630490	1					
ANR	2642841	Argument	"""pld"""		2630490	1					
ANR	2642842	PrimaryExpression	"""pld"""		2630490	0					
ANR	2642843	Argument	0		2630490	2					
ANR	2642844	PrimaryExpression	0		2630490	0					
ANR	2642845	CompoundStatement		2160:2:46933:46967	2630490	1					
ANR	2642846	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3452:2:72792:72826	2630490	0	True				
ANR	2642847	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2642848	IdentifierDeclType	ut64		2630490	0					
ANR	2642849	Identifier	argt		2630490	1					
ANR	2642850	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2642851	Identifier	argt		2630490	0					
ANR	2642852	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2642853	Callee	thumb_selector		2630490	0					
ANR	2642854	Identifier	thumb_selector		2630490	0					
ANR	2642855	ArgumentList	ao -> a		2630490	1					
ANR	2642856	Argument	ao -> a		2630490	0					
ANR	2642857	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642858	Identifier	ao		2630490	0					
ANR	2642859	Identifier	a		2630490	1					
ANR	2642860	SwitchStatement	switch ( argt )		2630490	1					
ANR	2642861	Condition	argt	3453:10:72838:72841	2630490	0	True				
ANR	2642862	Identifier	argt		2630490	0					
ANR	2642863	CompoundStatement		2161:16:46985:46985	2630490	1					
ANR	2642864	Label	case THUMB_BRACKREG_CONSTBRACK :	3454:2:72848:72878	2630490	0	True				
ANR	2642865	Identifier	THUMB_BRACKREG_CONSTBRACK		2630490	0					
ANR	2642866	CompoundStatement		2164:3:47067:47101	2630490	1					
ANR	2642867	IdentifierDeclStatement	ut8 reg1 = getregmemstart ( ao -> a [ 0 ] ) ;	3455:3:72885:72921	2630490	0	True				
ANR	2642868	IdentifierDecl	reg1 = getregmemstart ( ao -> a [ 0 ] )		2630490	0					
ANR	2642869	IdentifierDeclType	ut8		2630490	0					
ANR	2642870	Identifier	reg1		2630490	1					
ANR	2642871	AssignmentExpression	reg1 = getregmemstart ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2642872	Identifier	reg1		2630490	0					
ANR	2642873	CallExpression	getregmemstart ( ao -> a [ 0 ] )		2630490	1					
ANR	2642874	Callee	getregmemstart		2630490	0					
ANR	2642875	Identifier	getregmemstart		2630490	0					
ANR	2642876	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2642877	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2642878	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2642879	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642880	Identifier	ao		2630490	0					
ANR	2642881	Identifier	a		2630490	1					
ANR	2642882	PrimaryExpression	0		2630490	1					
ANR	2642883	IdentifierDeclStatement	st32 num = getnummemend ( ao -> a [ 1 ] ) ;	3456:3:72926:72960	2630490	1	True				
ANR	2642884	IdentifierDecl	num = getnummemend ( ao -> a [ 1 ] )		2630490	0					
ANR	2642885	IdentifierDeclType	st32		2630490	0					
ANR	2642886	Identifier	num		2630490	1					
ANR	2642887	AssignmentExpression	num = getnummemend ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2642888	Identifier	num		2630490	0					
ANR	2642889	CallExpression	getnummemend ( ao -> a [ 1 ] )		2630490	1					
ANR	2642890	Callee	getnummemend		2630490	0					
ANR	2642891	Identifier	getnummemend		2630490	0					
ANR	2642892	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2642893	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2642894	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2642895	PtrMemberAccess	ao -> a		2630490	0					
ANR	2642896	Identifier	ao		2630490	0					
ANR	2642897	Identifier	a		2630490	1					
ANR	2642898	PrimaryExpression	1		2630490	1					
ANR	2642899	IfStatement	if ( reg1 == 15 )		2630490	2					
ANR	2642900	Condition	reg1 == 15	3458:7:72970:72979	2630490	0	True				
ANR	2642901	EqualityExpression	reg1 == 15		2630490	0		==			
ANR	2642902	Identifier	reg1		2630490	0					
ANR	2642903	PrimaryExpression	15		2630490	1					
ANR	2642904	CompoundStatement		2166:19:47123:47123	2630490	1					
ANR	2642905	IfStatement	if ( ( num < - 4095 ) || ( num > 4095 ) )		2630490	0					
ANR	2642906	Condition	( num < - 4095 ) || ( num > 4095 )	3459:8:72992:73020	2630490	0	True				
ANR	2642907	OrExpression	( num < - 4095 ) || ( num > 4095 )		2630490	0		||			
ANR	2642908	RelationalExpression	num < - 4095		2630490	0		<			
ANR	2642909	Identifier	num		2630490	0					
ANR	2642910	UnaryOperationExpression	- 4095		2630490	1					
ANR	2642911	UnaryOperator	-		2630490	0					
ANR	2642912	PrimaryExpression	4095		2630490	1					
ANR	2642913	RelationalExpression	num > 4095		2630490	1		>			
ANR	2642914	Identifier	num		2630490	0					
ANR	2642915	PrimaryExpression	4095		2630490	1					
ANR	2642916	CompoundStatement		2167:39:47164:47164	2630490	1					
ANR	2642917	ReturnStatement	return - 1 ;	3460:5:73030:73039	2630490	0	True				
ANR	2642918	UnaryOperationExpression	- 1		2630490	0					
ANR	2642919	UnaryOperator	-		2630490	0					
ANR	2642920	PrimaryExpression	1		2630490	1					
ANR	2642921	ExpressionStatement	ao -> o = 0x1ff800f0	3462:4:73051:73069	2630490	1	True				
ANR	2642922	AssignmentExpression	ao -> o = 0x1ff800f0		2630490	0		=			
ANR	2642923	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642924	Identifier	ao		2630490	0					
ANR	2642925	Identifier	o		2630490	1					
ANR	2642926	PrimaryExpression	0x1ff800f0		2630490	1					
ANR	2642927	IfStatement	if ( num > 0 )		2630490	2					
ANR	2642928	Condition	num > 0	3463:8:73079:73085	2630490	0	True				
ANR	2642929	RelationalExpression	num > 0		2630490	0		>			
ANR	2642930	Identifier	num		2630490	0					
ANR	2642931	PrimaryExpression	0		2630490	1					
ANR	2642932	CompoundStatement		2171:17:47229:47229	2630490	1					
ANR	2642933	ExpressionStatement	ao -> o |= 1 << 31	3464:5:73095:73111	2630490	0	True				
ANR	2642934	AssignmentExpression	ao -> o |= 1 << 31		2630490	0		|=			
ANR	2642935	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642936	Identifier	ao		2630490	0					
ANR	2642937	Identifier	o		2630490	1					
ANR	2642938	ShiftExpression	1 << 31		2630490	1		<<			
ANR	2642939	PrimaryExpression	1		2630490	0					
ANR	2642940	PrimaryExpression	31		2630490	1					
ANR	2642941	ElseStatement	else		2630490	0					
ANR	2642942	CompoundStatement		2173:11:47265:47265	2630490	0					
ANR	2642943	ExpressionStatement	num = - num	3466:5:73131:73141	2630490	0	True				
ANR	2642944	AssignmentExpression	num = - num		2630490	0		=			
ANR	2642945	Identifier	num		2630490	0					
ANR	2642946	UnaryOperationExpression	- num		2630490	1					
ANR	2642947	UnaryOperator	-		2630490	0					
ANR	2642948	Identifier	num		2630490	1					
ANR	2642949	ExpressionStatement	ao -> o |= ( num & 0x0ff ) << 8	3468:4:73153:73180	2630490	3	True				
ANR	2642950	AssignmentExpression	ao -> o |= ( num & 0x0ff ) << 8		2630490	0		|=			
ANR	2642951	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642952	Identifier	ao		2630490	0					
ANR	2642953	Identifier	o		2630490	1					
ANR	2642954	ShiftExpression	( num & 0x0ff ) << 8		2630490	1		<<			
ANR	2642955	BitAndExpression	num & 0x0ff		2630490	0		&			
ANR	2642956	Identifier	num		2630490	0					
ANR	2642957	PrimaryExpression	0x0ff		2630490	1					
ANR	2642958	PrimaryExpression	8		2630490	1					
ANR	2642959	ExpressionStatement	ao -> o |= ( num & 0xf00 ) >> 8	3469:4:73186:73213	2630490	4	True				
ANR	2642960	AssignmentExpression	ao -> o |= ( num & 0xf00 ) >> 8		2630490	0		|=			
ANR	2642961	PtrMemberAccess	ao -> o		2630490	0					
ANR	2642962	Identifier	ao		2630490	0					
ANR	2642963	Identifier	o		2630490	1					
ANR	2642964	ShiftExpression	( num & 0xf00 ) >> 8		2630490	1		>>			
ANR	2642965	BitAndExpression	num & 0xf00		2630490	0		&			
ANR	2642966	Identifier	num		2630490	0					
ANR	2642967	PrimaryExpression	0xf00		2630490	1					
ANR	2642968	PrimaryExpression	8		2630490	1					
ANR	2642969	ReturnStatement	return 4 ;	3470:4:73219:73227	2630490	5	True				
ANR	2642970	PrimaryExpression	4		2630490	0					
ANR	2642971	IfStatement	if ( ( reg1 > 15 ) || ( num < - 255 ) || ( num > 4095 ) )		2630490	3					
ANR	2642972	Condition	( reg1 > 15 ) || ( num < - 255 ) || ( num > 4095 )	3473:7:73242:73284	2630490	0	True				
ANR	2642973	OrExpression	( reg1 > 15 ) || ( num < - 255 ) || ( num > 4095 )		2630490	0		||			
ANR	2642974	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2642975	Identifier	reg1		2630490	0					
ANR	2642976	PrimaryExpression	15		2630490	1					
ANR	2642977	OrExpression	( num < - 255 ) || ( num > 4095 )		2630490	1		||			
ANR	2642978	RelationalExpression	num < - 255		2630490	0		<			
ANR	2642979	Identifier	num		2630490	0					
ANR	2642980	UnaryOperationExpression	- 255		2630490	1					
ANR	2642981	UnaryOperator	-		2630490	0					
ANR	2642982	PrimaryExpression	255		2630490	1					
ANR	2642983	RelationalExpression	num > 4095		2630490	1		>			
ANR	2642984	Identifier	num		2630490	0					
ANR	2642985	PrimaryExpression	4095		2630490	1					
ANR	2642986	CompoundStatement		2181:52:47428:47428	2630490	1					
ANR	2642987	ReturnStatement	return - 1 ;	3474:4:73293:73302	2630490	0	True				
ANR	2642988	UnaryOperationExpression	- 1		2630490	0					
ANR	2642989	UnaryOperator	-		2630490	0					
ANR	2642990	PrimaryExpression	1		2630490	1					
ANR	2642991	IfStatement	if ( num > 0 )		2630490	4					
ANR	2642992	Condition	num > 0	3477:7:73317:73323	2630490	0	True				
ANR	2642993	RelationalExpression	num > 0		2630490	0		>			
ANR	2642994	Identifier	num		2630490	0					
ANR	2642995	PrimaryExpression	0		2630490	1					
ANR	2642996	CompoundStatement		2185:16:47467:47467	2630490	1					
ANR	2642997	ExpressionStatement	ao -> o = 0x90f800f0	3478:4:73332:73350	2630490	0	True				
ANR	2642998	AssignmentExpression	ao -> o = 0x90f800f0		2630490	0		=			
ANR	2642999	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643000	Identifier	ao		2630490	0					
ANR	2643001	Identifier	o		2630490	1					
ANR	2643002	PrimaryExpression	0x90f800f0		2630490	1					
ANR	2643003	ExpressionStatement	ao -> o |= ( num & 0x0ff ) << 8	3479:4:73356:73383	2630490	1	True				
ANR	2643004	AssignmentExpression	ao -> o |= ( num & 0x0ff ) << 8		2630490	0		|=			
ANR	2643005	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643006	Identifier	ao		2630490	0					
ANR	2643007	Identifier	o		2630490	1					
ANR	2643008	ShiftExpression	( num & 0x0ff ) << 8		2630490	1		<<			
ANR	2643009	BitAndExpression	num & 0x0ff		2630490	0		&			
ANR	2643010	Identifier	num		2630490	0					
ANR	2643011	PrimaryExpression	0x0ff		2630490	1					
ANR	2643012	PrimaryExpression	8		2630490	1					
ANR	2643013	ExpressionStatement	ao -> o |= ( num & 0xf00 ) >> 8	3480:4:73389:73416	2630490	2	True				
ANR	2643014	AssignmentExpression	ao -> o |= ( num & 0xf00 ) >> 8		2630490	0		|=			
ANR	2643015	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643016	Identifier	ao		2630490	0					
ANR	2643017	Identifier	o		2630490	1					
ANR	2643018	ShiftExpression	( num & 0xf00 ) >> 8		2630490	1		>>			
ANR	2643019	BitAndExpression	num & 0xf00		2630490	0		&			
ANR	2643020	Identifier	num		2630490	0					
ANR	2643021	PrimaryExpression	0xf00		2630490	1					
ANR	2643022	PrimaryExpression	8		2630490	1					
ANR	2643023	ExpressionStatement	ao -> o |= reg1 << 24	3481:4:73422:73441	2630490	3	True				
ANR	2643024	AssignmentExpression	ao -> o |= reg1 << 24		2630490	0		|=			
ANR	2643025	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643026	Identifier	ao		2630490	0					
ANR	2643027	Identifier	o		2630490	1					
ANR	2643028	ShiftExpression	reg1 << 24		2630490	1		<<			
ANR	2643029	Identifier	reg1		2630490	0					
ANR	2643030	PrimaryExpression	24		2630490	1					
ANR	2643031	ReturnStatement	return 4 ;	3482:4:73447:73455	2630490	4	True				
ANR	2643032	PrimaryExpression	4		2630490	0					
ANR	2643033	ExpressionStatement	num = - num	3484:3:73465:73475	2630490	5	True				
ANR	2643034	AssignmentExpression	num = - num		2630490	0		=			
ANR	2643035	Identifier	num		2630490	0					
ANR	2643036	UnaryOperationExpression	- num		2630490	1					
ANR	2643037	UnaryOperator	-		2630490	0					
ANR	2643038	Identifier	num		2630490	1					
ANR	2643039	ExpressionStatement	ao -> o = 0x10f800fc	3485:3:73480:73498	2630490	6	True				
ANR	2643040	AssignmentExpression	ao -> o = 0x10f800fc		2630490	0		=			
ANR	2643041	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643042	Identifier	ao		2630490	0					
ANR	2643043	Identifier	o		2630490	1					
ANR	2643044	PrimaryExpression	0x10f800fc		2630490	1					
ANR	2643045	ExpressionStatement	ao -> o |= num << 8	3486:3:73503:73520	2630490	7	True				
ANR	2643046	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2643047	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643048	Identifier	ao		2630490	0					
ANR	2643049	Identifier	o		2630490	1					
ANR	2643050	ShiftExpression	num << 8		2630490	1		<<			
ANR	2643051	Identifier	num		2630490	0					
ANR	2643052	PrimaryExpression	8		2630490	1					
ANR	2643053	ExpressionStatement	ao -> o |= reg1 << 24	3487:3:73525:73544	2630490	8	True				
ANR	2643054	AssignmentExpression	ao -> o |= reg1 << 24		2630490	0		|=			
ANR	2643055	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643056	Identifier	ao		2630490	0					
ANR	2643057	Identifier	o		2630490	1					
ANR	2643058	ShiftExpression	reg1 << 24		2630490	1		<<			
ANR	2643059	Identifier	reg1		2630490	0					
ANR	2643060	PrimaryExpression	24		2630490	1					
ANR	2643061	ReturnStatement	return 4 ;	3488:3:73549:73557	2630490	9	True				
ANR	2643062	PrimaryExpression	4		2630490	0					
ANR	2643063	BreakStatement	break ;	3490:3:73574:73579	2630490	2	True				
ANR	2643064	Label	case THUMB_BRACKREG_REGBRACK :	3491:2:73583:73611	2630490	3	True				
ANR	2643065	Identifier	THUMB_BRACKREG_REGBRACK		2630490	0					
ANR	2643066	CompoundStatement		2199:32:47754:47754	2630490	4					
ANR	2643067	ExpressionStatement	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'	3492:3:73618:73656	2630490	0	True				
ANR	2643068	AssignmentExpression	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'		2630490	0		=			
ANR	2643069	ArrayIndexing	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ]		2630490	0					
ANR	2643070	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2643071	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643072	Identifier	ao		2630490	0					
ANR	2643073	Identifier	a		2630490	1					
ANR	2643074	PrimaryExpression	1		2630490	1					
ANR	2643075	AdditiveExpression	strlen ( ao -> a [ 1 ] ) - 1		2630490	1		-			
ANR	2643076	CallExpression	strlen ( ao -> a [ 1 ] )		2630490	0					
ANR	2643077	Callee	strlen		2630490	0					
ANR	2643078	Identifier	strlen		2630490	0					
ANR	2643079	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2643080	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2643081	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2643082	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643083	Identifier	ao		2630490	0					
ANR	2643084	Identifier	a		2630490	1					
ANR	2643085	PrimaryExpression	1		2630490	1					
ANR	2643086	PrimaryExpression	1		2630490	1					
ANR	2643087	PrimaryExpression	'\\0'		2630490	1					
ANR	2643088	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 0]"""	3493:3:73661:73680	2630490	1	True				
ANR	2643089	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 0]"""		2630490	0		=			
ANR	2643090	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2643091	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643092	Identifier	ao		2630490	0					
ANR	2643093	Identifier	a		2630490	1					
ANR	2643094	PrimaryExpression	2		2630490	1					
ANR	2643095	PrimaryExpression	"""lsl 0]"""		2630490	1					
ANR	2643096	Label	case THUMB_BRACKREG_REG_SHIFTBRACK :	3496:2:73726:73760	2630490	5	True				
ANR	2643097	Identifier	THUMB_BRACKREG_REG_SHIFTBRACK		2630490	0					
ANR	2643098	CompoundStatement		2207:3:47982:48025	2630490	6					
ANR	2643099	IdentifierDeclStatement	ut8 reg1 = getregmemstart ( ao -> a [ 0 ] ) ;	3497:3:73767:73803	2630490	0	True				
ANR	2643100	IdentifierDecl	reg1 = getregmemstart ( ao -> a [ 0 ] )		2630490	0					
ANR	2643101	IdentifierDeclType	ut8		2630490	0					
ANR	2643102	Identifier	reg1		2630490	1					
ANR	2643103	AssignmentExpression	reg1 = getregmemstart ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2643104	Identifier	reg1		2630490	0					
ANR	2643105	CallExpression	getregmemstart ( ao -> a [ 0 ] )		2630490	1					
ANR	2643106	Callee	getregmemstart		2630490	0					
ANR	2643107	Identifier	getregmemstart		2630490	0					
ANR	2643108	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2643109	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2643110	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2643111	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643112	Identifier	ao		2630490	0					
ANR	2643113	Identifier	a		2630490	1					
ANR	2643114	PrimaryExpression	0		2630490	1					
ANR	2643115	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	3498:3:73808:73836	2630490	1	True				
ANR	2643116	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2643117	IdentifierDeclType	ut8		2630490	0					
ANR	2643118	Identifier	reg2		2630490	1					
ANR	2643119	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2643120	Identifier	reg2		2630490	0					
ANR	2643121	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2643122	Callee	getreg		2630490	0					
ANR	2643123	Identifier	getreg		2630490	0					
ANR	2643124	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2643125	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2643126	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2643127	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643128	Identifier	ao		2630490	0					
ANR	2643129	Identifier	a		2630490	1					
ANR	2643130	PrimaryExpression	1		2630490	1					
ANR	2643131	IdentifierDeclStatement	ut32 shift = getshiftmemend ( ao -> a [ 2 ] ) >> 2 ;	3499:3:73841:73884	2630490	2	True				
ANR	2643132	IdentifierDecl	shift = getshiftmemend ( ao -> a [ 2 ] ) >> 2		2630490	0					
ANR	2643133	IdentifierDeclType	ut32		2630490	0					
ANR	2643134	Identifier	shift		2630490	1					
ANR	2643135	AssignmentExpression	shift = getshiftmemend ( ao -> a [ 2 ] ) >> 2		2630490	2		=			
ANR	2643136	Identifier	shift		2630490	0					
ANR	2643137	ShiftExpression	getshiftmemend ( ao -> a [ 2 ] ) >> 2		2630490	1		>>			
ANR	2643138	CallExpression	getshiftmemend ( ao -> a [ 2 ] )		2630490	0					
ANR	2643139	Callee	getshiftmemend		2630490	0					
ANR	2643140	Identifier	getshiftmemend		2630490	0					
ANR	2643141	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2643142	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2643143	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2643144	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643145	Identifier	ao		2630490	0					
ANR	2643146	Identifier	a		2630490	1					
ANR	2643147	PrimaryExpression	2		2630490	1					
ANR	2643148	PrimaryExpression	2		2630490	1					
ANR	2643149	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( ( shift & 0xffffcfff ) != 0 ) )		2630490	3					
ANR	2643150	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( ( shift & 0xffffcfff ) != 0 )	3501:7:73894:73950	2630490	0	True				
ANR	2643151	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( ( shift & 0xffffcfff ) != 0 )		2630490	0		||			
ANR	2643152	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2643153	Identifier	reg1		2630490	0					
ANR	2643154	PrimaryExpression	15		2630490	1					
ANR	2643155	OrExpression	( reg2 > 15 ) || ( ( shift & 0xffffcfff ) != 0 )		2630490	1		||			
ANR	2643156	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2643157	Identifier	reg2		2630490	0					
ANR	2643158	PrimaryExpression	15		2630490	1					
ANR	2643159	EqualityExpression	( shift & 0xffffcfff ) != 0		2630490	1		!=			
ANR	2643160	BitAndExpression	shift & 0xffffcfff		2630490	0		&			
ANR	2643161	Identifier	shift		2630490	0					
ANR	2643162	PrimaryExpression	0xffffcfff		2630490	1					
ANR	2643163	PrimaryExpression	0		2630490	1					
ANR	2643164	CompoundStatement		2209:66:48094:48094	2630490	1					
ANR	2643165	ReturnStatement	return - 1 ;	3502:4:73959:73968	2630490	0	True				
ANR	2643166	UnaryOperationExpression	- 1		2630490	0					
ANR	2643167	UnaryOperator	-		2630490	0					
ANR	2643168	PrimaryExpression	1		2630490	1					
ANR	2643169	ExpressionStatement	ao -> o = 0x10f800f0	3505:3:73979:73997	2630490	4	True				
ANR	2643170	AssignmentExpression	ao -> o = 0x10f800f0		2630490	0		=			
ANR	2643171	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643172	Identifier	ao		2630490	0					
ANR	2643173	Identifier	o		2630490	1					
ANR	2643174	PrimaryExpression	0x10f800f0		2630490	1					
ANR	2643175	ExpressionStatement	ao -> o |= reg1 << 24	3506:3:74002:74021	2630490	5	True				
ANR	2643176	AssignmentExpression	ao -> o |= reg1 << 24		2630490	0		|=			
ANR	2643177	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643178	Identifier	ao		2630490	0					
ANR	2643179	Identifier	o		2630490	1					
ANR	2643180	ShiftExpression	reg1 << 24		2630490	1		<<			
ANR	2643181	Identifier	reg1		2630490	0					
ANR	2643182	PrimaryExpression	24		2630490	1					
ANR	2643183	ExpressionStatement	ao -> o |= reg2 << 8	3507:3:74026:74044	2630490	6	True				
ANR	2643184	AssignmentExpression	ao -> o |= reg2 << 8		2630490	0		|=			
ANR	2643185	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643186	Identifier	ao		2630490	0					
ANR	2643187	Identifier	o		2630490	1					
ANR	2643188	ShiftExpression	reg2 << 8		2630490	1		<<			
ANR	2643189	Identifier	reg2		2630490	0					
ANR	2643190	PrimaryExpression	8		2630490	1					
ANR	2643191	ExpressionStatement	ao -> o |= shift	3508:3:74049:74063	2630490	7	True				
ANR	2643192	AssignmentExpression	ao -> o |= shift		2630490	0		|=			
ANR	2643193	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643194	Identifier	ao		2630490	0					
ANR	2643195	Identifier	o		2630490	1					
ANR	2643196	Identifier	shift		2630490	1					
ANR	2643197	ReturnStatement	return 4 ;	3509:3:74068:74076	2630490	8	True				
ANR	2643198	PrimaryExpression	4		2630490	0					
ANR	2643199	BreakStatement	break ;	3511:3:74093:74098	2630490	7	True				
ANR	2643200	Label	default :	3512:2:74102:74109	2630490	8	True				
ANR	2643201	Identifier	default		2630490	0					
ANR	2643202	ReturnStatement	return - 1 ;	3513:3:74114:74123	2630490	9	True				
ANR	2643203	UnaryOperationExpression	- 1		2630490	0					
ANR	2643204	UnaryOperator	-		2630490	0					
ANR	2643205	PrimaryExpression	1		2630490	1					
ANR	2643206	ElseStatement	else		2630490	0					
ANR	2643207	IfStatement	"if ( ( m = opmask ( ao -> op , ""pli"" , 0 ) ) )"		2630490	0					
ANR	2643208	Condition	"m = opmask ( ao -> op , ""pli"" , 0 )"	3516:5:74142:74172	2630490	0	True				
ANR	2643209	AssignmentExpression	"m = opmask ( ao -> op , ""pli"" , 0 )"		2630490	0		=			
ANR	2643210	Identifier	m		2630490	0					
ANR	2643211	CallExpression	"opmask ( ao -> op , ""pli"" , 0 )"		2630490	1					
ANR	2643212	Callee	opmask		2630490	0					
ANR	2643213	Identifier	opmask		2630490	0					
ANR	2643214	ArgumentList	ao -> op		2630490	1					
ANR	2643215	Argument	ao -> op		2630490	0					
ANR	2643216	PtrMemberAccess	ao -> op		2630490	0					
ANR	2643217	Identifier	ao		2630490	0					
ANR	2643218	Identifier	op		2630490	1					
ANR	2643219	Argument	"""pli"""		2630490	1					
ANR	2643220	PrimaryExpression	"""pli"""		2630490	0					
ANR	2643221	Argument	0		2630490	2					
ANR	2643222	PrimaryExpression	0		2630490	0					
ANR	2643223	CompoundStatement		2225:2:48320:48354	2630490	1					
ANR	2643224	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3517:2:74179:74213	2630490	0	True				
ANR	2643225	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2643226	IdentifierDeclType	ut64		2630490	0					
ANR	2643227	Identifier	argt		2630490	1					
ANR	2643228	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2643229	Identifier	argt		2630490	0					
ANR	2643230	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2643231	Callee	thumb_selector		2630490	0					
ANR	2643232	Identifier	thumb_selector		2630490	0					
ANR	2643233	ArgumentList	ao -> a		2630490	1					
ANR	2643234	Argument	ao -> a		2630490	0					
ANR	2643235	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643236	Identifier	ao		2630490	0					
ANR	2643237	Identifier	a		2630490	1					
ANR	2643238	SwitchStatement	switch ( argt )		2630490	1					
ANR	2643239	Condition	argt	3518:10:74225:74228	2630490	0	True				
ANR	2643240	Identifier	argt		2630490	0					
ANR	2643241	CompoundStatement		2226:16:48372:48372	2630490	1					
ANR	2643242	Label	case THUMB_BRACKREG_CONSTBRACK :	3519:2:74235:74265	2630490	0	True				
ANR	2643243	Identifier	THUMB_BRACKREG_CONSTBRACK		2630490	0					
ANR	2643244	CompoundStatement		2229:3:48454:48488	2630490	1					
ANR	2643245	IdentifierDeclStatement	ut8 reg1 = getregmemstart ( ao -> a [ 0 ] ) ;	3520:3:74272:74308	2630490	0	True				
ANR	2643246	IdentifierDecl	reg1 = getregmemstart ( ao -> a [ 0 ] )		2630490	0					
ANR	2643247	IdentifierDeclType	ut8		2630490	0					
ANR	2643248	Identifier	reg1		2630490	1					
ANR	2643249	AssignmentExpression	reg1 = getregmemstart ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2643250	Identifier	reg1		2630490	0					
ANR	2643251	CallExpression	getregmemstart ( ao -> a [ 0 ] )		2630490	1					
ANR	2643252	Callee	getregmemstart		2630490	0					
ANR	2643253	Identifier	getregmemstart		2630490	0					
ANR	2643254	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2643255	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2643256	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2643257	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643258	Identifier	ao		2630490	0					
ANR	2643259	Identifier	a		2630490	1					
ANR	2643260	PrimaryExpression	0		2630490	1					
ANR	2643261	IdentifierDeclStatement	st32 num = getnummemend ( ao -> a [ 1 ] ) ;	3521:3:74313:74347	2630490	1	True				
ANR	2643262	IdentifierDecl	num = getnummemend ( ao -> a [ 1 ] )		2630490	0					
ANR	2643263	IdentifierDeclType	st32		2630490	0					
ANR	2643264	Identifier	num		2630490	1					
ANR	2643265	AssignmentExpression	num = getnummemend ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2643266	Identifier	num		2630490	0					
ANR	2643267	CallExpression	getnummemend ( ao -> a [ 1 ] )		2630490	1					
ANR	2643268	Callee	getnummemend		2630490	0					
ANR	2643269	Identifier	getnummemend		2630490	0					
ANR	2643270	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2643271	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2643272	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2643273	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643274	Identifier	ao		2630490	0					
ANR	2643275	Identifier	a		2630490	1					
ANR	2643276	PrimaryExpression	1		2630490	1					
ANR	2643277	IfStatement	if ( reg1 == 15 )		2630490	2					
ANR	2643278	Condition	reg1 == 15	3523:7:74357:74366	2630490	0	True				
ANR	2643279	EqualityExpression	reg1 == 15		2630490	0		==			
ANR	2643280	Identifier	reg1		2630490	0					
ANR	2643281	PrimaryExpression	15		2630490	1					
ANR	2643282	CompoundStatement		2231:19:48510:48510	2630490	1					
ANR	2643283	IfStatement	if ( ( num < - 4095 ) || ( num > 4095 ) )		2630490	0					
ANR	2643284	Condition	( num < - 4095 ) || ( num > 4095 )	3524:8:74379:74407	2630490	0	True				
ANR	2643285	OrExpression	( num < - 4095 ) || ( num > 4095 )		2630490	0		||			
ANR	2643286	RelationalExpression	num < - 4095		2630490	0		<			
ANR	2643287	Identifier	num		2630490	0					
ANR	2643288	UnaryOperationExpression	- 4095		2630490	1					
ANR	2643289	UnaryOperator	-		2630490	0					
ANR	2643290	PrimaryExpression	4095		2630490	1					
ANR	2643291	RelationalExpression	num > 4095		2630490	1		>			
ANR	2643292	Identifier	num		2630490	0					
ANR	2643293	PrimaryExpression	4095		2630490	1					
ANR	2643294	CompoundStatement		2232:39:48551:48551	2630490	1					
ANR	2643295	ReturnStatement	return - 1 ;	3525:5:74417:74426	2630490	0	True				
ANR	2643296	UnaryOperationExpression	- 1		2630490	0					
ANR	2643297	UnaryOperator	-		2630490	0					
ANR	2643298	PrimaryExpression	1		2630490	1					
ANR	2643299	ExpressionStatement	ao -> o = 0x1ff900f0	3527:4:74438:74456	2630490	1	True				
ANR	2643300	AssignmentExpression	ao -> o = 0x1ff900f0		2630490	0		=			
ANR	2643301	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643302	Identifier	ao		2630490	0					
ANR	2643303	Identifier	o		2630490	1					
ANR	2643304	PrimaryExpression	0x1ff900f0		2630490	1					
ANR	2643305	IfStatement	if ( num > 0 )		2630490	2					
ANR	2643306	Condition	num > 0	3528:8:74466:74472	2630490	0	True				
ANR	2643307	RelationalExpression	num > 0		2630490	0		>			
ANR	2643308	Identifier	num		2630490	0					
ANR	2643309	PrimaryExpression	0		2630490	1					
ANR	2643310	CompoundStatement		2236:17:48616:48616	2630490	1					
ANR	2643311	ExpressionStatement	ao -> o |= 1 << 31	3529:5:74482:74498	2630490	0	True				
ANR	2643312	AssignmentExpression	ao -> o |= 1 << 31		2630490	0		|=			
ANR	2643313	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643314	Identifier	ao		2630490	0					
ANR	2643315	Identifier	o		2630490	1					
ANR	2643316	ShiftExpression	1 << 31		2630490	1		<<			
ANR	2643317	PrimaryExpression	1		2630490	0					
ANR	2643318	PrimaryExpression	31		2630490	1					
ANR	2643319	ElseStatement	else		2630490	0					
ANR	2643320	CompoundStatement		2238:11:48652:48652	2630490	0					
ANR	2643321	ExpressionStatement	num = - num	3531:5:74518:74528	2630490	0	True				
ANR	2643322	AssignmentExpression	num = - num		2630490	0		=			
ANR	2643323	Identifier	num		2630490	0					
ANR	2643324	UnaryOperationExpression	- num		2630490	1					
ANR	2643325	UnaryOperator	-		2630490	0					
ANR	2643326	Identifier	num		2630490	1					
ANR	2643327	ExpressionStatement	ao -> o |= ( num & 0x0ff ) << 8	3533:4:74540:74567	2630490	3	True				
ANR	2643328	AssignmentExpression	ao -> o |= ( num & 0x0ff ) << 8		2630490	0		|=			
ANR	2643329	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643330	Identifier	ao		2630490	0					
ANR	2643331	Identifier	o		2630490	1					
ANR	2643332	ShiftExpression	( num & 0x0ff ) << 8		2630490	1		<<			
ANR	2643333	BitAndExpression	num & 0x0ff		2630490	0		&			
ANR	2643334	Identifier	num		2630490	0					
ANR	2643335	PrimaryExpression	0x0ff		2630490	1					
ANR	2643336	PrimaryExpression	8		2630490	1					
ANR	2643337	ExpressionStatement	ao -> o |= ( num & 0xf00 ) >> 8	3534:4:74573:74600	2630490	4	True				
ANR	2643338	AssignmentExpression	ao -> o |= ( num & 0xf00 ) >> 8		2630490	0		|=			
ANR	2643339	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643340	Identifier	ao		2630490	0					
ANR	2643341	Identifier	o		2630490	1					
ANR	2643342	ShiftExpression	( num & 0xf00 ) >> 8		2630490	1		>>			
ANR	2643343	BitAndExpression	num & 0xf00		2630490	0		&			
ANR	2643344	Identifier	num		2630490	0					
ANR	2643345	PrimaryExpression	0xf00		2630490	1					
ANR	2643346	PrimaryExpression	8		2630490	1					
ANR	2643347	ReturnStatement	return 4 ;	3535:4:74606:74614	2630490	5	True				
ANR	2643348	PrimaryExpression	4		2630490	0					
ANR	2643349	IfStatement	if ( ( reg1 > 15 ) || ( num < - 255 ) || ( num > 4095 ) )		2630490	3					
ANR	2643350	Condition	( reg1 > 15 ) || ( num < - 255 ) || ( num > 4095 )	3538:7:74629:74671	2630490	0	True				
ANR	2643351	OrExpression	( reg1 > 15 ) || ( num < - 255 ) || ( num > 4095 )		2630490	0		||			
ANR	2643352	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2643353	Identifier	reg1		2630490	0					
ANR	2643354	PrimaryExpression	15		2630490	1					
ANR	2643355	OrExpression	( num < - 255 ) || ( num > 4095 )		2630490	1		||			
ANR	2643356	RelationalExpression	num < - 255		2630490	0		<			
ANR	2643357	Identifier	num		2630490	0					
ANR	2643358	UnaryOperationExpression	- 255		2630490	1					
ANR	2643359	UnaryOperator	-		2630490	0					
ANR	2643360	PrimaryExpression	255		2630490	1					
ANR	2643361	RelationalExpression	num > 4095		2630490	1		>			
ANR	2643362	Identifier	num		2630490	0					
ANR	2643363	PrimaryExpression	4095		2630490	1					
ANR	2643364	CompoundStatement		2246:52:48815:48815	2630490	1					
ANR	2643365	ReturnStatement	return - 1 ;	3539:4:74680:74689	2630490	0	True				
ANR	2643366	UnaryOperationExpression	- 1		2630490	0					
ANR	2643367	UnaryOperator	-		2630490	0					
ANR	2643368	PrimaryExpression	1		2630490	1					
ANR	2643369	IfStatement	if ( num > 0 )		2630490	4					
ANR	2643370	Condition	num > 0	3542:7:74704:74710	2630490	0	True				
ANR	2643371	RelationalExpression	num > 0		2630490	0		>			
ANR	2643372	Identifier	num		2630490	0					
ANR	2643373	PrimaryExpression	0		2630490	1					
ANR	2643374	CompoundStatement		2250:16:48854:48854	2630490	1					
ANR	2643375	ExpressionStatement	ao -> o = 0x90f900f0	3543:4:74719:74737	2630490	0	True				
ANR	2643376	AssignmentExpression	ao -> o = 0x90f900f0		2630490	0		=			
ANR	2643377	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643378	Identifier	ao		2630490	0					
ANR	2643379	Identifier	o		2630490	1					
ANR	2643380	PrimaryExpression	0x90f900f0		2630490	1					
ANR	2643381	ExpressionStatement	ao -> o |= ( num & 0x0ff ) << 8	3544:4:74743:74770	2630490	1	True				
ANR	2643382	AssignmentExpression	ao -> o |= ( num & 0x0ff ) << 8		2630490	0		|=			
ANR	2643383	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643384	Identifier	ao		2630490	0					
ANR	2643385	Identifier	o		2630490	1					
ANR	2643386	ShiftExpression	( num & 0x0ff ) << 8		2630490	1		<<			
ANR	2643387	BitAndExpression	num & 0x0ff		2630490	0		&			
ANR	2643388	Identifier	num		2630490	0					
ANR	2643389	PrimaryExpression	0x0ff		2630490	1					
ANR	2643390	PrimaryExpression	8		2630490	1					
ANR	2643391	ExpressionStatement	ao -> o |= ( num & 0xf00 ) >> 8	3545:4:74776:74803	2630490	2	True				
ANR	2643392	AssignmentExpression	ao -> o |= ( num & 0xf00 ) >> 8		2630490	0		|=			
ANR	2643393	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643394	Identifier	ao		2630490	0					
ANR	2643395	Identifier	o		2630490	1					
ANR	2643396	ShiftExpression	( num & 0xf00 ) >> 8		2630490	1		>>			
ANR	2643397	BitAndExpression	num & 0xf00		2630490	0		&			
ANR	2643398	Identifier	num		2630490	0					
ANR	2643399	PrimaryExpression	0xf00		2630490	1					
ANR	2643400	PrimaryExpression	8		2630490	1					
ANR	2643401	ExpressionStatement	ao -> o |= reg1 << 24	3546:4:74809:74828	2630490	3	True				
ANR	2643402	AssignmentExpression	ao -> o |= reg1 << 24		2630490	0		|=			
ANR	2643403	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643404	Identifier	ao		2630490	0					
ANR	2643405	Identifier	o		2630490	1					
ANR	2643406	ShiftExpression	reg1 << 24		2630490	1		<<			
ANR	2643407	Identifier	reg1		2630490	0					
ANR	2643408	PrimaryExpression	24		2630490	1					
ANR	2643409	ReturnStatement	return 4 ;	3547:4:74834:74842	2630490	4	True				
ANR	2643410	PrimaryExpression	4		2630490	0					
ANR	2643411	ExpressionStatement	num = - num	3549:3:74852:74862	2630490	5	True				
ANR	2643412	AssignmentExpression	num = - num		2630490	0		=			
ANR	2643413	Identifier	num		2630490	0					
ANR	2643414	UnaryOperationExpression	- num		2630490	1					
ANR	2643415	UnaryOperator	-		2630490	0					
ANR	2643416	Identifier	num		2630490	1					
ANR	2643417	ExpressionStatement	ao -> o = 0x10f900fc	3550:3:74867:74885	2630490	6	True				
ANR	2643418	AssignmentExpression	ao -> o = 0x10f900fc		2630490	0		=			
ANR	2643419	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643420	Identifier	ao		2630490	0					
ANR	2643421	Identifier	o		2630490	1					
ANR	2643422	PrimaryExpression	0x10f900fc		2630490	1					
ANR	2643423	ExpressionStatement	ao -> o |= num << 8	3551:3:74890:74907	2630490	7	True				
ANR	2643424	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2643425	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643426	Identifier	ao		2630490	0					
ANR	2643427	Identifier	o		2630490	1					
ANR	2643428	ShiftExpression	num << 8		2630490	1		<<			
ANR	2643429	Identifier	num		2630490	0					
ANR	2643430	PrimaryExpression	8		2630490	1					
ANR	2643431	ExpressionStatement	ao -> o |= reg1 << 24	3552:3:74912:74931	2630490	8	True				
ANR	2643432	AssignmentExpression	ao -> o |= reg1 << 24		2630490	0		|=			
ANR	2643433	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643434	Identifier	ao		2630490	0					
ANR	2643435	Identifier	o		2630490	1					
ANR	2643436	ShiftExpression	reg1 << 24		2630490	1		<<			
ANR	2643437	Identifier	reg1		2630490	0					
ANR	2643438	PrimaryExpression	24		2630490	1					
ANR	2643439	ReturnStatement	return 4 ;	3553:3:74936:74944	2630490	9	True				
ANR	2643440	PrimaryExpression	4		2630490	0					
ANR	2643441	BreakStatement	break ;	3555:3:74961:74966	2630490	2	True				
ANR	2643442	Label	case THUMB_BRACKREG_REGBRACK :	3556:2:74970:74998	2630490	3	True				
ANR	2643443	Identifier	THUMB_BRACKREG_REGBRACK		2630490	0					
ANR	2643444	CompoundStatement		2264:32:49141:49141	2630490	4					
ANR	2643445	ExpressionStatement	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'	3557:3:75005:75042	2630490	0	True				
ANR	2643446	AssignmentExpression	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'		2630490	0		=			
ANR	2643447	ArrayIndexing	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ]		2630490	0					
ANR	2643448	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2643449	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643450	Identifier	ao		2630490	0					
ANR	2643451	Identifier	a		2630490	1					
ANR	2643452	PrimaryExpression	1		2630490	1					
ANR	2643453	AdditiveExpression	strlen ( ao -> a [ 1 ] ) - 1		2630490	1		-			
ANR	2643454	CallExpression	strlen ( ao -> a [ 1 ] )		2630490	0					
ANR	2643455	Callee	strlen		2630490	0					
ANR	2643456	Identifier	strlen		2630490	0					
ANR	2643457	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2643458	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2643459	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2643460	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643461	Identifier	ao		2630490	0					
ANR	2643462	Identifier	a		2630490	1					
ANR	2643463	PrimaryExpression	1		2630490	1					
ANR	2643464	PrimaryExpression	1		2630490	1					
ANR	2643465	PrimaryExpression	'\\0'		2630490	1					
ANR	2643466	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 0]"""	3558:3:75047:75066	2630490	1	True				
ANR	2643467	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 0]"""		2630490	0		=			
ANR	2643468	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2643469	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643470	Identifier	ao		2630490	0					
ANR	2643471	Identifier	a		2630490	1					
ANR	2643472	PrimaryExpression	2		2630490	1					
ANR	2643473	PrimaryExpression	"""lsl 0]"""		2630490	1					
ANR	2643474	Label	case THUMB_BRACKREG_REG_SHIFTBRACK :	3561:2:75112:75146	2630490	5	True				
ANR	2643475	Identifier	THUMB_BRACKREG_REG_SHIFTBRACK		2630490	0					
ANR	2643476	CompoundStatement		2272:3:49368:49411	2630490	6					
ANR	2643477	IdentifierDeclStatement	ut8 reg1 = getregmemstart ( ao -> a [ 0 ] ) ;	3562:3:75153:75189	2630490	0	True				
ANR	2643478	IdentifierDecl	reg1 = getregmemstart ( ao -> a [ 0 ] )		2630490	0					
ANR	2643479	IdentifierDeclType	ut8		2630490	0					
ANR	2643480	Identifier	reg1		2630490	1					
ANR	2643481	AssignmentExpression	reg1 = getregmemstart ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2643482	Identifier	reg1		2630490	0					
ANR	2643483	CallExpression	getregmemstart ( ao -> a [ 0 ] )		2630490	1					
ANR	2643484	Callee	getregmemstart		2630490	0					
ANR	2643485	Identifier	getregmemstart		2630490	0					
ANR	2643486	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2643487	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2643488	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2643489	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643490	Identifier	ao		2630490	0					
ANR	2643491	Identifier	a		2630490	1					
ANR	2643492	PrimaryExpression	0		2630490	1					
ANR	2643493	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	3563:3:75194:75222	2630490	1	True				
ANR	2643494	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2643495	IdentifierDeclType	ut8		2630490	0					
ANR	2643496	Identifier	reg2		2630490	1					
ANR	2643497	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2643498	Identifier	reg2		2630490	0					
ANR	2643499	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2643500	Callee	getreg		2630490	0					
ANR	2643501	Identifier	getreg		2630490	0					
ANR	2643502	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2643503	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2643504	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2643505	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643506	Identifier	ao		2630490	0					
ANR	2643507	Identifier	a		2630490	1					
ANR	2643508	PrimaryExpression	1		2630490	1					
ANR	2643509	IdentifierDeclStatement	ut32 shift = getshiftmemend ( ao -> a [ 2 ] ) >> 2 ;	3564:3:75227:75270	2630490	2	True				
ANR	2643510	IdentifierDecl	shift = getshiftmemend ( ao -> a [ 2 ] ) >> 2		2630490	0					
ANR	2643511	IdentifierDeclType	ut32		2630490	0					
ANR	2643512	Identifier	shift		2630490	1					
ANR	2643513	AssignmentExpression	shift = getshiftmemend ( ao -> a [ 2 ] ) >> 2		2630490	2		=			
ANR	2643514	Identifier	shift		2630490	0					
ANR	2643515	ShiftExpression	getshiftmemend ( ao -> a [ 2 ] ) >> 2		2630490	1		>>			
ANR	2643516	CallExpression	getshiftmemend ( ao -> a [ 2 ] )		2630490	0					
ANR	2643517	Callee	getshiftmemend		2630490	0					
ANR	2643518	Identifier	getshiftmemend		2630490	0					
ANR	2643519	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2643520	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2643521	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2643522	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643523	Identifier	ao		2630490	0					
ANR	2643524	Identifier	a		2630490	1					
ANR	2643525	PrimaryExpression	2		2630490	1					
ANR	2643526	PrimaryExpression	2		2630490	1					
ANR	2643527	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( ( shift & 0xffffcfff ) != 0 ) )		2630490	3					
ANR	2643528	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( ( shift & 0xffffcfff ) != 0 )	3566:7:75280:75336	2630490	0	True				
ANR	2643529	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( ( shift & 0xffffcfff ) != 0 )		2630490	0		||			
ANR	2643530	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2643531	Identifier	reg1		2630490	0					
ANR	2643532	PrimaryExpression	15		2630490	1					
ANR	2643533	OrExpression	( reg2 > 15 ) || ( ( shift & 0xffffcfff ) != 0 )		2630490	1		||			
ANR	2643534	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2643535	Identifier	reg2		2630490	0					
ANR	2643536	PrimaryExpression	15		2630490	1					
ANR	2643537	EqualityExpression	( shift & 0xffffcfff ) != 0		2630490	1		!=			
ANR	2643538	BitAndExpression	shift & 0xffffcfff		2630490	0		&			
ANR	2643539	Identifier	shift		2630490	0					
ANR	2643540	PrimaryExpression	0xffffcfff		2630490	1					
ANR	2643541	PrimaryExpression	0		2630490	1					
ANR	2643542	CompoundStatement		2274:66:49480:49480	2630490	1					
ANR	2643543	ReturnStatement	return - 1 ;	3567:4:75345:75354	2630490	0	True				
ANR	2643544	UnaryOperationExpression	- 1		2630490	0					
ANR	2643545	UnaryOperator	-		2630490	0					
ANR	2643546	PrimaryExpression	1		2630490	1					
ANR	2643547	ExpressionStatement	ao -> o = 0x10f900f0	3570:3:75365:75383	2630490	4	True				
ANR	2643548	AssignmentExpression	ao -> o = 0x10f900f0		2630490	0		=			
ANR	2643549	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643550	Identifier	ao		2630490	0					
ANR	2643551	Identifier	o		2630490	1					
ANR	2643552	PrimaryExpression	0x10f900f0		2630490	1					
ANR	2643553	ExpressionStatement	ao -> o |= reg1 << 24	3571:3:75388:75407	2630490	5	True				
ANR	2643554	AssignmentExpression	ao -> o |= reg1 << 24		2630490	0		|=			
ANR	2643555	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643556	Identifier	ao		2630490	0					
ANR	2643557	Identifier	o		2630490	1					
ANR	2643558	ShiftExpression	reg1 << 24		2630490	1		<<			
ANR	2643559	Identifier	reg1		2630490	0					
ANR	2643560	PrimaryExpression	24		2630490	1					
ANR	2643561	ExpressionStatement	ao -> o |= reg2 << 8	3572:3:75412:75430	2630490	6	True				
ANR	2643562	AssignmentExpression	ao -> o |= reg2 << 8		2630490	0		|=			
ANR	2643563	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643564	Identifier	ao		2630490	0					
ANR	2643565	Identifier	o		2630490	1					
ANR	2643566	ShiftExpression	reg2 << 8		2630490	1		<<			
ANR	2643567	Identifier	reg2		2630490	0					
ANR	2643568	PrimaryExpression	8		2630490	1					
ANR	2643569	ExpressionStatement	ao -> o |= shift	3573:3:75435:75449	2630490	7	True				
ANR	2643570	AssignmentExpression	ao -> o |= shift		2630490	0		|=			
ANR	2643571	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643572	Identifier	ao		2630490	0					
ANR	2643573	Identifier	o		2630490	1					
ANR	2643574	Identifier	shift		2630490	1					
ANR	2643575	ReturnStatement	return 4 ;	3574:3:75454:75462	2630490	8	True				
ANR	2643576	PrimaryExpression	4		2630490	0					
ANR	2643577	BreakStatement	break ;	3576:3:75479:75484	2630490	7	True				
ANR	2643578	Label	default :	3577:2:75488:75495	2630490	8	True				
ANR	2643579	Identifier	default		2630490	0					
ANR	2643580	ReturnStatement	return - 1 ;	3578:3:75500:75509	2630490	9	True				
ANR	2643581	UnaryOperationExpression	- 1		2630490	0					
ANR	2643582	UnaryOperator	-		2630490	0					
ANR	2643583	PrimaryExpression	1		2630490	1					
ANR	2643584	ElseStatement	else		2630490	0					
ANR	2643585	IfStatement	"if ( ( m = opmask ( ao -> op , ""pop"" , 0 ) ) )"		2630490	0					
ANR	2643586	Condition	"m = opmask ( ao -> op , ""pop"" , 0 )"	3581:5:75528:75558	2630490	0	True				
ANR	2643587	AssignmentExpression	"m = opmask ( ao -> op , ""pop"" , 0 )"		2630490	0		=			
ANR	2643588	Identifier	m		2630490	0					
ANR	2643589	CallExpression	"opmask ( ao -> op , ""pop"" , 0 )"		2630490	1					
ANR	2643590	Callee	opmask		2630490	0					
ANR	2643591	Identifier	opmask		2630490	0					
ANR	2643592	ArgumentList	ao -> op		2630490	1					
ANR	2643593	Argument	ao -> op		2630490	0					
ANR	2643594	PtrMemberAccess	ao -> op		2630490	0					
ANR	2643595	Identifier	ao		2630490	0					
ANR	2643596	Identifier	op		2630490	1					
ANR	2643597	Argument	"""pop"""		2630490	1					
ANR	2643598	PrimaryExpression	"""pop"""		2630490	0					
ANR	2643599	Argument	0		2630490	2					
ANR	2643600	PrimaryExpression	0		2630490	0					
ANR	2643601	CompoundStatement		2290:2:49706:49740	2630490	1					
ANR	2643602	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3582:2:75565:75599	2630490	0	True				
ANR	2643603	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2643604	IdentifierDeclType	ut64		2630490	0					
ANR	2643605	Identifier	argt		2630490	1					
ANR	2643606	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2643607	Identifier	argt		2630490	0					
ANR	2643608	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2643609	Callee	thumb_selector		2630490	0					
ANR	2643610	Identifier	thumb_selector		2630490	0					
ANR	2643611	ArgumentList	ao -> a		2630490	1					
ANR	2643612	Argument	ao -> a		2630490	0					
ANR	2643613	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643614	Identifier	ao		2630490	0					
ANR	2643615	Identifier	a		2630490	1					
ANR	2643616	SwitchStatement	switch ( argt )		2630490	1					
ANR	2643617	Condition	argt	3583:10:75611:75614	2630490	0	True				
ANR	2643618	Identifier	argt		2630490	0					
ANR	2643619	CompoundStatement		2291:16:49758:49758	2630490	1					
ANR	2643620	Label	case THUMB_LIST :	3584:2:75621:75636	2630490	0	True				
ANR	2643621	Identifier	THUMB_LIST		2630490	0					
ANR	2643622	CompoundStatement		2293:3:49784:49817	2630490	1					
ANR	2643623	IdentifierDeclStatement	st32 list = getreglist ( ao -> a [ 0 ] ) ;	3585:3:75643:75676	2630490	0	True				
ANR	2643624	IdentifierDecl	list = getreglist ( ao -> a [ 0 ] )		2630490	0					
ANR	2643625	IdentifierDeclType	st32		2630490	0					
ANR	2643626	Identifier	list		2630490	1					
ANR	2643627	AssignmentExpression	list = getreglist ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2643628	Identifier	list		2630490	0					
ANR	2643629	CallExpression	getreglist ( ao -> a [ 0 ] )		2630490	1					
ANR	2643630	Callee	getreglist		2630490	0					
ANR	2643631	Identifier	getreglist		2630490	0					
ANR	2643632	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2643633	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2643634	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2643635	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643636	Identifier	ao		2630490	0					
ANR	2643637	Identifier	a		2630490	1					
ANR	2643638	PrimaryExpression	0		2630490	1					
ANR	2643639	IfStatement	if ( ( list <= 0 ) || ( ( list & ( 1 << 13 ) ) != 0 ) )		2630490	1					
ANR	2643640	Condition	( list <= 0 ) || ( ( list & ( 1 << 13 ) ) != 0 )	3586:7:75685:75724	2630490	0	True				
ANR	2643641	OrExpression	( list <= 0 ) || ( ( list & ( 1 << 13 ) ) != 0 )		2630490	0		||			
ANR	2643642	RelationalExpression	list <= 0		2630490	0		<=			
ANR	2643643	Identifier	list		2630490	0					
ANR	2643644	PrimaryExpression	0		2630490	1					
ANR	2643645	EqualityExpression	( list & ( 1 << 13 ) ) != 0		2630490	1		!=			
ANR	2643646	BitAndExpression	list & ( 1 << 13 )		2630490	0		&			
ANR	2643647	Identifier	list		2630490	0					
ANR	2643648	ShiftExpression	1 << 13		2630490	1		<<			
ANR	2643649	PrimaryExpression	1		2630490	0					
ANR	2643650	PrimaryExpression	13		2630490	1					
ANR	2643651	PrimaryExpression	0		2630490	1					
ANR	2643652	CompoundStatement		2294:49:49868:49868	2630490	1					
ANR	2643653	ReturnStatement	return - 1 ;	3587:4:75733:75742	2630490	0	True				
ANR	2643654	UnaryOperationExpression	- 1		2630490	0					
ANR	2643655	UnaryOperator	-		2630490	0					
ANR	2643656	PrimaryExpression	1		2630490	1					
ANR	2643657	IfStatement	if ( ( ! ( m & DOTW_BIT ) ) && ( ( list & 0x00007f00 ) == 0 ) )		2630490	2					
ANR	2643658	Condition	( ! ( m & DOTW_BIT ) ) && ( ( list & 0x00007f00 ) == 0 )	3589:7:75756:75802	2630490	0	True				
ANR	2643659	AndExpression	( ! ( m & DOTW_BIT ) ) && ( ( list & 0x00007f00 ) == 0 )		2630490	0		&&			
ANR	2643660	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	0					
ANR	2643661	UnaryOperator	!		2630490	0					
ANR	2643662	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2643663	Identifier	m		2630490	0					
ANR	2643664	Identifier	DOTW_BIT		2630490	1					
ANR	2643665	EqualityExpression	( list & 0x00007f00 ) == 0		2630490	1		==			
ANR	2643666	BitAndExpression	list & 0x00007f00		2630490	0		&			
ANR	2643667	Identifier	list		2630490	0					
ANR	2643668	PrimaryExpression	0x00007f00		2630490	1					
ANR	2643669	PrimaryExpression	0		2630490	1					
ANR	2643670	CompoundStatement		2297:56:49946:49946	2630490	1					
ANR	2643671	ExpressionStatement	ao -> o = 0x00bc	3590:4:75811:75825	2630490	0	True				
ANR	2643672	AssignmentExpression	ao -> o = 0x00bc		2630490	0		=			
ANR	2643673	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643674	Identifier	ao		2630490	0					
ANR	2643675	Identifier	o		2630490	1					
ANR	2643676	PrimaryExpression	0x00bc		2630490	1					
ANR	2643677	ExpressionStatement	ao -> o |= ( list & 0x8000 ) >> 15	3591:4:75831:75861	2630490	1	True				
ANR	2643678	AssignmentExpression	ao -> o |= ( list & 0x8000 ) >> 15		2630490	0		|=			
ANR	2643679	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643680	Identifier	ao		2630490	0					
ANR	2643681	Identifier	o		2630490	1					
ANR	2643682	ShiftExpression	( list & 0x8000 ) >> 15		2630490	1		>>			
ANR	2643683	BitAndExpression	list & 0x8000		2630490	0		&			
ANR	2643684	Identifier	list		2630490	0					
ANR	2643685	PrimaryExpression	0x8000		2630490	1					
ANR	2643686	PrimaryExpression	15		2630490	1					
ANR	2643687	ExpressionStatement	ao -> o |= ( list & 0xff ) << 8	3592:4:75867:75894	2630490	2	True				
ANR	2643688	AssignmentExpression	ao -> o |= ( list & 0xff ) << 8		2630490	0		|=			
ANR	2643689	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643690	Identifier	ao		2630490	0					
ANR	2643691	Identifier	o		2630490	1					
ANR	2643692	ShiftExpression	( list & 0xff ) << 8		2630490	1		<<			
ANR	2643693	BitAndExpression	list & 0xff		2630490	0		&			
ANR	2643694	Identifier	list		2630490	0					
ANR	2643695	PrimaryExpression	0xff		2630490	1					
ANR	2643696	PrimaryExpression	8		2630490	1					
ANR	2643697	ReturnStatement	return 2 ;	3593:4:75900:75908	2630490	3	True				
ANR	2643698	PrimaryExpression	2		2630490	0					
ANR	2643699	ExpressionStatement	ao -> o = 0xbde80000	3595:3:75918:75936	2630490	3	True				
ANR	2643700	AssignmentExpression	ao -> o = 0xbde80000		2630490	0		=			
ANR	2643701	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643702	Identifier	ao		2630490	0					
ANR	2643703	Identifier	o		2630490	1					
ANR	2643704	PrimaryExpression	0xbde80000		2630490	1					
ANR	2643705	ExpressionStatement	ao -> o |= ( list & 0xff00 ) >> 8	3596:3:75941:75970	2630490	4	True				
ANR	2643706	AssignmentExpression	ao -> o |= ( list & 0xff00 ) >> 8		2630490	0		|=			
ANR	2643707	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643708	Identifier	ao		2630490	0					
ANR	2643709	Identifier	o		2630490	1					
ANR	2643710	ShiftExpression	( list & 0xff00 ) >> 8		2630490	1		>>			
ANR	2643711	BitAndExpression	list & 0xff00		2630490	0		&			
ANR	2643712	Identifier	list		2630490	0					
ANR	2643713	PrimaryExpression	0xff00		2630490	1					
ANR	2643714	PrimaryExpression	8		2630490	1					
ANR	2643715	ExpressionStatement	ao -> o |= ( list & 0xff ) << 8	3597:3:75975:76002	2630490	5	True				
ANR	2643716	AssignmentExpression	ao -> o |= ( list & 0xff ) << 8		2630490	0		|=			
ANR	2643717	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643718	Identifier	ao		2630490	0					
ANR	2643719	Identifier	o		2630490	1					
ANR	2643720	ShiftExpression	( list & 0xff ) << 8		2630490	1		<<			
ANR	2643721	BitAndExpression	list & 0xff		2630490	0		&			
ANR	2643722	Identifier	list		2630490	0					
ANR	2643723	PrimaryExpression	0xff		2630490	1					
ANR	2643724	PrimaryExpression	8		2630490	1					
ANR	2643725	ReturnStatement	return 4 ;	3598:3:76007:76015	2630490	6	True				
ANR	2643726	PrimaryExpression	4		2630490	0					
ANR	2643727	BreakStatement	break ;	3600:3:76032:76037	2630490	2	True				
ANR	2643728	Label	default :	3601:2:76041:76048	2630490	3	True				
ANR	2643729	Identifier	default		2630490	0					
ANR	2643730	ReturnStatement	return - 1 ;	3602:3:76053:76062	2630490	4	True				
ANR	2643731	UnaryOperationExpression	- 1		2630490	0					
ANR	2643732	UnaryOperator	-		2630490	0					
ANR	2643733	PrimaryExpression	1		2630490	1					
ANR	2643734	ElseStatement	else		2630490	0					
ANR	2643735	IfStatement	"if ( ( m = opmask ( ao -> op , ""push"" , 0 ) ) )"		2630490	0					
ANR	2643736	Condition	"m = opmask ( ao -> op , ""push"" , 0 )"	3605:5:76081:76112	2630490	0	True				
ANR	2643737	AssignmentExpression	"m = opmask ( ao -> op , ""push"" , 0 )"		2630490	0		=			
ANR	2643738	Identifier	m		2630490	0					
ANR	2643739	CallExpression	"opmask ( ao -> op , ""push"" , 0 )"		2630490	1					
ANR	2643740	Callee	opmask		2630490	0					
ANR	2643741	Identifier	opmask		2630490	0					
ANR	2643742	ArgumentList	ao -> op		2630490	1					
ANR	2643743	Argument	ao -> op		2630490	0					
ANR	2643744	PtrMemberAccess	ao -> op		2630490	0					
ANR	2643745	Identifier	ao		2630490	0					
ANR	2643746	Identifier	op		2630490	1					
ANR	2643747	Argument	"""push"""		2630490	1					
ANR	2643748	PrimaryExpression	"""push"""		2630490	0					
ANR	2643749	Argument	0		2630490	2					
ANR	2643750	PrimaryExpression	0		2630490	0					
ANR	2643751	CompoundStatement		2314:2:50260:50294	2630490	1					
ANR	2643752	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3606:2:76119:76153	2630490	0	True				
ANR	2643753	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2643754	IdentifierDeclType	ut64		2630490	0					
ANR	2643755	Identifier	argt		2630490	1					
ANR	2643756	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2643757	Identifier	argt		2630490	0					
ANR	2643758	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2643759	Callee	thumb_selector		2630490	0					
ANR	2643760	Identifier	thumb_selector		2630490	0					
ANR	2643761	ArgumentList	ao -> a		2630490	1					
ANR	2643762	Argument	ao -> a		2630490	0					
ANR	2643763	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643764	Identifier	ao		2630490	0					
ANR	2643765	Identifier	a		2630490	1					
ANR	2643766	SwitchStatement	switch ( argt )		2630490	1					
ANR	2643767	Condition	argt	3607:10:76165:76168	2630490	0	True				
ANR	2643768	Identifier	argt		2630490	0					
ANR	2643769	CompoundStatement		2315:16:50312:50312	2630490	1					
ANR	2643770	Label	case THUMB_LIST :	3608:2:76175:76190	2630490	0	True				
ANR	2643771	Identifier	THUMB_LIST		2630490	0					
ANR	2643772	CompoundStatement		2317:3:50338:50371	2630490	1					
ANR	2643773	IdentifierDeclStatement	st32 list = getreglist ( ao -> a [ 0 ] ) ;	3609:3:76197:76230	2630490	0	True				
ANR	2643774	IdentifierDecl	list = getreglist ( ao -> a [ 0 ] )		2630490	0					
ANR	2643775	IdentifierDeclType	st32		2630490	0					
ANR	2643776	Identifier	list		2630490	1					
ANR	2643777	AssignmentExpression	list = getreglist ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2643778	Identifier	list		2630490	0					
ANR	2643779	CallExpression	getreglist ( ao -> a [ 0 ] )		2630490	1					
ANR	2643780	Callee	getreglist		2630490	0					
ANR	2643781	Identifier	getreglist		2630490	0					
ANR	2643782	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2643783	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2643784	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2643785	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643786	Identifier	ao		2630490	0					
ANR	2643787	Identifier	a		2630490	1					
ANR	2643788	PrimaryExpression	0		2630490	1					
ANR	2643789	IfStatement	if ( ( list <= 0 ) || ( ( list & 0x0000a000 ) != 0 ) )		2630490	1					
ANR	2643790	Condition	( list <= 0 ) || ( ( list & 0x0000a000 ) != 0 )	3610:7:76239:76279	2630490	0	True				
ANR	2643791	OrExpression	( list <= 0 ) || ( ( list & 0x0000a000 ) != 0 )		2630490	0		||			
ANR	2643792	RelationalExpression	list <= 0		2630490	0		<=			
ANR	2643793	Identifier	list		2630490	0					
ANR	2643794	PrimaryExpression	0		2630490	1					
ANR	2643795	EqualityExpression	( list & 0x0000a000 ) != 0		2630490	1		!=			
ANR	2643796	BitAndExpression	list & 0x0000a000		2630490	0		&			
ANR	2643797	Identifier	list		2630490	0					
ANR	2643798	PrimaryExpression	0x0000a000		2630490	1					
ANR	2643799	PrimaryExpression	0		2630490	1					
ANR	2643800	CompoundStatement		2318:50:50423:50423	2630490	1					
ANR	2643801	ReturnStatement	return - 1 ;	3611:4:76288:76297	2630490	0	True				
ANR	2643802	UnaryOperationExpression	- 1		2630490	0					
ANR	2643803	UnaryOperator	-		2630490	0					
ANR	2643804	PrimaryExpression	1		2630490	1					
ANR	2643805	IfStatement	if ( ( ! ( m & DOTW_BIT ) ) && ( ( list & 0x00001f00 ) == 0 ) )		2630490	2					
ANR	2643806	Condition	( ! ( m & DOTW_BIT ) ) && ( ( list & 0x00001f00 ) == 0 )	3613:7:76311:76357	2630490	0	True				
ANR	2643807	AndExpression	( ! ( m & DOTW_BIT ) ) && ( ( list & 0x00001f00 ) == 0 )		2630490	0		&&			
ANR	2643808	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	0					
ANR	2643809	UnaryOperator	!		2630490	0					
ANR	2643810	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2643811	Identifier	m		2630490	0					
ANR	2643812	Identifier	DOTW_BIT		2630490	1					
ANR	2643813	EqualityExpression	( list & 0x00001f00 ) == 0		2630490	1		==			
ANR	2643814	BitAndExpression	list & 0x00001f00		2630490	0		&			
ANR	2643815	Identifier	list		2630490	0					
ANR	2643816	PrimaryExpression	0x00001f00		2630490	1					
ANR	2643817	PrimaryExpression	0		2630490	1					
ANR	2643818	CompoundStatement		2321:56:50501:50501	2630490	1					
ANR	2643819	ExpressionStatement	ao -> o = 0x00b4	3614:4:76366:76380	2630490	0	True				
ANR	2643820	AssignmentExpression	ao -> o = 0x00b4		2630490	0		=			
ANR	2643821	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643822	Identifier	ao		2630490	0					
ANR	2643823	Identifier	o		2630490	1					
ANR	2643824	PrimaryExpression	0x00b4		2630490	1					
ANR	2643825	ExpressionStatement	ao -> o |= ( list & 0x4000 ) >> 14	3615:4:76386:76416	2630490	1	True				
ANR	2643826	AssignmentExpression	ao -> o |= ( list & 0x4000 ) >> 14		2630490	0		|=			
ANR	2643827	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643828	Identifier	ao		2630490	0					
ANR	2643829	Identifier	o		2630490	1					
ANR	2643830	ShiftExpression	( list & 0x4000 ) >> 14		2630490	1		>>			
ANR	2643831	BitAndExpression	list & 0x4000		2630490	0		&			
ANR	2643832	Identifier	list		2630490	0					
ANR	2643833	PrimaryExpression	0x4000		2630490	1					
ANR	2643834	PrimaryExpression	14		2630490	1					
ANR	2643835	ExpressionStatement	ao -> o |= ( list & 0xff ) << 8	3616:4:76422:76449	2630490	2	True				
ANR	2643836	AssignmentExpression	ao -> o |= ( list & 0xff ) << 8		2630490	0		|=			
ANR	2643837	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643838	Identifier	ao		2630490	0					
ANR	2643839	Identifier	o		2630490	1					
ANR	2643840	ShiftExpression	( list & 0xff ) << 8		2630490	1		<<			
ANR	2643841	BitAndExpression	list & 0xff		2630490	0		&			
ANR	2643842	Identifier	list		2630490	0					
ANR	2643843	PrimaryExpression	0xff		2630490	1					
ANR	2643844	PrimaryExpression	8		2630490	1					
ANR	2643845	ReturnStatement	return 2 ;	3617:4:76455:76463	2630490	3	True				
ANR	2643846	PrimaryExpression	2		2630490	0					
ANR	2643847	ExpressionStatement	ao -> o = 0x2de90000	3619:3:76473:76491	2630490	3	True				
ANR	2643848	AssignmentExpression	ao -> o = 0x2de90000		2630490	0		=			
ANR	2643849	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643850	Identifier	ao		2630490	0					
ANR	2643851	Identifier	o		2630490	1					
ANR	2643852	PrimaryExpression	0x2de90000		2630490	1					
ANR	2643853	ExpressionStatement	ao -> o |= ( list & 0xff00 ) >> 8	3620:3:76496:76525	2630490	4	True				
ANR	2643854	AssignmentExpression	ao -> o |= ( list & 0xff00 ) >> 8		2630490	0		|=			
ANR	2643855	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643856	Identifier	ao		2630490	0					
ANR	2643857	Identifier	o		2630490	1					
ANR	2643858	ShiftExpression	( list & 0xff00 ) >> 8		2630490	1		>>			
ANR	2643859	BitAndExpression	list & 0xff00		2630490	0		&			
ANR	2643860	Identifier	list		2630490	0					
ANR	2643861	PrimaryExpression	0xff00		2630490	1					
ANR	2643862	PrimaryExpression	8		2630490	1					
ANR	2643863	ExpressionStatement	ao -> o |= ( list & 0xff ) << 8	3621:3:76530:76557	2630490	5	True				
ANR	2643864	AssignmentExpression	ao -> o |= ( list & 0xff ) << 8		2630490	0		|=			
ANR	2643865	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643866	Identifier	ao		2630490	0					
ANR	2643867	Identifier	o		2630490	1					
ANR	2643868	ShiftExpression	( list & 0xff ) << 8		2630490	1		<<			
ANR	2643869	BitAndExpression	list & 0xff		2630490	0		&			
ANR	2643870	Identifier	list		2630490	0					
ANR	2643871	PrimaryExpression	0xff		2630490	1					
ANR	2643872	PrimaryExpression	8		2630490	1					
ANR	2643873	ReturnStatement	return 4 ;	3622:3:76562:76570	2630490	6	True				
ANR	2643874	PrimaryExpression	4		2630490	0					
ANR	2643875	BreakStatement	break ;	3624:3:76587:76592	2630490	2	True				
ANR	2643876	Label	default :	3625:2:76596:76603	2630490	3	True				
ANR	2643877	Identifier	default		2630490	0					
ANR	2643878	ReturnStatement	return - 1 ;	3626:3:76608:76617	2630490	4	True				
ANR	2643879	UnaryOperationExpression	- 1		2630490	0					
ANR	2643880	UnaryOperator	-		2630490	0					
ANR	2643881	PrimaryExpression	1		2630490	1					
ANR	2643882	ElseStatement	else		2630490	0					
ANR	2643883	IfStatement	"if ( ( m = opmask ( ao -> op , ""qadd"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		2630490	0					
ANR	2643884	Condition	"m = opmask ( ao -> op , ""qadd"" , EIGHT_BIT | SIXTEEN_BIT )"	3629:5:76636:76689	2630490	0	True				
ANR	2643885	AssignmentExpression	"m = opmask ( ao -> op , ""qadd"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	0		=			
ANR	2643886	Identifier	m		2630490	0					
ANR	2643887	CallExpression	"opmask ( ao -> op , ""qadd"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	1					
ANR	2643888	Callee	opmask		2630490	0					
ANR	2643889	Identifier	opmask		2630490	0					
ANR	2643890	ArgumentList	ao -> op		2630490	1					
ANR	2643891	Argument	ao -> op		2630490	0					
ANR	2643892	PtrMemberAccess	ao -> op		2630490	0					
ANR	2643893	Identifier	ao		2630490	0					
ANR	2643894	Identifier	op		2630490	1					
ANR	2643895	Argument	"""qadd"""		2630490	1					
ANR	2643896	PrimaryExpression	"""qadd"""		2630490	0					
ANR	2643897	Argument	EIGHT_BIT | SIXTEEN_BIT		2630490	2					
ANR	2643898	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		2630490	0		|			
ANR	2643899	Identifier	EIGHT_BIT		2630490	0					
ANR	2643900	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2643901	CompoundStatement		2338:2:50837:50871	2630490	1					
ANR	2643902	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3630:2:76696:76730	2630490	0	True				
ANR	2643903	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2643904	IdentifierDeclType	ut64		2630490	0					
ANR	2643905	Identifier	argt		2630490	1					
ANR	2643906	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2643907	Identifier	argt		2630490	0					
ANR	2643908	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2643909	Callee	thumb_selector		2630490	0					
ANR	2643910	Identifier	thumb_selector		2630490	0					
ANR	2643911	ArgumentList	ao -> a		2630490	1					
ANR	2643912	Argument	ao -> a		2630490	0					
ANR	2643913	PtrMemberAccess	ao -> a		2630490	0					
ANR	2643914	Identifier	ao		2630490	0					
ANR	2643915	Identifier	a		2630490	1					
ANR	2643916	SwitchStatement	switch ( argt )		2630490	1					
ANR	2643917	Condition	argt	3631:10:76742:76745	2630490	0	True				
ANR	2643918	Identifier	argt		2630490	0					
ANR	2643919	CompoundStatement		2339:16:50889:50889	2630490	1					
ANR	2643920	Label	case THUMB_REG_REG :	3632:2:76752:76770	2630490	0	True				
ANR	2643921	Identifier	THUMB_REG_REG		2630490	0					
ANR	2643922	CompoundStatement		2340:22:50913:50913	2630490	1					
ANR	2643923	ExpressionStatement	std_opt_2 ( ao )	3633:3:76777:76791	2630490	0	True				
ANR	2643924	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2643925	Callee	std_opt_2		2630490	0					
ANR	2643926	Identifier	std_opt_2		2630490	0					
ANR	2643927	ArgumentList	ao		2630490	1					
ANR	2643928	Argument	ao		2630490	0					
ANR	2643929	Identifier	ao		2630490	0					
ANR	2643930	Label	case THUMB_REG_REG_REG :	3636:2:76837:76859	2630490	2	True				
ANR	2643931	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2643932	CompoundStatement		2344:26:51002:51002	2630490	3					
ANR	2643933	IfStatement	if ( m & SIXTEEN_BIT )		2630490	0					
ANR	2643934	Condition	m & SIXTEEN_BIT	3637:7:76870:76884	2630490	0	True				
ANR	2643935	BitAndExpression	m & SIXTEEN_BIT		2630490	0		&			
ANR	2643936	Identifier	m		2630490	0					
ANR	2643937	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2643938	CompoundStatement		2345:24:51028:51028	2630490	1					
ANR	2643939	ExpressionStatement	ao -> o = 0x90fa10f0	3638:4:76893:76911	2630490	0	True				
ANR	2643940	AssignmentExpression	ao -> o = 0x90fa10f0		2630490	0		=			
ANR	2643941	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643942	Identifier	ao		2630490	0					
ANR	2643943	Identifier	o		2630490	1					
ANR	2643944	PrimaryExpression	0x90fa10f0		2630490	1					
ANR	2643945	ElseStatement	else		2630490	0					
ANR	2643946	IfStatement	if ( m & EIGHT_BIT )		2630490	0					
ANR	2643947	Condition	m & EIGHT_BIT	3640:7:76930:76942	2630490	0	True				
ANR	2643948	BitAndExpression	m & EIGHT_BIT		2630490	0		&			
ANR	2643949	Identifier	m		2630490	0					
ANR	2643950	Identifier	EIGHT_BIT		2630490	1					
ANR	2643951	CompoundStatement		2348:22:51086:51086	2630490	1					
ANR	2643952	ExpressionStatement	ao -> o = 0x80fa10f0	3641:4:76951:76969	2630490	0	True				
ANR	2643953	AssignmentExpression	ao -> o = 0x80fa10f0		2630490	0		=			
ANR	2643954	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643955	Identifier	ao		2630490	0					
ANR	2643956	Identifier	o		2630490	1					
ANR	2643957	PrimaryExpression	0x80fa10f0		2630490	1					
ANR	2643958	ElseStatement	else		2630490	0					
ANR	2643959	CompoundStatement		2350:10:51122:51122	2630490	0					
ANR	2643960	ExpressionStatement	ao -> o = 0x80fa80f0	3643:4:76987:77005	2630490	0	True				
ANR	2643961	AssignmentExpression	ao -> o = 0x80fa80f0		2630490	0		=			
ANR	2643962	PtrMemberAccess	ao -> o		2630490	0					
ANR	2643963	Identifier	ao		2630490	0					
ANR	2643964	Identifier	o		2630490	1					
ANR	2643965	PrimaryExpression	0x80fa80f0		2630490	1					
ANR	2643966	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3646:3:77016:77052	2630490	1	True				
ANR	2643967	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2643968	Callee	std_32bit_3reg		2630490	0					
ANR	2643969	Identifier	std_32bit_3reg		2630490	0					
ANR	2643970	ArgumentList	ao		2630490	1					
ANR	2643971	Argument	ao		2630490	0					
ANR	2643972	Identifier	ao		2630490	0					
ANR	2643973	Argument	m		2630490	1					
ANR	2643974	Identifier	m		2630490	0					
ANR	2643975	Argument	false		2630490	2					
ANR	2643976	Identifier	false		2630490	0					
ANR	2643977	BreakStatement	break ;	3648:3:77069:77074	2630490	4	True				
ANR	2643978	Label	default :	3649:2:77078:77085	2630490	5	True				
ANR	2643979	Identifier	default		2630490	0					
ANR	2643980	ReturnStatement	return - 1 ;	3650:3:77090:77099	2630490	6	True				
ANR	2643981	UnaryOperationExpression	- 1		2630490	0					
ANR	2643982	UnaryOperator	-		2630490	0					
ANR	2643983	PrimaryExpression	1		2630490	1					
ANR	2643984	ElseStatement	else		2630490	0					
ANR	2643985	IfStatement	"if ( ( m = opmask ( ao -> op , ""qasx"" , 0 ) ) )"		2630490	0					
ANR	2643986	Condition	"m = opmask ( ao -> op , ""qasx"" , 0 )"	3653:5:77118:77149	2630490	0	True				
ANR	2643987	AssignmentExpression	"m = opmask ( ao -> op , ""qasx"" , 0 )"		2630490	0		=			
ANR	2643988	Identifier	m		2630490	0					
ANR	2643989	CallExpression	"opmask ( ao -> op , ""qasx"" , 0 )"		2630490	1					
ANR	2643990	Callee	opmask		2630490	0					
ANR	2643991	Identifier	opmask		2630490	0					
ANR	2643992	ArgumentList	ao -> op		2630490	1					
ANR	2643993	Argument	ao -> op		2630490	0					
ANR	2643994	PtrMemberAccess	ao -> op		2630490	0					
ANR	2643995	Identifier	ao		2630490	0					
ANR	2643996	Identifier	op		2630490	1					
ANR	2643997	Argument	"""qasx"""		2630490	1					
ANR	2643998	PrimaryExpression	"""qasx"""		2630490	0					
ANR	2643999	Argument	0		2630490	2					
ANR	2644000	PrimaryExpression	0		2630490	0					
ANR	2644001	CompoundStatement		2362:2:51297:51331	2630490	1					
ANR	2644002	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3654:2:77156:77190	2630490	0	True				
ANR	2644003	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2644004	IdentifierDeclType	ut64		2630490	0					
ANR	2644005	Identifier	argt		2630490	1					
ANR	2644006	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2644007	Identifier	argt		2630490	0					
ANR	2644008	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2644009	Callee	thumb_selector		2630490	0					
ANR	2644010	Identifier	thumb_selector		2630490	0					
ANR	2644011	ArgumentList	ao -> a		2630490	1					
ANR	2644012	Argument	ao -> a		2630490	0					
ANR	2644013	PtrMemberAccess	ao -> a		2630490	0					
ANR	2644014	Identifier	ao		2630490	0					
ANR	2644015	Identifier	a		2630490	1					
ANR	2644016	SwitchStatement	switch ( argt )		2630490	1					
ANR	2644017	Condition	argt	3655:10:77202:77205	2630490	0	True				
ANR	2644018	Identifier	argt		2630490	0					
ANR	2644019	CompoundStatement		2363:16:51349:51349	2630490	1					
ANR	2644020	Label	case THUMB_REG_REG :	3656:2:77212:77230	2630490	0	True				
ANR	2644021	Identifier	THUMB_REG_REG		2630490	0					
ANR	2644022	CompoundStatement		2364:22:51373:51373	2630490	1					
ANR	2644023	ExpressionStatement	std_opt_2 ( ao )	3657:3:77237:77251	2630490	0	True				
ANR	2644024	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2644025	Callee	std_opt_2		2630490	0					
ANR	2644026	Identifier	std_opt_2		2630490	0					
ANR	2644027	ArgumentList	ao		2630490	1					
ANR	2644028	Argument	ao		2630490	0					
ANR	2644029	Identifier	ao		2630490	0					
ANR	2644030	Label	case THUMB_REG_REG_REG :	3660:2:77297:77319	2630490	2	True				
ANR	2644031	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2644032	CompoundStatement		2368:26:51462:51462	2630490	3					
ANR	2644033	ExpressionStatement	ao -> o = 0xa0fa10f0	3661:3:77326:77344	2630490	0	True				
ANR	2644034	AssignmentExpression	ao -> o = 0xa0fa10f0		2630490	0		=			
ANR	2644035	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644036	Identifier	ao		2630490	0					
ANR	2644037	Identifier	o		2630490	1					
ANR	2644038	PrimaryExpression	0xa0fa10f0		2630490	1					
ANR	2644039	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3662:3:77349:77385	2630490	1	True				
ANR	2644040	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2644041	Callee	std_32bit_3reg		2630490	0					
ANR	2644042	Identifier	std_32bit_3reg		2630490	0					
ANR	2644043	ArgumentList	ao		2630490	1					
ANR	2644044	Argument	ao		2630490	0					
ANR	2644045	Identifier	ao		2630490	0					
ANR	2644046	Argument	m		2630490	1					
ANR	2644047	Identifier	m		2630490	0					
ANR	2644048	Argument	false		2630490	2					
ANR	2644049	Identifier	false		2630490	0					
ANR	2644050	BreakStatement	break ;	3664:3:77402:77407	2630490	4	True				
ANR	2644051	Label	default :	3665:2:77411:77418	2630490	5	True				
ANR	2644052	Identifier	default		2630490	0					
ANR	2644053	ReturnStatement	return - 1 ;	3666:3:77423:77432	2630490	6	True				
ANR	2644054	UnaryOperationExpression	- 1		2630490	0					
ANR	2644055	UnaryOperator	-		2630490	0					
ANR	2644056	PrimaryExpression	1		2630490	1					
ANR	2644057	ElseStatement	else		2630490	0					
ANR	2644058	IfStatement	"if ( ( m = opmask ( ao -> op , ""qdadd"" , 0 ) ) )"		2630490	0					
ANR	2644059	Condition	"m = opmask ( ao -> op , ""qdadd"" , 0 )"	3669:5:77451:77483	2630490	0	True				
ANR	2644060	AssignmentExpression	"m = opmask ( ao -> op , ""qdadd"" , 0 )"		2630490	0		=			
ANR	2644061	Identifier	m		2630490	0					
ANR	2644062	CallExpression	"opmask ( ao -> op , ""qdadd"" , 0 )"		2630490	1					
ANR	2644063	Callee	opmask		2630490	0					
ANR	2644064	Identifier	opmask		2630490	0					
ANR	2644065	ArgumentList	ao -> op		2630490	1					
ANR	2644066	Argument	ao -> op		2630490	0					
ANR	2644067	PtrMemberAccess	ao -> op		2630490	0					
ANR	2644068	Identifier	ao		2630490	0					
ANR	2644069	Identifier	op		2630490	1					
ANR	2644070	Argument	"""qdadd"""		2630490	1					
ANR	2644071	PrimaryExpression	"""qdadd"""		2630490	0					
ANR	2644072	Argument	0		2630490	2					
ANR	2644073	PrimaryExpression	0		2630490	0					
ANR	2644074	CompoundStatement		2378:2:51631:51665	2630490	1					
ANR	2644075	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3670:2:77490:77524	2630490	0	True				
ANR	2644076	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2644077	IdentifierDeclType	ut64		2630490	0					
ANR	2644078	Identifier	argt		2630490	1					
ANR	2644079	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2644080	Identifier	argt		2630490	0					
ANR	2644081	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2644082	Callee	thumb_selector		2630490	0					
ANR	2644083	Identifier	thumb_selector		2630490	0					
ANR	2644084	ArgumentList	ao -> a		2630490	1					
ANR	2644085	Argument	ao -> a		2630490	0					
ANR	2644086	PtrMemberAccess	ao -> a		2630490	0					
ANR	2644087	Identifier	ao		2630490	0					
ANR	2644088	Identifier	a		2630490	1					
ANR	2644089	SwitchStatement	switch ( argt )		2630490	1					
ANR	2644090	Condition	argt	3671:10:77536:77539	2630490	0	True				
ANR	2644091	Identifier	argt		2630490	0					
ANR	2644092	CompoundStatement		2379:16:51683:51683	2630490	1					
ANR	2644093	Label	case THUMB_REG_REG :	3672:2:77546:77564	2630490	0	True				
ANR	2644094	Identifier	THUMB_REG_REG		2630490	0					
ANR	2644095	CompoundStatement		2380:22:51707:51707	2630490	1					
ANR	2644096	ExpressionStatement	std_opt_2 ( ao )	3673:3:77571:77585	2630490	0	True				
ANR	2644097	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2644098	Callee	std_opt_2		2630490	0					
ANR	2644099	Identifier	std_opt_2		2630490	0					
ANR	2644100	ArgumentList	ao		2630490	1					
ANR	2644101	Argument	ao		2630490	0					
ANR	2644102	Identifier	ao		2630490	0					
ANR	2644103	Label	case THUMB_REG_REG_REG :	3676:2:77631:77653	2630490	2	True				
ANR	2644104	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2644105	CompoundStatement		2384:26:51796:51796	2630490	3					
ANR	2644106	ExpressionStatement	ao -> o = 0x80fa90f0	3677:3:77660:77678	2630490	0	True				
ANR	2644107	AssignmentExpression	ao -> o = 0x80fa90f0		2630490	0		=			
ANR	2644108	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644109	Identifier	ao		2630490	0					
ANR	2644110	Identifier	o		2630490	1					
ANR	2644111	PrimaryExpression	0x80fa90f0		2630490	1					
ANR	2644112	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3678:3:77683:77719	2630490	1	True				
ANR	2644113	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2644114	Callee	std_32bit_3reg		2630490	0					
ANR	2644115	Identifier	std_32bit_3reg		2630490	0					
ANR	2644116	ArgumentList	ao		2630490	1					
ANR	2644117	Argument	ao		2630490	0					
ANR	2644118	Identifier	ao		2630490	0					
ANR	2644119	Argument	m		2630490	1					
ANR	2644120	Identifier	m		2630490	0					
ANR	2644121	Argument	false		2630490	2					
ANR	2644122	Identifier	false		2630490	0					
ANR	2644123	BreakStatement	break ;	3680:3:77736:77741	2630490	4	True				
ANR	2644124	Label	default :	3681:2:77745:77752	2630490	5	True				
ANR	2644125	Identifier	default		2630490	0					
ANR	2644126	ReturnStatement	return - 1 ;	3682:3:77757:77766	2630490	6	True				
ANR	2644127	UnaryOperationExpression	- 1		2630490	0					
ANR	2644128	UnaryOperator	-		2630490	0					
ANR	2644129	PrimaryExpression	1		2630490	1					
ANR	2644130	ElseStatement	else		2630490	0					
ANR	2644131	IfStatement	"if ( ( m = opmask ( ao -> op , ""qdsub"" , 0 ) ) )"		2630490	0					
ANR	2644132	Condition	"m = opmask ( ao -> op , ""qdsub"" , 0 )"	3685:5:77785:77817	2630490	0	True				
ANR	2644133	AssignmentExpression	"m = opmask ( ao -> op , ""qdsub"" , 0 )"		2630490	0		=			
ANR	2644134	Identifier	m		2630490	0					
ANR	2644135	CallExpression	"opmask ( ao -> op , ""qdsub"" , 0 )"		2630490	1					
ANR	2644136	Callee	opmask		2630490	0					
ANR	2644137	Identifier	opmask		2630490	0					
ANR	2644138	ArgumentList	ao -> op		2630490	1					
ANR	2644139	Argument	ao -> op		2630490	0					
ANR	2644140	PtrMemberAccess	ao -> op		2630490	0					
ANR	2644141	Identifier	ao		2630490	0					
ANR	2644142	Identifier	op		2630490	1					
ANR	2644143	Argument	"""qdsub"""		2630490	1					
ANR	2644144	PrimaryExpression	"""qdsub"""		2630490	0					
ANR	2644145	Argument	0		2630490	2					
ANR	2644146	PrimaryExpression	0		2630490	0					
ANR	2644147	CompoundStatement		2394:2:51965:51999	2630490	1					
ANR	2644148	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3686:2:77824:77858	2630490	0	True				
ANR	2644149	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2644150	IdentifierDeclType	ut64		2630490	0					
ANR	2644151	Identifier	argt		2630490	1					
ANR	2644152	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2644153	Identifier	argt		2630490	0					
ANR	2644154	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2644155	Callee	thumb_selector		2630490	0					
ANR	2644156	Identifier	thumb_selector		2630490	0					
ANR	2644157	ArgumentList	ao -> a		2630490	1					
ANR	2644158	Argument	ao -> a		2630490	0					
ANR	2644159	PtrMemberAccess	ao -> a		2630490	0					
ANR	2644160	Identifier	ao		2630490	0					
ANR	2644161	Identifier	a		2630490	1					
ANR	2644162	SwitchStatement	switch ( argt )		2630490	1					
ANR	2644163	Condition	argt	3687:10:77870:77873	2630490	0	True				
ANR	2644164	Identifier	argt		2630490	0					
ANR	2644165	CompoundStatement		2395:16:52017:52017	2630490	1					
ANR	2644166	Label	case THUMB_REG_REG :	3688:2:77880:77898	2630490	0	True				
ANR	2644167	Identifier	THUMB_REG_REG		2630490	0					
ANR	2644168	CompoundStatement		2396:22:52041:52041	2630490	1					
ANR	2644169	ExpressionStatement	std_opt_2 ( ao )	3689:3:77905:77919	2630490	0	True				
ANR	2644170	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2644171	Callee	std_opt_2		2630490	0					
ANR	2644172	Identifier	std_opt_2		2630490	0					
ANR	2644173	ArgumentList	ao		2630490	1					
ANR	2644174	Argument	ao		2630490	0					
ANR	2644175	Identifier	ao		2630490	0					
ANR	2644176	Label	case THUMB_REG_REG_REG :	3692:2:77965:77987	2630490	2	True				
ANR	2644177	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2644178	CompoundStatement		2400:26:52130:52130	2630490	3					
ANR	2644179	ExpressionStatement	ao -> o = 0x80fab0f0	3693:3:77994:78012	2630490	0	True				
ANR	2644180	AssignmentExpression	ao -> o = 0x80fab0f0		2630490	0		=			
ANR	2644181	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644182	Identifier	ao		2630490	0					
ANR	2644183	Identifier	o		2630490	1					
ANR	2644184	PrimaryExpression	0x80fab0f0		2630490	1					
ANR	2644185	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3694:3:78017:78053	2630490	1	True				
ANR	2644186	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2644187	Callee	std_32bit_3reg		2630490	0					
ANR	2644188	Identifier	std_32bit_3reg		2630490	0					
ANR	2644189	ArgumentList	ao		2630490	1					
ANR	2644190	Argument	ao		2630490	0					
ANR	2644191	Identifier	ao		2630490	0					
ANR	2644192	Argument	m		2630490	1					
ANR	2644193	Identifier	m		2630490	0					
ANR	2644194	Argument	false		2630490	2					
ANR	2644195	Identifier	false		2630490	0					
ANR	2644196	BreakStatement	break ;	3696:3:78070:78075	2630490	4	True				
ANR	2644197	Label	default :	3697:2:78079:78086	2630490	5	True				
ANR	2644198	Identifier	default		2630490	0					
ANR	2644199	ReturnStatement	return - 1 ;	3698:3:78091:78100	2630490	6	True				
ANR	2644200	UnaryOperationExpression	- 1		2630490	0					
ANR	2644201	UnaryOperator	-		2630490	0					
ANR	2644202	PrimaryExpression	1		2630490	1					
ANR	2644203	ElseStatement	else		2630490	0					
ANR	2644204	IfStatement	"if ( ( m = opmask ( ao -> op , ""qsax"" , 0 ) ) )"		2630490	0					
ANR	2644205	Condition	"m = opmask ( ao -> op , ""qsax"" , 0 )"	3701:5:78119:78150	2630490	0	True				
ANR	2644206	AssignmentExpression	"m = opmask ( ao -> op , ""qsax"" , 0 )"		2630490	0		=			
ANR	2644207	Identifier	m		2630490	0					
ANR	2644208	CallExpression	"opmask ( ao -> op , ""qsax"" , 0 )"		2630490	1					
ANR	2644209	Callee	opmask		2630490	0					
ANR	2644210	Identifier	opmask		2630490	0					
ANR	2644211	ArgumentList	ao -> op		2630490	1					
ANR	2644212	Argument	ao -> op		2630490	0					
ANR	2644213	PtrMemberAccess	ao -> op		2630490	0					
ANR	2644214	Identifier	ao		2630490	0					
ANR	2644215	Identifier	op		2630490	1					
ANR	2644216	Argument	"""qsax"""		2630490	1					
ANR	2644217	PrimaryExpression	"""qsax"""		2630490	0					
ANR	2644218	Argument	0		2630490	2					
ANR	2644219	PrimaryExpression	0		2630490	0					
ANR	2644220	CompoundStatement		2410:2:52298:52332	2630490	1					
ANR	2644221	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3702:2:78157:78191	2630490	0	True				
ANR	2644222	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2644223	IdentifierDeclType	ut64		2630490	0					
ANR	2644224	Identifier	argt		2630490	1					
ANR	2644225	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2644226	Identifier	argt		2630490	0					
ANR	2644227	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2644228	Callee	thumb_selector		2630490	0					
ANR	2644229	Identifier	thumb_selector		2630490	0					
ANR	2644230	ArgumentList	ao -> a		2630490	1					
ANR	2644231	Argument	ao -> a		2630490	0					
ANR	2644232	PtrMemberAccess	ao -> a		2630490	0					
ANR	2644233	Identifier	ao		2630490	0					
ANR	2644234	Identifier	a		2630490	1					
ANR	2644235	SwitchStatement	switch ( argt )		2630490	1					
ANR	2644236	Condition	argt	3703:10:78203:78206	2630490	0	True				
ANR	2644237	Identifier	argt		2630490	0					
ANR	2644238	CompoundStatement		2411:16:52350:52350	2630490	1					
ANR	2644239	Label	case THUMB_REG_REG :	3704:2:78213:78231	2630490	0	True				
ANR	2644240	Identifier	THUMB_REG_REG		2630490	0					
ANR	2644241	CompoundStatement		2412:22:52374:52374	2630490	1					
ANR	2644242	ExpressionStatement	std_opt_2 ( ao )	3705:3:78238:78252	2630490	0	True				
ANR	2644243	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2644244	Callee	std_opt_2		2630490	0					
ANR	2644245	Identifier	std_opt_2		2630490	0					
ANR	2644246	ArgumentList	ao		2630490	1					
ANR	2644247	Argument	ao		2630490	0					
ANR	2644248	Identifier	ao		2630490	0					
ANR	2644249	Label	case THUMB_REG_REG_REG :	3708:2:78298:78320	2630490	2	True				
ANR	2644250	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2644251	CompoundStatement		2416:26:52463:52463	2630490	3					
ANR	2644252	ExpressionStatement	ao -> o = 0xe0fa10f0	3709:3:78327:78345	2630490	0	True				
ANR	2644253	AssignmentExpression	ao -> o = 0xe0fa10f0		2630490	0		=			
ANR	2644254	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644255	Identifier	ao		2630490	0					
ANR	2644256	Identifier	o		2630490	1					
ANR	2644257	PrimaryExpression	0xe0fa10f0		2630490	1					
ANR	2644258	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3710:3:78350:78386	2630490	1	True				
ANR	2644259	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2644260	Callee	std_32bit_3reg		2630490	0					
ANR	2644261	Identifier	std_32bit_3reg		2630490	0					
ANR	2644262	ArgumentList	ao		2630490	1					
ANR	2644263	Argument	ao		2630490	0					
ANR	2644264	Identifier	ao		2630490	0					
ANR	2644265	Argument	m		2630490	1					
ANR	2644266	Identifier	m		2630490	0					
ANR	2644267	Argument	false		2630490	2					
ANR	2644268	Identifier	false		2630490	0					
ANR	2644269	BreakStatement	break ;	3712:3:78403:78408	2630490	4	True				
ANR	2644270	Label	default :	3713:2:78412:78419	2630490	5	True				
ANR	2644271	Identifier	default		2630490	0					
ANR	2644272	ReturnStatement	return - 1 ;	3714:3:78424:78433	2630490	6	True				
ANR	2644273	UnaryOperationExpression	- 1		2630490	0					
ANR	2644274	UnaryOperator	-		2630490	0					
ANR	2644275	PrimaryExpression	1		2630490	1					
ANR	2644276	ElseStatement	else		2630490	0					
ANR	2644277	IfStatement	"if ( ( m = opmask ( ao -> op , ""qsub"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		2630490	0					
ANR	2644278	Condition	"m = opmask ( ao -> op , ""qsub"" , EIGHT_BIT | SIXTEEN_BIT )"	3717:5:78452:78505	2630490	0	True				
ANR	2644279	AssignmentExpression	"m = opmask ( ao -> op , ""qsub"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	0		=			
ANR	2644280	Identifier	m		2630490	0					
ANR	2644281	CallExpression	"opmask ( ao -> op , ""qsub"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	1					
ANR	2644282	Callee	opmask		2630490	0					
ANR	2644283	Identifier	opmask		2630490	0					
ANR	2644284	ArgumentList	ao -> op		2630490	1					
ANR	2644285	Argument	ao -> op		2630490	0					
ANR	2644286	PtrMemberAccess	ao -> op		2630490	0					
ANR	2644287	Identifier	ao		2630490	0					
ANR	2644288	Identifier	op		2630490	1					
ANR	2644289	Argument	"""qsub"""		2630490	1					
ANR	2644290	PrimaryExpression	"""qsub"""		2630490	0					
ANR	2644291	Argument	EIGHT_BIT | SIXTEEN_BIT		2630490	2					
ANR	2644292	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		2630490	0		|			
ANR	2644293	Identifier	EIGHT_BIT		2630490	0					
ANR	2644294	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2644295	CompoundStatement		2426:2:52653:52687	2630490	1					
ANR	2644296	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3718:2:78512:78546	2630490	0	True				
ANR	2644297	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2644298	IdentifierDeclType	ut64		2630490	0					
ANR	2644299	Identifier	argt		2630490	1					
ANR	2644300	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2644301	Identifier	argt		2630490	0					
ANR	2644302	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2644303	Callee	thumb_selector		2630490	0					
ANR	2644304	Identifier	thumb_selector		2630490	0					
ANR	2644305	ArgumentList	ao -> a		2630490	1					
ANR	2644306	Argument	ao -> a		2630490	0					
ANR	2644307	PtrMemberAccess	ao -> a		2630490	0					
ANR	2644308	Identifier	ao		2630490	0					
ANR	2644309	Identifier	a		2630490	1					
ANR	2644310	SwitchStatement	switch ( argt )		2630490	1					
ANR	2644311	Condition	argt	3719:10:78558:78561	2630490	0	True				
ANR	2644312	Identifier	argt		2630490	0					
ANR	2644313	CompoundStatement		2427:16:52705:52705	2630490	1					
ANR	2644314	Label	case THUMB_REG_REG :	3720:2:78568:78586	2630490	0	True				
ANR	2644315	Identifier	THUMB_REG_REG		2630490	0					
ANR	2644316	CompoundStatement		2428:22:52729:52729	2630490	1					
ANR	2644317	ExpressionStatement	std_opt_2 ( ao )	3721:3:78593:78607	2630490	0	True				
ANR	2644318	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2644319	Callee	std_opt_2		2630490	0					
ANR	2644320	Identifier	std_opt_2		2630490	0					
ANR	2644321	ArgumentList	ao		2630490	1					
ANR	2644322	Argument	ao		2630490	0					
ANR	2644323	Identifier	ao		2630490	0					
ANR	2644324	Label	case THUMB_REG_REG_REG :	3724:2:78653:78675	2630490	2	True				
ANR	2644325	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2644326	CompoundStatement		2432:26:52818:52818	2630490	3					
ANR	2644327	IfStatement	if ( m & SIXTEEN_BIT )		2630490	0					
ANR	2644328	Condition	m & SIXTEEN_BIT	3725:7:78686:78700	2630490	0	True				
ANR	2644329	BitAndExpression	m & SIXTEEN_BIT		2630490	0		&			
ANR	2644330	Identifier	m		2630490	0					
ANR	2644331	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2644332	CompoundStatement		2433:24:52844:52844	2630490	1					
ANR	2644333	ExpressionStatement	ao -> o = 0xd0fa10f0	3726:4:78709:78727	2630490	0	True				
ANR	2644334	AssignmentExpression	ao -> o = 0xd0fa10f0		2630490	0		=			
ANR	2644335	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644336	Identifier	ao		2630490	0					
ANR	2644337	Identifier	o		2630490	1					
ANR	2644338	PrimaryExpression	0xd0fa10f0		2630490	1					
ANR	2644339	ElseStatement	else		2630490	0					
ANR	2644340	IfStatement	if ( m & EIGHT_BIT )		2630490	0					
ANR	2644341	Condition	m & EIGHT_BIT	3728:7:78746:78758	2630490	0	True				
ANR	2644342	BitAndExpression	m & EIGHT_BIT		2630490	0		&			
ANR	2644343	Identifier	m		2630490	0					
ANR	2644344	Identifier	EIGHT_BIT		2630490	1					
ANR	2644345	CompoundStatement		2436:22:52902:52902	2630490	1					
ANR	2644346	ExpressionStatement	ao -> o = 0xc0fa10f0	3729:4:78767:78785	2630490	0	True				
ANR	2644347	AssignmentExpression	ao -> o = 0xc0fa10f0		2630490	0		=			
ANR	2644348	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644349	Identifier	ao		2630490	0					
ANR	2644350	Identifier	o		2630490	1					
ANR	2644351	PrimaryExpression	0xc0fa10f0		2630490	1					
ANR	2644352	ElseStatement	else		2630490	0					
ANR	2644353	CompoundStatement		2438:10:52938:52938	2630490	0					
ANR	2644354	ExpressionStatement	ao -> o = 0x80faa0f0	3731:4:78803:78821	2630490	0	True				
ANR	2644355	AssignmentExpression	ao -> o = 0x80faa0f0		2630490	0		=			
ANR	2644356	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644357	Identifier	ao		2630490	0					
ANR	2644358	Identifier	o		2630490	1					
ANR	2644359	PrimaryExpression	0x80faa0f0		2630490	1					
ANR	2644360	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3733:3:78831:78867	2630490	1	True				
ANR	2644361	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2644362	Callee	std_32bit_3reg		2630490	0					
ANR	2644363	Identifier	std_32bit_3reg		2630490	0					
ANR	2644364	ArgumentList	ao		2630490	1					
ANR	2644365	Argument	ao		2630490	0					
ANR	2644366	Identifier	ao		2630490	0					
ANR	2644367	Argument	m		2630490	1					
ANR	2644368	Identifier	m		2630490	0					
ANR	2644369	Argument	false		2630490	2					
ANR	2644370	Identifier	false		2630490	0					
ANR	2644371	BreakStatement	break ;	3735:3:78884:78889	2630490	4	True				
ANR	2644372	Label	default :	3736:2:78893:78900	2630490	5	True				
ANR	2644373	Identifier	default		2630490	0					
ANR	2644374	ReturnStatement	return - 1 ;	3737:3:78905:78914	2630490	6	True				
ANR	2644375	UnaryOperationExpression	- 1		2630490	0					
ANR	2644376	UnaryOperator	-		2630490	0					
ANR	2644377	PrimaryExpression	1		2630490	1					
ANR	2644378	ElseStatement	else		2630490	0					
ANR	2644379	IfStatement	"if ( ( m = opmask ( ao -> op , ""rbit"" , 0 ) ) )"		2630490	0					
ANR	2644380	Condition	"m = opmask ( ao -> op , ""rbit"" , 0 )"	3740:5:78933:78964	2630490	0	True				
ANR	2644381	AssignmentExpression	"m = opmask ( ao -> op , ""rbit"" , 0 )"		2630490	0		=			
ANR	2644382	Identifier	m		2630490	0					
ANR	2644383	CallExpression	"opmask ( ao -> op , ""rbit"" , 0 )"		2630490	1					
ANR	2644384	Callee	opmask		2630490	0					
ANR	2644385	Identifier	opmask		2630490	0					
ANR	2644386	ArgumentList	ao -> op		2630490	1					
ANR	2644387	Argument	ao -> op		2630490	0					
ANR	2644388	PtrMemberAccess	ao -> op		2630490	0					
ANR	2644389	Identifier	ao		2630490	0					
ANR	2644390	Identifier	op		2630490	1					
ANR	2644391	Argument	"""rbit"""		2630490	1					
ANR	2644392	PrimaryExpression	"""rbit"""		2630490	0					
ANR	2644393	Argument	0		2630490	2					
ANR	2644394	PrimaryExpression	0		2630490	0					
ANR	2644395	CompoundStatement		2449:2:53112:53146	2630490	1					
ANR	2644396	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3741:2:78971:79005	2630490	0	True				
ANR	2644397	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2644398	IdentifierDeclType	ut64		2630490	0					
ANR	2644399	Identifier	argt		2630490	1					
ANR	2644400	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2644401	Identifier	argt		2630490	0					
ANR	2644402	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2644403	Callee	thumb_selector		2630490	0					
ANR	2644404	Identifier	thumb_selector		2630490	0					
ANR	2644405	ArgumentList	ao -> a		2630490	1					
ANR	2644406	Argument	ao -> a		2630490	0					
ANR	2644407	PtrMemberAccess	ao -> a		2630490	0					
ANR	2644408	Identifier	ao		2630490	0					
ANR	2644409	Identifier	a		2630490	1					
ANR	2644410	SwitchStatement	switch ( argt )		2630490	1					
ANR	2644411	Condition	argt	3742:10:79017:79020	2630490	0	True				
ANR	2644412	Identifier	argt		2630490	0					
ANR	2644413	CompoundStatement		2450:16:53164:53164	2630490	1					
ANR	2644414	Label	case THUMB_REG_REG :	3743:2:79027:79045	2630490	0	True				
ANR	2644415	Identifier	THUMB_REG_REG		2630490	0					
ANR	2644416	CompoundStatement		2451:22:53188:53188	2630490	1					
ANR	2644417	ExpressionStatement	ao -> a [ 2 ] = ao -> a [ 1 ]	3744:3:79052:79071	2630490	0	True				
ANR	2644418	AssignmentExpression	ao -> a [ 2 ] = ao -> a [ 1 ]		2630490	0		=			
ANR	2644419	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2644420	PtrMemberAccess	ao -> a		2630490	0					
ANR	2644421	Identifier	ao		2630490	0					
ANR	2644422	Identifier	a		2630490	1					
ANR	2644423	PrimaryExpression	2		2630490	1					
ANR	2644424	ArrayIndexing	ao -> a [ 1 ]		2630490	1					
ANR	2644425	PtrMemberAccess	ao -> a		2630490	0					
ANR	2644426	Identifier	ao		2630490	0					
ANR	2644427	Identifier	a		2630490	1					
ANR	2644428	PrimaryExpression	1		2630490	1					
ANR	2644429	ExpressionStatement	ao -> o = 0x90faa0f0	3745:3:79076:79094	2630490	1	True				
ANR	2644430	AssignmentExpression	ao -> o = 0x90faa0f0		2630490	0		=			
ANR	2644431	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644432	Identifier	ao		2630490	0					
ANR	2644433	Identifier	o		2630490	1					
ANR	2644434	PrimaryExpression	0x90faa0f0		2630490	1					
ANR	2644435	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3746:3:79099:79135	2630490	2	True				
ANR	2644436	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2644437	Callee	std_32bit_3reg		2630490	0					
ANR	2644438	Identifier	std_32bit_3reg		2630490	0					
ANR	2644439	ArgumentList	ao		2630490	1					
ANR	2644440	Argument	ao		2630490	0					
ANR	2644441	Identifier	ao		2630490	0					
ANR	2644442	Argument	m		2630490	1					
ANR	2644443	Identifier	m		2630490	0					
ANR	2644444	Argument	false		2630490	2					
ANR	2644445	Identifier	false		2630490	0					
ANR	2644446	BreakStatement	break ;	3748:3:79152:79157	2630490	2	True				
ANR	2644447	Label	default :	3749:2:79161:79168	2630490	3	True				
ANR	2644448	Identifier	default		2630490	0					
ANR	2644449	ReturnStatement	return - 1 ;	3750:3:79173:79182	2630490	4	True				
ANR	2644450	UnaryOperationExpression	- 1		2630490	0					
ANR	2644451	UnaryOperator	-		2630490	0					
ANR	2644452	PrimaryExpression	1		2630490	1					
ANR	2644453	ElseStatement	else		2630490	0					
ANR	2644454	IfStatement	"if ( ( m = opmask ( ao -> op , ""rev"" , SIXTEEN_BIT | SH_BIT ) ) )"		2630490	0					
ANR	2644455	Condition	"m = opmask ( ao -> op , ""rev"" , SIXTEEN_BIT | SH_BIT )"	3753:5:79201:79250	2630490	0	True				
ANR	2644456	AssignmentExpression	"m = opmask ( ao -> op , ""rev"" , SIXTEEN_BIT | SH_BIT )"		2630490	0		=			
ANR	2644457	Identifier	m		2630490	0					
ANR	2644458	CallExpression	"opmask ( ao -> op , ""rev"" , SIXTEEN_BIT | SH_BIT )"		2630490	1					
ANR	2644459	Callee	opmask		2630490	0					
ANR	2644460	Identifier	opmask		2630490	0					
ANR	2644461	ArgumentList	ao -> op		2630490	1					
ANR	2644462	Argument	ao -> op		2630490	0					
ANR	2644463	PtrMemberAccess	ao -> op		2630490	0					
ANR	2644464	Identifier	ao		2630490	0					
ANR	2644465	Identifier	op		2630490	1					
ANR	2644466	Argument	"""rev"""		2630490	1					
ANR	2644467	PrimaryExpression	"""rev"""		2630490	0					
ANR	2644468	Argument	SIXTEEN_BIT | SH_BIT		2630490	2					
ANR	2644469	InclusiveOrExpression	SIXTEEN_BIT | SH_BIT		2630490	0		|			
ANR	2644470	Identifier	SIXTEEN_BIT		2630490	0					
ANR	2644471	Identifier	SH_BIT		2630490	1					
ANR	2644472	CompoundStatement		2462:2:53398:53432	2630490	1					
ANR	2644473	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3754:2:79257:79291	2630490	0	True				
ANR	2644474	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2644475	IdentifierDeclType	ut64		2630490	0					
ANR	2644476	Identifier	argt		2630490	1					
ANR	2644477	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2644478	Identifier	argt		2630490	0					
ANR	2644479	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2644480	Callee	thumb_selector		2630490	0					
ANR	2644481	Identifier	thumb_selector		2630490	0					
ANR	2644482	ArgumentList	ao -> a		2630490	1					
ANR	2644483	Argument	ao -> a		2630490	0					
ANR	2644484	PtrMemberAccess	ao -> a		2630490	0					
ANR	2644485	Identifier	ao		2630490	0					
ANR	2644486	Identifier	a		2630490	1					
ANR	2644487	SwitchStatement	switch ( argt )		2630490	1					
ANR	2644488	Condition	argt	3755:10:79303:79306	2630490	0	True				
ANR	2644489	Identifier	argt		2630490	0					
ANR	2644490	CompoundStatement		2463:16:53450:53450	2630490	1					
ANR	2644491	Label	case THUMB_REG_REG :	3756:2:79313:79331	2630490	0	True				
ANR	2644492	Identifier	THUMB_REG_REG		2630490	0					
ANR	2644493	CompoundStatement		2464:22:53474:53474	2630490	1					
ANR	2644494	IfStatement	if ( m & SIXTEEN_BIT )		2630490	0					
ANR	2644495	Condition	m & SIXTEEN_BIT	3757:7:79342:79356	2630490	0	True				
ANR	2644496	BitAndExpression	m & SIXTEEN_BIT		2630490	0		&			
ANR	2644497	Identifier	m		2630490	0					
ANR	2644498	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2644499	CompoundStatement		2465:24:53500:53500	2630490	1					
ANR	2644500	ExpressionStatement	ao -> o = 0x40ba	3758:4:79365:79379	2630490	0	True				
ANR	2644501	AssignmentExpression	ao -> o = 0x40ba		2630490	0		=			
ANR	2644502	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644503	Identifier	ao		2630490	0					
ANR	2644504	Identifier	o		2630490	1					
ANR	2644505	PrimaryExpression	0x40ba		2630490	1					
ANR	2644506	ElseStatement	else		2630490	0					
ANR	2644507	IfStatement	if ( m & SH_BIT )		2630490	0					
ANR	2644508	Condition	m & SH_BIT	3760:7:79398:79407	2630490	0	True				
ANR	2644509	BitAndExpression	m & SH_BIT		2630490	0		&			
ANR	2644510	Identifier	m		2630490	0					
ANR	2644511	Identifier	SH_BIT		2630490	1					
ANR	2644512	CompoundStatement		2468:19:53551:53551	2630490	1					
ANR	2644513	ExpressionStatement	ao -> o = 0xc0ba	3761:4:79416:79430	2630490	0	True				
ANR	2644514	AssignmentExpression	ao -> o = 0xc0ba		2630490	0		=			
ANR	2644515	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644516	Identifier	ao		2630490	0					
ANR	2644517	Identifier	o		2630490	1					
ANR	2644518	PrimaryExpression	0xc0ba		2630490	1					
ANR	2644519	ElseStatement	else		2630490	0					
ANR	2644520	CompoundStatement		2470:10:53583:53583	2630490	0					
ANR	2644521	ExpressionStatement	ao -> o = 0x00ba	3763:4:79448:79462	2630490	0	True				
ANR	2644522	AssignmentExpression	ao -> o = 0x00ba		2630490	0		=			
ANR	2644523	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644524	Identifier	ao		2630490	0					
ANR	2644525	Identifier	o		2630490	1					
ANR	2644526	PrimaryExpression	0x00ba		2630490	1					
ANR	2644527	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	1					
ANR	2644528	Condition	"std_16bit_2reg ( ao , m )"	3766:7:79477:79498	2630490	0	True				
ANR	2644529	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2644530	Callee	std_16bit_2reg		2630490	0					
ANR	2644531	Identifier	std_16bit_2reg		2630490	0					
ANR	2644532	ArgumentList	ao		2630490	1					
ANR	2644533	Argument	ao		2630490	0					
ANR	2644534	Identifier	ao		2630490	0					
ANR	2644535	Argument	m		2630490	1					
ANR	2644536	Identifier	m		2630490	0					
ANR	2644537	CompoundStatement		2474:31:53642:53642	2630490	1					
ANR	2644538	ReturnStatement	return 2 ;	3767:4:79507:79515	2630490	0	True				
ANR	2644539	PrimaryExpression	2		2630490	0					
ANR	2644540	IfStatement	if ( m & SIXTEEN_BIT )		2630490	2					
ANR	2644541	Condition	m & SIXTEEN_BIT	3770:7:79533:79547	2630490	0	True				
ANR	2644542	BitAndExpression	m & SIXTEEN_BIT		2630490	0		&			
ANR	2644543	Identifier	m		2630490	0					
ANR	2644544	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2644545	CompoundStatement		2478:24:53691:53691	2630490	1					
ANR	2644546	ExpressionStatement	ao -> o = 0x90fa90f0	3771:4:79556:79574	2630490	0	True				
ANR	2644547	AssignmentExpression	ao -> o = 0x90fa90f0		2630490	0		=			
ANR	2644548	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644549	Identifier	ao		2630490	0					
ANR	2644550	Identifier	o		2630490	1					
ANR	2644551	PrimaryExpression	0x90fa90f0		2630490	1					
ANR	2644552	ElseStatement	else		2630490	0					
ANR	2644553	IfStatement	if ( m & SH_BIT )		2630490	0					
ANR	2644554	Condition	m & SH_BIT	3773:7:79593:79602	2630490	0	True				
ANR	2644555	BitAndExpression	m & SH_BIT		2630490	0		&			
ANR	2644556	Identifier	m		2630490	0					
ANR	2644557	Identifier	SH_BIT		2630490	1					
ANR	2644558	CompoundStatement		2481:19:53746:53746	2630490	1					
ANR	2644559	ExpressionStatement	ao -> o = 0x90fab0f0	3774:4:79611:79629	2630490	0	True				
ANR	2644560	AssignmentExpression	ao -> o = 0x90fab0f0		2630490	0		=			
ANR	2644561	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644562	Identifier	ao		2630490	0					
ANR	2644563	Identifier	o		2630490	1					
ANR	2644564	PrimaryExpression	0x90fab0f0		2630490	1					
ANR	2644565	ElseStatement	else		2630490	0					
ANR	2644566	CompoundStatement		2483:10:53782:53782	2630490	0					
ANR	2644567	ExpressionStatement	ao -> o = 0x90fa80f0	3776:4:79647:79665	2630490	0	True				
ANR	2644568	AssignmentExpression	ao -> o = 0x90fa80f0		2630490	0		=			
ANR	2644569	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644570	Identifier	ao		2630490	0					
ANR	2644571	Identifier	o		2630490	1					
ANR	2644572	PrimaryExpression	0x90fa80f0		2630490	1					
ANR	2644573	ExpressionStatement	ao -> a [ 2 ] = ao -> a [ 1 ]	3778:3:79675:79694	2630490	3	True				
ANR	2644574	AssignmentExpression	ao -> a [ 2 ] = ao -> a [ 1 ]		2630490	0		=			
ANR	2644575	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2644576	PtrMemberAccess	ao -> a		2630490	0					
ANR	2644577	Identifier	ao		2630490	0					
ANR	2644578	Identifier	a		2630490	1					
ANR	2644579	PrimaryExpression	2		2630490	1					
ANR	2644580	ArrayIndexing	ao -> a [ 1 ]		2630490	1					
ANR	2644581	PtrMemberAccess	ao -> a		2630490	0					
ANR	2644582	Identifier	ao		2630490	0					
ANR	2644583	Identifier	a		2630490	1					
ANR	2644584	PrimaryExpression	1		2630490	1					
ANR	2644585	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3779:3:79699:79735	2630490	4	True				
ANR	2644586	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2644587	Callee	std_32bit_3reg		2630490	0					
ANR	2644588	Identifier	std_32bit_3reg		2630490	0					
ANR	2644589	ArgumentList	ao		2630490	1					
ANR	2644590	Argument	ao		2630490	0					
ANR	2644591	Identifier	ao		2630490	0					
ANR	2644592	Argument	m		2630490	1					
ANR	2644593	Identifier	m		2630490	0					
ANR	2644594	Argument	false		2630490	2					
ANR	2644595	Identifier	false		2630490	0					
ANR	2644596	BreakStatement	break ;	3781:3:79752:79757	2630490	2	True				
ANR	2644597	Label	default :	3782:2:79761:79768	2630490	3	True				
ANR	2644598	Identifier	default		2630490	0					
ANR	2644599	ReturnStatement	return - 1 ;	3783:3:79773:79782	2630490	4	True				
ANR	2644600	UnaryOperationExpression	- 1		2630490	0					
ANR	2644601	UnaryOperator	-		2630490	0					
ANR	2644602	PrimaryExpression	1		2630490	1					
ANR	2644603	ElseStatement	else		2630490	0					
ANR	2644604	IfStatement	"if ( ( m = opmask ( ao -> op , ""rfe"" , IA_BIT | FD_BIT | DB_BIT | EA_BIT ) ) )"		2630490	0					
ANR	2644605	Condition	"m = opmask ( ao -> op , ""rfe"" , IA_BIT | FD_BIT | DB_BIT | EA_BIT )"	3786:5:79801:79863	2630490	0	True				
ANR	2644606	AssignmentExpression	"m = opmask ( ao -> op , ""rfe"" , IA_BIT | FD_BIT | DB_BIT | EA_BIT )"		2630490	0		=			
ANR	2644607	Identifier	m		2630490	0					
ANR	2644608	CallExpression	"opmask ( ao -> op , ""rfe"" , IA_BIT | FD_BIT | DB_BIT | EA_BIT )"		2630490	1					
ANR	2644609	Callee	opmask		2630490	0					
ANR	2644610	Identifier	opmask		2630490	0					
ANR	2644611	ArgumentList	ao -> op		2630490	1					
ANR	2644612	Argument	ao -> op		2630490	0					
ANR	2644613	PtrMemberAccess	ao -> op		2630490	0					
ANR	2644614	Identifier	ao		2630490	0					
ANR	2644615	Identifier	op		2630490	1					
ANR	2644616	Argument	"""rfe"""		2630490	1					
ANR	2644617	PrimaryExpression	"""rfe"""		2630490	0					
ANR	2644618	Argument	IA_BIT | FD_BIT | DB_BIT | EA_BIT		2630490	2					
ANR	2644619	InclusiveOrExpression	IA_BIT | FD_BIT | DB_BIT | EA_BIT		2630490	0		|			
ANR	2644620	Identifier	IA_BIT		2630490	0					
ANR	2644621	InclusiveOrExpression	FD_BIT | DB_BIT | EA_BIT		2630490	1		|			
ANR	2644622	Identifier	FD_BIT		2630490	0					
ANR	2644623	InclusiveOrExpression	DB_BIT | EA_BIT		2630490	1		|			
ANR	2644624	Identifier	DB_BIT		2630490	0					
ANR	2644625	Identifier	EA_BIT		2630490	1					
ANR	2644626	CompoundStatement		2496:2:54049:54060	2630490	1					
ANR	2644627	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3787:2:79870:79904	2630490	0	True				
ANR	2644628	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2644629	IdentifierDeclType	ut64		2630490	0					
ANR	2644630	Identifier	argt		2630490	1					
ANR	2644631	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2644632	Identifier	argt		2630490	0					
ANR	2644633	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2644634	Callee	thumb_selector		2630490	0					
ANR	2644635	Identifier	thumb_selector		2630490	0					
ANR	2644636	ArgumentList	ao -> a		2630490	1					
ANR	2644637	Argument	ao -> a		2630490	0					
ANR	2644638	PtrMemberAccess	ao -> a		2630490	0					
ANR	2644639	Identifier	ao		2630490	0					
ANR	2644640	Identifier	a		2630490	1					
ANR	2644641	IdentifierDeclStatement	ut32 wb = 0 ;	3788:2:79908:79919	2630490	1	True				
ANR	2644642	IdentifierDecl	wb = 0		2630490	0					
ANR	2644643	IdentifierDeclType	ut32		2630490	0					
ANR	2644644	Identifier	wb		2630490	1					
ANR	2644645	AssignmentExpression	wb = 0		2630490	2		=			
ANR	2644646	Identifier	wb		2630490	0					
ANR	2644647	PrimaryExpression	0		2630490	1					
ANR	2644648	SwitchStatement	switch ( argt )		2630490	2					
ANR	2644649	Condition	argt	3789:10:79931:79934	2630490	0	True				
ANR	2644650	Identifier	argt		2630490	0					
ANR	2644651	CompoundStatement		2497:16:54078:54078	2630490	1					
ANR	2644652	Label	case THUMB_REGBANG :	3790:2:79941:79959	2630490	0	True				
ANR	2644653	Identifier	THUMB_REGBANG		2630490	0					
ANR	2644654	CompoundStatement		2498:22:54102:54102	2630490	1					
ANR	2644655	ExpressionStatement	ao -> a [ 0 ] [ strlen ( ao -> a [ 0 ] ) - 1 ] = '\\0'	3791:3:79966:80004	2630490	0	True				
ANR	2644656	AssignmentExpression	ao -> a [ 0 ] [ strlen ( ao -> a [ 0 ] ) - 1 ] = '\\0'		2630490	0		=			
ANR	2644657	ArrayIndexing	ao -> a [ 0 ] [ strlen ( ao -> a [ 0 ] ) - 1 ]		2630490	0					
ANR	2644658	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2644659	PtrMemberAccess	ao -> a		2630490	0					
ANR	2644660	Identifier	ao		2630490	0					
ANR	2644661	Identifier	a		2630490	1					
ANR	2644662	PrimaryExpression	0		2630490	1					
ANR	2644663	AdditiveExpression	strlen ( ao -> a [ 0 ] ) - 1		2630490	1		-			
ANR	2644664	CallExpression	strlen ( ao -> a [ 0 ] )		2630490	0					
ANR	2644665	Callee	strlen		2630490	0					
ANR	2644666	Identifier	strlen		2630490	0					
ANR	2644667	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2644668	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2644669	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2644670	PtrMemberAccess	ao -> a		2630490	0					
ANR	2644671	Identifier	ao		2630490	0					
ANR	2644672	Identifier	a		2630490	1					
ANR	2644673	PrimaryExpression	0		2630490	1					
ANR	2644674	PrimaryExpression	1		2630490	1					
ANR	2644675	PrimaryExpression	'\\0'		2630490	1					
ANR	2644676	ExpressionStatement	wb = 0x20000000	3792:3:80009:80024	2630490	1	True				
ANR	2644677	AssignmentExpression	wb = 0x20000000		2630490	0		=			
ANR	2644678	Identifier	wb		2630490	0					
ANR	2644679	PrimaryExpression	0x20000000		2630490	1					
ANR	2644680	Label	case THUMB_REG :	3795:2:80070:80084	2630490	2	True				
ANR	2644681	Identifier	THUMB_REG		2630490	0					
ANR	2644682	CompoundStatement		2504:3:54232:54260	2630490	3					
ANR	2644683	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	3796:3:80091:80119	2630490	0	True				
ANR	2644684	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2644685	IdentifierDeclType	ut8		2630490	0					
ANR	2644686	Identifier	reg1		2630490	1					
ANR	2644687	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2644688	Identifier	reg1		2630490	0					
ANR	2644689	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2644690	Callee	getreg		2630490	0					
ANR	2644691	Identifier	getreg		2630490	0					
ANR	2644692	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2644693	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2644694	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2644695	PtrMemberAccess	ao -> a		2630490	0					
ANR	2644696	Identifier	ao		2630490	0					
ANR	2644697	Identifier	a		2630490	1					
ANR	2644698	PrimaryExpression	0		2630490	1					
ANR	2644699	IfStatement	if ( reg1 > 15 )		2630490	1					
ANR	2644700	Condition	reg1 > 15	3798:7:80129:80137	2630490	0	True				
ANR	2644701	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2644702	Identifier	reg1		2630490	0					
ANR	2644703	PrimaryExpression	15		2630490	1					
ANR	2644704	CompoundStatement		2506:18:54281:54281	2630490	1					
ANR	2644705	ReturnStatement	return - 1 ;	3799:4:80146:80155	2630490	0	True				
ANR	2644706	UnaryOperationExpression	- 1		2630490	0					
ANR	2644707	UnaryOperator	-		2630490	0					
ANR	2644708	PrimaryExpression	1		2630490	1					
ANR	2644709	IfStatement	if ( ( m & DB_BIT ) || ( m & EA_BIT ) )		2630490	2					
ANR	2644710	Condition	( m & DB_BIT ) || ( m & EA_BIT )	3802:7:80173:80200	2630490	0	True				
ANR	2644711	OrExpression	( m & DB_BIT ) || ( m & EA_BIT )		2630490	0		||			
ANR	2644712	BitAndExpression	m & DB_BIT		2630490	0		&			
ANR	2644713	Identifier	m		2630490	0					
ANR	2644714	Identifier	DB_BIT		2630490	1					
ANR	2644715	BitAndExpression	m & EA_BIT		2630490	1		&			
ANR	2644716	Identifier	m		2630490	0					
ANR	2644717	Identifier	EA_BIT		2630490	1					
ANR	2644718	CompoundStatement		2510:37:54344:54344	2630490	1					
ANR	2644719	ExpressionStatement	ao -> o = 0x10e800c0	3803:4:80209:80227	2630490	0	True				
ANR	2644720	AssignmentExpression	ao -> o = 0x10e800c0		2630490	0		=			
ANR	2644721	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644722	Identifier	ao		2630490	0					
ANR	2644723	Identifier	o		2630490	1					
ANR	2644724	PrimaryExpression	0x10e800c0		2630490	1					
ANR	2644725	ElseStatement	else		2630490	0					
ANR	2644726	CompoundStatement		2512:10:54380:54380	2630490	0					
ANR	2644727	ExpressionStatement	ao -> o = 0x90e900c0	3805:4:80245:80263	2630490	0	True				
ANR	2644728	AssignmentExpression	ao -> o = 0x90e900c0		2630490	0		=			
ANR	2644729	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644730	Identifier	ao		2630490	0					
ANR	2644731	Identifier	o		2630490	1					
ANR	2644732	PrimaryExpression	0x90e900c0		2630490	1					
ANR	2644733	ExpressionStatement	ao -> o |= reg1 << 24	3808:3:80274:80293	2630490	3	True				
ANR	2644734	AssignmentExpression	ao -> o |= reg1 << 24		2630490	0		|=			
ANR	2644735	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644736	Identifier	ao		2630490	0					
ANR	2644737	Identifier	o		2630490	1					
ANR	2644738	ShiftExpression	reg1 << 24		2630490	1		<<			
ANR	2644739	Identifier	reg1		2630490	0					
ANR	2644740	PrimaryExpression	24		2630490	1					
ANR	2644741	ExpressionStatement	ao -> o |= wb	3809:3:80298:80309	2630490	4	True				
ANR	2644742	AssignmentExpression	ao -> o |= wb		2630490	0		|=			
ANR	2644743	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644744	Identifier	ao		2630490	0					
ANR	2644745	Identifier	o		2630490	1					
ANR	2644746	Identifier	wb		2630490	1					
ANR	2644747	ReturnStatement	return 4 ;	3810:3:80314:80322	2630490	5	True				
ANR	2644748	PrimaryExpression	4		2630490	0					
ANR	2644749	BreakStatement	break ;	3812:3:80339:80344	2630490	4	True				
ANR	2644750	Label	default :	3813:2:80348:80355	2630490	5	True				
ANR	2644751	Identifier	default		2630490	0					
ANR	2644752	ReturnStatement	return - 1 ;	3814:3:80360:80369	2630490	6	True				
ANR	2644753	UnaryOperationExpression	- 1		2630490	0					
ANR	2644754	UnaryOperator	-		2630490	0					
ANR	2644755	PrimaryExpression	1		2630490	1					
ANR	2644756	ElseStatement	else		2630490	0					
ANR	2644757	IfStatement	"if ( ( m = opmask ( ao -> op , ""ror"" , S_BIT ) ) )"		2630490	0					
ANR	2644758	Condition	"m = opmask ( ao -> op , ""ror"" , S_BIT )"	3817:5:80388:80422	2630490	0	True				
ANR	2644759	AssignmentExpression	"m = opmask ( ao -> op , ""ror"" , S_BIT )"		2630490	0		=			
ANR	2644760	Identifier	m		2630490	0					
ANR	2644761	CallExpression	"opmask ( ao -> op , ""ror"" , S_BIT )"		2630490	1					
ANR	2644762	Callee	opmask		2630490	0					
ANR	2644763	Identifier	opmask		2630490	0					
ANR	2644764	ArgumentList	ao -> op		2630490	1					
ANR	2644765	Argument	ao -> op		2630490	0					
ANR	2644766	PtrMemberAccess	ao -> op		2630490	0					
ANR	2644767	Identifier	ao		2630490	0					
ANR	2644768	Identifier	op		2630490	1					
ANR	2644769	Argument	"""ror"""		2630490	1					
ANR	2644770	PrimaryExpression	"""ror"""		2630490	0					
ANR	2644771	Argument	S_BIT		2630490	2					
ANR	2644772	Identifier	S_BIT		2630490	0					
ANR	2644773	CompoundStatement		2526:2:54570:54604	2630490	1					
ANR	2644774	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3818:2:80429:80463	2630490	0	True				
ANR	2644775	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2644776	IdentifierDeclType	ut64		2630490	0					
ANR	2644777	Identifier	argt		2630490	1					
ANR	2644778	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2644779	Identifier	argt		2630490	0					
ANR	2644780	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2644781	Callee	thumb_selector		2630490	0					
ANR	2644782	Identifier	thumb_selector		2630490	0					
ANR	2644783	ArgumentList	ao -> a		2630490	1					
ANR	2644784	Argument	ao -> a		2630490	0					
ANR	2644785	PtrMemberAccess	ao -> a		2630490	0					
ANR	2644786	Identifier	ao		2630490	0					
ANR	2644787	Identifier	a		2630490	1					
ANR	2644788	SwitchStatement	switch ( argt )		2630490	1					
ANR	2644789	Condition	argt	3819:10:80475:80478	2630490	0	True				
ANR	2644790	Identifier	argt		2630490	0					
ANR	2644791	CompoundStatement		2527:16:54622:54622	2630490	1					
ANR	2644792	Label	case THUMB_REG_REG_CONST :	3820:2:80485:80509	2630490	0	True				
ANR	2644793	Identifier	THUMB_REG_REG_CONST		2630490	0					
ANR	2644794	CompoundStatement		2531:3:54723:54751	2630490	1					
ANR	2644795	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	3821:3:80516:80544	2630490	0	True				
ANR	2644796	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2644797	IdentifierDeclType	ut8		2630490	0					
ANR	2644798	Identifier	reg1		2630490	1					
ANR	2644799	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2644800	Identifier	reg1		2630490	0					
ANR	2644801	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2644802	Callee	getreg		2630490	0					
ANR	2644803	Identifier	getreg		2630490	0					
ANR	2644804	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2644805	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2644806	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2644807	PtrMemberAccess	ao -> a		2630490	0					
ANR	2644808	Identifier	ao		2630490	0					
ANR	2644809	Identifier	a		2630490	1					
ANR	2644810	PrimaryExpression	0		2630490	1					
ANR	2644811	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	3822:3:80549:80577	2630490	1	True				
ANR	2644812	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2644813	IdentifierDeclType	ut8		2630490	0					
ANR	2644814	Identifier	reg2		2630490	1					
ANR	2644815	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2644816	Identifier	reg2		2630490	0					
ANR	2644817	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2644818	Callee	getreg		2630490	0					
ANR	2644819	Identifier	getreg		2630490	0					
ANR	2644820	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2644821	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2644822	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2644823	PtrMemberAccess	ao -> a		2630490	0					
ANR	2644824	Identifier	ao		2630490	0					
ANR	2644825	Identifier	a		2630490	1					
ANR	2644826	PrimaryExpression	1		2630490	1					
ANR	2644827	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 2 ] ) ;	3823:3:80582:80610	2630490	2	True				
ANR	2644828	IdentifierDecl	num = getnum ( ao -> a [ 2 ] )		2630490	0					
ANR	2644829	IdentifierDeclType	ut32		2630490	0					
ANR	2644830	Identifier	num		2630490	1					
ANR	2644831	AssignmentExpression	num = getnum ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2644832	Identifier	num		2630490	0					
ANR	2644833	CallExpression	getnum ( ao -> a [ 2 ] )		2630490	1					
ANR	2644834	Callee	getnum		2630490	0					
ANR	2644835	Identifier	getnum		2630490	0					
ANR	2644836	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2644837	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2644838	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2644839	PtrMemberAccess	ao -> a		2630490	0					
ANR	2644840	Identifier	ao		2630490	0					
ANR	2644841	Identifier	a		2630490	1					
ANR	2644842	PrimaryExpression	2		2630490	1					
ANR	2644843	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( num > 31 ) || ( num < 1 ) )		2630490	3					
ANR	2644844	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( num > 31 ) || ( num < 1 )	3825:7:80620:80672	2630490	0	True				
ANR	2644845	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( num > 31 ) || ( num < 1 )		2630490	0		||			
ANR	2644846	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2644847	Identifier	reg1		2630490	0					
ANR	2644848	PrimaryExpression	15		2630490	1					
ANR	2644849	OrExpression	( reg2 > 15 ) || ( num > 31 ) || ( num < 1 )		2630490	1		||			
ANR	2644850	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2644851	Identifier	reg2		2630490	0					
ANR	2644852	PrimaryExpression	15		2630490	1					
ANR	2644853	OrExpression	( num > 31 ) || ( num < 1 )		2630490	1		||			
ANR	2644854	RelationalExpression	num > 31		2630490	0		>			
ANR	2644855	Identifier	num		2630490	0					
ANR	2644856	PrimaryExpression	31		2630490	1					
ANR	2644857	RelationalExpression	num < 1		2630490	1		<			
ANR	2644858	Identifier	num		2630490	0					
ANR	2644859	PrimaryExpression	1		2630490	1					
ANR	2644860	CompoundStatement		2533:62:54816:54816	2630490	1					
ANR	2644861	ReturnStatement	return - 1 ;	3826:4:80681:80690	2630490	0	True				
ANR	2644862	UnaryOperationExpression	- 1		2630490	0					
ANR	2644863	UnaryOperator	-		2630490	0					
ANR	2644864	PrimaryExpression	1		2630490	1					
ANR	2644865	ExpressionStatement	ao -> o = 0x4fea3000	3829:3:80701:80719	2630490	4	True				
ANR	2644866	AssignmentExpression	ao -> o = 0x4fea3000		2630490	0		=			
ANR	2644867	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644868	Identifier	ao		2630490	0					
ANR	2644869	Identifier	o		2630490	1					
ANR	2644870	PrimaryExpression	0x4fea3000		2630490	1					
ANR	2644871	ExpressionStatement	ao -> o |= reg1	3830:3:80724:80737	2630490	5	True				
ANR	2644872	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2644873	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644874	Identifier	ao		2630490	0					
ANR	2644875	Identifier	o		2630490	1					
ANR	2644876	Identifier	reg1		2630490	1					
ANR	2644877	ExpressionStatement	ao -> o |= reg2 << 8	3831:3:80742:80760	2630490	6	True				
ANR	2644878	AssignmentExpression	ao -> o |= reg2 << 8		2630490	0		|=			
ANR	2644879	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644880	Identifier	ao		2630490	0					
ANR	2644881	Identifier	o		2630490	1					
ANR	2644882	ShiftExpression	reg2 << 8		2630490	1		<<			
ANR	2644883	Identifier	reg2		2630490	0					
ANR	2644884	PrimaryExpression	8		2630490	1					
ANR	2644885	ExpressionStatement	ao -> o |= ( num & 0x3 ) << 14	3832:3:80765:80791	2630490	7	True				
ANR	2644886	AssignmentExpression	ao -> o |= ( num & 0x3 ) << 14		2630490	0		|=			
ANR	2644887	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644888	Identifier	ao		2630490	0					
ANR	2644889	Identifier	o		2630490	1					
ANR	2644890	ShiftExpression	( num & 0x3 ) << 14		2630490	1		<<			
ANR	2644891	BitAndExpression	num & 0x3		2630490	0		&			
ANR	2644892	Identifier	num		2630490	0					
ANR	2644893	PrimaryExpression	0x3		2630490	1					
ANR	2644894	PrimaryExpression	14		2630490	1					
ANR	2644895	ExpressionStatement	ao -> o |= ( num & 0x1c ) << 2	3833:3:80796:80822	2630490	8	True				
ANR	2644896	AssignmentExpression	ao -> o |= ( num & 0x1c ) << 2		2630490	0		|=			
ANR	2644897	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644898	Identifier	ao		2630490	0					
ANR	2644899	Identifier	o		2630490	1					
ANR	2644900	ShiftExpression	( num & 0x1c ) << 2		2630490	1		<<			
ANR	2644901	BitAndExpression	num & 0x1c		2630490	0		&			
ANR	2644902	Identifier	num		2630490	0					
ANR	2644903	PrimaryExpression	0x1c		2630490	1					
ANR	2644904	PrimaryExpression	2		2630490	1					
ANR	2644905	IfStatement	if ( m & S_BIT )		2630490	9					
ANR	2644906	Condition	m & S_BIT	3834:7:80831:80839	2630490	0	True				
ANR	2644907	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2644908	Identifier	m		2630490	0					
ANR	2644909	Identifier	S_BIT		2630490	1					
ANR	2644910	CompoundStatement		2542:18:54983:54983	2630490	1					
ANR	2644911	ExpressionStatement	ao -> o |= 1 << 28	3835:4:80848:80864	2630490	0	True				
ANR	2644912	AssignmentExpression	ao -> o |= 1 << 28		2630490	0		|=			
ANR	2644913	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644914	Identifier	ao		2630490	0					
ANR	2644915	Identifier	o		2630490	1					
ANR	2644916	ShiftExpression	1 << 28		2630490	1		<<			
ANR	2644917	PrimaryExpression	1		2630490	0					
ANR	2644918	PrimaryExpression	28		2630490	1					
ANR	2644919	ReturnStatement	return 4 ;	3837:3:80874:80882	2630490	10	True				
ANR	2644920	PrimaryExpression	4		2630490	0					
ANR	2644921	BreakStatement	break ;	3839:3:80899:80904	2630490	2	True				
ANR	2644922	Label	case THUMB_REG_REG :	3840:2:80908:80926	2630490	3	True				
ANR	2644923	Identifier	THUMB_REG_REG		2630490	0					
ANR	2644924	CompoundStatement		2548:22:55069:55069	2630490	4					
ANR	2644925	ExpressionStatement	ao -> o = 0xc041	3841:3:80933:80947	2630490	0	True				
ANR	2644926	AssignmentExpression	ao -> o = 0xc041		2630490	0		=			
ANR	2644927	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644928	Identifier	ao		2630490	0					
ANR	2644929	Identifier	o		2630490	1					
ANR	2644930	PrimaryExpression	0xc041		2630490	1					
ANR	2644931	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	1					
ANR	2644932	Condition	"std_16bit_2reg ( ao , m )"	3842:7:80956:80977	2630490	0	True				
ANR	2644933	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2644934	Callee	std_16bit_2reg		2630490	0					
ANR	2644935	Identifier	std_16bit_2reg		2630490	0					
ANR	2644936	ArgumentList	ao		2630490	1					
ANR	2644937	Argument	ao		2630490	0					
ANR	2644938	Identifier	ao		2630490	0					
ANR	2644939	Argument	m		2630490	1					
ANR	2644940	Identifier	m		2630490	0					
ANR	2644941	CompoundStatement		2550:31:55121:55121	2630490	1					
ANR	2644942	ReturnStatement	return 2 ;	3843:4:80986:80994	2630490	0	True				
ANR	2644943	PrimaryExpression	2		2630490	0					
ANR	2644944	ExpressionStatement	std_opt_2 ( ao )	3845:3:81004:81018	2630490	2	True				
ANR	2644945	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2644946	Callee	std_opt_2		2630490	0					
ANR	2644947	Identifier	std_opt_2		2630490	0					
ANR	2644948	ArgumentList	ao		2630490	1					
ANR	2644949	Argument	ao		2630490	0					
ANR	2644950	Identifier	ao		2630490	0					
ANR	2644951	Label	case THUMB_REG_REG_REG :	3848:2:81064:81086	2630490	5	True				
ANR	2644952	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2644953	CompoundStatement		2556:26:55229:55229	2630490	6					
ANR	2644954	ExpressionStatement	ao -> o = 0x60fa00f0	3849:3:81093:81111	2630490	0	True				
ANR	2644955	AssignmentExpression	ao -> o = 0x60fa00f0		2630490	0		=			
ANR	2644956	PtrMemberAccess	ao -> o		2630490	0					
ANR	2644957	Identifier	ao		2630490	0					
ANR	2644958	Identifier	o		2630490	1					
ANR	2644959	PrimaryExpression	0x60fa00f0		2630490	1					
ANR	2644960	ReturnStatement	"return ( std_32bit_3reg ( ao , m , false ) ) ;"	3850:3:81116:81154	2630490	1	True				
ANR	2644961	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2644962	Callee	std_32bit_3reg		2630490	0					
ANR	2644963	Identifier	std_32bit_3reg		2630490	0					
ANR	2644964	ArgumentList	ao		2630490	1					
ANR	2644965	Argument	ao		2630490	0					
ANR	2644966	Identifier	ao		2630490	0					
ANR	2644967	Argument	m		2630490	1					
ANR	2644968	Identifier	m		2630490	0					
ANR	2644969	Argument	false		2630490	2					
ANR	2644970	Identifier	false		2630490	0					
ANR	2644971	BreakStatement	break ;	3852:3:81171:81176	2630490	7	True				
ANR	2644972	Label	default :	3853:2:81180:81187	2630490	8	True				
ANR	2644973	Identifier	default		2630490	0					
ANR	2644974	ReturnStatement	return - 1 ;	3854:3:81192:81201	2630490	9	True				
ANR	2644975	UnaryOperationExpression	- 1		2630490	0					
ANR	2644976	UnaryOperator	-		2630490	0					
ANR	2644977	PrimaryExpression	1		2630490	1					
ANR	2644978	ElseStatement	else		2630490	0					
ANR	2644979	IfStatement	"if ( ( m = opmask ( ao -> op , ""rrx"" , S_BIT ) ) )"		2630490	0					
ANR	2644980	Condition	"m = opmask ( ao -> op , ""rrx"" , S_BIT )"	3857:5:81220:81254	2630490	0	True				
ANR	2644981	AssignmentExpression	"m = opmask ( ao -> op , ""rrx"" , S_BIT )"		2630490	0		=			
ANR	2644982	Identifier	m		2630490	0					
ANR	2644983	CallExpression	"opmask ( ao -> op , ""rrx"" , S_BIT )"		2630490	1					
ANR	2644984	Callee	opmask		2630490	0					
ANR	2644985	Identifier	opmask		2630490	0					
ANR	2644986	ArgumentList	ao -> op		2630490	1					
ANR	2644987	Argument	ao -> op		2630490	0					
ANR	2644988	PtrMemberAccess	ao -> op		2630490	0					
ANR	2644989	Identifier	ao		2630490	0					
ANR	2644990	Identifier	op		2630490	1					
ANR	2644991	Argument	"""rrx"""		2630490	1					
ANR	2644992	PrimaryExpression	"""rrx"""		2630490	0					
ANR	2644993	Argument	S_BIT		2630490	2					
ANR	2644994	Identifier	S_BIT		2630490	0					
ANR	2644995	CompoundStatement		2566:2:55402:55436	2630490	1					
ANR	2644996	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3858:2:81261:81295	2630490	0	True				
ANR	2644997	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2644998	IdentifierDeclType	ut64		2630490	0					
ANR	2644999	Identifier	argt		2630490	1					
ANR	2645000	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2645001	Identifier	argt		2630490	0					
ANR	2645002	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2645003	Callee	thumb_selector		2630490	0					
ANR	2645004	Identifier	thumb_selector		2630490	0					
ANR	2645005	ArgumentList	ao -> a		2630490	1					
ANR	2645006	Argument	ao -> a		2630490	0					
ANR	2645007	PtrMemberAccess	ao -> a		2630490	0					
ANR	2645008	Identifier	ao		2630490	0					
ANR	2645009	Identifier	a		2630490	1					
ANR	2645010	SwitchStatement	switch ( argt )		2630490	1					
ANR	2645011	Condition	argt	3859:10:81307:81310	2630490	0	True				
ANR	2645012	Identifier	argt		2630490	0					
ANR	2645013	CompoundStatement		2567:16:55454:55454	2630490	1					
ANR	2645014	Label	case THUMB_REG_REG :	3860:2:81317:81335	2630490	0	True				
ANR	2645015	Identifier	THUMB_REG_REG		2630490	0					
ANR	2645016	CompoundStatement		2570:3:55516:55544	2630490	1					
ANR	2645017	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	3861:3:81342:81370	2630490	0	True				
ANR	2645018	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2645019	IdentifierDeclType	ut8		2630490	0					
ANR	2645020	Identifier	reg1		2630490	1					
ANR	2645021	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2645022	Identifier	reg1		2630490	0					
ANR	2645023	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2645024	Callee	getreg		2630490	0					
ANR	2645025	Identifier	getreg		2630490	0					
ANR	2645026	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2645027	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2645028	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2645029	PtrMemberAccess	ao -> a		2630490	0					
ANR	2645030	Identifier	ao		2630490	0					
ANR	2645031	Identifier	a		2630490	1					
ANR	2645032	PrimaryExpression	0		2630490	1					
ANR	2645033	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	3862:3:81375:81403	2630490	1	True				
ANR	2645034	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2645035	IdentifierDeclType	ut8		2630490	0					
ANR	2645036	Identifier	reg2		2630490	1					
ANR	2645037	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2645038	Identifier	reg2		2630490	0					
ANR	2645039	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2645040	Callee	getreg		2630490	0					
ANR	2645041	Identifier	getreg		2630490	0					
ANR	2645042	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2645043	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2645044	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2645045	PtrMemberAccess	ao -> a		2630490	0					
ANR	2645046	Identifier	ao		2630490	0					
ANR	2645047	Identifier	a		2630490	1					
ANR	2645048	PrimaryExpression	1		2630490	1					
ANR	2645049	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) )		2630490	2					
ANR	2645050	Condition	( reg1 > 15 ) || ( reg2 > 15 )	3864:7:81416:81441	2630490	0	True				
ANR	2645051	OrExpression	( reg1 > 15 ) || ( reg2 > 15 )		2630490	0		||			
ANR	2645052	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2645053	Identifier	reg1		2630490	0					
ANR	2645054	PrimaryExpression	15		2630490	1					
ANR	2645055	RelationalExpression	reg2 > 15		2630490	1		>			
ANR	2645056	Identifier	reg2		2630490	0					
ANR	2645057	PrimaryExpression	15		2630490	1					
ANR	2645058	CompoundStatement		2572:35:55585:55585	2630490	1					
ANR	2645059	ReturnStatement	return - 1 ;	3865:4:81450:81459	2630490	0	True				
ANR	2645060	UnaryOperationExpression	- 1		2630490	0					
ANR	2645061	UnaryOperator	-		2630490	0					
ANR	2645062	PrimaryExpression	1		2630490	1					
ANR	2645063	ExpressionStatement	ao -> o = 0x4fea3000	3868:3:81473:81491	2630490	3	True				
ANR	2645064	AssignmentExpression	ao -> o = 0x4fea3000		2630490	0		=			
ANR	2645065	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645066	Identifier	ao		2630490	0					
ANR	2645067	Identifier	o		2630490	1					
ANR	2645068	PrimaryExpression	0x4fea3000		2630490	1					
ANR	2645069	ExpressionStatement	ao -> o |= reg1	3869:3:81496:81509	2630490	4	True				
ANR	2645070	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2645071	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645072	Identifier	ao		2630490	0					
ANR	2645073	Identifier	o		2630490	1					
ANR	2645074	Identifier	reg1		2630490	1					
ANR	2645075	ExpressionStatement	ao -> o |= reg2 << 8	3870:3:81514:81532	2630490	5	True				
ANR	2645076	AssignmentExpression	ao -> o |= reg2 << 8		2630490	0		|=			
ANR	2645077	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645078	Identifier	ao		2630490	0					
ANR	2645079	Identifier	o		2630490	1					
ANR	2645080	ShiftExpression	reg2 << 8		2630490	1		<<			
ANR	2645081	Identifier	reg2		2630490	0					
ANR	2645082	PrimaryExpression	8		2630490	1					
ANR	2645083	IfStatement	if ( m & S_BIT )		2630490	6					
ANR	2645084	Condition	m & S_BIT	3871:7:81541:81549	2630490	0	True				
ANR	2645085	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2645086	Identifier	m		2630490	0					
ANR	2645087	Identifier	S_BIT		2630490	1					
ANR	2645088	CompoundStatement		2579:18:55693:55693	2630490	1					
ANR	2645089	ExpressionStatement	ao -> o |= 1 << 28	3872:4:81558:81574	2630490	0	True				
ANR	2645090	AssignmentExpression	ao -> o |= 1 << 28		2630490	0		|=			
ANR	2645091	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645092	Identifier	ao		2630490	0					
ANR	2645093	Identifier	o		2630490	1					
ANR	2645094	ShiftExpression	1 << 28		2630490	1		<<			
ANR	2645095	PrimaryExpression	1		2630490	0					
ANR	2645096	PrimaryExpression	28		2630490	1					
ANR	2645097	ReturnStatement	return 4 ;	3874:3:81584:81592	2630490	7	True				
ANR	2645098	PrimaryExpression	4		2630490	0					
ANR	2645099	BreakStatement	break ;	3876:3:81609:81614	2630490	2	True				
ANR	2645100	Label	default :	3877:2:81618:81625	2630490	3	True				
ANR	2645101	Identifier	default		2630490	0					
ANR	2645102	ReturnStatement	return - 1 ;	3878:3:81630:81639	2630490	4	True				
ANR	2645103	UnaryOperationExpression	- 1		2630490	0					
ANR	2645104	UnaryOperator	-		2630490	0					
ANR	2645105	PrimaryExpression	1		2630490	1					
ANR	2645106	ElseStatement	else		2630490	0					
ANR	2645107	IfStatement	"if ( ( m = opmask ( ao -> op , ""rsb"" , S_BIT ) ) )"		2630490	0					
ANR	2645108	Condition	"m = opmask ( ao -> op , ""rsb"" , S_BIT )"	3881:5:81658:81692	2630490	0	True				
ANR	2645109	AssignmentExpression	"m = opmask ( ao -> op , ""rsb"" , S_BIT )"		2630490	0		=			
ANR	2645110	Identifier	m		2630490	0					
ANR	2645111	CallExpression	"opmask ( ao -> op , ""rsb"" , S_BIT )"		2630490	1					
ANR	2645112	Callee	opmask		2630490	0					
ANR	2645113	Identifier	opmask		2630490	0					
ANR	2645114	ArgumentList	ao -> op		2630490	1					
ANR	2645115	Argument	ao -> op		2630490	0					
ANR	2645116	PtrMemberAccess	ao -> op		2630490	0					
ANR	2645117	Identifier	ao		2630490	0					
ANR	2645118	Identifier	op		2630490	1					
ANR	2645119	Argument	"""rsb"""		2630490	1					
ANR	2645120	PrimaryExpression	"""rsb"""		2630490	0					
ANR	2645121	Argument	S_BIT		2630490	2					
ANR	2645122	Identifier	S_BIT		2630490	0					
ANR	2645123	CompoundStatement		2590:2:55840:55874	2630490	1					
ANR	2645124	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3882:2:81699:81733	2630490	0	True				
ANR	2645125	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2645126	IdentifierDeclType	ut64		2630490	0					
ANR	2645127	Identifier	argt		2630490	1					
ANR	2645128	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2645129	Identifier	argt		2630490	0					
ANR	2645130	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2645131	Callee	thumb_selector		2630490	0					
ANR	2645132	Identifier	thumb_selector		2630490	0					
ANR	2645133	ArgumentList	ao -> a		2630490	1					
ANR	2645134	Argument	ao -> a		2630490	0					
ANR	2645135	PtrMemberAccess	ao -> a		2630490	0					
ANR	2645136	Identifier	ao		2630490	0					
ANR	2645137	Identifier	a		2630490	1					
ANR	2645138	SwitchStatement	switch ( argt )		2630490	1					
ANR	2645139	Condition	argt	3883:10:81745:81748	2630490	0	True				
ANR	2645140	Identifier	argt		2630490	0					
ANR	2645141	CompoundStatement		2591:16:55892:55892	2630490	1					
ANR	2645142	Label	case THUMB_REG_CONST :	3884:2:81755:81775	2630490	0	True				
ANR	2645143	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2645144	CompoundStatement		2592:24:55918:55918	2630490	1					
ANR	2645145	ExpressionStatement	std_opt_2 ( ao )	3885:3:81782:81796	2630490	0	True				
ANR	2645146	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2645147	Callee	std_opt_2		2630490	0					
ANR	2645148	Identifier	std_opt_2		2630490	0					
ANR	2645149	ArgumentList	ao		2630490	1					
ANR	2645150	Argument	ao		2630490	0					
ANR	2645151	Identifier	ao		2630490	0					
ANR	2645152	Label	case THUMB_REG_REG_CONST :	3888:2:81842:81866	2630490	2	True				
ANR	2645153	Identifier	THUMB_REG_REG_CONST		2630490	0					
ANR	2645154	CompoundStatement		2598:3:56030:56064	2630490	3					
ANR	2645155	ExpressionStatement	err = false	3889:3:81873:81884	2630490	0	True				
ANR	2645156	AssignmentExpression	err = false		2630490	0		=			
ANR	2645157	Identifier	err		2630490	0					
ANR	2645158	Identifier	false		2630490	1					
ANR	2645159	IdentifierDeclStatement	ut32 num = getthimmed12 ( ao -> a [ 2 ] ) ;	3890:3:81889:81923	2630490	1	True				
ANR	2645160	IdentifierDecl	num = getthimmed12 ( ao -> a [ 2 ] )		2630490	0					
ANR	2645161	IdentifierDeclType	ut32		2630490	0					
ANR	2645162	Identifier	num		2630490	1					
ANR	2645163	AssignmentExpression	num = getthimmed12 ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2645164	Identifier	num		2630490	0					
ANR	2645165	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		2630490	1					
ANR	2645166	Callee	getthimmed12		2630490	0					
ANR	2645167	Identifier	getthimmed12		2630490	0					
ANR	2645168	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2645169	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2645170	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2645171	PtrMemberAccess	ao -> a		2630490	0					
ANR	2645172	Identifier	ao		2630490	0					
ANR	2645173	Identifier	a		2630490	1					
ANR	2645174	PrimaryExpression	2		2630490	1					
ANR	2645175	IfStatement	if ( err )		2630490	2					
ANR	2645176	Condition	err	3892:7:81933:81935	2630490	0	True				
ANR	2645177	Identifier	err		2630490	0					
ANR	2645178	CompoundStatement		2600:12:56079:56079	2630490	1					
ANR	2645179	ReturnStatement	return - 1 ;	3893:4:81944:81953	2630490	0	True				
ANR	2645180	UnaryOperationExpression	- 1		2630490	0					
ANR	2645181	UnaryOperator	-		2630490	0					
ANR	2645182	PrimaryExpression	1		2630490	1					
ANR	2645183	ExpressionStatement	ao -> o = 0x4042	3896:3:81964:81978	2630490	3	True				
ANR	2645184	AssignmentExpression	ao -> o = 0x4042		2630490	0		=			
ANR	2645185	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645186	Identifier	ao		2630490	0					
ANR	2645187	Identifier	o		2630490	1					
ANR	2645188	PrimaryExpression	0x4042		2630490	1					
ANR	2645189	IfStatement	"if ( ( num == 0 ) && std_16bit_2reg ( ao , m ) )"		2630490	4					
ANR	2645190	Condition	"( num == 0 ) && std_16bit_2reg ( ao , m )"	3897:7:81987:82022	2630490	0	True				
ANR	2645191	AndExpression	"( num == 0 ) && std_16bit_2reg ( ao , m )"		2630490	0		&&			
ANR	2645192	EqualityExpression	num == 0		2630490	0		==			
ANR	2645193	Identifier	num		2630490	0					
ANR	2645194	PrimaryExpression	0		2630490	1					
ANR	2645195	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	1					
ANR	2645196	Callee	std_16bit_2reg		2630490	0					
ANR	2645197	Identifier	std_16bit_2reg		2630490	0					
ANR	2645198	ArgumentList	ao		2630490	1					
ANR	2645199	Argument	ao		2630490	0					
ANR	2645200	Identifier	ao		2630490	0					
ANR	2645201	Argument	m		2630490	1					
ANR	2645202	Identifier	m		2630490	0					
ANR	2645203	CompoundStatement		2605:45:56166:56166	2630490	1					
ANR	2645204	ReturnStatement	return 2 ;	3898:4:82031:82039	2630490	0	True				
ANR	2645205	PrimaryExpression	2		2630490	0					
ANR	2645206	ExpressionStatement	ao -> o = 0xc0f10000	3901:3:82050:82068	2630490	5	True				
ANR	2645207	AssignmentExpression	ao -> o = 0xc0f10000		2630490	0		=			
ANR	2645208	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645209	Identifier	ao		2630490	0					
ANR	2645210	Identifier	o		2630490	1					
ANR	2645211	PrimaryExpression	0xc0f10000		2630490	1					
ANR	2645212	ExpressionStatement	ao -> o |= num	3902:3:82073:82085	2630490	6	True				
ANR	2645213	AssignmentExpression	ao -> o |= num		2630490	0		|=			
ANR	2645214	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645215	Identifier	ao		2630490	0					
ANR	2645216	Identifier	o		2630490	1					
ANR	2645217	Identifier	num		2630490	1					
ANR	2645218	ReturnStatement	"return ( std_32bit_2reg ( ao , m , false ) ) ;"	3903:3:82090:82128	2630490	7	True				
ANR	2645219	CallExpression	"std_32bit_2reg ( ao , m , false )"		2630490	0					
ANR	2645220	Callee	std_32bit_2reg		2630490	0					
ANR	2645221	Identifier	std_32bit_2reg		2630490	0					
ANR	2645222	ArgumentList	ao		2630490	1					
ANR	2645223	Argument	ao		2630490	0					
ANR	2645224	Identifier	ao		2630490	0					
ANR	2645225	Argument	m		2630490	1					
ANR	2645226	Identifier	m		2630490	0					
ANR	2645227	Argument	false		2630490	2					
ANR	2645228	Identifier	false		2630490	0					
ANR	2645229	BreakStatement	break ;	3905:3:82145:82150	2630490	4	True				
ANR	2645230	Label	case THUMB_REG_REG :	3906:2:82154:82172	2630490	5	True				
ANR	2645231	Identifier	THUMB_REG_REG		2630490	0					
ANR	2645232	CompoundStatement		2614:22:56315:56315	2630490	6					
ANR	2645233	ExpressionStatement	std_opt_2 ( ao )	3907:3:82179:82193	2630490	0	True				
ANR	2645234	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2645235	Callee	std_opt_2		2630490	0					
ANR	2645236	Identifier	std_opt_2		2630490	0					
ANR	2645237	ArgumentList	ao		2630490	1					
ANR	2645238	Argument	ao		2630490	0					
ANR	2645239	Identifier	ao		2630490	0					
ANR	2645240	Label	case THUMB_REG_REG_REG :	3910:2:82239:82261	2630490	7	True				
ANR	2645241	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2645242	CompoundStatement		2618:26:56404:56404	2630490	8					
ANR	2645243	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	3911:3:82268:82286	2630490	0	True				
ANR	2645244	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		2630490	0		=			
ANR	2645245	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2645246	PtrMemberAccess	ao -> a		2630490	0					
ANR	2645247	Identifier	ao		2630490	0					
ANR	2645248	Identifier	a		2630490	1					
ANR	2645249	PrimaryExpression	3		2630490	1					
ANR	2645250	PrimaryExpression	"""lsl 0"""		2630490	1					
ANR	2645251	Label	case THUMB_REG_REG_SHIFT :	3914:2:82332:82356	2630490	9	True				
ANR	2645252	Identifier	THUMB_REG_REG_SHIFT		2630490	0					
ANR	2645253	CompoundStatement		2622:28:56499:56499	2630490	10					
ANR	2645254	IfStatement	if ( ao -> a [ 3 ] == NULL )		2630490	0					
ANR	2645255	Condition	ao -> a [ 3 ] == NULL	3915:7:82367:82382	2630490	0	True				
ANR	2645256	EqualityExpression	ao -> a [ 3 ] == NULL		2630490	0		==			
ANR	2645257	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2645258	PtrMemberAccess	ao -> a		2630490	0					
ANR	2645259	Identifier	ao		2630490	0					
ANR	2645260	Identifier	a		2630490	1					
ANR	2645261	PrimaryExpression	3		2630490	1					
ANR	2645262	Identifier	NULL		2630490	1					
ANR	2645263	CompoundStatement		2623:25:56526:56526	2630490	1					
ANR	2645264	ExpressionStatement	std_opt_3 ( ao )	3916:4:82413:82427	2630490	0	True				
ANR	2645265	CallExpression	std_opt_3 ( ao )		2630490	0					
ANR	2645266	Callee	std_opt_3		2630490	0					
ANR	2645267	Identifier	std_opt_3		2630490	0					
ANR	2645268	ArgumentList	ao		2630490	1					
ANR	2645269	Argument	ao		2630490	0					
ANR	2645270	Identifier	ao		2630490	0					
ANR	2645271	Label	case THUMB_REG_REG_REG_SHIFT :	3920:2:82478:82506	2630490	11	True				
ANR	2645272	Identifier	THUMB_REG_REG_REG_SHIFT		2630490	0					
ANR	2645273	CompoundStatement		2628:32:56649:56649	2630490	12					
ANR	2645274	ExpressionStatement	ao -> o = 0xc0eb0000	3921:3:82513:82531	2630490	0	True				
ANR	2645275	AssignmentExpression	ao -> o = 0xc0eb0000		2630490	0		=			
ANR	2645276	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645277	Identifier	ao		2630490	0					
ANR	2645278	Identifier	o		2630490	1					
ANR	2645279	PrimaryExpression	0xc0eb0000		2630490	1					
ANR	2645280	ReturnStatement	"return ( std_32bit_3reg ( ao , m , true ) ) ;"	3922:3:82536:82573	2630490	1	True				
ANR	2645281	CallExpression	"std_32bit_3reg ( ao , m , true )"		2630490	0					
ANR	2645282	Callee	std_32bit_3reg		2630490	0					
ANR	2645283	Identifier	std_32bit_3reg		2630490	0					
ANR	2645284	ArgumentList	ao		2630490	1					
ANR	2645285	Argument	ao		2630490	0					
ANR	2645286	Identifier	ao		2630490	0					
ANR	2645287	Argument	m		2630490	1					
ANR	2645288	Identifier	m		2630490	0					
ANR	2645289	Argument	true		2630490	2					
ANR	2645290	Identifier	true		2630490	0					
ANR	2645291	BreakStatement	break ;	3924:3:82590:82595	2630490	13	True				
ANR	2645292	Label	default :	3925:2:82599:82606	2630490	14	True				
ANR	2645293	Identifier	default		2630490	0					
ANR	2645294	ReturnStatement	return - 1 ;	3926:3:82611:82620	2630490	15	True				
ANR	2645295	UnaryOperationExpression	- 1		2630490	0					
ANR	2645296	UnaryOperator	-		2630490	0					
ANR	2645297	PrimaryExpression	1		2630490	1					
ANR	2645298	ElseStatement	else		2630490	0					
ANR	2645299	IfStatement	"if ( ( m = opmask ( ao -> op , ""sadd"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		2630490	0					
ANR	2645300	Condition	"m = opmask ( ao -> op , ""sadd"" , EIGHT_BIT | SIXTEEN_BIT )"	3929:5:82639:82692	2630490	0	True				
ANR	2645301	AssignmentExpression	"m = opmask ( ao -> op , ""sadd"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	0		=			
ANR	2645302	Identifier	m		2630490	0					
ANR	2645303	CallExpression	"opmask ( ao -> op , ""sadd"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	1					
ANR	2645304	Callee	opmask		2630490	0					
ANR	2645305	Identifier	opmask		2630490	0					
ANR	2645306	ArgumentList	ao -> op		2630490	1					
ANR	2645307	Argument	ao -> op		2630490	0					
ANR	2645308	PtrMemberAccess	ao -> op		2630490	0					
ANR	2645309	Identifier	ao		2630490	0					
ANR	2645310	Identifier	op		2630490	1					
ANR	2645311	Argument	"""sadd"""		2630490	1					
ANR	2645312	PrimaryExpression	"""sadd"""		2630490	0					
ANR	2645313	Argument	EIGHT_BIT | SIXTEEN_BIT		2630490	2					
ANR	2645314	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		2630490	0		|			
ANR	2645315	Identifier	EIGHT_BIT		2630490	0					
ANR	2645316	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2645317	CompoundStatement		2638:2:56840:56874	2630490	1					
ANR	2645318	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3930:2:82699:82733	2630490	0	True				
ANR	2645319	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2645320	IdentifierDeclType	ut64		2630490	0					
ANR	2645321	Identifier	argt		2630490	1					
ANR	2645322	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2645323	Identifier	argt		2630490	0					
ANR	2645324	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2645325	Callee	thumb_selector		2630490	0					
ANR	2645326	Identifier	thumb_selector		2630490	0					
ANR	2645327	ArgumentList	ao -> a		2630490	1					
ANR	2645328	Argument	ao -> a		2630490	0					
ANR	2645329	PtrMemberAccess	ao -> a		2630490	0					
ANR	2645330	Identifier	ao		2630490	0					
ANR	2645331	Identifier	a		2630490	1					
ANR	2645332	SwitchStatement	switch ( argt )		2630490	1					
ANR	2645333	Condition	argt	3931:10:82745:82748	2630490	0	True				
ANR	2645334	Identifier	argt		2630490	0					
ANR	2645335	CompoundStatement		2639:16:56892:56892	2630490	1					
ANR	2645336	Label	case THUMB_REG_REG :	3932:2:82755:82773	2630490	0	True				
ANR	2645337	Identifier	THUMB_REG_REG		2630490	0					
ANR	2645338	CompoundStatement		2640:22:56916:56916	2630490	1					
ANR	2645339	ExpressionStatement	std_opt_2 ( ao )	3933:3:82780:82794	2630490	0	True				
ANR	2645340	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2645341	Callee	std_opt_2		2630490	0					
ANR	2645342	Identifier	std_opt_2		2630490	0					
ANR	2645343	ArgumentList	ao		2630490	1					
ANR	2645344	Argument	ao		2630490	0					
ANR	2645345	Identifier	ao		2630490	0					
ANR	2645346	Label	case THUMB_REG_REG_REG :	3936:2:82840:82862	2630490	2	True				
ANR	2645347	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2645348	CompoundStatement		2644:26:57005:57005	2630490	3					
ANR	2645349	IfStatement	if ( m & SIXTEEN_BIT )		2630490	0					
ANR	2645350	Condition	m & SIXTEEN_BIT	3937:7:82873:82887	2630490	0	True				
ANR	2645351	BitAndExpression	m & SIXTEEN_BIT		2630490	0		&			
ANR	2645352	Identifier	m		2630490	0					
ANR	2645353	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2645354	CompoundStatement		2645:24:57031:57031	2630490	1					
ANR	2645355	ExpressionStatement	ao -> o = 0x90fa00f0	3938:4:82896:82914	2630490	0	True				
ANR	2645356	AssignmentExpression	ao -> o = 0x90fa00f0		2630490	0		=			
ANR	2645357	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645358	Identifier	ao		2630490	0					
ANR	2645359	Identifier	o		2630490	1					
ANR	2645360	PrimaryExpression	0x90fa00f0		2630490	1					
ANR	2645361	ElseStatement	else		2630490	0					
ANR	2645362	IfStatement	if ( m & EIGHT_BIT )		2630490	0					
ANR	2645363	Condition	m & EIGHT_BIT	3940:7:82933:82945	2630490	0	True				
ANR	2645364	BitAndExpression	m & EIGHT_BIT		2630490	0		&			
ANR	2645365	Identifier	m		2630490	0					
ANR	2645366	Identifier	EIGHT_BIT		2630490	1					
ANR	2645367	CompoundStatement		2648:22:57089:57089	2630490	1					
ANR	2645368	ExpressionStatement	ao -> o = 0x80fa00f0	3941:4:82954:82972	2630490	0	True				
ANR	2645369	AssignmentExpression	ao -> o = 0x80fa00f0		2630490	0		=			
ANR	2645370	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645371	Identifier	ao		2630490	0					
ANR	2645372	Identifier	o		2630490	1					
ANR	2645373	PrimaryExpression	0x80fa00f0		2630490	1					
ANR	2645374	ElseStatement	else		2630490	0					
ANR	2645375	CompoundStatement		2650:10:57125:57125	2630490	0					
ANR	2645376	ReturnStatement	return - 1 ;	3943:4:82990:82999	2630490	0	True				
ANR	2645377	UnaryOperationExpression	- 1		2630490	0					
ANR	2645378	UnaryOperator	-		2630490	0					
ANR	2645379	PrimaryExpression	1		2630490	1					
ANR	2645380	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3945:3:83009:83045	2630490	1	True				
ANR	2645381	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2645382	Callee	std_32bit_3reg		2630490	0					
ANR	2645383	Identifier	std_32bit_3reg		2630490	0					
ANR	2645384	ArgumentList	ao		2630490	1					
ANR	2645385	Argument	ao		2630490	0					
ANR	2645386	Identifier	ao		2630490	0					
ANR	2645387	Argument	m		2630490	1					
ANR	2645388	Identifier	m		2630490	0					
ANR	2645389	Argument	false		2630490	2					
ANR	2645390	Identifier	false		2630490	0					
ANR	2645391	BreakStatement	break ;	3947:3:83062:83067	2630490	4	True				
ANR	2645392	Label	default :	3948:2:83071:83078	2630490	5	True				
ANR	2645393	Identifier	default		2630490	0					
ANR	2645394	ReturnStatement	return - 1 ;	3949:3:83083:83092	2630490	6	True				
ANR	2645395	UnaryOperationExpression	- 1		2630490	0					
ANR	2645396	UnaryOperator	-		2630490	0					
ANR	2645397	PrimaryExpression	1		2630490	1					
ANR	2645398	ElseStatement	else		2630490	0					
ANR	2645399	IfStatement	"if ( ( m = opmask ( ao -> op , ""sasx"" , 0 ) ) )"		2630490	0					
ANR	2645400	Condition	"m = opmask ( ao -> op , ""sasx"" , 0 )"	3952:5:83111:83142	2630490	0	True				
ANR	2645401	AssignmentExpression	"m = opmask ( ao -> op , ""sasx"" , 0 )"		2630490	0		=			
ANR	2645402	Identifier	m		2630490	0					
ANR	2645403	CallExpression	"opmask ( ao -> op , ""sasx"" , 0 )"		2630490	1					
ANR	2645404	Callee	opmask		2630490	0					
ANR	2645405	Identifier	opmask		2630490	0					
ANR	2645406	ArgumentList	ao -> op		2630490	1					
ANR	2645407	Argument	ao -> op		2630490	0					
ANR	2645408	PtrMemberAccess	ao -> op		2630490	0					
ANR	2645409	Identifier	ao		2630490	0					
ANR	2645410	Identifier	op		2630490	1					
ANR	2645411	Argument	"""sasx"""		2630490	1					
ANR	2645412	PrimaryExpression	"""sasx"""		2630490	0					
ANR	2645413	Argument	0		2630490	2					
ANR	2645414	PrimaryExpression	0		2630490	0					
ANR	2645415	CompoundStatement		2661:2:57290:57324	2630490	1					
ANR	2645416	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3953:2:83149:83183	2630490	0	True				
ANR	2645417	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2645418	IdentifierDeclType	ut64		2630490	0					
ANR	2645419	Identifier	argt		2630490	1					
ANR	2645420	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2645421	Identifier	argt		2630490	0					
ANR	2645422	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2645423	Callee	thumb_selector		2630490	0					
ANR	2645424	Identifier	thumb_selector		2630490	0					
ANR	2645425	ArgumentList	ao -> a		2630490	1					
ANR	2645426	Argument	ao -> a		2630490	0					
ANR	2645427	PtrMemberAccess	ao -> a		2630490	0					
ANR	2645428	Identifier	ao		2630490	0					
ANR	2645429	Identifier	a		2630490	1					
ANR	2645430	SwitchStatement	switch ( argt )		2630490	1					
ANR	2645431	Condition	argt	3954:10:83195:83198	2630490	0	True				
ANR	2645432	Identifier	argt		2630490	0					
ANR	2645433	CompoundStatement		2662:16:57342:57342	2630490	1					
ANR	2645434	Label	case THUMB_REG_REG :	3955:2:83205:83223	2630490	0	True				
ANR	2645435	Identifier	THUMB_REG_REG		2630490	0					
ANR	2645436	CompoundStatement		2663:22:57366:57366	2630490	1					
ANR	2645437	ExpressionStatement	std_opt_2 ( ao )	3956:3:83230:83244	2630490	0	True				
ANR	2645438	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2645439	Callee	std_opt_2		2630490	0					
ANR	2645440	Identifier	std_opt_2		2630490	0					
ANR	2645441	ArgumentList	ao		2630490	1					
ANR	2645442	Argument	ao		2630490	0					
ANR	2645443	Identifier	ao		2630490	0					
ANR	2645444	Label	case THUMB_REG_REG_REG :	3959:2:83290:83312	2630490	2	True				
ANR	2645445	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2645446	CompoundStatement		2667:26:57455:57455	2630490	3					
ANR	2645447	ExpressionStatement	ao -> o = 0xa0fa00f0	3960:3:83319:83337	2630490	0	True				
ANR	2645448	AssignmentExpression	ao -> o = 0xa0fa00f0		2630490	0		=			
ANR	2645449	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645450	Identifier	ao		2630490	0					
ANR	2645451	Identifier	o		2630490	1					
ANR	2645452	PrimaryExpression	0xa0fa00f0		2630490	1					
ANR	2645453	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	3961:3:83342:83378	2630490	1	True				
ANR	2645454	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2645455	Callee	std_32bit_3reg		2630490	0					
ANR	2645456	Identifier	std_32bit_3reg		2630490	0					
ANR	2645457	ArgumentList	ao		2630490	1					
ANR	2645458	Argument	ao		2630490	0					
ANR	2645459	Identifier	ao		2630490	0					
ANR	2645460	Argument	m		2630490	1					
ANR	2645461	Identifier	m		2630490	0					
ANR	2645462	Argument	false		2630490	2					
ANR	2645463	Identifier	false		2630490	0					
ANR	2645464	BreakStatement	break ;	3963:3:83395:83400	2630490	4	True				
ANR	2645465	Label	default :	3964:2:83404:83411	2630490	5	True				
ANR	2645466	Identifier	default		2630490	0					
ANR	2645467	ReturnStatement	return - 1 ;	3965:3:83416:83425	2630490	6	True				
ANR	2645468	UnaryOperationExpression	- 1		2630490	0					
ANR	2645469	UnaryOperator	-		2630490	0					
ANR	2645470	PrimaryExpression	1		2630490	1					
ANR	2645471	ElseStatement	else		2630490	0					
ANR	2645472	IfStatement	"if ( ( m = opmask ( ao -> op , ""sbc"" , S_BIT ) ) )"		2630490	0					
ANR	2645473	Condition	"m = opmask ( ao -> op , ""sbc"" , S_BIT )"	3968:5:83444:83478	2630490	0	True				
ANR	2645474	AssignmentExpression	"m = opmask ( ao -> op , ""sbc"" , S_BIT )"		2630490	0		=			
ANR	2645475	Identifier	m		2630490	0					
ANR	2645476	CallExpression	"opmask ( ao -> op , ""sbc"" , S_BIT )"		2630490	1					
ANR	2645477	Callee	opmask		2630490	0					
ANR	2645478	Identifier	opmask		2630490	0					
ANR	2645479	ArgumentList	ao -> op		2630490	1					
ANR	2645480	Argument	ao -> op		2630490	0					
ANR	2645481	PtrMemberAccess	ao -> op		2630490	0					
ANR	2645482	Identifier	ao		2630490	0					
ANR	2645483	Identifier	op		2630490	1					
ANR	2645484	Argument	"""sbc"""		2630490	1					
ANR	2645485	PrimaryExpression	"""sbc"""		2630490	0					
ANR	2645486	Argument	S_BIT		2630490	2					
ANR	2645487	Identifier	S_BIT		2630490	0					
ANR	2645488	CompoundStatement		2677:2:57626:57660	2630490	1					
ANR	2645489	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	3969:2:83485:83519	2630490	0	True				
ANR	2645490	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2645491	IdentifierDeclType	ut64		2630490	0					
ANR	2645492	Identifier	argt		2630490	1					
ANR	2645493	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2645494	Identifier	argt		2630490	0					
ANR	2645495	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2645496	Callee	thumb_selector		2630490	0					
ANR	2645497	Identifier	thumb_selector		2630490	0					
ANR	2645498	ArgumentList	ao -> a		2630490	1					
ANR	2645499	Argument	ao -> a		2630490	0					
ANR	2645500	PtrMemberAccess	ao -> a		2630490	0					
ANR	2645501	Identifier	ao		2630490	0					
ANR	2645502	Identifier	a		2630490	1					
ANR	2645503	SwitchStatement	switch ( argt )		2630490	1					
ANR	2645504	Condition	argt	3970:10:83531:83534	2630490	0	True				
ANR	2645505	Identifier	argt		2630490	0					
ANR	2645506	CompoundStatement		2678:16:57678:57678	2630490	1					
ANR	2645507	Label	case THUMB_REG_REG :	3971:2:83541:83559	2630490	0	True				
ANR	2645508	Identifier	THUMB_REG_REG		2630490	0					
ANR	2645509	CompoundStatement		2679:22:57702:57702	2630490	1					
ANR	2645510	ExpressionStatement	ao -> o = 0x8041	3972:3:83566:83580	2630490	0	True				
ANR	2645511	AssignmentExpression	ao -> o = 0x8041		2630490	0		=			
ANR	2645512	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645513	Identifier	ao		2630490	0					
ANR	2645514	Identifier	o		2630490	1					
ANR	2645515	PrimaryExpression	0x8041		2630490	1					
ANR	2645516	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	1					
ANR	2645517	Condition	"std_16bit_2reg ( ao , m )"	3973:7:83589:83610	2630490	0	True				
ANR	2645518	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2645519	Callee	std_16bit_2reg		2630490	0					
ANR	2645520	Identifier	std_16bit_2reg		2630490	0					
ANR	2645521	ArgumentList	ao		2630490	1					
ANR	2645522	Argument	ao		2630490	0					
ANR	2645523	Identifier	ao		2630490	0					
ANR	2645524	Argument	m		2630490	1					
ANR	2645525	Identifier	m		2630490	0					
ANR	2645526	CompoundStatement		2681:31:57754:57754	2630490	1					
ANR	2645527	ReturnStatement	return 2 ;	3974:4:83619:83627	2630490	0	True				
ANR	2645528	PrimaryExpression	2		2630490	0					
ANR	2645529	ExpressionStatement	std_opt_2 ( ao )	3976:3:83637:83651	2630490	2	True				
ANR	2645530	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2645531	Callee	std_opt_2		2630490	0					
ANR	2645532	Identifier	std_opt_2		2630490	0					
ANR	2645533	ArgumentList	ao		2630490	1					
ANR	2645534	Argument	ao		2630490	0					
ANR	2645535	Identifier	ao		2630490	0					
ANR	2645536	Label	case THUMB_REG_REG_REG :	3979:2:83697:83719	2630490	2	True				
ANR	2645537	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2645538	CompoundStatement		2687:26:57862:57862	2630490	3					
ANR	2645539	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	3980:3:83726:83744	2630490	0	True				
ANR	2645540	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		2630490	0		=			
ANR	2645541	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2645542	PtrMemberAccess	ao -> a		2630490	0					
ANR	2645543	Identifier	ao		2630490	0					
ANR	2645544	Identifier	a		2630490	1					
ANR	2645545	PrimaryExpression	3		2630490	1					
ANR	2645546	PrimaryExpression	"""lsl 0"""		2630490	1					
ANR	2645547	Label	case THUMB_REG_REG_SHIFT :	3983:2:83790:83814	2630490	4	True				
ANR	2645548	Identifier	THUMB_REG_REG_SHIFT		2630490	0					
ANR	2645549	CompoundStatement		2691:28:57957:57957	2630490	5					
ANR	2645550	IfStatement	if ( ao -> a [ 3 ] == NULL )		2630490	0					
ANR	2645551	Condition	ao -> a [ 3 ] == NULL	3984:7:83825:83840	2630490	0	True				
ANR	2645552	EqualityExpression	ao -> a [ 3 ] == NULL		2630490	0		==			
ANR	2645553	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2645554	PtrMemberAccess	ao -> a		2630490	0					
ANR	2645555	Identifier	ao		2630490	0					
ANR	2645556	Identifier	a		2630490	1					
ANR	2645557	PrimaryExpression	3		2630490	1					
ANR	2645558	Identifier	NULL		2630490	1					
ANR	2645559	CompoundStatement		2692:25:57984:57984	2630490	1					
ANR	2645560	ExpressionStatement	std_opt_3 ( ao )	3985:4:83871:83885	2630490	0	True				
ANR	2645561	CallExpression	std_opt_3 ( ao )		2630490	0					
ANR	2645562	Callee	std_opt_3		2630490	0					
ANR	2645563	Identifier	std_opt_3		2630490	0					
ANR	2645564	ArgumentList	ao		2630490	1					
ANR	2645565	Argument	ao		2630490	0					
ANR	2645566	Identifier	ao		2630490	0					
ANR	2645567	Label	case THUMB_REG_REG_REG_SHIFT :	3989:2:83936:83964	2630490	6	True				
ANR	2645568	Identifier	THUMB_REG_REG_REG_SHIFT		2630490	0					
ANR	2645569	CompoundStatement		2697:32:58107:58107	2630490	7					
ANR	2645570	ExpressionStatement	ao -> o = 0x60eb0000	3990:3:83971:83989	2630490	0	True				
ANR	2645571	AssignmentExpression	ao -> o = 0x60eb0000		2630490	0		=			
ANR	2645572	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645573	Identifier	ao		2630490	0					
ANR	2645574	Identifier	o		2630490	1					
ANR	2645575	PrimaryExpression	0x60eb0000		2630490	1					
ANR	2645576	ReturnStatement	"return std_32bit_3reg ( ao , m , true ) ;"	3991:3:83994:84029	2630490	1	True				
ANR	2645577	CallExpression	"std_32bit_3reg ( ao , m , true )"		2630490	0					
ANR	2645578	Callee	std_32bit_3reg		2630490	0					
ANR	2645579	Identifier	std_32bit_3reg		2630490	0					
ANR	2645580	ArgumentList	ao		2630490	1					
ANR	2645581	Argument	ao		2630490	0					
ANR	2645582	Identifier	ao		2630490	0					
ANR	2645583	Argument	m		2630490	1					
ANR	2645584	Identifier	m		2630490	0					
ANR	2645585	Argument	true		2630490	2					
ANR	2645586	Identifier	true		2630490	0					
ANR	2645587	BreakStatement	break ;	3993:3:84046:84051	2630490	8	True				
ANR	2645588	Label	case THUMB_REG_CONST :	3994:2:84055:84075	2630490	9	True				
ANR	2645589	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2645590	CompoundStatement		2702:24:58218:58218	2630490	10					
ANR	2645591	ExpressionStatement	std_opt_2 ( ao )	3995:3:84082:84096	2630490	0	True				
ANR	2645592	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2645593	Callee	std_opt_2		2630490	0					
ANR	2645594	Identifier	std_opt_2		2630490	0					
ANR	2645595	ArgumentList	ao		2630490	1					
ANR	2645596	Argument	ao		2630490	0					
ANR	2645597	Identifier	ao		2630490	0					
ANR	2645598	Label	case THUMB_REG_REG_CONST :	3998:2:84142:84166	2630490	11	True				
ANR	2645599	Identifier	THUMB_REG_REG_CONST		2630490	0					
ANR	2645600	CompoundStatement		2709:3:58353:58387	2630490	12					
ANR	2645601	ExpressionStatement	ao -> o = 0x60f10000	3999:3:84173:84191	2630490	0	True				
ANR	2645602	AssignmentExpression	ao -> o = 0x60f10000		2630490	0		=			
ANR	2645603	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645604	Identifier	ao		2630490	0					
ANR	2645605	Identifier	o		2630490	1					
ANR	2645606	PrimaryExpression	0x60f10000		2630490	1					
ANR	2645607	ExpressionStatement	err = false	4000:3:84196:84207	2630490	1	True				
ANR	2645608	AssignmentExpression	err = false		2630490	0		=			
ANR	2645609	Identifier	err		2630490	0					
ANR	2645610	Identifier	false		2630490	1					
ANR	2645611	IdentifierDeclStatement	ut32 num = getthimmed12 ( ao -> a [ 2 ] ) ;	4001:3:84212:84246	2630490	2	True				
ANR	2645612	IdentifierDecl	num = getthimmed12 ( ao -> a [ 2 ] )		2630490	0					
ANR	2645613	IdentifierDeclType	ut32		2630490	0					
ANR	2645614	Identifier	num		2630490	1					
ANR	2645615	AssignmentExpression	num = getthimmed12 ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2645616	Identifier	num		2630490	0					
ANR	2645617	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		2630490	1					
ANR	2645618	Callee	getthimmed12		2630490	0					
ANR	2645619	Identifier	getthimmed12		2630490	0					
ANR	2645620	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2645621	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2645622	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2645623	PtrMemberAccess	ao -> a		2630490	0					
ANR	2645624	Identifier	ao		2630490	0					
ANR	2645625	Identifier	a		2630490	1					
ANR	2645626	PrimaryExpression	2		2630490	1					
ANR	2645627	IfStatement	if ( err )		2630490	3					
ANR	2645628	Condition	err	4003:7:84256:84258	2630490	0	True				
ANR	2645629	Identifier	err		2630490	0					
ANR	2645630	CompoundStatement		2711:12:58402:58402	2630490	1					
ANR	2645631	ReturnStatement	return - 1 ;	4004:4:84267:84276	2630490	0	True				
ANR	2645632	UnaryOperationExpression	- 1		2630490	0					
ANR	2645633	UnaryOperator	-		2630490	0					
ANR	2645634	PrimaryExpression	1		2630490	1					
ANR	2645635	ExpressionStatement	ao -> o |= num	4006:3:84286:84298	2630490	4	True				
ANR	2645636	AssignmentExpression	ao -> o |= num		2630490	0		|=			
ANR	2645637	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645638	Identifier	ao		2630490	0					
ANR	2645639	Identifier	o		2630490	1					
ANR	2645640	Identifier	num		2630490	1					
ANR	2645641	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	4008:3:84307:84343	2630490	5	True				
ANR	2645642	CallExpression	"std_32bit_2reg ( ao , m , false )"		2630490	0					
ANR	2645643	Callee	std_32bit_2reg		2630490	0					
ANR	2645644	Identifier	std_32bit_2reg		2630490	0					
ANR	2645645	ArgumentList	ao		2630490	1					
ANR	2645646	Argument	ao		2630490	0					
ANR	2645647	Identifier	ao		2630490	0					
ANR	2645648	Argument	m		2630490	1					
ANR	2645649	Identifier	m		2630490	0					
ANR	2645650	Argument	false		2630490	2					
ANR	2645651	Identifier	false		2630490	0					
ANR	2645652	BreakStatement	break ;	4010:3:84360:84365	2630490	13	True				
ANR	2645653	Label	default :	4011:2:84369:84376	2630490	14	True				
ANR	2645654	Identifier	default		2630490	0					
ANR	2645655	ReturnStatement	return - 1 ;	4012:3:84381:84390	2630490	15	True				
ANR	2645656	UnaryOperationExpression	- 1		2630490	0					
ANR	2645657	UnaryOperator	-		2630490	0					
ANR	2645658	PrimaryExpression	1		2630490	1					
ANR	2645659	ElseStatement	else		2630490	0					
ANR	2645660	IfStatement	"if ( ( m = opmask ( ao -> op , ""sbfx"" , 0 ) ) )"		2630490	0					
ANR	2645661	Condition	"m = opmask ( ao -> op , ""sbfx"" , 0 )"	4015:5:84409:84442	2630490	0	True				
ANR	2645662	AssignmentExpression	"m = opmask ( ao -> op , ""sbfx"" , 0 )"		2630490	0		=			
ANR	2645663	Identifier	m		2630490	0					
ANR	2645664	CallExpression	"opmask ( ao -> op , ""sbfx"" , 0 )"		2630490	1					
ANR	2645665	Callee	opmask		2630490	0					
ANR	2645666	Identifier	opmask		2630490	0					
ANR	2645667	ArgumentList	ao -> op		2630490	1					
ANR	2645668	Argument	ao -> op		2630490	0					
ANR	2645669	PtrMemberAccess	ao -> op		2630490	0					
ANR	2645670	Identifier	ao		2630490	0					
ANR	2645671	Identifier	op		2630490	1					
ANR	2645672	Argument	"""sbfx"""		2630490	1					
ANR	2645673	PrimaryExpression	"""sbfx"""		2630490	0					
ANR	2645674	Argument	0		2630490	2					
ANR	2645675	PrimaryExpression	0		2630490	0					
ANR	2645676	CompoundStatement		2724:2:58590:58624	2630490	1					
ANR	2645677	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4016:2:84449:84483	2630490	0	True				
ANR	2645678	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2645679	IdentifierDeclType	ut64		2630490	0					
ANR	2645680	Identifier	argt		2630490	1					
ANR	2645681	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2645682	Identifier	argt		2630490	0					
ANR	2645683	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2645684	Callee	thumb_selector		2630490	0					
ANR	2645685	Identifier	thumb_selector		2630490	0					
ANR	2645686	ArgumentList	ao -> a		2630490	1					
ANR	2645687	Argument	ao -> a		2630490	0					
ANR	2645688	PtrMemberAccess	ao -> a		2630490	0					
ANR	2645689	Identifier	ao		2630490	0					
ANR	2645690	Identifier	a		2630490	1					
ANR	2645691	SwitchStatement	switch ( argt )		2630490	1					
ANR	2645692	Condition	argt	4017:10:84495:84498	2630490	0	True				
ANR	2645693	Identifier	argt		2630490	0					
ANR	2645694	CompoundStatement		2725:16:58642:58642	2630490	1					
ANR	2645695	Label	case THUMB_REG_REG_CONST_CONST :	4018:2:84505:84535	2630490	0	True				
ANR	2645696	Identifier	THUMB_REG_REG_CONST_CONST		2630490	0					
ANR	2645697	CompoundStatement		2729:3:58751:58777	2630490	1					
ANR	2645698	IdentifierDeclStatement	ut32 lsb = getnum ( ao -> a [ 2 ] ) ;	4019:3:84542:84570	2630490	0	True				
ANR	2645699	IdentifierDecl	lsb = getnum ( ao -> a [ 2 ] )		2630490	0					
ANR	2645700	IdentifierDeclType	ut32		2630490	0					
ANR	2645701	Identifier	lsb		2630490	1					
ANR	2645702	AssignmentExpression	lsb = getnum ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2645703	Identifier	lsb		2630490	0					
ANR	2645704	CallExpression	getnum ( ao -> a [ 2 ] )		2630490	1					
ANR	2645705	Callee	getnum		2630490	0					
ANR	2645706	Identifier	getnum		2630490	0					
ANR	2645707	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2645708	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2645709	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2645710	PtrMemberAccess	ao -> a		2630490	0					
ANR	2645711	Identifier	ao		2630490	0					
ANR	2645712	Identifier	a		2630490	1					
ANR	2645713	PrimaryExpression	2		2630490	1					
ANR	2645714	IdentifierDeclStatement	ut32 width = getnum ( ao -> a [ 3 ] ) ;	4020:3:84575:84605	2630490	1	True				
ANR	2645715	IdentifierDecl	width = getnum ( ao -> a [ 3 ] )		2630490	0					
ANR	2645716	IdentifierDeclType	ut32		2630490	0					
ANR	2645717	Identifier	width		2630490	1					
ANR	2645718	AssignmentExpression	width = getnum ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2645719	Identifier	width		2630490	0					
ANR	2645720	CallExpression	getnum ( ao -> a [ 3 ] )		2630490	1					
ANR	2645721	Callee	getnum		2630490	0					
ANR	2645722	Identifier	getnum		2630490	0					
ANR	2645723	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2645724	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2645725	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2645726	PtrMemberAccess	ao -> a		2630490	0					
ANR	2645727	Identifier	ao		2630490	0					
ANR	2645728	Identifier	a		2630490	1					
ANR	2645729	PrimaryExpression	3		2630490	1					
ANR	2645730	IdentifierDeclStatement	ut32 msb = lsb + width - 1 ;	4021:3:84610:84636	2630490	2	True				
ANR	2645731	IdentifierDecl	msb = lsb + width - 1		2630490	0					
ANR	2645732	IdentifierDeclType	ut32		2630490	0					
ANR	2645733	Identifier	msb		2630490	1					
ANR	2645734	AssignmentExpression	msb = lsb + width - 1		2630490	2		=			
ANR	2645735	Identifier	msb		2630490	0					
ANR	2645736	AdditiveExpression	lsb + width - 1		2630490	1		+			
ANR	2645737	Identifier	lsb		2630490	0					
ANR	2645738	AdditiveExpression	width - 1		2630490	1		-			
ANR	2645739	Identifier	width		2630490	0					
ANR	2645740	PrimaryExpression	1		2630490	1					
ANR	2645741	IfStatement	if ( ( lsb > 31 ) || ( msb > 31 ) )		2630490	3					
ANR	2645742	Condition	( lsb > 31 ) || ( msb > 31 )	4022:7:84645:84668	2630490	0	True				
ANR	2645743	OrExpression	( lsb > 31 ) || ( msb > 31 )		2630490	0		||			
ANR	2645744	RelationalExpression	lsb > 31		2630490	0		>			
ANR	2645745	Identifier	lsb		2630490	0					
ANR	2645746	PrimaryExpression	31		2630490	1					
ANR	2645747	RelationalExpression	msb > 31		2630490	1		>			
ANR	2645748	Identifier	msb		2630490	0					
ANR	2645749	PrimaryExpression	31		2630490	1					
ANR	2645750	CompoundStatement		2730:33:58812:58812	2630490	1					
ANR	2645751	ReturnStatement	return - 1 ;	4023:4:84677:84686	2630490	0	True				
ANR	2645752	UnaryOperationExpression	- 1		2630490	0					
ANR	2645753	UnaryOperator	-		2630490	0					
ANR	2645754	PrimaryExpression	1		2630490	1					
ANR	2645755	ExpressionStatement	ao -> o = 0x40f30000	4025:3:84696:84714	2630490	4	True				
ANR	2645756	AssignmentExpression	ao -> o = 0x40f30000		2630490	0		=			
ANR	2645757	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645758	Identifier	ao		2630490	0					
ANR	2645759	Identifier	o		2630490	1					
ANR	2645760	PrimaryExpression	0x40f30000		2630490	1					
ANR	2645761	ExpressionStatement	ao -> o |= ( ( lsb & 0x1c ) << 2 )	4026:3:84719:84747	2630490	5	True				
ANR	2645762	AssignmentExpression	ao -> o |= ( ( lsb & 0x1c ) << 2 )		2630490	0		|=			
ANR	2645763	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645764	Identifier	ao		2630490	0					
ANR	2645765	Identifier	o		2630490	1					
ANR	2645766	ShiftExpression	( lsb & 0x1c ) << 2		2630490	1		<<			
ANR	2645767	BitAndExpression	lsb & 0x1c		2630490	0		&			
ANR	2645768	Identifier	lsb		2630490	0					
ANR	2645769	PrimaryExpression	0x1c		2630490	1					
ANR	2645770	PrimaryExpression	2		2630490	1					
ANR	2645771	ExpressionStatement	ao -> o |= ( ( lsb & 0x3 ) << 14 )	4027:3:84752:84780	2630490	6	True				
ANR	2645772	AssignmentExpression	ao -> o |= ( ( lsb & 0x3 ) << 14 )		2630490	0		|=			
ANR	2645773	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645774	Identifier	ao		2630490	0					
ANR	2645775	Identifier	o		2630490	1					
ANR	2645776	ShiftExpression	( lsb & 0x3 ) << 14		2630490	1		<<			
ANR	2645777	BitAndExpression	lsb & 0x3		2630490	0		&			
ANR	2645778	Identifier	lsb		2630490	0					
ANR	2645779	PrimaryExpression	0x3		2630490	1					
ANR	2645780	PrimaryExpression	14		2630490	1					
ANR	2645781	ExpressionStatement	ao -> o |= ( ( width - 1 ) << 8 )	4028:3:84785:84812	2630490	7	True				
ANR	2645782	AssignmentExpression	ao -> o |= ( ( width - 1 ) << 8 )		2630490	0		|=			
ANR	2645783	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645784	Identifier	ao		2630490	0					
ANR	2645785	Identifier	o		2630490	1					
ANR	2645786	ShiftExpression	( width - 1 ) << 8		2630490	1		<<			
ANR	2645787	AdditiveExpression	width - 1		2630490	0		-			
ANR	2645788	Identifier	width		2630490	0					
ANR	2645789	PrimaryExpression	1		2630490	1					
ANR	2645790	PrimaryExpression	8		2630490	1					
ANR	2645791	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	4029:3:84817:84853	2630490	8	True				
ANR	2645792	CallExpression	"std_32bit_2reg ( ao , m , false )"		2630490	0					
ANR	2645793	Callee	std_32bit_2reg		2630490	0					
ANR	2645794	Identifier	std_32bit_2reg		2630490	0					
ANR	2645795	ArgumentList	ao		2630490	1					
ANR	2645796	Argument	ao		2630490	0					
ANR	2645797	Identifier	ao		2630490	0					
ANR	2645798	Argument	m		2630490	1					
ANR	2645799	Identifier	m		2630490	0					
ANR	2645800	Argument	false		2630490	2					
ANR	2645801	Identifier	false		2630490	0					
ANR	2645802	BreakStatement	break ;	4031:3:84870:84875	2630490	2	True				
ANR	2645803	Label	default :	4032:2:84879:84886	2630490	3	True				
ANR	2645804	Identifier	default		2630490	0					
ANR	2645805	ReturnStatement	return - 1 ;	4033:3:84891:84900	2630490	4	True				
ANR	2645806	UnaryOperationExpression	- 1		2630490	0					
ANR	2645807	UnaryOperator	-		2630490	0					
ANR	2645808	PrimaryExpression	1		2630490	1					
ANR	2645809	ElseStatement	else		2630490	0					
ANR	2645810	IfStatement	"if ( ( m = opmask ( ao -> op , ""sdiv"" , 0 ) ) )"		2630490	0					
ANR	2645811	Condition	"m = opmask ( ao -> op , ""sdiv"" , 0 )"	4036:5:84919:84950	2630490	0	True				
ANR	2645812	AssignmentExpression	"m = opmask ( ao -> op , ""sdiv"" , 0 )"		2630490	0		=			
ANR	2645813	Identifier	m		2630490	0					
ANR	2645814	CallExpression	"opmask ( ao -> op , ""sdiv"" , 0 )"		2630490	1					
ANR	2645815	Callee	opmask		2630490	0					
ANR	2645816	Identifier	opmask		2630490	0					
ANR	2645817	ArgumentList	ao -> op		2630490	1					
ANR	2645818	Argument	ao -> op		2630490	0					
ANR	2645819	PtrMemberAccess	ao -> op		2630490	0					
ANR	2645820	Identifier	ao		2630490	0					
ANR	2645821	Identifier	op		2630490	1					
ANR	2645822	Argument	"""sdiv"""		2630490	1					
ANR	2645823	PrimaryExpression	"""sdiv"""		2630490	0					
ANR	2645824	Argument	0		2630490	2					
ANR	2645825	PrimaryExpression	0		2630490	0					
ANR	2645826	CompoundStatement		2745:2:59098:59132	2630490	1					
ANR	2645827	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4037:2:84957:84991	2630490	0	True				
ANR	2645828	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2645829	IdentifierDeclType	ut64		2630490	0					
ANR	2645830	Identifier	argt		2630490	1					
ANR	2645831	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2645832	Identifier	argt		2630490	0					
ANR	2645833	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2645834	Callee	thumb_selector		2630490	0					
ANR	2645835	Identifier	thumb_selector		2630490	0					
ANR	2645836	ArgumentList	ao -> a		2630490	1					
ANR	2645837	Argument	ao -> a		2630490	0					
ANR	2645838	PtrMemberAccess	ao -> a		2630490	0					
ANR	2645839	Identifier	ao		2630490	0					
ANR	2645840	Identifier	a		2630490	1					
ANR	2645841	SwitchStatement	switch ( argt )		2630490	1					
ANR	2645842	Condition	argt	4038:10:85003:85006	2630490	0	True				
ANR	2645843	Identifier	argt		2630490	0					
ANR	2645844	CompoundStatement		2746:16:59150:59150	2630490	1					
ANR	2645845	Label	case THUMB_REG_REG :	4039:2:85013:85031	2630490	0	True				
ANR	2645846	Identifier	THUMB_REG_REG		2630490	0					
ANR	2645847	CompoundStatement		2747:22:59174:59174	2630490	1					
ANR	2645848	ExpressionStatement	std_opt_2 ( ao )	4040:3:85038:85052	2630490	0	True				
ANR	2645849	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2645850	Callee	std_opt_2		2630490	0					
ANR	2645851	Identifier	std_opt_2		2630490	0					
ANR	2645852	ArgumentList	ao		2630490	1					
ANR	2645853	Argument	ao		2630490	0					
ANR	2645854	Identifier	ao		2630490	0					
ANR	2645855	Label	case THUMB_REG_REG_REG :	4043:2:85098:85120	2630490	2	True				
ANR	2645856	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2645857	CompoundStatement		2751:26:59263:59263	2630490	3					
ANR	2645858	ExpressionStatement	ao -> o = 0x90fbf0f0	4044:3:85127:85145	2630490	0	True				
ANR	2645859	AssignmentExpression	ao -> o = 0x90fbf0f0		2630490	0		=			
ANR	2645860	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645861	Identifier	ao		2630490	0					
ANR	2645862	Identifier	o		2630490	1					
ANR	2645863	PrimaryExpression	0x90fbf0f0		2630490	1					
ANR	2645864	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4045:3:85150:85186	2630490	1	True				
ANR	2645865	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2645866	Callee	std_32bit_3reg		2630490	0					
ANR	2645867	Identifier	std_32bit_3reg		2630490	0					
ANR	2645868	ArgumentList	ao		2630490	1					
ANR	2645869	Argument	ao		2630490	0					
ANR	2645870	Identifier	ao		2630490	0					
ANR	2645871	Argument	m		2630490	1					
ANR	2645872	Identifier	m		2630490	0					
ANR	2645873	Argument	false		2630490	2					
ANR	2645874	Identifier	false		2630490	0					
ANR	2645875	BreakStatement	break ;	4047:3:85203:85208	2630490	4	True				
ANR	2645876	Label	default :	4048:2:85212:85219	2630490	5	True				
ANR	2645877	Identifier	default		2630490	0					
ANR	2645878	ReturnStatement	return - 1 ;	4049:3:85224:85233	2630490	6	True				
ANR	2645879	UnaryOperationExpression	- 1		2630490	0					
ANR	2645880	UnaryOperator	-		2630490	0					
ANR	2645881	PrimaryExpression	1		2630490	1					
ANR	2645882	ElseStatement	else		2630490	0					
ANR	2645883	IfStatement	"if ( ( m = opmask ( ao -> op , ""sel"" , 0 ) ) )"		2630490	0					
ANR	2645884	Condition	"m = opmask ( ao -> op , ""sel"" , 0 )"	4052:5:85252:85282	2630490	0	True				
ANR	2645885	AssignmentExpression	"m = opmask ( ao -> op , ""sel"" , 0 )"		2630490	0		=			
ANR	2645886	Identifier	m		2630490	0					
ANR	2645887	CallExpression	"opmask ( ao -> op , ""sel"" , 0 )"		2630490	1					
ANR	2645888	Callee	opmask		2630490	0					
ANR	2645889	Identifier	opmask		2630490	0					
ANR	2645890	ArgumentList	ao -> op		2630490	1					
ANR	2645891	Argument	ao -> op		2630490	0					
ANR	2645892	PtrMemberAccess	ao -> op		2630490	0					
ANR	2645893	Identifier	ao		2630490	0					
ANR	2645894	Identifier	op		2630490	1					
ANR	2645895	Argument	"""sel"""		2630490	1					
ANR	2645896	PrimaryExpression	"""sel"""		2630490	0					
ANR	2645897	Argument	0		2630490	2					
ANR	2645898	PrimaryExpression	0		2630490	0					
ANR	2645899	CompoundStatement		2761:2:59430:59464	2630490	1					
ANR	2645900	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4053:2:85289:85323	2630490	0	True				
ANR	2645901	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2645902	IdentifierDeclType	ut64		2630490	0					
ANR	2645903	Identifier	argt		2630490	1					
ANR	2645904	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2645905	Identifier	argt		2630490	0					
ANR	2645906	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2645907	Callee	thumb_selector		2630490	0					
ANR	2645908	Identifier	thumb_selector		2630490	0					
ANR	2645909	ArgumentList	ao -> a		2630490	1					
ANR	2645910	Argument	ao -> a		2630490	0					
ANR	2645911	PtrMemberAccess	ao -> a		2630490	0					
ANR	2645912	Identifier	ao		2630490	0					
ANR	2645913	Identifier	a		2630490	1					
ANR	2645914	SwitchStatement	switch ( argt )		2630490	1					
ANR	2645915	Condition	argt	4054:10:85335:85338	2630490	0	True				
ANR	2645916	Identifier	argt		2630490	0					
ANR	2645917	CompoundStatement		2762:16:59482:59482	2630490	1					
ANR	2645918	Label	case THUMB_REG_REG :	4055:2:85345:85363	2630490	0	True				
ANR	2645919	Identifier	THUMB_REG_REG		2630490	0					
ANR	2645920	CompoundStatement		2763:22:59506:59506	2630490	1					
ANR	2645921	ExpressionStatement	std_opt_2 ( ao )	4056:3:85370:85384	2630490	0	True				
ANR	2645922	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2645923	Callee	std_opt_2		2630490	0					
ANR	2645924	Identifier	std_opt_2		2630490	0					
ANR	2645925	ArgumentList	ao		2630490	1					
ANR	2645926	Argument	ao		2630490	0					
ANR	2645927	Identifier	ao		2630490	0					
ANR	2645928	Label	case THUMB_REG_REG_REG :	4059:2:85430:85452	2630490	2	True				
ANR	2645929	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2645930	CompoundStatement		2767:26:59595:59595	2630490	3					
ANR	2645931	ExpressionStatement	ao -> o = 0xa0fa80f0	4060:3:85459:85477	2630490	0	True				
ANR	2645932	AssignmentExpression	ao -> o = 0xa0fa80f0		2630490	0		=			
ANR	2645933	PtrMemberAccess	ao -> o		2630490	0					
ANR	2645934	Identifier	ao		2630490	0					
ANR	2645935	Identifier	o		2630490	1					
ANR	2645936	PrimaryExpression	0xa0fa80f0		2630490	1					
ANR	2645937	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4061:3:85482:85518	2630490	1	True				
ANR	2645938	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2645939	Callee	std_32bit_3reg		2630490	0					
ANR	2645940	Identifier	std_32bit_3reg		2630490	0					
ANR	2645941	ArgumentList	ao		2630490	1					
ANR	2645942	Argument	ao		2630490	0					
ANR	2645943	Identifier	ao		2630490	0					
ANR	2645944	Argument	m		2630490	1					
ANR	2645945	Identifier	m		2630490	0					
ANR	2645946	Argument	false		2630490	2					
ANR	2645947	Identifier	false		2630490	0					
ANR	2645948	BreakStatement	break ;	4063:3:85535:85540	2630490	4	True				
ANR	2645949	Label	default :	4064:2:85544:85551	2630490	5	True				
ANR	2645950	Identifier	default		2630490	0					
ANR	2645951	ReturnStatement	return - 1 ;	4065:3:85556:85565	2630490	6	True				
ANR	2645952	UnaryOperationExpression	- 1		2630490	0					
ANR	2645953	UnaryOperator	-		2630490	0					
ANR	2645954	PrimaryExpression	1		2630490	1					
ANR	2645955	ElseStatement	else		2630490	0					
ANR	2645956	IfStatement	"if ( ( m = opmask ( ao -> op , ""setend"" , 0 ) ) )"		2630490	0					
ANR	2645957	Condition	"m = opmask ( ao -> op , ""setend"" , 0 )"	4068:5:85584:85617	2630490	0	True				
ANR	2645958	AssignmentExpression	"m = opmask ( ao -> op , ""setend"" , 0 )"		2630490	0		=			
ANR	2645959	Identifier	m		2630490	0					
ANR	2645960	CallExpression	"opmask ( ao -> op , ""setend"" , 0 )"		2630490	1					
ANR	2645961	Callee	opmask		2630490	0					
ANR	2645962	Identifier	opmask		2630490	0					
ANR	2645963	ArgumentList	ao -> op		2630490	1					
ANR	2645964	Argument	ao -> op		2630490	0					
ANR	2645965	PtrMemberAccess	ao -> op		2630490	0					
ANR	2645966	Identifier	ao		2630490	0					
ANR	2645967	Identifier	op		2630490	1					
ANR	2645968	Argument	"""setend"""		2630490	1					
ANR	2645969	PrimaryExpression	"""setend"""		2630490	0					
ANR	2645970	Argument	0		2630490	2					
ANR	2645971	PrimaryExpression	0		2630490	0					
ANR	2645972	CompoundStatement		2777:2:59765:59799	2630490	1					
ANR	2645973	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4069:2:85624:85658	2630490	0	True				
ANR	2645974	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2645975	IdentifierDeclType	ut64		2630490	0					
ANR	2645976	Identifier	argt		2630490	1					
ANR	2645977	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2645978	Identifier	argt		2630490	0					
ANR	2645979	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2645980	Callee	thumb_selector		2630490	0					
ANR	2645981	Identifier	thumb_selector		2630490	0					
ANR	2645982	ArgumentList	ao -> a		2630490	1					
ANR	2645983	Argument	ao -> a		2630490	0					
ANR	2645984	PtrMemberAccess	ao -> a		2630490	0					
ANR	2645985	Identifier	ao		2630490	0					
ANR	2645986	Identifier	a		2630490	1					
ANR	2645987	SwitchStatement	switch ( argt )		2630490	1					
ANR	2645988	Condition	argt	4070:10:85670:85673	2630490	0	True				
ANR	2645989	Identifier	argt		2630490	0					
ANR	2645990	CompoundStatement		2778:16:59817:59817	2630490	1					
ANR	2645991	Label	case THUMB_OTHER :	4071:2:85680:85696	2630490	0	True				
ANR	2645992	Identifier	THUMB_OTHER		2630490	0					
ANR	2645993	CompoundStatement		2779:20:59839:59839	2630490	1					
ANR	2645994	ExpressionStatement	"r_str_case ( ao -> a [ 0 ] , false )"	4072:3:85703:85731	2630490	0	True				
ANR	2645995	CallExpression	"r_str_case ( ao -> a [ 0 ] , false )"		2630490	0					
ANR	2645996	Callee	r_str_case		2630490	0					
ANR	2645997	Identifier	r_str_case		2630490	0					
ANR	2645998	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2645999	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2646000	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2646001	PtrMemberAccess	ao -> a		2630490	0					
ANR	2646002	Identifier	ao		2630490	0					
ANR	2646003	Identifier	a		2630490	1					
ANR	2646004	PrimaryExpression	0		2630490	1					
ANR	2646005	Argument	false		2630490	1					
ANR	2646006	Identifier	false		2630490	0					
ANR	2646007	ExpressionStatement	ao -> o = 0x50b6	4073:3:85736:85750	2630490	1	True				
ANR	2646008	AssignmentExpression	ao -> o = 0x50b6		2630490	0		=			
ANR	2646009	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646010	Identifier	ao		2630490	0					
ANR	2646011	Identifier	o		2630490	1					
ANR	2646012	PrimaryExpression	0x50b6		2630490	1					
ANR	2646013	IfStatement	"if ( ! ( strcmpnull ( ao -> a [ 0 ] , ""be"" ) ) )"		2630490	2					
ANR	2646014	Condition	"! ( strcmpnull ( ao -> a [ 0 ] , ""be"" ) )"	4074:7:85759:85788	2630490	0	True				
ANR	2646015	UnaryOperationExpression	"! ( strcmpnull ( ao -> a [ 0 ] , ""be"" ) )"		2630490	0					
ANR	2646016	UnaryOperator	!		2630490	0					
ANR	2646017	CallExpression	"strcmpnull ( ao -> a [ 0 ] , ""be"" )"		2630490	1					
ANR	2646018	Callee	strcmpnull		2630490	0					
ANR	2646019	Identifier	strcmpnull		2630490	0					
ANR	2646020	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2646021	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2646022	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2646023	PtrMemberAccess	ao -> a		2630490	0					
ANR	2646024	Identifier	ao		2630490	0					
ANR	2646025	Identifier	a		2630490	1					
ANR	2646026	PrimaryExpression	0		2630490	1					
ANR	2646027	Argument	"""be"""		2630490	1					
ANR	2646028	PrimaryExpression	"""be"""		2630490	0					
ANR	2646029	CompoundStatement		2782:39:59932:59932	2630490	1					
ANR	2646030	ExpressionStatement	ao -> o |= 1 << 11	4075:4:85797:85813	2630490	0	True				
ANR	2646031	AssignmentExpression	ao -> o |= 1 << 11		2630490	0		|=			
ANR	2646032	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646033	Identifier	ao		2630490	0					
ANR	2646034	Identifier	o		2630490	1					
ANR	2646035	ShiftExpression	1 << 11		2630490	1		<<			
ANR	2646036	PrimaryExpression	1		2630490	0					
ANR	2646037	PrimaryExpression	11		2630490	1					
ANR	2646038	ReturnStatement	return 2 ;	4076:4:85819:85827	2630490	1	True				
ANR	2646039	PrimaryExpression	2		2630490	0					
ANR	2646040	ElseStatement	else		2630490	0					
ANR	2646041	IfStatement	"if ( ! ( strcmpnull ( ao -> a [ 0 ] , ""le"" ) ) )"		2630490	0					
ANR	2646042	Condition	"! ( strcmpnull ( ao -> a [ 0 ] , ""le"" ) )"	4078:7:85846:85875	2630490	0	True				
ANR	2646043	UnaryOperationExpression	"! ( strcmpnull ( ao -> a [ 0 ] , ""le"" ) )"		2630490	0					
ANR	2646044	UnaryOperator	!		2630490	0					
ANR	2646045	CallExpression	"strcmpnull ( ao -> a [ 0 ] , ""le"" )"		2630490	1					
ANR	2646046	Callee	strcmpnull		2630490	0					
ANR	2646047	Identifier	strcmpnull		2630490	0					
ANR	2646048	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2646049	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2646050	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2646051	PtrMemberAccess	ao -> a		2630490	0					
ANR	2646052	Identifier	ao		2630490	0					
ANR	2646053	Identifier	a		2630490	1					
ANR	2646054	PrimaryExpression	0		2630490	1					
ANR	2646055	Argument	"""le"""		2630490	1					
ANR	2646056	PrimaryExpression	"""le"""		2630490	0					
ANR	2646057	CompoundStatement		2786:39:60019:60019	2630490	1					
ANR	2646058	ReturnStatement	return 2 ;	4079:4:85884:85892	2630490	0	True				
ANR	2646059	PrimaryExpression	2		2630490	0					
ANR	2646060	ElseStatement	else		2630490	0					
ANR	2646061	CompoundStatement		2788:10:60045:60045	2630490	0					
ANR	2646062	ReturnStatement	return - 1 ;	4081:4:85910:85919	2630490	0	True				
ANR	2646063	UnaryOperationExpression	- 1		2630490	0					
ANR	2646064	UnaryOperator	-		2630490	0					
ANR	2646065	PrimaryExpression	1		2630490	1					
ANR	2646066	BreakStatement	break ;	4083:3:85929:85934	2630490	3	True				
ANR	2646067	Label	default :	4085:2:85950:85957	2630490	2	True				
ANR	2646068	Identifier	default		2630490	0					
ANR	2646069	ReturnStatement	return - 1 ;	4086:3:85962:85971	2630490	3	True				
ANR	2646070	UnaryOperationExpression	- 1		2630490	0					
ANR	2646071	UnaryOperator	-		2630490	0					
ANR	2646072	PrimaryExpression	1		2630490	1					
ANR	2646073	ElseStatement	else		2630490	0					
ANR	2646074	IfStatement	"if ( ( m = opmask ( ao -> op , ""sev"" , 0 ) ) )"		2630490	0					
ANR	2646075	Condition	"m = opmask ( ao -> op , ""sev"" , 0 )"	4089:5:85990:86020	2630490	0	True				
ANR	2646076	AssignmentExpression	"m = opmask ( ao -> op , ""sev"" , 0 )"		2630490	0		=			
ANR	2646077	Identifier	m		2630490	0					
ANR	2646078	CallExpression	"opmask ( ao -> op , ""sev"" , 0 )"		2630490	1					
ANR	2646079	Callee	opmask		2630490	0					
ANR	2646080	Identifier	opmask		2630490	0					
ANR	2646081	ArgumentList	ao -> op		2630490	1					
ANR	2646082	Argument	ao -> op		2630490	0					
ANR	2646083	PtrMemberAccess	ao -> op		2630490	0					
ANR	2646084	Identifier	ao		2630490	0					
ANR	2646085	Identifier	op		2630490	1					
ANR	2646086	Argument	"""sev"""		2630490	1					
ANR	2646087	PrimaryExpression	"""sev"""		2630490	0					
ANR	2646088	Argument	0		2630490	2					
ANR	2646089	PrimaryExpression	0		2630490	0					
ANR	2646090	CompoundStatement		2798:2:60168:60202	2630490	1					
ANR	2646091	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4090:2:86027:86061	2630490	0	True				
ANR	2646092	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2646093	IdentifierDeclType	ut64		2630490	0					
ANR	2646094	Identifier	argt		2630490	1					
ANR	2646095	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2646096	Identifier	argt		2630490	0					
ANR	2646097	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2646098	Callee	thumb_selector		2630490	0					
ANR	2646099	Identifier	thumb_selector		2630490	0					
ANR	2646100	ArgumentList	ao -> a		2630490	1					
ANR	2646101	Argument	ao -> a		2630490	0					
ANR	2646102	PtrMemberAccess	ao -> a		2630490	0					
ANR	2646103	Identifier	ao		2630490	0					
ANR	2646104	Identifier	a		2630490	1					
ANR	2646105	SwitchStatement	switch ( argt )		2630490	1					
ANR	2646106	Condition	argt	4091:10:86073:86076	2630490	0	True				
ANR	2646107	Identifier	argt		2630490	0					
ANR	2646108	CompoundStatement		2799:16:60220:60220	2630490	1					
ANR	2646109	Label	case THUMB_NONE :	4092:2:86083:86098	2630490	0	True				
ANR	2646110	Identifier	THUMB_NONE		2630490	0					
ANR	2646111	IfStatement	if ( m & DOTW_BIT )		2630490	1					
ANR	2646112	Condition	m & DOTW_BIT	4093:7:86107:86118	2630490	0	True				
ANR	2646113	BitAndExpression	m & DOTW_BIT		2630490	0		&			
ANR	2646114	Identifier	m		2630490	0					
ANR	2646115	Identifier	DOTW_BIT		2630490	1					
ANR	2646116	CompoundStatement		2801:21:60262:60262	2630490	1					
ANR	2646117	ExpressionStatement	ao -> o = 0xaff30480	4094:4:86127:86145	2630490	0	True				
ANR	2646118	AssignmentExpression	ao -> o = 0xaff30480		2630490	0		=			
ANR	2646119	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646120	Identifier	ao		2630490	0					
ANR	2646121	Identifier	o		2630490	1					
ANR	2646122	PrimaryExpression	0xaff30480		2630490	1					
ANR	2646123	ReturnStatement	return 4 ;	4095:4:86151:86159	2630490	1	True				
ANR	2646124	PrimaryExpression	4		2630490	0					
ANR	2646125	ElseStatement	else		2630490	0					
ANR	2646126	CompoundStatement		2804:10:60312:60312	2630490	0					
ANR	2646127	ExpressionStatement	ao -> o = 0x40bf	4097:4:86177:86191	2630490	0	True				
ANR	2646128	AssignmentExpression	ao -> o = 0x40bf		2630490	0		=			
ANR	2646129	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646130	Identifier	ao		2630490	0					
ANR	2646131	Identifier	o		2630490	1					
ANR	2646132	PrimaryExpression	0x40bf		2630490	1					
ANR	2646133	ReturnStatement	return 2 ;	4098:4:86197:86205	2630490	1	True				
ANR	2646134	PrimaryExpression	2		2630490	0					
ANR	2646135	BreakStatement	break ;	4100:3:86215:86220	2630490	2	True				
ANR	2646136	Label	default :	4101:2:86224:86231	2630490	3	True				
ANR	2646137	Identifier	default		2630490	0					
ANR	2646138	ReturnStatement	return - 1 ;	4102:3:86236:86245	2630490	4	True				
ANR	2646139	UnaryOperationExpression	- 1		2630490	0					
ANR	2646140	UnaryOperator	-		2630490	0					
ANR	2646141	PrimaryExpression	1		2630490	1					
ANR	2646142	ElseStatement	else		2630490	0					
ANR	2646143	IfStatement	"if ( ( m = opmask ( ao -> op , ""shadd"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		2630490	0					
ANR	2646144	Condition	"m = opmask ( ao -> op , ""shadd"" , EIGHT_BIT | SIXTEEN_BIT )"	4105:5:86264:86319	2630490	0	True				
ANR	2646145	AssignmentExpression	"m = opmask ( ao -> op , ""shadd"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	0		=			
ANR	2646146	Identifier	m		2630490	0					
ANR	2646147	CallExpression	"opmask ( ao -> op , ""shadd"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	1					
ANR	2646148	Callee	opmask		2630490	0					
ANR	2646149	Identifier	opmask		2630490	0					
ANR	2646150	ArgumentList	ao -> op		2630490	1					
ANR	2646151	Argument	ao -> op		2630490	0					
ANR	2646152	PtrMemberAccess	ao -> op		2630490	0					
ANR	2646153	Identifier	ao		2630490	0					
ANR	2646154	Identifier	op		2630490	1					
ANR	2646155	Argument	"""shadd"""		2630490	1					
ANR	2646156	PrimaryExpression	"""shadd"""		2630490	0					
ANR	2646157	Argument	EIGHT_BIT | SIXTEEN_BIT		2630490	2					
ANR	2646158	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		2630490	0		|			
ANR	2646159	Identifier	EIGHT_BIT		2630490	0					
ANR	2646160	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2646161	CompoundStatement		2814:2:60467:60501	2630490	1					
ANR	2646162	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4106:2:86326:86360	2630490	0	True				
ANR	2646163	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2646164	IdentifierDeclType	ut64		2630490	0					
ANR	2646165	Identifier	argt		2630490	1					
ANR	2646166	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2646167	Identifier	argt		2630490	0					
ANR	2646168	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2646169	Callee	thumb_selector		2630490	0					
ANR	2646170	Identifier	thumb_selector		2630490	0					
ANR	2646171	ArgumentList	ao -> a		2630490	1					
ANR	2646172	Argument	ao -> a		2630490	0					
ANR	2646173	PtrMemberAccess	ao -> a		2630490	0					
ANR	2646174	Identifier	ao		2630490	0					
ANR	2646175	Identifier	a		2630490	1					
ANR	2646176	SwitchStatement	switch ( argt )		2630490	1					
ANR	2646177	Condition	argt	4107:10:86372:86375	2630490	0	True				
ANR	2646178	Identifier	argt		2630490	0					
ANR	2646179	CompoundStatement		2815:16:60519:60519	2630490	1					
ANR	2646180	Label	case THUMB_REG_REG :	4108:2:86382:86400	2630490	0	True				
ANR	2646181	Identifier	THUMB_REG_REG		2630490	0					
ANR	2646182	CompoundStatement		2816:22:60543:60543	2630490	1					
ANR	2646183	ExpressionStatement	std_opt_2 ( ao )	4109:3:86407:86421	2630490	0	True				
ANR	2646184	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2646185	Callee	std_opt_2		2630490	0					
ANR	2646186	Identifier	std_opt_2		2630490	0					
ANR	2646187	ArgumentList	ao		2630490	1					
ANR	2646188	Argument	ao		2630490	0					
ANR	2646189	Identifier	ao		2630490	0					
ANR	2646190	Label	case THUMB_REG_REG_REG :	4112:2:86467:86489	2630490	2	True				
ANR	2646191	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2646192	CompoundStatement		2820:26:60632:60632	2630490	3					
ANR	2646193	IfStatement	if ( m & SIXTEEN_BIT )		2630490	0					
ANR	2646194	Condition	m & SIXTEEN_BIT	4113:7:86500:86514	2630490	0	True				
ANR	2646195	BitAndExpression	m & SIXTEEN_BIT		2630490	0		&			
ANR	2646196	Identifier	m		2630490	0					
ANR	2646197	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2646198	CompoundStatement		2821:24:60658:60658	2630490	1					
ANR	2646199	ExpressionStatement	ao -> o = 0x90fa20f0	4114:4:86523:86541	2630490	0	True				
ANR	2646200	AssignmentExpression	ao -> o = 0x90fa20f0		2630490	0		=			
ANR	2646201	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646202	Identifier	ao		2630490	0					
ANR	2646203	Identifier	o		2630490	1					
ANR	2646204	PrimaryExpression	0x90fa20f0		2630490	1					
ANR	2646205	ElseStatement	else		2630490	0					
ANR	2646206	IfStatement	if ( m & EIGHT_BIT )		2630490	0					
ANR	2646207	Condition	m & EIGHT_BIT	4116:7:86560:86572	2630490	0	True				
ANR	2646208	BitAndExpression	m & EIGHT_BIT		2630490	0		&			
ANR	2646209	Identifier	m		2630490	0					
ANR	2646210	Identifier	EIGHT_BIT		2630490	1					
ANR	2646211	CompoundStatement		2824:22:60716:60716	2630490	1					
ANR	2646212	ExpressionStatement	ao -> o = 0x80fa20f0	4117:4:86581:86599	2630490	0	True				
ANR	2646213	AssignmentExpression	ao -> o = 0x80fa20f0		2630490	0		=			
ANR	2646214	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646215	Identifier	ao		2630490	0					
ANR	2646216	Identifier	o		2630490	1					
ANR	2646217	PrimaryExpression	0x80fa20f0		2630490	1					
ANR	2646218	ElseStatement	else		2630490	0					
ANR	2646219	CompoundStatement		2826:10:60752:60752	2630490	0					
ANR	2646220	ReturnStatement	return - 1 ;	4119:4:86617:86626	2630490	0	True				
ANR	2646221	UnaryOperationExpression	- 1		2630490	0					
ANR	2646222	UnaryOperator	-		2630490	0					
ANR	2646223	PrimaryExpression	1		2630490	1					
ANR	2646224	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4121:3:86636:86672	2630490	1	True				
ANR	2646225	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2646226	Callee	std_32bit_3reg		2630490	0					
ANR	2646227	Identifier	std_32bit_3reg		2630490	0					
ANR	2646228	ArgumentList	ao		2630490	1					
ANR	2646229	Argument	ao		2630490	0					
ANR	2646230	Identifier	ao		2630490	0					
ANR	2646231	Argument	m		2630490	1					
ANR	2646232	Identifier	m		2630490	0					
ANR	2646233	Argument	false		2630490	2					
ANR	2646234	Identifier	false		2630490	0					
ANR	2646235	BreakStatement	break ;	4123:3:86689:86694	2630490	4	True				
ANR	2646236	Label	default :	4124:2:86698:86705	2630490	5	True				
ANR	2646237	Identifier	default		2630490	0					
ANR	2646238	ReturnStatement	return - 1 ;	4125:3:86710:86719	2630490	6	True				
ANR	2646239	UnaryOperationExpression	- 1		2630490	0					
ANR	2646240	UnaryOperator	-		2630490	0					
ANR	2646241	PrimaryExpression	1		2630490	1					
ANR	2646242	ElseStatement	else		2630490	0					
ANR	2646243	IfStatement	"if ( ( m = opmask ( ao -> op , ""shasx"" , 0 ) ) )"		2630490	0					
ANR	2646244	Condition	"m = opmask ( ao -> op , ""shasx"" , 0 )"	4128:5:86738:86770	2630490	0	True				
ANR	2646245	AssignmentExpression	"m = opmask ( ao -> op , ""shasx"" , 0 )"		2630490	0		=			
ANR	2646246	Identifier	m		2630490	0					
ANR	2646247	CallExpression	"opmask ( ao -> op , ""shasx"" , 0 )"		2630490	1					
ANR	2646248	Callee	opmask		2630490	0					
ANR	2646249	Identifier	opmask		2630490	0					
ANR	2646250	ArgumentList	ao -> op		2630490	1					
ANR	2646251	Argument	ao -> op		2630490	0					
ANR	2646252	PtrMemberAccess	ao -> op		2630490	0					
ANR	2646253	Identifier	ao		2630490	0					
ANR	2646254	Identifier	op		2630490	1					
ANR	2646255	Argument	"""shasx"""		2630490	1					
ANR	2646256	PrimaryExpression	"""shasx"""		2630490	0					
ANR	2646257	Argument	0		2630490	2					
ANR	2646258	PrimaryExpression	0		2630490	0					
ANR	2646259	CompoundStatement		2837:2:60918:60952	2630490	1					
ANR	2646260	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4129:2:86777:86811	2630490	0	True				
ANR	2646261	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2646262	IdentifierDeclType	ut64		2630490	0					
ANR	2646263	Identifier	argt		2630490	1					
ANR	2646264	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2646265	Identifier	argt		2630490	0					
ANR	2646266	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2646267	Callee	thumb_selector		2630490	0					
ANR	2646268	Identifier	thumb_selector		2630490	0					
ANR	2646269	ArgumentList	ao -> a		2630490	1					
ANR	2646270	Argument	ao -> a		2630490	0					
ANR	2646271	PtrMemberAccess	ao -> a		2630490	0					
ANR	2646272	Identifier	ao		2630490	0					
ANR	2646273	Identifier	a		2630490	1					
ANR	2646274	SwitchStatement	switch ( argt )		2630490	1					
ANR	2646275	Condition	argt	4130:10:86823:86826	2630490	0	True				
ANR	2646276	Identifier	argt		2630490	0					
ANR	2646277	CompoundStatement		2838:16:60970:60970	2630490	1					
ANR	2646278	Label	case THUMB_REG_REG :	4131:2:86833:86851	2630490	0	True				
ANR	2646279	Identifier	THUMB_REG_REG		2630490	0					
ANR	2646280	CompoundStatement		2839:22:60994:60994	2630490	1					
ANR	2646281	ExpressionStatement	std_opt_2 ( ao )	4132:3:86858:86872	2630490	0	True				
ANR	2646282	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2646283	Callee	std_opt_2		2630490	0					
ANR	2646284	Identifier	std_opt_2		2630490	0					
ANR	2646285	ArgumentList	ao		2630490	1					
ANR	2646286	Argument	ao		2630490	0					
ANR	2646287	Identifier	ao		2630490	0					
ANR	2646288	Label	case THUMB_REG_REG_REG :	4135:2:86918:86940	2630490	2	True				
ANR	2646289	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2646290	CompoundStatement		2843:26:61083:61083	2630490	3					
ANR	2646291	ExpressionStatement	ao -> o = 0xa0fa20f0	4136:3:86947:86965	2630490	0	True				
ANR	2646292	AssignmentExpression	ao -> o = 0xa0fa20f0		2630490	0		=			
ANR	2646293	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646294	Identifier	ao		2630490	0					
ANR	2646295	Identifier	o		2630490	1					
ANR	2646296	PrimaryExpression	0xa0fa20f0		2630490	1					
ANR	2646297	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4137:3:86970:87006	2630490	1	True				
ANR	2646298	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2646299	Callee	std_32bit_3reg		2630490	0					
ANR	2646300	Identifier	std_32bit_3reg		2630490	0					
ANR	2646301	ArgumentList	ao		2630490	1					
ANR	2646302	Argument	ao		2630490	0					
ANR	2646303	Identifier	ao		2630490	0					
ANR	2646304	Argument	m		2630490	1					
ANR	2646305	Identifier	m		2630490	0					
ANR	2646306	Argument	false		2630490	2					
ANR	2646307	Identifier	false		2630490	0					
ANR	2646308	BreakStatement	break ;	4139:3:87023:87028	2630490	4	True				
ANR	2646309	Label	default :	4140:2:87032:87039	2630490	5	True				
ANR	2646310	Identifier	default		2630490	0					
ANR	2646311	ReturnStatement	return - 1 ;	4141:3:87044:87053	2630490	6	True				
ANR	2646312	UnaryOperationExpression	- 1		2630490	0					
ANR	2646313	UnaryOperator	-		2630490	0					
ANR	2646314	PrimaryExpression	1		2630490	1					
ANR	2646315	ElseStatement	else		2630490	0					
ANR	2646316	IfStatement	"if ( ( m = opmask ( ao -> op , ""shsax"" , 0 ) ) )"		2630490	0					
ANR	2646317	Condition	"m = opmask ( ao -> op , ""shsax"" , 0 )"	4144:5:87072:87104	2630490	0	True				
ANR	2646318	AssignmentExpression	"m = opmask ( ao -> op , ""shsax"" , 0 )"		2630490	0		=			
ANR	2646319	Identifier	m		2630490	0					
ANR	2646320	CallExpression	"opmask ( ao -> op , ""shsax"" , 0 )"		2630490	1					
ANR	2646321	Callee	opmask		2630490	0					
ANR	2646322	Identifier	opmask		2630490	0					
ANR	2646323	ArgumentList	ao -> op		2630490	1					
ANR	2646324	Argument	ao -> op		2630490	0					
ANR	2646325	PtrMemberAccess	ao -> op		2630490	0					
ANR	2646326	Identifier	ao		2630490	0					
ANR	2646327	Identifier	op		2630490	1					
ANR	2646328	Argument	"""shsax"""		2630490	1					
ANR	2646329	PrimaryExpression	"""shsax"""		2630490	0					
ANR	2646330	Argument	0		2630490	2					
ANR	2646331	PrimaryExpression	0		2630490	0					
ANR	2646332	CompoundStatement		2853:2:61252:61286	2630490	1					
ANR	2646333	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4145:2:87111:87145	2630490	0	True				
ANR	2646334	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2646335	IdentifierDeclType	ut64		2630490	0					
ANR	2646336	Identifier	argt		2630490	1					
ANR	2646337	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2646338	Identifier	argt		2630490	0					
ANR	2646339	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2646340	Callee	thumb_selector		2630490	0					
ANR	2646341	Identifier	thumb_selector		2630490	0					
ANR	2646342	ArgumentList	ao -> a		2630490	1					
ANR	2646343	Argument	ao -> a		2630490	0					
ANR	2646344	PtrMemberAccess	ao -> a		2630490	0					
ANR	2646345	Identifier	ao		2630490	0					
ANR	2646346	Identifier	a		2630490	1					
ANR	2646347	SwitchStatement	switch ( argt )		2630490	1					
ANR	2646348	Condition	argt	4146:10:87157:87160	2630490	0	True				
ANR	2646349	Identifier	argt		2630490	0					
ANR	2646350	CompoundStatement		2854:16:61304:61304	2630490	1					
ANR	2646351	Label	case THUMB_REG_REG :	4147:2:87167:87185	2630490	0	True				
ANR	2646352	Identifier	THUMB_REG_REG		2630490	0					
ANR	2646353	CompoundStatement		2855:22:61328:61328	2630490	1					
ANR	2646354	ExpressionStatement	std_opt_2 ( ao )	4148:3:87192:87206	2630490	0	True				
ANR	2646355	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2646356	Callee	std_opt_2		2630490	0					
ANR	2646357	Identifier	std_opt_2		2630490	0					
ANR	2646358	ArgumentList	ao		2630490	1					
ANR	2646359	Argument	ao		2630490	0					
ANR	2646360	Identifier	ao		2630490	0					
ANR	2646361	Label	case THUMB_REG_REG_REG :	4151:2:87252:87274	2630490	2	True				
ANR	2646362	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2646363	CompoundStatement		2859:26:61417:61417	2630490	3					
ANR	2646364	ExpressionStatement	ao -> o = 0xe0fa20f0	4152:3:87281:87299	2630490	0	True				
ANR	2646365	AssignmentExpression	ao -> o = 0xe0fa20f0		2630490	0		=			
ANR	2646366	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646367	Identifier	ao		2630490	0					
ANR	2646368	Identifier	o		2630490	1					
ANR	2646369	PrimaryExpression	0xe0fa20f0		2630490	1					
ANR	2646370	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4153:3:87304:87340	2630490	1	True				
ANR	2646371	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2646372	Callee	std_32bit_3reg		2630490	0					
ANR	2646373	Identifier	std_32bit_3reg		2630490	0					
ANR	2646374	ArgumentList	ao		2630490	1					
ANR	2646375	Argument	ao		2630490	0					
ANR	2646376	Identifier	ao		2630490	0					
ANR	2646377	Argument	m		2630490	1					
ANR	2646378	Identifier	m		2630490	0					
ANR	2646379	Argument	false		2630490	2					
ANR	2646380	Identifier	false		2630490	0					
ANR	2646381	BreakStatement	break ;	4155:3:87357:87362	2630490	4	True				
ANR	2646382	Label	default :	4156:2:87366:87373	2630490	5	True				
ANR	2646383	Identifier	default		2630490	0					
ANR	2646384	ReturnStatement	return - 1 ;	4157:3:87378:87387	2630490	6	True				
ANR	2646385	UnaryOperationExpression	- 1		2630490	0					
ANR	2646386	UnaryOperator	-		2630490	0					
ANR	2646387	PrimaryExpression	1		2630490	1					
ANR	2646388	ElseStatement	else		2630490	0					
ANR	2646389	IfStatement	"if ( ( m = opmask ( ao -> op , ""shsub"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		2630490	0					
ANR	2646390	Condition	"m = opmask ( ao -> op , ""shsub"" , EIGHT_BIT | SIXTEEN_BIT )"	4160:5:87406:87460	2630490	0	True				
ANR	2646391	AssignmentExpression	"m = opmask ( ao -> op , ""shsub"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	0		=			
ANR	2646392	Identifier	m		2630490	0					
ANR	2646393	CallExpression	"opmask ( ao -> op , ""shsub"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	1					
ANR	2646394	Callee	opmask		2630490	0					
ANR	2646395	Identifier	opmask		2630490	0					
ANR	2646396	ArgumentList	ao -> op		2630490	1					
ANR	2646397	Argument	ao -> op		2630490	0					
ANR	2646398	PtrMemberAccess	ao -> op		2630490	0					
ANR	2646399	Identifier	ao		2630490	0					
ANR	2646400	Identifier	op		2630490	1					
ANR	2646401	Argument	"""shsub"""		2630490	1					
ANR	2646402	PrimaryExpression	"""shsub"""		2630490	0					
ANR	2646403	Argument	EIGHT_BIT | SIXTEEN_BIT		2630490	2					
ANR	2646404	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		2630490	0		|			
ANR	2646405	Identifier	EIGHT_BIT		2630490	0					
ANR	2646406	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2646407	CompoundStatement		2869:2:61608:61642	2630490	1					
ANR	2646408	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4161:2:87467:87501	2630490	0	True				
ANR	2646409	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2646410	IdentifierDeclType	ut64		2630490	0					
ANR	2646411	Identifier	argt		2630490	1					
ANR	2646412	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2646413	Identifier	argt		2630490	0					
ANR	2646414	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2646415	Callee	thumb_selector		2630490	0					
ANR	2646416	Identifier	thumb_selector		2630490	0					
ANR	2646417	ArgumentList	ao -> a		2630490	1					
ANR	2646418	Argument	ao -> a		2630490	0					
ANR	2646419	PtrMemberAccess	ao -> a		2630490	0					
ANR	2646420	Identifier	ao		2630490	0					
ANR	2646421	Identifier	a		2630490	1					
ANR	2646422	SwitchStatement	switch ( argt )		2630490	1					
ANR	2646423	Condition	argt	4162:10:87513:87516	2630490	0	True				
ANR	2646424	Identifier	argt		2630490	0					
ANR	2646425	CompoundStatement		2870:16:61660:61660	2630490	1					
ANR	2646426	Label	case THUMB_REG_REG :	4163:2:87523:87541	2630490	0	True				
ANR	2646427	Identifier	THUMB_REG_REG		2630490	0					
ANR	2646428	CompoundStatement		2871:22:61684:61684	2630490	1					
ANR	2646429	ExpressionStatement	std_opt_2 ( ao )	4164:3:87548:87562	2630490	0	True				
ANR	2646430	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2646431	Callee	std_opt_2		2630490	0					
ANR	2646432	Identifier	std_opt_2		2630490	0					
ANR	2646433	ArgumentList	ao		2630490	1					
ANR	2646434	Argument	ao		2630490	0					
ANR	2646435	Identifier	ao		2630490	0					
ANR	2646436	Label	case THUMB_REG_REG_REG :	4167:2:87608:87630	2630490	2	True				
ANR	2646437	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2646438	CompoundStatement		2875:26:61773:61773	2630490	3					
ANR	2646439	IfStatement	if ( m & SIXTEEN_BIT )		2630490	0					
ANR	2646440	Condition	m & SIXTEEN_BIT	4168:7:87641:87655	2630490	0	True				
ANR	2646441	BitAndExpression	m & SIXTEEN_BIT		2630490	0		&			
ANR	2646442	Identifier	m		2630490	0					
ANR	2646443	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2646444	CompoundStatement		2876:24:61799:61799	2630490	1					
ANR	2646445	ExpressionStatement	ao -> o = 0xd0fa20f0	4169:4:87664:87682	2630490	0	True				
ANR	2646446	AssignmentExpression	ao -> o = 0xd0fa20f0		2630490	0		=			
ANR	2646447	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646448	Identifier	ao		2630490	0					
ANR	2646449	Identifier	o		2630490	1					
ANR	2646450	PrimaryExpression	0xd0fa20f0		2630490	1					
ANR	2646451	ElseStatement	else		2630490	0					
ANR	2646452	IfStatement	if ( m & EIGHT_BIT )		2630490	0					
ANR	2646453	Condition	m & EIGHT_BIT	4171:7:87701:87713	2630490	0	True				
ANR	2646454	BitAndExpression	m & EIGHT_BIT		2630490	0		&			
ANR	2646455	Identifier	m		2630490	0					
ANR	2646456	Identifier	EIGHT_BIT		2630490	1					
ANR	2646457	CompoundStatement		2879:22:61857:61857	2630490	1					
ANR	2646458	ExpressionStatement	ao -> o = 0xc0fa20f0	4172:4:87722:87740	2630490	0	True				
ANR	2646459	AssignmentExpression	ao -> o = 0xc0fa20f0		2630490	0		=			
ANR	2646460	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646461	Identifier	ao		2630490	0					
ANR	2646462	Identifier	o		2630490	1					
ANR	2646463	PrimaryExpression	0xc0fa20f0		2630490	1					
ANR	2646464	ElseStatement	else		2630490	0					
ANR	2646465	CompoundStatement		2881:10:61893:61893	2630490	0					
ANR	2646466	ReturnStatement	return - 1 ;	4174:4:87758:87767	2630490	0	True				
ANR	2646467	UnaryOperationExpression	- 1		2630490	0					
ANR	2646468	UnaryOperator	-		2630490	0					
ANR	2646469	PrimaryExpression	1		2630490	1					
ANR	2646470	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4176:3:87777:87813	2630490	1	True				
ANR	2646471	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2646472	Callee	std_32bit_3reg		2630490	0					
ANR	2646473	Identifier	std_32bit_3reg		2630490	0					
ANR	2646474	ArgumentList	ao		2630490	1					
ANR	2646475	Argument	ao		2630490	0					
ANR	2646476	Identifier	ao		2630490	0					
ANR	2646477	Argument	m		2630490	1					
ANR	2646478	Identifier	m		2630490	0					
ANR	2646479	Argument	false		2630490	2					
ANR	2646480	Identifier	false		2630490	0					
ANR	2646481	BreakStatement	break ;	4178:3:87830:87835	2630490	4	True				
ANR	2646482	Label	default :	4179:2:87839:87846	2630490	5	True				
ANR	2646483	Identifier	default		2630490	0					
ANR	2646484	ReturnStatement	return - 1 ;	4180:3:87851:87860	2630490	6	True				
ANR	2646485	UnaryOperationExpression	- 1		2630490	0					
ANR	2646486	UnaryOperator	-		2630490	0					
ANR	2646487	PrimaryExpression	1		2630490	1					
ANR	2646488	ElseStatement	else		2630490	0					
ANR	2646489	IfStatement	"if ( ( m = opmask ( ao -> op , ""smc"" , 0 ) ) )"		2630490	0					
ANR	2646490	Condition	"m = opmask ( ao -> op , ""smc"" , 0 )"	4183:5:87879:87909	2630490	0	True				
ANR	2646491	AssignmentExpression	"m = opmask ( ao -> op , ""smc"" , 0 )"		2630490	0		=			
ANR	2646492	Identifier	m		2630490	0					
ANR	2646493	CallExpression	"opmask ( ao -> op , ""smc"" , 0 )"		2630490	1					
ANR	2646494	Callee	opmask		2630490	0					
ANR	2646495	Identifier	opmask		2630490	0					
ANR	2646496	ArgumentList	ao -> op		2630490	1					
ANR	2646497	Argument	ao -> op		2630490	0					
ANR	2646498	PtrMemberAccess	ao -> op		2630490	0					
ANR	2646499	Identifier	ao		2630490	0					
ANR	2646500	Identifier	op		2630490	1					
ANR	2646501	Argument	"""smc"""		2630490	1					
ANR	2646502	PrimaryExpression	"""smc"""		2630490	0					
ANR	2646503	Argument	0		2630490	2					
ANR	2646504	PrimaryExpression	0		2630490	0					
ANR	2646505	CompoundStatement		2892:2:62057:62091	2630490	1					
ANR	2646506	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4184:2:87916:87950	2630490	0	True				
ANR	2646507	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2646508	IdentifierDeclType	ut64		2630490	0					
ANR	2646509	Identifier	argt		2630490	1					
ANR	2646510	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2646511	Identifier	argt		2630490	0					
ANR	2646512	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2646513	Callee	thumb_selector		2630490	0					
ANR	2646514	Identifier	thumb_selector		2630490	0					
ANR	2646515	ArgumentList	ao -> a		2630490	1					
ANR	2646516	Argument	ao -> a		2630490	0					
ANR	2646517	PtrMemberAccess	ao -> a		2630490	0					
ANR	2646518	Identifier	ao		2630490	0					
ANR	2646519	Identifier	a		2630490	1					
ANR	2646520	SwitchStatement	switch ( argt )		2630490	1					
ANR	2646521	Condition	argt	4185:10:87962:87965	2630490	0	True				
ANR	2646522	Identifier	argt		2630490	0					
ANR	2646523	CompoundStatement		2893:16:62109:62109	2630490	1					
ANR	2646524	Label	case THUMB_CONST :	4186:2:87972:87988	2630490	0	True				
ANR	2646525	Identifier	THUMB_CONST		2630490	0					
ANR	2646526	CompoundStatement		2896:3:62152:62180	2630490	1					
ANR	2646527	ExpressionStatement	err = false	4187:3:87995:88006	2630490	0	True				
ANR	2646528	AssignmentExpression	err = false		2630490	0		=			
ANR	2646529	Identifier	err		2630490	0					
ANR	2646530	Identifier	false		2630490	1					
ANR	2646531	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 0 ] ) ;	4188:3:88011:88039	2630490	1	True				
ANR	2646532	IdentifierDecl	num = getnum ( ao -> a [ 0 ] )		2630490	0					
ANR	2646533	IdentifierDeclType	ut32		2630490	0					
ANR	2646534	Identifier	num		2630490	1					
ANR	2646535	AssignmentExpression	num = getnum ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2646536	Identifier	num		2630490	0					
ANR	2646537	CallExpression	getnum ( ao -> a [ 0 ] )		2630490	1					
ANR	2646538	Callee	getnum		2630490	0					
ANR	2646539	Identifier	getnum		2630490	0					
ANR	2646540	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2646541	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2646542	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2646543	PtrMemberAccess	ao -> a		2630490	0					
ANR	2646544	Identifier	ao		2630490	0					
ANR	2646545	Identifier	a		2630490	1					
ANR	2646546	PrimaryExpression	0		2630490	1					
ANR	2646547	IfStatement	if ( err || ( num > 15 ) )		2630490	2					
ANR	2646548	Condition	err || ( num > 15 )	4190:7:88052:88068	2630490	0	True				
ANR	2646549	OrExpression	err || ( num > 15 )		2630490	0		||			
ANR	2646550	Identifier	err		2630490	0					
ANR	2646551	RelationalExpression	num > 15		2630490	1		>			
ANR	2646552	Identifier	num		2630490	0					
ANR	2646553	PrimaryExpression	15		2630490	1					
ANR	2646554	CompoundStatement		2898:26:62212:62212	2630490	1					
ANR	2646555	ReturnStatement	return - 1 ;	4191:4:88077:88086	2630490	0	True				
ANR	2646556	UnaryOperationExpression	- 1		2630490	0					
ANR	2646557	UnaryOperator	-		2630490	0					
ANR	2646558	PrimaryExpression	1		2630490	1					
ANR	2646559	ExpressionStatement	ao -> o = 0xf0f70080	4194:3:88097:88115	2630490	3	True				
ANR	2646560	AssignmentExpression	ao -> o = 0xf0f70080		2630490	0		=			
ANR	2646561	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646562	Identifier	ao		2630490	0					
ANR	2646563	Identifier	o		2630490	1					
ANR	2646564	PrimaryExpression	0xf0f70080		2630490	1					
ANR	2646565	ExpressionStatement	ao -> o |= num << 24	4195:3:88120:88138	2630490	4	True				
ANR	2646566	AssignmentExpression	ao -> o |= num << 24		2630490	0		|=			
ANR	2646567	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646568	Identifier	ao		2630490	0					
ANR	2646569	Identifier	o		2630490	1					
ANR	2646570	ShiftExpression	num << 24		2630490	1		<<			
ANR	2646571	Identifier	num		2630490	0					
ANR	2646572	PrimaryExpression	24		2630490	1					
ANR	2646573	ReturnStatement	return 4 ;	4196:3:88143:88151	2630490	5	True				
ANR	2646574	PrimaryExpression	4		2630490	0					
ANR	2646575	BreakStatement	break ;	4198:3:88168:88173	2630490	2	True				
ANR	2646576	Label	default :	4199:2:88177:88184	2630490	3	True				
ANR	2646577	Identifier	default		2630490	0					
ANR	2646578	ReturnStatement	return - 1 ;	4200:3:88189:88198	2630490	4	True				
ANR	2646579	UnaryOperationExpression	- 1		2630490	0					
ANR	2646580	UnaryOperator	-		2630490	0					
ANR	2646581	PrimaryExpression	1		2630490	1					
ANR	2646582	ElseStatement	else		2630490	0					
ANR	2646583	IfStatement	"if ( ( m = opmask ( ao -> op , ""smla"" , BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT ) ) )"		2630490	0					
ANR	2646584	Condition	"m = opmask ( ao -> op , ""smla"" , BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT )"	4203:5:88217:88322	2630490	0	True				
ANR	2646585	AssignmentExpression	"m = opmask ( ao -> op , ""smla"" , BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT )"		2630490	0		=			
ANR	2646586	Identifier	m		2630490	0					
ANR	2646587	CallExpression	"opmask ( ao -> op , ""smla"" , BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT )"		2630490	1					
ANR	2646588	Callee	opmask		2630490	0					
ANR	2646589	Identifier	opmask		2630490	0					
ANR	2646590	ArgumentList	ao -> op		2630490	1					
ANR	2646591	Argument	ao -> op		2630490	0					
ANR	2646592	PtrMemberAccess	ao -> op		2630490	0					
ANR	2646593	Identifier	ao		2630490	0					
ANR	2646594	Identifier	op		2630490	1					
ANR	2646595	Argument	"""smla"""		2630490	1					
ANR	2646596	PrimaryExpression	"""smla"""		2630490	0					
ANR	2646597	Argument	BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT		2630490	2					
ANR	2646598	InclusiveOrExpression	BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT		2630490	0		|			
ANR	2646599	Identifier	BB_BIT		2630490	0					
ANR	2646600	InclusiveOrExpression	BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT		2630490	1		|			
ANR	2646601	Identifier	BT_BIT		2630490	0					
ANR	2646602	InclusiveOrExpression	TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT		2630490	1		|			
ANR	2646603	Identifier	TB_BIT		2630490	0					
ANR	2646604	InclusiveOrExpression	TT_BIT | WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT		2630490	1		|			
ANR	2646605	Identifier	TT_BIT		2630490	0					
ANR	2646606	InclusiveOrExpression	WB_BIT | WT_BIT | L_BIT | D_BIT | X_BIT		2630490	1		|			
ANR	2646607	Identifier	WB_BIT		2630490	0					
ANR	2646608	InclusiveOrExpression	WT_BIT | L_BIT | D_BIT | X_BIT		2630490	1		|			
ANR	2646609	Identifier	WT_BIT		2630490	0					
ANR	2646610	InclusiveOrExpression	L_BIT | D_BIT | X_BIT		2630490	1		|			
ANR	2646611	Identifier	L_BIT		2630490	0					
ANR	2646612	InclusiveOrExpression	D_BIT | X_BIT		2630490	1		|			
ANR	2646613	Identifier	D_BIT		2630490	0					
ANR	2646614	Identifier	X_BIT		2630490	1					
ANR	2646615	CompoundStatement		2912:2:62470:62504	2630490	1					
ANR	2646616	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4204:2:88329:88363	2630490	0	True				
ANR	2646617	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2646618	IdentifierDeclType	ut64		2630490	0					
ANR	2646619	Identifier	argt		2630490	1					
ANR	2646620	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2646621	Identifier	argt		2630490	0					
ANR	2646622	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2646623	Callee	thumb_selector		2630490	0					
ANR	2646624	Identifier	thumb_selector		2630490	0					
ANR	2646625	ArgumentList	ao -> a		2630490	1					
ANR	2646626	Argument	ao -> a		2630490	0					
ANR	2646627	PtrMemberAccess	ao -> a		2630490	0					
ANR	2646628	Identifier	ao		2630490	0					
ANR	2646629	Identifier	a		2630490	1					
ANR	2646630	SwitchStatement	switch ( argt )		2630490	1					
ANR	2646631	Condition	argt	4205:10:88375:88378	2630490	0	True				
ANR	2646632	Identifier	argt		2630490	0					
ANR	2646633	CompoundStatement		2913:16:62522:62522	2630490	1					
ANR	2646634	Label	case THUMB_REG_REG_REG_REG :	4206:2:88385:88411	2630490	0	True				
ANR	2646635	Identifier	THUMB_REG_REG_REG_REG		2630490	0					
ANR	2646636	CompoundStatement		2918:3:62658:62686	2630490	1					
ANR	2646637	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4207:3:88418:88446	2630490	0	True				
ANR	2646638	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2646639	IdentifierDeclType	ut8		2630490	0					
ANR	2646640	Identifier	reg1		2630490	1					
ANR	2646641	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2646642	Identifier	reg1		2630490	0					
ANR	2646643	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2646644	Callee	getreg		2630490	0					
ANR	2646645	Identifier	getreg		2630490	0					
ANR	2646646	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2646647	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2646648	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2646649	PtrMemberAccess	ao -> a		2630490	0					
ANR	2646650	Identifier	ao		2630490	0					
ANR	2646651	Identifier	a		2630490	1					
ANR	2646652	PrimaryExpression	0		2630490	1					
ANR	2646653	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	4208:3:88451:88479	2630490	1	True				
ANR	2646654	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2646655	IdentifierDeclType	ut8		2630490	0					
ANR	2646656	Identifier	reg2		2630490	1					
ANR	2646657	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2646658	Identifier	reg2		2630490	0					
ANR	2646659	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2646660	Callee	getreg		2630490	0					
ANR	2646661	Identifier	getreg		2630490	0					
ANR	2646662	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2646663	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2646664	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2646665	PtrMemberAccess	ao -> a		2630490	0					
ANR	2646666	Identifier	ao		2630490	0					
ANR	2646667	Identifier	a		2630490	1					
ANR	2646668	PrimaryExpression	1		2630490	1					
ANR	2646669	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	4209:3:88484:88512	2630490	2	True				
ANR	2646670	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2646671	IdentifierDeclType	ut8		2630490	0					
ANR	2646672	Identifier	reg3		2630490	1					
ANR	2646673	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2646674	Identifier	reg3		2630490	0					
ANR	2646675	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2646676	Callee	getreg		2630490	0					
ANR	2646677	Identifier	getreg		2630490	0					
ANR	2646678	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2646679	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2646680	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2646681	PtrMemberAccess	ao -> a		2630490	0					
ANR	2646682	Identifier	ao		2630490	0					
ANR	2646683	Identifier	a		2630490	1					
ANR	2646684	PrimaryExpression	2		2630490	1					
ANR	2646685	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	4210:3:88517:88545	2630490	3	True				
ANR	2646686	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		2630490	0					
ANR	2646687	IdentifierDeclType	ut8		2630490	0					
ANR	2646688	Identifier	reg4		2630490	1					
ANR	2646689	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2646690	Identifier	reg4		2630490	0					
ANR	2646691	CallExpression	getreg ( ao -> a [ 3 ] )		2630490	1					
ANR	2646692	Callee	getreg		2630490	0					
ANR	2646693	Identifier	getreg		2630490	0					
ANR	2646694	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2646695	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2646696	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2646697	PtrMemberAccess	ao -> a		2630490	0					
ANR	2646698	Identifier	ao		2630490	0					
ANR	2646699	Identifier	a		2630490	1					
ANR	2646700	PrimaryExpression	3		2630490	1					
ANR	2646701	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT ) )		2630490	4					
ANR	2646702	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT )	4212:7:88558:88631	2630490	0	True				
ANR	2646703	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT )		2630490	0		||			
ANR	2646704	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2646705	Identifier	reg1		2630490	0					
ANR	2646706	PrimaryExpression	15		2630490	1					
ANR	2646707	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT )		2630490	1		||			
ANR	2646708	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2646709	Identifier	reg2		2630490	0					
ANR	2646710	PrimaryExpression	15		2630490	1					
ANR	2646711	OrExpression	( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT )		2630490	1		||			
ANR	2646712	RelationalExpression	reg3 > 15		2630490	0		>			
ANR	2646713	Identifier	reg3		2630490	0					
ANR	2646714	PrimaryExpression	15		2630490	1					
ANR	2646715	OrExpression	( reg4 > 15 ) || ( m & DOTN_BIT )		2630490	1		||			
ANR	2646716	RelationalExpression	reg4 > 15		2630490	0		>			
ANR	2646717	Identifier	reg4		2630490	0					
ANR	2646718	PrimaryExpression	15		2630490	1					
ANR	2646719	BitAndExpression	m & DOTN_BIT		2630490	1		&			
ANR	2646720	Identifier	m		2630490	0					
ANR	2646721	Identifier	DOTN_BIT		2630490	1					
ANR	2646722	CompoundStatement		2920:83:62775:62775	2630490	1					
ANR	2646723	ReturnStatement	return - 1 ;	4213:4:88640:88649	2630490	0	True				
ANR	2646724	UnaryOperationExpression	- 1		2630490	0					
ANR	2646725	UnaryOperator	-		2630490	0					
ANR	2646726	PrimaryExpression	1		2630490	1					
ANR	2646727	IfStatement	if ( m & L_BIT )		2630490	5					
ANR	2646728	Condition	m & L_BIT	4215:7:88663:88671	2630490	0	True				
ANR	2646729	BitAndExpression	m & L_BIT		2630490	0		&			
ANR	2646730	Identifier	m		2630490	0					
ANR	2646731	Identifier	L_BIT		2630490	1					
ANR	2646732	CompoundStatement		2923:18:62815:62815	2630490	1					
ANR	2646733	IfStatement	if ( m & BB_BIT )		2630490	0					
ANR	2646734	Condition	m & BB_BIT	4216:8:88684:88693	2630490	0	True				
ANR	2646735	BitAndExpression	m & BB_BIT		2630490	0		&			
ANR	2646736	Identifier	m		2630490	0					
ANR	2646737	Identifier	BB_BIT		2630490	1					
ANR	2646738	CompoundStatement		2924:20:62837:62837	2630490	1					
ANR	2646739	ExpressionStatement	ao -> o = 0xc0fb8000	4217:5:88703:88721	2630490	0	True				
ANR	2646740	AssignmentExpression	ao -> o = 0xc0fb8000		2630490	0		=			
ANR	2646741	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646742	Identifier	ao		2630490	0					
ANR	2646743	Identifier	o		2630490	1					
ANR	2646744	PrimaryExpression	0xc0fb8000		2630490	1					
ANR	2646745	ElseStatement	else		2630490	0					
ANR	2646746	IfStatement	if ( m & BT_BIT )		2630490	0					
ANR	2646747	Condition	m & BT_BIT	4219:8:88742:88751	2630490	0	True				
ANR	2646748	BitAndExpression	m & BT_BIT		2630490	0		&			
ANR	2646749	Identifier	m		2630490	0					
ANR	2646750	Identifier	BT_BIT		2630490	1					
ANR	2646751	CompoundStatement		2927:20:62895:62895	2630490	1					
ANR	2646752	ExpressionStatement	ao -> o = 0xc0fb9000	4220:5:88761:88779	2630490	0	True				
ANR	2646753	AssignmentExpression	ao -> o = 0xc0fb9000		2630490	0		=			
ANR	2646754	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646755	Identifier	ao		2630490	0					
ANR	2646756	Identifier	o		2630490	1					
ANR	2646757	PrimaryExpression	0xc0fb9000		2630490	1					
ANR	2646758	ElseStatement	else		2630490	0					
ANR	2646759	IfStatement	if ( m & TB_BIT )		2630490	0					
ANR	2646760	Condition	m & TB_BIT	4222:8:88800:88809	2630490	0	True				
ANR	2646761	BitAndExpression	m & TB_BIT		2630490	0		&			
ANR	2646762	Identifier	m		2630490	0					
ANR	2646763	Identifier	TB_BIT		2630490	1					
ANR	2646764	CompoundStatement		2930:20:62953:62953	2630490	1					
ANR	2646765	ExpressionStatement	ao -> o = 0xc0fba000	4223:5:88819:88837	2630490	0	True				
ANR	2646766	AssignmentExpression	ao -> o = 0xc0fba000		2630490	0		=			
ANR	2646767	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646768	Identifier	ao		2630490	0					
ANR	2646769	Identifier	o		2630490	1					
ANR	2646770	PrimaryExpression	0xc0fba000		2630490	1					
ANR	2646771	ElseStatement	else		2630490	0					
ANR	2646772	IfStatement	if ( m & TT_BIT )		2630490	0					
ANR	2646773	Condition	m & TT_BIT	4225:8:88858:88867	2630490	0	True				
ANR	2646774	BitAndExpression	m & TT_BIT		2630490	0		&			
ANR	2646775	Identifier	m		2630490	0					
ANR	2646776	Identifier	TT_BIT		2630490	1					
ANR	2646777	CompoundStatement		2933:20:63011:63011	2630490	1					
ANR	2646778	ExpressionStatement	ao -> o = 0xc0fbb000	4226:5:88877:88895	2630490	0	True				
ANR	2646779	AssignmentExpression	ao -> o = 0xc0fbb000		2630490	0		=			
ANR	2646780	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646781	Identifier	ao		2630490	0					
ANR	2646782	Identifier	o		2630490	1					
ANR	2646783	PrimaryExpression	0xc0fbb000		2630490	1					
ANR	2646784	ElseStatement	else		2630490	0					
ANR	2646785	IfStatement	if ( m & D_BIT )		2630490	0					
ANR	2646786	Condition	m & D_BIT	4228:8:88916:88924	2630490	0	True				
ANR	2646787	BitAndExpression	m & D_BIT		2630490	0		&			
ANR	2646788	Identifier	m		2630490	0					
ANR	2646789	Identifier	D_BIT		2630490	1					
ANR	2646790	CompoundStatement		2936:19:63068:63068	2630490	1					
ANR	2646791	ExpressionStatement	ao -> o = 0xc0fbc000	4229:5:88934:88952	2630490	0	True				
ANR	2646792	AssignmentExpression	ao -> o = 0xc0fbc000		2630490	0		=			
ANR	2646793	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646794	Identifier	ao		2630490	0					
ANR	2646795	Identifier	o		2630490	1					
ANR	2646796	PrimaryExpression	0xc0fbc000		2630490	1					
ANR	2646797	IfStatement	if ( m & X_BIT )		2630490	1					
ANR	2646798	Condition	m & X_BIT	4230:9:88963:88971	2630490	0	True				
ANR	2646799	BitAndExpression	m & X_BIT		2630490	0		&			
ANR	2646800	Identifier	m		2630490	0					
ANR	2646801	Identifier	X_BIT		2630490	1					
ANR	2646802	CompoundStatement		2938:20:63115:63115	2630490	1					
ANR	2646803	ExpressionStatement	ao -> o |= 1 << 12	4231:6:88982:88998	2630490	0	True				
ANR	2646804	AssignmentExpression	ao -> o |= 1 << 12		2630490	0		|=			
ANR	2646805	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646806	Identifier	ao		2630490	0					
ANR	2646807	Identifier	o		2630490	1					
ANR	2646808	ShiftExpression	1 << 12		2630490	1		<<			
ANR	2646809	PrimaryExpression	1		2630490	0					
ANR	2646810	PrimaryExpression	12		2630490	1					
ANR	2646811	ElseStatement	else		2630490	0					
ANR	2646812	CompoundStatement		2941:11:63159:63159	2630490	0					
ANR	2646813	ExpressionStatement	ao -> o = 0xc0fb0000	4234:5:89025:89043	2630490	0	True				
ANR	2646814	AssignmentExpression	ao -> o = 0xc0fb0000		2630490	0		=			
ANR	2646815	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646816	Identifier	ao		2630490	0					
ANR	2646817	Identifier	o		2630490	1					
ANR	2646818	PrimaryExpression	0xc0fb0000		2630490	1					
ANR	2646819	ExpressionStatement	ao -> o |= reg1 << 4	4236:4:89055:89073	2630490	1	True				
ANR	2646820	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2646821	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646822	Identifier	ao		2630490	0					
ANR	2646823	Identifier	o		2630490	1					
ANR	2646824	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2646825	Identifier	reg1		2630490	0					
ANR	2646826	PrimaryExpression	4		2630490	1					
ANR	2646827	ExpressionStatement	ao -> o |= reg2	4237:4:89079:89092	2630490	2	True				
ANR	2646828	AssignmentExpression	ao -> o |= reg2		2630490	0		|=			
ANR	2646829	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646830	Identifier	ao		2630490	0					
ANR	2646831	Identifier	o		2630490	1					
ANR	2646832	Identifier	reg2		2630490	1					
ANR	2646833	ExpressionStatement	ao -> o |= reg3 << 24	4238:4:89098:89117	2630490	3	True				
ANR	2646834	AssignmentExpression	ao -> o |= reg3 << 24		2630490	0		|=			
ANR	2646835	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646836	Identifier	ao		2630490	0					
ANR	2646837	Identifier	o		2630490	1					
ANR	2646838	ShiftExpression	reg3 << 24		2630490	1		<<			
ANR	2646839	Identifier	reg3		2630490	0					
ANR	2646840	PrimaryExpression	24		2630490	1					
ANR	2646841	ExpressionStatement	ao -> o |= reg4 << 8	4239:4:89123:89141	2630490	4	True				
ANR	2646842	AssignmentExpression	ao -> o |= reg4 << 8		2630490	0		|=			
ANR	2646843	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646844	Identifier	ao		2630490	0					
ANR	2646845	Identifier	o		2630490	1					
ANR	2646846	ShiftExpression	reg4 << 8		2630490	1		<<			
ANR	2646847	Identifier	reg4		2630490	0					
ANR	2646848	PrimaryExpression	8		2630490	1					
ANR	2646849	ReturnStatement	return 4 ;	4240:4:89147:89155	2630490	5	True				
ANR	2646850	PrimaryExpression	4		2630490	0					
ANR	2646851	IfStatement	if ( m & BB_BIT )		2630490	6					
ANR	2646852	Condition	m & BB_BIT	4242:7:89169:89178	2630490	0	True				
ANR	2646853	BitAndExpression	m & BB_BIT		2630490	0		&			
ANR	2646854	Identifier	m		2630490	0					
ANR	2646855	Identifier	BB_BIT		2630490	1					
ANR	2646856	CompoundStatement		2950:19:63322:63322	2630490	1					
ANR	2646857	ExpressionStatement	ao -> o = 0x10fb0000	4243:4:89187:89205	2630490	0	True				
ANR	2646858	AssignmentExpression	ao -> o = 0x10fb0000		2630490	0		=			
ANR	2646859	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646860	Identifier	ao		2630490	0					
ANR	2646861	Identifier	o		2630490	1					
ANR	2646862	PrimaryExpression	0x10fb0000		2630490	1					
ANR	2646863	ExpressionStatement	ao -> o |= reg4 << 4	4244:4:89211:89229	2630490	1	True				
ANR	2646864	AssignmentExpression	ao -> o |= reg4 << 4		2630490	0		|=			
ANR	2646865	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646866	Identifier	ao		2630490	0					
ANR	2646867	Identifier	o		2630490	1					
ANR	2646868	ShiftExpression	reg4 << 4		2630490	1		<<			
ANR	2646869	Identifier	reg4		2630490	0					
ANR	2646870	PrimaryExpression	4		2630490	1					
ANR	2646871	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4245:4:89235:89271	2630490	2	True				
ANR	2646872	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2646873	Callee	std_32bit_3reg		2630490	0					
ANR	2646874	Identifier	std_32bit_3reg		2630490	0					
ANR	2646875	ArgumentList	ao		2630490	1					
ANR	2646876	Argument	ao		2630490	0					
ANR	2646877	Identifier	ao		2630490	0					
ANR	2646878	Argument	m		2630490	1					
ANR	2646879	Identifier	m		2630490	0					
ANR	2646880	Argument	false		2630490	2					
ANR	2646881	Identifier	false		2630490	0					
ANR	2646882	IfStatement	if ( m & BT_BIT )		2630490	7					
ANR	2646883	Condition	m & BT_BIT	4247:7:89285:89294	2630490	0	True				
ANR	2646884	BitAndExpression	m & BT_BIT		2630490	0		&			
ANR	2646885	Identifier	m		2630490	0					
ANR	2646886	Identifier	BT_BIT		2630490	1					
ANR	2646887	CompoundStatement		2955:19:63438:63438	2630490	1					
ANR	2646888	ExpressionStatement	ao -> o = 0x10fb1000	4248:4:89303:89321	2630490	0	True				
ANR	2646889	AssignmentExpression	ao -> o = 0x10fb1000		2630490	0		=			
ANR	2646890	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646891	Identifier	ao		2630490	0					
ANR	2646892	Identifier	o		2630490	1					
ANR	2646893	PrimaryExpression	0x10fb1000		2630490	1					
ANR	2646894	ExpressionStatement	ao -> o |= reg4 << 4	4249:4:89327:89345	2630490	1	True				
ANR	2646895	AssignmentExpression	ao -> o |= reg4 << 4		2630490	0		|=			
ANR	2646896	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646897	Identifier	ao		2630490	0					
ANR	2646898	Identifier	o		2630490	1					
ANR	2646899	ShiftExpression	reg4 << 4		2630490	1		<<			
ANR	2646900	Identifier	reg4		2630490	0					
ANR	2646901	PrimaryExpression	4		2630490	1					
ANR	2646902	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4250:4:89351:89387	2630490	2	True				
ANR	2646903	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2646904	Callee	std_32bit_3reg		2630490	0					
ANR	2646905	Identifier	std_32bit_3reg		2630490	0					
ANR	2646906	ArgumentList	ao		2630490	1					
ANR	2646907	Argument	ao		2630490	0					
ANR	2646908	Identifier	ao		2630490	0					
ANR	2646909	Argument	m		2630490	1					
ANR	2646910	Identifier	m		2630490	0					
ANR	2646911	Argument	false		2630490	2					
ANR	2646912	Identifier	false		2630490	0					
ANR	2646913	IfStatement	if ( m & TB_BIT )		2630490	8					
ANR	2646914	Condition	m & TB_BIT	4252:7:89401:89410	2630490	0	True				
ANR	2646915	BitAndExpression	m & TB_BIT		2630490	0		&			
ANR	2646916	Identifier	m		2630490	0					
ANR	2646917	Identifier	TB_BIT		2630490	1					
ANR	2646918	CompoundStatement		2960:19:63554:63554	2630490	1					
ANR	2646919	ExpressionStatement	ao -> o = 0x10fb2000	4253:4:89419:89437	2630490	0	True				
ANR	2646920	AssignmentExpression	ao -> o = 0x10fb2000		2630490	0		=			
ANR	2646921	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646922	Identifier	ao		2630490	0					
ANR	2646923	Identifier	o		2630490	1					
ANR	2646924	PrimaryExpression	0x10fb2000		2630490	1					
ANR	2646925	ExpressionStatement	ao -> o |= reg4 << 4	4254:4:89443:89461	2630490	1	True				
ANR	2646926	AssignmentExpression	ao -> o |= reg4 << 4		2630490	0		|=			
ANR	2646927	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646928	Identifier	ao		2630490	0					
ANR	2646929	Identifier	o		2630490	1					
ANR	2646930	ShiftExpression	reg4 << 4		2630490	1		<<			
ANR	2646931	Identifier	reg4		2630490	0					
ANR	2646932	PrimaryExpression	4		2630490	1					
ANR	2646933	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4255:4:89467:89503	2630490	2	True				
ANR	2646934	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2646935	Callee	std_32bit_3reg		2630490	0					
ANR	2646936	Identifier	std_32bit_3reg		2630490	0					
ANR	2646937	ArgumentList	ao		2630490	1					
ANR	2646938	Argument	ao		2630490	0					
ANR	2646939	Identifier	ao		2630490	0					
ANR	2646940	Argument	m		2630490	1					
ANR	2646941	Identifier	m		2630490	0					
ANR	2646942	Argument	false		2630490	2					
ANR	2646943	Identifier	false		2630490	0					
ANR	2646944	IfStatement	if ( m & TT_BIT )		2630490	9					
ANR	2646945	Condition	m & TT_BIT	4257:7:89517:89526	2630490	0	True				
ANR	2646946	BitAndExpression	m & TT_BIT		2630490	0		&			
ANR	2646947	Identifier	m		2630490	0					
ANR	2646948	Identifier	TT_BIT		2630490	1					
ANR	2646949	CompoundStatement		2965:19:63670:63670	2630490	1					
ANR	2646950	ExpressionStatement	ao -> o = 0x10fb3000	4258:4:89535:89553	2630490	0	True				
ANR	2646951	AssignmentExpression	ao -> o = 0x10fb3000		2630490	0		=			
ANR	2646952	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646953	Identifier	ao		2630490	0					
ANR	2646954	Identifier	o		2630490	1					
ANR	2646955	PrimaryExpression	0x10fb3000		2630490	1					
ANR	2646956	ExpressionStatement	ao -> o |= reg4 << 4	4259:4:89559:89577	2630490	1	True				
ANR	2646957	AssignmentExpression	ao -> o |= reg4 << 4		2630490	0		|=			
ANR	2646958	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646959	Identifier	ao		2630490	0					
ANR	2646960	Identifier	o		2630490	1					
ANR	2646961	ShiftExpression	reg4 << 4		2630490	1		<<			
ANR	2646962	Identifier	reg4		2630490	0					
ANR	2646963	PrimaryExpression	4		2630490	1					
ANR	2646964	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4260:4:89583:89619	2630490	2	True				
ANR	2646965	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2646966	Callee	std_32bit_3reg		2630490	0					
ANR	2646967	Identifier	std_32bit_3reg		2630490	0					
ANR	2646968	ArgumentList	ao		2630490	1					
ANR	2646969	Argument	ao		2630490	0					
ANR	2646970	Identifier	ao		2630490	0					
ANR	2646971	Argument	m		2630490	1					
ANR	2646972	Identifier	m		2630490	0					
ANR	2646973	Argument	false		2630490	2					
ANR	2646974	Identifier	false		2630490	0					
ANR	2646975	IfStatement	if ( m & D_BIT )		2630490	10					
ANR	2646976	Condition	m & D_BIT	4262:7:89633:89641	2630490	0	True				
ANR	2646977	BitAndExpression	m & D_BIT		2630490	0		&			
ANR	2646978	Identifier	m		2630490	0					
ANR	2646979	Identifier	D_BIT		2630490	1					
ANR	2646980	CompoundStatement		2970:18:63785:63785	2630490	1					
ANR	2646981	ExpressionStatement	ao -> o = 0x20fb0000	4263:4:89650:89668	2630490	0	True				
ANR	2646982	AssignmentExpression	ao -> o = 0x20fb0000		2630490	0		=			
ANR	2646983	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646984	Identifier	ao		2630490	0					
ANR	2646985	Identifier	o		2630490	1					
ANR	2646986	PrimaryExpression	0x20fb0000		2630490	1					
ANR	2646987	IfStatement	if ( m & X_BIT )		2630490	1					
ANR	2646988	Condition	m & X_BIT	4264:8:89678:89686	2630490	0	True				
ANR	2646989	BitAndExpression	m & X_BIT		2630490	0		&			
ANR	2646990	Identifier	m		2630490	0					
ANR	2646991	Identifier	X_BIT		2630490	1					
ANR	2646992	CompoundStatement		2972:19:63830:63830	2630490	1					
ANR	2646993	ExpressionStatement	ao -> o |= 1 << 12	4265:5:89696:89712	2630490	0	True				
ANR	2646994	AssignmentExpression	ao -> o |= 1 << 12		2630490	0		|=			
ANR	2646995	PtrMemberAccess	ao -> o		2630490	0					
ANR	2646996	Identifier	ao		2630490	0					
ANR	2646997	Identifier	o		2630490	1					
ANR	2646998	ShiftExpression	1 << 12		2630490	1		<<			
ANR	2646999	PrimaryExpression	1		2630490	0					
ANR	2647000	PrimaryExpression	12		2630490	1					
ANR	2647001	ExpressionStatement	ao -> o |= reg4 << 4	4267:4:89724:89742	2630490	2	True				
ANR	2647002	AssignmentExpression	ao -> o |= reg4 << 4		2630490	0		|=			
ANR	2647003	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647004	Identifier	ao		2630490	0					
ANR	2647005	Identifier	o		2630490	1					
ANR	2647006	ShiftExpression	reg4 << 4		2630490	1		<<			
ANR	2647007	Identifier	reg4		2630490	0					
ANR	2647008	PrimaryExpression	4		2630490	1					
ANR	2647009	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4268:4:89748:89784	2630490	3	True				
ANR	2647010	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2647011	Callee	std_32bit_3reg		2630490	0					
ANR	2647012	Identifier	std_32bit_3reg		2630490	0					
ANR	2647013	ArgumentList	ao		2630490	1					
ANR	2647014	Argument	ao		2630490	0					
ANR	2647015	Identifier	ao		2630490	0					
ANR	2647016	Argument	m		2630490	1					
ANR	2647017	Identifier	m		2630490	0					
ANR	2647018	Argument	false		2630490	2					
ANR	2647019	Identifier	false		2630490	0					
ANR	2647020	IfStatement	if ( m & WB_BIT )		2630490	11					
ANR	2647021	Condition	m & WB_BIT	4270:7:89798:89807	2630490	0	True				
ANR	2647022	BitAndExpression	m & WB_BIT		2630490	0		&			
ANR	2647023	Identifier	m		2630490	0					
ANR	2647024	Identifier	WB_BIT		2630490	1					
ANR	2647025	CompoundStatement		2978:19:63951:63951	2630490	1					
ANR	2647026	ExpressionStatement	ao -> o = 0x30fb0000	4271:4:89816:89834	2630490	0	True				
ANR	2647027	AssignmentExpression	ao -> o = 0x30fb0000		2630490	0		=			
ANR	2647028	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647029	Identifier	ao		2630490	0					
ANR	2647030	Identifier	o		2630490	1					
ANR	2647031	PrimaryExpression	0x30fb0000		2630490	1					
ANR	2647032	ExpressionStatement	ao -> o |= reg4 << 4	4272:4:89840:89858	2630490	1	True				
ANR	2647033	AssignmentExpression	ao -> o |= reg4 << 4		2630490	0		|=			
ANR	2647034	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647035	Identifier	ao		2630490	0					
ANR	2647036	Identifier	o		2630490	1					
ANR	2647037	ShiftExpression	reg4 << 4		2630490	1		<<			
ANR	2647038	Identifier	reg4		2630490	0					
ANR	2647039	PrimaryExpression	4		2630490	1					
ANR	2647040	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4273:4:89864:89900	2630490	2	True				
ANR	2647041	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2647042	Callee	std_32bit_3reg		2630490	0					
ANR	2647043	Identifier	std_32bit_3reg		2630490	0					
ANR	2647044	ArgumentList	ao		2630490	1					
ANR	2647045	Argument	ao		2630490	0					
ANR	2647046	Identifier	ao		2630490	0					
ANR	2647047	Argument	m		2630490	1					
ANR	2647048	Identifier	m		2630490	0					
ANR	2647049	Argument	false		2630490	2					
ANR	2647050	Identifier	false		2630490	0					
ANR	2647051	IfStatement	if ( m & WT_BIT )		2630490	12					
ANR	2647052	Condition	m & WT_BIT	4275:7:89914:89923	2630490	0	True				
ANR	2647053	BitAndExpression	m & WT_BIT		2630490	0		&			
ANR	2647054	Identifier	m		2630490	0					
ANR	2647055	Identifier	WT_BIT		2630490	1					
ANR	2647056	CompoundStatement		2983:19:64067:64067	2630490	1					
ANR	2647057	ExpressionStatement	ao -> o = 0x30fb1000	4276:4:89932:89950	2630490	0	True				
ANR	2647058	AssignmentExpression	ao -> o = 0x30fb1000		2630490	0		=			
ANR	2647059	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647060	Identifier	ao		2630490	0					
ANR	2647061	Identifier	o		2630490	1					
ANR	2647062	PrimaryExpression	0x30fb1000		2630490	1					
ANR	2647063	ExpressionStatement	ao -> o |= reg4 << 4	4277:4:89956:89974	2630490	1	True				
ANR	2647064	AssignmentExpression	ao -> o |= reg4 << 4		2630490	0		|=			
ANR	2647065	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647066	Identifier	ao		2630490	0					
ANR	2647067	Identifier	o		2630490	1					
ANR	2647068	ShiftExpression	reg4 << 4		2630490	1		<<			
ANR	2647069	Identifier	reg4		2630490	0					
ANR	2647070	PrimaryExpression	4		2630490	1					
ANR	2647071	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4278:4:89980:90016	2630490	2	True				
ANR	2647072	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2647073	Callee	std_32bit_3reg		2630490	0					
ANR	2647074	Identifier	std_32bit_3reg		2630490	0					
ANR	2647075	ArgumentList	ao		2630490	1					
ANR	2647076	Argument	ao		2630490	0					
ANR	2647077	Identifier	ao		2630490	0					
ANR	2647078	Argument	m		2630490	1					
ANR	2647079	Identifier	m		2630490	0					
ANR	2647080	Argument	false		2630490	2					
ANR	2647081	Identifier	false		2630490	0					
ANR	2647082	ReturnStatement	return - 1 ;	4280:3:90026:90035	2630490	13	True				
ANR	2647083	UnaryOperationExpression	- 1		2630490	0					
ANR	2647084	UnaryOperator	-		2630490	0					
ANR	2647085	PrimaryExpression	1		2630490	1					
ANR	2647086	BreakStatement	break ;	4282:3:90052:90057	2630490	2	True				
ANR	2647087	Label	default :	4283:2:90061:90068	2630490	3	True				
ANR	2647088	Identifier	default		2630490	0					
ANR	2647089	ReturnStatement	return - 1 ;	4284:3:90073:90082	2630490	4	True				
ANR	2647090	UnaryOperationExpression	- 1		2630490	0					
ANR	2647091	UnaryOperator	-		2630490	0					
ANR	2647092	PrimaryExpression	1		2630490	1					
ANR	2647093	ElseStatement	else		2630490	0					
ANR	2647094	IfStatement	"if ( ( m = opmask ( ao -> op , ""smlsd"" , X_BIT ) ) )"		2630490	0					
ANR	2647095	Condition	"m = opmask ( ao -> op , ""smlsd"" , X_BIT )"	4287:5:90101:90137	2630490	0	True				
ANR	2647096	AssignmentExpression	"m = opmask ( ao -> op , ""smlsd"" , X_BIT )"		2630490	0		=			
ANR	2647097	Identifier	m		2630490	0					
ANR	2647098	CallExpression	"opmask ( ao -> op , ""smlsd"" , X_BIT )"		2630490	1					
ANR	2647099	Callee	opmask		2630490	0					
ANR	2647100	Identifier	opmask		2630490	0					
ANR	2647101	ArgumentList	ao -> op		2630490	1					
ANR	2647102	Argument	ao -> op		2630490	0					
ANR	2647103	PtrMemberAccess	ao -> op		2630490	0					
ANR	2647104	Identifier	ao		2630490	0					
ANR	2647105	Identifier	op		2630490	1					
ANR	2647106	Argument	"""smlsd"""		2630490	1					
ANR	2647107	PrimaryExpression	"""smlsd"""		2630490	0					
ANR	2647108	Argument	X_BIT		2630490	2					
ANR	2647109	Identifier	X_BIT		2630490	0					
ANR	2647110	CompoundStatement		2996:2:64285:64319	2630490	1					
ANR	2647111	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4288:2:90144:90178	2630490	0	True				
ANR	2647112	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2647113	IdentifierDeclType	ut64		2630490	0					
ANR	2647114	Identifier	argt		2630490	1					
ANR	2647115	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2647116	Identifier	argt		2630490	0					
ANR	2647117	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2647118	Callee	thumb_selector		2630490	0					
ANR	2647119	Identifier	thumb_selector		2630490	0					
ANR	2647120	ArgumentList	ao -> a		2630490	1					
ANR	2647121	Argument	ao -> a		2630490	0					
ANR	2647122	PtrMemberAccess	ao -> a		2630490	0					
ANR	2647123	Identifier	ao		2630490	0					
ANR	2647124	Identifier	a		2630490	1					
ANR	2647125	SwitchStatement	switch ( argt )		2630490	1					
ANR	2647126	Condition	argt	4289:10:90190:90193	2630490	0	True				
ANR	2647127	Identifier	argt		2630490	0					
ANR	2647128	CompoundStatement		2997:16:64337:64337	2630490	1					
ANR	2647129	Label	case THUMB_REG_REG_REG_REG :	4290:2:90200:90226	2630490	0	True				
ANR	2647130	Identifier	THUMB_REG_REG_REG_REG		2630490	0					
ANR	2647131	CompoundStatement		2999:3:64374:64402	2630490	1					
ANR	2647132	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	4291:3:90233:90261	2630490	0	True				
ANR	2647133	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		2630490	0					
ANR	2647134	IdentifierDeclType	ut8		2630490	0					
ANR	2647135	Identifier	reg4		2630490	1					
ANR	2647136	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2647137	Identifier	reg4		2630490	0					
ANR	2647138	CallExpression	getreg ( ao -> a [ 3 ] )		2630490	1					
ANR	2647139	Callee	getreg		2630490	0					
ANR	2647140	Identifier	getreg		2630490	0					
ANR	2647141	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2647142	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2647143	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2647144	PtrMemberAccess	ao -> a		2630490	0					
ANR	2647145	Identifier	ao		2630490	0					
ANR	2647146	Identifier	a		2630490	1					
ANR	2647147	PrimaryExpression	3		2630490	1					
ANR	2647148	IfStatement	if ( reg4 > 15 )		2630490	1					
ANR	2647149	Condition	reg4 > 15	4293:7:90271:90279	2630490	0	True				
ANR	2647150	RelationalExpression	reg4 > 15		2630490	0		>			
ANR	2647151	Identifier	reg4		2630490	0					
ANR	2647152	PrimaryExpression	15		2630490	1					
ANR	2647153	CompoundStatement		3001:18:64423:64423	2630490	1					
ANR	2647154	ReturnStatement	return - 1 ;	4294:4:90288:90297	2630490	0	True				
ANR	2647155	UnaryOperationExpression	- 1		2630490	0					
ANR	2647156	UnaryOperator	-		2630490	0					
ANR	2647157	PrimaryExpression	1		2630490	1					
ANR	2647158	ExpressionStatement	ao -> o = 0x40fb0000	4296:3:90307:90325	2630490	2	True				
ANR	2647159	AssignmentExpression	ao -> o = 0x40fb0000		2630490	0		=			
ANR	2647160	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647161	Identifier	ao		2630490	0					
ANR	2647162	Identifier	o		2630490	1					
ANR	2647163	PrimaryExpression	0x40fb0000		2630490	1					
ANR	2647164	IfStatement	if ( m & X_BIT )		2630490	3					
ANR	2647165	Condition	m & X_BIT	4297:7:90334:90342	2630490	0	True				
ANR	2647166	BitAndExpression	m & X_BIT		2630490	0		&			
ANR	2647167	Identifier	m		2630490	0					
ANR	2647168	Identifier	X_BIT		2630490	1					
ANR	2647169	CompoundStatement		3005:18:64486:64486	2630490	1					
ANR	2647170	ExpressionStatement	ao -> o |= 1 << 12	4298:4:90351:90367	2630490	0	True				
ANR	2647171	AssignmentExpression	ao -> o |= 1 << 12		2630490	0		|=			
ANR	2647172	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647173	Identifier	ao		2630490	0					
ANR	2647174	Identifier	o		2630490	1					
ANR	2647175	ShiftExpression	1 << 12		2630490	1		<<			
ANR	2647176	PrimaryExpression	1		2630490	0					
ANR	2647177	PrimaryExpression	12		2630490	1					
ANR	2647178	ExpressionStatement	ao -> o |= reg4 << 4	4300:3:90377:90395	2630490	4	True				
ANR	2647179	AssignmentExpression	ao -> o |= reg4 << 4		2630490	0		|=			
ANR	2647180	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647181	Identifier	ao		2630490	0					
ANR	2647182	Identifier	o		2630490	1					
ANR	2647183	ShiftExpression	reg4 << 4		2630490	1		<<			
ANR	2647184	Identifier	reg4		2630490	0					
ANR	2647185	PrimaryExpression	4		2630490	1					
ANR	2647186	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4301:3:90400:90436	2630490	5	True				
ANR	2647187	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2647188	Callee	std_32bit_3reg		2630490	0					
ANR	2647189	Identifier	std_32bit_3reg		2630490	0					
ANR	2647190	ArgumentList	ao		2630490	1					
ANR	2647191	Argument	ao		2630490	0					
ANR	2647192	Identifier	ao		2630490	0					
ANR	2647193	Argument	m		2630490	1					
ANR	2647194	Identifier	m		2630490	0					
ANR	2647195	Argument	false		2630490	2					
ANR	2647196	Identifier	false		2630490	0					
ANR	2647197	BreakStatement	break ;	4303:3:90453:90458	2630490	2	True				
ANR	2647198	Label	default :	4304:2:90462:90469	2630490	3	True				
ANR	2647199	Identifier	default		2630490	0					
ANR	2647200	ReturnStatement	return - 1 ;	4305:3:90474:90483	2630490	4	True				
ANR	2647201	UnaryOperationExpression	- 1		2630490	0					
ANR	2647202	UnaryOperator	-		2630490	0					
ANR	2647203	PrimaryExpression	1		2630490	1					
ANR	2647204	ElseStatement	else		2630490	0					
ANR	2647205	IfStatement	"if ( ( m = opmask ( ao -> op , ""smlsld"" , X_BIT ) ) )"		2630490	0					
ANR	2647206	Condition	"m = opmask ( ao -> op , ""smlsld"" , X_BIT )"	4308:5:90502:90539	2630490	0	True				
ANR	2647207	AssignmentExpression	"m = opmask ( ao -> op , ""smlsld"" , X_BIT )"		2630490	0		=			
ANR	2647208	Identifier	m		2630490	0					
ANR	2647209	CallExpression	"opmask ( ao -> op , ""smlsld"" , X_BIT )"		2630490	1					
ANR	2647210	Callee	opmask		2630490	0					
ANR	2647211	Identifier	opmask		2630490	0					
ANR	2647212	ArgumentList	ao -> op		2630490	1					
ANR	2647213	Argument	ao -> op		2630490	0					
ANR	2647214	PtrMemberAccess	ao -> op		2630490	0					
ANR	2647215	Identifier	ao		2630490	0					
ANR	2647216	Identifier	op		2630490	1					
ANR	2647217	Argument	"""smlsld"""		2630490	1					
ANR	2647218	PrimaryExpression	"""smlsld"""		2630490	0					
ANR	2647219	Argument	X_BIT		2630490	2					
ANR	2647220	Identifier	X_BIT		2630490	0					
ANR	2647221	CompoundStatement		3017:2:64687:64721	2630490	1					
ANR	2647222	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4309:2:90546:90580	2630490	0	True				
ANR	2647223	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2647224	IdentifierDeclType	ut64		2630490	0					
ANR	2647225	Identifier	argt		2630490	1					
ANR	2647226	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2647227	Identifier	argt		2630490	0					
ANR	2647228	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2647229	Callee	thumb_selector		2630490	0					
ANR	2647230	Identifier	thumb_selector		2630490	0					
ANR	2647231	ArgumentList	ao -> a		2630490	1					
ANR	2647232	Argument	ao -> a		2630490	0					
ANR	2647233	PtrMemberAccess	ao -> a		2630490	0					
ANR	2647234	Identifier	ao		2630490	0					
ANR	2647235	Identifier	a		2630490	1					
ANR	2647236	SwitchStatement	switch ( argt )		2630490	1					
ANR	2647237	Condition	argt	4310:10:90592:90595	2630490	0	True				
ANR	2647238	Identifier	argt		2630490	0					
ANR	2647239	CompoundStatement		3018:16:64739:64739	2630490	1					
ANR	2647240	Label	case THUMB_REG_REG_REG_REG :	4311:2:90602:90628	2630490	0	True				
ANR	2647241	Identifier	THUMB_REG_REG_REG_REG		2630490	0					
ANR	2647242	CompoundStatement		3023:3:64875:64903	2630490	1					
ANR	2647243	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4312:3:90635:90663	2630490	0	True				
ANR	2647244	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2647245	IdentifierDeclType	ut8		2630490	0					
ANR	2647246	Identifier	reg1		2630490	1					
ANR	2647247	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2647248	Identifier	reg1		2630490	0					
ANR	2647249	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2647250	Callee	getreg		2630490	0					
ANR	2647251	Identifier	getreg		2630490	0					
ANR	2647252	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2647253	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2647254	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2647255	PtrMemberAccess	ao -> a		2630490	0					
ANR	2647256	Identifier	ao		2630490	0					
ANR	2647257	Identifier	a		2630490	1					
ANR	2647258	PrimaryExpression	0		2630490	1					
ANR	2647259	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	4313:3:90668:90696	2630490	1	True				
ANR	2647260	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2647261	IdentifierDeclType	ut8		2630490	0					
ANR	2647262	Identifier	reg2		2630490	1					
ANR	2647263	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2647264	Identifier	reg2		2630490	0					
ANR	2647265	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2647266	Callee	getreg		2630490	0					
ANR	2647267	Identifier	getreg		2630490	0					
ANR	2647268	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2647269	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2647270	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2647271	PtrMemberAccess	ao -> a		2630490	0					
ANR	2647272	Identifier	ao		2630490	0					
ANR	2647273	Identifier	a		2630490	1					
ANR	2647274	PrimaryExpression	1		2630490	1					
ANR	2647275	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	4314:3:90701:90729	2630490	2	True				
ANR	2647276	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2647277	IdentifierDeclType	ut8		2630490	0					
ANR	2647278	Identifier	reg3		2630490	1					
ANR	2647279	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2647280	Identifier	reg3		2630490	0					
ANR	2647281	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2647282	Callee	getreg		2630490	0					
ANR	2647283	Identifier	getreg		2630490	0					
ANR	2647284	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2647285	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2647286	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2647287	PtrMemberAccess	ao -> a		2630490	0					
ANR	2647288	Identifier	ao		2630490	0					
ANR	2647289	Identifier	a		2630490	1					
ANR	2647290	PrimaryExpression	2		2630490	1					
ANR	2647291	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	4315:3:90734:90762	2630490	3	True				
ANR	2647292	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		2630490	0					
ANR	2647293	IdentifierDeclType	ut8		2630490	0					
ANR	2647294	Identifier	reg4		2630490	1					
ANR	2647295	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2647296	Identifier	reg4		2630490	0					
ANR	2647297	CallExpression	getreg ( ao -> a [ 3 ] )		2630490	1					
ANR	2647298	Callee	getreg		2630490	0					
ANR	2647299	Identifier	getreg		2630490	0					
ANR	2647300	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2647301	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2647302	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2647303	PtrMemberAccess	ao -> a		2630490	0					
ANR	2647304	Identifier	ao		2630490	0					
ANR	2647305	Identifier	a		2630490	1					
ANR	2647306	PrimaryExpression	3		2630490	1					
ANR	2647307	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT ) )		2630490	4					
ANR	2647308	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT )	4317:7:90772:90845	2630490	0	True				
ANR	2647309	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT )		2630490	0		||			
ANR	2647310	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2647311	Identifier	reg1		2630490	0					
ANR	2647312	PrimaryExpression	15		2630490	1					
ANR	2647313	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT )		2630490	1		||			
ANR	2647314	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2647315	Identifier	reg2		2630490	0					
ANR	2647316	PrimaryExpression	15		2630490	1					
ANR	2647317	OrExpression	( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT )		2630490	1		||			
ANR	2647318	RelationalExpression	reg3 > 15		2630490	0		>			
ANR	2647319	Identifier	reg3		2630490	0					
ANR	2647320	PrimaryExpression	15		2630490	1					
ANR	2647321	OrExpression	( reg4 > 15 ) || ( m & DOTN_BIT )		2630490	1		||			
ANR	2647322	RelationalExpression	reg4 > 15		2630490	0		>			
ANR	2647323	Identifier	reg4		2630490	0					
ANR	2647324	PrimaryExpression	15		2630490	1					
ANR	2647325	BitAndExpression	m & DOTN_BIT		2630490	1		&			
ANR	2647326	Identifier	m		2630490	0					
ANR	2647327	Identifier	DOTN_BIT		2630490	1					
ANR	2647328	CompoundStatement		3025:83:64989:64989	2630490	1					
ANR	2647329	ReturnStatement	return - 1 ;	4318:4:90854:90863	2630490	0	True				
ANR	2647330	UnaryOperationExpression	- 1		2630490	0					
ANR	2647331	UnaryOperator	-		2630490	0					
ANR	2647332	PrimaryExpression	1		2630490	1					
ANR	2647333	ExpressionStatement	ao -> o = 0xd0fbc000	4320:3:90873:90891	2630490	5	True				
ANR	2647334	AssignmentExpression	ao -> o = 0xd0fbc000		2630490	0		=			
ANR	2647335	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647336	Identifier	ao		2630490	0					
ANR	2647337	Identifier	o		2630490	1					
ANR	2647338	PrimaryExpression	0xd0fbc000		2630490	1					
ANR	2647339	IfStatement	if ( m & X_BIT )		2630490	6					
ANR	2647340	Condition	m & X_BIT	4322:7:90901:90909	2630490	0	True				
ANR	2647341	BitAndExpression	m & X_BIT		2630490	0		&			
ANR	2647342	Identifier	m		2630490	0					
ANR	2647343	Identifier	X_BIT		2630490	1					
ANR	2647344	CompoundStatement		3030:18:65053:65053	2630490	1					
ANR	2647345	ExpressionStatement	ao -> o |= 1 << 12	4323:4:90918:90934	2630490	0	True				
ANR	2647346	AssignmentExpression	ao -> o |= 1 << 12		2630490	0		|=			
ANR	2647347	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647348	Identifier	ao		2630490	0					
ANR	2647349	Identifier	o		2630490	1					
ANR	2647350	ShiftExpression	1 << 12		2630490	1		<<			
ANR	2647351	PrimaryExpression	1		2630490	0					
ANR	2647352	PrimaryExpression	12		2630490	1					
ANR	2647353	ExpressionStatement	ao -> o |= reg1 << 4	4326:3:90945:90963	2630490	7	True				
ANR	2647354	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2647355	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647356	Identifier	ao		2630490	0					
ANR	2647357	Identifier	o		2630490	1					
ANR	2647358	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2647359	Identifier	reg1		2630490	0					
ANR	2647360	PrimaryExpression	4		2630490	1					
ANR	2647361	ExpressionStatement	ao -> o |= reg2	4327:3:90968:90981	2630490	8	True				
ANR	2647362	AssignmentExpression	ao -> o |= reg2		2630490	0		|=			
ANR	2647363	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647364	Identifier	ao		2630490	0					
ANR	2647365	Identifier	o		2630490	1					
ANR	2647366	Identifier	reg2		2630490	1					
ANR	2647367	ExpressionStatement	ao -> o |= reg3 << 24	4328:3:90986:91005	2630490	9	True				
ANR	2647368	AssignmentExpression	ao -> o |= reg3 << 24		2630490	0		|=			
ANR	2647369	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647370	Identifier	ao		2630490	0					
ANR	2647371	Identifier	o		2630490	1					
ANR	2647372	ShiftExpression	reg3 << 24		2630490	1		<<			
ANR	2647373	Identifier	reg3		2630490	0					
ANR	2647374	PrimaryExpression	24		2630490	1					
ANR	2647375	ExpressionStatement	ao -> o |= reg4 << 8	4329:3:91010:91028	2630490	10	True				
ANR	2647376	AssignmentExpression	ao -> o |= reg4 << 8		2630490	0		|=			
ANR	2647377	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647378	Identifier	ao		2630490	0					
ANR	2647379	Identifier	o		2630490	1					
ANR	2647380	ShiftExpression	reg4 << 8		2630490	1		<<			
ANR	2647381	Identifier	reg4		2630490	0					
ANR	2647382	PrimaryExpression	8		2630490	1					
ANR	2647383	ReturnStatement	return 4 ;	4330:3:91033:91041	2630490	11	True				
ANR	2647384	PrimaryExpression	4		2630490	0					
ANR	2647385	BreakStatement	break ;	4332:3:91058:91063	2630490	2	True				
ANR	2647386	Label	default :	4333:2:91067:91074	2630490	3	True				
ANR	2647387	Identifier	default		2630490	0					
ANR	2647388	ReturnStatement	return - 1 ;	4334:3:91079:91088	2630490	4	True				
ANR	2647389	UnaryOperationExpression	- 1		2630490	0					
ANR	2647390	UnaryOperator	-		2630490	0					
ANR	2647391	PrimaryExpression	1		2630490	1					
ANR	2647392	ElseStatement	else		2630490	0					
ANR	2647393	IfStatement	"if ( ( m = opmask ( ao -> op , ""smmla"" , R_BIT ) ) )"		2630490	0					
ANR	2647394	Condition	"m = opmask ( ao -> op , ""smmla"" , R_BIT )"	4337:5:91107:91143	2630490	0	True				
ANR	2647395	AssignmentExpression	"m = opmask ( ao -> op , ""smmla"" , R_BIT )"		2630490	0		=			
ANR	2647396	Identifier	m		2630490	0					
ANR	2647397	CallExpression	"opmask ( ao -> op , ""smmla"" , R_BIT )"		2630490	1					
ANR	2647398	Callee	opmask		2630490	0					
ANR	2647399	Identifier	opmask		2630490	0					
ANR	2647400	ArgumentList	ao -> op		2630490	1					
ANR	2647401	Argument	ao -> op		2630490	0					
ANR	2647402	PtrMemberAccess	ao -> op		2630490	0					
ANR	2647403	Identifier	ao		2630490	0					
ANR	2647404	Identifier	op		2630490	1					
ANR	2647405	Argument	"""smmla"""		2630490	1					
ANR	2647406	PrimaryExpression	"""smmla"""		2630490	0					
ANR	2647407	Argument	R_BIT		2630490	2					
ANR	2647408	Identifier	R_BIT		2630490	0					
ANR	2647409	CompoundStatement		3046:2:65291:65325	2630490	1					
ANR	2647410	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4338:2:91150:91184	2630490	0	True				
ANR	2647411	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2647412	IdentifierDeclType	ut64		2630490	0					
ANR	2647413	Identifier	argt		2630490	1					
ANR	2647414	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2647415	Identifier	argt		2630490	0					
ANR	2647416	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2647417	Callee	thumb_selector		2630490	0					
ANR	2647418	Identifier	thumb_selector		2630490	0					
ANR	2647419	ArgumentList	ao -> a		2630490	1					
ANR	2647420	Argument	ao -> a		2630490	0					
ANR	2647421	PtrMemberAccess	ao -> a		2630490	0					
ANR	2647422	Identifier	ao		2630490	0					
ANR	2647423	Identifier	a		2630490	1					
ANR	2647424	SwitchStatement	switch ( argt )		2630490	1					
ANR	2647425	Condition	argt	4339:10:91196:91199	2630490	0	True				
ANR	2647426	Identifier	argt		2630490	0					
ANR	2647427	CompoundStatement		3047:16:65343:65343	2630490	1					
ANR	2647428	Label	case THUMB_REG_REG_REG_REG :	4340:2:91206:91232	2630490	0	True				
ANR	2647429	Identifier	THUMB_REG_REG_REG_REG		2630490	0					
ANR	2647430	CompoundStatement		3049:3:65380:65408	2630490	1					
ANR	2647431	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	4341:3:91239:91267	2630490	0	True				
ANR	2647432	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		2630490	0					
ANR	2647433	IdentifierDeclType	ut8		2630490	0					
ANR	2647434	Identifier	reg4		2630490	1					
ANR	2647435	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2647436	Identifier	reg4		2630490	0					
ANR	2647437	CallExpression	getreg ( ao -> a [ 3 ] )		2630490	1					
ANR	2647438	Callee	getreg		2630490	0					
ANR	2647439	Identifier	getreg		2630490	0					
ANR	2647440	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2647441	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2647442	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2647443	PtrMemberAccess	ao -> a		2630490	0					
ANR	2647444	Identifier	ao		2630490	0					
ANR	2647445	Identifier	a		2630490	1					
ANR	2647446	PrimaryExpression	3		2630490	1					
ANR	2647447	IfStatement	if ( reg4 > 15 )		2630490	1					
ANR	2647448	Condition	reg4 > 15	4343:7:91277:91285	2630490	0	True				
ANR	2647449	RelationalExpression	reg4 > 15		2630490	0		>			
ANR	2647450	Identifier	reg4		2630490	0					
ANR	2647451	PrimaryExpression	15		2630490	1					
ANR	2647452	CompoundStatement		3051:18:65429:65429	2630490	1					
ANR	2647453	ReturnStatement	return - 1 ;	4344:4:91294:91303	2630490	0	True				
ANR	2647454	UnaryOperationExpression	- 1		2630490	0					
ANR	2647455	UnaryOperator	-		2630490	0					
ANR	2647456	PrimaryExpression	1		2630490	1					
ANR	2647457	ExpressionStatement	ao -> o = 0x50fb0000	4346:3:91313:91331	2630490	2	True				
ANR	2647458	AssignmentExpression	ao -> o = 0x50fb0000		2630490	0		=			
ANR	2647459	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647460	Identifier	ao		2630490	0					
ANR	2647461	Identifier	o		2630490	1					
ANR	2647462	PrimaryExpression	0x50fb0000		2630490	1					
ANR	2647463	IfStatement	if ( m & R_BIT )		2630490	3					
ANR	2647464	Condition	m & R_BIT	4347:7:91340:91348	2630490	0	True				
ANR	2647465	BitAndExpression	m & R_BIT		2630490	0		&			
ANR	2647466	Identifier	m		2630490	0					
ANR	2647467	Identifier	R_BIT		2630490	1					
ANR	2647468	CompoundStatement		3055:18:65492:65492	2630490	1					
ANR	2647469	ExpressionStatement	ao -> o |= 1 << 12	4348:4:91357:91373	2630490	0	True				
ANR	2647470	AssignmentExpression	ao -> o |= 1 << 12		2630490	0		|=			
ANR	2647471	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647472	Identifier	ao		2630490	0					
ANR	2647473	Identifier	o		2630490	1					
ANR	2647474	ShiftExpression	1 << 12		2630490	1		<<			
ANR	2647475	PrimaryExpression	1		2630490	0					
ANR	2647476	PrimaryExpression	12		2630490	1					
ANR	2647477	ExpressionStatement	ao -> o |= reg4 << 4	4350:3:91383:91401	2630490	4	True				
ANR	2647478	AssignmentExpression	ao -> o |= reg4 << 4		2630490	0		|=			
ANR	2647479	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647480	Identifier	ao		2630490	0					
ANR	2647481	Identifier	o		2630490	1					
ANR	2647482	ShiftExpression	reg4 << 4		2630490	1		<<			
ANR	2647483	Identifier	reg4		2630490	0					
ANR	2647484	PrimaryExpression	4		2630490	1					
ANR	2647485	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4351:3:91406:91442	2630490	5	True				
ANR	2647486	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2647487	Callee	std_32bit_3reg		2630490	0					
ANR	2647488	Identifier	std_32bit_3reg		2630490	0					
ANR	2647489	ArgumentList	ao		2630490	1					
ANR	2647490	Argument	ao		2630490	0					
ANR	2647491	Identifier	ao		2630490	0					
ANR	2647492	Argument	m		2630490	1					
ANR	2647493	Identifier	m		2630490	0					
ANR	2647494	Argument	false		2630490	2					
ANR	2647495	Identifier	false		2630490	0					
ANR	2647496	BreakStatement	break ;	4353:3:91459:91464	2630490	2	True				
ANR	2647497	Label	default :	4354:2:91468:91475	2630490	3	True				
ANR	2647498	Identifier	default		2630490	0					
ANR	2647499	ReturnStatement	return - 1 ;	4355:3:91480:91489	2630490	4	True				
ANR	2647500	UnaryOperationExpression	- 1		2630490	0					
ANR	2647501	UnaryOperator	-		2630490	0					
ANR	2647502	PrimaryExpression	1		2630490	1					
ANR	2647503	ElseStatement	else		2630490	0					
ANR	2647504	IfStatement	"if ( ( m = opmask ( ao -> op , ""smmls"" , R_BIT ) ) )"		2630490	0					
ANR	2647505	Condition	"m = opmask ( ao -> op , ""smmls"" , R_BIT )"	4358:5:91508:91544	2630490	0	True				
ANR	2647506	AssignmentExpression	"m = opmask ( ao -> op , ""smmls"" , R_BIT )"		2630490	0		=			
ANR	2647507	Identifier	m		2630490	0					
ANR	2647508	CallExpression	"opmask ( ao -> op , ""smmls"" , R_BIT )"		2630490	1					
ANR	2647509	Callee	opmask		2630490	0					
ANR	2647510	Identifier	opmask		2630490	0					
ANR	2647511	ArgumentList	ao -> op		2630490	1					
ANR	2647512	Argument	ao -> op		2630490	0					
ANR	2647513	PtrMemberAccess	ao -> op		2630490	0					
ANR	2647514	Identifier	ao		2630490	0					
ANR	2647515	Identifier	op		2630490	1					
ANR	2647516	Argument	"""smmls"""		2630490	1					
ANR	2647517	PrimaryExpression	"""smmls"""		2630490	0					
ANR	2647518	Argument	R_BIT		2630490	2					
ANR	2647519	Identifier	R_BIT		2630490	0					
ANR	2647520	CompoundStatement		3067:2:65692:65726	2630490	1					
ANR	2647521	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4359:2:91551:91585	2630490	0	True				
ANR	2647522	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2647523	IdentifierDeclType	ut64		2630490	0					
ANR	2647524	Identifier	argt		2630490	1					
ANR	2647525	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2647526	Identifier	argt		2630490	0					
ANR	2647527	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2647528	Callee	thumb_selector		2630490	0					
ANR	2647529	Identifier	thumb_selector		2630490	0					
ANR	2647530	ArgumentList	ao -> a		2630490	1					
ANR	2647531	Argument	ao -> a		2630490	0					
ANR	2647532	PtrMemberAccess	ao -> a		2630490	0					
ANR	2647533	Identifier	ao		2630490	0					
ANR	2647534	Identifier	a		2630490	1					
ANR	2647535	SwitchStatement	switch ( argt )		2630490	1					
ANR	2647536	Condition	argt	4360:10:91597:91600	2630490	0	True				
ANR	2647537	Identifier	argt		2630490	0					
ANR	2647538	CompoundStatement		3068:16:65744:65744	2630490	1					
ANR	2647539	Label	case THUMB_REG_REG_REG_REG :	4361:2:91607:91633	2630490	0	True				
ANR	2647540	Identifier	THUMB_REG_REG_REG_REG		2630490	0					
ANR	2647541	CompoundStatement		3070:3:65781:65809	2630490	1					
ANR	2647542	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	4362:3:91640:91668	2630490	0	True				
ANR	2647543	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		2630490	0					
ANR	2647544	IdentifierDeclType	ut8		2630490	0					
ANR	2647545	Identifier	reg4		2630490	1					
ANR	2647546	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2647547	Identifier	reg4		2630490	0					
ANR	2647548	CallExpression	getreg ( ao -> a [ 3 ] )		2630490	1					
ANR	2647549	Callee	getreg		2630490	0					
ANR	2647550	Identifier	getreg		2630490	0					
ANR	2647551	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2647552	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2647553	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2647554	PtrMemberAccess	ao -> a		2630490	0					
ANR	2647555	Identifier	ao		2630490	0					
ANR	2647556	Identifier	a		2630490	1					
ANR	2647557	PrimaryExpression	3		2630490	1					
ANR	2647558	IfStatement	if ( reg4 > 15 )		2630490	1					
ANR	2647559	Condition	reg4 > 15	4364:7:91678:91686	2630490	0	True				
ANR	2647560	RelationalExpression	reg4 > 15		2630490	0		>			
ANR	2647561	Identifier	reg4		2630490	0					
ANR	2647562	PrimaryExpression	15		2630490	1					
ANR	2647563	CompoundStatement		3072:18:65830:65830	2630490	1					
ANR	2647564	ReturnStatement	return - 1 ;	4365:4:91695:91704	2630490	0	True				
ANR	2647565	UnaryOperationExpression	- 1		2630490	0					
ANR	2647566	UnaryOperator	-		2630490	0					
ANR	2647567	PrimaryExpression	1		2630490	1					
ANR	2647568	ExpressionStatement	ao -> o = 0x60fb0000	4367:3:91714:91732	2630490	2	True				
ANR	2647569	AssignmentExpression	ao -> o = 0x60fb0000		2630490	0		=			
ANR	2647570	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647571	Identifier	ao		2630490	0					
ANR	2647572	Identifier	o		2630490	1					
ANR	2647573	PrimaryExpression	0x60fb0000		2630490	1					
ANR	2647574	IfStatement	if ( m & R_BIT )		2630490	3					
ANR	2647575	Condition	m & R_BIT	4368:7:91741:91749	2630490	0	True				
ANR	2647576	BitAndExpression	m & R_BIT		2630490	0		&			
ANR	2647577	Identifier	m		2630490	0					
ANR	2647578	Identifier	R_BIT		2630490	1					
ANR	2647579	CompoundStatement		3076:18:65893:65893	2630490	1					
ANR	2647580	ExpressionStatement	ao -> o |= 1 << 12	4369:4:91758:91774	2630490	0	True				
ANR	2647581	AssignmentExpression	ao -> o |= 1 << 12		2630490	0		|=			
ANR	2647582	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647583	Identifier	ao		2630490	0					
ANR	2647584	Identifier	o		2630490	1					
ANR	2647585	ShiftExpression	1 << 12		2630490	1		<<			
ANR	2647586	PrimaryExpression	1		2630490	0					
ANR	2647587	PrimaryExpression	12		2630490	1					
ANR	2647588	ExpressionStatement	ao -> o |= reg4 << 4	4371:3:91784:91802	2630490	4	True				
ANR	2647589	AssignmentExpression	ao -> o |= reg4 << 4		2630490	0		|=			
ANR	2647590	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647591	Identifier	ao		2630490	0					
ANR	2647592	Identifier	o		2630490	1					
ANR	2647593	ShiftExpression	reg4 << 4		2630490	1		<<			
ANR	2647594	Identifier	reg4		2630490	0					
ANR	2647595	PrimaryExpression	4		2630490	1					
ANR	2647596	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4372:3:91807:91843	2630490	5	True				
ANR	2647597	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2647598	Callee	std_32bit_3reg		2630490	0					
ANR	2647599	Identifier	std_32bit_3reg		2630490	0					
ANR	2647600	ArgumentList	ao		2630490	1					
ANR	2647601	Argument	ao		2630490	0					
ANR	2647602	Identifier	ao		2630490	0					
ANR	2647603	Argument	m		2630490	1					
ANR	2647604	Identifier	m		2630490	0					
ANR	2647605	Argument	false		2630490	2					
ANR	2647606	Identifier	false		2630490	0					
ANR	2647607	BreakStatement	break ;	4374:3:91860:91865	2630490	2	True				
ANR	2647608	Label	default :	4375:2:91869:91876	2630490	3	True				
ANR	2647609	Identifier	default		2630490	0					
ANR	2647610	ReturnStatement	return - 1 ;	4376:3:91881:91890	2630490	4	True				
ANR	2647611	UnaryOperationExpression	- 1		2630490	0					
ANR	2647612	UnaryOperator	-		2630490	0					
ANR	2647613	PrimaryExpression	1		2630490	1					
ANR	2647614	ElseStatement	else		2630490	0					
ANR	2647615	IfStatement	"if ( ( m = opmask ( ao -> op , ""smmul"" , R_BIT ) ) )"		2630490	0					
ANR	2647616	Condition	"m = opmask ( ao -> op , ""smmul"" , R_BIT )"	4379:5:91909:91945	2630490	0	True				
ANR	2647617	AssignmentExpression	"m = opmask ( ao -> op , ""smmul"" , R_BIT )"		2630490	0		=			
ANR	2647618	Identifier	m		2630490	0					
ANR	2647619	CallExpression	"opmask ( ao -> op , ""smmul"" , R_BIT )"		2630490	1					
ANR	2647620	Callee	opmask		2630490	0					
ANR	2647621	Identifier	opmask		2630490	0					
ANR	2647622	ArgumentList	ao -> op		2630490	1					
ANR	2647623	Argument	ao -> op		2630490	0					
ANR	2647624	PtrMemberAccess	ao -> op		2630490	0					
ANR	2647625	Identifier	ao		2630490	0					
ANR	2647626	Identifier	op		2630490	1					
ANR	2647627	Argument	"""smmul"""		2630490	1					
ANR	2647628	PrimaryExpression	"""smmul"""		2630490	0					
ANR	2647629	Argument	R_BIT		2630490	2					
ANR	2647630	Identifier	R_BIT		2630490	0					
ANR	2647631	CompoundStatement		3088:2:66093:66127	2630490	1					
ANR	2647632	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4380:2:91952:91986	2630490	0	True				
ANR	2647633	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2647634	IdentifierDeclType	ut64		2630490	0					
ANR	2647635	Identifier	argt		2630490	1					
ANR	2647636	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2647637	Identifier	argt		2630490	0					
ANR	2647638	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2647639	Callee	thumb_selector		2630490	0					
ANR	2647640	Identifier	thumb_selector		2630490	0					
ANR	2647641	ArgumentList	ao -> a		2630490	1					
ANR	2647642	Argument	ao -> a		2630490	0					
ANR	2647643	PtrMemberAccess	ao -> a		2630490	0					
ANR	2647644	Identifier	ao		2630490	0					
ANR	2647645	Identifier	a		2630490	1					
ANR	2647646	SwitchStatement	switch ( argt )		2630490	1					
ANR	2647647	Condition	argt	4381:10:91998:92001	2630490	0	True				
ANR	2647648	Identifier	argt		2630490	0					
ANR	2647649	CompoundStatement		3089:16:66145:66145	2630490	1					
ANR	2647650	Label	case THUMB_REG_REG :	4382:2:92008:92026	2630490	0	True				
ANR	2647651	Identifier	THUMB_REG_REG		2630490	0					
ANR	2647652	CompoundStatement		3090:22:66169:66169	2630490	1					
ANR	2647653	ExpressionStatement	std_opt_2 ( ao )	4383:3:92033:92047	2630490	0	True				
ANR	2647654	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2647655	Callee	std_opt_2		2630490	0					
ANR	2647656	Identifier	std_opt_2		2630490	0					
ANR	2647657	ArgumentList	ao		2630490	1					
ANR	2647658	Argument	ao		2630490	0					
ANR	2647659	Identifier	ao		2630490	0					
ANR	2647660	Label	case THUMB_REG_REG_REG :	4386:2:92093:92115	2630490	2	True				
ANR	2647661	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2647662	CompoundStatement		3094:26:66258:66258	2630490	3					
ANR	2647663	ExpressionStatement	ao -> o = 0x50fb00f0	4387:3:92122:92140	2630490	0	True				
ANR	2647664	AssignmentExpression	ao -> o = 0x50fb00f0		2630490	0		=			
ANR	2647665	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647666	Identifier	ao		2630490	0					
ANR	2647667	Identifier	o		2630490	1					
ANR	2647668	PrimaryExpression	0x50fb00f0		2630490	1					
ANR	2647669	IfStatement	if ( m & R_BIT )		2630490	1					
ANR	2647670	Condition	m & R_BIT	4388:7:92149:92157	2630490	0	True				
ANR	2647671	BitAndExpression	m & R_BIT		2630490	0		&			
ANR	2647672	Identifier	m		2630490	0					
ANR	2647673	Identifier	R_BIT		2630490	1					
ANR	2647674	CompoundStatement		3096:18:66301:66301	2630490	1					
ANR	2647675	ExpressionStatement	ao -> o |= 1 << 12	4389:4:92166:92182	2630490	0	True				
ANR	2647676	AssignmentExpression	ao -> o |= 1 << 12		2630490	0		|=			
ANR	2647677	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647678	Identifier	ao		2630490	0					
ANR	2647679	Identifier	o		2630490	1					
ANR	2647680	ShiftExpression	1 << 12		2630490	1		<<			
ANR	2647681	PrimaryExpression	1		2630490	0					
ANR	2647682	PrimaryExpression	12		2630490	1					
ANR	2647683	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4391:3:92192:92228	2630490	2	True				
ANR	2647684	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2647685	Callee	std_32bit_3reg		2630490	0					
ANR	2647686	Identifier	std_32bit_3reg		2630490	0					
ANR	2647687	ArgumentList	ao		2630490	1					
ANR	2647688	Argument	ao		2630490	0					
ANR	2647689	Identifier	ao		2630490	0					
ANR	2647690	Argument	m		2630490	1					
ANR	2647691	Identifier	m		2630490	0					
ANR	2647692	Argument	false		2630490	2					
ANR	2647693	Identifier	false		2630490	0					
ANR	2647694	BreakStatement	break ;	4393:3:92245:92250	2630490	4	True				
ANR	2647695	Label	default :	4394:2:92254:92261	2630490	5	True				
ANR	2647696	Identifier	default		2630490	0					
ANR	2647697	ReturnStatement	return - 1 ;	4395:3:92266:92275	2630490	6	True				
ANR	2647698	UnaryOperationExpression	- 1		2630490	0					
ANR	2647699	UnaryOperator	-		2630490	0					
ANR	2647700	PrimaryExpression	1		2630490	1					
ANR	2647701	ElseStatement	else		2630490	0					
ANR	2647702	IfStatement	"if ( ( m = opmask ( ao -> op , ""smuad"" , X_BIT ) ) )"		2630490	0					
ANR	2647703	Condition	"m = opmask ( ao -> op , ""smuad"" , X_BIT )"	4398:5:92294:92330	2630490	0	True				
ANR	2647704	AssignmentExpression	"m = opmask ( ao -> op , ""smuad"" , X_BIT )"		2630490	0		=			
ANR	2647705	Identifier	m		2630490	0					
ANR	2647706	CallExpression	"opmask ( ao -> op , ""smuad"" , X_BIT )"		2630490	1					
ANR	2647707	Callee	opmask		2630490	0					
ANR	2647708	Identifier	opmask		2630490	0					
ANR	2647709	ArgumentList	ao -> op		2630490	1					
ANR	2647710	Argument	ao -> op		2630490	0					
ANR	2647711	PtrMemberAccess	ao -> op		2630490	0					
ANR	2647712	Identifier	ao		2630490	0					
ANR	2647713	Identifier	op		2630490	1					
ANR	2647714	Argument	"""smuad"""		2630490	1					
ANR	2647715	PrimaryExpression	"""smuad"""		2630490	0					
ANR	2647716	Argument	X_BIT		2630490	2					
ANR	2647717	Identifier	X_BIT		2630490	0					
ANR	2647718	CompoundStatement		3107:2:66478:66512	2630490	1					
ANR	2647719	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4399:2:92337:92371	2630490	0	True				
ANR	2647720	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2647721	IdentifierDeclType	ut64		2630490	0					
ANR	2647722	Identifier	argt		2630490	1					
ANR	2647723	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2647724	Identifier	argt		2630490	0					
ANR	2647725	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2647726	Callee	thumb_selector		2630490	0					
ANR	2647727	Identifier	thumb_selector		2630490	0					
ANR	2647728	ArgumentList	ao -> a		2630490	1					
ANR	2647729	Argument	ao -> a		2630490	0					
ANR	2647730	PtrMemberAccess	ao -> a		2630490	0					
ANR	2647731	Identifier	ao		2630490	0					
ANR	2647732	Identifier	a		2630490	1					
ANR	2647733	SwitchStatement	switch ( argt )		2630490	1					
ANR	2647734	Condition	argt	4400:10:92383:92386	2630490	0	True				
ANR	2647735	Identifier	argt		2630490	0					
ANR	2647736	CompoundStatement		3108:16:66530:66530	2630490	1					
ANR	2647737	Label	case THUMB_REG_REG :	4401:2:92393:92411	2630490	0	True				
ANR	2647738	Identifier	THUMB_REG_REG		2630490	0					
ANR	2647739	CompoundStatement		3109:22:66554:66554	2630490	1					
ANR	2647740	ExpressionStatement	std_opt_2 ( ao )	4402:3:92418:92432	2630490	0	True				
ANR	2647741	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2647742	Callee	std_opt_2		2630490	0					
ANR	2647743	Identifier	std_opt_2		2630490	0					
ANR	2647744	ArgumentList	ao		2630490	1					
ANR	2647745	Argument	ao		2630490	0					
ANR	2647746	Identifier	ao		2630490	0					
ANR	2647747	Label	case THUMB_REG_REG_REG :	4405:2:92478:92500	2630490	2	True				
ANR	2647748	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2647749	CompoundStatement		3113:26:66643:66643	2630490	3					
ANR	2647750	ExpressionStatement	ao -> o = 0x20fb00f0	4406:3:92507:92525	2630490	0	True				
ANR	2647751	AssignmentExpression	ao -> o = 0x20fb00f0		2630490	0		=			
ANR	2647752	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647753	Identifier	ao		2630490	0					
ANR	2647754	Identifier	o		2630490	1					
ANR	2647755	PrimaryExpression	0x20fb00f0		2630490	1					
ANR	2647756	IfStatement	if ( m & X_BIT )		2630490	1					
ANR	2647757	Condition	m & X_BIT	4407:7:92534:92542	2630490	0	True				
ANR	2647758	BitAndExpression	m & X_BIT		2630490	0		&			
ANR	2647759	Identifier	m		2630490	0					
ANR	2647760	Identifier	X_BIT		2630490	1					
ANR	2647761	CompoundStatement		3115:18:66686:66686	2630490	1					
ANR	2647762	ExpressionStatement	ao -> o |= 1 << 12	4408:4:92551:92567	2630490	0	True				
ANR	2647763	AssignmentExpression	ao -> o |= 1 << 12		2630490	0		|=			
ANR	2647764	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647765	Identifier	ao		2630490	0					
ANR	2647766	Identifier	o		2630490	1					
ANR	2647767	ShiftExpression	1 << 12		2630490	1		<<			
ANR	2647768	PrimaryExpression	1		2630490	0					
ANR	2647769	PrimaryExpression	12		2630490	1					
ANR	2647770	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4410:3:92577:92613	2630490	2	True				
ANR	2647771	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2647772	Callee	std_32bit_3reg		2630490	0					
ANR	2647773	Identifier	std_32bit_3reg		2630490	0					
ANR	2647774	ArgumentList	ao		2630490	1					
ANR	2647775	Argument	ao		2630490	0					
ANR	2647776	Identifier	ao		2630490	0					
ANR	2647777	Argument	m		2630490	1					
ANR	2647778	Identifier	m		2630490	0					
ANR	2647779	Argument	false		2630490	2					
ANR	2647780	Identifier	false		2630490	0					
ANR	2647781	BreakStatement	break ;	4412:3:92630:92635	2630490	4	True				
ANR	2647782	Label	default :	4413:2:92639:92646	2630490	5	True				
ANR	2647783	Identifier	default		2630490	0					
ANR	2647784	ReturnStatement	return - 1 ;	4414:3:92651:92660	2630490	6	True				
ANR	2647785	UnaryOperationExpression	- 1		2630490	0					
ANR	2647786	UnaryOperator	-		2630490	0					
ANR	2647787	PrimaryExpression	1		2630490	1					
ANR	2647788	ElseStatement	else		2630490	0					
ANR	2647789	IfStatement	"if ( ( m = opmask ( ao -> op , ""smul"" , BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT ) ) )"		2630490	0					
ANR	2647790	Condition	"m = opmask ( ao -> op , ""smul"" , BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT )"	4417:5:92679:92768	2630490	0	True				
ANR	2647791	AssignmentExpression	"m = opmask ( ao -> op , ""smul"" , BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT )"		2630490	0		=			
ANR	2647792	Identifier	m		2630490	0					
ANR	2647793	CallExpression	"opmask ( ao -> op , ""smul"" , BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT )"		2630490	1					
ANR	2647794	Callee	opmask		2630490	0					
ANR	2647795	Identifier	opmask		2630490	0					
ANR	2647796	ArgumentList	ao -> op		2630490	1					
ANR	2647797	Argument	ao -> op		2630490	0					
ANR	2647798	PtrMemberAccess	ao -> op		2630490	0					
ANR	2647799	Identifier	ao		2630490	0					
ANR	2647800	Identifier	op		2630490	1					
ANR	2647801	Argument	"""smul"""		2630490	1					
ANR	2647802	PrimaryExpression	"""smul"""		2630490	0					
ANR	2647803	Argument	BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT		2630490	2					
ANR	2647804	InclusiveOrExpression	BB_BIT | BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT		2630490	0		|			
ANR	2647805	Identifier	BB_BIT		2630490	0					
ANR	2647806	InclusiveOrExpression	BT_BIT | TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT		2630490	1		|			
ANR	2647807	Identifier	BT_BIT		2630490	0					
ANR	2647808	InclusiveOrExpression	TB_BIT | TT_BIT | WB_BIT | WT_BIT | L_BIT		2630490	1		|			
ANR	2647809	Identifier	TB_BIT		2630490	0					
ANR	2647810	InclusiveOrExpression	TT_BIT | WB_BIT | WT_BIT | L_BIT		2630490	1		|			
ANR	2647811	Identifier	TT_BIT		2630490	0					
ANR	2647812	InclusiveOrExpression	WB_BIT | WT_BIT | L_BIT		2630490	1		|			
ANR	2647813	Identifier	WB_BIT		2630490	0					
ANR	2647814	InclusiveOrExpression	WT_BIT | L_BIT		2630490	1		|			
ANR	2647815	Identifier	WT_BIT		2630490	0					
ANR	2647816	Identifier	L_BIT		2630490	1					
ANR	2647817	CompoundStatement		3126:2:66916:66950	2630490	1					
ANR	2647818	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4418:2:92775:92809	2630490	0	True				
ANR	2647819	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2647820	IdentifierDeclType	ut64		2630490	0					
ANR	2647821	Identifier	argt		2630490	1					
ANR	2647822	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2647823	Identifier	argt		2630490	0					
ANR	2647824	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2647825	Callee	thumb_selector		2630490	0					
ANR	2647826	Identifier	thumb_selector		2630490	0					
ANR	2647827	ArgumentList	ao -> a		2630490	1					
ANR	2647828	Argument	ao -> a		2630490	0					
ANR	2647829	PtrMemberAccess	ao -> a		2630490	0					
ANR	2647830	Identifier	ao		2630490	0					
ANR	2647831	Identifier	a		2630490	1					
ANR	2647832	SwitchStatement	switch ( argt )		2630490	1					
ANR	2647833	Condition	argt	4419:10:92821:92824	2630490	0	True				
ANR	2647834	Identifier	argt		2630490	0					
ANR	2647835	CompoundStatement		3127:16:66968:66968	2630490	1					
ANR	2647836	Label	case THUMB_REG_REG :	4420:2:92831:92849	2630490	0	True				
ANR	2647837	Identifier	THUMB_REG_REG		2630490	0					
ANR	2647838	CompoundStatement		3128:22:66992:66992	2630490	1					
ANR	2647839	ExpressionStatement	std_opt_2 ( ao )	4421:3:92856:92870	2630490	0	True				
ANR	2647840	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2647841	Callee	std_opt_2		2630490	0					
ANR	2647842	Identifier	std_opt_2		2630490	0					
ANR	2647843	ArgumentList	ao		2630490	1					
ANR	2647844	Argument	ao		2630490	0					
ANR	2647845	Identifier	ao		2630490	0					
ANR	2647846	Label	case THUMB_REG_REG_REG :	4424:2:92916:92938	2630490	2	True				
ANR	2647847	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2647848	CompoundStatement		3132:26:67081:67081	2630490	3					
ANR	2647849	IfStatement	if ( m & BB_BIT )		2630490	0					
ANR	2647850	Condition	m & BB_BIT	4425:7:92949:92958	2630490	0	True				
ANR	2647851	BitAndExpression	m & BB_BIT		2630490	0		&			
ANR	2647852	Identifier	m		2630490	0					
ANR	2647853	Identifier	BB_BIT		2630490	1					
ANR	2647854	CompoundStatement		3133:19:67102:67102	2630490	1					
ANR	2647855	ExpressionStatement	ao -> o = 0x10fb00f0	4426:4:92967:92985	2630490	0	True				
ANR	2647856	AssignmentExpression	ao -> o = 0x10fb00f0		2630490	0		=			
ANR	2647857	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647858	Identifier	ao		2630490	0					
ANR	2647859	Identifier	o		2630490	1					
ANR	2647860	PrimaryExpression	0x10fb00f0		2630490	1					
ANR	2647861	ElseStatement	else		2630490	0					
ANR	2647862	IfStatement	if ( m & BT_BIT )		2630490	0					
ANR	2647863	Condition	m & BT_BIT	4428:7:93004:93013	2630490	0	True				
ANR	2647864	BitAndExpression	m & BT_BIT		2630490	0		&			
ANR	2647865	Identifier	m		2630490	0					
ANR	2647866	Identifier	BT_BIT		2630490	1					
ANR	2647867	CompoundStatement		3136:19:67157:67157	2630490	1					
ANR	2647868	ExpressionStatement	ao -> o = 0x10fb10f0	4429:4:93022:93040	2630490	0	True				
ANR	2647869	AssignmentExpression	ao -> o = 0x10fb10f0		2630490	0		=			
ANR	2647870	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647871	Identifier	ao		2630490	0					
ANR	2647872	Identifier	o		2630490	1					
ANR	2647873	PrimaryExpression	0x10fb10f0		2630490	1					
ANR	2647874	ElseStatement	else		2630490	0					
ANR	2647875	IfStatement	if ( m & TB_BIT )		2630490	0					
ANR	2647876	Condition	m & TB_BIT	4431:7:93059:93068	2630490	0	True				
ANR	2647877	BitAndExpression	m & TB_BIT		2630490	0		&			
ANR	2647878	Identifier	m		2630490	0					
ANR	2647879	Identifier	TB_BIT		2630490	1					
ANR	2647880	CompoundStatement		3139:19:67212:67212	2630490	1					
ANR	2647881	ExpressionStatement	ao -> o = 0x10fb20f0	4432:4:93077:93095	2630490	0	True				
ANR	2647882	AssignmentExpression	ao -> o = 0x10fb20f0		2630490	0		=			
ANR	2647883	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647884	Identifier	ao		2630490	0					
ANR	2647885	Identifier	o		2630490	1					
ANR	2647886	PrimaryExpression	0x10fb20f0		2630490	1					
ANR	2647887	ElseStatement	else		2630490	0					
ANR	2647888	IfStatement	if ( m & TT_BIT )		2630490	0					
ANR	2647889	Condition	m & TT_BIT	4434:7:93114:93123	2630490	0	True				
ANR	2647890	BitAndExpression	m & TT_BIT		2630490	0		&			
ANR	2647891	Identifier	m		2630490	0					
ANR	2647892	Identifier	TT_BIT		2630490	1					
ANR	2647893	CompoundStatement		3142:19:67267:67267	2630490	1					
ANR	2647894	ExpressionStatement	ao -> o = 0x10fb30f0	4435:4:93132:93150	2630490	0	True				
ANR	2647895	AssignmentExpression	ao -> o = 0x10fb30f0		2630490	0		=			
ANR	2647896	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647897	Identifier	ao		2630490	0					
ANR	2647898	Identifier	o		2630490	1					
ANR	2647899	PrimaryExpression	0x10fb30f0		2630490	1					
ANR	2647900	ElseStatement	else		2630490	0					
ANR	2647901	IfStatement	if ( m & WB_BIT )		2630490	0					
ANR	2647902	Condition	m & WB_BIT	4437:7:93169:93178	2630490	0	True				
ANR	2647903	BitAndExpression	m & WB_BIT		2630490	0		&			
ANR	2647904	Identifier	m		2630490	0					
ANR	2647905	Identifier	WB_BIT		2630490	1					
ANR	2647906	CompoundStatement		3145:19:67322:67322	2630490	1					
ANR	2647907	ExpressionStatement	ao -> o = 0x30fb00f0	4438:4:93187:93205	2630490	0	True				
ANR	2647908	AssignmentExpression	ao -> o = 0x30fb00f0		2630490	0		=			
ANR	2647909	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647910	Identifier	ao		2630490	0					
ANR	2647911	Identifier	o		2630490	1					
ANR	2647912	PrimaryExpression	0x30fb00f0		2630490	1					
ANR	2647913	ElseStatement	else		2630490	0					
ANR	2647914	IfStatement	if ( m & WT_BIT )		2630490	0					
ANR	2647915	Condition	m & WT_BIT	4440:7:93224:93233	2630490	0	True				
ANR	2647916	BitAndExpression	m & WT_BIT		2630490	0		&			
ANR	2647917	Identifier	m		2630490	0					
ANR	2647918	Identifier	WT_BIT		2630490	1					
ANR	2647919	CompoundStatement		3148:19:67377:67377	2630490	1					
ANR	2647920	ExpressionStatement	ao -> o = 0x30fb10f0	4441:4:93242:93260	2630490	0	True				
ANR	2647921	AssignmentExpression	ao -> o = 0x30fb10f0		2630490	0		=			
ANR	2647922	PtrMemberAccess	ao -> o		2630490	0					
ANR	2647923	Identifier	ao		2630490	0					
ANR	2647924	Identifier	o		2630490	1					
ANR	2647925	PrimaryExpression	0x30fb10f0		2630490	1					
ANR	2647926	ElseStatement	else		2630490	0					
ANR	2647927	CompoundStatement		3150:10:67413:67413	2630490	0					
ANR	2647928	ReturnStatement	return - 1 ;	4443:4:93278:93287	2630490	0	True				
ANR	2647929	UnaryOperationExpression	- 1		2630490	0					
ANR	2647930	UnaryOperator	-		2630490	0					
ANR	2647931	PrimaryExpression	1		2630490	1					
ANR	2647932	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4445:3:93297:93333	2630490	1	True				
ANR	2647933	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2647934	Callee	std_32bit_3reg		2630490	0					
ANR	2647935	Identifier	std_32bit_3reg		2630490	0					
ANR	2647936	ArgumentList	ao		2630490	1					
ANR	2647937	Argument	ao		2630490	0					
ANR	2647938	Identifier	ao		2630490	0					
ANR	2647939	Argument	m		2630490	1					
ANR	2647940	Identifier	m		2630490	0					
ANR	2647941	Argument	false		2630490	2					
ANR	2647942	Identifier	false		2630490	0					
ANR	2647943	BreakStatement	break ;	4447:3:93350:93355	2630490	4	True				
ANR	2647944	Label	case THUMB_REG_REG_REG_REG :	4448:2:93359:93385	2630490	5	True				
ANR	2647945	Identifier	THUMB_REG_REG_REG_REG		2630490	0					
ANR	2647946	CompoundStatement		3160:3:67632:67660	2630490	6					
ANR	2647947	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4449:3:93392:93420	2630490	0	True				
ANR	2647948	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2647949	IdentifierDeclType	ut8		2630490	0					
ANR	2647950	Identifier	reg1		2630490	1					
ANR	2647951	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2647952	Identifier	reg1		2630490	0					
ANR	2647953	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2647954	Callee	getreg		2630490	0					
ANR	2647955	Identifier	getreg		2630490	0					
ANR	2647956	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2647957	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2647958	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2647959	PtrMemberAccess	ao -> a		2630490	0					
ANR	2647960	Identifier	ao		2630490	0					
ANR	2647961	Identifier	a		2630490	1					
ANR	2647962	PrimaryExpression	0		2630490	1					
ANR	2647963	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	4450:3:93425:93453	2630490	1	True				
ANR	2647964	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2647965	IdentifierDeclType	ut8		2630490	0					
ANR	2647966	Identifier	reg2		2630490	1					
ANR	2647967	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2647968	Identifier	reg2		2630490	0					
ANR	2647969	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2647970	Callee	getreg		2630490	0					
ANR	2647971	Identifier	getreg		2630490	0					
ANR	2647972	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2647973	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2647974	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2647975	PtrMemberAccess	ao -> a		2630490	0					
ANR	2647976	Identifier	ao		2630490	0					
ANR	2647977	Identifier	a		2630490	1					
ANR	2647978	PrimaryExpression	1		2630490	1					
ANR	2647979	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	4451:3:93458:93486	2630490	2	True				
ANR	2647980	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2647981	IdentifierDeclType	ut8		2630490	0					
ANR	2647982	Identifier	reg3		2630490	1					
ANR	2647983	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2647984	Identifier	reg3		2630490	0					
ANR	2647985	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2647986	Callee	getreg		2630490	0					
ANR	2647987	Identifier	getreg		2630490	0					
ANR	2647988	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2647989	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2647990	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2647991	PtrMemberAccess	ao -> a		2630490	0					
ANR	2647992	Identifier	ao		2630490	0					
ANR	2647993	Identifier	a		2630490	1					
ANR	2647994	PrimaryExpression	2		2630490	1					
ANR	2647995	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	4452:3:93491:93519	2630490	3	True				
ANR	2647996	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		2630490	0					
ANR	2647997	IdentifierDeclType	ut8		2630490	0					
ANR	2647998	Identifier	reg4		2630490	1					
ANR	2647999	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2648000	Identifier	reg4		2630490	0					
ANR	2648001	CallExpression	getreg ( ao -> a [ 3 ] )		2630490	1					
ANR	2648002	Callee	getreg		2630490	0					
ANR	2648003	Identifier	getreg		2630490	0					
ANR	2648004	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2648005	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2648006	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2648007	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648008	Identifier	ao		2630490	0					
ANR	2648009	Identifier	a		2630490	1					
ANR	2648010	PrimaryExpression	3		2630490	1					
ANR	2648011	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT ) || ( ! ( m & L_BIT ) ) )		2630490	4					
ANR	2648012	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT ) || ( ! ( m & L_BIT ) )	4454:7:93529:93620	2630490	0	True				
ANR	2648013	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT ) || ( ! ( m & L_BIT ) )		2630490	0		||			
ANR	2648014	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2648015	Identifier	reg1		2630490	0					
ANR	2648016	PrimaryExpression	15		2630490	1					
ANR	2648017	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT ) || ( ! ( m & L_BIT ) )		2630490	1		||			
ANR	2648018	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2648019	Identifier	reg2		2630490	0					
ANR	2648020	PrimaryExpression	15		2630490	1					
ANR	2648021	OrExpression	( reg3 > 15 ) || ( reg4 > 15 ) || ( m & DOTN_BIT ) || ( ! ( m & L_BIT ) )		2630490	1		||			
ANR	2648022	RelationalExpression	reg3 > 15		2630490	0		>			
ANR	2648023	Identifier	reg3		2630490	0					
ANR	2648024	PrimaryExpression	15		2630490	1					
ANR	2648025	OrExpression	( reg4 > 15 ) || ( m & DOTN_BIT ) || ( ! ( m & L_BIT ) )		2630490	1		||			
ANR	2648026	RelationalExpression	reg4 > 15		2630490	0		>			
ANR	2648027	Identifier	reg4		2630490	0					
ANR	2648028	PrimaryExpression	15		2630490	1					
ANR	2648029	OrExpression	( m & DOTN_BIT ) || ( ! ( m & L_BIT ) )		2630490	1		||			
ANR	2648030	BitAndExpression	m & DOTN_BIT		2630490	0		&			
ANR	2648031	Identifier	m		2630490	0					
ANR	2648032	Identifier	DOTN_BIT		2630490	1					
ANR	2648033	UnaryOperationExpression	! ( m & L_BIT )		2630490	1					
ANR	2648034	UnaryOperator	!		2630490	0					
ANR	2648035	BitAndExpression	m & L_BIT		2630490	1		&			
ANR	2648036	Identifier	m		2630490	0					
ANR	2648037	Identifier	L_BIT		2630490	1					
ANR	2648038	CompoundStatement		3162:101:67764:67764	2630490	1					
ANR	2648039	ReturnStatement	return - 1 ;	4455:4:93629:93638	2630490	0	True				
ANR	2648040	UnaryOperationExpression	- 1		2630490	0					
ANR	2648041	UnaryOperator	-		2630490	0					
ANR	2648042	PrimaryExpression	1		2630490	1					
ANR	2648043	ExpressionStatement	ao -> o = 0x80fb0000	4458:3:93649:93667	2630490	5	True				
ANR	2648044	AssignmentExpression	ao -> o = 0x80fb0000		2630490	0		=			
ANR	2648045	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648046	Identifier	ao		2630490	0					
ANR	2648047	Identifier	o		2630490	1					
ANR	2648048	PrimaryExpression	0x80fb0000		2630490	1					
ANR	2648049	ExpressionStatement	ao -> o |= reg1 << 4	4459:3:93672:93690	2630490	6	True				
ANR	2648050	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2648051	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648052	Identifier	ao		2630490	0					
ANR	2648053	Identifier	o		2630490	1					
ANR	2648054	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2648055	Identifier	reg1		2630490	0					
ANR	2648056	PrimaryExpression	4		2630490	1					
ANR	2648057	ExpressionStatement	ao -> o |= reg2	4460:3:93695:93708	2630490	7	True				
ANR	2648058	AssignmentExpression	ao -> o |= reg2		2630490	0		|=			
ANR	2648059	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648060	Identifier	ao		2630490	0					
ANR	2648061	Identifier	o		2630490	1					
ANR	2648062	Identifier	reg2		2630490	1					
ANR	2648063	ExpressionStatement	ao -> o |= reg3 << 24	4461:3:93713:93732	2630490	8	True				
ANR	2648064	AssignmentExpression	ao -> o |= reg3 << 24		2630490	0		|=			
ANR	2648065	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648066	Identifier	ao		2630490	0					
ANR	2648067	Identifier	o		2630490	1					
ANR	2648068	ShiftExpression	reg3 << 24		2630490	1		<<			
ANR	2648069	Identifier	reg3		2630490	0					
ANR	2648070	PrimaryExpression	24		2630490	1					
ANR	2648071	ExpressionStatement	ao -> o |= reg4 << 8	4462:3:93737:93755	2630490	9	True				
ANR	2648072	AssignmentExpression	ao -> o |= reg4 << 8		2630490	0		|=			
ANR	2648073	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648074	Identifier	ao		2630490	0					
ANR	2648075	Identifier	o		2630490	1					
ANR	2648076	ShiftExpression	reg4 << 8		2630490	1		<<			
ANR	2648077	Identifier	reg4		2630490	0					
ANR	2648078	PrimaryExpression	8		2630490	1					
ANR	2648079	ReturnStatement	return 4 ;	4463:3:93760:93768	2630490	10	True				
ANR	2648080	PrimaryExpression	4		2630490	0					
ANR	2648081	BreakStatement	break ;	4465:3:93785:93790	2630490	7	True				
ANR	2648082	Label	default :	4466:2:93794:93801	2630490	8	True				
ANR	2648083	Identifier	default		2630490	0					
ANR	2648084	ReturnStatement	return - 1 ;	4467:3:93806:93815	2630490	9	True				
ANR	2648085	UnaryOperationExpression	- 1		2630490	0					
ANR	2648086	UnaryOperator	-		2630490	0					
ANR	2648087	PrimaryExpression	1		2630490	1					
ANR	2648088	ElseStatement	else		2630490	0					
ANR	2648089	IfStatement	"if ( ( m = opmask ( ao -> op , ""smusd"" , X_BIT ) ) )"		2630490	0					
ANR	2648090	Condition	"m = opmask ( ao -> op , ""smusd"" , X_BIT )"	4470:5:93834:93870	2630490	0	True				
ANR	2648091	AssignmentExpression	"m = opmask ( ao -> op , ""smusd"" , X_BIT )"		2630490	0		=			
ANR	2648092	Identifier	m		2630490	0					
ANR	2648093	CallExpression	"opmask ( ao -> op , ""smusd"" , X_BIT )"		2630490	1					
ANR	2648094	Callee	opmask		2630490	0					
ANR	2648095	Identifier	opmask		2630490	0					
ANR	2648096	ArgumentList	ao -> op		2630490	1					
ANR	2648097	Argument	ao -> op		2630490	0					
ANR	2648098	PtrMemberAccess	ao -> op		2630490	0					
ANR	2648099	Identifier	ao		2630490	0					
ANR	2648100	Identifier	op		2630490	1					
ANR	2648101	Argument	"""smusd"""		2630490	1					
ANR	2648102	PrimaryExpression	"""smusd"""		2630490	0					
ANR	2648103	Argument	X_BIT		2630490	2					
ANR	2648104	Identifier	X_BIT		2630490	0					
ANR	2648105	CompoundStatement		3179:2:68018:68052	2630490	1					
ANR	2648106	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4471:2:93877:93911	2630490	0	True				
ANR	2648107	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2648108	IdentifierDeclType	ut64		2630490	0					
ANR	2648109	Identifier	argt		2630490	1					
ANR	2648110	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2648111	Identifier	argt		2630490	0					
ANR	2648112	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2648113	Callee	thumb_selector		2630490	0					
ANR	2648114	Identifier	thumb_selector		2630490	0					
ANR	2648115	ArgumentList	ao -> a		2630490	1					
ANR	2648116	Argument	ao -> a		2630490	0					
ANR	2648117	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648118	Identifier	ao		2630490	0					
ANR	2648119	Identifier	a		2630490	1					
ANR	2648120	SwitchStatement	switch ( argt )		2630490	1					
ANR	2648121	Condition	argt	4472:10:93923:93926	2630490	0	True				
ANR	2648122	Identifier	argt		2630490	0					
ANR	2648123	CompoundStatement		3180:16:68070:68070	2630490	1					
ANR	2648124	Label	case THUMB_REG_REG :	4473:2:93933:93951	2630490	0	True				
ANR	2648125	Identifier	THUMB_REG_REG		2630490	0					
ANR	2648126	CompoundStatement		3181:22:68094:68094	2630490	1					
ANR	2648127	ExpressionStatement	std_opt_2 ( ao )	4474:3:93958:93972	2630490	0	True				
ANR	2648128	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2648129	Callee	std_opt_2		2630490	0					
ANR	2648130	Identifier	std_opt_2		2630490	0					
ANR	2648131	ArgumentList	ao		2630490	1					
ANR	2648132	Argument	ao		2630490	0					
ANR	2648133	Identifier	ao		2630490	0					
ANR	2648134	Label	case THUMB_REG_REG_REG :	4477:2:94018:94040	2630490	2	True				
ANR	2648135	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2648136	CompoundStatement		3185:26:68183:68183	2630490	3					
ANR	2648137	ExpressionStatement	ao -> o = 0x40fb00f0	4478:3:94047:94065	2630490	0	True				
ANR	2648138	AssignmentExpression	ao -> o = 0x40fb00f0		2630490	0		=			
ANR	2648139	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648140	Identifier	ao		2630490	0					
ANR	2648141	Identifier	o		2630490	1					
ANR	2648142	PrimaryExpression	0x40fb00f0		2630490	1					
ANR	2648143	IfStatement	if ( m & X_BIT )		2630490	1					
ANR	2648144	Condition	m & X_BIT	4479:7:94074:94082	2630490	0	True				
ANR	2648145	BitAndExpression	m & X_BIT		2630490	0		&			
ANR	2648146	Identifier	m		2630490	0					
ANR	2648147	Identifier	X_BIT		2630490	1					
ANR	2648148	CompoundStatement		3187:18:68226:68226	2630490	1					
ANR	2648149	ExpressionStatement	ao -> o |= 1 << 12	4480:4:94091:94107	2630490	0	True				
ANR	2648150	AssignmentExpression	ao -> o |= 1 << 12		2630490	0		|=			
ANR	2648151	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648152	Identifier	ao		2630490	0					
ANR	2648153	Identifier	o		2630490	1					
ANR	2648154	ShiftExpression	1 << 12		2630490	1		<<			
ANR	2648155	PrimaryExpression	1		2630490	0					
ANR	2648156	PrimaryExpression	12		2630490	1					
ANR	2648157	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4482:3:94117:94153	2630490	2	True				
ANR	2648158	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2648159	Callee	std_32bit_3reg		2630490	0					
ANR	2648160	Identifier	std_32bit_3reg		2630490	0					
ANR	2648161	ArgumentList	ao		2630490	1					
ANR	2648162	Argument	ao		2630490	0					
ANR	2648163	Identifier	ao		2630490	0					
ANR	2648164	Argument	m		2630490	1					
ANR	2648165	Identifier	m		2630490	0					
ANR	2648166	Argument	false		2630490	2					
ANR	2648167	Identifier	false		2630490	0					
ANR	2648168	BreakStatement	break ;	4484:3:94170:94175	2630490	4	True				
ANR	2648169	Label	default :	4485:2:94179:94186	2630490	5	True				
ANR	2648170	Identifier	default		2630490	0					
ANR	2648171	ReturnStatement	return - 1 ;	4486:3:94191:94200	2630490	6	True				
ANR	2648172	UnaryOperationExpression	- 1		2630490	0					
ANR	2648173	UnaryOperator	-		2630490	0					
ANR	2648174	PrimaryExpression	1		2630490	1					
ANR	2648175	ElseStatement	else		2630490	0					
ANR	2648176	IfStatement	"if ( ( m = opmask ( ao -> op , ""srs"" , DB_BIT | FD_BIT | IA_BIT | EA_BIT ) ) )"		2630490	0					
ANR	2648177	Condition	"m = opmask ( ao -> op , ""srs"" , DB_BIT | FD_BIT | IA_BIT | EA_BIT )"	4489:5:94219:94281	2630490	0	True				
ANR	2648178	AssignmentExpression	"m = opmask ( ao -> op , ""srs"" , DB_BIT | FD_BIT | IA_BIT | EA_BIT )"		2630490	0		=			
ANR	2648179	Identifier	m		2630490	0					
ANR	2648180	CallExpression	"opmask ( ao -> op , ""srs"" , DB_BIT | FD_BIT | IA_BIT | EA_BIT )"		2630490	1					
ANR	2648181	Callee	opmask		2630490	0					
ANR	2648182	Identifier	opmask		2630490	0					
ANR	2648183	ArgumentList	ao -> op		2630490	1					
ANR	2648184	Argument	ao -> op		2630490	0					
ANR	2648185	PtrMemberAccess	ao -> op		2630490	0					
ANR	2648186	Identifier	ao		2630490	0					
ANR	2648187	Identifier	op		2630490	1					
ANR	2648188	Argument	"""srs"""		2630490	1					
ANR	2648189	PrimaryExpression	"""srs"""		2630490	0					
ANR	2648190	Argument	DB_BIT | FD_BIT | IA_BIT | EA_BIT		2630490	2					
ANR	2648191	InclusiveOrExpression	DB_BIT | FD_BIT | IA_BIT | EA_BIT		2630490	0		|			
ANR	2648192	Identifier	DB_BIT		2630490	0					
ANR	2648193	InclusiveOrExpression	FD_BIT | IA_BIT | EA_BIT		2630490	1		|			
ANR	2648194	Identifier	FD_BIT		2630490	0					
ANR	2648195	InclusiveOrExpression	IA_BIT | EA_BIT		2630490	1		|			
ANR	2648196	Identifier	IA_BIT		2630490	0					
ANR	2648197	Identifier	EA_BIT		2630490	1					
ANR	2648198	CompoundStatement		3199:2:68443:68477	2630490	1					
ANR	2648199	IdentifierDeclStatement	ut32 w = 0 ;	4490:2:94288:94298	2630490	0	True				
ANR	2648200	IdentifierDecl	w = 0		2630490	0					
ANR	2648201	IdentifierDeclType	ut32		2630490	0					
ANR	2648202	Identifier	w		2630490	1					
ANR	2648203	AssignmentExpression	w = 0		2630490	2		=			
ANR	2648204	Identifier	w		2630490	0					
ANR	2648205	PrimaryExpression	0		2630490	1					
ANR	2648206	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4491:2:94302:94336	2630490	1	True				
ANR	2648207	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2648208	IdentifierDeclType	ut64		2630490	0					
ANR	2648209	Identifier	argt		2630490	1					
ANR	2648210	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2648211	Identifier	argt		2630490	0					
ANR	2648212	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2648213	Callee	thumb_selector		2630490	0					
ANR	2648214	Identifier	thumb_selector		2630490	0					
ANR	2648215	ArgumentList	ao -> a		2630490	1					
ANR	2648216	Argument	ao -> a		2630490	0					
ANR	2648217	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648218	Identifier	ao		2630490	0					
ANR	2648219	Identifier	a		2630490	1					
ANR	2648220	SwitchStatement	switch ( argt )		2630490	2					
ANR	2648221	Condition	argt	4492:10:94348:94351	2630490	0	True				
ANR	2648222	Identifier	argt		2630490	0					
ANR	2648223	CompoundStatement		3200:16:68495:68495	2630490	1					
ANR	2648224	Label	case THUMB_CONSTBANG :	4493:2:94358:94378	2630490	0	True				
ANR	2648225	Identifier	THUMB_CONSTBANG		2630490	0					
ANR	2648226	CompoundStatement		3201:24:68521:68521	2630490	1					
ANR	2648227	ExpressionStatement	ao -> a [ 0 ] [ strlen ( ao -> a [ 0 ] ) - 1 ] = '\\0'	4494:3:94385:94423	2630490	0	True				
ANR	2648228	AssignmentExpression	ao -> a [ 0 ] [ strlen ( ao -> a [ 0 ] ) - 1 ] = '\\0'		2630490	0		=			
ANR	2648229	ArrayIndexing	ao -> a [ 0 ] [ strlen ( ao -> a [ 0 ] ) - 1 ]		2630490	0					
ANR	2648230	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2648231	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648232	Identifier	ao		2630490	0					
ANR	2648233	Identifier	a		2630490	1					
ANR	2648234	PrimaryExpression	0		2630490	1					
ANR	2648235	AdditiveExpression	strlen ( ao -> a [ 0 ] ) - 1		2630490	1		-			
ANR	2648236	CallExpression	strlen ( ao -> a [ 0 ] )		2630490	0					
ANR	2648237	Callee	strlen		2630490	0					
ANR	2648238	Identifier	strlen		2630490	0					
ANR	2648239	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2648240	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2648241	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2648242	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648243	Identifier	ao		2630490	0					
ANR	2648244	Identifier	a		2630490	1					
ANR	2648245	PrimaryExpression	0		2630490	1					
ANR	2648246	PrimaryExpression	1		2630490	1					
ANR	2648247	PrimaryExpression	'\\0'		2630490	1					
ANR	2648248	ExpressionStatement	w = 1	4495:3:94428:94433	2630490	1	True				
ANR	2648249	AssignmentExpression	w = 1		2630490	0		=			
ANR	2648250	Identifier	w		2630490	0					
ANR	2648251	PrimaryExpression	1		2630490	1					
ANR	2648252	Label	case THUMB_CONST :	4498:2:94479:94495	2630490	2	True				
ANR	2648253	Identifier	THUMB_CONST		2630490	0					
ANR	2648254	CompoundStatement		3207:3:68643:68671	2630490	3					
ANR	2648255	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 0 ] ) ;	4499:3:94502:94530	2630490	0	True				
ANR	2648256	IdentifierDecl	num = getnum ( ao -> a [ 0 ] )		2630490	0					
ANR	2648257	IdentifierDeclType	ut32		2630490	0					
ANR	2648258	Identifier	num		2630490	1					
ANR	2648259	AssignmentExpression	num = getnum ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2648260	Identifier	num		2630490	0					
ANR	2648261	CallExpression	getnum ( ao -> a [ 0 ] )		2630490	1					
ANR	2648262	Callee	getnum		2630490	0					
ANR	2648263	Identifier	getnum		2630490	0					
ANR	2648264	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2648265	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2648266	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2648267	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648268	Identifier	ao		2630490	0					
ANR	2648269	Identifier	a		2630490	1					
ANR	2648270	PrimaryExpression	0		2630490	1					
ANR	2648271	IfStatement	if ( num > 31 )		2630490	1					
ANR	2648272	Condition	num > 31	4500:7:94539:94546	2630490	0	True				
ANR	2648273	RelationalExpression	num > 31		2630490	0		>			
ANR	2648274	Identifier	num		2630490	0					
ANR	2648275	PrimaryExpression	31		2630490	1					
ANR	2648276	CompoundStatement		3208:17:68690:68690	2630490	1					
ANR	2648277	ReturnStatement	return - 1 ;	4501:4:94555:94564	2630490	0	True				
ANR	2648278	UnaryOperationExpression	- 1		2630490	0					
ANR	2648279	UnaryOperator	-		2630490	0					
ANR	2648280	PrimaryExpression	1		2630490	1					
ANR	2648281	IfStatement	if ( ( m & DB_BIT ) || ( m & FD_BIT ) )		2630490	2					
ANR	2648282	Condition	( m & DB_BIT ) || ( m & FD_BIT )	4503:7:94578:94605	2630490	0	True				
ANR	2648283	OrExpression	( m & DB_BIT ) || ( m & FD_BIT )		2630490	0		||			
ANR	2648284	BitAndExpression	m & DB_BIT		2630490	0		&			
ANR	2648285	Identifier	m		2630490	0					
ANR	2648286	Identifier	DB_BIT		2630490	1					
ANR	2648287	BitAndExpression	m & FD_BIT		2630490	1		&			
ANR	2648288	Identifier	m		2630490	0					
ANR	2648289	Identifier	FD_BIT		2630490	1					
ANR	2648290	CompoundStatement		3211:37:68749:68749	2630490	1					
ANR	2648291	ExpressionStatement	ao -> o = 0x0de800c0	4504:4:94614:94632	2630490	0	True				
ANR	2648292	AssignmentExpression	ao -> o = 0x0de800c0		2630490	0		=			
ANR	2648293	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648294	Identifier	ao		2630490	0					
ANR	2648295	Identifier	o		2630490	1					
ANR	2648296	PrimaryExpression	0x0de800c0		2630490	1					
ANR	2648297	ElseStatement	else		2630490	0					
ANR	2648298	CompoundStatement		3213:10:68785:68785	2630490	0					
ANR	2648299	ExpressionStatement	ao -> o = 0x8de900c0	4506:4:94650:94668	2630490	0	True				
ANR	2648300	AssignmentExpression	ao -> o = 0x8de900c0		2630490	0		=			
ANR	2648301	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648302	Identifier	ao		2630490	0					
ANR	2648303	Identifier	o		2630490	1					
ANR	2648304	PrimaryExpression	0x8de900c0		2630490	1					
ANR	2648305	ExpressionStatement	ao -> o |= num << 8	4508:3:94682:94699	2630490	3	True				
ANR	2648306	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2648307	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648308	Identifier	ao		2630490	0					
ANR	2648309	Identifier	o		2630490	1					
ANR	2648310	ShiftExpression	num << 8		2630490	1		<<			
ANR	2648311	Identifier	num		2630490	0					
ANR	2648312	PrimaryExpression	8		2630490	1					
ANR	2648313	ExpressionStatement	ao -> o |= w << 29	4509:3:94704:94720	2630490	4	True				
ANR	2648314	AssignmentExpression	ao -> o |= w << 29		2630490	0		|=			
ANR	2648315	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648316	Identifier	ao		2630490	0					
ANR	2648317	Identifier	o		2630490	1					
ANR	2648318	ShiftExpression	w << 29		2630490	1		<<			
ANR	2648319	Identifier	w		2630490	0					
ANR	2648320	PrimaryExpression	29		2630490	1					
ANR	2648321	ReturnStatement	return 4 ;	4510:3:94725:94733	2630490	5	True				
ANR	2648322	PrimaryExpression	4		2630490	0					
ANR	2648323	BreakStatement	break ;	4512:3:94750:94755	2630490	4	True				
ANR	2648324	Label	default :	4513:2:94759:94766	2630490	5	True				
ANR	2648325	Identifier	default		2630490	0					
ANR	2648326	ReturnStatement	return - 1 ;	4514:3:94771:94780	2630490	6	True				
ANR	2648327	UnaryOperationExpression	- 1		2630490	0					
ANR	2648328	UnaryOperator	-		2630490	0					
ANR	2648329	PrimaryExpression	1		2630490	1					
ANR	2648330	ElseStatement	else		2630490	0					
ANR	2648331	IfStatement	"if ( ( m = opmask ( ao -> op , ""ssat"" , SIXTEEN_BIT ) ) )"		2630490	0					
ANR	2648332	Condition	"m = opmask ( ao -> op , ""ssat"" , SIXTEEN_BIT )"	4517:5:94799:94840	2630490	0	True				
ANR	2648333	AssignmentExpression	"m = opmask ( ao -> op , ""ssat"" , SIXTEEN_BIT )"		2630490	0		=			
ANR	2648334	Identifier	m		2630490	0					
ANR	2648335	CallExpression	"opmask ( ao -> op , ""ssat"" , SIXTEEN_BIT )"		2630490	1					
ANR	2648336	Callee	opmask		2630490	0					
ANR	2648337	Identifier	opmask		2630490	0					
ANR	2648338	ArgumentList	ao -> op		2630490	1					
ANR	2648339	Argument	ao -> op		2630490	0					
ANR	2648340	PtrMemberAccess	ao -> op		2630490	0					
ANR	2648341	Identifier	ao		2630490	0					
ANR	2648342	Identifier	op		2630490	1					
ANR	2648343	Argument	"""ssat"""		2630490	1					
ANR	2648344	PrimaryExpression	"""ssat"""		2630490	0					
ANR	2648345	Argument	SIXTEEN_BIT		2630490	2					
ANR	2648346	Identifier	SIXTEEN_BIT		2630490	0					
ANR	2648347	CompoundStatement		3226:2:68988:69022	2630490	1					
ANR	2648348	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4518:2:94847:94881	2630490	0	True				
ANR	2648349	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2648350	IdentifierDeclType	ut64		2630490	0					
ANR	2648351	Identifier	argt		2630490	1					
ANR	2648352	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2648353	Identifier	argt		2630490	0					
ANR	2648354	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2648355	Callee	thumb_selector		2630490	0					
ANR	2648356	Identifier	thumb_selector		2630490	0					
ANR	2648357	ArgumentList	ao -> a		2630490	1					
ANR	2648358	Argument	ao -> a		2630490	0					
ANR	2648359	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648360	Identifier	ao		2630490	0					
ANR	2648361	Identifier	a		2630490	1					
ANR	2648362	SwitchStatement	switch ( argt )		2630490	1					
ANR	2648363	Condition	argt	4519:10:94893:94896	2630490	0	True				
ANR	2648364	Identifier	argt		2630490	0					
ANR	2648365	CompoundStatement		3227:16:69040:69040	2630490	1					
ANR	2648366	Label	case THUMB_REG_CONST_REG :	4520:2:94903:94927	2630490	0	True				
ANR	2648367	Identifier	THUMB_REG_CONST_REG		2630490	0					
ANR	2648368	CompoundStatement		3228:28:69070:69070	2630490	1					
ANR	2648369	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	4521:3:94934:94952	2630490	0	True				
ANR	2648370	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		2630490	0		=			
ANR	2648371	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2648372	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648373	Identifier	ao		2630490	0					
ANR	2648374	Identifier	a		2630490	1					
ANR	2648375	PrimaryExpression	3		2630490	1					
ANR	2648376	PrimaryExpression	"""lsl 0"""		2630490	1					
ANR	2648377	Label	case THUMB_REG_CONST_REG_SHIFT :	4524:2:94998:95028	2630490	2	True				
ANR	2648378	Identifier	THUMB_REG_CONST_REG_SHIFT		2630490	0					
ANR	2648379	CompoundStatement		3236:3:69279:69317	2630490	3					
ANR	2648380	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4525:3:95035:95063	2630490	0	True				
ANR	2648381	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2648382	IdentifierDeclType	ut8		2630490	0					
ANR	2648383	Identifier	reg1		2630490	1					
ANR	2648384	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2648385	Identifier	reg1		2630490	0					
ANR	2648386	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2648387	Callee	getreg		2630490	0					
ANR	2648388	Identifier	getreg		2630490	0					
ANR	2648389	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2648390	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2648391	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2648392	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648393	Identifier	ao		2630490	0					
ANR	2648394	Identifier	a		2630490	1					
ANR	2648395	PrimaryExpression	0		2630490	1					
ANR	2648396	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 1 ] ) - 1 ;	4526:3:95068:95100	2630490	1	True				
ANR	2648397	IdentifierDecl	num = getnum ( ao -> a [ 1 ] ) - 1		2630490	0					
ANR	2648398	IdentifierDeclType	ut32		2630490	0					
ANR	2648399	Identifier	num		2630490	1					
ANR	2648400	AssignmentExpression	num = getnum ( ao -> a [ 1 ] ) - 1		2630490	2		=			
ANR	2648401	Identifier	num		2630490	0					
ANR	2648402	AdditiveExpression	getnum ( ao -> a [ 1 ] ) - 1		2630490	1		-			
ANR	2648403	CallExpression	getnum ( ao -> a [ 1 ] )		2630490	0					
ANR	2648404	Callee	getnum		2630490	0					
ANR	2648405	Identifier	getnum		2630490	0					
ANR	2648406	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2648407	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2648408	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2648409	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648410	Identifier	ao		2630490	0					
ANR	2648411	Identifier	a		2630490	1					
ANR	2648412	PrimaryExpression	1		2630490	1					
ANR	2648413	PrimaryExpression	1		2630490	1					
ANR	2648414	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 2 ] ) ;	4527:3:95105:95133	2630490	2	True				
ANR	2648415	IdentifierDecl	reg2 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2648416	IdentifierDeclType	ut8		2630490	0					
ANR	2648417	Identifier	reg2		2630490	1					
ANR	2648418	AssignmentExpression	reg2 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2648419	Identifier	reg2		2630490	0					
ANR	2648420	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2648421	Callee	getreg		2630490	0					
ANR	2648422	Identifier	getreg		2630490	0					
ANR	2648423	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2648424	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2648425	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2648426	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648427	Identifier	ao		2630490	0					
ANR	2648428	Identifier	a		2630490	1					
ANR	2648429	PrimaryExpression	2		2630490	1					
ANR	2648430	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 3 ] ) ;	4528:3:95138:95176	2630490	3	True				
ANR	2648431	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 3 ] )		2630490	0					
ANR	2648432	IdentifierDeclType	ut32		2630490	0					
ANR	2648433	Identifier	shift		2630490	1					
ANR	2648434	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2648435	Identifier	shift		2630490	0					
ANR	2648436	CallExpression	thumb_getshift ( ao -> a [ 3 ] )		2630490	1					
ANR	2648437	Callee	thumb_getshift		2630490	0					
ANR	2648438	Identifier	thumb_getshift		2630490	0					
ANR	2648439	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2648440	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2648441	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2648442	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648443	Identifier	ao		2630490	0					
ANR	2648444	Identifier	a		2630490	1					
ANR	2648445	PrimaryExpression	3		2630490	1					
ANR	2648446	IfStatement	if ( err || ( reg1 > 15 ) || ( reg2 > 15 ) || ( num > 31 ) || ( shift & 0x00001000 ) || ( ( m & SIXTEEN_BIT ) && shift ) )		2630490	4					
ANR	2648447	Condition	err || ( reg1 > 15 ) || ( reg2 > 15 ) || ( num > 31 ) || ( shift & 0x00001000 ) || ( ( m & SIXTEEN_BIT ) && shift )	4530:7:95186:95288	2630490	0	True				
ANR	2648448	OrExpression	err || ( reg1 > 15 ) || ( reg2 > 15 ) || ( num > 31 ) || ( shift & 0x00001000 ) || ( ( m & SIXTEEN_BIT ) && shift )		2630490	0		||			
ANR	2648449	Identifier	err		2630490	0					
ANR	2648450	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( num > 31 ) || ( shift & 0x00001000 ) || ( ( m & SIXTEEN_BIT ) && shift )		2630490	1		||			
ANR	2648451	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2648452	Identifier	reg1		2630490	0					
ANR	2648453	PrimaryExpression	15		2630490	1					
ANR	2648454	OrExpression	( reg2 > 15 ) || ( num > 31 ) || ( shift & 0x00001000 ) || ( ( m & SIXTEEN_BIT ) && shift )		2630490	1		||			
ANR	2648455	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2648456	Identifier	reg2		2630490	0					
ANR	2648457	PrimaryExpression	15		2630490	1					
ANR	2648458	OrExpression	( num > 31 ) || ( shift & 0x00001000 ) || ( ( m & SIXTEEN_BIT ) && shift )		2630490	1		||			
ANR	2648459	RelationalExpression	num > 31		2630490	0		>			
ANR	2648460	Identifier	num		2630490	0					
ANR	2648461	PrimaryExpression	31		2630490	1					
ANR	2648462	OrExpression	( shift & 0x00001000 ) || ( ( m & SIXTEEN_BIT ) && shift )		2630490	1		||			
ANR	2648463	BitAndExpression	shift & 0x00001000		2630490	0		&			
ANR	2648464	Identifier	shift		2630490	0					
ANR	2648465	PrimaryExpression	0x00001000		2630490	1					
ANR	2648466	AndExpression	( m & SIXTEEN_BIT ) && shift		2630490	1		&&			
ANR	2648467	BitAndExpression	m & SIXTEEN_BIT		2630490	0		&			
ANR	2648468	Identifier	m		2630490	0					
ANR	2648469	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2648470	Identifier	shift		2630490	1					
ANR	2648471	CompoundStatement		3238:112:69432:69432	2630490	1					
ANR	2648472	ReturnStatement	return - 1 ;	4531:4:95297:95306	2630490	0	True				
ANR	2648473	UnaryOperationExpression	- 1		2630490	0					
ANR	2648474	UnaryOperator	-		2630490	0					
ANR	2648475	PrimaryExpression	1		2630490	1					
ANR	2648476	IfStatement	if ( shift & 0x00002000 )		2630490	5					
ANR	2648477	Condition	shift & 0x00002000	4534:7:95321:95338	2630490	0	True				
ANR	2648478	BitAndExpression	shift & 0x00002000		2630490	0		&			
ANR	2648479	Identifier	shift		2630490	0					
ANR	2648480	PrimaryExpression	0x00002000		2630490	1					
ANR	2648481	CompoundStatement		3242:27:69482:69482	2630490	1					
ANR	2648482	ExpressionStatement	shift |= 0x20000000	4535:4:95347:95366	2630490	0	True				
ANR	2648483	AssignmentExpression	shift |= 0x20000000		2630490	0		|=			
ANR	2648484	Identifier	shift		2630490	0					
ANR	2648485	PrimaryExpression	0x20000000		2630490	1					
ANR	2648486	ExpressionStatement	shift &= 0xffffdfff	4536:4:95372:95391	2630490	1	True				
ANR	2648487	AssignmentExpression	shift &= 0xffffdfff		2630490	0		&=			
ANR	2648488	Identifier	shift		2630490	0					
ANR	2648489	PrimaryExpression	0xffffdfff		2630490	1					
ANR	2648490	IfStatement	if ( m & SIXTEEN_BIT )		2630490	6					
ANR	2648491	Condition	m & SIXTEEN_BIT	4539:7:95406:95420	2630490	0	True				
ANR	2648492	BitAndExpression	m & SIXTEEN_BIT		2630490	0		&			
ANR	2648493	Identifier	m		2630490	0					
ANR	2648494	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2648495	CompoundStatement		3247:24:69564:69564	2630490	1					
ANR	2648496	ExpressionStatement	ao -> o = 0x20f30000	4540:4:95429:95447	2630490	0	True				
ANR	2648497	AssignmentExpression	ao -> o = 0x20f30000		2630490	0		=			
ANR	2648498	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648499	Identifier	ao		2630490	0					
ANR	2648500	Identifier	o		2630490	1					
ANR	2648501	PrimaryExpression	0x20f30000		2630490	1					
ANR	2648502	ElseStatement	else		2630490	0					
ANR	2648503	CompoundStatement		3249:10:69600:69600	2630490	0					
ANR	2648504	ExpressionStatement	ao -> o = 0x00f30000	4542:4:95465:95483	2630490	0	True				
ANR	2648505	AssignmentExpression	ao -> o = 0x00f30000		2630490	0		=			
ANR	2648506	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648507	Identifier	ao		2630490	0					
ANR	2648508	Identifier	o		2630490	1					
ANR	2648509	PrimaryExpression	0x00f30000		2630490	1					
ANR	2648510	ExpressionStatement	ao -> o |= reg1	4545:3:95494:95507	2630490	7	True				
ANR	2648511	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2648512	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648513	Identifier	ao		2630490	0					
ANR	2648514	Identifier	o		2630490	1					
ANR	2648515	Identifier	reg1		2630490	1					
ANR	2648516	ExpressionStatement	ao -> o |= reg2 << 24	4546:3:95512:95531	2630490	8	True				
ANR	2648517	AssignmentExpression	ao -> o |= reg2 << 24		2630490	0		|=			
ANR	2648518	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648519	Identifier	ao		2630490	0					
ANR	2648520	Identifier	o		2630490	1					
ANR	2648521	ShiftExpression	reg2 << 24		2630490	1		<<			
ANR	2648522	Identifier	reg2		2630490	0					
ANR	2648523	PrimaryExpression	24		2630490	1					
ANR	2648524	ExpressionStatement	ao -> o |= num << 8	4547:3:95536:95553	2630490	9	True				
ANR	2648525	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2648526	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648527	Identifier	ao		2630490	0					
ANR	2648528	Identifier	o		2630490	1					
ANR	2648529	ShiftExpression	num << 8		2630490	1		<<			
ANR	2648530	Identifier	num		2630490	0					
ANR	2648531	PrimaryExpression	8		2630490	1					
ANR	2648532	ExpressionStatement	ao -> o |= shift	4548:3:95558:95572	2630490	10	True				
ANR	2648533	AssignmentExpression	ao -> o |= shift		2630490	0		|=			
ANR	2648534	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648535	Identifier	ao		2630490	0					
ANR	2648536	Identifier	o		2630490	1					
ANR	2648537	Identifier	shift		2630490	1					
ANR	2648538	ReturnStatement	return 4 ;	4549:3:95577:95585	2630490	11	True				
ANR	2648539	PrimaryExpression	4		2630490	0					
ANR	2648540	BreakStatement	break ;	4551:3:95602:95607	2630490	4	True				
ANR	2648541	Label	default :	4552:2:95611:95618	2630490	5	True				
ANR	2648542	Identifier	default		2630490	0					
ANR	2648543	ReturnStatement	return - 1 ;	4553:3:95623:95632	2630490	6	True				
ANR	2648544	UnaryOperationExpression	- 1		2630490	0					
ANR	2648545	UnaryOperator	-		2630490	0					
ANR	2648546	PrimaryExpression	1		2630490	1					
ANR	2648547	ElseStatement	else		2630490	0					
ANR	2648548	IfStatement	"if ( ( m = opmask ( ao -> op , ""ssax"" , 0 ) ) )"		2630490	0					
ANR	2648549	Condition	"m = opmask ( ao -> op , ""ssax"" , 0 )"	4556:5:95651:95682	2630490	0	True				
ANR	2648550	AssignmentExpression	"m = opmask ( ao -> op , ""ssax"" , 0 )"		2630490	0		=			
ANR	2648551	Identifier	m		2630490	0					
ANR	2648552	CallExpression	"opmask ( ao -> op , ""ssax"" , 0 )"		2630490	1					
ANR	2648553	Callee	opmask		2630490	0					
ANR	2648554	Identifier	opmask		2630490	0					
ANR	2648555	ArgumentList	ao -> op		2630490	1					
ANR	2648556	Argument	ao -> op		2630490	0					
ANR	2648557	PtrMemberAccess	ao -> op		2630490	0					
ANR	2648558	Identifier	ao		2630490	0					
ANR	2648559	Identifier	op		2630490	1					
ANR	2648560	Argument	"""ssax"""		2630490	1					
ANR	2648561	PrimaryExpression	"""ssax"""		2630490	0					
ANR	2648562	Argument	0		2630490	2					
ANR	2648563	PrimaryExpression	0		2630490	0					
ANR	2648564	CompoundStatement		3265:2:69830:69864	2630490	1					
ANR	2648565	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4557:2:95689:95723	2630490	0	True				
ANR	2648566	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2648567	IdentifierDeclType	ut64		2630490	0					
ANR	2648568	Identifier	argt		2630490	1					
ANR	2648569	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2648570	Identifier	argt		2630490	0					
ANR	2648571	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2648572	Callee	thumb_selector		2630490	0					
ANR	2648573	Identifier	thumb_selector		2630490	0					
ANR	2648574	ArgumentList	ao -> a		2630490	1					
ANR	2648575	Argument	ao -> a		2630490	0					
ANR	2648576	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648577	Identifier	ao		2630490	0					
ANR	2648578	Identifier	a		2630490	1					
ANR	2648579	SwitchStatement	switch ( argt )		2630490	1					
ANR	2648580	Condition	argt	4558:10:95735:95738	2630490	0	True				
ANR	2648581	Identifier	argt		2630490	0					
ANR	2648582	CompoundStatement		3266:16:69882:69882	2630490	1					
ANR	2648583	Label	case THUMB_REG_REG :	4559:2:95745:95763	2630490	0	True				
ANR	2648584	Identifier	THUMB_REG_REG		2630490	0					
ANR	2648585	CompoundStatement		3267:22:69906:69906	2630490	1					
ANR	2648586	ExpressionStatement	std_opt_2 ( ao )	4560:3:95770:95784	2630490	0	True				
ANR	2648587	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2648588	Callee	std_opt_2		2630490	0					
ANR	2648589	Identifier	std_opt_2		2630490	0					
ANR	2648590	ArgumentList	ao		2630490	1					
ANR	2648591	Argument	ao		2630490	0					
ANR	2648592	Identifier	ao		2630490	0					
ANR	2648593	Label	case THUMB_REG_REG_REG :	4563:2:95830:95852	2630490	2	True				
ANR	2648594	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2648595	CompoundStatement		3271:26:69995:69995	2630490	3					
ANR	2648596	ExpressionStatement	ao -> o = 0xe0fa00f0	4564:3:95859:95877	2630490	0	True				
ANR	2648597	AssignmentExpression	ao -> o = 0xe0fa00f0		2630490	0		=			
ANR	2648598	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648599	Identifier	ao		2630490	0					
ANR	2648600	Identifier	o		2630490	1					
ANR	2648601	PrimaryExpression	0xe0fa00f0		2630490	1					
ANR	2648602	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4565:3:95882:95918	2630490	1	True				
ANR	2648603	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2648604	Callee	std_32bit_3reg		2630490	0					
ANR	2648605	Identifier	std_32bit_3reg		2630490	0					
ANR	2648606	ArgumentList	ao		2630490	1					
ANR	2648607	Argument	ao		2630490	0					
ANR	2648608	Identifier	ao		2630490	0					
ANR	2648609	Argument	m		2630490	1					
ANR	2648610	Identifier	m		2630490	0					
ANR	2648611	Argument	false		2630490	2					
ANR	2648612	Identifier	false		2630490	0					
ANR	2648613	BreakStatement	break ;	4567:3:95935:95940	2630490	4	True				
ANR	2648614	Label	default :	4568:2:95944:95951	2630490	5	True				
ANR	2648615	Identifier	default		2630490	0					
ANR	2648616	ReturnStatement	return - 1 ;	4569:3:95956:95965	2630490	6	True				
ANR	2648617	UnaryOperationExpression	- 1		2630490	0					
ANR	2648618	UnaryOperator	-		2630490	0					
ANR	2648619	PrimaryExpression	1		2630490	1					
ANR	2648620	ElseStatement	else		2630490	0					
ANR	2648621	IfStatement	"if ( ( m = opmask ( ao -> op , ""ssub"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		2630490	0					
ANR	2648622	Condition	"m = opmask ( ao -> op , ""ssub"" , EIGHT_BIT | SIXTEEN_BIT )"	4572:5:95984:96037	2630490	0	True				
ANR	2648623	AssignmentExpression	"m = opmask ( ao -> op , ""ssub"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	0		=			
ANR	2648624	Identifier	m		2630490	0					
ANR	2648625	CallExpression	"opmask ( ao -> op , ""ssub"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	1					
ANR	2648626	Callee	opmask		2630490	0					
ANR	2648627	Identifier	opmask		2630490	0					
ANR	2648628	ArgumentList	ao -> op		2630490	1					
ANR	2648629	Argument	ao -> op		2630490	0					
ANR	2648630	PtrMemberAccess	ao -> op		2630490	0					
ANR	2648631	Identifier	ao		2630490	0					
ANR	2648632	Identifier	op		2630490	1					
ANR	2648633	Argument	"""ssub"""		2630490	1					
ANR	2648634	PrimaryExpression	"""ssub"""		2630490	0					
ANR	2648635	Argument	EIGHT_BIT | SIXTEEN_BIT		2630490	2					
ANR	2648636	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		2630490	0		|			
ANR	2648637	Identifier	EIGHT_BIT		2630490	0					
ANR	2648638	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2648639	CompoundStatement		3281:2:70185:70219	2630490	1					
ANR	2648640	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4573:2:96044:96078	2630490	0	True				
ANR	2648641	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2648642	IdentifierDeclType	ut64		2630490	0					
ANR	2648643	Identifier	argt		2630490	1					
ANR	2648644	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2648645	Identifier	argt		2630490	0					
ANR	2648646	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2648647	Callee	thumb_selector		2630490	0					
ANR	2648648	Identifier	thumb_selector		2630490	0					
ANR	2648649	ArgumentList	ao -> a		2630490	1					
ANR	2648650	Argument	ao -> a		2630490	0					
ANR	2648651	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648652	Identifier	ao		2630490	0					
ANR	2648653	Identifier	a		2630490	1					
ANR	2648654	SwitchStatement	switch ( argt )		2630490	1					
ANR	2648655	Condition	argt	4574:10:96090:96093	2630490	0	True				
ANR	2648656	Identifier	argt		2630490	0					
ANR	2648657	CompoundStatement		3282:16:70237:70237	2630490	1					
ANR	2648658	Label	case THUMB_REG_REG :	4575:2:96100:96118	2630490	0	True				
ANR	2648659	Identifier	THUMB_REG_REG		2630490	0					
ANR	2648660	CompoundStatement		3283:22:70261:70261	2630490	1					
ANR	2648661	ExpressionStatement	std_opt_2 ( ao )	4576:3:96125:96139	2630490	0	True				
ANR	2648662	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2648663	Callee	std_opt_2		2630490	0					
ANR	2648664	Identifier	std_opt_2		2630490	0					
ANR	2648665	ArgumentList	ao		2630490	1					
ANR	2648666	Argument	ao		2630490	0					
ANR	2648667	Identifier	ao		2630490	0					
ANR	2648668	Label	case THUMB_REG_REG_REG :	4579:2:96185:96207	2630490	2	True				
ANR	2648669	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2648670	CompoundStatement		3287:26:70350:70350	2630490	3					
ANR	2648671	IfStatement	if ( m & EIGHT_BIT )		2630490	0					
ANR	2648672	Condition	m & EIGHT_BIT	4580:7:96218:96230	2630490	0	True				
ANR	2648673	BitAndExpression	m & EIGHT_BIT		2630490	0		&			
ANR	2648674	Identifier	m		2630490	0					
ANR	2648675	Identifier	EIGHT_BIT		2630490	1					
ANR	2648676	CompoundStatement		3288:22:70374:70374	2630490	1					
ANR	2648677	ExpressionStatement	ao -> o = 0xc0fa00f0	4581:4:96239:96257	2630490	0	True				
ANR	2648678	AssignmentExpression	ao -> o = 0xc0fa00f0		2630490	0		=			
ANR	2648679	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648680	Identifier	ao		2630490	0					
ANR	2648681	Identifier	o		2630490	1					
ANR	2648682	PrimaryExpression	0xc0fa00f0		2630490	1					
ANR	2648683	ElseStatement	else		2630490	0					
ANR	2648684	IfStatement	if ( m & SIXTEEN_BIT )		2630490	0					
ANR	2648685	Condition	m & SIXTEEN_BIT	4583:7:96276:96290	2630490	0	True				
ANR	2648686	BitAndExpression	m & SIXTEEN_BIT		2630490	0		&			
ANR	2648687	Identifier	m		2630490	0					
ANR	2648688	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2648689	CompoundStatement		3291:24:70434:70434	2630490	1					
ANR	2648690	ExpressionStatement	ao -> o = 0xd0fa00f0	4584:4:96299:96317	2630490	0	True				
ANR	2648691	AssignmentExpression	ao -> o = 0xd0fa00f0		2630490	0		=			
ANR	2648692	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648693	Identifier	ao		2630490	0					
ANR	2648694	Identifier	o		2630490	1					
ANR	2648695	PrimaryExpression	0xd0fa00f0		2630490	1					
ANR	2648696	ElseStatement	else		2630490	0					
ANR	2648697	CompoundStatement		3293:10:70470:70470	2630490	0					
ANR	2648698	ReturnStatement	return - 1 ;	4586:4:96335:96344	2630490	0	True				
ANR	2648699	UnaryOperationExpression	- 1		2630490	0					
ANR	2648700	UnaryOperator	-		2630490	0					
ANR	2648701	PrimaryExpression	1		2630490	1					
ANR	2648702	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	4588:3:96354:96390	2630490	1	True				
ANR	2648703	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2648704	Callee	std_32bit_3reg		2630490	0					
ANR	2648705	Identifier	std_32bit_3reg		2630490	0					
ANR	2648706	ArgumentList	ao		2630490	1					
ANR	2648707	Argument	ao		2630490	0					
ANR	2648708	Identifier	ao		2630490	0					
ANR	2648709	Argument	m		2630490	1					
ANR	2648710	Identifier	m		2630490	0					
ANR	2648711	Argument	false		2630490	2					
ANR	2648712	Identifier	false		2630490	0					
ANR	2648713	BreakStatement	break ;	4590:3:96407:96412	2630490	4	True				
ANR	2648714	Label	default :	4591:2:96416:96423	2630490	5	True				
ANR	2648715	Identifier	default		2630490	0					
ANR	2648716	ReturnStatement	return - 1 ;	4592:3:96428:96437	2630490	6	True				
ANR	2648717	UnaryOperationExpression	- 1		2630490	0					
ANR	2648718	UnaryOperator	-		2630490	0					
ANR	2648719	PrimaryExpression	1		2630490	1					
ANR	2648720	ElseStatement	else		2630490	0					
ANR	2648721	IfStatement	"if ( ( m = opmask ( ao -> op , ""stc"" , L_BIT | TWO_BIT ) ) )"		2630490	0					
ANR	2648722	Condition	"m = opmask ( ao -> op , ""stc"" , L_BIT | TWO_BIT )"	4594:12:96455:96499	2630490	0	True				
ANR	2648723	AssignmentExpression	"m = opmask ( ao -> op , ""stc"" , L_BIT | TWO_BIT )"		2630490	0		=			
ANR	2648724	Identifier	m		2630490	0					
ANR	2648725	CallExpression	"opmask ( ao -> op , ""stc"" , L_BIT | TWO_BIT )"		2630490	1					
ANR	2648726	Callee	opmask		2630490	0					
ANR	2648727	Identifier	opmask		2630490	0					
ANR	2648728	ArgumentList	ao -> op		2630490	1					
ANR	2648729	Argument	ao -> op		2630490	0					
ANR	2648730	PtrMemberAccess	ao -> op		2630490	0					
ANR	2648731	Identifier	ao		2630490	0					
ANR	2648732	Identifier	op		2630490	1					
ANR	2648733	Argument	"""stc"""		2630490	1					
ANR	2648734	PrimaryExpression	"""stc"""		2630490	0					
ANR	2648735	Argument	L_BIT | TWO_BIT		2630490	2					
ANR	2648736	InclusiveOrExpression	L_BIT | TWO_BIT		2630490	0		|			
ANR	2648737	Identifier	L_BIT		2630490	0					
ANR	2648738	Identifier	TWO_BIT		2630490	1					
ANR	2648739	CompoundStatement		3303:2:70647:70681	2630490	1					
ANR	2648740	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4595:2:96506:96540	2630490	0	True				
ANR	2648741	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2648742	IdentifierDeclType	ut64		2630490	0					
ANR	2648743	Identifier	argt		2630490	1					
ANR	2648744	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2648745	Identifier	argt		2630490	0					
ANR	2648746	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2648747	Callee	thumb_selector		2630490	0					
ANR	2648748	Identifier	thumb_selector		2630490	0					
ANR	2648749	ArgumentList	ao -> a		2630490	1					
ANR	2648750	Argument	ao -> a		2630490	0					
ANR	2648751	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648752	Identifier	ao		2630490	0					
ANR	2648753	Identifier	a		2630490	1					
ANR	2648754	SwitchStatement	switch ( argt )		2630490	1					
ANR	2648755	Condition	argt	4596:10:96552:96555	2630490	0	True				
ANR	2648756	Identifier	argt		2630490	0					
ANR	2648757	CompoundStatement		3304:16:70699:70699	2630490	1					
ANR	2648758	Label	case THUMB_COPROC_COREG_BRACKREGBRACK :	4597:2:96562:96599	2630490	0	True				
ANR	2648759	Identifier	THUMB_COPROC_COREG_BRACKREGBRACK		2630490	0					
ANR	2648760	CompoundStatement		3305:41:70742:70742	2630490	1					
ANR	2648761	ExpressionStatement	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'	4598:3:96606:96644	2630490	0	True				
ANR	2648762	AssignmentExpression	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'		2630490	0		=			
ANR	2648763	ArrayIndexing	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ]		2630490	0					
ANR	2648764	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2648765	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648766	Identifier	ao		2630490	0					
ANR	2648767	Identifier	a		2630490	1					
ANR	2648768	PrimaryExpression	2		2630490	1					
ANR	2648769	AdditiveExpression	strlen ( ao -> a [ 2 ] ) - 1		2630490	1		-			
ANR	2648770	CallExpression	strlen ( ao -> a [ 2 ] )		2630490	0					
ANR	2648771	Callee	strlen		2630490	0					
ANR	2648772	Identifier	strlen		2630490	0					
ANR	2648773	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2648774	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2648775	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2648776	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648777	Identifier	ao		2630490	0					
ANR	2648778	Identifier	a		2630490	1					
ANR	2648779	PrimaryExpression	2		2630490	1					
ANR	2648780	PrimaryExpression	1		2630490	1					
ANR	2648781	PrimaryExpression	'\\0'		2630490	1					
ANR	2648782	ExpressionStatement	"ao -> a [ 3 ] = ""0]"""	4599:3:96649:96664	2630490	1	True				
ANR	2648783	AssignmentExpression	"ao -> a [ 3 ] = ""0]"""		2630490	0		=			
ANR	2648784	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2648785	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648786	Identifier	ao		2630490	0					
ANR	2648787	Identifier	a		2630490	1					
ANR	2648788	PrimaryExpression	3		2630490	1					
ANR	2648789	PrimaryExpression	"""0]"""		2630490	1					
ANR	2648790	Label	case THUMB_COPROC_COREG_BRACKREG_CONSTBRACK :	4602:2:96710:96753	2630490	2	True				
ANR	2648791	Identifier	THUMB_COPROC_COREG_BRACKREG_CONSTBRACK		2630490	0					
ANR	2648792	CompoundStatement		3314:3:71019:71053	2630490	3					
ANR	2648793	IdentifierDeclStatement	ut8 coproc = getcoproc ( ao -> a [ 0 ] ) ;	4603:3:96760:96793	2630490	0	True				
ANR	2648794	IdentifierDecl	coproc = getcoproc ( ao -> a [ 0 ] )		2630490	0					
ANR	2648795	IdentifierDeclType	ut8		2630490	0					
ANR	2648796	Identifier	coproc		2630490	1					
ANR	2648797	AssignmentExpression	coproc = getcoproc ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2648798	Identifier	coproc		2630490	0					
ANR	2648799	CallExpression	getcoproc ( ao -> a [ 0 ] )		2630490	1					
ANR	2648800	Callee	getcoproc		2630490	0					
ANR	2648801	Identifier	getcoproc		2630490	0					
ANR	2648802	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2648803	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2648804	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2648805	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648806	Identifier	ao		2630490	0					
ANR	2648807	Identifier	a		2630490	1					
ANR	2648808	PrimaryExpression	0		2630490	1					
ANR	2648809	IdentifierDeclStatement	ut8 coreg = getcoprocreg ( ao -> a [ 1 ] ) ;	4604:3:96798:96833	2630490	1	True				
ANR	2648810	IdentifierDecl	coreg = getcoprocreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2648811	IdentifierDeclType	ut8		2630490	0					
ANR	2648812	Identifier	coreg		2630490	1					
ANR	2648813	AssignmentExpression	coreg = getcoprocreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2648814	Identifier	coreg		2630490	0					
ANR	2648815	CallExpression	getcoprocreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2648816	Callee	getcoprocreg		2630490	0					
ANR	2648817	Identifier	getcoprocreg		2630490	0					
ANR	2648818	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2648819	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2648820	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2648821	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648822	Identifier	ao		2630490	0					
ANR	2648823	Identifier	a		2630490	1					
ANR	2648824	PrimaryExpression	1		2630490	1					
ANR	2648825	IdentifierDeclStatement	ut8 reg = getregmemstart ( ao -> a [ 2 ] ) ;	4605:3:96838:96873	2630490	2	True				
ANR	2648826	IdentifierDecl	reg = getregmemstart ( ao -> a [ 2 ] )		2630490	0					
ANR	2648827	IdentifierDeclType	ut8		2630490	0					
ANR	2648828	Identifier	reg		2630490	1					
ANR	2648829	AssignmentExpression	reg = getregmemstart ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2648830	Identifier	reg		2630490	0					
ANR	2648831	CallExpression	getregmemstart ( ao -> a [ 2 ] )		2630490	1					
ANR	2648832	Callee	getregmemstart		2630490	0					
ANR	2648833	Identifier	getregmemstart		2630490	0					
ANR	2648834	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2648835	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2648836	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2648837	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648838	Identifier	ao		2630490	0					
ANR	2648839	Identifier	a		2630490	1					
ANR	2648840	PrimaryExpression	2		2630490	1					
ANR	2648841	IdentifierDeclStatement	st32 num = getnummemend ( ao -> a [ 3 ] ) ;	4606:3:96878:96912	2630490	3	True				
ANR	2648842	IdentifierDecl	num = getnummemend ( ao -> a [ 3 ] )		2630490	0					
ANR	2648843	IdentifierDeclType	st32		2630490	0					
ANR	2648844	Identifier	num		2630490	1					
ANR	2648845	AssignmentExpression	num = getnummemend ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2648846	Identifier	num		2630490	0					
ANR	2648847	CallExpression	getnummemend ( ao -> a [ 3 ] )		2630490	1					
ANR	2648848	Callee	getnummemend		2630490	0					
ANR	2648849	Identifier	getnummemend		2630490	0					
ANR	2648850	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2648851	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2648852	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2648853	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648854	Identifier	ao		2630490	0					
ANR	2648855	Identifier	a		2630490	1					
ANR	2648856	PrimaryExpression	3		2630490	1					
ANR	2648857	IfStatement	if ( ( coproc > 15 ) || ( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 ) )		2630490	4					
ANR	2648858	Condition	( coproc > 15 ) || ( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )	4608:7:96922:97015	2630490	0	True				
ANR	2648859	OrExpression	( coproc > 15 ) || ( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		2630490	0		||			
ANR	2648860	RelationalExpression	coproc > 15		2630490	0		>			
ANR	2648861	Identifier	coproc		2630490	0					
ANR	2648862	PrimaryExpression	15		2630490	1					
ANR	2648863	OrExpression	( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		2630490	1		||			
ANR	2648864	RelationalExpression	coreg > 15		2630490	0		>			
ANR	2648865	Identifier	coreg		2630490	0					
ANR	2648866	PrimaryExpression	15		2630490	1					
ANR	2648867	OrExpression	( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		2630490	1		||			
ANR	2648868	RelationalExpression	reg > 15		2630490	0		>			
ANR	2648869	Identifier	reg		2630490	0					
ANR	2648870	PrimaryExpression	15		2630490	1					
ANR	2648871	OrExpression	( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		2630490	1		||			
ANR	2648872	RelationalExpression	num > 4092		2630490	0		>			
ANR	2648873	Identifier	num		2630490	0					
ANR	2648874	PrimaryExpression	4092		2630490	1					
ANR	2648875	OrExpression	( num < - 4092 ) || ( num % 4 != 0 )		2630490	1		||			
ANR	2648876	RelationalExpression	num < - 4092		2630490	0		<			
ANR	2648877	Identifier	num		2630490	0					
ANR	2648878	UnaryOperationExpression	- 4092		2630490	1					
ANR	2648879	UnaryOperator	-		2630490	0					
ANR	2648880	PrimaryExpression	4092		2630490	1					
ANR	2648881	EqualityExpression	num % 4 != 0		2630490	1		!=			
ANR	2648882	MultiplicativeExpression	num % 4		2630490	0		%			
ANR	2648883	Identifier	num		2630490	0					
ANR	2648884	PrimaryExpression	4		2630490	1					
ANR	2648885	PrimaryExpression	0		2630490	1					
ANR	2648886	CompoundStatement		3316:103:71159:71159	2630490	1					
ANR	2648887	ReturnStatement	return - 1 ;	4609:4:97024:97033	2630490	0	True				
ANR	2648888	UnaryOperationExpression	- 1		2630490	0					
ANR	2648889	UnaryOperator	-		2630490	0					
ANR	2648890	PrimaryExpression	1		2630490	1					
ANR	2648891	ExpressionStatement	ao -> o = 0x00ed0000	4612:3:97046:97064	2630490	5	True				
ANR	2648892	AssignmentExpression	ao -> o = 0x00ed0000		2630490	0		=			
ANR	2648893	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648894	Identifier	ao		2630490	0					
ANR	2648895	Identifier	o		2630490	1					
ANR	2648896	PrimaryExpression	0x00ed0000		2630490	1					
ANR	2648897	IfStatement	if ( m & L_BIT )		2630490	6					
ANR	2648898	Condition	m & L_BIT	4613:7:97073:97081	2630490	0	True				
ANR	2648899	BitAndExpression	m & L_BIT		2630490	0		&			
ANR	2648900	Identifier	m		2630490	0					
ANR	2648901	Identifier	L_BIT		2630490	1					
ANR	2648902	CompoundStatement		3321:18:71225:71225	2630490	1					
ANR	2648903	ExpressionStatement	ao -> o |= 1 << 30	4614:4:97090:97106	2630490	0	True				
ANR	2648904	AssignmentExpression	ao -> o |= 1 << 30		2630490	0		|=			
ANR	2648905	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648906	Identifier	ao		2630490	0					
ANR	2648907	Identifier	o		2630490	1					
ANR	2648908	ShiftExpression	1 << 30		2630490	1		<<			
ANR	2648909	PrimaryExpression	1		2630490	0					
ANR	2648910	PrimaryExpression	30		2630490	1					
ANR	2648911	IfStatement	if ( m & TWO_BIT )		2630490	7					
ANR	2648912	Condition	m & TWO_BIT	4616:7:97120:97130	2630490	0	True				
ANR	2648913	BitAndExpression	m & TWO_BIT		2630490	0		&			
ANR	2648914	Identifier	m		2630490	0					
ANR	2648915	Identifier	TWO_BIT		2630490	1					
ANR	2648916	CompoundStatement		3324:20:71274:71274	2630490	1					
ANR	2648917	ExpressionStatement	ao -> o |= 1 << 20	4617:4:97139:97155	2630490	0	True				
ANR	2648918	AssignmentExpression	ao -> o |= 1 << 20		2630490	0		|=			
ANR	2648919	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648920	Identifier	ao		2630490	0					
ANR	2648921	Identifier	o		2630490	1					
ANR	2648922	ShiftExpression	1 << 20		2630490	1		<<			
ANR	2648923	PrimaryExpression	1		2630490	0					
ANR	2648924	PrimaryExpression	20		2630490	1					
ANR	2648925	IfStatement	if ( num < 0 )		2630490	8					
ANR	2648926	Condition	num < 0	4619:7:97169:97175	2630490	0	True				
ANR	2648927	RelationalExpression	num < 0		2630490	0		<			
ANR	2648928	Identifier	num		2630490	0					
ANR	2648929	PrimaryExpression	0		2630490	1					
ANR	2648930	CompoundStatement		3327:16:71319:71319	2630490	1					
ANR	2648931	ExpressionStatement	num = - num	4620:4:97184:97194	2630490	0	True				
ANR	2648932	AssignmentExpression	num = - num		2630490	0		=			
ANR	2648933	Identifier	num		2630490	0					
ANR	2648934	UnaryOperationExpression	- num		2630490	1					
ANR	2648935	UnaryOperator	-		2630490	0					
ANR	2648936	Identifier	num		2630490	1					
ANR	2648937	ElseStatement	else		2630490	0					
ANR	2648938	CompoundStatement		3329:10:71347:71347	2630490	0					
ANR	2648939	ExpressionStatement	ao -> o |= 1 << 31	4622:4:97212:97228	2630490	0	True				
ANR	2648940	AssignmentExpression	ao -> o |= 1 << 31		2630490	0		|=			
ANR	2648941	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648942	Identifier	ao		2630490	0					
ANR	2648943	Identifier	o		2630490	1					
ANR	2648944	ShiftExpression	1 << 31		2630490	1		<<			
ANR	2648945	PrimaryExpression	1		2630490	0					
ANR	2648946	PrimaryExpression	31		2630490	1					
ANR	2648947	ExpressionStatement	ao -> o |= coproc	4624:3:97242:97257	2630490	9	True				
ANR	2648948	AssignmentExpression	ao -> o |= coproc		2630490	0		|=			
ANR	2648949	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648950	Identifier	ao		2630490	0					
ANR	2648951	Identifier	o		2630490	1					
ANR	2648952	Identifier	coproc		2630490	1					
ANR	2648953	ExpressionStatement	ao -> o |= coreg << 4	4625:3:97262:97281	2630490	10	True				
ANR	2648954	AssignmentExpression	ao -> o |= coreg << 4		2630490	0		|=			
ANR	2648955	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648956	Identifier	ao		2630490	0					
ANR	2648957	Identifier	o		2630490	1					
ANR	2648958	ShiftExpression	coreg << 4		2630490	1		<<			
ANR	2648959	Identifier	coreg		2630490	0					
ANR	2648960	PrimaryExpression	4		2630490	1					
ANR	2648961	ExpressionStatement	ao -> o |= reg << 24	4626:3:97286:97304	2630490	11	True				
ANR	2648962	AssignmentExpression	ao -> o |= reg << 24		2630490	0		|=			
ANR	2648963	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648964	Identifier	ao		2630490	0					
ANR	2648965	Identifier	o		2630490	1					
ANR	2648966	ShiftExpression	reg << 24		2630490	1		<<			
ANR	2648967	Identifier	reg		2630490	0					
ANR	2648968	PrimaryExpression	24		2630490	1					
ANR	2648969	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	4627:3:97309:97333	2630490	12	True				
ANR	2648970	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		2630490	0		|=			
ANR	2648971	PtrMemberAccess	ao -> o		2630490	0					
ANR	2648972	Identifier	ao		2630490	0					
ANR	2648973	Identifier	o		2630490	1					
ANR	2648974	ShiftExpression	( num >> 2 ) << 8		2630490	1		<<			
ANR	2648975	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2648976	Identifier	num		2630490	0					
ANR	2648977	PrimaryExpression	2		2630490	1					
ANR	2648978	PrimaryExpression	8		2630490	1					
ANR	2648979	ReturnStatement	return 4 ;	4628:3:97338:97346	2630490	13	True				
ANR	2648980	PrimaryExpression	4		2630490	0					
ANR	2648981	BreakStatement	break ;	4630:3:97363:97368	2630490	4	True				
ANR	2648982	Label	case THUMB_COPROC_COREG_BRACKREGBRACK_CONST :	4631:2:97372:97415	2630490	5	True				
ANR	2648983	Identifier	THUMB_COPROC_COREG_BRACKREGBRACK_CONST		2630490	0					
ANR	2648984	CompoundStatement		3343:3:71684:71712	2630490	6					
ANR	2648985	IdentifierDeclStatement	ut8 coproc = getcoproc ( ao -> a [ 0 ] ) ;	4632:3:97422:97455	2630490	0	True				
ANR	2648986	IdentifierDecl	coproc = getcoproc ( ao -> a [ 0 ] )		2630490	0					
ANR	2648987	IdentifierDeclType	ut8		2630490	0					
ANR	2648988	Identifier	coproc		2630490	1					
ANR	2648989	AssignmentExpression	coproc = getcoproc ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2648990	Identifier	coproc		2630490	0					
ANR	2648991	CallExpression	getcoproc ( ao -> a [ 0 ] )		2630490	1					
ANR	2648992	Callee	getcoproc		2630490	0					
ANR	2648993	Identifier	getcoproc		2630490	0					
ANR	2648994	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2648995	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2648996	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2648997	PtrMemberAccess	ao -> a		2630490	0					
ANR	2648998	Identifier	ao		2630490	0					
ANR	2648999	Identifier	a		2630490	1					
ANR	2649000	PrimaryExpression	0		2630490	1					
ANR	2649001	IdentifierDeclStatement	ut8 coreg = getcoprocreg ( ao -> a [ 1 ] ) ;	4633:3:97460:97495	2630490	1	True				
ANR	2649002	IdentifierDecl	coreg = getcoprocreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2649003	IdentifierDeclType	ut8		2630490	0					
ANR	2649004	Identifier	coreg		2630490	1					
ANR	2649005	AssignmentExpression	coreg = getcoprocreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2649006	Identifier	coreg		2630490	0					
ANR	2649007	CallExpression	getcoprocreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2649008	Callee	getcoprocreg		2630490	0					
ANR	2649009	Identifier	getcoprocreg		2630490	0					
ANR	2649010	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2649011	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2649012	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2649013	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649014	Identifier	ao		2630490	0					
ANR	2649015	Identifier	a		2630490	1					
ANR	2649016	PrimaryExpression	1		2630490	1					
ANR	2649017	IdentifierDeclStatement	ut8 reg = getregmemstartend ( ao -> a [ 2 ] ) ;	4634:3:97500:97538	2630490	2	True				
ANR	2649018	IdentifierDecl	reg = getregmemstartend ( ao -> a [ 2 ] )		2630490	0					
ANR	2649019	IdentifierDeclType	ut8		2630490	0					
ANR	2649020	Identifier	reg		2630490	1					
ANR	2649021	AssignmentExpression	reg = getregmemstartend ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2649022	Identifier	reg		2630490	0					
ANR	2649023	CallExpression	getregmemstartend ( ao -> a [ 2 ] )		2630490	1					
ANR	2649024	Callee	getregmemstartend		2630490	0					
ANR	2649025	Identifier	getregmemstartend		2630490	0					
ANR	2649026	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2649027	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2649028	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2649029	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649030	Identifier	ao		2630490	0					
ANR	2649031	Identifier	a		2630490	1					
ANR	2649032	PrimaryExpression	2		2630490	1					
ANR	2649033	IdentifierDeclStatement	st32 num = getnum ( ao -> a [ 3 ] ) ;	4635:3:97543:97571	2630490	3	True				
ANR	2649034	IdentifierDecl	num = getnum ( ao -> a [ 3 ] )		2630490	0					
ANR	2649035	IdentifierDeclType	st32		2630490	0					
ANR	2649036	Identifier	num		2630490	1					
ANR	2649037	AssignmentExpression	num = getnum ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2649038	Identifier	num		2630490	0					
ANR	2649039	CallExpression	getnum ( ao -> a [ 3 ] )		2630490	1					
ANR	2649040	Callee	getnum		2630490	0					
ANR	2649041	Identifier	getnum		2630490	0					
ANR	2649042	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2649043	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2649044	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2649045	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649046	Identifier	ao		2630490	0					
ANR	2649047	Identifier	a		2630490	1					
ANR	2649048	PrimaryExpression	3		2630490	1					
ANR	2649049	IfStatement	if ( ( coproc > 15 ) || ( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 ) )		2630490	4					
ANR	2649050	Condition	( coproc > 15 ) || ( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )	4637:7:97581:97674	2630490	0	True				
ANR	2649051	OrExpression	( coproc > 15 ) || ( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		2630490	0		||			
ANR	2649052	RelationalExpression	coproc > 15		2630490	0		>			
ANR	2649053	Identifier	coproc		2630490	0					
ANR	2649054	PrimaryExpression	15		2630490	1					
ANR	2649055	OrExpression	( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		2630490	1		||			
ANR	2649056	RelationalExpression	coreg > 15		2630490	0		>			
ANR	2649057	Identifier	coreg		2630490	0					
ANR	2649058	PrimaryExpression	15		2630490	1					
ANR	2649059	OrExpression	( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		2630490	1		||			
ANR	2649060	RelationalExpression	reg > 15		2630490	0		>			
ANR	2649061	Identifier	reg		2630490	0					
ANR	2649062	PrimaryExpression	15		2630490	1					
ANR	2649063	OrExpression	( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		2630490	1		||			
ANR	2649064	RelationalExpression	num > 4092		2630490	0		>			
ANR	2649065	Identifier	num		2630490	0					
ANR	2649066	PrimaryExpression	4092		2630490	1					
ANR	2649067	OrExpression	( num < - 4092 ) || ( num % 4 != 0 )		2630490	1		||			
ANR	2649068	RelationalExpression	num < - 4092		2630490	0		<			
ANR	2649069	Identifier	num		2630490	0					
ANR	2649070	UnaryOperationExpression	- 4092		2630490	1					
ANR	2649071	UnaryOperator	-		2630490	0					
ANR	2649072	PrimaryExpression	4092		2630490	1					
ANR	2649073	EqualityExpression	num % 4 != 0		2630490	1		!=			
ANR	2649074	MultiplicativeExpression	num % 4		2630490	0		%			
ANR	2649075	Identifier	num		2630490	0					
ANR	2649076	PrimaryExpression	4		2630490	1					
ANR	2649077	PrimaryExpression	0		2630490	1					
ANR	2649078	CompoundStatement		3345:103:71818:71818	2630490	1					
ANR	2649079	ReturnStatement	return - 1 ;	4638:4:97683:97692	2630490	0	True				
ANR	2649080	UnaryOperationExpression	- 1		2630490	0					
ANR	2649081	UnaryOperator	-		2630490	0					
ANR	2649082	PrimaryExpression	1		2630490	1					
ANR	2649083	ExpressionStatement	ao -> o = 0x20ec0000	4641:3:97705:97723	2630490	5	True				
ANR	2649084	AssignmentExpression	ao -> o = 0x20ec0000		2630490	0		=			
ANR	2649085	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649086	Identifier	ao		2630490	0					
ANR	2649087	Identifier	o		2630490	1					
ANR	2649088	PrimaryExpression	0x20ec0000		2630490	1					
ANR	2649089	IfStatement	if ( m & L_BIT )		2630490	6					
ANR	2649090	Condition	m & L_BIT	4642:7:97732:97740	2630490	0	True				
ANR	2649091	BitAndExpression	m & L_BIT		2630490	0		&			
ANR	2649092	Identifier	m		2630490	0					
ANR	2649093	Identifier	L_BIT		2630490	1					
ANR	2649094	CompoundStatement		3350:18:71884:71884	2630490	1					
ANR	2649095	ExpressionStatement	ao -> o |= 1 << 30	4643:4:97749:97765	2630490	0	True				
ANR	2649096	AssignmentExpression	ao -> o |= 1 << 30		2630490	0		|=			
ANR	2649097	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649098	Identifier	ao		2630490	0					
ANR	2649099	Identifier	o		2630490	1					
ANR	2649100	ShiftExpression	1 << 30		2630490	1		<<			
ANR	2649101	PrimaryExpression	1		2630490	0					
ANR	2649102	PrimaryExpression	30		2630490	1					
ANR	2649103	IfStatement	if ( m & TWO_BIT )		2630490	7					
ANR	2649104	Condition	m & TWO_BIT	4645:7:97779:97789	2630490	0	True				
ANR	2649105	BitAndExpression	m & TWO_BIT		2630490	0		&			
ANR	2649106	Identifier	m		2630490	0					
ANR	2649107	Identifier	TWO_BIT		2630490	1					
ANR	2649108	CompoundStatement		3353:20:71933:71933	2630490	1					
ANR	2649109	ExpressionStatement	ao -> o |= 1 << 20	4646:4:97798:97814	2630490	0	True				
ANR	2649110	AssignmentExpression	ao -> o |= 1 << 20		2630490	0		|=			
ANR	2649111	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649112	Identifier	ao		2630490	0					
ANR	2649113	Identifier	o		2630490	1					
ANR	2649114	ShiftExpression	1 << 20		2630490	1		<<			
ANR	2649115	PrimaryExpression	1		2630490	0					
ANR	2649116	PrimaryExpression	20		2630490	1					
ANR	2649117	IfStatement	if ( num < 0 )		2630490	8					
ANR	2649118	Condition	num < 0	4648:7:97828:97834	2630490	0	True				
ANR	2649119	RelationalExpression	num < 0		2630490	0		<			
ANR	2649120	Identifier	num		2630490	0					
ANR	2649121	PrimaryExpression	0		2630490	1					
ANR	2649122	CompoundStatement		3356:16:71978:71978	2630490	1					
ANR	2649123	ExpressionStatement	num = - num	4649:4:97843:97853	2630490	0	True				
ANR	2649124	AssignmentExpression	num = - num		2630490	0		=			
ANR	2649125	Identifier	num		2630490	0					
ANR	2649126	UnaryOperationExpression	- num		2630490	1					
ANR	2649127	UnaryOperator	-		2630490	0					
ANR	2649128	Identifier	num		2630490	1					
ANR	2649129	ElseStatement	else		2630490	0					
ANR	2649130	CompoundStatement		3358:10:72006:72006	2630490	0					
ANR	2649131	ExpressionStatement	ao -> o |= 1 << 31	4651:4:97871:97887	2630490	0	True				
ANR	2649132	AssignmentExpression	ao -> o |= 1 << 31		2630490	0		|=			
ANR	2649133	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649134	Identifier	ao		2630490	0					
ANR	2649135	Identifier	o		2630490	1					
ANR	2649136	ShiftExpression	1 << 31		2630490	1		<<			
ANR	2649137	PrimaryExpression	1		2630490	0					
ANR	2649138	PrimaryExpression	31		2630490	1					
ANR	2649139	ExpressionStatement	ao -> o |= coproc	4653:3:97897:97912	2630490	9	True				
ANR	2649140	AssignmentExpression	ao -> o |= coproc		2630490	0		|=			
ANR	2649141	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649142	Identifier	ao		2630490	0					
ANR	2649143	Identifier	o		2630490	1					
ANR	2649144	Identifier	coproc		2630490	1					
ANR	2649145	ExpressionStatement	ao -> o |= coreg << 4	4654:3:97917:97936	2630490	10	True				
ANR	2649146	AssignmentExpression	ao -> o |= coreg << 4		2630490	0		|=			
ANR	2649147	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649148	Identifier	ao		2630490	0					
ANR	2649149	Identifier	o		2630490	1					
ANR	2649150	ShiftExpression	coreg << 4		2630490	1		<<			
ANR	2649151	Identifier	coreg		2630490	0					
ANR	2649152	PrimaryExpression	4		2630490	1					
ANR	2649153	ExpressionStatement	ao -> o |= reg << 24	4655:3:97941:97959	2630490	11	True				
ANR	2649154	AssignmentExpression	ao -> o |= reg << 24		2630490	0		|=			
ANR	2649155	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649156	Identifier	ao		2630490	0					
ANR	2649157	Identifier	o		2630490	1					
ANR	2649158	ShiftExpression	reg << 24		2630490	1		<<			
ANR	2649159	Identifier	reg		2630490	0					
ANR	2649160	PrimaryExpression	24		2630490	1					
ANR	2649161	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	4656:3:97964:97988	2630490	12	True				
ANR	2649162	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		2630490	0		|=			
ANR	2649163	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649164	Identifier	ao		2630490	0					
ANR	2649165	Identifier	o		2630490	1					
ANR	2649166	ShiftExpression	( num >> 2 ) << 8		2630490	1		<<			
ANR	2649167	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2649168	Identifier	num		2630490	0					
ANR	2649169	PrimaryExpression	2		2630490	1					
ANR	2649170	PrimaryExpression	8		2630490	1					
ANR	2649171	ReturnStatement	return 4 ;	4657:3:97993:98001	2630490	13	True				
ANR	2649172	PrimaryExpression	4		2630490	0					
ANR	2649173	BreakStatement	break ;	4659:3:98018:98023	2630490	7	True				
ANR	2649174	Label	case THUMB_COPROC_COREG_BRACKREG_CONSTBRACKBANG :	4660:2:98027:98074	2630490	8	True				
ANR	2649175	Identifier	THUMB_COPROC_COREG_BRACKREG_CONSTBRACKBANG		2630490	0					
ANR	2649176	CompoundStatement		3372:3:72340:72378	2630490	9					
ANR	2649177	IdentifierDeclStatement	ut8 coproc = getcoproc ( ao -> a [ 0 ] ) ;	4661:3:98081:98114	2630490	0	True				
ANR	2649178	IdentifierDecl	coproc = getcoproc ( ao -> a [ 0 ] )		2630490	0					
ANR	2649179	IdentifierDeclType	ut8		2630490	0					
ANR	2649180	Identifier	coproc		2630490	1					
ANR	2649181	AssignmentExpression	coproc = getcoproc ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2649182	Identifier	coproc		2630490	0					
ANR	2649183	CallExpression	getcoproc ( ao -> a [ 0 ] )		2630490	1					
ANR	2649184	Callee	getcoproc		2630490	0					
ANR	2649185	Identifier	getcoproc		2630490	0					
ANR	2649186	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2649187	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2649188	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2649189	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649190	Identifier	ao		2630490	0					
ANR	2649191	Identifier	a		2630490	1					
ANR	2649192	PrimaryExpression	0		2630490	1					
ANR	2649193	IdentifierDeclStatement	ut8 coreg = getcoprocreg ( ao -> a [ 1 ] ) ;	4662:3:98119:98154	2630490	1	True				
ANR	2649194	IdentifierDecl	coreg = getcoprocreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2649195	IdentifierDeclType	ut8		2630490	0					
ANR	2649196	Identifier	coreg		2630490	1					
ANR	2649197	AssignmentExpression	coreg = getcoprocreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2649198	Identifier	coreg		2630490	0					
ANR	2649199	CallExpression	getcoprocreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2649200	Callee	getcoprocreg		2630490	0					
ANR	2649201	Identifier	getcoprocreg		2630490	0					
ANR	2649202	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2649203	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2649204	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2649205	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649206	Identifier	ao		2630490	0					
ANR	2649207	Identifier	a		2630490	1					
ANR	2649208	PrimaryExpression	1		2630490	1					
ANR	2649209	IdentifierDeclStatement	ut8 reg = getregmemstart ( ao -> a [ 2 ] ) ;	4663:3:98159:98194	2630490	2	True				
ANR	2649210	IdentifierDecl	reg = getregmemstart ( ao -> a [ 2 ] )		2630490	0					
ANR	2649211	IdentifierDeclType	ut8		2630490	0					
ANR	2649212	Identifier	reg		2630490	1					
ANR	2649213	AssignmentExpression	reg = getregmemstart ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2649214	Identifier	reg		2630490	0					
ANR	2649215	CallExpression	getregmemstart ( ao -> a [ 2 ] )		2630490	1					
ANR	2649216	Callee	getregmemstart		2630490	0					
ANR	2649217	Identifier	getregmemstart		2630490	0					
ANR	2649218	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2649219	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2649220	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2649221	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649222	Identifier	ao		2630490	0					
ANR	2649223	Identifier	a		2630490	1					
ANR	2649224	PrimaryExpression	2		2630490	1					
ANR	2649225	IdentifierDeclStatement	st32 num = getnummemendbang ( ao -> a [ 3 ] ) ;	4664:3:98199:98237	2630490	3	True				
ANR	2649226	IdentifierDecl	num = getnummemendbang ( ao -> a [ 3 ] )		2630490	0					
ANR	2649227	IdentifierDeclType	st32		2630490	0					
ANR	2649228	Identifier	num		2630490	1					
ANR	2649229	AssignmentExpression	num = getnummemendbang ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2649230	Identifier	num		2630490	0					
ANR	2649231	CallExpression	getnummemendbang ( ao -> a [ 3 ] )		2630490	1					
ANR	2649232	Callee	getnummemendbang		2630490	0					
ANR	2649233	Identifier	getnummemendbang		2630490	0					
ANR	2649234	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2649235	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2649236	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2649237	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649238	Identifier	ao		2630490	0					
ANR	2649239	Identifier	a		2630490	1					
ANR	2649240	PrimaryExpression	3		2630490	1					
ANR	2649241	IfStatement	if ( ( coproc > 15 ) || ( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 ) )		2630490	4					
ANR	2649242	Condition	( coproc > 15 ) || ( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )	4666:7:98247:98340	2630490	0	True				
ANR	2649243	OrExpression	( coproc > 15 ) || ( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		2630490	0		||			
ANR	2649244	RelationalExpression	coproc > 15		2630490	0		>			
ANR	2649245	Identifier	coproc		2630490	0					
ANR	2649246	PrimaryExpression	15		2630490	1					
ANR	2649247	OrExpression	( coreg > 15 ) || ( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		2630490	1		||			
ANR	2649248	RelationalExpression	coreg > 15		2630490	0		>			
ANR	2649249	Identifier	coreg		2630490	0					
ANR	2649250	PrimaryExpression	15		2630490	1					
ANR	2649251	OrExpression	( reg > 15 ) || ( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		2630490	1		||			
ANR	2649252	RelationalExpression	reg > 15		2630490	0		>			
ANR	2649253	Identifier	reg		2630490	0					
ANR	2649254	PrimaryExpression	15		2630490	1					
ANR	2649255	OrExpression	( num > 4092 ) || ( num < - 4092 ) || ( num % 4 != 0 )		2630490	1		||			
ANR	2649256	RelationalExpression	num > 4092		2630490	0		>			
ANR	2649257	Identifier	num		2630490	0					
ANR	2649258	PrimaryExpression	4092		2630490	1					
ANR	2649259	OrExpression	( num < - 4092 ) || ( num % 4 != 0 )		2630490	1		||			
ANR	2649260	RelationalExpression	num < - 4092		2630490	0		<			
ANR	2649261	Identifier	num		2630490	0					
ANR	2649262	UnaryOperationExpression	- 4092		2630490	1					
ANR	2649263	UnaryOperator	-		2630490	0					
ANR	2649264	PrimaryExpression	4092		2630490	1					
ANR	2649265	EqualityExpression	num % 4 != 0		2630490	1		!=			
ANR	2649266	MultiplicativeExpression	num % 4		2630490	0		%			
ANR	2649267	Identifier	num		2630490	0					
ANR	2649268	PrimaryExpression	4		2630490	1					
ANR	2649269	PrimaryExpression	0		2630490	1					
ANR	2649270	CompoundStatement		3374:103:72484:72484	2630490	1					
ANR	2649271	ReturnStatement	return - 1 ;	4667:4:98349:98358	2630490	0	True				
ANR	2649272	UnaryOperationExpression	- 1		2630490	0					
ANR	2649273	UnaryOperator	-		2630490	0					
ANR	2649274	PrimaryExpression	1		2630490	1					
ANR	2649275	ExpressionStatement	ao -> o = 0x20ed0000	4670:3:98371:98389	2630490	5	True				
ANR	2649276	AssignmentExpression	ao -> o = 0x20ed0000		2630490	0		=			
ANR	2649277	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649278	Identifier	ao		2630490	0					
ANR	2649279	Identifier	o		2630490	1					
ANR	2649280	PrimaryExpression	0x20ed0000		2630490	1					
ANR	2649281	IfStatement	if ( m & L_BIT )		2630490	6					
ANR	2649282	Condition	m & L_BIT	4671:7:98398:98406	2630490	0	True				
ANR	2649283	BitAndExpression	m & L_BIT		2630490	0		&			
ANR	2649284	Identifier	m		2630490	0					
ANR	2649285	Identifier	L_BIT		2630490	1					
ANR	2649286	CompoundStatement		3379:18:72550:72550	2630490	1					
ANR	2649287	ExpressionStatement	ao -> o |= 1 << 30	4672:4:98415:98431	2630490	0	True				
ANR	2649288	AssignmentExpression	ao -> o |= 1 << 30		2630490	0		|=			
ANR	2649289	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649290	Identifier	ao		2630490	0					
ANR	2649291	Identifier	o		2630490	1					
ANR	2649292	ShiftExpression	1 << 30		2630490	1		<<			
ANR	2649293	PrimaryExpression	1		2630490	0					
ANR	2649294	PrimaryExpression	30		2630490	1					
ANR	2649295	IfStatement	if ( m & TWO_BIT )		2630490	7					
ANR	2649296	Condition	m & TWO_BIT	4674:7:98445:98455	2630490	0	True				
ANR	2649297	BitAndExpression	m & TWO_BIT		2630490	0		&			
ANR	2649298	Identifier	m		2630490	0					
ANR	2649299	Identifier	TWO_BIT		2630490	1					
ANR	2649300	CompoundStatement		3382:20:72599:72599	2630490	1					
ANR	2649301	ExpressionStatement	ao -> o |= 1 << 20	4675:4:98464:98480	2630490	0	True				
ANR	2649302	AssignmentExpression	ao -> o |= 1 << 20		2630490	0		|=			
ANR	2649303	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649304	Identifier	ao		2630490	0					
ANR	2649305	Identifier	o		2630490	1					
ANR	2649306	ShiftExpression	1 << 20		2630490	1		<<			
ANR	2649307	PrimaryExpression	1		2630490	0					
ANR	2649308	PrimaryExpression	20		2630490	1					
ANR	2649309	IfStatement	if ( num < 0 )		2630490	8					
ANR	2649310	Condition	num < 0	4677:7:98494:98500	2630490	0	True				
ANR	2649311	RelationalExpression	num < 0		2630490	0		<			
ANR	2649312	Identifier	num		2630490	0					
ANR	2649313	PrimaryExpression	0		2630490	1					
ANR	2649314	CompoundStatement		3385:16:72644:72644	2630490	1					
ANR	2649315	ExpressionStatement	num = - num	4678:4:98509:98519	2630490	0	True				
ANR	2649316	AssignmentExpression	num = - num		2630490	0		=			
ANR	2649317	Identifier	num		2630490	0					
ANR	2649318	UnaryOperationExpression	- num		2630490	1					
ANR	2649319	UnaryOperator	-		2630490	0					
ANR	2649320	Identifier	num		2630490	1					
ANR	2649321	ElseStatement	else		2630490	0					
ANR	2649322	CompoundStatement		3387:10:72672:72672	2630490	0					
ANR	2649323	ExpressionStatement	ao -> o |= 1 << 31	4680:4:98537:98553	2630490	0	True				
ANR	2649324	AssignmentExpression	ao -> o |= 1 << 31		2630490	0		|=			
ANR	2649325	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649326	Identifier	ao		2630490	0					
ANR	2649327	Identifier	o		2630490	1					
ANR	2649328	ShiftExpression	1 << 31		2630490	1		<<			
ANR	2649329	PrimaryExpression	1		2630490	0					
ANR	2649330	PrimaryExpression	31		2630490	1					
ANR	2649331	ExpressionStatement	ao -> o |= coproc	4682:3:98563:98578	2630490	9	True				
ANR	2649332	AssignmentExpression	ao -> o |= coproc		2630490	0		|=			
ANR	2649333	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649334	Identifier	ao		2630490	0					
ANR	2649335	Identifier	o		2630490	1					
ANR	2649336	Identifier	coproc		2630490	1					
ANR	2649337	ExpressionStatement	ao -> o |= coreg << 4	4683:3:98583:98602	2630490	10	True				
ANR	2649338	AssignmentExpression	ao -> o |= coreg << 4		2630490	0		|=			
ANR	2649339	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649340	Identifier	ao		2630490	0					
ANR	2649341	Identifier	o		2630490	1					
ANR	2649342	ShiftExpression	coreg << 4		2630490	1		<<			
ANR	2649343	Identifier	coreg		2630490	0					
ANR	2649344	PrimaryExpression	4		2630490	1					
ANR	2649345	ExpressionStatement	ao -> o |= reg << 24	4684:3:98607:98625	2630490	11	True				
ANR	2649346	AssignmentExpression	ao -> o |= reg << 24		2630490	0		|=			
ANR	2649347	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649348	Identifier	ao		2630490	0					
ANR	2649349	Identifier	o		2630490	1					
ANR	2649350	ShiftExpression	reg << 24		2630490	1		<<			
ANR	2649351	Identifier	reg		2630490	0					
ANR	2649352	PrimaryExpression	24		2630490	1					
ANR	2649353	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	4685:3:98630:98654	2630490	12	True				
ANR	2649354	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		2630490	0		|=			
ANR	2649355	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649356	Identifier	ao		2630490	0					
ANR	2649357	Identifier	o		2630490	1					
ANR	2649358	ShiftExpression	( num >> 2 ) << 8		2630490	1		<<			
ANR	2649359	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2649360	Identifier	num		2630490	0					
ANR	2649361	PrimaryExpression	2		2630490	1					
ANR	2649362	PrimaryExpression	8		2630490	1					
ANR	2649363	ReturnStatement	return 4 ;	4686:3:98659:98667	2630490	13	True				
ANR	2649364	PrimaryExpression	4		2630490	0					
ANR	2649365	BreakStatement	break ;	4688:3:98684:98689	2630490	10	True				
ANR	2649366	Label	default :	4689:2:98693:98700	2630490	11	True				
ANR	2649367	Identifier	default		2630490	0					
ANR	2649368	ReturnStatement	return - 1 ;	4690:3:98705:98714	2630490	12	True				
ANR	2649369	UnaryOperationExpression	- 1		2630490	0					
ANR	2649370	UnaryOperator	-		2630490	0					
ANR	2649371	PrimaryExpression	1		2630490	1					
ANR	2649372	ElseStatement	else		2630490	0					
ANR	2649373	IfStatement	"if ( ( m = opmask ( ao -> op , ""stm"" , FD_BIT | DB_BIT | IA_BIT | EA_BIT ) ) )"		2630490	0					
ANR	2649374	Condition	"m = opmask ( ao -> op , ""stm"" , FD_BIT | DB_BIT | IA_BIT | EA_BIT )"	4692:12:98732:98794	2630490	0	True				
ANR	2649375	AssignmentExpression	"m = opmask ( ao -> op , ""stm"" , FD_BIT | DB_BIT | IA_BIT | EA_BIT )"		2630490	0		=			
ANR	2649376	Identifier	m		2630490	0					
ANR	2649377	CallExpression	"opmask ( ao -> op , ""stm"" , FD_BIT | DB_BIT | IA_BIT | EA_BIT )"		2630490	1					
ANR	2649378	Callee	opmask		2630490	0					
ANR	2649379	Identifier	opmask		2630490	0					
ANR	2649380	ArgumentList	ao -> op		2630490	1					
ANR	2649381	Argument	ao -> op		2630490	0					
ANR	2649382	PtrMemberAccess	ao -> op		2630490	0					
ANR	2649383	Identifier	ao		2630490	0					
ANR	2649384	Identifier	op		2630490	1					
ANR	2649385	Argument	"""stm"""		2630490	1					
ANR	2649386	PrimaryExpression	"""stm"""		2630490	0					
ANR	2649387	Argument	FD_BIT | DB_BIT | IA_BIT | EA_BIT		2630490	2					
ANR	2649388	InclusiveOrExpression	FD_BIT | DB_BIT | IA_BIT | EA_BIT		2630490	0		|			
ANR	2649389	Identifier	FD_BIT		2630490	0					
ANR	2649390	InclusiveOrExpression	DB_BIT | IA_BIT | EA_BIT		2630490	1		|			
ANR	2649391	Identifier	DB_BIT		2630490	0					
ANR	2649392	InclusiveOrExpression	IA_BIT | EA_BIT		2630490	1		|			
ANR	2649393	Identifier	IA_BIT		2630490	0					
ANR	2649394	Identifier	EA_BIT		2630490	1					
ANR	2649395	CompoundStatement		3402:2:72980:72995	2630490	1					
ANR	2649396	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4693:2:98801:98835	2630490	0	True				
ANR	2649397	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2649398	IdentifierDeclType	ut64		2630490	0					
ANR	2649399	Identifier	argt		2630490	1					
ANR	2649400	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2649401	Identifier	argt		2630490	0					
ANR	2649402	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2649403	Callee	thumb_selector		2630490	0					
ANR	2649404	Identifier	thumb_selector		2630490	0					
ANR	2649405	ArgumentList	ao -> a		2630490	1					
ANR	2649406	Argument	ao -> a		2630490	0					
ANR	2649407	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649408	Identifier	ao		2630490	0					
ANR	2649409	Identifier	a		2630490	1					
ANR	2649410	IdentifierDeclStatement	bool wb = false ;	4694:2:98839:98854	2630490	1	True				
ANR	2649411	IdentifierDecl	wb = false		2630490	0					
ANR	2649412	IdentifierDeclType	bool		2630490	0					
ANR	2649413	Identifier	wb		2630490	1					
ANR	2649414	AssignmentExpression	wb = false		2630490	2		=			
ANR	2649415	Identifier	false		2630490	0					
ANR	2649416	Identifier	false		2630490	1					
ANR	2649417	SwitchStatement	switch ( argt )		2630490	2					
ANR	2649418	Condition	argt	4695:10:98866:98869	2630490	0	True				
ANR	2649419	Identifier	argt		2630490	0					
ANR	2649420	CompoundStatement		3403:16:73013:73013	2630490	1					
ANR	2649421	Label	case THUMB_REGBANG_LIST :	4696:2:98876:98899	2630490	0	True				
ANR	2649422	Identifier	THUMB_REGBANG_LIST		2630490	0					
ANR	2649423	CompoundStatement		3404:27:73042:73042	2630490	1					
ANR	2649424	ExpressionStatement	wb = true	4697:3:98906:98915	2630490	0	True				
ANR	2649425	AssignmentExpression	wb = true		2630490	0		=			
ANR	2649426	Identifier	wb		2630490	0					
ANR	2649427	Identifier	true		2630490	1					
ANR	2649428	ExpressionStatement	ao -> a [ 0 ] [ strlen ( ao -> a [ 0 ] ) - 1 ] = '\\0'	4698:3:98920:98958	2630490	1	True				
ANR	2649429	AssignmentExpression	ao -> a [ 0 ] [ strlen ( ao -> a [ 0 ] ) - 1 ] = '\\0'		2630490	0		=			
ANR	2649430	ArrayIndexing	ao -> a [ 0 ] [ strlen ( ao -> a [ 0 ] ) - 1 ]		2630490	0					
ANR	2649431	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2649432	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649433	Identifier	ao		2630490	0					
ANR	2649434	Identifier	a		2630490	1					
ANR	2649435	PrimaryExpression	0		2630490	1					
ANR	2649436	AdditiveExpression	strlen ( ao -> a [ 0 ] ) - 1		2630490	1		-			
ANR	2649437	CallExpression	strlen ( ao -> a [ 0 ] )		2630490	0					
ANR	2649438	Callee	strlen		2630490	0					
ANR	2649439	Identifier	strlen		2630490	0					
ANR	2649440	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2649441	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2649442	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2649443	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649444	Identifier	ao		2630490	0					
ANR	2649445	Identifier	a		2630490	1					
ANR	2649446	PrimaryExpression	0		2630490	1					
ANR	2649447	PrimaryExpression	1		2630490	1					
ANR	2649448	PrimaryExpression	'\\0'		2630490	1					
ANR	2649449	Label	case THUMB_REG_LIST :	4701:2:99004:99023	2630490	2	True				
ANR	2649450	Identifier	THUMB_REG_LIST		2630490	0					
ANR	2649451	CompoundStatement		3411:3:73203:73236	2630490	3					
ANR	2649452	IdentifierDeclStatement	ut8 reg = getreg ( ao -> a [ 0 ] ) ;	4702:3:99030:99057	2630490	0	True				
ANR	2649453	IdentifierDecl	reg = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2649454	IdentifierDeclType	ut8		2630490	0					
ANR	2649455	Identifier	reg		2630490	1					
ANR	2649456	AssignmentExpression	reg = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2649457	Identifier	reg		2630490	0					
ANR	2649458	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2649459	Callee	getreg		2630490	0					
ANR	2649460	Identifier	getreg		2630490	0					
ANR	2649461	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2649462	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2649463	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2649464	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649465	Identifier	ao		2630490	0					
ANR	2649466	Identifier	a		2630490	1					
ANR	2649467	PrimaryExpression	0		2630490	1					
ANR	2649468	IdentifierDeclStatement	st32 list = getreglist ( ao -> a [ 1 ] ) ;	4703:3:99062:99095	2630490	1	True				
ANR	2649469	IdentifierDecl	list = getreglist ( ao -> a [ 1 ] )		2630490	0					
ANR	2649470	IdentifierDeclType	st32		2630490	0					
ANR	2649471	Identifier	list		2630490	1					
ANR	2649472	AssignmentExpression	list = getreglist ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2649473	Identifier	list		2630490	0					
ANR	2649474	CallExpression	getreglist ( ao -> a [ 1 ] )		2630490	1					
ANR	2649475	Callee	getreglist		2630490	0					
ANR	2649476	Identifier	getreglist		2630490	0					
ANR	2649477	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2649478	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2649479	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2649480	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649481	Identifier	ao		2630490	0					
ANR	2649482	Identifier	a		2630490	1					
ANR	2649483	PrimaryExpression	1		2630490	1					
ANR	2649484	IfStatement	if ( ( list <= 0 ) || ( ( list & 0x0000a000 ) != 0 ) )		2630490	2					
ANR	2649485	Condition	( list <= 0 ) || ( ( list & 0x0000a000 ) != 0 )	4704:7:99104:99144	2630490	0	True				
ANR	2649486	OrExpression	( list <= 0 ) || ( ( list & 0x0000a000 ) != 0 )		2630490	0		||			
ANR	2649487	RelationalExpression	list <= 0		2630490	0		<=			
ANR	2649488	Identifier	list		2630490	0					
ANR	2649489	PrimaryExpression	0		2630490	1					
ANR	2649490	EqualityExpression	( list & 0x0000a000 ) != 0		2630490	1		!=			
ANR	2649491	BitAndExpression	list & 0x0000a000		2630490	0		&			
ANR	2649492	Identifier	list		2630490	0					
ANR	2649493	PrimaryExpression	0x0000a000		2630490	1					
ANR	2649494	PrimaryExpression	0		2630490	1					
ANR	2649495	CompoundStatement		3412:50:73288:73288	2630490	1					
ANR	2649496	ReturnStatement	return - 1 ;	4705:4:99153:99162	2630490	0	True				
ANR	2649497	UnaryOperationExpression	- 1		2630490	0					
ANR	2649498	UnaryOperator	-		2630490	0					
ANR	2649499	PrimaryExpression	1		2630490	1					
ANR	2649500	IfStatement	if ( ( ! ( m & DOTW_BIT ) ) && ( ( list & 0x0000ff00 ) == 0 ) && ( ! ( m & ( FD_BIT | DB_BIT ) ) ) && wb )		2630490	3					
ANR	2649501	Condition	( ! ( m & DOTW_BIT ) ) && ( ( list & 0x0000ff00 ) == 0 ) && ( ! ( m & ( FD_BIT | DB_BIT ) ) ) && wb	4708:7:99177:99259	2630490	0	True				
ANR	2649502	AndExpression	( ! ( m & DOTW_BIT ) ) && ( ( list & 0x0000ff00 ) == 0 ) && ( ! ( m & ( FD_BIT | DB_BIT ) ) ) && wb		2630490	0		&&			
ANR	2649503	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	0					
ANR	2649504	UnaryOperator	!		2630490	0					
ANR	2649505	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2649506	Identifier	m		2630490	0					
ANR	2649507	Identifier	DOTW_BIT		2630490	1					
ANR	2649508	AndExpression	( ( list & 0x0000ff00 ) == 0 ) && ( ! ( m & ( FD_BIT | DB_BIT ) ) ) && wb		2630490	1		&&			
ANR	2649509	EqualityExpression	( list & 0x0000ff00 ) == 0		2630490	0		==			
ANR	2649510	BitAndExpression	list & 0x0000ff00		2630490	0		&			
ANR	2649511	Identifier	list		2630490	0					
ANR	2649512	PrimaryExpression	0x0000ff00		2630490	1					
ANR	2649513	PrimaryExpression	0		2630490	1					
ANR	2649514	AndExpression	( ! ( m & ( FD_BIT | DB_BIT ) ) ) && wb		2630490	1		&&			
ANR	2649515	UnaryOperationExpression	! ( m & ( FD_BIT | DB_BIT ) )		2630490	0					
ANR	2649516	UnaryOperator	!		2630490	0					
ANR	2649517	BitAndExpression	m & ( FD_BIT | DB_BIT )		2630490	1		&			
ANR	2649518	Identifier	m		2630490	0					
ANR	2649519	InclusiveOrExpression	FD_BIT | DB_BIT		2630490	1		|			
ANR	2649520	Identifier	FD_BIT		2630490	0					
ANR	2649521	Identifier	DB_BIT		2630490	1					
ANR	2649522	Identifier	wb		2630490	1					
ANR	2649523	CompoundStatement		3416:92:73403:73403	2630490	1					
ANR	2649524	ExpressionStatement	ao -> o = 0x00c0	4709:4:99268:99282	2630490	0	True				
ANR	2649525	AssignmentExpression	ao -> o = 0x00c0		2630490	0		=			
ANR	2649526	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649527	Identifier	ao		2630490	0					
ANR	2649528	Identifier	o		2630490	1					
ANR	2649529	PrimaryExpression	0x00c0		2630490	1					
ANR	2649530	ExpressionStatement	ao -> o |= ( list & 0x000000ff ) << 8	4710:4:99288:99321	2630490	1	True				
ANR	2649531	AssignmentExpression	ao -> o |= ( list & 0x000000ff ) << 8		2630490	0		|=			
ANR	2649532	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649533	Identifier	ao		2630490	0					
ANR	2649534	Identifier	o		2630490	1					
ANR	2649535	ShiftExpression	( list & 0x000000ff ) << 8		2630490	1		<<			
ANR	2649536	BitAndExpression	list & 0x000000ff		2630490	0		&			
ANR	2649537	Identifier	list		2630490	0					
ANR	2649538	PrimaryExpression	0x000000ff		2630490	1					
ANR	2649539	PrimaryExpression	8		2630490	1					
ANR	2649540	ExpressionStatement	ao -> o |= reg	4711:4:99327:99339	2630490	2	True				
ANR	2649541	AssignmentExpression	ao -> o |= reg		2630490	0		|=			
ANR	2649542	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649543	Identifier	ao		2630490	0					
ANR	2649544	Identifier	o		2630490	1					
ANR	2649545	Identifier	reg		2630490	1					
ANR	2649546	ReturnStatement	return 2 ;	4712:4:99345:99353	2630490	3	True				
ANR	2649547	PrimaryExpression	2		2630490	0					
ANR	2649548	IfStatement	if ( ( m & ( FD_BIT | DB_BIT | IA_BIT | EA_BIT ) ) == 0 )		2630490	4					
ANR	2649549	Condition	( m & ( FD_BIT | DB_BIT | IA_BIT | EA_BIT ) ) == 0	4715:7:99368:99413	2630490	0	True				
ANR	2649550	EqualityExpression	( m & ( FD_BIT | DB_BIT | IA_BIT | EA_BIT ) ) == 0		2630490	0		==			
ANR	2649551	BitAndExpression	m & ( FD_BIT | DB_BIT | IA_BIT | EA_BIT )		2630490	0		&			
ANR	2649552	Identifier	m		2630490	0					
ANR	2649553	InclusiveOrExpression	FD_BIT | DB_BIT | IA_BIT | EA_BIT		2630490	1		|			
ANR	2649554	Identifier	FD_BIT		2630490	0					
ANR	2649555	InclusiveOrExpression	DB_BIT | IA_BIT | EA_BIT		2630490	1		|			
ANR	2649556	Identifier	DB_BIT		2630490	0					
ANR	2649557	InclusiveOrExpression	IA_BIT | EA_BIT		2630490	1		|			
ANR	2649558	Identifier	IA_BIT		2630490	0					
ANR	2649559	Identifier	EA_BIT		2630490	1					
ANR	2649560	PrimaryExpression	0		2630490	1					
ANR	2649561	CompoundStatement		3423:55:73557:73557	2630490	1					
ANR	2649562	ReturnStatement	return - 1 ;	4716:4:99422:99431	2630490	0	True				
ANR	2649563	UnaryOperationExpression	- 1		2630490	0					
ANR	2649564	UnaryOperator	-		2630490	0					
ANR	2649565	PrimaryExpression	1		2630490	1					
ANR	2649566	IfStatement	if ( m & ( FD_BIT | DB_BIT ) )		2630490	5					
ANR	2649567	Condition	m & ( FD_BIT | DB_BIT )	4719:7:99449:99469	2630490	0	True				
ANR	2649568	BitAndExpression	m & ( FD_BIT | DB_BIT )		2630490	0		&			
ANR	2649569	Identifier	m		2630490	0					
ANR	2649570	InclusiveOrExpression	FD_BIT | DB_BIT		2630490	1		|			
ANR	2649571	Identifier	FD_BIT		2630490	0					
ANR	2649572	Identifier	DB_BIT		2630490	1					
ANR	2649573	CompoundStatement		3427:30:73613:73613	2630490	1					
ANR	2649574	ExpressionStatement	ao -> o = 0x00e90000	4720:4:99478:99496	2630490	0	True				
ANR	2649575	AssignmentExpression	ao -> o = 0x00e90000		2630490	0		=			
ANR	2649576	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649577	Identifier	ao		2630490	0					
ANR	2649578	Identifier	o		2630490	1					
ANR	2649579	PrimaryExpression	0x00e90000		2630490	1					
ANR	2649580	ElseStatement	else		2630490	0					
ANR	2649581	CompoundStatement		3429:10:73649:73649	2630490	0					
ANR	2649582	ExpressionStatement	ao -> o = 0x80e80000	4722:4:99514:99532	2630490	0	True				
ANR	2649583	AssignmentExpression	ao -> o = 0x80e80000		2630490	0		=			
ANR	2649584	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649585	Identifier	ao		2630490	0					
ANR	2649586	Identifier	o		2630490	1					
ANR	2649587	PrimaryExpression	0x80e80000		2630490	1					
ANR	2649588	IfStatement	if ( wb )		2630490	6					
ANR	2649589	Condition	wb	4725:7:99547:99548	2630490	0	True				
ANR	2649590	Identifier	wb		2630490	0					
ANR	2649591	CompoundStatement		3433:11:73692:73692	2630490	1					
ANR	2649592	ExpressionStatement	ao -> o |= 1 << 29	4726:4:99557:99573	2630490	0	True				
ANR	2649593	AssignmentExpression	ao -> o |= 1 << 29		2630490	0		|=			
ANR	2649594	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649595	Identifier	ao		2630490	0					
ANR	2649596	Identifier	o		2630490	1					
ANR	2649597	ShiftExpression	1 << 29		2630490	1		<<			
ANR	2649598	PrimaryExpression	1		2630490	0					
ANR	2649599	PrimaryExpression	29		2630490	1					
ANR	2649600	ExpressionStatement	ao -> o |= reg << 24	4729:3:99584:99602	2630490	7	True				
ANR	2649601	AssignmentExpression	ao -> o |= reg << 24		2630490	0		|=			
ANR	2649602	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649603	Identifier	ao		2630490	0					
ANR	2649604	Identifier	o		2630490	1					
ANR	2649605	ShiftExpression	reg << 24		2630490	1		<<			
ANR	2649606	Identifier	reg		2630490	0					
ANR	2649607	PrimaryExpression	24		2630490	1					
ANR	2649608	ExpressionStatement	ao -> o |= ( list & 0x000000ff ) << 8	4730:3:99607:99640	2630490	8	True				
ANR	2649609	AssignmentExpression	ao -> o |= ( list & 0x000000ff ) << 8		2630490	0		|=			
ANR	2649610	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649611	Identifier	ao		2630490	0					
ANR	2649612	Identifier	o		2630490	1					
ANR	2649613	ShiftExpression	( list & 0x000000ff ) << 8		2630490	1		<<			
ANR	2649614	BitAndExpression	list & 0x000000ff		2630490	0		&			
ANR	2649615	Identifier	list		2630490	0					
ANR	2649616	PrimaryExpression	0x000000ff		2630490	1					
ANR	2649617	PrimaryExpression	8		2630490	1					
ANR	2649618	ExpressionStatement	ao -> o |= ( list & 0x0000ff00 ) >> 8	4731:3:99645:99678	2630490	9	True				
ANR	2649619	AssignmentExpression	ao -> o |= ( list & 0x0000ff00 ) >> 8		2630490	0		|=			
ANR	2649620	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649621	Identifier	ao		2630490	0					
ANR	2649622	Identifier	o		2630490	1					
ANR	2649623	ShiftExpression	( list & 0x0000ff00 ) >> 8		2630490	1		>>			
ANR	2649624	BitAndExpression	list & 0x0000ff00		2630490	0		&			
ANR	2649625	Identifier	list		2630490	0					
ANR	2649626	PrimaryExpression	0x0000ff00		2630490	1					
ANR	2649627	PrimaryExpression	8		2630490	1					
ANR	2649628	ReturnStatement	return 4 ;	4732:3:99683:99691	2630490	10	True				
ANR	2649629	PrimaryExpression	4		2630490	0					
ANR	2649630	BreakStatement	break ;	4734:3:99708:99713	2630490	4	True				
ANR	2649631	Label	default :	4735:2:99717:99724	2630490	5	True				
ANR	2649632	Identifier	default		2630490	0					
ANR	2649633	ReturnStatement	return - 1 ;	4736:3:99729:99738	2630490	6	True				
ANR	2649634	UnaryOperationExpression	- 1		2630490	0					
ANR	2649635	UnaryOperator	-		2630490	0					
ANR	2649636	PrimaryExpression	1		2630490	1					
ANR	2649637	ElseStatement	else		2630490	0					
ANR	2649638	IfStatement	"if ( ( m = opmask ( ao -> op , ""str"" , B_BIT | T_BIT | D_BIT | H_BIT ) ) )"		2630490	0					
ANR	2649639	Condition	"m = opmask ( ao -> op , ""str"" , B_BIT | T_BIT | D_BIT | H_BIT )"	4738:12:99756:99814	2630490	0	True				
ANR	2649640	AssignmentExpression	"m = opmask ( ao -> op , ""str"" , B_BIT | T_BIT | D_BIT | H_BIT )"		2630490	0		=			
ANR	2649641	Identifier	m		2630490	0					
ANR	2649642	CallExpression	"opmask ( ao -> op , ""str"" , B_BIT | T_BIT | D_BIT | H_BIT )"		2630490	1					
ANR	2649643	Callee	opmask		2630490	0					
ANR	2649644	Identifier	opmask		2630490	0					
ANR	2649645	ArgumentList	ao -> op		2630490	1					
ANR	2649646	Argument	ao -> op		2630490	0					
ANR	2649647	PtrMemberAccess	ao -> op		2630490	0					
ANR	2649648	Identifier	ao		2630490	0					
ANR	2649649	Identifier	op		2630490	1					
ANR	2649650	Argument	"""str"""		2630490	1					
ANR	2649651	PrimaryExpression	"""str"""		2630490	0					
ANR	2649652	Argument	B_BIT | T_BIT | D_BIT | H_BIT		2630490	2					
ANR	2649653	InclusiveOrExpression	B_BIT | T_BIT | D_BIT | H_BIT		2630490	0		|			
ANR	2649654	Identifier	B_BIT		2630490	0					
ANR	2649655	InclusiveOrExpression	T_BIT | D_BIT | H_BIT		2630490	1		|			
ANR	2649656	Identifier	T_BIT		2630490	0					
ANR	2649657	InclusiveOrExpression	D_BIT | H_BIT		2630490	1		|			
ANR	2649658	Identifier	D_BIT		2630490	0					
ANR	2649659	Identifier	H_BIT		2630490	1					
ANR	2649660	CompoundStatement		3448:2:74000:74041	2630490	1					
ANR	2649661	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	4739:2:99821:99855	2630490	0	True				
ANR	2649662	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2649663	IdentifierDeclType	ut64		2630490	0					
ANR	2649664	Identifier	argt		2630490	1					
ANR	2649665	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2649666	Identifier	argt		2630490	0					
ANR	2649667	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2649668	Callee	thumb_selector		2630490	0					
ANR	2649669	Identifier	thumb_selector		2630490	0					
ANR	2649670	ArgumentList	ao -> a		2630490	1					
ANR	2649671	Argument	ao -> a		2630490	0					
ANR	2649672	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649673	Identifier	ao		2630490	0					
ANR	2649674	Identifier	a		2630490	1					
ANR	2649675	IdentifierDeclStatement	ut32 strsel = m & ( B_BIT | H_BIT | D_BIT ) ;	4740:2:99859:99900	2630490	1	True				
ANR	2649676	IdentifierDecl	strsel = m & ( B_BIT | H_BIT | D_BIT )		2630490	0					
ANR	2649677	IdentifierDeclType	ut32		2630490	0					
ANR	2649678	Identifier	strsel		2630490	1					
ANR	2649679	AssignmentExpression	strsel = m & ( B_BIT | H_BIT | D_BIT )		2630490	2		=			
ANR	2649680	Identifier	strsel		2630490	0					
ANR	2649681	BitAndExpression	m & ( B_BIT | H_BIT | D_BIT )		2630490	1		&			
ANR	2649682	Identifier	m		2630490	0					
ANR	2649683	InclusiveOrExpression	B_BIT | H_BIT | D_BIT		2630490	1		|			
ANR	2649684	Identifier	B_BIT		2630490	0					
ANR	2649685	InclusiveOrExpression	H_BIT | D_BIT		2630490	1		|			
ANR	2649686	Identifier	H_BIT		2630490	0					
ANR	2649687	Identifier	D_BIT		2630490	1					
ANR	2649688	SwitchStatement	switch ( argt )		2630490	2					
ANR	2649689	Condition	argt	4741:10:99912:99915	2630490	0	True				
ANR	2649690	Identifier	argt		2630490	0					
ANR	2649691	CompoundStatement		3449:16:74059:74059	2630490	1					
ANR	2649692	Label	case THUMB_REG_BRACKREGBRACK :	4742:2:99922:99950	2630490	0	True				
ANR	2649693	Identifier	THUMB_REG_BRACKREGBRACK		2630490	0					
ANR	2649694	IfStatement	if ( ao -> a [ 2 ] == NULL )		2630490	1					
ANR	2649695	Condition	ao -> a [ 2 ] == NULL	4743:7:99959:99974	2630490	0	True				
ANR	2649696	EqualityExpression	ao -> a [ 2 ] == NULL		2630490	0		==			
ANR	2649697	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2649698	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649699	Identifier	ao		2630490	0					
ANR	2649700	Identifier	a		2630490	1					
ANR	2649701	PrimaryExpression	2		2630490	1					
ANR	2649702	Identifier	NULL		2630490	1					
ANR	2649703	CompoundStatement		3451:25:74118:74118	2630490	1					
ANR	2649704	ExpressionStatement	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'	4744:4:100005:100042	2630490	0	True				
ANR	2649705	AssignmentExpression	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'		2630490	0		=			
ANR	2649706	ArrayIndexing	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ]		2630490	0					
ANR	2649707	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2649708	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649709	Identifier	ao		2630490	0					
ANR	2649710	Identifier	a		2630490	1					
ANR	2649711	PrimaryExpression	1		2630490	1					
ANR	2649712	AdditiveExpression	strlen ( ao -> a [ 1 ] ) - 1		2630490	1		-			
ANR	2649713	CallExpression	strlen ( ao -> a [ 1 ] )		2630490	0					
ANR	2649714	Callee	strlen		2630490	0					
ANR	2649715	Identifier	strlen		2630490	0					
ANR	2649716	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2649717	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2649718	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2649719	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649720	Identifier	ao		2630490	0					
ANR	2649721	Identifier	a		2630490	1					
ANR	2649722	PrimaryExpression	1		2630490	1					
ANR	2649723	PrimaryExpression	1		2630490	1					
ANR	2649724	PrimaryExpression	'\\0'		2630490	1					
ANR	2649725	ExpressionStatement	"ao -> a [ 2 ] = ""0]"""	4745:4:100048:100063	2630490	1	True				
ANR	2649726	AssignmentExpression	"ao -> a [ 2 ] = ""0]"""		2630490	0		=			
ANR	2649727	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2649728	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649729	Identifier	ao		2630490	0					
ANR	2649730	Identifier	a		2630490	1					
ANR	2649731	PrimaryExpression	2		2630490	1					
ANR	2649732	PrimaryExpression	"""0]"""		2630490	1					
ANR	2649733	Label	case THUMB_REG_BRACKREG_CONSTBRACK :	4748:2:100102:100136	2630490	2	True				
ANR	2649734	Identifier	THUMB_REG_BRACKREG_CONSTBRACK		2630490	0					
ANR	2649735	CompoundStatement		3486:3:74978:74997	2630490	3					
ANR	2649736	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4749:3:100143:100171	2630490	0	True				
ANR	2649737	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2649738	IdentifierDeclType	ut8		2630490	0					
ANR	2649739	Identifier	reg1		2630490	1					
ANR	2649740	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2649741	Identifier	reg1		2630490	0					
ANR	2649742	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2649743	Callee	getreg		2630490	0					
ANR	2649744	Identifier	getreg		2630490	0					
ANR	2649745	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2649746	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2649747	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2649748	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649749	Identifier	ao		2630490	0					
ANR	2649750	Identifier	a		2630490	1					
ANR	2649751	PrimaryExpression	0		2630490	1					
ANR	2649752	IdentifierDeclStatement	ut8 reg2 = getregmemstart ( ao -> a [ 1 ] ) ;	4750:3:100176:100212	2630490	1	True				
ANR	2649753	IdentifierDecl	reg2 = getregmemstart ( ao -> a [ 1 ] )		2630490	0					
ANR	2649754	IdentifierDeclType	ut8		2630490	0					
ANR	2649755	Identifier	reg2		2630490	1					
ANR	2649756	AssignmentExpression	reg2 = getregmemstart ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2649757	Identifier	reg2		2630490	0					
ANR	2649758	CallExpression	getregmemstart ( ao -> a [ 1 ] )		2630490	1					
ANR	2649759	Callee	getregmemstart		2630490	0					
ANR	2649760	Identifier	getregmemstart		2630490	0					
ANR	2649761	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2649762	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2649763	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2649764	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649765	Identifier	ao		2630490	0					
ANR	2649766	Identifier	a		2630490	1					
ANR	2649767	PrimaryExpression	1		2630490	1					
ANR	2649768	IdentifierDeclStatement	st32 num = getnummemend ( ao -> a [ 2 ] ) ;	4751:3:100217:100251	2630490	2	True				
ANR	2649769	IdentifierDecl	num = getnummemend ( ao -> a [ 2 ] )		2630490	0					
ANR	2649770	IdentifierDeclType	st32		2630490	0					
ANR	2649771	Identifier	num		2630490	1					
ANR	2649772	AssignmentExpression	num = getnummemend ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2649773	Identifier	num		2630490	0					
ANR	2649774	CallExpression	getnummemend ( ao -> a [ 2 ] )		2630490	1					
ANR	2649775	Callee	getnummemend		2630490	0					
ANR	2649776	Identifier	getnummemend		2630490	0					
ANR	2649777	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2649778	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2649779	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2649780	PtrMemberAccess	ao -> a		2630490	0					
ANR	2649781	Identifier	ao		2630490	0					
ANR	2649782	Identifier	a		2630490	1					
ANR	2649783	PrimaryExpression	2		2630490	1					
ANR	2649784	IfStatement	if ( m & T_BIT )		2630490	3					
ANR	2649785	Condition	m & T_BIT	4752:7:100260:100268	2630490	0	True				
ANR	2649786	BitAndExpression	m & T_BIT		2630490	0		&			
ANR	2649787	Identifier	m		2630490	0					
ANR	2649788	Identifier	T_BIT		2630490	1					
ANR	2649789	CompoundStatement		3460:18:74412:74412	2630490	1					
ANR	2649790	IfStatement	if ( ( num < 0 ) || ( num > 255 ) )		2630490	0					
ANR	2649791	Condition	( num < 0 ) || ( num > 255 )	4753:8:100281:100304	2630490	0	True				
ANR	2649792	OrExpression	( num < 0 ) || ( num > 255 )		2630490	0		||			
ANR	2649793	RelationalExpression	num < 0		2630490	0		<			
ANR	2649794	Identifier	num		2630490	0					
ANR	2649795	PrimaryExpression	0		2630490	1					
ANR	2649796	RelationalExpression	num > 255		2630490	1		>			
ANR	2649797	Identifier	num		2630490	0					
ANR	2649798	PrimaryExpression	255		2630490	1					
ANR	2649799	CompoundStatement		3461:34:74448:74448	2630490	1					
ANR	2649800	ReturnStatement	return - 1 ;	4754:5:100314:100323	2630490	0	True				
ANR	2649801	UnaryOperationExpression	- 1		2630490	0					
ANR	2649802	UnaryOperator	-		2630490	0					
ANR	2649803	PrimaryExpression	1		2630490	1					
ANR	2649804	IfStatement	if ( strsel == 0 )		2630490	1					
ANR	2649805	Condition	strsel == 0	4756:8:100339:100349	2630490	0	True				
ANR	2649806	EqualityExpression	strsel == 0		2630490	0		==			
ANR	2649807	Identifier	strsel		2630490	0					
ANR	2649808	PrimaryExpression	0		2630490	1					
ANR	2649809	CompoundStatement		3464:21:74493:74493	2630490	1					
ANR	2649810	ExpressionStatement	ao -> o = 0x40f8000e	4757:5:100359:100377	2630490	0	True				
ANR	2649811	AssignmentExpression	ao -> o = 0x40f8000e		2630490	0		=			
ANR	2649812	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649813	Identifier	ao		2630490	0					
ANR	2649814	Identifier	o		2630490	1					
ANR	2649815	PrimaryExpression	0x40f8000e		2630490	1					
ANR	2649816	ElseStatement	else		2630490	0					
ANR	2649817	IfStatement	if ( strsel == H_BIT )		2630490	0					
ANR	2649818	Condition	strsel == H_BIT	4759:15:100405:100419	2630490	0	True				
ANR	2649819	EqualityExpression	strsel == H_BIT		2630490	0		==			
ANR	2649820	Identifier	strsel		2630490	0					
ANR	2649821	Identifier	H_BIT		2630490	1					
ANR	2649822	CompoundStatement		3467:32:74563:74563	2630490	1					
ANR	2649823	ExpressionStatement	ao -> o = 0x20f8000e	4760:5:100429:100447	2630490	0	True				
ANR	2649824	AssignmentExpression	ao -> o = 0x20f8000e		2630490	0		=			
ANR	2649825	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649826	Identifier	ao		2630490	0					
ANR	2649827	Identifier	o		2630490	1					
ANR	2649828	PrimaryExpression	0x20f8000e		2630490	1					
ANR	2649829	ElseStatement	else		2630490	0					
ANR	2649830	IfStatement	if ( strsel == B_BIT )		2630490	0					
ANR	2649831	Condition	strsel == B_BIT	4762:15:100475:100489	2630490	0	True				
ANR	2649832	EqualityExpression	strsel == B_BIT		2630490	0		==			
ANR	2649833	Identifier	strsel		2630490	0					
ANR	2649834	Identifier	B_BIT		2630490	1					
ANR	2649835	CompoundStatement		3470:32:74633:74633	2630490	1					
ANR	2649836	ExpressionStatement	ao -> o = 0x00f8000e	4763:5:100499:100517	2630490	0	True				
ANR	2649837	AssignmentExpression	ao -> o = 0x00f8000e		2630490	0		=			
ANR	2649838	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649839	Identifier	ao		2630490	0					
ANR	2649840	Identifier	o		2630490	1					
ANR	2649841	PrimaryExpression	0x00f8000e		2630490	1					
ANR	2649842	ElseStatement	else		2630490	0					
ANR	2649843	CompoundStatement		3472:11:74671:74671	2630490	0					
ANR	2649844	ReturnStatement	return - 1 ;	4765:5:100537:100546	2630490	0	True				
ANR	2649845	UnaryOperationExpression	- 1		2630490	0					
ANR	2649846	UnaryOperator	-		2630490	0					
ANR	2649847	PrimaryExpression	1		2630490	1					
ANR	2649848	ExpressionStatement	ao -> o |= num << 8	4767:4:100558:100575	2630490	2	True				
ANR	2649849	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2649850	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649851	Identifier	ao		2630490	0					
ANR	2649852	Identifier	o		2630490	1					
ANR	2649853	ShiftExpression	num << 8		2630490	1		<<			
ANR	2649854	Identifier	num		2630490	0					
ANR	2649855	PrimaryExpression	8		2630490	1					
ANR	2649856	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	4768:4:100581:100610	2630490	3	True				
ANR	2649857	CallExpression	"mem_32bit_2reg ( ao , m )"		2630490	0					
ANR	2649858	Callee	mem_32bit_2reg		2630490	0					
ANR	2649859	Identifier	mem_32bit_2reg		2630490	0					
ANR	2649860	ArgumentList	ao		2630490	1					
ANR	2649861	Argument	ao		2630490	0					
ANR	2649862	Identifier	ao		2630490	0					
ANR	2649863	Argument	m		2630490	1					
ANR	2649864	Identifier	m		2630490	0					
ANR	2649865	IfStatement	if ( ( strsel == 0 ) && ( reg2 == 13 ) && ( num >= 0 ) && ( num < 1024 ) && ( ( num % 4 ) == 0 ) && ( reg1 < 8 ) & ( ! ( m & DOTW_BIT ) ) )		2630490	4					
ANR	2649866	Condition	( strsel == 0 ) && ( reg2 == 13 ) && ( num >= 0 ) && ( num < 1024 ) && ( ( num % 4 ) == 0 ) && ( reg1 < 8 ) & ( ! ( m & DOTW_BIT ) )	4771:7:100628:100740	2630490	0	True				
ANR	2649867	AndExpression	( strsel == 0 ) && ( reg2 == 13 ) && ( num >= 0 ) && ( num < 1024 ) && ( ( num % 4 ) == 0 ) && ( reg1 < 8 ) & ( ! ( m & DOTW_BIT ) )		2630490	0		&&			
ANR	2649868	EqualityExpression	strsel == 0		2630490	0		==			
ANR	2649869	Identifier	strsel		2630490	0					
ANR	2649870	PrimaryExpression	0		2630490	1					
ANR	2649871	AndExpression	( reg2 == 13 ) && ( num >= 0 ) && ( num < 1024 ) && ( ( num % 4 ) == 0 ) && ( reg1 < 8 ) & ( ! ( m & DOTW_BIT ) )		2630490	1		&&			
ANR	2649872	EqualityExpression	reg2 == 13		2630490	0		==			
ANR	2649873	Identifier	reg2		2630490	0					
ANR	2649874	PrimaryExpression	13		2630490	1					
ANR	2649875	AndExpression	( num >= 0 ) && ( num < 1024 ) && ( ( num % 4 ) == 0 ) && ( reg1 < 8 ) & ( ! ( m & DOTW_BIT ) )		2630490	1		&&			
ANR	2649876	RelationalExpression	num >= 0		2630490	0		>=			
ANR	2649877	Identifier	num		2630490	0					
ANR	2649878	PrimaryExpression	0		2630490	1					
ANR	2649879	AndExpression	( num < 1024 ) && ( ( num % 4 ) == 0 ) && ( reg1 < 8 ) & ( ! ( m & DOTW_BIT ) )		2630490	1		&&			
ANR	2649880	RelationalExpression	num < 1024		2630490	0		<			
ANR	2649881	Identifier	num		2630490	0					
ANR	2649882	PrimaryExpression	1024		2630490	1					
ANR	2649883	AndExpression	( ( num % 4 ) == 0 ) && ( reg1 < 8 ) & ( ! ( m & DOTW_BIT ) )		2630490	1		&&			
ANR	2649884	EqualityExpression	( num % 4 ) == 0		2630490	0		==			
ANR	2649885	MultiplicativeExpression	num % 4		2630490	0		%			
ANR	2649886	Identifier	num		2630490	0					
ANR	2649887	PrimaryExpression	4		2630490	1					
ANR	2649888	PrimaryExpression	0		2630490	1					
ANR	2649889	BitAndExpression	( reg1 < 8 ) & ( ! ( m & DOTW_BIT ) )		2630490	1		&			
ANR	2649890	RelationalExpression	reg1 < 8		2630490	0		<			
ANR	2649891	Identifier	reg1		2630490	0					
ANR	2649892	PrimaryExpression	8		2630490	1					
ANR	2649893	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	1					
ANR	2649894	UnaryOperator	!		2630490	0					
ANR	2649895	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2649896	Identifier	m		2630490	0					
ANR	2649897	Identifier	DOTW_BIT		2630490	1					
ANR	2649898	CompoundStatement		3479:122:74884:74884	2630490	1					
ANR	2649899	ExpressionStatement	ao -> o = 0x0090	4772:4:100749:100763	2630490	0	True				
ANR	2649900	AssignmentExpression	ao -> o = 0x0090		2630490	0		=			
ANR	2649901	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649902	Identifier	ao		2630490	0					
ANR	2649903	Identifier	o		2630490	1					
ANR	2649904	PrimaryExpression	0x0090		2630490	1					
ANR	2649905	ExpressionStatement	ao -> o |= reg1	4773:4:100769:100782	2630490	1	True				
ANR	2649906	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2649907	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649908	Identifier	ao		2630490	0					
ANR	2649909	Identifier	o		2630490	1					
ANR	2649910	Identifier	reg1		2630490	1					
ANR	2649911	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	4774:4:100788:100812	2630490	2	True				
ANR	2649912	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		2630490	0		|=			
ANR	2649913	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649914	Identifier	ao		2630490	0					
ANR	2649915	Identifier	o		2630490	1					
ANR	2649916	ShiftExpression	( num >> 2 ) << 8		2630490	1		<<			
ANR	2649917	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2649918	Identifier	num		2630490	0					
ANR	2649919	PrimaryExpression	2		2630490	1					
ANR	2649920	PrimaryExpression	8		2630490	1					
ANR	2649921	ReturnStatement	return 2 ;	4775:4:100818:100826	2630490	3	True				
ANR	2649922	PrimaryExpression	2		2630490	0					
ANR	2649923	IdentifierDeclStatement	bool t1form = false ;	4778:3:100837:100856	2630490	5	True				
ANR	2649924	IdentifierDecl	t1form = false		2630490	0					
ANR	2649925	IdentifierDeclType	bool		2630490	0					
ANR	2649926	Identifier	t1form		2630490	1					
ANR	2649927	AssignmentExpression	t1form = false		2630490	2		=			
ANR	2649928	Identifier	false		2630490	0					
ANR	2649929	Identifier	false		2630490	1					
ANR	2649930	IfStatement	if ( ( strsel == 0 ) && ( num < 128 ) && ( num >= 0 ) && ( num % 4 == 0 ) )		2630490	6					
ANR	2649931	Condition	( strsel == 0 ) && ( num < 128 ) && ( num >= 0 ) && ( num % 4 == 0 )	4779:7:100865:100924	2630490	0	True				
ANR	2649932	AndExpression	( strsel == 0 ) && ( num < 128 ) && ( num >= 0 ) && ( num % 4 == 0 )		2630490	0		&&			
ANR	2649933	EqualityExpression	strsel == 0		2630490	0		==			
ANR	2649934	Identifier	strsel		2630490	0					
ANR	2649935	PrimaryExpression	0		2630490	1					
ANR	2649936	AndExpression	( num < 128 ) && ( num >= 0 ) && ( num % 4 == 0 )		2630490	1		&&			
ANR	2649937	RelationalExpression	num < 128		2630490	0		<			
ANR	2649938	Identifier	num		2630490	0					
ANR	2649939	PrimaryExpression	128		2630490	1					
ANR	2649940	AndExpression	( num >= 0 ) && ( num % 4 == 0 )		2630490	1		&&			
ANR	2649941	RelationalExpression	num >= 0		2630490	0		>=			
ANR	2649942	Identifier	num		2630490	0					
ANR	2649943	PrimaryExpression	0		2630490	1					
ANR	2649944	EqualityExpression	num % 4 == 0		2630490	1		==			
ANR	2649945	MultiplicativeExpression	num % 4		2630490	0		%			
ANR	2649946	Identifier	num		2630490	0					
ANR	2649947	PrimaryExpression	4		2630490	1					
ANR	2649948	PrimaryExpression	0		2630490	1					
ANR	2649949	CompoundStatement		3487:69:75068:75068	2630490	1					
ANR	2649950	ExpressionStatement	ao -> o = 0x0060	4780:4:100933:100947	2630490	0	True				
ANR	2649951	AssignmentExpression	ao -> o = 0x0060		2630490	0		=			
ANR	2649952	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649953	Identifier	ao		2630490	0					
ANR	2649954	Identifier	o		2630490	1					
ANR	2649955	PrimaryExpression	0x0060		2630490	1					
ANR	2649956	ExpressionStatement	ao -> o |= ( num >> 4 )	4781:4:100953:100972	2630490	1	True				
ANR	2649957	AssignmentExpression	ao -> o |= ( num >> 4 )		2630490	0		|=			
ANR	2649958	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649959	Identifier	ao		2630490	0					
ANR	2649960	Identifier	o		2630490	1					
ANR	2649961	ShiftExpression	num >> 4		2630490	1		>>			
ANR	2649962	Identifier	num		2630490	0					
ANR	2649963	PrimaryExpression	4		2630490	1					
ANR	2649964	ExpressionStatement	ao -> o |= ( ( num >> 2 ) & 0x3 ) << 14	4782:4:100978:101011	2630490	2	True				
ANR	2649965	AssignmentExpression	ao -> o |= ( ( num >> 2 ) & 0x3 ) << 14		2630490	0		|=			
ANR	2649966	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649967	Identifier	ao		2630490	0					
ANR	2649968	Identifier	o		2630490	1					
ANR	2649969	ShiftExpression	( ( num >> 2 ) & 0x3 ) << 14		2630490	1		<<			
ANR	2649970	BitAndExpression	( num >> 2 ) & 0x3		2630490	0		&			
ANR	2649971	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2649972	Identifier	num		2630490	0					
ANR	2649973	PrimaryExpression	2		2630490	1					
ANR	2649974	PrimaryExpression	0x3		2630490	1					
ANR	2649975	PrimaryExpression	14		2630490	1					
ANR	2649976	ExpressionStatement	t1form = true	4783:4:101017:101030	2630490	3	True				
ANR	2649977	AssignmentExpression	t1form = true		2630490	0		=			
ANR	2649978	Identifier	t1form		2630490	0					
ANR	2649979	Identifier	true		2630490	1					
ANR	2649980	IfStatement	if ( ( strsel == B_BIT ) && ( num < 32 ) && ( num >= 0 ) )		2630490	7					
ANR	2649981	Condition	( strsel == B_BIT ) && ( num < 32 ) && ( num >= 0 )	4785:7:101044:101088	2630490	0	True				
ANR	2649982	AndExpression	( strsel == B_BIT ) && ( num < 32 ) && ( num >= 0 )		2630490	0		&&			
ANR	2649983	EqualityExpression	strsel == B_BIT		2630490	0		==			
ANR	2649984	Identifier	strsel		2630490	0					
ANR	2649985	Identifier	B_BIT		2630490	1					
ANR	2649986	AndExpression	( num < 32 ) && ( num >= 0 )		2630490	1		&&			
ANR	2649987	RelationalExpression	num < 32		2630490	0		<			
ANR	2649988	Identifier	num		2630490	0					
ANR	2649989	PrimaryExpression	32		2630490	1					
ANR	2649990	RelationalExpression	num >= 0		2630490	1		>=			
ANR	2649991	Identifier	num		2630490	0					
ANR	2649992	PrimaryExpression	0		2630490	1					
ANR	2649993	CompoundStatement		3493:54:75232:75232	2630490	1					
ANR	2649994	ExpressionStatement	ao -> o = 0x0070	4786:4:101097:101111	2630490	0	True				
ANR	2649995	AssignmentExpression	ao -> o = 0x0070		2630490	0		=			
ANR	2649996	PtrMemberAccess	ao -> o		2630490	0					
ANR	2649997	Identifier	ao		2630490	0					
ANR	2649998	Identifier	o		2630490	1					
ANR	2649999	PrimaryExpression	0x0070		2630490	1					
ANR	2650000	ExpressionStatement	ao -> o |= ( num >> 2 )	4787:4:101117:101136	2630490	1	True				
ANR	2650001	AssignmentExpression	ao -> o |= ( num >> 2 )		2630490	0		|=			
ANR	2650002	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650003	Identifier	ao		2630490	0					
ANR	2650004	Identifier	o		2630490	1					
ANR	2650005	ShiftExpression	num >> 2		2630490	1		>>			
ANR	2650006	Identifier	num		2630490	0					
ANR	2650007	PrimaryExpression	2		2630490	1					
ANR	2650008	ExpressionStatement	ao -> o |= ( num & 0x3 ) << 14	4788:4:101142:101168	2630490	2	True				
ANR	2650009	AssignmentExpression	ao -> o |= ( num & 0x3 ) << 14		2630490	0		|=			
ANR	2650010	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650011	Identifier	ao		2630490	0					
ANR	2650012	Identifier	o		2630490	1					
ANR	2650013	ShiftExpression	( num & 0x3 ) << 14		2630490	1		<<			
ANR	2650014	BitAndExpression	num & 0x3		2630490	0		&			
ANR	2650015	Identifier	num		2630490	0					
ANR	2650016	PrimaryExpression	0x3		2630490	1					
ANR	2650017	PrimaryExpression	14		2630490	1					
ANR	2650018	ExpressionStatement	t1form = true	4789:4:101174:101187	2630490	3	True				
ANR	2650019	AssignmentExpression	t1form = true		2630490	0		=			
ANR	2650020	Identifier	t1form		2630490	0					
ANR	2650021	Identifier	true		2630490	1					
ANR	2650022	IfStatement	if ( ( strsel == H_BIT ) && ( num < 64 ) && ( num >= 0 ) && ( num % 2 == 0 ) )		2630490	8					
ANR	2650023	Condition	( strsel == H_BIT ) && ( num < 64 ) && ( num >= 0 ) && ( num % 2 == 0 )	4791:7:101201:101263	2630490	0	True				
ANR	2650024	AndExpression	( strsel == H_BIT ) && ( num < 64 ) && ( num >= 0 ) && ( num % 2 == 0 )		2630490	0		&&			
ANR	2650025	EqualityExpression	strsel == H_BIT		2630490	0		==			
ANR	2650026	Identifier	strsel		2630490	0					
ANR	2650027	Identifier	H_BIT		2630490	1					
ANR	2650028	AndExpression	( num < 64 ) && ( num >= 0 ) && ( num % 2 == 0 )		2630490	1		&&			
ANR	2650029	RelationalExpression	num < 64		2630490	0		<			
ANR	2650030	Identifier	num		2630490	0					
ANR	2650031	PrimaryExpression	64		2630490	1					
ANR	2650032	AndExpression	( num >= 0 ) && ( num % 2 == 0 )		2630490	1		&&			
ANR	2650033	RelationalExpression	num >= 0		2630490	0		>=			
ANR	2650034	Identifier	num		2630490	0					
ANR	2650035	PrimaryExpression	0		2630490	1					
ANR	2650036	EqualityExpression	num % 2 == 0		2630490	1		==			
ANR	2650037	MultiplicativeExpression	num % 2		2630490	0		%			
ANR	2650038	Identifier	num		2630490	0					
ANR	2650039	PrimaryExpression	2		2630490	1					
ANR	2650040	PrimaryExpression	0		2630490	1					
ANR	2650041	CompoundStatement		3499:72:75407:75407	2630490	1					
ANR	2650042	ExpressionStatement	ao -> o = 0x0080	4792:4:101272:101286	2630490	0	True				
ANR	2650043	AssignmentExpression	ao -> o = 0x0080		2630490	0		=			
ANR	2650044	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650045	Identifier	ao		2630490	0					
ANR	2650046	Identifier	o		2630490	1					
ANR	2650047	PrimaryExpression	0x0080		2630490	1					
ANR	2650048	ExpressionStatement	ao -> o |= ( num >> 3 )	4793:4:101292:101311	2630490	1	True				
ANR	2650049	AssignmentExpression	ao -> o |= ( num >> 3 )		2630490	0		|=			
ANR	2650050	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650051	Identifier	ao		2630490	0					
ANR	2650052	Identifier	o		2630490	1					
ANR	2650053	ShiftExpression	num >> 3		2630490	1		>>			
ANR	2650054	Identifier	num		2630490	0					
ANR	2650055	PrimaryExpression	3		2630490	1					
ANR	2650056	ExpressionStatement	ao -> o |= ( ( num >> 1 ) & 0x3 ) << 14	4794:4:101317:101350	2630490	2	True				
ANR	2650057	AssignmentExpression	ao -> o |= ( ( num >> 1 ) & 0x3 ) << 14		2630490	0		|=			
ANR	2650058	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650059	Identifier	ao		2630490	0					
ANR	2650060	Identifier	o		2630490	1					
ANR	2650061	ShiftExpression	( ( num >> 1 ) & 0x3 ) << 14		2630490	1		<<			
ANR	2650062	BitAndExpression	( num >> 1 ) & 0x3		2630490	0		&			
ANR	2650063	ShiftExpression	num >> 1		2630490	0		>>			
ANR	2650064	Identifier	num		2630490	0					
ANR	2650065	PrimaryExpression	1		2630490	1					
ANR	2650066	PrimaryExpression	0x3		2630490	1					
ANR	2650067	PrimaryExpression	14		2630490	1					
ANR	2650068	ExpressionStatement	t1form = true	4795:4:101356:101369	2630490	3	True				
ANR	2650069	AssignmentExpression	t1form = true		2630490	0		=			
ANR	2650070	Identifier	t1form		2630490	0					
ANR	2650071	Identifier	true		2630490	1					
ANR	2650072	IfStatement	if ( t1form )		2630490	9					
ANR	2650073	Condition	t1form	4797:7:101383:101388	2630490	0	True				
ANR	2650074	Identifier	t1form		2630490	0					
ANR	2650075	CompoundStatement		3505:15:75532:75532	2630490	1					
ANR	2650076	IfStatement	"if ( mem_16bit_2reg ( ao , m ) )"		2630490	0					
ANR	2650077	Condition	"mem_16bit_2reg ( ao , m )"	4798:8:101401:101422	2630490	0	True				
ANR	2650078	CallExpression	"mem_16bit_2reg ( ao , m )"		2630490	0					
ANR	2650079	Callee	mem_16bit_2reg		2630490	0					
ANR	2650080	Identifier	mem_16bit_2reg		2630490	0					
ANR	2650081	ArgumentList	ao		2630490	1					
ANR	2650082	Argument	ao		2630490	0					
ANR	2650083	Identifier	ao		2630490	0					
ANR	2650084	Argument	m		2630490	1					
ANR	2650085	Identifier	m		2630490	0					
ANR	2650086	CompoundStatement		3506:32:75566:75566	2630490	1					
ANR	2650087	ReturnStatement	return 2 ;	4799:5:101432:101440	2630490	0	True				
ANR	2650088	PrimaryExpression	2		2630490	0					
ANR	2650089	IfStatement	if ( ( num > 4095 ) || ( num < - 255 ) )		2630490	10					
ANR	2650090	Condition	( num > 4095 ) || ( num < - 255 )	4803:7:101464:101491	2630490	0	True				
ANR	2650091	OrExpression	( num > 4095 ) || ( num < - 255 )		2630490	0		||			
ANR	2650092	RelationalExpression	num > 4095		2630490	0		>			
ANR	2650093	Identifier	num		2630490	0					
ANR	2650094	PrimaryExpression	4095		2630490	1					
ANR	2650095	RelationalExpression	num < - 255		2630490	1		<			
ANR	2650096	Identifier	num		2630490	0					
ANR	2650097	UnaryOperationExpression	- 255		2630490	1					
ANR	2650098	UnaryOperator	-		2630490	0					
ANR	2650099	PrimaryExpression	255		2630490	1					
ANR	2650100	CompoundStatement		3511:37:75635:75635	2630490	1					
ANR	2650101	ReturnStatement	return - 1 ;	4804:4:101500:101509	2630490	0	True				
ANR	2650102	UnaryOperationExpression	- 1		2630490	0					
ANR	2650103	UnaryOperator	-		2630490	0					
ANR	2650104	PrimaryExpression	1		2630490	1					
ANR	2650105	IfStatement	if ( num >= 0 )		2630490	11					
ANR	2650106	Condition	num >= 0	4806:7:101523:101530	2630490	0	True				
ANR	2650107	RelationalExpression	num >= 0		2630490	0		>=			
ANR	2650108	Identifier	num		2630490	0					
ANR	2650109	PrimaryExpression	0		2630490	1					
ANR	2650110	CompoundStatement		3514:17:75674:75674	2630490	1					
ANR	2650111	IfStatement	if ( strsel == 0 )		2630490	0					
ANR	2650112	Condition	strsel == 0	4807:8:101543:101553	2630490	0	True				
ANR	2650113	EqualityExpression	strsel == 0		2630490	0		==			
ANR	2650114	Identifier	strsel		2630490	0					
ANR	2650115	PrimaryExpression	0		2630490	1					
ANR	2650116	CompoundStatement		3515:21:75697:75697	2630490	1					
ANR	2650117	ExpressionStatement	ao -> o = 0xc0f80000	4808:5:101563:101581	2630490	0	True				
ANR	2650118	AssignmentExpression	ao -> o = 0xc0f80000		2630490	0		=			
ANR	2650119	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650120	Identifier	ao		2630490	0					
ANR	2650121	Identifier	o		2630490	1					
ANR	2650122	PrimaryExpression	0xc0f80000		2630490	1					
ANR	2650123	ElseStatement	else		2630490	0					
ANR	2650124	IfStatement	if ( strsel == B_BIT )		2630490	0					
ANR	2650125	Condition	strsel == B_BIT	4810:8:101602:101616	2630490	0	True				
ANR	2650126	EqualityExpression	strsel == B_BIT		2630490	0		==			
ANR	2650127	Identifier	strsel		2630490	0					
ANR	2650128	Identifier	B_BIT		2630490	1					
ANR	2650129	CompoundStatement		3518:25:75760:75760	2630490	1					
ANR	2650130	ExpressionStatement	ao -> o = 0x80f80000	4811:5:101626:101644	2630490	0	True				
ANR	2650131	AssignmentExpression	ao -> o = 0x80f80000		2630490	0		=			
ANR	2650132	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650133	Identifier	ao		2630490	0					
ANR	2650134	Identifier	o		2630490	1					
ANR	2650135	PrimaryExpression	0x80f80000		2630490	1					
ANR	2650136	ElseStatement	else		2630490	0					
ANR	2650137	IfStatement	if ( strsel == H_BIT )		2630490	0					
ANR	2650138	Condition	strsel == H_BIT	4813:8:101665:101679	2630490	0	True				
ANR	2650139	EqualityExpression	strsel == H_BIT		2630490	0		==			
ANR	2650140	Identifier	strsel		2630490	0					
ANR	2650141	Identifier	H_BIT		2630490	1					
ANR	2650142	CompoundStatement		3521:25:75823:75823	2630490	1					
ANR	2650143	ExpressionStatement	ao -> o = 0xa0f80000	4814:5:101689:101707	2630490	0	True				
ANR	2650144	AssignmentExpression	ao -> o = 0xa0f80000		2630490	0		=			
ANR	2650145	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650146	Identifier	ao		2630490	0					
ANR	2650147	Identifier	o		2630490	1					
ANR	2650148	PrimaryExpression	0xa0f80000		2630490	1					
ANR	2650149	ElseStatement	else		2630490	0					
ANR	2650150	CompoundStatement		3523:11:75861:75861	2630490	0					
ANR	2650151	ReturnStatement	return - 1 ;	4816:5:101727:101736	2630490	0	True				
ANR	2650152	UnaryOperationExpression	- 1		2630490	0					
ANR	2650153	UnaryOperator	-		2630490	0					
ANR	2650154	PrimaryExpression	1		2630490	1					
ANR	2650155	ExpressionStatement	ao -> o |= ( num >> 8 )	4818:4:101748:101767	2630490	1	True				
ANR	2650156	AssignmentExpression	ao -> o |= ( num >> 8 )		2630490	0		|=			
ANR	2650157	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650158	Identifier	ao		2630490	0					
ANR	2650159	Identifier	o		2630490	1					
ANR	2650160	ShiftExpression	num >> 8		2630490	1		>>			
ANR	2650161	Identifier	num		2630490	0					
ANR	2650162	PrimaryExpression	8		2630490	1					
ANR	2650163	ExpressionStatement	ao -> o |= ( num & 0x000000ff ) << 8	4819:4:101773:101805	2630490	2	True				
ANR	2650164	AssignmentExpression	ao -> o |= ( num & 0x000000ff ) << 8		2630490	0		|=			
ANR	2650165	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650166	Identifier	ao		2630490	0					
ANR	2650167	Identifier	o		2630490	1					
ANR	2650168	ShiftExpression	( num & 0x000000ff ) << 8		2630490	1		<<			
ANR	2650169	BitAndExpression	num & 0x000000ff		2630490	0		&			
ANR	2650170	Identifier	num		2630490	0					
ANR	2650171	PrimaryExpression	0x000000ff		2630490	1					
ANR	2650172	PrimaryExpression	8		2630490	1					
ANR	2650173	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	4820:4:101811:101840	2630490	3	True				
ANR	2650174	CallExpression	"mem_32bit_2reg ( ao , m )"		2630490	0					
ANR	2650175	Callee	mem_32bit_2reg		2630490	0					
ANR	2650176	Identifier	mem_32bit_2reg		2630490	0					
ANR	2650177	ArgumentList	ao		2630490	1					
ANR	2650178	Argument	ao		2630490	0					
ANR	2650179	Identifier	ao		2630490	0					
ANR	2650180	Argument	m		2630490	1					
ANR	2650181	Identifier	m		2630490	0					
ANR	2650182	IfStatement	if ( strsel == 0 )		2630490	12					
ANR	2650183	Condition	strsel == 0	4822:7:101854:101864	2630490	0	True				
ANR	2650184	EqualityExpression	strsel == 0		2630490	0		==			
ANR	2650185	Identifier	strsel		2630490	0					
ANR	2650186	PrimaryExpression	0		2630490	1					
ANR	2650187	CompoundStatement		3530:20:76008:76008	2630490	1					
ANR	2650188	ExpressionStatement	ao -> o = 0x40f8000c	4823:4:101873:101891	2630490	0	True				
ANR	2650189	AssignmentExpression	ao -> o = 0x40f8000c		2630490	0		=			
ANR	2650190	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650191	Identifier	ao		2630490	0					
ANR	2650192	Identifier	o		2630490	1					
ANR	2650193	PrimaryExpression	0x40f8000c		2630490	1					
ANR	2650194	ElseStatement	else		2630490	0					
ANR	2650195	IfStatement	if ( strsel == B_BIT )		2630490	0					
ANR	2650196	Condition	strsel == B_BIT	4825:7:101910:101924	2630490	0	True				
ANR	2650197	EqualityExpression	strsel == B_BIT		2630490	0		==			
ANR	2650198	Identifier	strsel		2630490	0					
ANR	2650199	Identifier	B_BIT		2630490	1					
ANR	2650200	CompoundStatement		3533:24:76068:76068	2630490	1					
ANR	2650201	ExpressionStatement	ao -> o = 0x00f8000c	4826:4:101933:101951	2630490	0	True				
ANR	2650202	AssignmentExpression	ao -> o = 0x00f8000c		2630490	0		=			
ANR	2650203	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650204	Identifier	ao		2630490	0					
ANR	2650205	Identifier	o		2630490	1					
ANR	2650206	PrimaryExpression	0x00f8000c		2630490	1					
ANR	2650207	ElseStatement	else		2630490	0					
ANR	2650208	IfStatement	if ( strsel == H_BIT )		2630490	0					
ANR	2650209	Condition	strsel == H_BIT	4828:7:101970:101984	2630490	0	True				
ANR	2650210	EqualityExpression	strsel == H_BIT		2630490	0		==			
ANR	2650211	Identifier	strsel		2630490	0					
ANR	2650212	Identifier	H_BIT		2630490	1					
ANR	2650213	CompoundStatement		3536:24:76128:76128	2630490	1					
ANR	2650214	ExpressionStatement	ao -> o = 0x20f8000c	4829:4:101993:102011	2630490	0	True				
ANR	2650215	AssignmentExpression	ao -> o = 0x20f8000c		2630490	0		=			
ANR	2650216	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650217	Identifier	ao		2630490	0					
ANR	2650218	Identifier	o		2630490	1					
ANR	2650219	PrimaryExpression	0x20f8000c		2630490	1					
ANR	2650220	ElseStatement	else		2630490	0					
ANR	2650221	CompoundStatement		3538:10:76164:76164	2630490	0					
ANR	2650222	ReturnStatement	return - 1 ;	4831:4:102029:102038	2630490	0	True				
ANR	2650223	UnaryOperationExpression	- 1		2630490	0					
ANR	2650224	UnaryOperator	-		2630490	0					
ANR	2650225	PrimaryExpression	1		2630490	1					
ANR	2650226	ExpressionStatement	ao -> o |= - num << 8	4833:3:102048:102066	2630490	13	True				
ANR	2650227	AssignmentExpression	ao -> o |= - num << 8		2630490	0		|=			
ANR	2650228	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650229	Identifier	ao		2630490	0					
ANR	2650230	Identifier	o		2630490	1					
ANR	2650231	ShiftExpression	- num << 8		2630490	1		<<			
ANR	2650232	UnaryOperationExpression	- num		2630490	0					
ANR	2650233	UnaryOperator	-		2630490	0					
ANR	2650234	Identifier	num		2630490	1					
ANR	2650235	PrimaryExpression	8		2630490	1					
ANR	2650236	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	4834:3:102071:102100	2630490	14	True				
ANR	2650237	CallExpression	"mem_32bit_2reg ( ao , m )"		2630490	0					
ANR	2650238	Callee	mem_32bit_2reg		2630490	0					
ANR	2650239	Identifier	mem_32bit_2reg		2630490	0					
ANR	2650240	ArgumentList	ao		2630490	1					
ANR	2650241	Argument	ao		2630490	0					
ANR	2650242	Identifier	ao		2630490	0					
ANR	2650243	Argument	m		2630490	1					
ANR	2650244	Identifier	m		2630490	0					
ANR	2650245	BreakStatement	break ;	4836:3:102117:102122	2630490	4	True				
ANR	2650246	Label	case THUMB_REG_BRACKREGBRACK_CONST :	4837:2:102126:102160	2630490	5	True				
ANR	2650247	Identifier	THUMB_REG_BRACKREGBRACK_CONST		2630490	0					
ANR	2650248	CompoundStatement		3548:3:76385:76413	2630490	6					
ANR	2650249	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4838:3:102167:102195	2630490	0	True				
ANR	2650250	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2650251	IdentifierDeclType	ut8		2630490	0					
ANR	2650252	Identifier	reg1		2630490	1					
ANR	2650253	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2650254	Identifier	reg1		2630490	0					
ANR	2650255	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2650256	Callee	getreg		2630490	0					
ANR	2650257	Identifier	getreg		2630490	0					
ANR	2650258	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2650259	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2650260	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2650261	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650262	Identifier	ao		2630490	0					
ANR	2650263	Identifier	a		2630490	1					
ANR	2650264	PrimaryExpression	0		2630490	1					
ANR	2650265	IdentifierDeclStatement	ut8 reg2 = getregmemstartend ( ao -> a [ 1 ] ) ;	4839:3:102200:102239	2630490	1	True				
ANR	2650266	IdentifierDecl	reg2 = getregmemstartend ( ao -> a [ 1 ] )		2630490	0					
ANR	2650267	IdentifierDeclType	ut8		2630490	0					
ANR	2650268	Identifier	reg2		2630490	1					
ANR	2650269	AssignmentExpression	reg2 = getregmemstartend ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2650270	Identifier	reg2		2630490	0					
ANR	2650271	CallExpression	getregmemstartend ( ao -> a [ 1 ] )		2630490	1					
ANR	2650272	Callee	getregmemstartend		2630490	0					
ANR	2650273	Identifier	getregmemstartend		2630490	0					
ANR	2650274	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2650275	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2650276	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2650277	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650278	Identifier	ao		2630490	0					
ANR	2650279	Identifier	a		2630490	1					
ANR	2650280	PrimaryExpression	1		2630490	1					
ANR	2650281	IdentifierDeclStatement	st32 num = getnum ( ao -> a [ 2 ] ) ;	4840:3:102244:102272	2630490	2	True				
ANR	2650282	IdentifierDecl	num = getnum ( ao -> a [ 2 ] )		2630490	0					
ANR	2650283	IdentifierDeclType	st32		2630490	0					
ANR	2650284	Identifier	num		2630490	1					
ANR	2650285	AssignmentExpression	num = getnum ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2650286	Identifier	num		2630490	0					
ANR	2650287	CallExpression	getnum ( ao -> a [ 2 ] )		2630490	1					
ANR	2650288	Callee	getnum		2630490	0					
ANR	2650289	Identifier	getnum		2630490	0					
ANR	2650290	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2650291	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2650292	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2650293	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650294	Identifier	ao		2630490	0					
ANR	2650295	Identifier	a		2630490	1					
ANR	2650296	PrimaryExpression	2		2630490	1					
ANR	2650297	IfStatement	if ( ( num > 255 ) || ( num < - 255 ) )		2630490	3					
ANR	2650298	Condition	( num > 255 ) || ( num < - 255 )	4842:7:102282:102308	2630490	0	True				
ANR	2650299	OrExpression	( num > 255 ) || ( num < - 255 )		2630490	0		||			
ANR	2650300	RelationalExpression	num > 255		2630490	0		>			
ANR	2650301	Identifier	num		2630490	0					
ANR	2650302	PrimaryExpression	255		2630490	1					
ANR	2650303	RelationalExpression	num < - 255		2630490	1		<			
ANR	2650304	Identifier	num		2630490	0					
ANR	2650305	UnaryOperationExpression	- 255		2630490	1					
ANR	2650306	UnaryOperator	-		2630490	0					
ANR	2650307	PrimaryExpression	255		2630490	1					
ANR	2650308	CompoundStatement		3550:36:76452:76452	2630490	1					
ANR	2650309	ReturnStatement	return - 1 ;	4843:4:102317:102326	2630490	0	True				
ANR	2650310	UnaryOperationExpression	- 1		2630490	0					
ANR	2650311	UnaryOperator	-		2630490	0					
ANR	2650312	PrimaryExpression	1		2630490	1					
ANR	2650313	IfStatement	if ( strsel == 0 )		2630490	4					
ANR	2650314	Condition	strsel == 0	4846:7:102341:102351	2630490	0	True				
ANR	2650315	EqualityExpression	strsel == 0		2630490	0		==			
ANR	2650316	Identifier	strsel		2630490	0					
ANR	2650317	PrimaryExpression	0		2630490	1					
ANR	2650318	CompoundStatement		3554:20:76495:76495	2630490	1					
ANR	2650319	ExpressionStatement	ao -> o = 0x40f80009	4847:4:102360:102378	2630490	0	True				
ANR	2650320	AssignmentExpression	ao -> o = 0x40f80009		2630490	0		=			
ANR	2650321	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650322	Identifier	ao		2630490	0					
ANR	2650323	Identifier	o		2630490	1					
ANR	2650324	PrimaryExpression	0x40f80009		2630490	1					
ANR	2650325	ElseStatement	else		2630490	0					
ANR	2650326	IfStatement	if ( strsel == B_BIT )		2630490	0					
ANR	2650327	Condition	strsel == B_BIT	4849:7:102398:102412	2630490	0	True				
ANR	2650328	EqualityExpression	strsel == B_BIT		2630490	0		==			
ANR	2650329	Identifier	strsel		2630490	0					
ANR	2650330	Identifier	B_BIT		2630490	1					
ANR	2650331	CompoundStatement		3557:24:76556:76556	2630490	1					
ANR	2650332	ExpressionStatement	ao -> o = 0x00f80009	4850:4:102421:102439	2630490	0	True				
ANR	2650333	AssignmentExpression	ao -> o = 0x00f80009		2630490	0		=			
ANR	2650334	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650335	Identifier	ao		2630490	0					
ANR	2650336	Identifier	o		2630490	1					
ANR	2650337	PrimaryExpression	0x00f80009		2630490	1					
ANR	2650338	ElseStatement	else		2630490	0					
ANR	2650339	IfStatement	if ( strsel == H_BIT )		2630490	0					
ANR	2650340	Condition	strsel == H_BIT	4852:7:102459:102473	2630490	0	True				
ANR	2650341	EqualityExpression	strsel == H_BIT		2630490	0		==			
ANR	2650342	Identifier	strsel		2630490	0					
ANR	2650343	Identifier	H_BIT		2630490	1					
ANR	2650344	CompoundStatement		3560:24:76617:76617	2630490	1					
ANR	2650345	ExpressionStatement	ao -> o = 0x20f80009	4853:4:102482:102500	2630490	0	True				
ANR	2650346	AssignmentExpression	ao -> o = 0x20f80009		2630490	0		=			
ANR	2650347	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650348	Identifier	ao		2630490	0					
ANR	2650349	Identifier	o		2630490	1					
ANR	2650350	PrimaryExpression	0x20f80009		2630490	1					
ANR	2650351	ElseStatement	else		2630490	0					
ANR	2650352	CompoundStatement		3562:10:76653:76653	2630490	0					
ANR	2650353	ReturnStatement	return - 1 ;	4855:4:102518:102527	2630490	0	True				
ANR	2650354	UnaryOperationExpression	- 1		2630490	0					
ANR	2650355	UnaryOperator	-		2630490	0					
ANR	2650356	PrimaryExpression	1		2630490	1					
ANR	2650357	IfStatement	if ( num < 0 )		2630490	5					
ANR	2650358	Condition	num < 0	4858:7:102542:102548	2630490	0	True				
ANR	2650359	RelationalExpression	num < 0		2630490	0		<			
ANR	2650360	Identifier	num		2630490	0					
ANR	2650361	PrimaryExpression	0		2630490	1					
ANR	2650362	CompoundStatement		3566:16:76692:76692	2630490	1					
ANR	2650363	ExpressionStatement	num = - num	4859:4:102557:102567	2630490	0	True				
ANR	2650364	AssignmentExpression	num = - num		2630490	0		=			
ANR	2650365	Identifier	num		2630490	0					
ANR	2650366	UnaryOperationExpression	- num		2630490	1					
ANR	2650367	UnaryOperator	-		2630490	0					
ANR	2650368	Identifier	num		2630490	1					
ANR	2650369	ElseStatement	else		2630490	0					
ANR	2650370	CompoundStatement		3568:10:76720:76720	2630490	0					
ANR	2650371	ExpressionStatement	ao -> o |= 1 << 1	4861:4:102585:102600	2630490	0	True				
ANR	2650372	AssignmentExpression	ao -> o |= 1 << 1		2630490	0		|=			
ANR	2650373	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650374	Identifier	ao		2630490	0					
ANR	2650375	Identifier	o		2630490	1					
ANR	2650376	ShiftExpression	1 << 1		2630490	1		<<			
ANR	2650377	PrimaryExpression	1		2630490	0					
ANR	2650378	PrimaryExpression	1		2630490	1					
ANR	2650379	ExpressionStatement	ao -> o |= num << 8	4863:3:102610:102627	2630490	6	True				
ANR	2650380	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2650381	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650382	Identifier	ao		2630490	0					
ANR	2650383	Identifier	o		2630490	1					
ANR	2650384	ShiftExpression	num << 8		2630490	1		<<			
ANR	2650385	Identifier	num		2630490	0					
ANR	2650386	PrimaryExpression	8		2630490	1					
ANR	2650387	ExpressionStatement	ao -> o |= reg1 << 4	4864:3:102632:102650	2630490	7	True				
ANR	2650388	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2650389	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650390	Identifier	ao		2630490	0					
ANR	2650391	Identifier	o		2630490	1					
ANR	2650392	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2650393	Identifier	reg1		2630490	0					
ANR	2650394	PrimaryExpression	4		2630490	1					
ANR	2650395	ExpressionStatement	ao -> o |= reg2 << 24	4865:3:102655:102674	2630490	8	True				
ANR	2650396	AssignmentExpression	ao -> o |= reg2 << 24		2630490	0		|=			
ANR	2650397	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650398	Identifier	ao		2630490	0					
ANR	2650399	Identifier	o		2630490	1					
ANR	2650400	ShiftExpression	reg2 << 24		2630490	1		<<			
ANR	2650401	Identifier	reg2		2630490	0					
ANR	2650402	PrimaryExpression	24		2630490	1					
ANR	2650403	ReturnStatement	return 4 ;	4866:3:102679:102687	2630490	9	True				
ANR	2650404	PrimaryExpression	4		2630490	0					
ANR	2650405	BreakStatement	break ;	4868:3:102704:102709	2630490	7	True				
ANR	2650406	Label	case THUMB_REG_BRACKREG_CONSTBRACKBANG :	4869:2:102713:102751	2630490	8	True				
ANR	2650407	Identifier	THUMB_REG_BRACKREG_CONSTBRACKBANG		2630490	0					
ANR	2650408	CompoundStatement		3578:3:76899:76937	2630490	9					
ANR	2650409	IdentifierDeclStatement	st32 num = getnummemendbang ( ao -> a [ 2 ] ) ;	4870:3:102758:102796	2630490	0	True				
ANR	2650410	IdentifierDecl	num = getnummemendbang ( ao -> a [ 2 ] )		2630490	0					
ANR	2650411	IdentifierDeclType	st32		2630490	0					
ANR	2650412	Identifier	num		2630490	1					
ANR	2650413	AssignmentExpression	num = getnummemendbang ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2650414	Identifier	num		2630490	0					
ANR	2650415	CallExpression	getnummemendbang ( ao -> a [ 2 ] )		2630490	1					
ANR	2650416	Callee	getnummemendbang		2630490	0					
ANR	2650417	Identifier	getnummemendbang		2630490	0					
ANR	2650418	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2650419	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2650420	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2650421	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650422	Identifier	ao		2630490	0					
ANR	2650423	Identifier	a		2630490	1					
ANR	2650424	PrimaryExpression	2		2630490	1					
ANR	2650425	IfStatement	if ( ( num > 255 ) || ( num < - 255 ) )		2630490	1					
ANR	2650426	Condition	( num > 255 ) || ( num < - 255 )	4872:7:102806:102832	2630490	0	True				
ANR	2650427	OrExpression	( num > 255 ) || ( num < - 255 )		2630490	0		||			
ANR	2650428	RelationalExpression	num > 255		2630490	0		>			
ANR	2650429	Identifier	num		2630490	0					
ANR	2650430	PrimaryExpression	255		2630490	1					
ANR	2650431	RelationalExpression	num < - 255		2630490	1		<			
ANR	2650432	Identifier	num		2630490	0					
ANR	2650433	UnaryOperationExpression	- 255		2630490	1					
ANR	2650434	UnaryOperator	-		2630490	0					
ANR	2650435	PrimaryExpression	255		2630490	1					
ANR	2650436	CompoundStatement		3580:36:76976:76976	2630490	1					
ANR	2650437	ReturnStatement	return - 1 ;	4873:4:102841:102850	2630490	0	True				
ANR	2650438	UnaryOperationExpression	- 1		2630490	0					
ANR	2650439	UnaryOperator	-		2630490	0					
ANR	2650440	PrimaryExpression	1		2630490	1					
ANR	2650441	IfStatement	if ( strsel == 0 )		2630490	2					
ANR	2650442	Condition	strsel == 0	4876:7:102865:102875	2630490	0	True				
ANR	2650443	EqualityExpression	strsel == 0		2630490	0		==			
ANR	2650444	Identifier	strsel		2630490	0					
ANR	2650445	PrimaryExpression	0		2630490	1					
ANR	2650446	CompoundStatement		3584:20:77019:77019	2630490	1					
ANR	2650447	ExpressionStatement	ao -> o = 0x40f8000d	4877:4:102884:102902	2630490	0	True				
ANR	2650448	AssignmentExpression	ao -> o = 0x40f8000d		2630490	0		=			
ANR	2650449	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650450	Identifier	ao		2630490	0					
ANR	2650451	Identifier	o		2630490	1					
ANR	2650452	PrimaryExpression	0x40f8000d		2630490	1					
ANR	2650453	ElseStatement	else		2630490	0					
ANR	2650454	IfStatement	if ( strsel == B_BIT )		2630490	0					
ANR	2650455	Condition	strsel == B_BIT	4879:7:102922:102936	2630490	0	True				
ANR	2650456	EqualityExpression	strsel == B_BIT		2630490	0		==			
ANR	2650457	Identifier	strsel		2630490	0					
ANR	2650458	Identifier	B_BIT		2630490	1					
ANR	2650459	CompoundStatement		3587:24:77080:77080	2630490	1					
ANR	2650460	ExpressionStatement	ao -> o = 0x00f8000d	4880:4:102945:102963	2630490	0	True				
ANR	2650461	AssignmentExpression	ao -> o = 0x00f8000d		2630490	0		=			
ANR	2650462	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650463	Identifier	ao		2630490	0					
ANR	2650464	Identifier	o		2630490	1					
ANR	2650465	PrimaryExpression	0x00f8000d		2630490	1					
ANR	2650466	ElseStatement	else		2630490	0					
ANR	2650467	IfStatement	if ( strsel == H_BIT )		2630490	0					
ANR	2650468	Condition	strsel == H_BIT	4882:7:102983:102997	2630490	0	True				
ANR	2650469	EqualityExpression	strsel == H_BIT		2630490	0		==			
ANR	2650470	Identifier	strsel		2630490	0					
ANR	2650471	Identifier	H_BIT		2630490	1					
ANR	2650472	CompoundStatement		3590:24:77141:77141	2630490	1					
ANR	2650473	ExpressionStatement	ao -> o = 0x20f8000d	4883:4:103006:103024	2630490	0	True				
ANR	2650474	AssignmentExpression	ao -> o = 0x20f8000d		2630490	0		=			
ANR	2650475	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650476	Identifier	ao		2630490	0					
ANR	2650477	Identifier	o		2630490	1					
ANR	2650478	PrimaryExpression	0x20f8000d		2630490	1					
ANR	2650479	ElseStatement	else		2630490	0					
ANR	2650480	CompoundStatement		3592:10:77177:77177	2630490	0					
ANR	2650481	ReturnStatement	return - 1 ;	4885:4:103042:103051	2630490	0	True				
ANR	2650482	UnaryOperationExpression	- 1		2630490	0					
ANR	2650483	UnaryOperator	-		2630490	0					
ANR	2650484	PrimaryExpression	1		2630490	1					
ANR	2650485	IfStatement	if ( num < 0 )		2630490	3					
ANR	2650486	Condition	num < 0	4888:7:103066:103072	2630490	0	True				
ANR	2650487	RelationalExpression	num < 0		2630490	0		<			
ANR	2650488	Identifier	num		2630490	0					
ANR	2650489	PrimaryExpression	0		2630490	1					
ANR	2650490	CompoundStatement		3596:16:77216:77216	2630490	1					
ANR	2650491	ExpressionStatement	num = - num	4889:4:103081:103091	2630490	0	True				
ANR	2650492	AssignmentExpression	num = - num		2630490	0		=			
ANR	2650493	Identifier	num		2630490	0					
ANR	2650494	UnaryOperationExpression	- num		2630490	1					
ANR	2650495	UnaryOperator	-		2630490	0					
ANR	2650496	Identifier	num		2630490	1					
ANR	2650497	ElseStatement	else		2630490	0					
ANR	2650498	CompoundStatement		3598:10:77244:77244	2630490	0					
ANR	2650499	ExpressionStatement	ao -> o |= 1 << 1	4891:4:103109:103124	2630490	0	True				
ANR	2650500	AssignmentExpression	ao -> o |= 1 << 1		2630490	0		|=			
ANR	2650501	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650502	Identifier	ao		2630490	0					
ANR	2650503	Identifier	o		2630490	1					
ANR	2650504	ShiftExpression	1 << 1		2630490	1		<<			
ANR	2650505	PrimaryExpression	1		2630490	0					
ANR	2650506	PrimaryExpression	1		2630490	1					
ANR	2650507	ExpressionStatement	ao -> o |= num << 8	4893:3:103134:103151	2630490	4	True				
ANR	2650508	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2650509	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650510	Identifier	ao		2630490	0					
ANR	2650511	Identifier	o		2630490	1					
ANR	2650512	ShiftExpression	num << 8		2630490	1		<<			
ANR	2650513	Identifier	num		2630490	0					
ANR	2650514	PrimaryExpression	8		2630490	1					
ANR	2650515	ReturnStatement	"return mem_32bit_2reg ( ao , m ) ;"	4894:3:103156:103185	2630490	5	True				
ANR	2650516	CallExpression	"mem_32bit_2reg ( ao , m )"		2630490	0					
ANR	2650517	Callee	mem_32bit_2reg		2630490	0					
ANR	2650518	Identifier	mem_32bit_2reg		2630490	0					
ANR	2650519	ArgumentList	ao		2630490	1					
ANR	2650520	Argument	ao		2630490	0					
ANR	2650521	Identifier	ao		2630490	0					
ANR	2650522	Argument	m		2630490	1					
ANR	2650523	Identifier	m		2630490	0					
ANR	2650524	BreakStatement	break ;	4896:3:103202:103207	2630490	10	True				
ANR	2650525	Label	case THUMB_REG_BRACKREG_REGBRACK :	4897:2:103211:103243	2630490	11	True				
ANR	2650526	Identifier	THUMB_REG_BRACKREG_REGBRACK		2630490	0					
ANR	2650527	CompoundStatement		3608:3:77465:77499	2630490	12					
ANR	2650528	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4898:3:103250:103278	2630490	0	True				
ANR	2650529	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2650530	IdentifierDeclType	ut8		2630490	0					
ANR	2650531	Identifier	reg1		2630490	1					
ANR	2650532	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2650533	Identifier	reg1		2630490	0					
ANR	2650534	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2650535	Callee	getreg		2630490	0					
ANR	2650536	Identifier	getreg		2630490	0					
ANR	2650537	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2650538	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2650539	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2650540	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650541	Identifier	ao		2630490	0					
ANR	2650542	Identifier	a		2630490	1					
ANR	2650543	PrimaryExpression	0		2630490	1					
ANR	2650544	IdentifierDeclStatement	ut8 reg2 = getregmemstart ( ao -> a [ 1 ] ) ;	4899:3:103283:103319	2630490	1	True				
ANR	2650545	IdentifierDecl	reg2 = getregmemstart ( ao -> a [ 1 ] )		2630490	0					
ANR	2650546	IdentifierDeclType	ut8		2630490	0					
ANR	2650547	Identifier	reg2		2630490	1					
ANR	2650548	AssignmentExpression	reg2 = getregmemstart ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2650549	Identifier	reg2		2630490	0					
ANR	2650550	CallExpression	getregmemstart ( ao -> a [ 1 ] )		2630490	1					
ANR	2650551	Callee	getregmemstart		2630490	0					
ANR	2650552	Identifier	getregmemstart		2630490	0					
ANR	2650553	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2650554	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2650555	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2650556	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650557	Identifier	ao		2630490	0					
ANR	2650558	Identifier	a		2630490	1					
ANR	2650559	PrimaryExpression	1		2630490	1					
ANR	2650560	IdentifierDeclStatement	ut8 reg3 = getregmemend ( ao -> a [ 2 ] ) ;	4900:3:103324:103358	2630490	2	True				
ANR	2650561	IdentifierDecl	reg3 = getregmemend ( ao -> a [ 2 ] )		2630490	0					
ANR	2650562	IdentifierDeclType	ut8		2630490	0					
ANR	2650563	Identifier	reg3		2630490	1					
ANR	2650564	AssignmentExpression	reg3 = getregmemend ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2650565	Identifier	reg3		2630490	0					
ANR	2650566	CallExpression	getregmemend ( ao -> a [ 2 ] )		2630490	1					
ANR	2650567	Callee	getregmemend		2630490	0					
ANR	2650568	Identifier	getregmemend		2630490	0					
ANR	2650569	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2650570	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2650571	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2650572	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650573	Identifier	ao		2630490	0					
ANR	2650574	Identifier	a		2630490	1					
ANR	2650575	PrimaryExpression	2		2630490	1					
ANR	2650576	IfStatement	if ( ( reg1 < 8 ) && ( reg2 < 8 ) && ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) ) )		2630490	3					
ANR	2650577	Condition	( reg1 < 8 ) && ( reg2 < 8 ) && ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) )	4901:7:103367:103425	2630490	0	True				
ANR	2650578	AndExpression	( reg1 < 8 ) && ( reg2 < 8 ) && ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) )		2630490	0		&&			
ANR	2650579	RelationalExpression	reg1 < 8		2630490	0		<			
ANR	2650580	Identifier	reg1		2630490	0					
ANR	2650581	PrimaryExpression	8		2630490	1					
ANR	2650582	AndExpression	( reg2 < 8 ) && ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) )		2630490	1		&&			
ANR	2650583	RelationalExpression	reg2 < 8		2630490	0		<			
ANR	2650584	Identifier	reg2		2630490	0					
ANR	2650585	PrimaryExpression	8		2630490	1					
ANR	2650586	AndExpression	( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) )		2630490	1		&&			
ANR	2650587	RelationalExpression	reg3 < 8		2630490	0		<			
ANR	2650588	Identifier	reg3		2630490	0					
ANR	2650589	PrimaryExpression	8		2630490	1					
ANR	2650590	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	1					
ANR	2650591	UnaryOperator	!		2630490	0					
ANR	2650592	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2650593	Identifier	m		2630490	0					
ANR	2650594	Identifier	DOTW_BIT		2630490	1					
ANR	2650595	CompoundStatement		3609:68:77569:77569	2630490	1					
ANR	2650596	IfStatement	if ( strsel == 0 )		2630490	0					
ANR	2650597	Condition	strsel == 0	4902:8:103438:103448	2630490	0	True				
ANR	2650598	EqualityExpression	strsel == 0		2630490	0		==			
ANR	2650599	Identifier	strsel		2630490	0					
ANR	2650600	PrimaryExpression	0		2630490	1					
ANR	2650601	CompoundStatement		3610:21:77592:77592	2630490	1					
ANR	2650602	ExpressionStatement	ao -> o = 0x0050	4903:5:103458:103472	2630490	0	True				
ANR	2650603	AssignmentExpression	ao -> o = 0x0050		2630490	0		=			
ANR	2650604	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650605	Identifier	ao		2630490	0					
ANR	2650606	Identifier	o		2630490	1					
ANR	2650607	PrimaryExpression	0x0050		2630490	1					
ANR	2650608	ElseStatement	else		2630490	0					
ANR	2650609	IfStatement	if ( strsel == B_BIT )		2630490	0					
ANR	2650610	Condition	strsel == B_BIT	4905:8:103493:103507	2630490	0	True				
ANR	2650611	EqualityExpression	strsel == B_BIT		2630490	0		==			
ANR	2650612	Identifier	strsel		2630490	0					
ANR	2650613	Identifier	B_BIT		2630490	1					
ANR	2650614	CompoundStatement		3613:25:77651:77651	2630490	1					
ANR	2650615	ExpressionStatement	ao -> o = 0x0054	4906:5:103517:103531	2630490	0	True				
ANR	2650616	AssignmentExpression	ao -> o = 0x0054		2630490	0		=			
ANR	2650617	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650618	Identifier	ao		2630490	0					
ANR	2650619	Identifier	o		2630490	1					
ANR	2650620	PrimaryExpression	0x0054		2630490	1					
ANR	2650621	ElseStatement	else		2630490	0					
ANR	2650622	IfStatement	if ( strsel == H_BIT )		2630490	0					
ANR	2650623	Condition	strsel == H_BIT	4908:8:103552:103566	2630490	0	True				
ANR	2650624	EqualityExpression	strsel == H_BIT		2630490	0		==			
ANR	2650625	Identifier	strsel		2630490	0					
ANR	2650626	Identifier	H_BIT		2630490	1					
ANR	2650627	CompoundStatement		3616:25:77710:77710	2630490	1					
ANR	2650628	ExpressionStatement	ao -> o = 0x0052	4909:5:103576:103590	2630490	0	True				
ANR	2650629	AssignmentExpression	ao -> o = 0x0052		2630490	0		=			
ANR	2650630	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650631	Identifier	ao		2630490	0					
ANR	2650632	Identifier	o		2630490	1					
ANR	2650633	PrimaryExpression	0x0052		2630490	1					
ANR	2650634	ElseStatement	else		2630490	0					
ANR	2650635	CompoundStatement		3618:11:77744:77744	2630490	0					
ANR	2650636	ReturnStatement	return - 1 ;	4911:5:103610:103619	2630490	0	True				
ANR	2650637	UnaryOperationExpression	- 1		2630490	0					
ANR	2650638	UnaryOperator	-		2630490	0					
ANR	2650639	PrimaryExpression	1		2630490	1					
ANR	2650640	ExpressionStatement	ao -> o |= reg1 << 8	4913:4:103631:103649	2630490	1	True				
ANR	2650641	AssignmentExpression	ao -> o |= reg1 << 8		2630490	0		|=			
ANR	2650642	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650643	Identifier	ao		2630490	0					
ANR	2650644	Identifier	o		2630490	1					
ANR	2650645	ShiftExpression	reg1 << 8		2630490	1		<<			
ANR	2650646	Identifier	reg1		2630490	0					
ANR	2650647	PrimaryExpression	8		2630490	1					
ANR	2650648	ExpressionStatement	ao -> o |= reg2 << 11	4914:4:103655:103674	2630490	2	True				
ANR	2650649	AssignmentExpression	ao -> o |= reg2 << 11		2630490	0		|=			
ANR	2650650	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650651	Identifier	ao		2630490	0					
ANR	2650652	Identifier	o		2630490	1					
ANR	2650653	ShiftExpression	reg2 << 11		2630490	1		<<			
ANR	2650654	Identifier	reg2		2630490	0					
ANR	2650655	PrimaryExpression	11		2630490	1					
ANR	2650656	ExpressionStatement	ao -> o |= ( reg3 & 0x3 ) << 14	4915:4:103680:103707	2630490	3	True				
ANR	2650657	AssignmentExpression	ao -> o |= ( reg3 & 0x3 ) << 14		2630490	0		|=			
ANR	2650658	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650659	Identifier	ao		2630490	0					
ANR	2650660	Identifier	o		2630490	1					
ANR	2650661	ShiftExpression	( reg3 & 0x3 ) << 14		2630490	1		<<			
ANR	2650662	BitAndExpression	reg3 & 0x3		2630490	0		&			
ANR	2650663	Identifier	reg3		2630490	0					
ANR	2650664	PrimaryExpression	0x3		2630490	1					
ANR	2650665	PrimaryExpression	14		2630490	1					
ANR	2650666	ExpressionStatement	ao -> o |= ( reg3 >> 2 )	4916:4:103713:103733	2630490	4	True				
ANR	2650667	AssignmentExpression	ao -> o |= ( reg3 >> 2 )		2630490	0		|=			
ANR	2650668	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650669	Identifier	ao		2630490	0					
ANR	2650670	Identifier	o		2630490	1					
ANR	2650671	ShiftExpression	reg3 >> 2		2630490	1		>>			
ANR	2650672	Identifier	reg3		2630490	0					
ANR	2650673	PrimaryExpression	2		2630490	1					
ANR	2650674	ReturnStatement	return 2 ;	4917:4:103739:103747	2630490	5	True				
ANR	2650675	PrimaryExpression	2		2630490	0					
ANR	2650676	ExpressionStatement	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'	4919:3:103757:103795	2630490	4	True				
ANR	2650677	AssignmentExpression	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'		2630490	0		=			
ANR	2650678	ArrayIndexing	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ]		2630490	0					
ANR	2650679	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2650680	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650681	Identifier	ao		2630490	0					
ANR	2650682	Identifier	a		2630490	1					
ANR	2650683	PrimaryExpression	2		2630490	1					
ANR	2650684	AdditiveExpression	strlen ( ao -> a [ 2 ] ) - 1		2630490	1		-			
ANR	2650685	CallExpression	strlen ( ao -> a [ 2 ] )		2630490	0					
ANR	2650686	Callee	strlen		2630490	0					
ANR	2650687	Identifier	strlen		2630490	0					
ANR	2650688	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2650689	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2650690	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2650691	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650692	Identifier	ao		2630490	0					
ANR	2650693	Identifier	a		2630490	1					
ANR	2650694	PrimaryExpression	2		2630490	1					
ANR	2650695	PrimaryExpression	1		2630490	1					
ANR	2650696	PrimaryExpression	'\\0'		2630490	1					
ANR	2650697	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0]"""	4920:3:103800:103819	2630490	5	True				
ANR	2650698	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0]"""		2630490	0		=			
ANR	2650699	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2650700	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650701	Identifier	ao		2630490	0					
ANR	2650702	Identifier	a		2630490	1					
ANR	2650703	PrimaryExpression	3		2630490	1					
ANR	2650704	PrimaryExpression	"""lsl 0]"""		2630490	1					
ANR	2650705	Label	case THUMB_REG_BRACKREG_REG_SHIFTBRACK :	4923:2:103865:103903	2630490	13	True				
ANR	2650706	Identifier	THUMB_REG_BRACKREG_REG_SHIFTBRACK		2630490	0					
ANR	2650707	CompoundStatement		3635:3:78158:78201	2630490	14					
ANR	2650708	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4924:3:103910:103938	2630490	0	True				
ANR	2650709	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2650710	IdentifierDeclType	ut8		2630490	0					
ANR	2650711	Identifier	reg1		2630490	1					
ANR	2650712	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2650713	Identifier	reg1		2630490	0					
ANR	2650714	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2650715	Callee	getreg		2630490	0					
ANR	2650716	Identifier	getreg		2630490	0					
ANR	2650717	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2650718	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2650719	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2650720	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650721	Identifier	ao		2630490	0					
ANR	2650722	Identifier	a		2630490	1					
ANR	2650723	PrimaryExpression	0		2630490	1					
ANR	2650724	IdentifierDeclStatement	ut8 reg2 = getregmemstart ( ao -> a [ 1 ] ) ;	4925:3:103943:103979	2630490	1	True				
ANR	2650725	IdentifierDecl	reg2 = getregmemstart ( ao -> a [ 1 ] )		2630490	0					
ANR	2650726	IdentifierDeclType	ut8		2630490	0					
ANR	2650727	Identifier	reg2		2630490	1					
ANR	2650728	AssignmentExpression	reg2 = getregmemstart ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2650729	Identifier	reg2		2630490	0					
ANR	2650730	CallExpression	getregmemstart ( ao -> a [ 1 ] )		2630490	1					
ANR	2650731	Callee	getregmemstart		2630490	0					
ANR	2650732	Identifier	getregmemstart		2630490	0					
ANR	2650733	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2650734	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2650735	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2650736	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650737	Identifier	ao		2630490	0					
ANR	2650738	Identifier	a		2630490	1					
ANR	2650739	PrimaryExpression	1		2630490	1					
ANR	2650740	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	4926:3:103984:104012	2630490	2	True				
ANR	2650741	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2650742	IdentifierDeclType	ut8		2630490	0					
ANR	2650743	Identifier	reg3		2630490	1					
ANR	2650744	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2650745	Identifier	reg3		2630490	0					
ANR	2650746	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2650747	Callee	getreg		2630490	0					
ANR	2650748	Identifier	getreg		2630490	0					
ANR	2650749	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2650750	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2650751	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2650752	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650753	Identifier	ao		2630490	0					
ANR	2650754	Identifier	a		2630490	1					
ANR	2650755	PrimaryExpression	2		2630490	1					
ANR	2650756	IdentifierDeclStatement	ut32 shift = getshiftmemend ( ao -> a [ 3 ] ) >> 2 ;	4927:3:104017:104060	2630490	3	True				
ANR	2650757	IdentifierDecl	shift = getshiftmemend ( ao -> a [ 3 ] ) >> 2		2630490	0					
ANR	2650758	IdentifierDeclType	ut32		2630490	0					
ANR	2650759	Identifier	shift		2630490	1					
ANR	2650760	AssignmentExpression	shift = getshiftmemend ( ao -> a [ 3 ] ) >> 2		2630490	2		=			
ANR	2650761	Identifier	shift		2630490	0					
ANR	2650762	ShiftExpression	getshiftmemend ( ao -> a [ 3 ] ) >> 2		2630490	1		>>			
ANR	2650763	CallExpression	getshiftmemend ( ao -> a [ 3 ] )		2630490	0					
ANR	2650764	Callee	getshiftmemend		2630490	0					
ANR	2650765	Identifier	getshiftmemend		2630490	0					
ANR	2650766	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2650767	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2650768	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2650769	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650770	Identifier	ao		2630490	0					
ANR	2650771	Identifier	a		2630490	1					
ANR	2650772	PrimaryExpression	3		2630490	1					
ANR	2650773	PrimaryExpression	2		2630490	1					
ANR	2650774	IfStatement	if ( ( ( shift & 0xffffcfff ) != 0 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) )		2630490	4					
ANR	2650775	Condition	( ( shift & 0xffffcfff ) != 0 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 )	4929:7:104073:104144	2630490	0	True				
ANR	2650776	OrExpression	( ( shift & 0xffffcfff ) != 0 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 )		2630490	0		||			
ANR	2650777	EqualityExpression	( shift & 0xffffcfff ) != 0		2630490	0		!=			
ANR	2650778	BitAndExpression	shift & 0xffffcfff		2630490	0		&			
ANR	2650779	Identifier	shift		2630490	0					
ANR	2650780	PrimaryExpression	0xffffcfff		2630490	1					
ANR	2650781	PrimaryExpression	0		2630490	1					
ANR	2650782	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 )		2630490	1		||			
ANR	2650783	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2650784	Identifier	reg1		2630490	0					
ANR	2650785	PrimaryExpression	15		2630490	1					
ANR	2650786	OrExpression	( reg2 > 15 ) || ( reg3 > 15 )		2630490	1		||			
ANR	2650787	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2650788	Identifier	reg2		2630490	0					
ANR	2650789	PrimaryExpression	15		2630490	1					
ANR	2650790	RelationalExpression	reg3 > 15		2630490	1		>			
ANR	2650791	Identifier	reg3		2630490	0					
ANR	2650792	PrimaryExpression	15		2630490	1					
ANR	2650793	CompoundStatement		3637:81:78288:78288	2630490	1					
ANR	2650794	ReturnStatement	return - 1 ;	4930:4:104153:104162	2630490	0	True				
ANR	2650795	UnaryOperationExpression	- 1		2630490	0					
ANR	2650796	UnaryOperator	-		2630490	0					
ANR	2650797	PrimaryExpression	1		2630490	1					
ANR	2650798	IfStatement	if ( strsel == 0 )		2630490	5					
ANR	2650799	Condition	strsel == 0	4933:7:104177:104187	2630490	0	True				
ANR	2650800	EqualityExpression	strsel == 0		2630490	0		==			
ANR	2650801	Identifier	strsel		2630490	0					
ANR	2650802	PrimaryExpression	0		2630490	1					
ANR	2650803	CompoundStatement		3641:20:78331:78331	2630490	1					
ANR	2650804	ExpressionStatement	ao -> o = 0x40f80000	4934:4:104196:104214	2630490	0	True				
ANR	2650805	AssignmentExpression	ao -> o = 0x40f80000		2630490	0		=			
ANR	2650806	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650807	Identifier	ao		2630490	0					
ANR	2650808	Identifier	o		2630490	1					
ANR	2650809	PrimaryExpression	0x40f80000		2630490	1					
ANR	2650810	ElseStatement	else		2630490	0					
ANR	2650811	IfStatement	if ( strsel == B_BIT )		2630490	0					
ANR	2650812	Condition	strsel == B_BIT	4936:7:104234:104248	2630490	0	True				
ANR	2650813	EqualityExpression	strsel == B_BIT		2630490	0		==			
ANR	2650814	Identifier	strsel		2630490	0					
ANR	2650815	Identifier	B_BIT		2630490	1					
ANR	2650816	CompoundStatement		3644:24:78392:78392	2630490	1					
ANR	2650817	ExpressionStatement	ao -> o = 0x00f80000	4937:4:104257:104275	2630490	0	True				
ANR	2650818	AssignmentExpression	ao -> o = 0x00f80000		2630490	0		=			
ANR	2650819	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650820	Identifier	ao		2630490	0					
ANR	2650821	Identifier	o		2630490	1					
ANR	2650822	PrimaryExpression	0x00f80000		2630490	1					
ANR	2650823	ElseStatement	else		2630490	0					
ANR	2650824	IfStatement	if ( strsel == H_BIT )		2630490	0					
ANR	2650825	Condition	strsel == H_BIT	4939:7:104295:104309	2630490	0	True				
ANR	2650826	EqualityExpression	strsel == H_BIT		2630490	0		==			
ANR	2650827	Identifier	strsel		2630490	0					
ANR	2650828	Identifier	H_BIT		2630490	1					
ANR	2650829	CompoundStatement		3647:24:78453:78453	2630490	1					
ANR	2650830	ExpressionStatement	ao -> o = 0x20f80000	4940:4:104318:104336	2630490	0	True				
ANR	2650831	AssignmentExpression	ao -> o = 0x20f80000		2630490	0		=			
ANR	2650832	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650833	Identifier	ao		2630490	0					
ANR	2650834	Identifier	o		2630490	1					
ANR	2650835	PrimaryExpression	0x20f80000		2630490	1					
ANR	2650836	ElseStatement	else		2630490	0					
ANR	2650837	CompoundStatement		3649:10:78489:78489	2630490	0					
ANR	2650838	ReturnStatement	return - 1 ;	4942:4:104354:104363	2630490	0	True				
ANR	2650839	UnaryOperationExpression	- 1		2630490	0					
ANR	2650840	UnaryOperator	-		2630490	0					
ANR	2650841	PrimaryExpression	1		2630490	1					
ANR	2650842	ExpressionStatement	ao -> o |= reg1 << 4	4945:3:104377:104395	2630490	6	True				
ANR	2650843	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2650844	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650845	Identifier	ao		2630490	0					
ANR	2650846	Identifier	o		2630490	1					
ANR	2650847	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2650848	Identifier	reg1		2630490	0					
ANR	2650849	PrimaryExpression	4		2630490	1					
ANR	2650850	ExpressionStatement	ao -> o |= reg2 << 24	4946:3:104400:104419	2630490	7	True				
ANR	2650851	AssignmentExpression	ao -> o |= reg2 << 24		2630490	0		|=			
ANR	2650852	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650853	Identifier	ao		2630490	0					
ANR	2650854	Identifier	o		2630490	1					
ANR	2650855	ShiftExpression	reg2 << 24		2630490	1		<<			
ANR	2650856	Identifier	reg2		2630490	0					
ANR	2650857	PrimaryExpression	24		2630490	1					
ANR	2650858	ExpressionStatement	ao -> o |= reg3 << 8	4947:3:104424:104442	2630490	8	True				
ANR	2650859	AssignmentExpression	ao -> o |= reg3 << 8		2630490	0		|=			
ANR	2650860	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650861	Identifier	ao		2630490	0					
ANR	2650862	Identifier	o		2630490	1					
ANR	2650863	ShiftExpression	reg3 << 8		2630490	1		<<			
ANR	2650864	Identifier	reg3		2630490	0					
ANR	2650865	PrimaryExpression	8		2630490	1					
ANR	2650866	ExpressionStatement	ao -> o |= shift	4948:3:104447:104461	2630490	9	True				
ANR	2650867	AssignmentExpression	ao -> o |= shift		2630490	0		|=			
ANR	2650868	PtrMemberAccess	ao -> o		2630490	0					
ANR	2650869	Identifier	ao		2630490	0					
ANR	2650870	Identifier	o		2630490	1					
ANR	2650871	Identifier	shift		2630490	1					
ANR	2650872	ReturnStatement	return 4 ;	4949:3:104466:104474	2630490	10	True				
ANR	2650873	PrimaryExpression	4		2630490	0					
ANR	2650874	BreakStatement	break ;	4951:3:104491:104496	2630490	15	True				
ANR	2650875	Label	case THUMB_REG_REG_BRACKREGBRACK :	4952:2:104500:104532	2630490	16	True				
ANR	2650876	Identifier	THUMB_REG_REG_BRACKREGBRACK		2630490	0					
ANR	2650877	CompoundStatement		3660:36:78675:78675	2630490	17					
ANR	2650878	ExpressionStatement	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'	4953:3:104539:104577	2630490	0	True				
ANR	2650879	AssignmentExpression	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'		2630490	0		=			
ANR	2650880	ArrayIndexing	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ]		2630490	0					
ANR	2650881	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2650882	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650883	Identifier	ao		2630490	0					
ANR	2650884	Identifier	a		2630490	1					
ANR	2650885	PrimaryExpression	2		2630490	1					
ANR	2650886	AdditiveExpression	strlen ( ao -> a [ 2 ] ) - 1		2630490	1		-			
ANR	2650887	CallExpression	strlen ( ao -> a [ 2 ] )		2630490	0					
ANR	2650888	Callee	strlen		2630490	0					
ANR	2650889	Identifier	strlen		2630490	0					
ANR	2650890	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2650891	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2650892	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2650893	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650894	Identifier	ao		2630490	0					
ANR	2650895	Identifier	a		2630490	1					
ANR	2650896	PrimaryExpression	2		2630490	1					
ANR	2650897	PrimaryExpression	1		2630490	1					
ANR	2650898	PrimaryExpression	'\\0'		2630490	1					
ANR	2650899	ExpressionStatement	"ao -> a [ 3 ] = ""0]"""	4954:3:104582:104597	2630490	1	True				
ANR	2650900	AssignmentExpression	"ao -> a [ 3 ] = ""0]"""		2630490	0		=			
ANR	2650901	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2650902	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650903	Identifier	ao		2630490	0					
ANR	2650904	Identifier	a		2630490	1					
ANR	2650905	PrimaryExpression	3		2630490	1					
ANR	2650906	PrimaryExpression	"""0]"""		2630490	1					
ANR	2650907	Label	case THUMB_REG_REG_BRACKREG_CONSTBRACK :	4957:2:104643:104681	2630490	18	True				
ANR	2650908	Identifier	THUMB_REG_REG_BRACKREG_CONSTBRACK		2630490	0					
ANR	2650909	CompoundStatement		3669:3:78936:78970	2630490	19					
ANR	2650910	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4958:3:104688:104716	2630490	0	True				
ANR	2650911	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2650912	IdentifierDeclType	ut8		2630490	0					
ANR	2650913	Identifier	reg1		2630490	1					
ANR	2650914	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2650915	Identifier	reg1		2630490	0					
ANR	2650916	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2650917	Callee	getreg		2630490	0					
ANR	2650918	Identifier	getreg		2630490	0					
ANR	2650919	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2650920	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2650921	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2650922	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650923	Identifier	ao		2630490	0					
ANR	2650924	Identifier	a		2630490	1					
ANR	2650925	PrimaryExpression	0		2630490	1					
ANR	2650926	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	4959:3:104721:104749	2630490	1	True				
ANR	2650927	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2650928	IdentifierDeclType	ut8		2630490	0					
ANR	2650929	Identifier	reg2		2630490	1					
ANR	2650930	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2650931	Identifier	reg2		2630490	0					
ANR	2650932	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2650933	Callee	getreg		2630490	0					
ANR	2650934	Identifier	getreg		2630490	0					
ANR	2650935	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2650936	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2650937	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2650938	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650939	Identifier	ao		2630490	0					
ANR	2650940	Identifier	a		2630490	1					
ANR	2650941	PrimaryExpression	1		2630490	1					
ANR	2650942	IdentifierDeclStatement	ut8 reg3 = getregmemstart ( ao -> a [ 2 ] ) ;	4960:3:104754:104790	2630490	2	True				
ANR	2650943	IdentifierDecl	reg3 = getregmemstart ( ao -> a [ 2 ] )		2630490	0					
ANR	2650944	IdentifierDeclType	ut8		2630490	0					
ANR	2650945	Identifier	reg3		2630490	1					
ANR	2650946	AssignmentExpression	reg3 = getregmemstart ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2650947	Identifier	reg3		2630490	0					
ANR	2650948	CallExpression	getregmemstart ( ao -> a [ 2 ] )		2630490	1					
ANR	2650949	Callee	getregmemstart		2630490	0					
ANR	2650950	Identifier	getregmemstart		2630490	0					
ANR	2650951	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2650952	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2650953	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2650954	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650955	Identifier	ao		2630490	0					
ANR	2650956	Identifier	a		2630490	1					
ANR	2650957	PrimaryExpression	2		2630490	1					
ANR	2650958	IdentifierDeclStatement	st32 num = getnummemend ( ao -> a [ 3 ] ) ;	4961:3:104795:104829	2630490	3	True				
ANR	2650959	IdentifierDecl	num = getnummemend ( ao -> a [ 3 ] )		2630490	0					
ANR	2650960	IdentifierDeclType	st32		2630490	0					
ANR	2650961	Identifier	num		2630490	1					
ANR	2650962	AssignmentExpression	num = getnummemend ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2650963	Identifier	num		2630490	0					
ANR	2650964	CallExpression	getnummemend ( ao -> a [ 3 ] )		2630490	1					
ANR	2650965	Callee	getnummemend		2630490	0					
ANR	2650966	Identifier	getnummemend		2630490	0					
ANR	2650967	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2650968	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2650969	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2650970	PtrMemberAccess	ao -> a		2630490	0					
ANR	2650971	Identifier	ao		2630490	0					
ANR	2650972	Identifier	a		2630490	1					
ANR	2650973	PrimaryExpression	3		2630490	1					
ANR	2650974	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 ) )		2630490	4					
ANR	2650975	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )	4963:7:104839:104953	2630490	0	True				
ANR	2650976	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		2630490	0		||			
ANR	2650977	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2650978	Identifier	reg1		2630490	0					
ANR	2650979	PrimaryExpression	15		2630490	1					
ANR	2650980	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2650981	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2650982	Identifier	reg2		2630490	0					
ANR	2650983	PrimaryExpression	15		2630490	1					
ANR	2650984	OrExpression	( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2650985	RelationalExpression	reg3 > 15		2630490	0		>			
ANR	2650986	Identifier	reg3		2630490	0					
ANR	2650987	PrimaryExpression	15		2630490	1					
ANR	2650988	OrExpression	( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2650989	EqualityExpression	strsel != D_BIT		2630490	0		!=			
ANR	2650990	Identifier	strsel		2630490	0					
ANR	2650991	Identifier	D_BIT		2630490	1					
ANR	2650992	OrExpression	( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2650993	RelationalExpression	num > 1023		2630490	0		>			
ANR	2650994	Identifier	num		2630490	0					
ANR	2650995	PrimaryExpression	1023		2630490	1					
ANR	2650996	OrExpression	( num < - 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2650997	RelationalExpression	num < - 1023		2630490	0		<			
ANR	2650998	Identifier	num		2630490	0					
ANR	2650999	UnaryOperationExpression	- 1023		2630490	1					
ANR	2651000	UnaryOperator	-		2630490	0					
ANR	2651001	PrimaryExpression	1023		2630490	1					
ANR	2651002	EqualityExpression	( num % 4 ) != 0		2630490	1		!=			
ANR	2651003	MultiplicativeExpression	num % 4		2630490	0		%			
ANR	2651004	Identifier	num		2630490	0					
ANR	2651005	PrimaryExpression	4		2630490	1					
ANR	2651006	PrimaryExpression	0		2630490	1					
ANR	2651007	CompoundStatement		3671:124:79097:79097	2630490	1					
ANR	2651008	ReturnStatement	return - 1 ;	4964:4:104962:104971	2630490	0	True				
ANR	2651009	UnaryOperationExpression	- 1		2630490	0					
ANR	2651010	UnaryOperator	-		2630490	0					
ANR	2651011	PrimaryExpression	1		2630490	1					
ANR	2651012	ExpressionStatement	ao -> o = 0x40e90000	4967:3:104982:105000	2630490	5	True				
ANR	2651013	AssignmentExpression	ao -> o = 0x40e90000		2630490	0		=			
ANR	2651014	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651015	Identifier	ao		2630490	0					
ANR	2651016	Identifier	o		2630490	1					
ANR	2651017	PrimaryExpression	0x40e90000		2630490	1					
ANR	2651018	IfStatement	if ( num < 0 )		2630490	6					
ANR	2651019	Condition	num < 0	4969:7:105010:105016	2630490	0	True				
ANR	2651020	RelationalExpression	num < 0		2630490	0		<			
ANR	2651021	Identifier	num		2630490	0					
ANR	2651022	PrimaryExpression	0		2630490	1					
ANR	2651023	CompoundStatement		3677:16:79160:79160	2630490	1					
ANR	2651024	ExpressionStatement	num = - num	4970:4:105025:105035	2630490	0	True				
ANR	2651025	AssignmentExpression	num = - num		2630490	0		=			
ANR	2651026	Identifier	num		2630490	0					
ANR	2651027	UnaryOperationExpression	- num		2630490	1					
ANR	2651028	UnaryOperator	-		2630490	0					
ANR	2651029	Identifier	num		2630490	1					
ANR	2651030	ElseStatement	else		2630490	0					
ANR	2651031	CompoundStatement		3679:10:79188:79188	2630490	0					
ANR	2651032	ExpressionStatement	ao -> o |= 1 << 31	4972:4:105053:105069	2630490	0	True				
ANR	2651033	AssignmentExpression	ao -> o |= 1 << 31		2630490	0		|=			
ANR	2651034	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651035	Identifier	ao		2630490	0					
ANR	2651036	Identifier	o		2630490	1					
ANR	2651037	ShiftExpression	1 << 31		2630490	1		<<			
ANR	2651038	PrimaryExpression	1		2630490	0					
ANR	2651039	PrimaryExpression	31		2630490	1					
ANR	2651040	ExpressionStatement	ao -> o |= reg1 << 4	4974:3:105079:105097	2630490	7	True				
ANR	2651041	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2651042	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651043	Identifier	ao		2630490	0					
ANR	2651044	Identifier	o		2630490	1					
ANR	2651045	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2651046	Identifier	reg1		2630490	0					
ANR	2651047	PrimaryExpression	4		2630490	1					
ANR	2651048	ExpressionStatement	ao -> o |= reg2	4975:3:105102:105115	2630490	8	True				
ANR	2651049	AssignmentExpression	ao -> o |= reg2		2630490	0		|=			
ANR	2651050	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651051	Identifier	ao		2630490	0					
ANR	2651052	Identifier	o		2630490	1					
ANR	2651053	Identifier	reg2		2630490	1					
ANR	2651054	ExpressionStatement	ao -> o |= reg3 << 24	4976:3:105120:105139	2630490	9	True				
ANR	2651055	AssignmentExpression	ao -> o |= reg3 << 24		2630490	0		|=			
ANR	2651056	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651057	Identifier	ao		2630490	0					
ANR	2651058	Identifier	o		2630490	1					
ANR	2651059	ShiftExpression	reg3 << 24		2630490	1		<<			
ANR	2651060	Identifier	reg3		2630490	0					
ANR	2651061	PrimaryExpression	24		2630490	1					
ANR	2651062	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	4977:3:105144:105168	2630490	10	True				
ANR	2651063	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		2630490	0		|=			
ANR	2651064	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651065	Identifier	ao		2630490	0					
ANR	2651066	Identifier	o		2630490	1					
ANR	2651067	ShiftExpression	( num >> 2 ) << 8		2630490	1		<<			
ANR	2651068	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2651069	Identifier	num		2630490	0					
ANR	2651070	PrimaryExpression	2		2630490	1					
ANR	2651071	PrimaryExpression	8		2630490	1					
ANR	2651072	ReturnStatement	return 4 ;	4978:3:105173:105181	2630490	11	True				
ANR	2651073	PrimaryExpression	4		2630490	0					
ANR	2651074	BreakStatement	break ;	4980:3:105198:105203	2630490	20	True				
ANR	2651075	Label	case THUMB_REG_REG_BRACKREG_CONSTBRACKBANG :	4981:2:105207:105249	2630490	21	True				
ANR	2651076	Identifier	THUMB_REG_REG_BRACKREG_CONSTBRACKBANG		2630490	0					
ANR	2651077	CompoundStatement		3693:3:79504:79542	2630490	22					
ANR	2651078	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	4982:3:105256:105284	2630490	0	True				
ANR	2651079	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2651080	IdentifierDeclType	ut8		2630490	0					
ANR	2651081	Identifier	reg1		2630490	1					
ANR	2651082	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2651083	Identifier	reg1		2630490	0					
ANR	2651084	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2651085	Callee	getreg		2630490	0					
ANR	2651086	Identifier	getreg		2630490	0					
ANR	2651087	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2651088	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2651089	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2651090	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651091	Identifier	ao		2630490	0					
ANR	2651092	Identifier	a		2630490	1					
ANR	2651093	PrimaryExpression	0		2630490	1					
ANR	2651094	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	4983:3:105289:105317	2630490	1	True				
ANR	2651095	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2651096	IdentifierDeclType	ut8		2630490	0					
ANR	2651097	Identifier	reg2		2630490	1					
ANR	2651098	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2651099	Identifier	reg2		2630490	0					
ANR	2651100	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2651101	Callee	getreg		2630490	0					
ANR	2651102	Identifier	getreg		2630490	0					
ANR	2651103	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2651104	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2651105	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2651106	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651107	Identifier	ao		2630490	0					
ANR	2651108	Identifier	a		2630490	1					
ANR	2651109	PrimaryExpression	1		2630490	1					
ANR	2651110	IdentifierDeclStatement	ut8 reg3 = getregmemstart ( ao -> a [ 2 ] ) ;	4984:3:105322:105358	2630490	2	True				
ANR	2651111	IdentifierDecl	reg3 = getregmemstart ( ao -> a [ 2 ] )		2630490	0					
ANR	2651112	IdentifierDeclType	ut8		2630490	0					
ANR	2651113	Identifier	reg3		2630490	1					
ANR	2651114	AssignmentExpression	reg3 = getregmemstart ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2651115	Identifier	reg3		2630490	0					
ANR	2651116	CallExpression	getregmemstart ( ao -> a [ 2 ] )		2630490	1					
ANR	2651117	Callee	getregmemstart		2630490	0					
ANR	2651118	Identifier	getregmemstart		2630490	0					
ANR	2651119	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2651120	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2651121	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2651122	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651123	Identifier	ao		2630490	0					
ANR	2651124	Identifier	a		2630490	1					
ANR	2651125	PrimaryExpression	2		2630490	1					
ANR	2651126	IdentifierDeclStatement	st32 num = getnummemendbang ( ao -> a [ 3 ] ) ;	4985:3:105363:105401	2630490	3	True				
ANR	2651127	IdentifierDecl	num = getnummemendbang ( ao -> a [ 3 ] )		2630490	0					
ANR	2651128	IdentifierDeclType	st32		2630490	0					
ANR	2651129	Identifier	num		2630490	1					
ANR	2651130	AssignmentExpression	num = getnummemendbang ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2651131	Identifier	num		2630490	0					
ANR	2651132	CallExpression	getnummemendbang ( ao -> a [ 3 ] )		2630490	1					
ANR	2651133	Callee	getnummemendbang		2630490	0					
ANR	2651134	Identifier	getnummemendbang		2630490	0					
ANR	2651135	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2651136	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2651137	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2651138	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651139	Identifier	ao		2630490	0					
ANR	2651140	Identifier	a		2630490	1					
ANR	2651141	PrimaryExpression	3		2630490	1					
ANR	2651142	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 ) )		2630490	4					
ANR	2651143	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )	4987:7:105411:105525	2630490	0	True				
ANR	2651144	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		2630490	0		||			
ANR	2651145	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2651146	Identifier	reg1		2630490	0					
ANR	2651147	PrimaryExpression	15		2630490	1					
ANR	2651148	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2651149	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2651150	Identifier	reg2		2630490	0					
ANR	2651151	PrimaryExpression	15		2630490	1					
ANR	2651152	OrExpression	( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2651153	RelationalExpression	reg3 > 15		2630490	0		>			
ANR	2651154	Identifier	reg3		2630490	0					
ANR	2651155	PrimaryExpression	15		2630490	1					
ANR	2651156	OrExpression	( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2651157	EqualityExpression	strsel != D_BIT		2630490	0		!=			
ANR	2651158	Identifier	strsel		2630490	0					
ANR	2651159	Identifier	D_BIT		2630490	1					
ANR	2651160	OrExpression	( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2651161	RelationalExpression	num > 1023		2630490	0		>			
ANR	2651162	Identifier	num		2630490	0					
ANR	2651163	PrimaryExpression	1023		2630490	1					
ANR	2651164	OrExpression	( num < - 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2651165	RelationalExpression	num < - 1023		2630490	0		<			
ANR	2651166	Identifier	num		2630490	0					
ANR	2651167	UnaryOperationExpression	- 1023		2630490	1					
ANR	2651168	UnaryOperator	-		2630490	0					
ANR	2651169	PrimaryExpression	1023		2630490	1					
ANR	2651170	EqualityExpression	( num % 4 ) != 0		2630490	1		!=			
ANR	2651171	MultiplicativeExpression	num % 4		2630490	0		%			
ANR	2651172	Identifier	num		2630490	0					
ANR	2651173	PrimaryExpression	4		2630490	1					
ANR	2651174	PrimaryExpression	0		2630490	1					
ANR	2651175	CompoundStatement		3695:124:79669:79669	2630490	1					
ANR	2651176	ReturnStatement	return - 1 ;	4988:4:105534:105543	2630490	0	True				
ANR	2651177	UnaryOperationExpression	- 1		2630490	0					
ANR	2651178	UnaryOperator	-		2630490	0					
ANR	2651179	PrimaryExpression	1		2630490	1					
ANR	2651180	ExpressionStatement	ao -> o = 0x60e90000	4991:3:105554:105572	2630490	5	True				
ANR	2651181	AssignmentExpression	ao -> o = 0x60e90000		2630490	0		=			
ANR	2651182	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651183	Identifier	ao		2630490	0					
ANR	2651184	Identifier	o		2630490	1					
ANR	2651185	PrimaryExpression	0x60e90000		2630490	1					
ANR	2651186	IfStatement	if ( num < 0 )		2630490	6					
ANR	2651187	Condition	num < 0	4993:7:105582:105588	2630490	0	True				
ANR	2651188	RelationalExpression	num < 0		2630490	0		<			
ANR	2651189	Identifier	num		2630490	0					
ANR	2651190	PrimaryExpression	0		2630490	1					
ANR	2651191	CompoundStatement		3701:16:79732:79732	2630490	1					
ANR	2651192	ExpressionStatement	num = - num	4994:4:105597:105607	2630490	0	True				
ANR	2651193	AssignmentExpression	num = - num		2630490	0		=			
ANR	2651194	Identifier	num		2630490	0					
ANR	2651195	UnaryOperationExpression	- num		2630490	1					
ANR	2651196	UnaryOperator	-		2630490	0					
ANR	2651197	Identifier	num		2630490	1					
ANR	2651198	ElseStatement	else		2630490	0					
ANR	2651199	CompoundStatement		3703:10:79760:79760	2630490	0					
ANR	2651200	ExpressionStatement	ao -> o |= 1 << 31	4996:4:105625:105641	2630490	0	True				
ANR	2651201	AssignmentExpression	ao -> o |= 1 << 31		2630490	0		|=			
ANR	2651202	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651203	Identifier	ao		2630490	0					
ANR	2651204	Identifier	o		2630490	1					
ANR	2651205	ShiftExpression	1 << 31		2630490	1		<<			
ANR	2651206	PrimaryExpression	1		2630490	0					
ANR	2651207	PrimaryExpression	31		2630490	1					
ANR	2651208	ExpressionStatement	ao -> o |= reg1 << 4	4998:3:105651:105669	2630490	7	True				
ANR	2651209	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2651210	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651211	Identifier	ao		2630490	0					
ANR	2651212	Identifier	o		2630490	1					
ANR	2651213	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2651214	Identifier	reg1		2630490	0					
ANR	2651215	PrimaryExpression	4		2630490	1					
ANR	2651216	ExpressionStatement	ao -> o |= reg2	4999:3:105674:105687	2630490	8	True				
ANR	2651217	AssignmentExpression	ao -> o |= reg2		2630490	0		|=			
ANR	2651218	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651219	Identifier	ao		2630490	0					
ANR	2651220	Identifier	o		2630490	1					
ANR	2651221	Identifier	reg2		2630490	1					
ANR	2651222	ExpressionStatement	ao -> o |= reg3 << 24	5000:3:105692:105711	2630490	9	True				
ANR	2651223	AssignmentExpression	ao -> o |= reg3 << 24		2630490	0		|=			
ANR	2651224	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651225	Identifier	ao		2630490	0					
ANR	2651226	Identifier	o		2630490	1					
ANR	2651227	ShiftExpression	reg3 << 24		2630490	1		<<			
ANR	2651228	Identifier	reg3		2630490	0					
ANR	2651229	PrimaryExpression	24		2630490	1					
ANR	2651230	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	5001:3:105716:105740	2630490	10	True				
ANR	2651231	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		2630490	0		|=			
ANR	2651232	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651233	Identifier	ao		2630490	0					
ANR	2651234	Identifier	o		2630490	1					
ANR	2651235	ShiftExpression	( num >> 2 ) << 8		2630490	1		<<			
ANR	2651236	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2651237	Identifier	num		2630490	0					
ANR	2651238	PrimaryExpression	2		2630490	1					
ANR	2651239	PrimaryExpression	8		2630490	1					
ANR	2651240	ReturnStatement	return 4 ;	5002:3:105745:105753	2630490	11	True				
ANR	2651241	PrimaryExpression	4		2630490	0					
ANR	2651242	BreakStatement	break ;	5004:3:105770:105775	2630490	23	True				
ANR	2651243	Label	case THUMB_REG_REG_BRACKREGBRACK_CONST :	5005:2:105779:105817	2630490	24	True				
ANR	2651244	Identifier	THUMB_REG_REG_BRACKREGBRACK_CONST		2630490	0					
ANR	2651245	CompoundStatement		3717:3:80075:80103	2630490	25					
ANR	2651246	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5006:3:105824:105852	2630490	0	True				
ANR	2651247	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2651248	IdentifierDeclType	ut8		2630490	0					
ANR	2651249	Identifier	reg1		2630490	1					
ANR	2651250	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2651251	Identifier	reg1		2630490	0					
ANR	2651252	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2651253	Callee	getreg		2630490	0					
ANR	2651254	Identifier	getreg		2630490	0					
ANR	2651255	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2651256	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2651257	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2651258	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651259	Identifier	ao		2630490	0					
ANR	2651260	Identifier	a		2630490	1					
ANR	2651261	PrimaryExpression	0		2630490	1					
ANR	2651262	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5007:3:105857:105885	2630490	1	True				
ANR	2651263	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2651264	IdentifierDeclType	ut8		2630490	0					
ANR	2651265	Identifier	reg2		2630490	1					
ANR	2651266	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2651267	Identifier	reg2		2630490	0					
ANR	2651268	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2651269	Callee	getreg		2630490	0					
ANR	2651270	Identifier	getreg		2630490	0					
ANR	2651271	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2651272	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2651273	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2651274	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651275	Identifier	ao		2630490	0					
ANR	2651276	Identifier	a		2630490	1					
ANR	2651277	PrimaryExpression	1		2630490	1					
ANR	2651278	IdentifierDeclStatement	ut8 reg3 = getregmemstartend ( ao -> a [ 2 ] ) ;	5008:3:105890:105929	2630490	2	True				
ANR	2651279	IdentifierDecl	reg3 = getregmemstartend ( ao -> a [ 2 ] )		2630490	0					
ANR	2651280	IdentifierDeclType	ut8		2630490	0					
ANR	2651281	Identifier	reg3		2630490	1					
ANR	2651282	AssignmentExpression	reg3 = getregmemstartend ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2651283	Identifier	reg3		2630490	0					
ANR	2651284	CallExpression	getregmemstartend ( ao -> a [ 2 ] )		2630490	1					
ANR	2651285	Callee	getregmemstartend		2630490	0					
ANR	2651286	Identifier	getregmemstartend		2630490	0					
ANR	2651287	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2651288	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2651289	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2651290	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651291	Identifier	ao		2630490	0					
ANR	2651292	Identifier	a		2630490	1					
ANR	2651293	PrimaryExpression	2		2630490	1					
ANR	2651294	IdentifierDeclStatement	st32 num = getnum ( ao -> a [ 3 ] ) ;	5009:3:105934:105962	2630490	3	True				
ANR	2651295	IdentifierDecl	num = getnum ( ao -> a [ 3 ] )		2630490	0					
ANR	2651296	IdentifierDeclType	st32		2630490	0					
ANR	2651297	Identifier	num		2630490	1					
ANR	2651298	AssignmentExpression	num = getnum ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2651299	Identifier	num		2630490	0					
ANR	2651300	CallExpression	getnum ( ao -> a [ 3 ] )		2630490	1					
ANR	2651301	Callee	getnum		2630490	0					
ANR	2651302	Identifier	getnum		2630490	0					
ANR	2651303	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2651304	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2651305	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2651306	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651307	Identifier	ao		2630490	0					
ANR	2651308	Identifier	a		2630490	1					
ANR	2651309	PrimaryExpression	3		2630490	1					
ANR	2651310	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 ) )		2630490	4					
ANR	2651311	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )	5011:7:105972:106086	2630490	0	True				
ANR	2651312	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		2630490	0		||			
ANR	2651313	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2651314	Identifier	reg1		2630490	0					
ANR	2651315	PrimaryExpression	15		2630490	1					
ANR	2651316	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2651317	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2651318	Identifier	reg2		2630490	0					
ANR	2651319	PrimaryExpression	15		2630490	1					
ANR	2651320	OrExpression	( reg3 > 15 ) || ( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2651321	RelationalExpression	reg3 > 15		2630490	0		>			
ANR	2651322	Identifier	reg3		2630490	0					
ANR	2651323	PrimaryExpression	15		2630490	1					
ANR	2651324	OrExpression	( strsel != D_BIT ) || ( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2651325	EqualityExpression	strsel != D_BIT		2630490	0		!=			
ANR	2651326	Identifier	strsel		2630490	0					
ANR	2651327	Identifier	D_BIT		2630490	1					
ANR	2651328	OrExpression	( num > 1023 ) || ( num < - 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2651329	RelationalExpression	num > 1023		2630490	0		>			
ANR	2651330	Identifier	num		2630490	0					
ANR	2651331	PrimaryExpression	1023		2630490	1					
ANR	2651332	OrExpression	( num < - 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2651333	RelationalExpression	num < - 1023		2630490	0		<			
ANR	2651334	Identifier	num		2630490	0					
ANR	2651335	UnaryOperationExpression	- 1023		2630490	1					
ANR	2651336	UnaryOperator	-		2630490	0					
ANR	2651337	PrimaryExpression	1023		2630490	1					
ANR	2651338	EqualityExpression	( num % 4 ) != 0		2630490	1		!=			
ANR	2651339	MultiplicativeExpression	num % 4		2630490	0		%			
ANR	2651340	Identifier	num		2630490	0					
ANR	2651341	PrimaryExpression	4		2630490	1					
ANR	2651342	PrimaryExpression	0		2630490	1					
ANR	2651343	CompoundStatement		3719:124:80230:80230	2630490	1					
ANR	2651344	ReturnStatement	return - 1 ;	5012:4:106095:106104	2630490	0	True				
ANR	2651345	UnaryOperationExpression	- 1		2630490	0					
ANR	2651346	UnaryOperator	-		2630490	0					
ANR	2651347	PrimaryExpression	1		2630490	1					
ANR	2651348	ExpressionStatement	ao -> o = 0x60e80000	5015:3:106115:106133	2630490	5	True				
ANR	2651349	AssignmentExpression	ao -> o = 0x60e80000		2630490	0		=			
ANR	2651350	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651351	Identifier	ao		2630490	0					
ANR	2651352	Identifier	o		2630490	1					
ANR	2651353	PrimaryExpression	0x60e80000		2630490	1					
ANR	2651354	IfStatement	if ( num < 0 )		2630490	6					
ANR	2651355	Condition	num < 0	5017:7:106143:106149	2630490	0	True				
ANR	2651356	RelationalExpression	num < 0		2630490	0		<			
ANR	2651357	Identifier	num		2630490	0					
ANR	2651358	PrimaryExpression	0		2630490	1					
ANR	2651359	CompoundStatement		3725:16:80293:80293	2630490	1					
ANR	2651360	ExpressionStatement	num = - num	5018:4:106158:106168	2630490	0	True				
ANR	2651361	AssignmentExpression	num = - num		2630490	0		=			
ANR	2651362	Identifier	num		2630490	0					
ANR	2651363	UnaryOperationExpression	- num		2630490	1					
ANR	2651364	UnaryOperator	-		2630490	0					
ANR	2651365	Identifier	num		2630490	1					
ANR	2651366	ElseStatement	else		2630490	0					
ANR	2651367	CompoundStatement		3727:10:80321:80321	2630490	0					
ANR	2651368	ExpressionStatement	ao -> o |= 1 << 31	5020:4:106186:106202	2630490	0	True				
ANR	2651369	AssignmentExpression	ao -> o |= 1 << 31		2630490	0		|=			
ANR	2651370	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651371	Identifier	ao		2630490	0					
ANR	2651372	Identifier	o		2630490	1					
ANR	2651373	ShiftExpression	1 << 31		2630490	1		<<			
ANR	2651374	PrimaryExpression	1		2630490	0					
ANR	2651375	PrimaryExpression	31		2630490	1					
ANR	2651376	ExpressionStatement	ao -> o |= reg1 << 4	5022:3:106212:106230	2630490	7	True				
ANR	2651377	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2651378	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651379	Identifier	ao		2630490	0					
ANR	2651380	Identifier	o		2630490	1					
ANR	2651381	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2651382	Identifier	reg1		2630490	0					
ANR	2651383	PrimaryExpression	4		2630490	1					
ANR	2651384	ExpressionStatement	ao -> o |= reg2	5023:3:106235:106248	2630490	8	True				
ANR	2651385	AssignmentExpression	ao -> o |= reg2		2630490	0		|=			
ANR	2651386	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651387	Identifier	ao		2630490	0					
ANR	2651388	Identifier	o		2630490	1					
ANR	2651389	Identifier	reg2		2630490	1					
ANR	2651390	ExpressionStatement	ao -> o |= reg3 << 24	5024:3:106253:106272	2630490	9	True				
ANR	2651391	AssignmentExpression	ao -> o |= reg3 << 24		2630490	0		|=			
ANR	2651392	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651393	Identifier	ao		2630490	0					
ANR	2651394	Identifier	o		2630490	1					
ANR	2651395	ShiftExpression	reg3 << 24		2630490	1		<<			
ANR	2651396	Identifier	reg3		2630490	0					
ANR	2651397	PrimaryExpression	24		2630490	1					
ANR	2651398	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	5025:3:106277:106301	2630490	10	True				
ANR	2651399	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		2630490	0		|=			
ANR	2651400	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651401	Identifier	ao		2630490	0					
ANR	2651402	Identifier	o		2630490	1					
ANR	2651403	ShiftExpression	( num >> 2 ) << 8		2630490	1		<<			
ANR	2651404	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2651405	Identifier	num		2630490	0					
ANR	2651406	PrimaryExpression	2		2630490	1					
ANR	2651407	PrimaryExpression	8		2630490	1					
ANR	2651408	ReturnStatement	return 4 ;	5026:3:106306:106314	2630490	11	True				
ANR	2651409	PrimaryExpression	4		2630490	0					
ANR	2651410	BreakStatement	break ;	5028:3:106331:106336	2630490	26	True				
ANR	2651411	Label	default :	5029:2:106340:106347	2630490	27	True				
ANR	2651412	Identifier	default		2630490	0					
ANR	2651413	ReturnStatement	return - 1 ;	5030:3:106352:106361	2630490	28	True				
ANR	2651414	UnaryOperationExpression	- 1		2630490	0					
ANR	2651415	UnaryOperator	-		2630490	0					
ANR	2651416	PrimaryExpression	1		2630490	1					
ANR	2651417	ElseStatement	else		2630490	0					
ANR	2651418	IfStatement	"if ( ( m = opmask ( ao -> op , ""strex"" , B_BIT | D_BIT | H_BIT ) ) )"		2630490	0					
ANR	2651419	Condition	"m = opmask ( ao -> op , ""strex"" , B_BIT | D_BIT | H_BIT )"	5033:5:106380:106432	2630490	0	True				
ANR	2651420	AssignmentExpression	"m = opmask ( ao -> op , ""strex"" , B_BIT | D_BIT | H_BIT )"		2630490	0		=			
ANR	2651421	Identifier	m		2630490	0					
ANR	2651422	CallExpression	"opmask ( ao -> op , ""strex"" , B_BIT | D_BIT | H_BIT )"		2630490	1					
ANR	2651423	Callee	opmask		2630490	0					
ANR	2651424	Identifier	opmask		2630490	0					
ANR	2651425	ArgumentList	ao -> op		2630490	1					
ANR	2651426	Argument	ao -> op		2630490	0					
ANR	2651427	PtrMemberAccess	ao -> op		2630490	0					
ANR	2651428	Identifier	ao		2630490	0					
ANR	2651429	Identifier	op		2630490	1					
ANR	2651430	Argument	"""strex"""		2630490	1					
ANR	2651431	PrimaryExpression	"""strex"""		2630490	0					
ANR	2651432	Argument	B_BIT | D_BIT | H_BIT		2630490	2					
ANR	2651433	InclusiveOrExpression	B_BIT | D_BIT | H_BIT		2630490	0		|			
ANR	2651434	Identifier	B_BIT		2630490	0					
ANR	2651435	InclusiveOrExpression	D_BIT | H_BIT		2630490	1		|			
ANR	2651436	Identifier	D_BIT		2630490	0					
ANR	2651437	Identifier	H_BIT		2630490	1					
ANR	2651438	CompoundStatement		3743:2:80618:80659	2630490	1					
ANR	2651439	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5034:2:106439:106473	2630490	0	True				
ANR	2651440	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2651441	IdentifierDeclType	ut64		2630490	0					
ANR	2651442	Identifier	argt		2630490	1					
ANR	2651443	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2651444	Identifier	argt		2630490	0					
ANR	2651445	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2651446	Callee	thumb_selector		2630490	0					
ANR	2651447	Identifier	thumb_selector		2630490	0					
ANR	2651448	ArgumentList	ao -> a		2630490	1					
ANR	2651449	Argument	ao -> a		2630490	0					
ANR	2651450	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651451	Identifier	ao		2630490	0					
ANR	2651452	Identifier	a		2630490	1					
ANR	2651453	IdentifierDeclStatement	ut32 strsel = m & ( B_BIT | H_BIT | D_BIT ) ;	5035:2:106477:106518	2630490	1	True				
ANR	2651454	IdentifierDecl	strsel = m & ( B_BIT | H_BIT | D_BIT )		2630490	0					
ANR	2651455	IdentifierDeclType	ut32		2630490	0					
ANR	2651456	Identifier	strsel		2630490	1					
ANR	2651457	AssignmentExpression	strsel = m & ( B_BIT | H_BIT | D_BIT )		2630490	2		=			
ANR	2651458	Identifier	strsel		2630490	0					
ANR	2651459	BitAndExpression	m & ( B_BIT | H_BIT | D_BIT )		2630490	1		&			
ANR	2651460	Identifier	m		2630490	0					
ANR	2651461	InclusiveOrExpression	B_BIT | H_BIT | D_BIT		2630490	1		|			
ANR	2651462	Identifier	B_BIT		2630490	0					
ANR	2651463	InclusiveOrExpression	H_BIT | D_BIT		2630490	1		|			
ANR	2651464	Identifier	H_BIT		2630490	0					
ANR	2651465	Identifier	D_BIT		2630490	1					
ANR	2651466	SwitchStatement	switch ( argt )		2630490	2					
ANR	2651467	Condition	argt	5036:10:106530:106533	2630490	0	True				
ANR	2651468	Identifier	argt		2630490	0					
ANR	2651469	CompoundStatement		3744:16:80677:80677	2630490	1					
ANR	2651470	Label	case THUMB_REG_REG_BRACKREGBRACK :	5037:2:106540:106572	2630490	0	True				
ANR	2651471	Identifier	THUMB_REG_REG_BRACKREGBRACK		2630490	0					
ANR	2651472	CompoundStatement		3748:3:80786:80825	2630490	1					
ANR	2651473	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5038:3:106579:106607	2630490	0	True				
ANR	2651474	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2651475	IdentifierDeclType	ut8		2630490	0					
ANR	2651476	Identifier	reg1		2630490	1					
ANR	2651477	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2651478	Identifier	reg1		2630490	0					
ANR	2651479	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2651480	Callee	getreg		2630490	0					
ANR	2651481	Identifier	getreg		2630490	0					
ANR	2651482	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2651483	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2651484	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2651485	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651486	Identifier	ao		2630490	0					
ANR	2651487	Identifier	a		2630490	1					
ANR	2651488	PrimaryExpression	0		2630490	1					
ANR	2651489	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5039:3:106612:106640	2630490	1	True				
ANR	2651490	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2651491	IdentifierDeclType	ut8		2630490	0					
ANR	2651492	Identifier	reg2		2630490	1					
ANR	2651493	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2651494	Identifier	reg2		2630490	0					
ANR	2651495	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2651496	Callee	getreg		2630490	0					
ANR	2651497	Identifier	getreg		2630490	0					
ANR	2651498	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2651499	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2651500	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2651501	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651502	Identifier	ao		2630490	0					
ANR	2651503	Identifier	a		2630490	1					
ANR	2651504	PrimaryExpression	1		2630490	1					
ANR	2651505	IdentifierDeclStatement	ut8 reg3 = getregmemstartend ( ao -> a [ 2 ] ) ;	5040:3:106645:106684	2630490	2	True				
ANR	2651506	IdentifierDecl	reg3 = getregmemstartend ( ao -> a [ 2 ] )		2630490	0					
ANR	2651507	IdentifierDeclType	ut8		2630490	0					
ANR	2651508	Identifier	reg3		2630490	1					
ANR	2651509	AssignmentExpression	reg3 = getregmemstartend ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2651510	Identifier	reg3		2630490	0					
ANR	2651511	CallExpression	getregmemstartend ( ao -> a [ 2 ] )		2630490	1					
ANR	2651512	Callee	getregmemstartend		2630490	0					
ANR	2651513	Identifier	getregmemstartend		2630490	0					
ANR	2651514	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2651515	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2651516	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2651517	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651518	Identifier	ao		2630490	0					
ANR	2651519	Identifier	a		2630490	1					
ANR	2651520	PrimaryExpression	2		2630490	1					
ANR	2651521	IfStatement	if ( ( strsel == D_BIT ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) )		2630490	3					
ANR	2651522	Condition	( strsel == D_BIT ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 )	5042:7:106697:106758	2630490	0	True				
ANR	2651523	OrExpression	( strsel == D_BIT ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 )		2630490	0		||			
ANR	2651524	EqualityExpression	strsel == D_BIT		2630490	0		==			
ANR	2651525	Identifier	strsel		2630490	0					
ANR	2651526	Identifier	D_BIT		2630490	1					
ANR	2651527	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 )		2630490	1		||			
ANR	2651528	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2651529	Identifier	reg1		2630490	0					
ANR	2651530	PrimaryExpression	15		2630490	1					
ANR	2651531	OrExpression	( reg2 > 15 ) || ( reg3 > 15 )		2630490	1		||			
ANR	2651532	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2651533	Identifier	reg2		2630490	0					
ANR	2651534	PrimaryExpression	15		2630490	1					
ANR	2651535	RelationalExpression	reg3 > 15		2630490	1		>			
ANR	2651536	Identifier	reg3		2630490	0					
ANR	2651537	PrimaryExpression	15		2630490	1					
ANR	2651538	CompoundStatement		3750:71:80902:80902	2630490	1					
ANR	2651539	ReturnStatement	return - 1 ;	5043:4:106767:106776	2630490	0	True				
ANR	2651540	UnaryOperationExpression	- 1		2630490	0					
ANR	2651541	UnaryOperator	-		2630490	0					
ANR	2651542	PrimaryExpression	1		2630490	1					
ANR	2651543	IfStatement	if ( strsel == B_BIT )		2630490	4					
ANR	2651544	Condition	strsel == B_BIT	5045:7:106790:106804	2630490	0	True				
ANR	2651545	EqualityExpression	strsel == B_BIT		2630490	0		==			
ANR	2651546	Identifier	strsel		2630490	0					
ANR	2651547	Identifier	B_BIT		2630490	1					
ANR	2651548	CompoundStatement		3753:24:80948:80948	2630490	1					
ANR	2651549	ExpressionStatement	ao -> o = 0xc0e8400f	5046:4:106813:106831	2630490	0	True				
ANR	2651550	AssignmentExpression	ao -> o = 0xc0e8400f		2630490	0		=			
ANR	2651551	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651552	Identifier	ao		2630490	0					
ANR	2651553	Identifier	o		2630490	1					
ANR	2651554	PrimaryExpression	0xc0e8400f		2630490	1					
ANR	2651555	ExpressionStatement	ao -> o |= reg1 << 8	5047:4:106837:106855	2630490	1	True				
ANR	2651556	AssignmentExpression	ao -> o |= reg1 << 8		2630490	0		|=			
ANR	2651557	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651558	Identifier	ao		2630490	0					
ANR	2651559	Identifier	o		2630490	1					
ANR	2651560	ShiftExpression	reg1 << 8		2630490	1		<<			
ANR	2651561	Identifier	reg1		2630490	0					
ANR	2651562	PrimaryExpression	8		2630490	1					
ANR	2651563	ExpressionStatement	ao -> o |= reg2 << 4	5048:4:106861:106879	2630490	2	True				
ANR	2651564	AssignmentExpression	ao -> o |= reg2 << 4		2630490	0		|=			
ANR	2651565	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651566	Identifier	ao		2630490	0					
ANR	2651567	Identifier	o		2630490	1					
ANR	2651568	ShiftExpression	reg2 << 4		2630490	1		<<			
ANR	2651569	Identifier	reg2		2630490	0					
ANR	2651570	PrimaryExpression	4		2630490	1					
ANR	2651571	ExpressionStatement	ao -> o |= reg3 << 24	5049:4:106885:106904	2630490	3	True				
ANR	2651572	AssignmentExpression	ao -> o |= reg3 << 24		2630490	0		|=			
ANR	2651573	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651574	Identifier	ao		2630490	0					
ANR	2651575	Identifier	o		2630490	1					
ANR	2651576	ShiftExpression	reg3 << 24		2630490	1		<<			
ANR	2651577	Identifier	reg3		2630490	0					
ANR	2651578	PrimaryExpression	24		2630490	1					
ANR	2651579	ReturnStatement	return 4 ;	5050:4:106910:106918	2630490	4	True				
ANR	2651580	PrimaryExpression	4		2630490	0					
ANR	2651581	ElseStatement	else		2630490	0					
ANR	2651582	IfStatement	if ( strsel == H_BIT )		2630490	0					
ANR	2651583	Condition	strsel == H_BIT	5052:7:106937:106951	2630490	0	True				
ANR	2651584	EqualityExpression	strsel == H_BIT		2630490	0		==			
ANR	2651585	Identifier	strsel		2630490	0					
ANR	2651586	Identifier	H_BIT		2630490	1					
ANR	2651587	CompoundStatement		3760:24:81095:81095	2630490	1					
ANR	2651588	ExpressionStatement	ao -> o = 0xc0e8500f	5053:4:106960:106978	2630490	0	True				
ANR	2651589	AssignmentExpression	ao -> o = 0xc0e8500f		2630490	0		=			
ANR	2651590	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651591	Identifier	ao		2630490	0					
ANR	2651592	Identifier	o		2630490	1					
ANR	2651593	PrimaryExpression	0xc0e8500f		2630490	1					
ANR	2651594	ExpressionStatement	ao -> o |= reg1 << 8	5054:4:106984:107002	2630490	1	True				
ANR	2651595	AssignmentExpression	ao -> o |= reg1 << 8		2630490	0		|=			
ANR	2651596	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651597	Identifier	ao		2630490	0					
ANR	2651598	Identifier	o		2630490	1					
ANR	2651599	ShiftExpression	reg1 << 8		2630490	1		<<			
ANR	2651600	Identifier	reg1		2630490	0					
ANR	2651601	PrimaryExpression	8		2630490	1					
ANR	2651602	ExpressionStatement	ao -> o |= reg2 << 4	5055:4:107008:107026	2630490	2	True				
ANR	2651603	AssignmentExpression	ao -> o |= reg2 << 4		2630490	0		|=			
ANR	2651604	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651605	Identifier	ao		2630490	0					
ANR	2651606	Identifier	o		2630490	1					
ANR	2651607	ShiftExpression	reg2 << 4		2630490	1		<<			
ANR	2651608	Identifier	reg2		2630490	0					
ANR	2651609	PrimaryExpression	4		2630490	1					
ANR	2651610	ExpressionStatement	ao -> o |= reg3 << 24	5056:4:107032:107051	2630490	3	True				
ANR	2651611	AssignmentExpression	ao -> o |= reg3 << 24		2630490	0		|=			
ANR	2651612	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651613	Identifier	ao		2630490	0					
ANR	2651614	Identifier	o		2630490	1					
ANR	2651615	ShiftExpression	reg3 << 24		2630490	1		<<			
ANR	2651616	Identifier	reg3		2630490	0					
ANR	2651617	PrimaryExpression	24		2630490	1					
ANR	2651618	ReturnStatement	return 4 ;	5057:4:107057:107065	2630490	4	True				
ANR	2651619	PrimaryExpression	4		2630490	0					
ANR	2651620	ExpressionStatement	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'	5060:3:107076:107114	2630490	5	True				
ANR	2651621	AssignmentExpression	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ] = '\\0'		2630490	0		=			
ANR	2651622	ArrayIndexing	ao -> a [ 2 ] [ strlen ( ao -> a [ 2 ] ) - 1 ]		2630490	0					
ANR	2651623	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2651624	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651625	Identifier	ao		2630490	0					
ANR	2651626	Identifier	a		2630490	1					
ANR	2651627	PrimaryExpression	2		2630490	1					
ANR	2651628	AdditiveExpression	strlen ( ao -> a [ 2 ] ) - 1		2630490	1		-			
ANR	2651629	CallExpression	strlen ( ao -> a [ 2 ] )		2630490	0					
ANR	2651630	Callee	strlen		2630490	0					
ANR	2651631	Identifier	strlen		2630490	0					
ANR	2651632	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2651633	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2651634	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2651635	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651636	Identifier	ao		2630490	0					
ANR	2651637	Identifier	a		2630490	1					
ANR	2651638	PrimaryExpression	2		2630490	1					
ANR	2651639	PrimaryExpression	1		2630490	1					
ANR	2651640	PrimaryExpression	'\\0'		2630490	1					
ANR	2651641	ExpressionStatement	"ao -> a [ 3 ] = ""0]"""	5061:3:107119:107134	2630490	6	True				
ANR	2651642	AssignmentExpression	"ao -> a [ 3 ] = ""0]"""		2630490	0		=			
ANR	2651643	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2651644	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651645	Identifier	ao		2630490	0					
ANR	2651646	Identifier	a		2630490	1					
ANR	2651647	PrimaryExpression	3		2630490	1					
ANR	2651648	PrimaryExpression	"""0]"""		2630490	1					
ANR	2651649	Label	case THUMB_REG_REG_BRACKREG_CONSTBRACK :	5064:2:107180:107218	2630490	2	True				
ANR	2651650	Identifier	THUMB_REG_REG_BRACKREG_CONSTBRACK		2630490	0					
ANR	2651651	CompoundStatement		3776:3:81473:81507	2630490	3					
ANR	2651652	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5065:3:107225:107253	2630490	0	True				
ANR	2651653	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2651654	IdentifierDeclType	ut8		2630490	0					
ANR	2651655	Identifier	reg1		2630490	1					
ANR	2651656	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2651657	Identifier	reg1		2630490	0					
ANR	2651658	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2651659	Callee	getreg		2630490	0					
ANR	2651660	Identifier	getreg		2630490	0					
ANR	2651661	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2651662	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2651663	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2651664	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651665	Identifier	ao		2630490	0					
ANR	2651666	Identifier	a		2630490	1					
ANR	2651667	PrimaryExpression	0		2630490	1					
ANR	2651668	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5066:3:107258:107286	2630490	1	True				
ANR	2651669	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2651670	IdentifierDeclType	ut8		2630490	0					
ANR	2651671	Identifier	reg2		2630490	1					
ANR	2651672	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2651673	Identifier	reg2		2630490	0					
ANR	2651674	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2651675	Callee	getreg		2630490	0					
ANR	2651676	Identifier	getreg		2630490	0					
ANR	2651677	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2651678	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2651679	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2651680	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651681	Identifier	ao		2630490	0					
ANR	2651682	Identifier	a		2630490	1					
ANR	2651683	PrimaryExpression	1		2630490	1					
ANR	2651684	IdentifierDeclStatement	ut8 reg3 = getregmemstart ( ao -> a [ 2 ] ) ;	5067:3:107291:107327	2630490	2	True				
ANR	2651685	IdentifierDecl	reg3 = getregmemstart ( ao -> a [ 2 ] )		2630490	0					
ANR	2651686	IdentifierDeclType	ut8		2630490	0					
ANR	2651687	Identifier	reg3		2630490	1					
ANR	2651688	AssignmentExpression	reg3 = getregmemstart ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2651689	Identifier	reg3		2630490	0					
ANR	2651690	CallExpression	getregmemstart ( ao -> a [ 2 ] )		2630490	1					
ANR	2651691	Callee	getregmemstart		2630490	0					
ANR	2651692	Identifier	getregmemstart		2630490	0					
ANR	2651693	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2651694	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2651695	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2651696	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651697	Identifier	ao		2630490	0					
ANR	2651698	Identifier	a		2630490	1					
ANR	2651699	PrimaryExpression	2		2630490	1					
ANR	2651700	IdentifierDeclStatement	st32 num = getnummemend ( ao -> a [ 3 ] ) ;	5068:3:107332:107366	2630490	3	True				
ANR	2651701	IdentifierDecl	num = getnummemend ( ao -> a [ 3 ] )		2630490	0					
ANR	2651702	IdentifierDeclType	st32		2630490	0					
ANR	2651703	Identifier	num		2630490	1					
ANR	2651704	AssignmentExpression	num = getnummemend ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2651705	Identifier	num		2630490	0					
ANR	2651706	CallExpression	getnummemend ( ao -> a [ 3 ] )		2630490	1					
ANR	2651707	Callee	getnummemend		2630490	0					
ANR	2651708	Identifier	getnummemend		2630490	0					
ANR	2651709	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2651710	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2651711	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2651712	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651713	Identifier	ao		2630490	0					
ANR	2651714	Identifier	a		2630490	1					
ANR	2651715	PrimaryExpression	3		2630490	1					
ANR	2651716	IfStatement	if ( ( strsel != 0 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( num < 0 ) || ( num > 1023 ) || ( ( num % 4 ) != 0 ) )		2630490	4					
ANR	2651717	Condition	( strsel != 0 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( num < 0 ) || ( num > 1023 ) || ( ( num % 4 ) != 0 )	5070:7:107376:107481	2630490	0	True				
ANR	2651718	OrExpression	( strsel != 0 ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( num < 0 ) || ( num > 1023 ) || ( ( num % 4 ) != 0 )		2630490	0		||			
ANR	2651719	EqualityExpression	strsel != 0		2630490	0		!=			
ANR	2651720	Identifier	strsel		2630490	0					
ANR	2651721	PrimaryExpression	0		2630490	1					
ANR	2651722	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( num < 0 ) || ( num > 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2651723	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2651724	Identifier	reg1		2630490	0					
ANR	2651725	PrimaryExpression	15		2630490	1					
ANR	2651726	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( num < 0 ) || ( num > 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2651727	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2651728	Identifier	reg2		2630490	0					
ANR	2651729	PrimaryExpression	15		2630490	1					
ANR	2651730	OrExpression	( reg3 > 15 ) || ( num < 0 ) || ( num > 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2651731	RelationalExpression	reg3 > 15		2630490	0		>			
ANR	2651732	Identifier	reg3		2630490	0					
ANR	2651733	PrimaryExpression	15		2630490	1					
ANR	2651734	OrExpression	( num < 0 ) || ( num > 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2651735	RelationalExpression	num < 0		2630490	0		<			
ANR	2651736	Identifier	num		2630490	0					
ANR	2651737	PrimaryExpression	0		2630490	1					
ANR	2651738	OrExpression	( num > 1023 ) || ( ( num % 4 ) != 0 )		2630490	1		||			
ANR	2651739	RelationalExpression	num > 1023		2630490	0		>			
ANR	2651740	Identifier	num		2630490	0					
ANR	2651741	PrimaryExpression	1023		2630490	1					
ANR	2651742	EqualityExpression	( num % 4 ) != 0		2630490	1		!=			
ANR	2651743	MultiplicativeExpression	num % 4		2630490	0		%			
ANR	2651744	Identifier	num		2630490	0					
ANR	2651745	PrimaryExpression	4		2630490	1					
ANR	2651746	PrimaryExpression	0		2630490	1					
ANR	2651747	CompoundStatement		3778:115:81625:81625	2630490	1					
ANR	2651748	ReturnStatement	return - 1 ;	5071:4:107490:107499	2630490	0	True				
ANR	2651749	UnaryOperationExpression	- 1		2630490	0					
ANR	2651750	UnaryOperator	-		2630490	0					
ANR	2651751	PrimaryExpression	1		2630490	1					
ANR	2651752	ExpressionStatement	ao -> o = 0x40e80000	5074:3:107510:107528	2630490	5	True				
ANR	2651753	AssignmentExpression	ao -> o = 0x40e80000		2630490	0		=			
ANR	2651754	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651755	Identifier	ao		2630490	0					
ANR	2651756	Identifier	o		2630490	1					
ANR	2651757	PrimaryExpression	0x40e80000		2630490	1					
ANR	2651758	ExpressionStatement	ao -> o |= reg1	5075:3:107533:107546	2630490	6	True				
ANR	2651759	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2651760	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651761	Identifier	ao		2630490	0					
ANR	2651762	Identifier	o		2630490	1					
ANR	2651763	Identifier	reg1		2630490	1					
ANR	2651764	ExpressionStatement	ao -> o |= reg2 << 4	5076:3:107551:107569	2630490	7	True				
ANR	2651765	AssignmentExpression	ao -> o |= reg2 << 4		2630490	0		|=			
ANR	2651766	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651767	Identifier	ao		2630490	0					
ANR	2651768	Identifier	o		2630490	1					
ANR	2651769	ShiftExpression	reg2 << 4		2630490	1		<<			
ANR	2651770	Identifier	reg2		2630490	0					
ANR	2651771	PrimaryExpression	4		2630490	1					
ANR	2651772	ExpressionStatement	ao -> o |= reg3 << 24	5077:3:107574:107593	2630490	8	True				
ANR	2651773	AssignmentExpression	ao -> o |= reg3 << 24		2630490	0		|=			
ANR	2651774	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651775	Identifier	ao		2630490	0					
ANR	2651776	Identifier	o		2630490	1					
ANR	2651777	ShiftExpression	reg3 << 24		2630490	1		<<			
ANR	2651778	Identifier	reg3		2630490	0					
ANR	2651779	PrimaryExpression	24		2630490	1					
ANR	2651780	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	5078:3:107598:107622	2630490	9	True				
ANR	2651781	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		2630490	0		|=			
ANR	2651782	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651783	Identifier	ao		2630490	0					
ANR	2651784	Identifier	o		2630490	1					
ANR	2651785	ShiftExpression	( num >> 2 ) << 8		2630490	1		<<			
ANR	2651786	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2651787	Identifier	num		2630490	0					
ANR	2651788	PrimaryExpression	2		2630490	1					
ANR	2651789	PrimaryExpression	8		2630490	1					
ANR	2651790	ReturnStatement	return 4 ;	5079:3:107627:107635	2630490	10	True				
ANR	2651791	PrimaryExpression	4		2630490	0					
ANR	2651792	BreakStatement	break ;	5081:3:107652:107657	2630490	4	True				
ANR	2651793	Label	case THUMB_REG_REG_REG_BRACKREGBRACK :	5082:2:107661:107697	2630490	5	True				
ANR	2651794	Identifier	THUMB_REG_REG_REG_BRACKREGBRACK		2630490	0					
ANR	2651795	CompoundStatement		3794:3:81944:81983	2630490	6					
ANR	2651796	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5083:3:107704:107732	2630490	0	True				
ANR	2651797	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2651798	IdentifierDeclType	ut8		2630490	0					
ANR	2651799	Identifier	reg1		2630490	1					
ANR	2651800	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2651801	Identifier	reg1		2630490	0					
ANR	2651802	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2651803	Callee	getreg		2630490	0					
ANR	2651804	Identifier	getreg		2630490	0					
ANR	2651805	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2651806	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2651807	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2651808	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651809	Identifier	ao		2630490	0					
ANR	2651810	Identifier	a		2630490	1					
ANR	2651811	PrimaryExpression	0		2630490	1					
ANR	2651812	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5084:3:107737:107765	2630490	1	True				
ANR	2651813	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2651814	IdentifierDeclType	ut8		2630490	0					
ANR	2651815	Identifier	reg2		2630490	1					
ANR	2651816	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2651817	Identifier	reg2		2630490	0					
ANR	2651818	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2651819	Callee	getreg		2630490	0					
ANR	2651820	Identifier	getreg		2630490	0					
ANR	2651821	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2651822	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2651823	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2651824	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651825	Identifier	ao		2630490	0					
ANR	2651826	Identifier	a		2630490	1					
ANR	2651827	PrimaryExpression	1		2630490	1					
ANR	2651828	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	5085:3:107770:107798	2630490	2	True				
ANR	2651829	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2651830	IdentifierDeclType	ut8		2630490	0					
ANR	2651831	Identifier	reg3		2630490	1					
ANR	2651832	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2651833	Identifier	reg3		2630490	0					
ANR	2651834	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2651835	Callee	getreg		2630490	0					
ANR	2651836	Identifier	getreg		2630490	0					
ANR	2651837	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2651838	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2651839	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2651840	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651841	Identifier	ao		2630490	0					
ANR	2651842	Identifier	a		2630490	1					
ANR	2651843	PrimaryExpression	2		2630490	1					
ANR	2651844	IdentifierDeclStatement	ut8 reg4 = getregmemstartend ( ao -> a [ 3 ] ) ;	5086:3:107803:107842	2630490	3	True				
ANR	2651845	IdentifierDecl	reg4 = getregmemstartend ( ao -> a [ 3 ] )		2630490	0					
ANR	2651846	IdentifierDeclType	ut8		2630490	0					
ANR	2651847	Identifier	reg4		2630490	1					
ANR	2651848	AssignmentExpression	reg4 = getregmemstartend ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2651849	Identifier	reg4		2630490	0					
ANR	2651850	CallExpression	getregmemstartend ( ao -> a [ 3 ] )		2630490	1					
ANR	2651851	Callee	getregmemstartend		2630490	0					
ANR	2651852	Identifier	getregmemstartend		2630490	0					
ANR	2651853	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2651854	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2651855	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2651856	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651857	Identifier	ao		2630490	0					
ANR	2651858	Identifier	a		2630490	1					
ANR	2651859	PrimaryExpression	3		2630490	1					
ANR	2651860	IfStatement	if ( ( strsel != D_BIT ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) )		2630490	4					
ANR	2651861	Condition	( strsel != D_BIT ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )	5088:7:107852:107928	2630490	0	True				
ANR	2651862	OrExpression	( strsel != D_BIT ) || ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		2630490	0		||			
ANR	2651863	EqualityExpression	strsel != D_BIT		2630490	0		!=			
ANR	2651864	Identifier	strsel		2630490	0					
ANR	2651865	Identifier	D_BIT		2630490	1					
ANR	2651866	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		2630490	1		||			
ANR	2651867	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2651868	Identifier	reg1		2630490	0					
ANR	2651869	PrimaryExpression	15		2630490	1					
ANR	2651870	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		2630490	1		||			
ANR	2651871	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2651872	Identifier	reg2		2630490	0					
ANR	2651873	PrimaryExpression	15		2630490	1					
ANR	2651874	OrExpression	( reg3 > 15 ) || ( reg4 > 15 )		2630490	1		||			
ANR	2651875	RelationalExpression	reg3 > 15		2630490	0		>			
ANR	2651876	Identifier	reg3		2630490	0					
ANR	2651877	PrimaryExpression	15		2630490	1					
ANR	2651878	RelationalExpression	reg4 > 15		2630490	1		>			
ANR	2651879	Identifier	reg4		2630490	0					
ANR	2651880	PrimaryExpression	15		2630490	1					
ANR	2651881	CompoundStatement		3796:86:82072:82072	2630490	1					
ANR	2651882	ReturnStatement	return - 1 ;	5089:4:107937:107946	2630490	0	True				
ANR	2651883	UnaryOperationExpression	- 1		2630490	0					
ANR	2651884	UnaryOperator	-		2630490	0					
ANR	2651885	PrimaryExpression	1		2630490	1					
ANR	2651886	ExpressionStatement	ao -> o = 0xc0e87000	5092:3:107957:107975	2630490	5	True				
ANR	2651887	AssignmentExpression	ao -> o = 0xc0e87000		2630490	0		=			
ANR	2651888	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651889	Identifier	ao		2630490	0					
ANR	2651890	Identifier	o		2630490	1					
ANR	2651891	PrimaryExpression	0xc0e87000		2630490	1					
ANR	2651892	ExpressionStatement	ao -> o |= reg1 << 8	5093:3:107980:107998	2630490	6	True				
ANR	2651893	AssignmentExpression	ao -> o |= reg1 << 8		2630490	0		|=			
ANR	2651894	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651895	Identifier	ao		2630490	0					
ANR	2651896	Identifier	o		2630490	1					
ANR	2651897	ShiftExpression	reg1 << 8		2630490	1		<<			
ANR	2651898	Identifier	reg1		2630490	0					
ANR	2651899	PrimaryExpression	8		2630490	1					
ANR	2651900	ExpressionStatement	ao -> o |= reg2 << 4	5094:3:108003:108021	2630490	7	True				
ANR	2651901	AssignmentExpression	ao -> o |= reg2 << 4		2630490	0		|=			
ANR	2651902	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651903	Identifier	ao		2630490	0					
ANR	2651904	Identifier	o		2630490	1					
ANR	2651905	ShiftExpression	reg2 << 4		2630490	1		<<			
ANR	2651906	Identifier	reg2		2630490	0					
ANR	2651907	PrimaryExpression	4		2630490	1					
ANR	2651908	ExpressionStatement	ao -> o |= reg3	5095:3:108026:108039	2630490	8	True				
ANR	2651909	AssignmentExpression	ao -> o |= reg3		2630490	0		|=			
ANR	2651910	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651911	Identifier	ao		2630490	0					
ANR	2651912	Identifier	o		2630490	1					
ANR	2651913	Identifier	reg3		2630490	1					
ANR	2651914	ExpressionStatement	ao -> o |= reg4 << 24	5096:3:108044:108063	2630490	9	True				
ANR	2651915	AssignmentExpression	ao -> o |= reg4 << 24		2630490	0		|=			
ANR	2651916	PtrMemberAccess	ao -> o		2630490	0					
ANR	2651917	Identifier	ao		2630490	0					
ANR	2651918	Identifier	o		2630490	1					
ANR	2651919	ShiftExpression	reg4 << 24		2630490	1		<<			
ANR	2651920	Identifier	reg4		2630490	0					
ANR	2651921	PrimaryExpression	24		2630490	1					
ANR	2651922	ReturnStatement	return 4 ;	5097:3:108068:108076	2630490	10	True				
ANR	2651923	PrimaryExpression	4		2630490	0					
ANR	2651924	BreakStatement	break ;	5099:3:108093:108098	2630490	7	True				
ANR	2651925	ElseStatement	else		2630490	0					
ANR	2651926	IfStatement	"if ( ( m = opmask ( ao -> op , ""sub"" , S_BIT | W_BIT ) ) )"		2630490	0					
ANR	2651927	Condition	"m = opmask ( ao -> op , ""sub"" , S_BIT | W_BIT )"	5102:5:108118:108160	2630490	0	True				
ANR	2651928	AssignmentExpression	"m = opmask ( ao -> op , ""sub"" , S_BIT | W_BIT )"		2630490	0		=			
ANR	2651929	Identifier	m		2630490	0					
ANR	2651930	CallExpression	"opmask ( ao -> op , ""sub"" , S_BIT | W_BIT )"		2630490	1					
ANR	2651931	Callee	opmask		2630490	0					
ANR	2651932	Identifier	opmask		2630490	0					
ANR	2651933	ArgumentList	ao -> op		2630490	1					
ANR	2651934	Argument	ao -> op		2630490	0					
ANR	2651935	PtrMemberAccess	ao -> op		2630490	0					
ANR	2651936	Identifier	ao		2630490	0					
ANR	2651937	Identifier	op		2630490	1					
ANR	2651938	Argument	"""sub"""		2630490	1					
ANR	2651939	PrimaryExpression	"""sub"""		2630490	0					
ANR	2651940	Argument	S_BIT | W_BIT		2630490	2					
ANR	2651941	InclusiveOrExpression	S_BIT | W_BIT		2630490	0		|			
ANR	2651942	Identifier	S_BIT		2630490	0					
ANR	2651943	Identifier	W_BIT		2630490	1					
ANR	2651944	CompoundStatement		3811:2:82308:82342	2630490	1					
ANR	2651945	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5103:2:108167:108201	2630490	0	True				
ANR	2651946	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2651947	IdentifierDeclType	ut64		2630490	0					
ANR	2651948	Identifier	argt		2630490	1					
ANR	2651949	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2651950	Identifier	argt		2630490	0					
ANR	2651951	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2651952	Callee	thumb_selector		2630490	0					
ANR	2651953	Identifier	thumb_selector		2630490	0					
ANR	2651954	ArgumentList	ao -> a		2630490	1					
ANR	2651955	Argument	ao -> a		2630490	0					
ANR	2651956	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651957	Identifier	ao		2630490	0					
ANR	2651958	Identifier	a		2630490	1					
ANR	2651959	SwitchStatement	switch ( argt )		2630490	1					
ANR	2651960	Condition	argt	5104:10:108213:108216	2630490	0	True				
ANR	2651961	Identifier	argt		2630490	0					
ANR	2651962	CompoundStatement		3812:16:82360:82360	2630490	1					
ANR	2651963	Label	case THUMB_REG_CONST :	5105:2:108223:108243	2630490	0	True				
ANR	2651964	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2651965	CompoundStatement		3813:24:82386:82386	2630490	1					
ANR	2651966	ExpressionStatement	std_opt_2 ( ao )	5106:3:108250:108264	2630490	0	True				
ANR	2651967	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2651968	Callee	std_opt_2		2630490	0					
ANR	2651969	Identifier	std_opt_2		2630490	0					
ANR	2651970	ArgumentList	ao		2630490	1					
ANR	2651971	Argument	ao		2630490	0					
ANR	2651972	Identifier	ao		2630490	0					
ANR	2651973	Label	case THUMB_REG_REG_CONST :	5109:2:108310:108334	2630490	2	True				
ANR	2651974	Identifier	THUMB_REG_REG_CONST		2630490	0					
ANR	2651975	CompoundStatement		3877:3:83760:83796	2630490	3					
ANR	2651976	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5110:3:108341:108369	2630490	0	True				
ANR	2651977	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2651978	IdentifierDeclType	ut8		2630490	0					
ANR	2651979	Identifier	reg1		2630490	1					
ANR	2651980	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2651981	Identifier	reg1		2630490	0					
ANR	2651982	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2651983	Callee	getreg		2630490	0					
ANR	2651984	Identifier	getreg		2630490	0					
ANR	2651985	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2651986	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2651987	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2651988	PtrMemberAccess	ao -> a		2630490	0					
ANR	2651989	Identifier	ao		2630490	0					
ANR	2651990	Identifier	a		2630490	1					
ANR	2651991	PrimaryExpression	0		2630490	1					
ANR	2651992	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5111:3:108374:108402	2630490	1	True				
ANR	2651993	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2651994	IdentifierDeclType	ut8		2630490	0					
ANR	2651995	Identifier	reg2		2630490	1					
ANR	2651996	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2651997	Identifier	reg2		2630490	0					
ANR	2651998	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2651999	Callee	getreg		2630490	0					
ANR	2652000	Identifier	getreg		2630490	0					
ANR	2652001	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2652002	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2652003	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2652004	PtrMemberAccess	ao -> a		2630490	0					
ANR	2652005	Identifier	ao		2630490	0					
ANR	2652006	Identifier	a		2630490	1					
ANR	2652007	PrimaryExpression	1		2630490	1					
ANR	2652008	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 2 ] ) ;	5112:3:108407:108435	2630490	2	True				
ANR	2652009	IdentifierDecl	num = getnum ( ao -> a [ 2 ] )		2630490	0					
ANR	2652010	IdentifierDeclType	ut32		2630490	0					
ANR	2652011	Identifier	num		2630490	1					
ANR	2652012	AssignmentExpression	num = getnum ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2652013	Identifier	num		2630490	0					
ANR	2652014	CallExpression	getnum ( ao -> a [ 2 ] )		2630490	1					
ANR	2652015	Callee	getnum		2630490	0					
ANR	2652016	Identifier	getnum		2630490	0					
ANR	2652017	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2652018	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2652019	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2652020	PtrMemberAccess	ao -> a		2630490	0					
ANR	2652021	Identifier	ao		2630490	0					
ANR	2652022	Identifier	a		2630490	1					
ANR	2652023	PrimaryExpression	2		2630490	1					
ANR	2652024	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) )		2630490	3					
ANR	2652025	Condition	( reg1 > 15 ) || ( reg2 > 15 )	5114:7:108445:108470	2630490	0	True				
ANR	2652026	OrExpression	( reg1 > 15 ) || ( reg2 > 15 )		2630490	0		||			
ANR	2652027	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2652028	Identifier	reg1		2630490	0					
ANR	2652029	PrimaryExpression	15		2630490	1					
ANR	2652030	RelationalExpression	reg2 > 15		2630490	1		>			
ANR	2652031	Identifier	reg2		2630490	0					
ANR	2652032	PrimaryExpression	15		2630490	1					
ANR	2652033	CompoundStatement		3822:35:82614:82614	2630490	1					
ANR	2652034	ReturnStatement	return - 1 ;	5115:4:108479:108488	2630490	0	True				
ANR	2652035	UnaryOperationExpression	- 1		2630490	0					
ANR	2652036	UnaryOperator	-		2630490	0					
ANR	2652037	PrimaryExpression	1		2630490	1					
ANR	2652038	IfStatement	if ( ( reg1 == 15 ) && ( reg2 == 14 ) && ( num < 256 ) )		2630490	4					
ANR	2652039	Condition	( reg1 == 15 ) && ( reg2 == 14 ) && ( num < 256 )	5118:7:108503:108545	2630490	0	True				
ANR	2652040	AndExpression	( reg1 == 15 ) && ( reg2 == 14 ) && ( num < 256 )		2630490	0		&&			
ANR	2652041	EqualityExpression	reg1 == 15		2630490	0		==			
ANR	2652042	Identifier	reg1		2630490	0					
ANR	2652043	PrimaryExpression	15		2630490	1					
ANR	2652044	AndExpression	( reg2 == 14 ) && ( num < 256 )		2630490	1		&&			
ANR	2652045	EqualityExpression	reg2 == 14		2630490	0		==			
ANR	2652046	Identifier	reg2		2630490	0					
ANR	2652047	PrimaryExpression	14		2630490	1					
ANR	2652048	RelationalExpression	num < 256		2630490	1		<			
ANR	2652049	Identifier	num		2630490	0					
ANR	2652050	PrimaryExpression	256		2630490	1					
ANR	2652051	CompoundStatement		3826:52:82689:82689	2630490	1					
ANR	2652052	ExpressionStatement	ao -> o = 0xdef3008f	5119:4:108554:108572	2630490	0	True				
ANR	2652053	AssignmentExpression	ao -> o = 0xdef3008f		2630490	0		=			
ANR	2652054	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652055	Identifier	ao		2630490	0					
ANR	2652056	Identifier	o		2630490	1					
ANR	2652057	PrimaryExpression	0xdef3008f		2630490	1					
ANR	2652058	ExpressionStatement	ao -> o |= num << 8	5120:4:108578:108595	2630490	1	True				
ANR	2652059	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2652060	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652061	Identifier	ao		2630490	0					
ANR	2652062	Identifier	o		2630490	1					
ANR	2652063	ShiftExpression	num << 8		2630490	1		<<			
ANR	2652064	Identifier	num		2630490	0					
ANR	2652065	PrimaryExpression	8		2630490	1					
ANR	2652066	ReturnStatement	return 4 ;	5121:4:108601:108609	2630490	2	True				
ANR	2652067	PrimaryExpression	4		2630490	0					
ANR	2652068	IfStatement	if ( reg2 == 13 )		2630490	5					
ANR	2652069	Condition	reg2 == 13	5123:7:108623:108632	2630490	0	True				
ANR	2652070	EqualityExpression	reg2 == 13		2630490	0		==			
ANR	2652071	Identifier	reg2		2630490	0					
ANR	2652072	PrimaryExpression	13		2630490	1					
ANR	2652073	CompoundStatement		3838:4:82970:83006	2630490	1					
ANR	2652074	IfStatement	if ( ( reg1 == 13 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num <= 4096 ) && ( num % 4 == 0 ) )		2630490	0					
ANR	2652075	Condition	( reg1 == 13 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num <= 4096 ) && ( num % 4 == 0 )	5124:8:108645:108730	2630490	0	True				
ANR	2652076	AndExpression	( reg1 == 13 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num <= 4096 ) && ( num % 4 == 0 )		2630490	0		&&			
ANR	2652077	EqualityExpression	reg1 == 13		2630490	0		==			
ANR	2652078	Identifier	reg1		2630490	0					
ANR	2652079	PrimaryExpression	13		2630490	1					
ANR	2652080	AndExpression	( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num <= 4096 ) && ( num % 4 == 0 )		2630490	1		&&			
ANR	2652081	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	0					
ANR	2652082	UnaryOperator	!		2630490	0					
ANR	2652083	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2652084	Identifier	m		2630490	0					
ANR	2652085	Identifier	DOTW_BIT		2630490	1					
ANR	2652086	AndExpression	( ! ( m & W_BIT ) ) && ( num <= 4096 ) && ( num % 4 == 0 )		2630490	1		&&			
ANR	2652087	UnaryOperationExpression	! ( m & W_BIT )		2630490	0					
ANR	2652088	UnaryOperator	!		2630490	0					
ANR	2652089	BitAndExpression	m & W_BIT		2630490	1		&			
ANR	2652090	Identifier	m		2630490	0					
ANR	2652091	Identifier	W_BIT		2630490	1					
ANR	2652092	AndExpression	( num <= 4096 ) && ( num % 4 == 0 )		2630490	1		&&			
ANR	2652093	RelationalExpression	num <= 4096		2630490	0		<=			
ANR	2652094	Identifier	num		2630490	0					
ANR	2652095	PrimaryExpression	4096		2630490	1					
ANR	2652096	EqualityExpression	num % 4 == 0		2630490	1		==			
ANR	2652097	MultiplicativeExpression	num % 4		2630490	0		%			
ANR	2652098	Identifier	num		2630490	0					
ANR	2652099	PrimaryExpression	4		2630490	1					
ANR	2652100	PrimaryExpression	0		2630490	1					
ANR	2652101	CompoundStatement		3832:96:82874:82874	2630490	1					
ANR	2652102	ExpressionStatement	ao -> o = 0x80b0	5125:5:108740:108754	2630490	0	True				
ANR	2652103	AssignmentExpression	ao -> o = 0x80b0		2630490	0		=			
ANR	2652104	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652105	Identifier	ao		2630490	0					
ANR	2652106	Identifier	o		2630490	1					
ANR	2652107	PrimaryExpression	0x80b0		2630490	1					
ANR	2652108	ExpressionStatement	ao -> o |= ( num >> 2 ) << 8	5126:5:108761:108785	2630490	1	True				
ANR	2652109	AssignmentExpression	ao -> o |= ( num >> 2 ) << 8		2630490	0		|=			
ANR	2652110	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652111	Identifier	ao		2630490	0					
ANR	2652112	Identifier	o		2630490	1					
ANR	2652113	ShiftExpression	( num >> 2 ) << 8		2630490	1		<<			
ANR	2652114	ShiftExpression	num >> 2		2630490	0		>>			
ANR	2652115	Identifier	num		2630490	0					
ANR	2652116	PrimaryExpression	2		2630490	1					
ANR	2652117	PrimaryExpression	8		2630490	1					
ANR	2652118	ReturnStatement	return 2 ;	5127:5:108792:108800	2630490	2	True				
ANR	2652119	PrimaryExpression	2		2630490	0					
ANR	2652120	ExpressionStatement	err = false	5129:4:108812:108823	2630490	1	True				
ANR	2652121	AssignmentExpression	err = false		2630490	0		=			
ANR	2652122	Identifier	err		2630490	0					
ANR	2652123	Identifier	false		2630490	1					
ANR	2652124	IdentifierDeclStatement	ut32 thnum = getthimmed12 ( ao -> a [ 2 ] ) ;	5130:4:108829:108865	2630490	2	True				
ANR	2652125	IdentifierDecl	thnum = getthimmed12 ( ao -> a [ 2 ] )		2630490	0					
ANR	2652126	IdentifierDeclType	ut32		2630490	0					
ANR	2652127	Identifier	thnum		2630490	1					
ANR	2652128	AssignmentExpression	thnum = getthimmed12 ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2652129	Identifier	thnum		2630490	0					
ANR	2652130	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		2630490	1					
ANR	2652131	Callee	getthimmed12		2630490	0					
ANR	2652132	Identifier	getthimmed12		2630490	0					
ANR	2652133	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2652134	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2652135	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2652136	PtrMemberAccess	ao -> a		2630490	0					
ANR	2652137	Identifier	ao		2630490	0					
ANR	2652138	Identifier	a		2630490	1					
ANR	2652139	PrimaryExpression	2		2630490	1					
ANR	2652140	IfStatement	if ( ! err && ( ! ( m & W_BIT ) ) )		2630490	3					
ANR	2652141	Condition	! err && ( ! ( m & W_BIT ) )	5132:8:108880:108901	2630490	0	True				
ANR	2652142	AndExpression	! err && ( ! ( m & W_BIT ) )		2630490	0		&&			
ANR	2652143	UnaryOperationExpression	! err		2630490	0					
ANR	2652144	UnaryOperator	!		2630490	0					
ANR	2652145	Identifier	err		2630490	1					
ANR	2652146	UnaryOperationExpression	! ( m & W_BIT )		2630490	1					
ANR	2652147	UnaryOperator	!		2630490	0					
ANR	2652148	BitAndExpression	m & W_BIT		2630490	1		&			
ANR	2652149	Identifier	m		2630490	0					
ANR	2652150	Identifier	W_BIT		2630490	1					
ANR	2652151	CompoundStatement		3840:32:83045:83045	2630490	1					
ANR	2652152	ExpressionStatement	ao -> o = 0xadf10000	5133:5:108911:108929	2630490	0	True				
ANR	2652153	AssignmentExpression	ao -> o = 0xadf10000		2630490	0		=			
ANR	2652154	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652155	Identifier	ao		2630490	0					
ANR	2652156	Identifier	o		2630490	1					
ANR	2652157	PrimaryExpression	0xadf10000		2630490	1					
ANR	2652158	ExpressionStatement	ao -> o |= thnum	5134:5:108936:108950	2630490	1	True				
ANR	2652159	AssignmentExpression	ao -> o |= thnum		2630490	0		|=			
ANR	2652160	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652161	Identifier	ao		2630490	0					
ANR	2652162	Identifier	o		2630490	1					
ANR	2652163	Identifier	thnum		2630490	1					
ANR	2652164	ExpressionStatement	ao -> o |= reg1	5135:5:108957:108970	2630490	2	True				
ANR	2652165	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2652166	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652167	Identifier	ao		2630490	0					
ANR	2652168	Identifier	o		2630490	1					
ANR	2652169	Identifier	reg1		2630490	1					
ANR	2652170	IfStatement	if ( m & S_BIT )		2630490	3					
ANR	2652171	Condition	m & S_BIT	5136:9:108981:108989	2630490	0	True				
ANR	2652172	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2652173	Identifier	m		2630490	0					
ANR	2652174	Identifier	S_BIT		2630490	1					
ANR	2652175	CompoundStatement		3844:20:83133:83133	2630490	1					
ANR	2652176	ExpressionStatement	ao -> o |= 1 << 28	5137:6:109000:109016	2630490	0	True				
ANR	2652177	AssignmentExpression	ao -> o |= 1 << 28		2630490	0		|=			
ANR	2652178	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652179	Identifier	ao		2630490	0					
ANR	2652180	Identifier	o		2630490	1					
ANR	2652181	ShiftExpression	1 << 28		2630490	1		<<			
ANR	2652182	PrimaryExpression	1		2630490	0					
ANR	2652183	PrimaryExpression	28		2630490	1					
ANR	2652184	ReturnStatement	return 4 ;	5139:5:109030:109038	2630490	4	True				
ANR	2652185	PrimaryExpression	4		2630490	0					
ANR	2652186	IfStatement	if ( num > 4096 )		2630490	4					
ANR	2652187	Condition	num > 4096	5142:8:109055:109064	2630490	0	True				
ANR	2652188	RelationalExpression	num > 4096		2630490	0		>			
ANR	2652189	Identifier	num		2630490	0					
ANR	2652190	PrimaryExpression	4096		2630490	1					
ANR	2652191	CompoundStatement		3850:20:83208:83208	2630490	1					
ANR	2652192	ReturnStatement	return - 1 ;	5143:5:109074:109083	2630490	0	True				
ANR	2652193	UnaryOperationExpression	- 1		2630490	0					
ANR	2652194	UnaryOperator	-		2630490	0					
ANR	2652195	PrimaryExpression	1		2630490	1					
ANR	2652196	ExpressionStatement	ao -> o = 0xadf20000	5146:4:109096:109114	2630490	5	True				
ANR	2652197	AssignmentExpression	ao -> o = 0xadf20000		2630490	0		=			
ANR	2652198	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652199	Identifier	ao		2630490	0					
ANR	2652200	Identifier	o		2630490	1					
ANR	2652201	PrimaryExpression	0xadf20000		2630490	1					
ANR	2652202	ExpressionStatement	ao -> o |= getthzeroimmed12 ( num )	5147:4:109120:109151	2630490	6	True				
ANR	2652203	AssignmentExpression	ao -> o |= getthzeroimmed12 ( num )		2630490	0		|=			
ANR	2652204	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652205	Identifier	ao		2630490	0					
ANR	2652206	Identifier	o		2630490	1					
ANR	2652207	CallExpression	getthzeroimmed12 ( num )		2630490	1					
ANR	2652208	Callee	getthzeroimmed12		2630490	0					
ANR	2652209	Identifier	getthzeroimmed12		2630490	0					
ANR	2652210	ArgumentList	num		2630490	1					
ANR	2652211	Argument	num		2630490	0					
ANR	2652212	Identifier	num		2630490	0					
ANR	2652213	ExpressionStatement	ao -> o |= reg1	5148:4:109157:109170	2630490	7	True				
ANR	2652214	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2652215	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652216	Identifier	ao		2630490	0					
ANR	2652217	Identifier	o		2630490	1					
ANR	2652218	Identifier	reg1		2630490	1					
ANR	2652219	ReturnStatement	return 4 ;	5149:4:109176:109184	2630490	8	True				
ANR	2652220	PrimaryExpression	4		2630490	0					
ANR	2652221	IfStatement	if ( ( reg1 < 8 ) && ( reg2 < 8 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 8 ) )		2630490	6					
ANR	2652222	Condition	( reg1 < 8 ) && ( reg2 < 8 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 8 )	5152:7:109199:109274	2630490	0	True				
ANR	2652223	AndExpression	( reg1 < 8 ) && ( reg2 < 8 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 8 )		2630490	0		&&			
ANR	2652224	RelationalExpression	reg1 < 8		2630490	0		<			
ANR	2652225	Identifier	reg1		2630490	0					
ANR	2652226	PrimaryExpression	8		2630490	1					
ANR	2652227	AndExpression	( reg2 < 8 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 8 )		2630490	1		&&			
ANR	2652228	RelationalExpression	reg2 < 8		2630490	0		<			
ANR	2652229	Identifier	reg2		2630490	0					
ANR	2652230	PrimaryExpression	8		2630490	1					
ANR	2652231	AndExpression	( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 8 )		2630490	1		&&			
ANR	2652232	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	0					
ANR	2652233	UnaryOperator	!		2630490	0					
ANR	2652234	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2652235	Identifier	m		2630490	0					
ANR	2652236	Identifier	DOTW_BIT		2630490	1					
ANR	2652237	AndExpression	( ! ( m & W_BIT ) ) && ( num < 8 )		2630490	1		&&			
ANR	2652238	UnaryOperationExpression	! ( m & W_BIT )		2630490	0					
ANR	2652239	UnaryOperator	!		2630490	0					
ANR	2652240	BitAndExpression	m & W_BIT		2630490	1		&			
ANR	2652241	Identifier	m		2630490	0					
ANR	2652242	Identifier	W_BIT		2630490	1					
ANR	2652243	RelationalExpression	num < 8		2630490	1		<			
ANR	2652244	Identifier	num		2630490	0					
ANR	2652245	PrimaryExpression	8		2630490	1					
ANR	2652246	CompoundStatement		3860:85:83418:83418	2630490	1					
ANR	2652247	ExpressionStatement	ao -> o = 0x001e	5153:4:109283:109297	2630490	0	True				
ANR	2652248	AssignmentExpression	ao -> o = 0x001e		2630490	0		=			
ANR	2652249	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652250	Identifier	ao		2630490	0					
ANR	2652251	Identifier	o		2630490	1					
ANR	2652252	PrimaryExpression	0x001e		2630490	1					
ANR	2652253	ExpressionStatement	ao -> o |= reg1 << 8	5154:4:109303:109321	2630490	1	True				
ANR	2652254	AssignmentExpression	ao -> o |= reg1 << 8		2630490	0		|=			
ANR	2652255	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652256	Identifier	ao		2630490	0					
ANR	2652257	Identifier	o		2630490	1					
ANR	2652258	ShiftExpression	reg1 << 8		2630490	1		<<			
ANR	2652259	Identifier	reg1		2630490	0					
ANR	2652260	PrimaryExpression	8		2630490	1					
ANR	2652261	ExpressionStatement	ao -> o |= reg2 << 11	5155:4:109327:109346	2630490	2	True				
ANR	2652262	AssignmentExpression	ao -> o |= reg2 << 11		2630490	0		|=			
ANR	2652263	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652264	Identifier	ao		2630490	0					
ANR	2652265	Identifier	o		2630490	1					
ANR	2652266	ShiftExpression	reg2 << 11		2630490	1		<<			
ANR	2652267	Identifier	reg2		2630490	0					
ANR	2652268	PrimaryExpression	11		2630490	1					
ANR	2652269	ExpressionStatement	ao -> o |= ( num & 0x3 ) << 14	5156:4:109352:109378	2630490	3	True				
ANR	2652270	AssignmentExpression	ao -> o |= ( num & 0x3 ) << 14		2630490	0		|=			
ANR	2652271	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652272	Identifier	ao		2630490	0					
ANR	2652273	Identifier	o		2630490	1					
ANR	2652274	ShiftExpression	( num & 0x3 ) << 14		2630490	1		<<			
ANR	2652275	BitAndExpression	num & 0x3		2630490	0		&			
ANR	2652276	Identifier	num		2630490	0					
ANR	2652277	PrimaryExpression	0x3		2630490	1					
ANR	2652278	PrimaryExpression	14		2630490	1					
ANR	2652279	ExpressionStatement	ao -> o |= ( num >> 2 )	5157:4:109384:109403	2630490	4	True				
ANR	2652280	AssignmentExpression	ao -> o |= ( num >> 2 )		2630490	0		|=			
ANR	2652281	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652282	Identifier	ao		2630490	0					
ANR	2652283	Identifier	o		2630490	1					
ANR	2652284	ShiftExpression	num >> 2		2630490	1		>>			
ANR	2652285	Identifier	num		2630490	0					
ANR	2652286	PrimaryExpression	2		2630490	1					
ANR	2652287	ReturnStatement	return 2 ;	5158:4:109409:109417	2630490	5	True				
ANR	2652288	PrimaryExpression	2		2630490	0					
ANR	2652289	IfStatement	if ( ( reg1 < 8 ) && ( reg1 == reg2 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 256 ) )		2630490	7					
ANR	2652290	Condition	( reg1 < 8 ) && ( reg1 == reg2 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 256 )	5161:7:109432:109513	2630490	0	True				
ANR	2652291	AndExpression	( reg1 < 8 ) && ( reg1 == reg2 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 256 )		2630490	0		&&			
ANR	2652292	RelationalExpression	reg1 < 8		2630490	0		<			
ANR	2652293	Identifier	reg1		2630490	0					
ANR	2652294	PrimaryExpression	8		2630490	1					
ANR	2652295	AndExpression	( reg1 == reg2 ) && ( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 256 )		2630490	1		&&			
ANR	2652296	EqualityExpression	reg1 == reg2		2630490	0		==			
ANR	2652297	Identifier	reg1		2630490	0					
ANR	2652298	Identifier	reg2		2630490	1					
ANR	2652299	AndExpression	( ! ( m & DOTW_BIT ) ) && ( ! ( m & W_BIT ) ) && ( num < 256 )		2630490	1		&&			
ANR	2652300	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	0					
ANR	2652301	UnaryOperator	!		2630490	0					
ANR	2652302	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2652303	Identifier	m		2630490	0					
ANR	2652304	Identifier	DOTW_BIT		2630490	1					
ANR	2652305	AndExpression	( ! ( m & W_BIT ) ) && ( num < 256 )		2630490	1		&&			
ANR	2652306	UnaryOperationExpression	! ( m & W_BIT )		2630490	0					
ANR	2652307	UnaryOperator	!		2630490	0					
ANR	2652308	BitAndExpression	m & W_BIT		2630490	1		&			
ANR	2652309	Identifier	m		2630490	0					
ANR	2652310	Identifier	W_BIT		2630490	1					
ANR	2652311	RelationalExpression	num < 256		2630490	1		<			
ANR	2652312	Identifier	num		2630490	0					
ANR	2652313	PrimaryExpression	256		2630490	1					
ANR	2652314	CompoundStatement		3869:91:83657:83657	2630490	1					
ANR	2652315	ExpressionStatement	ao -> o = 0x0038	5162:4:109522:109536	2630490	0	True				
ANR	2652316	AssignmentExpression	ao -> o = 0x0038		2630490	0		=			
ANR	2652317	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652318	Identifier	ao		2630490	0					
ANR	2652319	Identifier	o		2630490	1					
ANR	2652320	PrimaryExpression	0x0038		2630490	1					
ANR	2652321	ExpressionStatement	ao -> o |= reg1	5163:4:109542:109555	2630490	1	True				
ANR	2652322	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2652323	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652324	Identifier	ao		2630490	0					
ANR	2652325	Identifier	o		2630490	1					
ANR	2652326	Identifier	reg1		2630490	1					
ANR	2652327	ExpressionStatement	ao -> o |= num << 8	5164:4:109561:109578	2630490	2	True				
ANR	2652328	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2652329	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652330	Identifier	ao		2630490	0					
ANR	2652331	Identifier	o		2630490	1					
ANR	2652332	ShiftExpression	num << 8		2630490	1		<<			
ANR	2652333	Identifier	num		2630490	0					
ANR	2652334	PrimaryExpression	8		2630490	1					
ANR	2652335	ReturnStatement	return 2 ;	5165:4:109584:109592	2630490	3	True				
ANR	2652336	PrimaryExpression	2		2630490	0					
ANR	2652337	ExpressionStatement	err = false	5168:3:109603:109614	2630490	8	True				
ANR	2652338	AssignmentExpression	err = false		2630490	0		=			
ANR	2652339	Identifier	err		2630490	0					
ANR	2652340	Identifier	false		2630490	1					
ANR	2652341	IdentifierDeclStatement	ut32 thnum = getthimmed12 ( ao -> a [ 2 ] ) ;	5169:3:109619:109655	2630490	9	True				
ANR	2652342	IdentifierDecl	thnum = getthimmed12 ( ao -> a [ 2 ] )		2630490	0					
ANR	2652343	IdentifierDeclType	ut32		2630490	0					
ANR	2652344	Identifier	thnum		2630490	1					
ANR	2652345	AssignmentExpression	thnum = getthimmed12 ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2652346	Identifier	thnum		2630490	0					
ANR	2652347	CallExpression	getthimmed12 ( ao -> a [ 2 ] )		2630490	1					
ANR	2652348	Callee	getthimmed12		2630490	0					
ANR	2652349	Identifier	getthimmed12		2630490	0					
ANR	2652350	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2652351	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2652352	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2652353	PtrMemberAccess	ao -> a		2630490	0					
ANR	2652354	Identifier	ao		2630490	0					
ANR	2652355	Identifier	a		2630490	1					
ANR	2652356	PrimaryExpression	2		2630490	1					
ANR	2652357	IfStatement	if ( ! err && ( ! ( m & W_BIT ) ) )		2630490	10					
ANR	2652358	Condition	! err && ( ! ( m & W_BIT ) )	5171:7:109668:109689	2630490	0	True				
ANR	2652359	AndExpression	! err && ( ! ( m & W_BIT ) )		2630490	0		&&			
ANR	2652360	UnaryOperationExpression	! err		2630490	0					
ANR	2652361	UnaryOperator	!		2630490	0					
ANR	2652362	Identifier	err		2630490	1					
ANR	2652363	UnaryOperationExpression	! ( m & W_BIT )		2630490	1					
ANR	2652364	UnaryOperator	!		2630490	0					
ANR	2652365	BitAndExpression	m & W_BIT		2630490	1		&			
ANR	2652366	Identifier	m		2630490	0					
ANR	2652367	Identifier	W_BIT		2630490	1					
ANR	2652368	CompoundStatement		3879:31:83833:83833	2630490	1					
ANR	2652369	ExpressionStatement	ao -> o = 0xa0f10000	5172:4:109698:109716	2630490	0	True				
ANR	2652370	AssignmentExpression	ao -> o = 0xa0f10000		2630490	0		=			
ANR	2652371	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652372	Identifier	ao		2630490	0					
ANR	2652373	Identifier	o		2630490	1					
ANR	2652374	PrimaryExpression	0xa0f10000		2630490	1					
ANR	2652375	ExpressionStatement	ao -> o |= thnum	5173:4:109722:109736	2630490	1	True				
ANR	2652376	AssignmentExpression	ao -> o |= thnum		2630490	0		|=			
ANR	2652377	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652378	Identifier	ao		2630490	0					
ANR	2652379	Identifier	o		2630490	1					
ANR	2652380	Identifier	thnum		2630490	1					
ANR	2652381	ReturnStatement	"return std_32bit_2reg ( ao , m , false ) ;"	5174:4:109742:109778	2630490	2	True				
ANR	2652382	CallExpression	"std_32bit_2reg ( ao , m , false )"		2630490	0					
ANR	2652383	Callee	std_32bit_2reg		2630490	0					
ANR	2652384	Identifier	std_32bit_2reg		2630490	0					
ANR	2652385	ArgumentList	ao		2630490	1					
ANR	2652386	Argument	ao		2630490	0					
ANR	2652387	Identifier	ao		2630490	0					
ANR	2652388	Argument	m		2630490	1					
ANR	2652389	Identifier	m		2630490	0					
ANR	2652390	Argument	false		2630490	2					
ANR	2652391	Identifier	false		2630490	0					
ANR	2652392	IfStatement	if ( num > 4096 )		2630490	11					
ANR	2652393	Condition	num > 4096	5177:7:109793:109802	2630490	0	True				
ANR	2652394	RelationalExpression	num > 4096		2630490	0		>			
ANR	2652395	Identifier	num		2630490	0					
ANR	2652396	PrimaryExpression	4096		2630490	1					
ANR	2652397	CompoundStatement		3885:19:83946:83946	2630490	1					
ANR	2652398	ReturnStatement	return - 1 ;	5178:4:109811:109820	2630490	0	True				
ANR	2652399	UnaryOperationExpression	- 1		2630490	0					
ANR	2652400	UnaryOperator	-		2630490	0					
ANR	2652401	PrimaryExpression	1		2630490	1					
ANR	2652402	ExpressionStatement	ao -> o = 0xa0f20000	5181:3:109831:109849	2630490	12	True				
ANR	2652403	AssignmentExpression	ao -> o = 0xa0f20000		2630490	0		=			
ANR	2652404	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652405	Identifier	ao		2630490	0					
ANR	2652406	Identifier	o		2630490	1					
ANR	2652407	PrimaryExpression	0xa0f20000		2630490	1					
ANR	2652408	ExpressionStatement	ao -> o |= reg1	5182:3:109854:109867	2630490	13	True				
ANR	2652409	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2652410	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652411	Identifier	ao		2630490	0					
ANR	2652412	Identifier	o		2630490	1					
ANR	2652413	Identifier	reg1		2630490	1					
ANR	2652414	ExpressionStatement	ao -> o |= reg2 << 24	5183:3:109872:109891	2630490	14	True				
ANR	2652415	AssignmentExpression	ao -> o |= reg2 << 24		2630490	0		|=			
ANR	2652416	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652417	Identifier	ao		2630490	0					
ANR	2652418	Identifier	o		2630490	1					
ANR	2652419	ShiftExpression	reg2 << 24		2630490	1		<<			
ANR	2652420	Identifier	reg2		2630490	0					
ANR	2652421	PrimaryExpression	24		2630490	1					
ANR	2652422	ExpressionStatement	ao -> o |= getthzeroimmed12 ( num )	5184:3:109896:109927	2630490	15	True				
ANR	2652423	AssignmentExpression	ao -> o |= getthzeroimmed12 ( num )		2630490	0		|=			
ANR	2652424	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652425	Identifier	ao		2630490	0					
ANR	2652426	Identifier	o		2630490	1					
ANR	2652427	CallExpression	getthzeroimmed12 ( num )		2630490	1					
ANR	2652428	Callee	getthzeroimmed12		2630490	0					
ANR	2652429	Identifier	getthzeroimmed12		2630490	0					
ANR	2652430	ArgumentList	num		2630490	1					
ANR	2652431	Argument	num		2630490	0					
ANR	2652432	Identifier	num		2630490	0					
ANR	2652433	ReturnStatement	return 4 ;	5185:3:109932:109940	2630490	16	True				
ANR	2652434	PrimaryExpression	4		2630490	0					
ANR	2652435	BreakStatement	break ;	5187:3:109957:109962	2630490	4	True				
ANR	2652436	Label	case THUMB_REG_REG :	5188:2:109966:109984	2630490	5	True				
ANR	2652437	Identifier	THUMB_REG_REG		2630490	0					
ANR	2652438	CompoundStatement		3896:22:84127:84127	2630490	6					
ANR	2652439	ExpressionStatement	std_opt_2 ( ao )	5189:3:109991:110005	2630490	0	True				
ANR	2652440	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2652441	Callee	std_opt_2		2630490	0					
ANR	2652442	Identifier	std_opt_2		2630490	0					
ANR	2652443	ArgumentList	ao		2630490	1					
ANR	2652444	Argument	ao		2630490	0					
ANR	2652445	Identifier	ao		2630490	0					
ANR	2652446	Label	case THUMB_REG_REG_REG :	5192:2:110051:110073	2630490	7	True				
ANR	2652447	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2652448	CompoundStatement		3900:26:84216:84216	2630490	8					
ANR	2652449	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	5193:3:110080:110098	2630490	0	True				
ANR	2652450	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		2630490	0		=			
ANR	2652451	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2652452	PtrMemberAccess	ao -> a		2630490	0					
ANR	2652453	Identifier	ao		2630490	0					
ANR	2652454	Identifier	a		2630490	1					
ANR	2652455	PrimaryExpression	3		2630490	1					
ANR	2652456	PrimaryExpression	"""lsl 0"""		2630490	1					
ANR	2652457	Label	case THUMB_REG_REG_SHIFT :	5196:2:110144:110168	2630490	9	True				
ANR	2652458	Identifier	THUMB_REG_REG_SHIFT		2630490	0					
ANR	2652459	IfStatement	if ( ao -> a [ 3 ] == NULL )		2630490	10					
ANR	2652460	Condition	ao -> a [ 3 ] == NULL	5197:7:110177:110192	2630490	0	True				
ANR	2652461	EqualityExpression	ao -> a [ 3 ] == NULL		2630490	0		==			
ANR	2652462	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2652463	PtrMemberAccess	ao -> a		2630490	0					
ANR	2652464	Identifier	ao		2630490	0					
ANR	2652465	Identifier	a		2630490	1					
ANR	2652466	PrimaryExpression	3		2630490	1					
ANR	2652467	Identifier	NULL		2630490	1					
ANR	2652468	CompoundStatement		3905:25:84336:84336	2630490	1					
ANR	2652469	ExpressionStatement	std_opt_3 ( ao )	5198:4:110223:110237	2630490	0	True				
ANR	2652470	CallExpression	std_opt_3 ( ao )		2630490	0					
ANR	2652471	Callee	std_opt_3		2630490	0					
ANR	2652472	Identifier	std_opt_3		2630490	0					
ANR	2652473	ArgumentList	ao		2630490	1					
ANR	2652474	Argument	ao		2630490	0					
ANR	2652475	Identifier	ao		2630490	0					
ANR	2652476	Label	case THUMB_REG_REG_REG_SHIFT :	5201:2:110276:110304	2630490	11	True				
ANR	2652477	Identifier	THUMB_REG_REG_REG_SHIFT		2630490	0					
ANR	2652478	CompoundStatement		3913:3:84551:84589	2630490	12					
ANR	2652479	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5202:3:110311:110339	2630490	0	True				
ANR	2652480	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2652481	IdentifierDeclType	ut8		2630490	0					
ANR	2652482	Identifier	reg1		2630490	1					
ANR	2652483	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2652484	Identifier	reg1		2630490	0					
ANR	2652485	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2652486	Callee	getreg		2630490	0					
ANR	2652487	Identifier	getreg		2630490	0					
ANR	2652488	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2652489	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2652490	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2652491	PtrMemberAccess	ao -> a		2630490	0					
ANR	2652492	Identifier	ao		2630490	0					
ANR	2652493	Identifier	a		2630490	1					
ANR	2652494	PrimaryExpression	0		2630490	1					
ANR	2652495	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5203:3:110344:110372	2630490	1	True				
ANR	2652496	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2652497	IdentifierDeclType	ut8		2630490	0					
ANR	2652498	Identifier	reg2		2630490	1					
ANR	2652499	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2652500	Identifier	reg2		2630490	0					
ANR	2652501	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2652502	Callee	getreg		2630490	0					
ANR	2652503	Identifier	getreg		2630490	0					
ANR	2652504	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2652505	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2652506	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2652507	PtrMemberAccess	ao -> a		2630490	0					
ANR	2652508	Identifier	ao		2630490	0					
ANR	2652509	Identifier	a		2630490	1					
ANR	2652510	PrimaryExpression	1		2630490	1					
ANR	2652511	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	5204:3:110377:110405	2630490	2	True				
ANR	2652512	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2652513	IdentifierDeclType	ut8		2630490	0					
ANR	2652514	Identifier	reg3		2630490	1					
ANR	2652515	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2652516	Identifier	reg3		2630490	0					
ANR	2652517	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2652518	Callee	getreg		2630490	0					
ANR	2652519	Identifier	getreg		2630490	0					
ANR	2652520	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2652521	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2652522	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2652523	PtrMemberAccess	ao -> a		2630490	0					
ANR	2652524	Identifier	ao		2630490	0					
ANR	2652525	Identifier	a		2630490	1					
ANR	2652526	PrimaryExpression	2		2630490	1					
ANR	2652527	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 3 ] ) ;	5205:3:110410:110448	2630490	3	True				
ANR	2652528	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 3 ] )		2630490	0					
ANR	2652529	IdentifierDeclType	ut32		2630490	0					
ANR	2652530	Identifier	shift		2630490	1					
ANR	2652531	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2652532	Identifier	shift		2630490	0					
ANR	2652533	CallExpression	thumb_getshift ( ao -> a [ 3 ] )		2630490	1					
ANR	2652534	Callee	thumb_getshift		2630490	0					
ANR	2652535	Identifier	thumb_getshift		2630490	0					
ANR	2652536	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2652537	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2652538	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2652539	PtrMemberAccess	ao -> a		2630490	0					
ANR	2652540	Identifier	ao		2630490	0					
ANR	2652541	Identifier	a		2630490	1					
ANR	2652542	PrimaryExpression	3		2630490	1					
ANR	2652543	IfStatement	if ( reg2 == 13 )		2630490	4					
ANR	2652544	Condition	reg2 == 13	5207:7:110458:110467	2630490	0	True				
ANR	2652545	EqualityExpression	reg2 == 13		2630490	0		==			
ANR	2652546	Identifier	reg2		2630490	0					
ANR	2652547	PrimaryExpression	13		2630490	1					
ANR	2652548	CompoundStatement		3915:19:84611:84611	2630490	1					
ANR	2652549	ExpressionStatement	ao -> o = 0xadeb0000	5208:4:110476:110494	2630490	0	True				
ANR	2652550	AssignmentExpression	ao -> o = 0xadeb0000		2630490	0		=			
ANR	2652551	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652552	Identifier	ao		2630490	0					
ANR	2652553	Identifier	o		2630490	1					
ANR	2652554	PrimaryExpression	0xadeb0000		2630490	1					
ANR	2652555	ExpressionStatement	ao -> o |= reg1	5209:4:110500:110513	2630490	1	True				
ANR	2652556	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2652557	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652558	Identifier	ao		2630490	0					
ANR	2652559	Identifier	o		2630490	1					
ANR	2652560	Identifier	reg1		2630490	1					
ANR	2652561	ExpressionStatement	ao -> o |= reg3 << 8	5210:4:110519:110537	2630490	2	True				
ANR	2652562	AssignmentExpression	ao -> o |= reg3 << 8		2630490	0		|=			
ANR	2652563	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652564	Identifier	ao		2630490	0					
ANR	2652565	Identifier	o		2630490	1					
ANR	2652566	ShiftExpression	reg3 << 8		2630490	1		<<			
ANR	2652567	Identifier	reg3		2630490	0					
ANR	2652568	PrimaryExpression	8		2630490	1					
ANR	2652569	ExpressionStatement	ao -> o |= shift	5211:4:110543:110557	2630490	3	True				
ANR	2652570	AssignmentExpression	ao -> o |= shift		2630490	0		|=			
ANR	2652571	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652572	Identifier	ao		2630490	0					
ANR	2652573	Identifier	o		2630490	1					
ANR	2652574	Identifier	shift		2630490	1					
ANR	2652575	IfStatement	if ( m & S_BIT )		2630490	4					
ANR	2652576	Condition	m & S_BIT	5212:8:110567:110575	2630490	0	True				
ANR	2652577	BitAndExpression	m & S_BIT		2630490	0		&			
ANR	2652578	Identifier	m		2630490	0					
ANR	2652579	Identifier	S_BIT		2630490	1					
ANR	2652580	CompoundStatement		3920:19:84719:84719	2630490	1					
ANR	2652581	ExpressionStatement	ao -> o |= 1 << 28	5213:5:110585:110601	2630490	0	True				
ANR	2652582	AssignmentExpression	ao -> o |= 1 << 28		2630490	0		|=			
ANR	2652583	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652584	Identifier	ao		2630490	0					
ANR	2652585	Identifier	o		2630490	1					
ANR	2652586	ShiftExpression	1 << 28		2630490	1		<<			
ANR	2652587	PrimaryExpression	1		2630490	0					
ANR	2652588	PrimaryExpression	28		2630490	1					
ANR	2652589	ReturnStatement	return 4 ;	5215:4:110613:110621	2630490	5	True				
ANR	2652590	PrimaryExpression	4		2630490	0					
ANR	2652591	IfStatement	if ( ( shift == 0 ) && ( reg1 < 8 ) && ( reg2 < 8 ) && ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) ) )		2630490	5					
ANR	2652592	Condition	( shift == 0 ) && ( reg1 < 8 ) && ( reg2 < 8 ) && ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) )	5218:7:110636:110710	2630490	0	True				
ANR	2652593	AndExpression	( shift == 0 ) && ( reg1 < 8 ) && ( reg2 < 8 ) && ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) )		2630490	0		&&			
ANR	2652594	EqualityExpression	shift == 0		2630490	0		==			
ANR	2652595	Identifier	shift		2630490	0					
ANR	2652596	PrimaryExpression	0		2630490	1					
ANR	2652597	AndExpression	( reg1 < 8 ) && ( reg2 < 8 ) && ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) )		2630490	1		&&			
ANR	2652598	RelationalExpression	reg1 < 8		2630490	0		<			
ANR	2652599	Identifier	reg1		2630490	0					
ANR	2652600	PrimaryExpression	8		2630490	1					
ANR	2652601	AndExpression	( reg2 < 8 ) && ( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) )		2630490	1		&&			
ANR	2652602	RelationalExpression	reg2 < 8		2630490	0		<			
ANR	2652603	Identifier	reg2		2630490	0					
ANR	2652604	PrimaryExpression	8		2630490	1					
ANR	2652605	AndExpression	( reg3 < 8 ) && ( ! ( m & DOTW_BIT ) )		2630490	1		&&			
ANR	2652606	RelationalExpression	reg3 < 8		2630490	0		<			
ANR	2652607	Identifier	reg3		2630490	0					
ANR	2652608	PrimaryExpression	8		2630490	1					
ANR	2652609	UnaryOperationExpression	! ( m & DOTW_BIT )		2630490	1					
ANR	2652610	UnaryOperator	!		2630490	0					
ANR	2652611	BitAndExpression	m & DOTW_BIT		2630490	1		&			
ANR	2652612	Identifier	m		2630490	0					
ANR	2652613	Identifier	DOTW_BIT		2630490	1					
ANR	2652614	CompoundStatement		3926:84:84854:84854	2630490	1					
ANR	2652615	ExpressionStatement	ao -> o = 0x001a	5219:4:110719:110733	2630490	0	True				
ANR	2652616	AssignmentExpression	ao -> o = 0x001a		2630490	0		=			
ANR	2652617	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652618	Identifier	ao		2630490	0					
ANR	2652619	Identifier	o		2630490	1					
ANR	2652620	PrimaryExpression	0x001a		2630490	1					
ANR	2652621	ExpressionStatement	ao -> o |= reg1 << 8	5220:4:110739:110757	2630490	1	True				
ANR	2652622	AssignmentExpression	ao -> o |= reg1 << 8		2630490	0		|=			
ANR	2652623	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652624	Identifier	ao		2630490	0					
ANR	2652625	Identifier	o		2630490	1					
ANR	2652626	ShiftExpression	reg1 << 8		2630490	1		<<			
ANR	2652627	Identifier	reg1		2630490	0					
ANR	2652628	PrimaryExpression	8		2630490	1					
ANR	2652629	ExpressionStatement	ao -> o |= reg2 << 11	5221:4:110763:110782	2630490	2	True				
ANR	2652630	AssignmentExpression	ao -> o |= reg2 << 11		2630490	0		|=			
ANR	2652631	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652632	Identifier	ao		2630490	0					
ANR	2652633	Identifier	o		2630490	1					
ANR	2652634	ShiftExpression	reg2 << 11		2630490	1		<<			
ANR	2652635	Identifier	reg2		2630490	0					
ANR	2652636	PrimaryExpression	11		2630490	1					
ANR	2652637	ExpressionStatement	ao -> o |= ( reg3 & 0x3 ) << 14	5222:4:110788:110815	2630490	3	True				
ANR	2652638	AssignmentExpression	ao -> o |= ( reg3 & 0x3 ) << 14		2630490	0		|=			
ANR	2652639	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652640	Identifier	ao		2630490	0					
ANR	2652641	Identifier	o		2630490	1					
ANR	2652642	ShiftExpression	( reg3 & 0x3 ) << 14		2630490	1		<<			
ANR	2652643	BitAndExpression	reg3 & 0x3		2630490	0		&			
ANR	2652644	Identifier	reg3		2630490	0					
ANR	2652645	PrimaryExpression	0x3		2630490	1					
ANR	2652646	PrimaryExpression	14		2630490	1					
ANR	2652647	ExpressionStatement	ao -> o |= ( reg3 >> 2 )	5223:4:110821:110841	2630490	4	True				
ANR	2652648	AssignmentExpression	ao -> o |= ( reg3 >> 2 )		2630490	0		|=			
ANR	2652649	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652650	Identifier	ao		2630490	0					
ANR	2652651	Identifier	o		2630490	1					
ANR	2652652	ShiftExpression	reg3 >> 2		2630490	1		>>			
ANR	2652653	Identifier	reg3		2630490	0					
ANR	2652654	PrimaryExpression	2		2630490	1					
ANR	2652655	ReturnStatement	return 2 ;	5224:4:110847:110855	2630490	5	True				
ANR	2652656	PrimaryExpression	2		2630490	0					
ANR	2652657	ExpressionStatement	ao -> o = 0xa0eb0000	5227:3:110869:110887	2630490	6	True				
ANR	2652658	AssignmentExpression	ao -> o = 0xa0eb0000		2630490	0		=			
ANR	2652659	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652660	Identifier	ao		2630490	0					
ANR	2652661	Identifier	o		2630490	1					
ANR	2652662	PrimaryExpression	0xa0eb0000		2630490	1					
ANR	2652663	ReturnStatement	"return std_32bit_3reg ( ao , m , true ) ;"	5228:3:110892:110927	2630490	7	True				
ANR	2652664	CallExpression	"std_32bit_3reg ( ao , m , true )"		2630490	0					
ANR	2652665	Callee	std_32bit_3reg		2630490	0					
ANR	2652666	Identifier	std_32bit_3reg		2630490	0					
ANR	2652667	ArgumentList	ao		2630490	1					
ANR	2652668	Argument	ao		2630490	0					
ANR	2652669	Identifier	ao		2630490	0					
ANR	2652670	Argument	m		2630490	1					
ANR	2652671	Identifier	m		2630490	0					
ANR	2652672	Argument	true		2630490	2					
ANR	2652673	Identifier	true		2630490	0					
ANR	2652674	BreakStatement	break ;	5230:3:110944:110949	2630490	13	True				
ANR	2652675	Label	default :	5231:2:110953:110960	2630490	14	True				
ANR	2652676	Identifier	default		2630490	0					
ANR	2652677	ReturnStatement	return - 1 ;	5232:3:110965:110974	2630490	15	True				
ANR	2652678	UnaryOperationExpression	- 1		2630490	0					
ANR	2652679	UnaryOperator	-		2630490	0					
ANR	2652680	PrimaryExpression	1		2630490	1					
ANR	2652681	ElseStatement	else		2630490	0					
ANR	2652682	IfStatement	"if ( ( m = opmask ( ao -> op , ""svc"" , 0 ) ) )"		2630490	0					
ANR	2652683	Condition	"m = opmask ( ao -> op , ""svc"" , 0 )"	5235:5:110993:111023	2630490	0	True				
ANR	2652684	AssignmentExpression	"m = opmask ( ao -> op , ""svc"" , 0 )"		2630490	0		=			
ANR	2652685	Identifier	m		2630490	0					
ANR	2652686	CallExpression	"opmask ( ao -> op , ""svc"" , 0 )"		2630490	1					
ANR	2652687	Callee	opmask		2630490	0					
ANR	2652688	Identifier	opmask		2630490	0					
ANR	2652689	ArgumentList	ao -> op		2630490	1					
ANR	2652690	Argument	ao -> op		2630490	0					
ANR	2652691	PtrMemberAccess	ao -> op		2630490	0					
ANR	2652692	Identifier	ao		2630490	0					
ANR	2652693	Identifier	op		2630490	1					
ANR	2652694	Argument	"""svc"""		2630490	1					
ANR	2652695	PrimaryExpression	"""svc"""		2630490	0					
ANR	2652696	Argument	0		2630490	2					
ANR	2652697	PrimaryExpression	0		2630490	0					
ANR	2652698	CompoundStatement		3944:2:85171:85205	2630490	1					
ANR	2652699	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5236:2:111030:111064	2630490	0	True				
ANR	2652700	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2652701	IdentifierDeclType	ut64		2630490	0					
ANR	2652702	Identifier	argt		2630490	1					
ANR	2652703	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2652704	Identifier	argt		2630490	0					
ANR	2652705	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2652706	Callee	thumb_selector		2630490	0					
ANR	2652707	Identifier	thumb_selector		2630490	0					
ANR	2652708	ArgumentList	ao -> a		2630490	1					
ANR	2652709	Argument	ao -> a		2630490	0					
ANR	2652710	PtrMemberAccess	ao -> a		2630490	0					
ANR	2652711	Identifier	ao		2630490	0					
ANR	2652712	Identifier	a		2630490	1					
ANR	2652713	SwitchStatement	switch ( argt )		2630490	1					
ANR	2652714	Condition	argt	5237:10:111076:111079	2630490	0	True				
ANR	2652715	Identifier	argt		2630490	0					
ANR	2652716	CompoundStatement		3945:16:85223:85223	2630490	1					
ANR	2652717	Label	case THUMB_CONST :	5238:2:111086:111102	2630490	0	True				
ANR	2652718	Identifier	THUMB_CONST		2630490	0					
ANR	2652719	CompoundStatement		3947:3:85250:85278	2630490	1					
ANR	2652720	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 0 ] ) ;	5239:3:111109:111137	2630490	0	True				
ANR	2652721	IdentifierDecl	num = getnum ( ao -> a [ 0 ] )		2630490	0					
ANR	2652722	IdentifierDeclType	ut32		2630490	0					
ANR	2652723	Identifier	num		2630490	1					
ANR	2652724	AssignmentExpression	num = getnum ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2652725	Identifier	num		2630490	0					
ANR	2652726	CallExpression	getnum ( ao -> a [ 0 ] )		2630490	1					
ANR	2652727	Callee	getnum		2630490	0					
ANR	2652728	Identifier	getnum		2630490	0					
ANR	2652729	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2652730	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2652731	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2652732	PtrMemberAccess	ao -> a		2630490	0					
ANR	2652733	Identifier	ao		2630490	0					
ANR	2652734	Identifier	a		2630490	1					
ANR	2652735	PrimaryExpression	0		2630490	1					
ANR	2652736	IfStatement	if ( num > 255 )		2630490	1					
ANR	2652737	Condition	num > 255	5240:7:111146:111154	2630490	0	True				
ANR	2652738	RelationalExpression	num > 255		2630490	0		>			
ANR	2652739	Identifier	num		2630490	0					
ANR	2652740	PrimaryExpression	255		2630490	1					
ANR	2652741	CompoundStatement		3948:18:85298:85298	2630490	1					
ANR	2652742	ReturnStatement	return - 1 ;	5241:4:111163:111172	2630490	0	True				
ANR	2652743	UnaryOperationExpression	- 1		2630490	0					
ANR	2652744	UnaryOperator	-		2630490	0					
ANR	2652745	PrimaryExpression	1		2630490	1					
ANR	2652746	ExpressionStatement	ao -> o = 0x00df	5243:3:111182:111196	2630490	2	True				
ANR	2652747	AssignmentExpression	ao -> o = 0x00df		2630490	0		=			
ANR	2652748	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652749	Identifier	ao		2630490	0					
ANR	2652750	Identifier	o		2630490	1					
ANR	2652751	PrimaryExpression	0x00df		2630490	1					
ANR	2652752	ExpressionStatement	ao -> o |= num << 8	5244:3:111201:111218	2630490	3	True				
ANR	2652753	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2652754	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652755	Identifier	ao		2630490	0					
ANR	2652756	Identifier	o		2630490	1					
ANR	2652757	ShiftExpression	num << 8		2630490	1		<<			
ANR	2652758	Identifier	num		2630490	0					
ANR	2652759	PrimaryExpression	8		2630490	1					
ANR	2652760	ReturnStatement	return 2 ;	5245:3:111223:111231	2630490	4	True				
ANR	2652761	PrimaryExpression	2		2630490	0					
ANR	2652762	BreakStatement	break ;	5247:3:111248:111253	2630490	2	True				
ANR	2652763	Label	default :	5248:2:111257:111264	2630490	3	True				
ANR	2652764	Identifier	default		2630490	0					
ANR	2652765	ReturnStatement	return - 1 ;	5249:3:111269:111278	2630490	4	True				
ANR	2652766	UnaryOperationExpression	- 1		2630490	0					
ANR	2652767	UnaryOperator	-		2630490	0					
ANR	2652768	PrimaryExpression	1		2630490	1					
ANR	2652769	ElseStatement	else		2630490	0					
ANR	2652770	IfStatement	"if ( ( m = opmask ( ao -> op , ""sxta"" , B_BIT | H_BIT | SIXTEEN_BIT ) ) )"		2630490	0					
ANR	2652771	Condition	"m = opmask ( ao -> op , ""sxta"" , B_BIT | H_BIT | SIXTEEN_BIT )"	5252:5:111297:111354	2630490	0	True				
ANR	2652772	AssignmentExpression	"m = opmask ( ao -> op , ""sxta"" , B_BIT | H_BIT | SIXTEEN_BIT )"		2630490	0		=			
ANR	2652773	Identifier	m		2630490	0					
ANR	2652774	CallExpression	"opmask ( ao -> op , ""sxta"" , B_BIT | H_BIT | SIXTEEN_BIT )"		2630490	1					
ANR	2652775	Callee	opmask		2630490	0					
ANR	2652776	Identifier	opmask		2630490	0					
ANR	2652777	ArgumentList	ao -> op		2630490	1					
ANR	2652778	Argument	ao -> op		2630490	0					
ANR	2652779	PtrMemberAccess	ao -> op		2630490	0					
ANR	2652780	Identifier	ao		2630490	0					
ANR	2652781	Identifier	op		2630490	1					
ANR	2652782	Argument	"""sxta"""		2630490	1					
ANR	2652783	PrimaryExpression	"""sxta"""		2630490	0					
ANR	2652784	Argument	B_BIT | H_BIT | SIXTEEN_BIT		2630490	2					
ANR	2652785	InclusiveOrExpression	B_BIT | H_BIT | SIXTEEN_BIT		2630490	0		|			
ANR	2652786	Identifier	B_BIT		2630490	0					
ANR	2652787	InclusiveOrExpression	H_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2652788	Identifier	H_BIT		2630490	0					
ANR	2652789	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2652790	CompoundStatement		3961:2:85502:85536	2630490	1					
ANR	2652791	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5253:2:111361:111395	2630490	0	True				
ANR	2652792	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2652793	IdentifierDeclType	ut64		2630490	0					
ANR	2652794	Identifier	argt		2630490	1					
ANR	2652795	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2652796	Identifier	argt		2630490	0					
ANR	2652797	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2652798	Callee	thumb_selector		2630490	0					
ANR	2652799	Identifier	thumb_selector		2630490	0					
ANR	2652800	ArgumentList	ao -> a		2630490	1					
ANR	2652801	Argument	ao -> a		2630490	0					
ANR	2652802	PtrMemberAccess	ao -> a		2630490	0					
ANR	2652803	Identifier	ao		2630490	0					
ANR	2652804	Identifier	a		2630490	1					
ANR	2652805	SwitchStatement	switch ( argt )		2630490	1					
ANR	2652806	Condition	argt	5254:10:111407:111410	2630490	0	True				
ANR	2652807	Identifier	argt		2630490	0					
ANR	2652808	CompoundStatement		3962:16:85554:85554	2630490	1					
ANR	2652809	Label	case THUMB_REG_REG :	5255:2:111417:111435	2630490	0	True				
ANR	2652810	Identifier	THUMB_REG_REG		2630490	0					
ANR	2652811	CompoundStatement		3963:22:85578:85578	2630490	1					
ANR	2652812	ExpressionStatement	std_opt_2 ( ao )	5256:3:111442:111456	2630490	0	True				
ANR	2652813	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2652814	Callee	std_opt_2		2630490	0					
ANR	2652815	Identifier	std_opt_2		2630490	0					
ANR	2652816	ArgumentList	ao		2630490	1					
ANR	2652817	Argument	ao		2630490	0					
ANR	2652818	Identifier	ao		2630490	0					
ANR	2652819	Label	case THUMB_REG_REG_REG :	5259:2:111502:111524	2630490	2	True				
ANR	2652820	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2652821	CompoundStatement		3967:26:85667:85667	2630490	3					
ANR	2652822	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	5260:3:111531:111549	2630490	0	True				
ANR	2652823	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		2630490	0		=			
ANR	2652824	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2652825	PtrMemberAccess	ao -> a		2630490	0					
ANR	2652826	Identifier	ao		2630490	0					
ANR	2652827	Identifier	a		2630490	1					
ANR	2652828	PrimaryExpression	3		2630490	1					
ANR	2652829	PrimaryExpression	"""lsl 0"""		2630490	1					
ANR	2652830	Label	case THUMB_REG_REG_SHIFT :	5263:2:111595:111619	2630490	4	True				
ANR	2652831	Identifier	THUMB_REG_REG_SHIFT		2630490	0					
ANR	2652832	CompoundStatement		3971:28:85762:85762	2630490	5					
ANR	2652833	IfStatement	if ( ao -> a [ 3 ] == NULL )		2630490	0					
ANR	2652834	Condition	ao -> a [ 3 ] == NULL	5264:7:111630:111645	2630490	0	True				
ANR	2652835	EqualityExpression	ao -> a [ 3 ] == NULL		2630490	0		==			
ANR	2652836	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2652837	PtrMemberAccess	ao -> a		2630490	0					
ANR	2652838	Identifier	ao		2630490	0					
ANR	2652839	Identifier	a		2630490	1					
ANR	2652840	PrimaryExpression	3		2630490	1					
ANR	2652841	Identifier	NULL		2630490	1					
ANR	2652842	CompoundStatement		3972:25:85789:85789	2630490	1					
ANR	2652843	ExpressionStatement	std_opt_3 ( ao )	5265:4:111676:111690	2630490	0	True				
ANR	2652844	CallExpression	std_opt_3 ( ao )		2630490	0					
ANR	2652845	Callee	std_opt_3		2630490	0					
ANR	2652846	Identifier	std_opt_3		2630490	0					
ANR	2652847	ArgumentList	ao		2630490	1					
ANR	2652848	Argument	ao		2630490	0					
ANR	2652849	Identifier	ao		2630490	0					
ANR	2652850	Label	case THUMB_REG_REG_REG_SHIFT :	5269:2:111741:111769	2630490	6	True				
ANR	2652851	Identifier	THUMB_REG_REG_REG_SHIFT		2630490	0					
ANR	2652852	CompoundStatement		3984:3:86045:86092	2630490	7					
ANR	2652853	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 3 ] ) ;	5270:3:111776:111814	2630490	0	True				
ANR	2652854	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 3 ] )		2630490	0					
ANR	2652855	IdentifierDeclType	ut32		2630490	0					
ANR	2652856	Identifier	shift		2630490	1					
ANR	2652857	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2652858	Identifier	shift		2630490	0					
ANR	2652859	CallExpression	thumb_getshift ( ao -> a [ 3 ] )		2630490	1					
ANR	2652860	Callee	thumb_getshift		2630490	0					
ANR	2652861	Identifier	thumb_getshift		2630490	0					
ANR	2652862	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2652863	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2652864	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2652865	PtrMemberAccess	ao -> a		2630490	0					
ANR	2652866	Identifier	ao		2630490	0					
ANR	2652867	Identifier	a		2630490	1					
ANR	2652868	PrimaryExpression	3		2630490	1					
ANR	2652869	IfStatement	if ( ( shift != 0 ) && ( ( shift & 0x0000f010 ) != 0x00003000 ) )		2630490	1					
ANR	2652870	Condition	( shift != 0 ) && ( ( shift & 0x0000f010 ) != 0x00003000 )	5272:7:111824:111875	2630490	0	True				
ANR	2652871	AndExpression	( shift != 0 ) && ( ( shift & 0x0000f010 ) != 0x00003000 )		2630490	0		&&			
ANR	2652872	EqualityExpression	shift != 0		2630490	0		!=			
ANR	2652873	Identifier	shift		2630490	0					
ANR	2652874	PrimaryExpression	0		2630490	1					
ANR	2652875	EqualityExpression	( shift & 0x0000f010 ) != 0x00003000		2630490	1		!=			
ANR	2652876	BitAndExpression	shift & 0x0000f010		2630490	0		&			
ANR	2652877	Identifier	shift		2630490	0					
ANR	2652878	PrimaryExpression	0x0000f010		2630490	1					
ANR	2652879	PrimaryExpression	0x00003000		2630490	1					
ANR	2652880	CompoundStatement		3980:61:86019:86019	2630490	1					
ANR	2652881	ReturnStatement	return - 1 ;	5273:4:111884:111893	2630490	0	True				
ANR	2652882	UnaryOperationExpression	- 1		2630490	0					
ANR	2652883	UnaryOperator	-		2630490	0					
ANR	2652884	PrimaryExpression	1		2630490	1					
ANR	2652885	IdentifierDeclStatement	ut64 sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT ) ;	5276:3:111904:111951	2630490	2	True				
ANR	2652886	IdentifierDecl	sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT )		2630490	0					
ANR	2652887	IdentifierDeclType	ut64		2630490	0					
ANR	2652888	Identifier	sufsel		2630490	1					
ANR	2652889	AssignmentExpression	sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT )		2630490	2		=			
ANR	2652890	Identifier	sufsel		2630490	0					
ANR	2652891	BitAndExpression	m & ( B_BIT | H_BIT | SIXTEEN_BIT )		2630490	1		&			
ANR	2652892	Identifier	m		2630490	0					
ANR	2652893	InclusiveOrExpression	B_BIT | H_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2652894	Identifier	B_BIT		2630490	0					
ANR	2652895	InclusiveOrExpression	H_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2652896	Identifier	H_BIT		2630490	0					
ANR	2652897	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2652898	IfStatement	if ( sufsel == B_BIT )		2630490	3					
ANR	2652899	Condition	sufsel == B_BIT	5278:7:111964:111978	2630490	0	True				
ANR	2652900	EqualityExpression	sufsel == B_BIT		2630490	0		==			
ANR	2652901	Identifier	sufsel		2630490	0					
ANR	2652902	Identifier	B_BIT		2630490	1					
ANR	2652903	CompoundStatement		3986:24:86122:86122	2630490	1					
ANR	2652904	ExpressionStatement	ao -> o = 0x40fa80f0	5279:4:111987:112005	2630490	0	True				
ANR	2652905	AssignmentExpression	ao -> o = 0x40fa80f0		2630490	0		=			
ANR	2652906	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652907	Identifier	ao		2630490	0					
ANR	2652908	Identifier	o		2630490	1					
ANR	2652909	PrimaryExpression	0x40fa80f0		2630490	1					
ANR	2652910	ElseStatement	else		2630490	0					
ANR	2652911	IfStatement	if ( sufsel == ( B_BIT | SIXTEEN_BIT ) )		2630490	0					
ANR	2652912	Condition	sufsel == ( B_BIT | SIXTEEN_BIT )	5281:7:112024:112054	2630490	0	True				
ANR	2652913	EqualityExpression	sufsel == ( B_BIT | SIXTEEN_BIT )		2630490	0		==			
ANR	2652914	Identifier	sufsel		2630490	0					
ANR	2652915	InclusiveOrExpression	B_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2652916	Identifier	B_BIT		2630490	0					
ANR	2652917	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2652918	CompoundStatement		3989:40:86198:86198	2630490	1					
ANR	2652919	ExpressionStatement	ao -> o = 0x20fa80f0	5282:4:112063:112081	2630490	0	True				
ANR	2652920	AssignmentExpression	ao -> o = 0x20fa80f0		2630490	0		=			
ANR	2652921	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652922	Identifier	ao		2630490	0					
ANR	2652923	Identifier	o		2630490	1					
ANR	2652924	PrimaryExpression	0x20fa80f0		2630490	1					
ANR	2652925	ElseStatement	else		2630490	0					
ANR	2652926	IfStatement	if ( sufsel == H_BIT )		2630490	0					
ANR	2652927	Condition	sufsel == H_BIT	5284:7:112100:112114	2630490	0	True				
ANR	2652928	EqualityExpression	sufsel == H_BIT		2630490	0		==			
ANR	2652929	Identifier	sufsel		2630490	0					
ANR	2652930	Identifier	H_BIT		2630490	1					
ANR	2652931	CompoundStatement		3992:24:86258:86258	2630490	1					
ANR	2652932	ExpressionStatement	ao -> o = 0x00fa80f0	5285:4:112123:112141	2630490	0	True				
ANR	2652933	AssignmentExpression	ao -> o = 0x00fa80f0		2630490	0		=			
ANR	2652934	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652935	Identifier	ao		2630490	0					
ANR	2652936	Identifier	o		2630490	1					
ANR	2652937	PrimaryExpression	0x00fa80f0		2630490	1					
ANR	2652938	ElseStatement	else		2630490	0					
ANR	2652939	CompoundStatement		3994:10:86294:86294	2630490	0					
ANR	2652940	ReturnStatement	return - 1 ;	5287:4:112159:112168	2630490	0	True				
ANR	2652941	UnaryOperationExpression	- 1		2630490	0					
ANR	2652942	UnaryOperator	-		2630490	0					
ANR	2652943	PrimaryExpression	1		2630490	1					
ANR	2652944	ExpressionStatement	ao -> o |= ( shift & 0x00000060 ) << 7	5290:3:112179:112213	2630490	4	True				
ANR	2652945	AssignmentExpression	ao -> o |= ( shift & 0x00000060 ) << 7		2630490	0		|=			
ANR	2652946	PtrMemberAccess	ao -> o		2630490	0					
ANR	2652947	Identifier	ao		2630490	0					
ANR	2652948	Identifier	o		2630490	1					
ANR	2652949	ShiftExpression	( shift & 0x00000060 ) << 7		2630490	1		<<			
ANR	2652950	BitAndExpression	shift & 0x00000060		2630490	0		&			
ANR	2652951	Identifier	shift		2630490	0					
ANR	2652952	PrimaryExpression	0x00000060		2630490	1					
ANR	2652953	PrimaryExpression	7		2630490	1					
ANR	2652954	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5291:3:112218:112254	2630490	5	True				
ANR	2652955	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2652956	Callee	std_32bit_3reg		2630490	0					
ANR	2652957	Identifier	std_32bit_3reg		2630490	0					
ANR	2652958	ArgumentList	ao		2630490	1					
ANR	2652959	Argument	ao		2630490	0					
ANR	2652960	Identifier	ao		2630490	0					
ANR	2652961	Argument	m		2630490	1					
ANR	2652962	Identifier	m		2630490	0					
ANR	2652963	Argument	false		2630490	2					
ANR	2652964	Identifier	false		2630490	0					
ANR	2652965	BreakStatement	break ;	5293:3:112271:112276	2630490	8	True				
ANR	2652966	ElseStatement	else		2630490	0					
ANR	2652967	IfStatement	"if ( ( m = opmask ( ao -> op , ""sxt"" , B_BIT | H_BIT | SIXTEEN_BIT ) ) )"		2630490	0					
ANR	2652968	Condition	"m = opmask ( ao -> op , ""sxt"" , B_BIT | H_BIT | SIXTEEN_BIT )"	5296:5:112295:112351	2630490	0	True				
ANR	2652969	AssignmentExpression	"m = opmask ( ao -> op , ""sxt"" , B_BIT | H_BIT | SIXTEEN_BIT )"		2630490	0		=			
ANR	2652970	Identifier	m		2630490	0					
ANR	2652971	CallExpression	"opmask ( ao -> op , ""sxt"" , B_BIT | H_BIT | SIXTEEN_BIT )"		2630490	1					
ANR	2652972	Callee	opmask		2630490	0					
ANR	2652973	Identifier	opmask		2630490	0					
ANR	2652974	ArgumentList	ao -> op		2630490	1					
ANR	2652975	Argument	ao -> op		2630490	0					
ANR	2652976	PtrMemberAccess	ao -> op		2630490	0					
ANR	2652977	Identifier	ao		2630490	0					
ANR	2652978	Identifier	op		2630490	1					
ANR	2652979	Argument	"""sxt"""		2630490	1					
ANR	2652980	PrimaryExpression	"""sxt"""		2630490	0					
ANR	2652981	Argument	B_BIT | H_BIT | SIXTEEN_BIT		2630490	2					
ANR	2652982	InclusiveOrExpression	B_BIT | H_BIT | SIXTEEN_BIT		2630490	0		|			
ANR	2652983	Identifier	B_BIT		2630490	0					
ANR	2652984	InclusiveOrExpression	H_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2652985	Identifier	H_BIT		2630490	0					
ANR	2652986	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2652987	CompoundStatement		4006:2:86550:86584	2630490	1					
ANR	2652988	IdentifierDeclStatement	ut64 sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT ) ;	5297:2:112358:112405	2630490	0	True				
ANR	2652989	IdentifierDecl	sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT )		2630490	0					
ANR	2652990	IdentifierDeclType	ut64		2630490	0					
ANR	2652991	Identifier	sufsel		2630490	1					
ANR	2652992	AssignmentExpression	sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT )		2630490	2		=			
ANR	2652993	Identifier	sufsel		2630490	0					
ANR	2652994	BitAndExpression	m & ( B_BIT | H_BIT | SIXTEEN_BIT )		2630490	1		&			
ANR	2652995	Identifier	m		2630490	0					
ANR	2652996	InclusiveOrExpression	B_BIT | H_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2652997	Identifier	B_BIT		2630490	0					
ANR	2652998	InclusiveOrExpression	H_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2652999	Identifier	H_BIT		2630490	0					
ANR	2653000	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2653001	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5298:2:112409:112443	2630490	1	True				
ANR	2653002	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2653003	IdentifierDeclType	ut64		2630490	0					
ANR	2653004	Identifier	argt		2630490	1					
ANR	2653005	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2653006	Identifier	argt		2630490	0					
ANR	2653007	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2653008	Callee	thumb_selector		2630490	0					
ANR	2653009	Identifier	thumb_selector		2630490	0					
ANR	2653010	ArgumentList	ao -> a		2630490	1					
ANR	2653011	Argument	ao -> a		2630490	0					
ANR	2653012	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653013	Identifier	ao		2630490	0					
ANR	2653014	Identifier	a		2630490	1					
ANR	2653015	SwitchStatement	switch ( argt )		2630490	2					
ANR	2653016	Condition	argt	5299:10:112455:112458	2630490	0	True				
ANR	2653017	Identifier	argt		2630490	0					
ANR	2653018	CompoundStatement		4007:16:86602:86602	2630490	1					
ANR	2653019	Label	case THUMB_REG_REG :	5300:2:112465:112483	2630490	0	True				
ANR	2653020	Identifier	THUMB_REG_REG		2630490	0					
ANR	2653021	CompoundStatement		4008:22:86626:86626	2630490	1					
ANR	2653022	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 0"""	5301:3:112490:112508	2630490	0	True				
ANR	2653023	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 0"""		2630490	0		=			
ANR	2653024	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2653025	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653026	Identifier	ao		2630490	0					
ANR	2653027	Identifier	a		2630490	1					
ANR	2653028	PrimaryExpression	2		2630490	1					
ANR	2653029	PrimaryExpression	"""lsl 0"""		2630490	1					
ANR	2653030	Label	case THUMB_REG_REG_SHIFT :	5304:2:112554:112578	2630490	2	True				
ANR	2653031	Identifier	THUMB_REG_REG_SHIFT		2630490	0					
ANR	2653032	CompoundStatement		4015:3:86792:86830	2630490	3					
ANR	2653033	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5305:3:112585:112613	2630490	0	True				
ANR	2653034	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2653035	IdentifierDeclType	ut8		2630490	0					
ANR	2653036	Identifier	reg1		2630490	1					
ANR	2653037	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2653038	Identifier	reg1		2630490	0					
ANR	2653039	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2653040	Callee	getreg		2630490	0					
ANR	2653041	Identifier	getreg		2630490	0					
ANR	2653042	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2653043	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2653044	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2653045	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653046	Identifier	ao		2630490	0					
ANR	2653047	Identifier	a		2630490	1					
ANR	2653048	PrimaryExpression	0		2630490	1					
ANR	2653049	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5306:3:112618:112646	2630490	1	True				
ANR	2653050	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2653051	IdentifierDeclType	ut8		2630490	0					
ANR	2653052	Identifier	reg2		2630490	1					
ANR	2653053	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2653054	Identifier	reg2		2630490	0					
ANR	2653055	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2653056	Callee	getreg		2630490	0					
ANR	2653057	Identifier	getreg		2630490	0					
ANR	2653058	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2653059	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2653060	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2653061	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653062	Identifier	ao		2630490	0					
ANR	2653063	Identifier	a		2630490	1					
ANR	2653064	PrimaryExpression	1		2630490	1					
ANR	2653065	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 2 ] ) ;	5307:3:112651:112689	2630490	2	True				
ANR	2653066	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 2 ] )		2630490	0					
ANR	2653067	IdentifierDeclType	ut32		2630490	0					
ANR	2653068	Identifier	shift		2630490	1					
ANR	2653069	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2653070	Identifier	shift		2630490	0					
ANR	2653071	CallExpression	thumb_getshift ( ao -> a [ 2 ] )		2630490	1					
ANR	2653072	Callee	thumb_getshift		2630490	0					
ANR	2653073	Identifier	thumb_getshift		2630490	0					
ANR	2653074	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2653075	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2653076	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2653077	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653078	Identifier	ao		2630490	0					
ANR	2653079	Identifier	a		2630490	1					
ANR	2653080	PrimaryExpression	2		2630490	1					
ANR	2653081	IfStatement	if ( ( reg1 > 15 ) && ( reg2 > 15 ) && ( shift != 0 ) && ( ( shift & 0x0000f010 ) != 0x00003000 ) )		2630490	3					
ANR	2653082	Condition	( reg1 > 15 ) && ( reg2 > 15 ) && ( shift != 0 ) && ( ( shift & 0x0000f010 ) != 0x00003000 )	5309:7:112699:112780	2630490	0	True				
ANR	2653083	AndExpression	( reg1 > 15 ) && ( reg2 > 15 ) && ( shift != 0 ) && ( ( shift & 0x0000f010 ) != 0x00003000 )		2630490	0		&&			
ANR	2653084	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2653085	Identifier	reg1		2630490	0					
ANR	2653086	PrimaryExpression	15		2630490	1					
ANR	2653087	AndExpression	( reg2 > 15 ) && ( shift != 0 ) && ( ( shift & 0x0000f010 ) != 0x00003000 )		2630490	1		&&			
ANR	2653088	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2653089	Identifier	reg2		2630490	0					
ANR	2653090	PrimaryExpression	15		2630490	1					
ANR	2653091	AndExpression	( shift != 0 ) && ( ( shift & 0x0000f010 ) != 0x00003000 )		2630490	1		&&			
ANR	2653092	EqualityExpression	shift != 0		2630490	0		!=			
ANR	2653093	Identifier	shift		2630490	0					
ANR	2653094	PrimaryExpression	0		2630490	1					
ANR	2653095	EqualityExpression	( shift & 0x0000f010 ) != 0x00003000		2630490	1		!=			
ANR	2653096	BitAndExpression	shift & 0x0000f010		2630490	0		&			
ANR	2653097	Identifier	shift		2630490	0					
ANR	2653098	PrimaryExpression	0x0000f010		2630490	1					
ANR	2653099	PrimaryExpression	0x00003000		2630490	1					
ANR	2653100	CompoundStatement		4017:91:86924:86924	2630490	1					
ANR	2653101	ReturnStatement	return - 1 ;	5310:4:112789:112798	2630490	0	True				
ANR	2653102	UnaryOperationExpression	- 1		2630490	0					
ANR	2653103	UnaryOperator	-		2630490	0					
ANR	2653104	PrimaryExpression	1		2630490	1					
ANR	2653105	IfStatement	if ( sufsel == B_BIT )		2630490	4					
ANR	2653106	Condition	sufsel == B_BIT	5313:7:112813:112827	2630490	0	True				
ANR	2653107	EqualityExpression	sufsel == B_BIT		2630490	0		==			
ANR	2653108	Identifier	sufsel		2630490	0					
ANR	2653109	Identifier	B_BIT		2630490	1					
ANR	2653110	CompoundStatement		4021:24:86971:86971	2630490	1					
ANR	2653111	ExpressionStatement	ao -> o = 0x40b2	5314:4:112836:112850	2630490	0	True				
ANR	2653112	AssignmentExpression	ao -> o = 0x40b2		2630490	0		=			
ANR	2653113	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653114	Identifier	ao		2630490	0					
ANR	2653115	Identifier	o		2630490	1					
ANR	2653116	PrimaryExpression	0x40b2		2630490	1					
ANR	2653117	IfStatement	"if ( ( shift == 0 ) && std_16bit_2reg ( ao , m ) )"		2630490	1					
ANR	2653118	Condition	"( shift == 0 ) && std_16bit_2reg ( ao , m )"	5315:8:112860:112897	2630490	0	True				
ANR	2653119	AndExpression	"( shift == 0 ) && std_16bit_2reg ( ao , m )"		2630490	0		&&			
ANR	2653120	EqualityExpression	shift == 0		2630490	0		==			
ANR	2653121	Identifier	shift		2630490	0					
ANR	2653122	PrimaryExpression	0		2630490	1					
ANR	2653123	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	1					
ANR	2653124	Callee	std_16bit_2reg		2630490	0					
ANR	2653125	Identifier	std_16bit_2reg		2630490	0					
ANR	2653126	ArgumentList	ao		2630490	1					
ANR	2653127	Argument	ao		2630490	0					
ANR	2653128	Identifier	ao		2630490	0					
ANR	2653129	Argument	m		2630490	1					
ANR	2653130	Identifier	m		2630490	0					
ANR	2653131	CompoundStatement		4023:48:87041:87041	2630490	1					
ANR	2653132	ReturnStatement	return 2 ;	5316:5:112907:112915	2630490	0	True				
ANR	2653133	PrimaryExpression	2		2630490	0					
ANR	2653134	ExpressionStatement	ao -> o = 0x4ffa80f0	5318:4:112927:112945	2630490	2	True				
ANR	2653135	AssignmentExpression	ao -> o = 0x4ffa80f0		2630490	0		=			
ANR	2653136	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653137	Identifier	ao		2630490	0					
ANR	2653138	Identifier	o		2630490	1					
ANR	2653139	PrimaryExpression	0x4ffa80f0		2630490	1					
ANR	2653140	ElseStatement	else		2630490	0					
ANR	2653141	IfStatement	if ( sufsel == ( B_BIT | SIXTEEN_BIT ) )		2630490	0					
ANR	2653142	Condition	sufsel == ( B_BIT | SIXTEEN_BIT )	5320:7:112964:112994	2630490	0	True				
ANR	2653143	EqualityExpression	sufsel == ( B_BIT | SIXTEEN_BIT )		2630490	0		==			
ANR	2653144	Identifier	sufsel		2630490	0					
ANR	2653145	InclusiveOrExpression	B_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2653146	Identifier	B_BIT		2630490	0					
ANR	2653147	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2653148	CompoundStatement		4028:40:87138:87138	2630490	1					
ANR	2653149	ExpressionStatement	ao -> o = 0x2ffa80f0	5321:4:113003:113021	2630490	0	True				
ANR	2653150	AssignmentExpression	ao -> o = 0x2ffa80f0		2630490	0		=			
ANR	2653151	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653152	Identifier	ao		2630490	0					
ANR	2653153	Identifier	o		2630490	1					
ANR	2653154	PrimaryExpression	0x2ffa80f0		2630490	1					
ANR	2653155	ElseStatement	else		2630490	0					
ANR	2653156	IfStatement	if ( sufsel == H_BIT )		2630490	0					
ANR	2653157	Condition	sufsel == H_BIT	5323:7:113040:113054	2630490	0	True				
ANR	2653158	EqualityExpression	sufsel == H_BIT		2630490	0		==			
ANR	2653159	Identifier	sufsel		2630490	0					
ANR	2653160	Identifier	H_BIT		2630490	1					
ANR	2653161	CompoundStatement		4031:24:87198:87198	2630490	1					
ANR	2653162	ExpressionStatement	ao -> o = 0x00b2	5324:4:113063:113077	2630490	0	True				
ANR	2653163	AssignmentExpression	ao -> o = 0x00b2		2630490	0		=			
ANR	2653164	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653165	Identifier	ao		2630490	0					
ANR	2653166	Identifier	o		2630490	1					
ANR	2653167	PrimaryExpression	0x00b2		2630490	1					
ANR	2653168	IfStatement	"if ( ( shift == 0 ) && std_16bit_2reg ( ao , m ) )"		2630490	1					
ANR	2653169	Condition	"( shift == 0 ) && std_16bit_2reg ( ao , m )"	5325:8:113087:113124	2630490	0	True				
ANR	2653170	AndExpression	"( shift == 0 ) && std_16bit_2reg ( ao , m )"		2630490	0		&&			
ANR	2653171	EqualityExpression	shift == 0		2630490	0		==			
ANR	2653172	Identifier	shift		2630490	0					
ANR	2653173	PrimaryExpression	0		2630490	1					
ANR	2653174	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	1					
ANR	2653175	Callee	std_16bit_2reg		2630490	0					
ANR	2653176	Identifier	std_16bit_2reg		2630490	0					
ANR	2653177	ArgumentList	ao		2630490	1					
ANR	2653178	Argument	ao		2630490	0					
ANR	2653179	Identifier	ao		2630490	0					
ANR	2653180	Argument	m		2630490	1					
ANR	2653181	Identifier	m		2630490	0					
ANR	2653182	CompoundStatement		4033:48:87268:87268	2630490	1					
ANR	2653183	ReturnStatement	return 2 ;	5326:5:113134:113142	2630490	0	True				
ANR	2653184	PrimaryExpression	2		2630490	0					
ANR	2653185	ExpressionStatement	ao -> o = 0x0ffa80f0	5328:4:113154:113172	2630490	2	True				
ANR	2653186	AssignmentExpression	ao -> o = 0x0ffa80f0		2630490	0		=			
ANR	2653187	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653188	Identifier	ao		2630490	0					
ANR	2653189	Identifier	o		2630490	1					
ANR	2653190	PrimaryExpression	0x0ffa80f0		2630490	1					
ANR	2653191	ElseStatement	else		2630490	0					
ANR	2653192	CompoundStatement		4037:10:87325:87325	2630490	0					
ANR	2653193	ReturnStatement	return - 1 ;	5330:4:113190:113199	2630490	0	True				
ANR	2653194	UnaryOperationExpression	- 1		2630490	0					
ANR	2653195	UnaryOperator	-		2630490	0					
ANR	2653196	PrimaryExpression	1		2630490	1					
ANR	2653197	ExpressionStatement	ao -> o |= ( shift & 0x00000060 ) << 7	5333:3:113210:113244	2630490	5	True				
ANR	2653198	AssignmentExpression	ao -> o |= ( shift & 0x00000060 ) << 7		2630490	0		|=			
ANR	2653199	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653200	Identifier	ao		2630490	0					
ANR	2653201	Identifier	o		2630490	1					
ANR	2653202	ShiftExpression	( shift & 0x00000060 ) << 7		2630490	1		<<			
ANR	2653203	BitAndExpression	shift & 0x00000060		2630490	0		&			
ANR	2653204	Identifier	shift		2630490	0					
ANR	2653205	PrimaryExpression	0x00000060		2630490	1					
ANR	2653206	PrimaryExpression	7		2630490	1					
ANR	2653207	ExpressionStatement	ao -> o |= reg1	5334:3:113249:113262	2630490	6	True				
ANR	2653208	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2653209	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653210	Identifier	ao		2630490	0					
ANR	2653211	Identifier	o		2630490	1					
ANR	2653212	Identifier	reg1		2630490	1					
ANR	2653213	ExpressionStatement	ao -> o |= reg2 << 8	5335:3:113267:113285	2630490	7	True				
ANR	2653214	AssignmentExpression	ao -> o |= reg2 << 8		2630490	0		|=			
ANR	2653215	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653216	Identifier	ao		2630490	0					
ANR	2653217	Identifier	o		2630490	1					
ANR	2653218	ShiftExpression	reg2 << 8		2630490	1		<<			
ANR	2653219	Identifier	reg2		2630490	0					
ANR	2653220	PrimaryExpression	8		2630490	1					
ANR	2653221	ReturnStatement	return 4 ;	5336:3:113290:113298	2630490	8	True				
ANR	2653222	PrimaryExpression	4		2630490	0					
ANR	2653223	BreakStatement	break ;	5338:3:113315:113320	2630490	4	True				
ANR	2653224	ElseStatement	else		2630490	0					
ANR	2653225	IfStatement	"if ( ( m = opmask ( ao -> op , ""tb"" , B_BIT | H_BIT ) ) )"		2630490	0					
ANR	2653226	Condition	"m = opmask ( ao -> op , ""tb"" , B_BIT | H_BIT )"	5341:5:113339:113380	2630490	0	True				
ANR	2653227	AssignmentExpression	"m = opmask ( ao -> op , ""tb"" , B_BIT | H_BIT )"		2630490	0		=			
ANR	2653228	Identifier	m		2630490	0					
ANR	2653229	CallExpression	"opmask ( ao -> op , ""tb"" , B_BIT | H_BIT )"		2630490	1					
ANR	2653230	Callee	opmask		2630490	0					
ANR	2653231	Identifier	opmask		2630490	0					
ANR	2653232	ArgumentList	ao -> op		2630490	1					
ANR	2653233	Argument	ao -> op		2630490	0					
ANR	2653234	PtrMemberAccess	ao -> op		2630490	0					
ANR	2653235	Identifier	ao		2630490	0					
ANR	2653236	Identifier	op		2630490	1					
ANR	2653237	Argument	"""tb"""		2630490	1					
ANR	2653238	PrimaryExpression	"""tb"""		2630490	0					
ANR	2653239	Argument	B_BIT | H_BIT		2630490	2					
ANR	2653240	InclusiveOrExpression	B_BIT | H_BIT		2630490	0		|			
ANR	2653241	Identifier	B_BIT		2630490	0					
ANR	2653242	Identifier	H_BIT		2630490	1					
ANR	2653243	CompoundStatement		4051:2:87566:87599	2630490	1					
ANR	2653244	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5342:2:113387:113421	2630490	0	True				
ANR	2653245	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2653246	IdentifierDeclType	ut64		2630490	0					
ANR	2653247	Identifier	argt		2630490	1					
ANR	2653248	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2653249	Identifier	argt		2630490	0					
ANR	2653250	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2653251	Callee	thumb_selector		2630490	0					
ANR	2653252	Identifier	thumb_selector		2630490	0					
ANR	2653253	ArgumentList	ao -> a		2630490	1					
ANR	2653254	Argument	ao -> a		2630490	0					
ANR	2653255	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653256	Identifier	ao		2630490	0					
ANR	2653257	Identifier	a		2630490	1					
ANR	2653258	IdentifierDeclStatement	ut64 sufsel = m & ( B_BIT | H_BIT ) ;	5343:2:113425:113458	2630490	1	True				
ANR	2653259	IdentifierDecl	sufsel = m & ( B_BIT | H_BIT )		2630490	0					
ANR	2653260	IdentifierDeclType	ut64		2630490	0					
ANR	2653261	Identifier	sufsel		2630490	1					
ANR	2653262	AssignmentExpression	sufsel = m & ( B_BIT | H_BIT )		2630490	2		=			
ANR	2653263	Identifier	sufsel		2630490	0					
ANR	2653264	BitAndExpression	m & ( B_BIT | H_BIT )		2630490	1		&			
ANR	2653265	Identifier	m		2630490	0					
ANR	2653266	InclusiveOrExpression	B_BIT | H_BIT		2630490	1		|			
ANR	2653267	Identifier	B_BIT		2630490	0					
ANR	2653268	Identifier	H_BIT		2630490	1					
ANR	2653269	SwitchStatement	switch ( argt )		2630490	2					
ANR	2653270	Condition	argt	5344:10:113470:113473	2630490	0	True				
ANR	2653271	Identifier	argt		2630490	0					
ANR	2653272	CompoundStatement		4052:16:87617:87617	2630490	1					
ANR	2653273	Label	case THUMB_BRACKREG_REGBRACK :	5345:2:113480:113508	2630490	0	True				
ANR	2653274	Identifier	THUMB_BRACKREG_REGBRACK		2630490	0					
ANR	2653275	CompoundStatement		4055:3:87697:87731	2630490	1					
ANR	2653276	IdentifierDeclStatement	ut8 reg1 = getregmemstart ( ao -> a [ 0 ] ) ;	5346:3:113515:113551	2630490	0	True				
ANR	2653277	IdentifierDecl	reg1 = getregmemstart ( ao -> a [ 0 ] )		2630490	0					
ANR	2653278	IdentifierDeclType	ut8		2630490	0					
ANR	2653279	Identifier	reg1		2630490	1					
ANR	2653280	AssignmentExpression	reg1 = getregmemstart ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2653281	Identifier	reg1		2630490	0					
ANR	2653282	CallExpression	getregmemstart ( ao -> a [ 0 ] )		2630490	1					
ANR	2653283	Callee	getregmemstart		2630490	0					
ANR	2653284	Identifier	getregmemstart		2630490	0					
ANR	2653285	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2653286	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2653287	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2653288	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653289	Identifier	ao		2630490	0					
ANR	2653290	Identifier	a		2630490	1					
ANR	2653291	PrimaryExpression	0		2630490	1					
ANR	2653292	IdentifierDeclStatement	ut8 reg2 = getregmemend ( ao -> a [ 1 ] ) ;	5347:3:113556:113590	2630490	1	True				
ANR	2653293	IdentifierDecl	reg2 = getregmemend ( ao -> a [ 1 ] )		2630490	0					
ANR	2653294	IdentifierDeclType	ut8		2630490	0					
ANR	2653295	Identifier	reg2		2630490	1					
ANR	2653296	AssignmentExpression	reg2 = getregmemend ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2653297	Identifier	reg2		2630490	0					
ANR	2653298	CallExpression	getregmemend ( ao -> a [ 1 ] )		2630490	1					
ANR	2653299	Callee	getregmemend		2630490	0					
ANR	2653300	Identifier	getregmemend		2630490	0					
ANR	2653301	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2653302	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2653303	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2653304	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653305	Identifier	ao		2630490	0					
ANR	2653306	Identifier	a		2630490	1					
ANR	2653307	PrimaryExpression	1		2630490	1					
ANR	2653308	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) )		2630490	2					
ANR	2653309	Condition	( reg1 > 15 ) || ( reg2 > 15 )	5349:7:113600:113625	2630490	0	True				
ANR	2653310	OrExpression	( reg1 > 15 ) || ( reg2 > 15 )		2630490	0		||			
ANR	2653311	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2653312	Identifier	reg1		2630490	0					
ANR	2653313	PrimaryExpression	15		2630490	1					
ANR	2653314	RelationalExpression	reg2 > 15		2630490	1		>			
ANR	2653315	Identifier	reg2		2630490	0					
ANR	2653316	PrimaryExpression	15		2630490	1					
ANR	2653317	CompoundStatement		4057:35:87769:87769	2630490	1					
ANR	2653318	ReturnStatement	return - 1 ;	5350:4:113634:113643	2630490	0	True				
ANR	2653319	UnaryOperationExpression	- 1		2630490	0					
ANR	2653320	UnaryOperator	-		2630490	0					
ANR	2653321	PrimaryExpression	1		2630490	1					
ANR	2653322	IfStatement	if ( sufsel == B_BIT )		2630490	3					
ANR	2653323	Condition	sufsel == B_BIT	5353:7:113658:113672	2630490	0	True				
ANR	2653324	EqualityExpression	sufsel == B_BIT		2630490	0		==			
ANR	2653325	Identifier	sufsel		2630490	0					
ANR	2653326	Identifier	B_BIT		2630490	1					
ANR	2653327	CompoundStatement		4061:24:87816:87816	2630490	1					
ANR	2653328	ExpressionStatement	ao -> o = 0xd0e800f0	5354:4:113681:113699	2630490	0	True				
ANR	2653329	AssignmentExpression	ao -> o = 0xd0e800f0		2630490	0		=			
ANR	2653330	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653331	Identifier	ao		2630490	0					
ANR	2653332	Identifier	o		2630490	1					
ANR	2653333	PrimaryExpression	0xd0e800f0		2630490	1					
ANR	2653334	ExpressionStatement	ao -> o |= reg1 << 24	5355:4:113705:113724	2630490	1	True				
ANR	2653335	AssignmentExpression	ao -> o |= reg1 << 24		2630490	0		|=			
ANR	2653336	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653337	Identifier	ao		2630490	0					
ANR	2653338	Identifier	o		2630490	1					
ANR	2653339	ShiftExpression	reg1 << 24		2630490	1		<<			
ANR	2653340	Identifier	reg1		2630490	0					
ANR	2653341	PrimaryExpression	24		2630490	1					
ANR	2653342	ExpressionStatement	ao -> o |= reg2 << 8	5356:4:113730:113748	2630490	2	True				
ANR	2653343	AssignmentExpression	ao -> o |= reg2 << 8		2630490	0		|=			
ANR	2653344	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653345	Identifier	ao		2630490	0					
ANR	2653346	Identifier	o		2630490	1					
ANR	2653347	ShiftExpression	reg2 << 8		2630490	1		<<			
ANR	2653348	Identifier	reg2		2630490	0					
ANR	2653349	PrimaryExpression	8		2630490	1					
ANR	2653350	ReturnStatement	return 4 ;	5357:4:113754:113762	2630490	3	True				
ANR	2653351	PrimaryExpression	4		2630490	0					
ANR	2653352	ExpressionStatement	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'	5359:3:113772:113810	2630490	4	True				
ANR	2653353	AssignmentExpression	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ] = '\\0'		2630490	0		=			
ANR	2653354	ArrayIndexing	ao -> a [ 1 ] [ strlen ( ao -> a [ 1 ] ) - 1 ]		2630490	0					
ANR	2653355	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2653356	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653357	Identifier	ao		2630490	0					
ANR	2653358	Identifier	a		2630490	1					
ANR	2653359	PrimaryExpression	1		2630490	1					
ANR	2653360	AdditiveExpression	strlen ( ao -> a [ 1 ] ) - 1		2630490	1		-			
ANR	2653361	CallExpression	strlen ( ao -> a [ 1 ] )		2630490	0					
ANR	2653362	Callee	strlen		2630490	0					
ANR	2653363	Identifier	strlen		2630490	0					
ANR	2653364	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2653365	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2653366	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2653367	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653368	Identifier	ao		2630490	0					
ANR	2653369	Identifier	a		2630490	1					
ANR	2653370	PrimaryExpression	1		2630490	1					
ANR	2653371	PrimaryExpression	1		2630490	1					
ANR	2653372	PrimaryExpression	'\\0'		2630490	1					
ANR	2653373	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 1]"""	5360:3:113815:113834	2630490	5	True				
ANR	2653374	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 1]"""		2630490	0		=			
ANR	2653375	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2653376	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653377	Identifier	ao		2630490	0					
ANR	2653378	Identifier	a		2630490	1					
ANR	2653379	PrimaryExpression	2		2630490	1					
ANR	2653380	PrimaryExpression	"""lsl 1]"""		2630490	1					
ANR	2653381	Label	case THUMB_BRACKREG_REG_SHIFTBRACK :	5363:2:113880:113914	2630490	2	True				
ANR	2653382	Identifier	THUMB_BRACKREG_REG_SHIFTBRACK		2630490	0					
ANR	2653383	CompoundStatement		4074:3:88136:88174	2630490	3					
ANR	2653384	IdentifierDeclStatement	ut8 reg1 = getregmemstart ( ao -> a [ 0 ] ) ;	5364:3:113921:113957	2630490	0	True				
ANR	2653385	IdentifierDecl	reg1 = getregmemstart ( ao -> a [ 0 ] )		2630490	0					
ANR	2653386	IdentifierDeclType	ut8		2630490	0					
ANR	2653387	Identifier	reg1		2630490	1					
ANR	2653388	AssignmentExpression	reg1 = getregmemstart ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2653389	Identifier	reg1		2630490	0					
ANR	2653390	CallExpression	getregmemstart ( ao -> a [ 0 ] )		2630490	1					
ANR	2653391	Callee	getregmemstart		2630490	0					
ANR	2653392	Identifier	getregmemstart		2630490	0					
ANR	2653393	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2653394	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2653395	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2653396	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653397	Identifier	ao		2630490	0					
ANR	2653398	Identifier	a		2630490	1					
ANR	2653399	PrimaryExpression	0		2630490	1					
ANR	2653400	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5365:3:113962:113990	2630490	1	True				
ANR	2653401	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2653402	IdentifierDeclType	ut8		2630490	0					
ANR	2653403	Identifier	reg2		2630490	1					
ANR	2653404	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2653405	Identifier	reg2		2630490	0					
ANR	2653406	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2653407	Callee	getreg		2630490	0					
ANR	2653408	Identifier	getreg		2630490	0					
ANR	2653409	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2653410	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2653411	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2653412	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653413	Identifier	ao		2630490	0					
ANR	2653414	Identifier	a		2630490	1					
ANR	2653415	PrimaryExpression	1		2630490	1					
ANR	2653416	IdentifierDeclStatement	ut32 shift = getshiftmemend ( ao -> a [ 2 ] ) ;	5366:3:113995:114033	2630490	2	True				
ANR	2653417	IdentifierDecl	shift = getshiftmemend ( ao -> a [ 2 ] )		2630490	0					
ANR	2653418	IdentifierDeclType	ut32		2630490	0					
ANR	2653419	Identifier	shift		2630490	1					
ANR	2653420	AssignmentExpression	shift = getshiftmemend ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2653421	Identifier	shift		2630490	0					
ANR	2653422	CallExpression	getshiftmemend ( ao -> a [ 2 ] )		2630490	1					
ANR	2653423	Callee	getshiftmemend		2630490	0					
ANR	2653424	Identifier	getshiftmemend		2630490	0					
ANR	2653425	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2653426	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2653427	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2653428	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653429	Identifier	ao		2630490	0					
ANR	2653430	Identifier	a		2630490	1					
ANR	2653431	PrimaryExpression	2		2630490	1					
ANR	2653432	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( shift != 0x00004000 ) || ( sufsel != H_BIT ) )		2630490	3					
ANR	2653433	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( shift != 0x00004000 ) || ( sufsel != H_BIT )	5368:7:114046:114117	2630490	0	True				
ANR	2653434	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( shift != 0x00004000 ) || ( sufsel != H_BIT )		2630490	0		||			
ANR	2653435	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2653436	Identifier	reg1		2630490	0					
ANR	2653437	PrimaryExpression	15		2630490	1					
ANR	2653438	OrExpression	( reg2 > 15 ) || ( shift != 0x00004000 ) || ( sufsel != H_BIT )		2630490	1		||			
ANR	2653439	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2653440	Identifier	reg2		2630490	0					
ANR	2653441	PrimaryExpression	15		2630490	1					
ANR	2653442	OrExpression	( shift != 0x00004000 ) || ( sufsel != H_BIT )		2630490	1		||			
ANR	2653443	EqualityExpression	shift != 0x00004000		2630490	0		!=			
ANR	2653444	Identifier	shift		2630490	0					
ANR	2653445	PrimaryExpression	0x00004000		2630490	1					
ANR	2653446	EqualityExpression	sufsel != H_BIT		2630490	1		!=			
ANR	2653447	Identifier	sufsel		2630490	0					
ANR	2653448	Identifier	H_BIT		2630490	1					
ANR	2653449	CompoundStatement		4076:81:88261:88261	2630490	1					
ANR	2653450	ReturnStatement	return - 1 ;	5369:4:114126:114135	2630490	0	True				
ANR	2653451	UnaryOperationExpression	- 1		2630490	0					
ANR	2653452	UnaryOperator	-		2630490	0					
ANR	2653453	PrimaryExpression	1		2630490	1					
ANR	2653454	ExpressionStatement	ao -> o = 0xd0e810f0	5372:3:114146:114164	2630490	4	True				
ANR	2653455	AssignmentExpression	ao -> o = 0xd0e810f0		2630490	0		=			
ANR	2653456	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653457	Identifier	ao		2630490	0					
ANR	2653458	Identifier	o		2630490	1					
ANR	2653459	PrimaryExpression	0xd0e810f0		2630490	1					
ANR	2653460	ExpressionStatement	ao -> o |= reg1 << 24	5373:3:114169:114188	2630490	5	True				
ANR	2653461	AssignmentExpression	ao -> o |= reg1 << 24		2630490	0		|=			
ANR	2653462	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653463	Identifier	ao		2630490	0					
ANR	2653464	Identifier	o		2630490	1					
ANR	2653465	ShiftExpression	reg1 << 24		2630490	1		<<			
ANR	2653466	Identifier	reg1		2630490	0					
ANR	2653467	PrimaryExpression	24		2630490	1					
ANR	2653468	ExpressionStatement	ao -> o |= reg2 << 8	5374:3:114193:114211	2630490	6	True				
ANR	2653469	AssignmentExpression	ao -> o |= reg2 << 8		2630490	0		|=			
ANR	2653470	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653471	Identifier	ao		2630490	0					
ANR	2653472	Identifier	o		2630490	1					
ANR	2653473	ShiftExpression	reg2 << 8		2630490	1		<<			
ANR	2653474	Identifier	reg2		2630490	0					
ANR	2653475	PrimaryExpression	8		2630490	1					
ANR	2653476	ReturnStatement	return 4 ;	5375:3:114216:114224	2630490	7	True				
ANR	2653477	PrimaryExpression	4		2630490	0					
ANR	2653478	BreakStatement	break ;	5377:3:114241:114246	2630490	4	True				
ANR	2653479	Label	default :	5378:2:114250:114257	2630490	5	True				
ANR	2653480	Identifier	default		2630490	0					
ANR	2653481	ReturnStatement	return - 1 ;	5379:3:114262:114271	2630490	6	True				
ANR	2653482	UnaryOperationExpression	- 1		2630490	0					
ANR	2653483	UnaryOperator	-		2630490	0					
ANR	2653484	PrimaryExpression	1		2630490	1					
ANR	2653485	ElseStatement	else		2630490	0					
ANR	2653486	IfStatement	"if ( ( m = opmask ( ao -> op , ""teq"" , 0 ) ) )"		2630490	0					
ANR	2653487	Condition	"m = opmask ( ao -> op , ""teq"" , 0 )"	5382:5:114290:114320	2630490	0	True				
ANR	2653488	AssignmentExpression	"m = opmask ( ao -> op , ""teq"" , 0 )"		2630490	0		=			
ANR	2653489	Identifier	m		2630490	0					
ANR	2653490	CallExpression	"opmask ( ao -> op , ""teq"" , 0 )"		2630490	1					
ANR	2653491	Callee	opmask		2630490	0					
ANR	2653492	Identifier	opmask		2630490	0					
ANR	2653493	ArgumentList	ao -> op		2630490	1					
ANR	2653494	Argument	ao -> op		2630490	0					
ANR	2653495	PtrMemberAccess	ao -> op		2630490	0					
ANR	2653496	Identifier	ao		2630490	0					
ANR	2653497	Identifier	op		2630490	1					
ANR	2653498	Argument	"""teq"""		2630490	1					
ANR	2653499	PrimaryExpression	"""teq"""		2630490	0					
ANR	2653500	Argument	0		2630490	2					
ANR	2653501	PrimaryExpression	0		2630490	0					
ANR	2653502	CompoundStatement		4091:2:88468:88502	2630490	1					
ANR	2653503	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5383:2:114327:114361	2630490	0	True				
ANR	2653504	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2653505	IdentifierDeclType	ut64		2630490	0					
ANR	2653506	Identifier	argt		2630490	1					
ANR	2653507	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2653508	Identifier	argt		2630490	0					
ANR	2653509	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2653510	Callee	thumb_selector		2630490	0					
ANR	2653511	Identifier	thumb_selector		2630490	0					
ANR	2653512	ArgumentList	ao -> a		2630490	1					
ANR	2653513	Argument	ao -> a		2630490	0					
ANR	2653514	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653515	Identifier	ao		2630490	0					
ANR	2653516	Identifier	a		2630490	1					
ANR	2653517	SwitchStatement	switch ( argt )		2630490	1					
ANR	2653518	Condition	argt	5384:10:114373:114376	2630490	0	True				
ANR	2653519	Identifier	argt		2630490	0					
ANR	2653520	CompoundStatement		4092:16:88520:88520	2630490	1					
ANR	2653521	Label	case THUMB_REG_CONST :	5385:2:114383:114403	2630490	0	True				
ANR	2653522	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2653523	CompoundStatement		4096:3:88599:88633	2630490	1					
ANR	2653524	IdentifierDeclStatement	ut8 reg = getreg ( ao -> a [ 0 ] ) ;	5386:3:114410:114437	2630490	0	True				
ANR	2653525	IdentifierDecl	reg = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2653526	IdentifierDeclType	ut8		2630490	0					
ANR	2653527	Identifier	reg		2630490	1					
ANR	2653528	AssignmentExpression	reg = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2653529	Identifier	reg		2630490	0					
ANR	2653530	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2653531	Callee	getreg		2630490	0					
ANR	2653532	Identifier	getreg		2630490	0					
ANR	2653533	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2653534	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2653535	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2653536	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653537	Identifier	ao		2630490	0					
ANR	2653538	Identifier	a		2630490	1					
ANR	2653539	PrimaryExpression	0		2630490	1					
ANR	2653540	ExpressionStatement	err = false	5387:3:114442:114453	2630490	1	True				
ANR	2653541	AssignmentExpression	err = false		2630490	0		=			
ANR	2653542	Identifier	err		2630490	0					
ANR	2653543	Identifier	false		2630490	1					
ANR	2653544	IdentifierDeclStatement	ut32 num = getthimmed12 ( ao -> a [ 1 ] ) ;	5388:3:114458:114492	2630490	2	True				
ANR	2653545	IdentifierDecl	num = getthimmed12 ( ao -> a [ 1 ] )		2630490	0					
ANR	2653546	IdentifierDeclType	ut32		2630490	0					
ANR	2653547	Identifier	num		2630490	1					
ANR	2653548	AssignmentExpression	num = getthimmed12 ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2653549	Identifier	num		2630490	0					
ANR	2653550	CallExpression	getthimmed12 ( ao -> a [ 1 ] )		2630490	1					
ANR	2653551	Callee	getthimmed12		2630490	0					
ANR	2653552	Identifier	getthimmed12		2630490	0					
ANR	2653553	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2653554	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2653555	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2653556	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653557	Identifier	ao		2630490	0					
ANR	2653558	Identifier	a		2630490	1					
ANR	2653559	PrimaryExpression	1		2630490	1					
ANR	2653560	IfStatement	if ( err || ( reg > 15 ) )		2630490	3					
ANR	2653561	Condition	err || ( reg > 15 )	5390:7:114502:114518	2630490	0	True				
ANR	2653562	OrExpression	err || ( reg > 15 )		2630490	0		||			
ANR	2653563	Identifier	err		2630490	0					
ANR	2653564	RelationalExpression	reg > 15		2630490	1		>			
ANR	2653565	Identifier	reg		2630490	0					
ANR	2653566	PrimaryExpression	15		2630490	1					
ANR	2653567	CompoundStatement		4098:26:88662:88662	2630490	1					
ANR	2653568	ReturnStatement	return - 1 ;	5391:4:114527:114536	2630490	0	True				
ANR	2653569	UnaryOperationExpression	- 1		2630490	0					
ANR	2653570	UnaryOperator	-		2630490	0					
ANR	2653571	PrimaryExpression	1		2630490	1					
ANR	2653572	ExpressionStatement	ao -> o = 0x90f0000f	5394:3:114547:114565	2630490	4	True				
ANR	2653573	AssignmentExpression	ao -> o = 0x90f0000f		2630490	0		=			
ANR	2653574	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653575	Identifier	ao		2630490	0					
ANR	2653576	Identifier	o		2630490	1					
ANR	2653577	PrimaryExpression	0x90f0000f		2630490	1					
ANR	2653578	ExpressionStatement	ao -> o |= reg << 24	5395:3:114570:114588	2630490	5	True				
ANR	2653579	AssignmentExpression	ao -> o |= reg << 24		2630490	0		|=			
ANR	2653580	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653581	Identifier	ao		2630490	0					
ANR	2653582	Identifier	o		2630490	1					
ANR	2653583	ShiftExpression	reg << 24		2630490	1		<<			
ANR	2653584	Identifier	reg		2630490	0					
ANR	2653585	PrimaryExpression	24		2630490	1					
ANR	2653586	ExpressionStatement	ao -> o |= num	5396:3:114593:114605	2630490	6	True				
ANR	2653587	AssignmentExpression	ao -> o |= num		2630490	0		|=			
ANR	2653588	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653589	Identifier	ao		2630490	0					
ANR	2653590	Identifier	o		2630490	1					
ANR	2653591	Identifier	num		2630490	1					
ANR	2653592	ReturnStatement	return 4 ;	5397:3:114610:114618	2630490	7	True				
ANR	2653593	PrimaryExpression	4		2630490	0					
ANR	2653594	BreakStatement	break ;	5399:3:114635:114640	2630490	2	True				
ANR	2653595	Label	case THUMB_REG_REG :	5400:2:114644:114662	2630490	3	True				
ANR	2653596	Identifier	THUMB_REG_REG		2630490	0					
ANR	2653597	CompoundStatement		4108:22:88805:88805	2630490	4					
ANR	2653598	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 0"""	5401:3:114669:114687	2630490	0	True				
ANR	2653599	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 0"""		2630490	0		=			
ANR	2653600	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2653601	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653602	Identifier	ao		2630490	0					
ANR	2653603	Identifier	a		2630490	1					
ANR	2653604	PrimaryExpression	2		2630490	1					
ANR	2653605	PrimaryExpression	"""lsl 0"""		2630490	1					
ANR	2653606	Label	case THUMB_REG_REG_SHIFT :	5404:2:114733:114757	2630490	5	True				
ANR	2653607	Identifier	THUMB_REG_REG_SHIFT		2630490	0					
ANR	2653608	CompoundStatement		4112:28:88900:88900	2630490	6					
ANR	2653609	ExpressionStatement	ao -> o = 0x90ea000f	5405:3:114764:114782	2630490	0	True				
ANR	2653610	AssignmentExpression	ao -> o = 0x90ea000f		2630490	0		=			
ANR	2653611	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653612	Identifier	ao		2630490	0					
ANR	2653613	Identifier	o		2630490	1					
ANR	2653614	PrimaryExpression	0x90ea000f		2630490	1					
ANR	2653615	ReturnStatement	"return std_32bit_2reg ( ao , m , true ) ;"	5406:3:114787:114822	2630490	1	True				
ANR	2653616	CallExpression	"std_32bit_2reg ( ao , m , true )"		2630490	0					
ANR	2653617	Callee	std_32bit_2reg		2630490	0					
ANR	2653618	Identifier	std_32bit_2reg		2630490	0					
ANR	2653619	ArgumentList	ao		2630490	1					
ANR	2653620	Argument	ao		2630490	0					
ANR	2653621	Identifier	ao		2630490	0					
ANR	2653622	Argument	m		2630490	1					
ANR	2653623	Identifier	m		2630490	0					
ANR	2653624	Argument	true		2630490	2					
ANR	2653625	Identifier	true		2630490	0					
ANR	2653626	BreakStatement	break ;	5408:3:114839:114844	2630490	7	True				
ANR	2653627	Label	default :	5409:2:114848:114855	2630490	8	True				
ANR	2653628	Identifier	default		2630490	0					
ANR	2653629	ReturnStatement	return - 1 ;	5410:3:114860:114869	2630490	9	True				
ANR	2653630	UnaryOperationExpression	- 1		2630490	0					
ANR	2653631	UnaryOperator	-		2630490	0					
ANR	2653632	PrimaryExpression	1		2630490	1					
ANR	2653633	ElseStatement	else		2630490	0					
ANR	2653634	IfStatement	"if ( ( m = opmask ( ao -> op , ""tst"" , 0 ) ) )"		2630490	0					
ANR	2653635	Condition	"m = opmask ( ao -> op , ""tst"" , 0 )"	5413:5:114888:114918	2630490	0	True				
ANR	2653636	AssignmentExpression	"m = opmask ( ao -> op , ""tst"" , 0 )"		2630490	0		=			
ANR	2653637	Identifier	m		2630490	0					
ANR	2653638	CallExpression	"opmask ( ao -> op , ""tst"" , 0 )"		2630490	1					
ANR	2653639	Callee	opmask		2630490	0					
ANR	2653640	Identifier	opmask		2630490	0					
ANR	2653641	ArgumentList	ao -> op		2630490	1					
ANR	2653642	Argument	ao -> op		2630490	0					
ANR	2653643	PtrMemberAccess	ao -> op		2630490	0					
ANR	2653644	Identifier	ao		2630490	0					
ANR	2653645	Identifier	op		2630490	1					
ANR	2653646	Argument	"""tst"""		2630490	1					
ANR	2653647	PrimaryExpression	"""tst"""		2630490	0					
ANR	2653648	Argument	0		2630490	2					
ANR	2653649	PrimaryExpression	0		2630490	0					
ANR	2653650	CompoundStatement		4122:2:89066:89100	2630490	1					
ANR	2653651	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5414:2:114925:114959	2630490	0	True				
ANR	2653652	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2653653	IdentifierDeclType	ut64		2630490	0					
ANR	2653654	Identifier	argt		2630490	1					
ANR	2653655	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2653656	Identifier	argt		2630490	0					
ANR	2653657	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2653658	Callee	thumb_selector		2630490	0					
ANR	2653659	Identifier	thumb_selector		2630490	0					
ANR	2653660	ArgumentList	ao -> a		2630490	1					
ANR	2653661	Argument	ao -> a		2630490	0					
ANR	2653662	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653663	Identifier	ao		2630490	0					
ANR	2653664	Identifier	a		2630490	1					
ANR	2653665	SwitchStatement	switch ( argt )		2630490	1					
ANR	2653666	Condition	argt	5415:10:114971:114974	2630490	0	True				
ANR	2653667	Identifier	argt		2630490	0					
ANR	2653668	CompoundStatement		4123:16:89118:89118	2630490	1					
ANR	2653669	Label	case THUMB_REG_CONST :	5416:2:114981:115001	2630490	0	True				
ANR	2653670	Identifier	THUMB_REG_CONST		2630490	0					
ANR	2653671	CompoundStatement		4127:3:89198:89232	2630490	1					
ANR	2653672	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5417:3:115008:115036	2630490	0	True				
ANR	2653673	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2653674	IdentifierDeclType	ut8		2630490	0					
ANR	2653675	Identifier	reg1		2630490	1					
ANR	2653676	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2653677	Identifier	reg1		2630490	0					
ANR	2653678	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2653679	Callee	getreg		2630490	0					
ANR	2653680	Identifier	getreg		2630490	0					
ANR	2653681	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2653682	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2653683	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2653684	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653685	Identifier	ao		2630490	0					
ANR	2653686	Identifier	a		2630490	1					
ANR	2653687	PrimaryExpression	0		2630490	1					
ANR	2653688	ExpressionStatement	err = false	5418:3:115041:115052	2630490	1	True				
ANR	2653689	AssignmentExpression	err = false		2630490	0		=			
ANR	2653690	Identifier	err		2630490	0					
ANR	2653691	Identifier	false		2630490	1					
ANR	2653692	IdentifierDeclStatement	ut32 num = getthimmed12 ( ao -> a [ 1 ] ) ;	5419:3:115057:115091	2630490	2	True				
ANR	2653693	IdentifierDecl	num = getthimmed12 ( ao -> a [ 1 ] )		2630490	0					
ANR	2653694	IdentifierDeclType	ut32		2630490	0					
ANR	2653695	Identifier	num		2630490	1					
ANR	2653696	AssignmentExpression	num = getthimmed12 ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2653697	Identifier	num		2630490	0					
ANR	2653698	CallExpression	getthimmed12 ( ao -> a [ 1 ] )		2630490	1					
ANR	2653699	Callee	getthimmed12		2630490	0					
ANR	2653700	Identifier	getthimmed12		2630490	0					
ANR	2653701	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2653702	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2653703	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2653704	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653705	Identifier	ao		2630490	0					
ANR	2653706	Identifier	a		2630490	1					
ANR	2653707	PrimaryExpression	1		2630490	1					
ANR	2653708	IfStatement	if ( err || ( reg1 > 15 ) )		2630490	3					
ANR	2653709	Condition	err || ( reg1 > 15 )	5421:7:115101:115118	2630490	0	True				
ANR	2653710	OrExpression	err || ( reg1 > 15 )		2630490	0		||			
ANR	2653711	Identifier	err		2630490	0					
ANR	2653712	RelationalExpression	reg1 > 15		2630490	1		>			
ANR	2653713	Identifier	reg1		2630490	0					
ANR	2653714	PrimaryExpression	15		2630490	1					
ANR	2653715	CompoundStatement		4129:27:89262:89262	2630490	1					
ANR	2653716	ReturnStatement	return - 1 ;	5422:4:115127:115136	2630490	0	True				
ANR	2653717	UnaryOperationExpression	- 1		2630490	0					
ANR	2653718	UnaryOperator	-		2630490	0					
ANR	2653719	PrimaryExpression	1		2630490	1					
ANR	2653720	ExpressionStatement	ao -> o = 0x10f0000f	5425:3:115147:115165	2630490	4	True				
ANR	2653721	AssignmentExpression	ao -> o = 0x10f0000f		2630490	0		=			
ANR	2653722	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653723	Identifier	ao		2630490	0					
ANR	2653724	Identifier	o		2630490	1					
ANR	2653725	PrimaryExpression	0x10f0000f		2630490	1					
ANR	2653726	ExpressionStatement	ao -> o |= reg1 << 24	5426:3:115170:115189	2630490	5	True				
ANR	2653727	AssignmentExpression	ao -> o |= reg1 << 24		2630490	0		|=			
ANR	2653728	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653729	Identifier	ao		2630490	0					
ANR	2653730	Identifier	o		2630490	1					
ANR	2653731	ShiftExpression	reg1 << 24		2630490	1		<<			
ANR	2653732	Identifier	reg1		2630490	0					
ANR	2653733	PrimaryExpression	24		2630490	1					
ANR	2653734	ExpressionStatement	ao -> o |= num	5427:3:115194:115206	2630490	6	True				
ANR	2653735	AssignmentExpression	ao -> o |= num		2630490	0		|=			
ANR	2653736	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653737	Identifier	ao		2630490	0					
ANR	2653738	Identifier	o		2630490	1					
ANR	2653739	Identifier	num		2630490	1					
ANR	2653740	ReturnStatement	return 4 ;	5428:3:115211:115219	2630490	7	True				
ANR	2653741	PrimaryExpression	4		2630490	0					
ANR	2653742	BreakStatement	break ;	5430:3:115236:115241	2630490	2	True				
ANR	2653743	Label	case THUMB_REG_REG :	5431:2:115245:115263	2630490	3	True				
ANR	2653744	Identifier	THUMB_REG_REG		2630490	0					
ANR	2653745	CompoundStatement		4139:22:89406:89406	2630490	4					
ANR	2653746	ExpressionStatement	ao -> o = 0x0042	5432:3:115270:115284	2630490	0	True				
ANR	2653747	AssignmentExpression	ao -> o = 0x0042		2630490	0		=			
ANR	2653748	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653749	Identifier	ao		2630490	0					
ANR	2653750	Identifier	o		2630490	1					
ANR	2653751	PrimaryExpression	0x0042		2630490	1					
ANR	2653752	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	1					
ANR	2653753	Condition	"std_16bit_2reg ( ao , m )"	5434:7:115297:115318	2630490	0	True				
ANR	2653754	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2653755	Callee	std_16bit_2reg		2630490	0					
ANR	2653756	Identifier	std_16bit_2reg		2630490	0					
ANR	2653757	ArgumentList	ao		2630490	1					
ANR	2653758	Argument	ao		2630490	0					
ANR	2653759	Identifier	ao		2630490	0					
ANR	2653760	Argument	m		2630490	1					
ANR	2653761	Identifier	m		2630490	0					
ANR	2653762	CompoundStatement		4142:31:89462:89462	2630490	1					
ANR	2653763	ReturnStatement	return 2 ;	5435:4:115327:115335	2630490	0	True				
ANR	2653764	PrimaryExpression	2		2630490	0					
ANR	2653765	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 0"""	5438:3:115346:115364	2630490	2	True				
ANR	2653766	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 0"""		2630490	0		=			
ANR	2653767	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2653768	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653769	Identifier	ao		2630490	0					
ANR	2653770	Identifier	a		2630490	1					
ANR	2653771	PrimaryExpression	2		2630490	1					
ANR	2653772	PrimaryExpression	"""lsl 0"""		2630490	1					
ANR	2653773	Label	case THUMB_REG_REG_SHIFT :	5441:2:115410:115434	2630490	5	True				
ANR	2653774	Identifier	THUMB_REG_REG_SHIFT		2630490	0					
ANR	2653775	CompoundStatement		4149:28:89577:89577	2630490	6					
ANR	2653776	ExpressionStatement	ao -> o = 0x10ea000f	5442:3:115441:115459	2630490	0	True				
ANR	2653777	AssignmentExpression	ao -> o = 0x10ea000f		2630490	0		=			
ANR	2653778	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653779	Identifier	ao		2630490	0					
ANR	2653780	Identifier	o		2630490	1					
ANR	2653781	PrimaryExpression	0x10ea000f		2630490	1					
ANR	2653782	ReturnStatement	"return std_32bit_2reg ( ao , m , true ) ;"	5443:3:115464:115499	2630490	1	True				
ANR	2653783	CallExpression	"std_32bit_2reg ( ao , m , true )"		2630490	0					
ANR	2653784	Callee	std_32bit_2reg		2630490	0					
ANR	2653785	Identifier	std_32bit_2reg		2630490	0					
ANR	2653786	ArgumentList	ao		2630490	1					
ANR	2653787	Argument	ao		2630490	0					
ANR	2653788	Identifier	ao		2630490	0					
ANR	2653789	Argument	m		2630490	1					
ANR	2653790	Identifier	m		2630490	0					
ANR	2653791	Argument	true		2630490	2					
ANR	2653792	Identifier	true		2630490	0					
ANR	2653793	BreakStatement	break ;	5445:3:115516:115521	2630490	7	True				
ANR	2653794	Label	default :	5446:2:115525:115532	2630490	8	True				
ANR	2653795	Identifier	default		2630490	0					
ANR	2653796	ReturnStatement	return - 1 ;	5447:3:115537:115546	2630490	9	True				
ANR	2653797	UnaryOperationExpression	- 1		2630490	0					
ANR	2653798	UnaryOperator	-		2630490	0					
ANR	2653799	PrimaryExpression	1		2630490	1					
ANR	2653800	ElseStatement	else		2630490	0					
ANR	2653801	IfStatement	"if ( ( m = opmask ( ao -> op , ""uadd"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		2630490	0					
ANR	2653802	Condition	"m = opmask ( ao -> op , ""uadd"" , EIGHT_BIT | SIXTEEN_BIT )"	5450:5:115565:115618	2630490	0	True				
ANR	2653803	AssignmentExpression	"m = opmask ( ao -> op , ""uadd"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	0		=			
ANR	2653804	Identifier	m		2630490	0					
ANR	2653805	CallExpression	"opmask ( ao -> op , ""uadd"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	1					
ANR	2653806	Callee	opmask		2630490	0					
ANR	2653807	Identifier	opmask		2630490	0					
ANR	2653808	ArgumentList	ao -> op		2630490	1					
ANR	2653809	Argument	ao -> op		2630490	0					
ANR	2653810	PtrMemberAccess	ao -> op		2630490	0					
ANR	2653811	Identifier	ao		2630490	0					
ANR	2653812	Identifier	op		2630490	1					
ANR	2653813	Argument	"""uadd"""		2630490	1					
ANR	2653814	PrimaryExpression	"""uadd"""		2630490	0					
ANR	2653815	Argument	EIGHT_BIT | SIXTEEN_BIT		2630490	2					
ANR	2653816	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		2630490	0		|			
ANR	2653817	Identifier	EIGHT_BIT		2630490	0					
ANR	2653818	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2653819	CompoundStatement		4159:2:89766:89800	2630490	1					
ANR	2653820	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5451:2:115625:115659	2630490	0	True				
ANR	2653821	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2653822	IdentifierDeclType	ut64		2630490	0					
ANR	2653823	Identifier	argt		2630490	1					
ANR	2653824	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2653825	Identifier	argt		2630490	0					
ANR	2653826	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2653827	Callee	thumb_selector		2630490	0					
ANR	2653828	Identifier	thumb_selector		2630490	0					
ANR	2653829	ArgumentList	ao -> a		2630490	1					
ANR	2653830	Argument	ao -> a		2630490	0					
ANR	2653831	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653832	Identifier	ao		2630490	0					
ANR	2653833	Identifier	a		2630490	1					
ANR	2653834	SwitchStatement	switch ( argt )		2630490	1					
ANR	2653835	Condition	argt	5452:10:115671:115674	2630490	0	True				
ANR	2653836	Identifier	argt		2630490	0					
ANR	2653837	CompoundStatement		4160:16:89818:89818	2630490	1					
ANR	2653838	Label	case THUMB_REG_REG :	5453:2:115681:115699	2630490	0	True				
ANR	2653839	Identifier	THUMB_REG_REG		2630490	0					
ANR	2653840	CompoundStatement		4161:22:89842:89842	2630490	1					
ANR	2653841	ExpressionStatement	std_opt_2 ( ao )	5454:3:115706:115720	2630490	0	True				
ANR	2653842	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2653843	Callee	std_opt_2		2630490	0					
ANR	2653844	Identifier	std_opt_2		2630490	0					
ANR	2653845	ArgumentList	ao		2630490	1					
ANR	2653846	Argument	ao		2630490	0					
ANR	2653847	Identifier	ao		2630490	0					
ANR	2653848	Label	case THUMB_REG_REG_REG :	5457:2:115766:115788	2630490	2	True				
ANR	2653849	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2653850	CompoundStatement		4165:26:89931:89931	2630490	3					
ANR	2653851	IfStatement	if ( m & EIGHT_BIT )		2630490	0					
ANR	2653852	Condition	m & EIGHT_BIT	5458:7:115799:115811	2630490	0	True				
ANR	2653853	BitAndExpression	m & EIGHT_BIT		2630490	0		&			
ANR	2653854	Identifier	m		2630490	0					
ANR	2653855	Identifier	EIGHT_BIT		2630490	1					
ANR	2653856	CompoundStatement		4166:22:89955:89955	2630490	1					
ANR	2653857	ExpressionStatement	ao -> o = 0x80fa40f0	5459:4:115820:115838	2630490	0	True				
ANR	2653858	AssignmentExpression	ao -> o = 0x80fa40f0		2630490	0		=			
ANR	2653859	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653860	Identifier	ao		2630490	0					
ANR	2653861	Identifier	o		2630490	1					
ANR	2653862	PrimaryExpression	0x80fa40f0		2630490	1					
ANR	2653863	ElseStatement	else		2630490	0					
ANR	2653864	IfStatement	if ( m & SIXTEEN_BIT )		2630490	0					
ANR	2653865	Condition	m & SIXTEEN_BIT	5461:7:115857:115871	2630490	0	True				
ANR	2653866	BitAndExpression	m & SIXTEEN_BIT		2630490	0		&			
ANR	2653867	Identifier	m		2630490	0					
ANR	2653868	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2653869	CompoundStatement		4169:24:90015:90015	2630490	1					
ANR	2653870	ExpressionStatement	ao -> o = 0x90fa40f0	5462:4:115880:115898	2630490	0	True				
ANR	2653871	AssignmentExpression	ao -> o = 0x90fa40f0		2630490	0		=			
ANR	2653872	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653873	Identifier	ao		2630490	0					
ANR	2653874	Identifier	o		2630490	1					
ANR	2653875	PrimaryExpression	0x90fa40f0		2630490	1					
ANR	2653876	ElseStatement	else		2630490	0					
ANR	2653877	CompoundStatement		4171:10:90051:90051	2630490	0					
ANR	2653878	ReturnStatement	return - 1 ;	5464:4:115916:115925	2630490	0	True				
ANR	2653879	UnaryOperationExpression	- 1		2630490	0					
ANR	2653880	UnaryOperator	-		2630490	0					
ANR	2653881	PrimaryExpression	1		2630490	1					
ANR	2653882	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5467:3:115936:115972	2630490	1	True				
ANR	2653883	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2653884	Callee	std_32bit_3reg		2630490	0					
ANR	2653885	Identifier	std_32bit_3reg		2630490	0					
ANR	2653886	ArgumentList	ao		2630490	1					
ANR	2653887	Argument	ao		2630490	0					
ANR	2653888	Identifier	ao		2630490	0					
ANR	2653889	Argument	m		2630490	1					
ANR	2653890	Identifier	m		2630490	0					
ANR	2653891	Argument	false		2630490	2					
ANR	2653892	Identifier	false		2630490	0					
ANR	2653893	BreakStatement	break ;	5469:3:115989:115994	2630490	4	True				
ANR	2653894	Label	default :	5470:2:115998:116005	2630490	5	True				
ANR	2653895	Identifier	default		2630490	0					
ANR	2653896	ReturnStatement	return - 1 ;	5471:3:116010:116019	2630490	6	True				
ANR	2653897	UnaryOperationExpression	- 1		2630490	0					
ANR	2653898	UnaryOperator	-		2630490	0					
ANR	2653899	PrimaryExpression	1		2630490	1					
ANR	2653900	ElseStatement	else		2630490	0					
ANR	2653901	IfStatement	"if ( ( m = opmask ( ao -> op , ""uasx"" , 0 ) ) )"		2630490	0					
ANR	2653902	Condition	"m = opmask ( ao -> op , ""uasx"" , 0 )"	5474:5:116038:116069	2630490	0	True				
ANR	2653903	AssignmentExpression	"m = opmask ( ao -> op , ""uasx"" , 0 )"		2630490	0		=			
ANR	2653904	Identifier	m		2630490	0					
ANR	2653905	CallExpression	"opmask ( ao -> op , ""uasx"" , 0 )"		2630490	1					
ANR	2653906	Callee	opmask		2630490	0					
ANR	2653907	Identifier	opmask		2630490	0					
ANR	2653908	ArgumentList	ao -> op		2630490	1					
ANR	2653909	Argument	ao -> op		2630490	0					
ANR	2653910	PtrMemberAccess	ao -> op		2630490	0					
ANR	2653911	Identifier	ao		2630490	0					
ANR	2653912	Identifier	op		2630490	1					
ANR	2653913	Argument	"""uasx"""		2630490	1					
ANR	2653914	PrimaryExpression	"""uasx"""		2630490	0					
ANR	2653915	Argument	0		2630490	2					
ANR	2653916	PrimaryExpression	0		2630490	0					
ANR	2653917	CompoundStatement		4183:2:90217:90251	2630490	1					
ANR	2653918	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5475:2:116076:116110	2630490	0	True				
ANR	2653919	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2653920	IdentifierDeclType	ut64		2630490	0					
ANR	2653921	Identifier	argt		2630490	1					
ANR	2653922	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2653923	Identifier	argt		2630490	0					
ANR	2653924	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2653925	Callee	thumb_selector		2630490	0					
ANR	2653926	Identifier	thumb_selector		2630490	0					
ANR	2653927	ArgumentList	ao -> a		2630490	1					
ANR	2653928	Argument	ao -> a		2630490	0					
ANR	2653929	PtrMemberAccess	ao -> a		2630490	0					
ANR	2653930	Identifier	ao		2630490	0					
ANR	2653931	Identifier	a		2630490	1					
ANR	2653932	SwitchStatement	switch ( argt )		2630490	1					
ANR	2653933	Condition	argt	5476:10:116122:116125	2630490	0	True				
ANR	2653934	Identifier	argt		2630490	0					
ANR	2653935	CompoundStatement		4184:16:90269:90269	2630490	1					
ANR	2653936	Label	case THUMB_REG_REG :	5477:2:116132:116150	2630490	0	True				
ANR	2653937	Identifier	THUMB_REG_REG		2630490	0					
ANR	2653938	CompoundStatement		4185:22:90293:90293	2630490	1					
ANR	2653939	ExpressionStatement	std_opt_2 ( ao )	5478:3:116157:116171	2630490	0	True				
ANR	2653940	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2653941	Callee	std_opt_2		2630490	0					
ANR	2653942	Identifier	std_opt_2		2630490	0					
ANR	2653943	ArgumentList	ao		2630490	1					
ANR	2653944	Argument	ao		2630490	0					
ANR	2653945	Identifier	ao		2630490	0					
ANR	2653946	Label	case THUMB_REG_REG_REG :	5481:2:116217:116239	2630490	2	True				
ANR	2653947	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2653948	CompoundStatement		4189:26:90382:90382	2630490	3					
ANR	2653949	ExpressionStatement	ao -> o = 0xa0fa40f0	5482:3:116246:116264	2630490	0	True				
ANR	2653950	AssignmentExpression	ao -> o = 0xa0fa40f0		2630490	0		=			
ANR	2653951	PtrMemberAccess	ao -> o		2630490	0					
ANR	2653952	Identifier	ao		2630490	0					
ANR	2653953	Identifier	o		2630490	1					
ANR	2653954	PrimaryExpression	0xa0fa40f0		2630490	1					
ANR	2653955	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5483:3:116269:116305	2630490	1	True				
ANR	2653956	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2653957	Callee	std_32bit_3reg		2630490	0					
ANR	2653958	Identifier	std_32bit_3reg		2630490	0					
ANR	2653959	ArgumentList	ao		2630490	1					
ANR	2653960	Argument	ao		2630490	0					
ANR	2653961	Identifier	ao		2630490	0					
ANR	2653962	Argument	m		2630490	1					
ANR	2653963	Identifier	m		2630490	0					
ANR	2653964	Argument	false		2630490	2					
ANR	2653965	Identifier	false		2630490	0					
ANR	2653966	BreakStatement	break ;	5485:3:116322:116327	2630490	4	True				
ANR	2653967	Label	default :	5486:2:116331:116338	2630490	5	True				
ANR	2653968	Identifier	default		2630490	0					
ANR	2653969	ReturnStatement	return - 1 ;	5487:3:116343:116352	2630490	6	True				
ANR	2653970	UnaryOperationExpression	- 1		2630490	0					
ANR	2653971	UnaryOperator	-		2630490	0					
ANR	2653972	PrimaryExpression	1		2630490	1					
ANR	2653973	ElseStatement	else		2630490	0					
ANR	2653974	IfStatement	"if ( ( m = opmask ( ao -> op , ""ubfx"" , 0 ) ) )"		2630490	0					
ANR	2653975	Condition	"m = opmask ( ao -> op , ""ubfx"" , 0 )"	5490:5:116371:116402	2630490	0	True				
ANR	2653976	AssignmentExpression	"m = opmask ( ao -> op , ""ubfx"" , 0 )"		2630490	0		=			
ANR	2653977	Identifier	m		2630490	0					
ANR	2653978	CallExpression	"opmask ( ao -> op , ""ubfx"" , 0 )"		2630490	1					
ANR	2653979	Callee	opmask		2630490	0					
ANR	2653980	Identifier	opmask		2630490	0					
ANR	2653981	ArgumentList	ao -> op		2630490	1					
ANR	2653982	Argument	ao -> op		2630490	0					
ANR	2653983	PtrMemberAccess	ao -> op		2630490	0					
ANR	2653984	Identifier	ao		2630490	0					
ANR	2653985	Identifier	op		2630490	1					
ANR	2653986	Argument	"""ubfx"""		2630490	1					
ANR	2653987	PrimaryExpression	"""ubfx"""		2630490	0					
ANR	2653988	Argument	0		2630490	2					
ANR	2653989	PrimaryExpression	0		2630490	0					
ANR	2653990	CompoundStatement		4199:2:90550:90584	2630490	1					
ANR	2653991	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5491:2:116409:116443	2630490	0	True				
ANR	2653992	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2653993	IdentifierDeclType	ut64		2630490	0					
ANR	2653994	Identifier	argt		2630490	1					
ANR	2653995	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2653996	Identifier	argt		2630490	0					
ANR	2653997	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2653998	Callee	thumb_selector		2630490	0					
ANR	2653999	Identifier	thumb_selector		2630490	0					
ANR	2654000	ArgumentList	ao -> a		2630490	1					
ANR	2654001	Argument	ao -> a		2630490	0					
ANR	2654002	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654003	Identifier	ao		2630490	0					
ANR	2654004	Identifier	a		2630490	1					
ANR	2654005	SwitchStatement	switch ( argt )		2630490	1					
ANR	2654006	Condition	argt	5492:10:116455:116458	2630490	0	True				
ANR	2654007	Identifier	argt		2630490	0					
ANR	2654008	CompoundStatement		4200:16:90602:90602	2630490	1					
ANR	2654009	Label	case THUMB_REG_REG_CONST_CONST :	5493:2:116465:116495	2630490	0	True				
ANR	2654010	Identifier	THUMB_REG_REG_CONST_CONST		2630490	0					
ANR	2654011	CompoundStatement		4205:3:90742:90778	2630490	1					
ANR	2654012	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5494:3:116502:116530	2630490	0	True				
ANR	2654013	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2654014	IdentifierDeclType	ut8		2630490	0					
ANR	2654015	Identifier	reg1		2630490	1					
ANR	2654016	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2654017	Identifier	reg1		2630490	0					
ANR	2654018	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2654019	Callee	getreg		2630490	0					
ANR	2654020	Identifier	getreg		2630490	0					
ANR	2654021	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2654022	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2654023	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2654024	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654025	Identifier	ao		2630490	0					
ANR	2654026	Identifier	a		2630490	1					
ANR	2654027	PrimaryExpression	0		2630490	1					
ANR	2654028	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5495:3:116535:116563	2630490	1	True				
ANR	2654029	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2654030	IdentifierDeclType	ut8		2630490	0					
ANR	2654031	Identifier	reg2		2630490	1					
ANR	2654032	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2654033	Identifier	reg2		2630490	0					
ANR	2654034	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2654035	Callee	getreg		2630490	0					
ANR	2654036	Identifier	getreg		2630490	0					
ANR	2654037	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2654038	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2654039	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2654040	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654041	Identifier	ao		2630490	0					
ANR	2654042	Identifier	a		2630490	1					
ANR	2654043	PrimaryExpression	1		2630490	1					
ANR	2654044	IdentifierDeclStatement	ut32 lsb = getnum ( ao -> a [ 2 ] ) ;	5496:3:116568:116596	2630490	2	True				
ANR	2654045	IdentifierDecl	lsb = getnum ( ao -> a [ 2 ] )		2630490	0					
ANR	2654046	IdentifierDeclType	ut32		2630490	0					
ANR	2654047	Identifier	lsb		2630490	1					
ANR	2654048	AssignmentExpression	lsb = getnum ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2654049	Identifier	lsb		2630490	0					
ANR	2654050	CallExpression	getnum ( ao -> a [ 2 ] )		2630490	1					
ANR	2654051	Callee	getnum		2630490	0					
ANR	2654052	Identifier	getnum		2630490	0					
ANR	2654053	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2654054	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2654055	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2654056	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654057	Identifier	ao		2630490	0					
ANR	2654058	Identifier	a		2630490	1					
ANR	2654059	PrimaryExpression	2		2630490	1					
ANR	2654060	IdentifierDeclStatement	ut32 widthm1 = getnum ( ao -> a [ 3 ] ) - 1 ;	5497:3:116601:116637	2630490	3	True				
ANR	2654061	IdentifierDecl	widthm1 = getnum ( ao -> a [ 3 ] ) - 1		2630490	0					
ANR	2654062	IdentifierDeclType	ut32		2630490	0					
ANR	2654063	Identifier	widthm1		2630490	1					
ANR	2654064	AssignmentExpression	widthm1 = getnum ( ao -> a [ 3 ] ) - 1		2630490	2		=			
ANR	2654065	Identifier	widthm1		2630490	0					
ANR	2654066	AdditiveExpression	getnum ( ao -> a [ 3 ] ) - 1		2630490	1		-			
ANR	2654067	CallExpression	getnum ( ao -> a [ 3 ] )		2630490	0					
ANR	2654068	Callee	getnum		2630490	0					
ANR	2654069	Identifier	getnum		2630490	0					
ANR	2654070	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2654071	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2654072	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2654073	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654074	Identifier	ao		2630490	0					
ANR	2654075	Identifier	a		2630490	1					
ANR	2654076	PrimaryExpression	3		2630490	1					
ANR	2654077	PrimaryExpression	1		2630490	1					
ANR	2654078	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( lsb > 31 ) || ( ( 31 - lsb ) <= widthm1 ) )		2630490	4					
ANR	2654079	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( lsb > 31 ) || ( ( 31 - lsb ) <= widthm1 )	5499:7:116650:116716	2630490	0	True				
ANR	2654080	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( lsb > 31 ) || ( ( 31 - lsb ) <= widthm1 )		2630490	0		||			
ANR	2654081	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2654082	Identifier	reg1		2630490	0					
ANR	2654083	PrimaryExpression	15		2630490	1					
ANR	2654084	OrExpression	( reg2 > 15 ) || ( lsb > 31 ) || ( ( 31 - lsb ) <= widthm1 )		2630490	1		||			
ANR	2654085	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2654086	Identifier	reg2		2630490	0					
ANR	2654087	PrimaryExpression	15		2630490	1					
ANR	2654088	OrExpression	( lsb > 31 ) || ( ( 31 - lsb ) <= widthm1 )		2630490	1		||			
ANR	2654089	RelationalExpression	lsb > 31		2630490	0		>			
ANR	2654090	Identifier	lsb		2630490	0					
ANR	2654091	PrimaryExpression	31		2630490	1					
ANR	2654092	RelationalExpression	( 31 - lsb ) <= widthm1		2630490	1		<=			
ANR	2654093	AdditiveExpression	31 - lsb		2630490	0		-			
ANR	2654094	PrimaryExpression	31		2630490	0					
ANR	2654095	Identifier	lsb		2630490	1					
ANR	2654096	Identifier	widthm1		2630490	1					
ANR	2654097	CompoundStatement		4207:76:90860:90860	2630490	1					
ANR	2654098	ReturnStatement	return - 1 ;	5500:4:116725:116734	2630490	0	True				
ANR	2654099	UnaryOperationExpression	- 1		2630490	0					
ANR	2654100	UnaryOperator	-		2630490	0					
ANR	2654101	PrimaryExpression	1		2630490	1					
ANR	2654102	ExpressionStatement	ao -> o = 0xc0f30000	5503:3:116745:116763	2630490	5	True				
ANR	2654103	AssignmentExpression	ao -> o = 0xc0f30000		2630490	0		=			
ANR	2654104	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654105	Identifier	ao		2630490	0					
ANR	2654106	Identifier	o		2630490	1					
ANR	2654107	PrimaryExpression	0xc0f30000		2630490	1					
ANR	2654108	ExpressionStatement	ao -> o |= reg1	5504:3:116768:116781	2630490	6	True				
ANR	2654109	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2654110	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654111	Identifier	ao		2630490	0					
ANR	2654112	Identifier	o		2630490	1					
ANR	2654113	Identifier	reg1		2630490	1					
ANR	2654114	ExpressionStatement	ao -> o |= reg2 << 24	5505:3:116786:116805	2630490	7	True				
ANR	2654115	AssignmentExpression	ao -> o |= reg2 << 24		2630490	0		|=			
ANR	2654116	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654117	Identifier	ao		2630490	0					
ANR	2654118	Identifier	o		2630490	1					
ANR	2654119	ShiftExpression	reg2 << 24		2630490	1		<<			
ANR	2654120	Identifier	reg2		2630490	0					
ANR	2654121	PrimaryExpression	24		2630490	1					
ANR	2654122	ExpressionStatement	ao -> o |= ( lsb & 0x1c ) << 2	5506:3:116810:116836	2630490	8	True				
ANR	2654123	AssignmentExpression	ao -> o |= ( lsb & 0x1c ) << 2		2630490	0		|=			
ANR	2654124	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654125	Identifier	ao		2630490	0					
ANR	2654126	Identifier	o		2630490	1					
ANR	2654127	ShiftExpression	( lsb & 0x1c ) << 2		2630490	1		<<			
ANR	2654128	BitAndExpression	lsb & 0x1c		2630490	0		&			
ANR	2654129	Identifier	lsb		2630490	0					
ANR	2654130	PrimaryExpression	0x1c		2630490	1					
ANR	2654131	PrimaryExpression	2		2630490	1					
ANR	2654132	ExpressionStatement	ao -> o |= ( lsb & 0x3 ) << 14	5507:3:116841:116867	2630490	9	True				
ANR	2654133	AssignmentExpression	ao -> o |= ( lsb & 0x3 ) << 14		2630490	0		|=			
ANR	2654134	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654135	Identifier	ao		2630490	0					
ANR	2654136	Identifier	o		2630490	1					
ANR	2654137	ShiftExpression	( lsb & 0x3 ) << 14		2630490	1		<<			
ANR	2654138	BitAndExpression	lsb & 0x3		2630490	0		&			
ANR	2654139	Identifier	lsb		2630490	0					
ANR	2654140	PrimaryExpression	0x3		2630490	1					
ANR	2654141	PrimaryExpression	14		2630490	1					
ANR	2654142	ExpressionStatement	ao -> o |= widthm1 << 8	5508:3:116872:116893	2630490	10	True				
ANR	2654143	AssignmentExpression	ao -> o |= widthm1 << 8		2630490	0		|=			
ANR	2654144	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654145	Identifier	ao		2630490	0					
ANR	2654146	Identifier	o		2630490	1					
ANR	2654147	ShiftExpression	widthm1 << 8		2630490	1		<<			
ANR	2654148	Identifier	widthm1		2630490	0					
ANR	2654149	PrimaryExpression	8		2630490	1					
ANR	2654150	ReturnStatement	return 4 ;	5509:3:116898:116906	2630490	11	True				
ANR	2654151	PrimaryExpression	4		2630490	0					
ANR	2654152	BreakStatement	break ;	5511:3:116923:116928	2630490	2	True				
ANR	2654153	Label	default :	5512:2:116932:116939	2630490	3	True				
ANR	2654154	Identifier	default		2630490	0					
ANR	2654155	ReturnStatement	return - 1 ;	5513:3:116944:116953	2630490	4	True				
ANR	2654156	UnaryOperationExpression	- 1		2630490	0					
ANR	2654157	UnaryOperator	-		2630490	0					
ANR	2654158	PrimaryExpression	1		2630490	1					
ANR	2654159	ElseStatement	else		2630490	0					
ANR	2654160	IfStatement	"if ( ( m = opmask ( ao -> op , ""udiv"" , 0 ) ) )"		2630490	0					
ANR	2654161	Condition	"m = opmask ( ao -> op , ""udiv"" , 0 )"	5516:5:116972:117003	2630490	0	True				
ANR	2654162	AssignmentExpression	"m = opmask ( ao -> op , ""udiv"" , 0 )"		2630490	0		=			
ANR	2654163	Identifier	m		2630490	0					
ANR	2654164	CallExpression	"opmask ( ao -> op , ""udiv"" , 0 )"		2630490	1					
ANR	2654165	Callee	opmask		2630490	0					
ANR	2654166	Identifier	opmask		2630490	0					
ANR	2654167	ArgumentList	ao -> op		2630490	1					
ANR	2654168	Argument	ao -> op		2630490	0					
ANR	2654169	PtrMemberAccess	ao -> op		2630490	0					
ANR	2654170	Identifier	ao		2630490	0					
ANR	2654171	Identifier	op		2630490	1					
ANR	2654172	Argument	"""udiv"""		2630490	1					
ANR	2654173	PrimaryExpression	"""udiv"""		2630490	0					
ANR	2654174	Argument	0		2630490	2					
ANR	2654175	PrimaryExpression	0		2630490	0					
ANR	2654176	CompoundStatement		4225:2:91151:91185	2630490	1					
ANR	2654177	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5517:2:117010:117044	2630490	0	True				
ANR	2654178	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2654179	IdentifierDeclType	ut64		2630490	0					
ANR	2654180	Identifier	argt		2630490	1					
ANR	2654181	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2654182	Identifier	argt		2630490	0					
ANR	2654183	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2654184	Callee	thumb_selector		2630490	0					
ANR	2654185	Identifier	thumb_selector		2630490	0					
ANR	2654186	ArgumentList	ao -> a		2630490	1					
ANR	2654187	Argument	ao -> a		2630490	0					
ANR	2654188	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654189	Identifier	ao		2630490	0					
ANR	2654190	Identifier	a		2630490	1					
ANR	2654191	SwitchStatement	switch ( argt )		2630490	1					
ANR	2654192	Condition	argt	5518:10:117056:117059	2630490	0	True				
ANR	2654193	Identifier	argt		2630490	0					
ANR	2654194	CompoundStatement		4226:16:91203:91203	2630490	1					
ANR	2654195	Label	case THUMB_REG_REG :	5519:2:117066:117084	2630490	0	True				
ANR	2654196	Identifier	THUMB_REG_REG		2630490	0					
ANR	2654197	CompoundStatement		4227:22:91227:91227	2630490	1					
ANR	2654198	ExpressionStatement	std_opt_2 ( ao )	5520:3:117091:117105	2630490	0	True				
ANR	2654199	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2654200	Callee	std_opt_2		2630490	0					
ANR	2654201	Identifier	std_opt_2		2630490	0					
ANR	2654202	ArgumentList	ao		2630490	1					
ANR	2654203	Argument	ao		2630490	0					
ANR	2654204	Identifier	ao		2630490	0					
ANR	2654205	Label	case THUMB_REG_REG_REG :	5523:2:117151:117173	2630490	2	True				
ANR	2654206	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2654207	CompoundStatement		4231:26:91316:91316	2630490	3					
ANR	2654208	ExpressionStatement	ao -> o = 0xb0fbf0f0	5524:3:117180:117198	2630490	0	True				
ANR	2654209	AssignmentExpression	ao -> o = 0xb0fbf0f0		2630490	0		=			
ANR	2654210	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654211	Identifier	ao		2630490	0					
ANR	2654212	Identifier	o		2630490	1					
ANR	2654213	PrimaryExpression	0xb0fbf0f0		2630490	1					
ANR	2654214	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5525:3:117203:117239	2630490	1	True				
ANR	2654215	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2654216	Callee	std_32bit_3reg		2630490	0					
ANR	2654217	Identifier	std_32bit_3reg		2630490	0					
ANR	2654218	ArgumentList	ao		2630490	1					
ANR	2654219	Argument	ao		2630490	0					
ANR	2654220	Identifier	ao		2630490	0					
ANR	2654221	Argument	m		2630490	1					
ANR	2654222	Identifier	m		2630490	0					
ANR	2654223	Argument	false		2630490	2					
ANR	2654224	Identifier	false		2630490	0					
ANR	2654225	BreakStatement	break ;	5527:3:117256:117261	2630490	4	True				
ANR	2654226	Label	default :	5528:2:117265:117272	2630490	5	True				
ANR	2654227	Identifier	default		2630490	0					
ANR	2654228	ReturnStatement	return - 1 ;	5529:3:117277:117286	2630490	6	True				
ANR	2654229	UnaryOperationExpression	- 1		2630490	0					
ANR	2654230	UnaryOperator	-		2630490	0					
ANR	2654231	PrimaryExpression	1		2630490	1					
ANR	2654232	ElseStatement	else		2630490	0					
ANR	2654233	IfStatement	"if ( ( m = opmask ( ao -> op , ""uhadd"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		2630490	0					
ANR	2654234	Condition	"m = opmask ( ao -> op , ""uhadd"" , EIGHT_BIT | SIXTEEN_BIT )"	5532:5:117305:117359	2630490	0	True				
ANR	2654235	AssignmentExpression	"m = opmask ( ao -> op , ""uhadd"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	0		=			
ANR	2654236	Identifier	m		2630490	0					
ANR	2654237	CallExpression	"opmask ( ao -> op , ""uhadd"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	1					
ANR	2654238	Callee	opmask		2630490	0					
ANR	2654239	Identifier	opmask		2630490	0					
ANR	2654240	ArgumentList	ao -> op		2630490	1					
ANR	2654241	Argument	ao -> op		2630490	0					
ANR	2654242	PtrMemberAccess	ao -> op		2630490	0					
ANR	2654243	Identifier	ao		2630490	0					
ANR	2654244	Identifier	op		2630490	1					
ANR	2654245	Argument	"""uhadd"""		2630490	1					
ANR	2654246	PrimaryExpression	"""uhadd"""		2630490	0					
ANR	2654247	Argument	EIGHT_BIT | SIXTEEN_BIT		2630490	2					
ANR	2654248	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		2630490	0		|			
ANR	2654249	Identifier	EIGHT_BIT		2630490	0					
ANR	2654250	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2654251	CompoundStatement		4242:2:91545:91588	2630490	1					
ANR	2654252	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5533:2:117366:117400	2630490	0	True				
ANR	2654253	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2654254	IdentifierDeclType	ut64		2630490	0					
ANR	2654255	Identifier	argt		2630490	1					
ANR	2654256	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2654257	Identifier	argt		2630490	0					
ANR	2654258	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2654259	Callee	thumb_selector		2630490	0					
ANR	2654260	Identifier	thumb_selector		2630490	0					
ANR	2654261	ArgumentList	ao -> a		2630490	1					
ANR	2654262	Argument	ao -> a		2630490	0					
ANR	2654263	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654264	Identifier	ao		2630490	0					
ANR	2654265	Identifier	a		2630490	1					
ANR	2654266	IdentifierDeclStatement	ut64 sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT ) ;	5534:2:117404:117447	2630490	1	True				
ANR	2654267	IdentifierDecl	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		2630490	0					
ANR	2654268	IdentifierDeclType	ut64		2630490	0					
ANR	2654269	Identifier	sufsel		2630490	1					
ANR	2654270	AssignmentExpression	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		2630490	2		=			
ANR	2654271	Identifier	sufsel		2630490	0					
ANR	2654272	BitAndExpression	m & ( EIGHT_BIT | SIXTEEN_BIT )		2630490	1		&			
ANR	2654273	Identifier	m		2630490	0					
ANR	2654274	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2654275	Identifier	EIGHT_BIT		2630490	0					
ANR	2654276	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2654277	SwitchStatement	switch ( argt )		2630490	2					
ANR	2654278	Condition	argt	5535:10:117459:117462	2630490	0	True				
ANR	2654279	Identifier	argt		2630490	0					
ANR	2654280	CompoundStatement		4243:16:91606:91606	2630490	1					
ANR	2654281	Label	case THUMB_REG_REG :	5536:2:117469:117487	2630490	0	True				
ANR	2654282	Identifier	THUMB_REG_REG		2630490	0					
ANR	2654283	CompoundStatement		4244:22:91630:91630	2630490	1					
ANR	2654284	ExpressionStatement	std_opt_2 ( ao )	5537:3:117494:117508	2630490	0	True				
ANR	2654285	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2654286	Callee	std_opt_2		2630490	0					
ANR	2654287	Identifier	std_opt_2		2630490	0					
ANR	2654288	ArgumentList	ao		2630490	1					
ANR	2654289	Argument	ao		2630490	0					
ANR	2654290	Identifier	ao		2630490	0					
ANR	2654291	Label	case THUMB_REG_REG_REG :	5540:2:117554:117576	2630490	2	True				
ANR	2654292	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2654293	CompoundStatement		4248:26:91719:91719	2630490	3					
ANR	2654294	IfStatement	if ( sufsel == EIGHT_BIT )		2630490	0					
ANR	2654295	Condition	sufsel == EIGHT_BIT	5541:7:117587:117605	2630490	0	True				
ANR	2654296	EqualityExpression	sufsel == EIGHT_BIT		2630490	0		==			
ANR	2654297	Identifier	sufsel		2630490	0					
ANR	2654298	Identifier	EIGHT_BIT		2630490	1					
ANR	2654299	CompoundStatement		4249:28:91749:91749	2630490	1					
ANR	2654300	ExpressionStatement	ao -> o = 0x80fa60f0	5542:4:117614:117632	2630490	0	True				
ANR	2654301	AssignmentExpression	ao -> o = 0x80fa60f0		2630490	0		=			
ANR	2654302	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654303	Identifier	ao		2630490	0					
ANR	2654304	Identifier	o		2630490	1					
ANR	2654305	PrimaryExpression	0x80fa60f0		2630490	1					
ANR	2654306	ElseStatement	else		2630490	0					
ANR	2654307	IfStatement	if ( sufsel == SIXTEEN_BIT )		2630490	0					
ANR	2654308	Condition	sufsel == SIXTEEN_BIT	5544:7:117652:117672	2630490	0	True				
ANR	2654309	EqualityExpression	sufsel == SIXTEEN_BIT		2630490	0		==			
ANR	2654310	Identifier	sufsel		2630490	0					
ANR	2654311	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2654312	CompoundStatement		4252:30:91816:91816	2630490	1					
ANR	2654313	ExpressionStatement	ao -> o = 0x90fa60f0	5545:4:117681:117699	2630490	0	True				
ANR	2654314	AssignmentExpression	ao -> o = 0x90fa60f0		2630490	0		=			
ANR	2654315	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654316	Identifier	ao		2630490	0					
ANR	2654317	Identifier	o		2630490	1					
ANR	2654318	PrimaryExpression	0x90fa60f0		2630490	1					
ANR	2654319	ElseStatement	else		2630490	0					
ANR	2654320	CompoundStatement		4254:10:91852:91852	2630490	0					
ANR	2654321	ReturnStatement	return - 1 ;	5547:4:117717:117726	2630490	0	True				
ANR	2654322	UnaryOperationExpression	- 1		2630490	0					
ANR	2654323	UnaryOperator	-		2630490	0					
ANR	2654324	PrimaryExpression	1		2630490	1					
ANR	2654325	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5550:3:117741:117777	2630490	1	True				
ANR	2654326	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2654327	Callee	std_32bit_3reg		2630490	0					
ANR	2654328	Identifier	std_32bit_3reg		2630490	0					
ANR	2654329	ArgumentList	ao		2630490	1					
ANR	2654330	Argument	ao		2630490	0					
ANR	2654331	Identifier	ao		2630490	0					
ANR	2654332	Argument	m		2630490	1					
ANR	2654333	Identifier	m		2630490	0					
ANR	2654334	Argument	false		2630490	2					
ANR	2654335	Identifier	false		2630490	0					
ANR	2654336	BreakStatement	break ;	5552:3:117794:117799	2630490	4	True				
ANR	2654337	Label	default :	5553:2:117803:117810	2630490	5	True				
ANR	2654338	Identifier	default		2630490	0					
ANR	2654339	ReturnStatement	return - 1 ;	5554:3:117815:117824	2630490	6	True				
ANR	2654340	UnaryOperationExpression	- 1		2630490	0					
ANR	2654341	UnaryOperator	-		2630490	0					
ANR	2654342	PrimaryExpression	1		2630490	1					
ANR	2654343	ElseStatement	else		2630490	0					
ANR	2654344	IfStatement	"if ( ( m = opmask ( ao -> op , ""uhasx"" , 0 ) ) )"		2630490	0					
ANR	2654345	Condition	"m = opmask ( ao -> op , ""uhasx"" , 0 )"	5557:5:117843:117875	2630490	0	True				
ANR	2654346	AssignmentExpression	"m = opmask ( ao -> op , ""uhasx"" , 0 )"		2630490	0		=			
ANR	2654347	Identifier	m		2630490	0					
ANR	2654348	CallExpression	"opmask ( ao -> op , ""uhasx"" , 0 )"		2630490	1					
ANR	2654349	Callee	opmask		2630490	0					
ANR	2654350	Identifier	opmask		2630490	0					
ANR	2654351	ArgumentList	ao -> op		2630490	1					
ANR	2654352	Argument	ao -> op		2630490	0					
ANR	2654353	PtrMemberAccess	ao -> op		2630490	0					
ANR	2654354	Identifier	ao		2630490	0					
ANR	2654355	Identifier	op		2630490	1					
ANR	2654356	Argument	"""uhasx"""		2630490	1					
ANR	2654357	PrimaryExpression	"""uhasx"""		2630490	0					
ANR	2654358	Argument	0		2630490	2					
ANR	2654359	PrimaryExpression	0		2630490	0					
ANR	2654360	CompoundStatement		4266:2:92023:92057	2630490	1					
ANR	2654361	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5558:2:117882:117916	2630490	0	True				
ANR	2654362	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2654363	IdentifierDeclType	ut64		2630490	0					
ANR	2654364	Identifier	argt		2630490	1					
ANR	2654365	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2654366	Identifier	argt		2630490	0					
ANR	2654367	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2654368	Callee	thumb_selector		2630490	0					
ANR	2654369	Identifier	thumb_selector		2630490	0					
ANR	2654370	ArgumentList	ao -> a		2630490	1					
ANR	2654371	Argument	ao -> a		2630490	0					
ANR	2654372	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654373	Identifier	ao		2630490	0					
ANR	2654374	Identifier	a		2630490	1					
ANR	2654375	SwitchStatement	switch ( argt )		2630490	1					
ANR	2654376	Condition	argt	5559:10:117928:117931	2630490	0	True				
ANR	2654377	Identifier	argt		2630490	0					
ANR	2654378	CompoundStatement		4267:16:92075:92075	2630490	1					
ANR	2654379	Label	case THUMB_REG_REG :	5560:2:117938:117956	2630490	0	True				
ANR	2654380	Identifier	THUMB_REG_REG		2630490	0					
ANR	2654381	CompoundStatement		4268:22:92099:92099	2630490	1					
ANR	2654382	ExpressionStatement	std_opt_2 ( ao )	5561:3:117963:117977	2630490	0	True				
ANR	2654383	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2654384	Callee	std_opt_2		2630490	0					
ANR	2654385	Identifier	std_opt_2		2630490	0					
ANR	2654386	ArgumentList	ao		2630490	1					
ANR	2654387	Argument	ao		2630490	0					
ANR	2654388	Identifier	ao		2630490	0					
ANR	2654389	Label	case THUMB_REG_REG_REG :	5564:2:118023:118045	2630490	2	True				
ANR	2654390	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2654391	CompoundStatement		4272:26:92188:92188	2630490	3					
ANR	2654392	ExpressionStatement	ao -> o = 0xa0fa60f0	5565:3:118052:118070	2630490	0	True				
ANR	2654393	AssignmentExpression	ao -> o = 0xa0fa60f0		2630490	0		=			
ANR	2654394	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654395	Identifier	ao		2630490	0					
ANR	2654396	Identifier	o		2630490	1					
ANR	2654397	PrimaryExpression	0xa0fa60f0		2630490	1					
ANR	2654398	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5567:3:118079:118115	2630490	1	True				
ANR	2654399	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2654400	Callee	std_32bit_3reg		2630490	0					
ANR	2654401	Identifier	std_32bit_3reg		2630490	0					
ANR	2654402	ArgumentList	ao		2630490	1					
ANR	2654403	Argument	ao		2630490	0					
ANR	2654404	Identifier	ao		2630490	0					
ANR	2654405	Argument	m		2630490	1					
ANR	2654406	Identifier	m		2630490	0					
ANR	2654407	Argument	false		2630490	2					
ANR	2654408	Identifier	false		2630490	0					
ANR	2654409	BreakStatement	break ;	5570:3:118136:118141	2630490	4	True				
ANR	2654410	Label	default :	5571:2:118145:118152	2630490	5	True				
ANR	2654411	Identifier	default		2630490	0					
ANR	2654412	ReturnStatement	return - 1 ;	5572:3:118157:118166	2630490	6	True				
ANR	2654413	UnaryOperationExpression	- 1		2630490	0					
ANR	2654414	UnaryOperator	-		2630490	0					
ANR	2654415	PrimaryExpression	1		2630490	1					
ANR	2654416	ElseStatement	else		2630490	0					
ANR	2654417	IfStatement	"if ( ( m = opmask ( ao -> op , ""uhsax"" , 0 ) ) )"		2630490	0					
ANR	2654418	Condition	"m = opmask ( ao -> op , ""uhsax"" , 0 )"	5575:5:118185:118217	2630490	0	True				
ANR	2654419	AssignmentExpression	"m = opmask ( ao -> op , ""uhsax"" , 0 )"		2630490	0		=			
ANR	2654420	Identifier	m		2630490	0					
ANR	2654421	CallExpression	"opmask ( ao -> op , ""uhsax"" , 0 )"		2630490	1					
ANR	2654422	Callee	opmask		2630490	0					
ANR	2654423	Identifier	opmask		2630490	0					
ANR	2654424	ArgumentList	ao -> op		2630490	1					
ANR	2654425	Argument	ao -> op		2630490	0					
ANR	2654426	PtrMemberAccess	ao -> op		2630490	0					
ANR	2654427	Identifier	ao		2630490	0					
ANR	2654428	Identifier	op		2630490	1					
ANR	2654429	Argument	"""uhsax"""		2630490	1					
ANR	2654430	PrimaryExpression	"""uhsax"""		2630490	0					
ANR	2654431	Argument	0		2630490	2					
ANR	2654432	PrimaryExpression	0		2630490	0					
ANR	2654433	CompoundStatement		4284:2:92365:92399	2630490	1					
ANR	2654434	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5576:2:118224:118258	2630490	0	True				
ANR	2654435	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2654436	IdentifierDeclType	ut64		2630490	0					
ANR	2654437	Identifier	argt		2630490	1					
ANR	2654438	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2654439	Identifier	argt		2630490	0					
ANR	2654440	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2654441	Callee	thumb_selector		2630490	0					
ANR	2654442	Identifier	thumb_selector		2630490	0					
ANR	2654443	ArgumentList	ao -> a		2630490	1					
ANR	2654444	Argument	ao -> a		2630490	0					
ANR	2654445	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654446	Identifier	ao		2630490	0					
ANR	2654447	Identifier	a		2630490	1					
ANR	2654448	SwitchStatement	switch ( argt )		2630490	1					
ANR	2654449	Condition	argt	5577:10:118270:118273	2630490	0	True				
ANR	2654450	Identifier	argt		2630490	0					
ANR	2654451	CompoundStatement		4285:16:92417:92417	2630490	1					
ANR	2654452	Label	case THUMB_REG_REG :	5578:2:118280:118298	2630490	0	True				
ANR	2654453	Identifier	THUMB_REG_REG		2630490	0					
ANR	2654454	CompoundStatement		4286:22:92441:92441	2630490	1					
ANR	2654455	ExpressionStatement	std_opt_2 ( ao )	5579:3:118305:118319	2630490	0	True				
ANR	2654456	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2654457	Callee	std_opt_2		2630490	0					
ANR	2654458	Identifier	std_opt_2		2630490	0					
ANR	2654459	ArgumentList	ao		2630490	1					
ANR	2654460	Argument	ao		2630490	0					
ANR	2654461	Identifier	ao		2630490	0					
ANR	2654462	Label	case THUMB_REG_REG_REG :	5582:2:118365:118387	2630490	2	True				
ANR	2654463	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2654464	CompoundStatement		4290:26:92530:92530	2630490	3					
ANR	2654465	ExpressionStatement	ao -> o = 0xe0fa60f0	5583:3:118394:118412	2630490	0	True				
ANR	2654466	AssignmentExpression	ao -> o = 0xe0fa60f0		2630490	0		=			
ANR	2654467	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654468	Identifier	ao		2630490	0					
ANR	2654469	Identifier	o		2630490	1					
ANR	2654470	PrimaryExpression	0xe0fa60f0		2630490	1					
ANR	2654471	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5585:3:118421:118457	2630490	1	True				
ANR	2654472	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2654473	Callee	std_32bit_3reg		2630490	0					
ANR	2654474	Identifier	std_32bit_3reg		2630490	0					
ANR	2654475	ArgumentList	ao		2630490	1					
ANR	2654476	Argument	ao		2630490	0					
ANR	2654477	Identifier	ao		2630490	0					
ANR	2654478	Argument	m		2630490	1					
ANR	2654479	Identifier	m		2630490	0					
ANR	2654480	Argument	false		2630490	2					
ANR	2654481	Identifier	false		2630490	0					
ANR	2654482	BreakStatement	break ;	5587:3:118474:118479	2630490	4	True				
ANR	2654483	Label	default :	5588:2:118483:118490	2630490	5	True				
ANR	2654484	Identifier	default		2630490	0					
ANR	2654485	ReturnStatement	return - 1 ;	5589:3:118495:118504	2630490	6	True				
ANR	2654486	UnaryOperationExpression	- 1		2630490	0					
ANR	2654487	UnaryOperator	-		2630490	0					
ANR	2654488	PrimaryExpression	1		2630490	1					
ANR	2654489	ElseStatement	else		2630490	0					
ANR	2654490	IfStatement	"if ( ( m = opmask ( ao -> op , ""uhsub"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		2630490	0					
ANR	2654491	Condition	"m = opmask ( ao -> op , ""uhsub"" , EIGHT_BIT | SIXTEEN_BIT )"	5592:5:118523:118577	2630490	0	True				
ANR	2654492	AssignmentExpression	"m = opmask ( ao -> op , ""uhsub"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	0		=			
ANR	2654493	Identifier	m		2630490	0					
ANR	2654494	CallExpression	"opmask ( ao -> op , ""uhsub"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	1					
ANR	2654495	Callee	opmask		2630490	0					
ANR	2654496	Identifier	opmask		2630490	0					
ANR	2654497	ArgumentList	ao -> op		2630490	1					
ANR	2654498	Argument	ao -> op		2630490	0					
ANR	2654499	PtrMemberAccess	ao -> op		2630490	0					
ANR	2654500	Identifier	ao		2630490	0					
ANR	2654501	Identifier	op		2630490	1					
ANR	2654502	Argument	"""uhsub"""		2630490	1					
ANR	2654503	PrimaryExpression	"""uhsub"""		2630490	0					
ANR	2654504	Argument	EIGHT_BIT | SIXTEEN_BIT		2630490	2					
ANR	2654505	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		2630490	0		|			
ANR	2654506	Identifier	EIGHT_BIT		2630490	0					
ANR	2654507	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2654508	CompoundStatement		4302:2:92763:92806	2630490	1					
ANR	2654509	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5593:2:118584:118618	2630490	0	True				
ANR	2654510	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2654511	IdentifierDeclType	ut64		2630490	0					
ANR	2654512	Identifier	argt		2630490	1					
ANR	2654513	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2654514	Identifier	argt		2630490	0					
ANR	2654515	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2654516	Callee	thumb_selector		2630490	0					
ANR	2654517	Identifier	thumb_selector		2630490	0					
ANR	2654518	ArgumentList	ao -> a		2630490	1					
ANR	2654519	Argument	ao -> a		2630490	0					
ANR	2654520	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654521	Identifier	ao		2630490	0					
ANR	2654522	Identifier	a		2630490	1					
ANR	2654523	IdentifierDeclStatement	ut64 sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT ) ;	5594:2:118622:118665	2630490	1	True				
ANR	2654524	IdentifierDecl	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		2630490	0					
ANR	2654525	IdentifierDeclType	ut64		2630490	0					
ANR	2654526	Identifier	sufsel		2630490	1					
ANR	2654527	AssignmentExpression	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		2630490	2		=			
ANR	2654528	Identifier	sufsel		2630490	0					
ANR	2654529	BitAndExpression	m & ( EIGHT_BIT | SIXTEEN_BIT )		2630490	1		&			
ANR	2654530	Identifier	m		2630490	0					
ANR	2654531	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2654532	Identifier	EIGHT_BIT		2630490	0					
ANR	2654533	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2654534	SwitchStatement	switch ( argt )		2630490	2					
ANR	2654535	Condition	argt	5595:10:118677:118680	2630490	0	True				
ANR	2654536	Identifier	argt		2630490	0					
ANR	2654537	CompoundStatement		4303:16:92824:92824	2630490	1					
ANR	2654538	Label	case THUMB_REG_REG :	5596:2:118687:118705	2630490	0	True				
ANR	2654539	Identifier	THUMB_REG_REG		2630490	0					
ANR	2654540	CompoundStatement		4304:22:92848:92848	2630490	1					
ANR	2654541	ExpressionStatement	std_opt_2 ( ao )	5597:3:118712:118726	2630490	0	True				
ANR	2654542	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2654543	Callee	std_opt_2		2630490	0					
ANR	2654544	Identifier	std_opt_2		2630490	0					
ANR	2654545	ArgumentList	ao		2630490	1					
ANR	2654546	Argument	ao		2630490	0					
ANR	2654547	Identifier	ao		2630490	0					
ANR	2654548	Label	case THUMB_REG_REG_REG :	5600:2:118772:118794	2630490	2	True				
ANR	2654549	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2654550	CompoundStatement		4308:26:92937:92937	2630490	3					
ANR	2654551	IfStatement	if ( sufsel == EIGHT_BIT )		2630490	0					
ANR	2654552	Condition	sufsel == EIGHT_BIT	5601:7:118805:118823	2630490	0	True				
ANR	2654553	EqualityExpression	sufsel == EIGHT_BIT		2630490	0		==			
ANR	2654554	Identifier	sufsel		2630490	0					
ANR	2654555	Identifier	EIGHT_BIT		2630490	1					
ANR	2654556	CompoundStatement		4309:28:92967:92967	2630490	1					
ANR	2654557	ExpressionStatement	ao -> o = 0xc0fa60f0	5602:4:118832:118850	2630490	0	True				
ANR	2654558	AssignmentExpression	ao -> o = 0xc0fa60f0		2630490	0		=			
ANR	2654559	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654560	Identifier	ao		2630490	0					
ANR	2654561	Identifier	o		2630490	1					
ANR	2654562	PrimaryExpression	0xc0fa60f0		2630490	1					
ANR	2654563	ElseStatement	else		2630490	0					
ANR	2654564	IfStatement	if ( sufsel == SIXTEEN_BIT )		2630490	0					
ANR	2654565	Condition	sufsel == SIXTEEN_BIT	5604:7:118870:118890	2630490	0	True				
ANR	2654566	EqualityExpression	sufsel == SIXTEEN_BIT		2630490	0		==			
ANR	2654567	Identifier	sufsel		2630490	0					
ANR	2654568	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2654569	CompoundStatement		4312:30:93034:93034	2630490	1					
ANR	2654570	ExpressionStatement	ao -> o = 0xd0fa60f0	5605:4:118899:118917	2630490	0	True				
ANR	2654571	AssignmentExpression	ao -> o = 0xd0fa60f0		2630490	0		=			
ANR	2654572	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654573	Identifier	ao		2630490	0					
ANR	2654574	Identifier	o		2630490	1					
ANR	2654575	PrimaryExpression	0xd0fa60f0		2630490	1					
ANR	2654576	ElseStatement	else		2630490	0					
ANR	2654577	CompoundStatement		4314:10:93070:93070	2630490	0					
ANR	2654578	ReturnStatement	return - 1 ;	5607:4:118935:118944	2630490	0	True				
ANR	2654579	UnaryOperationExpression	- 1		2630490	0					
ANR	2654580	UnaryOperator	-		2630490	0					
ANR	2654581	PrimaryExpression	1		2630490	1					
ANR	2654582	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5610:3:118959:118995	2630490	1	True				
ANR	2654583	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2654584	Callee	std_32bit_3reg		2630490	0					
ANR	2654585	Identifier	std_32bit_3reg		2630490	0					
ANR	2654586	ArgumentList	ao		2630490	1					
ANR	2654587	Argument	ao		2630490	0					
ANR	2654588	Identifier	ao		2630490	0					
ANR	2654589	Argument	m		2630490	1					
ANR	2654590	Identifier	m		2630490	0					
ANR	2654591	Argument	false		2630490	2					
ANR	2654592	Identifier	false		2630490	0					
ANR	2654593	BreakStatement	break ;	5612:3:119012:119017	2630490	4	True				
ANR	2654594	Label	default :	5613:2:119021:119028	2630490	5	True				
ANR	2654595	Identifier	default		2630490	0					
ANR	2654596	ReturnStatement	return - 1 ;	5614:3:119033:119042	2630490	6	True				
ANR	2654597	UnaryOperationExpression	- 1		2630490	0					
ANR	2654598	UnaryOperator	-		2630490	0					
ANR	2654599	PrimaryExpression	1		2630490	1					
ANR	2654600	ElseStatement	else		2630490	0					
ANR	2654601	IfStatement	"if ( ( m = opmask ( ao -> op , ""umaal"" , 0 ) ) )"		2630490	0					
ANR	2654602	Condition	"m = opmask ( ao -> op , ""umaal"" , 0 )"	5617:5:119061:119093	2630490	0	True				
ANR	2654603	AssignmentExpression	"m = opmask ( ao -> op , ""umaal"" , 0 )"		2630490	0		=			
ANR	2654604	Identifier	m		2630490	0					
ANR	2654605	CallExpression	"opmask ( ao -> op , ""umaal"" , 0 )"		2630490	1					
ANR	2654606	Callee	opmask		2630490	0					
ANR	2654607	Identifier	opmask		2630490	0					
ANR	2654608	ArgumentList	ao -> op		2630490	1					
ANR	2654609	Argument	ao -> op		2630490	0					
ANR	2654610	PtrMemberAccess	ao -> op		2630490	0					
ANR	2654611	Identifier	ao		2630490	0					
ANR	2654612	Identifier	op		2630490	1					
ANR	2654613	Argument	"""umaal"""		2630490	1					
ANR	2654614	PrimaryExpression	"""umaal"""		2630490	0					
ANR	2654615	Argument	0		2630490	2					
ANR	2654616	PrimaryExpression	0		2630490	0					
ANR	2654617	CompoundStatement		4326:2:93241:93275	2630490	1					
ANR	2654618	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5618:2:119100:119134	2630490	0	True				
ANR	2654619	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2654620	IdentifierDeclType	ut64		2630490	0					
ANR	2654621	Identifier	argt		2630490	1					
ANR	2654622	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2654623	Identifier	argt		2630490	0					
ANR	2654624	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2654625	Callee	thumb_selector		2630490	0					
ANR	2654626	Identifier	thumb_selector		2630490	0					
ANR	2654627	ArgumentList	ao -> a		2630490	1					
ANR	2654628	Argument	ao -> a		2630490	0					
ANR	2654629	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654630	Identifier	ao		2630490	0					
ANR	2654631	Identifier	a		2630490	1					
ANR	2654632	SwitchStatement	switch ( argt )		2630490	1					
ANR	2654633	Condition	argt	5619:10:119146:119149	2630490	0	True				
ANR	2654634	Identifier	argt		2630490	0					
ANR	2654635	CompoundStatement		4327:16:93293:93293	2630490	1					
ANR	2654636	Label	case THUMB_REG_REG_REG_REG :	5620:2:119156:119182	2630490	0	True				
ANR	2654637	Identifier	THUMB_REG_REG_REG_REG		2630490	0					
ANR	2654638	CompoundStatement		4332:3:93429:93457	2630490	1					
ANR	2654639	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5621:3:119189:119217	2630490	0	True				
ANR	2654640	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2654641	IdentifierDeclType	ut8		2630490	0					
ANR	2654642	Identifier	reg1		2630490	1					
ANR	2654643	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2654644	Identifier	reg1		2630490	0					
ANR	2654645	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2654646	Callee	getreg		2630490	0					
ANR	2654647	Identifier	getreg		2630490	0					
ANR	2654648	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2654649	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2654650	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2654651	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654652	Identifier	ao		2630490	0					
ANR	2654653	Identifier	a		2630490	1					
ANR	2654654	PrimaryExpression	0		2630490	1					
ANR	2654655	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5622:3:119222:119250	2630490	1	True				
ANR	2654656	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2654657	IdentifierDeclType	ut8		2630490	0					
ANR	2654658	Identifier	reg2		2630490	1					
ANR	2654659	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2654660	Identifier	reg2		2630490	0					
ANR	2654661	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2654662	Callee	getreg		2630490	0					
ANR	2654663	Identifier	getreg		2630490	0					
ANR	2654664	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2654665	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2654666	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2654667	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654668	Identifier	ao		2630490	0					
ANR	2654669	Identifier	a		2630490	1					
ANR	2654670	PrimaryExpression	1		2630490	1					
ANR	2654671	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	5623:3:119255:119283	2630490	2	True				
ANR	2654672	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2654673	IdentifierDeclType	ut8		2630490	0					
ANR	2654674	Identifier	reg3		2630490	1					
ANR	2654675	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2654676	Identifier	reg3		2630490	0					
ANR	2654677	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2654678	Callee	getreg		2630490	0					
ANR	2654679	Identifier	getreg		2630490	0					
ANR	2654680	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2654681	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2654682	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2654683	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654684	Identifier	ao		2630490	0					
ANR	2654685	Identifier	a		2630490	1					
ANR	2654686	PrimaryExpression	2		2630490	1					
ANR	2654687	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	5624:3:119288:119316	2630490	3	True				
ANR	2654688	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		2630490	0					
ANR	2654689	IdentifierDeclType	ut8		2630490	0					
ANR	2654690	Identifier	reg4		2630490	1					
ANR	2654691	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2654692	Identifier	reg4		2630490	0					
ANR	2654693	CallExpression	getreg ( ao -> a [ 3 ] )		2630490	1					
ANR	2654694	Callee	getreg		2630490	0					
ANR	2654695	Identifier	getreg		2630490	0					
ANR	2654696	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2654697	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2654698	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2654699	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654700	Identifier	ao		2630490	0					
ANR	2654701	Identifier	a		2630490	1					
ANR	2654702	PrimaryExpression	3		2630490	1					
ANR	2654703	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) )		2630490	4					
ANR	2654704	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )	5626:7:119326:119381	2630490	0	True				
ANR	2654705	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		2630490	0		||			
ANR	2654706	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2654707	Identifier	reg1		2630490	0					
ANR	2654708	PrimaryExpression	15		2630490	1					
ANR	2654709	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		2630490	1		||			
ANR	2654710	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2654711	Identifier	reg2		2630490	0					
ANR	2654712	PrimaryExpression	15		2630490	1					
ANR	2654713	OrExpression	( reg3 > 15 ) || ( reg4 > 15 )		2630490	1		||			
ANR	2654714	RelationalExpression	reg3 > 15		2630490	0		>			
ANR	2654715	Identifier	reg3		2630490	0					
ANR	2654716	PrimaryExpression	15		2630490	1					
ANR	2654717	RelationalExpression	reg4 > 15		2630490	1		>			
ANR	2654718	Identifier	reg4		2630490	0					
ANR	2654719	PrimaryExpression	15		2630490	1					
ANR	2654720	CompoundStatement		4334:65:93525:93525	2630490	1					
ANR	2654721	ReturnStatement	return - 1 ;	5627:4:119390:119399	2630490	0	True				
ANR	2654722	UnaryOperationExpression	- 1		2630490	0					
ANR	2654723	UnaryOperator	-		2630490	0					
ANR	2654724	PrimaryExpression	1		2630490	1					
ANR	2654725	ExpressionStatement	ao -> o = 0xe0fb6000	5630:3:119413:119431	2630490	5	True				
ANR	2654726	AssignmentExpression	ao -> o = 0xe0fb6000		2630490	0		=			
ANR	2654727	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654728	Identifier	ao		2630490	0					
ANR	2654729	Identifier	o		2630490	1					
ANR	2654730	PrimaryExpression	0xe0fb6000		2630490	1					
ANR	2654731	ExpressionStatement	ao -> o |= reg1 << 4	5631:3:119436:119454	2630490	6	True				
ANR	2654732	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2654733	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654734	Identifier	ao		2630490	0					
ANR	2654735	Identifier	o		2630490	1					
ANR	2654736	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2654737	Identifier	reg1		2630490	0					
ANR	2654738	PrimaryExpression	4		2630490	1					
ANR	2654739	ExpressionStatement	ao -> o |= reg2	5632:3:119459:119472	2630490	7	True				
ANR	2654740	AssignmentExpression	ao -> o |= reg2		2630490	0		|=			
ANR	2654741	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654742	Identifier	ao		2630490	0					
ANR	2654743	Identifier	o		2630490	1					
ANR	2654744	Identifier	reg2		2630490	1					
ANR	2654745	ExpressionStatement	ao -> o |= reg3 << 24	5633:3:119477:119496	2630490	8	True				
ANR	2654746	AssignmentExpression	ao -> o |= reg3 << 24		2630490	0		|=			
ANR	2654747	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654748	Identifier	ao		2630490	0					
ANR	2654749	Identifier	o		2630490	1					
ANR	2654750	ShiftExpression	reg3 << 24		2630490	1		<<			
ANR	2654751	Identifier	reg3		2630490	0					
ANR	2654752	PrimaryExpression	24		2630490	1					
ANR	2654753	ExpressionStatement	ao -> o |= reg4 << 8	5634:3:119501:119519	2630490	9	True				
ANR	2654754	AssignmentExpression	ao -> o |= reg4 << 8		2630490	0		|=			
ANR	2654755	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654756	Identifier	ao		2630490	0					
ANR	2654757	Identifier	o		2630490	1					
ANR	2654758	ShiftExpression	reg4 << 8		2630490	1		<<			
ANR	2654759	Identifier	reg4		2630490	0					
ANR	2654760	PrimaryExpression	8		2630490	1					
ANR	2654761	ReturnStatement	return 4 ;	5635:3:119524:119532	2630490	10	True				
ANR	2654762	PrimaryExpression	4		2630490	0					
ANR	2654763	BreakStatement	break ;	5637:3:119549:119554	2630490	2	True				
ANR	2654764	Label	default :	5638:2:119558:119565	2630490	3	True				
ANR	2654765	Identifier	default		2630490	0					
ANR	2654766	ReturnStatement	return - 1 ;	5639:3:119570:119579	2630490	4	True				
ANR	2654767	UnaryOperationExpression	- 1		2630490	0					
ANR	2654768	UnaryOperator	-		2630490	0					
ANR	2654769	PrimaryExpression	1		2630490	1					
ANR	2654770	ElseStatement	else		2630490	0					
ANR	2654771	IfStatement	"if ( ( m = opmask ( ao -> op , ""umlal"" , 0 ) ) )"		2630490	0					
ANR	2654772	Condition	"m = opmask ( ao -> op , ""umlal"" , 0 )"	5642:5:119598:119630	2630490	0	True				
ANR	2654773	AssignmentExpression	"m = opmask ( ao -> op , ""umlal"" , 0 )"		2630490	0		=			
ANR	2654774	Identifier	m		2630490	0					
ANR	2654775	CallExpression	"opmask ( ao -> op , ""umlal"" , 0 )"		2630490	1					
ANR	2654776	Callee	opmask		2630490	0					
ANR	2654777	Identifier	opmask		2630490	0					
ANR	2654778	ArgumentList	ao -> op		2630490	1					
ANR	2654779	Argument	ao -> op		2630490	0					
ANR	2654780	PtrMemberAccess	ao -> op		2630490	0					
ANR	2654781	Identifier	ao		2630490	0					
ANR	2654782	Identifier	op		2630490	1					
ANR	2654783	Argument	"""umlal"""		2630490	1					
ANR	2654784	PrimaryExpression	"""umlal"""		2630490	0					
ANR	2654785	Argument	0		2630490	2					
ANR	2654786	PrimaryExpression	0		2630490	0					
ANR	2654787	CompoundStatement		4351:2:93778:93812	2630490	1					
ANR	2654788	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5643:2:119637:119671	2630490	0	True				
ANR	2654789	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2654790	IdentifierDeclType	ut64		2630490	0					
ANR	2654791	Identifier	argt		2630490	1					
ANR	2654792	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2654793	Identifier	argt		2630490	0					
ANR	2654794	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2654795	Callee	thumb_selector		2630490	0					
ANR	2654796	Identifier	thumb_selector		2630490	0					
ANR	2654797	ArgumentList	ao -> a		2630490	1					
ANR	2654798	Argument	ao -> a		2630490	0					
ANR	2654799	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654800	Identifier	ao		2630490	0					
ANR	2654801	Identifier	a		2630490	1					
ANR	2654802	SwitchStatement	switch ( argt )		2630490	1					
ANR	2654803	Condition	argt	5644:10:119683:119686	2630490	0	True				
ANR	2654804	Identifier	argt		2630490	0					
ANR	2654805	CompoundStatement		4352:16:93830:93830	2630490	1					
ANR	2654806	Label	case THUMB_REG_REG_REG_REG :	5645:2:119693:119719	2630490	0	True				
ANR	2654807	Identifier	THUMB_REG_REG_REG_REG		2630490	0					
ANR	2654808	CompoundStatement		4357:3:93966:93994	2630490	1					
ANR	2654809	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5646:3:119726:119754	2630490	0	True				
ANR	2654810	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2654811	IdentifierDeclType	ut8		2630490	0					
ANR	2654812	Identifier	reg1		2630490	1					
ANR	2654813	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2654814	Identifier	reg1		2630490	0					
ANR	2654815	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2654816	Callee	getreg		2630490	0					
ANR	2654817	Identifier	getreg		2630490	0					
ANR	2654818	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2654819	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2654820	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2654821	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654822	Identifier	ao		2630490	0					
ANR	2654823	Identifier	a		2630490	1					
ANR	2654824	PrimaryExpression	0		2630490	1					
ANR	2654825	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5647:3:119759:119787	2630490	1	True				
ANR	2654826	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2654827	IdentifierDeclType	ut8		2630490	0					
ANR	2654828	Identifier	reg2		2630490	1					
ANR	2654829	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2654830	Identifier	reg2		2630490	0					
ANR	2654831	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2654832	Callee	getreg		2630490	0					
ANR	2654833	Identifier	getreg		2630490	0					
ANR	2654834	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2654835	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2654836	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2654837	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654838	Identifier	ao		2630490	0					
ANR	2654839	Identifier	a		2630490	1					
ANR	2654840	PrimaryExpression	1		2630490	1					
ANR	2654841	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	5648:3:119792:119820	2630490	2	True				
ANR	2654842	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2654843	IdentifierDeclType	ut8		2630490	0					
ANR	2654844	Identifier	reg3		2630490	1					
ANR	2654845	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2654846	Identifier	reg3		2630490	0					
ANR	2654847	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2654848	Callee	getreg		2630490	0					
ANR	2654849	Identifier	getreg		2630490	0					
ANR	2654850	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2654851	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2654852	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2654853	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654854	Identifier	ao		2630490	0					
ANR	2654855	Identifier	a		2630490	1					
ANR	2654856	PrimaryExpression	2		2630490	1					
ANR	2654857	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	5649:3:119825:119853	2630490	3	True				
ANR	2654858	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		2630490	0					
ANR	2654859	IdentifierDeclType	ut8		2630490	0					
ANR	2654860	Identifier	reg4		2630490	1					
ANR	2654861	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2654862	Identifier	reg4		2630490	0					
ANR	2654863	CallExpression	getreg ( ao -> a [ 3 ] )		2630490	1					
ANR	2654864	Callee	getreg		2630490	0					
ANR	2654865	Identifier	getreg		2630490	0					
ANR	2654866	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2654867	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2654868	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2654869	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654870	Identifier	ao		2630490	0					
ANR	2654871	Identifier	a		2630490	1					
ANR	2654872	PrimaryExpression	3		2630490	1					
ANR	2654873	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) )		2630490	4					
ANR	2654874	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )	5651:7:119863:119918	2630490	0	True				
ANR	2654875	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		2630490	0		||			
ANR	2654876	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2654877	Identifier	reg1		2630490	0					
ANR	2654878	PrimaryExpression	15		2630490	1					
ANR	2654879	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		2630490	1		||			
ANR	2654880	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2654881	Identifier	reg2		2630490	0					
ANR	2654882	PrimaryExpression	15		2630490	1					
ANR	2654883	OrExpression	( reg3 > 15 ) || ( reg4 > 15 )		2630490	1		||			
ANR	2654884	RelationalExpression	reg3 > 15		2630490	0		>			
ANR	2654885	Identifier	reg3		2630490	0					
ANR	2654886	PrimaryExpression	15		2630490	1					
ANR	2654887	RelationalExpression	reg4 > 15		2630490	1		>			
ANR	2654888	Identifier	reg4		2630490	0					
ANR	2654889	PrimaryExpression	15		2630490	1					
ANR	2654890	CompoundStatement		4359:65:94062:94062	2630490	1					
ANR	2654891	ReturnStatement	return - 1 ;	5652:4:119927:119936	2630490	0	True				
ANR	2654892	UnaryOperationExpression	- 1		2630490	0					
ANR	2654893	UnaryOperator	-		2630490	0					
ANR	2654894	PrimaryExpression	1		2630490	1					
ANR	2654895	ExpressionStatement	ao -> o = 0xe0fb0000	5655:3:119950:119968	2630490	5	True				
ANR	2654896	AssignmentExpression	ao -> o = 0xe0fb0000		2630490	0		=			
ANR	2654897	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654898	Identifier	ao		2630490	0					
ANR	2654899	Identifier	o		2630490	1					
ANR	2654900	PrimaryExpression	0xe0fb0000		2630490	1					
ANR	2654901	ExpressionStatement	ao -> o |= reg1 << 4	5656:3:119973:119991	2630490	6	True				
ANR	2654902	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2654903	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654904	Identifier	ao		2630490	0					
ANR	2654905	Identifier	o		2630490	1					
ANR	2654906	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2654907	Identifier	reg1		2630490	0					
ANR	2654908	PrimaryExpression	4		2630490	1					
ANR	2654909	ExpressionStatement	ao -> o |= reg2	5657:3:119996:120009	2630490	7	True				
ANR	2654910	AssignmentExpression	ao -> o |= reg2		2630490	0		|=			
ANR	2654911	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654912	Identifier	ao		2630490	0					
ANR	2654913	Identifier	o		2630490	1					
ANR	2654914	Identifier	reg2		2630490	1					
ANR	2654915	ExpressionStatement	ao -> o |= reg3 << 24	5658:3:120014:120033	2630490	8	True				
ANR	2654916	AssignmentExpression	ao -> o |= reg3 << 24		2630490	0		|=			
ANR	2654917	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654918	Identifier	ao		2630490	0					
ANR	2654919	Identifier	o		2630490	1					
ANR	2654920	ShiftExpression	reg3 << 24		2630490	1		<<			
ANR	2654921	Identifier	reg3		2630490	0					
ANR	2654922	PrimaryExpression	24		2630490	1					
ANR	2654923	ExpressionStatement	ao -> o |= reg4 << 8	5659:3:120038:120056	2630490	9	True				
ANR	2654924	AssignmentExpression	ao -> o |= reg4 << 8		2630490	0		|=			
ANR	2654925	PtrMemberAccess	ao -> o		2630490	0					
ANR	2654926	Identifier	ao		2630490	0					
ANR	2654927	Identifier	o		2630490	1					
ANR	2654928	ShiftExpression	reg4 << 8		2630490	1		<<			
ANR	2654929	Identifier	reg4		2630490	0					
ANR	2654930	PrimaryExpression	8		2630490	1					
ANR	2654931	ReturnStatement	return 4 ;	5660:3:120061:120069	2630490	10	True				
ANR	2654932	PrimaryExpression	4		2630490	0					
ANR	2654933	BreakStatement	break ;	5662:3:120086:120091	2630490	2	True				
ANR	2654934	Label	default :	5663:2:120095:120102	2630490	3	True				
ANR	2654935	Identifier	default		2630490	0					
ANR	2654936	ReturnStatement	return - 1 ;	5664:3:120107:120116	2630490	4	True				
ANR	2654937	UnaryOperationExpression	- 1		2630490	0					
ANR	2654938	UnaryOperator	-		2630490	0					
ANR	2654939	PrimaryExpression	1		2630490	1					
ANR	2654940	ElseStatement	else		2630490	0					
ANR	2654941	IfStatement	"if ( ( m = opmask ( ao -> op , ""umull"" , 0 ) ) )"		2630490	0					
ANR	2654942	Condition	"m = opmask ( ao -> op , ""umull"" , 0 )"	5667:5:120135:120167	2630490	0	True				
ANR	2654943	AssignmentExpression	"m = opmask ( ao -> op , ""umull"" , 0 )"		2630490	0		=			
ANR	2654944	Identifier	m		2630490	0					
ANR	2654945	CallExpression	"opmask ( ao -> op , ""umull"" , 0 )"		2630490	1					
ANR	2654946	Callee	opmask		2630490	0					
ANR	2654947	Identifier	opmask		2630490	0					
ANR	2654948	ArgumentList	ao -> op		2630490	1					
ANR	2654949	Argument	ao -> op		2630490	0					
ANR	2654950	PtrMemberAccess	ao -> op		2630490	0					
ANR	2654951	Identifier	ao		2630490	0					
ANR	2654952	Identifier	op		2630490	1					
ANR	2654953	Argument	"""umull"""		2630490	1					
ANR	2654954	PrimaryExpression	"""umull"""		2630490	0					
ANR	2654955	Argument	0		2630490	2					
ANR	2654956	PrimaryExpression	0		2630490	0					
ANR	2654957	CompoundStatement		4376:2:94315:94349	2630490	1					
ANR	2654958	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5668:2:120174:120208	2630490	0	True				
ANR	2654959	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2654960	IdentifierDeclType	ut64		2630490	0					
ANR	2654961	Identifier	argt		2630490	1					
ANR	2654962	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2654963	Identifier	argt		2630490	0					
ANR	2654964	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2654965	Callee	thumb_selector		2630490	0					
ANR	2654966	Identifier	thumb_selector		2630490	0					
ANR	2654967	ArgumentList	ao -> a		2630490	1					
ANR	2654968	Argument	ao -> a		2630490	0					
ANR	2654969	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654970	Identifier	ao		2630490	0					
ANR	2654971	Identifier	a		2630490	1					
ANR	2654972	SwitchStatement	switch ( argt )		2630490	1					
ANR	2654973	Condition	argt	5669:10:120220:120223	2630490	0	True				
ANR	2654974	Identifier	argt		2630490	0					
ANR	2654975	CompoundStatement		4377:16:94367:94367	2630490	1					
ANR	2654976	Label	case THUMB_REG_REG_REG_REG :	5670:2:120230:120256	2630490	0	True				
ANR	2654977	Identifier	THUMB_REG_REG_REG_REG		2630490	0					
ANR	2654978	CompoundStatement		4382:3:94503:94531	2630490	1					
ANR	2654979	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5671:3:120263:120291	2630490	0	True				
ANR	2654980	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2654981	IdentifierDeclType	ut8		2630490	0					
ANR	2654982	Identifier	reg1		2630490	1					
ANR	2654983	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2654984	Identifier	reg1		2630490	0					
ANR	2654985	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2654986	Callee	getreg		2630490	0					
ANR	2654987	Identifier	getreg		2630490	0					
ANR	2654988	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2654989	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2654990	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2654991	PtrMemberAccess	ao -> a		2630490	0					
ANR	2654992	Identifier	ao		2630490	0					
ANR	2654993	Identifier	a		2630490	1					
ANR	2654994	PrimaryExpression	0		2630490	1					
ANR	2654995	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5672:3:120296:120324	2630490	1	True				
ANR	2654996	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2654997	IdentifierDeclType	ut8		2630490	0					
ANR	2654998	Identifier	reg2		2630490	1					
ANR	2654999	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2655000	Identifier	reg2		2630490	0					
ANR	2655001	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2655002	Callee	getreg		2630490	0					
ANR	2655003	Identifier	getreg		2630490	0					
ANR	2655004	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2655005	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2655006	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2655007	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655008	Identifier	ao		2630490	0					
ANR	2655009	Identifier	a		2630490	1					
ANR	2655010	PrimaryExpression	1		2630490	1					
ANR	2655011	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	5673:3:120329:120357	2630490	2	True				
ANR	2655012	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2655013	IdentifierDeclType	ut8		2630490	0					
ANR	2655014	Identifier	reg3		2630490	1					
ANR	2655015	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2655016	Identifier	reg3		2630490	0					
ANR	2655017	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2655018	Callee	getreg		2630490	0					
ANR	2655019	Identifier	getreg		2630490	0					
ANR	2655020	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2655021	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2655022	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2655023	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655024	Identifier	ao		2630490	0					
ANR	2655025	Identifier	a		2630490	1					
ANR	2655026	PrimaryExpression	2		2630490	1					
ANR	2655027	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	5674:3:120362:120390	2630490	3	True				
ANR	2655028	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		2630490	0					
ANR	2655029	IdentifierDeclType	ut8		2630490	0					
ANR	2655030	Identifier	reg4		2630490	1					
ANR	2655031	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2655032	Identifier	reg4		2630490	0					
ANR	2655033	CallExpression	getreg ( ao -> a [ 3 ] )		2630490	1					
ANR	2655034	Callee	getreg		2630490	0					
ANR	2655035	Identifier	getreg		2630490	0					
ANR	2655036	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2655037	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2655038	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2655039	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655040	Identifier	ao		2630490	0					
ANR	2655041	Identifier	a		2630490	1					
ANR	2655042	PrimaryExpression	3		2630490	1					
ANR	2655043	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) )		2630490	4					
ANR	2655044	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )	5676:7:120400:120455	2630490	0	True				
ANR	2655045	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		2630490	0		||			
ANR	2655046	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2655047	Identifier	reg1		2630490	0					
ANR	2655048	PrimaryExpression	15		2630490	1					
ANR	2655049	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		2630490	1		||			
ANR	2655050	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2655051	Identifier	reg2		2630490	0					
ANR	2655052	PrimaryExpression	15		2630490	1					
ANR	2655053	OrExpression	( reg3 > 15 ) || ( reg4 > 15 )		2630490	1		||			
ANR	2655054	RelationalExpression	reg3 > 15		2630490	0		>			
ANR	2655055	Identifier	reg3		2630490	0					
ANR	2655056	PrimaryExpression	15		2630490	1					
ANR	2655057	RelationalExpression	reg4 > 15		2630490	1		>			
ANR	2655058	Identifier	reg4		2630490	0					
ANR	2655059	PrimaryExpression	15		2630490	1					
ANR	2655060	CompoundStatement		4384:65:94599:94599	2630490	1					
ANR	2655061	ReturnStatement	return - 1 ;	5677:4:120464:120473	2630490	0	True				
ANR	2655062	UnaryOperationExpression	- 1		2630490	0					
ANR	2655063	UnaryOperator	-		2630490	0					
ANR	2655064	PrimaryExpression	1		2630490	1					
ANR	2655065	ExpressionStatement	ao -> o = 0xa0fb0000	5680:3:120487:120505	2630490	5	True				
ANR	2655066	AssignmentExpression	ao -> o = 0xa0fb0000		2630490	0		=			
ANR	2655067	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655068	Identifier	ao		2630490	0					
ANR	2655069	Identifier	o		2630490	1					
ANR	2655070	PrimaryExpression	0xa0fb0000		2630490	1					
ANR	2655071	ExpressionStatement	ao -> o |= reg1 << 4	5681:3:120510:120528	2630490	6	True				
ANR	2655072	AssignmentExpression	ao -> o |= reg1 << 4		2630490	0		|=			
ANR	2655073	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655074	Identifier	ao		2630490	0					
ANR	2655075	Identifier	o		2630490	1					
ANR	2655076	ShiftExpression	reg1 << 4		2630490	1		<<			
ANR	2655077	Identifier	reg1		2630490	0					
ANR	2655078	PrimaryExpression	4		2630490	1					
ANR	2655079	ExpressionStatement	ao -> o |= reg2	5682:3:120533:120546	2630490	7	True				
ANR	2655080	AssignmentExpression	ao -> o |= reg2		2630490	0		|=			
ANR	2655081	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655082	Identifier	ao		2630490	0					
ANR	2655083	Identifier	o		2630490	1					
ANR	2655084	Identifier	reg2		2630490	1					
ANR	2655085	ExpressionStatement	ao -> o |= reg3 << 24	5683:3:120551:120570	2630490	8	True				
ANR	2655086	AssignmentExpression	ao -> o |= reg3 << 24		2630490	0		|=			
ANR	2655087	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655088	Identifier	ao		2630490	0					
ANR	2655089	Identifier	o		2630490	1					
ANR	2655090	ShiftExpression	reg3 << 24		2630490	1		<<			
ANR	2655091	Identifier	reg3		2630490	0					
ANR	2655092	PrimaryExpression	24		2630490	1					
ANR	2655093	ExpressionStatement	ao -> o |= reg4 << 8	5684:3:120575:120593	2630490	9	True				
ANR	2655094	AssignmentExpression	ao -> o |= reg4 << 8		2630490	0		|=			
ANR	2655095	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655096	Identifier	ao		2630490	0					
ANR	2655097	Identifier	o		2630490	1					
ANR	2655098	ShiftExpression	reg4 << 8		2630490	1		<<			
ANR	2655099	Identifier	reg4		2630490	0					
ANR	2655100	PrimaryExpression	8		2630490	1					
ANR	2655101	ReturnStatement	return 4 ;	5685:3:120598:120606	2630490	10	True				
ANR	2655102	PrimaryExpression	4		2630490	0					
ANR	2655103	BreakStatement	break ;	5687:3:120623:120628	2630490	2	True				
ANR	2655104	Label	default :	5688:2:120632:120639	2630490	3	True				
ANR	2655105	Identifier	default		2630490	0					
ANR	2655106	ReturnStatement	return - 1 ;	5689:3:120644:120653	2630490	4	True				
ANR	2655107	UnaryOperationExpression	- 1		2630490	0					
ANR	2655108	UnaryOperator	-		2630490	0					
ANR	2655109	PrimaryExpression	1		2630490	1					
ANR	2655110	ElseStatement	else		2630490	0					
ANR	2655111	IfStatement	"if ( ( m = opmask ( ao -> op , ""uqadd"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		2630490	0					
ANR	2655112	Condition	"m = opmask ( ao -> op , ""uqadd"" , EIGHT_BIT | SIXTEEN_BIT )"	5692:5:120672:120726	2630490	0	True				
ANR	2655113	AssignmentExpression	"m = opmask ( ao -> op , ""uqadd"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	0		=			
ANR	2655114	Identifier	m		2630490	0					
ANR	2655115	CallExpression	"opmask ( ao -> op , ""uqadd"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	1					
ANR	2655116	Callee	opmask		2630490	0					
ANR	2655117	Identifier	opmask		2630490	0					
ANR	2655118	ArgumentList	ao -> op		2630490	1					
ANR	2655119	Argument	ao -> op		2630490	0					
ANR	2655120	PtrMemberAccess	ao -> op		2630490	0					
ANR	2655121	Identifier	ao		2630490	0					
ANR	2655122	Identifier	op		2630490	1					
ANR	2655123	Argument	"""uqadd"""		2630490	1					
ANR	2655124	PrimaryExpression	"""uqadd"""		2630490	0					
ANR	2655125	Argument	EIGHT_BIT | SIXTEEN_BIT		2630490	2					
ANR	2655126	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		2630490	0		|			
ANR	2655127	Identifier	EIGHT_BIT		2630490	0					
ANR	2655128	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2655129	CompoundStatement		4402:2:94912:94955	2630490	1					
ANR	2655130	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5693:2:120733:120767	2630490	0	True				
ANR	2655131	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2655132	IdentifierDeclType	ut64		2630490	0					
ANR	2655133	Identifier	argt		2630490	1					
ANR	2655134	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2655135	Identifier	argt		2630490	0					
ANR	2655136	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2655137	Callee	thumb_selector		2630490	0					
ANR	2655138	Identifier	thumb_selector		2630490	0					
ANR	2655139	ArgumentList	ao -> a		2630490	1					
ANR	2655140	Argument	ao -> a		2630490	0					
ANR	2655141	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655142	Identifier	ao		2630490	0					
ANR	2655143	Identifier	a		2630490	1					
ANR	2655144	IdentifierDeclStatement	ut64 sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT ) ;	5694:2:120771:120814	2630490	1	True				
ANR	2655145	IdentifierDecl	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		2630490	0					
ANR	2655146	IdentifierDeclType	ut64		2630490	0					
ANR	2655147	Identifier	sufsel		2630490	1					
ANR	2655148	AssignmentExpression	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		2630490	2		=			
ANR	2655149	Identifier	sufsel		2630490	0					
ANR	2655150	BitAndExpression	m & ( EIGHT_BIT | SIXTEEN_BIT )		2630490	1		&			
ANR	2655151	Identifier	m		2630490	0					
ANR	2655152	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2655153	Identifier	EIGHT_BIT		2630490	0					
ANR	2655154	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2655155	SwitchStatement	switch ( argt )		2630490	2					
ANR	2655156	Condition	argt	5695:10:120826:120829	2630490	0	True				
ANR	2655157	Identifier	argt		2630490	0					
ANR	2655158	CompoundStatement		4403:16:94973:94973	2630490	1					
ANR	2655159	Label	case THUMB_REG_REG :	5696:2:120836:120854	2630490	0	True				
ANR	2655160	Identifier	THUMB_REG_REG		2630490	0					
ANR	2655161	CompoundStatement		4404:22:94997:94997	2630490	1					
ANR	2655162	ExpressionStatement	std_opt_2 ( ao )	5697:3:120861:120875	2630490	0	True				
ANR	2655163	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2655164	Callee	std_opt_2		2630490	0					
ANR	2655165	Identifier	std_opt_2		2630490	0					
ANR	2655166	ArgumentList	ao		2630490	1					
ANR	2655167	Argument	ao		2630490	0					
ANR	2655168	Identifier	ao		2630490	0					
ANR	2655169	Label	case THUMB_REG_REG_REG :	5700:2:120921:120943	2630490	2	True				
ANR	2655170	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2655171	CompoundStatement		4408:26:95086:95086	2630490	3					
ANR	2655172	IfStatement	if ( sufsel == EIGHT_BIT )		2630490	0					
ANR	2655173	Condition	sufsel == EIGHT_BIT	5701:7:120954:120972	2630490	0	True				
ANR	2655174	EqualityExpression	sufsel == EIGHT_BIT		2630490	0		==			
ANR	2655175	Identifier	sufsel		2630490	0					
ANR	2655176	Identifier	EIGHT_BIT		2630490	1					
ANR	2655177	CompoundStatement		4409:28:95116:95116	2630490	1					
ANR	2655178	ExpressionStatement	ao -> o = 0x80fa50f0	5702:4:120981:120999	2630490	0	True				
ANR	2655179	AssignmentExpression	ao -> o = 0x80fa50f0		2630490	0		=			
ANR	2655180	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655181	Identifier	ao		2630490	0					
ANR	2655182	Identifier	o		2630490	1					
ANR	2655183	PrimaryExpression	0x80fa50f0		2630490	1					
ANR	2655184	ElseStatement	else		2630490	0					
ANR	2655185	IfStatement	if ( sufsel == SIXTEEN_BIT )		2630490	0					
ANR	2655186	Condition	sufsel == SIXTEEN_BIT	5704:7:121019:121039	2630490	0	True				
ANR	2655187	EqualityExpression	sufsel == SIXTEEN_BIT		2630490	0		==			
ANR	2655188	Identifier	sufsel		2630490	0					
ANR	2655189	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2655190	CompoundStatement		4412:30:95183:95183	2630490	1					
ANR	2655191	ExpressionStatement	ao -> o = 0x90fa50f0	5705:4:121048:121066	2630490	0	True				
ANR	2655192	AssignmentExpression	ao -> o = 0x90fa50f0		2630490	0		=			
ANR	2655193	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655194	Identifier	ao		2630490	0					
ANR	2655195	Identifier	o		2630490	1					
ANR	2655196	PrimaryExpression	0x90fa50f0		2630490	1					
ANR	2655197	ElseStatement	else		2630490	0					
ANR	2655198	CompoundStatement		4414:10:95219:95219	2630490	0					
ANR	2655199	ReturnStatement	return - 1 ;	5707:4:121084:121093	2630490	0	True				
ANR	2655200	UnaryOperationExpression	- 1		2630490	0					
ANR	2655201	UnaryOperator	-		2630490	0					
ANR	2655202	PrimaryExpression	1		2630490	1					
ANR	2655203	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5710:3:121108:121144	2630490	1	True				
ANR	2655204	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2655205	Callee	std_32bit_3reg		2630490	0					
ANR	2655206	Identifier	std_32bit_3reg		2630490	0					
ANR	2655207	ArgumentList	ao		2630490	1					
ANR	2655208	Argument	ao		2630490	0					
ANR	2655209	Identifier	ao		2630490	0					
ANR	2655210	Argument	m		2630490	1					
ANR	2655211	Identifier	m		2630490	0					
ANR	2655212	Argument	false		2630490	2					
ANR	2655213	Identifier	false		2630490	0					
ANR	2655214	BreakStatement	break ;	5712:3:121161:121166	2630490	4	True				
ANR	2655215	Label	default :	5713:2:121170:121177	2630490	5	True				
ANR	2655216	Identifier	default		2630490	0					
ANR	2655217	ReturnStatement	return - 1 ;	5714:3:121182:121191	2630490	6	True				
ANR	2655218	UnaryOperationExpression	- 1		2630490	0					
ANR	2655219	UnaryOperator	-		2630490	0					
ANR	2655220	PrimaryExpression	1		2630490	1					
ANR	2655221	ElseStatement	else		2630490	0					
ANR	2655222	IfStatement	"if ( ( m = opmask ( ao -> op , ""uqasx"" , 0 ) ) )"		2630490	0					
ANR	2655223	Condition	"m = opmask ( ao -> op , ""uqasx"" , 0 )"	5717:5:121210:121242	2630490	0	True				
ANR	2655224	AssignmentExpression	"m = opmask ( ao -> op , ""uqasx"" , 0 )"		2630490	0		=			
ANR	2655225	Identifier	m		2630490	0					
ANR	2655226	CallExpression	"opmask ( ao -> op , ""uqasx"" , 0 )"		2630490	1					
ANR	2655227	Callee	opmask		2630490	0					
ANR	2655228	Identifier	opmask		2630490	0					
ANR	2655229	ArgumentList	ao -> op		2630490	1					
ANR	2655230	Argument	ao -> op		2630490	0					
ANR	2655231	PtrMemberAccess	ao -> op		2630490	0					
ANR	2655232	Identifier	ao		2630490	0					
ANR	2655233	Identifier	op		2630490	1					
ANR	2655234	Argument	"""uqasx"""		2630490	1					
ANR	2655235	PrimaryExpression	"""uqasx"""		2630490	0					
ANR	2655236	Argument	0		2630490	2					
ANR	2655237	PrimaryExpression	0		2630490	0					
ANR	2655238	CompoundStatement		4426:2:95390:95424	2630490	1					
ANR	2655239	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5718:2:121249:121283	2630490	0	True				
ANR	2655240	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2655241	IdentifierDeclType	ut64		2630490	0					
ANR	2655242	Identifier	argt		2630490	1					
ANR	2655243	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2655244	Identifier	argt		2630490	0					
ANR	2655245	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2655246	Callee	thumb_selector		2630490	0					
ANR	2655247	Identifier	thumb_selector		2630490	0					
ANR	2655248	ArgumentList	ao -> a		2630490	1					
ANR	2655249	Argument	ao -> a		2630490	0					
ANR	2655250	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655251	Identifier	ao		2630490	0					
ANR	2655252	Identifier	a		2630490	1					
ANR	2655253	SwitchStatement	switch ( argt )		2630490	1					
ANR	2655254	Condition	argt	5719:10:121295:121298	2630490	0	True				
ANR	2655255	Identifier	argt		2630490	0					
ANR	2655256	CompoundStatement		4427:16:95442:95442	2630490	1					
ANR	2655257	Label	case THUMB_REG_REG :	5720:2:121305:121323	2630490	0	True				
ANR	2655258	Identifier	THUMB_REG_REG		2630490	0					
ANR	2655259	CompoundStatement		4428:22:95466:95466	2630490	1					
ANR	2655260	ExpressionStatement	std_opt_2 ( ao )	5721:3:121330:121344	2630490	0	True				
ANR	2655261	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2655262	Callee	std_opt_2		2630490	0					
ANR	2655263	Identifier	std_opt_2		2630490	0					
ANR	2655264	ArgumentList	ao		2630490	1					
ANR	2655265	Argument	ao		2630490	0					
ANR	2655266	Identifier	ao		2630490	0					
ANR	2655267	Label	case THUMB_REG_REG_REG :	5724:2:121390:121412	2630490	2	True				
ANR	2655268	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2655269	CompoundStatement		4432:26:95555:95555	2630490	3					
ANR	2655270	ExpressionStatement	ao -> o = 0xa0fa50f0	5725:3:121419:121437	2630490	0	True				
ANR	2655271	AssignmentExpression	ao -> o = 0xa0fa50f0		2630490	0		=			
ANR	2655272	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655273	Identifier	ao		2630490	0					
ANR	2655274	Identifier	o		2630490	1					
ANR	2655275	PrimaryExpression	0xa0fa50f0		2630490	1					
ANR	2655276	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5727:3:121446:121482	2630490	1	True				
ANR	2655277	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2655278	Callee	std_32bit_3reg		2630490	0					
ANR	2655279	Identifier	std_32bit_3reg		2630490	0					
ANR	2655280	ArgumentList	ao		2630490	1					
ANR	2655281	Argument	ao		2630490	0					
ANR	2655282	Identifier	ao		2630490	0					
ANR	2655283	Argument	m		2630490	1					
ANR	2655284	Identifier	m		2630490	0					
ANR	2655285	Argument	false		2630490	2					
ANR	2655286	Identifier	false		2630490	0					
ANR	2655287	BreakStatement	break ;	5729:3:121499:121504	2630490	4	True				
ANR	2655288	Label	default :	5730:2:121508:121515	2630490	5	True				
ANR	2655289	Identifier	default		2630490	0					
ANR	2655290	ReturnStatement	return - 1 ;	5731:3:121520:121529	2630490	6	True				
ANR	2655291	UnaryOperationExpression	- 1		2630490	0					
ANR	2655292	UnaryOperator	-		2630490	0					
ANR	2655293	PrimaryExpression	1		2630490	1					
ANR	2655294	ElseStatement	else		2630490	0					
ANR	2655295	IfStatement	"if ( ( m = opmask ( ao -> op , ""uqsax"" , 0 ) ) )"		2630490	0					
ANR	2655296	Condition	"m = opmask ( ao -> op , ""uqsax"" , 0 )"	5734:5:121548:121580	2630490	0	True				
ANR	2655297	AssignmentExpression	"m = opmask ( ao -> op , ""uqsax"" , 0 )"		2630490	0		=			
ANR	2655298	Identifier	m		2630490	0					
ANR	2655299	CallExpression	"opmask ( ao -> op , ""uqsax"" , 0 )"		2630490	1					
ANR	2655300	Callee	opmask		2630490	0					
ANR	2655301	Identifier	opmask		2630490	0					
ANR	2655302	ArgumentList	ao -> op		2630490	1					
ANR	2655303	Argument	ao -> op		2630490	0					
ANR	2655304	PtrMemberAccess	ao -> op		2630490	0					
ANR	2655305	Identifier	ao		2630490	0					
ANR	2655306	Identifier	op		2630490	1					
ANR	2655307	Argument	"""uqsax"""		2630490	1					
ANR	2655308	PrimaryExpression	"""uqsax"""		2630490	0					
ANR	2655309	Argument	0		2630490	2					
ANR	2655310	PrimaryExpression	0		2630490	0					
ANR	2655311	CompoundStatement		4443:2:95728:95762	2630490	1					
ANR	2655312	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5735:2:121587:121621	2630490	0	True				
ANR	2655313	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2655314	IdentifierDeclType	ut64		2630490	0					
ANR	2655315	Identifier	argt		2630490	1					
ANR	2655316	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2655317	Identifier	argt		2630490	0					
ANR	2655318	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2655319	Callee	thumb_selector		2630490	0					
ANR	2655320	Identifier	thumb_selector		2630490	0					
ANR	2655321	ArgumentList	ao -> a		2630490	1					
ANR	2655322	Argument	ao -> a		2630490	0					
ANR	2655323	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655324	Identifier	ao		2630490	0					
ANR	2655325	Identifier	a		2630490	1					
ANR	2655326	SwitchStatement	switch ( argt )		2630490	1					
ANR	2655327	Condition	argt	5736:10:121633:121636	2630490	0	True				
ANR	2655328	Identifier	argt		2630490	0					
ANR	2655329	CompoundStatement		4444:16:95780:95780	2630490	1					
ANR	2655330	Label	case THUMB_REG_REG :	5737:2:121643:121661	2630490	0	True				
ANR	2655331	Identifier	THUMB_REG_REG		2630490	0					
ANR	2655332	CompoundStatement		4445:22:95804:95804	2630490	1					
ANR	2655333	ExpressionStatement	std_opt_2 ( ao )	5738:3:121668:121682	2630490	0	True				
ANR	2655334	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2655335	Callee	std_opt_2		2630490	0					
ANR	2655336	Identifier	std_opt_2		2630490	0					
ANR	2655337	ArgumentList	ao		2630490	1					
ANR	2655338	Argument	ao		2630490	0					
ANR	2655339	Identifier	ao		2630490	0					
ANR	2655340	Label	case THUMB_REG_REG_REG :	5741:2:121728:121750	2630490	2	True				
ANR	2655341	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2655342	CompoundStatement		4449:26:95893:95893	2630490	3					
ANR	2655343	ExpressionStatement	ao -> o = 0xe0fa50f0	5742:3:121757:121775	2630490	0	True				
ANR	2655344	AssignmentExpression	ao -> o = 0xe0fa50f0		2630490	0		=			
ANR	2655345	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655346	Identifier	ao		2630490	0					
ANR	2655347	Identifier	o		2630490	1					
ANR	2655348	PrimaryExpression	0xe0fa50f0		2630490	1					
ANR	2655349	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5744:3:121784:121820	2630490	1	True				
ANR	2655350	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2655351	Callee	std_32bit_3reg		2630490	0					
ANR	2655352	Identifier	std_32bit_3reg		2630490	0					
ANR	2655353	ArgumentList	ao		2630490	1					
ANR	2655354	Argument	ao		2630490	0					
ANR	2655355	Identifier	ao		2630490	0					
ANR	2655356	Argument	m		2630490	1					
ANR	2655357	Identifier	m		2630490	0					
ANR	2655358	Argument	false		2630490	2					
ANR	2655359	Identifier	false		2630490	0					
ANR	2655360	BreakStatement	break ;	5746:3:121837:121842	2630490	4	True				
ANR	2655361	Label	default :	5747:2:121846:121853	2630490	5	True				
ANR	2655362	Identifier	default		2630490	0					
ANR	2655363	ReturnStatement	return - 1 ;	5748:3:121858:121867	2630490	6	True				
ANR	2655364	UnaryOperationExpression	- 1		2630490	0					
ANR	2655365	UnaryOperator	-		2630490	0					
ANR	2655366	PrimaryExpression	1		2630490	1					
ANR	2655367	ElseStatement	else		2630490	0					
ANR	2655368	IfStatement	"if ( ( m = opmask ( ao -> op , ""uqsub"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		2630490	0					
ANR	2655369	Condition	"m = opmask ( ao -> op , ""uqsub"" , EIGHT_BIT | SIXTEEN_BIT )"	5751:5:121886:121940	2630490	0	True				
ANR	2655370	AssignmentExpression	"m = opmask ( ao -> op , ""uqsub"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	0		=			
ANR	2655371	Identifier	m		2630490	0					
ANR	2655372	CallExpression	"opmask ( ao -> op , ""uqsub"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	1					
ANR	2655373	Callee	opmask		2630490	0					
ANR	2655374	Identifier	opmask		2630490	0					
ANR	2655375	ArgumentList	ao -> op		2630490	1					
ANR	2655376	Argument	ao -> op		2630490	0					
ANR	2655377	PtrMemberAccess	ao -> op		2630490	0					
ANR	2655378	Identifier	ao		2630490	0					
ANR	2655379	Identifier	op		2630490	1					
ANR	2655380	Argument	"""uqsub"""		2630490	1					
ANR	2655381	PrimaryExpression	"""uqsub"""		2630490	0					
ANR	2655382	Argument	EIGHT_BIT | SIXTEEN_BIT		2630490	2					
ANR	2655383	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		2630490	0		|			
ANR	2655384	Identifier	EIGHT_BIT		2630490	0					
ANR	2655385	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2655386	CompoundStatement		4461:2:96126:96169	2630490	1					
ANR	2655387	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5752:2:121947:121981	2630490	0	True				
ANR	2655388	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2655389	IdentifierDeclType	ut64		2630490	0					
ANR	2655390	Identifier	argt		2630490	1					
ANR	2655391	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2655392	Identifier	argt		2630490	0					
ANR	2655393	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2655394	Callee	thumb_selector		2630490	0					
ANR	2655395	Identifier	thumb_selector		2630490	0					
ANR	2655396	ArgumentList	ao -> a		2630490	1					
ANR	2655397	Argument	ao -> a		2630490	0					
ANR	2655398	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655399	Identifier	ao		2630490	0					
ANR	2655400	Identifier	a		2630490	1					
ANR	2655401	IdentifierDeclStatement	ut64 sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT ) ;	5753:2:121985:122028	2630490	1	True				
ANR	2655402	IdentifierDecl	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		2630490	0					
ANR	2655403	IdentifierDeclType	ut64		2630490	0					
ANR	2655404	Identifier	sufsel		2630490	1					
ANR	2655405	AssignmentExpression	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		2630490	2		=			
ANR	2655406	Identifier	sufsel		2630490	0					
ANR	2655407	BitAndExpression	m & ( EIGHT_BIT | SIXTEEN_BIT )		2630490	1		&			
ANR	2655408	Identifier	m		2630490	0					
ANR	2655409	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2655410	Identifier	EIGHT_BIT		2630490	0					
ANR	2655411	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2655412	SwitchStatement	switch ( argt )		2630490	2					
ANR	2655413	Condition	argt	5754:10:122040:122043	2630490	0	True				
ANR	2655414	Identifier	argt		2630490	0					
ANR	2655415	CompoundStatement		4462:16:96187:96187	2630490	1					
ANR	2655416	Label	case THUMB_REG_REG :	5755:2:122050:122068	2630490	0	True				
ANR	2655417	Identifier	THUMB_REG_REG		2630490	0					
ANR	2655418	CompoundStatement		4463:22:96211:96211	2630490	1					
ANR	2655419	ExpressionStatement	std_opt_2 ( ao )	5756:3:122075:122089	2630490	0	True				
ANR	2655420	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2655421	Callee	std_opt_2		2630490	0					
ANR	2655422	Identifier	std_opt_2		2630490	0					
ANR	2655423	ArgumentList	ao		2630490	1					
ANR	2655424	Argument	ao		2630490	0					
ANR	2655425	Identifier	ao		2630490	0					
ANR	2655426	Label	case THUMB_REG_REG_REG :	5759:2:122135:122157	2630490	2	True				
ANR	2655427	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2655428	CompoundStatement		4467:26:96300:96300	2630490	3					
ANR	2655429	IfStatement	if ( sufsel == EIGHT_BIT )		2630490	0					
ANR	2655430	Condition	sufsel == EIGHT_BIT	5760:7:122168:122186	2630490	0	True				
ANR	2655431	EqualityExpression	sufsel == EIGHT_BIT		2630490	0		==			
ANR	2655432	Identifier	sufsel		2630490	0					
ANR	2655433	Identifier	EIGHT_BIT		2630490	1					
ANR	2655434	CompoundStatement		4468:28:96330:96330	2630490	1					
ANR	2655435	ExpressionStatement	ao -> o = 0xc0fa50f0	5761:4:122195:122213	2630490	0	True				
ANR	2655436	AssignmentExpression	ao -> o = 0xc0fa50f0		2630490	0		=			
ANR	2655437	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655438	Identifier	ao		2630490	0					
ANR	2655439	Identifier	o		2630490	1					
ANR	2655440	PrimaryExpression	0xc0fa50f0		2630490	1					
ANR	2655441	ElseStatement	else		2630490	0					
ANR	2655442	IfStatement	if ( sufsel == SIXTEEN_BIT )		2630490	0					
ANR	2655443	Condition	sufsel == SIXTEEN_BIT	5763:7:122233:122253	2630490	0	True				
ANR	2655444	EqualityExpression	sufsel == SIXTEEN_BIT		2630490	0		==			
ANR	2655445	Identifier	sufsel		2630490	0					
ANR	2655446	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2655447	CompoundStatement		4471:30:96397:96397	2630490	1					
ANR	2655448	ExpressionStatement	ao -> o = 0xd0fa50f0	5764:4:122262:122280	2630490	0	True				
ANR	2655449	AssignmentExpression	ao -> o = 0xd0fa50f0		2630490	0		=			
ANR	2655450	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655451	Identifier	ao		2630490	0					
ANR	2655452	Identifier	o		2630490	1					
ANR	2655453	PrimaryExpression	0xd0fa50f0		2630490	1					
ANR	2655454	ElseStatement	else		2630490	0					
ANR	2655455	CompoundStatement		4473:10:96433:96433	2630490	0					
ANR	2655456	ReturnStatement	return - 1 ;	5766:4:122298:122307	2630490	0	True				
ANR	2655457	UnaryOperationExpression	- 1		2630490	0					
ANR	2655458	UnaryOperator	-		2630490	0					
ANR	2655459	PrimaryExpression	1		2630490	1					
ANR	2655460	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5769:3:122322:122358	2630490	1	True				
ANR	2655461	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2655462	Callee	std_32bit_3reg		2630490	0					
ANR	2655463	Identifier	std_32bit_3reg		2630490	0					
ANR	2655464	ArgumentList	ao		2630490	1					
ANR	2655465	Argument	ao		2630490	0					
ANR	2655466	Identifier	ao		2630490	0					
ANR	2655467	Argument	m		2630490	1					
ANR	2655468	Identifier	m		2630490	0					
ANR	2655469	Argument	false		2630490	2					
ANR	2655470	Identifier	false		2630490	0					
ANR	2655471	BreakStatement	break ;	5771:3:122375:122380	2630490	4	True				
ANR	2655472	Label	default :	5772:2:122384:122391	2630490	5	True				
ANR	2655473	Identifier	default		2630490	0					
ANR	2655474	ReturnStatement	return - 1 ;	5773:3:122396:122405	2630490	6	True				
ANR	2655475	UnaryOperationExpression	- 1		2630490	0					
ANR	2655476	UnaryOperator	-		2630490	0					
ANR	2655477	PrimaryExpression	1		2630490	1					
ANR	2655478	ElseStatement	else		2630490	0					
ANR	2655479	IfStatement	"if ( ( m = opmask ( ao -> op , ""usad8"" , 0 ) ) )"		2630490	0					
ANR	2655480	Condition	"m = opmask ( ao -> op , ""usad8"" , 0 )"	5776:5:122424:122456	2630490	0	True				
ANR	2655481	AssignmentExpression	"m = opmask ( ao -> op , ""usad8"" , 0 )"		2630490	0		=			
ANR	2655482	Identifier	m		2630490	0					
ANR	2655483	CallExpression	"opmask ( ao -> op , ""usad8"" , 0 )"		2630490	1					
ANR	2655484	Callee	opmask		2630490	0					
ANR	2655485	Identifier	opmask		2630490	0					
ANR	2655486	ArgumentList	ao -> op		2630490	1					
ANR	2655487	Argument	ao -> op		2630490	0					
ANR	2655488	PtrMemberAccess	ao -> op		2630490	0					
ANR	2655489	Identifier	ao		2630490	0					
ANR	2655490	Identifier	op		2630490	1					
ANR	2655491	Argument	"""usad8"""		2630490	1					
ANR	2655492	PrimaryExpression	"""usad8"""		2630490	0					
ANR	2655493	Argument	0		2630490	2					
ANR	2655494	PrimaryExpression	0		2630490	0					
ANR	2655495	CompoundStatement		4485:2:96604:96638	2630490	1					
ANR	2655496	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5777:2:122463:122497	2630490	0	True				
ANR	2655497	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2655498	IdentifierDeclType	ut64		2630490	0					
ANR	2655499	Identifier	argt		2630490	1					
ANR	2655500	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2655501	Identifier	argt		2630490	0					
ANR	2655502	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2655503	Callee	thumb_selector		2630490	0					
ANR	2655504	Identifier	thumb_selector		2630490	0					
ANR	2655505	ArgumentList	ao -> a		2630490	1					
ANR	2655506	Argument	ao -> a		2630490	0					
ANR	2655507	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655508	Identifier	ao		2630490	0					
ANR	2655509	Identifier	a		2630490	1					
ANR	2655510	SwitchStatement	switch ( argt )		2630490	1					
ANR	2655511	Condition	argt	5778:10:122509:122512	2630490	0	True				
ANR	2655512	Identifier	argt		2630490	0					
ANR	2655513	CompoundStatement		4486:16:96656:96656	2630490	1					
ANR	2655514	Label	case THUMB_REG_REG :	5779:2:122519:122537	2630490	0	True				
ANR	2655515	Identifier	THUMB_REG_REG		2630490	0					
ANR	2655516	CompoundStatement		4487:22:96680:96680	2630490	1					
ANR	2655517	ExpressionStatement	std_opt_2 ( ao )	5780:3:122544:122558	2630490	0	True				
ANR	2655518	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2655519	Callee	std_opt_2		2630490	0					
ANR	2655520	Identifier	std_opt_2		2630490	0					
ANR	2655521	ArgumentList	ao		2630490	1					
ANR	2655522	Argument	ao		2630490	0					
ANR	2655523	Identifier	ao		2630490	0					
ANR	2655524	Label	case THUMB_REG_REG_REG :	5783:2:122604:122626	2630490	2	True				
ANR	2655525	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2655526	CompoundStatement		4491:26:96769:96769	2630490	3					
ANR	2655527	ExpressionStatement	ao -> o = 0x70fb00f0	5784:3:122633:122651	2630490	0	True				
ANR	2655528	AssignmentExpression	ao -> o = 0x70fb00f0		2630490	0		=			
ANR	2655529	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655530	Identifier	ao		2630490	0					
ANR	2655531	Identifier	o		2630490	1					
ANR	2655532	PrimaryExpression	0x70fb00f0		2630490	1					
ANR	2655533	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5786:3:122660:122696	2630490	1	True				
ANR	2655534	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2655535	Callee	std_32bit_3reg		2630490	0					
ANR	2655536	Identifier	std_32bit_3reg		2630490	0					
ANR	2655537	ArgumentList	ao		2630490	1					
ANR	2655538	Argument	ao		2630490	0					
ANR	2655539	Identifier	ao		2630490	0					
ANR	2655540	Argument	m		2630490	1					
ANR	2655541	Identifier	m		2630490	0					
ANR	2655542	Argument	false		2630490	2					
ANR	2655543	Identifier	false		2630490	0					
ANR	2655544	BreakStatement	break ;	5788:3:122713:122718	2630490	4	True				
ANR	2655545	Label	default :	5789:2:122722:122729	2630490	5	True				
ANR	2655546	Identifier	default		2630490	0					
ANR	2655547	ReturnStatement	return - 1 ;	5790:3:122734:122743	2630490	6	True				
ANR	2655548	UnaryOperationExpression	- 1		2630490	0					
ANR	2655549	UnaryOperator	-		2630490	0					
ANR	2655550	PrimaryExpression	1		2630490	1					
ANR	2655551	ElseStatement	else		2630490	0					
ANR	2655552	IfStatement	"if ( ( m = opmask ( ao -> op , ""usada8"" , 0 ) ) )"		2630490	0					
ANR	2655553	Condition	"m = opmask ( ao -> op , ""usada8"" , 0 )"	5793:5:122762:122795	2630490	0	True				
ANR	2655554	AssignmentExpression	"m = opmask ( ao -> op , ""usada8"" , 0 )"		2630490	0		=			
ANR	2655555	Identifier	m		2630490	0					
ANR	2655556	CallExpression	"opmask ( ao -> op , ""usada8"" , 0 )"		2630490	1					
ANR	2655557	Callee	opmask		2630490	0					
ANR	2655558	Identifier	opmask		2630490	0					
ANR	2655559	ArgumentList	ao -> op		2630490	1					
ANR	2655560	Argument	ao -> op		2630490	0					
ANR	2655561	PtrMemberAccess	ao -> op		2630490	0					
ANR	2655562	Identifier	ao		2630490	0					
ANR	2655563	Identifier	op		2630490	1					
ANR	2655564	Argument	"""usada8"""		2630490	1					
ANR	2655565	PrimaryExpression	"""usada8"""		2630490	0					
ANR	2655566	Argument	0		2630490	2					
ANR	2655567	PrimaryExpression	0		2630490	0					
ANR	2655568	CompoundStatement		4502:2:96943:96977	2630490	1					
ANR	2655569	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5794:2:122802:122836	2630490	0	True				
ANR	2655570	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2655571	IdentifierDeclType	ut64		2630490	0					
ANR	2655572	Identifier	argt		2630490	1					
ANR	2655573	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2655574	Identifier	argt		2630490	0					
ANR	2655575	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2655576	Callee	thumb_selector		2630490	0					
ANR	2655577	Identifier	thumb_selector		2630490	0					
ANR	2655578	ArgumentList	ao -> a		2630490	1					
ANR	2655579	Argument	ao -> a		2630490	0					
ANR	2655580	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655581	Identifier	ao		2630490	0					
ANR	2655582	Identifier	a		2630490	1					
ANR	2655583	SwitchStatement	switch ( argt )		2630490	1					
ANR	2655584	Condition	argt	5795:10:122848:122851	2630490	0	True				
ANR	2655585	Identifier	argt		2630490	0					
ANR	2655586	CompoundStatement		4503:16:96995:96995	2630490	1					
ANR	2655587	Label	case THUMB_REG_REG_REG_REG :	5796:2:122858:122884	2630490	0	True				
ANR	2655588	Identifier	THUMB_REG_REG_REG_REG		2630490	0					
ANR	2655589	CompoundStatement		4508:3:97131:97159	2630490	1					
ANR	2655590	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5797:3:122891:122919	2630490	0	True				
ANR	2655591	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2655592	IdentifierDeclType	ut8		2630490	0					
ANR	2655593	Identifier	reg1		2630490	1					
ANR	2655594	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2655595	Identifier	reg1		2630490	0					
ANR	2655596	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2655597	Callee	getreg		2630490	0					
ANR	2655598	Identifier	getreg		2630490	0					
ANR	2655599	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2655600	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2655601	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2655602	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655603	Identifier	ao		2630490	0					
ANR	2655604	Identifier	a		2630490	1					
ANR	2655605	PrimaryExpression	0		2630490	1					
ANR	2655606	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5798:3:122924:122952	2630490	1	True				
ANR	2655607	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2655608	IdentifierDeclType	ut8		2630490	0					
ANR	2655609	Identifier	reg2		2630490	1					
ANR	2655610	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2655611	Identifier	reg2		2630490	0					
ANR	2655612	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2655613	Callee	getreg		2630490	0					
ANR	2655614	Identifier	getreg		2630490	0					
ANR	2655615	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2655616	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2655617	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2655618	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655619	Identifier	ao		2630490	0					
ANR	2655620	Identifier	a		2630490	1					
ANR	2655621	PrimaryExpression	1		2630490	1					
ANR	2655622	IdentifierDeclStatement	ut8 reg3 = getreg ( ao -> a [ 2 ] ) ;	5799:3:122957:122985	2630490	2	True				
ANR	2655623	IdentifierDecl	reg3 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2655624	IdentifierDeclType	ut8		2630490	0					
ANR	2655625	Identifier	reg3		2630490	1					
ANR	2655626	AssignmentExpression	reg3 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2655627	Identifier	reg3		2630490	0					
ANR	2655628	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2655629	Callee	getreg		2630490	0					
ANR	2655630	Identifier	getreg		2630490	0					
ANR	2655631	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2655632	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2655633	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2655634	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655635	Identifier	ao		2630490	0					
ANR	2655636	Identifier	a		2630490	1					
ANR	2655637	PrimaryExpression	2		2630490	1					
ANR	2655638	IdentifierDeclStatement	ut8 reg4 = getreg ( ao -> a [ 3 ] ) ;	5800:3:122990:123018	2630490	3	True				
ANR	2655639	IdentifierDecl	reg4 = getreg ( ao -> a [ 3 ] )		2630490	0					
ANR	2655640	IdentifierDeclType	ut8		2630490	0					
ANR	2655641	Identifier	reg4		2630490	1					
ANR	2655642	AssignmentExpression	reg4 = getreg ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2655643	Identifier	reg4		2630490	0					
ANR	2655644	CallExpression	getreg ( ao -> a [ 3 ] )		2630490	1					
ANR	2655645	Callee	getreg		2630490	0					
ANR	2655646	Identifier	getreg		2630490	0					
ANR	2655647	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2655648	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2655649	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2655650	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655651	Identifier	ao		2630490	0					
ANR	2655652	Identifier	a		2630490	1					
ANR	2655653	PrimaryExpression	3		2630490	1					
ANR	2655654	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 ) )		2630490	4					
ANR	2655655	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )	5802:7:123028:123083	2630490	0	True				
ANR	2655656	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		2630490	0		||			
ANR	2655657	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2655658	Identifier	reg1		2630490	0					
ANR	2655659	PrimaryExpression	15		2630490	1					
ANR	2655660	OrExpression	( reg2 > 15 ) || ( reg3 > 15 ) || ( reg4 > 15 )		2630490	1		||			
ANR	2655661	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2655662	Identifier	reg2		2630490	0					
ANR	2655663	PrimaryExpression	15		2630490	1					
ANR	2655664	OrExpression	( reg3 > 15 ) || ( reg4 > 15 )		2630490	1		||			
ANR	2655665	RelationalExpression	reg3 > 15		2630490	0		>			
ANR	2655666	Identifier	reg3		2630490	0					
ANR	2655667	PrimaryExpression	15		2630490	1					
ANR	2655668	RelationalExpression	reg4 > 15		2630490	1		>			
ANR	2655669	Identifier	reg4		2630490	0					
ANR	2655670	PrimaryExpression	15		2630490	1					
ANR	2655671	CompoundStatement		4510:65:97227:97227	2630490	1					
ANR	2655672	ReturnStatement	return - 1 ;	5803:4:123092:123101	2630490	0	True				
ANR	2655673	UnaryOperationExpression	- 1		2630490	0					
ANR	2655674	UnaryOperator	-		2630490	0					
ANR	2655675	PrimaryExpression	1		2630490	1					
ANR	2655676	ExpressionStatement	ao -> o = 0x70fb0000	5806:3:123115:123133	2630490	5	True				
ANR	2655677	AssignmentExpression	ao -> o = 0x70fb0000		2630490	0		=			
ANR	2655678	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655679	Identifier	ao		2630490	0					
ANR	2655680	Identifier	o		2630490	1					
ANR	2655681	PrimaryExpression	0x70fb0000		2630490	1					
ANR	2655682	ExpressionStatement	ao -> o |= reg1	5807:3:123138:123151	2630490	6	True				
ANR	2655683	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2655684	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655685	Identifier	ao		2630490	0					
ANR	2655686	Identifier	o		2630490	1					
ANR	2655687	Identifier	reg1		2630490	1					
ANR	2655688	ExpressionStatement	ao -> o |= reg2 << 24	5808:3:123156:123175	2630490	7	True				
ANR	2655689	AssignmentExpression	ao -> o |= reg2 << 24		2630490	0		|=			
ANR	2655690	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655691	Identifier	ao		2630490	0					
ANR	2655692	Identifier	o		2630490	1					
ANR	2655693	ShiftExpression	reg2 << 24		2630490	1		<<			
ANR	2655694	Identifier	reg2		2630490	0					
ANR	2655695	PrimaryExpression	24		2630490	1					
ANR	2655696	ExpressionStatement	ao -> o |= reg3 << 8	5809:3:123180:123198	2630490	8	True				
ANR	2655697	AssignmentExpression	ao -> o |= reg3 << 8		2630490	0		|=			
ANR	2655698	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655699	Identifier	ao		2630490	0					
ANR	2655700	Identifier	o		2630490	1					
ANR	2655701	ShiftExpression	reg3 << 8		2630490	1		<<			
ANR	2655702	Identifier	reg3		2630490	0					
ANR	2655703	PrimaryExpression	8		2630490	1					
ANR	2655704	ExpressionStatement	ao -> o |= reg4 << 4	5810:3:123203:123221	2630490	9	True				
ANR	2655705	AssignmentExpression	ao -> o |= reg4 << 4		2630490	0		|=			
ANR	2655706	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655707	Identifier	ao		2630490	0					
ANR	2655708	Identifier	o		2630490	1					
ANR	2655709	ShiftExpression	reg4 << 4		2630490	1		<<			
ANR	2655710	Identifier	reg4		2630490	0					
ANR	2655711	PrimaryExpression	4		2630490	1					
ANR	2655712	ReturnStatement	return 4 ;	5811:3:123226:123234	2630490	10	True				
ANR	2655713	PrimaryExpression	4		2630490	0					
ANR	2655714	BreakStatement	break ;	5813:3:123251:123256	2630490	2	True				
ANR	2655715	Label	default :	5814:2:123260:123267	2630490	3	True				
ANR	2655716	Identifier	default		2630490	0					
ANR	2655717	ReturnStatement	return - 1 ;	5815:3:123272:123281	2630490	4	True				
ANR	2655718	UnaryOperationExpression	- 1		2630490	0					
ANR	2655719	UnaryOperator	-		2630490	0					
ANR	2655720	PrimaryExpression	1		2630490	1					
ANR	2655721	ElseStatement	else		2630490	0					
ANR	2655722	IfStatement	"if ( ( m = opmask ( ao -> op , ""usat"" , SIXTEEN_BIT ) ) )"		2630490	0					
ANR	2655723	Condition	"m = opmask ( ao -> op , ""usat"" , SIXTEEN_BIT )"	5818:5:123300:123341	2630490	0	True				
ANR	2655724	AssignmentExpression	"m = opmask ( ao -> op , ""usat"" , SIXTEEN_BIT )"		2630490	0		=			
ANR	2655725	Identifier	m		2630490	0					
ANR	2655726	CallExpression	"opmask ( ao -> op , ""usat"" , SIXTEEN_BIT )"		2630490	1					
ANR	2655727	Callee	opmask		2630490	0					
ANR	2655728	Identifier	opmask		2630490	0					
ANR	2655729	ArgumentList	ao -> op		2630490	1					
ANR	2655730	Argument	ao -> op		2630490	0					
ANR	2655731	PtrMemberAccess	ao -> op		2630490	0					
ANR	2655732	Identifier	ao		2630490	0					
ANR	2655733	Identifier	op		2630490	1					
ANR	2655734	Argument	"""usat"""		2630490	1					
ANR	2655735	PrimaryExpression	"""usat"""		2630490	0					
ANR	2655736	Argument	SIXTEEN_BIT		2630490	2					
ANR	2655737	Identifier	SIXTEEN_BIT		2630490	0					
ANR	2655738	CompoundStatement		4527:2:97489:97523	2630490	1					
ANR	2655739	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5819:2:123348:123382	2630490	0	True				
ANR	2655740	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2655741	IdentifierDeclType	ut64		2630490	0					
ANR	2655742	Identifier	argt		2630490	1					
ANR	2655743	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2655744	Identifier	argt		2630490	0					
ANR	2655745	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2655746	Callee	thumb_selector		2630490	0					
ANR	2655747	Identifier	thumb_selector		2630490	0					
ANR	2655748	ArgumentList	ao -> a		2630490	1					
ANR	2655749	Argument	ao -> a		2630490	0					
ANR	2655750	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655751	Identifier	ao		2630490	0					
ANR	2655752	Identifier	a		2630490	1					
ANR	2655753	SwitchStatement	switch ( argt )		2630490	1					
ANR	2655754	Condition	argt	5820:10:123394:123397	2630490	0	True				
ANR	2655755	Identifier	argt		2630490	0					
ANR	2655756	CompoundStatement		4528:16:97541:97541	2630490	1					
ANR	2655757	Label	case THUMB_REG_CONST_REG :	5821:2:123404:123428	2630490	0	True				
ANR	2655758	Identifier	THUMB_REG_CONST_REG		2630490	0					
ANR	2655759	CompoundStatement		4529:28:97571:97571	2630490	1					
ANR	2655760	IfStatement	if ( m & SIXTEEN_BIT )		2630490	0					
ANR	2655761	Condition	m & SIXTEEN_BIT	5822:7:123439:123453	2630490	0	True				
ANR	2655762	BitAndExpression	m & SIXTEEN_BIT		2630490	0		&			
ANR	2655763	Identifier	m		2630490	0					
ANR	2655764	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2655765	CompoundStatement		4533:4:97671:97699	2630490	1					
ANR	2655766	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5823:4:123462:123490	2630490	0	True				
ANR	2655767	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2655768	IdentifierDeclType	ut8		2630490	0					
ANR	2655769	Identifier	reg1		2630490	1					
ANR	2655770	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2655771	Identifier	reg1		2630490	0					
ANR	2655772	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2655773	Callee	getreg		2630490	0					
ANR	2655774	Identifier	getreg		2630490	0					
ANR	2655775	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2655776	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2655777	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2655778	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655779	Identifier	ao		2630490	0					
ANR	2655780	Identifier	a		2630490	1					
ANR	2655781	PrimaryExpression	0		2630490	1					
ANR	2655782	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 1 ] ) ;	5824:4:123496:123524	2630490	1	True				
ANR	2655783	IdentifierDecl	num = getnum ( ao -> a [ 1 ] )		2630490	0					
ANR	2655784	IdentifierDeclType	ut32		2630490	0					
ANR	2655785	Identifier	num		2630490	1					
ANR	2655786	AssignmentExpression	num = getnum ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2655787	Identifier	num		2630490	0					
ANR	2655788	CallExpression	getnum ( ao -> a [ 1 ] )		2630490	1					
ANR	2655789	Callee	getnum		2630490	0					
ANR	2655790	Identifier	getnum		2630490	0					
ANR	2655791	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2655792	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2655793	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2655794	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655795	Identifier	ao		2630490	0					
ANR	2655796	Identifier	a		2630490	1					
ANR	2655797	PrimaryExpression	1		2630490	1					
ANR	2655798	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 2 ] ) ;	5825:4:123530:123558	2630490	2	True				
ANR	2655799	IdentifierDecl	reg2 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2655800	IdentifierDeclType	ut8		2630490	0					
ANR	2655801	Identifier	reg2		2630490	1					
ANR	2655802	AssignmentExpression	reg2 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2655803	Identifier	reg2		2630490	0					
ANR	2655804	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2655805	Callee	getreg		2630490	0					
ANR	2655806	Identifier	getreg		2630490	0					
ANR	2655807	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2655808	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2655809	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2655810	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655811	Identifier	ao		2630490	0					
ANR	2655812	Identifier	a		2630490	1					
ANR	2655813	PrimaryExpression	2		2630490	1					
ANR	2655814	IfStatement	if ( ( reg1 > 15 ) || ( num > 15 ) || ( reg2 > 15 ) )		2630490	3					
ANR	2655815	Condition	( reg1 > 15 ) || ( num > 15 ) || ( reg2 > 15 )	5827:8:123569:123608	2630490	0	True				
ANR	2655816	OrExpression	( reg1 > 15 ) || ( num > 15 ) || ( reg2 > 15 )		2630490	0		||			
ANR	2655817	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2655818	Identifier	reg1		2630490	0					
ANR	2655819	PrimaryExpression	15		2630490	1					
ANR	2655820	OrExpression	( num > 15 ) || ( reg2 > 15 )		2630490	1		||			
ANR	2655821	RelationalExpression	num > 15		2630490	0		>			
ANR	2655822	Identifier	num		2630490	0					
ANR	2655823	PrimaryExpression	15		2630490	1					
ANR	2655824	RelationalExpression	reg2 > 15		2630490	1		>			
ANR	2655825	Identifier	reg2		2630490	0					
ANR	2655826	PrimaryExpression	15		2630490	1					
ANR	2655827	CompoundStatement		4535:50:97752:97752	2630490	1					
ANR	2655828	ReturnStatement	return - 1 ;	5828:5:123618:123627	2630490	0	True				
ANR	2655829	UnaryOperationExpression	- 1		2630490	0					
ANR	2655830	UnaryOperator	-		2630490	0					
ANR	2655831	PrimaryExpression	1		2630490	1					
ANR	2655832	ExpressionStatement	ao -> o = 0xa0f30000	5831:4:123640:123658	2630490	4	True				
ANR	2655833	AssignmentExpression	ao -> o = 0xa0f30000		2630490	0		=			
ANR	2655834	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655835	Identifier	ao		2630490	0					
ANR	2655836	Identifier	o		2630490	1					
ANR	2655837	PrimaryExpression	0xa0f30000		2630490	1					
ANR	2655838	ExpressionStatement	ao -> o |= reg1	5832:4:123664:123677	2630490	5	True				
ANR	2655839	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2655840	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655841	Identifier	ao		2630490	0					
ANR	2655842	Identifier	o		2630490	1					
ANR	2655843	Identifier	reg1		2630490	1					
ANR	2655844	ExpressionStatement	ao -> o |= reg2 << 24	5833:4:123683:123702	2630490	6	True				
ANR	2655845	AssignmentExpression	ao -> o |= reg2 << 24		2630490	0		|=			
ANR	2655846	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655847	Identifier	ao		2630490	0					
ANR	2655848	Identifier	o		2630490	1					
ANR	2655849	ShiftExpression	reg2 << 24		2630490	1		<<			
ANR	2655850	Identifier	reg2		2630490	0					
ANR	2655851	PrimaryExpression	24		2630490	1					
ANR	2655852	ExpressionStatement	ao -> o |= num << 8	5834:4:123708:123725	2630490	7	True				
ANR	2655853	AssignmentExpression	ao -> o |= num << 8		2630490	0		|=			
ANR	2655854	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655855	Identifier	ao		2630490	0					
ANR	2655856	Identifier	o		2630490	1					
ANR	2655857	ShiftExpression	num << 8		2630490	1		<<			
ANR	2655858	Identifier	num		2630490	0					
ANR	2655859	PrimaryExpression	8		2630490	1					
ANR	2655860	ReturnStatement	return 4 ;	5835:4:123731:123739	2630490	8	True				
ANR	2655861	PrimaryExpression	4		2630490	0					
ANR	2655862	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	5838:3:123750:123768	2630490	1	True				
ANR	2655863	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		2630490	0		=			
ANR	2655864	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2655865	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655866	Identifier	ao		2630490	0					
ANR	2655867	Identifier	a		2630490	1					
ANR	2655868	PrimaryExpression	3		2630490	1					
ANR	2655869	PrimaryExpression	"""lsl 0"""		2630490	1					
ANR	2655870	Label	case THUMB_REG_CONST_REG_SHIFT :	5841:2:123814:123844	2630490	2	True				
ANR	2655871	Identifier	THUMB_REG_CONST_REG_SHIFT		2630490	0					
ANR	2655872	CompoundStatement		4553:3:98091:98129	2630490	3					
ANR	2655873	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5842:3:123851:123879	2630490	0	True				
ANR	2655874	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2655875	IdentifierDeclType	ut8		2630490	0					
ANR	2655876	Identifier	reg1		2630490	1					
ANR	2655877	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2655878	Identifier	reg1		2630490	0					
ANR	2655879	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2655880	Callee	getreg		2630490	0					
ANR	2655881	Identifier	getreg		2630490	0					
ANR	2655882	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2655883	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2655884	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2655885	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655886	Identifier	ao		2630490	0					
ANR	2655887	Identifier	a		2630490	1					
ANR	2655888	PrimaryExpression	0		2630490	1					
ANR	2655889	IdentifierDeclStatement	ut32 num = getnum ( ao -> a [ 1 ] ) ;	5843:3:123884:123912	2630490	1	True				
ANR	2655890	IdentifierDecl	num = getnum ( ao -> a [ 1 ] )		2630490	0					
ANR	2655891	IdentifierDeclType	ut32		2630490	0					
ANR	2655892	Identifier	num		2630490	1					
ANR	2655893	AssignmentExpression	num = getnum ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2655894	Identifier	num		2630490	0					
ANR	2655895	CallExpression	getnum ( ao -> a [ 1 ] )		2630490	1					
ANR	2655896	Callee	getnum		2630490	0					
ANR	2655897	Identifier	getnum		2630490	0					
ANR	2655898	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2655899	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2655900	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2655901	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655902	Identifier	ao		2630490	0					
ANR	2655903	Identifier	a		2630490	1					
ANR	2655904	PrimaryExpression	1		2630490	1					
ANR	2655905	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 2 ] ) ;	5844:3:123917:123945	2630490	2	True				
ANR	2655906	IdentifierDecl	reg2 = getreg ( ao -> a [ 2 ] )		2630490	0					
ANR	2655907	IdentifierDeclType	ut8		2630490	0					
ANR	2655908	Identifier	reg2		2630490	1					
ANR	2655909	AssignmentExpression	reg2 = getreg ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2655910	Identifier	reg2		2630490	0					
ANR	2655911	CallExpression	getreg ( ao -> a [ 2 ] )		2630490	1					
ANR	2655912	Callee	getreg		2630490	0					
ANR	2655913	Identifier	getreg		2630490	0					
ANR	2655914	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2655915	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2655916	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2655917	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655918	Identifier	ao		2630490	0					
ANR	2655919	Identifier	a		2630490	1					
ANR	2655920	PrimaryExpression	2		2630490	1					
ANR	2655921	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 3 ] ) ;	5845:3:123950:123988	2630490	3	True				
ANR	2655922	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 3 ] )		2630490	0					
ANR	2655923	IdentifierDeclType	ut32		2630490	0					
ANR	2655924	Identifier	shift		2630490	1					
ANR	2655925	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2655926	Identifier	shift		2630490	0					
ANR	2655927	CallExpression	thumb_getshift ( ao -> a [ 3 ] )		2630490	1					
ANR	2655928	Callee	thumb_getshift		2630490	0					
ANR	2655929	Identifier	thumb_getshift		2630490	0					
ANR	2655930	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2655931	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2655932	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2655933	PtrMemberAccess	ao -> a		2630490	0					
ANR	2655934	Identifier	ao		2630490	0					
ANR	2655935	Identifier	a		2630490	1					
ANR	2655936	PrimaryExpression	3		2630490	1					
ANR	2655937	IfStatement	if ( ( reg1 > 15 ) || ( num > 31 ) || ( reg2 > 15 ) || ( m & SIXTEEN_BIT ) || ( ( shift & 0x00001000 ) != 0 ) )		2630490	4					
ANR	2655938	Condition	( reg1 > 15 ) || ( num > 31 ) || ( reg2 > 15 ) || ( m & SIXTEEN_BIT ) || ( ( shift & 0x00001000 ) != 0 )	5847:7:123998:124089	2630490	0	True				
ANR	2655939	OrExpression	( reg1 > 15 ) || ( num > 31 ) || ( reg2 > 15 ) || ( m & SIXTEEN_BIT ) || ( ( shift & 0x00001000 ) != 0 )		2630490	0		||			
ANR	2655940	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2655941	Identifier	reg1		2630490	0					
ANR	2655942	PrimaryExpression	15		2630490	1					
ANR	2655943	OrExpression	( num > 31 ) || ( reg2 > 15 ) || ( m & SIXTEEN_BIT ) || ( ( shift & 0x00001000 ) != 0 )		2630490	1		||			
ANR	2655944	RelationalExpression	num > 31		2630490	0		>			
ANR	2655945	Identifier	num		2630490	0					
ANR	2655946	PrimaryExpression	31		2630490	1					
ANR	2655947	OrExpression	( reg2 > 15 ) || ( m & SIXTEEN_BIT ) || ( ( shift & 0x00001000 ) != 0 )		2630490	1		||			
ANR	2655948	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2655949	Identifier	reg2		2630490	0					
ANR	2655950	PrimaryExpression	15		2630490	1					
ANR	2655951	OrExpression	( m & SIXTEEN_BIT ) || ( ( shift & 0x00001000 ) != 0 )		2630490	1		||			
ANR	2655952	BitAndExpression	m & SIXTEEN_BIT		2630490	0		&			
ANR	2655953	Identifier	m		2630490	0					
ANR	2655954	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2655955	EqualityExpression	( shift & 0x00001000 ) != 0		2630490	1		!=			
ANR	2655956	BitAndExpression	shift & 0x00001000		2630490	0		&			
ANR	2655957	Identifier	shift		2630490	0					
ANR	2655958	PrimaryExpression	0x00001000		2630490	1					
ANR	2655959	PrimaryExpression	0		2630490	1					
ANR	2655960	CompoundStatement		4555:101:98233:98233	2630490	1					
ANR	2655961	ReturnStatement	return - 1 ;	5848:4:124098:124107	2630490	0	True				
ANR	2655962	UnaryOperationExpression	- 1		2630490	0					
ANR	2655963	UnaryOperator	-		2630490	0					
ANR	2655964	PrimaryExpression	1		2630490	1					
ANR	2655965	ExpressionStatement	ao -> o = 0x80f30000	5851:3:124118:124136	2630490	5	True				
ANR	2655966	AssignmentExpression	ao -> o = 0x80f30000		2630490	0		=			
ANR	2655967	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655968	Identifier	ao		2630490	0					
ANR	2655969	Identifier	o		2630490	1					
ANR	2655970	PrimaryExpression	0x80f30000		2630490	1					
ANR	2655971	ExpressionStatement	ao -> o |= reg1	5852:3:124141:124154	2630490	6	True				
ANR	2655972	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2655973	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655974	Identifier	ao		2630490	0					
ANR	2655975	Identifier	o		2630490	1					
ANR	2655976	Identifier	reg1		2630490	1					
ANR	2655977	ExpressionStatement	ao -> o |= ( num & 0xf ) << 8	5853:3:124159:124184	2630490	7	True				
ANR	2655978	AssignmentExpression	ao -> o |= ( num & 0xf ) << 8		2630490	0		|=			
ANR	2655979	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655980	Identifier	ao		2630490	0					
ANR	2655981	Identifier	o		2630490	1					
ANR	2655982	ShiftExpression	( num & 0xf ) << 8		2630490	1		<<			
ANR	2655983	BitAndExpression	num & 0xf		2630490	0		&			
ANR	2655984	Identifier	num		2630490	0					
ANR	2655985	PrimaryExpression	0xf		2630490	1					
ANR	2655986	PrimaryExpression	8		2630490	1					
ANR	2655987	ExpressionStatement	ao -> o |= ( num >> 4 ) << 12	5854:3:124189:124215	2630490	8	True				
ANR	2655988	AssignmentExpression	ao -> o |= ( num >> 4 ) << 12		2630490	0		|=			
ANR	2655989	PtrMemberAccess	ao -> o		2630490	0					
ANR	2655990	Identifier	ao		2630490	0					
ANR	2655991	Identifier	o		2630490	1					
ANR	2655992	ShiftExpression	( num >> 4 ) << 12		2630490	1		<<			
ANR	2655993	ShiftExpression	num >> 4		2630490	0		>>			
ANR	2655994	Identifier	num		2630490	0					
ANR	2655995	PrimaryExpression	4		2630490	1					
ANR	2655996	PrimaryExpression	12		2630490	1					
ANR	2655997	ExpressionStatement	ao -> o |= reg2 << 24	5855:3:124220:124239	2630490	9	True				
ANR	2655998	AssignmentExpression	ao -> o |= reg2 << 24		2630490	0		|=			
ANR	2655999	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656000	Identifier	ao		2630490	0					
ANR	2656001	Identifier	o		2630490	1					
ANR	2656002	ShiftExpression	reg2 << 24		2630490	1		<<			
ANR	2656003	Identifier	reg2		2630490	0					
ANR	2656004	PrimaryExpression	24		2630490	1					
ANR	2656005	ExpressionStatement	ao -> o |= ( shift & 0x00002000 ) << 16	5856:3:124244:124279	2630490	10	True				
ANR	2656006	AssignmentExpression	ao -> o |= ( shift & 0x00002000 ) << 16		2630490	0		|=			
ANR	2656007	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656008	Identifier	ao		2630490	0					
ANR	2656009	Identifier	o		2630490	1					
ANR	2656010	ShiftExpression	( shift & 0x00002000 ) << 16		2630490	1		<<			
ANR	2656011	BitAndExpression	shift & 0x00002000		2630490	0		&			
ANR	2656012	Identifier	shift		2630490	0					
ANR	2656013	PrimaryExpression	0x00002000		2630490	1					
ANR	2656014	PrimaryExpression	16		2630490	1					
ANR	2656015	ExpressionStatement	ao -> o |= ( shift & 0x0000c070 )	5857:3:124284:124313	2630490	11	True				
ANR	2656016	AssignmentExpression	ao -> o |= ( shift & 0x0000c070 )		2630490	0		|=			
ANR	2656017	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656018	Identifier	ao		2630490	0					
ANR	2656019	Identifier	o		2630490	1					
ANR	2656020	BitAndExpression	shift & 0x0000c070		2630490	1		&			
ANR	2656021	Identifier	shift		2630490	0					
ANR	2656022	PrimaryExpression	0x0000c070		2630490	1					
ANR	2656023	ReturnStatement	return 4 ;	5858:3:124318:124326	2630490	12	True				
ANR	2656024	PrimaryExpression	4		2630490	0					
ANR	2656025	BreakStatement	break ;	5860:3:124343:124348	2630490	4	True				
ANR	2656026	Label	default :	5861:2:124352:124359	2630490	5	True				
ANR	2656027	Identifier	default		2630490	0					
ANR	2656028	ReturnStatement	return - 1 ;	5862:3:124364:124373	2630490	6	True				
ANR	2656029	UnaryOperationExpression	- 1		2630490	0					
ANR	2656030	UnaryOperator	-		2630490	0					
ANR	2656031	PrimaryExpression	1		2630490	1					
ANR	2656032	ElseStatement	else		2630490	0					
ANR	2656033	IfStatement	"if ( ( m = opmask ( ao -> op , ""usax"" , 0 ) ) )"		2630490	0					
ANR	2656034	Condition	"m = opmask ( ao -> op , ""usax"" , 0 )"	5865:5:124392:124423	2630490	0	True				
ANR	2656035	AssignmentExpression	"m = opmask ( ao -> op , ""usax"" , 0 )"		2630490	0		=			
ANR	2656036	Identifier	m		2630490	0					
ANR	2656037	CallExpression	"opmask ( ao -> op , ""usax"" , 0 )"		2630490	1					
ANR	2656038	Callee	opmask		2630490	0					
ANR	2656039	Identifier	opmask		2630490	0					
ANR	2656040	ArgumentList	ao -> op		2630490	1					
ANR	2656041	Argument	ao -> op		2630490	0					
ANR	2656042	PtrMemberAccess	ao -> op		2630490	0					
ANR	2656043	Identifier	ao		2630490	0					
ANR	2656044	Identifier	op		2630490	1					
ANR	2656045	Argument	"""usax"""		2630490	1					
ANR	2656046	PrimaryExpression	"""usax"""		2630490	0					
ANR	2656047	Argument	0		2630490	2					
ANR	2656048	PrimaryExpression	0		2630490	0					
ANR	2656049	CompoundStatement		4574:2:98571:98605	2630490	1					
ANR	2656050	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5866:2:124430:124464	2630490	0	True				
ANR	2656051	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2656052	IdentifierDeclType	ut64		2630490	0					
ANR	2656053	Identifier	argt		2630490	1					
ANR	2656054	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2656055	Identifier	argt		2630490	0					
ANR	2656056	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2656057	Callee	thumb_selector		2630490	0					
ANR	2656058	Identifier	thumb_selector		2630490	0					
ANR	2656059	ArgumentList	ao -> a		2630490	1					
ANR	2656060	Argument	ao -> a		2630490	0					
ANR	2656061	PtrMemberAccess	ao -> a		2630490	0					
ANR	2656062	Identifier	ao		2630490	0					
ANR	2656063	Identifier	a		2630490	1					
ANR	2656064	SwitchStatement	switch ( argt )		2630490	1					
ANR	2656065	Condition	argt	5867:10:124476:124479	2630490	0	True				
ANR	2656066	Identifier	argt		2630490	0					
ANR	2656067	CompoundStatement		4575:16:98623:98623	2630490	1					
ANR	2656068	Label	case THUMB_REG_REG :	5868:2:124486:124504	2630490	0	True				
ANR	2656069	Identifier	THUMB_REG_REG		2630490	0					
ANR	2656070	CompoundStatement		4576:22:98647:98647	2630490	1					
ANR	2656071	ExpressionStatement	std_opt_2 ( ao )	5869:3:124511:124525	2630490	0	True				
ANR	2656072	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2656073	Callee	std_opt_2		2630490	0					
ANR	2656074	Identifier	std_opt_2		2630490	0					
ANR	2656075	ArgumentList	ao		2630490	1					
ANR	2656076	Argument	ao		2630490	0					
ANR	2656077	Identifier	ao		2630490	0					
ANR	2656078	Label	case THUMB_REG_REG_REG :	5872:2:124571:124593	2630490	2	True				
ANR	2656079	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2656080	CompoundStatement		4580:26:98736:98736	2630490	3					
ANR	2656081	ExpressionStatement	ao -> o = 0xe0fa40f0	5873:3:124600:124618	2630490	0	True				
ANR	2656082	AssignmentExpression	ao -> o = 0xe0fa40f0		2630490	0		=			
ANR	2656083	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656084	Identifier	ao		2630490	0					
ANR	2656085	Identifier	o		2630490	1					
ANR	2656086	PrimaryExpression	0xe0fa40f0		2630490	1					
ANR	2656087	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5875:3:124627:124663	2630490	1	True				
ANR	2656088	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2656089	Callee	std_32bit_3reg		2630490	0					
ANR	2656090	Identifier	std_32bit_3reg		2630490	0					
ANR	2656091	ArgumentList	ao		2630490	1					
ANR	2656092	Argument	ao		2630490	0					
ANR	2656093	Identifier	ao		2630490	0					
ANR	2656094	Argument	m		2630490	1					
ANR	2656095	Identifier	m		2630490	0					
ANR	2656096	Argument	false		2630490	2					
ANR	2656097	Identifier	false		2630490	0					
ANR	2656098	BreakStatement	break ;	5877:3:124680:124685	2630490	4	True				
ANR	2656099	Label	default :	5878:2:124689:124696	2630490	5	True				
ANR	2656100	Identifier	default		2630490	0					
ANR	2656101	ReturnStatement	return - 1 ;	5879:3:124701:124710	2630490	6	True				
ANR	2656102	UnaryOperationExpression	- 1		2630490	0					
ANR	2656103	UnaryOperator	-		2630490	0					
ANR	2656104	PrimaryExpression	1		2630490	1					
ANR	2656105	ElseStatement	else		2630490	0					
ANR	2656106	IfStatement	"if ( ( m = opmask ( ao -> op , ""usub"" , EIGHT_BIT | SIXTEEN_BIT ) ) )"		2630490	0					
ANR	2656107	Condition	"m = opmask ( ao -> op , ""usub"" , EIGHT_BIT | SIXTEEN_BIT )"	5882:5:124729:124782	2630490	0	True				
ANR	2656108	AssignmentExpression	"m = opmask ( ao -> op , ""usub"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	0		=			
ANR	2656109	Identifier	m		2630490	0					
ANR	2656110	CallExpression	"opmask ( ao -> op , ""usub"" , EIGHT_BIT | SIXTEEN_BIT )"		2630490	1					
ANR	2656111	Callee	opmask		2630490	0					
ANR	2656112	Identifier	opmask		2630490	0					
ANR	2656113	ArgumentList	ao -> op		2630490	1					
ANR	2656114	Argument	ao -> op		2630490	0					
ANR	2656115	PtrMemberAccess	ao -> op		2630490	0					
ANR	2656116	Identifier	ao		2630490	0					
ANR	2656117	Identifier	op		2630490	1					
ANR	2656118	Argument	"""usub"""		2630490	1					
ANR	2656119	PrimaryExpression	"""usub"""		2630490	0					
ANR	2656120	Argument	EIGHT_BIT | SIXTEEN_BIT		2630490	2					
ANR	2656121	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		2630490	0		|			
ANR	2656122	Identifier	EIGHT_BIT		2630490	0					
ANR	2656123	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2656124	CompoundStatement		4592:2:98968:99011	2630490	1					
ANR	2656125	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5883:2:124789:124823	2630490	0	True				
ANR	2656126	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2656127	IdentifierDeclType	ut64		2630490	0					
ANR	2656128	Identifier	argt		2630490	1					
ANR	2656129	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2656130	Identifier	argt		2630490	0					
ANR	2656131	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2656132	Callee	thumb_selector		2630490	0					
ANR	2656133	Identifier	thumb_selector		2630490	0					
ANR	2656134	ArgumentList	ao -> a		2630490	1					
ANR	2656135	Argument	ao -> a		2630490	0					
ANR	2656136	PtrMemberAccess	ao -> a		2630490	0					
ANR	2656137	Identifier	ao		2630490	0					
ANR	2656138	Identifier	a		2630490	1					
ANR	2656139	IdentifierDeclStatement	ut64 sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT ) ;	5884:2:124827:124870	2630490	1	True				
ANR	2656140	IdentifierDecl	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		2630490	0					
ANR	2656141	IdentifierDeclType	ut64		2630490	0					
ANR	2656142	Identifier	sufsel		2630490	1					
ANR	2656143	AssignmentExpression	sufsel = m & ( EIGHT_BIT | SIXTEEN_BIT )		2630490	2		=			
ANR	2656144	Identifier	sufsel		2630490	0					
ANR	2656145	BitAndExpression	m & ( EIGHT_BIT | SIXTEEN_BIT )		2630490	1		&			
ANR	2656146	Identifier	m		2630490	0					
ANR	2656147	InclusiveOrExpression	EIGHT_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2656148	Identifier	EIGHT_BIT		2630490	0					
ANR	2656149	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2656150	SwitchStatement	switch ( argt )		2630490	2					
ANR	2656151	Condition	argt	5885:10:124882:124885	2630490	0	True				
ANR	2656152	Identifier	argt		2630490	0					
ANR	2656153	CompoundStatement		4593:16:99029:99029	2630490	1					
ANR	2656154	Label	case THUMB_REG_REG :	5886:2:124892:124910	2630490	0	True				
ANR	2656155	Identifier	THUMB_REG_REG		2630490	0					
ANR	2656156	CompoundStatement		4594:22:99053:99053	2630490	1					
ANR	2656157	ExpressionStatement	std_opt_2 ( ao )	5887:3:124917:124931	2630490	0	True				
ANR	2656158	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2656159	Callee	std_opt_2		2630490	0					
ANR	2656160	Identifier	std_opt_2		2630490	0					
ANR	2656161	ArgumentList	ao		2630490	1					
ANR	2656162	Argument	ao		2630490	0					
ANR	2656163	Identifier	ao		2630490	0					
ANR	2656164	Label	case THUMB_REG_REG_REG :	5890:2:124977:124999	2630490	2	True				
ANR	2656165	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2656166	CompoundStatement		4598:26:99142:99142	2630490	3					
ANR	2656167	IfStatement	if ( sufsel == EIGHT_BIT )		2630490	0					
ANR	2656168	Condition	sufsel == EIGHT_BIT	5891:7:125010:125028	2630490	0	True				
ANR	2656169	EqualityExpression	sufsel == EIGHT_BIT		2630490	0		==			
ANR	2656170	Identifier	sufsel		2630490	0					
ANR	2656171	Identifier	EIGHT_BIT		2630490	1					
ANR	2656172	CompoundStatement		4599:28:99172:99172	2630490	1					
ANR	2656173	ExpressionStatement	ao -> o = 0xc0fa40f0	5892:4:125037:125055	2630490	0	True				
ANR	2656174	AssignmentExpression	ao -> o = 0xc0fa40f0		2630490	0		=			
ANR	2656175	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656176	Identifier	ao		2630490	0					
ANR	2656177	Identifier	o		2630490	1					
ANR	2656178	PrimaryExpression	0xc0fa40f0		2630490	1					
ANR	2656179	ElseStatement	else		2630490	0					
ANR	2656180	IfStatement	if ( sufsel == SIXTEEN_BIT )		2630490	0					
ANR	2656181	Condition	sufsel == SIXTEEN_BIT	5894:7:125075:125095	2630490	0	True				
ANR	2656182	EqualityExpression	sufsel == SIXTEEN_BIT		2630490	0		==			
ANR	2656183	Identifier	sufsel		2630490	0					
ANR	2656184	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2656185	CompoundStatement		4602:30:99239:99239	2630490	1					
ANR	2656186	ExpressionStatement	ao -> o = 0xd0fa40f0	5895:4:125104:125122	2630490	0	True				
ANR	2656187	AssignmentExpression	ao -> o = 0xd0fa40f0		2630490	0		=			
ANR	2656188	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656189	Identifier	ao		2630490	0					
ANR	2656190	Identifier	o		2630490	1					
ANR	2656191	PrimaryExpression	0xd0fa40f0		2630490	1					
ANR	2656192	ElseStatement	else		2630490	0					
ANR	2656193	CompoundStatement		4604:10:99275:99275	2630490	0					
ANR	2656194	ReturnStatement	return - 1 ;	5897:4:125140:125149	2630490	0	True				
ANR	2656195	UnaryOperationExpression	- 1		2630490	0					
ANR	2656196	UnaryOperator	-		2630490	0					
ANR	2656197	PrimaryExpression	1		2630490	1					
ANR	2656198	ReturnStatement	"return std_32bit_3reg ( ao , m , false ) ;"	5900:3:125164:125200	2630490	1	True				
ANR	2656199	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2656200	Callee	std_32bit_3reg		2630490	0					
ANR	2656201	Identifier	std_32bit_3reg		2630490	0					
ANR	2656202	ArgumentList	ao		2630490	1					
ANR	2656203	Argument	ao		2630490	0					
ANR	2656204	Identifier	ao		2630490	0					
ANR	2656205	Argument	m		2630490	1					
ANR	2656206	Identifier	m		2630490	0					
ANR	2656207	Argument	false		2630490	2					
ANR	2656208	Identifier	false		2630490	0					
ANR	2656209	BreakStatement	break ;	5902:3:125217:125222	2630490	4	True				
ANR	2656210	Label	default :	5903:2:125226:125233	2630490	5	True				
ANR	2656211	Identifier	default		2630490	0					
ANR	2656212	ReturnStatement	return - 1 ;	5904:3:125238:125247	2630490	6	True				
ANR	2656213	UnaryOperationExpression	- 1		2630490	0					
ANR	2656214	UnaryOperator	-		2630490	0					
ANR	2656215	PrimaryExpression	1		2630490	1					
ANR	2656216	ElseStatement	else		2630490	0					
ANR	2656217	IfStatement	"if ( ( m = opmask ( ao -> op , ""uxta"" , B_BIT | H_BIT | SIXTEEN_BIT ) ) )"		2630490	0					
ANR	2656218	Condition	"m = opmask ( ao -> op , ""uxta"" , B_BIT | H_BIT | SIXTEEN_BIT )"	5907:5:125266:125323	2630490	0	True				
ANR	2656219	AssignmentExpression	"m = opmask ( ao -> op , ""uxta"" , B_BIT | H_BIT | SIXTEEN_BIT )"		2630490	0		=			
ANR	2656220	Identifier	m		2630490	0					
ANR	2656221	CallExpression	"opmask ( ao -> op , ""uxta"" , B_BIT | H_BIT | SIXTEEN_BIT )"		2630490	1					
ANR	2656222	Callee	opmask		2630490	0					
ANR	2656223	Identifier	opmask		2630490	0					
ANR	2656224	ArgumentList	ao -> op		2630490	1					
ANR	2656225	Argument	ao -> op		2630490	0					
ANR	2656226	PtrMemberAccess	ao -> op		2630490	0					
ANR	2656227	Identifier	ao		2630490	0					
ANR	2656228	Identifier	op		2630490	1					
ANR	2656229	Argument	"""uxta"""		2630490	1					
ANR	2656230	PrimaryExpression	"""uxta"""		2630490	0					
ANR	2656231	Argument	B_BIT | H_BIT | SIXTEEN_BIT		2630490	2					
ANR	2656232	InclusiveOrExpression	B_BIT | H_BIT | SIXTEEN_BIT		2630490	0		|			
ANR	2656233	Identifier	B_BIT		2630490	0					
ANR	2656234	InclusiveOrExpression	H_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2656235	Identifier	H_BIT		2630490	0					
ANR	2656236	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2656237	CompoundStatement		4617:2:99509:99556	2630490	1					
ANR	2656238	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5908:2:125330:125364	2630490	0	True				
ANR	2656239	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2656240	IdentifierDeclType	ut64		2630490	0					
ANR	2656241	Identifier	argt		2630490	1					
ANR	2656242	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2656243	Identifier	argt		2630490	0					
ANR	2656244	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2656245	Callee	thumb_selector		2630490	0					
ANR	2656246	Identifier	thumb_selector		2630490	0					
ANR	2656247	ArgumentList	ao -> a		2630490	1					
ANR	2656248	Argument	ao -> a		2630490	0					
ANR	2656249	PtrMemberAccess	ao -> a		2630490	0					
ANR	2656250	Identifier	ao		2630490	0					
ANR	2656251	Identifier	a		2630490	1					
ANR	2656252	IdentifierDeclStatement	ut64 sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT ) ;	5909:2:125368:125415	2630490	1	True				
ANR	2656253	IdentifierDecl	sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT )		2630490	0					
ANR	2656254	IdentifierDeclType	ut64		2630490	0					
ANR	2656255	Identifier	sufsel		2630490	1					
ANR	2656256	AssignmentExpression	sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT )		2630490	2		=			
ANR	2656257	Identifier	sufsel		2630490	0					
ANR	2656258	BitAndExpression	m & ( B_BIT | H_BIT | SIXTEEN_BIT )		2630490	1		&			
ANR	2656259	Identifier	m		2630490	0					
ANR	2656260	InclusiveOrExpression	B_BIT | H_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2656261	Identifier	B_BIT		2630490	0					
ANR	2656262	InclusiveOrExpression	H_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2656263	Identifier	H_BIT		2630490	0					
ANR	2656264	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2656265	SwitchStatement	switch ( argt )		2630490	2					
ANR	2656266	Condition	argt	5910:10:125427:125430	2630490	0	True				
ANR	2656267	Identifier	argt		2630490	0					
ANR	2656268	CompoundStatement		4618:16:99574:99574	2630490	1					
ANR	2656269	Label	case THUMB_REG_REG :	5911:2:125437:125455	2630490	0	True				
ANR	2656270	Identifier	THUMB_REG_REG		2630490	0					
ANR	2656271	CompoundStatement		4619:22:99598:99598	2630490	1					
ANR	2656272	ExpressionStatement	std_opt_2 ( ao )	5912:3:125462:125476	2630490	0	True				
ANR	2656273	CallExpression	std_opt_2 ( ao )		2630490	0					
ANR	2656274	Callee	std_opt_2		2630490	0					
ANR	2656275	Identifier	std_opt_2		2630490	0					
ANR	2656276	ArgumentList	ao		2630490	1					
ANR	2656277	Argument	ao		2630490	0					
ANR	2656278	Identifier	ao		2630490	0					
ANR	2656279	Label	case THUMB_REG_REG_REG :	5915:2:125522:125544	2630490	2	True				
ANR	2656280	Identifier	THUMB_REG_REG_REG		2630490	0					
ANR	2656281	CompoundStatement		4623:26:99687:99687	2630490	3					
ANR	2656282	ExpressionStatement	"ao -> a [ 3 ] = ""lsl 0"""	5916:3:125551:125569	2630490	0	True				
ANR	2656283	AssignmentExpression	"ao -> a [ 3 ] = ""lsl 0"""		2630490	0		=			
ANR	2656284	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2656285	PtrMemberAccess	ao -> a		2630490	0					
ANR	2656286	Identifier	ao		2630490	0					
ANR	2656287	Identifier	a		2630490	1					
ANR	2656288	PrimaryExpression	3		2630490	1					
ANR	2656289	PrimaryExpression	"""lsl 0"""		2630490	1					
ANR	2656290	Label	case THUMB_REG_REG_SHIFT :	5919:2:125615:125639	2630490	4	True				
ANR	2656291	Identifier	THUMB_REG_REG_SHIFT		2630490	0					
ANR	2656292	CompoundStatement		4627:28:99782:99782	2630490	5					
ANR	2656293	IfStatement	if ( ao -> a [ 3 ] == NULL )		2630490	0					
ANR	2656294	Condition	ao -> a [ 3 ] == NULL	5920:7:125650:125665	2630490	0	True				
ANR	2656295	EqualityExpression	ao -> a [ 3 ] == NULL		2630490	0		==			
ANR	2656296	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2656297	PtrMemberAccess	ao -> a		2630490	0					
ANR	2656298	Identifier	ao		2630490	0					
ANR	2656299	Identifier	a		2630490	1					
ANR	2656300	PrimaryExpression	3		2630490	1					
ANR	2656301	Identifier	NULL		2630490	1					
ANR	2656302	CompoundStatement		4628:25:99809:99809	2630490	1					
ANR	2656303	ExpressionStatement	std_opt_3 ( ao )	5921:4:125696:125710	2630490	0	True				
ANR	2656304	CallExpression	std_opt_3 ( ao )		2630490	0					
ANR	2656305	Callee	std_opt_3		2630490	0					
ANR	2656306	Identifier	std_opt_3		2630490	0					
ANR	2656307	ArgumentList	ao		2630490	1					
ANR	2656308	Argument	ao		2630490	0					
ANR	2656309	Identifier	ao		2630490	0					
ANR	2656310	Label	case THUMB_REG_REG_REG_SHIFT :	5925:2:125761:125789	2630490	6	True				
ANR	2656311	Identifier	THUMB_REG_REG_REG_SHIFT		2630490	0					
ANR	2656312	CompoundStatement		4634:3:99937:99975	2630490	7					
ANR	2656313	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 3 ] ) ;	5926:3:125796:125834	2630490	0	True				
ANR	2656314	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 3 ] )		2630490	0					
ANR	2656315	IdentifierDeclType	ut32		2630490	0					
ANR	2656316	Identifier	shift		2630490	1					
ANR	2656317	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 3 ] )		2630490	2		=			
ANR	2656318	Identifier	shift		2630490	0					
ANR	2656319	CallExpression	thumb_getshift ( ao -> a [ 3 ] )		2630490	1					
ANR	2656320	Callee	thumb_getshift		2630490	0					
ANR	2656321	Identifier	thumb_getshift		2630490	0					
ANR	2656322	ArgumentList	ao -> a [ 3 ]		2630490	1					
ANR	2656323	Argument	ao -> a [ 3 ]		2630490	0					
ANR	2656324	ArrayIndexing	ao -> a [ 3 ]		2630490	0					
ANR	2656325	PtrMemberAccess	ao -> a		2630490	0					
ANR	2656326	Identifier	ao		2630490	0					
ANR	2656327	Identifier	a		2630490	1					
ANR	2656328	PrimaryExpression	3		2630490	1					
ANR	2656329	IfStatement	if ( shift && ( ( shift & 0x0000f010 ) != 0x00003000 ) )		2630490	1					
ANR	2656330	Condition	shift && ( ( shift & 0x0000f010 ) != 0x00003000 )	5928:7:125844:125888	2630490	0	True				
ANR	2656331	AndExpression	shift && ( ( shift & 0x0000f010 ) != 0x00003000 )		2630490	0		&&			
ANR	2656332	Identifier	shift		2630490	0					
ANR	2656333	EqualityExpression	( shift & 0x0000f010 ) != 0x00003000		2630490	1		!=			
ANR	2656334	BitAndExpression	shift & 0x0000f010		2630490	0		&			
ANR	2656335	Identifier	shift		2630490	0					
ANR	2656336	PrimaryExpression	0x0000f010		2630490	1					
ANR	2656337	PrimaryExpression	0x00003000		2630490	1					
ANR	2656338	CompoundStatement		4636:54:100032:100032	2630490	1					
ANR	2656339	ReturnStatement	return - 1 ;	5929:4:125897:125906	2630490	0	True				
ANR	2656340	UnaryOperationExpression	- 1		2630490	0					
ANR	2656341	UnaryOperator	-		2630490	0					
ANR	2656342	PrimaryExpression	1		2630490	1					
ANR	2656343	IfStatement	if ( sufsel == B_BIT )		2630490	2					
ANR	2656344	Condition	sufsel == B_BIT	5932:7:125921:125935	2630490	0	True				
ANR	2656345	EqualityExpression	sufsel == B_BIT		2630490	0		==			
ANR	2656346	Identifier	sufsel		2630490	0					
ANR	2656347	Identifier	B_BIT		2630490	1					
ANR	2656348	CompoundStatement		4640:24:100079:100079	2630490	1					
ANR	2656349	ExpressionStatement	ao -> o = 0x50fa80f0	5933:4:125944:125962	2630490	0	True				
ANR	2656350	AssignmentExpression	ao -> o = 0x50fa80f0		2630490	0		=			
ANR	2656351	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656352	Identifier	ao		2630490	0					
ANR	2656353	Identifier	o		2630490	1					
ANR	2656354	PrimaryExpression	0x50fa80f0		2630490	1					
ANR	2656355	ElseStatement	else		2630490	0					
ANR	2656356	IfStatement	if ( sufsel == ( B_BIT | SIXTEEN_BIT ) )		2630490	0					
ANR	2656357	Condition	sufsel == ( B_BIT | SIXTEEN_BIT )	5935:7:125981:126011	2630490	0	True				
ANR	2656358	EqualityExpression	sufsel == ( B_BIT | SIXTEEN_BIT )		2630490	0		==			
ANR	2656359	Identifier	sufsel		2630490	0					
ANR	2656360	InclusiveOrExpression	B_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2656361	Identifier	B_BIT		2630490	0					
ANR	2656362	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2656363	CompoundStatement		4643:40:100155:100155	2630490	1					
ANR	2656364	ExpressionStatement	ao -> o = 0x30fa80f0	5936:4:126020:126038	2630490	0	True				
ANR	2656365	AssignmentExpression	ao -> o = 0x30fa80f0		2630490	0		=			
ANR	2656366	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656367	Identifier	ao		2630490	0					
ANR	2656368	Identifier	o		2630490	1					
ANR	2656369	PrimaryExpression	0x30fa80f0		2630490	1					
ANR	2656370	ElseStatement	else		2630490	0					
ANR	2656371	IfStatement	if ( sufsel == H_BIT )		2630490	0					
ANR	2656372	Condition	sufsel == H_BIT	5938:7:126057:126071	2630490	0	True				
ANR	2656373	EqualityExpression	sufsel == H_BIT		2630490	0		==			
ANR	2656374	Identifier	sufsel		2630490	0					
ANR	2656375	Identifier	H_BIT		2630490	1					
ANR	2656376	CompoundStatement		4646:24:100215:100215	2630490	1					
ANR	2656377	ExpressionStatement	ao -> o = 0x10fa80f0	5939:4:126080:126098	2630490	0	True				
ANR	2656378	AssignmentExpression	ao -> o = 0x10fa80f0		2630490	0		=			
ANR	2656379	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656380	Identifier	ao		2630490	0					
ANR	2656381	Identifier	o		2630490	1					
ANR	2656382	PrimaryExpression	0x10fa80f0		2630490	1					
ANR	2656383	ElseStatement	else		2630490	0					
ANR	2656384	CompoundStatement		4648:10:100251:100251	2630490	0					
ANR	2656385	ReturnStatement	return - 1 ;	5941:4:126116:126125	2630490	0	True				
ANR	2656386	UnaryOperationExpression	- 1		2630490	0					
ANR	2656387	UnaryOperator	-		2630490	0					
ANR	2656388	PrimaryExpression	1		2630490	1					
ANR	2656389	ExpressionStatement	ao -> o |= ( shift & 0x00000060 ) << 7	5944:3:126136:126170	2630490	3	True				
ANR	2656390	AssignmentExpression	ao -> o |= ( shift & 0x00000060 ) << 7		2630490	0		|=			
ANR	2656391	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656392	Identifier	ao		2630490	0					
ANR	2656393	Identifier	o		2630490	1					
ANR	2656394	ShiftExpression	( shift & 0x00000060 ) << 7		2630490	1		<<			
ANR	2656395	BitAndExpression	shift & 0x00000060		2630490	0		&			
ANR	2656396	Identifier	shift		2630490	0					
ANR	2656397	PrimaryExpression	0x00000060		2630490	1					
ANR	2656398	PrimaryExpression	7		2630490	1					
ANR	2656399	ReturnStatement	"return ( std_32bit_3reg ( ao , m , false ) ) ;"	5945:3:126175:126213	2630490	4	True				
ANR	2656400	CallExpression	"std_32bit_3reg ( ao , m , false )"		2630490	0					
ANR	2656401	Callee	std_32bit_3reg		2630490	0					
ANR	2656402	Identifier	std_32bit_3reg		2630490	0					
ANR	2656403	ArgumentList	ao		2630490	1					
ANR	2656404	Argument	ao		2630490	0					
ANR	2656405	Identifier	ao		2630490	0					
ANR	2656406	Argument	m		2630490	1					
ANR	2656407	Identifier	m		2630490	0					
ANR	2656408	Argument	false		2630490	2					
ANR	2656409	Identifier	false		2630490	0					
ANR	2656410	BreakStatement	break ;	5947:3:126230:126235	2630490	8	True				
ANR	2656411	Label	default :	5948:2:126239:126246	2630490	9	True				
ANR	2656412	Identifier	default		2630490	0					
ANR	2656413	ReturnStatement	return - 1 ;	5949:3:126251:126260	2630490	10	True				
ANR	2656414	UnaryOperationExpression	- 1		2630490	0					
ANR	2656415	UnaryOperator	-		2630490	0					
ANR	2656416	PrimaryExpression	1		2630490	1					
ANR	2656417	ElseStatement	else		2630490	0					
ANR	2656418	IfStatement	"if ( ( m = opmask ( ao -> op , ""uxt"" , B_BIT | H_BIT | SIXTEEN_BIT ) ) )"		2630490	0					
ANR	2656419	Condition	"m = opmask ( ao -> op , ""uxt"" , B_BIT | H_BIT | SIXTEEN_BIT )"	5952:5:126279:126335	2630490	0	True				
ANR	2656420	AssignmentExpression	"m = opmask ( ao -> op , ""uxt"" , B_BIT | H_BIT | SIXTEEN_BIT )"		2630490	0		=			
ANR	2656421	Identifier	m		2630490	0					
ANR	2656422	CallExpression	"opmask ( ao -> op , ""uxt"" , B_BIT | H_BIT | SIXTEEN_BIT )"		2630490	1					
ANR	2656423	Callee	opmask		2630490	0					
ANR	2656424	Identifier	opmask		2630490	0					
ANR	2656425	ArgumentList	ao -> op		2630490	1					
ANR	2656426	Argument	ao -> op		2630490	0					
ANR	2656427	PtrMemberAccess	ao -> op		2630490	0					
ANR	2656428	Identifier	ao		2630490	0					
ANR	2656429	Identifier	op		2630490	1					
ANR	2656430	Argument	"""uxt"""		2630490	1					
ANR	2656431	PrimaryExpression	"""uxt"""		2630490	0					
ANR	2656432	Argument	B_BIT | H_BIT | SIXTEEN_BIT		2630490	2					
ANR	2656433	InclusiveOrExpression	B_BIT | H_BIT | SIXTEEN_BIT		2630490	0		|			
ANR	2656434	Identifier	B_BIT		2630490	0					
ANR	2656435	InclusiveOrExpression	H_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2656436	Identifier	H_BIT		2630490	0					
ANR	2656437	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2656438	CompoundStatement		4662:2:100521:100568	2630490	1					
ANR	2656439	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	5953:2:126342:126376	2630490	0	True				
ANR	2656440	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2656441	IdentifierDeclType	ut64		2630490	0					
ANR	2656442	Identifier	argt		2630490	1					
ANR	2656443	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2656444	Identifier	argt		2630490	0					
ANR	2656445	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2656446	Callee	thumb_selector		2630490	0					
ANR	2656447	Identifier	thumb_selector		2630490	0					
ANR	2656448	ArgumentList	ao -> a		2630490	1					
ANR	2656449	Argument	ao -> a		2630490	0					
ANR	2656450	PtrMemberAccess	ao -> a		2630490	0					
ANR	2656451	Identifier	ao		2630490	0					
ANR	2656452	Identifier	a		2630490	1					
ANR	2656453	IdentifierDeclStatement	ut64 sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT ) ;	5954:2:126380:126427	2630490	1	True				
ANR	2656454	IdentifierDecl	sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT )		2630490	0					
ANR	2656455	IdentifierDeclType	ut64		2630490	0					
ANR	2656456	Identifier	sufsel		2630490	1					
ANR	2656457	AssignmentExpression	sufsel = m & ( B_BIT | H_BIT | SIXTEEN_BIT )		2630490	2		=			
ANR	2656458	Identifier	sufsel		2630490	0					
ANR	2656459	BitAndExpression	m & ( B_BIT | H_BIT | SIXTEEN_BIT )		2630490	1		&			
ANR	2656460	Identifier	m		2630490	0					
ANR	2656461	InclusiveOrExpression	B_BIT | H_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2656462	Identifier	B_BIT		2630490	0					
ANR	2656463	InclusiveOrExpression	H_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2656464	Identifier	H_BIT		2630490	0					
ANR	2656465	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2656466	SwitchStatement	switch ( argt )		2630490	2					
ANR	2656467	Condition	argt	5955:10:126439:126442	2630490	0	True				
ANR	2656468	Identifier	argt		2630490	0					
ANR	2656469	CompoundStatement		4663:16:100586:100586	2630490	1					
ANR	2656470	Label	case THUMB_REG_REG :	5956:2:126449:126467	2630490	0	True				
ANR	2656471	Identifier	THUMB_REG_REG		2630490	0					
ANR	2656472	CompoundStatement		4664:22:100610:100610	2630490	1					
ANR	2656473	IfStatement	if ( ( sufsel == B_BIT ) || ( sufsel == H_BIT ) )		2630490	0					
ANR	2656474	Condition	( sufsel == B_BIT ) || ( sufsel == H_BIT )	5957:7:126478:126515	2630490	0	True				
ANR	2656475	OrExpression	( sufsel == B_BIT ) || ( sufsel == H_BIT )		2630490	0		||			
ANR	2656476	EqualityExpression	sufsel == B_BIT		2630490	0		==			
ANR	2656477	Identifier	sufsel		2630490	0					
ANR	2656478	Identifier	B_BIT		2630490	1					
ANR	2656479	EqualityExpression	sufsel == H_BIT		2630490	1		==			
ANR	2656480	Identifier	sufsel		2630490	0					
ANR	2656481	Identifier	H_BIT		2630490	1					
ANR	2656482	CompoundStatement		4665:47:100659:100659	2630490	1					
ANR	2656483	IfStatement	if ( sufsel == B_BIT )		2630490	0					
ANR	2656484	Condition	sufsel == B_BIT	5958:8:126528:126542	2630490	0	True				
ANR	2656485	EqualityExpression	sufsel == B_BIT		2630490	0		==			
ANR	2656486	Identifier	sufsel		2630490	0					
ANR	2656487	Identifier	B_BIT		2630490	1					
ANR	2656488	CompoundStatement		4666:25:100686:100686	2630490	1					
ANR	2656489	ExpressionStatement	ao -> o = 0xc0b2	5959:5:126552:126566	2630490	0	True				
ANR	2656490	AssignmentExpression	ao -> o = 0xc0b2		2630490	0		=			
ANR	2656491	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656492	Identifier	ao		2630490	0					
ANR	2656493	Identifier	o		2630490	1					
ANR	2656494	PrimaryExpression	0xc0b2		2630490	1					
ANR	2656495	ElseStatement	else		2630490	0					
ANR	2656496	CompoundStatement		4668:11:100720:100720	2630490	0					
ANR	2656497	ExpressionStatement	ao -> o = 0x80b2	5961:5:126586:126600	2630490	0	True				
ANR	2656498	AssignmentExpression	ao -> o = 0x80b2		2630490	0		=			
ANR	2656499	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656500	Identifier	ao		2630490	0					
ANR	2656501	Identifier	o		2630490	1					
ANR	2656502	PrimaryExpression	0x80b2		2630490	1					
ANR	2656503	IfStatement	"if ( std_16bit_2reg ( ao , m ) )"		2630490	1					
ANR	2656504	Condition	"std_16bit_2reg ( ao , m )"	5963:8:126616:126637	2630490	0	True				
ANR	2656505	CallExpression	"std_16bit_2reg ( ao , m )"		2630490	0					
ANR	2656506	Callee	std_16bit_2reg		2630490	0					
ANR	2656507	Identifier	std_16bit_2reg		2630490	0					
ANR	2656508	ArgumentList	ao		2630490	1					
ANR	2656509	Argument	ao		2630490	0					
ANR	2656510	Identifier	ao		2630490	0					
ANR	2656511	Argument	m		2630490	1					
ANR	2656512	Identifier	m		2630490	0					
ANR	2656513	CompoundStatement		4671:32:100781:100781	2630490	1					
ANR	2656514	ReturnStatement	return 2 ;	5964:5:126647:126655	2630490	0	True				
ANR	2656515	PrimaryExpression	2		2630490	0					
ANR	2656516	ExpressionStatement	"ao -> a [ 2 ] = ""lsl 0"""	5967:3:126671:126689	2630490	1	True				
ANR	2656517	AssignmentExpression	"ao -> a [ 2 ] = ""lsl 0"""		2630490	0		=			
ANR	2656518	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2656519	PtrMemberAccess	ao -> a		2630490	0					
ANR	2656520	Identifier	ao		2630490	0					
ANR	2656521	Identifier	a		2630490	1					
ANR	2656522	PrimaryExpression	2		2630490	1					
ANR	2656523	PrimaryExpression	"""lsl 0"""		2630490	1					
ANR	2656524	Label	case THUMB_REG_REG_SHIFT :	5970:2:126735:126759	2630490	2	True				
ANR	2656525	Identifier	THUMB_REG_REG_SHIFT		2630490	0					
ANR	2656526	CompoundStatement		4681:3:100973:101011	2630490	3					
ANR	2656527	IdentifierDeclStatement	ut8 reg1 = getreg ( ao -> a [ 0 ] ) ;	5971:3:126766:126794	2630490	0	True				
ANR	2656528	IdentifierDecl	reg1 = getreg ( ao -> a [ 0 ] )		2630490	0					
ANR	2656529	IdentifierDeclType	ut8		2630490	0					
ANR	2656530	Identifier	reg1		2630490	1					
ANR	2656531	AssignmentExpression	reg1 = getreg ( ao -> a [ 0 ] )		2630490	2		=			
ANR	2656532	Identifier	reg1		2630490	0					
ANR	2656533	CallExpression	getreg ( ao -> a [ 0 ] )		2630490	1					
ANR	2656534	Callee	getreg		2630490	0					
ANR	2656535	Identifier	getreg		2630490	0					
ANR	2656536	ArgumentList	ao -> a [ 0 ]		2630490	1					
ANR	2656537	Argument	ao -> a [ 0 ]		2630490	0					
ANR	2656538	ArrayIndexing	ao -> a [ 0 ]		2630490	0					
ANR	2656539	PtrMemberAccess	ao -> a		2630490	0					
ANR	2656540	Identifier	ao		2630490	0					
ANR	2656541	Identifier	a		2630490	1					
ANR	2656542	PrimaryExpression	0		2630490	1					
ANR	2656543	IdentifierDeclStatement	ut8 reg2 = getreg ( ao -> a [ 1 ] ) ;	5972:3:126799:126827	2630490	1	True				
ANR	2656544	IdentifierDecl	reg2 = getreg ( ao -> a [ 1 ] )		2630490	0					
ANR	2656545	IdentifierDeclType	ut8		2630490	0					
ANR	2656546	Identifier	reg2		2630490	1					
ANR	2656547	AssignmentExpression	reg2 = getreg ( ao -> a [ 1 ] )		2630490	2		=			
ANR	2656548	Identifier	reg2		2630490	0					
ANR	2656549	CallExpression	getreg ( ao -> a [ 1 ] )		2630490	1					
ANR	2656550	Callee	getreg		2630490	0					
ANR	2656551	Identifier	getreg		2630490	0					
ANR	2656552	ArgumentList	ao -> a [ 1 ]		2630490	1					
ANR	2656553	Argument	ao -> a [ 1 ]		2630490	0					
ANR	2656554	ArrayIndexing	ao -> a [ 1 ]		2630490	0					
ANR	2656555	PtrMemberAccess	ao -> a		2630490	0					
ANR	2656556	Identifier	ao		2630490	0					
ANR	2656557	Identifier	a		2630490	1					
ANR	2656558	PrimaryExpression	1		2630490	1					
ANR	2656559	IdentifierDeclStatement	ut32 shift = thumb_getshift ( ao -> a [ 2 ] ) ;	5973:3:126832:126870	2630490	2	True				
ANR	2656560	IdentifierDecl	shift = thumb_getshift ( ao -> a [ 2 ] )		2630490	0					
ANR	2656561	IdentifierDeclType	ut32		2630490	0					
ANR	2656562	Identifier	shift		2630490	1					
ANR	2656563	AssignmentExpression	shift = thumb_getshift ( ao -> a [ 2 ] )		2630490	2		=			
ANR	2656564	Identifier	shift		2630490	0					
ANR	2656565	CallExpression	thumb_getshift ( ao -> a [ 2 ] )		2630490	1					
ANR	2656566	Callee	thumb_getshift		2630490	0					
ANR	2656567	Identifier	thumb_getshift		2630490	0					
ANR	2656568	ArgumentList	ao -> a [ 2 ]		2630490	1					
ANR	2656569	Argument	ao -> a [ 2 ]		2630490	0					
ANR	2656570	ArrayIndexing	ao -> a [ 2 ]		2630490	0					
ANR	2656571	PtrMemberAccess	ao -> a		2630490	0					
ANR	2656572	Identifier	ao		2630490	0					
ANR	2656573	Identifier	a		2630490	1					
ANR	2656574	PrimaryExpression	2		2630490	1					
ANR	2656575	IfStatement	if ( ( reg1 > 15 ) || ( reg2 > 15 ) || ( shift && ( ( shift & 0x0000f010 ) != 0x00003000 ) ) )		2630490	3					
ANR	2656576	Condition	( reg1 > 15 ) || ( reg2 > 15 ) || ( shift && ( ( shift & 0x0000f010 ) != 0x00003000 ) )	5975:7:126880:126956	2630490	0	True				
ANR	2656577	OrExpression	( reg1 > 15 ) || ( reg2 > 15 ) || ( shift && ( ( shift & 0x0000f010 ) != 0x00003000 ) )		2630490	0		||			
ANR	2656578	RelationalExpression	reg1 > 15		2630490	0		>			
ANR	2656579	Identifier	reg1		2630490	0					
ANR	2656580	PrimaryExpression	15		2630490	1					
ANR	2656581	OrExpression	( reg2 > 15 ) || ( shift && ( ( shift & 0x0000f010 ) != 0x00003000 ) )		2630490	1		||			
ANR	2656582	RelationalExpression	reg2 > 15		2630490	0		>			
ANR	2656583	Identifier	reg2		2630490	0					
ANR	2656584	PrimaryExpression	15		2630490	1					
ANR	2656585	AndExpression	shift && ( ( shift & 0x0000f010 ) != 0x00003000 )		2630490	1		&&			
ANR	2656586	Identifier	shift		2630490	0					
ANR	2656587	EqualityExpression	( shift & 0x0000f010 ) != 0x00003000		2630490	1		!=			
ANR	2656588	BitAndExpression	shift & 0x0000f010		2630490	0		&			
ANR	2656589	Identifier	shift		2630490	0					
ANR	2656590	PrimaryExpression	0x0000f010		2630490	1					
ANR	2656591	PrimaryExpression	0x00003000		2630490	1					
ANR	2656592	CompoundStatement		4683:86:101100:101100	2630490	1					
ANR	2656593	ReturnStatement	return - 1 ;	5976:4:126965:126974	2630490	0	True				
ANR	2656594	UnaryOperationExpression	- 1		2630490	0					
ANR	2656595	UnaryOperator	-		2630490	0					
ANR	2656596	PrimaryExpression	1		2630490	1					
ANR	2656597	IfStatement	if ( sufsel == B_BIT )		2630490	4					
ANR	2656598	Condition	sufsel == B_BIT	5979:7:126989:127003	2630490	0	True				
ANR	2656599	EqualityExpression	sufsel == B_BIT		2630490	0		==			
ANR	2656600	Identifier	sufsel		2630490	0					
ANR	2656601	Identifier	B_BIT		2630490	1					
ANR	2656602	CompoundStatement		4687:24:101147:101147	2630490	1					
ANR	2656603	ExpressionStatement	ao -> o = 0x5ffa80f0	5980:4:127012:127030	2630490	0	True				
ANR	2656604	AssignmentExpression	ao -> o = 0x5ffa80f0		2630490	0		=			
ANR	2656605	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656606	Identifier	ao		2630490	0					
ANR	2656607	Identifier	o		2630490	1					
ANR	2656608	PrimaryExpression	0x5ffa80f0		2630490	1					
ANR	2656609	ElseStatement	else		2630490	0					
ANR	2656610	IfStatement	if ( sufsel == ( B_BIT | SIXTEEN_BIT ) )		2630490	0					
ANR	2656611	Condition	sufsel == ( B_BIT | SIXTEEN_BIT )	5982:7:127049:127079	2630490	0	True				
ANR	2656612	EqualityExpression	sufsel == ( B_BIT | SIXTEEN_BIT )		2630490	0		==			
ANR	2656613	Identifier	sufsel		2630490	0					
ANR	2656614	InclusiveOrExpression	B_BIT | SIXTEEN_BIT		2630490	1		|			
ANR	2656615	Identifier	B_BIT		2630490	0					
ANR	2656616	Identifier	SIXTEEN_BIT		2630490	1					
ANR	2656617	CompoundStatement		4690:40:101223:101223	2630490	1					
ANR	2656618	ExpressionStatement	ao -> o = 0x3ffa80f0	5983:4:127088:127106	2630490	0	True				
ANR	2656619	AssignmentExpression	ao -> o = 0x3ffa80f0		2630490	0		=			
ANR	2656620	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656621	Identifier	ao		2630490	0					
ANR	2656622	Identifier	o		2630490	1					
ANR	2656623	PrimaryExpression	0x3ffa80f0		2630490	1					
ANR	2656624	ElseStatement	else		2630490	0					
ANR	2656625	IfStatement	if ( sufsel == H_BIT )		2630490	0					
ANR	2656626	Condition	sufsel == H_BIT	5985:7:127125:127139	2630490	0	True				
ANR	2656627	EqualityExpression	sufsel == H_BIT		2630490	0		==			
ANR	2656628	Identifier	sufsel		2630490	0					
ANR	2656629	Identifier	H_BIT		2630490	1					
ANR	2656630	CompoundStatement		4693:24:101283:101283	2630490	1					
ANR	2656631	ExpressionStatement	ao -> o = 0x1ffa80f0	5986:4:127148:127166	2630490	0	True				
ANR	2656632	AssignmentExpression	ao -> o = 0x1ffa80f0		2630490	0		=			
ANR	2656633	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656634	Identifier	ao		2630490	0					
ANR	2656635	Identifier	o		2630490	1					
ANR	2656636	PrimaryExpression	0x1ffa80f0		2630490	1					
ANR	2656637	ElseStatement	else		2630490	0					
ANR	2656638	CompoundStatement		4695:10:101319:101319	2630490	0					
ANR	2656639	ReturnStatement	return - 1 ;	5988:4:127184:127193	2630490	0	True				
ANR	2656640	UnaryOperationExpression	- 1		2630490	0					
ANR	2656641	UnaryOperator	-		2630490	0					
ANR	2656642	PrimaryExpression	1		2630490	1					
ANR	2656643	ExpressionStatement	ao -> o |= ( shift & 0x00000060 ) << 7	5991:3:127204:127238	2630490	5	True				
ANR	2656644	AssignmentExpression	ao -> o |= ( shift & 0x00000060 ) << 7		2630490	0		|=			
ANR	2656645	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656646	Identifier	ao		2630490	0					
ANR	2656647	Identifier	o		2630490	1					
ANR	2656648	ShiftExpression	( shift & 0x00000060 ) << 7		2630490	1		<<			
ANR	2656649	BitAndExpression	shift & 0x00000060		2630490	0		&			
ANR	2656650	Identifier	shift		2630490	0					
ANR	2656651	PrimaryExpression	0x00000060		2630490	1					
ANR	2656652	PrimaryExpression	7		2630490	1					
ANR	2656653	ExpressionStatement	ao -> o |= reg1	5992:3:127243:127256	2630490	6	True				
ANR	2656654	AssignmentExpression	ao -> o |= reg1		2630490	0		|=			
ANR	2656655	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656656	Identifier	ao		2630490	0					
ANR	2656657	Identifier	o		2630490	1					
ANR	2656658	Identifier	reg1		2630490	1					
ANR	2656659	ExpressionStatement	ao -> o |= reg2 << 8	5993:3:127261:127279	2630490	7	True				
ANR	2656660	AssignmentExpression	ao -> o |= reg2 << 8		2630490	0		|=			
ANR	2656661	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656662	Identifier	ao		2630490	0					
ANR	2656663	Identifier	o		2630490	1					
ANR	2656664	ShiftExpression	reg2 << 8		2630490	1		<<			
ANR	2656665	Identifier	reg2		2630490	0					
ANR	2656666	PrimaryExpression	8		2630490	1					
ANR	2656667	ReturnStatement	return 4 ;	5994:3:127284:127292	2630490	8	True				
ANR	2656668	PrimaryExpression	4		2630490	0					
ANR	2656669	BreakStatement	break ;	5996:3:127309:127314	2630490	4	True				
ANR	2656670	Label	default :	5997:2:127318:127325	2630490	5	True				
ANR	2656671	Identifier	default		2630490	0					
ANR	2656672	ReturnStatement	return - 1 ;	5998:3:127330:127339	2630490	6	True				
ANR	2656673	UnaryOperationExpression	- 1		2630490	0					
ANR	2656674	UnaryOperator	-		2630490	0					
ANR	2656675	PrimaryExpression	1		2630490	1					
ANR	2656676	ElseStatement	else		2630490	0					
ANR	2656677	IfStatement	"if ( ( m = opmask ( ao -> op , ""wfe"" , 0 ) ) )"		2630490	0					
ANR	2656678	Condition	"m = opmask ( ao -> op , ""wfe"" , 0 )"	6002:5:127359:127389	2630490	0	True				
ANR	2656679	AssignmentExpression	"m = opmask ( ao -> op , ""wfe"" , 0 )"		2630490	0		=			
ANR	2656680	Identifier	m		2630490	0					
ANR	2656681	CallExpression	"opmask ( ao -> op , ""wfe"" , 0 )"		2630490	1					
ANR	2656682	Callee	opmask		2630490	0					
ANR	2656683	Identifier	opmask		2630490	0					
ANR	2656684	ArgumentList	ao -> op		2630490	1					
ANR	2656685	Argument	ao -> op		2630490	0					
ANR	2656686	PtrMemberAccess	ao -> op		2630490	0					
ANR	2656687	Identifier	ao		2630490	0					
ANR	2656688	Identifier	op		2630490	1					
ANR	2656689	Argument	"""wfe"""		2630490	1					
ANR	2656690	PrimaryExpression	"""wfe"""		2630490	0					
ANR	2656691	Argument	0		2630490	2					
ANR	2656692	PrimaryExpression	0		2630490	0					
ANR	2656693	CompoundStatement		4711:2:101537:101571	2630490	1					
ANR	2656694	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	6003:2:127396:127430	2630490	0	True				
ANR	2656695	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2656696	IdentifierDeclType	ut64		2630490	0					
ANR	2656697	Identifier	argt		2630490	1					
ANR	2656698	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2656699	Identifier	argt		2630490	0					
ANR	2656700	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2656701	Callee	thumb_selector		2630490	0					
ANR	2656702	Identifier	thumb_selector		2630490	0					
ANR	2656703	ArgumentList	ao -> a		2630490	1					
ANR	2656704	Argument	ao -> a		2630490	0					
ANR	2656705	PtrMemberAccess	ao -> a		2630490	0					
ANR	2656706	Identifier	ao		2630490	0					
ANR	2656707	Identifier	a		2630490	1					
ANR	2656708	SwitchStatement	switch ( argt )		2630490	1					
ANR	2656709	Condition	argt	6004:10:127442:127445	2630490	0	True				
ANR	2656710	Identifier	argt		2630490	0					
ANR	2656711	CompoundStatement		4712:16:101589:101589	2630490	1					
ANR	2656712	Label	case THUMB_NONE :	6005:2:127452:127467	2630490	0	True				
ANR	2656713	Identifier	THUMB_NONE		2630490	0					
ANR	2656714	CompoundStatement		4713:19:101610:101610	2630490	1					
ANR	2656715	IfStatement	if ( m & DOTW_BIT )		2630490	0					
ANR	2656716	Condition	m & DOTW_BIT	6006:7:127478:127489	2630490	0	True				
ANR	2656717	BitAndExpression	m & DOTW_BIT		2630490	0		&			
ANR	2656718	Identifier	m		2630490	0					
ANR	2656719	Identifier	DOTW_BIT		2630490	1					
ANR	2656720	CompoundStatement		4714:21:101633:101633	2630490	1					
ANR	2656721	ExpressionStatement	ao -> o = 0xaff30280	6007:4:127498:127516	2630490	0	True				
ANR	2656722	AssignmentExpression	ao -> o = 0xaff30280		2630490	0		=			
ANR	2656723	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656724	Identifier	ao		2630490	0					
ANR	2656725	Identifier	o		2630490	1					
ANR	2656726	PrimaryExpression	0xaff30280		2630490	1					
ANR	2656727	ReturnStatement	return 4 ;	6008:4:127522:127530	2630490	1	True				
ANR	2656728	PrimaryExpression	4		2630490	0					
ANR	2656729	ElseStatement	else		2630490	0					
ANR	2656730	CompoundStatement		4717:17:101690:101690	2630490	0					
ANR	2656731	ExpressionStatement	ao -> o = 0x20bf	6010:4:127555:127569	2630490	0	True				
ANR	2656732	AssignmentExpression	ao -> o = 0x20bf		2630490	0		=			
ANR	2656733	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656734	Identifier	ao		2630490	0					
ANR	2656735	Identifier	o		2630490	1					
ANR	2656736	PrimaryExpression	0x20bf		2630490	1					
ANR	2656737	ReturnStatement	return 2 ;	6011:4:127575:127583	2630490	1	True				
ANR	2656738	PrimaryExpression	2		2630490	0					
ANR	2656739	BreakStatement	break ;	6014:3:127612:127617	2630490	2	True				
ANR	2656740	Label	default :	6015:2:127621:127628	2630490	3	True				
ANR	2656741	Identifier	default		2630490	0					
ANR	2656742	ReturnStatement	return - 1 ;	6016:3:127633:127642	2630490	4	True				
ANR	2656743	UnaryOperationExpression	- 1		2630490	0					
ANR	2656744	UnaryOperator	-		2630490	0					
ANR	2656745	PrimaryExpression	1		2630490	1					
ANR	2656746	ElseStatement	else		2630490	0					
ANR	2656747	IfStatement	"if ( ( m = opmask ( ao -> op , ""wfi"" , 0 ) ) )"		2630490	0					
ANR	2656748	Condition	"m = opmask ( ao -> op , ""wfi"" , 0 )"	6019:5:127661:127691	2630490	0	True				
ANR	2656749	AssignmentExpression	"m = opmask ( ao -> op , ""wfi"" , 0 )"		2630490	0		=			
ANR	2656750	Identifier	m		2630490	0					
ANR	2656751	CallExpression	"opmask ( ao -> op , ""wfi"" , 0 )"		2630490	1					
ANR	2656752	Callee	opmask		2630490	0					
ANR	2656753	Identifier	opmask		2630490	0					
ANR	2656754	ArgumentList	ao -> op		2630490	1					
ANR	2656755	Argument	ao -> op		2630490	0					
ANR	2656756	PtrMemberAccess	ao -> op		2630490	0					
ANR	2656757	Identifier	ao		2630490	0					
ANR	2656758	Identifier	op		2630490	1					
ANR	2656759	Argument	"""wfi"""		2630490	1					
ANR	2656760	PrimaryExpression	"""wfi"""		2630490	0					
ANR	2656761	Argument	0		2630490	2					
ANR	2656762	PrimaryExpression	0		2630490	0					
ANR	2656763	CompoundStatement		4728:2:101839:101873	2630490	1					
ANR	2656764	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	6020:2:127698:127732	2630490	0	True				
ANR	2656765	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2656766	IdentifierDeclType	ut64		2630490	0					
ANR	2656767	Identifier	argt		2630490	1					
ANR	2656768	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2656769	Identifier	argt		2630490	0					
ANR	2656770	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2656771	Callee	thumb_selector		2630490	0					
ANR	2656772	Identifier	thumb_selector		2630490	0					
ANR	2656773	ArgumentList	ao -> a		2630490	1					
ANR	2656774	Argument	ao -> a		2630490	0					
ANR	2656775	PtrMemberAccess	ao -> a		2630490	0					
ANR	2656776	Identifier	ao		2630490	0					
ANR	2656777	Identifier	a		2630490	1					
ANR	2656778	SwitchStatement	switch ( argt )		2630490	1					
ANR	2656779	Condition	argt	6021:10:127744:127747	2630490	0	True				
ANR	2656780	Identifier	argt		2630490	0					
ANR	2656781	CompoundStatement		4729:16:101891:101891	2630490	1					
ANR	2656782	Label	case THUMB_NONE :	6022:2:127754:127769	2630490	0	True				
ANR	2656783	Identifier	THUMB_NONE		2630490	0					
ANR	2656784	CompoundStatement		4730:19:101912:101912	2630490	1					
ANR	2656785	IfStatement	if ( m & DOTW_BIT )		2630490	0					
ANR	2656786	Condition	m & DOTW_BIT	6023:7:127780:127791	2630490	0	True				
ANR	2656787	BitAndExpression	m & DOTW_BIT		2630490	0		&			
ANR	2656788	Identifier	m		2630490	0					
ANR	2656789	Identifier	DOTW_BIT		2630490	1					
ANR	2656790	CompoundStatement		4731:21:101935:101935	2630490	1					
ANR	2656791	ExpressionStatement	ao -> o = 0xaff30380	6024:4:127800:127818	2630490	0	True				
ANR	2656792	AssignmentExpression	ao -> o = 0xaff30380		2630490	0		=			
ANR	2656793	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656794	Identifier	ao		2630490	0					
ANR	2656795	Identifier	o		2630490	1					
ANR	2656796	PrimaryExpression	0xaff30380		2630490	1					
ANR	2656797	ReturnStatement	return 4 ;	6025:4:127824:127832	2630490	1	True				
ANR	2656798	PrimaryExpression	4		2630490	0					
ANR	2656799	ElseStatement	else		2630490	0					
ANR	2656800	CompoundStatement		4734:17:101992:101992	2630490	0					
ANR	2656801	ExpressionStatement	ao -> o = 0x30bf	6027:4:127857:127871	2630490	0	True				
ANR	2656802	AssignmentExpression	ao -> o = 0x30bf		2630490	0		=			
ANR	2656803	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656804	Identifier	ao		2630490	0					
ANR	2656805	Identifier	o		2630490	1					
ANR	2656806	PrimaryExpression	0x30bf		2630490	1					
ANR	2656807	ReturnStatement	return 2 ;	6028:4:127877:127885	2630490	1	True				
ANR	2656808	PrimaryExpression	2		2630490	0					
ANR	2656809	BreakStatement	break ;	6031:3:127914:127919	2630490	2	True				
ANR	2656810	Label	default :	6032:2:127923:127930	2630490	3	True				
ANR	2656811	Identifier	default		2630490	0					
ANR	2656812	ReturnStatement	return - 1 ;	6033:3:127935:127944	2630490	4	True				
ANR	2656813	UnaryOperationExpression	- 1		2630490	0					
ANR	2656814	UnaryOperator	-		2630490	0					
ANR	2656815	PrimaryExpression	1		2630490	1					
ANR	2656816	ElseStatement	else		2630490	0					
ANR	2656817	IfStatement	"if ( ( m = opmask ( ao -> op , ""yield"" , 0 ) ) )"		2630490	0					
ANR	2656818	Condition	"m = opmask ( ao -> op , ""yield"" , 0 )"	6036:5:127963:127995	2630490	0	True				
ANR	2656819	AssignmentExpression	"m = opmask ( ao -> op , ""yield"" , 0 )"		2630490	0		=			
ANR	2656820	Identifier	m		2630490	0					
ANR	2656821	CallExpression	"opmask ( ao -> op , ""yield"" , 0 )"		2630490	1					
ANR	2656822	Callee	opmask		2630490	0					
ANR	2656823	Identifier	opmask		2630490	0					
ANR	2656824	ArgumentList	ao -> op		2630490	1					
ANR	2656825	Argument	ao -> op		2630490	0					
ANR	2656826	PtrMemberAccess	ao -> op		2630490	0					
ANR	2656827	Identifier	ao		2630490	0					
ANR	2656828	Identifier	op		2630490	1					
ANR	2656829	Argument	"""yield"""		2630490	1					
ANR	2656830	PrimaryExpression	"""yield"""		2630490	0					
ANR	2656831	Argument	0		2630490	2					
ANR	2656832	PrimaryExpression	0		2630490	0					
ANR	2656833	CompoundStatement		4745:2:102143:102177	2630490	1					
ANR	2656834	IdentifierDeclStatement	ut64 argt = thumb_selector ( ao -> a ) ;	6037:2:128002:128036	2630490	0	True				
ANR	2656835	IdentifierDecl	argt = thumb_selector ( ao -> a )		2630490	0					
ANR	2656836	IdentifierDeclType	ut64		2630490	0					
ANR	2656837	Identifier	argt		2630490	1					
ANR	2656838	AssignmentExpression	argt = thumb_selector ( ao -> a )		2630490	2		=			
ANR	2656839	Identifier	argt		2630490	0					
ANR	2656840	CallExpression	thumb_selector ( ao -> a )		2630490	1					
ANR	2656841	Callee	thumb_selector		2630490	0					
ANR	2656842	Identifier	thumb_selector		2630490	0					
ANR	2656843	ArgumentList	ao -> a		2630490	1					
ANR	2656844	Argument	ao -> a		2630490	0					
ANR	2656845	PtrMemberAccess	ao -> a		2630490	0					
ANR	2656846	Identifier	ao		2630490	0					
ANR	2656847	Identifier	a		2630490	1					
ANR	2656848	SwitchStatement	switch ( argt )		2630490	1					
ANR	2656849	Condition	argt	6038:10:128048:128051	2630490	0	True				
ANR	2656850	Identifier	argt		2630490	0					
ANR	2656851	CompoundStatement		4746:16:102195:102195	2630490	1					
ANR	2656852	Label	case THUMB_NONE :	6039:2:128058:128073	2630490	0	True				
ANR	2656853	Identifier	THUMB_NONE		2630490	0					
ANR	2656854	CompoundStatement		4747:19:102216:102216	2630490	1					
ANR	2656855	IfStatement	if ( m & DOTW_BIT )		2630490	0					
ANR	2656856	Condition	m & DOTW_BIT	6040:7:128084:128095	2630490	0	True				
ANR	2656857	BitAndExpression	m & DOTW_BIT		2630490	0		&			
ANR	2656858	Identifier	m		2630490	0					
ANR	2656859	Identifier	DOTW_BIT		2630490	1					
ANR	2656860	CompoundStatement		4748:21:102239:102239	2630490	1					
ANR	2656861	ExpressionStatement	ao -> o = 0xaff30180	6041:4:128104:128122	2630490	0	True				
ANR	2656862	AssignmentExpression	ao -> o = 0xaff30180		2630490	0		=			
ANR	2656863	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656864	Identifier	ao		2630490	0					
ANR	2656865	Identifier	o		2630490	1					
ANR	2656866	PrimaryExpression	0xaff30180		2630490	1					
ANR	2656867	ReturnStatement	return 4 ;	6042:4:128128:128136	2630490	1	True				
ANR	2656868	PrimaryExpression	4		2630490	0					
ANR	2656869	ElseStatement	else		2630490	0					
ANR	2656870	CompoundStatement		4751:17:102296:102296	2630490	0					
ANR	2656871	ExpressionStatement	ao -> o = 0x10bf	6044:4:128161:128175	2630490	0	True				
ANR	2656872	AssignmentExpression	ao -> o = 0x10bf		2630490	0		=			
ANR	2656873	PtrMemberAccess	ao -> o		2630490	0					
ANR	2656874	Identifier	ao		2630490	0					
ANR	2656875	Identifier	o		2630490	1					
ANR	2656876	PrimaryExpression	0x10bf		2630490	1					
ANR	2656877	ReturnStatement	return 2 ;	6045:4:128181:128189	2630490	1	True				
ANR	2656878	PrimaryExpression	2		2630490	0					
ANR	2656879	BreakStatement	break ;	6048:3:128218:128223	2630490	2	True				
ANR	2656880	Label	default :	6049:2:128227:128234	2630490	3	True				
ANR	2656881	Identifier	default		2630490	0					
ANR	2656882	ReturnStatement	return - 1 ;	6050:3:128239:128248	2630490	4	True				
ANR	2656883	UnaryOperationExpression	- 1		2630490	0					
ANR	2656884	UnaryOperator	-		2630490	0					
ANR	2656885	PrimaryExpression	1		2630490	1					
ANR	2656886	ReturnStatement	return 0 ;	6053:1:128258:128266	2630490	3	True				
ANR	2656887	PrimaryExpression	0		2630490	0					
ANR	2656888	ReturnType	static int		2630490	1					
ANR	2656889	Identifier	thumb_assemble		2630490	2					
ANR	2656890	ParameterList	"ArmOpcode * ao , ut64 off , const char * str"		2630490	3					
ANR	2656891	Parameter	ArmOpcode * ao	1293:26:25816:25828	2630490	0	True				
ANR	2656892	ParameterType	ArmOpcode *		2630490	0					
ANR	2656893	Identifier	ao		2630490	1					
ANR	2656894	Parameter	ut64 off	1293:41:25831:25838	2630490	1	True				
ANR	2656895	ParameterType	ut64		2630490	0					
ANR	2656896	Identifier	off		2630490	1					
ANR	2656897	Parameter	const char * str	1293:51:25841:25855	2630490	2	True				
ANR	2656898	ParameterType	const char *		2630490	0					
ANR	2656899	Identifier	str		2630490	1					
ANR	2656900	CFGEntryNode	ENTRY		2630490		True				
ANR	2656901	CFGExitNode	EXIT		2630490		True				
ANR	2656902	Symbol	BB_BIT		2630490						
ANR	2656903	Symbol	thnum		2630490						
ANR	2656904	Symbol	getregmembang		2630490						
ANR	2656905	Symbol	shift		2630490						
ANR	2656906	Symbol	nrcs		2630490						
ANR	2656907	Symbol	SIXTEEN_BIT		2630490						
ANR	2656908	Symbol	ao -> o		2630490						
ANR	2656909	Symbol	cond		2630490						
ANR	2656910	Symbol	getshiftmemend		2630490						
ANR	2656911	Symbol	coreg		2630490						
ANR	2656912	Symbol	thiset		2630490						
ANR	2656913	Symbol	bank		2630490						
ANR	2656914	Symbol	* conds		2630490						
ANR	2656915	Symbol	reg4		2630490						
ANR	2656916	Symbol	getthbimmed		2630490						
ANR	2656917	Symbol	IA_BIT		2630490						
ANR	2656918	Symbol	ao -> a		2630490						
ANR	2656919	Symbol	parse_hints		2630490						
ANR	2656920	Symbol	L_BIT		2630490						
ANR	2656921	Symbol	ldrsel		2630490						
ANR	2656922	Symbol	std_32bit_2reg		2630490						
ANR	2656923	Symbol	reg1		2630490						
ANR	2656924	Symbol	reg3		2630490						
ANR	2656925	Symbol	reg2		2630490						
ANR	2656926	Symbol	C_BITS		2630490						
ANR	2656927	Symbol	getregmemstart		2630490						
ANR	2656928	Symbol	ao		2630490						
ANR	2656929	Symbol	R_BIT		2630490						
ANR	2656930	Symbol	str		2630490						
ANR	2656931	Symbol	conds		2630490						
ANR	2656932	Symbol	EIGHT_BIT		2630490						
ANR	2656933	Symbol	WB_BIT		2630490						
ANR	2656934	Symbol	aif		2630490						
ANR	2656935	Symbol	getnummemend		2630490						
ANR	2656936	Symbol	widthm1		2630490						
ANR	2656937	Symbol	std_32bit_3reg		2630490						
ANR	2656938	Symbol	sufsel		2630490						
ANR	2656939	Symbol	T_BIT		2630490						
ANR	2656940	Symbol	spsr		2630490						
ANR	2656941	Symbol	getregmemend		2630490						
ANR	2656942	Symbol	getreglist		2630490						
ANR	2656943	Symbol	H_BIT		2630490						
ANR	2656944	Symbol	DOTW_BIT		2630490						
ANR	2656945	Symbol	itmask		2630490						
ANR	2656946	Symbol	t1form		2630490						
ANR	2656947	Symbol	DOTN_BIT		2630490						
ANR	2656948	Symbol	strsel		2630490						
ANR	2656949	Symbol	getcoprocreg		2630490						
ANR	2656950	Symbol	proc		2630490						
ANR	2656951	Symbol	err		2630490						
ANR	2656952	Symbol	ao -> op		2630490						
ANR	2656953	Symbol	i		2630490						
ANR	2656954	Symbol	* * ao -> a		2630490						
ANR	2656955	Symbol	getcoproc		2630490						
ANR	2656956	Symbol	m		2630490						
ANR	2656957	Symbol	off		2630490						
ANR	2656958	Symbol	getnummemendbang		2630490						
ANR	2656959	Symbol	* strlen		2630490						
ANR	2656960	Symbol	w		2630490						
ANR	2656961	Symbol	width		2630490						
ANR	2656962	Symbol	DB_BIT		2630490						
ANR	2656963	Symbol	std_16bit_2reg		2630490						
ANR	2656964	Symbol	msb		2630490						
ANR	2656965	Symbol	UT32_MAX		2630490						
ANR	2656966	Symbol	thumb_getoffset		2630490						
ANR	2656967	Symbol	coproc		2630490						
ANR	2656968	Symbol	X_BIT		2630490						
ANR	2656969	Symbol	thumb_getshift		2630490						
ANR	2656970	Symbol	num		2630490						
ANR	2656971	Symbol	opmask		2630490						
ANR	2656972	Symbol	TT_BIT		2630490						
ANR	2656973	Symbol	mode		2630490						
ANR	2656974	Symbol	strlen		2630490						
ANR	2656975	Symbol	reg		2630490						
ANR	2656976	Symbol	mem_32bit_2reg		2630490						
ANR	2656977	Symbol	* * ao		2630490						
ANR	2656978	Symbol	D_BIT		2630490						
ANR	2656979	Symbol	wnum		2630490						
ANR	2656980	Symbol	strcmp		2630490						
ANR	2656981	Symbol	iflag		2630490						
ANR	2656982	Symbol	NULL		2630490						
ANR	2656983	Symbol	opc		2630490						
ANR	2656984	Symbol	offset		2630490						
ANR	2656985	Symbol	getthimmed12		2630490						
ANR	2656986	Symbol	list		2630490						
ANR	2656987	Symbol	* ao -> a		2630490						
ANR	2656988	Symbol	FD_BIT		2630490						
ANR	2656989	Symbol	EA_BIT		2630490						
ANR	2656990	Symbol	ID_BIT		2630490						
ANR	2656991	Symbol	true		2630490						
ANR	2656992	Symbol	TB_BIT		2630490						
ANR	2656993	Symbol	lsb		2630490						
ANR	2656994	Symbol	S_BIT		2630490						
ANR	2656995	Symbol	B_BIT		2630490						
ANR	2656996	Symbol	option		2630490						
ANR	2656997	Symbol	IE_BIT		2630490						
ANR	2656998	Symbol	SH_BIT		2630490						
ANR	2656999	Symbol	imm		2630490						
ANR	2657000	Symbol	coreg1		2630490						
ANR	2657001	Symbol	WT_BIT		2630490						
ANR	2657002	Symbol	coreg2		2630490						
ANR	2657003	Symbol	wb		2630490						
ANR	2657004	Symbol	strcmpnull		2630490						
ANR	2657005	Symbol	TWO_BIT		2630490						
ANR	2657006	Symbol	getthzeroimmed16		2630490						
ANR	2657007	Symbol	opc2		2630490						
ANR	2657008	Symbol	mem_16bit_2reg		2630490						
ANR	2657009	Symbol	interpret_msrbank		2630490						
ANR	2657010	Symbol	& spsr		2630490						
ANR	2657011	Symbol	false		2630490						
ANR	2657012	Symbol	getregmemstartend		2630490						
ANR	2657013	Symbol	* * * ao		2630490						
ANR	2657014	Symbol	label		2630490						
ANR	2657015	Symbol	BT_BIT		2630490						
ANR	2657016	Symbol	getthzeroimmed12		2630490						
ANR	2657017	Symbol	W_BIT		2630490						
ANR	2657018	Symbol	argt		2630490						
ANR	2657019	Symbol	* i		2630490						
ANR	2657020	Symbol	getreg		2630490						
ANR	2657021	Symbol	* ao		2630490						
ANR	2657022	Symbol	getnum		2630490						
ANR	2657023	Symbol	thumb_selector		2630490						
ANR	2657024	Symbol	opc1		2630490						
ANR	2657025	Function	findyz	6056:0:128271:128525							
ANR	2657026	FunctionDef	"findyz (int x , int * y , int * z)"		2657025	0					
ANR	2657027	CompoundStatement		6056:41:128312:128525	2657025	0					
ANR	2657028	IdentifierDeclStatement	"int i , j ;"	6057:1:128315:128323	2657025	0	True				
ANR	2657029	IdentifierDecl	i		2657025	0					
ANR	2657030	IdentifierDeclType	int		2657025	0					
ANR	2657031	Identifier	i		2657025	1					
ANR	2657032	IdentifierDecl	j		2657025	1					
ANR	2657033	IdentifierDeclType	int		2657025	0					
ANR	2657034	Identifier	j		2657025	1					
ANR	2657035	ForStatement	for ( i = 0 ; i < 0xff ; i ++ )		2657025	1					
ANR	2657036	ForInit	i = 0 ;	6058:6:128331:128336	2657025	0	True				
ANR	2657037	AssignmentExpression	i = 0		2657025	0		=			
ANR	2657038	Identifier	i		2657025	0					
ANR	2657039	PrimaryExpression	0		2657025	1					
ANR	2657040	Condition	i < 0xff	6058:12:128337:128344	2657025	1	True				
ANR	2657041	RelationalExpression	i < 0xff		2657025	0		<			
ANR	2657042	Identifier	i		2657025	0					
ANR	2657043	PrimaryExpression	0xff		2657025	1					
ANR	2657044	PostIncDecOperationExpression	i ++	6058:22:128347:128349	2657025	2	True				
ANR	2657045	Identifier	i		2657025	0					
ANR	2657046	IncDec	++		2657025	1					
ANR	2657047	CompoundStatement		3:27:39:39	2657025	3					
ANR	2657048	ForStatement	for ( j = 0 ; j < 0xf ; j ++ )		2657025	0					
ANR	2657049	ForInit	j = 0 ;	6059:7:128361:128366	2657025	0	True				
ANR	2657050	AssignmentExpression	j = 0		2657025	0		=			
ANR	2657051	Identifier	j		2657025	0					
ANR	2657052	PrimaryExpression	0		2657025	1					
ANR	2657053	Condition	j < 0xf	6059:13:128367:128373	2657025	1	True				
ANR	2657054	RelationalExpression	j < 0xf		2657025	0		<			
ANR	2657055	Identifier	j		2657025	0					
ANR	2657056	PrimaryExpression	0xf		2657025	1					
ANR	2657057	PostIncDecOperationExpression	j ++	6059:21:128375:128377	2657025	2	True				
ANR	2657058	Identifier	j		2657025	0					
ANR	2657059	IncDec	++		2657025	1					
ANR	2657060	CompoundStatement		5:3:72:86	2657025	3					
ANR	2657061	IdentifierDeclStatement	int v = i << j ;	6060:3:128385:128399	2657025	0	True				
ANR	2657062	IdentifierDecl	v = i << j		2657025	0					
ANR	2657063	IdentifierDeclType	int		2657025	0					
ANR	2657064	Identifier	v		2657025	1					
ANR	2657065	AssignmentExpression	v = i << j		2657025	2		=			
ANR	2657066	Identifier	v		2657025	0					
ANR	2657067	ShiftExpression	i << j		2657025	1		<<			
ANR	2657068	Identifier	i		2657025	0					
ANR	2657069	Identifier	j		2657025	1					
ANR	2657070	IfStatement	if ( v > x )		2657025	1					
ANR	2657071	Condition	v > x	6061:7:128408:128412	2657025	0	True				
ANR	2657072	RelationalExpression	v > x		2657025	0		>			
ANR	2657073	Identifier	v		2657025	0					
ANR	2657074	Identifier	x		2657025	1					
ANR	2657075	CompoundStatement		6:14:102:102	2657025	1					
ANR	2657076	ContinueStatement	continue ;	6062:4:128421:128429	2657025	0	True				
ANR	2657077	IfStatement	if ( v == x )		2657025	2					
ANR	2657078	Condition	v == x	6064:7:128443:128448	2657025	0	True				
ANR	2657079	EqualityExpression	v == x		2657025	0		==			
ANR	2657080	Identifier	v		2657025	0					
ANR	2657081	Identifier	x		2657025	1					
ANR	2657082	CompoundStatement		9:15:138:138	2657025	1					
ANR	2657083	ExpressionStatement	* y = i	6065:4:128457:128463	2657025	0	True				
ANR	2657084	AssignmentExpression	* y = i		2657025	0		=			
ANR	2657085	UnaryOperationExpression	* y		2657025	0					
ANR	2657086	UnaryOperator	*		2657025	0					
ANR	2657087	Identifier	y		2657025	1					
ANR	2657088	Identifier	i		2657025	1					
ANR	2657089	ExpressionStatement	* z = 16 - ( j / 2 )	6066:4:128469:128486	2657025	1	True				
ANR	2657090	AssignmentExpression	* z = 16 - ( j / 2 )		2657025	0		=			
ANR	2657091	UnaryOperationExpression	* z		2657025	0					
ANR	2657092	UnaryOperator	*		2657025	0					
ANR	2657093	Identifier	z		2657025	1					
ANR	2657094	AdditiveExpression	16 - ( j / 2 )		2657025	1		-			
ANR	2657095	PrimaryExpression	16		2657025	0					
ANR	2657096	MultiplicativeExpression	j / 2		2657025	1		/			
ANR	2657097	Identifier	j		2657025	0					
ANR	2657098	PrimaryExpression	2		2657025	1					
ANR	2657099	ReturnStatement	return 1 ;	6067:4:128492:128500	2657025	2	True				
ANR	2657100	PrimaryExpression	1		2657025	0					
ANR	2657101	ReturnStatement	return 0 ;	6071:1:128515:128523	2657025	2	True				
ANR	2657102	PrimaryExpression	0		2657025	0					
ANR	2657103	ReturnType	static int		2657025	1					
ANR	2657104	Identifier	findyz		2657025	2					
ANR	2657105	ParameterList	"int x , int * y , int * z"		2657025	3					
ANR	2657106	Parameter	int x	6056:18:128289:128293	2657025	0	True				
ANR	2657107	ParameterType	int		2657025	0					
ANR	2657108	Identifier	x		2657025	1					
ANR	2657109	Parameter	int * y	6056:25:128296:128301	2657025	1	True				
ANR	2657110	ParameterType	int *		2657025	0					
ANR	2657111	Identifier	y		2657025	1					
ANR	2657112	Parameter	int * z	6056:33:128304:128309	2657025	2	True				
ANR	2657113	ParameterType	int *		2657025	0					
ANR	2657114	Identifier	z		2657025	1					
ANR	2657115	CFGEntryNode	ENTRY		2657025		True				
ANR	2657116	CFGExitNode	EXIT		2657025		True				
ANR	2657117	Symbol	* y		2657025						
ANR	2657118	Symbol	* z		2657025						
ANR	2657119	Symbol	v		2657025						
ANR	2657120	Symbol	x		2657025						
ANR	2657121	Symbol	y		2657025						
ANR	2657122	Symbol	i		2657025						
ANR	2657123	Symbol	z		2657025						
ANR	2657124	Symbol	j		2657025						
ANR	2657125	Function	arm_assemble	6074:0:128528:139373							
ANR	2657126	FunctionDef	"arm_assemble (ArmOpcode * ao , ut64 off , const char * str)"		2657125	0					
ANR	2657127	CompoundStatement		6074:66:128594:139373	2657125	0					
ANR	2657128	IdentifierDeclStatement	"int i , j , ret , reg , a , b ;"	6075:1:128597:128621	2657125	0	True				
ANR	2657129	IdentifierDecl	i		2657125	0					
ANR	2657130	IdentifierDeclType	int		2657125	0					
ANR	2657131	Identifier	i		2657125	1					
ANR	2657132	IdentifierDecl	j		2657125	1					
ANR	2657133	IdentifierDeclType	int		2657125	0					
ANR	2657134	Identifier	j		2657125	1					
ANR	2657135	IdentifierDecl	ret		2657125	2					
ANR	2657136	IdentifierDeclType	int		2657125	0					
ANR	2657137	Identifier	ret		2657125	1					
ANR	2657138	IdentifierDecl	reg		2657125	3					
ANR	2657139	IdentifierDeclType	int		2657125	0					
ANR	2657140	Identifier	reg		2657125	1					
ANR	2657141	IdentifierDecl	a		2657125	4					
ANR	2657142	IdentifierDeclType	int		2657125	0					
ANR	2657143	Identifier	a		2657125	1					
ANR	2657144	IdentifierDecl	b		2657125	5					
ANR	2657145	IdentifierDeclType	int		2657125	0					
ANR	2657146	Identifier	b		2657125	1					
ANR	2657147	IdentifierDeclStatement	"int coproc , opc ;"	6076:1:128624:128639	2657125	1	True				
ANR	2657148	IdentifierDecl	coproc		2657125	0					
ANR	2657149	IdentifierDeclType	int		2657125	0					
ANR	2657150	Identifier	coproc		2657125	1					
ANR	2657151	IdentifierDecl	opc		2657125	1					
ANR	2657152	IdentifierDeclType	int		2657125	0					
ANR	2657153	Identifier	opc		2657125	1					
ANR	2657154	IdentifierDeclStatement	bool rex = false ;	6077:1:128642:128658	2657125	2	True				
ANR	2657155	IdentifierDecl	rex = false		2657125	0					
ANR	2657156	IdentifierDeclType	bool		2657125	0					
ANR	2657157	Identifier	rex		2657125	1					
ANR	2657158	AssignmentExpression	rex = false		2657125	2		=			
ANR	2657159	Identifier	false		2657125	0					
ANR	2657160	Identifier	false		2657125	1					
ANR	2657161	IdentifierDeclStatement	"int shift , low , high ;"	6078:1:128661:128681	2657125	3	True				
ANR	2657162	IdentifierDecl	shift		2657125	0					
ANR	2657163	IdentifierDeclType	int		2657125	0					
ANR	2657164	Identifier	shift		2657125	1					
ANR	2657165	IdentifierDecl	low		2657125	1					
ANR	2657166	IdentifierDeclType	int		2657125	0					
ANR	2657167	Identifier	low		2657125	1					
ANR	2657168	IdentifierDecl	high		2657125	2					
ANR	2657169	IdentifierDeclType	int		2657125	0					
ANR	2657170	Identifier	high		2657125	1					
ANR	2657171	ForStatement	for ( i = 0 ; ops [ i ] . name ; i ++ )		2657125	4					
ANR	2657172	ForInit	i = 0 ;	6079:6:128689:128694	2657125	0	True				
ANR	2657173	AssignmentExpression	i = 0		2657125	0		=			
ANR	2657174	Identifier	i		2657125	0					
ANR	2657175	PrimaryExpression	0		2657125	1					
ANR	2657176	Condition	ops [ i ] . name	6079:13:128696:128706	2657125	1	True				
ANR	2657177	MemberAccess	ops [ i ] . name		2657125	0					
ANR	2657178	ArrayIndexing	ops [ i ]		2657125	0					
ANR	2657179	Identifier	ops		2657125	0					
ANR	2657180	Identifier	i		2657125	1					
ANR	2657181	Identifier	name		2657125	1					
ANR	2657182	PostIncDecOperationExpression	i ++	6079:26:128709:128711	2657125	2	True				
ANR	2657183	Identifier	i		2657125	0					
ANR	2657184	IncDec	++		2657125	1					
ANR	2657185	CompoundStatement		6:31:119:119	2657125	3					
ANR	2657186	IfStatement	"if ( ! strncmp ( ao -> op , ops [ i ] . name , strlen ( ops [ i ] . name ) ) )"		2657125	0					
ANR	2657187	Condition	"! strncmp ( ao -> op , ops [ i ] . name , strlen ( ops [ i ] . name ) )"	6080:6:128722:128773	2657125	0	True				
ANR	2657188	UnaryOperationExpression	"! strncmp ( ao -> op , ops [ i ] . name , strlen ( ops [ i ] . name ) )"		2657125	0					
ANR	2657189	UnaryOperator	!		2657125	0					
ANR	2657190	CallExpression	"strncmp ( ao -> op , ops [ i ] . name , strlen ( ops [ i ] . name ) )"		2657125	1					
ANR	2657191	Callee	strncmp		2657125	0					
ANR	2657192	Identifier	strncmp		2657125	0					
ANR	2657193	ArgumentList	ao -> op		2657125	1					
ANR	2657194	Argument	ao -> op		2657125	0					
ANR	2657195	PtrMemberAccess	ao -> op		2657125	0					
ANR	2657196	Identifier	ao		2657125	0					
ANR	2657197	Identifier	op		2657125	1					
ANR	2657198	Argument	ops [ i ] . name		2657125	1					
ANR	2657199	MemberAccess	ops [ i ] . name		2657125	0					
ANR	2657200	ArrayIndexing	ops [ i ]		2657125	0					
ANR	2657201	Identifier	ops		2657125	0					
ANR	2657202	Identifier	i		2657125	1					
ANR	2657203	Identifier	name		2657125	1					
ANR	2657204	Argument	strlen ( ops [ i ] . name )		2657125	2					
ANR	2657205	CallExpression	strlen ( ops [ i ] . name )		2657125	0					
ANR	2657206	Callee	strlen		2657125	0					
ANR	2657207	Identifier	strlen		2657125	0					
ANR	2657208	ArgumentList	ops [ i ] . name		2657125	1					
ANR	2657209	Argument	ops [ i ] . name		2657125	0					
ANR	2657210	MemberAccess	ops [ i ] . name		2657125	0					
ANR	2657211	ArrayIndexing	ops [ i ]		2657125	0					
ANR	2657212	Identifier	ops		2657125	0					
ANR	2657213	Identifier	i		2657125	1					
ANR	2657214	Identifier	name		2657125	1					
ANR	2657215	CompoundStatement		7:60:181:181	2657125	1					
ANR	2657216	ExpressionStatement	ao -> o = ops [ i ] . code	6081:3:128781:128800	2657125	0	True				
ANR	2657217	AssignmentExpression	ao -> o = ops [ i ] . code		2657125	0		=			
ANR	2657218	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657219	Identifier	ao		2657125	0					
ANR	2657220	Identifier	o		2657125	1					
ANR	2657221	MemberAccess	ops [ i ] . code		2657125	1					
ANR	2657222	ArrayIndexing	ops [ i ]		2657125	0					
ANR	2657223	Identifier	ops		2657125	0					
ANR	2657224	Identifier	i		2657125	1					
ANR	2657225	Identifier	code		2657125	1					
ANR	2657226	ExpressionStatement	"arm_opcode_cond ( ao , strlen ( ops [ i ] . name ) )"	6082:3:128805:128846	2657125	1	True				
ANR	2657227	CallExpression	"arm_opcode_cond ( ao , strlen ( ops [ i ] . name ) )"		2657125	0					
ANR	2657228	Callee	arm_opcode_cond		2657125	0					
ANR	2657229	Identifier	arm_opcode_cond		2657125	0					
ANR	2657230	ArgumentList	ao		2657125	1					
ANR	2657231	Argument	ao		2657125	0					
ANR	2657232	Identifier	ao		2657125	0					
ANR	2657233	Argument	strlen ( ops [ i ] . name )		2657125	1					
ANR	2657234	CallExpression	strlen ( ops [ i ] . name )		2657125	0					
ANR	2657235	Callee	strlen		2657125	0					
ANR	2657236	Identifier	strlen		2657125	0					
ANR	2657237	ArgumentList	ops [ i ] . name		2657125	1					
ANR	2657238	Argument	ops [ i ] . name		2657125	0					
ANR	2657239	MemberAccess	ops [ i ] . name		2657125	0					
ANR	2657240	ArrayIndexing	ops [ i ]		2657125	0					
ANR	2657241	Identifier	ops		2657125	0					
ANR	2657242	Identifier	i		2657125	1					
ANR	2657243	Identifier	name		2657125	1					
ANR	2657244	IfStatement	if ( ao -> a [ 0 ] || ops [ i ] . type == TYPE_BKP )		2657125	2					
ANR	2657245	Condition	ao -> a [ 0 ] || ops [ i ] . type == TYPE_BKP	6083:7:128855:128889	2657125	0	True				
ANR	2657246	OrExpression	ao -> a [ 0 ] || ops [ i ] . type == TYPE_BKP		2657125	0		||			
ANR	2657247	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2657248	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657249	Identifier	ao		2657125	0					
ANR	2657250	Identifier	a		2657125	1					
ANR	2657251	PrimaryExpression	0		2657125	1					
ANR	2657252	EqualityExpression	ops [ i ] . type == TYPE_BKP		2657125	1		==			
ANR	2657253	MemberAccess	ops [ i ] . type		2657125	0					
ANR	2657254	ArrayIndexing	ops [ i ]		2657125	0					
ANR	2657255	Identifier	ops		2657125	0					
ANR	2657256	Identifier	i		2657125	1					
ANR	2657257	Identifier	type		2657125	1					
ANR	2657258	Identifier	TYPE_BKP		2657125	1					
ANR	2657259	CompoundStatement		10:44:297:297	2657125	1					
ANR	2657260	SwitchStatement	switch ( ops [ i ] . type )		2657125	0					
ANR	2657261	Condition	ops [ i ] . type	6084:12:128906:128916	2657125	0	True				
ANR	2657262	MemberAccess	ops [ i ] . type		2657125	0					
ANR	2657263	ArrayIndexing	ops [ i ]		2657125	0					
ANR	2657264	Identifier	ops		2657125	0					
ANR	2657265	Identifier	i		2657125	1					
ANR	2657266	Identifier	type		2657125	1					
ANR	2657267	CompoundStatement		463:4:10507:10538	2657125	1					
ANR	2657268	Label	case TYPE_MEM :	6085:4:128925:128938	2657125	0	True				
ANR	2657269	Identifier	TYPE_MEM		2657125	0					
ANR	2657270	IfStatement	"if ( ! strncmp ( ops [ i ] . name , ""strex"" , 5 ) )"		2657125	1					
ANR	2657271	Condition	"! strncmp ( ops [ i ] . name , ""strex"" , 5 )"	6086:9:128949:128982	2657125	0	True				
ANR	2657272	UnaryOperationExpression	"! strncmp ( ops [ i ] . name , ""strex"" , 5 )"		2657125	0					
ANR	2657273	UnaryOperator	!		2657125	0					
ANR	2657274	CallExpression	"strncmp ( ops [ i ] . name , ""strex"" , 5 )"		2657125	1					
ANR	2657275	Callee	strncmp		2657125	0					
ANR	2657276	Identifier	strncmp		2657125	0					
ANR	2657277	ArgumentList	ops [ i ] . name		2657125	1					
ANR	2657278	Argument	ops [ i ] . name		2657125	0					
ANR	2657279	MemberAccess	ops [ i ] . name		2657125	0					
ANR	2657280	ArrayIndexing	ops [ i ]		2657125	0					
ANR	2657281	Identifier	ops		2657125	0					
ANR	2657282	Identifier	i		2657125	1					
ANR	2657283	Identifier	name		2657125	1					
ANR	2657284	Argument	"""strex"""		2657125	1					
ANR	2657285	PrimaryExpression	"""strex"""		2657125	0					
ANR	2657286	Argument	5		2657125	2					
ANR	2657287	PrimaryExpression	5		2657125	0					
ANR	2657288	CompoundStatement		13:45:390:390	2657125	1					
ANR	2657289	ExpressionStatement	rex = 1	6087:6:128993:129000	2657125	0	True				
ANR	2657290	AssignmentExpression	rex = 1		2657125	0		=			
ANR	2657291	Identifier	rex		2657125	0					
ANR	2657292	PrimaryExpression	1		2657125	1					
ANR	2657293	IfStatement	"if ( ! strcmp ( ops [ i ] . name , ""str"" ) || ! strcmp ( ops [ i ] . name , ""ldr"" ) )"		2657125	2					
ANR	2657294	Condition	"! strcmp ( ops [ i ] . name , ""str"" ) || ! strcmp ( ops [ i ] . name , ""ldr"" )"	6089:9:129018:129077	2657125	0	True				
ANR	2657295	OrExpression	"! strcmp ( ops [ i ] . name , ""str"" ) || ! strcmp ( ops [ i ] . name , ""ldr"" )"		2657125	0		||			
ANR	2657296	UnaryOperationExpression	"! strcmp ( ops [ i ] . name , ""str"" )"		2657125	0					
ANR	2657297	UnaryOperator	!		2657125	0					
ANR	2657298	CallExpression	"strcmp ( ops [ i ] . name , ""str"" )"		2657125	1					
ANR	2657299	Callee	strcmp		2657125	0					
ANR	2657300	Identifier	strcmp		2657125	0					
ANR	2657301	ArgumentList	ops [ i ] . name		2657125	1					
ANR	2657302	Argument	ops [ i ] . name		2657125	0					
ANR	2657303	MemberAccess	ops [ i ] . name		2657125	0					
ANR	2657304	ArrayIndexing	ops [ i ]		2657125	0					
ANR	2657305	Identifier	ops		2657125	0					
ANR	2657306	Identifier	i		2657125	1					
ANR	2657307	Identifier	name		2657125	1					
ANR	2657308	Argument	"""str"""		2657125	1					
ANR	2657309	PrimaryExpression	"""str"""		2657125	0					
ANR	2657310	UnaryOperationExpression	"! strcmp ( ops [ i ] . name , ""ldr"" )"		2657125	1					
ANR	2657311	UnaryOperator	!		2657125	0					
ANR	2657312	CallExpression	"strcmp ( ops [ i ] . name , ""ldr"" )"		2657125	1					
ANR	2657313	Callee	strcmp		2657125	0					
ANR	2657314	Identifier	strcmp		2657125	0					
ANR	2657315	ArgumentList	ops [ i ] . name		2657125	1					
ANR	2657316	Argument	ops [ i ] . name		2657125	0					
ANR	2657317	MemberAccess	ops [ i ] . name		2657125	0					
ANR	2657318	ArrayIndexing	ops [ i ]		2657125	0					
ANR	2657319	Identifier	ops		2657125	0					
ANR	2657320	Identifier	i		2657125	1					
ANR	2657321	Identifier	name		2657125	1					
ANR	2657322	Argument	"""ldr"""		2657125	1					
ANR	2657323	PrimaryExpression	"""ldr"""		2657125	0					
ANR	2657324	CompoundStatement		16:71:485:485	2657125	1					
ANR	2657325	IfStatement	if ( ! ao -> a [ 2 ] )		2657125	0					
ANR	2657326	Condition	! ao -> a [ 2 ]	6090:10:129092:129100	2657125	0	True				
ANR	2657327	UnaryOperationExpression	! ao -> a [ 2 ]		2657125	0					
ANR	2657328	UnaryOperator	!		2657125	0					
ANR	2657329	ArrayIndexing	ao -> a [ 2 ]		2657125	1					
ANR	2657330	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657331	Identifier	ao		2657125	0					
ANR	2657332	Identifier	a		2657125	1					
ANR	2657333	PrimaryExpression	2		2657125	1					
ANR	2657334	CompoundStatement		17:21:508:508	2657125	1					
ANR	2657335	ExpressionStatement	"ao -> a [ 2 ] = ""0"""	6091:7:129112:129126	2657125	0	True				
ANR	2657336	AssignmentExpression	"ao -> a [ 2 ] = ""0"""		2657125	0		=			
ANR	2657337	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2657338	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657339	Identifier	ao		2657125	0					
ANR	2657340	Identifier	a		2657125	1					
ANR	2657341	PrimaryExpression	2		2657125	1					
ANR	2657342	PrimaryExpression	"""0"""		2657125	1					
ANR	2657343	ExpressionStatement	getrange ( ao -> a [ 0 ] )	6094:5:129148:129167	2657125	3	True				
ANR	2657344	CallExpression	getrange ( ao -> a [ 0 ] )		2657125	0					
ANR	2657345	Callee	getrange		2657125	0					
ANR	2657346	Identifier	getrange		2657125	0					
ANR	2657347	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2657348	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2657349	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2657350	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657351	Identifier	ao		2657125	0					
ANR	2657352	Identifier	a		2657125	1					
ANR	2657353	PrimaryExpression	0		2657125	1					
ANR	2657354	ExpressionStatement	getrange ( ao -> a [ 1 ] )	6095:5:129174:129193	2657125	4	True				
ANR	2657355	CallExpression	getrange ( ao -> a [ 1 ] )		2657125	0					
ANR	2657356	Callee	getrange		2657125	0					
ANR	2657357	Identifier	getrange		2657125	0					
ANR	2657358	ArgumentList	ao -> a [ 1 ]		2657125	1					
ANR	2657359	Argument	ao -> a [ 1 ]		2657125	0					
ANR	2657360	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2657361	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657362	Identifier	ao		2657125	0					
ANR	2657363	Identifier	a		2657125	1					
ANR	2657364	PrimaryExpression	1		2657125	1					
ANR	2657365	ExpressionStatement	getrange ( ao -> a [ 2 ] )	6096:5:129200:129219	2657125	5	True				
ANR	2657366	CallExpression	getrange ( ao -> a [ 2 ] )		2657125	0					
ANR	2657367	Callee	getrange		2657125	0					
ANR	2657368	Identifier	getrange		2657125	0					
ANR	2657369	ArgumentList	ao -> a [ 2 ]		2657125	1					
ANR	2657370	Argument	ao -> a [ 2 ]		2657125	0					
ANR	2657371	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2657372	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657373	Identifier	ao		2657125	0					
ANR	2657374	Identifier	a		2657125	1					
ANR	2657375	PrimaryExpression	2		2657125	1					
ANR	2657376	IfStatement	if ( ao -> a [ 0 ] && ao -> a [ 1 ] )		2657125	6					
ANR	2657377	Condition	ao -> a [ 0 ] && ao -> a [ 1 ]	6097:9:129230:129249	2657125	0	True				
ANR	2657378	AndExpression	ao -> a [ 0 ] && ao -> a [ 1 ]		2657125	0		&&			
ANR	2657379	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2657380	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657381	Identifier	ao		2657125	0					
ANR	2657382	Identifier	a		2657125	1					
ANR	2657383	PrimaryExpression	0		2657125	1					
ANR	2657384	ArrayIndexing	ao -> a [ 1 ]		2657125	1					
ANR	2657385	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657386	Identifier	ao		2657125	0					
ANR	2657387	Identifier	a		2657125	1					
ANR	2657388	PrimaryExpression	1		2657125	1					
ANR	2657389	CompoundStatement		28:6:750:776	2657125	1					
ANR	2657390	IdentifierDeclStatement	char rn [ 8 ] ;	6098:6:129260:129270	2657125	0	True				
ANR	2657391	IdentifierDecl	rn [ 8 ]		2657125	0					
ANR	2657392	IdentifierDeclType	char [ 8 ]		2657125	0					
ANR	2657393	Identifier	rn		2657125	1					
ANR	2657394	PrimaryExpression	8		2657125	2					
ANR	2657395	ExpressionStatement	"strncpy ( rn , ao -> a [ 1 ] , 7 )"	6099:6:129278:129303	2657125	1	True				
ANR	2657396	CallExpression	"strncpy ( rn , ao -> a [ 1 ] , 7 )"		2657125	0					
ANR	2657397	Callee	strncpy		2657125	0					
ANR	2657398	Identifier	strncpy		2657125	0					
ANR	2657399	ArgumentList	rn		2657125	1					
ANR	2657400	Argument	rn		2657125	0					
ANR	2657401	Identifier	rn		2657125	0					
ANR	2657402	Argument	ao -> a [ 1 ]		2657125	1					
ANR	2657403	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2657404	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657405	Identifier	ao		2657125	0					
ANR	2657406	Identifier	a		2657125	1					
ANR	2657407	PrimaryExpression	1		2657125	1					
ANR	2657408	Argument	7		2657125	2					
ANR	2657409	PrimaryExpression	7		2657125	0					
ANR	2657410	IdentifierDeclStatement	int r0 = getreg ( ao -> a [ 0 ] ) ;	6100:6:129311:129337	2657125	2	True				
ANR	2657411	IdentifierDecl	r0 = getreg ( ao -> a [ 0 ] )		2657125	0					
ANR	2657412	IdentifierDeclType	int		2657125	0					
ANR	2657413	Identifier	r0		2657125	1					
ANR	2657414	AssignmentExpression	r0 = getreg ( ao -> a [ 0 ] )		2657125	2		=			
ANR	2657415	Identifier	r0		2657125	0					
ANR	2657416	CallExpression	getreg ( ao -> a [ 0 ] )		2657125	1					
ANR	2657417	Callee	getreg		2657125	0					
ANR	2657418	Identifier	getreg		2657125	0					
ANR	2657419	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2657420	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2657421	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2657422	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657423	Identifier	ao		2657125	0					
ANR	2657424	Identifier	a		2657125	1					
ANR	2657425	PrimaryExpression	0		2657125	1					
ANR	2657426	IdentifierDeclStatement	int r1 = getreg ( ao -> a [ 1 ] ) ;	6101:6:129345:129371	2657125	3	True				
ANR	2657427	IdentifierDecl	r1 = getreg ( ao -> a [ 1 ] )		2657125	0					
ANR	2657428	IdentifierDeclType	int		2657125	0					
ANR	2657429	Identifier	r1		2657125	1					
ANR	2657430	AssignmentExpression	r1 = getreg ( ao -> a [ 1 ] )		2657125	2		=			
ANR	2657431	Identifier	r1		2657125	0					
ANR	2657432	CallExpression	getreg ( ao -> a [ 1 ] )		2657125	1					
ANR	2657433	Callee	getreg		2657125	0					
ANR	2657434	Identifier	getreg		2657125	0					
ANR	2657435	ArgumentList	ao -> a [ 1 ]		2657125	1					
ANR	2657436	Argument	ao -> a [ 1 ]		2657125	0					
ANR	2657437	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2657438	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657439	Identifier	ao		2657125	0					
ANR	2657440	Identifier	a		2657125	1					
ANR	2657441	PrimaryExpression	1		2657125	1					
ANR	2657442	IfStatement	if ( ( r0 < 0 || r0 > 15 ) || ( r1 > 15 || r1 < 0 ) )		2657125	4					
ANR	2657443	Condition	( r0 < 0 || r0 > 15 ) || ( r1 > 15 || r1 < 0 )	6102:10:129383:129424	2657125	0	True				
ANR	2657444	OrExpression	( r0 < 0 || r0 > 15 ) || ( r1 > 15 || r1 < 0 )		2657125	0		||			
ANR	2657445	OrExpression	r0 < 0 || r0 > 15		2657125	0		||			
ANR	2657446	RelationalExpression	r0 < 0		2657125	0		<			
ANR	2657447	Identifier	r0		2657125	0					
ANR	2657448	PrimaryExpression	0		2657125	1					
ANR	2657449	RelationalExpression	r0 > 15		2657125	1		>			
ANR	2657450	Identifier	r0		2657125	0					
ANR	2657451	PrimaryExpression	15		2657125	1					
ANR	2657452	OrExpression	r1 > 15 || r1 < 0		2657125	1		||			
ANR	2657453	RelationalExpression	r1 > 15		2657125	0		>			
ANR	2657454	Identifier	r1		2657125	0					
ANR	2657455	PrimaryExpression	15		2657125	1					
ANR	2657456	RelationalExpression	r1 < 0		2657125	1		<			
ANR	2657457	Identifier	r1		2657125	0					
ANR	2657458	PrimaryExpression	0		2657125	1					
ANR	2657459	CompoundStatement		29:54:832:832	2657125	1					
ANR	2657460	ReturnStatement	return 0 ;	6103:7:129436:129444	2657125	0	True				
ANR	2657461	PrimaryExpression	0		2657125	0					
ANR	2657462	ExpressionStatement	ao -> o |= r0 << 20	6105:6:129460:129477	2657125	5	True				
ANR	2657463	AssignmentExpression	ao -> o |= r0 << 20		2657125	0		|=			
ANR	2657464	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657465	Identifier	ao		2657125	0					
ANR	2657466	Identifier	o		2657125	1					
ANR	2657467	ShiftExpression	r0 << 20		2657125	1		<<			
ANR	2657468	Identifier	r0		2657125	0					
ANR	2657469	PrimaryExpression	20		2657125	1					
ANR	2657470	IfStatement	"if ( ! strcmp ( ops [ i ] . name , ""strd"" ) )"		2657125	6					
ANR	2657471	Condition	"! strcmp ( ops [ i ] . name , ""strd"" )"	6106:10:129489:129517	2657125	0	True				
ANR	2657472	UnaryOperationExpression	"! strcmp ( ops [ i ] . name , ""strd"" )"		2657125	0					
ANR	2657473	UnaryOperator	!		2657125	0					
ANR	2657474	CallExpression	"strcmp ( ops [ i ] . name , ""strd"" )"		2657125	1					
ANR	2657475	Callee	strcmp		2657125	0					
ANR	2657476	Identifier	strcmp		2657125	0					
ANR	2657477	ArgumentList	ops [ i ] . name		2657125	1					
ANR	2657478	Argument	ops [ i ] . name		2657125	0					
ANR	2657479	MemberAccess	ops [ i ] . name		2657125	0					
ANR	2657480	ArrayIndexing	ops [ i ]		2657125	0					
ANR	2657481	Identifier	ops		2657125	0					
ANR	2657482	Identifier	i		2657125	1					
ANR	2657483	Identifier	name		2657125	1					
ANR	2657484	Argument	"""strd"""		2657125	1					
ANR	2657485	PrimaryExpression	"""strd"""		2657125	0					
ANR	2657486	CompoundStatement		33:41:925:925	2657125	1					
ANR	2657487	ExpressionStatement	r1 = getreg ( ao -> a [ 2 ] )	6107:7:129529:129551	2657125	0	True				
ANR	2657488	AssignmentExpression	r1 = getreg ( ao -> a [ 2 ] )		2657125	0		=			
ANR	2657489	Identifier	r1		2657125	0					
ANR	2657490	CallExpression	getreg ( ao -> a [ 2 ] )		2657125	1					
ANR	2657491	Callee	getreg		2657125	0					
ANR	2657492	Identifier	getreg		2657125	0					
ANR	2657493	ArgumentList	ao -> a [ 2 ]		2657125	1					
ANR	2657494	Argument	ao -> a [ 2 ]		2657125	0					
ANR	2657495	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2657496	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657497	Identifier	ao		2657125	0					
ANR	2657498	Identifier	a		2657125	1					
ANR	2657499	PrimaryExpression	2		2657125	1					
ANR	2657500	IfStatement	if ( r1 == - 1 )		2657125	1					
ANR	2657501	Condition	r1 == - 1	6108:11:129564:129571	2657125	0	True				
ANR	2657502	EqualityExpression	r1 == - 1		2657125	0		==			
ANR	2657503	Identifier	r1		2657125	0					
ANR	2657504	UnaryOperationExpression	- 1		2657125	1					
ANR	2657505	UnaryOperator	-		2657125	0					
ANR	2657506	PrimaryExpression	1		2657125	1					
ANR	2657507	CompoundStatement		35:21:979:979	2657125	1					
ANR	2657508	BreakStatement	break ;	6109:8:129584:129589	2657125	0	True				
ANR	2657509	ExpressionStatement	ao -> o |= r1 << 8	6111:7:129607:129623	2657125	2	True				
ANR	2657510	AssignmentExpression	ao -> o |= r1 << 8		2657125	0		|=			
ANR	2657511	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657512	Identifier	ao		2657125	0					
ANR	2657513	Identifier	o		2657125	1					
ANR	2657514	ShiftExpression	r1 << 8		2657125	1		<<			
ANR	2657515	Identifier	r1		2657125	0					
ANR	2657516	PrimaryExpression	8		2657125	1					
ANR	2657517	IfStatement	if ( ao -> a [ 3 ] )		2657125	3					
ANR	2657518	Condition	ao -> a [ 3 ]	6112:11:129636:129643	2657125	0	True				
ANR	2657519	ArrayIndexing	ao -> a [ 3 ]		2657125	0					
ANR	2657520	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657521	Identifier	ao		2657125	0					
ANR	2657522	Identifier	a		2657125	1					
ANR	2657523	PrimaryExpression	3		2657125	1					
ANR	2657524	CompoundStatement		44:8:1168:1195	2657125	1					
ANR	2657525	IdentifierDeclStatement	"char * bracket = strchr ( ao -> a [ 3 ] , ']' ) ;"	6113:8:129656:129694	2657125	0	True				
ANR	2657526	IdentifierDecl	"* bracket = strchr ( ao -> a [ 3 ] , ']' )"		2657125	0					
ANR	2657527	IdentifierDeclType	char *		2657125	0					
ANR	2657528	Identifier	bracket		2657125	1					
ANR	2657529	AssignmentExpression	"* bracket = strchr ( ao -> a [ 3 ] , ']' )"		2657125	2		=			
ANR	2657530	Identifier	bracket		2657125	0					
ANR	2657531	CallExpression	"strchr ( ao -> a [ 3 ] , ']' )"		2657125	1					
ANR	2657532	Callee	strchr		2657125	0					
ANR	2657533	Identifier	strchr		2657125	0					
ANR	2657534	ArgumentList	ao -> a [ 3 ]		2657125	1					
ANR	2657535	Argument	ao -> a [ 3 ]		2657125	0					
ANR	2657536	ArrayIndexing	ao -> a [ 3 ]		2657125	0					
ANR	2657537	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657538	Identifier	ao		2657125	0					
ANR	2657539	Identifier	a		2657125	1					
ANR	2657540	PrimaryExpression	3		2657125	1					
ANR	2657541	Argument	']'		2657125	1					
ANR	2657542	PrimaryExpression	']'		2657125	0					
ANR	2657543	IfStatement	if ( bracket )		2657125	1					
ANR	2657544	Condition	bracket	6114:12:129708:129714	2657125	0	True				
ANR	2657545	Identifier	bracket		2657125	0					
ANR	2657546	CompoundStatement		41:21:1122:1122	2657125	1					
ANR	2657547	ExpressionStatement	* bracket = '\\0'	6115:9:129728:129743	2657125	0	True				
ANR	2657548	AssignmentExpression	* bracket = '\\0'		2657125	0		=			
ANR	2657549	UnaryOperationExpression	* bracket		2657125	0					
ANR	2657550	UnaryOperator	*		2657125	0					
ANR	2657551	Identifier	bracket		2657125	1					
ANR	2657552	PrimaryExpression	'\\0'		2657125	1					
ANR	2657553	IdentifierDeclStatement	int num = getnum ( ao -> a [ 3 ] ) ;	6117:8:129763:129790	2657125	2	True				
ANR	2657554	IdentifierDecl	num = getnum ( ao -> a [ 3 ] )		2657125	0					
ANR	2657555	IdentifierDeclType	int		2657125	0					
ANR	2657556	Identifier	num		2657125	1					
ANR	2657557	AssignmentExpression	num = getnum ( ao -> a [ 3 ] )		2657125	2		=			
ANR	2657558	Identifier	num		2657125	0					
ANR	2657559	CallExpression	getnum ( ao -> a [ 3 ] )		2657125	1					
ANR	2657560	Callee	getnum		2657125	0					
ANR	2657561	Identifier	getnum		2657125	0					
ANR	2657562	ArgumentList	ao -> a [ 3 ]		2657125	1					
ANR	2657563	Argument	ao -> a [ 3 ]		2657125	0					
ANR	2657564	ArrayIndexing	ao -> a [ 3 ]		2657125	0					
ANR	2657565	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657566	Identifier	ao		2657125	0					
ANR	2657567	Identifier	a		2657125	1					
ANR	2657568	PrimaryExpression	3		2657125	1					
ANR	2657569	ExpressionStatement	ao -> o |= ( num & 0x0f ) << 24	6118:8:129800:129827	2657125	3	True				
ANR	2657570	AssignmentExpression	ao -> o |= ( num & 0x0f ) << 24		2657125	0		|=			
ANR	2657571	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657572	Identifier	ao		2657125	0					
ANR	2657573	Identifier	o		2657125	1					
ANR	2657574	ShiftExpression	( num & 0x0f ) << 24		2657125	1		<<			
ANR	2657575	BitAndExpression	num & 0x0f		2657125	0		&			
ANR	2657576	Identifier	num		2657125	0					
ANR	2657577	PrimaryExpression	0x0f		2657125	1					
ANR	2657578	PrimaryExpression	24		2657125	1					
ANR	2657579	ExpressionStatement	ao -> o |= ( ( num >> 4 ) & 0x0f ) << 16	6119:8:129837:129871	2657125	4	True				
ANR	2657580	AssignmentExpression	ao -> o |= ( ( num >> 4 ) & 0x0f ) << 16		2657125	0		|=			
ANR	2657581	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657582	Identifier	ao		2657125	0					
ANR	2657583	Identifier	o		2657125	1					
ANR	2657584	ShiftExpression	( ( num >> 4 ) & 0x0f ) << 16		2657125	1		<<			
ANR	2657585	BitAndExpression	( num >> 4 ) & 0x0f		2657125	0		&			
ANR	2657586	ShiftExpression	num >> 4		2657125	0		>>			
ANR	2657587	Identifier	num		2657125	0					
ANR	2657588	PrimaryExpression	4		2657125	1					
ANR	2657589	PrimaryExpression	0x0f		2657125	1					
ANR	2657590	PrimaryExpression	16		2657125	1					
ANR	2657591	BreakStatement	break ;	6121:7:129889:129894	2657125	4	True				
ANR	2657592	IfStatement	"if ( ! strcmp ( ops [ i ] . name , ""strh"" ) )"		2657125	7					
ANR	2657593	Condition	"! strcmp ( ops [ i ] . name , ""strh"" )"	6123:10:129914:129942	2657125	0	True				
ANR	2657594	UnaryOperationExpression	"! strcmp ( ops [ i ] . name , ""strh"" )"		2657125	0					
ANR	2657595	UnaryOperator	!		2657125	0					
ANR	2657596	CallExpression	"strcmp ( ops [ i ] . name , ""strh"" )"		2657125	1					
ANR	2657597	Callee	strcmp		2657125	0					
ANR	2657598	Identifier	strcmp		2657125	0					
ANR	2657599	ArgumentList	ops [ i ] . name		2657125	1					
ANR	2657600	Argument	ops [ i ] . name		2657125	0					
ANR	2657601	MemberAccess	ops [ i ] . name		2657125	0					
ANR	2657602	ArrayIndexing	ops [ i ]		2657125	0					
ANR	2657603	Identifier	ops		2657125	0					
ANR	2657604	Identifier	i		2657125	1					
ANR	2657605	Identifier	name		2657125	1					
ANR	2657606	Argument	"""strh"""		2657125	1					
ANR	2657607	PrimaryExpression	"""strh"""		2657125	0					
ANR	2657608	CompoundStatement		50:41:1350:1350	2657125	1					
ANR	2657609	ExpressionStatement	ao -> o |= r1 << 8	6124:7:129954:129970	2657125	0	True				
ANR	2657610	AssignmentExpression	ao -> o |= r1 << 8		2657125	0		|=			
ANR	2657611	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657612	Identifier	ao		2657125	0					
ANR	2657613	Identifier	o		2657125	1					
ANR	2657614	ShiftExpression	r1 << 8		2657125	1		<<			
ANR	2657615	Identifier	r1		2657125	0					
ANR	2657616	PrimaryExpression	8		2657125	1					
ANR	2657617	IfStatement	if ( ao -> a [ 2 ] )		2657125	1					
ANR	2657618	Condition	ao -> a [ 2 ]	6125:11:129983:129990	2657125	0	True				
ANR	2657619	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2657620	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657621	Identifier	ao		2657125	0					
ANR	2657622	Identifier	a		2657125	1					
ANR	2657623	PrimaryExpression	2		2657125	1					
ANR	2657624	CompoundStatement		52:21:1398:1398	2657125	1					
ANR	2657625	ExpressionStatement	reg = getreg ( ao -> a [ 2 ] )	6126:8:130003:130026	2657125	0	True				
ANR	2657626	AssignmentExpression	reg = getreg ( ao -> a [ 2 ] )		2657125	0		=			
ANR	2657627	Identifier	reg		2657125	0					
ANR	2657628	CallExpression	getreg ( ao -> a [ 2 ] )		2657125	1					
ANR	2657629	Callee	getreg		2657125	0					
ANR	2657630	Identifier	getreg		2657125	0					
ANR	2657631	ArgumentList	ao -> a [ 2 ]		2657125	1					
ANR	2657632	Argument	ao -> a [ 2 ]		2657125	0					
ANR	2657633	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2657634	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657635	Identifier	ao		2657125	0					
ANR	2657636	Identifier	a		2657125	1					
ANR	2657637	PrimaryExpression	2		2657125	1					
ANR	2657638	IfStatement	if ( reg != - 1 )		2657125	1					
ANR	2657639	Condition	reg != - 1	6127:12:130040:130048	2657125	0	True				
ANR	2657640	EqualityExpression	reg != - 1		2657125	0		!=			
ANR	2657641	Identifier	reg		2657125	0					
ANR	2657642	UnaryOperationExpression	- 1		2657125	1					
ANR	2657643	UnaryOperator	-		2657125	0					
ANR	2657644	PrimaryExpression	1		2657125	1					
ANR	2657645	CompoundStatement		54:23:1456:1456	2657125	1					
ANR	2657646	ExpressionStatement	ao -> o |= reg << 24	6128:9:130062:130080	2657125	0	True				
ANR	2657647	AssignmentExpression	ao -> o |= reg << 24		2657125	0		|=			
ANR	2657648	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657649	Identifier	ao		2657125	0					
ANR	2657650	Identifier	o		2657125	1					
ANR	2657651	ShiftExpression	reg << 24		2657125	1		<<			
ANR	2657652	Identifier	reg		2657125	0					
ANR	2657653	PrimaryExpression	24		2657125	1					
ANR	2657654	ElseStatement	else		2657125	0					
ANR	2657655	CompoundStatement		56:15:1502:1502	2657125	0					
ANR	2657656	ExpressionStatement	ao -> o |= 1 << 14	6130:9:130108:130124	2657125	0	True				
ANR	2657657	AssignmentExpression	ao -> o |= 1 << 14		2657125	0		|=			
ANR	2657658	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657659	Identifier	ao		2657125	0					
ANR	2657660	Identifier	o		2657125	1					
ANR	2657661	ShiftExpression	1 << 14		2657125	1		<<			
ANR	2657662	PrimaryExpression	1		2657125	0					
ANR	2657663	PrimaryExpression	14		2657125	1					
ANR	2657664	ExpressionStatement	ao -> o |= getnum ( ao -> a [ 2 ] ) << 24	6131:9:130135:130167	2657125	1	True				
ANR	2657665	AssignmentExpression	ao -> o |= getnum ( ao -> a [ 2 ] ) << 24		2657125	0		|=			
ANR	2657666	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657667	Identifier	ao		2657125	0					
ANR	2657668	Identifier	o		2657125	1					
ANR	2657669	ShiftExpression	getnum ( ao -> a [ 2 ] ) << 24		2657125	1		<<			
ANR	2657670	CallExpression	getnum ( ao -> a [ 2 ] )		2657125	0					
ANR	2657671	Callee	getnum		2657125	0					
ANR	2657672	Identifier	getnum		2657125	0					
ANR	2657673	ArgumentList	ao -> a [ 2 ]		2657125	1					
ANR	2657674	Argument	ao -> a [ 2 ]		2657125	0					
ANR	2657675	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2657676	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657677	Identifier	ao		2657125	0					
ANR	2657678	Identifier	a		2657125	1					
ANR	2657679	PrimaryExpression	2		2657125	1					
ANR	2657680	PrimaryExpression	24		2657125	1					
ANR	2657681	ElseStatement	else		2657125	0					
ANR	2657682	CompoundStatement		60:14:1598:1598	2657125	0					
ANR	2657683	ExpressionStatement	ao -> o |= 1 << 14	6134:8:130203:130219	2657125	0	True				
ANR	2657684	AssignmentExpression	ao -> o |= 1 << 14		2657125	0		|=			
ANR	2657685	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657686	Identifier	ao		2657125	0					
ANR	2657687	Identifier	o		2657125	1					
ANR	2657688	ShiftExpression	1 << 14		2657125	1		<<			
ANR	2657689	PrimaryExpression	1		2657125	0					
ANR	2657690	PrimaryExpression	14		2657125	1					
ANR	2657691	BreakStatement	break ;	6136:7:130237:130242	2657125	2	True				
ANR	2657692	IfStatement	if ( rex )		2657125	8					
ANR	2657693	Condition	rex	6138:10:130262:130264	2657125	0	True				
ANR	2657694	Identifier	rex		2657125	0					
ANR	2657695	CompoundStatement		65:15:1672:1672	2657125	1					
ANR	2657696	ExpressionStatement	ao -> o |= r1 << 24	6139:7:130276:130293	2657125	0	True				
ANR	2657697	AssignmentExpression	ao -> o |= r1 << 24		2657125	0		|=			
ANR	2657698	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657699	Identifier	ao		2657125	0					
ANR	2657700	Identifier	o		2657125	1					
ANR	2657701	ShiftExpression	r1 << 24		2657125	1		<<			
ANR	2657702	Identifier	r1		2657125	0					
ANR	2657703	PrimaryExpression	24		2657125	1					
ANR	2657704	ElseStatement	else		2657125	0					
ANR	2657705	CompoundStatement		67:13:1713:1713	2657125	0					
ANR	2657706	ExpressionStatement	ao -> o |= r1 << 8	6141:7:130317:130333	2657125	0	True				
ANR	2657707	AssignmentExpression	ao -> o |= r1 << 8		2657125	0		|=			
ANR	2657708	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657709	Identifier	ao		2657125	0					
ANR	2657710	Identifier	o		2657125	1					
ANR	2657711	ShiftExpression	r1 << 8		2657125	1		<<			
ANR	2657712	Identifier	r1		2657125	0					
ANR	2657713	PrimaryExpression	8		2657125	1					
ANR	2657714	ElseStatement	else		2657125	0					
ANR	2657715	CompoundStatement		70:12:1769:1769	2657125	0					
ANR	2657716	ReturnStatement	return 0 ;	6144:6:130372:130380	2657125	0	True				
ANR	2657717	PrimaryExpression	0		2657125	0					
ANR	2657718	ExpressionStatement	ret = getreg ( ao -> a [ 2 ] )	6147:5:130395:130418	2657125	7	True				
ANR	2657719	AssignmentExpression	ret = getreg ( ao -> a [ 2 ] )		2657125	0		=			
ANR	2657720	Identifier	ret		2657125	0					
ANR	2657721	CallExpression	getreg ( ao -> a [ 2 ] )		2657125	1					
ANR	2657722	Callee	getreg		2657125	0					
ANR	2657723	Identifier	getreg		2657125	0					
ANR	2657724	ArgumentList	ao -> a [ 2 ]		2657125	1					
ANR	2657725	Argument	ao -> a [ 2 ]		2657125	0					
ANR	2657726	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2657727	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657728	Identifier	ao		2657125	0					
ANR	2657729	Identifier	a		2657125	1					
ANR	2657730	PrimaryExpression	2		2657125	1					
ANR	2657731	IfStatement	if ( ret != - 1 )		2657125	8					
ANR	2657732	Condition	ret != - 1	6148:9:130429:130437	2657125	0	True				
ANR	2657733	EqualityExpression	ret != - 1		2657125	0		!=			
ANR	2657734	Identifier	ret		2657125	0					
ANR	2657735	UnaryOperationExpression	- 1		2657125	1					
ANR	2657736	UnaryOperator	-		2657125	0					
ANR	2657737	PrimaryExpression	1		2657125	1					
ANR	2657738	CompoundStatement		75:20:1845:1845	2657125	1					
ANR	2657739	IfStatement	if ( rex )		2657125	0					
ANR	2657740	Condition	rex	6149:10:130452:130454	2657125	0	True				
ANR	2657741	Identifier	rex		2657125	0					
ANR	2657742	CompoundStatement		76:15:1862:1862	2657125	1					
ANR	2657743	ExpressionStatement	ao -> o |= 1	6150:7:130466:130476	2657125	0	True				
ANR	2657744	AssignmentExpression	ao -> o |= 1		2657125	0		|=			
ANR	2657745	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657746	Identifier	ao		2657125	0					
ANR	2657747	Identifier	o		2657125	1					
ANR	2657748	PrimaryExpression	1		2657125	1					
ANR	2657749	ExpressionStatement	ao -> o |= ( ret & 0x0f ) << 8	6151:7:130485:130511	2657125	1	True				
ANR	2657750	AssignmentExpression	ao -> o |= ( ret & 0x0f ) << 8		2657125	0		|=			
ANR	2657751	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657752	Identifier	ao		2657125	0					
ANR	2657753	Identifier	o		2657125	1					
ANR	2657754	ShiftExpression	( ret & 0x0f ) << 8		2657125	1		<<			
ANR	2657755	BitAndExpression	ret & 0x0f		2657125	0		&			
ANR	2657756	Identifier	ret		2657125	0					
ANR	2657757	PrimaryExpression	0x0f		2657125	1					
ANR	2657758	PrimaryExpression	8		2657125	1					
ANR	2657759	ElseStatement	else		2657125	0					
ANR	2657760	CompoundStatement		79:13:1931:1931	2657125	0					
ANR	2657761	ExpressionStatement	"ao -> o |= ( strstr ( str , ""],"" ) ) ? 6 : 7"	6153:7:130535:130572	2657125	0	True				
ANR	2657762	AssignmentExpression	"ao -> o |= ( strstr ( str , ""],"" ) ) ? 6 : 7"		2657125	0		|=			
ANR	2657763	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657764	Identifier	ao		2657125	0					
ANR	2657765	Identifier	o		2657125	1					
ANR	2657766	ConditionalExpression	"( strstr ( str , ""],"" ) ) ? 6 : 7"		2657125	1					
ANR	2657767	Condition	"strstr ( str , ""],"" )"		2657125	0					
ANR	2657768	CallExpression	"strstr ( str , ""],"" )"		2657125	0					
ANR	2657769	Callee	strstr		2657125	0					
ANR	2657770	Identifier	strstr		2657125	0					
ANR	2657771	ArgumentList	str		2657125	1					
ANR	2657772	Argument	str		2657125	0					
ANR	2657773	Identifier	str		2657125	0					
ANR	2657774	Argument	"""],"""		2657125	1					
ANR	2657775	PrimaryExpression	"""],"""		2657125	0					
ANR	2657776	PrimaryExpression	6		2657125	1					
ANR	2657777	PrimaryExpression	7		2657125	2					
ANR	2657778	ExpressionStatement	ao -> o |= ( ret & 0x0f ) << 24	6154:7:130581:130608	2657125	1	True				
ANR	2657779	AssignmentExpression	ao -> o |= ( ret & 0x0f ) << 24		2657125	0		|=			
ANR	2657780	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657781	Identifier	ao		2657125	0					
ANR	2657782	Identifier	o		2657125	1					
ANR	2657783	ShiftExpression	( ret & 0x0f ) << 24		2657125	1		<<			
ANR	2657784	BitAndExpression	ret & 0x0f		2657125	0		&			
ANR	2657785	Identifier	ret		2657125	0					
ANR	2657786	PrimaryExpression	0x0f		2657125	1					
ANR	2657787	PrimaryExpression	24		2657125	1					
ANR	2657788	IfStatement	if ( ao -> a [ 3 ] )		2657125	1					
ANR	2657789	Condition	ao -> a [ 3 ]	6156:10:130628:130635	2657125	0	True				
ANR	2657790	ArrayIndexing	ao -> a [ 3 ]		2657125	0					
ANR	2657791	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657792	Identifier	ao		2657125	0					
ANR	2657793	Identifier	a		2657125	1					
ANR	2657794	PrimaryExpression	3		2657125	1					
ANR	2657795	CompoundStatement		83:20:2043:2043	2657125	1					
ANR	2657796	ExpressionStatement	shift = getshift ( ao -> a [ 3 ] )	6157:7:130647:130674	2657125	0	True				
ANR	2657797	AssignmentExpression	shift = getshift ( ao -> a [ 3 ] )		2657125	0		=			
ANR	2657798	Identifier	shift		2657125	0					
ANR	2657799	CallExpression	getshift ( ao -> a [ 3 ] )		2657125	1					
ANR	2657800	Callee	getshift		2657125	0					
ANR	2657801	Identifier	getshift		2657125	0					
ANR	2657802	ArgumentList	ao -> a [ 3 ]		2657125	1					
ANR	2657803	Argument	ao -> a [ 3 ]		2657125	0					
ANR	2657804	ArrayIndexing	ao -> a [ 3 ]		2657125	0					
ANR	2657805	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657806	Identifier	ao		2657125	0					
ANR	2657807	Identifier	a		2657125	1					
ANR	2657808	PrimaryExpression	3		2657125	1					
ANR	2657809	ExpressionStatement	low = shift & 0xFF	6158:7:130683:130701	2657125	1	True				
ANR	2657810	AssignmentExpression	low = shift & 0xFF		2657125	0		=			
ANR	2657811	Identifier	low		2657125	0					
ANR	2657812	BitAndExpression	shift & 0xFF		2657125	1		&			
ANR	2657813	Identifier	shift		2657125	0					
ANR	2657814	PrimaryExpression	0xFF		2657125	1					
ANR	2657815	ExpressionStatement	high = shift & 0xFF00	6159:7:130710:130731	2657125	2	True				
ANR	2657816	AssignmentExpression	high = shift & 0xFF00		2657125	0		=			
ANR	2657817	Identifier	high		2657125	0					
ANR	2657818	BitAndExpression	shift & 0xFF00		2657125	1		&			
ANR	2657819	Identifier	shift		2657125	0					
ANR	2657820	PrimaryExpression	0xFF00		2657125	1					
ANR	2657821	ExpressionStatement	ao -> o |= low << 24	6160:7:130740:130758	2657125	3	True				
ANR	2657822	AssignmentExpression	ao -> o |= low << 24		2657125	0		|=			
ANR	2657823	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657824	Identifier	ao		2657125	0					
ANR	2657825	Identifier	o		2657125	1					
ANR	2657826	ShiftExpression	low << 24		2657125	1		<<			
ANR	2657827	Identifier	low		2657125	0					
ANR	2657828	PrimaryExpression	24		2657125	1					
ANR	2657829	ExpressionStatement	ao -> o |= high << 8	6161:7:130767:130785	2657125	4	True				
ANR	2657830	AssignmentExpression	ao -> o |= high << 8		2657125	0		|=			
ANR	2657831	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657832	Identifier	ao		2657125	0					
ANR	2657833	Identifier	o		2657125	1					
ANR	2657834	ShiftExpression	high << 8		2657125	1		<<			
ANR	2657835	Identifier	high		2657125	0					
ANR	2657836	PrimaryExpression	8		2657125	1					
ANR	2657837	ElseStatement	else		2657125	0					
ANR	2657838	CompoundStatement		91:6:2220:2255	2657125	0					
ANR	2657839	IdentifierDeclStatement	int num = getnum ( ao -> a [ 2 ] ) & 0xfff ;	6164:6:130815:130850	2657125	0	True				
ANR	2657840	IdentifierDecl	num = getnum ( ao -> a [ 2 ] ) & 0xfff		2657125	0					
ANR	2657841	IdentifierDeclType	int		2657125	0					
ANR	2657842	Identifier	num		2657125	1					
ANR	2657843	AssignmentExpression	num = getnum ( ao -> a [ 2 ] ) & 0xfff		2657125	2		=			
ANR	2657844	Identifier	num		2657125	0					
ANR	2657845	BitAndExpression	getnum ( ao -> a [ 2 ] ) & 0xfff		2657125	1		&			
ANR	2657846	CallExpression	getnum ( ao -> a [ 2 ] )		2657125	0					
ANR	2657847	Callee	getnum		2657125	0					
ANR	2657848	Identifier	getnum		2657125	0					
ANR	2657849	ArgumentList	ao -> a [ 2 ]		2657125	1					
ANR	2657850	Argument	ao -> a [ 2 ]		2657125	0					
ANR	2657851	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2657852	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657853	Identifier	ao		2657125	0					
ANR	2657854	Identifier	a		2657125	1					
ANR	2657855	PrimaryExpression	2		2657125	1					
ANR	2657856	PrimaryExpression	0xfff		2657125	1					
ANR	2657857	IfStatement	if ( err )		2657125	1					
ANR	2657858	Condition	err	6165:10:130862:130864	2657125	0	True				
ANR	2657859	Identifier	err		2657125	0					
ANR	2657860	CompoundStatement		92:15:2272:2272	2657125	1					
ANR	2657861	BreakStatement	break ;	6166:7:130876:130881	2657125	0	True				
ANR	2657862	IfStatement	if ( rex )		2657125	2					
ANR	2657863	Condition	rex	6168:10:130901:130903	2657125	0	True				
ANR	2657864	Identifier	rex		2657125	0					
ANR	2657865	CompoundStatement		95:15:2311:2311	2657125	1					
ANR	2657866	ExpressionStatement	ao -> o |= 1	6169:7:130915:130925	2657125	0	True				
ANR	2657867	AssignmentExpression	ao -> o |= 1		2657125	0		|=			
ANR	2657868	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657869	Identifier	ao		2657125	0					
ANR	2657870	Identifier	o		2657125	1					
ANR	2657871	PrimaryExpression	1		2657125	1					
ANR	2657872	ElseStatement	else		2657125	0					
ANR	2657873	CompoundStatement		97:13:2345:2345	2657125	0					
ANR	2657874	ExpressionStatement	"ao -> o |= ( strstr ( str , ""],"" ) ) ? 4 : 5"	6171:7:130949:130986	2657125	0	True				
ANR	2657875	AssignmentExpression	"ao -> o |= ( strstr ( str , ""],"" ) ) ? 4 : 5"		2657125	0		|=			
ANR	2657876	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657877	Identifier	ao		2657125	0					
ANR	2657878	Identifier	o		2657125	1					
ANR	2657879	ConditionalExpression	"( strstr ( str , ""],"" ) ) ? 4 : 5"		2657125	1					
ANR	2657880	Condition	"strstr ( str , ""],"" )"		2657125	0					
ANR	2657881	CallExpression	"strstr ( str , ""],"" )"		2657125	0					
ANR	2657882	Callee	strstr		2657125	0					
ANR	2657883	Identifier	strstr		2657125	0					
ANR	2657884	ArgumentList	str		2657125	1					
ANR	2657885	Argument	str		2657125	0					
ANR	2657886	Identifier	str		2657125	0					
ANR	2657887	Argument	"""],"""		2657125	1					
ANR	2657888	PrimaryExpression	"""],"""		2657125	0					
ANR	2657889	PrimaryExpression	4		2657125	1					
ANR	2657890	PrimaryExpression	5		2657125	2					
ANR	2657891	ExpressionStatement	ao -> o |= 1	6173:6:131002:131012	2657125	3	True				
ANR	2657892	AssignmentExpression	ao -> o |= 1		2657125	0		|=			
ANR	2657893	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657894	Identifier	ao		2657125	0					
ANR	2657895	Identifier	o		2657125	1					
ANR	2657896	PrimaryExpression	1		2657125	1					
ANR	2657897	ExpressionStatement	ao -> o |= ( num & 0xff ) << 24	6174:6:131020:131047	2657125	4	True				
ANR	2657898	AssignmentExpression	ao -> o |= ( num & 0xff ) << 24		2657125	0		|=			
ANR	2657899	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657900	Identifier	ao		2657125	0					
ANR	2657901	Identifier	o		2657125	1					
ANR	2657902	ShiftExpression	( num & 0xff ) << 24		2657125	1		<<			
ANR	2657903	BitAndExpression	num & 0xff		2657125	0		&			
ANR	2657904	Identifier	num		2657125	0					
ANR	2657905	PrimaryExpression	0xff		2657125	1					
ANR	2657906	PrimaryExpression	24		2657125	1					
ANR	2657907	ExpressionStatement	ao -> o |= ( ( num >> 8 ) & 0xf ) << 16	6175:6:131055:131088	2657125	5	True				
ANR	2657908	AssignmentExpression	ao -> o |= ( ( num >> 8 ) & 0xf ) << 16		2657125	0		|=			
ANR	2657909	PtrMemberAccess	ao -> o		2657125	0					
ANR	2657910	Identifier	ao		2657125	0					
ANR	2657911	Identifier	o		2657125	1					
ANR	2657912	ShiftExpression	( ( num >> 8 ) & 0xf ) << 16		2657125	1		<<			
ANR	2657913	BitAndExpression	( num >> 8 ) & 0xf		2657125	0		&			
ANR	2657914	ShiftExpression	num >> 8		2657125	0		>>			
ANR	2657915	Identifier	num		2657125	0					
ANR	2657916	PrimaryExpression	8		2657125	1					
ANR	2657917	PrimaryExpression	0xf		2657125	1					
ANR	2657918	PrimaryExpression	16		2657125	1					
ANR	2657919	BreakStatement	break ;	6178:5:131103:131108	2657125	9	True				
ANR	2657920	Label	case TYPE_IMM :	6179:4:131114:131127	2657125	10	True				
ANR	2657921	Identifier	TYPE_IMM		2657125	0					
ANR	2657922	IfStatement	if ( * ao -> a [ 0 ] ++ == '{' )		2657125	11					
ANR	2657923	Condition	* ao -> a [ 0 ] ++ == '{'	6180:9:131138:131155	2657125	0	True				
ANR	2657924	EqualityExpression	* ao -> a [ 0 ] ++ == '{'		2657125	0		==			
ANR	2657925	UnaryOperationExpression	* ao -> a [ 0 ] ++		2657125	0					
ANR	2657926	UnaryOperator	*		2657125	0					
ANR	2657927	PostIncDecOperationExpression	ao -> a [ 0 ] ++		2657125	1					
ANR	2657928	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2657929	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657930	Identifier	ao		2657125	0					
ANR	2657931	Identifier	a		2657125	1					
ANR	2657932	PrimaryExpression	0		2657125	1					
ANR	2657933	IncDec	++		2657125	1					
ANR	2657934	PrimaryExpression	'{'		2657125	1					
ANR	2657935	CompoundStatement		107:29:2563:2563	2657125	1					
ANR	2657936	ForStatement	for ( j = 0 ; j < 16 ; j ++ )		2657125	0					
ANR	2657937	ForInit	j = 0 ;	6181:11:131171:131176	2657125	0	True				
ANR	2657938	AssignmentExpression	j = 0		2657125	0		=			
ANR	2657939	Identifier	j		2657125	0					
ANR	2657940	PrimaryExpression	0		2657125	1					
ANR	2657941	Condition	j < 16	6181:18:131178:131183	2657125	1	True				
ANR	2657942	RelationalExpression	j < 16		2657125	0		<			
ANR	2657943	Identifier	j		2657125	0					
ANR	2657944	PrimaryExpression	16		2657125	1					
ANR	2657945	PostIncDecOperationExpression	j ++	6181:26:131186:131188	2657125	2	True				
ANR	2657946	Identifier	j		2657125	0					
ANR	2657947	IncDec	++		2657125	1					
ANR	2657948	CompoundStatement		108:31:2596:2596	2657125	3					
ANR	2657949	IfStatement	if ( ao -> a [ j ] && * ao -> a [ j ] )		2657125	0					
ANR	2657950	Condition	ao -> a [ j ] && * ao -> a [ j ]	6182:11:131204:131224	2657125	0	True				
ANR	2657951	AndExpression	ao -> a [ j ] && * ao -> a [ j ]		2657125	0		&&			
ANR	2657952	ArrayIndexing	ao -> a [ j ]		2657125	0					
ANR	2657953	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657954	Identifier	ao		2657125	0					
ANR	2657955	Identifier	a		2657125	1					
ANR	2657956	Identifier	j		2657125	1					
ANR	2657957	UnaryOperationExpression	* ao -> a [ j ]		2657125	1					
ANR	2657958	UnaryOperator	*		2657125	0					
ANR	2657959	ArrayIndexing	ao -> a [ j ]		2657125	1					
ANR	2657960	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657961	Identifier	ao		2657125	0					
ANR	2657962	Identifier	a		2657125	1					
ANR	2657963	Identifier	j		2657125	1					
ANR	2657964	CompoundStatement		109:34:2632:2632	2657125	1					
ANR	2657965	ExpressionStatement	getrange ( ao -> a [ j ] )	6183:8:131237:131256	2657125	0	True				
ANR	2657966	CallExpression	getrange ( ao -> a [ j ] )		2657125	0					
ANR	2657967	Callee	getrange		2657125	0					
ANR	2657968	Identifier	getrange		2657125	0					
ANR	2657969	ArgumentList	ao -> a [ j ]		2657125	1					
ANR	2657970	Argument	ao -> a [ j ]		2657125	0					
ANR	2657971	ArrayIndexing	ao -> a [ j ]		2657125	0					
ANR	2657972	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657973	Identifier	ao		2657125	0					
ANR	2657974	Identifier	a		2657125	1					
ANR	2657975	Identifier	j		2657125	1					
ANR	2657976	ExpressionStatement	reg = getreg ( ao -> a [ j ] )	6184:8:131295:131318	2657125	1	True				
ANR	2657977	AssignmentExpression	reg = getreg ( ao -> a [ j ] )		2657125	0		=			
ANR	2657978	Identifier	reg		2657125	0					
ANR	2657979	CallExpression	getreg ( ao -> a [ j ] )		2657125	1					
ANR	2657980	Callee	getreg		2657125	0					
ANR	2657981	Identifier	getreg		2657125	0					
ANR	2657982	ArgumentList	ao -> a [ j ]		2657125	1					
ANR	2657983	Argument	ao -> a [ j ]		2657125	0					
ANR	2657984	ArrayIndexing	ao -> a [ j ]		2657125	0					
ANR	2657985	PtrMemberAccess	ao -> a		2657125	0					
ANR	2657986	Identifier	ao		2657125	0					
ANR	2657987	Identifier	a		2657125	1					
ANR	2657988	Identifier	j		2657125	1					
ANR	2657989	IfStatement	if ( reg != - 1 )		2657125	2					
ANR	2657990	Condition	reg != - 1	6185:12:131332:131340	2657125	0	True				
ANR	2657991	EqualityExpression	reg != - 1		2657125	0		!=			
ANR	2657992	Identifier	reg		2657125	0					
ANR	2657993	UnaryOperationExpression	- 1		2657125	1					
ANR	2657994	UnaryOperator	-		2657125	0					
ANR	2657995	PrimaryExpression	1		2657125	1					
ANR	2657996	CompoundStatement		112:23:2748:2748	2657125	1					
ANR	2657997	IfStatement	if ( reg < 8 )		2657125	0					
ANR	2657998	Condition	reg < 8	6186:13:131358:131364	2657125	0	True				
ANR	2657999	RelationalExpression	reg < 8		2657125	0		<			
ANR	2658000	Identifier	reg		2657125	0					
ANR	2658001	PrimaryExpression	8		2657125	1					
ANR	2658002	CompoundStatement		113:22:2772:2772	2657125	1					
ANR	2658003	ExpressionStatement	ao -> o |= 1 << ( 24 + reg )	6187:10:131379:131403	2657125	0	True				
ANR	2658004	AssignmentExpression	ao -> o |= 1 << ( 24 + reg )		2657125	0		|=			
ANR	2658005	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658006	Identifier	ao		2657125	0					
ANR	2658007	Identifier	o		2657125	1					
ANR	2658008	ShiftExpression	1 << ( 24 + reg )		2657125	1		<<			
ANR	2658009	PrimaryExpression	1		2657125	0					
ANR	2658010	AdditiveExpression	24 + reg		2657125	1		+			
ANR	2658011	PrimaryExpression	24		2657125	0					
ANR	2658012	Identifier	reg		2657125	1					
ANR	2658013	ElseStatement	else		2657125	0					
ANR	2658014	CompoundStatement		115:16:2826:2826	2657125	0					
ANR	2658015	ExpressionStatement	ao -> o |= 1 << ( 8 + reg )	6189:10:131433:131456	2657125	0	True				
ANR	2658016	AssignmentExpression	ao -> o |= 1 << ( 8 + reg )		2657125	0		|=			
ANR	2658017	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658018	Identifier	ao		2657125	0					
ANR	2658019	Identifier	o		2657125	1					
ANR	2658020	ShiftExpression	1 << ( 8 + reg )		2657125	1		<<			
ANR	2658021	PrimaryExpression	1		2657125	0					
ANR	2658022	AdditiveExpression	8 + reg		2657125	1		+			
ANR	2658023	PrimaryExpression	8		2657125	0					
ANR	2658024	Identifier	reg		2657125	1					
ANR	2658025	ElseStatement	else		2657125	0					
ANR	2658026	CompoundStatement		121:12:2913:2913	2657125	0					
ANR	2658027	ExpressionStatement	ao -> o |= getnum ( ao -> a [ 0 ] ) << 24	6195:6:131516:131548	2657125	0	True				
ANR	2658028	AssignmentExpression	ao -> o |= getnum ( ao -> a [ 0 ] ) << 24		2657125	0		|=			
ANR	2658029	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658030	Identifier	ao		2657125	0					
ANR	2658031	Identifier	o		2657125	1					
ANR	2658032	ShiftExpression	getnum ( ao -> a [ 0 ] ) << 24		2657125	1		<<			
ANR	2658033	CallExpression	getnum ( ao -> a [ 0 ] )		2657125	0					
ANR	2658034	Callee	getnum		2657125	0					
ANR	2658035	Identifier	getnum		2657125	0					
ANR	2658036	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2658037	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2658038	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2658039	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658040	Identifier	ao		2657125	0					
ANR	2658041	Identifier	a		2657125	1					
ANR	2658042	PrimaryExpression	0		2657125	1					
ANR	2658043	PrimaryExpression	24		2657125	1					
ANR	2658044	BreakStatement	break ;	6197:5:131569:131574	2657125	12	True				
ANR	2658045	Label	case TYPE_BRA :	6198:4:131580:131593	2657125	13	True				
ANR	2658046	Identifier	TYPE_BRA		2657125	0					
ANR	2658047	IfStatement	if ( ( ret = getreg ( ao -> a [ 0 ] ) ) == - 1 )		2657125	14					
ANR	2658048	Condition	( ret = getreg ( ao -> a [ 0 ] ) ) == - 1	6199:9:131604:131634	2657125	0	True				
ANR	2658049	EqualityExpression	( ret = getreg ( ao -> a [ 0 ] ) ) == - 1		2657125	0		==			
ANR	2658050	AssignmentExpression	ret = getreg ( ao -> a [ 0 ] )		2657125	0		=			
ANR	2658051	Identifier	ret		2657125	0					
ANR	2658052	CallExpression	getreg ( ao -> a [ 0 ] )		2657125	1					
ANR	2658053	Callee	getreg		2657125	0					
ANR	2658054	Identifier	getreg		2657125	0					
ANR	2658055	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2658056	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2658057	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2658058	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658059	Identifier	ao		2657125	0					
ANR	2658060	Identifier	a		2657125	1					
ANR	2658061	PrimaryExpression	0		2657125	1					
ANR	2658062	UnaryOperationExpression	- 1		2657125	1					
ANR	2658063	UnaryOperator	-		2657125	0					
ANR	2658064	PrimaryExpression	1		2657125	1					
ANR	2658065	CompoundStatement		126:42:3042:3042	2657125	1					
ANR	2658066	ExpressionStatement	ret = ( getnum ( ao -> a [ 0 ] ) - ( int ) ao -> off - 8 ) / 4	6201:6:131691:131739	2657125	0	True				
ANR	2658067	AssignmentExpression	ret = ( getnum ( ao -> a [ 0 ] ) - ( int ) ao -> off - 8 ) / 4		2657125	0		=			
ANR	2658068	Identifier	ret		2657125	0					
ANR	2658069	MultiplicativeExpression	( getnum ( ao -> a [ 0 ] ) - ( int ) ao -> off - 8 ) / 4		2657125	1		/			
ANR	2658070	AdditiveExpression	getnum ( ao -> a [ 0 ] ) - ( int ) ao -> off - 8		2657125	0		-			
ANR	2658071	CallExpression	getnum ( ao -> a [ 0 ] )		2657125	0					
ANR	2658072	Callee	getnum		2657125	0					
ANR	2658073	Identifier	getnum		2657125	0					
ANR	2658074	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2658075	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2658076	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2658077	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658078	Identifier	ao		2657125	0					
ANR	2658079	Identifier	a		2657125	1					
ANR	2658080	PrimaryExpression	0		2657125	1					
ANR	2658081	AdditiveExpression	( int ) ao -> off - 8		2657125	1		-			
ANR	2658082	CastExpression	( int ) ao -> off		2657125	0					
ANR	2658083	CastTarget	int		2657125	0					
ANR	2658084	PtrMemberAccess	ao -> off		2657125	1					
ANR	2658085	Identifier	ao		2657125	0					
ANR	2658086	Identifier	off		2657125	1					
ANR	2658087	PrimaryExpression	8		2657125	1					
ANR	2658088	PrimaryExpression	4		2657125	1					
ANR	2658089	IfStatement	if ( ret >= 0x00800000 || ret < ( int ) 0xff800000 )		2657125	1					
ANR	2658090	Condition	ret >= 0x00800000 || ret < ( int ) 0xff800000	6202:10:131751:131792	2657125	0	True				
ANR	2658091	OrExpression	ret >= 0x00800000 || ret < ( int ) 0xff800000		2657125	0		||			
ANR	2658092	RelationalExpression	ret >= 0x00800000		2657125	0		>=			
ANR	2658093	Identifier	ret		2657125	0					
ANR	2658094	PrimaryExpression	0x00800000		2657125	1					
ANR	2658095	RelationalExpression	ret < ( int ) 0xff800000		2657125	1		<			
ANR	2658096	Identifier	ret		2657125	0					
ANR	2658097	CastExpression	( int ) 0xff800000		2657125	1					
ANR	2658098	CastTarget	int		2657125	0					
ANR	2658099	PrimaryExpression	0xff800000		2657125	1					
ANR	2658100	CompoundStatement		129:54:3200:3200	2657125	1					
ANR	2658101	ExpressionStatement	"eprintf ( ""Branch into out of range\\n"" )"	6203:7:131804:131842	2657125	0	True				
ANR	2658102	CallExpression	"eprintf ( ""Branch into out of range\\n"" )"		2657125	0					
ANR	2658103	Callee	eprintf		2657125	0					
ANR	2658104	Identifier	eprintf		2657125	0					
ANR	2658105	ArgumentList	"""Branch into out of range\\n"""		2657125	1					
ANR	2658106	Argument	"""Branch into out of range\\n"""		2657125	0					
ANR	2658107	PrimaryExpression	"""Branch into out of range\\n"""		2657125	0					
ANR	2658108	ReturnStatement	return 0 ;	6204:7:131851:131859	2657125	1	True				
ANR	2658109	PrimaryExpression	0		2657125	0					
ANR	2658110	ExpressionStatement	ao -> o |= ( ( ret >> 16 ) & 0xff ) << 8	6206:6:131875:131909	2657125	2	True				
ANR	2658111	AssignmentExpression	ao -> o |= ( ( ret >> 16 ) & 0xff ) << 8		2657125	0		|=			
ANR	2658112	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658113	Identifier	ao		2657125	0					
ANR	2658114	Identifier	o		2657125	1					
ANR	2658115	ShiftExpression	( ( ret >> 16 ) & 0xff ) << 8		2657125	1		<<			
ANR	2658116	BitAndExpression	( ret >> 16 ) & 0xff		2657125	0		&			
ANR	2658117	ShiftExpression	ret >> 16		2657125	0		>>			
ANR	2658118	Identifier	ret		2657125	0					
ANR	2658119	PrimaryExpression	16		2657125	1					
ANR	2658120	PrimaryExpression	0xff		2657125	1					
ANR	2658121	PrimaryExpression	8		2657125	1					
ANR	2658122	ExpressionStatement	ao -> o |= ( ( ret >> 8 ) & 0xff ) << 16	6207:6:131917:131951	2657125	3	True				
ANR	2658123	AssignmentExpression	ao -> o |= ( ( ret >> 8 ) & 0xff ) << 16		2657125	0		|=			
ANR	2658124	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658125	Identifier	ao		2657125	0					
ANR	2658126	Identifier	o		2657125	1					
ANR	2658127	ShiftExpression	( ( ret >> 8 ) & 0xff ) << 16		2657125	1		<<			
ANR	2658128	BitAndExpression	( ret >> 8 ) & 0xff		2657125	0		&			
ANR	2658129	ShiftExpression	ret >> 8		2657125	0		>>			
ANR	2658130	Identifier	ret		2657125	0					
ANR	2658131	PrimaryExpression	8		2657125	1					
ANR	2658132	PrimaryExpression	0xff		2657125	1					
ANR	2658133	PrimaryExpression	16		2657125	1					
ANR	2658134	ExpressionStatement	ao -> o |= ( ( ret ) & 0xff ) << 24	6208:6:131959:131986	2657125	4	True				
ANR	2658135	AssignmentExpression	ao -> o |= ( ( ret ) & 0xff ) << 24		2657125	0		|=			
ANR	2658136	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658137	Identifier	ao		2657125	0					
ANR	2658138	Identifier	o		2657125	1					
ANR	2658139	ShiftExpression	( ( ret ) & 0xff ) << 24		2657125	1		<<			
ANR	2658140	CastExpression	( ret ) & 0xff		2657125	0					
ANR	2658141	CastTarget	ret		2657125	0					
ANR	2658142	UnaryOperationExpression	& 0xff		2657125	1					
ANR	2658143	UnaryOperator	&		2657125	0					
ANR	2658144	PrimaryExpression	0xff		2657125	1					
ANR	2658145	PrimaryExpression	24		2657125	1					
ANR	2658146	ElseStatement	else		2657125	0					
ANR	2658147	CompoundStatement		136:12:3405:3405	2657125	0					
ANR	2658148	ExpressionStatement	"eprintf ( ""This branch does not accept reg as arg\\n"" )"	6210:6:132008:132060	2657125	0	True				
ANR	2658149	CallExpression	"eprintf ( ""This branch does not accept reg as arg\\n"" )"		2657125	0					
ANR	2658150	Callee	eprintf		2657125	0					
ANR	2658151	Identifier	eprintf		2657125	0					
ANR	2658152	ArgumentList	"""This branch does not accept reg as arg\\n"""		2657125	1					
ANR	2658153	Argument	"""This branch does not accept reg as arg\\n"""		2657125	0					
ANR	2658154	PrimaryExpression	"""This branch does not accept reg as arg\\n"""		2657125	0					
ANR	2658155	ReturnStatement	return 0 ;	6211:6:132068:132076	2657125	1	True				
ANR	2658156	PrimaryExpression	0		2657125	0					
ANR	2658157	BreakStatement	break ;	6213:5:132090:132095	2657125	15	True				
ANR	2658158	Label	case TYPE_BKP :	6214:4:132101:132114	2657125	16	True				
ANR	2658159	Identifier	TYPE_BKP		2657125	0					
ANR	2658160	ExpressionStatement	ao -> o |= 0x70 << 24	6215:5:132121:132140	2657125	17	True				
ANR	2658161	AssignmentExpression	ao -> o |= 0x70 << 24		2657125	0		|=			
ANR	2658162	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658163	Identifier	ao		2657125	0					
ANR	2658164	Identifier	o		2657125	1					
ANR	2658165	ShiftExpression	0x70 << 24		2657125	1		<<			
ANR	2658166	PrimaryExpression	0x70		2657125	0					
ANR	2658167	PrimaryExpression	24		2657125	1					
ANR	2658168	IfStatement	if ( ao -> a [ 0 ] )		2657125	18					
ANR	2658169	Condition	ao -> a [ 0 ]	6216:9:132151:132158	2657125	0	True				
ANR	2658170	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2658171	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658172	Identifier	ao		2657125	0					
ANR	2658173	Identifier	a		2657125	1					
ANR	2658174	PrimaryExpression	0		2657125	1					
ANR	2658175	CompoundStatement		144:6:3574:3599	2657125	1					
ANR	2658176	IdentifierDeclStatement	int n = getnum ( ao -> a [ 0 ] ) ;	6217:6:132169:132194	2657125	0	True				
ANR	2658177	IdentifierDecl	n = getnum ( ao -> a [ 0 ] )		2657125	0					
ANR	2658178	IdentifierDeclType	int		2657125	0					
ANR	2658179	Identifier	n		2657125	1					
ANR	2658180	AssignmentExpression	n = getnum ( ao -> a [ 0 ] )		2657125	2		=			
ANR	2658181	Identifier	n		2657125	0					
ANR	2658182	CallExpression	getnum ( ao -> a [ 0 ] )		2657125	1					
ANR	2658183	Callee	getnum		2657125	0					
ANR	2658184	Identifier	getnum		2657125	0					
ANR	2658185	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2658186	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2658187	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2658188	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658189	Identifier	ao		2657125	0					
ANR	2658190	Identifier	a		2657125	1					
ANR	2658191	PrimaryExpression	0		2657125	1					
ANR	2658192	ExpressionStatement	ao -> o |= ( ( n & 0xf ) << 24 )	6218:6:132202:132228	2657125	1	True				
ANR	2658193	AssignmentExpression	ao -> o |= ( ( n & 0xf ) << 24 )		2657125	0		|=			
ANR	2658194	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658195	Identifier	ao		2657125	0					
ANR	2658196	Identifier	o		2657125	1					
ANR	2658197	ShiftExpression	( n & 0xf ) << 24		2657125	1		<<			
ANR	2658198	BitAndExpression	n & 0xf		2657125	0		&			
ANR	2658199	Identifier	n		2657125	0					
ANR	2658200	PrimaryExpression	0xf		2657125	1					
ANR	2658201	PrimaryExpression	24		2657125	1					
ANR	2658202	ExpressionStatement	ao -> o |= ( ( ( n >> 4 ) & 0xff ) << 16 )	6219:6:132236:132270	2657125	2	True				
ANR	2658203	AssignmentExpression	ao -> o |= ( ( ( n >> 4 ) & 0xff ) << 16 )		2657125	0		|=			
ANR	2658204	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658205	Identifier	ao		2657125	0					
ANR	2658206	Identifier	o		2657125	1					
ANR	2658207	ShiftExpression	( ( n >> 4 ) & 0xff ) << 16		2657125	1		<<			
ANR	2658208	BitAndExpression	( n >> 4 ) & 0xff		2657125	0		&			
ANR	2658209	ShiftExpression	n >> 4		2657125	0		>>			
ANR	2658210	Identifier	n		2657125	0					
ANR	2658211	PrimaryExpression	4		2657125	1					
ANR	2658212	PrimaryExpression	0xff		2657125	1					
ANR	2658213	PrimaryExpression	16		2657125	1					
ANR	2658214	BreakStatement	break ;	6221:5:132284:132289	2657125	19	True				
ANR	2658215	Label	case TYPE_BRR :	6222:4:132295:132308	2657125	20	True				
ANR	2658216	Identifier	TYPE_BRR		2657125	0					
ANR	2658217	IfStatement	if ( ( ret = getreg ( ao -> a [ 0 ] ) ) == - 1 )		2657125	21					
ANR	2658218	Condition	( ret = getreg ( ao -> a [ 0 ] ) ) == - 1	6223:9:132319:132349	2657125	0	True				
ANR	2658219	EqualityExpression	( ret = getreg ( ao -> a [ 0 ] ) ) == - 1		2657125	0		==			
ANR	2658220	AssignmentExpression	ret = getreg ( ao -> a [ 0 ] )		2657125	0		=			
ANR	2658221	Identifier	ret		2657125	0					
ANR	2658222	CallExpression	getreg ( ao -> a [ 0 ] )		2657125	1					
ANR	2658223	Callee	getreg		2657125	0					
ANR	2658224	Identifier	getreg		2657125	0					
ANR	2658225	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2658226	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2658227	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2658228	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658229	Identifier	ao		2657125	0					
ANR	2658230	Identifier	a		2657125	1					
ANR	2658231	PrimaryExpression	0		2657125	1					
ANR	2658232	UnaryOperationExpression	- 1		2657125	1					
ANR	2658233	UnaryOperator	-		2657125	0					
ANR	2658234	PrimaryExpression	1		2657125	1					
ANR	2658235	CompoundStatement		151:6:3765:3793	2657125	1					
ANR	2658236	IdentifierDeclStatement	ut32 dst = getnum ( ao -> a [ 0 ] ) ;	6224:6:132360:132388	2657125	0	True				
ANR	2658237	IdentifierDecl	dst = getnum ( ao -> a [ 0 ] )		2657125	0					
ANR	2658238	IdentifierDeclType	ut32		2657125	0					
ANR	2658239	Identifier	dst		2657125	1					
ANR	2658240	AssignmentExpression	dst = getnum ( ao -> a [ 0 ] )		2657125	2		=			
ANR	2658241	Identifier	dst		2657125	0					
ANR	2658242	CallExpression	getnum ( ao -> a [ 0 ] )		2657125	1					
ANR	2658243	Callee	getnum		2657125	0					
ANR	2658244	Identifier	getnum		2657125	0					
ANR	2658245	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2658246	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2658247	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2658248	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658249	Identifier	ao		2657125	0					
ANR	2658250	Identifier	a		2657125	1					
ANR	2658251	PrimaryExpression	0		2657125	1					
ANR	2658252	ExpressionStatement	dst -= ( ao -> off + 8 )	6225:6:132396:132416	2657125	1	True				
ANR	2658253	AssignmentExpression	dst -= ( ao -> off + 8 )		2657125	0		-=			
ANR	2658254	Identifier	dst		2657125	0					
ANR	2658255	AdditiveExpression	ao -> off + 8		2657125	1		+			
ANR	2658256	PtrMemberAccess	ao -> off		2657125	0					
ANR	2658257	Identifier	ao		2657125	0					
ANR	2658258	Identifier	off		2657125	1					
ANR	2658259	PrimaryExpression	8		2657125	1					
ANR	2658260	IfStatement	if ( dst & 0x2 )		2657125	2					
ANR	2658261	Condition	dst & 0x2	6226:10:132428:132436	2657125	0	True				
ANR	2658262	BitAndExpression	dst & 0x2		2657125	0		&			
ANR	2658263	Identifier	dst		2657125	0					
ANR	2658264	PrimaryExpression	0x2		2657125	1					
ANR	2658265	CompoundStatement		153:21:3844:3844	2657125	1					
ANR	2658266	ExpressionStatement	ao -> o = 0xfb	6227:7:132448:132460	2657125	0	True				
ANR	2658267	AssignmentExpression	ao -> o = 0xfb		2657125	0		=			
ANR	2658268	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658269	Identifier	ao		2657125	0					
ANR	2658270	Identifier	o		2657125	1					
ANR	2658271	PrimaryExpression	0xfb		2657125	1					
ANR	2658272	ElseStatement	else		2657125	0					
ANR	2658273	CompoundStatement		155:13:3880:3880	2657125	0					
ANR	2658274	ExpressionStatement	ao -> o = 0xfa	6229:7:132484:132496	2657125	0	True				
ANR	2658275	AssignmentExpression	ao -> o = 0xfa		2657125	0		=			
ANR	2658276	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658277	Identifier	ao		2657125	0					
ANR	2658278	Identifier	o		2657125	1					
ANR	2658279	PrimaryExpression	0xfa		2657125	1					
ANR	2658280	ExpressionStatement	dst /= 4	6231:6:132512:132520	2657125	3	True				
ANR	2658281	AssignmentExpression	dst /= 4		2657125	0		/=			
ANR	2658282	Identifier	dst		2657125	0					
ANR	2658283	PrimaryExpression	4		2657125	1					
ANR	2658284	ExpressionStatement	ao -> o |= ( ( dst >> 16 ) & 0xff ) << 8	6232:6:132528:132562	2657125	4	True				
ANR	2658285	AssignmentExpression	ao -> o |= ( ( dst >> 16 ) & 0xff ) << 8		2657125	0		|=			
ANR	2658286	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658287	Identifier	ao		2657125	0					
ANR	2658288	Identifier	o		2657125	1					
ANR	2658289	ShiftExpression	( ( dst >> 16 ) & 0xff ) << 8		2657125	1		<<			
ANR	2658290	BitAndExpression	( dst >> 16 ) & 0xff		2657125	0		&			
ANR	2658291	ShiftExpression	dst >> 16		2657125	0		>>			
ANR	2658292	Identifier	dst		2657125	0					
ANR	2658293	PrimaryExpression	16		2657125	1					
ANR	2658294	PrimaryExpression	0xff		2657125	1					
ANR	2658295	PrimaryExpression	8		2657125	1					
ANR	2658296	ExpressionStatement	ao -> o |= ( ( dst >> 8 ) & 0xff ) << 16	6233:6:132570:132604	2657125	5	True				
ANR	2658297	AssignmentExpression	ao -> o |= ( ( dst >> 8 ) & 0xff ) << 16		2657125	0		|=			
ANR	2658298	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658299	Identifier	ao		2657125	0					
ANR	2658300	Identifier	o		2657125	1					
ANR	2658301	ShiftExpression	( ( dst >> 8 ) & 0xff ) << 16		2657125	1		<<			
ANR	2658302	BitAndExpression	( dst >> 8 ) & 0xff		2657125	0		&			
ANR	2658303	ShiftExpression	dst >> 8		2657125	0		>>			
ANR	2658304	Identifier	dst		2657125	0					
ANR	2658305	PrimaryExpression	8		2657125	1					
ANR	2658306	PrimaryExpression	0xff		2657125	1					
ANR	2658307	PrimaryExpression	16		2657125	1					
ANR	2658308	ExpressionStatement	ao -> o |= ( ( dst ) & 0xff ) << 24	6234:6:132612:132639	2657125	6	True				
ANR	2658309	AssignmentExpression	ao -> o |= ( ( dst ) & 0xff ) << 24		2657125	0		|=			
ANR	2658310	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658311	Identifier	ao		2657125	0					
ANR	2658312	Identifier	o		2657125	1					
ANR	2658313	ShiftExpression	( ( dst ) & 0xff ) << 24		2657125	1		<<			
ANR	2658314	CastExpression	( dst ) & 0xff		2657125	0					
ANR	2658315	CastTarget	dst		2657125	0					
ANR	2658316	UnaryOperationExpression	& 0xff		2657125	1					
ANR	2658317	UnaryOperator	&		2657125	0					
ANR	2658318	PrimaryExpression	0xff		2657125	1					
ANR	2658319	PrimaryExpression	24		2657125	1					
ANR	2658320	ReturnStatement	return 4 ;	6235:6:132647:132655	2657125	7	True				
ANR	2658321	PrimaryExpression	4		2657125	0					
ANR	2658322	ElseStatement	else		2657125	0					
ANR	2658323	CompoundStatement		163:12:4074:4074	2657125	0					
ANR	2658324	ExpressionStatement	ao -> o |= ( getreg ( ao -> a [ 0 ] ) << 24 )	6237:6:132677:132711	2657125	0	True				
ANR	2658325	AssignmentExpression	ao -> o |= ( getreg ( ao -> a [ 0 ] ) << 24 )		2657125	0		|=			
ANR	2658326	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658327	Identifier	ao		2657125	0					
ANR	2658328	Identifier	o		2657125	1					
ANR	2658329	ShiftExpression	getreg ( ao -> a [ 0 ] ) << 24		2657125	1		<<			
ANR	2658330	CallExpression	getreg ( ao -> a [ 0 ] )		2657125	0					
ANR	2658331	Callee	getreg		2657125	0					
ANR	2658332	Identifier	getreg		2657125	0					
ANR	2658333	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2658334	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2658335	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2658336	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658337	Identifier	ao		2657125	0					
ANR	2658338	Identifier	a		2657125	1					
ANR	2658339	PrimaryExpression	0		2657125	1					
ANR	2658340	PrimaryExpression	24		2657125	1					
ANR	2658341	BreakStatement	break ;	6239:5:132725:132730	2657125	22	True				
ANR	2658342	Label	case TYPE_HLT :	6240:4:132736:132749	2657125	23	True				
ANR	2658343	Identifier	TYPE_HLT		2657125	0					
ANR	2658344	CompoundStatement		168:5:4163:4196	2657125	24					
ANR	2658345	IdentifierDeclStatement	"ut32 o = 0 , n = getnum ( ao -> a [ 0 ] ) ;"	6241:5:132758:132791	2657125	0	True				
ANR	2658346	IdentifierDecl	o = 0		2657125	0					
ANR	2658347	IdentifierDeclType	ut32		2657125	0					
ANR	2658348	Identifier	o		2657125	1					
ANR	2658349	AssignmentExpression	o = 0		2657125	2		=			
ANR	2658350	Identifier	o		2657125	0					
ANR	2658351	PrimaryExpression	0		2657125	1					
ANR	2658352	IdentifierDecl	n = getnum ( ao -> a [ 0 ] )		2657125	1					
ANR	2658353	IdentifierDeclType	ut32		2657125	0					
ANR	2658354	Identifier	n		2657125	1					
ANR	2658355	AssignmentExpression	n = getnum ( ao -> a [ 0 ] )		2657125	2		=			
ANR	2658356	Identifier	n		2657125	0					
ANR	2658357	CallExpression	getnum ( ao -> a [ 0 ] )		2657125	1					
ANR	2658358	Callee	getnum		2657125	0					
ANR	2658359	Identifier	getnum		2657125	0					
ANR	2658360	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2658361	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2658362	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2658363	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658364	Identifier	ao		2657125	0					
ANR	2658365	Identifier	a		2657125	1					
ANR	2658366	PrimaryExpression	0		2657125	1					
ANR	2658367	ExpressionStatement	o |= ( ( n >> 12 ) & 0xf ) << 8	6242:5:132798:132825	2657125	1	True				
ANR	2658368	AssignmentExpression	o |= ( ( n >> 12 ) & 0xf ) << 8		2657125	0		|=			
ANR	2658369	Identifier	o		2657125	0					
ANR	2658370	ShiftExpression	( ( n >> 12 ) & 0xf ) << 8		2657125	1		<<			
ANR	2658371	BitAndExpression	( n >> 12 ) & 0xf		2657125	0		&			
ANR	2658372	ShiftExpression	n >> 12		2657125	0		>>			
ANR	2658373	Identifier	n		2657125	0					
ANR	2658374	PrimaryExpression	12		2657125	1					
ANR	2658375	PrimaryExpression	0xf		2657125	1					
ANR	2658376	PrimaryExpression	8		2657125	1					
ANR	2658377	ExpressionStatement	o |= ( ( n >> 8 ) & 0xf ) << 20	6243:5:132832:132859	2657125	2	True				
ANR	2658378	AssignmentExpression	o |= ( ( n >> 8 ) & 0xf ) << 20		2657125	0		|=			
ANR	2658379	Identifier	o		2657125	0					
ANR	2658380	ShiftExpression	( ( n >> 8 ) & 0xf ) << 20		2657125	1		<<			
ANR	2658381	BitAndExpression	( n >> 8 ) & 0xf		2657125	0		&			
ANR	2658382	ShiftExpression	n >> 8		2657125	0		>>			
ANR	2658383	Identifier	n		2657125	0					
ANR	2658384	PrimaryExpression	8		2657125	1					
ANR	2658385	PrimaryExpression	0xf		2657125	1					
ANR	2658386	PrimaryExpression	20		2657125	1					
ANR	2658387	ExpressionStatement	o |= ( ( n >> 4 ) & 0xf ) << 16	6244:5:132866:132893	2657125	3	True				
ANR	2658388	AssignmentExpression	o |= ( ( n >> 4 ) & 0xf ) << 16		2657125	0		|=			
ANR	2658389	Identifier	o		2657125	0					
ANR	2658390	ShiftExpression	( ( n >> 4 ) & 0xf ) << 16		2657125	1		<<			
ANR	2658391	BitAndExpression	( n >> 4 ) & 0xf		2657125	0		&			
ANR	2658392	ShiftExpression	n >> 4		2657125	0		>>			
ANR	2658393	Identifier	n		2657125	0					
ANR	2658394	PrimaryExpression	4		2657125	1					
ANR	2658395	PrimaryExpression	0xf		2657125	1					
ANR	2658396	PrimaryExpression	16		2657125	1					
ANR	2658397	ExpressionStatement	o |= ( ( n ) & 0xf ) << 24	6245:5:132900:132922	2657125	4	True				
ANR	2658398	AssignmentExpression	o |= ( ( n ) & 0xf ) << 24		2657125	0		|=			
ANR	2658399	Identifier	o		2657125	0					
ANR	2658400	ShiftExpression	( ( n ) & 0xf ) << 24		2657125	1		<<			
ANR	2658401	CastExpression	( n ) & 0xf		2657125	0					
ANR	2658402	CastTarget	n		2657125	0					
ANR	2658403	UnaryOperationExpression	& 0xf		2657125	1					
ANR	2658404	UnaryOperator	&		2657125	0					
ANR	2658405	PrimaryExpression	0xf		2657125	1					
ANR	2658406	PrimaryExpression	24		2657125	1					
ANR	2658407	ExpressionStatement	ao -> o |= o	6246:5:132929:132938	2657125	5	True				
ANR	2658408	AssignmentExpression	ao -> o |= o		2657125	0		|=			
ANR	2658409	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658410	Identifier	ao		2657125	0					
ANR	2658411	Identifier	o		2657125	1					
ANR	2658412	Identifier	o		2657125	1					
ANR	2658413	BreakStatement	break ;	6248:4:132950:132955	2657125	25	True				
ANR	2658414	Label	case TYPE_SWI :	6249:3:132960:132973	2657125	26	True				
ANR	2658415	Identifier	TYPE_SWI		2657125	0					
ANR	2658416	ExpressionStatement	ao -> o |= ( getnum ( ao -> a [ 0 ] ) & 0xff ) << 24	6250:4:132979:133020	2657125	27	True				
ANR	2658417	AssignmentExpression	ao -> o |= ( getnum ( ao -> a [ 0 ] ) & 0xff ) << 24		2657125	0		|=			
ANR	2658418	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658419	Identifier	ao		2657125	0					
ANR	2658420	Identifier	o		2657125	1					
ANR	2658421	ShiftExpression	( getnum ( ao -> a [ 0 ] ) & 0xff ) << 24		2657125	1		<<			
ANR	2658422	BitAndExpression	getnum ( ao -> a [ 0 ] ) & 0xff		2657125	0		&			
ANR	2658423	CallExpression	getnum ( ao -> a [ 0 ] )		2657125	0					
ANR	2658424	Callee	getnum		2657125	0					
ANR	2658425	Identifier	getnum		2657125	0					
ANR	2658426	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2658427	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2658428	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2658429	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658430	Identifier	ao		2657125	0					
ANR	2658431	Identifier	a		2657125	1					
ANR	2658432	PrimaryExpression	0		2657125	1					
ANR	2658433	PrimaryExpression	0xff		2657125	1					
ANR	2658434	PrimaryExpression	24		2657125	1					
ANR	2658435	ExpressionStatement	ao -> o |= ( ( getnum ( ao -> a [ 0 ] ) >> 8 ) & 0xff ) << 16	6251:4:133026:133074	2657125	28	True				
ANR	2658436	AssignmentExpression	ao -> o |= ( ( getnum ( ao -> a [ 0 ] ) >> 8 ) & 0xff ) << 16		2657125	0		|=			
ANR	2658437	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658438	Identifier	ao		2657125	0					
ANR	2658439	Identifier	o		2657125	1					
ANR	2658440	ShiftExpression	( ( getnum ( ao -> a [ 0 ] ) >> 8 ) & 0xff ) << 16		2657125	1		<<			
ANR	2658441	BitAndExpression	( getnum ( ao -> a [ 0 ] ) >> 8 ) & 0xff		2657125	0		&			
ANR	2658442	ShiftExpression	getnum ( ao -> a [ 0 ] ) >> 8		2657125	0		>>			
ANR	2658443	CallExpression	getnum ( ao -> a [ 0 ] )		2657125	0					
ANR	2658444	Callee	getnum		2657125	0					
ANR	2658445	Identifier	getnum		2657125	0					
ANR	2658446	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2658447	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2658448	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2658449	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658450	Identifier	ao		2657125	0					
ANR	2658451	Identifier	a		2657125	1					
ANR	2658452	PrimaryExpression	0		2657125	1					
ANR	2658453	PrimaryExpression	8		2657125	1					
ANR	2658454	PrimaryExpression	0xff		2657125	1					
ANR	2658455	PrimaryExpression	16		2657125	1					
ANR	2658456	ExpressionStatement	ao -> o |= ( ( getnum ( ao -> a [ 0 ] ) >> 16 ) & 0xff ) << 8	6252:4:133080:133128	2657125	29	True				
ANR	2658457	AssignmentExpression	ao -> o |= ( ( getnum ( ao -> a [ 0 ] ) >> 16 ) & 0xff ) << 8		2657125	0		|=			
ANR	2658458	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658459	Identifier	ao		2657125	0					
ANR	2658460	Identifier	o		2657125	1					
ANR	2658461	ShiftExpression	( ( getnum ( ao -> a [ 0 ] ) >> 16 ) & 0xff ) << 8		2657125	1		<<			
ANR	2658462	BitAndExpression	( getnum ( ao -> a [ 0 ] ) >> 16 ) & 0xff		2657125	0		&			
ANR	2658463	ShiftExpression	getnum ( ao -> a [ 0 ] ) >> 16		2657125	0		>>			
ANR	2658464	CallExpression	getnum ( ao -> a [ 0 ] )		2657125	0					
ANR	2658465	Callee	getnum		2657125	0					
ANR	2658466	Identifier	getnum		2657125	0					
ANR	2658467	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2658468	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2658469	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2658470	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658471	Identifier	ao		2657125	0					
ANR	2658472	Identifier	a		2657125	1					
ANR	2658473	PrimaryExpression	0		2657125	1					
ANR	2658474	PrimaryExpression	16		2657125	1					
ANR	2658475	PrimaryExpression	0xff		2657125	1					
ANR	2658476	PrimaryExpression	8		2657125	1					
ANR	2658477	BreakStatement	break ;	6253:4:133134:133139	2657125	30	True				
ANR	2658478	Label	case TYPE_UDF :	6254:3:133144:133157	2657125	31	True				
ANR	2658479	Identifier	TYPE_UDF		2657125	0					
ANR	2658480	CompoundStatement		185:5:4630:4656	2657125	32					
ANR	2658481	IdentifierDeclStatement	ut32 n = getnum ( ao -> a [ 0 ] ) ;	6258:5:133225:133251	2657125	0	True				
ANR	2658482	IdentifierDecl	n = getnum ( ao -> a [ 0 ] )		2657125	0					
ANR	2658483	IdentifierDeclType	ut32		2657125	0					
ANR	2658484	Identifier	n		2657125	1					
ANR	2658485	AssignmentExpression	n = getnum ( ao -> a [ 0 ] )		2657125	2		=			
ANR	2658486	Identifier	n		2657125	0					
ANR	2658487	CallExpression	getnum ( ao -> a [ 0 ] )		2657125	1					
ANR	2658488	Callee	getnum		2657125	0					
ANR	2658489	Identifier	getnum		2657125	0					
ANR	2658490	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2658491	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2658492	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2658493	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658494	Identifier	ao		2657125	0					
ANR	2658495	Identifier	a		2657125	1					
ANR	2658496	PrimaryExpression	0		2657125	1					
ANR	2658497	ExpressionStatement	ao -> o |= 0xe7	6259:5:133258:133271	2657125	1	True				
ANR	2658498	AssignmentExpression	ao -> o |= 0xe7		2657125	0		|=			
ANR	2658499	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658500	Identifier	ao		2657125	0					
ANR	2658501	Identifier	o		2657125	1					
ANR	2658502	PrimaryExpression	0xe7		2657125	1					
ANR	2658503	ExpressionStatement	ao -> o |= ( n & 0xf ) << 24	6260:5:133278:133302	2657125	2	True				
ANR	2658504	AssignmentExpression	ao -> o |= ( n & 0xf ) << 24		2657125	0		|=			
ANR	2658505	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658506	Identifier	ao		2657125	0					
ANR	2658507	Identifier	o		2657125	1					
ANR	2658508	ShiftExpression	( n & 0xf ) << 24		2657125	1		<<			
ANR	2658509	BitAndExpression	n & 0xf		2657125	0		&			
ANR	2658510	Identifier	n		2657125	0					
ANR	2658511	PrimaryExpression	0xf		2657125	1					
ANR	2658512	PrimaryExpression	24		2657125	1					
ANR	2658513	ExpressionStatement	ao -> o |= ( ( n >> 4 ) & 0xff ) << 16	6261:5:133309:133341	2657125	3	True				
ANR	2658514	AssignmentExpression	ao -> o |= ( ( n >> 4 ) & 0xff ) << 16		2657125	0		|=			
ANR	2658515	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658516	Identifier	ao		2657125	0					
ANR	2658517	Identifier	o		2657125	1					
ANR	2658518	ShiftExpression	( ( n >> 4 ) & 0xff ) << 16		2657125	1		<<			
ANR	2658519	BitAndExpression	( n >> 4 ) & 0xff		2657125	0		&			
ANR	2658520	ShiftExpression	n >> 4		2657125	0		>>			
ANR	2658521	Identifier	n		2657125	0					
ANR	2658522	PrimaryExpression	4		2657125	1					
ANR	2658523	PrimaryExpression	0xff		2657125	1					
ANR	2658524	PrimaryExpression	16		2657125	1					
ANR	2658525	ExpressionStatement	ao -> o |= ( ( n >> 12 ) & 0xf ) << 8	6262:5:133348:133379	2657125	4	True				
ANR	2658526	AssignmentExpression	ao -> o |= ( ( n >> 12 ) & 0xf ) << 8		2657125	0		|=			
ANR	2658527	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658528	Identifier	ao		2657125	0					
ANR	2658529	Identifier	o		2657125	1					
ANR	2658530	ShiftExpression	( ( n >> 12 ) & 0xf ) << 8		2657125	1		<<			
ANR	2658531	BitAndExpression	( n >> 12 ) & 0xf		2657125	0		&			
ANR	2658532	ShiftExpression	n >> 12		2657125	0		>>			
ANR	2658533	Identifier	n		2657125	0					
ANR	2658534	PrimaryExpression	12		2657125	1					
ANR	2658535	PrimaryExpression	0xf		2657125	1					
ANR	2658536	PrimaryExpression	8		2657125	1					
ANR	2658537	BreakStatement	break ;	6264:4:133391:133396	2657125	33	True				
ANR	2658538	Label	case TYPE_ARI :	6265:3:133401:133414	2657125	34	True				
ANR	2658539	Identifier	TYPE_ARI		2657125	0					
ANR	2658540	IfStatement	if ( ! ao -> a [ 2 ] )		2657125	35					
ANR	2658541	Condition	! ao -> a [ 2 ]	6266:8:133424:133432	2657125	0	True				
ANR	2658542	UnaryOperationExpression	! ao -> a [ 2 ]		2657125	0					
ANR	2658543	UnaryOperator	!		2657125	0					
ANR	2658544	ArrayIndexing	ao -> a [ 2 ]		2657125	1					
ANR	2658545	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658546	Identifier	ao		2657125	0					
ANR	2658547	Identifier	a		2657125	1					
ANR	2658548	PrimaryExpression	2		2657125	1					
ANR	2658549	CompoundStatement		193:19:4840:4840	2657125	1					
ANR	2658550	ExpressionStatement	ao -> a [ 2 ] = ao -> a [ 1 ]	6267:5:133442:133461	2657125	0	True				
ANR	2658551	AssignmentExpression	ao -> a [ 2 ] = ao -> a [ 1 ]		2657125	0		=			
ANR	2658552	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2658553	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658554	Identifier	ao		2657125	0					
ANR	2658555	Identifier	a		2657125	1					
ANR	2658556	PrimaryExpression	2		2657125	1					
ANR	2658557	ArrayIndexing	ao -> a [ 1 ]		2657125	1					
ANR	2658558	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658559	Identifier	ao		2657125	0					
ANR	2658560	Identifier	a		2657125	1					
ANR	2658561	PrimaryExpression	1		2657125	1					
ANR	2658562	ExpressionStatement	ao -> a [ 1 ] = ao -> a [ 0 ]	6268:5:133468:133487	2657125	1	True				
ANR	2658563	AssignmentExpression	ao -> a [ 1 ] = ao -> a [ 0 ]		2657125	0		=			
ANR	2658564	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2658565	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658566	Identifier	ao		2657125	0					
ANR	2658567	Identifier	a		2657125	1					
ANR	2658568	PrimaryExpression	1		2657125	1					
ANR	2658569	ArrayIndexing	ao -> a [ 0 ]		2657125	1					
ANR	2658570	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658571	Identifier	ao		2657125	0					
ANR	2658572	Identifier	a		2657125	1					
ANR	2658573	PrimaryExpression	0		2657125	1					
ANR	2658574	ExpressionStatement	reg = getreg ( ao -> a [ 0 ] )	6270:4:133499:133522	2657125	36	True				
ANR	2658575	AssignmentExpression	reg = getreg ( ao -> a [ 0 ] )		2657125	0		=			
ANR	2658576	Identifier	reg		2657125	0					
ANR	2658577	CallExpression	getreg ( ao -> a [ 0 ] )		2657125	1					
ANR	2658578	Callee	getreg		2657125	0					
ANR	2658579	Identifier	getreg		2657125	0					
ANR	2658580	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2658581	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2658582	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2658583	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658584	Identifier	ao		2657125	0					
ANR	2658585	Identifier	a		2657125	1					
ANR	2658586	PrimaryExpression	0		2657125	1					
ANR	2658587	IfStatement	if ( reg == - 1 )		2657125	37					
ANR	2658588	Condition	reg == - 1	6271:8:133532:133540	2657125	0	True				
ANR	2658589	EqualityExpression	reg == - 1		2657125	0		==			
ANR	2658590	Identifier	reg		2657125	0					
ANR	2658591	UnaryOperationExpression	- 1		2657125	1					
ANR	2658592	UnaryOperator	-		2657125	0					
ANR	2658593	PrimaryExpression	1		2657125	1					
ANR	2658594	CompoundStatement		198:19:4948:4948	2657125	1					
ANR	2658595	ReturnStatement	return 0 ;	6272:5:133550:133558	2657125	0	True				
ANR	2658596	PrimaryExpression	0		2657125	0					
ANR	2658597	ExpressionStatement	ao -> o |= reg << 20	6274:4:133570:133588	2657125	38	True				
ANR	2658598	AssignmentExpression	ao -> o |= reg << 20		2657125	0		|=			
ANR	2658599	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658600	Identifier	ao		2657125	0					
ANR	2658601	Identifier	o		2657125	1					
ANR	2658602	ShiftExpression	reg << 20		2657125	1		<<			
ANR	2658603	Identifier	reg		2657125	0					
ANR	2658604	PrimaryExpression	20		2657125	1					
ANR	2658605	ExpressionStatement	reg = getreg ( ao -> a [ 1 ] )	6276:4:133595:133618	2657125	39	True				
ANR	2658606	AssignmentExpression	reg = getreg ( ao -> a [ 1 ] )		2657125	0		=			
ANR	2658607	Identifier	reg		2657125	0					
ANR	2658608	CallExpression	getreg ( ao -> a [ 1 ] )		2657125	1					
ANR	2658609	Callee	getreg		2657125	0					
ANR	2658610	Identifier	getreg		2657125	0					
ANR	2658611	ArgumentList	ao -> a [ 1 ]		2657125	1					
ANR	2658612	Argument	ao -> a [ 1 ]		2657125	0					
ANR	2658613	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2658614	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658615	Identifier	ao		2657125	0					
ANR	2658616	Identifier	a		2657125	1					
ANR	2658617	PrimaryExpression	1		2657125	1					
ANR	2658618	IfStatement	if ( reg == - 1 )		2657125	40					
ANR	2658619	Condition	reg == - 1	6277:8:133628:133636	2657125	0	True				
ANR	2658620	EqualityExpression	reg == - 1		2657125	0		==			
ANR	2658621	Identifier	reg		2657125	0					
ANR	2658622	UnaryOperationExpression	- 1		2657125	1					
ANR	2658623	UnaryOperator	-		2657125	0					
ANR	2658624	PrimaryExpression	1		2657125	1					
ANR	2658625	CompoundStatement		204:19:5044:5044	2657125	1					
ANR	2658626	ReturnStatement	return 0 ;	6278:5:133646:133654	2657125	0	True				
ANR	2658627	PrimaryExpression	0		2657125	0					
ANR	2658628	ExpressionStatement	ao -> o |= reg << 8	6280:4:133666:133683	2657125	41	True				
ANR	2658629	AssignmentExpression	ao -> o |= reg << 8		2657125	0		|=			
ANR	2658630	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658631	Identifier	ao		2657125	0					
ANR	2658632	Identifier	o		2657125	1					
ANR	2658633	ShiftExpression	reg << 8		2657125	1		<<			
ANR	2658634	Identifier	reg		2657125	0					
ANR	2658635	PrimaryExpression	8		2657125	1					
ANR	2658636	ExpressionStatement	reg = getreg ( ao -> a [ 2 ] )	6281:4:133689:133712	2657125	42	True				
ANR	2658637	AssignmentExpression	reg = getreg ( ao -> a [ 2 ] )		2657125	0		=			
ANR	2658638	Identifier	reg		2657125	0					
ANR	2658639	CallExpression	getreg ( ao -> a [ 2 ] )		2657125	1					
ANR	2658640	Callee	getreg		2657125	0					
ANR	2658641	Identifier	getreg		2657125	0					
ANR	2658642	ArgumentList	ao -> a [ 2 ]		2657125	1					
ANR	2658643	Argument	ao -> a [ 2 ]		2657125	0					
ANR	2658644	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2658645	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658646	Identifier	ao		2657125	0					
ANR	2658647	Identifier	a		2657125	1					
ANR	2658648	PrimaryExpression	2		2657125	1					
ANR	2658649	ExpressionStatement	ao -> o |= ( reg != - 1 ) ? reg << 24 : 2 | getnum ( ao -> a [ 2 ] ) << 24	6282:4:133718:133779	2657125	43	True				
ANR	2658650	AssignmentExpression	ao -> o |= ( reg != - 1 ) ? reg << 24 : 2 | getnum ( ao -> a [ 2 ] ) << 24		2657125	0		|=			
ANR	2658651	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658652	Identifier	ao		2657125	0					
ANR	2658653	Identifier	o		2657125	1					
ANR	2658654	ConditionalExpression	( reg != - 1 ) ? reg << 24 : 2 | getnum ( ao -> a [ 2 ] ) << 24		2657125	1					
ANR	2658655	Condition	reg != - 1		2657125	0					
ANR	2658656	EqualityExpression	reg != - 1		2657125	0		!=			
ANR	2658657	Identifier	reg		2657125	0					
ANR	2658658	UnaryOperationExpression	- 1		2657125	1					
ANR	2658659	UnaryOperator	-		2657125	0					
ANR	2658660	PrimaryExpression	1		2657125	1					
ANR	2658661	ShiftExpression	reg << 24		2657125	1		<<			
ANR	2658662	Identifier	reg		2657125	0					
ANR	2658663	PrimaryExpression	24		2657125	1					
ANR	2658664	InclusiveOrExpression	2 | getnum ( ao -> a [ 2 ] ) << 24		2657125	2		|			
ANR	2658665	PrimaryExpression	2		2657125	0					
ANR	2658666	ShiftExpression	getnum ( ao -> a [ 2 ] ) << 24		2657125	1		<<			
ANR	2658667	CallExpression	getnum ( ao -> a [ 2 ] )		2657125	0					
ANR	2658668	Callee	getnum		2657125	0					
ANR	2658669	Identifier	getnum		2657125	0					
ANR	2658670	ArgumentList	ao -> a [ 2 ]		2657125	1					
ANR	2658671	Argument	ao -> a [ 2 ]		2657125	0					
ANR	2658672	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2658673	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658674	Identifier	ao		2657125	0					
ANR	2658675	Identifier	a		2657125	1					
ANR	2658676	PrimaryExpression	2		2657125	1					
ANR	2658677	PrimaryExpression	24		2657125	1					
ANR	2658678	IfStatement	if ( ao -> a [ 3 ] )		2657125	44					
ANR	2658679	Condition	ao -> a [ 3 ]	6283:8:133789:133796	2657125	0	True				
ANR	2658680	ArrayIndexing	ao -> a [ 3 ]		2657125	0					
ANR	2658681	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658682	Identifier	ao		2657125	0					
ANR	2658683	Identifier	a		2657125	1					
ANR	2658684	PrimaryExpression	3		2657125	1					
ANR	2658685	CompoundStatement		210:18:5204:5204	2657125	1					
ANR	2658686	ExpressionStatement	ao -> o |= getshift ( ao -> a [ 3 ] )	6284:5:133806:133834	2657125	0	True				
ANR	2658687	AssignmentExpression	ao -> o |= getshift ( ao -> a [ 3 ] )		2657125	0		|=			
ANR	2658688	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658689	Identifier	ao		2657125	0					
ANR	2658690	Identifier	o		2657125	1					
ANR	2658691	CallExpression	getshift ( ao -> a [ 3 ] )		2657125	1					
ANR	2658692	Callee	getshift		2657125	0					
ANR	2658693	Identifier	getshift		2657125	0					
ANR	2658694	ArgumentList	ao -> a [ 3 ]		2657125	1					
ANR	2658695	Argument	ao -> a [ 3 ]		2657125	0					
ANR	2658696	ArrayIndexing	ao -> a [ 3 ]		2657125	0					
ANR	2658697	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658698	Identifier	ao		2657125	0					
ANR	2658699	Identifier	a		2657125	1					
ANR	2658700	PrimaryExpression	3		2657125	1					
ANR	2658701	BreakStatement	break ;	6286:4:133846:133851	2657125	45	True				
ANR	2658702	Label	case TYPE_SWP :	6287:3:133856:133869	2657125	46	True				
ANR	2658703	Identifier	TYPE_SWP		2657125	0					
ANR	2658704	CompoundStatement		216:4:5286:5312	2657125	47					
ANR	2658705	IdentifierDeclStatement	int a1 = getreg ( ao -> a [ 1 ] ) ;	6289:4:133881:133907	2657125	0	True				
ANR	2658706	IdentifierDecl	a1 = getreg ( ao -> a [ 1 ] )		2657125	0					
ANR	2658707	IdentifierDeclType	int		2657125	0					
ANR	2658708	Identifier	a1		2657125	1					
ANR	2658709	AssignmentExpression	a1 = getreg ( ao -> a [ 1 ] )		2657125	2		=			
ANR	2658710	Identifier	a1		2657125	0					
ANR	2658711	CallExpression	getreg ( ao -> a [ 1 ] )		2657125	1					
ANR	2658712	Callee	getreg		2657125	0					
ANR	2658713	Identifier	getreg		2657125	0					
ANR	2658714	ArgumentList	ao -> a [ 1 ]		2657125	1					
ANR	2658715	Argument	ao -> a [ 1 ]		2657125	0					
ANR	2658716	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2658717	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658718	Identifier	ao		2657125	0					
ANR	2658719	Identifier	a		2657125	1					
ANR	2658720	PrimaryExpression	1		2657125	1					
ANR	2658721	IfStatement	if ( a1 )		2657125	1					
ANR	2658722	Condition	a1	6290:8:133917:133918	2657125	0	True				
ANR	2658723	Identifier	a1		2657125	0					
ANR	2658724	CompoundStatement		217:12:5326:5326	2657125	1					
ANR	2658725	ExpressionStatement	ao -> o = 0xe1	6291:5:133928:133940	2657125	0	True				
ANR	2658726	AssignmentExpression	ao -> o = 0xe1		2657125	0		=			
ANR	2658727	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658728	Identifier	ao		2657125	0					
ANR	2658729	Identifier	o		2657125	1					
ANR	2658730	PrimaryExpression	0xe1		2657125	1					
ANR	2658731	ExpressionStatement	ao -> o |= ( getreg ( ao -> a [ 0 ] ) << 4 ) << 16	6292:5:133947:133986	2657125	1	True				
ANR	2658732	AssignmentExpression	ao -> o |= ( getreg ( ao -> a [ 0 ] ) << 4 ) << 16		2657125	0		|=			
ANR	2658733	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658734	Identifier	ao		2657125	0					
ANR	2658735	Identifier	o		2657125	1					
ANR	2658736	ShiftExpression	( getreg ( ao -> a [ 0 ] ) << 4 ) << 16		2657125	1		<<			
ANR	2658737	ShiftExpression	getreg ( ao -> a [ 0 ] ) << 4		2657125	0		<<			
ANR	2658738	CallExpression	getreg ( ao -> a [ 0 ] )		2657125	0					
ANR	2658739	Callee	getreg		2657125	0					
ANR	2658740	Identifier	getreg		2657125	0					
ANR	2658741	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2658742	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2658743	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2658744	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658745	Identifier	ao		2657125	0					
ANR	2658746	Identifier	a		2657125	1					
ANR	2658747	PrimaryExpression	0		2657125	1					
ANR	2658748	PrimaryExpression	4		2657125	1					
ANR	2658749	PrimaryExpression	16		2657125	1					
ANR	2658750	ExpressionStatement	ao -> o |= ( 0x90 + a1 ) << 24	6293:5:133993:134019	2657125	2	True				
ANR	2658751	AssignmentExpression	ao -> o |= ( 0x90 + a1 ) << 24		2657125	0		|=			
ANR	2658752	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658753	Identifier	ao		2657125	0					
ANR	2658754	Identifier	o		2657125	1					
ANR	2658755	ShiftExpression	( 0x90 + a1 ) << 24		2657125	1		<<			
ANR	2658756	AdditiveExpression	0x90 + a1		2657125	0		+			
ANR	2658757	PrimaryExpression	0x90		2657125	0					
ANR	2658758	Identifier	a1		2657125	1					
ANR	2658759	PrimaryExpression	24		2657125	1					
ANR	2658760	IfStatement	if ( ao -> a [ 2 ] )		2657125	3					
ANR	2658761	Condition	ao -> a [ 2 ]	6294:9:134030:134037	2657125	0	True				
ANR	2658762	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2658763	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658764	Identifier	ao		2657125	0					
ANR	2658765	Identifier	a		2657125	1					
ANR	2658766	PrimaryExpression	2		2657125	1					
ANR	2658767	CompoundStatement		221:19:5445:5445	2657125	1					
ANR	2658768	ExpressionStatement	ao -> o |= ( getreg ( ao -> a [ 2 ] + 1 ) ) << 8	6295:6:134048:134085	2657125	0	True				
ANR	2658769	AssignmentExpression	ao -> o |= ( getreg ( ao -> a [ 2 ] + 1 ) ) << 8		2657125	0		|=			
ANR	2658770	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658771	Identifier	ao		2657125	0					
ANR	2658772	Identifier	o		2657125	1					
ANR	2658773	ShiftExpression	( getreg ( ao -> a [ 2 ] + 1 ) ) << 8		2657125	1		<<			
ANR	2658774	CallExpression	getreg ( ao -> a [ 2 ] + 1 )		2657125	0					
ANR	2658775	Callee	getreg		2657125	0					
ANR	2658776	Identifier	getreg		2657125	0					
ANR	2658777	ArgumentList	ao -> a [ 2 ] + 1		2657125	1					
ANR	2658778	Argument	ao -> a [ 2 ] + 1		2657125	0					
ANR	2658779	AdditiveExpression	ao -> a [ 2 ] + 1		2657125	0		+			
ANR	2658780	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2658781	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658782	Identifier	ao		2657125	0					
ANR	2658783	Identifier	a		2657125	1					
ANR	2658784	PrimaryExpression	2		2657125	1					
ANR	2658785	PrimaryExpression	1		2657125	1					
ANR	2658786	PrimaryExpression	8		2657125	1					
ANR	2658787	ElseStatement	else		2657125	0					
ANR	2658788	CompoundStatement		223:12:5504:5504	2657125	0					
ANR	2658789	ReturnStatement	return 0 ;	6297:6:134107:134115	2657125	0	True				
ANR	2658790	PrimaryExpression	0		2657125	0					
ANR	2658791	IfStatement	if ( 0xff == ( ( ao -> o >> 16 ) & 0xff ) )		2657125	2					
ANR	2658792	Condition	0xff == ( ( ao -> o >> 16 ) & 0xff )	6300:8:134138:134167	2657125	0	True				
ANR	2658793	EqualityExpression	0xff == ( ( ao -> o >> 16 ) & 0xff )		2657125	0		==			
ANR	2658794	PrimaryExpression	0xff		2657125	0					
ANR	2658795	BitAndExpression	( ao -> o >> 16 ) & 0xff		2657125	1		&			
ANR	2658796	ShiftExpression	ao -> o >> 16		2657125	0		>>			
ANR	2658797	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658798	Identifier	ao		2657125	0					
ANR	2658799	Identifier	o		2657125	1					
ANR	2658800	PrimaryExpression	16		2657125	1					
ANR	2658801	PrimaryExpression	0xff		2657125	1					
ANR	2658802	CompoundStatement		227:40:5575:5575	2657125	1					
ANR	2658803	ReturnStatement	return 0 ;	6301:5:134177:134185	2657125	0	True				
ANR	2658804	PrimaryExpression	0		2657125	0					
ANR	2658805	BreakStatement	break ;	6304:4:134203:134208	2657125	48	True				
ANR	2658806	Label	case TYPE_MOV :	6305:3:134213:134226	2657125	49	True				
ANR	2658807	Identifier	TYPE_MOV		2657125	0					
ANR	2658808	IfStatement	"if ( ! strcmpnull ( ao -> op , ""movs"" ) )"		2657125	50					
ANR	2658809	Condition	"! strcmpnull ( ao -> op , ""movs"" )"	6306:8:134236:134263	2657125	0	True				
ANR	2658810	UnaryOperationExpression	"! strcmpnull ( ao -> op , ""movs"" )"		2657125	0					
ANR	2658811	UnaryOperator	!		2657125	0					
ANR	2658812	CallExpression	"strcmpnull ( ao -> op , ""movs"" )"		2657125	1					
ANR	2658813	Callee	strcmpnull		2657125	0					
ANR	2658814	Identifier	strcmpnull		2657125	0					
ANR	2658815	ArgumentList	ao -> op		2657125	1					
ANR	2658816	Argument	ao -> op		2657125	0					
ANR	2658817	PtrMemberAccess	ao -> op		2657125	0					
ANR	2658818	Identifier	ao		2657125	0					
ANR	2658819	Identifier	op		2657125	1					
ANR	2658820	Argument	"""movs"""		2657125	1					
ANR	2658821	PrimaryExpression	"""movs"""		2657125	0					
ANR	2658822	CompoundStatement		233:38:5671:5671	2657125	1					
ANR	2658823	ExpressionStatement	ao -> o = 0xb0e1	6307:5:134273:134287	2657125	0	True				
ANR	2658824	AssignmentExpression	ao -> o = 0xb0e1		2657125	0		=			
ANR	2658825	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658826	Identifier	ao		2657125	0					
ANR	2658827	Identifier	o		2657125	1					
ANR	2658828	PrimaryExpression	0xb0e1		2657125	1					
ANR	2658829	ExpressionStatement	ao -> o |= getreg ( ao -> a [ 0 ] ) << 20	6309:4:134299:134331	2657125	51	True				
ANR	2658830	AssignmentExpression	ao -> o |= getreg ( ao -> a [ 0 ] ) << 20		2657125	0		|=			
ANR	2658831	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658832	Identifier	ao		2657125	0					
ANR	2658833	Identifier	o		2657125	1					
ANR	2658834	ShiftExpression	getreg ( ao -> a [ 0 ] ) << 20		2657125	1		<<			
ANR	2658835	CallExpression	getreg ( ao -> a [ 0 ] )		2657125	0					
ANR	2658836	Callee	getreg		2657125	0					
ANR	2658837	Identifier	getreg		2657125	0					
ANR	2658838	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2658839	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2658840	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2658841	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658842	Identifier	ao		2657125	0					
ANR	2658843	Identifier	a		2657125	1					
ANR	2658844	PrimaryExpression	0		2657125	1					
ANR	2658845	PrimaryExpression	20		2657125	1					
ANR	2658846	ExpressionStatement	ret = getreg ( ao -> a [ 1 ] )	6310:4:134337:134360	2657125	52	True				
ANR	2658847	AssignmentExpression	ret = getreg ( ao -> a [ 1 ] )		2657125	0		=			
ANR	2658848	Identifier	ret		2657125	0					
ANR	2658849	CallExpression	getreg ( ao -> a [ 1 ] )		2657125	1					
ANR	2658850	Callee	getreg		2657125	0					
ANR	2658851	Identifier	getreg		2657125	0					
ANR	2658852	ArgumentList	ao -> a [ 1 ]		2657125	1					
ANR	2658853	Argument	ao -> a [ 1 ]		2657125	0					
ANR	2658854	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2658855	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658856	Identifier	ao		2657125	0					
ANR	2658857	Identifier	a		2657125	1					
ANR	2658858	PrimaryExpression	1		2657125	1					
ANR	2658859	IfStatement	if ( ret != - 1 )		2657125	53					
ANR	2658860	Condition	ret != - 1	6311:8:134370:134378	2657125	0	True				
ANR	2658861	EqualityExpression	ret != - 1		2657125	0		!=			
ANR	2658862	Identifier	ret		2657125	0					
ANR	2658863	UnaryOperationExpression	- 1		2657125	1					
ANR	2658864	UnaryOperator	-		2657125	0					
ANR	2658865	PrimaryExpression	1		2657125	1					
ANR	2658866	CompoundStatement		238:19:5786:5786	2657125	1					
ANR	2658867	ExpressionStatement	ao -> o |= ret << 24	6312:5:134388:134406	2657125	0	True				
ANR	2658868	AssignmentExpression	ao -> o |= ret << 24		2657125	0		|=			
ANR	2658869	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658870	Identifier	ao		2657125	0					
ANR	2658871	Identifier	o		2657125	1					
ANR	2658872	ShiftExpression	ret << 24		2657125	1		<<			
ANR	2658873	Identifier	ret		2657125	0					
ANR	2658874	PrimaryExpression	24		2657125	1					
ANR	2658875	ElseStatement	else		2657125	0					
ANR	2658876	CompoundStatement		241:5:5831:5863	2657125	0					
ANR	2658877	IdentifierDeclStatement	int immed = getimmed8 ( ao -> a [ 1 ] ) ;	6314:5:134426:134458	2657125	0	True				
ANR	2658878	IdentifierDecl	immed = getimmed8 ( ao -> a [ 1 ] )		2657125	0					
ANR	2658879	IdentifierDeclType	int		2657125	0					
ANR	2658880	Identifier	immed		2657125	1					
ANR	2658881	AssignmentExpression	immed = getimmed8 ( ao -> a [ 1 ] )		2657125	2		=			
ANR	2658882	Identifier	immed		2657125	0					
ANR	2658883	CallExpression	getimmed8 ( ao -> a [ 1 ] )		2657125	1					
ANR	2658884	Callee	getimmed8		2657125	0					
ANR	2658885	Identifier	getimmed8		2657125	0					
ANR	2658886	ArgumentList	ao -> a [ 1 ]		2657125	1					
ANR	2658887	Argument	ao -> a [ 1 ]		2657125	0					
ANR	2658888	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2658889	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658890	Identifier	ao		2657125	0					
ANR	2658891	Identifier	a		2657125	1					
ANR	2658892	PrimaryExpression	1		2657125	1					
ANR	2658893	IfStatement	if ( err )		2657125	1					
ANR	2658894	Condition	err	6315:9:134469:134471	2657125	0	True				
ANR	2658895	Identifier	err		2657125	0					
ANR	2658896	CompoundStatement		242:14:5879:5879	2657125	1					
ANR	2658897	ReturnStatement	return 0 ;	6316:6:134482:134490	2657125	0	True				
ANR	2658898	PrimaryExpression	0		2657125	0					
ANR	2658899	ExpressionStatement	ao -> o |= 0xa003 | ( immed & 0xff ) << 24 | ( immed >> 8 ) << 16	6318:5:134504:134563	2657125	2	True				
ANR	2658900	AssignmentExpression	ao -> o |= 0xa003 | ( immed & 0xff ) << 24 | ( immed >> 8 ) << 16		2657125	0		|=			
ANR	2658901	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658902	Identifier	ao		2657125	0					
ANR	2658903	Identifier	o		2657125	1					
ANR	2658904	InclusiveOrExpression	0xa003 | ( immed & 0xff ) << 24 | ( immed >> 8 ) << 16		2657125	1		|			
ANR	2658905	PrimaryExpression	0xa003		2657125	0					
ANR	2658906	InclusiveOrExpression	( immed & 0xff ) << 24 | ( immed >> 8 ) << 16		2657125	1		|			
ANR	2658907	ShiftExpression	( immed & 0xff ) << 24		2657125	0		<<			
ANR	2658908	BitAndExpression	immed & 0xff		2657125	0		&			
ANR	2658909	Identifier	immed		2657125	0					
ANR	2658910	PrimaryExpression	0xff		2657125	1					
ANR	2658911	PrimaryExpression	24		2657125	1					
ANR	2658912	ShiftExpression	( immed >> 8 ) << 16		2657125	1		<<			
ANR	2658913	ShiftExpression	immed >> 8		2657125	0		>>			
ANR	2658914	Identifier	immed		2657125	0					
ANR	2658915	PrimaryExpression	8		2657125	1					
ANR	2658916	PrimaryExpression	16		2657125	1					
ANR	2658917	BreakStatement	break ;	6320:4:134575:134580	2657125	54	True				
ANR	2658918	Label	case TYPE_MOVW :	6321:3:134585:134599	2657125	55	True				
ANR	2658919	Identifier	TYPE_MOVW		2657125	0					
ANR	2658920	ExpressionStatement	reg = getreg ( ao -> a [ 0 ] )	6322:4:134605:134628	2657125	56	True				
ANR	2658921	AssignmentExpression	reg = getreg ( ao -> a [ 0 ] )		2657125	0		=			
ANR	2658922	Identifier	reg		2657125	0					
ANR	2658923	CallExpression	getreg ( ao -> a [ 0 ] )		2657125	1					
ANR	2658924	Callee	getreg		2657125	0					
ANR	2658925	Identifier	getreg		2657125	0					
ANR	2658926	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2658927	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2658928	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2658929	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658930	Identifier	ao		2657125	0					
ANR	2658931	Identifier	a		2657125	1					
ANR	2658932	PrimaryExpression	0		2657125	1					
ANR	2658933	IfStatement	if ( reg == - 1 )		2657125	57					
ANR	2658934	Condition	reg == - 1	6323:8:134638:134646	2657125	0	True				
ANR	2658935	EqualityExpression	reg == - 1		2657125	0		==			
ANR	2658936	Identifier	reg		2657125	0					
ANR	2658937	UnaryOperationExpression	- 1		2657125	1					
ANR	2658938	UnaryOperator	-		2657125	0					
ANR	2658939	PrimaryExpression	1		2657125	1					
ANR	2658940	CompoundStatement		250:19:6054:6054	2657125	1					
ANR	2658941	ReturnStatement	return 0 ;	6324:5:134656:134664	2657125	0	True				
ANR	2658942	PrimaryExpression	0		2657125	0					
ANR	2658943	ExpressionStatement	ao -> o |= getreg ( ao -> a [ 0 ] ) << 20	6326:4:134676:134708	2657125	58	True				
ANR	2658944	AssignmentExpression	ao -> o |= getreg ( ao -> a [ 0 ] ) << 20		2657125	0		|=			
ANR	2658945	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658946	Identifier	ao		2657125	0					
ANR	2658947	Identifier	o		2657125	1					
ANR	2658948	ShiftExpression	getreg ( ao -> a [ 0 ] ) << 20		2657125	1		<<			
ANR	2658949	CallExpression	getreg ( ao -> a [ 0 ] )		2657125	0					
ANR	2658950	Callee	getreg		2657125	0					
ANR	2658951	Identifier	getreg		2657125	0					
ANR	2658952	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2658953	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2658954	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2658955	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658956	Identifier	ao		2657125	0					
ANR	2658957	Identifier	a		2657125	1					
ANR	2658958	PrimaryExpression	0		2657125	1					
ANR	2658959	PrimaryExpression	20		2657125	1					
ANR	2658960	ExpressionStatement	ret = getnum ( ao -> a [ 1 ] )	6327:4:134714:134737	2657125	59	True				
ANR	2658961	AssignmentExpression	ret = getnum ( ao -> a [ 1 ] )		2657125	0		=			
ANR	2658962	Identifier	ret		2657125	0					
ANR	2658963	CallExpression	getnum ( ao -> a [ 1 ] )		2657125	1					
ANR	2658964	Callee	getnum		2657125	0					
ANR	2658965	Identifier	getnum		2657125	0					
ANR	2658966	ArgumentList	ao -> a [ 1 ]		2657125	1					
ANR	2658967	Argument	ao -> a [ 1 ]		2657125	0					
ANR	2658968	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2658969	PtrMemberAccess	ao -> a		2657125	0					
ANR	2658970	Identifier	ao		2657125	0					
ANR	2658971	Identifier	a		2657125	1					
ANR	2658972	PrimaryExpression	1		2657125	1					
ANR	2658973	ExpressionStatement	ao -> o |= 0x3 | ret << 24	6329:4:134744:134768	2657125	60	True				
ANR	2658974	AssignmentExpression	ao -> o |= 0x3 | ret << 24		2657125	0		|=			
ANR	2658975	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658976	Identifier	ao		2657125	0					
ANR	2658977	Identifier	o		2657125	1					
ANR	2658978	InclusiveOrExpression	0x3 | ret << 24		2657125	1		|			
ANR	2658979	PrimaryExpression	0x3		2657125	0					
ANR	2658980	ShiftExpression	ret << 24		2657125	1		<<			
ANR	2658981	Identifier	ret		2657125	0					
ANR	2658982	PrimaryExpression	24		2657125	1					
ANR	2658983	ExpressionStatement	ao -> o |= ( ret & 0xf000 ) >> 4	6330:4:134774:134802	2657125	61	True				
ANR	2658984	AssignmentExpression	ao -> o |= ( ret & 0xf000 ) >> 4		2657125	0		|=			
ANR	2658985	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658986	Identifier	ao		2657125	0					
ANR	2658987	Identifier	o		2657125	1					
ANR	2658988	ShiftExpression	( ret & 0xf000 ) >> 4		2657125	1		>>			
ANR	2658989	BitAndExpression	ret & 0xf000		2657125	0		&			
ANR	2658990	Identifier	ret		2657125	0					
ANR	2658991	PrimaryExpression	0xf000		2657125	1					
ANR	2658992	PrimaryExpression	4		2657125	1					
ANR	2658993	ExpressionStatement	ao -> o |= ( ret & 0xf00 ) << 8	6331:4:134808:134835	2657125	62	True				
ANR	2658994	AssignmentExpression	ao -> o |= ( ret & 0xf00 ) << 8		2657125	0		|=			
ANR	2658995	PtrMemberAccess	ao -> o		2657125	0					
ANR	2658996	Identifier	ao		2657125	0					
ANR	2658997	Identifier	o		2657125	1					
ANR	2658998	ShiftExpression	( ret & 0xf00 ) << 8		2657125	1		<<			
ANR	2658999	BitAndExpression	ret & 0xf00		2657125	0		&			
ANR	2659000	Identifier	ret		2657125	0					
ANR	2659001	PrimaryExpression	0xf00		2657125	1					
ANR	2659002	PrimaryExpression	8		2657125	1					
ANR	2659003	BreakStatement	break ;	6332:4:134841:134846	2657125	63	True				
ANR	2659004	Label	case TYPE_MOVT :	6333:3:134851:134865	2657125	64	True				
ANR	2659005	Identifier	TYPE_MOVT		2657125	0					
ANR	2659006	ExpressionStatement	ao -> o |= getreg ( ao -> a [ 0 ] ) << 20	6334:4:134871:134903	2657125	65	True				
ANR	2659007	AssignmentExpression	ao -> o |= getreg ( ao -> a [ 0 ] ) << 20		2657125	0		|=			
ANR	2659008	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659009	Identifier	ao		2657125	0					
ANR	2659010	Identifier	o		2657125	1					
ANR	2659011	ShiftExpression	getreg ( ao -> a [ 0 ] ) << 20		2657125	1		<<			
ANR	2659012	CallExpression	getreg ( ao -> a [ 0 ] )		2657125	0					
ANR	2659013	Callee	getreg		2657125	0					
ANR	2659014	Identifier	getreg		2657125	0					
ANR	2659015	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2659016	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2659017	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2659018	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659019	Identifier	ao		2657125	0					
ANR	2659020	Identifier	a		2657125	1					
ANR	2659021	PrimaryExpression	0		2657125	1					
ANR	2659022	PrimaryExpression	20		2657125	1					
ANR	2659023	ExpressionStatement	ret = getnum ( ao -> a [ 1 ] )	6335:4:134909:134932	2657125	66	True				
ANR	2659024	AssignmentExpression	ret = getnum ( ao -> a [ 1 ] )		2657125	0		=			
ANR	2659025	Identifier	ret		2657125	0					
ANR	2659026	CallExpression	getnum ( ao -> a [ 1 ] )		2657125	1					
ANR	2659027	Callee	getnum		2657125	0					
ANR	2659028	Identifier	getnum		2657125	0					
ANR	2659029	ArgumentList	ao -> a [ 1 ]		2657125	1					
ANR	2659030	Argument	ao -> a [ 1 ]		2657125	0					
ANR	2659031	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2659032	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659033	Identifier	ao		2657125	0					
ANR	2659034	Identifier	a		2657125	1					
ANR	2659035	PrimaryExpression	1		2657125	1					
ANR	2659036	ExpressionStatement	ao -> o |= 0x4003 | ret << 24	6337:4:134939:134966	2657125	67	True				
ANR	2659037	AssignmentExpression	ao -> o |= 0x4003 | ret << 24		2657125	0		|=			
ANR	2659038	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659039	Identifier	ao		2657125	0					
ANR	2659040	Identifier	o		2657125	1					
ANR	2659041	InclusiveOrExpression	0x4003 | ret << 24		2657125	1		|			
ANR	2659042	PrimaryExpression	0x4003		2657125	0					
ANR	2659043	ShiftExpression	ret << 24		2657125	1		<<			
ANR	2659044	Identifier	ret		2657125	0					
ANR	2659045	PrimaryExpression	24		2657125	1					
ANR	2659046	ExpressionStatement	ao -> o |= ( ret & 0xf000 ) >> 4	6338:4:134972:135000	2657125	68	True				
ANR	2659047	AssignmentExpression	ao -> o |= ( ret & 0xf000 ) >> 4		2657125	0		|=			
ANR	2659048	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659049	Identifier	ao		2657125	0					
ANR	2659050	Identifier	o		2657125	1					
ANR	2659051	ShiftExpression	( ret & 0xf000 ) >> 4		2657125	1		>>			
ANR	2659052	BitAndExpression	ret & 0xf000		2657125	0		&			
ANR	2659053	Identifier	ret		2657125	0					
ANR	2659054	PrimaryExpression	0xf000		2657125	1					
ANR	2659055	PrimaryExpression	4		2657125	1					
ANR	2659056	ExpressionStatement	ao -> o |= ( ret & 0xf00 ) << 8	6339:4:135006:135033	2657125	69	True				
ANR	2659057	AssignmentExpression	ao -> o |= ( ret & 0xf00 ) << 8		2657125	0		|=			
ANR	2659058	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659059	Identifier	ao		2657125	0					
ANR	2659060	Identifier	o		2657125	1					
ANR	2659061	ShiftExpression	( ret & 0xf00 ) << 8		2657125	1		<<			
ANR	2659062	BitAndExpression	ret & 0xf00		2657125	0		&			
ANR	2659063	Identifier	ret		2657125	0					
ANR	2659064	PrimaryExpression	0xf00		2657125	1					
ANR	2659065	PrimaryExpression	8		2657125	1					
ANR	2659066	BreakStatement	break ;	6340:4:135039:135044	2657125	70	True				
ANR	2659067	Label	case TYPE_MUL :	6341:3:135049:135062	2657125	71	True				
ANR	2659068	Identifier	TYPE_MUL		2657125	0					
ANR	2659069	IfStatement	"if ( ! strcmpnull ( ao -> op , ""mul"" ) )"		2657125	72					
ANR	2659070	Condition	"! strcmpnull ( ao -> op , ""mul"" )"	6342:8:135072:135098	2657125	0	True				
ANR	2659071	UnaryOperationExpression	"! strcmpnull ( ao -> op , ""mul"" )"		2657125	0					
ANR	2659072	UnaryOperator	!		2657125	0					
ANR	2659073	CallExpression	"strcmpnull ( ao -> op , ""mul"" )"		2657125	1					
ANR	2659074	Callee	strcmpnull		2657125	0					
ANR	2659075	Identifier	strcmpnull		2657125	0					
ANR	2659076	ArgumentList	ao -> op		2657125	1					
ANR	2659077	Argument	ao -> op		2657125	0					
ANR	2659078	PtrMemberAccess	ao -> op		2657125	0					
ANR	2659079	Identifier	ao		2657125	0					
ANR	2659080	Identifier	op		2657125	1					
ANR	2659081	Argument	"""mul"""		2657125	1					
ANR	2659082	PrimaryExpression	"""mul"""		2657125	0					
ANR	2659083	CompoundStatement		269:37:6506:6506	2657125	1					
ANR	2659084	ExpressionStatement	ret = getreg ( ao -> a [ 0 ] )	6343:5:135108:135131	2657125	0	True				
ANR	2659085	AssignmentExpression	ret = getreg ( ao -> a [ 0 ] )		2657125	0		=			
ANR	2659086	Identifier	ret		2657125	0					
ANR	2659087	CallExpression	getreg ( ao -> a [ 0 ] )		2657125	1					
ANR	2659088	Callee	getreg		2657125	0					
ANR	2659089	Identifier	getreg		2657125	0					
ANR	2659090	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2659091	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2659092	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2659093	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659094	Identifier	ao		2657125	0					
ANR	2659095	Identifier	a		2657125	1					
ANR	2659096	PrimaryExpression	0		2657125	1					
ANR	2659097	ExpressionStatement	a = getreg ( ao -> a [ 1 ] )	6344:5:135138:135159	2657125	1	True				
ANR	2659098	AssignmentExpression	a = getreg ( ao -> a [ 1 ] )		2657125	0		=			
ANR	2659099	Identifier	a		2657125	0					
ANR	2659100	CallExpression	getreg ( ao -> a [ 1 ] )		2657125	1					
ANR	2659101	Callee	getreg		2657125	0					
ANR	2659102	Identifier	getreg		2657125	0					
ANR	2659103	ArgumentList	ao -> a [ 1 ]		2657125	1					
ANR	2659104	Argument	ao -> a [ 1 ]		2657125	0					
ANR	2659105	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2659106	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659107	Identifier	ao		2657125	0					
ANR	2659108	Identifier	a		2657125	1					
ANR	2659109	PrimaryExpression	1		2657125	1					
ANR	2659110	ExpressionStatement	b = getreg ( ao -> a [ 2 ] )	6345:5:135166:135187	2657125	2	True				
ANR	2659111	AssignmentExpression	b = getreg ( ao -> a [ 2 ] )		2657125	0		=			
ANR	2659112	Identifier	b		2657125	0					
ANR	2659113	CallExpression	getreg ( ao -> a [ 2 ] )		2657125	1					
ANR	2659114	Callee	getreg		2657125	0					
ANR	2659115	Identifier	getreg		2657125	0					
ANR	2659116	ArgumentList	ao -> a [ 2 ]		2657125	1					
ANR	2659117	Argument	ao -> a [ 2 ]		2657125	0					
ANR	2659118	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2659119	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659120	Identifier	ao		2657125	0					
ANR	2659121	Identifier	a		2657125	1					
ANR	2659122	PrimaryExpression	2		2657125	1					
ANR	2659123	IfStatement	if ( b == - 1 )		2657125	3					
ANR	2659124	Condition	b == - 1	6346:9:135198:135204	2657125	0	True				
ANR	2659125	EqualityExpression	b == - 1		2657125	0		==			
ANR	2659126	Identifier	b		2657125	0					
ANR	2659127	UnaryOperationExpression	- 1		2657125	1					
ANR	2659128	UnaryOperator	-		2657125	0					
ANR	2659129	PrimaryExpression	1		2657125	1					
ANR	2659130	CompoundStatement		273:18:6612:6612	2657125	1					
ANR	2659131	ExpressionStatement	b = a	6347:6:135215:135220	2657125	0	True				
ANR	2659132	AssignmentExpression	b = a		2657125	0		=			
ANR	2659133	Identifier	b		2657125	0					
ANR	2659134	Identifier	a		2657125	1					
ANR	2659135	ExpressionStatement	a = ret	6348:6:135228:135235	2657125	1	True				
ANR	2659136	AssignmentExpression	a = ret		2657125	0		=			
ANR	2659137	Identifier	a		2657125	0					
ANR	2659138	Identifier	ret		2657125	1					
ANR	2659139	IfStatement	if ( ret == - 1 || a == - 1 )		2657125	4					
ANR	2659140	Condition	ret == - 1 || a == - 1	6350:9:135253:135272	2657125	0	True				
ANR	2659141	OrExpression	ret == - 1 || a == - 1		2657125	0		||			
ANR	2659142	EqualityExpression	ret == - 1		2657125	0		==			
ANR	2659143	Identifier	ret		2657125	0					
ANR	2659144	UnaryOperationExpression	- 1		2657125	1					
ANR	2659145	UnaryOperator	-		2657125	0					
ANR	2659146	PrimaryExpression	1		2657125	1					
ANR	2659147	EqualityExpression	a == - 1		2657125	1		==			
ANR	2659148	Identifier	a		2657125	0					
ANR	2659149	UnaryOperationExpression	- 1		2657125	1					
ANR	2659150	UnaryOperator	-		2657125	0					
ANR	2659151	PrimaryExpression	1		2657125	1					
ANR	2659152	CompoundStatement		277:31:6680:6680	2657125	1					
ANR	2659153	ReturnStatement	return 0 ;	6351:6:135283:135291	2657125	0	True				
ANR	2659154	PrimaryExpression	0		2657125	0					
ANR	2659155	ExpressionStatement	ao -> o |= ret << 8	6353:5:135305:135322	2657125	5	True				
ANR	2659156	AssignmentExpression	ao -> o |= ret << 8		2657125	0		|=			
ANR	2659157	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659158	Identifier	ao		2657125	0					
ANR	2659159	Identifier	o		2657125	1					
ANR	2659160	ShiftExpression	ret << 8		2657125	1		<<			
ANR	2659161	Identifier	ret		2657125	0					
ANR	2659162	PrimaryExpression	8		2657125	1					
ANR	2659163	ExpressionStatement	ao -> o |= a << 24	6354:5:135329:135345	2657125	6	True				
ANR	2659164	AssignmentExpression	ao -> o |= a << 24		2657125	0		|=			
ANR	2659165	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659166	Identifier	ao		2657125	0					
ANR	2659167	Identifier	o		2657125	1					
ANR	2659168	ShiftExpression	a << 24		2657125	1		<<			
ANR	2659169	Identifier	a		2657125	0					
ANR	2659170	PrimaryExpression	24		2657125	1					
ANR	2659171	ExpressionStatement	ao -> o |= b << 16	6355:5:135352:135368	2657125	7	True				
ANR	2659172	AssignmentExpression	ao -> o |= b << 16		2657125	0		|=			
ANR	2659173	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659174	Identifier	ao		2657125	0					
ANR	2659175	Identifier	o		2657125	1					
ANR	2659176	ShiftExpression	b << 16		2657125	1		<<			
ANR	2659177	Identifier	b		2657125	0					
ANR	2659178	PrimaryExpression	16		2657125	1					
ANR	2659179	ElseStatement	else		2657125	0					
ANR	2659180	CompoundStatement		283:11:6786:6786	2657125	0					
ANR	2659181	ExpressionStatement	low = getreg ( ao -> a [ 0 ] )	6357:5:135388:135411	2657125	0	True				
ANR	2659182	AssignmentExpression	low = getreg ( ao -> a [ 0 ] )		2657125	0		=			
ANR	2659183	Identifier	low		2657125	0					
ANR	2659184	CallExpression	getreg ( ao -> a [ 0 ] )		2657125	1					
ANR	2659185	Callee	getreg		2657125	0					
ANR	2659186	Identifier	getreg		2657125	0					
ANR	2659187	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2659188	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2659189	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2659190	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659191	Identifier	ao		2657125	0					
ANR	2659192	Identifier	a		2657125	1					
ANR	2659193	PrimaryExpression	0		2657125	1					
ANR	2659194	ExpressionStatement	high = getreg ( ao -> a [ 1 ] )	6358:5:135418:135442	2657125	1	True				
ANR	2659195	AssignmentExpression	high = getreg ( ao -> a [ 1 ] )		2657125	0		=			
ANR	2659196	Identifier	high		2657125	0					
ANR	2659197	CallExpression	getreg ( ao -> a [ 1 ] )		2657125	1					
ANR	2659198	Callee	getreg		2657125	0					
ANR	2659199	Identifier	getreg		2657125	0					
ANR	2659200	ArgumentList	ao -> a [ 1 ]		2657125	1					
ANR	2659201	Argument	ao -> a [ 1 ]		2657125	0					
ANR	2659202	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2659203	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659204	Identifier	ao		2657125	0					
ANR	2659205	Identifier	a		2657125	1					
ANR	2659206	PrimaryExpression	1		2657125	1					
ANR	2659207	ExpressionStatement	a = getreg ( ao -> a [ 2 ] )	6359:5:135449:135470	2657125	2	True				
ANR	2659208	AssignmentExpression	a = getreg ( ao -> a [ 2 ] )		2657125	0		=			
ANR	2659209	Identifier	a		2657125	0					
ANR	2659210	CallExpression	getreg ( ao -> a [ 2 ] )		2657125	1					
ANR	2659211	Callee	getreg		2657125	0					
ANR	2659212	Identifier	getreg		2657125	0					
ANR	2659213	ArgumentList	ao -> a [ 2 ]		2657125	1					
ANR	2659214	Argument	ao -> a [ 2 ]		2657125	0					
ANR	2659215	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2659216	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659217	Identifier	ao		2657125	0					
ANR	2659218	Identifier	a		2657125	1					
ANR	2659219	PrimaryExpression	2		2657125	1					
ANR	2659220	ExpressionStatement	b = getreg ( ao -> a [ 3 ] )	6360:5:135477:135498	2657125	3	True				
ANR	2659221	AssignmentExpression	b = getreg ( ao -> a [ 3 ] )		2657125	0		=			
ANR	2659222	Identifier	b		2657125	0					
ANR	2659223	CallExpression	getreg ( ao -> a [ 3 ] )		2657125	1					
ANR	2659224	Callee	getreg		2657125	0					
ANR	2659225	Identifier	getreg		2657125	0					
ANR	2659226	ArgumentList	ao -> a [ 3 ]		2657125	1					
ANR	2659227	Argument	ao -> a [ 3 ]		2657125	0					
ANR	2659228	ArrayIndexing	ao -> a [ 3 ]		2657125	0					
ANR	2659229	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659230	Identifier	ao		2657125	0					
ANR	2659231	Identifier	a		2657125	1					
ANR	2659232	PrimaryExpression	3		2657125	1					
ANR	2659233	IfStatement	if ( low == - 1 || high == - 1 || a == - 1 || b == - 1 )		2657125	4					
ANR	2659234	Condition	low == - 1 || high == - 1 || a == - 1 || b == - 1	6361:9:135509:135553	2657125	0	True				
ANR	2659235	OrExpression	low == - 1 || high == - 1 || a == - 1 || b == - 1		2657125	0		||			
ANR	2659236	EqualityExpression	low == - 1		2657125	0		==			
ANR	2659237	Identifier	low		2657125	0					
ANR	2659238	UnaryOperationExpression	- 1		2657125	1					
ANR	2659239	UnaryOperator	-		2657125	0					
ANR	2659240	PrimaryExpression	1		2657125	1					
ANR	2659241	OrExpression	high == - 1 || a == - 1 || b == - 1		2657125	1		||			
ANR	2659242	EqualityExpression	high == - 1		2657125	0		==			
ANR	2659243	Identifier	high		2657125	0					
ANR	2659244	UnaryOperationExpression	- 1		2657125	1					
ANR	2659245	UnaryOperator	-		2657125	0					
ANR	2659246	PrimaryExpression	1		2657125	1					
ANR	2659247	OrExpression	a == - 1 || b == - 1		2657125	1		||			
ANR	2659248	EqualityExpression	a == - 1		2657125	0		==			
ANR	2659249	Identifier	a		2657125	0					
ANR	2659250	UnaryOperationExpression	- 1		2657125	1					
ANR	2659251	UnaryOperator	-		2657125	0					
ANR	2659252	PrimaryExpression	1		2657125	1					
ANR	2659253	EqualityExpression	b == - 1		2657125	1		==			
ANR	2659254	Identifier	b		2657125	0					
ANR	2659255	UnaryOperationExpression	- 1		2657125	1					
ANR	2659256	UnaryOperator	-		2657125	0					
ANR	2659257	PrimaryExpression	1		2657125	1					
ANR	2659258	CompoundStatement		288:56:6961:6961	2657125	1					
ANR	2659259	ReturnStatement	return 0 ;	6362:6:135564:135572	2657125	0	True				
ANR	2659260	PrimaryExpression	0		2657125	0					
ANR	2659261	IfStatement	"if ( ! strcmpnull ( ao -> op , ""smlal"" ) )"		2657125	5					
ANR	2659262	Condition	"! strcmpnull ( ao -> op , ""smlal"" )"	6364:9:135590:135618	2657125	0	True				
ANR	2659263	UnaryOperationExpression	"! strcmpnull ( ao -> op , ""smlal"" )"		2657125	0					
ANR	2659264	UnaryOperator	!		2657125	0					
ANR	2659265	CallExpression	"strcmpnull ( ao -> op , ""smlal"" )"		2657125	1					
ANR	2659266	Callee	strcmpnull		2657125	0					
ANR	2659267	Identifier	strcmpnull		2657125	0					
ANR	2659268	ArgumentList	ao -> op		2657125	1					
ANR	2659269	Argument	ao -> op		2657125	0					
ANR	2659270	PtrMemberAccess	ao -> op		2657125	0					
ANR	2659271	Identifier	ao		2657125	0					
ANR	2659272	Identifier	op		2657125	1					
ANR	2659273	Argument	"""smlal"""		2657125	1					
ANR	2659274	PrimaryExpression	"""smlal"""		2657125	0					
ANR	2659275	CompoundStatement		291:40:7026:7026	2657125	1					
ANR	2659276	ExpressionStatement	ao -> o |= low << 20	6365:6:135629:135647	2657125	0	True				
ANR	2659277	AssignmentExpression	ao -> o |= low << 20		2657125	0		|=			
ANR	2659278	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659279	Identifier	ao		2657125	0					
ANR	2659280	Identifier	o		2657125	1					
ANR	2659281	ShiftExpression	low << 20		2657125	1		<<			
ANR	2659282	Identifier	low		2657125	0					
ANR	2659283	PrimaryExpression	20		2657125	1					
ANR	2659284	ExpressionStatement	ao -> o |= high << 8	6366:6:135655:135673	2657125	1	True				
ANR	2659285	AssignmentExpression	ao -> o |= high << 8		2657125	0		|=			
ANR	2659286	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659287	Identifier	ao		2657125	0					
ANR	2659288	Identifier	o		2657125	1					
ANR	2659289	ShiftExpression	high << 8		2657125	1		<<			
ANR	2659290	Identifier	high		2657125	0					
ANR	2659291	PrimaryExpression	8		2657125	1					
ANR	2659292	ExpressionStatement	ao -> o |= a << 24	6367:6:135681:135697	2657125	2	True				
ANR	2659293	AssignmentExpression	ao -> o |= a << 24		2657125	0		|=			
ANR	2659294	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659295	Identifier	ao		2657125	0					
ANR	2659296	Identifier	o		2657125	1					
ANR	2659297	ShiftExpression	a << 24		2657125	1		<<			
ANR	2659298	Identifier	a		2657125	0					
ANR	2659299	PrimaryExpression	24		2657125	1					
ANR	2659300	ExpressionStatement	ao -> o |= b << 16	6368:6:135705:135721	2657125	3	True				
ANR	2659301	AssignmentExpression	ao -> o |= b << 16		2657125	0		|=			
ANR	2659302	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659303	Identifier	ao		2657125	0					
ANR	2659304	Identifier	o		2657125	1					
ANR	2659305	ShiftExpression	b << 16		2657125	1		<<			
ANR	2659306	Identifier	b		2657125	0					
ANR	2659307	PrimaryExpression	16		2657125	1					
ANR	2659308	ElseStatement	else		2657125	0					
ANR	2659309	IfStatement	"if ( ! strncmp ( ao -> op , ""smla"" , 4 ) )"		2657125	0					
ANR	2659310	Condition	"! strncmp ( ao -> op , ""smla"" , 4 )"	6369:16:135739:135766	2657125	0	True				
ANR	2659311	UnaryOperationExpression	"! strncmp ( ao -> op , ""smla"" , 4 )"		2657125	0					
ANR	2659312	UnaryOperator	!		2657125	0					
ANR	2659313	CallExpression	"strncmp ( ao -> op , ""smla"" , 4 )"		2657125	1					
ANR	2659314	Callee	strncmp		2657125	0					
ANR	2659315	Identifier	strncmp		2657125	0					
ANR	2659316	ArgumentList	ao -> op		2657125	1					
ANR	2659317	Argument	ao -> op		2657125	0					
ANR	2659318	PtrMemberAccess	ao -> op		2657125	0					
ANR	2659319	Identifier	ao		2657125	0					
ANR	2659320	Identifier	op		2657125	1					
ANR	2659321	Argument	"""smla"""		2657125	1					
ANR	2659322	PrimaryExpression	"""smla"""		2657125	0					
ANR	2659323	Argument	4		2657125	2					
ANR	2659324	PrimaryExpression	4		2657125	0					
ANR	2659325	CompoundStatement		296:46:7174:7174	2657125	1					
ANR	2659326	IfStatement	if ( low > 14 || high > 14 || a > 14 )		2657125	0					
ANR	2659327	Condition	low > 14 || high > 14 || a > 14	6370:10:135781:135811	2657125	0	True				
ANR	2659328	OrExpression	low > 14 || high > 14 || a > 14		2657125	0		||			
ANR	2659329	RelationalExpression	low > 14		2657125	0		>			
ANR	2659330	Identifier	low		2657125	0					
ANR	2659331	PrimaryExpression	14		2657125	1					
ANR	2659332	OrExpression	high > 14 || a > 14		2657125	1		||			
ANR	2659333	RelationalExpression	high > 14		2657125	0		>			
ANR	2659334	Identifier	high		2657125	0					
ANR	2659335	PrimaryExpression	14		2657125	1					
ANR	2659336	RelationalExpression	a > 14		2657125	1		>			
ANR	2659337	Identifier	a		2657125	0					
ANR	2659338	PrimaryExpression	14		2657125	1					
ANR	2659339	CompoundStatement		297:43:7219:7219	2657125	1					
ANR	2659340	ReturnStatement	return 0 ;	6371:7:135823:135831	2657125	0	True				
ANR	2659341	PrimaryExpression	0		2657125	0					
ANR	2659342	ExpressionStatement	ao -> o |= low << 8	6373:6:135847:135864	2657125	1	True				
ANR	2659343	AssignmentExpression	ao -> o |= low << 8		2657125	0		|=			
ANR	2659344	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659345	Identifier	ao		2657125	0					
ANR	2659346	Identifier	o		2657125	1					
ANR	2659347	ShiftExpression	low << 8		2657125	1		<<			
ANR	2659348	Identifier	low		2657125	0					
ANR	2659349	PrimaryExpression	8		2657125	1					
ANR	2659350	ExpressionStatement	ao -> o |= high << 24	6374:6:135872:135891	2657125	2	True				
ANR	2659351	AssignmentExpression	ao -> o |= high << 24		2657125	0		|=			
ANR	2659352	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659353	Identifier	ao		2657125	0					
ANR	2659354	Identifier	o		2657125	1					
ANR	2659355	ShiftExpression	high << 24		2657125	1		<<			
ANR	2659356	Identifier	high		2657125	0					
ANR	2659357	PrimaryExpression	24		2657125	1					
ANR	2659358	ExpressionStatement	ao -> o |= a << 16	6375:6:135899:135915	2657125	3	True				
ANR	2659359	AssignmentExpression	ao -> o |= a << 16		2657125	0		|=			
ANR	2659360	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659361	Identifier	ao		2657125	0					
ANR	2659362	Identifier	o		2657125	1					
ANR	2659363	ShiftExpression	a << 16		2657125	1		<<			
ANR	2659364	Identifier	a		2657125	0					
ANR	2659365	PrimaryExpression	16		2657125	1					
ANR	2659366	ExpressionStatement	ao -> o |= b << 20	6376:6:135923:135939	2657125	4	True				
ANR	2659367	AssignmentExpression	ao -> o |= b << 20		2657125	0		|=			
ANR	2659368	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659369	Identifier	ao		2657125	0					
ANR	2659370	Identifier	o		2657125	1					
ANR	2659371	ShiftExpression	b << 20		2657125	1		<<			
ANR	2659372	Identifier	b		2657125	0					
ANR	2659373	PrimaryExpression	20		2657125	1					
ANR	2659374	BreakStatement	break ;	6377:6:135947:135952	2657125	5	True				
ANR	2659375	ElseStatement	else		2657125	0					
ANR	2659376	CompoundStatement		305:12:7371:7371	2657125	0					
ANR	2659377	ExpressionStatement	ao -> o |= low << 20	6379:6:135974:135992	2657125	0	True				
ANR	2659378	AssignmentExpression	ao -> o |= low << 20		2657125	0		|=			
ANR	2659379	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659380	Identifier	ao		2657125	0					
ANR	2659381	Identifier	o		2657125	1					
ANR	2659382	ShiftExpression	low << 20		2657125	1		<<			
ANR	2659383	Identifier	low		2657125	0					
ANR	2659384	PrimaryExpression	20		2657125	1					
ANR	2659385	ExpressionStatement	ao -> o |= high << 8	6380:6:136000:136018	2657125	1	True				
ANR	2659386	AssignmentExpression	ao -> o |= high << 8		2657125	0		|=			
ANR	2659387	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659388	Identifier	ao		2657125	0					
ANR	2659389	Identifier	o		2657125	1					
ANR	2659390	ShiftExpression	high << 8		2657125	1		<<			
ANR	2659391	Identifier	high		2657125	0					
ANR	2659392	PrimaryExpression	8		2657125	1					
ANR	2659393	ExpressionStatement	ao -> o |= a << 24	6381:6:136026:136042	2657125	2	True				
ANR	2659394	AssignmentExpression	ao -> o |= a << 24		2657125	0		|=			
ANR	2659395	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659396	Identifier	ao		2657125	0					
ANR	2659397	Identifier	o		2657125	1					
ANR	2659398	ShiftExpression	a << 24		2657125	1		<<			
ANR	2659399	Identifier	a		2657125	0					
ANR	2659400	PrimaryExpression	24		2657125	1					
ANR	2659401	ExpressionStatement	ao -> o |= b << 16	6382:6:136050:136066	2657125	3	True				
ANR	2659402	AssignmentExpression	ao -> o |= b << 16		2657125	0		|=			
ANR	2659403	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659404	Identifier	ao		2657125	0					
ANR	2659405	Identifier	o		2657125	1					
ANR	2659406	ShiftExpression	b << 16		2657125	1		<<			
ANR	2659407	Identifier	b		2657125	0					
ANR	2659408	PrimaryExpression	16		2657125	1					
ANR	2659409	BreakStatement	break ;	6385:4:136085:136090	2657125	73	True				
ANR	2659410	Label	case TYPE_TST :	6386:3:136095:136108	2657125	74	True				
ANR	2659411	Identifier	TYPE_TST		2657125	0					
ANR	2659412	ExpressionStatement	a = getreg ( ao -> a [ 0 ] )	6387:4:136114:136135	2657125	75	True				
ANR	2659413	AssignmentExpression	a = getreg ( ao -> a [ 0 ] )		2657125	0		=			
ANR	2659414	Identifier	a		2657125	0					
ANR	2659415	CallExpression	getreg ( ao -> a [ 0 ] )		2657125	1					
ANR	2659416	Callee	getreg		2657125	0					
ANR	2659417	Identifier	getreg		2657125	0					
ANR	2659418	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2659419	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2659420	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2659421	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659422	Identifier	ao		2657125	0					
ANR	2659423	Identifier	a		2657125	1					
ANR	2659424	PrimaryExpression	0		2657125	1					
ANR	2659425	ExpressionStatement	b = getreg ( ao -> a [ 1 ] )	6388:4:136141:136162	2657125	76	True				
ANR	2659426	AssignmentExpression	b = getreg ( ao -> a [ 1 ] )		2657125	0		=			
ANR	2659427	Identifier	b		2657125	0					
ANR	2659428	CallExpression	getreg ( ao -> a [ 1 ] )		2657125	1					
ANR	2659429	Callee	getreg		2657125	0					
ANR	2659430	Identifier	getreg		2657125	0					
ANR	2659431	ArgumentList	ao -> a [ 1 ]		2657125	1					
ANR	2659432	Argument	ao -> a [ 1 ]		2657125	0					
ANR	2659433	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2659434	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659435	Identifier	ao		2657125	0					
ANR	2659436	Identifier	a		2657125	1					
ANR	2659437	PrimaryExpression	1		2657125	1					
ANR	2659438	IfStatement	if ( b == - 1 )		2657125	77					
ANR	2659439	Condition	b == - 1	6389:8:136172:136178	2657125	0	True				
ANR	2659440	EqualityExpression	b == - 1		2657125	0		==			
ANR	2659441	Identifier	b		2657125	0					
ANR	2659442	UnaryOperationExpression	- 1		2657125	1					
ANR	2659443	UnaryOperator	-		2657125	0					
ANR	2659444	PrimaryExpression	1		2657125	1					
ANR	2659445	CompoundStatement		317:5:7593:7601	2657125	1					
ANR	2659446	IdentifierDeclStatement	"int y , z ;"	6390:5:136188:136196	2657125	0	True				
ANR	2659447	IdentifierDecl	y		2657125	0					
ANR	2659448	IdentifierDeclType	int		2657125	0					
ANR	2659449	Identifier	y		2657125	1					
ANR	2659450	IdentifierDecl	z		2657125	1					
ANR	2659451	IdentifierDeclType	int		2657125	0					
ANR	2659452	Identifier	z		2657125	1					
ANR	2659453	ExpressionStatement	b = getnum ( ao -> a [ 1 ] )	6391:5:136203:136224	2657125	1	True				
ANR	2659454	AssignmentExpression	b = getnum ( ao -> a [ 1 ] )		2657125	0		=			
ANR	2659455	Identifier	b		2657125	0					
ANR	2659456	CallExpression	getnum ( ao -> a [ 1 ] )		2657125	1					
ANR	2659457	Callee	getnum		2657125	0					
ANR	2659458	Identifier	getnum		2657125	0					
ANR	2659459	ArgumentList	ao -> a [ 1 ]		2657125	1					
ANR	2659460	Argument	ao -> a [ 1 ]		2657125	0					
ANR	2659461	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2659462	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659463	Identifier	ao		2657125	0					
ANR	2659464	Identifier	a		2657125	1					
ANR	2659465	PrimaryExpression	1		2657125	1					
ANR	2659466	IfStatement	if ( b >= 0 && b <= 0xff )		2657125	2					
ANR	2659467	Condition	b >= 0 && b <= 0xff	6392:9:136235:136253	2657125	0	True				
ANR	2659468	AndExpression	b >= 0 && b <= 0xff		2657125	0		&&			
ANR	2659469	RelationalExpression	b >= 0		2657125	0		>=			
ANR	2659470	Identifier	b		2657125	0					
ANR	2659471	PrimaryExpression	0		2657125	1					
ANR	2659472	RelationalExpression	b <= 0xff		2657125	1		<=			
ANR	2659473	Identifier	b		2657125	0					
ANR	2659474	PrimaryExpression	0xff		2657125	1					
ANR	2659475	CompoundStatement		319:30:7661:7661	2657125	1					
ANR	2659476	ExpressionStatement	ao -> o = 0x50e3	6393:6:136264:136278	2657125	0	True				
ANR	2659477	AssignmentExpression	ao -> o = 0x50e3		2657125	0		=			
ANR	2659478	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659479	Identifier	ao		2657125	0					
ANR	2659480	Identifier	o		2657125	1					
ANR	2659481	PrimaryExpression	0x50e3		2657125	1					
ANR	2659482	ExpressionStatement	ao -> o |= ( a << 8 )	6395:6:136336:136353	2657125	1	True				
ANR	2659483	AssignmentExpression	ao -> o |= ( a << 8 )		2657125	0		|=			
ANR	2659484	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659485	Identifier	ao		2657125	0					
ANR	2659486	Identifier	o		2657125	1					
ANR	2659487	ShiftExpression	a << 8		2657125	1		<<			
ANR	2659488	Identifier	a		2657125	0					
ANR	2659489	PrimaryExpression	8		2657125	1					
ANR	2659490	ExpressionStatement	ao -> o |= ( ( b & 0xff ) << 24 )	6396:6:136361:136388	2657125	2	True				
ANR	2659491	AssignmentExpression	ao -> o |= ( ( b & 0xff ) << 24 )		2657125	0		|=			
ANR	2659492	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659493	Identifier	ao		2657125	0					
ANR	2659494	Identifier	o		2657125	1					
ANR	2659495	ShiftExpression	( b & 0xff ) << 24		2657125	1		<<			
ANR	2659496	BitAndExpression	b & 0xff		2657125	0		&			
ANR	2659497	Identifier	b		2657125	0					
ANR	2659498	PrimaryExpression	0xff		2657125	1					
ANR	2659499	PrimaryExpression	24		2657125	1					
ANR	2659500	ElseStatement	else		2657125	0					
ANR	2659501	IfStatement	"if ( findyz ( b , & y , & z ) )"		2657125	0					
ANR	2659502	Condition	"findyz ( b , & y , & z )"	6398:9:136411:136428	2657125	0	True				
ANR	2659503	CallExpression	"findyz ( b , & y , & z )"		2657125	0					
ANR	2659504	Callee	findyz		2657125	0					
ANR	2659505	Identifier	findyz		2657125	0					
ANR	2659506	ArgumentList	b		2657125	1					
ANR	2659507	Argument	b		2657125	0					
ANR	2659508	Identifier	b		2657125	0					
ANR	2659509	Argument	& y		2657125	1					
ANR	2659510	UnaryOperationExpression	& y		2657125	0					
ANR	2659511	UnaryOperator	&		2657125	0					
ANR	2659512	Identifier	y		2657125	1					
ANR	2659513	Argument	& z		2657125	2					
ANR	2659514	UnaryOperationExpression	& z		2657125	0					
ANR	2659515	UnaryOperator	&		2657125	0					
ANR	2659516	Identifier	z		2657125	1					
ANR	2659517	CompoundStatement		325:29:7836:7836	2657125	1					
ANR	2659518	ExpressionStatement	ao -> o = 0x50e3	6399:6:136439:136453	2657125	0	True				
ANR	2659519	AssignmentExpression	ao -> o = 0x50e3		2657125	0		=			
ANR	2659520	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659521	Identifier	ao		2657125	0					
ANR	2659522	Identifier	o		2657125	1					
ANR	2659523	PrimaryExpression	0x50e3		2657125	1					
ANR	2659524	ExpressionStatement	ao -> o |= ( y << 24 )	6400:6:136461:136479	2657125	1	True				
ANR	2659525	AssignmentExpression	ao -> o |= ( y << 24 )		2657125	0		|=			
ANR	2659526	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659527	Identifier	ao		2657125	0					
ANR	2659528	Identifier	o		2657125	1					
ANR	2659529	ShiftExpression	y << 24		2657125	1		<<			
ANR	2659530	Identifier	y		2657125	0					
ANR	2659531	PrimaryExpression	24		2657125	1					
ANR	2659532	ExpressionStatement	ao -> o |= ( z << 16 )	6401:6:136487:136505	2657125	2	True				
ANR	2659533	AssignmentExpression	ao -> o |= ( z << 16 )		2657125	0		|=			
ANR	2659534	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659535	Identifier	ao		2657125	0					
ANR	2659536	Identifier	o		2657125	1					
ANR	2659537	ShiftExpression	z << 16		2657125	1		<<			
ANR	2659538	Identifier	z		2657125	0					
ANR	2659539	PrimaryExpression	16		2657125	1					
ANR	2659540	ElseStatement	else		2657125	0					
ANR	2659541	CompoundStatement		329:12:7924:7924	2657125	0					
ANR	2659542	ExpressionStatement	"eprintf ( ""Parameter %d out0x3000a0e1 of range (0-255)\\n"" , ( int ) b )"	6403:6:136527:136592	2657125	0	True				
ANR	2659543	CallExpression	"eprintf ( ""Parameter %d out0x3000a0e1 of range (0-255)\\n"" , ( int ) b )"		2657125	0					
ANR	2659544	Callee	eprintf		2657125	0					
ANR	2659545	Identifier	eprintf		2657125	0					
ANR	2659546	ArgumentList	"""Parameter %d out0x3000a0e1 of range (0-255)\\n"""		2657125	1					
ANR	2659547	Argument	"""Parameter %d out0x3000a0e1 of range (0-255)\\n"""		2657125	0					
ANR	2659548	PrimaryExpression	"""Parameter %d out0x3000a0e1 of range (0-255)\\n"""		2657125	0					
ANR	2659549	Argument	( int ) b		2657125	1					
ANR	2659550	CastExpression	( int ) b		2657125	0					
ANR	2659551	CastTarget	int		2657125	0					
ANR	2659552	Identifier	b		2657125	1					
ANR	2659553	ReturnStatement	return 0 ;	6404:6:136600:136608	2657125	1	True				
ANR	2659554	PrimaryExpression	0		2657125	0					
ANR	2659555	ElseStatement	else		2657125	0					
ANR	2659556	CompoundStatement		333:11:8033:8033	2657125	0					
ANR	2659557	ExpressionStatement	ao -> o |= ( a << 8 )	6407:5:136635:136652	2657125	0	True				
ANR	2659558	AssignmentExpression	ao -> o |= ( a << 8 )		2657125	0		|=			
ANR	2659559	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659560	Identifier	ao		2657125	0					
ANR	2659561	Identifier	o		2657125	1					
ANR	2659562	ShiftExpression	a << 8		2657125	1		<<			
ANR	2659563	Identifier	a		2657125	0					
ANR	2659564	PrimaryExpression	8		2657125	1					
ANR	2659565	ExpressionStatement	ao -> o |= ( b << 24 )	6408:5:136659:136677	2657125	1	True				
ANR	2659566	AssignmentExpression	ao -> o |= ( b << 24 )		2657125	0		|=			
ANR	2659567	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659568	Identifier	ao		2657125	0					
ANR	2659569	Identifier	o		2657125	1					
ANR	2659570	ShiftExpression	b << 24		2657125	1		<<			
ANR	2659571	Identifier	b		2657125	0					
ANR	2659572	PrimaryExpression	24		2657125	1					
ANR	2659573	IfStatement	if ( ao -> a [ 2 ] )		2657125	2					
ANR	2659574	Condition	ao -> a [ 2 ]	6409:9:136688:136695	2657125	0	True				
ANR	2659575	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2659576	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659577	Identifier	ao		2657125	0					
ANR	2659578	Identifier	a		2657125	1					
ANR	2659579	PrimaryExpression	2		2657125	1					
ANR	2659580	CompoundStatement		336:19:8103:8103	2657125	1					
ANR	2659581	ExpressionStatement	ao -> o |= getshift ( ao -> a [ 2 ] )	6410:6:136706:136734	2657125	0	True				
ANR	2659582	AssignmentExpression	ao -> o |= getshift ( ao -> a [ 2 ] )		2657125	0		|=			
ANR	2659583	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659584	Identifier	ao		2657125	0					
ANR	2659585	Identifier	o		2657125	1					
ANR	2659586	CallExpression	getshift ( ao -> a [ 2 ] )		2657125	1					
ANR	2659587	Callee	getshift		2657125	0					
ANR	2659588	Identifier	getshift		2657125	0					
ANR	2659589	ArgumentList	ao -> a [ 2 ]		2657125	1					
ANR	2659590	Argument	ao -> a [ 2 ]		2657125	0					
ANR	2659591	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2659592	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659593	Identifier	ao		2657125	0					
ANR	2659594	Identifier	a		2657125	1					
ANR	2659595	PrimaryExpression	2		2657125	1					
ANR	2659596	IfStatement	if ( ao -> a [ 2 ] )		2657125	78					
ANR	2659597	Condition	ao -> a [ 2 ]	6413:8:136757:136764	2657125	0	True				
ANR	2659598	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2659599	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659600	Identifier	ao		2657125	0					
ANR	2659601	Identifier	a		2657125	1					
ANR	2659602	PrimaryExpression	2		2657125	1					
ANR	2659603	CompoundStatement		341:5:8179:8204	2657125	1					
ANR	2659604	IdentifierDeclStatement	int n = getnum ( ao -> a [ 2 ] ) ;	6414:5:136774:136799	2657125	0	True				
ANR	2659605	IdentifierDecl	n = getnum ( ao -> a [ 2 ] )		2657125	0					
ANR	2659606	IdentifierDeclType	int		2657125	0					
ANR	2659607	Identifier	n		2657125	1					
ANR	2659608	AssignmentExpression	n = getnum ( ao -> a [ 2 ] )		2657125	2		=			
ANR	2659609	Identifier	n		2657125	0					
ANR	2659610	CallExpression	getnum ( ao -> a [ 2 ] )		2657125	1					
ANR	2659611	Callee	getnum		2657125	0					
ANR	2659612	Identifier	getnum		2657125	0					
ANR	2659613	ArgumentList	ao -> a [ 2 ]		2657125	1					
ANR	2659614	Argument	ao -> a [ 2 ]		2657125	0					
ANR	2659615	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2659616	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659617	Identifier	ao		2657125	0					
ANR	2659618	Identifier	a		2657125	1					
ANR	2659619	PrimaryExpression	2		2657125	1					
ANR	2659620	IfStatement	if ( n & 1 )		2657125	1					
ANR	2659621	Condition	n & 1	6415:9:136810:136814	2657125	0	True				
ANR	2659622	BitAndExpression	n & 1		2657125	0		&			
ANR	2659623	Identifier	n		2657125	0					
ANR	2659624	PrimaryExpression	1		2657125	1					
ANR	2659625	CompoundStatement		342:16:8222:8222	2657125	1					
ANR	2659626	ExpressionStatement	"eprintf ( ""Invalid multiplier\\n"" )"	6416:6:136825:136857	2657125	0	True				
ANR	2659627	CallExpression	"eprintf ( ""Invalid multiplier\\n"" )"		2657125	0					
ANR	2659628	Callee	eprintf		2657125	0					
ANR	2659629	Identifier	eprintf		2657125	0					
ANR	2659630	ArgumentList	"""Invalid multiplier\\n"""		2657125	1					
ANR	2659631	Argument	"""Invalid multiplier\\n"""		2657125	0					
ANR	2659632	PrimaryExpression	"""Invalid multiplier\\n"""		2657125	0					
ANR	2659633	ReturnStatement	return 0 ;	6417:6:136865:136873	2657125	1	True				
ANR	2659634	PrimaryExpression	0		2657125	0					
ANR	2659635	ExpressionStatement	ao -> o |= ( n >> 1 ) << 16	6419:5:136887:136910	2657125	2	True				
ANR	2659636	AssignmentExpression	ao -> o |= ( n >> 1 ) << 16		2657125	0		|=			
ANR	2659637	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659638	Identifier	ao		2657125	0					
ANR	2659639	Identifier	o		2657125	1					
ANR	2659640	ShiftExpression	( n >> 1 ) << 16		2657125	1		<<			
ANR	2659641	ShiftExpression	n >> 1		2657125	0		>>			
ANR	2659642	Identifier	n		2657125	0					
ANR	2659643	PrimaryExpression	1		2657125	1					
ANR	2659644	PrimaryExpression	16		2657125	1					
ANR	2659645	BreakStatement	break ;	6421:4:136922:136927	2657125	79	True				
ANR	2659646	Label	case TYPE_SHFT :	6422:3:136932:136946	2657125	80	True				
ANR	2659647	Identifier	TYPE_SHFT		2657125	0					
ANR	2659648	ExpressionStatement	reg = getreg ( ao -> a [ 2 ] )	6423:4:136952:136975	2657125	81	True				
ANR	2659649	AssignmentExpression	reg = getreg ( ao -> a [ 2 ] )		2657125	0		=			
ANR	2659650	Identifier	reg		2657125	0					
ANR	2659651	CallExpression	getreg ( ao -> a [ 2 ] )		2657125	1					
ANR	2659652	Callee	getreg		2657125	0					
ANR	2659653	Identifier	getreg		2657125	0					
ANR	2659654	ArgumentList	ao -> a [ 2 ]		2657125	1					
ANR	2659655	Argument	ao -> a [ 2 ]		2657125	0					
ANR	2659656	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2659657	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659658	Identifier	ao		2657125	0					
ANR	2659659	Identifier	a		2657125	1					
ANR	2659660	PrimaryExpression	2		2657125	1					
ANR	2659661	IfStatement	if ( reg == - 1 || reg > 14 )		2657125	82					
ANR	2659662	Condition	reg == - 1 || reg > 14	6424:8:136985:137005	2657125	0	True				
ANR	2659663	OrExpression	reg == - 1 || reg > 14		2657125	0		||			
ANR	2659664	EqualityExpression	reg == - 1		2657125	0		==			
ANR	2659665	Identifier	reg		2657125	0					
ANR	2659666	UnaryOperationExpression	- 1		2657125	1					
ANR	2659667	UnaryOperator	-		2657125	0					
ANR	2659668	PrimaryExpression	1		2657125	1					
ANR	2659669	RelationalExpression	reg > 14		2657125	1		>			
ANR	2659670	Identifier	reg		2657125	0					
ANR	2659671	PrimaryExpression	14		2657125	1					
ANR	2659672	CompoundStatement		351:31:8413:8413	2657125	1					
ANR	2659673	ReturnStatement	return 0 ;	6425:5:137015:137023	2657125	0	True				
ANR	2659674	PrimaryExpression	0		2657125	0					
ANR	2659675	ExpressionStatement	ao -> o |= reg << 16	6427:4:137035:137053	2657125	83	True				
ANR	2659676	AssignmentExpression	ao -> o |= reg << 16		2657125	0		|=			
ANR	2659677	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659678	Identifier	ao		2657125	0					
ANR	2659679	Identifier	o		2657125	1					
ANR	2659680	ShiftExpression	reg << 16		2657125	1		<<			
ANR	2659681	Identifier	reg		2657125	0					
ANR	2659682	PrimaryExpression	16		2657125	1					
ANR	2659683	ExpressionStatement	reg = getreg ( ao -> a [ 0 ] )	6429:4:137060:137083	2657125	84	True				
ANR	2659684	AssignmentExpression	reg = getreg ( ao -> a [ 0 ] )		2657125	0		=			
ANR	2659685	Identifier	reg		2657125	0					
ANR	2659686	CallExpression	getreg ( ao -> a [ 0 ] )		2657125	1					
ANR	2659687	Callee	getreg		2657125	0					
ANR	2659688	Identifier	getreg		2657125	0					
ANR	2659689	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2659690	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2659691	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2659692	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659693	Identifier	ao		2657125	0					
ANR	2659694	Identifier	a		2657125	1					
ANR	2659695	PrimaryExpression	0		2657125	1					
ANR	2659696	IfStatement	if ( reg == - 1 || reg > 14 )		2657125	85					
ANR	2659697	Condition	reg == - 1 || reg > 14	6430:8:137093:137113	2657125	0	True				
ANR	2659698	OrExpression	reg == - 1 || reg > 14		2657125	0		||			
ANR	2659699	EqualityExpression	reg == - 1		2657125	0		==			
ANR	2659700	Identifier	reg		2657125	0					
ANR	2659701	UnaryOperationExpression	- 1		2657125	1					
ANR	2659702	UnaryOperator	-		2657125	0					
ANR	2659703	PrimaryExpression	1		2657125	1					
ANR	2659704	RelationalExpression	reg > 14		2657125	1		>			
ANR	2659705	Identifier	reg		2657125	0					
ANR	2659706	PrimaryExpression	14		2657125	1					
ANR	2659707	CompoundStatement		357:31:8521:8521	2657125	1					
ANR	2659708	ReturnStatement	return 0 ;	6431:5:137123:137131	2657125	0	True				
ANR	2659709	PrimaryExpression	0		2657125	0					
ANR	2659710	ExpressionStatement	ao -> o |= reg << 20	6433:4:137143:137161	2657125	86	True				
ANR	2659711	AssignmentExpression	ao -> o |= reg << 20		2657125	0		|=			
ANR	2659712	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659713	Identifier	ao		2657125	0					
ANR	2659714	Identifier	o		2657125	1					
ANR	2659715	ShiftExpression	reg << 20		2657125	1		<<			
ANR	2659716	Identifier	reg		2657125	0					
ANR	2659717	PrimaryExpression	20		2657125	1					
ANR	2659718	ExpressionStatement	reg = getreg ( ao -> a [ 1 ] )	6435:4:137168:137191	2657125	87	True				
ANR	2659719	AssignmentExpression	reg = getreg ( ao -> a [ 1 ] )		2657125	0		=			
ANR	2659720	Identifier	reg		2657125	0					
ANR	2659721	CallExpression	getreg ( ao -> a [ 1 ] )		2657125	1					
ANR	2659722	Callee	getreg		2657125	0					
ANR	2659723	Identifier	getreg		2657125	0					
ANR	2659724	ArgumentList	ao -> a [ 1 ]		2657125	1					
ANR	2659725	Argument	ao -> a [ 1 ]		2657125	0					
ANR	2659726	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2659727	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659728	Identifier	ao		2657125	0					
ANR	2659729	Identifier	a		2657125	1					
ANR	2659730	PrimaryExpression	1		2657125	1					
ANR	2659731	IfStatement	if ( reg == - 1 || reg > 14 )		2657125	88					
ANR	2659732	Condition	reg == - 1 || reg > 14	6436:8:137201:137221	2657125	0	True				
ANR	2659733	OrExpression	reg == - 1 || reg > 14		2657125	0		||			
ANR	2659734	EqualityExpression	reg == - 1		2657125	0		==			
ANR	2659735	Identifier	reg		2657125	0					
ANR	2659736	UnaryOperationExpression	- 1		2657125	1					
ANR	2659737	UnaryOperator	-		2657125	0					
ANR	2659738	PrimaryExpression	1		2657125	1					
ANR	2659739	RelationalExpression	reg > 14		2657125	1		>			
ANR	2659740	Identifier	reg		2657125	0					
ANR	2659741	PrimaryExpression	14		2657125	1					
ANR	2659742	CompoundStatement		363:31:8629:8629	2657125	1					
ANR	2659743	ReturnStatement	return 0 ;	6437:5:137231:137239	2657125	0	True				
ANR	2659744	PrimaryExpression	0		2657125	0					
ANR	2659745	ExpressionStatement	ao -> o |= reg << 24	6439:4:137251:137269	2657125	89	True				
ANR	2659746	AssignmentExpression	ao -> o |= reg << 24		2657125	0		|=			
ANR	2659747	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659748	Identifier	ao		2657125	0					
ANR	2659749	Identifier	o		2657125	1					
ANR	2659750	ShiftExpression	reg << 24		2657125	1		<<			
ANR	2659751	Identifier	reg		2657125	0					
ANR	2659752	PrimaryExpression	24		2657125	1					
ANR	2659753	BreakStatement	break ;	6440:4:137275:137280	2657125	90	True				
ANR	2659754	Label	case TYPE_REV :	6441:3:137285:137298	2657125	91	True				
ANR	2659755	Identifier	TYPE_REV		2657125	0					
ANR	2659756	ExpressionStatement	reg = getreg ( ao -> a [ 0 ] )	6442:4:137304:137327	2657125	92	True				
ANR	2659757	AssignmentExpression	reg = getreg ( ao -> a [ 0 ] )		2657125	0		=			
ANR	2659758	Identifier	reg		2657125	0					
ANR	2659759	CallExpression	getreg ( ao -> a [ 0 ] )		2657125	1					
ANR	2659760	Callee	getreg		2657125	0					
ANR	2659761	Identifier	getreg		2657125	0					
ANR	2659762	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2659763	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2659764	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2659765	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659766	Identifier	ao		2657125	0					
ANR	2659767	Identifier	a		2657125	1					
ANR	2659768	PrimaryExpression	0		2657125	1					
ANR	2659769	IfStatement	if ( reg == - 1 || reg > 14 )		2657125	93					
ANR	2659770	Condition	reg == - 1 || reg > 14	6443:8:137337:137357	2657125	0	True				
ANR	2659771	OrExpression	reg == - 1 || reg > 14		2657125	0		||			
ANR	2659772	EqualityExpression	reg == - 1		2657125	0		==			
ANR	2659773	Identifier	reg		2657125	0					
ANR	2659774	UnaryOperationExpression	- 1		2657125	1					
ANR	2659775	UnaryOperator	-		2657125	0					
ANR	2659776	PrimaryExpression	1		2657125	1					
ANR	2659777	RelationalExpression	reg > 14		2657125	1		>			
ANR	2659778	Identifier	reg		2657125	0					
ANR	2659779	PrimaryExpression	14		2657125	1					
ANR	2659780	CompoundStatement		370:31:8765:8765	2657125	1					
ANR	2659781	ReturnStatement	return 0 ;	6444:5:137367:137375	2657125	0	True				
ANR	2659782	PrimaryExpression	0		2657125	0					
ANR	2659783	ExpressionStatement	ao -> o |= reg << 20	6446:4:137387:137405	2657125	94	True				
ANR	2659784	AssignmentExpression	ao -> o |= reg << 20		2657125	0		|=			
ANR	2659785	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659786	Identifier	ao		2657125	0					
ANR	2659787	Identifier	o		2657125	1					
ANR	2659788	ShiftExpression	reg << 20		2657125	1		<<			
ANR	2659789	Identifier	reg		2657125	0					
ANR	2659790	PrimaryExpression	20		2657125	1					
ANR	2659791	ExpressionStatement	reg = getreg ( ao -> a [ 1 ] )	6448:4:137412:137435	2657125	95	True				
ANR	2659792	AssignmentExpression	reg = getreg ( ao -> a [ 1 ] )		2657125	0		=			
ANR	2659793	Identifier	reg		2657125	0					
ANR	2659794	CallExpression	getreg ( ao -> a [ 1 ] )		2657125	1					
ANR	2659795	Callee	getreg		2657125	0					
ANR	2659796	Identifier	getreg		2657125	0					
ANR	2659797	ArgumentList	ao -> a [ 1 ]		2657125	1					
ANR	2659798	Argument	ao -> a [ 1 ]		2657125	0					
ANR	2659799	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2659800	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659801	Identifier	ao		2657125	0					
ANR	2659802	Identifier	a		2657125	1					
ANR	2659803	PrimaryExpression	1		2657125	1					
ANR	2659804	IfStatement	if ( reg == - 1 || reg > 14 )		2657125	96					
ANR	2659805	Condition	reg == - 1 || reg > 14	6449:8:137445:137465	2657125	0	True				
ANR	2659806	OrExpression	reg == - 1 || reg > 14		2657125	0		||			
ANR	2659807	EqualityExpression	reg == - 1		2657125	0		==			
ANR	2659808	Identifier	reg		2657125	0					
ANR	2659809	UnaryOperationExpression	- 1		2657125	1					
ANR	2659810	UnaryOperator	-		2657125	0					
ANR	2659811	PrimaryExpression	1		2657125	1					
ANR	2659812	RelationalExpression	reg > 14		2657125	1		>			
ANR	2659813	Identifier	reg		2657125	0					
ANR	2659814	PrimaryExpression	14		2657125	1					
ANR	2659815	CompoundStatement		376:31:8873:8873	2657125	1					
ANR	2659816	ReturnStatement	return 0 ;	6450:5:137475:137483	2657125	0	True				
ANR	2659817	PrimaryExpression	0		2657125	0					
ANR	2659818	ExpressionStatement	ao -> o |= reg << 24	6452:4:137495:137513	2657125	97	True				
ANR	2659819	AssignmentExpression	ao -> o |= reg << 24		2657125	0		|=			
ANR	2659820	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659821	Identifier	ao		2657125	0					
ANR	2659822	Identifier	o		2657125	1					
ANR	2659823	ShiftExpression	reg << 24		2657125	1		<<			
ANR	2659824	Identifier	reg		2657125	0					
ANR	2659825	PrimaryExpression	24		2657125	1					
ANR	2659826	BreakStatement	break ;	6454:4:137520:137525	2657125	98	True				
ANR	2659827	Label	case TYPE_ENDIAN :	6455:3:137530:137546	2657125	99	True				
ANR	2659828	Identifier	TYPE_ENDIAN		2657125	0					
ANR	2659829	IfStatement	"if ( ! strcmp ( ao -> a [ 0 ] , ""le"" ) )"		2657125	100					
ANR	2659830	Condition	"! strcmp ( ao -> a [ 0 ] , ""le"" )"	6456:8:137556:137579	2657125	0	True				
ANR	2659831	UnaryOperationExpression	"! strcmp ( ao -> a [ 0 ] , ""le"" )"		2657125	0					
ANR	2659832	UnaryOperator	!		2657125	0					
ANR	2659833	CallExpression	"strcmp ( ao -> a [ 0 ] , ""le"" )"		2657125	1					
ANR	2659834	Callee	strcmp		2657125	0					
ANR	2659835	Identifier	strcmp		2657125	0					
ANR	2659836	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2659837	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2659838	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2659839	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659840	Identifier	ao		2657125	0					
ANR	2659841	Identifier	a		2657125	1					
ANR	2659842	PrimaryExpression	0		2657125	1					
ANR	2659843	Argument	"""le"""		2657125	1					
ANR	2659844	PrimaryExpression	"""le"""		2657125	0					
ANR	2659845	CompoundStatement		383:34:8987:8987	2657125	1					
ANR	2659846	ExpressionStatement	ao -> o |= 0	6457:5:137589:137599	2657125	0	True				
ANR	2659847	AssignmentExpression	ao -> o |= 0		2657125	0		|=			
ANR	2659848	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659849	Identifier	ao		2657125	0					
ANR	2659850	Identifier	o		2657125	1					
ANR	2659851	PrimaryExpression	0		2657125	1					
ANR	2659852	ElseStatement	else		2657125	0					
ANR	2659853	IfStatement	"if ( ! strcmp ( ao -> a [ 0 ] , ""be"" ) )"		2657125	0					
ANR	2659854	Condition	"! strcmp ( ao -> a [ 0 ] , ""be"" )"	6458:15:137616:137639	2657125	0	True				
ANR	2659855	UnaryOperationExpression	"! strcmp ( ao -> a [ 0 ] , ""be"" )"		2657125	0					
ANR	2659856	UnaryOperator	!		2657125	0					
ANR	2659857	CallExpression	"strcmp ( ao -> a [ 0 ] , ""be"" )"		2657125	1					
ANR	2659858	Callee	strcmp		2657125	0					
ANR	2659859	Identifier	strcmp		2657125	0					
ANR	2659860	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2659861	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2659862	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2659863	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659864	Identifier	ao		2657125	0					
ANR	2659865	Identifier	a		2657125	1					
ANR	2659866	PrimaryExpression	0		2657125	1					
ANR	2659867	Argument	"""be"""		2657125	1					
ANR	2659868	PrimaryExpression	"""be"""		2657125	0					
ANR	2659869	CompoundStatement		385:41:9047:9047	2657125	1					
ANR	2659870	ExpressionStatement	ao -> o |= 0x20000	6459:5:137649:137665	2657125	0	True				
ANR	2659871	AssignmentExpression	ao -> o |= 0x20000		2657125	0		|=			
ANR	2659872	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659873	Identifier	ao		2657125	0					
ANR	2659874	Identifier	o		2657125	1					
ANR	2659875	PrimaryExpression	0x20000		2657125	1					
ANR	2659876	ElseStatement	else		2657125	0					
ANR	2659877	CompoundStatement		387:11:9083:9083	2657125	0					
ANR	2659878	ReturnStatement	return 0 ;	6461:5:137685:137693	2657125	0	True				
ANR	2659879	PrimaryExpression	0		2657125	0					
ANR	2659880	BreakStatement	break ;	6463:4:137705:137710	2657125	101	True				
ANR	2659881	Label	case TYPE_COPROC :	6464:3:137715:137731	2657125	102	True				
ANR	2659882	Identifier	TYPE_COPROC		2657125	0					
ANR	2659883	IfStatement	if ( ao -> a [ 0 ] )		2657125	103					
ANR	2659884	Condition	ao -> a [ 0 ]	6466:8:137827:137834	2657125	0	True				
ANR	2659885	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2659886	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659887	Identifier	ao		2657125	0					
ANR	2659888	Identifier	a		2657125	1					
ANR	2659889	PrimaryExpression	0		2657125	1					
ANR	2659890	CompoundStatement		393:18:9242:9242	2657125	1					
ANR	2659891	ExpressionStatement	coproc = getnum ( ao -> a [ 0 ] + 1 )	6467:5:137844:137874	2657125	0	True				
ANR	2659892	AssignmentExpression	coproc = getnum ( ao -> a [ 0 ] + 1 )		2657125	0		=			
ANR	2659893	Identifier	coproc		2657125	0					
ANR	2659894	CallExpression	getnum ( ao -> a [ 0 ] + 1 )		2657125	1					
ANR	2659895	Callee	getnum		2657125	0					
ANR	2659896	Identifier	getnum		2657125	0					
ANR	2659897	ArgumentList	ao -> a [ 0 ] + 1		2657125	1					
ANR	2659898	Argument	ao -> a [ 0 ] + 1		2657125	0					
ANR	2659899	AdditiveExpression	ao -> a [ 0 ] + 1		2657125	0		+			
ANR	2659900	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2659901	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659902	Identifier	ao		2657125	0					
ANR	2659903	Identifier	a		2657125	1					
ANR	2659904	PrimaryExpression	0		2657125	1					
ANR	2659905	PrimaryExpression	1		2657125	1					
ANR	2659906	IfStatement	if ( coproc == - 1 || coproc > 9 )		2657125	1					
ANR	2659907	Condition	coproc == - 1 || coproc > 9	6468:9:137885:137910	2657125	0	True				
ANR	2659908	OrExpression	coproc == - 1 || coproc > 9		2657125	0		||			
ANR	2659909	EqualityExpression	coproc == - 1		2657125	0		==			
ANR	2659910	Identifier	coproc		2657125	0					
ANR	2659911	UnaryOperationExpression	- 1		2657125	1					
ANR	2659912	UnaryOperator	-		2657125	0					
ANR	2659913	PrimaryExpression	1		2657125	1					
ANR	2659914	RelationalExpression	coproc > 9		2657125	1		>			
ANR	2659915	Identifier	coproc		2657125	0					
ANR	2659916	PrimaryExpression	9		2657125	1					
ANR	2659917	CompoundStatement		395:37:9318:9318	2657125	1					
ANR	2659918	ReturnStatement	return 0 ;	6469:6:137921:137929	2657125	0	True				
ANR	2659919	PrimaryExpression	0		2657125	0					
ANR	2659920	ExpressionStatement	ao -> o |= coproc << 16	6471:5:137943:137964	2657125	2	True				
ANR	2659921	AssignmentExpression	ao -> o |= coproc << 16		2657125	0		|=			
ANR	2659922	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659923	Identifier	ao		2657125	0					
ANR	2659924	Identifier	o		2657125	1					
ANR	2659925	ShiftExpression	coproc << 16		2657125	1		<<			
ANR	2659926	Identifier	coproc		2657125	0					
ANR	2659927	PrimaryExpression	16		2657125	1					
ANR	2659928	ExpressionStatement	opc = getnum ( ao -> a [ 1 ] )	6474:4:137977:138000	2657125	104	True				
ANR	2659929	AssignmentExpression	opc = getnum ( ao -> a [ 1 ] )		2657125	0		=			
ANR	2659930	Identifier	opc		2657125	0					
ANR	2659931	CallExpression	getnum ( ao -> a [ 1 ] )		2657125	1					
ANR	2659932	Callee	getnum		2657125	0					
ANR	2659933	Identifier	getnum		2657125	0					
ANR	2659934	ArgumentList	ao -> a [ 1 ]		2657125	1					
ANR	2659935	Argument	ao -> a [ 1 ]		2657125	0					
ANR	2659936	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2659937	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659938	Identifier	ao		2657125	0					
ANR	2659939	Identifier	a		2657125	1					
ANR	2659940	PrimaryExpression	1		2657125	1					
ANR	2659941	IfStatement	if ( opc == - 1 || opc > 7 )		2657125	105					
ANR	2659942	Condition	opc == - 1 || opc > 7	6475:8:138010:138029	2657125	0	True				
ANR	2659943	OrExpression	opc == - 1 || opc > 7		2657125	0		||			
ANR	2659944	EqualityExpression	opc == - 1		2657125	0		==			
ANR	2659945	Identifier	opc		2657125	0					
ANR	2659946	UnaryOperationExpression	- 1		2657125	1					
ANR	2659947	UnaryOperator	-		2657125	0					
ANR	2659948	PrimaryExpression	1		2657125	1					
ANR	2659949	RelationalExpression	opc > 7		2657125	1		>			
ANR	2659950	Identifier	opc		2657125	0					
ANR	2659951	PrimaryExpression	7		2657125	1					
ANR	2659952	CompoundStatement		402:30:9437:9437	2657125	1					
ANR	2659953	ReturnStatement	return 0 ;	6476:5:138039:138047	2657125	0	True				
ANR	2659954	PrimaryExpression	0		2657125	0					
ANR	2659955	ExpressionStatement	ao -> o |= opc << 13	6478:4:138059:138077	2657125	106	True				
ANR	2659956	AssignmentExpression	ao -> o |= opc << 13		2657125	0		|=			
ANR	2659957	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659958	Identifier	ao		2657125	0					
ANR	2659959	Identifier	o		2657125	1					
ANR	2659960	ShiftExpression	opc << 13		2657125	1		<<			
ANR	2659961	Identifier	opc		2657125	0					
ANR	2659962	PrimaryExpression	13		2657125	1					
ANR	2659963	ExpressionStatement	reg = getreg ( ao -> a [ 2 ] )	6480:4:138084:138107	2657125	107	True				
ANR	2659964	AssignmentExpression	reg = getreg ( ao -> a [ 2 ] )		2657125	0		=			
ANR	2659965	Identifier	reg		2657125	0					
ANR	2659966	CallExpression	getreg ( ao -> a [ 2 ] )		2657125	1					
ANR	2659967	Callee	getreg		2657125	0					
ANR	2659968	Identifier	getreg		2657125	0					
ANR	2659969	ArgumentList	ao -> a [ 2 ]		2657125	1					
ANR	2659970	Argument	ao -> a [ 2 ]		2657125	0					
ANR	2659971	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2659972	PtrMemberAccess	ao -> a		2657125	0					
ANR	2659973	Identifier	ao		2657125	0					
ANR	2659974	Identifier	a		2657125	1					
ANR	2659975	PrimaryExpression	2		2657125	1					
ANR	2659976	IfStatement	if ( reg == - 1 || reg > 14 )		2657125	108					
ANR	2659977	Condition	reg == - 1 || reg > 14	6481:8:138117:138137	2657125	0	True				
ANR	2659978	OrExpression	reg == - 1 || reg > 14		2657125	0		||			
ANR	2659979	EqualityExpression	reg == - 1		2657125	0		==			
ANR	2659980	Identifier	reg		2657125	0					
ANR	2659981	UnaryOperationExpression	- 1		2657125	1					
ANR	2659982	UnaryOperator	-		2657125	0					
ANR	2659983	PrimaryExpression	1		2657125	1					
ANR	2659984	RelationalExpression	reg > 14		2657125	1		>			
ANR	2659985	Identifier	reg		2657125	0					
ANR	2659986	PrimaryExpression	14		2657125	1					
ANR	2659987	CompoundStatement		408:31:9545:9545	2657125	1					
ANR	2659988	ReturnStatement	return 0 ;	6482:5:138147:138155	2657125	0	True				
ANR	2659989	PrimaryExpression	0		2657125	0					
ANR	2659990	ExpressionStatement	ao -> o |= reg << 20	6484:4:138167:138185	2657125	109	True				
ANR	2659991	AssignmentExpression	ao -> o |= reg << 20		2657125	0		|=			
ANR	2659992	PtrMemberAccess	ao -> o		2657125	0					
ANR	2659993	Identifier	ao		2657125	0					
ANR	2659994	Identifier	o		2657125	1					
ANR	2659995	ShiftExpression	reg << 20		2657125	1		<<			
ANR	2659996	Identifier	reg		2657125	0					
ANR	2659997	PrimaryExpression	20		2657125	1					
ANR	2659998	IdentifierDeclStatement	const char * a3 = ao -> a [ 3 ] ;	6487:4:138217:138242	2657125	110	True				
ANR	2659999	IdentifierDecl	* a3 = ao -> a [ 3 ]		2657125	0					
ANR	2660000	IdentifierDeclType	const char *		2657125	0					
ANR	2660001	Identifier	a3		2657125	1					
ANR	2660002	AssignmentExpression	* a3 = ao -> a [ 3 ]		2657125	2		=			
ANR	2660003	Identifier	a3		2657125	0					
ANR	2660004	ArrayIndexing	ao -> a [ 3 ]		2657125	1					
ANR	2660005	PtrMemberAccess	ao -> a		2657125	0					
ANR	2660006	Identifier	ao		2657125	0					
ANR	2660007	Identifier	a		2657125	1					
ANR	2660008	PrimaryExpression	3		2657125	1					
ANR	2660009	IfStatement	if ( a3 )		2657125	111					
ANR	2660010	Condition	a3	6488:8:138252:138253	2657125	0	True				
ANR	2660011	Identifier	a3		2657125	0					
ANR	2660012	CompoundStatement		415:12:9661:9661	2657125	1					
ANR	2660013	ExpressionStatement	coproc = getnum ( a3 + 1 )	6489:5:138263:138287	2657125	0	True				
ANR	2660014	AssignmentExpression	coproc = getnum ( a3 + 1 )		2657125	0		=			
ANR	2660015	Identifier	coproc		2657125	0					
ANR	2660016	CallExpression	getnum ( a3 + 1 )		2657125	1					
ANR	2660017	Callee	getnum		2657125	0					
ANR	2660018	Identifier	getnum		2657125	0					
ANR	2660019	ArgumentList	a3 + 1		2657125	1					
ANR	2660020	Argument	a3 + 1		2657125	0					
ANR	2660021	AdditiveExpression	a3 + 1		2657125	0		+			
ANR	2660022	Identifier	a3		2657125	0					
ANR	2660023	PrimaryExpression	1		2657125	1					
ANR	2660024	IfStatement	if ( coproc == - 1 || coproc > 15 )		2657125	1					
ANR	2660025	Condition	coproc == - 1 || coproc > 15	6490:9:138298:138324	2657125	0	True				
ANR	2660026	OrExpression	coproc == - 1 || coproc > 15		2657125	0		||			
ANR	2660027	EqualityExpression	coproc == - 1		2657125	0		==			
ANR	2660028	Identifier	coproc		2657125	0					
ANR	2660029	UnaryOperationExpression	- 1		2657125	1					
ANR	2660030	UnaryOperator	-		2657125	0					
ANR	2660031	PrimaryExpression	1		2657125	1					
ANR	2660032	RelationalExpression	coproc > 15		2657125	1		>			
ANR	2660033	Identifier	coproc		2657125	0					
ANR	2660034	PrimaryExpression	15		2657125	1					
ANR	2660035	CompoundStatement		417:38:9732:9732	2657125	1					
ANR	2660036	ReturnStatement	return 0 ;	6491:6:138335:138343	2657125	0	True				
ANR	2660037	PrimaryExpression	0		2657125	0					
ANR	2660038	ExpressionStatement	ao -> o |= coproc << 8	6493:5:138357:138377	2657125	2	True				
ANR	2660039	AssignmentExpression	ao -> o |= coproc << 8		2657125	0		|=			
ANR	2660040	PtrMemberAccess	ao -> o		2657125	0					
ANR	2660041	Identifier	ao		2657125	0					
ANR	2660042	Identifier	o		2657125	1					
ANR	2660043	ShiftExpression	coproc << 8		2657125	1		<<			
ANR	2660044	Identifier	coproc		2657125	0					
ANR	2660045	PrimaryExpression	8		2657125	1					
ANR	2660046	IdentifierDeclStatement	const char * a4 = ao -> a [ 4 ] ;	6496:4:138390:138415	2657125	112	True				
ANR	2660047	IdentifierDecl	* a4 = ao -> a [ 4 ]		2657125	0					
ANR	2660048	IdentifierDeclType	const char *		2657125	0					
ANR	2660049	Identifier	a4		2657125	1					
ANR	2660050	AssignmentExpression	* a4 = ao -> a [ 4 ]		2657125	2		=			
ANR	2660051	Identifier	a4		2657125	0					
ANR	2660052	ArrayIndexing	ao -> a [ 4 ]		2657125	1					
ANR	2660053	PtrMemberAccess	ao -> a		2657125	0					
ANR	2660054	Identifier	ao		2657125	0					
ANR	2660055	Identifier	a		2657125	1					
ANR	2660056	PrimaryExpression	4		2657125	1					
ANR	2660057	IfStatement	if ( a4 )		2657125	113					
ANR	2660058	Condition	a4	6497:8:138425:138426	2657125	0	True				
ANR	2660059	Identifier	a4		2657125	0					
ANR	2660060	CompoundStatement		424:12:9834:9834	2657125	1					
ANR	2660061	ExpressionStatement	coproc = getnum ( ao -> a [ 4 ] + 1 )	6498:5:138436:138466	2657125	0	True				
ANR	2660062	AssignmentExpression	coproc = getnum ( ao -> a [ 4 ] + 1 )		2657125	0		=			
ANR	2660063	Identifier	coproc		2657125	0					
ANR	2660064	CallExpression	getnum ( ao -> a [ 4 ] + 1 )		2657125	1					
ANR	2660065	Callee	getnum		2657125	0					
ANR	2660066	Identifier	getnum		2657125	0					
ANR	2660067	ArgumentList	ao -> a [ 4 ] + 1		2657125	1					
ANR	2660068	Argument	ao -> a [ 4 ] + 1		2657125	0					
ANR	2660069	AdditiveExpression	ao -> a [ 4 ] + 1		2657125	0		+			
ANR	2660070	ArrayIndexing	ao -> a [ 4 ]		2657125	0					
ANR	2660071	PtrMemberAccess	ao -> a		2657125	0					
ANR	2660072	Identifier	ao		2657125	0					
ANR	2660073	Identifier	a		2657125	1					
ANR	2660074	PrimaryExpression	4		2657125	1					
ANR	2660075	PrimaryExpression	1		2657125	1					
ANR	2660076	IfStatement	if ( coproc == - 1 || coproc > 15 )		2657125	1					
ANR	2660077	Condition	coproc == - 1 || coproc > 15	6499:9:138477:138503	2657125	0	True				
ANR	2660078	OrExpression	coproc == - 1 || coproc > 15		2657125	0		||			
ANR	2660079	EqualityExpression	coproc == - 1		2657125	0		==			
ANR	2660080	Identifier	coproc		2657125	0					
ANR	2660081	UnaryOperationExpression	- 1		2657125	1					
ANR	2660082	UnaryOperator	-		2657125	0					
ANR	2660083	PrimaryExpression	1		2657125	1					
ANR	2660084	RelationalExpression	coproc > 15		2657125	1		>			
ANR	2660085	Identifier	coproc		2657125	0					
ANR	2660086	PrimaryExpression	15		2657125	1					
ANR	2660087	CompoundStatement		426:38:9911:9911	2657125	1					
ANR	2660088	ReturnStatement	return 0 ;	6500:6:138514:138522	2657125	0	True				
ANR	2660089	PrimaryExpression	0		2657125	0					
ANR	2660090	ExpressionStatement	ao -> o |= coproc << 24	6502:5:138536:138557	2657125	2	True				
ANR	2660091	AssignmentExpression	ao -> o |= coproc << 24		2657125	0		|=			
ANR	2660092	PtrMemberAccess	ao -> o		2657125	0					
ANR	2660093	Identifier	ao		2657125	0					
ANR	2660094	Identifier	o		2657125	1					
ANR	2660095	ShiftExpression	coproc << 24		2657125	1		<<			
ANR	2660096	Identifier	coproc		2657125	0					
ANR	2660097	PrimaryExpression	24		2657125	1					
ANR	2660098	ExpressionStatement	coproc = getnum ( ao -> a [ 5 ] )	6505:4:138570:138596	2657125	114	True				
ANR	2660099	AssignmentExpression	coproc = getnum ( ao -> a [ 5 ] )		2657125	0		=			
ANR	2660100	Identifier	coproc		2657125	0					
ANR	2660101	CallExpression	getnum ( ao -> a [ 5 ] )		2657125	1					
ANR	2660102	Callee	getnum		2657125	0					
ANR	2660103	Identifier	getnum		2657125	0					
ANR	2660104	ArgumentList	ao -> a [ 5 ]		2657125	1					
ANR	2660105	Argument	ao -> a [ 5 ]		2657125	0					
ANR	2660106	ArrayIndexing	ao -> a [ 5 ]		2657125	0					
ANR	2660107	PtrMemberAccess	ao -> a		2657125	0					
ANR	2660108	Identifier	ao		2657125	0					
ANR	2660109	Identifier	a		2657125	1					
ANR	2660110	PrimaryExpression	5		2657125	1					
ANR	2660111	IfStatement	if ( coproc > - 1 )		2657125	115					
ANR	2660112	Condition	coproc > - 1	6506:8:138606:138616	2657125	0	True				
ANR	2660113	RelationalExpression	coproc > - 1		2657125	0		>			
ANR	2660114	Identifier	coproc		2657125	0					
ANR	2660115	UnaryOperationExpression	- 1		2657125	1					
ANR	2660116	UnaryOperator	-		2657125	0					
ANR	2660117	PrimaryExpression	1		2657125	1					
ANR	2660118	CompoundStatement		433:21:10024:10024	2657125	1					
ANR	2660119	IfStatement	if ( coproc > 7 )		2657125	0					
ANR	2660120	Condition	coproc > 7	6507:9:138630:138639	2657125	0	True				
ANR	2660121	RelationalExpression	coproc > 7		2657125	0		>			
ANR	2660122	Identifier	coproc		2657125	0					
ANR	2660123	PrimaryExpression	7		2657125	1					
ANR	2660124	CompoundStatement		434:21:10047:10047	2657125	1					
ANR	2660125	ReturnStatement	return 0 ;	6508:6:138650:138658	2657125	0	True				
ANR	2660126	PrimaryExpression	0		2657125	0					
ANR	2660127	ExpressionStatement	ao -> o |= coproc << 29	6511:5:138696:138717	2657125	1	True				
ANR	2660128	AssignmentExpression	ao -> o |= coproc << 29		2657125	0		|=			
ANR	2660129	PtrMemberAccess	ao -> o		2657125	0					
ANR	2660130	Identifier	ao		2657125	0					
ANR	2660131	Identifier	o		2657125	1					
ANR	2660132	ShiftExpression	coproc << 29		2657125	1		<<			
ANR	2660133	Identifier	coproc		2657125	0					
ANR	2660134	PrimaryExpression	29		2657125	1					
ANR	2660135	BreakStatement	break ;	6514:4:138730:138735	2657125	116	True				
ANR	2660136	Label	case TYPE_CLZ :	6515:3:138740:138753	2657125	117	True				
ANR	2660137	Identifier	TYPE_CLZ		2657125	0					
ANR	2660138	ExpressionStatement	ao -> o |= 1 << 28	6516:4:138759:138775	2657125	118	True				
ANR	2660139	AssignmentExpression	ao -> o |= 1 << 28		2657125	0		|=			
ANR	2660140	PtrMemberAccess	ao -> o		2657125	0					
ANR	2660141	Identifier	ao		2657125	0					
ANR	2660142	Identifier	o		2657125	1					
ANR	2660143	ShiftExpression	1 << 28		2657125	1		<<			
ANR	2660144	PrimaryExpression	1		2657125	0					
ANR	2660145	PrimaryExpression	28		2657125	1					
ANR	2660146	ExpressionStatement	reg = getreg ( ao -> a [ 0 ] )	6518:4:138782:138805	2657125	119	True				
ANR	2660147	AssignmentExpression	reg = getreg ( ao -> a [ 0 ] )		2657125	0		=			
ANR	2660148	Identifier	reg		2657125	0					
ANR	2660149	CallExpression	getreg ( ao -> a [ 0 ] )		2657125	1					
ANR	2660150	Callee	getreg		2657125	0					
ANR	2660151	Identifier	getreg		2657125	0					
ANR	2660152	ArgumentList	ao -> a [ 0 ]		2657125	1					
ANR	2660153	Argument	ao -> a [ 0 ]		2657125	0					
ANR	2660154	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2660155	PtrMemberAccess	ao -> a		2657125	0					
ANR	2660156	Identifier	ao		2657125	0					
ANR	2660157	Identifier	a		2657125	1					
ANR	2660158	PrimaryExpression	0		2657125	1					
ANR	2660159	IfStatement	if ( reg == - 1 || reg > 14 )		2657125	120					
ANR	2660160	Condition	reg == - 1 || reg > 14	6519:8:138815:138835	2657125	0	True				
ANR	2660161	OrExpression	reg == - 1 || reg > 14		2657125	0		||			
ANR	2660162	EqualityExpression	reg == - 1		2657125	0		==			
ANR	2660163	Identifier	reg		2657125	0					
ANR	2660164	UnaryOperationExpression	- 1		2657125	1					
ANR	2660165	UnaryOperator	-		2657125	0					
ANR	2660166	PrimaryExpression	1		2657125	1					
ANR	2660167	RelationalExpression	reg > 14		2657125	1		>			
ANR	2660168	Identifier	reg		2657125	0					
ANR	2660169	PrimaryExpression	14		2657125	1					
ANR	2660170	CompoundStatement		446:31:10243:10243	2657125	1					
ANR	2660171	ReturnStatement	return 0 ;	6520:5:138845:138853	2657125	0	True				
ANR	2660172	PrimaryExpression	0		2657125	0					
ANR	2660173	ExpressionStatement	ao -> o |= reg << 20	6522:4:138865:138883	2657125	121	True				
ANR	2660174	AssignmentExpression	ao -> o |= reg << 20		2657125	0		|=			
ANR	2660175	PtrMemberAccess	ao -> o		2657125	0					
ANR	2660176	Identifier	ao		2657125	0					
ANR	2660177	Identifier	o		2657125	1					
ANR	2660178	ShiftExpression	reg << 20		2657125	1		<<			
ANR	2660179	Identifier	reg		2657125	0					
ANR	2660180	PrimaryExpression	20		2657125	1					
ANR	2660181	ExpressionStatement	reg = getreg ( ao -> a [ 1 ] )	6524:4:138890:138913	2657125	122	True				
ANR	2660182	AssignmentExpression	reg = getreg ( ao -> a [ 1 ] )		2657125	0		=			
ANR	2660183	Identifier	reg		2657125	0					
ANR	2660184	CallExpression	getreg ( ao -> a [ 1 ] )		2657125	1					
ANR	2660185	Callee	getreg		2657125	0					
ANR	2660186	Identifier	getreg		2657125	0					
ANR	2660187	ArgumentList	ao -> a [ 1 ]		2657125	1					
ANR	2660188	Argument	ao -> a [ 1 ]		2657125	0					
ANR	2660189	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2660190	PtrMemberAccess	ao -> a		2657125	0					
ANR	2660191	Identifier	ao		2657125	0					
ANR	2660192	Identifier	a		2657125	1					
ANR	2660193	PrimaryExpression	1		2657125	1					
ANR	2660194	IfStatement	if ( reg == - 1 || reg > 14 )		2657125	123					
ANR	2660195	Condition	reg == - 1 || reg > 14	6525:8:138923:138943	2657125	0	True				
ANR	2660196	OrExpression	reg == - 1 || reg > 14		2657125	0		||			
ANR	2660197	EqualityExpression	reg == - 1		2657125	0		==			
ANR	2660198	Identifier	reg		2657125	0					
ANR	2660199	UnaryOperationExpression	- 1		2657125	1					
ANR	2660200	UnaryOperator	-		2657125	0					
ANR	2660201	PrimaryExpression	1		2657125	1					
ANR	2660202	RelationalExpression	reg > 14		2657125	1		>			
ANR	2660203	Identifier	reg		2657125	0					
ANR	2660204	PrimaryExpression	14		2657125	1					
ANR	2660205	CompoundStatement		452:31:10351:10351	2657125	1					
ANR	2660206	ReturnStatement	return 0 ;	6526:5:138953:138961	2657125	0	True				
ANR	2660207	PrimaryExpression	0		2657125	0					
ANR	2660208	ExpressionStatement	ao -> o |= reg << 24	6528:4:138973:138991	2657125	124	True				
ANR	2660209	AssignmentExpression	ao -> o |= reg << 24		2657125	0		|=			
ANR	2660210	PtrMemberAccess	ao -> o		2657125	0					
ANR	2660211	Identifier	ao		2657125	0					
ANR	2660212	Identifier	o		2657125	1					
ANR	2660213	ShiftExpression	reg << 24		2657125	1		<<			
ANR	2660214	Identifier	reg		2657125	0					
ANR	2660215	PrimaryExpression	24		2657125	1					
ANR	2660216	BreakStatement	break ;	6530:4:138998:139003	2657125	125	True				
ANR	2660217	Label	case TYPE_NEG :	6531:3:139008:139021	2657125	126	True				
ANR	2660218	Identifier	TYPE_NEG		2657125	0					
ANR	2660219	IfStatement	if ( ! ao -> a [ 0 ] || ! ao -> a [ 1 ] )		2657125	127					
ANR	2660220	Condition	! ao -> a [ 0 ] || ! ao -> a [ 1 ]	6532:8:139031:139052	2657125	0	True				
ANR	2660221	OrExpression	! ao -> a [ 0 ] || ! ao -> a [ 1 ]		2657125	0		||			
ANR	2660222	UnaryOperationExpression	! ao -> a [ 0 ]		2657125	0					
ANR	2660223	UnaryOperator	!		2657125	0					
ANR	2660224	ArrayIndexing	ao -> a [ 0 ]		2657125	1					
ANR	2660225	PtrMemberAccess	ao -> a		2657125	0					
ANR	2660226	Identifier	ao		2657125	0					
ANR	2660227	Identifier	a		2657125	1					
ANR	2660228	PrimaryExpression	0		2657125	1					
ANR	2660229	UnaryOperationExpression	! ao -> a [ 1 ]		2657125	1					
ANR	2660230	UnaryOperator	!		2657125	0					
ANR	2660231	ArrayIndexing	ao -> a [ 1 ]		2657125	1					
ANR	2660232	PtrMemberAccess	ao -> a		2657125	0					
ANR	2660233	Identifier	ao		2657125	0					
ANR	2660234	Identifier	a		2657125	1					
ANR	2660235	PrimaryExpression	1		2657125	1					
ANR	2660236	CompoundStatement		459:32:10460:10460	2657125	1					
ANR	2660237	ReturnStatement	return 0 ;	6533:5:139062:139070	2657125	0	True				
ANR	2660238	PrimaryExpression	0		2657125	0					
ANR	2660239	ExpressionStatement	"ao -> a [ 2 ] = ""0"""	6535:4:139082:139096	2657125	128	True				
ANR	2660240	AssignmentExpression	"ao -> a [ 2 ] = ""0"""		2657125	0		=			
ANR	2660241	ArrayIndexing	ao -> a [ 2 ]		2657125	0					
ANR	2660242	PtrMemberAccess	ao -> a		2657125	0					
ANR	2660243	Identifier	ao		2657125	0					
ANR	2660244	Identifier	a		2657125	1					
ANR	2660245	PrimaryExpression	2		2657125	1					
ANR	2660246	PrimaryExpression	"""0"""		2657125	1					
ANR	2660247	IdentifierDeclStatement	int len = strlen ( ao -> a [ 1 ] ) + 1 ;	6536:4:139102:139133	2657125	129	True				
ANR	2660248	IdentifierDecl	len = strlen ( ao -> a [ 1 ] ) + 1		2657125	0					
ANR	2660249	IdentifierDeclType	int		2657125	0					
ANR	2660250	Identifier	len		2657125	1					
ANR	2660251	AssignmentExpression	len = strlen ( ao -> a [ 1 ] ) + 1		2657125	2		=			
ANR	2660252	Identifier	len		2657125	0					
ANR	2660253	AdditiveExpression	strlen ( ao -> a [ 1 ] ) + 1		2657125	1		+			
ANR	2660254	CallExpression	strlen ( ao -> a [ 1 ] )		2657125	0					
ANR	2660255	Callee	strlen		2657125	0					
ANR	2660256	Identifier	strlen		2657125	0					
ANR	2660257	ArgumentList	ao -> a [ 1 ]		2657125	1					
ANR	2660258	Argument	ao -> a [ 1 ]		2657125	0					
ANR	2660259	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2660260	PtrMemberAccess	ao -> a		2657125	0					
ANR	2660261	Identifier	ao		2657125	0					
ANR	2660262	Identifier	a		2657125	1					
ANR	2660263	PrimaryExpression	1		2657125	1					
ANR	2660264	PrimaryExpression	1		2657125	1					
ANR	2660265	ExpressionStatement	"memmove ( ao -> a [ 0 ] + 1 , ao -> a [ 0 ] , ao -> a [ 1 ] - ao -> a [ 0 ] + len )"	6537:4:139139:139198	2657125	130	True				
ANR	2660266	CallExpression	"memmove ( ao -> a [ 0 ] + 1 , ao -> a [ 0 ] , ao -> a [ 1 ] - ao -> a [ 0 ] + len )"		2657125	0					
ANR	2660267	Callee	memmove		2657125	0					
ANR	2660268	Identifier	memmove		2657125	0					
ANR	2660269	ArgumentList	ao -> a [ 0 ] + 1		2657125	1					
ANR	2660270	Argument	ao -> a [ 0 ] + 1		2657125	0					
ANR	2660271	AdditiveExpression	ao -> a [ 0 ] + 1		2657125	0		+			
ANR	2660272	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2660273	PtrMemberAccess	ao -> a		2657125	0					
ANR	2660274	Identifier	ao		2657125	0					
ANR	2660275	Identifier	a		2657125	1					
ANR	2660276	PrimaryExpression	0		2657125	1					
ANR	2660277	PrimaryExpression	1		2657125	1					
ANR	2660278	Argument	ao -> a [ 0 ]		2657125	1					
ANR	2660279	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2660280	PtrMemberAccess	ao -> a		2657125	0					
ANR	2660281	Identifier	ao		2657125	0					
ANR	2660282	Identifier	a		2657125	1					
ANR	2660283	PrimaryExpression	0		2657125	1					
ANR	2660284	Argument	ao -> a [ 1 ] - ao -> a [ 0 ] + len		2657125	2					
ANR	2660285	AdditiveExpression	ao -> a [ 1 ] - ao -> a [ 0 ] + len		2657125	0		-			
ANR	2660286	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2660287	PtrMemberAccess	ao -> a		2657125	0					
ANR	2660288	Identifier	ao		2657125	0					
ANR	2660289	Identifier	a		2657125	1					
ANR	2660290	PrimaryExpression	1		2657125	1					
ANR	2660291	AdditiveExpression	ao -> a [ 0 ] + len		2657125	1		+			
ANR	2660292	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2660293	PtrMemberAccess	ao -> a		2657125	0					
ANR	2660294	Identifier	ao		2657125	0					
ANR	2660295	Identifier	a		2657125	1					
ANR	2660296	PrimaryExpression	0		2657125	1					
ANR	2660297	Identifier	len		2657125	1					
ANR	2660298	ExpressionStatement	ao -> a [ 0 ] ++	6538:4:139204:139214	2657125	131	True				
ANR	2660299	PostIncDecOperationExpression	ao -> a [ 0 ] ++		2657125	0					
ANR	2660300	ArrayIndexing	ao -> a [ 0 ]		2657125	0					
ANR	2660301	PtrMemberAccess	ao -> a		2657125	0					
ANR	2660302	Identifier	ao		2657125	0					
ANR	2660303	Identifier	a		2657125	1					
ANR	2660304	PrimaryExpression	0		2657125	1					
ANR	2660305	IncDec	++		2657125	1					
ANR	2660306	ExpressionStatement	ao -> a [ 1 ] ++	6539:4:139220:139230	2657125	132	True				
ANR	2660307	PostIncDecOperationExpression	ao -> a [ 1 ] ++		2657125	0					
ANR	2660308	ArrayIndexing	ao -> a [ 1 ]		2657125	0					
ANR	2660309	PtrMemberAccess	ao -> a		2657125	0					
ANR	2660310	Identifier	ao		2657125	0					
ANR	2660311	Identifier	a		2657125	1					
ANR	2660312	PrimaryExpression	1		2657125	1					
ANR	2660313	IncDec	++		2657125	1					
ANR	2660314	ExpressionStatement	"strncpy ( ao -> op , ""rsbs"" , 5 )"	6540:4:139236:139263	2657125	133	True				
ANR	2660315	CallExpression	"strncpy ( ao -> op , ""rsbs"" , 5 )"		2657125	0					
ANR	2660316	Callee	strncpy		2657125	0					
ANR	2660317	Identifier	strncpy		2657125	0					
ANR	2660318	ArgumentList	ao -> op		2657125	1					
ANR	2660319	Argument	ao -> op		2657125	0					
ANR	2660320	PtrMemberAccess	ao -> op		2657125	0					
ANR	2660321	Identifier	ao		2657125	0					
ANR	2660322	Identifier	op		2657125	1					
ANR	2660323	Argument	"""rsbs"""		2657125	1					
ANR	2660324	PrimaryExpression	"""rsbs"""		2657125	0					
ANR	2660325	Argument	5		2657125	2					
ANR	2660326	PrimaryExpression	5		2657125	0					
ANR	2660327	ExpressionStatement	"arm_assemble ( ao , off , str )"	6541:4:139269:139296	2657125	134	True				
ANR	2660328	CallExpression	"arm_assemble ( ao , off , str )"		2657125	0					
ANR	2660329	Callee	arm_assemble		2657125	0					
ANR	2660330	Identifier	arm_assemble		2657125	0					
ANR	2660331	ArgumentList	ao		2657125	1					
ANR	2660332	Argument	ao		2657125	0					
ANR	2660333	Identifier	ao		2657125	0					
ANR	2660334	Argument	off		2657125	1					
ANR	2660335	Identifier	off		2657125	0					
ANR	2660336	Argument	str		2657125	2					
ANR	2660337	Identifier	str		2657125	0					
ANR	2660338	BreakStatement	break ;	6542:4:139325:139330	2657125	135	True				
ANR	2660339	ReturnStatement	return 1 ;	6545:3:139345:139353	2657125	3	True				
ANR	2660340	PrimaryExpression	1		2657125	0					
ANR	2660341	ReturnStatement	return 0 ;	6548:1:139363:139371	2657125	5	True				
ANR	2660342	PrimaryExpression	0		2657125	0					
ANR	2660343	ReturnType	static int		2657125	1					
ANR	2660344	Identifier	arm_assemble		2657125	2					
ANR	2660345	ParameterList	"ArmOpcode * ao , ut64 off , const char * str"		2657125	3					
ANR	2660346	Parameter	ArmOpcode * ao	6074:24:128552:128564	2657125	0	True				
ANR	2660347	ParameterType	ArmOpcode *		2657125	0					
ANR	2660348	Identifier	ao		2657125	1					
ANR	2660349	Parameter	ut64 off	6074:39:128567:128574	2657125	1	True				
ANR	2660350	ParameterType	ut64		2657125	0					
ANR	2660351	Identifier	off		2657125	1					
ANR	2660352	Parameter	const char * str	6074:49:128577:128591	2657125	2	True				
ANR	2660353	ParameterType	const char *		2657125	0					
ANR	2660354	Identifier	str		2657125	1					
ANR	2660355	CFGEntryNode	ENTRY		2657125		True				
ANR	2660356	CFGExitNode	EXIT		2657125		True				
ANR	2660357	Symbol	& z		2657125						
ANR	2660358	Symbol	coproc		2657125						
ANR	2660359	Symbol	ops [ i ] . code		2657125						
ANR	2660360	Symbol	shift		2657125						
ANR	2660361	Symbol	num		2657125						
ANR	2660362	Symbol	strchr		2657125						
ANR	2660363	Symbol	getshift		2657125						
ANR	2660364	Symbol	ao -> o		2657125						
ANR	2660365	Symbol	strlen		2657125						
ANR	2660366	Symbol	strncmp		2657125						
ANR	2660367	Symbol	high		2657125						
ANR	2660368	Symbol	findyz		2657125						
ANR	2660369	Symbol	len		2657125						
ANR	2660370	Symbol	reg		2657125						
ANR	2660371	Symbol	* * ao		2657125						
ANR	2660372	Symbol	bracket		2657125						
ANR	2660373	Symbol	ao -> a		2657125						
ANR	2660374	Symbol	ret		2657125						
ANR	2660375	Symbol	strcmp		2657125						
ANR	2660376	Symbol	* * j		2657125						
ANR	2660377	Symbol	* bracket		2657125						
ANR	2660378	Symbol	opc		2657125						
ANR	2660379	Symbol	rex		2657125						
ANR	2660380	Symbol	ao -> off		2657125						
ANR	2660381	Symbol	ao		2657125						
ANR	2660382	Symbol	str		2657125						
ANR	2660383	Symbol	* ao -> a		2657125						
ANR	2660384	Symbol	* ao -> a [ 0 ] ++		2657125						
ANR	2660385	Symbol	ops		2657125						
ANR	2660386	Symbol	strstr		2657125						
ANR	2660387	Symbol	* ao -> a [ j ]		2657125						
ANR	2660388	Symbol	rn		2657125						
ANR	2660389	Symbol	dst		2657125						
ANR	2660390	Symbol	TYPE_BKP		2657125						
ANR	2660391	Symbol	ops [ i ] . type		2657125						
ANR	2660392	Symbol	strcmpnull		2657125						
ANR	2660393	Symbol	immed		2657125						
ANR	2660394	Symbol	low		2657125						
ANR	2660395	Symbol	* ops		2657125						
ANR	2660396	Symbol	a		2657125						
ANR	2660397	Symbol	b		2657125						
ANR	2660398	Symbol	err		2657125						
ANR	2660399	Symbol	false		2657125						
ANR	2660400	Symbol	i		2657125						
ANR	2660401	Symbol	ao -> op		2657125						
ANR	2660402	Symbol	* * ao -> a		2657125						
ANR	2660403	Symbol	j		2657125						
ANR	2660404	Symbol	* * * ao		2657125						
ANR	2660405	Symbol	off		2657125						
ANR	2660406	Symbol	n		2657125						
ANR	2660407	Symbol	o		2657125						
ANR	2660408	Symbol	a1		2657125						
ANR	2660409	Symbol	a3		2657125						
ANR	2660410	Symbol	* i		2657125						
ANR	2660411	Symbol	a4		2657125						
ANR	2660412	Symbol	* j		2657125						
ANR	2660413	Symbol	getimmed8		2657125						
ANR	2660414	Symbol	getreg		2657125						
ANR	2660415	Symbol	* ao		2657125						
ANR	2660416	Symbol	getnum		2657125						
ANR	2660417	Symbol	ops [ i ] . name		2657125						
ANR	2660418	Symbol	y		2657125						
ANR	2660419	Symbol	z		2657125						
ANR	2660420	Symbol	r0		2657125						
ANR	2660421	Symbol	r1		2657125						
ANR	2660422	Symbol	& y		2657125						
ANR	2660423	DeclStmt									
ANR	2660424	Decl							"int ( * ) ( ArmOpcode * , ut64 , const char * )"	"int ( * ) ( ArmOpcode * , ut64 , const char * )"	AssembleFunction
ANR	2660425	DeclStmt									
ANR	2660426	Decl							AssembleFunction	AssembleFunction [ 2 ]	assemble
ANR	2660427	Function	armass_assemble	6554:0:139517:140017							
ANR	2660428	FunctionDef	"armass_assemble (const char * str , ut64 off , int thumb)"		2660427	0					
ANR	2660429	CompoundStatement		6554:59:139576:140017	2660427	0					
ANR	2660430	IdentifierDeclStatement	"int i , j ;"	6555:1:139579:139587	2660427	0	True				
ANR	2660431	IdentifierDecl	i		2660427	0					
ANR	2660432	IdentifierDeclType	int		2660427	0					
ANR	2660433	Identifier	i		2660427	1					
ANR	2660434	IdentifierDecl	j		2660427	1					
ANR	2660435	IdentifierDeclType	int		2660427	0					
ANR	2660436	Identifier	j		2660427	1					
ANR	2660437	IdentifierDeclStatement	char buf [ 128 ] ;	6556:1:139590:139603	2660427	1	True				
ANR	2660438	IdentifierDecl	buf [ 128 ]		2660427	0					
ANR	2660439	IdentifierDeclType	char [ 128 ]		2660427	0					
ANR	2660440	Identifier	buf		2660427	1					
ANR	2660441	PrimaryExpression	128		2660427	2					
ANR	2660442	Statement	ArmOpcode	6557:1:139606:139614	2660427	2	True				
ANR	2660443	Statement	aop	6557:11:139616:139618	2660427	3	True				
ANR	2660444	Statement	=	6557:15:139620:139620	2660427	4	True				
ANR	2660445	CompoundStatement		4:17:45:45	2660427	5					
ANR	2660446	Statement	.	6557:18:139623:139623	2660427	0	True				
ANR	2660447	Statement	off	6557:19:139624:139626	2660427	1	True				
ANR	2660448	Statement	=	6557:23:139628:139628	2660427	2	True				
ANR	2660449	Statement	off	6557:25:139630:139632	2660427	3	True				
ANR	2660450	ExpressionStatement		6557:29:139634:139634	2660427	6	True				
ANR	2660451	ForStatement	"for ( i = j = 0 ; i < sizeof ( buf ) - 1 && str [ j ] ; i ++ , j ++ )"		2660427	7					
ANR	2660452	ForInit	i = j = 0 ;	6558:6:139642:139651	2660427	0	True				
ANR	2660453	AssignmentExpression	i = j = 0		2660427	0		=			
ANR	2660454	Identifier	i		2660427	0					
ANR	2660455	AssignmentExpression	j = 0		2660427	1		=			
ANR	2660456	Identifier	j		2660427	0					
ANR	2660457	PrimaryExpression	0		2660427	1					
ANR	2660458	Condition	i < sizeof ( buf ) - 1 && str [ j ]	6558:17:139653:139682	2660427	1	True				
ANR	2660459	AndExpression	i < sizeof ( buf ) - 1 && str [ j ]		2660427	0		&&			
ANR	2660460	RelationalExpression	i < sizeof ( buf ) - 1		2660427	0		<			
ANR	2660461	Identifier	i		2660427	0					
ANR	2660462	AdditiveExpression	sizeof ( buf ) - 1		2660427	1		-			
ANR	2660463	SizeofExpression	sizeof ( buf )		2660427	0					
ANR	2660464	Sizeof	sizeof		2660427	0					
ANR	2660465	SizeofOperand	buf		2660427	1					
ANR	2660466	PrimaryExpression	1		2660427	1					
ANR	2660467	ArrayIndexing	str [ j ]		2660427	1					
ANR	2660468	Identifier	str		2660427	0					
ANR	2660469	Identifier	j		2660427	1					
ANR	2660470	Expression	"i ++ , j ++"	6558:49:139685:139692	2660427	2	True				
ANR	2660471	PostIncDecOperationExpression	i ++		2660427	0					
ANR	2660472	Identifier	i		2660427	0					
ANR	2660473	IncDec	++		2660427	1					
ANR	2660474	PostIncDecOperationExpression	j ++		2660427	1					
ANR	2660475	Identifier	j		2660427	0					
ANR	2660476	IncDec	++		2660427	1					
ANR	2660477	CompoundStatement		5:59:118:118	2660427	3					
ANR	2660478	IfStatement	if ( str [ j ] == '#' )		2660427	0					
ANR	2660479	Condition	str [ j ] == '#'	6559:6:139703:139715	2660427	0	True				
ANR	2660480	EqualityExpression	str [ j ] == '#'		2660427	0		==			
ANR	2660481	ArrayIndexing	str [ j ]		2660427	0					
ANR	2660482	Identifier	str		2660427	0					
ANR	2660483	Identifier	j		2660427	1					
ANR	2660484	PrimaryExpression	'#'		2660427	1					
ANR	2660485	CompoundStatement		6:21:141:141	2660427	1					
ANR	2660486	ExpressionStatement	i --	6560:3:139723:139726	2660427	0	True				
ANR	2660487	PostIncDecOperationExpression	i --		2660427	0					
ANR	2660488	Identifier	i		2660427	0					
ANR	2660489	IncDec	--		2660427	1					
ANR	2660490	ContinueStatement	continue ;	6560:8:139728:139736	2660427	1	True				
ANR	2660491	ExpressionStatement	buf [ i ] = tolower ( ( const ut8 ) str [ j ] )	6562:2:139744:139780	2660427	1	True				
ANR	2660492	AssignmentExpression	buf [ i ] = tolower ( ( const ut8 ) str [ j ] )		2660427	0		=			
ANR	2660493	ArrayIndexing	buf [ i ]		2660427	0					
ANR	2660494	Identifier	buf		2660427	0					
ANR	2660495	Identifier	i		2660427	1					
ANR	2660496	CallExpression	tolower ( ( const ut8 ) str [ j ] )		2660427	1					
ANR	2660497	Callee	tolower		2660427	0					
ANR	2660498	Identifier	tolower		2660427	0					
ANR	2660499	ArgumentList	( const ut8 ) str [ j ]		2660427	1					
ANR	2660500	Argument	( const ut8 ) str [ j ]		2660427	0					
ANR	2660501	CastExpression	( const ut8 ) str [ j ]		2660427	0					
ANR	2660502	CastTarget	const ut8		2660427	0					
ANR	2660503	ArrayIndexing	str [ j ]		2660427	1					
ANR	2660504	Identifier	str		2660427	0					
ANR	2660505	Identifier	j		2660427	1					
ANR	2660506	ExpressionStatement	buf [ i ] = 0	6564:1:139786:139796	2660427	8	True				
ANR	2660507	AssignmentExpression	buf [ i ] = 0		2660427	0		=			
ANR	2660508	ArrayIndexing	buf [ i ]		2660427	0					
ANR	2660509	Identifier	buf		2660427	0					
ANR	2660510	Identifier	i		2660427	1					
ANR	2660511	PrimaryExpression	0		2660427	1					
ANR	2660512	ExpressionStatement	"arm_opcode_parse ( & aop , buf )"	6565:1:139799:139827	2660427	9	True				
ANR	2660513	CallExpression	"arm_opcode_parse ( & aop , buf )"		2660427	0					
ANR	2660514	Callee	arm_opcode_parse		2660427	0					
ANR	2660515	Identifier	arm_opcode_parse		2660427	0					
ANR	2660516	ArgumentList	& aop		2660427	1					
ANR	2660517	Argument	& aop		2660427	0					
ANR	2660518	UnaryOperationExpression	& aop		2660427	0					
ANR	2660519	UnaryOperator	&		2660427	0					
ANR	2660520	Identifier	aop		2660427	1					
ANR	2660521	Argument	buf		2660427	1					
ANR	2660522	Identifier	buf		2660427	0					
ANR	2660523	ExpressionStatement	aop . off = off	6566:1:139830:139843	2660427	10	True				
ANR	2660524	AssignmentExpression	aop . off = off		2660427	0		=			
ANR	2660525	MemberAccess	aop . off		2660427	0					
ANR	2660526	Identifier	aop		2660427	0					
ANR	2660527	Identifier	off		2660427	1					
ANR	2660528	Identifier	off		2660427	1					
ANR	2660529	IfStatement	if ( thumb < 0 || thumb > 1 )		2660427	11					
ANR	2660530	Condition	thumb < 0 || thumb > 1	6567:5:139850:139871	2660427	0	True				
ANR	2660531	OrExpression	thumb < 0 || thumb > 1		2660427	0		||			
ANR	2660532	RelationalExpression	thumb < 0		2660427	0		<			
ANR	2660533	Identifier	thumb		2660427	0					
ANR	2660534	PrimaryExpression	0		2660427	1					
ANR	2660535	RelationalExpression	thumb > 1		2660427	1		>			
ANR	2660536	Identifier	thumb		2660427	0					
ANR	2660537	PrimaryExpression	1		2660427	1					
ANR	2660538	CompoundStatement		14:29:297:297	2660427	1					
ANR	2660539	ReturnStatement	return - 1 ;	6568:2:139878:139887	2660427	0	True				
ANR	2660540	UnaryOperationExpression	- 1		2660427	0					
ANR	2660541	UnaryOperator	-		2660427	0					
ANR	2660542	PrimaryExpression	1		2660427	1					
ANR	2660543	IfStatement	"if ( ! assemble [ thumb ] ( & aop , off , buf ) )"		2660427	12					
ANR	2660544	Condition	"! assemble [ thumb ] ( & aop , off , buf )"	6570:5:139897:139929	2660427	0	True				
ANR	2660545	UnaryOperationExpression	"! assemble [ thumb ] ( & aop , off , buf )"		2660427	0					
ANR	2660546	UnaryOperator	!		2660427	0					
ANR	2660547	CallExpression	"assemble [ thumb ] ( & aop , off , buf )"		2660427	1					
ANR	2660548	Callee	assemble [ thumb ]		2660427	0					
ANR	2660549	ArrayIndexing	assemble [ thumb ]		2660427	0					
ANR	2660550	Identifier	assemble		2660427	0					
ANR	2660551	Identifier	thumb		2660427	1					
ANR	2660552	ArgumentList	& aop		2660427	1					
ANR	2660553	Argument	& aop		2660427	0					
ANR	2660554	UnaryOperationExpression	& aop		2660427	0					
ANR	2660555	UnaryOperator	&		2660427	0					
ANR	2660556	Identifier	aop		2660427	1					
ANR	2660557	Argument	off		2660427	1					
ANR	2660558	Identifier	off		2660427	0					
ANR	2660559	Argument	buf		2660427	2					
ANR	2660560	Identifier	buf		2660427	0					
ANR	2660561	CompoundStatement		17:40:355:355	2660427	1					
ANR	2660562	ReturnStatement	return - 1 ;	6572:2:139988:139997	2660427	0	True				
ANR	2660563	UnaryOperationExpression	- 1		2660427	0					
ANR	2660564	UnaryOperator	-		2660427	0					
ANR	2660565	PrimaryExpression	1		2660427	1					
ANR	2660566	ReturnStatement	return aop . o ;	6574:1:140003:140015	2660427	13	True				
ANR	2660567	MemberAccess	aop . o		2660427	0					
ANR	2660568	Identifier	aop		2660427	0					
ANR	2660569	Identifier	o		2660427	1					
ANR	2660570	ReturnType	ut32		2660427	1					
ANR	2660571	Identifier	armass_assemble		2660427	2					
ANR	2660572	ParameterList	"const char * str , ut64 off , int thumb"		2660427	3					
ANR	2660573	Parameter	const char * str	6554:21:139538:139552	2660427	0	True				
ANR	2660574	ParameterType	const char *		2660427	0					
ANR	2660575	Identifier	str		2660427	1					
ANR	2660576	Parameter	ut64 off	6554:38:139555:139562	2660427	1	True				
ANR	2660577	ParameterType	ut64		2660427	0					
ANR	2660578	Identifier	off		2660427	1					
ANR	2660579	Parameter	int thumb	6554:48:139565:139573	2660427	2	True				
ANR	2660580	ParameterType	int		2660427	0					
ANR	2660581	Identifier	thumb		2660427	1					
ANR	2660582	CFGEntryNode	ENTRY		2660427		True				
ANR	2660583	CFGExitNode	EXIT		2660427		True				
ANR	2660584	Symbol	aop . o		2660427						
ANR	2660585	Symbol	* buf		2660427						
ANR	2660586	Symbol	aop . off		2660427						
ANR	2660587	Symbol	aop		2660427						
ANR	2660588	Symbol	tolower		2660427						
ANR	2660589	Symbol	thumb		2660427						
ANR	2660590	Symbol	i		2660427						
ANR	2660591	Symbol	j		2660427						
ANR	2660592	Symbol	assemble		2660427						
ANR	2660593	Symbol	off		2660427						
ANR	2660594	Symbol	& aop		2660427						
ANR	2660595	Symbol	str		2660427						
ANR	2660596	Symbol	* assemble		2660427						
ANR	2660597	Symbol	buf		2660427						
ANR	2660598	Symbol	* i		2660427						
ANR	2660599	Symbol	* j		2660427						
ANR	2660600	Symbol	* thumb		2660427						
ANR	2660601	Symbol	* str		2660427						
ANR	2660602	Function	thisplay	6578:0:140032:140237							
ANR	2660603	FunctionDef	thisplay (const char * str)		2660602	0					
ANR	2660604	CompoundStatement		6578:31:140063:140237	2660602	0					
ANR	2660605	IdentifierDeclStatement	char cmd [ 32 ] ;	6579:1:140066:140078	2660602	0	True				
ANR	2660606	IdentifierDecl	cmd [ 32 ]		2660602	0					
ANR	2660607	IdentifierDeclType	char [ 32 ]		2660602	0					
ANR	2660608	Identifier	cmd		2660602	1					
ANR	2660609	PrimaryExpression	32		2660602	2					
ANR	2660610	IdentifierDeclStatement	"int op = armass_assemble ( str , 0x1000 , 1 ) ;"	6580:1:140081:140122	2660602	1	True				
ANR	2660611	IdentifierDecl	"op = armass_assemble ( str , 0x1000 , 1 )"		2660602	0					
ANR	2660612	IdentifierDeclType	int		2660602	0					
ANR	2660613	Identifier	op		2660602	1					
ANR	2660614	AssignmentExpression	"op = armass_assemble ( str , 0x1000 , 1 )"		2660602	2		=			
ANR	2660615	Identifier	op		2660602	0					
ANR	2660616	CallExpression	"armass_assemble ( str , 0x1000 , 1 )"		2660602	1					
ANR	2660617	Callee	armass_assemble		2660602	0					
ANR	2660618	Identifier	armass_assemble		2660602	0					
ANR	2660619	ArgumentList	str		2660602	1					
ANR	2660620	Argument	str		2660602	0					
ANR	2660621	Identifier	str		2660602	0					
ANR	2660622	Argument	0x1000		2660602	1					
ANR	2660623	PrimaryExpression	0x1000		2660602	0					
ANR	2660624	Argument	1		2660602	2					
ANR	2660625	PrimaryExpression	1		2660602	0					
ANR	2660626	ExpressionStatement	"printf ( ""[%04x] %s\\n"" , op , str )"	6581:1:140125:140156	2660602	2	True				
ANR	2660627	CallExpression	"printf ( ""[%04x] %s\\n"" , op , str )"		2660602	0					
ANR	2660628	Callee	printf		2660602	0					
ANR	2660629	Identifier	printf		2660602	0					
ANR	2660630	ArgumentList	"""[%04x] %s\\n"""		2660602	1					
ANR	2660631	Argument	"""[%04x] %s\\n"""		2660602	0					
ANR	2660632	PrimaryExpression	"""[%04x] %s\\n"""		2660602	0					
ANR	2660633	Argument	op		2660602	1					
ANR	2660634	Identifier	op		2660602	0					
ANR	2660635	Argument	str		2660602	2					
ANR	2660636	Identifier	str		2660602	0					
ANR	2660637	ExpressionStatement	"snprintf ( cmd , sizeof ( cmd ) , ""rasm2 -d -b 16 -a arm %04x"" , op )"	6582:1:140159:140220	2660602	3	True				
ANR	2660638	CallExpression	"snprintf ( cmd , sizeof ( cmd ) , ""rasm2 -d -b 16 -a arm %04x"" , op )"		2660602	0					
ANR	2660639	Callee	snprintf		2660602	0					
ANR	2660640	Identifier	snprintf		2660602	0					
ANR	2660641	ArgumentList	cmd		2660602	1					
ANR	2660642	Argument	cmd		2660602	0					
ANR	2660643	Identifier	cmd		2660602	0					
ANR	2660644	Argument	sizeof ( cmd )		2660602	1					
ANR	2660645	SizeofExpression	sizeof ( cmd )		2660602	0					
ANR	2660646	Sizeof	sizeof		2660602	0					
ANR	2660647	SizeofOperand	cmd		2660602	1					
ANR	2660648	Argument	"""rasm2 -d -b 16 -a arm %04x"""		2660602	2					
ANR	2660649	PrimaryExpression	"""rasm2 -d -b 16 -a arm %04x"""		2660602	0					
ANR	2660650	Argument	op		2660602	3					
ANR	2660651	Identifier	op		2660602	0					
ANR	2660652	ExpressionStatement	system ( cmd )	6583:1:140223:140235	2660602	4	True				
ANR	2660653	CallExpression	system ( cmd )		2660602	0					
ANR	2660654	Callee	system		2660602	0					
ANR	2660655	Identifier	system		2660602	0					
ANR	2660656	ArgumentList	cmd		2660602	1					
ANR	2660657	Argument	cmd		2660602	0					
ANR	2660658	Identifier	cmd		2660602	0					
ANR	2660659	ReturnType	void		2660602	1					
ANR	2660660	Identifier	thisplay		2660602	2					
ANR	2660661	ParameterList	const char * str		2660602	3					
ANR	2660662	Parameter	const char * str	6578:14:140046:140060	2660602	0	True				
ANR	2660663	ParameterType	const char *		2660602	0					
ANR	2660664	Identifier	str		2660602	1					
ANR	2660665	CFGEntryNode	ENTRY		2660602		True				
ANR	2660666	CFGExitNode	EXIT		2660602		True				
ANR	2660667	Symbol	str		2660602						
ANR	2660668	Symbol	op		2660602						
ANR	2660669	Symbol	armass_assemble		2660602						
ANR	2660670	Symbol	cmd		2660602						
ANR	2660671	Function	display	6586:0:140240:140438							
ANR	2660672	FunctionDef	display (const char * str)		2660671	0					
ANR	2660673	CompoundStatement		6586:30:140270:140438	2660671	0					
ANR	2660674	IdentifierDeclStatement	char cmd [ 32 ] ;	6587:1:140273:140285	2660671	0	True				
ANR	2660675	IdentifierDecl	cmd [ 32 ]		2660671	0					
ANR	2660676	IdentifierDeclType	char [ 32 ]		2660671	0					
ANR	2660677	Identifier	cmd		2660671	1					
ANR	2660678	PrimaryExpression	32		2660671	2					
ANR	2660679	IdentifierDeclStatement	"int op = armass_assemble ( str , 0x1000 , 0 ) ;"	6588:1:140288:140329	2660671	1	True				
ANR	2660680	IdentifierDecl	"op = armass_assemble ( str , 0x1000 , 0 )"		2660671	0					
ANR	2660681	IdentifierDeclType	int		2660671	0					
ANR	2660682	Identifier	op		2660671	1					
ANR	2660683	AssignmentExpression	"op = armass_assemble ( str , 0x1000 , 0 )"		2660671	2		=			
ANR	2660684	Identifier	op		2660671	0					
ANR	2660685	CallExpression	"armass_assemble ( str , 0x1000 , 0 )"		2660671	1					
ANR	2660686	Callee	armass_assemble		2660671	0					
ANR	2660687	Identifier	armass_assemble		2660671	0					
ANR	2660688	ArgumentList	str		2660671	1					
ANR	2660689	Argument	str		2660671	0					
ANR	2660690	Identifier	str		2660671	0					
ANR	2660691	Argument	0x1000		2660671	1					
ANR	2660692	PrimaryExpression	0x1000		2660671	0					
ANR	2660693	Argument	0		2660671	2					
ANR	2660694	PrimaryExpression	0		2660671	0					
ANR	2660695	ExpressionStatement	"printf ( ""[%08x] %s\\n"" , op , str )"	6589:1:140332:140363	2660671	2	True				
ANR	2660696	CallExpression	"printf ( ""[%08x] %s\\n"" , op , str )"		2660671	0					
ANR	2660697	Callee	printf		2660671	0					
ANR	2660698	Identifier	printf		2660671	0					
ANR	2660699	ArgumentList	"""[%08x] %s\\n"""		2660671	1					
ANR	2660700	Argument	"""[%08x] %s\\n"""		2660671	0					
ANR	2660701	PrimaryExpression	"""[%08x] %s\\n"""		2660671	0					
ANR	2660702	Argument	op		2660671	1					
ANR	2660703	Identifier	op		2660671	0					
ANR	2660704	Argument	str		2660671	2					
ANR	2660705	Identifier	str		2660671	0					
ANR	2660706	ExpressionStatement	"snprintf ( cmd , sizeof ( cmd ) , ""rasm2 -d -a arm %08x"" , op )"	6590:1:140366:140421	2660671	3	True				
ANR	2660707	CallExpression	"snprintf ( cmd , sizeof ( cmd ) , ""rasm2 -d -a arm %08x"" , op )"		2660671	0					
ANR	2660708	Callee	snprintf		2660671	0					
ANR	2660709	Identifier	snprintf		2660671	0					
ANR	2660710	ArgumentList	cmd		2660671	1					
ANR	2660711	Argument	cmd		2660671	0					
ANR	2660712	Identifier	cmd		2660671	0					
ANR	2660713	Argument	sizeof ( cmd )		2660671	1					
ANR	2660714	SizeofExpression	sizeof ( cmd )		2660671	0					
ANR	2660715	Sizeof	sizeof		2660671	0					
ANR	2660716	SizeofOperand	cmd		2660671	1					
ANR	2660717	Argument	"""rasm2 -d -a arm %08x"""		2660671	2					
ANR	2660718	PrimaryExpression	"""rasm2 -d -a arm %08x"""		2660671	0					
ANR	2660719	Argument	op		2660671	3					
ANR	2660720	Identifier	op		2660671	0					
ANR	2660721	ExpressionStatement	system ( cmd )	6591:1:140424:140436	2660671	4	True				
ANR	2660722	CallExpression	system ( cmd )		2660671	0					
ANR	2660723	Callee	system		2660671	0					
ANR	2660724	Identifier	system		2660671	0					
ANR	2660725	ArgumentList	cmd		2660671	1					
ANR	2660726	Argument	cmd		2660671	0					
ANR	2660727	Identifier	cmd		2660671	0					
ANR	2660728	ReturnType	void		2660671	1					
ANR	2660729	Identifier	display		2660671	2					
ANR	2660730	ParameterList	const char * str		2660671	3					
ANR	2660731	Parameter	const char * str	6586:13:140253:140267	2660671	0	True				
ANR	2660732	ParameterType	const char *		2660671	0					
ANR	2660733	Identifier	str		2660671	1					
ANR	2660734	CFGEntryNode	ENTRY		2660671		True				
ANR	2660735	CFGExitNode	EXIT		2660671		True				
ANR	2660736	Symbol	str		2660671						
ANR	2660737	Symbol	op		2660671						
ANR	2660738	Symbol	armass_assemble		2660671						
ANR	2660739	Symbol	cmd		2660671						
ANR	2660740	Function	main	6594:0:140441:143593							
ANR	2660741	FunctionDef	main ()		2660740	0					
ANR	2660742	CompoundStatement		6594:11:140452:143593	2660740	0					
ANR	2660743	ExpressionStatement	"thisplay ( ""ldmia r1!, {r3, r4, r5}"" )"	6595:1:140455:140491	2660740	0	True				
ANR	2660744	CallExpression	"thisplay ( ""ldmia r1!, {r3, r4, r5}"" )"		2660740	0					
ANR	2660745	Callee	thisplay		2660740	0					
ANR	2660746	Identifier	thisplay		2660740	0					
ANR	2660747	ArgumentList	"""ldmia r1!, {r3, r4, r5}"""		2660740	1					
ANR	2660748	Argument	"""ldmia r1!, {r3, r4, r5}"""		2660740	0					
ANR	2660749	PrimaryExpression	"""ldmia r1!, {r3, r4, r5}"""		2660740	0					
ANR	2660750	ExpressionStatement	"thisplay ( ""stmia r1!, {r3, r4, r5}"" )"	6596:1:140494:140530	2660740	1	True				
ANR	2660751	CallExpression	"thisplay ( ""stmia r1!, {r3, r4, r5}"" )"		2660740	0					
ANR	2660752	Callee	thisplay		2660740	0					
ANR	2660753	Identifier	thisplay		2660740	0					
ANR	2660754	ArgumentList	"""stmia r1!, {r3, r4, r5}"""		2660740	1					
ANR	2660755	Argument	"""stmia r1!, {r3, r4, r5}"""		2660740	0					
ANR	2660756	PrimaryExpression	"""stmia r1!, {r3, r4, r5}"""		2660740	0					
ANR	2660757	ExpressionStatement	"thisplay ( ""bkpt 12"" )"	6597:1:140533:140553	2660740	2	True				
ANR	2660758	CallExpression	"thisplay ( ""bkpt 12"" )"		2660740	0					
ANR	2660759	Callee	thisplay		2660740	0					
ANR	2660760	Identifier	thisplay		2660740	0					
ANR	2660761	ArgumentList	"""bkpt 12"""		2660740	1					
ANR	2660762	Argument	"""bkpt 12"""		2660740	0					
ANR	2660763	PrimaryExpression	"""bkpt 12"""		2660740	0					
ANR	2660764	ReturnStatement	return 0 ;	6598:0:140555:140563	2660740	3	True				
ANR	2660765	PrimaryExpression	0		2660740	0					
ANR	2660766	ExpressionStatement	"thisplay ( ""sub r1, r2, 0"" )"	6599:1:140566:140591	2660740	4	True				
ANR	2660767	CallExpression	"thisplay ( ""sub r1, r2, 0"" )"		2660740	0					
ANR	2660768	Callee	thisplay		2660740	0					
ANR	2660769	Identifier	thisplay		2660740	0					
ANR	2660770	ArgumentList	"""sub r1, r2, 0"""		2660740	1					
ANR	2660771	Argument	"""sub r1, r2, 0"""		2660740	0					
ANR	2660772	PrimaryExpression	"""sub r1, r2, 0"""		2660740	0					
ANR	2660773	ExpressionStatement	"thisplay ( ""sub r1, r2, 4"" )"	6600:1:140594:140619	2660740	5	True				
ANR	2660774	CallExpression	"thisplay ( ""sub r1, r2, 4"" )"		2660740	0					
ANR	2660775	Callee	thisplay		2660740	0					
ANR	2660776	Identifier	thisplay		2660740	0					
ANR	2660777	ArgumentList	"""sub r1, r2, 4"""		2660740	1					
ANR	2660778	Argument	"""sub r1, r2, 4"""		2660740	0					
ANR	2660779	PrimaryExpression	"""sub r1, r2, 4"""		2660740	0					
ANR	2660780	ExpressionStatement	"thisplay ( ""sub r1, r2, 5"" )"	6601:1:140622:140647	2660740	6	True				
ANR	2660781	CallExpression	"thisplay ( ""sub r1, r2, 5"" )"		2660740	0					
ANR	2660782	Callee	thisplay		2660740	0					
ANR	2660783	Identifier	thisplay		2660740	0					
ANR	2660784	ArgumentList	"""sub r1, r2, 5"""		2660740	1					
ANR	2660785	Argument	"""sub r1, r2, 5"""		2660740	0					
ANR	2660786	PrimaryExpression	"""sub r1, r2, 5"""		2660740	0					
ANR	2660787	ExpressionStatement	"thisplay ( ""sub r1, r2, 7"" )"	6602:1:140650:140675	2660740	7	True				
ANR	2660788	CallExpression	"thisplay ( ""sub r1, r2, 7"" )"		2660740	0					
ANR	2660789	Callee	thisplay		2660740	0					
ANR	2660790	Identifier	thisplay		2660740	0					
ANR	2660791	ArgumentList	"""sub r1, r2, 7"""		2660740	1					
ANR	2660792	Argument	"""sub r1, r2, 7"""		2660740	0					
ANR	2660793	PrimaryExpression	"""sub r1, r2, 7"""		2660740	0					
ANR	2660794	ExpressionStatement	"thisplay ( ""sub r3, 44"" )"	6603:1:140678:140700	2660740	8	True				
ANR	2660795	CallExpression	"thisplay ( ""sub r3, 44"" )"		2660740	0					
ANR	2660796	Callee	thisplay		2660740	0					
ANR	2660797	Identifier	thisplay		2660740	0					
ANR	2660798	ArgumentList	"""sub r3, 44"""		2660740	1					
ANR	2660799	Argument	"""sub r3, 44"""		2660740	0					
ANR	2660800	PrimaryExpression	"""sub r3, 44"""		2660740	0					
ANR	2660801	ReturnStatement	return 0 ;	6604:0:140702:140710	2660740	9	True				
ANR	2660802	PrimaryExpression	0		2660740	0					
ANR	2660803	ExpressionStatement	"thisplay ( ""mov r0, 11"" )"	6606:1:140719:140741	2660740	10	True				
ANR	2660804	CallExpression	"thisplay ( ""mov r0, 11"" )"		2660740	0					
ANR	2660805	Callee	thisplay		2660740	0					
ANR	2660806	Identifier	thisplay		2660740	0					
ANR	2660807	ArgumentList	"""mov r0, 11"""		2660740	1					
ANR	2660808	Argument	"""mov r0, 11"""		2660740	0					
ANR	2660809	PrimaryExpression	"""mov r0, 11"""		2660740	0					
ANR	2660810	ExpressionStatement	"thisplay ( ""mov r0, r2"" )"	6607:1:140744:140766	2660740	11	True				
ANR	2660811	CallExpression	"thisplay ( ""mov r0, r2"" )"		2660740	0					
ANR	2660812	Callee	thisplay		2660740	0					
ANR	2660813	Identifier	thisplay		2660740	0					
ANR	2660814	ArgumentList	"""mov r0, r2"""		2660740	1					
ANR	2660815	Argument	"""mov r0, r2"""		2660740	0					
ANR	2660816	PrimaryExpression	"""mov r0, r2"""		2660740	0					
ANR	2660817	ExpressionStatement	"thisplay ( ""mov r1, r4"" )"	6608:1:140769:140791	2660740	12	True				
ANR	2660818	CallExpression	"thisplay ( ""mov r1, r4"" )"		2660740	0					
ANR	2660819	Callee	thisplay		2660740	0					
ANR	2660820	Identifier	thisplay		2660740	0					
ANR	2660821	ArgumentList	"""mov r1, r4"""		2660740	1					
ANR	2660822	Argument	"""mov r1, r4"""		2660740	0					
ANR	2660823	PrimaryExpression	"""mov r1, r4"""		2660740	0					
ANR	2660824	ExpressionStatement	"thisplay ( ""cmp r1, r2"" )"	6609:1:140794:140816	2660740	13	True				
ANR	2660825	CallExpression	"thisplay ( ""cmp r1, r2"" )"		2660740	0					
ANR	2660826	Callee	thisplay		2660740	0					
ANR	2660827	Identifier	thisplay		2660740	0					
ANR	2660828	ArgumentList	"""cmp r1, r2"""		2660740	1					
ANR	2660829	Argument	"""cmp r1, r2"""		2660740	0					
ANR	2660830	PrimaryExpression	"""cmp r1, r2"""		2660740	0					
ANR	2660831	ExpressionStatement	"thisplay ( ""cmp r3, 44"" )"	6610:1:140819:140841	2660740	14	True				
ANR	2660832	CallExpression	"thisplay ( ""cmp r3, 44"" )"		2660740	0					
ANR	2660833	Callee	thisplay		2660740	0					
ANR	2660834	Identifier	thisplay		2660740	0					
ANR	2660835	ArgumentList	"""cmp r3, 44"""		2660740	1					
ANR	2660836	Argument	"""cmp r3, 44"""		2660740	0					
ANR	2660837	PrimaryExpression	"""cmp r3, 44"""		2660740	0					
ANR	2660838	ExpressionStatement	"thisplay ( ""nop"" )"	6611:1:140844:140859	2660740	15	True				
ANR	2660839	CallExpression	"thisplay ( ""nop"" )"		2660740	0					
ANR	2660840	Callee	thisplay		2660740	0					
ANR	2660841	Identifier	thisplay		2660740	0					
ANR	2660842	ArgumentList	"""nop"""		2660740	1					
ANR	2660843	Argument	"""nop"""		2660740	0					
ANR	2660844	PrimaryExpression	"""nop"""		2660740	0					
ANR	2660845	ExpressionStatement	"thisplay ( ""svc 15"" )"	6612:1:140862:140880	2660740	16	True				
ANR	2660846	CallExpression	"thisplay ( ""svc 15"" )"		2660740	0					
ANR	2660847	Callee	thisplay		2660740	0					
ANR	2660848	Identifier	thisplay		2660740	0					
ANR	2660849	ArgumentList	"""svc 15"""		2660740	1					
ANR	2660850	Argument	"""svc 15"""		2660740	0					
ANR	2660851	PrimaryExpression	"""svc 15"""		2660740	0					
ANR	2660852	ExpressionStatement	"thisplay ( ""add r1, r2"" )"	6613:1:140883:140905	2660740	17	True				
ANR	2660853	CallExpression	"thisplay ( ""add r1, r2"" )"		2660740	0					
ANR	2660854	Callee	thisplay		2660740	0					
ANR	2660855	Identifier	thisplay		2660740	0					
ANR	2660856	ArgumentList	"""add r1, r2"""		2660740	1					
ANR	2660857	Argument	"""add r1, r2"""		2660740	0					
ANR	2660858	PrimaryExpression	"""add r1, r2"""		2660740	0					
ANR	2660859	ExpressionStatement	"thisplay ( ""add r3, 44"" )"	6614:1:140908:140930	2660740	18	True				
ANR	2660860	CallExpression	"thisplay ( ""add r3, 44"" )"		2660740	0					
ANR	2660861	Callee	thisplay		2660740	0					
ANR	2660862	Identifier	thisplay		2660740	0					
ANR	2660863	ArgumentList	"""add r3, 44"""		2660740	1					
ANR	2660864	Argument	"""add r3, 44"""		2660740	0					
ANR	2660865	PrimaryExpression	"""add r3, 44"""		2660740	0					
ANR	2660866	ExpressionStatement	"thisplay ( ""sub r1, r2, 3"" )"	6615:1:140933:140958	2660740	19	True				
ANR	2660867	CallExpression	"thisplay ( ""sub r1, r2, 3"" )"		2660740	0					
ANR	2660868	Callee	thisplay		2660740	0					
ANR	2660869	Identifier	thisplay		2660740	0					
ANR	2660870	ArgumentList	"""sub r1, r2, 3"""		2660740	1					
ANR	2660871	Argument	"""sub r1, r2, 3"""		2660740	0					
ANR	2660872	PrimaryExpression	"""sub r1, r2, 3"""		2660740	0					
ANR	2660873	ExpressionStatement	"thisplay ( ""sub r3, 44"" )"	6616:1:140961:140983	2660740	20	True				
ANR	2660874	CallExpression	"thisplay ( ""sub r3, 44"" )"		2660740	0					
ANR	2660875	Callee	thisplay		2660740	0					
ANR	2660876	Identifier	thisplay		2660740	0					
ANR	2660877	ArgumentList	"""sub r3, 44"""		2660740	1					
ANR	2660878	Argument	"""sub r3, 44"""		2660740	0					
ANR	2660879	PrimaryExpression	"""sub r3, 44"""		2660740	0					
ANR	2660880	ExpressionStatement	"thisplay ( ""tst r3,r4"" )"	6617:1:140986:141007	2660740	21	True				
ANR	2660881	CallExpression	"thisplay ( ""tst r3,r4"" )"		2660740	0					
ANR	2660882	Callee	thisplay		2660740	0					
ANR	2660883	Identifier	thisplay		2660740	0					
ANR	2660884	ArgumentList	"""tst r3,r4"""		2660740	1					
ANR	2660885	Argument	"""tst r3,r4"""		2660740	0					
ANR	2660886	PrimaryExpression	"""tst r3,r4"""		2660740	0					
ANR	2660887	ExpressionStatement	"thisplay ( ""bx r3"" )"	6618:1:141010:141027	2660740	22	True				
ANR	2660888	CallExpression	"thisplay ( ""bx r3"" )"		2660740	0					
ANR	2660889	Callee	thisplay		2660740	0					
ANR	2660890	Identifier	thisplay		2660740	0					
ANR	2660891	ArgumentList	"""bx r3"""		2660740	1					
ANR	2660892	Argument	"""bx r3"""		2660740	0					
ANR	2660893	PrimaryExpression	"""bx r3"""		2660740	0					
ANR	2660894	ExpressionStatement	"thisplay ( ""b 33"" )"	6619:1:141030:141046	2660740	23	True				
ANR	2660895	CallExpression	"thisplay ( ""b 33"" )"		2660740	0					
ANR	2660896	Callee	thisplay		2660740	0					
ANR	2660897	Identifier	thisplay		2660740	0					
ANR	2660898	ArgumentList	"""b 33"""		2660740	1					
ANR	2660899	Argument	"""b 33"""		2660740	0					
ANR	2660900	PrimaryExpression	"""b 33"""		2660740	0					
ANR	2660901	ExpressionStatement	"thisplay ( ""b 0"" )"	6620:1:141049:141064	2660740	24	True				
ANR	2660902	CallExpression	"thisplay ( ""b 0"" )"		2660740	0					
ANR	2660903	Callee	thisplay		2660740	0					
ANR	2660904	Identifier	thisplay		2660740	0					
ANR	2660905	ArgumentList	"""b 0"""		2660740	1					
ANR	2660906	Argument	"""b 0"""		2660740	0					
ANR	2660907	PrimaryExpression	"""b 0"""		2660740	0					
ANR	2660908	ExpressionStatement	"thisplay ( ""bne 44"" )"	6621:1:141067:141085	2660740	25	True				
ANR	2660909	CallExpression	"thisplay ( ""bne 44"" )"		2660740	0					
ANR	2660910	Callee	thisplay		2660740	0					
ANR	2660911	Identifier	thisplay		2660740	0					
ANR	2660912	ArgumentList	"""bne 44"""		2660740	1					
ANR	2660913	Argument	"""bne 44"""		2660740	0					
ANR	2660914	PrimaryExpression	"""bne 44"""		2660740	0					
ANR	2660915	ExpressionStatement	"thisplay ( ""and r2,r3"" )"	6622:1:141088:141109	2660740	26	True				
ANR	2660916	CallExpression	"thisplay ( ""and r2,r3"" )"		2660740	0					
ANR	2660917	Callee	thisplay		2660740	0					
ANR	2660918	Identifier	thisplay		2660740	0					
ANR	2660919	ArgumentList	"""and r2,r3"""		2660740	1					
ANR	2660920	Argument	"""and r2,r3"""		2660740	0					
ANR	2660921	PrimaryExpression	"""and r2,r3"""		2660740	0					
ANR	2660922	ExpressionStatement	"thisplay ( ""ldr r1, [pc, 12]"" )"	6627:1:141209:141237	2660740	27	True				
ANR	2660923	CallExpression	"thisplay ( ""ldr r1, [pc, 12]"" )"		2660740	0					
ANR	2660924	Callee	thisplay		2660740	0					
ANR	2660925	Identifier	thisplay		2660740	0					
ANR	2660926	ArgumentList	"""ldr r1, [pc, 12]"""		2660740	1					
ANR	2660927	Argument	"""ldr r1, [pc, 12]"""		2660740	0					
ANR	2660928	PrimaryExpression	"""ldr r1, [pc, 12]"""		2660740	0					
ANR	2660929	ExpressionStatement	"thisplay ( ""ldr r1, [sp, 24]"" )"	6628:1:141240:141268	2660740	28	True				
ANR	2660930	CallExpression	"thisplay ( ""ldr r1, [sp, 24]"" )"		2660740	0					
ANR	2660931	Callee	thisplay		2660740	0					
ANR	2660932	Identifier	thisplay		2660740	0					
ANR	2660933	ArgumentList	"""ldr r1, [sp, 24]"""		2660740	1					
ANR	2660934	Argument	"""ldr r1, [sp, 24]"""		2660740	0					
ANR	2660935	PrimaryExpression	"""ldr r1, [sp, 24]"""		2660740	0					
ANR	2660936	ExpressionStatement	"thisplay ( ""ldr r1, [r2, r3]"" )"	6629:1:141271:141299	2660740	29	True				
ANR	2660937	CallExpression	"thisplay ( ""ldr r1, [r2, r3]"" )"		2660740	0					
ANR	2660938	Callee	thisplay		2660740	0					
ANR	2660939	Identifier	thisplay		2660740	0					
ANR	2660940	ArgumentList	"""ldr r1, [r2, r3]"""		2660740	1					
ANR	2660941	Argument	"""ldr r1, [r2, r3]"""		2660740	0					
ANR	2660942	PrimaryExpression	"""ldr r1, [r2, r3]"""		2660740	0					
ANR	2660943	Label	0 :	6635:3:141443:141444	2660740	30	True				
ANR	2660944	Statement	8991	6635:8:141448:141451	2660740	31	True				
ANR	2660945	Statement	ldrh	6635:24:141464:141467	2660740	32	True				
ANR	2660946	Statement	r1	6635:32:141472:141473	2660740	33	True				
ANR	2660947	Statement	","	6635:34:141474:141474	2660740	34	True				
ANR	2660948	Statement	[	6635:36:141476:141476	2660740	35	True				
ANR	2660949	Statement	r2	6635:37:141477:141478	2660740	36	True				
ANR	2660950	Statement	","	6635:39:141479:141479	2660740	37	True				
ANR	2660951	Statement	12	6635:42:141482:141483	2660740	38	True				
ANR	2660952	Statement	]	6635:44:141484:141484	2660740	39	True				
ANR	2660953	Label	2 :	6636:3:141489:141490	2660740	40	True				
ANR	2660954	Statement	7	6636:8:141494:141494	2660740	41	True				
ANR	2660955	Statement	b11	6636:9:141495:141497	2660740	42	True				
ANR	2660956	Statement	ldrb	6636:24:141510:141513	2660740	43	True				
ANR	2660957	Statement	r1	6636:32:141518:141519	2660740	44	True				
ANR	2660958	Statement	","	6636:34:141520:141520	2660740	45	True				
ANR	2660959	Statement	[	6636:36:141522:141522	2660740	46	True				
ANR	2660960	Statement	r2	6636:37:141523:141524	2660740	47	True				
ANR	2660961	Statement	","	6636:39:141525:141525	2660740	48	True				
ANR	2660962	Statement	12	6636:42:141528:141529	2660740	49	True				
ANR	2660963	Statement	]	6636:44:141530:141530	2660740	50	True				
ANR	2660964	Label	4 :	6637:3:141535:141536	2660740	51	True				
ANR	2660965	Statement	8191	6637:8:141540:141543	2660740	52	True				
ANR	2660966	Statement	strh	6637:24:141556:141559	2660740	53	True				
ANR	2660967	Statement	r1	6637:32:141564:141565	2660740	54	True				
ANR	2660968	Statement	","	6637:34:141566:141566	2660740	55	True				
ANR	2660969	Statement	[	6637:36:141568:141568	2660740	56	True				
ANR	2660970	Statement	r2	6637:37:141569:141570	2660740	57	True				
ANR	2660971	Statement	","	6637:39:141571:141571	2660740	58	True				
ANR	2660972	Statement	12	6637:42:141574:141575	2660740	59	True				
ANR	2660973	Statement	]	6637:44:141576:141576	2660740	60	True				
ANR	2660974	Label	6 :	6638:3:141581:141582	2660740	61	True				
ANR	2660975	Statement	7311	6638:8:141586:141589	2660740	62	True				
ANR	2660976	Statement	strb	6638:24:141602:141605	2660740	63	True				
ANR	2660977	Statement	r1	6638:32:141610:141611	2660740	64	True				
ANR	2660978	Statement	","	6638:34:141612:141612	2660740	65	True				
ANR	2660979	Statement	[	6638:36:141614:141614	2660740	66	True				
ANR	2660980	Statement	r2	6638:37:141615:141616	2660740	67	True				
ANR	2660981	Statement	","	6638:39:141617:141617	2660740	68	True				
ANR	2660982	Statement	12	6638:42:141620:141621	2660740	69	True				
ANR	2660983	Statement	]	6638:44:141622:141622	2660740	70	True				
ANR	2660984	ExpressionStatement	"thisplay ( ""ldrh r1, [r2, 8]"" )"	6640:1:141632:141660	2660740	71	True				
ANR	2660985	CallExpression	"thisplay ( ""ldrh r1, [r2, 8]"" )"		2660740	0					
ANR	2660986	Callee	thisplay		2660740	0					
ANR	2660987	Identifier	thisplay		2660740	0					
ANR	2660988	ArgumentList	"""ldrh r1, [r2, 8]"""		2660740	1					
ANR	2660989	Argument	"""ldrh r1, [r2, 8]"""		2660740	0					
ANR	2660990	PrimaryExpression	"""ldrh r1, [r2, 8]"""		2660740	0					
ANR	2660991	ExpressionStatement	"thisplay ( ""ldrh r1, [r3, 8]"" )"	6641:1:141679:141707	2660740	72	True				
ANR	2660992	CallExpression	"thisplay ( ""ldrh r1, [r3, 8]"" )"		2660740	0					
ANR	2660993	Callee	thisplay		2660740	0					
ANR	2660994	Identifier	thisplay		2660740	0					
ANR	2660995	ArgumentList	"""ldrh r1, [r3, 8]"""		2660740	1					
ANR	2660996	Argument	"""ldrh r1, [r3, 8]"""		2660740	0					
ANR	2660997	PrimaryExpression	"""ldrh r1, [r3, 8]"""		2660740	0					
ANR	2660998	ExpressionStatement	"thisplay ( ""ldrh r1, [r4, 16]"" )"	6642:1:141726:141755	2660740	73	True				
ANR	2660999	CallExpression	"thisplay ( ""ldrh r1, [r4, 16]"" )"		2660740	0					
ANR	2661000	Callee	thisplay		2660740	0					
ANR	2661001	Identifier	thisplay		2660740	0					
ANR	2661002	ArgumentList	"""ldrh r1, [r4, 16]"""		2660740	1					
ANR	2661003	Argument	"""ldrh r1, [r4, 16]"""		2660740	0					
ANR	2661004	PrimaryExpression	"""ldrh r1, [r4, 16]"""		2660740	0					
ANR	2661005	ExpressionStatement	"thisplay ( ""ldrh r1, [r2, 32]"" )"	6643:1:141774:141803	2660740	74	True				
ANR	2661006	CallExpression	"thisplay ( ""ldrh r1, [r2, 32]"" )"		2660740	0					
ANR	2661007	Callee	thisplay		2660740	0					
ANR	2661008	Identifier	thisplay		2660740	0					
ANR	2661009	ArgumentList	"""ldrh r1, [r2, 32]"""		2660740	1					
ANR	2661010	Argument	"""ldrh r1, [r2, 32]"""		2660740	0					
ANR	2661011	PrimaryExpression	"""ldrh r1, [r2, 32]"""		2660740	0					
ANR	2661012	ExpressionStatement	"thisplay ( ""ldrb r1, [r2, 20]"" )"	6644:1:141822:141851	2660740	75	True				
ANR	2661013	CallExpression	"thisplay ( ""ldrb r1, [r2, 20]"" )"		2660740	0					
ANR	2661014	Callee	thisplay		2660740	0					
ANR	2661015	Identifier	thisplay		2660740	0					
ANR	2661016	ArgumentList	"""ldrb r1, [r2, 20]"""		2660740	1					
ANR	2661017	Argument	"""ldrb r1, [r2, 20]"""		2660740	0					
ANR	2661018	PrimaryExpression	"""ldrb r1, [r2, 20]"""		2660740	0					
ANR	2661019	ExpressionStatement	"thisplay ( ""strh r1, [r2, 20]"" )"	6645:1:141870:141899	2660740	76	True				
ANR	2661020	CallExpression	"thisplay ( ""strh r1, [r2, 20]"" )"		2660740	0					
ANR	2661021	Callee	thisplay		2660740	0					
ANR	2661022	Identifier	thisplay		2660740	0					
ANR	2661023	ArgumentList	"""strh r1, [r2, 20]"""		2660740	1					
ANR	2661024	Argument	"""strh r1, [r2, 20]"""		2660740	0					
ANR	2661025	PrimaryExpression	"""strh r1, [r2, 20]"""		2660740	0					
ANR	2661026	ExpressionStatement	"thisplay ( ""strb r1, [r2, 20]"" )"	6646:1:141918:141947	2660740	77	True				
ANR	2661027	CallExpression	"thisplay ( ""strb r1, [r2, 20]"" )"		2660740	0					
ANR	2661028	Callee	thisplay		2660740	0					
ANR	2661029	Identifier	thisplay		2660740	0					
ANR	2661030	ArgumentList	"""strb r1, [r2, 20]"""		2660740	1					
ANR	2661031	Argument	"""strb r1, [r2, 20]"""		2660740	0					
ANR	2661032	PrimaryExpression	"""strb r1, [r2, 20]"""		2660740	0					
ANR	2661033	ExpressionStatement	"thisplay ( ""str r1, [sp, 20]"" )"	6647:1:141966:141994	2660740	78	True				
ANR	2661034	CallExpression	"thisplay ( ""str r1, [sp, 20]"" )"		2660740	0					
ANR	2661035	Callee	thisplay		2660740	0					
ANR	2661036	Identifier	thisplay		2660740	0					
ANR	2661037	ArgumentList	"""str r1, [sp, 20]"""		2660740	1					
ANR	2661038	Argument	"""str r1, [sp, 20]"""		2660740	0					
ANR	2661039	PrimaryExpression	"""str r1, [sp, 20]"""		2660740	0					
ANR	2661040	ExpressionStatement	"thisplay ( ""str r1, [r2, 12]"" )"	6648:1:142013:142041	2660740	79	True				
ANR	2661041	CallExpression	"thisplay ( ""str r1, [r2, 12]"" )"		2660740	0					
ANR	2661042	Callee	thisplay		2660740	0					
ANR	2661043	Identifier	thisplay		2660740	0					
ANR	2661044	ArgumentList	"""str r1, [r2, 12]"""		2660740	1					
ANR	2661045	Argument	"""str r1, [r2, 12]"""		2660740	0					
ANR	2661046	PrimaryExpression	"""str r1, [r2, 12]"""		2660740	0					
ANR	2661047	ExpressionStatement	"thisplay ( ""str r1, [r2, r3]"" )"	6649:1:142050:142078	2660740	80	True				
ANR	2661048	CallExpression	"thisplay ( ""str r1, [r2, r3]"" )"		2660740	0					
ANR	2661049	Callee	thisplay		2660740	0					
ANR	2661050	Identifier	thisplay		2660740	0					
ANR	2661051	ArgumentList	"""str r1, [r2, r3]"""		2660740	1					
ANR	2661052	Argument	"""str r1, [r2, r3]"""		2660740	0					
ANR	2661053	PrimaryExpression	"""str r1, [r2, r3]"""		2660740	0					
ANR	2661054	ReturnStatement	return 0 ;	6650:0:142080:142088	2660740	81	True				
ANR	2661055	PrimaryExpression	0		2660740	0					
ANR	2661056	ExpressionStatement	"display ( ""mov r0, 33"" )"	6652:1:142097:142118	2660740	82	True				
ANR	2661057	CallExpression	"display ( ""mov r0, 33"" )"		2660740	0					
ANR	2661058	Callee	display		2660740	0					
ANR	2661059	Identifier	display		2660740	0					
ANR	2661060	ArgumentList	"""mov r0, 33"""		2660740	1					
ANR	2661061	Argument	"""mov r0, 33"""		2660740	0					
ANR	2661062	PrimaryExpression	"""mov r0, 33"""		2660740	0					
ANR	2661063	ExpressionStatement	"display ( ""mov r1, 33"" )"	6653:1:142121:142142	2660740	83	True				
ANR	2661064	CallExpression	"display ( ""mov r1, 33"" )"		2660740	0					
ANR	2661065	Callee	display		2660740	0					
ANR	2661066	Identifier	display		2660740	0					
ANR	2661067	ArgumentList	"""mov r1, 33"""		2660740	1					
ANR	2661068	Argument	"""mov r1, 33"""		2660740	0					
ANR	2661069	PrimaryExpression	"""mov r1, 33"""		2660740	0					
ANR	2661070	ExpressionStatement	"display ( ""movne r0, 33"" )"	6654:1:142145:142168	2660740	84	True				
ANR	2661071	CallExpression	"display ( ""movne r0, 33"" )"		2660740	0					
ANR	2661072	Callee	display		2660740	0					
ANR	2661073	Identifier	display		2660740	0					
ANR	2661074	ArgumentList	"""movne r0, 33"""		2660740	1					
ANR	2661075	Argument	"""movne r0, 33"""		2660740	0					
ANR	2661076	PrimaryExpression	"""movne r0, 33"""		2660740	0					
ANR	2661077	ExpressionStatement	"display ( ""tst r0, r1, lsl #2"" )"	6655:1:142171:142200	2660740	85	True				
ANR	2661078	CallExpression	"display ( ""tst r0, r1, lsl #2"" )"		2660740	0					
ANR	2661079	Callee	display		2660740	0					
ANR	2661080	Identifier	display		2660740	0					
ANR	2661081	ArgumentList	"""tst r0, r1, lsl #2"""		2660740	1					
ANR	2661082	Argument	"""tst r0, r1, lsl #2"""		2660740	0					
ANR	2661083	PrimaryExpression	"""tst r0, r1, lsl #2"""		2660740	0					
ANR	2661084	ExpressionStatement	"display ( ""svc 0x80"" )"	6656:1:142203:142222	2660740	86	True				
ANR	2661085	CallExpression	"display ( ""svc 0x80"" )"		2660740	0					
ANR	2661086	Callee	display		2660740	0					
ANR	2661087	Identifier	display		2660740	0					
ANR	2661088	ArgumentList	"""svc 0x80"""		2660740	1					
ANR	2661089	Argument	"""svc 0x80"""		2660740	0					
ANR	2661090	PrimaryExpression	"""svc 0x80"""		2660740	0					
ANR	2661091	ExpressionStatement	"display ( ""sub r3, r1, r2"" )"	6657:1:142225:142250	2660740	87	True				
ANR	2661092	CallExpression	"display ( ""sub r3, r1, r2"" )"		2660740	0					
ANR	2661093	Callee	display		2660740	0					
ANR	2661094	Identifier	display		2660740	0					
ANR	2661095	ArgumentList	"""sub r3, r1, r2"""		2660740	1					
ANR	2661096	Argument	"""sub r3, r1, r2"""		2660740	0					
ANR	2661097	PrimaryExpression	"""sub r3, r1, r2"""		2660740	0					
ANR	2661098	ExpressionStatement	"display ( ""add r0, r1, r2"" )"	6658:1:142253:142278	2660740	88	True				
ANR	2661099	CallExpression	"display ( ""add r0, r1, r2"" )"		2660740	0					
ANR	2661100	Callee	display		2660740	0					
ANR	2661101	Identifier	display		2660740	0					
ANR	2661102	ArgumentList	"""add r0, r1, r2"""		2660740	1					
ANR	2661103	Argument	"""add r0, r1, r2"""		2660740	0					
ANR	2661104	PrimaryExpression	"""add r0, r1, r2"""		2660740	0					
ANR	2661105	ExpressionStatement	"display ( ""mov fp, 0"" )"	6659:1:142281:142301	2660740	89	True				
ANR	2661106	CallExpression	"display ( ""mov fp, 0"" )"		2660740	0					
ANR	2661107	Callee	display		2660740	0					
ANR	2661108	Identifier	display		2660740	0					
ANR	2661109	ArgumentList	"""mov fp, 0"""		2660740	1					
ANR	2661110	Argument	"""mov fp, 0"""		2660740	0					
ANR	2661111	PrimaryExpression	"""mov fp, 0"""		2660740	0					
ANR	2661112	ExpressionStatement	"display ( ""pop {pc}"" )"	6660:1:142304:142323	2660740	90	True				
ANR	2661113	CallExpression	"display ( ""pop {pc}"" )"		2660740	0					
ANR	2661114	Callee	display		2660740	0					
ANR	2661115	Identifier	display		2660740	0					
ANR	2661116	ArgumentList	"""pop {pc}"""		2660740	1					
ANR	2661117	Argument	"""pop {pc}"""		2660740	0					
ANR	2661118	PrimaryExpression	"""pop {pc}"""		2660740	0					
ANR	2661119	ExpressionStatement	"display ( ""pop {r3}"" )"	6661:1:142326:142345	2660740	91	True				
ANR	2661120	CallExpression	"display ( ""pop {r3}"" )"		2660740	0					
ANR	2661121	Callee	display		2660740	0					
ANR	2661122	Identifier	display		2660740	0					
ANR	2661123	ArgumentList	"""pop {r3}"""		2660740	1					
ANR	2661124	Argument	"""pop {r3}"""		2660740	0					
ANR	2661125	PrimaryExpression	"""pop {r3}"""		2660740	0					
ANR	2661126	ExpressionStatement	"display ( ""bx r1"" )"	6662:1:142348:142364	2660740	92	True				
ANR	2661127	CallExpression	"display ( ""bx r1"" )"		2660740	0					
ANR	2661128	Callee	display		2660740	0					
ANR	2661129	Identifier	display		2660740	0					
ANR	2661130	ArgumentList	"""bx r1"""		2660740	1					
ANR	2661131	Argument	"""bx r1"""		2660740	0					
ANR	2661132	PrimaryExpression	"""bx r1"""		2660740	0					
ANR	2661133	ExpressionStatement	"display ( ""bx r3"" )"	6663:1:142367:142383	2660740	93	True				
ANR	2661134	CallExpression	"display ( ""bx r3"" )"		2660740	0					
ANR	2661135	Callee	display		2660740	0					
ANR	2661136	Identifier	display		2660740	0					
ANR	2661137	ArgumentList	"""bx r3"""		2660740	1					
ANR	2661138	Argument	"""bx r3"""		2660740	0					
ANR	2661139	PrimaryExpression	"""bx r3"""		2660740	0					
ANR	2661140	ExpressionStatement	"display ( ""bx pc"" )"	6664:1:142386:142402	2660740	94	True				
ANR	2661141	CallExpression	"display ( ""bx pc"" )"		2660740	0					
ANR	2661142	Callee	display		2660740	0					
ANR	2661143	Identifier	display		2660740	0					
ANR	2661144	ArgumentList	"""bx pc"""		2660740	1					
ANR	2661145	Argument	"""bx pc"""		2660740	0					
ANR	2661146	PrimaryExpression	"""bx pc"""		2660740	0					
ANR	2661147	ExpressionStatement	"display ( ""blx fp"" )"	6665:1:142405:142422	2660740	95	True				
ANR	2661148	CallExpression	"display ( ""blx fp"" )"		2660740	0					
ANR	2661149	Callee	display		2660740	0					
ANR	2661150	Identifier	display		2660740	0					
ANR	2661151	ArgumentList	"""blx fp"""		2660740	1					
ANR	2661152	Argument	"""blx fp"""		2660740	0					
ANR	2661153	PrimaryExpression	"""blx fp"""		2660740	0					
ANR	2661154	ExpressionStatement	"display ( ""pop {pc}"" )"	6666:1:142425:142444	2660740	96	True				
ANR	2661155	CallExpression	"display ( ""pop {pc}"" )"		2660740	0					
ANR	2661156	Callee	display		2660740	0					
ANR	2661157	Identifier	display		2660740	0					
ANR	2661158	ArgumentList	"""pop {pc}"""		2660740	1					
ANR	2661159	Argument	"""pop {pc}"""		2660740	0					
ANR	2661160	PrimaryExpression	"""pop {pc}"""		2660740	0					
ANR	2661161	ExpressionStatement	"display ( ""add lr, pc, lr"" )"	6667:1:142447:142472	2660740	97	True				
ANR	2661162	CallExpression	"display ( ""add lr, pc, lr"" )"		2660740	0					
ANR	2661163	Callee	display		2660740	0					
ANR	2661164	Identifier	display		2660740	0					
ANR	2661165	ArgumentList	"""add lr, pc, lr"""		2660740	1					
ANR	2661166	Argument	"""add lr, pc, lr"""		2660740	0					
ANR	2661167	PrimaryExpression	"""add lr, pc, lr"""		2660740	0					
ANR	2661168	ExpressionStatement	"display ( ""adds r3, #8"" )"	6668:1:142475:142497	2660740	98	True				
ANR	2661169	CallExpression	"display ( ""adds r3, #8"" )"		2660740	0					
ANR	2661170	Callee	display		2660740	0					
ANR	2661171	Identifier	display		2660740	0					
ANR	2661172	ArgumentList	"""adds r3, #8"""		2660740	1					
ANR	2661173	Argument	"""adds r3, #8"""		2660740	0					
ANR	2661174	PrimaryExpression	"""adds r3, #8"""		2660740	0					
ANR	2661175	ExpressionStatement	"display ( ""adds r3, r2, #8"" )"	6669:1:142500:142526	2660740	99	True				
ANR	2661176	CallExpression	"display ( ""adds r3, r2, #8"" )"		2660740	0					
ANR	2661177	Callee	display		2660740	0					
ANR	2661178	Identifier	display		2660740	0					
ANR	2661179	ArgumentList	"""adds r3, r2, #8"""		2660740	1					
ANR	2661180	Argument	"""adds r3, r2, #8"""		2660740	0					
ANR	2661181	PrimaryExpression	"""adds r3, r2, #8"""		2660740	0					
ANR	2661182	ExpressionStatement	"display ( ""subs r2, #1"" )"	6670:1:142529:142551	2660740	100	True				
ANR	2661183	CallExpression	"display ( ""subs r2, #1"" )"		2660740	0					
ANR	2661184	Callee	display		2660740	0					
ANR	2661185	Identifier	display		2660740	0					
ANR	2661186	ArgumentList	"""subs r2, #1"""		2660740	1					
ANR	2661187	Argument	"""subs r2, #1"""		2660740	0					
ANR	2661188	PrimaryExpression	"""subs r2, #1"""		2660740	0					
ANR	2661189	ExpressionStatement	"display ( ""cmp r0, r4"" )"	6671:1:142554:142575	2660740	101	True				
ANR	2661190	CallExpression	"display ( ""cmp r0, r4"" )"		2660740	0					
ANR	2661191	Callee	display		2660740	0					
ANR	2661192	Identifier	display		2660740	0					
ANR	2661193	ArgumentList	"""cmp r0, r4"""		2660740	1					
ANR	2661194	Argument	"""cmp r0, r4"""		2660740	0					
ANR	2661195	PrimaryExpression	"""cmp r0, r4"""		2660740	0					
ANR	2661196	ExpressionStatement	"display ( ""cmp r7, pc"" )"	6672:1:142578:142599	2660740	102	True				
ANR	2661197	CallExpression	"display ( ""cmp r7, pc"" )"		2660740	0					
ANR	2661198	Callee	display		2660740	0					
ANR	2661199	Identifier	display		2660740	0					
ANR	2661200	ArgumentList	"""cmp r7, pc"""		2660740	1					
ANR	2661201	Argument	"""cmp r7, pc"""		2660740	0					
ANR	2661202	PrimaryExpression	"""cmp r7, pc"""		2660740	0					
ANR	2661203	ExpressionStatement	"display ( ""cmp r1, r3"" )"	6673:1:142602:142623	2660740	103	True				
ANR	2661204	CallExpression	"display ( ""cmp r1, r3"" )"		2660740	0					
ANR	2661205	Callee	display		2660740	0					
ANR	2661206	Identifier	display		2660740	0					
ANR	2661207	ArgumentList	"""cmp r1, r3"""		2660740	1					
ANR	2661208	Argument	"""cmp r1, r3"""		2660740	0					
ANR	2661209	PrimaryExpression	"""cmp r1, r3"""		2660740	0					
ANR	2661210	ExpressionStatement	"display ( ""mov pc, 44"" )"	6674:1:142626:142647	2660740	104	True				
ANR	2661211	CallExpression	"display ( ""mov pc, 44"" )"		2660740	0					
ANR	2661212	Callee	display		2660740	0					
ANR	2661213	Identifier	display		2660740	0					
ANR	2661214	ArgumentList	"""mov pc, 44"""		2660740	1					
ANR	2661215	Argument	"""mov pc, 44"""		2660740	0					
ANR	2661216	PrimaryExpression	"""mov pc, 44"""		2660740	0					
ANR	2661217	ExpressionStatement	"display ( ""mov pc, r3"" )"	6675:1:142650:142671	2660740	105	True				
ANR	2661218	CallExpression	"display ( ""mov pc, r3"" )"		2660740	0					
ANR	2661219	Callee	display		2660740	0					
ANR	2661220	Identifier	display		2660740	0					
ANR	2661221	ArgumentList	"""mov pc, r3"""		2660740	1					
ANR	2661222	Argument	"""mov pc, r3"""		2660740	0					
ANR	2661223	PrimaryExpression	"""mov pc, r3"""		2660740	0					
ANR	2661224	ExpressionStatement	"display ( ""push {pc}"" )"	6676:1:142674:142694	2660740	106	True				
ANR	2661225	CallExpression	"display ( ""push {pc}"" )"		2660740	0					
ANR	2661226	Callee	display		2660740	0					
ANR	2661227	Identifier	display		2660740	0					
ANR	2661228	ArgumentList	"""push {pc}"""		2660740	1					
ANR	2661229	Argument	"""push {pc}"""		2660740	0					
ANR	2661230	PrimaryExpression	"""push {pc}"""		2660740	0					
ANR	2661231	ExpressionStatement	"display ( ""pop {pc}"" )"	6677:1:142697:142716	2660740	107	True				
ANR	2661232	CallExpression	"display ( ""pop {pc}"" )"		2660740	0					
ANR	2661233	Callee	display		2660740	0					
ANR	2661234	Identifier	display		2660740	0					
ANR	2661235	ArgumentList	"""pop {pc}"""		2660740	1					
ANR	2661236	Argument	"""pop {pc}"""		2660740	0					
ANR	2661237	PrimaryExpression	"""pop {pc}"""		2660740	0					
ANR	2661238	ExpressionStatement	"display ( ""nop"" )"	6678:1:142719:142733	2660740	108	True				
ANR	2661239	CallExpression	"display ( ""nop"" )"		2660740	0					
ANR	2661240	Callee	display		2660740	0					
ANR	2661241	Identifier	display		2660740	0					
ANR	2661242	ArgumentList	"""nop"""		2660740	1					
ANR	2661243	Argument	"""nop"""		2660740	0					
ANR	2661244	PrimaryExpression	"""nop"""		2660740	0					
ANR	2661245	ExpressionStatement	"display ( ""ldr r1, [r2, 33]"" )"	6679:1:142736:142763	2660740	109	True				
ANR	2661246	CallExpression	"display ( ""ldr r1, [r2, 33]"" )"		2660740	0					
ANR	2661247	Callee	display		2660740	0					
ANR	2661248	Identifier	display		2660740	0					
ANR	2661249	ArgumentList	"""ldr r1, [r2, 33]"""		2660740	1					
ANR	2661250	Argument	"""ldr r1, [r2, 33]"""		2660740	0					
ANR	2661251	PrimaryExpression	"""ldr r1, [r2, 33]"""		2660740	0					
ANR	2661252	ExpressionStatement	"display ( ""ldr r1, [r2, r3]"" )"	6680:1:142766:142793	2660740	110	True				
ANR	2661253	CallExpression	"display ( ""ldr r1, [r2, r3]"" )"		2660740	0					
ANR	2661254	Callee	display		2660740	0					
ANR	2661255	Identifier	display		2660740	0					
ANR	2661256	ArgumentList	"""ldr r1, [r2, r3]"""		2660740	1					
ANR	2661257	Argument	"""ldr r1, [r2, r3]"""		2660740	0					
ANR	2661258	PrimaryExpression	"""ldr r1, [r2, r3]"""		2660740	0					
ANR	2661259	ExpressionStatement	"display ( ""ldr r3, [r4, r6]"" )"	6681:1:142796:142823	2660740	111	True				
ANR	2661260	CallExpression	"display ( ""ldr r3, [r4, r6]"" )"		2660740	0					
ANR	2661261	Callee	display		2660740	0					
ANR	2661262	Identifier	display		2660740	0					
ANR	2661263	ArgumentList	"""ldr r3, [r4, r6]"""		2660740	1					
ANR	2661264	Argument	"""ldr r3, [r4, r6]"""		2660740	0					
ANR	2661265	PrimaryExpression	"""ldr r3, [r4, r6]"""		2660740	0					
ANR	2661266	ExpressionStatement	"display ( ""str r1, [pc, 33]"" )"	6682:1:142826:142853	2660740	112	True				
ANR	2661267	CallExpression	"display ( ""str r1, [pc, 33]"" )"		2660740	0					
ANR	2661268	Callee	display		2660740	0					
ANR	2661269	Identifier	display		2660740	0					
ANR	2661270	ArgumentList	"""str r1, [pc, 33]"""		2660740	1					
ANR	2661271	Argument	"""str r1, [pc, 33]"""		2660740	0					
ANR	2661272	PrimaryExpression	"""str r1, [pc, 33]"""		2660740	0					
ANR	2661273	ExpressionStatement	"display ( ""str r1, [pc], 2"" )"	6683:1:142856:142882	2660740	113	True				
ANR	2661274	CallExpression	"display ( ""str r1, [pc], 2"" )"		2660740	0					
ANR	2661275	Callee	display		2660740	0					
ANR	2661276	Identifier	display		2660740	0					
ANR	2661277	ArgumentList	"""str r1, [pc], 2"""		2660740	1					
ANR	2661278	Argument	"""str r1, [pc], 2"""		2660740	0					
ANR	2661279	PrimaryExpression	"""str r1, [pc], 2"""		2660740	0					
ANR	2661280	ExpressionStatement	"display ( ""str r1, [pc, 3]"" )"	6684:1:142885:142911	2660740	114	True				
ANR	2661281	CallExpression	"display ( ""str r1, [pc, 3]"" )"		2660740	0					
ANR	2661282	Callee	display		2660740	0					
ANR	2661283	Identifier	display		2660740	0					
ANR	2661284	ArgumentList	"""str r1, [pc, 3]"""		2660740	1					
ANR	2661285	Argument	"""str r1, [pc, 3]"""		2660740	0					
ANR	2661286	PrimaryExpression	"""str r1, [pc, 3]"""		2660740	0					
ANR	2661287	ExpressionStatement	"display ( ""str r1, [pc, r4]"" )"	6685:1:142914:142941	2660740	115	True				
ANR	2661288	CallExpression	"display ( ""str r1, [pc, r4]"" )"		2660740	0					
ANR	2661289	Callee	display		2660740	0					
ANR	2661290	Identifier	display		2660740	0					
ANR	2661291	ArgumentList	"""str r1, [pc, r4]"""		2660740	1					
ANR	2661292	Argument	"""str r1, [pc, r4]"""		2660740	0					
ANR	2661293	PrimaryExpression	"""str r1, [pc, r4]"""		2660740	0					
ANR	2661294	ExpressionStatement	"display ( ""bx r3"" )"	6686:1:142944:142960	2660740	116	True				
ANR	2661295	CallExpression	"display ( ""bx r3"" )"		2660740	0					
ANR	2661296	Callee	display		2660740	0					
ANR	2661297	Identifier	display		2660740	0					
ANR	2661298	ArgumentList	"""bx r3"""		2660740	1					
ANR	2661299	Argument	"""bx r3"""		2660740	0					
ANR	2661300	PrimaryExpression	"""bx r3"""		2660740	0					
ANR	2661301	ExpressionStatement	"display ( ""bcc 33"" )"	6687:1:142963:142980	2660740	117	True				
ANR	2661302	CallExpression	"display ( ""bcc 33"" )"		2660740	0					
ANR	2661303	Callee	display		2660740	0					
ANR	2661304	Identifier	display		2660740	0					
ANR	2661305	ArgumentList	"""bcc 33"""		2660740	1					
ANR	2661306	Argument	"""bcc 33"""		2660740	0					
ANR	2661307	PrimaryExpression	"""bcc 33"""		2660740	0					
ANR	2661308	ExpressionStatement	"display ( ""blx r3"" )"	6688:1:142983:143000	2660740	118	True				
ANR	2661309	CallExpression	"display ( ""blx r3"" )"		2660740	0					
ANR	2661310	Callee	display		2660740	0					
ANR	2661311	Identifier	display		2660740	0					
ANR	2661312	ArgumentList	"""blx r3"""		2660740	1					
ANR	2661313	Argument	"""blx r3"""		2660740	0					
ANR	2661314	PrimaryExpression	"""blx r3"""		2660740	0					
ANR	2661315	ExpressionStatement	"display ( ""bne 0x1200"" )"	6689:1:143003:143024	2660740	119	True				
ANR	2661316	CallExpression	"display ( ""bne 0x1200"" )"		2660740	0					
ANR	2661317	Callee	display		2660740	0					
ANR	2661318	Identifier	display		2660740	0					
ANR	2661319	ArgumentList	"""bne 0x1200"""		2660740	1					
ANR	2661320	Argument	"""bne 0x1200"""		2660740	0					
ANR	2661321	PrimaryExpression	"""bne 0x1200"""		2660740	0					
ANR	2661322	ExpressionStatement	"display ( ""str r0, [r1]"" )"	6690:1:143027:143050	2660740	120	True				
ANR	2661323	CallExpression	"display ( ""str r0, [r1]"" )"		2660740	0					
ANR	2661324	Callee	display		2660740	0					
ANR	2661325	Identifier	display		2660740	0					
ANR	2661326	ArgumentList	"""str r0, [r1]"""		2660740	1					
ANR	2661327	Argument	"""str r0, [r1]"""		2660740	0					
ANR	2661328	PrimaryExpression	"""str r0, [r1]"""		2660740	0					
ANR	2661329	ExpressionStatement	"display ( ""push {fp,lr}"" )"	6691:1:143053:143076	2660740	121	True				
ANR	2661330	CallExpression	"display ( ""push {fp,lr}"" )"		2660740	0					
ANR	2661331	Callee	display		2660740	0					
ANR	2661332	Identifier	display		2660740	0					
ANR	2661333	ArgumentList	"""push {fp,lr}"""		2660740	1					
ANR	2661334	Argument	"""push {fp,lr}"""		2660740	0					
ANR	2661335	PrimaryExpression	"""push {fp,lr}"""		2660740	0					
ANR	2661336	ExpressionStatement	"display ( ""pop {fp,lr}"" )"	6692:1:143079:143101	2660740	122	True				
ANR	2661337	CallExpression	"display ( ""pop {fp,lr}"" )"		2660740	0					
ANR	2661338	Callee	display		2660740	0					
ANR	2661339	Identifier	display		2660740	0					
ANR	2661340	ArgumentList	"""pop {fp,lr}"""		2660740	1					
ANR	2661341	Argument	"""pop {fp,lr}"""		2660740	0					
ANR	2661342	PrimaryExpression	"""pop {fp,lr}"""		2660740	0					
ANR	2661343	ExpressionStatement	"display ( ""pop {pc}"" )"	6693:1:143104:143123	2660740	123	True				
ANR	2661344	CallExpression	"display ( ""pop {pc}"" )"		2660740	0					
ANR	2661345	Callee	display		2660740	0					
ANR	2661346	Identifier	display		2660740	0					
ANR	2661347	ArgumentList	"""pop {pc}"""		2660740	1					
ANR	2661348	Argument	"""pop {pc}"""		2660740	0					
ANR	2661349	PrimaryExpression	"""pop {pc}"""		2660740	0					
ANR	2661350	ExpressionStatement	"display ( ""andeq r7, r4, r0, lsr lr"" )"	6699:1:143257:143292	2660740	124	True				
ANR	2661351	CallExpression	"display ( ""andeq r7, r4, r0, lsr lr"" )"		2660740	0					
ANR	2661352	Callee	display		2660740	0					
ANR	2661353	Identifier	display		2660740	0					
ANR	2661354	ArgumentList	"""andeq r7, r4, r0, lsr lr"""		2660740	1					
ANR	2661355	Argument	"""andeq r7, r4, r0, lsr lr"""		2660740	0					
ANR	2661356	PrimaryExpression	"""andeq r7, r4, r0, lsr lr"""		2660740	0					
ANR	2661357	ExpressionStatement	"display ( ""andeq r6, r3, r0, ror lr"" )"	6700:1:143295:143330	2660740	125	True				
ANR	2661358	CallExpression	"display ( ""andeq r6, r3, r0, ror lr"" )"		2660740	0					
ANR	2661359	Callee	display		2660740	0					
ANR	2661360	Identifier	display		2660740	0					
ANR	2661361	ArgumentList	"""andeq r6, r3, r0, ror lr"""		2660740	1					
ANR	2661362	Argument	"""andeq r6, r3, r0, ror lr"""		2660740	0					
ANR	2661363	PrimaryExpression	"""andeq r6, r3, r0, ror lr"""		2660740	0					
ANR	2661364	ExpressionStatement	"display ( ""pop {r4,r5,r6,r7,pc}"" )"	6702:1:143388:143419	2660740	126	True				
ANR	2661365	CallExpression	"display ( ""pop {r4,r5,r6,r7,pc}"" )"		2660740	0					
ANR	2661366	Callee	display		2660740	0					
ANR	2661367	Identifier	display		2660740	0					
ANR	2661368	ArgumentList	"""pop {r4,r5,r6,r7,pc}"""		2660740	1					
ANR	2661369	Argument	"""pop {r4,r5,r6,r7,pc}"""		2660740	0					
ANR	2661370	PrimaryExpression	"""pop {r4,r5,r6,r7,pc}"""		2660740	0					
ANR	2661371	ExpressionStatement	"display ( ""blx r1"" )"	6706:1:143430:143447	2660740	127	True				
ANR	2661372	CallExpression	"display ( ""blx r1"" )"		2660740	0					
ANR	2661373	Callee	display		2660740	0					
ANR	2661374	Identifier	display		2660740	0					
ANR	2661375	ArgumentList	"""blx r1"""		2660740	1					
ANR	2661376	Argument	"""blx r1"""		2660740	0					
ANR	2661377	PrimaryExpression	"""blx r1"""		2660740	0					
ANR	2661378	ExpressionStatement	"display ( ""blx 0x8048"" )"	6707:1:143450:143471	2660740	128	True				
ANR	2661379	CallExpression	"display ( ""blx 0x8048"" )"		2660740	0					
ANR	2661380	Callee	display		2660740	0					
ANR	2661381	Identifier	display		2660740	0					
ANR	2661382	ArgumentList	"""blx 0x8048"""		2660740	1					
ANR	2661383	Argument	"""blx 0x8048"""		2660740	0					
ANR	2661384	PrimaryExpression	"""blx 0x8048"""		2660740	0					
ANR	2661385	ExpressionStatement	"display ( ""b 0x123"" )"	6711:1:143488:143506	2660740	129	True				
ANR	2661386	CallExpression	"display ( ""b 0x123"" )"		2660740	0					
ANR	2661387	Callee	display		2660740	0					
ANR	2661388	Identifier	display		2660740	0					
ANR	2661389	ArgumentList	"""b 0x123"""		2660740	1					
ANR	2661390	Argument	"""b 0x123"""		2660740	0					
ANR	2661391	PrimaryExpression	"""b 0x123"""		2660740	0					
ANR	2661392	ExpressionStatement	"display ( ""bl 0x123"" )"	6712:1:143509:143528	2660740	130	True				
ANR	2661393	CallExpression	"display ( ""bl 0x123"" )"		2660740	0					
ANR	2661394	Callee	display		2660740	0					
ANR	2661395	Identifier	display		2660740	0					
ANR	2661396	ArgumentList	"""bl 0x123"""		2660740	1					
ANR	2661397	Argument	"""bl 0x123"""		2660740	0					
ANR	2661398	PrimaryExpression	"""bl 0x123"""		2660740	0					
ANR	2661399	ExpressionStatement	"display ( ""blt 0x123"" )"	6713:1:143531:143551	2660740	131	True				
ANR	2661400	CallExpression	"display ( ""blt 0x123"" )"		2660740	0					
ANR	2661401	Callee	display		2660740	0					
ANR	2661402	Identifier	display		2660740	0					
ANR	2661403	ArgumentList	"""blt 0x123"""		2660740	1					
ANR	2661404	Argument	"""blt 0x123"""		2660740	0					
ANR	2661405	PrimaryExpression	"""blt 0x123"""		2660740	0					
ANR	2661406	ReturnStatement	return 0 ;	6715:1:143583:143591	2660740	132	True				
ANR	2661407	PrimaryExpression	0		2660740	0					
ANR	2661408	ReturnType	int		2660740	1					
ANR	2661409	Identifier	main		2660740	2					
ANR	2661410	ParameterList			2660740	3					
ANR	2661411	CFGEntryNode	ENTRY		2660740		True				
ANR	2661412	CFGExitNode	EXIT		2660740		True				
