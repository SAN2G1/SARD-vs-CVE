command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2512017	File	data/converged/CVE-2019-16718~_radare2/libr_anal_sign.c								
ANR	2512018	DeclStmt									
ANR	2512019	Decl							include < r_hash . h >	include < r_hash . h > ( r_sign )	R_LIB_VERSION
ANR	2512020	Function	getRealRef	15:0:298:645							
ANR	2512021	FunctionDef	"getRealRef (RCore * core , ut64 off)"		2512020	0					
ANR	2512022	CompoundStatement		15:46:344:645	2512020	0					
ANR	2512023	IdentifierDeclStatement	RFlagItem * item ;	16:1:347:362	2512020	0	True				
ANR	2512024	IdentifierDecl	* item		2512020	0					
ANR	2512025	IdentifierDeclType	RFlagItem *		2512020	0					
ANR	2512026	Identifier	item		2512020	1					
ANR	2512027	IdentifierDeclStatement	RListIter * iter ;	17:1:365:380	2512020	1	True				
ANR	2512028	IdentifierDecl	* iter		2512020	0					
ANR	2512029	IdentifierDeclType	RListIter *		2512020	0					
ANR	2512030	Identifier	iter		2512020	1					
ANR	2512031	IdentifierDeclStatement	"const RList * list = r_flag_get_list ( core -> flags , off ) ;"	19:1:384:438	2512020	2	True				
ANR	2512032	IdentifierDecl	"* list = r_flag_get_list ( core -> flags , off )"		2512020	0					
ANR	2512033	IdentifierDeclType	const RList *		2512020	0					
ANR	2512034	Identifier	list		2512020	1					
ANR	2512035	AssignmentExpression	"* list = r_flag_get_list ( core -> flags , off )"		2512020	2		=			
ANR	2512036	Identifier	list		2512020	0					
ANR	2512037	CallExpression	"r_flag_get_list ( core -> flags , off )"		2512020	1					
ANR	2512038	Callee	r_flag_get_list		2512020	0					
ANR	2512039	Identifier	r_flag_get_list		2512020	0					
ANR	2512040	ArgumentList	core -> flags		2512020	1					
ANR	2512041	Argument	core -> flags		2512020	0					
ANR	2512042	PtrMemberAccess	core -> flags		2512020	0					
ANR	2512043	Identifier	core		2512020	0					
ANR	2512044	Identifier	flags		2512020	1					
ANR	2512045	Argument	off		2512020	1					
ANR	2512046	Identifier	off		2512020	0					
ANR	2512047	IfStatement	if ( ! list )		2512020	3					
ANR	2512048	Condition	! list	20:5:445:449	2512020	0	True				
ANR	2512049	UnaryOperationExpression	! list		2512020	0					
ANR	2512050	UnaryOperator	!		2512020	0					
ANR	2512051	Identifier	list		2512020	1					
ANR	2512052	CompoundStatement		6:12:107:107	2512020	1					
ANR	2512053	ReturnStatement	return NULL ;	21:2:456:467	2512020	0	True				
ANR	2512054	Identifier	NULL		2512020	0					
ANR	2512055	Statement	r_list_foreach	24:1:474:487	2512020	4	True				
ANR	2512056	Statement	(	24:16:489:489	2512020	5	True				
ANR	2512057	Statement	list	24:17:490:493	2512020	6	True				
ANR	2512058	Statement	","	24:21:494:494	2512020	7	True				
ANR	2512059	Statement	iter	24:23:496:499	2512020	8	True				
ANR	2512060	Statement	","	24:27:500:500	2512020	9	True				
ANR	2512061	Statement	item	24:29:502:505	2512020	10	True				
ANR	2512062	Statement	)	24:33:506:506	2512020	11	True				
ANR	2512063	CompoundStatement		10:35:163:163	2512020	12					
ANR	2512064	IfStatement	if ( ! item -> name )		2512020	0					
ANR	2512065	Condition	! item -> name	25:6:516:526	2512020	0	True				
ANR	2512066	UnaryOperationExpression	! item -> name		2512020	0					
ANR	2512067	UnaryOperator	!		2512020	0					
ANR	2512068	PtrMemberAccess	item -> name		2512020	1					
ANR	2512069	Identifier	item		2512020	0					
ANR	2512070	Identifier	name		2512020	1					
ANR	2512071	CompoundStatement		11:19:184:184	2512020	1					
ANR	2512072	ContinueStatement	continue ;	26:3:534:542	2512020	0	True				
ANR	2512073	IfStatement	"if ( strncmp ( item -> name , ""sym."" , 4 ) )"		2512020	1					
ANR	2512074	Condition	"strncmp ( item -> name , ""sym."" , 4 )"	28:6:554:584	2512020	0	True				
ANR	2512075	CallExpression	"strncmp ( item -> name , ""sym."" , 4 )"		2512020	0					
ANR	2512076	Callee	strncmp		2512020	0					
ANR	2512077	Identifier	strncmp		2512020	0					
ANR	2512078	ArgumentList	item -> name		2512020	1					
ANR	2512079	Argument	item -> name		2512020	0					
ANR	2512080	PtrMemberAccess	item -> name		2512020	0					
ANR	2512081	Identifier	item		2512020	0					
ANR	2512082	Identifier	name		2512020	1					
ANR	2512083	Argument	"""sym."""		2512020	1					
ANR	2512084	PrimaryExpression	"""sym."""		2512020	0					
ANR	2512085	Argument	4		2512020	2					
ANR	2512086	PrimaryExpression	4		2512020	0					
ANR	2512087	CompoundStatement		14:39:242:242	2512020	1					
ANR	2512088	ContinueStatement	continue ;	29:3:592:600	2512020	0	True				
ANR	2512089	ReturnStatement	return item -> name ;	31:2:608:625	2512020	2	True				
ANR	2512090	PtrMemberAccess	item -> name		2512020	0					
ANR	2512091	Identifier	item		2512020	0					
ANR	2512092	Identifier	name		2512020	1					
ANR	2512093	ReturnStatement	return NULL ;	34:1:632:643	2512020	13	True				
ANR	2512094	Identifier	NULL		2512020	0					
ANR	2512095	ReturnType	const char *		2512020	1					
ANR	2512096	Identifier	getRealRef		2512020	2					
ANR	2512097	ParameterList	"RCore * core , ut64 off"		2512020	3					
ANR	2512098	Parameter	RCore * core	15:23:321:331	2512020	0	True				
ANR	2512099	ParameterType	RCore *		2512020	0					
ANR	2512100	Identifier	core		2512020	1					
ANR	2512101	Parameter	ut64 off	15:36:334:341	2512020	1	True				
ANR	2512102	ParameterType	ut64		2512020	0					
ANR	2512103	Identifier	off		2512020	1					
ANR	2512104	CFGEntryNode	ENTRY		2512020		True				
ANR	2512105	CFGExitNode	EXIT		2512020		True				
ANR	2512106	CFGErrorNode	ERROR		2512020		True				
ANR	2512107	Symbol	core		2512020						
ANR	2512108	Symbol	strncmp		2512020						
ANR	2512109	Symbol	item		2512020						
ANR	2512110	Symbol	NULL		2512020						
ANR	2512111	Symbol	* item		2512020						
ANR	2512112	Symbol	item -> name		2512020						
ANR	2512113	Symbol	* core		2512020						
ANR	2512114	Symbol	iter		2512020						
ANR	2512115	Symbol	core -> flags		2512020						
ANR	2512116	Symbol	list		2512020						
ANR	2512117	Symbol	r_flag_get_list		2512020						
ANR	2512118	Symbol	off		2512020						
ANR	2512119	Function	r_sign_fcn_vars	37:0:648:1553							
ANR	2512120	FunctionDef	"r_sign_fcn_vars (RAnal * a , RAnalFunction * fcn)"		2512119	0					
ANR	2512121	CompoundStatement		37:59:707:1553	2512119	0					
ANR	2512122	ExpressionStatement	"r_return_val_if_fail ( a && fcn , NULL )"	38:1:710:747	2512119	0	True				
ANR	2512123	CallExpression	"r_return_val_if_fail ( a && fcn , NULL )"		2512119	0					
ANR	2512124	Callee	r_return_val_if_fail		2512119	0					
ANR	2512125	Identifier	r_return_val_if_fail		2512119	0					
ANR	2512126	ArgumentList	a && fcn		2512119	1					
ANR	2512127	Argument	a && fcn		2512119	0					
ANR	2512128	AndExpression	a && fcn		2512119	0		&&			
ANR	2512129	Identifier	a		2512119	0					
ANR	2512130	Identifier	fcn		2512119	1					
ANR	2512131	Argument	NULL		2512119	1					
ANR	2512132	Identifier	NULL		2512119	0					
ANR	2512133	IdentifierDeclStatement	RCore * core = a -> coreb . core ;	40:1:751:778	2512119	1	True				
ANR	2512134	IdentifierDecl	* core = a -> coreb . core		2512119	0					
ANR	2512135	IdentifierDeclType	RCore *		2512119	0					
ANR	2512136	Identifier	core		2512119	1					
ANR	2512137	AssignmentExpression	* core = a -> coreb . core		2512119	2		=			
ANR	2512138	Identifier	core		2512119	0					
ANR	2512139	MemberAccess	a -> coreb . core		2512119	1					
ANR	2512140	PtrMemberAccess	a -> coreb		2512119	0					
ANR	2512141	Identifier	a		2512119	0					
ANR	2512142	Identifier	coreb		2512119	1					
ANR	2512143	Identifier	core		2512119	1					
ANR	2512144	IfStatement	if ( ! core )		2512119	2					
ANR	2512145	Condition	! core	42:5:786:790	2512119	0	True				
ANR	2512146	UnaryOperationExpression	! core		2512119	0					
ANR	2512147	UnaryOperator	!		2512119	0					
ANR	2512148	Identifier	core		2512119	1					
ANR	2512149	CompoundStatement		6:12:85:85	2512119	1					
ANR	2512150	ReturnStatement	return NULL ;	43:2:797:808	2512119	0	True				
ANR	2512151	Identifier	NULL		2512119	0					
ANR	2512152	IdentifierDeclStatement	RListIter * iter ;	46:1:815:830	2512119	3	True				
ANR	2512153	IdentifierDecl	* iter		2512119	0					
ANR	2512154	IdentifierDeclType	RListIter *		2512119	0					
ANR	2512155	Identifier	iter		2512119	1					
ANR	2512156	IdentifierDeclStatement	RAnalVar * var ;	47:1:833:846	2512119	4	True				
ANR	2512157	IdentifierDecl	* var		2512119	0					
ANR	2512158	IdentifierDeclType	RAnalVar *		2512119	0					
ANR	2512159	Identifier	var		2512119	1					
ANR	2512160	IdentifierDeclStatement	RList * ret = r_list_newf ( ( RListFree ) free ) ;	48:1:849:892	2512119	5	True				
ANR	2512161	IdentifierDecl	* ret = r_list_newf ( ( RListFree ) free )		2512119	0					
ANR	2512162	IdentifierDeclType	RList *		2512119	0					
ANR	2512163	Identifier	ret		2512119	1					
ANR	2512164	AssignmentExpression	* ret = r_list_newf ( ( RListFree ) free )		2512119	2		=			
ANR	2512165	Identifier	ret		2512119	0					
ANR	2512166	CallExpression	r_list_newf ( ( RListFree ) free )		2512119	1					
ANR	2512167	Callee	r_list_newf		2512119	0					
ANR	2512168	Identifier	r_list_newf		2512119	0					
ANR	2512169	ArgumentList	( RListFree ) free		2512119	1					
ANR	2512170	Argument	( RListFree ) free		2512119	0					
ANR	2512171	CastExpression	( RListFree ) free		2512119	0					
ANR	2512172	CastTarget	RListFree		2512119	0					
ANR	2512173	Identifier	free		2512119	1					
ANR	2512174	IfStatement	if ( ! ret )		2512119	6					
ANR	2512175	Condition	! ret	49:5:899:902	2512119	0	True				
ANR	2512176	UnaryOperationExpression	! ret		2512119	0					
ANR	2512177	UnaryOperator	!		2512119	0					
ANR	2512178	Identifier	ret		2512119	1					
ANR	2512179	CompoundStatement		13:11:197:197	2512119	1					
ANR	2512180	ReturnStatement	return NULL ;	50:2:909:920	2512119	0	True				
ANR	2512181	Identifier	NULL		2512119	0					
ANR	2512182	IdentifierDeclStatement	"RList * reg_vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_REG ) ;"	52:8:933:1005	2512119	7	True				
ANR	2512183	IdentifierDecl	"* reg_vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_REG )"		2512119	0					
ANR	2512184	IdentifierDeclType	RList *		2512119	0					
ANR	2512185	Identifier	reg_vars		2512119	1					
ANR	2512186	AssignmentExpression	"* reg_vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_REG )"		2512119	2		=			
ANR	2512187	Identifier	reg_vars		2512119	0					
ANR	2512188	CallExpression	"r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_REG )"		2512119	1					
ANR	2512189	Callee	r_anal_var_list		2512119	0					
ANR	2512190	Identifier	r_anal_var_list		2512119	0					
ANR	2512191	ArgumentList	core -> anal		2512119	1					
ANR	2512192	Argument	core -> anal		2512119	0					
ANR	2512193	PtrMemberAccess	core -> anal		2512119	0					
ANR	2512194	Identifier	core		2512119	0					
ANR	2512195	Identifier	anal		2512119	1					
ANR	2512196	Argument	fcn		2512119	1					
ANR	2512197	Identifier	fcn		2512119	0					
ANR	2512198	Argument	R_ANAL_VAR_KIND_REG		2512119	2					
ANR	2512199	Identifier	R_ANAL_VAR_KIND_REG		2512119	0					
ANR	2512200	IdentifierDeclStatement	"RList * spv_vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_SPV ) ;"	53:8:1015:1087	2512119	8	True				
ANR	2512201	IdentifierDecl	"* spv_vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_SPV )"		2512119	0					
ANR	2512202	IdentifierDeclType	RList *		2512119	0					
ANR	2512203	Identifier	spv_vars		2512119	1					
ANR	2512204	AssignmentExpression	"* spv_vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_SPV )"		2512119	2		=			
ANR	2512205	Identifier	spv_vars		2512119	0					
ANR	2512206	CallExpression	"r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_SPV )"		2512119	1					
ANR	2512207	Callee	r_anal_var_list		2512119	0					
ANR	2512208	Identifier	r_anal_var_list		2512119	0					
ANR	2512209	ArgumentList	core -> anal		2512119	1					
ANR	2512210	Argument	core -> anal		2512119	0					
ANR	2512211	PtrMemberAccess	core -> anal		2512119	0					
ANR	2512212	Identifier	core		2512119	0					
ANR	2512213	Identifier	anal		2512119	1					
ANR	2512214	Argument	fcn		2512119	1					
ANR	2512215	Identifier	fcn		2512119	0					
ANR	2512216	Argument	R_ANAL_VAR_KIND_SPV		2512119	2					
ANR	2512217	Identifier	R_ANAL_VAR_KIND_SPV		2512119	0					
ANR	2512218	IdentifierDeclStatement	"RList * bpv_vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_BPV ) ;"	54:8:1097:1169	2512119	9	True				
ANR	2512219	IdentifierDecl	"* bpv_vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_BPV )"		2512119	0					
ANR	2512220	IdentifierDeclType	RList *		2512119	0					
ANR	2512221	Identifier	bpv_vars		2512119	1					
ANR	2512222	AssignmentExpression	"* bpv_vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_BPV )"		2512119	2		=			
ANR	2512223	Identifier	bpv_vars		2512119	0					
ANR	2512224	CallExpression	"r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_BPV )"		2512119	1					
ANR	2512225	Callee	r_anal_var_list		2512119	0					
ANR	2512226	Identifier	r_anal_var_list		2512119	0					
ANR	2512227	ArgumentList	core -> anal		2512119	1					
ANR	2512228	Argument	core -> anal		2512119	0					
ANR	2512229	PtrMemberAccess	core -> anal		2512119	0					
ANR	2512230	Identifier	core		2512119	0					
ANR	2512231	Identifier	anal		2512119	1					
ANR	2512232	Argument	fcn		2512119	1					
ANR	2512233	Identifier	fcn		2512119	0					
ANR	2512234	Argument	R_ANAL_VAR_KIND_BPV		2512119	2					
ANR	2512235	Identifier	R_ANAL_VAR_KIND_BPV		2512119	0					
ANR	2512236	Statement	r_list_foreach	55:1:1172:1185	2512119	10	True				
ANR	2512237	Statement	(	55:16:1187:1187	2512119	11	True				
ANR	2512238	Statement	bpv_vars	55:17:1188:1195	2512119	12	True				
ANR	2512239	Statement	","	55:25:1196:1196	2512119	13	True				
ANR	2512240	Statement	iter	55:27:1198:1201	2512119	14	True				
ANR	2512241	Statement	","	55:31:1202:1202	2512119	15	True				
ANR	2512242	Statement	var	55:33:1204:1206	2512119	16	True				
ANR	2512243	Statement	)	55:36:1207:1207	2512119	17	True				
ANR	2512244	CompoundStatement		19:38:501:501	2512119	18					
ANR	2512245	ExpressionStatement	"r_list_append ( ret , r_str_newf ( ""b%d"" , var -> delta ) )"	56:2:1213:1264	2512119	0	True				
ANR	2512246	CallExpression	"r_list_append ( ret , r_str_newf ( ""b%d"" , var -> delta ) )"		2512119	0					
ANR	2512247	Callee	r_list_append		2512119	0					
ANR	2512248	Identifier	r_list_append		2512119	0					
ANR	2512249	ArgumentList	ret		2512119	1					
ANR	2512250	Argument	ret		2512119	0					
ANR	2512251	Identifier	ret		2512119	0					
ANR	2512252	Argument	"r_str_newf ( ""b%d"" , var -> delta )"		2512119	1					
ANR	2512253	CallExpression	"r_str_newf ( ""b%d"" , var -> delta )"		2512119	0					
ANR	2512254	Callee	r_str_newf		2512119	0					
ANR	2512255	Identifier	r_str_newf		2512119	0					
ANR	2512256	ArgumentList	"""b%d"""		2512119	1					
ANR	2512257	Argument	"""b%d"""		2512119	0					
ANR	2512258	PrimaryExpression	"""b%d"""		2512119	0					
ANR	2512259	Argument	var -> delta		2512119	1					
ANR	2512260	PtrMemberAccess	var -> delta		2512119	0					
ANR	2512261	Identifier	var		2512119	0					
ANR	2512262	Identifier	delta		2512119	1					
ANR	2512263	Statement	r_list_foreach	58:1:1270:1283	2512119	19	True				
ANR	2512264	Statement	(	58:16:1285:1285	2512119	20	True				
ANR	2512265	Statement	spv_vars	58:17:1286:1293	2512119	21	True				
ANR	2512266	Statement	","	58:25:1294:1294	2512119	22	True				
ANR	2512267	Statement	iter	58:27:1296:1299	2512119	23	True				
ANR	2512268	Statement	","	58:31:1300:1300	2512119	24	True				
ANR	2512269	Statement	var	58:33:1302:1304	2512119	25	True				
ANR	2512270	Statement	)	58:36:1305:1305	2512119	26	True				
ANR	2512271	CompoundStatement		22:38:599:599	2512119	27					
ANR	2512272	ExpressionStatement	"r_list_append ( ret , r_str_newf ( ""s%d"" , var -> delta ) )"	59:2:1311:1362	2512119	0	True				
ANR	2512273	CallExpression	"r_list_append ( ret , r_str_newf ( ""s%d"" , var -> delta ) )"		2512119	0					
ANR	2512274	Callee	r_list_append		2512119	0					
ANR	2512275	Identifier	r_list_append		2512119	0					
ANR	2512276	ArgumentList	ret		2512119	1					
ANR	2512277	Argument	ret		2512119	0					
ANR	2512278	Identifier	ret		2512119	0					
ANR	2512279	Argument	"r_str_newf ( ""s%d"" , var -> delta )"		2512119	1					
ANR	2512280	CallExpression	"r_str_newf ( ""s%d"" , var -> delta )"		2512119	0					
ANR	2512281	Callee	r_str_newf		2512119	0					
ANR	2512282	Identifier	r_str_newf		2512119	0					
ANR	2512283	ArgumentList	"""s%d"""		2512119	1					
ANR	2512284	Argument	"""s%d"""		2512119	0					
ANR	2512285	PrimaryExpression	"""s%d"""		2512119	0					
ANR	2512286	Argument	var -> delta		2512119	1					
ANR	2512287	PtrMemberAccess	var -> delta		2512119	0					
ANR	2512288	Identifier	var		2512119	0					
ANR	2512289	Identifier	delta		2512119	1					
ANR	2512290	Statement	r_list_foreach	61:1:1368:1381	2512119	28	True				
ANR	2512291	Statement	(	61:16:1383:1383	2512119	29	True				
ANR	2512292	Statement	reg_vars	61:17:1384:1391	2512119	30	True				
ANR	2512293	Statement	","	61:25:1392:1392	2512119	31	True				
ANR	2512294	Statement	iter	61:27:1394:1397	2512119	32	True				
ANR	2512295	Statement	","	61:31:1398:1398	2512119	33	True				
ANR	2512296	Statement	var	61:33:1400:1402	2512119	34	True				
ANR	2512297	Statement	)	61:36:1403:1403	2512119	35	True				
ANR	2512298	CompoundStatement		25:38:697:697	2512119	36					
ANR	2512299	ExpressionStatement	"r_list_append ( ret , r_str_newf ( ""r%d"" , var -> delta ) )"	62:2:1409:1460	2512119	0	True				
ANR	2512300	CallExpression	"r_list_append ( ret , r_str_newf ( ""r%d"" , var -> delta ) )"		2512119	0					
ANR	2512301	Callee	r_list_append		2512119	0					
ANR	2512302	Identifier	r_list_append		2512119	0					
ANR	2512303	ArgumentList	ret		2512119	1					
ANR	2512304	Argument	ret		2512119	0					
ANR	2512305	Identifier	ret		2512119	0					
ANR	2512306	Argument	"r_str_newf ( ""r%d"" , var -> delta )"		2512119	1					
ANR	2512307	CallExpression	"r_str_newf ( ""r%d"" , var -> delta )"		2512119	0					
ANR	2512308	Callee	r_str_newf		2512119	0					
ANR	2512309	Identifier	r_str_newf		2512119	0					
ANR	2512310	ArgumentList	"""r%d"""		2512119	1					
ANR	2512311	Argument	"""r%d"""		2512119	0					
ANR	2512312	PrimaryExpression	"""r%d"""		2512119	0					
ANR	2512313	Argument	var -> delta		2512119	1					
ANR	2512314	PtrMemberAccess	var -> delta		2512119	0					
ANR	2512315	Identifier	var		2512119	0					
ANR	2512316	Identifier	delta		2512119	1					
ANR	2512317	ExpressionStatement	r_list_free ( reg_vars )	64:1:1466:1488	2512119	37	True				
ANR	2512318	CallExpression	r_list_free ( reg_vars )		2512119	0					
ANR	2512319	Callee	r_list_free		2512119	0					
ANR	2512320	Identifier	r_list_free		2512119	0					
ANR	2512321	ArgumentList	reg_vars		2512119	1					
ANR	2512322	Argument	reg_vars		2512119	0					
ANR	2512323	Identifier	reg_vars		2512119	0					
ANR	2512324	ExpressionStatement	r_list_free ( bpv_vars )	65:1:1491:1513	2512119	38	True				
ANR	2512325	CallExpression	r_list_free ( bpv_vars )		2512119	0					
ANR	2512326	Callee	r_list_free		2512119	0					
ANR	2512327	Identifier	r_list_free		2512119	0					
ANR	2512328	ArgumentList	bpv_vars		2512119	1					
ANR	2512329	Argument	bpv_vars		2512119	0					
ANR	2512330	Identifier	bpv_vars		2512119	0					
ANR	2512331	ExpressionStatement	r_list_free ( spv_vars )	66:1:1516:1538	2512119	39	True				
ANR	2512332	CallExpression	r_list_free ( spv_vars )		2512119	0					
ANR	2512333	Callee	r_list_free		2512119	0					
ANR	2512334	Identifier	r_list_free		2512119	0					
ANR	2512335	ArgumentList	spv_vars		2512119	1					
ANR	2512336	Argument	spv_vars		2512119	0					
ANR	2512337	Identifier	spv_vars		2512119	0					
ANR	2512338	ReturnStatement	return ret ;	67:1:1541:1551	2512119	40	True				
ANR	2512339	Identifier	ret		2512119	0					
ANR	2512340	ReturnType	R_API RList *		2512119	1					
ANR	2512341	Identifier	r_sign_fcn_vars		2512119	2					
ANR	2512342	ParameterList	"RAnal * a , RAnalFunction * fcn"		2512119	3					
ANR	2512343	Parameter	RAnal * a	37:29:677:684	2512119	0	True				
ANR	2512344	ParameterType	RAnal *		2512119	0					
ANR	2512345	Identifier	a		2512119	1					
ANR	2512346	Parameter	RAnalFunction * fcn	37:39:687:704	2512119	1	True				
ANR	2512347	ParameterType	RAnalFunction *		2512119	0					
ANR	2512348	Identifier	fcn		2512119	1					
ANR	2512349	CFGEntryNode	ENTRY		2512119		True				
ANR	2512350	CFGExitNode	EXIT		2512119		True				
ANR	2512351	Symbol	ret		2512119						
ANR	2512352	Symbol	a		2512119						
ANR	2512353	Symbol	NULL		2512119						
ANR	2512354	Symbol	a -> coreb . core		2512119						
ANR	2512355	Symbol	R_ANAL_VAR_KIND_SPV		2512119						
ANR	2512356	Symbol	r_list_newf		2512119						
ANR	2512357	Symbol	var		2512119						
ANR	2512358	Symbol	reg_vars		2512119						
ANR	2512359	Symbol	a -> coreb		2512119						
ANR	2512360	Symbol	* core		2512119						
ANR	2512361	Symbol	iter		2512119						
ANR	2512362	Symbol	* a		2512119						
ANR	2512363	Symbol	R_ANAL_VAR_KIND_BPV		2512119						
ANR	2512364	Symbol	r_str_newf		2512119						
ANR	2512365	Symbol	core -> anal		2512119						
ANR	2512366	Symbol	var -> delta		2512119						
ANR	2512367	Symbol	fcn		2512119						
ANR	2512368	Symbol	core		2512119						
ANR	2512369	Symbol	* var		2512119						
ANR	2512370	Symbol	r_anal_var_list		2512119						
ANR	2512371	Symbol	bpv_vars		2512119						
ANR	2512372	Symbol	free		2512119						
ANR	2512373	Symbol	spv_vars		2512119						
ANR	2512374	Symbol	R_ANAL_VAR_KIND_REG		2512119						
ANR	2512375	Function	r_sign_fcn_xrefs	70:0:1556:2145							
ANR	2512376	FunctionDef	"r_sign_fcn_xrefs (RAnal * a , RAnalFunction * fcn)"		2512375	0					
ANR	2512377	CompoundStatement		70:60:1616:2145	2512375	0					
ANR	2512378	IdentifierDeclStatement	RListIter * iter = NULL ;	71:1:1619:1641	2512375	0	True				
ANR	2512379	IdentifierDecl	* iter = NULL		2512375	0					
ANR	2512380	IdentifierDeclType	RListIter *		2512375	0					
ANR	2512381	Identifier	iter		2512375	1					
ANR	2512382	AssignmentExpression	* iter = NULL		2512375	2		=			
ANR	2512383	Identifier	NULL		2512375	0					
ANR	2512384	Identifier	NULL		2512375	1					
ANR	2512385	IdentifierDeclStatement	RAnalRef * refi = NULL ;	72:1:1644:1665	2512375	1	True				
ANR	2512386	IdentifierDecl	* refi = NULL		2512375	0					
ANR	2512387	IdentifierDeclType	RAnalRef *		2512375	0					
ANR	2512388	Identifier	refi		2512375	1					
ANR	2512389	AssignmentExpression	* refi = NULL		2512375	2		=			
ANR	2512390	Identifier	NULL		2512375	0					
ANR	2512391	Identifier	NULL		2512375	1					
ANR	2512392	ExpressionStatement	"r_return_val_if_fail ( a && fcn , NULL )"	74:1:1669:1706	2512375	2	True				
ANR	2512393	CallExpression	"r_return_val_if_fail ( a && fcn , NULL )"		2512375	0					
ANR	2512394	Callee	r_return_val_if_fail		2512375	0					
ANR	2512395	Identifier	r_return_val_if_fail		2512375	0					
ANR	2512396	ArgumentList	a && fcn		2512375	1					
ANR	2512397	Argument	a && fcn		2512375	0					
ANR	2512398	AndExpression	a && fcn		2512375	0		&&			
ANR	2512399	Identifier	a		2512375	0					
ANR	2512400	Identifier	fcn		2512375	1					
ANR	2512401	Argument	NULL		2512375	1					
ANR	2512402	Identifier	NULL		2512375	0					
ANR	2512403	IdentifierDeclStatement	RCore * core = a -> coreb . core ;	76:1:1710:1737	2512375	3	True				
ANR	2512404	IdentifierDecl	* core = a -> coreb . core		2512375	0					
ANR	2512405	IdentifierDeclType	RCore *		2512375	0					
ANR	2512406	Identifier	core		2512375	1					
ANR	2512407	AssignmentExpression	* core = a -> coreb . core		2512375	2		=			
ANR	2512408	Identifier	core		2512375	0					
ANR	2512409	MemberAccess	a -> coreb . core		2512375	1					
ANR	2512410	PtrMemberAccess	a -> coreb		2512375	0					
ANR	2512411	Identifier	a		2512375	0					
ANR	2512412	Identifier	coreb		2512375	1					
ANR	2512413	Identifier	core		2512375	1					
ANR	2512414	IfStatement	if ( ! core )		2512375	4					
ANR	2512415	Condition	! core	78:5:1745:1749	2512375	0	True				
ANR	2512416	UnaryOperationExpression	! core		2512375	0					
ANR	2512417	UnaryOperator	!		2512375	0					
ANR	2512418	Identifier	core		2512375	1					
ANR	2512419	CompoundStatement		9:12:135:135	2512375	1					
ANR	2512420	ReturnStatement	return NULL ;	79:2:1756:1767	2512375	0	True				
ANR	2512421	Identifier	NULL		2512375	0					
ANR	2512422	IdentifierDeclStatement	RList * ret = r_list_newf ( ( RListFree ) free ) ;	82:1:1774:1817	2512375	5	True				
ANR	2512423	IdentifierDecl	* ret = r_list_newf ( ( RListFree ) free )		2512375	0					
ANR	2512424	IdentifierDeclType	RList *		2512375	0					
ANR	2512425	Identifier	ret		2512375	1					
ANR	2512426	AssignmentExpression	* ret = r_list_newf ( ( RListFree ) free )		2512375	2		=			
ANR	2512427	Identifier	ret		2512375	0					
ANR	2512428	CallExpression	r_list_newf ( ( RListFree ) free )		2512375	1					
ANR	2512429	Callee	r_list_newf		2512375	0					
ANR	2512430	Identifier	r_list_newf		2512375	0					
ANR	2512431	ArgumentList	( RListFree ) free		2512375	1					
ANR	2512432	Argument	( RListFree ) free		2512375	0					
ANR	2512433	CastExpression	( RListFree ) free		2512375	0					
ANR	2512434	CastTarget	RListFree		2512375	0					
ANR	2512435	Identifier	free		2512375	1					
ANR	2512436	IdentifierDeclStatement	"RList * xrefs = r_anal_fcn_get_xrefs ( a , fcn ) ;"	83:1:1820:1864	2512375	6	True				
ANR	2512437	IdentifierDecl	"* xrefs = r_anal_fcn_get_xrefs ( a , fcn )"		2512375	0					
ANR	2512438	IdentifierDeclType	RList *		2512375	0					
ANR	2512439	Identifier	xrefs		2512375	1					
ANR	2512440	AssignmentExpression	"* xrefs = r_anal_fcn_get_xrefs ( a , fcn )"		2512375	2		=			
ANR	2512441	Identifier	xrefs		2512375	0					
ANR	2512442	CallExpression	"r_anal_fcn_get_xrefs ( a , fcn )"		2512375	1					
ANR	2512443	Callee	r_anal_fcn_get_xrefs		2512375	0					
ANR	2512444	Identifier	r_anal_fcn_get_xrefs		2512375	0					
ANR	2512445	ArgumentList	a		2512375	1					
ANR	2512446	Argument	a		2512375	0					
ANR	2512447	Identifier	a		2512375	0					
ANR	2512448	Argument	fcn		2512375	1					
ANR	2512449	Identifier	fcn		2512375	0					
ANR	2512450	Statement	r_list_foreach	84:1:1867:1880	2512375	7	True				
ANR	2512451	Statement	(	84:16:1882:1882	2512375	8	True				
ANR	2512452	Statement	xrefs	84:17:1883:1887	2512375	9	True				
ANR	2512453	Statement	","	84:22:1888:1888	2512375	10	True				
ANR	2512454	Statement	iter	84:24:1890:1893	2512375	11	True				
ANR	2512455	Statement	","	84:28:1894:1894	2512375	12	True				
ANR	2512456	Statement	refi	84:30:1896:1899	2512375	13	True				
ANR	2512457	Statement	)	84:34:1900:1900	2512375	14	True				
ANR	2512458	CompoundStatement		15:36:285:285	2512375	15					
ANR	2512459	IfStatement	if ( refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL )		2512375	0					
ANR	2512460	Condition	refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL	85:6:1910:1981	2512375	0	True				
ANR	2512461	OrExpression	refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL		2512375	0		||			
ANR	2512462	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_CODE		2512375	0		==			
ANR	2512463	PtrMemberAccess	refi -> type		2512375	0					
ANR	2512464	Identifier	refi		2512375	0					
ANR	2512465	Identifier	type		2512375	1					
ANR	2512466	Identifier	R_ANAL_REF_TYPE_CODE		2512375	1					
ANR	2512467	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_CALL		2512375	1		==			
ANR	2512468	PtrMemberAccess	refi -> type		2512375	0					
ANR	2512469	Identifier	refi		2512375	0					
ANR	2512470	Identifier	type		2512375	1					
ANR	2512471	Identifier	R_ANAL_REF_TYPE_CALL		2512375	1					
ANR	2512472	CompoundStatement		17:3:372:420	2512375	1					
ANR	2512473	IdentifierDeclStatement	"const char * flag = getRealRef ( core , refi -> addr ) ;"	86:3:1989:2037	2512375	0	True				
ANR	2512474	IdentifierDecl	"* flag = getRealRef ( core , refi -> addr )"		2512375	0					
ANR	2512475	IdentifierDeclType	const char *		2512375	0					
ANR	2512476	Identifier	flag		2512375	1					
ANR	2512477	AssignmentExpression	"* flag = getRealRef ( core , refi -> addr )"		2512375	2		=			
ANR	2512478	Identifier	flag		2512375	0					
ANR	2512479	CallExpression	"getRealRef ( core , refi -> addr )"		2512375	1					
ANR	2512480	Callee	getRealRef		2512375	0					
ANR	2512481	Identifier	getRealRef		2512375	0					
ANR	2512482	ArgumentList	core		2512375	1					
ANR	2512483	Argument	core		2512375	0					
ANR	2512484	Identifier	core		2512375	0					
ANR	2512485	Argument	refi -> addr		2512375	1					
ANR	2512486	PtrMemberAccess	refi -> addr		2512375	0					
ANR	2512487	Identifier	refi		2512375	0					
ANR	2512488	Identifier	addr		2512375	1					
ANR	2512489	IfStatement	if ( flag )		2512375	1					
ANR	2512490	Condition	flag	87:7:2046:2049	2512375	0	True				
ANR	2512491	Identifier	flag		2512375	0					
ANR	2512492	CompoundStatement		18:13:435:435	2512375	1					
ANR	2512493	ExpressionStatement	"r_list_append ( ret , r_str_newf ( flag ) )"	88:4:2058:2096	2512375	0	True				
ANR	2512494	CallExpression	"r_list_append ( ret , r_str_newf ( flag ) )"		2512375	0					
ANR	2512495	Callee	r_list_append		2512375	0					
ANR	2512496	Identifier	r_list_append		2512375	0					
ANR	2512497	ArgumentList	ret		2512375	1					
ANR	2512498	Argument	ret		2512375	0					
ANR	2512499	Identifier	ret		2512375	0					
ANR	2512500	Argument	r_str_newf ( flag )		2512375	1					
ANR	2512501	CallExpression	r_str_newf ( flag )		2512375	0					
ANR	2512502	Callee	r_str_newf		2512375	0					
ANR	2512503	Identifier	r_str_newf		2512375	0					
ANR	2512504	ArgumentList	flag		2512375	1					
ANR	2512505	Argument	flag		2512375	0					
ANR	2512506	Identifier	flag		2512375	0					
ANR	2512507	ExpressionStatement	r_list_free ( xrefs )	92:1:2111:2130	2512375	16	True				
ANR	2512508	CallExpression	r_list_free ( xrefs )		2512375	0					
ANR	2512509	Callee	r_list_free		2512375	0					
ANR	2512510	Identifier	r_list_free		2512375	0					
ANR	2512511	ArgumentList	xrefs		2512375	1					
ANR	2512512	Argument	xrefs		2512375	0					
ANR	2512513	Identifier	xrefs		2512375	0					
ANR	2512514	ReturnStatement	return ret ;	93:1:2133:2143	2512375	17	True				
ANR	2512515	Identifier	ret		2512375	0					
ANR	2512516	ReturnType	R_API RList *		2512375	1					
ANR	2512517	Identifier	r_sign_fcn_xrefs		2512375	2					
ANR	2512518	ParameterList	"RAnal * a , RAnalFunction * fcn"		2512375	3					
ANR	2512519	Parameter	RAnal * a	70:30:1586:1593	2512375	0	True				
ANR	2512520	ParameterType	RAnal *		2512375	0					
ANR	2512521	Identifier	a		2512375	1					
ANR	2512522	Parameter	RAnalFunction * fcn	70:40:1596:1613	2512375	1	True				
ANR	2512523	ParameterType	RAnalFunction *		2512375	0					
ANR	2512524	Identifier	fcn		2512375	1					
ANR	2512525	CFGEntryNode	ENTRY		2512375		True				
ANR	2512526	CFGExitNode	EXIT		2512375		True				
ANR	2512527	Symbol	ret		2512375						
ANR	2512528	Symbol	a		2512375						
ANR	2512529	Symbol	NULL		2512375						
ANR	2512530	Symbol	refi		2512375						
ANR	2512531	Symbol	a -> coreb . core		2512375						
ANR	2512532	Symbol	flag		2512375						
ANR	2512533	Symbol	r_list_newf		2512375						
ANR	2512534	Symbol	a -> coreb		2512375						
ANR	2512535	Symbol	xrefs		2512375						
ANR	2512536	Symbol	iter		2512375						
ANR	2512537	Symbol	getRealRef		2512375						
ANR	2512538	Symbol	* a		2512375						
ANR	2512539	Symbol	r_str_newf		2512375						
ANR	2512540	Symbol	* refi		2512375						
ANR	2512541	Symbol	R_ANAL_REF_TYPE_CODE		2512375						
ANR	2512542	Symbol	fcn		2512375						
ANR	2512543	Symbol	core		2512375						
ANR	2512544	Symbol	refi -> type		2512375						
ANR	2512545	Symbol	refi -> addr		2512375						
ANR	2512546	Symbol	r_anal_fcn_get_xrefs		2512375						
ANR	2512547	Symbol	free		2512375						
ANR	2512548	Symbol	R_ANAL_REF_TYPE_CALL		2512375						
ANR	2512549	Function	r_sign_fcn_refs	96:0:2148:2732							
ANR	2512550	FunctionDef	"r_sign_fcn_refs (RAnal * a , RAnalFunction * fcn)"		2512549	0					
ANR	2512551	CompoundStatement		96:59:2207:2732	2512549	0					
ANR	2512552	IdentifierDeclStatement	RListIter * iter = NULL ;	97:1:2210:2232	2512549	0	True				
ANR	2512553	IdentifierDecl	* iter = NULL		2512549	0					
ANR	2512554	IdentifierDeclType	RListIter *		2512549	0					
ANR	2512555	Identifier	iter		2512549	1					
ANR	2512556	AssignmentExpression	* iter = NULL		2512549	2		=			
ANR	2512557	Identifier	NULL		2512549	0					
ANR	2512558	Identifier	NULL		2512549	1					
ANR	2512559	IdentifierDeclStatement	RAnalRef * refi = NULL ;	98:1:2235:2256	2512549	1	True				
ANR	2512560	IdentifierDecl	* refi = NULL		2512549	0					
ANR	2512561	IdentifierDeclType	RAnalRef *		2512549	0					
ANR	2512562	Identifier	refi		2512549	1					
ANR	2512563	AssignmentExpression	* refi = NULL		2512549	2		=			
ANR	2512564	Identifier	NULL		2512549	0					
ANR	2512565	Identifier	NULL		2512549	1					
ANR	2512566	ExpressionStatement	"r_return_val_if_fail ( a && fcn , NULL )"	100:1:2260:2297	2512549	2	True				
ANR	2512567	CallExpression	"r_return_val_if_fail ( a && fcn , NULL )"		2512549	0					
ANR	2512568	Callee	r_return_val_if_fail		2512549	0					
ANR	2512569	Identifier	r_return_val_if_fail		2512549	0					
ANR	2512570	ArgumentList	a && fcn		2512549	1					
ANR	2512571	Argument	a && fcn		2512549	0					
ANR	2512572	AndExpression	a && fcn		2512549	0		&&			
ANR	2512573	Identifier	a		2512549	0					
ANR	2512574	Identifier	fcn		2512549	1					
ANR	2512575	Argument	NULL		2512549	1					
ANR	2512576	Identifier	NULL		2512549	0					
ANR	2512577	IdentifierDeclStatement	RCore * core = a -> coreb . core ;	102:1:2301:2328	2512549	3	True				
ANR	2512578	IdentifierDecl	* core = a -> coreb . core		2512549	0					
ANR	2512579	IdentifierDeclType	RCore *		2512549	0					
ANR	2512580	Identifier	core		2512549	1					
ANR	2512581	AssignmentExpression	* core = a -> coreb . core		2512549	2		=			
ANR	2512582	Identifier	core		2512549	0					
ANR	2512583	MemberAccess	a -> coreb . core		2512549	1					
ANR	2512584	PtrMemberAccess	a -> coreb		2512549	0					
ANR	2512585	Identifier	a		2512549	0					
ANR	2512586	Identifier	coreb		2512549	1					
ANR	2512587	Identifier	core		2512549	1					
ANR	2512588	IfStatement	if ( ! core )		2512549	4					
ANR	2512589	Condition	! core	104:5:2336:2340	2512549	0	True				
ANR	2512590	UnaryOperationExpression	! core		2512549	0					
ANR	2512591	UnaryOperator	!		2512549	0					
ANR	2512592	Identifier	core		2512549	1					
ANR	2512593	CompoundStatement		9:12:135:135	2512549	1					
ANR	2512594	ReturnStatement	return NULL ;	105:2:2347:2358	2512549	0	True				
ANR	2512595	Identifier	NULL		2512549	0					
ANR	2512596	IdentifierDeclStatement	RList * ret = r_list_newf ( ( RListFree ) free ) ;	108:1:2365:2408	2512549	5	True				
ANR	2512597	IdentifierDecl	* ret = r_list_newf ( ( RListFree ) free )		2512549	0					
ANR	2512598	IdentifierDeclType	RList *		2512549	0					
ANR	2512599	Identifier	ret		2512549	1					
ANR	2512600	AssignmentExpression	* ret = r_list_newf ( ( RListFree ) free )		2512549	2		=			
ANR	2512601	Identifier	ret		2512549	0					
ANR	2512602	CallExpression	r_list_newf ( ( RListFree ) free )		2512549	1					
ANR	2512603	Callee	r_list_newf		2512549	0					
ANR	2512604	Identifier	r_list_newf		2512549	0					
ANR	2512605	ArgumentList	( RListFree ) free		2512549	1					
ANR	2512606	Argument	( RListFree ) free		2512549	0					
ANR	2512607	CastExpression	( RListFree ) free		2512549	0					
ANR	2512608	CastTarget	RListFree		2512549	0					
ANR	2512609	Identifier	free		2512549	1					
ANR	2512610	IdentifierDeclStatement	"RList * refs = r_anal_fcn_get_refs ( a , fcn ) ;"	109:1:2411:2453	2512549	6	True				
ANR	2512611	IdentifierDecl	"* refs = r_anal_fcn_get_refs ( a , fcn )"		2512549	0					
ANR	2512612	IdentifierDeclType	RList *		2512549	0					
ANR	2512613	Identifier	refs		2512549	1					
ANR	2512614	AssignmentExpression	"* refs = r_anal_fcn_get_refs ( a , fcn )"		2512549	2		=			
ANR	2512615	Identifier	refs		2512549	0					
ANR	2512616	CallExpression	"r_anal_fcn_get_refs ( a , fcn )"		2512549	1					
ANR	2512617	Callee	r_anal_fcn_get_refs		2512549	0					
ANR	2512618	Identifier	r_anal_fcn_get_refs		2512549	0					
ANR	2512619	ArgumentList	a		2512549	1					
ANR	2512620	Argument	a		2512549	0					
ANR	2512621	Identifier	a		2512549	0					
ANR	2512622	Argument	fcn		2512549	1					
ANR	2512623	Identifier	fcn		2512549	0					
ANR	2512624	Statement	r_list_foreach	110:1:2456:2469	2512549	7	True				
ANR	2512625	Statement	(	110:16:2471:2471	2512549	8	True				
ANR	2512626	Statement	refs	110:17:2472:2475	2512549	9	True				
ANR	2512627	Statement	","	110:21:2476:2476	2512549	10	True				
ANR	2512628	Statement	iter	110:23:2478:2481	2512549	11	True				
ANR	2512629	Statement	","	110:27:2482:2482	2512549	12	True				
ANR	2512630	Statement	refi	110:29:2484:2487	2512549	13	True				
ANR	2512631	Statement	)	110:33:2488:2488	2512549	14	True				
ANR	2512632	CompoundStatement		15:35:282:282	2512549	15					
ANR	2512633	IfStatement	if ( refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL )		2512549	0					
ANR	2512634	Condition	refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL	111:6:2498:2569	2512549	0	True				
ANR	2512635	OrExpression	refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL		2512549	0		||			
ANR	2512636	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_CODE		2512549	0		==			
ANR	2512637	PtrMemberAccess	refi -> type		2512549	0					
ANR	2512638	Identifier	refi		2512549	0					
ANR	2512639	Identifier	type		2512549	1					
ANR	2512640	Identifier	R_ANAL_REF_TYPE_CODE		2512549	1					
ANR	2512641	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_CALL		2512549	1		==			
ANR	2512642	PtrMemberAccess	refi -> type		2512549	0					
ANR	2512643	Identifier	refi		2512549	0					
ANR	2512644	Identifier	type		2512549	1					
ANR	2512645	Identifier	R_ANAL_REF_TYPE_CALL		2512549	1					
ANR	2512646	CompoundStatement		17:3:369:417	2512549	1					
ANR	2512647	IdentifierDeclStatement	"const char * flag = getRealRef ( core , refi -> addr ) ;"	112:3:2577:2625	2512549	0	True				
ANR	2512648	IdentifierDecl	"* flag = getRealRef ( core , refi -> addr )"		2512549	0					
ANR	2512649	IdentifierDeclType	const char *		2512549	0					
ANR	2512650	Identifier	flag		2512549	1					
ANR	2512651	AssignmentExpression	"* flag = getRealRef ( core , refi -> addr )"		2512549	2		=			
ANR	2512652	Identifier	flag		2512549	0					
ANR	2512653	CallExpression	"getRealRef ( core , refi -> addr )"		2512549	1					
ANR	2512654	Callee	getRealRef		2512549	0					
ANR	2512655	Identifier	getRealRef		2512549	0					
ANR	2512656	ArgumentList	core		2512549	1					
ANR	2512657	Argument	core		2512549	0					
ANR	2512658	Identifier	core		2512549	0					
ANR	2512659	Argument	refi -> addr		2512549	1					
ANR	2512660	PtrMemberAccess	refi -> addr		2512549	0					
ANR	2512661	Identifier	refi		2512549	0					
ANR	2512662	Identifier	addr		2512549	1					
ANR	2512663	IfStatement	if ( flag )		2512549	1					
ANR	2512664	Condition	flag	113:7:2634:2637	2512549	0	True				
ANR	2512665	Identifier	flag		2512549	0					
ANR	2512666	CompoundStatement		18:13:432:432	2512549	1					
ANR	2512667	ExpressionStatement	"r_list_append ( ret , r_str_newf ( flag ) )"	114:4:2646:2684	2512549	0	True				
ANR	2512668	CallExpression	"r_list_append ( ret , r_str_newf ( flag ) )"		2512549	0					
ANR	2512669	Callee	r_list_append		2512549	0					
ANR	2512670	Identifier	r_list_append		2512549	0					
ANR	2512671	ArgumentList	ret		2512549	1					
ANR	2512672	Argument	ret		2512549	0					
ANR	2512673	Identifier	ret		2512549	0					
ANR	2512674	Argument	r_str_newf ( flag )		2512549	1					
ANR	2512675	CallExpression	r_str_newf ( flag )		2512549	0					
ANR	2512676	Callee	r_str_newf		2512549	0					
ANR	2512677	Identifier	r_str_newf		2512549	0					
ANR	2512678	ArgumentList	flag		2512549	1					
ANR	2512679	Argument	flag		2512549	0					
ANR	2512680	Identifier	flag		2512549	0					
ANR	2512681	ExpressionStatement	r_list_free ( refs )	118:1:2699:2717	2512549	16	True				
ANR	2512682	CallExpression	r_list_free ( refs )		2512549	0					
ANR	2512683	Callee	r_list_free		2512549	0					
ANR	2512684	Identifier	r_list_free		2512549	0					
ANR	2512685	ArgumentList	refs		2512549	1					
ANR	2512686	Argument	refs		2512549	0					
ANR	2512687	Identifier	refs		2512549	0					
ANR	2512688	ReturnStatement	return ret ;	119:1:2720:2730	2512549	17	True				
ANR	2512689	Identifier	ret		2512549	0					
ANR	2512690	ReturnType	R_API RList *		2512549	1					
ANR	2512691	Identifier	r_sign_fcn_refs		2512549	2					
ANR	2512692	ParameterList	"RAnal * a , RAnalFunction * fcn"		2512549	3					
ANR	2512693	Parameter	RAnal * a	96:29:2177:2184	2512549	0	True				
ANR	2512694	ParameterType	RAnal *		2512549	0					
ANR	2512695	Identifier	a		2512549	1					
ANR	2512696	Parameter	RAnalFunction * fcn	96:39:2187:2204	2512549	1	True				
ANR	2512697	ParameterType	RAnalFunction *		2512549	0					
ANR	2512698	Identifier	fcn		2512549	1					
ANR	2512699	CFGEntryNode	ENTRY		2512549		True				
ANR	2512700	CFGExitNode	EXIT		2512549		True				
ANR	2512701	Symbol	ret		2512549						
ANR	2512702	Symbol	a		2512549						
ANR	2512703	Symbol	NULL		2512549						
ANR	2512704	Symbol	refi		2512549						
ANR	2512705	Symbol	a -> coreb . core		2512549						
ANR	2512706	Symbol	flag		2512549						
ANR	2512707	Symbol	r_list_newf		2512549						
ANR	2512708	Symbol	a -> coreb		2512549						
ANR	2512709	Symbol	iter		2512549						
ANR	2512710	Symbol	getRealRef		2512549						
ANR	2512711	Symbol	* a		2512549						
ANR	2512712	Symbol	r_str_newf		2512549						
ANR	2512713	Symbol	r_anal_fcn_get_refs		2512549						
ANR	2512714	Symbol	R_ANAL_REF_TYPE_CODE		2512549						
ANR	2512715	Symbol	* refi		2512549						
ANR	2512716	Symbol	fcn		2512549						
ANR	2512717	Symbol	core		2512549						
ANR	2512718	Symbol	refi -> type		2512549						
ANR	2512719	Symbol	refi -> addr		2512549						
ANR	2512720	Symbol	refs		2512549						
ANR	2512721	Symbol	free		2512549						
ANR	2512722	Symbol	R_ANAL_REF_TYPE_CALL		2512549						
ANR	2512723	Function	r_sign_deserialize	122:0:2735:6479							
ANR	2512724	FunctionDef	"r_sign_deserialize (RAnal * a , RSignItem * it , const char * k , const char * v)"		2512723	0					
ANR	2512725	CompoundStatement		122:85:2820:6479	2512723	0					
ANR	2512726	IdentifierDeclStatement	char * refs = NULL ;	123:1:2823:2840	2512723	0	True				
ANR	2512727	IdentifierDecl	* refs = NULL		2512723	0					
ANR	2512728	IdentifierDeclType	char *		2512723	0					
ANR	2512729	Identifier	refs		2512723	1					
ANR	2512730	AssignmentExpression	* refs = NULL		2512723	2		=			
ANR	2512731	Identifier	NULL		2512723	0					
ANR	2512732	Identifier	NULL		2512723	1					
ANR	2512733	IdentifierDeclStatement	char * vars = NULL ;	124:1:2843:2860	2512723	1	True				
ANR	2512734	IdentifierDecl	* vars = NULL		2512723	0					
ANR	2512735	IdentifierDeclType	char *		2512723	0					
ANR	2512736	Identifier	vars		2512723	1					
ANR	2512737	AssignmentExpression	* vars = NULL		2512723	2		=			
ANR	2512738	Identifier	NULL		2512723	0					
ANR	2512739	Identifier	NULL		2512723	1					
ANR	2512740	IdentifierDeclStatement	const char * token = NULL ;	125:1:2863:2887	2512723	2	True				
ANR	2512741	IdentifierDecl	* token = NULL		2512723	0					
ANR	2512742	IdentifierDeclType	const char *		2512723	0					
ANR	2512743	Identifier	token		2512723	1					
ANR	2512744	AssignmentExpression	* token = NULL		2512723	2		=			
ANR	2512745	Identifier	NULL		2512723	0					
ANR	2512746	Identifier	NULL		2512723	1					
ANR	2512747	IdentifierDeclStatement	"int i = 0 , n = 0 , nrefs = 0 , nvars = 0 , size = 0 , w = 0 ;"	126:1:2890:2945	2512723	3	True				
ANR	2512748	IdentifierDecl	i = 0		2512723	0					
ANR	2512749	IdentifierDeclType	int		2512723	0					
ANR	2512750	Identifier	i		2512723	1					
ANR	2512751	AssignmentExpression	i = 0		2512723	2		=			
ANR	2512752	Identifier	i		2512723	0					
ANR	2512753	PrimaryExpression	0		2512723	1					
ANR	2512754	IdentifierDecl	n = 0		2512723	1					
ANR	2512755	IdentifierDeclType	int		2512723	0					
ANR	2512756	Identifier	n		2512723	1					
ANR	2512757	AssignmentExpression	n = 0		2512723	2		=			
ANR	2512758	Identifier	n		2512723	0					
ANR	2512759	PrimaryExpression	0		2512723	1					
ANR	2512760	IdentifierDecl	nrefs = 0		2512723	2					
ANR	2512761	IdentifierDeclType	int		2512723	0					
ANR	2512762	Identifier	nrefs		2512723	1					
ANR	2512763	AssignmentExpression	nrefs = 0		2512723	2		=			
ANR	2512764	Identifier	nrefs		2512723	0					
ANR	2512765	PrimaryExpression	0		2512723	1					
ANR	2512766	IdentifierDecl	nvars = 0		2512723	3					
ANR	2512767	IdentifierDeclType	int		2512723	0					
ANR	2512768	Identifier	nvars		2512723	1					
ANR	2512769	AssignmentExpression	nvars = 0		2512723	2		=			
ANR	2512770	Identifier	nvars		2512723	0					
ANR	2512771	PrimaryExpression	0		2512723	1					
ANR	2512772	IdentifierDecl	size = 0		2512723	4					
ANR	2512773	IdentifierDeclType	int		2512723	0					
ANR	2512774	Identifier	size		2512723	1					
ANR	2512775	AssignmentExpression	size = 0		2512723	2		=			
ANR	2512776	Identifier	size		2512723	0					
ANR	2512777	PrimaryExpression	0		2512723	1					
ANR	2512778	IdentifierDecl	w = 0		2512723	5					
ANR	2512779	IdentifierDeclType	int		2512723	0					
ANR	2512780	Identifier	w		2512723	1					
ANR	2512781	AssignmentExpression	w = 0		2512723	2		=			
ANR	2512782	Identifier	w		2512723	0					
ANR	2512783	PrimaryExpression	0		2512723	1					
ANR	2512784	ExpressionStatement	"r_return_val_if_fail ( a && it && k && v , false )"	128:1:2949:2996	2512723	4	True				
ANR	2512785	CallExpression	"r_return_val_if_fail ( a && it && k && v , false )"		2512723	0					
ANR	2512786	Callee	r_return_val_if_fail		2512723	0					
ANR	2512787	Identifier	r_return_val_if_fail		2512723	0					
ANR	2512788	ArgumentList	a && it && k && v		2512723	1					
ANR	2512789	Argument	a && it && k && v		2512723	0					
ANR	2512790	AndExpression	a && it && k && v		2512723	0		&&			
ANR	2512791	Identifier	a		2512723	0					
ANR	2512792	AndExpression	it && k && v		2512723	1		&&			
ANR	2512793	Identifier	it		2512723	0					
ANR	2512794	AndExpression	k && v		2512723	1		&&			
ANR	2512795	Identifier	k		2512723	0					
ANR	2512796	Identifier	v		2512723	1					
ANR	2512797	Argument	false		2512723	1					
ANR	2512798	Identifier	false		2512723	0					
ANR	2512799	IdentifierDeclStatement	char * k2 = r_str_new ( k ) ;	130:1:3000:3024	2512723	5	True				
ANR	2512800	IdentifierDecl	* k2 = r_str_new ( k )		2512723	0					
ANR	2512801	IdentifierDeclType	char *		2512723	0					
ANR	2512802	Identifier	k2		2512723	1					
ANR	2512803	AssignmentExpression	* k2 = r_str_new ( k )		2512723	2		=			
ANR	2512804	Identifier	k2		2512723	0					
ANR	2512805	CallExpression	r_str_new ( k )		2512723	1					
ANR	2512806	Callee	r_str_new		2512723	0					
ANR	2512807	Identifier	r_str_new		2512723	0					
ANR	2512808	ArgumentList	k		2512723	1					
ANR	2512809	Argument	k		2512723	0					
ANR	2512810	Identifier	k		2512723	0					
ANR	2512811	IdentifierDeclStatement	char * v2 = r_str_new ( v ) ;	131:1:3027:3051	2512723	6	True				
ANR	2512812	IdentifierDecl	* v2 = r_str_new ( v )		2512723	0					
ANR	2512813	IdentifierDeclType	char *		2512723	0					
ANR	2512814	Identifier	v2		2512723	1					
ANR	2512815	AssignmentExpression	* v2 = r_str_new ( v )		2512723	2		=			
ANR	2512816	Identifier	v2		2512723	0					
ANR	2512817	CallExpression	r_str_new ( v )		2512723	1					
ANR	2512818	Callee	r_str_new		2512723	0					
ANR	2512819	Identifier	r_str_new		2512723	0					
ANR	2512820	ArgumentList	v		2512723	1					
ANR	2512821	Argument	v		2512723	0					
ANR	2512822	Identifier	v		2512723	0					
ANR	2512823	IfStatement	if ( ! k2 || ! v2 )		2512723	7					
ANR	2512824	Condition	! k2 || ! v2	132:5:3058:3067	2512723	0	True				
ANR	2512825	OrExpression	! k2 || ! v2		2512723	0		||			
ANR	2512826	UnaryOperationExpression	! k2		2512723	0					
ANR	2512827	UnaryOperator	!		2512723	0					
ANR	2512828	Identifier	k2		2512723	1					
ANR	2512829	UnaryOperationExpression	! v2		2512723	1					
ANR	2512830	UnaryOperator	!		2512723	0					
ANR	2512831	Identifier	v2		2512723	1					
ANR	2512832	CompoundStatement		11:17:249:249	2512723	1					
ANR	2512833	ExpressionStatement	free ( k2 )	133:2:3074:3083	2512723	0	True				
ANR	2512834	CallExpression	free ( k2 )		2512723	0					
ANR	2512835	Callee	free		2512723	0					
ANR	2512836	Identifier	free		2512723	0					
ANR	2512837	ArgumentList	k2		2512723	1					
ANR	2512838	Argument	k2		2512723	0					
ANR	2512839	Identifier	k2		2512723	0					
ANR	2512840	ExpressionStatement	free ( v2 )	134:2:3087:3096	2512723	1	True				
ANR	2512841	CallExpression	free ( v2 )		2512723	0					
ANR	2512842	Callee	free		2512723	0					
ANR	2512843	Identifier	free		2512723	0					
ANR	2512844	ArgumentList	v2		2512723	1					
ANR	2512845	Argument	v2		2512723	0					
ANR	2512846	Identifier	v2		2512723	0					
ANR	2512847	ReturnStatement	return false ;	135:2:3100:3112	2512723	2	True				
ANR	2512848	Identifier	false		2512723	0					
ANR	2512849	ExpressionStatement	"n = r_str_split ( k2 , '|' )"	139:1:3156:3181	2512723	8	True				
ANR	2512850	AssignmentExpression	"n = r_str_split ( k2 , '|' )"		2512723	0		=			
ANR	2512851	Identifier	n		2512723	0					
ANR	2512852	CallExpression	"r_str_split ( k2 , '|' )"		2512723	1					
ANR	2512853	Callee	r_str_split		2512723	0					
ANR	2512854	Identifier	r_str_split		2512723	0					
ANR	2512855	ArgumentList	k2		2512723	1					
ANR	2512856	Argument	k2		2512723	0					
ANR	2512857	Identifier	k2		2512723	0					
ANR	2512858	Argument	'|'		2512723	1					
ANR	2512859	PrimaryExpression	'|'		2512723	0					
ANR	2512860	IfStatement	if ( n != 3 )		2512723	9					
ANR	2512861	Condition	n != 3	140:5:3188:3193	2512723	0	True				
ANR	2512862	EqualityExpression	n != 3		2512723	0		!=			
ANR	2512863	Identifier	n		2512723	0					
ANR	2512864	PrimaryExpression	3		2512723	1					
ANR	2512865	CompoundStatement		19:13:375:375	2512723	1					
ANR	2512866	GotoStatement	goto out ;	141:2:3200:3208	2512723	0	True				
ANR	2512867	Identifier	out		2512723	0					
ANR	2512868	IfStatement	"if ( strcmp ( r_str_word_get0 ( k2 , 0 ) , ""zign"" ) )"		2512723	10					
ANR	2512869	Condition	"strcmp ( r_str_word_get0 ( k2 , 0 ) , ""zign"" )"	143:5:3218:3257	2512723	0	True				
ANR	2512870	CallExpression	"strcmp ( r_str_word_get0 ( k2 , 0 ) , ""zign"" )"		2512723	0					
ANR	2512871	Callee	strcmp		2512723	0					
ANR	2512872	Identifier	strcmp		2512723	0					
ANR	2512873	ArgumentList	"r_str_word_get0 ( k2 , 0 )"		2512723	1					
ANR	2512874	Argument	"r_str_word_get0 ( k2 , 0 )"		2512723	0					
ANR	2512875	CallExpression	"r_str_word_get0 ( k2 , 0 )"		2512723	0					
ANR	2512876	Callee	r_str_word_get0		2512723	0					
ANR	2512877	Identifier	r_str_word_get0		2512723	0					
ANR	2512878	ArgumentList	k2		2512723	1					
ANR	2512879	Argument	k2		2512723	0					
ANR	2512880	Identifier	k2		2512723	0					
ANR	2512881	Argument	0		2512723	1					
ANR	2512882	PrimaryExpression	0		2512723	0					
ANR	2512883	Argument	"""zign"""		2512723	1					
ANR	2512884	PrimaryExpression	"""zign"""		2512723	0					
ANR	2512885	CompoundStatement		22:47:439:439	2512723	1					
ANR	2512886	ExpressionStatement	"eprintf ( ""Invalid entry in the zigns database\\n"" )"	144:2:3264:3313	2512723	0	True				
ANR	2512887	CallExpression	"eprintf ( ""Invalid entry in the zigns database\\n"" )"		2512723	0					
ANR	2512888	Callee	eprintf		2512723	0					
ANR	2512889	Identifier	eprintf		2512723	0					
ANR	2512890	ArgumentList	"""Invalid entry in the zigns database\\n"""		2512723	1					
ANR	2512891	Argument	"""Invalid entry in the zigns database\\n"""		2512723	0					
ANR	2512892	PrimaryExpression	"""Invalid entry in the zigns database\\n"""		2512723	0					
ANR	2512893	GotoStatement	goto out ;	145:2:3317:3325	2512723	1	True				
ANR	2512894	Identifier	out		2512723	0					
ANR	2512895	ExpressionStatement	"it -> space = r_spaces_add ( & a -> zign_spaces , r_str_word_get0 ( k2 , 1 ) )"	149:1:3346:3413	2512723	11	True				
ANR	2512896	AssignmentExpression	"it -> space = r_spaces_add ( & a -> zign_spaces , r_str_word_get0 ( k2 , 1 ) )"		2512723	0		=			
ANR	2512897	PtrMemberAccess	it -> space		2512723	0					
ANR	2512898	Identifier	it		2512723	0					
ANR	2512899	Identifier	space		2512723	1					
ANR	2512900	CallExpression	"r_spaces_add ( & a -> zign_spaces , r_str_word_get0 ( k2 , 1 ) )"		2512723	1					
ANR	2512901	Callee	r_spaces_add		2512723	0					
ANR	2512902	Identifier	r_spaces_add		2512723	0					
ANR	2512903	ArgumentList	& a -> zign_spaces		2512723	1					
ANR	2512904	Argument	& a -> zign_spaces		2512723	0					
ANR	2512905	UnaryOperationExpression	& a -> zign_spaces		2512723	0					
ANR	2512906	UnaryOperator	&		2512723	0					
ANR	2512907	PtrMemberAccess	a -> zign_spaces		2512723	1					
ANR	2512908	Identifier	a		2512723	0					
ANR	2512909	Identifier	zign_spaces		2512723	1					
ANR	2512910	Argument	"r_str_word_get0 ( k2 , 1 )"		2512723	1					
ANR	2512911	CallExpression	"r_str_word_get0 ( k2 , 1 )"		2512723	0					
ANR	2512912	Callee	r_str_word_get0		2512723	0					
ANR	2512913	Identifier	r_str_word_get0		2512723	0					
ANR	2512914	ArgumentList	k2		2512723	1					
ANR	2512915	Argument	k2		2512723	0					
ANR	2512916	Identifier	k2		2512723	0					
ANR	2512917	Argument	1		2512723	1					
ANR	2512918	PrimaryExpression	1		2512723	0					
ANR	2512919	ExpressionStatement	"it -> name = r_str_new ( r_str_word_get0 ( k2 , 2 ) )"	152:1:3430:3476	2512723	12	True				
ANR	2512920	AssignmentExpression	"it -> name = r_str_new ( r_str_word_get0 ( k2 , 2 ) )"		2512723	0		=			
ANR	2512921	PtrMemberAccess	it -> name		2512723	0					
ANR	2512922	Identifier	it		2512723	0					
ANR	2512923	Identifier	name		2512723	1					
ANR	2512924	CallExpression	"r_str_new ( r_str_word_get0 ( k2 , 2 ) )"		2512723	1					
ANR	2512925	Callee	r_str_new		2512723	0					
ANR	2512926	Identifier	r_str_new		2512723	0					
ANR	2512927	ArgumentList	"r_str_word_get0 ( k2 , 2 )"		2512723	1					
ANR	2512928	Argument	"r_str_word_get0 ( k2 , 2 )"		2512723	0					
ANR	2512929	CallExpression	"r_str_word_get0 ( k2 , 2 )"		2512723	0					
ANR	2512930	Callee	r_str_word_get0		2512723	0					
ANR	2512931	Identifier	r_str_word_get0		2512723	0					
ANR	2512932	ArgumentList	k2		2512723	1					
ANR	2512933	Argument	k2		2512723	0					
ANR	2512934	Identifier	k2		2512723	0					
ANR	2512935	Argument	2		2512723	1					
ANR	2512936	PrimaryExpression	2		2512723	0					
ANR	2512937	ExpressionStatement	"n = r_str_split ( v2 , '|' )"	156:1:3571:3596	2512723	13	True				
ANR	2512938	AssignmentExpression	"n = r_str_split ( v2 , '|' )"		2512723	0		=			
ANR	2512939	Identifier	n		2512723	0					
ANR	2512940	CallExpression	"r_str_split ( v2 , '|' )"		2512723	1					
ANR	2512941	Callee	r_str_split		2512723	0					
ANR	2512942	Identifier	r_str_split		2512723	0					
ANR	2512943	ArgumentList	v2		2512723	1					
ANR	2512944	Argument	v2		2512723	0					
ANR	2512945	Identifier	v2		2512723	0					
ANR	2512946	Argument	'|'		2512723	1					
ANR	2512947	PrimaryExpression	'|'		2512723	0					
ANR	2512948	ForStatement	for ( w = 0 ; w < n ; w ++ )		2512723	14					
ANR	2512949	ForInit	w = 0 ;	157:6:3604:3609	2512723	0	True				
ANR	2512950	AssignmentExpression	w = 0		2512723	0		=			
ANR	2512951	Identifier	w		2512723	0					
ANR	2512952	PrimaryExpression	0		2512723	1					
ANR	2512953	Condition	w < n	157:13:3611:3615	2512723	1	True				
ANR	2512954	RelationalExpression	w < n		2512723	0		<			
ANR	2512955	Identifier	w		2512723	0					
ANR	2512956	Identifier	n		2512723	1					
ANR	2512957	PostIncDecOperationExpression	w ++	157:20:3618:3620	2512723	2	True				
ANR	2512958	Identifier	w		2512723	0					
ANR	2512959	IncDec	++		2512723	1					
ANR	2512960	CompoundStatement		52:2:1098:1129	2512723	3					
ANR	2512961	IdentifierDeclStatement	"const char * word = r_str_word_get0 ( v2 , w ) ;"	158:2:3627:3669	2512723	0	True				
ANR	2512962	IdentifierDecl	"* word = r_str_word_get0 ( v2 , w )"		2512723	0					
ANR	2512963	IdentifierDeclType	const char *		2512723	0					
ANR	2512964	Identifier	word		2512723	1					
ANR	2512965	AssignmentExpression	"* word = r_str_word_get0 ( v2 , w )"		2512723	2		=			
ANR	2512966	Identifier	word		2512723	0					
ANR	2512967	CallExpression	"r_str_word_get0 ( v2 , w )"		2512723	1					
ANR	2512968	Callee	r_str_word_get0		2512723	0					
ANR	2512969	Identifier	r_str_word_get0		2512723	0					
ANR	2512970	ArgumentList	v2		2512723	1					
ANR	2512971	Argument	v2		2512723	0					
ANR	2512972	Identifier	v2		2512723	0					
ANR	2512973	Argument	w		2512723	1					
ANR	2512974	Identifier	w		2512723	0					
ANR	2512975	IfStatement	if ( ! word )		2512723	1					
ANR	2512976	Condition	! word	159:6:3677:3681	2512723	0	True				
ANR	2512977	UnaryOperationExpression	! word		2512723	0					
ANR	2512978	UnaryOperator	!		2512723	0					
ANR	2512979	Identifier	word		2512723	1					
ANR	2512980	CompoundStatement		38:13:863:863	2512723	1					
ANR	2512981	BreakStatement	break ;	160:3:3689:3694	2512723	0	True				
ANR	2512982	IfStatement	if ( ! * word )		2512723	2					
ANR	2512983	Condition	! * word	162:6:3706:3711	2512723	0	True				
ANR	2512984	UnaryOperationExpression	! * word		2512723	0					
ANR	2512985	UnaryOperator	!		2512723	0					
ANR	2512986	UnaryOperationExpression	* word		2512723	1					
ANR	2512987	UnaryOperator	*		2512723	0					
ANR	2512988	Identifier	word		2512723	1					
ANR	2512989	CompoundStatement		41:14:893:893	2512723	1					
ANR	2512990	ContinueStatement	continue ;	163:3:3719:3727	2512723	0	True				
ANR	2512991	ExpressionStatement	token = word + 2	165:2:3735:3751	2512723	3	True				
ANR	2512992	AssignmentExpression	token = word + 2		2512723	0		=			
ANR	2512993	Identifier	token		2512723	0					
ANR	2512994	AdditiveExpression	word + 2		2512723	1		+			
ANR	2512995	Identifier	word		2512723	0					
ANR	2512996	PrimaryExpression	2		2512723	1					
ANR	2512997	IfStatement	"if ( ! strcmp ( word , ""*"" ) )"		2512723	4					
ANR	2512998	Condition	"! strcmp ( word , ""*"" )"	166:6:3759:3777	2512723	0	True				
ANR	2512999	UnaryOperationExpression	"! strcmp ( word , ""*"" )"		2512723	0					
ANR	2513000	UnaryOperator	!		2512723	0					
ANR	2513001	CallExpression	"strcmp ( word , ""*"" )"		2512723	1					
ANR	2513002	Callee	strcmp		2512723	0					
ANR	2513003	Identifier	strcmp		2512723	0					
ANR	2513004	ArgumentList	word		2512723	1					
ANR	2513005	Argument	word		2512723	0					
ANR	2513006	Identifier	word		2512723	0					
ANR	2513007	Argument	"""*"""		2512723	1					
ANR	2513008	PrimaryExpression	"""*"""		2512723	0					
ANR	2513009	CompoundStatement		45:27:959:959	2512723	1					
ANR	2513010	ContinueStatement	continue ;	167:3:3785:3793	2512723	0	True				
ANR	2513011	IfStatement	if ( strlen ( word ) < 3 || word [ 1 ] != ':' )		2512723	5					
ANR	2513012	Condition	strlen ( word ) < 3 || word [ 1 ] != ':'	169:6:3805:3839	2512723	0	True				
ANR	2513013	OrExpression	strlen ( word ) < 3 || word [ 1 ] != ':'		2512723	0		||			
ANR	2513014	RelationalExpression	strlen ( word ) < 3		2512723	0		<			
ANR	2513015	CallExpression	strlen ( word )		2512723	0					
ANR	2513016	Callee	strlen		2512723	0					
ANR	2513017	Identifier	strlen		2512723	0					
ANR	2513018	ArgumentList	word		2512723	1					
ANR	2513019	Argument	word		2512723	0					
ANR	2513020	Identifier	word		2512723	0					
ANR	2513021	PrimaryExpression	3		2512723	1					
ANR	2513022	EqualityExpression	word [ 1 ] != ':'		2512723	1		!=			
ANR	2513023	ArrayIndexing	word [ 1 ]		2512723	0					
ANR	2513024	Identifier	word		2512723	0					
ANR	2513025	PrimaryExpression	1		2512723	1					
ANR	2513026	PrimaryExpression	':'		2512723	1					
ANR	2513027	CompoundStatement		48:43:1021:1021	2512723	1					
ANR	2513028	ExpressionStatement	"eprintf ( ""Corrupted zignatures database (%s)\\n"" , word )"	170:3:3847:3901	2512723	0	True				
ANR	2513029	CallExpression	"eprintf ( ""Corrupted zignatures database (%s)\\n"" , word )"		2512723	0					
ANR	2513030	Callee	eprintf		2512723	0					
ANR	2513031	Identifier	eprintf		2512723	0					
ANR	2513032	ArgumentList	"""Corrupted zignatures database (%s)\\n"""		2512723	1					
ANR	2513033	Argument	"""Corrupted zignatures database (%s)\\n"""		2512723	0					
ANR	2513034	PrimaryExpression	"""Corrupted zignatures database (%s)\\n"""		2512723	0					
ANR	2513035	Argument	word		2512723	1					
ANR	2513036	Identifier	word		2512723	0					
ANR	2513037	BreakStatement	break ;	171:3:3906:3911	2512723	1	True				
ANR	2513038	IdentifierDeclStatement	RSignType st = ( RSignType ) * word ;	173:2:3919:3950	2512723	6	True				
ANR	2513039	IdentifierDecl	st = ( RSignType ) * word		2512723	0					
ANR	2513040	IdentifierDeclType	RSignType		2512723	0					
ANR	2513041	Identifier	st		2512723	1					
ANR	2513042	AssignmentExpression	st = ( RSignType ) * word		2512723	2		=			
ANR	2513043	Identifier	st		2512723	0					
ANR	2513044	CastExpression	( RSignType ) * word		2512723	1					
ANR	2513045	CastTarget	RSignType		2512723	0					
ANR	2513046	UnaryOperationExpression	* word		2512723	1					
ANR	2513047	UnaryOperator	*		2512723	0					
ANR	2513048	Identifier	word		2512723	1					
ANR	2513049	SwitchStatement	switch ( st )		2512723	7					
ANR	2513050	Condition	st	174:10:3962:3963	2512723	0	True				
ANR	2513051	Identifier	st		2512723	0					
ANR	2513052	CompoundStatement		53:14:1145:1145	2512723	1					
ANR	2513053	Label	case R_SIGN_ANAL :	175:2:3970:3986	2512723	0	True				
ANR	2513054	Identifier	R_SIGN_ANAL		2512723	0					
ANR	2513055	ExpressionStatement	"eprintf ( ""Unsupported\\n"" )"	176:3:3991:4016	2512723	1	True				
ANR	2513056	CallExpression	"eprintf ( ""Unsupported\\n"" )"		2512723	0					
ANR	2513057	Callee	eprintf		2512723	0					
ANR	2513058	Identifier	eprintf		2512723	0					
ANR	2513059	ArgumentList	"""Unsupported\\n"""		2512723	1					
ANR	2513060	Argument	"""Unsupported\\n"""		2512723	0					
ANR	2513061	PrimaryExpression	"""Unsupported\\n"""		2512723	0					
ANR	2513062	BreakStatement	break ;	177:3:4021:4026	2512723	2	True				
ANR	2513063	Label	case R_SIGN_NAME :	178:2:4030:4046	2512723	3	True				
ANR	2513064	Identifier	R_SIGN_NAME		2512723	0					
ANR	2513065	ExpressionStatement	it -> realname = strdup ( token )	179:3:4051:4080	2512723	4	True				
ANR	2513066	AssignmentExpression	it -> realname = strdup ( token )		2512723	0		=			
ANR	2513067	PtrMemberAccess	it -> realname		2512723	0					
ANR	2513068	Identifier	it		2512723	0					
ANR	2513069	Identifier	realname		2512723	1					
ANR	2513070	CallExpression	strdup ( token )		2512723	1					
ANR	2513071	Callee	strdup		2512723	0					
ANR	2513072	Identifier	strdup		2512723	0					
ANR	2513073	ArgumentList	token		2512723	1					
ANR	2513074	Argument	token		2512723	0					
ANR	2513075	Identifier	token		2512723	0					
ANR	2513076	BreakStatement	break ;	180:3:4085:4090	2512723	5	True				
ANR	2513077	Label	case R_SIGN_COMMENT :	181:2:4094:4113	2512723	6	True				
ANR	2513078	Identifier	R_SIGN_COMMENT		2512723	0					
ANR	2513079	ExpressionStatement	it -> comment = strdup ( token )	182:3:4118:4146	2512723	7	True				
ANR	2513080	AssignmentExpression	it -> comment = strdup ( token )		2512723	0		=			
ANR	2513081	PtrMemberAccess	it -> comment		2512723	0					
ANR	2513082	Identifier	it		2512723	0					
ANR	2513083	Identifier	comment		2512723	1					
ANR	2513084	CallExpression	strdup ( token )		2512723	1					
ANR	2513085	Callee	strdup		2512723	0					
ANR	2513086	Identifier	strdup		2512723	0					
ANR	2513087	ArgumentList	token		2512723	1					
ANR	2513088	Argument	token		2512723	0					
ANR	2513089	Identifier	token		2512723	0					
ANR	2513090	BreakStatement	break ;	183:3:4151:4156	2512723	8	True				
ANR	2513091	Label	case R_SIGN_GRAPH :	184:2:4160:4177	2512723	9	True				
ANR	2513092	Identifier	R_SIGN_GRAPH		2512723	0					
ANR	2513093	IfStatement	if ( strlen ( token ) == 2 * sizeof ( RSignGraph ) )		2512723	10					
ANR	2513094	Condition	strlen ( token ) == 2 * sizeof ( RSignGraph )	185:7:4186:4226	2512723	0	True				
ANR	2513095	EqualityExpression	strlen ( token ) == 2 * sizeof ( RSignGraph )		2512723	0		==			
ANR	2513096	CallExpression	strlen ( token )		2512723	0					
ANR	2513097	Callee	strlen		2512723	0					
ANR	2513098	Identifier	strlen		2512723	0					
ANR	2513099	ArgumentList	token		2512723	1					
ANR	2513100	Argument	token		2512723	0					
ANR	2513101	Identifier	token		2512723	0					
ANR	2513102	MultiplicativeExpression	2 * sizeof ( RSignGraph )		2512723	1		*			
ANR	2513103	PrimaryExpression	2		2512723	0					
ANR	2513104	SizeofExpression	sizeof ( RSignGraph )		2512723	1					
ANR	2513105	Sizeof	sizeof		2512723	0					
ANR	2513106	SizeofOperand	RSignGraph		2512723	1					
ANR	2513107	CompoundStatement		64:50:1408:1408	2512723	1					
ANR	2513108	ExpressionStatement	it -> graph = R_NEW0 ( RSignGraph )	186:4:4235:4266	2512723	0	True				
ANR	2513109	AssignmentExpression	it -> graph = R_NEW0 ( RSignGraph )		2512723	0		=			
ANR	2513110	PtrMemberAccess	it -> graph		2512723	0					
ANR	2513111	Identifier	it		2512723	0					
ANR	2513112	Identifier	graph		2512723	1					
ANR	2513113	CallExpression	R_NEW0 ( RSignGraph )		2512723	1					
ANR	2513114	Callee	R_NEW0		2512723	0					
ANR	2513115	Identifier	R_NEW0		2512723	0					
ANR	2513116	ArgumentList	RSignGraph		2512723	1					
ANR	2513117	Argument	RSignGraph		2512723	0					
ANR	2513118	Identifier	RSignGraph		2512723	0					
ANR	2513119	IfStatement	if ( it -> graph )		2512723	1					
ANR	2513120	Condition	it -> graph	187:8:4276:4284	2512723	0	True				
ANR	2513121	PtrMemberAccess	it -> graph		2512723	0					
ANR	2513122	Identifier	it		2512723	0					
ANR	2513123	Identifier	graph		2512723	1					
ANR	2513124	CompoundStatement		66:19:1466:1466	2512723	1					
ANR	2513125	ExpressionStatement	"r_hex_str2bin ( token , ( ut8 * ) it -> graph )"	188:5:4294:4334	2512723	0	True				
ANR	2513126	CallExpression	"r_hex_str2bin ( token , ( ut8 * ) it -> graph )"		2512723	0					
ANR	2513127	Callee	r_hex_str2bin		2512723	0					
ANR	2513128	Identifier	r_hex_str2bin		2512723	0					
ANR	2513129	ArgumentList	token		2512723	1					
ANR	2513130	Argument	token		2512723	0					
ANR	2513131	Identifier	token		2512723	0					
ANR	2513132	Argument	( ut8 * ) it -> graph		2512723	1					
ANR	2513133	CastExpression	( ut8 * ) it -> graph		2512723	0					
ANR	2513134	CastTarget	ut8 *		2512723	0					
ANR	2513135	PtrMemberAccess	it -> graph		2512723	1					
ANR	2513136	Identifier	it		2512723	0					
ANR	2513137	Identifier	graph		2512723	1					
ANR	2513138	BreakStatement	break ;	191:3:4350:4355	2512723	11	True				
ANR	2513139	Label	case R_SIGN_OFFSET :	192:2:4359:4377	2512723	12	True				
ANR	2513140	Identifier	R_SIGN_OFFSET		2512723	0					
ANR	2513141	ExpressionStatement	it -> addr = atoll ( token )	193:3:4382:4406	2512723	13	True				
ANR	2513142	AssignmentExpression	it -> addr = atoll ( token )		2512723	0		=			
ANR	2513143	PtrMemberAccess	it -> addr		2512723	0					
ANR	2513144	Identifier	it		2512723	0					
ANR	2513145	Identifier	addr		2512723	1					
ANR	2513146	CallExpression	atoll ( token )		2512723	1					
ANR	2513147	Callee	atoll		2512723	0					
ANR	2513148	Identifier	atoll		2512723	0					
ANR	2513149	ArgumentList	token		2512723	1					
ANR	2513150	Argument	token		2512723	0					
ANR	2513151	Identifier	token		2512723	0					
ANR	2513152	BreakStatement	break ;	194:3:4411:4416	2512723	14	True				
ANR	2513153	Label	case R_SIGN_REFS :	195:2:4420:4436	2512723	15	True				
ANR	2513154	Identifier	R_SIGN_REFS		2512723	0					
ANR	2513155	ExpressionStatement	refs = r_str_new ( token )	196:3:4441:4465	2512723	16	True				
ANR	2513156	AssignmentExpression	refs = r_str_new ( token )		2512723	0		=			
ANR	2513157	Identifier	refs		2512723	0					
ANR	2513158	CallExpression	r_str_new ( token )		2512723	1					
ANR	2513159	Callee	r_str_new		2512723	0					
ANR	2513160	Identifier	r_str_new		2512723	0					
ANR	2513161	ArgumentList	token		2512723	1					
ANR	2513162	Argument	token		2512723	0					
ANR	2513163	Identifier	token		2512723	0					
ANR	2513164	ExpressionStatement	"nrefs = r_str_split ( refs , ',' )"	197:3:4470:4501	2512723	17	True				
ANR	2513165	AssignmentExpression	"nrefs = r_str_split ( refs , ',' )"		2512723	0		=			
ANR	2513166	Identifier	nrefs		2512723	0					
ANR	2513167	CallExpression	"r_str_split ( refs , ',' )"		2512723	1					
ANR	2513168	Callee	r_str_split		2512723	0					
ANR	2513169	Identifier	r_str_split		2512723	0					
ANR	2513170	ArgumentList	refs		2512723	1					
ANR	2513171	Argument	refs		2512723	0					
ANR	2513172	Identifier	refs		2512723	0					
ANR	2513173	Argument	"','"		2512723	1					
ANR	2513174	PrimaryExpression	"','"		2512723	0					
ANR	2513175	IfStatement	if ( nrefs > 0 )		2512723	18					
ANR	2513176	Condition	nrefs > 0	198:7:4510:4518	2512723	0	True				
ANR	2513177	RelationalExpression	nrefs > 0		2512723	0		>			
ANR	2513178	Identifier	nrefs		2512723	0					
ANR	2513179	PrimaryExpression	0		2512723	1					
ANR	2513180	CompoundStatement		77:18:1700:1700	2512723	1					
ANR	2513181	ExpressionStatement	it -> refs = r_list_newf ( ( RListFree ) free )	199:4:4527:4568	2512723	0	True				
ANR	2513182	AssignmentExpression	it -> refs = r_list_newf ( ( RListFree ) free )		2512723	0		=			
ANR	2513183	PtrMemberAccess	it -> refs		2512723	0					
ANR	2513184	Identifier	it		2512723	0					
ANR	2513185	Identifier	refs		2512723	1					
ANR	2513186	CallExpression	r_list_newf ( ( RListFree ) free )		2512723	1					
ANR	2513187	Callee	r_list_newf		2512723	0					
ANR	2513188	Identifier	r_list_newf		2512723	0					
ANR	2513189	ArgumentList	( RListFree ) free		2512723	1					
ANR	2513190	Argument	( RListFree ) free		2512723	0					
ANR	2513191	CastExpression	( RListFree ) free		2512723	0					
ANR	2513192	CastTarget	RListFree		2512723	0					
ANR	2513193	Identifier	free		2512723	1					
ANR	2513194	ForStatement	for ( i = 0 ; i < nrefs ; i ++ )		2512723	1					
ANR	2513195	ForInit	i = 0 ;	200:9:4579:4584	2512723	0	True				
ANR	2513196	AssignmentExpression	i = 0		2512723	0		=			
ANR	2513197	Identifier	i		2512723	0					
ANR	2513198	PrimaryExpression	0		2512723	1					
ANR	2513199	Condition	i < nrefs	200:16:4586:4594	2512723	1	True				
ANR	2513200	RelationalExpression	i < nrefs		2512723	0		<			
ANR	2513201	Identifier	i		2512723	0					
ANR	2513202	Identifier	nrefs		2512723	1					
ANR	2513203	PostIncDecOperationExpression	i ++	200:27:4597:4599	2512723	2	True				
ANR	2513204	Identifier	i		2512723	0					
ANR	2513205	IncDec	++		2512723	1					
ANR	2513206	CompoundStatement		79:32:1781:1781	2512723	3					
ANR	2513207	ExpressionStatement	"r_list_append ( it -> refs , r_str_newf ( r_str_word_get0 ( refs , i ) ) )"	201:5:4609:4673	2512723	0	True				
ANR	2513208	CallExpression	"r_list_append ( it -> refs , r_str_newf ( r_str_word_get0 ( refs , i ) ) )"		2512723	0					
ANR	2513209	Callee	r_list_append		2512723	0					
ANR	2513210	Identifier	r_list_append		2512723	0					
ANR	2513211	ArgumentList	it -> refs		2512723	1					
ANR	2513212	Argument	it -> refs		2512723	0					
ANR	2513213	PtrMemberAccess	it -> refs		2512723	0					
ANR	2513214	Identifier	it		2512723	0					
ANR	2513215	Identifier	refs		2512723	1					
ANR	2513216	Argument	"r_str_newf ( r_str_word_get0 ( refs , i ) )"		2512723	1					
ANR	2513217	CallExpression	"r_str_newf ( r_str_word_get0 ( refs , i ) )"		2512723	0					
ANR	2513218	Callee	r_str_newf		2512723	0					
ANR	2513219	Identifier	r_str_newf		2512723	0					
ANR	2513220	ArgumentList	"r_str_word_get0 ( refs , i )"		2512723	1					
ANR	2513221	Argument	"r_str_word_get0 ( refs , i )"		2512723	0					
ANR	2513222	CallExpression	"r_str_word_get0 ( refs , i )"		2512723	0					
ANR	2513223	Callee	r_str_word_get0		2512723	0					
ANR	2513224	Identifier	r_str_word_get0		2512723	0					
ANR	2513225	ArgumentList	refs		2512723	1					
ANR	2513226	Argument	refs		2512723	0					
ANR	2513227	Identifier	refs		2512723	0					
ANR	2513228	Argument	i		2512723	1					
ANR	2513229	Identifier	i		2512723	0					
ANR	2513230	BreakStatement	break ;	204:3:4689:4694	2512723	19	True				
ANR	2513231	Label	case R_SIGN_XREFS :	205:2:4698:4715	2512723	20	True				
ANR	2513232	Identifier	R_SIGN_XREFS		2512723	0					
ANR	2513233	ExpressionStatement	refs = r_str_new ( token )	206:3:4720:4744	2512723	21	True				
ANR	2513234	AssignmentExpression	refs = r_str_new ( token )		2512723	0		=			
ANR	2513235	Identifier	refs		2512723	0					
ANR	2513236	CallExpression	r_str_new ( token )		2512723	1					
ANR	2513237	Callee	r_str_new		2512723	0					
ANR	2513238	Identifier	r_str_new		2512723	0					
ANR	2513239	ArgumentList	token		2512723	1					
ANR	2513240	Argument	token		2512723	0					
ANR	2513241	Identifier	token		2512723	0					
ANR	2513242	ExpressionStatement	"nrefs = r_str_split ( refs , ',' )"	207:3:4749:4780	2512723	22	True				
ANR	2513243	AssignmentExpression	"nrefs = r_str_split ( refs , ',' )"		2512723	0		=			
ANR	2513244	Identifier	nrefs		2512723	0					
ANR	2513245	CallExpression	"r_str_split ( refs , ',' )"		2512723	1					
ANR	2513246	Callee	r_str_split		2512723	0					
ANR	2513247	Identifier	r_str_split		2512723	0					
ANR	2513248	ArgumentList	refs		2512723	1					
ANR	2513249	Argument	refs		2512723	0					
ANR	2513250	Identifier	refs		2512723	0					
ANR	2513251	Argument	"','"		2512723	1					
ANR	2513252	PrimaryExpression	"','"		2512723	0					
ANR	2513253	IfStatement	if ( nrefs > 0 )		2512723	23					
ANR	2513254	Condition	nrefs > 0	208:7:4789:4797	2512723	0	True				
ANR	2513255	RelationalExpression	nrefs > 0		2512723	0		>			
ANR	2513256	Identifier	nrefs		2512723	0					
ANR	2513257	PrimaryExpression	0		2512723	1					
ANR	2513258	CompoundStatement		87:18:1979:1979	2512723	1					
ANR	2513259	ExpressionStatement	it -> xrefs = r_list_newf ( ( RListFree ) free )	209:4:4806:4848	2512723	0	True				
ANR	2513260	AssignmentExpression	it -> xrefs = r_list_newf ( ( RListFree ) free )		2512723	0		=			
ANR	2513261	PtrMemberAccess	it -> xrefs		2512723	0					
ANR	2513262	Identifier	it		2512723	0					
ANR	2513263	Identifier	xrefs		2512723	1					
ANR	2513264	CallExpression	r_list_newf ( ( RListFree ) free )		2512723	1					
ANR	2513265	Callee	r_list_newf		2512723	0					
ANR	2513266	Identifier	r_list_newf		2512723	0					
ANR	2513267	ArgumentList	( RListFree ) free		2512723	1					
ANR	2513268	Argument	( RListFree ) free		2512723	0					
ANR	2513269	CastExpression	( RListFree ) free		2512723	0					
ANR	2513270	CastTarget	RListFree		2512723	0					
ANR	2513271	Identifier	free		2512723	1					
ANR	2513272	ForStatement	for ( i = 0 ; i < nrefs ; i ++ )		2512723	1					
ANR	2513273	ForInit	i = 0 ;	210:9:4859:4864	2512723	0	True				
ANR	2513274	AssignmentExpression	i = 0		2512723	0		=			
ANR	2513275	Identifier	i		2512723	0					
ANR	2513276	PrimaryExpression	0		2512723	1					
ANR	2513277	Condition	i < nrefs	210:16:4866:4874	2512723	1	True				
ANR	2513278	RelationalExpression	i < nrefs		2512723	0		<			
ANR	2513279	Identifier	i		2512723	0					
ANR	2513280	Identifier	nrefs		2512723	1					
ANR	2513281	PostIncDecOperationExpression	i ++	210:27:4877:4879	2512723	2	True				
ANR	2513282	Identifier	i		2512723	0					
ANR	2513283	IncDec	++		2512723	1					
ANR	2513284	CompoundStatement		89:32:2061:2061	2512723	3					
ANR	2513285	ExpressionStatement	"r_list_append ( it -> xrefs , r_str_newf ( r_str_word_get0 ( refs , i ) ) )"	211:5:4889:4954	2512723	0	True				
ANR	2513286	CallExpression	"r_list_append ( it -> xrefs , r_str_newf ( r_str_word_get0 ( refs , i ) ) )"		2512723	0					
ANR	2513287	Callee	r_list_append		2512723	0					
ANR	2513288	Identifier	r_list_append		2512723	0					
ANR	2513289	ArgumentList	it -> xrefs		2512723	1					
ANR	2513290	Argument	it -> xrefs		2512723	0					
ANR	2513291	PtrMemberAccess	it -> xrefs		2512723	0					
ANR	2513292	Identifier	it		2512723	0					
ANR	2513293	Identifier	xrefs		2512723	1					
ANR	2513294	Argument	"r_str_newf ( r_str_word_get0 ( refs , i ) )"		2512723	1					
ANR	2513295	CallExpression	"r_str_newf ( r_str_word_get0 ( refs , i ) )"		2512723	0					
ANR	2513296	Callee	r_str_newf		2512723	0					
ANR	2513297	Identifier	r_str_newf		2512723	0					
ANR	2513298	ArgumentList	"r_str_word_get0 ( refs , i )"		2512723	1					
ANR	2513299	Argument	"r_str_word_get0 ( refs , i )"		2512723	0					
ANR	2513300	CallExpression	"r_str_word_get0 ( refs , i )"		2512723	0					
ANR	2513301	Callee	r_str_word_get0		2512723	0					
ANR	2513302	Identifier	r_str_word_get0		2512723	0					
ANR	2513303	ArgumentList	refs		2512723	1					
ANR	2513304	Argument	refs		2512723	0					
ANR	2513305	Identifier	refs		2512723	0					
ANR	2513306	Argument	i		2512723	1					
ANR	2513307	Identifier	i		2512723	0					
ANR	2513308	BreakStatement	break ;	214:3:4970:4975	2512723	24	True				
ANR	2513309	Label	case R_SIGN_VARS :	215:2:4979:4995	2512723	25	True				
ANR	2513310	Identifier	R_SIGN_VARS		2512723	0					
ANR	2513311	ExpressionStatement	vars = r_str_new ( token )	216:3:5000:5024	2512723	26	True				
ANR	2513312	AssignmentExpression	vars = r_str_new ( token )		2512723	0		=			
ANR	2513313	Identifier	vars		2512723	0					
ANR	2513314	CallExpression	r_str_new ( token )		2512723	1					
ANR	2513315	Callee	r_str_new		2512723	0					
ANR	2513316	Identifier	r_str_new		2512723	0					
ANR	2513317	ArgumentList	token		2512723	1					
ANR	2513318	Argument	token		2512723	0					
ANR	2513319	Identifier	token		2512723	0					
ANR	2513320	ExpressionStatement	"nvars = r_str_split ( vars , ',' )"	217:3:5029:5060	2512723	27	True				
ANR	2513321	AssignmentExpression	"nvars = r_str_split ( vars , ',' )"		2512723	0		=			
ANR	2513322	Identifier	nvars		2512723	0					
ANR	2513323	CallExpression	"r_str_split ( vars , ',' )"		2512723	1					
ANR	2513324	Callee	r_str_split		2512723	0					
ANR	2513325	Identifier	r_str_split		2512723	0					
ANR	2513326	ArgumentList	vars		2512723	1					
ANR	2513327	Argument	vars		2512723	0					
ANR	2513328	Identifier	vars		2512723	0					
ANR	2513329	Argument	"','"		2512723	1					
ANR	2513330	PrimaryExpression	"','"		2512723	0					
ANR	2513331	IfStatement	if ( nvars > 0 )		2512723	28					
ANR	2513332	Condition	nvars > 0	218:7:5069:5077	2512723	0	True				
ANR	2513333	RelationalExpression	nvars > 0		2512723	0		>			
ANR	2513334	Identifier	nvars		2512723	0					
ANR	2513335	PrimaryExpression	0		2512723	1					
ANR	2513336	CompoundStatement		97:18:2259:2259	2512723	1					
ANR	2513337	ExpressionStatement	it -> vars = r_list_newf ( ( RListFree ) free )	219:4:5086:5127	2512723	0	True				
ANR	2513338	AssignmentExpression	it -> vars = r_list_newf ( ( RListFree ) free )		2512723	0		=			
ANR	2513339	PtrMemberAccess	it -> vars		2512723	0					
ANR	2513340	Identifier	it		2512723	0					
ANR	2513341	Identifier	vars		2512723	1					
ANR	2513342	CallExpression	r_list_newf ( ( RListFree ) free )		2512723	1					
ANR	2513343	Callee	r_list_newf		2512723	0					
ANR	2513344	Identifier	r_list_newf		2512723	0					
ANR	2513345	ArgumentList	( RListFree ) free		2512723	1					
ANR	2513346	Argument	( RListFree ) free		2512723	0					
ANR	2513347	CastExpression	( RListFree ) free		2512723	0					
ANR	2513348	CastTarget	RListFree		2512723	0					
ANR	2513349	Identifier	free		2512723	1					
ANR	2513350	ForStatement	for ( i = 0 ; i < nvars ; i ++ )		2512723	1					
ANR	2513351	ForInit	i = 0 ;	220:9:5138:5143	2512723	0	True				
ANR	2513352	AssignmentExpression	i = 0		2512723	0		=			
ANR	2513353	Identifier	i		2512723	0					
ANR	2513354	PrimaryExpression	0		2512723	1					
ANR	2513355	Condition	i < nvars	220:16:5145:5153	2512723	1	True				
ANR	2513356	RelationalExpression	i < nvars		2512723	0		<			
ANR	2513357	Identifier	i		2512723	0					
ANR	2513358	Identifier	nvars		2512723	1					
ANR	2513359	PostIncDecOperationExpression	i ++	220:27:5156:5158	2512723	2	True				
ANR	2513360	Identifier	i		2512723	0					
ANR	2513361	IncDec	++		2512723	1					
ANR	2513362	CompoundStatement		99:32:2340:2340	2512723	3					
ANR	2513363	ExpressionStatement	"r_list_append ( it -> vars , r_str_newf ( r_str_word_get0 ( vars , i ) ) )"	221:5:5168:5232	2512723	0	True				
ANR	2513364	CallExpression	"r_list_append ( it -> vars , r_str_newf ( r_str_word_get0 ( vars , i ) ) )"		2512723	0					
ANR	2513365	Callee	r_list_append		2512723	0					
ANR	2513366	Identifier	r_list_append		2512723	0					
ANR	2513367	ArgumentList	it -> vars		2512723	1					
ANR	2513368	Argument	it -> vars		2512723	0					
ANR	2513369	PtrMemberAccess	it -> vars		2512723	0					
ANR	2513370	Identifier	it		2512723	0					
ANR	2513371	Identifier	vars		2512723	1					
ANR	2513372	Argument	"r_str_newf ( r_str_word_get0 ( vars , i ) )"		2512723	1					
ANR	2513373	CallExpression	"r_str_newf ( r_str_word_get0 ( vars , i ) )"		2512723	0					
ANR	2513374	Callee	r_str_newf		2512723	0					
ANR	2513375	Identifier	r_str_newf		2512723	0					
ANR	2513376	ArgumentList	"r_str_word_get0 ( vars , i )"		2512723	1					
ANR	2513377	Argument	"r_str_word_get0 ( vars , i )"		2512723	0					
ANR	2513378	CallExpression	"r_str_word_get0 ( vars , i )"		2512723	0					
ANR	2513379	Callee	r_str_word_get0		2512723	0					
ANR	2513380	Identifier	r_str_word_get0		2512723	0					
ANR	2513381	ArgumentList	vars		2512723	1					
ANR	2513382	Argument	vars		2512723	0					
ANR	2513383	Identifier	vars		2512723	0					
ANR	2513384	Argument	i		2512723	1					
ANR	2513385	Identifier	i		2512723	0					
ANR	2513386	BreakStatement	break ;	224:3:5248:5253	2512723	29	True				
ANR	2513387	Label	case R_SIGN_BBHASH :	225:2:5257:5275	2512723	30	True				
ANR	2513388	Identifier	R_SIGN_BBHASH		2512723	0					
ANR	2513389	IfStatement	if ( token [ 0 ] != 0 )		2512723	31					
ANR	2513390	Condition	token [ 0 ] != 0	226:7:5284:5296	2512723	0	True				
ANR	2513391	EqualityExpression	token [ 0 ] != 0		2512723	0		!=			
ANR	2513392	ArrayIndexing	token [ 0 ]		2512723	0					
ANR	2513393	Identifier	token		2512723	0					
ANR	2513394	PrimaryExpression	0		2512723	1					
ANR	2513395	PrimaryExpression	0		2512723	1					
ANR	2513396	CompoundStatement		105:22:2478:2478	2512723	1					
ANR	2513397	ExpressionStatement	it -> hash = R_NEW0 ( RSignHash )	227:4:5305:5334	2512723	0	True				
ANR	2513398	AssignmentExpression	it -> hash = R_NEW0 ( RSignHash )		2512723	0		=			
ANR	2513399	PtrMemberAccess	it -> hash		2512723	0					
ANR	2513400	Identifier	it		2512723	0					
ANR	2513401	Identifier	hash		2512723	1					
ANR	2513402	CallExpression	R_NEW0 ( RSignHash )		2512723	1					
ANR	2513403	Callee	R_NEW0		2512723	0					
ANR	2513404	Identifier	R_NEW0		2512723	0					
ANR	2513405	ArgumentList	RSignHash		2512723	1					
ANR	2513406	Argument	RSignHash		2512723	0					
ANR	2513407	Identifier	RSignHash		2512723	0					
ANR	2513408	IfStatement	if ( it -> hash )		2512723	1					
ANR	2513409	Condition	it -> hash	228:8:5344:5351	2512723	0	True				
ANR	2513410	PtrMemberAccess	it -> hash		2512723	0					
ANR	2513411	Identifier	it		2512723	0					
ANR	2513412	Identifier	hash		2512723	1					
ANR	2513413	CompoundStatement		107:18:2533:2533	2512723	1					
ANR	2513414	ExpressionStatement	it -> hash -> bbhash = r_str_new ( token )	229:5:5361:5397	2512723	0	True				
ANR	2513415	AssignmentExpression	it -> hash -> bbhash = r_str_new ( token )		2512723	0		=			
ANR	2513416	PtrMemberAccess	it -> hash -> bbhash		2512723	0					
ANR	2513417	PtrMemberAccess	it -> hash		2512723	0					
ANR	2513418	Identifier	it		2512723	0					
ANR	2513419	Identifier	hash		2512723	1					
ANR	2513420	Identifier	bbhash		2512723	1					
ANR	2513421	CallExpression	r_str_new ( token )		2512723	1					
ANR	2513422	Callee	r_str_new		2512723	0					
ANR	2513423	Identifier	r_str_new		2512723	0					
ANR	2513424	ArgumentList	token		2512723	1					
ANR	2513425	Argument	token		2512723	0					
ANR	2513426	Identifier	token		2512723	0					
ANR	2513427	BreakStatement	break ;	232:3:5413:5418	2512723	32	True				
ANR	2513428	Label	case R_SIGN_BYTES :	233:2:5422:5439	2512723	33	True				
ANR	2513429	Identifier	R_SIGN_BYTES		2512723	0					
ANR	2513430	IfStatement	if ( ! it -> bytes )		2512723	34					
ANR	2513431	Condition	! it -> bytes	234:7:5448:5457	2512723	0	True				
ANR	2513432	UnaryOperationExpression	! it -> bytes		2512723	0					
ANR	2513433	UnaryOperator	!		2512723	0					
ANR	2513434	PtrMemberAccess	it -> bytes		2512723	1					
ANR	2513435	Identifier	it		2512723	0					
ANR	2513436	Identifier	bytes		2512723	1					
ANR	2513437	CompoundStatement		113:19:2639:2639	2512723	1					
ANR	2513438	ExpressionStatement	"eprintf ( ""Missing bytes-size command before bytes\\n"" )"	235:4:5466:5519	2512723	0	True				
ANR	2513439	CallExpression	"eprintf ( ""Missing bytes-size command before bytes\\n"" )"		2512723	0					
ANR	2513440	Callee	eprintf		2512723	0					
ANR	2513441	Identifier	eprintf		2512723	0					
ANR	2513442	ArgumentList	"""Missing bytes-size command before bytes\\n"""		2512723	1					
ANR	2513443	Argument	"""Missing bytes-size command before bytes\\n"""		2512723	0					
ANR	2513444	PrimaryExpression	"""Missing bytes-size command before bytes\\n"""		2512723	0					
ANR	2513445	BreakStatement	break ;	236:4:5525:5530	2512723	1	True				
ANR	2513446	IfStatement	if ( strlen ( token ) != 2 * it -> bytes -> size )		2512723	35					
ANR	2513447	Condition	strlen ( token ) != 2 * it -> bytes -> size	238:7:5544:5580	2512723	0	True				
ANR	2513448	EqualityExpression	strlen ( token ) != 2 * it -> bytes -> size		2512723	0		!=			
ANR	2513449	CallExpression	strlen ( token )		2512723	0					
ANR	2513450	Callee	strlen		2512723	0					
ANR	2513451	Identifier	strlen		2512723	0					
ANR	2513452	ArgumentList	token		2512723	1					
ANR	2513453	Argument	token		2512723	0					
ANR	2513454	Identifier	token		2512723	0					
ANR	2513455	MultiplicativeExpression	2 * it -> bytes -> size		2512723	1		*			
ANR	2513456	PrimaryExpression	2		2512723	0					
ANR	2513457	PtrMemberAccess	it -> bytes -> size		2512723	1					
ANR	2513458	PtrMemberAccess	it -> bytes		2512723	0					
ANR	2513459	Identifier	it		2512723	0					
ANR	2513460	Identifier	bytes		2512723	1					
ANR	2513461	Identifier	size		2512723	1					
ANR	2513462	CompoundStatement		117:46:2762:2762	2512723	1					
ANR	2513463	GotoStatement	goto out ;	239:4:5589:5597	2512723	0	True				
ANR	2513464	Identifier	out		2512723	0					
ANR	2513465	ExpressionStatement	it -> bytes -> bytes = malloc ( it -> bytes -> size )	241:3:5607:5650	2512723	36	True				
ANR	2513466	AssignmentExpression	it -> bytes -> bytes = malloc ( it -> bytes -> size )		2512723	0		=			
ANR	2513467	PtrMemberAccess	it -> bytes -> bytes		2512723	0					
ANR	2513468	PtrMemberAccess	it -> bytes		2512723	0					
ANR	2513469	Identifier	it		2512723	0					
ANR	2513470	Identifier	bytes		2512723	1					
ANR	2513471	Identifier	bytes		2512723	1					
ANR	2513472	CallExpression	malloc ( it -> bytes -> size )		2512723	1					
ANR	2513473	Callee	malloc		2512723	0					
ANR	2513474	Identifier	malloc		2512723	0					
ANR	2513475	ArgumentList	it -> bytes -> size		2512723	1					
ANR	2513476	Argument	it -> bytes -> size		2512723	0					
ANR	2513477	PtrMemberAccess	it -> bytes -> size		2512723	0					
ANR	2513478	PtrMemberAccess	it -> bytes		2512723	0					
ANR	2513479	Identifier	it		2512723	0					
ANR	2513480	Identifier	bytes		2512723	1					
ANR	2513481	Identifier	size		2512723	1					
ANR	2513482	IfStatement	if ( it -> bytes -> bytes )		2512723	37					
ANR	2513483	Condition	it -> bytes -> bytes	242:7:5659:5674	2512723	0	True				
ANR	2513484	PtrMemberAccess	it -> bytes -> bytes		2512723	0					
ANR	2513485	PtrMemberAccess	it -> bytes		2512723	0					
ANR	2513486	Identifier	it		2512723	0					
ANR	2513487	Identifier	bytes		2512723	1					
ANR	2513488	Identifier	bytes		2512723	1					
ANR	2513489	CompoundStatement		121:25:2856:2856	2512723	1					
ANR	2513490	ExpressionStatement	"r_hex_str2bin ( token , it -> bytes -> bytes )"	243:4:5683:5722	2512723	0	True				
ANR	2513491	CallExpression	"r_hex_str2bin ( token , it -> bytes -> bytes )"		2512723	0					
ANR	2513492	Callee	r_hex_str2bin		2512723	0					
ANR	2513493	Identifier	r_hex_str2bin		2512723	0					
ANR	2513494	ArgumentList	token		2512723	1					
ANR	2513495	Argument	token		2512723	0					
ANR	2513496	Identifier	token		2512723	0					
ANR	2513497	Argument	it -> bytes -> bytes		2512723	1					
ANR	2513498	PtrMemberAccess	it -> bytes -> bytes		2512723	0					
ANR	2513499	PtrMemberAccess	it -> bytes		2512723	0					
ANR	2513500	Identifier	it		2512723	0					
ANR	2513501	Identifier	bytes		2512723	1					
ANR	2513502	Identifier	bytes		2512723	1					
ANR	2513503	BreakStatement	break ;	245:3:5732:5737	2512723	38	True				
ANR	2513504	Label	case R_SIGN_BYTES_MASK :	246:2:5741:5763	2512723	39	True				
ANR	2513505	Identifier	R_SIGN_BYTES_MASK		2512723	0					
ANR	2513506	IfStatement	if ( ! it -> bytes )		2512723	40					
ANR	2513507	Condition	! it -> bytes	247:7:5772:5781	2512723	0	True				
ANR	2513508	UnaryOperationExpression	! it -> bytes		2512723	0					
ANR	2513509	UnaryOperator	!		2512723	0					
ANR	2513510	PtrMemberAccess	it -> bytes		2512723	1					
ANR	2513511	Identifier	it		2512723	0					
ANR	2513512	Identifier	bytes		2512723	1					
ANR	2513513	CompoundStatement		126:19:2963:2963	2512723	1					
ANR	2513514	ExpressionStatement	"eprintf ( ""Missing bytes-size command before bytes-mask\\n"" )"	248:4:5790:5848	2512723	0	True				
ANR	2513515	CallExpression	"eprintf ( ""Missing bytes-size command before bytes-mask\\n"" )"		2512723	0					
ANR	2513516	Callee	eprintf		2512723	0					
ANR	2513517	Identifier	eprintf		2512723	0					
ANR	2513518	ArgumentList	"""Missing bytes-size command before bytes-mask\\n"""		2512723	1					
ANR	2513519	Argument	"""Missing bytes-size command before bytes-mask\\n"""		2512723	0					
ANR	2513520	PrimaryExpression	"""Missing bytes-size command before bytes-mask\\n"""		2512723	0					
ANR	2513521	BreakStatement	break ;	249:4:5854:5859	2512723	1	True				
ANR	2513522	IfStatement	if ( strlen ( token ) != 2 * it -> bytes -> size )		2512723	41					
ANR	2513523	Condition	strlen ( token ) != 2 * it -> bytes -> size	251:7:5873:5909	2512723	0	True				
ANR	2513524	EqualityExpression	strlen ( token ) != 2 * it -> bytes -> size		2512723	0		!=			
ANR	2513525	CallExpression	strlen ( token )		2512723	0					
ANR	2513526	Callee	strlen		2512723	0					
ANR	2513527	Identifier	strlen		2512723	0					
ANR	2513528	ArgumentList	token		2512723	1					
ANR	2513529	Argument	token		2512723	0					
ANR	2513530	Identifier	token		2512723	0					
ANR	2513531	MultiplicativeExpression	2 * it -> bytes -> size		2512723	1		*			
ANR	2513532	PrimaryExpression	2		2512723	0					
ANR	2513533	PtrMemberAccess	it -> bytes -> size		2512723	1					
ANR	2513534	PtrMemberAccess	it -> bytes		2512723	0					
ANR	2513535	Identifier	it		2512723	0					
ANR	2513536	Identifier	bytes		2512723	1					
ANR	2513537	Identifier	size		2512723	1					
ANR	2513538	CompoundStatement		130:46:3091:3091	2512723	1					
ANR	2513539	GotoStatement	goto out ;	252:4:5918:5926	2512723	0	True				
ANR	2513540	Identifier	out		2512723	0					
ANR	2513541	ExpressionStatement	free ( it -> bytes -> mask )	254:3:5936:5958	2512723	42	True				
ANR	2513542	CallExpression	free ( it -> bytes -> mask )		2512723	0					
ANR	2513543	Callee	free		2512723	0					
ANR	2513544	Identifier	free		2512723	0					
ANR	2513545	ArgumentList	it -> bytes -> mask		2512723	1					
ANR	2513546	Argument	it -> bytes -> mask		2512723	0					
ANR	2513547	PtrMemberAccess	it -> bytes -> mask		2512723	0					
ANR	2513548	PtrMemberAccess	it -> bytes		2512723	0					
ANR	2513549	Identifier	it		2512723	0					
ANR	2513550	Identifier	bytes		2512723	1					
ANR	2513551	Identifier	mask		2512723	1					
ANR	2513552	ExpressionStatement	it -> bytes -> mask = malloc ( it -> bytes -> size )	255:3:5963:6005	2512723	43	True				
ANR	2513553	AssignmentExpression	it -> bytes -> mask = malloc ( it -> bytes -> size )		2512723	0		=			
ANR	2513554	PtrMemberAccess	it -> bytes -> mask		2512723	0					
ANR	2513555	PtrMemberAccess	it -> bytes		2512723	0					
ANR	2513556	Identifier	it		2512723	0					
ANR	2513557	Identifier	bytes		2512723	1					
ANR	2513558	Identifier	mask		2512723	1					
ANR	2513559	CallExpression	malloc ( it -> bytes -> size )		2512723	1					
ANR	2513560	Callee	malloc		2512723	0					
ANR	2513561	Identifier	malloc		2512723	0					
ANR	2513562	ArgumentList	it -> bytes -> size		2512723	1					
ANR	2513563	Argument	it -> bytes -> size		2512723	0					
ANR	2513564	PtrMemberAccess	it -> bytes -> size		2512723	0					
ANR	2513565	PtrMemberAccess	it -> bytes		2512723	0					
ANR	2513566	Identifier	it		2512723	0					
ANR	2513567	Identifier	bytes		2512723	1					
ANR	2513568	Identifier	size		2512723	1					
ANR	2513569	IfStatement	if ( ! it -> bytes -> mask )		2512723	44					
ANR	2513570	Condition	! it -> bytes -> mask	256:7:6014:6029	2512723	0	True				
ANR	2513571	UnaryOperationExpression	! it -> bytes -> mask		2512723	0					
ANR	2513572	UnaryOperator	!		2512723	0					
ANR	2513573	PtrMemberAccess	it -> bytes -> mask		2512723	1					
ANR	2513574	PtrMemberAccess	it -> bytes		2512723	0					
ANR	2513575	Identifier	it		2512723	0					
ANR	2513576	Identifier	bytes		2512723	1					
ANR	2513577	Identifier	mask		2512723	1					
ANR	2513578	CompoundStatement		135:25:3211:3211	2512723	1					
ANR	2513579	GotoStatement	goto out ;	257:4:6038:6046	2512723	0	True				
ANR	2513580	Identifier	out		2512723	0					
ANR	2513581	ExpressionStatement	"r_hex_str2bin ( token , it -> bytes -> mask )"	259:3:6056:6094	2512723	45	True				
ANR	2513582	CallExpression	"r_hex_str2bin ( token , it -> bytes -> mask )"		2512723	0					
ANR	2513583	Callee	r_hex_str2bin		2512723	0					
ANR	2513584	Identifier	r_hex_str2bin		2512723	0					
ANR	2513585	ArgumentList	token		2512723	1					
ANR	2513586	Argument	token		2512723	0					
ANR	2513587	Identifier	token		2512723	0					
ANR	2513588	Argument	it -> bytes -> mask		2512723	1					
ANR	2513589	PtrMemberAccess	it -> bytes -> mask		2512723	0					
ANR	2513590	PtrMemberAccess	it -> bytes		2512723	0					
ANR	2513591	Identifier	it		2512723	0					
ANR	2513592	Identifier	bytes		2512723	1					
ANR	2513593	Identifier	mask		2512723	1					
ANR	2513594	BreakStatement	break ;	260:3:6099:6104	2512723	46	True				
ANR	2513595	Label	case R_SIGN_BYTES_SIZE :	261:2:6108:6130	2512723	47	True				
ANR	2513596	Identifier	R_SIGN_BYTES_SIZE		2512723	0					
ANR	2513597	ExpressionStatement	size = atoi ( token )	263:3:6150:6169	2512723	48	True				
ANR	2513598	AssignmentExpression	size = atoi ( token )		2512723	0		=			
ANR	2513599	Identifier	size		2512723	0					
ANR	2513600	CallExpression	atoi ( token )		2512723	1					
ANR	2513601	Callee	atoi		2512723	0					
ANR	2513602	Identifier	atoi		2512723	0					
ANR	2513603	ArgumentList	token		2512723	1					
ANR	2513604	Argument	token		2512723	0					
ANR	2513605	Identifier	token		2512723	0					
ANR	2513606	IfStatement	if ( size > 0 )		2512723	49					
ANR	2513607	Condition	size > 0	264:7:6178:6185	2512723	0	True				
ANR	2513608	RelationalExpression	size > 0		2512723	0		>			
ANR	2513609	Identifier	size		2512723	0					
ANR	2513610	PrimaryExpression	0		2512723	1					
ANR	2513611	CompoundStatement		143:17:3367:3367	2512723	1					
ANR	2513612	ExpressionStatement	free ( it -> bytes )	265:4:6194:6210	2512723	0	True				
ANR	2513613	CallExpression	free ( it -> bytes )		2512723	0					
ANR	2513614	Callee	free		2512723	0					
ANR	2513615	Identifier	free		2512723	0					
ANR	2513616	ArgumentList	it -> bytes		2512723	1					
ANR	2513617	Argument	it -> bytes		2512723	0					
ANR	2513618	PtrMemberAccess	it -> bytes		2512723	0					
ANR	2513619	Identifier	it		2512723	0					
ANR	2513620	Identifier	bytes		2512723	1					
ANR	2513621	ExpressionStatement	it -> bytes = R_NEW0 ( RSignBytes )	266:4:6216:6247	2512723	1	True				
ANR	2513622	AssignmentExpression	it -> bytes = R_NEW0 ( RSignBytes )		2512723	0		=			
ANR	2513623	PtrMemberAccess	it -> bytes		2512723	0					
ANR	2513624	Identifier	it		2512723	0					
ANR	2513625	Identifier	bytes		2512723	1					
ANR	2513626	CallExpression	R_NEW0 ( RSignBytes )		2512723	1					
ANR	2513627	Callee	R_NEW0		2512723	0					
ANR	2513628	Identifier	R_NEW0		2512723	0					
ANR	2513629	ArgumentList	RSignBytes		2512723	1					
ANR	2513630	Argument	RSignBytes		2512723	0					
ANR	2513631	Identifier	RSignBytes		2512723	0					
ANR	2513632	IfStatement	if ( ! it -> bytes )		2512723	2					
ANR	2513633	Condition	! it -> bytes	267:8:6257:6266	2512723	0	True				
ANR	2513634	UnaryOperationExpression	! it -> bytes		2512723	0					
ANR	2513635	UnaryOperator	!		2512723	0					
ANR	2513636	PtrMemberAccess	it -> bytes		2512723	1					
ANR	2513637	Identifier	it		2512723	0					
ANR	2513638	Identifier	bytes		2512723	1					
ANR	2513639	CompoundStatement		146:20:3448:3448	2512723	1					
ANR	2513640	GotoStatement	goto out ;	268:5:6276:6284	2512723	0	True				
ANR	2513641	Identifier	out		2512723	0					
ANR	2513642	ExpressionStatement	it -> bytes -> size = size	270:4:6296:6318	2512723	3	True				
ANR	2513643	AssignmentExpression	it -> bytes -> size = size		2512723	0		=			
ANR	2513644	PtrMemberAccess	it -> bytes -> size		2512723	0					
ANR	2513645	PtrMemberAccess	it -> bytes		2512723	0					
ANR	2513646	Identifier	it		2512723	0					
ANR	2513647	Identifier	bytes		2512723	1					
ANR	2513648	Identifier	size		2512723	1					
ANR	2513649	Identifier	size		2512723	1					
ANR	2513650	BreakStatement	break ;	272:3:6328:6333	2512723	50	True				
ANR	2513651	Label	default :	273:2:6337:6344	2512723	51	True				
ANR	2513652	Identifier	default		2512723	0					
ANR	2513653	ExpressionStatement	"eprintf ( ""Unsupported (%s)\\n"" , word )"	274:3:6349:6385	2512723	52	True				
ANR	2513654	CallExpression	"eprintf ( ""Unsupported (%s)\\n"" , word )"		2512723	0					
ANR	2513655	Callee	eprintf		2512723	0					
ANR	2513656	Identifier	eprintf		2512723	0					
ANR	2513657	ArgumentList	"""Unsupported (%s)\\n"""		2512723	1					
ANR	2513658	Argument	"""Unsupported (%s)\\n"""		2512723	0					
ANR	2513659	PrimaryExpression	"""Unsupported (%s)\\n"""		2512723	0					
ANR	2513660	Argument	word		2512723	1					
ANR	2513661	Identifier	word		2512723	0					
ANR	2513662	BreakStatement	break ;	275:3:6390:6395	2512723	53	True				
ANR	2513663	Label	out :	278:0:6404:6407	2512723	15	True				
ANR	2513664	Identifier	out		2512723	0					
ANR	2513665	ExpressionStatement	free ( k2 )	279:1:6410:6419	2512723	16	True				
ANR	2513666	CallExpression	free ( k2 )		2512723	0					
ANR	2513667	Callee	free		2512723	0					
ANR	2513668	Identifier	free		2512723	0					
ANR	2513669	ArgumentList	k2		2512723	1					
ANR	2513670	Argument	k2		2512723	0					
ANR	2513671	Identifier	k2		2512723	0					
ANR	2513672	ExpressionStatement	free ( v2 )	280:1:6422:6431	2512723	17	True				
ANR	2513673	CallExpression	free ( v2 )		2512723	0					
ANR	2513674	Callee	free		2512723	0					
ANR	2513675	Identifier	free		2512723	0					
ANR	2513676	ArgumentList	v2		2512723	1					
ANR	2513677	Argument	v2		2512723	0					
ANR	2513678	Identifier	v2		2512723	0					
ANR	2513679	ExpressionStatement	free ( refs )	281:1:6434:6445	2512723	18	True				
ANR	2513680	CallExpression	free ( refs )		2512723	0					
ANR	2513681	Callee	free		2512723	0					
ANR	2513682	Identifier	free		2512723	0					
ANR	2513683	ArgumentList	refs		2512723	1					
ANR	2513684	Argument	refs		2512723	0					
ANR	2513685	Identifier	refs		2512723	0					
ANR	2513686	ExpressionStatement	free ( vars )	282:1:6448:6459	2512723	19	True				
ANR	2513687	CallExpression	free ( vars )		2512723	0					
ANR	2513688	Callee	free		2512723	0					
ANR	2513689	Identifier	free		2512723	0					
ANR	2513690	ArgumentList	vars		2512723	1					
ANR	2513691	Argument	vars		2512723	0					
ANR	2513692	Identifier	vars		2512723	0					
ANR	2513693	ReturnStatement	return ( w == n ) ;	283:1:6462:6477	2512723	20	True				
ANR	2513694	EqualityExpression	w == n		2512723	0		==			
ANR	2513695	Identifier	w		2512723	0					
ANR	2513696	Identifier	n		2512723	1					
ANR	2513697	ReturnType	R_API bool		2512723	1					
ANR	2513698	Identifier	r_sign_deserialize		2512723	2					
ANR	2513699	ParameterList	"RAnal * a , RSignItem * it , const char * k , const char * v"		2512723	3					
ANR	2513700	Parameter	RAnal * a	122:30:2765:2772	2512723	0	True				
ANR	2513701	ParameterType	RAnal *		2512723	0					
ANR	2513702	Identifier	a		2512723	1					
ANR	2513703	Parameter	RSignItem * it	122:40:2775:2787	2512723	1	True				
ANR	2513704	ParameterType	RSignItem *		2512723	0					
ANR	2513705	Identifier	it		2512723	1					
ANR	2513706	Parameter	const char * k	122:55:2790:2802	2512723	2	True				
ANR	2513707	ParameterType	const char *		2512723	0					
ANR	2513708	Identifier	k		2512723	1					
ANR	2513709	Parameter	const char * v	122:70:2805:2817	2512723	3	True				
ANR	2513710	ParameterType	const char *		2512723	0					
ANR	2513711	Identifier	v		2512723	1					
ANR	2513712	CFGEntryNode	ENTRY		2512723		True				
ANR	2513713	CFGExitNode	EXIT		2512723		True				
ANR	2513714	Symbol	it -> graph		2512723						
ANR	2513715	Symbol	strlen		2512723						
ANR	2513716	Symbol	atoll		2512723						
ANR	2513717	Symbol	RSignHash		2512723						
ANR	2513718	Symbol	* * it		2512723						
ANR	2513719	Symbol	it -> bytes -> size		2512723						
ANR	2513720	Symbol	vars		2512723						
ANR	2513721	Symbol	r_str_new		2512723						
ANR	2513722	Symbol	it -> realname		2512723						
ANR	2513723	Symbol	it -> comment		2512723						
ANR	2513724	Symbol	it -> hash -> bbhash		2512723						
ANR	2513725	Symbol	strcmp		2512723						
ANR	2513726	Symbol	NULL		2512723						
ANR	2513727	Symbol	it -> bytes		2512723						
ANR	2513728	Symbol	r_list_newf		2512723						
ANR	2513729	Symbol	k2		2512723						
ANR	2513730	Symbol	it -> name		2512723						
ANR	2513731	Symbol	it		2512723						
ANR	2513732	Symbol	it -> space		2512723						
ANR	2513733	Symbol	R_NEW0		2512723						
ANR	2513734	Symbol	size		2512723						
ANR	2513735	Symbol	it -> xrefs		2512723						
ANR	2513736	Symbol	word		2512723						
ANR	2513737	Symbol	RSignBytes		2512723						
ANR	2513738	Symbol	it -> vars		2512723						
ANR	2513739	Symbol	r_str_newf		2512723						
ANR	2513740	Symbol	& a -> zign_spaces		2512723						
ANR	2513741	Symbol	it -> hash		2512723						
ANR	2513742	Symbol	RSignGraph		2512723						
ANR	2513743	Symbol	free		2512723						
ANR	2513744	Symbol	it -> refs		2512723						
ANR	2513745	Symbol	nvars		2512723						
ANR	2513746	Symbol	atoi		2512723						
ANR	2513747	Symbol	a		2512723						
ANR	2513748	Symbol	r_spaces_add		2512723						
ANR	2513749	Symbol	st		2512723						
ANR	2513750	Symbol	malloc		2512723						
ANR	2513751	Symbol	* it -> hash		2512723						
ANR	2513752	Symbol	* word		2512723						
ANR	2513753	Symbol	false		2512723						
ANR	2513754	Symbol	i		2512723						
ANR	2513755	Symbol	r_str_word_get0		2512723						
ANR	2513756	Symbol	k		2512723						
ANR	2513757	Symbol	nrefs		2512723						
ANR	2513758	Symbol	n		2512723						
ANR	2513759	Symbol	token		2512723						
ANR	2513760	Symbol	* it		2512723						
ANR	2513761	Symbol	it -> bytes -> bytes		2512723						
ANR	2513762	Symbol	* token		2512723						
ANR	2513763	Symbol	refs		2512723						
ANR	2513764	Symbol	r_str_split		2512723						
ANR	2513765	Symbol	v		2512723						
ANR	2513766	Symbol	w		2512723						
ANR	2513767	Symbol	it -> addr		2512723						
ANR	2513768	Symbol	strdup		2512723						
ANR	2513769	Symbol	v2		2512723						
ANR	2513770	Symbol	* it -> bytes		2512723						
ANR	2513771	Symbol	it -> bytes -> mask		2512723						
ANR	2513772	Function	serializeKey	286:0:6482:6645							
ANR	2513773	FunctionDef	"serializeKey (RAnal * a , const RSpace * space , const char * name , char * k)"		2513772	0					
ANR	2513774	CompoundStatement		286:83:6565:6645	2513772	0					
ANR	2513775	ExpressionStatement	"snprintf ( k , R_SIGN_KEY_MAXSZ , ""zign|%s|%s"" , space ? space -> name : ""*"" , name )"	287:1:6568:6643	2513772	0	True				
ANR	2513776	CallExpression	"snprintf ( k , R_SIGN_KEY_MAXSZ , ""zign|%s|%s"" , space ? space -> name : ""*"" , name )"		2513772	0					
ANR	2513777	Callee	snprintf		2513772	0					
ANR	2513778	Identifier	snprintf		2513772	0					
ANR	2513779	ArgumentList	k		2513772	1					
ANR	2513780	Argument	k		2513772	0					
ANR	2513781	Identifier	k		2513772	0					
ANR	2513782	Argument	R_SIGN_KEY_MAXSZ		2513772	1					
ANR	2513783	Identifier	R_SIGN_KEY_MAXSZ		2513772	0					
ANR	2513784	Argument	"""zign|%s|%s"""		2513772	2					
ANR	2513785	PrimaryExpression	"""zign|%s|%s"""		2513772	0					
ANR	2513786	Argument	"space ? space -> name : ""*"""		2513772	3					
ANR	2513787	ConditionalExpression	"space ? space -> name : ""*"""		2513772	0					
ANR	2513788	Condition	space		2513772	0					
ANR	2513789	Identifier	space		2513772	0					
ANR	2513790	PtrMemberAccess	space -> name		2513772	1					
ANR	2513791	Identifier	space		2513772	0					
ANR	2513792	Identifier	name		2513772	1					
ANR	2513793	PrimaryExpression	"""*"""		2513772	2					
ANR	2513794	Argument	name		2513772	4					
ANR	2513795	Identifier	name		2513772	0					
ANR	2513796	ReturnType	static void		2513772	1					
ANR	2513797	Identifier	serializeKey		2513772	2					
ANR	2513798	ParameterList	"RAnal * a , const RSpace * space , const char * name , char * k"		2513772	3					
ANR	2513799	Parameter	RAnal * a	286:25:6507:6514	2513772	0	True				
ANR	2513800	ParameterType	RAnal *		2513772	0					
ANR	2513801	Identifier	a		2513772	1					
ANR	2513802	Parameter	const RSpace * space	286:35:6517:6535	2513772	1	True				
ANR	2513803	ParameterType	const RSpace *		2513772	0					
ANR	2513804	Identifier	space		2513772	1					
ANR	2513805	Parameter	const char * name	286:56:6538:6553	2513772	2	True				
ANR	2513806	ParameterType	const char *		2513772	0					
ANR	2513807	Identifier	name		2513772	1					
ANR	2513808	Parameter	char * k	286:74:6556:6562	2513772	3	True				
ANR	2513809	ParameterType	char *		2513772	0					
ANR	2513810	Identifier	k		2513772	1					
ANR	2513811	CFGEntryNode	ENTRY		2513772		True				
ANR	2513812	CFGExitNode	EXIT		2513772		True				
ANR	2513813	Symbol	a		2513772						
ANR	2513814	Symbol	space -> name		2513772						
ANR	2513815	Symbol	name		2513772						
ANR	2513816	Symbol	R_SIGN_KEY_MAXSZ		2513772						
ANR	2513817	Symbol	* space		2513772						
ANR	2513818	Symbol	k		2513772						
ANR	2513819	Symbol	space		2513772						
ANR	2513820	Function	serializeKeySpaceStr	290:0:6648:6799							
ANR	2513821	FunctionDef	"serializeKeySpaceStr (RAnal * a , const char * space , const char * name , char * k)"		2513820	0					
ANR	2513822	CompoundStatement		290:89:6737:6799	2513820	0					
ANR	2513823	ExpressionStatement	"snprintf ( k , R_SIGN_KEY_MAXSZ , ""zign|%s|%s"" , space , name )"	291:1:6740:6797	2513820	0	True				
ANR	2513824	CallExpression	"snprintf ( k , R_SIGN_KEY_MAXSZ , ""zign|%s|%s"" , space , name )"		2513820	0					
ANR	2513825	Callee	snprintf		2513820	0					
ANR	2513826	Identifier	snprintf		2513820	0					
ANR	2513827	ArgumentList	k		2513820	1					
ANR	2513828	Argument	k		2513820	0					
ANR	2513829	Identifier	k		2513820	0					
ANR	2513830	Argument	R_SIGN_KEY_MAXSZ		2513820	1					
ANR	2513831	Identifier	R_SIGN_KEY_MAXSZ		2513820	0					
ANR	2513832	Argument	"""zign|%s|%s"""		2513820	2					
ANR	2513833	PrimaryExpression	"""zign|%s|%s"""		2513820	0					
ANR	2513834	Argument	space		2513820	3					
ANR	2513835	Identifier	space		2513820	0					
ANR	2513836	Argument	name		2513820	4					
ANR	2513837	Identifier	name		2513820	0					
ANR	2513838	ReturnType	static void		2513820	1					
ANR	2513839	Identifier	serializeKeySpaceStr		2513820	2					
ANR	2513840	ParameterList	"RAnal * a , const char * space , const char * name , char * k"		2513820	3					
ANR	2513841	Parameter	RAnal * a	290:33:6681:6688	2513820	0	True				
ANR	2513842	ParameterType	RAnal *		2513820	0					
ANR	2513843	Identifier	a		2513820	1					
ANR	2513844	Parameter	const char * space	290:43:6691:6707	2513820	1	True				
ANR	2513845	ParameterType	const char *		2513820	0					
ANR	2513846	Identifier	space		2513820	1					
ANR	2513847	Parameter	const char * name	290:62:6710:6725	2513820	2	True				
ANR	2513848	ParameterType	const char *		2513820	0					
ANR	2513849	Identifier	name		2513820	1					
ANR	2513850	Parameter	char * k	290:80:6728:6734	2513820	3	True				
ANR	2513851	ParameterType	char *		2513820	0					
ANR	2513852	Identifier	k		2513820	1					
ANR	2513853	CFGEntryNode	ENTRY		2513820		True				
ANR	2513854	CFGExitNode	EXIT		2513820		True				
ANR	2513855	Symbol	a		2513820						
ANR	2513856	Symbol	name		2513820						
ANR	2513857	Symbol	R_SIGN_KEY_MAXSZ		2513820						
ANR	2513858	Symbol	k		2513820						
ANR	2513859	Symbol	space		2513820						
ANR	2513860	Function	serialize	294:0:6802:9557							
ANR	2513861	FunctionDef	"serialize (RAnal * a , RSignItem * it , char * k , char * v)"		2513860	0					
ANR	2513862	CompoundStatement		294:65:6867:9557	2513860	0					
ANR	2513863	IdentifierDeclStatement	RListIter * iter = NULL ;	295:1:6870:6892	2513860	0	True				
ANR	2513864	IdentifierDecl	* iter = NULL		2513860	0					
ANR	2513865	IdentifierDeclType	RListIter *		2513860	0					
ANR	2513866	Identifier	iter		2513860	1					
ANR	2513867	AssignmentExpression	* iter = NULL		2513860	2		=			
ANR	2513868	Identifier	NULL		2513860	0					
ANR	2513869	Identifier	NULL		2513860	1					
ANR	2513870	IdentifierDeclStatement	"char * hexbytes = NULL , * hexmask = NULL , * hexgraph = NULL ;"	296:1:6895:6951	2513860	1	True				
ANR	2513871	IdentifierDecl	* hexbytes = NULL		2513860	0					
ANR	2513872	IdentifierDeclType	char *		2513860	0					
ANR	2513873	Identifier	hexbytes		2513860	1					
ANR	2513874	AssignmentExpression	* hexbytes = NULL		2513860	2		=			
ANR	2513875	Identifier	NULL		2513860	0					
ANR	2513876	Identifier	NULL		2513860	1					
ANR	2513877	IdentifierDecl	* hexmask = NULL		2513860	1					
ANR	2513878	IdentifierDeclType	char *		2513860	0					
ANR	2513879	Identifier	hexmask		2513860	1					
ANR	2513880	AssignmentExpression	* hexmask = NULL		2513860	2		=			
ANR	2513881	Identifier	NULL		2513860	0					
ANR	2513882	Identifier	NULL		2513860	1					
ANR	2513883	IdentifierDecl	* hexgraph = NULL		2513860	2					
ANR	2513884	IdentifierDeclType	char *		2513860	0					
ANR	2513885	Identifier	hexgraph		2513860	1					
ANR	2513886	AssignmentExpression	* hexgraph = NULL		2513860	2		=			
ANR	2513887	Identifier	NULL		2513860	0					
ANR	2513888	Identifier	NULL		2513860	1					
ANR	2513889	IdentifierDeclStatement	"char * refs = NULL , * xrefs = NULL , * ref = NULL , * var , * vars = NULL ;"	297:1:6954:7019	2513860	2	True				
ANR	2513890	IdentifierDecl	* refs = NULL		2513860	0					
ANR	2513891	IdentifierDeclType	char *		2513860	0					
ANR	2513892	Identifier	refs		2513860	1					
ANR	2513893	AssignmentExpression	* refs = NULL		2513860	2		=			
ANR	2513894	Identifier	NULL		2513860	0					
ANR	2513895	Identifier	NULL		2513860	1					
ANR	2513896	IdentifierDecl	* xrefs = NULL		2513860	1					
ANR	2513897	IdentifierDeclType	char *		2513860	0					
ANR	2513898	Identifier	xrefs		2513860	1					
ANR	2513899	AssignmentExpression	* xrefs = NULL		2513860	2		=			
ANR	2513900	Identifier	NULL		2513860	0					
ANR	2513901	Identifier	NULL		2513860	1					
ANR	2513902	IdentifierDecl	* ref = NULL		2513860	2					
ANR	2513903	IdentifierDeclType	char *		2513860	0					
ANR	2513904	Identifier	ref		2513860	1					
ANR	2513905	AssignmentExpression	* ref = NULL		2513860	2		=			
ANR	2513906	Identifier	NULL		2513860	0					
ANR	2513907	Identifier	NULL		2513860	1					
ANR	2513908	IdentifierDecl	* var		2513860	3					
ANR	2513909	IdentifierDeclType	char *		2513860	0					
ANR	2513910	Identifier	var		2513860	1					
ANR	2513911	IdentifierDecl	* vars = NULL		2513860	4					
ANR	2513912	IdentifierDeclType	char *		2513860	0					
ANR	2513913	Identifier	vars		2513860	1					
ANR	2513914	AssignmentExpression	* vars = NULL		2513860	2		=			
ANR	2513915	Identifier	NULL		2513860	0					
ANR	2513916	Identifier	NULL		2513860	1					
ANR	2513917	IdentifierDeclStatement	"int i = 0 , len = 0 ;"	298:1:7022:7040	2513860	3	True				
ANR	2513918	IdentifierDecl	i = 0		2513860	0					
ANR	2513919	IdentifierDeclType	int		2513860	0					
ANR	2513920	Identifier	i		2513860	1					
ANR	2513921	AssignmentExpression	i = 0		2513860	2		=			
ANR	2513922	Identifier	i		2513860	0					
ANR	2513923	PrimaryExpression	0		2513860	1					
ANR	2513924	IdentifierDecl	len = 0		2513860	1					
ANR	2513925	IdentifierDeclType	int		2513860	0					
ANR	2513926	Identifier	len		2513860	1					
ANR	2513927	AssignmentExpression	len = 0		2513860	2		=			
ANR	2513928	Identifier	len		2513860	0					
ANR	2513929	PrimaryExpression	0		2513860	1					
ANR	2513930	IdentifierDeclStatement	RSignBytes * bytes = it -> bytes ;	299:1:7043:7072	2513860	4	True				
ANR	2513931	IdentifierDecl	* bytes = it -> bytes		2513860	0					
ANR	2513932	IdentifierDeclType	RSignBytes *		2513860	0					
ANR	2513933	Identifier	bytes		2513860	1					
ANR	2513934	AssignmentExpression	* bytes = it -> bytes		2513860	2		=			
ANR	2513935	Identifier	bytes		2513860	0					
ANR	2513936	PtrMemberAccess	it -> bytes		2513860	1					
ANR	2513937	Identifier	it		2513860	0					
ANR	2513938	Identifier	bytes		2513860	1					
ANR	2513939	IdentifierDeclStatement	RSignGraph * graph = it -> graph ;	300:1:7075:7104	2513860	5	True				
ANR	2513940	IdentifierDecl	* graph = it -> graph		2513860	0					
ANR	2513941	IdentifierDeclType	RSignGraph *		2513860	0					
ANR	2513942	Identifier	graph		2513860	1					
ANR	2513943	AssignmentExpression	* graph = it -> graph		2513860	2		=			
ANR	2513944	Identifier	graph		2513860	0					
ANR	2513945	PtrMemberAccess	it -> graph		2513860	1					
ANR	2513946	Identifier	it		2513860	0					
ANR	2513947	Identifier	graph		2513860	1					
ANR	2513948	IdentifierDeclStatement	RSignHash * hash = it -> hash ;	301:1:7107:7133	2513860	6	True				
ANR	2513949	IdentifierDecl	* hash = it -> hash		2513860	0					
ANR	2513950	IdentifierDeclType	RSignHash *		2513860	0					
ANR	2513951	Identifier	hash		2513860	1					
ANR	2513952	AssignmentExpression	* hash = it -> hash		2513860	2		=			
ANR	2513953	Identifier	hash		2513860	0					
ANR	2513954	PtrMemberAccess	it -> hash		2513860	1					
ANR	2513955	Identifier	it		2513860	0					
ANR	2513956	Identifier	hash		2513860	1					
ANR	2513957	IfStatement	if ( k )		2513860	7					
ANR	2513958	Condition	k	303:5:7141:7141	2513860	0	True				
ANR	2513959	Identifier	k		2513860	0					
ANR	2513960	CompoundStatement		10:8:276:276	2513860	1					
ANR	2513961	ExpressionStatement	"serializeKey ( a , it -> space , it -> name , k )"	304:2:7148:7188	2513860	0	True				
ANR	2513962	CallExpression	"serializeKey ( a , it -> space , it -> name , k )"		2513860	0					
ANR	2513963	Callee	serializeKey		2513860	0					
ANR	2513964	Identifier	serializeKey		2513860	0					
ANR	2513965	ArgumentList	a		2513860	1					
ANR	2513966	Argument	a		2513860	0					
ANR	2513967	Identifier	a		2513860	0					
ANR	2513968	Argument	it -> space		2513860	1					
ANR	2513969	PtrMemberAccess	it -> space		2513860	0					
ANR	2513970	Identifier	it		2513860	0					
ANR	2513971	Identifier	space		2513860	1					
ANR	2513972	Argument	it -> name		2513860	2					
ANR	2513973	PtrMemberAccess	it -> name		2513860	0					
ANR	2513974	Identifier	it		2513860	0					
ANR	2513975	Identifier	name		2513860	1					
ANR	2513976	Argument	k		2513860	3					
ANR	2513977	Identifier	k		2513860	0					
ANR	2513978	IfStatement	if ( v )		2513860	8					
ANR	2513979	Condition	v	306:5:7198:7198	2513860	0	True				
ANR	2513980	Identifier	v		2513860	0					
ANR	2513981	CompoundStatement		96:2:2495:2526	2513860	1					
ANR	2513982	IfStatement	if ( bytes )		2513860	0					
ANR	2513983	Condition	bytes	307:6:7209:7213	2513860	0	True				
ANR	2513984	Identifier	bytes		2513860	0					
ANR	2513985	CompoundStatement		14:13:348:348	2513860	1					
ANR	2513986	ExpressionStatement	len = bytes -> size * 2 + 1	308:3:7221:7246	2513860	0	True				
ANR	2513987	AssignmentExpression	len = bytes -> size * 2 + 1		2513860	0		=			
ANR	2513988	Identifier	len		2513860	0					
ANR	2513989	AdditiveExpression	bytes -> size * 2 + 1		2513860	1		+			
ANR	2513990	MultiplicativeExpression	bytes -> size * 2		2513860	0		*			
ANR	2513991	PtrMemberAccess	bytes -> size		2513860	0					
ANR	2513992	Identifier	bytes		2513860	0					
ANR	2513993	Identifier	size		2513860	1					
ANR	2513994	PrimaryExpression	2		2513860	1					
ANR	2513995	PrimaryExpression	1		2513860	1					
ANR	2513996	ExpressionStatement	"hexbytes = calloc ( 1 , len )"	309:3:7251:7277	2513860	1	True				
ANR	2513997	AssignmentExpression	"hexbytes = calloc ( 1 , len )"		2513860	0		=			
ANR	2513998	Identifier	hexbytes		2513860	0					
ANR	2513999	CallExpression	"calloc ( 1 , len )"		2513860	1					
ANR	2514000	Callee	calloc		2513860	0					
ANR	2514001	Identifier	calloc		2513860	0					
ANR	2514002	ArgumentList	1		2513860	1					
ANR	2514003	Argument	1		2513860	0					
ANR	2514004	PrimaryExpression	1		2513860	0					
ANR	2514005	Argument	len		2513860	1					
ANR	2514006	Identifier	len		2513860	0					
ANR	2514007	ExpressionStatement	"hexmask = calloc ( 1 , len )"	310:3:7282:7307	2513860	2	True				
ANR	2514008	AssignmentExpression	"hexmask = calloc ( 1 , len )"		2513860	0		=			
ANR	2514009	Identifier	hexmask		2513860	0					
ANR	2514010	CallExpression	"calloc ( 1 , len )"		2513860	1					
ANR	2514011	Callee	calloc		2513860	0					
ANR	2514012	Identifier	calloc		2513860	0					
ANR	2514013	ArgumentList	1		2513860	1					
ANR	2514014	Argument	1		2513860	0					
ANR	2514015	PrimaryExpression	1		2513860	0					
ANR	2514016	Argument	len		2513860	1					
ANR	2514017	Identifier	len		2513860	0					
ANR	2514018	IfStatement	if ( ! hexbytes || ! hexmask )		2513860	3					
ANR	2514019	Condition	! hexbytes || ! hexmask	311:7:7316:7336	2513860	0	True				
ANR	2514020	OrExpression	! hexbytes || ! hexmask		2513860	0		||			
ANR	2514021	UnaryOperationExpression	! hexbytes		2513860	0					
ANR	2514022	UnaryOperator	!		2513860	0					
ANR	2514023	Identifier	hexbytes		2513860	1					
ANR	2514024	UnaryOperationExpression	! hexmask		2513860	1					
ANR	2514025	UnaryOperator	!		2513860	0					
ANR	2514026	Identifier	hexmask		2513860	1					
ANR	2514027	CompoundStatement		18:30:471:471	2513860	1					
ANR	2514028	ExpressionStatement	free ( hexbytes )	312:4:7345:7360	2513860	0	True				
ANR	2514029	CallExpression	free ( hexbytes )		2513860	0					
ANR	2514030	Callee	free		2513860	0					
ANR	2514031	Identifier	free		2513860	0					
ANR	2514032	ArgumentList	hexbytes		2513860	1					
ANR	2514033	Argument	hexbytes		2513860	0					
ANR	2514034	Identifier	hexbytes		2513860	0					
ANR	2514035	ExpressionStatement	free ( hexmask )	313:4:7366:7380	2513860	1	True				
ANR	2514036	CallExpression	free ( hexmask )		2513860	0					
ANR	2514037	Callee	free		2513860	0					
ANR	2514038	Identifier	free		2513860	0					
ANR	2514039	ArgumentList	hexmask		2513860	1					
ANR	2514040	Argument	hexmask		2513860	0					
ANR	2514041	Identifier	hexmask		2513860	0					
ANR	2514042	ReturnStatement	return ;	314:4:7386:7392	2513860	2	True				
ANR	2514043	IfStatement	if ( ! bytes -> bytes )		2513860	4					
ANR	2514044	Condition	! bytes -> bytes	316:7:7406:7418	2513860	0	True				
ANR	2514045	UnaryOperationExpression	! bytes -> bytes		2513860	0					
ANR	2514046	UnaryOperator	!		2513860	0					
ANR	2514047	PtrMemberAccess	bytes -> bytes		2513860	1					
ANR	2514048	Identifier	bytes		2513860	0					
ANR	2514049	Identifier	bytes		2513860	1					
ANR	2514050	CompoundStatement		23:22:553:553	2513860	1					
ANR	2514051	ExpressionStatement	bytes -> bytes = malloc ( ( bytes -> size + 1 ) * 3 )	317:4:7427:7472	2513860	0	True				
ANR	2514052	AssignmentExpression	bytes -> bytes = malloc ( ( bytes -> size + 1 ) * 3 )		2513860	0		=			
ANR	2514053	PtrMemberAccess	bytes -> bytes		2513860	0					
ANR	2514054	Identifier	bytes		2513860	0					
ANR	2514055	Identifier	bytes		2513860	1					
ANR	2514056	CallExpression	malloc ( ( bytes -> size + 1 ) * 3 )		2513860	1					
ANR	2514057	Callee	malloc		2513860	0					
ANR	2514058	Identifier	malloc		2513860	0					
ANR	2514059	ArgumentList	( bytes -> size + 1 ) * 3		2513860	1					
ANR	2514060	Argument	( bytes -> size + 1 ) * 3		2513860	0					
ANR	2514061	MultiplicativeExpression	( bytes -> size + 1 ) * 3		2513860	0		*			
ANR	2514062	AdditiveExpression	bytes -> size + 1		2513860	0		+			
ANR	2514063	PtrMemberAccess	bytes -> size		2513860	0					
ANR	2514064	Identifier	bytes		2513860	0					
ANR	2514065	Identifier	size		2513860	1					
ANR	2514066	PrimaryExpression	1		2513860	1					
ANR	2514067	PrimaryExpression	3		2513860	1					
ANR	2514068	ExpressionStatement	"r_hex_bin2str ( bytes -> bytes , bytes -> size , hexbytes )"	319:3:7482:7533	2513860	5	True				
ANR	2514069	CallExpression	"r_hex_bin2str ( bytes -> bytes , bytes -> size , hexbytes )"		2513860	0					
ANR	2514070	Callee	r_hex_bin2str		2513860	0					
ANR	2514071	Identifier	r_hex_bin2str		2513860	0					
ANR	2514072	ArgumentList	bytes -> bytes		2513860	1					
ANR	2514073	Argument	bytes -> bytes		2513860	0					
ANR	2514074	PtrMemberAccess	bytes -> bytes		2513860	0					
ANR	2514075	Identifier	bytes		2513860	0					
ANR	2514076	Identifier	bytes		2513860	1					
ANR	2514077	Argument	bytes -> size		2513860	1					
ANR	2514078	PtrMemberAccess	bytes -> size		2513860	0					
ANR	2514079	Identifier	bytes		2513860	0					
ANR	2514080	Identifier	size		2513860	1					
ANR	2514081	Argument	hexbytes		2513860	2					
ANR	2514082	Identifier	hexbytes		2513860	0					
ANR	2514083	IfStatement	if ( ! bytes -> mask )		2513860	6					
ANR	2514084	Condition	! bytes -> mask	320:7:7542:7553	2513860	0	True				
ANR	2514085	UnaryOperationExpression	! bytes -> mask		2513860	0					
ANR	2514086	UnaryOperator	!		2513860	0					
ANR	2514087	PtrMemberAccess	bytes -> mask		2513860	1					
ANR	2514088	Identifier	bytes		2513860	0					
ANR	2514089	Identifier	mask		2513860	1					
ANR	2514090	CompoundStatement		27:21:688:688	2513860	1					
ANR	2514091	ExpressionStatement	bytes -> mask = malloc ( ( bytes -> size + 1 ) * 3 )	321:4:7562:7606	2513860	0	True				
ANR	2514092	AssignmentExpression	bytes -> mask = malloc ( ( bytes -> size + 1 ) * 3 )		2513860	0		=			
ANR	2514093	PtrMemberAccess	bytes -> mask		2513860	0					
ANR	2514094	Identifier	bytes		2513860	0					
ANR	2514095	Identifier	mask		2513860	1					
ANR	2514096	CallExpression	malloc ( ( bytes -> size + 1 ) * 3 )		2513860	1					
ANR	2514097	Callee	malloc		2513860	0					
ANR	2514098	Identifier	malloc		2513860	0					
ANR	2514099	ArgumentList	( bytes -> size + 1 ) * 3		2513860	1					
ANR	2514100	Argument	( bytes -> size + 1 ) * 3		2513860	0					
ANR	2514101	MultiplicativeExpression	( bytes -> size + 1 ) * 3		2513860	0		*			
ANR	2514102	AdditiveExpression	bytes -> size + 1		2513860	0		+			
ANR	2514103	PtrMemberAccess	bytes -> size		2513860	0					
ANR	2514104	Identifier	bytes		2513860	0					
ANR	2514105	Identifier	size		2513860	1					
ANR	2514106	PrimaryExpression	1		2513860	1					
ANR	2514107	PrimaryExpression	3		2513860	1					
ANR	2514108	ExpressionStatement	"r_hex_bin2str ( bytes -> mask , bytes -> size , hexmask )"	323:3:7616:7665	2513860	7	True				
ANR	2514109	CallExpression	"r_hex_bin2str ( bytes -> mask , bytes -> size , hexmask )"		2513860	0					
ANR	2514110	Callee	r_hex_bin2str		2513860	0					
ANR	2514111	Identifier	r_hex_bin2str		2513860	0					
ANR	2514112	ArgumentList	bytes -> mask		2513860	1					
ANR	2514113	Argument	bytes -> mask		2513860	0					
ANR	2514114	PtrMemberAccess	bytes -> mask		2513860	0					
ANR	2514115	Identifier	bytes		2513860	0					
ANR	2514116	Identifier	mask		2513860	1					
ANR	2514117	Argument	bytes -> size		2513860	1					
ANR	2514118	PtrMemberAccess	bytes -> size		2513860	0					
ANR	2514119	Identifier	bytes		2513860	0					
ANR	2514120	Identifier	size		2513860	1					
ANR	2514121	Argument	hexmask		2513860	2					
ANR	2514122	Identifier	hexmask		2513860	0					
ANR	2514123	IfStatement	if ( graph )		2513860	1					
ANR	2514124	Condition	graph	325:6:7677:7681	2513860	0	True				
ANR	2514125	Identifier	graph		2513860	0					
ANR	2514126	CompoundStatement		32:13:816:816	2513860	1					
ANR	2514127	ExpressionStatement	"hexgraph = calloc ( 1 , sizeof ( RSignGraph ) * 2 + 1 )"	326:3:7689:7739	2513860	0	True				
ANR	2514128	AssignmentExpression	"hexgraph = calloc ( 1 , sizeof ( RSignGraph ) * 2 + 1 )"		2513860	0		=			
ANR	2514129	Identifier	hexgraph		2513860	0					
ANR	2514130	CallExpression	"calloc ( 1 , sizeof ( RSignGraph ) * 2 + 1 )"		2513860	1					
ANR	2514131	Callee	calloc		2513860	0					
ANR	2514132	Identifier	calloc		2513860	0					
ANR	2514133	ArgumentList	1		2513860	1					
ANR	2514134	Argument	1		2513860	0					
ANR	2514135	PrimaryExpression	1		2513860	0					
ANR	2514136	Argument	sizeof ( RSignGraph ) * 2 + 1		2513860	1					
ANR	2514137	AdditiveExpression	sizeof ( RSignGraph ) * 2 + 1		2513860	0		+			
ANR	2514138	MultiplicativeExpression	sizeof ( RSignGraph ) * 2		2513860	0		*			
ANR	2514139	SizeofExpression	sizeof ( RSignGraph )		2513860	0					
ANR	2514140	Sizeof	sizeof		2513860	0					
ANR	2514141	SizeofOperand	RSignGraph		2513860	1					
ANR	2514142	PrimaryExpression	2		2513860	1					
ANR	2514143	PrimaryExpression	1		2513860	1					
ANR	2514144	IfStatement	if ( hexgraph )		2513860	1					
ANR	2514145	Condition	hexgraph	327:7:7748:7755	2513860	0	True				
ANR	2514146	Identifier	hexgraph		2513860	0					
ANR	2514147	CompoundStatement		34:17:890:890	2513860	1					
ANR	2514148	ExpressionStatement	"r_hex_bin2str ( ( ut8 * ) graph , sizeof ( RSignGraph ) , hexgraph )"	328:4:7764:7824	2513860	0	True				
ANR	2514149	CallExpression	"r_hex_bin2str ( ( ut8 * ) graph , sizeof ( RSignGraph ) , hexgraph )"		2513860	0					
ANR	2514150	Callee	r_hex_bin2str		2513860	0					
ANR	2514151	Identifier	r_hex_bin2str		2513860	0					
ANR	2514152	ArgumentList	( ut8 * ) graph		2513860	1					
ANR	2514153	Argument	( ut8 * ) graph		2513860	0					
ANR	2514154	CastExpression	( ut8 * ) graph		2513860	0					
ANR	2514155	CastTarget	ut8 *		2513860	0					
ANR	2514156	Identifier	graph		2513860	1					
ANR	2514157	Argument	sizeof ( RSignGraph )		2513860	1					
ANR	2514158	SizeofExpression	sizeof ( RSignGraph )		2513860	0					
ANR	2514159	Sizeof	sizeof		2513860	0					
ANR	2514160	SizeofOperand	RSignGraph		2513860	1					
ANR	2514161	Argument	hexgraph		2513860	2					
ANR	2514162	Identifier	hexgraph		2513860	0					
ANR	2514163	ExpressionStatement	i = 0	331:2:7837:7842	2513860	2	True				
ANR	2514164	AssignmentExpression	i = 0		2513860	0		=			
ANR	2514165	Identifier	i		2513860	0					
ANR	2514166	PrimaryExpression	0		2513860	1					
ANR	2514167	Statement	r_list_foreach	332:2:7846:7859	2513860	3	True				
ANR	2514168	Statement	(	332:17:7861:7861	2513860	4	True				
ANR	2514169	Statement	it	332:18:7862:7863	2513860	5	True				
ANR	2514170	Statement	->	332:20:7864:7865	2513860	6	True				
ANR	2514171	Statement	refs	332:22:7866:7869	2513860	7	True				
ANR	2514172	Statement	","	332:26:7870:7870	2513860	8	True				
ANR	2514173	Statement	iter	332:28:7872:7875	2513860	9	True				
ANR	2514174	Statement	","	332:32:7876:7876	2513860	10	True				
ANR	2514175	Statement	ref	332:34:7878:7880	2513860	11	True				
ANR	2514176	Statement	)	332:37:7881:7881	2513860	12	True				
ANR	2514177	CompoundStatement		39:39:1015:1015	2513860	13					
ANR	2514178	IfStatement	if ( i > 0 )		2513860	0					
ANR	2514179	Condition	i > 0	333:7:7892:7896	2513860	0	True				
ANR	2514180	RelationalExpression	i > 0		2513860	0		>			
ANR	2514181	Identifier	i		2513860	0					
ANR	2514182	PrimaryExpression	0		2513860	1					
ANR	2514183	CompoundStatement		40:14:1031:1031	2513860	1					
ANR	2514184	ExpressionStatement	"refs = r_str_appendch ( refs , ',' )"	334:4:7905:7938	2513860	0	True				
ANR	2514185	AssignmentExpression	"refs = r_str_appendch ( refs , ',' )"		2513860	0		=			
ANR	2514186	Identifier	refs		2513860	0					
ANR	2514187	CallExpression	"r_str_appendch ( refs , ',' )"		2513860	1					
ANR	2514188	Callee	r_str_appendch		2513860	0					
ANR	2514189	Identifier	r_str_appendch		2513860	0					
ANR	2514190	ArgumentList	refs		2513860	1					
ANR	2514191	Argument	refs		2513860	0					
ANR	2514192	Identifier	refs		2513860	0					
ANR	2514193	Argument	"','"		2513860	1					
ANR	2514194	PrimaryExpression	"','"		2513860	0					
ANR	2514195	ExpressionStatement	"refs = r_str_append ( refs , ref )"	336:3:7948:7979	2513860	1	True				
ANR	2514196	AssignmentExpression	"refs = r_str_append ( refs , ref )"		2513860	0		=			
ANR	2514197	Identifier	refs		2513860	0					
ANR	2514198	CallExpression	"r_str_append ( refs , ref )"		2513860	1					
ANR	2514199	Callee	r_str_append		2513860	0					
ANR	2514200	Identifier	r_str_append		2513860	0					
ANR	2514201	ArgumentList	refs		2513860	1					
ANR	2514202	Argument	refs		2513860	0					
ANR	2514203	Identifier	refs		2513860	0					
ANR	2514204	Argument	ref		2513860	1					
ANR	2514205	Identifier	ref		2513860	0					
ANR	2514206	ExpressionStatement	i ++	337:3:7984:7987	2513860	2	True				
ANR	2514207	PostIncDecOperationExpression	i ++		2513860	0					
ANR	2514208	Identifier	i		2513860	0					
ANR	2514209	IncDec	++		2513860	1					
ANR	2514210	ExpressionStatement	i = 0	339:2:7995:8000	2513860	14	True				
ANR	2514211	AssignmentExpression	i = 0		2513860	0		=			
ANR	2514212	Identifier	i		2513860	0					
ANR	2514213	PrimaryExpression	0		2513860	1					
ANR	2514214	Statement	r_list_foreach	340:2:8004:8017	2513860	15	True				
ANR	2514215	Statement	(	340:17:8019:8019	2513860	16	True				
ANR	2514216	Statement	it	340:18:8020:8021	2513860	17	True				
ANR	2514217	Statement	->	340:20:8022:8023	2513860	18	True				
ANR	2514218	Statement	xrefs	340:22:8024:8028	2513860	19	True				
ANR	2514219	Statement	","	340:27:8029:8029	2513860	20	True				
ANR	2514220	Statement	iter	340:29:8031:8034	2513860	21	True				
ANR	2514221	Statement	","	340:33:8035:8035	2513860	22	True				
ANR	2514222	Statement	ref	340:35:8037:8039	2513860	23	True				
ANR	2514223	Statement	)	340:38:8040:8040	2513860	24	True				
ANR	2514224	CompoundStatement		47:40:1174:1174	2513860	25					
ANR	2514225	IfStatement	if ( i > 0 )		2513860	0					
ANR	2514226	Condition	i > 0	341:7:8051:8055	2513860	0	True				
ANR	2514227	RelationalExpression	i > 0		2513860	0		>			
ANR	2514228	Identifier	i		2513860	0					
ANR	2514229	PrimaryExpression	0		2513860	1					
ANR	2514230	CompoundStatement		48:14:1190:1190	2513860	1					
ANR	2514231	ExpressionStatement	"xrefs = r_str_appendch ( xrefs , ',' )"	342:4:8064:8099	2513860	0	True				
ANR	2514232	AssignmentExpression	"xrefs = r_str_appendch ( xrefs , ',' )"		2513860	0		=			
ANR	2514233	Identifier	xrefs		2513860	0					
ANR	2514234	CallExpression	"r_str_appendch ( xrefs , ',' )"		2513860	1					
ANR	2514235	Callee	r_str_appendch		2513860	0					
ANR	2514236	Identifier	r_str_appendch		2513860	0					
ANR	2514237	ArgumentList	xrefs		2513860	1					
ANR	2514238	Argument	xrefs		2513860	0					
ANR	2514239	Identifier	xrefs		2513860	0					
ANR	2514240	Argument	"','"		2513860	1					
ANR	2514241	PrimaryExpression	"','"		2513860	0					
ANR	2514242	ExpressionStatement	"xrefs = r_str_append ( xrefs , ref )"	344:3:8109:8142	2513860	1	True				
ANR	2514243	AssignmentExpression	"xrefs = r_str_append ( xrefs , ref )"		2513860	0		=			
ANR	2514244	Identifier	xrefs		2513860	0					
ANR	2514245	CallExpression	"r_str_append ( xrefs , ref )"		2513860	1					
ANR	2514246	Callee	r_str_append		2513860	0					
ANR	2514247	Identifier	r_str_append		2513860	0					
ANR	2514248	ArgumentList	xrefs		2513860	1					
ANR	2514249	Argument	xrefs		2513860	0					
ANR	2514250	Identifier	xrefs		2513860	0					
ANR	2514251	Argument	ref		2513860	1					
ANR	2514252	Identifier	ref		2513860	0					
ANR	2514253	ExpressionStatement	i ++	345:3:8147:8150	2513860	2	True				
ANR	2514254	PostIncDecOperationExpression	i ++		2513860	0					
ANR	2514255	Identifier	i		2513860	0					
ANR	2514256	IncDec	++		2513860	1					
ANR	2514257	ExpressionStatement	i = 0	347:2:8158:8163	2513860	26	True				
ANR	2514258	AssignmentExpression	i = 0		2513860	0		=			
ANR	2514259	Identifier	i		2513860	0					
ANR	2514260	PrimaryExpression	0		2513860	1					
ANR	2514261	Statement	r_list_foreach	348:2:8167:8180	2513860	27	True				
ANR	2514262	Statement	(	348:17:8182:8182	2513860	28	True				
ANR	2514263	Statement	it	348:18:8183:8184	2513860	29	True				
ANR	2514264	Statement	->	348:20:8185:8186	2513860	30	True				
ANR	2514265	Statement	vars	348:22:8187:8190	2513860	31	True				
ANR	2514266	Statement	","	348:26:8191:8191	2513860	32	True				
ANR	2514267	Statement	iter	348:28:8193:8196	2513860	33	True				
ANR	2514268	Statement	","	348:32:8197:8197	2513860	34	True				
ANR	2514269	Statement	var	348:34:8199:8201	2513860	35	True				
ANR	2514270	Statement	)	348:37:8202:8202	2513860	36	True				
ANR	2514271	CompoundStatement		55:39:1336:1336	2513860	37					
ANR	2514272	IfStatement	if ( i > 0 )		2513860	0					
ANR	2514273	Condition	i > 0	349:7:8213:8217	2513860	0	True				
ANR	2514274	RelationalExpression	i > 0		2513860	0		>			
ANR	2514275	Identifier	i		2513860	0					
ANR	2514276	PrimaryExpression	0		2513860	1					
ANR	2514277	CompoundStatement		56:14:1352:1352	2513860	1					
ANR	2514278	ExpressionStatement	"vars = r_str_appendch ( vars , ',' )"	350:4:8226:8259	2513860	0	True				
ANR	2514279	AssignmentExpression	"vars = r_str_appendch ( vars , ',' )"		2513860	0		=			
ANR	2514280	Identifier	vars		2513860	0					
ANR	2514281	CallExpression	"r_str_appendch ( vars , ',' )"		2513860	1					
ANR	2514282	Callee	r_str_appendch		2513860	0					
ANR	2514283	Identifier	r_str_appendch		2513860	0					
ANR	2514284	ArgumentList	vars		2513860	1					
ANR	2514285	Argument	vars		2513860	0					
ANR	2514286	Identifier	vars		2513860	0					
ANR	2514287	Argument	"','"		2513860	1					
ANR	2514288	PrimaryExpression	"','"		2513860	0					
ANR	2514289	ExpressionStatement	"vars = r_str_append ( vars , var )"	352:3:8269:8300	2513860	1	True				
ANR	2514290	AssignmentExpression	"vars = r_str_append ( vars , var )"		2513860	0		=			
ANR	2514291	Identifier	vars		2513860	0					
ANR	2514292	CallExpression	"r_str_append ( vars , var )"		2513860	1					
ANR	2514293	Callee	r_str_append		2513860	0					
ANR	2514294	Identifier	r_str_append		2513860	0					
ANR	2514295	ArgumentList	vars		2513860	1					
ANR	2514296	Argument	vars		2513860	0					
ANR	2514297	Identifier	vars		2513860	0					
ANR	2514298	Argument	var		2513860	1					
ANR	2514299	Identifier	var		2513860	0					
ANR	2514300	ExpressionStatement	i ++	353:3:8305:8308	2513860	2	True				
ANR	2514301	PostIncDecOperationExpression	i ++		2513860	0					
ANR	2514302	Identifier	i		2513860	0					
ANR	2514303	IncDec	++		2513860	1					
ANR	2514304	IdentifierDeclStatement	"RStrBuf * sb = r_strbuf_new ( """" ) ;"	355:2:8316:8347	2513860	38	True				
ANR	2514305	IdentifierDecl	"* sb = r_strbuf_new ( """" )"		2513860	0					
ANR	2514306	IdentifierDeclType	RStrBuf *		2513860	0					
ANR	2514307	Identifier	sb		2513860	1					
ANR	2514308	AssignmentExpression	"* sb = r_strbuf_new ( """" )"		2513860	2		=			
ANR	2514309	Identifier	sb		2513860	0					
ANR	2514310	CallExpression	"r_strbuf_new ( """" )"		2513860	1					
ANR	2514311	Callee	r_strbuf_new		2513860	0					
ANR	2514312	Identifier	r_strbuf_new		2513860	0					
ANR	2514313	ArgumentList	""""""		2513860	1					
ANR	2514314	Argument	""""""		2513860	0					
ANR	2514315	PrimaryExpression	""""""		2513860	0					
ANR	2514316	IfStatement	if ( bytes )		2513860	39					
ANR	2514317	Condition	bytes	356:6:8355:8359	2513860	0	True				
ANR	2514318	Identifier	bytes		2513860	0					
ANR	2514319	CompoundStatement		63:13:1494:1494	2513860	1					
ANR	2514320	ExpressionStatement	"r_strbuf_appendf ( sb , ""|s:%d|b:%s|m:%s"" , bytes -> size , hexbytes , hexmask )"	358:3:8427:8499	2513860	0	True				
ANR	2514321	CallExpression	"r_strbuf_appendf ( sb , ""|s:%d|b:%s|m:%s"" , bytes -> size , hexbytes , hexmask )"		2513860	0					
ANR	2514322	Callee	r_strbuf_appendf		2513860	0					
ANR	2514323	Identifier	r_strbuf_appendf		2513860	0					
ANR	2514324	ArgumentList	sb		2513860	1					
ANR	2514325	Argument	sb		2513860	0					
ANR	2514326	Identifier	sb		2513860	0					
ANR	2514327	Argument	"""|s:%d|b:%s|m:%s"""		2513860	1					
ANR	2514328	PrimaryExpression	"""|s:%d|b:%s|m:%s"""		2513860	0					
ANR	2514329	Argument	bytes -> size		2513860	2					
ANR	2514330	PtrMemberAccess	bytes -> size		2513860	0					
ANR	2514331	Identifier	bytes		2513860	0					
ANR	2514332	Identifier	size		2513860	1					
ANR	2514333	Argument	hexbytes		2513860	3					
ANR	2514334	Identifier	hexbytes		2513860	0					
ANR	2514335	Argument	hexmask		2513860	4					
ANR	2514336	Identifier	hexmask		2513860	0					
ANR	2514337	IfStatement	if ( it -> addr != UT64_MAX )		2513860	40					
ANR	2514338	Condition	it -> addr != UT64_MAX	360:6:8511:8530	2513860	0	True				
ANR	2514339	EqualityExpression	it -> addr != UT64_MAX		2513860	0		!=			
ANR	2514340	PtrMemberAccess	it -> addr		2513860	0					
ANR	2514341	Identifier	it		2513860	0					
ANR	2514342	Identifier	addr		2513860	1					
ANR	2514343	Identifier	UT64_MAX		2513860	1					
ANR	2514344	CompoundStatement		67:28:1665:1665	2513860	1					
ANR	2514345	Statement	r_strbuf_appendf	361:3:8538:8553	2513860	0	True				
ANR	2514346	Statement	(	361:20:8555:8555	2513860	1	True				
ANR	2514347	Statement	sb	361:21:8556:8557	2513860	2	True				
ANR	2514348	Statement	","	361:23:8558:8558	2513860	3	True				
ANR	2514349	Statement	"""|%c:%"""	361:25:8560:8566	2513860	4	True				
ANR	2514350	Statement	PFMT64d	361:32:8567:8573	2513860	5	True				
ANR	2514351	Statement	","	361:39:8574:8574	2513860	6	True				
ANR	2514352	Statement	R_SIGN_OFFSET	361:41:8576:8588	2513860	7	True				
ANR	2514353	Statement	","	361:54:8589:8589	2513860	8	True				
ANR	2514354	Statement	it	361:56:8591:8592	2513860	9	True				
ANR	2514355	Statement	->	361:58:8593:8594	2513860	10	True				
ANR	2514356	Statement	addr	361:60:8595:8598	2513860	11	True				
ANR	2514357	Statement	)	361:64:8599:8599	2513860	12	True				
ANR	2514358	ExpressionStatement		361:65:8600:8600	2513860	13	True				
ANR	2514359	IfStatement	if ( graph )		2513860	41					
ANR	2514360	Condition	graph	363:6:8612:8616	2513860	0	True				
ANR	2514361	Identifier	graph		2513860	0					
ANR	2514362	CompoundStatement		70:13:1751:1751	2513860	1					
ANR	2514363	ExpressionStatement	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_GRAPH , hexgraph )"	364:3:8624:8679	2513860	0	True				
ANR	2514364	CallExpression	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_GRAPH , hexgraph )"		2513860	0					
ANR	2514365	Callee	r_strbuf_appendf		2513860	0					
ANR	2514366	Identifier	r_strbuf_appendf		2513860	0					
ANR	2514367	ArgumentList	sb		2513860	1					
ANR	2514368	Argument	sb		2513860	0					
ANR	2514369	Identifier	sb		2513860	0					
ANR	2514370	Argument	"""|%c:%s"""		2513860	1					
ANR	2514371	PrimaryExpression	"""|%c:%s"""		2513860	0					
ANR	2514372	Argument	R_SIGN_GRAPH		2513860	2					
ANR	2514373	Identifier	R_SIGN_GRAPH		2513860	0					
ANR	2514374	Argument	hexgraph		2513860	3					
ANR	2514375	Identifier	hexgraph		2513860	0					
ANR	2514376	IfStatement	if ( refs )		2513860	42					
ANR	2514377	Condition	refs	366:6:8691:8694	2513860	0	True				
ANR	2514378	Identifier	refs		2513860	0					
ANR	2514379	CompoundStatement		73:12:1829:1829	2513860	1					
ANR	2514380	ExpressionStatement	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_REFS , refs )"	367:3:8702:8752	2513860	0	True				
ANR	2514381	CallExpression	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_REFS , refs )"		2513860	0					
ANR	2514382	Callee	r_strbuf_appendf		2513860	0					
ANR	2514383	Identifier	r_strbuf_appendf		2513860	0					
ANR	2514384	ArgumentList	sb		2513860	1					
ANR	2514385	Argument	sb		2513860	0					
ANR	2514386	Identifier	sb		2513860	0					
ANR	2514387	Argument	"""|%c:%s"""		2513860	1					
ANR	2514388	PrimaryExpression	"""|%c:%s"""		2513860	0					
ANR	2514389	Argument	R_SIGN_REFS		2513860	2					
ANR	2514390	Identifier	R_SIGN_REFS		2513860	0					
ANR	2514391	Argument	refs		2513860	3					
ANR	2514392	Identifier	refs		2513860	0					
ANR	2514393	IfStatement	if ( xrefs )		2513860	43					
ANR	2514394	Condition	xrefs	369:6:8764:8768	2513860	0	True				
ANR	2514395	Identifier	xrefs		2513860	0					
ANR	2514396	CompoundStatement		76:13:1903:1903	2513860	1					
ANR	2514397	ExpressionStatement	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_XREFS , xrefs )"	370:3:8776:8828	2513860	0	True				
ANR	2514398	CallExpression	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_XREFS , xrefs )"		2513860	0					
ANR	2514399	Callee	r_strbuf_appendf		2513860	0					
ANR	2514400	Identifier	r_strbuf_appendf		2513860	0					
ANR	2514401	ArgumentList	sb		2513860	1					
ANR	2514402	Argument	sb		2513860	0					
ANR	2514403	Identifier	sb		2513860	0					
ANR	2514404	Argument	"""|%c:%s"""		2513860	1					
ANR	2514405	PrimaryExpression	"""|%c:%s"""		2513860	0					
ANR	2514406	Argument	R_SIGN_XREFS		2513860	2					
ANR	2514407	Identifier	R_SIGN_XREFS		2513860	0					
ANR	2514408	Argument	xrefs		2513860	3					
ANR	2514409	Identifier	xrefs		2513860	0					
ANR	2514410	IfStatement	if ( vars )		2513860	44					
ANR	2514411	Condition	vars	372:6:8840:8843	2513860	0	True				
ANR	2514412	Identifier	vars		2513860	0					
ANR	2514413	CompoundStatement		79:12:1978:1978	2513860	1					
ANR	2514414	ExpressionStatement	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_VARS , vars )"	373:3:8851:8901	2513860	0	True				
ANR	2514415	CallExpression	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_VARS , vars )"		2513860	0					
ANR	2514416	Callee	r_strbuf_appendf		2513860	0					
ANR	2514417	Identifier	r_strbuf_appendf		2513860	0					
ANR	2514418	ArgumentList	sb		2513860	1					
ANR	2514419	Argument	sb		2513860	0					
ANR	2514420	Identifier	sb		2513860	0					
ANR	2514421	Argument	"""|%c:%s"""		2513860	1					
ANR	2514422	PrimaryExpression	"""|%c:%s"""		2513860	0					
ANR	2514423	Argument	R_SIGN_VARS		2513860	2					
ANR	2514424	Identifier	R_SIGN_VARS		2513860	0					
ANR	2514425	Argument	vars		2513860	3					
ANR	2514426	Identifier	vars		2513860	0					
ANR	2514427	IfStatement	if ( it -> comment )		2513860	45					
ANR	2514428	Condition	it -> comment	375:6:8913:8923	2513860	0	True				
ANR	2514429	PtrMemberAccess	it -> comment		2513860	0					
ANR	2514430	Identifier	it		2513860	0					
ANR	2514431	Identifier	comment		2513860	1					
ANR	2514432	CompoundStatement		82:19:2058:2058	2513860	1					
ANR	2514433	ExpressionStatement	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_COMMENT , it -> comment )"	377:3:8949:9009	2513860	0	True				
ANR	2514434	CallExpression	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_COMMENT , it -> comment )"		2513860	0					
ANR	2514435	Callee	r_strbuf_appendf		2513860	0					
ANR	2514436	Identifier	r_strbuf_appendf		2513860	0					
ANR	2514437	ArgumentList	sb		2513860	1					
ANR	2514438	Argument	sb		2513860	0					
ANR	2514439	Identifier	sb		2513860	0					
ANR	2514440	Argument	"""|%c:%s"""		2513860	1					
ANR	2514441	PrimaryExpression	"""|%c:%s"""		2513860	0					
ANR	2514442	Argument	R_SIGN_COMMENT		2513860	2					
ANR	2514443	Identifier	R_SIGN_COMMENT		2513860	0					
ANR	2514444	Argument	it -> comment		2513860	3					
ANR	2514445	PtrMemberAccess	it -> comment		2513860	0					
ANR	2514446	Identifier	it		2513860	0					
ANR	2514447	Identifier	comment		2513860	1					
ANR	2514448	IfStatement	if ( it -> realname )		2513860	46					
ANR	2514449	Condition	it -> realname	379:6:9021:9032	2513860	0	True				
ANR	2514450	PtrMemberAccess	it -> realname		2513860	0					
ANR	2514451	Identifier	it		2513860	0					
ANR	2514452	Identifier	realname		2513860	1					
ANR	2514453	CompoundStatement		86:20:2167:2167	2513860	1					
ANR	2514454	ExpressionStatement	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_NAME , it -> realname )"	381:3:9058:9116	2513860	0	True				
ANR	2514455	CallExpression	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_NAME , it -> realname )"		2513860	0					
ANR	2514456	Callee	r_strbuf_appendf		2513860	0					
ANR	2514457	Identifier	r_strbuf_appendf		2513860	0					
ANR	2514458	ArgumentList	sb		2513860	1					
ANR	2514459	Argument	sb		2513860	0					
ANR	2514460	Identifier	sb		2513860	0					
ANR	2514461	Argument	"""|%c:%s"""		2513860	1					
ANR	2514462	PrimaryExpression	"""|%c:%s"""		2513860	0					
ANR	2514463	Argument	R_SIGN_NAME		2513860	2					
ANR	2514464	Identifier	R_SIGN_NAME		2513860	0					
ANR	2514465	Argument	it -> realname		2513860	3					
ANR	2514466	PtrMemberAccess	it -> realname		2513860	0					
ANR	2514467	Identifier	it		2513860	0					
ANR	2514468	Identifier	realname		2513860	1					
ANR	2514469	IfStatement	if ( hash && hash -> bbhash )		2513860	47					
ANR	2514470	Condition	hash && hash -> bbhash	383:6:9128:9147	2513860	0	True				
ANR	2514471	AndExpression	hash && hash -> bbhash		2513860	0		&&			
ANR	2514472	Identifier	hash		2513860	0					
ANR	2514473	PtrMemberAccess	hash -> bbhash		2513860	1					
ANR	2514474	Identifier	hash		2513860	0					
ANR	2514475	Identifier	bbhash		2513860	1					
ANR	2514476	CompoundStatement		90:28:2282:2282	2513860	1					
ANR	2514477	ExpressionStatement	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_BBHASH , hash -> bbhash )"	384:3:9155:9215	2513860	0	True				
ANR	2514478	CallExpression	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_BBHASH , hash -> bbhash )"		2513860	0					
ANR	2514479	Callee	r_strbuf_appendf		2513860	0					
ANR	2514480	Identifier	r_strbuf_appendf		2513860	0					
ANR	2514481	ArgumentList	sb		2513860	1					
ANR	2514482	Argument	sb		2513860	0					
ANR	2514483	Identifier	sb		2513860	0					
ANR	2514484	Argument	"""|%c:%s"""		2513860	1					
ANR	2514485	PrimaryExpression	"""|%c:%s"""		2513860	0					
ANR	2514486	Argument	R_SIGN_BBHASH		2513860	2					
ANR	2514487	Identifier	R_SIGN_BBHASH		2513860	0					
ANR	2514488	Argument	hash -> bbhash		2513860	3					
ANR	2514489	PtrMemberAccess	hash -> bbhash		2513860	0					
ANR	2514490	Identifier	hash		2513860	0					
ANR	2514491	Identifier	bbhash		2513860	1					
ANR	2514492	IfStatement	if ( r_strbuf_length ( sb ) >= R_SIGN_VAL_MAXSZ )		2513860	48					
ANR	2514493	Condition	r_strbuf_length ( sb ) >= R_SIGN_VAL_MAXSZ	386:6:9227:9266	2513860	0	True				
ANR	2514494	RelationalExpression	r_strbuf_length ( sb ) >= R_SIGN_VAL_MAXSZ		2513860	0		>=			
ANR	2514495	CallExpression	r_strbuf_length ( sb )		2513860	0					
ANR	2514496	Callee	r_strbuf_length		2513860	0					
ANR	2514497	Identifier	r_strbuf_length		2513860	0					
ANR	2514498	ArgumentList	sb		2513860	1					
ANR	2514499	Argument	sb		2513860	0					
ANR	2514500	Identifier	sb		2513860	0					
ANR	2514501	Identifier	R_SIGN_VAL_MAXSZ		2513860	1					
ANR	2514502	CompoundStatement		93:48:2401:2401	2513860	1					
ANR	2514503	Statement	eprintf	387:3:9274:9280	2513860	0	True				
ANR	2514504	Statement	(	387:11:9282:9282	2513860	1	True				
ANR	2514505	Statement	"""Signature limit reached for 0x%08"""	387:12:9283:9317	2513860	2	True				
ANR	2514506	Statement	PFMT64x	387:47:9318:9324	2513860	3	True				
ANR	2514507	Statement	""" (%s)\\n"""	387:54:9325:9333	2513860	4	True				
ANR	2514508	Statement	","	387:63:9334:9334	2513860	5	True				
ANR	2514509	Statement	it	387:65:9336:9337	2513860	6	True				
ANR	2514510	Statement	->	387:67:9338:9339	2513860	7	True				
ANR	2514511	Statement	addr	387:69:9340:9343	2513860	8	True				
ANR	2514512	Statement	","	387:73:9344:9344	2513860	9	True				
ANR	2514513	Statement	it	387:75:9346:9347	2513860	10	True				
ANR	2514514	Statement	->	387:77:9348:9349	2513860	11	True				
ANR	2514515	Statement	name	387:79:9350:9353	2513860	12	True				
ANR	2514516	Statement	)	387:83:9354:9354	2513860	13	True				
ANR	2514517	ExpressionStatement		387:84:9355:9355	2513860	14	True				
ANR	2514518	IdentifierDeclStatement	char * res = r_strbuf_drain ( sb ) ;	389:2:9363:9394	2513860	49	True				
ANR	2514519	IdentifierDecl	* res = r_strbuf_drain ( sb )		2513860	0					
ANR	2514520	IdentifierDeclType	char *		2513860	0					
ANR	2514521	Identifier	res		2513860	1					
ANR	2514522	AssignmentExpression	* res = r_strbuf_drain ( sb )		2513860	2		=			
ANR	2514523	Identifier	res		2513860	0					
ANR	2514524	CallExpression	r_strbuf_drain ( sb )		2513860	1					
ANR	2514525	Callee	r_strbuf_drain		2513860	0					
ANR	2514526	Identifier	r_strbuf_drain		2513860	0					
ANR	2514527	ArgumentList	sb		2513860	1					
ANR	2514528	Argument	sb		2513860	0					
ANR	2514529	Identifier	sb		2513860	0					
ANR	2514530	IfStatement	if ( res )		2513860	50					
ANR	2514531	Condition	res	390:6:9402:9404	2513860	0	True				
ANR	2514532	Identifier	res		2513860	0					
ANR	2514533	CompoundStatement		97:11:2539:2539	2513860	1					
ANR	2514534	ExpressionStatement	"strncpy ( v , res , R_SIGN_VAL_MAXSZ )"	391:3:9412:9446	2513860	0	True				
ANR	2514535	CallExpression	"strncpy ( v , res , R_SIGN_VAL_MAXSZ )"		2513860	0					
ANR	2514536	Callee	strncpy		2513860	0					
ANR	2514537	Identifier	strncpy		2513860	0					
ANR	2514538	ArgumentList	v		2513860	1					
ANR	2514539	Argument	v		2513860	0					
ANR	2514540	Identifier	v		2513860	0					
ANR	2514541	Argument	res		2513860	1					
ANR	2514542	Identifier	res		2513860	0					
ANR	2514543	Argument	R_SIGN_VAL_MAXSZ		2513860	2					
ANR	2514544	Identifier	R_SIGN_VAL_MAXSZ		2513860	0					
ANR	2514545	ExpressionStatement	free ( res )	392:3:9451:9461	2513860	1	True				
ANR	2514546	CallExpression	free ( res )		2513860	0					
ANR	2514547	Callee	free		2513860	0					
ANR	2514548	Identifier	free		2513860	0					
ANR	2514549	ArgumentList	res		2513860	1					
ANR	2514550	Argument	res		2513860	0					
ANR	2514551	Identifier	res		2513860	0					
ANR	2514552	ExpressionStatement	free ( hexbytes )	395:2:9470:9485	2513860	51	True				
ANR	2514553	CallExpression	free ( hexbytes )		2513860	0					
ANR	2514554	Callee	free		2513860	0					
ANR	2514555	Identifier	free		2513860	0					
ANR	2514556	ArgumentList	hexbytes		2513860	1					
ANR	2514557	Argument	hexbytes		2513860	0					
ANR	2514558	Identifier	hexbytes		2513860	0					
ANR	2514559	ExpressionStatement	free ( hexmask )	396:2:9489:9503	2513860	52	True				
ANR	2514560	CallExpression	free ( hexmask )		2513860	0					
ANR	2514561	Callee	free		2513860	0					
ANR	2514562	Identifier	free		2513860	0					
ANR	2514563	ArgumentList	hexmask		2513860	1					
ANR	2514564	Argument	hexmask		2513860	0					
ANR	2514565	Identifier	hexmask		2513860	0					
ANR	2514566	ExpressionStatement	free ( hexgraph )	397:2:9507:9522	2513860	53	True				
ANR	2514567	CallExpression	free ( hexgraph )		2513860	0					
ANR	2514568	Callee	free		2513860	0					
ANR	2514569	Identifier	free		2513860	0					
ANR	2514570	ArgumentList	hexgraph		2513860	1					
ANR	2514571	Argument	hexgraph		2513860	0					
ANR	2514572	Identifier	hexgraph		2513860	0					
ANR	2514573	ExpressionStatement	free ( refs )	398:2:9526:9537	2513860	54	True				
ANR	2514574	CallExpression	free ( refs )		2513860	0					
ANR	2514575	Callee	free		2513860	0					
ANR	2514576	Identifier	free		2513860	0					
ANR	2514577	ArgumentList	refs		2513860	1					
ANR	2514578	Argument	refs		2513860	0					
ANR	2514579	Identifier	refs		2513860	0					
ANR	2514580	ExpressionStatement	free ( vars )	399:2:9541:9552	2513860	55	True				
ANR	2514581	CallExpression	free ( vars )		2513860	0					
ANR	2514582	Callee	free		2513860	0					
ANR	2514583	Identifier	free		2513860	0					
ANR	2514584	ArgumentList	vars		2513860	1					
ANR	2514585	Argument	vars		2513860	0					
ANR	2514586	Identifier	vars		2513860	0					
ANR	2514587	ReturnType	static void		2513860	1					
ANR	2514588	Identifier	serialize		2513860	2					
ANR	2514589	ParameterList	"RAnal * a , RSignItem * it , char * k , char * v"		2513860	3					
ANR	2514590	Parameter	RAnal * a	294:22:6824:6831	2513860	0	True				
ANR	2514591	ParameterType	RAnal *		2513860	0					
ANR	2514592	Identifier	a		2513860	1					
ANR	2514593	Parameter	RSignItem * it	294:32:6834:6846	2513860	1	True				
ANR	2514594	ParameterType	RSignItem *		2513860	0					
ANR	2514595	Identifier	it		2513860	1					
ANR	2514596	Parameter	char * k	294:47:6849:6855	2513860	2	True				
ANR	2514597	ParameterType	char *		2513860	0					
ANR	2514598	Identifier	k		2513860	1					
ANR	2514599	Parameter	char * v	294:56:6858:6864	2513860	3	True				
ANR	2514600	ParameterType	char *		2513860	0					
ANR	2514601	Identifier	v		2513860	1					
ANR	2514602	CFGEntryNode	ENTRY		2513860		True				
ANR	2514603	CFGExitNode	EXIT		2513860		True				
ANR	2514604	Symbol	bytes -> size		2513860						
ANR	2514605	Symbol	it -> graph		2513860						
ANR	2514606	Symbol	hexbytes		2513860						
ANR	2514607	Symbol	* bytes		2513860						
ANR	2514608	Symbol	ref		2513860						
ANR	2514609	Symbol	len		2513860						
ANR	2514610	Symbol	vars		2513860						
ANR	2514611	Symbol	R_SIGN_NAME		2513860						
ANR	2514612	Symbol	bytes -> mask		2513860						
ANR	2514613	Symbol	it -> comment		2513860						
ANR	2514614	Symbol	it -> realname		2513860						
ANR	2514615	Symbol	res		2513860						
ANR	2514616	Symbol	r_str_appendch		2513860						
ANR	2514617	Symbol	NULL		2513860						
ANR	2514618	Symbol	it -> bytes		2513860						
ANR	2514619	Symbol	r_strbuf_new		2513860						
ANR	2514620	Symbol	var		2513860						
ANR	2514621	Symbol	it -> name		2513860						
ANR	2514622	Symbol	hexmask		2513860						
ANR	2514623	Symbol	iter		2513860						
ANR	2514624	Symbol	it		2513860						
ANR	2514625	Symbol	graph		2513860						
ANR	2514626	Symbol	it -> space		2513860						
ANR	2514627	Symbol	R_SIGN_COMMENT		2513860						
ANR	2514628	Symbol	hash		2513860						
ANR	2514629	Symbol	hash -> bbhash		2513860						
ANR	2514630	Symbol	r_str_append		2513860						
ANR	2514631	Symbol	R_SIGN_BBHASH		2513860						
ANR	2514632	Symbol	calloc		2513860						
ANR	2514633	Symbol	sb		2513860						
ANR	2514634	Symbol	it -> hash		2513860						
ANR	2514635	Symbol	r_strbuf_length		2513860						
ANR	2514636	Symbol	* hash		2513860						
ANR	2514637	Symbol	UT64_MAX		2513860						
ANR	2514638	Symbol	a		2513860						
ANR	2514639	Symbol	malloc		2513860						
ANR	2514640	Symbol	R_SIGN_VAL_MAXSZ		2513860						
ANR	2514641	Symbol	R_SIGN_GRAPH		2513860						
ANR	2514642	Symbol	hexgraph		2513860						
ANR	2514643	Symbol	xrefs		2513860						
ANR	2514644	Symbol	R_SIGN_REFS		2513860						
ANR	2514645	Symbol	i		2513860						
ANR	2514646	Symbol	k		2513860						
ANR	2514647	Symbol	R_SIGN_XREFS		2513860						
ANR	2514648	Symbol	* it		2513860						
ANR	2514649	Symbol	refs		2513860						
ANR	2514650	Symbol	v		2513860						
ANR	2514651	Symbol	bytes		2513860						
ANR	2514652	Symbol	it -> addr		2513860						
ANR	2514653	Symbol	r_strbuf_drain		2513860						
ANR	2514654	Symbol	bytes -> bytes		2513860						
ANR	2514655	Symbol	R_SIGN_VARS		2513860						
ANR	2514656	Function	mergeItem	403:0:9560:11226							
ANR	2514657	FunctionDef	"mergeItem (RSignItem * dst , RSignItem * src)"		2514656	0					
ANR	2514658	CompoundStatement		403:54:9614:11226	2514656	0					
ANR	2514659	IdentifierDeclStatement	RListIter * iter = NULL ;	404:1:9617:9639	2514656	0	True				
ANR	2514660	IdentifierDecl	* iter = NULL		2514656	0					
ANR	2514661	IdentifierDeclType	RListIter *		2514656	0					
ANR	2514662	Identifier	iter		2514656	1					
ANR	2514663	AssignmentExpression	* iter = NULL		2514656	2		=			
ANR	2514664	Identifier	NULL		2514656	0					
ANR	2514665	Identifier	NULL		2514656	1					
ANR	2514666	IdentifierDeclStatement	"char * ref , * var ;"	405:1:9642:9657	2514656	1	True				
ANR	2514667	IdentifierDecl	* ref		2514656	0					
ANR	2514668	IdentifierDeclType	char *		2514656	0					
ANR	2514669	Identifier	ref		2514656	1					
ANR	2514670	IdentifierDecl	* var		2514656	1					
ANR	2514671	IdentifierDeclType	char *		2514656	0					
ANR	2514672	Identifier	var		2514656	1					
ANR	2514673	IfStatement	if ( src -> bytes )		2514656	2					
ANR	2514674	Condition	src -> bytes	407:5:9665:9674	2514656	0	True				
ANR	2514675	PtrMemberAccess	src -> bytes		2514656	0					
ANR	2514676	Identifier	src		2514656	0					
ANR	2514677	Identifier	bytes		2514656	1					
ANR	2514678	CompoundStatement		5:17:62:62	2514656	1					
ANR	2514679	IfStatement	if ( dst -> bytes )		2514656	0					
ANR	2514680	Condition	dst -> bytes	408:6:9685:9694	2514656	0	True				
ANR	2514681	PtrMemberAccess	dst -> bytes		2514656	0					
ANR	2514682	Identifier	dst		2514656	0					
ANR	2514683	Identifier	bytes		2514656	1					
ANR	2514684	CompoundStatement		6:18:82:82	2514656	1					
ANR	2514685	ExpressionStatement	free ( dst -> bytes -> bytes )	409:3:9702:9726	2514656	0	True				
ANR	2514686	CallExpression	free ( dst -> bytes -> bytes )		2514656	0					
ANR	2514687	Callee	free		2514656	0					
ANR	2514688	Identifier	free		2514656	0					
ANR	2514689	ArgumentList	dst -> bytes -> bytes		2514656	1					
ANR	2514690	Argument	dst -> bytes -> bytes		2514656	0					
ANR	2514691	PtrMemberAccess	dst -> bytes -> bytes		2514656	0					
ANR	2514692	PtrMemberAccess	dst -> bytes		2514656	0					
ANR	2514693	Identifier	dst		2514656	0					
ANR	2514694	Identifier	bytes		2514656	1					
ANR	2514695	Identifier	bytes		2514656	1					
ANR	2514696	ExpressionStatement	free ( dst -> bytes -> mask )	410:3:9731:9754	2514656	1	True				
ANR	2514697	CallExpression	free ( dst -> bytes -> mask )		2514656	0					
ANR	2514698	Callee	free		2514656	0					
ANR	2514699	Identifier	free		2514656	0					
ANR	2514700	ArgumentList	dst -> bytes -> mask		2514656	1					
ANR	2514701	Argument	dst -> bytes -> mask		2514656	0					
ANR	2514702	PtrMemberAccess	dst -> bytes -> mask		2514656	0					
ANR	2514703	PtrMemberAccess	dst -> bytes		2514656	0					
ANR	2514704	Identifier	dst		2514656	0					
ANR	2514705	Identifier	bytes		2514656	1					
ANR	2514706	Identifier	mask		2514656	1					
ANR	2514707	ExpressionStatement	free ( dst -> bytes )	411:3:9759:9776	2514656	2	True				
ANR	2514708	CallExpression	free ( dst -> bytes )		2514656	0					
ANR	2514709	Callee	free		2514656	0					
ANR	2514710	Identifier	free		2514656	0					
ANR	2514711	ArgumentList	dst -> bytes		2514656	1					
ANR	2514712	Argument	dst -> bytes		2514656	0					
ANR	2514713	PtrMemberAccess	dst -> bytes		2514656	0					
ANR	2514714	Identifier	dst		2514656	0					
ANR	2514715	Identifier	bytes		2514656	1					
ANR	2514716	ExpressionStatement	dst -> bytes = R_NEW0 ( RSignBytes )	413:2:9784:9816	2514656	1	True				
ANR	2514717	AssignmentExpression	dst -> bytes = R_NEW0 ( RSignBytes )		2514656	0		=			
ANR	2514718	PtrMemberAccess	dst -> bytes		2514656	0					
ANR	2514719	Identifier	dst		2514656	0					
ANR	2514720	Identifier	bytes		2514656	1					
ANR	2514721	CallExpression	R_NEW0 ( RSignBytes )		2514656	1					
ANR	2514722	Callee	R_NEW0		2514656	0					
ANR	2514723	Identifier	R_NEW0		2514656	0					
ANR	2514724	ArgumentList	RSignBytes		2514656	1					
ANR	2514725	Argument	RSignBytes		2514656	0					
ANR	2514726	Identifier	RSignBytes		2514656	0					
ANR	2514727	IfStatement	if ( ! dst -> bytes )		2514656	2					
ANR	2514728	Condition	! dst -> bytes	414:6:9824:9834	2514656	0	True				
ANR	2514729	UnaryOperationExpression	! dst -> bytes		2514656	0					
ANR	2514730	UnaryOperator	!		2514656	0					
ANR	2514731	PtrMemberAccess	dst -> bytes		2514656	1					
ANR	2514732	Identifier	dst		2514656	0					
ANR	2514733	Identifier	bytes		2514656	1					
ANR	2514734	CompoundStatement		12:19:222:222	2514656	1					
ANR	2514735	ReturnStatement	return ;	415:3:9842:9848	2514656	0	True				
ANR	2514736	ExpressionStatement	dst -> space = src -> space	417:2:9856:9879	2514656	3	True				
ANR	2514737	AssignmentExpression	dst -> space = src -> space		2514656	0		=			
ANR	2514738	PtrMemberAccess	dst -> space		2514656	0					
ANR	2514739	Identifier	dst		2514656	0					
ANR	2514740	Identifier	space		2514656	1					
ANR	2514741	PtrMemberAccess	src -> space		2514656	1					
ANR	2514742	Identifier	src		2514656	0					
ANR	2514743	Identifier	space		2514656	1					
ANR	2514744	ExpressionStatement	dst -> bytes -> size = src -> bytes -> size	418:2:9883:9918	2514656	4	True				
ANR	2514745	AssignmentExpression	dst -> bytes -> size = src -> bytes -> size		2514656	0		=			
ANR	2514746	PtrMemberAccess	dst -> bytes -> size		2514656	0					
ANR	2514747	PtrMemberAccess	dst -> bytes		2514656	0					
ANR	2514748	Identifier	dst		2514656	0					
ANR	2514749	Identifier	bytes		2514656	1					
ANR	2514750	Identifier	size		2514656	1					
ANR	2514751	PtrMemberAccess	src -> bytes -> size		2514656	1					
ANR	2514752	PtrMemberAccess	src -> bytes		2514656	0					
ANR	2514753	Identifier	src		2514656	0					
ANR	2514754	Identifier	bytes		2514656	1					
ANR	2514755	Identifier	size		2514656	1					
ANR	2514756	ExpressionStatement	dst -> bytes -> bytes = malloc ( src -> bytes -> size )	419:2:9922:9967	2514656	5	True				
ANR	2514757	AssignmentExpression	dst -> bytes -> bytes = malloc ( src -> bytes -> size )		2514656	0		=			
ANR	2514758	PtrMemberAccess	dst -> bytes -> bytes		2514656	0					
ANR	2514759	PtrMemberAccess	dst -> bytes		2514656	0					
ANR	2514760	Identifier	dst		2514656	0					
ANR	2514761	Identifier	bytes		2514656	1					
ANR	2514762	Identifier	bytes		2514656	1					
ANR	2514763	CallExpression	malloc ( src -> bytes -> size )		2514656	1					
ANR	2514764	Callee	malloc		2514656	0					
ANR	2514765	Identifier	malloc		2514656	0					
ANR	2514766	ArgumentList	src -> bytes -> size		2514656	1					
ANR	2514767	Argument	src -> bytes -> size		2514656	0					
ANR	2514768	PtrMemberAccess	src -> bytes -> size		2514656	0					
ANR	2514769	PtrMemberAccess	src -> bytes		2514656	0					
ANR	2514770	Identifier	src		2514656	0					
ANR	2514771	Identifier	bytes		2514656	1					
ANR	2514772	Identifier	size		2514656	1					
ANR	2514773	IfStatement	if ( ! dst -> bytes -> bytes )		2514656	6					
ANR	2514774	Condition	! dst -> bytes -> bytes	420:6:9975:9992	2514656	0	True				
ANR	2514775	UnaryOperationExpression	! dst -> bytes -> bytes		2514656	0					
ANR	2514776	UnaryOperator	!		2514656	0					
ANR	2514777	PtrMemberAccess	dst -> bytes -> bytes		2514656	1					
ANR	2514778	PtrMemberAccess	dst -> bytes		2514656	0					
ANR	2514779	Identifier	dst		2514656	0					
ANR	2514780	Identifier	bytes		2514656	1					
ANR	2514781	Identifier	bytes		2514656	1					
ANR	2514782	CompoundStatement		18:26:380:380	2514656	1					
ANR	2514783	ExpressionStatement	free ( dst -> bytes )	421:3:10000:10017	2514656	0	True				
ANR	2514784	CallExpression	free ( dst -> bytes )		2514656	0					
ANR	2514785	Callee	free		2514656	0					
ANR	2514786	Identifier	free		2514656	0					
ANR	2514787	ArgumentList	dst -> bytes		2514656	1					
ANR	2514788	Argument	dst -> bytes		2514656	0					
ANR	2514789	PtrMemberAccess	dst -> bytes		2514656	0					
ANR	2514790	Identifier	dst		2514656	0					
ANR	2514791	Identifier	bytes		2514656	1					
ANR	2514792	ReturnStatement	return ;	422:3:10022:10028	2514656	1	True				
ANR	2514793	ExpressionStatement	"memcpy ( dst -> bytes -> bytes , src -> bytes -> bytes , src -> bytes -> size )"	424:2:10036:10099	2514656	7	True				
ANR	2514794	CallExpression	"memcpy ( dst -> bytes -> bytes , src -> bytes -> bytes , src -> bytes -> size )"		2514656	0					
ANR	2514795	Callee	memcpy		2514656	0					
ANR	2514796	Identifier	memcpy		2514656	0					
ANR	2514797	ArgumentList	dst -> bytes -> bytes		2514656	1					
ANR	2514798	Argument	dst -> bytes -> bytes		2514656	0					
ANR	2514799	PtrMemberAccess	dst -> bytes -> bytes		2514656	0					
ANR	2514800	PtrMemberAccess	dst -> bytes		2514656	0					
ANR	2514801	Identifier	dst		2514656	0					
ANR	2514802	Identifier	bytes		2514656	1					
ANR	2514803	Identifier	bytes		2514656	1					
ANR	2514804	Argument	src -> bytes -> bytes		2514656	1					
ANR	2514805	PtrMemberAccess	src -> bytes -> bytes		2514656	0					
ANR	2514806	PtrMemberAccess	src -> bytes		2514656	0					
ANR	2514807	Identifier	src		2514656	0					
ANR	2514808	Identifier	bytes		2514656	1					
ANR	2514809	Identifier	bytes		2514656	1					
ANR	2514810	Argument	src -> bytes -> size		2514656	2					
ANR	2514811	PtrMemberAccess	src -> bytes -> size		2514656	0					
ANR	2514812	PtrMemberAccess	src -> bytes		2514656	0					
ANR	2514813	Identifier	src		2514656	0					
ANR	2514814	Identifier	bytes		2514656	1					
ANR	2514815	Identifier	size		2514656	1					
ANR	2514816	ExpressionStatement	dst -> bytes -> mask = malloc ( src -> bytes -> size )	425:2:10103:10147	2514656	8	True				
ANR	2514817	AssignmentExpression	dst -> bytes -> mask = malloc ( src -> bytes -> size )		2514656	0		=			
ANR	2514818	PtrMemberAccess	dst -> bytes -> mask		2514656	0					
ANR	2514819	PtrMemberAccess	dst -> bytes		2514656	0					
ANR	2514820	Identifier	dst		2514656	0					
ANR	2514821	Identifier	bytes		2514656	1					
ANR	2514822	Identifier	mask		2514656	1					
ANR	2514823	CallExpression	malloc ( src -> bytes -> size )		2514656	1					
ANR	2514824	Callee	malloc		2514656	0					
ANR	2514825	Identifier	malloc		2514656	0					
ANR	2514826	ArgumentList	src -> bytes -> size		2514656	1					
ANR	2514827	Argument	src -> bytes -> size		2514656	0					
ANR	2514828	PtrMemberAccess	src -> bytes -> size		2514656	0					
ANR	2514829	PtrMemberAccess	src -> bytes		2514656	0					
ANR	2514830	Identifier	src		2514656	0					
ANR	2514831	Identifier	bytes		2514656	1					
ANR	2514832	Identifier	size		2514656	1					
ANR	2514833	IfStatement	if ( ! dst -> bytes -> mask )		2514656	9					
ANR	2514834	Condition	! dst -> bytes -> mask	426:6:10155:10171	2514656	0	True				
ANR	2514835	UnaryOperationExpression	! dst -> bytes -> mask		2514656	0					
ANR	2514836	UnaryOperator	!		2514656	0					
ANR	2514837	PtrMemberAccess	dst -> bytes -> mask		2514656	1					
ANR	2514838	PtrMemberAccess	dst -> bytes		2514656	0					
ANR	2514839	Identifier	dst		2514656	0					
ANR	2514840	Identifier	bytes		2514656	1					
ANR	2514841	Identifier	mask		2514656	1					
ANR	2514842	CompoundStatement		24:25:559:559	2514656	1					
ANR	2514843	ExpressionStatement	free ( dst -> bytes -> bytes )	427:3:10179:10203	2514656	0	True				
ANR	2514844	CallExpression	free ( dst -> bytes -> bytes )		2514656	0					
ANR	2514845	Callee	free		2514656	0					
ANR	2514846	Identifier	free		2514656	0					
ANR	2514847	ArgumentList	dst -> bytes -> bytes		2514656	1					
ANR	2514848	Argument	dst -> bytes -> bytes		2514656	0					
ANR	2514849	PtrMemberAccess	dst -> bytes -> bytes		2514656	0					
ANR	2514850	PtrMemberAccess	dst -> bytes		2514656	0					
ANR	2514851	Identifier	dst		2514656	0					
ANR	2514852	Identifier	bytes		2514656	1					
ANR	2514853	Identifier	bytes		2514656	1					
ANR	2514854	ExpressionStatement	free ( dst -> bytes )	428:3:10208:10225	2514656	1	True				
ANR	2514855	CallExpression	free ( dst -> bytes )		2514656	0					
ANR	2514856	Callee	free		2514656	0					
ANR	2514857	Identifier	free		2514656	0					
ANR	2514858	ArgumentList	dst -> bytes		2514656	1					
ANR	2514859	Argument	dst -> bytes		2514656	0					
ANR	2514860	PtrMemberAccess	dst -> bytes		2514656	0					
ANR	2514861	Identifier	dst		2514656	0					
ANR	2514862	Identifier	bytes		2514656	1					
ANR	2514863	ReturnStatement	return ;	429:3:10230:10236	2514656	2	True				
ANR	2514864	ExpressionStatement	"memcpy ( dst -> bytes -> mask , src -> bytes -> mask , src -> bytes -> size )"	431:2:10244:10305	2514656	10	True				
ANR	2514865	CallExpression	"memcpy ( dst -> bytes -> mask , src -> bytes -> mask , src -> bytes -> size )"		2514656	0					
ANR	2514866	Callee	memcpy		2514656	0					
ANR	2514867	Identifier	memcpy		2514656	0					
ANR	2514868	ArgumentList	dst -> bytes -> mask		2514656	1					
ANR	2514869	Argument	dst -> bytes -> mask		2514656	0					
ANR	2514870	PtrMemberAccess	dst -> bytes -> mask		2514656	0					
ANR	2514871	PtrMemberAccess	dst -> bytes		2514656	0					
ANR	2514872	Identifier	dst		2514656	0					
ANR	2514873	Identifier	bytes		2514656	1					
ANR	2514874	Identifier	mask		2514656	1					
ANR	2514875	Argument	src -> bytes -> mask		2514656	1					
ANR	2514876	PtrMemberAccess	src -> bytes -> mask		2514656	0					
ANR	2514877	PtrMemberAccess	src -> bytes		2514656	0					
ANR	2514878	Identifier	src		2514656	0					
ANR	2514879	Identifier	bytes		2514656	1					
ANR	2514880	Identifier	mask		2514656	1					
ANR	2514881	Argument	src -> bytes -> size		2514656	2					
ANR	2514882	PtrMemberAccess	src -> bytes -> size		2514656	0					
ANR	2514883	PtrMemberAccess	src -> bytes		2514656	0					
ANR	2514884	Identifier	src		2514656	0					
ANR	2514885	Identifier	bytes		2514656	1					
ANR	2514886	Identifier	size		2514656	1					
ANR	2514887	IfStatement	if ( src -> graph )		2514656	3					
ANR	2514888	Condition	src -> graph	434:5:10316:10325	2514656	0	True				
ANR	2514889	PtrMemberAccess	src -> graph		2514656	0					
ANR	2514890	Identifier	src		2514656	0					
ANR	2514891	Identifier	graph		2514656	1					
ANR	2514892	CompoundStatement		32:17:713:713	2514656	1					
ANR	2514893	ExpressionStatement	free ( dst -> graph )	435:2:10332:10349	2514656	0	True				
ANR	2514894	CallExpression	free ( dst -> graph )		2514656	0					
ANR	2514895	Callee	free		2514656	0					
ANR	2514896	Identifier	free		2514656	0					
ANR	2514897	ArgumentList	dst -> graph		2514656	1					
ANR	2514898	Argument	dst -> graph		2514656	0					
ANR	2514899	PtrMemberAccess	dst -> graph		2514656	0					
ANR	2514900	Identifier	dst		2514656	0					
ANR	2514901	Identifier	graph		2514656	1					
ANR	2514902	ExpressionStatement	dst -> graph = R_NEW0 ( RSignGraph )	436:2:10353:10385	2514656	1	True				
ANR	2514903	AssignmentExpression	dst -> graph = R_NEW0 ( RSignGraph )		2514656	0		=			
ANR	2514904	PtrMemberAccess	dst -> graph		2514656	0					
ANR	2514905	Identifier	dst		2514656	0					
ANR	2514906	Identifier	graph		2514656	1					
ANR	2514907	CallExpression	R_NEW0 ( RSignGraph )		2514656	1					
ANR	2514908	Callee	R_NEW0		2514656	0					
ANR	2514909	Identifier	R_NEW0		2514656	0					
ANR	2514910	ArgumentList	RSignGraph		2514656	1					
ANR	2514911	Argument	RSignGraph		2514656	0					
ANR	2514912	Identifier	RSignGraph		2514656	0					
ANR	2514913	IfStatement	if ( ! dst -> graph )		2514656	2					
ANR	2514914	Condition	! dst -> graph	437:6:10393:10403	2514656	0	True				
ANR	2514915	UnaryOperationExpression	! dst -> graph		2514656	0					
ANR	2514916	UnaryOperator	!		2514656	0					
ANR	2514917	PtrMemberAccess	dst -> graph		2514656	1					
ANR	2514918	Identifier	dst		2514656	0					
ANR	2514919	Identifier	graph		2514656	1					
ANR	2514920	CompoundStatement		35:19:791:791	2514656	1					
ANR	2514921	ReturnStatement	return ;	438:3:10411:10417	2514656	0	True				
ANR	2514922	ExpressionStatement	* dst -> graph = * src -> graph	440:2:10425:10450	2514656	3	True				
ANR	2514923	AssignmentExpression	* dst -> graph = * src -> graph		2514656	0		=			
ANR	2514924	UnaryOperationExpression	* dst -> graph		2514656	0					
ANR	2514925	UnaryOperator	*		2514656	0					
ANR	2514926	PtrMemberAccess	dst -> graph		2514656	1					
ANR	2514927	Identifier	dst		2514656	0					
ANR	2514928	Identifier	graph		2514656	1					
ANR	2514929	UnaryOperationExpression	* src -> graph		2514656	1					
ANR	2514930	UnaryOperator	*		2514656	0					
ANR	2514931	PtrMemberAccess	src -> graph		2514656	1					
ANR	2514932	Identifier	src		2514656	0					
ANR	2514933	Identifier	graph		2514656	1					
ANR	2514934	IfStatement	if ( src -> comment )		2514656	4					
ANR	2514935	Condition	src -> comment	443:5:10461:10472	2514656	0	True				
ANR	2514936	PtrMemberAccess	src -> comment		2514656	0					
ANR	2514937	Identifier	src		2514656	0					
ANR	2514938	Identifier	comment		2514656	1					
ANR	2514939	CompoundStatement		41:19:860:860	2514656	1					
ANR	2514940	ExpressionStatement	dst -> comment = strdup ( src -> comment )	444:2:10479:10515	2514656	0	True				
ANR	2514941	AssignmentExpression	dst -> comment = strdup ( src -> comment )		2514656	0		=			
ANR	2514942	PtrMemberAccess	dst -> comment		2514656	0					
ANR	2514943	Identifier	dst		2514656	0					
ANR	2514944	Identifier	comment		2514656	1					
ANR	2514945	CallExpression	strdup ( src -> comment )		2514656	1					
ANR	2514946	Callee	strdup		2514656	0					
ANR	2514947	Identifier	strdup		2514656	0					
ANR	2514948	ArgumentList	src -> comment		2514656	1					
ANR	2514949	Argument	src -> comment		2514656	0					
ANR	2514950	PtrMemberAccess	src -> comment		2514656	0					
ANR	2514951	Identifier	src		2514656	0					
ANR	2514952	Identifier	comment		2514656	1					
ANR	2514953	IfStatement	if ( src -> realname )		2514656	5					
ANR	2514954	Condition	src -> realname	447:5:10526:10538	2514656	0	True				
ANR	2514955	PtrMemberAccess	src -> realname		2514656	0					
ANR	2514956	Identifier	src		2514656	0					
ANR	2514957	Identifier	realname		2514656	1					
ANR	2514958	CompoundStatement		45:20:926:926	2514656	1					
ANR	2514959	ExpressionStatement	dst -> realname = strdup ( src -> realname )	448:2:10545:10583	2514656	0	True				
ANR	2514960	AssignmentExpression	dst -> realname = strdup ( src -> realname )		2514656	0		=			
ANR	2514961	PtrMemberAccess	dst -> realname		2514656	0					
ANR	2514962	Identifier	dst		2514656	0					
ANR	2514963	Identifier	realname		2514656	1					
ANR	2514964	CallExpression	strdup ( src -> realname )		2514656	1					
ANR	2514965	Callee	strdup		2514656	0					
ANR	2514966	Identifier	strdup		2514656	0					
ANR	2514967	ArgumentList	src -> realname		2514656	1					
ANR	2514968	Argument	src -> realname		2514656	0					
ANR	2514969	PtrMemberAccess	src -> realname		2514656	0					
ANR	2514970	Identifier	src		2514656	0					
ANR	2514971	Identifier	realname		2514656	1					
ANR	2514972	IfStatement	if ( src -> addr != UT64_MAX )		2514656	6					
ANR	2514973	Condition	src -> addr != UT64_MAX	451:5:10594:10614	2514656	0	True				
ANR	2514974	EqualityExpression	src -> addr != UT64_MAX		2514656	0		!=			
ANR	2514975	PtrMemberAccess	src -> addr		2514656	0					
ANR	2514976	Identifier	src		2514656	0					
ANR	2514977	Identifier	addr		2514656	1					
ANR	2514978	Identifier	UT64_MAX		2514656	1					
ANR	2514979	CompoundStatement		49:28:1002:1002	2514656	1					
ANR	2514980	ExpressionStatement	dst -> addr = src -> addr	452:2:10621:10642	2514656	0	True				
ANR	2514981	AssignmentExpression	dst -> addr = src -> addr		2514656	0		=			
ANR	2514982	PtrMemberAccess	dst -> addr		2514656	0					
ANR	2514983	Identifier	dst		2514656	0					
ANR	2514984	Identifier	addr		2514656	1					
ANR	2514985	PtrMemberAccess	src -> addr		2514656	1					
ANR	2514986	Identifier	src		2514656	0					
ANR	2514987	Identifier	addr		2514656	1					
ANR	2514988	IfStatement	if ( src -> refs )		2514656	7					
ANR	2514989	Condition	src -> refs	455:5:10653:10661	2514656	0	True				
ANR	2514990	PtrMemberAccess	src -> refs		2514656	0					
ANR	2514991	Identifier	src		2514656	0					
ANR	2514992	Identifier	refs		2514656	1					
ANR	2514993	CompoundStatement		53:16:1049:1049	2514656	1					
ANR	2514994	ExpressionStatement	r_list_free ( dst -> refs )	456:2:10668:10691	2514656	0	True				
ANR	2514995	CallExpression	r_list_free ( dst -> refs )		2514656	0					
ANR	2514996	Callee	r_list_free		2514656	0					
ANR	2514997	Identifier	r_list_free		2514656	0					
ANR	2514998	ArgumentList	dst -> refs		2514656	1					
ANR	2514999	Argument	dst -> refs		2514656	0					
ANR	2515000	PtrMemberAccess	dst -> refs		2514656	0					
ANR	2515001	Identifier	dst		2514656	0					
ANR	2515002	Identifier	refs		2514656	1					
ANR	2515003	ExpressionStatement	dst -> refs = r_list_newf ( ( RListFree ) free )	458:2:10696:10738	2514656	1	True				
ANR	2515004	AssignmentExpression	dst -> refs = r_list_newf ( ( RListFree ) free )		2514656	0		=			
ANR	2515005	PtrMemberAccess	dst -> refs		2514656	0					
ANR	2515006	Identifier	dst		2514656	0					
ANR	2515007	Identifier	refs		2514656	1					
ANR	2515008	CallExpression	r_list_newf ( ( RListFree ) free )		2514656	1					
ANR	2515009	Callee	r_list_newf		2514656	0					
ANR	2515010	Identifier	r_list_newf		2514656	0					
ANR	2515011	ArgumentList	( RListFree ) free		2514656	1					
ANR	2515012	Argument	( RListFree ) free		2514656	0					
ANR	2515013	CastExpression	( RListFree ) free		2514656	0					
ANR	2515014	CastTarget	RListFree		2514656	0					
ANR	2515015	Identifier	free		2514656	1					
ANR	2515016	Statement	r_list_foreach	459:2:10742:10755	2514656	2	True				
ANR	2515017	Statement	(	459:17:10757:10757	2514656	3	True				
ANR	2515018	Statement	src	459:18:10758:10760	2514656	4	True				
ANR	2515019	Statement	->	459:21:10761:10762	2514656	5	True				
ANR	2515020	Statement	refs	459:23:10763:10766	2514656	6	True				
ANR	2515021	Statement	","	459:27:10767:10767	2514656	7	True				
ANR	2515022	Statement	iter	459:29:10769:10772	2514656	8	True				
ANR	2515023	Statement	","	459:33:10773:10773	2514656	9	True				
ANR	2515024	Statement	ref	459:35:10775:10777	2514656	10	True				
ANR	2515025	Statement	)	459:38:10778:10778	2514656	11	True				
ANR	2515026	CompoundStatement		57:40:1165:1165	2514656	12					
ANR	2515027	ExpressionStatement	"r_list_append ( dst -> refs , r_str_new ( ref ) )"	460:3:10785:10827	2514656	0	True				
ANR	2515028	CallExpression	"r_list_append ( dst -> refs , r_str_new ( ref ) )"		2514656	0					
ANR	2515029	Callee	r_list_append		2514656	0					
ANR	2515030	Identifier	r_list_append		2514656	0					
ANR	2515031	ArgumentList	dst -> refs		2514656	1					
ANR	2515032	Argument	dst -> refs		2514656	0					
ANR	2515033	PtrMemberAccess	dst -> refs		2514656	0					
ANR	2515034	Identifier	dst		2514656	0					
ANR	2515035	Identifier	refs		2514656	1					
ANR	2515036	Argument	r_str_new ( ref )		2514656	1					
ANR	2515037	CallExpression	r_str_new ( ref )		2514656	0					
ANR	2515038	Callee	r_str_new		2514656	0					
ANR	2515039	Identifier	r_str_new		2514656	0					
ANR	2515040	ArgumentList	ref		2514656	1					
ANR	2515041	Argument	ref		2514656	0					
ANR	2515042	Identifier	ref		2514656	0					
ANR	2515043	IfStatement	if ( src -> vars )		2514656	8					
ANR	2515044	Condition	src -> vars	464:5:10842:10850	2514656	0	True				
ANR	2515045	PtrMemberAccess	src -> vars		2514656	0					
ANR	2515046	Identifier	src		2514656	0					
ANR	2515047	Identifier	vars		2514656	1					
ANR	2515048	CompoundStatement		62:16:1238:1238	2514656	1					
ANR	2515049	ExpressionStatement	r_list_free ( dst -> vars )	465:2:10857:10880	2514656	0	True				
ANR	2515050	CallExpression	r_list_free ( dst -> vars )		2514656	0					
ANR	2515051	Callee	r_list_free		2514656	0					
ANR	2515052	Identifier	r_list_free		2514656	0					
ANR	2515053	ArgumentList	dst -> vars		2514656	1					
ANR	2515054	Argument	dst -> vars		2514656	0					
ANR	2515055	PtrMemberAccess	dst -> vars		2514656	0					
ANR	2515056	Identifier	dst		2514656	0					
ANR	2515057	Identifier	vars		2514656	1					
ANR	2515058	ExpressionStatement	dst -> vars = r_list_newf ( ( RListFree ) free )	467:2:10885:10927	2514656	1	True				
ANR	2515059	AssignmentExpression	dst -> vars = r_list_newf ( ( RListFree ) free )		2514656	0		=			
ANR	2515060	PtrMemberAccess	dst -> vars		2514656	0					
ANR	2515061	Identifier	dst		2514656	0					
ANR	2515062	Identifier	vars		2514656	1					
ANR	2515063	CallExpression	r_list_newf ( ( RListFree ) free )		2514656	1					
ANR	2515064	Callee	r_list_newf		2514656	0					
ANR	2515065	Identifier	r_list_newf		2514656	0					
ANR	2515066	ArgumentList	( RListFree ) free		2514656	1					
ANR	2515067	Argument	( RListFree ) free		2514656	0					
ANR	2515068	CastExpression	( RListFree ) free		2514656	0					
ANR	2515069	CastTarget	RListFree		2514656	0					
ANR	2515070	Identifier	free		2514656	1					
ANR	2515071	Statement	r_list_foreach	468:2:10931:10944	2514656	2	True				
ANR	2515072	Statement	(	468:17:10946:10946	2514656	3	True				
ANR	2515073	Statement	src	468:18:10947:10949	2514656	4	True				
ANR	2515074	Statement	->	468:21:10950:10951	2514656	5	True				
ANR	2515075	Statement	vars	468:23:10952:10955	2514656	6	True				
ANR	2515076	Statement	","	468:27:10956:10956	2514656	7	True				
ANR	2515077	Statement	iter	468:29:10958:10961	2514656	8	True				
ANR	2515078	Statement	","	468:33:10962:10962	2514656	9	True				
ANR	2515079	Statement	var	468:35:10964:10966	2514656	10	True				
ANR	2515080	Statement	)	468:38:10967:10967	2514656	11	True				
ANR	2515081	CompoundStatement		66:40:1354:1354	2514656	12					
ANR	2515082	ExpressionStatement	"r_list_append ( dst -> vars , r_str_new ( var ) )"	469:3:10974:11016	2514656	0	True				
ANR	2515083	CallExpression	"r_list_append ( dst -> vars , r_str_new ( var ) )"		2514656	0					
ANR	2515084	Callee	r_list_append		2514656	0					
ANR	2515085	Identifier	r_list_append		2514656	0					
ANR	2515086	ArgumentList	dst -> vars		2514656	1					
ANR	2515087	Argument	dst -> vars		2514656	0					
ANR	2515088	PtrMemberAccess	dst -> vars		2514656	0					
ANR	2515089	Identifier	dst		2514656	0					
ANR	2515090	Identifier	vars		2514656	1					
ANR	2515091	Argument	r_str_new ( var )		2514656	1					
ANR	2515092	CallExpression	r_str_new ( var )		2514656	0					
ANR	2515093	Callee	r_str_new		2514656	0					
ANR	2515094	Identifier	r_str_new		2514656	0					
ANR	2515095	ArgumentList	var		2514656	1					
ANR	2515096	Argument	var		2514656	0					
ANR	2515097	Identifier	var		2514656	0					
ANR	2515098	IfStatement	if ( src -> hash )		2514656	9					
ANR	2515099	Condition	src -> hash	473:5:11031:11039	2514656	0	True				
ANR	2515100	PtrMemberAccess	src -> hash		2514656	0					
ANR	2515101	Identifier	src		2514656	0					
ANR	2515102	Identifier	hash		2514656	1					
ANR	2515103	CompoundStatement		71:16:1427:1427	2514656	1					
ANR	2515104	IfStatement	if ( ! dst -> hash )		2514656	0					
ANR	2515105	Condition	! dst -> hash	474:6:11050:11059	2514656	0	True				
ANR	2515106	UnaryOperationExpression	! dst -> hash		2514656	0					
ANR	2515107	UnaryOperator	!		2514656	0					
ANR	2515108	PtrMemberAccess	dst -> hash		2514656	1					
ANR	2515109	Identifier	dst		2514656	0					
ANR	2515110	Identifier	hash		2514656	1					
ANR	2515111	CompoundStatement		72:18:1447:1447	2514656	1					
ANR	2515112	ExpressionStatement	dst -> hash = R_NEW0 ( RSignHash )	475:3:11067:11097	2514656	0	True				
ANR	2515113	AssignmentExpression	dst -> hash = R_NEW0 ( RSignHash )		2514656	0		=			
ANR	2515114	PtrMemberAccess	dst -> hash		2514656	0					
ANR	2515115	Identifier	dst		2514656	0					
ANR	2515116	Identifier	hash		2514656	1					
ANR	2515117	CallExpression	R_NEW0 ( RSignHash )		2514656	1					
ANR	2515118	Callee	R_NEW0		2514656	0					
ANR	2515119	Identifier	R_NEW0		2514656	0					
ANR	2515120	ArgumentList	RSignHash		2514656	1					
ANR	2515121	Argument	RSignHash		2514656	0					
ANR	2515122	Identifier	RSignHash		2514656	0					
ANR	2515123	IfStatement	if ( ! dst -> hash )		2514656	1					
ANR	2515124	Condition	! dst -> hash	476:7:11106:11115	2514656	0	True				
ANR	2515125	UnaryOperationExpression	! dst -> hash		2514656	0					
ANR	2515126	UnaryOperator	!		2514656	0					
ANR	2515127	PtrMemberAccess	dst -> hash		2514656	1					
ANR	2515128	Identifier	dst		2514656	0					
ANR	2515129	Identifier	hash		2514656	1					
ANR	2515130	CompoundStatement		74:19:1503:1503	2514656	1					
ANR	2515131	ReturnStatement	return ;	477:4:11124:11130	2514656	0	True				
ANR	2515132	IfStatement	if ( src -> hash -> bbhash )		2514656	1					
ANR	2515133	Condition	src -> hash -> bbhash	480:6:11147:11163	2514656	0	True				
ANR	2515134	PtrMemberAccess	src -> hash -> bbhash		2514656	0					
ANR	2515135	PtrMemberAccess	src -> hash		2514656	0					
ANR	2515136	Identifier	src		2514656	0					
ANR	2515137	Identifier	hash		2514656	1					
ANR	2515138	Identifier	bbhash		2514656	1					
ANR	2515139	CompoundStatement		78:25:1551:1551	2514656	1					
ANR	2515140	ExpressionStatement	dst -> hash -> bbhash = strdup ( src -> hash -> bbhash )	481:3:11171:11217	2514656	0	True				
ANR	2515141	AssignmentExpression	dst -> hash -> bbhash = strdup ( src -> hash -> bbhash )		2514656	0		=			
ANR	2515142	PtrMemberAccess	dst -> hash -> bbhash		2514656	0					
ANR	2515143	PtrMemberAccess	dst -> hash		2514656	0					
ANR	2515144	Identifier	dst		2514656	0					
ANR	2515145	Identifier	hash		2514656	1					
ANR	2515146	Identifier	bbhash		2514656	1					
ANR	2515147	CallExpression	strdup ( src -> hash -> bbhash )		2514656	1					
ANR	2515148	Callee	strdup		2514656	0					
ANR	2515149	Identifier	strdup		2514656	0					
ANR	2515150	ArgumentList	src -> hash -> bbhash		2514656	1					
ANR	2515151	Argument	src -> hash -> bbhash		2514656	0					
ANR	2515152	PtrMemberAccess	src -> hash -> bbhash		2514656	0					
ANR	2515153	PtrMemberAccess	src -> hash		2514656	0					
ANR	2515154	Identifier	src		2514656	0					
ANR	2515155	Identifier	hash		2514656	1					
ANR	2515156	Identifier	bbhash		2514656	1					
ANR	2515157	ReturnType	static void		2514656	1					
ANR	2515158	Identifier	mergeItem		2514656	2					
ANR	2515159	ParameterList	"RSignItem * dst , RSignItem * src"		2514656	3					
ANR	2515160	Parameter	RSignItem * dst	403:22:9582:9595	2514656	0	True				
ANR	2515161	ParameterType	RSignItem *		2514656	0					
ANR	2515162	Identifier	dst		2514656	1					
ANR	2515163	Parameter	RSignItem * src	403:38:9598:9611	2514656	1	True				
ANR	2515164	ParameterType	RSignItem *		2514656	0					
ANR	2515165	Identifier	src		2514656	1					
ANR	2515166	CFGEntryNode	ENTRY		2514656		True				
ANR	2515167	CFGExitNode	EXIT		2514656		True				
ANR	2515168	Symbol	src -> addr		2514656						
ANR	2515169	Symbol	src -> space		2514656						
ANR	2515170	Symbol	* src		2514656						
ANR	2515171	Symbol	* dst		2514656						
ANR	2515172	Symbol	ref		2514656						
ANR	2515173	Symbol	* src -> hash		2514656						
ANR	2515174	Symbol	RSignHash		2514656						
ANR	2515175	Symbol	dst -> addr		2514656						
ANR	2515176	Symbol	* * dst		2514656						
ANR	2515177	Symbol	r_str_new		2514656						
ANR	2515178	Symbol	* src -> graph		2514656						
ANR	2515179	Symbol	NULL		2514656						
ANR	2515180	Symbol	dst -> space		2514656						
ANR	2515181	Symbol	* dst -> bytes		2514656						
ANR	2515182	Symbol	src -> hash		2514656						
ANR	2515183	Symbol	r_list_newf		2514656						
ANR	2515184	Symbol	var		2514656						
ANR	2515185	Symbol	src -> comment		2514656						
ANR	2515186	Symbol	iter		2514656						
ANR	2515187	Symbol	* dst -> hash		2514656						
ANR	2515188	Symbol	dst -> bytes -> bytes		2514656						
ANR	2515189	Symbol	dst -> bytes		2514656						
ANR	2515190	Symbol	R_NEW0		2514656						
ANR	2515191	Symbol	src -> vars		2514656						
ANR	2515192	Symbol	src -> graph		2514656						
ANR	2515193	Symbol	* * src		2514656						
ANR	2515194	Symbol	RSignBytes		2514656						
ANR	2515195	Symbol	src -> bytes -> mask		2514656						
ANR	2515196	Symbol	* src -> bytes		2514656						
ANR	2515197	Symbol	dst		2514656						
ANR	2515198	Symbol	src -> bytes -> bytes		2514656						
ANR	2515199	Symbol	dst -> refs		2514656						
ANR	2515200	Symbol	src -> hash -> bbhash		2514656						
ANR	2515201	Symbol	src -> bytes		2514656						
ANR	2515202	Symbol	dst -> bytes -> size		2514656						
ANR	2515203	Symbol	dst -> graph		2514656						
ANR	2515204	Symbol	RSignGraph		2514656						
ANR	2515205	Symbol	src -> refs		2514656						
ANR	2515206	Symbol	dst -> vars		2514656						
ANR	2515207	Symbol	* dst -> graph		2514656						
ANR	2515208	Symbol	UT64_MAX		2514656						
ANR	2515209	Symbol	free		2514656						
ANR	2515210	Symbol	malloc		2514656						
ANR	2515211	Symbol	dst -> realname		2514656						
ANR	2515212	Symbol	dst -> bytes -> mask		2514656						
ANR	2515213	Symbol	src		2514656						
ANR	2515214	Symbol	dst -> comment		2514656						
ANR	2515215	Symbol	dst -> hash -> bbhash		2514656						
ANR	2515216	Symbol	dst -> hash		2514656						
ANR	2515217	Symbol	src -> realname		2514656						
ANR	2515218	Symbol	strdup		2514656						
ANR	2515219	Symbol	src -> bytes -> size		2514656						
ANR	2515220	Function	addItem	486:0:11229:11833							
ANR	2515221	FunctionDef	"addItem (RAnal * a , RSignItem * it)"		2515220	0					
ANR	2515222	CompoundStatement		486:45:11274:11833	2515220	0					
ANR	2515223	IdentifierDeclStatement	"char key [ R_SIGN_KEY_MAXSZ ] , val [ R_SIGN_VAL_MAXSZ ] ;"	487:1:11277:11326	2515220	0	True				
ANR	2515224	IdentifierDecl	key [ R_SIGN_KEY_MAXSZ ]		2515220	0					
ANR	2515225	IdentifierDeclType	char [ R_SIGN_KEY_MAXSZ ]		2515220	0					
ANR	2515226	Identifier	key		2515220	1					
ANR	2515227	Identifier	R_SIGN_KEY_MAXSZ		2515220	2					
ANR	2515228	IdentifierDecl	val [ R_SIGN_VAL_MAXSZ ]		2515220	1					
ANR	2515229	IdentifierDeclType	char [ R_SIGN_VAL_MAXSZ ]		2515220	0					
ANR	2515230	Identifier	val		2515220	1					
ANR	2515231	Identifier	R_SIGN_VAL_MAXSZ		2515220	2					
ANR	2515232	IdentifierDeclStatement	const char * curval = NULL ;	488:1:11329:11354	2515220	1	True				
ANR	2515233	IdentifierDecl	* curval = NULL		2515220	0					
ANR	2515234	IdentifierDeclType	const char *		2515220	0					
ANR	2515235	Identifier	curval		2515220	1					
ANR	2515236	AssignmentExpression	* curval = NULL		2515220	2		=			
ANR	2515237	Identifier	NULL		2515220	0					
ANR	2515238	Identifier	NULL		2515220	1					
ANR	2515239	IdentifierDeclStatement	bool retval = true ;	489:1:11357:11375	2515220	2	True				
ANR	2515240	IdentifierDecl	retval = true		2515220	0					
ANR	2515241	IdentifierDeclType	bool		2515220	0					
ANR	2515242	Identifier	retval		2515220	1					
ANR	2515243	AssignmentExpression	retval = true		2515220	2		=			
ANR	2515244	Identifier	true		2515220	0					
ANR	2515245	Identifier	true		2515220	1					
ANR	2515246	IdentifierDeclStatement	RSignItem * curit = r_sign_item_new ( ) ;	490:1:11378:11415	2515220	3	True				
ANR	2515247	IdentifierDecl	* curit = r_sign_item_new ( )		2515220	0					
ANR	2515248	IdentifierDeclType	RSignItem *		2515220	0					
ANR	2515249	Identifier	curit		2515220	1					
ANR	2515250	AssignmentExpression	* curit = r_sign_item_new ( )		2515220	2		=			
ANR	2515251	Identifier	curit		2515220	0					
ANR	2515252	CallExpression	r_sign_item_new ( )		2515220	1					
ANR	2515253	Callee	r_sign_item_new		2515220	0					
ANR	2515254	Identifier	r_sign_item_new		2515220	0					
ANR	2515255	ArgumentList			2515220	1					
ANR	2515256	IfStatement	if ( ! curit )		2515220	4					
ANR	2515257	Condition	! curit	491:5:11422:11427	2515220	0	True				
ANR	2515258	UnaryOperationExpression	! curit		2515220	0					
ANR	2515259	UnaryOperator	!		2515220	0					
ANR	2515260	Identifier	curit		2515220	1					
ANR	2515261	CompoundStatement		6:13:155:155	2515220	1					
ANR	2515262	ReturnStatement	return false ;	492:2:11434:11446	2515220	0	True				
ANR	2515263	Identifier	false		2515220	0					
ANR	2515264	ExpressionStatement	"serialize ( a , it , key , val )"	495:1:11453:11480	2515220	5	True				
ANR	2515265	CallExpression	"serialize ( a , it , key , val )"		2515220	0					
ANR	2515266	Callee	serialize		2515220	0					
ANR	2515267	Identifier	serialize		2515220	0					
ANR	2515268	ArgumentList	a		2515220	1					
ANR	2515269	Argument	a		2515220	0					
ANR	2515270	Identifier	a		2515220	0					
ANR	2515271	Argument	it		2515220	1					
ANR	2515272	Identifier	it		2515220	0					
ANR	2515273	Argument	key		2515220	2					
ANR	2515274	Identifier	key		2515220	0					
ANR	2515275	Argument	val		2515220	3					
ANR	2515276	Identifier	val		2515220	0					
ANR	2515277	ExpressionStatement	"curval = sdb_const_get ( a -> sdb_zigns , key , 0 )"	496:1:11483:11528	2515220	6	True				
ANR	2515278	AssignmentExpression	"curval = sdb_const_get ( a -> sdb_zigns , key , 0 )"		2515220	0		=			
ANR	2515279	Identifier	curval		2515220	0					
ANR	2515280	CallExpression	"sdb_const_get ( a -> sdb_zigns , key , 0 )"		2515220	1					
ANR	2515281	Callee	sdb_const_get		2515220	0					
ANR	2515282	Identifier	sdb_const_get		2515220	0					
ANR	2515283	ArgumentList	a -> sdb_zigns		2515220	1					
ANR	2515284	Argument	a -> sdb_zigns		2515220	0					
ANR	2515285	PtrMemberAccess	a -> sdb_zigns		2515220	0					
ANR	2515286	Identifier	a		2515220	0					
ANR	2515287	Identifier	sdb_zigns		2515220	1					
ANR	2515288	Argument	key		2515220	1					
ANR	2515289	Identifier	key		2515220	0					
ANR	2515290	Argument	0		2515220	2					
ANR	2515291	PrimaryExpression	0		2515220	0					
ANR	2515292	IfStatement	if ( curval )		2515220	7					
ANR	2515293	Condition	curval	497:5:11535:11540	2515220	0	True				
ANR	2515294	Identifier	curval		2515220	0					
ANR	2515295	CompoundStatement		12:13:268:268	2515220	1					
ANR	2515296	IfStatement	"if ( ! r_sign_deserialize ( a , curit , key , curval ) )"		2515220	0					
ANR	2515297	Condition	"! r_sign_deserialize ( a , curit , key , curval )"	498:6:11551:11593	2515220	0	True				
ANR	2515298	UnaryOperationExpression	"! r_sign_deserialize ( a , curit , key , curval )"		2515220	0					
ANR	2515299	UnaryOperator	!		2515220	0					
ANR	2515300	CallExpression	"r_sign_deserialize ( a , curit , key , curval )"		2515220	1					
ANR	2515301	Callee	r_sign_deserialize		2515220	0					
ANR	2515302	Identifier	r_sign_deserialize		2515220	0					
ANR	2515303	ArgumentList	a		2515220	1					
ANR	2515304	Argument	a		2515220	0					
ANR	2515305	Identifier	a		2515220	0					
ANR	2515306	Argument	curit		2515220	1					
ANR	2515307	Identifier	curit		2515220	0					
ANR	2515308	Argument	key		2515220	2					
ANR	2515309	Identifier	key		2515220	0					
ANR	2515310	Argument	curval		2515220	3					
ANR	2515311	Identifier	curval		2515220	0					
ANR	2515312	CompoundStatement		13:51:321:321	2515220	1					
ANR	2515313	ExpressionStatement	"eprintf ( ""error: cannot deserialize zign\\n"" )"	499:3:11601:11645	2515220	0	True				
ANR	2515314	CallExpression	"eprintf ( ""error: cannot deserialize zign\\n"" )"		2515220	0					
ANR	2515315	Callee	eprintf		2515220	0					
ANR	2515316	Identifier	eprintf		2515220	0					
ANR	2515317	ArgumentList	"""error: cannot deserialize zign\\n"""		2515220	1					
ANR	2515318	Argument	"""error: cannot deserialize zign\\n"""		2515220	0					
ANR	2515319	PrimaryExpression	"""error: cannot deserialize zign\\n"""		2515220	0					
ANR	2515320	ExpressionStatement	retval = false	500:3:11650:11664	2515220	1	True				
ANR	2515321	AssignmentExpression	retval = false		2515220	0		=			
ANR	2515322	Identifier	retval		2515220	0					
ANR	2515323	Identifier	false		2515220	1					
ANR	2515324	GotoStatement	goto out ;	501:3:11669:11677	2515220	2	True				
ANR	2515325	Identifier	out		2515220	0					
ANR	2515326	ExpressionStatement	"mergeItem ( curit , it )"	503:2:11685:11706	2515220	1	True				
ANR	2515327	CallExpression	"mergeItem ( curit , it )"		2515220	0					
ANR	2515328	Callee	mergeItem		2515220	0					
ANR	2515329	Identifier	mergeItem		2515220	0					
ANR	2515330	ArgumentList	curit		2515220	1					
ANR	2515331	Argument	curit		2515220	0					
ANR	2515332	Identifier	curit		2515220	0					
ANR	2515333	Argument	it		2515220	1					
ANR	2515334	Identifier	it		2515220	0					
ANR	2515335	ExpressionStatement	"serialize ( a , curit , key , val )"	504:2:11710:11740	2515220	2	True				
ANR	2515336	CallExpression	"serialize ( a , curit , key , val )"		2515220	0					
ANR	2515337	Callee	serialize		2515220	0					
ANR	2515338	Identifier	serialize		2515220	0					
ANR	2515339	ArgumentList	a		2515220	1					
ANR	2515340	Argument	a		2515220	0					
ANR	2515341	Identifier	a		2515220	0					
ANR	2515342	Argument	curit		2515220	1					
ANR	2515343	Identifier	curit		2515220	0					
ANR	2515344	Argument	key		2515220	2					
ANR	2515345	Identifier	key		2515220	0					
ANR	2515346	Argument	val		2515220	3					
ANR	2515347	Identifier	val		2515220	0					
ANR	2515348	ExpressionStatement	"sdb_set ( a -> sdb_zigns , key , val , 0 )"	506:1:11746:11781	2515220	8	True				
ANR	2515349	CallExpression	"sdb_set ( a -> sdb_zigns , key , val , 0 )"		2515220	0					
ANR	2515350	Callee	sdb_set		2515220	0					
ANR	2515351	Identifier	sdb_set		2515220	0					
ANR	2515352	ArgumentList	a -> sdb_zigns		2515220	1					
ANR	2515353	Argument	a -> sdb_zigns		2515220	0					
ANR	2515354	PtrMemberAccess	a -> sdb_zigns		2515220	0					
ANR	2515355	Identifier	a		2515220	0					
ANR	2515356	Identifier	sdb_zigns		2515220	1					
ANR	2515357	Argument	key		2515220	1					
ANR	2515358	Identifier	key		2515220	0					
ANR	2515359	Argument	val		2515220	2					
ANR	2515360	Identifier	val		2515220	0					
ANR	2515361	Argument	0		2515220	3					
ANR	2515362	PrimaryExpression	0		2515220	0					
ANR	2515363	Label	out :	508:0:11784:11787	2515220	9	True				
ANR	2515364	Identifier	out		2515220	0					
ANR	2515365	ExpressionStatement	r_sign_item_free ( curit )	509:1:11790:11814	2515220	10	True				
ANR	2515366	CallExpression	r_sign_item_free ( curit )		2515220	0					
ANR	2515367	Callee	r_sign_item_free		2515220	0					
ANR	2515368	Identifier	r_sign_item_free		2515220	0					
ANR	2515369	ArgumentList	curit		2515220	1					
ANR	2515370	Argument	curit		2515220	0					
ANR	2515371	Identifier	curit		2515220	0					
ANR	2515372	ReturnStatement	return retval ;	511:1:11818:11831	2515220	11	True				
ANR	2515373	Identifier	retval		2515220	0					
ANR	2515374	ReturnType	static bool		2515220	1					
ANR	2515375	Identifier	addItem		2515220	2					
ANR	2515376	ParameterList	"RAnal * a , RSignItem * it"		2515220	3					
ANR	2515377	Parameter	RAnal * a	486:20:11249:11256	2515220	0	True				
ANR	2515378	ParameterType	RAnal *		2515220	0					
ANR	2515379	Identifier	a		2515220	1					
ANR	2515380	Parameter	RSignItem * it	486:30:11259:11271	2515220	1	True				
ANR	2515381	ParameterType	RSignItem *		2515220	0					
ANR	2515382	Identifier	it		2515220	1					
ANR	2515383	CFGEntryNode	ENTRY		2515220		True				
ANR	2515384	CFGExitNode	EXIT		2515220		True				
ANR	2515385	Symbol	val		2515220						
ANR	2515386	Symbol	a		2515220						
ANR	2515387	Symbol	r_sign_item_new		2515220						
ANR	2515388	Symbol	curit		2515220						
ANR	2515389	Symbol	NULL		2515220						
ANR	2515390	Symbol	false		2515220						
ANR	2515391	Symbol	it		2515220						
ANR	2515392	Symbol	* a		2515220						
ANR	2515393	Symbol	sdb_const_get		2515220						
ANR	2515394	Symbol	retval		2515220						
ANR	2515395	Symbol	a -> sdb_zigns		2515220						
ANR	2515396	Symbol	r_sign_deserialize		2515220						
ANR	2515397	Symbol	curval		2515220						
ANR	2515398	Symbol	true		2515220						
ANR	2515399	Symbol	key		2515220						
ANR	2515400	Function	addHash	514:0:11836:12419							
ANR	2515401	FunctionDef	"addHash (RAnal * a , const char * name , int type , const char * val)"		2515400	0					
ANR	2515402	CompoundStatement		514:75:11911:12419	2515400	0					
ANR	2515403	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	515:1:11914:11948	2515400	0	True				
ANR	2515404	IdentifierDecl	* it = r_sign_item_new ( )		2515400	0					
ANR	2515405	IdentifierDeclType	RSignItem *		2515400	0					
ANR	2515406	Identifier	it		2515400	1					
ANR	2515407	AssignmentExpression	* it = r_sign_item_new ( )		2515400	2		=			
ANR	2515408	Identifier	it		2515400	0					
ANR	2515409	CallExpression	r_sign_item_new ( )		2515400	1					
ANR	2515410	Callee	r_sign_item_new		2515400	0					
ANR	2515411	Identifier	r_sign_item_new		2515400	0					
ANR	2515412	ArgumentList			2515400	1					
ANR	2515413	IfStatement	if ( ! it )		2515400	1					
ANR	2515414	Condition	! it	516:5:11955:11957	2515400	0	True				
ANR	2515415	UnaryOperationExpression	! it		2515400	0					
ANR	2515416	UnaryOperator	!		2515400	0					
ANR	2515417	Identifier	it		2515400	1					
ANR	2515418	CompoundStatement		3:10:48:48	2515400	1					
ANR	2515419	ExpressionStatement	r_sign_item_free ( it )	517:2:11964:11985	2515400	0	True				
ANR	2515420	CallExpression	r_sign_item_free ( it )		2515400	0					
ANR	2515421	Callee	r_sign_item_free		2515400	0					
ANR	2515422	Identifier	r_sign_item_free		2515400	0					
ANR	2515423	ArgumentList	it		2515400	1					
ANR	2515424	Argument	it		2515400	0					
ANR	2515425	Identifier	it		2515400	0					
ANR	2515426	ReturnStatement	return false ;	518:2:11989:12001	2515400	1	True				
ANR	2515427	Identifier	false		2515400	0					
ANR	2515428	ExpressionStatement	it -> name = r_str_new ( name )	520:1:12007:12034	2515400	2	True				
ANR	2515429	AssignmentExpression	it -> name = r_str_new ( name )		2515400	0		=			
ANR	2515430	PtrMemberAccess	it -> name		2515400	0					
ANR	2515431	Identifier	it		2515400	0					
ANR	2515432	Identifier	name		2515400	1					
ANR	2515433	CallExpression	r_str_new ( name )		2515400	1					
ANR	2515434	Callee	r_str_new		2515400	0					
ANR	2515435	Identifier	r_str_new		2515400	0					
ANR	2515436	ArgumentList	name		2515400	1					
ANR	2515437	Argument	name		2515400	0					
ANR	2515438	Identifier	name		2515400	0					
ANR	2515439	IfStatement	if ( ! it -> name )		2515400	3					
ANR	2515440	Condition	! it -> name	521:5:12041:12049	2515400	0	True				
ANR	2515441	UnaryOperationExpression	! it -> name		2515400	0					
ANR	2515442	UnaryOperator	!		2515400	0					
ANR	2515443	PtrMemberAccess	it -> name		2515400	1					
ANR	2515444	Identifier	it		2515400	0					
ANR	2515445	Identifier	name		2515400	1					
ANR	2515446	CompoundStatement		8:16:140:140	2515400	1					
ANR	2515447	ExpressionStatement	r_sign_item_free ( it )	522:2:12056:12077	2515400	0	True				
ANR	2515448	CallExpression	r_sign_item_free ( it )		2515400	0					
ANR	2515449	Callee	r_sign_item_free		2515400	0					
ANR	2515450	Identifier	r_sign_item_free		2515400	0					
ANR	2515451	ArgumentList	it		2515400	1					
ANR	2515452	Argument	it		2515400	0					
ANR	2515453	Identifier	it		2515400	0					
ANR	2515454	ReturnStatement	return false ;	523:2:12081:12093	2515400	1	True				
ANR	2515455	Identifier	false		2515400	0					
ANR	2515456	ExpressionStatement	it -> hash = R_NEW0 ( RSignHash )	525:1:12099:12128	2515400	4	True				
ANR	2515457	AssignmentExpression	it -> hash = R_NEW0 ( RSignHash )		2515400	0		=			
ANR	2515458	PtrMemberAccess	it -> hash		2515400	0					
ANR	2515459	Identifier	it		2515400	0					
ANR	2515460	Identifier	hash		2515400	1					
ANR	2515461	CallExpression	R_NEW0 ( RSignHash )		2515400	1					
ANR	2515462	Callee	R_NEW0		2515400	0					
ANR	2515463	Identifier	R_NEW0		2515400	0					
ANR	2515464	ArgumentList	RSignHash		2515400	1					
ANR	2515465	Argument	RSignHash		2515400	0					
ANR	2515466	Identifier	RSignHash		2515400	0					
ANR	2515467	IfStatement	if ( ! it -> hash )		2515400	5					
ANR	2515468	Condition	! it -> hash	526:5:12135:12143	2515400	0	True				
ANR	2515469	UnaryOperationExpression	! it -> hash		2515400	0					
ANR	2515470	UnaryOperator	!		2515400	0					
ANR	2515471	PtrMemberAccess	it -> hash		2515400	1					
ANR	2515472	Identifier	it		2515400	0					
ANR	2515473	Identifier	hash		2515400	1					
ANR	2515474	CompoundStatement		13:16:234:234	2515400	1					
ANR	2515475	ExpressionStatement	r_sign_item_free ( it )	527:2:12150:12171	2515400	0	True				
ANR	2515476	CallExpression	r_sign_item_free ( it )		2515400	0					
ANR	2515477	Callee	r_sign_item_free		2515400	0					
ANR	2515478	Identifier	r_sign_item_free		2515400	0					
ANR	2515479	ArgumentList	it		2515400	1					
ANR	2515480	Argument	it		2515400	0					
ANR	2515481	Identifier	it		2515400	0					
ANR	2515482	ReturnStatement	return false ;	528:2:12175:12187	2515400	1	True				
ANR	2515483	Identifier	false		2515400	0					
ANR	2515484	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	530:1:12193:12239	2515400	6	True				
ANR	2515485	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		2515400	0		=			
ANR	2515486	PtrMemberAccess	it -> space		2515400	0					
ANR	2515487	Identifier	it		2515400	0					
ANR	2515488	Identifier	space		2515400	1					
ANR	2515489	CallExpression	r_spaces_current ( & a -> zign_spaces )		2515400	1					
ANR	2515490	Callee	r_spaces_current		2515400	0					
ANR	2515491	Identifier	r_spaces_current		2515400	0					
ANR	2515492	ArgumentList	& a -> zign_spaces		2515400	1					
ANR	2515493	Argument	& a -> zign_spaces		2515400	0					
ANR	2515494	UnaryOperationExpression	& a -> zign_spaces		2515400	0					
ANR	2515495	UnaryOperator	&		2515400	0					
ANR	2515496	PtrMemberAccess	a -> zign_spaces		2515400	1					
ANR	2515497	Identifier	a		2515400	0					
ANR	2515498	Identifier	zign_spaces		2515400	1					
ANR	2515499	IdentifierDeclStatement	bool retval = false ;	532:1:12243:12262	2515400	7	True				
ANR	2515500	IdentifierDecl	retval = false		2515400	0					
ANR	2515501	IdentifierDeclType	bool		2515400	0					
ANR	2515502	Identifier	retval		2515400	1					
ANR	2515503	AssignmentExpression	retval = false		2515400	2		=			
ANR	2515504	Identifier	false		2515400	0					
ANR	2515505	Identifier	false		2515400	1					
ANR	2515506	SwitchStatement	switch ( type )		2515400	8					
ANR	2515507	Condition	type	533:9:12273:12276	2515400	0	True				
ANR	2515508	Identifier	type		2515400	0					
ANR	2515509	CompoundStatement		20:15:367:367	2515400	1					
ANR	2515510	Label	case R_SIGN_BBHASH :	534:1:12282:12300	2515400	0	True				
ANR	2515511	Identifier	R_SIGN_BBHASH		2515400	0					
ANR	2515512	ExpressionStatement	it -> hash -> bbhash = strdup ( val )	535:2:12304:12335	2515400	1	True				
ANR	2515513	AssignmentExpression	it -> hash -> bbhash = strdup ( val )		2515400	0		=			
ANR	2515514	PtrMemberAccess	it -> hash -> bbhash		2515400	0					
ANR	2515515	PtrMemberAccess	it -> hash		2515400	0					
ANR	2515516	Identifier	it		2515400	0					
ANR	2515517	Identifier	hash		2515400	1					
ANR	2515518	Identifier	bbhash		2515400	1					
ANR	2515519	CallExpression	strdup ( val )		2515400	1					
ANR	2515520	Callee	strdup		2515400	0					
ANR	2515521	Identifier	strdup		2515400	0					
ANR	2515522	ArgumentList	val		2515400	1					
ANR	2515523	Argument	val		2515400	0					
ANR	2515524	Identifier	val		2515400	0					
ANR	2515525	ExpressionStatement	"retval = addItem ( a , it )"	536:2:12339:12363	2515400	2	True				
ANR	2515526	AssignmentExpression	"retval = addItem ( a , it )"		2515400	0		=			
ANR	2515527	Identifier	retval		2515400	0					
ANR	2515528	CallExpression	"addItem ( a , it )"		2515400	1					
ANR	2515529	Callee	addItem		2515400	0					
ANR	2515530	Identifier	addItem		2515400	0					
ANR	2515531	ArgumentList	a		2515400	1					
ANR	2515532	Argument	a		2515400	0					
ANR	2515533	Identifier	a		2515400	0					
ANR	2515534	Argument	it		2515400	1					
ANR	2515535	Identifier	it		2515400	0					
ANR	2515536	ExpressionStatement	r_sign_item_free ( it )	537:2:12367:12388	2515400	3	True				
ANR	2515537	CallExpression	r_sign_item_free ( it )		2515400	0					
ANR	2515538	Callee	r_sign_item_free		2515400	0					
ANR	2515539	Identifier	r_sign_item_free		2515400	0					
ANR	2515540	ArgumentList	it		2515400	1					
ANR	2515541	Argument	it		2515400	0					
ANR	2515542	Identifier	it		2515400	0					
ANR	2515543	BreakStatement	break ;	538:2:12392:12397	2515400	4	True				
ANR	2515544	ReturnStatement	return retval ;	541:1:12404:12417	2515400	9	True				
ANR	2515545	Identifier	retval		2515400	0					
ANR	2515546	ReturnType	static bool		2515400	1					
ANR	2515547	Identifier	addHash		2515400	2					
ANR	2515548	ParameterList	"RAnal * a , const char * name , int type , const char * val"		2515400	3					
ANR	2515549	Parameter	RAnal * a	514:20:11856:11863	2515400	0	True				
ANR	2515550	ParameterType	RAnal *		2515400	0					
ANR	2515551	Identifier	a		2515400	1					
ANR	2515552	Parameter	const char * name	514:30:11866:11881	2515400	1	True				
ANR	2515553	ParameterType	const char *		2515400	0					
ANR	2515554	Identifier	name		2515400	1					
ANR	2515555	Parameter	int type	514:48:11884:11891	2515400	2	True				
ANR	2515556	ParameterType	int		2515400	0					
ANR	2515557	Identifier	type		2515400	1					
ANR	2515558	Parameter	const char * val	514:58:11894:11908	2515400	3	True				
ANR	2515559	ParameterType	const char *		2515400	0					
ANR	2515560	Identifier	val		2515400	1					
ANR	2515561	CFGEntryNode	ENTRY		2515400		True				
ANR	2515562	CFGExitNode	EXIT		2515400		True				
ANR	2515563	Symbol	val		2515400						
ANR	2515564	Symbol	a		2515400						
ANR	2515565	Symbol	r_sign_item_new		2515400						
ANR	2515566	Symbol	* it -> hash		2515400						
ANR	2515567	Symbol	it -> name		2515400						
ANR	2515568	Symbol	false		2515400						
ANR	2515569	Symbol	it		2515400						
ANR	2515570	Symbol	type		2515400						
ANR	2515571	Symbol	& a -> zign_spaces		2515400						
ANR	2515572	Symbol	retval		2515400						
ANR	2515573	Symbol	R_NEW0		2515400						
ANR	2515574	Symbol	it -> space		2515400						
ANR	2515575	Symbol	addItem		2515400						
ANR	2515576	Symbol	* it		2515400						
ANR	2515577	Symbol	RSignHash		2515400						
ANR	2515578	Symbol	* * it		2515400						
ANR	2515579	Symbol	it -> hash		2515400						
ANR	2515580	Symbol	name		2515400						
ANR	2515581	Symbol	strdup		2515400						
ANR	2515582	Symbol	r_spaces_current		2515400						
ANR	2515583	Symbol	r_str_new		2515400						
ANR	2515584	Symbol	it -> hash -> bbhash		2515400						
ANR	2515585	Function	addBBHash	544:0:12422:12977							
ANR	2515586	FunctionDef	"addBBHash (RAnal * a , RAnalFunction * fcn , const char * name)"		2515585	0					
ANR	2515587	CompoundStatement		544:70:12492:12977	2515585	0					
ANR	2515588	IdentifierDeclStatement	bool retval = false ;	545:1:12495:12514	2515585	0	True				
ANR	2515589	IdentifierDecl	retval = false		2515585	0					
ANR	2515590	IdentifierDeclType	bool		2515585	0					
ANR	2515591	Identifier	retval		2515585	1					
ANR	2515592	AssignmentExpression	retval = false		2515585	2		=			
ANR	2515593	Identifier	false		2515585	0					
ANR	2515594	Identifier	false		2515585	1					
ANR	2515595	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	546:1:12517:12551	2515585	1	True				
ANR	2515596	IdentifierDecl	* it = r_sign_item_new ( )		2515585	0					
ANR	2515597	IdentifierDeclType	RSignItem *		2515585	0					
ANR	2515598	Identifier	it		2515585	1					
ANR	2515599	AssignmentExpression	* it = r_sign_item_new ( )		2515585	2		=			
ANR	2515600	Identifier	it		2515585	0					
ANR	2515601	CallExpression	r_sign_item_new ( )		2515585	1					
ANR	2515602	Callee	r_sign_item_new		2515585	0					
ANR	2515603	Identifier	r_sign_item_new		2515585	0					
ANR	2515604	ArgumentList			2515585	1					
ANR	2515605	IfStatement	if ( ! it )		2515585	2					
ANR	2515606	Condition	! it	547:5:12558:12560	2515585	0	True				
ANR	2515607	UnaryOperationExpression	! it		2515585	0					
ANR	2515608	UnaryOperator	!		2515585	0					
ANR	2515609	Identifier	it		2515585	1					
ANR	2515610	CompoundStatement		4:10:70:70	2515585	1					
ANR	2515611	GotoStatement	goto beach ;	548:2:12567:12577	2515585	0	True				
ANR	2515612	Identifier	beach		2515585	0					
ANR	2515613	ExpressionStatement	it -> name = r_str_new ( name )	550:1:12583:12610	2515585	3	True				
ANR	2515614	AssignmentExpression	it -> name = r_str_new ( name )		2515585	0		=			
ANR	2515615	PtrMemberAccess	it -> name		2515585	0					
ANR	2515616	Identifier	it		2515585	0					
ANR	2515617	Identifier	name		2515585	1					
ANR	2515618	CallExpression	r_str_new ( name )		2515585	1					
ANR	2515619	Callee	r_str_new		2515585	0					
ANR	2515620	Identifier	r_str_new		2515585	0					
ANR	2515621	ArgumentList	name		2515585	1					
ANR	2515622	Argument	name		2515585	0					
ANR	2515623	Identifier	name		2515585	0					
ANR	2515624	IfStatement	if ( ! it -> name )		2515585	4					
ANR	2515625	Condition	! it -> name	551:5:12617:12625	2515585	0	True				
ANR	2515626	UnaryOperationExpression	! it -> name		2515585	0					
ANR	2515627	UnaryOperator	!		2515585	0					
ANR	2515628	PtrMemberAccess	it -> name		2515585	1					
ANR	2515629	Identifier	it		2515585	0					
ANR	2515630	Identifier	name		2515585	1					
ANR	2515631	CompoundStatement		8:16:135:135	2515585	1					
ANR	2515632	GotoStatement	goto beach ;	552:2:12632:12642	2515585	0	True				
ANR	2515633	Identifier	beach		2515585	0					
ANR	2515634	ExpressionStatement	it -> hash = R_NEW0 ( RSignHash )	554:1:12648:12677	2515585	5	True				
ANR	2515635	AssignmentExpression	it -> hash = R_NEW0 ( RSignHash )		2515585	0		=			
ANR	2515636	PtrMemberAccess	it -> hash		2515585	0					
ANR	2515637	Identifier	it		2515585	0					
ANR	2515638	Identifier	hash		2515585	1					
ANR	2515639	CallExpression	R_NEW0 ( RSignHash )		2515585	1					
ANR	2515640	Callee	R_NEW0		2515585	0					
ANR	2515641	Identifier	R_NEW0		2515585	0					
ANR	2515642	ArgumentList	RSignHash		2515585	1					
ANR	2515643	Argument	RSignHash		2515585	0					
ANR	2515644	Identifier	RSignHash		2515585	0					
ANR	2515645	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	555:1:12680:12726	2515585	6	True				
ANR	2515646	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		2515585	0		=			
ANR	2515647	PtrMemberAccess	it -> space		2515585	0					
ANR	2515648	Identifier	it		2515585	0					
ANR	2515649	Identifier	space		2515585	1					
ANR	2515650	CallExpression	r_spaces_current ( & a -> zign_spaces )		2515585	1					
ANR	2515651	Callee	r_spaces_current		2515585	0					
ANR	2515652	Identifier	r_spaces_current		2515585	0					
ANR	2515653	ArgumentList	& a -> zign_spaces		2515585	1					
ANR	2515654	Argument	& a -> zign_spaces		2515585	0					
ANR	2515655	UnaryOperationExpression	& a -> zign_spaces		2515585	0					
ANR	2515656	UnaryOperator	&		2515585	0					
ANR	2515657	PtrMemberAccess	a -> zign_spaces		2515585	1					
ANR	2515658	Identifier	a		2515585	0					
ANR	2515659	Identifier	zign_spaces		2515585	1					
ANR	2515660	IfStatement	if ( ! it -> hash )		2515585	7					
ANR	2515661	Condition	! it -> hash	556:5:12733:12741	2515585	0	True				
ANR	2515662	UnaryOperationExpression	! it -> hash		2515585	0					
ANR	2515663	UnaryOperator	!		2515585	0					
ANR	2515664	PtrMemberAccess	it -> hash		2515585	1					
ANR	2515665	Identifier	it		2515585	0					
ANR	2515666	Identifier	hash		2515585	1					
ANR	2515667	CompoundStatement		13:16:251:251	2515585	1					
ANR	2515668	GotoStatement	goto beach ;	557:2:12748:12758	2515585	0	True				
ANR	2515669	Identifier	beach		2515585	0					
ANR	2515670	IdentifierDeclStatement	"char * digest_hex = r_sign_calc_bbhash ( a , fcn ) ;"	560:1:12765:12811	2515585	8	True				
ANR	2515671	IdentifierDecl	"* digest_hex = r_sign_calc_bbhash ( a , fcn )"		2515585	0					
ANR	2515672	IdentifierDeclType	char *		2515585	0					
ANR	2515673	Identifier	digest_hex		2515585	1					
ANR	2515674	AssignmentExpression	"* digest_hex = r_sign_calc_bbhash ( a , fcn )"		2515585	2		=			
ANR	2515675	Identifier	digest_hex		2515585	0					
ANR	2515676	CallExpression	"r_sign_calc_bbhash ( a , fcn )"		2515585	1					
ANR	2515677	Callee	r_sign_calc_bbhash		2515585	0					
ANR	2515678	Identifier	r_sign_calc_bbhash		2515585	0					
ANR	2515679	ArgumentList	a		2515585	1					
ANR	2515680	Argument	a		2515585	0					
ANR	2515681	Identifier	a		2515585	0					
ANR	2515682	Argument	fcn		2515585	1					
ANR	2515683	Identifier	fcn		2515585	0					
ANR	2515684	IfStatement	if ( ! digest_hex )		2515585	9					
ANR	2515685	Condition	! digest_hex	561:5:12818:12828	2515585	0	True				
ANR	2515686	UnaryOperationExpression	! digest_hex		2515585	0					
ANR	2515687	UnaryOperator	!		2515585	0					
ANR	2515688	Identifier	digest_hex		2515585	1					
ANR	2515689	CompoundStatement		18:18:338:338	2515585	1					
ANR	2515690	ExpressionStatement	free ( digest_hex )	562:2:12835:12852	2515585	0	True				
ANR	2515691	CallExpression	free ( digest_hex )		2515585	0					
ANR	2515692	Callee	free		2515585	0					
ANR	2515693	Identifier	free		2515585	0					
ANR	2515694	ArgumentList	digest_hex		2515585	1					
ANR	2515695	Argument	digest_hex		2515585	0					
ANR	2515696	Identifier	digest_hex		2515585	0					
ANR	2515697	GotoStatement	goto beach ;	563:2:12856:12866	2515585	1	True				
ANR	2515698	Identifier	beach		2515585	0					
ANR	2515699	ExpressionStatement	it -> hash -> bbhash = digest_hex	565:1:12872:12901	2515585	10	True				
ANR	2515700	AssignmentExpression	it -> hash -> bbhash = digest_hex		2515585	0		=			
ANR	2515701	PtrMemberAccess	it -> hash -> bbhash		2515585	0					
ANR	2515702	PtrMemberAccess	it -> hash		2515585	0					
ANR	2515703	Identifier	it		2515585	0					
ANR	2515704	Identifier	hash		2515585	1					
ANR	2515705	Identifier	bbhash		2515585	1					
ANR	2515706	Identifier	digest_hex		2515585	1					
ANR	2515707	ExpressionStatement	"retval = addItem ( a , it )"	566:1:12904:12928	2515585	11	True				
ANR	2515708	AssignmentExpression	"retval = addItem ( a , it )"		2515585	0		=			
ANR	2515709	Identifier	retval		2515585	0					
ANR	2515710	CallExpression	"addItem ( a , it )"		2515585	1					
ANR	2515711	Callee	addItem		2515585	0					
ANR	2515712	Identifier	addItem		2515585	0					
ANR	2515713	ArgumentList	a		2515585	1					
ANR	2515714	Argument	a		2515585	0					
ANR	2515715	Identifier	a		2515585	0					
ANR	2515716	Argument	it		2515585	1					
ANR	2515717	Identifier	it		2515585	0					
ANR	2515718	Label	beach :	567:0:12930:12935	2515585	12	True				
ANR	2515719	Identifier	beach		2515585	0					
ANR	2515720	ExpressionStatement	r_sign_item_free ( it )	568:1:12938:12959	2515585	13	True				
ANR	2515721	CallExpression	r_sign_item_free ( it )		2515585	0					
ANR	2515722	Callee	r_sign_item_free		2515585	0					
ANR	2515723	Identifier	r_sign_item_free		2515585	0					
ANR	2515724	ArgumentList	it		2515585	1					
ANR	2515725	Argument	it		2515585	0					
ANR	2515726	Identifier	it		2515585	0					
ANR	2515727	ReturnStatement	return retval ;	569:1:12962:12975	2515585	14	True				
ANR	2515728	Identifier	retval		2515585	0					
ANR	2515729	ReturnType	static bool		2515585	1					
ANR	2515730	Identifier	addBBHash		2515585	2					
ANR	2515731	ParameterList	"RAnal * a , RAnalFunction * fcn , const char * name"		2515585	3					
ANR	2515732	Parameter	RAnal * a	544:22:12444:12451	2515585	0	True				
ANR	2515733	ParameterType	RAnal *		2515585	0					
ANR	2515734	Identifier	a		2515585	1					
ANR	2515735	Parameter	RAnalFunction * fcn	544:32:12454:12471	2515585	1	True				
ANR	2515736	ParameterType	RAnalFunction *		2515585	0					
ANR	2515737	Identifier	fcn		2515585	1					
ANR	2515738	Parameter	const char * name	544:52:12474:12489	2515585	2	True				
ANR	2515739	ParameterType	const char *		2515585	0					
ANR	2515740	Identifier	name		2515585	1					
ANR	2515741	CFGEntryNode	ENTRY		2515585		True				
ANR	2515742	CFGExitNode	EXIT		2515585		True				
ANR	2515743	Symbol	a		2515585						
ANR	2515744	Symbol	r_sign_item_new		2515585						
ANR	2515745	Symbol	* it -> hash		2515585						
ANR	2515746	Symbol	it -> name		2515585						
ANR	2515747	Symbol	false		2515585						
ANR	2515748	Symbol	it		2515585						
ANR	2515749	Symbol	retval		2515585						
ANR	2515750	Symbol	& a -> zign_spaces		2515585						
ANR	2515751	Symbol	fcn		2515585						
ANR	2515752	Symbol	r_sign_calc_bbhash		2515585						
ANR	2515753	Symbol	R_NEW0		2515585						
ANR	2515754	Symbol	it -> space		2515585						
ANR	2515755	Symbol	addItem		2515585						
ANR	2515756	Symbol	* it		2515585						
ANR	2515757	Symbol	RSignHash		2515585						
ANR	2515758	Symbol	* * it		2515585						
ANR	2515759	Symbol	it -> hash		2515585						
ANR	2515760	Symbol	name		2515585						
ANR	2515761	Symbol	digest_hex		2515585						
ANR	2515762	Symbol	r_spaces_current		2515585						
ANR	2515763	Symbol	r_str_new		2515585						
ANR	2515764	Symbol	it -> hash -> bbhash		2515585						
ANR	2515765	Function	addBytes	572:0:12980:13917							
ANR	2515766	FunctionDef	"addBytes (RAnal * a , const char * name , ut64 size , const ut8 * bytes , const ut8 * mask)"		2515765	0					
ANR	2515767	CompoundStatement		572:95:13075:13917	2515765	0					
ANR	2515768	IdentifierDeclStatement	bool retval = true ;	573:1:13078:13096	2515765	0	True				
ANR	2515769	IdentifierDecl	retval = true		2515765	0					
ANR	2515770	IdentifierDeclType	bool		2515765	0					
ANR	2515771	Identifier	retval		2515765	1					
ANR	2515772	AssignmentExpression	retval = true		2515765	2		=			
ANR	2515773	Identifier	true		2515765	0					
ANR	2515774	Identifier	true		2515765	1					
ANR	2515775	IfStatement	"if ( r_mem_is_zero ( mask , size ) )"		2515765	1					
ANR	2515776	Condition	"r_mem_is_zero ( mask , size )"	575:5:13104:13129	2515765	0	True				
ANR	2515777	CallExpression	"r_mem_is_zero ( mask , size )"		2515765	0					
ANR	2515778	Callee	r_mem_is_zero		2515765	0					
ANR	2515779	Identifier	r_mem_is_zero		2515765	0					
ANR	2515780	ArgumentList	mask		2515765	1					
ANR	2515781	Argument	mask		2515765	0					
ANR	2515782	Identifier	mask		2515765	0					
ANR	2515783	Argument	size		2515765	1					
ANR	2515784	Identifier	size		2515765	0					
ANR	2515785	CompoundStatement		4:33:56:56	2515765	1					
ANR	2515786	ExpressionStatement	"eprintf ( ""error: zero mask\\n"" )"	576:2:13136:13166	2515765	0	True				
ANR	2515787	CallExpression	"eprintf ( ""error: zero mask\\n"" )"		2515765	0					
ANR	2515788	Callee	eprintf		2515765	0					
ANR	2515789	Identifier	eprintf		2515765	0					
ANR	2515790	ArgumentList	"""error: zero mask\\n"""		2515765	1					
ANR	2515791	Argument	"""error: zero mask\\n"""		2515765	0					
ANR	2515792	PrimaryExpression	"""error: zero mask\\n"""		2515765	0					
ANR	2515793	ReturnStatement	return false ;	577:2:13170:13182	2515765	1	True				
ANR	2515794	Identifier	false		2515765	0					
ANR	2515795	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	580:1:13189:13223	2515765	2	True				
ANR	2515796	IdentifierDecl	* it = r_sign_item_new ( )		2515765	0					
ANR	2515797	IdentifierDeclType	RSignItem *		2515765	0					
ANR	2515798	Identifier	it		2515765	1					
ANR	2515799	AssignmentExpression	* it = r_sign_item_new ( )		2515765	2		=			
ANR	2515800	Identifier	it		2515765	0					
ANR	2515801	CallExpression	r_sign_item_new ( )		2515765	1					
ANR	2515802	Callee	r_sign_item_new		2515765	0					
ANR	2515803	Identifier	r_sign_item_new		2515765	0					
ANR	2515804	ArgumentList			2515765	1					
ANR	2515805	IfStatement	if ( ! it )		2515765	3					
ANR	2515806	Condition	! it	581:5:13230:13232	2515765	0	True				
ANR	2515807	UnaryOperationExpression	! it		2515765	0					
ANR	2515808	UnaryOperator	!		2515765	0					
ANR	2515809	Identifier	it		2515765	1					
ANR	2515810	CompoundStatement		10:10:159:159	2515765	1					
ANR	2515811	ReturnStatement	return false ;	582:2:13239:13251	2515765	0	True				
ANR	2515812	Identifier	false		2515765	0					
ANR	2515813	ExpressionStatement	it -> name = r_str_new ( name )	585:1:13258:13285	2515765	4	True				
ANR	2515814	AssignmentExpression	it -> name = r_str_new ( name )		2515765	0		=			
ANR	2515815	PtrMemberAccess	it -> name		2515765	0					
ANR	2515816	Identifier	it		2515765	0					
ANR	2515817	Identifier	name		2515765	1					
ANR	2515818	CallExpression	r_str_new ( name )		2515765	1					
ANR	2515819	Callee	r_str_new		2515765	0					
ANR	2515820	Identifier	r_str_new		2515765	0					
ANR	2515821	ArgumentList	name		2515765	1					
ANR	2515822	Argument	name		2515765	0					
ANR	2515823	Identifier	name		2515765	0					
ANR	2515824	IfStatement	if ( ! it -> name )		2515765	5					
ANR	2515825	Condition	! it -> name	586:5:13292:13300	2515765	0	True				
ANR	2515826	UnaryOperationExpression	! it -> name		2515765	0					
ANR	2515827	UnaryOperator	!		2515765	0					
ANR	2515828	PtrMemberAccess	it -> name		2515765	1					
ANR	2515829	Identifier	it		2515765	0					
ANR	2515830	Identifier	name		2515765	1					
ANR	2515831	CompoundStatement		15:16:227:227	2515765	1					
ANR	2515832	ExpressionStatement	free ( it )	587:2:13307:13316	2515765	0	True				
ANR	2515833	CallExpression	free ( it )		2515765	0					
ANR	2515834	Callee	free		2515765	0					
ANR	2515835	Identifier	free		2515765	0					
ANR	2515836	ArgumentList	it		2515765	1					
ANR	2515837	Argument	it		2515765	0					
ANR	2515838	Identifier	it		2515765	0					
ANR	2515839	ReturnStatement	return false ;	588:2:13320:13332	2515765	1	True				
ANR	2515840	Identifier	false		2515765	0					
ANR	2515841	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	590:1:13338:13384	2515765	6	True				
ANR	2515842	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		2515765	0		=			
ANR	2515843	PtrMemberAccess	it -> space		2515765	0					
ANR	2515844	Identifier	it		2515765	0					
ANR	2515845	Identifier	space		2515765	1					
ANR	2515846	CallExpression	r_spaces_current ( & a -> zign_spaces )		2515765	1					
ANR	2515847	Callee	r_spaces_current		2515765	0					
ANR	2515848	Identifier	r_spaces_current		2515765	0					
ANR	2515849	ArgumentList	& a -> zign_spaces		2515765	1					
ANR	2515850	Argument	& a -> zign_spaces		2515765	0					
ANR	2515851	UnaryOperationExpression	& a -> zign_spaces		2515765	0					
ANR	2515852	UnaryOperator	&		2515765	0					
ANR	2515853	PtrMemberAccess	a -> zign_spaces		2515765	1					
ANR	2515854	Identifier	a		2515765	0					
ANR	2515855	Identifier	zign_spaces		2515765	1					
ANR	2515856	ExpressionStatement	it -> bytes = R_NEW0 ( RSignBytes )	591:1:13387:13418	2515765	7	True				
ANR	2515857	AssignmentExpression	it -> bytes = R_NEW0 ( RSignBytes )		2515765	0		=			
ANR	2515858	PtrMemberAccess	it -> bytes		2515765	0					
ANR	2515859	Identifier	it		2515765	0					
ANR	2515860	Identifier	bytes		2515765	1					
ANR	2515861	CallExpression	R_NEW0 ( RSignBytes )		2515765	1					
ANR	2515862	Callee	R_NEW0		2515765	0					
ANR	2515863	Identifier	R_NEW0		2515765	0					
ANR	2515864	ArgumentList	RSignBytes		2515765	1					
ANR	2515865	Argument	RSignBytes		2515765	0					
ANR	2515866	Identifier	RSignBytes		2515765	0					
ANR	2515867	IfStatement	if ( ! it -> bytes )		2515765	8					
ANR	2515868	Condition	! it -> bytes	592:5:13425:13434	2515765	0	True				
ANR	2515869	UnaryOperationExpression	! it -> bytes		2515765	0					
ANR	2515870	UnaryOperator	!		2515765	0					
ANR	2515871	PtrMemberAccess	it -> bytes		2515765	1					
ANR	2515872	Identifier	it		2515765	0					
ANR	2515873	Identifier	bytes		2515765	1					
ANR	2515874	CompoundStatement		21:17:361:361	2515765	1					
ANR	2515875	GotoStatement	goto fail ;	593:2:13441:13450	2515765	0	True				
ANR	2515876	Identifier	fail		2515765	0					
ANR	2515877	ExpressionStatement	it -> bytes -> size = size	595:1:13456:13478	2515765	9	True				
ANR	2515878	AssignmentExpression	it -> bytes -> size = size		2515765	0		=			
ANR	2515879	PtrMemberAccess	it -> bytes -> size		2515765	0					
ANR	2515880	PtrMemberAccess	it -> bytes		2515765	0					
ANR	2515881	Identifier	it		2515765	0					
ANR	2515882	Identifier	bytes		2515765	1					
ANR	2515883	Identifier	size		2515765	1					
ANR	2515884	Identifier	size		2515765	1					
ANR	2515885	ExpressionStatement	it -> bytes -> bytes = malloc ( size )	596:1:13481:13513	2515765	10	True				
ANR	2515886	AssignmentExpression	it -> bytes -> bytes = malloc ( size )		2515765	0		=			
ANR	2515887	PtrMemberAccess	it -> bytes -> bytes		2515765	0					
ANR	2515888	PtrMemberAccess	it -> bytes		2515765	0					
ANR	2515889	Identifier	it		2515765	0					
ANR	2515890	Identifier	bytes		2515765	1					
ANR	2515891	Identifier	bytes		2515765	1					
ANR	2515892	CallExpression	malloc ( size )		2515765	1					
ANR	2515893	Callee	malloc		2515765	0					
ANR	2515894	Identifier	malloc		2515765	0					
ANR	2515895	ArgumentList	size		2515765	1					
ANR	2515896	Argument	size		2515765	0					
ANR	2515897	Identifier	size		2515765	0					
ANR	2515898	IfStatement	if ( ! it -> bytes -> bytes )		2515765	11					
ANR	2515899	Condition	! it -> bytes -> bytes	597:5:13520:13536	2515765	0	True				
ANR	2515900	UnaryOperationExpression	! it -> bytes -> bytes		2515765	0					
ANR	2515901	UnaryOperator	!		2515765	0					
ANR	2515902	PtrMemberAccess	it -> bytes -> bytes		2515765	1					
ANR	2515903	PtrMemberAccess	it -> bytes		2515765	0					
ANR	2515904	Identifier	it		2515765	0					
ANR	2515905	Identifier	bytes		2515765	1					
ANR	2515906	Identifier	bytes		2515765	1					
ANR	2515907	CompoundStatement		26:24:463:463	2515765	1					
ANR	2515908	GotoStatement	goto fail ;	598:2:13543:13552	2515765	0	True				
ANR	2515909	Identifier	fail		2515765	0					
ANR	2515910	ExpressionStatement	"memcpy ( it -> bytes -> bytes , bytes , size )"	600:1:13558:13596	2515765	12	True				
ANR	2515911	CallExpression	"memcpy ( it -> bytes -> bytes , bytes , size )"		2515765	0					
ANR	2515912	Callee	memcpy		2515765	0					
ANR	2515913	Identifier	memcpy		2515765	0					
ANR	2515914	ArgumentList	it -> bytes -> bytes		2515765	1					
ANR	2515915	Argument	it -> bytes -> bytes		2515765	0					
ANR	2515916	PtrMemberAccess	it -> bytes -> bytes		2515765	0					
ANR	2515917	PtrMemberAccess	it -> bytes		2515765	0					
ANR	2515918	Identifier	it		2515765	0					
ANR	2515919	Identifier	bytes		2515765	1					
ANR	2515920	Identifier	bytes		2515765	1					
ANR	2515921	Argument	bytes		2515765	1					
ANR	2515922	Identifier	bytes		2515765	0					
ANR	2515923	Argument	size		2515765	2					
ANR	2515924	Identifier	size		2515765	0					
ANR	2515925	ExpressionStatement	it -> bytes -> mask = malloc ( size )	601:1:13599:13630	2515765	13	True				
ANR	2515926	AssignmentExpression	it -> bytes -> mask = malloc ( size )		2515765	0		=			
ANR	2515927	PtrMemberAccess	it -> bytes -> mask		2515765	0					
ANR	2515928	PtrMemberAccess	it -> bytes		2515765	0					
ANR	2515929	Identifier	it		2515765	0					
ANR	2515930	Identifier	bytes		2515765	1					
ANR	2515931	Identifier	mask		2515765	1					
ANR	2515932	CallExpression	malloc ( size )		2515765	1					
ANR	2515933	Callee	malloc		2515765	0					
ANR	2515934	Identifier	malloc		2515765	0					
ANR	2515935	ArgumentList	size		2515765	1					
ANR	2515936	Argument	size		2515765	0					
ANR	2515937	Identifier	size		2515765	0					
ANR	2515938	IfStatement	if ( ! it -> bytes -> mask )		2515765	14					
ANR	2515939	Condition	! it -> bytes -> mask	602:5:13637:13652	2515765	0	True				
ANR	2515940	UnaryOperationExpression	! it -> bytes -> mask		2515765	0					
ANR	2515941	UnaryOperator	!		2515765	0					
ANR	2515942	PtrMemberAccess	it -> bytes -> mask		2515765	1					
ANR	2515943	PtrMemberAccess	it -> bytes		2515765	0					
ANR	2515944	Identifier	it		2515765	0					
ANR	2515945	Identifier	bytes		2515765	1					
ANR	2515946	Identifier	mask		2515765	1					
ANR	2515947	CompoundStatement		31:23:579:579	2515765	1					
ANR	2515948	GotoStatement	goto fail ;	603:2:13659:13668	2515765	0	True				
ANR	2515949	Identifier	fail		2515765	0					
ANR	2515950	ExpressionStatement	"memcpy ( it -> bytes -> mask , mask , size )"	605:1:13674:13710	2515765	15	True				
ANR	2515951	CallExpression	"memcpy ( it -> bytes -> mask , mask , size )"		2515765	0					
ANR	2515952	Callee	memcpy		2515765	0					
ANR	2515953	Identifier	memcpy		2515765	0					
ANR	2515954	ArgumentList	it -> bytes -> mask		2515765	1					
ANR	2515955	Argument	it -> bytes -> mask		2515765	0					
ANR	2515956	PtrMemberAccess	it -> bytes -> mask		2515765	0					
ANR	2515957	PtrMemberAccess	it -> bytes		2515765	0					
ANR	2515958	Identifier	it		2515765	0					
ANR	2515959	Identifier	bytes		2515765	1					
ANR	2515960	Identifier	mask		2515765	1					
ANR	2515961	Argument	mask		2515765	1					
ANR	2515962	Identifier	mask		2515765	0					
ANR	2515963	Argument	size		2515765	2					
ANR	2515964	Identifier	size		2515765	0					
ANR	2515965	ExpressionStatement	"retval = addItem ( a , it )"	606:1:13713:13737	2515765	16	True				
ANR	2515966	AssignmentExpression	"retval = addItem ( a , it )"		2515765	0		=			
ANR	2515967	Identifier	retval		2515765	0					
ANR	2515968	CallExpression	"addItem ( a , it )"		2515765	1					
ANR	2515969	Callee	addItem		2515765	0					
ANR	2515970	Identifier	addItem		2515765	0					
ANR	2515971	ArgumentList	a		2515765	1					
ANR	2515972	Argument	a		2515765	0					
ANR	2515973	Identifier	a		2515765	0					
ANR	2515974	Argument	it		2515765	1					
ANR	2515975	Identifier	it		2515765	0					
ANR	2515976	ExpressionStatement	r_sign_item_free ( it )	607:1:13740:13761	2515765	17	True				
ANR	2515977	CallExpression	r_sign_item_free ( it )		2515765	0					
ANR	2515978	Callee	r_sign_item_free		2515765	0					
ANR	2515979	Identifier	r_sign_item_free		2515765	0					
ANR	2515980	ArgumentList	it		2515765	1					
ANR	2515981	Argument	it		2515765	0					
ANR	2515982	Identifier	it		2515765	0					
ANR	2515983	ReturnStatement	return retval ;	608:1:13764:13777	2515765	18	True				
ANR	2515984	Identifier	retval		2515765	0					
ANR	2515985	Label	fail :	609:0:13779:13783	2515765	19	True				
ANR	2515986	Identifier	fail		2515765	0					
ANR	2515987	IfStatement	if ( it )		2515765	20					
ANR	2515988	Condition	it	610:5:13790:13791	2515765	0	True				
ANR	2515989	Identifier	it		2515765	0					
ANR	2515990	CompoundStatement		39:9:718:718	2515765	1					
ANR	2515991	ExpressionStatement	free ( it -> name )	611:2:13798:13813	2515765	0	True				
ANR	2515992	CallExpression	free ( it -> name )		2515765	0					
ANR	2515993	Callee	free		2515765	0					
ANR	2515994	Identifier	free		2515765	0					
ANR	2515995	ArgumentList	it -> name		2515765	1					
ANR	2515996	Argument	it -> name		2515765	0					
ANR	2515997	PtrMemberAccess	it -> name		2515765	0					
ANR	2515998	Identifier	it		2515765	0					
ANR	2515999	Identifier	name		2515765	1					
ANR	2516000	IfStatement	if ( it -> bytes )		2515765	1					
ANR	2516001	Condition	it -> bytes	612:6:13821:13829	2515765	0	True				
ANR	2516002	PtrMemberAccess	it -> bytes		2515765	0					
ANR	2516003	Identifier	it		2515765	0					
ANR	2516004	Identifier	bytes		2515765	1					
ANR	2516005	CompoundStatement		41:17:756:756	2515765	1					
ANR	2516006	ExpressionStatement	free ( it -> bytes -> bytes )	613:3:13837:13860	2515765	0	True				
ANR	2516007	CallExpression	free ( it -> bytes -> bytes )		2515765	0					
ANR	2516008	Callee	free		2515765	0					
ANR	2516009	Identifier	free		2515765	0					
ANR	2516010	ArgumentList	it -> bytes -> bytes		2515765	1					
ANR	2516011	Argument	it -> bytes -> bytes		2515765	0					
ANR	2516012	PtrMemberAccess	it -> bytes -> bytes		2515765	0					
ANR	2516013	PtrMemberAccess	it -> bytes		2515765	0					
ANR	2516014	Identifier	it		2515765	0					
ANR	2516015	Identifier	bytes		2515765	1					
ANR	2516016	Identifier	bytes		2515765	1					
ANR	2516017	ExpressionStatement	free ( it -> bytes )	614:3:13865:13881	2515765	1	True				
ANR	2516018	CallExpression	free ( it -> bytes )		2515765	0					
ANR	2516019	Callee	free		2515765	0					
ANR	2516020	Identifier	free		2515765	0					
ANR	2516021	ArgumentList	it -> bytes		2515765	1					
ANR	2516022	Argument	it -> bytes		2515765	0					
ANR	2516023	PtrMemberAccess	it -> bytes		2515765	0					
ANR	2516024	Identifier	it		2515765	0					
ANR	2516025	Identifier	bytes		2515765	1					
ANR	2516026	ExpressionStatement	free ( it )	617:1:13891:13900	2515765	21	True				
ANR	2516027	CallExpression	free ( it )		2515765	0					
ANR	2516028	Callee	free		2515765	0					
ANR	2516029	Identifier	free		2515765	0					
ANR	2516030	ArgumentList	it		2515765	1					
ANR	2516031	Argument	it		2515765	0					
ANR	2516032	Identifier	it		2515765	0					
ANR	2516033	ReturnStatement	return false ;	618:1:13903:13915	2515765	22	True				
ANR	2516034	Identifier	false		2515765	0					
ANR	2516035	ReturnType	static bool		2515765	1					
ANR	2516036	Identifier	addBytes		2515765	2					
ANR	2516037	ParameterList	"RAnal * a , const char * name , ut64 size , const ut8 * bytes , const ut8 * mask"		2515765	3					
ANR	2516038	Parameter	RAnal * a	572:21:13001:13008	2515765	0	True				
ANR	2516039	ParameterType	RAnal *		2515765	0					
ANR	2516040	Identifier	a		2515765	1					
ANR	2516041	Parameter	const char * name	572:31:13011:13026	2515765	1	True				
ANR	2516042	ParameterType	const char *		2515765	0					
ANR	2516043	Identifier	name		2515765	1					
ANR	2516044	Parameter	ut64 size	572:49:13029:13037	2515765	2	True				
ANR	2516045	ParameterType	ut64		2515765	0					
ANR	2516046	Identifier	size		2515765	1					
ANR	2516047	Parameter	const ut8 * bytes	572:60:13040:13055	2515765	3	True				
ANR	2516048	ParameterType	const ut8 *		2515765	0					
ANR	2516049	Identifier	bytes		2515765	1					
ANR	2516050	Parameter	const ut8 * mask	572:78:13058:13072	2515765	4	True				
ANR	2516051	ParameterType	const ut8 *		2515765	0					
ANR	2516052	Identifier	mask		2515765	1					
ANR	2516053	CFGEntryNode	ENTRY		2515765		True				
ANR	2516054	CFGExitNode	EXIT		2515765		True				
ANR	2516055	Symbol	r_sign_item_new		2515765						
ANR	2516056	Symbol	& a -> zign_spaces		2515765						
ANR	2516057	Symbol	addItem		2515765						
ANR	2516058	Symbol	* * it		2515765						
ANR	2516059	Symbol	it -> bytes -> size		2515765						
ANR	2516060	Symbol	r_mem_is_zero		2515765						
ANR	2516061	Symbol	r_spaces_current		2515765						
ANR	2516062	Symbol	r_str_new		2515765						
ANR	2516063	Symbol	mask		2515765						
ANR	2516064	Symbol	a		2515765						
ANR	2516065	Symbol	malloc		2515765						
ANR	2516066	Symbol	it -> bytes		2515765						
ANR	2516067	Symbol	it -> name		2515765						
ANR	2516068	Symbol	false		2515765						
ANR	2516069	Symbol	it		2515765						
ANR	2516070	Symbol	retval		2515765						
ANR	2516071	Symbol	it -> space		2515765						
ANR	2516072	Symbol	R_NEW0		2515765						
ANR	2516073	Symbol	* it		2515765						
ANR	2516074	Symbol	it -> bytes -> bytes		2515765						
ANR	2516075	Symbol	size		2515765						
ANR	2516076	Symbol	bytes		2515765						
ANR	2516077	Symbol	name		2515765						
ANR	2516078	Symbol	true		2515765						
ANR	2516079	Symbol	* it -> bytes		2515765						
ANR	2516080	Symbol	it -> bytes -> mask		2515765						
ANR	2516081	Symbol	RSignBytes		2515765						
ANR	2516082	Function	r_sign_add_hash	621:0:13920:14399							
ANR	2516083	FunctionDef	"r_sign_add_hash (RAnal * a , const char * name , int type , const char * val , int len)"		2516082	0					
ANR	2516084	CompoundStatement		621:91:14011:14399	2516082	0					
ANR	2516085	ExpressionStatement	"r_return_val_if_fail ( a && name && type && val && len > 0 , false )"	622:1:14014:14079	2516082	0	True				
ANR	2516086	CallExpression	"r_return_val_if_fail ( a && name && type && val && len > 0 , false )"		2516082	0					
ANR	2516087	Callee	r_return_val_if_fail		2516082	0					
ANR	2516088	Identifier	r_return_val_if_fail		2516082	0					
ANR	2516089	ArgumentList	a && name && type && val && len > 0		2516082	1					
ANR	2516090	Argument	a && name && type && val && len > 0		2516082	0					
ANR	2516091	AndExpression	a && name && type && val && len > 0		2516082	0		&&			
ANR	2516092	Identifier	a		2516082	0					
ANR	2516093	AndExpression	name && type && val && len > 0		2516082	1		&&			
ANR	2516094	Identifier	name		2516082	0					
ANR	2516095	AndExpression	type && val && len > 0		2516082	1		&&			
ANR	2516096	Identifier	type		2516082	0					
ANR	2516097	AndExpression	val && len > 0		2516082	1		&&			
ANR	2516098	Identifier	val		2516082	0					
ANR	2516099	RelationalExpression	len > 0		2516082	1		>			
ANR	2516100	Identifier	len		2516082	0					
ANR	2516101	PrimaryExpression	0		2516082	1					
ANR	2516102	Argument	false		2516082	1					
ANR	2516103	Identifier	false		2516082	0					
ANR	2516104	IfStatement	if ( type != R_SIGN_BBHASH )		2516082	1					
ANR	2516105	Condition	type != R_SIGN_BBHASH	623:5:14086:14106	2516082	0	True				
ANR	2516106	EqualityExpression	type != R_SIGN_BBHASH		2516082	0		!=			
ANR	2516107	Identifier	type		2516082	0					
ANR	2516108	Identifier	R_SIGN_BBHASH		2516082	1					
ANR	2516109	CompoundStatement		3:28:97:97	2516082	1					
ANR	2516110	ExpressionStatement	"eprintf ( ""error: hash type unknown"" )"	624:2:14113:14149	2516082	0	True				
ANR	2516111	CallExpression	"eprintf ( ""error: hash type unknown"" )"		2516082	0					
ANR	2516112	Callee	eprintf		2516082	0					
ANR	2516113	Identifier	eprintf		2516082	0					
ANR	2516114	ArgumentList	"""error: hash type unknown"""		2516082	1					
ANR	2516115	Argument	"""error: hash type unknown"""		2516082	0					
ANR	2516116	PrimaryExpression	"""error: hash type unknown"""		2516082	0					
ANR	2516117	ReturnStatement	return false ;	625:2:14153:14165	2516082	1	True				
ANR	2516118	Identifier	false		2516082	0					
ANR	2516119	IdentifierDeclStatement	int digestsize = r_hash_size ( R_ZIGN_HASH ) * 2 ;	627:1:14171:14217	2516082	2	True				
ANR	2516120	IdentifierDecl	digestsize = r_hash_size ( R_ZIGN_HASH ) * 2		2516082	0					
ANR	2516121	IdentifierDeclType	int		2516082	0					
ANR	2516122	Identifier	digestsize		2516082	1					
ANR	2516123	AssignmentExpression	digestsize = r_hash_size ( R_ZIGN_HASH ) * 2		2516082	2		=			
ANR	2516124	Identifier	digestsize		2516082	0					
ANR	2516125	MultiplicativeExpression	r_hash_size ( R_ZIGN_HASH ) * 2		2516082	1		*			
ANR	2516126	CallExpression	r_hash_size ( R_ZIGN_HASH )		2516082	0					
ANR	2516127	Callee	r_hash_size		2516082	0					
ANR	2516128	Identifier	r_hash_size		2516082	0					
ANR	2516129	ArgumentList	R_ZIGN_HASH		2516082	1					
ANR	2516130	Argument	R_ZIGN_HASH		2516082	0					
ANR	2516131	Identifier	R_ZIGN_HASH		2516082	0					
ANR	2516132	PrimaryExpression	2		2516082	1					
ANR	2516133	IfStatement	if ( len != digestsize )		2516082	3					
ANR	2516134	Condition	len != digestsize	628:5:14224:14240	2516082	0	True				
ANR	2516135	EqualityExpression	len != digestsize		2516082	0		!=			
ANR	2516136	Identifier	len		2516082	0					
ANR	2516137	Identifier	digestsize		2516082	1					
ANR	2516138	CompoundStatement		8:24:231:231	2516082	1					
ANR	2516139	ExpressionStatement	"eprintf ( ""error: invalid hash size: %d (%s digest size is %d)\\n"" , len , ZIGN_HASH , digestsize )"	629:2:14247:14340	2516082	0	True				
ANR	2516140	CallExpression	"eprintf ( ""error: invalid hash size: %d (%s digest size is %d)\\n"" , len , ZIGN_HASH , digestsize )"		2516082	0					
ANR	2516141	Callee	eprintf		2516082	0					
ANR	2516142	Identifier	eprintf		2516082	0					
ANR	2516143	ArgumentList	"""error: invalid hash size: %d (%s digest size is %d)\\n"""		2516082	1					
ANR	2516144	Argument	"""error: invalid hash size: %d (%s digest size is %d)\\n"""		2516082	0					
ANR	2516145	PrimaryExpression	"""error: invalid hash size: %d (%s digest size is %d)\\n"""		2516082	0					
ANR	2516146	Argument	len		2516082	1					
ANR	2516147	Identifier	len		2516082	0					
ANR	2516148	Argument	ZIGN_HASH		2516082	2					
ANR	2516149	Identifier	ZIGN_HASH		2516082	0					
ANR	2516150	Argument	digestsize		2516082	3					
ANR	2516151	Identifier	digestsize		2516082	0					
ANR	2516152	ReturnStatement	return false ;	630:2:14344:14356	2516082	1	True				
ANR	2516153	Identifier	false		2516082	0					
ANR	2516154	ReturnStatement	"return addHash ( a , name , type , val ) ;"	632:1:14362:14397	2516082	4	True				
ANR	2516155	CallExpression	"addHash ( a , name , type , val )"		2516082	0					
ANR	2516156	Callee	addHash		2516082	0					
ANR	2516157	Identifier	addHash		2516082	0					
ANR	2516158	ArgumentList	a		2516082	1					
ANR	2516159	Argument	a		2516082	0					
ANR	2516160	Identifier	a		2516082	0					
ANR	2516161	Argument	name		2516082	1					
ANR	2516162	Identifier	name		2516082	0					
ANR	2516163	Argument	type		2516082	2					
ANR	2516164	Identifier	type		2516082	0					
ANR	2516165	Argument	val		2516082	3					
ANR	2516166	Identifier	val		2516082	0					
ANR	2516167	ReturnType	R_API bool		2516082	1					
ANR	2516168	Identifier	r_sign_add_hash		2516082	2					
ANR	2516169	ParameterList	"RAnal * a , const char * name , int type , const char * val , int len"		2516082	3					
ANR	2516170	Parameter	RAnal * a	621:27:13947:13954	2516082	0	True				
ANR	2516171	ParameterType	RAnal *		2516082	0					
ANR	2516172	Identifier	a		2516082	1					
ANR	2516173	Parameter	const char * name	621:37:13957:13972	2516082	1	True				
ANR	2516174	ParameterType	const char *		2516082	0					
ANR	2516175	Identifier	name		2516082	1					
ANR	2516176	Parameter	int type	621:55:13975:13982	2516082	2	True				
ANR	2516177	ParameterType	int		2516082	0					
ANR	2516178	Identifier	type		2516082	1					
ANR	2516179	Parameter	const char * val	621:65:13985:13999	2516082	3	True				
ANR	2516180	ParameterType	const char *		2516082	0					
ANR	2516181	Identifier	val		2516082	1					
ANR	2516182	Parameter	int len	621:82:14002:14008	2516082	4	True				
ANR	2516183	ParameterType	int		2516082	0					
ANR	2516184	Identifier	len		2516082	1					
ANR	2516185	CFGEntryNode	ENTRY		2516082		True				
ANR	2516186	CFGExitNode	EXIT		2516082		True				
ANR	2516187	Symbol	val		2516082						
ANR	2516188	Symbol	digestsize		2516082						
ANR	2516189	Symbol	a		2516082						
ANR	2516190	Symbol	ZIGN_HASH		2516082						
ANR	2516191	Symbol	len		2516082						
ANR	2516192	Symbol	R_SIGN_BBHASH		2516082						
ANR	2516193	Symbol	name		2516082						
ANR	2516194	Symbol	false		2516082						
ANR	2516195	Symbol	r_hash_size		2516082						
ANR	2516196	Symbol	addHash		2516082						
ANR	2516197	Symbol	type		2516082						
ANR	2516198	Symbol	R_ZIGN_HASH		2516082						
ANR	2516199	Function	r_sign_add_bb_hash	635:0:14402:14565							
ANR	2516200	FunctionDef	"r_sign_add_bb_hash (RAnal * a , RAnalFunction * fcn , const char * name)"		2516199	0					
ANR	2516201	CompoundStatement		635:78:14480:14565	2516199	0					
ANR	2516202	ExpressionStatement	"r_return_val_if_fail ( a && fcn && name , false )"	636:1:14483:14529	2516199	0	True				
ANR	2516203	CallExpression	"r_return_val_if_fail ( a && fcn && name , false )"		2516199	0					
ANR	2516204	Callee	r_return_val_if_fail		2516199	0					
ANR	2516205	Identifier	r_return_val_if_fail		2516199	0					
ANR	2516206	ArgumentList	a && fcn && name		2516199	1					
ANR	2516207	Argument	a && fcn && name		2516199	0					
ANR	2516208	AndExpression	a && fcn && name		2516199	0		&&			
ANR	2516209	Identifier	a		2516199	0					
ANR	2516210	AndExpression	fcn && name		2516199	1		&&			
ANR	2516211	Identifier	fcn		2516199	0					
ANR	2516212	Identifier	name		2516199	1					
ANR	2516213	Argument	false		2516199	1					
ANR	2516214	Identifier	false		2516199	0					
ANR	2516215	ReturnStatement	"return addBBHash ( a , fcn , name ) ;"	637:1:14532:14563	2516199	1	True				
ANR	2516216	CallExpression	"addBBHash ( a , fcn , name )"		2516199	0					
ANR	2516217	Callee	addBBHash		2516199	0					
ANR	2516218	Identifier	addBBHash		2516199	0					
ANR	2516219	ArgumentList	a		2516199	1					
ANR	2516220	Argument	a		2516199	0					
ANR	2516221	Identifier	a		2516199	0					
ANR	2516222	Argument	fcn		2516199	1					
ANR	2516223	Identifier	fcn		2516199	0					
ANR	2516224	Argument	name		2516199	2					
ANR	2516225	Identifier	name		2516199	0					
ANR	2516226	ReturnType	R_API bool		2516199	1					
ANR	2516227	Identifier	r_sign_add_bb_hash		2516199	2					
ANR	2516228	ParameterList	"RAnal * a , RAnalFunction * fcn , const char * name"		2516199	3					
ANR	2516229	Parameter	RAnal * a	635:30:14432:14439	2516199	0	True				
ANR	2516230	ParameterType	RAnal *		2516199	0					
ANR	2516231	Identifier	a		2516199	1					
ANR	2516232	Parameter	RAnalFunction * fcn	635:40:14442:14459	2516199	1	True				
ANR	2516233	ParameterType	RAnalFunction *		2516199	0					
ANR	2516234	Identifier	fcn		2516199	1					
ANR	2516235	Parameter	const char * name	635:60:14462:14477	2516199	2	True				
ANR	2516236	ParameterType	const char *		2516199	0					
ANR	2516237	Identifier	name		2516199	1					
ANR	2516238	CFGEntryNode	ENTRY		2516199		True				
ANR	2516239	CFGExitNode	EXIT		2516199		True				
ANR	2516240	Symbol	fcn		2516199						
ANR	2516241	Symbol	a		2516199						
ANR	2516242	Symbol	name		2516199						
ANR	2516243	Symbol	false		2516199						
ANR	2516244	Symbol	addBBHash		2516199						
ANR	2516245	Function	r_sign_add_bytes	640:0:14568:14790							
ANR	2516246	FunctionDef	"r_sign_add_bytes (RAnal * a , const char * name , ut64 size , const ut8 * bytes , const ut8 * mask)"		2516245	0					
ANR	2516247	CompoundStatement		640:102:14670:14790	2516245	0					
ANR	2516248	ExpressionStatement	"r_return_val_if_fail ( a && name && size > 0 && bytes && mask , false )"	641:1:14673:14741	2516245	0	True				
ANR	2516249	CallExpression	"r_return_val_if_fail ( a && name && size > 0 && bytes && mask , false )"		2516245	0					
ANR	2516250	Callee	r_return_val_if_fail		2516245	0					
ANR	2516251	Identifier	r_return_val_if_fail		2516245	0					
ANR	2516252	ArgumentList	a && name && size > 0 && bytes && mask		2516245	1					
ANR	2516253	Argument	a && name && size > 0 && bytes && mask		2516245	0					
ANR	2516254	AndExpression	a && name && size > 0 && bytes && mask		2516245	0		&&			
ANR	2516255	Identifier	a		2516245	0					
ANR	2516256	AndExpression	name && size > 0 && bytes && mask		2516245	1		&&			
ANR	2516257	Identifier	name		2516245	0					
ANR	2516258	AndExpression	size > 0 && bytes && mask		2516245	1		&&			
ANR	2516259	RelationalExpression	size > 0		2516245	0		>			
ANR	2516260	Identifier	size		2516245	0					
ANR	2516261	PrimaryExpression	0		2516245	1					
ANR	2516262	AndExpression	bytes && mask		2516245	1		&&			
ANR	2516263	Identifier	bytes		2516245	0					
ANR	2516264	Identifier	mask		2516245	1					
ANR	2516265	Argument	false		2516245	1					
ANR	2516266	Identifier	false		2516245	0					
ANR	2516267	ReturnStatement	"return addBytes ( a , name , size , bytes , mask ) ;"	642:1:14744:14788	2516245	1	True				
ANR	2516268	CallExpression	"addBytes ( a , name , size , bytes , mask )"		2516245	0					
ANR	2516269	Callee	addBytes		2516245	0					
ANR	2516270	Identifier	addBytes		2516245	0					
ANR	2516271	ArgumentList	a		2516245	1					
ANR	2516272	Argument	a		2516245	0					
ANR	2516273	Identifier	a		2516245	0					
ANR	2516274	Argument	name		2516245	1					
ANR	2516275	Identifier	name		2516245	0					
ANR	2516276	Argument	size		2516245	2					
ANR	2516277	Identifier	size		2516245	0					
ANR	2516278	Argument	bytes		2516245	3					
ANR	2516279	Identifier	bytes		2516245	0					
ANR	2516280	Argument	mask		2516245	4					
ANR	2516281	Identifier	mask		2516245	0					
ANR	2516282	ReturnType	R_API bool		2516245	1					
ANR	2516283	Identifier	r_sign_add_bytes		2516245	2					
ANR	2516284	ParameterList	"RAnal * a , const char * name , ut64 size , const ut8 * bytes , const ut8 * mask"		2516245	3					
ANR	2516285	Parameter	RAnal * a	640:28:14596:14603	2516245	0	True				
ANR	2516286	ParameterType	RAnal *		2516245	0					
ANR	2516287	Identifier	a		2516245	1					
ANR	2516288	Parameter	const char * name	640:38:14606:14621	2516245	1	True				
ANR	2516289	ParameterType	const char *		2516245	0					
ANR	2516290	Identifier	name		2516245	1					
ANR	2516291	Parameter	ut64 size	640:56:14624:14632	2516245	2	True				
ANR	2516292	ParameterType	ut64		2516245	0					
ANR	2516293	Identifier	size		2516245	1					
ANR	2516294	Parameter	const ut8 * bytes	640:67:14635:14650	2516245	3	True				
ANR	2516295	ParameterType	const ut8 *		2516245	0					
ANR	2516296	Identifier	bytes		2516245	1					
ANR	2516297	Parameter	const ut8 * mask	640:85:14653:14667	2516245	4	True				
ANR	2516298	ParameterType	const ut8 *		2516245	0					
ANR	2516299	Identifier	mask		2516245	1					
ANR	2516300	CFGEntryNode	ENTRY		2516245		True				
ANR	2516301	CFGExitNode	EXIT		2516245		True				
ANR	2516302	Symbol	a		2516245						
ANR	2516303	Symbol	size		2516245						
ANR	2516304	Symbol	bytes		2516245						
ANR	2516305	Symbol	name		2516245						
ANR	2516306	Symbol	false		2516245						
ANR	2516307	Symbol	addBytes		2516245						
ANR	2516308	Symbol	mask		2516245						
ANR	2516309	Function	r_sign_add_anal	645:0:14793:15117							
ANR	2516310	FunctionDef	"r_sign_add_anal (RAnal * a , const char * name , ut64 size , const ut8 * bytes , ut64 at)"		2516309	0					
ANR	2516311	CompoundStatement		645:93:14886:15117	2516309	0					
ANR	2516312	IdentifierDeclStatement	bool retval = false ;	646:1:14889:14908	2516309	0	True				
ANR	2516313	IdentifierDecl	retval = false		2516309	0					
ANR	2516314	IdentifierDeclType	bool		2516309	0					
ANR	2516315	Identifier	retval		2516309	1					
ANR	2516316	AssignmentExpression	retval = false		2516309	2		=			
ANR	2516317	Identifier	false		2516309	0					
ANR	2516318	Identifier	false		2516309	1					
ANR	2516319	ExpressionStatement	"r_return_val_if_fail ( a && name && size > 0 && bytes , false )"	647:1:14911:14971	2516309	1	True				
ANR	2516320	CallExpression	"r_return_val_if_fail ( a && name && size > 0 && bytes , false )"		2516309	0					
ANR	2516321	Callee	r_return_val_if_fail		2516309	0					
ANR	2516322	Identifier	r_return_val_if_fail		2516309	0					
ANR	2516323	ArgumentList	a && name && size > 0 && bytes		2516309	1					
ANR	2516324	Argument	a && name && size > 0 && bytes		2516309	0					
ANR	2516325	AndExpression	a && name && size > 0 && bytes		2516309	0		&&			
ANR	2516326	Identifier	a		2516309	0					
ANR	2516327	AndExpression	name && size > 0 && bytes		2516309	1		&&			
ANR	2516328	Identifier	name		2516309	0					
ANR	2516329	AndExpression	size > 0 && bytes		2516309	1		&&			
ANR	2516330	RelationalExpression	size > 0		2516309	0		>			
ANR	2516331	Identifier	size		2516309	0					
ANR	2516332	PrimaryExpression	0		2516309	1					
ANR	2516333	Identifier	bytes		2516309	1					
ANR	2516334	Argument	false		2516309	1					
ANR	2516335	Identifier	false		2516309	0					
ANR	2516336	IdentifierDeclStatement	"ut8 * mask = r_anal_mask ( a , size , bytes , at ) ;"	648:1:14974:15018	2516309	2	True				
ANR	2516337	IdentifierDecl	"* mask = r_anal_mask ( a , size , bytes , at )"		2516309	0					
ANR	2516338	IdentifierDeclType	ut8 *		2516309	0					
ANR	2516339	Identifier	mask		2516309	1					
ANR	2516340	AssignmentExpression	"* mask = r_anal_mask ( a , size , bytes , at )"		2516309	2		=			
ANR	2516341	Identifier	mask		2516309	0					
ANR	2516342	CallExpression	"r_anal_mask ( a , size , bytes , at )"		2516309	1					
ANR	2516343	Callee	r_anal_mask		2516309	0					
ANR	2516344	Identifier	r_anal_mask		2516309	0					
ANR	2516345	ArgumentList	a		2516309	1					
ANR	2516346	Argument	a		2516309	0					
ANR	2516347	Identifier	a		2516309	0					
ANR	2516348	Argument	size		2516309	1					
ANR	2516349	Identifier	size		2516309	0					
ANR	2516350	Argument	bytes		2516309	2					
ANR	2516351	Identifier	bytes		2516309	0					
ANR	2516352	Argument	at		2516309	3					
ANR	2516353	Identifier	at		2516309	0					
ANR	2516354	IfStatement	if ( mask )		2516309	3					
ANR	2516355	Condition	mask	649:5:15025:15028	2516309	0	True				
ANR	2516356	Identifier	mask		2516309	0					
ANR	2516357	CompoundStatement		5:11:144:144	2516309	1					
ANR	2516358	ExpressionStatement	"retval = addBytes ( a , name , size , bytes , mask )"	650:2:15035:15081	2516309	0	True				
ANR	2516359	AssignmentExpression	"retval = addBytes ( a , name , size , bytes , mask )"		2516309	0		=			
ANR	2516360	Identifier	retval		2516309	0					
ANR	2516361	CallExpression	"addBytes ( a , name , size , bytes , mask )"		2516309	1					
ANR	2516362	Callee	addBytes		2516309	0					
ANR	2516363	Identifier	addBytes		2516309	0					
ANR	2516364	ArgumentList	a		2516309	1					
ANR	2516365	Argument	a		2516309	0					
ANR	2516366	Identifier	a		2516309	0					
ANR	2516367	Argument	name		2516309	1					
ANR	2516368	Identifier	name		2516309	0					
ANR	2516369	Argument	size		2516309	2					
ANR	2516370	Identifier	size		2516309	0					
ANR	2516371	Argument	bytes		2516309	3					
ANR	2516372	Identifier	bytes		2516309	0					
ANR	2516373	Argument	mask		2516309	4					
ANR	2516374	Identifier	mask		2516309	0					
ANR	2516375	ExpressionStatement	free ( mask )	651:2:15085:15096	2516309	1	True				
ANR	2516376	CallExpression	free ( mask )		2516309	0					
ANR	2516377	Callee	free		2516309	0					
ANR	2516378	Identifier	free		2516309	0					
ANR	2516379	ArgumentList	mask		2516309	1					
ANR	2516380	Argument	mask		2516309	0					
ANR	2516381	Identifier	mask		2516309	0					
ANR	2516382	ReturnStatement	return retval ;	653:1:15102:15115	2516309	4	True				
ANR	2516383	Identifier	retval		2516309	0					
ANR	2516384	ReturnType	R_API bool		2516309	1					
ANR	2516385	Identifier	r_sign_add_anal		2516309	2					
ANR	2516386	ParameterList	"RAnal * a , const char * name , ut64 size , const ut8 * bytes , ut64 at"		2516309	3					
ANR	2516387	Parameter	RAnal * a	645:27:14820:14827	2516309	0	True				
ANR	2516388	ParameterType	RAnal *		2516309	0					
ANR	2516389	Identifier	a		2516309	1					
ANR	2516390	Parameter	const char * name	645:37:14830:14845	2516309	1	True				
ANR	2516391	ParameterType	const char *		2516309	0					
ANR	2516392	Identifier	name		2516309	1					
ANR	2516393	Parameter	ut64 size	645:55:14848:14856	2516309	2	True				
ANR	2516394	ParameterType	ut64		2516309	0					
ANR	2516395	Identifier	size		2516309	1					
ANR	2516396	Parameter	const ut8 * bytes	645:66:14859:14874	2516309	3	True				
ANR	2516397	ParameterType	const ut8 *		2516309	0					
ANR	2516398	Identifier	bytes		2516309	1					
ANR	2516399	Parameter	ut64 at	645:84:14877:14883	2516309	4	True				
ANR	2516400	ParameterType	ut64		2516309	0					
ANR	2516401	Identifier	at		2516309	1					
ANR	2516402	CFGEntryNode	ENTRY		2516309		True				
ANR	2516403	CFGExitNode	EXIT		2516309		True				
ANR	2516404	Symbol	a		2516309						
ANR	2516405	Symbol	at		2516309						
ANR	2516406	Symbol	size		2516309						
ANR	2516407	Symbol	bytes		2516309						
ANR	2516408	Symbol	name		2516309						
ANR	2516409	Symbol	false		2516309						
ANR	2516410	Symbol	addBytes		2516309						
ANR	2516411	Symbol	r_anal_mask		2516309						
ANR	2516412	Symbol	retval		2516309						
ANR	2516413	Symbol	mask		2516309						
ANR	2516414	Function	r_sign_add_graph	656:0:15120:15646							
ANR	2516415	FunctionDef	"r_sign_add_graph (RAnal * a , const char * name , RSignGraph graph)"		2516414	0					
ANR	2516416	CompoundStatement		656:74:15194:15646	2516414	0					
ANR	2516417	IdentifierDeclStatement	bool retval = true ;	657:1:15197:15215	2516414	0	True				
ANR	2516418	IdentifierDecl	retval = true		2516414	0					
ANR	2516419	IdentifierDeclType	bool		2516414	0					
ANR	2516420	Identifier	retval		2516414	1					
ANR	2516421	AssignmentExpression	retval = true		2516414	2		=			
ANR	2516422	Identifier	true		2516414	0					
ANR	2516423	Identifier	true		2516414	1					
ANR	2516424	IfStatement	if ( ! a || ! name )		2516414	1					
ANR	2516425	Condition	! a || ! name	658:5:15222:15232	2516414	0	True				
ANR	2516426	OrExpression	! a || ! name		2516414	0		||			
ANR	2516427	UnaryOperationExpression	! a		2516414	0					
ANR	2516428	UnaryOperator	!		2516414	0					
ANR	2516429	Identifier	a		2516414	1					
ANR	2516430	UnaryOperationExpression	! name		2516414	1					
ANR	2516431	UnaryOperator	!		2516414	0					
ANR	2516432	Identifier	name		2516414	1					
ANR	2516433	CompoundStatement		3:18:40:40	2516414	1					
ANR	2516434	ReturnStatement	return false ;	659:2:15239:15251	2516414	0	True				
ANR	2516435	Identifier	false		2516414	0					
ANR	2516436	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	661:1:15257:15291	2516414	2	True				
ANR	2516437	IdentifierDecl	* it = r_sign_item_new ( )		2516414	0					
ANR	2516438	IdentifierDeclType	RSignItem *		2516414	0					
ANR	2516439	Identifier	it		2516414	1					
ANR	2516440	AssignmentExpression	* it = r_sign_item_new ( )		2516414	2		=			
ANR	2516441	Identifier	it		2516414	0					
ANR	2516442	CallExpression	r_sign_item_new ( )		2516414	1					
ANR	2516443	Callee	r_sign_item_new		2516414	0					
ANR	2516444	Identifier	r_sign_item_new		2516414	0					
ANR	2516445	ArgumentList			2516414	1					
ANR	2516446	IfStatement	if ( ! it )		2516414	3					
ANR	2516447	Condition	! it	662:5:15298:15300	2516414	0	True				
ANR	2516448	UnaryOperationExpression	! it		2516414	0					
ANR	2516449	UnaryOperator	!		2516414	0					
ANR	2516450	Identifier	it		2516414	1					
ANR	2516451	CompoundStatement		7:10:108:108	2516414	1					
ANR	2516452	ReturnStatement	return false ;	663:2:15307:15319	2516414	0	True				
ANR	2516453	Identifier	false		2516414	0					
ANR	2516454	ExpressionStatement	it -> name = r_str_new ( name )	665:1:15325:15352	2516414	4	True				
ANR	2516455	AssignmentExpression	it -> name = r_str_new ( name )		2516414	0		=			
ANR	2516456	PtrMemberAccess	it -> name		2516414	0					
ANR	2516457	Identifier	it		2516414	0					
ANR	2516458	Identifier	name		2516414	1					
ANR	2516459	CallExpression	r_str_new ( name )		2516414	1					
ANR	2516460	Callee	r_str_new		2516414	0					
ANR	2516461	Identifier	r_str_new		2516414	0					
ANR	2516462	ArgumentList	name		2516414	1					
ANR	2516463	Argument	name		2516414	0					
ANR	2516464	Identifier	name		2516414	0					
ANR	2516465	IfStatement	if ( ! it -> name )		2516414	5					
ANR	2516466	Condition	! it -> name	666:5:15359:15367	2516414	0	True				
ANR	2516467	UnaryOperationExpression	! it -> name		2516414	0					
ANR	2516468	UnaryOperator	!		2516414	0					
ANR	2516469	PtrMemberAccess	it -> name		2516414	1					
ANR	2516470	Identifier	it		2516414	0					
ANR	2516471	Identifier	name		2516414	1					
ANR	2516472	CompoundStatement		11:16:175:175	2516414	1					
ANR	2516473	ExpressionStatement	free ( it )	667:2:15374:15383	2516414	0	True				
ANR	2516474	CallExpression	free ( it )		2516414	0					
ANR	2516475	Callee	free		2516414	0					
ANR	2516476	Identifier	free		2516414	0					
ANR	2516477	ArgumentList	it		2516414	1					
ANR	2516478	Argument	it		2516414	0					
ANR	2516479	Identifier	it		2516414	0					
ANR	2516480	ReturnStatement	return false ;	668:2:15387:15399	2516414	1	True				
ANR	2516481	Identifier	false		2516414	0					
ANR	2516482	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	670:1:15405:15451	2516414	6	True				
ANR	2516483	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		2516414	0		=			
ANR	2516484	PtrMemberAccess	it -> space		2516414	0					
ANR	2516485	Identifier	it		2516414	0					
ANR	2516486	Identifier	space		2516414	1					
ANR	2516487	CallExpression	r_spaces_current ( & a -> zign_spaces )		2516414	1					
ANR	2516488	Callee	r_spaces_current		2516414	0					
ANR	2516489	Identifier	r_spaces_current		2516414	0					
ANR	2516490	ArgumentList	& a -> zign_spaces		2516414	1					
ANR	2516491	Argument	& a -> zign_spaces		2516414	0					
ANR	2516492	UnaryOperationExpression	& a -> zign_spaces		2516414	0					
ANR	2516493	UnaryOperator	&		2516414	0					
ANR	2516494	PtrMemberAccess	a -> zign_spaces		2516414	1					
ANR	2516495	Identifier	a		2516414	0					
ANR	2516496	Identifier	zign_spaces		2516414	1					
ANR	2516497	ExpressionStatement	it -> graph = R_NEW0 ( RSignGraph )	671:1:15454:15485	2516414	7	True				
ANR	2516498	AssignmentExpression	it -> graph = R_NEW0 ( RSignGraph )		2516414	0		=			
ANR	2516499	PtrMemberAccess	it -> graph		2516414	0					
ANR	2516500	Identifier	it		2516414	0					
ANR	2516501	Identifier	graph		2516414	1					
ANR	2516502	CallExpression	R_NEW0 ( RSignGraph )		2516414	1					
ANR	2516503	Callee	R_NEW0		2516414	0					
ANR	2516504	Identifier	R_NEW0		2516414	0					
ANR	2516505	ArgumentList	RSignGraph		2516414	1					
ANR	2516506	Argument	RSignGraph		2516414	0					
ANR	2516507	Identifier	RSignGraph		2516414	0					
ANR	2516508	IfStatement	if ( ! it -> graph )		2516414	8					
ANR	2516509	Condition	! it -> graph	672:5:15492:15501	2516414	0	True				
ANR	2516510	UnaryOperationExpression	! it -> graph		2516414	0					
ANR	2516511	UnaryOperator	!		2516414	0					
ANR	2516512	PtrMemberAccess	it -> graph		2516414	1					
ANR	2516513	Identifier	it		2516414	0					
ANR	2516514	Identifier	graph		2516414	1					
ANR	2516515	CompoundStatement		17:17:309:309	2516414	1					
ANR	2516516	ExpressionStatement	free ( it -> name )	673:2:15508:15523	2516414	0	True				
ANR	2516517	CallExpression	free ( it -> name )		2516414	0					
ANR	2516518	Callee	free		2516414	0					
ANR	2516519	Identifier	free		2516414	0					
ANR	2516520	ArgumentList	it -> name		2516414	1					
ANR	2516521	Argument	it -> name		2516414	0					
ANR	2516522	PtrMemberAccess	it -> name		2516414	0					
ANR	2516523	Identifier	it		2516414	0					
ANR	2516524	Identifier	name		2516414	1					
ANR	2516525	ExpressionStatement	free ( it )	674:2:15527:15536	2516414	1	True				
ANR	2516526	CallExpression	free ( it )		2516414	0					
ANR	2516527	Callee	free		2516414	0					
ANR	2516528	Identifier	free		2516414	0					
ANR	2516529	ArgumentList	it		2516414	1					
ANR	2516530	Argument	it		2516414	0					
ANR	2516531	Identifier	it		2516414	0					
ANR	2516532	ReturnStatement	return false ;	675:2:15540:15552	2516414	2	True				
ANR	2516533	Identifier	false		2516414	0					
ANR	2516534	ExpressionStatement	* it -> graph = graph	677:1:15558:15576	2516414	9	True				
ANR	2516535	AssignmentExpression	* it -> graph = graph		2516414	0		=			
ANR	2516536	UnaryOperationExpression	* it -> graph		2516414	0					
ANR	2516537	UnaryOperator	*		2516414	0					
ANR	2516538	PtrMemberAccess	it -> graph		2516414	1					
ANR	2516539	Identifier	it		2516414	0					
ANR	2516540	Identifier	graph		2516414	1					
ANR	2516541	Identifier	graph		2516414	1					
ANR	2516542	ExpressionStatement	"retval = addItem ( a , it )"	678:1:15579:15603	2516414	10	True				
ANR	2516543	AssignmentExpression	"retval = addItem ( a , it )"		2516414	0		=			
ANR	2516544	Identifier	retval		2516414	0					
ANR	2516545	CallExpression	"addItem ( a , it )"		2516414	1					
ANR	2516546	Callee	addItem		2516414	0					
ANR	2516547	Identifier	addItem		2516414	0					
ANR	2516548	ArgumentList	a		2516414	1					
ANR	2516549	Argument	a		2516414	0					
ANR	2516550	Identifier	a		2516414	0					
ANR	2516551	Argument	it		2516414	1					
ANR	2516552	Identifier	it		2516414	0					
ANR	2516553	ExpressionStatement	r_sign_item_free ( it )	679:1:15606:15627	2516414	11	True				
ANR	2516554	CallExpression	r_sign_item_free ( it )		2516414	0					
ANR	2516555	Callee	r_sign_item_free		2516414	0					
ANR	2516556	Identifier	r_sign_item_free		2516414	0					
ANR	2516557	ArgumentList	it		2516414	1					
ANR	2516558	Argument	it		2516414	0					
ANR	2516559	Identifier	it		2516414	0					
ANR	2516560	ReturnStatement	return retval ;	681:1:15631:15644	2516414	12	True				
ANR	2516561	Identifier	retval		2516414	0					
ANR	2516562	ReturnType	R_API bool		2516414	1					
ANR	2516563	Identifier	r_sign_add_graph		2516414	2					
ANR	2516564	ParameterList	"RAnal * a , const char * name , RSignGraph graph"		2516414	3					
ANR	2516565	Parameter	RAnal * a	656:28:15148:15155	2516414	0	True				
ANR	2516566	ParameterType	RAnal *		2516414	0					
ANR	2516567	Identifier	a		2516414	1					
ANR	2516568	Parameter	const char * name	656:38:15158:15173	2516414	1	True				
ANR	2516569	ParameterType	const char *		2516414	0					
ANR	2516570	Identifier	name		2516414	1					
ANR	2516571	Parameter	RSignGraph graph	656:56:15176:15191	2516414	2	True				
ANR	2516572	ParameterType	RSignGraph		2516414	0					
ANR	2516573	Identifier	graph		2516414	1					
ANR	2516574	CFGEntryNode	ENTRY		2516414		True				
ANR	2516575	CFGExitNode	EXIT		2516414		True				
ANR	2516576	Symbol	a		2516414						
ANR	2516577	Symbol	r_sign_item_new		2516414						
ANR	2516578	Symbol	it -> graph		2516414						
ANR	2516579	Symbol	it -> name		2516414						
ANR	2516580	Symbol	false		2516414						
ANR	2516581	Symbol	it		2516414						
ANR	2516582	Symbol	graph		2516414						
ANR	2516583	Symbol	retval		2516414						
ANR	2516584	Symbol	& a -> zign_spaces		2516414						
ANR	2516585	Symbol	it -> space		2516414						
ANR	2516586	Symbol	R_NEW0		2516414						
ANR	2516587	Symbol	addItem		2516414						
ANR	2516588	Symbol	* it		2516414						
ANR	2516589	Symbol	* * it		2516414						
ANR	2516590	Symbol	* it -> graph		2516414						
ANR	2516591	Symbol	name		2516414						
ANR	2516592	Symbol	true		2516414						
ANR	2516593	Symbol	RSignGraph		2516414						
ANR	2516594	Symbol	r_spaces_current		2516414						
ANR	2516595	Symbol	r_str_new		2516414						
ANR	2516596	Function	r_sign_add_comment	684:0:15649:16036							
ANR	2516597	FunctionDef	"r_sign_add_comment (RAnal * a , const char * name , const char * comment)"		2516596	0					
ANR	2516598	CompoundStatement		684:79:15728:16036	2516596	0					
ANR	2516599	ExpressionStatement	"r_return_val_if_fail ( a && name && comment , false )"	685:1:15731:15781	2516596	0	True				
ANR	2516600	CallExpression	"r_return_val_if_fail ( a && name && comment , false )"		2516596	0					
ANR	2516601	Callee	r_return_val_if_fail		2516596	0					
ANR	2516602	Identifier	r_return_val_if_fail		2516596	0					
ANR	2516603	ArgumentList	a && name && comment		2516596	1					
ANR	2516604	Argument	a && name && comment		2516596	0					
ANR	2516605	AndExpression	a && name && comment		2516596	0		&&			
ANR	2516606	Identifier	a		2516596	0					
ANR	2516607	AndExpression	name && comment		2516596	1		&&			
ANR	2516608	Identifier	name		2516596	0					
ANR	2516609	Identifier	comment		2516596	1					
ANR	2516610	Argument	false		2516596	1					
ANR	2516611	Identifier	false		2516596	0					
ANR	2516612	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	687:1:15785:15819	2516596	1	True				
ANR	2516613	IdentifierDecl	* it = r_sign_item_new ( )		2516596	0					
ANR	2516614	IdentifierDeclType	RSignItem *		2516596	0					
ANR	2516615	Identifier	it		2516596	1					
ANR	2516616	AssignmentExpression	* it = r_sign_item_new ( )		2516596	2		=			
ANR	2516617	Identifier	it		2516596	0					
ANR	2516618	CallExpression	r_sign_item_new ( )		2516596	1					
ANR	2516619	Callee	r_sign_item_new		2516596	0					
ANR	2516620	Identifier	r_sign_item_new		2516596	0					
ANR	2516621	ArgumentList			2516596	1					
ANR	2516622	IfStatement	if ( ! it )		2516596	2					
ANR	2516623	Condition	! it	688:5:15826:15828	2516596	0	True				
ANR	2516624	UnaryOperationExpression	! it		2516596	0					
ANR	2516625	UnaryOperator	!		2516596	0					
ANR	2516626	Identifier	it		2516596	1					
ANR	2516627	CompoundStatement		5:10:102:102	2516596	1					
ANR	2516628	ReturnStatement	return false ;	689:2:15835:15847	2516596	0	True				
ANR	2516629	Identifier	false		2516596	0					
ANR	2516630	ExpressionStatement	it -> name = r_str_new ( name )	691:1:15853:15880	2516596	3	True				
ANR	2516631	AssignmentExpression	it -> name = r_str_new ( name )		2516596	0		=			
ANR	2516632	PtrMemberAccess	it -> name		2516596	0					
ANR	2516633	Identifier	it		2516596	0					
ANR	2516634	Identifier	name		2516596	1					
ANR	2516635	CallExpression	r_str_new ( name )		2516596	1					
ANR	2516636	Callee	r_str_new		2516596	0					
ANR	2516637	Identifier	r_str_new		2516596	0					
ANR	2516638	ArgumentList	name		2516596	1					
ANR	2516639	Argument	name		2516596	0					
ANR	2516640	Identifier	name		2516596	0					
ANR	2516641	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	692:1:15883:15929	2516596	4	True				
ANR	2516642	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		2516596	0		=			
ANR	2516643	PtrMemberAccess	it -> space		2516596	0					
ANR	2516644	Identifier	it		2516596	0					
ANR	2516645	Identifier	space		2516596	1					
ANR	2516646	CallExpression	r_spaces_current ( & a -> zign_spaces )		2516596	1					
ANR	2516647	Callee	r_spaces_current		2516596	0					
ANR	2516648	Identifier	r_spaces_current		2516596	0					
ANR	2516649	ArgumentList	& a -> zign_spaces		2516596	1					
ANR	2516650	Argument	& a -> zign_spaces		2516596	0					
ANR	2516651	UnaryOperationExpression	& a -> zign_spaces		2516596	0					
ANR	2516652	UnaryOperator	&		2516596	0					
ANR	2516653	PtrMemberAccess	a -> zign_spaces		2516596	1					
ANR	2516654	Identifier	a		2516596	0					
ANR	2516655	Identifier	zign_spaces		2516596	1					
ANR	2516656	ExpressionStatement	it -> comment = strdup ( comment )	693:1:15932:15962	2516596	5	True				
ANR	2516657	AssignmentExpression	it -> comment = strdup ( comment )		2516596	0		=			
ANR	2516658	PtrMemberAccess	it -> comment		2516596	0					
ANR	2516659	Identifier	it		2516596	0					
ANR	2516660	Identifier	comment		2516596	1					
ANR	2516661	CallExpression	strdup ( comment )		2516596	1					
ANR	2516662	Callee	strdup		2516596	0					
ANR	2516663	Identifier	strdup		2516596	0					
ANR	2516664	ArgumentList	comment		2516596	1					
ANR	2516665	Argument	comment		2516596	0					
ANR	2516666	Identifier	comment		2516596	0					
ANR	2516667	IdentifierDeclStatement	"bool retval = addItem ( a , it ) ;"	694:1:15965:15994	2516596	6	True				
ANR	2516668	IdentifierDecl	"retval = addItem ( a , it )"		2516596	0					
ANR	2516669	IdentifierDeclType	bool		2516596	0					
ANR	2516670	Identifier	retval		2516596	1					
ANR	2516671	AssignmentExpression	"retval = addItem ( a , it )"		2516596	2		=			
ANR	2516672	Identifier	retval		2516596	0					
ANR	2516673	CallExpression	"addItem ( a , it )"		2516596	1					
ANR	2516674	Callee	addItem		2516596	0					
ANR	2516675	Identifier	addItem		2516596	0					
ANR	2516676	ArgumentList	a		2516596	1					
ANR	2516677	Argument	a		2516596	0					
ANR	2516678	Identifier	a		2516596	0					
ANR	2516679	Argument	it		2516596	1					
ANR	2516680	Identifier	it		2516596	0					
ANR	2516681	ExpressionStatement	r_sign_item_free ( it )	695:1:15997:16018	2516596	7	True				
ANR	2516682	CallExpression	r_sign_item_free ( it )		2516596	0					
ANR	2516683	Callee	r_sign_item_free		2516596	0					
ANR	2516684	Identifier	r_sign_item_free		2516596	0					
ANR	2516685	ArgumentList	it		2516596	1					
ANR	2516686	Argument	it		2516596	0					
ANR	2516687	Identifier	it		2516596	0					
ANR	2516688	ReturnStatement	return retval ;	696:1:16021:16034	2516596	8	True				
ANR	2516689	Identifier	retval		2516596	0					
ANR	2516690	ReturnType	R_API bool		2516596	1					
ANR	2516691	Identifier	r_sign_add_comment		2516596	2					
ANR	2516692	ParameterList	"RAnal * a , const char * name , const char * comment"		2516596	3					
ANR	2516693	Parameter	RAnal * a	684:30:15679:15686	2516596	0	True				
ANR	2516694	ParameterType	RAnal *		2516596	0					
ANR	2516695	Identifier	a		2516596	1					
ANR	2516696	Parameter	const char * name	684:40:15689:15704	2516596	1	True				
ANR	2516697	ParameterType	const char *		2516596	0					
ANR	2516698	Identifier	name		2516596	1					
ANR	2516699	Parameter	const char * comment	684:58:15707:15725	2516596	2	True				
ANR	2516700	ParameterType	const char *		2516596	0					
ANR	2516701	Identifier	comment		2516596	1					
ANR	2516702	CFGEntryNode	ENTRY		2516596		True				
ANR	2516703	CFGExitNode	EXIT		2516596		True				
ANR	2516704	Symbol	a		2516596						
ANR	2516705	Symbol	r_sign_item_new		2516596						
ANR	2516706	Symbol	it -> name		2516596						
ANR	2516707	Symbol	false		2516596						
ANR	2516708	Symbol	it		2516596						
ANR	2516709	Symbol	& a -> zign_spaces		2516596						
ANR	2516710	Symbol	retval		2516596						
ANR	2516711	Symbol	it -> space		2516596						
ANR	2516712	Symbol	addItem		2516596						
ANR	2516713	Symbol	* it		2516596						
ANR	2516714	Symbol	name		2516596						
ANR	2516715	Symbol	comment		2516596						
ANR	2516716	Symbol	strdup		2516596						
ANR	2516717	Symbol	r_spaces_current		2516596						
ANR	2516718	Symbol	r_str_new		2516596						
ANR	2516719	Symbol	it -> comment		2516596						
ANR	2516720	Function	r_sign_add_name	699:0:16039:16430							
ANR	2516721	FunctionDef	"r_sign_add_name (RAnal * a , const char * name , const char * realname)"		2516720	0					
ANR	2516722	CompoundStatement		699:77:16116:16430	2516720	0					
ANR	2516723	ExpressionStatement	"r_return_val_if_fail ( a && name && realname , false )"	700:1:16119:16170	2516720	0	True				
ANR	2516724	CallExpression	"r_return_val_if_fail ( a && name && realname , false )"		2516720	0					
ANR	2516725	Callee	r_return_val_if_fail		2516720	0					
ANR	2516726	Identifier	r_return_val_if_fail		2516720	0					
ANR	2516727	ArgumentList	a && name && realname		2516720	1					
ANR	2516728	Argument	a && name && realname		2516720	0					
ANR	2516729	AndExpression	a && name && realname		2516720	0		&&			
ANR	2516730	Identifier	a		2516720	0					
ANR	2516731	AndExpression	name && realname		2516720	1		&&			
ANR	2516732	Identifier	name		2516720	0					
ANR	2516733	Identifier	realname		2516720	1					
ANR	2516734	Argument	false		2516720	1					
ANR	2516735	Identifier	false		2516720	0					
ANR	2516736	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	701:1:16173:16207	2516720	1	True				
ANR	2516737	IdentifierDecl	* it = r_sign_item_new ( )		2516720	0					
ANR	2516738	IdentifierDeclType	RSignItem *		2516720	0					
ANR	2516739	Identifier	it		2516720	1					
ANR	2516740	AssignmentExpression	* it = r_sign_item_new ( )		2516720	2		=			
ANR	2516741	Identifier	it		2516720	0					
ANR	2516742	CallExpression	r_sign_item_new ( )		2516720	1					
ANR	2516743	Callee	r_sign_item_new		2516720	0					
ANR	2516744	Identifier	r_sign_item_new		2516720	0					
ANR	2516745	ArgumentList			2516720	1					
ANR	2516746	IfStatement	if ( it )		2516720	2					
ANR	2516747	Condition	it	702:5:16214:16215	2516720	0	True				
ANR	2516748	Identifier	it		2516720	0					
ANR	2516749	CompoundStatement		8:2:222:251	2516720	1					
ANR	2516750	ExpressionStatement	it -> name = r_str_new ( name )	703:2:16222:16249	2516720	0	True				
ANR	2516751	AssignmentExpression	it -> name = r_str_new ( name )		2516720	0		=			
ANR	2516752	PtrMemberAccess	it -> name		2516720	0					
ANR	2516753	Identifier	it		2516720	0					
ANR	2516754	Identifier	name		2516720	1					
ANR	2516755	CallExpression	r_str_new ( name )		2516720	1					
ANR	2516756	Callee	r_str_new		2516720	0					
ANR	2516757	Identifier	r_str_new		2516720	0					
ANR	2516758	ArgumentList	name		2516720	1					
ANR	2516759	Argument	name		2516720	0					
ANR	2516760	Identifier	name		2516720	0					
ANR	2516761	ExpressionStatement	it -> realname = strdup ( realname )	704:2:16253:16285	2516720	1	True				
ANR	2516762	AssignmentExpression	it -> realname = strdup ( realname )		2516720	0		=			
ANR	2516763	PtrMemberAccess	it -> realname		2516720	0					
ANR	2516764	Identifier	it		2516720	0					
ANR	2516765	Identifier	realname		2516720	1					
ANR	2516766	CallExpression	strdup ( realname )		2516720	1					
ANR	2516767	Callee	strdup		2516720	0					
ANR	2516768	Identifier	strdup		2516720	0					
ANR	2516769	ArgumentList	realname		2516720	1					
ANR	2516770	Argument	realname		2516720	0					
ANR	2516771	Identifier	realname		2516720	0					
ANR	2516772	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	705:2:16289:16335	2516720	2	True				
ANR	2516773	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		2516720	0		=			
ANR	2516774	PtrMemberAccess	it -> space		2516720	0					
ANR	2516775	Identifier	it		2516720	0					
ANR	2516776	Identifier	space		2516720	1					
ANR	2516777	CallExpression	r_spaces_current ( & a -> zign_spaces )		2516720	1					
ANR	2516778	Callee	r_spaces_current		2516720	0					
ANR	2516779	Identifier	r_spaces_current		2516720	0					
ANR	2516780	ArgumentList	& a -> zign_spaces		2516720	1					
ANR	2516781	Argument	& a -> zign_spaces		2516720	0					
ANR	2516782	UnaryOperationExpression	& a -> zign_spaces		2516720	0					
ANR	2516783	UnaryOperator	&		2516720	0					
ANR	2516784	PtrMemberAccess	a -> zign_spaces		2516720	1					
ANR	2516785	Identifier	a		2516720	0					
ANR	2516786	Identifier	zign_spaces		2516720	1					
ANR	2516787	IdentifierDeclStatement	"bool retval = addItem ( a , it ) ;"	706:2:16339:16368	2516720	3	True				
ANR	2516788	IdentifierDecl	"retval = addItem ( a , it )"		2516720	0					
ANR	2516789	IdentifierDeclType	bool		2516720	0					
ANR	2516790	Identifier	retval		2516720	1					
ANR	2516791	AssignmentExpression	"retval = addItem ( a , it )"		2516720	2		=			
ANR	2516792	Identifier	retval		2516720	0					
ANR	2516793	CallExpression	"addItem ( a , it )"		2516720	1					
ANR	2516794	Callee	addItem		2516720	0					
ANR	2516795	Identifier	addItem		2516720	0					
ANR	2516796	ArgumentList	a		2516720	1					
ANR	2516797	Argument	a		2516720	0					
ANR	2516798	Identifier	a		2516720	0					
ANR	2516799	Argument	it		2516720	1					
ANR	2516800	Identifier	it		2516720	0					
ANR	2516801	ExpressionStatement	r_sign_item_free ( it )	707:2:16372:16393	2516720	4	True				
ANR	2516802	CallExpression	r_sign_item_free ( it )		2516720	0					
ANR	2516803	Callee	r_sign_item_free		2516720	0					
ANR	2516804	Identifier	r_sign_item_free		2516720	0					
ANR	2516805	ArgumentList	it		2516720	1					
ANR	2516806	Argument	it		2516720	0					
ANR	2516807	Identifier	it		2516720	0					
ANR	2516808	ReturnStatement	return retval ;	708:2:16397:16410	2516720	5	True				
ANR	2516809	Identifier	retval		2516720	0					
ANR	2516810	ReturnStatement	return false ;	710:1:16416:16428	2516720	3	True				
ANR	2516811	Identifier	false		2516720	0					
ANR	2516812	ReturnType	R_API bool		2516720	1					
ANR	2516813	Identifier	r_sign_add_name		2516720	2					
ANR	2516814	ParameterList	"RAnal * a , const char * name , const char * realname"		2516720	3					
ANR	2516815	Parameter	RAnal * a	699:27:16066:16073	2516720	0	True				
ANR	2516816	ParameterType	RAnal *		2516720	0					
ANR	2516817	Identifier	a		2516720	1					
ANR	2516818	Parameter	const char * name	699:37:16076:16091	2516720	1	True				
ANR	2516819	ParameterType	const char *		2516720	0					
ANR	2516820	Identifier	name		2516720	1					
ANR	2516821	Parameter	const char * realname	699:55:16094:16113	2516720	2	True				
ANR	2516822	ParameterType	const char *		2516720	0					
ANR	2516823	Identifier	realname		2516720	1					
ANR	2516824	CFGEntryNode	ENTRY		2516720		True				
ANR	2516825	CFGExitNode	EXIT		2516720		True				
ANR	2516826	Symbol	a		2516720						
ANR	2516827	Symbol	r_sign_item_new		2516720						
ANR	2516828	Symbol	it -> name		2516720						
ANR	2516829	Symbol	false		2516720						
ANR	2516830	Symbol	it		2516720						
ANR	2516831	Symbol	& a -> zign_spaces		2516720						
ANR	2516832	Symbol	retval		2516720						
ANR	2516833	Symbol	realname		2516720						
ANR	2516834	Symbol	it -> space		2516720						
ANR	2516835	Symbol	addItem		2516720						
ANR	2516836	Symbol	* it		2516720						
ANR	2516837	Symbol	name		2516720						
ANR	2516838	Symbol	strdup		2516720						
ANR	2516839	Symbol	r_spaces_current		2516720						
ANR	2516840	Symbol	r_str_new		2516720						
ANR	2516841	Symbol	it -> realname		2516720						
ANR	2516842	Function	r_sign_add_addr	713:0:16433:16803							
ANR	2516843	FunctionDef	"r_sign_add_addr (RAnal * a , const char * name , ut64 addr)"		2516842	0					
ANR	2516844	CompoundStatement		713:66:16499:16803	2516842	0					
ANR	2516845	ExpressionStatement	"r_return_val_if_fail ( a && name && addr != UT64_MAX , false )"	714:1:16502:16561	2516842	0	True				
ANR	2516846	CallExpression	"r_return_val_if_fail ( a && name && addr != UT64_MAX , false )"		2516842	0					
ANR	2516847	Callee	r_return_val_if_fail		2516842	0					
ANR	2516848	Identifier	r_return_val_if_fail		2516842	0					
ANR	2516849	ArgumentList	a && name && addr != UT64_MAX		2516842	1					
ANR	2516850	Argument	a && name && addr != UT64_MAX		2516842	0					
ANR	2516851	AndExpression	a && name && addr != UT64_MAX		2516842	0		&&			
ANR	2516852	Identifier	a		2516842	0					
ANR	2516853	AndExpression	name && addr != UT64_MAX		2516842	1		&&			
ANR	2516854	Identifier	name		2516842	0					
ANR	2516855	EqualityExpression	addr != UT64_MAX		2516842	1		!=			
ANR	2516856	Identifier	addr		2516842	0					
ANR	2516857	Identifier	UT64_MAX		2516842	1					
ANR	2516858	Argument	false		2516842	1					
ANR	2516859	Identifier	false		2516842	0					
ANR	2516860	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	716:1:16565:16599	2516842	1	True				
ANR	2516861	IdentifierDecl	* it = r_sign_item_new ( )		2516842	0					
ANR	2516862	IdentifierDeclType	RSignItem *		2516842	0					
ANR	2516863	Identifier	it		2516842	1					
ANR	2516864	AssignmentExpression	* it = r_sign_item_new ( )		2516842	2		=			
ANR	2516865	Identifier	it		2516842	0					
ANR	2516866	CallExpression	r_sign_item_new ( )		2516842	1					
ANR	2516867	Callee	r_sign_item_new		2516842	0					
ANR	2516868	Identifier	r_sign_item_new		2516842	0					
ANR	2516869	ArgumentList			2516842	1					
ANR	2516870	IfStatement	if ( ! it )		2516842	2					
ANR	2516871	Condition	! it	717:5:16606:16608	2516842	0	True				
ANR	2516872	UnaryOperationExpression	! it		2516842	0					
ANR	2516873	UnaryOperator	!		2516842	0					
ANR	2516874	Identifier	it		2516842	1					
ANR	2516875	CompoundStatement		5:10:111:111	2516842	1					
ANR	2516876	ReturnStatement	return NULL ;	718:2:16615:16626	2516842	0	True				
ANR	2516877	Identifier	NULL		2516842	0					
ANR	2516878	ExpressionStatement	it -> name = r_str_new ( name )	720:1:16632:16659	2516842	3	True				
ANR	2516879	AssignmentExpression	it -> name = r_str_new ( name )		2516842	0		=			
ANR	2516880	PtrMemberAccess	it -> name		2516842	0					
ANR	2516881	Identifier	it		2516842	0					
ANR	2516882	Identifier	name		2516842	1					
ANR	2516883	CallExpression	r_str_new ( name )		2516842	1					
ANR	2516884	Callee	r_str_new		2516842	0					
ANR	2516885	Identifier	r_str_new		2516842	0					
ANR	2516886	ArgumentList	name		2516842	1					
ANR	2516887	Argument	name		2516842	0					
ANR	2516888	Identifier	name		2516842	0					
ANR	2516889	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	721:1:16662:16708	2516842	4	True				
ANR	2516890	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		2516842	0		=			
ANR	2516891	PtrMemberAccess	it -> space		2516842	0					
ANR	2516892	Identifier	it		2516842	0					
ANR	2516893	Identifier	space		2516842	1					
ANR	2516894	CallExpression	r_spaces_current ( & a -> zign_spaces )		2516842	1					
ANR	2516895	Callee	r_spaces_current		2516842	0					
ANR	2516896	Identifier	r_spaces_current		2516842	0					
ANR	2516897	ArgumentList	& a -> zign_spaces		2516842	1					
ANR	2516898	Argument	& a -> zign_spaces		2516842	0					
ANR	2516899	UnaryOperationExpression	& a -> zign_spaces		2516842	0					
ANR	2516900	UnaryOperator	&		2516842	0					
ANR	2516901	PtrMemberAccess	a -> zign_spaces		2516842	1					
ANR	2516902	Identifier	a		2516842	0					
ANR	2516903	Identifier	zign_spaces		2516842	1					
ANR	2516904	ExpressionStatement	it -> addr = addr	722:1:16711:16726	2516842	5	True				
ANR	2516905	AssignmentExpression	it -> addr = addr		2516842	0		=			
ANR	2516906	PtrMemberAccess	it -> addr		2516842	0					
ANR	2516907	Identifier	it		2516842	0					
ANR	2516908	Identifier	addr		2516842	1					
ANR	2516909	Identifier	addr		2516842	1					
ANR	2516910	IdentifierDeclStatement	"bool retval = addItem ( a , it ) ;"	724:1:16730:16759	2516842	6	True				
ANR	2516911	IdentifierDecl	"retval = addItem ( a , it )"		2516842	0					
ANR	2516912	IdentifierDeclType	bool		2516842	0					
ANR	2516913	Identifier	retval		2516842	1					
ANR	2516914	AssignmentExpression	"retval = addItem ( a , it )"		2516842	2		=			
ANR	2516915	Identifier	retval		2516842	0					
ANR	2516916	CallExpression	"addItem ( a , it )"		2516842	1					
ANR	2516917	Callee	addItem		2516842	0					
ANR	2516918	Identifier	addItem		2516842	0					
ANR	2516919	ArgumentList	a		2516842	1					
ANR	2516920	Argument	a		2516842	0					
ANR	2516921	Identifier	a		2516842	0					
ANR	2516922	Argument	it		2516842	1					
ANR	2516923	Identifier	it		2516842	0					
ANR	2516924	ExpressionStatement	r_sign_item_free ( it )	726:1:16763:16784	2516842	7	True				
ANR	2516925	CallExpression	r_sign_item_free ( it )		2516842	0					
ANR	2516926	Callee	r_sign_item_free		2516842	0					
ANR	2516927	Identifier	r_sign_item_free		2516842	0					
ANR	2516928	ArgumentList	it		2516842	1					
ANR	2516929	Argument	it		2516842	0					
ANR	2516930	Identifier	it		2516842	0					
ANR	2516931	ReturnStatement	return retval ;	728:1:16788:16801	2516842	8	True				
ANR	2516932	Identifier	retval		2516842	0					
ANR	2516933	ReturnType	R_API bool		2516842	1					
ANR	2516934	Identifier	r_sign_add_addr		2516842	2					
ANR	2516935	ParameterList	"RAnal * a , const char * name , ut64 addr"		2516842	3					
ANR	2516936	Parameter	RAnal * a	713:27:16460:16467	2516842	0	True				
ANR	2516937	ParameterType	RAnal *		2516842	0					
ANR	2516938	Identifier	a		2516842	1					
ANR	2516939	Parameter	const char * name	713:37:16470:16485	2516842	1	True				
ANR	2516940	ParameterType	const char *		2516842	0					
ANR	2516941	Identifier	name		2516842	1					
ANR	2516942	Parameter	ut64 addr	713:55:16488:16496	2516842	2	True				
ANR	2516943	ParameterType	ut64		2516842	0					
ANR	2516944	Identifier	addr		2516842	1					
ANR	2516945	CFGEntryNode	ENTRY		2516842		True				
ANR	2516946	CFGExitNode	EXIT		2516842		True				
ANR	2516947	Symbol	a		2516842						
ANR	2516948	Symbol	r_sign_item_new		2516842						
ANR	2516949	Symbol	NULL		2516842						
ANR	2516950	Symbol	it -> name		2516842						
ANR	2516951	Symbol	false		2516842						
ANR	2516952	Symbol	it		2516842						
ANR	2516953	Symbol	& a -> zign_spaces		2516842						
ANR	2516954	Symbol	retval		2516842						
ANR	2516955	Symbol	it -> space		2516842						
ANR	2516956	Symbol	addItem		2516842						
ANR	2516957	Symbol	* it		2516842						
ANR	2516958	Symbol	it -> addr		2516842						
ANR	2516959	Symbol	name		2516842						
ANR	2516960	Symbol	addr		2516842						
ANR	2516961	Symbol	UT64_MAX		2516842						
ANR	2516962	Symbol	r_spaces_current		2516842						
ANR	2516963	Symbol	r_str_new		2516842						
ANR	2516964	Function	r_sign_add_vars	731:0:16806:17365							
ANR	2516965	FunctionDef	"r_sign_add_vars (RAnal * a , const char * name , RList * vars)"		2516964	0					
ANR	2516966	CompoundStatement		731:68:16874:17365	2516964	0					
ANR	2516967	ExpressionStatement	"r_return_val_if_fail ( a && name && vars , false )"	732:1:16877:16924	2516964	0	True				
ANR	2516968	CallExpression	"r_return_val_if_fail ( a && name && vars , false )"		2516964	0					
ANR	2516969	Callee	r_return_val_if_fail		2516964	0					
ANR	2516970	Identifier	r_return_val_if_fail		2516964	0					
ANR	2516971	ArgumentList	a && name && vars		2516964	1					
ANR	2516972	Argument	a && name && vars		2516964	0					
ANR	2516973	AndExpression	a && name && vars		2516964	0		&&			
ANR	2516974	Identifier	a		2516964	0					
ANR	2516975	AndExpression	name && vars		2516964	1		&&			
ANR	2516976	Identifier	name		2516964	0					
ANR	2516977	Identifier	vars		2516964	1					
ANR	2516978	Argument	false		2516964	1					
ANR	2516979	Identifier	false		2516964	0					
ANR	2516980	IdentifierDeclStatement	RListIter * iter ;	734:1:16928:16943	2516964	1	True				
ANR	2516981	IdentifierDecl	* iter		2516964	0					
ANR	2516982	IdentifierDeclType	RListIter *		2516964	0					
ANR	2516983	Identifier	iter		2516964	1					
ANR	2516984	IdentifierDeclStatement	char * var ;	735:1:16946:16955	2516964	2	True				
ANR	2516985	IdentifierDecl	* var		2516964	0					
ANR	2516986	IdentifierDeclType	char *		2516964	0					
ANR	2516987	Identifier	var		2516964	1					
ANR	2516988	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	737:1:16959:16993	2516964	3	True				
ANR	2516989	IdentifierDecl	* it = r_sign_item_new ( )		2516964	0					
ANR	2516990	IdentifierDeclType	RSignItem *		2516964	0					
ANR	2516991	Identifier	it		2516964	1					
ANR	2516992	AssignmentExpression	* it = r_sign_item_new ( )		2516964	2		=			
ANR	2516993	Identifier	it		2516964	0					
ANR	2516994	CallExpression	r_sign_item_new ( )		2516964	1					
ANR	2516995	Callee	r_sign_item_new		2516964	0					
ANR	2516996	Identifier	r_sign_item_new		2516964	0					
ANR	2516997	ArgumentList			2516964	1					
ANR	2516998	IfStatement	if ( ! it )		2516964	4					
ANR	2516999	Condition	! it	738:5:17000:17002	2516964	0	True				
ANR	2517000	UnaryOperationExpression	! it		2516964	0					
ANR	2517001	UnaryOperator	!		2516964	0					
ANR	2517002	Identifier	it		2516964	1					
ANR	2517003	CompoundStatement		8:10:130:130	2516964	1					
ANR	2517004	ReturnStatement	return false ;	739:2:17009:17021	2516964	0	True				
ANR	2517005	Identifier	false		2516964	0					
ANR	2517006	ExpressionStatement	it -> name = r_str_new ( name )	741:1:17027:17054	2516964	5	True				
ANR	2517007	AssignmentExpression	it -> name = r_str_new ( name )		2516964	0		=			
ANR	2517008	PtrMemberAccess	it -> name		2516964	0					
ANR	2517009	Identifier	it		2516964	0					
ANR	2517010	Identifier	name		2516964	1					
ANR	2517011	CallExpression	r_str_new ( name )		2516964	1					
ANR	2517012	Callee	r_str_new		2516964	0					
ANR	2517013	Identifier	r_str_new		2516964	0					
ANR	2517014	ArgumentList	name		2516964	1					
ANR	2517015	Argument	name		2516964	0					
ANR	2517016	Identifier	name		2516964	0					
ANR	2517017	IfStatement	if ( ! it -> name )		2516964	6					
ANR	2517018	Condition	! it -> name	742:5:17061:17069	2516964	0	True				
ANR	2517019	UnaryOperationExpression	! it -> name		2516964	0					
ANR	2517020	UnaryOperator	!		2516964	0					
ANR	2517021	PtrMemberAccess	it -> name		2516964	1					
ANR	2517022	Identifier	it		2516964	0					
ANR	2517023	Identifier	name		2516964	1					
ANR	2517024	CompoundStatement		12:16:197:197	2516964	1					
ANR	2517025	ExpressionStatement	r_sign_item_free ( it )	743:2:17076:17097	2516964	0	True				
ANR	2517026	CallExpression	r_sign_item_free ( it )		2516964	0					
ANR	2517027	Callee	r_sign_item_free		2516964	0					
ANR	2517028	Identifier	r_sign_item_free		2516964	0					
ANR	2517029	ArgumentList	it		2516964	1					
ANR	2517030	Argument	it		2516964	0					
ANR	2517031	Identifier	it		2516964	0					
ANR	2517032	ReturnStatement	return false ;	744:2:17101:17113	2516964	1	True				
ANR	2517033	Identifier	false		2516964	0					
ANR	2517034	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	746:1:17119:17165	2516964	7	True				
ANR	2517035	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		2516964	0		=			
ANR	2517036	PtrMemberAccess	it -> space		2516964	0					
ANR	2517037	Identifier	it		2516964	0					
ANR	2517038	Identifier	space		2516964	1					
ANR	2517039	CallExpression	r_spaces_current ( & a -> zign_spaces )		2516964	1					
ANR	2517040	Callee	r_spaces_current		2516964	0					
ANR	2517041	Identifier	r_spaces_current		2516964	0					
ANR	2517042	ArgumentList	& a -> zign_spaces		2516964	1					
ANR	2517043	Argument	& a -> zign_spaces		2516964	0					
ANR	2517044	UnaryOperationExpression	& a -> zign_spaces		2516964	0					
ANR	2517045	UnaryOperator	&		2516964	0					
ANR	2517046	PtrMemberAccess	a -> zign_spaces		2516964	1					
ANR	2517047	Identifier	a		2516964	0					
ANR	2517048	Identifier	zign_spaces		2516964	1					
ANR	2517049	ExpressionStatement	it -> vars = r_list_newf ( ( RListFree ) free )	747:1:17168:17209	2516964	8	True				
ANR	2517050	AssignmentExpression	it -> vars = r_list_newf ( ( RListFree ) free )		2516964	0		=			
ANR	2517051	PtrMemberAccess	it -> vars		2516964	0					
ANR	2517052	Identifier	it		2516964	0					
ANR	2517053	Identifier	vars		2516964	1					
ANR	2517054	CallExpression	r_list_newf ( ( RListFree ) free )		2516964	1					
ANR	2517055	Callee	r_list_newf		2516964	0					
ANR	2517056	Identifier	r_list_newf		2516964	0					
ANR	2517057	ArgumentList	( RListFree ) free		2516964	1					
ANR	2517058	Argument	( RListFree ) free		2516964	0					
ANR	2517059	CastExpression	( RListFree ) free		2516964	0					
ANR	2517060	CastTarget	RListFree		2516964	0					
ANR	2517061	Identifier	free		2516964	1					
ANR	2517062	Statement	r_list_foreach	748:1:17212:17225	2516964	9	True				
ANR	2517063	Statement	(	748:16:17227:17227	2516964	10	True				
ANR	2517064	Statement	vars	748:17:17228:17231	2516964	11	True				
ANR	2517065	Statement	","	748:21:17232:17232	2516964	12	True				
ANR	2517066	Statement	iter	748:23:17234:17237	2516964	13	True				
ANR	2517067	Statement	","	748:27:17238:17238	2516964	14	True				
ANR	2517068	Statement	var	748:29:17240:17242	2516964	15	True				
ANR	2517069	Statement	)	748:32:17243:17243	2516964	16	True				
ANR	2517070	CompoundStatement		18:34:370:370	2516964	17					
ANR	2517071	ExpressionStatement	"r_list_append ( it -> vars , strdup ( var ) )"	749:2:17249:17287	2516964	0	True				
ANR	2517072	CallExpression	"r_list_append ( it -> vars , strdup ( var ) )"		2516964	0					
ANR	2517073	Callee	r_list_append		2516964	0					
ANR	2517074	Identifier	r_list_append		2516964	0					
ANR	2517075	ArgumentList	it -> vars		2516964	1					
ANR	2517076	Argument	it -> vars		2516964	0					
ANR	2517077	PtrMemberAccess	it -> vars		2516964	0					
ANR	2517078	Identifier	it		2516964	0					
ANR	2517079	Identifier	vars		2516964	1					
ANR	2517080	Argument	strdup ( var )		2516964	1					
ANR	2517081	CallExpression	strdup ( var )		2516964	0					
ANR	2517082	Callee	strdup		2516964	0					
ANR	2517083	Identifier	strdup		2516964	0					
ANR	2517084	ArgumentList	var		2516964	1					
ANR	2517085	Argument	var		2516964	0					
ANR	2517086	Identifier	var		2516964	0					
ANR	2517087	IdentifierDeclStatement	"bool retval = addItem ( a , it ) ;"	751:1:17293:17322	2516964	18	True				
ANR	2517088	IdentifierDecl	"retval = addItem ( a , it )"		2516964	0					
ANR	2517089	IdentifierDeclType	bool		2516964	0					
ANR	2517090	Identifier	retval		2516964	1					
ANR	2517091	AssignmentExpression	"retval = addItem ( a , it )"		2516964	2		=			
ANR	2517092	Identifier	retval		2516964	0					
ANR	2517093	CallExpression	"addItem ( a , it )"		2516964	1					
ANR	2517094	Callee	addItem		2516964	0					
ANR	2517095	Identifier	addItem		2516964	0					
ANR	2517096	ArgumentList	a		2516964	1					
ANR	2517097	Argument	a		2516964	0					
ANR	2517098	Identifier	a		2516964	0					
ANR	2517099	Argument	it		2516964	1					
ANR	2517100	Identifier	it		2516964	0					
ANR	2517101	ExpressionStatement	r_sign_item_free ( it )	752:1:17325:17346	2516964	19	True				
ANR	2517102	CallExpression	r_sign_item_free ( it )		2516964	0					
ANR	2517103	Callee	r_sign_item_free		2516964	0					
ANR	2517104	Identifier	r_sign_item_free		2516964	0					
ANR	2517105	ArgumentList	it		2516964	1					
ANR	2517106	Argument	it		2516964	0					
ANR	2517107	Identifier	it		2516964	0					
ANR	2517108	ReturnStatement	return retval ;	754:1:17350:17363	2516964	20	True				
ANR	2517109	Identifier	retval		2516964	0					
ANR	2517110	ReturnType	R_API bool		2516964	1					
ANR	2517111	Identifier	r_sign_add_vars		2516964	2					
ANR	2517112	ParameterList	"RAnal * a , const char * name , RList * vars"		2516964	3					
ANR	2517113	Parameter	RAnal * a	731:27:16833:16840	2516964	0	True				
ANR	2517114	ParameterType	RAnal *		2516964	0					
ANR	2517115	Identifier	a		2516964	1					
ANR	2517116	Parameter	const char * name	731:37:16843:16858	2516964	1	True				
ANR	2517117	ParameterType	const char *		2516964	0					
ANR	2517118	Identifier	name		2516964	1					
ANR	2517119	Parameter	RList * vars	731:55:16861:16871	2516964	2	True				
ANR	2517120	ParameterType	RList *		2516964	0					
ANR	2517121	Identifier	vars		2516964	1					
ANR	2517122	CFGEntryNode	ENTRY		2516964		True				
ANR	2517123	CFGExitNode	EXIT		2516964		True				
ANR	2517124	Symbol	it -> vars		2516964						
ANR	2517125	Symbol	a		2516964						
ANR	2517126	Symbol	r_sign_item_new		2516964						
ANR	2517127	Symbol	r_list_newf		2516964						
ANR	2517128	Symbol	var		2516964						
ANR	2517129	Symbol	it -> name		2516964						
ANR	2517130	Symbol	false		2516964						
ANR	2517131	Symbol	iter		2516964						
ANR	2517132	Symbol	it		2516964						
ANR	2517133	Symbol	& a -> zign_spaces		2516964						
ANR	2517134	Symbol	retval		2516964						
ANR	2517135	Symbol	it -> space		2516964						
ANR	2517136	Symbol	addItem		2516964						
ANR	2517137	Symbol	* it		2516964						
ANR	2517138	Symbol	name		2516964						
ANR	2517139	Symbol	vars		2516964						
ANR	2517140	Symbol	strdup		2516964						
ANR	2517141	Symbol	free		2516964						
ANR	2517142	Symbol	r_spaces_current		2516964						
ANR	2517143	Symbol	r_str_new		2516964						
ANR	2517144	Function	r_sign_add_refs	757:0:17368:17914							
ANR	2517145	FunctionDef	"r_sign_add_refs (RAnal * a , const char * name , RList * refs)"		2517144	0					
ANR	2517146	CompoundStatement		757:68:17436:17914	2517144	0					
ANR	2517147	ExpressionStatement	"r_return_val_if_fail ( a && name && refs , false )"	758:1:17439:17486	2517144	0	True				
ANR	2517148	CallExpression	"r_return_val_if_fail ( a && name && refs , false )"		2517144	0					
ANR	2517149	Callee	r_return_val_if_fail		2517144	0					
ANR	2517150	Identifier	r_return_val_if_fail		2517144	0					
ANR	2517151	ArgumentList	a && name && refs		2517144	1					
ANR	2517152	Argument	a && name && refs		2517144	0					
ANR	2517153	AndExpression	a && name && refs		2517144	0		&&			
ANR	2517154	Identifier	a		2517144	0					
ANR	2517155	AndExpression	name && refs		2517144	1		&&			
ANR	2517156	Identifier	name		2517144	0					
ANR	2517157	Identifier	refs		2517144	1					
ANR	2517158	Argument	false		2517144	1					
ANR	2517159	Identifier	false		2517144	0					
ANR	2517160	IdentifierDeclStatement	char * ref ;	760:1:17490:17499	2517144	1	True				
ANR	2517161	IdentifierDecl	* ref		2517144	0					
ANR	2517162	IdentifierDeclType	char *		2517144	0					
ANR	2517163	Identifier	ref		2517144	1					
ANR	2517164	IdentifierDeclStatement	RListIter * iter ;	761:1:17502:17517	2517144	2	True				
ANR	2517165	IdentifierDecl	* iter		2517144	0					
ANR	2517166	IdentifierDeclType	RListIter *		2517144	0					
ANR	2517167	Identifier	iter		2517144	1					
ANR	2517168	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	762:1:17520:17554	2517144	3	True				
ANR	2517169	IdentifierDecl	* it = r_sign_item_new ( )		2517144	0					
ANR	2517170	IdentifierDeclType	RSignItem *		2517144	0					
ANR	2517171	Identifier	it		2517144	1					
ANR	2517172	AssignmentExpression	* it = r_sign_item_new ( )		2517144	2		=			
ANR	2517173	Identifier	it		2517144	0					
ANR	2517174	CallExpression	r_sign_item_new ( )		2517144	1					
ANR	2517175	Callee	r_sign_item_new		2517144	0					
ANR	2517176	Identifier	r_sign_item_new		2517144	0					
ANR	2517177	ArgumentList			2517144	1					
ANR	2517178	IfStatement	if ( ! it )		2517144	4					
ANR	2517179	Condition	! it	763:5:17561:17563	2517144	0	True				
ANR	2517180	UnaryOperationExpression	! it		2517144	0					
ANR	2517181	UnaryOperator	!		2517144	0					
ANR	2517182	Identifier	it		2517144	1					
ANR	2517183	CompoundStatement		7:10:129:129	2517144	1					
ANR	2517184	ReturnStatement	return false ;	764:2:17570:17582	2517144	0	True				
ANR	2517185	Identifier	false		2517144	0					
ANR	2517186	ExpressionStatement	it -> name = r_str_new ( name )	766:1:17588:17615	2517144	5	True				
ANR	2517187	AssignmentExpression	it -> name = r_str_new ( name )		2517144	0		=			
ANR	2517188	PtrMemberAccess	it -> name		2517144	0					
ANR	2517189	Identifier	it		2517144	0					
ANR	2517190	Identifier	name		2517144	1					
ANR	2517191	CallExpression	r_str_new ( name )		2517144	1					
ANR	2517192	Callee	r_str_new		2517144	0					
ANR	2517193	Identifier	r_str_new		2517144	0					
ANR	2517194	ArgumentList	name		2517144	1					
ANR	2517195	Argument	name		2517144	0					
ANR	2517196	Identifier	name		2517144	0					
ANR	2517197	IfStatement	if ( ! it -> name )		2517144	6					
ANR	2517198	Condition	! it -> name	767:5:17622:17630	2517144	0	True				
ANR	2517199	UnaryOperationExpression	! it -> name		2517144	0					
ANR	2517200	UnaryOperator	!		2517144	0					
ANR	2517201	PtrMemberAccess	it -> name		2517144	1					
ANR	2517202	Identifier	it		2517144	0					
ANR	2517203	Identifier	name		2517144	1					
ANR	2517204	CompoundStatement		11:16:196:196	2517144	1					
ANR	2517205	ExpressionStatement	free ( it )	768:2:17637:17646	2517144	0	True				
ANR	2517206	CallExpression	free ( it )		2517144	0					
ANR	2517207	Callee	free		2517144	0					
ANR	2517208	Identifier	free		2517144	0					
ANR	2517209	ArgumentList	it		2517144	1					
ANR	2517210	Argument	it		2517144	0					
ANR	2517211	Identifier	it		2517144	0					
ANR	2517212	ReturnStatement	return false ;	769:2:17650:17662	2517144	1	True				
ANR	2517213	Identifier	false		2517144	0					
ANR	2517214	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	771:1:17668:17714	2517144	7	True				
ANR	2517215	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		2517144	0		=			
ANR	2517216	PtrMemberAccess	it -> space		2517144	0					
ANR	2517217	Identifier	it		2517144	0					
ANR	2517218	Identifier	space		2517144	1					
ANR	2517219	CallExpression	r_spaces_current ( & a -> zign_spaces )		2517144	1					
ANR	2517220	Callee	r_spaces_current		2517144	0					
ANR	2517221	Identifier	r_spaces_current		2517144	0					
ANR	2517222	ArgumentList	& a -> zign_spaces		2517144	1					
ANR	2517223	Argument	& a -> zign_spaces		2517144	0					
ANR	2517224	UnaryOperationExpression	& a -> zign_spaces		2517144	0					
ANR	2517225	UnaryOperator	&		2517144	0					
ANR	2517226	PtrMemberAccess	a -> zign_spaces		2517144	1					
ANR	2517227	Identifier	a		2517144	0					
ANR	2517228	Identifier	zign_spaces		2517144	1					
ANR	2517229	ExpressionStatement	it -> refs = r_list_newf ( ( RListFree ) free )	772:1:17717:17758	2517144	8	True				
ANR	2517230	AssignmentExpression	it -> refs = r_list_newf ( ( RListFree ) free )		2517144	0		=			
ANR	2517231	PtrMemberAccess	it -> refs		2517144	0					
ANR	2517232	Identifier	it		2517144	0					
ANR	2517233	Identifier	refs		2517144	1					
ANR	2517234	CallExpression	r_list_newf ( ( RListFree ) free )		2517144	1					
ANR	2517235	Callee	r_list_newf		2517144	0					
ANR	2517236	Identifier	r_list_newf		2517144	0					
ANR	2517237	ArgumentList	( RListFree ) free		2517144	1					
ANR	2517238	Argument	( RListFree ) free		2517144	0					
ANR	2517239	CastExpression	( RListFree ) free		2517144	0					
ANR	2517240	CastTarget	RListFree		2517144	0					
ANR	2517241	Identifier	free		2517144	1					
ANR	2517242	Statement	r_list_foreach	773:1:17761:17774	2517144	9	True				
ANR	2517243	Statement	(	773:16:17776:17776	2517144	10	True				
ANR	2517244	Statement	refs	773:17:17777:17780	2517144	11	True				
ANR	2517245	Statement	","	773:21:17781:17781	2517144	12	True				
ANR	2517246	Statement	iter	773:23:17783:17786	2517144	13	True				
ANR	2517247	Statement	","	773:27:17787:17787	2517144	14	True				
ANR	2517248	Statement	ref	773:29:17789:17791	2517144	15	True				
ANR	2517249	Statement	)	773:32:17792:17792	2517144	16	True				
ANR	2517250	CompoundStatement		17:34:357:357	2517144	17					
ANR	2517251	ExpressionStatement	"r_list_append ( it -> refs , strdup ( ref ) )"	774:2:17798:17836	2517144	0	True				
ANR	2517252	CallExpression	"r_list_append ( it -> refs , strdup ( ref ) )"		2517144	0					
ANR	2517253	Callee	r_list_append		2517144	0					
ANR	2517254	Identifier	r_list_append		2517144	0					
ANR	2517255	ArgumentList	it -> refs		2517144	1					
ANR	2517256	Argument	it -> refs		2517144	0					
ANR	2517257	PtrMemberAccess	it -> refs		2517144	0					
ANR	2517258	Identifier	it		2517144	0					
ANR	2517259	Identifier	refs		2517144	1					
ANR	2517260	Argument	strdup ( ref )		2517144	1					
ANR	2517261	CallExpression	strdup ( ref )		2517144	0					
ANR	2517262	Callee	strdup		2517144	0					
ANR	2517263	Identifier	strdup		2517144	0					
ANR	2517264	ArgumentList	ref		2517144	1					
ANR	2517265	Argument	ref		2517144	0					
ANR	2517266	Identifier	ref		2517144	0					
ANR	2517267	IdentifierDeclStatement	"bool retval = addItem ( a , it ) ;"	776:1:17842:17871	2517144	18	True				
ANR	2517268	IdentifierDecl	"retval = addItem ( a , it )"		2517144	0					
ANR	2517269	IdentifierDeclType	bool		2517144	0					
ANR	2517270	Identifier	retval		2517144	1					
ANR	2517271	AssignmentExpression	"retval = addItem ( a , it )"		2517144	2		=			
ANR	2517272	Identifier	retval		2517144	0					
ANR	2517273	CallExpression	"addItem ( a , it )"		2517144	1					
ANR	2517274	Callee	addItem		2517144	0					
ANR	2517275	Identifier	addItem		2517144	0					
ANR	2517276	ArgumentList	a		2517144	1					
ANR	2517277	Argument	a		2517144	0					
ANR	2517278	Identifier	a		2517144	0					
ANR	2517279	Argument	it		2517144	1					
ANR	2517280	Identifier	it		2517144	0					
ANR	2517281	ExpressionStatement	r_sign_item_free ( it )	777:1:17874:17895	2517144	19	True				
ANR	2517282	CallExpression	r_sign_item_free ( it )		2517144	0					
ANR	2517283	Callee	r_sign_item_free		2517144	0					
ANR	2517284	Identifier	r_sign_item_free		2517144	0					
ANR	2517285	ArgumentList	it		2517144	1					
ANR	2517286	Argument	it		2517144	0					
ANR	2517287	Identifier	it		2517144	0					
ANR	2517288	ReturnStatement	return retval ;	779:1:17899:17912	2517144	20	True				
ANR	2517289	Identifier	retval		2517144	0					
ANR	2517290	ReturnType	R_API bool		2517144	1					
ANR	2517291	Identifier	r_sign_add_refs		2517144	2					
ANR	2517292	ParameterList	"RAnal * a , const char * name , RList * refs"		2517144	3					
ANR	2517293	Parameter	RAnal * a	757:27:17395:17402	2517144	0	True				
ANR	2517294	ParameterType	RAnal *		2517144	0					
ANR	2517295	Identifier	a		2517144	1					
ANR	2517296	Parameter	const char * name	757:37:17405:17420	2517144	1	True				
ANR	2517297	ParameterType	const char *		2517144	0					
ANR	2517298	Identifier	name		2517144	1					
ANR	2517299	Parameter	RList * refs	757:55:17423:17433	2517144	2	True				
ANR	2517300	ParameterType	RList *		2517144	0					
ANR	2517301	Identifier	refs		2517144	1					
ANR	2517302	CFGEntryNode	ENTRY		2517144		True				
ANR	2517303	CFGExitNode	EXIT		2517144		True				
ANR	2517304	Symbol	a		2517144						
ANR	2517305	Symbol	r_sign_item_new		2517144						
ANR	2517306	Symbol	r_list_newf		2517144						
ANR	2517307	Symbol	it -> name		2517144						
ANR	2517308	Symbol	false		2517144						
ANR	2517309	Symbol	iter		2517144						
ANR	2517310	Symbol	it		2517144						
ANR	2517311	Symbol	& a -> zign_spaces		2517144						
ANR	2517312	Symbol	retval		2517144						
ANR	2517313	Symbol	it -> space		2517144						
ANR	2517314	Symbol	addItem		2517144						
ANR	2517315	Symbol	ref		2517144						
ANR	2517316	Symbol	* it		2517144						
ANR	2517317	Symbol	refs		2517144						
ANR	2517318	Symbol	name		2517144						
ANR	2517319	Symbol	strdup		2517144						
ANR	2517320	Symbol	free		2517144						
ANR	2517321	Symbol	r_spaces_current		2517144						
ANR	2517322	Symbol	r_str_new		2517144						
ANR	2517323	Symbol	it -> refs		2517144						
ANR	2517324	Function	r_sign_add_xrefs	782:0:17917:18483							
ANR	2517325	FunctionDef	"r_sign_add_xrefs (RAnal * a , const char * name , RList * xrefs)"		2517324	0					
ANR	2517326	CompoundStatement		782:70:17987:18483	2517324	0					
ANR	2517327	ExpressionStatement	"r_return_val_if_fail ( a && name && xrefs , false )"	783:1:17990:18038	2517324	0	True				
ANR	2517328	CallExpression	"r_return_val_if_fail ( a && name && xrefs , false )"		2517324	0					
ANR	2517329	Callee	r_return_val_if_fail		2517324	0					
ANR	2517330	Identifier	r_return_val_if_fail		2517324	0					
ANR	2517331	ArgumentList	a && name && xrefs		2517324	1					
ANR	2517332	Argument	a && name && xrefs		2517324	0					
ANR	2517333	AndExpression	a && name && xrefs		2517324	0		&&			
ANR	2517334	Identifier	a		2517324	0					
ANR	2517335	AndExpression	name && xrefs		2517324	1		&&			
ANR	2517336	Identifier	name		2517324	0					
ANR	2517337	Identifier	xrefs		2517324	1					
ANR	2517338	Argument	false		2517324	1					
ANR	2517339	Identifier	false		2517324	0					
ANR	2517340	IdentifierDeclStatement	RListIter * iter = NULL ;	785:1:18042:18064	2517324	1	True				
ANR	2517341	IdentifierDecl	* iter = NULL		2517324	0					
ANR	2517342	IdentifierDeclType	RListIter *		2517324	0					
ANR	2517343	Identifier	iter		2517324	1					
ANR	2517344	AssignmentExpression	* iter = NULL		2517324	2		=			
ANR	2517345	Identifier	NULL		2517324	0					
ANR	2517346	Identifier	NULL		2517324	1					
ANR	2517347	IdentifierDeclStatement	char * ref = NULL ;	786:1:18067:18083	2517324	2	True				
ANR	2517348	IdentifierDecl	* ref = NULL		2517324	0					
ANR	2517349	IdentifierDeclType	char *		2517324	0					
ANR	2517350	Identifier	ref		2517324	1					
ANR	2517351	AssignmentExpression	* ref = NULL		2517324	2		=			
ANR	2517352	Identifier	NULL		2517324	0					
ANR	2517353	Identifier	NULL		2517324	1					
ANR	2517354	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	787:1:18086:18120	2517324	3	True				
ANR	2517355	IdentifierDecl	* it = r_sign_item_new ( )		2517324	0					
ANR	2517356	IdentifierDeclType	RSignItem *		2517324	0					
ANR	2517357	Identifier	it		2517324	1					
ANR	2517358	AssignmentExpression	* it = r_sign_item_new ( )		2517324	2		=			
ANR	2517359	Identifier	it		2517324	0					
ANR	2517360	CallExpression	r_sign_item_new ( )		2517324	1					
ANR	2517361	Callee	r_sign_item_new		2517324	0					
ANR	2517362	Identifier	r_sign_item_new		2517324	0					
ANR	2517363	ArgumentList			2517324	1					
ANR	2517364	IfStatement	if ( ! it )		2517324	4					
ANR	2517365	Condition	! it	788:5:18127:18129	2517324	0	True				
ANR	2517366	UnaryOperationExpression	! it		2517324	0					
ANR	2517367	UnaryOperator	!		2517324	0					
ANR	2517368	Identifier	it		2517324	1					
ANR	2517369	CompoundStatement		7:10:144:144	2517324	1					
ANR	2517370	ReturnStatement	return false ;	789:2:18136:18148	2517324	0	True				
ANR	2517371	Identifier	false		2517324	0					
ANR	2517372	ExpressionStatement	it -> name = r_str_new ( name )	791:1:18154:18181	2517324	5	True				
ANR	2517373	AssignmentExpression	it -> name = r_str_new ( name )		2517324	0		=			
ANR	2517374	PtrMemberAccess	it -> name		2517324	0					
ANR	2517375	Identifier	it		2517324	0					
ANR	2517376	Identifier	name		2517324	1					
ANR	2517377	CallExpression	r_str_new ( name )		2517324	1					
ANR	2517378	Callee	r_str_new		2517324	0					
ANR	2517379	Identifier	r_str_new		2517324	0					
ANR	2517380	ArgumentList	name		2517324	1					
ANR	2517381	Argument	name		2517324	0					
ANR	2517382	Identifier	name		2517324	0					
ANR	2517383	IfStatement	if ( ! it -> name )		2517324	6					
ANR	2517384	Condition	! it -> name	792:5:18188:18196	2517324	0	True				
ANR	2517385	UnaryOperationExpression	! it -> name		2517324	0					
ANR	2517386	UnaryOperator	!		2517324	0					
ANR	2517387	PtrMemberAccess	it -> name		2517324	1					
ANR	2517388	Identifier	it		2517324	0					
ANR	2517389	Identifier	name		2517324	1					
ANR	2517390	CompoundStatement		11:16:211:211	2517324	1					
ANR	2517391	ExpressionStatement	free ( it )	793:2:18203:18212	2517324	0	True				
ANR	2517392	CallExpression	free ( it )		2517324	0					
ANR	2517393	Callee	free		2517324	0					
ANR	2517394	Identifier	free		2517324	0					
ANR	2517395	ArgumentList	it		2517324	1					
ANR	2517396	Argument	it		2517324	0					
ANR	2517397	Identifier	it		2517324	0					
ANR	2517398	ReturnStatement	return false ;	794:2:18216:18228	2517324	1	True				
ANR	2517399	Identifier	false		2517324	0					
ANR	2517400	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	796:1:18234:18280	2517324	7	True				
ANR	2517401	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		2517324	0		=			
ANR	2517402	PtrMemberAccess	it -> space		2517324	0					
ANR	2517403	Identifier	it		2517324	0					
ANR	2517404	Identifier	space		2517324	1					
ANR	2517405	CallExpression	r_spaces_current ( & a -> zign_spaces )		2517324	1					
ANR	2517406	Callee	r_spaces_current		2517324	0					
ANR	2517407	Identifier	r_spaces_current		2517324	0					
ANR	2517408	ArgumentList	& a -> zign_spaces		2517324	1					
ANR	2517409	Argument	& a -> zign_spaces		2517324	0					
ANR	2517410	UnaryOperationExpression	& a -> zign_spaces		2517324	0					
ANR	2517411	UnaryOperator	&		2517324	0					
ANR	2517412	PtrMemberAccess	a -> zign_spaces		2517324	1					
ANR	2517413	Identifier	a		2517324	0					
ANR	2517414	Identifier	zign_spaces		2517324	1					
ANR	2517415	ExpressionStatement	it -> xrefs = r_list_newf ( ( RListFree ) free )	797:1:18283:18325	2517324	8	True				
ANR	2517416	AssignmentExpression	it -> xrefs = r_list_newf ( ( RListFree ) free )		2517324	0		=			
ANR	2517417	PtrMemberAccess	it -> xrefs		2517324	0					
ANR	2517418	Identifier	it		2517324	0					
ANR	2517419	Identifier	xrefs		2517324	1					
ANR	2517420	CallExpression	r_list_newf ( ( RListFree ) free )		2517324	1					
ANR	2517421	Callee	r_list_newf		2517324	0					
ANR	2517422	Identifier	r_list_newf		2517324	0					
ANR	2517423	ArgumentList	( RListFree ) free		2517324	1					
ANR	2517424	Argument	( RListFree ) free		2517324	0					
ANR	2517425	CastExpression	( RListFree ) free		2517324	0					
ANR	2517426	CastTarget	RListFree		2517324	0					
ANR	2517427	Identifier	free		2517324	1					
ANR	2517428	Statement	r_list_foreach	798:1:18328:18341	2517324	9	True				
ANR	2517429	Statement	(	798:16:18343:18343	2517324	10	True				
ANR	2517430	Statement	xrefs	798:17:18344:18348	2517324	11	True				
ANR	2517431	Statement	","	798:22:18349:18349	2517324	12	True				
ANR	2517432	Statement	iter	798:24:18351:18354	2517324	13	True				
ANR	2517433	Statement	","	798:28:18355:18355	2517324	14	True				
ANR	2517434	Statement	ref	798:30:18357:18359	2517324	15	True				
ANR	2517435	Statement	)	798:33:18360:18360	2517324	16	True				
ANR	2517436	CompoundStatement		17:35:374:374	2517324	17					
ANR	2517437	ExpressionStatement	"r_list_append ( it -> xrefs , strdup ( ref ) )"	799:2:18366:18405	2517324	0	True				
ANR	2517438	CallExpression	"r_list_append ( it -> xrefs , strdup ( ref ) )"		2517324	0					
ANR	2517439	Callee	r_list_append		2517324	0					
ANR	2517440	Identifier	r_list_append		2517324	0					
ANR	2517441	ArgumentList	it -> xrefs		2517324	1					
ANR	2517442	Argument	it -> xrefs		2517324	0					
ANR	2517443	PtrMemberAccess	it -> xrefs		2517324	0					
ANR	2517444	Identifier	it		2517324	0					
ANR	2517445	Identifier	xrefs		2517324	1					
ANR	2517446	Argument	strdup ( ref )		2517324	1					
ANR	2517447	CallExpression	strdup ( ref )		2517324	0					
ANR	2517448	Callee	strdup		2517324	0					
ANR	2517449	Identifier	strdup		2517324	0					
ANR	2517450	ArgumentList	ref		2517324	1					
ANR	2517451	Argument	ref		2517324	0					
ANR	2517452	Identifier	ref		2517324	0					
ANR	2517453	IdentifierDeclStatement	"bool retval = addItem ( a , it ) ;"	801:1:18411:18440	2517324	18	True				
ANR	2517454	IdentifierDecl	"retval = addItem ( a , it )"		2517324	0					
ANR	2517455	IdentifierDeclType	bool		2517324	0					
ANR	2517456	Identifier	retval		2517324	1					
ANR	2517457	AssignmentExpression	"retval = addItem ( a , it )"		2517324	2		=			
ANR	2517458	Identifier	retval		2517324	0					
ANR	2517459	CallExpression	"addItem ( a , it )"		2517324	1					
ANR	2517460	Callee	addItem		2517324	0					
ANR	2517461	Identifier	addItem		2517324	0					
ANR	2517462	ArgumentList	a		2517324	1					
ANR	2517463	Argument	a		2517324	0					
ANR	2517464	Identifier	a		2517324	0					
ANR	2517465	Argument	it		2517324	1					
ANR	2517466	Identifier	it		2517324	0					
ANR	2517467	ExpressionStatement	r_sign_item_free ( it )	802:1:18443:18464	2517324	19	True				
ANR	2517468	CallExpression	r_sign_item_free ( it )		2517324	0					
ANR	2517469	Callee	r_sign_item_free		2517324	0					
ANR	2517470	Identifier	r_sign_item_free		2517324	0					
ANR	2517471	ArgumentList	it		2517324	1					
ANR	2517472	Argument	it		2517324	0					
ANR	2517473	Identifier	it		2517324	0					
ANR	2517474	ReturnStatement	return retval ;	804:1:18468:18481	2517324	20	True				
ANR	2517475	Identifier	retval		2517324	0					
ANR	2517476	ReturnType	R_API bool		2517324	1					
ANR	2517477	Identifier	r_sign_add_xrefs		2517324	2					
ANR	2517478	ParameterList	"RAnal * a , const char * name , RList * xrefs"		2517324	3					
ANR	2517479	Parameter	RAnal * a	782:28:17945:17952	2517324	0	True				
ANR	2517480	ParameterType	RAnal *		2517324	0					
ANR	2517481	Identifier	a		2517324	1					
ANR	2517482	Parameter	const char * name	782:38:17955:17970	2517324	1	True				
ANR	2517483	ParameterType	const char *		2517324	0					
ANR	2517484	Identifier	name		2517324	1					
ANR	2517485	Parameter	RList * xrefs	782:56:17973:17984	2517324	2	True				
ANR	2517486	ParameterType	RList *		2517324	0					
ANR	2517487	Identifier	xrefs		2517324	1					
ANR	2517488	CFGEntryNode	ENTRY		2517324		True				
ANR	2517489	CFGExitNode	EXIT		2517324		True				
ANR	2517490	Symbol	a		2517324						
ANR	2517491	Symbol	r_sign_item_new		2517324						
ANR	2517492	Symbol	NULL		2517324						
ANR	2517493	Symbol	r_list_newf		2517324						
ANR	2517494	Symbol	it -> name		2517324						
ANR	2517495	Symbol	xrefs		2517324						
ANR	2517496	Symbol	false		2517324						
ANR	2517497	Symbol	iter		2517324						
ANR	2517498	Symbol	it		2517324						
ANR	2517499	Symbol	& a -> zign_spaces		2517324						
ANR	2517500	Symbol	retval		2517324						
ANR	2517501	Symbol	it -> space		2517324						
ANR	2517502	Symbol	addItem		2517324						
ANR	2517503	Symbol	ref		2517324						
ANR	2517504	Symbol	* it		2517324						
ANR	2517505	Symbol	name		2517324						
ANR	2517506	Symbol	it -> xrefs		2517324						
ANR	2517507	Symbol	strdup		2517324						
ANR	2517508	Symbol	free		2517324						
ANR	2517509	Symbol	r_spaces_current		2517324						
ANR	2517510	Symbol	r_str_new		2517324						
ANR	2517511	ClassDef	ctxDeleteCB	807:0:18486:18550							
ANR	2517512	DeclStmt									
ANR	2517513	Decl							RAnal	RAnal *	anal
ANR	2517514	DeclStmt									
ANR	2517515	Decl							char	char [ R_SIGN_KEY_MAXSZ ]	buf
ANR	2517516	Function	deleteBySpaceCB	812:0:18554:18788							
ANR	2517517	FunctionDef	"deleteBySpaceCB (void * user , const char * k , const char * v)"		2517516	0					
ANR	2517518	CompoundStatement		812:69:18623:18788	2517516	0					
ANR	2517519	IdentifierDeclStatement	struct ctxDeleteCB * ctx = ( struct ctxDeleteCB * ) user ;	813:1:18626:18679	2517516	0	True				
ANR	2517520	IdentifierDecl	* ctx = ( struct ctxDeleteCB * ) user		2517516	0					
ANR	2517521	IdentifierDeclType	struct ctxDeleteCB *		2517516	0					
ANR	2517522	Identifier	ctx		2517516	1					
ANR	2517523	AssignmentExpression	* ctx = ( struct ctxDeleteCB * ) user		2517516	2		=			
ANR	2517524	Identifier	ctx		2517516	0					
ANR	2517525	CastExpression	( struct ctxDeleteCB * ) user		2517516	1					
ANR	2517526	CastTarget	struct ctxDeleteCB *		2517516	0					
ANR	2517527	Identifier	user		2517516	1					
ANR	2517528	IfStatement	"if ( ! strncmp ( k , ctx -> buf , strlen ( ctx -> buf ) ) )"		2517516	1					
ANR	2517529	Condition	"! strncmp ( k , ctx -> buf , strlen ( ctx -> buf ) )"	814:5:18686:18726	2517516	0	True				
ANR	2517530	UnaryOperationExpression	"! strncmp ( k , ctx -> buf , strlen ( ctx -> buf ) )"		2517516	0					
ANR	2517531	UnaryOperator	!		2517516	0					
ANR	2517532	CallExpression	"strncmp ( k , ctx -> buf , strlen ( ctx -> buf ) )"		2517516	1					
ANR	2517533	Callee	strncmp		2517516	0					
ANR	2517534	Identifier	strncmp		2517516	0					
ANR	2517535	ArgumentList	k		2517516	1					
ANR	2517536	Argument	k		2517516	0					
ANR	2517537	Identifier	k		2517516	0					
ANR	2517538	Argument	ctx -> buf		2517516	1					
ANR	2517539	PtrMemberAccess	ctx -> buf		2517516	0					
ANR	2517540	Identifier	ctx		2517516	0					
ANR	2517541	Identifier	buf		2517516	1					
ANR	2517542	Argument	strlen ( ctx -> buf )		2517516	2					
ANR	2517543	CallExpression	strlen ( ctx -> buf )		2517516	0					
ANR	2517544	Callee	strlen		2517516	0					
ANR	2517545	Identifier	strlen		2517516	0					
ANR	2517546	ArgumentList	ctx -> buf		2517516	1					
ANR	2517547	Argument	ctx -> buf		2517516	0					
ANR	2517548	PtrMemberAccess	ctx -> buf		2517516	0					
ANR	2517549	Identifier	ctx		2517516	0					
ANR	2517550	Identifier	buf		2517516	1					
ANR	2517551	CompoundStatement		3:48:105:105	2517516	1					
ANR	2517552	ExpressionStatement	"sdb_remove ( ctx -> anal -> sdb_zigns , k , 0 )"	815:2:18733:18772	2517516	0	True				
ANR	2517553	CallExpression	"sdb_remove ( ctx -> anal -> sdb_zigns , k , 0 )"		2517516	0					
ANR	2517554	Callee	sdb_remove		2517516	0					
ANR	2517555	Identifier	sdb_remove		2517516	0					
ANR	2517556	ArgumentList	ctx -> anal -> sdb_zigns		2517516	1					
ANR	2517557	Argument	ctx -> anal -> sdb_zigns		2517516	0					
ANR	2517558	PtrMemberAccess	ctx -> anal -> sdb_zigns		2517516	0					
ANR	2517559	PtrMemberAccess	ctx -> anal		2517516	0					
ANR	2517560	Identifier	ctx		2517516	0					
ANR	2517561	Identifier	anal		2517516	1					
ANR	2517562	Identifier	sdb_zigns		2517516	1					
ANR	2517563	Argument	k		2517516	1					
ANR	2517564	Identifier	k		2517516	0					
ANR	2517565	Argument	0		2517516	2					
ANR	2517566	PrimaryExpression	0		2517516	0					
ANR	2517567	ReturnStatement	return 1 ;	817:1:18778:18786	2517516	2	True				
ANR	2517568	PrimaryExpression	1		2517516	0					
ANR	2517569	ReturnType	static int		2517516	1					
ANR	2517570	Identifier	deleteBySpaceCB		2517516	2					
ANR	2517571	ParameterList	"void * user , const char * k , const char * v"		2517516	3					
ANR	2517572	Parameter	void * user	812:27:18581:18590	2517516	0	True				
ANR	2517573	ParameterType	void *		2517516	0					
ANR	2517574	Identifier	user		2517516	1					
ANR	2517575	Parameter	const char * k	812:39:18593:18605	2517516	1	True				
ANR	2517576	ParameterType	const char *		2517516	0					
ANR	2517577	Identifier	k		2517516	1					
ANR	2517578	Parameter	const char * v	812:54:18608:18620	2517516	2	True				
ANR	2517579	ParameterType	const char *		2517516	0					
ANR	2517580	Identifier	v		2517516	1					
ANR	2517581	CFGEntryNode	ENTRY		2517516		True				
ANR	2517582	CFGExitNode	EXIT		2517516		True				
ANR	2517583	Symbol	strlen		2517516						
ANR	2517584	Symbol	strncmp		2517516						
ANR	2517585	Symbol	* ctx -> anal		2517516						
ANR	2517586	Symbol	v		2517516						
ANR	2517587	Symbol	ctx		2517516						
ANR	2517588	Symbol	ctx -> anal -> sdb_zigns		2517516						
ANR	2517589	Symbol	ctx -> anal		2517516						
ANR	2517590	Symbol	k		2517516						
ANR	2517591	Symbol	* * ctx		2517516						
ANR	2517592	Symbol	ctx -> buf		2517516						
ANR	2517593	Symbol	user		2517516						
ANR	2517594	Symbol	* ctx		2517516						
ANR	2517595	Function	r_sign_delete	820:0:18791:19366							
ANR	2517596	FunctionDef	"r_sign_delete (RAnal * a , const char * name)"		2517595	0					
ANR	2517597	CompoundStatement		820:53:18844:19366	2517595	0					
ANR	2517598	IdentifierDeclStatement	struct ctxDeleteCB ctx = { 0 } ;	821:1:18847:18875	2517595	0	True				
ANR	2517599	IdentifierDecl	ctx = { 0 }		2517595	0					
ANR	2517600	IdentifierDeclType	struct ctxDeleteCB		2517595	0					
ANR	2517601	Identifier	ctx		2517595	1					
ANR	2517602	AssignmentExpression	ctx = { 0 }		2517595	2		=			
ANR	2517603	Identifier	ctx		2517595	0					
ANR	2517604	InitializerList	0		2517595	1					
ANR	2517605	PrimaryExpression	0		2517595	0					
ANR	2517606	IdentifierDeclStatement	char k [ R_SIGN_KEY_MAXSZ ] ;	822:1:18878:18902	2517595	1	True				
ANR	2517607	IdentifierDecl	k [ R_SIGN_KEY_MAXSZ ]		2517595	0					
ANR	2517608	IdentifierDeclType	char [ R_SIGN_KEY_MAXSZ ]		2517595	0					
ANR	2517609	Identifier	k		2517595	1					
ANR	2517610	Identifier	R_SIGN_KEY_MAXSZ		2517595	2					
ANR	2517611	IfStatement	if ( ! a || ! name )		2517595	2					
ANR	2517612	Condition	! a || ! name	824:5:18910:18920	2517595	0	True				
ANR	2517613	OrExpression	! a || ! name		2517595	0		||			
ANR	2517614	UnaryOperationExpression	! a		2517595	0					
ANR	2517615	UnaryOperator	!		2517595	0					
ANR	2517616	Identifier	a		2517595	1					
ANR	2517617	UnaryOperationExpression	! name		2517595	1					
ANR	2517618	UnaryOperator	!		2517595	0					
ANR	2517619	Identifier	name		2517595	1					
ANR	2517620	CompoundStatement		5:18:78:78	2517595	1					
ANR	2517621	ReturnStatement	return false ;	825:2:18927:18939	2517595	0	True				
ANR	2517622	Identifier	false		2517595	0					
ANR	2517623	IfStatement	if ( * name == '*' )		2517595	3					
ANR	2517624	Condition	* name == '*'	828:5:18970:18981	2517595	0	True				
ANR	2517625	EqualityExpression	* name == '*'		2517595	0		==			
ANR	2517626	UnaryOperationExpression	* name		2517595	0					
ANR	2517627	UnaryOperator	*		2517595	0					
ANR	2517628	Identifier	name		2517595	1					
ANR	2517629	PrimaryExpression	'*'		2517595	1					
ANR	2517630	CompoundStatement		9:19:139:139	2517595	1					
ANR	2517631	IfStatement	if ( ! r_spaces_current ( & a -> zign_spaces ) )		2517595	0					
ANR	2517632	Condition	! r_spaces_current ( & a -> zign_spaces )	829:6:18992:19026	2517595	0	True				
ANR	2517633	UnaryOperationExpression	! r_spaces_current ( & a -> zign_spaces )		2517595	0					
ANR	2517634	UnaryOperator	!		2517595	0					
ANR	2517635	CallExpression	r_spaces_current ( & a -> zign_spaces )		2517595	1					
ANR	2517636	Callee	r_spaces_current		2517595	0					
ANR	2517637	Identifier	r_spaces_current		2517595	0					
ANR	2517638	ArgumentList	& a -> zign_spaces		2517595	1					
ANR	2517639	Argument	& a -> zign_spaces		2517595	0					
ANR	2517640	UnaryOperationExpression	& a -> zign_spaces		2517595	0					
ANR	2517641	UnaryOperator	&		2517595	0					
ANR	2517642	PtrMemberAccess	a -> zign_spaces		2517595	1					
ANR	2517643	Identifier	a		2517595	0					
ANR	2517644	Identifier	zign_spaces		2517595	1					
ANR	2517645	CompoundStatement		10:43:184:184	2517595	1					
ANR	2517646	ExpressionStatement	sdb_reset ( a -> sdb_zigns )	830:3:19034:19058	2517595	0	True				
ANR	2517647	CallExpression	sdb_reset ( a -> sdb_zigns )		2517595	0					
ANR	2517648	Callee	sdb_reset		2517595	0					
ANR	2517649	Identifier	sdb_reset		2517595	0					
ANR	2517650	ArgumentList	a -> sdb_zigns		2517595	1					
ANR	2517651	Argument	a -> sdb_zigns		2517595	0					
ANR	2517652	PtrMemberAccess	a -> sdb_zigns		2517595	0					
ANR	2517653	Identifier	a		2517595	0					
ANR	2517654	Identifier	sdb_zigns		2517595	1					
ANR	2517655	ReturnStatement	return true ;	831:3:19063:19074	2517595	1	True				
ANR	2517656	Identifier	true		2517595	0					
ANR	2517657	ExpressionStatement	ctx . anal = a	833:2:19082:19094	2517595	1	True				
ANR	2517658	AssignmentExpression	ctx . anal = a		2517595	0		=			
ANR	2517659	MemberAccess	ctx . anal		2517595	0					
ANR	2517660	Identifier	ctx		2517595	0					
ANR	2517661	Identifier	anal		2517595	1					
ANR	2517662	Identifier	a		2517595	1					
ANR	2517663	ExpressionStatement	"serializeKey ( a , r_spaces_current ( & a -> zign_spaces ) , """" , ctx . buf )"	834:2:19098:19163	2517595	2	True				
ANR	2517664	CallExpression	"serializeKey ( a , r_spaces_current ( & a -> zign_spaces ) , """" , ctx . buf )"		2517595	0					
ANR	2517665	Callee	serializeKey		2517595	0					
ANR	2517666	Identifier	serializeKey		2517595	0					
ANR	2517667	ArgumentList	a		2517595	1					
ANR	2517668	Argument	a		2517595	0					
ANR	2517669	Identifier	a		2517595	0					
ANR	2517670	Argument	r_spaces_current ( & a -> zign_spaces )		2517595	1					
ANR	2517671	CallExpression	r_spaces_current ( & a -> zign_spaces )		2517595	0					
ANR	2517672	Callee	r_spaces_current		2517595	0					
ANR	2517673	Identifier	r_spaces_current		2517595	0					
ANR	2517674	ArgumentList	& a -> zign_spaces		2517595	1					
ANR	2517675	Argument	& a -> zign_spaces		2517595	0					
ANR	2517676	UnaryOperationExpression	& a -> zign_spaces		2517595	0					
ANR	2517677	UnaryOperator	&		2517595	0					
ANR	2517678	PtrMemberAccess	a -> zign_spaces		2517595	1					
ANR	2517679	Identifier	a		2517595	0					
ANR	2517680	Identifier	zign_spaces		2517595	1					
ANR	2517681	Argument	""""""		2517595	2					
ANR	2517682	PrimaryExpression	""""""		2517595	0					
ANR	2517683	Argument	ctx . buf		2517595	3					
ANR	2517684	MemberAccess	ctx . buf		2517595	0					
ANR	2517685	Identifier	ctx		2517595	0					
ANR	2517686	Identifier	buf		2517595	1					
ANR	2517687	ExpressionStatement	"sdb_foreach ( a -> sdb_zigns , deleteBySpaceCB , & ctx )"	835:2:19167:19216	2517595	3	True				
ANR	2517688	CallExpression	"sdb_foreach ( a -> sdb_zigns , deleteBySpaceCB , & ctx )"		2517595	0					
ANR	2517689	Callee	sdb_foreach		2517595	0					
ANR	2517690	Identifier	sdb_foreach		2517595	0					
ANR	2517691	ArgumentList	a -> sdb_zigns		2517595	1					
ANR	2517692	Argument	a -> sdb_zigns		2517595	0					
ANR	2517693	PtrMemberAccess	a -> sdb_zigns		2517595	0					
ANR	2517694	Identifier	a		2517595	0					
ANR	2517695	Identifier	sdb_zigns		2517595	1					
ANR	2517696	Argument	deleteBySpaceCB		2517595	1					
ANR	2517697	Identifier	deleteBySpaceCB		2517595	0					
ANR	2517698	Argument	& ctx		2517595	2					
ANR	2517699	UnaryOperationExpression	& ctx		2517595	0					
ANR	2517700	UnaryOperator	&		2517595	0					
ANR	2517701	Identifier	ctx		2517595	1					
ANR	2517702	ReturnStatement	return true ;	836:2:19220:19231	2517595	4	True				
ANR	2517703	Identifier	true		2517595	0					
ANR	2517704	ExpressionStatement	"serializeKey ( a , r_spaces_current ( & a -> zign_spaces ) , name , k )"	839:1:19262:19323	2517595	4	True				
ANR	2517705	CallExpression	"serializeKey ( a , r_spaces_current ( & a -> zign_spaces ) , name , k )"		2517595	0					
ANR	2517706	Callee	serializeKey		2517595	0					
ANR	2517707	Identifier	serializeKey		2517595	0					
ANR	2517708	ArgumentList	a		2517595	1					
ANR	2517709	Argument	a		2517595	0					
ANR	2517710	Identifier	a		2517595	0					
ANR	2517711	Argument	r_spaces_current ( & a -> zign_spaces )		2517595	1					
ANR	2517712	CallExpression	r_spaces_current ( & a -> zign_spaces )		2517595	0					
ANR	2517713	Callee	r_spaces_current		2517595	0					
ANR	2517714	Identifier	r_spaces_current		2517595	0					
ANR	2517715	ArgumentList	& a -> zign_spaces		2517595	1					
ANR	2517716	Argument	& a -> zign_spaces		2517595	0					
ANR	2517717	UnaryOperationExpression	& a -> zign_spaces		2517595	0					
ANR	2517718	UnaryOperator	&		2517595	0					
ANR	2517719	PtrMemberAccess	a -> zign_spaces		2517595	1					
ANR	2517720	Identifier	a		2517595	0					
ANR	2517721	Identifier	zign_spaces		2517595	1					
ANR	2517722	Argument	name		2517595	2					
ANR	2517723	Identifier	name		2517595	0					
ANR	2517724	Argument	k		2517595	3					
ANR	2517725	Identifier	k		2517595	0					
ANR	2517726	ReturnStatement	"return sdb_remove ( a -> sdb_zigns , k , 0 ) ;"	840:1:19326:19364	2517595	5	True				
ANR	2517727	CallExpression	"sdb_remove ( a -> sdb_zigns , k , 0 )"		2517595	0					
ANR	2517728	Callee	sdb_remove		2517595	0					
ANR	2517729	Identifier	sdb_remove		2517595	0					
ANR	2517730	ArgumentList	a -> sdb_zigns		2517595	1					
ANR	2517731	Argument	a -> sdb_zigns		2517595	0					
ANR	2517732	PtrMemberAccess	a -> sdb_zigns		2517595	0					
ANR	2517733	Identifier	a		2517595	0					
ANR	2517734	Identifier	sdb_zigns		2517595	1					
ANR	2517735	Argument	k		2517595	1					
ANR	2517736	Identifier	k		2517595	0					
ANR	2517737	Argument	0		2517595	2					
ANR	2517738	PrimaryExpression	0		2517595	0					
ANR	2517739	ReturnType	R_API bool		2517595	1					
ANR	2517740	Identifier	r_sign_delete		2517595	2					
ANR	2517741	ParameterList	"RAnal * a , const char * name"		2517595	3					
ANR	2517742	Parameter	RAnal * a	820:25:18816:18823	2517595	0	True				
ANR	2517743	ParameterType	RAnal *		2517595	0					
ANR	2517744	Identifier	a		2517595	1					
ANR	2517745	Parameter	const char * name	820:35:18826:18841	2517595	1	True				
ANR	2517746	ParameterType	const char *		2517595	0					
ANR	2517747	Identifier	name		2517595	1					
ANR	2517748	CFGEntryNode	ENTRY		2517595		True				
ANR	2517749	CFGExitNode	EXIT		2517595		True				
ANR	2517750	Symbol	* name		2517595						
ANR	2517751	Symbol	a		2517595						
ANR	2517752	Symbol	ctx		2517595						
ANR	2517753	Symbol	false		2517595						
ANR	2517754	Symbol	& ctx		2517595						
ANR	2517755	Symbol	deleteBySpaceCB		2517595						
ANR	2517756	Symbol	k		2517595						
ANR	2517757	Symbol	* a		2517595						
ANR	2517758	Symbol	& a -> zign_spaces		2517595						
ANR	2517759	Symbol	ctx . anal		2517595						
ANR	2517760	Symbol	a -> sdb_zigns		2517595						
ANR	2517761	Symbol	sdb_remove		2517595						
ANR	2517762	Symbol	ctx . buf		2517595						
ANR	2517763	Symbol	name		2517595						
ANR	2517764	Symbol	true		2517595						
ANR	2517765	Symbol	r_spaces_current		2517595						
ANR	2517766	Function	matchBytes	843:0:19369:20258							
ANR	2517767	FunctionDef	"matchBytes (RSignItem * a , RSignItem * b)"		2517766	0					
ANR	2517768	CompoundStatement		843:53:19422:20258	2517766	0					
ANR	2517769	IdentifierDeclStatement	double result = 0.0 ;	844:1:19425:19444	2517766	0	True				
ANR	2517770	IdentifierDecl	result = 0.0		2517766	0					
ANR	2517771	IdentifierDeclType	double		2517766	0					
ANR	2517772	Identifier	result		2517766	1					
ANR	2517773	AssignmentExpression	result = 0.0		2517766	2		=			
ANR	2517774	Identifier	result		2517766	0					
ANR	2517775	PrimaryExpression	0.0		2517766	1					
ANR	2517776	IfStatement	if ( ! a -> bytes || ! b -> bytes )		2517766	1					
ANR	2517777	Condition	! a -> bytes || ! b -> bytes	846:5:19452:19473	2517766	0	True				
ANR	2517778	OrExpression	! a -> bytes || ! b -> bytes		2517766	0		||			
ANR	2517779	UnaryOperationExpression	! a -> bytes		2517766	0					
ANR	2517780	UnaryOperator	!		2517766	0					
ANR	2517781	PtrMemberAccess	a -> bytes		2517766	1					
ANR	2517782	Identifier	a		2517766	0					
ANR	2517783	Identifier	bytes		2517766	1					
ANR	2517784	UnaryOperationExpression	! b -> bytes		2517766	1					
ANR	2517785	UnaryOperator	!		2517766	0					
ANR	2517786	PtrMemberAccess	b -> bytes		2517766	1					
ANR	2517787	Identifier	b		2517766	0					
ANR	2517788	Identifier	bytes		2517766	1					
ANR	2517789	CompoundStatement		4:29:53:53	2517766	1					
ANR	2517790	ReturnStatement	return result ;	847:2:19480:19493	2517766	0	True				
ANR	2517791	Identifier	result		2517766	0					
ANR	2517792	IdentifierDeclStatement	"size_t min_size = R_MIN ( ( size_t ) a -> bytes -> size , ( size_t ) b -> bytes -> size ) ;"	850:1:19500:19574	2517766	2	True				
ANR	2517793	IdentifierDecl	"min_size = R_MIN ( ( size_t ) a -> bytes -> size , ( size_t ) b -> bytes -> size )"		2517766	0					
ANR	2517794	IdentifierDeclType	size_t		2517766	0					
ANR	2517795	Identifier	min_size		2517766	1					
ANR	2517796	AssignmentExpression	"min_size = R_MIN ( ( size_t ) a -> bytes -> size , ( size_t ) b -> bytes -> size )"		2517766	2		=			
ANR	2517797	Identifier	min_size		2517766	0					
ANR	2517798	CallExpression	"R_MIN ( ( size_t ) a -> bytes -> size , ( size_t ) b -> bytes -> size )"		2517766	1					
ANR	2517799	Callee	R_MIN		2517766	0					
ANR	2517800	Identifier	R_MIN		2517766	0					
ANR	2517801	ArgumentList	( size_t ) a -> bytes -> size		2517766	1					
ANR	2517802	Argument	( size_t ) a -> bytes -> size		2517766	0					
ANR	2517803	CastExpression	( size_t ) a -> bytes -> size		2517766	0					
ANR	2517804	CastTarget	size_t		2517766	0					
ANR	2517805	PtrMemberAccess	a -> bytes -> size		2517766	1					
ANR	2517806	PtrMemberAccess	a -> bytes		2517766	0					
ANR	2517807	Identifier	a		2517766	0					
ANR	2517808	Identifier	bytes		2517766	1					
ANR	2517809	Identifier	size		2517766	1					
ANR	2517810	Argument	( size_t ) b -> bytes -> size		2517766	1					
ANR	2517811	CastExpression	( size_t ) b -> bytes -> size		2517766	0					
ANR	2517812	CastTarget	size_t		2517766	0					
ANR	2517813	PtrMemberAccess	b -> bytes -> size		2517766	1					
ANR	2517814	PtrMemberAccess	b -> bytes		2517766	0					
ANR	2517815	Identifier	b		2517766	0					
ANR	2517816	Identifier	bytes		2517766	1					
ANR	2517817	Identifier	size		2517766	1					
ANR	2517818	IfStatement	if ( ! min_size )		2517766	3					
ANR	2517819	Condition	! min_size	851:5:19581:19589	2517766	0	True				
ANR	2517820	UnaryOperationExpression	! min_size		2517766	0					
ANR	2517821	UnaryOperator	!		2517766	0					
ANR	2517822	Identifier	min_size		2517766	1					
ANR	2517823	CompoundStatement		9:16:169:169	2517766	1					
ANR	2517824	ReturnStatement	return result ;	852:2:19596:19609	2517766	0	True				
ANR	2517825	Identifier	result		2517766	0					
ANR	2517826	IdentifierDeclStatement	ut8 * combined_mask = NULL ;	855:1:19616:19641	2517766	4	True				
ANR	2517827	IdentifierDecl	* combined_mask = NULL		2517766	0					
ANR	2517828	IdentifierDeclType	ut8 *		2517766	0					
ANR	2517829	Identifier	combined_mask		2517766	1					
ANR	2517830	AssignmentExpression	* combined_mask = NULL		2517766	2		=			
ANR	2517831	Identifier	NULL		2517766	0					
ANR	2517832	Identifier	NULL		2517766	1					
ANR	2517833	IfStatement	if ( a -> bytes -> mask || b -> bytes -> mask )		2517766	5					
ANR	2517834	Condition	a -> bytes -> mask || b -> bytes -> mask	856:5:19648:19679	2517766	0	True				
ANR	2517835	OrExpression	a -> bytes -> mask || b -> bytes -> mask		2517766	0		||			
ANR	2517836	PtrMemberAccess	a -> bytes -> mask		2517766	0					
ANR	2517837	PtrMemberAccess	a -> bytes		2517766	0					
ANR	2517838	Identifier	a		2517766	0					
ANR	2517839	Identifier	bytes		2517766	1					
ANR	2517840	Identifier	mask		2517766	1					
ANR	2517841	PtrMemberAccess	b -> bytes -> mask		2517766	1					
ANR	2517842	PtrMemberAccess	b -> bytes		2517766	0					
ANR	2517843	Identifier	b		2517766	0					
ANR	2517844	Identifier	bytes		2517766	1					
ANR	2517845	Identifier	mask		2517766	1					
ANR	2517846	CompoundStatement		14:39:259:259	2517766	1					
ANR	2517847	ExpressionStatement	combined_mask = ( ut8 * ) malloc ( min_size )	857:2:19686:19726	2517766	0	True				
ANR	2517848	AssignmentExpression	combined_mask = ( ut8 * ) malloc ( min_size )		2517766	0		=			
ANR	2517849	Identifier	combined_mask		2517766	0					
ANR	2517850	CastExpression	( ut8 * ) malloc ( min_size )		2517766	1					
ANR	2517851	CastTarget	ut8 *		2517766	0					
ANR	2517852	CallExpression	malloc ( min_size )		2517766	1					
ANR	2517853	Callee	malloc		2517766	0					
ANR	2517854	Identifier	malloc		2517766	0					
ANR	2517855	ArgumentList	min_size		2517766	1					
ANR	2517856	Argument	min_size		2517766	0					
ANR	2517857	Identifier	min_size		2517766	0					
ANR	2517858	IfStatement	if ( ! combined_mask )		2517766	1					
ANR	2517859	Condition	! combined_mask	858:6:19734:19747	2517766	0	True				
ANR	2517860	UnaryOperationExpression	! combined_mask		2517766	0					
ANR	2517861	UnaryOperator	!		2517766	0					
ANR	2517862	Identifier	combined_mask		2517766	1					
ANR	2517863	CompoundStatement		16:22:327:327	2517766	1					
ANR	2517864	ReturnStatement	return result ;	859:3:19755:19768	2517766	0	True				
ANR	2517865	Identifier	result		2517766	0					
ANR	2517866	ExpressionStatement	"memcpy ( combined_mask , a -> bytes -> mask , min_size )"	861:2:19776:19824	2517766	2	True				
ANR	2517867	CallExpression	"memcpy ( combined_mask , a -> bytes -> mask , min_size )"		2517766	0					
ANR	2517868	Callee	memcpy		2517766	0					
ANR	2517869	Identifier	memcpy		2517766	0					
ANR	2517870	ArgumentList	combined_mask		2517766	1					
ANR	2517871	Argument	combined_mask		2517766	0					
ANR	2517872	Identifier	combined_mask		2517766	0					
ANR	2517873	Argument	a -> bytes -> mask		2517766	1					
ANR	2517874	PtrMemberAccess	a -> bytes -> mask		2517766	0					
ANR	2517875	PtrMemberAccess	a -> bytes		2517766	0					
ANR	2517876	Identifier	a		2517766	0					
ANR	2517877	Identifier	bytes		2517766	1					
ANR	2517878	Identifier	mask		2517766	1					
ANR	2517879	Argument	min_size		2517766	2					
ANR	2517880	Identifier	min_size		2517766	0					
ANR	2517881	IfStatement	if ( b -> bytes -> mask )		2517766	3					
ANR	2517882	Condition	b -> bytes -> mask	862:6:19832:19845	2517766	0	True				
ANR	2517883	PtrMemberAccess	b -> bytes -> mask		2517766	0					
ANR	2517884	PtrMemberAccess	b -> bytes		2517766	0					
ANR	2517885	Identifier	b		2517766	0					
ANR	2517886	Identifier	bytes		2517766	1					
ANR	2517887	Identifier	mask		2517766	1					
ANR	2517888	CompoundStatement		21:3:430:435	2517766	1					
ANR	2517889	IdentifierDeclStatement	int i ;	863:3:19853:19858	2517766	0	True				
ANR	2517890	IdentifierDecl	i		2517766	0					
ANR	2517891	IdentifierDeclType	int		2517766	0					
ANR	2517892	Identifier	i		2517766	1					
ANR	2517893	ForStatement	for ( i = 0 ; i != min_size ; i ++ )		2517766	1					
ANR	2517894	ForInit	i = 0 ;	864:8:19868:19873	2517766	0	True				
ANR	2517895	AssignmentExpression	i = 0		2517766	0		=			
ANR	2517896	Identifier	i		2517766	0					
ANR	2517897	PrimaryExpression	0		2517766	1					
ANR	2517898	Condition	i != min_size	864:15:19875:19887	2517766	1	True				
ANR	2517899	EqualityExpression	i != min_size		2517766	0		!=			
ANR	2517900	Identifier	i		2517766	0					
ANR	2517901	Identifier	min_size		2517766	1					
ANR	2517902	PostIncDecOperationExpression	i ++	864:30:19890:19892	2517766	2	True				
ANR	2517903	Identifier	i		2517766	0					
ANR	2517904	IncDec	++		2517766	1					
ANR	2517905	CompoundStatement		22:35:472:472	2517766	3					
ANR	2517906	ExpressionStatement	combined_mask [ i ] &= b -> bytes -> mask [ i ]	865:4:19901:19938	2517766	0	True				
ANR	2517907	AssignmentExpression	combined_mask [ i ] &= b -> bytes -> mask [ i ]		2517766	0		&=			
ANR	2517908	ArrayIndexing	combined_mask [ i ]		2517766	0					
ANR	2517909	Identifier	combined_mask		2517766	0					
ANR	2517910	Identifier	i		2517766	1					
ANR	2517911	ArrayIndexing	b -> bytes -> mask [ i ]		2517766	1					
ANR	2517912	PtrMemberAccess	b -> bytes -> mask		2517766	0					
ANR	2517913	PtrMemberAccess	b -> bytes		2517766	0					
ANR	2517914	Identifier	b		2517766	0					
ANR	2517915	Identifier	bytes		2517766	1					
ANR	2517916	Identifier	mask		2517766	1					
ANR	2517917	Identifier	i		2517766	1					
ANR	2517918	IfStatement	"if ( ( combined_mask && ! r_mem_cmp_mask ( a -> bytes -> bytes , b -> bytes -> bytes , combined_mask , min_size ) ) || ( ! combined_mask && ! memcmp ( a -> bytes -> bytes , b -> bytes -> bytes , min_size ) ) )"		2517766	6					
ANR	2517919	Condition	"( combined_mask && ! r_mem_cmp_mask ( a -> bytes -> bytes , b -> bytes -> bytes , combined_mask , min_size ) ) || ( ! combined_mask && ! memcmp ( a -> bytes -> bytes , b -> bytes -> bytes , min_size ) )"	870:5:19958:20129	2517766	0	True				
ANR	2517920	OrExpression	"( combined_mask && ! r_mem_cmp_mask ( a -> bytes -> bytes , b -> bytes -> bytes , combined_mask , min_size ) ) || ( ! combined_mask && ! memcmp ( a -> bytes -> bytes , b -> bytes -> bytes , min_size ) )"		2517766	0		||			
ANR	2517921	AndExpression	"combined_mask && ! r_mem_cmp_mask ( a -> bytes -> bytes , b -> bytes -> bytes , combined_mask , min_size )"		2517766	0		&&			
ANR	2517922	Identifier	combined_mask		2517766	0					
ANR	2517923	UnaryOperationExpression	"! r_mem_cmp_mask ( a -> bytes -> bytes , b -> bytes -> bytes , combined_mask , min_size )"		2517766	1					
ANR	2517924	UnaryOperator	!		2517766	0					
ANR	2517925	CallExpression	"r_mem_cmp_mask ( a -> bytes -> bytes , b -> bytes -> bytes , combined_mask , min_size )"		2517766	1					
ANR	2517926	Callee	r_mem_cmp_mask		2517766	0					
ANR	2517927	Identifier	r_mem_cmp_mask		2517766	0					
ANR	2517928	ArgumentList	a -> bytes -> bytes		2517766	1					
ANR	2517929	Argument	a -> bytes -> bytes		2517766	0					
ANR	2517930	PtrMemberAccess	a -> bytes -> bytes		2517766	0					
ANR	2517931	PtrMemberAccess	a -> bytes		2517766	0					
ANR	2517932	Identifier	a		2517766	0					
ANR	2517933	Identifier	bytes		2517766	1					
ANR	2517934	Identifier	bytes		2517766	1					
ANR	2517935	Argument	b -> bytes -> bytes		2517766	1					
ANR	2517936	PtrMemberAccess	b -> bytes -> bytes		2517766	0					
ANR	2517937	PtrMemberAccess	b -> bytes		2517766	0					
ANR	2517938	Identifier	b		2517766	0					
ANR	2517939	Identifier	bytes		2517766	1					
ANR	2517940	Identifier	bytes		2517766	1					
ANR	2517941	Argument	combined_mask		2517766	2					
ANR	2517942	Identifier	combined_mask		2517766	0					
ANR	2517943	Argument	min_size		2517766	3					
ANR	2517944	Identifier	min_size		2517766	0					
ANR	2517945	AndExpression	"! combined_mask && ! memcmp ( a -> bytes -> bytes , b -> bytes -> bytes , min_size )"		2517766	1		&&			
ANR	2517946	UnaryOperationExpression	! combined_mask		2517766	0					
ANR	2517947	UnaryOperator	!		2517766	0					
ANR	2517948	Identifier	combined_mask		2517766	1					
ANR	2517949	UnaryOperationExpression	"! memcmp ( a -> bytes -> bytes , b -> bytes -> bytes , min_size )"		2517766	1					
ANR	2517950	UnaryOperator	!		2517766	0					
ANR	2517951	CallExpression	"memcmp ( a -> bytes -> bytes , b -> bytes -> bytes , min_size )"		2517766	1					
ANR	2517952	Callee	memcmp		2517766	0					
ANR	2517953	Identifier	memcmp		2517766	0					
ANR	2517954	ArgumentList	a -> bytes -> bytes		2517766	1					
ANR	2517955	Argument	a -> bytes -> bytes		2517766	0					
ANR	2517956	PtrMemberAccess	a -> bytes -> bytes		2517766	0					
ANR	2517957	PtrMemberAccess	a -> bytes		2517766	0					
ANR	2517958	Identifier	a		2517766	0					
ANR	2517959	Identifier	bytes		2517766	1					
ANR	2517960	Identifier	bytes		2517766	1					
ANR	2517961	Argument	b -> bytes -> bytes		2517766	1					
ANR	2517962	PtrMemberAccess	b -> bytes -> bytes		2517766	0					
ANR	2517963	PtrMemberAccess	b -> bytes		2517766	0					
ANR	2517964	Identifier	b		2517766	0					
ANR	2517965	Identifier	bytes		2517766	1					
ANR	2517966	Identifier	bytes		2517766	1					
ANR	2517967	Argument	min_size		2517766	2					
ANR	2517968	Identifier	min_size		2517766	0					
ANR	2517969	CompoundStatement		29:76:709:709	2517766	1					
ANR	2517970	ExpressionStatement	"result = ( double ) min_size / ( double ) R_MAX ( a -> bytes -> size , b -> bytes -> size )"	872:2:20136:20212	2517766	0	True				
ANR	2517971	AssignmentExpression	"result = ( double ) min_size / ( double ) R_MAX ( a -> bytes -> size , b -> bytes -> size )"		2517766	0		=			
ANR	2517972	Identifier	result		2517766	0					
ANR	2517973	MultiplicativeExpression	"( double ) min_size / ( double ) R_MAX ( a -> bytes -> size , b -> bytes -> size )"		2517766	1		/			
ANR	2517974	CastExpression	( double ) min_size		2517766	0					
ANR	2517975	CastTarget	double		2517766	0					
ANR	2517976	Identifier	min_size		2517766	1					
ANR	2517977	CastExpression	"( double ) R_MAX ( a -> bytes -> size , b -> bytes -> size )"		2517766	1					
ANR	2517978	CastTarget	double		2517766	0					
ANR	2517979	CallExpression	"R_MAX ( a -> bytes -> size , b -> bytes -> size )"		2517766	1					
ANR	2517980	Callee	R_MAX		2517766	0					
ANR	2517981	Identifier	R_MAX		2517766	0					
ANR	2517982	ArgumentList	a -> bytes -> size		2517766	1					
ANR	2517983	Argument	a -> bytes -> size		2517766	0					
ANR	2517984	PtrMemberAccess	a -> bytes -> size		2517766	0					
ANR	2517985	PtrMemberAccess	a -> bytes		2517766	0					
ANR	2517986	Identifier	a		2517766	0					
ANR	2517987	Identifier	bytes		2517766	1					
ANR	2517988	Identifier	size		2517766	1					
ANR	2517989	Argument	b -> bytes -> size		2517766	1					
ANR	2517990	PtrMemberAccess	b -> bytes -> size		2517766	0					
ANR	2517991	PtrMemberAccess	b -> bytes		2517766	0					
ANR	2517992	Identifier	b		2517766	0					
ANR	2517993	Identifier	bytes		2517766	1					
ANR	2517994	Identifier	size		2517766	1					
ANR	2517995	ExpressionStatement	free ( combined_mask )	875:1:20219:20239	2517766	7	True				
ANR	2517996	CallExpression	free ( combined_mask )		2517766	0					
ANR	2517997	Callee	free		2517766	0					
ANR	2517998	Identifier	free		2517766	0					
ANR	2517999	ArgumentList	combined_mask		2517766	1					
ANR	2518000	Argument	combined_mask		2517766	0					
ANR	2518001	Identifier	combined_mask		2517766	0					
ANR	2518002	ReturnStatement	return result ;	877:1:20243:20256	2517766	8	True				
ANR	2518003	Identifier	result		2517766	0					
ANR	2518004	ReturnType	static double		2517766	1					
ANR	2518005	Identifier	matchBytes		2517766	2					
ANR	2518006	ParameterList	"RSignItem * a , RSignItem * b"		2517766	3					
ANR	2518007	Parameter	RSignItem * a	843:25:19394:19405	2517766	0	True				
ANR	2518008	ParameterType	RSignItem *		2517766	0					
ANR	2518009	Identifier	a		2517766	1					
ANR	2518010	Parameter	RSignItem * b	843:39:19408:19419	2517766	1	True				
ANR	2518011	ParameterType	RSignItem *		2517766	0					
ANR	2518012	Identifier	b		2517766	1					
ANR	2518013	CFGEntryNode	ENTRY		2517766		True				
ANR	2518014	CFGExitNode	EXIT		2517766		True				
ANR	2518015	Symbol	b -> bytes		2517766						
ANR	2518016	Symbol	* b -> bytes		2517766						
ANR	2518017	Symbol	combined_mask		2517766						
ANR	2518018	Symbol	* b -> bytes -> mask		2517766						
ANR	2518019	Symbol	r_mem_cmp_mask		2517766						
ANR	2518020	Symbol	result		2517766						
ANR	2518021	Symbol	* combined_mask		2517766						
ANR	2518022	Symbol	memcmp		2517766						
ANR	2518023	Symbol	a -> bytes -> size		2517766						
ANR	2518024	Symbol	b -> bytes -> size		2517766						
ANR	2518025	Symbol	* * b -> bytes		2517766						
ANR	2518026	Symbol	b -> bytes -> bytes		2517766						
ANR	2518027	Symbol	a		2517766						
ANR	2518028	Symbol	malloc		2517766						
ANR	2518029	Symbol	b		2517766						
ANR	2518030	Symbol	NULL		2517766						
ANR	2518031	Symbol	* * b		2517766						
ANR	2518032	Symbol	i		2517766						
ANR	2518033	Symbol	a -> bytes		2517766						
ANR	2518034	Symbol	R_MIN		2517766						
ANR	2518035	Symbol	* * a		2517766						
ANR	2518036	Symbol	* a		2517766						
ANR	2518037	Symbol	* b		2517766						
ANR	2518038	Symbol	a -> bytes -> mask		2517766						
ANR	2518039	Symbol	* i		2517766						
ANR	2518040	Symbol	a -> bytes -> bytes		2517766						
ANR	2518041	Symbol	b -> bytes -> mask		2517766						
ANR	2518042	Symbol	R_MAX		2517766						
ANR	2518043	Symbol	min_size		2517766						
ANR	2518044	Symbol	* a -> bytes		2517766						
ANR	2518045	Symbol	* * * b		2517766						
ANR	2518046	Function	matchGraph	883:0:20397:20820							
ANR	2518047	FunctionDef	"matchGraph (RSignItem * a , RSignItem * b)"		2518046	0					
ANR	2518048	CompoundStatement		883:53:20450:20820	2518046	0					
ANR	2518049	IfStatement	if ( ! a -> graph || ! b -> graph )		2518046	0					
ANR	2518050	Condition	! a -> graph || ! b -> graph	884:5:20457:20478	2518046	0	True				
ANR	2518051	OrExpression	! a -> graph || ! b -> graph		2518046	0		||			
ANR	2518052	UnaryOperationExpression	! a -> graph		2518046	0					
ANR	2518053	UnaryOperator	!		2518046	0					
ANR	2518054	PtrMemberAccess	a -> graph		2518046	1					
ANR	2518055	Identifier	a		2518046	0					
ANR	2518056	Identifier	graph		2518046	1					
ANR	2518057	UnaryOperationExpression	! b -> graph		2518046	1					
ANR	2518058	UnaryOperator	!		2518046	0					
ANR	2518059	PtrMemberAccess	b -> graph		2518046	1					
ANR	2518060	Identifier	b		2518046	0					
ANR	2518061	Identifier	graph		2518046	1					
ANR	2518062	CompoundStatement		2:29:30:30	2518046	1					
ANR	2518063	ReturnStatement	return 0.0 ;	885:2:20485:20495	2518046	0	True				
ANR	2518064	PrimaryExpression	0.0		2518046	0					
ANR	2518065	IdentifierDeclStatement	double total = 0.0 ;	888:1:20502:20520	2518046	1	True				
ANR	2518066	IdentifierDecl	total = 0.0		2518046	0					
ANR	2518067	IdentifierDeclType	double		2518046	0					
ANR	2518068	Identifier	total		2518046	1					
ANR	2518069	AssignmentExpression	total = 0.0		2518046	2		=			
ANR	2518070	Identifier	total		2518046	0					
ANR	2518071	PrimaryExpression	0.0		2518046	1					
ANR	2518072	ExpressionStatement	"total += SIMILARITY ( a -> graph -> cc , b -> graph -> cc )"	890:1:20524:20572	2518046	2	True				
ANR	2518073	AssignmentExpression	"total += SIMILARITY ( a -> graph -> cc , b -> graph -> cc )"		2518046	0		+=			
ANR	2518074	Identifier	total		2518046	0					
ANR	2518075	CallExpression	"SIMILARITY ( a -> graph -> cc , b -> graph -> cc )"		2518046	1					
ANR	2518076	Callee	SIMILARITY		2518046	0					
ANR	2518077	Identifier	SIMILARITY		2518046	0					
ANR	2518078	ArgumentList	a -> graph -> cc		2518046	1					
ANR	2518079	Argument	a -> graph -> cc		2518046	0					
ANR	2518080	PtrMemberAccess	a -> graph -> cc		2518046	0					
ANR	2518081	PtrMemberAccess	a -> graph		2518046	0					
ANR	2518082	Identifier	a		2518046	0					
ANR	2518083	Identifier	graph		2518046	1					
ANR	2518084	Identifier	cc		2518046	1					
ANR	2518085	Argument	b -> graph -> cc		2518046	1					
ANR	2518086	PtrMemberAccess	b -> graph -> cc		2518046	0					
ANR	2518087	PtrMemberAccess	b -> graph		2518046	0					
ANR	2518088	Identifier	b		2518046	0					
ANR	2518089	Identifier	graph		2518046	1					
ANR	2518090	Identifier	cc		2518046	1					
ANR	2518091	ExpressionStatement	"total += SIMILARITY ( a -> graph -> nbbs , b -> graph -> nbbs )"	891:1:20575:20627	2518046	3	True				
ANR	2518092	AssignmentExpression	"total += SIMILARITY ( a -> graph -> nbbs , b -> graph -> nbbs )"		2518046	0		+=			
ANR	2518093	Identifier	total		2518046	0					
ANR	2518094	CallExpression	"SIMILARITY ( a -> graph -> nbbs , b -> graph -> nbbs )"		2518046	1					
ANR	2518095	Callee	SIMILARITY		2518046	0					
ANR	2518096	Identifier	SIMILARITY		2518046	0					
ANR	2518097	ArgumentList	a -> graph -> nbbs		2518046	1					
ANR	2518098	Argument	a -> graph -> nbbs		2518046	0					
ANR	2518099	PtrMemberAccess	a -> graph -> nbbs		2518046	0					
ANR	2518100	PtrMemberAccess	a -> graph		2518046	0					
ANR	2518101	Identifier	a		2518046	0					
ANR	2518102	Identifier	graph		2518046	1					
ANR	2518103	Identifier	nbbs		2518046	1					
ANR	2518104	Argument	b -> graph -> nbbs		2518046	1					
ANR	2518105	PtrMemberAccess	b -> graph -> nbbs		2518046	0					
ANR	2518106	PtrMemberAccess	b -> graph		2518046	0					
ANR	2518107	Identifier	b		2518046	0					
ANR	2518108	Identifier	graph		2518046	1					
ANR	2518109	Identifier	nbbs		2518046	1					
ANR	2518110	ExpressionStatement	"total += SIMILARITY ( a -> graph -> ebbs , b -> graph -> ebbs )"	892:1:20630:20682	2518046	4	True				
ANR	2518111	AssignmentExpression	"total += SIMILARITY ( a -> graph -> ebbs , b -> graph -> ebbs )"		2518046	0		+=			
ANR	2518112	Identifier	total		2518046	0					
ANR	2518113	CallExpression	"SIMILARITY ( a -> graph -> ebbs , b -> graph -> ebbs )"		2518046	1					
ANR	2518114	Callee	SIMILARITY		2518046	0					
ANR	2518115	Identifier	SIMILARITY		2518046	0					
ANR	2518116	ArgumentList	a -> graph -> ebbs		2518046	1					
ANR	2518117	Argument	a -> graph -> ebbs		2518046	0					
ANR	2518118	PtrMemberAccess	a -> graph -> ebbs		2518046	0					
ANR	2518119	PtrMemberAccess	a -> graph		2518046	0					
ANR	2518120	Identifier	a		2518046	0					
ANR	2518121	Identifier	graph		2518046	1					
ANR	2518122	Identifier	ebbs		2518046	1					
ANR	2518123	Argument	b -> graph -> ebbs		2518046	1					
ANR	2518124	PtrMemberAccess	b -> graph -> ebbs		2518046	0					
ANR	2518125	PtrMemberAccess	b -> graph		2518046	0					
ANR	2518126	Identifier	b		2518046	0					
ANR	2518127	Identifier	graph		2518046	1					
ANR	2518128	Identifier	ebbs		2518046	1					
ANR	2518129	ExpressionStatement	"total += SIMILARITY ( a -> graph -> edges , b -> graph -> edges )"	893:1:20685:20739	2518046	5	True				
ANR	2518130	AssignmentExpression	"total += SIMILARITY ( a -> graph -> edges , b -> graph -> edges )"		2518046	0		+=			
ANR	2518131	Identifier	total		2518046	0					
ANR	2518132	CallExpression	"SIMILARITY ( a -> graph -> edges , b -> graph -> edges )"		2518046	1					
ANR	2518133	Callee	SIMILARITY		2518046	0					
ANR	2518134	Identifier	SIMILARITY		2518046	0					
ANR	2518135	ArgumentList	a -> graph -> edges		2518046	1					
ANR	2518136	Argument	a -> graph -> edges		2518046	0					
ANR	2518137	PtrMemberAccess	a -> graph -> edges		2518046	0					
ANR	2518138	PtrMemberAccess	a -> graph		2518046	0					
ANR	2518139	Identifier	a		2518046	0					
ANR	2518140	Identifier	graph		2518046	1					
ANR	2518141	Identifier	edges		2518046	1					
ANR	2518142	Argument	b -> graph -> edges		2518046	1					
ANR	2518143	PtrMemberAccess	b -> graph -> edges		2518046	0					
ANR	2518144	PtrMemberAccess	b -> graph		2518046	0					
ANR	2518145	Identifier	b		2518046	0					
ANR	2518146	Identifier	graph		2518046	1					
ANR	2518147	Identifier	edges		2518046	1					
ANR	2518148	ExpressionStatement	"total += SIMILARITY ( a -> graph -> bbsum , b -> graph -> bbsum )"	894:1:20742:20796	2518046	6	True				
ANR	2518149	AssignmentExpression	"total += SIMILARITY ( a -> graph -> bbsum , b -> graph -> bbsum )"		2518046	0		+=			
ANR	2518150	Identifier	total		2518046	0					
ANR	2518151	CallExpression	"SIMILARITY ( a -> graph -> bbsum , b -> graph -> bbsum )"		2518046	1					
ANR	2518152	Callee	SIMILARITY		2518046	0					
ANR	2518153	Identifier	SIMILARITY		2518046	0					
ANR	2518154	ArgumentList	a -> graph -> bbsum		2518046	1					
ANR	2518155	Argument	a -> graph -> bbsum		2518046	0					
ANR	2518156	PtrMemberAccess	a -> graph -> bbsum		2518046	0					
ANR	2518157	PtrMemberAccess	a -> graph		2518046	0					
ANR	2518158	Identifier	a		2518046	0					
ANR	2518159	Identifier	graph		2518046	1					
ANR	2518160	Identifier	bbsum		2518046	1					
ANR	2518161	Argument	b -> graph -> bbsum		2518046	1					
ANR	2518162	PtrMemberAccess	b -> graph -> bbsum		2518046	0					
ANR	2518163	PtrMemberAccess	b -> graph		2518046	0					
ANR	2518164	Identifier	b		2518046	0					
ANR	2518165	Identifier	graph		2518046	1					
ANR	2518166	Identifier	bbsum		2518046	1					
ANR	2518167	ReturnStatement	return total / 5.0 ;	896:1:20800:20818	2518046	7	True				
ANR	2518168	MultiplicativeExpression	total / 5.0		2518046	0		/			
ANR	2518169	Identifier	total		2518046	0					
ANR	2518170	PrimaryExpression	5.0		2518046	1					
ANR	2518171	ReturnType	static double		2518046	1					
ANR	2518172	Identifier	matchGraph		2518046	2					
ANR	2518173	ParameterList	"RSignItem * a , RSignItem * b"		2518046	3					
ANR	2518174	Parameter	RSignItem * a	883:25:20422:20433	2518046	0	True				
ANR	2518175	ParameterType	RSignItem *		2518046	0					
ANR	2518176	Identifier	a		2518046	1					
ANR	2518177	Parameter	RSignItem * b	883:39:20436:20447	2518046	1	True				
ANR	2518178	ParameterType	RSignItem *		2518046	0					
ANR	2518179	Identifier	b		2518046	1					
ANR	2518180	CFGEntryNode	ENTRY		2518046		True				
ANR	2518181	CFGExitNode	EXIT		2518046		True				
ANR	2518182	Symbol	a		2518046						
ANR	2518183	Symbol	b -> graph -> ebbs		2518046						
ANR	2518184	Symbol	b		2518046						
ANR	2518185	Symbol	b -> graph		2518046						
ANR	2518186	Symbol	* a -> graph		2518046						
ANR	2518187	Symbol	a -> graph -> edges		2518046						
ANR	2518188	Symbol	* * b		2518046						
ANR	2518189	Symbol	a -> graph		2518046						
ANR	2518190	Symbol	* * a		2518046						
ANR	2518191	Symbol	* b -> graph		2518046						
ANR	2518192	Symbol	* a		2518046						
ANR	2518193	Symbol	* b		2518046						
ANR	2518194	Symbol	a -> graph -> cc		2518046						
ANR	2518195	Symbol	b -> graph -> nbbs		2518046						
ANR	2518196	Symbol	b -> graph -> edges		2518046						
ANR	2518197	Symbol	b -> graph -> bbsum		2518046						
ANR	2518198	Symbol	total		2518046						
ANR	2518199	Symbol	a -> graph -> ebbs		2518046						
ANR	2518200	Symbol	b -> graph -> cc		2518046						
ANR	2518201	Symbol	a -> graph -> bbsum		2518046						
ANR	2518202	Symbol	SIMILARITY		2518046						
ANR	2518203	Symbol	a -> graph -> nbbs		2518046						
ANR	2518204	Function	r_sign_diff	899:0:20823:23254							
ANR	2518205	FunctionDef	"r_sign_diff (RAnal * a , RSignOptions * options , const char * other_space_name)"		2518204	0					
ANR	2518206	CompoundStatement		899:86:20909:23254	2518204	0					
ANR	2518207	IdentifierDeclStatement	char k [ R_SIGN_KEY_MAXSZ ] ;	900:1:20912:20936	2518204	0	True				
ANR	2518208	IdentifierDecl	k [ R_SIGN_KEY_MAXSZ ]		2518204	0					
ANR	2518209	IdentifierDeclType	char [ R_SIGN_KEY_MAXSZ ]		2518204	0					
ANR	2518210	Identifier	k		2518204	1					
ANR	2518211	Identifier	R_SIGN_KEY_MAXSZ		2518204	2					
ANR	2518212	ExpressionStatement	"r_return_val_if_fail ( a && other_space_name , false )"	902:1:20940:20991	2518204	1	True				
ANR	2518213	CallExpression	"r_return_val_if_fail ( a && other_space_name , false )"		2518204	0					
ANR	2518214	Callee	r_return_val_if_fail		2518204	0					
ANR	2518215	Identifier	r_return_val_if_fail		2518204	0					
ANR	2518216	ArgumentList	a && other_space_name		2518204	1					
ANR	2518217	Argument	a && other_space_name		2518204	0					
ANR	2518218	AndExpression	a && other_space_name		2518204	0		&&			
ANR	2518219	Identifier	a		2518204	0					
ANR	2518220	Identifier	other_space_name		2518204	1					
ANR	2518221	Argument	false		2518204	1					
ANR	2518222	Identifier	false		2518204	0					
ANR	2518223	IdentifierDeclStatement	RSpace * current_space = r_spaces_current ( & a -> zign_spaces ) ;	904:1:20995:21053	2518204	2	True				
ANR	2518224	IdentifierDecl	* current_space = r_spaces_current ( & a -> zign_spaces )		2518204	0					
ANR	2518225	IdentifierDeclType	RSpace *		2518204	0					
ANR	2518226	Identifier	current_space		2518204	1					
ANR	2518227	AssignmentExpression	* current_space = r_spaces_current ( & a -> zign_spaces )		2518204	2		=			
ANR	2518228	Identifier	current_space		2518204	0					
ANR	2518229	CallExpression	r_spaces_current ( & a -> zign_spaces )		2518204	1					
ANR	2518230	Callee	r_spaces_current		2518204	0					
ANR	2518231	Identifier	r_spaces_current		2518204	0					
ANR	2518232	ArgumentList	& a -> zign_spaces		2518204	1					
ANR	2518233	Argument	& a -> zign_spaces		2518204	0					
ANR	2518234	UnaryOperationExpression	& a -> zign_spaces		2518204	0					
ANR	2518235	UnaryOperator	&		2518204	0					
ANR	2518236	PtrMemberAccess	a -> zign_spaces		2518204	1					
ANR	2518237	Identifier	a		2518204	0					
ANR	2518238	Identifier	zign_spaces		2518204	1					
ANR	2518239	IfStatement	if ( ! current_space )		2518204	3					
ANR	2518240	Condition	! current_space	905:5:21060:21073	2518204	0	True				
ANR	2518241	UnaryOperationExpression	! current_space		2518204	0					
ANR	2518242	UnaryOperator	!		2518204	0					
ANR	2518243	Identifier	current_space		2518204	1					
ANR	2518244	CompoundStatement		7:21:166:166	2518204	1					
ANR	2518245	ReturnStatement	return false ;	906:2:21080:21092	2518204	0	True				
ANR	2518246	Identifier	false		2518204	0					
ANR	2518247	IdentifierDeclStatement	"RSpace * other_space = r_spaces_get ( & a -> zign_spaces , other_space_name ) ;"	908:1:21098:21168	2518204	4	True				
ANR	2518248	IdentifierDecl	"* other_space = r_spaces_get ( & a -> zign_spaces , other_space_name )"		2518204	0					
ANR	2518249	IdentifierDeclType	RSpace *		2518204	0					
ANR	2518250	Identifier	other_space		2518204	1					
ANR	2518251	AssignmentExpression	"* other_space = r_spaces_get ( & a -> zign_spaces , other_space_name )"		2518204	2		=			
ANR	2518252	Identifier	other_space		2518204	0					
ANR	2518253	CallExpression	"r_spaces_get ( & a -> zign_spaces , other_space_name )"		2518204	1					
ANR	2518254	Callee	r_spaces_get		2518204	0					
ANR	2518255	Identifier	r_spaces_get		2518204	0					
ANR	2518256	ArgumentList	& a -> zign_spaces		2518204	1					
ANR	2518257	Argument	& a -> zign_spaces		2518204	0					
ANR	2518258	UnaryOperationExpression	& a -> zign_spaces		2518204	0					
ANR	2518259	UnaryOperator	&		2518204	0					
ANR	2518260	PtrMemberAccess	a -> zign_spaces		2518204	1					
ANR	2518261	Identifier	a		2518204	0					
ANR	2518262	Identifier	zign_spaces		2518204	1					
ANR	2518263	Argument	other_space_name		2518204	1					
ANR	2518264	Identifier	other_space_name		2518204	0					
ANR	2518265	IfStatement	if ( ! other_space )		2518204	5					
ANR	2518266	Condition	! other_space	909:5:21175:21186	2518204	0	True				
ANR	2518267	UnaryOperationExpression	! other_space		2518204	0					
ANR	2518268	UnaryOperator	!		2518204	0					
ANR	2518269	Identifier	other_space		2518204	1					
ANR	2518270	CompoundStatement		11:19:279:279	2518204	1					
ANR	2518271	ReturnStatement	return false ;	910:2:21193:21205	2518204	0	True				
ANR	2518272	Identifier	false		2518204	0					
ANR	2518273	ExpressionStatement	"serializeKey ( a , current_space , """" , k )"	913:1:21212:21250	2518204	6	True				
ANR	2518274	CallExpression	"serializeKey ( a , current_space , """" , k )"		2518204	0					
ANR	2518275	Callee	serializeKey		2518204	0					
ANR	2518276	Identifier	serializeKey		2518204	0					
ANR	2518277	ArgumentList	a		2518204	1					
ANR	2518278	Argument	a		2518204	0					
ANR	2518279	Identifier	a		2518204	0					
ANR	2518280	Argument	current_space		2518204	1					
ANR	2518281	Identifier	current_space		2518204	0					
ANR	2518282	Argument	""""""		2518204	2					
ANR	2518283	PrimaryExpression	""""""		2518204	0					
ANR	2518284	Argument	k		2518204	3					
ANR	2518285	Identifier	k		2518204	0					
ANR	2518286	IdentifierDeclStatement	"SdbList * current_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false ) ;"	914:1:21253:21320	2518204	7	True				
ANR	2518287	IdentifierDecl	"* current_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false )"		2518204	0					
ANR	2518288	IdentifierDeclType	SdbList *		2518204	0					
ANR	2518289	Identifier	current_zigns		2518204	1					
ANR	2518290	AssignmentExpression	"* current_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false )"		2518204	2		=			
ANR	2518291	Identifier	current_zigns		2518204	0					
ANR	2518292	CallExpression	"sdb_foreach_match ( a -> sdb_zigns , k , false )"		2518204	1					
ANR	2518293	Callee	sdb_foreach_match		2518204	0					
ANR	2518294	Identifier	sdb_foreach_match		2518204	0					
ANR	2518295	ArgumentList	a -> sdb_zigns		2518204	1					
ANR	2518296	Argument	a -> sdb_zigns		2518204	0					
ANR	2518297	PtrMemberAccess	a -> sdb_zigns		2518204	0					
ANR	2518298	Identifier	a		2518204	0					
ANR	2518299	Identifier	sdb_zigns		2518204	1					
ANR	2518300	Argument	k		2518204	1					
ANR	2518301	Identifier	k		2518204	0					
ANR	2518302	Argument	false		2518204	2					
ANR	2518303	Identifier	false		2518204	0					
ANR	2518304	ExpressionStatement	"serializeKey ( a , other_space , """" , k )"	916:1:21324:21360	2518204	8	True				
ANR	2518305	CallExpression	"serializeKey ( a , other_space , """" , k )"		2518204	0					
ANR	2518306	Callee	serializeKey		2518204	0					
ANR	2518307	Identifier	serializeKey		2518204	0					
ANR	2518308	ArgumentList	a		2518204	1					
ANR	2518309	Argument	a		2518204	0					
ANR	2518310	Identifier	a		2518204	0					
ANR	2518311	Argument	other_space		2518204	1					
ANR	2518312	Identifier	other_space		2518204	0					
ANR	2518313	Argument	""""""		2518204	2					
ANR	2518314	PrimaryExpression	""""""		2518204	0					
ANR	2518315	Argument	k		2518204	3					
ANR	2518316	Identifier	k		2518204	0					
ANR	2518317	IdentifierDeclStatement	"SdbList * other_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false ) ;"	917:1:21363:21428	2518204	9	True				
ANR	2518318	IdentifierDecl	"* other_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false )"		2518204	0					
ANR	2518319	IdentifierDeclType	SdbList *		2518204	0					
ANR	2518320	Identifier	other_zigns		2518204	1					
ANR	2518321	AssignmentExpression	"* other_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false )"		2518204	2		=			
ANR	2518322	Identifier	other_zigns		2518204	0					
ANR	2518323	CallExpression	"sdb_foreach_match ( a -> sdb_zigns , k , false )"		2518204	1					
ANR	2518324	Callee	sdb_foreach_match		2518204	0					
ANR	2518325	Identifier	sdb_foreach_match		2518204	0					
ANR	2518326	ArgumentList	a -> sdb_zigns		2518204	1					
ANR	2518327	Argument	a -> sdb_zigns		2518204	0					
ANR	2518328	PtrMemberAccess	a -> sdb_zigns		2518204	0					
ANR	2518329	Identifier	a		2518204	0					
ANR	2518330	Identifier	sdb_zigns		2518204	1					
ANR	2518331	Argument	k		2518204	1					
ANR	2518332	Identifier	k		2518204	0					
ANR	2518333	Argument	false		2518204	2					
ANR	2518334	Identifier	false		2518204	0					
ANR	2518335	ExpressionStatement	"eprintf ( ""Diff %d %d\\n"" , ( int ) ls_length ( current_zigns ) , ( int ) ls_length ( other_zigns ) )"	919:1:21432:21518	2518204	10	True				
ANR	2518336	CallExpression	"eprintf ( ""Diff %d %d\\n"" , ( int ) ls_length ( current_zigns ) , ( int ) ls_length ( other_zigns ) )"		2518204	0					
ANR	2518337	Callee	eprintf		2518204	0					
ANR	2518338	Identifier	eprintf		2518204	0					
ANR	2518339	ArgumentList	"""Diff %d %d\\n"""		2518204	1					
ANR	2518340	Argument	"""Diff %d %d\\n"""		2518204	0					
ANR	2518341	PrimaryExpression	"""Diff %d %d\\n"""		2518204	0					
ANR	2518342	Argument	( int ) ls_length ( current_zigns )		2518204	1					
ANR	2518343	CastExpression	( int ) ls_length ( current_zigns )		2518204	0					
ANR	2518344	CastTarget	int		2518204	0					
ANR	2518345	CallExpression	ls_length ( current_zigns )		2518204	1					
ANR	2518346	Callee	ls_length		2518204	0					
ANR	2518347	Identifier	ls_length		2518204	0					
ANR	2518348	ArgumentList	current_zigns		2518204	1					
ANR	2518349	Argument	current_zigns		2518204	0					
ANR	2518350	Identifier	current_zigns		2518204	0					
ANR	2518351	Argument	( int ) ls_length ( other_zigns )		2518204	2					
ANR	2518352	CastExpression	( int ) ls_length ( other_zigns )		2518204	0					
ANR	2518353	CastTarget	int		2518204	0					
ANR	2518354	CallExpression	ls_length ( other_zigns )		2518204	1					
ANR	2518355	Callee	ls_length		2518204	0					
ANR	2518356	Identifier	ls_length		2518204	0					
ANR	2518357	ArgumentList	other_zigns		2518204	1					
ANR	2518358	Argument	other_zigns		2518204	0					
ANR	2518359	Identifier	other_zigns		2518204	0					
ANR	2518360	IdentifierDeclStatement	SdbListIter * iter ;	921:1:21522:21539	2518204	11	True				
ANR	2518361	IdentifierDecl	* iter		2518204	0					
ANR	2518362	IdentifierDeclType	SdbListIter *		2518204	0					
ANR	2518363	Identifier	iter		2518204	1					
ANR	2518364	IdentifierDeclStatement	SdbKv * kv ;	922:1:21542:21551	2518204	12	True				
ANR	2518365	IdentifierDecl	* kv		2518204	0					
ANR	2518366	IdentifierDeclType	SdbKv *		2518204	0					
ANR	2518367	Identifier	kv		2518204	1					
ANR	2518368	IdentifierDeclStatement	RList * lb = NULL ;	923:1:21554:21570	2518204	13	True				
ANR	2518369	IdentifierDecl	* lb = NULL		2518204	0					
ANR	2518370	IdentifierDeclType	RList *		2518204	0					
ANR	2518371	Identifier	lb		2518204	1					
ANR	2518372	AssignmentExpression	* lb = NULL		2518204	2		=			
ANR	2518373	Identifier	NULL		2518204	0					
ANR	2518374	Identifier	NULL		2518204	1					
ANR	2518375	IdentifierDeclStatement	RList * la = r_list_new ( ) ;	924:1:21573:21598	2518204	14	True				
ANR	2518376	IdentifierDecl	* la = r_list_new ( )		2518204	0					
ANR	2518377	IdentifierDeclType	RList *		2518204	0					
ANR	2518378	Identifier	la		2518204	1					
ANR	2518379	AssignmentExpression	* la = r_list_new ( )		2518204	2		=			
ANR	2518380	Identifier	la		2518204	0					
ANR	2518381	CallExpression	r_list_new ( )		2518204	1					
ANR	2518382	Callee	r_list_new		2518204	0					
ANR	2518383	Identifier	r_list_new		2518204	0					
ANR	2518384	ArgumentList			2518204	1					
ANR	2518385	IfStatement	if ( ! la )		2518204	15					
ANR	2518386	Condition	! la	925:5:21605:21607	2518204	0	True				
ANR	2518387	UnaryOperationExpression	! la		2518204	0					
ANR	2518388	UnaryOperator	!		2518204	0					
ANR	2518389	Identifier	la		2518204	1					
ANR	2518390	CompoundStatement		27:10:700:700	2518204	1					
ANR	2518391	GotoStatement	goto beach ;	926:2:21614:21624	2518204	0	True				
ANR	2518392	Identifier	beach		2518204	0					
ANR	2518393	Statement	ls_foreach	928:1:21630:21639	2518204	16	True				
ANR	2518394	Statement	(	928:12:21641:21641	2518204	17	True				
ANR	2518395	Statement	current_zigns	928:13:21642:21654	2518204	18	True				
ANR	2518396	Statement	","	928:26:21655:21655	2518204	19	True				
ANR	2518397	Statement	iter	928:28:21657:21660	2518204	20	True				
ANR	2518398	Statement	","	928:32:21661:21661	2518204	21	True				
ANR	2518399	Statement	kv	928:34:21663:21664	2518204	22	True				
ANR	2518400	Statement	)	928:36:21665:21665	2518204	23	True				
ANR	2518401	CompoundStatement		31:2:761:795	2518204	24					
ANR	2518402	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	929:2:21671:21705	2518204	0	True				
ANR	2518403	IdentifierDecl	* it = r_sign_item_new ( )		2518204	0					
ANR	2518404	IdentifierDeclType	RSignItem *		2518204	0					
ANR	2518405	Identifier	it		2518204	1					
ANR	2518406	AssignmentExpression	* it = r_sign_item_new ( )		2518204	2		=			
ANR	2518407	Identifier	it		2518204	0					
ANR	2518408	CallExpression	r_sign_item_new ( )		2518204	1					
ANR	2518409	Callee	r_sign_item_new		2518204	0					
ANR	2518410	Identifier	r_sign_item_new		2518204	0					
ANR	2518411	ArgumentList			2518204	1					
ANR	2518412	IfStatement	if ( ! it )		2518204	1					
ANR	2518413	Condition	! it	930:6:21713:21715	2518204	0	True				
ANR	2518414	UnaryOperationExpression	! it		2518204	0					
ANR	2518415	UnaryOperator	!		2518204	0					
ANR	2518416	Identifier	it		2518204	1					
ANR	2518417	CompoundStatement		32:11:808:808	2518204	1					
ANR	2518418	GotoStatement	goto beach ;	931:3:21723:21733	2518204	0	True				
ANR	2518419	Identifier	beach		2518204	0					
ANR	2518420	IfStatement	"if ( r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value ) )"		2518204	2					
ANR	2518421	Condition	"r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value )"	933:6:21745:21800	2518204	0	True				
ANR	2518422	CallExpression	"r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value )"		2518204	0					
ANR	2518423	Callee	r_sign_deserialize		2518204	0					
ANR	2518424	Identifier	r_sign_deserialize		2518204	0					
ANR	2518425	ArgumentList	a		2518204	1					
ANR	2518426	Argument	a		2518204	0					
ANR	2518427	Identifier	a		2518204	0					
ANR	2518428	Argument	it		2518204	1					
ANR	2518429	Identifier	it		2518204	0					
ANR	2518430	Argument	kv -> base . key		2518204	2					
ANR	2518431	MemberAccess	kv -> base . key		2518204	0					
ANR	2518432	PtrMemberAccess	kv -> base		2518204	0					
ANR	2518433	Identifier	kv		2518204	0					
ANR	2518434	Identifier	base		2518204	1					
ANR	2518435	Identifier	key		2518204	1					
ANR	2518436	Argument	kv -> base . value		2518204	3					
ANR	2518437	MemberAccess	kv -> base . value		2518204	0					
ANR	2518438	PtrMemberAccess	kv -> base		2518204	0					
ANR	2518439	Identifier	kv		2518204	0					
ANR	2518440	Identifier	base		2518204	1					
ANR	2518441	Identifier	value		2518204	1					
ANR	2518442	CompoundStatement		35:64:893:893	2518204	1					
ANR	2518443	ExpressionStatement	"r_list_append ( la , it )"	934:3:21808:21830	2518204	0	True				
ANR	2518444	CallExpression	"r_list_append ( la , it )"		2518204	0					
ANR	2518445	Callee	r_list_append		2518204	0					
ANR	2518446	Identifier	r_list_append		2518204	0					
ANR	2518447	ArgumentList	la		2518204	1					
ANR	2518448	Argument	la		2518204	0					
ANR	2518449	Identifier	la		2518204	0					
ANR	2518450	Argument	it		2518204	1					
ANR	2518451	Identifier	it		2518204	0					
ANR	2518452	ElseStatement	else		2518204	0					
ANR	2518453	CompoundStatement		37:9:931:931	2518204	0					
ANR	2518454	ExpressionStatement	r_sign_item_free ( it )	936:3:21846:21867	2518204	0	True				
ANR	2518455	CallExpression	r_sign_item_free ( it )		2518204	0					
ANR	2518456	Callee	r_sign_item_free		2518204	0					
ANR	2518457	Identifier	r_sign_item_free		2518204	0					
ANR	2518458	ArgumentList	it		2518204	1					
ANR	2518459	Argument	it		2518204	0					
ANR	2518460	Identifier	it		2518204	0					
ANR	2518461	ExpressionStatement	lb = r_list_new ( )	939:1:21877:21895	2518204	25	True				
ANR	2518462	AssignmentExpression	lb = r_list_new ( )		2518204	0		=			
ANR	2518463	Identifier	lb		2518204	0					
ANR	2518464	CallExpression	r_list_new ( )		2518204	1					
ANR	2518465	Callee	r_list_new		2518204	0					
ANR	2518466	Identifier	r_list_new		2518204	0					
ANR	2518467	ArgumentList			2518204	1					
ANR	2518468	IfStatement	if ( ! lb )		2518204	26					
ANR	2518469	Condition	! lb	940:5:21902:21904	2518204	0	True				
ANR	2518470	UnaryOperationExpression	! lb		2518204	0					
ANR	2518471	UnaryOperator	!		2518204	0					
ANR	2518472	Identifier	lb		2518204	1					
ANR	2518473	CompoundStatement		42:10:997:997	2518204	1					
ANR	2518474	GotoStatement	goto beach ;	941:2:21911:21921	2518204	0	True				
ANR	2518475	Identifier	beach		2518204	0					
ANR	2518476	Statement	ls_foreach	943:1:21927:21936	2518204	27	True				
ANR	2518477	Statement	(	943:12:21938:21938	2518204	28	True				
ANR	2518478	Statement	other_zigns	943:13:21939:21949	2518204	29	True				
ANR	2518479	Statement	","	943:24:21950:21950	2518204	30	True				
ANR	2518480	Statement	iter	943:26:21952:21955	2518204	31	True				
ANR	2518481	Statement	","	943:30:21956:21956	2518204	32	True				
ANR	2518482	Statement	kv	943:32:21958:21959	2518204	33	True				
ANR	2518483	Statement	)	943:34:21960:21960	2518204	34	True				
ANR	2518484	CompoundStatement		46:2:1056:1090	2518204	35					
ANR	2518485	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	944:2:21966:22000	2518204	0	True				
ANR	2518486	IdentifierDecl	* it = r_sign_item_new ( )		2518204	0					
ANR	2518487	IdentifierDeclType	RSignItem *		2518204	0					
ANR	2518488	Identifier	it		2518204	1					
ANR	2518489	AssignmentExpression	* it = r_sign_item_new ( )		2518204	2		=			
ANR	2518490	Identifier	it		2518204	0					
ANR	2518491	CallExpression	r_sign_item_new ( )		2518204	1					
ANR	2518492	Callee	r_sign_item_new		2518204	0					
ANR	2518493	Identifier	r_sign_item_new		2518204	0					
ANR	2518494	ArgumentList			2518204	1					
ANR	2518495	IfStatement	if ( ! it )		2518204	1					
ANR	2518496	Condition	! it	945:6:22008:22010	2518204	0	True				
ANR	2518497	UnaryOperationExpression	! it		2518204	0					
ANR	2518498	UnaryOperator	!		2518204	0					
ANR	2518499	Identifier	it		2518204	1					
ANR	2518500	CompoundStatement		47:11:1103:1103	2518204	1					
ANR	2518501	GotoStatement	goto beach ;	946:3:22018:22028	2518204	0	True				
ANR	2518502	Identifier	beach		2518204	0					
ANR	2518503	IfStatement	"if ( r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value ) )"		2518204	2					
ANR	2518504	Condition	"r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value )"	948:6:22040:22095	2518204	0	True				
ANR	2518505	CallExpression	"r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value )"		2518204	0					
ANR	2518506	Callee	r_sign_deserialize		2518204	0					
ANR	2518507	Identifier	r_sign_deserialize		2518204	0					
ANR	2518508	ArgumentList	a		2518204	1					
ANR	2518509	Argument	a		2518204	0					
ANR	2518510	Identifier	a		2518204	0					
ANR	2518511	Argument	it		2518204	1					
ANR	2518512	Identifier	it		2518204	0					
ANR	2518513	Argument	kv -> base . key		2518204	2					
ANR	2518514	MemberAccess	kv -> base . key		2518204	0					
ANR	2518515	PtrMemberAccess	kv -> base		2518204	0					
ANR	2518516	Identifier	kv		2518204	0					
ANR	2518517	Identifier	base		2518204	1					
ANR	2518518	Identifier	key		2518204	1					
ANR	2518519	Argument	kv -> base . value		2518204	3					
ANR	2518520	MemberAccess	kv -> base . value		2518204	0					
ANR	2518521	PtrMemberAccess	kv -> base		2518204	0					
ANR	2518522	Identifier	kv		2518204	0					
ANR	2518523	Identifier	base		2518204	1					
ANR	2518524	Identifier	value		2518204	1					
ANR	2518525	CompoundStatement		50:64:1188:1188	2518204	1					
ANR	2518526	ExpressionStatement	"r_list_append ( lb , it )"	949:3:22103:22125	2518204	0	True				
ANR	2518527	CallExpression	"r_list_append ( lb , it )"		2518204	0					
ANR	2518528	Callee	r_list_append		2518204	0					
ANR	2518529	Identifier	r_list_append		2518204	0					
ANR	2518530	ArgumentList	lb		2518204	1					
ANR	2518531	Argument	lb		2518204	0					
ANR	2518532	Identifier	lb		2518204	0					
ANR	2518533	Argument	it		2518204	1					
ANR	2518534	Identifier	it		2518204	0					
ANR	2518535	ElseStatement	else		2518204	0					
ANR	2518536	CompoundStatement		52:9:1226:1226	2518204	0					
ANR	2518537	ExpressionStatement	r_sign_item_free ( it )	951:3:22141:22162	2518204	0	True				
ANR	2518538	CallExpression	r_sign_item_free ( it )		2518204	0					
ANR	2518539	Callee	r_sign_item_free		2518204	0					
ANR	2518540	Identifier	r_sign_item_free		2518204	0					
ANR	2518541	ArgumentList	it		2518204	1					
ANR	2518542	Argument	it		2518204	0					
ANR	2518543	Identifier	it		2518204	0					
ANR	2518544	ExpressionStatement	ls_free ( current_zigns )	955:1:22173:22196	2518204	36	True				
ANR	2518545	CallExpression	ls_free ( current_zigns )		2518204	0					
ANR	2518546	Callee	ls_free		2518204	0					
ANR	2518547	Identifier	ls_free		2518204	0					
ANR	2518548	ArgumentList	current_zigns		2518204	1					
ANR	2518549	Argument	current_zigns		2518204	0					
ANR	2518550	Identifier	current_zigns		2518204	0					
ANR	2518551	ExpressionStatement	ls_free ( other_zigns )	956:1:22199:22220	2518204	37	True				
ANR	2518552	CallExpression	ls_free ( other_zigns )		2518204	0					
ANR	2518553	Callee	ls_free		2518204	0					
ANR	2518554	Identifier	ls_free		2518204	0					
ANR	2518555	ArgumentList	other_zigns		2518204	1					
ANR	2518556	Argument	other_zigns		2518204	0					
ANR	2518557	Identifier	other_zigns		2518204	0					
ANR	2518558	IdentifierDeclStatement	RListIter * itr ;	958:1:22224:22238	2518204	38	True				
ANR	2518559	IdentifierDecl	* itr		2518204	0					
ANR	2518560	IdentifierDeclType	RListIter *		2518204	0					
ANR	2518561	Identifier	itr		2518204	1					
ANR	2518562	IdentifierDeclStatement	RListIter * itr2 ;	959:1:22241:22256	2518204	39	True				
ANR	2518563	IdentifierDecl	* itr2		2518204	0					
ANR	2518564	IdentifierDeclType	RListIter *		2518204	0					
ANR	2518565	Identifier	itr2		2518204	1					
ANR	2518566	IdentifierDeclStatement	RSignItem * si ;	960:1:22259:22272	2518204	40	True				
ANR	2518567	IdentifierDecl	* si		2518204	0					
ANR	2518568	IdentifierDeclType	RSignItem *		2518204	0					
ANR	2518569	Identifier	si		2518204	1					
ANR	2518570	IdentifierDeclStatement	RSignItem * si2 ;	961:1:22275:22289	2518204	41	True				
ANR	2518571	IdentifierDecl	* si2		2518204	0					
ANR	2518572	IdentifierDeclType	RSignItem *		2518204	0					
ANR	2518573	Identifier	si2		2518204	1					
ANR	2518574	Statement	r_list_foreach	964:1:22319:22332	2518204	42	True				
ANR	2518575	Statement	(	964:16:22334:22334	2518204	43	True				
ANR	2518576	Statement	la	964:17:22335:22336	2518204	44	True				
ANR	2518577	Statement	","	964:19:22337:22337	2518204	45	True				
ANR	2518578	Statement	itr	964:21:22339:22341	2518204	46	True				
ANR	2518579	Statement	","	964:24:22342:22342	2518204	47	True				
ANR	2518580	Statement	si	964:26:22344:22345	2518204	48	True				
ANR	2518581	Statement	)	964:28:22346:22346	2518204	49	True				
ANR	2518582	CompoundStatement		66:30:1438:1438	2518204	50					
ANR	2518583	IfStatement	"if ( strstr ( si -> name , ""imp."" ) )"		2518204	0					
ANR	2518584	Condition	"strstr ( si -> name , ""imp."" )"	965:6:22356:22380	2518204	0	True				
ANR	2518585	CallExpression	"strstr ( si -> name , ""imp."" )"		2518204	0					
ANR	2518586	Callee	strstr		2518204	0					
ANR	2518587	Identifier	strstr		2518204	0					
ANR	2518588	ArgumentList	si -> name		2518204	1					
ANR	2518589	Argument	si -> name		2518204	0					
ANR	2518590	PtrMemberAccess	si -> name		2518204	0					
ANR	2518591	Identifier	si		2518204	0					
ANR	2518592	Identifier	name		2518204	1					
ANR	2518593	Argument	"""imp."""		2518204	1					
ANR	2518594	PrimaryExpression	"""imp."""		2518204	0					
ANR	2518595	CompoundStatement		67:33:1473:1473	2518204	1					
ANR	2518596	ContinueStatement	continue ;	966:3:22388:22396	2518204	0	True				
ANR	2518597	Statement	r_list_foreach	968:2:22404:22417	2518204	1	True				
ANR	2518598	Statement	(	968:17:22419:22419	2518204	2	True				
ANR	2518599	Statement	lb	968:18:22420:22421	2518204	3	True				
ANR	2518600	Statement	","	968:20:22422:22422	2518204	4	True				
ANR	2518601	Statement	itr2	968:22:22424:22427	2518204	5	True				
ANR	2518602	Statement	","	968:26:22428:22428	2518204	6	True				
ANR	2518603	Statement	si2	968:28:22430:22432	2518204	7	True				
ANR	2518604	Statement	)	968:31:22433:22433	2518204	8	True				
ANR	2518605	CompoundStatement		77:3:1788:1895	2518204	9					
ANR	2518606	IfStatement	"if ( strstr ( si2 -> name , ""imp."" ) )"		2518204	0					
ANR	2518607	Condition	"strstr ( si2 -> name , ""imp."" )"	969:7:22444:22469	2518204	0	True				
ANR	2518608	CallExpression	"strstr ( si2 -> name , ""imp."" )"		2518204	0					
ANR	2518609	Callee	strstr		2518204	0					
ANR	2518610	Identifier	strstr		2518204	0					
ANR	2518611	ArgumentList	si2 -> name		2518204	1					
ANR	2518612	Argument	si2 -> name		2518204	0					
ANR	2518613	PtrMemberAccess	si2 -> name		2518204	0					
ANR	2518614	Identifier	si2		2518204	0					
ANR	2518615	Identifier	name		2518204	1					
ANR	2518616	Argument	"""imp."""		2518204	1					
ANR	2518617	PrimaryExpression	"""imp."""		2518204	0					
ANR	2518618	CompoundStatement		71:35:1562:1562	2518204	1					
ANR	2518619	ContinueStatement	continue ;	970:4:22478:22486	2518204	0	True				
ANR	2518620	IdentifierDeclStatement	"double bytesScore = matchBytes ( si , si2 ) ;"	972:3:22496:22536	2518204	1	True				
ANR	2518621	IdentifierDecl	"bytesScore = matchBytes ( si , si2 )"		2518204	0					
ANR	2518622	IdentifierDeclType	double		2518204	0					
ANR	2518623	Identifier	bytesScore		2518204	1					
ANR	2518624	AssignmentExpression	"bytesScore = matchBytes ( si , si2 )"		2518204	2		=			
ANR	2518625	Identifier	bytesScore		2518204	0					
ANR	2518626	CallExpression	"matchBytes ( si , si2 )"		2518204	1					
ANR	2518627	Callee	matchBytes		2518204	0					
ANR	2518628	Identifier	matchBytes		2518204	0					
ANR	2518629	ArgumentList	si		2518204	1					
ANR	2518630	Argument	si		2518204	0					
ANR	2518631	Identifier	si		2518204	0					
ANR	2518632	Argument	si2		2518204	1					
ANR	2518633	Identifier	si2		2518204	0					
ANR	2518634	IdentifierDeclStatement	"double graphScore = matchGraph ( si , si2 ) ;"	973:3:22541:22581	2518204	2	True				
ANR	2518635	IdentifierDecl	"graphScore = matchGraph ( si , si2 )"		2518204	0					
ANR	2518636	IdentifierDeclType	double		2518204	0					
ANR	2518637	Identifier	graphScore		2518204	1					
ANR	2518638	AssignmentExpression	"graphScore = matchGraph ( si , si2 )"		2518204	2		=			
ANR	2518639	Identifier	graphScore		2518204	0					
ANR	2518640	CallExpression	"matchGraph ( si , si2 )"		2518204	1					
ANR	2518641	Callee	matchGraph		2518204	0					
ANR	2518642	Identifier	matchGraph		2518204	0					
ANR	2518643	ArgumentList	si		2518204	1					
ANR	2518644	Argument	si		2518204	0					
ANR	2518645	Identifier	si		2518204	0					
ANR	2518646	Argument	si2		2518204	1					
ANR	2518647	Identifier	si2		2518204	0					
ANR	2518648	IdentifierDeclStatement	bool bytesMatch = bytesScore >= ( options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD ) ;	974:3:22586:22693	2518204	3	True				
ANR	2518649	IdentifierDecl	bytesMatch = bytesScore >= ( options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD )		2518204	0					
ANR	2518650	IdentifierDeclType	bool		2518204	0					
ANR	2518651	Identifier	bytesMatch		2518204	1					
ANR	2518652	AssignmentExpression	bytesMatch = bytesScore >= ( options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD )		2518204	2		=			
ANR	2518653	Identifier	bytesMatch		2518204	0					
ANR	2518654	RelationalExpression	bytesScore >= ( options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD )		2518204	1		>=			
ANR	2518655	Identifier	bytesScore		2518204	0					
ANR	2518656	ConditionalExpression	options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD		2518204	1					
ANR	2518657	Condition	options		2518204	0					
ANR	2518658	Identifier	options		2518204	0					
ANR	2518659	PtrMemberAccess	options -> bytes_diff_threshold		2518204	1					
ANR	2518660	Identifier	options		2518204	0					
ANR	2518661	Identifier	bytes_diff_threshold		2518204	1					
ANR	2518662	Identifier	SIGN_DIFF_MATCH_BYTES_THRESHOLD		2518204	2					
ANR	2518663	IdentifierDeclStatement	bool graphMatch = graphScore >= ( options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD ) ;	975:3:22698:22805	2518204	4	True				
ANR	2518664	IdentifierDecl	graphMatch = graphScore >= ( options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD )		2518204	0					
ANR	2518665	IdentifierDeclType	bool		2518204	0					
ANR	2518666	Identifier	graphMatch		2518204	1					
ANR	2518667	AssignmentExpression	graphMatch = graphScore >= ( options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD )		2518204	2		=			
ANR	2518668	Identifier	graphMatch		2518204	0					
ANR	2518669	RelationalExpression	graphScore >= ( options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD )		2518204	1		>=			
ANR	2518670	Identifier	graphScore		2518204	0					
ANR	2518671	ConditionalExpression	options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD		2518204	1					
ANR	2518672	Condition	options		2518204	0					
ANR	2518673	Identifier	options		2518204	0					
ANR	2518674	PtrMemberAccess	options -> graph_diff_threshold		2518204	1					
ANR	2518675	Identifier	options		2518204	0					
ANR	2518676	Identifier	graph_diff_threshold		2518204	1					
ANR	2518677	Identifier	SIGN_DIFF_MATCH_GRAPH_THRESHOLD		2518204	2					
ANR	2518678	IfStatement	if ( bytesMatch )		2518204	5					
ANR	2518679	Condition	bytesMatch	977:7:22815:22824	2518204	0	True				
ANR	2518680	Identifier	bytesMatch		2518204	0					
ANR	2518681	CompoundStatement		79:19:1917:1917	2518204	1					
ANR	2518682	Statement	a	978:4:22833:22833	2518204	0	True				
ANR	2518683	Statement	->	978:5:22834:22835	2518204	1	True				
ANR	2518684	Statement	cb_printf	978:7:22836:22844	2518204	2	True				
ANR	2518685	Statement	(	978:17:22846:22846	2518204	3	True				
ANR	2518686	Statement	"""0x%08"""	978:18:22847:22853	2518204	4	True				
ANR	2518687	Statement	PFMT64x	978:25:22854:22860	2518204	5	True				
ANR	2518688	Statement	""" 0x%08"""	978:32:22861:22868	2518204	6	True				
ANR	2518689	Statement	PFMT64x	978:40:22869:22875	2518204	7	True				
ANR	2518690	Statement	""" %02.5lf B %s\\n"""	978:48:22877:22893	2518204	8	True				
ANR	2518691	Statement	","	978:65:22894:22894	2518204	9	True				
ANR	2518692	Statement	si	978:67:22896:22897	2518204	10	True				
ANR	2518693	Statement	->	978:69:22898:22899	2518204	11	True				
ANR	2518694	Statement	addr	978:71:22900:22903	2518204	12	True				
ANR	2518695	Statement	","	978:75:22904:22904	2518204	13	True				
ANR	2518696	Statement	si2	978:77:22906:22908	2518204	14	True				
ANR	2518697	Statement	->	978:80:22909:22910	2518204	15	True				
ANR	2518698	Statement	addr	978:82:22911:22914	2518204	16	True				
ANR	2518699	Statement	","	978:86:22915:22915	2518204	17	True				
ANR	2518700	Statement	bytesScore	978:88:22917:22926	2518204	18	True				
ANR	2518701	Statement	","	978:98:22927:22927	2518204	19	True				
ANR	2518702	Statement	si	978:100:22929:22930	2518204	20	True				
ANR	2518703	Statement	->	978:102:22931:22932	2518204	21	True				
ANR	2518704	Statement	name	978:104:22933:22936	2518204	22	True				
ANR	2518705	Statement	)	978:108:22937:22937	2518204	23	True				
ANR	2518706	ExpressionStatement		978:109:22938:22938	2518204	24	True				
ANR	2518707	IfStatement	if ( graphMatch )		2518204	6					
ANR	2518708	Condition	graphMatch	981:7:22953:22962	2518204	0	True				
ANR	2518709	Identifier	graphMatch		2518204	0					
ANR	2518710	CompoundStatement		83:19:2055:2055	2518204	1					
ANR	2518711	Statement	a	982:4:22971:22971	2518204	0	True				
ANR	2518712	Statement	->	982:5:22972:22973	2518204	1	True				
ANR	2518713	Statement	cb_printf	982:7:22974:22982	2518204	2	True				
ANR	2518714	Statement	(	982:17:22984:22984	2518204	3	True				
ANR	2518715	Statement	"""0x%08"""	982:18:22985:22991	2518204	4	True				
ANR	2518716	Statement	PFMT64x	982:25:22992:22998	2518204	5	True				
ANR	2518717	Statement	""" 0x%08"""	982:32:22999:23006	2518204	6	True				
ANR	2518718	Statement	PFMT64x	982:40:23007:23013	2518204	7	True				
ANR	2518719	Statement	""" %02.5lf G %s\\n"""	982:47:23014:23030	2518204	8	True				
ANR	2518720	Statement	","	982:64:23031:23031	2518204	9	True				
ANR	2518721	Statement	si	982:66:23033:23034	2518204	10	True				
ANR	2518722	Statement	->	982:68:23035:23036	2518204	11	True				
ANR	2518723	Statement	addr	982:70:23037:23040	2518204	12	True				
ANR	2518724	Statement	","	982:74:23041:23041	2518204	13	True				
ANR	2518725	Statement	si2	982:76:23043:23045	2518204	14	True				
ANR	2518726	Statement	->	982:79:23046:23047	2518204	15	True				
ANR	2518727	Statement	addr	982:81:23048:23051	2518204	16	True				
ANR	2518728	Statement	","	982:85:23052:23052	2518204	17	True				
ANR	2518729	Statement	graphScore	982:87:23054:23063	2518204	18	True				
ANR	2518730	Statement	","	982:97:23064:23064	2518204	19	True				
ANR	2518731	Statement	si	982:99:23066:23067	2518204	20	True				
ANR	2518732	Statement	->	982:101:23068:23069	2518204	21	True				
ANR	2518733	Statement	name	982:103:23070:23073	2518204	22	True				
ANR	2518734	Statement	)	982:107:23074:23074	2518204	23	True				
ANR	2518735	ExpressionStatement		982:108:23075:23075	2518204	24	True				
ANR	2518736	ExpressionStatement	r_list_free ( la )	987:1:23091:23107	2518204	51	True				
ANR	2518737	CallExpression	r_list_free ( la )		2518204	0					
ANR	2518738	Callee	r_list_free		2518204	0					
ANR	2518739	Identifier	r_list_free		2518204	0					
ANR	2518740	ArgumentList	la		2518204	1					
ANR	2518741	Argument	la		2518204	0					
ANR	2518742	Identifier	la		2518204	0					
ANR	2518743	ExpressionStatement	r_list_free ( lb )	988:1:23110:23126	2518204	52	True				
ANR	2518744	CallExpression	r_list_free ( lb )		2518204	0					
ANR	2518745	Callee	r_list_free		2518204	0					
ANR	2518746	Identifier	r_list_free		2518204	0					
ANR	2518747	ArgumentList	lb		2518204	1					
ANR	2518748	Argument	lb		2518204	0					
ANR	2518749	Identifier	lb		2518204	0					
ANR	2518750	ReturnStatement	return true ;	990:1:23130:23141	2518204	53	True				
ANR	2518751	Identifier	true		2518204	0					
ANR	2518752	Label	beach :	991:0:23143:23148	2518204	54	True				
ANR	2518753	Identifier	beach		2518204	0					
ANR	2518754	ExpressionStatement	ls_free ( current_zigns )	992:1:23151:23174	2518204	55	True				
ANR	2518755	CallExpression	ls_free ( current_zigns )		2518204	0					
ANR	2518756	Callee	ls_free		2518204	0					
ANR	2518757	Identifier	ls_free		2518204	0					
ANR	2518758	ArgumentList	current_zigns		2518204	1					
ANR	2518759	Argument	current_zigns		2518204	0					
ANR	2518760	Identifier	current_zigns		2518204	0					
ANR	2518761	ExpressionStatement	ls_free ( other_zigns )	993:1:23177:23198	2518204	56	True				
ANR	2518762	CallExpression	ls_free ( other_zigns )		2518204	0					
ANR	2518763	Callee	ls_free		2518204	0					
ANR	2518764	Identifier	ls_free		2518204	0					
ANR	2518765	ArgumentList	other_zigns		2518204	1					
ANR	2518766	Argument	other_zigns		2518204	0					
ANR	2518767	Identifier	other_zigns		2518204	0					
ANR	2518768	ExpressionStatement	r_list_free ( la )	994:1:23201:23217	2518204	57	True				
ANR	2518769	CallExpression	r_list_free ( la )		2518204	0					
ANR	2518770	Callee	r_list_free		2518204	0					
ANR	2518771	Identifier	r_list_free		2518204	0					
ANR	2518772	ArgumentList	la		2518204	1					
ANR	2518773	Argument	la		2518204	0					
ANR	2518774	Identifier	la		2518204	0					
ANR	2518775	ExpressionStatement	r_list_free ( lb )	995:1:23220:23236	2518204	58	True				
ANR	2518776	CallExpression	r_list_free ( lb )		2518204	0					
ANR	2518777	Callee	r_list_free		2518204	0					
ANR	2518778	Identifier	r_list_free		2518204	0					
ANR	2518779	ArgumentList	lb		2518204	1					
ANR	2518780	Argument	lb		2518204	0					
ANR	2518781	Identifier	lb		2518204	0					
ANR	2518782	ReturnStatement	return false ;	997:1:23240:23252	2518204	59	True				
ANR	2518783	Identifier	false		2518204	0					
ANR	2518784	ReturnType	R_API bool		2518204	1					
ANR	2518785	Identifier	r_sign_diff		2518204	2					
ANR	2518786	ParameterList	"RAnal * a , RSignOptions * options , const char * other_space_name"		2518204	3					
ANR	2518787	Parameter	RAnal * a	899:23:20846:20853	2518204	0	True				
ANR	2518788	ParameterType	RAnal *		2518204	0					
ANR	2518789	Identifier	a		2518204	1					
ANR	2518790	Parameter	RSignOptions * options	899:33:20856:20876	2518204	1	True				
ANR	2518791	ParameterType	RSignOptions *		2518204	0					
ANR	2518792	Identifier	options		2518204	1					
ANR	2518793	Parameter	const char * other_space_name	899:56:20879:20906	2518204	2	True				
ANR	2518794	ParameterType	const char *		2518204	0					
ANR	2518795	Identifier	other_space_name		2518204	1					
ANR	2518796	CFGEntryNode	ENTRY		2518204		True				
ANR	2518797	CFGExitNode	EXIT		2518204		True				
ANR	2518798	CFGErrorNode	ERROR		2518204		True				
ANR	2518799	Symbol	SIGN_DIFF_MATCH_BYTES_THRESHOLD		2518204						
ANR	2518800	Symbol	kv -> base . key		2518204						
ANR	2518801	Symbol	si2 -> name		2518204						
ANR	2518802	Symbol	current_zigns		2518204						
ANR	2518803	Symbol	kv -> base . value		2518204						
ANR	2518804	Symbol	options		2518204						
ANR	2518805	Symbol	ls_length		2518204						
ANR	2518806	Symbol	options -> bytes_diff_threshold		2518204						
ANR	2518807	Symbol	si2		2518204						
ANR	2518808	Symbol	* si		2518204						
ANR	2518809	Symbol	si -> name		2518204						
ANR	2518810	Symbol	NULL		2518204						
ANR	2518811	Symbol	itr		2518204						
ANR	2518812	Symbol	iter		2518204						
ANR	2518813	Symbol	it		2518204						
ANR	2518814	Symbol	graphScore		2518204						
ANR	2518815	Symbol	r_spaces_get		2518204						
ANR	2518816	Symbol	r_sign_deserialize		2518204						
ANR	2518817	Symbol	matchBytes		2518204						
ANR	2518818	Symbol	other_space_name		2518204						
ANR	2518819	Symbol	* kv		2518204						
ANR	2518820	Symbol	kv -> base		2518204						
ANR	2518821	Symbol	strstr		2518204						
ANR	2518822	Symbol	bytesScore		2518204						
ANR	2518823	Symbol	true		2518204						
ANR	2518824	Symbol	r_sign_item_new		2518204						
ANR	2518825	Symbol	* si2		2518204						
ANR	2518826	Symbol	& a -> zign_spaces		2518204						
ANR	2518827	Symbol	* options		2518204						
ANR	2518828	Symbol	matchGraph		2518204						
ANR	2518829	Symbol	si		2518204						
ANR	2518830	Symbol	other_space		2518204						
ANR	2518831	Symbol	itr2		2518204						
ANR	2518832	Symbol	r_spaces_current		2518204						
ANR	2518833	Symbol	a		2518204						
ANR	2518834	Symbol	current_space		2518204						
ANR	2518835	Symbol	bytesMatch		2518204						
ANR	2518836	Symbol	graphMatch		2518204						
ANR	2518837	Symbol	false		2518204						
ANR	2518838	Symbol	k		2518204						
ANR	2518839	Symbol	* a		2518204						
ANR	2518840	Symbol	kv		2518204						
ANR	2518841	Symbol	a -> sdb_zigns		2518204						
ANR	2518842	Symbol	other_zigns		2518204						
ANR	2518843	Symbol	options -> graph_diff_threshold		2518204						
ANR	2518844	Symbol	sdb_foreach_match		2518204						
ANR	2518845	Symbol	la		2518204						
ANR	2518846	Symbol	lb		2518204						
ANR	2518847	Symbol	SIGN_DIFF_MATCH_GRAPH_THRESHOLD		2518204						
ANR	2518848	Symbol	r_list_new		2518204						
ANR	2518849	Function	r_sign_diff_by_name	1000:0:23257:26072							
ANR	2518850	FunctionDef	"r_sign_diff_by_name (RAnal * a , RSignOptions * options , const char * other_space_name , bool not_matching)"		2518849	0					
ANR	2518851	CompoundStatement		1000:114:23371:26072	2518849	0					
ANR	2518852	IdentifierDeclStatement	char k [ R_SIGN_KEY_MAXSZ ] ;	1001:1:23374:23398	2518849	0	True				
ANR	2518853	IdentifierDecl	k [ R_SIGN_KEY_MAXSZ ]		2518849	0					
ANR	2518854	IdentifierDeclType	char [ R_SIGN_KEY_MAXSZ ]		2518849	0					
ANR	2518855	Identifier	k		2518849	1					
ANR	2518856	Identifier	R_SIGN_KEY_MAXSZ		2518849	2					
ANR	2518857	ExpressionStatement	"r_return_val_if_fail ( a && other_space_name , false )"	1003:1:23402:23453	2518849	1	True				
ANR	2518858	CallExpression	"r_return_val_if_fail ( a && other_space_name , false )"		2518849	0					
ANR	2518859	Callee	r_return_val_if_fail		2518849	0					
ANR	2518860	Identifier	r_return_val_if_fail		2518849	0					
ANR	2518861	ArgumentList	a && other_space_name		2518849	1					
ANR	2518862	Argument	a && other_space_name		2518849	0					
ANR	2518863	AndExpression	a && other_space_name		2518849	0		&&			
ANR	2518864	Identifier	a		2518849	0					
ANR	2518865	Identifier	other_space_name		2518849	1					
ANR	2518866	Argument	false		2518849	1					
ANR	2518867	Identifier	false		2518849	0					
ANR	2518868	IdentifierDeclStatement	RSpace * current_space = r_spaces_current ( & a -> zign_spaces ) ;	1005:1:23457:23515	2518849	2	True				
ANR	2518869	IdentifierDecl	* current_space = r_spaces_current ( & a -> zign_spaces )		2518849	0					
ANR	2518870	IdentifierDeclType	RSpace *		2518849	0					
ANR	2518871	Identifier	current_space		2518849	1					
ANR	2518872	AssignmentExpression	* current_space = r_spaces_current ( & a -> zign_spaces )		2518849	2		=			
ANR	2518873	Identifier	current_space		2518849	0					
ANR	2518874	CallExpression	r_spaces_current ( & a -> zign_spaces )		2518849	1					
ANR	2518875	Callee	r_spaces_current		2518849	0					
ANR	2518876	Identifier	r_spaces_current		2518849	0					
ANR	2518877	ArgumentList	& a -> zign_spaces		2518849	1					
ANR	2518878	Argument	& a -> zign_spaces		2518849	0					
ANR	2518879	UnaryOperationExpression	& a -> zign_spaces		2518849	0					
ANR	2518880	UnaryOperator	&		2518849	0					
ANR	2518881	PtrMemberAccess	a -> zign_spaces		2518849	1					
ANR	2518882	Identifier	a		2518849	0					
ANR	2518883	Identifier	zign_spaces		2518849	1					
ANR	2518884	IfStatement	if ( ! current_space )		2518849	3					
ANR	2518885	Condition	! current_space	1006:5:23522:23535	2518849	0	True				
ANR	2518886	UnaryOperationExpression	! current_space		2518849	0					
ANR	2518887	UnaryOperator	!		2518849	0					
ANR	2518888	Identifier	current_space		2518849	1					
ANR	2518889	CompoundStatement		7:21:166:166	2518849	1					
ANR	2518890	ReturnStatement	return false ;	1007:2:23542:23554	2518849	0	True				
ANR	2518891	Identifier	false		2518849	0					
ANR	2518892	IdentifierDeclStatement	"RSpace * other_space = r_spaces_get ( & a -> zign_spaces , other_space_name ) ;"	1009:1:23560:23630	2518849	4	True				
ANR	2518893	IdentifierDecl	"* other_space = r_spaces_get ( & a -> zign_spaces , other_space_name )"		2518849	0					
ANR	2518894	IdentifierDeclType	RSpace *		2518849	0					
ANR	2518895	Identifier	other_space		2518849	1					
ANR	2518896	AssignmentExpression	"* other_space = r_spaces_get ( & a -> zign_spaces , other_space_name )"		2518849	2		=			
ANR	2518897	Identifier	other_space		2518849	0					
ANR	2518898	CallExpression	"r_spaces_get ( & a -> zign_spaces , other_space_name )"		2518849	1					
ANR	2518899	Callee	r_spaces_get		2518849	0					
ANR	2518900	Identifier	r_spaces_get		2518849	0					
ANR	2518901	ArgumentList	& a -> zign_spaces		2518849	1					
ANR	2518902	Argument	& a -> zign_spaces		2518849	0					
ANR	2518903	UnaryOperationExpression	& a -> zign_spaces		2518849	0					
ANR	2518904	UnaryOperator	&		2518849	0					
ANR	2518905	PtrMemberAccess	a -> zign_spaces		2518849	1					
ANR	2518906	Identifier	a		2518849	0					
ANR	2518907	Identifier	zign_spaces		2518849	1					
ANR	2518908	Argument	other_space_name		2518849	1					
ANR	2518909	Identifier	other_space_name		2518849	0					
ANR	2518910	IfStatement	if ( ! other_space )		2518849	5					
ANR	2518911	Condition	! other_space	1010:5:23637:23648	2518849	0	True				
ANR	2518912	UnaryOperationExpression	! other_space		2518849	0					
ANR	2518913	UnaryOperator	!		2518849	0					
ANR	2518914	Identifier	other_space		2518849	1					
ANR	2518915	CompoundStatement		11:19:279:279	2518849	1					
ANR	2518916	ReturnStatement	return false ;	1011:2:23655:23667	2518849	0	True				
ANR	2518917	Identifier	false		2518849	0					
ANR	2518918	ExpressionStatement	"serializeKey ( a , current_space , """" , k )"	1014:1:23674:23712	2518849	6	True				
ANR	2518919	CallExpression	"serializeKey ( a , current_space , """" , k )"		2518849	0					
ANR	2518920	Callee	serializeKey		2518849	0					
ANR	2518921	Identifier	serializeKey		2518849	0					
ANR	2518922	ArgumentList	a		2518849	1					
ANR	2518923	Argument	a		2518849	0					
ANR	2518924	Identifier	a		2518849	0					
ANR	2518925	Argument	current_space		2518849	1					
ANR	2518926	Identifier	current_space		2518849	0					
ANR	2518927	Argument	""""""		2518849	2					
ANR	2518928	PrimaryExpression	""""""		2518849	0					
ANR	2518929	Argument	k		2518849	3					
ANR	2518930	Identifier	k		2518849	0					
ANR	2518931	IdentifierDeclStatement	"SdbList * current_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false ) ;"	1015:1:23715:23782	2518849	7	True				
ANR	2518932	IdentifierDecl	"* current_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false )"		2518849	0					
ANR	2518933	IdentifierDeclType	SdbList *		2518849	0					
ANR	2518934	Identifier	current_zigns		2518849	1					
ANR	2518935	AssignmentExpression	"* current_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false )"		2518849	2		=			
ANR	2518936	Identifier	current_zigns		2518849	0					
ANR	2518937	CallExpression	"sdb_foreach_match ( a -> sdb_zigns , k , false )"		2518849	1					
ANR	2518938	Callee	sdb_foreach_match		2518849	0					
ANR	2518939	Identifier	sdb_foreach_match		2518849	0					
ANR	2518940	ArgumentList	a -> sdb_zigns		2518849	1					
ANR	2518941	Argument	a -> sdb_zigns		2518849	0					
ANR	2518942	PtrMemberAccess	a -> sdb_zigns		2518849	0					
ANR	2518943	Identifier	a		2518849	0					
ANR	2518944	Identifier	sdb_zigns		2518849	1					
ANR	2518945	Argument	k		2518849	1					
ANR	2518946	Identifier	k		2518849	0					
ANR	2518947	Argument	false		2518849	2					
ANR	2518948	Identifier	false		2518849	0					
ANR	2518949	ExpressionStatement	"serializeKey ( a , other_space , """" , k )"	1017:1:23786:23822	2518849	8	True				
ANR	2518950	CallExpression	"serializeKey ( a , other_space , """" , k )"		2518849	0					
ANR	2518951	Callee	serializeKey		2518849	0					
ANR	2518952	Identifier	serializeKey		2518849	0					
ANR	2518953	ArgumentList	a		2518849	1					
ANR	2518954	Argument	a		2518849	0					
ANR	2518955	Identifier	a		2518849	0					
ANR	2518956	Argument	other_space		2518849	1					
ANR	2518957	Identifier	other_space		2518849	0					
ANR	2518958	Argument	""""""		2518849	2					
ANR	2518959	PrimaryExpression	""""""		2518849	0					
ANR	2518960	Argument	k		2518849	3					
ANR	2518961	Identifier	k		2518849	0					
ANR	2518962	IdentifierDeclStatement	"SdbList * other_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false ) ;"	1018:1:23825:23890	2518849	9	True				
ANR	2518963	IdentifierDecl	"* other_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false )"		2518849	0					
ANR	2518964	IdentifierDeclType	SdbList *		2518849	0					
ANR	2518965	Identifier	other_zigns		2518849	1					
ANR	2518966	AssignmentExpression	"* other_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false )"		2518849	2		=			
ANR	2518967	Identifier	other_zigns		2518849	0					
ANR	2518968	CallExpression	"sdb_foreach_match ( a -> sdb_zigns , k , false )"		2518849	1					
ANR	2518969	Callee	sdb_foreach_match		2518849	0					
ANR	2518970	Identifier	sdb_foreach_match		2518849	0					
ANR	2518971	ArgumentList	a -> sdb_zigns		2518849	1					
ANR	2518972	Argument	a -> sdb_zigns		2518849	0					
ANR	2518973	PtrMemberAccess	a -> sdb_zigns		2518849	0					
ANR	2518974	Identifier	a		2518849	0					
ANR	2518975	Identifier	sdb_zigns		2518849	1					
ANR	2518976	Argument	k		2518849	1					
ANR	2518977	Identifier	k		2518849	0					
ANR	2518978	Argument	false		2518849	2					
ANR	2518979	Identifier	false		2518849	0					
ANR	2518980	ExpressionStatement	"eprintf ( ""Diff by name %d %d (%s)\\n"" , ( int ) ls_length ( current_zigns ) , ( int ) ls_length ( other_zigns ) , not_matching ? ""not matching"" : ""matching"" )"	1020:1:23894:24037	2518849	10	True				
ANR	2518981	CallExpression	"eprintf ( ""Diff by name %d %d (%s)\\n"" , ( int ) ls_length ( current_zigns ) , ( int ) ls_length ( other_zigns ) , not_matching ? ""not matching"" : ""matching"" )"		2518849	0					
ANR	2518982	Callee	eprintf		2518849	0					
ANR	2518983	Identifier	eprintf		2518849	0					
ANR	2518984	ArgumentList	"""Diff by name %d %d (%s)\\n"""		2518849	1					
ANR	2518985	Argument	"""Diff by name %d %d (%s)\\n"""		2518849	0					
ANR	2518986	PrimaryExpression	"""Diff by name %d %d (%s)\\n"""		2518849	0					
ANR	2518987	Argument	( int ) ls_length ( current_zigns )		2518849	1					
ANR	2518988	CastExpression	( int ) ls_length ( current_zigns )		2518849	0					
ANR	2518989	CastTarget	int		2518849	0					
ANR	2518990	CallExpression	ls_length ( current_zigns )		2518849	1					
ANR	2518991	Callee	ls_length		2518849	0					
ANR	2518992	Identifier	ls_length		2518849	0					
ANR	2518993	ArgumentList	current_zigns		2518849	1					
ANR	2518994	Argument	current_zigns		2518849	0					
ANR	2518995	Identifier	current_zigns		2518849	0					
ANR	2518996	Argument	( int ) ls_length ( other_zigns )		2518849	2					
ANR	2518997	CastExpression	( int ) ls_length ( other_zigns )		2518849	0					
ANR	2518998	CastTarget	int		2518849	0					
ANR	2518999	CallExpression	ls_length ( other_zigns )		2518849	1					
ANR	2519000	Callee	ls_length		2518849	0					
ANR	2519001	Identifier	ls_length		2518849	0					
ANR	2519002	ArgumentList	other_zigns		2518849	1					
ANR	2519003	Argument	other_zigns		2518849	0					
ANR	2519004	Identifier	other_zigns		2518849	0					
ANR	2519005	Argument	"not_matching ? ""not matching"" : ""matching"""		2518849	3					
ANR	2519006	ConditionalExpression	"not_matching ? ""not matching"" : ""matching"""		2518849	0					
ANR	2519007	Condition	not_matching		2518849	0					
ANR	2519008	Identifier	not_matching		2518849	0					
ANR	2519009	PrimaryExpression	"""not matching"""		2518849	1					
ANR	2519010	PrimaryExpression	"""matching"""		2518849	2					
ANR	2519011	IdentifierDeclStatement	SdbListIter * iter ;	1022:1:24041:24058	2518849	11	True				
ANR	2519012	IdentifierDecl	* iter		2518849	0					
ANR	2519013	IdentifierDeclType	SdbListIter *		2518849	0					
ANR	2519014	Identifier	iter		2518849	1					
ANR	2519015	IdentifierDeclStatement	SdbKv * kv ;	1023:1:24061:24070	2518849	12	True				
ANR	2519016	IdentifierDecl	* kv		2518849	0					
ANR	2519017	IdentifierDeclType	SdbKv *		2518849	0					
ANR	2519018	Identifier	kv		2518849	1					
ANR	2519019	IdentifierDeclStatement	RList * lb = NULL ;	1024:1:24073:24089	2518849	13	True				
ANR	2519020	IdentifierDecl	* lb = NULL		2518849	0					
ANR	2519021	IdentifierDeclType	RList *		2518849	0					
ANR	2519022	Identifier	lb		2518849	1					
ANR	2519023	AssignmentExpression	* lb = NULL		2518849	2		=			
ANR	2519024	Identifier	NULL		2518849	0					
ANR	2519025	Identifier	NULL		2518849	1					
ANR	2519026	IdentifierDeclStatement	RList * la = r_list_new ( ) ;	1025:1:24092:24117	2518849	14	True				
ANR	2519027	IdentifierDecl	* la = r_list_new ( )		2518849	0					
ANR	2519028	IdentifierDeclType	RList *		2518849	0					
ANR	2519029	Identifier	la		2518849	1					
ANR	2519030	AssignmentExpression	* la = r_list_new ( )		2518849	2		=			
ANR	2519031	Identifier	la		2518849	0					
ANR	2519032	CallExpression	r_list_new ( )		2518849	1					
ANR	2519033	Callee	r_list_new		2518849	0					
ANR	2519034	Identifier	r_list_new		2518849	0					
ANR	2519035	ArgumentList			2518849	1					
ANR	2519036	IfStatement	if ( ! la )		2518849	15					
ANR	2519037	Condition	! la	1026:5:24124:24126	2518849	0	True				
ANR	2519038	UnaryOperationExpression	! la		2518849	0					
ANR	2519039	UnaryOperator	!		2518849	0					
ANR	2519040	Identifier	la		2518849	1					
ANR	2519041	CompoundStatement		27:10:757:757	2518849	1					
ANR	2519042	GotoStatement	goto beach ;	1027:2:24133:24143	2518849	0	True				
ANR	2519043	Identifier	beach		2518849	0					
ANR	2519044	Statement	ls_foreach	1029:1:24149:24158	2518849	16	True				
ANR	2519045	Statement	(	1029:12:24160:24160	2518849	17	True				
ANR	2519046	Statement	current_zigns	1029:13:24161:24173	2518849	18	True				
ANR	2519047	Statement	","	1029:26:24174:24174	2518849	19	True				
ANR	2519048	Statement	iter	1029:28:24176:24179	2518849	20	True				
ANR	2519049	Statement	","	1029:32:24180:24180	2518849	21	True				
ANR	2519050	Statement	kv	1029:34:24182:24183	2518849	22	True				
ANR	2519051	Statement	)	1029:36:24184:24184	2518849	23	True				
ANR	2519052	CompoundStatement		31:2:818:852	2518849	24					
ANR	2519053	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	1030:2:24190:24224	2518849	0	True				
ANR	2519054	IdentifierDecl	* it = r_sign_item_new ( )		2518849	0					
ANR	2519055	IdentifierDeclType	RSignItem *		2518849	0					
ANR	2519056	Identifier	it		2518849	1					
ANR	2519057	AssignmentExpression	* it = r_sign_item_new ( )		2518849	2		=			
ANR	2519058	Identifier	it		2518849	0					
ANR	2519059	CallExpression	r_sign_item_new ( )		2518849	1					
ANR	2519060	Callee	r_sign_item_new		2518849	0					
ANR	2519061	Identifier	r_sign_item_new		2518849	0					
ANR	2519062	ArgumentList			2518849	1					
ANR	2519063	IfStatement	if ( ! it )		2518849	1					
ANR	2519064	Condition	! it	1031:6:24232:24234	2518849	0	True				
ANR	2519065	UnaryOperationExpression	! it		2518849	0					
ANR	2519066	UnaryOperator	!		2518849	0					
ANR	2519067	Identifier	it		2518849	1					
ANR	2519068	CompoundStatement		32:11:865:865	2518849	1					
ANR	2519069	GotoStatement	goto beach ;	1032:3:24242:24252	2518849	0	True				
ANR	2519070	Identifier	beach		2518849	0					
ANR	2519071	IfStatement	"if ( r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value ) )"		2518849	2					
ANR	2519072	Condition	"r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value )"	1034:6:24264:24319	2518849	0	True				
ANR	2519073	CallExpression	"r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value )"		2518849	0					
ANR	2519074	Callee	r_sign_deserialize		2518849	0					
ANR	2519075	Identifier	r_sign_deserialize		2518849	0					
ANR	2519076	ArgumentList	a		2518849	1					
ANR	2519077	Argument	a		2518849	0					
ANR	2519078	Identifier	a		2518849	0					
ANR	2519079	Argument	it		2518849	1					
ANR	2519080	Identifier	it		2518849	0					
ANR	2519081	Argument	kv -> base . key		2518849	2					
ANR	2519082	MemberAccess	kv -> base . key		2518849	0					
ANR	2519083	PtrMemberAccess	kv -> base		2518849	0					
ANR	2519084	Identifier	kv		2518849	0					
ANR	2519085	Identifier	base		2518849	1					
ANR	2519086	Identifier	key		2518849	1					
ANR	2519087	Argument	kv -> base . value		2518849	3					
ANR	2519088	MemberAccess	kv -> base . value		2518849	0					
ANR	2519089	PtrMemberAccess	kv -> base		2518849	0					
ANR	2519090	Identifier	kv		2518849	0					
ANR	2519091	Identifier	base		2518849	1					
ANR	2519092	Identifier	value		2518849	1					
ANR	2519093	CompoundStatement		35:64:950:950	2518849	1					
ANR	2519094	ExpressionStatement	"r_list_append ( la , it )"	1035:3:24327:24349	2518849	0	True				
ANR	2519095	CallExpression	"r_list_append ( la , it )"		2518849	0					
ANR	2519096	Callee	r_list_append		2518849	0					
ANR	2519097	Identifier	r_list_append		2518849	0					
ANR	2519098	ArgumentList	la		2518849	1					
ANR	2519099	Argument	la		2518849	0					
ANR	2519100	Identifier	la		2518849	0					
ANR	2519101	Argument	it		2518849	1					
ANR	2519102	Identifier	it		2518849	0					
ANR	2519103	ElseStatement	else		2518849	0					
ANR	2519104	CompoundStatement		37:9:988:988	2518849	0					
ANR	2519105	ExpressionStatement	r_sign_item_free ( it )	1037:3:24365:24386	2518849	0	True				
ANR	2519106	CallExpression	r_sign_item_free ( it )		2518849	0					
ANR	2519107	Callee	r_sign_item_free		2518849	0					
ANR	2519108	Identifier	r_sign_item_free		2518849	0					
ANR	2519109	ArgumentList	it		2518849	1					
ANR	2519110	Argument	it		2518849	0					
ANR	2519111	Identifier	it		2518849	0					
ANR	2519112	ExpressionStatement	lb = r_list_new ( )	1040:1:24396:24414	2518849	25	True				
ANR	2519113	AssignmentExpression	lb = r_list_new ( )		2518849	0		=			
ANR	2519114	Identifier	lb		2518849	0					
ANR	2519115	CallExpression	r_list_new ( )		2518849	1					
ANR	2519116	Callee	r_list_new		2518849	0					
ANR	2519117	Identifier	r_list_new		2518849	0					
ANR	2519118	ArgumentList			2518849	1					
ANR	2519119	IfStatement	if ( ! la )		2518849	26					
ANR	2519120	Condition	! la	1041:5:24421:24423	2518849	0	True				
ANR	2519121	UnaryOperationExpression	! la		2518849	0					
ANR	2519122	UnaryOperator	!		2518849	0					
ANR	2519123	Identifier	la		2518849	1					
ANR	2519124	CompoundStatement		42:10:1054:1054	2518849	1					
ANR	2519125	GotoStatement	goto beach ;	1042:2:24430:24440	2518849	0	True				
ANR	2519126	Identifier	beach		2518849	0					
ANR	2519127	Statement	ls_foreach	1044:1:24446:24455	2518849	27	True				
ANR	2519128	Statement	(	1044:12:24457:24457	2518849	28	True				
ANR	2519129	Statement	other_zigns	1044:13:24458:24468	2518849	29	True				
ANR	2519130	Statement	","	1044:24:24469:24469	2518849	30	True				
ANR	2519131	Statement	iter	1044:26:24471:24474	2518849	31	True				
ANR	2519132	Statement	","	1044:30:24475:24475	2518849	32	True				
ANR	2519133	Statement	kv	1044:32:24477:24478	2518849	33	True				
ANR	2519134	Statement	)	1044:34:24479:24479	2518849	34	True				
ANR	2519135	CompoundStatement		46:2:1113:1147	2518849	35					
ANR	2519136	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	1045:2:24485:24519	2518849	0	True				
ANR	2519137	IdentifierDecl	* it = r_sign_item_new ( )		2518849	0					
ANR	2519138	IdentifierDeclType	RSignItem *		2518849	0					
ANR	2519139	Identifier	it		2518849	1					
ANR	2519140	AssignmentExpression	* it = r_sign_item_new ( )		2518849	2		=			
ANR	2519141	Identifier	it		2518849	0					
ANR	2519142	CallExpression	r_sign_item_new ( )		2518849	1					
ANR	2519143	Callee	r_sign_item_new		2518849	0					
ANR	2519144	Identifier	r_sign_item_new		2518849	0					
ANR	2519145	ArgumentList			2518849	1					
ANR	2519146	IfStatement	if ( ! it )		2518849	1					
ANR	2519147	Condition	! it	1046:6:24527:24529	2518849	0	True				
ANR	2519148	UnaryOperationExpression	! it		2518849	0					
ANR	2519149	UnaryOperator	!		2518849	0					
ANR	2519150	Identifier	it		2518849	1					
ANR	2519151	CompoundStatement		47:11:1160:1160	2518849	1					
ANR	2519152	GotoStatement	goto beach ;	1047:3:24537:24547	2518849	0	True				
ANR	2519153	Identifier	beach		2518849	0					
ANR	2519154	IfStatement	"if ( r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value ) )"		2518849	2					
ANR	2519155	Condition	"r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value )"	1049:6:24559:24614	2518849	0	True				
ANR	2519156	CallExpression	"r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value )"		2518849	0					
ANR	2519157	Callee	r_sign_deserialize		2518849	0					
ANR	2519158	Identifier	r_sign_deserialize		2518849	0					
ANR	2519159	ArgumentList	a		2518849	1					
ANR	2519160	Argument	a		2518849	0					
ANR	2519161	Identifier	a		2518849	0					
ANR	2519162	Argument	it		2518849	1					
ANR	2519163	Identifier	it		2518849	0					
ANR	2519164	Argument	kv -> base . key		2518849	2					
ANR	2519165	MemberAccess	kv -> base . key		2518849	0					
ANR	2519166	PtrMemberAccess	kv -> base		2518849	0					
ANR	2519167	Identifier	kv		2518849	0					
ANR	2519168	Identifier	base		2518849	1					
ANR	2519169	Identifier	key		2518849	1					
ANR	2519170	Argument	kv -> base . value		2518849	3					
ANR	2519171	MemberAccess	kv -> base . value		2518849	0					
ANR	2519172	PtrMemberAccess	kv -> base		2518849	0					
ANR	2519173	Identifier	kv		2518849	0					
ANR	2519174	Identifier	base		2518849	1					
ANR	2519175	Identifier	value		2518849	1					
ANR	2519176	CompoundStatement		50:64:1245:1245	2518849	1					
ANR	2519177	ExpressionStatement	"r_list_append ( lb , it )"	1050:3:24622:24644	2518849	0	True				
ANR	2519178	CallExpression	"r_list_append ( lb , it )"		2518849	0					
ANR	2519179	Callee	r_list_append		2518849	0					
ANR	2519180	Identifier	r_list_append		2518849	0					
ANR	2519181	ArgumentList	lb		2518849	1					
ANR	2519182	Argument	lb		2518849	0					
ANR	2519183	Identifier	lb		2518849	0					
ANR	2519184	Argument	it		2518849	1					
ANR	2519185	Identifier	it		2518849	0					
ANR	2519186	ElseStatement	else		2518849	0					
ANR	2519187	CompoundStatement		52:9:1283:1283	2518849	0					
ANR	2519188	ExpressionStatement	r_sign_item_free ( it )	1052:3:24660:24681	2518849	0	True				
ANR	2519189	CallExpression	r_sign_item_free ( it )		2518849	0					
ANR	2519190	Callee	r_sign_item_free		2518849	0					
ANR	2519191	Identifier	r_sign_item_free		2518849	0					
ANR	2519192	ArgumentList	it		2518849	1					
ANR	2519193	Argument	it		2518849	0					
ANR	2519194	Identifier	it		2518849	0					
ANR	2519195	ExpressionStatement	ls_free ( current_zigns )	1056:1:24692:24715	2518849	36	True				
ANR	2519196	CallExpression	ls_free ( current_zigns )		2518849	0					
ANR	2519197	Callee	ls_free		2518849	0					
ANR	2519198	Identifier	ls_free		2518849	0					
ANR	2519199	ArgumentList	current_zigns		2518849	1					
ANR	2519200	Argument	current_zigns		2518849	0					
ANR	2519201	Identifier	current_zigns		2518849	0					
ANR	2519202	ExpressionStatement	ls_free ( other_zigns )	1057:1:24718:24739	2518849	37	True				
ANR	2519203	CallExpression	ls_free ( other_zigns )		2518849	0					
ANR	2519204	Callee	ls_free		2518849	0					
ANR	2519205	Identifier	ls_free		2518849	0					
ANR	2519206	ArgumentList	other_zigns		2518849	1					
ANR	2519207	Argument	other_zigns		2518849	0					
ANR	2519208	Identifier	other_zigns		2518849	0					
ANR	2519209	IdentifierDeclStatement	RListIter * itr ;	1059:1:24743:24757	2518849	38	True				
ANR	2519210	IdentifierDecl	* itr		2518849	0					
ANR	2519211	IdentifierDeclType	RListIter *		2518849	0					
ANR	2519212	Identifier	itr		2518849	1					
ANR	2519213	IdentifierDeclStatement	RListIter * itr2 ;	1060:1:24760:24775	2518849	39	True				
ANR	2519214	IdentifierDecl	* itr2		2518849	0					
ANR	2519215	IdentifierDeclType	RListIter *		2518849	0					
ANR	2519216	Identifier	itr2		2518849	1					
ANR	2519217	IdentifierDeclStatement	RSignItem * si ;	1061:1:24778:24791	2518849	40	True				
ANR	2519218	IdentifierDecl	* si		2518849	0					
ANR	2519219	IdentifierDeclType	RSignItem *		2518849	0					
ANR	2519220	Identifier	si		2518849	1					
ANR	2519221	IdentifierDeclStatement	RSignItem * si2 ;	1062:1:24794:24808	2518849	41	True				
ANR	2519222	IdentifierDecl	* si2		2518849	0					
ANR	2519223	IdentifierDeclType	RSignItem *		2518849	0					
ANR	2519224	Identifier	si2		2518849	1					
ANR	2519225	IdentifierDeclStatement	size_t current_space_name_len = strlen ( current_space -> name ) ;	1063:1:24811:24871	2518849	42	True				
ANR	2519226	IdentifierDecl	current_space_name_len = strlen ( current_space -> name )		2518849	0					
ANR	2519227	IdentifierDeclType	size_t		2518849	0					
ANR	2519228	Identifier	current_space_name_len		2518849	1					
ANR	2519229	AssignmentExpression	current_space_name_len = strlen ( current_space -> name )		2518849	2		=			
ANR	2519230	Identifier	current_space_name_len		2518849	0					
ANR	2519231	CallExpression	strlen ( current_space -> name )		2518849	1					
ANR	2519232	Callee	strlen		2518849	0					
ANR	2519233	Identifier	strlen		2518849	0					
ANR	2519234	ArgumentList	current_space -> name		2518849	1					
ANR	2519235	Argument	current_space -> name		2518849	0					
ANR	2519236	PtrMemberAccess	current_space -> name		2518849	0					
ANR	2519237	Identifier	current_space		2518849	0					
ANR	2519238	Identifier	name		2518849	1					
ANR	2519239	IdentifierDeclStatement	size_t other_space_name_len = strlen ( other_space -> name ) ;	1064:1:24874:24930	2518849	43	True				
ANR	2519240	IdentifierDecl	other_space_name_len = strlen ( other_space -> name )		2518849	0					
ANR	2519241	IdentifierDeclType	size_t		2518849	0					
ANR	2519242	Identifier	other_space_name_len		2518849	1					
ANR	2519243	AssignmentExpression	other_space_name_len = strlen ( other_space -> name )		2518849	2		=			
ANR	2519244	Identifier	other_space_name_len		2518849	0					
ANR	2519245	CallExpression	strlen ( other_space -> name )		2518849	1					
ANR	2519246	Callee	strlen		2518849	0					
ANR	2519247	Identifier	strlen		2518849	0					
ANR	2519248	ArgumentList	other_space -> name		2518849	1					
ANR	2519249	Argument	other_space -> name		2518849	0					
ANR	2519250	PtrMemberAccess	other_space -> name		2518849	0					
ANR	2519251	Identifier	other_space		2518849	0					
ANR	2519252	Identifier	name		2518849	1					
ANR	2519253	Statement	r_list_foreach	1066:1:24934:24947	2518849	44	True				
ANR	2519254	Statement	(	1066:16:24949:24949	2518849	45	True				
ANR	2519255	Statement	la	1066:17:24950:24951	2518849	46	True				
ANR	2519256	Statement	","	1066:19:24952:24952	2518849	47	True				
ANR	2519257	Statement	itr	1066:21:24954:24956	2518849	48	True				
ANR	2519258	Statement	","	1066:24:24957:24957	2518849	49	True				
ANR	2519259	Statement	si	1066:26:24959:24960	2518849	50	True				
ANR	2519260	Statement	)	1066:28:24961:24961	2518849	51	True				
ANR	2519261	CompoundStatement		67:30:1591:1591	2518849	52					
ANR	2519262	IfStatement	"if ( strstr ( si -> name , ""imp."" ) )"		2518849	0					
ANR	2519263	Condition	"strstr ( si -> name , ""imp."" )"	1067:6:24971:24995	2518849	0	True				
ANR	2519264	CallExpression	"strstr ( si -> name , ""imp."" )"		2518849	0					
ANR	2519265	Callee	strstr		2518849	0					
ANR	2519266	Identifier	strstr		2518849	0					
ANR	2519267	ArgumentList	si -> name		2518849	1					
ANR	2519268	Argument	si -> name		2518849	0					
ANR	2519269	PtrMemberAccess	si -> name		2518849	0					
ANR	2519270	Identifier	si		2518849	0					
ANR	2519271	Identifier	name		2518849	1					
ANR	2519272	Argument	"""imp."""		2518849	1					
ANR	2519273	PrimaryExpression	"""imp."""		2518849	0					
ANR	2519274	CompoundStatement		68:33:1626:1626	2518849	1					
ANR	2519275	ContinueStatement	continue ;	1068:3:25003:25011	2518849	0	True				
ANR	2519276	Statement	r_list_foreach	1070:2:25019:25032	2518849	1	True				
ANR	2519277	Statement	(	1070:17:25034:25034	2518849	2	True				
ANR	2519278	Statement	lb	1070:18:25035:25036	2518849	3	True				
ANR	2519279	Statement	","	1070:20:25037:25037	2518849	4	True				
ANR	2519280	Statement	itr2	1070:22:25039:25042	2518849	5	True				
ANR	2519281	Statement	","	1070:26:25043:25043	2518849	6	True				
ANR	2519282	Statement	si2	1070:28:25045:25047	2518849	7	True				
ANR	2519283	Statement	)	1070:31:25048:25048	2518849	8	True				
ANR	2519284	CompoundStatement		79:3:2045:2152	2518849	9					
ANR	2519285	IfStatement	"if ( strcmp ( si -> name + current_space_name_len + 1 , si2 -> name + other_space_name_len + 1 ) )"		2518849	0					
ANR	2519286	Condition	"strcmp ( si -> name + current_space_name_len + 1 , si2 -> name + other_space_name_len + 1 )"	1071:7:25059:25142	2518849	0	True				
ANR	2519287	CallExpression	"strcmp ( si -> name + current_space_name_len + 1 , si2 -> name + other_space_name_len + 1 )"		2518849	0					
ANR	2519288	Callee	strcmp		2518849	0					
ANR	2519289	Identifier	strcmp		2518849	0					
ANR	2519290	ArgumentList	si -> name + current_space_name_len + 1		2518849	1					
ANR	2519291	Argument	si -> name + current_space_name_len + 1		2518849	0					
ANR	2519292	AdditiveExpression	si -> name + current_space_name_len + 1		2518849	0		+			
ANR	2519293	PtrMemberAccess	si -> name		2518849	0					
ANR	2519294	Identifier	si		2518849	0					
ANR	2519295	Identifier	name		2518849	1					
ANR	2519296	AdditiveExpression	current_space_name_len + 1		2518849	1		+			
ANR	2519297	Identifier	current_space_name_len		2518849	0					
ANR	2519298	PrimaryExpression	1		2518849	1					
ANR	2519299	Argument	si2 -> name + other_space_name_len + 1		2518849	1					
ANR	2519300	AdditiveExpression	si2 -> name + other_space_name_len + 1		2518849	0		+			
ANR	2519301	PtrMemberAccess	si2 -> name		2518849	0					
ANR	2519302	Identifier	si2		2518849	0					
ANR	2519303	Identifier	name		2518849	1					
ANR	2519304	AdditiveExpression	other_space_name_len + 1		2518849	1		+			
ANR	2519305	Identifier	other_space_name_len		2518849	0					
ANR	2519306	PrimaryExpression	1		2518849	1					
ANR	2519307	CompoundStatement		72:93:1773:1773	2518849	1					
ANR	2519308	ContinueStatement	continue ;	1072:4:25151:25159	2518849	0	True				
ANR	2519309	IdentifierDeclStatement	"double bytesScore = matchBytes ( si , si2 ) ;"	1075:3:25215:25255	2518849	1	True				
ANR	2519310	IdentifierDecl	"bytesScore = matchBytes ( si , si2 )"		2518849	0					
ANR	2519311	IdentifierDeclType	double		2518849	0					
ANR	2519312	Identifier	bytesScore		2518849	1					
ANR	2519313	AssignmentExpression	"bytesScore = matchBytes ( si , si2 )"		2518849	2		=			
ANR	2519314	Identifier	bytesScore		2518849	0					
ANR	2519315	CallExpression	"matchBytes ( si , si2 )"		2518849	1					
ANR	2519316	Callee	matchBytes		2518849	0					
ANR	2519317	Identifier	matchBytes		2518849	0					
ANR	2519318	ArgumentList	si		2518849	1					
ANR	2519319	Argument	si		2518849	0					
ANR	2519320	Identifier	si		2518849	0					
ANR	2519321	Argument	si2		2518849	1					
ANR	2519322	Identifier	si2		2518849	0					
ANR	2519323	IdentifierDeclStatement	"double graphScore = matchGraph ( si , si2 ) ;"	1076:3:25260:25300	2518849	2	True				
ANR	2519324	IdentifierDecl	"graphScore = matchGraph ( si , si2 )"		2518849	0					
ANR	2519325	IdentifierDeclType	double		2518849	0					
ANR	2519326	Identifier	graphScore		2518849	1					
ANR	2519327	AssignmentExpression	"graphScore = matchGraph ( si , si2 )"		2518849	2		=			
ANR	2519328	Identifier	graphScore		2518849	0					
ANR	2519329	CallExpression	"matchGraph ( si , si2 )"		2518849	1					
ANR	2519330	Callee	matchGraph		2518849	0					
ANR	2519331	Identifier	matchGraph		2518849	0					
ANR	2519332	ArgumentList	si		2518849	1					
ANR	2519333	Argument	si		2518849	0					
ANR	2519334	Identifier	si		2518849	0					
ANR	2519335	Argument	si2		2518849	1					
ANR	2519336	Identifier	si2		2518849	0					
ANR	2519337	IdentifierDeclStatement	bool bytesMatch = bytesScore >= ( options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD ) ;	1077:3:25305:25412	2518849	3	True				
ANR	2519338	IdentifierDecl	bytesMatch = bytesScore >= ( options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD )		2518849	0					
ANR	2519339	IdentifierDeclType	bool		2518849	0					
ANR	2519340	Identifier	bytesMatch		2518849	1					
ANR	2519341	AssignmentExpression	bytesMatch = bytesScore >= ( options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD )		2518849	2		=			
ANR	2519342	Identifier	bytesMatch		2518849	0					
ANR	2519343	RelationalExpression	bytesScore >= ( options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD )		2518849	1		>=			
ANR	2519344	Identifier	bytesScore		2518849	0					
ANR	2519345	ConditionalExpression	options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD		2518849	1					
ANR	2519346	Condition	options		2518849	0					
ANR	2519347	Identifier	options		2518849	0					
ANR	2519348	PtrMemberAccess	options -> bytes_diff_threshold		2518849	1					
ANR	2519349	Identifier	options		2518849	0					
ANR	2519350	Identifier	bytes_diff_threshold		2518849	1					
ANR	2519351	Identifier	SIGN_DIFF_MATCH_BYTES_THRESHOLD		2518849	2					
ANR	2519352	IdentifierDeclStatement	bool graphMatch = graphScore >= ( options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD ) ;	1078:3:25417:25524	2518849	4	True				
ANR	2519353	IdentifierDecl	graphMatch = graphScore >= ( options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD )		2518849	0					
ANR	2519354	IdentifierDeclType	bool		2518849	0					
ANR	2519355	Identifier	graphMatch		2518849	1					
ANR	2519356	AssignmentExpression	graphMatch = graphScore >= ( options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD )		2518849	2		=			
ANR	2519357	Identifier	graphMatch		2518849	0					
ANR	2519358	RelationalExpression	graphScore >= ( options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD )		2518849	1		>=			
ANR	2519359	Identifier	graphScore		2518849	0					
ANR	2519360	ConditionalExpression	options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD		2518849	1					
ANR	2519361	Condition	options		2518849	0					
ANR	2519362	Identifier	options		2518849	0					
ANR	2519363	PtrMemberAccess	options -> graph_diff_threshold		2518849	1					
ANR	2519364	Identifier	options		2518849	0					
ANR	2519365	Identifier	graph_diff_threshold		2518849	1					
ANR	2519366	Identifier	SIGN_DIFF_MATCH_GRAPH_THRESHOLD		2518849	2					
ANR	2519367	IfStatement	if ( ( bytesMatch && ! not_matching ) || ( ! bytesMatch && not_matching ) )		2518849	5					
ANR	2519368	Condition	( bytesMatch && ! not_matching ) || ( ! bytesMatch && not_matching )	1079:7:25533:25594	2518849	0	True				
ANR	2519369	OrExpression	( bytesMatch && ! not_matching ) || ( ! bytesMatch && not_matching )		2518849	0		||			
ANR	2519370	AndExpression	bytesMatch && ! not_matching		2518849	0		&&			
ANR	2519371	Identifier	bytesMatch		2518849	0					
ANR	2519372	UnaryOperationExpression	! not_matching		2518849	1					
ANR	2519373	UnaryOperator	!		2518849	0					
ANR	2519374	Identifier	not_matching		2518849	1					
ANR	2519375	AndExpression	! bytesMatch && not_matching		2518849	1		&&			
ANR	2519376	UnaryOperationExpression	! bytesMatch		2518849	0					
ANR	2519377	UnaryOperator	!		2518849	0					
ANR	2519378	Identifier	bytesMatch		2518849	1					
ANR	2519379	Identifier	not_matching		2518849	1					
ANR	2519380	CompoundStatement		80:71:2225:2225	2518849	1					
ANR	2519381	Statement	a	1080:4:25603:25603	2518849	0	True				
ANR	2519382	Statement	->	1080:5:25604:25605	2518849	1	True				
ANR	2519383	Statement	cb_printf	1080:7:25606:25614	2518849	2	True				
ANR	2519384	Statement	(	1080:17:25616:25616	2518849	3	True				
ANR	2519385	Statement	"""0x%08"""	1080:18:25617:25623	2518849	4	True				
ANR	2519386	Statement	PFMT64x	1080:25:25624:25630	2518849	5	True				
ANR	2519387	Statement	""" 0x%08"""	1080:32:25631:25638	2518849	6	True				
ANR	2519388	Statement	PFMT64x	1080:40:25639:25645	2518849	7	True				
ANR	2519389	Statement	""" %02.5f B %s\\n"""	1080:47:25646:25661	2518849	8	True				
ANR	2519390	Statement	","	1080:63:25662:25662	2518849	9	True				
ANR	2519391	Statement	si	1080:65:25664:25665	2518849	10	True				
ANR	2519392	Statement	->	1080:67:25666:25667	2518849	11	True				
ANR	2519393	Statement	addr	1080:69:25668:25671	2518849	12	True				
ANR	2519394	Statement	","	1080:73:25672:25672	2518849	13	True				
ANR	2519395	Statement	si2	1080:75:25674:25676	2518849	14	True				
ANR	2519396	Statement	->	1080:78:25677:25678	2518849	15	True				
ANR	2519397	Statement	addr	1080:80:25679:25682	2518849	16	True				
ANR	2519398	Statement	","	1080:84:25683:25683	2518849	17	True				
ANR	2519399	Statement	bytesScore	1080:86:25685:25694	2518849	18	True				
ANR	2519400	Statement	","	1080:96:25695:25695	2518849	19	True				
ANR	2519401	Statement	si	1080:98:25697:25698	2518849	20	True				
ANR	2519402	Statement	->	1080:100:25699:25700	2518849	21	True				
ANR	2519403	Statement	name	1080:102:25701:25704	2518849	22	True				
ANR	2519404	Statement	)	1080:106:25705:25705	2518849	23	True				
ANR	2519405	ExpressionStatement		1080:107:25706:25706	2518849	24	True				
ANR	2519406	IfStatement	if ( ( graphMatch && ! not_matching ) || ( ! graphMatch && not_matching ) )		2518849	6					
ANR	2519407	Condition	( graphMatch && ! not_matching ) || ( ! graphMatch && not_matching )	1082:7:25720:25781	2518849	0	True				
ANR	2519408	OrExpression	( graphMatch && ! not_matching ) || ( ! graphMatch && not_matching )		2518849	0		||			
ANR	2519409	AndExpression	graphMatch && ! not_matching		2518849	0		&&			
ANR	2519410	Identifier	graphMatch		2518849	0					
ANR	2519411	UnaryOperationExpression	! not_matching		2518849	1					
ANR	2519412	UnaryOperator	!		2518849	0					
ANR	2519413	Identifier	not_matching		2518849	1					
ANR	2519414	AndExpression	! graphMatch && not_matching		2518849	1		&&			
ANR	2519415	UnaryOperationExpression	! graphMatch		2518849	0					
ANR	2519416	UnaryOperator	!		2518849	0					
ANR	2519417	Identifier	graphMatch		2518849	1					
ANR	2519418	Identifier	not_matching		2518849	1					
ANR	2519419	CompoundStatement		83:71:2412:2412	2518849	1					
ANR	2519420	Statement	a	1083:4:25790:25790	2518849	0	True				
ANR	2519421	Statement	->	1083:5:25791:25792	2518849	1	True				
ANR	2519422	Statement	cb_printf	1083:7:25793:25801	2518849	2	True				
ANR	2519423	Statement	(	1083:17:25803:25803	2518849	3	True				
ANR	2519424	Statement	"""0x%08"""	1083:18:25804:25810	2518849	4	True				
ANR	2519425	Statement	PFMT64x	1083:25:25811:25817	2518849	5	True				
ANR	2519426	Statement	""" 0x%08"""	1083:32:25818:25825	2518849	6	True				
ANR	2519427	Statement	PFMT64x	1083:40:25826:25832	2518849	7	True				
ANR	2519428	Statement	""" %02.5f G %s\\n"""	1083:47:25833:25848	2518849	8	True				
ANR	2519429	Statement	","	1083:63:25849:25849	2518849	9	True				
ANR	2519430	Statement	si	1083:65:25851:25852	2518849	10	True				
ANR	2519431	Statement	->	1083:67:25853:25854	2518849	11	True				
ANR	2519432	Statement	addr	1083:69:25855:25858	2518849	12	True				
ANR	2519433	Statement	","	1083:73:25859:25859	2518849	13	True				
ANR	2519434	Statement	si2	1083:75:25861:25863	2518849	14	True				
ANR	2519435	Statement	->	1083:78:25864:25865	2518849	15	True				
ANR	2519436	Statement	addr	1083:80:25866:25869	2518849	16	True				
ANR	2519437	Statement	","	1083:84:25870:25870	2518849	17	True				
ANR	2519438	Statement	graphScore	1083:86:25872:25881	2518849	18	True				
ANR	2519439	Statement	","	1083:96:25882:25882	2518849	19	True				
ANR	2519440	Statement	si	1083:98:25884:25885	2518849	20	True				
ANR	2519441	Statement	->	1083:100:25886:25887	2518849	21	True				
ANR	2519442	Statement	name	1083:102:25888:25891	2518849	22	True				
ANR	2519443	Statement	)	1083:106:25892:25892	2518849	23	True				
ANR	2519444	ExpressionStatement		1083:107:25893:25893	2518849	24	True				
ANR	2519445	ExpressionStatement	r_list_free ( la )	1088:1:25909:25925	2518849	53	True				
ANR	2519446	CallExpression	r_list_free ( la )		2518849	0					
ANR	2519447	Callee	r_list_free		2518849	0					
ANR	2519448	Identifier	r_list_free		2518849	0					
ANR	2519449	ArgumentList	la		2518849	1					
ANR	2519450	Argument	la		2518849	0					
ANR	2519451	Identifier	la		2518849	0					
ANR	2519452	ExpressionStatement	r_list_free ( lb )	1089:1:25928:25944	2518849	54	True				
ANR	2519453	CallExpression	r_list_free ( lb )		2518849	0					
ANR	2519454	Callee	r_list_free		2518849	0					
ANR	2519455	Identifier	r_list_free		2518849	0					
ANR	2519456	ArgumentList	lb		2518849	1					
ANR	2519457	Argument	lb		2518849	0					
ANR	2519458	Identifier	lb		2518849	0					
ANR	2519459	ReturnStatement	return true ;	1091:1:25948:25959	2518849	55	True				
ANR	2519460	Identifier	true		2518849	0					
ANR	2519461	Label	beach :	1092:0:25961:25966	2518849	56	True				
ANR	2519462	Identifier	beach		2518849	0					
ANR	2519463	ExpressionStatement	ls_free ( current_zigns )	1093:1:25969:25992	2518849	57	True				
ANR	2519464	CallExpression	ls_free ( current_zigns )		2518849	0					
ANR	2519465	Callee	ls_free		2518849	0					
ANR	2519466	Identifier	ls_free		2518849	0					
ANR	2519467	ArgumentList	current_zigns		2518849	1					
ANR	2519468	Argument	current_zigns		2518849	0					
ANR	2519469	Identifier	current_zigns		2518849	0					
ANR	2519470	ExpressionStatement	ls_free ( other_zigns )	1094:1:25995:26016	2518849	58	True				
ANR	2519471	CallExpression	ls_free ( other_zigns )		2518849	0					
ANR	2519472	Callee	ls_free		2518849	0					
ANR	2519473	Identifier	ls_free		2518849	0					
ANR	2519474	ArgumentList	other_zigns		2518849	1					
ANR	2519475	Argument	other_zigns		2518849	0					
ANR	2519476	Identifier	other_zigns		2518849	0					
ANR	2519477	ExpressionStatement	r_list_free ( la )	1095:1:26019:26035	2518849	59	True				
ANR	2519478	CallExpression	r_list_free ( la )		2518849	0					
ANR	2519479	Callee	r_list_free		2518849	0					
ANR	2519480	Identifier	r_list_free		2518849	0					
ANR	2519481	ArgumentList	la		2518849	1					
ANR	2519482	Argument	la		2518849	0					
ANR	2519483	Identifier	la		2518849	0					
ANR	2519484	ExpressionStatement	r_list_free ( lb )	1096:1:26038:26054	2518849	60	True				
ANR	2519485	CallExpression	r_list_free ( lb )		2518849	0					
ANR	2519486	Callee	r_list_free		2518849	0					
ANR	2519487	Identifier	r_list_free		2518849	0					
ANR	2519488	ArgumentList	lb		2518849	1					
ANR	2519489	Argument	lb		2518849	0					
ANR	2519490	Identifier	lb		2518849	0					
ANR	2519491	ReturnStatement	return false ;	1098:1:26058:26070	2518849	61	True				
ANR	2519492	Identifier	false		2518849	0					
ANR	2519493	ReturnType	R_API bool		2518849	1					
ANR	2519494	Identifier	r_sign_diff_by_name		2518849	2					
ANR	2519495	ParameterList	"RAnal * a , RSignOptions * options , const char * other_space_name , bool not_matching"		2518849	3					
ANR	2519496	Parameter	RAnal * a	1000:31:23288:23295	2518849	0	True				
ANR	2519497	ParameterType	RAnal *		2518849	0					
ANR	2519498	Identifier	a		2518849	1					
ANR	2519499	Parameter	RSignOptions * options	1000:41:23298:23319	2518849	1	True				
ANR	2519500	ParameterType	RSignOptions *		2518849	0					
ANR	2519501	Identifier	options		2518849	1					
ANR	2519502	Parameter	const char * other_space_name	1000:65:23322:23349	2518849	2	True				
ANR	2519503	ParameterType	const char *		2518849	0					
ANR	2519504	Identifier	other_space_name		2518849	1					
ANR	2519505	Parameter	bool not_matching	1000:95:23352:23368	2518849	3	True				
ANR	2519506	ParameterType	bool		2518849	0					
ANR	2519507	Identifier	not_matching		2518849	1					
ANR	2519508	CFGEntryNode	ENTRY		2518849		True				
ANR	2519509	CFGExitNode	EXIT		2518849		True				
ANR	2519510	CFGErrorNode	ERROR		2518849		True				
ANR	2519511	Symbol	SIGN_DIFF_MATCH_BYTES_THRESHOLD		2518849						
ANR	2519512	Symbol	other_space -> name		2518849						
ANR	2519513	Symbol	kv -> base . key		2518849						
ANR	2519514	Symbol	si2 -> name		2518849						
ANR	2519515	Symbol	strlen		2518849						
ANR	2519516	Symbol	* current_space		2518849						
ANR	2519517	Symbol	current_zigns		2518849						
ANR	2519518	Symbol	kv -> base . value		2518849						
ANR	2519519	Symbol	options		2518849						
ANR	2519520	Symbol	ls_length		2518849						
ANR	2519521	Symbol	options -> bytes_diff_threshold		2518849						
ANR	2519522	Symbol	si2		2518849						
ANR	2519523	Symbol	* si		2518849						
ANR	2519524	Symbol	si -> name		2518849						
ANR	2519525	Symbol	strcmp		2518849						
ANR	2519526	Symbol	NULL		2518849						
ANR	2519527	Symbol	itr		2518849						
ANR	2519528	Symbol	iter		2518849						
ANR	2519529	Symbol	it		2518849						
ANR	2519530	Symbol	graphScore		2518849						
ANR	2519531	Symbol	r_spaces_get		2518849						
ANR	2519532	Symbol	r_sign_deserialize		2518849						
ANR	2519533	Symbol	matchBytes		2518849						
ANR	2519534	Symbol	other_space_name		2518849						
ANR	2519535	Symbol	* kv		2518849						
ANR	2519536	Symbol	kv -> base		2518849						
ANR	2519537	Symbol	not_matching		2518849						
ANR	2519538	Symbol	strstr		2518849						
ANR	2519539	Symbol	bytesScore		2518849						
ANR	2519540	Symbol	true		2518849						
ANR	2519541	Symbol	r_sign_item_new		2518849						
ANR	2519542	Symbol	* si2		2518849						
ANR	2519543	Symbol	& a -> zign_spaces		2518849						
ANR	2519544	Symbol	* options		2518849						
ANR	2519545	Symbol	other_space_name_len		2518849						
ANR	2519546	Symbol	matchGraph		2518849						
ANR	2519547	Symbol	* other_space		2518849						
ANR	2519548	Symbol	si		2518849						
ANR	2519549	Symbol	other_space		2518849						
ANR	2519550	Symbol	current_space -> name		2518849						
ANR	2519551	Symbol	itr2		2518849						
ANR	2519552	Symbol	r_spaces_current		2518849						
ANR	2519553	Symbol	a		2518849						
ANR	2519554	Symbol	current_space		2518849						
ANR	2519555	Symbol	bytesMatch		2518849						
ANR	2519556	Symbol	graphMatch		2518849						
ANR	2519557	Symbol	false		2518849						
ANR	2519558	Symbol	k		2518849						
ANR	2519559	Symbol	* a		2518849						
ANR	2519560	Symbol	kv		2518849						
ANR	2519561	Symbol	a -> sdb_zigns		2518849						
ANR	2519562	Symbol	current_space_name_len		2518849						
ANR	2519563	Symbol	other_zigns		2518849						
ANR	2519564	Symbol	options -> graph_diff_threshold		2518849						
ANR	2519565	Symbol	sdb_foreach_match		2518849						
ANR	2519566	Symbol	la		2518849						
ANR	2519567	Symbol	lb		2518849						
ANR	2519568	Symbol	SIGN_DIFF_MATCH_GRAPH_THRESHOLD		2518849						
ANR	2519569	Symbol	r_list_new		2518849						
ANR	2519570	ClassDef	ctxListCB	1101:0:26075:26131							
ANR	2519571	DeclStmt									
ANR	2519572	Decl							RAnal	RAnal *	anal
ANR	2519573	DeclStmt									
ANR	2519574	Decl							int	int	idx
ANR	2519575	DeclStmt									
ANR	2519576	Decl							int	int	format
ANR	2519577	ClassDef	ctxGetListCB	1107:0:26135:26185							
ANR	2519578	DeclStmt									
ANR	2519579	Decl							RAnal	RAnal *	anal
ANR	2519580	DeclStmt									
ANR	2519581	Decl							RList	RList *	list
ANR	2519582	Function	listBytes	1112:0:26189:27155							
ANR	2519583	FunctionDef	"listBytes (RAnal * a , RSignItem * it , int format)"		2519582	0					
ANR	2519584	CompoundStatement		1112:59:26248:27155	2519582	0					
ANR	2519585	IdentifierDeclStatement	RSignBytes * bytes = it -> bytes ;	1113:1:26251:26280	2519582	0	True				
ANR	2519586	IdentifierDecl	* bytes = it -> bytes		2519582	0					
ANR	2519587	IdentifierDeclType	RSignBytes *		2519582	0					
ANR	2519588	Identifier	bytes		2519582	1					
ANR	2519589	AssignmentExpression	* bytes = it -> bytes		2519582	2		=			
ANR	2519590	Identifier	bytes		2519582	0					
ANR	2519591	PtrMemberAccess	it -> bytes		2519582	1					
ANR	2519592	Identifier	it		2519582	0					
ANR	2519593	Identifier	bytes		2519582	1					
ANR	2519594	IfStatement	if ( ! bytes -> bytes )		2519582	1					
ANR	2519595	Condition	! bytes -> bytes	1115:5:26288:26300	2519582	0	True				
ANR	2519596	UnaryOperationExpression	! bytes -> bytes		2519582	0					
ANR	2519597	UnaryOperator	!		2519582	0					
ANR	2519598	PtrMemberAccess	bytes -> bytes		2519582	1					
ANR	2519599	Identifier	bytes		2519582	0					
ANR	2519600	Identifier	bytes		2519582	1					
ANR	2519601	CompoundStatement		4:20:54:54	2519582	1					
ANR	2519602	ReturnStatement	return ;	1116:2:26307:26313	2519582	0	True				
ANR	2519603	IdentifierDeclStatement	"int masked = 0 , i = 0 ;"	1119:1:26320:26341	2519582	2	True				
ANR	2519604	IdentifierDecl	masked = 0		2519582	0					
ANR	2519605	IdentifierDeclType	int		2519582	0					
ANR	2519606	Identifier	masked		2519582	1					
ANR	2519607	AssignmentExpression	masked = 0		2519582	2		=			
ANR	2519608	Identifier	masked		2519582	0					
ANR	2519609	PrimaryExpression	0		2519582	1					
ANR	2519610	IdentifierDecl	i = 0		2519582	1					
ANR	2519611	IdentifierDeclType	int		2519582	0					
ANR	2519612	Identifier	i		2519582	1					
ANR	2519613	AssignmentExpression	i = 0		2519582	2		=			
ANR	2519614	Identifier	i		2519582	0					
ANR	2519615	PrimaryExpression	0		2519582	1					
ANR	2519616	ForStatement	for ( i = 0 ; i < bytes -> size ; i ++ )		2519582	3					
ANR	2519617	ForInit	i = 0 ;	1120:6:26349:26354	2519582	0	True				
ANR	2519618	AssignmentExpression	i = 0		2519582	0		=			
ANR	2519619	Identifier	i		2519582	0					
ANR	2519620	PrimaryExpression	0		2519582	1					
ANR	2519621	Condition	i < bytes -> size	1120:13:26356:26370	2519582	1	True				
ANR	2519622	RelationalExpression	i < bytes -> size		2519582	0		<			
ANR	2519623	Identifier	i		2519582	0					
ANR	2519624	PtrMemberAccess	bytes -> size		2519582	1					
ANR	2519625	Identifier	bytes		2519582	0					
ANR	2519626	Identifier	size		2519582	1					
ANR	2519627	PostIncDecOperationExpression	i ++	1120:30:26373:26375	2519582	2	True				
ANR	2519628	Identifier	i		2519582	0					
ANR	2519629	IncDec	++		2519582	1					
ANR	2519630	CompoundStatement		9:35:129:129	2519582	3					
ANR	2519631	ExpressionStatement	masked += bytes -> mask [ i ] == 0xff	1121:2:26382:26414	2519582	0	True				
ANR	2519632	AssignmentExpression	masked += bytes -> mask [ i ] == 0xff		2519582	0		+=			
ANR	2519633	Identifier	masked		2519582	0					
ANR	2519634	EqualityExpression	bytes -> mask [ i ] == 0xff		2519582	1		==			
ANR	2519635	ArrayIndexing	bytes -> mask [ i ]		2519582	0					
ANR	2519636	PtrMemberAccess	bytes -> mask		2519582	0					
ANR	2519637	Identifier	bytes		2519582	0					
ANR	2519638	Identifier	mask		2519582	1					
ANR	2519639	Identifier	i		2519582	1					
ANR	2519640	PrimaryExpression	0xff		2519582	1					
ANR	2519641	IdentifierDeclStatement	"char * strbytes = r_hex_bin2strdup ( bytes -> bytes , bytes -> size ) ;"	1124:1:26421:26483	2519582	4	True				
ANR	2519642	IdentifierDecl	"* strbytes = r_hex_bin2strdup ( bytes -> bytes , bytes -> size )"		2519582	0					
ANR	2519643	IdentifierDeclType	char *		2519582	0					
ANR	2519644	Identifier	strbytes		2519582	1					
ANR	2519645	AssignmentExpression	"* strbytes = r_hex_bin2strdup ( bytes -> bytes , bytes -> size )"		2519582	2		=			
ANR	2519646	Identifier	strbytes		2519582	0					
ANR	2519647	CallExpression	"r_hex_bin2strdup ( bytes -> bytes , bytes -> size )"		2519582	1					
ANR	2519648	Callee	r_hex_bin2strdup		2519582	0					
ANR	2519649	Identifier	r_hex_bin2strdup		2519582	0					
ANR	2519650	ArgumentList	bytes -> bytes		2519582	1					
ANR	2519651	Argument	bytes -> bytes		2519582	0					
ANR	2519652	PtrMemberAccess	bytes -> bytes		2519582	0					
ANR	2519653	Identifier	bytes		2519582	0					
ANR	2519654	Identifier	bytes		2519582	1					
ANR	2519655	Argument	bytes -> size		2519582	1					
ANR	2519656	PtrMemberAccess	bytes -> size		2519582	0					
ANR	2519657	Identifier	bytes		2519582	0					
ANR	2519658	Identifier	size		2519582	1					
ANR	2519659	IfStatement	if ( ! strbytes )		2519582	5					
ANR	2519660	Condition	! strbytes	1125:5:26490:26498	2519582	0	True				
ANR	2519661	UnaryOperationExpression	! strbytes		2519582	0					
ANR	2519662	UnaryOperator	!		2519582	0					
ANR	2519663	Identifier	strbytes		2519582	1					
ANR	2519664	CompoundStatement		14:16:252:252	2519582	1					
ANR	2519665	ReturnStatement	return ;	1126:2:26505:26511	2519582	0	True				
ANR	2519666	IdentifierDeclStatement	"char * strmask = r_hex_bin2strdup ( bytes -> mask , bytes -> size ) ;"	1128:1:26517:26577	2519582	6	True				
ANR	2519667	IdentifierDecl	"* strmask = r_hex_bin2strdup ( bytes -> mask , bytes -> size )"		2519582	0					
ANR	2519668	IdentifierDeclType	char *		2519582	0					
ANR	2519669	Identifier	strmask		2519582	1					
ANR	2519670	AssignmentExpression	"* strmask = r_hex_bin2strdup ( bytes -> mask , bytes -> size )"		2519582	2		=			
ANR	2519671	Identifier	strmask		2519582	0					
ANR	2519672	CallExpression	"r_hex_bin2strdup ( bytes -> mask , bytes -> size )"		2519582	1					
ANR	2519673	Callee	r_hex_bin2strdup		2519582	0					
ANR	2519674	Identifier	r_hex_bin2strdup		2519582	0					
ANR	2519675	ArgumentList	bytes -> mask		2519582	1					
ANR	2519676	Argument	bytes -> mask		2519582	0					
ANR	2519677	PtrMemberAccess	bytes -> mask		2519582	0					
ANR	2519678	Identifier	bytes		2519582	0					
ANR	2519679	Identifier	mask		2519582	1					
ANR	2519680	Argument	bytes -> size		2519582	1					
ANR	2519681	PtrMemberAccess	bytes -> size		2519582	0					
ANR	2519682	Identifier	bytes		2519582	0					
ANR	2519683	Identifier	size		2519582	1					
ANR	2519684	IfStatement	if ( ! strmask )		2519582	7					
ANR	2519685	Condition	! strmask	1129:5:26584:26591	2519582	0	True				
ANR	2519686	UnaryOperationExpression	! strmask		2519582	0					
ANR	2519687	UnaryOperator	!		2519582	0					
ANR	2519688	Identifier	strmask		2519582	1					
ANR	2519689	CompoundStatement		18:15:345:345	2519582	1					
ANR	2519690	ExpressionStatement	free ( strbytes )	1130:2:26598:26613	2519582	0	True				
ANR	2519691	CallExpression	free ( strbytes )		2519582	0					
ANR	2519692	Callee	free		2519582	0					
ANR	2519693	Identifier	free		2519582	0					
ANR	2519694	ArgumentList	strbytes		2519582	1					
ANR	2519695	Argument	strbytes		2519582	0					
ANR	2519696	Identifier	strbytes		2519582	0					
ANR	2519697	ReturnStatement	return ;	1131:2:26617:26623	2519582	1	True				
ANR	2519698	IfStatement	if ( format == '*' )		2519582	8					
ANR	2519699	Condition	format == '*'	1134:5:26634:26646	2519582	0	True				
ANR	2519700	EqualityExpression	format == '*'		2519582	0		==			
ANR	2519701	Identifier	format		2519582	0					
ANR	2519702	PrimaryExpression	'*'		2519582	1					
ANR	2519703	CompoundStatement		23:20:400:400	2519582	1					
ANR	2519704	IfStatement	if ( masked == bytes -> size )		2519582	0					
ANR	2519705	Condition	masked == bytes -> size	1135:6:26657:26677	2519582	0	True				
ANR	2519706	EqualityExpression	masked == bytes -> size		2519582	0		==			
ANR	2519707	Identifier	masked		2519582	0					
ANR	2519708	PtrMemberAccess	bytes -> size		2519582	1					
ANR	2519709	Identifier	bytes		2519582	0					
ANR	2519710	Identifier	size		2519582	1					
ANR	2519711	CompoundStatement		24:29:431:431	2519582	1					
ANR	2519712	ExpressionStatement	"a -> cb_printf ( ""za %s b %s\\n"" , it -> name , strbytes )"	1136:3:26685:26734	2519582	0	True				
ANR	2519713	CallExpression	"a -> cb_printf ( ""za %s b %s\\n"" , it -> name , strbytes )"		2519582	0					
ANR	2519714	Callee	a -> cb_printf		2519582	0					
ANR	2519715	PtrMemberAccess	a -> cb_printf		2519582	0					
ANR	2519716	Identifier	a		2519582	0					
ANR	2519717	Identifier	cb_printf		2519582	1					
ANR	2519718	ArgumentList	"""za %s b %s\\n"""		2519582	1					
ANR	2519719	Argument	"""za %s b %s\\n"""		2519582	0					
ANR	2519720	PrimaryExpression	"""za %s b %s\\n"""		2519582	0					
ANR	2519721	Argument	it -> name		2519582	1					
ANR	2519722	PtrMemberAccess	it -> name		2519582	0					
ANR	2519723	Identifier	it		2519582	0					
ANR	2519724	Identifier	name		2519582	1					
ANR	2519725	Argument	strbytes		2519582	2					
ANR	2519726	Identifier	strbytes		2519582	0					
ANR	2519727	ElseStatement	else		2519582	0					
ANR	2519728	CompoundStatement		26:9:496:496	2519582	0					
ANR	2519729	ExpressionStatement	"a -> cb_printf ( ""za %s b %s:%s\\n"" , it -> name , strbytes , strmask )"	1138:3:26750:26811	2519582	0	True				
ANR	2519730	CallExpression	"a -> cb_printf ( ""za %s b %s:%s\\n"" , it -> name , strbytes , strmask )"		2519582	0					
ANR	2519731	Callee	a -> cb_printf		2519582	0					
ANR	2519732	PtrMemberAccess	a -> cb_printf		2519582	0					
ANR	2519733	Identifier	a		2519582	0					
ANR	2519734	Identifier	cb_printf		2519582	1					
ANR	2519735	ArgumentList	"""za %s b %s:%s\\n"""		2519582	1					
ANR	2519736	Argument	"""za %s b %s:%s\\n"""		2519582	0					
ANR	2519737	PrimaryExpression	"""za %s b %s:%s\\n"""		2519582	0					
ANR	2519738	Argument	it -> name		2519582	1					
ANR	2519739	PtrMemberAccess	it -> name		2519582	0					
ANR	2519740	Identifier	it		2519582	0					
ANR	2519741	Identifier	name		2519582	1					
ANR	2519742	Argument	strbytes		2519582	2					
ANR	2519743	Identifier	strbytes		2519582	0					
ANR	2519744	Argument	strmask		2519582	3					
ANR	2519745	Identifier	strmask		2519582	0					
ANR	2519746	ElseStatement	else		2519582	0					
ANR	2519747	IfStatement	if ( format == 'q' )		2519582	0					
ANR	2519748	Condition	format == 'q'	1140:12:26829:26841	2519582	0	True				
ANR	2519749	EqualityExpression	format == 'q'		2519582	0		==			
ANR	2519750	Identifier	format		2519582	0					
ANR	2519751	PrimaryExpression	'q'		2519582	1					
ANR	2519752	CompoundStatement		29:27:595:595	2519582	1					
ANR	2519753	ExpressionStatement	"a -> cb_printf ( "" b(%d/%d)"" , masked , bytes -> size )"	1141:2:26848:26895	2519582	0	True				
ANR	2519754	CallExpression	"a -> cb_printf ( "" b(%d/%d)"" , masked , bytes -> size )"		2519582	0					
ANR	2519755	Callee	a -> cb_printf		2519582	0					
ANR	2519756	PtrMemberAccess	a -> cb_printf		2519582	0					
ANR	2519757	Identifier	a		2519582	0					
ANR	2519758	Identifier	cb_printf		2519582	1					
ANR	2519759	ArgumentList	""" b(%d/%d)"""		2519582	1					
ANR	2519760	Argument	""" b(%d/%d)"""		2519582	0					
ANR	2519761	PrimaryExpression	""" b(%d/%d)"""		2519582	0					
ANR	2519762	Argument	masked		2519582	1					
ANR	2519763	Identifier	masked		2519582	0					
ANR	2519764	Argument	bytes -> size		2519582	2					
ANR	2519765	PtrMemberAccess	bytes -> size		2519582	0					
ANR	2519766	Identifier	bytes		2519582	0					
ANR	2519767	Identifier	size		2519582	1					
ANR	2519768	ElseStatement	else		2519582	0					
ANR	2519769	IfStatement	if ( format == 'j' )		2519582	0					
ANR	2519770	Condition	format == 'j'	1142:12:26909:26921	2519582	0	True				
ANR	2519771	EqualityExpression	format == 'j'		2519582	0		==			
ANR	2519772	Identifier	format		2519582	0					
ANR	2519773	PrimaryExpression	'j'		2519582	1					
ANR	2519774	CompoundStatement		31:27:675:675	2519582	1					
ANR	2519775	ExpressionStatement	"a -> cb_printf ( ""\\""bytes\\"":\\""%s\\"","" , strbytes )"	1143:2:26928:26972	2519582	0	True				
ANR	2519776	CallExpression	"a -> cb_printf ( ""\\""bytes\\"":\\""%s\\"","" , strbytes )"		2519582	0					
ANR	2519777	Callee	a -> cb_printf		2519582	0					
ANR	2519778	PtrMemberAccess	a -> cb_printf		2519582	0					
ANR	2519779	Identifier	a		2519582	0					
ANR	2519780	Identifier	cb_printf		2519582	1					
ANR	2519781	ArgumentList	"""\\""bytes\\"":\\""%s\\"","""		2519582	1					
ANR	2519782	Argument	"""\\""bytes\\"":\\""%s\\"","""		2519582	0					
ANR	2519783	PrimaryExpression	"""\\""bytes\\"":\\""%s\\"","""		2519582	0					
ANR	2519784	Argument	strbytes		2519582	1					
ANR	2519785	Identifier	strbytes		2519582	0					
ANR	2519786	ExpressionStatement	"a -> cb_printf ( ""\\""mask\\"":\\""%s\\"","" , strmask )"	1144:2:26976:27018	2519582	1	True				
ANR	2519787	CallExpression	"a -> cb_printf ( ""\\""mask\\"":\\""%s\\"","" , strmask )"		2519582	0					
ANR	2519788	Callee	a -> cb_printf		2519582	0					
ANR	2519789	PtrMemberAccess	a -> cb_printf		2519582	0					
ANR	2519790	Identifier	a		2519582	0					
ANR	2519791	Identifier	cb_printf		2519582	1					
ANR	2519792	ArgumentList	"""\\""mask\\"":\\""%s\\"","""		2519582	1					
ANR	2519793	Argument	"""\\""mask\\"":\\""%s\\"","""		2519582	0					
ANR	2519794	PrimaryExpression	"""\\""mask\\"":\\""%s\\"","""		2519582	0					
ANR	2519795	Argument	strmask		2519582	1					
ANR	2519796	Identifier	strmask		2519582	0					
ANR	2519797	ElseStatement	else		2519582	0					
ANR	2519798	CompoundStatement		34:8:779:779	2519582	0					
ANR	2519799	ExpressionStatement	"a -> cb_printf ( ""  bytes: %s\\n"" , strbytes )"	1146:2:27032:27072	2519582	0	True				
ANR	2519800	CallExpression	"a -> cb_printf ( ""  bytes: %s\\n"" , strbytes )"		2519582	0					
ANR	2519801	Callee	a -> cb_printf		2519582	0					
ANR	2519802	PtrMemberAccess	a -> cb_printf		2519582	0					
ANR	2519803	Identifier	a		2519582	0					
ANR	2519804	Identifier	cb_printf		2519582	1					
ANR	2519805	ArgumentList	"""  bytes: %s\\n"""		2519582	1					
ANR	2519806	Argument	"""  bytes: %s\\n"""		2519582	0					
ANR	2519807	PrimaryExpression	"""  bytes: %s\\n"""		2519582	0					
ANR	2519808	Argument	strbytes		2519582	1					
ANR	2519809	Identifier	strbytes		2519582	0					
ANR	2519810	ExpressionStatement	"a -> cb_printf ( ""  mask: %s\\n"" , strmask )"	1147:2:27076:27114	2519582	1	True				
ANR	2519811	CallExpression	"a -> cb_printf ( ""  mask: %s\\n"" , strmask )"		2519582	0					
ANR	2519812	Callee	a -> cb_printf		2519582	0					
ANR	2519813	PtrMemberAccess	a -> cb_printf		2519582	0					
ANR	2519814	Identifier	a		2519582	0					
ANR	2519815	Identifier	cb_printf		2519582	1					
ANR	2519816	ArgumentList	"""  mask: %s\\n"""		2519582	1					
ANR	2519817	Argument	"""  mask: %s\\n"""		2519582	0					
ANR	2519818	PrimaryExpression	"""  mask: %s\\n"""		2519582	0					
ANR	2519819	Argument	strmask		2519582	1					
ANR	2519820	Identifier	strmask		2519582	0					
ANR	2519821	ExpressionStatement	free ( strbytes )	1150:1:27121:27136	2519582	9	True				
ANR	2519822	CallExpression	free ( strbytes )		2519582	0					
ANR	2519823	Callee	free		2519582	0					
ANR	2519824	Identifier	free		2519582	0					
ANR	2519825	ArgumentList	strbytes		2519582	1					
ANR	2519826	Argument	strbytes		2519582	0					
ANR	2519827	Identifier	strbytes		2519582	0					
ANR	2519828	ExpressionStatement	free ( strmask )	1151:1:27139:27153	2519582	10	True				
ANR	2519829	CallExpression	free ( strmask )		2519582	0					
ANR	2519830	Callee	free		2519582	0					
ANR	2519831	Identifier	free		2519582	0					
ANR	2519832	ArgumentList	strmask		2519582	1					
ANR	2519833	Argument	strmask		2519582	0					
ANR	2519834	Identifier	strmask		2519582	0					
ANR	2519835	ReturnType	static void		2519582	1					
ANR	2519836	Identifier	listBytes		2519582	2					
ANR	2519837	ParameterList	"RAnal * a , RSignItem * it , int format"		2519582	3					
ANR	2519838	Parameter	RAnal * a	1112:22:26211:26218	2519582	0	True				
ANR	2519839	ParameterType	RAnal *		2519582	0					
ANR	2519840	Identifier	a		2519582	1					
ANR	2519841	Parameter	RSignItem * it	1112:32:26221:26233	2519582	1	True				
ANR	2519842	ParameterType	RSignItem *		2519582	0					
ANR	2519843	Identifier	it		2519582	1					
ANR	2519844	Parameter	int format	1112:47:26236:26245	2519582	2	True				
ANR	2519845	ParameterType	int		2519582	0					
ANR	2519846	Identifier	format		2519582	1					
ANR	2519847	CFGEntryNode	ENTRY		2519582		True				
ANR	2519848	CFGExitNode	EXIT		2519582		True				
ANR	2519849	Symbol	bytes -> size		2519582						
ANR	2519850	Symbol	a		2519582						
ANR	2519851	Symbol	* * bytes		2519582						
ANR	2519852	Symbol	* bytes -> mask		2519582						
ANR	2519853	Symbol	it -> bytes		2519582						
ANR	2519854	Symbol	strmask		2519582						
ANR	2519855	Symbol	masked		2519582						
ANR	2519856	Symbol	r_hex_bin2strdup		2519582						
ANR	2519857	Symbol	it -> name		2519582						
ANR	2519858	Symbol	format		2519582						
ANR	2519859	Symbol	i		2519582						
ANR	2519860	Symbol	it		2519582						
ANR	2519861	Symbol	* bytes		2519582						
ANR	2519862	Symbol	* it		2519582						
ANR	2519863	Symbol	* i		2519582						
ANR	2519864	Symbol	bytes		2519582						
ANR	2519865	Symbol	strbytes		2519582						
ANR	2519866	Symbol	bytes -> bytes		2519582						
ANR	2519867	Symbol	bytes -> mask		2519582						
ANR	2519868	Function	listGraph	1154:0:27158:27913							
ANR	2519869	FunctionDef	"listGraph (RAnal * a , RSignItem * it , int format)"		2519868	0					
ANR	2519870	CompoundStatement		1154:59:27217:27913	2519868	0					
ANR	2519871	IdentifierDeclStatement	RSignGraph * graph = it -> graph ;	1155:1:27220:27249	2519868	0	True				
ANR	2519872	IdentifierDecl	* graph = it -> graph		2519868	0					
ANR	2519873	IdentifierDeclType	RSignGraph *		2519868	0					
ANR	2519874	Identifier	graph		2519868	1					
ANR	2519875	AssignmentExpression	* graph = it -> graph		2519868	2		=			
ANR	2519876	Identifier	graph		2519868	0					
ANR	2519877	PtrMemberAccess	it -> graph		2519868	1					
ANR	2519878	Identifier	it		2519868	0					
ANR	2519879	Identifier	graph		2519868	1					
ANR	2519880	IfStatement	if ( format == 'q' )		2519868	1					
ANR	2519881	Condition	format == 'q'	1157:5:27257:27269	2519868	0	True				
ANR	2519882	EqualityExpression	format == 'q'		2519868	0		==			
ANR	2519883	Identifier	format		2519868	0					
ANR	2519884	PrimaryExpression	'q'		2519868	1					
ANR	2519885	CompoundStatement		4:20:54:54	2519868	1					
ANR	2519886	ExpressionStatement	"a -> cb_printf ( "" g(cc=%d,nb=%d,e=%d,eb=%d,h=%d)"" , graph -> cc , graph -> nbbs , graph -> edges , graph -> ebbs , graph -> bbsum )"	1158:2:27276:27392	2519868	0	True				
ANR	2519887	CallExpression	"a -> cb_printf ( "" g(cc=%d,nb=%d,e=%d,eb=%d,h=%d)"" , graph -> cc , graph -> nbbs , graph -> edges , graph -> ebbs , graph -> bbsum )"		2519868	0					
ANR	2519888	Callee	a -> cb_printf		2519868	0					
ANR	2519889	PtrMemberAccess	a -> cb_printf		2519868	0					
ANR	2519890	Identifier	a		2519868	0					
ANR	2519891	Identifier	cb_printf		2519868	1					
ANR	2519892	ArgumentList	""" g(cc=%d,nb=%d,e=%d,eb=%d,h=%d)"""		2519868	1					
ANR	2519893	Argument	""" g(cc=%d,nb=%d,e=%d,eb=%d,h=%d)"""		2519868	0					
ANR	2519894	PrimaryExpression	""" g(cc=%d,nb=%d,e=%d,eb=%d,h=%d)"""		2519868	0					
ANR	2519895	Argument	graph -> cc		2519868	1					
ANR	2519896	PtrMemberAccess	graph -> cc		2519868	0					
ANR	2519897	Identifier	graph		2519868	0					
ANR	2519898	Identifier	cc		2519868	1					
ANR	2519899	Argument	graph -> nbbs		2519868	2					
ANR	2519900	PtrMemberAccess	graph -> nbbs		2519868	0					
ANR	2519901	Identifier	graph		2519868	0					
ANR	2519902	Identifier	nbbs		2519868	1					
ANR	2519903	Argument	graph -> edges		2519868	3					
ANR	2519904	PtrMemberAccess	graph -> edges		2519868	0					
ANR	2519905	Identifier	graph		2519868	0					
ANR	2519906	Identifier	edges		2519868	1					
ANR	2519907	Argument	graph -> ebbs		2519868	4					
ANR	2519908	PtrMemberAccess	graph -> ebbs		2519868	0					
ANR	2519909	Identifier	graph		2519868	0					
ANR	2519910	Identifier	ebbs		2519868	1					
ANR	2519911	Argument	graph -> bbsum		2519868	5					
ANR	2519912	PtrMemberAccess	graph -> bbsum		2519868	0					
ANR	2519913	Identifier	graph		2519868	0					
ANR	2519914	Identifier	bbsum		2519868	1					
ANR	2519915	ElseStatement	else		2519868	0					
ANR	2519916	IfStatement	if ( format == '*' )		2519868	0					
ANR	2519917	Condition	format == '*'	1160:12:27406:27418	2519868	0	True				
ANR	2519918	EqualityExpression	format == '*'		2519868	0		==			
ANR	2519919	Identifier	format		2519868	0					
ANR	2519920	PrimaryExpression	'*'		2519868	1					
ANR	2519921	CompoundStatement		7:27:203:203	2519868	1					
ANR	2519922	ExpressionStatement	"a -> cb_printf ( ""za %s g cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"" , it -> name , graph -> cc , graph -> nbbs , graph -> edges , graph -> ebbs , graph -> bbsum )"	1161:2:27425:27569	2519868	0	True				
ANR	2519923	CallExpression	"a -> cb_printf ( ""za %s g cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"" , it -> name , graph -> cc , graph -> nbbs , graph -> edges , graph -> ebbs , graph -> bbsum )"		2519868	0					
ANR	2519924	Callee	a -> cb_printf		2519868	0					
ANR	2519925	PtrMemberAccess	a -> cb_printf		2519868	0					
ANR	2519926	Identifier	a		2519868	0					
ANR	2519927	Identifier	cb_printf		2519868	1					
ANR	2519928	ArgumentList	"""za %s g cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"""		2519868	1					
ANR	2519929	Argument	"""za %s g cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"""		2519868	0					
ANR	2519930	PrimaryExpression	"""za %s g cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"""		2519868	0					
ANR	2519931	Argument	it -> name		2519868	1					
ANR	2519932	PtrMemberAccess	it -> name		2519868	0					
ANR	2519933	Identifier	it		2519868	0					
ANR	2519934	Identifier	name		2519868	1					
ANR	2519935	Argument	graph -> cc		2519868	2					
ANR	2519936	PtrMemberAccess	graph -> cc		2519868	0					
ANR	2519937	Identifier	graph		2519868	0					
ANR	2519938	Identifier	cc		2519868	1					
ANR	2519939	Argument	graph -> nbbs		2519868	3					
ANR	2519940	PtrMemberAccess	graph -> nbbs		2519868	0					
ANR	2519941	Identifier	graph		2519868	0					
ANR	2519942	Identifier	nbbs		2519868	1					
ANR	2519943	Argument	graph -> edges		2519868	4					
ANR	2519944	PtrMemberAccess	graph -> edges		2519868	0					
ANR	2519945	Identifier	graph		2519868	0					
ANR	2519946	Identifier	edges		2519868	1					
ANR	2519947	Argument	graph -> ebbs		2519868	5					
ANR	2519948	PtrMemberAccess	graph -> ebbs		2519868	0					
ANR	2519949	Identifier	graph		2519868	0					
ANR	2519950	Identifier	ebbs		2519868	1					
ANR	2519951	Argument	graph -> bbsum		2519868	6					
ANR	2519952	PtrMemberAccess	graph -> bbsum		2519868	0					
ANR	2519953	Identifier	graph		2519868	0					
ANR	2519954	Identifier	bbsum		2519868	1					
ANR	2519955	ElseStatement	else		2519868	0					
ANR	2519956	IfStatement	if ( format == 'j' )		2519868	0					
ANR	2519957	Condition	format == 'j'	1163:12:27583:27595	2519868	0	True				
ANR	2519958	EqualityExpression	format == 'j'		2519868	0		==			
ANR	2519959	Identifier	format		2519868	0					
ANR	2519960	PrimaryExpression	'j'		2519868	1					
ANR	2519961	CompoundStatement		10:27:380:380	2519868	1					
ANR	2519962	ExpressionStatement	"a -> cb_printf ( ""\\""graph\\"":{\\""cc\\"":%d,\\""nbbs\\"":%d,\\""edges\\"":%d,\\""ebbs\\"":%d,\\""bbsum\\"":%d},"" , graph -> cc , graph -> nbbs , graph -> edges , graph -> ebbs , graph -> bbsum )"	1164:2:27602:27759	2519868	0	True				
ANR	2519963	CallExpression	"a -> cb_printf ( ""\\""graph\\"":{\\""cc\\"":%d,\\""nbbs\\"":%d,\\""edges\\"":%d,\\""ebbs\\"":%d,\\""bbsum\\"":%d},"" , graph -> cc , graph -> nbbs , graph -> edges , graph -> ebbs , graph -> bbsum )"		2519868	0					
ANR	2519964	Callee	a -> cb_printf		2519868	0					
ANR	2519965	PtrMemberAccess	a -> cb_printf		2519868	0					
ANR	2519966	Identifier	a		2519868	0					
ANR	2519967	Identifier	cb_printf		2519868	1					
ANR	2519968	ArgumentList	"""\\""graph\\"":{\\""cc\\"":%d,\\""nbbs\\"":%d,\\""edges\\"":%d,\\""ebbs\\"":%d,\\""bbsum\\"":%d},"""		2519868	1					
ANR	2519969	Argument	"""\\""graph\\"":{\\""cc\\"":%d,\\""nbbs\\"":%d,\\""edges\\"":%d,\\""ebbs\\"":%d,\\""bbsum\\"":%d},"""		2519868	0					
ANR	2519970	PrimaryExpression	"""\\""graph\\"":{\\""cc\\"":%d,\\""nbbs\\"":%d,\\""edges\\"":%d,\\""ebbs\\"":%d,\\""bbsum\\"":%d},"""		2519868	0					
ANR	2519971	Argument	graph -> cc		2519868	1					
ANR	2519972	PtrMemberAccess	graph -> cc		2519868	0					
ANR	2519973	Identifier	graph		2519868	0					
ANR	2519974	Identifier	cc		2519868	1					
ANR	2519975	Argument	graph -> nbbs		2519868	2					
ANR	2519976	PtrMemberAccess	graph -> nbbs		2519868	0					
ANR	2519977	Identifier	graph		2519868	0					
ANR	2519978	Identifier	nbbs		2519868	1					
ANR	2519979	Argument	graph -> edges		2519868	3					
ANR	2519980	PtrMemberAccess	graph -> edges		2519868	0					
ANR	2519981	Identifier	graph		2519868	0					
ANR	2519982	Identifier	edges		2519868	1					
ANR	2519983	Argument	graph -> ebbs		2519868	4					
ANR	2519984	PtrMemberAccess	graph -> ebbs		2519868	0					
ANR	2519985	Identifier	graph		2519868	0					
ANR	2519986	Identifier	ebbs		2519868	1					
ANR	2519987	Argument	graph -> bbsum		2519868	5					
ANR	2519988	PtrMemberAccess	graph -> bbsum		2519868	0					
ANR	2519989	Identifier	graph		2519868	0					
ANR	2519990	Identifier	bbsum		2519868	1					
ANR	2519991	ElseStatement	else		2519868	0					
ANR	2519992	CompoundStatement		13:8:551:551	2519868	0					
ANR	2519993	ExpressionStatement	"a -> cb_printf ( ""  graph: cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"" , graph -> cc , graph -> nbbs , graph -> edges , graph -> ebbs , graph -> bbsum )"	1167:2:27773:27908	2519868	0	True				
ANR	2519994	CallExpression	"a -> cb_printf ( ""  graph: cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"" , graph -> cc , graph -> nbbs , graph -> edges , graph -> ebbs , graph -> bbsum )"		2519868	0					
ANR	2519995	Callee	a -> cb_printf		2519868	0					
ANR	2519996	PtrMemberAccess	a -> cb_printf		2519868	0					
ANR	2519997	Identifier	a		2519868	0					
ANR	2519998	Identifier	cb_printf		2519868	1					
ANR	2519999	ArgumentList	"""  graph: cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"""		2519868	1					
ANR	2520000	Argument	"""  graph: cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"""		2519868	0					
ANR	2520001	PrimaryExpression	"""  graph: cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"""		2519868	0					
ANR	2520002	Argument	graph -> cc		2519868	1					
ANR	2520003	PtrMemberAccess	graph -> cc		2519868	0					
ANR	2520004	Identifier	graph		2519868	0					
ANR	2520005	Identifier	cc		2519868	1					
ANR	2520006	Argument	graph -> nbbs		2519868	2					
ANR	2520007	PtrMemberAccess	graph -> nbbs		2519868	0					
ANR	2520008	Identifier	graph		2519868	0					
ANR	2520009	Identifier	nbbs		2519868	1					
ANR	2520010	Argument	graph -> edges		2519868	3					
ANR	2520011	PtrMemberAccess	graph -> edges		2519868	0					
ANR	2520012	Identifier	graph		2519868	0					
ANR	2520013	Identifier	edges		2519868	1					
ANR	2520014	Argument	graph -> ebbs		2519868	4					
ANR	2520015	PtrMemberAccess	graph -> ebbs		2519868	0					
ANR	2520016	Identifier	graph		2519868	0					
ANR	2520017	Identifier	ebbs		2519868	1					
ANR	2520018	Argument	graph -> bbsum		2519868	5					
ANR	2520019	PtrMemberAccess	graph -> bbsum		2519868	0					
ANR	2520020	Identifier	graph		2519868	0					
ANR	2520021	Identifier	bbsum		2519868	1					
ANR	2520022	ReturnType	static void		2519868	1					
ANR	2520023	Identifier	listGraph		2519868	2					
ANR	2520024	ParameterList	"RAnal * a , RSignItem * it , int format"		2519868	3					
ANR	2520025	Parameter	RAnal * a	1154:22:27180:27187	2519868	0	True				
ANR	2520026	ParameterType	RAnal *		2519868	0					
ANR	2520027	Identifier	a		2519868	1					
ANR	2520028	Parameter	RSignItem * it	1154:32:27190:27202	2519868	1	True				
ANR	2520029	ParameterType	RSignItem *		2519868	0					
ANR	2520030	Identifier	it		2519868	1					
ANR	2520031	Parameter	int format	1154:47:27205:27214	2519868	2	True				
ANR	2520032	ParameterType	int		2519868	0					
ANR	2520033	Identifier	format		2519868	1					
ANR	2520034	CFGEntryNode	ENTRY		2519868		True				
ANR	2520035	CFGExitNode	EXIT		2519868		True				
ANR	2520036	Symbol	a		2519868						
ANR	2520037	Symbol	it -> graph		2519868						
ANR	2520038	Symbol	it -> name		2519868						
ANR	2520039	Symbol	format		2519868						
ANR	2520040	Symbol	graph -> nbbs		2519868						
ANR	2520041	Symbol	it		2519868						
ANR	2520042	Symbol	graph -> ebbs		2519868						
ANR	2520043	Symbol	graph		2519868						
ANR	2520044	Symbol	* it		2519868						
ANR	2520045	Symbol	graph -> bbsum		2519868						
ANR	2520046	Symbol	* graph		2519868						
ANR	2520047	Symbol	graph -> edges		2519868						
ANR	2520048	Symbol	graph -> cc		2519868						
ANR	2520049	Function	listComment	1172:0:27916:28384							
ANR	2520050	FunctionDef	"listComment (RAnal * a , RSignItem * it , int format)"		2520049	0					
ANR	2520051	CompoundStatement		1172:61:27977:28384	2520049	0					
ANR	2520052	IfStatement	if ( it -> comment )		2520049	0					
ANR	2520053	Condition	it -> comment	1173:5:27984:27994	2520049	0	True				
ANR	2520054	PtrMemberAccess	it -> comment		2520049	0					
ANR	2520055	Identifier	it		2520049	0					
ANR	2520056	Identifier	comment		2520049	1					
ANR	2520057	CompoundStatement		2:18:19:19	2520049	1					
ANR	2520058	IfStatement	if ( format == 'q' )		2520049	0					
ANR	2520059	Condition	format == 'q'	1174:6:28005:28017	2520049	0	True				
ANR	2520060	EqualityExpression	format == 'q'		2520049	0		==			
ANR	2520061	Identifier	format		2520049	0					
ANR	2520062	PrimaryExpression	'q'		2520049	1					
ANR	2520063	CompoundStatement		3:21:42:42	2520049	1					
ANR	2520064	ExpressionStatement	"a -> cb_printf ( ""\\n ; %s\\n"" , it -> comment )"	1176:3:28081:28120	2520049	0	True				
ANR	2520065	CallExpression	"a -> cb_printf ( ""\\n ; %s\\n"" , it -> comment )"		2520049	0					
ANR	2520066	Callee	a -> cb_printf		2520049	0					
ANR	2520067	PtrMemberAccess	a -> cb_printf		2520049	0					
ANR	2520068	Identifier	a		2520049	0					
ANR	2520069	Identifier	cb_printf		2520049	1					
ANR	2520070	ArgumentList	"""\\n ; %s\\n"""		2520049	1					
ANR	2520071	Argument	"""\\n ; %s\\n"""		2520049	0					
ANR	2520072	PrimaryExpression	"""\\n ; %s\\n"""		2520049	0					
ANR	2520073	Argument	it -> comment		2520049	1					
ANR	2520074	PtrMemberAccess	it -> comment		2520049	0					
ANR	2520075	Identifier	it		2520049	0					
ANR	2520076	Identifier	comment		2520049	1					
ANR	2520077	ElseStatement	else		2520049	0					
ANR	2520078	IfStatement	if ( format == '*' )		2520049	0					
ANR	2520079	Condition	format == '*'	1177:13:28135:28147	2520049	0	True				
ANR	2520080	EqualityExpression	format == '*'		2520049	0		==			
ANR	2520081	Identifier	format		2520049	0					
ANR	2520082	PrimaryExpression	'*'		2520049	1					
ANR	2520083	CompoundStatement		6:28:172:172	2520049	1					
ANR	2520084	ExpressionStatement	"a -> cb_printf ( ""%s\\n"" , it -> comment )"	1178:3:28155:28189	2520049	0	True				
ANR	2520085	CallExpression	"a -> cb_printf ( ""%s\\n"" , it -> comment )"		2520049	0					
ANR	2520086	Callee	a -> cb_printf		2520049	0					
ANR	2520087	PtrMemberAccess	a -> cb_printf		2520049	0					
ANR	2520088	Identifier	a		2520049	0					
ANR	2520089	Identifier	cb_printf		2520049	1					
ANR	2520090	ArgumentList	"""%s\\n"""		2520049	1					
ANR	2520091	Argument	"""%s\\n"""		2520049	0					
ANR	2520092	PrimaryExpression	"""%s\\n"""		2520049	0					
ANR	2520093	Argument	it -> comment		2520049	1					
ANR	2520094	PtrMemberAccess	it -> comment		2520049	0					
ANR	2520095	Identifier	it		2520049	0					
ANR	2520096	Identifier	comment		2520049	1					
ANR	2520097	ElseStatement	else		2520049	0					
ANR	2520098	IfStatement	if ( format == 'j' )		2520049	0					
ANR	2520099	Condition	format == 'j'	1179:13:28235:28247	2520049	0	True				
ANR	2520100	EqualityExpression	format == 'j'		2520049	0		==			
ANR	2520101	Identifier	format		2520049	0					
ANR	2520102	PrimaryExpression	'j'		2520049	1					
ANR	2520103	CompoundStatement		8:28:272:272	2520049	1					
ANR	2520104	ExpressionStatement	"a -> cb_printf ( ""\\""comments\\"":\\""%s\\"","" , it -> comment )"	1180:3:28255:28305	2520049	0	True				
ANR	2520105	CallExpression	"a -> cb_printf ( ""\\""comments\\"":\\""%s\\"","" , it -> comment )"		2520049	0					
ANR	2520106	Callee	a -> cb_printf		2520049	0					
ANR	2520107	PtrMemberAccess	a -> cb_printf		2520049	0					
ANR	2520108	Identifier	a		2520049	0					
ANR	2520109	Identifier	cb_printf		2520049	1					
ANR	2520110	ArgumentList	"""\\""comments\\"":\\""%s\\"","""		2520049	1					
ANR	2520111	Argument	"""\\""comments\\"":\\""%s\\"","""		2520049	0					
ANR	2520112	PrimaryExpression	"""\\""comments\\"":\\""%s\\"","""		2520049	0					
ANR	2520113	Argument	it -> comment		2520049	1					
ANR	2520114	PtrMemberAccess	it -> comment		2520049	0					
ANR	2520115	Identifier	it		2520049	0					
ANR	2520116	Identifier	comment		2520049	1					
ANR	2520117	ElseStatement	else		2520049	0					
ANR	2520118	CompoundStatement		10:9:338:338	2520049	0					
ANR	2520119	Statement	a	1182:3:28321:28321	2520049	0	True				
ANR	2520120	Statement	->	1182:4:28322:28323	2520049	1	True				
ANR	2520121	Statement	cb_printf	1182:6:28324:28332	2520049	2	True				
ANR	2520122	Statement	(	1182:16:28334:28334	2520049	3	True				
ANR	2520123	Statement	"""  comment: 0x%08"""	1182:17:28335:28352	2520049	4	True				
ANR	2520124	Statement	PFMT64x	1182:35:28353:28359	2520049	5	True				
ANR	2520125	Statement	"""\\n"""	1182:42:28360:28363	2520049	6	True				
ANR	2520126	Statement	","	1182:46:28364:28364	2520049	7	True				
ANR	2520127	Statement	it	1182:48:28366:28367	2520049	8	True				
ANR	2520128	Statement	->	1182:50:28368:28369	2520049	9	True				
ANR	2520129	Statement	addr	1182:52:28370:28373	2520049	10	True				
ANR	2520130	Statement	)	1182:56:28374:28374	2520049	11	True				
ANR	2520131	ExpressionStatement		1182:57:28375:28375	2520049	12	True				
ANR	2520132	ReturnType	static void		2520049	1					
ANR	2520133	Identifier	listComment		2520049	2					
ANR	2520134	ParameterList	"RAnal * a , RSignItem * it , int format"		2520049	3					
ANR	2520135	Parameter	RAnal * a	1172:24:27940:27947	2520049	0	True				
ANR	2520136	ParameterType	RAnal *		2520049	0					
ANR	2520137	Identifier	a		2520049	1					
ANR	2520138	Parameter	RSignItem * it	1172:34:27950:27962	2520049	1	True				
ANR	2520139	ParameterType	RSignItem *		2520049	0					
ANR	2520140	Identifier	it		2520049	1					
ANR	2520141	Parameter	int format	1172:49:27965:27974	2520049	2	True				
ANR	2520142	ParameterType	int		2520049	0					
ANR	2520143	Identifier	format		2520049	1					
ANR	2520144	CFGEntryNode	ENTRY		2520049		True				
ANR	2520145	CFGExitNode	EXIT		2520049		True				
ANR	2520146	Symbol	a		2520049						
ANR	2520147	Symbol	* it		2520049						
ANR	2520148	Symbol	format		2520049						
ANR	2520149	Symbol	it		2520049						
ANR	2520150	Symbol	it -> comment		2520049						
ANR	2520151	Function	listRealname	1187:0:28387:28866							
ANR	2520152	FunctionDef	"listRealname (RAnal * a , RSignItem * it , int format)"		2520151	0					
ANR	2520153	CompoundStatement		1187:62:28449:28866	2520151	0					
ANR	2520154	IfStatement	if ( it -> realname )		2520151	0					
ANR	2520155	Condition	it -> realname	1188:5:28456:28467	2520151	0	True				
ANR	2520156	PtrMemberAccess	it -> realname		2520151	0					
ANR	2520157	Identifier	it		2520151	0					
ANR	2520158	Identifier	realname		2520151	1					
ANR	2520159	CompoundStatement		2:19:20:20	2520151	1					
ANR	2520160	IfStatement	if ( format == 'q' )		2520151	0					
ANR	2520161	Condition	format == 'q'	1189:6:28478:28490	2520151	0	True				
ANR	2520162	EqualityExpression	format == 'q'		2520151	0		==			
ANR	2520163	Identifier	format		2520151	0					
ANR	2520164	PrimaryExpression	'q'		2520151	1					
ANR	2520165	CompoundStatement		3:21:43:43	2520151	1					
ANR	2520166	ElseStatement	else		2520151	0					
ANR	2520167	IfStatement	if ( format == '*' )		2520151	0					
ANR	2520168	Condition	format == '*'	1191:13:28564:28576	2520151	0	True				
ANR	2520169	EqualityExpression	format == '*'		2520151	0		==			
ANR	2520170	Identifier	format		2520151	0					
ANR	2520171	PrimaryExpression	'*'		2520151	1					
ANR	2520172	CompoundStatement		5:28:129:129	2520151	1					
ANR	2520173	ExpressionStatement	"a -> cb_printf ( ""za %s n %s\\n"" , it -> name , it -> realname )"	1192:3:28584:28637	2520151	0	True				
ANR	2520174	CallExpression	"a -> cb_printf ( ""za %s n %s\\n"" , it -> name , it -> realname )"		2520151	0					
ANR	2520175	Callee	a -> cb_printf		2520151	0					
ANR	2520176	PtrMemberAccess	a -> cb_printf		2520151	0					
ANR	2520177	Identifier	a		2520151	0					
ANR	2520178	Identifier	cb_printf		2520151	1					
ANR	2520179	ArgumentList	"""za %s n %s\\n"""		2520151	1					
ANR	2520180	Argument	"""za %s n %s\\n"""		2520151	0					
ANR	2520181	PrimaryExpression	"""za %s n %s\\n"""		2520151	0					
ANR	2520182	Argument	it -> name		2520151	1					
ANR	2520183	PtrMemberAccess	it -> name		2520151	0					
ANR	2520184	Identifier	it		2520151	0					
ANR	2520185	Identifier	name		2520151	1					
ANR	2520186	Argument	it -> realname		2520151	2					
ANR	2520187	PtrMemberAccess	it -> realname		2520151	0					
ANR	2520188	Identifier	it		2520151	0					
ANR	2520189	Identifier	realname		2520151	1					
ANR	2520190	Statement	a	1193:3:28642:28642	2520151	1	True				
ANR	2520191	Statement	->	1193:4:28643:28644	2520151	2	True				
ANR	2520192	Statement	cb_printf	1193:6:28645:28653	2520151	3	True				
ANR	2520193	Statement	(	1193:16:28655:28655	2520151	4	True				
ANR	2520194	Statement	"""afn %s @ 0x%08"""	1193:17:28656:28671	2520151	5	True				
ANR	2520195	Statement	PFMT64x	1193:33:28672:28678	2520151	6	True				
ANR	2520196	Statement	"""\\n"""	1193:40:28679:28682	2520151	7	True				
ANR	2520197	Statement	","	1193:44:28683:28683	2520151	8	True				
ANR	2520198	Statement	it	1193:46:28685:28686	2520151	9	True				
ANR	2520199	Statement	->	1193:48:28687:28688	2520151	10	True				
ANR	2520200	Statement	realname	1193:50:28689:28696	2520151	11	True				
ANR	2520201	Statement	","	1193:58:28697:28697	2520151	12	True				
ANR	2520202	Statement	it	1193:60:28699:28700	2520151	13	True				
ANR	2520203	Statement	->	1193:62:28701:28702	2520151	14	True				
ANR	2520204	Statement	addr	1193:64:28703:28706	2520151	15	True				
ANR	2520205	Statement	)	1193:68:28707:28707	2520151	16	True				
ANR	2520206	ExpressionStatement		1193:69:28708:28708	2520151	17	True				
ANR	2520207	ElseStatement	else		2520151	0					
ANR	2520208	IfStatement	if ( format == 'j' )		2520151	0					
ANR	2520209	Condition	format == 'j'	1194:13:28723:28735	2520151	0	True				
ANR	2520210	EqualityExpression	format == 'j'		2520151	0		==			
ANR	2520211	Identifier	format		2520151	0					
ANR	2520212	PrimaryExpression	'j'		2520151	1					
ANR	2520213	CompoundStatement		8:28:288:288	2520151	1					
ANR	2520214	ExpressionStatement	"a -> cb_printf ( ""\\""realname\\"":\\""%s\\"","" , it -> realname )"	1195:3:28743:28794	2520151	0	True				
ANR	2520215	CallExpression	"a -> cb_printf ( ""\\""realname\\"":\\""%s\\"","" , it -> realname )"		2520151	0					
ANR	2520216	Callee	a -> cb_printf		2520151	0					
ANR	2520217	PtrMemberAccess	a -> cb_printf		2520151	0					
ANR	2520218	Identifier	a		2520151	0					
ANR	2520219	Identifier	cb_printf		2520151	1					
ANR	2520220	ArgumentList	"""\\""realname\\"":\\""%s\\"","""		2520151	1					
ANR	2520221	Argument	"""\\""realname\\"":\\""%s\\"","""		2520151	0					
ANR	2520222	PrimaryExpression	"""\\""realname\\"":\\""%s\\"","""		2520151	0					
ANR	2520223	Argument	it -> realname		2520151	1					
ANR	2520224	PtrMemberAccess	it -> realname		2520151	0					
ANR	2520225	Identifier	it		2520151	0					
ANR	2520226	Identifier	realname		2520151	1					
ANR	2520227	ElseStatement	else		2520151	0					
ANR	2520228	CompoundStatement		10:9:355:355	2520151	0					
ANR	2520229	ExpressionStatement	"a -> cb_printf ( ""  realname: %s\\n"" , it -> realname )"	1197:3:28810:28857	2520151	0	True				
ANR	2520230	CallExpression	"a -> cb_printf ( ""  realname: %s\\n"" , it -> realname )"		2520151	0					
ANR	2520231	Callee	a -> cb_printf		2520151	0					
ANR	2520232	PtrMemberAccess	a -> cb_printf		2520151	0					
ANR	2520233	Identifier	a		2520151	0					
ANR	2520234	Identifier	cb_printf		2520151	1					
ANR	2520235	ArgumentList	"""  realname: %s\\n"""		2520151	1					
ANR	2520236	Argument	"""  realname: %s\\n"""		2520151	0					
ANR	2520237	PrimaryExpression	"""  realname: %s\\n"""		2520151	0					
ANR	2520238	Argument	it -> realname		2520151	1					
ANR	2520239	PtrMemberAccess	it -> realname		2520151	0					
ANR	2520240	Identifier	it		2520151	0					
ANR	2520241	Identifier	realname		2520151	1					
ANR	2520242	ReturnType	static void		2520151	1					
ANR	2520243	Identifier	listRealname		2520151	2					
ANR	2520244	ParameterList	"RAnal * a , RSignItem * it , int format"		2520151	3					
ANR	2520245	Parameter	RAnal * a	1187:25:28412:28419	2520151	0	True				
ANR	2520246	ParameterType	RAnal *		2520151	0					
ANR	2520247	Identifier	a		2520151	1					
ANR	2520248	Parameter	RSignItem * it	1187:35:28422:28434	2520151	1	True				
ANR	2520249	ParameterType	RSignItem *		2520151	0					
ANR	2520250	Identifier	it		2520151	1					
ANR	2520251	Parameter	int format	1187:50:28437:28446	2520151	2	True				
ANR	2520252	ParameterType	int		2520151	0					
ANR	2520253	Identifier	format		2520151	1					
ANR	2520254	CFGEntryNode	ENTRY		2520151		True				
ANR	2520255	CFGExitNode	EXIT		2520151		True				
ANR	2520256	Symbol	a		2520151						
ANR	2520257	Symbol	* it		2520151						
ANR	2520258	Symbol	it -> name		2520151						
ANR	2520259	Symbol	format		2520151						
ANR	2520260	Symbol	it		2520151						
ANR	2520261	Symbol	it -> realname		2520151						
ANR	2520262	Function	listOffset	1202:0:28869:29249							
ANR	2520263	FunctionDef	"listOffset (RAnal * a , RSignItem * it , int format)"		2520262	0					
ANR	2520264	CompoundStatement		1202:60:28929:29249	2520262	0					
ANR	2520265	IfStatement	if ( format == 'q' )		2520262	0					
ANR	2520266	Condition	format == 'q'	1203:5:28936:28948	2520262	0	True				
ANR	2520267	EqualityExpression	format == 'q'		2520262	0		==			
ANR	2520268	Identifier	format		2520262	0					
ANR	2520269	PrimaryExpression	'q'		2520262	1					
ANR	2520270	CompoundStatement		2:20:21:21	2520262	1					
ANR	2520271	ElseStatement	else		2520262	0					
ANR	2520272	IfStatement	if ( format == '*' )		2520262	0					
ANR	2520273	Condition	format == '*'	1205:12:29019:29031	2520262	0	True				
ANR	2520274	EqualityExpression	format == '*'		2520262	0		==			
ANR	2520275	Identifier	format		2520262	0					
ANR	2520276	PrimaryExpression	'*'		2520262	1					
ANR	2520277	CompoundStatement		4:27:104:104	2520262	1					
ANR	2520278	Statement	a	1206:2:29038:29038	2520262	0	True				
ANR	2520279	Statement	->	1206:3:29039:29040	2520262	1	True				
ANR	2520280	Statement	cb_printf	1206:5:29041:29049	2520262	2	True				
ANR	2520281	Statement	(	1206:15:29051:29051	2520262	3	True				
ANR	2520282	Statement	"""za %s o 0x%08"""	1206:16:29052:29066	2520262	4	True				
ANR	2520283	Statement	PFMT64x	1206:31:29067:29073	2520262	5	True				
ANR	2520284	Statement	"""\\n"""	1206:38:29074:29077	2520262	6	True				
ANR	2520285	Statement	","	1206:42:29078:29078	2520262	7	True				
ANR	2520286	Statement	it	1206:44:29080:29081	2520262	8	True				
ANR	2520287	Statement	->	1206:46:29082:29083	2520262	9	True				
ANR	2520288	Statement	name	1206:48:29084:29087	2520262	10	True				
ANR	2520289	Statement	","	1206:52:29088:29088	2520262	11	True				
ANR	2520290	Statement	it	1206:54:29090:29091	2520262	12	True				
ANR	2520291	Statement	->	1206:56:29092:29093	2520262	13	True				
ANR	2520292	Statement	addr	1206:58:29094:29097	2520262	14	True				
ANR	2520293	Statement	)	1206:62:29098:29098	2520262	15	True				
ANR	2520294	ExpressionStatement		1206:63:29099:29099	2520262	16	True				
ANR	2520295	ElseStatement	else		2520262	0					
ANR	2520296	IfStatement	if ( format == 'j' )		2520262	0					
ANR	2520297	Condition	format == 'j'	1207:12:29113:29125	2520262	0	True				
ANR	2520298	EqualityExpression	format == 'j'		2520262	0		==			
ANR	2520299	Identifier	format		2520262	0					
ANR	2520300	PrimaryExpression	'j'		2520262	1					
ANR	2520301	CompoundStatement		6:27:198:198	2520262	1					
ANR	2520302	Statement	a	1208:2:29132:29132	2520262	0	True				
ANR	2520303	Statement	->	1208:3:29133:29134	2520262	1	True				
ANR	2520304	Statement	cb_printf	1208:5:29135:29143	2520262	2	True				
ANR	2520305	Statement	(	1208:15:29145:29145	2520262	3	True				
ANR	2520306	Statement	"""\\""addr\\"":%"""	1208:16:29146:29157	2520262	4	True				
ANR	2520307	Statement	PFMT64d	1208:28:29158:29164	2520262	5	True				
ANR	2520308	Statement	""","""	1208:35:29165:29167	2520262	6	True				
ANR	2520309	Statement	","	1208:38:29168:29168	2520262	7	True				
ANR	2520310	Statement	it	1208:40:29170:29171	2520262	8	True				
ANR	2520311	Statement	->	1208:42:29172:29173	2520262	9	True				
ANR	2520312	Statement	addr	1208:44:29174:29177	2520262	10	True				
ANR	2520313	Statement	)	1208:48:29178:29178	2520262	11	True				
ANR	2520314	ExpressionStatement		1208:49:29179:29179	2520262	12	True				
ANR	2520315	ElseStatement	else		2520262	0					
ANR	2520316	CompoundStatement		8:8:259:259	2520262	0					
ANR	2520317	Statement	a	1210:2:29193:29193	2520262	0	True				
ANR	2520318	Statement	->	1210:3:29194:29195	2520262	1	True				
ANR	2520319	Statement	cb_printf	1210:5:29196:29204	2520262	2	True				
ANR	2520320	Statement	(	1210:15:29206:29206	2520262	3	True				
ANR	2520321	Statement	"""  addr: 0x%08"""	1210:16:29207:29221	2520262	4	True				
ANR	2520322	Statement	PFMT64x	1210:31:29222:29228	2520262	5	True				
ANR	2520323	Statement	"""\\n"""	1210:38:29229:29232	2520262	6	True				
ANR	2520324	Statement	","	1210:42:29233:29233	2520262	7	True				
ANR	2520325	Statement	it	1210:44:29235:29236	2520262	8	True				
ANR	2520326	Statement	->	1210:46:29237:29238	2520262	9	True				
ANR	2520327	Statement	addr	1210:48:29239:29242	2520262	10	True				
ANR	2520328	Statement	)	1210:52:29243:29243	2520262	11	True				
ANR	2520329	ExpressionStatement		1210:53:29244:29244	2520262	12	True				
ANR	2520330	ReturnType	static void		2520262	1					
ANR	2520331	Identifier	listOffset		2520262	2					
ANR	2520332	ParameterList	"RAnal * a , RSignItem * it , int format"		2520262	3					
ANR	2520333	Parameter	RAnal * a	1202:23:28892:28899	2520262	0	True				
ANR	2520334	ParameterType	RAnal *		2520262	0					
ANR	2520335	Identifier	a		2520262	1					
ANR	2520336	Parameter	RSignItem * it	1202:33:28902:28914	2520262	1	True				
ANR	2520337	ParameterType	RSignItem *		2520262	0					
ANR	2520338	Identifier	it		2520262	1					
ANR	2520339	Parameter	int format	1202:48:28917:28926	2520262	2	True				
ANR	2520340	ParameterType	int		2520262	0					
ANR	2520341	Identifier	format		2520262	1					
ANR	2520342	CFGEntryNode	ENTRY		2520262		True				
ANR	2520343	CFGExitNode	EXIT		2520262		True				
ANR	2520344	Symbol	a		2520262						
ANR	2520345	Symbol	format		2520262						
ANR	2520346	Symbol	it		2520262						
ANR	2520347	Function	listVars	1214:0:29252:30024							
ANR	2520348	FunctionDef	"listVars (RAnal * a , RSignItem * it , int format)"		2520347	0					
ANR	2520349	CompoundStatement		1214:58:29310:30024	2520347	0					
ANR	2520350	IdentifierDeclStatement	RListIter * iter = NULL ;	1215:1:29313:29335	2520347	0	True				
ANR	2520351	IdentifierDecl	* iter = NULL		2520347	0					
ANR	2520352	IdentifierDeclType	RListIter *		2520347	0					
ANR	2520353	Identifier	iter		2520347	1					
ANR	2520354	AssignmentExpression	* iter = NULL		2520347	2		=			
ANR	2520355	Identifier	NULL		2520347	0					
ANR	2520356	Identifier	NULL		2520347	1					
ANR	2520357	IdentifierDeclStatement	char * var = NULL ;	1216:1:29338:29354	2520347	1	True				
ANR	2520358	IdentifierDecl	* var = NULL		2520347	0					
ANR	2520359	IdentifierDeclType	char *		2520347	0					
ANR	2520360	Identifier	var		2520347	1					
ANR	2520361	AssignmentExpression	* var = NULL		2520347	2		=			
ANR	2520362	Identifier	NULL		2520347	0					
ANR	2520363	Identifier	NULL		2520347	1					
ANR	2520364	IdentifierDeclStatement	int i = 0 ;	1217:1:29357:29366	2520347	2	True				
ANR	2520365	IdentifierDecl	i = 0		2520347	0					
ANR	2520366	IdentifierDeclType	int		2520347	0					
ANR	2520367	Identifier	i		2520347	1					
ANR	2520368	AssignmentExpression	i = 0		2520347	2		=			
ANR	2520369	Identifier	i		2520347	0					
ANR	2520370	PrimaryExpression	0		2520347	1					
ANR	2520371	IfStatement	if ( format == '*' )		2520347	3					
ANR	2520372	Condition	format == '*'	1219:5:29374:29386	2520347	0	True				
ANR	2520373	EqualityExpression	format == '*'		2520347	0		==			
ANR	2520374	Identifier	format		2520347	0					
ANR	2520375	PrimaryExpression	'*'		2520347	1					
ANR	2520376	CompoundStatement		6:20:78:78	2520347	1					
ANR	2520377	ExpressionStatement	"a -> cb_printf ( ""za %s v "" , it -> name )"	1220:2:29393:29428	2520347	0	True				
ANR	2520378	CallExpression	"a -> cb_printf ( ""za %s v "" , it -> name )"		2520347	0					
ANR	2520379	Callee	a -> cb_printf		2520347	0					
ANR	2520380	PtrMemberAccess	a -> cb_printf		2520347	0					
ANR	2520381	Identifier	a		2520347	0					
ANR	2520382	Identifier	cb_printf		2520347	1					
ANR	2520383	ArgumentList	"""za %s v """		2520347	1					
ANR	2520384	Argument	"""za %s v """		2520347	0					
ANR	2520385	PrimaryExpression	"""za %s v """		2520347	0					
ANR	2520386	Argument	it -> name		2520347	1					
ANR	2520387	PtrMemberAccess	it -> name		2520347	0					
ANR	2520388	Identifier	it		2520347	0					
ANR	2520389	Identifier	name		2520347	1					
ANR	2520390	ElseStatement	else		2520347	0					
ANR	2520391	IfStatement	if ( format == 'q' )		2520347	0					
ANR	2520392	Condition	format == 'q'	1221:12:29442:29454	2520347	0	True				
ANR	2520393	EqualityExpression	format == 'q'		2520347	0		==			
ANR	2520394	Identifier	format		2520347	0					
ANR	2520395	PrimaryExpression	'q'		2520347	1					
ANR	2520396	CompoundStatement		8:27:146:146	2520347	1					
ANR	2520397	ExpressionStatement	"a -> cb_printf ( "" vars(%d)"" , r_list_length ( it -> vars ) )"	1222:2:29461:29513	2520347	0	True				
ANR	2520398	CallExpression	"a -> cb_printf ( "" vars(%d)"" , r_list_length ( it -> vars ) )"		2520347	0					
ANR	2520399	Callee	a -> cb_printf		2520347	0					
ANR	2520400	PtrMemberAccess	a -> cb_printf		2520347	0					
ANR	2520401	Identifier	a		2520347	0					
ANR	2520402	Identifier	cb_printf		2520347	1					
ANR	2520403	ArgumentList	""" vars(%d)"""		2520347	1					
ANR	2520404	Argument	""" vars(%d)"""		2520347	0					
ANR	2520405	PrimaryExpression	""" vars(%d)"""		2520347	0					
ANR	2520406	Argument	r_list_length ( it -> vars )		2520347	1					
ANR	2520407	CallExpression	r_list_length ( it -> vars )		2520347	0					
ANR	2520408	Callee	r_list_length		2520347	0					
ANR	2520409	Identifier	r_list_length		2520347	0					
ANR	2520410	ArgumentList	it -> vars		2520347	1					
ANR	2520411	Argument	it -> vars		2520347	0					
ANR	2520412	PtrMemberAccess	it -> vars		2520347	0					
ANR	2520413	Identifier	it		2520347	0					
ANR	2520414	Identifier	vars		2520347	1					
ANR	2520415	ReturnStatement	return ;	1223:2:29517:29523	2520347	1	True				
ANR	2520416	ElseStatement	else		2520347	0					
ANR	2520417	IfStatement	if ( format == 'j' )		2520347	0					
ANR	2520418	Condition	format == 'j'	1224:12:29537:29549	2520347	0	True				
ANR	2520419	EqualityExpression	format == 'j'		2520347	0		==			
ANR	2520420	Identifier	format		2520347	0					
ANR	2520421	PrimaryExpression	'j'		2520347	1					
ANR	2520422	CompoundStatement		11:27:241:241	2520347	1					
ANR	2520423	ExpressionStatement	"a -> cb_printf ( ""\\""vars\\"":["" )"	1225:2:29556:29583	2520347	0	True				
ANR	2520424	CallExpression	"a -> cb_printf ( ""\\""vars\\"":["" )"		2520347	0					
ANR	2520425	Callee	a -> cb_printf		2520347	0					
ANR	2520426	PtrMemberAccess	a -> cb_printf		2520347	0					
ANR	2520427	Identifier	a		2520347	0					
ANR	2520428	Identifier	cb_printf		2520347	1					
ANR	2520429	ArgumentList	"""\\""vars\\"":["""		2520347	1					
ANR	2520430	Argument	"""\\""vars\\"":["""		2520347	0					
ANR	2520431	PrimaryExpression	"""\\""vars\\"":["""		2520347	0					
ANR	2520432	ElseStatement	else		2520347	0					
ANR	2520433	CompoundStatement		13:8:282:282	2520347	0					
ANR	2520434	ExpressionStatement	"a -> cb_printf ( ""  vars: "" )"	1227:2:29597:29622	2520347	0	True				
ANR	2520435	CallExpression	"a -> cb_printf ( ""  vars: "" )"		2520347	0					
ANR	2520436	Callee	a -> cb_printf		2520347	0					
ANR	2520437	PtrMemberAccess	a -> cb_printf		2520347	0					
ANR	2520438	Identifier	a		2520347	0					
ANR	2520439	Identifier	cb_printf		2520347	1					
ANR	2520440	ArgumentList	"""  vars: """		2520347	1					
ANR	2520441	Argument	"""  vars: """		2520347	0					
ANR	2520442	PrimaryExpression	"""  vars: """		2520347	0					
ANR	2520443	Statement	r_list_foreach	1230:1:29629:29642	2520347	4	True				
ANR	2520444	Statement	(	1230:16:29644:29644	2520347	5	True				
ANR	2520445	Statement	it	1230:17:29645:29646	2520347	6	True				
ANR	2520446	Statement	->	1230:19:29647:29648	2520347	7	True				
ANR	2520447	Statement	vars	1230:21:29649:29652	2520347	8	True				
ANR	2520448	Statement	","	1230:25:29653:29653	2520347	9	True				
ANR	2520449	Statement	iter	1230:27:29655:29658	2520347	10	True				
ANR	2520450	Statement	","	1230:31:29659:29659	2520347	11	True				
ANR	2520451	Statement	var	1230:33:29661:29663	2520347	12	True				
ANR	2520452	Statement	)	1230:36:29664:29664	2520347	13	True				
ANR	2520453	CompoundStatement		17:38:355:355	2520347	14					
ANR	2520454	IfStatement	if ( i > 0 )		2520347	0					
ANR	2520455	Condition	i > 0	1231:6:29674:29678	2520347	0	True				
ANR	2520456	RelationalExpression	i > 0		2520347	0		>			
ANR	2520457	Identifier	i		2520347	0					
ANR	2520458	PrimaryExpression	0		2520347	1					
ANR	2520459	CompoundStatement		18:13:370:370	2520347	1					
ANR	2520460	IfStatement	if ( format == '*' )		2520347	0					
ANR	2520461	Condition	format == '*'	1232:7:29690:29702	2520347	0	True				
ANR	2520462	EqualityExpression	format == '*'		2520347	0		==			
ANR	2520463	Identifier	format		2520347	0					
ANR	2520464	PrimaryExpression	'*'		2520347	1					
ANR	2520465	CompoundStatement		19:22:394:394	2520347	1					
ANR	2520466	ExpressionStatement	"a -> cb_printf ( "" "" )"	1233:4:29711:29729	2520347	0	True				
ANR	2520467	CallExpression	"a -> cb_printf ( "" "" )"		2520347	0					
ANR	2520468	Callee	a -> cb_printf		2520347	0					
ANR	2520469	PtrMemberAccess	a -> cb_printf		2520347	0					
ANR	2520470	Identifier	a		2520347	0					
ANR	2520471	Identifier	cb_printf		2520347	1					
ANR	2520472	ArgumentList	""" """		2520347	1					
ANR	2520473	Argument	""" """		2520347	0					
ANR	2520474	PrimaryExpression	""" """		2520347	0					
ANR	2520475	ElseStatement	else		2520347	0					
ANR	2520476	IfStatement	if ( format == 'j' )		2520347	0					
ANR	2520477	Condition	format == 'j'	1234:14:29745:29757	2520347	0	True				
ANR	2520478	EqualityExpression	format == 'j'		2520347	0		==			
ANR	2520479	Identifier	format		2520347	0					
ANR	2520480	PrimaryExpression	'j'		2520347	1					
ANR	2520481	CompoundStatement		21:29:449:449	2520347	1					
ANR	2520482	ExpressionStatement	"a -> cb_printf ( "","" )"	1235:4:29766:29784	2520347	0	True				
ANR	2520483	CallExpression	"a -> cb_printf ( "","" )"		2520347	0					
ANR	2520484	Callee	a -> cb_printf		2520347	0					
ANR	2520485	PtrMemberAccess	a -> cb_printf		2520347	0					
ANR	2520486	Identifier	a		2520347	0					
ANR	2520487	Identifier	cb_printf		2520347	1					
ANR	2520488	ArgumentList	""","""		2520347	1					
ANR	2520489	Argument	""","""		2520347	0					
ANR	2520490	PrimaryExpression	""","""		2520347	0					
ANR	2520491	ElseStatement	else		2520347	0					
ANR	2520492	CompoundStatement		23:10:485:485	2520347	0					
ANR	2520493	ExpressionStatement	"a -> cb_printf ( "", "" )"	1237:4:29802:29821	2520347	0	True				
ANR	2520494	CallExpression	"a -> cb_printf ( "", "" )"		2520347	0					
ANR	2520495	Callee	a -> cb_printf		2520347	0					
ANR	2520496	PtrMemberAccess	a -> cb_printf		2520347	0					
ANR	2520497	Identifier	a		2520347	0					
ANR	2520498	Identifier	cb_printf		2520347	1					
ANR	2520499	ArgumentList	""", """		2520347	1					
ANR	2520500	Argument	""", """		2520347	0					
ANR	2520501	PrimaryExpression	""", """		2520347	0					
ANR	2520502	IfStatement	if ( format == 'j' )		2520347	1					
ANR	2520503	Condition	format == 'j'	1240:6:29838:29850	2520347	0	True				
ANR	2520504	EqualityExpression	format == 'j'		2520347	0		==			
ANR	2520505	Identifier	format		2520347	0					
ANR	2520506	PrimaryExpression	'j'		2520347	1					
ANR	2520507	CompoundStatement		27:21:542:542	2520347	1					
ANR	2520508	ExpressionStatement	"a -> cb_printf ( ""\\""%s\\"""" , var )"	1241:3:29858:29886	2520347	0	True				
ANR	2520509	CallExpression	"a -> cb_printf ( ""\\""%s\\"""" , var )"		2520347	0					
ANR	2520510	Callee	a -> cb_printf		2520347	0					
ANR	2520511	PtrMemberAccess	a -> cb_printf		2520347	0					
ANR	2520512	Identifier	a		2520347	0					
ANR	2520513	Identifier	cb_printf		2520347	1					
ANR	2520514	ArgumentList	"""\\""%s\\"""""		2520347	1					
ANR	2520515	Argument	"""\\""%s\\"""""		2520347	0					
ANR	2520516	PrimaryExpression	"""\\""%s\\"""""		2520347	0					
ANR	2520517	Argument	var		2520347	1					
ANR	2520518	Identifier	var		2520347	0					
ANR	2520519	ElseStatement	else		2520347	0					
ANR	2520520	CompoundStatement		29:9:586:586	2520347	0					
ANR	2520521	ExpressionStatement	"a -> cb_printf ( ""%s"" , var )"	1243:3:29902:29926	2520347	0	True				
ANR	2520522	CallExpression	"a -> cb_printf ( ""%s"" , var )"		2520347	0					
ANR	2520523	Callee	a -> cb_printf		2520347	0					
ANR	2520524	PtrMemberAccess	a -> cb_printf		2520347	0					
ANR	2520525	Identifier	a		2520347	0					
ANR	2520526	Identifier	cb_printf		2520347	1					
ANR	2520527	ArgumentList	"""%s"""		2520347	1					
ANR	2520528	Argument	"""%s"""		2520347	0					
ANR	2520529	PrimaryExpression	"""%s"""		2520347	0					
ANR	2520530	Argument	var		2520347	1					
ANR	2520531	Identifier	var		2520347	0					
ANR	2520532	ExpressionStatement	i ++	1245:2:29934:29937	2520347	2	True				
ANR	2520533	PostIncDecOperationExpression	i ++		2520347	0					
ANR	2520534	Identifier	i		2520347	0					
ANR	2520535	IncDec	++		2520347	1					
ANR	2520536	IfStatement	if ( format == 'j' )		2520347	15					
ANR	2520537	Condition	format == 'j'	1248:5:29948:29960	2520347	0	True				
ANR	2520538	EqualityExpression	format == 'j'		2520347	0		==			
ANR	2520539	Identifier	format		2520347	0					
ANR	2520540	PrimaryExpression	'j'		2520347	1					
ANR	2520541	CompoundStatement		35:20:652:652	2520347	1					
ANR	2520542	ExpressionStatement	"a -> cb_printf ( ""],"" )"	1249:2:29967:29986	2520347	0	True				
ANR	2520543	CallExpression	"a -> cb_printf ( ""],"" )"		2520347	0					
ANR	2520544	Callee	a -> cb_printf		2520347	0					
ANR	2520545	PtrMemberAccess	a -> cb_printf		2520347	0					
ANR	2520546	Identifier	a		2520347	0					
ANR	2520547	Identifier	cb_printf		2520347	1					
ANR	2520548	ArgumentList	"""],"""		2520347	1					
ANR	2520549	Argument	"""],"""		2520347	0					
ANR	2520550	PrimaryExpression	"""],"""		2520347	0					
ANR	2520551	ElseStatement	else		2520347	0					
ANR	2520552	CompoundStatement		37:8:685:685	2520347	0					
ANR	2520553	ExpressionStatement	"a -> cb_printf ( ""\\n"" )"	1251:2:30000:30019	2520347	0	True				
ANR	2520554	CallExpression	"a -> cb_printf ( ""\\n"" )"		2520347	0					
ANR	2520555	Callee	a -> cb_printf		2520347	0					
ANR	2520556	PtrMemberAccess	a -> cb_printf		2520347	0					
ANR	2520557	Identifier	a		2520347	0					
ANR	2520558	Identifier	cb_printf		2520347	1					
ANR	2520559	ArgumentList	"""\\n"""		2520347	1					
ANR	2520560	Argument	"""\\n"""		2520347	0					
ANR	2520561	PrimaryExpression	"""\\n"""		2520347	0					
ANR	2520562	ReturnType	static void		2520347	1					
ANR	2520563	Identifier	listVars		2520347	2					
ANR	2520564	ParameterList	"RAnal * a , RSignItem * it , int format"		2520347	3					
ANR	2520565	Parameter	RAnal * a	1214:21:29273:29280	2520347	0	True				
ANR	2520566	ParameterType	RAnal *		2520347	0					
ANR	2520567	Identifier	a		2520347	1					
ANR	2520568	Parameter	RSignItem * it	1214:31:29283:29295	2520347	1	True				
ANR	2520569	ParameterType	RSignItem *		2520347	0					
ANR	2520570	Identifier	it		2520347	1					
ANR	2520571	Parameter	int format	1214:46:29298:29307	2520347	2	True				
ANR	2520572	ParameterType	int		2520347	0					
ANR	2520573	Identifier	format		2520347	1					
ANR	2520574	CFGEntryNode	ENTRY		2520347		True				
ANR	2520575	CFGExitNode	EXIT		2520347		True				
ANR	2520576	Symbol	it -> vars		2520347						
ANR	2520577	Symbol	a		2520347						
ANR	2520578	Symbol	* it		2520347						
ANR	2520579	Symbol	NULL		2520347						
ANR	2520580	Symbol	var		2520347						
ANR	2520581	Symbol	it -> name		2520347						
ANR	2520582	Symbol	format		2520347						
ANR	2520583	Symbol	iter		2520347						
ANR	2520584	Symbol	i		2520347						
ANR	2520585	Symbol	it		2520347						
ANR	2520586	Symbol	r_list_length		2520347						
ANR	2520587	Function	listXRefs	1255:0:30027:30858							
ANR	2520588	FunctionDef	"listXRefs (RAnal * a , RSignItem * it , int format)"		2520587	0					
ANR	2520589	CompoundStatement		1255:59:30086:30858	2520587	0					
ANR	2520590	IdentifierDeclStatement	RListIter * iter = NULL ;	1256:1:30089:30111	2520587	0	True				
ANR	2520591	IdentifierDecl	* iter = NULL		2520587	0					
ANR	2520592	IdentifierDeclType	RListIter *		2520587	0					
ANR	2520593	Identifier	iter		2520587	1					
ANR	2520594	AssignmentExpression	* iter = NULL		2520587	2		=			
ANR	2520595	Identifier	NULL		2520587	0					
ANR	2520596	Identifier	NULL		2520587	1					
ANR	2520597	IdentifierDeclStatement	char * ref = NULL ;	1257:1:30114:30130	2520587	1	True				
ANR	2520598	IdentifierDecl	* ref = NULL		2520587	0					
ANR	2520599	IdentifierDeclType	char *		2520587	0					
ANR	2520600	Identifier	ref		2520587	1					
ANR	2520601	AssignmentExpression	* ref = NULL		2520587	2		=			
ANR	2520602	Identifier	NULL		2520587	0					
ANR	2520603	Identifier	NULL		2520587	1					
ANR	2520604	IdentifierDeclStatement	int i = 0 ;	1258:1:30133:30142	2520587	2	True				
ANR	2520605	IdentifierDecl	i = 0		2520587	0					
ANR	2520606	IdentifierDeclType	int		2520587	0					
ANR	2520607	Identifier	i		2520587	1					
ANR	2520608	AssignmentExpression	i = 0		2520587	2		=			
ANR	2520609	Identifier	i		2520587	0					
ANR	2520610	PrimaryExpression	0		2520587	1					
ANR	2520611	IfStatement	if ( format == '*' )		2520587	3					
ANR	2520612	Condition	format == '*'	1260:5:30150:30162	2520587	0	True				
ANR	2520613	EqualityExpression	format == '*'		2520587	0		==			
ANR	2520614	Identifier	format		2520587	0					
ANR	2520615	PrimaryExpression	'*'		2520587	1					
ANR	2520616	CompoundStatement		6:20:78:78	2520587	1					
ANR	2520617	ExpressionStatement	"a -> cb_printf ( ""za %s x "" , it -> name )"	1261:2:30169:30204	2520587	0	True				
ANR	2520618	CallExpression	"a -> cb_printf ( ""za %s x "" , it -> name )"		2520587	0					
ANR	2520619	Callee	a -> cb_printf		2520587	0					
ANR	2520620	PtrMemberAccess	a -> cb_printf		2520587	0					
ANR	2520621	Identifier	a		2520587	0					
ANR	2520622	Identifier	cb_printf		2520587	1					
ANR	2520623	ArgumentList	"""za %s x """		2520587	1					
ANR	2520624	Argument	"""za %s x """		2520587	0					
ANR	2520625	PrimaryExpression	"""za %s x """		2520587	0					
ANR	2520626	Argument	it -> name		2520587	1					
ANR	2520627	PtrMemberAccess	it -> name		2520587	0					
ANR	2520628	Identifier	it		2520587	0					
ANR	2520629	Identifier	name		2520587	1					
ANR	2520630	ElseStatement	else		2520587	0					
ANR	2520631	IfStatement	if ( format == 'q' )		2520587	0					
ANR	2520632	Condition	format == 'q'	1262:12:30218:30230	2520587	0	True				
ANR	2520633	EqualityExpression	format == 'q'		2520587	0		==			
ANR	2520634	Identifier	format		2520587	0					
ANR	2520635	PrimaryExpression	'q'		2520587	1					
ANR	2520636	CompoundStatement		8:27:146:146	2520587	1					
ANR	2520637	ExpressionStatement	"a -> cb_printf ( "" xrefs(%d)"" , r_list_length ( it -> xrefs ) )"	1263:2:30237:30291	2520587	0	True				
ANR	2520638	CallExpression	"a -> cb_printf ( "" xrefs(%d)"" , r_list_length ( it -> xrefs ) )"		2520587	0					
ANR	2520639	Callee	a -> cb_printf		2520587	0					
ANR	2520640	PtrMemberAccess	a -> cb_printf		2520587	0					
ANR	2520641	Identifier	a		2520587	0					
ANR	2520642	Identifier	cb_printf		2520587	1					
ANR	2520643	ArgumentList	""" xrefs(%d)"""		2520587	1					
ANR	2520644	Argument	""" xrefs(%d)"""		2520587	0					
ANR	2520645	PrimaryExpression	""" xrefs(%d)"""		2520587	0					
ANR	2520646	Argument	r_list_length ( it -> xrefs )		2520587	1					
ANR	2520647	CallExpression	r_list_length ( it -> xrefs )		2520587	0					
ANR	2520648	Callee	r_list_length		2520587	0					
ANR	2520649	Identifier	r_list_length		2520587	0					
ANR	2520650	ArgumentList	it -> xrefs		2520587	1					
ANR	2520651	Argument	it -> xrefs		2520587	0					
ANR	2520652	PtrMemberAccess	it -> xrefs		2520587	0					
ANR	2520653	Identifier	it		2520587	0					
ANR	2520654	Identifier	xrefs		2520587	1					
ANR	2520655	ReturnStatement	return ;	1264:2:30295:30301	2520587	1	True				
ANR	2520656	ElseStatement	else		2520587	0					
ANR	2520657	IfStatement	if ( format == 'j' )		2520587	0					
ANR	2520658	Condition	format == 'j'	1265:12:30315:30327	2520587	0	True				
ANR	2520659	EqualityExpression	format == 'j'		2520587	0		==			
ANR	2520660	Identifier	format		2520587	0					
ANR	2520661	PrimaryExpression	'j'		2520587	1					
ANR	2520662	CompoundStatement		11:27:243:243	2520587	1					
ANR	2520663	ExpressionStatement	"a -> cb_printf ( ""\\""xrefs\\"":["" )"	1266:2:30334:30362	2520587	0	True				
ANR	2520664	CallExpression	"a -> cb_printf ( ""\\""xrefs\\"":["" )"		2520587	0					
ANR	2520665	Callee	a -> cb_printf		2520587	0					
ANR	2520666	PtrMemberAccess	a -> cb_printf		2520587	0					
ANR	2520667	Identifier	a		2520587	0					
ANR	2520668	Identifier	cb_printf		2520587	1					
ANR	2520669	ArgumentList	"""\\""xrefs\\"":["""		2520587	1					
ANR	2520670	Argument	"""\\""xrefs\\"":["""		2520587	0					
ANR	2520671	PrimaryExpression	"""\\""xrefs\\"":["""		2520587	0					
ANR	2520672	ElseStatement	else		2520587	0					
ANR	2520673	CompoundStatement		13:8:285:285	2520587	0					
ANR	2520674	IfStatement	if ( it -> xrefs && ! r_list_empty ( it -> xrefs ) )		2520587	0					
ANR	2520675	Condition	it -> xrefs && ! r_list_empty ( it -> xrefs )	1268:6:30380:30417	2520587	0	True				
ANR	2520676	AndExpression	it -> xrefs && ! r_list_empty ( it -> xrefs )		2520587	0		&&			
ANR	2520677	PtrMemberAccess	it -> xrefs		2520587	0					
ANR	2520678	Identifier	it		2520587	0					
ANR	2520679	Identifier	xrefs		2520587	1					
ANR	2520680	UnaryOperationExpression	! r_list_empty ( it -> xrefs )		2520587	1					
ANR	2520681	UnaryOperator	!		2520587	0					
ANR	2520682	CallExpression	r_list_empty ( it -> xrefs )		2520587	1					
ANR	2520683	Callee	r_list_empty		2520587	0					
ANR	2520684	Identifier	r_list_empty		2520587	0					
ANR	2520685	ArgumentList	it -> xrefs		2520587	1					
ANR	2520686	Argument	it -> xrefs		2520587	0					
ANR	2520687	PtrMemberAccess	it -> xrefs		2520587	0					
ANR	2520688	Identifier	it		2520587	0					
ANR	2520689	Identifier	xrefs		2520587	1					
ANR	2520690	CompoundStatement		14:46:333:333	2520587	1					
ANR	2520691	ExpressionStatement	"a -> cb_printf ( ""  xrefs: "" )"	1269:3:30425:30451	2520587	0	True				
ANR	2520692	CallExpression	"a -> cb_printf ( ""  xrefs: "" )"		2520587	0					
ANR	2520693	Callee	a -> cb_printf		2520587	0					
ANR	2520694	PtrMemberAccess	a -> cb_printf		2520587	0					
ANR	2520695	Identifier	a		2520587	0					
ANR	2520696	Identifier	cb_printf		2520587	1					
ANR	2520697	ArgumentList	"""  xrefs: """		2520587	1					
ANR	2520698	Argument	"""  xrefs: """		2520587	0					
ANR	2520699	PrimaryExpression	"""  xrefs: """		2520587	0					
ANR	2520700	Statement	r_list_foreach	1273:1:30462:30475	2520587	4	True				
ANR	2520701	Statement	(	1273:16:30477:30477	2520587	5	True				
ANR	2520702	Statement	it	1273:17:30478:30479	2520587	6	True				
ANR	2520703	Statement	->	1273:19:30480:30481	2520587	7	True				
ANR	2520704	Statement	xrefs	1273:21:30482:30486	2520587	8	True				
ANR	2520705	Statement	","	1273:26:30487:30487	2520587	9	True				
ANR	2520706	Statement	iter	1273:28:30489:30492	2520587	10	True				
ANR	2520707	Statement	","	1273:32:30493:30493	2520587	11	True				
ANR	2520708	Statement	ref	1273:34:30495:30497	2520587	12	True				
ANR	2520709	Statement	)	1273:37:30498:30498	2520587	13	True				
ANR	2520710	CompoundStatement		19:39:413:413	2520587	14					
ANR	2520711	IfStatement	if ( i > 0 )		2520587	0					
ANR	2520712	Condition	i > 0	1274:6:30508:30512	2520587	0	True				
ANR	2520713	RelationalExpression	i > 0		2520587	0		>			
ANR	2520714	Identifier	i		2520587	0					
ANR	2520715	PrimaryExpression	0		2520587	1					
ANR	2520716	CompoundStatement		20:13:428:428	2520587	1					
ANR	2520717	IfStatement	if ( format == '*' )		2520587	0					
ANR	2520718	Condition	format == '*'	1275:7:30524:30536	2520587	0	True				
ANR	2520719	EqualityExpression	format == '*'		2520587	0		==			
ANR	2520720	Identifier	format		2520587	0					
ANR	2520721	PrimaryExpression	'*'		2520587	1					
ANR	2520722	CompoundStatement		21:22:452:452	2520587	1					
ANR	2520723	ExpressionStatement	"a -> cb_printf ( "" "" )"	1276:4:30545:30563	2520587	0	True				
ANR	2520724	CallExpression	"a -> cb_printf ( "" "" )"		2520587	0					
ANR	2520725	Callee	a -> cb_printf		2520587	0					
ANR	2520726	PtrMemberAccess	a -> cb_printf		2520587	0					
ANR	2520727	Identifier	a		2520587	0					
ANR	2520728	Identifier	cb_printf		2520587	1					
ANR	2520729	ArgumentList	""" """		2520587	1					
ANR	2520730	Argument	""" """		2520587	0					
ANR	2520731	PrimaryExpression	""" """		2520587	0					
ANR	2520732	ElseStatement	else		2520587	0					
ANR	2520733	IfStatement	if ( format == 'j' )		2520587	0					
ANR	2520734	Condition	format == 'j'	1277:14:30579:30591	2520587	0	True				
ANR	2520735	EqualityExpression	format == 'j'		2520587	0		==			
ANR	2520736	Identifier	format		2520587	0					
ANR	2520737	PrimaryExpression	'j'		2520587	1					
ANR	2520738	CompoundStatement		23:29:507:507	2520587	1					
ANR	2520739	ExpressionStatement	"a -> cb_printf ( "","" )"	1278:4:30600:30618	2520587	0	True				
ANR	2520740	CallExpression	"a -> cb_printf ( "","" )"		2520587	0					
ANR	2520741	Callee	a -> cb_printf		2520587	0					
ANR	2520742	PtrMemberAccess	a -> cb_printf		2520587	0					
ANR	2520743	Identifier	a		2520587	0					
ANR	2520744	Identifier	cb_printf		2520587	1					
ANR	2520745	ArgumentList	""","""		2520587	1					
ANR	2520746	Argument	""","""		2520587	0					
ANR	2520747	PrimaryExpression	""","""		2520587	0					
ANR	2520748	ElseStatement	else		2520587	0					
ANR	2520749	CompoundStatement		25:10:543:543	2520587	0					
ANR	2520750	ExpressionStatement	"a -> cb_printf ( "", "" )"	1280:4:30636:30655	2520587	0	True				
ANR	2520751	CallExpression	"a -> cb_printf ( "", "" )"		2520587	0					
ANR	2520752	Callee	a -> cb_printf		2520587	0					
ANR	2520753	PtrMemberAccess	a -> cb_printf		2520587	0					
ANR	2520754	Identifier	a		2520587	0					
ANR	2520755	Identifier	cb_printf		2520587	1					
ANR	2520756	ArgumentList	""", """		2520587	1					
ANR	2520757	Argument	""", """		2520587	0					
ANR	2520758	PrimaryExpression	""", """		2520587	0					
ANR	2520759	IfStatement	if ( format == 'j' )		2520587	1					
ANR	2520760	Condition	format == 'j'	1283:6:30672:30684	2520587	0	True				
ANR	2520761	EqualityExpression	format == 'j'		2520587	0		==			
ANR	2520762	Identifier	format		2520587	0					
ANR	2520763	PrimaryExpression	'j'		2520587	1					
ANR	2520764	CompoundStatement		29:21:600:600	2520587	1					
ANR	2520765	ExpressionStatement	"a -> cb_printf ( ""\\""%s\\"""" , ref )"	1284:3:30692:30720	2520587	0	True				
ANR	2520766	CallExpression	"a -> cb_printf ( ""\\""%s\\"""" , ref )"		2520587	0					
ANR	2520767	Callee	a -> cb_printf		2520587	0					
ANR	2520768	PtrMemberAccess	a -> cb_printf		2520587	0					
ANR	2520769	Identifier	a		2520587	0					
ANR	2520770	Identifier	cb_printf		2520587	1					
ANR	2520771	ArgumentList	"""\\""%s\\"""""		2520587	1					
ANR	2520772	Argument	"""\\""%s\\"""""		2520587	0					
ANR	2520773	PrimaryExpression	"""\\""%s\\"""""		2520587	0					
ANR	2520774	Argument	ref		2520587	1					
ANR	2520775	Identifier	ref		2520587	0					
ANR	2520776	ElseStatement	else		2520587	0					
ANR	2520777	CompoundStatement		31:9:644:644	2520587	0					
ANR	2520778	ExpressionStatement	"a -> cb_printf ( ""%s"" , ref )"	1286:3:30736:30760	2520587	0	True				
ANR	2520779	CallExpression	"a -> cb_printf ( ""%s"" , ref )"		2520587	0					
ANR	2520780	Callee	a -> cb_printf		2520587	0					
ANR	2520781	PtrMemberAccess	a -> cb_printf		2520587	0					
ANR	2520782	Identifier	a		2520587	0					
ANR	2520783	Identifier	cb_printf		2520587	1					
ANR	2520784	ArgumentList	"""%s"""		2520587	1					
ANR	2520785	Argument	"""%s"""		2520587	0					
ANR	2520786	PrimaryExpression	"""%s"""		2520587	0					
ANR	2520787	Argument	ref		2520587	1					
ANR	2520788	Identifier	ref		2520587	0					
ANR	2520789	ExpressionStatement	i ++	1288:2:30768:30771	2520587	2	True				
ANR	2520790	PostIncDecOperationExpression	i ++		2520587	0					
ANR	2520791	Identifier	i		2520587	0					
ANR	2520792	IncDec	++		2520587	1					
ANR	2520793	IfStatement	if ( format == 'j' )		2520587	15					
ANR	2520794	Condition	format == 'j'	1291:5:30782:30794	2520587	0	True				
ANR	2520795	EqualityExpression	format == 'j'		2520587	0		==			
ANR	2520796	Identifier	format		2520587	0					
ANR	2520797	PrimaryExpression	'j'		2520587	1					
ANR	2520798	CompoundStatement		37:20:710:710	2520587	1					
ANR	2520799	ExpressionStatement	"a -> cb_printf ( ""],"" )"	1292:2:30801:30820	2520587	0	True				
ANR	2520800	CallExpression	"a -> cb_printf ( ""],"" )"		2520587	0					
ANR	2520801	Callee	a -> cb_printf		2520587	0					
ANR	2520802	PtrMemberAccess	a -> cb_printf		2520587	0					
ANR	2520803	Identifier	a		2520587	0					
ANR	2520804	Identifier	cb_printf		2520587	1					
ANR	2520805	ArgumentList	"""],"""		2520587	1					
ANR	2520806	Argument	"""],"""		2520587	0					
ANR	2520807	PrimaryExpression	"""],"""		2520587	0					
ANR	2520808	ElseStatement	else		2520587	0					
ANR	2520809	CompoundStatement		39:8:743:743	2520587	0					
ANR	2520810	ExpressionStatement	"a -> cb_printf ( ""\\n"" )"	1294:2:30834:30853	2520587	0	True				
ANR	2520811	CallExpression	"a -> cb_printf ( ""\\n"" )"		2520587	0					
ANR	2520812	Callee	a -> cb_printf		2520587	0					
ANR	2520813	PtrMemberAccess	a -> cb_printf		2520587	0					
ANR	2520814	Identifier	a		2520587	0					
ANR	2520815	Identifier	cb_printf		2520587	1					
ANR	2520816	ArgumentList	"""\\n"""		2520587	1					
ANR	2520817	Argument	"""\\n"""		2520587	0					
ANR	2520818	PrimaryExpression	"""\\n"""		2520587	0					
ANR	2520819	ReturnType	static void		2520587	1					
ANR	2520820	Identifier	listXRefs		2520587	2					
ANR	2520821	ParameterList	"RAnal * a , RSignItem * it , int format"		2520587	3					
ANR	2520822	Parameter	RAnal * a	1255:22:30049:30056	2520587	0	True				
ANR	2520823	ParameterType	RAnal *		2520587	0					
ANR	2520824	Identifier	a		2520587	1					
ANR	2520825	Parameter	RSignItem * it	1255:32:30059:30071	2520587	1	True				
ANR	2520826	ParameterType	RSignItem *		2520587	0					
ANR	2520827	Identifier	it		2520587	1					
ANR	2520828	Parameter	int format	1255:47:30074:30083	2520587	2	True				
ANR	2520829	ParameterType	int		2520587	0					
ANR	2520830	Identifier	format		2520587	1					
ANR	2520831	CFGEntryNode	ENTRY		2520587		True				
ANR	2520832	CFGExitNode	EXIT		2520587		True				
ANR	2520833	Symbol	a		2520587						
ANR	2520834	Symbol	ref		2520587						
ANR	2520835	Symbol	* it		2520587						
ANR	2520836	Symbol	NULL		2520587						
ANR	2520837	Symbol	it -> name		2520587						
ANR	2520838	Symbol	format		2520587						
ANR	2520839	Symbol	iter		2520587						
ANR	2520840	Symbol	i		2520587						
ANR	2520841	Symbol	r_list_empty		2520587						
ANR	2520842	Symbol	it		2520587						
ANR	2520843	Symbol	it -> xrefs		2520587						
ANR	2520844	Symbol	r_list_length		2520587						
ANR	2520845	Function	listRefs	1298:0:30861:31684							
ANR	2520846	FunctionDef	"listRefs (RAnal * a , RSignItem * it , int format)"		2520845	0					
ANR	2520847	CompoundStatement		1298:58:30919:31684	2520845	0					
ANR	2520848	IdentifierDeclStatement	RListIter * iter = NULL ;	1299:1:30922:30944	2520845	0	True				
ANR	2520849	IdentifierDecl	* iter = NULL		2520845	0					
ANR	2520850	IdentifierDeclType	RListIter *		2520845	0					
ANR	2520851	Identifier	iter		2520845	1					
ANR	2520852	AssignmentExpression	* iter = NULL		2520845	2		=			
ANR	2520853	Identifier	NULL		2520845	0					
ANR	2520854	Identifier	NULL		2520845	1					
ANR	2520855	IdentifierDeclStatement	char * ref = NULL ;	1300:1:30947:30963	2520845	1	True				
ANR	2520856	IdentifierDecl	* ref = NULL		2520845	0					
ANR	2520857	IdentifierDeclType	char *		2520845	0					
ANR	2520858	Identifier	ref		2520845	1					
ANR	2520859	AssignmentExpression	* ref = NULL		2520845	2		=			
ANR	2520860	Identifier	NULL		2520845	0					
ANR	2520861	Identifier	NULL		2520845	1					
ANR	2520862	IdentifierDeclStatement	int i = 0 ;	1301:1:30966:30975	2520845	2	True				
ANR	2520863	IdentifierDecl	i = 0		2520845	0					
ANR	2520864	IdentifierDeclType	int		2520845	0					
ANR	2520865	Identifier	i		2520845	1					
ANR	2520866	AssignmentExpression	i = 0		2520845	2		=			
ANR	2520867	Identifier	i		2520845	0					
ANR	2520868	PrimaryExpression	0		2520845	1					
ANR	2520869	IfStatement	if ( format == '*' )		2520845	3					
ANR	2520870	Condition	format == '*'	1303:5:30983:30995	2520845	0	True				
ANR	2520871	EqualityExpression	format == '*'		2520845	0		==			
ANR	2520872	Identifier	format		2520845	0					
ANR	2520873	PrimaryExpression	'*'		2520845	1					
ANR	2520874	CompoundStatement		6:20:78:78	2520845	1					
ANR	2520875	ExpressionStatement	"a -> cb_printf ( ""za %s r "" , it -> name )"	1304:2:31002:31037	2520845	0	True				
ANR	2520876	CallExpression	"a -> cb_printf ( ""za %s r "" , it -> name )"		2520845	0					
ANR	2520877	Callee	a -> cb_printf		2520845	0					
ANR	2520878	PtrMemberAccess	a -> cb_printf		2520845	0					
ANR	2520879	Identifier	a		2520845	0					
ANR	2520880	Identifier	cb_printf		2520845	1					
ANR	2520881	ArgumentList	"""za %s r """		2520845	1					
ANR	2520882	Argument	"""za %s r """		2520845	0					
ANR	2520883	PrimaryExpression	"""za %s r """		2520845	0					
ANR	2520884	Argument	it -> name		2520845	1					
ANR	2520885	PtrMemberAccess	it -> name		2520845	0					
ANR	2520886	Identifier	it		2520845	0					
ANR	2520887	Identifier	name		2520845	1					
ANR	2520888	ElseStatement	else		2520845	0					
ANR	2520889	IfStatement	if ( format == 'q' )		2520845	0					
ANR	2520890	Condition	format == 'q'	1305:12:31051:31063	2520845	0	True				
ANR	2520891	EqualityExpression	format == 'q'		2520845	0		==			
ANR	2520892	Identifier	format		2520845	0					
ANR	2520893	PrimaryExpression	'q'		2520845	1					
ANR	2520894	CompoundStatement		8:27:146:146	2520845	1					
ANR	2520895	ExpressionStatement	"a -> cb_printf ( "" refs(%d)"" , r_list_length ( it -> refs ) )"	1306:2:31070:31122	2520845	0	True				
ANR	2520896	CallExpression	"a -> cb_printf ( "" refs(%d)"" , r_list_length ( it -> refs ) )"		2520845	0					
ANR	2520897	Callee	a -> cb_printf		2520845	0					
ANR	2520898	PtrMemberAccess	a -> cb_printf		2520845	0					
ANR	2520899	Identifier	a		2520845	0					
ANR	2520900	Identifier	cb_printf		2520845	1					
ANR	2520901	ArgumentList	""" refs(%d)"""		2520845	1					
ANR	2520902	Argument	""" refs(%d)"""		2520845	0					
ANR	2520903	PrimaryExpression	""" refs(%d)"""		2520845	0					
ANR	2520904	Argument	r_list_length ( it -> refs )		2520845	1					
ANR	2520905	CallExpression	r_list_length ( it -> refs )		2520845	0					
ANR	2520906	Callee	r_list_length		2520845	0					
ANR	2520907	Identifier	r_list_length		2520845	0					
ANR	2520908	ArgumentList	it -> refs		2520845	1					
ANR	2520909	Argument	it -> refs		2520845	0					
ANR	2520910	PtrMemberAccess	it -> refs		2520845	0					
ANR	2520911	Identifier	it		2520845	0					
ANR	2520912	Identifier	refs		2520845	1					
ANR	2520913	ReturnStatement	return ;	1307:2:31126:31132	2520845	1	True				
ANR	2520914	ElseStatement	else		2520845	0					
ANR	2520915	IfStatement	if ( format == 'j' )		2520845	0					
ANR	2520916	Condition	format == 'j'	1308:12:31146:31158	2520845	0	True				
ANR	2520917	EqualityExpression	format == 'j'		2520845	0		==			
ANR	2520918	Identifier	format		2520845	0					
ANR	2520919	PrimaryExpression	'j'		2520845	1					
ANR	2520920	CompoundStatement		11:27:241:241	2520845	1					
ANR	2520921	ExpressionStatement	"a -> cb_printf ( ""\\""refs\\"":["" )"	1309:2:31165:31192	2520845	0	True				
ANR	2520922	CallExpression	"a -> cb_printf ( ""\\""refs\\"":["" )"		2520845	0					
ANR	2520923	Callee	a -> cb_printf		2520845	0					
ANR	2520924	PtrMemberAccess	a -> cb_printf		2520845	0					
ANR	2520925	Identifier	a		2520845	0					
ANR	2520926	Identifier	cb_printf		2520845	1					
ANR	2520927	ArgumentList	"""\\""refs\\"":["""		2520845	1					
ANR	2520928	Argument	"""\\""refs\\"":["""		2520845	0					
ANR	2520929	PrimaryExpression	"""\\""refs\\"":["""		2520845	0					
ANR	2520930	ElseStatement	else		2520845	0					
ANR	2520931	CompoundStatement		13:8:282:282	2520845	0					
ANR	2520932	IfStatement	if ( it -> refs && ! r_list_empty ( it -> refs ) )		2520845	0					
ANR	2520933	Condition	it -> refs && ! r_list_empty ( it -> refs )	1311:6:31210:31245	2520845	0	True				
ANR	2520934	AndExpression	it -> refs && ! r_list_empty ( it -> refs )		2520845	0		&&			
ANR	2520935	PtrMemberAccess	it -> refs		2520845	0					
ANR	2520936	Identifier	it		2520845	0					
ANR	2520937	Identifier	refs		2520845	1					
ANR	2520938	UnaryOperationExpression	! r_list_empty ( it -> refs )		2520845	1					
ANR	2520939	UnaryOperator	!		2520845	0					
ANR	2520940	CallExpression	r_list_empty ( it -> refs )		2520845	1					
ANR	2520941	Callee	r_list_empty		2520845	0					
ANR	2520942	Identifier	r_list_empty		2520845	0					
ANR	2520943	ArgumentList	it -> refs		2520845	1					
ANR	2520944	Argument	it -> refs		2520845	0					
ANR	2520945	PtrMemberAccess	it -> refs		2520845	0					
ANR	2520946	Identifier	it		2520845	0					
ANR	2520947	Identifier	refs		2520845	1					
ANR	2520948	CompoundStatement		14:44:328:328	2520845	1					
ANR	2520949	ExpressionStatement	"a -> cb_printf ( ""  refs: "" )"	1312:3:31253:31278	2520845	0	True				
ANR	2520950	CallExpression	"a -> cb_printf ( ""  refs: "" )"		2520845	0					
ANR	2520951	Callee	a -> cb_printf		2520845	0					
ANR	2520952	PtrMemberAccess	a -> cb_printf		2520845	0					
ANR	2520953	Identifier	a		2520845	0					
ANR	2520954	Identifier	cb_printf		2520845	1					
ANR	2520955	ArgumentList	"""  refs: """		2520845	1					
ANR	2520956	Argument	"""  refs: """		2520845	0					
ANR	2520957	PrimaryExpression	"""  refs: """		2520845	0					
ANR	2520958	Statement	r_list_foreach	1316:1:31289:31302	2520845	4	True				
ANR	2520959	Statement	(	1316:16:31304:31304	2520845	5	True				
ANR	2520960	Statement	it	1316:17:31305:31306	2520845	6	True				
ANR	2520961	Statement	->	1316:19:31307:31308	2520845	7	True				
ANR	2520962	Statement	refs	1316:21:31309:31312	2520845	8	True				
ANR	2520963	Statement	","	1316:25:31313:31313	2520845	9	True				
ANR	2520964	Statement	iter	1316:27:31315:31318	2520845	10	True				
ANR	2520965	Statement	","	1316:31:31319:31319	2520845	11	True				
ANR	2520966	Statement	ref	1316:33:31321:31323	2520845	12	True				
ANR	2520967	Statement	)	1316:36:31324:31324	2520845	13	True				
ANR	2520968	CompoundStatement		19:38:406:406	2520845	14					
ANR	2520969	IfStatement	if ( i > 0 )		2520845	0					
ANR	2520970	Condition	i > 0	1317:6:31334:31338	2520845	0	True				
ANR	2520971	RelationalExpression	i > 0		2520845	0		>			
ANR	2520972	Identifier	i		2520845	0					
ANR	2520973	PrimaryExpression	0		2520845	1					
ANR	2520974	CompoundStatement		20:13:421:421	2520845	1					
ANR	2520975	IfStatement	if ( format == '*' )		2520845	0					
ANR	2520976	Condition	format == '*'	1318:7:31350:31362	2520845	0	True				
ANR	2520977	EqualityExpression	format == '*'		2520845	0		==			
ANR	2520978	Identifier	format		2520845	0					
ANR	2520979	PrimaryExpression	'*'		2520845	1					
ANR	2520980	CompoundStatement		21:22:445:445	2520845	1					
ANR	2520981	ExpressionStatement	"a -> cb_printf ( "" "" )"	1319:4:31371:31389	2520845	0	True				
ANR	2520982	CallExpression	"a -> cb_printf ( "" "" )"		2520845	0					
ANR	2520983	Callee	a -> cb_printf		2520845	0					
ANR	2520984	PtrMemberAccess	a -> cb_printf		2520845	0					
ANR	2520985	Identifier	a		2520845	0					
ANR	2520986	Identifier	cb_printf		2520845	1					
ANR	2520987	ArgumentList	""" """		2520845	1					
ANR	2520988	Argument	""" """		2520845	0					
ANR	2520989	PrimaryExpression	""" """		2520845	0					
ANR	2520990	ElseStatement	else		2520845	0					
ANR	2520991	IfStatement	if ( format == 'j' )		2520845	0					
ANR	2520992	Condition	format == 'j'	1320:14:31405:31417	2520845	0	True				
ANR	2520993	EqualityExpression	format == 'j'		2520845	0		==			
ANR	2520994	Identifier	format		2520845	0					
ANR	2520995	PrimaryExpression	'j'		2520845	1					
ANR	2520996	CompoundStatement		23:29:500:500	2520845	1					
ANR	2520997	ExpressionStatement	"a -> cb_printf ( "","" )"	1321:4:31426:31444	2520845	0	True				
ANR	2520998	CallExpression	"a -> cb_printf ( "","" )"		2520845	0					
ANR	2520999	Callee	a -> cb_printf		2520845	0					
ANR	2521000	PtrMemberAccess	a -> cb_printf		2520845	0					
ANR	2521001	Identifier	a		2520845	0					
ANR	2521002	Identifier	cb_printf		2520845	1					
ANR	2521003	ArgumentList	""","""		2520845	1					
ANR	2521004	Argument	""","""		2520845	0					
ANR	2521005	PrimaryExpression	""","""		2520845	0					
ANR	2521006	ElseStatement	else		2520845	0					
ANR	2521007	CompoundStatement		25:10:536:536	2520845	0					
ANR	2521008	ExpressionStatement	"a -> cb_printf ( "", "" )"	1323:4:31462:31481	2520845	0	True				
ANR	2521009	CallExpression	"a -> cb_printf ( "", "" )"		2520845	0					
ANR	2521010	Callee	a -> cb_printf		2520845	0					
ANR	2521011	PtrMemberAccess	a -> cb_printf		2520845	0					
ANR	2521012	Identifier	a		2520845	0					
ANR	2521013	Identifier	cb_printf		2520845	1					
ANR	2521014	ArgumentList	""", """		2520845	1					
ANR	2521015	Argument	""", """		2520845	0					
ANR	2521016	PrimaryExpression	""", """		2520845	0					
ANR	2521017	IfStatement	if ( format == 'j' )		2520845	1					
ANR	2521018	Condition	format == 'j'	1326:6:31498:31510	2520845	0	True				
ANR	2521019	EqualityExpression	format == 'j'		2520845	0		==			
ANR	2521020	Identifier	format		2520845	0					
ANR	2521021	PrimaryExpression	'j'		2520845	1					
ANR	2521022	CompoundStatement		29:21:593:593	2520845	1					
ANR	2521023	ExpressionStatement	"a -> cb_printf ( ""\\""%s\\"""" , ref )"	1327:3:31518:31546	2520845	0	True				
ANR	2521024	CallExpression	"a -> cb_printf ( ""\\""%s\\"""" , ref )"		2520845	0					
ANR	2521025	Callee	a -> cb_printf		2520845	0					
ANR	2521026	PtrMemberAccess	a -> cb_printf		2520845	0					
ANR	2521027	Identifier	a		2520845	0					
ANR	2521028	Identifier	cb_printf		2520845	1					
ANR	2521029	ArgumentList	"""\\""%s\\"""""		2520845	1					
ANR	2521030	Argument	"""\\""%s\\"""""		2520845	0					
ANR	2521031	PrimaryExpression	"""\\""%s\\"""""		2520845	0					
ANR	2521032	Argument	ref		2520845	1					
ANR	2521033	Identifier	ref		2520845	0					
ANR	2521034	ElseStatement	else		2520845	0					
ANR	2521035	CompoundStatement		31:9:637:637	2520845	0					
ANR	2521036	ExpressionStatement	"a -> cb_printf ( ""%s"" , ref )"	1329:3:31562:31586	2520845	0	True				
ANR	2521037	CallExpression	"a -> cb_printf ( ""%s"" , ref )"		2520845	0					
ANR	2521038	Callee	a -> cb_printf		2520845	0					
ANR	2521039	PtrMemberAccess	a -> cb_printf		2520845	0					
ANR	2521040	Identifier	a		2520845	0					
ANR	2521041	Identifier	cb_printf		2520845	1					
ANR	2521042	ArgumentList	"""%s"""		2520845	1					
ANR	2521043	Argument	"""%s"""		2520845	0					
ANR	2521044	PrimaryExpression	"""%s"""		2520845	0					
ANR	2521045	Argument	ref		2520845	1					
ANR	2521046	Identifier	ref		2520845	0					
ANR	2521047	ExpressionStatement	i ++	1331:2:31594:31597	2520845	2	True				
ANR	2521048	PostIncDecOperationExpression	i ++		2520845	0					
ANR	2521049	Identifier	i		2520845	0					
ANR	2521050	IncDec	++		2520845	1					
ANR	2521051	IfStatement	if ( format == 'j' )		2520845	15					
ANR	2521052	Condition	format == 'j'	1334:5:31608:31620	2520845	0	True				
ANR	2521053	EqualityExpression	format == 'j'		2520845	0		==			
ANR	2521054	Identifier	format		2520845	0					
ANR	2521055	PrimaryExpression	'j'		2520845	1					
ANR	2521056	CompoundStatement		37:20:703:703	2520845	1					
ANR	2521057	ExpressionStatement	"a -> cb_printf ( ""],"" )"	1335:2:31627:31646	2520845	0	True				
ANR	2521058	CallExpression	"a -> cb_printf ( ""],"" )"		2520845	0					
ANR	2521059	Callee	a -> cb_printf		2520845	0					
ANR	2521060	PtrMemberAccess	a -> cb_printf		2520845	0					
ANR	2521061	Identifier	a		2520845	0					
ANR	2521062	Identifier	cb_printf		2520845	1					
ANR	2521063	ArgumentList	"""],"""		2520845	1					
ANR	2521064	Argument	"""],"""		2520845	0					
ANR	2521065	PrimaryExpression	"""],"""		2520845	0					
ANR	2521066	ElseStatement	else		2520845	0					
ANR	2521067	CompoundStatement		39:8:736:736	2520845	0					
ANR	2521068	ExpressionStatement	"a -> cb_printf ( ""\\n"" )"	1337:2:31660:31679	2520845	0	True				
ANR	2521069	CallExpression	"a -> cb_printf ( ""\\n"" )"		2520845	0					
ANR	2521070	Callee	a -> cb_printf		2520845	0					
ANR	2521071	PtrMemberAccess	a -> cb_printf		2520845	0					
ANR	2521072	Identifier	a		2520845	0					
ANR	2521073	Identifier	cb_printf		2520845	1					
ANR	2521074	ArgumentList	"""\\n"""		2520845	1					
ANR	2521075	Argument	"""\\n"""		2520845	0					
ANR	2521076	PrimaryExpression	"""\\n"""		2520845	0					
ANR	2521077	ReturnType	static void		2520845	1					
ANR	2521078	Identifier	listRefs		2520845	2					
ANR	2521079	ParameterList	"RAnal * a , RSignItem * it , int format"		2520845	3					
ANR	2521080	Parameter	RAnal * a	1298:21:30882:30889	2520845	0	True				
ANR	2521081	ParameterType	RAnal *		2520845	0					
ANR	2521082	Identifier	a		2520845	1					
ANR	2521083	Parameter	RSignItem * it	1298:31:30892:30904	2520845	1	True				
ANR	2521084	ParameterType	RSignItem *		2520845	0					
ANR	2521085	Identifier	it		2520845	1					
ANR	2521086	Parameter	int format	1298:46:30907:30916	2520845	2	True				
ANR	2521087	ParameterType	int		2520845	0					
ANR	2521088	Identifier	format		2520845	1					
ANR	2521089	CFGEntryNode	ENTRY		2520845		True				
ANR	2521090	CFGExitNode	EXIT		2520845		True				
ANR	2521091	Symbol	a		2520845						
ANR	2521092	Symbol	ref		2520845						
ANR	2521093	Symbol	* it		2520845						
ANR	2521094	Symbol	NULL		2520845						
ANR	2521095	Symbol	it -> name		2520845						
ANR	2521096	Symbol	format		2520845						
ANR	2521097	Symbol	iter		2520845						
ANR	2521098	Symbol	i		2520845						
ANR	2521099	Symbol	r_list_empty		2520845						
ANR	2521100	Symbol	it		2520845						
ANR	2521101	Symbol	it -> refs		2520845						
ANR	2521102	Symbol	r_list_length		2520845						
ANR	2521103	Function	listHash	1341:0:31687:32285							
ANR	2521104	FunctionDef	"listHash (RAnal * a , RSignItem * it , int format)"		2521103	0					
ANR	2521105	CompoundStatement		1341:58:31745:32285	2521103	0					
ANR	2521106	IfStatement	if ( ! it -> hash )		2521103	0					
ANR	2521107	Condition	! it -> hash	1342:5:31752:31760	2521103	0	True				
ANR	2521108	UnaryOperationExpression	! it -> hash		2521103	0					
ANR	2521109	UnaryOperator	!		2521103	0					
ANR	2521110	PtrMemberAccess	it -> hash		2521103	1					
ANR	2521111	Identifier	it		2521103	0					
ANR	2521112	Identifier	hash		2521103	1					
ANR	2521113	CompoundStatement		2:16:17:17	2521103	1					
ANR	2521114	ReturnStatement	return ;	1343:2:31767:31773	2521103	0	True				
ANR	2521115	SwitchStatement	switch ( format )		2521103	1					
ANR	2521116	Condition	format	1345:9:31787:31792	2521103	0	True				
ANR	2521117	Identifier	format		2521103	0					
ANR	2521118	CompoundStatement		5:17:49:49	2521103	1					
ANR	2521119	Label	case 'q' :	1346:1:31798:31806	2521103	0	True				
ANR	2521120	IfStatement	if ( it -> hash -> bbhash )		2521103	1					
ANR	2521121	Condition	it -> hash -> bbhash	1347:6:31814:31829	2521103	0	True				
ANR	2521122	PtrMemberAccess	it -> hash -> bbhash		2521103	0					
ANR	2521123	PtrMemberAccess	it -> hash		2521103	0					
ANR	2521124	Identifier	it		2521103	0					
ANR	2521125	Identifier	hash		2521103	1					
ANR	2521126	Identifier	bbhash		2521103	1					
ANR	2521127	CompoundStatement		7:24:86:86	2521103	1					
ANR	2521128	ExpressionStatement	"a -> cb_printf ( "" h(%08x)"" , r_str_hash ( it -> hash -> bbhash ) )"	1348:3:31837:31892	2521103	0	True				
ANR	2521129	CallExpression	"a -> cb_printf ( "" h(%08x)"" , r_str_hash ( it -> hash -> bbhash ) )"		2521103	0					
ANR	2521130	Callee	a -> cb_printf		2521103	0					
ANR	2521131	PtrMemberAccess	a -> cb_printf		2521103	0					
ANR	2521132	Identifier	a		2521103	0					
ANR	2521133	Identifier	cb_printf		2521103	1					
ANR	2521134	ArgumentList	""" h(%08x)"""		2521103	1					
ANR	2521135	Argument	""" h(%08x)"""		2521103	0					
ANR	2521136	PrimaryExpression	""" h(%08x)"""		2521103	0					
ANR	2521137	Argument	r_str_hash ( it -> hash -> bbhash )		2521103	1					
ANR	2521138	CallExpression	r_str_hash ( it -> hash -> bbhash )		2521103	0					
ANR	2521139	Callee	r_str_hash		2521103	0					
ANR	2521140	Identifier	r_str_hash		2521103	0					
ANR	2521141	ArgumentList	it -> hash -> bbhash		2521103	1					
ANR	2521142	Argument	it -> hash -> bbhash		2521103	0					
ANR	2521143	PtrMemberAccess	it -> hash -> bbhash		2521103	0					
ANR	2521144	PtrMemberAccess	it -> hash		2521103	0					
ANR	2521145	Identifier	it		2521103	0					
ANR	2521146	Identifier	hash		2521103	1					
ANR	2521147	Identifier	bbhash		2521103	1					
ANR	2521148	BreakStatement	break ;	1350:2:31900:31905	2521103	2	True				
ANR	2521149	Label	case '*' :	1351:1:31908:31916	2521103	3	True				
ANR	2521150	IfStatement	if ( it -> hash -> bbhash )		2521103	4					
ANR	2521151	Condition	it -> hash -> bbhash	1352:6:31924:31939	2521103	0	True				
ANR	2521152	PtrMemberAccess	it -> hash -> bbhash		2521103	0					
ANR	2521153	PtrMemberAccess	it -> hash		2521103	0					
ANR	2521154	Identifier	it		2521103	0					
ANR	2521155	Identifier	hash		2521103	1					
ANR	2521156	Identifier	bbhash		2521103	1					
ANR	2521157	CompoundStatement		12:24:196:196	2521103	1					
ANR	2521158	ExpressionStatement	"a -> cb_printf ( ""za %s h %s\\n"" , it -> name , it -> hash -> bbhash )"	1353:3:31947:32004	2521103	0	True				
ANR	2521159	CallExpression	"a -> cb_printf ( ""za %s h %s\\n"" , it -> name , it -> hash -> bbhash )"		2521103	0					
ANR	2521160	Callee	a -> cb_printf		2521103	0					
ANR	2521161	PtrMemberAccess	a -> cb_printf		2521103	0					
ANR	2521162	Identifier	a		2521103	0					
ANR	2521163	Identifier	cb_printf		2521103	1					
ANR	2521164	ArgumentList	"""za %s h %s\\n"""		2521103	1					
ANR	2521165	Argument	"""za %s h %s\\n"""		2521103	0					
ANR	2521166	PrimaryExpression	"""za %s h %s\\n"""		2521103	0					
ANR	2521167	Argument	it -> name		2521103	1					
ANR	2521168	PtrMemberAccess	it -> name		2521103	0					
ANR	2521169	Identifier	it		2521103	0					
ANR	2521170	Identifier	name		2521103	1					
ANR	2521171	Argument	it -> hash -> bbhash		2521103	2					
ANR	2521172	PtrMemberAccess	it -> hash -> bbhash		2521103	0					
ANR	2521173	PtrMemberAccess	it -> hash		2521103	0					
ANR	2521174	Identifier	it		2521103	0					
ANR	2521175	Identifier	hash		2521103	1					
ANR	2521176	Identifier	bbhash		2521103	1					
ANR	2521177	BreakStatement	break ;	1355:2:32012:32017	2521103	5	True				
ANR	2521178	Label	case 'j' :	1356:1:32020:32028	2521103	6	True				
ANR	2521179	ExpressionStatement	"a -> cb_printf ( ""\\""hash\\"":{"" )"	1357:2:32032:32059	2521103	7	True				
ANR	2521180	CallExpression	"a -> cb_printf ( ""\\""hash\\"":{"" )"		2521103	0					
ANR	2521181	Callee	a -> cb_printf		2521103	0					
ANR	2521182	PtrMemberAccess	a -> cb_printf		2521103	0					
ANR	2521183	Identifier	a		2521103	0					
ANR	2521184	Identifier	cb_printf		2521103	1					
ANR	2521185	ArgumentList	"""\\""hash\\"":{"""		2521103	1					
ANR	2521186	Argument	"""\\""hash\\"":{"""		2521103	0					
ANR	2521187	PrimaryExpression	"""\\""hash\\"":{"""		2521103	0					
ANR	2521188	IfStatement	if ( it -> hash -> bbhash )		2521103	8					
ANR	2521189	Condition	it -> hash -> bbhash	1358:6:32067:32082	2521103	0	True				
ANR	2521190	PtrMemberAccess	it -> hash -> bbhash		2521103	0					
ANR	2521191	PtrMemberAccess	it -> hash		2521103	0					
ANR	2521192	Identifier	it		2521103	0					
ANR	2521193	Identifier	hash		2521103	1					
ANR	2521194	Identifier	bbhash		2521103	1					
ANR	2521195	CompoundStatement		18:24:339:339	2521103	1					
ANR	2521196	ExpressionStatement	"a -> cb_printf ( ""\\""bbhash\\"":\\""%s\\"""" , it -> hash -> bbhash )"	1359:3:32090:32142	2521103	0	True				
ANR	2521197	CallExpression	"a -> cb_printf ( ""\\""bbhash\\"":\\""%s\\"""" , it -> hash -> bbhash )"		2521103	0					
ANR	2521198	Callee	a -> cb_printf		2521103	0					
ANR	2521199	PtrMemberAccess	a -> cb_printf		2521103	0					
ANR	2521200	Identifier	a		2521103	0					
ANR	2521201	Identifier	cb_printf		2521103	1					
ANR	2521202	ArgumentList	"""\\""bbhash\\"":\\""%s\\"""""		2521103	1					
ANR	2521203	Argument	"""\\""bbhash\\"":\\""%s\\"""""		2521103	0					
ANR	2521204	PrimaryExpression	"""\\""bbhash\\"":\\""%s\\"""""		2521103	0					
ANR	2521205	Argument	it -> hash -> bbhash		2521103	1					
ANR	2521206	PtrMemberAccess	it -> hash -> bbhash		2521103	0					
ANR	2521207	PtrMemberAccess	it -> hash		2521103	0					
ANR	2521208	Identifier	it		2521103	0					
ANR	2521209	Identifier	hash		2521103	1					
ANR	2521210	Identifier	bbhash		2521103	1					
ANR	2521211	ExpressionStatement	"a -> cb_printf ( ""}"" )"	1361:2:32150:32168	2521103	9	True				
ANR	2521212	CallExpression	"a -> cb_printf ( ""}"" )"		2521103	0					
ANR	2521213	Callee	a -> cb_printf		2521103	0					
ANR	2521214	PtrMemberAccess	a -> cb_printf		2521103	0					
ANR	2521215	Identifier	a		2521103	0					
ANR	2521216	Identifier	cb_printf		2521103	1					
ANR	2521217	ArgumentList	"""}"""		2521103	1					
ANR	2521218	Argument	"""}"""		2521103	0					
ANR	2521219	PrimaryExpression	"""}"""		2521103	0					
ANR	2521220	BreakStatement	break ;	1362:2:32172:32177	2521103	10	True				
ANR	2521221	Label	default :	1363:1:32180:32187	2521103	11	True				
ANR	2521222	Identifier	default		2521103	0					
ANR	2521223	IfStatement	if ( it -> hash -> bbhash )		2521103	12					
ANR	2521224	Condition	it -> hash -> bbhash	1364:6:32195:32210	2521103	0	True				
ANR	2521225	PtrMemberAccess	it -> hash -> bbhash		2521103	0					
ANR	2521226	PtrMemberAccess	it -> hash		2521103	0					
ANR	2521227	Identifier	it		2521103	0					
ANR	2521228	Identifier	hash		2521103	1					
ANR	2521229	Identifier	bbhash		2521103	1					
ANR	2521230	CompoundStatement		24:24:467:467	2521103	1					
ANR	2521231	ExpressionStatement	"a -> cb_printf ( ""  bbhash: %s\\n"" , it -> hash -> bbhash )"	1365:3:32218:32267	2521103	0	True				
ANR	2521232	CallExpression	"a -> cb_printf ( ""  bbhash: %s\\n"" , it -> hash -> bbhash )"		2521103	0					
ANR	2521233	Callee	a -> cb_printf		2521103	0					
ANR	2521234	PtrMemberAccess	a -> cb_printf		2521103	0					
ANR	2521235	Identifier	a		2521103	0					
ANR	2521236	Identifier	cb_printf		2521103	1					
ANR	2521237	ArgumentList	"""  bbhash: %s\\n"""		2521103	1					
ANR	2521238	Argument	"""  bbhash: %s\\n"""		2521103	0					
ANR	2521239	PrimaryExpression	"""  bbhash: %s\\n"""		2521103	0					
ANR	2521240	Argument	it -> hash -> bbhash		2521103	1					
ANR	2521241	PtrMemberAccess	it -> hash -> bbhash		2521103	0					
ANR	2521242	PtrMemberAccess	it -> hash		2521103	0					
ANR	2521243	Identifier	it		2521103	0					
ANR	2521244	Identifier	hash		2521103	1					
ANR	2521245	Identifier	bbhash		2521103	1					
ANR	2521246	BreakStatement	break ;	1367:2:32275:32280	2521103	13	True				
ANR	2521247	ReturnType	static void		2521103	1					
ANR	2521248	Identifier	listHash		2521103	2					
ANR	2521249	ParameterList	"RAnal * a , RSignItem * it , int format"		2521103	3					
ANR	2521250	Parameter	RAnal * a	1341:21:31708:31715	2521103	0	True				
ANR	2521251	ParameterType	RAnal *		2521103	0					
ANR	2521252	Identifier	a		2521103	1					
ANR	2521253	Parameter	RSignItem * it	1341:31:31718:31730	2521103	1	True				
ANR	2521254	ParameterType	RSignItem *		2521103	0					
ANR	2521255	Identifier	it		2521103	1					
ANR	2521256	Parameter	int format	1341:46:31733:31742	2521103	2	True				
ANR	2521257	ParameterType	int		2521103	0					
ANR	2521258	Identifier	format		2521103	1					
ANR	2521259	CFGEntryNode	ENTRY		2521103		True				
ANR	2521260	CFGExitNode	EXIT		2521103		True				
ANR	2521261	Symbol	a		2521103						
ANR	2521262	Symbol	* it		2521103						
ANR	2521263	Symbol	* it -> hash		2521103						
ANR	2521264	Symbol	* * it		2521103						
ANR	2521265	Symbol	it -> hash		2521103						
ANR	2521266	Symbol	it -> name		2521103						
ANR	2521267	Symbol	format		2521103						
ANR	2521268	Symbol	it		2521103						
ANR	2521269	Symbol	r_str_hash		2521103						
ANR	2521270	Symbol	it -> hash -> bbhash		2521103						
ANR	2521271	Function	listCB	1371:0:32288:34738							
ANR	2521272	FunctionDef	"listCB (void * user , const char * k , const char * v)"		2521271	0					
ANR	2521273	CompoundStatement		1371:60:32348:34738	2521271	0					
ANR	2521274	IdentifierDeclStatement	struct ctxListCB * ctx = ( struct ctxListCB * ) user ;	1372:1:32351:32400	2521271	0	True				
ANR	2521275	IdentifierDecl	* ctx = ( struct ctxListCB * ) user		2521271	0					
ANR	2521276	IdentifierDeclType	struct ctxListCB *		2521271	0					
ANR	2521277	Identifier	ctx		2521271	1					
ANR	2521278	AssignmentExpression	* ctx = ( struct ctxListCB * ) user		2521271	2		=			
ANR	2521279	Identifier	ctx		2521271	0					
ANR	2521280	CastExpression	( struct ctxListCB * ) user		2521271	1					
ANR	2521281	CastTarget	struct ctxListCB *		2521271	0					
ANR	2521282	Identifier	user		2521271	1					
ANR	2521283	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	1373:1:32403:32437	2521271	1	True				
ANR	2521284	IdentifierDecl	* it = r_sign_item_new ( )		2521271	0					
ANR	2521285	IdentifierDeclType	RSignItem *		2521271	0					
ANR	2521286	Identifier	it		2521271	1					
ANR	2521287	AssignmentExpression	* it = r_sign_item_new ( )		2521271	2		=			
ANR	2521288	Identifier	it		2521271	0					
ANR	2521289	CallExpression	r_sign_item_new ( )		2521271	1					
ANR	2521290	Callee	r_sign_item_new		2521271	0					
ANR	2521291	Identifier	r_sign_item_new		2521271	0					
ANR	2521292	ArgumentList			2521271	1					
ANR	2521293	IdentifierDeclStatement	RAnal * a = ctx -> anal ;	1374:1:32440:32460	2521271	2	True				
ANR	2521294	IdentifierDecl	* a = ctx -> anal		2521271	0					
ANR	2521295	IdentifierDeclType	RAnal *		2521271	0					
ANR	2521296	Identifier	a		2521271	1					
ANR	2521297	AssignmentExpression	* a = ctx -> anal		2521271	2		=			
ANR	2521298	Identifier	a		2521271	0					
ANR	2521299	PtrMemberAccess	ctx -> anal		2521271	1					
ANR	2521300	Identifier	ctx		2521271	0					
ANR	2521301	Identifier	anal		2521271	1					
ANR	2521302	IfStatement	"if ( ! r_sign_deserialize ( a , it , k , v ) )"		2521271	3					
ANR	2521303	Condition	"! r_sign_deserialize ( a , it , k , v )"	1376:5:32468:32500	2521271	0	True				
ANR	2521304	UnaryOperationExpression	"! r_sign_deserialize ( a , it , k , v )"		2521271	0					
ANR	2521305	UnaryOperator	!		2521271	0					
ANR	2521306	CallExpression	"r_sign_deserialize ( a , it , k , v )"		2521271	1					
ANR	2521307	Callee	r_sign_deserialize		2521271	0					
ANR	2521308	Identifier	r_sign_deserialize		2521271	0					
ANR	2521309	ArgumentList	a		2521271	1					
ANR	2521310	Argument	a		2521271	0					
ANR	2521311	Identifier	a		2521271	0					
ANR	2521312	Argument	it		2521271	1					
ANR	2521313	Identifier	it		2521271	0					
ANR	2521314	Argument	k		2521271	2					
ANR	2521315	Identifier	k		2521271	0					
ANR	2521316	Argument	v		2521271	3					
ANR	2521317	Identifier	v		2521271	0					
ANR	2521318	CompoundStatement		6:40:154:154	2521271	1					
ANR	2521319	ExpressionStatement	"eprintf ( ""error: cannot deserialize zign\\n"" )"	1377:2:32507:32551	2521271	0	True				
ANR	2521320	CallExpression	"eprintf ( ""error: cannot deserialize zign\\n"" )"		2521271	0					
ANR	2521321	Callee	eprintf		2521271	0					
ANR	2521322	Identifier	eprintf		2521271	0					
ANR	2521323	ArgumentList	"""error: cannot deserialize zign\\n"""		2521271	1					
ANR	2521324	Argument	"""error: cannot deserialize zign\\n"""		2521271	0					
ANR	2521325	PrimaryExpression	"""error: cannot deserialize zign\\n"""		2521271	0					
ANR	2521326	GotoStatement	goto out ;	1378:2:32555:32563	2521271	1	True				
ANR	2521327	Identifier	out		2521271	0					
ANR	2521328	IdentifierDeclStatement	RSpace * cur = r_spaces_current ( & a -> zign_spaces ) ;	1381:1:32570:32618	2521271	4	True				
ANR	2521329	IdentifierDecl	* cur = r_spaces_current ( & a -> zign_spaces )		2521271	0					
ANR	2521330	IdentifierDeclType	RSpace *		2521271	0					
ANR	2521331	Identifier	cur		2521271	1					
ANR	2521332	AssignmentExpression	* cur = r_spaces_current ( & a -> zign_spaces )		2521271	2		=			
ANR	2521333	Identifier	cur		2521271	0					
ANR	2521334	CallExpression	r_spaces_current ( & a -> zign_spaces )		2521271	1					
ANR	2521335	Callee	r_spaces_current		2521271	0					
ANR	2521336	Identifier	r_spaces_current		2521271	0					
ANR	2521337	ArgumentList	& a -> zign_spaces		2521271	1					
ANR	2521338	Argument	& a -> zign_spaces		2521271	0					
ANR	2521339	UnaryOperationExpression	& a -> zign_spaces		2521271	0					
ANR	2521340	UnaryOperator	&		2521271	0					
ANR	2521341	PtrMemberAccess	a -> zign_spaces		2521271	1					
ANR	2521342	Identifier	a		2521271	0					
ANR	2521343	Identifier	zign_spaces		2521271	1					
ANR	2521344	IfStatement	if ( cur != it -> space && cur )		2521271	5					
ANR	2521345	Condition	cur != it -> space && cur	1382:5:32625:32647	2521271	0	True				
ANR	2521346	AndExpression	cur != it -> space && cur		2521271	0		&&			
ANR	2521347	EqualityExpression	cur != it -> space		2521271	0		!=			
ANR	2521348	Identifier	cur		2521271	0					
ANR	2521349	PtrMemberAccess	it -> space		2521271	1					
ANR	2521350	Identifier	it		2521271	0					
ANR	2521351	Identifier	space		2521271	1					
ANR	2521352	Identifier	cur		2521271	1					
ANR	2521353	CompoundStatement		12:30:301:301	2521271	1					
ANR	2521354	GotoStatement	goto out ;	1383:2:32654:32662	2521271	0	True				
ANR	2521355	Identifier	out		2521271	0					
ANR	2521356	IfStatement	if ( ctx -> format == 'j' )		2521271	6					
ANR	2521357	Condition	ctx -> format == 'j'	1387:5:32688:32705	2521271	0	True				
ANR	2521358	EqualityExpression	ctx -> format == 'j'		2521271	0		==			
ANR	2521359	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521360	Identifier	ctx		2521271	0					
ANR	2521361	Identifier	format		2521271	1					
ANR	2521362	PrimaryExpression	'j'		2521271	1					
ANR	2521363	CompoundStatement		17:25:359:359	2521271	1					
ANR	2521364	IfStatement	if ( ctx -> idx > 0 )		2521271	0					
ANR	2521365	Condition	ctx -> idx > 0	1388:6:32716:32727	2521271	0	True				
ANR	2521366	RelationalExpression	ctx -> idx > 0		2521271	0		>			
ANR	2521367	PtrMemberAccess	ctx -> idx		2521271	0					
ANR	2521368	Identifier	ctx		2521271	0					
ANR	2521369	Identifier	idx		2521271	1					
ANR	2521370	PrimaryExpression	0		2521271	1					
ANR	2521371	CompoundStatement		18:20:381:381	2521271	1					
ANR	2521372	ExpressionStatement	"a -> cb_printf ( "","" )"	1389:3:32735:32753	2521271	0	True				
ANR	2521373	CallExpression	"a -> cb_printf ( "","" )"		2521271	0					
ANR	2521374	Callee	a -> cb_printf		2521271	0					
ANR	2521375	PtrMemberAccess	a -> cb_printf		2521271	0					
ANR	2521376	Identifier	a		2521271	0					
ANR	2521377	Identifier	cb_printf		2521271	1					
ANR	2521378	ArgumentList	""","""		2521271	1					
ANR	2521379	Argument	""","""		2521271	0					
ANR	2521380	PrimaryExpression	""","""		2521271	0					
ANR	2521381	ExpressionStatement	"a -> cb_printf ( ""{"" )"	1391:2:32761:32779	2521271	1	True				
ANR	2521382	CallExpression	"a -> cb_printf ( ""{"" )"		2521271	0					
ANR	2521383	Callee	a -> cb_printf		2521271	0					
ANR	2521384	PtrMemberAccess	a -> cb_printf		2521271	0					
ANR	2521385	Identifier	a		2521271	0					
ANR	2521386	Identifier	cb_printf		2521271	1					
ANR	2521387	ArgumentList	"""{"""		2521271	1					
ANR	2521388	Argument	"""{"""		2521271	0					
ANR	2521389	PrimaryExpression	"""{"""		2521271	0					
ANR	2521390	IfStatement	if ( ctx -> format == '*' )		2521271	7					
ANR	2521391	Condition	ctx -> format == '*'	1395:5:32840:32857	2521271	0	True				
ANR	2521392	EqualityExpression	ctx -> format == '*'		2521271	0		==			
ANR	2521393	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521394	Identifier	ctx		2521271	0					
ANR	2521395	Identifier	format		2521271	1					
ANR	2521396	PrimaryExpression	'*'		2521271	1					
ANR	2521397	CompoundStatement		25:25:511:511	2521271	1					
ANR	2521398	IfStatement	if ( it -> space )		2521271	0					
ANR	2521399	Condition	it -> space	1396:6:32868:32876	2521271	0	True				
ANR	2521400	PtrMemberAccess	it -> space		2521271	0					
ANR	2521401	Identifier	it		2521271	0					
ANR	2521402	Identifier	space		2521271	1					
ANR	2521403	CompoundStatement		26:17:530:530	2521271	1					
ANR	2521404	ExpressionStatement	"a -> cb_printf ( ""zs %s\\n"" , it -> space -> name )"	1397:3:32884:32925	2521271	0	True				
ANR	2521405	CallExpression	"a -> cb_printf ( ""zs %s\\n"" , it -> space -> name )"		2521271	0					
ANR	2521406	Callee	a -> cb_printf		2521271	0					
ANR	2521407	PtrMemberAccess	a -> cb_printf		2521271	0					
ANR	2521408	Identifier	a		2521271	0					
ANR	2521409	Identifier	cb_printf		2521271	1					
ANR	2521410	ArgumentList	"""zs %s\\n"""		2521271	1					
ANR	2521411	Argument	"""zs %s\\n"""		2521271	0					
ANR	2521412	PrimaryExpression	"""zs %s\\n"""		2521271	0					
ANR	2521413	Argument	it -> space -> name		2521271	1					
ANR	2521414	PtrMemberAccess	it -> space -> name		2521271	0					
ANR	2521415	PtrMemberAccess	it -> space		2521271	0					
ANR	2521416	Identifier	it		2521271	0					
ANR	2521417	Identifier	space		2521271	1					
ANR	2521418	Identifier	name		2521271	1					
ANR	2521419	ElseStatement	else		2521271	0					
ANR	2521420	CompoundStatement		28:9:587:587	2521271	0					
ANR	2521421	ExpressionStatement	"a -> cb_printf ( ""zs *\\n"" )"	1399:3:32941:32964	2521271	0	True				
ANR	2521422	CallExpression	"a -> cb_printf ( ""zs *\\n"" )"		2521271	0					
ANR	2521423	Callee	a -> cb_printf		2521271	0					
ANR	2521424	PtrMemberAccess	a -> cb_printf		2521271	0					
ANR	2521425	Identifier	a		2521271	0					
ANR	2521426	Identifier	cb_printf		2521271	1					
ANR	2521427	ArgumentList	"""zs *\\n"""		2521271	1					
ANR	2521428	Argument	"""zs *\\n"""		2521271	0					
ANR	2521429	PrimaryExpression	"""zs *\\n"""		2521271	0					
ANR	2521430	ElseStatement	else		2521271	0					
ANR	2521431	IfStatement	if ( ctx -> format == 'q' )		2521271	0					
ANR	2521432	Condition	ctx -> format == 'q'	1401:12:32982:32999	2521271	0	True				
ANR	2521433	EqualityExpression	ctx -> format == 'q'		2521271	0		==			
ANR	2521434	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521435	Identifier	ctx		2521271	0					
ANR	2521436	Identifier	format		2521271	1					
ANR	2521437	PrimaryExpression	'q'		2521271	1					
ANR	2521438	CompoundStatement		33:2:703:759	2521271	1					
ANR	2521439	Statement	a	1402:2:33006:33006	2521271	0	True				
ANR	2521440	Statement	->	1402:3:33007:33008	2521271	1	True				
ANR	2521441	Statement	cb_printf	1402:5:33009:33017	2521271	2	True				
ANR	2521442	Statement	(	1402:15:33019:33019	2521271	3	True				
ANR	2521443	Statement	"""0x%08"""	1402:16:33020:33026	2521271	4	True				
ANR	2521444	Statement	PFMT64x	1402:23:33027:33033	2521271	5	True				
ANR	2521445	Statement	""" """	1402:30:33034:33036	2521271	6	True				
ANR	2521446	Statement	","	1402:33:33037:33037	2521271	7	True				
ANR	2521447	Statement	it	1402:35:33039:33040	2521271	8	True				
ANR	2521448	Statement	->	1402:37:33041:33042	2521271	9	True				
ANR	2521449	Statement	addr	1402:39:33043:33046	2521271	10	True				
ANR	2521450	Statement	)	1402:43:33047:33047	2521271	11	True				
ANR	2521451	ExpressionStatement		1402:44:33048:33048	2521271	12	True				
ANR	2521452	IdentifierDeclStatement	"const char * pad = r_str_pad ( ' ' , 30 - strlen ( it -> name ) ) ;"	1403:2:33052:33108	2521271	13	True				
ANR	2521453	IdentifierDecl	"* pad = r_str_pad ( ' ' , 30 - strlen ( it -> name ) )"		2521271	0					
ANR	2521454	IdentifierDeclType	const char *		2521271	0					
ANR	2521455	Identifier	pad		2521271	1					
ANR	2521456	AssignmentExpression	"* pad = r_str_pad ( ' ' , 30 - strlen ( it -> name ) )"		2521271	2		=			
ANR	2521457	Identifier	pad		2521271	0					
ANR	2521458	CallExpression	"r_str_pad ( ' ' , 30 - strlen ( it -> name ) )"		2521271	1					
ANR	2521459	Callee	r_str_pad		2521271	0					
ANR	2521460	Identifier	r_str_pad		2521271	0					
ANR	2521461	ArgumentList	' '		2521271	1					
ANR	2521462	Argument	' '		2521271	0					
ANR	2521463	PrimaryExpression	' '		2521271	0					
ANR	2521464	Argument	30 - strlen ( it -> name )		2521271	1					
ANR	2521465	AdditiveExpression	30 - strlen ( it -> name )		2521271	0		-			
ANR	2521466	PrimaryExpression	30		2521271	0					
ANR	2521467	CallExpression	strlen ( it -> name )		2521271	1					
ANR	2521468	Callee	strlen		2521271	0					
ANR	2521469	Identifier	strlen		2521271	0					
ANR	2521470	ArgumentList	it -> name		2521271	1					
ANR	2521471	Argument	it -> name		2521271	0					
ANR	2521472	PtrMemberAccess	it -> name		2521271	0					
ANR	2521473	Identifier	it		2521271	0					
ANR	2521474	Identifier	name		2521271	1					
ANR	2521475	ExpressionStatement	"a -> cb_printf ( ""%s:%s"" , it -> name , pad )"	1404:2:33112:33149	2521271	14	True				
ANR	2521476	CallExpression	"a -> cb_printf ( ""%s:%s"" , it -> name , pad )"		2521271	0					
ANR	2521477	Callee	a -> cb_printf		2521271	0					
ANR	2521478	PtrMemberAccess	a -> cb_printf		2521271	0					
ANR	2521479	Identifier	a		2521271	0					
ANR	2521480	Identifier	cb_printf		2521271	1					
ANR	2521481	ArgumentList	"""%s:%s"""		2521271	1					
ANR	2521482	Argument	"""%s:%s"""		2521271	0					
ANR	2521483	PrimaryExpression	"""%s:%s"""		2521271	0					
ANR	2521484	Argument	it -> name		2521271	1					
ANR	2521485	PtrMemberAccess	it -> name		2521271	0					
ANR	2521486	Identifier	it		2521271	0					
ANR	2521487	Identifier	name		2521271	1					
ANR	2521488	Argument	pad		2521271	2					
ANR	2521489	Identifier	pad		2521271	0					
ANR	2521490	ElseStatement	else		2521271	0					
ANR	2521491	IfStatement	if ( ctx -> format == 'j' )		2521271	0					
ANR	2521492	Condition	ctx -> format == 'j'	1405:12:33163:33180	2521271	0	True				
ANR	2521493	EqualityExpression	ctx -> format == 'j'		2521271	0		==			
ANR	2521494	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521495	Identifier	ctx		2521271	0					
ANR	2521496	Identifier	format		2521271	1					
ANR	2521497	PrimaryExpression	'j'		2521271	1					
ANR	2521498	CompoundStatement		35:32:834:834	2521271	1					
ANR	2521499	IfStatement	if ( it -> space )		2521271	0					
ANR	2521500	Condition	it -> space	1406:6:33191:33199	2521271	0	True				
ANR	2521501	PtrMemberAccess	it -> space		2521271	0					
ANR	2521502	Identifier	it		2521271	0					
ANR	2521503	Identifier	space		2521271	1					
ANR	2521504	CompoundStatement		36:17:853:853	2521271	1					
ANR	2521505	ExpressionStatement	"a -> cb_printf ( ""{\\""zignspace\\"":\\""%s\\"","" , it -> space -> name )"	1407:3:33207:33263	2521271	0	True				
ANR	2521506	CallExpression	"a -> cb_printf ( ""{\\""zignspace\\"":\\""%s\\"","" , it -> space -> name )"		2521271	0					
ANR	2521507	Callee	a -> cb_printf		2521271	0					
ANR	2521508	PtrMemberAccess	a -> cb_printf		2521271	0					
ANR	2521509	Identifier	a		2521271	0					
ANR	2521510	Identifier	cb_printf		2521271	1					
ANR	2521511	ArgumentList	"""{\\""zignspace\\"":\\""%s\\"","""		2521271	1					
ANR	2521512	Argument	"""{\\""zignspace\\"":\\""%s\\"","""		2521271	0					
ANR	2521513	PrimaryExpression	"""{\\""zignspace\\"":\\""%s\\"","""		2521271	0					
ANR	2521514	Argument	it -> space -> name		2521271	1					
ANR	2521515	PtrMemberAccess	it -> space -> name		2521271	0					
ANR	2521516	PtrMemberAccess	it -> space		2521271	0					
ANR	2521517	Identifier	it		2521271	0					
ANR	2521518	Identifier	space		2521271	1					
ANR	2521519	Identifier	name		2521271	1					
ANR	2521520	ExpressionStatement	"a -> cb_printf ( ""\\""name\\"":\\""%s\\"","" , it -> name )"	1409:2:33271:33314	2521271	1	True				
ANR	2521521	CallExpression	"a -> cb_printf ( ""\\""name\\"":\\""%s\\"","" , it -> name )"		2521271	0					
ANR	2521522	Callee	a -> cb_printf		2521271	0					
ANR	2521523	PtrMemberAccess	a -> cb_printf		2521271	0					
ANR	2521524	Identifier	a		2521271	0					
ANR	2521525	Identifier	cb_printf		2521271	1					
ANR	2521526	ArgumentList	"""\\""name\\"":\\""%s\\"","""		2521271	1					
ANR	2521527	Argument	"""\\""name\\"":\\""%s\\"","""		2521271	0					
ANR	2521528	PrimaryExpression	"""\\""name\\"":\\""%s\\"","""		2521271	0					
ANR	2521529	Argument	it -> name		2521271	1					
ANR	2521530	PtrMemberAccess	it -> name		2521271	0					
ANR	2521531	Identifier	it		2521271	0					
ANR	2521532	Identifier	name		2521271	1					
ANR	2521533	ElseStatement	else		2521271	0					
ANR	2521534	CompoundStatement		40:8:975:975	2521271	0					
ANR	2521535	IfStatement	if ( ! r_spaces_current ( & a -> zign_spaces ) && it -> space )		2521271	0					
ANR	2521536	Condition	! r_spaces_current ( & a -> zign_spaces ) && it -> space	1411:6:33332:33379	2521271	0	True				
ANR	2521537	AndExpression	! r_spaces_current ( & a -> zign_spaces ) && it -> space		2521271	0		&&			
ANR	2521538	UnaryOperationExpression	! r_spaces_current ( & a -> zign_spaces )		2521271	0					
ANR	2521539	UnaryOperator	!		2521271	0					
ANR	2521540	CallExpression	r_spaces_current ( & a -> zign_spaces )		2521271	1					
ANR	2521541	Callee	r_spaces_current		2521271	0					
ANR	2521542	Identifier	r_spaces_current		2521271	0					
ANR	2521543	ArgumentList	& a -> zign_spaces		2521271	1					
ANR	2521544	Argument	& a -> zign_spaces		2521271	0					
ANR	2521545	UnaryOperationExpression	& a -> zign_spaces		2521271	0					
ANR	2521546	UnaryOperator	&		2521271	0					
ANR	2521547	PtrMemberAccess	a -> zign_spaces		2521271	1					
ANR	2521548	Identifier	a		2521271	0					
ANR	2521549	Identifier	zign_spaces		2521271	1					
ANR	2521550	PtrMemberAccess	it -> space		2521271	1					
ANR	2521551	Identifier	it		2521271	0					
ANR	2521552	Identifier	space		2521271	1					
ANR	2521553	CompoundStatement		41:56:1033:1033	2521271	1					
ANR	2521554	ExpressionStatement	"a -> cb_printf ( ""(%s) "" , it -> space -> name )"	1412:3:33387:33426	2521271	0	True				
ANR	2521555	CallExpression	"a -> cb_printf ( ""(%s) "" , it -> space -> name )"		2521271	0					
ANR	2521556	Callee	a -> cb_printf		2521271	0					
ANR	2521557	PtrMemberAccess	a -> cb_printf		2521271	0					
ANR	2521558	Identifier	a		2521271	0					
ANR	2521559	Identifier	cb_printf		2521271	1					
ANR	2521560	ArgumentList	"""(%s) """		2521271	1					
ANR	2521561	Argument	"""(%s) """		2521271	0					
ANR	2521562	PrimaryExpression	"""(%s) """		2521271	0					
ANR	2521563	Argument	it -> space -> name		2521271	1					
ANR	2521564	PtrMemberAccess	it -> space -> name		2521271	0					
ANR	2521565	PtrMemberAccess	it -> space		2521271	0					
ANR	2521566	Identifier	it		2521271	0					
ANR	2521567	Identifier	space		2521271	1					
ANR	2521568	Identifier	name		2521271	1					
ANR	2521569	ExpressionStatement	"a -> cb_printf ( ""%s:\\n"" , it -> name )"	1414:2:33434:33466	2521271	1	True				
ANR	2521570	CallExpression	"a -> cb_printf ( ""%s:\\n"" , it -> name )"		2521271	0					
ANR	2521571	Callee	a -> cb_printf		2521271	0					
ANR	2521572	PtrMemberAccess	a -> cb_printf		2521271	0					
ANR	2521573	Identifier	a		2521271	0					
ANR	2521574	Identifier	cb_printf		2521271	1					
ANR	2521575	ArgumentList	"""%s:\\n"""		2521271	1					
ANR	2521576	Argument	"""%s:\\n"""		2521271	0					
ANR	2521577	PrimaryExpression	"""%s:\\n"""		2521271	0					
ANR	2521578	Argument	it -> name		2521271	1					
ANR	2521579	PtrMemberAccess	it -> name		2521271	0					
ANR	2521580	Identifier	it		2521271	0					
ANR	2521581	Identifier	name		2521271	1					
ANR	2521582	IfStatement	if ( it -> bytes )		2521271	8					
ANR	2521583	Condition	it -> bytes	1418:5:33495:33503	2521271	0	True				
ANR	2521584	PtrMemberAccess	it -> bytes		2521271	0					
ANR	2521585	Identifier	it		2521271	0					
ANR	2521586	Identifier	bytes		2521271	1					
ANR	2521587	CompoundStatement		48:16:1157:1157	2521271	1					
ANR	2521588	ExpressionStatement	"listBytes ( a , it , ctx -> format )"	1419:2:33510:33540	2521271	0	True				
ANR	2521589	CallExpression	"listBytes ( a , it , ctx -> format )"		2521271	0					
ANR	2521590	Callee	listBytes		2521271	0					
ANR	2521591	Identifier	listBytes		2521271	0					
ANR	2521592	ArgumentList	a		2521271	1					
ANR	2521593	Argument	a		2521271	0					
ANR	2521594	Identifier	a		2521271	0					
ANR	2521595	Argument	it		2521271	1					
ANR	2521596	Identifier	it		2521271	0					
ANR	2521597	Argument	ctx -> format		2521271	2					
ANR	2521598	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521599	Identifier	ctx		2521271	0					
ANR	2521600	Identifier	format		2521271	1					
ANR	2521601	ElseStatement	else		2521271	0					
ANR	2521602	IfStatement	if ( ctx -> format == 'j' )		2521271	0					
ANR	2521603	Condition	ctx -> format == 'j'	1420:12:33554:33571	2521271	0	True				
ANR	2521604	EqualityExpression	ctx -> format == 'j'		2521271	0		==			
ANR	2521605	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521606	Identifier	ctx		2521271	0					
ANR	2521607	Identifier	format		2521271	1					
ANR	2521608	PrimaryExpression	'j'		2521271	1					
ANR	2521609	CompoundStatement		50:32:1225:1225	2521271	1					
ANR	2521610	ExpressionStatement	"a -> cb_printf ( ""\\""bytes\\"":\\""\\"","" )"	1421:2:33578:33610	2521271	0	True				
ANR	2521611	CallExpression	"a -> cb_printf ( ""\\""bytes\\"":\\""\\"","" )"		2521271	0					
ANR	2521612	Callee	a -> cb_printf		2521271	0					
ANR	2521613	PtrMemberAccess	a -> cb_printf		2521271	0					
ANR	2521614	Identifier	a		2521271	0					
ANR	2521615	Identifier	cb_printf		2521271	1					
ANR	2521616	ArgumentList	"""\\""bytes\\"":\\""\\"","""		2521271	1					
ANR	2521617	Argument	"""\\""bytes\\"":\\""\\"","""		2521271	0					
ANR	2521618	PrimaryExpression	"""\\""bytes\\"":\\""\\"","""		2521271	0					
ANR	2521619	IfStatement	if ( it -> graph )		2521271	9					
ANR	2521620	Condition	it -> graph	1425:5:33639:33647	2521271	0	True				
ANR	2521621	PtrMemberAccess	it -> graph		2521271	0					
ANR	2521622	Identifier	it		2521271	0					
ANR	2521623	Identifier	graph		2521271	1					
ANR	2521624	CompoundStatement		55:16:1301:1301	2521271	1					
ANR	2521625	ExpressionStatement	"listGraph ( a , it , ctx -> format )"	1426:2:33654:33684	2521271	0	True				
ANR	2521626	CallExpression	"listGraph ( a , it , ctx -> format )"		2521271	0					
ANR	2521627	Callee	listGraph		2521271	0					
ANR	2521628	Identifier	listGraph		2521271	0					
ANR	2521629	ArgumentList	a		2521271	1					
ANR	2521630	Argument	a		2521271	0					
ANR	2521631	Identifier	a		2521271	0					
ANR	2521632	Argument	it		2521271	1					
ANR	2521633	Identifier	it		2521271	0					
ANR	2521634	Argument	ctx -> format		2521271	2					
ANR	2521635	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521636	Identifier	ctx		2521271	0					
ANR	2521637	Identifier	format		2521271	1					
ANR	2521638	ElseStatement	else		2521271	0					
ANR	2521639	IfStatement	if ( ctx -> format == 'j' )		2521271	0					
ANR	2521640	Condition	ctx -> format == 'j'	1427:12:33698:33715	2521271	0	True				
ANR	2521641	EqualityExpression	ctx -> format == 'j'		2521271	0		==			
ANR	2521642	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521643	Identifier	ctx		2521271	0					
ANR	2521644	Identifier	format		2521271	1					
ANR	2521645	PrimaryExpression	'j'		2521271	1					
ANR	2521646	CompoundStatement		57:32:1369:1369	2521271	1					
ANR	2521647	ExpressionStatement	"a -> cb_printf ( ""\\""graph\\"":{},"" )"	1428:2:33722:33752	2521271	0	True				
ANR	2521648	CallExpression	"a -> cb_printf ( ""\\""graph\\"":{},"" )"		2521271	0					
ANR	2521649	Callee	a -> cb_printf		2521271	0					
ANR	2521650	PtrMemberAccess	a -> cb_printf		2521271	0					
ANR	2521651	Identifier	a		2521271	0					
ANR	2521652	Identifier	cb_printf		2521271	1					
ANR	2521653	ArgumentList	"""\\""graph\\"":{},"""		2521271	1					
ANR	2521654	Argument	"""\\""graph\\"":{},"""		2521271	0					
ANR	2521655	PrimaryExpression	"""\\""graph\\"":{},"""		2521271	0					
ANR	2521656	IfStatement	if ( it -> addr != UT64_MAX )		2521271	10					
ANR	2521657	Condition	it -> addr != UT64_MAX	1432:5:33774:33793	2521271	0	True				
ANR	2521658	EqualityExpression	it -> addr != UT64_MAX		2521271	0		!=			
ANR	2521659	PtrMemberAccess	it -> addr		2521271	0					
ANR	2521660	Identifier	it		2521271	0					
ANR	2521661	Identifier	addr		2521271	1					
ANR	2521662	Identifier	UT64_MAX		2521271	1					
ANR	2521663	CompoundStatement		62:27:1447:1447	2521271	1					
ANR	2521664	ExpressionStatement	"listOffset ( a , it , ctx -> format )"	1433:2:33800:33831	2521271	0	True				
ANR	2521665	CallExpression	"listOffset ( a , it , ctx -> format )"		2521271	0					
ANR	2521666	Callee	listOffset		2521271	0					
ANR	2521667	Identifier	listOffset		2521271	0					
ANR	2521668	ArgumentList	a		2521271	1					
ANR	2521669	Argument	a		2521271	0					
ANR	2521670	Identifier	a		2521271	0					
ANR	2521671	Argument	it		2521271	1					
ANR	2521672	Identifier	it		2521271	0					
ANR	2521673	Argument	ctx -> format		2521271	2					
ANR	2521674	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521675	Identifier	ctx		2521271	0					
ANR	2521676	Identifier	format		2521271	1					
ANR	2521677	ElseStatement	else		2521271	0					
ANR	2521678	IfStatement	if ( ctx -> format == 'j' )		2521271	0					
ANR	2521679	Condition	ctx -> format == 'j'	1434:12:33845:33862	2521271	0	True				
ANR	2521680	EqualityExpression	ctx -> format == 'j'		2521271	0		==			
ANR	2521681	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521682	Identifier	ctx		2521271	0					
ANR	2521683	Identifier	format		2521271	1					
ANR	2521684	PrimaryExpression	'j'		2521271	1					
ANR	2521685	CompoundStatement		64:32:1516:1516	2521271	1					
ANR	2521686	ExpressionStatement	"a -> cb_printf ( ""\\""addr\\"":-1,"" )"	1435:2:33869:33898	2521271	0	True				
ANR	2521687	CallExpression	"a -> cb_printf ( ""\\""addr\\"":-1,"" )"		2521271	0					
ANR	2521688	Callee	a -> cb_printf		2521271	0					
ANR	2521689	PtrMemberAccess	a -> cb_printf		2521271	0					
ANR	2521690	Identifier	a		2521271	0					
ANR	2521691	Identifier	cb_printf		2521271	1					
ANR	2521692	ArgumentList	"""\\""addr\\"":-1,"""		2521271	1					
ANR	2521693	Argument	"""\\""addr\\"":-1,"""		2521271	0					
ANR	2521694	PrimaryExpression	"""\\""addr\\"":-1,"""		2521271	0					
ANR	2521695	IfStatement	if ( it -> realname )		2521271	11					
ANR	2521696	Condition	it -> realname	1438:5:33917:33928	2521271	0	True				
ANR	2521697	PtrMemberAccess	it -> realname		2521271	0					
ANR	2521698	Identifier	it		2521271	0					
ANR	2521699	Identifier	realname		2521271	1					
ANR	2521700	CompoundStatement		68:19:1582:1582	2521271	1					
ANR	2521701	ExpressionStatement	"listRealname ( a , it , ctx -> format )"	1439:2:33935:33968	2521271	0	True				
ANR	2521702	CallExpression	"listRealname ( a , it , ctx -> format )"		2521271	0					
ANR	2521703	Callee	listRealname		2521271	0					
ANR	2521704	Identifier	listRealname		2521271	0					
ANR	2521705	ArgumentList	a		2521271	1					
ANR	2521706	Argument	a		2521271	0					
ANR	2521707	Identifier	a		2521271	0					
ANR	2521708	Argument	it		2521271	1					
ANR	2521709	Identifier	it		2521271	0					
ANR	2521710	Argument	ctx -> format		2521271	2					
ANR	2521711	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521712	Identifier	ctx		2521271	0					
ANR	2521713	Identifier	format		2521271	1					
ANR	2521714	IfStatement	if ( it -> comment )		2521271	12					
ANR	2521715	Condition	it -> comment	1441:5:33978:33988	2521271	0	True				
ANR	2521716	PtrMemberAccess	it -> comment		2521271	0					
ANR	2521717	Identifier	it		2521271	0					
ANR	2521718	Identifier	comment		2521271	1					
ANR	2521719	CompoundStatement		71:18:1642:1642	2521271	1					
ANR	2521720	ExpressionStatement	"listComment ( a , it , ctx -> format )"	1442:2:33995:34027	2521271	0	True				
ANR	2521721	CallExpression	"listComment ( a , it , ctx -> format )"		2521271	0					
ANR	2521722	Callee	listComment		2521271	0					
ANR	2521723	Identifier	listComment		2521271	0					
ANR	2521724	ArgumentList	a		2521271	1					
ANR	2521725	Argument	a		2521271	0					
ANR	2521726	Identifier	a		2521271	0					
ANR	2521727	Argument	it		2521271	1					
ANR	2521728	Identifier	it		2521271	0					
ANR	2521729	Argument	ctx -> format		2521271	2					
ANR	2521730	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521731	Identifier	ctx		2521271	0					
ANR	2521732	Identifier	format		2521271	1					
ANR	2521733	IfStatement	if ( it -> refs )		2521271	13					
ANR	2521734	Condition	it -> refs	1445:5:34052:34059	2521271	0	True				
ANR	2521735	PtrMemberAccess	it -> refs		2521271	0					
ANR	2521736	Identifier	it		2521271	0					
ANR	2521737	Identifier	refs		2521271	1					
ANR	2521738	CompoundStatement		75:15:1713:1713	2521271	1					
ANR	2521739	ExpressionStatement	"listRefs ( a , it , ctx -> format )"	1446:2:34066:34095	2521271	0	True				
ANR	2521740	CallExpression	"listRefs ( a , it , ctx -> format )"		2521271	0					
ANR	2521741	Callee	listRefs		2521271	0					
ANR	2521742	Identifier	listRefs		2521271	0					
ANR	2521743	ArgumentList	a		2521271	1					
ANR	2521744	Argument	a		2521271	0					
ANR	2521745	Identifier	a		2521271	0					
ANR	2521746	Argument	it		2521271	1					
ANR	2521747	Identifier	it		2521271	0					
ANR	2521748	Argument	ctx -> format		2521271	2					
ANR	2521749	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521750	Identifier	ctx		2521271	0					
ANR	2521751	Identifier	format		2521271	1					
ANR	2521752	ElseStatement	else		2521271	0					
ANR	2521753	IfStatement	if ( ctx -> format == 'j' )		2521271	0					
ANR	2521754	Condition	ctx -> format == 'j'	1447:12:34109:34126	2521271	0	True				
ANR	2521755	EqualityExpression	ctx -> format == 'j'		2521271	0		==			
ANR	2521756	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521757	Identifier	ctx		2521271	0					
ANR	2521758	Identifier	format		2521271	1					
ANR	2521759	PrimaryExpression	'j'		2521271	1					
ANR	2521760	CompoundStatement		77:32:1780:1780	2521271	1					
ANR	2521761	ExpressionStatement	"a -> cb_printf ( ""\\""refs\\"":[],"" )"	1448:2:34133:34162	2521271	0	True				
ANR	2521762	CallExpression	"a -> cb_printf ( ""\\""refs\\"":[],"" )"		2521271	0					
ANR	2521763	Callee	a -> cb_printf		2521271	0					
ANR	2521764	PtrMemberAccess	a -> cb_printf		2521271	0					
ANR	2521765	Identifier	a		2521271	0					
ANR	2521766	Identifier	cb_printf		2521271	1					
ANR	2521767	ArgumentList	"""\\""refs\\"":[],"""		2521271	1					
ANR	2521768	Argument	"""\\""refs\\"":[],"""		2521271	0					
ANR	2521769	PrimaryExpression	"""\\""refs\\"":[],"""		2521271	0					
ANR	2521770	IfStatement	if ( it -> xrefs )		2521271	14					
ANR	2521771	Condition	it -> xrefs	1451:5:34188:34196	2521271	0	True				
ANR	2521772	PtrMemberAccess	it -> xrefs		2521271	0					
ANR	2521773	Identifier	it		2521271	0					
ANR	2521774	Identifier	xrefs		2521271	1					
ANR	2521775	CompoundStatement		81:16:1850:1850	2521271	1					
ANR	2521776	ExpressionStatement	"listXRefs ( a , it , ctx -> format )"	1452:2:34203:34233	2521271	0	True				
ANR	2521777	CallExpression	"listXRefs ( a , it , ctx -> format )"		2521271	0					
ANR	2521778	Callee	listXRefs		2521271	0					
ANR	2521779	Identifier	listXRefs		2521271	0					
ANR	2521780	ArgumentList	a		2521271	1					
ANR	2521781	Argument	a		2521271	0					
ANR	2521782	Identifier	a		2521271	0					
ANR	2521783	Argument	it		2521271	1					
ANR	2521784	Identifier	it		2521271	0					
ANR	2521785	Argument	ctx -> format		2521271	2					
ANR	2521786	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521787	Identifier	ctx		2521271	0					
ANR	2521788	Identifier	format		2521271	1					
ANR	2521789	ElseStatement	else		2521271	0					
ANR	2521790	IfStatement	if ( ctx -> format == 'j' )		2521271	0					
ANR	2521791	Condition	ctx -> format == 'j'	1453:12:34247:34264	2521271	0	True				
ANR	2521792	EqualityExpression	ctx -> format == 'j'		2521271	0		==			
ANR	2521793	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521794	Identifier	ctx		2521271	0					
ANR	2521795	Identifier	format		2521271	1					
ANR	2521796	PrimaryExpression	'j'		2521271	1					
ANR	2521797	CompoundStatement		83:32:1918:1918	2521271	1					
ANR	2521798	ExpressionStatement	"a -> cb_printf ( ""\\""xrefs\\"":[],"" )"	1454:2:34271:34301	2521271	0	True				
ANR	2521799	CallExpression	"a -> cb_printf ( ""\\""xrefs\\"":[],"" )"		2521271	0					
ANR	2521800	Callee	a -> cb_printf		2521271	0					
ANR	2521801	PtrMemberAccess	a -> cb_printf		2521271	0					
ANR	2521802	Identifier	a		2521271	0					
ANR	2521803	Identifier	cb_printf		2521271	1					
ANR	2521804	ArgumentList	"""\\""xrefs\\"":[],"""		2521271	1					
ANR	2521805	Argument	"""\\""xrefs\\"":[],"""		2521271	0					
ANR	2521806	PrimaryExpression	"""\\""xrefs\\"":[],"""		2521271	0					
ANR	2521807	IfStatement	if ( it -> vars )		2521271	15					
ANR	2521808	Condition	it -> vars	1457:5:34320:34327	2521271	0	True				
ANR	2521809	PtrMemberAccess	it -> vars		2521271	0					
ANR	2521810	Identifier	it		2521271	0					
ANR	2521811	Identifier	vars		2521271	1					
ANR	2521812	CompoundStatement		87:15:1981:1981	2521271	1					
ANR	2521813	ExpressionStatement	"listVars ( a , it , ctx -> format )"	1458:2:34334:34363	2521271	0	True				
ANR	2521814	CallExpression	"listVars ( a , it , ctx -> format )"		2521271	0					
ANR	2521815	Callee	listVars		2521271	0					
ANR	2521816	Identifier	listVars		2521271	0					
ANR	2521817	ArgumentList	a		2521271	1					
ANR	2521818	Argument	a		2521271	0					
ANR	2521819	Identifier	a		2521271	0					
ANR	2521820	Argument	it		2521271	1					
ANR	2521821	Identifier	it		2521271	0					
ANR	2521822	Argument	ctx -> format		2521271	2					
ANR	2521823	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521824	Identifier	ctx		2521271	0					
ANR	2521825	Identifier	format		2521271	1					
ANR	2521826	ElseStatement	else		2521271	0					
ANR	2521827	IfStatement	if ( ctx -> format == 'j' )		2521271	0					
ANR	2521828	Condition	ctx -> format == 'j'	1459:12:34377:34394	2521271	0	True				
ANR	2521829	EqualityExpression	ctx -> format == 'j'		2521271	0		==			
ANR	2521830	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521831	Identifier	ctx		2521271	0					
ANR	2521832	Identifier	format		2521271	1					
ANR	2521833	PrimaryExpression	'j'		2521271	1					
ANR	2521834	CompoundStatement		89:32:2048:2048	2521271	1					
ANR	2521835	ExpressionStatement	"a -> cb_printf ( ""\\""vars\\"":[],"" )"	1460:2:34401:34430	2521271	0	True				
ANR	2521836	CallExpression	"a -> cb_printf ( ""\\""vars\\"":[],"" )"		2521271	0					
ANR	2521837	Callee	a -> cb_printf		2521271	0					
ANR	2521838	PtrMemberAccess	a -> cb_printf		2521271	0					
ANR	2521839	Identifier	a		2521271	0					
ANR	2521840	Identifier	cb_printf		2521271	1					
ANR	2521841	ArgumentList	"""\\""vars\\"":[],"""		2521271	1					
ANR	2521842	Argument	"""\\""vars\\"":[],"""		2521271	0					
ANR	2521843	PrimaryExpression	"""\\""vars\\"":[],"""		2521271	0					
ANR	2521844	IfStatement	if ( it -> hash )		2521271	16					
ANR	2521845	Condition	it -> hash	1463:5:34449:34456	2521271	0	True				
ANR	2521846	PtrMemberAccess	it -> hash		2521271	0					
ANR	2521847	Identifier	it		2521271	0					
ANR	2521848	Identifier	hash		2521271	1					
ANR	2521849	CompoundStatement		93:15:2110:2110	2521271	1					
ANR	2521850	ExpressionStatement	"listHash ( a , it , ctx -> format )"	1464:2:34463:34492	2521271	0	True				
ANR	2521851	CallExpression	"listHash ( a , it , ctx -> format )"		2521271	0					
ANR	2521852	Callee	listHash		2521271	0					
ANR	2521853	Identifier	listHash		2521271	0					
ANR	2521854	ArgumentList	a		2521271	1					
ANR	2521855	Argument	a		2521271	0					
ANR	2521856	Identifier	a		2521271	0					
ANR	2521857	Argument	it		2521271	1					
ANR	2521858	Identifier	it		2521271	0					
ANR	2521859	Argument	ctx -> format		2521271	2					
ANR	2521860	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521861	Identifier	ctx		2521271	0					
ANR	2521862	Identifier	format		2521271	1					
ANR	2521863	ElseStatement	else		2521271	0					
ANR	2521864	IfStatement	if ( ctx -> format == 'j' )		2521271	0					
ANR	2521865	Condition	ctx -> format == 'j'	1465:12:34506:34523	2521271	0	True				
ANR	2521866	EqualityExpression	ctx -> format == 'j'		2521271	0		==			
ANR	2521867	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521868	Identifier	ctx		2521271	0					
ANR	2521869	Identifier	format		2521271	1					
ANR	2521870	PrimaryExpression	'j'		2521271	1					
ANR	2521871	CompoundStatement		95:32:2177:2177	2521271	1					
ANR	2521872	ExpressionStatement	"a -> cb_printf ( ""\\""hash\\"":{}"" )"	1466:2:34530:34558	2521271	0	True				
ANR	2521873	CallExpression	"a -> cb_printf ( ""\\""hash\\"":{}"" )"		2521271	0					
ANR	2521874	Callee	a -> cb_printf		2521271	0					
ANR	2521875	PtrMemberAccess	a -> cb_printf		2521271	0					
ANR	2521876	Identifier	a		2521271	0					
ANR	2521877	Identifier	cb_printf		2521271	1					
ANR	2521878	ArgumentList	"""\\""hash\\"":{}"""		2521271	1					
ANR	2521879	Argument	"""\\""hash\\"":{}"""		2521271	0					
ANR	2521880	PrimaryExpression	"""\\""hash\\"":{}"""		2521271	0					
ANR	2521881	IfStatement	if ( ctx -> format == 'j' )		2521271	17					
ANR	2521882	Condition	ctx -> format == 'j'	1470:5:34582:34599	2521271	0	True				
ANR	2521883	EqualityExpression	ctx -> format == 'j'		2521271	0		==			
ANR	2521884	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521885	Identifier	ctx		2521271	0					
ANR	2521886	Identifier	format		2521271	1					
ANR	2521887	PrimaryExpression	'j'		2521271	1					
ANR	2521888	CompoundStatement		100:25:2253:2253	2521271	1					
ANR	2521889	ExpressionStatement	"a -> cb_printf ( ""}"" )"	1471:2:34606:34624	2521271	0	True				
ANR	2521890	CallExpression	"a -> cb_printf ( ""}"" )"		2521271	0					
ANR	2521891	Callee	a -> cb_printf		2521271	0					
ANR	2521892	PtrMemberAccess	a -> cb_printf		2521271	0					
ANR	2521893	Identifier	a		2521271	0					
ANR	2521894	Identifier	cb_printf		2521271	1					
ANR	2521895	ArgumentList	"""}"""		2521271	1					
ANR	2521896	Argument	"""}"""		2521271	0					
ANR	2521897	PrimaryExpression	"""}"""		2521271	0					
ANR	2521898	ExpressionStatement	ctx -> idx ++	1474:1:34631:34641	2521271	18	True				
ANR	2521899	PostIncDecOperationExpression	ctx -> idx ++		2521271	0					
ANR	2521900	PtrMemberAccess	ctx -> idx		2521271	0					
ANR	2521901	Identifier	ctx		2521271	0					
ANR	2521902	Identifier	idx		2521271	1					
ANR	2521903	IncDec	++		2521271	1					
ANR	2521904	IfStatement	if ( ctx -> format == 'q' )		2521271	19					
ANR	2521905	Condition	ctx -> format == 'q'	1475:5:34648:34665	2521271	0	True				
ANR	2521906	EqualityExpression	ctx -> format == 'q'		2521271	0		==			
ANR	2521907	PtrMemberAccess	ctx -> format		2521271	0					
ANR	2521908	Identifier	ctx		2521271	0					
ANR	2521909	Identifier	format		2521271	1					
ANR	2521910	PrimaryExpression	'q'		2521271	1					
ANR	2521911	CompoundStatement		105:25:2319:2319	2521271	1					
ANR	2521912	ExpressionStatement	"a -> cb_printf ( ""\\n"" )"	1476:2:34672:34691	2521271	0	True				
ANR	2521913	CallExpression	"a -> cb_printf ( ""\\n"" )"		2521271	0					
ANR	2521914	Callee	a -> cb_printf		2521271	0					
ANR	2521915	PtrMemberAccess	a -> cb_printf		2521271	0					
ANR	2521916	Identifier	a		2521271	0					
ANR	2521917	Identifier	cb_printf		2521271	1					
ANR	2521918	ArgumentList	"""\\n"""		2521271	1					
ANR	2521919	Argument	"""\\n"""		2521271	0					
ANR	2521920	PrimaryExpression	"""\\n"""		2521271	0					
ANR	2521921	Label	out :	1479:0:34697:34700	2521271	20	True				
ANR	2521922	Identifier	out		2521271	0					
ANR	2521923	ExpressionStatement	r_sign_item_free ( it )	1480:1:34703:34724	2521271	21	True				
ANR	2521924	CallExpression	r_sign_item_free ( it )		2521271	0					
ANR	2521925	Callee	r_sign_item_free		2521271	0					
ANR	2521926	Identifier	r_sign_item_free		2521271	0					
ANR	2521927	ArgumentList	it		2521271	1					
ANR	2521928	Argument	it		2521271	0					
ANR	2521929	Identifier	it		2521271	0					
ANR	2521930	ReturnStatement	return 1 ;	1482:1:34728:34736	2521271	22	True				
ANR	2521931	PrimaryExpression	1		2521271	0					
ANR	2521932	ReturnType	static int		2521271	1					
ANR	2521933	Identifier	listCB		2521271	2					
ANR	2521934	ParameterList	"void * user , const char * k , const char * v"		2521271	3					
ANR	2521935	Parameter	void * user	1371:18:32306:32315	2521271	0	True				
ANR	2521936	ParameterType	void *		2521271	0					
ANR	2521937	Identifier	user		2521271	1					
ANR	2521938	Parameter	const char * k	1371:30:32318:32330	2521271	1	True				
ANR	2521939	ParameterType	const char *		2521271	0					
ANR	2521940	Identifier	k		2521271	1					
ANR	2521941	Parameter	const char * v	1371:45:32333:32345	2521271	2	True				
ANR	2521942	ParameterType	const char *		2521271	0					
ANR	2521943	Identifier	v		2521271	1					
ANR	2521944	CFGEntryNode	ENTRY		2521271		True				
ANR	2521945	CFGExitNode	EXIT		2521271		True				
ANR	2521946	Symbol	it -> vars		2521271						
ANR	2521947	Symbol	r_sign_item_new		2521271						
ANR	2521948	Symbol	cur		2521271						
ANR	2521949	Symbol	it -> graph		2521271						
ANR	2521950	Symbol	ctx -> anal		2521271						
ANR	2521951	Symbol	ctx -> format		2521271						
ANR	2521952	Symbol	& a -> zign_spaces		2521271						
ANR	2521953	Symbol	strlen		2521271						
ANR	2521954	Symbol	pad		2521271						
ANR	2521955	Symbol	* * it		2521271						
ANR	2521956	Symbol	it -> hash		2521271						
ANR	2521957	Symbol	it -> space -> name		2521271						
ANR	2521958	Symbol	UT64_MAX		2521271						
ANR	2521959	Symbol	r_spaces_current		2521271						
ANR	2521960	Symbol	it -> refs		2521271						
ANR	2521961	Symbol	it -> realname		2521271						
ANR	2521962	Symbol	it -> comment		2521271						
ANR	2521963	Symbol	a		2521271						
ANR	2521964	Symbol	r_str_pad		2521271						
ANR	2521965	Symbol	it -> bytes		2521271						
ANR	2521966	Symbol	ctx		2521271						
ANR	2521967	Symbol	ctx -> idx		2521271						
ANR	2521968	Symbol	* it -> space		2521271						
ANR	2521969	Symbol	it -> name		2521271						
ANR	2521970	Symbol	k		2521271						
ANR	2521971	Symbol	it		2521271						
ANR	2521972	Symbol	* ctx		2521271						
ANR	2521973	Symbol	r_sign_deserialize		2521271						
ANR	2521974	Symbol	it -> space		2521271						
ANR	2521975	Symbol	* it		2521271						
ANR	2521976	Symbol	v		2521271						
ANR	2521977	Symbol	it -> addr		2521271						
ANR	2521978	Symbol	it -> xrefs		2521271						
ANR	2521979	Symbol	user		2521271						
ANR	2521980	Function	r_sign_list	1485:0:34741:34995							
ANR	2521981	FunctionDef	"r_sign_list (RAnal * a , int format)"		2521980	0					
ANR	2521982	CompoundStatement		1485:45:34786:34995	2521980	0					
ANR	2521983	ExpressionStatement	r_return_if_fail ( a )	1486:1:34789:34809	2521980	0	True				
ANR	2521984	CallExpression	r_return_if_fail ( a )		2521980	0					
ANR	2521985	Callee	r_return_if_fail		2521980	0					
ANR	2521986	Identifier	r_return_if_fail		2521980	0					
ANR	2521987	ArgumentList	a		2521980	1					
ANR	2521988	Argument	a		2521980	0					
ANR	2521989	Identifier	a		2521980	0					
ANR	2521990	IdentifierDeclStatement	"struct ctxListCB ctx = { a , 0 , format } ;"	1487:1:34812:34851	2521980	1	True				
ANR	2521991	IdentifierDecl	"ctx = { a , 0 , format }"		2521980	0					
ANR	2521992	IdentifierDeclType	struct ctxListCB		2521980	0					
ANR	2521993	Identifier	ctx		2521980	1					
ANR	2521994	AssignmentExpression	"ctx = { a , 0 , format }"		2521980	2		=			
ANR	2521995	Identifier	ctx		2521980	0					
ANR	2521996	InitializerList	a		2521980	1					
ANR	2521997	Identifier	a		2521980	0					
ANR	2521998	PrimaryExpression	0		2521980	1					
ANR	2521999	Identifier	format		2521980	2					
ANR	2522000	IfStatement	if ( format == 'j' )		2521980	2					
ANR	2522001	Condition	format == 'j'	1489:5:34859:34871	2521980	0	True				
ANR	2522002	EqualityExpression	format == 'j'		2521980	0		==			
ANR	2522003	Identifier	format		2521980	0					
ANR	2522004	PrimaryExpression	'j'		2521980	1					
ANR	2522005	CompoundStatement		5:20:87:87	2521980	1					
ANR	2522006	ExpressionStatement	"a -> cb_printf ( ""["" )"	1490:2:34878:34896	2521980	0	True				
ANR	2522007	CallExpression	"a -> cb_printf ( ""["" )"		2521980	0					
ANR	2522008	Callee	a -> cb_printf		2521980	0					
ANR	2522009	PtrMemberAccess	a -> cb_printf		2521980	0					
ANR	2522010	Identifier	a		2521980	0					
ANR	2522011	Identifier	cb_printf		2521980	1					
ANR	2522012	ArgumentList	"""["""		2521980	1					
ANR	2522013	Argument	"""["""		2521980	0					
ANR	2522014	PrimaryExpression	"""["""		2521980	0					
ANR	2522015	ExpressionStatement	"sdb_foreach ( a -> sdb_zigns , listCB , & ctx )"	1493:1:34903:34943	2521980	3	True				
ANR	2522016	CallExpression	"sdb_foreach ( a -> sdb_zigns , listCB , & ctx )"		2521980	0					
ANR	2522017	Callee	sdb_foreach		2521980	0					
ANR	2522018	Identifier	sdb_foreach		2521980	0					
ANR	2522019	ArgumentList	a -> sdb_zigns		2521980	1					
ANR	2522020	Argument	a -> sdb_zigns		2521980	0					
ANR	2522021	PtrMemberAccess	a -> sdb_zigns		2521980	0					
ANR	2522022	Identifier	a		2521980	0					
ANR	2522023	Identifier	sdb_zigns		2521980	1					
ANR	2522024	Argument	listCB		2521980	1					
ANR	2522025	Identifier	listCB		2521980	0					
ANR	2522026	Argument	& ctx		2521980	2					
ANR	2522027	UnaryOperationExpression	& ctx		2521980	0					
ANR	2522028	UnaryOperator	&		2521980	0					
ANR	2522029	Identifier	ctx		2521980	1					
ANR	2522030	IfStatement	if ( format == 'j' )		2521980	4					
ANR	2522031	Condition	format == 'j'	1495:5:34951:34963	2521980	0	True				
ANR	2522032	EqualityExpression	format == 'j'		2521980	0		==			
ANR	2522033	Identifier	format		2521980	0					
ANR	2522034	PrimaryExpression	'j'		2521980	1					
ANR	2522035	CompoundStatement		11:20:179:179	2521980	1					
ANR	2522036	ExpressionStatement	"a -> cb_printf ( ""]\\n"" )"	1496:2:34970:34990	2521980	0	True				
ANR	2522037	CallExpression	"a -> cb_printf ( ""]\\n"" )"		2521980	0					
ANR	2522038	Callee	a -> cb_printf		2521980	0					
ANR	2522039	PtrMemberAccess	a -> cb_printf		2521980	0					
ANR	2522040	Identifier	a		2521980	0					
ANR	2522041	Identifier	cb_printf		2521980	1					
ANR	2522042	ArgumentList	"""]\\n"""		2521980	1					
ANR	2522043	Argument	"""]\\n"""		2521980	0					
ANR	2522044	PrimaryExpression	"""]\\n"""		2521980	0					
ANR	2522045	ReturnType	R_API void		2521980	1					
ANR	2522046	Identifier	r_sign_list		2521980	2					
ANR	2522047	ParameterList	"RAnal * a , int format"		2521980	3					
ANR	2522048	Parameter	RAnal * a	1485:23:34764:34771	2521980	0	True				
ANR	2522049	ParameterType	RAnal *		2521980	0					
ANR	2522050	Identifier	a		2521980	1					
ANR	2522051	Parameter	int format	1485:33:34774:34783	2521980	1	True				
ANR	2522052	ParameterType	int		2521980	0					
ANR	2522053	Identifier	format		2521980	1					
ANR	2522054	CFGEntryNode	ENTRY		2521980		True				
ANR	2522055	CFGExitNode	EXIT		2521980		True				
ANR	2522056	Symbol	a		2521980						
ANR	2522057	Symbol	listCB		2521980						
ANR	2522058	Symbol	ctx		2521980						
ANR	2522059	Symbol	format		2521980						
ANR	2522060	Symbol	& ctx		2521980						
ANR	2522061	Symbol	* a		2521980						
ANR	2522062	Symbol	a -> sdb_zigns		2521980						
ANR	2522063	Function	listGetCB	1500:0:34998:35321							
ANR	2522064	FunctionDef	"listGetCB (void * user , const char * key , const char * val)"		2522063	0					
ANR	2522065	CompoundStatement		1500:67:35065:35321	2522063	0					
ANR	2522066	IdentifierDeclStatement	struct ctxGetListCB * ctx = user ;	1501:1:35068:35099	2522063	0	True				
ANR	2522067	IdentifierDecl	* ctx = user		2522063	0					
ANR	2522068	IdentifierDeclType	struct ctxGetListCB *		2522063	0					
ANR	2522069	Identifier	ctx		2522063	1					
ANR	2522070	AssignmentExpression	* ctx = user		2522063	2		=			
ANR	2522071	Identifier	user		2522063	0					
ANR	2522072	Identifier	user		2522063	1					
ANR	2522073	IdentifierDeclStatement	RSignItem * item = r_sign_item_new ( ) ;	1502:1:35102:35138	2522063	1	True				
ANR	2522074	IdentifierDecl	* item = r_sign_item_new ( )		2522063	0					
ANR	2522075	IdentifierDeclType	RSignItem *		2522063	0					
ANR	2522076	Identifier	item		2522063	1					
ANR	2522077	AssignmentExpression	* item = r_sign_item_new ( )		2522063	2		=			
ANR	2522078	Identifier	item		2522063	0					
ANR	2522079	CallExpression	r_sign_item_new ( )		2522063	1					
ANR	2522080	Callee	r_sign_item_new		2522063	0					
ANR	2522081	Identifier	r_sign_item_new		2522063	0					
ANR	2522082	ArgumentList			2522063	1					
ANR	2522083	IfStatement	if ( ! item )		2522063	2					
ANR	2522084	Condition	! item	1503:5:35145:35149	2522063	0	True				
ANR	2522085	UnaryOperationExpression	! item		2522063	0					
ANR	2522086	UnaryOperator	!		2522063	0					
ANR	2522087	Identifier	item		2522063	1					
ANR	2522088	CompoundStatement		4:12:86:86	2522063	1					
ANR	2522089	ReturnStatement	return false ;	1504:2:35156:35168	2522063	0	True				
ANR	2522090	Identifier	false		2522063	0					
ANR	2522091	IfStatement	"if ( ! r_sign_deserialize ( ctx -> anal , item , key , val ) )"		2522063	3					
ANR	2522092	Condition	"! r_sign_deserialize ( ctx -> anal , item , key , val )"	1506:5:35178:35224	2522063	0	True				
ANR	2522093	UnaryOperationExpression	"! r_sign_deserialize ( ctx -> anal , item , key , val )"		2522063	0					
ANR	2522094	UnaryOperator	!		2522063	0					
ANR	2522095	CallExpression	"r_sign_deserialize ( ctx -> anal , item , key , val )"		2522063	1					
ANR	2522096	Callee	r_sign_deserialize		2522063	0					
ANR	2522097	Identifier	r_sign_deserialize		2522063	0					
ANR	2522098	ArgumentList	ctx -> anal		2522063	1					
ANR	2522099	Argument	ctx -> anal		2522063	0					
ANR	2522100	PtrMemberAccess	ctx -> anal		2522063	0					
ANR	2522101	Identifier	ctx		2522063	0					
ANR	2522102	Identifier	anal		2522063	1					
ANR	2522103	Argument	item		2522063	1					
ANR	2522104	Identifier	item		2522063	0					
ANR	2522105	Argument	key		2522063	2					
ANR	2522106	Identifier	key		2522063	0					
ANR	2522107	Argument	val		2522063	3					
ANR	2522108	Identifier	val		2522063	0					
ANR	2522109	CompoundStatement		7:54:161:161	2522063	1					
ANR	2522110	ExpressionStatement	r_sign_item_free ( item )	1507:2:35231:35254	2522063	0	True				
ANR	2522111	CallExpression	r_sign_item_free ( item )		2522063	0					
ANR	2522112	Callee	r_sign_item_free		2522063	0					
ANR	2522113	Identifier	r_sign_item_free		2522063	0					
ANR	2522114	ArgumentList	item		2522063	1					
ANR	2522115	Argument	item		2522063	0					
ANR	2522116	Identifier	item		2522063	0					
ANR	2522117	ReturnStatement	return false ;	1508:2:35258:35270	2522063	1	True				
ANR	2522118	Identifier	false		2522063	0					
ANR	2522119	ExpressionStatement	"r_list_append ( ctx -> list , item )"	1510:1:35276:35307	2522063	4	True				
ANR	2522120	CallExpression	"r_list_append ( ctx -> list , item )"		2522063	0					
ANR	2522121	Callee	r_list_append		2522063	0					
ANR	2522122	Identifier	r_list_append		2522063	0					
ANR	2522123	ArgumentList	ctx -> list		2522063	1					
ANR	2522124	Argument	ctx -> list		2522063	0					
ANR	2522125	PtrMemberAccess	ctx -> list		2522063	0					
ANR	2522126	Identifier	ctx		2522063	0					
ANR	2522127	Identifier	list		2522063	1					
ANR	2522128	Argument	item		2522063	1					
ANR	2522129	Identifier	item		2522063	0					
ANR	2522130	ReturnStatement	return 1 ;	1512:1:35311:35319	2522063	5	True				
ANR	2522131	PrimaryExpression	1		2522063	0					
ANR	2522132	ReturnType	static int		2522063	1					
ANR	2522133	Identifier	listGetCB		2522063	2					
ANR	2522134	ParameterList	"void * user , const char * key , const char * val"		2522063	3					
ANR	2522135	Parameter	void * user	1500:21:35019:35028	2522063	0	True				
ANR	2522136	ParameterType	void *		2522063	0					
ANR	2522137	Identifier	user		2522063	1					
ANR	2522138	Parameter	const char * key	1500:33:35031:35045	2522063	1	True				
ANR	2522139	ParameterType	const char *		2522063	0					
ANR	2522140	Identifier	key		2522063	1					
ANR	2522141	Parameter	const char * val	1500:50:35048:35062	2522063	2	True				
ANR	2522142	ParameterType	const char *		2522063	0					
ANR	2522143	Identifier	val		2522063	1					
ANR	2522144	CFGEntryNode	ENTRY		2522063		True				
ANR	2522145	CFGExitNode	EXIT		2522063		True				
ANR	2522146	Symbol	val		2522063						
ANR	2522147	Symbol	r_sign_item_new		2522063						
ANR	2522148	Symbol	r_sign_deserialize		2522063						
ANR	2522149	Symbol	item		2522063						
ANR	2522150	Symbol	ctx		2522063						
ANR	2522151	Symbol	false		2522063						
ANR	2522152	Symbol	ctx -> list		2522063						
ANR	2522153	Symbol	ctx -> anal		2522063						
ANR	2522154	Symbol	user		2522063						
ANR	2522155	Symbol	key		2522063						
ANR	2522156	Symbol	* ctx		2522063						
ANR	2522157	Function	r_sign_get_list	1515:0:35324:35539							
ANR	2522158	FunctionDef	r_sign_get_list (RAnal * a)		2522157	0					
ANR	2522159	CompoundStatement		1515:39:35363:35539	2522157	0					
ANR	2522160	ExpressionStatement	"r_return_val_if_fail ( a , NULL )"	1516:1:35366:35396	2522157	0	True				
ANR	2522161	CallExpression	"r_return_val_if_fail ( a , NULL )"		2522157	0					
ANR	2522162	Callee	r_return_val_if_fail		2522157	0					
ANR	2522163	Identifier	r_return_val_if_fail		2522157	0					
ANR	2522164	ArgumentList	a		2522157	1					
ANR	2522165	Argument	a		2522157	0					
ANR	2522166	Identifier	a		2522157	0					
ANR	2522167	Argument	NULL		2522157	1					
ANR	2522168	Identifier	NULL		2522157	0					
ANR	2522169	IdentifierDeclStatement	"struct ctxGetListCB ctx = { a , r_list_newf ( ( RListFree ) r_sign_item_free ) } ;"	1517:1:35399:35473	2522157	1	True				
ANR	2522170	IdentifierDecl	"ctx = { a , r_list_newf ( ( RListFree ) r_sign_item_free ) }"		2522157	0					
ANR	2522171	IdentifierDeclType	struct ctxGetListCB		2522157	0					
ANR	2522172	Identifier	ctx		2522157	1					
ANR	2522173	AssignmentExpression	"ctx = { a , r_list_newf ( ( RListFree ) r_sign_item_free ) }"		2522157	2		=			
ANR	2522174	Identifier	ctx		2522157	0					
ANR	2522175	InitializerList	a		2522157	1					
ANR	2522176	Identifier	a		2522157	0					
ANR	2522177	CallExpression	r_list_newf ( ( RListFree ) r_sign_item_free )		2522157	1					
ANR	2522178	Callee	r_list_newf		2522157	0					
ANR	2522179	Identifier	r_list_newf		2522157	0					
ANR	2522180	ArgumentList	( RListFree ) r_sign_item_free		2522157	1					
ANR	2522181	Argument	( RListFree ) r_sign_item_free		2522157	0					
ANR	2522182	CastExpression	( RListFree ) r_sign_item_free		2522157	0					
ANR	2522183	CastTarget	RListFree		2522157	0					
ANR	2522184	Identifier	r_sign_item_free		2522157	1					
ANR	2522185	ExpressionStatement	"sdb_foreach ( a -> sdb_zigns , listGetCB , & ctx )"	1518:1:35476:35519	2522157	2	True				
ANR	2522186	CallExpression	"sdb_foreach ( a -> sdb_zigns , listGetCB , & ctx )"		2522157	0					
ANR	2522187	Callee	sdb_foreach		2522157	0					
ANR	2522188	Identifier	sdb_foreach		2522157	0					
ANR	2522189	ArgumentList	a -> sdb_zigns		2522157	1					
ANR	2522190	Argument	a -> sdb_zigns		2522157	0					
ANR	2522191	PtrMemberAccess	a -> sdb_zigns		2522157	0					
ANR	2522192	Identifier	a		2522157	0					
ANR	2522193	Identifier	sdb_zigns		2522157	1					
ANR	2522194	Argument	listGetCB		2522157	1					
ANR	2522195	Identifier	listGetCB		2522157	0					
ANR	2522196	Argument	& ctx		2522157	2					
ANR	2522197	UnaryOperationExpression	& ctx		2522157	0					
ANR	2522198	UnaryOperator	&		2522157	0					
ANR	2522199	Identifier	ctx		2522157	1					
ANR	2522200	ReturnStatement	return ctx . list ;	1519:1:35522:35537	2522157	3	True				
ANR	2522201	MemberAccess	ctx . list		2522157	0					
ANR	2522202	Identifier	ctx		2522157	0					
ANR	2522203	Identifier	list		2522157	1					
ANR	2522204	ReturnType	R_API RList *		2522157	1					
ANR	2522205	Identifier	r_sign_get_list		2522157	2					
ANR	2522206	ParameterList	RAnal * a		2522157	3					
ANR	2522207	Parameter	RAnal * a	1515:29:35353:35360	2522157	0	True				
ANR	2522208	ParameterType	RAnal *		2522157	0					
ANR	2522209	Identifier	a		2522157	1					
ANR	2522210	CFGEntryNode	ENTRY		2522157		True				
ANR	2522211	CFGExitNode	EXIT		2522157		True				
ANR	2522212	Symbol	a		2522157						
ANR	2522213	Symbol	NULL		2522157						
ANR	2522214	Symbol	r_list_newf		2522157						
ANR	2522215	Symbol	ctx		2522157						
ANR	2522216	Symbol	listGetCB		2522157						
ANR	2522217	Symbol	r_sign_item_free		2522157						
ANR	2522218	Symbol	& ctx		2522157						
ANR	2522219	Symbol	* a		2522157						
ANR	2522220	Symbol	ctx . list		2522157						
ANR	2522221	Symbol	a -> sdb_zigns		2522157						
ANR	2522222	Function	cmpaddr	1522:0:35542:35660							
ANR	2522223	FunctionDef	"cmpaddr (const void * _a , const void * _b)"		2522222	0					
ANR	2522224	CompoundStatement		1522:51:35593:35660	2522222	0					
ANR	2522225	IdentifierDeclStatement	"const RAnalBlock * a = _a , * b = _b ;"	1523:1:35596:35629	2522222	0	True				
ANR	2522226	IdentifierDecl	* a = _a		2522222	0					
ANR	2522227	IdentifierDeclType	const RAnalBlock *		2522222	0					
ANR	2522228	Identifier	a		2522222	1					
ANR	2522229	AssignmentExpression	* a = _a		2522222	2		=			
ANR	2522230	Identifier	_a		2522222	0					
ANR	2522231	Identifier	_a		2522222	1					
ANR	2522232	IdentifierDecl	* b = _b		2522222	1					
ANR	2522233	IdentifierDeclType	const RAnalBlock *		2522222	0					
ANR	2522234	Identifier	b		2522222	1					
ANR	2522235	AssignmentExpression	* b = _b		2522222	2		=			
ANR	2522236	Identifier	_b		2522222	0					
ANR	2522237	Identifier	_b		2522222	1					
ANR	2522238	ReturnStatement	return ( a -> addr - b -> addr ) ;	1524:1:35632:35658	2522222	1	True				
ANR	2522239	AdditiveExpression	a -> addr - b -> addr		2522222	0		-			
ANR	2522240	PtrMemberAccess	a -> addr		2522222	0					
ANR	2522241	Identifier	a		2522222	0					
ANR	2522242	Identifier	addr		2522222	1					
ANR	2522243	PtrMemberAccess	b -> addr		2522222	1					
ANR	2522244	Identifier	b		2522222	0					
ANR	2522245	Identifier	addr		2522222	1					
ANR	2522246	ReturnType	static int		2522222	1					
ANR	2522247	Identifier	cmpaddr		2522222	2					
ANR	2522248	ParameterList	"const void * _a , const void * _b"		2522222	3					
ANR	2522249	Parameter	const void * _a	1522:19:35561:35574	2522222	0	True				
ANR	2522250	ParameterType	const void *		2522222	0					
ANR	2522251	Identifier	_a		2522222	1					
ANR	2522252	Parameter	const void * _b	1522:35:35577:35590	2522222	1	True				
ANR	2522253	ParameterType	const void *		2522222	0					
ANR	2522254	Identifier	_b		2522222	1					
ANR	2522255	CFGEntryNode	ENTRY		2522222		True				
ANR	2522256	CFGExitNode	EXIT		2522222		True				
ANR	2522257	Symbol	a		2522222						
ANR	2522258	Symbol	_a		2522222						
ANR	2522259	Symbol	b		2522222						
ANR	2522260	Symbol	_b		2522222						
ANR	2522261	Symbol	a -> addr		2522222						
ANR	2522262	Symbol	* a		2522222						
ANR	2522263	Symbol	* b		2522222						
ANR	2522264	Symbol	b -> addr		2522222						
ANR	2522265	Function	r_sign_calc_bbhash	1527:0:35663:36373							
ANR	2522266	FunctionDef	"r_sign_calc_bbhash (RAnal * a , RAnalFunction * fcn)"		2522265	0					
ANR	2522267	CompoundStatement		1527:61:35724:36373	2522265	0					
ANR	2522268	IdentifierDeclStatement	RListIter * iter = NULL ;	1528:1:35727:35749	2522265	0	True				
ANR	2522269	IdentifierDecl	* iter = NULL		2522265	0					
ANR	2522270	IdentifierDeclType	RListIter *		2522265	0					
ANR	2522271	Identifier	iter		2522265	1					
ANR	2522272	AssignmentExpression	* iter = NULL		2522265	2		=			
ANR	2522273	Identifier	NULL		2522265	0					
ANR	2522274	Identifier	NULL		2522265	1					
ANR	2522275	IdentifierDeclStatement	RAnalBlock * bbi = NULL ;	1529:1:35752:35774	2522265	1	True				
ANR	2522276	IdentifierDecl	* bbi = NULL		2522265	0					
ANR	2522277	IdentifierDeclType	RAnalBlock *		2522265	0					
ANR	2522278	Identifier	bbi		2522265	1					
ANR	2522279	AssignmentExpression	* bbi = NULL		2522265	2		=			
ANR	2522280	Identifier	NULL		2522265	0					
ANR	2522281	Identifier	NULL		2522265	1					
ANR	2522282	IdentifierDeclStatement	char * digest_hex = NULL ;	1530:1:35777:35800	2522265	2	True				
ANR	2522283	IdentifierDecl	* digest_hex = NULL		2522265	0					
ANR	2522284	IdentifierDeclType	char *		2522265	0					
ANR	2522285	Identifier	digest_hex		2522265	1					
ANR	2522286	AssignmentExpression	* digest_hex = NULL		2522265	2		=			
ANR	2522287	Identifier	NULL		2522265	0					
ANR	2522288	Identifier	NULL		2522265	1					
ANR	2522289	IdentifierDeclStatement	"RHash * ctx = r_hash_new ( true , R_ZIGN_HASH ) ;"	1531:1:35803:35846	2522265	3	True				
ANR	2522290	IdentifierDecl	"* ctx = r_hash_new ( true , R_ZIGN_HASH )"		2522265	0					
ANR	2522291	IdentifierDeclType	RHash *		2522265	0					
ANR	2522292	Identifier	ctx		2522265	1					
ANR	2522293	AssignmentExpression	"* ctx = r_hash_new ( true , R_ZIGN_HASH )"		2522265	2		=			
ANR	2522294	Identifier	ctx		2522265	0					
ANR	2522295	CallExpression	"r_hash_new ( true , R_ZIGN_HASH )"		2522265	1					
ANR	2522296	Callee	r_hash_new		2522265	0					
ANR	2522297	Identifier	r_hash_new		2522265	0					
ANR	2522298	ArgumentList	true		2522265	1					
ANR	2522299	Argument	true		2522265	0					
ANR	2522300	Identifier	true		2522265	0					
ANR	2522301	Argument	R_ZIGN_HASH		2522265	1					
ANR	2522302	Identifier	R_ZIGN_HASH		2522265	0					
ANR	2522303	IfStatement	if ( ! ctx )		2522265	4					
ANR	2522304	Condition	! ctx	1532:5:35853:35856	2522265	0	True				
ANR	2522305	UnaryOperationExpression	! ctx		2522265	0					
ANR	2522306	UnaryOperator	!		2522265	0					
ANR	2522307	Identifier	ctx		2522265	1					
ANR	2522308	CompoundStatement		6:11:134:134	2522265	1					
ANR	2522309	GotoStatement	goto beach ;	1533:2:35863:35873	2522265	0	True				
ANR	2522310	Identifier	beach		2522265	0					
ANR	2522311	ExpressionStatement	"r_list_sort ( fcn -> bbs , & cmpaddr )"	1535:1:35879:35911	2522265	5	True				
ANR	2522312	CallExpression	"r_list_sort ( fcn -> bbs , & cmpaddr )"		2522265	0					
ANR	2522313	Callee	r_list_sort		2522265	0					
ANR	2522314	Identifier	r_list_sort		2522265	0					
ANR	2522315	ArgumentList	fcn -> bbs		2522265	1					
ANR	2522316	Argument	fcn -> bbs		2522265	0					
ANR	2522317	PtrMemberAccess	fcn -> bbs		2522265	0					
ANR	2522318	Identifier	fcn		2522265	0					
ANR	2522319	Identifier	bbs		2522265	1					
ANR	2522320	Argument	& cmpaddr		2522265	1					
ANR	2522321	UnaryOperationExpression	& cmpaddr		2522265	0					
ANR	2522322	UnaryOperator	&		2522265	0					
ANR	2522323	Identifier	cmpaddr		2522265	1					
ANR	2522324	ExpressionStatement	"r_hash_do_begin ( ctx , R_ZIGN_HASH )"	1536:1:35914:35948	2522265	6	True				
ANR	2522325	CallExpression	"r_hash_do_begin ( ctx , R_ZIGN_HASH )"		2522265	0					
ANR	2522326	Callee	r_hash_do_begin		2522265	0					
ANR	2522327	Identifier	r_hash_do_begin		2522265	0					
ANR	2522328	ArgumentList	ctx		2522265	1					
ANR	2522329	Argument	ctx		2522265	0					
ANR	2522330	Identifier	ctx		2522265	0					
ANR	2522331	Argument	R_ZIGN_HASH		2522265	1					
ANR	2522332	Identifier	R_ZIGN_HASH		2522265	0					
ANR	2522333	Statement	r_list_foreach	1537:1:35951:35964	2522265	7	True				
ANR	2522334	Statement	(	1537:16:35966:35966	2522265	8	True				
ANR	2522335	Statement	fcn	1537:17:35967:35969	2522265	9	True				
ANR	2522336	Statement	->	1537:20:35970:35971	2522265	10	True				
ANR	2522337	Statement	bbs	1537:22:35972:35974	2522265	11	True				
ANR	2522338	Statement	","	1537:25:35975:35975	2522265	12	True				
ANR	2522339	Statement	iter	1537:27:35977:35980	2522265	13	True				
ANR	2522340	Statement	","	1537:31:35981:35981	2522265	14	True				
ANR	2522341	Statement	bbi	1537:33:35983:35985	2522265	15	True				
ANR	2522342	Statement	)	1537:36:35986:35986	2522265	16	True				
ANR	2522343	CompoundStatement		12:2:267:296	2522265	17					
ANR	2522344	IdentifierDeclStatement	ut8 * buf = malloc ( bbi -> size ) ;	1538:2:35992:36021	2522265	0	True				
ANR	2522345	IdentifierDecl	* buf = malloc ( bbi -> size )		2522265	0					
ANR	2522346	IdentifierDeclType	ut8 *		2522265	0					
ANR	2522347	Identifier	buf		2522265	1					
ANR	2522348	AssignmentExpression	* buf = malloc ( bbi -> size )		2522265	2		=			
ANR	2522349	Identifier	buf		2522265	0					
ANR	2522350	CallExpression	malloc ( bbi -> size )		2522265	1					
ANR	2522351	Callee	malloc		2522265	0					
ANR	2522352	Identifier	malloc		2522265	0					
ANR	2522353	ArgumentList	bbi -> size		2522265	1					
ANR	2522354	Argument	bbi -> size		2522265	0					
ANR	2522355	PtrMemberAccess	bbi -> size		2522265	0					
ANR	2522356	Identifier	bbi		2522265	0					
ANR	2522357	Identifier	size		2522265	1					
ANR	2522358	IfStatement	if ( ! buf )		2522265	1					
ANR	2522359	Condition	! buf	1539:6:36029:36032	2522265	0	True				
ANR	2522360	UnaryOperationExpression	! buf		2522265	0					
ANR	2522361	UnaryOperator	!		2522265	0					
ANR	2522362	Identifier	buf		2522265	1					
ANR	2522363	CompoundStatement		13:12:310:310	2522265	1					
ANR	2522364	GotoStatement	goto beach ;	1540:3:36040:36050	2522265	0	True				
ANR	2522365	Identifier	beach		2522265	0					
ANR	2522366	IfStatement	"if ( ! a -> iob . read_at ( a -> iob . io , bbi -> addr , buf , bbi -> size ) )"		2522265	2					
ANR	2522367	Condition	"! a -> iob . read_at ( a -> iob . io , bbi -> addr , buf , bbi -> size )"	1542:6:36062:36115	2522265	0	True				
ANR	2522368	UnaryOperationExpression	"! a -> iob . read_at ( a -> iob . io , bbi -> addr , buf , bbi -> size )"		2522265	0					
ANR	2522369	UnaryOperator	!		2522265	0					
ANR	2522370	CallExpression	"a -> iob . read_at ( a -> iob . io , bbi -> addr , buf , bbi -> size )"		2522265	1					
ANR	2522371	Callee	a -> iob . read_at		2522265	0					
ANR	2522372	MemberAccess	a -> iob . read_at		2522265	0					
ANR	2522373	PtrMemberAccess	a -> iob		2522265	0					
ANR	2522374	Identifier	a		2522265	0					
ANR	2522375	Identifier	iob		2522265	1					
ANR	2522376	Identifier	read_at		2522265	1					
ANR	2522377	ArgumentList	a -> iob . io		2522265	1					
ANR	2522378	Argument	a -> iob . io		2522265	0					
ANR	2522379	MemberAccess	a -> iob . io		2522265	0					
ANR	2522380	PtrMemberAccess	a -> iob		2522265	0					
ANR	2522381	Identifier	a		2522265	0					
ANR	2522382	Identifier	iob		2522265	1					
ANR	2522383	Identifier	io		2522265	1					
ANR	2522384	Argument	bbi -> addr		2522265	1					
ANR	2522385	PtrMemberAccess	bbi -> addr		2522265	0					
ANR	2522386	Identifier	bbi		2522265	0					
ANR	2522387	Identifier	addr		2522265	1					
ANR	2522388	Argument	buf		2522265	2					
ANR	2522389	Identifier	buf		2522265	0					
ANR	2522390	Argument	bbi -> size		2522265	3					
ANR	2522391	PtrMemberAccess	bbi -> size		2522265	0					
ANR	2522392	Identifier	bbi		2522265	0					
ANR	2522393	Identifier	size		2522265	1					
ANR	2522394	CompoundStatement		16:62:393:393	2522265	1					
ANR	2522395	GotoStatement	goto beach ;	1543:3:36123:36133	2522265	0	True				
ANR	2522396	Identifier	beach		2522265	0					
ANR	2522397	IfStatement	"if ( ! r_hash_do_sha256 ( ctx , buf , bbi -> size ) )"		2522265	3					
ANR	2522398	Condition	"! r_hash_do_sha256 ( ctx , buf , bbi -> size )"	1545:6:36145:36183	2522265	0	True				
ANR	2522399	UnaryOperationExpression	"! r_hash_do_sha256 ( ctx , buf , bbi -> size )"		2522265	0					
ANR	2522400	UnaryOperator	!		2522265	0					
ANR	2522401	CallExpression	"r_hash_do_sha256 ( ctx , buf , bbi -> size )"		2522265	1					
ANR	2522402	Callee	r_hash_do_sha256		2522265	0					
ANR	2522403	Identifier	r_hash_do_sha256		2522265	0					
ANR	2522404	ArgumentList	ctx		2522265	1					
ANR	2522405	Argument	ctx		2522265	0					
ANR	2522406	Identifier	ctx		2522265	0					
ANR	2522407	Argument	buf		2522265	1					
ANR	2522408	Identifier	buf		2522265	0					
ANR	2522409	Argument	bbi -> size		2522265	2					
ANR	2522410	PtrMemberAccess	bbi -> size		2522265	0					
ANR	2522411	Identifier	bbi		2522265	0					
ANR	2522412	Identifier	size		2522265	1					
ANR	2522413	CompoundStatement		19:47:461:461	2522265	1					
ANR	2522414	GotoStatement	goto beach ;	1546:3:36191:36201	2522265	0	True				
ANR	2522415	Identifier	beach		2522265	0					
ANR	2522416	ExpressionStatement	free ( buf )	1548:2:36209:36219	2522265	4	True				
ANR	2522417	CallExpression	free ( buf )		2522265	0					
ANR	2522418	Callee	free		2522265	0					
ANR	2522419	Identifier	free		2522265	0					
ANR	2522420	ArgumentList	buf		2522265	1					
ANR	2522421	Argument	buf		2522265	0					
ANR	2522422	Identifier	buf		2522265	0					
ANR	2522423	ExpressionStatement	"r_hash_do_end ( ctx , R_ZIGN_HASH )"	1550:1:36225:36257	2522265	18	True				
ANR	2522424	CallExpression	"r_hash_do_end ( ctx , R_ZIGN_HASH )"		2522265	0					
ANR	2522425	Callee	r_hash_do_end		2522265	0					
ANR	2522426	Identifier	r_hash_do_end		2522265	0					
ANR	2522427	ArgumentList	ctx		2522265	1					
ANR	2522428	Argument	ctx		2522265	0					
ANR	2522429	Identifier	ctx		2522265	0					
ANR	2522430	Argument	R_ZIGN_HASH		2522265	1					
ANR	2522431	Identifier	R_ZIGN_HASH		2522265	0					
ANR	2522432	ExpressionStatement	"digest_hex = r_hex_bin2strdup ( ctx -> digest , r_hash_size ( R_ZIGN_HASH ) )"	1552:1:36261:36331	2522265	19	True				
ANR	2522433	AssignmentExpression	"digest_hex = r_hex_bin2strdup ( ctx -> digest , r_hash_size ( R_ZIGN_HASH ) )"		2522265	0		=			
ANR	2522434	Identifier	digest_hex		2522265	0					
ANR	2522435	CallExpression	"r_hex_bin2strdup ( ctx -> digest , r_hash_size ( R_ZIGN_HASH ) )"		2522265	1					
ANR	2522436	Callee	r_hex_bin2strdup		2522265	0					
ANR	2522437	Identifier	r_hex_bin2strdup		2522265	0					
ANR	2522438	ArgumentList	ctx -> digest		2522265	1					
ANR	2522439	Argument	ctx -> digest		2522265	0					
ANR	2522440	PtrMemberAccess	ctx -> digest		2522265	0					
ANR	2522441	Identifier	ctx		2522265	0					
ANR	2522442	Identifier	digest		2522265	1					
ANR	2522443	Argument	r_hash_size ( R_ZIGN_HASH )		2522265	1					
ANR	2522444	CallExpression	r_hash_size ( R_ZIGN_HASH )		2522265	0					
ANR	2522445	Callee	r_hash_size		2522265	0					
ANR	2522446	Identifier	r_hash_size		2522265	0					
ANR	2522447	ArgumentList	R_ZIGN_HASH		2522265	1					
ANR	2522448	Argument	R_ZIGN_HASH		2522265	0					
ANR	2522449	Identifier	R_ZIGN_HASH		2522265	0					
ANR	2522450	Label	beach :	1553:0:36333:36338	2522265	20	True				
ANR	2522451	Identifier	beach		2522265	0					
ANR	2522452	ExpressionStatement	free ( ctx )	1554:1:36341:36351	2522265	21	True				
ANR	2522453	CallExpression	free ( ctx )		2522265	0					
ANR	2522454	Callee	free		2522265	0					
ANR	2522455	Identifier	free		2522265	0					
ANR	2522456	ArgumentList	ctx		2522265	1					
ANR	2522457	Argument	ctx		2522265	0					
ANR	2522458	Identifier	ctx		2522265	0					
ANR	2522459	ReturnStatement	return digest_hex ;	1555:1:36354:36371	2522265	22	True				
ANR	2522460	Identifier	digest_hex		2522265	0					
ANR	2522461	ReturnType	R_API char *		2522265	1					
ANR	2522462	Identifier	r_sign_calc_bbhash		2522265	2					
ANR	2522463	ParameterList	"RAnal * a , RAnalFunction * fcn"		2522265	3					
ANR	2522464	Parameter	RAnal * a	1527:31:35694:35701	2522265	0	True				
ANR	2522465	ParameterType	RAnal *		2522265	0					
ANR	2522466	Identifier	a		2522265	1					
ANR	2522467	Parameter	RAnalFunction * fcn	1527:41:35704:35721	2522265	1	True				
ANR	2522468	ParameterType	RAnalFunction *		2522265	0					
ANR	2522469	Identifier	fcn		2522265	1					
ANR	2522470	CFGEntryNode	ENTRY		2522265		True				
ANR	2522471	CFGExitNode	EXIT		2522265		True				
ANR	2522472	Symbol	* fcn		2522265						
ANR	2522473	Symbol	bbi -> size		2522265						
ANR	2522474	Symbol	r_hex_bin2strdup		2522265						
ANR	2522475	Symbol	r_hash_size		2522265						
ANR	2522476	Symbol	a -> iob . read_at		2522265						
ANR	2522477	Symbol	fcn		2522265						
ANR	2522478	Symbol	& cmpaddr		2522265						
ANR	2522479	Symbol	ctx -> digest		2522265						
ANR	2522480	Symbol	digest_hex		2522265						
ANR	2522481	Symbol	r_hash_do_sha256		2522265						
ANR	2522482	Symbol	bbi -> addr		2522265						
ANR	2522483	Symbol	a		2522265						
ANR	2522484	Symbol	malloc		2522265						
ANR	2522485	Symbol	NULL		2522265						
ANR	2522486	Symbol	ctx		2522265						
ANR	2522487	Symbol	bbi		2522265						
ANR	2522488	Symbol	iter		2522265						
ANR	2522489	Symbol	a -> iob . io		2522265						
ANR	2522490	Symbol	* a		2522265						
ANR	2522491	Symbol	* bbi		2522265						
ANR	2522492	Symbol	* ctx		2522265						
ANR	2522493	Symbol	r_hash_new		2522265						
ANR	2522494	Symbol	a -> iob		2522265						
ANR	2522495	Symbol	buf		2522265						
ANR	2522496	Symbol	fcn -> bbs		2522265						
ANR	2522497	Symbol	true		2522265						
ANR	2522498	Symbol	R_ZIGN_HASH		2522265						
ANR	2522499	ClassDef	ctxCountForCB	1558:0:36376:36447							
ANR	2522500	DeclStmt									
ANR	2522501	Decl							RAnal	RAnal *	anal
ANR	2522502	DeclStmt									
ANR	2522503	Decl							const RSpace	const RSpace *	space
ANR	2522504	DeclStmt									
ANR	2522505	Decl							int	int	count
ANR	2522506	Function	countForCB	1564:0:36451:36815							
ANR	2522507	FunctionDef	"countForCB (void * user , const char * k , const char * v)"		2522506	0					
ANR	2522508	CompoundStatement		1564:64:36515:36815	2522506	0					
ANR	2522509	IdentifierDeclStatement	struct ctxCountForCB * ctx = ( struct ctxCountForCB * ) user ;	1565:1:36518:36575	2522506	0	True				
ANR	2522510	IdentifierDecl	* ctx = ( struct ctxCountForCB * ) user		2522506	0					
ANR	2522511	IdentifierDeclType	struct ctxCountForCB *		2522506	0					
ANR	2522512	Identifier	ctx		2522506	1					
ANR	2522513	AssignmentExpression	* ctx = ( struct ctxCountForCB * ) user		2522506	2		=			
ANR	2522514	Identifier	ctx		2522506	0					
ANR	2522515	CastExpression	( struct ctxCountForCB * ) user		2522506	1					
ANR	2522516	CastTarget	struct ctxCountForCB *		2522506	0					
ANR	2522517	Identifier	user		2522506	1					
ANR	2522518	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	1566:1:36578:36612	2522506	1	True				
ANR	2522519	IdentifierDecl	* it = r_sign_item_new ( )		2522506	0					
ANR	2522520	IdentifierDeclType	RSignItem *		2522506	0					
ANR	2522521	Identifier	it		2522506	1					
ANR	2522522	AssignmentExpression	* it = r_sign_item_new ( )		2522506	2		=			
ANR	2522523	Identifier	it		2522506	0					
ANR	2522524	CallExpression	r_sign_item_new ( )		2522506	1					
ANR	2522525	Callee	r_sign_item_new		2522506	0					
ANR	2522526	Identifier	r_sign_item_new		2522506	0					
ANR	2522527	ArgumentList			2522506	1					
ANR	2522528	IfStatement	"if ( r_sign_deserialize ( ctx -> anal , it , k , v ) )"		2522506	2					
ANR	2522529	Condition	"r_sign_deserialize ( ctx -> anal , it , k , v )"	1568:5:36620:36659	2522506	0	True				
ANR	2522530	CallExpression	"r_sign_deserialize ( ctx -> anal , it , k , v )"		2522506	0					
ANR	2522531	Callee	r_sign_deserialize		2522506	0					
ANR	2522532	Identifier	r_sign_deserialize		2522506	0					
ANR	2522533	ArgumentList	ctx -> anal		2522506	1					
ANR	2522534	Argument	ctx -> anal		2522506	0					
ANR	2522535	PtrMemberAccess	ctx -> anal		2522506	0					
ANR	2522536	Identifier	ctx		2522506	0					
ANR	2522537	Identifier	anal		2522506	1					
ANR	2522538	Argument	it		2522506	1					
ANR	2522539	Identifier	it		2522506	0					
ANR	2522540	Argument	k		2522506	2					
ANR	2522541	Identifier	k		2522506	0					
ANR	2522542	Argument	v		2522506	3					
ANR	2522543	Identifier	v		2522506	0					
ANR	2522544	CompoundStatement		5:47:146:146	2522506	1					
ANR	2522545	IfStatement	if ( it -> space == ctx -> space )		2522506	0					
ANR	2522546	Condition	it -> space == ctx -> space	1569:6:36670:36692	2522506	0	True				
ANR	2522547	EqualityExpression	it -> space == ctx -> space		2522506	0		==			
ANR	2522548	PtrMemberAccess	it -> space		2522506	0					
ANR	2522549	Identifier	it		2522506	0					
ANR	2522550	Identifier	space		2522506	1					
ANR	2522551	PtrMemberAccess	ctx -> space		2522506	1					
ANR	2522552	Identifier	ctx		2522506	0					
ANR	2522553	Identifier	space		2522506	1					
ANR	2522554	CompoundStatement		6:31:179:179	2522506	1					
ANR	2522555	ExpressionStatement	ctx -> count ++	1570:3:36700:36712	2522506	0	True				
ANR	2522556	PostIncDecOperationExpression	ctx -> count ++		2522506	0					
ANR	2522557	PtrMemberAccess	ctx -> count		2522506	0					
ANR	2522558	Identifier	ctx		2522506	0					
ANR	2522559	Identifier	count		2522506	1					
ANR	2522560	IncDec	++		2522506	1					
ANR	2522561	ElseStatement	else		2522506	0					
ANR	2522562	CompoundStatement		9:8:210:210	2522506	0					
ANR	2522563	ExpressionStatement	"eprintf ( ""error: cannot deserialize zign\\n"" )"	1573:2:36730:36774	2522506	0	True				
ANR	2522564	CallExpression	"eprintf ( ""error: cannot deserialize zign\\n"" )"		2522506	0					
ANR	2522565	Callee	eprintf		2522506	0					
ANR	2522566	Identifier	eprintf		2522506	0					
ANR	2522567	ArgumentList	"""error: cannot deserialize zign\\n"""		2522506	1					
ANR	2522568	Argument	"""error: cannot deserialize zign\\n"""		2522506	0					
ANR	2522569	PrimaryExpression	"""error: cannot deserialize zign\\n"""		2522506	0					
ANR	2522570	ExpressionStatement	r_sign_item_free ( it )	1575:1:36780:36801	2522506	3	True				
ANR	2522571	CallExpression	r_sign_item_free ( it )		2522506	0					
ANR	2522572	Callee	r_sign_item_free		2522506	0					
ANR	2522573	Identifier	r_sign_item_free		2522506	0					
ANR	2522574	ArgumentList	it		2522506	1					
ANR	2522575	Argument	it		2522506	0					
ANR	2522576	Identifier	it		2522506	0					
ANR	2522577	ReturnStatement	return 1 ;	1577:1:36805:36813	2522506	4	True				
ANR	2522578	PrimaryExpression	1		2522506	0					
ANR	2522579	ReturnType	static int		2522506	1					
ANR	2522580	Identifier	countForCB		2522506	2					
ANR	2522581	ParameterList	"void * user , const char * k , const char * v"		2522506	3					
ANR	2522582	Parameter	void * user	1564:22:36473:36482	2522506	0	True				
ANR	2522583	ParameterType	void *		2522506	0					
ANR	2522584	Identifier	user		2522506	1					
ANR	2522585	Parameter	const char * k	1564:34:36485:36497	2522506	1	True				
ANR	2522586	ParameterType	const char *		2522506	0					
ANR	2522587	Identifier	k		2522506	1					
ANR	2522588	Parameter	const char * v	1564:49:36500:36512	2522506	2	True				
ANR	2522589	ParameterType	const char *		2522506	0					
ANR	2522590	Identifier	v		2522506	1					
ANR	2522591	CFGEntryNode	ENTRY		2522506		True				
ANR	2522592	CFGExitNode	EXIT		2522506		True				
ANR	2522593	Symbol	r_sign_item_new		2522506						
ANR	2522594	Symbol	ctx		2522506						
ANR	2522595	Symbol	ctx -> anal		2522506						
ANR	2522596	Symbol	k		2522506						
ANR	2522597	Symbol	it		2522506						
ANR	2522598	Symbol	* ctx		2522506						
ANR	2522599	Symbol	r_sign_deserialize		2522506						
ANR	2522600	Symbol	it -> space		2522506						
ANR	2522601	Symbol	ctx -> count		2522506						
ANR	2522602	Symbol	* it		2522506						
ANR	2522603	Symbol	v		2522506						
ANR	2522604	Symbol	ctx -> space		2522506						
ANR	2522605	Symbol	user		2522506						
ANR	2522606	Function	r_sign_space_count_for	1580:0:36818:37025							
ANR	2522607	FunctionDef	"r_sign_space_count_for (RAnal * a , const RSpace * space)"		2522606	0					
ANR	2522608	CompoundStatement		1580:64:36882:37025	2522606	0					
ANR	2522609	IdentifierDeclStatement	"struct ctxCountForCB ctx = { a , space , 0 } ;"	1581:1:36885:36927	2522606	0	True				
ANR	2522610	IdentifierDecl	"ctx = { a , space , 0 }"		2522606	0					
ANR	2522611	IdentifierDeclType	struct ctxCountForCB		2522606	0					
ANR	2522612	Identifier	ctx		2522606	1					
ANR	2522613	AssignmentExpression	"ctx = { a , space , 0 }"		2522606	2		=			
ANR	2522614	Identifier	ctx		2522606	0					
ANR	2522615	InitializerList	a		2522606	1					
ANR	2522616	Identifier	a		2522606	0					
ANR	2522617	Identifier	space		2522606	1					
ANR	2522618	PrimaryExpression	0		2522606	2					
ANR	2522619	ExpressionStatement	"r_return_val_if_fail ( a , 0 )"	1582:1:36930:36957	2522606	1	True				
ANR	2522620	CallExpression	"r_return_val_if_fail ( a , 0 )"		2522606	0					
ANR	2522621	Callee	r_return_val_if_fail		2522606	0					
ANR	2522622	Identifier	r_return_val_if_fail		2522606	0					
ANR	2522623	ArgumentList	a		2522606	1					
ANR	2522624	Argument	a		2522606	0					
ANR	2522625	Identifier	a		2522606	0					
ANR	2522626	Argument	0		2522606	1					
ANR	2522627	PrimaryExpression	0		2522606	0					
ANR	2522628	ExpressionStatement	"sdb_foreach ( a -> sdb_zigns , countForCB , & ctx )"	1583:1:36960:37004	2522606	2	True				
ANR	2522629	CallExpression	"sdb_foreach ( a -> sdb_zigns , countForCB , & ctx )"		2522606	0					
ANR	2522630	Callee	sdb_foreach		2522606	0					
ANR	2522631	Identifier	sdb_foreach		2522606	0					
ANR	2522632	ArgumentList	a -> sdb_zigns		2522606	1					
ANR	2522633	Argument	a -> sdb_zigns		2522606	0					
ANR	2522634	PtrMemberAccess	a -> sdb_zigns		2522606	0					
ANR	2522635	Identifier	a		2522606	0					
ANR	2522636	Identifier	sdb_zigns		2522606	1					
ANR	2522637	Argument	countForCB		2522606	1					
ANR	2522638	Identifier	countForCB		2522606	0					
ANR	2522639	Argument	& ctx		2522606	2					
ANR	2522640	UnaryOperationExpression	& ctx		2522606	0					
ANR	2522641	UnaryOperator	&		2522606	0					
ANR	2522642	Identifier	ctx		2522606	1					
ANR	2522643	ReturnStatement	return ctx . count ;	1584:1:37007:37023	2522606	3	True				
ANR	2522644	MemberAccess	ctx . count		2522606	0					
ANR	2522645	Identifier	ctx		2522606	0					
ANR	2522646	Identifier	count		2522606	1					
ANR	2522647	ReturnType	R_API int		2522606	1					
ANR	2522648	Identifier	r_sign_space_count_for		2522606	2					
ANR	2522649	ParameterList	"RAnal * a , const RSpace * space"		2522606	3					
ANR	2522650	Parameter	RAnal * a	1580:33:36851:36858	2522606	0	True				
ANR	2522651	ParameterType	RAnal *		2522606	0					
ANR	2522652	Identifier	a		2522606	1					
ANR	2522653	Parameter	const RSpace * space	1580:43:36861:36879	2522606	1	True				
ANR	2522654	ParameterType	const RSpace *		2522606	0					
ANR	2522655	Identifier	space		2522606	1					
ANR	2522656	CFGEntryNode	ENTRY		2522606		True				
ANR	2522657	CFGExitNode	EXIT		2522606		True				
ANR	2522658	Symbol	a		2522606						
ANR	2522659	Symbol	countForCB		2522606						
ANR	2522660	Symbol	ctx		2522606						
ANR	2522661	Symbol	ctx . count		2522606						
ANR	2522662	Symbol	& ctx		2522606						
ANR	2522663	Symbol	* a		2522606						
ANR	2522664	Symbol	space		2522606						
ANR	2522665	Symbol	a -> sdb_zigns		2522606						
ANR	2522666	ClassDef	ctxUnsetForCB	1587:0:37028:37087							
ANR	2522667	DeclStmt									
ANR	2522668	Decl							RAnal	RAnal *	anal
ANR	2522669	DeclStmt									
ANR	2522670	Decl							const RSpace	const RSpace *	space
ANR	2522671	Function	unsetForCB	1592:0:37091:37647							
ANR	2522672	FunctionDef	"unsetForCB (void * user , const char * k , const char * v)"		2522671	0					
ANR	2522673	CompoundStatement		1592:64:37155:37647	2522671	0					
ANR	2522674	IdentifierDeclStatement	struct ctxUnsetForCB * ctx = ( struct ctxUnsetForCB * ) user ;	1593:1:37158:37215	2522671	0	True				
ANR	2522675	IdentifierDecl	* ctx = ( struct ctxUnsetForCB * ) user		2522671	0					
ANR	2522676	IdentifierDeclType	struct ctxUnsetForCB *		2522671	0					
ANR	2522677	Identifier	ctx		2522671	1					
ANR	2522678	AssignmentExpression	* ctx = ( struct ctxUnsetForCB * ) user		2522671	2		=			
ANR	2522679	Identifier	ctx		2522671	0					
ANR	2522680	CastExpression	( struct ctxUnsetForCB * ) user		2522671	1					
ANR	2522681	CastTarget	struct ctxUnsetForCB *		2522671	0					
ANR	2522682	Identifier	user		2522671	1					
ANR	2522683	IdentifierDeclStatement	"char nk [ R_SIGN_KEY_MAXSZ ] , nv [ R_SIGN_VAL_MAXSZ ] ;"	1594:1:37218:37265	2522671	1	True				
ANR	2522684	IdentifierDecl	nk [ R_SIGN_KEY_MAXSZ ]		2522671	0					
ANR	2522685	IdentifierDeclType	char [ R_SIGN_KEY_MAXSZ ]		2522671	0					
ANR	2522686	Identifier	nk		2522671	1					
ANR	2522687	Identifier	R_SIGN_KEY_MAXSZ		2522671	2					
ANR	2522688	IdentifierDecl	nv [ R_SIGN_VAL_MAXSZ ]		2522671	1					
ANR	2522689	IdentifierDeclType	char [ R_SIGN_VAL_MAXSZ ]		2522671	0					
ANR	2522690	Identifier	nv		2522671	1					
ANR	2522691	Identifier	R_SIGN_VAL_MAXSZ		2522671	2					
ANR	2522692	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	1595:1:37268:37302	2522671	2	True				
ANR	2522693	IdentifierDecl	* it = r_sign_item_new ( )		2522671	0					
ANR	2522694	IdentifierDeclType	RSignItem *		2522671	0					
ANR	2522695	Identifier	it		2522671	1					
ANR	2522696	AssignmentExpression	* it = r_sign_item_new ( )		2522671	2		=			
ANR	2522697	Identifier	it		2522671	0					
ANR	2522698	CallExpression	r_sign_item_new ( )		2522671	1					
ANR	2522699	Callee	r_sign_item_new		2522671	0					
ANR	2522700	Identifier	r_sign_item_new		2522671	0					
ANR	2522701	ArgumentList			2522671	1					
ANR	2522702	IdentifierDeclStatement	Sdb * db = ctx -> anal -> sdb_zigns ;	1596:1:37305:37335	2522671	3	True				
ANR	2522703	IdentifierDecl	* db = ctx -> anal -> sdb_zigns		2522671	0					
ANR	2522704	IdentifierDeclType	Sdb *		2522671	0					
ANR	2522705	Identifier	db		2522671	1					
ANR	2522706	AssignmentExpression	* db = ctx -> anal -> sdb_zigns		2522671	2		=			
ANR	2522707	Identifier	db		2522671	0					
ANR	2522708	PtrMemberAccess	ctx -> anal -> sdb_zigns		2522671	1					
ANR	2522709	PtrMemberAccess	ctx -> anal		2522671	0					
ANR	2522710	Identifier	ctx		2522671	0					
ANR	2522711	Identifier	anal		2522671	1					
ANR	2522712	Identifier	sdb_zigns		2522671	1					
ANR	2522713	IfStatement	"if ( r_sign_deserialize ( ctx -> anal , it , k , v ) )"		2522671	4					
ANR	2522714	Condition	"r_sign_deserialize ( ctx -> anal , it , k , v )"	1598:5:37343:37382	2522671	0	True				
ANR	2522715	CallExpression	"r_sign_deserialize ( ctx -> anal , it , k , v )"		2522671	0					
ANR	2522716	Callee	r_sign_deserialize		2522671	0					
ANR	2522717	Identifier	r_sign_deserialize		2522671	0					
ANR	2522718	ArgumentList	ctx -> anal		2522671	1					
ANR	2522719	Argument	ctx -> anal		2522671	0					
ANR	2522720	PtrMemberAccess	ctx -> anal		2522671	0					
ANR	2522721	Identifier	ctx		2522671	0					
ANR	2522722	Identifier	anal		2522671	1					
ANR	2522723	Argument	it		2522671	1					
ANR	2522724	Identifier	it		2522671	0					
ANR	2522725	Argument	k		2522671	2					
ANR	2522726	Identifier	k		2522671	0					
ANR	2522727	Argument	v		2522671	3					
ANR	2522728	Identifier	v		2522671	0					
ANR	2522729	CompoundStatement		7:47:229:229	2522671	1					
ANR	2522730	IfStatement	if ( it -> space && it -> space == ctx -> space )		2522671	0					
ANR	2522731	Condition	it -> space && it -> space == ctx -> space	1599:6:37393:37428	2522671	0	True				
ANR	2522732	AndExpression	it -> space && it -> space == ctx -> space		2522671	0		&&			
ANR	2522733	PtrMemberAccess	it -> space		2522671	0					
ANR	2522734	Identifier	it		2522671	0					
ANR	2522735	Identifier	space		2522671	1					
ANR	2522736	EqualityExpression	it -> space == ctx -> space		2522671	1		==			
ANR	2522737	PtrMemberAccess	it -> space		2522671	0					
ANR	2522738	Identifier	it		2522671	0					
ANR	2522739	Identifier	space		2522671	1					
ANR	2522740	PtrMemberAccess	ctx -> space		2522671	1					
ANR	2522741	Identifier	ctx		2522671	0					
ANR	2522742	Identifier	space		2522671	1					
ANR	2522743	CompoundStatement		8:44:275:275	2522671	1					
ANR	2522744	ExpressionStatement	it -> space = NULL	1600:3:37436:37452	2522671	0	True				
ANR	2522745	AssignmentExpression	it -> space = NULL		2522671	0		=			
ANR	2522746	PtrMemberAccess	it -> space		2522671	0					
ANR	2522747	Identifier	it		2522671	0					
ANR	2522748	Identifier	space		2522671	1					
ANR	2522749	Identifier	NULL		2522671	1					
ANR	2522750	ExpressionStatement	"serialize ( ctx -> anal , it , nk , nv )"	1601:3:37457:37490	2522671	1	True				
ANR	2522751	CallExpression	"serialize ( ctx -> anal , it , nk , nv )"		2522671	0					
ANR	2522752	Callee	serialize		2522671	0					
ANR	2522753	Identifier	serialize		2522671	0					
ANR	2522754	ArgumentList	ctx -> anal		2522671	1					
ANR	2522755	Argument	ctx -> anal		2522671	0					
ANR	2522756	PtrMemberAccess	ctx -> anal		2522671	0					
ANR	2522757	Identifier	ctx		2522671	0					
ANR	2522758	Identifier	anal		2522671	1					
ANR	2522759	Argument	it		2522671	1					
ANR	2522760	Identifier	it		2522671	0					
ANR	2522761	Argument	nk		2522671	2					
ANR	2522762	Identifier	nk		2522671	0					
ANR	2522763	Argument	nv		2522671	3					
ANR	2522764	Identifier	nv		2522671	0					
ANR	2522765	ExpressionStatement	"sdb_remove ( db , k , 0 )"	1602:3:37495:37516	2522671	2	True				
ANR	2522766	CallExpression	"sdb_remove ( db , k , 0 )"		2522671	0					
ANR	2522767	Callee	sdb_remove		2522671	0					
ANR	2522768	Identifier	sdb_remove		2522671	0					
ANR	2522769	ArgumentList	db		2522671	1					
ANR	2522770	Argument	db		2522671	0					
ANR	2522771	Identifier	db		2522671	0					
ANR	2522772	Argument	k		2522671	1					
ANR	2522773	Identifier	k		2522671	0					
ANR	2522774	Argument	0		2522671	2					
ANR	2522775	PrimaryExpression	0		2522671	0					
ANR	2522776	ExpressionStatement	"sdb_set ( db , nk , nv , 0 )"	1603:3:37521:37544	2522671	3	True				
ANR	2522777	CallExpression	"sdb_set ( db , nk , nv , 0 )"		2522671	0					
ANR	2522778	Callee	sdb_set		2522671	0					
ANR	2522779	Identifier	sdb_set		2522671	0					
ANR	2522780	ArgumentList	db		2522671	1					
ANR	2522781	Argument	db		2522671	0					
ANR	2522782	Identifier	db		2522671	0					
ANR	2522783	Argument	nk		2522671	1					
ANR	2522784	Identifier	nk		2522671	0					
ANR	2522785	Argument	nv		2522671	2					
ANR	2522786	Identifier	nv		2522671	0					
ANR	2522787	Argument	0		2522671	3					
ANR	2522788	PrimaryExpression	0		2522671	0					
ANR	2522789	ElseStatement	else		2522671	0					
ANR	2522790	CompoundStatement		14:8:402:402	2522671	0					
ANR	2522791	ExpressionStatement	"eprintf ( ""error: cannot deserialize zign\\n"" )"	1606:2:37562:37606	2522671	0	True				
ANR	2522792	CallExpression	"eprintf ( ""error: cannot deserialize zign\\n"" )"		2522671	0					
ANR	2522793	Callee	eprintf		2522671	0					
ANR	2522794	Identifier	eprintf		2522671	0					
ANR	2522795	ArgumentList	"""error: cannot deserialize zign\\n"""		2522671	1					
ANR	2522796	Argument	"""error: cannot deserialize zign\\n"""		2522671	0					
ANR	2522797	PrimaryExpression	"""error: cannot deserialize zign\\n"""		2522671	0					
ANR	2522798	ExpressionStatement	r_sign_item_free ( it )	1608:1:37612:37633	2522671	5	True				
ANR	2522799	CallExpression	r_sign_item_free ( it )		2522671	0					
ANR	2522800	Callee	r_sign_item_free		2522671	0					
ANR	2522801	Identifier	r_sign_item_free		2522671	0					
ANR	2522802	ArgumentList	it		2522671	1					
ANR	2522803	Argument	it		2522671	0					
ANR	2522804	Identifier	it		2522671	0					
ANR	2522805	ReturnStatement	return 1 ;	1610:1:37637:37645	2522671	6	True				
ANR	2522806	PrimaryExpression	1		2522671	0					
ANR	2522807	ReturnType	static int		2522671	1					
ANR	2522808	Identifier	unsetForCB		2522671	2					
ANR	2522809	ParameterList	"void * user , const char * k , const char * v"		2522671	3					
ANR	2522810	Parameter	void * user	1592:22:37113:37122	2522671	0	True				
ANR	2522811	ParameterType	void *		2522671	0					
ANR	2522812	Identifier	user		2522671	1					
ANR	2522813	Parameter	const char * k	1592:34:37125:37137	2522671	1	True				
ANR	2522814	ParameterType	const char *		2522671	0					
ANR	2522815	Identifier	k		2522671	1					
ANR	2522816	Parameter	const char * v	1592:49:37140:37152	2522671	2	True				
ANR	2522817	ParameterType	const char *		2522671	0					
ANR	2522818	Identifier	v		2522671	1					
ANR	2522819	CFGEntryNode	ENTRY		2522671		True				
ANR	2522820	CFGExitNode	EXIT		2522671		True				
ANR	2522821	Symbol	r_sign_item_new		2522671						
ANR	2522822	Symbol	* ctx -> anal		2522671						
ANR	2522823	Symbol	NULL		2522671						
ANR	2522824	Symbol	ctx		2522671						
ANR	2522825	Symbol	nv		2522671						
ANR	2522826	Symbol	ctx -> anal -> sdb_zigns		2522671						
ANR	2522827	Symbol	ctx -> anal		2522671						
ANR	2522828	Symbol	k		2522671						
ANR	2522829	Symbol	it		2522671						
ANR	2522830	Symbol	* ctx		2522671						
ANR	2522831	Symbol	r_sign_deserialize		2522671						
ANR	2522832	Symbol	it -> space		2522671						
ANR	2522833	Symbol	* it		2522671						
ANR	2522834	Symbol	v		2522671						
ANR	2522835	Symbol	ctx -> space		2522671						
ANR	2522836	Symbol	* * ctx		2522671						
ANR	2522837	Symbol	user		2522671						
ANR	2522838	Symbol	nk		2522671						
ANR	2522839	Symbol	db		2522671						
ANR	2522840	Function	r_sign_space_unset_for	1613:0:37650:37829							
ANR	2522841	FunctionDef	"r_sign_space_unset_for (RAnal * a , const RSpace * space)"		2522840	0					
ANR	2522842	CompoundStatement		1613:65:37715:37829	2522840	0					
ANR	2522843	ExpressionStatement	r_return_if_fail ( a )	1614:1:37718:37738	2522840	0	True				
ANR	2522844	CallExpression	r_return_if_fail ( a )		2522840	0					
ANR	2522845	Callee	r_return_if_fail		2522840	0					
ANR	2522846	Identifier	r_return_if_fail		2522840	0					
ANR	2522847	ArgumentList	a		2522840	1					
ANR	2522848	Argument	a		2522840	0					
ANR	2522849	Identifier	a		2522840	0					
ANR	2522850	IdentifierDeclStatement	"struct ctxUnsetForCB ctx = { a , space } ;"	1615:1:37741:37780	2522840	1	True				
ANR	2522851	IdentifierDecl	"ctx = { a , space }"		2522840	0					
ANR	2522852	IdentifierDeclType	struct ctxUnsetForCB		2522840	0					
ANR	2522853	Identifier	ctx		2522840	1					
ANR	2522854	AssignmentExpression	"ctx = { a , space }"		2522840	2		=			
ANR	2522855	Identifier	ctx		2522840	0					
ANR	2522856	InitializerList	a		2522840	1					
ANR	2522857	Identifier	a		2522840	0					
ANR	2522858	Identifier	space		2522840	1					
ANR	2522859	ExpressionStatement	"sdb_foreach ( a -> sdb_zigns , unsetForCB , & ctx )"	1616:1:37783:37827	2522840	2	True				
ANR	2522860	CallExpression	"sdb_foreach ( a -> sdb_zigns , unsetForCB , & ctx )"		2522840	0					
ANR	2522861	Callee	sdb_foreach		2522840	0					
ANR	2522862	Identifier	sdb_foreach		2522840	0					
ANR	2522863	ArgumentList	a -> sdb_zigns		2522840	1					
ANR	2522864	Argument	a -> sdb_zigns		2522840	0					
ANR	2522865	PtrMemberAccess	a -> sdb_zigns		2522840	0					
ANR	2522866	Identifier	a		2522840	0					
ANR	2522867	Identifier	sdb_zigns		2522840	1					
ANR	2522868	Argument	unsetForCB		2522840	1					
ANR	2522869	Identifier	unsetForCB		2522840	0					
ANR	2522870	Argument	& ctx		2522840	2					
ANR	2522871	UnaryOperationExpression	& ctx		2522840	0					
ANR	2522872	UnaryOperator	&		2522840	0					
ANR	2522873	Identifier	ctx		2522840	1					
ANR	2522874	ReturnType	R_API void		2522840	1					
ANR	2522875	Identifier	r_sign_space_unset_for		2522840	2					
ANR	2522876	ParameterList	"RAnal * a , const RSpace * space"		2522840	3					
ANR	2522877	Parameter	RAnal * a	1613:34:37684:37691	2522840	0	True				
ANR	2522878	ParameterType	RAnal *		2522840	0					
ANR	2522879	Identifier	a		2522840	1					
ANR	2522880	Parameter	const RSpace * space	1613:44:37694:37712	2522840	1	True				
ANR	2522881	ParameterType	const RSpace *		2522840	0					
ANR	2522882	Identifier	space		2522840	1					
ANR	2522883	CFGEntryNode	ENTRY		2522840		True				
ANR	2522884	CFGExitNode	EXIT		2522840		True				
ANR	2522885	Symbol	a		2522840						
ANR	2522886	Symbol	ctx		2522840						
ANR	2522887	Symbol	& ctx		2522840						
ANR	2522888	Symbol	unsetForCB		2522840						
ANR	2522889	Symbol	* a		2522840						
ANR	2522890	Symbol	space		2522840						
ANR	2522891	Symbol	a -> sdb_zigns		2522840						
ANR	2522892	ClassDef	ctxRenameForCB	1619:0:37832:37936							
ANR	2522893	DeclStmt									
ANR	2522894	Decl							RAnal	RAnal *	anal
ANR	2522895	DeclStmt									
ANR	2522896	Decl							char	char [ R_SIGN_KEY_MAXSZ ]	oprefix
ANR	2522897	DeclStmt									
ANR	2522898	Decl							char	char [ R_SIGN_KEY_MAXSZ ]	nprefix
ANR	2522899	Function	renameForCB	1625:0:37940:38456							
ANR	2522900	FunctionDef	"renameForCB (void * user , const char * k , const char * v)"		2522899	0					
ANR	2522901	CompoundStatement		1625:65:38005:38456	2522899	0					
ANR	2522902	IdentifierDeclStatement	struct ctxRenameForCB * ctx = ( struct ctxRenameForCB * ) user ;	1626:1:38008:38067	2522899	0	True				
ANR	2522903	IdentifierDecl	* ctx = ( struct ctxRenameForCB * ) user		2522899	0					
ANR	2522904	IdentifierDeclType	struct ctxRenameForCB *		2522899	0					
ANR	2522905	Identifier	ctx		2522899	1					
ANR	2522906	AssignmentExpression	* ctx = ( struct ctxRenameForCB * ) user		2522899	2		=			
ANR	2522907	Identifier	ctx		2522899	0					
ANR	2522908	CastExpression	( struct ctxRenameForCB * ) user		2522899	1					
ANR	2522909	CastTarget	struct ctxRenameForCB *		2522899	0					
ANR	2522910	Identifier	user		2522899	1					
ANR	2522911	IdentifierDeclStatement	"char nk [ R_SIGN_KEY_MAXSZ ] , nv [ R_SIGN_VAL_MAXSZ ] ;"	1627:1:38070:38117	2522899	1	True				
ANR	2522912	IdentifierDecl	nk [ R_SIGN_KEY_MAXSZ ]		2522899	0					
ANR	2522913	IdentifierDeclType	char [ R_SIGN_KEY_MAXSZ ]		2522899	0					
ANR	2522914	Identifier	nk		2522899	1					
ANR	2522915	Identifier	R_SIGN_KEY_MAXSZ		2522899	2					
ANR	2522916	IdentifierDecl	nv [ R_SIGN_VAL_MAXSZ ]		2522899	1					
ANR	2522917	IdentifierDeclType	char [ R_SIGN_VAL_MAXSZ ]		2522899	0					
ANR	2522918	Identifier	nv		2522899	1					
ANR	2522919	Identifier	R_SIGN_VAL_MAXSZ		2522899	2					
ANR	2522920	IdentifierDeclStatement	const char * zigname = NULL ;	1628:1:38120:38146	2522899	2	True				
ANR	2522921	IdentifierDecl	* zigname = NULL		2522899	0					
ANR	2522922	IdentifierDeclType	const char *		2522899	0					
ANR	2522923	Identifier	zigname		2522899	1					
ANR	2522924	AssignmentExpression	* zigname = NULL		2522899	2		=			
ANR	2522925	Identifier	NULL		2522899	0					
ANR	2522926	Identifier	NULL		2522899	1					
ANR	2522927	IdentifierDeclStatement	Sdb * db = ctx -> anal -> sdb_zigns ;	1629:1:38149:38179	2522899	3	True				
ANR	2522928	IdentifierDecl	* db = ctx -> anal -> sdb_zigns		2522899	0					
ANR	2522929	IdentifierDeclType	Sdb *		2522899	0					
ANR	2522930	Identifier	db		2522899	1					
ANR	2522931	AssignmentExpression	* db = ctx -> anal -> sdb_zigns		2522899	2		=			
ANR	2522932	Identifier	db		2522899	0					
ANR	2522933	PtrMemberAccess	ctx -> anal -> sdb_zigns		2522899	1					
ANR	2522934	PtrMemberAccess	ctx -> anal		2522899	0					
ANR	2522935	Identifier	ctx		2522899	0					
ANR	2522936	Identifier	anal		2522899	1					
ANR	2522937	Identifier	sdb_zigns		2522899	1					
ANR	2522938	IfStatement	"if ( ! strncmp ( k , ctx -> oprefix , strlen ( ctx -> oprefix ) ) )"		2522899	4					
ANR	2522939	Condition	"! strncmp ( k , ctx -> oprefix , strlen ( ctx -> oprefix ) )"	1631:5:38187:38235	2522899	0	True				
ANR	2522940	UnaryOperationExpression	"! strncmp ( k , ctx -> oprefix , strlen ( ctx -> oprefix ) )"		2522899	0					
ANR	2522941	UnaryOperator	!		2522899	0					
ANR	2522942	CallExpression	"strncmp ( k , ctx -> oprefix , strlen ( ctx -> oprefix ) )"		2522899	1					
ANR	2522943	Callee	strncmp		2522899	0					
ANR	2522944	Identifier	strncmp		2522899	0					
ANR	2522945	ArgumentList	k		2522899	1					
ANR	2522946	Argument	k		2522899	0					
ANR	2522947	Identifier	k		2522899	0					
ANR	2522948	Argument	ctx -> oprefix		2522899	1					
ANR	2522949	PtrMemberAccess	ctx -> oprefix		2522899	0					
ANR	2522950	Identifier	ctx		2522899	0					
ANR	2522951	Identifier	oprefix		2522899	1					
ANR	2522952	Argument	strlen ( ctx -> oprefix )		2522899	2					
ANR	2522953	CallExpression	strlen ( ctx -> oprefix )		2522899	0					
ANR	2522954	Callee	strlen		2522899	0					
ANR	2522955	Identifier	strlen		2522899	0					
ANR	2522956	ArgumentList	ctx -> oprefix		2522899	1					
ANR	2522957	Argument	ctx -> oprefix		2522899	0					
ANR	2522958	PtrMemberAccess	ctx -> oprefix		2522899	0					
ANR	2522959	Identifier	ctx		2522899	0					
ANR	2522960	Identifier	oprefix		2522899	1					
ANR	2522961	CompoundStatement		7:56:232:232	2522899	1					
ANR	2522962	ExpressionStatement	zigname = k + strlen ( ctx -> oprefix )	1632:2:38242:38277	2522899	0	True				
ANR	2522963	AssignmentExpression	zigname = k + strlen ( ctx -> oprefix )		2522899	0		=			
ANR	2522964	Identifier	zigname		2522899	0					
ANR	2522965	AdditiveExpression	k + strlen ( ctx -> oprefix )		2522899	1		+			
ANR	2522966	Identifier	k		2522899	0					
ANR	2522967	CallExpression	strlen ( ctx -> oprefix )		2522899	1					
ANR	2522968	Callee	strlen		2522899	0					
ANR	2522969	Identifier	strlen		2522899	0					
ANR	2522970	ArgumentList	ctx -> oprefix		2522899	1					
ANR	2522971	Argument	ctx -> oprefix		2522899	0					
ANR	2522972	PtrMemberAccess	ctx -> oprefix		2522899	0					
ANR	2522973	Identifier	ctx		2522899	0					
ANR	2522974	Identifier	oprefix		2522899	1					
ANR	2522975	ExpressionStatement	"snprintf ( nk , R_SIGN_KEY_MAXSZ , ""%s%s"" , ctx -> nprefix , zigname )"	1633:2:38281:38343	2522899	1	True				
ANR	2522976	CallExpression	"snprintf ( nk , R_SIGN_KEY_MAXSZ , ""%s%s"" , ctx -> nprefix , zigname )"		2522899	0					
ANR	2522977	Callee	snprintf		2522899	0					
ANR	2522978	Identifier	snprintf		2522899	0					
ANR	2522979	ArgumentList	nk		2522899	1					
ANR	2522980	Argument	nk		2522899	0					
ANR	2522981	Identifier	nk		2522899	0					
ANR	2522982	Argument	R_SIGN_KEY_MAXSZ		2522899	1					
ANR	2522983	Identifier	R_SIGN_KEY_MAXSZ		2522899	0					
ANR	2522984	Argument	"""%s%s"""		2522899	2					
ANR	2522985	PrimaryExpression	"""%s%s"""		2522899	0					
ANR	2522986	Argument	ctx -> nprefix		2522899	3					
ANR	2522987	PtrMemberAccess	ctx -> nprefix		2522899	0					
ANR	2522988	Identifier	ctx		2522899	0					
ANR	2522989	Identifier	nprefix		2522899	1					
ANR	2522990	Argument	zigname		2522899	4					
ANR	2522991	Identifier	zigname		2522899	0					
ANR	2522992	ExpressionStatement	"snprintf ( nv , R_SIGN_VAL_MAXSZ , ""%s"" , v )"	1634:2:38347:38387	2522899	2	True				
ANR	2522993	CallExpression	"snprintf ( nv , R_SIGN_VAL_MAXSZ , ""%s"" , v )"		2522899	0					
ANR	2522994	Callee	snprintf		2522899	0					
ANR	2522995	Identifier	snprintf		2522899	0					
ANR	2522996	ArgumentList	nv		2522899	1					
ANR	2522997	Argument	nv		2522899	0					
ANR	2522998	Identifier	nv		2522899	0					
ANR	2522999	Argument	R_SIGN_VAL_MAXSZ		2522899	1					
ANR	2523000	Identifier	R_SIGN_VAL_MAXSZ		2522899	0					
ANR	2523001	Argument	"""%s"""		2522899	2					
ANR	2523002	PrimaryExpression	"""%s"""		2522899	0					
ANR	2523003	Argument	v		2522899	3					
ANR	2523004	Identifier	v		2522899	0					
ANR	2523005	ExpressionStatement	"sdb_remove ( db , k , 0 )"	1635:2:38391:38412	2522899	3	True				
ANR	2523006	CallExpression	"sdb_remove ( db , k , 0 )"		2522899	0					
ANR	2523007	Callee	sdb_remove		2522899	0					
ANR	2523008	Identifier	sdb_remove		2522899	0					
ANR	2523009	ArgumentList	db		2522899	1					
ANR	2523010	Argument	db		2522899	0					
ANR	2523011	Identifier	db		2522899	0					
ANR	2523012	Argument	k		2522899	1					
ANR	2523013	Identifier	k		2522899	0					
ANR	2523014	Argument	0		2522899	2					
ANR	2523015	PrimaryExpression	0		2522899	0					
ANR	2523016	ExpressionStatement	"sdb_set ( db , nk , nv , 0 )"	1636:2:38416:38439	2522899	4	True				
ANR	2523017	CallExpression	"sdb_set ( db , nk , nv , 0 )"		2522899	0					
ANR	2523018	Callee	sdb_set		2522899	0					
ANR	2523019	Identifier	sdb_set		2522899	0					
ANR	2523020	ArgumentList	db		2522899	1					
ANR	2523021	Argument	db		2522899	0					
ANR	2523022	Identifier	db		2522899	0					
ANR	2523023	Argument	nk		2522899	1					
ANR	2523024	Identifier	nk		2522899	0					
ANR	2523025	Argument	nv		2522899	2					
ANR	2523026	Identifier	nv		2522899	0					
ANR	2523027	Argument	0		2522899	3					
ANR	2523028	PrimaryExpression	0		2522899	0					
ANR	2523029	ReturnStatement	return 1 ;	1639:1:38446:38454	2522899	5	True				
ANR	2523030	PrimaryExpression	1		2522899	0					
ANR	2523031	ReturnType	static int		2522899	1					
ANR	2523032	Identifier	renameForCB		2522899	2					
ANR	2523033	ParameterList	"void * user , const char * k , const char * v"		2522899	3					
ANR	2523034	Parameter	void * user	1625:23:37963:37972	2522899	0	True				
ANR	2523035	ParameterType	void *		2522899	0					
ANR	2523036	Identifier	user		2522899	1					
ANR	2523037	Parameter	const char * k	1625:35:37975:37987	2522899	1	True				
ANR	2523038	ParameterType	const char *		2522899	0					
ANR	2523039	Identifier	k		2522899	1					
ANR	2523040	Parameter	const char * v	1625:50:37990:38002	2522899	2	True				
ANR	2523041	ParameterType	const char *		2522899	0					
ANR	2523042	Identifier	v		2522899	1					
ANR	2523043	CFGEntryNode	ENTRY		2522899		True				
ANR	2523044	CFGExitNode	EXIT		2522899		True				
ANR	2523045	Symbol	ctx -> oprefix		2522899						
ANR	2523046	Symbol	R_SIGN_VAL_MAXSZ		2522899						
ANR	2523047	Symbol	NULL		2522899						
ANR	2523048	Symbol	* ctx -> anal		2522899						
ANR	2523049	Symbol	ctx		2522899						
ANR	2523050	Symbol	zigname		2522899						
ANR	2523051	Symbol	nv		2522899						
ANR	2523052	Symbol	ctx -> anal -> sdb_zigns		2522899						
ANR	2523053	Symbol	ctx -> anal		2522899						
ANR	2523054	Symbol	ctx -> nprefix		2522899						
ANR	2523055	Symbol	R_SIGN_KEY_MAXSZ		2522899						
ANR	2523056	Symbol	k		2522899						
ANR	2523057	Symbol	* ctx		2522899						
ANR	2523058	Symbol	strncmp		2522899						
ANR	2523059	Symbol	strlen		2522899						
ANR	2523060	Symbol	v		2522899						
ANR	2523061	Symbol	* * ctx		2522899						
ANR	2523062	Symbol	user		2522899						
ANR	2523063	Symbol	nk		2522899						
ANR	2523064	Symbol	db		2522899						
ANR	2523065	Function	r_sign_space_rename_for	1642:0:38459:38807							
ANR	2523066	FunctionDef	"r_sign_space_rename_for (RAnal * a , const RSpace * space , const char * oname , const char * nname)"		2523065	0					
ANR	2523067	CompoundStatement		1642:104:38563:38807	2523065	0					
ANR	2523068	ExpressionStatement	r_return_if_fail ( a && space && oname && nname )	1643:1:38566:38613	2523065	0	True				
ANR	2523069	CallExpression	r_return_if_fail ( a && space && oname && nname )		2523065	0					
ANR	2523070	Callee	r_return_if_fail		2523065	0					
ANR	2523071	Identifier	r_return_if_fail		2523065	0					
ANR	2523072	ArgumentList	a && space && oname && nname		2523065	1					
ANR	2523073	Argument	a && space && oname && nname		2523065	0					
ANR	2523074	AndExpression	a && space && oname && nname		2523065	0		&&			
ANR	2523075	Identifier	a		2523065	0					
ANR	2523076	AndExpression	space && oname && nname		2523065	1		&&			
ANR	2523077	Identifier	space		2523065	0					
ANR	2523078	AndExpression	oname && nname		2523065	1		&&			
ANR	2523079	Identifier	oname		2523065	0					
ANR	2523080	Identifier	nname		2523065	1					
ANR	2523081	Statement	struct	1644:1:38616:38621	2523065	1	True				
ANR	2523082	Statement	ctxRenameForCB	1644:8:38623:38636	2523065	2	True				
ANR	2523083	Statement	ctx	1644:23:38638:38640	2523065	3	True				
ANR	2523084	Statement	=	1644:27:38642:38642	2523065	4	True				
ANR	2523085	CompoundStatement		3:29:80:80	2523065	5					
ANR	2523086	Statement	.	1644:30:38645:38645	2523065	0	True				
ANR	2523087	Statement	anal	1644:31:38646:38649	2523065	1	True				
ANR	2523088	Statement	=	1644:36:38651:38651	2523065	2	True				
ANR	2523089	Statement	a	1644:38:38653:38653	2523065	3	True				
ANR	2523090	ExpressionStatement		1644:40:38655:38655	2523065	6	True				
ANR	2523091	ExpressionStatement	"serializeKeySpaceStr ( a , oname , """" , ctx . oprefix )"	1645:1:38658:38706	2523065	7	True				
ANR	2523092	CallExpression	"serializeKeySpaceStr ( a , oname , """" , ctx . oprefix )"		2523065	0					
ANR	2523093	Callee	serializeKeySpaceStr		2523065	0					
ANR	2523094	Identifier	serializeKeySpaceStr		2523065	0					
ANR	2523095	ArgumentList	a		2523065	1					
ANR	2523096	Argument	a		2523065	0					
ANR	2523097	Identifier	a		2523065	0					
ANR	2523098	Argument	oname		2523065	1					
ANR	2523099	Identifier	oname		2523065	0					
ANR	2523100	Argument	""""""		2523065	2					
ANR	2523101	PrimaryExpression	""""""		2523065	0					
ANR	2523102	Argument	ctx . oprefix		2523065	3					
ANR	2523103	MemberAccess	ctx . oprefix		2523065	0					
ANR	2523104	Identifier	ctx		2523065	0					
ANR	2523105	Identifier	oprefix		2523065	1					
ANR	2523106	ExpressionStatement	"serializeKeySpaceStr ( a , nname , """" , ctx . nprefix )"	1646:1:38709:38757	2523065	8	True				
ANR	2523107	CallExpression	"serializeKeySpaceStr ( a , nname , """" , ctx . nprefix )"		2523065	0					
ANR	2523108	Callee	serializeKeySpaceStr		2523065	0					
ANR	2523109	Identifier	serializeKeySpaceStr		2523065	0					
ANR	2523110	ArgumentList	a		2523065	1					
ANR	2523111	Argument	a		2523065	0					
ANR	2523112	Identifier	a		2523065	0					
ANR	2523113	Argument	nname		2523065	1					
ANR	2523114	Identifier	nname		2523065	0					
ANR	2523115	Argument	""""""		2523065	2					
ANR	2523116	PrimaryExpression	""""""		2523065	0					
ANR	2523117	Argument	ctx . nprefix		2523065	3					
ANR	2523118	MemberAccess	ctx . nprefix		2523065	0					
ANR	2523119	Identifier	ctx		2523065	0					
ANR	2523120	Identifier	nprefix		2523065	1					
ANR	2523121	ExpressionStatement	"sdb_foreach ( a -> sdb_zigns , renameForCB , & ctx )"	1647:1:38760:38805	2523065	9	True				
ANR	2523122	CallExpression	"sdb_foreach ( a -> sdb_zigns , renameForCB , & ctx )"		2523065	0					
ANR	2523123	Callee	sdb_foreach		2523065	0					
ANR	2523124	Identifier	sdb_foreach		2523065	0					
ANR	2523125	ArgumentList	a -> sdb_zigns		2523065	1					
ANR	2523126	Argument	a -> sdb_zigns		2523065	0					
ANR	2523127	PtrMemberAccess	a -> sdb_zigns		2523065	0					
ANR	2523128	Identifier	a		2523065	0					
ANR	2523129	Identifier	sdb_zigns		2523065	1					
ANR	2523130	Argument	renameForCB		2523065	1					
ANR	2523131	Identifier	renameForCB		2523065	0					
ANR	2523132	Argument	& ctx		2523065	2					
ANR	2523133	UnaryOperationExpression	& ctx		2523065	0					
ANR	2523134	UnaryOperator	&		2523065	0					
ANR	2523135	Identifier	ctx		2523065	1					
ANR	2523136	ReturnType	R_API void		2523065	1					
ANR	2523137	Identifier	r_sign_space_rename_for		2523065	2					
ANR	2523138	ParameterList	"RAnal * a , const RSpace * space , const char * oname , const char * nname"		2523065	3					
ANR	2523139	Parameter	RAnal * a	1642:35:38494:38501	2523065	0	True				
ANR	2523140	ParameterType	RAnal *		2523065	0					
ANR	2523141	Identifier	a		2523065	1					
ANR	2523142	Parameter	const RSpace * space	1642:45:38504:38522	2523065	1	True				
ANR	2523143	ParameterType	const RSpace *		2523065	0					
ANR	2523144	Identifier	space		2523065	1					
ANR	2523145	Parameter	const char * oname	1642:66:38525:38541	2523065	2	True				
ANR	2523146	ParameterType	const char *		2523065	0					
ANR	2523147	Identifier	oname		2523065	1					
ANR	2523148	Parameter	const char * nname	1642:85:38544:38560	2523065	3	True				
ANR	2523149	ParameterType	const char *		2523065	0					
ANR	2523150	Identifier	nname		2523065	1					
ANR	2523151	CFGEntryNode	ENTRY		2523065		True				
ANR	2523152	CFGExitNode	EXIT		2523065		True				
ANR	2523153	Symbol	ctx . oprefix		2523065						
ANR	2523154	Symbol	renameForCB		2523065						
ANR	2523155	Symbol	a		2523065						
ANR	2523156	Symbol	oname		2523065						
ANR	2523157	Symbol	ctx . nprefix		2523065						
ANR	2523158	Symbol	ctx		2523065						
ANR	2523159	Symbol	nname		2523065						
ANR	2523160	Symbol	& ctx		2523065						
ANR	2523161	Symbol	* a		2523065						
ANR	2523162	Symbol	space		2523065						
ANR	2523163	Symbol	a -> sdb_zigns		2523065						
ANR	2523164	ClassDef	ctxForeachCB	1650:0:38810:38885							
ANR	2523165	DeclStmt									
ANR	2523166	Decl							RAnal	RAnal *	anal
ANR	2523167	DeclStmt									
ANR	2523168	Decl							RSignForeachCallback	RSignForeachCallback	cb
ANR	2523169	DeclStmt									
ANR	2523170	Decl							void	void *	user
ANR	2523171	Function	foreachCB	1656:0:38889:39353							
ANR	2523172	FunctionDef	"foreachCB (void * user , const char * k , const char * v)"		2523171	0					
ANR	2523173	CompoundStatement		1656:63:38952:39353	2523171	0					
ANR	2523174	IdentifierDeclStatement	struct ctxForeachCB * ctx = ( struct ctxForeachCB * ) user ;	1657:1:38955:39010	2523171	0	True				
ANR	2523175	IdentifierDecl	* ctx = ( struct ctxForeachCB * ) user		2523171	0					
ANR	2523176	IdentifierDeclType	struct ctxForeachCB *		2523171	0					
ANR	2523177	Identifier	ctx		2523171	1					
ANR	2523178	AssignmentExpression	* ctx = ( struct ctxForeachCB * ) user		2523171	2		=			
ANR	2523179	Identifier	ctx		2523171	0					
ANR	2523180	CastExpression	( struct ctxForeachCB * ) user		2523171	1					
ANR	2523181	CastTarget	struct ctxForeachCB *		2523171	0					
ANR	2523182	Identifier	user		2523171	1					
ANR	2523183	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	1658:1:39013:39047	2523171	1	True				
ANR	2523184	IdentifierDecl	* it = r_sign_item_new ( )		2523171	0					
ANR	2523185	IdentifierDeclType	RSignItem *		2523171	0					
ANR	2523186	Identifier	it		2523171	1					
ANR	2523187	AssignmentExpression	* it = r_sign_item_new ( )		2523171	2		=			
ANR	2523188	Identifier	it		2523171	0					
ANR	2523189	CallExpression	r_sign_item_new ( )		2523171	1					
ANR	2523190	Callee	r_sign_item_new		2523171	0					
ANR	2523191	Identifier	r_sign_item_new		2523171	0					
ANR	2523192	ArgumentList			2523171	1					
ANR	2523193	IdentifierDeclStatement	RAnal * a = ctx -> anal ;	1659:1:39050:39070	2523171	2	True				
ANR	2523194	IdentifierDecl	* a = ctx -> anal		2523171	0					
ANR	2523195	IdentifierDeclType	RAnal *		2523171	0					
ANR	2523196	Identifier	a		2523171	1					
ANR	2523197	AssignmentExpression	* a = ctx -> anal		2523171	2		=			
ANR	2523198	Identifier	a		2523171	0					
ANR	2523199	PtrMemberAccess	ctx -> anal		2523171	1					
ANR	2523200	Identifier	ctx		2523171	0					
ANR	2523201	Identifier	anal		2523171	1					
ANR	2523202	IdentifierDeclStatement	int retval = 1 ;	1660:1:39073:39087	2523171	3	True				
ANR	2523203	IdentifierDecl	retval = 1		2523171	0					
ANR	2523204	IdentifierDeclType	int		2523171	0					
ANR	2523205	Identifier	retval		2523171	1					
ANR	2523206	AssignmentExpression	retval = 1		2523171	2		=			
ANR	2523207	Identifier	retval		2523171	0					
ANR	2523208	PrimaryExpression	1		2523171	1					
ANR	2523209	IfStatement	"if ( r_sign_deserialize ( a , it , k , v ) )"		2523171	4					
ANR	2523210	Condition	"r_sign_deserialize ( a , it , k , v )"	1662:5:39095:39126	2523171	0	True				
ANR	2523211	CallExpression	"r_sign_deserialize ( a , it , k , v )"		2523171	0					
ANR	2523212	Callee	r_sign_deserialize		2523171	0					
ANR	2523213	Identifier	r_sign_deserialize		2523171	0					
ANR	2523214	ArgumentList	a		2523171	1					
ANR	2523215	Argument	a		2523171	0					
ANR	2523216	Identifier	a		2523171	0					
ANR	2523217	Argument	it		2523171	1					
ANR	2523218	Identifier	it		2523171	0					
ANR	2523219	Argument	k		2523171	2					
ANR	2523220	Identifier	k		2523171	0					
ANR	2523221	Argument	v		2523171	3					
ANR	2523222	Identifier	v		2523171	0					
ANR	2523223	CompoundStatement		8:2:180:228	2523171	1					
ANR	2523224	IdentifierDeclStatement	RSpace * cur = r_spaces_current ( & a -> zign_spaces ) ;	1663:2:39133:39181	2523171	0	True				
ANR	2523225	IdentifierDecl	* cur = r_spaces_current ( & a -> zign_spaces )		2523171	0					
ANR	2523226	IdentifierDeclType	RSpace *		2523171	0					
ANR	2523227	Identifier	cur		2523171	1					
ANR	2523228	AssignmentExpression	* cur = r_spaces_current ( & a -> zign_spaces )		2523171	2		=			
ANR	2523229	Identifier	cur		2523171	0					
ANR	2523230	CallExpression	r_spaces_current ( & a -> zign_spaces )		2523171	1					
ANR	2523231	Callee	r_spaces_current		2523171	0					
ANR	2523232	Identifier	r_spaces_current		2523171	0					
ANR	2523233	ArgumentList	& a -> zign_spaces		2523171	1					
ANR	2523234	Argument	& a -> zign_spaces		2523171	0					
ANR	2523235	UnaryOperationExpression	& a -> zign_spaces		2523171	0					
ANR	2523236	UnaryOperator	&		2523171	0					
ANR	2523237	PtrMemberAccess	a -> zign_spaces		2523171	1					
ANR	2523238	Identifier	a		2523171	0					
ANR	2523239	Identifier	zign_spaces		2523171	1					
ANR	2523240	IfStatement	if ( ctx -> cb && cur == it -> space )		2523171	1					
ANR	2523241	Condition	ctx -> cb && cur == it -> space	1664:6:39189:39215	2523171	0	True				
ANR	2523242	AndExpression	ctx -> cb && cur == it -> space		2523171	0		&&			
ANR	2523243	PtrMemberAccess	ctx -> cb		2523171	0					
ANR	2523244	Identifier	ctx		2523171	0					
ANR	2523245	Identifier	cb		2523171	1					
ANR	2523246	EqualityExpression	cur == it -> space		2523171	1		==			
ANR	2523247	Identifier	cur		2523171	0					
ANR	2523248	PtrMemberAccess	it -> space		2523171	1					
ANR	2523249	Identifier	it		2523171	0					
ANR	2523250	Identifier	space		2523171	1					
ANR	2523251	CompoundStatement		9:35:265:265	2523171	1					
ANR	2523252	ExpressionStatement	"ctx -> cb ( it , ctx -> user )"	1665:3:39223:39246	2523171	0	True				
ANR	2523253	CallExpression	"ctx -> cb ( it , ctx -> user )"		2523171	0					
ANR	2523254	Callee	ctx -> cb		2523171	0					
ANR	2523255	PtrMemberAccess	ctx -> cb		2523171	0					
ANR	2523256	Identifier	ctx		2523171	0					
ANR	2523257	Identifier	cb		2523171	1					
ANR	2523258	ArgumentList	it		2523171	1					
ANR	2523259	Argument	it		2523171	0					
ANR	2523260	Identifier	it		2523171	0					
ANR	2523261	Argument	ctx -> user		2523171	1					
ANR	2523262	PtrMemberAccess	ctx -> user		2523171	0					
ANR	2523263	Identifier	ctx		2523171	0					
ANR	2523264	Identifier	user		2523171	1					
ANR	2523265	ElseStatement	else		2523171	0					
ANR	2523266	CompoundStatement		12:8:307:307	2523171	0					
ANR	2523267	ExpressionStatement	"eprintf ( ""error: cannot deserialize zign\\n"" )"	1668:2:39264:39308	2523171	0	True				
ANR	2523268	CallExpression	"eprintf ( ""error: cannot deserialize zign\\n"" )"		2523171	0					
ANR	2523269	Callee	eprintf		2523171	0					
ANR	2523270	Identifier	eprintf		2523171	0					
ANR	2523271	ArgumentList	"""error: cannot deserialize zign\\n"""		2523171	1					
ANR	2523272	Argument	"""error: cannot deserialize zign\\n"""		2523171	0					
ANR	2523273	PrimaryExpression	"""error: cannot deserialize zign\\n"""		2523171	0					
ANR	2523274	ExpressionStatement	r_sign_item_free ( it )	1670:1:39314:39335	2523171	5	True				
ANR	2523275	CallExpression	r_sign_item_free ( it )		2523171	0					
ANR	2523276	Callee	r_sign_item_free		2523171	0					
ANR	2523277	Identifier	r_sign_item_free		2523171	0					
ANR	2523278	ArgumentList	it		2523171	1					
ANR	2523279	Argument	it		2523171	0					
ANR	2523280	Identifier	it		2523171	0					
ANR	2523281	ReturnStatement	return retval ;	1671:1:39338:39351	2523171	6	True				
ANR	2523282	Identifier	retval		2523171	0					
ANR	2523283	ReturnType	static int		2523171	1					
ANR	2523284	Identifier	foreachCB		2523171	2					
ANR	2523285	ParameterList	"void * user , const char * k , const char * v"		2523171	3					
ANR	2523286	Parameter	void * user	1656:21:38910:38919	2523171	0	True				
ANR	2523287	ParameterType	void *		2523171	0					
ANR	2523288	Identifier	user		2523171	1					
ANR	2523289	Parameter	const char * k	1656:33:38922:38934	2523171	1	True				
ANR	2523290	ParameterType	const char *		2523171	0					
ANR	2523291	Identifier	k		2523171	1					
ANR	2523292	Parameter	const char * v	1656:48:38937:38949	2523171	2	True				
ANR	2523293	ParameterType	const char *		2523171	0					
ANR	2523294	Identifier	v		2523171	1					
ANR	2523295	CFGEntryNode	ENTRY		2523171		True				
ANR	2523296	CFGExitNode	EXIT		2523171		True				
ANR	2523297	Symbol	r_sign_item_new		2523171						
ANR	2523298	Symbol	a		2523171						
ANR	2523299	Symbol	cur		2523171						
ANR	2523300	Symbol	ctx		2523171						
ANR	2523301	Symbol	ctx -> anal		2523171						
ANR	2523302	Symbol	ctx -> cb		2523171						
ANR	2523303	Symbol	k		2523171						
ANR	2523304	Symbol	it		2523171						
ANR	2523305	Symbol	* ctx		2523171						
ANR	2523306	Symbol	retval		2523171						
ANR	2523307	Symbol	& a -> zign_spaces		2523171						
ANR	2523308	Symbol	r_sign_deserialize		2523171						
ANR	2523309	Symbol	it -> space		2523171						
ANR	2523310	Symbol	ctx -> user		2523171						
ANR	2523311	Symbol	* it		2523171						
ANR	2523312	Symbol	v		2523171						
ANR	2523313	Symbol	user		2523171						
ANR	2523314	Symbol	r_spaces_current		2523171						
ANR	2523315	Function	r_sign_foreach	1674:0:39356:39568							
ANR	2523316	FunctionDef	"r_sign_foreach (RAnal * a , RSignForeachCallback cb , void * user)"		2523315	0					
ANR	2523317	CompoundStatement		1674:73:39429:39568	2523315	0					
ANR	2523318	ExpressionStatement	"r_return_val_if_fail ( a && cb , false )"	1675:1:39432:39469	2523315	0	True				
ANR	2523319	CallExpression	"r_return_val_if_fail ( a && cb , false )"		2523315	0					
ANR	2523320	Callee	r_return_val_if_fail		2523315	0					
ANR	2523321	Identifier	r_return_val_if_fail		2523315	0					
ANR	2523322	ArgumentList	a && cb		2523315	1					
ANR	2523323	Argument	a && cb		2523315	0					
ANR	2523324	AndExpression	a && cb		2523315	0		&&			
ANR	2523325	Identifier	a		2523315	0					
ANR	2523326	Identifier	cb		2523315	1					
ANR	2523327	Argument	false		2523315	1					
ANR	2523328	Identifier	false		2523315	0					
ANR	2523329	IdentifierDeclStatement	"struct ctxForeachCB ctx = { a , cb , user } ;"	1676:1:39472:39513	2523315	1	True				
ANR	2523330	IdentifierDecl	"ctx = { a , cb , user }"		2523315	0					
ANR	2523331	IdentifierDeclType	struct ctxForeachCB		2523315	0					
ANR	2523332	Identifier	ctx		2523315	1					
ANR	2523333	AssignmentExpression	"ctx = { a , cb , user }"		2523315	2		=			
ANR	2523334	Identifier	ctx		2523315	0					
ANR	2523335	InitializerList	a		2523315	1					
ANR	2523336	Identifier	a		2523315	0					
ANR	2523337	Identifier	cb		2523315	1					
ANR	2523338	Identifier	user		2523315	2					
ANR	2523339	ReturnStatement	"return sdb_foreach ( a -> sdb_zigns , foreachCB , & ctx ) ;"	1677:1:39516:39566	2523315	2	True				
ANR	2523340	CallExpression	"sdb_foreach ( a -> sdb_zigns , foreachCB , & ctx )"		2523315	0					
ANR	2523341	Callee	sdb_foreach		2523315	0					
ANR	2523342	Identifier	sdb_foreach		2523315	0					
ANR	2523343	ArgumentList	a -> sdb_zigns		2523315	1					
ANR	2523344	Argument	a -> sdb_zigns		2523315	0					
ANR	2523345	PtrMemberAccess	a -> sdb_zigns		2523315	0					
ANR	2523346	Identifier	a		2523315	0					
ANR	2523347	Identifier	sdb_zigns		2523315	1					
ANR	2523348	Argument	foreachCB		2523315	1					
ANR	2523349	Identifier	foreachCB		2523315	0					
ANR	2523350	Argument	& ctx		2523315	2					
ANR	2523351	UnaryOperationExpression	& ctx		2523315	0					
ANR	2523352	UnaryOperator	&		2523315	0					
ANR	2523353	Identifier	ctx		2523315	1					
ANR	2523354	ReturnType	R_API bool		2523315	1					
ANR	2523355	Identifier	r_sign_foreach		2523315	2					
ANR	2523356	ParameterList	"RAnal * a , RSignForeachCallback cb , void * user"		2523315	3					
ANR	2523357	Parameter	RAnal * a	1674:26:39382:39389	2523315	0	True				
ANR	2523358	ParameterType	RAnal *		2523315	0					
ANR	2523359	Identifier	a		2523315	1					
ANR	2523360	Parameter	RSignForeachCallback cb	1674:36:39392:39414	2523315	1	True				
ANR	2523361	ParameterType	RSignForeachCallback		2523315	0					
ANR	2523362	Identifier	cb		2523315	1					
ANR	2523363	Parameter	void * user	1674:61:39417:39426	2523315	2	True				
ANR	2523364	ParameterType	void *		2523315	0					
ANR	2523365	Identifier	user		2523315	1					
ANR	2523366	CFGEntryNode	ENTRY		2523315		True				
ANR	2523367	CFGExitNode	EXIT		2523315		True				
ANR	2523368	Symbol	a		2523315						
ANR	2523369	Symbol	foreachCB		2523315						
ANR	2523370	Symbol	ctx		2523315						
ANR	2523371	Symbol	sdb_foreach		2523315						
ANR	2523372	Symbol	false		2523315						
ANR	2523373	Symbol	& ctx		2523315						
ANR	2523374	Symbol	* a		2523315						
ANR	2523375	Symbol	user		2523315						
ANR	2523376	Symbol	cb		2523315						
ANR	2523377	Symbol	a -> sdb_zigns		2523315						
ANR	2523378	Function	r_sign_search_new	1680:0:39571:39790							
ANR	2523379	FunctionDef	r_sign_search_new ()		2523378	0					
ANR	2523380	CompoundStatement		1680:39:39610:39790	2523378	0					
ANR	2523381	IdentifierDeclStatement	RSignSearch * ret = R_NEW0 ( RSignSearch ) ;	1681:1:39613:39652	2523378	0	True				
ANR	2523382	IdentifierDecl	* ret = R_NEW0 ( RSignSearch )		2523378	0					
ANR	2523383	IdentifierDeclType	RSignSearch *		2523378	0					
ANR	2523384	Identifier	ret		2523378	1					
ANR	2523385	AssignmentExpression	* ret = R_NEW0 ( RSignSearch )		2523378	2		=			
ANR	2523386	Identifier	ret		2523378	0					
ANR	2523387	CallExpression	R_NEW0 ( RSignSearch )		2523378	1					
ANR	2523388	Callee	R_NEW0		2523378	0					
ANR	2523389	Identifier	R_NEW0		2523378	0					
ANR	2523390	ArgumentList	RSignSearch		2523378	1					
ANR	2523391	Argument	RSignSearch		2523378	0					
ANR	2523392	Identifier	RSignSearch		2523378	0					
ANR	2523393	IfStatement	if ( ret )		2523378	1					
ANR	2523394	Condition	ret	1682:5:39659:39661	2523378	0	True				
ANR	2523395	Identifier	ret		2523378	0					
ANR	2523396	CompoundStatement		3:10:53:53	2523378	1					
ANR	2523397	ExpressionStatement	ret -> search = r_search_new ( R_SEARCH_KEYWORD )	1683:2:39668:39713	2523378	0	True				
ANR	2523398	AssignmentExpression	ret -> search = r_search_new ( R_SEARCH_KEYWORD )		2523378	0		=			
ANR	2523399	PtrMemberAccess	ret -> search		2523378	0					
ANR	2523400	Identifier	ret		2523378	0					
ANR	2523401	Identifier	search		2523378	1					
ANR	2523402	CallExpression	r_search_new ( R_SEARCH_KEYWORD )		2523378	1					
ANR	2523403	Callee	r_search_new		2523378	0					
ANR	2523404	Identifier	r_search_new		2523378	0					
ANR	2523405	ArgumentList	R_SEARCH_KEYWORD		2523378	1					
ANR	2523406	Argument	R_SEARCH_KEYWORD		2523378	0					
ANR	2523407	Identifier	R_SEARCH_KEYWORD		2523378	0					
ANR	2523408	ExpressionStatement	ret -> items = r_list_newf ( ( RListFree ) r_sign_item_free )	1684:2:39717:39772	2523378	1	True				
ANR	2523409	AssignmentExpression	ret -> items = r_list_newf ( ( RListFree ) r_sign_item_free )		2523378	0		=			
ANR	2523410	PtrMemberAccess	ret -> items		2523378	0					
ANR	2523411	Identifier	ret		2523378	0					
ANR	2523412	Identifier	items		2523378	1					
ANR	2523413	CallExpression	r_list_newf ( ( RListFree ) r_sign_item_free )		2523378	1					
ANR	2523414	Callee	r_list_newf		2523378	0					
ANR	2523415	Identifier	r_list_newf		2523378	0					
ANR	2523416	ArgumentList	( RListFree ) r_sign_item_free		2523378	1					
ANR	2523417	Argument	( RListFree ) r_sign_item_free		2523378	0					
ANR	2523418	CastExpression	( RListFree ) r_sign_item_free		2523378	0					
ANR	2523419	CastTarget	RListFree		2523378	0					
ANR	2523420	Identifier	r_sign_item_free		2523378	1					
ANR	2523421	ReturnStatement	return ret ;	1686:1:39778:39788	2523378	2	True				
ANR	2523422	Identifier	ret		2523378	0					
ANR	2523423	ReturnType	R_API RSignSearch *		2523378	1					
ANR	2523424	Identifier	r_sign_search_new		2523378	2					
ANR	2523425	ParameterList			2523378	3					
ANR	2523426	CFGEntryNode	ENTRY		2523378		True				
ANR	2523427	CFGExitNode	EXIT		2523378		True				
ANR	2523428	Symbol	ret		2523378						
ANR	2523429	Symbol	r_search_new		2523378						
ANR	2523430	Symbol	R_NEW0		2523378						
ANR	2523431	Symbol	r_list_newf		2523378						
ANR	2523432	Symbol	ret -> search		2523378						
ANR	2523433	Symbol	r_sign_item_free		2523378						
ANR	2523434	Symbol	* ret		2523378						
ANR	2523435	Symbol	ret -> items		2523378						
ANR	2523436	Symbol	R_SEARCH_KEYWORD		2523378						
ANR	2523437	Symbol	RSignSearch		2523378						
ANR	2523438	Function	r_sign_search_free	1689:0:39793:39934							
ANR	2523439	FunctionDef	r_sign_search_free (RSignSearch * ss)		2523438	0					
ANR	2523440	CompoundStatement		1689:47:39840:39934	2523438	0					
ANR	2523441	IfStatement	if ( ! ss )		2523438	0					
ANR	2523442	Condition	! ss	1690:5:39847:39849	2523438	0	True				
ANR	2523443	UnaryOperationExpression	! ss		2523438	0					
ANR	2523444	UnaryOperator	!		2523438	0					
ANR	2523445	Identifier	ss		2523438	1					
ANR	2523446	CompoundStatement		2:10:11:11	2523438	1					
ANR	2523447	ReturnStatement	return ;	1691:2:39856:39862	2523438	0	True				
ANR	2523448	ExpressionStatement	r_search_free ( ss -> search )	1693:1:39868:39894	2523438	1	True				
ANR	2523449	CallExpression	r_search_free ( ss -> search )		2523438	0					
ANR	2523450	Callee	r_search_free		2523438	0					
ANR	2523451	Identifier	r_search_free		2523438	0					
ANR	2523452	ArgumentList	ss -> search		2523438	1					
ANR	2523453	Argument	ss -> search		2523438	0					
ANR	2523454	PtrMemberAccess	ss -> search		2523438	0					
ANR	2523455	Identifier	ss		2523438	0					
ANR	2523456	Identifier	search		2523438	1					
ANR	2523457	ExpressionStatement	r_list_free ( ss -> items )	1694:1:39897:39920	2523438	2	True				
ANR	2523458	CallExpression	r_list_free ( ss -> items )		2523438	0					
ANR	2523459	Callee	r_list_free		2523438	0					
ANR	2523460	Identifier	r_list_free		2523438	0					
ANR	2523461	ArgumentList	ss -> items		2523438	1					
ANR	2523462	Argument	ss -> items		2523438	0					
ANR	2523463	PtrMemberAccess	ss -> items		2523438	0					
ANR	2523464	Identifier	ss		2523438	0					
ANR	2523465	Identifier	items		2523438	1					
ANR	2523466	ExpressionStatement	free ( ss )	1695:1:39923:39932	2523438	3	True				
ANR	2523467	CallExpression	free ( ss )		2523438	0					
ANR	2523468	Callee	free		2523438	0					
ANR	2523469	Identifier	free		2523438	0					
ANR	2523470	ArgumentList	ss		2523438	1					
ANR	2523471	Argument	ss		2523438	0					
ANR	2523472	Identifier	ss		2523438	0					
ANR	2523473	ReturnType	R_API void		2523438	1					
ANR	2523474	Identifier	r_sign_search_free		2523438	2					
ANR	2523475	ParameterList	RSignSearch * ss		2523438	3					
ANR	2523476	Parameter	RSignSearch * ss	1689:30:39823:39837	2523438	0	True				
ANR	2523477	ParameterType	RSignSearch *		2523438	0					
ANR	2523478	Identifier	ss		2523438	1					
ANR	2523479	CFGEntryNode	ENTRY		2523438		True				
ANR	2523480	CFGExitNode	EXIT		2523438		True				
ANR	2523481	Symbol	ss		2523438						
ANR	2523482	Symbol	* ss		2523438						
ANR	2523483	Symbol	ss -> items		2523438						
ANR	2523484	Symbol	ss -> search		2523438						
ANR	2523485	Function	searchHitCB	1698:0:39937:40118							
ANR	2523486	FunctionDef	"searchHitCB (RSearchKeyword * kw , void * user , ut64 addr)"		2523485	0					
ANR	2523487	CompoundStatement		1698:66:40003:40118	2523485	0					
ANR	2523488	IdentifierDeclStatement	RSignSearch * ss = ( RSignSearch * ) user ;	1699:1:40006:40044	2523485	0	True				
ANR	2523489	IdentifierDecl	* ss = ( RSignSearch * ) user		2523485	0					
ANR	2523490	IdentifierDeclType	RSignSearch *		2523485	0					
ANR	2523491	Identifier	ss		2523485	1					
ANR	2523492	AssignmentExpression	* ss = ( RSignSearch * ) user		2523485	2		=			
ANR	2523493	Identifier	ss		2523485	0					
ANR	2523494	CastExpression	( RSignSearch * ) user		2523485	1					
ANR	2523495	CastTarget	RSignSearch *		2523485	0					
ANR	2523496	Identifier	user		2523485	1					
ANR	2523497	ReturnStatement	"return ss -> cb ? ss -> cb ( ( RSignItem * ) kw -> data , kw , addr , ss -> user ) : 1 ;"	1700:1:40047:40116	2523485	1	True				
ANR	2523498	ConditionalExpression	"ss -> cb ? ss -> cb ( ( RSignItem * ) kw -> data , kw , addr , ss -> user ) : 1"		2523485	0					
ANR	2523499	Condition	ss -> cb		2523485	0					
ANR	2523500	PtrMemberAccess	ss -> cb		2523485	0					
ANR	2523501	Identifier	ss		2523485	0					
ANR	2523502	Identifier	cb		2523485	1					
ANR	2523503	CallExpression	"ss -> cb ( ( RSignItem * ) kw -> data , kw , addr , ss -> user )"		2523485	1					
ANR	2523504	Callee	ss -> cb		2523485	0					
ANR	2523505	PtrMemberAccess	ss -> cb		2523485	0					
ANR	2523506	Identifier	ss		2523485	0					
ANR	2523507	Identifier	cb		2523485	1					
ANR	2523508	ArgumentList	( RSignItem * ) kw -> data		2523485	1					
ANR	2523509	Argument	( RSignItem * ) kw -> data		2523485	0					
ANR	2523510	CastExpression	( RSignItem * ) kw -> data		2523485	0					
ANR	2523511	CastTarget	RSignItem *		2523485	0					
ANR	2523512	PtrMemberAccess	kw -> data		2523485	1					
ANR	2523513	Identifier	kw		2523485	0					
ANR	2523514	Identifier	data		2523485	1					
ANR	2523515	Argument	kw		2523485	1					
ANR	2523516	Identifier	kw		2523485	0					
ANR	2523517	Argument	addr		2523485	2					
ANR	2523518	Identifier	addr		2523485	0					
ANR	2523519	Argument	ss -> user		2523485	3					
ANR	2523520	PtrMemberAccess	ss -> user		2523485	0					
ANR	2523521	Identifier	ss		2523485	0					
ANR	2523522	Identifier	user		2523485	1					
ANR	2523523	PrimaryExpression	1		2523485	2					
ANR	2523524	ReturnType	static int		2523485	1					
ANR	2523525	Identifier	searchHitCB		2523485	2					
ANR	2523526	ParameterList	"RSearchKeyword * kw , void * user , ut64 addr"		2523485	3					
ANR	2523527	Parameter	RSearchKeyword * kw	1698:23:39960:39977	2523485	0	True				
ANR	2523528	ParameterType	RSearchKeyword *		2523485	0					
ANR	2523529	Identifier	kw		2523485	1					
ANR	2523530	Parameter	void * user	1698:43:39980:39989	2523485	1	True				
ANR	2523531	ParameterType	void *		2523485	0					
ANR	2523532	Identifier	user		2523485	1					
ANR	2523533	Parameter	ut64 addr	1698:55:39992:40000	2523485	2	True				
ANR	2523534	ParameterType	ut64		2523485	0					
ANR	2523535	Identifier	addr		2523485	1					
ANR	2523536	CFGEntryNode	ENTRY		2523485		True				
ANR	2523537	CFGExitNode	EXIT		2523485		True				
ANR	2523538	Symbol	ss		2523485						
ANR	2523539	Symbol	* kw		2523485						
ANR	2523540	Symbol	* ss		2523485						
ANR	2523541	Symbol	ss -> user		2523485						
ANR	2523542	Symbol	ss -> cb		2523485						
ANR	2523543	Symbol	kw -> data		2523485						
ANR	2523544	Symbol	kw		2523485						
ANR	2523545	Symbol	addr		2523485						
ANR	2523546	Symbol	user		2523485						
ANR	2523547	ClassDef	ctxAddSearchKwCB	1703:0:40121:40177							
ANR	2523548	DeclStmt									
ANR	2523549	Decl							RSignSearch	RSignSearch *	ss
ANR	2523550	DeclStmt									
ANR	2523551	Decl							int	int	minsz
ANR	2523552	Function	addSearchKwCB	1708:0:40181:40858							
ANR	2523553	FunctionDef	"addSearchKwCB (RSignItem * it , void * user)"		2523552	0					
ANR	2523554	CompoundStatement		1708:52:40233:40858	2523552	0					
ANR	2523555	IdentifierDeclStatement	struct ctxAddSearchKwCB * ctx = ( struct ctxAddSearchKwCB * ) user ;	1709:1:40236:40299	2523552	0	True				
ANR	2523556	IdentifierDecl	* ctx = ( struct ctxAddSearchKwCB * ) user		2523552	0					
ANR	2523557	IdentifierDeclType	struct ctxAddSearchKwCB *		2523552	0					
ANR	2523558	Identifier	ctx		2523552	1					
ANR	2523559	AssignmentExpression	* ctx = ( struct ctxAddSearchKwCB * ) user		2523552	2		=			
ANR	2523560	Identifier	ctx		2523552	0					
ANR	2523561	CastExpression	( struct ctxAddSearchKwCB * ) user		2523552	1					
ANR	2523562	CastTarget	struct ctxAddSearchKwCB *		2523552	0					
ANR	2523563	Identifier	user		2523552	1					
ANR	2523564	IdentifierDeclStatement	RSignSearch * ss = ctx -> ss ;	1710:1:40302:40327	2523552	1	True				
ANR	2523565	IdentifierDecl	* ss = ctx -> ss		2523552	0					
ANR	2523566	IdentifierDeclType	RSignSearch *		2523552	0					
ANR	2523567	Identifier	ss		2523552	1					
ANR	2523568	AssignmentExpression	* ss = ctx -> ss		2523552	2		=			
ANR	2523569	Identifier	ss		2523552	0					
ANR	2523570	PtrMemberAccess	ctx -> ss		2523552	1					
ANR	2523571	Identifier	ctx		2523552	0					
ANR	2523572	Identifier	ss		2523552	1					
ANR	2523573	IdentifierDeclStatement	RSignBytes * bytes = it -> bytes ;	1711:1:40330:40359	2523552	2	True				
ANR	2523574	IdentifierDecl	* bytes = it -> bytes		2523552	0					
ANR	2523575	IdentifierDeclType	RSignBytes *		2523552	0					
ANR	2523576	Identifier	bytes		2523552	1					
ANR	2523577	AssignmentExpression	* bytes = it -> bytes		2523552	2		=			
ANR	2523578	Identifier	bytes		2523552	0					
ANR	2523579	PtrMemberAccess	it -> bytes		2523552	1					
ANR	2523580	Identifier	it		2523552	0					
ANR	2523581	Identifier	bytes		2523552	1					
ANR	2523582	IdentifierDeclStatement	RSearchKeyword * kw = NULL ;	1712:1:40362:40387	2523552	3	True				
ANR	2523583	IdentifierDecl	* kw = NULL		2523552	0					
ANR	2523584	IdentifierDeclType	RSearchKeyword *		2523552	0					
ANR	2523585	Identifier	kw		2523552	1					
ANR	2523586	AssignmentExpression	* kw = NULL		2523552	2		=			
ANR	2523587	Identifier	NULL		2523552	0					
ANR	2523588	Identifier	NULL		2523552	1					
ANR	2523589	IfStatement	if ( ! bytes )		2523552	4					
ANR	2523590	Condition	! bytes	1714:5:40395:40400	2523552	0	True				
ANR	2523591	UnaryOperationExpression	! bytes		2523552	0					
ANR	2523592	UnaryOperator	!		2523552	0					
ANR	2523593	Identifier	bytes		2523552	1					
ANR	2523594	CompoundStatement		7:13:169:169	2523552	1					
ANR	2523595	ExpressionStatement	"eprintf ( ""Cannot find bytes for this signature: %s\\n"" , it -> name )"	1715:2:40407:40471	2523552	0	True				
ANR	2523596	CallExpression	"eprintf ( ""Cannot find bytes for this signature: %s\\n"" , it -> name )"		2523552	0					
ANR	2523597	Callee	eprintf		2523552	0					
ANR	2523598	Identifier	eprintf		2523552	0					
ANR	2523599	ArgumentList	"""Cannot find bytes for this signature: %s\\n"""		2523552	1					
ANR	2523600	Argument	"""Cannot find bytes for this signature: %s\\n"""		2523552	0					
ANR	2523601	PrimaryExpression	"""Cannot find bytes for this signature: %s\\n"""		2523552	0					
ANR	2523602	Argument	it -> name		2523552	1					
ANR	2523603	PtrMemberAccess	it -> name		2523552	0					
ANR	2523604	Identifier	it		2523552	0					
ANR	2523605	Identifier	name		2523552	1					
ANR	2523606	ReturnStatement	return 1 ;	1716:2:40475:40483	2523552	1	True				
ANR	2523607	PrimaryExpression	1		2523552	0					
ANR	2523608	IfStatement	if ( ctx -> minsz && bytes -> size < ctx -> minsz )		2523552	5					
ANR	2523609	Condition	ctx -> minsz && bytes -> size < ctx -> minsz	1719:5:40494:40531	2523552	0	True				
ANR	2523610	AndExpression	ctx -> minsz && bytes -> size < ctx -> minsz		2523552	0		&&			
ANR	2523611	PtrMemberAccess	ctx -> minsz		2523552	0					
ANR	2523612	Identifier	ctx		2523552	0					
ANR	2523613	Identifier	minsz		2523552	1					
ANR	2523614	RelationalExpression	bytes -> size < ctx -> minsz		2523552	1		<			
ANR	2523615	PtrMemberAccess	bytes -> size		2523552	0					
ANR	2523616	Identifier	bytes		2523552	0					
ANR	2523617	Identifier	size		2523552	1					
ANR	2523618	PtrMemberAccess	ctx -> minsz		2523552	1					
ANR	2523619	Identifier	ctx		2523552	0					
ANR	2523620	Identifier	minsz		2523552	1					
ANR	2523621	CompoundStatement		12:45:300:300	2523552	1					
ANR	2523622	ReturnStatement	return 1 ;	1720:2:40538:40546	2523552	0	True				
ANR	2523623	PrimaryExpression	1		2523552	0					
ANR	2523624	IdentifierDeclStatement	RSignItem * it2 = r_sign_item_dup ( it ) ;	1722:1:40552:40589	2523552	6	True				
ANR	2523625	IdentifierDecl	* it2 = r_sign_item_dup ( it )		2523552	0					
ANR	2523626	IdentifierDeclType	RSignItem *		2523552	0					
ANR	2523627	Identifier	it2		2523552	1					
ANR	2523628	AssignmentExpression	* it2 = r_sign_item_dup ( it )		2523552	2		=			
ANR	2523629	Identifier	it2		2523552	0					
ANR	2523630	CallExpression	r_sign_item_dup ( it )		2523552	1					
ANR	2523631	Callee	r_sign_item_dup		2523552	0					
ANR	2523632	Identifier	r_sign_item_dup		2523552	0					
ANR	2523633	ArgumentList	it		2523552	1					
ANR	2523634	Argument	it		2523552	0					
ANR	2523635	Identifier	it		2523552	0					
ANR	2523636	IfStatement	if ( it2 )		2523552	7					
ANR	2523637	Condition	it2	1723:5:40596:40598	2523552	0	True				
ANR	2523638	Identifier	it2		2523552	0					
ANR	2523639	CompoundStatement		16:10:367:367	2523552	1					
ANR	2523640	ExpressionStatement	"r_list_append ( ss -> items , it2 )"	1724:2:40605:40635	2523552	0	True				
ANR	2523641	CallExpression	"r_list_append ( ss -> items , it2 )"		2523552	0					
ANR	2523642	Callee	r_list_append		2523552	0					
ANR	2523643	Identifier	r_list_append		2523552	0					
ANR	2523644	ArgumentList	ss -> items		2523552	1					
ANR	2523645	Argument	ss -> items		2523552	0					
ANR	2523646	PtrMemberAccess	ss -> items		2523552	0					
ANR	2523647	Identifier	ss		2523552	0					
ANR	2523648	Identifier	items		2523552	1					
ANR	2523649	Argument	it2		2523552	1					
ANR	2523650	Identifier	it2		2523552	0					
ANR	2523651	ExpressionStatement	"kw = r_search_keyword_new ( bytes -> bytes , bytes -> size , bytes -> mask , bytes -> size , ( const char * ) it2 )"	1726:2:40707:40806	2523552	1	True				
ANR	2523652	AssignmentExpression	"kw = r_search_keyword_new ( bytes -> bytes , bytes -> size , bytes -> mask , bytes -> size , ( const char * ) it2 )"		2523552	0		=			
ANR	2523653	Identifier	kw		2523552	0					
ANR	2523654	CallExpression	"r_search_keyword_new ( bytes -> bytes , bytes -> size , bytes -> mask , bytes -> size , ( const char * ) it2 )"		2523552	1					
ANR	2523655	Callee	r_search_keyword_new		2523552	0					
ANR	2523656	Identifier	r_search_keyword_new		2523552	0					
ANR	2523657	ArgumentList	bytes -> bytes		2523552	1					
ANR	2523658	Argument	bytes -> bytes		2523552	0					
ANR	2523659	PtrMemberAccess	bytes -> bytes		2523552	0					
ANR	2523660	Identifier	bytes		2523552	0					
ANR	2523661	Identifier	bytes		2523552	1					
ANR	2523662	Argument	bytes -> size		2523552	1					
ANR	2523663	PtrMemberAccess	bytes -> size		2523552	0					
ANR	2523664	Identifier	bytes		2523552	0					
ANR	2523665	Identifier	size		2523552	1					
ANR	2523666	Argument	bytes -> mask		2523552	2					
ANR	2523667	PtrMemberAccess	bytes -> mask		2523552	0					
ANR	2523668	Identifier	bytes		2523552	0					
ANR	2523669	Identifier	mask		2523552	1					
ANR	2523670	Argument	bytes -> size		2523552	3					
ANR	2523671	PtrMemberAccess	bytes -> size		2523552	0					
ANR	2523672	Identifier	bytes		2523552	0					
ANR	2523673	Identifier	size		2523552	1					
ANR	2523674	Argument	( const char * ) it2		2523552	4					
ANR	2523675	CastExpression	( const char * ) it2		2523552	0					
ANR	2523676	CastTarget	const char *		2523552	0					
ANR	2523677	Identifier	it2		2523552	1					
ANR	2523678	ExpressionStatement	"r_search_kw_add ( ss -> search , kw )"	1727:2:40810:40842	2523552	2	True				
ANR	2523679	CallExpression	"r_search_kw_add ( ss -> search , kw )"		2523552	0					
ANR	2523680	Callee	r_search_kw_add		2523552	0					
ANR	2523681	Identifier	r_search_kw_add		2523552	0					
ANR	2523682	ArgumentList	ss -> search		2523552	1					
ANR	2523683	Argument	ss -> search		2523552	0					
ANR	2523684	PtrMemberAccess	ss -> search		2523552	0					
ANR	2523685	Identifier	ss		2523552	0					
ANR	2523686	Identifier	search		2523552	1					
ANR	2523687	Argument	kw		2523552	1					
ANR	2523688	Identifier	kw		2523552	0					
ANR	2523689	ReturnStatement	return 1 ;	1729:1:40848:40856	2523552	8	True				
ANR	2523690	PrimaryExpression	1		2523552	0					
ANR	2523691	ReturnType	static int		2523552	1					
ANR	2523692	Identifier	addSearchKwCB		2523552	2					
ANR	2523693	ParameterList	"RSignItem * it , void * user"		2523552	3					
ANR	2523694	Parameter	RSignItem * it	1708:25:40206:40218	2523552	0	True				
ANR	2523695	ParameterType	RSignItem *		2523552	0					
ANR	2523696	Identifier	it		2523552	1					
ANR	2523697	Parameter	void * user	1708:40:40221:40230	2523552	1	True				
ANR	2523698	ParameterType	void *		2523552	0					
ANR	2523699	Identifier	user		2523552	1					
ANR	2523700	CFGEntryNode	ENTRY		2523552		True				
ANR	2523701	CFGExitNode	EXIT		2523552		True				
ANR	2523702	Symbol	ss		2523552						
ANR	2523703	Symbol	bytes -> size		2523552						
ANR	2523704	Symbol	r_sign_item_dup		2523552						
ANR	2523705	Symbol	it -> bytes		2523552						
ANR	2523706	Symbol	NULL		2523552						
ANR	2523707	Symbol	* ss		2523552						
ANR	2523708	Symbol	ctx		2523552						
ANR	2523709	Symbol	it2		2523552						
ANR	2523710	Symbol	it -> name		2523552						
ANR	2523711	Symbol	ss -> items		2523552						
ANR	2523712	Symbol	ctx -> ss		2523552						
ANR	2523713	Symbol	it		2523552						
ANR	2523714	Symbol	* bytes		2523552						
ANR	2523715	Symbol	kw		2523552						
ANR	2523716	Symbol	* ctx		2523552						
ANR	2523717	Symbol	ctx -> minsz		2523552						
ANR	2523718	Symbol	* it		2523552						
ANR	2523719	Symbol	bytes		2523552						
ANR	2523720	Symbol	bytes -> bytes		2523552						
ANR	2523721	Symbol	user		2523552						
ANR	2523722	Symbol	r_search_keyword_new		2523552						
ANR	2523723	Symbol	bytes -> mask		2523552						
ANR	2523724	Symbol	ss -> search		2523552						
ANR	2523725	Function	r_sign_search_init	1732:0:40861:41281							
ANR	2523726	FunctionDef	"r_sign_search_init (RAnal * a , RSignSearch * ss , int minsz , RSignSearchCallback cb , void * user)"		2523725	0					
ANR	2523727	CompoundStatement		1732:104:40965:41281	2523725	0					
ANR	2523728	IdentifierDeclStatement	"struct ctxAddSearchKwCB ctx = { ss , minsz } ;"	1733:1:40968:41011	2523725	0	True				
ANR	2523729	IdentifierDecl	"ctx = { ss , minsz }"		2523725	0					
ANR	2523730	IdentifierDeclType	struct ctxAddSearchKwCB		2523725	0					
ANR	2523731	Identifier	ctx		2523725	1					
ANR	2523732	AssignmentExpression	"ctx = { ss , minsz }"		2523725	2		=			
ANR	2523733	Identifier	ctx		2523725	0					
ANR	2523734	InitializerList	ss		2523725	1					
ANR	2523735	Identifier	ss		2523725	0					
ANR	2523736	Identifier	minsz		2523725	1					
ANR	2523737	ExpressionStatement	r_return_if_fail ( a && ss && cb )	1734:1:41014:41046	2523725	1	True				
ANR	2523738	CallExpression	r_return_if_fail ( a && ss && cb )		2523725	0					
ANR	2523739	Callee	r_return_if_fail		2523725	0					
ANR	2523740	Identifier	r_return_if_fail		2523725	0					
ANR	2523741	ArgumentList	a && ss && cb		2523725	1					
ANR	2523742	Argument	a && ss && cb		2523725	0					
ANR	2523743	AndExpression	a && ss && cb		2523725	0		&&			
ANR	2523744	Identifier	a		2523725	0					
ANR	2523745	AndExpression	ss && cb		2523725	1		&&			
ANR	2523746	Identifier	ss		2523725	0					
ANR	2523747	Identifier	cb		2523725	1					
ANR	2523748	ExpressionStatement	ss -> cb = cb	1735:1:41049:41060	2523725	2	True				
ANR	2523749	AssignmentExpression	ss -> cb = cb		2523725	0		=			
ANR	2523750	PtrMemberAccess	ss -> cb		2523725	0					
ANR	2523751	Identifier	ss		2523725	0					
ANR	2523752	Identifier	cb		2523725	1					
ANR	2523753	Identifier	cb		2523725	1					
ANR	2523754	ExpressionStatement	ss -> user = user	1736:1:41063:41078	2523725	3	True				
ANR	2523755	AssignmentExpression	ss -> user = user		2523725	0		=			
ANR	2523756	PtrMemberAccess	ss -> user		2523725	0					
ANR	2523757	Identifier	ss		2523725	0					
ANR	2523758	Identifier	user		2523725	1					
ANR	2523759	Identifier	user		2523725	1					
ANR	2523760	ExpressionStatement	r_list_purge ( ss -> items )	1737:1:41081:41105	2523725	4	True				
ANR	2523761	CallExpression	r_list_purge ( ss -> items )		2523725	0					
ANR	2523762	Callee	r_list_purge		2523725	0					
ANR	2523763	Identifier	r_list_purge		2523725	0					
ANR	2523764	ArgumentList	ss -> items		2523725	1					
ANR	2523765	Argument	ss -> items		2523725	0					
ANR	2523766	PtrMemberAccess	ss -> items		2523725	0					
ANR	2523767	Identifier	ss		2523725	0					
ANR	2523768	Identifier	items		2523725	1					
ANR	2523769	ExpressionStatement	"r_search_reset ( ss -> search , R_SEARCH_KEYWORD )"	1738:1:41108:41153	2523725	5	True				
ANR	2523770	CallExpression	"r_search_reset ( ss -> search , R_SEARCH_KEYWORD )"		2523725	0					
ANR	2523771	Callee	r_search_reset		2523725	0					
ANR	2523772	Identifier	r_search_reset		2523725	0					
ANR	2523773	ArgumentList	ss -> search		2523725	1					
ANR	2523774	Argument	ss -> search		2523725	0					
ANR	2523775	PtrMemberAccess	ss -> search		2523725	0					
ANR	2523776	Identifier	ss		2523725	0					
ANR	2523777	Identifier	search		2523725	1					
ANR	2523778	Argument	R_SEARCH_KEYWORD		2523725	1					
ANR	2523779	Identifier	R_SEARCH_KEYWORD		2523725	0					
ANR	2523780	ExpressionStatement	"r_sign_foreach ( a , addSearchKwCB , & ctx )"	1739:1:41156:41195	2523725	6	True				
ANR	2523781	CallExpression	"r_sign_foreach ( a , addSearchKwCB , & ctx )"		2523725	0					
ANR	2523782	Callee	r_sign_foreach		2523725	0					
ANR	2523783	Identifier	r_sign_foreach		2523725	0					
ANR	2523784	ArgumentList	a		2523725	1					
ANR	2523785	Argument	a		2523725	0					
ANR	2523786	Identifier	a		2523725	0					
ANR	2523787	Argument	addSearchKwCB		2523725	1					
ANR	2523788	Identifier	addSearchKwCB		2523725	0					
ANR	2523789	Argument	& ctx		2523725	2					
ANR	2523790	UnaryOperationExpression	& ctx		2523725	0					
ANR	2523791	UnaryOperator	&		2523725	0					
ANR	2523792	Identifier	ctx		2523725	1					
ANR	2523793	ExpressionStatement	r_search_begin ( ss -> search )	1740:1:41198:41225	2523725	7	True				
ANR	2523794	CallExpression	r_search_begin ( ss -> search )		2523725	0					
ANR	2523795	Callee	r_search_begin		2523725	0					
ANR	2523796	Identifier	r_search_begin		2523725	0					
ANR	2523797	ArgumentList	ss -> search		2523725	1					
ANR	2523798	Argument	ss -> search		2523725	0					
ANR	2523799	PtrMemberAccess	ss -> search		2523725	0					
ANR	2523800	Identifier	ss		2523725	0					
ANR	2523801	Identifier	search		2523725	1					
ANR	2523802	ExpressionStatement	"r_search_set_callback ( ss -> search , searchHitCB , ss )"	1741:1:41228:41279	2523725	8	True				
ANR	2523803	CallExpression	"r_search_set_callback ( ss -> search , searchHitCB , ss )"		2523725	0					
ANR	2523804	Callee	r_search_set_callback		2523725	0					
ANR	2523805	Identifier	r_search_set_callback		2523725	0					
ANR	2523806	ArgumentList	ss -> search		2523725	1					
ANR	2523807	Argument	ss -> search		2523725	0					
ANR	2523808	PtrMemberAccess	ss -> search		2523725	0					
ANR	2523809	Identifier	ss		2523725	0					
ANR	2523810	Identifier	search		2523725	1					
ANR	2523811	Argument	searchHitCB		2523725	1					
ANR	2523812	Identifier	searchHitCB		2523725	0					
ANR	2523813	Argument	ss		2523725	2					
ANR	2523814	Identifier	ss		2523725	0					
ANR	2523815	ReturnType	R_API void		2523725	1					
ANR	2523816	Identifier	r_sign_search_init		2523725	2					
ANR	2523817	ParameterList	"RAnal * a , RSignSearch * ss , int minsz , RSignSearchCallback cb , void * user"		2523725	3					
ANR	2523818	Parameter	RAnal * a	1732:30:40891:40898	2523725	0	True				
ANR	2523819	ParameterType	RAnal *		2523725	0					
ANR	2523820	Identifier	a		2523725	1					
ANR	2523821	Parameter	RSignSearch * ss	1732:40:40901:40915	2523725	1	True				
ANR	2523822	ParameterType	RSignSearch *		2523725	0					
ANR	2523823	Identifier	ss		2523725	1					
ANR	2523824	Parameter	int minsz	1732:57:40918:40926	2523725	2	True				
ANR	2523825	ParameterType	int		2523725	0					
ANR	2523826	Identifier	minsz		2523725	1					
ANR	2523827	Parameter	RSignSearchCallback cb	1732:68:40929:40950	2523725	3	True				
ANR	2523828	ParameterType	RSignSearchCallback		2523725	0					
ANR	2523829	Identifier	cb		2523725	1					
ANR	2523830	Parameter	void * user	1732:92:40953:40962	2523725	4	True				
ANR	2523831	ParameterType	void *		2523725	0					
ANR	2523832	Identifier	user		2523725	1					
ANR	2523833	CFGEntryNode	ENTRY		2523725		True				
ANR	2523834	CFGExitNode	EXIT		2523725		True				
ANR	2523835	Symbol	ss		2523725						
ANR	2523836	Symbol	addSearchKwCB		2523725						
ANR	2523837	Symbol	a		2523725						
ANR	2523838	Symbol	* ss		2523725						
ANR	2523839	Symbol	ctx		2523725						
ANR	2523840	Symbol	minsz		2523725						
ANR	2523841	Symbol	ss -> items		2523725						
ANR	2523842	Symbol	& ctx		2523725						
ANR	2523843	Symbol	ss -> cb		2523725						
ANR	2523844	Symbol	searchHitCB		2523725						
ANR	2523845	Symbol	ss -> user		2523725						
ANR	2523846	Symbol	R_SEARCH_KEYWORD		2523725						
ANR	2523847	Symbol	user		2523725						
ANR	2523848	Symbol	ss -> search		2523725						
ANR	2523849	Symbol	cb		2523725						
ANR	2523850	Function	r_sign_search_update	1744:0:41284:41486							
ANR	2523851	FunctionDef	"r_sign_search_update (RAnal * a , RSignSearch * ss , ut64 * at , const ut8 * buf , int len)"		2523850	0					
ANR	2523852	CompoundStatement		1744:93:41377:41486	2523850	0					
ANR	2523853	ExpressionStatement	"r_return_val_if_fail ( a && ss && buf && len > 0 , 0 )"	1745:1:41380:41431	2523850	0	True				
ANR	2523854	CallExpression	"r_return_val_if_fail ( a && ss && buf && len > 0 , 0 )"		2523850	0					
ANR	2523855	Callee	r_return_val_if_fail		2523850	0					
ANR	2523856	Identifier	r_return_val_if_fail		2523850	0					
ANR	2523857	ArgumentList	a && ss && buf && len > 0		2523850	1					
ANR	2523858	Argument	a && ss && buf && len > 0		2523850	0					
ANR	2523859	AndExpression	a && ss && buf && len > 0		2523850	0		&&			
ANR	2523860	Identifier	a		2523850	0					
ANR	2523861	AndExpression	ss && buf && len > 0		2523850	1		&&			
ANR	2523862	Identifier	ss		2523850	0					
ANR	2523863	AndExpression	buf && len > 0		2523850	1		&&			
ANR	2523864	Identifier	buf		2523850	0					
ANR	2523865	RelationalExpression	len > 0		2523850	1		>			
ANR	2523866	Identifier	len		2523850	0					
ANR	2523867	PrimaryExpression	0		2523850	1					
ANR	2523868	Argument	0		2523850	1					
ANR	2523869	PrimaryExpression	0		2523850	0					
ANR	2523870	ReturnStatement	"return r_search_update ( ss -> search , * at , buf , len ) ;"	1746:1:41434:41484	2523850	1	True				
ANR	2523871	CallExpression	"r_search_update ( ss -> search , * at , buf , len )"		2523850	0					
ANR	2523872	Callee	r_search_update		2523850	0					
ANR	2523873	Identifier	r_search_update		2523850	0					
ANR	2523874	ArgumentList	ss -> search		2523850	1					
ANR	2523875	Argument	ss -> search		2523850	0					
ANR	2523876	PtrMemberAccess	ss -> search		2523850	0					
ANR	2523877	Identifier	ss		2523850	0					
ANR	2523878	Identifier	search		2523850	1					
ANR	2523879	Argument	* at		2523850	1					
ANR	2523880	UnaryOperationExpression	* at		2523850	0					
ANR	2523881	UnaryOperator	*		2523850	0					
ANR	2523882	Identifier	at		2523850	1					
ANR	2523883	Argument	buf		2523850	2					
ANR	2523884	Identifier	buf		2523850	0					
ANR	2523885	Argument	len		2523850	3					
ANR	2523886	Identifier	len		2523850	0					
ANR	2523887	ReturnType	R_API int		2523850	1					
ANR	2523888	Identifier	r_sign_search_update		2523850	2					
ANR	2523889	ParameterList	"RAnal * a , RSignSearch * ss , ut64 * at , const ut8 * buf , int len"		2523850	3					
ANR	2523890	Parameter	RAnal * a	1744:31:41315:41322	2523850	0	True				
ANR	2523891	ParameterType	RAnal *		2523850	0					
ANR	2523892	Identifier	a		2523850	1					
ANR	2523893	Parameter	RSignSearch * ss	1744:41:41325:41339	2523850	1	True				
ANR	2523894	ParameterType	RSignSearch *		2523850	0					
ANR	2523895	Identifier	ss		2523850	1					
ANR	2523896	Parameter	ut64 * at	1744:58:41342:41349	2523850	2	True				
ANR	2523897	ParameterType	ut64 *		2523850	0					
ANR	2523898	Identifier	at		2523850	1					
ANR	2523899	Parameter	const ut8 * buf	1744:68:41352:41365	2523850	3	True				
ANR	2523900	ParameterType	const ut8 *		2523850	0					
ANR	2523901	Identifier	buf		2523850	1					
ANR	2523902	Parameter	int len	1744:84:41368:41374	2523850	4	True				
ANR	2523903	ParameterType	int		2523850	0					
ANR	2523904	Identifier	len		2523850	1					
ANR	2523905	CFGEntryNode	ENTRY		2523850		True				
ANR	2523906	CFGExitNode	EXIT		2523850		True				
ANR	2523907	Symbol	ss		2523850						
ANR	2523908	Symbol	a		2523850						
ANR	2523909	Symbol	r_search_update		2523850						
ANR	2523910	Symbol	buf		2523850						
ANR	2523911	Symbol	at		2523850						
ANR	2523912	Symbol	len		2523850						
ANR	2523913	Symbol	* ss		2523850						
ANR	2523914	Symbol	* at		2523850						
ANR	2523915	Symbol	ss -> search		2523850						
ANR	2523916	Function	matchCount	1750:0:41519:41613							
ANR	2523917	FunctionDef	"matchCount (int a , int b)"		2523916	0					
ANR	2523918	CompoundStatement		1750:36:41555:41613	2523916	0					
ANR	2523919	IdentifierDeclStatement	int c = a - b ;	1751:1:41558:41571	2523916	0	True				
ANR	2523920	IdentifierDecl	c = a - b		2523916	0					
ANR	2523921	IdentifierDeclType	int		2523916	0					
ANR	2523922	Identifier	c		2523916	1					
ANR	2523923	AssignmentExpression	c = a - b		2523916	2		=			
ANR	2523924	Identifier	c		2523916	0					
ANR	2523925	AdditiveExpression	a - b		2523916	1		-			
ANR	2523926	Identifier	a		2523916	0					
ANR	2523927	Identifier	b		2523916	1					
ANR	2523928	IdentifierDeclStatement	int m = a / 10 ;	1752:1:41574:41588	2523916	1	True				
ANR	2523929	IdentifierDecl	m = a / 10		2523916	0					
ANR	2523930	IdentifierDeclType	int		2523916	0					
ANR	2523931	Identifier	m		2523916	1					
ANR	2523932	AssignmentExpression	m = a / 10		2523916	2		=			
ANR	2523933	Identifier	m		2523916	0					
ANR	2523934	MultiplicativeExpression	a / 10		2523916	1		/			
ANR	2523935	Identifier	a		2523916	0					
ANR	2523936	PrimaryExpression	10		2523916	1					
ANR	2523937	ReturnStatement	return R_ABS ( c ) < m ;	1753:1:41591:41611	2523916	2	True				
ANR	2523938	RelationalExpression	R_ABS ( c ) < m		2523916	0		<			
ANR	2523939	CallExpression	R_ABS ( c )		2523916	0					
ANR	2523940	Callee	R_ABS		2523916	0					
ANR	2523941	Identifier	R_ABS		2523916	0					
ANR	2523942	ArgumentList	c		2523916	1					
ANR	2523943	Argument	c		2523916	0					
ANR	2523944	Identifier	c		2523916	0					
ANR	2523945	Identifier	m		2523916	1					
ANR	2523946	ReturnType	static int		2523916	1					
ANR	2523947	Identifier	matchCount		2523916	2					
ANR	2523948	ParameterList	"int a , int b"		2523916	3					
ANR	2523949	Parameter	int a	1750:22:41541:41545	2523916	0	True				
ANR	2523950	ParameterType	int		2523916	0					
ANR	2523951	Identifier	a		2523916	1					
ANR	2523952	Parameter	int b	1750:29:41548:41552	2523916	1	True				
ANR	2523953	ParameterType	int		2523916	0					
ANR	2523954	Identifier	b		2523916	1					
ANR	2523955	CFGEntryNode	ENTRY		2523916		True				
ANR	2523956	CFGExitNode	EXIT		2523916		True				
ANR	2523957	Symbol	a		2523916						
ANR	2523958	Symbol	b		2523916						
ANR	2523959	Symbol	c		2523916						
ANR	2523960	Symbol	R_ABS		2523916						
ANR	2523961	Symbol	m		2523916						
ANR	2523962	Function	fcnMetricsCmp	1756:0:41616:42180							
ANR	2523963	FunctionDef	"fcnMetricsCmp (RSignItem * it , RAnalFunction * fcn)"		2523962	0					
ANR	2523964	CompoundStatement		1756:61:41677:42180	2523962	0					
ANR	2523965	IdentifierDeclStatement	RSignGraph * graph = it -> graph ;	1757:1:41680:41709	2523962	0	True				
ANR	2523966	IdentifierDecl	* graph = it -> graph		2523962	0					
ANR	2523967	IdentifierDeclType	RSignGraph *		2523962	0					
ANR	2523968	Identifier	graph		2523962	1					
ANR	2523969	AssignmentExpression	* graph = it -> graph		2523962	2		=			
ANR	2523970	Identifier	graph		2523962	0					
ANR	2523971	PtrMemberAccess	it -> graph		2523962	1					
ANR	2523972	Identifier	it		2523962	0					
ANR	2523973	Identifier	graph		2523962	1					
ANR	2523974	IdentifierDeclStatement	int ebbs = - 1 ;	1758:1:41712:41725	2523962	1	True				
ANR	2523975	IdentifierDecl	ebbs = - 1		2523962	0					
ANR	2523976	IdentifierDeclType	int		2523962	0					
ANR	2523977	Identifier	ebbs		2523962	1					
ANR	2523978	AssignmentExpression	ebbs = - 1		2523962	2		=			
ANR	2523979	Identifier	ebbs		2523962	0					
ANR	2523980	UnaryOperationExpression	- 1		2523962	1					
ANR	2523981	UnaryOperator	-		2523962	0					
ANR	2523982	PrimaryExpression	1		2523962	1					
ANR	2523983	IfStatement	"if ( graph -> cc != - 1 && graph -> cc != r_anal_fcn_cc ( NULL , fcn ) )"		2523962	2					
ANR	2523984	Condition	"graph -> cc != - 1 && graph -> cc != r_anal_fcn_cc ( NULL , fcn )"	1760:5:41733:41789	2523962	0	True				
ANR	2523985	AndExpression	"graph -> cc != - 1 && graph -> cc != r_anal_fcn_cc ( NULL , fcn )"		2523962	0		&&			
ANR	2523986	EqualityExpression	graph -> cc != - 1		2523962	0		!=			
ANR	2523987	PtrMemberAccess	graph -> cc		2523962	0					
ANR	2523988	Identifier	graph		2523962	0					
ANR	2523989	Identifier	cc		2523962	1					
ANR	2523990	UnaryOperationExpression	- 1		2523962	1					
ANR	2523991	UnaryOperator	-		2523962	0					
ANR	2523992	PrimaryExpression	1		2523962	1					
ANR	2523993	EqualityExpression	"graph -> cc != r_anal_fcn_cc ( NULL , fcn )"		2523962	1		!=			
ANR	2523994	PtrMemberAccess	graph -> cc		2523962	0					
ANR	2523995	Identifier	graph		2523962	0					
ANR	2523996	Identifier	cc		2523962	1					
ANR	2523997	CallExpression	"r_anal_fcn_cc ( NULL , fcn )"		2523962	1					
ANR	2523998	Callee	r_anal_fcn_cc		2523962	0					
ANR	2523999	Identifier	r_anal_fcn_cc		2523962	0					
ANR	2524000	ArgumentList	NULL		2523962	1					
ANR	2524001	Argument	NULL		2523962	0					
ANR	2524002	Identifier	NULL		2523962	0					
ANR	2524003	Argument	fcn		2523962	1					
ANR	2524004	Identifier	fcn		2523962	0					
ANR	2524005	CompoundStatement		5:64:114:114	2523962	1					
ANR	2524006	ReturnStatement	return false ;	1761:2:41796:41808	2523962	0	True				
ANR	2524007	Identifier	false		2523962	0					
ANR	2524008	IfStatement	if ( graph -> nbbs != - 1 && graph -> nbbs != r_list_length ( fcn -> bbs ) )		2523962	3					
ANR	2524009	Condition	graph -> nbbs != - 1 && graph -> nbbs != r_list_length ( fcn -> bbs )	1763:5:41818:41877	2523962	0	True				
ANR	2524010	AndExpression	graph -> nbbs != - 1 && graph -> nbbs != r_list_length ( fcn -> bbs )		2523962	0		&&			
ANR	2524011	EqualityExpression	graph -> nbbs != - 1		2523962	0		!=			
ANR	2524012	PtrMemberAccess	graph -> nbbs		2523962	0					
ANR	2524013	Identifier	graph		2523962	0					
ANR	2524014	Identifier	nbbs		2523962	1					
ANR	2524015	UnaryOperationExpression	- 1		2523962	1					
ANR	2524016	UnaryOperator	-		2523962	0					
ANR	2524017	PrimaryExpression	1		2523962	1					
ANR	2524018	EqualityExpression	graph -> nbbs != r_list_length ( fcn -> bbs )		2523962	1		!=			
ANR	2524019	PtrMemberAccess	graph -> nbbs		2523962	0					
ANR	2524020	Identifier	graph		2523962	0					
ANR	2524021	Identifier	nbbs		2523962	1					
ANR	2524022	CallExpression	r_list_length ( fcn -> bbs )		2523962	1					
ANR	2524023	Callee	r_list_length		2523962	0					
ANR	2524024	Identifier	r_list_length		2523962	0					
ANR	2524025	ArgumentList	fcn -> bbs		2523962	1					
ANR	2524026	Argument	fcn -> bbs		2523962	0					
ANR	2524027	PtrMemberAccess	fcn -> bbs		2523962	0					
ANR	2524028	Identifier	fcn		2523962	0					
ANR	2524029	Identifier	bbs		2523962	1					
ANR	2524030	CompoundStatement		8:67:202:202	2523962	1					
ANR	2524031	ReturnStatement	return false ;	1764:2:41884:41896	2523962	0	True				
ANR	2524032	Identifier	false		2523962	0					
ANR	2524033	IfStatement	"if ( graph -> edges != - 1 && graph -> edges != r_anal_fcn_count_edges ( fcn , & ebbs ) )"		2523962	4					
ANR	2524034	Condition	"graph -> edges != - 1 && graph -> edges != r_anal_fcn_count_edges ( fcn , & ebbs )"	1766:5:41906:41978	2523962	0	True				
ANR	2524035	AndExpression	"graph -> edges != - 1 && graph -> edges != r_anal_fcn_count_edges ( fcn , & ebbs )"		2523962	0		&&			
ANR	2524036	EqualityExpression	graph -> edges != - 1		2523962	0		!=			
ANR	2524037	PtrMemberAccess	graph -> edges		2523962	0					
ANR	2524038	Identifier	graph		2523962	0					
ANR	2524039	Identifier	edges		2523962	1					
ANR	2524040	UnaryOperationExpression	- 1		2523962	1					
ANR	2524041	UnaryOperator	-		2523962	0					
ANR	2524042	PrimaryExpression	1		2523962	1					
ANR	2524043	EqualityExpression	"graph -> edges != r_anal_fcn_count_edges ( fcn , & ebbs )"		2523962	1		!=			
ANR	2524044	PtrMemberAccess	graph -> edges		2523962	0					
ANR	2524045	Identifier	graph		2523962	0					
ANR	2524046	Identifier	edges		2523962	1					
ANR	2524047	CallExpression	"r_anal_fcn_count_edges ( fcn , & ebbs )"		2523962	1					
ANR	2524048	Callee	r_anal_fcn_count_edges		2523962	0					
ANR	2524049	Identifier	r_anal_fcn_count_edges		2523962	0					
ANR	2524050	ArgumentList	fcn		2523962	1					
ANR	2524051	Argument	fcn		2523962	0					
ANR	2524052	Identifier	fcn		2523962	0					
ANR	2524053	Argument	& ebbs		2523962	1					
ANR	2524054	UnaryOperationExpression	& ebbs		2523962	0					
ANR	2524055	UnaryOperator	&		2523962	0					
ANR	2524056	Identifier	ebbs		2523962	1					
ANR	2524057	CompoundStatement		11:80:303:303	2523962	1					
ANR	2524058	ReturnStatement	return false ;	1767:2:41985:41997	2523962	0	True				
ANR	2524059	Identifier	false		2523962	0					
ANR	2524060	IfStatement	if ( graph -> ebbs != - 1 && graph -> ebbs != ebbs )		2523962	5					
ANR	2524061	Condition	graph -> ebbs != - 1 && graph -> ebbs != ebbs	1769:5:42007:42046	2523962	0	True				
ANR	2524062	AndExpression	graph -> ebbs != - 1 && graph -> ebbs != ebbs		2523962	0		&&			
ANR	2524063	EqualityExpression	graph -> ebbs != - 1		2523962	0		!=			
ANR	2524064	PtrMemberAccess	graph -> ebbs		2523962	0					
ANR	2524065	Identifier	graph		2523962	0					
ANR	2524066	Identifier	ebbs		2523962	1					
ANR	2524067	UnaryOperationExpression	- 1		2523962	1					
ANR	2524068	UnaryOperator	-		2523962	0					
ANR	2524069	PrimaryExpression	1		2523962	1					
ANR	2524070	EqualityExpression	graph -> ebbs != ebbs		2523962	1		!=			
ANR	2524071	PtrMemberAccess	graph -> ebbs		2523962	0					
ANR	2524072	Identifier	graph		2523962	0					
ANR	2524073	Identifier	ebbs		2523962	1					
ANR	2524074	Identifier	ebbs		2523962	1					
ANR	2524075	CompoundStatement		14:47:371:371	2523962	1					
ANR	2524076	ReturnStatement	return false ;	1770:2:42053:42065	2523962	0	True				
ANR	2524077	Identifier	false		2523962	0					
ANR	2524078	IfStatement	"if ( graph -> bbsum > 0 && matchCount ( graph -> bbsum , r_anal_fcn_size ( fcn ) ) )"		2523962	6					
ANR	2524079	Condition	"graph -> bbsum > 0 && matchCount ( graph -> bbsum , r_anal_fcn_size ( fcn ) )"	1772:5:42075:42142	2523962	0	True				
ANR	2524080	AndExpression	"graph -> bbsum > 0 && matchCount ( graph -> bbsum , r_anal_fcn_size ( fcn ) )"		2523962	0		&&			
ANR	2524081	RelationalExpression	graph -> bbsum > 0		2523962	0		>			
ANR	2524082	PtrMemberAccess	graph -> bbsum		2523962	0					
ANR	2524083	Identifier	graph		2523962	0					
ANR	2524084	Identifier	bbsum		2523962	1					
ANR	2524085	PrimaryExpression	0		2523962	1					
ANR	2524086	CallExpression	"matchCount ( graph -> bbsum , r_anal_fcn_size ( fcn ) )"		2523962	1					
ANR	2524087	Callee	matchCount		2523962	0					
ANR	2524088	Identifier	matchCount		2523962	0					
ANR	2524089	ArgumentList	graph -> bbsum		2523962	1					
ANR	2524090	Argument	graph -> bbsum		2523962	0					
ANR	2524091	PtrMemberAccess	graph -> bbsum		2523962	0					
ANR	2524092	Identifier	graph		2523962	0					
ANR	2524093	Identifier	bbsum		2523962	1					
ANR	2524094	Argument	r_anal_fcn_size ( fcn )		2523962	1					
ANR	2524095	CallExpression	r_anal_fcn_size ( fcn )		2523962	0					
ANR	2524096	Callee	r_anal_fcn_size		2523962	0					
ANR	2524097	Identifier	r_anal_fcn_size		2523962	0					
ANR	2524098	ArgumentList	fcn		2523962	1					
ANR	2524099	Argument	fcn		2523962	0					
ANR	2524100	Identifier	fcn		2523962	0					
ANR	2524101	CompoundStatement		17:75:467:467	2523962	1					
ANR	2524102	ReturnStatement	return false ;	1773:2:42149:42161	2523962	0	True				
ANR	2524103	Identifier	false		2523962	0					
ANR	2524104	ReturnStatement	return true ;	1775:1:42167:42178	2523962	7	True				
ANR	2524105	Identifier	true		2523962	0					
ANR	2524106	ReturnType	static bool		2523962	1					
ANR	2524107	Identifier	fcnMetricsCmp		2523962	2					
ANR	2524108	ParameterList	"RSignItem * it , RAnalFunction * fcn"		2523962	3					
ANR	2524109	Parameter	RSignItem * it	1756:26:41642:41654	2523962	0	True				
ANR	2524110	ParameterType	RSignItem *		2523962	0					
ANR	2524111	Identifier	it		2523962	1					
ANR	2524112	Parameter	RAnalFunction * fcn	1756:41:41657:41674	2523962	1	True				
ANR	2524113	ParameterType	RAnalFunction *		2523962	0					
ANR	2524114	Identifier	fcn		2523962	1					
ANR	2524115	CFGEntryNode	ENTRY		2523962		True				
ANR	2524116	CFGExitNode	EXIT		2523962		True				
ANR	2524117	Symbol	it -> graph		2523962						
ANR	2524118	Symbol	ebbs		2523962						
ANR	2524119	Symbol	& ebbs		2523962						
ANR	2524120	Symbol	NULL		2523962						
ANR	2524121	Symbol	* fcn		2523962						
ANR	2524122	Symbol	r_anal_fcn_cc		2523962						
ANR	2524123	Symbol	r_anal_fcn_size		2523962						
ANR	2524124	Symbol	false		2523962						
ANR	2524125	Symbol	graph -> nbbs		2523962						
ANR	2524126	Symbol	matchCount		2523962						
ANR	2524127	Symbol	it		2523962						
ANR	2524128	Symbol	r_anal_fcn_count_edges		2523962						
ANR	2524129	Symbol	graph -> ebbs		2523962						
ANR	2524130	Symbol	graph		2523962						
ANR	2524131	Symbol	fcn		2523962						
ANR	2524132	Symbol	* it		2523962						
ANR	2524133	Symbol	graph -> bbsum		2523962						
ANR	2524134	Symbol	fcn -> bbs		2523962						
ANR	2524135	Symbol	true		2523962						
ANR	2524136	Symbol	* graph		2523962						
ANR	2524137	Symbol	graph -> cc		2523962						
ANR	2524138	Symbol	r_list_length		2523962						
ANR	2524139	Symbol	graph -> edges		2523962						
ANR	2524140	ClassDef	ctxFcnMatchCB	1778:0:42183:42295							
ANR	2524141	DeclStmt									
ANR	2524142	Decl							RAnal	RAnal *	anal
ANR	2524143	DeclStmt									
ANR	2524144	Decl							RAnalFunction	RAnalFunction *	fcn
ANR	2524145	DeclStmt									
ANR	2524146	Decl							RSignGraphMatchCallback	RSignGraphMatchCallback	cb
ANR	2524147	DeclStmt									
ANR	2524148	Decl							void	void *	user
ANR	2524149	DeclStmt									
ANR	2524150	Decl							int	int	mincc
ANR	2524151	Function	graphMatchCB	1786:0:42299:42652							
ANR	2524152	FunctionDef	"graphMatchCB (RSignItem * it , void * user)"		2524151	0					
ANR	2524153	CompoundStatement		1786:51:42350:42652	2524151	0					
ANR	2524154	IdentifierDeclStatement	struct ctxFcnMatchCB * ctx = ( struct ctxFcnMatchCB * ) user ;	1787:1:42353:42410	2524151	0	True				
ANR	2524155	IdentifierDecl	* ctx = ( struct ctxFcnMatchCB * ) user		2524151	0					
ANR	2524156	IdentifierDeclType	struct ctxFcnMatchCB *		2524151	0					
ANR	2524157	Identifier	ctx		2524151	1					
ANR	2524158	AssignmentExpression	* ctx = ( struct ctxFcnMatchCB * ) user		2524151	2		=			
ANR	2524159	Identifier	ctx		2524151	0					
ANR	2524160	CastExpression	( struct ctxFcnMatchCB * ) user		2524151	1					
ANR	2524161	CastTarget	struct ctxFcnMatchCB *		2524151	0					
ANR	2524162	Identifier	user		2524151	1					
ANR	2524163	IdentifierDeclStatement	RSignGraph * graph = it -> graph ;	1788:1:42413:42442	2524151	1	True				
ANR	2524164	IdentifierDecl	* graph = it -> graph		2524151	0					
ANR	2524165	IdentifierDeclType	RSignGraph *		2524151	0					
ANR	2524166	Identifier	graph		2524151	1					
ANR	2524167	AssignmentExpression	* graph = it -> graph		2524151	2		=			
ANR	2524168	Identifier	graph		2524151	0					
ANR	2524169	PtrMemberAccess	it -> graph		2524151	1					
ANR	2524170	Identifier	it		2524151	0					
ANR	2524171	Identifier	graph		2524151	1					
ANR	2524172	IfStatement	if ( ! graph )		2524151	2					
ANR	2524173	Condition	! graph	1790:5:42450:42455	2524151	0	True				
ANR	2524174	UnaryOperationExpression	! graph		2524151	0					
ANR	2524175	UnaryOperator	!		2524151	0					
ANR	2524176	Identifier	graph		2524151	1					
ANR	2524177	CompoundStatement		5:13:107:107	2524151	1					
ANR	2524178	ReturnStatement	return 1 ;	1791:2:42462:42470	2524151	0	True				
ANR	2524179	PrimaryExpression	1		2524151	0					
ANR	2524180	IfStatement	if ( graph -> cc < ctx -> mincc )		2524151	3					
ANR	2524181	Condition	graph -> cc < ctx -> mincc	1794:5:42481:42502	2524151	0	True				
ANR	2524182	RelationalExpression	graph -> cc < ctx -> mincc		2524151	0		<			
ANR	2524183	PtrMemberAccess	graph -> cc		2524151	0					
ANR	2524184	Identifier	graph		2524151	0					
ANR	2524185	Identifier	cc		2524151	1					
ANR	2524186	PtrMemberAccess	ctx -> mincc		2524151	1					
ANR	2524187	Identifier	ctx		2524151	0					
ANR	2524188	Identifier	mincc		2524151	1					
ANR	2524189	CompoundStatement		9:29:154:154	2524151	1					
ANR	2524190	ReturnStatement	return 1 ;	1795:2:42509:42517	2524151	0	True				
ANR	2524191	PrimaryExpression	1		2524151	0					
ANR	2524192	IfStatement	"if ( ! fcnMetricsCmp ( it , ctx -> fcn ) )"		2524151	4					
ANR	2524193	Condition	"! fcnMetricsCmp ( it , ctx -> fcn )"	1798:5:42528:42556	2524151	0	True				
ANR	2524194	UnaryOperationExpression	"! fcnMetricsCmp ( it , ctx -> fcn )"		2524151	0					
ANR	2524195	UnaryOperator	!		2524151	0					
ANR	2524196	CallExpression	"fcnMetricsCmp ( it , ctx -> fcn )"		2524151	1					
ANR	2524197	Callee	fcnMetricsCmp		2524151	0					
ANR	2524198	Identifier	fcnMetricsCmp		2524151	0					
ANR	2524199	ArgumentList	it		2524151	1					
ANR	2524200	Argument	it		2524151	0					
ANR	2524201	Identifier	it		2524151	0					
ANR	2524202	Argument	ctx -> fcn		2524151	1					
ANR	2524203	PtrMemberAccess	ctx -> fcn		2524151	0					
ANR	2524204	Identifier	ctx		2524151	0					
ANR	2524205	Identifier	fcn		2524151	1					
ANR	2524206	CompoundStatement		13:36:208:208	2524151	1					
ANR	2524207	ReturnStatement	return 1 ;	1799:2:42563:42571	2524151	0	True				
ANR	2524208	PrimaryExpression	1		2524151	0					
ANR	2524209	IfStatement	if ( ctx -> cb )		2524151	5					
ANR	2524210	Condition	ctx -> cb	1802:5:42582:42588	2524151	0	True				
ANR	2524211	PtrMemberAccess	ctx -> cb		2524151	0					
ANR	2524212	Identifier	ctx		2524151	0					
ANR	2524213	Identifier	cb		2524151	1					
ANR	2524214	CompoundStatement		17:14:240:240	2524151	1					
ANR	2524215	ReturnStatement	"return ctx -> cb ( it , ctx -> fcn , ctx -> user ) ;"	1803:2:42595:42635	2524151	0	True				
ANR	2524216	CallExpression	"ctx -> cb ( it , ctx -> fcn , ctx -> user )"		2524151	0					
ANR	2524217	Callee	ctx -> cb		2524151	0					
ANR	2524218	PtrMemberAccess	ctx -> cb		2524151	0					
ANR	2524219	Identifier	ctx		2524151	0					
ANR	2524220	Identifier	cb		2524151	1					
ANR	2524221	ArgumentList	it		2524151	1					
ANR	2524222	Argument	it		2524151	0					
ANR	2524223	Identifier	it		2524151	0					
ANR	2524224	Argument	ctx -> fcn		2524151	1					
ANR	2524225	PtrMemberAccess	ctx -> fcn		2524151	0					
ANR	2524226	Identifier	ctx		2524151	0					
ANR	2524227	Identifier	fcn		2524151	1					
ANR	2524228	Argument	ctx -> user		2524151	2					
ANR	2524229	PtrMemberAccess	ctx -> user		2524151	0					
ANR	2524230	Identifier	ctx		2524151	0					
ANR	2524231	Identifier	user		2524151	1					
ANR	2524232	ReturnStatement	return 1 ;	1806:1:42642:42650	2524151	6	True				
ANR	2524233	PrimaryExpression	1		2524151	0					
ANR	2524234	ReturnType	static int		2524151	1					
ANR	2524235	Identifier	graphMatchCB		2524151	2					
ANR	2524236	ParameterList	"RSignItem * it , void * user"		2524151	3					
ANR	2524237	Parameter	RSignItem * it	1786:24:42323:42335	2524151	0	True				
ANR	2524238	ParameterType	RSignItem *		2524151	0					
ANR	2524239	Identifier	it		2524151	1					
ANR	2524240	Parameter	void * user	1786:39:42338:42347	2524151	1	True				
ANR	2524241	ParameterType	void *		2524151	0					
ANR	2524242	Identifier	user		2524151	1					
ANR	2524243	CFGEntryNode	ENTRY		2524151		True				
ANR	2524244	CFGExitNode	EXIT		2524151		True				
ANR	2524245	Symbol	it -> graph		2524151						
ANR	2524246	Symbol	ctx		2524151						
ANR	2524247	Symbol	ctx -> cb		2524151						
ANR	2524248	Symbol	it		2524151						
ANR	2524249	Symbol	graph		2524151						
ANR	2524250	Symbol	ctx -> mincc		2524151						
ANR	2524251	Symbol	* ctx		2524151						
ANR	2524252	Symbol	ctx -> user		2524151						
ANR	2524253	Symbol	* it		2524151						
ANR	2524254	Symbol	fcnMetricsCmp		2524151						
ANR	2524255	Symbol	* graph		2524151						
ANR	2524256	Symbol	ctx -> fcn		2524151						
ANR	2524257	Symbol	user		2524151						
ANR	2524258	Symbol	graph -> cc		2524151						
ANR	2524259	Function	r_sign_match_graph	1809:0:42655:42920							
ANR	2524260	FunctionDef	"r_sign_match_graph (RAnal * a , RAnalFunction * fcn , int mincc , RSignGraphMatchCallback cb , void * user)"		2524259	0					
ANR	2524261	CompoundStatement		1809:111:42766:42920	2524259	0					
ANR	2524262	ExpressionStatement	"r_return_val_if_fail ( a && fcn && cb , false )"	1810:1:42769:42813	2524259	0	True				
ANR	2524263	CallExpression	"r_return_val_if_fail ( a && fcn && cb , false )"		2524259	0					
ANR	2524264	Callee	r_return_val_if_fail		2524259	0					
ANR	2524265	Identifier	r_return_val_if_fail		2524259	0					
ANR	2524266	ArgumentList	a && fcn && cb		2524259	1					
ANR	2524267	Argument	a && fcn && cb		2524259	0					
ANR	2524268	AndExpression	a && fcn && cb		2524259	0		&&			
ANR	2524269	Identifier	a		2524259	0					
ANR	2524270	AndExpression	fcn && cb		2524259	1		&&			
ANR	2524271	Identifier	fcn		2524259	0					
ANR	2524272	Identifier	cb		2524259	1					
ANR	2524273	Argument	false		2524259	1					
ANR	2524274	Identifier	false		2524259	0					
ANR	2524275	IdentifierDeclStatement	"struct ctxFcnMatchCB ctx = { a , fcn , cb , user , mincc } ;"	1811:1:42816:42870	2524259	1	True				
ANR	2524276	IdentifierDecl	"ctx = { a , fcn , cb , user , mincc }"		2524259	0					
ANR	2524277	IdentifierDeclType	struct ctxFcnMatchCB		2524259	0					
ANR	2524278	Identifier	ctx		2524259	1					
ANR	2524279	AssignmentExpression	"ctx = { a , fcn , cb , user , mincc }"		2524259	2		=			
ANR	2524280	Identifier	ctx		2524259	0					
ANR	2524281	InitializerList	a		2524259	1					
ANR	2524282	Identifier	a		2524259	0					
ANR	2524283	Identifier	fcn		2524259	1					
ANR	2524284	Identifier	cb		2524259	2					
ANR	2524285	Identifier	user		2524259	3					
ANR	2524286	Identifier	mincc		2524259	4					
ANR	2524287	ReturnStatement	"return r_sign_foreach ( a , graphMatchCB , & ctx ) ;"	1812:1:42873:42918	2524259	2	True				
ANR	2524288	CallExpression	"r_sign_foreach ( a , graphMatchCB , & ctx )"		2524259	0					
ANR	2524289	Callee	r_sign_foreach		2524259	0					
ANR	2524290	Identifier	r_sign_foreach		2524259	0					
ANR	2524291	ArgumentList	a		2524259	1					
ANR	2524292	Argument	a		2524259	0					
ANR	2524293	Identifier	a		2524259	0					
ANR	2524294	Argument	graphMatchCB		2524259	1					
ANR	2524295	Identifier	graphMatchCB		2524259	0					
ANR	2524296	Argument	& ctx		2524259	2					
ANR	2524297	UnaryOperationExpression	& ctx		2524259	0					
ANR	2524298	UnaryOperator	&		2524259	0					
ANR	2524299	Identifier	ctx		2524259	1					
ANR	2524300	ReturnType	R_API bool		2524259	1					
ANR	2524301	Identifier	r_sign_match_graph		2524259	2					
ANR	2524302	ParameterList	"RAnal * a , RAnalFunction * fcn , int mincc , RSignGraphMatchCallback cb , void * user"		2524259	3					
ANR	2524303	Parameter	RAnal * a	1809:30:42685:42692	2524259	0	True				
ANR	2524304	ParameterType	RAnal *		2524259	0					
ANR	2524305	Identifier	a		2524259	1					
ANR	2524306	Parameter	RAnalFunction * fcn	1809:40:42695:42712	2524259	1	True				
ANR	2524307	ParameterType	RAnalFunction *		2524259	0					
ANR	2524308	Identifier	fcn		2524259	1					
ANR	2524309	Parameter	int mincc	1809:60:42715:42723	2524259	2	True				
ANR	2524310	ParameterType	int		2524259	0					
ANR	2524311	Identifier	mincc		2524259	1					
ANR	2524312	Parameter	RSignGraphMatchCallback cb	1809:71:42726:42751	2524259	3	True				
ANR	2524313	ParameterType	RSignGraphMatchCallback		2524259	0					
ANR	2524314	Identifier	cb		2524259	1					
ANR	2524315	Parameter	void * user	1809:99:42754:42763	2524259	4	True				
ANR	2524316	ParameterType	void *		2524259	0					
ANR	2524317	Identifier	user		2524259	1					
ANR	2524318	CFGEntryNode	ENTRY		2524259		True				
ANR	2524319	CFGExitNode	EXIT		2524259		True				
ANR	2524320	Symbol	fcn		2524259						
ANR	2524321	Symbol	graphMatchCB		2524259						
ANR	2524322	Symbol	a		2524259						
ANR	2524323	Symbol	mincc		2524259						
ANR	2524324	Symbol	ctx		2524259						
ANR	2524325	Symbol	false		2524259						
ANR	2524326	Symbol	r_sign_foreach		2524259						
ANR	2524327	Symbol	& ctx		2524259						
ANR	2524328	Symbol	user		2524259						
ANR	2524329	Symbol	cb		2524259						
ANR	2524330	Function	addrMatchCB	1815:0:42923:43207							
ANR	2524331	FunctionDef	"addrMatchCB (RSignItem * it , void * user)"		2524330	0					
ANR	2524332	CompoundStatement		1815:50:42973:43207	2524330	0					
ANR	2524333	IdentifierDeclStatement	struct ctxFcnMatchCB * ctx = ( struct ctxFcnMatchCB * ) user ;	1816:1:42976:43033	2524330	0	True				
ANR	2524334	IdentifierDecl	* ctx = ( struct ctxFcnMatchCB * ) user		2524330	0					
ANR	2524335	IdentifierDeclType	struct ctxFcnMatchCB *		2524330	0					
ANR	2524336	Identifier	ctx		2524330	1					
ANR	2524337	AssignmentExpression	* ctx = ( struct ctxFcnMatchCB * ) user		2524330	2		=			
ANR	2524338	Identifier	ctx		2524330	0					
ANR	2524339	CastExpression	( struct ctxFcnMatchCB * ) user		2524330	1					
ANR	2524340	CastTarget	struct ctxFcnMatchCB *		2524330	0					
ANR	2524341	Identifier	user		2524330	1					
ANR	2524342	IfStatement	if ( it -> addr == UT64_MAX )		2524330	1					
ANR	2524343	Condition	it -> addr == UT64_MAX	1818:5:43041:43060	2524330	0	True				
ANR	2524344	EqualityExpression	it -> addr == UT64_MAX		2524330	0		==			
ANR	2524345	PtrMemberAccess	it -> addr		2524330	0					
ANR	2524346	Identifier	it		2524330	0					
ANR	2524347	Identifier	addr		2524330	1					
ANR	2524348	Identifier	UT64_MAX		2524330	1					
ANR	2524349	CompoundStatement		4:27:89:89	2524330	1					
ANR	2524350	ReturnStatement	return 1 ;	1819:2:43067:43075	2524330	0	True				
ANR	2524351	PrimaryExpression	1		2524330	0					
ANR	2524352	IfStatement	if ( it -> addr != ctx -> fcn -> addr )		2524330	2					
ANR	2524353	Condition	it -> addr != ctx -> fcn -> addr	1822:5:43086:43111	2524330	0	True				
ANR	2524354	EqualityExpression	it -> addr != ctx -> fcn -> addr		2524330	0		!=			
ANR	2524355	PtrMemberAccess	it -> addr		2524330	0					
ANR	2524356	Identifier	it		2524330	0					
ANR	2524357	Identifier	addr		2524330	1					
ANR	2524358	PtrMemberAccess	ctx -> fcn -> addr		2524330	1					
ANR	2524359	PtrMemberAccess	ctx -> fcn		2524330	0					
ANR	2524360	Identifier	ctx		2524330	0					
ANR	2524361	Identifier	fcn		2524330	1					
ANR	2524362	Identifier	addr		2524330	1					
ANR	2524363	CompoundStatement		8:33:140:140	2524330	1					
ANR	2524364	ReturnStatement	return 1 ;	1823:2:43118:43126	2524330	0	True				
ANR	2524365	PrimaryExpression	1		2524330	0					
ANR	2524366	IfStatement	if ( ctx -> cb )		2524330	3					
ANR	2524367	Condition	ctx -> cb	1826:5:43137:43143	2524330	0	True				
ANR	2524368	PtrMemberAccess	ctx -> cb		2524330	0					
ANR	2524369	Identifier	ctx		2524330	0					
ANR	2524370	Identifier	cb		2524330	1					
ANR	2524371	CompoundStatement		12:14:172:172	2524330	1					
ANR	2524372	ReturnStatement	"return ctx -> cb ( it , ctx -> fcn , ctx -> user ) ;"	1827:2:43150:43190	2524330	0	True				
ANR	2524373	CallExpression	"ctx -> cb ( it , ctx -> fcn , ctx -> user )"		2524330	0					
ANR	2524374	Callee	ctx -> cb		2524330	0					
ANR	2524375	PtrMemberAccess	ctx -> cb		2524330	0					
ANR	2524376	Identifier	ctx		2524330	0					
ANR	2524377	Identifier	cb		2524330	1					
ANR	2524378	ArgumentList	it		2524330	1					
ANR	2524379	Argument	it		2524330	0					
ANR	2524380	Identifier	it		2524330	0					
ANR	2524381	Argument	ctx -> fcn		2524330	1					
ANR	2524382	PtrMemberAccess	ctx -> fcn		2524330	0					
ANR	2524383	Identifier	ctx		2524330	0					
ANR	2524384	Identifier	fcn		2524330	1					
ANR	2524385	Argument	ctx -> user		2524330	2					
ANR	2524386	PtrMemberAccess	ctx -> user		2524330	0					
ANR	2524387	Identifier	ctx		2524330	0					
ANR	2524388	Identifier	user		2524330	1					
ANR	2524389	ReturnStatement	return 1 ;	1830:1:43197:43205	2524330	4	True				
ANR	2524390	PrimaryExpression	1		2524330	0					
ANR	2524391	ReturnType	static int		2524330	1					
ANR	2524392	Identifier	addrMatchCB		2524330	2					
ANR	2524393	ParameterList	"RSignItem * it , void * user"		2524330	3					
ANR	2524394	Parameter	RSignItem * it	1815:23:42946:42958	2524330	0	True				
ANR	2524395	ParameterType	RSignItem *		2524330	0					
ANR	2524396	Identifier	it		2524330	1					
ANR	2524397	Parameter	void * user	1815:38:42961:42970	2524330	1	True				
ANR	2524398	ParameterType	void *		2524330	0					
ANR	2524399	Identifier	user		2524330	1					
ANR	2524400	CFGEntryNode	ENTRY		2524330		True				
ANR	2524401	CFGExitNode	EXIT		2524330		True				
ANR	2524402	Symbol	ctx		2524330						
ANR	2524403	Symbol	ctx -> cb		2524330						
ANR	2524404	Symbol	it		2524330						
ANR	2524405	Symbol	* ctx -> fcn		2524330						
ANR	2524406	Symbol	* ctx		2524330						
ANR	2524407	Symbol	ctx -> user		2524330						
ANR	2524408	Symbol	* it		2524330						
ANR	2524409	Symbol	it -> addr		2524330						
ANR	2524410	Symbol	ctx -> fcn		2524330						
ANR	2524411	Symbol	* * ctx		2524330						
ANR	2524412	Symbol	UT64_MAX		2524330						
ANR	2524413	Symbol	user		2524330						
ANR	2524414	Symbol	ctx -> fcn -> addr		2524330						
ANR	2524415	Function	r_sign_match_addr	1833:0:43210:43459							
ANR	2524416	FunctionDef	"r_sign_match_addr (RAnal * a , RAnalFunction * fcn , RSignOffsetMatchCallback cb , void * user)"		2524415	0					
ANR	2524417	CompoundStatement		1833:100:43310:43459	2524415	0					
ANR	2524418	ExpressionStatement	"r_return_val_if_fail ( a && fcn && cb , false )"	1834:1:43313:43357	2524415	0	True				
ANR	2524419	CallExpression	"r_return_val_if_fail ( a && fcn && cb , false )"		2524415	0					
ANR	2524420	Callee	r_return_val_if_fail		2524415	0					
ANR	2524421	Identifier	r_return_val_if_fail		2524415	0					
ANR	2524422	ArgumentList	a && fcn && cb		2524415	1					
ANR	2524423	Argument	a && fcn && cb		2524415	0					
ANR	2524424	AndExpression	a && fcn && cb		2524415	0		&&			
ANR	2524425	Identifier	a		2524415	0					
ANR	2524426	AndExpression	fcn && cb		2524415	1		&&			
ANR	2524427	Identifier	fcn		2524415	0					
ANR	2524428	Identifier	cb		2524415	1					
ANR	2524429	Argument	false		2524415	1					
ANR	2524430	Identifier	false		2524415	0					
ANR	2524431	IdentifierDeclStatement	"struct ctxFcnMatchCB ctx = { a , fcn , cb , user , 0 } ;"	1835:1:43360:43410	2524415	1	True				
ANR	2524432	IdentifierDecl	"ctx = { a , fcn , cb , user , 0 }"		2524415	0					
ANR	2524433	IdentifierDeclType	struct ctxFcnMatchCB		2524415	0					
ANR	2524434	Identifier	ctx		2524415	1					
ANR	2524435	AssignmentExpression	"ctx = { a , fcn , cb , user , 0 }"		2524415	2		=			
ANR	2524436	Identifier	ctx		2524415	0					
ANR	2524437	InitializerList	a		2524415	1					
ANR	2524438	Identifier	a		2524415	0					
ANR	2524439	Identifier	fcn		2524415	1					
ANR	2524440	Identifier	cb		2524415	2					
ANR	2524441	Identifier	user		2524415	3					
ANR	2524442	PrimaryExpression	0		2524415	4					
ANR	2524443	ReturnStatement	"return r_sign_foreach ( a , addrMatchCB , & ctx ) ;"	1836:1:43413:43457	2524415	2	True				
ANR	2524444	CallExpression	"r_sign_foreach ( a , addrMatchCB , & ctx )"		2524415	0					
ANR	2524445	Callee	r_sign_foreach		2524415	0					
ANR	2524446	Identifier	r_sign_foreach		2524415	0					
ANR	2524447	ArgumentList	a		2524415	1					
ANR	2524448	Argument	a		2524415	0					
ANR	2524449	Identifier	a		2524415	0					
ANR	2524450	Argument	addrMatchCB		2524415	1					
ANR	2524451	Identifier	addrMatchCB		2524415	0					
ANR	2524452	Argument	& ctx		2524415	2					
ANR	2524453	UnaryOperationExpression	& ctx		2524415	0					
ANR	2524454	UnaryOperator	&		2524415	0					
ANR	2524455	Identifier	ctx		2524415	1					
ANR	2524456	ReturnType	R_API bool		2524415	1					
ANR	2524457	Identifier	r_sign_match_addr		2524415	2					
ANR	2524458	ParameterList	"RAnal * a , RAnalFunction * fcn , RSignOffsetMatchCallback cb , void * user"		2524415	3					
ANR	2524459	Parameter	RAnal * a	1833:29:43239:43246	2524415	0	True				
ANR	2524460	ParameterType	RAnal *		2524415	0					
ANR	2524461	Identifier	a		2524415	1					
ANR	2524462	Parameter	RAnalFunction * fcn	1833:39:43249:43266	2524415	1	True				
ANR	2524463	ParameterType	RAnalFunction *		2524415	0					
ANR	2524464	Identifier	fcn		2524415	1					
ANR	2524465	Parameter	RSignOffsetMatchCallback cb	1833:59:43269:43295	2524415	2	True				
ANR	2524466	ParameterType	RSignOffsetMatchCallback		2524415	0					
ANR	2524467	Identifier	cb		2524415	1					
ANR	2524468	Parameter	void * user	1833:88:43298:43307	2524415	3	True				
ANR	2524469	ParameterType	void *		2524415	0					
ANR	2524470	Identifier	user		2524415	1					
ANR	2524471	CFGEntryNode	ENTRY		2524415		True				
ANR	2524472	CFGExitNode	EXIT		2524415		True				
ANR	2524473	Symbol	fcn		2524415						
ANR	2524474	Symbol	a		2524415						
ANR	2524475	Symbol	addrMatchCB		2524415						
ANR	2524476	Symbol	ctx		2524415						
ANR	2524477	Symbol	false		2524415						
ANR	2524478	Symbol	r_sign_foreach		2524415						
ANR	2524479	Symbol	& ctx		2524415						
ANR	2524480	Symbol	user		2524415						
ANR	2524481	Symbol	cb		2524415						
ANR	2524482	Function	hashMatchCB	1839:0:43462:43941							
ANR	2524483	FunctionDef	"hashMatchCB (RSignItem * it , void * user)"		2524482	0					
ANR	2524484	CompoundStatement		1839:50:43512:43941	2524482	0					
ANR	2524485	IdentifierDeclStatement	struct ctxFcnMatchCB * ctx = ( struct ctxFcnMatchCB * ) user ;	1840:1:43515:43572	2524482	0	True				
ANR	2524486	IdentifierDecl	* ctx = ( struct ctxFcnMatchCB * ) user		2524482	0					
ANR	2524487	IdentifierDeclType	struct ctxFcnMatchCB *		2524482	0					
ANR	2524488	Identifier	ctx		2524482	1					
ANR	2524489	AssignmentExpression	* ctx = ( struct ctxFcnMatchCB * ) user		2524482	2		=			
ANR	2524490	Identifier	ctx		2524482	0					
ANR	2524491	CastExpression	( struct ctxFcnMatchCB * ) user		2524482	1					
ANR	2524492	CastTarget	struct ctxFcnMatchCB *		2524482	0					
ANR	2524493	Identifier	user		2524482	1					
ANR	2524494	IdentifierDeclStatement	RSignHash * hash = it -> hash ;	1841:1:43575:43601	2524482	1	True				
ANR	2524495	IdentifierDecl	* hash = it -> hash		2524482	0					
ANR	2524496	IdentifierDeclType	RSignHash *		2524482	0					
ANR	2524497	Identifier	hash		2524482	1					
ANR	2524498	AssignmentExpression	* hash = it -> hash		2524482	2		=			
ANR	2524499	Identifier	hash		2524482	0					
ANR	2524500	PtrMemberAccess	it -> hash		2524482	1					
ANR	2524501	Identifier	it		2524482	0					
ANR	2524502	Identifier	hash		2524482	1					
ANR	2524503	IfStatement	if ( ! hash || ! hash -> bbhash || hash -> bbhash [ 0 ] == 0 )		2524482	2					
ANR	2524504	Condition	! hash || ! hash -> bbhash || hash -> bbhash [ 0 ] == 0	1843:5:43609:43654	2524482	0	True				
ANR	2524505	OrExpression	! hash || ! hash -> bbhash || hash -> bbhash [ 0 ] == 0		2524482	0		||			
ANR	2524506	UnaryOperationExpression	! hash		2524482	0					
ANR	2524507	UnaryOperator	!		2524482	0					
ANR	2524508	Identifier	hash		2524482	1					
ANR	2524509	OrExpression	! hash -> bbhash || hash -> bbhash [ 0 ] == 0		2524482	1		||			
ANR	2524510	UnaryOperationExpression	! hash -> bbhash		2524482	0					
ANR	2524511	UnaryOperator	!		2524482	0					
ANR	2524512	PtrMemberAccess	hash -> bbhash		2524482	1					
ANR	2524513	Identifier	hash		2524482	0					
ANR	2524514	Identifier	bbhash		2524482	1					
ANR	2524515	EqualityExpression	hash -> bbhash [ 0 ] == 0		2524482	1		==			
ANR	2524516	ArrayIndexing	hash -> bbhash [ 0 ]		2524482	0					
ANR	2524517	PtrMemberAccess	hash -> bbhash		2524482	0					
ANR	2524518	Identifier	hash		2524482	0					
ANR	2524519	Identifier	bbhash		2524482	1					
ANR	2524520	PrimaryExpression	0		2524482	1					
ANR	2524521	PrimaryExpression	0		2524482	1					
ANR	2524522	CompoundStatement		5:53:144:144	2524482	1					
ANR	2524523	ReturnStatement	return 1 ;	1844:2:43661:43669	2524482	0	True				
ANR	2524524	PrimaryExpression	1		2524482	0					
ANR	2524525	IdentifierDeclStatement	"char * digest_hex = r_sign_calc_bbhash ( ctx -> anal , ctx -> fcn ) ;"	1847:1:43676:43735	2524482	3	True				
ANR	2524526	IdentifierDecl	"* digest_hex = r_sign_calc_bbhash ( ctx -> anal , ctx -> fcn )"		2524482	0					
ANR	2524527	IdentifierDeclType	char *		2524482	0					
ANR	2524528	Identifier	digest_hex		2524482	1					
ANR	2524529	AssignmentExpression	"* digest_hex = r_sign_calc_bbhash ( ctx -> anal , ctx -> fcn )"		2524482	2		=			
ANR	2524530	Identifier	digest_hex		2524482	0					
ANR	2524531	CallExpression	"r_sign_calc_bbhash ( ctx -> anal , ctx -> fcn )"		2524482	1					
ANR	2524532	Callee	r_sign_calc_bbhash		2524482	0					
ANR	2524533	Identifier	r_sign_calc_bbhash		2524482	0					
ANR	2524534	ArgumentList	ctx -> anal		2524482	1					
ANR	2524535	Argument	ctx -> anal		2524482	0					
ANR	2524536	PtrMemberAccess	ctx -> anal		2524482	0					
ANR	2524537	Identifier	ctx		2524482	0					
ANR	2524538	Identifier	anal		2524482	1					
ANR	2524539	Argument	ctx -> fcn		2524482	1					
ANR	2524540	PtrMemberAccess	ctx -> fcn		2524482	0					
ANR	2524541	Identifier	ctx		2524482	0					
ANR	2524542	Identifier	fcn		2524482	1					
ANR	2524543	IdentifierDeclStatement	bool retval = false ;	1848:1:43738:43757	2524482	4	True				
ANR	2524544	IdentifierDecl	retval = false		2524482	0					
ANR	2524545	IdentifierDeclType	bool		2524482	0					
ANR	2524546	Identifier	retval		2524482	1					
ANR	2524547	AssignmentExpression	retval = false		2524482	2		=			
ANR	2524548	Identifier	false		2524482	0					
ANR	2524549	Identifier	false		2524482	1					
ANR	2524550	IfStatement	"if ( digest_hex && strcmp ( hash -> bbhash , digest_hex ) )"		2524482	5					
ANR	2524551	Condition	"digest_hex && strcmp ( hash -> bbhash , digest_hex )"	1849:5:43764:43810	2524482	0	True				
ANR	2524552	AndExpression	"digest_hex && strcmp ( hash -> bbhash , digest_hex )"		2524482	0		&&			
ANR	2524553	Identifier	digest_hex		2524482	0					
ANR	2524554	CallExpression	"strcmp ( hash -> bbhash , digest_hex )"		2524482	1					
ANR	2524555	Callee	strcmp		2524482	0					
ANR	2524556	Identifier	strcmp		2524482	0					
ANR	2524557	ArgumentList	hash -> bbhash		2524482	1					
ANR	2524558	Argument	hash -> bbhash		2524482	0					
ANR	2524559	PtrMemberAccess	hash -> bbhash		2524482	0					
ANR	2524560	Identifier	hash		2524482	0					
ANR	2524561	Identifier	bbhash		2524482	1					
ANR	2524562	Argument	digest_hex		2524482	1					
ANR	2524563	Identifier	digest_hex		2524482	0					
ANR	2524564	CompoundStatement		11:54:300:300	2524482	1					
ANR	2524565	GotoStatement	goto beach ;	1850:2:43817:43827	2524482	0	True				
ANR	2524566	Identifier	beach		2524482	0					
ANR	2524567	IfStatement	if ( ctx -> cb )		2524482	6					
ANR	2524568	Condition	ctx -> cb	1853:5:43838:43844	2524482	0	True				
ANR	2524569	PtrMemberAccess	ctx -> cb		2524482	0					
ANR	2524570	Identifier	ctx		2524482	0					
ANR	2524571	Identifier	cb		2524482	1					
ANR	2524572	CompoundStatement		15:14:334:334	2524482	1					
ANR	2524573	ExpressionStatement	"retval = ctx -> cb ( it , ctx -> fcn , ctx -> user )"	1854:2:43851:43893	2524482	0	True				
ANR	2524574	AssignmentExpression	"retval = ctx -> cb ( it , ctx -> fcn , ctx -> user )"		2524482	0		=			
ANR	2524575	Identifier	retval		2524482	0					
ANR	2524576	CallExpression	"ctx -> cb ( it , ctx -> fcn , ctx -> user )"		2524482	1					
ANR	2524577	Callee	ctx -> cb		2524482	0					
ANR	2524578	PtrMemberAccess	ctx -> cb		2524482	0					
ANR	2524579	Identifier	ctx		2524482	0					
ANR	2524580	Identifier	cb		2524482	1					
ANR	2524581	ArgumentList	it		2524482	1					
ANR	2524582	Argument	it		2524482	0					
ANR	2524583	Identifier	it		2524482	0					
ANR	2524584	Argument	ctx -> fcn		2524482	1					
ANR	2524585	PtrMemberAccess	ctx -> fcn		2524482	0					
ANR	2524586	Identifier	ctx		2524482	0					
ANR	2524587	Identifier	fcn		2524482	1					
ANR	2524588	Argument	ctx -> user		2524482	2					
ANR	2524589	PtrMemberAccess	ctx -> user		2524482	0					
ANR	2524590	Identifier	ctx		2524482	0					
ANR	2524591	Identifier	user		2524482	1					
ANR	2524592	Label	beach :	1856:0:43898:43903	2524482	7	True				
ANR	2524593	Identifier	beach		2524482	0					
ANR	2524594	ExpressionStatement	free ( digest_hex )	1857:1:43906:43923	2524482	8	True				
ANR	2524595	CallExpression	free ( digest_hex )		2524482	0					
ANR	2524596	Callee	free		2524482	0					
ANR	2524597	Identifier	free		2524482	0					
ANR	2524598	ArgumentList	digest_hex		2524482	1					
ANR	2524599	Argument	digest_hex		2524482	0					
ANR	2524600	Identifier	digest_hex		2524482	0					
ANR	2524601	ReturnStatement	return retval ;	1858:1:43926:43939	2524482	9	True				
ANR	2524602	Identifier	retval		2524482	0					
ANR	2524603	ReturnType	static int		2524482	1					
ANR	2524604	Identifier	hashMatchCB		2524482	2					
ANR	2524605	ParameterList	"RSignItem * it , void * user"		2524482	3					
ANR	2524606	Parameter	RSignItem * it	1839:23:43485:43497	2524482	0	True				
ANR	2524607	ParameterType	RSignItem *		2524482	0					
ANR	2524608	Identifier	it		2524482	1					
ANR	2524609	Parameter	void * user	1839:38:43500:43509	2524482	1	True				
ANR	2524610	ParameterType	void *		2524482	0					
ANR	2524611	Identifier	user		2524482	1					
ANR	2524612	CFGEntryNode	ENTRY		2524482		True				
ANR	2524613	CFGExitNode	EXIT		2524482		True				
ANR	2524614	Symbol	hash -> bbhash		2524482						
ANR	2524615	Symbol	strcmp		2524482						
ANR	2524616	Symbol	ctx		2524482						
ANR	2524617	Symbol	* hash -> bbhash		2524482						
ANR	2524618	Symbol	false		2524482						
ANR	2524619	Symbol	ctx -> anal		2524482						
ANR	2524620	Symbol	ctx -> cb		2524482						
ANR	2524621	Symbol	it		2524482						
ANR	2524622	Symbol	* * hash		2524482						
ANR	2524623	Symbol	* ctx		2524482						
ANR	2524624	Symbol	retval		2524482						
ANR	2524625	Symbol	r_sign_calc_bbhash		2524482						
ANR	2524626	Symbol	ctx -> user		2524482						
ANR	2524627	Symbol	* it		2524482						
ANR	2524628	Symbol	it -> hash		2524482						
ANR	2524629	Symbol	ctx -> fcn		2524482						
ANR	2524630	Symbol	* hash		2524482						
ANR	2524631	Symbol	digest_hex		2524482						
ANR	2524632	Symbol	user		2524482						
ANR	2524633	Symbol	hash		2524482						
ANR	2524634	Function	r_sign_match_hash	1861:0:43944:44191							
ANR	2524635	FunctionDef	"r_sign_match_hash (RAnal * a , RAnalFunction * fcn , RSignHashMatchCallback cb , void * user)"		2524634	0					
ANR	2524636	CompoundStatement		1861:98:44042:44191	2524634	0					
ANR	2524637	ExpressionStatement	"r_return_val_if_fail ( a && fcn && cb , false )"	1862:1:44045:44089	2524634	0	True				
ANR	2524638	CallExpression	"r_return_val_if_fail ( a && fcn && cb , false )"		2524634	0					
ANR	2524639	Callee	r_return_val_if_fail		2524634	0					
ANR	2524640	Identifier	r_return_val_if_fail		2524634	0					
ANR	2524641	ArgumentList	a && fcn && cb		2524634	1					
ANR	2524642	Argument	a && fcn && cb		2524634	0					
ANR	2524643	AndExpression	a && fcn && cb		2524634	0		&&			
ANR	2524644	Identifier	a		2524634	0					
ANR	2524645	AndExpression	fcn && cb		2524634	1		&&			
ANR	2524646	Identifier	fcn		2524634	0					
ANR	2524647	Identifier	cb		2524634	1					
ANR	2524648	Argument	false		2524634	1					
ANR	2524649	Identifier	false		2524634	0					
ANR	2524650	IdentifierDeclStatement	"struct ctxFcnMatchCB ctx = { a , fcn , cb , user , 0 } ;"	1863:1:44092:44142	2524634	1	True				
ANR	2524651	IdentifierDecl	"ctx = { a , fcn , cb , user , 0 }"		2524634	0					
ANR	2524652	IdentifierDeclType	struct ctxFcnMatchCB		2524634	0					
ANR	2524653	Identifier	ctx		2524634	1					
ANR	2524654	AssignmentExpression	"ctx = { a , fcn , cb , user , 0 }"		2524634	2		=			
ANR	2524655	Identifier	ctx		2524634	0					
ANR	2524656	InitializerList	a		2524634	1					
ANR	2524657	Identifier	a		2524634	0					
ANR	2524658	Identifier	fcn		2524634	1					
ANR	2524659	Identifier	cb		2524634	2					
ANR	2524660	Identifier	user		2524634	3					
ANR	2524661	PrimaryExpression	0		2524634	4					
ANR	2524662	ReturnStatement	"return r_sign_foreach ( a , hashMatchCB , & ctx ) ;"	1864:1:44145:44189	2524634	2	True				
ANR	2524663	CallExpression	"r_sign_foreach ( a , hashMatchCB , & ctx )"		2524634	0					
ANR	2524664	Callee	r_sign_foreach		2524634	0					
ANR	2524665	Identifier	r_sign_foreach		2524634	0					
ANR	2524666	ArgumentList	a		2524634	1					
ANR	2524667	Argument	a		2524634	0					
ANR	2524668	Identifier	a		2524634	0					
ANR	2524669	Argument	hashMatchCB		2524634	1					
ANR	2524670	Identifier	hashMatchCB		2524634	0					
ANR	2524671	Argument	& ctx		2524634	2					
ANR	2524672	UnaryOperationExpression	& ctx		2524634	0					
ANR	2524673	UnaryOperator	&		2524634	0					
ANR	2524674	Identifier	ctx		2524634	1					
ANR	2524675	ReturnType	R_API bool		2524634	1					
ANR	2524676	Identifier	r_sign_match_hash		2524634	2					
ANR	2524677	ParameterList	"RAnal * a , RAnalFunction * fcn , RSignHashMatchCallback cb , void * user"		2524634	3					
ANR	2524678	Parameter	RAnal * a	1861:29:43973:43980	2524634	0	True				
ANR	2524679	ParameterType	RAnal *		2524634	0					
ANR	2524680	Identifier	a		2524634	1					
ANR	2524681	Parameter	RAnalFunction * fcn	1861:39:43983:44000	2524634	1	True				
ANR	2524682	ParameterType	RAnalFunction *		2524634	0					
ANR	2524683	Identifier	fcn		2524634	1					
ANR	2524684	Parameter	RSignHashMatchCallback cb	1861:59:44003:44027	2524634	2	True				
ANR	2524685	ParameterType	RSignHashMatchCallback		2524634	0					
ANR	2524686	Identifier	cb		2524634	1					
ANR	2524687	Parameter	void * user	1861:86:44030:44039	2524634	3	True				
ANR	2524688	ParameterType	void *		2524634	0					
ANR	2524689	Identifier	user		2524634	1					
ANR	2524690	CFGEntryNode	ENTRY		2524634		True				
ANR	2524691	CFGExitNode	EXIT		2524634		True				
ANR	2524692	Symbol	fcn		2524634						
ANR	2524693	Symbol	a		2524634						
ANR	2524694	Symbol	ctx		2524634						
ANR	2524695	Symbol	false		2524634						
ANR	2524696	Symbol	r_sign_foreach		2524634						
ANR	2524697	Symbol	& ctx		2524634						
ANR	2524698	Symbol	user		2524634						
ANR	2524699	Symbol	hashMatchCB		2524634						
ANR	2524700	Symbol	cb		2524634						
ANR	2524701	Function	refsMatchCB	1868:0:44195:44945							
ANR	2524702	FunctionDef	"refsMatchCB (RSignItem * it , void * user)"		2524701	0					
ANR	2524703	CompoundStatement		1868:50:44245:44945	2524701	0					
ANR	2524704	IdentifierDeclStatement	struct ctxFcnMatchCB * ctx = ( struct ctxFcnMatchCB * ) user ;	1869:1:44248:44305	2524701	0	True				
ANR	2524705	IdentifierDecl	* ctx = ( struct ctxFcnMatchCB * ) user		2524701	0					
ANR	2524706	IdentifierDeclType	struct ctxFcnMatchCB *		2524701	0					
ANR	2524707	Identifier	ctx		2524701	1					
ANR	2524708	AssignmentExpression	* ctx = ( struct ctxFcnMatchCB * ) user		2524701	2		=			
ANR	2524709	Identifier	ctx		2524701	0					
ANR	2524710	CastExpression	( struct ctxFcnMatchCB * ) user		2524701	1					
ANR	2524711	CastTarget	struct ctxFcnMatchCB *		2524701	0					
ANR	2524712	Identifier	user		2524701	1					
ANR	2524713	IdentifierDeclStatement	RList * refs = NULL ;	1870:1:44308:44326	2524701	1	True				
ANR	2524714	IdentifierDecl	* refs = NULL		2524701	0					
ANR	2524715	IdentifierDeclType	RList *		2524701	0					
ANR	2524716	Identifier	refs		2524701	1					
ANR	2524717	AssignmentExpression	* refs = NULL		2524701	2		=			
ANR	2524718	Identifier	NULL		2524701	0					
ANR	2524719	Identifier	NULL		2524701	1					
ANR	2524720	IdentifierDeclStatement	"char * ref_a = NULL , * ref_b = NULL ;"	1871:1:44329:44362	2524701	2	True				
ANR	2524721	IdentifierDecl	* ref_a = NULL		2524701	0					
ANR	2524722	IdentifierDeclType	char *		2524701	0					
ANR	2524723	Identifier	ref_a		2524701	1					
ANR	2524724	AssignmentExpression	* ref_a = NULL		2524701	2		=			
ANR	2524725	Identifier	NULL		2524701	0					
ANR	2524726	Identifier	NULL		2524701	1					
ANR	2524727	IdentifierDecl	* ref_b = NULL		2524701	1					
ANR	2524728	IdentifierDeclType	char *		2524701	0					
ANR	2524729	Identifier	ref_b		2524701	1					
ANR	2524730	AssignmentExpression	* ref_b = NULL		2524701	2		=			
ANR	2524731	Identifier	NULL		2524701	0					
ANR	2524732	Identifier	NULL		2524701	1					
ANR	2524733	IdentifierDeclStatement	"int i = 0 , retval = 1 ;"	1872:1:44365:44386	2524701	3	True				
ANR	2524734	IdentifierDecl	i = 0		2524701	0					
ANR	2524735	IdentifierDeclType	int		2524701	0					
ANR	2524736	Identifier	i		2524701	1					
ANR	2524737	AssignmentExpression	i = 0		2524701	2		=			
ANR	2524738	Identifier	i		2524701	0					
ANR	2524739	PrimaryExpression	0		2524701	1					
ANR	2524740	IdentifierDecl	retval = 1		2524701	1					
ANR	2524741	IdentifierDeclType	int		2524701	0					
ANR	2524742	Identifier	retval		2524701	1					
ANR	2524743	AssignmentExpression	retval = 1		2524701	2		=			
ANR	2524744	Identifier	retval		2524701	0					
ANR	2524745	PrimaryExpression	1		2524701	1					
ANR	2524746	IfStatement	if ( ! it -> refs )		2524701	4					
ANR	2524747	Condition	! it -> refs	1874:5:44394:44402	2524701	0	True				
ANR	2524748	UnaryOperationExpression	! it -> refs		2524701	0					
ANR	2524749	UnaryOperator	!		2524701	0					
ANR	2524750	PtrMemberAccess	it -> refs		2524701	1					
ANR	2524751	Identifier	it		2524701	0					
ANR	2524752	Identifier	refs		2524701	1					
ANR	2524753	CompoundStatement		7:16:159:159	2524701	1					
ANR	2524754	ReturnStatement	return 1 ;	1875:2:44409:44417	2524701	0	True				
ANR	2524755	PrimaryExpression	1		2524701	0					
ANR	2524756	ExpressionStatement	"refs = r_sign_fcn_refs ( ctx -> anal , ctx -> fcn )"	1879:1:44468:44512	2524701	5	True				
ANR	2524757	AssignmentExpression	"refs = r_sign_fcn_refs ( ctx -> anal , ctx -> fcn )"		2524701	0		=			
ANR	2524758	Identifier	refs		2524701	0					
ANR	2524759	CallExpression	"r_sign_fcn_refs ( ctx -> anal , ctx -> fcn )"		2524701	1					
ANR	2524760	Callee	r_sign_fcn_refs		2524701	0					
ANR	2524761	Identifier	r_sign_fcn_refs		2524701	0					
ANR	2524762	ArgumentList	ctx -> anal		2524701	1					
ANR	2524763	Argument	ctx -> anal		2524701	0					
ANR	2524764	PtrMemberAccess	ctx -> anal		2524701	0					
ANR	2524765	Identifier	ctx		2524701	0					
ANR	2524766	Identifier	anal		2524701	1					
ANR	2524767	Argument	ctx -> fcn		2524701	1					
ANR	2524768	PtrMemberAccess	ctx -> fcn		2524701	0					
ANR	2524769	Identifier	ctx		2524701	0					
ANR	2524770	Identifier	fcn		2524701	1					
ANR	2524771	IfStatement	if ( ! refs )		2524701	6					
ANR	2524772	Condition	! refs	1880:5:44519:44523	2524701	0	True				
ANR	2524773	UnaryOperationExpression	! refs		2524701	0					
ANR	2524774	UnaryOperator	!		2524701	0					
ANR	2524775	Identifier	refs		2524701	1					
ANR	2524776	CompoundStatement		13:12:280:280	2524701	1					
ANR	2524777	ReturnStatement	return 1 ;	1881:2:44530:44538	2524701	0	True				
ANR	2524778	PrimaryExpression	1		2524701	0					
ANR	2524779	ForStatement	for ( i = 0 ; ; i ++ )		2524701	7					
ANR	2524780	ForInit	i = 0 ;	1884:6:44550:44555	2524701	0	True				
ANR	2524781	AssignmentExpression	i = 0		2524701	0		=			
ANR	2524782	Identifier	i		2524701	0					
ANR	2524783	PrimaryExpression	0		2524701	1					
ANR	2524784	PostIncDecOperationExpression	i ++	1884:15:44559:44561	2524701	1	True				
ANR	2524785	Identifier	i		2524701	0					
ANR	2524786	IncDec	++		2524701	1					
ANR	2524787	CompoundStatement		17:20:318:318	2524701	2					
ANR	2524788	ExpressionStatement	"ref_a = ( char * ) r_list_get_n ( it -> refs , i )"	1885:2:44568:44611	2524701	0	True				
ANR	2524789	AssignmentExpression	"ref_a = ( char * ) r_list_get_n ( it -> refs , i )"		2524701	0		=			
ANR	2524790	Identifier	ref_a		2524701	0					
ANR	2524791	CastExpression	"( char * ) r_list_get_n ( it -> refs , i )"		2524701	1					
ANR	2524792	CastTarget	char *		2524701	0					
ANR	2524793	CallExpression	"r_list_get_n ( it -> refs , i )"		2524701	1					
ANR	2524794	Callee	r_list_get_n		2524701	0					
ANR	2524795	Identifier	r_list_get_n		2524701	0					
ANR	2524796	ArgumentList	it -> refs		2524701	1					
ANR	2524797	Argument	it -> refs		2524701	0					
ANR	2524798	PtrMemberAccess	it -> refs		2524701	0					
ANR	2524799	Identifier	it		2524701	0					
ANR	2524800	Identifier	refs		2524701	1					
ANR	2524801	Argument	i		2524701	1					
ANR	2524802	Identifier	i		2524701	0					
ANR	2524803	ExpressionStatement	"ref_b = ( char * ) r_list_get_n ( refs , i )"	1886:2:44615:44654	2524701	1	True				
ANR	2524804	AssignmentExpression	"ref_b = ( char * ) r_list_get_n ( refs , i )"		2524701	0		=			
ANR	2524805	Identifier	ref_b		2524701	0					
ANR	2524806	CastExpression	"( char * ) r_list_get_n ( refs , i )"		2524701	1					
ANR	2524807	CastTarget	char *		2524701	0					
ANR	2524808	CallExpression	"r_list_get_n ( refs , i )"		2524701	1					
ANR	2524809	Callee	r_list_get_n		2524701	0					
ANR	2524810	Identifier	r_list_get_n		2524701	0					
ANR	2524811	ArgumentList	refs		2524701	1					
ANR	2524812	Argument	refs		2524701	0					
ANR	2524813	Identifier	refs		2524701	0					
ANR	2524814	Argument	i		2524701	1					
ANR	2524815	Identifier	i		2524701	0					
ANR	2524816	IfStatement	if ( ! ref_a || ! ref_b )		2524701	2					
ANR	2524817	Condition	! ref_a || ! ref_b	1888:6:44663:44678	2524701	0	True				
ANR	2524818	OrExpression	! ref_a || ! ref_b		2524701	0		||			
ANR	2524819	UnaryOperationExpression	! ref_a		2524701	0					
ANR	2524820	UnaryOperator	!		2524701	0					
ANR	2524821	Identifier	ref_a		2524701	1					
ANR	2524822	UnaryOperationExpression	! ref_b		2524701	1					
ANR	2524823	UnaryOperator	!		2524701	0					
ANR	2524824	Identifier	ref_b		2524701	1					
ANR	2524825	CompoundStatement		21:24:435:435	2524701	1					
ANR	2524826	IfStatement	if ( ref_a != ref_b )		2524701	0					
ANR	2524827	Condition	ref_a != ref_b	1889:7:44690:44703	2524701	0	True				
ANR	2524828	EqualityExpression	ref_a != ref_b		2524701	0		!=			
ANR	2524829	Identifier	ref_a		2524701	0					
ANR	2524830	Identifier	ref_b		2524701	1					
ANR	2524831	CompoundStatement		22:23:460:460	2524701	1					
ANR	2524832	ExpressionStatement	retval = 1	1890:4:44712:44722	2524701	0	True				
ANR	2524833	AssignmentExpression	retval = 1		2524701	0		=			
ANR	2524834	Identifier	retval		2524701	0					
ANR	2524835	PrimaryExpression	1		2524701	1					
ANR	2524836	GotoStatement	goto out ;	1891:4:44728:44736	2524701	1	True				
ANR	2524837	Identifier	out		2524701	0					
ANR	2524838	BreakStatement	break ;	1893:3:44746:44751	2524701	1	True				
ANR	2524839	IfStatement	"if ( strcmp ( ref_a , ref_b ) )"		2524701	3					
ANR	2524840	Condition	"strcmp ( ref_a , ref_b )"	1895:6:44763:44783	2524701	0	True				
ANR	2524841	CallExpression	"strcmp ( ref_a , ref_b )"		2524701	0					
ANR	2524842	Callee	strcmp		2524701	0					
ANR	2524843	Identifier	strcmp		2524701	0					
ANR	2524844	ArgumentList	ref_a		2524701	1					
ANR	2524845	Argument	ref_a		2524701	0					
ANR	2524846	Identifier	ref_a		2524701	0					
ANR	2524847	Argument	ref_b		2524701	1					
ANR	2524848	Identifier	ref_b		2524701	0					
ANR	2524849	CompoundStatement		28:29:540:540	2524701	1					
ANR	2524850	ExpressionStatement	retval = 1	1896:3:44791:44801	2524701	0	True				
ANR	2524851	AssignmentExpression	retval = 1		2524701	0		=			
ANR	2524852	Identifier	retval		2524701	0					
ANR	2524853	PrimaryExpression	1		2524701	1					
ANR	2524854	GotoStatement	goto out ;	1897:3:44806:44814	2524701	1	True				
ANR	2524855	Identifier	out		2524701	0					
ANR	2524856	IfStatement	if ( ctx -> cb )		2524701	8					
ANR	2524857	Condition	ctx -> cb	1901:5:44829:44835	2524701	0	True				
ANR	2524858	PtrMemberAccess	ctx -> cb		2524701	0					
ANR	2524859	Identifier	ctx		2524701	0					
ANR	2524860	Identifier	cb		2524701	1					
ANR	2524861	CompoundStatement		34:14:592:592	2524701	1					
ANR	2524862	ExpressionStatement	"retval = ctx -> cb ( it , ctx -> fcn , ctx -> user )"	1902:2:44842:44884	2524701	0	True				
ANR	2524863	AssignmentExpression	"retval = ctx -> cb ( it , ctx -> fcn , ctx -> user )"		2524701	0		=			
ANR	2524864	Identifier	retval		2524701	0					
ANR	2524865	CallExpression	"ctx -> cb ( it , ctx -> fcn , ctx -> user )"		2524701	1					
ANR	2524866	Callee	ctx -> cb		2524701	0					
ANR	2524867	PtrMemberAccess	ctx -> cb		2524701	0					
ANR	2524868	Identifier	ctx		2524701	0					
ANR	2524869	Identifier	cb		2524701	1					
ANR	2524870	ArgumentList	it		2524701	1					
ANR	2524871	Argument	it		2524701	0					
ANR	2524872	Identifier	it		2524701	0					
ANR	2524873	Argument	ctx -> fcn		2524701	1					
ANR	2524874	PtrMemberAccess	ctx -> fcn		2524701	0					
ANR	2524875	Identifier	ctx		2524701	0					
ANR	2524876	Identifier	fcn		2524701	1					
ANR	2524877	Argument	ctx -> user		2524701	2					
ANR	2524878	PtrMemberAccess	ctx -> user		2524701	0					
ANR	2524879	Identifier	ctx		2524701	0					
ANR	2524880	Identifier	user		2524701	1					
ANR	2524881	GotoStatement	goto out ;	1903:2:44888:44896	2524701	1	True				
ANR	2524882	Identifier	out		2524701	0					
ANR	2524883	Label	out :	1906:0:44902:44905	2524701	9	True				
ANR	2524884	Identifier	out		2524701	0					
ANR	2524885	ExpressionStatement	r_list_free ( refs )	1907:1:44908:44926	2524701	10	True				
ANR	2524886	CallExpression	r_list_free ( refs )		2524701	0					
ANR	2524887	Callee	r_list_free		2524701	0					
ANR	2524888	Identifier	r_list_free		2524701	0					
ANR	2524889	ArgumentList	refs		2524701	1					
ANR	2524890	Argument	refs		2524701	0					
ANR	2524891	Identifier	refs		2524701	0					
ANR	2524892	ReturnStatement	return retval ;	1909:1:44930:44943	2524701	11	True				
ANR	2524893	Identifier	retval		2524701	0					
ANR	2524894	ReturnType	static int		2524701	1					
ANR	2524895	Identifier	refsMatchCB		2524701	2					
ANR	2524896	ParameterList	"RSignItem * it , void * user"		2524701	3					
ANR	2524897	Parameter	RSignItem * it	1868:23:44218:44230	2524701	0	True				
ANR	2524898	ParameterType	RSignItem *		2524701	0					
ANR	2524899	Identifier	it		2524701	1					
ANR	2524900	Parameter	void * user	1868:38:44233:44242	2524701	1	True				
ANR	2524901	ParameterType	void *		2524701	0					
ANR	2524902	Identifier	user		2524701	1					
ANR	2524903	CFGEntryNode	ENTRY		2524701		True				
ANR	2524904	CFGExitNode	EXIT		2524701		True				
ANR	2524905	InfiniteForNode	true		2524701		True				
ANR	2524906	Symbol	ref_a		2524701						
ANR	2524907	Symbol	strcmp		2524701						
ANR	2524908	Symbol	NULL		2524701						
ANR	2524909	Symbol	ref_b		2524701						
ANR	2524910	Symbol	ctx		2524701						
ANR	2524911	Symbol	i		2524701						
ANR	2524912	Symbol	ctx -> anal		2524701						
ANR	2524913	Symbol	r_list_get_n		2524701						
ANR	2524914	Symbol	ctx -> cb		2524701						
ANR	2524915	Symbol	it		2524701						
ANR	2524916	Symbol	retval		2524701						
ANR	2524917	Symbol	* ctx		2524701						
ANR	2524918	Symbol	ctx -> user		2524701						
ANR	2524919	Symbol	* it		2524701						
ANR	2524920	Symbol	refs		2524701						
ANR	2524921	Symbol	ctx -> fcn		2524701						
ANR	2524922	Symbol	r_sign_fcn_refs		2524701						
ANR	2524923	Symbol	user		2524701						
ANR	2524924	Symbol	it -> refs		2524701						
ANR	2524925	Function	r_sign_match_refs	1912:0:44948:45195							
ANR	2524926	FunctionDef	"r_sign_match_refs (RAnal * a , RAnalFunction * fcn , RSignRefsMatchCallback cb , void * user)"		2524925	0					
ANR	2524927	CompoundStatement		1912:98:45046:45195	2524925	0					
ANR	2524928	ExpressionStatement	"r_return_val_if_fail ( a && fcn && cb , false )"	1913:1:45049:45093	2524925	0	True				
ANR	2524929	CallExpression	"r_return_val_if_fail ( a && fcn && cb , false )"		2524925	0					
ANR	2524930	Callee	r_return_val_if_fail		2524925	0					
ANR	2524931	Identifier	r_return_val_if_fail		2524925	0					
ANR	2524932	ArgumentList	a && fcn && cb		2524925	1					
ANR	2524933	Argument	a && fcn && cb		2524925	0					
ANR	2524934	AndExpression	a && fcn && cb		2524925	0		&&			
ANR	2524935	Identifier	a		2524925	0					
ANR	2524936	AndExpression	fcn && cb		2524925	1		&&			
ANR	2524937	Identifier	fcn		2524925	0					
ANR	2524938	Identifier	cb		2524925	1					
ANR	2524939	Argument	false		2524925	1					
ANR	2524940	Identifier	false		2524925	0					
ANR	2524941	IdentifierDeclStatement	"struct ctxFcnMatchCB ctx = { a , fcn , cb , user , 0 } ;"	1914:1:45096:45146	2524925	1	True				
ANR	2524942	IdentifierDecl	"ctx = { a , fcn , cb , user , 0 }"		2524925	0					
ANR	2524943	IdentifierDeclType	struct ctxFcnMatchCB		2524925	0					
ANR	2524944	Identifier	ctx		2524925	1					
ANR	2524945	AssignmentExpression	"ctx = { a , fcn , cb , user , 0 }"		2524925	2		=			
ANR	2524946	Identifier	ctx		2524925	0					
ANR	2524947	InitializerList	a		2524925	1					
ANR	2524948	Identifier	a		2524925	0					
ANR	2524949	Identifier	fcn		2524925	1					
ANR	2524950	Identifier	cb		2524925	2					
ANR	2524951	Identifier	user		2524925	3					
ANR	2524952	PrimaryExpression	0		2524925	4					
ANR	2524953	ReturnStatement	"return r_sign_foreach ( a , refsMatchCB , & ctx ) ;"	1915:1:45149:45193	2524925	2	True				
ANR	2524954	CallExpression	"r_sign_foreach ( a , refsMatchCB , & ctx )"		2524925	0					
ANR	2524955	Callee	r_sign_foreach		2524925	0					
ANR	2524956	Identifier	r_sign_foreach		2524925	0					
ANR	2524957	ArgumentList	a		2524925	1					
ANR	2524958	Argument	a		2524925	0					
ANR	2524959	Identifier	a		2524925	0					
ANR	2524960	Argument	refsMatchCB		2524925	1					
ANR	2524961	Identifier	refsMatchCB		2524925	0					
ANR	2524962	Argument	& ctx		2524925	2					
ANR	2524963	UnaryOperationExpression	& ctx		2524925	0					
ANR	2524964	UnaryOperator	&		2524925	0					
ANR	2524965	Identifier	ctx		2524925	1					
ANR	2524966	ReturnType	R_API bool		2524925	1					
ANR	2524967	Identifier	r_sign_match_refs		2524925	2					
ANR	2524968	ParameterList	"RAnal * a , RAnalFunction * fcn , RSignRefsMatchCallback cb , void * user"		2524925	3					
ANR	2524969	Parameter	RAnal * a	1912:29:44977:44984	2524925	0	True				
ANR	2524970	ParameterType	RAnal *		2524925	0					
ANR	2524971	Identifier	a		2524925	1					
ANR	2524972	Parameter	RAnalFunction * fcn	1912:39:44987:45004	2524925	1	True				
ANR	2524973	ParameterType	RAnalFunction *		2524925	0					
ANR	2524974	Identifier	fcn		2524925	1					
ANR	2524975	Parameter	RSignRefsMatchCallback cb	1912:59:45007:45031	2524925	2	True				
ANR	2524976	ParameterType	RSignRefsMatchCallback		2524925	0					
ANR	2524977	Identifier	cb		2524925	1					
ANR	2524978	Parameter	void * user	1912:86:45034:45043	2524925	3	True				
ANR	2524979	ParameterType	void *		2524925	0					
ANR	2524980	Identifier	user		2524925	1					
ANR	2524981	CFGEntryNode	ENTRY		2524925		True				
ANR	2524982	CFGExitNode	EXIT		2524925		True				
ANR	2524983	Symbol	fcn		2524925						
ANR	2524984	Symbol	a		2524925						
ANR	2524985	Symbol	ctx		2524925						
ANR	2524986	Symbol	refsMatchCB		2524925						
ANR	2524987	Symbol	false		2524925						
ANR	2524988	Symbol	r_sign_foreach		2524925						
ANR	2524989	Symbol	& ctx		2524925						
ANR	2524990	Symbol	user		2524925						
ANR	2524991	Symbol	cb		2524925						
ANR	2524992	Function	varsMatchCB	1918:0:45198:45948							
ANR	2524993	FunctionDef	"varsMatchCB (RSignItem * it , void * user)"		2524992	0					
ANR	2524994	CompoundStatement		1918:50:45248:45948	2524992	0					
ANR	2524995	IdentifierDeclStatement	struct ctxFcnMatchCB * ctx = ( struct ctxFcnMatchCB * ) user ;	1919:1:45251:45308	2524992	0	True				
ANR	2524996	IdentifierDecl	* ctx = ( struct ctxFcnMatchCB * ) user		2524992	0					
ANR	2524997	IdentifierDeclType	struct ctxFcnMatchCB *		2524992	0					
ANR	2524998	Identifier	ctx		2524992	1					
ANR	2524999	AssignmentExpression	* ctx = ( struct ctxFcnMatchCB * ) user		2524992	2		=			
ANR	2525000	Identifier	ctx		2524992	0					
ANR	2525001	CastExpression	( struct ctxFcnMatchCB * ) user		2524992	1					
ANR	2525002	CastTarget	struct ctxFcnMatchCB *		2524992	0					
ANR	2525003	Identifier	user		2524992	1					
ANR	2525004	IdentifierDeclStatement	RList * vars = NULL ;	1920:1:45311:45329	2524992	1	True				
ANR	2525005	IdentifierDecl	* vars = NULL		2524992	0					
ANR	2525006	IdentifierDeclType	RList *		2524992	0					
ANR	2525007	Identifier	vars		2524992	1					
ANR	2525008	AssignmentExpression	* vars = NULL		2524992	2		=			
ANR	2525009	Identifier	NULL		2524992	0					
ANR	2525010	Identifier	NULL		2524992	1					
ANR	2525011	IdentifierDeclStatement	"char * var_a = NULL , * var_b = NULL ;"	1921:1:45332:45365	2524992	2	True				
ANR	2525012	IdentifierDecl	* var_a = NULL		2524992	0					
ANR	2525013	IdentifierDeclType	char *		2524992	0					
ANR	2525014	Identifier	var_a		2524992	1					
ANR	2525015	AssignmentExpression	* var_a = NULL		2524992	2		=			
ANR	2525016	Identifier	NULL		2524992	0					
ANR	2525017	Identifier	NULL		2524992	1					
ANR	2525018	IdentifierDecl	* var_b = NULL		2524992	1					
ANR	2525019	IdentifierDeclType	char *		2524992	0					
ANR	2525020	Identifier	var_b		2524992	1					
ANR	2525021	AssignmentExpression	* var_b = NULL		2524992	2		=			
ANR	2525022	Identifier	NULL		2524992	0					
ANR	2525023	Identifier	NULL		2524992	1					
ANR	2525024	IdentifierDeclStatement	"int i = 0 , retval = 1 ;"	1922:1:45368:45389	2524992	3	True				
ANR	2525025	IdentifierDecl	i = 0		2524992	0					
ANR	2525026	IdentifierDeclType	int		2524992	0					
ANR	2525027	Identifier	i		2524992	1					
ANR	2525028	AssignmentExpression	i = 0		2524992	2		=			
ANR	2525029	Identifier	i		2524992	0					
ANR	2525030	PrimaryExpression	0		2524992	1					
ANR	2525031	IdentifierDecl	retval = 1		2524992	1					
ANR	2525032	IdentifierDeclType	int		2524992	0					
ANR	2525033	Identifier	retval		2524992	1					
ANR	2525034	AssignmentExpression	retval = 1		2524992	2		=			
ANR	2525035	Identifier	retval		2524992	0					
ANR	2525036	PrimaryExpression	1		2524992	1					
ANR	2525037	IfStatement	if ( ! it -> vars )		2524992	4					
ANR	2525038	Condition	! it -> vars	1924:5:45397:45405	2524992	0	True				
ANR	2525039	UnaryOperationExpression	! it -> vars		2524992	0					
ANR	2525040	UnaryOperator	!		2524992	0					
ANR	2525041	PtrMemberAccess	it -> vars		2524992	1					
ANR	2525042	Identifier	it		2524992	0					
ANR	2525043	Identifier	vars		2524992	1					
ANR	2525044	CompoundStatement		7:16:159:159	2524992	1					
ANR	2525045	ReturnStatement	return 1 ;	1925:2:45412:45420	2524992	0	True				
ANR	2525046	PrimaryExpression	1		2524992	0					
ANR	2525047	ExpressionStatement	"vars = r_sign_fcn_vars ( ctx -> anal , ctx -> fcn )"	1929:1:45471:45515	2524992	5	True				
ANR	2525048	AssignmentExpression	"vars = r_sign_fcn_vars ( ctx -> anal , ctx -> fcn )"		2524992	0		=			
ANR	2525049	Identifier	vars		2524992	0					
ANR	2525050	CallExpression	"r_sign_fcn_vars ( ctx -> anal , ctx -> fcn )"		2524992	1					
ANR	2525051	Callee	r_sign_fcn_vars		2524992	0					
ANR	2525052	Identifier	r_sign_fcn_vars		2524992	0					
ANR	2525053	ArgumentList	ctx -> anal		2524992	1					
ANR	2525054	Argument	ctx -> anal		2524992	0					
ANR	2525055	PtrMemberAccess	ctx -> anal		2524992	0					
ANR	2525056	Identifier	ctx		2524992	0					
ANR	2525057	Identifier	anal		2524992	1					
ANR	2525058	Argument	ctx -> fcn		2524992	1					
ANR	2525059	PtrMemberAccess	ctx -> fcn		2524992	0					
ANR	2525060	Identifier	ctx		2524992	0					
ANR	2525061	Identifier	fcn		2524992	1					
ANR	2525062	IfStatement	if ( ! vars )		2524992	6					
ANR	2525063	Condition	! vars	1930:5:45522:45526	2524992	0	True				
ANR	2525064	UnaryOperationExpression	! vars		2524992	0					
ANR	2525065	UnaryOperator	!		2524992	0					
ANR	2525066	Identifier	vars		2524992	1					
ANR	2525067	CompoundStatement		13:12:280:280	2524992	1					
ANR	2525068	ReturnStatement	return 1 ;	1931:2:45533:45541	2524992	0	True				
ANR	2525069	PrimaryExpression	1		2524992	0					
ANR	2525070	ForStatement	for ( i = 0 ; ; i ++ )		2524992	7					
ANR	2525071	ForInit	i = 0 ;	1934:6:45553:45558	2524992	0	True				
ANR	2525072	AssignmentExpression	i = 0		2524992	0		=			
ANR	2525073	Identifier	i		2524992	0					
ANR	2525074	PrimaryExpression	0		2524992	1					
ANR	2525075	PostIncDecOperationExpression	i ++	1934:15:45562:45564	2524992	1	True				
ANR	2525076	Identifier	i		2524992	0					
ANR	2525077	IncDec	++		2524992	1					
ANR	2525078	CompoundStatement		17:20:318:318	2524992	2					
ANR	2525079	ExpressionStatement	"var_a = ( char * ) r_list_get_n ( it -> vars , i )"	1935:2:45571:45614	2524992	0	True				
ANR	2525080	AssignmentExpression	"var_a = ( char * ) r_list_get_n ( it -> vars , i )"		2524992	0		=			
ANR	2525081	Identifier	var_a		2524992	0					
ANR	2525082	CastExpression	"( char * ) r_list_get_n ( it -> vars , i )"		2524992	1					
ANR	2525083	CastTarget	char *		2524992	0					
ANR	2525084	CallExpression	"r_list_get_n ( it -> vars , i )"		2524992	1					
ANR	2525085	Callee	r_list_get_n		2524992	0					
ANR	2525086	Identifier	r_list_get_n		2524992	0					
ANR	2525087	ArgumentList	it -> vars		2524992	1					
ANR	2525088	Argument	it -> vars		2524992	0					
ANR	2525089	PtrMemberAccess	it -> vars		2524992	0					
ANR	2525090	Identifier	it		2524992	0					
ANR	2525091	Identifier	vars		2524992	1					
ANR	2525092	Argument	i		2524992	1					
ANR	2525093	Identifier	i		2524992	0					
ANR	2525094	ExpressionStatement	"var_b = ( char * ) r_list_get_n ( vars , i )"	1936:2:45618:45657	2524992	1	True				
ANR	2525095	AssignmentExpression	"var_b = ( char * ) r_list_get_n ( vars , i )"		2524992	0		=			
ANR	2525096	Identifier	var_b		2524992	0					
ANR	2525097	CastExpression	"( char * ) r_list_get_n ( vars , i )"		2524992	1					
ANR	2525098	CastTarget	char *		2524992	0					
ANR	2525099	CallExpression	"r_list_get_n ( vars , i )"		2524992	1					
ANR	2525100	Callee	r_list_get_n		2524992	0					
ANR	2525101	Identifier	r_list_get_n		2524992	0					
ANR	2525102	ArgumentList	vars		2524992	1					
ANR	2525103	Argument	vars		2524992	0					
ANR	2525104	Identifier	vars		2524992	0					
ANR	2525105	Argument	i		2524992	1					
ANR	2525106	Identifier	i		2524992	0					
ANR	2525107	IfStatement	if ( ! var_a || ! var_b )		2524992	2					
ANR	2525108	Condition	! var_a || ! var_b	1938:6:45666:45681	2524992	0	True				
ANR	2525109	OrExpression	! var_a || ! var_b		2524992	0		||			
ANR	2525110	UnaryOperationExpression	! var_a		2524992	0					
ANR	2525111	UnaryOperator	!		2524992	0					
ANR	2525112	Identifier	var_a		2524992	1					
ANR	2525113	UnaryOperationExpression	! var_b		2524992	1					
ANR	2525114	UnaryOperator	!		2524992	0					
ANR	2525115	Identifier	var_b		2524992	1					
ANR	2525116	CompoundStatement		21:24:435:435	2524992	1					
ANR	2525117	IfStatement	if ( var_a != var_b )		2524992	0					
ANR	2525118	Condition	var_a != var_b	1939:7:45693:45706	2524992	0	True				
ANR	2525119	EqualityExpression	var_a != var_b		2524992	0		!=			
ANR	2525120	Identifier	var_a		2524992	0					
ANR	2525121	Identifier	var_b		2524992	1					
ANR	2525122	CompoundStatement		22:23:460:460	2524992	1					
ANR	2525123	ExpressionStatement	retval = 1	1940:4:45715:45725	2524992	0	True				
ANR	2525124	AssignmentExpression	retval = 1		2524992	0		=			
ANR	2525125	Identifier	retval		2524992	0					
ANR	2525126	PrimaryExpression	1		2524992	1					
ANR	2525127	GotoStatement	goto out ;	1941:4:45731:45739	2524992	1	True				
ANR	2525128	Identifier	out		2524992	0					
ANR	2525129	BreakStatement	break ;	1943:3:45749:45754	2524992	1	True				
ANR	2525130	IfStatement	"if ( strcmp ( var_a , var_b ) )"		2524992	3					
ANR	2525131	Condition	"strcmp ( var_a , var_b )"	1945:6:45766:45786	2524992	0	True				
ANR	2525132	CallExpression	"strcmp ( var_a , var_b )"		2524992	0					
ANR	2525133	Callee	strcmp		2524992	0					
ANR	2525134	Identifier	strcmp		2524992	0					
ANR	2525135	ArgumentList	var_a		2524992	1					
ANR	2525136	Argument	var_a		2524992	0					
ANR	2525137	Identifier	var_a		2524992	0					
ANR	2525138	Argument	var_b		2524992	1					
ANR	2525139	Identifier	var_b		2524992	0					
ANR	2525140	CompoundStatement		28:29:540:540	2524992	1					
ANR	2525141	ExpressionStatement	retval = 1	1946:3:45794:45804	2524992	0	True				
ANR	2525142	AssignmentExpression	retval = 1		2524992	0		=			
ANR	2525143	Identifier	retval		2524992	0					
ANR	2525144	PrimaryExpression	1		2524992	1					
ANR	2525145	GotoStatement	goto out ;	1947:3:45809:45817	2524992	1	True				
ANR	2525146	Identifier	out		2524992	0					
ANR	2525147	IfStatement	if ( ctx -> cb )		2524992	8					
ANR	2525148	Condition	ctx -> cb	1951:5:45832:45838	2524992	0	True				
ANR	2525149	PtrMemberAccess	ctx -> cb		2524992	0					
ANR	2525150	Identifier	ctx		2524992	0					
ANR	2525151	Identifier	cb		2524992	1					
ANR	2525152	CompoundStatement		34:14:592:592	2524992	1					
ANR	2525153	ExpressionStatement	"retval = ctx -> cb ( it , ctx -> fcn , ctx -> user )"	1952:2:45845:45887	2524992	0	True				
ANR	2525154	AssignmentExpression	"retval = ctx -> cb ( it , ctx -> fcn , ctx -> user )"		2524992	0		=			
ANR	2525155	Identifier	retval		2524992	0					
ANR	2525156	CallExpression	"ctx -> cb ( it , ctx -> fcn , ctx -> user )"		2524992	1					
ANR	2525157	Callee	ctx -> cb		2524992	0					
ANR	2525158	PtrMemberAccess	ctx -> cb		2524992	0					
ANR	2525159	Identifier	ctx		2524992	0					
ANR	2525160	Identifier	cb		2524992	1					
ANR	2525161	ArgumentList	it		2524992	1					
ANR	2525162	Argument	it		2524992	0					
ANR	2525163	Identifier	it		2524992	0					
ANR	2525164	Argument	ctx -> fcn		2524992	1					
ANR	2525165	PtrMemberAccess	ctx -> fcn		2524992	0					
ANR	2525166	Identifier	ctx		2524992	0					
ANR	2525167	Identifier	fcn		2524992	1					
ANR	2525168	Argument	ctx -> user		2524992	2					
ANR	2525169	PtrMemberAccess	ctx -> user		2524992	0					
ANR	2525170	Identifier	ctx		2524992	0					
ANR	2525171	Identifier	user		2524992	1					
ANR	2525172	GotoStatement	goto out ;	1953:2:45891:45899	2524992	1	True				
ANR	2525173	Identifier	out		2524992	0					
ANR	2525174	Label	out :	1956:0:45905:45908	2524992	9	True				
ANR	2525175	Identifier	out		2524992	0					
ANR	2525176	ExpressionStatement	r_list_free ( vars )	1957:1:45911:45929	2524992	10	True				
ANR	2525177	CallExpression	r_list_free ( vars )		2524992	0					
ANR	2525178	Callee	r_list_free		2524992	0					
ANR	2525179	Identifier	r_list_free		2524992	0					
ANR	2525180	ArgumentList	vars		2524992	1					
ANR	2525181	Argument	vars		2524992	0					
ANR	2525182	Identifier	vars		2524992	0					
ANR	2525183	ReturnStatement	return retval ;	1959:1:45933:45946	2524992	11	True				
ANR	2525184	Identifier	retval		2524992	0					
ANR	2525185	ReturnType	static int		2524992	1					
ANR	2525186	Identifier	varsMatchCB		2524992	2					
ANR	2525187	ParameterList	"RSignItem * it , void * user"		2524992	3					
ANR	2525188	Parameter	RSignItem * it	1918:23:45221:45233	2524992	0	True				
ANR	2525189	ParameterType	RSignItem *		2524992	0					
ANR	2525190	Identifier	it		2524992	1					
ANR	2525191	Parameter	void * user	1918:38:45236:45245	2524992	1	True				
ANR	2525192	ParameterType	void *		2524992	0					
ANR	2525193	Identifier	user		2524992	1					
ANR	2525194	CFGEntryNode	ENTRY		2524992		True				
ANR	2525195	CFGExitNode	EXIT		2524992		True				
ANR	2525196	InfiniteForNode	true		2524992		True				
ANR	2525197	Symbol	it -> vars		2524992						
ANR	2525198	Symbol	strcmp		2524992						
ANR	2525199	Symbol	NULL		2524992						
ANR	2525200	Symbol	var_a		2524992						
ANR	2525201	Symbol	ctx		2524992						
ANR	2525202	Symbol	var_b		2524992						
ANR	2525203	Symbol	i		2524992						
ANR	2525204	Symbol	ctx -> anal		2524992						
ANR	2525205	Symbol	r_list_get_n		2524992						
ANR	2525206	Symbol	ctx -> cb		2524992						
ANR	2525207	Symbol	it		2524992						
ANR	2525208	Symbol	retval		2524992						
ANR	2525209	Symbol	* ctx		2524992						
ANR	2525210	Symbol	ctx -> user		2524992						
ANR	2525211	Symbol	* it		2524992						
ANR	2525212	Symbol	r_sign_fcn_vars		2524992						
ANR	2525213	Symbol	ctx -> fcn		2524992						
ANR	2525214	Symbol	vars		2524992						
ANR	2525215	Symbol	user		2524992						
ANR	2525216	Function	r_sign_match_vars	1962:0:45951:46198							
ANR	2525217	FunctionDef	"r_sign_match_vars (RAnal * a , RAnalFunction * fcn , RSignVarsMatchCallback cb , void * user)"		2525216	0					
ANR	2525218	CompoundStatement		1962:98:46049:46198	2525216	0					
ANR	2525219	ExpressionStatement	"r_return_val_if_fail ( a && fcn && cb , false )"	1963:1:46052:46096	2525216	0	True				
ANR	2525220	CallExpression	"r_return_val_if_fail ( a && fcn && cb , false )"		2525216	0					
ANR	2525221	Callee	r_return_val_if_fail		2525216	0					
ANR	2525222	Identifier	r_return_val_if_fail		2525216	0					
ANR	2525223	ArgumentList	a && fcn && cb		2525216	1					
ANR	2525224	Argument	a && fcn && cb		2525216	0					
ANR	2525225	AndExpression	a && fcn && cb		2525216	0		&&			
ANR	2525226	Identifier	a		2525216	0					
ANR	2525227	AndExpression	fcn && cb		2525216	1		&&			
ANR	2525228	Identifier	fcn		2525216	0					
ANR	2525229	Identifier	cb		2525216	1					
ANR	2525230	Argument	false		2525216	1					
ANR	2525231	Identifier	false		2525216	0					
ANR	2525232	IdentifierDeclStatement	"struct ctxFcnMatchCB ctx = { a , fcn , cb , user , 0 } ;"	1964:1:46099:46149	2525216	1	True				
ANR	2525233	IdentifierDecl	"ctx = { a , fcn , cb , user , 0 }"		2525216	0					
ANR	2525234	IdentifierDeclType	struct ctxFcnMatchCB		2525216	0					
ANR	2525235	Identifier	ctx		2525216	1					
ANR	2525236	AssignmentExpression	"ctx = { a , fcn , cb , user , 0 }"		2525216	2		=			
ANR	2525237	Identifier	ctx		2525216	0					
ANR	2525238	InitializerList	a		2525216	1					
ANR	2525239	Identifier	a		2525216	0					
ANR	2525240	Identifier	fcn		2525216	1					
ANR	2525241	Identifier	cb		2525216	2					
ANR	2525242	Identifier	user		2525216	3					
ANR	2525243	PrimaryExpression	0		2525216	4					
ANR	2525244	ReturnStatement	"return r_sign_foreach ( a , varsMatchCB , & ctx ) ;"	1965:1:46152:46196	2525216	2	True				
ANR	2525245	CallExpression	"r_sign_foreach ( a , varsMatchCB , & ctx )"		2525216	0					
ANR	2525246	Callee	r_sign_foreach		2525216	0					
ANR	2525247	Identifier	r_sign_foreach		2525216	0					
ANR	2525248	ArgumentList	a		2525216	1					
ANR	2525249	Argument	a		2525216	0					
ANR	2525250	Identifier	a		2525216	0					
ANR	2525251	Argument	varsMatchCB		2525216	1					
ANR	2525252	Identifier	varsMatchCB		2525216	0					
ANR	2525253	Argument	& ctx		2525216	2					
ANR	2525254	UnaryOperationExpression	& ctx		2525216	0					
ANR	2525255	UnaryOperator	&		2525216	0					
ANR	2525256	Identifier	ctx		2525216	1					
ANR	2525257	ReturnType	R_API bool		2525216	1					
ANR	2525258	Identifier	r_sign_match_vars		2525216	2					
ANR	2525259	ParameterList	"RAnal * a , RAnalFunction * fcn , RSignVarsMatchCallback cb , void * user"		2525216	3					
ANR	2525260	Parameter	RAnal * a	1962:29:45980:45987	2525216	0	True				
ANR	2525261	ParameterType	RAnal *		2525216	0					
ANR	2525262	Identifier	a		2525216	1					
ANR	2525263	Parameter	RAnalFunction * fcn	1962:39:45990:46007	2525216	1	True				
ANR	2525264	ParameterType	RAnalFunction *		2525216	0					
ANR	2525265	Identifier	fcn		2525216	1					
ANR	2525266	Parameter	RSignVarsMatchCallback cb	1962:59:46010:46034	2525216	2	True				
ANR	2525267	ParameterType	RSignVarsMatchCallback		2525216	0					
ANR	2525268	Identifier	cb		2525216	1					
ANR	2525269	Parameter	void * user	1962:86:46037:46046	2525216	3	True				
ANR	2525270	ParameterType	void *		2525216	0					
ANR	2525271	Identifier	user		2525216	1					
ANR	2525272	CFGEntryNode	ENTRY		2525216		True				
ANR	2525273	CFGExitNode	EXIT		2525216		True				
ANR	2525274	Symbol	fcn		2525216						
ANR	2525275	Symbol	a		2525216						
ANR	2525276	Symbol	ctx		2525216						
ANR	2525277	Symbol	false		2525216						
ANR	2525278	Symbol	r_sign_foreach		2525216						
ANR	2525279	Symbol	& ctx		2525216						
ANR	2525280	Symbol	user		2525216						
ANR	2525281	Symbol	varsMatchCB		2525216						
ANR	2525282	Symbol	cb		2525216						
ANR	2525283	Function	r_sign_item_new	1969:0:46202:46350							
ANR	2525284	FunctionDef	r_sign_item_new ()		2525283	0					
ANR	2525285	CompoundStatement		1969:35:46237:46350	2525283	0					
ANR	2525286	IdentifierDeclStatement	RSignItem * ret = R_NEW0 ( RSignItem ) ;	1970:1:46240:46275	2525283	0	True				
ANR	2525287	IdentifierDecl	* ret = R_NEW0 ( RSignItem )		2525283	0					
ANR	2525288	IdentifierDeclType	RSignItem *		2525283	0					
ANR	2525289	Identifier	ret		2525283	1					
ANR	2525290	AssignmentExpression	* ret = R_NEW0 ( RSignItem )		2525283	2		=			
ANR	2525291	Identifier	ret		2525283	0					
ANR	2525292	CallExpression	R_NEW0 ( RSignItem )		2525283	1					
ANR	2525293	Callee	R_NEW0		2525283	0					
ANR	2525294	Identifier	R_NEW0		2525283	0					
ANR	2525295	ArgumentList	RSignItem		2525283	1					
ANR	2525296	Argument	RSignItem		2525283	0					
ANR	2525297	Identifier	RSignItem		2525283	0					
ANR	2525298	IfStatement	if ( ret )		2525283	1					
ANR	2525299	Condition	ret	1971:5:46282:46284	2525283	0	True				
ANR	2525300	Identifier	ret		2525283	0					
ANR	2525301	CompoundStatement		3:10:49:49	2525283	1					
ANR	2525302	ExpressionStatement	ret -> addr = UT64_MAX	1972:2:46291:46311	2525283	0	True				
ANR	2525303	AssignmentExpression	ret -> addr = UT64_MAX		2525283	0		=			
ANR	2525304	PtrMemberAccess	ret -> addr		2525283	0					
ANR	2525305	Identifier	ret		2525283	0					
ANR	2525306	Identifier	addr		2525283	1					
ANR	2525307	Identifier	UT64_MAX		2525283	1					
ANR	2525308	ExpressionStatement	ret -> space = NULL	1973:2:46315:46332	2525283	1	True				
ANR	2525309	AssignmentExpression	ret -> space = NULL		2525283	0		=			
ANR	2525310	PtrMemberAccess	ret -> space		2525283	0					
ANR	2525311	Identifier	ret		2525283	0					
ANR	2525312	Identifier	space		2525283	1					
ANR	2525313	Identifier	NULL		2525283	1					
ANR	2525314	ReturnStatement	return ret ;	1975:1:46338:46348	2525283	2	True				
ANR	2525315	Identifier	ret		2525283	0					
ANR	2525316	ReturnType	R_API RSignItem *		2525283	1					
ANR	2525317	Identifier	r_sign_item_new		2525283	2					
ANR	2525318	ParameterList			2525283	3					
ANR	2525319	CFGEntryNode	ENTRY		2525283		True				
ANR	2525320	CFGExitNode	EXIT		2525283		True				
ANR	2525321	Symbol	ret		2525283						
ANR	2525322	Symbol	ret -> space		2525283						
ANR	2525323	Symbol	R_NEW0		2525283						
ANR	2525324	Symbol	NULL		2525283						
ANR	2525325	Symbol	* ret		2525283						
ANR	2525326	Symbol	UT64_MAX		2525283						
ANR	2525327	Symbol	RSignItem		2525283						
ANR	2525328	Symbol	ret -> addr		2525283						
ANR	2525329	Function	r_sign_item_dup	1978:0:46353:47717							
ANR	2525330	FunctionDef	r_sign_item_dup (RSignItem * it)		2525329	0					
ANR	2525331	CompoundStatement		1978:48:46401:47717	2525329	0					
ANR	2525332	IdentifierDeclStatement	RListIter * iter = NULL ;	1979:1:46404:46426	2525329	0	True				
ANR	2525333	IdentifierDecl	* iter = NULL		2525329	0					
ANR	2525334	IdentifierDeclType	RListIter *		2525329	0					
ANR	2525335	Identifier	iter		2525329	1					
ANR	2525336	AssignmentExpression	* iter = NULL		2525329	2		=			
ANR	2525337	Identifier	NULL		2525329	0					
ANR	2525338	Identifier	NULL		2525329	1					
ANR	2525339	IdentifierDeclStatement	char * ref = NULL ;	1980:1:46429:46445	2525329	1	True				
ANR	2525340	IdentifierDecl	* ref = NULL		2525329	0					
ANR	2525341	IdentifierDeclType	char *		2525329	0					
ANR	2525342	Identifier	ref		2525329	1					
ANR	2525343	AssignmentExpression	* ref = NULL		2525329	2		=			
ANR	2525344	Identifier	NULL		2525329	0					
ANR	2525345	Identifier	NULL		2525329	1					
ANR	2525346	IfStatement	if ( ! it )		2525329	2					
ANR	2525347	Condition	! it	1981:5:46452:46454	2525329	0	True				
ANR	2525348	UnaryOperationExpression	! it		2525329	0					
ANR	2525349	UnaryOperator	!		2525329	0					
ANR	2525350	Identifier	it		2525329	1					
ANR	2525351	CompoundStatement		4:10:55:55	2525329	1					
ANR	2525352	ReturnStatement	return NULL ;	1982:2:46461:46472	2525329	0	True				
ANR	2525353	Identifier	NULL		2525329	0					
ANR	2525354	IdentifierDeclStatement	RSignItem * ret = r_sign_item_new ( ) ;	1984:1:46478:46513	2525329	3	True				
ANR	2525355	IdentifierDecl	* ret = r_sign_item_new ( )		2525329	0					
ANR	2525356	IdentifierDeclType	RSignItem *		2525329	0					
ANR	2525357	Identifier	ret		2525329	1					
ANR	2525358	AssignmentExpression	* ret = r_sign_item_new ( )		2525329	2		=			
ANR	2525359	Identifier	ret		2525329	0					
ANR	2525360	CallExpression	r_sign_item_new ( )		2525329	1					
ANR	2525361	Callee	r_sign_item_new		2525329	0					
ANR	2525362	Identifier	r_sign_item_new		2525329	0					
ANR	2525363	ArgumentList			2525329	1					
ANR	2525364	IfStatement	if ( ! ret )		2525329	4					
ANR	2525365	Condition	! ret	1985:5:46520:46523	2525329	0	True				
ANR	2525366	UnaryOperationExpression	! ret		2525329	0					
ANR	2525367	UnaryOperator	!		2525329	0					
ANR	2525368	Identifier	ret		2525329	1					
ANR	2525369	CompoundStatement		8:11:124:124	2525329	1					
ANR	2525370	ReturnStatement	return NULL ;	1986:2:46530:46541	2525329	0	True				
ANR	2525371	Identifier	NULL		2525329	0					
ANR	2525372	ExpressionStatement	ret -> name = r_str_new ( it -> name )	1988:1:46547:46579	2525329	5	True				
ANR	2525373	AssignmentExpression	ret -> name = r_str_new ( it -> name )		2525329	0		=			
ANR	2525374	PtrMemberAccess	ret -> name		2525329	0					
ANR	2525375	Identifier	ret		2525329	0					
ANR	2525376	Identifier	name		2525329	1					
ANR	2525377	CallExpression	r_str_new ( it -> name )		2525329	1					
ANR	2525378	Callee	r_str_new		2525329	0					
ANR	2525379	Identifier	r_str_new		2525329	0					
ANR	2525380	ArgumentList	it -> name		2525329	1					
ANR	2525381	Argument	it -> name		2525329	0					
ANR	2525382	PtrMemberAccess	it -> name		2525329	0					
ANR	2525383	Identifier	it		2525329	0					
ANR	2525384	Identifier	name		2525329	1					
ANR	2525385	IfStatement	if ( it -> realname )		2525329	6					
ANR	2525386	Condition	it -> realname	1989:5:46586:46597	2525329	0	True				
ANR	2525387	PtrMemberAccess	it -> realname		2525329	0					
ANR	2525388	Identifier	it		2525329	0					
ANR	2525389	Identifier	realname		2525329	1					
ANR	2525390	CompoundStatement		12:19:198:198	2525329	1					
ANR	2525391	ExpressionStatement	ret -> realname = r_str_newf ( it -> realname )	1990:2:46604:46645	2525329	0	True				
ANR	2525392	AssignmentExpression	ret -> realname = r_str_newf ( it -> realname )		2525329	0		=			
ANR	2525393	PtrMemberAccess	ret -> realname		2525329	0					
ANR	2525394	Identifier	ret		2525329	0					
ANR	2525395	Identifier	realname		2525329	1					
ANR	2525396	CallExpression	r_str_newf ( it -> realname )		2525329	1					
ANR	2525397	Callee	r_str_newf		2525329	0					
ANR	2525398	Identifier	r_str_newf		2525329	0					
ANR	2525399	ArgumentList	it -> realname		2525329	1					
ANR	2525400	Argument	it -> realname		2525329	0					
ANR	2525401	PtrMemberAccess	it -> realname		2525329	0					
ANR	2525402	Identifier	it		2525329	0					
ANR	2525403	Identifier	realname		2525329	1					
ANR	2525404	IfStatement	if ( it -> comment )		2525329	7					
ANR	2525405	Condition	it -> comment	1992:5:46655:46665	2525329	0	True				
ANR	2525406	PtrMemberAccess	it -> comment		2525329	0					
ANR	2525407	Identifier	it		2525329	0					
ANR	2525408	Identifier	comment		2525329	1					
ANR	2525409	CompoundStatement		15:18:266:266	2525329	1					
ANR	2525410	ExpressionStatement	ret -> comment = r_str_newf ( it -> comment )	1993:2:46672:46711	2525329	0	True				
ANR	2525411	AssignmentExpression	ret -> comment = r_str_newf ( it -> comment )		2525329	0		=			
ANR	2525412	PtrMemberAccess	ret -> comment		2525329	0					
ANR	2525413	Identifier	ret		2525329	0					
ANR	2525414	Identifier	comment		2525329	1					
ANR	2525415	CallExpression	r_str_newf ( it -> comment )		2525329	1					
ANR	2525416	Callee	r_str_newf		2525329	0					
ANR	2525417	Identifier	r_str_newf		2525329	0					
ANR	2525418	ArgumentList	it -> comment		2525329	1					
ANR	2525419	Argument	it -> comment		2525329	0					
ANR	2525420	PtrMemberAccess	it -> comment		2525329	0					
ANR	2525421	Identifier	it		2525329	0					
ANR	2525422	Identifier	comment		2525329	1					
ANR	2525423	ExpressionStatement	ret -> space = it -> space	1995:1:46717:46739	2525329	8	True				
ANR	2525424	AssignmentExpression	ret -> space = it -> space		2525329	0		=			
ANR	2525425	PtrMemberAccess	ret -> space		2525329	0					
ANR	2525426	Identifier	ret		2525329	0					
ANR	2525427	Identifier	space		2525329	1					
ANR	2525428	PtrMemberAccess	it -> space		2525329	1					
ANR	2525429	Identifier	it		2525329	0					
ANR	2525430	Identifier	space		2525329	1					
ANR	2525431	IfStatement	if ( it -> bytes )		2525329	9					
ANR	2525432	Condition	it -> bytes	1997:5:46747:46755	2525329	0	True				
ANR	2525433	PtrMemberAccess	it -> bytes		2525329	0					
ANR	2525434	Identifier	it		2525329	0					
ANR	2525435	Identifier	bytes		2525329	1					
ANR	2525436	CompoundStatement		20:16:356:356	2525329	1					
ANR	2525437	ExpressionStatement	ret -> bytes = R_NEW0 ( RSignBytes )	1998:2:46762:46794	2525329	0	True				
ANR	2525438	AssignmentExpression	ret -> bytes = R_NEW0 ( RSignBytes )		2525329	0		=			
ANR	2525439	PtrMemberAccess	ret -> bytes		2525329	0					
ANR	2525440	Identifier	ret		2525329	0					
ANR	2525441	Identifier	bytes		2525329	1					
ANR	2525442	CallExpression	R_NEW0 ( RSignBytes )		2525329	1					
ANR	2525443	Callee	R_NEW0		2525329	0					
ANR	2525444	Identifier	R_NEW0		2525329	0					
ANR	2525445	ArgumentList	RSignBytes		2525329	1					
ANR	2525446	Argument	RSignBytes		2525329	0					
ANR	2525447	Identifier	RSignBytes		2525329	0					
ANR	2525448	IfStatement	if ( ! ret -> bytes )		2525329	1					
ANR	2525449	Condition	! ret -> bytes	1999:6:46802:46812	2525329	0	True				
ANR	2525450	UnaryOperationExpression	! ret -> bytes		2525329	0					
ANR	2525451	UnaryOperator	!		2525329	0					
ANR	2525452	PtrMemberAccess	ret -> bytes		2525329	1					
ANR	2525453	Identifier	ret		2525329	0					
ANR	2525454	Identifier	bytes		2525329	1					
ANR	2525455	CompoundStatement		22:19:413:413	2525329	1					
ANR	2525456	ExpressionStatement	r_sign_item_free ( ret )	2000:3:46820:46842	2525329	0	True				
ANR	2525457	CallExpression	r_sign_item_free ( ret )		2525329	0					
ANR	2525458	Callee	r_sign_item_free		2525329	0					
ANR	2525459	Identifier	r_sign_item_free		2525329	0					
ANR	2525460	ArgumentList	ret		2525329	1					
ANR	2525461	Argument	ret		2525329	0					
ANR	2525462	Identifier	ret		2525329	0					
ANR	2525463	ReturnStatement	return NULL ;	2001:3:46847:46858	2525329	1	True				
ANR	2525464	Identifier	NULL		2525329	0					
ANR	2525465	ExpressionStatement	ret -> bytes -> size = it -> bytes -> size	2003:2:46866:46900	2525329	2	True				
ANR	2525466	AssignmentExpression	ret -> bytes -> size = it -> bytes -> size		2525329	0		=			
ANR	2525467	PtrMemberAccess	ret -> bytes -> size		2525329	0					
ANR	2525468	PtrMemberAccess	ret -> bytes		2525329	0					
ANR	2525469	Identifier	ret		2525329	0					
ANR	2525470	Identifier	bytes		2525329	1					
ANR	2525471	Identifier	size		2525329	1					
ANR	2525472	PtrMemberAccess	it -> bytes -> size		2525329	1					
ANR	2525473	PtrMemberAccess	it -> bytes		2525329	0					
ANR	2525474	Identifier	it		2525329	0					
ANR	2525475	Identifier	bytes		2525329	1					
ANR	2525476	Identifier	size		2525329	1					
ANR	2525477	ExpressionStatement	ret -> bytes -> bytes = malloc ( it -> bytes -> size )	2004:2:46904:46948	2525329	3	True				
ANR	2525478	AssignmentExpression	ret -> bytes -> bytes = malloc ( it -> bytes -> size )		2525329	0		=			
ANR	2525479	PtrMemberAccess	ret -> bytes -> bytes		2525329	0					
ANR	2525480	PtrMemberAccess	ret -> bytes		2525329	0					
ANR	2525481	Identifier	ret		2525329	0					
ANR	2525482	Identifier	bytes		2525329	1					
ANR	2525483	Identifier	bytes		2525329	1					
ANR	2525484	CallExpression	malloc ( it -> bytes -> size )		2525329	1					
ANR	2525485	Callee	malloc		2525329	0					
ANR	2525486	Identifier	malloc		2525329	0					
ANR	2525487	ArgumentList	it -> bytes -> size		2525329	1					
ANR	2525488	Argument	it -> bytes -> size		2525329	0					
ANR	2525489	PtrMemberAccess	it -> bytes -> size		2525329	0					
ANR	2525490	PtrMemberAccess	it -> bytes		2525329	0					
ANR	2525491	Identifier	it		2525329	0					
ANR	2525492	Identifier	bytes		2525329	1					
ANR	2525493	Identifier	size		2525329	1					
ANR	2525494	IfStatement	if ( ! ret -> bytes -> bytes )		2525329	4					
ANR	2525495	Condition	! ret -> bytes -> bytes	2005:6:46956:46973	2525329	0	True				
ANR	2525496	UnaryOperationExpression	! ret -> bytes -> bytes		2525329	0					
ANR	2525497	UnaryOperator	!		2525329	0					
ANR	2525498	PtrMemberAccess	ret -> bytes -> bytes		2525329	1					
ANR	2525499	PtrMemberAccess	ret -> bytes		2525329	0					
ANR	2525500	Identifier	ret		2525329	0					
ANR	2525501	Identifier	bytes		2525329	1					
ANR	2525502	Identifier	bytes		2525329	1					
ANR	2525503	CompoundStatement		28:26:574:574	2525329	1					
ANR	2525504	ExpressionStatement	r_sign_item_free ( ret )	2006:3:46981:47003	2525329	0	True				
ANR	2525505	CallExpression	r_sign_item_free ( ret )		2525329	0					
ANR	2525506	Callee	r_sign_item_free		2525329	0					
ANR	2525507	Identifier	r_sign_item_free		2525329	0					
ANR	2525508	ArgumentList	ret		2525329	1					
ANR	2525509	Argument	ret		2525329	0					
ANR	2525510	Identifier	ret		2525329	0					
ANR	2525511	ReturnStatement	return NULL ;	2007:3:47008:47019	2525329	1	True				
ANR	2525512	Identifier	NULL		2525329	0					
ANR	2525513	ExpressionStatement	"memcpy ( ret -> bytes -> bytes , it -> bytes -> bytes , it -> bytes -> size )"	2009:2:47027:47088	2525329	5	True				
ANR	2525514	CallExpression	"memcpy ( ret -> bytes -> bytes , it -> bytes -> bytes , it -> bytes -> size )"		2525329	0					
ANR	2525515	Callee	memcpy		2525329	0					
ANR	2525516	Identifier	memcpy		2525329	0					
ANR	2525517	ArgumentList	ret -> bytes -> bytes		2525329	1					
ANR	2525518	Argument	ret -> bytes -> bytes		2525329	0					
ANR	2525519	PtrMemberAccess	ret -> bytes -> bytes		2525329	0					
ANR	2525520	PtrMemberAccess	ret -> bytes		2525329	0					
ANR	2525521	Identifier	ret		2525329	0					
ANR	2525522	Identifier	bytes		2525329	1					
ANR	2525523	Identifier	bytes		2525329	1					
ANR	2525524	Argument	it -> bytes -> bytes		2525329	1					
ANR	2525525	PtrMemberAccess	it -> bytes -> bytes		2525329	0					
ANR	2525526	PtrMemberAccess	it -> bytes		2525329	0					
ANR	2525527	Identifier	it		2525329	0					
ANR	2525528	Identifier	bytes		2525329	1					
ANR	2525529	Identifier	bytes		2525329	1					
ANR	2525530	Argument	it -> bytes -> size		2525329	2					
ANR	2525531	PtrMemberAccess	it -> bytes -> size		2525329	0					
ANR	2525532	PtrMemberAccess	it -> bytes		2525329	0					
ANR	2525533	Identifier	it		2525329	0					
ANR	2525534	Identifier	bytes		2525329	1					
ANR	2525535	Identifier	size		2525329	1					
ANR	2525536	ExpressionStatement	ret -> bytes -> mask = malloc ( it -> bytes -> size )	2010:2:47092:47135	2525329	6	True				
ANR	2525537	AssignmentExpression	ret -> bytes -> mask = malloc ( it -> bytes -> size )		2525329	0		=			
ANR	2525538	PtrMemberAccess	ret -> bytes -> mask		2525329	0					
ANR	2525539	PtrMemberAccess	ret -> bytes		2525329	0					
ANR	2525540	Identifier	ret		2525329	0					
ANR	2525541	Identifier	bytes		2525329	1					
ANR	2525542	Identifier	mask		2525329	1					
ANR	2525543	CallExpression	malloc ( it -> bytes -> size )		2525329	1					
ANR	2525544	Callee	malloc		2525329	0					
ANR	2525545	Identifier	malloc		2525329	0					
ANR	2525546	ArgumentList	it -> bytes -> size		2525329	1					
ANR	2525547	Argument	it -> bytes -> size		2525329	0					
ANR	2525548	PtrMemberAccess	it -> bytes -> size		2525329	0					
ANR	2525549	PtrMemberAccess	it -> bytes		2525329	0					
ANR	2525550	Identifier	it		2525329	0					
ANR	2525551	Identifier	bytes		2525329	1					
ANR	2525552	Identifier	size		2525329	1					
ANR	2525553	IfStatement	if ( ! ret -> bytes -> mask )		2525329	7					
ANR	2525554	Condition	! ret -> bytes -> mask	2011:6:47143:47159	2525329	0	True				
ANR	2525555	UnaryOperationExpression	! ret -> bytes -> mask		2525329	0					
ANR	2525556	UnaryOperator	!		2525329	0					
ANR	2525557	PtrMemberAccess	ret -> bytes -> mask		2525329	1					
ANR	2525558	PtrMemberAccess	ret -> bytes		2525329	0					
ANR	2525559	Identifier	ret		2525329	0					
ANR	2525560	Identifier	bytes		2525329	1					
ANR	2525561	Identifier	mask		2525329	1					
ANR	2525562	CompoundStatement		34:25:760:760	2525329	1					
ANR	2525563	ExpressionStatement	r_sign_item_free ( ret )	2012:3:47167:47189	2525329	0	True				
ANR	2525564	CallExpression	r_sign_item_free ( ret )		2525329	0					
ANR	2525565	Callee	r_sign_item_free		2525329	0					
ANR	2525566	Identifier	r_sign_item_free		2525329	0					
ANR	2525567	ArgumentList	ret		2525329	1					
ANR	2525568	Argument	ret		2525329	0					
ANR	2525569	Identifier	ret		2525329	0					
ANR	2525570	ReturnStatement	return NULL ;	2013:3:47194:47205	2525329	1	True				
ANR	2525571	Identifier	NULL		2525329	0					
ANR	2525572	ExpressionStatement	"memcpy ( ret -> bytes -> mask , it -> bytes -> mask , it -> bytes -> size )"	2015:2:47213:47272	2525329	8	True				
ANR	2525573	CallExpression	"memcpy ( ret -> bytes -> mask , it -> bytes -> mask , it -> bytes -> size )"		2525329	0					
ANR	2525574	Callee	memcpy		2525329	0					
ANR	2525575	Identifier	memcpy		2525329	0					
ANR	2525576	ArgumentList	ret -> bytes -> mask		2525329	1					
ANR	2525577	Argument	ret -> bytes -> mask		2525329	0					
ANR	2525578	PtrMemberAccess	ret -> bytes -> mask		2525329	0					
ANR	2525579	PtrMemberAccess	ret -> bytes		2525329	0					
ANR	2525580	Identifier	ret		2525329	0					
ANR	2525581	Identifier	bytes		2525329	1					
ANR	2525582	Identifier	mask		2525329	1					
ANR	2525583	Argument	it -> bytes -> mask		2525329	1					
ANR	2525584	PtrMemberAccess	it -> bytes -> mask		2525329	0					
ANR	2525585	PtrMemberAccess	it -> bytes		2525329	0					
ANR	2525586	Identifier	it		2525329	0					
ANR	2525587	Identifier	bytes		2525329	1					
ANR	2525588	Identifier	mask		2525329	1					
ANR	2525589	Argument	it -> bytes -> size		2525329	2					
ANR	2525590	PtrMemberAccess	it -> bytes -> size		2525329	0					
ANR	2525591	PtrMemberAccess	it -> bytes		2525329	0					
ANR	2525592	Identifier	it		2525329	0					
ANR	2525593	Identifier	bytes		2525329	1					
ANR	2525594	Identifier	size		2525329	1					
ANR	2525595	IfStatement	if ( it -> graph )		2525329	10					
ANR	2525596	Condition	it -> graph	2018:5:47283:47291	2525329	0	True				
ANR	2525597	PtrMemberAccess	it -> graph		2525329	0					
ANR	2525598	Identifier	it		2525329	0					
ANR	2525599	Identifier	graph		2525329	1					
ANR	2525600	CompoundStatement		41:16:892:892	2525329	1					
ANR	2525601	ExpressionStatement	ret -> graph = R_NEW0 ( RSignGraph )	2019:2:47298:47330	2525329	0	True				
ANR	2525602	AssignmentExpression	ret -> graph = R_NEW0 ( RSignGraph )		2525329	0		=			
ANR	2525603	PtrMemberAccess	ret -> graph		2525329	0					
ANR	2525604	Identifier	ret		2525329	0					
ANR	2525605	Identifier	graph		2525329	1					
ANR	2525606	CallExpression	R_NEW0 ( RSignGraph )		2525329	1					
ANR	2525607	Callee	R_NEW0		2525329	0					
ANR	2525608	Identifier	R_NEW0		2525329	0					
ANR	2525609	ArgumentList	RSignGraph		2525329	1					
ANR	2525610	Argument	RSignGraph		2525329	0					
ANR	2525611	Identifier	RSignGraph		2525329	0					
ANR	2525612	IfStatement	if ( ! ret -> graph )		2525329	1					
ANR	2525613	Condition	! ret -> graph	2020:6:47338:47348	2525329	0	True				
ANR	2525614	UnaryOperationExpression	! ret -> graph		2525329	0					
ANR	2525615	UnaryOperator	!		2525329	0					
ANR	2525616	PtrMemberAccess	ret -> graph		2525329	1					
ANR	2525617	Identifier	ret		2525329	0					
ANR	2525618	Identifier	graph		2525329	1					
ANR	2525619	CompoundStatement		43:19:949:949	2525329	1					
ANR	2525620	ExpressionStatement	r_sign_item_free ( ret )	2021:3:47356:47378	2525329	0	True				
ANR	2525621	CallExpression	r_sign_item_free ( ret )		2525329	0					
ANR	2525622	Callee	r_sign_item_free		2525329	0					
ANR	2525623	Identifier	r_sign_item_free		2525329	0					
ANR	2525624	ArgumentList	ret		2525329	1					
ANR	2525625	Argument	ret		2525329	0					
ANR	2525626	Identifier	ret		2525329	0					
ANR	2525627	ReturnStatement	return NULL ;	2022:3:47383:47394	2525329	1	True				
ANR	2525628	Identifier	NULL		2525329	0					
ANR	2525629	ExpressionStatement	* ret -> graph = * it -> graph	2024:2:47402:47426	2525329	2	True				
ANR	2525630	AssignmentExpression	* ret -> graph = * it -> graph		2525329	0		=			
ANR	2525631	UnaryOperationExpression	* ret -> graph		2525329	0					
ANR	2525632	UnaryOperator	*		2525329	0					
ANR	2525633	PtrMemberAccess	ret -> graph		2525329	1					
ANR	2525634	Identifier	ret		2525329	0					
ANR	2525635	Identifier	graph		2525329	1					
ANR	2525636	UnaryOperationExpression	* it -> graph		2525329	1					
ANR	2525637	UnaryOperator	*		2525329	0					
ANR	2525638	PtrMemberAccess	it -> graph		2525329	1					
ANR	2525639	Identifier	it		2525329	0					
ANR	2525640	Identifier	graph		2525329	1					
ANR	2525641	ExpressionStatement	ret -> refs = r_list_newf ( ( RListFree ) free )	2027:1:47433:47475	2525329	11	True				
ANR	2525642	AssignmentExpression	ret -> refs = r_list_newf ( ( RListFree ) free )		2525329	0		=			
ANR	2525643	PtrMemberAccess	ret -> refs		2525329	0					
ANR	2525644	Identifier	ret		2525329	0					
ANR	2525645	Identifier	refs		2525329	1					
ANR	2525646	CallExpression	r_list_newf ( ( RListFree ) free )		2525329	1					
ANR	2525647	Callee	r_list_newf		2525329	0					
ANR	2525648	Identifier	r_list_newf		2525329	0					
ANR	2525649	ArgumentList	( RListFree ) free		2525329	1					
ANR	2525650	Argument	( RListFree ) free		2525329	0					
ANR	2525651	CastExpression	( RListFree ) free		2525329	0					
ANR	2525652	CastTarget	RListFree		2525329	0					
ANR	2525653	Identifier	free		2525329	1					
ANR	2525654	Statement	r_list_foreach	2028:1:47478:47491	2525329	12	True				
ANR	2525655	Statement	(	2028:16:47493:47493	2525329	13	True				
ANR	2525656	Statement	it	2028:17:47494:47495	2525329	14	True				
ANR	2525657	Statement	->	2028:19:47496:47497	2525329	15	True				
ANR	2525658	Statement	refs	2028:21:47498:47501	2525329	16	True				
ANR	2525659	Statement	","	2028:25:47502:47502	2525329	17	True				
ANR	2525660	Statement	iter	2028:27:47504:47507	2525329	18	True				
ANR	2525661	Statement	","	2028:31:47508:47508	2525329	19	True				
ANR	2525662	Statement	ref	2028:33:47510:47512	2525329	20	True				
ANR	2525663	Statement	)	2028:36:47513:47513	2525329	21	True				
ANR	2525664	CompoundStatement		51:38:1113:1113	2525329	22					
ANR	2525665	ExpressionStatement	"r_list_append ( ret -> refs , r_str_new ( ref ) )"	2029:2:47519:47561	2525329	0	True				
ANR	2525666	CallExpression	"r_list_append ( ret -> refs , r_str_new ( ref ) )"		2525329	0					
ANR	2525667	Callee	r_list_append		2525329	0					
ANR	2525668	Identifier	r_list_append		2525329	0					
ANR	2525669	ArgumentList	ret -> refs		2525329	1					
ANR	2525670	Argument	ret -> refs		2525329	0					
ANR	2525671	PtrMemberAccess	ret -> refs		2525329	0					
ANR	2525672	Identifier	ret		2525329	0					
ANR	2525673	Identifier	refs		2525329	1					
ANR	2525674	Argument	r_str_new ( ref )		2525329	1					
ANR	2525675	CallExpression	r_str_new ( ref )		2525329	0					
ANR	2525676	Callee	r_str_new		2525329	0					
ANR	2525677	Identifier	r_str_new		2525329	0					
ANR	2525678	ArgumentList	ref		2525329	1					
ANR	2525679	Argument	ref		2525329	0					
ANR	2525680	Identifier	ref		2525329	0					
ANR	2525681	ExpressionStatement	ret -> xrefs = r_list_newf ( ( RListFree ) free )	2031:1:47567:47610	2525329	23	True				
ANR	2525682	AssignmentExpression	ret -> xrefs = r_list_newf ( ( RListFree ) free )		2525329	0		=			
ANR	2525683	PtrMemberAccess	ret -> xrefs		2525329	0					
ANR	2525684	Identifier	ret		2525329	0					
ANR	2525685	Identifier	xrefs		2525329	1					
ANR	2525686	CallExpression	r_list_newf ( ( RListFree ) free )		2525329	1					
ANR	2525687	Callee	r_list_newf		2525329	0					
ANR	2525688	Identifier	r_list_newf		2525329	0					
ANR	2525689	ArgumentList	( RListFree ) free		2525329	1					
ANR	2525690	Argument	( RListFree ) free		2525329	0					
ANR	2525691	CastExpression	( RListFree ) free		2525329	0					
ANR	2525692	CastTarget	RListFree		2525329	0					
ANR	2525693	Identifier	free		2525329	1					
ANR	2525694	Statement	r_list_foreach	2032:1:47613:47626	2525329	24	True				
ANR	2525695	Statement	(	2032:16:47628:47628	2525329	25	True				
ANR	2525696	Statement	it	2032:17:47629:47630	2525329	26	True				
ANR	2525697	Statement	->	2032:19:47631:47632	2525329	27	True				
ANR	2525698	Statement	xrefs	2032:21:47633:47637	2525329	28	True				
ANR	2525699	Statement	","	2032:26:47638:47638	2525329	29	True				
ANR	2525700	Statement	iter	2032:28:47640:47643	2525329	30	True				
ANR	2525701	Statement	","	2032:32:47644:47644	2525329	31	True				
ANR	2525702	Statement	ref	2032:34:47646:47648	2525329	32	True				
ANR	2525703	Statement	)	2032:37:47649:47649	2525329	33	True				
ANR	2525704	CompoundStatement		55:39:1249:1249	2525329	34					
ANR	2525705	ExpressionStatement	"r_list_append ( ret -> xrefs , r_str_new ( ref ) )"	2033:2:47655:47698	2525329	0	True				
ANR	2525706	CallExpression	"r_list_append ( ret -> xrefs , r_str_new ( ref ) )"		2525329	0					
ANR	2525707	Callee	r_list_append		2525329	0					
ANR	2525708	Identifier	r_list_append		2525329	0					
ANR	2525709	ArgumentList	ret -> xrefs		2525329	1					
ANR	2525710	Argument	ret -> xrefs		2525329	0					
ANR	2525711	PtrMemberAccess	ret -> xrefs		2525329	0					
ANR	2525712	Identifier	ret		2525329	0					
ANR	2525713	Identifier	xrefs		2525329	1					
ANR	2525714	Argument	r_str_new ( ref )		2525329	1					
ANR	2525715	CallExpression	r_str_new ( ref )		2525329	0					
ANR	2525716	Callee	r_str_new		2525329	0					
ANR	2525717	Identifier	r_str_new		2525329	0					
ANR	2525718	ArgumentList	ref		2525329	1					
ANR	2525719	Argument	ref		2525329	0					
ANR	2525720	Identifier	ref		2525329	0					
ANR	2525721	ReturnStatement	return ret ;	2036:1:47705:47715	2525329	35	True				
ANR	2525722	Identifier	ret		2525329	0					
ANR	2525723	ReturnType	R_API RSignItem *		2525329	1					
ANR	2525724	Identifier	r_sign_item_dup		2525329	2					
ANR	2525725	ParameterList	RSignItem * it		2525329	3					
ANR	2525726	Parameter	RSignItem * it	1978:33:46386:46398	2525329	0	True				
ANR	2525727	ParameterType	RSignItem *		2525329	0					
ANR	2525728	Identifier	it		2525329	1					
ANR	2525729	CFGEntryNode	ENTRY		2525329		True				
ANR	2525730	CFGExitNode	EXIT		2525329		True				
ANR	2525731	Symbol	ret -> graph		2525329						
ANR	2525732	Symbol	r_sign_item_new		2525329						
ANR	2525733	Symbol	it -> graph		2525329						
ANR	2525734	Symbol	ret -> xrefs		2525329						
ANR	2525735	Symbol	* ret		2525329						
ANR	2525736	Symbol	r_str_newf		2525329						
ANR	2525737	Symbol	ret -> bytes -> bytes		2525329						
ANR	2525738	Symbol	ret -> bytes -> mask		2525329						
ANR	2525739	Symbol	ret -> space		2525329						
ANR	2525740	Symbol	ref		2525329						
ANR	2525741	Symbol	* * it		2525329						
ANR	2525742	Symbol	it -> bytes -> size		2525329						
ANR	2525743	Symbol	* it -> graph		2525329						
ANR	2525744	Symbol	RSignGraph		2525329						
ANR	2525745	Symbol	free		2525329						
ANR	2525746	Symbol	r_str_new		2525329						
ANR	2525747	Symbol	ret -> comment		2525329						
ANR	2525748	Symbol	it -> realname		2525329						
ANR	2525749	Symbol	it -> comment		2525329						
ANR	2525750	Symbol	ret		2525329						
ANR	2525751	Symbol	ret -> bytes		2525329						
ANR	2525752	Symbol	malloc		2525329						
ANR	2525753	Symbol	ret -> realname		2525329						
ANR	2525754	Symbol	NULL		2525329						
ANR	2525755	Symbol	it -> bytes		2525329						
ANR	2525756	Symbol	r_list_newf		2525329						
ANR	2525757	Symbol	ret -> refs		2525329						
ANR	2525758	Symbol	it -> name		2525329						
ANR	2525759	Symbol	iter		2525329						
ANR	2525760	Symbol	it		2525329						
ANR	2525761	Symbol	* ret -> bytes		2525329						
ANR	2525762	Symbol	ret -> name		2525329						
ANR	2525763	Symbol	it -> space		2525329						
ANR	2525764	Symbol	R_NEW0		2525329						
ANR	2525765	Symbol	* it		2525329						
ANR	2525766	Symbol	it -> bytes -> bytes		2525329						
ANR	2525767	Symbol	* * ret		2525329						
ANR	2525768	Symbol	* ret -> graph		2525329						
ANR	2525769	Symbol	ret -> bytes -> size		2525329						
ANR	2525770	Symbol	* it -> bytes		2525329						
ANR	2525771	Symbol	it -> bytes -> mask		2525329						
ANR	2525772	Symbol	RSignBytes		2525329						
ANR	2525773	Function	r_sign_item_free	2039:0:47720:48124							
ANR	2525774	FunctionDef	r_sign_item_free (RSignItem * item)		2525773	0					
ANR	2525775	CompoundStatement		2039:45:47765:48124	2525773	0					
ANR	2525776	IfStatement	if ( ! item )		2525773	0					
ANR	2525777	Condition	! item	2040:5:47772:47776	2525773	0	True				
ANR	2525778	UnaryOperationExpression	! item		2525773	0					
ANR	2525779	UnaryOperator	!		2525773	0					
ANR	2525780	Identifier	item		2525773	1					
ANR	2525781	CompoundStatement		2:12:13:13	2525773	1					
ANR	2525782	ReturnStatement	return ;	2041:2:47783:47789	2525773	0	True				
ANR	2525783	ExpressionStatement	free ( item -> name )	2043:1:47795:47812	2525773	1	True				
ANR	2525784	CallExpression	free ( item -> name )		2525773	0					
ANR	2525785	Callee	free		2525773	0					
ANR	2525786	Identifier	free		2525773	0					
ANR	2525787	ArgumentList	item -> name		2525773	1					
ANR	2525788	Argument	item -> name		2525773	0					
ANR	2525789	PtrMemberAccess	item -> name		2525773	0					
ANR	2525790	Identifier	item		2525773	0					
ANR	2525791	Identifier	name		2525773	1					
ANR	2525792	IfStatement	if ( item -> bytes )		2525773	2					
ANR	2525793	Condition	item -> bytes	2044:5:47819:47829	2525773	0	True				
ANR	2525794	PtrMemberAccess	item -> bytes		2525773	0					
ANR	2525795	Identifier	item		2525773	0					
ANR	2525796	Identifier	bytes		2525773	1					
ANR	2525797	CompoundStatement		6:18:66:66	2525773	1					
ANR	2525798	ExpressionStatement	free ( item -> bytes -> bytes )	2045:2:47836:47861	2525773	0	True				
ANR	2525799	CallExpression	free ( item -> bytes -> bytes )		2525773	0					
ANR	2525800	Callee	free		2525773	0					
ANR	2525801	Identifier	free		2525773	0					
ANR	2525802	ArgumentList	item -> bytes -> bytes		2525773	1					
ANR	2525803	Argument	item -> bytes -> bytes		2525773	0					
ANR	2525804	PtrMemberAccess	item -> bytes -> bytes		2525773	0					
ANR	2525805	PtrMemberAccess	item -> bytes		2525773	0					
ANR	2525806	Identifier	item		2525773	0					
ANR	2525807	Identifier	bytes		2525773	1					
ANR	2525808	Identifier	bytes		2525773	1					
ANR	2525809	ExpressionStatement	free ( item -> bytes -> mask )	2046:2:47865:47889	2525773	1	True				
ANR	2525810	CallExpression	free ( item -> bytes -> mask )		2525773	0					
ANR	2525811	Callee	free		2525773	0					
ANR	2525812	Identifier	free		2525773	0					
ANR	2525813	ArgumentList	item -> bytes -> mask		2525773	1					
ANR	2525814	Argument	item -> bytes -> mask		2525773	0					
ANR	2525815	PtrMemberAccess	item -> bytes -> mask		2525773	0					
ANR	2525816	PtrMemberAccess	item -> bytes		2525773	0					
ANR	2525817	Identifier	item		2525773	0					
ANR	2525818	Identifier	bytes		2525773	1					
ANR	2525819	Identifier	mask		2525773	1					
ANR	2525820	ExpressionStatement	free ( item -> bytes )	2047:2:47893:47911	2525773	2	True				
ANR	2525821	CallExpression	free ( item -> bytes )		2525773	0					
ANR	2525822	Callee	free		2525773	0					
ANR	2525823	Identifier	free		2525773	0					
ANR	2525824	ArgumentList	item -> bytes		2525773	1					
ANR	2525825	Argument	item -> bytes		2525773	0					
ANR	2525826	PtrMemberAccess	item -> bytes		2525773	0					
ANR	2525827	Identifier	item		2525773	0					
ANR	2525828	Identifier	bytes		2525773	1					
ANR	2525829	IfStatement	if ( item -> hash )		2525773	3					
ANR	2525830	Condition	item -> hash	2049:5:47921:47930	2525773	0	True				
ANR	2525831	PtrMemberAccess	item -> hash		2525773	0					
ANR	2525832	Identifier	item		2525773	0					
ANR	2525833	Identifier	hash		2525773	1					
ANR	2525834	CompoundStatement		11:17:167:167	2525773	1					
ANR	2525835	ExpressionStatement	free ( item -> hash -> bbhash )	2050:2:47937:47962	2525773	0	True				
ANR	2525836	CallExpression	free ( item -> hash -> bbhash )		2525773	0					
ANR	2525837	Callee	free		2525773	0					
ANR	2525838	Identifier	free		2525773	0					
ANR	2525839	ArgumentList	item -> hash -> bbhash		2525773	1					
ANR	2525840	Argument	item -> hash -> bbhash		2525773	0					
ANR	2525841	PtrMemberAccess	item -> hash -> bbhash		2525773	0					
ANR	2525842	PtrMemberAccess	item -> hash		2525773	0					
ANR	2525843	Identifier	item		2525773	0					
ANR	2525844	Identifier	hash		2525773	1					
ANR	2525845	Identifier	bbhash		2525773	1					
ANR	2525846	ExpressionStatement	free ( item -> hash )	2051:2:47966:47983	2525773	1	True				
ANR	2525847	CallExpression	free ( item -> hash )		2525773	0					
ANR	2525848	Callee	free		2525773	0					
ANR	2525849	Identifier	free		2525773	0					
ANR	2525850	ArgumentList	item -> hash		2525773	1					
ANR	2525851	Argument	item -> hash		2525773	0					
ANR	2525852	PtrMemberAccess	item -> hash		2525773	0					
ANR	2525853	Identifier	item		2525773	0					
ANR	2525854	Identifier	hash		2525773	1					
ANR	2525855	ExpressionStatement	free ( item -> graph )	2053:1:47989:48007	2525773	4	True				
ANR	2525856	CallExpression	free ( item -> graph )		2525773	0					
ANR	2525857	Callee	free		2525773	0					
ANR	2525858	Identifier	free		2525773	0					
ANR	2525859	ArgumentList	item -> graph		2525773	1					
ANR	2525860	Argument	item -> graph		2525773	0					
ANR	2525861	PtrMemberAccess	item -> graph		2525773	0					
ANR	2525862	Identifier	item		2525773	0					
ANR	2525863	Identifier	graph		2525773	1					
ANR	2525864	ExpressionStatement	free ( item -> comment )	2054:1:48010:48030	2525773	5	True				
ANR	2525865	CallExpression	free ( item -> comment )		2525773	0					
ANR	2525866	Callee	free		2525773	0					
ANR	2525867	Identifier	free		2525773	0					
ANR	2525868	ArgumentList	item -> comment		2525773	1					
ANR	2525869	Argument	item -> comment		2525773	0					
ANR	2525870	PtrMemberAccess	item -> comment		2525773	0					
ANR	2525871	Identifier	item		2525773	0					
ANR	2525872	Identifier	comment		2525773	1					
ANR	2525873	ExpressionStatement	free ( item -> realname )	2055:1:48033:48054	2525773	6	True				
ANR	2525874	CallExpression	free ( item -> realname )		2525773	0					
ANR	2525875	Callee	free		2525773	0					
ANR	2525876	Identifier	free		2525773	0					
ANR	2525877	ArgumentList	item -> realname		2525773	1					
ANR	2525878	Argument	item -> realname		2525773	0					
ANR	2525879	PtrMemberAccess	item -> realname		2525773	0					
ANR	2525880	Identifier	item		2525773	0					
ANR	2525881	Identifier	realname		2525773	1					
ANR	2525882	ExpressionStatement	r_list_free ( item -> refs )	2056:1:48057:48081	2525773	7	True				
ANR	2525883	CallExpression	r_list_free ( item -> refs )		2525773	0					
ANR	2525884	Callee	r_list_free		2525773	0					
ANR	2525885	Identifier	r_list_free		2525773	0					
ANR	2525886	ArgumentList	item -> refs		2525773	1					
ANR	2525887	Argument	item -> refs		2525773	0					
ANR	2525888	PtrMemberAccess	item -> refs		2525773	0					
ANR	2525889	Identifier	item		2525773	0					
ANR	2525890	Identifier	refs		2525773	1					
ANR	2525891	ExpressionStatement	r_list_free ( item -> vars )	2057:1:48084:48108	2525773	8	True				
ANR	2525892	CallExpression	r_list_free ( item -> vars )		2525773	0					
ANR	2525893	Callee	r_list_free		2525773	0					
ANR	2525894	Identifier	r_list_free		2525773	0					
ANR	2525895	ArgumentList	item -> vars		2525773	1					
ANR	2525896	Argument	item -> vars		2525773	0					
ANR	2525897	PtrMemberAccess	item -> vars		2525773	0					
ANR	2525898	Identifier	item		2525773	0					
ANR	2525899	Identifier	vars		2525773	1					
ANR	2525900	ExpressionStatement	free ( item )	2058:1:48111:48122	2525773	9	True				
ANR	2525901	CallExpression	free ( item )		2525773	0					
ANR	2525902	Callee	free		2525773	0					
ANR	2525903	Identifier	free		2525773	0					
ANR	2525904	ArgumentList	item		2525773	1					
ANR	2525905	Argument	item		2525773	0					
ANR	2525906	Identifier	item		2525773	0					
ANR	2525907	ReturnType	R_API void		2525773	1					
ANR	2525908	Identifier	r_sign_item_free		2525773	2					
ANR	2525909	ParameterList	RSignItem * item		2525773	3					
ANR	2525910	Parameter	RSignItem * item	2039:28:47748:47762	2525773	0	True				
ANR	2525911	ParameterType	RSignItem *		2525773	0					
ANR	2525912	Identifier	item		2525773	1					
ANR	2525913	CFGEntryNode	ENTRY		2525773		True				
ANR	2525914	CFGExitNode	EXIT		2525773		True				
ANR	2525915	Symbol	* item -> bytes		2525773						
ANR	2525916	Symbol	item		2525773						
ANR	2525917	Symbol	item -> bytes -> bytes		2525773						
ANR	2525918	Symbol	* * item		2525773						
ANR	2525919	Symbol	item -> hash		2525773						
ANR	2525920	Symbol	item -> comment		2525773						
ANR	2525921	Symbol	item -> graph		2525773						
ANR	2525922	Symbol	item -> vars		2525773						
ANR	2525923	Symbol	item -> bytes		2525773						
ANR	2525924	Symbol	* item		2525773						
ANR	2525925	Symbol	item -> name		2525773						
ANR	2525926	Symbol	item -> bytes -> mask		2525773						
ANR	2525927	Symbol	* item -> hash		2525773						
ANR	2525928	Symbol	item -> realname		2525773						
ANR	2525929	Symbol	item -> hash -> bbhash		2525773						
ANR	2525930	Symbol	item -> refs		2525773						
ANR	2525931	Function	loadCB	2061:0:48127:48513							
ANR	2525932	FunctionDef	"loadCB (void * user , const char * k , const char * v)"		2525931	0					
ANR	2525933	CompoundStatement		2061:60:48187:48513	2525931	0					
ANR	2525934	IdentifierDeclStatement	RAnal * a = ( RAnal * ) user ;	2062:1:48190:48215	2525931	0	True				
ANR	2525935	IdentifierDecl	* a = ( RAnal * ) user		2525931	0					
ANR	2525936	IdentifierDeclType	RAnal *		2525931	0					
ANR	2525937	Identifier	a		2525931	1					
ANR	2525938	AssignmentExpression	* a = ( RAnal * ) user		2525931	2		=			
ANR	2525939	Identifier	a		2525931	0					
ANR	2525940	CastExpression	( RAnal * ) user		2525931	1					
ANR	2525941	CastTarget	RAnal *		2525931	0					
ANR	2525942	Identifier	user		2525931	1					
ANR	2525943	IdentifierDeclStatement	"char nk [ R_SIGN_KEY_MAXSZ ] , nv [ R_SIGN_VAL_MAXSZ ] ;"	2063:1:48218:48265	2525931	1	True				
ANR	2525944	IdentifierDecl	nk [ R_SIGN_KEY_MAXSZ ]		2525931	0					
ANR	2525945	IdentifierDeclType	char [ R_SIGN_KEY_MAXSZ ]		2525931	0					
ANR	2525946	Identifier	nk		2525931	1					
ANR	2525947	Identifier	R_SIGN_KEY_MAXSZ		2525931	2					
ANR	2525948	IdentifierDecl	nv [ R_SIGN_VAL_MAXSZ ]		2525931	1					
ANR	2525949	IdentifierDeclType	char [ R_SIGN_VAL_MAXSZ ]		2525931	0					
ANR	2525950	Identifier	nv		2525931	1					
ANR	2525951	Identifier	R_SIGN_VAL_MAXSZ		2525931	2					
ANR	2525952	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	2064:1:48268:48302	2525931	2	True				
ANR	2525953	IdentifierDecl	* it = r_sign_item_new ( )		2525931	0					
ANR	2525954	IdentifierDeclType	RSignItem *		2525931	0					
ANR	2525955	Identifier	it		2525931	1					
ANR	2525956	AssignmentExpression	* it = r_sign_item_new ( )		2525931	2		=			
ANR	2525957	Identifier	it		2525931	0					
ANR	2525958	CallExpression	r_sign_item_new ( )		2525931	1					
ANR	2525959	Callee	r_sign_item_new		2525931	0					
ANR	2525960	Identifier	r_sign_item_new		2525931	0					
ANR	2525961	ArgumentList			2525931	1					
ANR	2525962	IfStatement	"if ( it && r_sign_deserialize ( a , it , k , v ) )"		2525931	3					
ANR	2525963	Condition	"it && r_sign_deserialize ( a , it , k , v )"	2065:5:48309:48346	2525931	0	True				
ANR	2525964	AndExpression	"it && r_sign_deserialize ( a , it , k , v )"		2525931	0		&&			
ANR	2525965	Identifier	it		2525931	0					
ANR	2525966	CallExpression	"r_sign_deserialize ( a , it , k , v )"		2525931	1					
ANR	2525967	Callee	r_sign_deserialize		2525931	0					
ANR	2525968	Identifier	r_sign_deserialize		2525931	0					
ANR	2525969	ArgumentList	a		2525931	1					
ANR	2525970	Argument	a		2525931	0					
ANR	2525971	Identifier	a		2525931	0					
ANR	2525972	Argument	it		2525931	1					
ANR	2525973	Identifier	it		2525931	0					
ANR	2525974	Argument	k		2525931	2					
ANR	2525975	Identifier	k		2525931	0					
ANR	2525976	Argument	v		2525931	3					
ANR	2525977	Identifier	v		2525931	0					
ANR	2525978	CompoundStatement		5:45:161:161	2525931	1					
ANR	2525979	ExpressionStatement	"serialize ( a , it , nk , nv )"	2066:2:48353:48378	2525931	0	True				
ANR	2525980	CallExpression	"serialize ( a , it , nk , nv )"		2525931	0					
ANR	2525981	Callee	serialize		2525931	0					
ANR	2525982	Identifier	serialize		2525931	0					
ANR	2525983	ArgumentList	a		2525931	1					
ANR	2525984	Argument	a		2525931	0					
ANR	2525985	Identifier	a		2525931	0					
ANR	2525986	Argument	it		2525931	1					
ANR	2525987	Identifier	it		2525931	0					
ANR	2525988	Argument	nk		2525931	2					
ANR	2525989	Identifier	nk		2525931	0					
ANR	2525990	Argument	nv		2525931	3					
ANR	2525991	Identifier	nv		2525931	0					
ANR	2525992	ExpressionStatement	"sdb_set ( a -> sdb_zigns , nk , nv , 0 )"	2067:2:48382:48415	2525931	1	True				
ANR	2525993	CallExpression	"sdb_set ( a -> sdb_zigns , nk , nv , 0 )"		2525931	0					
ANR	2525994	Callee	sdb_set		2525931	0					
ANR	2525995	Identifier	sdb_set		2525931	0					
ANR	2525996	ArgumentList	a -> sdb_zigns		2525931	1					
ANR	2525997	Argument	a -> sdb_zigns		2525931	0					
ANR	2525998	PtrMemberAccess	a -> sdb_zigns		2525931	0					
ANR	2525999	Identifier	a		2525931	0					
ANR	2526000	Identifier	sdb_zigns		2525931	1					
ANR	2526001	Argument	nk		2525931	1					
ANR	2526002	Identifier	nk		2525931	0					
ANR	2526003	Argument	nv		2525931	2					
ANR	2526004	Identifier	nv		2525931	0					
ANR	2526005	Argument	0		2525931	3					
ANR	2526006	PrimaryExpression	0		2525931	0					
ANR	2526007	ElseStatement	else		2525931	0					
ANR	2526008	CompoundStatement		8:8:237:237	2525931	0					
ANR	2526009	ExpressionStatement	"eprintf ( ""error: cannot deserialize zign\\n"" )"	2069:2:48429:48473	2525931	0	True				
ANR	2526010	CallExpression	"eprintf ( ""error: cannot deserialize zign\\n"" )"		2525931	0					
ANR	2526011	Callee	eprintf		2525931	0					
ANR	2526012	Identifier	eprintf		2525931	0					
ANR	2526013	ArgumentList	"""error: cannot deserialize zign\\n"""		2525931	1					
ANR	2526014	Argument	"""error: cannot deserialize zign\\n"""		2525931	0					
ANR	2526015	PrimaryExpression	"""error: cannot deserialize zign\\n"""		2525931	0					
ANR	2526016	ExpressionStatement	r_sign_item_free ( it )	2071:1:48479:48500	2525931	4	True				
ANR	2526017	CallExpression	r_sign_item_free ( it )		2525931	0					
ANR	2526018	Callee	r_sign_item_free		2525931	0					
ANR	2526019	Identifier	r_sign_item_free		2525931	0					
ANR	2526020	ArgumentList	it		2525931	1					
ANR	2526021	Argument	it		2525931	0					
ANR	2526022	Identifier	it		2525931	0					
ANR	2526023	ReturnStatement	return 1 ;	2072:1:48503:48511	2525931	5	True				
ANR	2526024	PrimaryExpression	1		2525931	0					
ANR	2526025	ReturnType	static int		2525931	1					
ANR	2526026	Identifier	loadCB		2525931	2					
ANR	2526027	ParameterList	"void * user , const char * k , const char * v"		2525931	3					
ANR	2526028	Parameter	void * user	2061:18:48145:48154	2525931	0	True				
ANR	2526029	ParameterType	void *		2525931	0					
ANR	2526030	Identifier	user		2525931	1					
ANR	2526031	Parameter	const char * k	2061:30:48157:48169	2525931	1	True				
ANR	2526032	ParameterType	const char *		2525931	0					
ANR	2526033	Identifier	k		2525931	1					
ANR	2526034	Parameter	const char * v	2061:45:48172:48184	2525931	2	True				
ANR	2526035	ParameterType	const char *		2525931	0					
ANR	2526036	Identifier	v		2525931	1					
ANR	2526037	CFGEntryNode	ENTRY		2525931		True				
ANR	2526038	CFGExitNode	EXIT		2525931		True				
ANR	2526039	Symbol	a		2525931						
ANR	2526040	Symbol	r_sign_item_new		2525931						
ANR	2526041	Symbol	r_sign_deserialize		2525931						
ANR	2526042	Symbol	v		2525931						
ANR	2526043	Symbol	nv		2525931						
ANR	2526044	Symbol	k		2525931						
ANR	2526045	Symbol	it		2525931						
ANR	2526046	Symbol	* a		2525931						
ANR	2526047	Symbol	user		2525931						
ANR	2526048	Symbol	nk		2525931						
ANR	2526049	Symbol	a -> sdb_zigns		2525931						
ANR	2526050	Function	r_sign_path	2075:0:48516:49245							
ANR	2526051	FunctionDef	"r_sign_path (RAnal * a , const char * file)"		2526050	0					
ANR	2526052	CompoundStatement		2075:52:48568:49245	2526050	0					
ANR	2526053	IdentifierDeclStatement	char * abs = r_file_abspath ( file ) ;	2076:1:48571:48604	2526050	0	True				
ANR	2526054	IdentifierDecl	* abs = r_file_abspath ( file )		2526050	0					
ANR	2526055	IdentifierDeclType	char *		2526050	0					
ANR	2526056	Identifier	abs		2526050	1					
ANR	2526057	AssignmentExpression	* abs = r_file_abspath ( file )		2526050	2		=			
ANR	2526058	Identifier	abs		2526050	0					
ANR	2526059	CallExpression	r_file_abspath ( file )		2526050	1					
ANR	2526060	Callee	r_file_abspath		2526050	0					
ANR	2526061	Identifier	r_file_abspath		2526050	0					
ANR	2526062	ArgumentList	file		2526050	1					
ANR	2526063	Argument	file		2526050	0					
ANR	2526064	Identifier	file		2526050	0					
ANR	2526065	IfStatement	if ( abs )		2526050	1					
ANR	2526066	Condition	abs	2077:5:48611:48613	2526050	0	True				
ANR	2526067	Identifier	abs		2526050	0					
ANR	2526068	CompoundStatement		3:10:47:47	2526050	1					
ANR	2526069	IfStatement	if ( r_file_is_regular ( abs ) )		2526050	0					
ANR	2526070	Condition	r_file_is_regular ( abs )	2078:6:48624:48646	2526050	0	True				
ANR	2526071	CallExpression	r_file_is_regular ( abs )		2526050	0					
ANR	2526072	Callee	r_file_is_regular		2526050	0					
ANR	2526073	Identifier	r_file_is_regular		2526050	0					
ANR	2526074	ArgumentList	abs		2526050	1					
ANR	2526075	Argument	abs		2526050	0					
ANR	2526076	Identifier	abs		2526050	0					
ANR	2526077	CompoundStatement		4:31:80:80	2526050	1					
ANR	2526078	ReturnStatement	return abs ;	2079:3:48654:48664	2526050	0	True				
ANR	2526079	Identifier	abs		2526050	0					
ANR	2526080	ExpressionStatement	free ( abs )	2081:2:48672:48682	2526050	1	True				
ANR	2526081	CallExpression	free ( abs )		2526050	0					
ANR	2526082	Callee	free		2526050	0					
ANR	2526083	Identifier	free		2526050	0					
ANR	2526084	ArgumentList	abs		2526050	1					
ANR	2526085	Argument	abs		2526050	0					
ANR	2526086	Identifier	abs		2526050	0					
ANR	2526087	IfStatement	if ( a -> zign_path )		2526050	2					
ANR	2526088	Condition	a -> zign_path	2084:5:48693:48704	2526050	0	True				
ANR	2526089	PtrMemberAccess	a -> zign_path		2526050	0					
ANR	2526090	Identifier	a		2526050	0					
ANR	2526091	Identifier	zign_path		2526050	1					
ANR	2526092	CompoundStatement		11:2:142:207	2526050	1					
ANR	2526093	IdentifierDeclStatement	"char * path = r_str_newf ( ""%s%s%s"" , a -> zign_path , R_SYS_DIR , file ) ;"	2085:2:48711:48776	2526050	0	True				
ANR	2526094	IdentifierDecl	"* path = r_str_newf ( ""%s%s%s"" , a -> zign_path , R_SYS_DIR , file )"		2526050	0					
ANR	2526095	IdentifierDeclType	char *		2526050	0					
ANR	2526096	Identifier	path		2526050	1					
ANR	2526097	AssignmentExpression	"* path = r_str_newf ( ""%s%s%s"" , a -> zign_path , R_SYS_DIR , file )"		2526050	2		=			
ANR	2526098	Identifier	path		2526050	0					
ANR	2526099	CallExpression	"r_str_newf ( ""%s%s%s"" , a -> zign_path , R_SYS_DIR , file )"		2526050	1					
ANR	2526100	Callee	r_str_newf		2526050	0					
ANR	2526101	Identifier	r_str_newf		2526050	0					
ANR	2526102	ArgumentList	"""%s%s%s"""		2526050	1					
ANR	2526103	Argument	"""%s%s%s"""		2526050	0					
ANR	2526104	PrimaryExpression	"""%s%s%s"""		2526050	0					
ANR	2526105	Argument	a -> zign_path		2526050	1					
ANR	2526106	PtrMemberAccess	a -> zign_path		2526050	0					
ANR	2526107	Identifier	a		2526050	0					
ANR	2526108	Identifier	zign_path		2526050	1					
ANR	2526109	Argument	R_SYS_DIR		2526050	2					
ANR	2526110	Identifier	R_SYS_DIR		2526050	0					
ANR	2526111	Argument	file		2526050	3					
ANR	2526112	Identifier	file		2526050	0					
ANR	2526113	ExpressionStatement	abs = r_file_abspath ( path )	2086:2:48780:48807	2526050	1	True				
ANR	2526114	AssignmentExpression	abs = r_file_abspath ( path )		2526050	0		=			
ANR	2526115	Identifier	abs		2526050	0					
ANR	2526116	CallExpression	r_file_abspath ( path )		2526050	1					
ANR	2526117	Callee	r_file_abspath		2526050	0					
ANR	2526118	Identifier	r_file_abspath		2526050	0					
ANR	2526119	ArgumentList	path		2526050	1					
ANR	2526120	Argument	path		2526050	0					
ANR	2526121	Identifier	path		2526050	0					
ANR	2526122	ExpressionStatement	free ( path )	2087:2:48811:48822	2526050	2	True				
ANR	2526123	CallExpression	free ( path )		2526050	0					
ANR	2526124	Callee	free		2526050	0					
ANR	2526125	Identifier	free		2526050	0					
ANR	2526126	ArgumentList	path		2526050	1					
ANR	2526127	Argument	path		2526050	0					
ANR	2526128	Identifier	path		2526050	0					
ANR	2526129	IfStatement	if ( r_file_is_regular ( abs ) )		2526050	3					
ANR	2526130	Condition	r_file_is_regular ( abs )	2088:6:48830:48852	2526050	0	True				
ANR	2526131	CallExpression	r_file_is_regular ( abs )		2526050	0					
ANR	2526132	Callee	r_file_is_regular		2526050	0					
ANR	2526133	Identifier	r_file_is_regular		2526050	0					
ANR	2526134	ArgumentList	abs		2526050	1					
ANR	2526135	Argument	abs		2526050	0					
ANR	2526136	Identifier	abs		2526050	0					
ANR	2526137	CompoundStatement		14:31:286:286	2526050	1					
ANR	2526138	ReturnStatement	return abs ;	2089:3:48860:48870	2526050	0	True				
ANR	2526139	Identifier	abs		2526050	0					
ANR	2526140	ExpressionStatement	free ( abs )	2091:2:48878:48888	2526050	4	True				
ANR	2526141	CallExpression	free ( abs )		2526050	0					
ANR	2526142	Callee	free		2526050	0					
ANR	2526143	Identifier	free		2526050	0					
ANR	2526144	ArgumentList	abs		2526050	1					
ANR	2526145	Argument	abs		2526050	0					
ANR	2526146	Identifier	abs		2526050	0					
ANR	2526147	ElseStatement	else		2526050	0					
ANR	2526148	CompoundStatement		19:2:333:372	2526050	0					
ANR	2526149	IdentifierDeclStatement	char * home = r_str_home ( R2_HOME_ZIGNS ) ;	2093:2:48902:48941	2526050	0	True				
ANR	2526150	IdentifierDecl	* home = r_str_home ( R2_HOME_ZIGNS )		2526050	0					
ANR	2526151	IdentifierDeclType	char *		2526050	0					
ANR	2526152	Identifier	home		2526050	1					
ANR	2526153	AssignmentExpression	* home = r_str_home ( R2_HOME_ZIGNS )		2526050	2		=			
ANR	2526154	Identifier	home		2526050	0					
ANR	2526155	CallExpression	r_str_home ( R2_HOME_ZIGNS )		2526050	1					
ANR	2526156	Callee	r_str_home		2526050	0					
ANR	2526157	Identifier	r_str_home		2526050	0					
ANR	2526158	ArgumentList	R2_HOME_ZIGNS		2526050	1					
ANR	2526159	Argument	R2_HOME_ZIGNS		2526050	0					
ANR	2526160	Identifier	R2_HOME_ZIGNS		2526050	0					
ANR	2526161	ExpressionStatement	"abs = r_str_newf ( ""%s%s%s"" , home , R_SYS_DIR , file )"	2094:2:48945:48995	2526050	1	True				
ANR	2526162	AssignmentExpression	"abs = r_str_newf ( ""%s%s%s"" , home , R_SYS_DIR , file )"		2526050	0		=			
ANR	2526163	Identifier	abs		2526050	0					
ANR	2526164	CallExpression	"r_str_newf ( ""%s%s%s"" , home , R_SYS_DIR , file )"		2526050	1					
ANR	2526165	Callee	r_str_newf		2526050	0					
ANR	2526166	Identifier	r_str_newf		2526050	0					
ANR	2526167	ArgumentList	"""%s%s%s"""		2526050	1					
ANR	2526168	Argument	"""%s%s%s"""		2526050	0					
ANR	2526169	PrimaryExpression	"""%s%s%s"""		2526050	0					
ANR	2526170	Argument	home		2526050	1					
ANR	2526171	Identifier	home		2526050	0					
ANR	2526172	Argument	R_SYS_DIR		2526050	2					
ANR	2526173	Identifier	R_SYS_DIR		2526050	0					
ANR	2526174	Argument	file		2526050	3					
ANR	2526175	Identifier	file		2526050	0					
ANR	2526176	ExpressionStatement	free ( home )	2095:2:48999:49010	2526050	2	True				
ANR	2526177	CallExpression	free ( home )		2526050	0					
ANR	2526178	Callee	free		2526050	0					
ANR	2526179	Identifier	free		2526050	0					
ANR	2526180	ArgumentList	home		2526050	1					
ANR	2526181	Argument	home		2526050	0					
ANR	2526182	Identifier	home		2526050	0					
ANR	2526183	IfStatement	if ( r_file_is_regular ( abs ) )		2526050	3					
ANR	2526184	Condition	r_file_is_regular ( abs )	2096:6:49018:49040	2526050	0	True				
ANR	2526185	CallExpression	r_file_is_regular ( abs )		2526050	0					
ANR	2526186	Callee	r_file_is_regular		2526050	0					
ANR	2526187	Identifier	r_file_is_regular		2526050	0					
ANR	2526188	ArgumentList	abs		2526050	1					
ANR	2526189	Argument	abs		2526050	0					
ANR	2526190	Identifier	abs		2526050	0					
ANR	2526191	CompoundStatement		22:31:474:474	2526050	1					
ANR	2526192	ReturnStatement	return abs ;	2097:3:49048:49058	2526050	0	True				
ANR	2526193	Identifier	abs		2526050	0					
ANR	2526194	ExpressionStatement	free ( abs )	2099:2:49066:49076	2526050	4	True				
ANR	2526195	CallExpression	free ( abs )		2526050	0					
ANR	2526196	Callee	free		2526050	0					
ANR	2526197	Identifier	free		2526050	0					
ANR	2526198	ArgumentList	abs		2526050	1					
ANR	2526199	Argument	abs		2526050	0					
ANR	2526200	Identifier	abs		2526050	0					
ANR	2526201	ExpressionStatement	"abs = r_str_newf ( R_JOIN_3_PATHS ( ""%s"" , R2_ZIGNS , ""%s"" ) , r_sys_prefix ( NULL ) , file )"	2102:1:49083:49166	2526050	3	True				
ANR	2526202	AssignmentExpression	"abs = r_str_newf ( R_JOIN_3_PATHS ( ""%s"" , R2_ZIGNS , ""%s"" ) , r_sys_prefix ( NULL ) , file )"		2526050	0		=			
ANR	2526203	Identifier	abs		2526050	0					
ANR	2526204	CallExpression	"r_str_newf ( R_JOIN_3_PATHS ( ""%s"" , R2_ZIGNS , ""%s"" ) , r_sys_prefix ( NULL ) , file )"		2526050	1					
ANR	2526205	Callee	r_str_newf		2526050	0					
ANR	2526206	Identifier	r_str_newf		2526050	0					
ANR	2526207	ArgumentList	"R_JOIN_3_PATHS ( ""%s"" , R2_ZIGNS , ""%s"" )"		2526050	1					
ANR	2526208	Argument	"R_JOIN_3_PATHS ( ""%s"" , R2_ZIGNS , ""%s"" )"		2526050	0					
ANR	2526209	CallExpression	"R_JOIN_3_PATHS ( ""%s"" , R2_ZIGNS , ""%s"" )"		2526050	0					
ANR	2526210	Callee	R_JOIN_3_PATHS		2526050	0					
ANR	2526211	Identifier	R_JOIN_3_PATHS		2526050	0					
ANR	2526212	ArgumentList	"""%s"""		2526050	1					
ANR	2526213	Argument	"""%s"""		2526050	0					
ANR	2526214	PrimaryExpression	"""%s"""		2526050	0					
ANR	2526215	Argument	R2_ZIGNS		2526050	1					
ANR	2526216	Identifier	R2_ZIGNS		2526050	0					
ANR	2526217	Argument	"""%s"""		2526050	2					
ANR	2526218	PrimaryExpression	"""%s"""		2526050	0					
ANR	2526219	Argument	r_sys_prefix ( NULL )		2526050	1					
ANR	2526220	CallExpression	r_sys_prefix ( NULL )		2526050	0					
ANR	2526221	Callee	r_sys_prefix		2526050	0					
ANR	2526222	Identifier	r_sys_prefix		2526050	0					
ANR	2526223	ArgumentList	NULL		2526050	1					
ANR	2526224	Argument	NULL		2526050	0					
ANR	2526225	Identifier	NULL		2526050	0					
ANR	2526226	Argument	file		2526050	2					
ANR	2526227	Identifier	file		2526050	0					
ANR	2526228	IfStatement	if ( r_file_is_regular ( abs ) )		2526050	4					
ANR	2526229	Condition	r_file_is_regular ( abs )	2103:5:49173:49195	2526050	0	True				
ANR	2526230	CallExpression	r_file_is_regular ( abs )		2526050	0					
ANR	2526231	Callee	r_file_is_regular		2526050	0					
ANR	2526232	Identifier	r_file_is_regular		2526050	0					
ANR	2526233	ArgumentList	abs		2526050	1					
ANR	2526234	Argument	abs		2526050	0					
ANR	2526235	Identifier	abs		2526050	0					
ANR	2526236	CompoundStatement		29:30:629:629	2526050	1					
ANR	2526237	ReturnStatement	return abs ;	2104:2:49202:49212	2526050	0	True				
ANR	2526238	Identifier	abs		2526050	0					
ANR	2526239	ExpressionStatement	free ( abs )	2106:1:49218:49228	2526050	5	True				
ANR	2526240	CallExpression	free ( abs )		2526050	0					
ANR	2526241	Callee	free		2526050	0					
ANR	2526242	Identifier	free		2526050	0					
ANR	2526243	ArgumentList	abs		2526050	1					
ANR	2526244	Argument	abs		2526050	0					
ANR	2526245	Identifier	abs		2526050	0					
ANR	2526246	ReturnStatement	return NULL ;	2108:1:49232:49243	2526050	6	True				
ANR	2526247	Identifier	NULL		2526050	0					
ANR	2526248	ReturnType	R_API char *		2526050	1					
ANR	2526249	Identifier	r_sign_path		2526050	2					
ANR	2526250	ParameterList	"RAnal * a , const char * file"		2526050	3					
ANR	2526251	Parameter	RAnal * a	2075:24:48540:48547	2526050	0	True				
ANR	2526252	ParameterType	RAnal *		2526050	0					
ANR	2526253	Identifier	a		2526050	1					
ANR	2526254	Parameter	const char * file	2075:34:48550:48565	2526050	1	True				
ANR	2526255	ParameterType	const char *		2526050	0					
ANR	2526256	Identifier	file		2526050	1					
ANR	2526257	CFGEntryNode	ENTRY		2526050		True				
ANR	2526258	CFGExitNode	EXIT		2526050		True				
ANR	2526259	Symbol	a		2526050						
ANR	2526260	Symbol	r_file_abspath		2526050						
ANR	2526261	Symbol	NULL		2526050						
ANR	2526262	Symbol	R_JOIN_3_PATHS		2526050						
ANR	2526263	Symbol	r_file_is_regular		2526050						
ANR	2526264	Symbol	a -> zign_path		2526050						
ANR	2526265	Symbol	* a		2526050						
ANR	2526266	Symbol	r_str_newf		2526050						
ANR	2526267	Symbol	r_sys_prefix		2526050						
ANR	2526268	Symbol	home		2526050						
ANR	2526269	Symbol	path		2526050						
ANR	2526270	Symbol	file		2526050						
ANR	2526271	Symbol	abs		2526050						
ANR	2526272	Symbol	R_SYS_DIR		2526050						
ANR	2526273	Symbol	R2_ZIGNS		2526050						
ANR	2526274	Symbol	R2_HOME_ZIGNS		2526050						
ANR	2526275	Symbol	r_str_home		2526050						
ANR	2526276	Function	r_sign_load	2111:0:49248:49667							
ANR	2526277	FunctionDef	"r_sign_load (RAnal * a , const char * file)"		2526276	0					
ANR	2526278	CompoundStatement		2111:51:49299:49667	2526276	0					
ANR	2526279	IfStatement	if ( ! a || ! file )		2526276	0					
ANR	2526280	Condition	! a || ! file	2112:5:49306:49316	2526276	0	True				
ANR	2526281	OrExpression	! a || ! file		2526276	0		||			
ANR	2526282	UnaryOperationExpression	! a		2526276	0					
ANR	2526283	UnaryOperator	!		2526276	0					
ANR	2526284	Identifier	a		2526276	1					
ANR	2526285	UnaryOperationExpression	! file		2526276	1					
ANR	2526286	UnaryOperator	!		2526276	0					
ANR	2526287	Identifier	file		2526276	1					
ANR	2526288	CompoundStatement		2:18:19:19	2526276	1					
ANR	2526289	ReturnStatement	return false ;	2113:2:49323:49335	2526276	0	True				
ANR	2526290	Identifier	false		2526276	0					
ANR	2526291	IdentifierDeclStatement	"char * path = r_sign_path ( a , file ) ;"	2115:1:49341:49375	2526276	1	True				
ANR	2526292	IdentifierDecl	"* path = r_sign_path ( a , file )"		2526276	0					
ANR	2526293	IdentifierDeclType	char *		2526276	0					
ANR	2526294	Identifier	path		2526276	1					
ANR	2526295	AssignmentExpression	"* path = r_sign_path ( a , file )"		2526276	2		=			
ANR	2526296	Identifier	path		2526276	0					
ANR	2526297	CallExpression	"r_sign_path ( a , file )"		2526276	1					
ANR	2526298	Callee	r_sign_path		2526276	0					
ANR	2526299	Identifier	r_sign_path		2526276	0					
ANR	2526300	ArgumentList	a		2526276	1					
ANR	2526301	Argument	a		2526276	0					
ANR	2526302	Identifier	a		2526276	0					
ANR	2526303	Argument	file		2526276	1					
ANR	2526304	Identifier	file		2526276	0					
ANR	2526305	IfStatement	if ( ! r_file_exists ( path ) )		2526276	2					
ANR	2526306	Condition	! r_file_exists ( path )	2116:5:49382:49402	2526276	0	True				
ANR	2526307	UnaryOperationExpression	! r_file_exists ( path )		2526276	0					
ANR	2526308	UnaryOperator	!		2526276	0					
ANR	2526309	CallExpression	r_file_exists ( path )		2526276	1					
ANR	2526310	Callee	r_file_exists		2526276	0					
ANR	2526311	Identifier	r_file_exists		2526276	0					
ANR	2526312	ArgumentList	path		2526276	1					
ANR	2526313	Argument	path		2526276	0					
ANR	2526314	Identifier	path		2526276	0					
ANR	2526315	CompoundStatement		6:28:105:105	2526276	1					
ANR	2526316	ExpressionStatement	"eprintf ( ""error: file %s does not exist\\n"" , file )"	2117:2:49409:49458	2526276	0	True				
ANR	2526317	CallExpression	"eprintf ( ""error: file %s does not exist\\n"" , file )"		2526276	0					
ANR	2526318	Callee	eprintf		2526276	0					
ANR	2526319	Identifier	eprintf		2526276	0					
ANR	2526320	ArgumentList	"""error: file %s does not exist\\n"""		2526276	1					
ANR	2526321	Argument	"""error: file %s does not exist\\n"""		2526276	0					
ANR	2526322	PrimaryExpression	"""error: file %s does not exist\\n"""		2526276	0					
ANR	2526323	Argument	file		2526276	1					
ANR	2526324	Identifier	file		2526276	0					
ANR	2526325	ExpressionStatement	free ( path )	2118:2:49462:49473	2526276	1	True				
ANR	2526326	CallExpression	free ( path )		2526276	0					
ANR	2526327	Callee	free		2526276	0					
ANR	2526328	Identifier	free		2526276	0					
ANR	2526329	ArgumentList	path		2526276	1					
ANR	2526330	Argument	path		2526276	0					
ANR	2526331	Identifier	path		2526276	0					
ANR	2526332	ReturnStatement	return false ;	2119:2:49477:49489	2526276	2	True				
ANR	2526333	Identifier	false		2526276	0					
ANR	2526334	IdentifierDeclStatement	"Sdb * db = sdb_new ( NULL , path , 0 ) ;"	2121:1:49495:49528	2526276	3	True				
ANR	2526335	IdentifierDecl	"* db = sdb_new ( NULL , path , 0 )"		2526276	0					
ANR	2526336	IdentifierDeclType	Sdb *		2526276	0					
ANR	2526337	Identifier	db		2526276	1					
ANR	2526338	AssignmentExpression	"* db = sdb_new ( NULL , path , 0 )"		2526276	2		=			
ANR	2526339	Identifier	db		2526276	0					
ANR	2526340	CallExpression	"sdb_new ( NULL , path , 0 )"		2526276	1					
ANR	2526341	Callee	sdb_new		2526276	0					
ANR	2526342	Identifier	sdb_new		2526276	0					
ANR	2526343	ArgumentList	NULL		2526276	1					
ANR	2526344	Argument	NULL		2526276	0					
ANR	2526345	Identifier	NULL		2526276	0					
ANR	2526346	Argument	path		2526276	1					
ANR	2526347	Identifier	path		2526276	0					
ANR	2526348	Argument	0		2526276	2					
ANR	2526349	PrimaryExpression	0		2526276	0					
ANR	2526350	IfStatement	if ( ! db )		2526276	4					
ANR	2526351	Condition	! db	2122:5:49535:49537	2526276	0	True				
ANR	2526352	UnaryOperationExpression	! db		2526276	0					
ANR	2526353	UnaryOperator	!		2526276	0					
ANR	2526354	Identifier	db		2526276	1					
ANR	2526355	CompoundStatement		12:10:240:240	2526276	1					
ANR	2526356	ExpressionStatement	free ( path )	2123:2:49544:49555	2526276	0	True				
ANR	2526357	CallExpression	free ( path )		2526276	0					
ANR	2526358	Callee	free		2526276	0					
ANR	2526359	Identifier	free		2526276	0					
ANR	2526360	ArgumentList	path		2526276	1					
ANR	2526361	Argument	path		2526276	0					
ANR	2526362	Identifier	path		2526276	0					
ANR	2526363	ReturnStatement	return false ;	2124:2:49559:49571	2526276	1	True				
ANR	2526364	Identifier	false		2526276	0					
ANR	2526365	ExpressionStatement	"sdb_foreach ( db , loadCB , a )"	2126:1:49577:49604	2526276	5	True				
ANR	2526366	CallExpression	"sdb_foreach ( db , loadCB , a )"		2526276	0					
ANR	2526367	Callee	sdb_foreach		2526276	0					
ANR	2526368	Identifier	sdb_foreach		2526276	0					
ANR	2526369	ArgumentList	db		2526276	1					
ANR	2526370	Argument	db		2526276	0					
ANR	2526371	Identifier	db		2526276	0					
ANR	2526372	Argument	loadCB		2526276	1					
ANR	2526373	Identifier	loadCB		2526276	0					
ANR	2526374	Argument	a		2526276	2					
ANR	2526375	Identifier	a		2526276	0					
ANR	2526376	ExpressionStatement	sdb_close ( db )	2127:1:49607:49621	2526276	6	True				
ANR	2526377	CallExpression	sdb_close ( db )		2526276	0					
ANR	2526378	Callee	sdb_close		2526276	0					
ANR	2526379	Identifier	sdb_close		2526276	0					
ANR	2526380	ArgumentList	db		2526276	1					
ANR	2526381	Argument	db		2526276	0					
ANR	2526382	Identifier	db		2526276	0					
ANR	2526383	ExpressionStatement	sdb_free ( db )	2128:1:49624:49637	2526276	7	True				
ANR	2526384	CallExpression	sdb_free ( db )		2526276	0					
ANR	2526385	Callee	sdb_free		2526276	0					
ANR	2526386	Identifier	sdb_free		2526276	0					
ANR	2526387	ArgumentList	db		2526276	1					
ANR	2526388	Argument	db		2526276	0					
ANR	2526389	Identifier	db		2526276	0					
ANR	2526390	ExpressionStatement	free ( path )	2129:1:49640:49651	2526276	8	True				
ANR	2526391	CallExpression	free ( path )		2526276	0					
ANR	2526392	Callee	free		2526276	0					
ANR	2526393	Identifier	free		2526276	0					
ANR	2526394	ArgumentList	path		2526276	1					
ANR	2526395	Argument	path		2526276	0					
ANR	2526396	Identifier	path		2526276	0					
ANR	2526397	ReturnStatement	return true ;	2130:1:49654:49665	2526276	9	True				
ANR	2526398	Identifier	true		2526276	0					
ANR	2526399	ReturnType	R_API bool		2526276	1					
ANR	2526400	Identifier	r_sign_load		2526276	2					
ANR	2526401	ParameterList	"RAnal * a , const char * file"		2526276	3					
ANR	2526402	Parameter	RAnal * a	2111:23:49271:49278	2526276	0	True				
ANR	2526403	ParameterType	RAnal *		2526276	0					
ANR	2526404	Identifier	a		2526276	1					
ANR	2526405	Parameter	const char * file	2111:33:49281:49296	2526276	1	True				
ANR	2526406	ParameterType	const char *		2526276	0					
ANR	2526407	Identifier	file		2526276	1					
ANR	2526408	CFGEntryNode	ENTRY		2526276		True				
ANR	2526409	CFGExitNode	EXIT		2526276		True				
ANR	2526410	Symbol	loadCB		2526276						
ANR	2526411	Symbol	a		2526276						
ANR	2526412	Symbol	path		2526276						
ANR	2526413	Symbol	sdb_new		2526276						
ANR	2526414	Symbol	file		2526276						
ANR	2526415	Symbol	NULL		2526276						
ANR	2526416	Symbol	false		2526276						
ANR	2526417	Symbol	true		2526276						
ANR	2526418	Symbol	r_sign_path		2526276						
ANR	2526419	Symbol	r_file_exists		2526276						
ANR	2526420	Symbol	db		2526276						
ANR	2526421	Function	r_sign_load_gz	2133:0:49670:50632							
ANR	2526422	FunctionDef	"r_sign_load_gz (RAnal * a , const char * filename)"		2526421	0					
ANR	2526423	CompoundStatement		2133:58:49728:50632	2526421	0					
ANR	2526424	IdentifierDeclStatement	ut8 * buf = NULL ;	2134:1:49731:49746	2526421	0	True				
ANR	2526425	IdentifierDecl	* buf = NULL		2526421	0					
ANR	2526426	IdentifierDeclType	ut8 *		2526421	0					
ANR	2526427	Identifier	buf		2526421	1					
ANR	2526428	AssignmentExpression	* buf = NULL		2526421	2		=			
ANR	2526429	Identifier	NULL		2526421	0					
ANR	2526430	Identifier	NULL		2526421	1					
ANR	2526431	IdentifierDeclStatement	int size = 0 ;	2135:1:49749:49761	2526421	1	True				
ANR	2526432	IdentifierDecl	size = 0		2526421	0					
ANR	2526433	IdentifierDeclType	int		2526421	0					
ANR	2526434	Identifier	size		2526421	1					
ANR	2526435	AssignmentExpression	size = 0		2526421	2		=			
ANR	2526436	Identifier	size		2526421	0					
ANR	2526437	PrimaryExpression	0		2526421	1					
ANR	2526438	IdentifierDeclStatement	char * tmpfile = NULL ;	2136:1:49764:49784	2526421	2	True				
ANR	2526439	IdentifierDecl	* tmpfile = NULL		2526421	0					
ANR	2526440	IdentifierDeclType	char *		2526421	0					
ANR	2526441	Identifier	tmpfile		2526421	1					
ANR	2526442	AssignmentExpression	* tmpfile = NULL		2526421	2		=			
ANR	2526443	Identifier	NULL		2526421	0					
ANR	2526444	Identifier	NULL		2526421	1					
ANR	2526445	IdentifierDeclStatement	bool retval = true ;	2137:1:49787:49805	2526421	3	True				
ANR	2526446	IdentifierDecl	retval = true		2526421	0					
ANR	2526447	IdentifierDeclType	bool		2526421	0					
ANR	2526448	Identifier	retval		2526421	1					
ANR	2526449	AssignmentExpression	retval = true		2526421	2		=			
ANR	2526450	Identifier	true		2526421	0					
ANR	2526451	Identifier	true		2526421	1					
ANR	2526452	IdentifierDeclStatement	"char * path = r_sign_path ( a , filename ) ;"	2139:1:49809:49847	2526421	4	True				
ANR	2526453	IdentifierDecl	"* path = r_sign_path ( a , filename )"		2526421	0					
ANR	2526454	IdentifierDeclType	char *		2526421	0					
ANR	2526455	Identifier	path		2526421	1					
ANR	2526456	AssignmentExpression	"* path = r_sign_path ( a , filename )"		2526421	2		=			
ANR	2526457	Identifier	path		2526421	0					
ANR	2526458	CallExpression	"r_sign_path ( a , filename )"		2526421	1					
ANR	2526459	Callee	r_sign_path		2526421	0					
ANR	2526460	Identifier	r_sign_path		2526421	0					
ANR	2526461	ArgumentList	a		2526421	1					
ANR	2526462	Argument	a		2526421	0					
ANR	2526463	Identifier	a		2526421	0					
ANR	2526464	Argument	filename		2526421	1					
ANR	2526465	Identifier	filename		2526421	0					
ANR	2526466	IfStatement	if ( ! r_file_exists ( path ) )		2526421	5					
ANR	2526467	Condition	! r_file_exists ( path )	2140:5:49854:49874	2526421	0	True				
ANR	2526468	UnaryOperationExpression	! r_file_exists ( path )		2526421	0					
ANR	2526469	UnaryOperator	!		2526421	0					
ANR	2526470	CallExpression	r_file_exists ( path )		2526421	1					
ANR	2526471	Callee	r_file_exists		2526421	0					
ANR	2526472	Identifier	r_file_exists		2526421	0					
ANR	2526473	ArgumentList	path		2526421	1					
ANR	2526474	Argument	path		2526421	0					
ANR	2526475	Identifier	path		2526421	0					
ANR	2526476	CompoundStatement		8:28:148:148	2526421	1					
ANR	2526477	ExpressionStatement	"eprintf ( ""error: file %s does not exist\\n"" , filename )"	2141:2:49881:49934	2526421	0	True				
ANR	2526478	CallExpression	"eprintf ( ""error: file %s does not exist\\n"" , filename )"		2526421	0					
ANR	2526479	Callee	eprintf		2526421	0					
ANR	2526480	Identifier	eprintf		2526421	0					
ANR	2526481	ArgumentList	"""error: file %s does not exist\\n"""		2526421	1					
ANR	2526482	Argument	"""error: file %s does not exist\\n"""		2526421	0					
ANR	2526483	PrimaryExpression	"""error: file %s does not exist\\n"""		2526421	0					
ANR	2526484	Argument	filename		2526421	1					
ANR	2526485	Identifier	filename		2526421	0					
ANR	2526486	ExpressionStatement	retval = false	2142:2:49938:49952	2526421	1	True				
ANR	2526487	AssignmentExpression	retval = false		2526421	0		=			
ANR	2526488	Identifier	retval		2526421	0					
ANR	2526489	Identifier	false		2526421	1					
ANR	2526490	GotoStatement	goto out ;	2143:2:49956:49964	2526421	2	True				
ANR	2526491	Identifier	out		2526421	0					
ANR	2526492	IfStatement	"if ( ! ( buf = r_file_gzslurp ( path , & size , 0 ) ) )"		2526421	6					
ANR	2526493	Condition	"! ( buf = r_file_gzslurp ( path , & size , 0 ) )"	2146:5:49975:50014	2526421	0	True				
ANR	2526494	UnaryOperationExpression	"! ( buf = r_file_gzslurp ( path , & size , 0 ) )"		2526421	0					
ANR	2526495	UnaryOperator	!		2526421	0					
ANR	2526496	AssignmentExpression	"buf = r_file_gzslurp ( path , & size , 0 )"		2526421	1		=			
ANR	2526497	Identifier	buf		2526421	0					
ANR	2526498	CallExpression	"r_file_gzslurp ( path , & size , 0 )"		2526421	1					
ANR	2526499	Callee	r_file_gzslurp		2526421	0					
ANR	2526500	Identifier	r_file_gzslurp		2526421	0					
ANR	2526501	ArgumentList	path		2526421	1					
ANR	2526502	Argument	path		2526421	0					
ANR	2526503	Identifier	path		2526421	0					
ANR	2526504	Argument	& size		2526421	1					
ANR	2526505	UnaryOperationExpression	& size		2526421	0					
ANR	2526506	UnaryOperator	&		2526421	0					
ANR	2526507	Identifier	size		2526421	1					
ANR	2526508	Argument	0		2526421	2					
ANR	2526509	PrimaryExpression	0		2526421	0					
ANR	2526510	CompoundStatement		14:47:288:288	2526421	1					
ANR	2526511	ExpressionStatement	"eprintf ( ""error: cannot decompress file\\n"" )"	2147:2:50021:50064	2526421	0	True				
ANR	2526512	CallExpression	"eprintf ( ""error: cannot decompress file\\n"" )"		2526421	0					
ANR	2526513	Callee	eprintf		2526421	0					
ANR	2526514	Identifier	eprintf		2526421	0					
ANR	2526515	ArgumentList	"""error: cannot decompress file\\n"""		2526421	1					
ANR	2526516	Argument	"""error: cannot decompress file\\n"""		2526421	0					
ANR	2526517	PrimaryExpression	"""error: cannot decompress file\\n"""		2526421	0					
ANR	2526518	ExpressionStatement	retval = false	2148:2:50068:50082	2526421	1	True				
ANR	2526519	AssignmentExpression	retval = false		2526421	0		=			
ANR	2526520	Identifier	retval		2526421	0					
ANR	2526521	Identifier	false		2526421	1					
ANR	2526522	GotoStatement	goto out ;	2149:2:50086:50094	2526421	2	True				
ANR	2526523	Identifier	out		2526421	0					
ANR	2526524	IfStatement	"if ( ! ( tmpfile = r_file_temp ( ""r2zign"" ) ) )"		2526421	7					
ANR	2526525	Condition	"! ( tmpfile = r_file_temp ( ""r2zign"" ) )"	2152:5:50105:50139	2526421	0	True				
ANR	2526526	UnaryOperationExpression	"! ( tmpfile = r_file_temp ( ""r2zign"" ) )"		2526421	0					
ANR	2526527	UnaryOperator	!		2526421	0					
ANR	2526528	AssignmentExpression	"tmpfile = r_file_temp ( ""r2zign"" )"		2526421	1		=			
ANR	2526529	Identifier	tmpfile		2526421	0					
ANR	2526530	CallExpression	"r_file_temp ( ""r2zign"" )"		2526421	1					
ANR	2526531	Callee	r_file_temp		2526421	0					
ANR	2526532	Identifier	r_file_temp		2526421	0					
ANR	2526533	ArgumentList	"""r2zign"""		2526421	1					
ANR	2526534	Argument	"""r2zign"""		2526421	0					
ANR	2526535	PrimaryExpression	"""r2zign"""		2526421	0					
ANR	2526536	CompoundStatement		20:42:413:413	2526421	1					
ANR	2526537	ExpressionStatement	"eprintf ( ""error: cannot create temp file\\n"" )"	2153:2:50146:50190	2526421	0	True				
ANR	2526538	CallExpression	"eprintf ( ""error: cannot create temp file\\n"" )"		2526421	0					
ANR	2526539	Callee	eprintf		2526421	0					
ANR	2526540	Identifier	eprintf		2526421	0					
ANR	2526541	ArgumentList	"""error: cannot create temp file\\n"""		2526421	1					
ANR	2526542	Argument	"""error: cannot create temp file\\n"""		2526421	0					
ANR	2526543	PrimaryExpression	"""error: cannot create temp file\\n"""		2526421	0					
ANR	2526544	ExpressionStatement	retval = false	2154:2:50194:50208	2526421	1	True				
ANR	2526545	AssignmentExpression	retval = false		2526421	0		=			
ANR	2526546	Identifier	retval		2526421	0					
ANR	2526547	Identifier	false		2526421	1					
ANR	2526548	GotoStatement	goto out ;	2155:2:50212:50220	2526421	2	True				
ANR	2526549	Identifier	out		2526421	0					
ANR	2526550	IfStatement	"if ( ! r_file_dump ( tmpfile , buf , size , 0 ) )"		2526421	8					
ANR	2526551	Condition	"! r_file_dump ( tmpfile , buf , size , 0 )"	2158:5:50231:50266	2526421	0	True				
ANR	2526552	UnaryOperationExpression	"! r_file_dump ( tmpfile , buf , size , 0 )"		2526421	0					
ANR	2526553	UnaryOperator	!		2526421	0					
ANR	2526554	CallExpression	"r_file_dump ( tmpfile , buf , size , 0 )"		2526421	1					
ANR	2526555	Callee	r_file_dump		2526421	0					
ANR	2526556	Identifier	r_file_dump		2526421	0					
ANR	2526557	ArgumentList	tmpfile		2526421	1					
ANR	2526558	Argument	tmpfile		2526421	0					
ANR	2526559	Identifier	tmpfile		2526421	0					
ANR	2526560	Argument	buf		2526421	1					
ANR	2526561	Identifier	buf		2526421	0					
ANR	2526562	Argument	size		2526421	2					
ANR	2526563	Identifier	size		2526421	0					
ANR	2526564	Argument	0		2526421	3					
ANR	2526565	PrimaryExpression	0		2526421	0					
ANR	2526566	CompoundStatement		26:43:540:540	2526421	1					
ANR	2526567	ExpressionStatement	"eprintf ( ""error: cannot dump file\\n"" )"	2159:2:50273:50310	2526421	0	True				
ANR	2526568	CallExpression	"eprintf ( ""error: cannot dump file\\n"" )"		2526421	0					
ANR	2526569	Callee	eprintf		2526421	0					
ANR	2526570	Identifier	eprintf		2526421	0					
ANR	2526571	ArgumentList	"""error: cannot dump file\\n"""		2526421	1					
ANR	2526572	Argument	"""error: cannot dump file\\n"""		2526421	0					
ANR	2526573	PrimaryExpression	"""error: cannot dump file\\n"""		2526421	0					
ANR	2526574	ExpressionStatement	retval = false	2160:2:50314:50328	2526421	1	True				
ANR	2526575	AssignmentExpression	retval = false		2526421	0		=			
ANR	2526576	Identifier	retval		2526421	0					
ANR	2526577	Identifier	false		2526421	1					
ANR	2526578	GotoStatement	goto out ;	2161:2:50332:50340	2526421	2	True				
ANR	2526579	Identifier	out		2526421	0					
ANR	2526580	IfStatement	"if ( ! r_sign_load ( a , tmpfile ) )"		2526421	9					
ANR	2526581	Condition	"! r_sign_load ( a , tmpfile )"	2164:5:50351:50375	2526421	0	True				
ANR	2526582	UnaryOperationExpression	"! r_sign_load ( a , tmpfile )"		2526421	0					
ANR	2526583	UnaryOperator	!		2526421	0					
ANR	2526584	CallExpression	"r_sign_load ( a , tmpfile )"		2526421	1					
ANR	2526585	Callee	r_sign_load		2526421	0					
ANR	2526586	Identifier	r_sign_load		2526421	0					
ANR	2526587	ArgumentList	a		2526421	1					
ANR	2526588	Argument	a		2526421	0					
ANR	2526589	Identifier	a		2526421	0					
ANR	2526590	Argument	tmpfile		2526421	1					
ANR	2526591	Identifier	tmpfile		2526421	0					
ANR	2526592	CompoundStatement		32:32:649:649	2526421	1					
ANR	2526593	ExpressionStatement	"eprintf ( ""error: cannot load file\\n"" )"	2165:2:50382:50419	2526421	0	True				
ANR	2526594	CallExpression	"eprintf ( ""error: cannot load file\\n"" )"		2526421	0					
ANR	2526595	Callee	eprintf		2526421	0					
ANR	2526596	Identifier	eprintf		2526421	0					
ANR	2526597	ArgumentList	"""error: cannot load file\\n"""		2526421	1					
ANR	2526598	Argument	"""error: cannot load file\\n"""		2526421	0					
ANR	2526599	PrimaryExpression	"""error: cannot load file\\n"""		2526421	0					
ANR	2526600	ExpressionStatement	retval = false	2166:2:50423:50437	2526421	1	True				
ANR	2526601	AssignmentExpression	retval = false		2526421	0		=			
ANR	2526602	Identifier	retval		2526421	0					
ANR	2526603	Identifier	false		2526421	1					
ANR	2526604	GotoStatement	goto out ;	2167:2:50441:50449	2526421	2	True				
ANR	2526605	Identifier	out		2526421	0					
ANR	2526606	IfStatement	if ( ! r_file_rm ( tmpfile ) )		2526421	10					
ANR	2526607	Condition	! r_file_rm ( tmpfile )	2170:5:50460:50479	2526421	0	True				
ANR	2526608	UnaryOperationExpression	! r_file_rm ( tmpfile )		2526421	0					
ANR	2526609	UnaryOperator	!		2526421	0					
ANR	2526610	CallExpression	r_file_rm ( tmpfile )		2526421	1					
ANR	2526611	Callee	r_file_rm		2526421	0					
ANR	2526612	Identifier	r_file_rm		2526421	0					
ANR	2526613	ArgumentList	tmpfile		2526421	1					
ANR	2526614	Argument	tmpfile		2526421	0					
ANR	2526615	Identifier	tmpfile		2526421	0					
ANR	2526616	CompoundStatement		38:27:753:753	2526421	1					
ANR	2526617	ExpressionStatement	"eprintf ( ""error: cannot delete temp file\\n"" )"	2171:2:50486:50530	2526421	0	True				
ANR	2526618	CallExpression	"eprintf ( ""error: cannot delete temp file\\n"" )"		2526421	0					
ANR	2526619	Callee	eprintf		2526421	0					
ANR	2526620	Identifier	eprintf		2526421	0					
ANR	2526621	ArgumentList	"""error: cannot delete temp file\\n"""		2526421	1					
ANR	2526622	Argument	"""error: cannot delete temp file\\n"""		2526421	0					
ANR	2526623	PrimaryExpression	"""error: cannot delete temp file\\n"""		2526421	0					
ANR	2526624	ExpressionStatement	retval = false	2172:2:50534:50548	2526421	1	True				
ANR	2526625	AssignmentExpression	retval = false		2526421	0		=			
ANR	2526626	Identifier	retval		2526421	0					
ANR	2526627	Identifier	false		2526421	1					
ANR	2526628	GotoStatement	goto out ;	2173:2:50552:50560	2526421	2	True				
ANR	2526629	Identifier	out		2526421	0					
ANR	2526630	Label	out :	2176:0:50566:50569	2526421	11	True				
ANR	2526631	Identifier	out		2526421	0					
ANR	2526632	ExpressionStatement	free ( buf )	2177:1:50572:50582	2526421	12	True				
ANR	2526633	CallExpression	free ( buf )		2526421	0					
ANR	2526634	Callee	free		2526421	0					
ANR	2526635	Identifier	free		2526421	0					
ANR	2526636	ArgumentList	buf		2526421	1					
ANR	2526637	Argument	buf		2526421	0					
ANR	2526638	Identifier	buf		2526421	0					
ANR	2526639	ExpressionStatement	free ( tmpfile )	2178:1:50585:50599	2526421	13	True				
ANR	2526640	CallExpression	free ( tmpfile )		2526421	0					
ANR	2526641	Callee	free		2526421	0					
ANR	2526642	Identifier	free		2526421	0					
ANR	2526643	ArgumentList	tmpfile		2526421	1					
ANR	2526644	Argument	tmpfile		2526421	0					
ANR	2526645	Identifier	tmpfile		2526421	0					
ANR	2526646	ExpressionStatement	free ( path )	2179:1:50602:50613	2526421	14	True				
ANR	2526647	CallExpression	free ( path )		2526421	0					
ANR	2526648	Callee	free		2526421	0					
ANR	2526649	Identifier	free		2526421	0					
ANR	2526650	ArgumentList	path		2526421	1					
ANR	2526651	Argument	path		2526421	0					
ANR	2526652	Identifier	path		2526421	0					
ANR	2526653	ReturnStatement	return retval ;	2181:1:50617:50630	2526421	15	True				
ANR	2526654	Identifier	retval		2526421	0					
ANR	2526655	ReturnType	R_API bool		2526421	1					
ANR	2526656	Identifier	r_sign_load_gz		2526421	2					
ANR	2526657	ParameterList	"RAnal * a , const char * filename"		2526421	3					
ANR	2526658	Parameter	RAnal * a	2133:26:49696:49703	2526421	0	True				
ANR	2526659	ParameterType	RAnal *		2526421	0					
ANR	2526660	Identifier	a		2526421	1					
ANR	2526661	Parameter	const char * filename	2133:36:49706:49725	2526421	1	True				
ANR	2526662	ParameterType	const char *		2526421	0					
ANR	2526663	Identifier	filename		2526421	1					
ANR	2526664	CFGEntryNode	ENTRY		2526421		True				
ANR	2526665	CFGExitNode	EXIT		2526421		True				
ANR	2526666	Symbol	a		2526421						
ANR	2526667	Symbol	NULL		2526421						
ANR	2526668	Symbol	r_file_rm		2526421						
ANR	2526669	Symbol	false		2526421						
ANR	2526670	Symbol	r_file_temp		2526421						
ANR	2526671	Symbol	& size		2526421						
ANR	2526672	Symbol	r_sign_path		2526421						
ANR	2526673	Symbol	r_file_gzslurp		2526421						
ANR	2526674	Symbol	r_sign_load		2526421						
ANR	2526675	Symbol	retval		2526421						
ANR	2526676	Symbol	path		2526421						
ANR	2526677	Symbol	buf		2526421						
ANR	2526678	Symbol	filename		2526421						
ANR	2526679	Symbol	size		2526421						
ANR	2526680	Symbol	r_file_dump		2526421						
ANR	2526681	Symbol	true		2526421						
ANR	2526682	Symbol	r_file_exists		2526421						
ANR	2526683	Symbol	tmpfile		2526421						
ANR	2526684	Function	r_sign_save	2184:0:50635:51012							
ANR	2526685	FunctionDef	"r_sign_save (RAnal * a , const char * file)"		2526684	0					
ANR	2526686	CompoundStatement		2184:51:50686:51012	2526684	0					
ANR	2526687	ExpressionStatement	"r_return_val_if_fail ( a && file , false )"	2185:1:50689:50728	2526684	0	True				
ANR	2526688	CallExpression	"r_return_val_if_fail ( a && file , false )"		2526684	0					
ANR	2526689	Callee	r_return_val_if_fail		2526684	0					
ANR	2526690	Identifier	r_return_val_if_fail		2526684	0					
ANR	2526691	ArgumentList	a && file		2526684	1					
ANR	2526692	Argument	a && file		2526684	0					
ANR	2526693	AndExpression	a && file		2526684	0		&&			
ANR	2526694	Identifier	a		2526684	0					
ANR	2526695	Identifier	file		2526684	1					
ANR	2526696	Argument	false		2526684	1					
ANR	2526697	Identifier	false		2526684	0					
ANR	2526698	IfStatement	if ( sdb_isempty ( a -> sdb_zigns ) )		2526684	1					
ANR	2526699	Condition	sdb_isempty ( a -> sdb_zigns )	2187:5:50736:50761	2526684	0	True				
ANR	2526700	CallExpression	sdb_isempty ( a -> sdb_zigns )		2526684	0					
ANR	2526701	Callee	sdb_isempty		2526684	0					
ANR	2526702	Identifier	sdb_isempty		2526684	0					
ANR	2526703	ArgumentList	a -> sdb_zigns		2526684	1					
ANR	2526704	Argument	a -> sdb_zigns		2526684	0					
ANR	2526705	PtrMemberAccess	a -> sdb_zigns		2526684	0					
ANR	2526706	Identifier	a		2526684	0					
ANR	2526707	Identifier	sdb_zigns		2526684	1					
ANR	2526708	CompoundStatement		4:33:77:77	2526684	1					
ANR	2526709	ExpressionStatement	"eprintf ( ""WARNING: no zignatures to save\\n"" )"	2188:2:50768:50812	2526684	0	True				
ANR	2526710	CallExpression	"eprintf ( ""WARNING: no zignatures to save\\n"" )"		2526684	0					
ANR	2526711	Callee	eprintf		2526684	0					
ANR	2526712	Identifier	eprintf		2526684	0					
ANR	2526713	ArgumentList	"""WARNING: no zignatures to save\\n"""		2526684	1					
ANR	2526714	Argument	"""WARNING: no zignatures to save\\n"""		2526684	0					
ANR	2526715	PrimaryExpression	"""WARNING: no zignatures to save\\n"""		2526684	0					
ANR	2526716	ReturnStatement	return false ;	2189:2:50816:50828	2526684	1	True				
ANR	2526717	Identifier	false		2526684	0					
ANR	2526718	IdentifierDeclStatement	"Sdb * db = sdb_new ( NULL , file , 0 ) ;"	2192:1:50835:50868	2526684	2	True				
ANR	2526719	IdentifierDecl	"* db = sdb_new ( NULL , file , 0 )"		2526684	0					
ANR	2526720	IdentifierDeclType	Sdb *		2526684	0					
ANR	2526721	Identifier	db		2526684	1					
ANR	2526722	AssignmentExpression	"* db = sdb_new ( NULL , file , 0 )"		2526684	2		=			
ANR	2526723	Identifier	db		2526684	0					
ANR	2526724	CallExpression	"sdb_new ( NULL , file , 0 )"		2526684	1					
ANR	2526725	Callee	sdb_new		2526684	0					
ANR	2526726	Identifier	sdb_new		2526684	0					
ANR	2526727	ArgumentList	NULL		2526684	1					
ANR	2526728	Argument	NULL		2526684	0					
ANR	2526729	Identifier	NULL		2526684	0					
ANR	2526730	Argument	file		2526684	1					
ANR	2526731	Identifier	file		2526684	0					
ANR	2526732	Argument	0		2526684	2					
ANR	2526733	PrimaryExpression	0		2526684	0					
ANR	2526734	IfStatement	if ( ! db )		2526684	3					
ANR	2526735	Condition	! db	2193:5:50875:50877	2526684	0	True				
ANR	2526736	UnaryOperationExpression	! db		2526684	0					
ANR	2526737	UnaryOperator	!		2526684	0					
ANR	2526738	Identifier	db		2526684	1					
ANR	2526739	CompoundStatement		10:10:193:193	2526684	1					
ANR	2526740	ReturnStatement	return false ;	2194:2:50884:50896	2526684	0	True				
ANR	2526741	Identifier	false		2526684	0					
ANR	2526742	ExpressionStatement	"sdb_merge ( db , a -> sdb_zigns )"	2196:1:50902:50930	2526684	4	True				
ANR	2526743	CallExpression	"sdb_merge ( db , a -> sdb_zigns )"		2526684	0					
ANR	2526744	Callee	sdb_merge		2526684	0					
ANR	2526745	Identifier	sdb_merge		2526684	0					
ANR	2526746	ArgumentList	db		2526684	1					
ANR	2526747	Argument	db		2526684	0					
ANR	2526748	Identifier	db		2526684	0					
ANR	2526749	Argument	a -> sdb_zigns		2526684	1					
ANR	2526750	PtrMemberAccess	a -> sdb_zigns		2526684	0					
ANR	2526751	Identifier	a		2526684	0					
ANR	2526752	Identifier	sdb_zigns		2526684	1					
ANR	2526753	IdentifierDeclStatement	bool retval = sdb_sync ( db ) ;	2197:1:50933:50960	2526684	5	True				
ANR	2526754	IdentifierDecl	retval = sdb_sync ( db )		2526684	0					
ANR	2526755	IdentifierDeclType	bool		2526684	0					
ANR	2526756	Identifier	retval		2526684	1					
ANR	2526757	AssignmentExpression	retval = sdb_sync ( db )		2526684	2		=			
ANR	2526758	Identifier	retval		2526684	0					
ANR	2526759	CallExpression	sdb_sync ( db )		2526684	1					
ANR	2526760	Callee	sdb_sync		2526684	0					
ANR	2526761	Identifier	sdb_sync		2526684	0					
ANR	2526762	ArgumentList	db		2526684	1					
ANR	2526763	Argument	db		2526684	0					
ANR	2526764	Identifier	db		2526684	0					
ANR	2526765	ExpressionStatement	sdb_close ( db )	2198:1:50963:50977	2526684	6	True				
ANR	2526766	CallExpression	sdb_close ( db )		2526684	0					
ANR	2526767	Callee	sdb_close		2526684	0					
ANR	2526768	Identifier	sdb_close		2526684	0					
ANR	2526769	ArgumentList	db		2526684	1					
ANR	2526770	Argument	db		2526684	0					
ANR	2526771	Identifier	db		2526684	0					
ANR	2526772	ExpressionStatement	sdb_free ( db )	2199:1:50980:50993	2526684	7	True				
ANR	2526773	CallExpression	sdb_free ( db )		2526684	0					
ANR	2526774	Callee	sdb_free		2526684	0					
ANR	2526775	Identifier	sdb_free		2526684	0					
ANR	2526776	ArgumentList	db		2526684	1					
ANR	2526777	Argument	db		2526684	0					
ANR	2526778	Identifier	db		2526684	0					
ANR	2526779	ReturnStatement	return retval ;	2201:1:50997:51010	2526684	8	True				
ANR	2526780	Identifier	retval		2526684	0					
ANR	2526781	ReturnType	R_API bool		2526684	1					
ANR	2526782	Identifier	r_sign_save		2526684	2					
ANR	2526783	ParameterList	"RAnal * a , const char * file"		2526684	3					
ANR	2526784	Parameter	RAnal * a	2184:23:50658:50665	2526684	0	True				
ANR	2526785	ParameterType	RAnal *		2526684	0					
ANR	2526786	Identifier	a		2526684	1					
ANR	2526787	Parameter	const char * file	2184:33:50668:50683	2526684	1	True				
ANR	2526788	ParameterType	const char *		2526684	0					
ANR	2526789	Identifier	file		2526684	1					
ANR	2526790	CFGEntryNode	ENTRY		2526684		True				
ANR	2526791	CFGExitNode	EXIT		2526684		True				
ANR	2526792	Symbol	a		2526684						
ANR	2526793	Symbol	sdb_new		2526684						
ANR	2526794	Symbol	file		2526684						
ANR	2526795	Symbol	NULL		2526684						
ANR	2526796	Symbol	false		2526684						
ANR	2526797	Symbol	sdb_isempty		2526684						
ANR	2526798	Symbol	* a		2526684						
ANR	2526799	Symbol	sdb_sync		2526684						
ANR	2526800	Symbol	db		2526684						
ANR	2526801	Symbol	retval		2526684						
ANR	2526802	Symbol	a -> sdb_zigns		2526684						
ANR	2526803	Function	r_sign_options_new	2204:0:51015:51693							
ANR	2526804	FunctionDef	"r_sign_options_new (const char * bytes_thresh , const char * graph_thresh)"		2526803	0					
ANR	2526805	CompoundStatement		2204:91:51106:51693	2526803	0					
ANR	2526806	IdentifierDeclStatement	RSignOptions * options = R_NEW0 ( RSignOptions ) ;	2205:1:51109:51154	2526803	0	True				
ANR	2526807	IdentifierDecl	* options = R_NEW0 ( RSignOptions )		2526803	0					
ANR	2526808	IdentifierDeclType	RSignOptions *		2526803	0					
ANR	2526809	Identifier	options		2526803	1					
ANR	2526810	AssignmentExpression	* options = R_NEW0 ( RSignOptions )		2526803	2		=			
ANR	2526811	Identifier	options		2526803	0					
ANR	2526812	CallExpression	R_NEW0 ( RSignOptions )		2526803	1					
ANR	2526813	Callee	R_NEW0		2526803	0					
ANR	2526814	Identifier	R_NEW0		2526803	0					
ANR	2526815	ArgumentList	RSignOptions		2526803	1					
ANR	2526816	Argument	RSignOptions		2526803	0					
ANR	2526817	Identifier	RSignOptions		2526803	0					
ANR	2526818	IfStatement	if ( ! options )		2526803	1					
ANR	2526819	Condition	! options	2206:5:51161:51168	2526803	0	True				
ANR	2526820	UnaryOperationExpression	! options		2526803	0					
ANR	2526821	UnaryOperator	!		2526803	0					
ANR	2526822	Identifier	options		2526803	1					
ANR	2526823	CompoundStatement		3:15:64:64	2526803	1					
ANR	2526824	ReturnStatement	return NULL ;	2207:2:51175:51186	2526803	0	True				
ANR	2526825	Identifier	NULL		2526803	0					
ANR	2526826	ExpressionStatement	"options -> bytes_diff_threshold = r_num_get_float ( NULL , bytes_thresh )"	2210:1:51193:51261	2526803	2	True				
ANR	2526827	AssignmentExpression	"options -> bytes_diff_threshold = r_num_get_float ( NULL , bytes_thresh )"		2526803	0		=			
ANR	2526828	PtrMemberAccess	options -> bytes_diff_threshold		2526803	0					
ANR	2526829	Identifier	options		2526803	0					
ANR	2526830	Identifier	bytes_diff_threshold		2526803	1					
ANR	2526831	CallExpression	"r_num_get_float ( NULL , bytes_thresh )"		2526803	1					
ANR	2526832	Callee	r_num_get_float		2526803	0					
ANR	2526833	Identifier	r_num_get_float		2526803	0					
ANR	2526834	ArgumentList	NULL		2526803	1					
ANR	2526835	Argument	NULL		2526803	0					
ANR	2526836	Identifier	NULL		2526803	0					
ANR	2526837	Argument	bytes_thresh		2526803	1					
ANR	2526838	Identifier	bytes_thresh		2526803	0					
ANR	2526839	ExpressionStatement	"options -> graph_diff_threshold = r_num_get_float ( NULL , graph_thresh )"	2211:1:51264:51332	2526803	3	True				
ANR	2526840	AssignmentExpression	"options -> graph_diff_threshold = r_num_get_float ( NULL , graph_thresh )"		2526803	0		=			
ANR	2526841	PtrMemberAccess	options -> graph_diff_threshold		2526803	0					
ANR	2526842	Identifier	options		2526803	0					
ANR	2526843	Identifier	graph_diff_threshold		2526803	1					
ANR	2526844	CallExpression	"r_num_get_float ( NULL , graph_thresh )"		2526803	1					
ANR	2526845	Callee	r_num_get_float		2526803	0					
ANR	2526846	Identifier	r_num_get_float		2526803	0					
ANR	2526847	ArgumentList	NULL		2526803	1					
ANR	2526848	Argument	NULL		2526803	0					
ANR	2526849	Identifier	NULL		2526803	0					
ANR	2526850	Argument	graph_thresh		2526803	1					
ANR	2526851	Identifier	graph_thresh		2526803	0					
ANR	2526852	IfStatement	if ( options -> bytes_diff_threshold > 1.0 )		2526803	4					
ANR	2526853	Condition	options -> bytes_diff_threshold > 1.0	2213:5:51340:51374	2526803	0	True				
ANR	2526854	RelationalExpression	options -> bytes_diff_threshold > 1.0		2526803	0		>			
ANR	2526855	PtrMemberAccess	options -> bytes_diff_threshold		2526803	0					
ANR	2526856	Identifier	options		2526803	0					
ANR	2526857	Identifier	bytes_diff_threshold		2526803	1					
ANR	2526858	PrimaryExpression	1.0		2526803	1					
ANR	2526859	CompoundStatement		10:42:270:270	2526803	1					
ANR	2526860	ExpressionStatement	options -> bytes_diff_threshold = 1.0	2214:2:51381:51416	2526803	0	True				
ANR	2526861	AssignmentExpression	options -> bytes_diff_threshold = 1.0		2526803	0		=			
ANR	2526862	PtrMemberAccess	options -> bytes_diff_threshold		2526803	0					
ANR	2526863	Identifier	options		2526803	0					
ANR	2526864	Identifier	bytes_diff_threshold		2526803	1					
ANR	2526865	PrimaryExpression	1.0		2526803	1					
ANR	2526866	IfStatement	if ( options -> bytes_diff_threshold < 0 )		2526803	5					
ANR	2526867	Condition	options -> bytes_diff_threshold < 0	2216:5:51426:51458	2526803	0	True				
ANR	2526868	RelationalExpression	options -> bytes_diff_threshold < 0		2526803	0		<			
ANR	2526869	PtrMemberAccess	options -> bytes_diff_threshold		2526803	0					
ANR	2526870	Identifier	options		2526803	0					
ANR	2526871	Identifier	bytes_diff_threshold		2526803	1					
ANR	2526872	PrimaryExpression	0		2526803	1					
ANR	2526873	CompoundStatement		13:40:354:354	2526803	1					
ANR	2526874	ExpressionStatement	options -> bytes_diff_threshold = 0.0	2217:2:51465:51500	2526803	0	True				
ANR	2526875	AssignmentExpression	options -> bytes_diff_threshold = 0.0		2526803	0		=			
ANR	2526876	PtrMemberAccess	options -> bytes_diff_threshold		2526803	0					
ANR	2526877	Identifier	options		2526803	0					
ANR	2526878	Identifier	bytes_diff_threshold		2526803	1					
ANR	2526879	PrimaryExpression	0.0		2526803	1					
ANR	2526880	IfStatement	if ( options -> graph_diff_threshold > 1.0 )		2526803	6					
ANR	2526881	Condition	options -> graph_diff_threshold > 1.0	2219:5:51510:51544	2526803	0	True				
ANR	2526882	RelationalExpression	options -> graph_diff_threshold > 1.0		2526803	0		>			
ANR	2526883	PtrMemberAccess	options -> graph_diff_threshold		2526803	0					
ANR	2526884	Identifier	options		2526803	0					
ANR	2526885	Identifier	graph_diff_threshold		2526803	1					
ANR	2526886	PrimaryExpression	1.0		2526803	1					
ANR	2526887	CompoundStatement		16:42:440:440	2526803	1					
ANR	2526888	ExpressionStatement	options -> graph_diff_threshold = 1.0	2220:2:51551:51586	2526803	0	True				
ANR	2526889	AssignmentExpression	options -> graph_diff_threshold = 1.0		2526803	0		=			
ANR	2526890	PtrMemberAccess	options -> graph_diff_threshold		2526803	0					
ANR	2526891	Identifier	options		2526803	0					
ANR	2526892	Identifier	graph_diff_threshold		2526803	1					
ANR	2526893	PrimaryExpression	1.0		2526803	1					
ANR	2526894	IfStatement	if ( options -> graph_diff_threshold < 0 )		2526803	7					
ANR	2526895	Condition	options -> graph_diff_threshold < 0	2222:5:51596:51628	2526803	0	True				
ANR	2526896	RelationalExpression	options -> graph_diff_threshold < 0		2526803	0		<			
ANR	2526897	PtrMemberAccess	options -> graph_diff_threshold		2526803	0					
ANR	2526898	Identifier	options		2526803	0					
ANR	2526899	Identifier	graph_diff_threshold		2526803	1					
ANR	2526900	PrimaryExpression	0		2526803	1					
ANR	2526901	CompoundStatement		19:40:524:524	2526803	1					
ANR	2526902	ExpressionStatement	options -> graph_diff_threshold = 0.0	2223:2:51635:51670	2526803	0	True				
ANR	2526903	AssignmentExpression	options -> graph_diff_threshold = 0.0		2526803	0		=			
ANR	2526904	PtrMemberAccess	options -> graph_diff_threshold		2526803	0					
ANR	2526905	Identifier	options		2526803	0					
ANR	2526906	Identifier	graph_diff_threshold		2526803	1					
ANR	2526907	PrimaryExpression	0.0		2526803	1					
ANR	2526908	ReturnStatement	return options ;	2226:1:51677:51691	2526803	8	True				
ANR	2526909	Identifier	options		2526803	0					
ANR	2526910	ReturnType	R_API RSignOptions *		2526803	1					
ANR	2526911	Identifier	r_sign_options_new		2526803	2					
ANR	2526912	ParameterList	"const char * bytes_thresh , const char * graph_thresh"		2526803	3					
ANR	2526913	Parameter	const char * bytes_thresh	2204:39:51054:51077	2526803	0	True				
ANR	2526914	ParameterType	const char *		2526803	0					
ANR	2526915	Identifier	bytes_thresh		2526803	1					
ANR	2526916	Parameter	const char * graph_thresh	2204:65:51080:51103	2526803	1	True				
ANR	2526917	ParameterType	const char *		2526803	0					
ANR	2526918	Identifier	graph_thresh		2526803	1					
ANR	2526919	CFGEntryNode	ENTRY		2526803		True				
ANR	2526920	CFGExitNode	EXIT		2526803		True				
ANR	2526921	Symbol	R_NEW0		2526803						
ANR	2526922	Symbol	options -> graph_diff_threshold		2526803						
ANR	2526923	Symbol	NULL		2526803						
ANR	2526924	Symbol	options		2526803						
ANR	2526925	Symbol	bytes_thresh		2526803						
ANR	2526926	Symbol	RSignOptions		2526803						
ANR	2526927	Symbol	options -> bytes_diff_threshold		2526803						
ANR	2526928	Symbol	graph_thresh		2526803						
ANR	2526929	Symbol	r_num_get_float		2526803						
ANR	2526930	Symbol	* options		2526803						
ANR	2526931	Function	r_sign_options_free	2229:0:51696:51771							
ANR	2526932	FunctionDef	r_sign_options_free (RSignOptions * options)		2526931	0					
ANR	2526933	CompoundStatement		2229:54:51750:51771	2526931	0					
ANR	2526934	ExpressionStatement	R_FREE ( options )	2230:1:51753:51769	2526931	0	True				
ANR	2526935	CallExpression	R_FREE ( options )		2526931	0					
ANR	2526936	Callee	R_FREE		2526931	0					
ANR	2526937	Identifier	R_FREE		2526931	0					
ANR	2526938	ArgumentList	options		2526931	1					
ANR	2526939	Argument	options		2526931	0					
ANR	2526940	Identifier	options		2526931	0					
ANR	2526941	ReturnType	R_API void		2526931	1					
ANR	2526942	Identifier	r_sign_options_free		2526931	2					
ANR	2526943	ParameterList	RSignOptions * options		2526931	3					
ANR	2526944	Parameter	RSignOptions * options	2229:31:51727:51747	2526931	0	True				
ANR	2526945	ParameterType	RSignOptions *		2526931	0					
ANR	2526946	Identifier	options		2526931	1					
ANR	2526947	CFGEntryNode	ENTRY		2526931		True				
ANR	2526948	CFGExitNode	EXIT		2526931		True				
ANR	2526949	Symbol	options		2526931						
