command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6359721	File	data/converged/CVE-2019-16718~_radare2/tricore-dis.c								
ANR	6359722	DeclStmt									
ANR	6359723	Decl							struct tricore_opcode	struct tricore_opcode	opcode_t
ANR	6359724	DeclStmt									
ANR	6359725	Decl							struct pcp_opcode	struct pcp_opcode	pcp_opcode_t
ANR	6359726	DeclStmt									
ANR	6359727	Decl							const struct tricore_core_register	const struct tricore_core_register	sfr_t
ANR	6359728	ClassDef	insnlist	60:0:1822:1883							
ANR	6359729	DeclStmt									
ANR	6359730	Decl							opcode_t	opcode_t *	code
ANR	6359731	DeclStmt									
ANR	6359732	Decl							struct insnlist	struct insnlist *	next
ANR	6359733	DeclStmt									
ANR	6359734	Decl							struct insnlist	struct insnlist * [ 64 ]	insns
ANR	6359735	DeclStmt									
ANR	6359736	Decl							struct insnlist	struct insnlist *	insnlink
ANR	6359737	ClassDef	pcplist	74:0:2182:2245							
ANR	6359738	DeclStmt									
ANR	6359739	Decl							pcp_opcode_t	pcp_opcode_t *	code
ANR	6359740	DeclStmt									
ANR	6359741	Decl							struct pcplist	struct pcplist *	next
ANR	6359742	DeclStmt									
ANR	6359743	Decl							struct pcplist	struct pcplist * [ 32 ]	pcpinsns
ANR	6359744	DeclStmt									
ANR	6359745	Decl							struct pcplist	struct pcplist *	pcplink
ANR	6359746	ClassDef	sfrlist	85:0:2363:2418							
ANR	6359747	DeclStmt									
ANR	6359748	Decl							sfr_t	sfr_t *	sfr
ANR	6359749	DeclStmt									
ANR	6359750	Decl							struct sfrlist	struct sfrlist *	next
ANR	6359751	DeclStmt									
ANR	6359752	Decl							struct sfrlist	struct sfrlist * [ 256 ]	sfrs
ANR	6359753	DeclStmt									
ANR	6359754	Decl							struct sfrlist	struct sfrlist *	sfrlink
ANR	6359755	DeclStmt									
ANR	6359756	Decl							int	int	initialized
ANR	6359757	DeclStmt									
ANR	6359758	Decl							tricore_isa	tricore_isa	current_isa
ANR	6359759	ClassDef	decoded_insn	105:0:2820:2936							
ANR	6359760	DeclStmt									
ANR	6359761	Decl							opcode_t	opcode_t *	code
ANR	6359762	DeclStmt									
ANR	6359763	Decl							unsigned long	unsigned long	opcode
ANR	6359764	DeclStmt									
ANR	6359765	Decl							int	int [ MAX_OPS ]	regs
ANR	6359766	DeclStmt									
ANR	6359767	Decl							unsigned long	unsigned long [ MAX_OPS ]	cexp
ANR	6359768	DeclStmt									
ANR	6359769	Decl							struct decoded_insn	struct decoded_insn	dec_insn
ANR	6359770	Function	extract_off18	190:0:5943:6214							
ANR	6359771	FunctionDef	extract_off18 ()		6359770	0					
ANR	6359772	CompoundStatement		192:0:5981:6214	6359770	0					
ANR	6359773	IdentifierDeclStatement	"unsigned long o1 , o2 , o3 , o4 ;"	193:2:5985:6013	6359770	0	True				
ANR	6359774	IdentifierDecl	o1		6359770	0					
ANR	6359775	IdentifierDeclType	unsigned long		6359770	0					
ANR	6359776	Identifier	o1		6359770	1					
ANR	6359777	IdentifierDecl	o2		6359770	1					
ANR	6359778	IdentifierDeclType	unsigned long		6359770	0					
ANR	6359779	Identifier	o2		6359770	1					
ANR	6359780	IdentifierDecl	o3		6359770	2					
ANR	6359781	IdentifierDeclType	unsigned long		6359770	0					
ANR	6359782	Identifier	o3		6359770	1					
ANR	6359783	IdentifierDecl	o4		6359770	3					
ANR	6359784	IdentifierDeclType	unsigned long		6359770	0					
ANR	6359785	Identifier	o4		6359770	1					
ANR	6359786	IdentifierDeclStatement	unsigned long val = dec_insn . opcode ;	194:2:6017:6052	6359770	1	True				
ANR	6359787	IdentifierDecl	val = dec_insn . opcode		6359770	0					
ANR	6359788	IdentifierDeclType	unsigned long		6359770	0					
ANR	6359789	Identifier	val		6359770	1					
ANR	6359790	AssignmentExpression	val = dec_insn . opcode		6359770	2		=			
ANR	6359791	Identifier	val		6359770	0					
ANR	6359792	MemberAccess	dec_insn . opcode		6359770	1					
ANR	6359793	Identifier	dec_insn		6359770	0					
ANR	6359794	Identifier	opcode		6359770	1					
ANR	6359795	ExpressionStatement	o1 = ( val & 0x003f0000 ) >> 16	196:2:6057:6086	6359770	2	True				
ANR	6359796	AssignmentExpression	o1 = ( val & 0x003f0000 ) >> 16		6359770	0		=			
ANR	6359797	Identifier	o1		6359770	0					
ANR	6359798	ShiftExpression	( val & 0x003f0000 ) >> 16		6359770	1		>>			
ANR	6359799	BitAndExpression	val & 0x003f0000		6359770	0		&			
ANR	6359800	Identifier	val		6359770	0					
ANR	6359801	PrimaryExpression	0x003f0000		6359770	1					
ANR	6359802	PrimaryExpression	16		6359770	1					
ANR	6359803	ExpressionStatement	o2 = ( val & 0xf0000000 ) >> 22	197:2:6090:6119	6359770	3	True				
ANR	6359804	AssignmentExpression	o2 = ( val & 0xf0000000 ) >> 22		6359770	0		=			
ANR	6359805	Identifier	o2		6359770	0					
ANR	6359806	ShiftExpression	( val & 0xf0000000 ) >> 22		6359770	1		>>			
ANR	6359807	BitAndExpression	val & 0xf0000000		6359770	0		&			
ANR	6359808	Identifier	val		6359770	0					
ANR	6359809	PrimaryExpression	0xf0000000		6359770	1					
ANR	6359810	PrimaryExpression	22		6359770	1					
ANR	6359811	ExpressionStatement	o3 = ( val & 0x03c00000 ) >> 12	198:2:6123:6152	6359770	4	True				
ANR	6359812	AssignmentExpression	o3 = ( val & 0x03c00000 ) >> 12		6359770	0		=			
ANR	6359813	Identifier	o3		6359770	0					
ANR	6359814	ShiftExpression	( val & 0x03c00000 ) >> 12		6359770	1		>>			
ANR	6359815	BitAndExpression	val & 0x03c00000		6359770	0		&			
ANR	6359816	Identifier	val		6359770	0					
ANR	6359817	PrimaryExpression	0x03c00000		6359770	1					
ANR	6359818	PrimaryExpression	12		6359770	1					
ANR	6359819	ExpressionStatement	o4 = ( val & 0x0000f000 ) << 2	199:2:6156:6184	6359770	5	True				
ANR	6359820	AssignmentExpression	o4 = ( val & 0x0000f000 ) << 2		6359770	0		=			
ANR	6359821	Identifier	o4		6359770	0					
ANR	6359822	ShiftExpression	( val & 0x0000f000 ) << 2		6359770	1		<<			
ANR	6359823	BitAndExpression	val & 0x0000f000		6359770	0		&			
ANR	6359824	Identifier	val		6359770	0					
ANR	6359825	PrimaryExpression	0x0000f000		6359770	1					
ANR	6359826	PrimaryExpression	2		6359770	1					
ANR	6359827	ReturnStatement	return o1 | o2 | o3 | o4 ;	200:2:6188:6212	6359770	6	True				
ANR	6359828	InclusiveOrExpression	o1 | o2 | o3 | o4		6359770	0		|			
ANR	6359829	Identifier	o1		6359770	0					
ANR	6359830	InclusiveOrExpression	o2 | o3 | o4		6359770	1		|			
ANR	6359831	Identifier	o2		6359770	0					
ANR	6359832	InclusiveOrExpression	o3 | o4		6359770	1		|			
ANR	6359833	Identifier	o3		6359770	0					
ANR	6359834	Identifier	o4		6359770	1					
ANR	6359835	ReturnType	static unsigned long		6359770	1					
ANR	6359836	Identifier	extract_off18		6359770	2					
ANR	6359837	ParameterList			6359770	3					
ANR	6359838	CFGEntryNode	ENTRY		6359770		True				
ANR	6359839	CFGExitNode	EXIT		6359770		True				
ANR	6359840	Symbol	val		6359770						
ANR	6359841	Symbol	o1		6359770						
ANR	6359842	Symbol	o2		6359770						
ANR	6359843	Symbol	o3		6359770						
ANR	6359844	Symbol	o4		6359770						
ANR	6359845	Symbol	dec_insn . opcode		6359770						
ANR	6359846	Symbol	dec_insn		6359770						
ANR	6359847	Function	decode_abs	203:0:6217:6520							
ANR	6359848	FunctionDef	decode_abs ()		6359847	0					
ANR	6359849	CompoundStatement		205:0:6243:6520	6359847	0					
ANR	6359850	IdentifierDeclStatement	int i ;	206:2:6247:6252	6359847	0	True				
ANR	6359851	IdentifierDecl	i		6359847	0					
ANR	6359852	IdentifierDeclType	int		6359847	0					
ANR	6359853	Identifier	i		6359847	1					
ANR	6359854	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6359847	1					
ANR	6359855	ForInit	i = 0 ;	208:7:6262:6267	6359847	0	True				
ANR	6359856	AssignmentExpression	i = 0		6359847	0		=			
ANR	6359857	Identifier	i		6359847	0					
ANR	6359858	PrimaryExpression	0		6359847	1					
ANR	6359859	Condition	i < dec_insn . code -> nr_operands	208:14:6269:6298	6359847	1	True				
ANR	6359860	RelationalExpression	i < dec_insn . code -> nr_operands		6359847	0		<			
ANR	6359861	Identifier	i		6359847	0					
ANR	6359862	PtrMemberAccess	dec_insn . code -> nr_operands		6359847	1					
ANR	6359863	MemberAccess	dec_insn . code		6359847	0					
ANR	6359864	Identifier	dec_insn		6359847	0					
ANR	6359865	Identifier	code		6359847	1					
ANR	6359866	Identifier	nr_operands		6359847	1					
ANR	6359867	UnaryExpression	++ i	208:46:6301:6303	6359847	2	True				
ANR	6359868	IncDec	++		6359847	0					
ANR	6359869	Identifier	i		6359847	1					
ANR	6359870	CompoundStatement		4:51:62:62	6359847	3					
ANR	6359871	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6359847	0					
ANR	6359872	Condition	dec_insn . code -> fields [ i ]	209:11:6319:6342	6359847	0	True				
ANR	6359873	ArrayIndexing	dec_insn . code -> fields [ i ]		6359847	0					
ANR	6359874	PtrMemberAccess	dec_insn . code -> fields		6359847	0					
ANR	6359875	MemberAccess	dec_insn . code		6359847	0					
ANR	6359876	Identifier	dec_insn		6359847	0					
ANR	6359877	Identifier	code		6359847	1					
ANR	6359878	Identifier	fields		6359847	1					
ANR	6359879	Identifier	i		6359847	1					
ANR	6359880	CompoundStatement		5:37:101:101	6359847	1					
ANR	6359881	Label	case FMT_ABS_OFF18 :	210:3:6350:6368	6359847	0	True				
ANR	6359882	Identifier	FMT_ABS_OFF18		6359847	0					
ANR	6359883	ExpressionStatement	dec_insn . cexp [ i ] = extract_off18 ( )	211:4:6374:6409	6359847	1	True				
ANR	6359884	AssignmentExpression	dec_insn . cexp [ i ] = extract_off18 ( )		6359847	0		=			
ANR	6359885	ArrayIndexing	dec_insn . cexp [ i ]		6359847	0					
ANR	6359886	MemberAccess	dec_insn . cexp		6359847	0					
ANR	6359887	Identifier	dec_insn		6359847	0					
ANR	6359888	Identifier	cexp		6359847	1					
ANR	6359889	Identifier	i		6359847	1					
ANR	6359890	CallExpression	extract_off18 ( )		6359847	1					
ANR	6359891	Callee	extract_off18		6359847	0					
ANR	6359892	Identifier	extract_off18		6359847	0					
ANR	6359893	ArgumentList			6359847	1					
ANR	6359894	BreakStatement	break ;	212:4:6415:6420	6359847	2	True				
ANR	6359895	Label	case FMT_ABS_S1_D :	214:3:6426:6443	6359847	3	True				
ANR	6359896	Identifier	FMT_ABS_S1_D		6359847	0					
ANR	6359897	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf00 ) >> 8	215:4:6449:6498	6359847	4	True				
ANR	6359898	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf00 ) >> 8		6359847	0		=			
ANR	6359899	ArrayIndexing	dec_insn . regs [ i ]		6359847	0					
ANR	6359900	MemberAccess	dec_insn . regs		6359847	0					
ANR	6359901	Identifier	dec_insn		6359847	0					
ANR	6359902	Identifier	regs		6359847	1					
ANR	6359903	Identifier	i		6359847	1					
ANR	6359904	ShiftExpression	( dec_insn . opcode & 0xf00 ) >> 8		6359847	1		>>			
ANR	6359905	BitAndExpression	dec_insn . opcode & 0xf00		6359847	0		&			
ANR	6359906	MemberAccess	dec_insn . opcode		6359847	0					
ANR	6359907	Identifier	dec_insn		6359847	0					
ANR	6359908	Identifier	opcode		6359847	1					
ANR	6359909	PrimaryExpression	0xf00		6359847	1					
ANR	6359910	PrimaryExpression	8		6359847	1					
ANR	6359911	BreakStatement	break ;	216:4:6504:6509	6359847	5	True				
ANR	6359912	ReturnType	static void		6359847	1					
ANR	6359913	Identifier	decode_abs		6359847	2					
ANR	6359914	ParameterList			6359847	3					
ANR	6359915	CFGEntryNode	ENTRY		6359847		True				
ANR	6359916	CFGExitNode	EXIT		6359847		True				
ANR	6359917	Symbol	dec_insn . code		6359847						
ANR	6359918	Symbol	dec_insn . code -> fields		6359847						
ANR	6359919	Symbol	* dec_insn . cexp		6359847						
ANR	6359920	Symbol	i		6359847						
ANR	6359921	Symbol	* dec_insn . code -> fields		6359847						
ANR	6359922	Symbol	dec_insn . cexp		6359847						
ANR	6359923	Symbol	* dec_insn		6359847						
ANR	6359924	Symbol	extract_off18		6359847						
ANR	6359925	Symbol	dec_insn . code -> nr_operands		6359847						
ANR	6359926	Symbol	* i		6359847						
ANR	6359927	Symbol	dec_insn . regs		6359847						
ANR	6359928	Symbol	* * dec_insn		6359847						
ANR	6359929	Symbol	* dec_insn . code		6359847						
ANR	6359930	Symbol	dec_insn . opcode		6359847						
ANR	6359931	Symbol	dec_insn		6359847						
ANR	6359932	Symbol	* * dec_insn . code		6359847						
ANR	6359933	Symbol	* dec_insn . regs		6359847						
ANR	6359934	Function	decode_absb	221:0:6523:6918							
ANR	6359935	FunctionDef	decode_absb ()		6359934	0					
ANR	6359936	CompoundStatement		223:0:6550:6918	6359934	0					
ANR	6359937	IdentifierDeclStatement	int i ;	224:2:6554:6559	6359934	0	True				
ANR	6359938	IdentifierDecl	i		6359934	0					
ANR	6359939	IdentifierDeclType	int		6359934	0					
ANR	6359940	Identifier	i		6359934	1					
ANR	6359941	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6359934	1					
ANR	6359942	ForInit	i = 0 ;	226:7:6569:6574	6359934	0	True				
ANR	6359943	AssignmentExpression	i = 0		6359934	0		=			
ANR	6359944	Identifier	i		6359934	0					
ANR	6359945	PrimaryExpression	0		6359934	1					
ANR	6359946	Condition	i < dec_insn . code -> nr_operands	226:14:6576:6605	6359934	1	True				
ANR	6359947	RelationalExpression	i < dec_insn . code -> nr_operands		6359934	0		<			
ANR	6359948	Identifier	i		6359934	0					
ANR	6359949	PtrMemberAccess	dec_insn . code -> nr_operands		6359934	1					
ANR	6359950	MemberAccess	dec_insn . code		6359934	0					
ANR	6359951	Identifier	dec_insn		6359934	0					
ANR	6359952	Identifier	code		6359934	1					
ANR	6359953	Identifier	nr_operands		6359934	1					
ANR	6359954	UnaryExpression	++ i	226:46:6608:6610	6359934	2	True				
ANR	6359955	IncDec	++		6359934	0					
ANR	6359956	Identifier	i		6359934	1					
ANR	6359957	CompoundStatement		4:51:62:62	6359934	3					
ANR	6359958	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6359934	0					
ANR	6359959	Condition	dec_insn . code -> fields [ i ]	227:11:6626:6649	6359934	0	True				
ANR	6359960	ArrayIndexing	dec_insn . code -> fields [ i ]		6359934	0					
ANR	6359961	PtrMemberAccess	dec_insn . code -> fields		6359934	0					
ANR	6359962	MemberAccess	dec_insn . code		6359934	0					
ANR	6359963	Identifier	dec_insn		6359934	0					
ANR	6359964	Identifier	code		6359934	1					
ANR	6359965	Identifier	fields		6359934	1					
ANR	6359966	Identifier	i		6359934	1					
ANR	6359967	CompoundStatement		5:37:101:101	6359934	1					
ANR	6359968	Label	case FMT_ABSB_OFF18 :	228:3:6657:6676	6359934	0	True				
ANR	6359969	Identifier	FMT_ABSB_OFF18		6359934	0					
ANR	6359970	ExpressionStatement	dec_insn . cexp [ i ] = extract_off18 ( )	229:4:6682:6717	6359934	1	True				
ANR	6359971	AssignmentExpression	dec_insn . cexp [ i ] = extract_off18 ( )		6359934	0		=			
ANR	6359972	ArrayIndexing	dec_insn . cexp [ i ]		6359934	0					
ANR	6359973	MemberAccess	dec_insn . cexp		6359934	0					
ANR	6359974	Identifier	dec_insn		6359934	0					
ANR	6359975	Identifier	cexp		6359934	1					
ANR	6359976	Identifier	i		6359934	1					
ANR	6359977	CallExpression	extract_off18 ( )		6359934	1					
ANR	6359978	Callee	extract_off18		6359934	0					
ANR	6359979	Identifier	extract_off18		6359934	0					
ANR	6359980	ArgumentList			6359934	1					
ANR	6359981	BreakStatement	break ;	230:4:6723:6728	6359934	2	True				
ANR	6359982	Label	case FMT_ABSB_B :	232:3:6734:6749	6359934	3	True				
ANR	6359983	Identifier	FMT_ABSB_B		6359934	0					
ANR	6359984	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x800 ) >> 11	233:4:6755:6805	6359934	4	True				
ANR	6359985	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x800 ) >> 11		6359934	0		=			
ANR	6359986	ArrayIndexing	dec_insn . cexp [ i ]		6359934	0					
ANR	6359987	MemberAccess	dec_insn . cexp		6359934	0					
ANR	6359988	Identifier	dec_insn		6359934	0					
ANR	6359989	Identifier	cexp		6359934	1					
ANR	6359990	Identifier	i		6359934	1					
ANR	6359991	ShiftExpression	( dec_insn . opcode & 0x800 ) >> 11		6359934	1		>>			
ANR	6359992	BitAndExpression	dec_insn . opcode & 0x800		6359934	0		&			
ANR	6359993	MemberAccess	dec_insn . opcode		6359934	0					
ANR	6359994	Identifier	dec_insn		6359934	0					
ANR	6359995	Identifier	opcode		6359934	1					
ANR	6359996	PrimaryExpression	0x800		6359934	1					
ANR	6359997	PrimaryExpression	11		6359934	1					
ANR	6359998	BreakStatement	break ;	234:4:6811:6816	6359934	5	True				
ANR	6359999	Label	case FMT_ABSB_BPOS3 :	236:3:6822:6841	6359934	6	True				
ANR	6360000	Identifier	FMT_ABSB_BPOS3		6359934	0					
ANR	6360001	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x700 ) >> 8	237:4:6847:6896	6359934	7	True				
ANR	6360002	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x700 ) >> 8		6359934	0		=			
ANR	6360003	ArrayIndexing	dec_insn . cexp [ i ]		6359934	0					
ANR	6360004	MemberAccess	dec_insn . cexp		6359934	0					
ANR	6360005	Identifier	dec_insn		6359934	0					
ANR	6360006	Identifier	cexp		6359934	1					
ANR	6360007	Identifier	i		6359934	1					
ANR	6360008	ShiftExpression	( dec_insn . opcode & 0x700 ) >> 8		6359934	1		>>			
ANR	6360009	BitAndExpression	dec_insn . opcode & 0x700		6359934	0		&			
ANR	6360010	MemberAccess	dec_insn . opcode		6359934	0					
ANR	6360011	Identifier	dec_insn		6359934	0					
ANR	6360012	Identifier	opcode		6359934	1					
ANR	6360013	PrimaryExpression	0x700		6359934	1					
ANR	6360014	PrimaryExpression	8		6359934	1					
ANR	6360015	BreakStatement	break ;	238:4:6902:6907	6359934	8	True				
ANR	6360016	ReturnType	static void		6359934	1					
ANR	6360017	Identifier	decode_absb		6359934	2					
ANR	6360018	ParameterList			6359934	3					
ANR	6360019	CFGEntryNode	ENTRY		6359934		True				
ANR	6360020	CFGExitNode	EXIT		6359934		True				
ANR	6360021	Symbol	dec_insn . code		6359934						
ANR	6360022	Symbol	dec_insn . code -> fields		6359934						
ANR	6360023	Symbol	* dec_insn . cexp		6359934						
ANR	6360024	Symbol	i		6359934						
ANR	6360025	Symbol	* dec_insn . code -> fields		6359934						
ANR	6360026	Symbol	dec_insn . cexp		6359934						
ANR	6360027	Symbol	* dec_insn		6359934						
ANR	6360028	Symbol	extract_off18		6359934						
ANR	6360029	Symbol	dec_insn . code -> nr_operands		6359934						
ANR	6360030	Symbol	* i		6359934						
ANR	6360031	Symbol	* * dec_insn		6359934						
ANR	6360032	Symbol	* dec_insn . code		6359934						
ANR	6360033	Symbol	dec_insn . opcode		6359934						
ANR	6360034	Symbol	dec_insn		6359934						
ANR	6360035	Symbol	* * dec_insn . code		6359934						
ANR	6360036	Function	decode_b	243:0:6921:7240							
ANR	6360037	FunctionDef	decode_b ()		6360036	0					
ANR	6360038	CompoundStatement		245:0:6945:7240	6360036	0					
ANR	6360039	IdentifierDeclStatement	int i ;	246:2:6949:6954	6360036	0	True				
ANR	6360040	IdentifierDecl	i		6360036	0					
ANR	6360041	IdentifierDeclType	int		6360036	0					
ANR	6360042	Identifier	i		6360036	1					
ANR	6360043	IdentifierDeclStatement	"unsigned long o1 , o2 ;"	247:2:6958:6978	6360036	1	True				
ANR	6360044	IdentifierDecl	o1		6360036	0					
ANR	6360045	IdentifierDeclType	unsigned long		6360036	0					
ANR	6360046	Identifier	o1		6360036	1					
ANR	6360047	IdentifierDecl	o2		6360036	1					
ANR	6360048	IdentifierDeclType	unsigned long		6360036	0					
ANR	6360049	Identifier	o2		6360036	1					
ANR	6360050	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6360036	2					
ANR	6360051	ForInit	i = 0 ;	249:7:6988:6993	6360036	0	True				
ANR	6360052	AssignmentExpression	i = 0		6360036	0		=			
ANR	6360053	Identifier	i		6360036	0					
ANR	6360054	PrimaryExpression	0		6360036	1					
ANR	6360055	Condition	i < dec_insn . code -> nr_operands	249:14:6995:7024	6360036	1	True				
ANR	6360056	RelationalExpression	i < dec_insn . code -> nr_operands		6360036	0		<			
ANR	6360057	Identifier	i		6360036	0					
ANR	6360058	PtrMemberAccess	dec_insn . code -> nr_operands		6360036	1					
ANR	6360059	MemberAccess	dec_insn . code		6360036	0					
ANR	6360060	Identifier	dec_insn		6360036	0					
ANR	6360061	Identifier	code		6360036	1					
ANR	6360062	Identifier	nr_operands		6360036	1					
ANR	6360063	UnaryExpression	++ i	249:46:7027:7029	6360036	2	True				
ANR	6360064	IncDec	++		6360036	0					
ANR	6360065	Identifier	i		6360036	1					
ANR	6360066	CompoundStatement		5:51:86:86	6360036	3					
ANR	6360067	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6360036	0					
ANR	6360068	Condition	dec_insn . code -> fields [ i ]	250:11:7045:7068	6360036	0	True				
ANR	6360069	ArrayIndexing	dec_insn . code -> fields [ i ]		6360036	0					
ANR	6360070	PtrMemberAccess	dec_insn . code -> fields		6360036	0					
ANR	6360071	MemberAccess	dec_insn . code		6360036	0					
ANR	6360072	Identifier	dec_insn		6360036	0					
ANR	6360073	Identifier	code		6360036	1					
ANR	6360074	Identifier	fields		6360036	1					
ANR	6360075	Identifier	i		6360036	1					
ANR	6360076	CompoundStatement		6:37:125:125	6360036	1					
ANR	6360077	Label	case FMT_B_DISP24 :	251:3:7076:7093	6360036	0	True				
ANR	6360078	Identifier	FMT_B_DISP24		6360036	0					
ANR	6360079	ExpressionStatement	o1 = ( dec_insn . opcode & 0xffff0000 ) >> 16	252:4:7099:7140	6360036	1	True				
ANR	6360080	AssignmentExpression	o1 = ( dec_insn . opcode & 0xffff0000 ) >> 16		6360036	0		=			
ANR	6360081	Identifier	o1		6360036	0					
ANR	6360082	ShiftExpression	( dec_insn . opcode & 0xffff0000 ) >> 16		6360036	1		>>			
ANR	6360083	BitAndExpression	dec_insn . opcode & 0xffff0000		6360036	0		&			
ANR	6360084	MemberAccess	dec_insn . opcode		6360036	0					
ANR	6360085	Identifier	dec_insn		6360036	0					
ANR	6360086	Identifier	opcode		6360036	1					
ANR	6360087	PrimaryExpression	0xffff0000		6360036	1					
ANR	6360088	PrimaryExpression	16		6360036	1					
ANR	6360089	ExpressionStatement	o2 = ( dec_insn . opcode & 0x0000ff00 ) << 8	253:4:7146:7186	6360036	2	True				
ANR	6360090	AssignmentExpression	o2 = ( dec_insn . opcode & 0x0000ff00 ) << 8		6360036	0		=			
ANR	6360091	Identifier	o2		6360036	0					
ANR	6360092	ShiftExpression	( dec_insn . opcode & 0x0000ff00 ) << 8		6360036	1		<<			
ANR	6360093	BitAndExpression	dec_insn . opcode & 0x0000ff00		6360036	0		&			
ANR	6360094	MemberAccess	dec_insn . opcode		6360036	0					
ANR	6360095	Identifier	dec_insn		6360036	0					
ANR	6360096	Identifier	opcode		6360036	1					
ANR	6360097	PrimaryExpression	0x0000ff00		6360036	1					
ANR	6360098	PrimaryExpression	8		6360036	1					
ANR	6360099	ExpressionStatement	dec_insn . cexp [ i ] = o1 | o2	254:4:7192:7218	6360036	3	True				
ANR	6360100	AssignmentExpression	dec_insn . cexp [ i ] = o1 | o2		6360036	0		=			
ANR	6360101	ArrayIndexing	dec_insn . cexp [ i ]		6360036	0					
ANR	6360102	MemberAccess	dec_insn . cexp		6360036	0					
ANR	6360103	Identifier	dec_insn		6360036	0					
ANR	6360104	Identifier	cexp		6360036	1					
ANR	6360105	Identifier	i		6360036	1					
ANR	6360106	InclusiveOrExpression	o1 | o2		6360036	1		|			
ANR	6360107	Identifier	o1		6360036	0					
ANR	6360108	Identifier	o2		6360036	1					
ANR	6360109	BreakStatement	break ;	255:4:7224:7229	6360036	4	True				
ANR	6360110	ReturnType	static void		6360036	1					
ANR	6360111	Identifier	decode_b		6360036	2					
ANR	6360112	ParameterList			6360036	3					
ANR	6360113	CFGEntryNode	ENTRY		6360036		True				
ANR	6360114	CFGExitNode	EXIT		6360036		True				
ANR	6360115	Symbol	o1		6360036						
ANR	6360116	Symbol	dec_insn . code		6360036						
ANR	6360117	Symbol	dec_insn . code -> fields		6360036						
ANR	6360118	Symbol	o2		6360036						
ANR	6360119	Symbol	* dec_insn . cexp		6360036						
ANR	6360120	Symbol	i		6360036						
ANR	6360121	Symbol	* dec_insn . code -> fields		6360036						
ANR	6360122	Symbol	dec_insn . cexp		6360036						
ANR	6360123	Symbol	* dec_insn		6360036						
ANR	6360124	Symbol	dec_insn . code -> nr_operands		6360036						
ANR	6360125	Symbol	* i		6360036						
ANR	6360126	Symbol	* * dec_insn		6360036						
ANR	6360127	Symbol	* dec_insn . code		6360036						
ANR	6360128	Symbol	dec_insn . opcode		6360036						
ANR	6360129	Symbol	dec_insn		6360036						
ANR	6360130	Symbol	* * dec_insn . code		6360036						
ANR	6360131	Function	decode_bit	260:0:7243:7844							
ANR	6360132	FunctionDef	decode_bit ()		6360131	0					
ANR	6360133	CompoundStatement		262:0:7269:7844	6360131	0					
ANR	6360134	IdentifierDeclStatement	int i ;	263:2:7273:7278	6360131	0	True				
ANR	6360135	IdentifierDecl	i		6360131	0					
ANR	6360136	IdentifierDeclType	int		6360131	0					
ANR	6360137	Identifier	i		6360131	1					
ANR	6360138	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6360131	1					
ANR	6360139	ForInit	i = 0 ;	265:7:7288:7293	6360131	0	True				
ANR	6360140	AssignmentExpression	i = 0		6360131	0		=			
ANR	6360141	Identifier	i		6360131	0					
ANR	6360142	PrimaryExpression	0		6360131	1					
ANR	6360143	Condition	i < dec_insn . code -> nr_operands	265:14:7295:7324	6360131	1	True				
ANR	6360144	RelationalExpression	i < dec_insn . code -> nr_operands		6360131	0		<			
ANR	6360145	Identifier	i		6360131	0					
ANR	6360146	PtrMemberAccess	dec_insn . code -> nr_operands		6360131	1					
ANR	6360147	MemberAccess	dec_insn . code		6360131	0					
ANR	6360148	Identifier	dec_insn		6360131	0					
ANR	6360149	Identifier	code		6360131	1					
ANR	6360150	Identifier	nr_operands		6360131	1					
ANR	6360151	UnaryExpression	++ i	265:46:7327:7329	6360131	2	True				
ANR	6360152	IncDec	++		6360131	0					
ANR	6360153	Identifier	i		6360131	1					
ANR	6360154	CompoundStatement		4:51:62:62	6360131	3					
ANR	6360155	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6360131	0					
ANR	6360156	Condition	dec_insn . code -> fields [ i ]	266:11:7345:7368	6360131	0	True				
ANR	6360157	ArrayIndexing	dec_insn . code -> fields [ i ]		6360131	0					
ANR	6360158	PtrMemberAccess	dec_insn . code -> fields		6360131	0					
ANR	6360159	MemberAccess	dec_insn . code		6360131	0					
ANR	6360160	Identifier	dec_insn		6360131	0					
ANR	6360161	Identifier	code		6360131	1					
ANR	6360162	Identifier	fields		6360131	1					
ANR	6360163	Identifier	i		6360131	1					
ANR	6360164	CompoundStatement		5:37:101:101	6360131	1					
ANR	6360165	Label	case FMT_BIT_D :	267:3:7376:7390	6360131	0	True				
ANR	6360166	Identifier	FMT_BIT_D		6360131	0					
ANR	6360167	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28	268:4:7396:7451	6360131	1	True				
ANR	6360168	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28		6360131	0		=			
ANR	6360169	ArrayIndexing	dec_insn . regs [ i ]		6360131	0					
ANR	6360170	MemberAccess	dec_insn . regs		6360131	0					
ANR	6360171	Identifier	dec_insn		6360131	0					
ANR	6360172	Identifier	regs		6360131	1					
ANR	6360173	Identifier	i		6360131	1					
ANR	6360174	ShiftExpression	( dec_insn . opcode & 0xf0000000 ) >> 28		6360131	1		>>			
ANR	6360175	BitAndExpression	dec_insn . opcode & 0xf0000000		6360131	0		&			
ANR	6360176	MemberAccess	dec_insn . opcode		6360131	0					
ANR	6360177	Identifier	dec_insn		6360131	0					
ANR	6360178	Identifier	opcode		6360131	1					
ANR	6360179	PrimaryExpression	0xf0000000		6360131	1					
ANR	6360180	PrimaryExpression	28		6360131	1					
ANR	6360181	BreakStatement	break ;	269:4:7457:7462	6360131	2	True				
ANR	6360182	Label	case FMT_BIT_P2 :	271:3:7468:7483	6360131	3	True				
ANR	6360183	Identifier	FMT_BIT_P2		6360131	0					
ANR	6360184	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0f800000 ) >> 23	272:4:7489:7544	6360131	4	True				
ANR	6360185	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0f800000 ) >> 23		6360131	0		=			
ANR	6360186	ArrayIndexing	dec_insn . cexp [ i ]		6360131	0					
ANR	6360187	MemberAccess	dec_insn . cexp		6360131	0					
ANR	6360188	Identifier	dec_insn		6360131	0					
ANR	6360189	Identifier	cexp		6360131	1					
ANR	6360190	Identifier	i		6360131	1					
ANR	6360191	ShiftExpression	( dec_insn . opcode & 0x0f800000 ) >> 23		6360131	1		>>			
ANR	6360192	BitAndExpression	dec_insn . opcode & 0x0f800000		6360131	0		&			
ANR	6360193	MemberAccess	dec_insn . opcode		6360131	0					
ANR	6360194	Identifier	dec_insn		6360131	0					
ANR	6360195	Identifier	opcode		6360131	1					
ANR	6360196	PrimaryExpression	0x0f800000		6360131	1					
ANR	6360197	PrimaryExpression	23		6360131	1					
ANR	6360198	BreakStatement	break ;	273:4:7550:7555	6360131	5	True				
ANR	6360199	Label	case FMT_BIT_P1 :	275:3:7561:7576	6360131	6	True				
ANR	6360200	Identifier	FMT_BIT_P1		6360131	0					
ANR	6360201	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x001f0000 ) >> 16	276:4:7582:7637	6360131	7	True				
ANR	6360202	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x001f0000 ) >> 16		6360131	0		=			
ANR	6360203	ArrayIndexing	dec_insn . cexp [ i ]		6360131	0					
ANR	6360204	MemberAccess	dec_insn . cexp		6360131	0					
ANR	6360205	Identifier	dec_insn		6360131	0					
ANR	6360206	Identifier	cexp		6360131	1					
ANR	6360207	Identifier	i		6360131	1					
ANR	6360208	ShiftExpression	( dec_insn . opcode & 0x001f0000 ) >> 16		6360131	1		>>			
ANR	6360209	BitAndExpression	dec_insn . opcode & 0x001f0000		6360131	0		&			
ANR	6360210	MemberAccess	dec_insn . opcode		6360131	0					
ANR	6360211	Identifier	dec_insn		6360131	0					
ANR	6360212	Identifier	opcode		6360131	1					
ANR	6360213	PrimaryExpression	0x001f0000		6360131	1					
ANR	6360214	PrimaryExpression	16		6360131	1					
ANR	6360215	BreakStatement	break ;	277:4:7643:7648	6360131	8	True				
ANR	6360216	Label	case FMT_BIT_S2 :	279:3:7654:7669	6360131	9	True				
ANR	6360217	Identifier	FMT_BIT_S2		6360131	0					
ANR	6360218	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12	280:4:7675:7730	6360131	10	True				
ANR	6360219	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12		6360131	0		=			
ANR	6360220	ArrayIndexing	dec_insn . regs [ i ]		6360131	0					
ANR	6360221	MemberAccess	dec_insn . regs		6360131	0					
ANR	6360222	Identifier	dec_insn		6360131	0					
ANR	6360223	Identifier	regs		6360131	1					
ANR	6360224	Identifier	i		6360131	1					
ANR	6360225	ShiftExpression	( dec_insn . opcode & 0x0000f000 ) >> 12		6360131	1		>>			
ANR	6360226	BitAndExpression	dec_insn . opcode & 0x0000f000		6360131	0		&			
ANR	6360227	MemberAccess	dec_insn . opcode		6360131	0					
ANR	6360228	Identifier	dec_insn		6360131	0					
ANR	6360229	Identifier	opcode		6360131	1					
ANR	6360230	PrimaryExpression	0x0000f000		6360131	1					
ANR	6360231	PrimaryExpression	12		6360131	1					
ANR	6360232	BreakStatement	break ;	281:4:7736:7741	6360131	11	True				
ANR	6360233	Label	case FMT_BIT_S1 :	283:3:7747:7762	6360131	12	True				
ANR	6360234	Identifier	FMT_BIT_S1		6360131	0					
ANR	6360235	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	284:4:7768:7822	6360131	13	True				
ANR	6360236	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6360131	0		=			
ANR	6360237	ArrayIndexing	dec_insn . regs [ i ]		6360131	0					
ANR	6360238	MemberAccess	dec_insn . regs		6360131	0					
ANR	6360239	Identifier	dec_insn		6360131	0					
ANR	6360240	Identifier	regs		6360131	1					
ANR	6360241	Identifier	i		6360131	1					
ANR	6360242	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6360131	1		>>			
ANR	6360243	BitAndExpression	dec_insn . opcode & 0x00000f00		6360131	0		&			
ANR	6360244	MemberAccess	dec_insn . opcode		6360131	0					
ANR	6360245	Identifier	dec_insn		6360131	0					
ANR	6360246	Identifier	opcode		6360131	1					
ANR	6360247	PrimaryExpression	0x00000f00		6360131	1					
ANR	6360248	PrimaryExpression	8		6360131	1					
ANR	6360249	BreakStatement	break ;	285:4:7828:7833	6360131	14	True				
ANR	6360250	ReturnType	static void		6360131	1					
ANR	6360251	Identifier	decode_bit		6360131	2					
ANR	6360252	ParameterList			6360131	3					
ANR	6360253	CFGEntryNode	ENTRY		6360131		True				
ANR	6360254	CFGExitNode	EXIT		6360131		True				
ANR	6360255	Symbol	dec_insn . code		6360131						
ANR	6360256	Symbol	dec_insn . code -> fields		6360131						
ANR	6360257	Symbol	* dec_insn . cexp		6360131						
ANR	6360258	Symbol	i		6360131						
ANR	6360259	Symbol	* dec_insn . code -> fields		6360131						
ANR	6360260	Symbol	dec_insn . cexp		6360131						
ANR	6360261	Symbol	* dec_insn		6360131						
ANR	6360262	Symbol	dec_insn . code -> nr_operands		6360131						
ANR	6360263	Symbol	* i		6360131						
ANR	6360264	Symbol	dec_insn . regs		6360131						
ANR	6360265	Symbol	* * dec_insn		6360131						
ANR	6360266	Symbol	* dec_insn . code		6360131						
ANR	6360267	Symbol	dec_insn . opcode		6360131						
ANR	6360268	Symbol	dec_insn		6360131						
ANR	6360269	Symbol	* * dec_insn . code		6360131						
ANR	6360270	Symbol	* dec_insn . regs		6360131						
ANR	6360271	Function	decode_bo	290:0:7847:8353							
ANR	6360272	FunctionDef	decode_bo ()		6360271	0					
ANR	6360273	CompoundStatement		292:0:7872:8353	6360271	0					
ANR	6360274	IdentifierDeclStatement	int i ;	293:2:7876:7881	6360271	0	True				
ANR	6360275	IdentifierDecl	i		6360271	0					
ANR	6360276	IdentifierDeclType	int		6360271	0					
ANR	6360277	Identifier	i		6360271	1					
ANR	6360278	IdentifierDeclStatement	"unsigned long o1 , o2 ;"	294:2:7885:7905	6360271	1	True				
ANR	6360279	IdentifierDecl	o1		6360271	0					
ANR	6360280	IdentifierDeclType	unsigned long		6360271	0					
ANR	6360281	Identifier	o1		6360271	1					
ANR	6360282	IdentifierDecl	o2		6360271	1					
ANR	6360283	IdentifierDeclType	unsigned long		6360271	0					
ANR	6360284	Identifier	o2		6360271	1					
ANR	6360285	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6360271	2					
ANR	6360286	ForInit	i = 0 ;	296:7:7915:7920	6360271	0	True				
ANR	6360287	AssignmentExpression	i = 0		6360271	0		=			
ANR	6360288	Identifier	i		6360271	0					
ANR	6360289	PrimaryExpression	0		6360271	1					
ANR	6360290	Condition	i < dec_insn . code -> nr_operands	296:14:7922:7951	6360271	1	True				
ANR	6360291	RelationalExpression	i < dec_insn . code -> nr_operands		6360271	0		<			
ANR	6360292	Identifier	i		6360271	0					
ANR	6360293	PtrMemberAccess	dec_insn . code -> nr_operands		6360271	1					
ANR	6360294	MemberAccess	dec_insn . code		6360271	0					
ANR	6360295	Identifier	dec_insn		6360271	0					
ANR	6360296	Identifier	code		6360271	1					
ANR	6360297	Identifier	nr_operands		6360271	1					
ANR	6360298	UnaryExpression	++ i	296:46:7954:7956	6360271	2	True				
ANR	6360299	IncDec	++		6360271	0					
ANR	6360300	Identifier	i		6360271	1					
ANR	6360301	CompoundStatement		5:51:86:86	6360271	3					
ANR	6360302	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6360271	0					
ANR	6360303	Condition	dec_insn . code -> fields [ i ]	297:11:7972:7995	6360271	0	True				
ANR	6360304	ArrayIndexing	dec_insn . code -> fields [ i ]		6360271	0					
ANR	6360305	PtrMemberAccess	dec_insn . code -> fields		6360271	0					
ANR	6360306	MemberAccess	dec_insn . code		6360271	0					
ANR	6360307	Identifier	dec_insn		6360271	0					
ANR	6360308	Identifier	code		6360271	1					
ANR	6360309	Identifier	fields		6360271	1					
ANR	6360310	Identifier	i		6360271	1					
ANR	6360311	CompoundStatement		6:37:125:125	6360271	1					
ANR	6360312	Label	case FMT_BO_OFF10 :	298:3:8003:8020	6360271	0	True				
ANR	6360313	Identifier	FMT_BO_OFF10		6360271	0					
ANR	6360314	ExpressionStatement	o1 = ( dec_insn . opcode & 0x003f0000 ) >> 16	299:4:8026:8067	6360271	1	True				
ANR	6360315	AssignmentExpression	o1 = ( dec_insn . opcode & 0x003f0000 ) >> 16		6360271	0		=			
ANR	6360316	Identifier	o1		6360271	0					
ANR	6360317	ShiftExpression	( dec_insn . opcode & 0x003f0000 ) >> 16		6360271	1		>>			
ANR	6360318	BitAndExpression	dec_insn . opcode & 0x003f0000		6360271	0		&			
ANR	6360319	MemberAccess	dec_insn . opcode		6360271	0					
ANR	6360320	Identifier	dec_insn		6360271	0					
ANR	6360321	Identifier	opcode		6360271	1					
ANR	6360322	PrimaryExpression	0x003f0000		6360271	1					
ANR	6360323	PrimaryExpression	16		6360271	1					
ANR	6360324	ExpressionStatement	o2 = ( dec_insn . opcode & 0xf0000000 ) >> 22	300:4:8073:8114	6360271	2	True				
ANR	6360325	AssignmentExpression	o2 = ( dec_insn . opcode & 0xf0000000 ) >> 22		6360271	0		=			
ANR	6360326	Identifier	o2		6360271	0					
ANR	6360327	ShiftExpression	( dec_insn . opcode & 0xf0000000 ) >> 22		6360271	1		>>			
ANR	6360328	BitAndExpression	dec_insn . opcode & 0xf0000000		6360271	0		&			
ANR	6360329	MemberAccess	dec_insn . opcode		6360271	0					
ANR	6360330	Identifier	dec_insn		6360271	0					
ANR	6360331	Identifier	opcode		6360271	1					
ANR	6360332	PrimaryExpression	0xf0000000		6360271	1					
ANR	6360333	PrimaryExpression	22		6360271	1					
ANR	6360334	ExpressionStatement	dec_insn . cexp [ i ] = o1 | o2	301:4:8120:8146	6360271	3	True				
ANR	6360335	AssignmentExpression	dec_insn . cexp [ i ] = o1 | o2		6360271	0		=			
ANR	6360336	ArrayIndexing	dec_insn . cexp [ i ]		6360271	0					
ANR	6360337	MemberAccess	dec_insn . cexp		6360271	0					
ANR	6360338	Identifier	dec_insn		6360271	0					
ANR	6360339	Identifier	cexp		6360271	1					
ANR	6360340	Identifier	i		6360271	1					
ANR	6360341	InclusiveOrExpression	o1 | o2		6360271	1		|			
ANR	6360342	Identifier	o1		6360271	0					
ANR	6360343	Identifier	o2		6360271	1					
ANR	6360344	BreakStatement	break ;	302:4:8152:8157	6360271	4	True				
ANR	6360345	Label	case FMT_BO_S2 :	304:3:8163:8177	6360271	5	True				
ANR	6360346	Identifier	FMT_BO_S2		6360271	0					
ANR	6360347	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12	305:4:8183:8238	6360271	6	True				
ANR	6360348	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12		6360271	0		=			
ANR	6360349	ArrayIndexing	dec_insn . regs [ i ]		6360271	0					
ANR	6360350	MemberAccess	dec_insn . regs		6360271	0					
ANR	6360351	Identifier	dec_insn		6360271	0					
ANR	6360352	Identifier	regs		6360271	1					
ANR	6360353	Identifier	i		6360271	1					
ANR	6360354	ShiftExpression	( dec_insn . opcode & 0x0000f000 ) >> 12		6360271	1		>>			
ANR	6360355	BitAndExpression	dec_insn . opcode & 0x0000f000		6360271	0		&			
ANR	6360356	MemberAccess	dec_insn . opcode		6360271	0					
ANR	6360357	Identifier	dec_insn		6360271	0					
ANR	6360358	Identifier	opcode		6360271	1					
ANR	6360359	PrimaryExpression	0x0000f000		6360271	1					
ANR	6360360	PrimaryExpression	12		6360271	1					
ANR	6360361	BreakStatement	break ;	306:4:8244:8249	6360271	7	True				
ANR	6360362	Label	case FMT_BO_S1_D :	308:3:8255:8271	6360271	8	True				
ANR	6360363	Identifier	FMT_BO_S1_D		6360271	0					
ANR	6360364	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	309:4:8277:8331	6360271	9	True				
ANR	6360365	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6360271	0		=			
ANR	6360366	ArrayIndexing	dec_insn . regs [ i ]		6360271	0					
ANR	6360367	MemberAccess	dec_insn . regs		6360271	0					
ANR	6360368	Identifier	dec_insn		6360271	0					
ANR	6360369	Identifier	regs		6360271	1					
ANR	6360370	Identifier	i		6360271	1					
ANR	6360371	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6360271	1		>>			
ANR	6360372	BitAndExpression	dec_insn . opcode & 0x00000f00		6360271	0		&			
ANR	6360373	MemberAccess	dec_insn . opcode		6360271	0					
ANR	6360374	Identifier	dec_insn		6360271	0					
ANR	6360375	Identifier	opcode		6360271	1					
ANR	6360376	PrimaryExpression	0x00000f00		6360271	1					
ANR	6360377	PrimaryExpression	8		6360271	1					
ANR	6360378	BreakStatement	break ;	310:4:8337:8342	6360271	10	True				
ANR	6360379	ReturnType	static void		6360271	1					
ANR	6360380	Identifier	decode_bo		6360271	2					
ANR	6360381	ParameterList			6360271	3					
ANR	6360382	CFGEntryNode	ENTRY		6360271		True				
ANR	6360383	CFGExitNode	EXIT		6360271		True				
ANR	6360384	Symbol	o1		6360271						
ANR	6360385	Symbol	dec_insn . code		6360271						
ANR	6360386	Symbol	dec_insn . code -> fields		6360271						
ANR	6360387	Symbol	o2		6360271						
ANR	6360388	Symbol	* dec_insn . cexp		6360271						
ANR	6360389	Symbol	i		6360271						
ANR	6360390	Symbol	* dec_insn . code -> fields		6360271						
ANR	6360391	Symbol	dec_insn . cexp		6360271						
ANR	6360392	Symbol	* dec_insn		6360271						
ANR	6360393	Symbol	dec_insn . code -> nr_operands		6360271						
ANR	6360394	Symbol	* i		6360271						
ANR	6360395	Symbol	dec_insn . regs		6360271						
ANR	6360396	Symbol	* * dec_insn		6360271						
ANR	6360397	Symbol	* dec_insn . code		6360271						
ANR	6360398	Symbol	dec_insn . opcode		6360271						
ANR	6360399	Symbol	dec_insn		6360271						
ANR	6360400	Symbol	* * dec_insn . code		6360271						
ANR	6360401	Symbol	* dec_insn . regs		6360271						
ANR	6360402	Function	decode_bol	315:0:8356:8922							
ANR	6360403	FunctionDef	decode_bol ()		6360402	0					
ANR	6360404	CompoundStatement		317:0:8382:8922	6360402	0					
ANR	6360405	IdentifierDeclStatement	int i ;	318:2:8386:8391	6360402	0	True				
ANR	6360406	IdentifierDecl	i		6360402	0					
ANR	6360407	IdentifierDeclType	int		6360402	0					
ANR	6360408	Identifier	i		6360402	1					
ANR	6360409	IdentifierDeclStatement	"unsigned long o1 , o2 , o3 ;"	319:2:8395:8419	6360402	1	True				
ANR	6360410	IdentifierDecl	o1		6360402	0					
ANR	6360411	IdentifierDeclType	unsigned long		6360402	0					
ANR	6360412	Identifier	o1		6360402	1					
ANR	6360413	IdentifierDecl	o2		6360402	1					
ANR	6360414	IdentifierDeclType	unsigned long		6360402	0					
ANR	6360415	Identifier	o2		6360402	1					
ANR	6360416	IdentifierDecl	o3		6360402	2					
ANR	6360417	IdentifierDeclType	unsigned long		6360402	0					
ANR	6360418	Identifier	o3		6360402	1					
ANR	6360419	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6360402	2					
ANR	6360420	ForInit	i = 0 ;	321:7:8429:8434	6360402	0	True				
ANR	6360421	AssignmentExpression	i = 0		6360402	0		=			
ANR	6360422	Identifier	i		6360402	0					
ANR	6360423	PrimaryExpression	0		6360402	1					
ANR	6360424	Condition	i < dec_insn . code -> nr_operands	321:14:8436:8465	6360402	1	True				
ANR	6360425	RelationalExpression	i < dec_insn . code -> nr_operands		6360402	0		<			
ANR	6360426	Identifier	i		6360402	0					
ANR	6360427	PtrMemberAccess	dec_insn . code -> nr_operands		6360402	1					
ANR	6360428	MemberAccess	dec_insn . code		6360402	0					
ANR	6360429	Identifier	dec_insn		6360402	0					
ANR	6360430	Identifier	code		6360402	1					
ANR	6360431	Identifier	nr_operands		6360402	1					
ANR	6360432	UnaryExpression	++ i	321:46:8468:8470	6360402	2	True				
ANR	6360433	IncDec	++		6360402	0					
ANR	6360434	Identifier	i		6360402	1					
ANR	6360435	CompoundStatement		5:51:90:90	6360402	3					
ANR	6360436	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6360402	0					
ANR	6360437	Condition	dec_insn . code -> fields [ i ]	322:11:8486:8509	6360402	0	True				
ANR	6360438	ArrayIndexing	dec_insn . code -> fields [ i ]		6360402	0					
ANR	6360439	PtrMemberAccess	dec_insn . code -> fields		6360402	0					
ANR	6360440	MemberAccess	dec_insn . code		6360402	0					
ANR	6360441	Identifier	dec_insn		6360402	0					
ANR	6360442	Identifier	code		6360402	1					
ANR	6360443	Identifier	fields		6360402	1					
ANR	6360444	Identifier	i		6360402	1					
ANR	6360445	CompoundStatement		6:37:129:129	6360402	1					
ANR	6360446	Label	case FMT_BOL_OFF16 :	323:3:8517:8535	6360402	0	True				
ANR	6360447	Identifier	FMT_BOL_OFF16		6360402	0					
ANR	6360448	ExpressionStatement	o1 = ( dec_insn . opcode & 0x003f0000 ) >> 16	324:4:8541:8582	6360402	1	True				
ANR	6360449	AssignmentExpression	o1 = ( dec_insn . opcode & 0x003f0000 ) >> 16		6360402	0		=			
ANR	6360450	Identifier	o1		6360402	0					
ANR	6360451	ShiftExpression	( dec_insn . opcode & 0x003f0000 ) >> 16		6360402	1		>>			
ANR	6360452	BitAndExpression	dec_insn . opcode & 0x003f0000		6360402	0		&			
ANR	6360453	MemberAccess	dec_insn . opcode		6360402	0					
ANR	6360454	Identifier	dec_insn		6360402	0					
ANR	6360455	Identifier	opcode		6360402	1					
ANR	6360456	PrimaryExpression	0x003f0000		6360402	1					
ANR	6360457	PrimaryExpression	16		6360402	1					
ANR	6360458	ExpressionStatement	o2 = ( dec_insn . opcode & 0xf0000000 ) >> 22	325:4:8588:8629	6360402	2	True				
ANR	6360459	AssignmentExpression	o2 = ( dec_insn . opcode & 0xf0000000 ) >> 22		6360402	0		=			
ANR	6360460	Identifier	o2		6360402	0					
ANR	6360461	ShiftExpression	( dec_insn . opcode & 0xf0000000 ) >> 22		6360402	1		>>			
ANR	6360462	BitAndExpression	dec_insn . opcode & 0xf0000000		6360402	0		&			
ANR	6360463	MemberAccess	dec_insn . opcode		6360402	0					
ANR	6360464	Identifier	dec_insn		6360402	0					
ANR	6360465	Identifier	opcode		6360402	1					
ANR	6360466	PrimaryExpression	0xf0000000		6360402	1					
ANR	6360467	PrimaryExpression	22		6360402	1					
ANR	6360468	ExpressionStatement	o3 = ( dec_insn . opcode & 0x0fc00000 ) >> 12	326:4:8635:8676	6360402	3	True				
ANR	6360469	AssignmentExpression	o3 = ( dec_insn . opcode & 0x0fc00000 ) >> 12		6360402	0		=			
ANR	6360470	Identifier	o3		6360402	0					
ANR	6360471	ShiftExpression	( dec_insn . opcode & 0x0fc00000 ) >> 12		6360402	1		>>			
ANR	6360472	BitAndExpression	dec_insn . opcode & 0x0fc00000		6360402	0		&			
ANR	6360473	MemberAccess	dec_insn . opcode		6360402	0					
ANR	6360474	Identifier	dec_insn		6360402	0					
ANR	6360475	Identifier	opcode		6360402	1					
ANR	6360476	PrimaryExpression	0x0fc00000		6360402	1					
ANR	6360477	PrimaryExpression	12		6360402	1					
ANR	6360478	ExpressionStatement	dec_insn . cexp [ i ] = o1 | o2 | o3	327:4:8682:8713	6360402	4	True				
ANR	6360479	AssignmentExpression	dec_insn . cexp [ i ] = o1 | o2 | o3		6360402	0		=			
ANR	6360480	ArrayIndexing	dec_insn . cexp [ i ]		6360402	0					
ANR	6360481	MemberAccess	dec_insn . cexp		6360402	0					
ANR	6360482	Identifier	dec_insn		6360402	0					
ANR	6360483	Identifier	cexp		6360402	1					
ANR	6360484	Identifier	i		6360402	1					
ANR	6360485	InclusiveOrExpression	o1 | o2 | o3		6360402	1		|			
ANR	6360486	Identifier	o1		6360402	0					
ANR	6360487	InclusiveOrExpression	o2 | o3		6360402	1		|			
ANR	6360488	Identifier	o2		6360402	0					
ANR	6360489	Identifier	o3		6360402	1					
ANR	6360490	BreakStatement	break ;	328:4:8719:8724	6360402	5	True				
ANR	6360491	Label	case FMT_BOL_S2 :	330:3:8730:8745	6360402	6	True				
ANR	6360492	Identifier	FMT_BOL_S2		6360402	0					
ANR	6360493	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12	331:4:8751:8806	6360402	7	True				
ANR	6360494	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12		6360402	0		=			
ANR	6360495	ArrayIndexing	dec_insn . regs [ i ]		6360402	0					
ANR	6360496	MemberAccess	dec_insn . regs		6360402	0					
ANR	6360497	Identifier	dec_insn		6360402	0					
ANR	6360498	Identifier	regs		6360402	1					
ANR	6360499	Identifier	i		6360402	1					
ANR	6360500	ShiftExpression	( dec_insn . opcode & 0x0000f000 ) >> 12		6360402	1		>>			
ANR	6360501	BitAndExpression	dec_insn . opcode & 0x0000f000		6360402	0		&			
ANR	6360502	MemberAccess	dec_insn . opcode		6360402	0					
ANR	6360503	Identifier	dec_insn		6360402	0					
ANR	6360504	Identifier	opcode		6360402	1					
ANR	6360505	PrimaryExpression	0x0000f000		6360402	1					
ANR	6360506	PrimaryExpression	12		6360402	1					
ANR	6360507	BreakStatement	break ;	332:4:8812:8817	6360402	8	True				
ANR	6360508	Label	case FMT_BOL_S1_D :	334:3:8823:8840	6360402	9	True				
ANR	6360509	Identifier	FMT_BOL_S1_D		6360402	0					
ANR	6360510	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	335:4:8846:8900	6360402	10	True				
ANR	6360511	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6360402	0		=			
ANR	6360512	ArrayIndexing	dec_insn . regs [ i ]		6360402	0					
ANR	6360513	MemberAccess	dec_insn . regs		6360402	0					
ANR	6360514	Identifier	dec_insn		6360402	0					
ANR	6360515	Identifier	regs		6360402	1					
ANR	6360516	Identifier	i		6360402	1					
ANR	6360517	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6360402	1		>>			
ANR	6360518	BitAndExpression	dec_insn . opcode & 0x00000f00		6360402	0		&			
ANR	6360519	MemberAccess	dec_insn . opcode		6360402	0					
ANR	6360520	Identifier	dec_insn		6360402	0					
ANR	6360521	Identifier	opcode		6360402	1					
ANR	6360522	PrimaryExpression	0x00000f00		6360402	1					
ANR	6360523	PrimaryExpression	8		6360402	1					
ANR	6360524	BreakStatement	break ;	336:4:8906:8911	6360402	11	True				
ANR	6360525	ReturnType	static void		6360402	1					
ANR	6360526	Identifier	decode_bol		6360402	2					
ANR	6360527	ParameterList			6360402	3					
ANR	6360528	CFGEntryNode	ENTRY		6360402		True				
ANR	6360529	CFGExitNode	EXIT		6360402		True				
ANR	6360530	Symbol	o1		6360402						
ANR	6360531	Symbol	dec_insn . code		6360402						
ANR	6360532	Symbol	dec_insn . code -> fields		6360402						
ANR	6360533	Symbol	o2		6360402						
ANR	6360534	Symbol	* dec_insn . cexp		6360402						
ANR	6360535	Symbol	o3		6360402						
ANR	6360536	Symbol	i		6360402						
ANR	6360537	Symbol	* dec_insn . code -> fields		6360402						
ANR	6360538	Symbol	dec_insn . cexp		6360402						
ANR	6360539	Symbol	* dec_insn		6360402						
ANR	6360540	Symbol	dec_insn . code -> nr_operands		6360402						
ANR	6360541	Symbol	* i		6360402						
ANR	6360542	Symbol	dec_insn . regs		6360402						
ANR	6360543	Symbol	* * dec_insn		6360402						
ANR	6360544	Symbol	* dec_insn . code		6360402						
ANR	6360545	Symbol	dec_insn . opcode		6360402						
ANR	6360546	Symbol	dec_insn		6360402						
ANR	6360547	Symbol	* * dec_insn . code		6360402						
ANR	6360548	Symbol	* dec_insn . regs		6360402						
ANR	6360549	Function	decode_brc	341:0:8925:9349							
ANR	6360550	FunctionDef	decode_brc ()		6360549	0					
ANR	6360551	CompoundStatement		343:0:8951:9349	6360549	0					
ANR	6360552	IdentifierDeclStatement	int i ;	344:2:8955:8960	6360549	0	True				
ANR	6360553	IdentifierDecl	i		6360549	0					
ANR	6360554	IdentifierDeclType	int		6360549	0					
ANR	6360555	Identifier	i		6360549	1					
ANR	6360556	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6360549	1					
ANR	6360557	ForInit	i = 0 ;	346:7:8970:8975	6360549	0	True				
ANR	6360558	AssignmentExpression	i = 0		6360549	0		=			
ANR	6360559	Identifier	i		6360549	0					
ANR	6360560	PrimaryExpression	0		6360549	1					
ANR	6360561	Condition	i < dec_insn . code -> nr_operands	346:14:8977:9006	6360549	1	True				
ANR	6360562	RelationalExpression	i < dec_insn . code -> nr_operands		6360549	0		<			
ANR	6360563	Identifier	i		6360549	0					
ANR	6360564	PtrMemberAccess	dec_insn . code -> nr_operands		6360549	1					
ANR	6360565	MemberAccess	dec_insn . code		6360549	0					
ANR	6360566	Identifier	dec_insn		6360549	0					
ANR	6360567	Identifier	code		6360549	1					
ANR	6360568	Identifier	nr_operands		6360549	1					
ANR	6360569	UnaryExpression	++ i	346:46:9009:9011	6360549	2	True				
ANR	6360570	IncDec	++		6360549	0					
ANR	6360571	Identifier	i		6360549	1					
ANR	6360572	CompoundStatement		4:51:62:62	6360549	3					
ANR	6360573	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6360549	0					
ANR	6360574	Condition	dec_insn . code -> fields [ i ]	347:11:9027:9050	6360549	0	True				
ANR	6360575	ArrayIndexing	dec_insn . code -> fields [ i ]		6360549	0					
ANR	6360576	PtrMemberAccess	dec_insn . code -> fields		6360549	0					
ANR	6360577	MemberAccess	dec_insn . code		6360549	0					
ANR	6360578	Identifier	dec_insn		6360549	0					
ANR	6360579	Identifier	code		6360549	1					
ANR	6360580	Identifier	fields		6360549	1					
ANR	6360581	Identifier	i		6360549	1					
ANR	6360582	CompoundStatement		5:37:101:101	6360549	1					
ANR	6360583	Label	case FMT_BRC_DISP15 :	348:3:9058:9077	6360549	0	True				
ANR	6360584	Identifier	FMT_BRC_DISP15		6360549	0					
ANR	6360585	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x7fff0000 ) >> 16	349:4:9083:9138	6360549	1	True				
ANR	6360586	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x7fff0000 ) >> 16		6360549	0		=			
ANR	6360587	ArrayIndexing	dec_insn . cexp [ i ]		6360549	0					
ANR	6360588	MemberAccess	dec_insn . cexp		6360549	0					
ANR	6360589	Identifier	dec_insn		6360549	0					
ANR	6360590	Identifier	cexp		6360549	1					
ANR	6360591	Identifier	i		6360549	1					
ANR	6360592	ShiftExpression	( dec_insn . opcode & 0x7fff0000 ) >> 16		6360549	1		>>			
ANR	6360593	BitAndExpression	dec_insn . opcode & 0x7fff0000		6360549	0		&			
ANR	6360594	MemberAccess	dec_insn . opcode		6360549	0					
ANR	6360595	Identifier	dec_insn		6360549	0					
ANR	6360596	Identifier	opcode		6360549	1					
ANR	6360597	PrimaryExpression	0x7fff0000		6360549	1					
ANR	6360598	PrimaryExpression	16		6360549	1					
ANR	6360599	BreakStatement	break ;	350:4:9144:9149	6360549	2	True				
ANR	6360600	Label	case FMT_BRC_CONST4 :	352:3:9155:9174	6360549	3	True				
ANR	6360601	Identifier	FMT_BRC_CONST4		6360549	0					
ANR	6360602	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12	353:4:9180:9235	6360549	4	True				
ANR	6360603	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12		6360549	0		=			
ANR	6360604	ArrayIndexing	dec_insn . cexp [ i ]		6360549	0					
ANR	6360605	MemberAccess	dec_insn . cexp		6360549	0					
ANR	6360606	Identifier	dec_insn		6360549	0					
ANR	6360607	Identifier	cexp		6360549	1					
ANR	6360608	Identifier	i		6360549	1					
ANR	6360609	ShiftExpression	( dec_insn . opcode & 0x0000f000 ) >> 12		6360549	1		>>			
ANR	6360610	BitAndExpression	dec_insn . opcode & 0x0000f000		6360549	0		&			
ANR	6360611	MemberAccess	dec_insn . opcode		6360549	0					
ANR	6360612	Identifier	dec_insn		6360549	0					
ANR	6360613	Identifier	opcode		6360549	1					
ANR	6360614	PrimaryExpression	0x0000f000		6360549	1					
ANR	6360615	PrimaryExpression	12		6360549	1					
ANR	6360616	BreakStatement	break ;	354:4:9241:9246	6360549	5	True				
ANR	6360617	Label	case FMT_BRC_S1 :	356:3:9252:9267	6360549	6	True				
ANR	6360618	Identifier	FMT_BRC_S1		6360549	0					
ANR	6360619	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	357:4:9273:9327	6360549	7	True				
ANR	6360620	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6360549	0		=			
ANR	6360621	ArrayIndexing	dec_insn . regs [ i ]		6360549	0					
ANR	6360622	MemberAccess	dec_insn . regs		6360549	0					
ANR	6360623	Identifier	dec_insn		6360549	0					
ANR	6360624	Identifier	regs		6360549	1					
ANR	6360625	Identifier	i		6360549	1					
ANR	6360626	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6360549	1		>>			
ANR	6360627	BitAndExpression	dec_insn . opcode & 0x00000f00		6360549	0		&			
ANR	6360628	MemberAccess	dec_insn . opcode		6360549	0					
ANR	6360629	Identifier	dec_insn		6360549	0					
ANR	6360630	Identifier	opcode		6360549	1					
ANR	6360631	PrimaryExpression	0x00000f00		6360549	1					
ANR	6360632	PrimaryExpression	8		6360549	1					
ANR	6360633	BreakStatement	break ;	358:4:9333:9338	6360549	8	True				
ANR	6360634	ReturnType	static void		6360549	1					
ANR	6360635	Identifier	decode_brc		6360549	2					
ANR	6360636	ParameterList			6360549	3					
ANR	6360637	CFGEntryNode	ENTRY		6360549		True				
ANR	6360638	CFGExitNode	EXIT		6360549		True				
ANR	6360639	Symbol	dec_insn . code		6360549						
ANR	6360640	Symbol	dec_insn . code -> fields		6360549						
ANR	6360641	Symbol	* dec_insn . cexp		6360549						
ANR	6360642	Symbol	i		6360549						
ANR	6360643	Symbol	* dec_insn . code -> fields		6360549						
ANR	6360644	Symbol	dec_insn . cexp		6360549						
ANR	6360645	Symbol	* dec_insn		6360549						
ANR	6360646	Symbol	dec_insn . code -> nr_operands		6360549						
ANR	6360647	Symbol	* i		6360549						
ANR	6360648	Symbol	dec_insn . regs		6360549						
ANR	6360649	Symbol	* * dec_insn		6360549						
ANR	6360650	Symbol	* dec_insn . code		6360549						
ANR	6360651	Symbol	dec_insn . opcode		6360549						
ANR	6360652	Symbol	dec_insn		6360549						
ANR	6360653	Symbol	* * dec_insn . code		6360549						
ANR	6360654	Symbol	* dec_insn . regs		6360549						
ANR	6360655	Function	decode_brn	363:0:9352:9832							
ANR	6360656	FunctionDef	decode_brn ()		6360655	0					
ANR	6360657	CompoundStatement		365:0:9378:9832	6360655	0					
ANR	6360658	IdentifierDeclStatement	int i ;	366:2:9382:9387	6360655	0	True				
ANR	6360659	IdentifierDecl	i		6360655	0					
ANR	6360660	IdentifierDeclType	int		6360655	0					
ANR	6360661	Identifier	i		6360655	1					
ANR	6360662	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6360655	1					
ANR	6360663	ForInit	i = 0 ;	368:7:9397:9402	6360655	0	True				
ANR	6360664	AssignmentExpression	i = 0		6360655	0		=			
ANR	6360665	Identifier	i		6360655	0					
ANR	6360666	PrimaryExpression	0		6360655	1					
ANR	6360667	Condition	i < dec_insn . code -> nr_operands	368:14:9404:9433	6360655	1	True				
ANR	6360668	RelationalExpression	i < dec_insn . code -> nr_operands		6360655	0		<			
ANR	6360669	Identifier	i		6360655	0					
ANR	6360670	PtrMemberAccess	dec_insn . code -> nr_operands		6360655	1					
ANR	6360671	MemberAccess	dec_insn . code		6360655	0					
ANR	6360672	Identifier	dec_insn		6360655	0					
ANR	6360673	Identifier	code		6360655	1					
ANR	6360674	Identifier	nr_operands		6360655	1					
ANR	6360675	UnaryExpression	++ i	368:46:9436:9438	6360655	2	True				
ANR	6360676	IncDec	++		6360655	0					
ANR	6360677	Identifier	i		6360655	1					
ANR	6360678	CompoundStatement		4:51:62:62	6360655	3					
ANR	6360679	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6360655	0					
ANR	6360680	Condition	dec_insn . code -> fields [ i ]	369:11:9454:9477	6360655	0	True				
ANR	6360681	ArrayIndexing	dec_insn . code -> fields [ i ]		6360655	0					
ANR	6360682	PtrMemberAccess	dec_insn . code -> fields		6360655	0					
ANR	6360683	MemberAccess	dec_insn . code		6360655	0					
ANR	6360684	Identifier	dec_insn		6360655	0					
ANR	6360685	Identifier	code		6360655	1					
ANR	6360686	Identifier	fields		6360655	1					
ANR	6360687	Identifier	i		6360655	1					
ANR	6360688	CompoundStatement		5:37:101:101	6360655	1					
ANR	6360689	Label	case FMT_BRN_DISP15 :	370:3:9485:9504	6360655	0	True				
ANR	6360690	Identifier	FMT_BRN_DISP15		6360655	0					
ANR	6360691	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x7fff0000 ) >> 16	371:4:9510:9565	6360655	1	True				
ANR	6360692	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x7fff0000 ) >> 16		6360655	0		=			
ANR	6360693	ArrayIndexing	dec_insn . cexp [ i ]		6360655	0					
ANR	6360694	MemberAccess	dec_insn . cexp		6360655	0					
ANR	6360695	Identifier	dec_insn		6360655	0					
ANR	6360696	Identifier	cexp		6360655	1					
ANR	6360697	Identifier	i		6360655	1					
ANR	6360698	ShiftExpression	( dec_insn . opcode & 0x7fff0000 ) >> 16		6360655	1		>>			
ANR	6360699	BitAndExpression	dec_insn . opcode & 0x7fff0000		6360655	0		&			
ANR	6360700	MemberAccess	dec_insn . opcode		6360655	0					
ANR	6360701	Identifier	dec_insn		6360655	0					
ANR	6360702	Identifier	opcode		6360655	1					
ANR	6360703	PrimaryExpression	0x7fff0000		6360655	1					
ANR	6360704	PrimaryExpression	16		6360655	1					
ANR	6360705	BreakStatement	break ;	372:4:9571:9576	6360655	2	True				
ANR	6360706	Label	case FMT_BRN_N :	374:3:9582:9596	6360655	3	True				
ANR	6360707	Identifier	FMT_BRN_N		6360655	0					
ANR	6360708	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12	375:4:9602:9657	6360655	4	True				
ANR	6360709	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12		6360655	0		=			
ANR	6360710	ArrayIndexing	dec_insn . cexp [ i ]		6360655	0					
ANR	6360711	MemberAccess	dec_insn . cexp		6360655	0					
ANR	6360712	Identifier	dec_insn		6360655	0					
ANR	6360713	Identifier	cexp		6360655	1					
ANR	6360714	Identifier	i		6360655	1					
ANR	6360715	ShiftExpression	( dec_insn . opcode & 0x0000f000 ) >> 12		6360655	1		>>			
ANR	6360716	BitAndExpression	dec_insn . opcode & 0x0000f000		6360655	0		&			
ANR	6360717	MemberAccess	dec_insn . opcode		6360655	0					
ANR	6360718	Identifier	dec_insn		6360655	0					
ANR	6360719	Identifier	opcode		6360655	1					
ANR	6360720	PrimaryExpression	0x0000f000		6360655	1					
ANR	6360721	PrimaryExpression	12		6360655	1					
ANR	6360722	ExpressionStatement	dec_insn . cexp [ i ] |= ( dec_insn . opcode & 0x00000080 ) >> 3	376:4:9663:9718	6360655	5	True				
ANR	6360723	AssignmentExpression	dec_insn . cexp [ i ] |= ( dec_insn . opcode & 0x00000080 ) >> 3		6360655	0		|=			
ANR	6360724	ArrayIndexing	dec_insn . cexp [ i ]		6360655	0					
ANR	6360725	MemberAccess	dec_insn . cexp		6360655	0					
ANR	6360726	Identifier	dec_insn		6360655	0					
ANR	6360727	Identifier	cexp		6360655	1					
ANR	6360728	Identifier	i		6360655	1					
ANR	6360729	ShiftExpression	( dec_insn . opcode & 0x00000080 ) >> 3		6360655	1		>>			
ANR	6360730	BitAndExpression	dec_insn . opcode & 0x00000080		6360655	0		&			
ANR	6360731	MemberAccess	dec_insn . opcode		6360655	0					
ANR	6360732	Identifier	dec_insn		6360655	0					
ANR	6360733	Identifier	opcode		6360655	1					
ANR	6360734	PrimaryExpression	0x00000080		6360655	1					
ANR	6360735	PrimaryExpression	3		6360655	1					
ANR	6360736	BreakStatement	break ;	377:4:9724:9729	6360655	6	True				
ANR	6360737	Label	case FMT_BRN_S1 :	379:3:9735:9750	6360655	7	True				
ANR	6360738	Identifier	FMT_BRN_S1		6360655	0					
ANR	6360739	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	380:4:9756:9810	6360655	8	True				
ANR	6360740	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6360655	0		=			
ANR	6360741	ArrayIndexing	dec_insn . regs [ i ]		6360655	0					
ANR	6360742	MemberAccess	dec_insn . regs		6360655	0					
ANR	6360743	Identifier	dec_insn		6360655	0					
ANR	6360744	Identifier	regs		6360655	1					
ANR	6360745	Identifier	i		6360655	1					
ANR	6360746	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6360655	1		>>			
ANR	6360747	BitAndExpression	dec_insn . opcode & 0x00000f00		6360655	0		&			
ANR	6360748	MemberAccess	dec_insn . opcode		6360655	0					
ANR	6360749	Identifier	dec_insn		6360655	0					
ANR	6360750	Identifier	opcode		6360655	1					
ANR	6360751	PrimaryExpression	0x00000f00		6360655	1					
ANR	6360752	PrimaryExpression	8		6360655	1					
ANR	6360753	BreakStatement	break ;	381:4:9816:9821	6360655	9	True				
ANR	6360754	ReturnType	static void		6360655	1					
ANR	6360755	Identifier	decode_brn		6360655	2					
ANR	6360756	ParameterList			6360655	3					
ANR	6360757	CFGEntryNode	ENTRY		6360655		True				
ANR	6360758	CFGExitNode	EXIT		6360655		True				
ANR	6360759	Symbol	dec_insn . code		6360655						
ANR	6360760	Symbol	dec_insn . code -> fields		6360655						
ANR	6360761	Symbol	* dec_insn . cexp		6360655						
ANR	6360762	Symbol	i		6360655						
ANR	6360763	Symbol	* dec_insn . code -> fields		6360655						
ANR	6360764	Symbol	dec_insn . cexp		6360655						
ANR	6360765	Symbol	* dec_insn		6360655						
ANR	6360766	Symbol	dec_insn . code -> nr_operands		6360655						
ANR	6360767	Symbol	* i		6360655						
ANR	6360768	Symbol	dec_insn . regs		6360655						
ANR	6360769	Symbol	* * dec_insn		6360655						
ANR	6360770	Symbol	* dec_insn . code		6360655						
ANR	6360771	Symbol	dec_insn . opcode		6360655						
ANR	6360772	Symbol	dec_insn		6360655						
ANR	6360773	Symbol	* * dec_insn . code		6360655						
ANR	6360774	Symbol	* dec_insn . regs		6360655						
ANR	6360775	Function	decode_brr	386:0:9835:10255							
ANR	6360776	FunctionDef	decode_brr ()		6360775	0					
ANR	6360777	CompoundStatement		388:0:9861:10255	6360775	0					
ANR	6360778	IdentifierDeclStatement	int i ;	389:2:9865:9870	6360775	0	True				
ANR	6360779	IdentifierDecl	i		6360775	0					
ANR	6360780	IdentifierDeclType	int		6360775	0					
ANR	6360781	Identifier	i		6360775	1					
ANR	6360782	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6360775	1					
ANR	6360783	ForInit	i = 0 ;	391:7:9880:9885	6360775	0	True				
ANR	6360784	AssignmentExpression	i = 0		6360775	0		=			
ANR	6360785	Identifier	i		6360775	0					
ANR	6360786	PrimaryExpression	0		6360775	1					
ANR	6360787	Condition	i < dec_insn . code -> nr_operands	391:14:9887:9916	6360775	1	True				
ANR	6360788	RelationalExpression	i < dec_insn . code -> nr_operands		6360775	0		<			
ANR	6360789	Identifier	i		6360775	0					
ANR	6360790	PtrMemberAccess	dec_insn . code -> nr_operands		6360775	1					
ANR	6360791	MemberAccess	dec_insn . code		6360775	0					
ANR	6360792	Identifier	dec_insn		6360775	0					
ANR	6360793	Identifier	code		6360775	1					
ANR	6360794	Identifier	nr_operands		6360775	1					
ANR	6360795	UnaryExpression	++ i	391:46:9919:9921	6360775	2	True				
ANR	6360796	IncDec	++		6360775	0					
ANR	6360797	Identifier	i		6360775	1					
ANR	6360798	CompoundStatement		4:51:62:62	6360775	3					
ANR	6360799	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6360775	0					
ANR	6360800	Condition	dec_insn . code -> fields [ i ]	392:11:9937:9960	6360775	0	True				
ANR	6360801	ArrayIndexing	dec_insn . code -> fields [ i ]		6360775	0					
ANR	6360802	PtrMemberAccess	dec_insn . code -> fields		6360775	0					
ANR	6360803	MemberAccess	dec_insn . code		6360775	0					
ANR	6360804	Identifier	dec_insn		6360775	0					
ANR	6360805	Identifier	code		6360775	1					
ANR	6360806	Identifier	fields		6360775	1					
ANR	6360807	Identifier	i		6360775	1					
ANR	6360808	CompoundStatement		5:37:101:101	6360775	1					
ANR	6360809	Label	case FMT_BRR_DISP15 :	393:3:9968:9987	6360775	0	True				
ANR	6360810	Identifier	FMT_BRR_DISP15		6360775	0					
ANR	6360811	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x7fff0000 ) >> 16	394:4:9993:10048	6360775	1	True				
ANR	6360812	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x7fff0000 ) >> 16		6360775	0		=			
ANR	6360813	ArrayIndexing	dec_insn . cexp [ i ]		6360775	0					
ANR	6360814	MemberAccess	dec_insn . cexp		6360775	0					
ANR	6360815	Identifier	dec_insn		6360775	0					
ANR	6360816	Identifier	cexp		6360775	1					
ANR	6360817	Identifier	i		6360775	1					
ANR	6360818	ShiftExpression	( dec_insn . opcode & 0x7fff0000 ) >> 16		6360775	1		>>			
ANR	6360819	BitAndExpression	dec_insn . opcode & 0x7fff0000		6360775	0		&			
ANR	6360820	MemberAccess	dec_insn . opcode		6360775	0					
ANR	6360821	Identifier	dec_insn		6360775	0					
ANR	6360822	Identifier	opcode		6360775	1					
ANR	6360823	PrimaryExpression	0x7fff0000		6360775	1					
ANR	6360824	PrimaryExpression	16		6360775	1					
ANR	6360825	BreakStatement	break ;	395:4:10054:10059	6360775	2	True				
ANR	6360826	Label	case FMT_BRR_S2 :	397:3:10065:10080	6360775	3	True				
ANR	6360827	Identifier	FMT_BRR_S2		6360775	0					
ANR	6360828	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12	398:4:10086:10141	6360775	4	True				
ANR	6360829	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12		6360775	0		=			
ANR	6360830	ArrayIndexing	dec_insn . regs [ i ]		6360775	0					
ANR	6360831	MemberAccess	dec_insn . regs		6360775	0					
ANR	6360832	Identifier	dec_insn		6360775	0					
ANR	6360833	Identifier	regs		6360775	1					
ANR	6360834	Identifier	i		6360775	1					
ANR	6360835	ShiftExpression	( dec_insn . opcode & 0x0000f000 ) >> 12		6360775	1		>>			
ANR	6360836	BitAndExpression	dec_insn . opcode & 0x0000f000		6360775	0		&			
ANR	6360837	MemberAccess	dec_insn . opcode		6360775	0					
ANR	6360838	Identifier	dec_insn		6360775	0					
ANR	6360839	Identifier	opcode		6360775	1					
ANR	6360840	PrimaryExpression	0x0000f000		6360775	1					
ANR	6360841	PrimaryExpression	12		6360775	1					
ANR	6360842	BreakStatement	break ;	399:4:10147:10152	6360775	5	True				
ANR	6360843	Label	case FMT_BRR_S1 :	401:3:10158:10173	6360775	6	True				
ANR	6360844	Identifier	FMT_BRR_S1		6360775	0					
ANR	6360845	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	402:4:10179:10233	6360775	7	True				
ANR	6360846	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6360775	0		=			
ANR	6360847	ArrayIndexing	dec_insn . regs [ i ]		6360775	0					
ANR	6360848	MemberAccess	dec_insn . regs		6360775	0					
ANR	6360849	Identifier	dec_insn		6360775	0					
ANR	6360850	Identifier	regs		6360775	1					
ANR	6360851	Identifier	i		6360775	1					
ANR	6360852	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6360775	1		>>			
ANR	6360853	BitAndExpression	dec_insn . opcode & 0x00000f00		6360775	0		&			
ANR	6360854	MemberAccess	dec_insn . opcode		6360775	0					
ANR	6360855	Identifier	dec_insn		6360775	0					
ANR	6360856	Identifier	opcode		6360775	1					
ANR	6360857	PrimaryExpression	0x00000f00		6360775	1					
ANR	6360858	PrimaryExpression	8		6360775	1					
ANR	6360859	BreakStatement	break ;	403:4:10239:10244	6360775	8	True				
ANR	6360860	ReturnType	static void		6360775	1					
ANR	6360861	Identifier	decode_brr		6360775	2					
ANR	6360862	ParameterList			6360775	3					
ANR	6360863	CFGEntryNode	ENTRY		6360775		True				
ANR	6360864	CFGExitNode	EXIT		6360775		True				
ANR	6360865	Symbol	dec_insn . code		6360775						
ANR	6360866	Symbol	dec_insn . code -> fields		6360775						
ANR	6360867	Symbol	* dec_insn . cexp		6360775						
ANR	6360868	Symbol	i		6360775						
ANR	6360869	Symbol	* dec_insn . code -> fields		6360775						
ANR	6360870	Symbol	dec_insn . cexp		6360775						
ANR	6360871	Symbol	* dec_insn		6360775						
ANR	6360872	Symbol	dec_insn . code -> nr_operands		6360775						
ANR	6360873	Symbol	* i		6360775						
ANR	6360874	Symbol	dec_insn . regs		6360775						
ANR	6360875	Symbol	* * dec_insn		6360775						
ANR	6360876	Symbol	* dec_insn . code		6360775						
ANR	6360877	Symbol	dec_insn . opcode		6360775						
ANR	6360878	Symbol	dec_insn		6360775						
ANR	6360879	Symbol	* * dec_insn . code		6360775						
ANR	6360880	Symbol	* dec_insn . regs		6360775						
ANR	6360881	Function	decode_rc	408:0:10258:10662							
ANR	6360882	FunctionDef	decode_rc ()		6360881	0					
ANR	6360883	CompoundStatement		410:0:10283:10662	6360881	0					
ANR	6360884	IdentifierDeclStatement	int i ;	411:2:10287:10292	6360881	0	True				
ANR	6360885	IdentifierDecl	i		6360881	0					
ANR	6360886	IdentifierDeclType	int		6360881	0					
ANR	6360887	Identifier	i		6360881	1					
ANR	6360888	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6360881	1					
ANR	6360889	ForInit	i = 0 ;	413:7:10302:10307	6360881	0	True				
ANR	6360890	AssignmentExpression	i = 0		6360881	0		=			
ANR	6360891	Identifier	i		6360881	0					
ANR	6360892	PrimaryExpression	0		6360881	1					
ANR	6360893	Condition	i < dec_insn . code -> nr_operands	413:14:10309:10338	6360881	1	True				
ANR	6360894	RelationalExpression	i < dec_insn . code -> nr_operands		6360881	0		<			
ANR	6360895	Identifier	i		6360881	0					
ANR	6360896	PtrMemberAccess	dec_insn . code -> nr_operands		6360881	1					
ANR	6360897	MemberAccess	dec_insn . code		6360881	0					
ANR	6360898	Identifier	dec_insn		6360881	0					
ANR	6360899	Identifier	code		6360881	1					
ANR	6360900	Identifier	nr_operands		6360881	1					
ANR	6360901	UnaryExpression	++ i	413:46:10341:10343	6360881	2	True				
ANR	6360902	IncDec	++		6360881	0					
ANR	6360903	Identifier	i		6360881	1					
ANR	6360904	CompoundStatement		4:51:62:62	6360881	3					
ANR	6360905	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6360881	0					
ANR	6360906	Condition	dec_insn . code -> fields [ i ]	414:11:10359:10382	6360881	0	True				
ANR	6360907	ArrayIndexing	dec_insn . code -> fields [ i ]		6360881	0					
ANR	6360908	PtrMemberAccess	dec_insn . code -> fields		6360881	0					
ANR	6360909	MemberAccess	dec_insn . code		6360881	0					
ANR	6360910	Identifier	dec_insn		6360881	0					
ANR	6360911	Identifier	code		6360881	1					
ANR	6360912	Identifier	fields		6360881	1					
ANR	6360913	Identifier	i		6360881	1					
ANR	6360914	CompoundStatement		5:37:101:101	6360881	1					
ANR	6360915	Label	case FMT_RC_D :	415:3:10390:10403	6360881	0	True				
ANR	6360916	Identifier	FMT_RC_D		6360881	0					
ANR	6360917	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28	416:4:10409:10464	6360881	1	True				
ANR	6360918	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28		6360881	0		=			
ANR	6360919	ArrayIndexing	dec_insn . regs [ i ]		6360881	0					
ANR	6360920	MemberAccess	dec_insn . regs		6360881	0					
ANR	6360921	Identifier	dec_insn		6360881	0					
ANR	6360922	Identifier	regs		6360881	1					
ANR	6360923	Identifier	i		6360881	1					
ANR	6360924	ShiftExpression	( dec_insn . opcode & 0xf0000000 ) >> 28		6360881	1		>>			
ANR	6360925	BitAndExpression	dec_insn . opcode & 0xf0000000		6360881	0		&			
ANR	6360926	MemberAccess	dec_insn . opcode		6360881	0					
ANR	6360927	Identifier	dec_insn		6360881	0					
ANR	6360928	Identifier	opcode		6360881	1					
ANR	6360929	PrimaryExpression	0xf0000000		6360881	1					
ANR	6360930	PrimaryExpression	28		6360881	1					
ANR	6360931	BreakStatement	break ;	417:4:10470:10475	6360881	2	True				
ANR	6360932	Label	case FMT_RC_CONST9 :	419:3:10481:10499	6360881	3	True				
ANR	6360933	Identifier	FMT_RC_CONST9		6360881	0					
ANR	6360934	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x001ff000 ) >> 12	420:4:10505:10560	6360881	4	True				
ANR	6360935	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x001ff000 ) >> 12		6360881	0		=			
ANR	6360936	ArrayIndexing	dec_insn . cexp [ i ]		6360881	0					
ANR	6360937	MemberAccess	dec_insn . cexp		6360881	0					
ANR	6360938	Identifier	dec_insn		6360881	0					
ANR	6360939	Identifier	cexp		6360881	1					
ANR	6360940	Identifier	i		6360881	1					
ANR	6360941	ShiftExpression	( dec_insn . opcode & 0x001ff000 ) >> 12		6360881	1		>>			
ANR	6360942	BitAndExpression	dec_insn . opcode & 0x001ff000		6360881	0		&			
ANR	6360943	MemberAccess	dec_insn . opcode		6360881	0					
ANR	6360944	Identifier	dec_insn		6360881	0					
ANR	6360945	Identifier	opcode		6360881	1					
ANR	6360946	PrimaryExpression	0x001ff000		6360881	1					
ANR	6360947	PrimaryExpression	12		6360881	1					
ANR	6360948	BreakStatement	break ;	421:4:10566:10571	6360881	5	True				
ANR	6360949	Label	case FMT_RC_S1 :	423:3:10577:10591	6360881	6	True				
ANR	6360950	Identifier	FMT_RC_S1		6360881	0					
ANR	6360951	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	424:4:10597:10651	6360881	7	True				
ANR	6360952	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6360881	0		=			
ANR	6360953	ArrayIndexing	dec_insn . regs [ i ]		6360881	0					
ANR	6360954	MemberAccess	dec_insn . regs		6360881	0					
ANR	6360955	Identifier	dec_insn		6360881	0					
ANR	6360956	Identifier	regs		6360881	1					
ANR	6360957	Identifier	i		6360881	1					
ANR	6360958	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6360881	1		>>			
ANR	6360959	BitAndExpression	dec_insn . opcode & 0x00000f00		6360881	0		&			
ANR	6360960	MemberAccess	dec_insn . opcode		6360881	0					
ANR	6360961	Identifier	dec_insn		6360881	0					
ANR	6360962	Identifier	opcode		6360881	1					
ANR	6360963	PrimaryExpression	0x00000f00		6360881	1					
ANR	6360964	PrimaryExpression	8		6360881	1					
ANR	6360965	ReturnType	static void		6360881	1					
ANR	6360966	Identifier	decode_rc		6360881	2					
ANR	6360967	ParameterList			6360881	3					
ANR	6360968	CFGEntryNode	ENTRY		6360881		True				
ANR	6360969	CFGExitNode	EXIT		6360881		True				
ANR	6360970	Symbol	dec_insn . code		6360881						
ANR	6360971	Symbol	dec_insn . code -> fields		6360881						
ANR	6360972	Symbol	* dec_insn . cexp		6360881						
ANR	6360973	Symbol	i		6360881						
ANR	6360974	Symbol	* dec_insn . code -> fields		6360881						
ANR	6360975	Symbol	dec_insn . cexp		6360881						
ANR	6360976	Symbol	* dec_insn		6360881						
ANR	6360977	Symbol	dec_insn . code -> nr_operands		6360881						
ANR	6360978	Symbol	* i		6360881						
ANR	6360979	Symbol	dec_insn . regs		6360881						
ANR	6360980	Symbol	* * dec_insn		6360881						
ANR	6360981	Symbol	* dec_insn . code		6360881						
ANR	6360982	Symbol	dec_insn . opcode		6360881						
ANR	6360983	Symbol	dec_insn		6360881						
ANR	6360984	Symbol	* * dec_insn . code		6360881						
ANR	6360985	Symbol	* dec_insn . regs		6360881						
ANR	6360986	Function	decode_rcpw	429:0:10665:11274							
ANR	6360987	FunctionDef	decode_rcpw ()		6360986	0					
ANR	6360988	CompoundStatement		431:0:10692:11274	6360986	0					
ANR	6360989	IdentifierDeclStatement	int i ;	432:2:10696:10701	6360986	0	True				
ANR	6360990	IdentifierDecl	i		6360986	0					
ANR	6360991	IdentifierDeclType	int		6360986	0					
ANR	6360992	Identifier	i		6360986	1					
ANR	6360993	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6360986	1					
ANR	6360994	ForInit	i = 0 ;	434:7:10711:10716	6360986	0	True				
ANR	6360995	AssignmentExpression	i = 0		6360986	0		=			
ANR	6360996	Identifier	i		6360986	0					
ANR	6360997	PrimaryExpression	0		6360986	1					
ANR	6360998	Condition	i < dec_insn . code -> nr_operands	434:14:10718:10747	6360986	1	True				
ANR	6360999	RelationalExpression	i < dec_insn . code -> nr_operands		6360986	0		<			
ANR	6361000	Identifier	i		6360986	0					
ANR	6361001	PtrMemberAccess	dec_insn . code -> nr_operands		6360986	1					
ANR	6361002	MemberAccess	dec_insn . code		6360986	0					
ANR	6361003	Identifier	dec_insn		6360986	0					
ANR	6361004	Identifier	code		6360986	1					
ANR	6361005	Identifier	nr_operands		6360986	1					
ANR	6361006	UnaryExpression	++ i	434:46:10750:10752	6360986	2	True				
ANR	6361007	IncDec	++		6360986	0					
ANR	6361008	Identifier	i		6360986	1					
ANR	6361009	CompoundStatement		4:51:62:62	6360986	3					
ANR	6361010	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6360986	0					
ANR	6361011	Condition	dec_insn . code -> fields [ i ]	435:11:10768:10791	6360986	0	True				
ANR	6361012	ArrayIndexing	dec_insn . code -> fields [ i ]		6360986	0					
ANR	6361013	PtrMemberAccess	dec_insn . code -> fields		6360986	0					
ANR	6361014	MemberAccess	dec_insn . code		6360986	0					
ANR	6361015	Identifier	dec_insn		6360986	0					
ANR	6361016	Identifier	code		6360986	1					
ANR	6361017	Identifier	fields		6360986	1					
ANR	6361018	Identifier	i		6360986	1					
ANR	6361019	CompoundStatement		5:37:101:101	6360986	1					
ANR	6361020	Label	case FMT_RCPW_D :	436:3:10799:10814	6360986	0	True				
ANR	6361021	Identifier	FMT_RCPW_D		6360986	0					
ANR	6361022	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28	437:4:10820:10875	6360986	1	True				
ANR	6361023	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28		6360986	0		=			
ANR	6361024	ArrayIndexing	dec_insn . regs [ i ]		6360986	0					
ANR	6361025	MemberAccess	dec_insn . regs		6360986	0					
ANR	6361026	Identifier	dec_insn		6360986	0					
ANR	6361027	Identifier	regs		6360986	1					
ANR	6361028	Identifier	i		6360986	1					
ANR	6361029	ShiftExpression	( dec_insn . opcode & 0xf0000000 ) >> 28		6360986	1		>>			
ANR	6361030	BitAndExpression	dec_insn . opcode & 0xf0000000		6360986	0		&			
ANR	6361031	MemberAccess	dec_insn . opcode		6360986	0					
ANR	6361032	Identifier	dec_insn		6360986	0					
ANR	6361033	Identifier	opcode		6360986	1					
ANR	6361034	PrimaryExpression	0xf0000000		6360986	1					
ANR	6361035	PrimaryExpression	28		6360986	1					
ANR	6361036	BreakStatement	break ;	438:4:10881:10886	6360986	2	True				
ANR	6361037	Label	case FMT_RCPW_P :	440:3:10892:10907	6360986	3	True				
ANR	6361038	Identifier	FMT_RCPW_P		6360986	0					
ANR	6361039	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0f800000 ) >> 23	441:4:10913:10968	6360986	4	True				
ANR	6361040	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0f800000 ) >> 23		6360986	0		=			
ANR	6361041	ArrayIndexing	dec_insn . cexp [ i ]		6360986	0					
ANR	6361042	MemberAccess	dec_insn . cexp		6360986	0					
ANR	6361043	Identifier	dec_insn		6360986	0					
ANR	6361044	Identifier	cexp		6360986	1					
ANR	6361045	Identifier	i		6360986	1					
ANR	6361046	ShiftExpression	( dec_insn . opcode & 0x0f800000 ) >> 23		6360986	1		>>			
ANR	6361047	BitAndExpression	dec_insn . opcode & 0x0f800000		6360986	0		&			
ANR	6361048	MemberAccess	dec_insn . opcode		6360986	0					
ANR	6361049	Identifier	dec_insn		6360986	0					
ANR	6361050	Identifier	opcode		6360986	1					
ANR	6361051	PrimaryExpression	0x0f800000		6360986	1					
ANR	6361052	PrimaryExpression	23		6360986	1					
ANR	6361053	BreakStatement	break ;	442:4:10974:10979	6360986	5	True				
ANR	6361054	Label	case FMT_RCPW_W :	444:3:10985:11000	6360986	6	True				
ANR	6361055	Identifier	FMT_RCPW_W		6360986	0					
ANR	6361056	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x001f0000 ) >> 16	445:4:11006:11061	6360986	7	True				
ANR	6361057	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x001f0000 ) >> 16		6360986	0		=			
ANR	6361058	ArrayIndexing	dec_insn . cexp [ i ]		6360986	0					
ANR	6361059	MemberAccess	dec_insn . cexp		6360986	0					
ANR	6361060	Identifier	dec_insn		6360986	0					
ANR	6361061	Identifier	cexp		6360986	1					
ANR	6361062	Identifier	i		6360986	1					
ANR	6361063	ShiftExpression	( dec_insn . opcode & 0x001f0000 ) >> 16		6360986	1		>>			
ANR	6361064	BitAndExpression	dec_insn . opcode & 0x001f0000		6360986	0		&			
ANR	6361065	MemberAccess	dec_insn . opcode		6360986	0					
ANR	6361066	Identifier	dec_insn		6360986	0					
ANR	6361067	Identifier	opcode		6360986	1					
ANR	6361068	PrimaryExpression	0x001f0000		6360986	1					
ANR	6361069	PrimaryExpression	16		6360986	1					
ANR	6361070	BreakStatement	break ;	446:4:11067:11072	6360986	8	True				
ANR	6361071	Label	case FMT_RCPW_CONST4 :	448:3:11078:11098	6360986	9	True				
ANR	6361072	Identifier	FMT_RCPW_CONST4		6360986	0					
ANR	6361073	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12	449:4:11104:11159	6360986	10	True				
ANR	6361074	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12		6360986	0		=			
ANR	6361075	ArrayIndexing	dec_insn . cexp [ i ]		6360986	0					
ANR	6361076	MemberAccess	dec_insn . cexp		6360986	0					
ANR	6361077	Identifier	dec_insn		6360986	0					
ANR	6361078	Identifier	cexp		6360986	1					
ANR	6361079	Identifier	i		6360986	1					
ANR	6361080	ShiftExpression	( dec_insn . opcode & 0x0000f000 ) >> 12		6360986	1		>>			
ANR	6361081	BitAndExpression	dec_insn . opcode & 0x0000f000		6360986	0		&			
ANR	6361082	MemberAccess	dec_insn . opcode		6360986	0					
ANR	6361083	Identifier	dec_insn		6360986	0					
ANR	6361084	Identifier	opcode		6360986	1					
ANR	6361085	PrimaryExpression	0x0000f000		6360986	1					
ANR	6361086	PrimaryExpression	12		6360986	1					
ANR	6361087	BreakStatement	break ;	450:4:11165:11170	6360986	11	True				
ANR	6361088	Label	case FMT_RCPW_S1 :	452:3:11176:11192	6360986	12	True				
ANR	6361089	Identifier	FMT_RCPW_S1		6360986	0					
ANR	6361090	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	453:4:11198:11252	6360986	13	True				
ANR	6361091	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6360986	0		=			
ANR	6361092	ArrayIndexing	dec_insn . regs [ i ]		6360986	0					
ANR	6361093	MemberAccess	dec_insn . regs		6360986	0					
ANR	6361094	Identifier	dec_insn		6360986	0					
ANR	6361095	Identifier	regs		6360986	1					
ANR	6361096	Identifier	i		6360986	1					
ANR	6361097	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6360986	1		>>			
ANR	6361098	BitAndExpression	dec_insn . opcode & 0x00000f00		6360986	0		&			
ANR	6361099	MemberAccess	dec_insn . opcode		6360986	0					
ANR	6361100	Identifier	dec_insn		6360986	0					
ANR	6361101	Identifier	opcode		6360986	1					
ANR	6361102	PrimaryExpression	0x00000f00		6360986	1					
ANR	6361103	PrimaryExpression	8		6360986	1					
ANR	6361104	BreakStatement	break ;	454:4:11258:11263	6360986	14	True				
ANR	6361105	ReturnType	static void		6360986	1					
ANR	6361106	Identifier	decode_rcpw		6360986	2					
ANR	6361107	ParameterList			6360986	3					
ANR	6361108	CFGEntryNode	ENTRY		6360986		True				
ANR	6361109	CFGExitNode	EXIT		6360986		True				
ANR	6361110	Symbol	dec_insn . code		6360986						
ANR	6361111	Symbol	dec_insn . code -> fields		6360986						
ANR	6361112	Symbol	* dec_insn . cexp		6360986						
ANR	6361113	Symbol	i		6360986						
ANR	6361114	Symbol	* dec_insn . code -> fields		6360986						
ANR	6361115	Symbol	dec_insn . cexp		6360986						
ANR	6361116	Symbol	* dec_insn		6360986						
ANR	6361117	Symbol	dec_insn . code -> nr_operands		6360986						
ANR	6361118	Symbol	* i		6360986						
ANR	6361119	Symbol	dec_insn . regs		6360986						
ANR	6361120	Symbol	* * dec_insn		6360986						
ANR	6361121	Symbol	* dec_insn . code		6360986						
ANR	6361122	Symbol	dec_insn . opcode		6360986						
ANR	6361123	Symbol	dec_insn		6360986						
ANR	6361124	Symbol	* * dec_insn . code		6360986						
ANR	6361125	Symbol	* dec_insn . regs		6360986						
ANR	6361126	Function	decode_rcr	459:0:11277:11789							
ANR	6361127	FunctionDef	decode_rcr ()		6361126	0					
ANR	6361128	CompoundStatement		461:0:11303:11789	6361126	0					
ANR	6361129	IdentifierDeclStatement	int i ;	462:2:11307:11312	6361126	0	True				
ANR	6361130	IdentifierDecl	i		6361126	0					
ANR	6361131	IdentifierDeclType	int		6361126	0					
ANR	6361132	Identifier	i		6361126	1					
ANR	6361133	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6361126	1					
ANR	6361134	ForInit	i = 0 ;	464:7:11322:11327	6361126	0	True				
ANR	6361135	AssignmentExpression	i = 0		6361126	0		=			
ANR	6361136	Identifier	i		6361126	0					
ANR	6361137	PrimaryExpression	0		6361126	1					
ANR	6361138	Condition	i < dec_insn . code -> nr_operands	464:14:11329:11358	6361126	1	True				
ANR	6361139	RelationalExpression	i < dec_insn . code -> nr_operands		6361126	0		<			
ANR	6361140	Identifier	i		6361126	0					
ANR	6361141	PtrMemberAccess	dec_insn . code -> nr_operands		6361126	1					
ANR	6361142	MemberAccess	dec_insn . code		6361126	0					
ANR	6361143	Identifier	dec_insn		6361126	0					
ANR	6361144	Identifier	code		6361126	1					
ANR	6361145	Identifier	nr_operands		6361126	1					
ANR	6361146	UnaryExpression	++ i	464:46:11361:11363	6361126	2	True				
ANR	6361147	IncDec	++		6361126	0					
ANR	6361148	Identifier	i		6361126	1					
ANR	6361149	CompoundStatement		4:51:62:62	6361126	3					
ANR	6361150	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6361126	0					
ANR	6361151	Condition	dec_insn . code -> fields [ i ]	465:11:11379:11402	6361126	0	True				
ANR	6361152	ArrayIndexing	dec_insn . code -> fields [ i ]		6361126	0					
ANR	6361153	PtrMemberAccess	dec_insn . code -> fields		6361126	0					
ANR	6361154	MemberAccess	dec_insn . code		6361126	0					
ANR	6361155	Identifier	dec_insn		6361126	0					
ANR	6361156	Identifier	code		6361126	1					
ANR	6361157	Identifier	fields		6361126	1					
ANR	6361158	Identifier	i		6361126	1					
ANR	6361159	CompoundStatement		5:37:101:101	6361126	1					
ANR	6361160	Label	case FMT_RCR_D :	466:3:11410:11424	6361126	0	True				
ANR	6361161	Identifier	FMT_RCR_D		6361126	0					
ANR	6361162	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28	467:4:11430:11485	6361126	1	True				
ANR	6361163	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28		6361126	0		=			
ANR	6361164	ArrayIndexing	dec_insn . regs [ i ]		6361126	0					
ANR	6361165	MemberAccess	dec_insn . regs		6361126	0					
ANR	6361166	Identifier	dec_insn		6361126	0					
ANR	6361167	Identifier	regs		6361126	1					
ANR	6361168	Identifier	i		6361126	1					
ANR	6361169	ShiftExpression	( dec_insn . opcode & 0xf0000000 ) >> 28		6361126	1		>>			
ANR	6361170	BitAndExpression	dec_insn . opcode & 0xf0000000		6361126	0		&			
ANR	6361171	MemberAccess	dec_insn . opcode		6361126	0					
ANR	6361172	Identifier	dec_insn		6361126	0					
ANR	6361173	Identifier	opcode		6361126	1					
ANR	6361174	PrimaryExpression	0xf0000000		6361126	1					
ANR	6361175	PrimaryExpression	28		6361126	1					
ANR	6361176	BreakStatement	break ;	468:4:11491:11496	6361126	2	True				
ANR	6361177	Label	case FMT_RCR_S3 :	470:3:11502:11517	6361126	3	True				
ANR	6361178	Identifier	FMT_RCR_S3		6361126	0					
ANR	6361179	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f000000 ) >> 24	471:4:11523:11578	6361126	4	True				
ANR	6361180	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f000000 ) >> 24		6361126	0		=			
ANR	6361181	ArrayIndexing	dec_insn . regs [ i ]		6361126	0					
ANR	6361182	MemberAccess	dec_insn . regs		6361126	0					
ANR	6361183	Identifier	dec_insn		6361126	0					
ANR	6361184	Identifier	regs		6361126	1					
ANR	6361185	Identifier	i		6361126	1					
ANR	6361186	ShiftExpression	( dec_insn . opcode & 0x0f000000 ) >> 24		6361126	1		>>			
ANR	6361187	BitAndExpression	dec_insn . opcode & 0x0f000000		6361126	0		&			
ANR	6361188	MemberAccess	dec_insn . opcode		6361126	0					
ANR	6361189	Identifier	dec_insn		6361126	0					
ANR	6361190	Identifier	opcode		6361126	1					
ANR	6361191	PrimaryExpression	0x0f000000		6361126	1					
ANR	6361192	PrimaryExpression	24		6361126	1					
ANR	6361193	BreakStatement	break ;	472:4:11584:11589	6361126	5	True				
ANR	6361194	Label	case FMT_RCR_CONST9 :	474:3:11595:11614	6361126	6	True				
ANR	6361195	Identifier	FMT_RCR_CONST9		6361126	0					
ANR	6361196	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x001ff000 ) >> 12	475:4:11620:11675	6361126	7	True				
ANR	6361197	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x001ff000 ) >> 12		6361126	0		=			
ANR	6361198	ArrayIndexing	dec_insn . cexp [ i ]		6361126	0					
ANR	6361199	MemberAccess	dec_insn . cexp		6361126	0					
ANR	6361200	Identifier	dec_insn		6361126	0					
ANR	6361201	Identifier	cexp		6361126	1					
ANR	6361202	Identifier	i		6361126	1					
ANR	6361203	ShiftExpression	( dec_insn . opcode & 0x001ff000 ) >> 12		6361126	1		>>			
ANR	6361204	BitAndExpression	dec_insn . opcode & 0x001ff000		6361126	0		&			
ANR	6361205	MemberAccess	dec_insn . opcode		6361126	0					
ANR	6361206	Identifier	dec_insn		6361126	0					
ANR	6361207	Identifier	opcode		6361126	1					
ANR	6361208	PrimaryExpression	0x001ff000		6361126	1					
ANR	6361209	PrimaryExpression	12		6361126	1					
ANR	6361210	BreakStatement	break ;	476:4:11681:11686	6361126	8	True				
ANR	6361211	Label	case FMT_RCR_S1 :	478:3:11692:11707	6361126	9	True				
ANR	6361212	Identifier	FMT_RCR_S1		6361126	0					
ANR	6361213	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	479:4:11713:11767	6361126	10	True				
ANR	6361214	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6361126	0		=			
ANR	6361215	ArrayIndexing	dec_insn . regs [ i ]		6361126	0					
ANR	6361216	MemberAccess	dec_insn . regs		6361126	0					
ANR	6361217	Identifier	dec_insn		6361126	0					
ANR	6361218	Identifier	regs		6361126	1					
ANR	6361219	Identifier	i		6361126	1					
ANR	6361220	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6361126	1		>>			
ANR	6361221	BitAndExpression	dec_insn . opcode & 0x00000f00		6361126	0		&			
ANR	6361222	MemberAccess	dec_insn . opcode		6361126	0					
ANR	6361223	Identifier	dec_insn		6361126	0					
ANR	6361224	Identifier	opcode		6361126	1					
ANR	6361225	PrimaryExpression	0x00000f00		6361126	1					
ANR	6361226	PrimaryExpression	8		6361126	1					
ANR	6361227	BreakStatement	break ;	480:4:11773:11778	6361126	11	True				
ANR	6361228	ReturnType	static void		6361126	1					
ANR	6361229	Identifier	decode_rcr		6361126	2					
ANR	6361230	ParameterList			6361126	3					
ANR	6361231	CFGEntryNode	ENTRY		6361126		True				
ANR	6361232	CFGExitNode	EXIT		6361126		True				
ANR	6361233	Symbol	dec_insn . code		6361126						
ANR	6361234	Symbol	dec_insn . code -> fields		6361126						
ANR	6361235	Symbol	* dec_insn . cexp		6361126						
ANR	6361236	Symbol	i		6361126						
ANR	6361237	Symbol	* dec_insn . code -> fields		6361126						
ANR	6361238	Symbol	dec_insn . cexp		6361126						
ANR	6361239	Symbol	* dec_insn		6361126						
ANR	6361240	Symbol	dec_insn . code -> nr_operands		6361126						
ANR	6361241	Symbol	* i		6361126						
ANR	6361242	Symbol	dec_insn . regs		6361126						
ANR	6361243	Symbol	* * dec_insn		6361126						
ANR	6361244	Symbol	* dec_insn . code		6361126						
ANR	6361245	Symbol	dec_insn . opcode		6361126						
ANR	6361246	Symbol	dec_insn		6361126						
ANR	6361247	Symbol	* * dec_insn . code		6361126						
ANR	6361248	Symbol	* dec_insn . regs		6361126						
ANR	6361249	Function	decode_rcrr	485:0:11792:12309							
ANR	6361250	FunctionDef	decode_rcrr ()		6361249	0					
ANR	6361251	CompoundStatement		487:0:11819:12309	6361249	0					
ANR	6361252	IdentifierDeclStatement	int i ;	488:2:11823:11828	6361249	0	True				
ANR	6361253	IdentifierDecl	i		6361249	0					
ANR	6361254	IdentifierDeclType	int		6361249	0					
ANR	6361255	Identifier	i		6361249	1					
ANR	6361256	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6361249	1					
ANR	6361257	ForInit	i = 0 ;	490:7:11838:11843	6361249	0	True				
ANR	6361258	AssignmentExpression	i = 0		6361249	0		=			
ANR	6361259	Identifier	i		6361249	0					
ANR	6361260	PrimaryExpression	0		6361249	1					
ANR	6361261	Condition	i < dec_insn . code -> nr_operands	490:14:11845:11874	6361249	1	True				
ANR	6361262	RelationalExpression	i < dec_insn . code -> nr_operands		6361249	0		<			
ANR	6361263	Identifier	i		6361249	0					
ANR	6361264	PtrMemberAccess	dec_insn . code -> nr_operands		6361249	1					
ANR	6361265	MemberAccess	dec_insn . code		6361249	0					
ANR	6361266	Identifier	dec_insn		6361249	0					
ANR	6361267	Identifier	code		6361249	1					
ANR	6361268	Identifier	nr_operands		6361249	1					
ANR	6361269	UnaryExpression	++ i	490:46:11877:11879	6361249	2	True				
ANR	6361270	IncDec	++		6361249	0					
ANR	6361271	Identifier	i		6361249	1					
ANR	6361272	CompoundStatement		4:51:62:62	6361249	3					
ANR	6361273	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6361249	0					
ANR	6361274	Condition	dec_insn . code -> fields [ i ]	491:11:11895:11918	6361249	0	True				
ANR	6361275	ArrayIndexing	dec_insn . code -> fields [ i ]		6361249	0					
ANR	6361276	PtrMemberAccess	dec_insn . code -> fields		6361249	0					
ANR	6361277	MemberAccess	dec_insn . code		6361249	0					
ANR	6361278	Identifier	dec_insn		6361249	0					
ANR	6361279	Identifier	code		6361249	1					
ANR	6361280	Identifier	fields		6361249	1					
ANR	6361281	Identifier	i		6361249	1					
ANR	6361282	CompoundStatement		5:37:101:101	6361249	1					
ANR	6361283	Label	case FMT_RCRR_D :	492:3:11926:11941	6361249	0	True				
ANR	6361284	Identifier	FMT_RCRR_D		6361249	0					
ANR	6361285	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28	493:4:11947:12002	6361249	1	True				
ANR	6361286	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28		6361249	0		=			
ANR	6361287	ArrayIndexing	dec_insn . regs [ i ]		6361249	0					
ANR	6361288	MemberAccess	dec_insn . regs		6361249	0					
ANR	6361289	Identifier	dec_insn		6361249	0					
ANR	6361290	Identifier	regs		6361249	1					
ANR	6361291	Identifier	i		6361249	1					
ANR	6361292	ShiftExpression	( dec_insn . opcode & 0xf0000000 ) >> 28		6361249	1		>>			
ANR	6361293	BitAndExpression	dec_insn . opcode & 0xf0000000		6361249	0		&			
ANR	6361294	MemberAccess	dec_insn . opcode		6361249	0					
ANR	6361295	Identifier	dec_insn		6361249	0					
ANR	6361296	Identifier	opcode		6361249	1					
ANR	6361297	PrimaryExpression	0xf0000000		6361249	1					
ANR	6361298	PrimaryExpression	28		6361249	1					
ANR	6361299	BreakStatement	break ;	494:4:12008:12013	6361249	2	True				
ANR	6361300	Label	case FMT_RCRR_S3 :	496:3:12019:12035	6361249	3	True				
ANR	6361301	Identifier	FMT_RCRR_S3		6361249	0					
ANR	6361302	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f000000 ) >> 24	497:4:12041:12096	6361249	4	True				
ANR	6361303	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f000000 ) >> 24		6361249	0		=			
ANR	6361304	ArrayIndexing	dec_insn . regs [ i ]		6361249	0					
ANR	6361305	MemberAccess	dec_insn . regs		6361249	0					
ANR	6361306	Identifier	dec_insn		6361249	0					
ANR	6361307	Identifier	regs		6361249	1					
ANR	6361308	Identifier	i		6361249	1					
ANR	6361309	ShiftExpression	( dec_insn . opcode & 0x0f000000 ) >> 24		6361249	1		>>			
ANR	6361310	BitAndExpression	dec_insn . opcode & 0x0f000000		6361249	0		&			
ANR	6361311	MemberAccess	dec_insn . opcode		6361249	0					
ANR	6361312	Identifier	dec_insn		6361249	0					
ANR	6361313	Identifier	opcode		6361249	1					
ANR	6361314	PrimaryExpression	0x0f000000		6361249	1					
ANR	6361315	PrimaryExpression	24		6361249	1					
ANR	6361316	BreakStatement	break ;	498:4:12102:12107	6361249	5	True				
ANR	6361317	Label	case FMT_RCRR_CONST4 :	500:3:12113:12133	6361249	6	True				
ANR	6361318	Identifier	FMT_RCRR_CONST4		6361249	0					
ANR	6361319	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12	501:4:12139:12194	6361249	7	True				
ANR	6361320	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12		6361249	0		=			
ANR	6361321	ArrayIndexing	dec_insn . cexp [ i ]		6361249	0					
ANR	6361322	MemberAccess	dec_insn . cexp		6361249	0					
ANR	6361323	Identifier	dec_insn		6361249	0					
ANR	6361324	Identifier	cexp		6361249	1					
ANR	6361325	Identifier	i		6361249	1					
ANR	6361326	ShiftExpression	( dec_insn . opcode & 0x0000f000 ) >> 12		6361249	1		>>			
ANR	6361327	BitAndExpression	dec_insn . opcode & 0x0000f000		6361249	0		&			
ANR	6361328	MemberAccess	dec_insn . opcode		6361249	0					
ANR	6361329	Identifier	dec_insn		6361249	0					
ANR	6361330	Identifier	opcode		6361249	1					
ANR	6361331	PrimaryExpression	0x0000f000		6361249	1					
ANR	6361332	PrimaryExpression	12		6361249	1					
ANR	6361333	BreakStatement	break ;	502:4:12200:12205	6361249	8	True				
ANR	6361334	Label	case FMT_RCRR_S1 :	504:3:12211:12227	6361249	9	True				
ANR	6361335	Identifier	FMT_RCRR_S1		6361249	0					
ANR	6361336	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	505:4:12233:12287	6361249	10	True				
ANR	6361337	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6361249	0		=			
ANR	6361338	ArrayIndexing	dec_insn . regs [ i ]		6361249	0					
ANR	6361339	MemberAccess	dec_insn . regs		6361249	0					
ANR	6361340	Identifier	dec_insn		6361249	0					
ANR	6361341	Identifier	regs		6361249	1					
ANR	6361342	Identifier	i		6361249	1					
ANR	6361343	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6361249	1		>>			
ANR	6361344	BitAndExpression	dec_insn . opcode & 0x00000f00		6361249	0		&			
ANR	6361345	MemberAccess	dec_insn . opcode		6361249	0					
ANR	6361346	Identifier	dec_insn		6361249	0					
ANR	6361347	Identifier	opcode		6361249	1					
ANR	6361348	PrimaryExpression	0x00000f00		6361249	1					
ANR	6361349	PrimaryExpression	8		6361249	1					
ANR	6361350	BreakStatement	break ;	506:4:12293:12298	6361249	11	True				
ANR	6361351	ReturnType	static void		6361249	1					
ANR	6361352	Identifier	decode_rcrr		6361249	2					
ANR	6361353	ParameterList			6361249	3					
ANR	6361354	CFGEntryNode	ENTRY		6361249		True				
ANR	6361355	CFGExitNode	EXIT		6361249		True				
ANR	6361356	Symbol	dec_insn . code		6361249						
ANR	6361357	Symbol	dec_insn . code -> fields		6361249						
ANR	6361358	Symbol	* dec_insn . cexp		6361249						
ANR	6361359	Symbol	i		6361249						
ANR	6361360	Symbol	* dec_insn . code -> fields		6361249						
ANR	6361361	Symbol	dec_insn . cexp		6361249						
ANR	6361362	Symbol	* dec_insn		6361249						
ANR	6361363	Symbol	dec_insn . code -> nr_operands		6361249						
ANR	6361364	Symbol	* i		6361249						
ANR	6361365	Symbol	dec_insn . regs		6361249						
ANR	6361366	Symbol	* * dec_insn		6361249						
ANR	6361367	Symbol	* dec_insn . code		6361249						
ANR	6361368	Symbol	dec_insn . opcode		6361249						
ANR	6361369	Symbol	dec_insn		6361249						
ANR	6361370	Symbol	* * dec_insn . code		6361249						
ANR	6361371	Symbol	* dec_insn . regs		6361249						
ANR	6361372	Function	decode_rcrw	511:0:12312:12922							
ANR	6361373	FunctionDef	decode_rcrw ()		6361372	0					
ANR	6361374	CompoundStatement		513:0:12339:12922	6361372	0					
ANR	6361375	IdentifierDeclStatement	int i ;	514:2:12343:12348	6361372	0	True				
ANR	6361376	IdentifierDecl	i		6361372	0					
ANR	6361377	IdentifierDeclType	int		6361372	0					
ANR	6361378	Identifier	i		6361372	1					
ANR	6361379	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6361372	1					
ANR	6361380	ForInit	i = 0 ;	516:7:12358:12363	6361372	0	True				
ANR	6361381	AssignmentExpression	i = 0		6361372	0		=			
ANR	6361382	Identifier	i		6361372	0					
ANR	6361383	PrimaryExpression	0		6361372	1					
ANR	6361384	Condition	i < dec_insn . code -> nr_operands	516:14:12365:12394	6361372	1	True				
ANR	6361385	RelationalExpression	i < dec_insn . code -> nr_operands		6361372	0		<			
ANR	6361386	Identifier	i		6361372	0					
ANR	6361387	PtrMemberAccess	dec_insn . code -> nr_operands		6361372	1					
ANR	6361388	MemberAccess	dec_insn . code		6361372	0					
ANR	6361389	Identifier	dec_insn		6361372	0					
ANR	6361390	Identifier	code		6361372	1					
ANR	6361391	Identifier	nr_operands		6361372	1					
ANR	6361392	UnaryExpression	++ i	516:46:12397:12399	6361372	2	True				
ANR	6361393	IncDec	++		6361372	0					
ANR	6361394	Identifier	i		6361372	1					
ANR	6361395	CompoundStatement		4:51:62:62	6361372	3					
ANR	6361396	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6361372	0					
ANR	6361397	Condition	dec_insn . code -> fields [ i ]	517:11:12415:12438	6361372	0	True				
ANR	6361398	ArrayIndexing	dec_insn . code -> fields [ i ]		6361372	0					
ANR	6361399	PtrMemberAccess	dec_insn . code -> fields		6361372	0					
ANR	6361400	MemberAccess	dec_insn . code		6361372	0					
ANR	6361401	Identifier	dec_insn		6361372	0					
ANR	6361402	Identifier	code		6361372	1					
ANR	6361403	Identifier	fields		6361372	1					
ANR	6361404	Identifier	i		6361372	1					
ANR	6361405	CompoundStatement		5:37:101:101	6361372	1					
ANR	6361406	Label	case FMT_RCRW_D :	518:3:12446:12461	6361372	0	True				
ANR	6361407	Identifier	FMT_RCRW_D		6361372	0					
ANR	6361408	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28	519:4:12467:12522	6361372	1	True				
ANR	6361409	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28		6361372	0		=			
ANR	6361410	ArrayIndexing	dec_insn . regs [ i ]		6361372	0					
ANR	6361411	MemberAccess	dec_insn . regs		6361372	0					
ANR	6361412	Identifier	dec_insn		6361372	0					
ANR	6361413	Identifier	regs		6361372	1					
ANR	6361414	Identifier	i		6361372	1					
ANR	6361415	ShiftExpression	( dec_insn . opcode & 0xf0000000 ) >> 28		6361372	1		>>			
ANR	6361416	BitAndExpression	dec_insn . opcode & 0xf0000000		6361372	0		&			
ANR	6361417	MemberAccess	dec_insn . opcode		6361372	0					
ANR	6361418	Identifier	dec_insn		6361372	0					
ANR	6361419	Identifier	opcode		6361372	1					
ANR	6361420	PrimaryExpression	0xf0000000		6361372	1					
ANR	6361421	PrimaryExpression	28		6361372	1					
ANR	6361422	BreakStatement	break ;	520:4:12528:12533	6361372	2	True				
ANR	6361423	Label	case FMT_RCRW_S3 :	522:3:12539:12555	6361372	3	True				
ANR	6361424	Identifier	FMT_RCRW_S3		6361372	0					
ANR	6361425	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f000000 ) >> 24	523:4:12561:12616	6361372	4	True				
ANR	6361426	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f000000 ) >> 24		6361372	0		=			
ANR	6361427	ArrayIndexing	dec_insn . regs [ i ]		6361372	0					
ANR	6361428	MemberAccess	dec_insn . regs		6361372	0					
ANR	6361429	Identifier	dec_insn		6361372	0					
ANR	6361430	Identifier	regs		6361372	1					
ANR	6361431	Identifier	i		6361372	1					
ANR	6361432	ShiftExpression	( dec_insn . opcode & 0x0f000000 ) >> 24		6361372	1		>>			
ANR	6361433	BitAndExpression	dec_insn . opcode & 0x0f000000		6361372	0		&			
ANR	6361434	MemberAccess	dec_insn . opcode		6361372	0					
ANR	6361435	Identifier	dec_insn		6361372	0					
ANR	6361436	Identifier	opcode		6361372	1					
ANR	6361437	PrimaryExpression	0x0f000000		6361372	1					
ANR	6361438	PrimaryExpression	24		6361372	1					
ANR	6361439	BreakStatement	break ;	524:4:12622:12627	6361372	5	True				
ANR	6361440	Label	case FMT_RCRW_W :	526:3:12633:12648	6361372	6	True				
ANR	6361441	Identifier	FMT_RCRW_W		6361372	0					
ANR	6361442	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x001f0000 ) >> 16	527:4:12654:12709	6361372	7	True				
ANR	6361443	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x001f0000 ) >> 16		6361372	0		=			
ANR	6361444	ArrayIndexing	dec_insn . cexp [ i ]		6361372	0					
ANR	6361445	MemberAccess	dec_insn . cexp		6361372	0					
ANR	6361446	Identifier	dec_insn		6361372	0					
ANR	6361447	Identifier	cexp		6361372	1					
ANR	6361448	Identifier	i		6361372	1					
ANR	6361449	ShiftExpression	( dec_insn . opcode & 0x001f0000 ) >> 16		6361372	1		>>			
ANR	6361450	BitAndExpression	dec_insn . opcode & 0x001f0000		6361372	0		&			
ANR	6361451	MemberAccess	dec_insn . opcode		6361372	0					
ANR	6361452	Identifier	dec_insn		6361372	0					
ANR	6361453	Identifier	opcode		6361372	1					
ANR	6361454	PrimaryExpression	0x001f0000		6361372	1					
ANR	6361455	PrimaryExpression	16		6361372	1					
ANR	6361456	BreakStatement	break ;	528:4:12715:12720	6361372	8	True				
ANR	6361457	Label	case FMT_RCRW_CONST4 :	530:3:12726:12746	6361372	9	True				
ANR	6361458	Identifier	FMT_RCRW_CONST4		6361372	0					
ANR	6361459	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12	531:4:12752:12807	6361372	10	True				
ANR	6361460	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12		6361372	0		=			
ANR	6361461	ArrayIndexing	dec_insn . cexp [ i ]		6361372	0					
ANR	6361462	MemberAccess	dec_insn . cexp		6361372	0					
ANR	6361463	Identifier	dec_insn		6361372	0					
ANR	6361464	Identifier	cexp		6361372	1					
ANR	6361465	Identifier	i		6361372	1					
ANR	6361466	ShiftExpression	( dec_insn . opcode & 0x0000f000 ) >> 12		6361372	1		>>			
ANR	6361467	BitAndExpression	dec_insn . opcode & 0x0000f000		6361372	0		&			
ANR	6361468	MemberAccess	dec_insn . opcode		6361372	0					
ANR	6361469	Identifier	dec_insn		6361372	0					
ANR	6361470	Identifier	opcode		6361372	1					
ANR	6361471	PrimaryExpression	0x0000f000		6361372	1					
ANR	6361472	PrimaryExpression	12		6361372	1					
ANR	6361473	BreakStatement	break ;	532:4:12813:12818	6361372	11	True				
ANR	6361474	Label	case FMT_RCRW_S1 :	534:3:12824:12840	6361372	12	True				
ANR	6361475	Identifier	FMT_RCRW_S1		6361372	0					
ANR	6361476	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	535:4:12846:12900	6361372	13	True				
ANR	6361477	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6361372	0		=			
ANR	6361478	ArrayIndexing	dec_insn . regs [ i ]		6361372	0					
ANR	6361479	MemberAccess	dec_insn . regs		6361372	0					
ANR	6361480	Identifier	dec_insn		6361372	0					
ANR	6361481	Identifier	regs		6361372	1					
ANR	6361482	Identifier	i		6361372	1					
ANR	6361483	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6361372	1		>>			
ANR	6361484	BitAndExpression	dec_insn . opcode & 0x00000f00		6361372	0		&			
ANR	6361485	MemberAccess	dec_insn . opcode		6361372	0					
ANR	6361486	Identifier	dec_insn		6361372	0					
ANR	6361487	Identifier	opcode		6361372	1					
ANR	6361488	PrimaryExpression	0x00000f00		6361372	1					
ANR	6361489	PrimaryExpression	8		6361372	1					
ANR	6361490	BreakStatement	break ;	536:4:12906:12911	6361372	14	True				
ANR	6361491	ReturnType	static void		6361372	1					
ANR	6361492	Identifier	decode_rcrw		6361372	2					
ANR	6361493	ParameterList			6361372	3					
ANR	6361494	CFGEntryNode	ENTRY		6361372		True				
ANR	6361495	CFGExitNode	EXIT		6361372		True				
ANR	6361496	Symbol	dec_insn . code		6361372						
ANR	6361497	Symbol	dec_insn . code -> fields		6361372						
ANR	6361498	Symbol	* dec_insn . cexp		6361372						
ANR	6361499	Symbol	i		6361372						
ANR	6361500	Symbol	* dec_insn . code -> fields		6361372						
ANR	6361501	Symbol	dec_insn . cexp		6361372						
ANR	6361502	Symbol	* dec_insn		6361372						
ANR	6361503	Symbol	dec_insn . code -> nr_operands		6361372						
ANR	6361504	Symbol	* i		6361372						
ANR	6361505	Symbol	dec_insn . regs		6361372						
ANR	6361506	Symbol	* * dec_insn		6361372						
ANR	6361507	Symbol	* dec_insn . code		6361372						
ANR	6361508	Symbol	dec_insn . opcode		6361372						
ANR	6361509	Symbol	dec_insn		6361372						
ANR	6361510	Symbol	* * dec_insn . code		6361372						
ANR	6361511	Symbol	* dec_insn . regs		6361372						
ANR	6361512	Function	decode_rlc	541:0:12925:13345							
ANR	6361513	FunctionDef	decode_rlc ()		6361512	0					
ANR	6361514	CompoundStatement		543:0:12951:13345	6361512	0					
ANR	6361515	IdentifierDeclStatement	int i ;	544:2:12955:12960	6361512	0	True				
ANR	6361516	IdentifierDecl	i		6361512	0					
ANR	6361517	IdentifierDeclType	int		6361512	0					
ANR	6361518	Identifier	i		6361512	1					
ANR	6361519	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6361512	1					
ANR	6361520	ForInit	i = 0 ;	546:7:12970:12975	6361512	0	True				
ANR	6361521	AssignmentExpression	i = 0		6361512	0		=			
ANR	6361522	Identifier	i		6361512	0					
ANR	6361523	PrimaryExpression	0		6361512	1					
ANR	6361524	Condition	i < dec_insn . code -> nr_operands	546:14:12977:13006	6361512	1	True				
ANR	6361525	RelationalExpression	i < dec_insn . code -> nr_operands		6361512	0		<			
ANR	6361526	Identifier	i		6361512	0					
ANR	6361527	PtrMemberAccess	dec_insn . code -> nr_operands		6361512	1					
ANR	6361528	MemberAccess	dec_insn . code		6361512	0					
ANR	6361529	Identifier	dec_insn		6361512	0					
ANR	6361530	Identifier	code		6361512	1					
ANR	6361531	Identifier	nr_operands		6361512	1					
ANR	6361532	UnaryExpression	++ i	546:46:13009:13011	6361512	2	True				
ANR	6361533	IncDec	++		6361512	0					
ANR	6361534	Identifier	i		6361512	1					
ANR	6361535	CompoundStatement		4:51:62:62	6361512	3					
ANR	6361536	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6361512	0					
ANR	6361537	Condition	dec_insn . code -> fields [ i ]	547:11:13027:13050	6361512	0	True				
ANR	6361538	ArrayIndexing	dec_insn . code -> fields [ i ]		6361512	0					
ANR	6361539	PtrMemberAccess	dec_insn . code -> fields		6361512	0					
ANR	6361540	MemberAccess	dec_insn . code		6361512	0					
ANR	6361541	Identifier	dec_insn		6361512	0					
ANR	6361542	Identifier	code		6361512	1					
ANR	6361543	Identifier	fields		6361512	1					
ANR	6361544	Identifier	i		6361512	1					
ANR	6361545	CompoundStatement		5:37:101:101	6361512	1					
ANR	6361546	Label	case FMT_RLC_D :	548:3:13058:13072	6361512	0	True				
ANR	6361547	Identifier	FMT_RLC_D		6361512	0					
ANR	6361548	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28	549:4:13078:13133	6361512	1	True				
ANR	6361549	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28		6361512	0		=			
ANR	6361550	ArrayIndexing	dec_insn . regs [ i ]		6361512	0					
ANR	6361551	MemberAccess	dec_insn . regs		6361512	0					
ANR	6361552	Identifier	dec_insn		6361512	0					
ANR	6361553	Identifier	regs		6361512	1					
ANR	6361554	Identifier	i		6361512	1					
ANR	6361555	ShiftExpression	( dec_insn . opcode & 0xf0000000 ) >> 28		6361512	1		>>			
ANR	6361556	BitAndExpression	dec_insn . opcode & 0xf0000000		6361512	0		&			
ANR	6361557	MemberAccess	dec_insn . opcode		6361512	0					
ANR	6361558	Identifier	dec_insn		6361512	0					
ANR	6361559	Identifier	opcode		6361512	1					
ANR	6361560	PrimaryExpression	0xf0000000		6361512	1					
ANR	6361561	PrimaryExpression	28		6361512	1					
ANR	6361562	BreakStatement	break ;	550:4:13139:13144	6361512	2	True				
ANR	6361563	Label	case FMT_RLC_CONST16 :	552:3:13150:13170	6361512	3	True				
ANR	6361564	Identifier	FMT_RLC_CONST16		6361512	0					
ANR	6361565	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0ffff000 ) >> 12	553:4:13176:13231	6361512	4	True				
ANR	6361566	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0ffff000 ) >> 12		6361512	0		=			
ANR	6361567	ArrayIndexing	dec_insn . cexp [ i ]		6361512	0					
ANR	6361568	MemberAccess	dec_insn . cexp		6361512	0					
ANR	6361569	Identifier	dec_insn		6361512	0					
ANR	6361570	Identifier	cexp		6361512	1					
ANR	6361571	Identifier	i		6361512	1					
ANR	6361572	ShiftExpression	( dec_insn . opcode & 0x0ffff000 ) >> 12		6361512	1		>>			
ANR	6361573	BitAndExpression	dec_insn . opcode & 0x0ffff000		6361512	0		&			
ANR	6361574	MemberAccess	dec_insn . opcode		6361512	0					
ANR	6361575	Identifier	dec_insn		6361512	0					
ANR	6361576	Identifier	opcode		6361512	1					
ANR	6361577	PrimaryExpression	0x0ffff000		6361512	1					
ANR	6361578	PrimaryExpression	12		6361512	1					
ANR	6361579	BreakStatement	break ;	554:4:13237:13242	6361512	5	True				
ANR	6361580	Label	case FMT_RLC_S1 :	556:3:13248:13263	6361512	6	True				
ANR	6361581	Identifier	FMT_RLC_S1		6361512	0					
ANR	6361582	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	557:4:13269:13323	6361512	7	True				
ANR	6361583	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6361512	0		=			
ANR	6361584	ArrayIndexing	dec_insn . regs [ i ]		6361512	0					
ANR	6361585	MemberAccess	dec_insn . regs		6361512	0					
ANR	6361586	Identifier	dec_insn		6361512	0					
ANR	6361587	Identifier	regs		6361512	1					
ANR	6361588	Identifier	i		6361512	1					
ANR	6361589	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6361512	1		>>			
ANR	6361590	BitAndExpression	dec_insn . opcode & 0x00000f00		6361512	0		&			
ANR	6361591	MemberAccess	dec_insn . opcode		6361512	0					
ANR	6361592	Identifier	dec_insn		6361512	0					
ANR	6361593	Identifier	opcode		6361512	1					
ANR	6361594	PrimaryExpression	0x00000f00		6361512	1					
ANR	6361595	PrimaryExpression	8		6361512	1					
ANR	6361596	BreakStatement	break ;	558:4:13329:13334	6361512	8	True				
ANR	6361597	ReturnType	static void		6361512	1					
ANR	6361598	Identifier	decode_rlc		6361512	2					
ANR	6361599	ParameterList			6361512	3					
ANR	6361600	CFGEntryNode	ENTRY		6361512		True				
ANR	6361601	CFGExitNode	EXIT		6361512		True				
ANR	6361602	Symbol	dec_insn . code		6361512						
ANR	6361603	Symbol	dec_insn . code -> fields		6361512						
ANR	6361604	Symbol	* dec_insn . cexp		6361512						
ANR	6361605	Symbol	i		6361512						
ANR	6361606	Symbol	* dec_insn . code -> fields		6361512						
ANR	6361607	Symbol	dec_insn . cexp		6361512						
ANR	6361608	Symbol	* dec_insn		6361512						
ANR	6361609	Symbol	dec_insn . code -> nr_operands		6361512						
ANR	6361610	Symbol	* i		6361512						
ANR	6361611	Symbol	dec_insn . regs		6361512						
ANR	6361612	Symbol	* * dec_insn		6361512						
ANR	6361613	Symbol	* dec_insn . code		6361512						
ANR	6361614	Symbol	dec_insn . opcode		6361512						
ANR	6361615	Symbol	dec_insn		6361512						
ANR	6361616	Symbol	* * dec_insn . code		6361512						
ANR	6361617	Symbol	* dec_insn . regs		6361512						
ANR	6361618	Function	decode_rr	563:0:13348:13850							
ANR	6361619	FunctionDef	decode_rr ()		6361618	0					
ANR	6361620	CompoundStatement		565:0:13373:13850	6361618	0					
ANR	6361621	IdentifierDeclStatement	int i ;	566:2:13377:13382	6361618	0	True				
ANR	6361622	IdentifierDecl	i		6361618	0					
ANR	6361623	IdentifierDeclType	int		6361618	0					
ANR	6361624	Identifier	i		6361618	1					
ANR	6361625	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6361618	1					
ANR	6361626	ForInit	i = 0 ;	568:7:13392:13397	6361618	0	True				
ANR	6361627	AssignmentExpression	i = 0		6361618	0		=			
ANR	6361628	Identifier	i		6361618	0					
ANR	6361629	PrimaryExpression	0		6361618	1					
ANR	6361630	Condition	i < dec_insn . code -> nr_operands	568:14:13399:13428	6361618	1	True				
ANR	6361631	RelationalExpression	i < dec_insn . code -> nr_operands		6361618	0		<			
ANR	6361632	Identifier	i		6361618	0					
ANR	6361633	PtrMemberAccess	dec_insn . code -> nr_operands		6361618	1					
ANR	6361634	MemberAccess	dec_insn . code		6361618	0					
ANR	6361635	Identifier	dec_insn		6361618	0					
ANR	6361636	Identifier	code		6361618	1					
ANR	6361637	Identifier	nr_operands		6361618	1					
ANR	6361638	UnaryExpression	++ i	568:46:13431:13433	6361618	2	True				
ANR	6361639	IncDec	++		6361618	0					
ANR	6361640	Identifier	i		6361618	1					
ANR	6361641	CompoundStatement		4:51:62:62	6361618	3					
ANR	6361642	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6361618	0					
ANR	6361643	Condition	dec_insn . code -> fields [ i ]	569:11:13449:13472	6361618	0	True				
ANR	6361644	ArrayIndexing	dec_insn . code -> fields [ i ]		6361618	0					
ANR	6361645	PtrMemberAccess	dec_insn . code -> fields		6361618	0					
ANR	6361646	MemberAccess	dec_insn . code		6361618	0					
ANR	6361647	Identifier	dec_insn		6361618	0					
ANR	6361648	Identifier	code		6361618	1					
ANR	6361649	Identifier	fields		6361618	1					
ANR	6361650	Identifier	i		6361618	1					
ANR	6361651	CompoundStatement		5:37:101:101	6361618	1					
ANR	6361652	Label	case FMT_RR_D :	570:3:13480:13493	6361618	0	True				
ANR	6361653	Identifier	FMT_RR_D		6361618	0					
ANR	6361654	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28	571:4:13499:13554	6361618	1	True				
ANR	6361655	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28		6361618	0		=			
ANR	6361656	ArrayIndexing	dec_insn . regs [ i ]		6361618	0					
ANR	6361657	MemberAccess	dec_insn . regs		6361618	0					
ANR	6361658	Identifier	dec_insn		6361618	0					
ANR	6361659	Identifier	regs		6361618	1					
ANR	6361660	Identifier	i		6361618	1					
ANR	6361661	ShiftExpression	( dec_insn . opcode & 0xf0000000 ) >> 28		6361618	1		>>			
ANR	6361662	BitAndExpression	dec_insn . opcode & 0xf0000000		6361618	0		&			
ANR	6361663	MemberAccess	dec_insn . opcode		6361618	0					
ANR	6361664	Identifier	dec_insn		6361618	0					
ANR	6361665	Identifier	opcode		6361618	1					
ANR	6361666	PrimaryExpression	0xf0000000		6361618	1					
ANR	6361667	PrimaryExpression	28		6361618	1					
ANR	6361668	BreakStatement	break ;	572:4:13560:13565	6361618	2	True				
ANR	6361669	Label	case FMT_RR_N :	574:3:13571:13584	6361618	3	True				
ANR	6361670	Identifier	FMT_RR_N		6361618	0					
ANR	6361671	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x00030000 ) >> 16	575:4:13590:13645	6361618	4	True				
ANR	6361672	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x00030000 ) >> 16		6361618	0		=			
ANR	6361673	ArrayIndexing	dec_insn . cexp [ i ]		6361618	0					
ANR	6361674	MemberAccess	dec_insn . cexp		6361618	0					
ANR	6361675	Identifier	dec_insn		6361618	0					
ANR	6361676	Identifier	cexp		6361618	1					
ANR	6361677	Identifier	i		6361618	1					
ANR	6361678	ShiftExpression	( dec_insn . opcode & 0x00030000 ) >> 16		6361618	1		>>			
ANR	6361679	BitAndExpression	dec_insn . opcode & 0x00030000		6361618	0		&			
ANR	6361680	MemberAccess	dec_insn . opcode		6361618	0					
ANR	6361681	Identifier	dec_insn		6361618	0					
ANR	6361682	Identifier	opcode		6361618	1					
ANR	6361683	PrimaryExpression	0x00030000		6361618	1					
ANR	6361684	PrimaryExpression	16		6361618	1					
ANR	6361685	BreakStatement	break ;	576:4:13651:13656	6361618	5	True				
ANR	6361686	Label	case FMT_RR_S2 :	578:3:13662:13676	6361618	6	True				
ANR	6361687	Identifier	FMT_RR_S2		6361618	0					
ANR	6361688	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12	579:4:13682:13737	6361618	7	True				
ANR	6361689	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12		6361618	0		=			
ANR	6361690	ArrayIndexing	dec_insn . regs [ i ]		6361618	0					
ANR	6361691	MemberAccess	dec_insn . regs		6361618	0					
ANR	6361692	Identifier	dec_insn		6361618	0					
ANR	6361693	Identifier	regs		6361618	1					
ANR	6361694	Identifier	i		6361618	1					
ANR	6361695	ShiftExpression	( dec_insn . opcode & 0x0000f000 ) >> 12		6361618	1		>>			
ANR	6361696	BitAndExpression	dec_insn . opcode & 0x0000f000		6361618	0		&			
ANR	6361697	MemberAccess	dec_insn . opcode		6361618	0					
ANR	6361698	Identifier	dec_insn		6361618	0					
ANR	6361699	Identifier	opcode		6361618	1					
ANR	6361700	PrimaryExpression	0x0000f000		6361618	1					
ANR	6361701	PrimaryExpression	12		6361618	1					
ANR	6361702	BreakStatement	break ;	580:4:13743:13748	6361618	8	True				
ANR	6361703	Label	case FMT_RR_S1 :	582:3:13754:13768	6361618	9	True				
ANR	6361704	Identifier	FMT_RR_S1		6361618	0					
ANR	6361705	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	583:4:13774:13828	6361618	10	True				
ANR	6361706	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6361618	0		=			
ANR	6361707	ArrayIndexing	dec_insn . regs [ i ]		6361618	0					
ANR	6361708	MemberAccess	dec_insn . regs		6361618	0					
ANR	6361709	Identifier	dec_insn		6361618	0					
ANR	6361710	Identifier	regs		6361618	1					
ANR	6361711	Identifier	i		6361618	1					
ANR	6361712	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6361618	1		>>			
ANR	6361713	BitAndExpression	dec_insn . opcode & 0x00000f00		6361618	0		&			
ANR	6361714	MemberAccess	dec_insn . opcode		6361618	0					
ANR	6361715	Identifier	dec_insn		6361618	0					
ANR	6361716	Identifier	opcode		6361618	1					
ANR	6361717	PrimaryExpression	0x00000f00		6361618	1					
ANR	6361718	PrimaryExpression	8		6361618	1					
ANR	6361719	BreakStatement	break ;	584:4:13834:13839	6361618	11	True				
ANR	6361720	ReturnType	static void		6361618	1					
ANR	6361721	Identifier	decode_rr		6361618	2					
ANR	6361722	ParameterList			6361618	3					
ANR	6361723	CFGEntryNode	ENTRY		6361618		True				
ANR	6361724	CFGExitNode	EXIT		6361618		True				
ANR	6361725	Symbol	dec_insn . code		6361618						
ANR	6361726	Symbol	dec_insn . code -> fields		6361618						
ANR	6361727	Symbol	* dec_insn . cexp		6361618						
ANR	6361728	Symbol	i		6361618						
ANR	6361729	Symbol	* dec_insn . code -> fields		6361618						
ANR	6361730	Symbol	dec_insn . cexp		6361618						
ANR	6361731	Symbol	* dec_insn		6361618						
ANR	6361732	Symbol	dec_insn . code -> nr_operands		6361618						
ANR	6361733	Symbol	* i		6361618						
ANR	6361734	Symbol	dec_insn . regs		6361618						
ANR	6361735	Symbol	* * dec_insn		6361618						
ANR	6361736	Symbol	* dec_insn . code		6361618						
ANR	6361737	Symbol	dec_insn . opcode		6361618						
ANR	6361738	Symbol	dec_insn		6361618						
ANR	6361739	Symbol	* * dec_insn . code		6361618						
ANR	6361740	Symbol	* dec_insn . regs		6361618						
ANR	6361741	Function	decode_rr1	589:0:13853:14360							
ANR	6361742	FunctionDef	decode_rr1 ()		6361741	0					
ANR	6361743	CompoundStatement		591:0:13879:14360	6361741	0					
ANR	6361744	IdentifierDeclStatement	int i ;	592:2:13883:13888	6361741	0	True				
ANR	6361745	IdentifierDecl	i		6361741	0					
ANR	6361746	IdentifierDeclType	int		6361741	0					
ANR	6361747	Identifier	i		6361741	1					
ANR	6361748	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6361741	1					
ANR	6361749	ForInit	i = 0 ;	594:7:13898:13903	6361741	0	True				
ANR	6361750	AssignmentExpression	i = 0		6361741	0		=			
ANR	6361751	Identifier	i		6361741	0					
ANR	6361752	PrimaryExpression	0		6361741	1					
ANR	6361753	Condition	i < dec_insn . code -> nr_operands	594:14:13905:13934	6361741	1	True				
ANR	6361754	RelationalExpression	i < dec_insn . code -> nr_operands		6361741	0		<			
ANR	6361755	Identifier	i		6361741	0					
ANR	6361756	PtrMemberAccess	dec_insn . code -> nr_operands		6361741	1					
ANR	6361757	MemberAccess	dec_insn . code		6361741	0					
ANR	6361758	Identifier	dec_insn		6361741	0					
ANR	6361759	Identifier	code		6361741	1					
ANR	6361760	Identifier	nr_operands		6361741	1					
ANR	6361761	UnaryExpression	++ i	594:46:13937:13939	6361741	2	True				
ANR	6361762	IncDec	++		6361741	0					
ANR	6361763	Identifier	i		6361741	1					
ANR	6361764	CompoundStatement		4:51:62:62	6361741	3					
ANR	6361765	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6361741	0					
ANR	6361766	Condition	dec_insn . code -> fields [ i ]	595:11:13955:13978	6361741	0	True				
ANR	6361767	ArrayIndexing	dec_insn . code -> fields [ i ]		6361741	0					
ANR	6361768	PtrMemberAccess	dec_insn . code -> fields		6361741	0					
ANR	6361769	MemberAccess	dec_insn . code		6361741	0					
ANR	6361770	Identifier	dec_insn		6361741	0					
ANR	6361771	Identifier	code		6361741	1					
ANR	6361772	Identifier	fields		6361741	1					
ANR	6361773	Identifier	i		6361741	1					
ANR	6361774	CompoundStatement		5:37:101:101	6361741	1					
ANR	6361775	Label	case FMT_RR1_D :	596:3:13986:14000	6361741	0	True				
ANR	6361776	Identifier	FMT_RR1_D		6361741	0					
ANR	6361777	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28	597:4:14006:14061	6361741	1	True				
ANR	6361778	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28		6361741	0		=			
ANR	6361779	ArrayIndexing	dec_insn . regs [ i ]		6361741	0					
ANR	6361780	MemberAccess	dec_insn . regs		6361741	0					
ANR	6361781	Identifier	dec_insn		6361741	0					
ANR	6361782	Identifier	regs		6361741	1					
ANR	6361783	Identifier	i		6361741	1					
ANR	6361784	ShiftExpression	( dec_insn . opcode & 0xf0000000 ) >> 28		6361741	1		>>			
ANR	6361785	BitAndExpression	dec_insn . opcode & 0xf0000000		6361741	0		&			
ANR	6361786	MemberAccess	dec_insn . opcode		6361741	0					
ANR	6361787	Identifier	dec_insn		6361741	0					
ANR	6361788	Identifier	opcode		6361741	1					
ANR	6361789	PrimaryExpression	0xf0000000		6361741	1					
ANR	6361790	PrimaryExpression	28		6361741	1					
ANR	6361791	BreakStatement	break ;	598:4:14067:14072	6361741	2	True				
ANR	6361792	Label	case FMT_RR1_N :	600:3:14078:14092	6361741	3	True				
ANR	6361793	Identifier	FMT_RR1_N		6361741	0					
ANR	6361794	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x00030000 ) >> 16	601:4:14098:14153	6361741	4	True				
ANR	6361795	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x00030000 ) >> 16		6361741	0		=			
ANR	6361796	ArrayIndexing	dec_insn . cexp [ i ]		6361741	0					
ANR	6361797	MemberAccess	dec_insn . cexp		6361741	0					
ANR	6361798	Identifier	dec_insn		6361741	0					
ANR	6361799	Identifier	cexp		6361741	1					
ANR	6361800	Identifier	i		6361741	1					
ANR	6361801	ShiftExpression	( dec_insn . opcode & 0x00030000 ) >> 16		6361741	1		>>			
ANR	6361802	BitAndExpression	dec_insn . opcode & 0x00030000		6361741	0		&			
ANR	6361803	MemberAccess	dec_insn . opcode		6361741	0					
ANR	6361804	Identifier	dec_insn		6361741	0					
ANR	6361805	Identifier	opcode		6361741	1					
ANR	6361806	PrimaryExpression	0x00030000		6361741	1					
ANR	6361807	PrimaryExpression	16		6361741	1					
ANR	6361808	BreakStatement	break ;	602:4:14159:14164	6361741	5	True				
ANR	6361809	Label	case FMT_RR1_S2 :	604:3:14170:14185	6361741	6	True				
ANR	6361810	Identifier	FMT_RR1_S2		6361741	0					
ANR	6361811	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12	605:4:14191:14246	6361741	7	True				
ANR	6361812	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12		6361741	0		=			
ANR	6361813	ArrayIndexing	dec_insn . regs [ i ]		6361741	0					
ANR	6361814	MemberAccess	dec_insn . regs		6361741	0					
ANR	6361815	Identifier	dec_insn		6361741	0					
ANR	6361816	Identifier	regs		6361741	1					
ANR	6361817	Identifier	i		6361741	1					
ANR	6361818	ShiftExpression	( dec_insn . opcode & 0x0000f000 ) >> 12		6361741	1		>>			
ANR	6361819	BitAndExpression	dec_insn . opcode & 0x0000f000		6361741	0		&			
ANR	6361820	MemberAccess	dec_insn . opcode		6361741	0					
ANR	6361821	Identifier	dec_insn		6361741	0					
ANR	6361822	Identifier	opcode		6361741	1					
ANR	6361823	PrimaryExpression	0x0000f000		6361741	1					
ANR	6361824	PrimaryExpression	12		6361741	1					
ANR	6361825	BreakStatement	break ;	606:4:14252:14257	6361741	8	True				
ANR	6361826	Label	case FMT_RR1_S1 :	608:3:14263:14278	6361741	9	True				
ANR	6361827	Identifier	FMT_RR1_S1		6361741	0					
ANR	6361828	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	609:4:14284:14338	6361741	10	True				
ANR	6361829	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6361741	0		=			
ANR	6361830	ArrayIndexing	dec_insn . regs [ i ]		6361741	0					
ANR	6361831	MemberAccess	dec_insn . regs		6361741	0					
ANR	6361832	Identifier	dec_insn		6361741	0					
ANR	6361833	Identifier	regs		6361741	1					
ANR	6361834	Identifier	i		6361741	1					
ANR	6361835	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6361741	1		>>			
ANR	6361836	BitAndExpression	dec_insn . opcode & 0x00000f00		6361741	0		&			
ANR	6361837	MemberAccess	dec_insn . opcode		6361741	0					
ANR	6361838	Identifier	dec_insn		6361741	0					
ANR	6361839	Identifier	opcode		6361741	1					
ANR	6361840	PrimaryExpression	0x00000f00		6361741	1					
ANR	6361841	PrimaryExpression	8		6361741	1					
ANR	6361842	BreakStatement	break ;	610:4:14344:14349	6361741	11	True				
ANR	6361843	ReturnType	static void		6361741	1					
ANR	6361844	Identifier	decode_rr1		6361741	2					
ANR	6361845	ParameterList			6361741	3					
ANR	6361846	CFGEntryNode	ENTRY		6361741		True				
ANR	6361847	CFGExitNode	EXIT		6361741		True				
ANR	6361848	Symbol	dec_insn . code		6361741						
ANR	6361849	Symbol	dec_insn . code -> fields		6361741						
ANR	6361850	Symbol	* dec_insn . cexp		6361741						
ANR	6361851	Symbol	i		6361741						
ANR	6361852	Symbol	* dec_insn . code -> fields		6361741						
ANR	6361853	Symbol	dec_insn . cexp		6361741						
ANR	6361854	Symbol	* dec_insn		6361741						
ANR	6361855	Symbol	dec_insn . code -> nr_operands		6361741						
ANR	6361856	Symbol	* i		6361741						
ANR	6361857	Symbol	dec_insn . regs		6361741						
ANR	6361858	Symbol	* * dec_insn		6361741						
ANR	6361859	Symbol	* dec_insn . code		6361741						
ANR	6361860	Symbol	dec_insn . opcode		6361741						
ANR	6361861	Symbol	dec_insn		6361741						
ANR	6361862	Symbol	* * dec_insn . code		6361741						
ANR	6361863	Symbol	* dec_insn . regs		6361741						
ANR	6361864	Function	decode_rr2	615:0:14363:14778							
ANR	6361865	FunctionDef	decode_rr2 ()		6361864	0					
ANR	6361866	CompoundStatement		617:0:14389:14778	6361864	0					
ANR	6361867	IdentifierDeclStatement	int i ;	618:2:14393:14398	6361864	0	True				
ANR	6361868	IdentifierDecl	i		6361864	0					
ANR	6361869	IdentifierDeclType	int		6361864	0					
ANR	6361870	Identifier	i		6361864	1					
ANR	6361871	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6361864	1					
ANR	6361872	ForInit	i = 0 ;	620:7:14408:14413	6361864	0	True				
ANR	6361873	AssignmentExpression	i = 0		6361864	0		=			
ANR	6361874	Identifier	i		6361864	0					
ANR	6361875	PrimaryExpression	0		6361864	1					
ANR	6361876	Condition	i < dec_insn . code -> nr_operands	620:14:14415:14444	6361864	1	True				
ANR	6361877	RelationalExpression	i < dec_insn . code -> nr_operands		6361864	0		<			
ANR	6361878	Identifier	i		6361864	0					
ANR	6361879	PtrMemberAccess	dec_insn . code -> nr_operands		6361864	1					
ANR	6361880	MemberAccess	dec_insn . code		6361864	0					
ANR	6361881	Identifier	dec_insn		6361864	0					
ANR	6361882	Identifier	code		6361864	1					
ANR	6361883	Identifier	nr_operands		6361864	1					
ANR	6361884	UnaryExpression	++ i	620:46:14447:14449	6361864	2	True				
ANR	6361885	IncDec	++		6361864	0					
ANR	6361886	Identifier	i		6361864	1					
ANR	6361887	CompoundStatement		4:51:62:62	6361864	3					
ANR	6361888	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6361864	0					
ANR	6361889	Condition	dec_insn . code -> fields [ i ]	621:11:14465:14488	6361864	0	True				
ANR	6361890	ArrayIndexing	dec_insn . code -> fields [ i ]		6361864	0					
ANR	6361891	PtrMemberAccess	dec_insn . code -> fields		6361864	0					
ANR	6361892	MemberAccess	dec_insn . code		6361864	0					
ANR	6361893	Identifier	dec_insn		6361864	0					
ANR	6361894	Identifier	code		6361864	1					
ANR	6361895	Identifier	fields		6361864	1					
ANR	6361896	Identifier	i		6361864	1					
ANR	6361897	CompoundStatement		5:37:101:101	6361864	1					
ANR	6361898	Label	case FMT_RR2_D :	622:3:14496:14510	6361864	0	True				
ANR	6361899	Identifier	FMT_RR2_D		6361864	0					
ANR	6361900	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28	623:4:14516:14571	6361864	1	True				
ANR	6361901	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28		6361864	0		=			
ANR	6361902	ArrayIndexing	dec_insn . regs [ i ]		6361864	0					
ANR	6361903	MemberAccess	dec_insn . regs		6361864	0					
ANR	6361904	Identifier	dec_insn		6361864	0					
ANR	6361905	Identifier	regs		6361864	1					
ANR	6361906	Identifier	i		6361864	1					
ANR	6361907	ShiftExpression	( dec_insn . opcode & 0xf0000000 ) >> 28		6361864	1		>>			
ANR	6361908	BitAndExpression	dec_insn . opcode & 0xf0000000		6361864	0		&			
ANR	6361909	MemberAccess	dec_insn . opcode		6361864	0					
ANR	6361910	Identifier	dec_insn		6361864	0					
ANR	6361911	Identifier	opcode		6361864	1					
ANR	6361912	PrimaryExpression	0xf0000000		6361864	1					
ANR	6361913	PrimaryExpression	28		6361864	1					
ANR	6361914	BreakStatement	break ;	624:4:14577:14582	6361864	2	True				
ANR	6361915	Label	case FMT_RR2_S2 :	626:3:14588:14603	6361864	3	True				
ANR	6361916	Identifier	FMT_RR2_S2		6361864	0					
ANR	6361917	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12	627:4:14609:14664	6361864	4	True				
ANR	6361918	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12		6361864	0		=			
ANR	6361919	ArrayIndexing	dec_insn . regs [ i ]		6361864	0					
ANR	6361920	MemberAccess	dec_insn . regs		6361864	0					
ANR	6361921	Identifier	dec_insn		6361864	0					
ANR	6361922	Identifier	regs		6361864	1					
ANR	6361923	Identifier	i		6361864	1					
ANR	6361924	ShiftExpression	( dec_insn . opcode & 0x0000f000 ) >> 12		6361864	1		>>			
ANR	6361925	BitAndExpression	dec_insn . opcode & 0x0000f000		6361864	0		&			
ANR	6361926	MemberAccess	dec_insn . opcode		6361864	0					
ANR	6361927	Identifier	dec_insn		6361864	0					
ANR	6361928	Identifier	opcode		6361864	1					
ANR	6361929	PrimaryExpression	0x0000f000		6361864	1					
ANR	6361930	PrimaryExpression	12		6361864	1					
ANR	6361931	BreakStatement	break ;	628:4:14670:14675	6361864	5	True				
ANR	6361932	Label	case FMT_RR2_S1 :	630:3:14681:14696	6361864	6	True				
ANR	6361933	Identifier	FMT_RR2_S1		6361864	0					
ANR	6361934	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	631:4:14702:14756	6361864	7	True				
ANR	6361935	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6361864	0		=			
ANR	6361936	ArrayIndexing	dec_insn . regs [ i ]		6361864	0					
ANR	6361937	MemberAccess	dec_insn . regs		6361864	0					
ANR	6361938	Identifier	dec_insn		6361864	0					
ANR	6361939	Identifier	regs		6361864	1					
ANR	6361940	Identifier	i		6361864	1					
ANR	6361941	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6361864	1		>>			
ANR	6361942	BitAndExpression	dec_insn . opcode & 0x00000f00		6361864	0		&			
ANR	6361943	MemberAccess	dec_insn . opcode		6361864	0					
ANR	6361944	Identifier	dec_insn		6361864	0					
ANR	6361945	Identifier	opcode		6361864	1					
ANR	6361946	PrimaryExpression	0x00000f00		6361864	1					
ANR	6361947	PrimaryExpression	8		6361864	1					
ANR	6361948	BreakStatement	break ;	632:4:14762:14767	6361864	8	True				
ANR	6361949	ReturnType	static void		6361864	1					
ANR	6361950	Identifier	decode_rr2		6361864	2					
ANR	6361951	ParameterList			6361864	3					
ANR	6361952	CFGEntryNode	ENTRY		6361864		True				
ANR	6361953	CFGExitNode	EXIT		6361864		True				
ANR	6361954	Symbol	dec_insn . code		6361864						
ANR	6361955	Symbol	dec_insn . code -> fields		6361864						
ANR	6361956	Symbol	i		6361864						
ANR	6361957	Symbol	* dec_insn . code -> fields		6361864						
ANR	6361958	Symbol	* dec_insn		6361864						
ANR	6361959	Symbol	dec_insn . code -> nr_operands		6361864						
ANR	6361960	Symbol	* i		6361864						
ANR	6361961	Symbol	dec_insn . regs		6361864						
ANR	6361962	Symbol	* * dec_insn		6361864						
ANR	6361963	Symbol	* dec_insn . code		6361864						
ANR	6361964	Symbol	dec_insn . opcode		6361864						
ANR	6361965	Symbol	dec_insn		6361864						
ANR	6361966	Symbol	* * dec_insn . code		6361864						
ANR	6361967	Symbol	* dec_insn . regs		6361864						
ANR	6361968	Function	decode_rrpw	637:0:14781:15386							
ANR	6361969	FunctionDef	decode_rrpw ()		6361968	0					
ANR	6361970	CompoundStatement		639:0:14808:15386	6361968	0					
ANR	6361971	IdentifierDeclStatement	int i ;	640:2:14812:14817	6361968	0	True				
ANR	6361972	IdentifierDecl	i		6361968	0					
ANR	6361973	IdentifierDeclType	int		6361968	0					
ANR	6361974	Identifier	i		6361968	1					
ANR	6361975	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6361968	1					
ANR	6361976	ForInit	i = 0 ;	642:7:14827:14832	6361968	0	True				
ANR	6361977	AssignmentExpression	i = 0		6361968	0		=			
ANR	6361978	Identifier	i		6361968	0					
ANR	6361979	PrimaryExpression	0		6361968	1					
ANR	6361980	Condition	i < dec_insn . code -> nr_operands	642:14:14834:14863	6361968	1	True				
ANR	6361981	RelationalExpression	i < dec_insn . code -> nr_operands		6361968	0		<			
ANR	6361982	Identifier	i		6361968	0					
ANR	6361983	PtrMemberAccess	dec_insn . code -> nr_operands		6361968	1					
ANR	6361984	MemberAccess	dec_insn . code		6361968	0					
ANR	6361985	Identifier	dec_insn		6361968	0					
ANR	6361986	Identifier	code		6361968	1					
ANR	6361987	Identifier	nr_operands		6361968	1					
ANR	6361988	UnaryExpression	++ i	642:46:14866:14868	6361968	2	True				
ANR	6361989	IncDec	++		6361968	0					
ANR	6361990	Identifier	i		6361968	1					
ANR	6361991	CompoundStatement		4:51:62:62	6361968	3					
ANR	6361992	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6361968	0					
ANR	6361993	Condition	dec_insn . code -> fields [ i ]	643:11:14884:14907	6361968	0	True				
ANR	6361994	ArrayIndexing	dec_insn . code -> fields [ i ]		6361968	0					
ANR	6361995	PtrMemberAccess	dec_insn . code -> fields		6361968	0					
ANR	6361996	MemberAccess	dec_insn . code		6361968	0					
ANR	6361997	Identifier	dec_insn		6361968	0					
ANR	6361998	Identifier	code		6361968	1					
ANR	6361999	Identifier	fields		6361968	1					
ANR	6362000	Identifier	i		6361968	1					
ANR	6362001	CompoundStatement		5:37:101:101	6361968	1					
ANR	6362002	Label	case FMT_RRPW_D :	644:3:14915:14930	6361968	0	True				
ANR	6362003	Identifier	FMT_RRPW_D		6361968	0					
ANR	6362004	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28	645:4:14936:14991	6361968	1	True				
ANR	6362005	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28		6361968	0		=			
ANR	6362006	ArrayIndexing	dec_insn . regs [ i ]		6361968	0					
ANR	6362007	MemberAccess	dec_insn . regs		6361968	0					
ANR	6362008	Identifier	dec_insn		6361968	0					
ANR	6362009	Identifier	regs		6361968	1					
ANR	6362010	Identifier	i		6361968	1					
ANR	6362011	ShiftExpression	( dec_insn . opcode & 0xf0000000 ) >> 28		6361968	1		>>			
ANR	6362012	BitAndExpression	dec_insn . opcode & 0xf0000000		6361968	0		&			
ANR	6362013	MemberAccess	dec_insn . opcode		6361968	0					
ANR	6362014	Identifier	dec_insn		6361968	0					
ANR	6362015	Identifier	opcode		6361968	1					
ANR	6362016	PrimaryExpression	0xf0000000		6361968	1					
ANR	6362017	PrimaryExpression	28		6361968	1					
ANR	6362018	BreakStatement	break ;	646:4:14997:15002	6361968	2	True				
ANR	6362019	Label	case FMT_RRPW_P :	648:3:15008:15023	6361968	3	True				
ANR	6362020	Identifier	FMT_RRPW_P		6361968	0					
ANR	6362021	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0f800000 ) >> 23	649:4:15029:15084	6361968	4	True				
ANR	6362022	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0f800000 ) >> 23		6361968	0		=			
ANR	6362023	ArrayIndexing	dec_insn . cexp [ i ]		6361968	0					
ANR	6362024	MemberAccess	dec_insn . cexp		6361968	0					
ANR	6362025	Identifier	dec_insn		6361968	0					
ANR	6362026	Identifier	cexp		6361968	1					
ANR	6362027	Identifier	i		6361968	1					
ANR	6362028	ShiftExpression	( dec_insn . opcode & 0x0f800000 ) >> 23		6361968	1		>>			
ANR	6362029	BitAndExpression	dec_insn . opcode & 0x0f800000		6361968	0		&			
ANR	6362030	MemberAccess	dec_insn . opcode		6361968	0					
ANR	6362031	Identifier	dec_insn		6361968	0					
ANR	6362032	Identifier	opcode		6361968	1					
ANR	6362033	PrimaryExpression	0x0f800000		6361968	1					
ANR	6362034	PrimaryExpression	23		6361968	1					
ANR	6362035	BreakStatement	break ;	650:4:15090:15095	6361968	5	True				
ANR	6362036	Label	case FMT_RRPW_W :	652:3:15101:15116	6361968	6	True				
ANR	6362037	Identifier	FMT_RRPW_W		6361968	0					
ANR	6362038	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x001f0000 ) >> 16	653:4:15122:15177	6361968	7	True				
ANR	6362039	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x001f0000 ) >> 16		6361968	0		=			
ANR	6362040	ArrayIndexing	dec_insn . cexp [ i ]		6361968	0					
ANR	6362041	MemberAccess	dec_insn . cexp		6361968	0					
ANR	6362042	Identifier	dec_insn		6361968	0					
ANR	6362043	Identifier	cexp		6361968	1					
ANR	6362044	Identifier	i		6361968	1					
ANR	6362045	ShiftExpression	( dec_insn . opcode & 0x001f0000 ) >> 16		6361968	1		>>			
ANR	6362046	BitAndExpression	dec_insn . opcode & 0x001f0000		6361968	0		&			
ANR	6362047	MemberAccess	dec_insn . opcode		6361968	0					
ANR	6362048	Identifier	dec_insn		6361968	0					
ANR	6362049	Identifier	opcode		6361968	1					
ANR	6362050	PrimaryExpression	0x001f0000		6361968	1					
ANR	6362051	PrimaryExpression	16		6361968	1					
ANR	6362052	BreakStatement	break ;	654:4:15183:15188	6361968	8	True				
ANR	6362053	Label	case FMT_RRPW_S2 :	656:3:15194:15210	6361968	9	True				
ANR	6362054	Identifier	FMT_RRPW_S2		6361968	0					
ANR	6362055	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12	657:4:15216:15271	6361968	10	True				
ANR	6362056	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12		6361968	0		=			
ANR	6362057	ArrayIndexing	dec_insn . regs [ i ]		6361968	0					
ANR	6362058	MemberAccess	dec_insn . regs		6361968	0					
ANR	6362059	Identifier	dec_insn		6361968	0					
ANR	6362060	Identifier	regs		6361968	1					
ANR	6362061	Identifier	i		6361968	1					
ANR	6362062	ShiftExpression	( dec_insn . opcode & 0x0000f000 ) >> 12		6361968	1		>>			
ANR	6362063	BitAndExpression	dec_insn . opcode & 0x0000f000		6361968	0		&			
ANR	6362064	MemberAccess	dec_insn . opcode		6361968	0					
ANR	6362065	Identifier	dec_insn		6361968	0					
ANR	6362066	Identifier	opcode		6361968	1					
ANR	6362067	PrimaryExpression	0x0000f000		6361968	1					
ANR	6362068	PrimaryExpression	12		6361968	1					
ANR	6362069	BreakStatement	break ;	658:4:15277:15282	6361968	11	True				
ANR	6362070	Label	case FMT_RRPW_S1 :	660:3:15288:15304	6361968	12	True				
ANR	6362071	Identifier	FMT_RRPW_S1		6361968	0					
ANR	6362072	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	661:4:15310:15364	6361968	13	True				
ANR	6362073	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6361968	0		=			
ANR	6362074	ArrayIndexing	dec_insn . regs [ i ]		6361968	0					
ANR	6362075	MemberAccess	dec_insn . regs		6361968	0					
ANR	6362076	Identifier	dec_insn		6361968	0					
ANR	6362077	Identifier	regs		6361968	1					
ANR	6362078	Identifier	i		6361968	1					
ANR	6362079	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6361968	1		>>			
ANR	6362080	BitAndExpression	dec_insn . opcode & 0x00000f00		6361968	0		&			
ANR	6362081	MemberAccess	dec_insn . opcode		6361968	0					
ANR	6362082	Identifier	dec_insn		6361968	0					
ANR	6362083	Identifier	opcode		6361968	1					
ANR	6362084	PrimaryExpression	0x00000f00		6361968	1					
ANR	6362085	PrimaryExpression	8		6361968	1					
ANR	6362086	BreakStatement	break ;	662:4:15370:15375	6361968	14	True				
ANR	6362087	ReturnType	static void		6361968	1					
ANR	6362088	Identifier	decode_rrpw		6361968	2					
ANR	6362089	ParameterList			6361968	3					
ANR	6362090	CFGEntryNode	ENTRY		6361968		True				
ANR	6362091	CFGExitNode	EXIT		6361968		True				
ANR	6362092	Symbol	dec_insn . code		6361968						
ANR	6362093	Symbol	dec_insn . code -> fields		6361968						
ANR	6362094	Symbol	* dec_insn . cexp		6361968						
ANR	6362095	Symbol	i		6361968						
ANR	6362096	Symbol	* dec_insn . code -> fields		6361968						
ANR	6362097	Symbol	dec_insn . cexp		6361968						
ANR	6362098	Symbol	* dec_insn		6361968						
ANR	6362099	Symbol	dec_insn . code -> nr_operands		6361968						
ANR	6362100	Symbol	* i		6361968						
ANR	6362101	Symbol	dec_insn . regs		6361968						
ANR	6362102	Symbol	* * dec_insn		6361968						
ANR	6362103	Symbol	* dec_insn . code		6361968						
ANR	6362104	Symbol	dec_insn . opcode		6361968						
ANR	6362105	Symbol	dec_insn		6361968						
ANR	6362106	Symbol	* * dec_insn . code		6361968						
ANR	6362107	Symbol	* dec_insn . regs		6361968						
ANR	6362108	Function	decode_rrr	667:0:15389:15989							
ANR	6362109	FunctionDef	decode_rrr ()		6362108	0					
ANR	6362110	CompoundStatement		669:0:15415:15989	6362108	0					
ANR	6362111	IdentifierDeclStatement	int i ;	670:2:15419:15424	6362108	0	True				
ANR	6362112	IdentifierDecl	i		6362108	0					
ANR	6362113	IdentifierDeclType	int		6362108	0					
ANR	6362114	Identifier	i		6362108	1					
ANR	6362115	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6362108	1					
ANR	6362116	ForInit	i = 0 ;	672:7:15434:15439	6362108	0	True				
ANR	6362117	AssignmentExpression	i = 0		6362108	0		=			
ANR	6362118	Identifier	i		6362108	0					
ANR	6362119	PrimaryExpression	0		6362108	1					
ANR	6362120	Condition	i < dec_insn . code -> nr_operands	672:14:15441:15470	6362108	1	True				
ANR	6362121	RelationalExpression	i < dec_insn . code -> nr_operands		6362108	0		<			
ANR	6362122	Identifier	i		6362108	0					
ANR	6362123	PtrMemberAccess	dec_insn . code -> nr_operands		6362108	1					
ANR	6362124	MemberAccess	dec_insn . code		6362108	0					
ANR	6362125	Identifier	dec_insn		6362108	0					
ANR	6362126	Identifier	code		6362108	1					
ANR	6362127	Identifier	nr_operands		6362108	1					
ANR	6362128	UnaryExpression	++ i	672:46:15473:15475	6362108	2	True				
ANR	6362129	IncDec	++		6362108	0					
ANR	6362130	Identifier	i		6362108	1					
ANR	6362131	CompoundStatement		4:51:62:62	6362108	3					
ANR	6362132	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6362108	0					
ANR	6362133	Condition	dec_insn . code -> fields [ i ]	673:11:15491:15514	6362108	0	True				
ANR	6362134	ArrayIndexing	dec_insn . code -> fields [ i ]		6362108	0					
ANR	6362135	PtrMemberAccess	dec_insn . code -> fields		6362108	0					
ANR	6362136	MemberAccess	dec_insn . code		6362108	0					
ANR	6362137	Identifier	dec_insn		6362108	0					
ANR	6362138	Identifier	code		6362108	1					
ANR	6362139	Identifier	fields		6362108	1					
ANR	6362140	Identifier	i		6362108	1					
ANR	6362141	CompoundStatement		5:37:101:101	6362108	1					
ANR	6362142	Label	case FMT_RRR_D :	674:3:15522:15536	6362108	0	True				
ANR	6362143	Identifier	FMT_RRR_D		6362108	0					
ANR	6362144	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28	675:4:15542:15597	6362108	1	True				
ANR	6362145	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28		6362108	0		=			
ANR	6362146	ArrayIndexing	dec_insn . regs [ i ]		6362108	0					
ANR	6362147	MemberAccess	dec_insn . regs		6362108	0					
ANR	6362148	Identifier	dec_insn		6362108	0					
ANR	6362149	Identifier	regs		6362108	1					
ANR	6362150	Identifier	i		6362108	1					
ANR	6362151	ShiftExpression	( dec_insn . opcode & 0xf0000000 ) >> 28		6362108	1		>>			
ANR	6362152	BitAndExpression	dec_insn . opcode & 0xf0000000		6362108	0		&			
ANR	6362153	MemberAccess	dec_insn . opcode		6362108	0					
ANR	6362154	Identifier	dec_insn		6362108	0					
ANR	6362155	Identifier	opcode		6362108	1					
ANR	6362156	PrimaryExpression	0xf0000000		6362108	1					
ANR	6362157	PrimaryExpression	28		6362108	1					
ANR	6362158	BreakStatement	break ;	676:4:15603:15608	6362108	2	True				
ANR	6362159	Label	case FMT_RRR_S3 :	678:3:15614:15629	6362108	3	True				
ANR	6362160	Identifier	FMT_RRR_S3		6362108	0					
ANR	6362161	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f000000 ) >> 24	679:4:15635:15690	6362108	4	True				
ANR	6362162	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f000000 ) >> 24		6362108	0		=			
ANR	6362163	ArrayIndexing	dec_insn . regs [ i ]		6362108	0					
ANR	6362164	MemberAccess	dec_insn . regs		6362108	0					
ANR	6362165	Identifier	dec_insn		6362108	0					
ANR	6362166	Identifier	regs		6362108	1					
ANR	6362167	Identifier	i		6362108	1					
ANR	6362168	ShiftExpression	( dec_insn . opcode & 0x0f000000 ) >> 24		6362108	1		>>			
ANR	6362169	BitAndExpression	dec_insn . opcode & 0x0f000000		6362108	0		&			
ANR	6362170	MemberAccess	dec_insn . opcode		6362108	0					
ANR	6362171	Identifier	dec_insn		6362108	0					
ANR	6362172	Identifier	opcode		6362108	1					
ANR	6362173	PrimaryExpression	0x0f000000		6362108	1					
ANR	6362174	PrimaryExpression	24		6362108	1					
ANR	6362175	BreakStatement	break ;	680:4:15696:15701	6362108	5	True				
ANR	6362176	Label	case FMT_RRR_N :	682:3:15707:15721	6362108	6	True				
ANR	6362177	Identifier	FMT_RRR_N		6362108	0					
ANR	6362178	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x00030000 ) >> 16	683:4:15727:15782	6362108	7	True				
ANR	6362179	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x00030000 ) >> 16		6362108	0		=			
ANR	6362180	ArrayIndexing	dec_insn . cexp [ i ]		6362108	0					
ANR	6362181	MemberAccess	dec_insn . cexp		6362108	0					
ANR	6362182	Identifier	dec_insn		6362108	0					
ANR	6362183	Identifier	cexp		6362108	1					
ANR	6362184	Identifier	i		6362108	1					
ANR	6362185	ShiftExpression	( dec_insn . opcode & 0x00030000 ) >> 16		6362108	1		>>			
ANR	6362186	BitAndExpression	dec_insn . opcode & 0x00030000		6362108	0		&			
ANR	6362187	MemberAccess	dec_insn . opcode		6362108	0					
ANR	6362188	Identifier	dec_insn		6362108	0					
ANR	6362189	Identifier	opcode		6362108	1					
ANR	6362190	PrimaryExpression	0x00030000		6362108	1					
ANR	6362191	PrimaryExpression	16		6362108	1					
ANR	6362192	BreakStatement	break ;	684:4:15788:15793	6362108	8	True				
ANR	6362193	Label	case FMT_RRR_S2 :	686:3:15799:15814	6362108	9	True				
ANR	6362194	Identifier	FMT_RRR_S2		6362108	0					
ANR	6362195	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12	687:4:15820:15875	6362108	10	True				
ANR	6362196	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12		6362108	0		=			
ANR	6362197	ArrayIndexing	dec_insn . regs [ i ]		6362108	0					
ANR	6362198	MemberAccess	dec_insn . regs		6362108	0					
ANR	6362199	Identifier	dec_insn		6362108	0					
ANR	6362200	Identifier	regs		6362108	1					
ANR	6362201	Identifier	i		6362108	1					
ANR	6362202	ShiftExpression	( dec_insn . opcode & 0x0000f000 ) >> 12		6362108	1		>>			
ANR	6362203	BitAndExpression	dec_insn . opcode & 0x0000f000		6362108	0		&			
ANR	6362204	MemberAccess	dec_insn . opcode		6362108	0					
ANR	6362205	Identifier	dec_insn		6362108	0					
ANR	6362206	Identifier	opcode		6362108	1					
ANR	6362207	PrimaryExpression	0x0000f000		6362108	1					
ANR	6362208	PrimaryExpression	12		6362108	1					
ANR	6362209	BreakStatement	break ;	688:4:15881:15886	6362108	11	True				
ANR	6362210	Label	case FMT_RRR_S1 :	690:3:15892:15907	6362108	12	True				
ANR	6362211	Identifier	FMT_RRR_S1		6362108	0					
ANR	6362212	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	691:4:15913:15967	6362108	13	True				
ANR	6362213	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6362108	0		=			
ANR	6362214	ArrayIndexing	dec_insn . regs [ i ]		6362108	0					
ANR	6362215	MemberAccess	dec_insn . regs		6362108	0					
ANR	6362216	Identifier	dec_insn		6362108	0					
ANR	6362217	Identifier	regs		6362108	1					
ANR	6362218	Identifier	i		6362108	1					
ANR	6362219	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6362108	1		>>			
ANR	6362220	BitAndExpression	dec_insn . opcode & 0x00000f00		6362108	0		&			
ANR	6362221	MemberAccess	dec_insn . opcode		6362108	0					
ANR	6362222	Identifier	dec_insn		6362108	0					
ANR	6362223	Identifier	opcode		6362108	1					
ANR	6362224	PrimaryExpression	0x00000f00		6362108	1					
ANR	6362225	PrimaryExpression	8		6362108	1					
ANR	6362226	BreakStatement	break ;	692:4:15973:15978	6362108	14	True				
ANR	6362227	ReturnType	static void		6362108	1					
ANR	6362228	Identifier	decode_rrr		6362108	2					
ANR	6362229	ParameterList			6362108	3					
ANR	6362230	CFGEntryNode	ENTRY		6362108		True				
ANR	6362231	CFGExitNode	EXIT		6362108		True				
ANR	6362232	Symbol	dec_insn . code		6362108						
ANR	6362233	Symbol	dec_insn . code -> fields		6362108						
ANR	6362234	Symbol	* dec_insn . cexp		6362108						
ANR	6362235	Symbol	i		6362108						
ANR	6362236	Symbol	* dec_insn . code -> fields		6362108						
ANR	6362237	Symbol	dec_insn . cexp		6362108						
ANR	6362238	Symbol	* dec_insn		6362108						
ANR	6362239	Symbol	dec_insn . code -> nr_operands		6362108						
ANR	6362240	Symbol	* i		6362108						
ANR	6362241	Symbol	dec_insn . regs		6362108						
ANR	6362242	Symbol	* * dec_insn		6362108						
ANR	6362243	Symbol	* dec_insn . code		6362108						
ANR	6362244	Symbol	dec_insn . opcode		6362108						
ANR	6362245	Symbol	dec_insn		6362108						
ANR	6362246	Symbol	* * dec_insn . code		6362108						
ANR	6362247	Symbol	* dec_insn . regs		6362108						
ANR	6362248	Function	decode_rrr1	697:0:15992:16598							
ANR	6362249	FunctionDef	decode_rrr1 ()		6362248	0					
ANR	6362250	CompoundStatement		699:0:16019:16598	6362248	0					
ANR	6362251	IdentifierDeclStatement	int i ;	700:2:16023:16028	6362248	0	True				
ANR	6362252	IdentifierDecl	i		6362248	0					
ANR	6362253	IdentifierDeclType	int		6362248	0					
ANR	6362254	Identifier	i		6362248	1					
ANR	6362255	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6362248	1					
ANR	6362256	ForInit	i = 0 ;	702:7:16038:16043	6362248	0	True				
ANR	6362257	AssignmentExpression	i = 0		6362248	0		=			
ANR	6362258	Identifier	i		6362248	0					
ANR	6362259	PrimaryExpression	0		6362248	1					
ANR	6362260	Condition	i < dec_insn . code -> nr_operands	702:14:16045:16074	6362248	1	True				
ANR	6362261	RelationalExpression	i < dec_insn . code -> nr_operands		6362248	0		<			
ANR	6362262	Identifier	i		6362248	0					
ANR	6362263	PtrMemberAccess	dec_insn . code -> nr_operands		6362248	1					
ANR	6362264	MemberAccess	dec_insn . code		6362248	0					
ANR	6362265	Identifier	dec_insn		6362248	0					
ANR	6362266	Identifier	code		6362248	1					
ANR	6362267	Identifier	nr_operands		6362248	1					
ANR	6362268	UnaryExpression	++ i	702:46:16077:16079	6362248	2	True				
ANR	6362269	IncDec	++		6362248	0					
ANR	6362270	Identifier	i		6362248	1					
ANR	6362271	CompoundStatement		4:51:62:62	6362248	3					
ANR	6362272	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6362248	0					
ANR	6362273	Condition	dec_insn . code -> fields [ i ]	703:11:16095:16118	6362248	0	True				
ANR	6362274	ArrayIndexing	dec_insn . code -> fields [ i ]		6362248	0					
ANR	6362275	PtrMemberAccess	dec_insn . code -> fields		6362248	0					
ANR	6362276	MemberAccess	dec_insn . code		6362248	0					
ANR	6362277	Identifier	dec_insn		6362248	0					
ANR	6362278	Identifier	code		6362248	1					
ANR	6362279	Identifier	fields		6362248	1					
ANR	6362280	Identifier	i		6362248	1					
ANR	6362281	CompoundStatement		5:37:101:101	6362248	1					
ANR	6362282	Label	case FMT_RRR1_D :	704:3:16126:16141	6362248	0	True				
ANR	6362283	Identifier	FMT_RRR1_D		6362248	0					
ANR	6362284	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28	705:4:16147:16202	6362248	1	True				
ANR	6362285	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28		6362248	0		=			
ANR	6362286	ArrayIndexing	dec_insn . regs [ i ]		6362248	0					
ANR	6362287	MemberAccess	dec_insn . regs		6362248	0					
ANR	6362288	Identifier	dec_insn		6362248	0					
ANR	6362289	Identifier	regs		6362248	1					
ANR	6362290	Identifier	i		6362248	1					
ANR	6362291	ShiftExpression	( dec_insn . opcode & 0xf0000000 ) >> 28		6362248	1		>>			
ANR	6362292	BitAndExpression	dec_insn . opcode & 0xf0000000		6362248	0		&			
ANR	6362293	MemberAccess	dec_insn . opcode		6362248	0					
ANR	6362294	Identifier	dec_insn		6362248	0					
ANR	6362295	Identifier	opcode		6362248	1					
ANR	6362296	PrimaryExpression	0xf0000000		6362248	1					
ANR	6362297	PrimaryExpression	28		6362248	1					
ANR	6362298	BreakStatement	break ;	706:4:16208:16213	6362248	2	True				
ANR	6362299	Label	case FMT_RRR1_S3 :	708:3:16219:16235	6362248	3	True				
ANR	6362300	Identifier	FMT_RRR1_S3		6362248	0					
ANR	6362301	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f000000 ) >> 24	709:4:16241:16296	6362248	4	True				
ANR	6362302	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f000000 ) >> 24		6362248	0		=			
ANR	6362303	ArrayIndexing	dec_insn . regs [ i ]		6362248	0					
ANR	6362304	MemberAccess	dec_insn . regs		6362248	0					
ANR	6362305	Identifier	dec_insn		6362248	0					
ANR	6362306	Identifier	regs		6362248	1					
ANR	6362307	Identifier	i		6362248	1					
ANR	6362308	ShiftExpression	( dec_insn . opcode & 0x0f000000 ) >> 24		6362248	1		>>			
ANR	6362309	BitAndExpression	dec_insn . opcode & 0x0f000000		6362248	0		&			
ANR	6362310	MemberAccess	dec_insn . opcode		6362248	0					
ANR	6362311	Identifier	dec_insn		6362248	0					
ANR	6362312	Identifier	opcode		6362248	1					
ANR	6362313	PrimaryExpression	0x0f000000		6362248	1					
ANR	6362314	PrimaryExpression	24		6362248	1					
ANR	6362315	BreakStatement	break ;	710:4:16302:16307	6362248	5	True				
ANR	6362316	Label	case FMT_RRR1_N :	712:3:16313:16328	6362248	6	True				
ANR	6362317	Identifier	FMT_RRR1_N		6362248	0					
ANR	6362318	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x00030000 ) >> 16	713:4:16334:16389	6362248	7	True				
ANR	6362319	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x00030000 ) >> 16		6362248	0		=			
ANR	6362320	ArrayIndexing	dec_insn . cexp [ i ]		6362248	0					
ANR	6362321	MemberAccess	dec_insn . cexp		6362248	0					
ANR	6362322	Identifier	dec_insn		6362248	0					
ANR	6362323	Identifier	cexp		6362248	1					
ANR	6362324	Identifier	i		6362248	1					
ANR	6362325	ShiftExpression	( dec_insn . opcode & 0x00030000 ) >> 16		6362248	1		>>			
ANR	6362326	BitAndExpression	dec_insn . opcode & 0x00030000		6362248	0		&			
ANR	6362327	MemberAccess	dec_insn . opcode		6362248	0					
ANR	6362328	Identifier	dec_insn		6362248	0					
ANR	6362329	Identifier	opcode		6362248	1					
ANR	6362330	PrimaryExpression	0x00030000		6362248	1					
ANR	6362331	PrimaryExpression	16		6362248	1					
ANR	6362332	BreakStatement	break ;	714:4:16395:16400	6362248	8	True				
ANR	6362333	Label	case FMT_RRR1_S2 :	716:3:16406:16422	6362248	9	True				
ANR	6362334	Identifier	FMT_RRR1_S2		6362248	0					
ANR	6362335	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12	717:4:16428:16483	6362248	10	True				
ANR	6362336	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12		6362248	0		=			
ANR	6362337	ArrayIndexing	dec_insn . regs [ i ]		6362248	0					
ANR	6362338	MemberAccess	dec_insn . regs		6362248	0					
ANR	6362339	Identifier	dec_insn		6362248	0					
ANR	6362340	Identifier	regs		6362248	1					
ANR	6362341	Identifier	i		6362248	1					
ANR	6362342	ShiftExpression	( dec_insn . opcode & 0x0000f000 ) >> 12		6362248	1		>>			
ANR	6362343	BitAndExpression	dec_insn . opcode & 0x0000f000		6362248	0		&			
ANR	6362344	MemberAccess	dec_insn . opcode		6362248	0					
ANR	6362345	Identifier	dec_insn		6362248	0					
ANR	6362346	Identifier	opcode		6362248	1					
ANR	6362347	PrimaryExpression	0x0000f000		6362248	1					
ANR	6362348	PrimaryExpression	12		6362248	1					
ANR	6362349	BreakStatement	break ;	718:4:16489:16494	6362248	11	True				
ANR	6362350	Label	case FMT_RRR1_S1 :	720:3:16500:16516	6362248	12	True				
ANR	6362351	Identifier	FMT_RRR1_S1		6362248	0					
ANR	6362352	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	721:4:16522:16576	6362248	13	True				
ANR	6362353	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6362248	0		=			
ANR	6362354	ArrayIndexing	dec_insn . regs [ i ]		6362248	0					
ANR	6362355	MemberAccess	dec_insn . regs		6362248	0					
ANR	6362356	Identifier	dec_insn		6362248	0					
ANR	6362357	Identifier	regs		6362248	1					
ANR	6362358	Identifier	i		6362248	1					
ANR	6362359	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6362248	1		>>			
ANR	6362360	BitAndExpression	dec_insn . opcode & 0x00000f00		6362248	0		&			
ANR	6362361	MemberAccess	dec_insn . opcode		6362248	0					
ANR	6362362	Identifier	dec_insn		6362248	0					
ANR	6362363	Identifier	opcode		6362248	1					
ANR	6362364	PrimaryExpression	0x00000f00		6362248	1					
ANR	6362365	PrimaryExpression	8		6362248	1					
ANR	6362366	BreakStatement	break ;	722:4:16582:16587	6362248	14	True				
ANR	6362367	ReturnType	static void		6362248	1					
ANR	6362368	Identifier	decode_rrr1		6362248	2					
ANR	6362369	ParameterList			6362248	3					
ANR	6362370	CFGEntryNode	ENTRY		6362248		True				
ANR	6362371	CFGExitNode	EXIT		6362248		True				
ANR	6362372	Symbol	dec_insn . code		6362248						
ANR	6362373	Symbol	dec_insn . code -> fields		6362248						
ANR	6362374	Symbol	* dec_insn . cexp		6362248						
ANR	6362375	Symbol	i		6362248						
ANR	6362376	Symbol	* dec_insn . code -> fields		6362248						
ANR	6362377	Symbol	dec_insn . cexp		6362248						
ANR	6362378	Symbol	* dec_insn		6362248						
ANR	6362379	Symbol	dec_insn . code -> nr_operands		6362248						
ANR	6362380	Symbol	* i		6362248						
ANR	6362381	Symbol	dec_insn . regs		6362248						
ANR	6362382	Symbol	* * dec_insn		6362248						
ANR	6362383	Symbol	* dec_insn . code		6362248						
ANR	6362384	Symbol	dec_insn . opcode		6362248						
ANR	6362385	Symbol	dec_insn		6362248						
ANR	6362386	Symbol	* * dec_insn . code		6362248						
ANR	6362387	Symbol	* dec_insn . regs		6362248						
ANR	6362388	Function	decode_rrr2	727:0:16601:17114							
ANR	6362389	FunctionDef	decode_rrr2 ()		6362388	0					
ANR	6362390	CompoundStatement		729:0:16628:17114	6362388	0					
ANR	6362391	IdentifierDeclStatement	int i ;	730:2:16632:16637	6362388	0	True				
ANR	6362392	IdentifierDecl	i		6362388	0					
ANR	6362393	IdentifierDeclType	int		6362388	0					
ANR	6362394	Identifier	i		6362388	1					
ANR	6362395	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6362388	1					
ANR	6362396	ForInit	i = 0 ;	732:7:16647:16652	6362388	0	True				
ANR	6362397	AssignmentExpression	i = 0		6362388	0		=			
ANR	6362398	Identifier	i		6362388	0					
ANR	6362399	PrimaryExpression	0		6362388	1					
ANR	6362400	Condition	i < dec_insn . code -> nr_operands	732:14:16654:16683	6362388	1	True				
ANR	6362401	RelationalExpression	i < dec_insn . code -> nr_operands		6362388	0		<			
ANR	6362402	Identifier	i		6362388	0					
ANR	6362403	PtrMemberAccess	dec_insn . code -> nr_operands		6362388	1					
ANR	6362404	MemberAccess	dec_insn . code		6362388	0					
ANR	6362405	Identifier	dec_insn		6362388	0					
ANR	6362406	Identifier	code		6362388	1					
ANR	6362407	Identifier	nr_operands		6362388	1					
ANR	6362408	UnaryExpression	++ i	732:46:16686:16688	6362388	2	True				
ANR	6362409	IncDec	++		6362388	0					
ANR	6362410	Identifier	i		6362388	1					
ANR	6362411	CompoundStatement		4:51:62:62	6362388	3					
ANR	6362412	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6362388	0					
ANR	6362413	Condition	dec_insn . code -> fields [ i ]	733:11:16704:16727	6362388	0	True				
ANR	6362414	ArrayIndexing	dec_insn . code -> fields [ i ]		6362388	0					
ANR	6362415	PtrMemberAccess	dec_insn . code -> fields		6362388	0					
ANR	6362416	MemberAccess	dec_insn . code		6362388	0					
ANR	6362417	Identifier	dec_insn		6362388	0					
ANR	6362418	Identifier	code		6362388	1					
ANR	6362419	Identifier	fields		6362388	1					
ANR	6362420	Identifier	i		6362388	1					
ANR	6362421	CompoundStatement		5:37:101:101	6362388	1					
ANR	6362422	Label	case FMT_RRR2_D :	734:3:16735:16750	6362388	0	True				
ANR	6362423	Identifier	FMT_RRR2_D		6362388	0					
ANR	6362424	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28	735:4:16756:16811	6362388	1	True				
ANR	6362425	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28		6362388	0		=			
ANR	6362426	ArrayIndexing	dec_insn . regs [ i ]		6362388	0					
ANR	6362427	MemberAccess	dec_insn . regs		6362388	0					
ANR	6362428	Identifier	dec_insn		6362388	0					
ANR	6362429	Identifier	regs		6362388	1					
ANR	6362430	Identifier	i		6362388	1					
ANR	6362431	ShiftExpression	( dec_insn . opcode & 0xf0000000 ) >> 28		6362388	1		>>			
ANR	6362432	BitAndExpression	dec_insn . opcode & 0xf0000000		6362388	0		&			
ANR	6362433	MemberAccess	dec_insn . opcode		6362388	0					
ANR	6362434	Identifier	dec_insn		6362388	0					
ANR	6362435	Identifier	opcode		6362388	1					
ANR	6362436	PrimaryExpression	0xf0000000		6362388	1					
ANR	6362437	PrimaryExpression	28		6362388	1					
ANR	6362438	BreakStatement	break ;	736:4:16817:16822	6362388	2	True				
ANR	6362439	Label	case FMT_RRR2_S3 :	738:3:16828:16844	6362388	3	True				
ANR	6362440	Identifier	FMT_RRR2_S3		6362388	0					
ANR	6362441	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f000000 ) >> 24	739:4:16850:16905	6362388	4	True				
ANR	6362442	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f000000 ) >> 24		6362388	0		=			
ANR	6362443	ArrayIndexing	dec_insn . regs [ i ]		6362388	0					
ANR	6362444	MemberAccess	dec_insn . regs		6362388	0					
ANR	6362445	Identifier	dec_insn		6362388	0					
ANR	6362446	Identifier	regs		6362388	1					
ANR	6362447	Identifier	i		6362388	1					
ANR	6362448	ShiftExpression	( dec_insn . opcode & 0x0f000000 ) >> 24		6362388	1		>>			
ANR	6362449	BitAndExpression	dec_insn . opcode & 0x0f000000		6362388	0		&			
ANR	6362450	MemberAccess	dec_insn . opcode		6362388	0					
ANR	6362451	Identifier	dec_insn		6362388	0					
ANR	6362452	Identifier	opcode		6362388	1					
ANR	6362453	PrimaryExpression	0x0f000000		6362388	1					
ANR	6362454	PrimaryExpression	24		6362388	1					
ANR	6362455	BreakStatement	break ;	740:4:16911:16916	6362388	5	True				
ANR	6362456	Label	case FMT_RRR2_S2 :	742:3:16922:16938	6362388	6	True				
ANR	6362457	Identifier	FMT_RRR2_S2		6362388	0					
ANR	6362458	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12	743:4:16944:16999	6362388	7	True				
ANR	6362459	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12		6362388	0		=			
ANR	6362460	ArrayIndexing	dec_insn . regs [ i ]		6362388	0					
ANR	6362461	MemberAccess	dec_insn . regs		6362388	0					
ANR	6362462	Identifier	dec_insn		6362388	0					
ANR	6362463	Identifier	regs		6362388	1					
ANR	6362464	Identifier	i		6362388	1					
ANR	6362465	ShiftExpression	( dec_insn . opcode & 0x0000f000 ) >> 12		6362388	1		>>			
ANR	6362466	BitAndExpression	dec_insn . opcode & 0x0000f000		6362388	0		&			
ANR	6362467	MemberAccess	dec_insn . opcode		6362388	0					
ANR	6362468	Identifier	dec_insn		6362388	0					
ANR	6362469	Identifier	opcode		6362388	1					
ANR	6362470	PrimaryExpression	0x0000f000		6362388	1					
ANR	6362471	PrimaryExpression	12		6362388	1					
ANR	6362472	BreakStatement	break ;	744:4:17005:17010	6362388	8	True				
ANR	6362473	Label	case FMT_RRR2_S1 :	746:3:17016:17032	6362388	9	True				
ANR	6362474	Identifier	FMT_RRR2_S1		6362388	0					
ANR	6362475	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	747:4:17038:17092	6362388	10	True				
ANR	6362476	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6362388	0		=			
ANR	6362477	ArrayIndexing	dec_insn . regs [ i ]		6362388	0					
ANR	6362478	MemberAccess	dec_insn . regs		6362388	0					
ANR	6362479	Identifier	dec_insn		6362388	0					
ANR	6362480	Identifier	regs		6362388	1					
ANR	6362481	Identifier	i		6362388	1					
ANR	6362482	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6362388	1		>>			
ANR	6362483	BitAndExpression	dec_insn . opcode & 0x00000f00		6362388	0		&			
ANR	6362484	MemberAccess	dec_insn . opcode		6362388	0					
ANR	6362485	Identifier	dec_insn		6362388	0					
ANR	6362486	Identifier	opcode		6362388	1					
ANR	6362487	PrimaryExpression	0x00000f00		6362388	1					
ANR	6362488	PrimaryExpression	8		6362388	1					
ANR	6362489	BreakStatement	break ;	748:4:17098:17103	6362388	11	True				
ANR	6362490	ReturnType	static void		6362388	1					
ANR	6362491	Identifier	decode_rrr2		6362388	2					
ANR	6362492	ParameterList			6362388	3					
ANR	6362493	CFGEntryNode	ENTRY		6362388		True				
ANR	6362494	CFGExitNode	EXIT		6362388		True				
ANR	6362495	Symbol	dec_insn . code		6362388						
ANR	6362496	Symbol	dec_insn . code -> fields		6362388						
ANR	6362497	Symbol	i		6362388						
ANR	6362498	Symbol	* dec_insn . code -> fields		6362388						
ANR	6362499	Symbol	* dec_insn		6362388						
ANR	6362500	Symbol	dec_insn . code -> nr_operands		6362388						
ANR	6362501	Symbol	* i		6362388						
ANR	6362502	Symbol	dec_insn . regs		6362388						
ANR	6362503	Symbol	* * dec_insn		6362388						
ANR	6362504	Symbol	* dec_insn . code		6362388						
ANR	6362505	Symbol	dec_insn . opcode		6362388						
ANR	6362506	Symbol	dec_insn		6362388						
ANR	6362507	Symbol	* * dec_insn . code		6362388						
ANR	6362508	Symbol	* dec_insn . regs		6362388						
ANR	6362509	Function	decode_rrrr	753:0:17117:17630							
ANR	6362510	FunctionDef	decode_rrrr ()		6362509	0					
ANR	6362511	CompoundStatement		755:0:17144:17630	6362509	0					
ANR	6362512	IdentifierDeclStatement	int i ;	756:2:17148:17153	6362509	0	True				
ANR	6362513	IdentifierDecl	i		6362509	0					
ANR	6362514	IdentifierDeclType	int		6362509	0					
ANR	6362515	Identifier	i		6362509	1					
ANR	6362516	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6362509	1					
ANR	6362517	ForInit	i = 0 ;	758:7:17163:17168	6362509	0	True				
ANR	6362518	AssignmentExpression	i = 0		6362509	0		=			
ANR	6362519	Identifier	i		6362509	0					
ANR	6362520	PrimaryExpression	0		6362509	1					
ANR	6362521	Condition	i < dec_insn . code -> nr_operands	758:14:17170:17199	6362509	1	True				
ANR	6362522	RelationalExpression	i < dec_insn . code -> nr_operands		6362509	0		<			
ANR	6362523	Identifier	i		6362509	0					
ANR	6362524	PtrMemberAccess	dec_insn . code -> nr_operands		6362509	1					
ANR	6362525	MemberAccess	dec_insn . code		6362509	0					
ANR	6362526	Identifier	dec_insn		6362509	0					
ANR	6362527	Identifier	code		6362509	1					
ANR	6362528	Identifier	nr_operands		6362509	1					
ANR	6362529	UnaryExpression	++ i	758:46:17202:17204	6362509	2	True				
ANR	6362530	IncDec	++		6362509	0					
ANR	6362531	Identifier	i		6362509	1					
ANR	6362532	CompoundStatement		4:51:62:62	6362509	3					
ANR	6362533	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6362509	0					
ANR	6362534	Condition	dec_insn . code -> fields [ i ]	759:11:17220:17243	6362509	0	True				
ANR	6362535	ArrayIndexing	dec_insn . code -> fields [ i ]		6362509	0					
ANR	6362536	PtrMemberAccess	dec_insn . code -> fields		6362509	0					
ANR	6362537	MemberAccess	dec_insn . code		6362509	0					
ANR	6362538	Identifier	dec_insn		6362509	0					
ANR	6362539	Identifier	code		6362509	1					
ANR	6362540	Identifier	fields		6362509	1					
ANR	6362541	Identifier	i		6362509	1					
ANR	6362542	CompoundStatement		5:37:101:101	6362509	1					
ANR	6362543	Label	case FMT_RRRR_D :	760:3:17251:17266	6362509	0	True				
ANR	6362544	Identifier	FMT_RRRR_D		6362509	0					
ANR	6362545	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28	761:4:17272:17327	6362509	1	True				
ANR	6362546	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28		6362509	0		=			
ANR	6362547	ArrayIndexing	dec_insn . regs [ i ]		6362509	0					
ANR	6362548	MemberAccess	dec_insn . regs		6362509	0					
ANR	6362549	Identifier	dec_insn		6362509	0					
ANR	6362550	Identifier	regs		6362509	1					
ANR	6362551	Identifier	i		6362509	1					
ANR	6362552	ShiftExpression	( dec_insn . opcode & 0xf0000000 ) >> 28		6362509	1		>>			
ANR	6362553	BitAndExpression	dec_insn . opcode & 0xf0000000		6362509	0		&			
ANR	6362554	MemberAccess	dec_insn . opcode		6362509	0					
ANR	6362555	Identifier	dec_insn		6362509	0					
ANR	6362556	Identifier	opcode		6362509	1					
ANR	6362557	PrimaryExpression	0xf0000000		6362509	1					
ANR	6362558	PrimaryExpression	28		6362509	1					
ANR	6362559	BreakStatement	break ;	762:4:17333:17338	6362509	2	True				
ANR	6362560	Label	case FMT_RRRR_S3 :	764:3:17344:17360	6362509	3	True				
ANR	6362561	Identifier	FMT_RRRR_S3		6362509	0					
ANR	6362562	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f000000 ) >> 24	765:4:17366:17421	6362509	4	True				
ANR	6362563	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f000000 ) >> 24		6362509	0		=			
ANR	6362564	ArrayIndexing	dec_insn . regs [ i ]		6362509	0					
ANR	6362565	MemberAccess	dec_insn . regs		6362509	0					
ANR	6362566	Identifier	dec_insn		6362509	0					
ANR	6362567	Identifier	regs		6362509	1					
ANR	6362568	Identifier	i		6362509	1					
ANR	6362569	ShiftExpression	( dec_insn . opcode & 0x0f000000 ) >> 24		6362509	1		>>			
ANR	6362570	BitAndExpression	dec_insn . opcode & 0x0f000000		6362509	0		&			
ANR	6362571	MemberAccess	dec_insn . opcode		6362509	0					
ANR	6362572	Identifier	dec_insn		6362509	0					
ANR	6362573	Identifier	opcode		6362509	1					
ANR	6362574	PrimaryExpression	0x0f000000		6362509	1					
ANR	6362575	PrimaryExpression	24		6362509	1					
ANR	6362576	BreakStatement	break ;	766:4:17427:17432	6362509	5	True				
ANR	6362577	Label	case FMT_RRRR_S2 :	768:3:17438:17454	6362509	6	True				
ANR	6362578	Identifier	FMT_RRRR_S2		6362509	0					
ANR	6362579	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12	769:4:17460:17515	6362509	7	True				
ANR	6362580	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12		6362509	0		=			
ANR	6362581	ArrayIndexing	dec_insn . regs [ i ]		6362509	0					
ANR	6362582	MemberAccess	dec_insn . regs		6362509	0					
ANR	6362583	Identifier	dec_insn		6362509	0					
ANR	6362584	Identifier	regs		6362509	1					
ANR	6362585	Identifier	i		6362509	1					
ANR	6362586	ShiftExpression	( dec_insn . opcode & 0x0000f000 ) >> 12		6362509	1		>>			
ANR	6362587	BitAndExpression	dec_insn . opcode & 0x0000f000		6362509	0		&			
ANR	6362588	MemberAccess	dec_insn . opcode		6362509	0					
ANR	6362589	Identifier	dec_insn		6362509	0					
ANR	6362590	Identifier	opcode		6362509	1					
ANR	6362591	PrimaryExpression	0x0000f000		6362509	1					
ANR	6362592	PrimaryExpression	12		6362509	1					
ANR	6362593	BreakStatement	break ;	770:4:17521:17526	6362509	8	True				
ANR	6362594	Label	case FMT_RRRR_S1 :	772:3:17532:17548	6362509	9	True				
ANR	6362595	Identifier	FMT_RRRR_S1		6362509	0					
ANR	6362596	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	773:4:17554:17608	6362509	10	True				
ANR	6362597	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6362509	0		=			
ANR	6362598	ArrayIndexing	dec_insn . regs [ i ]		6362509	0					
ANR	6362599	MemberAccess	dec_insn . regs		6362509	0					
ANR	6362600	Identifier	dec_insn		6362509	0					
ANR	6362601	Identifier	regs		6362509	1					
ANR	6362602	Identifier	i		6362509	1					
ANR	6362603	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6362509	1		>>			
ANR	6362604	BitAndExpression	dec_insn . opcode & 0x00000f00		6362509	0		&			
ANR	6362605	MemberAccess	dec_insn . opcode		6362509	0					
ANR	6362606	Identifier	dec_insn		6362509	0					
ANR	6362607	Identifier	opcode		6362509	1					
ANR	6362608	PrimaryExpression	0x00000f00		6362509	1					
ANR	6362609	PrimaryExpression	8		6362509	1					
ANR	6362610	BreakStatement	break ;	774:4:17614:17619	6362509	11	True				
ANR	6362611	ReturnType	static void		6362509	1					
ANR	6362612	Identifier	decode_rrrr		6362509	2					
ANR	6362613	ParameterList			6362509	3					
ANR	6362614	CFGEntryNode	ENTRY		6362509		True				
ANR	6362615	CFGExitNode	EXIT		6362509		True				
ANR	6362616	Symbol	dec_insn . code		6362509						
ANR	6362617	Symbol	dec_insn . code -> fields		6362509						
ANR	6362618	Symbol	i		6362509						
ANR	6362619	Symbol	* dec_insn . code -> fields		6362509						
ANR	6362620	Symbol	* dec_insn		6362509						
ANR	6362621	Symbol	dec_insn . code -> nr_operands		6362509						
ANR	6362622	Symbol	* i		6362509						
ANR	6362623	Symbol	dec_insn . regs		6362509						
ANR	6362624	Symbol	* * dec_insn		6362509						
ANR	6362625	Symbol	* dec_insn . code		6362509						
ANR	6362626	Symbol	dec_insn . opcode		6362509						
ANR	6362627	Symbol	dec_insn		6362509						
ANR	6362628	Symbol	* * dec_insn . code		6362509						
ANR	6362629	Symbol	* dec_insn . regs		6362509						
ANR	6362630	Function	decode_rrrw	779:0:17633:18239							
ANR	6362631	FunctionDef	decode_rrrw ()		6362630	0					
ANR	6362632	CompoundStatement		781:0:17660:18239	6362630	0					
ANR	6362633	IdentifierDeclStatement	int i ;	782:2:17664:17669	6362630	0	True				
ANR	6362634	IdentifierDecl	i		6362630	0					
ANR	6362635	IdentifierDeclType	int		6362630	0					
ANR	6362636	Identifier	i		6362630	1					
ANR	6362637	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6362630	1					
ANR	6362638	ForInit	i = 0 ;	784:7:17679:17684	6362630	0	True				
ANR	6362639	AssignmentExpression	i = 0		6362630	0		=			
ANR	6362640	Identifier	i		6362630	0					
ANR	6362641	PrimaryExpression	0		6362630	1					
ANR	6362642	Condition	i < dec_insn . code -> nr_operands	784:14:17686:17715	6362630	1	True				
ANR	6362643	RelationalExpression	i < dec_insn . code -> nr_operands		6362630	0		<			
ANR	6362644	Identifier	i		6362630	0					
ANR	6362645	PtrMemberAccess	dec_insn . code -> nr_operands		6362630	1					
ANR	6362646	MemberAccess	dec_insn . code		6362630	0					
ANR	6362647	Identifier	dec_insn		6362630	0					
ANR	6362648	Identifier	code		6362630	1					
ANR	6362649	Identifier	nr_operands		6362630	1					
ANR	6362650	UnaryExpression	++ i	784:46:17718:17720	6362630	2	True				
ANR	6362651	IncDec	++		6362630	0					
ANR	6362652	Identifier	i		6362630	1					
ANR	6362653	CompoundStatement		4:51:62:62	6362630	3					
ANR	6362654	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6362630	0					
ANR	6362655	Condition	dec_insn . code -> fields [ i ]	785:11:17736:17759	6362630	0	True				
ANR	6362656	ArrayIndexing	dec_insn . code -> fields [ i ]		6362630	0					
ANR	6362657	PtrMemberAccess	dec_insn . code -> fields		6362630	0					
ANR	6362658	MemberAccess	dec_insn . code		6362630	0					
ANR	6362659	Identifier	dec_insn		6362630	0					
ANR	6362660	Identifier	code		6362630	1					
ANR	6362661	Identifier	fields		6362630	1					
ANR	6362662	Identifier	i		6362630	1					
ANR	6362663	CompoundStatement		5:37:101:101	6362630	1					
ANR	6362664	Label	case FMT_RRRW_D :	786:3:17767:17782	6362630	0	True				
ANR	6362665	Identifier	FMT_RRRW_D		6362630	0					
ANR	6362666	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28	787:4:17788:17843	6362630	1	True				
ANR	6362667	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf0000000 ) >> 28		6362630	0		=			
ANR	6362668	ArrayIndexing	dec_insn . regs [ i ]		6362630	0					
ANR	6362669	MemberAccess	dec_insn . regs		6362630	0					
ANR	6362670	Identifier	dec_insn		6362630	0					
ANR	6362671	Identifier	regs		6362630	1					
ANR	6362672	Identifier	i		6362630	1					
ANR	6362673	ShiftExpression	( dec_insn . opcode & 0xf0000000 ) >> 28		6362630	1		>>			
ANR	6362674	BitAndExpression	dec_insn . opcode & 0xf0000000		6362630	0		&			
ANR	6362675	MemberAccess	dec_insn . opcode		6362630	0					
ANR	6362676	Identifier	dec_insn		6362630	0					
ANR	6362677	Identifier	opcode		6362630	1					
ANR	6362678	PrimaryExpression	0xf0000000		6362630	1					
ANR	6362679	PrimaryExpression	28		6362630	1					
ANR	6362680	BreakStatement	break ;	788:4:17849:17854	6362630	2	True				
ANR	6362681	Label	case FMT_RRRW_S3 :	790:3:17860:17876	6362630	3	True				
ANR	6362682	Identifier	FMT_RRRW_S3		6362630	0					
ANR	6362683	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f000000 ) >> 24	791:4:17882:17937	6362630	4	True				
ANR	6362684	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f000000 ) >> 24		6362630	0		=			
ANR	6362685	ArrayIndexing	dec_insn . regs [ i ]		6362630	0					
ANR	6362686	MemberAccess	dec_insn . regs		6362630	0					
ANR	6362687	Identifier	dec_insn		6362630	0					
ANR	6362688	Identifier	regs		6362630	1					
ANR	6362689	Identifier	i		6362630	1					
ANR	6362690	ShiftExpression	( dec_insn . opcode & 0x0f000000 ) >> 24		6362630	1		>>			
ANR	6362691	BitAndExpression	dec_insn . opcode & 0x0f000000		6362630	0		&			
ANR	6362692	MemberAccess	dec_insn . opcode		6362630	0					
ANR	6362693	Identifier	dec_insn		6362630	0					
ANR	6362694	Identifier	opcode		6362630	1					
ANR	6362695	PrimaryExpression	0x0f000000		6362630	1					
ANR	6362696	PrimaryExpression	24		6362630	1					
ANR	6362697	BreakStatement	break ;	792:4:17943:17948	6362630	5	True				
ANR	6362698	Label	case FMT_RRRW_W :	794:3:17954:17969	6362630	6	True				
ANR	6362699	Identifier	FMT_RRRW_W		6362630	0					
ANR	6362700	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x001f0000 ) >> 16	795:4:17975:18030	6362630	7	True				
ANR	6362701	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x001f0000 ) >> 16		6362630	0		=			
ANR	6362702	ArrayIndexing	dec_insn . cexp [ i ]		6362630	0					
ANR	6362703	MemberAccess	dec_insn . cexp		6362630	0					
ANR	6362704	Identifier	dec_insn		6362630	0					
ANR	6362705	Identifier	cexp		6362630	1					
ANR	6362706	Identifier	i		6362630	1					
ANR	6362707	ShiftExpression	( dec_insn . opcode & 0x001f0000 ) >> 16		6362630	1		>>			
ANR	6362708	BitAndExpression	dec_insn . opcode & 0x001f0000		6362630	0		&			
ANR	6362709	MemberAccess	dec_insn . opcode		6362630	0					
ANR	6362710	Identifier	dec_insn		6362630	0					
ANR	6362711	Identifier	opcode		6362630	1					
ANR	6362712	PrimaryExpression	0x001f0000		6362630	1					
ANR	6362713	PrimaryExpression	16		6362630	1					
ANR	6362714	BreakStatement	break ;	796:4:18036:18041	6362630	8	True				
ANR	6362715	Label	case FMT_RRRW_S2 :	798:3:18047:18063	6362630	9	True				
ANR	6362716	Identifier	FMT_RRRW_S2		6362630	0					
ANR	6362717	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12	799:4:18069:18124	6362630	10	True				
ANR	6362718	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0000f000 ) >> 12		6362630	0		=			
ANR	6362719	ArrayIndexing	dec_insn . regs [ i ]		6362630	0					
ANR	6362720	MemberAccess	dec_insn . regs		6362630	0					
ANR	6362721	Identifier	dec_insn		6362630	0					
ANR	6362722	Identifier	regs		6362630	1					
ANR	6362723	Identifier	i		6362630	1					
ANR	6362724	ShiftExpression	( dec_insn . opcode & 0x0000f000 ) >> 12		6362630	1		>>			
ANR	6362725	BitAndExpression	dec_insn . opcode & 0x0000f000		6362630	0		&			
ANR	6362726	MemberAccess	dec_insn . opcode		6362630	0					
ANR	6362727	Identifier	dec_insn		6362630	0					
ANR	6362728	Identifier	opcode		6362630	1					
ANR	6362729	PrimaryExpression	0x0000f000		6362630	1					
ANR	6362730	PrimaryExpression	12		6362630	1					
ANR	6362731	BreakStatement	break ;	800:4:18130:18135	6362630	11	True				
ANR	6362732	Label	case FMT_RRRW_S1 :	802:3:18141:18157	6362630	12	True				
ANR	6362733	Identifier	FMT_RRRW_S1		6362630	0					
ANR	6362734	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	803:4:18163:18217	6362630	13	True				
ANR	6362735	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6362630	0		=			
ANR	6362736	ArrayIndexing	dec_insn . regs [ i ]		6362630	0					
ANR	6362737	MemberAccess	dec_insn . regs		6362630	0					
ANR	6362738	Identifier	dec_insn		6362630	0					
ANR	6362739	Identifier	regs		6362630	1					
ANR	6362740	Identifier	i		6362630	1					
ANR	6362741	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6362630	1		>>			
ANR	6362742	BitAndExpression	dec_insn . opcode & 0x00000f00		6362630	0		&			
ANR	6362743	MemberAccess	dec_insn . opcode		6362630	0					
ANR	6362744	Identifier	dec_insn		6362630	0					
ANR	6362745	Identifier	opcode		6362630	1					
ANR	6362746	PrimaryExpression	0x00000f00		6362630	1					
ANR	6362747	PrimaryExpression	8		6362630	1					
ANR	6362748	BreakStatement	break ;	804:4:18223:18228	6362630	14	True				
ANR	6362749	ReturnType	static void		6362630	1					
ANR	6362750	Identifier	decode_rrrw		6362630	2					
ANR	6362751	ParameterList			6362630	3					
ANR	6362752	CFGEntryNode	ENTRY		6362630		True				
ANR	6362753	CFGExitNode	EXIT		6362630		True				
ANR	6362754	Symbol	dec_insn . code		6362630						
ANR	6362755	Symbol	dec_insn . code -> fields		6362630						
ANR	6362756	Symbol	* dec_insn . cexp		6362630						
ANR	6362757	Symbol	i		6362630						
ANR	6362758	Symbol	* dec_insn . code -> fields		6362630						
ANR	6362759	Symbol	dec_insn . cexp		6362630						
ANR	6362760	Symbol	* dec_insn		6362630						
ANR	6362761	Symbol	dec_insn . code -> nr_operands		6362630						
ANR	6362762	Symbol	* i		6362630						
ANR	6362763	Symbol	dec_insn . regs		6362630						
ANR	6362764	Symbol	* * dec_insn		6362630						
ANR	6362765	Symbol	* dec_insn . code		6362630						
ANR	6362766	Symbol	dec_insn . opcode		6362630						
ANR	6362767	Symbol	dec_insn		6362630						
ANR	6362768	Symbol	* * dec_insn . code		6362630						
ANR	6362769	Symbol	* dec_insn . regs		6362630						
ANR	6362770	Function	decode_sys	809:0:18242:18474							
ANR	6362771	FunctionDef	decode_sys ()		6362770	0					
ANR	6362772	CompoundStatement		811:0:18268:18474	6362770	0					
ANR	6362773	IdentifierDeclStatement	int i ;	812:2:18272:18277	6362770	0	True				
ANR	6362774	IdentifierDecl	i		6362770	0					
ANR	6362775	IdentifierDeclType	int		6362770	0					
ANR	6362776	Identifier	i		6362770	1					
ANR	6362777	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6362770	1					
ANR	6362778	ForInit	i = 0 ;	814:7:18287:18292	6362770	0	True				
ANR	6362779	AssignmentExpression	i = 0		6362770	0		=			
ANR	6362780	Identifier	i		6362770	0					
ANR	6362781	PrimaryExpression	0		6362770	1					
ANR	6362782	Condition	i < dec_insn . code -> nr_operands	814:14:18294:18323	6362770	1	True				
ANR	6362783	RelationalExpression	i < dec_insn . code -> nr_operands		6362770	0		<			
ANR	6362784	Identifier	i		6362770	0					
ANR	6362785	PtrMemberAccess	dec_insn . code -> nr_operands		6362770	1					
ANR	6362786	MemberAccess	dec_insn . code		6362770	0					
ANR	6362787	Identifier	dec_insn		6362770	0					
ANR	6362788	Identifier	code		6362770	1					
ANR	6362789	Identifier	nr_operands		6362770	1					
ANR	6362790	UnaryExpression	++ i	814:46:18326:18328	6362770	2	True				
ANR	6362791	IncDec	++		6362770	0					
ANR	6362792	Identifier	i		6362770	1					
ANR	6362793	CompoundStatement		4:51:62:62	6362770	3					
ANR	6362794	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6362770	0					
ANR	6362795	Condition	dec_insn . code -> fields [ i ]	815:11:18344:18367	6362770	0	True				
ANR	6362796	ArrayIndexing	dec_insn . code -> fields [ i ]		6362770	0					
ANR	6362797	PtrMemberAccess	dec_insn . code -> fields		6362770	0					
ANR	6362798	MemberAccess	dec_insn . code		6362770	0					
ANR	6362799	Identifier	dec_insn		6362770	0					
ANR	6362800	Identifier	code		6362770	1					
ANR	6362801	Identifier	fields		6362770	1					
ANR	6362802	Identifier	i		6362770	1					
ANR	6362803	CompoundStatement		5:37:101:101	6362770	1					
ANR	6362804	Label	case FMT_SYS_S1_D :	816:3:18375:18392	6362770	0	True				
ANR	6362805	Identifier	FMT_SYS_S1_D		6362770	0					
ANR	6362806	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8	817:4:18398:18452	6362770	1	True				
ANR	6362807	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x00000f00 ) >> 8		6362770	0		=			
ANR	6362808	ArrayIndexing	dec_insn . regs [ i ]		6362770	0					
ANR	6362809	MemberAccess	dec_insn . regs		6362770	0					
ANR	6362810	Identifier	dec_insn		6362770	0					
ANR	6362811	Identifier	regs		6362770	1					
ANR	6362812	Identifier	i		6362770	1					
ANR	6362813	ShiftExpression	( dec_insn . opcode & 0x00000f00 ) >> 8		6362770	1		>>			
ANR	6362814	BitAndExpression	dec_insn . opcode & 0x00000f00		6362770	0		&			
ANR	6362815	MemberAccess	dec_insn . opcode		6362770	0					
ANR	6362816	Identifier	dec_insn		6362770	0					
ANR	6362817	Identifier	opcode		6362770	1					
ANR	6362818	PrimaryExpression	0x00000f00		6362770	1					
ANR	6362819	PrimaryExpression	8		6362770	1					
ANR	6362820	BreakStatement	break ;	818:4:18458:18463	6362770	2	True				
ANR	6362821	ReturnType	static void		6362770	1					
ANR	6362822	Identifier	decode_sys		6362770	2					
ANR	6362823	ParameterList			6362770	3					
ANR	6362824	CFGEntryNode	ENTRY		6362770		True				
ANR	6362825	CFGExitNode	EXIT		6362770		True				
ANR	6362826	Symbol	dec_insn . code		6362770						
ANR	6362827	Symbol	dec_insn . code -> fields		6362770						
ANR	6362828	Symbol	i		6362770						
ANR	6362829	Symbol	* dec_insn . code -> fields		6362770						
ANR	6362830	Symbol	* dec_insn		6362770						
ANR	6362831	Symbol	dec_insn . code -> nr_operands		6362770						
ANR	6362832	Symbol	* i		6362770						
ANR	6362833	Symbol	dec_insn . regs		6362770						
ANR	6362834	Symbol	* * dec_insn		6362770						
ANR	6362835	Symbol	* dec_insn . code		6362770						
ANR	6362836	Symbol	dec_insn . opcode		6362770						
ANR	6362837	Symbol	dec_insn		6362770						
ANR	6362838	Symbol	* * dec_insn . code		6362770						
ANR	6362839	Symbol	* dec_insn . regs		6362770						
ANR	6362840	Function	decode_sb	823:0:18477:18704							
ANR	6362841	FunctionDef	decode_sb ()		6362840	0					
ANR	6362842	CompoundStatement		825:0:18502:18704	6362840	0					
ANR	6362843	IdentifierDeclStatement	int i ;	826:2:18506:18511	6362840	0	True				
ANR	6362844	IdentifierDecl	i		6362840	0					
ANR	6362845	IdentifierDeclType	int		6362840	0					
ANR	6362846	Identifier	i		6362840	1					
ANR	6362847	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6362840	1					
ANR	6362848	ForInit	i = 0 ;	828:7:18521:18526	6362840	0	True				
ANR	6362849	AssignmentExpression	i = 0		6362840	0		=			
ANR	6362850	Identifier	i		6362840	0					
ANR	6362851	PrimaryExpression	0		6362840	1					
ANR	6362852	Condition	i < dec_insn . code -> nr_operands	828:14:18528:18557	6362840	1	True				
ANR	6362853	RelationalExpression	i < dec_insn . code -> nr_operands		6362840	0		<			
ANR	6362854	Identifier	i		6362840	0					
ANR	6362855	PtrMemberAccess	dec_insn . code -> nr_operands		6362840	1					
ANR	6362856	MemberAccess	dec_insn . code		6362840	0					
ANR	6362857	Identifier	dec_insn		6362840	0					
ANR	6362858	Identifier	code		6362840	1					
ANR	6362859	Identifier	nr_operands		6362840	1					
ANR	6362860	UnaryExpression	++ i	828:46:18560:18562	6362840	2	True				
ANR	6362861	IncDec	++		6362840	0					
ANR	6362862	Identifier	i		6362840	1					
ANR	6362863	CompoundStatement		4:51:62:62	6362840	3					
ANR	6362864	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6362840	0					
ANR	6362865	Condition	dec_insn . code -> fields [ i ]	829:11:18578:18601	6362840	0	True				
ANR	6362866	ArrayIndexing	dec_insn . code -> fields [ i ]		6362840	0					
ANR	6362867	PtrMemberAccess	dec_insn . code -> fields		6362840	0					
ANR	6362868	MemberAccess	dec_insn . code		6362840	0					
ANR	6362869	Identifier	dec_insn		6362840	0					
ANR	6362870	Identifier	code		6362840	1					
ANR	6362871	Identifier	fields		6362840	1					
ANR	6362872	Identifier	i		6362840	1					
ANR	6362873	CompoundStatement		5:37:101:101	6362840	1					
ANR	6362874	Label	case FMT_SB_DISP8 :	830:3:18609:18626	6362840	0	True				
ANR	6362875	Identifier	FMT_SB_DISP8		6362840	0					
ANR	6362876	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0xff00 ) >> 8	831:4:18632:18682	6362840	1	True				
ANR	6362877	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0xff00 ) >> 8		6362840	0		=			
ANR	6362878	ArrayIndexing	dec_insn . cexp [ i ]		6362840	0					
ANR	6362879	MemberAccess	dec_insn . cexp		6362840	0					
ANR	6362880	Identifier	dec_insn		6362840	0					
ANR	6362881	Identifier	cexp		6362840	1					
ANR	6362882	Identifier	i		6362840	1					
ANR	6362883	ShiftExpression	( dec_insn . opcode & 0xff00 ) >> 8		6362840	1		>>			
ANR	6362884	BitAndExpression	dec_insn . opcode & 0xff00		6362840	0		&			
ANR	6362885	MemberAccess	dec_insn . opcode		6362840	0					
ANR	6362886	Identifier	dec_insn		6362840	0					
ANR	6362887	Identifier	opcode		6362840	1					
ANR	6362888	PrimaryExpression	0xff00		6362840	1					
ANR	6362889	PrimaryExpression	8		6362840	1					
ANR	6362890	BreakStatement	break ;	832:4:18688:18693	6362840	2	True				
ANR	6362891	ReturnType	static void		6362840	1					
ANR	6362892	Identifier	decode_sb		6362840	2					
ANR	6362893	ParameterList			6362840	3					
ANR	6362894	CFGEntryNode	ENTRY		6362840		True				
ANR	6362895	CFGExitNode	EXIT		6362840		True				
ANR	6362896	Symbol	dec_insn . code		6362840						
ANR	6362897	Symbol	dec_insn . code -> fields		6362840						
ANR	6362898	Symbol	* dec_insn . cexp		6362840						
ANR	6362899	Symbol	i		6362840						
ANR	6362900	Symbol	* dec_insn . code -> fields		6362840						
ANR	6362901	Symbol	dec_insn . cexp		6362840						
ANR	6362902	Symbol	* dec_insn		6362840						
ANR	6362903	Symbol	dec_insn . code -> nr_operands		6362840						
ANR	6362904	Symbol	* i		6362840						
ANR	6362905	Symbol	* * dec_insn		6362840						
ANR	6362906	Symbol	* dec_insn . code		6362840						
ANR	6362907	Symbol	dec_insn . opcode		6362840						
ANR	6362908	Symbol	dec_insn		6362840						
ANR	6362909	Symbol	* * dec_insn . code		6362840						
ANR	6362910	Function	decode_sbc	837:0:18707:19107							
ANR	6362911	FunctionDef	decode_sbc ()		6362910	0					
ANR	6362912	CompoundStatement		839:0:18733:19107	6362910	0					
ANR	6362913	IdentifierDeclStatement	int i ;	840:2:18737:18742	6362910	0	True				
ANR	6362914	IdentifierDecl	i		6362910	0					
ANR	6362915	IdentifierDeclType	int		6362910	0					
ANR	6362916	Identifier	i		6362910	1					
ANR	6362917	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6362910	1					
ANR	6362918	ForInit	i = 0 ;	842:7:18752:18757	6362910	0	True				
ANR	6362919	AssignmentExpression	i = 0		6362910	0		=			
ANR	6362920	Identifier	i		6362910	0					
ANR	6362921	PrimaryExpression	0		6362910	1					
ANR	6362922	Condition	i < dec_insn . code -> nr_operands	842:14:18759:18788	6362910	1	True				
ANR	6362923	RelationalExpression	i < dec_insn . code -> nr_operands		6362910	0		<			
ANR	6362924	Identifier	i		6362910	0					
ANR	6362925	PtrMemberAccess	dec_insn . code -> nr_operands		6362910	1					
ANR	6362926	MemberAccess	dec_insn . code		6362910	0					
ANR	6362927	Identifier	dec_insn		6362910	0					
ANR	6362928	Identifier	code		6362910	1					
ANR	6362929	Identifier	nr_operands		6362910	1					
ANR	6362930	UnaryExpression	++ i	842:46:18791:18793	6362910	2	True				
ANR	6362931	IncDec	++		6362910	0					
ANR	6362932	Identifier	i		6362910	1					
ANR	6362933	CompoundStatement		4:51:62:62	6362910	3					
ANR	6362934	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6362910	0					
ANR	6362935	Condition	dec_insn . code -> fields [ i ]	843:11:18809:18832	6362910	0	True				
ANR	6362936	ArrayIndexing	dec_insn . code -> fields [ i ]		6362910	0					
ANR	6362937	PtrMemberAccess	dec_insn . code -> fields		6362910	0					
ANR	6362938	MemberAccess	dec_insn . code		6362910	0					
ANR	6362939	Identifier	dec_insn		6362910	0					
ANR	6362940	Identifier	code		6362910	1					
ANR	6362941	Identifier	fields		6362910	1					
ANR	6362942	Identifier	i		6362910	1					
ANR	6362943	CompoundStatement		5:37:101:101	6362910	1					
ANR	6362944	Label	case FMT_SBC_CONST4 :	844:3:18840:18859	6362910	0	True				
ANR	6362945	Identifier	FMT_SBC_CONST4		6362910	0					
ANR	6362946	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12	845:4:18865:18916	6362910	1	True				
ANR	6362947	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12		6362910	0		=			
ANR	6362948	ArrayIndexing	dec_insn . cexp [ i ]		6362910	0					
ANR	6362949	MemberAccess	dec_insn . cexp		6362910	0					
ANR	6362950	Identifier	dec_insn		6362910	0					
ANR	6362951	Identifier	cexp		6362910	1					
ANR	6362952	Identifier	i		6362910	1					
ANR	6362953	ShiftExpression	( dec_insn . opcode & 0xf000 ) >> 12		6362910	1		>>			
ANR	6362954	BitAndExpression	dec_insn . opcode & 0xf000		6362910	0		&			
ANR	6362955	MemberAccess	dec_insn . opcode		6362910	0					
ANR	6362956	Identifier	dec_insn		6362910	0					
ANR	6362957	Identifier	opcode		6362910	1					
ANR	6362958	PrimaryExpression	0xf000		6362910	1					
ANR	6362959	PrimaryExpression	12		6362910	1					
ANR	6362960	BreakStatement	break ;	846:4:18922:18927	6362910	2	True				
ANR	6362961	Label	case FMT_SBC_DISP4 :	848:3:18933:18951	6362910	3	True				
ANR	6362962	Identifier	FMT_SBC_DISP4		6362910	0					
ANR	6362963	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8	849:4:18957:19007	6362910	4	True				
ANR	6362964	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8		6362910	0		=			
ANR	6362965	ArrayIndexing	dec_insn . cexp [ i ]		6362910	0					
ANR	6362966	MemberAccess	dec_insn . cexp		6362910	0					
ANR	6362967	Identifier	dec_insn		6362910	0					
ANR	6362968	Identifier	cexp		6362910	1					
ANR	6362969	Identifier	i		6362910	1					
ANR	6362970	ShiftExpression	( dec_insn . opcode & 0x0f00 ) >> 8		6362910	1		>>			
ANR	6362971	BitAndExpression	dec_insn . opcode & 0x0f00		6362910	0		&			
ANR	6362972	MemberAccess	dec_insn . opcode		6362910	0					
ANR	6362973	Identifier	dec_insn		6362910	0					
ANR	6362974	Identifier	opcode		6362910	1					
ANR	6362975	PrimaryExpression	0x0f00		6362910	1					
ANR	6362976	PrimaryExpression	8		6362910	1					
ANR	6362977	IfStatement	if ( dec_insn . code -> args [ i ] == 'x' )		6362910	5					
ANR	6362978	Condition	dec_insn . code -> args [ i ] == 'x'	850:8:19017:19045	6362910	0	True				
ANR	6362979	EqualityExpression	dec_insn . code -> args [ i ] == 'x'		6362910	0		==			
ANR	6362980	ArrayIndexing	dec_insn . code -> args [ i ]		6362910	0					
ANR	6362981	PtrMemberAccess	dec_insn . code -> args		6362910	0					
ANR	6362982	MemberAccess	dec_insn . code		6362910	0					
ANR	6362983	Identifier	dec_insn		6362910	0					
ANR	6362984	Identifier	code		6362910	1					
ANR	6362985	Identifier	args		6362910	1					
ANR	6362986	Identifier	i		6362910	1					
ANR	6362987	PrimaryExpression	'x'		6362910	1					
ANR	6362988	CompoundStatement		12:39:314:314	6362910	1					
ANR	6362989	ExpressionStatement	dec_insn . cexp [ i ] += 0x10	851:5:19055:19079	6362910	0	True				
ANR	6362990	AssignmentExpression	dec_insn . cexp [ i ] += 0x10		6362910	0		+=			
ANR	6362991	ArrayIndexing	dec_insn . cexp [ i ]		6362910	0					
ANR	6362992	MemberAccess	dec_insn . cexp		6362910	0					
ANR	6362993	Identifier	dec_insn		6362910	0					
ANR	6362994	Identifier	cexp		6362910	1					
ANR	6362995	Identifier	i		6362910	1					
ANR	6362996	PrimaryExpression	0x10		6362910	1					
ANR	6362997	BreakStatement	break ;	853:4:19091:19096	6362910	6	True				
ANR	6362998	ReturnType	static void		6362910	1					
ANR	6362999	Identifier	decode_sbc		6362910	2					
ANR	6363000	ParameterList			6362910	3					
ANR	6363001	CFGEntryNode	ENTRY		6362910		True				
ANR	6363002	CFGExitNode	EXIT		6362910		True				
ANR	6363003	Symbol	dec_insn . code		6362910						
ANR	6363004	Symbol	dec_insn . code -> fields		6362910						
ANR	6363005	Symbol	* dec_insn . cexp		6362910						
ANR	6363006	Symbol	i		6362910						
ANR	6363007	Symbol	* dec_insn . code -> fields		6362910						
ANR	6363008	Symbol	* dec_insn . code -> args		6362910						
ANR	6363009	Symbol	dec_insn . cexp		6362910						
ANR	6363010	Symbol	* dec_insn		6362910						
ANR	6363011	Symbol	dec_insn . code -> nr_operands		6362910						
ANR	6363012	Symbol	* i		6362910						
ANR	6363013	Symbol	* * dec_insn		6362910						
ANR	6363014	Symbol	* dec_insn . code		6362910						
ANR	6363015	Symbol	dec_insn . opcode		6362910						
ANR	6363016	Symbol	dec_insn		6362910						
ANR	6363017	Symbol	dec_insn . code -> args		6362910						
ANR	6363018	Symbol	* * dec_insn . code		6362910						
ANR	6363019	Function	decode_sbr	858:0:19110:19506							
ANR	6363020	FunctionDef	decode_sbr ()		6363019	0					
ANR	6363021	CompoundStatement		860:0:19136:19506	6363019	0					
ANR	6363022	IdentifierDeclStatement	int i ;	861:2:19140:19145	6363019	0	True				
ANR	6363023	IdentifierDecl	i		6363019	0					
ANR	6363024	IdentifierDeclType	int		6363019	0					
ANR	6363025	Identifier	i		6363019	1					
ANR	6363026	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6363019	1					
ANR	6363027	ForInit	i = 0 ;	863:7:19155:19160	6363019	0	True				
ANR	6363028	AssignmentExpression	i = 0		6363019	0		=			
ANR	6363029	Identifier	i		6363019	0					
ANR	6363030	PrimaryExpression	0		6363019	1					
ANR	6363031	Condition	i < dec_insn . code -> nr_operands	863:14:19162:19191	6363019	1	True				
ANR	6363032	RelationalExpression	i < dec_insn . code -> nr_operands		6363019	0		<			
ANR	6363033	Identifier	i		6363019	0					
ANR	6363034	PtrMemberAccess	dec_insn . code -> nr_operands		6363019	1					
ANR	6363035	MemberAccess	dec_insn . code		6363019	0					
ANR	6363036	Identifier	dec_insn		6363019	0					
ANR	6363037	Identifier	code		6363019	1					
ANR	6363038	Identifier	nr_operands		6363019	1					
ANR	6363039	UnaryExpression	++ i	863:46:19194:19196	6363019	2	True				
ANR	6363040	IncDec	++		6363019	0					
ANR	6363041	Identifier	i		6363019	1					
ANR	6363042	CompoundStatement		4:51:62:62	6363019	3					
ANR	6363043	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6363019	0					
ANR	6363044	Condition	dec_insn . code -> fields [ i ]	864:11:19212:19235	6363019	0	True				
ANR	6363045	ArrayIndexing	dec_insn . code -> fields [ i ]		6363019	0					
ANR	6363046	PtrMemberAccess	dec_insn . code -> fields		6363019	0					
ANR	6363047	MemberAccess	dec_insn . code		6363019	0					
ANR	6363048	Identifier	dec_insn		6363019	0					
ANR	6363049	Identifier	code		6363019	1					
ANR	6363050	Identifier	fields		6363019	1					
ANR	6363051	Identifier	i		6363019	1					
ANR	6363052	CompoundStatement		5:37:101:101	6363019	1					
ANR	6363053	Label	case FMT_SBR_S2 :	865:3:19243:19258	6363019	0	True				
ANR	6363054	Identifier	FMT_SBR_S2		6363019	0					
ANR	6363055	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12	866:4:19264:19315	6363019	1	True				
ANR	6363056	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12		6363019	0		=			
ANR	6363057	ArrayIndexing	dec_insn . regs [ i ]		6363019	0					
ANR	6363058	MemberAccess	dec_insn . regs		6363019	0					
ANR	6363059	Identifier	dec_insn		6363019	0					
ANR	6363060	Identifier	regs		6363019	1					
ANR	6363061	Identifier	i		6363019	1					
ANR	6363062	ShiftExpression	( dec_insn . opcode & 0xf000 ) >> 12		6363019	1		>>			
ANR	6363063	BitAndExpression	dec_insn . opcode & 0xf000		6363019	0		&			
ANR	6363064	MemberAccess	dec_insn . opcode		6363019	0					
ANR	6363065	Identifier	dec_insn		6363019	0					
ANR	6363066	Identifier	opcode		6363019	1					
ANR	6363067	PrimaryExpression	0xf000		6363019	1					
ANR	6363068	PrimaryExpression	12		6363019	1					
ANR	6363069	BreakStatement	break ;	867:4:19321:19326	6363019	2	True				
ANR	6363070	Label	case FMT_SBR_DISP4 :	869:3:19332:19350	6363019	3	True				
ANR	6363071	Identifier	FMT_SBR_DISP4		6363019	0					
ANR	6363072	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8	870:4:19356:19406	6363019	4	True				
ANR	6363073	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8		6363019	0		=			
ANR	6363074	ArrayIndexing	dec_insn . cexp [ i ]		6363019	0					
ANR	6363075	MemberAccess	dec_insn . cexp		6363019	0					
ANR	6363076	Identifier	dec_insn		6363019	0					
ANR	6363077	Identifier	cexp		6363019	1					
ANR	6363078	Identifier	i		6363019	1					
ANR	6363079	ShiftExpression	( dec_insn . opcode & 0x0f00 ) >> 8		6363019	1		>>			
ANR	6363080	BitAndExpression	dec_insn . opcode & 0x0f00		6363019	0		&			
ANR	6363081	MemberAccess	dec_insn . opcode		6363019	0					
ANR	6363082	Identifier	dec_insn		6363019	0					
ANR	6363083	Identifier	opcode		6363019	1					
ANR	6363084	PrimaryExpression	0x0f00		6363019	1					
ANR	6363085	PrimaryExpression	8		6363019	1					
ANR	6363086	IfStatement	if ( dec_insn . code -> args [ i ] == 'x' )		6363019	5					
ANR	6363087	Condition	dec_insn . code -> args [ i ] == 'x'	871:8:19416:19444	6363019	0	True				
ANR	6363088	EqualityExpression	dec_insn . code -> args [ i ] == 'x'		6363019	0		==			
ANR	6363089	ArrayIndexing	dec_insn . code -> args [ i ]		6363019	0					
ANR	6363090	PtrMemberAccess	dec_insn . code -> args		6363019	0					
ANR	6363091	MemberAccess	dec_insn . code		6363019	0					
ANR	6363092	Identifier	dec_insn		6363019	0					
ANR	6363093	Identifier	code		6363019	1					
ANR	6363094	Identifier	args		6363019	1					
ANR	6363095	Identifier	i		6363019	1					
ANR	6363096	PrimaryExpression	'x'		6363019	1					
ANR	6363097	CompoundStatement		12:39:310:310	6363019	1					
ANR	6363098	ExpressionStatement	dec_insn . cexp [ i ] += 0x10	872:5:19454:19478	6363019	0	True				
ANR	6363099	AssignmentExpression	dec_insn . cexp [ i ] += 0x10		6363019	0		+=			
ANR	6363100	ArrayIndexing	dec_insn . cexp [ i ]		6363019	0					
ANR	6363101	MemberAccess	dec_insn . cexp		6363019	0					
ANR	6363102	Identifier	dec_insn		6363019	0					
ANR	6363103	Identifier	cexp		6363019	1					
ANR	6363104	Identifier	i		6363019	1					
ANR	6363105	PrimaryExpression	0x10		6363019	1					
ANR	6363106	BreakStatement	break ;	874:4:19490:19495	6363019	6	True				
ANR	6363107	ReturnType	static void		6363019	1					
ANR	6363108	Identifier	decode_sbr		6363019	2					
ANR	6363109	ParameterList			6363019	3					
ANR	6363110	CFGEntryNode	ENTRY		6363019		True				
ANR	6363111	CFGExitNode	EXIT		6363019		True				
ANR	6363112	Symbol	dec_insn . code		6363019						
ANR	6363113	Symbol	dec_insn . code -> fields		6363019						
ANR	6363114	Symbol	* dec_insn . cexp		6363019						
ANR	6363115	Symbol	i		6363019						
ANR	6363116	Symbol	* dec_insn . code -> fields		6363019						
ANR	6363117	Symbol	* dec_insn . code -> args		6363019						
ANR	6363118	Symbol	dec_insn . cexp		6363019						
ANR	6363119	Symbol	* dec_insn		6363019						
ANR	6363120	Symbol	dec_insn . code -> nr_operands		6363019						
ANR	6363121	Symbol	* i		6363019						
ANR	6363122	Symbol	dec_insn . regs		6363019						
ANR	6363123	Symbol	* * dec_insn		6363019						
ANR	6363124	Symbol	* dec_insn . code		6363019						
ANR	6363125	Symbol	dec_insn . opcode		6363019						
ANR	6363126	Symbol	dec_insn		6363019						
ANR	6363127	Symbol	dec_insn . code -> args		6363019						
ANR	6363128	Symbol	* * dec_insn . code		6363019						
ANR	6363129	Symbol	* dec_insn . regs		6363019						
ANR	6363130	Function	decode_sbrn	879:0:19509:20006							
ANR	6363131	FunctionDef	decode_sbrn ()		6363130	0					
ANR	6363132	CompoundStatement		881:0:19536:20006	6363130	0					
ANR	6363133	IdentifierDeclStatement	int i ;	882:2:19540:19545	6363130	0	True				
ANR	6363134	IdentifierDecl	i		6363130	0					
ANR	6363135	IdentifierDeclType	int		6363130	0					
ANR	6363136	Identifier	i		6363130	1					
ANR	6363137	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6363130	1					
ANR	6363138	ForInit	i = 0 ;	884:7:19555:19560	6363130	0	True				
ANR	6363139	AssignmentExpression	i = 0		6363130	0		=			
ANR	6363140	Identifier	i		6363130	0					
ANR	6363141	PrimaryExpression	0		6363130	1					
ANR	6363142	Condition	i < dec_insn . code -> nr_operands	884:14:19562:19591	6363130	1	True				
ANR	6363143	RelationalExpression	i < dec_insn . code -> nr_operands		6363130	0		<			
ANR	6363144	Identifier	i		6363130	0					
ANR	6363145	PtrMemberAccess	dec_insn . code -> nr_operands		6363130	1					
ANR	6363146	MemberAccess	dec_insn . code		6363130	0					
ANR	6363147	Identifier	dec_insn		6363130	0					
ANR	6363148	Identifier	code		6363130	1					
ANR	6363149	Identifier	nr_operands		6363130	1					
ANR	6363150	UnaryExpression	++ i	884:46:19594:19596	6363130	2	True				
ANR	6363151	IncDec	++		6363130	0					
ANR	6363152	Identifier	i		6363130	1					
ANR	6363153	CompoundStatement		4:51:62:62	6363130	3					
ANR	6363154	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6363130	0					
ANR	6363155	Condition	dec_insn . code -> fields [ i ]	885:11:19612:19635	6363130	0	True				
ANR	6363156	ArrayIndexing	dec_insn . code -> fields [ i ]		6363130	0					
ANR	6363157	PtrMemberAccess	dec_insn . code -> fields		6363130	0					
ANR	6363158	MemberAccess	dec_insn . code		6363130	0					
ANR	6363159	Identifier	dec_insn		6363130	0					
ANR	6363160	Identifier	code		6363130	1					
ANR	6363161	Identifier	fields		6363130	1					
ANR	6363162	Identifier	i		6363130	1					
ANR	6363163	CompoundStatement		5:37:101:101	6363130	1					
ANR	6363164	Label	case FMT_SBRN_N :	886:3:19643:19658	6363130	0	True				
ANR	6363165	Identifier	FMT_SBRN_N		6363130	0					
ANR	6363166	IfStatement	if ( dec_insn . code -> args [ i ] == '5' )		6363130	1					
ANR	6363167	Condition	dec_insn . code -> args [ i ] == '5'	887:8:19668:19696	6363130	0	True				
ANR	6363168	EqualityExpression	dec_insn . code -> args [ i ] == '5'		6363130	0		==			
ANR	6363169	ArrayIndexing	dec_insn . code -> args [ i ]		6363130	0					
ANR	6363170	PtrMemberAccess	dec_insn . code -> args		6363130	0					
ANR	6363171	MemberAccess	dec_insn . code		6363130	0					
ANR	6363172	Identifier	dec_insn		6363130	0					
ANR	6363173	Identifier	code		6363130	1					
ANR	6363174	Identifier	args		6363130	1					
ANR	6363175	Identifier	i		6363130	1					
ANR	6363176	PrimaryExpression	'5'		6363130	1					
ANR	6363177	CompoundStatement		7:39:162:162	6363130	1					
ANR	6363178	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12	888:5:19706:19757	6363130	0	True				
ANR	6363179	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12		6363130	0		=			
ANR	6363180	ArrayIndexing	dec_insn . cexp [ i ]		6363130	0					
ANR	6363181	MemberAccess	dec_insn . cexp		6363130	0					
ANR	6363182	Identifier	dec_insn		6363130	0					
ANR	6363183	Identifier	cexp		6363130	1					
ANR	6363184	Identifier	i		6363130	1					
ANR	6363185	ShiftExpression	( dec_insn . opcode & 0xf000 ) >> 12		6363130	1		>>			
ANR	6363186	BitAndExpression	dec_insn . opcode & 0xf000		6363130	0		&			
ANR	6363187	MemberAccess	dec_insn . opcode		6363130	0					
ANR	6363188	Identifier	dec_insn		6363130	0					
ANR	6363189	Identifier	opcode		6363130	1					
ANR	6363190	PrimaryExpression	0xf000		6363130	1					
ANR	6363191	PrimaryExpression	12		6363130	1					
ANR	6363192	ExpressionStatement	dec_insn . cexp [ i ] |= ( dec_insn . opcode & 0x0080 ) >> 3	889:5:19764:19815	6363130	1	True				
ANR	6363193	AssignmentExpression	dec_insn . cexp [ i ] |= ( dec_insn . opcode & 0x0080 ) >> 3		6363130	0		|=			
ANR	6363194	ArrayIndexing	dec_insn . cexp [ i ]		6363130	0					
ANR	6363195	MemberAccess	dec_insn . cexp		6363130	0					
ANR	6363196	Identifier	dec_insn		6363130	0					
ANR	6363197	Identifier	cexp		6363130	1					
ANR	6363198	Identifier	i		6363130	1					
ANR	6363199	ShiftExpression	( dec_insn . opcode & 0x0080 ) >> 3		6363130	1		>>			
ANR	6363200	BitAndExpression	dec_insn . opcode & 0x0080		6363130	0		&			
ANR	6363201	MemberAccess	dec_insn . opcode		6363130	0					
ANR	6363202	Identifier	dec_insn		6363130	0					
ANR	6363203	Identifier	opcode		6363130	1					
ANR	6363204	PrimaryExpression	0x0080		6363130	1					
ANR	6363205	PrimaryExpression	3		6363130	1					
ANR	6363206	ElseStatement	else		6363130	0					
ANR	6363207	CompoundStatement		10:11:291:291	6363130	0					
ANR	6363208	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12	891:5:19835:19886	6363130	0	True				
ANR	6363209	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12		6363130	0		=			
ANR	6363210	ArrayIndexing	dec_insn . cexp [ i ]		6363130	0					
ANR	6363211	MemberAccess	dec_insn . cexp		6363130	0					
ANR	6363212	Identifier	dec_insn		6363130	0					
ANR	6363213	Identifier	cexp		6363130	1					
ANR	6363214	Identifier	i		6363130	1					
ANR	6363215	ShiftExpression	( dec_insn . opcode & 0xf000 ) >> 12		6363130	1		>>			
ANR	6363216	BitAndExpression	dec_insn . opcode & 0xf000		6363130	0		&			
ANR	6363217	MemberAccess	dec_insn . opcode		6363130	0					
ANR	6363218	Identifier	dec_insn		6363130	0					
ANR	6363219	Identifier	opcode		6363130	1					
ANR	6363220	PrimaryExpression	0xf000		6363130	1					
ANR	6363221	PrimaryExpression	12		6363130	1					
ANR	6363222	BreakStatement	break ;	893:4:19898:19903	6363130	2	True				
ANR	6363223	Label	case FMT_SBRN_DISP4 :	895:3:19909:19928	6363130	3	True				
ANR	6363224	Identifier	FMT_SBRN_DISP4		6363130	0					
ANR	6363225	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8	896:4:19934:19984	6363130	4	True				
ANR	6363226	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8		6363130	0		=			
ANR	6363227	ArrayIndexing	dec_insn . cexp [ i ]		6363130	0					
ANR	6363228	MemberAccess	dec_insn . cexp		6363130	0					
ANR	6363229	Identifier	dec_insn		6363130	0					
ANR	6363230	Identifier	cexp		6363130	1					
ANR	6363231	Identifier	i		6363130	1					
ANR	6363232	ShiftExpression	( dec_insn . opcode & 0x0f00 ) >> 8		6363130	1		>>			
ANR	6363233	BitAndExpression	dec_insn . opcode & 0x0f00		6363130	0		&			
ANR	6363234	MemberAccess	dec_insn . opcode		6363130	0					
ANR	6363235	Identifier	dec_insn		6363130	0					
ANR	6363236	Identifier	opcode		6363130	1					
ANR	6363237	PrimaryExpression	0x0f00		6363130	1					
ANR	6363238	PrimaryExpression	8		6363130	1					
ANR	6363239	BreakStatement	break ;	897:4:19990:19995	6363130	5	True				
ANR	6363240	ReturnType	static void		6363130	1					
ANR	6363241	Identifier	decode_sbrn		6363130	2					
ANR	6363242	ParameterList			6363130	3					
ANR	6363243	CFGEntryNode	ENTRY		6363130		True				
ANR	6363244	CFGExitNode	EXIT		6363130		True				
ANR	6363245	Symbol	dec_insn . code		6363130						
ANR	6363246	Symbol	dec_insn . code -> fields		6363130						
ANR	6363247	Symbol	* dec_insn . cexp		6363130						
ANR	6363248	Symbol	i		6363130						
ANR	6363249	Symbol	* dec_insn . code -> fields		6363130						
ANR	6363250	Symbol	* dec_insn . code -> args		6363130						
ANR	6363251	Symbol	dec_insn . cexp		6363130						
ANR	6363252	Symbol	* dec_insn		6363130						
ANR	6363253	Symbol	dec_insn . code -> nr_operands		6363130						
ANR	6363254	Symbol	* i		6363130						
ANR	6363255	Symbol	* * dec_insn		6363130						
ANR	6363256	Symbol	* dec_insn . code		6363130						
ANR	6363257	Symbol	dec_insn . opcode		6363130						
ANR	6363258	Symbol	dec_insn		6363130						
ANR	6363259	Symbol	dec_insn . code -> args		6363130						
ANR	6363260	Symbol	* * dec_insn . code		6363130						
ANR	6363261	Function	decode_sc	902:0:20009:20237							
ANR	6363262	FunctionDef	decode_sc ()		6363261	0					
ANR	6363263	CompoundStatement		904:0:20034:20237	6363261	0					
ANR	6363264	IdentifierDeclStatement	int i ;	905:2:20038:20043	6363261	0	True				
ANR	6363265	IdentifierDecl	i		6363261	0					
ANR	6363266	IdentifierDeclType	int		6363261	0					
ANR	6363267	Identifier	i		6363261	1					
ANR	6363268	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6363261	1					
ANR	6363269	ForInit	i = 0 ;	907:7:20053:20058	6363261	0	True				
ANR	6363270	AssignmentExpression	i = 0		6363261	0		=			
ANR	6363271	Identifier	i		6363261	0					
ANR	6363272	PrimaryExpression	0		6363261	1					
ANR	6363273	Condition	i < dec_insn . code -> nr_operands	907:14:20060:20089	6363261	1	True				
ANR	6363274	RelationalExpression	i < dec_insn . code -> nr_operands		6363261	0		<			
ANR	6363275	Identifier	i		6363261	0					
ANR	6363276	PtrMemberAccess	dec_insn . code -> nr_operands		6363261	1					
ANR	6363277	MemberAccess	dec_insn . code		6363261	0					
ANR	6363278	Identifier	dec_insn		6363261	0					
ANR	6363279	Identifier	code		6363261	1					
ANR	6363280	Identifier	nr_operands		6363261	1					
ANR	6363281	UnaryExpression	++ i	907:46:20092:20094	6363261	2	True				
ANR	6363282	IncDec	++		6363261	0					
ANR	6363283	Identifier	i		6363261	1					
ANR	6363284	CompoundStatement		4:51:62:62	6363261	3					
ANR	6363285	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6363261	0					
ANR	6363286	Condition	dec_insn . code -> fields [ i ]	908:11:20110:20133	6363261	0	True				
ANR	6363287	ArrayIndexing	dec_insn . code -> fields [ i ]		6363261	0					
ANR	6363288	PtrMemberAccess	dec_insn . code -> fields		6363261	0					
ANR	6363289	MemberAccess	dec_insn . code		6363261	0					
ANR	6363290	Identifier	dec_insn		6363261	0					
ANR	6363291	Identifier	code		6363261	1					
ANR	6363292	Identifier	fields		6363261	1					
ANR	6363293	Identifier	i		6363261	1					
ANR	6363294	CompoundStatement		5:37:101:101	6363261	1					
ANR	6363295	Label	case FMT_SC_CONST8 :	909:3:20141:20159	6363261	0	True				
ANR	6363296	Identifier	FMT_SC_CONST8		6363261	0					
ANR	6363297	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0xff00 ) >> 8	910:4:20165:20215	6363261	1	True				
ANR	6363298	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0xff00 ) >> 8		6363261	0		=			
ANR	6363299	ArrayIndexing	dec_insn . cexp [ i ]		6363261	0					
ANR	6363300	MemberAccess	dec_insn . cexp		6363261	0					
ANR	6363301	Identifier	dec_insn		6363261	0					
ANR	6363302	Identifier	cexp		6363261	1					
ANR	6363303	Identifier	i		6363261	1					
ANR	6363304	ShiftExpression	( dec_insn . opcode & 0xff00 ) >> 8		6363261	1		>>			
ANR	6363305	BitAndExpression	dec_insn . opcode & 0xff00		6363261	0		&			
ANR	6363306	MemberAccess	dec_insn . opcode		6363261	0					
ANR	6363307	Identifier	dec_insn		6363261	0					
ANR	6363308	Identifier	opcode		6363261	1					
ANR	6363309	PrimaryExpression	0xff00		6363261	1					
ANR	6363310	PrimaryExpression	8		6363261	1					
ANR	6363311	BreakStatement	break ;	911:4:20221:20226	6363261	2	True				
ANR	6363312	ReturnType	static void		6363261	1					
ANR	6363313	Identifier	decode_sc		6363261	2					
ANR	6363314	ParameterList			6363261	3					
ANR	6363315	CFGEntryNode	ENTRY		6363261		True				
ANR	6363316	CFGExitNode	EXIT		6363261		True				
ANR	6363317	Symbol	dec_insn . code		6363261						
ANR	6363318	Symbol	dec_insn . code -> fields		6363261						
ANR	6363319	Symbol	* dec_insn . cexp		6363261						
ANR	6363320	Symbol	i		6363261						
ANR	6363321	Symbol	* dec_insn . code -> fields		6363261						
ANR	6363322	Symbol	dec_insn . cexp		6363261						
ANR	6363323	Symbol	* dec_insn		6363261						
ANR	6363324	Symbol	dec_insn . code -> nr_operands		6363261						
ANR	6363325	Symbol	* i		6363261						
ANR	6363326	Symbol	* * dec_insn		6363261						
ANR	6363327	Symbol	* dec_insn . code		6363261						
ANR	6363328	Symbol	dec_insn . opcode		6363261						
ANR	6363329	Symbol	dec_insn		6363261						
ANR	6363330	Symbol	* * dec_insn . code		6363261						
ANR	6363331	Function	decode_slr	916:0:20240:20554							
ANR	6363332	FunctionDef	decode_slr ()		6363331	0					
ANR	6363333	CompoundStatement		918:0:20266:20554	6363331	0					
ANR	6363334	IdentifierDeclStatement	int i ;	919:2:20270:20275	6363331	0	True				
ANR	6363335	IdentifierDecl	i		6363331	0					
ANR	6363336	IdentifierDeclType	int		6363331	0					
ANR	6363337	Identifier	i		6363331	1					
ANR	6363338	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6363331	1					
ANR	6363339	ForInit	i = 0 ;	921:7:20285:20290	6363331	0	True				
ANR	6363340	AssignmentExpression	i = 0		6363331	0		=			
ANR	6363341	Identifier	i		6363331	0					
ANR	6363342	PrimaryExpression	0		6363331	1					
ANR	6363343	Condition	i < dec_insn . code -> nr_operands	921:14:20292:20321	6363331	1	True				
ANR	6363344	RelationalExpression	i < dec_insn . code -> nr_operands		6363331	0		<			
ANR	6363345	Identifier	i		6363331	0					
ANR	6363346	PtrMemberAccess	dec_insn . code -> nr_operands		6363331	1					
ANR	6363347	MemberAccess	dec_insn . code		6363331	0					
ANR	6363348	Identifier	dec_insn		6363331	0					
ANR	6363349	Identifier	code		6363331	1					
ANR	6363350	Identifier	nr_operands		6363331	1					
ANR	6363351	UnaryExpression	++ i	921:46:20324:20326	6363331	2	True				
ANR	6363352	IncDec	++		6363331	0					
ANR	6363353	Identifier	i		6363331	1					
ANR	6363354	CompoundStatement		4:51:62:62	6363331	3					
ANR	6363355	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6363331	0					
ANR	6363356	Condition	dec_insn . code -> fields [ i ]	922:11:20342:20365	6363331	0	True				
ANR	6363357	ArrayIndexing	dec_insn . code -> fields [ i ]		6363331	0					
ANR	6363358	PtrMemberAccess	dec_insn . code -> fields		6363331	0					
ANR	6363359	MemberAccess	dec_insn . code		6363331	0					
ANR	6363360	Identifier	dec_insn		6363331	0					
ANR	6363361	Identifier	code		6363331	1					
ANR	6363362	Identifier	fields		6363331	1					
ANR	6363363	Identifier	i		6363331	1					
ANR	6363364	CompoundStatement		5:37:101:101	6363331	1					
ANR	6363365	Label	case FMT_SLR_S2 :	923:3:20373:20388	6363331	0	True				
ANR	6363366	Identifier	FMT_SLR_S2		6363331	0					
ANR	6363367	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12	924:4:20394:20445	6363331	1	True				
ANR	6363368	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12		6363331	0		=			
ANR	6363369	ArrayIndexing	dec_insn . regs [ i ]		6363331	0					
ANR	6363370	MemberAccess	dec_insn . regs		6363331	0					
ANR	6363371	Identifier	dec_insn		6363331	0					
ANR	6363372	Identifier	regs		6363331	1					
ANR	6363373	Identifier	i		6363331	1					
ANR	6363374	ShiftExpression	( dec_insn . opcode & 0xf000 ) >> 12		6363331	1		>>			
ANR	6363375	BitAndExpression	dec_insn . opcode & 0xf000		6363331	0		&			
ANR	6363376	MemberAccess	dec_insn . opcode		6363331	0					
ANR	6363377	Identifier	dec_insn		6363331	0					
ANR	6363378	Identifier	opcode		6363331	1					
ANR	6363379	PrimaryExpression	0xf000		6363331	1					
ANR	6363380	PrimaryExpression	12		6363331	1					
ANR	6363381	BreakStatement	break ;	925:4:20451:20456	6363331	2	True				
ANR	6363382	Label	case FMT_SLR_D :	927:3:20462:20476	6363331	3	True				
ANR	6363383	Identifier	FMT_SLR_D		6363331	0					
ANR	6363384	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8	928:4:20482:20532	6363331	4	True				
ANR	6363385	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8		6363331	0		=			
ANR	6363386	ArrayIndexing	dec_insn . regs [ i ]		6363331	0					
ANR	6363387	MemberAccess	dec_insn . regs		6363331	0					
ANR	6363388	Identifier	dec_insn		6363331	0					
ANR	6363389	Identifier	regs		6363331	1					
ANR	6363390	Identifier	i		6363331	1					
ANR	6363391	ShiftExpression	( dec_insn . opcode & 0x0f00 ) >> 8		6363331	1		>>			
ANR	6363392	BitAndExpression	dec_insn . opcode & 0x0f00		6363331	0		&			
ANR	6363393	MemberAccess	dec_insn . opcode		6363331	0					
ANR	6363394	Identifier	dec_insn		6363331	0					
ANR	6363395	Identifier	opcode		6363331	1					
ANR	6363396	PrimaryExpression	0x0f00		6363331	1					
ANR	6363397	PrimaryExpression	8		6363331	1					
ANR	6363398	BreakStatement	break ;	929:4:20538:20543	6363331	5	True				
ANR	6363399	ReturnType	static void		6363331	1					
ANR	6363400	Identifier	decode_slr		6363331	2					
ANR	6363401	ParameterList			6363331	3					
ANR	6363402	CFGEntryNode	ENTRY		6363331		True				
ANR	6363403	CFGExitNode	EXIT		6363331		True				
ANR	6363404	Symbol	dec_insn . code		6363331						
ANR	6363405	Symbol	dec_insn . code -> fields		6363331						
ANR	6363406	Symbol	i		6363331						
ANR	6363407	Symbol	* dec_insn . code -> fields		6363331						
ANR	6363408	Symbol	* dec_insn		6363331						
ANR	6363409	Symbol	dec_insn . code -> nr_operands		6363331						
ANR	6363410	Symbol	* i		6363331						
ANR	6363411	Symbol	dec_insn . regs		6363331						
ANR	6363412	Symbol	* * dec_insn		6363331						
ANR	6363413	Symbol	* dec_insn . code		6363331						
ANR	6363414	Symbol	dec_insn . opcode		6363331						
ANR	6363415	Symbol	dec_insn		6363331						
ANR	6363416	Symbol	* * dec_insn . code		6363331						
ANR	6363417	Symbol	* dec_insn . regs		6363331						
ANR	6363418	Function	decode_slro	934:0:20557:20876							
ANR	6363419	FunctionDef	decode_slro ()		6363418	0					
ANR	6363420	CompoundStatement		936:0:20584:20876	6363418	0					
ANR	6363421	IdentifierDeclStatement	int i ;	937:2:20588:20593	6363418	0	True				
ANR	6363422	IdentifierDecl	i		6363418	0					
ANR	6363423	IdentifierDeclType	int		6363418	0					
ANR	6363424	Identifier	i		6363418	1					
ANR	6363425	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6363418	1					
ANR	6363426	ForInit	i = 0 ;	939:7:20603:20608	6363418	0	True				
ANR	6363427	AssignmentExpression	i = 0		6363418	0		=			
ANR	6363428	Identifier	i		6363418	0					
ANR	6363429	PrimaryExpression	0		6363418	1					
ANR	6363430	Condition	i < dec_insn . code -> nr_operands	939:14:20610:20639	6363418	1	True				
ANR	6363431	RelationalExpression	i < dec_insn . code -> nr_operands		6363418	0		<			
ANR	6363432	Identifier	i		6363418	0					
ANR	6363433	PtrMemberAccess	dec_insn . code -> nr_operands		6363418	1					
ANR	6363434	MemberAccess	dec_insn . code		6363418	0					
ANR	6363435	Identifier	dec_insn		6363418	0					
ANR	6363436	Identifier	code		6363418	1					
ANR	6363437	Identifier	nr_operands		6363418	1					
ANR	6363438	UnaryExpression	++ i	939:46:20642:20644	6363418	2	True				
ANR	6363439	IncDec	++		6363418	0					
ANR	6363440	Identifier	i		6363418	1					
ANR	6363441	CompoundStatement		4:51:62:62	6363418	3					
ANR	6363442	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6363418	0					
ANR	6363443	Condition	dec_insn . code -> fields [ i ]	940:11:20660:20683	6363418	0	True				
ANR	6363444	ArrayIndexing	dec_insn . code -> fields [ i ]		6363418	0					
ANR	6363445	PtrMemberAccess	dec_insn . code -> fields		6363418	0					
ANR	6363446	MemberAccess	dec_insn . code		6363418	0					
ANR	6363447	Identifier	dec_insn		6363418	0					
ANR	6363448	Identifier	code		6363418	1					
ANR	6363449	Identifier	fields		6363418	1					
ANR	6363450	Identifier	i		6363418	1					
ANR	6363451	CompoundStatement		5:37:101:101	6363418	1					
ANR	6363452	Label	case FMT_SLRO_OFF4 :	941:3:20691:20709	6363418	0	True				
ANR	6363453	Identifier	FMT_SLRO_OFF4		6363418	0					
ANR	6363454	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12	942:4:20715:20766	6363418	1	True				
ANR	6363455	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12		6363418	0		=			
ANR	6363456	ArrayIndexing	dec_insn . cexp [ i ]		6363418	0					
ANR	6363457	MemberAccess	dec_insn . cexp		6363418	0					
ANR	6363458	Identifier	dec_insn		6363418	0					
ANR	6363459	Identifier	cexp		6363418	1					
ANR	6363460	Identifier	i		6363418	1					
ANR	6363461	ShiftExpression	( dec_insn . opcode & 0xf000 ) >> 12		6363418	1		>>			
ANR	6363462	BitAndExpression	dec_insn . opcode & 0xf000		6363418	0		&			
ANR	6363463	MemberAccess	dec_insn . opcode		6363418	0					
ANR	6363464	Identifier	dec_insn		6363418	0					
ANR	6363465	Identifier	opcode		6363418	1					
ANR	6363466	PrimaryExpression	0xf000		6363418	1					
ANR	6363467	PrimaryExpression	12		6363418	1					
ANR	6363468	BreakStatement	break ;	943:4:20772:20777	6363418	2	True				
ANR	6363469	Label	case FMT_SLRO_D :	945:3:20783:20798	6363418	3	True				
ANR	6363470	Identifier	FMT_SLRO_D		6363418	0					
ANR	6363471	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8	946:4:20804:20854	6363418	4	True				
ANR	6363472	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8		6363418	0		=			
ANR	6363473	ArrayIndexing	dec_insn . regs [ i ]		6363418	0					
ANR	6363474	MemberAccess	dec_insn . regs		6363418	0					
ANR	6363475	Identifier	dec_insn		6363418	0					
ANR	6363476	Identifier	regs		6363418	1					
ANR	6363477	Identifier	i		6363418	1					
ANR	6363478	ShiftExpression	( dec_insn . opcode & 0x0f00 ) >> 8		6363418	1		>>			
ANR	6363479	BitAndExpression	dec_insn . opcode & 0x0f00		6363418	0		&			
ANR	6363480	MemberAccess	dec_insn . opcode		6363418	0					
ANR	6363481	Identifier	dec_insn		6363418	0					
ANR	6363482	Identifier	opcode		6363418	1					
ANR	6363483	PrimaryExpression	0x0f00		6363418	1					
ANR	6363484	PrimaryExpression	8		6363418	1					
ANR	6363485	BreakStatement	break ;	947:4:20860:20865	6363418	5	True				
ANR	6363486	ReturnType	static void		6363418	1					
ANR	6363487	Identifier	decode_slro		6363418	2					
ANR	6363488	ParameterList			6363418	3					
ANR	6363489	CFGEntryNode	ENTRY		6363418		True				
ANR	6363490	CFGExitNode	EXIT		6363418		True				
ANR	6363491	Symbol	dec_insn . code		6363418						
ANR	6363492	Symbol	dec_insn . code -> fields		6363418						
ANR	6363493	Symbol	* dec_insn . cexp		6363418						
ANR	6363494	Symbol	i		6363418						
ANR	6363495	Symbol	* dec_insn . code -> fields		6363418						
ANR	6363496	Symbol	dec_insn . cexp		6363418						
ANR	6363497	Symbol	* dec_insn		6363418						
ANR	6363498	Symbol	dec_insn . code -> nr_operands		6363418						
ANR	6363499	Symbol	* i		6363418						
ANR	6363500	Symbol	dec_insn . regs		6363418						
ANR	6363501	Symbol	* * dec_insn		6363418						
ANR	6363502	Symbol	* dec_insn . code		6363418						
ANR	6363503	Symbol	dec_insn . opcode		6363418						
ANR	6363504	Symbol	dec_insn		6363418						
ANR	6363505	Symbol	* * dec_insn . code		6363418						
ANR	6363506	Symbol	* dec_insn . regs		6363418						
ANR	6363507	Function	decode_sr	952:0:20879:21105							
ANR	6363508	FunctionDef	decode_sr ()		6363507	0					
ANR	6363509	CompoundStatement		954:0:20904:21105	6363507	0					
ANR	6363510	IdentifierDeclStatement	int i ;	955:2:20908:20913	6363507	0	True				
ANR	6363511	IdentifierDecl	i		6363507	0					
ANR	6363512	IdentifierDeclType	int		6363507	0					
ANR	6363513	Identifier	i		6363507	1					
ANR	6363514	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6363507	1					
ANR	6363515	ForInit	i = 0 ;	957:7:20923:20928	6363507	0	True				
ANR	6363516	AssignmentExpression	i = 0		6363507	0		=			
ANR	6363517	Identifier	i		6363507	0					
ANR	6363518	PrimaryExpression	0		6363507	1					
ANR	6363519	Condition	i < dec_insn . code -> nr_operands	957:14:20930:20959	6363507	1	True				
ANR	6363520	RelationalExpression	i < dec_insn . code -> nr_operands		6363507	0		<			
ANR	6363521	Identifier	i		6363507	0					
ANR	6363522	PtrMemberAccess	dec_insn . code -> nr_operands		6363507	1					
ANR	6363523	MemberAccess	dec_insn . code		6363507	0					
ANR	6363524	Identifier	dec_insn		6363507	0					
ANR	6363525	Identifier	code		6363507	1					
ANR	6363526	Identifier	nr_operands		6363507	1					
ANR	6363527	UnaryExpression	++ i	957:46:20962:20964	6363507	2	True				
ANR	6363528	IncDec	++		6363507	0					
ANR	6363529	Identifier	i		6363507	1					
ANR	6363530	CompoundStatement		4:51:62:62	6363507	3					
ANR	6363531	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6363507	0					
ANR	6363532	Condition	dec_insn . code -> fields [ i ]	958:11:20980:21003	6363507	0	True				
ANR	6363533	ArrayIndexing	dec_insn . code -> fields [ i ]		6363507	0					
ANR	6363534	PtrMemberAccess	dec_insn . code -> fields		6363507	0					
ANR	6363535	MemberAccess	dec_insn . code		6363507	0					
ANR	6363536	Identifier	dec_insn		6363507	0					
ANR	6363537	Identifier	code		6363507	1					
ANR	6363538	Identifier	fields		6363507	1					
ANR	6363539	Identifier	i		6363507	1					
ANR	6363540	CompoundStatement		5:37:101:101	6363507	1					
ANR	6363541	Label	case FMT_SR_S1_D :	959:3:21011:21027	6363507	0	True				
ANR	6363542	Identifier	FMT_SR_S1_D		6363507	0					
ANR	6363543	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8	960:4:21033:21083	6363507	1	True				
ANR	6363544	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8		6363507	0		=			
ANR	6363545	ArrayIndexing	dec_insn . regs [ i ]		6363507	0					
ANR	6363546	MemberAccess	dec_insn . regs		6363507	0					
ANR	6363547	Identifier	dec_insn		6363507	0					
ANR	6363548	Identifier	regs		6363507	1					
ANR	6363549	Identifier	i		6363507	1					
ANR	6363550	ShiftExpression	( dec_insn . opcode & 0x0f00 ) >> 8		6363507	1		>>			
ANR	6363551	BitAndExpression	dec_insn . opcode & 0x0f00		6363507	0		&			
ANR	6363552	MemberAccess	dec_insn . opcode		6363507	0					
ANR	6363553	Identifier	dec_insn		6363507	0					
ANR	6363554	Identifier	opcode		6363507	1					
ANR	6363555	PrimaryExpression	0x0f00		6363507	1					
ANR	6363556	PrimaryExpression	8		6363507	1					
ANR	6363557	BreakStatement	break ;	961:4:21089:21094	6363507	2	True				
ANR	6363558	ReturnType	static void		6363507	1					
ANR	6363559	Identifier	decode_sr		6363507	2					
ANR	6363560	ParameterList			6363507	3					
ANR	6363561	CFGEntryNode	ENTRY		6363507		True				
ANR	6363562	CFGExitNode	EXIT		6363507		True				
ANR	6363563	Symbol	dec_insn . code		6363507						
ANR	6363564	Symbol	dec_insn . code -> fields		6363507						
ANR	6363565	Symbol	i		6363507						
ANR	6363566	Symbol	* dec_insn . code -> fields		6363507						
ANR	6363567	Symbol	* dec_insn		6363507						
ANR	6363568	Symbol	dec_insn . code -> nr_operands		6363507						
ANR	6363569	Symbol	* i		6363507						
ANR	6363570	Symbol	dec_insn . regs		6363507						
ANR	6363571	Symbol	* * dec_insn		6363507						
ANR	6363572	Symbol	* dec_insn . code		6363507						
ANR	6363573	Symbol	dec_insn . opcode		6363507						
ANR	6363574	Symbol	dec_insn		6363507						
ANR	6363575	Symbol	* * dec_insn . code		6363507						
ANR	6363576	Symbol	* dec_insn . regs		6363507						
ANR	6363577	Function	decode_src	966:0:21108:21429							
ANR	6363578	FunctionDef	decode_src ()		6363577	0					
ANR	6363579	CompoundStatement		968:0:21134:21429	6363577	0					
ANR	6363580	IdentifierDeclStatement	int i ;	969:2:21138:21143	6363577	0	True				
ANR	6363581	IdentifierDecl	i		6363577	0					
ANR	6363582	IdentifierDeclType	int		6363577	0					
ANR	6363583	Identifier	i		6363577	1					
ANR	6363584	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6363577	1					
ANR	6363585	ForInit	i = 0 ;	971:7:21153:21158	6363577	0	True				
ANR	6363586	AssignmentExpression	i = 0		6363577	0		=			
ANR	6363587	Identifier	i		6363577	0					
ANR	6363588	PrimaryExpression	0		6363577	1					
ANR	6363589	Condition	i < dec_insn . code -> nr_operands	971:14:21160:21189	6363577	1	True				
ANR	6363590	RelationalExpression	i < dec_insn . code -> nr_operands		6363577	0		<			
ANR	6363591	Identifier	i		6363577	0					
ANR	6363592	PtrMemberAccess	dec_insn . code -> nr_operands		6363577	1					
ANR	6363593	MemberAccess	dec_insn . code		6363577	0					
ANR	6363594	Identifier	dec_insn		6363577	0					
ANR	6363595	Identifier	code		6363577	1					
ANR	6363596	Identifier	nr_operands		6363577	1					
ANR	6363597	UnaryExpression	++ i	971:46:21192:21194	6363577	2	True				
ANR	6363598	IncDec	++		6363577	0					
ANR	6363599	Identifier	i		6363577	1					
ANR	6363600	CompoundStatement		4:51:62:62	6363577	3					
ANR	6363601	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6363577	0					
ANR	6363602	Condition	dec_insn . code -> fields [ i ]	972:11:21210:21233	6363577	0	True				
ANR	6363603	ArrayIndexing	dec_insn . code -> fields [ i ]		6363577	0					
ANR	6363604	PtrMemberAccess	dec_insn . code -> fields		6363577	0					
ANR	6363605	MemberAccess	dec_insn . code		6363577	0					
ANR	6363606	Identifier	dec_insn		6363577	0					
ANR	6363607	Identifier	code		6363577	1					
ANR	6363608	Identifier	fields		6363577	1					
ANR	6363609	Identifier	i		6363577	1					
ANR	6363610	CompoundStatement		5:37:101:101	6363577	1					
ANR	6363611	Label	case FMT_SRC_CONST4 :	973:3:21241:21260	6363577	0	True				
ANR	6363612	Identifier	FMT_SRC_CONST4		6363577	0					
ANR	6363613	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12	974:4:21266:21317	6363577	1	True				
ANR	6363614	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12		6363577	0		=			
ANR	6363615	ArrayIndexing	dec_insn . cexp [ i ]		6363577	0					
ANR	6363616	MemberAccess	dec_insn . cexp		6363577	0					
ANR	6363617	Identifier	dec_insn		6363577	0					
ANR	6363618	Identifier	cexp		6363577	1					
ANR	6363619	Identifier	i		6363577	1					
ANR	6363620	ShiftExpression	( dec_insn . opcode & 0xf000 ) >> 12		6363577	1		>>			
ANR	6363621	BitAndExpression	dec_insn . opcode & 0xf000		6363577	0		&			
ANR	6363622	MemberAccess	dec_insn . opcode		6363577	0					
ANR	6363623	Identifier	dec_insn		6363577	0					
ANR	6363624	Identifier	opcode		6363577	1					
ANR	6363625	PrimaryExpression	0xf000		6363577	1					
ANR	6363626	PrimaryExpression	12		6363577	1					
ANR	6363627	BreakStatement	break ;	975:4:21323:21328	6363577	2	True				
ANR	6363628	Label	case FMT_SRC_S1_D :	977:3:21334:21351	6363577	3	True				
ANR	6363629	Identifier	FMT_SRC_S1_D		6363577	0					
ANR	6363630	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8	978:4:21357:21407	6363577	4	True				
ANR	6363631	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8		6363577	0		=			
ANR	6363632	ArrayIndexing	dec_insn . regs [ i ]		6363577	0					
ANR	6363633	MemberAccess	dec_insn . regs		6363577	0					
ANR	6363634	Identifier	dec_insn		6363577	0					
ANR	6363635	Identifier	regs		6363577	1					
ANR	6363636	Identifier	i		6363577	1					
ANR	6363637	ShiftExpression	( dec_insn . opcode & 0x0f00 ) >> 8		6363577	1		>>			
ANR	6363638	BitAndExpression	dec_insn . opcode & 0x0f00		6363577	0		&			
ANR	6363639	MemberAccess	dec_insn . opcode		6363577	0					
ANR	6363640	Identifier	dec_insn		6363577	0					
ANR	6363641	Identifier	opcode		6363577	1					
ANR	6363642	PrimaryExpression	0x0f00		6363577	1					
ANR	6363643	PrimaryExpression	8		6363577	1					
ANR	6363644	BreakStatement	break ;	979:4:21413:21418	6363577	5	True				
ANR	6363645	ReturnType	static void		6363577	1					
ANR	6363646	Identifier	decode_src		6363577	2					
ANR	6363647	ParameterList			6363577	3					
ANR	6363648	CFGEntryNode	ENTRY		6363577		True				
ANR	6363649	CFGExitNode	EXIT		6363577		True				
ANR	6363650	Symbol	dec_insn . code		6363577						
ANR	6363651	Symbol	dec_insn . code -> fields		6363577						
ANR	6363652	Symbol	* dec_insn . cexp		6363577						
ANR	6363653	Symbol	i		6363577						
ANR	6363654	Symbol	* dec_insn . code -> fields		6363577						
ANR	6363655	Symbol	dec_insn . cexp		6363577						
ANR	6363656	Symbol	* dec_insn		6363577						
ANR	6363657	Symbol	dec_insn . code -> nr_operands		6363577						
ANR	6363658	Symbol	* i		6363577						
ANR	6363659	Symbol	dec_insn . regs		6363577						
ANR	6363660	Symbol	* * dec_insn		6363577						
ANR	6363661	Symbol	* dec_insn . code		6363577						
ANR	6363662	Symbol	dec_insn . opcode		6363577						
ANR	6363663	Symbol	dec_insn		6363577						
ANR	6363664	Symbol	* * dec_insn . code		6363577						
ANR	6363665	Symbol	* dec_insn . regs		6363577						
ANR	6363666	Function	decode_sro	984:0:21432:21749							
ANR	6363667	FunctionDef	decode_sro ()		6363666	0					
ANR	6363668	CompoundStatement		986:0:21458:21749	6363666	0					
ANR	6363669	IdentifierDeclStatement	int i ;	987:2:21462:21467	6363666	0	True				
ANR	6363670	IdentifierDecl	i		6363666	0					
ANR	6363671	IdentifierDeclType	int		6363666	0					
ANR	6363672	Identifier	i		6363666	1					
ANR	6363673	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6363666	1					
ANR	6363674	ForInit	i = 0 ;	989:7:21477:21482	6363666	0	True				
ANR	6363675	AssignmentExpression	i = 0		6363666	0		=			
ANR	6363676	Identifier	i		6363666	0					
ANR	6363677	PrimaryExpression	0		6363666	1					
ANR	6363678	Condition	i < dec_insn . code -> nr_operands	989:14:21484:21513	6363666	1	True				
ANR	6363679	RelationalExpression	i < dec_insn . code -> nr_operands		6363666	0		<			
ANR	6363680	Identifier	i		6363666	0					
ANR	6363681	PtrMemberAccess	dec_insn . code -> nr_operands		6363666	1					
ANR	6363682	MemberAccess	dec_insn . code		6363666	0					
ANR	6363683	Identifier	dec_insn		6363666	0					
ANR	6363684	Identifier	code		6363666	1					
ANR	6363685	Identifier	nr_operands		6363666	1					
ANR	6363686	UnaryExpression	++ i	989:46:21516:21518	6363666	2	True				
ANR	6363687	IncDec	++		6363666	0					
ANR	6363688	Identifier	i		6363666	1					
ANR	6363689	CompoundStatement		4:51:62:62	6363666	3					
ANR	6363690	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6363666	0					
ANR	6363691	Condition	dec_insn . code -> fields [ i ]	990:11:21534:21557	6363666	0	True				
ANR	6363692	ArrayIndexing	dec_insn . code -> fields [ i ]		6363666	0					
ANR	6363693	PtrMemberAccess	dec_insn . code -> fields		6363666	0					
ANR	6363694	MemberAccess	dec_insn . code		6363666	0					
ANR	6363695	Identifier	dec_insn		6363666	0					
ANR	6363696	Identifier	code		6363666	1					
ANR	6363697	Identifier	fields		6363666	1					
ANR	6363698	Identifier	i		6363666	1					
ANR	6363699	CompoundStatement		5:37:101:101	6363666	1					
ANR	6363700	Label	case FMT_SRO_S2 :	991:3:21565:21580	6363666	0	True				
ANR	6363701	Identifier	FMT_SRO_S2		6363666	0					
ANR	6363702	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12	992:4:21586:21637	6363666	1	True				
ANR	6363703	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12		6363666	0		=			
ANR	6363704	ArrayIndexing	dec_insn . regs [ i ]		6363666	0					
ANR	6363705	MemberAccess	dec_insn . regs		6363666	0					
ANR	6363706	Identifier	dec_insn		6363666	0					
ANR	6363707	Identifier	regs		6363666	1					
ANR	6363708	Identifier	i		6363666	1					
ANR	6363709	ShiftExpression	( dec_insn . opcode & 0xf000 ) >> 12		6363666	1		>>			
ANR	6363710	BitAndExpression	dec_insn . opcode & 0xf000		6363666	0		&			
ANR	6363711	MemberAccess	dec_insn . opcode		6363666	0					
ANR	6363712	Identifier	dec_insn		6363666	0					
ANR	6363713	Identifier	opcode		6363666	1					
ANR	6363714	PrimaryExpression	0xf000		6363666	1					
ANR	6363715	PrimaryExpression	12		6363666	1					
ANR	6363716	BreakStatement	break ;	993:4:21643:21648	6363666	2	True				
ANR	6363717	Label	case FMT_SRO_OFF4 :	995:3:21654:21671	6363666	3	True				
ANR	6363718	Identifier	FMT_SRO_OFF4		6363666	0					
ANR	6363719	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8	996:4:21677:21727	6363666	4	True				
ANR	6363720	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8		6363666	0		=			
ANR	6363721	ArrayIndexing	dec_insn . cexp [ i ]		6363666	0					
ANR	6363722	MemberAccess	dec_insn . cexp		6363666	0					
ANR	6363723	Identifier	dec_insn		6363666	0					
ANR	6363724	Identifier	cexp		6363666	1					
ANR	6363725	Identifier	i		6363666	1					
ANR	6363726	ShiftExpression	( dec_insn . opcode & 0x0f00 ) >> 8		6363666	1		>>			
ANR	6363727	BitAndExpression	dec_insn . opcode & 0x0f00		6363666	0		&			
ANR	6363728	MemberAccess	dec_insn . opcode		6363666	0					
ANR	6363729	Identifier	dec_insn		6363666	0					
ANR	6363730	Identifier	opcode		6363666	1					
ANR	6363731	PrimaryExpression	0x0f00		6363666	1					
ANR	6363732	PrimaryExpression	8		6363666	1					
ANR	6363733	BreakStatement	break ;	997:4:21733:21738	6363666	5	True				
ANR	6363734	ReturnType	static void		6363666	1					
ANR	6363735	Identifier	decode_sro		6363666	2					
ANR	6363736	ParameterList			6363666	3					
ANR	6363737	CFGEntryNode	ENTRY		6363666		True				
ANR	6363738	CFGExitNode	EXIT		6363666		True				
ANR	6363739	Symbol	dec_insn . code		6363666						
ANR	6363740	Symbol	dec_insn . code -> fields		6363666						
ANR	6363741	Symbol	* dec_insn . cexp		6363666						
ANR	6363742	Symbol	i		6363666						
ANR	6363743	Symbol	* dec_insn . code -> fields		6363666						
ANR	6363744	Symbol	dec_insn . cexp		6363666						
ANR	6363745	Symbol	* dec_insn		6363666						
ANR	6363746	Symbol	dec_insn . code -> nr_operands		6363666						
ANR	6363747	Symbol	* i		6363666						
ANR	6363748	Symbol	dec_insn . regs		6363666						
ANR	6363749	Symbol	* * dec_insn		6363666						
ANR	6363750	Symbol	* dec_insn . code		6363666						
ANR	6363751	Symbol	dec_insn . opcode		6363666						
ANR	6363752	Symbol	dec_insn		6363666						
ANR	6363753	Symbol	* * dec_insn . code		6363666						
ANR	6363754	Symbol	* dec_insn . regs		6363666						
ANR	6363755	Function	decode_srr	1002:0:21752:22069							
ANR	6363756	FunctionDef	decode_srr ()		6363755	0					
ANR	6363757	CompoundStatement		1004:0:21778:22069	6363755	0					
ANR	6363758	IdentifierDeclStatement	int i ;	1005:2:21782:21787	6363755	0	True				
ANR	6363759	IdentifierDecl	i		6363755	0					
ANR	6363760	IdentifierDeclType	int		6363755	0					
ANR	6363761	Identifier	i		6363755	1					
ANR	6363762	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6363755	1					
ANR	6363763	ForInit	i = 0 ;	1007:7:21797:21802	6363755	0	True				
ANR	6363764	AssignmentExpression	i = 0		6363755	0		=			
ANR	6363765	Identifier	i		6363755	0					
ANR	6363766	PrimaryExpression	0		6363755	1					
ANR	6363767	Condition	i < dec_insn . code -> nr_operands	1007:14:21804:21833	6363755	1	True				
ANR	6363768	RelationalExpression	i < dec_insn . code -> nr_operands		6363755	0		<			
ANR	6363769	Identifier	i		6363755	0					
ANR	6363770	PtrMemberAccess	dec_insn . code -> nr_operands		6363755	1					
ANR	6363771	MemberAccess	dec_insn . code		6363755	0					
ANR	6363772	Identifier	dec_insn		6363755	0					
ANR	6363773	Identifier	code		6363755	1					
ANR	6363774	Identifier	nr_operands		6363755	1					
ANR	6363775	UnaryExpression	++ i	1007:46:21836:21838	6363755	2	True				
ANR	6363776	IncDec	++		6363755	0					
ANR	6363777	Identifier	i		6363755	1					
ANR	6363778	CompoundStatement		4:51:62:62	6363755	3					
ANR	6363779	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6363755	0					
ANR	6363780	Condition	dec_insn . code -> fields [ i ]	1008:11:21854:21877	6363755	0	True				
ANR	6363781	ArrayIndexing	dec_insn . code -> fields [ i ]		6363755	0					
ANR	6363782	PtrMemberAccess	dec_insn . code -> fields		6363755	0					
ANR	6363783	MemberAccess	dec_insn . code		6363755	0					
ANR	6363784	Identifier	dec_insn		6363755	0					
ANR	6363785	Identifier	code		6363755	1					
ANR	6363786	Identifier	fields		6363755	1					
ANR	6363787	Identifier	i		6363755	1					
ANR	6363788	CompoundStatement		5:37:101:101	6363755	1					
ANR	6363789	Label	case FMT_SRR_S2 :	1009:3:21885:21900	6363755	0	True				
ANR	6363790	Identifier	FMT_SRR_S2		6363755	0					
ANR	6363791	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12	1010:4:21906:21957	6363755	1	True				
ANR	6363792	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12		6363755	0		=			
ANR	6363793	ArrayIndexing	dec_insn . regs [ i ]		6363755	0					
ANR	6363794	MemberAccess	dec_insn . regs		6363755	0					
ANR	6363795	Identifier	dec_insn		6363755	0					
ANR	6363796	Identifier	regs		6363755	1					
ANR	6363797	Identifier	i		6363755	1					
ANR	6363798	ShiftExpression	( dec_insn . opcode & 0xf000 ) >> 12		6363755	1		>>			
ANR	6363799	BitAndExpression	dec_insn . opcode & 0xf000		6363755	0		&			
ANR	6363800	MemberAccess	dec_insn . opcode		6363755	0					
ANR	6363801	Identifier	dec_insn		6363755	0					
ANR	6363802	Identifier	opcode		6363755	1					
ANR	6363803	PrimaryExpression	0xf000		6363755	1					
ANR	6363804	PrimaryExpression	12		6363755	1					
ANR	6363805	BreakStatement	break ;	1011:4:21963:21968	6363755	2	True				
ANR	6363806	Label	case FMT_SRR_S1_D :	1013:3:21974:21991	6363755	3	True				
ANR	6363807	Identifier	FMT_SRR_S1_D		6363755	0					
ANR	6363808	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8	1014:4:21997:22047	6363755	4	True				
ANR	6363809	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8		6363755	0		=			
ANR	6363810	ArrayIndexing	dec_insn . regs [ i ]		6363755	0					
ANR	6363811	MemberAccess	dec_insn . regs		6363755	0					
ANR	6363812	Identifier	dec_insn		6363755	0					
ANR	6363813	Identifier	regs		6363755	1					
ANR	6363814	Identifier	i		6363755	1					
ANR	6363815	ShiftExpression	( dec_insn . opcode & 0x0f00 ) >> 8		6363755	1		>>			
ANR	6363816	BitAndExpression	dec_insn . opcode & 0x0f00		6363755	0		&			
ANR	6363817	MemberAccess	dec_insn . opcode		6363755	0					
ANR	6363818	Identifier	dec_insn		6363755	0					
ANR	6363819	Identifier	opcode		6363755	1					
ANR	6363820	PrimaryExpression	0x0f00		6363755	1					
ANR	6363821	PrimaryExpression	8		6363755	1					
ANR	6363822	BreakStatement	break ;	1015:4:22053:22058	6363755	5	True				
ANR	6363823	ReturnType	static void		6363755	1					
ANR	6363824	Identifier	decode_srr		6363755	2					
ANR	6363825	ParameterList			6363755	3					
ANR	6363826	CFGEntryNode	ENTRY		6363755		True				
ANR	6363827	CFGExitNode	EXIT		6363755		True				
ANR	6363828	Symbol	dec_insn . code		6363755						
ANR	6363829	Symbol	dec_insn . code -> fields		6363755						
ANR	6363830	Symbol	i		6363755						
ANR	6363831	Symbol	* dec_insn . code -> fields		6363755						
ANR	6363832	Symbol	* dec_insn		6363755						
ANR	6363833	Symbol	dec_insn . code -> nr_operands		6363755						
ANR	6363834	Symbol	* i		6363755						
ANR	6363835	Symbol	dec_insn . regs		6363755						
ANR	6363836	Symbol	* * dec_insn		6363755						
ANR	6363837	Symbol	* dec_insn . code		6363755						
ANR	6363838	Symbol	dec_insn . opcode		6363755						
ANR	6363839	Symbol	dec_insn		6363755						
ANR	6363840	Symbol	* * dec_insn . code		6363755						
ANR	6363841	Symbol	* dec_insn . regs		6363755						
ANR	6363842	Function	decode_srrs	1020:0:22072:22480							
ANR	6363843	FunctionDef	decode_srrs ()		6363842	0					
ANR	6363844	CompoundStatement		1022:0:22099:22480	6363842	0					
ANR	6363845	IdentifierDeclStatement	int i ;	1023:2:22103:22108	6363842	0	True				
ANR	6363846	IdentifierDecl	i		6363842	0					
ANR	6363847	IdentifierDeclType	int		6363842	0					
ANR	6363848	Identifier	i		6363842	1					
ANR	6363849	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6363842	1					
ANR	6363850	ForInit	i = 0 ;	1025:7:22118:22123	6363842	0	True				
ANR	6363851	AssignmentExpression	i = 0		6363842	0		=			
ANR	6363852	Identifier	i		6363842	0					
ANR	6363853	PrimaryExpression	0		6363842	1					
ANR	6363854	Condition	i < dec_insn . code -> nr_operands	1025:14:22125:22154	6363842	1	True				
ANR	6363855	RelationalExpression	i < dec_insn . code -> nr_operands		6363842	0		<			
ANR	6363856	Identifier	i		6363842	0					
ANR	6363857	PtrMemberAccess	dec_insn . code -> nr_operands		6363842	1					
ANR	6363858	MemberAccess	dec_insn . code		6363842	0					
ANR	6363859	Identifier	dec_insn		6363842	0					
ANR	6363860	Identifier	code		6363842	1					
ANR	6363861	Identifier	nr_operands		6363842	1					
ANR	6363862	UnaryExpression	++ i	1025:46:22157:22159	6363842	2	True				
ANR	6363863	IncDec	++		6363842	0					
ANR	6363864	Identifier	i		6363842	1					
ANR	6363865	CompoundStatement		4:51:62:62	6363842	3					
ANR	6363866	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6363842	0					
ANR	6363867	Condition	dec_insn . code -> fields [ i ]	1026:11:22175:22198	6363842	0	True				
ANR	6363868	ArrayIndexing	dec_insn . code -> fields [ i ]		6363842	0					
ANR	6363869	PtrMemberAccess	dec_insn . code -> fields		6363842	0					
ANR	6363870	MemberAccess	dec_insn . code		6363842	0					
ANR	6363871	Identifier	dec_insn		6363842	0					
ANR	6363872	Identifier	code		6363842	1					
ANR	6363873	Identifier	fields		6363842	1					
ANR	6363874	Identifier	i		6363842	1					
ANR	6363875	CompoundStatement		5:37:101:101	6363842	1					
ANR	6363876	Label	case FMT_SRRS_S2 :	1027:3:22206:22222	6363842	0	True				
ANR	6363877	Identifier	FMT_SRRS_S2		6363842	0					
ANR	6363878	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12	1028:4:22228:22279	6363842	1	True				
ANR	6363879	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12		6363842	0		=			
ANR	6363880	ArrayIndexing	dec_insn . regs [ i ]		6363842	0					
ANR	6363881	MemberAccess	dec_insn . regs		6363842	0					
ANR	6363882	Identifier	dec_insn		6363842	0					
ANR	6363883	Identifier	regs		6363842	1					
ANR	6363884	Identifier	i		6363842	1					
ANR	6363885	ShiftExpression	( dec_insn . opcode & 0xf000 ) >> 12		6363842	1		>>			
ANR	6363886	BitAndExpression	dec_insn . opcode & 0xf000		6363842	0		&			
ANR	6363887	MemberAccess	dec_insn . opcode		6363842	0					
ANR	6363888	Identifier	dec_insn		6363842	0					
ANR	6363889	Identifier	opcode		6363842	1					
ANR	6363890	PrimaryExpression	0xf000		6363842	1					
ANR	6363891	PrimaryExpression	12		6363842	1					
ANR	6363892	BreakStatement	break ;	1029:4:22285:22290	6363842	2	True				
ANR	6363893	Label	case FMT_SRRS_S1_D :	1031:3:22296:22314	6363842	3	True				
ANR	6363894	Identifier	FMT_SRRS_S1_D		6363842	0					
ANR	6363895	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8	1032:4:22320:22370	6363842	4	True				
ANR	6363896	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8		6363842	0		=			
ANR	6363897	ArrayIndexing	dec_insn . regs [ i ]		6363842	0					
ANR	6363898	MemberAccess	dec_insn . regs		6363842	0					
ANR	6363899	Identifier	dec_insn		6363842	0					
ANR	6363900	Identifier	regs		6363842	1					
ANR	6363901	Identifier	i		6363842	1					
ANR	6363902	ShiftExpression	( dec_insn . opcode & 0x0f00 ) >> 8		6363842	1		>>			
ANR	6363903	BitAndExpression	dec_insn . opcode & 0x0f00		6363842	0		&			
ANR	6363904	MemberAccess	dec_insn . opcode		6363842	0					
ANR	6363905	Identifier	dec_insn		6363842	0					
ANR	6363906	Identifier	opcode		6363842	1					
ANR	6363907	PrimaryExpression	0x0f00		6363842	1					
ANR	6363908	PrimaryExpression	8		6363842	1					
ANR	6363909	BreakStatement	break ;	1033:4:22376:22381	6363842	5	True				
ANR	6363910	Label	case FMT_SRRS_N :	1035:3:22387:22402	6363842	6	True				
ANR	6363911	Identifier	FMT_SRRS_N		6363842	0					
ANR	6363912	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x00c0 ) >> 6	1036:4:22408:22458	6363842	7	True				
ANR	6363913	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0x00c0 ) >> 6		6363842	0		=			
ANR	6363914	ArrayIndexing	dec_insn . cexp [ i ]		6363842	0					
ANR	6363915	MemberAccess	dec_insn . cexp		6363842	0					
ANR	6363916	Identifier	dec_insn		6363842	0					
ANR	6363917	Identifier	cexp		6363842	1					
ANR	6363918	Identifier	i		6363842	1					
ANR	6363919	ShiftExpression	( dec_insn . opcode & 0x00c0 ) >> 6		6363842	1		>>			
ANR	6363920	BitAndExpression	dec_insn . opcode & 0x00c0		6363842	0		&			
ANR	6363921	MemberAccess	dec_insn . opcode		6363842	0					
ANR	6363922	Identifier	dec_insn		6363842	0					
ANR	6363923	Identifier	opcode		6363842	1					
ANR	6363924	PrimaryExpression	0x00c0		6363842	1					
ANR	6363925	PrimaryExpression	6		6363842	1					
ANR	6363926	BreakStatement	break ;	1037:4:22464:22469	6363842	8	True				
ANR	6363927	ReturnType	static void		6363842	1					
ANR	6363928	Identifier	decode_srrs		6363842	2					
ANR	6363929	ParameterList			6363842	3					
ANR	6363930	CFGEntryNode	ENTRY		6363842		True				
ANR	6363931	CFGExitNode	EXIT		6363842		True				
ANR	6363932	Symbol	dec_insn . code		6363842						
ANR	6363933	Symbol	dec_insn . code -> fields		6363842						
ANR	6363934	Symbol	* dec_insn . cexp		6363842						
ANR	6363935	Symbol	i		6363842						
ANR	6363936	Symbol	* dec_insn . code -> fields		6363842						
ANR	6363937	Symbol	dec_insn . cexp		6363842						
ANR	6363938	Symbol	* dec_insn		6363842						
ANR	6363939	Symbol	dec_insn . code -> nr_operands		6363842						
ANR	6363940	Symbol	* i		6363842						
ANR	6363941	Symbol	dec_insn . regs		6363842						
ANR	6363942	Symbol	* * dec_insn		6363842						
ANR	6363943	Symbol	* dec_insn . code		6363842						
ANR	6363944	Symbol	dec_insn . opcode		6363842						
ANR	6363945	Symbol	dec_insn		6363842						
ANR	6363946	Symbol	* * dec_insn . code		6363842						
ANR	6363947	Symbol	* dec_insn . regs		6363842						
ANR	6363948	Function	decode_ssr	1042:0:22483:22798							
ANR	6363949	FunctionDef	decode_ssr ()		6363948	0					
ANR	6363950	CompoundStatement		1044:0:22509:22798	6363948	0					
ANR	6363951	IdentifierDeclStatement	int i ;	1045:2:22513:22518	6363948	0	True				
ANR	6363952	IdentifierDecl	i		6363948	0					
ANR	6363953	IdentifierDeclType	int		6363948	0					
ANR	6363954	Identifier	i		6363948	1					
ANR	6363955	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6363948	1					
ANR	6363956	ForInit	i = 0 ;	1047:7:22528:22533	6363948	0	True				
ANR	6363957	AssignmentExpression	i = 0		6363948	0		=			
ANR	6363958	Identifier	i		6363948	0					
ANR	6363959	PrimaryExpression	0		6363948	1					
ANR	6363960	Condition	i < dec_insn . code -> nr_operands	1047:14:22535:22564	6363948	1	True				
ANR	6363961	RelationalExpression	i < dec_insn . code -> nr_operands		6363948	0		<			
ANR	6363962	Identifier	i		6363948	0					
ANR	6363963	PtrMemberAccess	dec_insn . code -> nr_operands		6363948	1					
ANR	6363964	MemberAccess	dec_insn . code		6363948	0					
ANR	6363965	Identifier	dec_insn		6363948	0					
ANR	6363966	Identifier	code		6363948	1					
ANR	6363967	Identifier	nr_operands		6363948	1					
ANR	6363968	UnaryExpression	++ i	1047:46:22567:22569	6363948	2	True				
ANR	6363969	IncDec	++		6363948	0					
ANR	6363970	Identifier	i		6363948	1					
ANR	6363971	CompoundStatement		4:51:62:62	6363948	3					
ANR	6363972	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6363948	0					
ANR	6363973	Condition	dec_insn . code -> fields [ i ]	1048:11:22585:22608	6363948	0	True				
ANR	6363974	ArrayIndexing	dec_insn . code -> fields [ i ]		6363948	0					
ANR	6363975	PtrMemberAccess	dec_insn . code -> fields		6363948	0					
ANR	6363976	MemberAccess	dec_insn . code		6363948	0					
ANR	6363977	Identifier	dec_insn		6363948	0					
ANR	6363978	Identifier	code		6363948	1					
ANR	6363979	Identifier	fields		6363948	1					
ANR	6363980	Identifier	i		6363948	1					
ANR	6363981	CompoundStatement		5:37:101:101	6363948	1					
ANR	6363982	Label	case FMT_SSR_S2 :	1049:3:22616:22631	6363948	0	True				
ANR	6363983	Identifier	FMT_SSR_S2		6363948	0					
ANR	6363984	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12	1050:4:22637:22688	6363948	1	True				
ANR	6363985	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12		6363948	0		=			
ANR	6363986	ArrayIndexing	dec_insn . regs [ i ]		6363948	0					
ANR	6363987	MemberAccess	dec_insn . regs		6363948	0					
ANR	6363988	Identifier	dec_insn		6363948	0					
ANR	6363989	Identifier	regs		6363948	1					
ANR	6363990	Identifier	i		6363948	1					
ANR	6363991	ShiftExpression	( dec_insn . opcode & 0xf000 ) >> 12		6363948	1		>>			
ANR	6363992	BitAndExpression	dec_insn . opcode & 0xf000		6363948	0		&			
ANR	6363993	MemberAccess	dec_insn . opcode		6363948	0					
ANR	6363994	Identifier	dec_insn		6363948	0					
ANR	6363995	Identifier	opcode		6363948	1					
ANR	6363996	PrimaryExpression	0xf000		6363948	1					
ANR	6363997	PrimaryExpression	12		6363948	1					
ANR	6363998	BreakStatement	break ;	1051:4:22694:22699	6363948	2	True				
ANR	6363999	Label	case FMT_SSR_S1 :	1053:3:22705:22720	6363948	3	True				
ANR	6364000	Identifier	FMT_SSR_S1		6363948	0					
ANR	6364001	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8	1054:4:22726:22776	6363948	4	True				
ANR	6364002	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8		6363948	0		=			
ANR	6364003	ArrayIndexing	dec_insn . regs [ i ]		6363948	0					
ANR	6364004	MemberAccess	dec_insn . regs		6363948	0					
ANR	6364005	Identifier	dec_insn		6363948	0					
ANR	6364006	Identifier	regs		6363948	1					
ANR	6364007	Identifier	i		6363948	1					
ANR	6364008	ShiftExpression	( dec_insn . opcode & 0x0f00 ) >> 8		6363948	1		>>			
ANR	6364009	BitAndExpression	dec_insn . opcode & 0x0f00		6363948	0		&			
ANR	6364010	MemberAccess	dec_insn . opcode		6363948	0					
ANR	6364011	Identifier	dec_insn		6363948	0					
ANR	6364012	Identifier	opcode		6363948	1					
ANR	6364013	PrimaryExpression	0x0f00		6363948	1					
ANR	6364014	PrimaryExpression	8		6363948	1					
ANR	6364015	BreakStatement	break ;	1055:4:22782:22787	6363948	5	True				
ANR	6364016	ReturnType	static void		6363948	1					
ANR	6364017	Identifier	decode_ssr		6363948	2					
ANR	6364018	ParameterList			6363948	3					
ANR	6364019	CFGEntryNode	ENTRY		6363948		True				
ANR	6364020	CFGExitNode	EXIT		6363948		True				
ANR	6364021	Symbol	dec_insn . code		6363948						
ANR	6364022	Symbol	dec_insn . code -> fields		6363948						
ANR	6364023	Symbol	i		6363948						
ANR	6364024	Symbol	* dec_insn . code -> fields		6363948						
ANR	6364025	Symbol	* dec_insn		6363948						
ANR	6364026	Symbol	dec_insn . code -> nr_operands		6363948						
ANR	6364027	Symbol	* i		6363948						
ANR	6364028	Symbol	dec_insn . regs		6363948						
ANR	6364029	Symbol	* * dec_insn		6363948						
ANR	6364030	Symbol	* dec_insn . code		6363948						
ANR	6364031	Symbol	dec_insn . opcode		6363948						
ANR	6364032	Symbol	dec_insn		6363948						
ANR	6364033	Symbol	* * dec_insn . code		6363948						
ANR	6364034	Symbol	* dec_insn . regs		6363948						
ANR	6364035	Function	decode_ssro	1060:0:22801:23121							
ANR	6364036	FunctionDef	decode_ssro ()		6364035	0					
ANR	6364037	CompoundStatement		1062:0:22828:23121	6364035	0					
ANR	6364038	IdentifierDeclStatement	int i ;	1063:2:22832:22837	6364035	0	True				
ANR	6364039	IdentifierDecl	i		6364035	0					
ANR	6364040	IdentifierDeclType	int		6364035	0					
ANR	6364041	Identifier	i		6364035	1					
ANR	6364042	ForStatement	for ( i = 0 ; i < dec_insn . code -> nr_operands ; ++ i )		6364035	1					
ANR	6364043	ForInit	i = 0 ;	1065:7:22847:22852	6364035	0	True				
ANR	6364044	AssignmentExpression	i = 0		6364035	0		=			
ANR	6364045	Identifier	i		6364035	0					
ANR	6364046	PrimaryExpression	0		6364035	1					
ANR	6364047	Condition	i < dec_insn . code -> nr_operands	1065:14:22854:22883	6364035	1	True				
ANR	6364048	RelationalExpression	i < dec_insn . code -> nr_operands		6364035	0		<			
ANR	6364049	Identifier	i		6364035	0					
ANR	6364050	PtrMemberAccess	dec_insn . code -> nr_operands		6364035	1					
ANR	6364051	MemberAccess	dec_insn . code		6364035	0					
ANR	6364052	Identifier	dec_insn		6364035	0					
ANR	6364053	Identifier	code		6364035	1					
ANR	6364054	Identifier	nr_operands		6364035	1					
ANR	6364055	UnaryExpression	++ i	1065:46:22886:22888	6364035	2	True				
ANR	6364056	IncDec	++		6364035	0					
ANR	6364057	Identifier	i		6364035	1					
ANR	6364058	CompoundStatement		4:51:62:62	6364035	3					
ANR	6364059	SwitchStatement	switch ( dec_insn . code -> fields [ i ] )		6364035	0					
ANR	6364060	Condition	dec_insn . code -> fields [ i ]	1066:11:22904:22927	6364035	0	True				
ANR	6364061	ArrayIndexing	dec_insn . code -> fields [ i ]		6364035	0					
ANR	6364062	PtrMemberAccess	dec_insn . code -> fields		6364035	0					
ANR	6364063	MemberAccess	dec_insn . code		6364035	0					
ANR	6364064	Identifier	dec_insn		6364035	0					
ANR	6364065	Identifier	code		6364035	1					
ANR	6364066	Identifier	fields		6364035	1					
ANR	6364067	Identifier	i		6364035	1					
ANR	6364068	CompoundStatement		5:37:101:101	6364035	1					
ANR	6364069	Label	case FMT_SSRO_OFF4 :	1067:3:22935:22953	6364035	0	True				
ANR	6364070	Identifier	FMT_SSRO_OFF4		6364035	0					
ANR	6364071	ExpressionStatement	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12	1068:4:22959:23010	6364035	1	True				
ANR	6364072	AssignmentExpression	dec_insn . cexp [ i ] = ( dec_insn . opcode & 0xf000 ) >> 12		6364035	0		=			
ANR	6364073	ArrayIndexing	dec_insn . cexp [ i ]		6364035	0					
ANR	6364074	MemberAccess	dec_insn . cexp		6364035	0					
ANR	6364075	Identifier	dec_insn		6364035	0					
ANR	6364076	Identifier	cexp		6364035	1					
ANR	6364077	Identifier	i		6364035	1					
ANR	6364078	ShiftExpression	( dec_insn . opcode & 0xf000 ) >> 12		6364035	1		>>			
ANR	6364079	BitAndExpression	dec_insn . opcode & 0xf000		6364035	0		&			
ANR	6364080	MemberAccess	dec_insn . opcode		6364035	0					
ANR	6364081	Identifier	dec_insn		6364035	0					
ANR	6364082	Identifier	opcode		6364035	1					
ANR	6364083	PrimaryExpression	0xf000		6364035	1					
ANR	6364084	PrimaryExpression	12		6364035	1					
ANR	6364085	BreakStatement	break ;	1069:4:23016:23021	6364035	2	True				
ANR	6364086	Label	case FMT_SSRO_S1 :	1071:3:23027:23043	6364035	3	True				
ANR	6364087	Identifier	FMT_SSRO_S1		6364035	0					
ANR	6364088	ExpressionStatement	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8	1072:4:23049:23099	6364035	4	True				
ANR	6364089	AssignmentExpression	dec_insn . regs [ i ] = ( dec_insn . opcode & 0x0f00 ) >> 8		6364035	0		=			
ANR	6364090	ArrayIndexing	dec_insn . regs [ i ]		6364035	0					
ANR	6364091	MemberAccess	dec_insn . regs		6364035	0					
ANR	6364092	Identifier	dec_insn		6364035	0					
ANR	6364093	Identifier	regs		6364035	1					
ANR	6364094	Identifier	i		6364035	1					
ANR	6364095	ShiftExpression	( dec_insn . opcode & 0x0f00 ) >> 8		6364035	1		>>			
ANR	6364096	BitAndExpression	dec_insn . opcode & 0x0f00		6364035	0		&			
ANR	6364097	MemberAccess	dec_insn . opcode		6364035	0					
ANR	6364098	Identifier	dec_insn		6364035	0					
ANR	6364099	Identifier	opcode		6364035	1					
ANR	6364100	PrimaryExpression	0x0f00		6364035	1					
ANR	6364101	PrimaryExpression	8		6364035	1					
ANR	6364102	BreakStatement	break ;	1073:4:23105:23110	6364035	5	True				
ANR	6364103	ReturnType	static void		6364035	1					
ANR	6364104	Identifier	decode_ssro		6364035	2					
ANR	6364105	ParameterList			6364035	3					
ANR	6364106	CFGEntryNode	ENTRY		6364035		True				
ANR	6364107	CFGExitNode	EXIT		6364035		True				
ANR	6364108	Symbol	dec_insn . code		6364035						
ANR	6364109	Symbol	dec_insn . code -> fields		6364035						
ANR	6364110	Symbol	* dec_insn . cexp		6364035						
ANR	6364111	Symbol	i		6364035						
ANR	6364112	Symbol	* dec_insn . code -> fields		6364035						
ANR	6364113	Symbol	dec_insn . cexp		6364035						
ANR	6364114	Symbol	* dec_insn		6364035						
ANR	6364115	Symbol	dec_insn . code -> nr_operands		6364035						
ANR	6364116	Symbol	* i		6364035						
ANR	6364117	Symbol	dec_insn . regs		6364035						
ANR	6364118	Symbol	* * dec_insn		6364035						
ANR	6364119	Symbol	* dec_insn . code		6364035						
ANR	6364120	Symbol	dec_insn . opcode		6364035						
ANR	6364121	Symbol	dec_insn		6364035						
ANR	6364122	Symbol	* * dec_insn . code		6364035						
ANR	6364123	Symbol	* dec_insn . regs		6364035						
ANR	6364124	Function	init_hash_tables	1080:0:23186:24673							
ANR	6364125	FunctionDef	init_hash_tables ()		6364124	0					
ANR	6364126	CompoundStatement		1082:0:23218:24673	6364124	0					
ANR	6364127	IdentifierDeclStatement	opcode_t * pop ;	1083:2:23222:23235	6364124	0	True				
ANR	6364128	IdentifierDecl	* pop		6364124	0					
ANR	6364129	IdentifierDeclType	opcode_t *		6364124	0					
ANR	6364130	Identifier	pop		6364124	1					
ANR	6364131	IdentifierDeclStatement	pcp_opcode_t * ppop ;	1084:2:23239:23257	6364124	1	True				
ANR	6364132	IdentifierDecl	* ppop		6364124	0					
ANR	6364133	IdentifierDeclType	pcp_opcode_t *		6364124	0					
ANR	6364134	Identifier	ppop		6364124	1					
ANR	6364135	IdentifierDeclStatement	sfr_t * psfr ;	1085:2:23261:23272	6364124	2	True				
ANR	6364136	IdentifierDecl	* psfr		6364124	0					
ANR	6364137	IdentifierDeclType	sfr_t *		6364124	0					
ANR	6364138	Identifier	psfr		6364124	1					
ANR	6364139	IdentifierDeclStatement	"int i , idx ;"	1086:2:23276:23286	6364124	3	True				
ANR	6364140	IdentifierDecl	i		6364124	0					
ANR	6364141	IdentifierDeclType	int		6364124	0					
ANR	6364142	Identifier	i		6364124	1					
ANR	6364143	IdentifierDecl	idx		6364124	1					
ANR	6364144	IdentifierDeclType	int		6364124	0					
ANR	6364145	Identifier	idx		6364124	1					
ANR	6364146	ExpressionStatement	insnlink = ( struct insnlist * ) xmalloc ( NUMOPCS * sizeof ( struct insnlist ) )	1088:2:23291:23366	6364124	4	True				
ANR	6364147	AssignmentExpression	insnlink = ( struct insnlist * ) xmalloc ( NUMOPCS * sizeof ( struct insnlist ) )		6364124	0		=			
ANR	6364148	Identifier	insnlink		6364124	0					
ANR	6364149	CastExpression	( struct insnlist * ) xmalloc ( NUMOPCS * sizeof ( struct insnlist ) )		6364124	1					
ANR	6364150	CastTarget	struct insnlist *		6364124	0					
ANR	6364151	CallExpression	xmalloc ( NUMOPCS * sizeof ( struct insnlist ) )		6364124	1					
ANR	6364152	Callee	xmalloc		6364124	0					
ANR	6364153	Identifier	xmalloc		6364124	0					
ANR	6364154	ArgumentList	NUMOPCS * sizeof ( struct insnlist )		6364124	1					
ANR	6364155	Argument	NUMOPCS * sizeof ( struct insnlist )		6364124	0					
ANR	6364156	MultiplicativeExpression	NUMOPCS * sizeof ( struct insnlist )		6364124	0		*			
ANR	6364157	Identifier	NUMOPCS		6364124	0					
ANR	6364158	SizeofExpression	sizeof ( struct insnlist )		6364124	1					
ANR	6364159	Sizeof	sizeof		6364124	0					
ANR	6364160	SizeofOperand	struct insnlist		6364124	1					
ANR	6364161	ExpressionStatement	pcplink = ( struct pcplist * ) xmalloc ( NUMPCPOPCS * sizeof ( struct pcplist ) )	1089:2:23370:23445	6364124	5	True				
ANR	6364162	AssignmentExpression	pcplink = ( struct pcplist * ) xmalloc ( NUMPCPOPCS * sizeof ( struct pcplist ) )		6364124	0		=			
ANR	6364163	Identifier	pcplink		6364124	0					
ANR	6364164	CastExpression	( struct pcplist * ) xmalloc ( NUMPCPOPCS * sizeof ( struct pcplist ) )		6364124	1					
ANR	6364165	CastTarget	struct pcplist *		6364124	0					
ANR	6364166	CallExpression	xmalloc ( NUMPCPOPCS * sizeof ( struct pcplist ) )		6364124	1					
ANR	6364167	Callee	xmalloc		6364124	0					
ANR	6364168	Identifier	xmalloc		6364124	0					
ANR	6364169	ArgumentList	NUMPCPOPCS * sizeof ( struct pcplist )		6364124	1					
ANR	6364170	Argument	NUMPCPOPCS * sizeof ( struct pcplist )		6364124	0					
ANR	6364171	MultiplicativeExpression	NUMPCPOPCS * sizeof ( struct pcplist )		6364124	0		*			
ANR	6364172	Identifier	NUMPCPOPCS		6364124	0					
ANR	6364173	SizeofExpression	sizeof ( struct pcplist )		6364124	1					
ANR	6364174	Sizeof	sizeof		6364124	0					
ANR	6364175	SizeofOperand	struct pcplist		6364124	1					
ANR	6364176	ExpressionStatement	sfrlink = ( struct sfrlist * ) xmalloc ( NUMSFRS * sizeof ( struct sfrlist ) )	1090:2:23449:23521	6364124	6	True				
ANR	6364177	AssignmentExpression	sfrlink = ( struct sfrlist * ) xmalloc ( NUMSFRS * sizeof ( struct sfrlist ) )		6364124	0		=			
ANR	6364178	Identifier	sfrlink		6364124	0					
ANR	6364179	CastExpression	( struct sfrlist * ) xmalloc ( NUMSFRS * sizeof ( struct sfrlist ) )		6364124	1					
ANR	6364180	CastTarget	struct sfrlist *		6364124	0					
ANR	6364181	CallExpression	xmalloc ( NUMSFRS * sizeof ( struct sfrlist ) )		6364124	1					
ANR	6364182	Callee	xmalloc		6364124	0					
ANR	6364183	Identifier	xmalloc		6364124	0					
ANR	6364184	ArgumentList	NUMSFRS * sizeof ( struct sfrlist )		6364124	1					
ANR	6364185	Argument	NUMSFRS * sizeof ( struct sfrlist )		6364124	0					
ANR	6364186	MultiplicativeExpression	NUMSFRS * sizeof ( struct sfrlist )		6364124	0		*			
ANR	6364187	Identifier	NUMSFRS		6364124	0					
ANR	6364188	SizeofExpression	sizeof ( struct sfrlist )		6364124	1					
ANR	6364189	Sizeof	sizeof		6364124	0					
ANR	6364190	SizeofOperand	struct sfrlist		6364124	1					
ANR	6364191	ExpressionStatement	"memset ( ( char * ) insns , 0 , sizeof ( insns ) )"	1091:2:23525:23567	6364124	7	True				
ANR	6364192	CallExpression	"memset ( ( char * ) insns , 0 , sizeof ( insns ) )"		6364124	0					
ANR	6364193	Callee	memset		6364124	0					
ANR	6364194	Identifier	memset		6364124	0					
ANR	6364195	ArgumentList	( char * ) insns		6364124	1					
ANR	6364196	Argument	( char * ) insns		6364124	0					
ANR	6364197	CastExpression	( char * ) insns		6364124	0					
ANR	6364198	CastTarget	char *		6364124	0					
ANR	6364199	Identifier	insns		6364124	1					
ANR	6364200	Argument	0		6364124	1					
ANR	6364201	PrimaryExpression	0		6364124	0					
ANR	6364202	Argument	sizeof ( insns )		6364124	2					
ANR	6364203	SizeofExpression	sizeof ( insns )		6364124	0					
ANR	6364204	Sizeof	sizeof		6364124	0					
ANR	6364205	SizeofOperand	insns		6364124	1					
ANR	6364206	ExpressionStatement	"memset ( ( char * ) insnlink , 0 , NUMOPCS * sizeof ( struct insnlist ) )"	1092:2:23571:23636	6364124	8	True				
ANR	6364207	CallExpression	"memset ( ( char * ) insnlink , 0 , NUMOPCS * sizeof ( struct insnlist ) )"		6364124	0					
ANR	6364208	Callee	memset		6364124	0					
ANR	6364209	Identifier	memset		6364124	0					
ANR	6364210	ArgumentList	( char * ) insnlink		6364124	1					
ANR	6364211	Argument	( char * ) insnlink		6364124	0					
ANR	6364212	CastExpression	( char * ) insnlink		6364124	0					
ANR	6364213	CastTarget	char *		6364124	0					
ANR	6364214	Identifier	insnlink		6364124	1					
ANR	6364215	Argument	0		6364124	1					
ANR	6364216	PrimaryExpression	0		6364124	0					
ANR	6364217	Argument	NUMOPCS * sizeof ( struct insnlist )		6364124	2					
ANR	6364218	MultiplicativeExpression	NUMOPCS * sizeof ( struct insnlist )		6364124	0		*			
ANR	6364219	Identifier	NUMOPCS		6364124	0					
ANR	6364220	SizeofExpression	sizeof ( struct insnlist )		6364124	1					
ANR	6364221	Sizeof	sizeof		6364124	0					
ANR	6364222	SizeofOperand	struct insnlist		6364124	1					
ANR	6364223	ExpressionStatement	"memset ( ( char * ) pcpinsns , 0 , sizeof ( pcpinsns ) )"	1093:2:23640:23688	6364124	9	True				
ANR	6364224	CallExpression	"memset ( ( char * ) pcpinsns , 0 , sizeof ( pcpinsns ) )"		6364124	0					
ANR	6364225	Callee	memset		6364124	0					
ANR	6364226	Identifier	memset		6364124	0					
ANR	6364227	ArgumentList	( char * ) pcpinsns		6364124	1					
ANR	6364228	Argument	( char * ) pcpinsns		6364124	0					
ANR	6364229	CastExpression	( char * ) pcpinsns		6364124	0					
ANR	6364230	CastTarget	char *		6364124	0					
ANR	6364231	Identifier	pcpinsns		6364124	1					
ANR	6364232	Argument	0		6364124	1					
ANR	6364233	PrimaryExpression	0		6364124	0					
ANR	6364234	Argument	sizeof ( pcpinsns )		6364124	2					
ANR	6364235	SizeofExpression	sizeof ( pcpinsns )		6364124	0					
ANR	6364236	Sizeof	sizeof		6364124	0					
ANR	6364237	SizeofOperand	pcpinsns		6364124	1					
ANR	6364238	ExpressionStatement	"memset ( ( char * ) pcplink , 0 , NUMPCPOPCS * sizeof ( struct pcplist ) )"	1094:2:23692:23758	6364124	10	True				
ANR	6364239	CallExpression	"memset ( ( char * ) pcplink , 0 , NUMPCPOPCS * sizeof ( struct pcplist ) )"		6364124	0					
ANR	6364240	Callee	memset		6364124	0					
ANR	6364241	Identifier	memset		6364124	0					
ANR	6364242	ArgumentList	( char * ) pcplink		6364124	1					
ANR	6364243	Argument	( char * ) pcplink		6364124	0					
ANR	6364244	CastExpression	( char * ) pcplink		6364124	0					
ANR	6364245	CastTarget	char *		6364124	0					
ANR	6364246	Identifier	pcplink		6364124	1					
ANR	6364247	Argument	0		6364124	1					
ANR	6364248	PrimaryExpression	0		6364124	0					
ANR	6364249	Argument	NUMPCPOPCS * sizeof ( struct pcplist )		6364124	2					
ANR	6364250	MultiplicativeExpression	NUMPCPOPCS * sizeof ( struct pcplist )		6364124	0		*			
ANR	6364251	Identifier	NUMPCPOPCS		6364124	0					
ANR	6364252	SizeofExpression	sizeof ( struct pcplist )		6364124	1					
ANR	6364253	Sizeof	sizeof		6364124	0					
ANR	6364254	SizeofOperand	struct pcplist		6364124	1					
ANR	6364255	ExpressionStatement	"memset ( ( char * ) sfrs , 0 , sizeof ( sfrs ) )"	1095:2:23762:23802	6364124	11	True				
ANR	6364256	CallExpression	"memset ( ( char * ) sfrs , 0 , sizeof ( sfrs ) )"		6364124	0					
ANR	6364257	Callee	memset		6364124	0					
ANR	6364258	Identifier	memset		6364124	0					
ANR	6364259	ArgumentList	( char * ) sfrs		6364124	1					
ANR	6364260	Argument	( char * ) sfrs		6364124	0					
ANR	6364261	CastExpression	( char * ) sfrs		6364124	0					
ANR	6364262	CastTarget	char *		6364124	0					
ANR	6364263	Identifier	sfrs		6364124	1					
ANR	6364264	Argument	0		6364124	1					
ANR	6364265	PrimaryExpression	0		6364124	0					
ANR	6364266	Argument	sizeof ( sfrs )		6364124	2					
ANR	6364267	SizeofExpression	sizeof ( sfrs )		6364124	0					
ANR	6364268	Sizeof	sizeof		6364124	0					
ANR	6364269	SizeofOperand	sfrs		6364124	1					
ANR	6364270	ExpressionStatement	"memset ( ( char * ) sfrlink , 0 , NUMSFRS * sizeof ( struct sfrlist ) )"	1096:2:23806:23869	6364124	12	True				
ANR	6364271	CallExpression	"memset ( ( char * ) sfrlink , 0 , NUMSFRS * sizeof ( struct sfrlist ) )"		6364124	0					
ANR	6364272	Callee	memset		6364124	0					
ANR	6364273	Identifier	memset		6364124	0					
ANR	6364274	ArgumentList	( char * ) sfrlink		6364124	1					
ANR	6364275	Argument	( char * ) sfrlink		6364124	0					
ANR	6364276	CastExpression	( char * ) sfrlink		6364124	0					
ANR	6364277	CastTarget	char *		6364124	0					
ANR	6364278	Identifier	sfrlink		6364124	1					
ANR	6364279	Argument	0		6364124	1					
ANR	6364280	PrimaryExpression	0		6364124	0					
ANR	6364281	Argument	NUMSFRS * sizeof ( struct sfrlist )		6364124	2					
ANR	6364282	MultiplicativeExpression	NUMSFRS * sizeof ( struct sfrlist )		6364124	0		*			
ANR	6364283	Identifier	NUMSFRS		6364124	0					
ANR	6364284	SizeofExpression	sizeof ( struct sfrlist )		6364124	1					
ANR	6364285	Sizeof	sizeof		6364124	0					
ANR	6364286	SizeofOperand	struct sfrlist		6364124	1					
ANR	6364287	ForStatement	"for ( i = 0 , pop = tricore_opcodes ; i < NUMOPCS ; ++ i , ++ pop )"		6364124	13					
ANR	6364288	ForInit	"i = 0 , pop = tricore_opcodes ;"	1098:7:23879:23907	6364124	0	True				
ANR	6364289	Expression	"i = 0 , pop = tricore_opcodes"		6364124	0					
ANR	6364290	AssignmentExpression	i = 0		6364124	0		=			
ANR	6364291	Identifier	i		6364124	0					
ANR	6364292	PrimaryExpression	0		6364124	1					
ANR	6364293	AssignmentExpression	pop = tricore_opcodes		6364124	1		=			
ANR	6364294	Identifier	pop		6364124	0					
ANR	6364295	Identifier	tricore_opcodes		6364124	1					
ANR	6364296	Condition	i < NUMOPCS	1098:37:23909:23919	6364124	1	True				
ANR	6364297	RelationalExpression	i < NUMOPCS		6364124	0		<			
ANR	6364298	Identifier	i		6364124	0					
ANR	6364299	Identifier	NUMOPCS		6364124	1					
ANR	6364300	Expression	"++ i , ++ pop"	1098:50:23922:23931	6364124	2	True				
ANR	6364301	UnaryExpression	++ i		6364124	0					
ANR	6364302	IncDec	++		6364124	0					
ANR	6364303	Identifier	i		6364124	1					
ANR	6364304	UnaryExpression	++ pop		6364124	1					
ANR	6364305	IncDec	++		6364124	0					
ANR	6364306	Identifier	pop		6364124	1					
ANR	6364307	CompoundStatement		18:4:719:719	6364124	3					
ANR	6364308	IfStatement	if ( ! MATCHES_ISA ( pop -> isa ) )		6364124	0					
ANR	6364309	Condition	! MATCHES_ISA ( pop -> isa )	1100:7:23947:23969	6364124	0	True				
ANR	6364310	UnaryOperationExpression	! MATCHES_ISA ( pop -> isa )		6364124	0					
ANR	6364311	UnaryOperator	!		6364124	0					
ANR	6364312	CallExpression	MATCHES_ISA ( pop -> isa )		6364124	1					
ANR	6364313	Callee	MATCHES_ISA		6364124	0					
ANR	6364314	Identifier	MATCHES_ISA		6364124	0					
ANR	6364315	ArgumentList	pop -> isa		6364124	1					
ANR	6364316	Argument	pop -> isa		6364124	0					
ANR	6364317	PtrMemberAccess	pop -> isa		6364124	0					
ANR	6364318	Identifier	pop		6364124	0					
ANR	6364319	Identifier	isa		6364124	1					
ANR	6364320	CompoundStatement		19:32:753:753	6364124	1					
ANR	6364321	ContinueStatement	continue ;	1101:4:23978:23986	6364124	0	True				
ANR	6364322	ExpressionStatement	idx = pop -> opcode & 0x3f	1104:3:23997:24021	6364124	1	True				
ANR	6364323	AssignmentExpression	idx = pop -> opcode & 0x3f		6364124	0		=			
ANR	6364324	Identifier	idx		6364124	0					
ANR	6364325	BitAndExpression	pop -> opcode & 0x3f		6364124	1		&			
ANR	6364326	PtrMemberAccess	pop -> opcode		6364124	0					
ANR	6364327	Identifier	pop		6364124	0					
ANR	6364328	Identifier	opcode		6364124	1					
ANR	6364329	PrimaryExpression	0x3f		6364124	1					
ANR	6364330	IfStatement	if ( insns [ idx ] )		6364124	2					
ANR	6364331	Condition	insns [ idx ]	1105:7:24030:24039	6364124	0	True				
ANR	6364332	ArrayIndexing	insns [ idx ]		6364124	0					
ANR	6364333	Identifier	insns		6364124	0					
ANR	6364334	Identifier	idx		6364124	1					
ANR	6364335	CompoundStatement		24:19:823:823	6364124	1					
ANR	6364336	ExpressionStatement	insnlink [ i ] . next = insns [ idx ]	1106:4:24048:24077	6364124	0	True				
ANR	6364337	AssignmentExpression	insnlink [ i ] . next = insns [ idx ]		6364124	0		=			
ANR	6364338	MemberAccess	insnlink [ i ] . next		6364124	0					
ANR	6364339	ArrayIndexing	insnlink [ i ]		6364124	0					
ANR	6364340	Identifier	insnlink		6364124	0					
ANR	6364341	Identifier	i		6364124	1					
ANR	6364342	Identifier	next		6364124	1					
ANR	6364343	ArrayIndexing	insns [ idx ]		6364124	1					
ANR	6364344	Identifier	insns		6364124	0					
ANR	6364345	Identifier	idx		6364124	1					
ANR	6364346	ExpressionStatement	insns [ idx ] = & insnlink [ i ]	1108:3:24087:24112	6364124	3	True				
ANR	6364347	AssignmentExpression	insns [ idx ] = & insnlink [ i ]		6364124	0		=			
ANR	6364348	ArrayIndexing	insns [ idx ]		6364124	0					
ANR	6364349	Identifier	insns		6364124	0					
ANR	6364350	Identifier	idx		6364124	1					
ANR	6364351	UnaryOperationExpression	& insnlink [ i ]		6364124	1					
ANR	6364352	UnaryOperator	&		6364124	0					
ANR	6364353	ArrayIndexing	insnlink [ i ]		6364124	1					
ANR	6364354	Identifier	insnlink		6364124	0					
ANR	6364355	Identifier	i		6364124	1					
ANR	6364356	ExpressionStatement	insnlink [ i ] . code = pop	1109:3:24117:24139	6364124	4	True				
ANR	6364357	AssignmentExpression	insnlink [ i ] . code = pop		6364124	0		=			
ANR	6364358	MemberAccess	insnlink [ i ] . code		6364124	0					
ANR	6364359	ArrayIndexing	insnlink [ i ]		6364124	0					
ANR	6364360	Identifier	insnlink		6364124	0					
ANR	6364361	Identifier	i		6364124	1					
ANR	6364362	Identifier	code		6364124	1					
ANR	6364363	Identifier	pop		6364124	1					
ANR	6364364	ForStatement	"for ( i = 0 , ppop = pcp_opcodes ; i < NUMPCPOPCS ; ++ i , ++ ppop )"		6364124	14					
ANR	6364365	ForInit	"i = 0 , ppop = pcp_opcodes ;"	1112:7:24155:24180	6364124	0	True				
ANR	6364366	Expression	"i = 0 , ppop = pcp_opcodes"		6364124	0					
ANR	6364367	AssignmentExpression	i = 0		6364124	0		=			
ANR	6364368	Identifier	i		6364124	0					
ANR	6364369	PrimaryExpression	0		6364124	1					
ANR	6364370	AssignmentExpression	ppop = pcp_opcodes		6364124	1		=			
ANR	6364371	Identifier	ppop		6364124	0					
ANR	6364372	Identifier	pcp_opcodes		6364124	1					
ANR	6364373	Condition	i < NUMPCPOPCS	1112:34:24182:24195	6364124	1	True				
ANR	6364374	RelationalExpression	i < NUMPCPOPCS		6364124	0		<			
ANR	6364375	Identifier	i		6364124	0					
ANR	6364376	Identifier	NUMPCPOPCS		6364124	1					
ANR	6364377	Expression	"++ i , ++ ppop"	1112:50:24198:24208	6364124	2	True				
ANR	6364378	UnaryExpression	++ i		6364124	0					
ANR	6364379	IncDec	++		6364124	0					
ANR	6364380	Identifier	i		6364124	1					
ANR	6364381	UnaryExpression	++ ppop		6364124	1					
ANR	6364382	IncDec	++		6364124	0					
ANR	6364383	Identifier	ppop		6364124	1					
ANR	6364384	CompoundStatement		32:4:996:996	6364124	3					
ANR	6364385	ExpressionStatement	idx = ( ppop -> opcode >> 11 ) & 0x1f	1114:6:24223:24256	6364124	0	True				
ANR	6364386	AssignmentExpression	idx = ( ppop -> opcode >> 11 ) & 0x1f		6364124	0		=			
ANR	6364387	Identifier	idx		6364124	0					
ANR	6364388	BitAndExpression	( ppop -> opcode >> 11 ) & 0x1f		6364124	1		&			
ANR	6364389	ShiftExpression	ppop -> opcode >> 11		6364124	0		>>			
ANR	6364390	PtrMemberAccess	ppop -> opcode		6364124	0					
ANR	6364391	Identifier	ppop		6364124	0					
ANR	6364392	Identifier	opcode		6364124	1					
ANR	6364393	PrimaryExpression	11		6364124	1					
ANR	6364394	PrimaryExpression	0x1f		6364124	1					
ANR	6364395	IfStatement	if ( pcpinsns [ idx ] )		6364124	1					
ANR	6364396	Condition	pcpinsns [ idx ]	1115:10:24268:24280	6364124	0	True				
ANR	6364397	ArrayIndexing	pcpinsns [ idx ]		6364124	0					
ANR	6364398	Identifier	pcpinsns		6364124	0					
ANR	6364399	Identifier	idx		6364124	1					
ANR	6364400	CompoundStatement		34:25:1064:1064	6364124	1					
ANR	6364401	ExpressionStatement	pcplink [ i ] . next = pcpinsns [ idx ]	1116:7:24292:24323	6364124	0	True				
ANR	6364402	AssignmentExpression	pcplink [ i ] . next = pcpinsns [ idx ]		6364124	0		=			
ANR	6364403	MemberAccess	pcplink [ i ] . next		6364124	0					
ANR	6364404	ArrayIndexing	pcplink [ i ]		6364124	0					
ANR	6364405	Identifier	pcplink		6364124	0					
ANR	6364406	Identifier	i		6364124	1					
ANR	6364407	Identifier	next		6364124	1					
ANR	6364408	ArrayIndexing	pcpinsns [ idx ]		6364124	1					
ANR	6364409	Identifier	pcpinsns		6364124	0					
ANR	6364410	Identifier	idx		6364124	1					
ANR	6364411	ExpressionStatement	pcpinsns [ idx ] = & pcplink [ i ]	1118:6:24339:24366	6364124	2	True				
ANR	6364412	AssignmentExpression	pcpinsns [ idx ] = & pcplink [ i ]		6364124	0		=			
ANR	6364413	ArrayIndexing	pcpinsns [ idx ]		6364124	0					
ANR	6364414	Identifier	pcpinsns		6364124	0					
ANR	6364415	Identifier	idx		6364124	1					
ANR	6364416	UnaryOperationExpression	& pcplink [ i ]		6364124	1					
ANR	6364417	UnaryOperator	&		6364124	0					
ANR	6364418	ArrayIndexing	pcplink [ i ]		6364124	1					
ANR	6364419	Identifier	pcplink		6364124	0					
ANR	6364420	Identifier	i		6364124	1					
ANR	6364421	ExpressionStatement	pcplink [ i ] . code = ppop	1119:6:24374:24396	6364124	3	True				
ANR	6364422	AssignmentExpression	pcplink [ i ] . code = ppop		6364124	0		=			
ANR	6364423	MemberAccess	pcplink [ i ] . code		6364124	0					
ANR	6364424	ArrayIndexing	pcplink [ i ]		6364124	0					
ANR	6364425	Identifier	pcplink		6364124	0					
ANR	6364426	Identifier	i		6364124	1					
ANR	6364427	Identifier	code		6364124	1					
ANR	6364428	Identifier	ppop		6364124	1					
ANR	6364429	ForStatement	"for ( i = 0 , psfr = tricore_sfrs ; i < NUMSFRS ; ++ i , ++ psfr )"		6364124	15					
ANR	6364430	ForInit	"i = 0 , psfr = tricore_sfrs ;"	1122:7:24412:24438	6364124	0	True				
ANR	6364431	Expression	"i = 0 , psfr = tricore_sfrs"		6364124	0					
ANR	6364432	AssignmentExpression	i = 0		6364124	0		=			
ANR	6364433	Identifier	i		6364124	0					
ANR	6364434	PrimaryExpression	0		6364124	1					
ANR	6364435	AssignmentExpression	psfr = tricore_sfrs		6364124	1		=			
ANR	6364436	Identifier	psfr		6364124	0					
ANR	6364437	Identifier	tricore_sfrs		6364124	1					
ANR	6364438	Condition	i < NUMSFRS	1122:35:24440:24450	6364124	1	True				
ANR	6364439	RelationalExpression	i < NUMSFRS		6364124	0		<			
ANR	6364440	Identifier	i		6364124	0					
ANR	6364441	Identifier	NUMSFRS		6364124	1					
ANR	6364442	Expression	"++ i , ++ psfr"	1122:48:24453:24463	6364124	2	True				
ANR	6364443	UnaryExpression	++ i		6364124	0					
ANR	6364444	IncDec	++		6364124	0					
ANR	6364445	Identifier	i		6364124	1					
ANR	6364446	UnaryExpression	++ psfr		6364124	1					
ANR	6364447	IncDec	++		6364124	0					
ANR	6364448	Identifier	psfr		6364124	1					
ANR	6364449	CompoundStatement		42:4:1251:1251	6364124	3					
ANR	6364450	IfStatement	if ( ! MATCHES_ISA ( psfr -> isa ) )		6364124	0					
ANR	6364451	Condition	! MATCHES_ISA ( psfr -> isa )	1124:7:24479:24502	6364124	0	True				
ANR	6364452	UnaryOperationExpression	! MATCHES_ISA ( psfr -> isa )		6364124	0					
ANR	6364453	UnaryOperator	!		6364124	0					
ANR	6364454	CallExpression	MATCHES_ISA ( psfr -> isa )		6364124	1					
ANR	6364455	Callee	MATCHES_ISA		6364124	0					
ANR	6364456	Identifier	MATCHES_ISA		6364124	0					
ANR	6364457	ArgumentList	psfr -> isa		6364124	1					
ANR	6364458	Argument	psfr -> isa		6364124	0					
ANR	6364459	PtrMemberAccess	psfr -> isa		6364124	0					
ANR	6364460	Identifier	psfr		6364124	0					
ANR	6364461	Identifier	isa		6364124	1					
ANR	6364462	CompoundStatement		43:33:1286:1286	6364124	1					
ANR	6364463	ContinueStatement	continue ;	1125:4:24511:24519	6364124	0	True				
ANR	6364464	ExpressionStatement	idx = psfr -> addr & 0xff	1128:3:24530:24553	6364124	1	True				
ANR	6364465	AssignmentExpression	idx = psfr -> addr & 0xff		6364124	0		=			
ANR	6364466	Identifier	idx		6364124	0					
ANR	6364467	BitAndExpression	psfr -> addr & 0xff		6364124	1		&			
ANR	6364468	PtrMemberAccess	psfr -> addr		6364124	0					
ANR	6364469	Identifier	psfr		6364124	0					
ANR	6364470	Identifier	addr		6364124	1					
ANR	6364471	PrimaryExpression	0xff		6364124	1					
ANR	6364472	IfStatement	if ( sfrs [ idx ] )		6364124	2					
ANR	6364473	Condition	sfrs [ idx ]	1129:7:24562:24570	6364124	0	True				
ANR	6364474	ArrayIndexing	sfrs [ idx ]		6364124	0					
ANR	6364475	Identifier	sfrs		6364124	0					
ANR	6364476	Identifier	idx		6364124	1					
ANR	6364477	CompoundStatement		48:18:1354:1354	6364124	1					
ANR	6364478	ExpressionStatement	sfrlink [ i ] . next = sfrs [ idx ]	1130:4:24579:24606	6364124	0	True				
ANR	6364479	AssignmentExpression	sfrlink [ i ] . next = sfrs [ idx ]		6364124	0		=			
ANR	6364480	MemberAccess	sfrlink [ i ] . next		6364124	0					
ANR	6364481	ArrayIndexing	sfrlink [ i ]		6364124	0					
ANR	6364482	Identifier	sfrlink		6364124	0					
ANR	6364483	Identifier	i		6364124	1					
ANR	6364484	Identifier	next		6364124	1					
ANR	6364485	ArrayIndexing	sfrs [ idx ]		6364124	1					
ANR	6364486	Identifier	sfrs		6364124	0					
ANR	6364487	Identifier	idx		6364124	1					
ANR	6364488	ExpressionStatement	sfrs [ idx ] = & sfrlink [ i ]	1132:3:24616:24639	6364124	3	True				
ANR	6364489	AssignmentExpression	sfrs [ idx ] = & sfrlink [ i ]		6364124	0		=			
ANR	6364490	ArrayIndexing	sfrs [ idx ]		6364124	0					
ANR	6364491	Identifier	sfrs		6364124	0					
ANR	6364492	Identifier	idx		6364124	1					
ANR	6364493	UnaryOperationExpression	& sfrlink [ i ]		6364124	1					
ANR	6364494	UnaryOperator	&		6364124	0					
ANR	6364495	ArrayIndexing	sfrlink [ i ]		6364124	1					
ANR	6364496	Identifier	sfrlink		6364124	0					
ANR	6364497	Identifier	i		6364124	1					
ANR	6364498	ExpressionStatement	sfrlink [ i ] . sfr = psfr	1133:3:24644:24665	6364124	4	True				
ANR	6364499	AssignmentExpression	sfrlink [ i ] . sfr = psfr		6364124	0		=			
ANR	6364500	MemberAccess	sfrlink [ i ] . sfr		6364124	0					
ANR	6364501	ArrayIndexing	sfrlink [ i ]		6364124	0					
ANR	6364502	Identifier	sfrlink		6364124	0					
ANR	6364503	Identifier	i		6364124	1					
ANR	6364504	Identifier	sfr		6364124	1					
ANR	6364505	Identifier	psfr		6364124	1					
ANR	6364506	ReturnType	static void		6364124	1					
ANR	6364507	Identifier	init_hash_tables		6364124	2					
ANR	6364508	ParameterList			6364124	3					
ANR	6364509	CFGEntryNode	ENTRY		6364124		True				
ANR	6364510	CFGExitNode	EXIT		6364124		True				
ANR	6364511	Symbol	sfrlink [ i ] . sfr		6364124						
ANR	6364512	Symbol	* pcplink		6364124						
ANR	6364513	Symbol	insns		6364124						
ANR	6364514	Symbol	sfrlink		6364124						
ANR	6364515	Symbol	pcp_opcodes		6364124						
ANR	6364516	Symbol	NUMPCPOPCS		6364124						
ANR	6364517	Symbol	pop		6364124						
ANR	6364518	Symbol	pcpinsns		6364124						
ANR	6364519	Symbol	* sfrlink		6364124						
ANR	6364520	Symbol	pcplink		6364124						
ANR	6364521	Symbol	* insnlink		6364124						
ANR	6364522	Symbol	sfrlink [ i ] . next		6364124						
ANR	6364523	Symbol	ppop		6364124						
ANR	6364524	Symbol	xmalloc		6364124						
ANR	6364525	Symbol	tricore_opcodes		6364124						
ANR	6364526	Symbol	* idx		6364124						
ANR	6364527	Symbol	psfr -> isa		6364124						
ANR	6364528	Symbol	sfrs		6364124						
ANR	6364529	Symbol	* insns		6364124						
ANR	6364530	Symbol	NUMOPCS		6364124						
ANR	6364531	Symbol	insnlink [ i ] . code		6364124						
ANR	6364532	Symbol	psfr -> addr		6364124						
ANR	6364533	Symbol	MATCHES_ISA		6364124						
ANR	6364534	Symbol	insnlink [ i ] . next		6364124						
ANR	6364535	Symbol	ppop -> opcode		6364124						
ANR	6364536	Symbol	* psfr		6364124						
ANR	6364537	Symbol	i		6364124						
ANR	6364538	Symbol	pop -> isa		6364124						
ANR	6364539	Symbol	pcplink [ i ] . code		6364124						
ANR	6364540	Symbol	* pcpinsns		6364124						
ANR	6364541	Symbol	* sfrs		6364124						
ANR	6364542	Symbol	NUMSFRS		6364124						
ANR	6364543	Symbol	* i		6364124						
ANR	6364544	Symbol	* ppop		6364124						
ANR	6364545	Symbol	tricore_sfrs		6364124						
ANR	6364546	Symbol	psfr		6364124						
ANR	6364547	Symbol	* pop		6364124						
ANR	6364548	Symbol	idx		6364124						
ANR	6364549	Symbol	insnlink		6364124						
ANR	6364550	Symbol	pcplink [ i ] . next		6364124						
ANR	6364551	Symbol	pop -> opcode		6364124						
ANR	6364552	DeclStmt									
ANR	6364553	Decl							unsigned long	unsigned long	addr
ANR	6364554	DeclStmt									
ANR	6364555	Decl							struct sfrlist	struct sfrlist *	psfr
ANR	6364556	DeclStmt									
ANR	6364557	Decl							int	int	idx
ANR	6364558	DeclStmt									
ANR	6364559	Decl							bfd_vma	bfd_vma	memaddr
ANR	6364560	DeclStmt									
ANR	6364561	Decl							struct disassemble_info	struct disassemble_info *	info
ANR	6364562	DeclStmt									
ANR	6364563	Decl							opcode_t	opcode_t *	insn
ANR	6364564	DeclStmt									
ANR	6364565	Decl							int	int	i
ANR	6364566	Decl							int	int	needs_creg
ANR	6364567	Decl							int	int	need_comma
ANR	6364568	DeclStmt									
ANR	6364569	Decl							const char	const char *	creg
ANR	6364570	DeclStmt									
ANR	6364571	Decl							bfd_vma	bfd_vma	abs
ANR	6364572	DeclStmt									
ANR	6364573	Decl							bfd_vma	bfd_vma	next_addr
ANR	6364574	DeclStmt									
ANR	6364575	Decl							bool	bool	expect_lea
ANR	6364576	DeclStmt									
ANR	6364577	Decl							int	int [ NO_AREG ]	load_areg
ANR	6364578	DeclStmt									
ANR	6364579	Decl							unsigned long	unsigned long [ NO_AREG ]	load_hi_addr
ANR	6364580	DeclStmt									
ANR	6364581	Decl							unsigned long	unsigned long	load_addr
ANR	6364582	DeclStmt									
ANR	6364583	Decl							bool	bool	print_symbolic_address
ANR	6364584	DeclStmt									
ANR	6364585	Decl							int	int	i
ANR	6364586	DeclStmt									
ANR	6364587	Decl							int	int	i
ANR	6364588	DeclStmt									
ANR	6364589	Decl							bfd_vma	bfd_vma	memaddr
ANR	6364590	DeclStmt									
ANR	6364591	Decl							unsigned long	unsigned long	insn
ANR	6364592	DeclStmt									
ANR	6364593	Decl							int	int	len32
ANR	6364594	DeclStmt									
ANR	6364595	Decl							struct disassemble_info	struct disassemble_info *	info
ANR	6364596	DeclStmt									
ANR	6364597	Decl							int	int	idx
ANR	6364598	DeclStmt									
ANR	6364599	Decl							struct insnlist	struct insnlist *	pinsn
ANR	6364600	DeclStmt									
ANR	6364601	Decl							unsigned long	unsigned long	mask
ANR	6364602	DeclStmt									
ANR	6364603	Decl							tricore_fmt	tricore_fmt	fmt
ANR	6364604	DeclStmt									
ANR	6364605	Decl							bfd_vma	bfd_vma	memaddr
ANR	6364606	DeclStmt									
ANR	6364607	Decl							bfd_byte	bfd_byte [ 4 ]	buffer
ANR	6364608	DeclStmt									
ANR	6364609	Decl							struct disassemble_info	struct disassemble_info *	info
ANR	6364610	DeclStmt									
ANR	6364611	Decl							unsigned long	unsigned long	insn
ANR	6364612	Decl							unsigned long	unsigned long	insn2
ANR	6364613	Decl							unsigned long	unsigned long	val
ANR	6364614	DeclStmt									
ANR	6364615	Decl							int	int	idx
ANR	6364616	Decl							int	int	fail
ANR	6364617	Decl							int	int	rb
ANR	6364618	Decl							int	int	ra
ANR	6364619	DeclStmt									
ANR	6364620	Decl							struct pcplist	struct pcplist *	pinsn
ANR	6364621	DeclStmt									
ANR	6364622	Decl							pcp_opcode_t	pcp_opcode_t *	pop
ANR	6364623	DeclStmt									
ANR	6364624	Decl							const char	const char * [ ]	pcp_ccodes
ANR	6364625	DeclStmt									
ANR	6364626	Decl							stream	stream	insn
ANR	6364627	DeclStmt									
ANR	6364628	Decl							bfd_vma	bfd_vma	memaddr
ANR	6364629	DeclStmt									
ANR	6364630	Decl							struct disassemble_info	struct disassemble_info *	info
ANR	6364631	DeclStmt									
ANR	6364632	Decl							bfd_byte	bfd_byte [ 4 ]	buffer
ANR	6364633	DeclStmt									
ANR	6364634	Decl							int	int	len32
ANR	6364635	Decl							int	int	failure
ANR	6364636	DeclStmt									
ANR	6364637	Decl							unsigned long	unsigned long	insn
