command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	782094	File	data/converged/CVE-2019-16718~_radare2/cmd.c								
ANR	782095	DeclStmt									
ANR	782096	Decl							R_API void	"R_API void ( RCore * core , const char * _name )"	r_save_panels_layout
ANR	782097	DeclStmt									
ANR	782098	Decl							R_API void	"R_API void ( RCore * core , const char * _name )"	r_load_panels_layout
ANR	782099	DeclStmt									
ANR	782100	Decl							RCmdDescriptor	RCmdDescriptor *	d
ANR	782101	DeclStmt									
ANR	782102	Decl							help_msg_	help_msg_	cmd_
ANR	782103	DeclStmt									
ANR	782104	Decl							RCmdDescriptor	RCmdDescriptor *	d
ANR	782105	DeclStmt									
ANR	782106	Decl							help_msg_	help_msg_	cmd_
ANR	782107	DeclStmt									
ANR	782108	Decl							help_detail_	help_detail_	cmd_
ANR	782109	DeclStmt									
ANR	782110	Decl							RCmdDescriptor	RCmdDescriptor *	d
ANR	782111	DeclStmt									
ANR	782112	Decl							help_msg_	help_msg_	cmd_
ANR	782113	DeclStmt									
ANR	782114	Decl							help_detail_	help_detail_	cmd_
ANR	782115	DeclStmt									
ANR	782116	Decl							help_detail2_	help_detail2_	cmd_
ANR	782117	DeclStmt									
ANR	782118	Decl							RCmdDescriptor	RCmdDescriptor *	d
ANR	782119	DeclStmt									
ANR	782120	Decl							help_msg_	help_msg_	named_cmd
ANR	782121	DeclStmt									
ANR	782122	Decl							int	"int ( RCore * core , char * cmd , char * colon , bool * tmpseek )"	r_core_cmd_subst_i
ANR	782123	DeclStmt									
ANR	782124	Decl							void	"void ( RCore * core , const char * str )"	cmd_debug_reg
ANR	782125	DeclStmt									
ANR	782126	Decl							const char	const char * [ ]	help_msg_dollar
ANR	782127	DeclStmt									
ANR	782128	Decl							const char	const char * [ ]	help_msg_star
ANR	782129	DeclStmt									
ANR	782130	Decl							const char	const char * [ ]	help_msg_dot
ANR	782131	DeclStmt									
ANR	782132	Decl							const char	const char * [ ]	help_msg_equal
ANR	782133	DeclStmt									
ANR	782134	Decl							const char	const char * [ ]	help_msg_equalh
ANR	782135	DeclStmt									
ANR	782136	Decl							const char	const char * [ ]	help_msg_equalh
ANR	782137	DeclStmt									
ANR	782138	Decl							const char	const char * [ ]	help_msg_equalg
ANR	782139	DeclStmt									
ANR	782140	Decl							const char	const char * [ ]	help_msg_b
ANR	782141	DeclStmt									
ANR	782142	Decl							const char	const char * [ ]	help_msg_k
ANR	782143	DeclStmt									
ANR	782144	Decl							const char	const char * [ ]	help_msg_r
ANR	782145	DeclStmt									
ANR	782146	Decl							const char	const char * [ ]	help_msg_u
ANR	782147	DeclStmt									
ANR	782148	Decl							const char	const char * [ ]	help_msg_y
ANR	782149	DeclStmt									
ANR	782150	Decl							const char	const char * [ ]	help_msg_triple_exclamation
ANR	782151	DeclStmt									
ANR	782152	Decl							const char	const char * [ ]	help_msg_vertical_bar
ANR	782153	Function	r_core_cmd_help	311:0:11524:11659							
ANR	782154	FunctionDef	"r_core_cmd_help (const RCore * core , const char * help [ ])"		782153	0					
ANR	782155	CompoundStatement		311:66:11590:11659	782153	0					
ANR	782156	ExpressionStatement	"r_cons_cmd_help ( help , core -> print -> flags & R_PRINT_FLAGS_COLOR )"	312:1:11593:11657	782153	0	True				
ANR	782157	CallExpression	"r_cons_cmd_help ( help , core -> print -> flags & R_PRINT_FLAGS_COLOR )"		782153	0					
ANR	782158	Callee	r_cons_cmd_help		782153	0					
ANR	782159	Identifier	r_cons_cmd_help		782153	0					
ANR	782160	ArgumentList	help		782153	1					
ANR	782161	Argument	help		782153	0					
ANR	782162	Identifier	help		782153	0					
ANR	782163	Argument	core -> print -> flags & R_PRINT_FLAGS_COLOR		782153	1					
ANR	782164	BitAndExpression	core -> print -> flags & R_PRINT_FLAGS_COLOR		782153	0		&			
ANR	782165	PtrMemberAccess	core -> print -> flags		782153	0					
ANR	782166	PtrMemberAccess	core -> print		782153	0					
ANR	782167	Identifier	core		782153	0					
ANR	782168	Identifier	print		782153	1					
ANR	782169	Identifier	flags		782153	1					
ANR	782170	Identifier	R_PRINT_FLAGS_COLOR		782153	1					
ANR	782171	ReturnType	R_API void		782153	1					
ANR	782172	Identifier	r_core_cmd_help		782153	2					
ANR	782173	ParameterList	"const RCore * core , const char * help [ ]"		782153	3					
ANR	782174	Parameter	const RCore * core	311:27:11551:11567	782153	0	True				
ANR	782175	ParameterType	const RCore *		782153	0					
ANR	782176	Identifier	core		782153	1					
ANR	782177	Parameter	const char * help [ ]	311:46:11570:11587	782153	1	True				
ANR	782178	ParameterType	const char * [ ]		782153	0					
ANR	782179	Identifier	help		782153	1					
ANR	782180	CFGEntryNode	ENTRY		782153		True				
ANR	782181	CFGExitNode	EXIT		782153		True				
ANR	782182	Symbol	core		782153						
ANR	782183	Symbol	help		782153						
ANR	782184	Symbol	* core -> print		782153						
ANR	782185	Symbol	* core		782153						
ANR	782186	Symbol	R_PRINT_FLAGS_COLOR		782153						
ANR	782187	Symbol	core -> print		782153						
ANR	782188	Symbol	* * core		782153						
ANR	782189	Symbol	core -> print -> flags		782153						
ANR	782190	Function	recursive_help_go	315:0:11662:12142							
ANR	782191	FunctionDef	"recursive_help_go (RCore * core , int detail , RCmdDescriptor * desc)"		782190	0					
ANR	782192	CompoundStatement		315:77:11739:12142	782190	0					
ANR	782193	IdentifierDeclStatement	int i ;	316:1:11742:11747	782190	0	True				
ANR	782194	IdentifierDecl	i		782190	0					
ANR	782195	IdentifierDeclType	int		782190	0					
ANR	782196	Identifier	i		782190	1					
ANR	782197	IfStatement	if ( desc -> help_msg )		782190	1					
ANR	782198	Condition	desc -> help_msg	317:5:11754:11767	782190	0	True				
ANR	782199	PtrMemberAccess	desc -> help_msg		782190	0					
ANR	782200	Identifier	desc		782190	0					
ANR	782201	Identifier	help_msg		782190	1					
ANR	782202	CompoundStatement		3:21:30:30	782190	1					
ANR	782203	ExpressionStatement	"r_core_cmd_help ( core , desc -> help_msg )"	318:2:11774:11812	782190	0	True				
ANR	782204	CallExpression	"r_core_cmd_help ( core , desc -> help_msg )"		782190	0					
ANR	782205	Callee	r_core_cmd_help		782190	0					
ANR	782206	Identifier	r_core_cmd_help		782190	0					
ANR	782207	ArgumentList	core		782190	1					
ANR	782208	Argument	core		782190	0					
ANR	782209	Identifier	core		782190	0					
ANR	782210	Argument	desc -> help_msg		782190	1					
ANR	782211	PtrMemberAccess	desc -> help_msg		782190	0					
ANR	782212	Identifier	desc		782190	0					
ANR	782213	Identifier	help_msg		782190	1					
ANR	782214	IfStatement	if ( detail >= 1 )		782190	2					
ANR	782215	Condition	detail >= 1	320:5:11822:11832	782190	0	True				
ANR	782216	RelationalExpression	detail >= 1		782190	0		>=			
ANR	782217	Identifier	detail		782190	0					
ANR	782218	PrimaryExpression	1		782190	1					
ANR	782219	CompoundStatement		6:18:95:95	782190	1					
ANR	782220	IfStatement	if ( desc -> help_detail )		782190	0					
ANR	782221	Condition	desc -> help_detail	321:6:11843:11859	782190	0	True				
ANR	782222	PtrMemberAccess	desc -> help_detail		782190	0					
ANR	782223	Identifier	desc		782190	0					
ANR	782224	Identifier	help_detail		782190	1					
ANR	782225	CompoundStatement		7:25:122:122	782190	1					
ANR	782226	ExpressionStatement	"r_core_cmd_help ( core , desc -> help_detail )"	322:3:11867:11908	782190	0	True				
ANR	782227	CallExpression	"r_core_cmd_help ( core , desc -> help_detail )"		782190	0					
ANR	782228	Callee	r_core_cmd_help		782190	0					
ANR	782229	Identifier	r_core_cmd_help		782190	0					
ANR	782230	ArgumentList	core		782190	1					
ANR	782231	Argument	core		782190	0					
ANR	782232	Identifier	core		782190	0					
ANR	782233	Argument	desc -> help_detail		782190	1					
ANR	782234	PtrMemberAccess	desc -> help_detail		782190	0					
ANR	782235	Identifier	desc		782190	0					
ANR	782236	Identifier	help_detail		782190	1					
ANR	782237	IfStatement	if ( detail >= 2 && desc -> help_detail2 )		782190	1					
ANR	782238	Condition	detail >= 2 && desc -> help_detail2	324:6:11920:11952	782190	0	True				
ANR	782239	AndExpression	detail >= 2 && desc -> help_detail2		782190	0		&&			
ANR	782240	RelationalExpression	detail >= 2		782190	0		>=			
ANR	782241	Identifier	detail		782190	0					
ANR	782242	PrimaryExpression	2		782190	1					
ANR	782243	PtrMemberAccess	desc -> help_detail2		782190	1					
ANR	782244	Identifier	desc		782190	0					
ANR	782245	Identifier	help_detail2		782190	1					
ANR	782246	CompoundStatement		10:41:215:215	782190	1					
ANR	782247	ExpressionStatement	"r_core_cmd_help ( core , desc -> help_detail2 )"	325:3:11960:12002	782190	0	True				
ANR	782248	CallExpression	"r_core_cmd_help ( core , desc -> help_detail2 )"		782190	0					
ANR	782249	Callee	r_core_cmd_help		782190	0					
ANR	782250	Identifier	r_core_cmd_help		782190	0					
ANR	782251	ArgumentList	core		782190	1					
ANR	782252	Argument	core		782190	0					
ANR	782253	Identifier	core		782190	0					
ANR	782254	Argument	desc -> help_detail2		782190	1					
ANR	782255	PtrMemberAccess	desc -> help_detail2		782190	0					
ANR	782256	Identifier	desc		782190	0					
ANR	782257	Identifier	help_detail2		782190	1					
ANR	782258	ForStatement	for ( i = 32 ; i < R_ARRAY_SIZE ( desc -> sub ) ; i ++ )		782190	3					
ANR	782259	ForInit	i = 32 ;	328:6:12017:12023	782190	0	True				
ANR	782260	AssignmentExpression	i = 32		782190	0		=			
ANR	782261	Identifier	i		782190	0					
ANR	782262	PrimaryExpression	32		782190	1					
ANR	782263	Condition	i < R_ARRAY_SIZE ( desc -> sub )	328:14:12025:12052	782190	1	True				
ANR	782264	RelationalExpression	i < R_ARRAY_SIZE ( desc -> sub )		782190	0		<			
ANR	782265	Identifier	i		782190	0					
ANR	782266	CallExpression	R_ARRAY_SIZE ( desc -> sub )		782190	1					
ANR	782267	Callee	R_ARRAY_SIZE		782190	0					
ANR	782268	Identifier	R_ARRAY_SIZE		782190	0					
ANR	782269	ArgumentList	desc -> sub		782190	1					
ANR	782270	Argument	desc -> sub		782190	0					
ANR	782271	PtrMemberAccess	desc -> sub		782190	0					
ANR	782272	Identifier	desc		782190	0					
ANR	782273	Identifier	sub		782190	1					
ANR	782274	PostIncDecOperationExpression	i ++	328:44:12055:12057	782190	2	True				
ANR	782275	Identifier	i		782190	0					
ANR	782276	IncDec	++		782190	1					
ANR	782277	CompoundStatement		14:49:320:320	782190	3					
ANR	782278	IfStatement	if ( desc -> sub [ i ] )		782190	0					
ANR	782279	Condition	desc -> sub [ i ]	329:6:12068:12079	782190	0	True				
ANR	782280	ArrayIndexing	desc -> sub [ i ]		782190	0					
ANR	782281	PtrMemberAccess	desc -> sub		782190	0					
ANR	782282	Identifier	desc		782190	0					
ANR	782283	Identifier	sub		782190	1					
ANR	782284	Identifier	i		782190	1					
ANR	782285	CompoundStatement		15:20:342:342	782190	1					
ANR	782286	ExpressionStatement	"recursive_help_go ( core , detail , desc -> sub [ i ] )"	330:3:12087:12133	782190	0	True				
ANR	782287	CallExpression	"recursive_help_go ( core , detail , desc -> sub [ i ] )"		782190	0					
ANR	782288	Callee	recursive_help_go		782190	0					
ANR	782289	Identifier	recursive_help_go		782190	0					
ANR	782290	ArgumentList	core		782190	1					
ANR	782291	Argument	core		782190	0					
ANR	782292	Identifier	core		782190	0					
ANR	782293	Argument	detail		782190	1					
ANR	782294	Identifier	detail		782190	0					
ANR	782295	Argument	desc -> sub [ i ]		782190	2					
ANR	782296	ArrayIndexing	desc -> sub [ i ]		782190	0					
ANR	782297	PtrMemberAccess	desc -> sub		782190	0					
ANR	782298	Identifier	desc		782190	0					
ANR	782299	Identifier	sub		782190	1					
ANR	782300	Identifier	i		782190	1					
ANR	782301	ReturnType	static void		782190	1					
ANR	782302	Identifier	recursive_help_go		782190	2					
ANR	782303	ParameterList	"RCore * core , int detail , RCmdDescriptor * desc"		782190	3					
ANR	782304	Parameter	RCore * core	315:30:11692:11702	782190	0	True				
ANR	782305	ParameterType	RCore *		782190	0					
ANR	782306	Identifier	core		782190	1					
ANR	782307	Parameter	int detail	315:43:11705:11714	782190	1	True				
ANR	782308	ParameterType	int		782190	0					
ANR	782309	Identifier	detail		782190	1					
ANR	782310	Parameter	RCmdDescriptor * desc	315:55:11717:11736	782190	2	True				
ANR	782311	ParameterType	RCmdDescriptor *		782190	0					
ANR	782312	Identifier	desc		782190	1					
ANR	782313	CFGEntryNode	ENTRY		782190		True				
ANR	782314	CFGExitNode	EXIT		782190		True				
ANR	782315	Symbol	desc -> help_detail		782190						
ANR	782316	Symbol	i		782190						
ANR	782317	Symbol	desc -> help_msg		782190						
ANR	782318	Symbol	desc -> help_detail2		782190						
ANR	782319	Symbol	* desc -> sub		782190						
ANR	782320	Symbol	* * desc		782190						
ANR	782321	Symbol	desc -> sub		782190						
ANR	782322	Symbol	core		782190						
ANR	782323	Symbol	* i		782190						
ANR	782324	Symbol	R_ARRAY_SIZE		782190						
ANR	782325	Symbol	* desc		782190						
ANR	782326	Symbol	detail		782190						
ANR	782327	Symbol	desc		782190						
ANR	782328	Function	recursive_help	335:0:12145:12461							
ANR	782329	FunctionDef	"recursive_help (RCore * core , int detail , const char * cmd_prefix)"		782328	0					
ANR	782330	CompoundStatement		335:76:12221:12461	782328	0					
ANR	782331	IdentifierDeclStatement	const ut8 * p ;	336:1:12224:12236	782328	0	True				
ANR	782332	IdentifierDecl	* p		782328	0					
ANR	782333	IdentifierDeclType	const ut8 *		782328	0					
ANR	782334	Identifier	p		782328	1					
ANR	782335	IdentifierDeclStatement	RCmdDescriptor * desc = & core -> root_cmd_descriptor ;	337:1:12239:12288	782328	1	True				
ANR	782336	IdentifierDecl	* desc = & core -> root_cmd_descriptor		782328	0					
ANR	782337	IdentifierDeclType	RCmdDescriptor *		782328	0					
ANR	782338	Identifier	desc		782328	1					
ANR	782339	AssignmentExpression	* desc = & core -> root_cmd_descriptor		782328	2		=			
ANR	782340	Identifier	desc		782328	0					
ANR	782341	UnaryOperationExpression	& core -> root_cmd_descriptor		782328	1					
ANR	782342	UnaryOperator	&		782328	0					
ANR	782343	PtrMemberAccess	core -> root_cmd_descriptor		782328	1					
ANR	782344	Identifier	core		782328	0					
ANR	782345	Identifier	root_cmd_descriptor		782328	1					
ANR	782346	ForStatement	for ( p = ( const ut8 * ) cmd_prefix ; * p && * p < R_ARRAY_SIZE ( desc -> sub ) ; p ++ )		782328	2					
ANR	782347	ForInit	p = ( const ut8 * ) cmd_prefix ;	338:6:12296:12323	782328	0	True				
ANR	782348	AssignmentExpression	p = ( const ut8 * ) cmd_prefix		782328	0		=			
ANR	782349	Identifier	p		782328	0					
ANR	782350	CastExpression	( const ut8 * ) cmd_prefix		782328	1					
ANR	782351	CastTarget	const ut8 *		782328	0					
ANR	782352	Identifier	cmd_prefix		782328	1					
ANR	782353	Condition	* p && * p < R_ARRAY_SIZE ( desc -> sub )	338:35:12325:12359	782328	1	True				
ANR	782354	AndExpression	* p && * p < R_ARRAY_SIZE ( desc -> sub )		782328	0		&&			
ANR	782355	UnaryOperationExpression	* p		782328	0					
ANR	782356	UnaryOperator	*		782328	0					
ANR	782357	Identifier	p		782328	1					
ANR	782358	RelationalExpression	* p < R_ARRAY_SIZE ( desc -> sub )		782328	1		<			
ANR	782359	UnaryOperationExpression	* p		782328	0					
ANR	782360	UnaryOperator	*		782328	0					
ANR	782361	Identifier	p		782328	1					
ANR	782362	CallExpression	R_ARRAY_SIZE ( desc -> sub )		782328	1					
ANR	782363	Callee	R_ARRAY_SIZE		782328	0					
ANR	782364	Identifier	R_ARRAY_SIZE		782328	0					
ANR	782365	ArgumentList	desc -> sub		782328	1					
ANR	782366	Argument	desc -> sub		782328	0					
ANR	782367	PtrMemberAccess	desc -> sub		782328	0					
ANR	782368	Identifier	desc		782328	0					
ANR	782369	Identifier	sub		782328	1					
ANR	782370	PostIncDecOperationExpression	p ++	338:72:12362:12364	782328	2	True				
ANR	782371	Identifier	p		782328	0					
ANR	782372	IncDec	++		782328	1					
ANR	782373	CompoundStatement		4:77:145:145	782328	3					
ANR	782374	IfStatement	if ( ! ( desc = desc -> sub [ * p ] ) )		782328	0					
ANR	782375	Condition	! ( desc = desc -> sub [ * p ] )	339:6:12375:12397	782328	0	True				
ANR	782376	UnaryOperationExpression	! ( desc = desc -> sub [ * p ] )		782328	0					
ANR	782377	UnaryOperator	!		782328	0					
ANR	782378	AssignmentExpression	desc = desc -> sub [ * p ]		782328	1		=			
ANR	782379	Identifier	desc		782328	0					
ANR	782380	ArrayIndexing	desc -> sub [ * p ]		782328	1					
ANR	782381	PtrMemberAccess	desc -> sub		782328	0					
ANR	782382	Identifier	desc		782328	0					
ANR	782383	Identifier	sub		782328	1					
ANR	782384	UnaryOperationExpression	* p		782328	1					
ANR	782385	UnaryOperator	*		782328	0					
ANR	782386	Identifier	p		782328	1					
ANR	782387	CompoundStatement		5:31:178:178	782328	1					
ANR	782388	ReturnStatement	return ;	340:3:12405:12411	782328	0	True				
ANR	782389	ExpressionStatement	"recursive_help_go ( core , detail , desc )"	343:1:12421:12459	782328	3	True				
ANR	782390	CallExpression	"recursive_help_go ( core , detail , desc )"		782328	0					
ANR	782391	Callee	recursive_help_go		782328	0					
ANR	782392	Identifier	recursive_help_go		782328	0					
ANR	782393	ArgumentList	core		782328	1					
ANR	782394	Argument	core		782328	0					
ANR	782395	Identifier	core		782328	0					
ANR	782396	Argument	detail		782328	1					
ANR	782397	Identifier	detail		782328	0					
ANR	782398	Argument	desc		782328	2					
ANR	782399	Identifier	desc		782328	0					
ANR	782400	ReturnType	static void		782328	1					
ANR	782401	Identifier	recursive_help		782328	2					
ANR	782402	ParameterList	"RCore * core , int detail , const char * cmd_prefix"		782328	3					
ANR	782403	Parameter	RCore * core	335:27:12172:12182	782328	0	True				
ANR	782404	ParameterType	RCore *		782328	0					
ANR	782405	Identifier	core		782328	1					
ANR	782406	Parameter	int detail	335:40:12185:12194	782328	1	True				
ANR	782407	ParameterType	int		782328	0					
ANR	782408	Identifier	detail		782328	1					
ANR	782409	Parameter	const char * cmd_prefix	335:52:12197:12218	782328	2	True				
ANR	782410	ParameterType	const char *		782328	0					
ANR	782411	Identifier	cmd_prefix		782328	1					
ANR	782412	CFGEntryNode	ENTRY		782328		True				
ANR	782413	CFGExitNode	EXIT		782328		True				
ANR	782414	Symbol	& core -> root_cmd_descriptor		782328						
ANR	782415	Symbol	* desc -> sub		782328						
ANR	782416	Symbol	* * desc		782328						
ANR	782417	Symbol	desc -> sub		782328						
ANR	782418	Symbol	p		782328						
ANR	782419	Symbol	core		782328						
ANR	782420	Symbol	cmd_prefix		782328						
ANR	782421	Symbol	R_ARRAY_SIZE		782328						
ANR	782422	Symbol	* p		782328						
ANR	782423	Symbol	* desc		782328						
ANR	782424	Symbol	detail		782328						
ANR	782425	Symbol	* * p		782328						
ANR	782426	Symbol	desc		782328						
ANR	782427	Function	r_core_cmd_nullcallback	346:0:12464:12719							
ANR	782428	FunctionDef	r_core_cmd_nullcallback (void * data)		782427	0					
ANR	782429	CompoundStatement		346:47:12511:12719	782427	0					
ANR	782430	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	347:1:12514:12541	782427	0	True				
ANR	782431	IdentifierDecl	* core = ( RCore * ) data		782427	0					
ANR	782432	IdentifierDeclType	RCore *		782427	0					
ANR	782433	Identifier	core		782427	1					
ANR	782434	AssignmentExpression	* core = ( RCore * ) data		782427	2		=			
ANR	782435	Identifier	core		782427	0					
ANR	782436	CastExpression	( RCore * ) data		782427	1					
ANR	782437	CastTarget	RCore *		782427	0					
ANR	782438	Identifier	data		782427	1					
ANR	782439	IfStatement	if ( core -> cons -> context -> breaked )		782427	1					
ANR	782440	Condition	core -> cons -> context -> breaked	348:5:12548:12575	782427	0	True				
ANR	782441	PtrMemberAccess	core -> cons -> context -> breaked		782427	0					
ANR	782442	PtrMemberAccess	core -> cons -> context		782427	0					
ANR	782443	PtrMemberAccess	core -> cons		782427	0					
ANR	782444	Identifier	core		782427	0					
ANR	782445	Identifier	cons		782427	1					
ANR	782446	Identifier	context		782427	1					
ANR	782447	Identifier	breaked		782427	1					
ANR	782448	CompoundStatement		3:35:66:66	782427	1					
ANR	782449	ExpressionStatement	core -> cons -> context -> breaked = false	349:2:12582:12618	782427	0	True				
ANR	782450	AssignmentExpression	core -> cons -> context -> breaked = false		782427	0		=			
ANR	782451	PtrMemberAccess	core -> cons -> context -> breaked		782427	0					
ANR	782452	PtrMemberAccess	core -> cons -> context		782427	0					
ANR	782453	PtrMemberAccess	core -> cons		782427	0					
ANR	782454	Identifier	core		782427	0					
ANR	782455	Identifier	cons		782427	1					
ANR	782456	Identifier	context		782427	1					
ANR	782457	Identifier	breaked		782427	1					
ANR	782458	Identifier	false		782427	1					
ANR	782459	ReturnStatement	return 0 ;	350:2:12622:12630	782427	1	True				
ANR	782460	PrimaryExpression	0		782427	0					
ANR	782461	IfStatement	if ( ! core -> cmdrepeat )		782427	2					
ANR	782462	Condition	! core -> cmdrepeat	352:5:12640:12655	782427	0	True				
ANR	782463	UnaryOperationExpression	! core -> cmdrepeat		782427	0					
ANR	782464	UnaryOperator	!		782427	0					
ANR	782465	PtrMemberAccess	core -> cmdrepeat		782427	1					
ANR	782466	Identifier	core		782427	0					
ANR	782467	Identifier	cmdrepeat		782427	1					
ANR	782468	CompoundStatement		7:23:146:146	782427	1					
ANR	782469	ReturnStatement	return 0 ;	353:2:12662:12670	782427	0	True				
ANR	782470	PrimaryExpression	0		782427	0					
ANR	782471	ExpressionStatement	"r_core_cmd_repeat ( core , true )"	355:1:12676:12706	782427	3	True				
ANR	782472	CallExpression	"r_core_cmd_repeat ( core , true )"		782427	0					
ANR	782473	Callee	r_core_cmd_repeat		782427	0					
ANR	782474	Identifier	r_core_cmd_repeat		782427	0					
ANR	782475	ArgumentList	core		782427	1					
ANR	782476	Argument	core		782427	0					
ANR	782477	Identifier	core		782427	0					
ANR	782478	Argument	true		782427	1					
ANR	782479	Identifier	true		782427	0					
ANR	782480	ReturnStatement	return 1 ;	356:1:12709:12717	782427	4	True				
ANR	782481	PrimaryExpression	1		782427	0					
ANR	782482	ReturnType	static int		782427	1					
ANR	782483	Identifier	r_core_cmd_nullcallback		782427	2					
ANR	782484	ParameterList	void * data		782427	3					
ANR	782485	Parameter	void * data	346:35:12499:12508	782427	0	True				
ANR	782486	ParameterType	void *		782427	0					
ANR	782487	Identifier	data		782427	1					
ANR	782488	CFGEntryNode	ENTRY		782427		True				
ANR	782489	CFGExitNode	EXIT		782427		True				
ANR	782490	Symbol	core -> cmdrepeat		782427						
ANR	782491	Symbol	data		782427						
ANR	782492	Symbol	* core -> cons		782427						
ANR	782493	Symbol	* * core -> cons		782427						
ANR	782494	Symbol	* core		782427						
ANR	782495	Symbol	false		782427						
ANR	782496	Symbol	core -> cons -> context -> breaked		782427						
ANR	782497	Symbol	core		782427						
ANR	782498	Symbol	* * * core		782427						
ANR	782499	Symbol	core -> cons		782427						
ANR	782500	Symbol	* core -> cons -> context		782427						
ANR	782501	Symbol	true		782427						
ANR	782502	Symbol	* * core		782427						
ANR	782503	Symbol	core -> cons -> context		782427						
ANR	782504	Function	cmd_uniq	359:0:12722:13277							
ANR	782505	FunctionDef	"cmd_uniq (void * data , const char * input)"		782504	0					
ANR	782506	CompoundStatement		359:51:12773:13277	782504	0					
ANR	782507	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	360:1:12786:12813	782504	0	True				
ANR	782508	IdentifierDecl	* core = ( RCore * ) data		782504	0					
ANR	782509	IdentifierDeclType	RCore *		782504	0					
ANR	782510	Identifier	core		782504	1					
ANR	782511	AssignmentExpression	* core = ( RCore * ) data		782504	2		=			
ANR	782512	Identifier	core		782504	0					
ANR	782513	CastExpression	( RCore * ) data		782504	1					
ANR	782514	CastTarget	RCore *		782504	0					
ANR	782515	Identifier	data		782504	1					
ANR	782516	IdentifierDeclStatement	"const char * arg = strchr ( input , ' ' ) ;"	361:1:12816:12853	782504	1	True				
ANR	782517	IdentifierDecl	"* arg = strchr ( input , ' ' )"		782504	0					
ANR	782518	IdentifierDeclType	const char *		782504	0					
ANR	782519	Identifier	arg		782504	1					
ANR	782520	AssignmentExpression	"* arg = strchr ( input , ' ' )"		782504	2		=			
ANR	782521	Identifier	arg		782504	0					
ANR	782522	CallExpression	"strchr ( input , ' ' )"		782504	1					
ANR	782523	Callee	strchr		782504	0					
ANR	782524	Identifier	strchr		782504	0					
ANR	782525	ArgumentList	input		782504	1					
ANR	782526	Argument	input		782504	0					
ANR	782527	Identifier	input		782504	0					
ANR	782528	Argument	' '		782504	1					
ANR	782529	PrimaryExpression	' '		782504	0					
ANR	782530	IfStatement	if ( arg )		782504	2					
ANR	782531	Condition	arg	362:5:12860:12862	782504	0	True				
ANR	782532	Identifier	arg		782504	0					
ANR	782533	CompoundStatement		4:10:91:91	782504	1					
ANR	782534	ExpressionStatement	arg = r_str_trim_ro ( arg + 1 )	363:2:12869:12898	782504	0	True				
ANR	782535	AssignmentExpression	arg = r_str_trim_ro ( arg + 1 )		782504	0		=			
ANR	782536	Identifier	arg		782504	0					
ANR	782537	CallExpression	r_str_trim_ro ( arg + 1 )		782504	1					
ANR	782538	Callee	r_str_trim_ro		782504	0					
ANR	782539	Identifier	r_str_trim_ro		782504	0					
ANR	782540	ArgumentList	arg + 1		782504	1					
ANR	782541	Argument	arg + 1		782504	0					
ANR	782542	AdditiveExpression	arg + 1		782504	0		+			
ANR	782543	Identifier	arg		782504	0					
ANR	782544	PrimaryExpression	1		782504	1					
ANR	782545	SwitchStatement	switch ( * input )		782504	3					
ANR	782546	Condition	* input	365:9:12912:12917	782504	0	True				
ANR	782547	UnaryOperationExpression	* input		782504	0					
ANR	782548	UnaryOperator	*		782504	0					
ANR	782549	Identifier	input		782504	1					
ANR	782550	CompoundStatement		7:17:146:146	782504	1					
ANR	782551	Label	case '?' :	366:1:12923:12931	782504	0	True				
ANR	782552	ExpressionStatement	"eprintf ( ""Usage: uniq # uniq to list unique strings in file\\n"" )"	367:2:12946:13009	782504	1	True				
ANR	782553	CallExpression	"eprintf ( ""Usage: uniq # uniq to list unique strings in file\\n"" )"		782504	0					
ANR	782554	Callee	eprintf		782504	0					
ANR	782555	Identifier	eprintf		782504	0					
ANR	782556	ArgumentList	"""Usage: uniq # uniq to list unique strings in file\\n"""		782504	1					
ANR	782557	Argument	"""Usage: uniq # uniq to list unique strings in file\\n"""		782504	0					
ANR	782558	PrimaryExpression	"""Usage: uniq # uniq to list unique strings in file\\n"""		782504	0					
ANR	782559	BreakStatement	break ;	368:2:13013:13018	782504	2	True				
ANR	782560	Label	default :	369:1:13021:13028	782504	3	True				
ANR	782561	Identifier	default		782504	0					
ANR	782562	IfStatement	if ( ! arg )		782504	4					
ANR	782563	Condition	! arg	370:6:13046:13049	782504	0	True				
ANR	782564	UnaryOperationExpression	! arg		782504	0					
ANR	782565	UnaryOperator	!		782504	0					
ANR	782566	Identifier	arg		782504	1					
ANR	782567	CompoundStatement		12:12:278:278	782504	1					
ANR	782568	ExpressionStatement	"arg = """""	371:3:13057:13065	782504	0	True				
ANR	782569	AssignmentExpression	"arg = """""		782504	0		=			
ANR	782570	Identifier	arg		782504	0					
ANR	782571	PrimaryExpression	""""""		782504	1					
ANR	782572	IfStatement	"if ( r_fs_check ( core -> fs , arg ) )"		782504	5					
ANR	782573	Condition	"r_fs_check ( core -> fs , arg )"	373:6:13077:13102	782504	0	True				
ANR	782574	CallExpression	"r_fs_check ( core -> fs , arg )"		782504	0					
ANR	782575	Callee	r_fs_check		782504	0					
ANR	782576	Identifier	r_fs_check		782504	0					
ANR	782577	ArgumentList	core -> fs		782504	1					
ANR	782578	Argument	core -> fs		782504	0					
ANR	782579	PtrMemberAccess	core -> fs		782504	0					
ANR	782580	Identifier	core		782504	0					
ANR	782581	Identifier	fs		782504	1					
ANR	782582	Argument	arg		782504	1					
ANR	782583	Identifier	arg		782504	0					
ANR	782584	CompoundStatement		15:34:331:331	782504	1					
ANR	782585	ExpressionStatement	"r_core_cmdf ( core , ""md %s"" , arg )"	374:3:13110:13142	782504	0	True				
ANR	782586	CallExpression	"r_core_cmdf ( core , ""md %s"" , arg )"		782504	0					
ANR	782587	Callee	r_core_cmdf		782504	0					
ANR	782588	Identifier	r_core_cmdf		782504	0					
ANR	782589	ArgumentList	core		782504	1					
ANR	782590	Argument	core		782504	0					
ANR	782591	Identifier	core		782504	0					
ANR	782592	Argument	"""md %s"""		782504	1					
ANR	782593	PrimaryExpression	"""md %s"""		782504	0					
ANR	782594	Argument	arg		782504	2					
ANR	782595	Identifier	arg		782504	0					
ANR	782596	ElseStatement	else		782504	0					
ANR	782597	CompoundStatement		18:3:384:415	782504	0					
ANR	782598	IdentifierDeclStatement	char * res = r_syscmd_uniq ( arg ) ;	376:3:13158:13189	782504	0	True				
ANR	782599	IdentifierDecl	* res = r_syscmd_uniq ( arg )		782504	0					
ANR	782600	IdentifierDeclType	char *		782504	0					
ANR	782601	Identifier	res		782504	1					
ANR	782602	AssignmentExpression	* res = r_syscmd_uniq ( arg )		782504	2		=			
ANR	782603	Identifier	res		782504	0					
ANR	782604	CallExpression	r_syscmd_uniq ( arg )		782504	1					
ANR	782605	Callee	r_syscmd_uniq		782504	0					
ANR	782606	Identifier	r_syscmd_uniq		782504	0					
ANR	782607	ArgumentList	arg		782504	1					
ANR	782608	Argument	arg		782504	0					
ANR	782609	Identifier	arg		782504	0					
ANR	782610	IfStatement	if ( res )		782504	1					
ANR	782611	Condition	res	377:7:13198:13200	782504	0	True				
ANR	782612	Identifier	res		782504	0					
ANR	782613	CompoundStatement		19:12:429:429	782504	1					
ANR	782614	ExpressionStatement	r_cons_print ( res )	378:4:13209:13227	782504	0	True				
ANR	782615	CallExpression	r_cons_print ( res )		782504	0					
ANR	782616	Callee	r_cons_print		782504	0					
ANR	782617	Identifier	r_cons_print		782504	0					
ANR	782618	ArgumentList	res		782504	1					
ANR	782619	Argument	res		782504	0					
ANR	782620	Identifier	res		782504	0					
ANR	782621	ExpressionStatement	free ( res )	379:4:13233:13243	782504	1	True				
ANR	782622	CallExpression	free ( res )		782504	0					
ANR	782623	Callee	free		782504	0					
ANR	782624	Identifier	free		782504	0					
ANR	782625	ArgumentList	res		782504	1					
ANR	782626	Argument	res		782504	0					
ANR	782627	Identifier	res		782504	0					
ANR	782628	BreakStatement	break ;	382:2:13256:13261	782504	6	True				
ANR	782629	ReturnStatement	return 0 ;	384:1:13267:13275	782504	4	True				
ANR	782630	PrimaryExpression	0		782504	0					
ANR	782631	ReturnType	static int		782504	1					
ANR	782632	Identifier	cmd_uniq		782504	2					
ANR	782633	ParameterList	"void * data , const char * input"		782504	3					
ANR	782634	Parameter	void * data	359:20:12742:12751	782504	0	True				
ANR	782635	ParameterType	void *		782504	0					
ANR	782636	Identifier	data		782504	1					
ANR	782637	Parameter	const char * input	359:32:12754:12770	782504	1	True				
ANR	782638	ParameterType	const char *		782504	0					
ANR	782639	Identifier	input		782504	1					
ANR	782640	CFGEntryNode	ENTRY		782504		True				
ANR	782641	CFGExitNode	EXIT		782504		True				
ANR	782642	Symbol	input		782504						
ANR	782643	Symbol	core		782504						
ANR	782644	Symbol	res		782504						
ANR	782645	Symbol	r_syscmd_uniq		782504						
ANR	782646	Symbol	data		782504						
ANR	782647	Symbol	arg		782504						
ANR	782648	Symbol	r_str_trim_ro		782504						
ANR	782649	Symbol	* input		782504						
ANR	782650	Symbol	* core		782504						
ANR	782651	Symbol	strchr		782504						
ANR	782652	Symbol	core -> fs		782504						
ANR	782653	Symbol	r_fs_check		782504						
ANR	782654	Function	cmd_head	387:0:13280:14137							
ANR	782655	FunctionDef	"cmd_head (void * data , const char * _input)"		782654	0					
ANR	782656	CompoundStatement		387:53:13333:14137	782654	0					
ANR	782657	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	388:1:13346:13373	782654	0	True				
ANR	782658	IdentifierDecl	* core = ( RCore * ) data		782654	0					
ANR	782659	IdentifierDeclType	RCore *		782654	0					
ANR	782660	Identifier	core		782654	1					
ANR	782661	AssignmentExpression	* core = ( RCore * ) data		782654	2		=			
ANR	782662	Identifier	core		782654	0					
ANR	782663	CastExpression	( RCore * ) data		782654	1					
ANR	782664	CastTarget	RCore *		782654	0					
ANR	782665	Identifier	data		782654	1					
ANR	782666	IdentifierDeclStatement	int lines = 5 ;	389:1:13376:13389	782654	1	True				
ANR	782667	IdentifierDecl	lines = 5		782654	0					
ANR	782668	IdentifierDeclType	int		782654	0					
ANR	782669	Identifier	lines		782654	1					
ANR	782670	AssignmentExpression	lines = 5		782654	2		=			
ANR	782671	Identifier	lines		782654	0					
ANR	782672	PrimaryExpression	5		782654	1					
ANR	782673	IdentifierDeclStatement	char * input = strdup ( _input ) ;	390:1:13392:13421	782654	2	True				
ANR	782674	IdentifierDecl	* input = strdup ( _input )		782654	0					
ANR	782675	IdentifierDeclType	char *		782654	0					
ANR	782676	Identifier	input		782654	1					
ANR	782677	AssignmentExpression	* input = strdup ( _input )		782654	2		=			
ANR	782678	Identifier	input		782654	0					
ANR	782679	CallExpression	strdup ( _input )		782654	1					
ANR	782680	Callee	strdup		782654	0					
ANR	782681	Identifier	strdup		782654	0					
ANR	782682	ArgumentList	_input		782654	1					
ANR	782683	Argument	_input		782654	0					
ANR	782684	Identifier	_input		782654	0					
ANR	782685	IdentifierDeclStatement	"char * arg = strchr ( input , ' ' ) ;"	391:1:13424:13455	782654	3	True				
ANR	782686	IdentifierDecl	"* arg = strchr ( input , ' ' )"		782654	0					
ANR	782687	IdentifierDeclType	char *		782654	0					
ANR	782688	Identifier	arg		782654	1					
ANR	782689	AssignmentExpression	"* arg = strchr ( input , ' ' )"		782654	2		=			
ANR	782690	Identifier	arg		782654	0					
ANR	782691	CallExpression	"strchr ( input , ' ' )"		782654	1					
ANR	782692	Callee	strchr		782654	0					
ANR	782693	Identifier	strchr		782654	0					
ANR	782694	ArgumentList	input		782654	1					
ANR	782695	Argument	input		782654	0					
ANR	782696	Identifier	input		782654	0					
ANR	782697	Argument	' '		782654	1					
ANR	782698	PrimaryExpression	' '		782654	0					
ANR	782699	IdentifierDeclStatement	"char * tmp , * count ;"	392:1:13458:13475	782654	4	True				
ANR	782700	IdentifierDecl	* tmp		782654	0					
ANR	782701	IdentifierDeclType	char *		782654	0					
ANR	782702	Identifier	tmp		782654	1					
ANR	782703	IdentifierDecl	* count		782654	1					
ANR	782704	IdentifierDeclType	char *		782654	0					
ANR	782705	Identifier	count		782654	1					
ANR	782706	IfStatement	if ( arg )		782654	5					
ANR	782707	Condition	arg	393:5:13482:13484	782654	0	True				
ANR	782708	Identifier	arg		782654	0					
ANR	782709	CompoundStatement		7:10:153:153	782654	1					
ANR	782710	ExpressionStatement	arg = ( char * ) r_str_trim_ro ( arg + 1 )	394:2:13491:13528	782654	0	True				
ANR	782711	AssignmentExpression	arg = ( char * ) r_str_trim_ro ( arg + 1 )		782654	0		=			
ANR	782712	Identifier	arg		782654	0					
ANR	782713	CastExpression	( char * ) r_str_trim_ro ( arg + 1 )		782654	1					
ANR	782714	CastTarget	char *		782654	0					
ANR	782715	CallExpression	r_str_trim_ro ( arg + 1 )		782654	1					
ANR	782716	Callee	r_str_trim_ro		782654	0					
ANR	782717	Identifier	r_str_trim_ro		782654	0					
ANR	782718	ArgumentList	arg + 1		782654	1					
ANR	782719	Argument	arg + 1		782654	0					
ANR	782720	AdditiveExpression	arg + 1		782654	0		+			
ANR	782721	Identifier	arg		782654	0					
ANR	782722	PrimaryExpression	1		782654	1					
ANR	782723	ExpressionStatement	"count = strchr ( arg , ' ' )"	395:2:13562:13587	782654	1	True				
ANR	782724	AssignmentExpression	"count = strchr ( arg , ' ' )"		782654	0		=			
ANR	782725	Identifier	count		782654	0					
ANR	782726	CallExpression	"strchr ( arg , ' ' )"		782654	1					
ANR	782727	Callee	strchr		782654	0					
ANR	782728	Identifier	strchr		782654	0					
ANR	782729	ArgumentList	arg		782654	1					
ANR	782730	Argument	arg		782654	0					
ANR	782731	Identifier	arg		782654	0					
ANR	782732	Argument	' '		782654	1					
ANR	782733	PrimaryExpression	' '		782654	0					
ANR	782734	IfStatement	if ( count )		782654	2					
ANR	782735	Condition	count	396:6:13595:13599	782654	0	True				
ANR	782736	Identifier	count		782654	0					
ANR	782737	CompoundStatement		10:13:268:268	782654	1					
ANR	782738	ExpressionStatement	* count = 0	397:3:13607:13617	782654	0	True				
ANR	782739	AssignmentExpression	* count = 0		782654	0		=			
ANR	782740	UnaryOperationExpression	* count		782654	0					
ANR	782741	UnaryOperator	*		782654	0					
ANR	782742	Identifier	count		782654	1					
ANR	782743	PrimaryExpression	0		782654	1					
ANR	782744	ExpressionStatement	tmp = ( char * ) r_str_trim_ro ( count + 1 )	398:3:13655:13694	782654	1	True				
ANR	782745	AssignmentExpression	tmp = ( char * ) r_str_trim_ro ( count + 1 )		782654	0		=			
ANR	782746	Identifier	tmp		782654	0					
ANR	782747	CastExpression	( char * ) r_str_trim_ro ( count + 1 )		782654	1					
ANR	782748	CastTarget	char *		782654	0					
ANR	782749	CallExpression	r_str_trim_ro ( count + 1 )		782654	1					
ANR	782750	Callee	r_str_trim_ro		782654	0					
ANR	782751	Identifier	r_str_trim_ro		782654	0					
ANR	782752	ArgumentList	count + 1		782654	1					
ANR	782753	Argument	count + 1		782654	0					
ANR	782754	AdditiveExpression	count + 1		782654	0		+			
ANR	782755	Identifier	count		782654	0					
ANR	782756	PrimaryExpression	1		782654	1					
ANR	782757	ExpressionStatement	lines = atoi ( arg )	399:3:13699:13717	782654	2	True				
ANR	782758	AssignmentExpression	lines = atoi ( arg )		782654	0		=			
ANR	782759	Identifier	lines		782654	0					
ANR	782760	CallExpression	atoi ( arg )		782654	1					
ANR	782761	Callee	atoi		782654	0					
ANR	782762	Identifier	atoi		782654	0					
ANR	782763	ArgumentList	arg		782654	1					
ANR	782764	Argument	arg		782654	0					
ANR	782765	Identifier	arg		782654	0					
ANR	782766	ExpressionStatement	arg = tmp	400:3:13722:13731	782654	3	True				
ANR	782767	AssignmentExpression	arg = tmp		782654	0		=			
ANR	782768	Identifier	arg		782654	0					
ANR	782769	Identifier	tmp		782654	1					
ANR	782770	SwitchStatement	switch ( * input )		782654	6					
ANR	782771	Condition	* input	403:9:13749:13754	782654	0	True				
ANR	782772	UnaryOperationExpression	* input		782654	0					
ANR	782773	UnaryOperator	*		782654	0					
ANR	782774	Identifier	input		782654	1					
ANR	782775	CompoundStatement		17:17:423:423	782654	1					
ANR	782776	Label	case '?' :	404:1:13760:13768	782654	0	True				
ANR	782777	ExpressionStatement	"eprintf ( ""Usage: head [file] # to list first n lines in file\\n"" )"	405:2:13783:13847	782654	1	True				
ANR	782778	CallExpression	"eprintf ( ""Usage: head [file] # to list first n lines in file\\n"" )"		782654	0					
ANR	782779	Callee	eprintf		782654	0					
ANR	782780	Identifier	eprintf		782654	0					
ANR	782781	ArgumentList	"""Usage: head [file] # to list first n lines in file\\n"""		782654	1					
ANR	782782	Argument	"""Usage: head [file] # to list first n lines in file\\n"""		782654	0					
ANR	782783	PrimaryExpression	"""Usage: head [file] # to list first n lines in file\\n"""		782654	0					
ANR	782784	BreakStatement	break ;	406:2:13851:13856	782654	2	True				
ANR	782785	Label	default :	407:1:13859:13866	782654	3	True				
ANR	782786	Identifier	default		782654	0					
ANR	782787	IfStatement	if ( ! arg )		782654	4					
ANR	782788	Condition	! arg	408:6:13884:13887	782654	0	True				
ANR	782789	UnaryOperationExpression	! arg		782654	0					
ANR	782790	UnaryOperator	!		782654	0					
ANR	782791	Identifier	arg		782654	1					
ANR	782792	CompoundStatement		22:12:556:556	782654	1					
ANR	782793	ExpressionStatement	"arg = """""	409:3:13895:13903	782654	0	True				
ANR	782794	AssignmentExpression	"arg = """""		782654	0		=			
ANR	782795	Identifier	arg		782654	0					
ANR	782796	PrimaryExpression	""""""		782654	1					
ANR	782797	IfStatement	"if ( r_fs_check ( core -> fs , arg ) )"		782654	5					
ANR	782798	Condition	"r_fs_check ( core -> fs , arg )"	411:6:13915:13940	782654	0	True				
ANR	782799	CallExpression	"r_fs_check ( core -> fs , arg )"		782654	0					
ANR	782800	Callee	r_fs_check		782654	0					
ANR	782801	Identifier	r_fs_check		782654	0					
ANR	782802	ArgumentList	core -> fs		782654	1					
ANR	782803	Argument	core -> fs		782654	0					
ANR	782804	PtrMemberAccess	core -> fs		782654	0					
ANR	782805	Identifier	core		782654	0					
ANR	782806	Identifier	fs		782654	1					
ANR	782807	Argument	arg		782654	1					
ANR	782808	Identifier	arg		782654	0					
ANR	782809	CompoundStatement		25:34:609:609	782654	1					
ANR	782810	ExpressionStatement	"r_core_cmdf ( core , ""md %s"" , arg )"	412:3:13948:13980	782654	0	True				
ANR	782811	CallExpression	"r_core_cmdf ( core , ""md %s"" , arg )"		782654	0					
ANR	782812	Callee	r_core_cmdf		782654	0					
ANR	782813	Identifier	r_core_cmdf		782654	0					
ANR	782814	ArgumentList	core		782654	1					
ANR	782815	Argument	core		782654	0					
ANR	782816	Identifier	core		782654	0					
ANR	782817	Argument	"""md %s"""		782654	1					
ANR	782818	PrimaryExpression	"""md %s"""		782654	0					
ANR	782819	Argument	arg		782654	2					
ANR	782820	Identifier	arg		782654	0					
ANR	782821	ElseStatement	else		782654	0					
ANR	782822	CompoundStatement		28:3:662:700	782654	0					
ANR	782823	IdentifierDeclStatement	"char * res = r_syscmd_head ( arg , lines ) ;"	414:3:13996:14034	782654	0	True				
ANR	782824	IdentifierDecl	"* res = r_syscmd_head ( arg , lines )"		782654	0					
ANR	782825	IdentifierDeclType	char *		782654	0					
ANR	782826	Identifier	res		782654	1					
ANR	782827	AssignmentExpression	"* res = r_syscmd_head ( arg , lines )"		782654	2		=			
ANR	782828	Identifier	res		782654	0					
ANR	782829	CallExpression	"r_syscmd_head ( arg , lines )"		782654	1					
ANR	782830	Callee	r_syscmd_head		782654	0					
ANR	782831	Identifier	r_syscmd_head		782654	0					
ANR	782832	ArgumentList	arg		782654	1					
ANR	782833	Argument	arg		782654	0					
ANR	782834	Identifier	arg		782654	0					
ANR	782835	Argument	lines		782654	1					
ANR	782836	Identifier	lines		782654	0					
ANR	782837	IfStatement	if ( res )		782654	1					
ANR	782838	Condition	res	415:7:14043:14045	782654	0	True				
ANR	782839	Identifier	res		782654	0					
ANR	782840	CompoundStatement		29:12:714:714	782654	1					
ANR	782841	ExpressionStatement	r_cons_print ( res )	416:4:14054:14072	782654	0	True				
ANR	782842	CallExpression	r_cons_print ( res )		782654	0					
ANR	782843	Callee	r_cons_print		782654	0					
ANR	782844	Identifier	r_cons_print		782654	0					
ANR	782845	ArgumentList	res		782654	1					
ANR	782846	Argument	res		782654	0					
ANR	782847	Identifier	res		782654	0					
ANR	782848	ExpressionStatement	free ( res )	417:4:14078:14088	782654	1	True				
ANR	782849	CallExpression	free ( res )		782654	0					
ANR	782850	Callee	free		782654	0					
ANR	782851	Identifier	free		782654	0					
ANR	782852	ArgumentList	res		782654	1					
ANR	782853	Argument	res		782654	0					
ANR	782854	Identifier	res		782654	0					
ANR	782855	BreakStatement	break ;	420:2:14101:14106	782654	6	True				
ANR	782856	ExpressionStatement	free ( input )	422:1:14112:14124	782654	7	True				
ANR	782857	CallExpression	free ( input )		782654	0					
ANR	782858	Callee	free		782654	0					
ANR	782859	Identifier	free		782654	0					
ANR	782860	ArgumentList	input		782654	1					
ANR	782861	Argument	input		782654	0					
ANR	782862	Identifier	input		782654	0					
ANR	782863	ReturnStatement	return 0 ;	423:1:14127:14135	782654	8	True				
ANR	782864	PrimaryExpression	0		782654	0					
ANR	782865	ReturnType	static int		782654	1					
ANR	782866	Identifier	cmd_head		782654	2					
ANR	782867	ParameterList	"void * data , const char * _input"		782654	3					
ANR	782868	Parameter	void * data	387:21:13301:13310	782654	0	True				
ANR	782869	ParameterType	void *		782654	0					
ANR	782870	Identifier	data		782654	1					
ANR	782871	Parameter	const char * _input	387:33:13313:13330	782654	1	True				
ANR	782872	ParameterType	const char *		782654	0					
ANR	782873	Identifier	_input		782654	1					
ANR	782874	CFGEntryNode	ENTRY		782654		True				
ANR	782875	CFGExitNode	EXIT		782654		True				
ANR	782876	Symbol	atoi		782654						
ANR	782877	Symbol	res		782654						
ANR	782878	Symbol	data		782654						
ANR	782879	Symbol	r_syscmd_head		782654						
ANR	782880	Symbol	count		782654						
ANR	782881	Symbol	* input		782654						
ANR	782882	Symbol	* core		782654						
ANR	782883	Symbol	strchr		782654						
ANR	782884	Symbol	core		782654						
ANR	782885	Symbol	input		782654						
ANR	782886	Symbol	* count		782654						
ANR	782887	Symbol	tmp		782654						
ANR	782888	Symbol	arg		782654						
ANR	782889	Symbol	r_str_trim_ro		782654						
ANR	782890	Symbol	strdup		782654						
ANR	782891	Symbol	core -> fs		782654						
ANR	782892	Symbol	_input		782654						
ANR	782893	Symbol	lines		782654						
ANR	782894	Symbol	r_fs_check		782654						
ANR	782895	Function	cmd_uname	426:0:14140:15762							
ANR	782896	FunctionDef	"cmd_uname (void * data , const char * input)"		782895	0					
ANR	782897	CompoundStatement		426:52:14192:15762	782895	0					
ANR	782898	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	427:1:14195:14222	782895	0	True				
ANR	782899	IdentifierDecl	* core = ( RCore * ) data		782895	0					
ANR	782900	IdentifierDeclType	RCore *		782895	0					
ANR	782901	Identifier	core		782895	1					
ANR	782902	AssignmentExpression	* core = ( RCore * ) data		782895	2		=			
ANR	782903	Identifier	core		782895	0					
ANR	782904	CastExpression	( RCore * ) data		782895	1					
ANR	782905	CastTarget	RCore *		782895	0					
ANR	782906	Identifier	data		782895	1					
ANR	782907	SwitchStatement	switch ( input [ 0 ] )		782895	1					
ANR	782908	Condition	input [ 0 ]	428:9:14233:14240	782895	0	True				
ANR	782909	ArrayIndexing	input [ 0 ]		782895	0					
ANR	782910	Identifier	input		782895	0					
ANR	782911	PrimaryExpression	0		782895	1					
ANR	782912	CompoundStatement		3:19:50:50	782895	1					
ANR	782913	Label	case '?' :	429:1:14246:14254	782895	0	True				
ANR	782914	ExpressionStatement	"r_core_cmd_help ( data , help_msg_u )"	430:2:14266:14300	782895	1	True				
ANR	782915	CallExpression	"r_core_cmd_help ( data , help_msg_u )"		782895	0					
ANR	782916	Callee	r_core_cmd_help		782895	0					
ANR	782917	Identifier	r_core_cmd_help		782895	0					
ANR	782918	ArgumentList	data		782895	1					
ANR	782919	Argument	data		782895	0					
ANR	782920	Identifier	data		782895	0					
ANR	782921	Argument	help_msg_u		782895	1					
ANR	782922	Identifier	help_msg_u		782895	0					
ANR	782923	ReturnStatement	return 1 ;	431:2:14304:14312	782895	2	True				
ANR	782924	PrimaryExpression	1		782895	0					
ANR	782925	Label	case 'c' :	432:1:14315:14323	782895	3	True				
ANR	782926	SwitchStatement	switch ( input [ 1 ] )		782895	4					
ANR	782927	Condition	input [ 1 ]	433:10:14343:14350	782895	0	True				
ANR	782928	ArrayIndexing	input [ 1 ]		782895	0					
ANR	782929	Identifier	input		782895	0					
ANR	782930	PrimaryExpression	1		782895	1					
ANR	782931	CompoundStatement		8:20:160:160	782895	1					
ANR	782932	Label	case ' ' :	434:2:14357:14365	782895	0	True				
ANR	782933	CompoundStatement		11:3:214:244	782895	1					
ANR	782934	IdentifierDeclStatement	char * cmd = strdup ( input + 2 ) ;	435:3:14372:14402	782895	0	True				
ANR	782935	IdentifierDecl	* cmd = strdup ( input + 2 )		782895	0					
ANR	782936	IdentifierDeclType	char *		782895	0					
ANR	782937	Identifier	cmd		782895	1					
ANR	782938	AssignmentExpression	* cmd = strdup ( input + 2 )		782895	2		=			
ANR	782939	Identifier	cmd		782895	0					
ANR	782940	CallExpression	strdup ( input + 2 )		782895	1					
ANR	782941	Callee	strdup		782895	0					
ANR	782942	Identifier	strdup		782895	0					
ANR	782943	ArgumentList	input + 2		782895	1					
ANR	782944	Argument	input + 2		782895	0					
ANR	782945	AdditiveExpression	input + 2		782895	0		+			
ANR	782946	Identifier	input		782895	0					
ANR	782947	PrimaryExpression	2		782895	1					
ANR	782948	IdentifierDeclStatement	"char * rcmd = strchr ( cmd , ',' ) ;"	436:3:14407:14437	782895	1	True				
ANR	782949	IdentifierDecl	"* rcmd = strchr ( cmd , ',' )"		782895	0					
ANR	782950	IdentifierDeclType	char *		782895	0					
ANR	782951	Identifier	rcmd		782895	1					
ANR	782952	AssignmentExpression	"* rcmd = strchr ( cmd , ',' )"		782895	2		=			
ANR	782953	Identifier	rcmd		782895	0					
ANR	782954	CallExpression	"strchr ( cmd , ',' )"		782895	1					
ANR	782955	Callee	strchr		782895	0					
ANR	782956	Identifier	strchr		782895	0					
ANR	782957	ArgumentList	cmd		782895	1					
ANR	782958	Argument	cmd		782895	0					
ANR	782959	Identifier	cmd		782895	0					
ANR	782960	Argument	"','"		782895	1					
ANR	782961	PrimaryExpression	"','"		782895	0					
ANR	782962	IfStatement	if ( rcmd )		782895	2					
ANR	782963	Condition	rcmd	437:7:14446:14449	782895	0	True				
ANR	782964	Identifier	rcmd		782895	0					
ANR	782965	CompoundStatement		14:4:282:341	782895	1					
ANR	782966	ExpressionStatement	* rcmd ++ = 0	438:4:14458:14469	782895	0	True				
ANR	782967	AssignmentExpression	* rcmd ++ = 0		782895	0		=			
ANR	782968	UnaryOperationExpression	* rcmd ++		782895	0					
ANR	782969	UnaryOperator	*		782895	0					
ANR	782970	PostIncDecOperationExpression	rcmd ++		782895	1					
ANR	782971	Identifier	rcmd		782895	0					
ANR	782972	IncDec	++		782895	1					
ANR	782973	PrimaryExpression	0		782895	1					
ANR	782974	IdentifierDeclStatement	"RCoreUndo * undo = r_core_undo_new ( core -> offset , cmd , rcmd ) ;"	439:4:14475:14534	782895	1	True				
ANR	782975	IdentifierDecl	"* undo = r_core_undo_new ( core -> offset , cmd , rcmd )"		782895	0					
ANR	782976	IdentifierDeclType	RCoreUndo *		782895	0					
ANR	782977	Identifier	undo		782895	1					
ANR	782978	AssignmentExpression	"* undo = r_core_undo_new ( core -> offset , cmd , rcmd )"		782895	2		=			
ANR	782979	Identifier	undo		782895	0					
ANR	782980	CallExpression	"r_core_undo_new ( core -> offset , cmd , rcmd )"		782895	1					
ANR	782981	Callee	r_core_undo_new		782895	0					
ANR	782982	Identifier	r_core_undo_new		782895	0					
ANR	782983	ArgumentList	core -> offset		782895	1					
ANR	782984	Argument	core -> offset		782895	0					
ANR	782985	PtrMemberAccess	core -> offset		782895	0					
ANR	782986	Identifier	core		782895	0					
ANR	782987	Identifier	offset		782895	1					
ANR	782988	Argument	cmd		782895	1					
ANR	782989	Identifier	cmd		782895	0					
ANR	782990	Argument	rcmd		782895	2					
ANR	782991	Identifier	rcmd		782895	0					
ANR	782992	ExpressionStatement	"r_core_undo_push ( core , undo )"	440:4:14540:14569	782895	2	True				
ANR	782993	CallExpression	"r_core_undo_push ( core , undo )"		782895	0					
ANR	782994	Callee	r_core_undo_push		782895	0					
ANR	782995	Identifier	r_core_undo_push		782895	0					
ANR	782996	ArgumentList	core		782895	1					
ANR	782997	Argument	core		782895	0					
ANR	782998	Identifier	core		782895	0					
ANR	782999	Argument	undo		782895	1					
ANR	783000	Identifier	undo		782895	0					
ANR	783001	ElseStatement	else		782895	0					
ANR	783002	CompoundStatement		16:10:388:388	782895	0					
ANR	783003	ExpressionStatement	"eprintf ( ""Usage: uc [cmd] [revert-cmd]"" )"	442:4:14587:14627	782895	0	True				
ANR	783004	CallExpression	"eprintf ( ""Usage: uc [cmd] [revert-cmd]"" )"		782895	0					
ANR	783005	Callee	eprintf		782895	0					
ANR	783006	Identifier	eprintf		782895	0					
ANR	783007	ArgumentList	"""Usage: uc [cmd] [revert-cmd]"""		782895	1					
ANR	783008	Argument	"""Usage: uc [cmd] [revert-cmd]"""		782895	0					
ANR	783009	PrimaryExpression	"""Usage: uc [cmd] [revert-cmd]"""		782895	0					
ANR	783010	ExpressionStatement	free ( cmd )	444:3:14637:14647	782895	3	True				
ANR	783011	CallExpression	free ( cmd )		782895	0					
ANR	783012	Callee	free		782895	0					
ANR	783013	Identifier	free		782895	0					
ANR	783014	ArgumentList	cmd		782895	1					
ANR	783015	Argument	cmd		782895	0					
ANR	783016	Identifier	cmd		782895	0					
ANR	783017	BreakStatement	break ;	446:3:14657:14662	782895	2	True				
ANR	783018	Label	case '?' :	447:2:14666:14674	782895	3	True				
ANR	783019	ExpressionStatement	"eprintf ( ""Usage: uc [cmd],[revert-cmd]\\n"" )"	448:3:14679:14721	782895	4	True				
ANR	783020	CallExpression	"eprintf ( ""Usage: uc [cmd],[revert-cmd]\\n"" )"		782895	0					
ANR	783021	Callee	eprintf		782895	0					
ANR	783022	Identifier	eprintf		782895	0					
ANR	783023	ArgumentList	"""Usage: uc [cmd],[revert-cmd]\\n"""		782895	1					
ANR	783024	Argument	"""Usage: uc [cmd],[revert-cmd]\\n"""		782895	0					
ANR	783025	PrimaryExpression	"""Usage: uc [cmd],[revert-cmd]\\n"""		782895	0					
ANR	783026	ExpressionStatement	"eprintf ( "" uc. - list all reverts in current\\n"" )"	449:3:14726:14774	782895	5	True				
ANR	783027	CallExpression	"eprintf ( "" uc. - list all reverts in current\\n"" )"		782895	0					
ANR	783028	Callee	eprintf		782895	0					
ANR	783029	Identifier	eprintf		782895	0					
ANR	783030	ArgumentList	""" uc. - list all reverts in current\\n"""		782895	1					
ANR	783031	Argument	""" uc. - list all reverts in current\\n"""		782895	0					
ANR	783032	PrimaryExpression	""" uc. - list all reverts in current\\n"""		782895	0					
ANR	783033	ExpressionStatement	"eprintf ( "" uc* - list all core undos\\n"" )"	450:3:14779:14819	782895	6	True				
ANR	783034	CallExpression	"eprintf ( "" uc* - list all core undos\\n"" )"		782895	0					
ANR	783035	Callee	eprintf		782895	0					
ANR	783036	Identifier	eprintf		782895	0					
ANR	783037	ArgumentList	""" uc* - list all core undos\\n"""		782895	1					
ANR	783038	Argument	""" uc* - list all core undos\\n"""		782895	0					
ANR	783039	PrimaryExpression	""" uc* - list all core undos\\n"""		782895	0					
ANR	783040	ExpressionStatement	"eprintf ( "" uc  - list all core undos\\n"" )"	451:3:14824:14864	782895	7	True				
ANR	783041	CallExpression	"eprintf ( "" uc  - list all core undos\\n"" )"		782895	0					
ANR	783042	Callee	eprintf		782895	0					
ANR	783043	Identifier	eprintf		782895	0					
ANR	783044	ArgumentList	""" uc  - list all core undos\\n"""		782895	1					
ANR	783045	Argument	""" uc  - list all core undos\\n"""		782895	0					
ANR	783046	PrimaryExpression	""" uc  - list all core undos\\n"""		782895	0					
ANR	783047	ExpressionStatement	"eprintf ( "" uc- - undo last action\\n"" )"	452:3:14869:14906	782895	8	True				
ANR	783048	CallExpression	"eprintf ( "" uc- - undo last action\\n"" )"		782895	0					
ANR	783049	Callee	eprintf		782895	0					
ANR	783050	Identifier	eprintf		782895	0					
ANR	783051	ArgumentList	""" uc- - undo last action\\n"""		782895	1					
ANR	783052	Argument	""" uc- - undo last action\\n"""		782895	0					
ANR	783053	PrimaryExpression	""" uc- - undo last action\\n"""		782895	0					
ANR	783054	BreakStatement	break ;	453:3:14911:14916	782895	9	True				
ANR	783055	Label	case '.' :	454:2:14920:14928	782895	10	True				
ANR	783056	CompoundStatement		29:12:737:737	782895	11					
ANR	783057	Statement	RCoreUndoCondition	455:3:14935:14952	782895	0	True				
ANR	783058	Statement	cond	455:22:14954:14957	782895	1	True				
ANR	783059	Statement	=	455:27:14959:14959	782895	2	True				
ANR	783060	CompoundStatement		30:29:768:768	782895	3					
ANR	783061	Statement	.	456:4:14967:14967	782895	0	True				
ANR	783062	Statement	addr	456:5:14968:14971	782895	1	True				
ANR	783063	Statement	=	456:10:14973:14973	782895	2	True				
ANR	783064	Statement	core	456:12:14975:14978	782895	3	True				
ANR	783065	Statement	->	456:16:14979:14980	782895	4	True				
ANR	783066	Statement	offset	456:18:14981:14986	782895	5	True				
ANR	783067	Statement	","	456:24:14987:14987	782895	6	True				
ANR	783068	Statement	.	457:4:14993:14993	782895	7	True				
ANR	783069	Statement	minstamp	457:5:14994:15001	782895	8	True				
ANR	783070	Statement	=	457:14:15003:15003	782895	9	True				
ANR	783071	Statement	0	457:16:15005:15005	782895	10	True				
ANR	783072	Statement	","	457:17:15006:15006	782895	11	True				
ANR	783073	Statement	.	458:4:15012:15012	782895	12	True				
ANR	783074	Statement	glob	458:5:15013:15016	782895	13	True				
ANR	783075	Statement	=	458:10:15018:15018	782895	14	True				
ANR	783076	Statement	NULL	458:12:15020:15023	782895	15	True				
ANR	783077	ExpressionStatement		459:4:15029:15029	782895	4	True				
ANR	783078	ExpressionStatement	"r_core_undo_print ( core , 1 , & cond )"	460:3:15034:15068	782895	5	True				
ANR	783079	CallExpression	"r_core_undo_print ( core , 1 , & cond )"		782895	0					
ANR	783080	Callee	r_core_undo_print		782895	0					
ANR	783081	Identifier	r_core_undo_print		782895	0					
ANR	783082	ArgumentList	core		782895	1					
ANR	783083	Argument	core		782895	0					
ANR	783084	Identifier	core		782895	0					
ANR	783085	Argument	1		782895	1					
ANR	783086	PrimaryExpression	1		782895	0					
ANR	783087	Argument	& cond		782895	2					
ANR	783088	UnaryOperationExpression	& cond		782895	0					
ANR	783089	UnaryOperator	&		782895	0					
ANR	783090	Identifier	cond		782895	1					
ANR	783091	BreakStatement	break ;	461:5:15075:15080	782895	12	True				
ANR	783092	Label	case '*' :	462:2:15084:15092	782895	13	True				
ANR	783093	ExpressionStatement	"r_core_undo_print ( core , 1 , NULL )"	463:3:15097:15130	782895	14	True				
ANR	783094	CallExpression	"r_core_undo_print ( core , 1 , NULL )"		782895	0					
ANR	783095	Callee	r_core_undo_print		782895	0					
ANR	783096	Identifier	r_core_undo_print		782895	0					
ANR	783097	ArgumentList	core		782895	1					
ANR	783098	Argument	core		782895	0					
ANR	783099	Identifier	core		782895	0					
ANR	783100	Argument	1		782895	1					
ANR	783101	PrimaryExpression	1		782895	0					
ANR	783102	Argument	NULL		782895	2					
ANR	783103	Identifier	NULL		782895	0					
ANR	783104	BreakStatement	break ;	464:3:15135:15140	782895	15	True				
ANR	783105	Label	case '-' :	465:2:15144:15152	782895	16	True				
ANR	783106	ExpressionStatement	r_core_undo_pop ( core )	466:3:15166:15188	782895	17	True				
ANR	783107	CallExpression	r_core_undo_pop ( core )		782895	0					
ANR	783108	Callee	r_core_undo_pop		782895	0					
ANR	783109	Identifier	r_core_undo_pop		782895	0					
ANR	783110	ArgumentList	core		782895	1					
ANR	783111	Argument	core		782895	0					
ANR	783112	Identifier	core		782895	0					
ANR	783113	BreakStatement	break ;	467:3:15193:15198	782895	18	True				
ANR	783114	Label	default :	468:2:15202:15209	782895	19	True				
ANR	783115	Identifier	default		782895	0					
ANR	783116	ExpressionStatement	"r_core_undo_print ( core , 0 , NULL )"	469:3:15214:15247	782895	20	True				
ANR	783117	CallExpression	"r_core_undo_print ( core , 0 , NULL )"		782895	0					
ANR	783118	Callee	r_core_undo_print		782895	0					
ANR	783119	Identifier	r_core_undo_print		782895	0					
ANR	783120	ArgumentList	core		782895	1					
ANR	783121	Argument	core		782895	0					
ANR	783122	Identifier	core		782895	0					
ANR	783123	Argument	0		782895	1					
ANR	783124	PrimaryExpression	0		782895	0					
ANR	783125	Argument	NULL		782895	2					
ANR	783126	Identifier	NULL		782895	0					
ANR	783127	BreakStatement	break ;	470:3:15252:15257	782895	21	True				
ANR	783128	ReturnStatement	return 1 ;	472:2:15265:15273	782895	5	True				
ANR	783129	PrimaryExpression	1		782895	0					
ANR	783130	Label	case 's' :	473:1:15276:15284	782895	6	True				
ANR	783131	ExpressionStatement	"r_core_cmdf ( data , ""s-%s"" , input + 1 )"	474:2:15296:15333	782895	7	True				
ANR	783132	CallExpression	"r_core_cmdf ( data , ""s-%s"" , input + 1 )"		782895	0					
ANR	783133	Callee	r_core_cmdf		782895	0					
ANR	783134	Identifier	r_core_cmdf		782895	0					
ANR	783135	ArgumentList	data		782895	1					
ANR	783136	Argument	data		782895	0					
ANR	783137	Identifier	data		782895	0					
ANR	783138	Argument	"""s-%s"""		782895	1					
ANR	783139	PrimaryExpression	"""s-%s"""		782895	0					
ANR	783140	Argument	input + 1		782895	2					
ANR	783141	AdditiveExpression	input + 1		782895	0		+			
ANR	783142	Identifier	input		782895	0					
ANR	783143	PrimaryExpression	1		782895	1					
ANR	783144	ReturnStatement	return 1 ;	475:2:15337:15345	782895	8	True				
ANR	783145	PrimaryExpression	1		782895	0					
ANR	783146	Label	case 'w' :	476:1:15348:15356	782895	9	True				
ANR	783147	ExpressionStatement	"r_core_cmdf ( data , ""wc%s"" , input + 1 )"	477:2:15368:15405	782895	10	True				
ANR	783148	CallExpression	"r_core_cmdf ( data , ""wc%s"" , input + 1 )"		782895	0					
ANR	783149	Callee	r_core_cmdf		782895	0					
ANR	783150	Identifier	r_core_cmdf		782895	0					
ANR	783151	ArgumentList	data		782895	1					
ANR	783152	Argument	data		782895	0					
ANR	783153	Identifier	data		782895	0					
ANR	783154	Argument	"""wc%s"""		782895	1					
ANR	783155	PrimaryExpression	"""wc%s"""		782895	0					
ANR	783156	Argument	input + 1		782895	2					
ANR	783157	AdditiveExpression	input + 1		782895	0		+			
ANR	783158	Identifier	input		782895	0					
ANR	783159	PrimaryExpression	1		782895	1					
ANR	783160	ReturnStatement	return 1 ;	478:2:15409:15417	782895	11	True				
ANR	783161	PrimaryExpression	1		782895	0					
ANR	783162	Label	case 'n' :	479:1:15420:15428	782895	12	True				
ANR	783163	IfStatement	if ( input [ 1 ] == 'i' && input [ 2 ] == 'q' )		782895	13					
ANR	783164	Condition	input [ 1 ] == 'i' && input [ 2 ] == 'q'	480:6:15444:15477	782895	0	True				
ANR	783165	AndExpression	input [ 1 ] == 'i' && input [ 2 ] == 'q'		782895	0		&&			
ANR	783166	EqualityExpression	input [ 1 ] == 'i'		782895	0		==			
ANR	783167	ArrayIndexing	input [ 1 ]		782895	0					
ANR	783168	Identifier	input		782895	0					
ANR	783169	PrimaryExpression	1		782895	1					
ANR	783170	PrimaryExpression	'i'		782895	1					
ANR	783171	EqualityExpression	input [ 2 ] == 'q'		782895	1		==			
ANR	783172	ArrayIndexing	input [ 2 ]		782895	0					
ANR	783173	Identifier	input		782895	0					
ANR	783174	PrimaryExpression	2		782895	1					
ANR	783175	PrimaryExpression	'q'		782895	1					
ANR	783176	CompoundStatement		55:42:1287:1287	782895	1					
ANR	783177	ExpressionStatement	"cmd_uniq ( core , input )"	481:3:15485:15507	782895	0	True				
ANR	783178	CallExpression	"cmd_uniq ( core , input )"		782895	0					
ANR	783179	Callee	cmd_uniq		782895	0					
ANR	783180	Identifier	cmd_uniq		782895	0					
ANR	783181	ArgumentList	core		782895	1					
ANR	783182	Argument	core		782895	0					
ANR	783183	Identifier	core		782895	0					
ANR	783184	Argument	input		782895	1					
ANR	783185	Identifier	input		782895	0					
ANR	783186	ReturnStatement	return 1 ;	483:2:15515:15523	782895	14	True				
ANR	783187	PrimaryExpression	1		782895	0					
ANR	783188	IdentifierDeclStatement	struct utsname un ;	486:1:15542:15559	782895	2	True				
ANR	783189	IdentifierDecl	un		782895	0					
ANR	783190	IdentifierDeclType	struct utsname		782895	0					
ANR	783191	Identifier	un		782895	1					
ANR	783192	ExpressionStatement	uname ( & un )	487:1:15562:15573	782895	3	True				
ANR	783193	CallExpression	uname ( & un )		782895	0					
ANR	783194	Callee	uname		782895	0					
ANR	783195	Identifier	uname		782895	0					
ANR	783196	ArgumentList	& un		782895	1					
ANR	783197	Argument	& un		782895	0					
ANR	783198	UnaryOperationExpression	& un		782895	0					
ANR	783199	UnaryOperator	&		782895	0					
ANR	783200	Identifier	un		782895	1					
ANR	783201	ExpressionStatement	"r_cons_printf ( ""%s %s %s %s\\n"" , un . sysname , un . nodename , un . release , un . machine )"	488:1:15576:15658	782895	4	True				
ANR	783202	CallExpression	"r_cons_printf ( ""%s %s %s %s\\n"" , un . sysname , un . nodename , un . release , un . machine )"		782895	0					
ANR	783203	Callee	r_cons_printf		782895	0					
ANR	783204	Identifier	r_cons_printf		782895	0					
ANR	783205	ArgumentList	"""%s %s %s %s\\n"""		782895	1					
ANR	783206	Argument	"""%s %s %s %s\\n"""		782895	0					
ANR	783207	PrimaryExpression	"""%s %s %s %s\\n"""		782895	0					
ANR	783208	Argument	un . sysname		782895	1					
ANR	783209	MemberAccess	un . sysname		782895	0					
ANR	783210	Identifier	un		782895	0					
ANR	783211	Identifier	sysname		782895	1					
ANR	783212	Argument	un . nodename		782895	2					
ANR	783213	MemberAccess	un . nodename		782895	0					
ANR	783214	Identifier	un		782895	0					
ANR	783215	Identifier	nodename		782895	1					
ANR	783216	Argument	un . release		782895	3					
ANR	783217	MemberAccess	un . release		782895	0					
ANR	783218	Identifier	un		782895	0					
ANR	783219	Identifier	release		782895	1					
ANR	783220	Argument	un . machine		782895	4					
ANR	783221	MemberAccess	un . machine		782895	0					
ANR	783222	Identifier	un		782895	0					
ANR	783223	Identifier	machine		782895	1					
ANR	783224	ReturnStatement	return 0 ;	495:1:15752:15760	782895	5	True				
ANR	783225	PrimaryExpression	0		782895	0					
ANR	783226	ReturnType	static int		782895	1					
ANR	783227	Identifier	cmd_uname		782895	2					
ANR	783228	ParameterList	"void * data , const char * input"		782895	3					
ANR	783229	Parameter	void * data	426:21:14161:14170	782895	0	True				
ANR	783230	ParameterType	void *		782895	0					
ANR	783231	Identifier	data		782895	1					
ANR	783232	Parameter	const char * input	426:33:14173:14189	782895	1	True				
ANR	783233	ParameterType	const char *		782895	0					
ANR	783234	Identifier	input		782895	1					
ANR	783235	CFGEntryNode	ENTRY		782895		True				
ANR	783236	CFGExitNode	EXIT		782895		True				
ANR	783237	Symbol	* rcmd ++		782895						
ANR	783238	Symbol	& un		782895						
ANR	783239	Symbol	NULL		782895						
ANR	783240	Symbol	data		782895						
ANR	783241	Symbol	* input		782895						
ANR	783242	Symbol	* core		782895						
ANR	783243	Symbol	r_core_undo_new		782895						
ANR	783244	Symbol	un . machine		782895						
ANR	783245	Symbol	strchr		782895						
ANR	783246	Symbol	core -> offset		782895						
ANR	783247	Symbol	un . nodename		782895						
ANR	783248	Symbol	input		782895						
ANR	783249	Symbol	core		782895						
ANR	783250	Symbol	undo		782895						
ANR	783251	Symbol	& cond		782895						
ANR	783252	Symbol	un . release		782895						
ANR	783253	Symbol	help_msg_u		782895						
ANR	783254	Symbol	un		782895						
ANR	783255	Symbol	cmd		782895						
ANR	783256	Symbol	strdup		782895						
ANR	783257	Symbol	un . sysname		782895						
ANR	783258	Symbol	rcmd		782895						
ANR	783259	Function	cmd_alias	498:0:15765:18028							
ANR	783260	FunctionDef	"cmd_alias (void * data , const char * input)"		783259	0					
ANR	783261	CompoundStatement		498:52:15817:18028	783259	0					
ANR	783262	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	499:1:15820:15847	783259	0	True				
ANR	783263	IdentifierDecl	* core = ( RCore * ) data		783259	0					
ANR	783264	IdentifierDeclType	RCore *		783259	0					
ANR	783265	Identifier	core		783259	1					
ANR	783266	AssignmentExpression	* core = ( RCore * ) data		783259	2		=			
ANR	783267	Identifier	core		783259	0					
ANR	783268	CastExpression	( RCore * ) data		783259	1					
ANR	783269	CastTarget	RCore *		783259	0					
ANR	783270	Identifier	data		783259	1					
ANR	783271	IfStatement	if ( * input == '?' )		783259	1					
ANR	783272	Condition	* input == '?'	500:5:15854:15866	783259	0	True				
ANR	783273	EqualityExpression	* input == '?'		783259	0		==			
ANR	783274	UnaryOperationExpression	* input		783259	0					
ANR	783275	UnaryOperator	*		783259	0					
ANR	783276	Identifier	input		783259	1					
ANR	783277	PrimaryExpression	'?'		783259	1					
ANR	783278	CompoundStatement		3:20:51:51	783259	1					
ANR	783279	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dollar )"	501:2:15873:15912	783259	0	True				
ANR	783280	CallExpression	"r_core_cmd_help ( core , help_msg_dollar )"		783259	0					
ANR	783281	Callee	r_core_cmd_help		783259	0					
ANR	783282	Identifier	r_core_cmd_help		783259	0					
ANR	783283	ArgumentList	core		783259	1					
ANR	783284	Argument	core		783259	0					
ANR	783285	Identifier	core		783259	0					
ANR	783286	Argument	help_msg_dollar		783259	1					
ANR	783287	Identifier	help_msg_dollar		783259	0					
ANR	783288	ReturnStatement	return 0 ;	502:2:15916:15924	783259	1	True				
ANR	783289	PrimaryExpression	0		783259	0					
ANR	783290	IdentifierDeclStatement	int i = strlen ( input ) ;	504:1:15930:15952	783259	2	True				
ANR	783291	IdentifierDecl	i = strlen ( input )		783259	0					
ANR	783292	IdentifierDeclType	int		783259	0					
ANR	783293	Identifier	i		783259	1					
ANR	783294	AssignmentExpression	i = strlen ( input )		783259	2		=			
ANR	783295	Identifier	i		783259	0					
ANR	783296	CallExpression	strlen ( input )		783259	1					
ANR	783297	Callee	strlen		783259	0					
ANR	783298	Identifier	strlen		783259	0					
ANR	783299	ArgumentList	input		783259	1					
ANR	783300	Argument	input		783259	0					
ANR	783301	Identifier	input		783259	0					
ANR	783302	IdentifierDeclStatement	char * buf = malloc ( i + 2 ) ;	505:1:15955:15981	783259	3	True				
ANR	783303	IdentifierDecl	* buf = malloc ( i + 2 )		783259	0					
ANR	783304	IdentifierDeclType	char *		783259	0					
ANR	783305	Identifier	buf		783259	1					
ANR	783306	AssignmentExpression	* buf = malloc ( i + 2 )		783259	2		=			
ANR	783307	Identifier	buf		783259	0					
ANR	783308	CallExpression	malloc ( i + 2 )		783259	1					
ANR	783309	Callee	malloc		783259	0					
ANR	783310	Identifier	malloc		783259	0					
ANR	783311	ArgumentList	i + 2		783259	1					
ANR	783312	Argument	i + 2		783259	0					
ANR	783313	AdditiveExpression	i + 2		783259	0		+			
ANR	783314	Identifier	i		783259	0					
ANR	783315	PrimaryExpression	2		783259	1					
ANR	783316	IfStatement	if ( ! buf )		783259	4					
ANR	783317	Condition	! buf	506:5:15988:15991	783259	0	True				
ANR	783318	UnaryOperationExpression	! buf		783259	0					
ANR	783319	UnaryOperator	!		783259	0					
ANR	783320	Identifier	buf		783259	1					
ANR	783321	CompoundStatement		9:11:176:176	783259	1					
ANR	783322	ReturnStatement	return 0 ;	507:2:15998:16006	783259	0	True				
ANR	783323	PrimaryExpression	0		783259	0					
ANR	783324	ExpressionStatement	* buf = '$'	509:1:16012:16022	783259	5	True				
ANR	783325	AssignmentExpression	* buf = '$'		783259	0		=			
ANR	783326	UnaryOperationExpression	* buf		783259	0					
ANR	783327	UnaryOperator	*		783259	0					
ANR	783328	Identifier	buf		783259	1					
ANR	783329	PrimaryExpression	'$'		783259	1					
ANR	783330	ExpressionStatement	"memcpy ( buf + 1 , input , i + 1 )"	510:1:16057:16087	783259	6	True				
ANR	783331	CallExpression	"memcpy ( buf + 1 , input , i + 1 )"		783259	0					
ANR	783332	Callee	memcpy		783259	0					
ANR	783333	Identifier	memcpy		783259	0					
ANR	783334	ArgumentList	buf + 1		783259	1					
ANR	783335	Argument	buf + 1		783259	0					
ANR	783336	AdditiveExpression	buf + 1		783259	0		+			
ANR	783337	Identifier	buf		783259	0					
ANR	783338	PrimaryExpression	1		783259	1					
ANR	783339	Argument	input		783259	1					
ANR	783340	Identifier	input		783259	0					
ANR	783341	Argument	i + 1		783259	2					
ANR	783342	AdditiveExpression	i + 1		783259	0		+			
ANR	783343	Identifier	i		783259	0					
ANR	783344	PrimaryExpression	1		783259	1					
ANR	783345	IdentifierDeclStatement	"char * q = strchr ( buf , ' ' ) ;"	511:1:16090:16117	783259	7	True				
ANR	783346	IdentifierDecl	"* q = strchr ( buf , ' ' )"		783259	0					
ANR	783347	IdentifierDeclType	char *		783259	0					
ANR	783348	Identifier	q		783259	1					
ANR	783349	AssignmentExpression	"* q = strchr ( buf , ' ' )"		783259	2		=			
ANR	783350	Identifier	q		783259	0					
ANR	783351	CallExpression	"strchr ( buf , ' ' )"		783259	1					
ANR	783352	Callee	strchr		783259	0					
ANR	783353	Identifier	strchr		783259	0					
ANR	783354	ArgumentList	buf		783259	1					
ANR	783355	Argument	buf		783259	0					
ANR	783356	Identifier	buf		783259	0					
ANR	783357	Argument	' '		783259	1					
ANR	783358	PrimaryExpression	' '		783259	0					
ANR	783359	IdentifierDeclStatement	"char * def = strchr ( buf , '=' ) ;"	512:1:16120:16149	783259	8	True				
ANR	783360	IdentifierDecl	"* def = strchr ( buf , '=' )"		783259	0					
ANR	783361	IdentifierDeclType	char *		783259	0					
ANR	783362	Identifier	def		783259	1					
ANR	783363	AssignmentExpression	"* def = strchr ( buf , '=' )"		783259	2		=			
ANR	783364	Identifier	def		783259	0					
ANR	783365	CallExpression	"strchr ( buf , '=' )"		783259	1					
ANR	783366	Callee	strchr		783259	0					
ANR	783367	Identifier	strchr		783259	0					
ANR	783368	ArgumentList	buf		783259	1					
ANR	783369	Argument	buf		783259	0					
ANR	783370	Identifier	buf		783259	0					
ANR	783371	Argument	'='		783259	1					
ANR	783372	PrimaryExpression	'='		783259	0					
ANR	783373	IdentifierDeclStatement	"char * desc = strchr ( buf , '?' ) ;"	513:1:16152:16182	783259	9	True				
ANR	783374	IdentifierDecl	"* desc = strchr ( buf , '?' )"		783259	0					
ANR	783375	IdentifierDeclType	char *		783259	0					
ANR	783376	Identifier	desc		783259	1					
ANR	783377	AssignmentExpression	"* desc = strchr ( buf , '?' )"		783259	2		=			
ANR	783378	Identifier	desc		783259	0					
ANR	783379	CallExpression	"strchr ( buf , '?' )"		783259	1					
ANR	783380	Callee	strchr		783259	0					
ANR	783381	Identifier	strchr		783259	0					
ANR	783382	ArgumentList	buf		783259	1					
ANR	783383	Argument	buf		783259	0					
ANR	783384	Identifier	buf		783259	0					
ANR	783385	Argument	'?'		783259	1					
ANR	783386	PrimaryExpression	'?'		783259	0					
ANR	783387	IfStatement	if ( ( def && q && ( def < q ) ) || ( def && ! q ) )		783259	10					
ANR	783388	Condition	( def && q && ( def < q ) ) || ( def && ! q )	516:5:16210:16247	783259	0	True				
ANR	783389	OrExpression	( def && q && ( def < q ) ) || ( def && ! q )		783259	0		||			
ANR	783390	AndExpression	def && q && ( def < q )		783259	0		&&			
ANR	783391	Identifier	def		783259	0					
ANR	783392	AndExpression	q && ( def < q )		783259	1		&&			
ANR	783393	Identifier	q		783259	0					
ANR	783394	RelationalExpression	def < q		783259	1		<			
ANR	783395	Identifier	def		783259	0					
ANR	783396	Identifier	q		783259	1					
ANR	783397	AndExpression	def && ! q		783259	1		&&			
ANR	783398	Identifier	def		783259	0					
ANR	783399	UnaryOperationExpression	! q		783259	1					
ANR	783400	UnaryOperator	!		783259	0					
ANR	783401	Identifier	q		783259	1					
ANR	783402	CompoundStatement		21:2:450:475	783259	1					
ANR	783403	ExpressionStatement	* def ++ = 0	517:2:16254:16264	783259	0	True				
ANR	783404	AssignmentExpression	* def ++ = 0		783259	0		=			
ANR	783405	UnaryOperationExpression	* def ++		783259	0					
ANR	783406	UnaryOperator	*		783259	0					
ANR	783407	PostIncDecOperationExpression	def ++		783259	1					
ANR	783408	Identifier	def		783259	0					
ANR	783409	IncDec	++		783259	1					
ANR	783410	PrimaryExpression	0		783259	1					
ANR	783411	IdentifierDeclStatement	size_t len = strlen ( def ) ;	518:2:16268:16293	783259	1	True				
ANR	783412	IdentifierDecl	len = strlen ( def )		783259	0					
ANR	783413	IdentifierDeclType	size_t		783259	0					
ANR	783414	Identifier	len		783259	1					
ANR	783415	AssignmentExpression	len = strlen ( def )		783259	2		=			
ANR	783416	Identifier	len		783259	0					
ANR	783417	CallExpression	strlen ( def )		783259	1					
ANR	783418	Callee	strlen		783259	0					
ANR	783419	Identifier	strlen		783259	0					
ANR	783420	ArgumentList	def		783259	1					
ANR	783421	Argument	def		783259	0					
ANR	783422	Identifier	def		783259	0					
ANR	783423	IfStatement	if ( len > 0 && ( def [ 0 ] == '\\'' ) && ( def [ len - 1 ] == '\\'' ) )		783259	2					
ANR	783424	Condition	len > 0 && ( def [ 0 ] == '\\'' ) && ( def [ len - 1 ] == '\\'' )	520:6:16323:16375	783259	0	True				
ANR	783425	AndExpression	len > 0 && ( def [ 0 ] == '\\'' ) && ( def [ len - 1 ] == '\\'' )		783259	0		&&			
ANR	783426	RelationalExpression	len > 0		783259	0		>			
ANR	783427	Identifier	len		783259	0					
ANR	783428	PrimaryExpression	0		783259	1					
ANR	783429	AndExpression	( def [ 0 ] == '\\'' ) && ( def [ len - 1 ] == '\\'' )		783259	1		&&			
ANR	783430	EqualityExpression	def [ 0 ] == '\\''		783259	0		==			
ANR	783431	ArrayIndexing	def [ 0 ]		783259	0					
ANR	783432	Identifier	def		783259	0					
ANR	783433	PrimaryExpression	0		783259	1					
ANR	783434	PrimaryExpression	'\\''		783259	1					
ANR	783435	EqualityExpression	def [ len - 1 ] == '\\''		783259	1		==			
ANR	783436	ArrayIndexing	def [ len - 1 ]		783259	0					
ANR	783437	Identifier	def		783259	0					
ANR	783438	AdditiveExpression	len - 1		783259	1		-			
ANR	783439	Identifier	len		783259	0					
ANR	783440	PrimaryExpression	1		783259	1					
ANR	783441	PrimaryExpression	'\\''		783259	1					
ANR	783442	CompoundStatement		23:61:560:560	783259	1					
ANR	783443	ExpressionStatement	def [ len - 1 ] = 0x00	521:3:16383:16402	783259	0	True				
ANR	783444	AssignmentExpression	def [ len - 1 ] = 0x00		783259	0		=			
ANR	783445	ArrayIndexing	def [ len - 1 ]		783259	0					
ANR	783446	Identifier	def		783259	0					
ANR	783447	AdditiveExpression	len - 1		783259	1		-			
ANR	783448	Identifier	len		783259	0					
ANR	783449	PrimaryExpression	1		783259	1					
ANR	783450	PrimaryExpression	0x00		783259	1					
ANR	783451	ExpressionStatement	def ++	522:3:16407:16412	783259	1	True				
ANR	783452	PostIncDecOperationExpression	def ++		783259	0					
ANR	783453	Identifier	def		783259	0					
ANR	783454	IncDec	++		783259	1					
ANR	783455	IfStatement	if ( ! q || ( q && q > def ) )		783259	3					
ANR	783456	Condition	! q || ( q && q > def )	524:6:16424:16443	783259	0	True				
ANR	783457	OrExpression	! q || ( q && q > def )		783259	0		||			
ANR	783458	UnaryOperationExpression	! q		783259	0					
ANR	783459	UnaryOperator	!		783259	0					
ANR	783460	Identifier	q		783259	1					
ANR	783461	AndExpression	q && q > def		783259	1		&&			
ANR	783462	Identifier	q		783259	0					
ANR	783463	RelationalExpression	q > def		783259	1		>			
ANR	783464	Identifier	q		783259	0					
ANR	783465	Identifier	def		783259	1					
ANR	783466	CompoundStatement		27:28:628:628	783259	1					
ANR	783467	IfStatement	if ( * def )		783259	0					
ANR	783468	Condition	* def	525:7:16455:16458	783259	0	True				
ANR	783469	UnaryOperationExpression	* def		783259	0					
ANR	783470	UnaryOperator	*		783259	0					
ANR	783471	Identifier	def		783259	1					
ANR	783472	CompoundStatement		28:13:643:643	783259	1					
ANR	783473	IfStatement	"if ( ! strcmp ( def , ""-"" ) )"		783259	0					
ANR	783474	Condition	"! strcmp ( def , ""-"" )"	526:8:16471:16488	783259	0	True				
ANR	783475	UnaryOperationExpression	"! strcmp ( def , ""-"" )"		783259	0					
ANR	783476	UnaryOperator	!		783259	0					
ANR	783477	CallExpression	"strcmp ( def , ""-"" )"		783259	1					
ANR	783478	Callee	strcmp		783259	0					
ANR	783479	Identifier	strcmp		783259	0					
ANR	783480	ArgumentList	def		783259	1					
ANR	783481	Argument	def		783259	0					
ANR	783482	Identifier	def		783259	0					
ANR	783483	Argument	"""-"""		783259	1					
ANR	783484	PrimaryExpression	"""-"""		783259	0					
ANR	783485	CompoundStatement		31:5:733:766	783259	1					
ANR	783486	IdentifierDeclStatement	"char * v = r_cmd_alias_get ( core -> rcmd , buf , 0 ) ;"	527:5:16498:16544	783259	0	True				
ANR	783487	IdentifierDecl	"* v = r_cmd_alias_get ( core -> rcmd , buf , 0 )"		783259	0					
ANR	783488	IdentifierDeclType	char *		783259	0					
ANR	783489	Identifier	v		783259	1					
ANR	783490	AssignmentExpression	"* v = r_cmd_alias_get ( core -> rcmd , buf , 0 )"		783259	2		=			
ANR	783491	Identifier	v		783259	0					
ANR	783492	CallExpression	"r_cmd_alias_get ( core -> rcmd , buf , 0 )"		783259	1					
ANR	783493	Callee	r_cmd_alias_get		783259	0					
ANR	783494	Identifier	r_cmd_alias_get		783259	0					
ANR	783495	ArgumentList	core -> rcmd		783259	1					
ANR	783496	Argument	core -> rcmd		783259	0					
ANR	783497	PtrMemberAccess	core -> rcmd		783259	0					
ANR	783498	Identifier	core		783259	0					
ANR	783499	Identifier	rcmd		783259	1					
ANR	783500	Argument	buf		783259	1					
ANR	783501	Identifier	buf		783259	0					
ANR	783502	Argument	0		783259	2					
ANR	783503	PrimaryExpression	0		783259	0					
ANR	783504	IdentifierDeclStatement	"char * n = r_cons_editor ( NULL , v ) ;"	528:5:16551:16584	783259	1	True				
ANR	783505	IdentifierDecl	"* n = r_cons_editor ( NULL , v )"		783259	0					
ANR	783506	IdentifierDeclType	char *		783259	0					
ANR	783507	Identifier	n		783259	1					
ANR	783508	AssignmentExpression	"* n = r_cons_editor ( NULL , v )"		783259	2		=			
ANR	783509	Identifier	n		783259	0					
ANR	783510	CallExpression	"r_cons_editor ( NULL , v )"		783259	1					
ANR	783511	Callee	r_cons_editor		783259	0					
ANR	783512	Identifier	r_cons_editor		783259	0					
ANR	783513	ArgumentList	NULL		783259	1					
ANR	783514	Argument	NULL		783259	0					
ANR	783515	Identifier	NULL		783259	0					
ANR	783516	Argument	v		783259	1					
ANR	783517	Identifier	v		783259	0					
ANR	783518	IfStatement	if ( n )		783259	2					
ANR	783519	Condition	n	529:9:16595:16595	783259	0	True				
ANR	783520	Identifier	n		783259	0					
ANR	783521	CompoundStatement		32:12:780:780	783259	1					
ANR	783522	ExpressionStatement	"r_cmd_alias_set ( core -> rcmd , buf , n , 0 )"	530:6:16606:16645	783259	0	True				
ANR	783523	CallExpression	"r_cmd_alias_set ( core -> rcmd , buf , n , 0 )"		783259	0					
ANR	783524	Callee	r_cmd_alias_set		783259	0					
ANR	783525	Identifier	r_cmd_alias_set		783259	0					
ANR	783526	ArgumentList	core -> rcmd		783259	1					
ANR	783527	Argument	core -> rcmd		783259	0					
ANR	783528	PtrMemberAccess	core -> rcmd		783259	0					
ANR	783529	Identifier	core		783259	0					
ANR	783530	Identifier	rcmd		783259	1					
ANR	783531	Argument	buf		783259	1					
ANR	783532	Identifier	buf		783259	0					
ANR	783533	Argument	n		783259	2					
ANR	783534	Identifier	n		783259	0					
ANR	783535	Argument	0		783259	3					
ANR	783536	PrimaryExpression	0		783259	0					
ANR	783537	ExpressionStatement	free ( n )	531:6:16653:16661	783259	1	True				
ANR	783538	CallExpression	free ( n )		783259	0					
ANR	783539	Callee	free		783259	0					
ANR	783540	Identifier	free		783259	0					
ANR	783541	ArgumentList	n		783259	1					
ANR	783542	Argument	n		783259	0					
ANR	783543	Identifier	n		783259	0					
ANR	783544	ElseStatement	else		783259	0					
ANR	783545	CompoundStatement		36:11:863:863	783259	0					
ANR	783546	ExpressionStatement	"r_cmd_alias_set ( core -> rcmd , buf , def , 0 )"	534:5:16688:16729	783259	0	True				
ANR	783547	CallExpression	"r_cmd_alias_set ( core -> rcmd , buf , def , 0 )"		783259	0					
ANR	783548	Callee	r_cmd_alias_set		783259	0					
ANR	783549	Identifier	r_cmd_alias_set		783259	0					
ANR	783550	ArgumentList	core -> rcmd		783259	1					
ANR	783551	Argument	core -> rcmd		783259	0					
ANR	783552	PtrMemberAccess	core -> rcmd		783259	0					
ANR	783553	Identifier	core		783259	0					
ANR	783554	Identifier	rcmd		783259	1					
ANR	783555	Argument	buf		783259	1					
ANR	783556	Identifier	buf		783259	0					
ANR	783557	Argument	def		783259	2					
ANR	783558	Identifier	def		783259	0					
ANR	783559	Argument	0		783259	3					
ANR	783560	PrimaryExpression	0		783259	0					
ANR	783561	ElseStatement	else		783259	0					
ANR	783562	CompoundStatement		39:10:929:929	783259	0					
ANR	783563	ExpressionStatement	"r_cmd_alias_del ( core -> rcmd , buf )"	537:4:16753:16786	783259	0	True				
ANR	783564	CallExpression	"r_cmd_alias_del ( core -> rcmd , buf )"		783259	0					
ANR	783565	Callee	r_cmd_alias_del		783259	0					
ANR	783566	Identifier	r_cmd_alias_del		783259	0					
ANR	783567	ArgumentList	core -> rcmd		783259	1					
ANR	783568	Argument	core -> rcmd		783259	0					
ANR	783569	PtrMemberAccess	core -> rcmd		783259	0					
ANR	783570	Identifier	core		783259	0					
ANR	783571	Identifier	rcmd		783259	1					
ANR	783572	Argument	buf		783259	1					
ANR	783573	Identifier	buf		783259	0					
ANR	783574	ElseStatement	else		783259	0					
ANR	783575	IfStatement	if ( desc && ! q )		783259	0					
ANR	783576	Condition	desc && ! q	541:12:16839:16848	783259	0	True				
ANR	783577	AndExpression	desc && ! q		783259	0		&&			
ANR	783578	Identifier	desc		783259	0					
ANR	783579	UnaryOperationExpression	! q		783259	1					
ANR	783580	UnaryOperator	!		783259	0					
ANR	783581	Identifier	q		783259	1					
ANR	783582	CompoundStatement		46:2:1050:1096	783259	1					
ANR	783583	ExpressionStatement	* desc = 0	542:2:16855:16864	783259	0	True				
ANR	783584	AssignmentExpression	* desc = 0		783259	0		=			
ANR	783585	UnaryOperationExpression	* desc		783259	0					
ANR	783586	UnaryOperator	*		783259	0					
ANR	783587	Identifier	desc		783259	1					
ANR	783588	PrimaryExpression	0		783259	1					
ANR	783589	IdentifierDeclStatement	"char * v = r_cmd_alias_get ( core -> rcmd , buf , 0 ) ;"	543:2:16868:16914	783259	1	True				
ANR	783590	IdentifierDecl	"* v = r_cmd_alias_get ( core -> rcmd , buf , 0 )"		783259	0					
ANR	783591	IdentifierDeclType	char *		783259	0					
ANR	783592	Identifier	v		783259	1					
ANR	783593	AssignmentExpression	"* v = r_cmd_alias_get ( core -> rcmd , buf , 0 )"		783259	2		=			
ANR	783594	Identifier	v		783259	0					
ANR	783595	CallExpression	"r_cmd_alias_get ( core -> rcmd , buf , 0 )"		783259	1					
ANR	783596	Callee	r_cmd_alias_get		783259	0					
ANR	783597	Identifier	r_cmd_alias_get		783259	0					
ANR	783598	ArgumentList	core -> rcmd		783259	1					
ANR	783599	Argument	core -> rcmd		783259	0					
ANR	783600	PtrMemberAccess	core -> rcmd		783259	0					
ANR	783601	Identifier	core		783259	0					
ANR	783602	Identifier	rcmd		783259	1					
ANR	783603	Argument	buf		783259	1					
ANR	783604	Identifier	buf		783259	0					
ANR	783605	Argument	0		783259	2					
ANR	783606	PrimaryExpression	0		783259	0					
ANR	783607	IfStatement	if ( v )		783259	2					
ANR	783608	Condition	v	544:6:16922:16922	783259	0	True				
ANR	783609	Identifier	v		783259	0					
ANR	783610	CompoundStatement		47:9:1107:1107	783259	1					
ANR	783611	ExpressionStatement	r_cons_println ( v )	545:3:16930:16948	783259	0	True				
ANR	783612	CallExpression	r_cons_println ( v )		783259	0					
ANR	783613	Callee	r_cons_println		783259	0					
ANR	783614	Identifier	r_cons_println		783259	0					
ANR	783615	ArgumentList	v		783259	1					
ANR	783616	Argument	v		783259	0					
ANR	783617	Identifier	v		783259	0					
ANR	783618	ExpressionStatement	free ( buf )	546:3:16953:16963	783259	1	True				
ANR	783619	CallExpression	free ( buf )		783259	0					
ANR	783620	Callee	free		783259	0					
ANR	783621	Identifier	free		783259	0					
ANR	783622	ArgumentList	buf		783259	1					
ANR	783623	Argument	buf		783259	0					
ANR	783624	Identifier	buf		783259	0					
ANR	783625	ReturnStatement	return 1 ;	547:3:16968:16976	783259	2	True				
ANR	783626	PrimaryExpression	1		783259	0					
ANR	783627	ElseStatement	else		783259	0					
ANR	783628	CompoundStatement		51:9:1169:1169	783259	0					
ANR	783629	ExpressionStatement	"eprintf ( ""unknown key '%s'\\n"" , buf )"	549:3:16992:17027	783259	0	True				
ANR	783630	CallExpression	"eprintf ( ""unknown key '%s'\\n"" , buf )"		783259	0					
ANR	783631	Callee	eprintf		783259	0					
ANR	783632	Identifier	eprintf		783259	0					
ANR	783633	ArgumentList	"""unknown key '%s'\\n"""		783259	1					
ANR	783634	Argument	"""unknown key '%s'\\n"""		783259	0					
ANR	783635	PrimaryExpression	"""unknown key '%s'\\n"""		783259	0					
ANR	783636	Argument	buf		783259	1					
ANR	783637	Identifier	buf		783259	0					
ANR	783638	ElseStatement	else		783259	0					
ANR	783639	IfStatement	if ( buf [ 1 ] == '*' )		783259	0					
ANR	783640	Condition	buf [ 1 ] == '*'	551:12:17045:17057	783259	0	True				
ANR	783641	EqualityExpression	buf [ 1 ] == '*'		783259	0		==			
ANR	783642	ArrayIndexing	buf [ 1 ]		783259	0					
ANR	783643	Identifier	buf		783259	0					
ANR	783644	PrimaryExpression	1		783259	1					
ANR	783645	PrimaryExpression	'*'		783259	1					
ANR	783646	CompoundStatement		57:2:1287:1338	783259	1					
ANR	783647	IdentifierDeclStatement	"int i , count = 0 ;"	553:2:17085:17101	783259	0	True				
ANR	783648	IdentifierDecl	i		783259	0					
ANR	783649	IdentifierDeclType	int		783259	0					
ANR	783650	Identifier	i		783259	1					
ANR	783651	IdentifierDecl	count = 0		783259	1					
ANR	783652	IdentifierDeclType	int		783259	0					
ANR	783653	Identifier	count		783259	1					
ANR	783654	AssignmentExpression	count = 0		783259	2		=			
ANR	783655	Identifier	count		783259	0					
ANR	783656	PrimaryExpression	0		783259	1					
ANR	783657	IdentifierDeclStatement	"char * * keys = r_cmd_alias_keys ( core -> rcmd , & count ) ;"	554:2:17105:17156	783259	1	True				
ANR	783658	IdentifierDecl	"* * keys = r_cmd_alias_keys ( core -> rcmd , & count )"		783259	0					
ANR	783659	IdentifierDeclType	char * *		783259	0					
ANR	783660	Identifier	keys		783259	1					
ANR	783661	AssignmentExpression	"* * keys = r_cmd_alias_keys ( core -> rcmd , & count )"		783259	2		=			
ANR	783662	Identifier	keys		783259	0					
ANR	783663	CallExpression	"r_cmd_alias_keys ( core -> rcmd , & count )"		783259	1					
ANR	783664	Callee	r_cmd_alias_keys		783259	0					
ANR	783665	Identifier	r_cmd_alias_keys		783259	0					
ANR	783666	ArgumentList	core -> rcmd		783259	1					
ANR	783667	Argument	core -> rcmd		783259	0					
ANR	783668	PtrMemberAccess	core -> rcmd		783259	0					
ANR	783669	Identifier	core		783259	0					
ANR	783670	Identifier	rcmd		783259	1					
ANR	783671	Argument	& count		783259	1					
ANR	783672	UnaryOperationExpression	& count		783259	0					
ANR	783673	UnaryOperator	&		783259	0					
ANR	783674	Identifier	count		783259	1					
ANR	783675	ForStatement	for ( i = 0 ; i < count ; i ++ )		783259	2					
ANR	783676	ForInit	i = 0 ;	555:7:17165:17170	783259	0	True				
ANR	783677	AssignmentExpression	i = 0		783259	0		=			
ANR	783678	Identifier	i		783259	0					
ANR	783679	PrimaryExpression	0		783259	1					
ANR	783680	Condition	i < count	555:14:17172:17180	783259	1	True				
ANR	783681	RelationalExpression	i < count		783259	0		<			
ANR	783682	Identifier	i		783259	0					
ANR	783683	Identifier	count		783259	1					
ANR	783684	PostIncDecOperationExpression	i ++	555:25:17183:17185	783259	2	True				
ANR	783685	Identifier	i		783259	0					
ANR	783686	IncDec	++		783259	1					
ANR	783687	CompoundStatement		60:3:1430:1467	783259	3					
ANR	783688	IdentifierDeclStatement	"char * v = r_cmd_alias_get ( core -> rcmd , keys [ i ] , 0 ) ;"	556:3:17193:17243	783259	0	True				
ANR	783689	IdentifierDecl	"* v = r_cmd_alias_get ( core -> rcmd , keys [ i ] , 0 )"		783259	0					
ANR	783690	IdentifierDeclType	char *		783259	0					
ANR	783691	Identifier	v		783259	1					
ANR	783692	AssignmentExpression	"* v = r_cmd_alias_get ( core -> rcmd , keys [ i ] , 0 )"		783259	2		=			
ANR	783693	Identifier	v		783259	0					
ANR	783694	CallExpression	"r_cmd_alias_get ( core -> rcmd , keys [ i ] , 0 )"		783259	1					
ANR	783695	Callee	r_cmd_alias_get		783259	0					
ANR	783696	Identifier	r_cmd_alias_get		783259	0					
ANR	783697	ArgumentList	core -> rcmd		783259	1					
ANR	783698	Argument	core -> rcmd		783259	0					
ANR	783699	PtrMemberAccess	core -> rcmd		783259	0					
ANR	783700	Identifier	core		783259	0					
ANR	783701	Identifier	rcmd		783259	1					
ANR	783702	Argument	keys [ i ]		783259	1					
ANR	783703	ArrayIndexing	keys [ i ]		783259	0					
ANR	783704	Identifier	keys		783259	0					
ANR	783705	Identifier	i		783259	1					
ANR	783706	Argument	0		783259	2					
ANR	783707	PrimaryExpression	0		783259	0					
ANR	783708	IdentifierDeclStatement	"char * q = r_base64_encode_dyn ( v , - 1 ) ;"	557:3:17248:17285	783259	1	True				
ANR	783709	IdentifierDecl	"* q = r_base64_encode_dyn ( v , - 1 )"		783259	0					
ANR	783710	IdentifierDeclType	char *		783259	0					
ANR	783711	Identifier	q		783259	1					
ANR	783712	AssignmentExpression	"* q = r_base64_encode_dyn ( v , - 1 )"		783259	2		=			
ANR	783713	Identifier	q		783259	0					
ANR	783714	CallExpression	"r_base64_encode_dyn ( v , - 1 )"		783259	1					
ANR	783715	Callee	r_base64_encode_dyn		783259	0					
ANR	783716	Identifier	r_base64_encode_dyn		783259	0					
ANR	783717	ArgumentList	v		783259	1					
ANR	783718	Argument	v		783259	0					
ANR	783719	Identifier	v		783259	0					
ANR	783720	Argument	- 1		783259	1					
ANR	783721	UnaryOperationExpression	- 1		783259	0					
ANR	783722	UnaryOperator	-		783259	0					
ANR	783723	PrimaryExpression	1		783259	1					
ANR	783724	IfStatement	if ( buf [ 2 ] == '*' )		783259	2					
ANR	783725	Condition	buf [ 2 ] == '*'	558:7:17294:17306	783259	0	True				
ANR	783726	EqualityExpression	buf [ 2 ] == '*'		783259	0		==			
ANR	783727	ArrayIndexing	buf [ 2 ]		783259	0					
ANR	783728	Identifier	buf		783259	0					
ANR	783729	PrimaryExpression	2		783259	1					
ANR	783730	PrimaryExpression	'*'		783259	1					
ANR	783731	CompoundStatement		61:22:1491:1491	783259	1					
ANR	783732	ExpressionStatement	"r_cons_printf ( ""%s=%s\\n"" , keys [ i ] , v )"	559:4:17315:17352	783259	0	True				
ANR	783733	CallExpression	"r_cons_printf ( ""%s=%s\\n"" , keys [ i ] , v )"		783259	0					
ANR	783734	Callee	r_cons_printf		783259	0					
ANR	783735	Identifier	r_cons_printf		783259	0					
ANR	783736	ArgumentList	"""%s=%s\\n"""		783259	1					
ANR	783737	Argument	"""%s=%s\\n"""		783259	0					
ANR	783738	PrimaryExpression	"""%s=%s\\n"""		783259	0					
ANR	783739	Argument	keys [ i ]		783259	1					
ANR	783740	ArrayIndexing	keys [ i ]		783259	0					
ANR	783741	Identifier	keys		783259	0					
ANR	783742	Identifier	i		783259	1					
ANR	783743	Argument	v		783259	2					
ANR	783744	Identifier	v		783259	0					
ANR	783745	ElseStatement	else		783259	0					
ANR	783746	CompoundStatement		63:10:1546:1546	783259	0					
ANR	783747	ExpressionStatement	"r_cons_printf ( ""%s=base64:%s\\n"" , keys [ i ] , q )"	561:4:17370:17414	783259	0	True				
ANR	783748	CallExpression	"r_cons_printf ( ""%s=base64:%s\\n"" , keys [ i ] , q )"		783259	0					
ANR	783749	Callee	r_cons_printf		783259	0					
ANR	783750	Identifier	r_cons_printf		783259	0					
ANR	783751	ArgumentList	"""%s=base64:%s\\n"""		783259	1					
ANR	783752	Argument	"""%s=base64:%s\\n"""		783259	0					
ANR	783753	PrimaryExpression	"""%s=base64:%s\\n"""		783259	0					
ANR	783754	Argument	keys [ i ]		783259	1					
ANR	783755	ArrayIndexing	keys [ i ]		783259	0					
ANR	783756	Identifier	keys		783259	0					
ANR	783757	Identifier	i		783259	1					
ANR	783758	Argument	q		783259	2					
ANR	783759	Identifier	q		783259	0					
ANR	783760	ExpressionStatement	free ( q )	563:3:17424:17432	783259	3	True				
ANR	783761	CallExpression	free ( q )		783259	0					
ANR	783762	Callee	free		783259	0					
ANR	783763	Identifier	free		783259	0					
ANR	783764	ArgumentList	q		783259	1					
ANR	783765	Argument	q		783259	0					
ANR	783766	Identifier	q		783259	0					
ANR	783767	ElseStatement	else		783259	0					
ANR	783768	IfStatement	if ( ! buf [ 1 ] )		783259	0					
ANR	783769	Condition	! buf [ 1 ]	565:12:17450:17456	783259	0	True				
ANR	783770	UnaryOperationExpression	! buf [ 1 ]		783259	0					
ANR	783771	UnaryOperator	!		783259	0					
ANR	783772	ArrayIndexing	buf [ 1 ]		783259	1					
ANR	783773	Identifier	buf		783259	0					
ANR	783774	PrimaryExpression	1		783259	1					
ANR	783775	CompoundStatement		70:2:1665:1716	783259	1					
ANR	783776	IdentifierDeclStatement	"int i , count = 0 ;"	566:2:17463:17479	783259	0	True				
ANR	783777	IdentifierDecl	i		783259	0					
ANR	783778	IdentifierDeclType	int		783259	0					
ANR	783779	Identifier	i		783259	1					
ANR	783780	IdentifierDecl	count = 0		783259	1					
ANR	783781	IdentifierDeclType	int		783259	0					
ANR	783782	Identifier	count		783259	1					
ANR	783783	AssignmentExpression	count = 0		783259	2		=			
ANR	783784	Identifier	count		783259	0					
ANR	783785	PrimaryExpression	0		783259	1					
ANR	783786	IdentifierDeclStatement	"char * * keys = r_cmd_alias_keys ( core -> rcmd , & count ) ;"	567:2:17483:17534	783259	1	True				
ANR	783787	IdentifierDecl	"* * keys = r_cmd_alias_keys ( core -> rcmd , & count )"		783259	0					
ANR	783788	IdentifierDeclType	char * *		783259	0					
ANR	783789	Identifier	keys		783259	1					
ANR	783790	AssignmentExpression	"* * keys = r_cmd_alias_keys ( core -> rcmd , & count )"		783259	2		=			
ANR	783791	Identifier	keys		783259	0					
ANR	783792	CallExpression	"r_cmd_alias_keys ( core -> rcmd , & count )"		783259	1					
ANR	783793	Callee	r_cmd_alias_keys		783259	0					
ANR	783794	Identifier	r_cmd_alias_keys		783259	0					
ANR	783795	ArgumentList	core -> rcmd		783259	1					
ANR	783796	Argument	core -> rcmd		783259	0					
ANR	783797	PtrMemberAccess	core -> rcmd		783259	0					
ANR	783798	Identifier	core		783259	0					
ANR	783799	Identifier	rcmd		783259	1					
ANR	783800	Argument	& count		783259	1					
ANR	783801	UnaryOperationExpression	& count		783259	0					
ANR	783802	UnaryOperator	&		783259	0					
ANR	783803	Identifier	count		783259	1					
ANR	783804	ForStatement	for ( i = 0 ; i < count ; i ++ )		783259	2					
ANR	783805	ForInit	i = 0 ;	568:7:17543:17548	783259	0	True				
ANR	783806	AssignmentExpression	i = 0		783259	0		=			
ANR	783807	Identifier	i		783259	0					
ANR	783808	PrimaryExpression	0		783259	1					
ANR	783809	Condition	i < count	568:14:17550:17558	783259	1	True				
ANR	783810	RelationalExpression	i < count		783259	0		<			
ANR	783811	Identifier	i		783259	0					
ANR	783812	Identifier	count		783259	1					
ANR	783813	PostIncDecOperationExpression	i ++	568:25:17561:17563	783259	2	True				
ANR	783814	Identifier	i		783259	0					
ANR	783815	IncDec	++		783259	1					
ANR	783816	CompoundStatement		71:30:1748:1748	783259	3					
ANR	783817	ExpressionStatement	r_cons_println ( keys [ i ] )	569:3:17571:17595	783259	0	True				
ANR	783818	CallExpression	r_cons_println ( keys [ i ] )		783259	0					
ANR	783819	Callee	r_cons_println		783259	0					
ANR	783820	Identifier	r_cons_println		783259	0					
ANR	783821	ArgumentList	keys [ i ]		783259	1					
ANR	783822	Argument	keys [ i ]		783259	0					
ANR	783823	ArrayIndexing	keys [ i ]		783259	0					
ANR	783824	Identifier	keys		783259	0					
ANR	783825	Identifier	i		783259	1					
ANR	783826	ElseStatement	else		783259	0					
ANR	783827	CompoundStatement		79:2:1843:1889	783259	0					
ANR	783828	IfStatement	if ( q )		783259	0					
ANR	783829	Condition	q	573:6:17639:17639	783259	0	True				
ANR	783830	Identifier	q		783259	0					
ANR	783831	CompoundStatement		76:9:1824:1824	783259	1					
ANR	783832	ExpressionStatement	* q = 0	574:3:17647:17653	783259	0	True				
ANR	783833	AssignmentExpression	* q = 0		783259	0		=			
ANR	783834	UnaryOperationExpression	* q		783259	0					
ANR	783835	UnaryOperator	*		783259	0					
ANR	783836	Identifier	q		783259	1					
ANR	783837	PrimaryExpression	0		783259	1					
ANR	783838	IdentifierDeclStatement	"char * v = r_cmd_alias_get ( core -> rcmd , buf , 0 ) ;"	576:2:17661:17707	783259	1	True				
ANR	783839	IdentifierDecl	"* v = r_cmd_alias_get ( core -> rcmd , buf , 0 )"		783259	0					
ANR	783840	IdentifierDeclType	char *		783259	0					
ANR	783841	Identifier	v		783259	1					
ANR	783842	AssignmentExpression	"* v = r_cmd_alias_get ( core -> rcmd , buf , 0 )"		783259	2		=			
ANR	783843	Identifier	v		783259	0					
ANR	783844	CallExpression	"r_cmd_alias_get ( core -> rcmd , buf , 0 )"		783259	1					
ANR	783845	Callee	r_cmd_alias_get		783259	0					
ANR	783846	Identifier	r_cmd_alias_get		783259	0					
ANR	783847	ArgumentList	core -> rcmd		783259	1					
ANR	783848	Argument	core -> rcmd		783259	0					
ANR	783849	PtrMemberAccess	core -> rcmd		783259	0					
ANR	783850	Identifier	core		783259	0					
ANR	783851	Identifier	rcmd		783259	1					
ANR	783852	Argument	buf		783259	1					
ANR	783853	Identifier	buf		783259	0					
ANR	783854	Argument	0		783259	2					
ANR	783855	PrimaryExpression	0		783259	0					
ANR	783856	IfStatement	if ( v )		783259	2					
ANR	783857	Condition	v	577:6:17715:17715	783259	0	True				
ANR	783858	Identifier	v		783259	0					
ANR	783859	CompoundStatement		80:9:1900:1900	783259	1					
ANR	783860	IfStatement	if ( * v == '$' )		783259	0					
ANR	783861	Condition	* v == '$'	578:7:17727:17735	783259	0	True				
ANR	783862	EqualityExpression	* v == '$'		783259	0		==			
ANR	783863	UnaryOperationExpression	* v		783259	0					
ANR	783864	UnaryOperator	*		783259	0					
ANR	783865	Identifier	v		783259	1					
ANR	783866	PrimaryExpression	'$'		783259	1					
ANR	783867	CompoundStatement		81:18:1920:1920	783259	1					
ANR	783868	ExpressionStatement	r_cons_strcat ( v + 1 )	579:4:17744:17765	783259	0	True				
ANR	783869	CallExpression	r_cons_strcat ( v + 1 )		783259	0					
ANR	783870	Callee	r_cons_strcat		783259	0					
ANR	783871	Identifier	r_cons_strcat		783259	0					
ANR	783872	ArgumentList	v + 1		783259	1					
ANR	783873	Argument	v + 1		783259	0					
ANR	783874	AdditiveExpression	v + 1		783259	0		+			
ANR	783875	Identifier	v		783259	0					
ANR	783876	PrimaryExpression	1		783259	1					
ANR	783877	ExpressionStatement	r_cons_newline ( )	580:4:17771:17788	783259	1	True				
ANR	783878	CallExpression	r_cons_newline ( )		783259	0					
ANR	783879	Callee	r_cons_newline		783259	0					
ANR	783880	Identifier	r_cons_newline		783259	0					
ANR	783881	ArgumentList			783259	1					
ANR	783882	ElseStatement	else		783259	0					
ANR	783883	IfStatement	if ( q )		783259	0					
ANR	783884	Condition	q	581:14:17804:17804	783259	0	True				
ANR	783885	Identifier	q		783259	0					
ANR	783886	CompoundStatement		85:4:1995:2037	783259	1					
ANR	783887	IdentifierDeclStatement	"char * out = r_str_newf ( ""%s %s"" , v , q + 1 ) ;"	582:4:17813:17855	783259	0	True				
ANR	783888	IdentifierDecl	"* out = r_str_newf ( ""%s %s"" , v , q + 1 )"		783259	0					
ANR	783889	IdentifierDeclType	char *		783259	0					
ANR	783890	Identifier	out		783259	1					
ANR	783891	AssignmentExpression	"* out = r_str_newf ( ""%s %s"" , v , q + 1 )"		783259	2		=			
ANR	783892	Identifier	out		783259	0					
ANR	783893	CallExpression	"r_str_newf ( ""%s %s"" , v , q + 1 )"		783259	1					
ANR	783894	Callee	r_str_newf		783259	0					
ANR	783895	Identifier	r_str_newf		783259	0					
ANR	783896	ArgumentList	"""%s %s"""		783259	1					
ANR	783897	Argument	"""%s %s"""		783259	0					
ANR	783898	PrimaryExpression	"""%s %s"""		783259	0					
ANR	783899	Argument	v		783259	1					
ANR	783900	Identifier	v		783259	0					
ANR	783901	Argument	q + 1		783259	2					
ANR	783902	AdditiveExpression	q + 1		783259	0		+			
ANR	783903	Identifier	q		783259	0					
ANR	783904	PrimaryExpression	1		783259	1					
ANR	783905	ExpressionStatement	"r_core_cmd0 ( core , out )"	583:4:17861:17884	783259	1	True				
ANR	783906	CallExpression	"r_core_cmd0 ( core , out )"		783259	0					
ANR	783907	Callee	r_core_cmd0		783259	0					
ANR	783908	Identifier	r_core_cmd0		783259	0					
ANR	783909	ArgumentList	core		783259	1					
ANR	783910	Argument	core		783259	0					
ANR	783911	Identifier	core		783259	0					
ANR	783912	Argument	out		783259	1					
ANR	783913	Identifier	out		783259	0					
ANR	783914	ExpressionStatement	free ( out )	584:4:17890:17900	783259	2	True				
ANR	783915	CallExpression	free ( out )		783259	0					
ANR	783916	Callee	free		783259	0					
ANR	783917	Identifier	free		783259	0					
ANR	783918	ArgumentList	out		783259	1					
ANR	783919	Argument	out		783259	0					
ANR	783920	Identifier	out		783259	0					
ANR	783921	ElseStatement	else		783259	0					
ANR	783922	CompoundStatement		88:10:2094:2094	783259	0					
ANR	783923	ExpressionStatement	"r_core_cmd0 ( core , v )"	586:4:17918:17939	783259	0	True				
ANR	783924	CallExpression	"r_core_cmd0 ( core , v )"		783259	0					
ANR	783925	Callee	r_core_cmd0		783259	0					
ANR	783926	Identifier	r_core_cmd0		783259	0					
ANR	783927	ArgumentList	core		783259	1					
ANR	783928	Argument	core		783259	0					
ANR	783929	Identifier	core		783259	0					
ANR	783930	Argument	v		783259	1					
ANR	783931	Identifier	v		783259	0					
ANR	783932	ElseStatement	else		783259	0					
ANR	783933	CompoundStatement		91:9:2137:2137	783259	0					
ANR	783934	ExpressionStatement	"eprintf ( ""unknown key '%s'\\n"" , buf )"	589:3:17960:17995	783259	0	True				
ANR	783935	CallExpression	"eprintf ( ""unknown key '%s'\\n"" , buf )"		783259	0					
ANR	783936	Callee	eprintf		783259	0					
ANR	783937	Identifier	eprintf		783259	0					
ANR	783938	ArgumentList	"""unknown key '%s'\\n"""		783259	1					
ANR	783939	Argument	"""unknown key '%s'\\n"""		783259	0					
ANR	783940	PrimaryExpression	"""unknown key '%s'\\n"""		783259	0					
ANR	783941	Argument	buf		783259	1					
ANR	783942	Identifier	buf		783259	0					
ANR	783943	ExpressionStatement	free ( buf )	592:1:18005:18015	783259	11	True				
ANR	783944	CallExpression	free ( buf )		783259	0					
ANR	783945	Callee	free		783259	0					
ANR	783946	Identifier	free		783259	0					
ANR	783947	ArgumentList	buf		783259	1					
ANR	783948	Argument	buf		783259	0					
ANR	783949	Identifier	buf		783259	0					
ANR	783950	ReturnStatement	return 0 ;	593:1:18018:18026	783259	12	True				
ANR	783951	PrimaryExpression	0		783259	0					
ANR	783952	ReturnType	static int		783259	1					
ANR	783953	Identifier	cmd_alias		783259	2					
ANR	783954	ParameterList	"void * data , const char * input"		783259	3					
ANR	783955	Parameter	void * data	498:21:15786:15795	783259	0	True				
ANR	783956	ParameterType	void *		783259	0					
ANR	783957	Identifier	data		783259	1					
ANR	783958	Parameter	const char * input	498:33:15798:15814	783259	1	True				
ANR	783959	ParameterType	const char *		783259	0					
ANR	783960	Identifier	input		783259	1					
ANR	783961	CFGEntryNode	ENTRY		783259		True				
ANR	783962	CFGExitNode	EXIT		783259		True				
ANR	783963	Symbol	* v		783259						
ANR	783964	Symbol	data		783259						
ANR	783965	Symbol	def		783259						
ANR	783966	Symbol	keys		783259						
ANR	783967	Symbol	* input		783259						
ANR	783968	Symbol	* core		783259						
ANR	783969	Symbol	strchr		783259						
ANR	783970	Symbol	* def ++		783259						
ANR	783971	Symbol	* keys		783259						
ANR	783972	Symbol	r_str_newf		783259						
ANR	783973	Symbol	out		783259						
ANR	783974	Symbol	* def		783259						
ANR	783975	Symbol	strlen		783259						
ANR	783976	Symbol	r_base64_encode_dyn		783259						
ANR	783977	Symbol	len		783259						
ANR	783978	Symbol	* desc		783259						
ANR	783979	Symbol	r_cmd_alias_get		783259						
ANR	783980	Symbol	strcmp		783259						
ANR	783981	Symbol	malloc		783259						
ANR	783982	Symbol	* buf		783259						
ANR	783983	Symbol	NULL		783259						
ANR	783984	Symbol	core -> rcmd		783259						
ANR	783985	Symbol	count		783259						
ANR	783986	Symbol	i		783259						
ANR	783987	Symbol	n		783259						
ANR	783988	Symbol	input		783259						
ANR	783989	Symbol	core		783259						
ANR	783990	Symbol	q		783259						
ANR	783991	Symbol	buf		783259						
ANR	783992	Symbol	r_cmd_alias_keys		783259						
ANR	783993	Symbol	* i		783259						
ANR	783994	Symbol	v		783259						
ANR	783995	Symbol	r_cons_editor		783259						
ANR	783996	Symbol	help_msg_dollar		783259						
ANR	783997	Symbol	& count		783259						
ANR	783998	Symbol	* q		783259						
ANR	783999	Symbol	desc		783259						
ANR	784000	Symbol	* len		783259						
ANR	784001	Function	getArg	596:0:18031:18135							
ANR	784002	FunctionDef	"getArg (char ch , int def)"		784001	0					
ANR	784003	CompoundStatement		596:36:18067:18135	784001	0					
ANR	784004	SwitchStatement	switch ( ch )		784001	0					
ANR	784005	Condition	ch	597:9:18078:18079	784001	0	True				
ANR	784006	Identifier	ch		784001	0					
ANR	784007	CompoundStatement		2:13:14:14	784001	1					
ANR	784008	Label	case '&' :	598:1:18085:18093	784001	0	True				
ANR	784009	Label	case '-' :	599:1:18096:18104	784001	1	True				
ANR	784010	ReturnStatement	return ch ;	600:2:18108:18117	784001	2	True				
ANR	784011	Identifier	ch		784001	0					
ANR	784012	ReturnStatement	return def ;	602:1:18123:18133	784001	1	True				
ANR	784013	Identifier	def		784001	0					
ANR	784014	ReturnType	static int		784001	1					
ANR	784015	Identifier	getArg		784001	2					
ANR	784016	ParameterList	"char ch , int def"		784001	3					
ANR	784017	Parameter	char ch	596:18:18049:18055	784001	0	True				
ANR	784018	ParameterType	char		784001	0					
ANR	784019	Identifier	ch		784001	1					
ANR	784020	Parameter	int def	596:27:18058:18064	784001	1	True				
ANR	784021	ParameterType	int		784001	0					
ANR	784022	Identifier	def		784001	1					
ANR	784023	CFGEntryNode	ENTRY		784001		True				
ANR	784024	CFGExitNode	EXIT		784001		True				
ANR	784025	Symbol	def		784001						
ANR	784026	Symbol	ch		784001						
ANR	784027	Function	aliascmd	606:0:18171:18734							
ANR	784028	FunctionDef	"aliascmd (RCore * core , const char * str)"		784027	0					
ANR	784029	CompoundStatement		606:51:18222:18734	784027	0					
ANR	784030	SwitchStatement	switch ( str [ 0 ] )		784027	0					
ANR	784031	Condition	str [ 0 ]	607:9:18233:18238	784027	0	True				
ANR	784032	ArrayIndexing	str [ 0 ]		784027	0					
ANR	784033	Identifier	str		784027	0					
ANR	784034	PrimaryExpression	0		784027	1					
ANR	784035	CompoundStatement		2:17:18:18	784027	1					
ANR	784036	Label	case '\\0' :	608:1:18244:18253	784027	0	True				
ANR	784037	ExpressionStatement	"r_core_cmd0 ( core , ""$"" )"	609:2:18265:18288	784027	1	True				
ANR	784038	CallExpression	"r_core_cmd0 ( core , ""$"" )"		784027	0					
ANR	784039	Callee	r_core_cmd0		784027	0					
ANR	784040	Identifier	r_core_cmd0		784027	0					
ANR	784041	ArgumentList	core		784027	1					
ANR	784042	Argument	core		784027	0					
ANR	784043	Identifier	core		784027	0					
ANR	784044	Argument	"""$"""		784027	1					
ANR	784045	PrimaryExpression	"""$"""		784027	0					
ANR	784046	BreakStatement	break ;	610:2:18292:18297	784027	2	True				
ANR	784047	Label	case '-' :	611:1:18300:18308	784027	3	True				
ANR	784048	IfStatement	if ( str [ 1 ] )		784027	4					
ANR	784049	Condition	str [ 1 ]	612:6:18325:18330	784027	0	True				
ANR	784050	ArrayIndexing	str [ 1 ]		784027	0					
ANR	784051	Identifier	str		784027	0					
ANR	784052	PrimaryExpression	1		784027	1					
ANR	784053	CompoundStatement		7:14:110:110	784027	1					
ANR	784054	ExpressionStatement	"r_cmd_alias_del ( core -> rcmd , str + 2 )"	613:3:18338:18375	784027	0	True				
ANR	784055	CallExpression	"r_cmd_alias_del ( core -> rcmd , str + 2 )"		784027	0					
ANR	784056	Callee	r_cmd_alias_del		784027	0					
ANR	784057	Identifier	r_cmd_alias_del		784027	0					
ANR	784058	ArgumentList	core -> rcmd		784027	1					
ANR	784059	Argument	core -> rcmd		784027	0					
ANR	784060	PtrMemberAccess	core -> rcmd		784027	0					
ANR	784061	Identifier	core		784027	0					
ANR	784062	Identifier	rcmd		784027	1					
ANR	784063	Argument	str + 2		784027	1					
ANR	784064	AdditiveExpression	str + 2		784027	0		+			
ANR	784065	Identifier	str		784027	0					
ANR	784066	PrimaryExpression	2		784027	1					
ANR	784067	ElseStatement	else		784027	0					
ANR	784068	CompoundStatement		9:9:163:163	784027	0					
ANR	784069	ExpressionStatement	"r_cmd_alias_del ( core -> rcmd , NULL )"	615:3:18391:18425	784027	0	True				
ANR	784070	CallExpression	"r_cmd_alias_del ( core -> rcmd , NULL )"		784027	0					
ANR	784071	Callee	r_cmd_alias_del		784027	0					
ANR	784072	Identifier	r_cmd_alias_del		784027	0					
ANR	784073	ArgumentList	core -> rcmd		784027	1					
ANR	784074	Argument	core -> rcmd		784027	0					
ANR	784075	PtrMemberAccess	core -> rcmd		784027	0					
ANR	784076	Identifier	core		784027	0					
ANR	784077	Identifier	rcmd		784027	1					
ANR	784078	Argument	NULL		784027	1					
ANR	784079	Identifier	NULL		784027	0					
ANR	784080	BreakStatement	break ;	618:2:18470:18475	784027	5	True				
ANR	784081	Label	case '?' :	619:1:18478:18486	784027	6	True				
ANR	784082	ExpressionStatement	"eprintf ( ""Usage: =$[-][remotecmd]  # remote command alias\\n"" )"	620:2:18499:18560	784027	7	True				
ANR	784083	CallExpression	"eprintf ( ""Usage: =$[-][remotecmd]  # remote command alias\\n"" )"		784027	0					
ANR	784084	Callee	eprintf		784027	0					
ANR	784085	Identifier	eprintf		784027	0					
ANR	784086	ArgumentList	"""Usage: =$[-][remotecmd]  # remote command alias\\n"""		784027	1					
ANR	784087	Argument	"""Usage: =$[-][remotecmd]  # remote command alias\\n"""		784027	0					
ANR	784088	PrimaryExpression	"""Usage: =$[-][remotecmd]  # remote command alias\\n"""		784027	0					
ANR	784089	ExpressionStatement	"eprintf ( "" =$dr   # makes 'dr' alias for =!dr\\n"" )"	621:2:18564:18613	784027	8	True				
ANR	784090	CallExpression	"eprintf ( "" =$dr   # makes 'dr' alias for =!dr\\n"" )"		784027	0					
ANR	784091	Callee	eprintf		784027	0					
ANR	784092	Identifier	eprintf		784027	0					
ANR	784093	ArgumentList	""" =$dr   # makes 'dr' alias for =!dr\\n"""		784027	1					
ANR	784094	Argument	""" =$dr   # makes 'dr' alias for =!dr\\n"""		784027	0					
ANR	784095	PrimaryExpression	""" =$dr   # makes 'dr' alias for =!dr\\n"""		784027	0					
ANR	784096	ExpressionStatement	"eprintf ( "" =$-dr  # unset 'dr' alias\\n"" )"	622:2:18617:18657	784027	9	True				
ANR	784097	CallExpression	"eprintf ( "" =$-dr  # unset 'dr' alias\\n"" )"		784027	0					
ANR	784098	Callee	eprintf		784027	0					
ANR	784099	Identifier	eprintf		784027	0					
ANR	784100	ArgumentList	""" =$-dr  # unset 'dr' alias\\n"""		784027	1					
ANR	784101	Argument	""" =$-dr  # unset 'dr' alias\\n"""		784027	0					
ANR	784102	PrimaryExpression	""" =$-dr  # unset 'dr' alias\\n"""		784027	0					
ANR	784103	BreakStatement	break ;	623:2:18661:18666	784027	10	True				
ANR	784104	Label	default :	624:1:18669:18676	784027	11	True				
ANR	784105	Identifier	default		784027	0					
ANR	784106	ExpressionStatement	"r_cmd_alias_set ( core -> rcmd , str , """" , 1 )"	625:2:18680:18720	784027	12	True				
ANR	784107	CallExpression	"r_cmd_alias_set ( core -> rcmd , str , """" , 1 )"		784027	0					
ANR	784108	Callee	r_cmd_alias_set		784027	0					
ANR	784109	Identifier	r_cmd_alias_set		784027	0					
ANR	784110	ArgumentList	core -> rcmd		784027	1					
ANR	784111	Argument	core -> rcmd		784027	0					
ANR	784112	PtrMemberAccess	core -> rcmd		784027	0					
ANR	784113	Identifier	core		784027	0					
ANR	784114	Identifier	rcmd		784027	1					
ANR	784115	Argument	str		784027	1					
ANR	784116	Identifier	str		784027	0					
ANR	784117	Argument	""""""		784027	2					
ANR	784118	PrimaryExpression	""""""		784027	0					
ANR	784119	Argument	1		784027	3					
ANR	784120	PrimaryExpression	1		784027	0					
ANR	784121	BreakStatement	break ;	626:2:18724:18729	784027	13	True				
ANR	784122	ReturnType	static void		784027	1					
ANR	784123	Identifier	aliascmd		784027	2					
ANR	784124	ParameterList	"RCore * core , const char * str"		784027	3					
ANR	784125	Parameter	RCore * core	606:21:18192:18202	784027	0	True				
ANR	784126	ParameterType	RCore *		784027	0					
ANR	784127	Identifier	core		784027	1					
ANR	784128	Parameter	const char * str	606:34:18205:18219	784027	1	True				
ANR	784129	ParameterType	const char *		784027	0					
ANR	784130	Identifier	str		784027	1					
ANR	784131	CFGEntryNode	ENTRY		784027		True				
ANR	784132	CFGExitNode	EXIT		784027		True				
ANR	784133	Symbol	str		784027						
ANR	784134	Symbol	core		784027						
ANR	784135	Symbol	NULL		784027						
ANR	784136	Symbol	core -> rcmd		784027						
ANR	784137	Symbol	* core		784027						
ANR	784138	Symbol	* str		784027						
ANR	784139	Function	cmd_rap	630:0:18737:20401							
ANR	784140	FunctionDef	"cmd_rap (void * data , const char * input)"		784139	0					
ANR	784141	CompoundStatement		630:50:18787:20401	784139	0					
ANR	784142	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	631:1:18790:18817	784139	0	True				
ANR	784143	IdentifierDecl	* core = ( RCore * ) data		784139	0					
ANR	784144	IdentifierDeclType	RCore *		784139	0					
ANR	784145	Identifier	core		784139	1					
ANR	784146	AssignmentExpression	* core = ( RCore * ) data		784139	2		=			
ANR	784147	Identifier	core		784139	0					
ANR	784148	CastExpression	( RCore * ) data		784139	1					
ANR	784149	CastTarget	RCore *		784139	0					
ANR	784150	Identifier	data		784139	1					
ANR	784151	SwitchStatement	switch ( * input )		784139	1					
ANR	784152	Condition	* input	632:9:18828:18833	784139	0	True				
ANR	784153	UnaryOperationExpression	* input		784139	0					
ANR	784154	UnaryOperator	*		784139	0					
ANR	784155	Identifier	input		784139	1					
ANR	784156	CompoundStatement		3:17:48:48	784139	1					
ANR	784157	Label	case '\\0' :	633:1:18839:18848	784139	0	True				
ANR	784158	ExpressionStatement	r_core_rtr_list ( core )	634:2:18859:18881	784139	1	True				
ANR	784159	CallExpression	r_core_rtr_list ( core )		784139	0					
ANR	784160	Callee	r_core_rtr_list		784139	0					
ANR	784161	Identifier	r_core_rtr_list		784139	0					
ANR	784162	ArgumentList	core		784139	1					
ANR	784163	Argument	core		784139	0					
ANR	784164	Identifier	core		784139	0					
ANR	784165	BreakStatement	break ;	635:2:18885:18890	784139	2	True				
ANR	784166	Label	case 'j' :	636:1:18893:18901	784139	3	True				
ANR	784167	ExpressionStatement	"eprintf ( ""TODO: list connections in json\\n"" )"	637:2:18913:18957	784139	4	True				
ANR	784168	CallExpression	"eprintf ( ""TODO: list connections in json\\n"" )"		784139	0					
ANR	784169	Callee	eprintf		784139	0					
ANR	784170	Identifier	eprintf		784139	0					
ANR	784171	ArgumentList	"""TODO: list connections in json\\n"""		784139	1					
ANR	784172	Argument	"""TODO: list connections in json\\n"""		784139	0					
ANR	784173	PrimaryExpression	"""TODO: list connections in json\\n"""		784139	0					
ANR	784174	BreakStatement	break ;	638:2:18961:18966	784139	5	True				
ANR	784175	Label	case '!' :	639:1:18969:18977	784139	6	True				
ANR	784176	IfStatement	if ( input [ 1 ] == '=' )		784139	7					
ANR	784177	Condition	input [ 1 ] == '='	640:6:18993:19007	784139	0	True				
ANR	784178	EqualityExpression	input [ 1 ] == '='		784139	0		==			
ANR	784179	ArrayIndexing	input [ 1 ]		784139	0					
ANR	784180	Identifier	input		784139	0					
ANR	784181	PrimaryExpression	1		784139	1					
ANR	784182	PrimaryExpression	'='		784139	1					
ANR	784183	CompoundStatement		11:23:222:222	784139	1					
ANR	784184	ExpressionStatement	core -> cmdremote = input [ 2 ] ? 1 : 0	642:3:19067:19099	784139	0	True				
ANR	784185	AssignmentExpression	core -> cmdremote = input [ 2 ] ? 1 : 0		784139	0		=			
ANR	784186	PtrMemberAccess	core -> cmdremote		784139	0					
ANR	784187	Identifier	core		784139	0					
ANR	784188	Identifier	cmdremote		784139	1					
ANR	784189	ConditionalExpression	input [ 2 ] ? 1 : 0		784139	1					
ANR	784190	Condition	input [ 2 ]		784139	0					
ANR	784191	ArrayIndexing	input [ 2 ]		784139	0					
ANR	784192	Identifier	input		784139	0					
ANR	784193	PrimaryExpression	2		784139	1					
ANR	784194	PrimaryExpression	1		784139	1					
ANR	784195	PrimaryExpression	0		784139	2					
ANR	784196	ExpressionStatement	r_cons_println ( r_str_bool ( core -> cmdremote ) )	643:3:19104:19149	784139	1	True				
ANR	784197	CallExpression	r_cons_println ( r_str_bool ( core -> cmdremote ) )		784139	0					
ANR	784198	Callee	r_cons_println		784139	0					
ANR	784199	Identifier	r_cons_println		784139	0					
ANR	784200	ArgumentList	r_str_bool ( core -> cmdremote )		784139	1					
ANR	784201	Argument	r_str_bool ( core -> cmdremote )		784139	0					
ANR	784202	CallExpression	r_str_bool ( core -> cmdremote )		784139	0					
ANR	784203	Callee	r_str_bool		784139	0					
ANR	784204	Identifier	r_str_bool		784139	0					
ANR	784205	ArgumentList	core -> cmdremote		784139	1					
ANR	784206	Argument	core -> cmdremote		784139	0					
ANR	784207	PtrMemberAccess	core -> cmdremote		784139	0					
ANR	784208	Identifier	core		784139	0					
ANR	784209	Identifier	cmdremote		784139	1					
ANR	784210	ElseStatement	else		784139	0					
ANR	784211	CompoundStatement		16:3:377:422	784139	0					
ANR	784212	IdentifierDeclStatement	"char * res = r_io_system ( core -> io , input + 1 ) ;"	645:3:19165:19210	784139	0	True				
ANR	784213	IdentifierDecl	"* res = r_io_system ( core -> io , input + 1 )"		784139	0					
ANR	784214	IdentifierDeclType	char *		784139	0					
ANR	784215	Identifier	res		784139	1					
ANR	784216	AssignmentExpression	"* res = r_io_system ( core -> io , input + 1 )"		784139	2		=			
ANR	784217	Identifier	res		784139	0					
ANR	784218	CallExpression	"r_io_system ( core -> io , input + 1 )"		784139	1					
ANR	784219	Callee	r_io_system		784139	0					
ANR	784220	Identifier	r_io_system		784139	0					
ANR	784221	ArgumentList	core -> io		784139	1					
ANR	784222	Argument	core -> io		784139	0					
ANR	784223	PtrMemberAccess	core -> io		784139	0					
ANR	784224	Identifier	core		784139	0					
ANR	784225	Identifier	io		784139	1					
ANR	784226	Argument	input + 1		784139	1					
ANR	784227	AdditiveExpression	input + 1		784139	0		+			
ANR	784228	Identifier	input		784139	0					
ANR	784229	PrimaryExpression	1		784139	1					
ANR	784230	IfStatement	if ( res )		784139	1					
ANR	784231	Condition	res	646:7:19219:19221	784139	0	True				
ANR	784232	Identifier	res		784139	0					
ANR	784233	CompoundStatement		17:12:436:436	784139	1					
ANR	784234	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , res )"	647:4:19230:19257	784139	0	True				
ANR	784235	CallExpression	"r_cons_printf ( ""%s\\n"" , res )"		784139	0					
ANR	784236	Callee	r_cons_printf		784139	0					
ANR	784237	Identifier	r_cons_printf		784139	0					
ANR	784238	ArgumentList	"""%s\\n"""		784139	1					
ANR	784239	Argument	"""%s\\n"""		784139	0					
ANR	784240	PrimaryExpression	"""%s\\n"""		784139	0					
ANR	784241	Argument	res		784139	1					
ANR	784242	Identifier	res		784139	0					
ANR	784243	ExpressionStatement	free ( res )	648:4:19263:19273	784139	1	True				
ANR	784244	CallExpression	free ( res )		784139	0					
ANR	784245	Callee	free		784139	0					
ANR	784246	Identifier	free		784139	0					
ANR	784247	ArgumentList	res		784139	1					
ANR	784248	Argument	res		784139	0					
ANR	784249	Identifier	res		784139	0					
ANR	784250	BreakStatement	break ;	651:2:19286:19291	784139	8	True				
ANR	784251	Label	case '$' :	652:1:19294:19302	784139	9	True				
ANR	784252	ExpressionStatement	"aliascmd ( core , input + 1 )"	654:2:19334:19360	784139	10	True				
ANR	784253	CallExpression	"aliascmd ( core , input + 1 )"		784139	0					
ANR	784254	Callee	aliascmd		784139	0					
ANR	784255	Identifier	aliascmd		784139	0					
ANR	784256	ArgumentList	core		784139	1					
ANR	784257	Argument	core		784139	0					
ANR	784258	Identifier	core		784139	0					
ANR	784259	Argument	input + 1		784139	1					
ANR	784260	AdditiveExpression	input + 1		784139	0		+			
ANR	784261	Identifier	input		784139	0					
ANR	784262	PrimaryExpression	1		784139	1					
ANR	784263	BreakStatement	break ;	655:2:19364:19369	784139	11	True				
ANR	784264	Label	case '+' :	656:1:19372:19380	784139	12	True				
ANR	784265	ExpressionStatement	"r_core_rtr_add ( core , input + 1 )"	657:2:19392:19424	784139	13	True				
ANR	784266	CallExpression	"r_core_rtr_add ( core , input + 1 )"		784139	0					
ANR	784267	Callee	r_core_rtr_add		784139	0					
ANR	784268	Identifier	r_core_rtr_add		784139	0					
ANR	784269	ArgumentList	core		784139	1					
ANR	784270	Argument	core		784139	0					
ANR	784271	Identifier	core		784139	0					
ANR	784272	Argument	input + 1		784139	1					
ANR	784273	AdditiveExpression	input + 1		784139	0		+			
ANR	784274	Identifier	input		784139	0					
ANR	784275	PrimaryExpression	1		784139	1					
ANR	784276	BreakStatement	break ;	658:2:19428:19433	784139	14	True				
ANR	784277	Label	case '-' :	659:1:19436:19444	784139	15	True				
ANR	784278	ExpressionStatement	"r_core_rtr_remove ( core , input + 1 )"	660:2:19456:19491	784139	16	True				
ANR	784279	CallExpression	"r_core_rtr_remove ( core , input + 1 )"		784139	0					
ANR	784280	Callee	r_core_rtr_remove		784139	0					
ANR	784281	Identifier	r_core_rtr_remove		784139	0					
ANR	784282	ArgumentList	core		784139	1					
ANR	784283	Argument	core		784139	0					
ANR	784284	Identifier	core		784139	0					
ANR	784285	Argument	input + 1		784139	1					
ANR	784286	AdditiveExpression	input + 1		784139	0		+			
ANR	784287	Identifier	input		784139	0					
ANR	784288	PrimaryExpression	1		784139	1					
ANR	784289	BreakStatement	break ;	661:2:19495:19500	784139	17	True				
ANR	784290	Label	case '<' :	663:1:19558:19566	784139	18	True				
ANR	784291	ExpressionStatement	"r_core_rtr_pushout ( core , input + 1 )"	664:2:19578:19614	784139	19	True				
ANR	784292	CallExpression	"r_core_rtr_pushout ( core , input + 1 )"		784139	0					
ANR	784293	Callee	r_core_rtr_pushout		784139	0					
ANR	784294	Identifier	r_core_rtr_pushout		784139	0					
ANR	784295	ArgumentList	core		784139	1					
ANR	784296	Argument	core		784139	0					
ANR	784297	Identifier	core		784139	0					
ANR	784298	Argument	input + 1		784139	1					
ANR	784299	AdditiveExpression	input + 1		784139	0		+			
ANR	784300	Identifier	input		784139	0					
ANR	784301	PrimaryExpression	1		784139	1					
ANR	784302	BreakStatement	break ;	665:2:19618:19623	784139	20	True				
ANR	784303	Label	case '=' :	666:1:19626:19634	784139	21	True				
ANR	784304	ExpressionStatement	"r_core_rtr_session ( core , input + 1 )"	667:2:19646:19682	784139	22	True				
ANR	784305	CallExpression	"r_core_rtr_session ( core , input + 1 )"		784139	0					
ANR	784306	Callee	r_core_rtr_session		784139	0					
ANR	784307	Identifier	r_core_rtr_session		784139	0					
ANR	784308	ArgumentList	core		784139	1					
ANR	784309	Argument	core		784139	0					
ANR	784310	Identifier	core		784139	0					
ANR	784311	Argument	input + 1		784139	1					
ANR	784312	AdditiveExpression	input + 1		784139	0		+			
ANR	784313	Identifier	input		784139	0					
ANR	784314	PrimaryExpression	1		784139	1					
ANR	784315	BreakStatement	break ;	668:2:19686:19691	784139	23	True				
ANR	784316	Label	case 'g' :	669:1:19694:19702	784139	24	True				
ANR	784317	IfStatement	if ( input [ 1 ] == '?' )		784139	25					
ANR	784318	Condition	input [ 1 ] == '?'	670:6:19718:19732	784139	0	True				
ANR	784319	EqualityExpression	input [ 1 ] == '?'		784139	0		==			
ANR	784320	ArrayIndexing	input [ 1 ]		784139	0					
ANR	784321	Identifier	input		784139	0					
ANR	784322	PrimaryExpression	1		784139	1					
ANR	784323	PrimaryExpression	'?'		784139	1					
ANR	784324	CompoundStatement		41:23:947:947	784139	1					
ANR	784325	ExpressionStatement	"r_core_cmd_help ( core , help_msg_equalg )"	671:3:19740:19779	784139	0	True				
ANR	784326	CallExpression	"r_core_cmd_help ( core , help_msg_equalg )"		784139	0					
ANR	784327	Callee	r_core_cmd_help		784139	0					
ANR	784328	Identifier	r_core_cmd_help		784139	0					
ANR	784329	ArgumentList	core		784139	1					
ANR	784330	Argument	core		784139	0					
ANR	784331	Identifier	core		784139	0					
ANR	784332	Argument	help_msg_equalg		784139	1					
ANR	784333	Identifier	help_msg_equalg		784139	0					
ANR	784334	ElseStatement	else		784139	0					
ANR	784335	CompoundStatement		43:9:1002:1002	784139	0					
ANR	784336	ExpressionStatement	"r_core_rtr_gdb ( core , getArg ( input [ 1 ] , 'g' ) , input + 1 )"	673:3:19795:19851	784139	0	True				
ANR	784337	CallExpression	"r_core_rtr_gdb ( core , getArg ( input [ 1 ] , 'g' ) , input + 1 )"		784139	0					
ANR	784338	Callee	r_core_rtr_gdb		784139	0					
ANR	784339	Identifier	r_core_rtr_gdb		784139	0					
ANR	784340	ArgumentList	core		784139	1					
ANR	784341	Argument	core		784139	0					
ANR	784342	Identifier	core		784139	0					
ANR	784343	Argument	"getArg ( input [ 1 ] , 'g' )"		784139	1					
ANR	784344	CallExpression	"getArg ( input [ 1 ] , 'g' )"		784139	0					
ANR	784345	Callee	getArg		784139	0					
ANR	784346	Identifier	getArg		784139	0					
ANR	784347	ArgumentList	input [ 1 ]		784139	1					
ANR	784348	Argument	input [ 1 ]		784139	0					
ANR	784349	ArrayIndexing	input [ 1 ]		784139	0					
ANR	784350	Identifier	input		784139	0					
ANR	784351	PrimaryExpression	1		784139	1					
ANR	784352	Argument	'g'		784139	1					
ANR	784353	PrimaryExpression	'g'		784139	0					
ANR	784354	Argument	input + 1		784139	2					
ANR	784355	AdditiveExpression	input + 1		784139	0		+			
ANR	784356	Identifier	input		784139	0					
ANR	784357	PrimaryExpression	1		784139	1					
ANR	784358	BreakStatement	break ;	675:2:19859:19864	784139	26	True				
ANR	784359	Label	case 'h' :	676:1:19867:19875	784139	27	True				
ANR	784360	IfStatement	if ( input [ 1 ] == '?' )		784139	28					
ANR	784361	Condition	input [ 1 ] == '?'	677:6:19891:19905	784139	0	True				
ANR	784362	EqualityExpression	input [ 1 ] == '?'		784139	0		==			
ANR	784363	ArrayIndexing	input [ 1 ]		784139	0					
ANR	784364	Identifier	input		784139	0					
ANR	784365	PrimaryExpression	1		784139	1					
ANR	784366	PrimaryExpression	'?'		784139	1					
ANR	784367	CompoundStatement		48:23:1120:1120	784139	1					
ANR	784368	ExpressionStatement	"r_core_cmd_help ( core , help_msg_equalh )"	678:3:19913:19952	784139	0	True				
ANR	784369	CallExpression	"r_core_cmd_help ( core , help_msg_equalh )"		784139	0					
ANR	784370	Callee	r_core_cmd_help		784139	0					
ANR	784371	Identifier	r_core_cmd_help		784139	0					
ANR	784372	ArgumentList	core		784139	1					
ANR	784373	Argument	core		784139	0					
ANR	784374	Identifier	core		784139	0					
ANR	784375	Argument	help_msg_equalh		784139	1					
ANR	784376	Identifier	help_msg_equalh		784139	0					
ANR	784377	ElseStatement	else		784139	0					
ANR	784378	CompoundStatement		50:9:1175:1175	784139	0					
ANR	784379	ExpressionStatement	"r_core_rtr_http ( core , getArg ( input [ 1 ] , 'h' ) , 'h' , input + 1 )"	680:3:19968:20030	784139	0	True				
ANR	784380	CallExpression	"r_core_rtr_http ( core , getArg ( input [ 1 ] , 'h' ) , 'h' , input + 1 )"		784139	0					
ANR	784381	Callee	r_core_rtr_http		784139	0					
ANR	784382	Identifier	r_core_rtr_http		784139	0					
ANR	784383	ArgumentList	core		784139	1					
ANR	784384	Argument	core		784139	0					
ANR	784385	Identifier	core		784139	0					
ANR	784386	Argument	"getArg ( input [ 1 ] , 'h' )"		784139	1					
ANR	784387	CallExpression	"getArg ( input [ 1 ] , 'h' )"		784139	0					
ANR	784388	Callee	getArg		784139	0					
ANR	784389	Identifier	getArg		784139	0					
ANR	784390	ArgumentList	input [ 1 ]		784139	1					
ANR	784391	Argument	input [ 1 ]		784139	0					
ANR	784392	ArrayIndexing	input [ 1 ]		784139	0					
ANR	784393	Identifier	input		784139	0					
ANR	784394	PrimaryExpression	1		784139	1					
ANR	784395	Argument	'h'		784139	1					
ANR	784396	PrimaryExpression	'h'		784139	0					
ANR	784397	Argument	'h'		784139	2					
ANR	784398	PrimaryExpression	'h'		784139	0					
ANR	784399	Argument	input + 1		784139	3					
ANR	784400	AdditiveExpression	input + 1		784139	0		+			
ANR	784401	Identifier	input		784139	0					
ANR	784402	PrimaryExpression	1		784139	1					
ANR	784403	BreakStatement	break ;	682:2:20038:20043	784139	29	True				
ANR	784404	Label	case 'H' :	683:1:20046:20054	784139	30	True				
ANR	784405	IfStatement	if ( input [ 1 ] == '?' )		784139	31					
ANR	784406	Condition	input [ 1 ] == '?'	684:6:20070:20084	784139	0	True				
ANR	784407	EqualityExpression	input [ 1 ] == '?'		784139	0		==			
ANR	784408	ArrayIndexing	input [ 1 ]		784139	0					
ANR	784409	Identifier	input		784139	0					
ANR	784410	PrimaryExpression	1		784139	1					
ANR	784411	PrimaryExpression	'?'		784139	1					
ANR	784412	CompoundStatement		55:23:1299:1299	784139	1					
ANR	784413	ExpressionStatement	"r_core_cmd_help ( core , help_msg_equalh )"	685:3:20092:20131	784139	0	True				
ANR	784414	CallExpression	"r_core_cmd_help ( core , help_msg_equalh )"		784139	0					
ANR	784415	Callee	r_core_cmd_help		784139	0					
ANR	784416	Identifier	r_core_cmd_help		784139	0					
ANR	784417	ArgumentList	core		784139	1					
ANR	784418	Argument	core		784139	0					
ANR	784419	Identifier	core		784139	0					
ANR	784420	Argument	help_msg_equalh		784139	1					
ANR	784421	Identifier	help_msg_equalh		784139	0					
ANR	784422	ElseStatement	else		784139	0					
ANR	784423	CompoundStatement		58:3:1359:1402	784139	0					
ANR	784424	IdentifierDeclStatement	const char * arg = r_str_trim_ro ( input + 1 ) ;	687:3:20147:20190	784139	0	True				
ANR	784425	IdentifierDecl	* arg = r_str_trim_ro ( input + 1 )		784139	0					
ANR	784426	IdentifierDeclType	const char *		784139	0					
ANR	784427	Identifier	arg		784139	1					
ANR	784428	AssignmentExpression	* arg = r_str_trim_ro ( input + 1 )		784139	2		=			
ANR	784429	Identifier	arg		784139	0					
ANR	784430	CallExpression	r_str_trim_ro ( input + 1 )		784139	1					
ANR	784431	Callee	r_str_trim_ro		784139	0					
ANR	784432	Identifier	r_str_trim_ro		784139	0					
ANR	784433	ArgumentList	input + 1		784139	1					
ANR	784434	Argument	input + 1		784139	0					
ANR	784435	AdditiveExpression	input + 1		784139	0		+			
ANR	784436	Identifier	input		784139	0					
ANR	784437	PrimaryExpression	1		784139	1					
ANR	784438	ExpressionStatement	"r_core_rtr_http ( core , getArg ( input [ 1 ] , 'H' ) , 'H' , arg )"	688:3:20195:20251	784139	1	True				
ANR	784439	CallExpression	"r_core_rtr_http ( core , getArg ( input [ 1 ] , 'H' ) , 'H' , arg )"		784139	0					
ANR	784440	Callee	r_core_rtr_http		784139	0					
ANR	784441	Identifier	r_core_rtr_http		784139	0					
ANR	784442	ArgumentList	core		784139	1					
ANR	784443	Argument	core		784139	0					
ANR	784444	Identifier	core		784139	0					
ANR	784445	Argument	"getArg ( input [ 1 ] , 'H' )"		784139	1					
ANR	784446	CallExpression	"getArg ( input [ 1 ] , 'H' )"		784139	0					
ANR	784447	Callee	getArg		784139	0					
ANR	784448	Identifier	getArg		784139	0					
ANR	784449	ArgumentList	input [ 1 ]		784139	1					
ANR	784450	Argument	input [ 1 ]		784139	0					
ANR	784451	ArrayIndexing	input [ 1 ]		784139	0					
ANR	784452	Identifier	input		784139	0					
ANR	784453	PrimaryExpression	1		784139	1					
ANR	784454	Argument	'H'		784139	1					
ANR	784455	PrimaryExpression	'H'		784139	0					
ANR	784456	Argument	'H'		784139	2					
ANR	784457	PrimaryExpression	'H'		784139	0					
ANR	784458	Argument	arg		784139	3					
ANR	784459	Identifier	arg		784139	0					
ANR	784460	BreakStatement	break ;	690:2:20259:20264	784139	32	True				
ANR	784461	Label	case '?' :	691:1:20267:20275	784139	33	True				
ANR	784462	ExpressionStatement	"r_core_cmd_help ( core , help_msg_equal )"	692:2:20287:20325	784139	34	True				
ANR	784463	CallExpression	"r_core_cmd_help ( core , help_msg_equal )"		784139	0					
ANR	784464	Callee	r_core_cmd_help		784139	0					
ANR	784465	Identifier	r_core_cmd_help		784139	0					
ANR	784466	ArgumentList	core		784139	1					
ANR	784467	Argument	core		784139	0					
ANR	784468	Identifier	core		784139	0					
ANR	784469	Argument	help_msg_equal		784139	1					
ANR	784470	Identifier	help_msg_equal		784139	0					
ANR	784471	BreakStatement	break ;	693:2:20329:20334	784139	35	True				
ANR	784472	Label	default :	694:1:20337:20344	784139	36	True				
ANR	784473	Identifier	default		784139	0					
ANR	784474	ExpressionStatement	"r_core_rtr_cmd ( core , input )"	695:2:20348:20376	784139	37	True				
ANR	784475	CallExpression	"r_core_rtr_cmd ( core , input )"		784139	0					
ANR	784476	Callee	r_core_rtr_cmd		784139	0					
ANR	784477	Identifier	r_core_rtr_cmd		784139	0					
ANR	784478	ArgumentList	core		784139	1					
ANR	784479	Argument	core		784139	0					
ANR	784480	Identifier	core		784139	0					
ANR	784481	Argument	input		784139	1					
ANR	784482	Identifier	input		784139	0					
ANR	784483	BreakStatement	break ;	696:2:20380:20385	784139	38	True				
ANR	784484	ReturnStatement	return 0 ;	698:1:20391:20399	784139	2	True				
ANR	784485	PrimaryExpression	0		784139	0					
ANR	784486	ReturnType	static int		784139	1					
ANR	784487	Identifier	cmd_rap		784139	2					
ANR	784488	ParameterList	"void * data , const char * input"		784139	3					
ANR	784489	Parameter	void * data	630:19:18756:18765	784139	0	True				
ANR	784490	ParameterType	void *		784139	0					
ANR	784491	Identifier	data		784139	1					
ANR	784492	Parameter	const char * input	630:31:18768:18784	784139	1	True				
ANR	784493	ParameterType	const char *		784139	0					
ANR	784494	Identifier	input		784139	1					
ANR	784495	CFGEntryNode	ENTRY		784139		True				
ANR	784496	CFGExitNode	EXIT		784139		True				
ANR	784497	Symbol	r_str_bool		784139						
ANR	784498	Symbol	res		784139						
ANR	784499	Symbol	help_msg_equal		784139						
ANR	784500	Symbol	r_io_system		784139						
ANR	784501	Symbol	data		784139						
ANR	784502	Symbol	help_msg_equalh		784139						
ANR	784503	Symbol	* input		784139						
ANR	784504	Symbol	* core		784139						
ANR	784505	Symbol	getArg		784139						
ANR	784506	Symbol	input		784139						
ANR	784507	Symbol	core		784139						
ANR	784508	Symbol	core -> cmdremote		784139						
ANR	784509	Symbol	core -> io		784139						
ANR	784510	Symbol	arg		784139						
ANR	784511	Symbol	r_str_trim_ro		784139						
ANR	784512	Symbol	help_msg_equalg		784139						
ANR	784513	Function	cmd_rap_run	701:0:20404:20616							
ANR	784514	FunctionDef	"cmd_rap_run (void * data , const char * input)"		784513	0					
ANR	784515	CompoundStatement		701:54:20458:20616	784513	0					
ANR	784516	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	702:1:20461:20488	784513	0	True				
ANR	784517	IdentifierDecl	* core = ( RCore * ) data		784513	0					
ANR	784518	IdentifierDeclType	RCore *		784513	0					
ANR	784519	Identifier	core		784513	1					
ANR	784520	AssignmentExpression	* core = ( RCore * ) data		784513	2		=			
ANR	784521	Identifier	core		784513	0					
ANR	784522	CastExpression	( RCore * ) data		784513	1					
ANR	784523	CastTarget	RCore *		784513	0					
ANR	784524	Identifier	data		784513	1					
ANR	784525	IdentifierDeclStatement	"char * res = r_io_system ( core -> io , input ) ;"	703:1:20491:20532	784513	1	True				
ANR	784526	IdentifierDecl	"* res = r_io_system ( core -> io , input )"		784513	0					
ANR	784527	IdentifierDeclType	char *		784513	0					
ANR	784528	Identifier	res		784513	1					
ANR	784529	AssignmentExpression	"* res = r_io_system ( core -> io , input )"		784513	2		=			
ANR	784530	Identifier	res		784513	0					
ANR	784531	CallExpression	"r_io_system ( core -> io , input )"		784513	1					
ANR	784532	Callee	r_io_system		784513	0					
ANR	784533	Identifier	r_io_system		784513	0					
ANR	784534	ArgumentList	core -> io		784513	1					
ANR	784535	Argument	core -> io		784513	0					
ANR	784536	PtrMemberAccess	core -> io		784513	0					
ANR	784537	Identifier	core		784513	0					
ANR	784538	Identifier	io		784513	1					
ANR	784539	Argument	input		784513	1					
ANR	784540	Identifier	input		784513	0					
ANR	784541	IfStatement	if ( res )		784513	2					
ANR	784542	Condition	res	704:5:20539:20541	784513	0	True				
ANR	784543	Identifier	res		784513	0					
ANR	784544	CompoundStatement		5:2:89:109	784513	1					
ANR	784545	IdentifierDeclStatement	int ret = atoi ( res ) ;	705:2:20548:20568	784513	0	True				
ANR	784546	IdentifierDecl	ret = atoi ( res )		784513	0					
ANR	784547	IdentifierDeclType	int		784513	0					
ANR	784548	Identifier	ret		784513	1					
ANR	784549	AssignmentExpression	ret = atoi ( res )		784513	2		=			
ANR	784550	Identifier	ret		784513	0					
ANR	784551	CallExpression	atoi ( res )		784513	1					
ANR	784552	Callee	atoi		784513	0					
ANR	784553	Identifier	atoi		784513	0					
ANR	784554	ArgumentList	res		784513	1					
ANR	784555	Argument	res		784513	0					
ANR	784556	Identifier	res		784513	0					
ANR	784557	ExpressionStatement	free ( res )	706:2:20572:20582	784513	1	True				
ANR	784558	CallExpression	free ( res )		784513	0					
ANR	784559	Callee	free		784513	0					
ANR	784560	Identifier	free		784513	0					
ANR	784561	ArgumentList	res		784513	1					
ANR	784562	Argument	res		784513	0					
ANR	784563	Identifier	res		784513	0					
ANR	784564	ReturnStatement	return ret ;	707:2:20586:20596	784513	2	True				
ANR	784565	Identifier	ret		784513	0					
ANR	784566	ReturnStatement	return false ;	709:1:20602:20614	784513	3	True				
ANR	784567	Identifier	false		784513	0					
ANR	784568	ReturnType	static int		784513	1					
ANR	784569	Identifier	cmd_rap_run		784513	2					
ANR	784570	ParameterList	"void * data , const char * input"		784513	3					
ANR	784571	Parameter	void * data	701:23:20427:20436	784513	0	True				
ANR	784572	ParameterType	void *		784513	0					
ANR	784573	Identifier	data		784513	1					
ANR	784574	Parameter	const char * input	701:35:20439:20455	784513	1	True				
ANR	784575	ParameterType	const char *		784513	0					
ANR	784576	Identifier	input		784513	1					
ANR	784577	CFGEntryNode	ENTRY		784513		True				
ANR	784578	CFGExitNode	EXIT		784513		True				
ANR	784579	Symbol	ret		784513						
ANR	784580	Symbol	atoi		784513						
ANR	784581	Symbol	input		784513						
ANR	784582	Symbol	core		784513						
ANR	784583	Symbol	res		784513						
ANR	784584	Symbol	r_io_system		784513						
ANR	784585	Symbol	data		784513						
ANR	784586	Symbol	core -> io		784513						
ANR	784587	Symbol	* core		784513						
ANR	784588	Symbol	false		784513						
ANR	784589	Function	cmd_yank	712:0:20619:23551							
ANR	784590	FunctionDef	"cmd_yank (void * data , const char * input)"		784589	0					
ANR	784591	CompoundStatement		712:51:20670:23551	784589	0					
ANR	784592	IdentifierDeclStatement	ut64 n ;	713:1:20673:20679	784589	0	True				
ANR	784593	IdentifierDecl	n		784589	0					
ANR	784594	IdentifierDeclType	ut64		784589	0					
ANR	784595	Identifier	n		784589	1					
ANR	784596	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	714:1:20682:20709	784589	1	True				
ANR	784597	IdentifierDecl	* core = ( RCore * ) data		784589	0					
ANR	784598	IdentifierDeclType	RCore *		784589	0					
ANR	784599	Identifier	core		784589	1					
ANR	784600	AssignmentExpression	* core = ( RCore * ) data		784589	2		=			
ANR	784601	Identifier	core		784589	0					
ANR	784602	CastExpression	( RCore * ) data		784589	1					
ANR	784603	CastTarget	RCore *		784589	0					
ANR	784604	Identifier	data		784589	1					
ANR	784605	SwitchStatement	switch ( input [ 0 ] )		784589	2					
ANR	784606	Condition	input [ 0 ]	715:9:20720:20727	784589	0	True				
ANR	784607	ArrayIndexing	input [ 0 ]		784589	0					
ANR	784608	Identifier	input		784589	0					
ANR	784609	PrimaryExpression	0		784589	1					
ANR	784610	CompoundStatement		4:19:59:59	784589	1					
ANR	784611	Label	case ' ' :	716:1:20733:20741	784589	0	True				
ANR	784612	ExpressionStatement	"r_core_yank ( core , core -> offset , r_num_math ( core -> num , input + 1 ) )"	717:2:20753:20820	784589	1	True				
ANR	784613	CallExpression	"r_core_yank ( core , core -> offset , r_num_math ( core -> num , input + 1 ) )"		784589	0					
ANR	784614	Callee	r_core_yank		784589	0					
ANR	784615	Identifier	r_core_yank		784589	0					
ANR	784616	ArgumentList	core		784589	1					
ANR	784617	Argument	core		784589	0					
ANR	784618	Identifier	core		784589	0					
ANR	784619	Argument	core -> offset		784589	1					
ANR	784620	PtrMemberAccess	core -> offset		784589	0					
ANR	784621	Identifier	core		784589	0					
ANR	784622	Identifier	offset		784589	1					
ANR	784623	Argument	"r_num_math ( core -> num , input + 1 )"		784589	2					
ANR	784624	CallExpression	"r_num_math ( core -> num , input + 1 )"		784589	0					
ANR	784625	Callee	r_num_math		784589	0					
ANR	784626	Identifier	r_num_math		784589	0					
ANR	784627	ArgumentList	core -> num		784589	1					
ANR	784628	Argument	core -> num		784589	0					
ANR	784629	PtrMemberAccess	core -> num		784589	0					
ANR	784630	Identifier	core		784589	0					
ANR	784631	Identifier	num		784589	1					
ANR	784632	Argument	input + 1		784589	1					
ANR	784633	AdditiveExpression	input + 1		784589	0		+			
ANR	784634	Identifier	input		784589	0					
ANR	784635	PrimaryExpression	1		784589	1					
ANR	784636	BreakStatement	break ;	718:2:20824:20829	784589	2	True				
ANR	784637	Label	case 'l' :	719:1:20832:20840	784589	3	True				
ANR	784638	ExpressionStatement	core -> num -> value = r_buf_size ( core -> yank_buf )	720:2:20852:20898	784589	4	True				
ANR	784639	AssignmentExpression	core -> num -> value = r_buf_size ( core -> yank_buf )		784589	0		=			
ANR	784640	PtrMemberAccess	core -> num -> value		784589	0					
ANR	784641	PtrMemberAccess	core -> num		784589	0					
ANR	784642	Identifier	core		784589	0					
ANR	784643	Identifier	num		784589	1					
ANR	784644	Identifier	value		784589	1					
ANR	784645	CallExpression	r_buf_size ( core -> yank_buf )		784589	1					
ANR	784646	Callee	r_buf_size		784589	0					
ANR	784647	Identifier	r_buf_size		784589	0					
ANR	784648	ArgumentList	core -> yank_buf		784589	1					
ANR	784649	Argument	core -> yank_buf		784589	0					
ANR	784650	PtrMemberAccess	core -> yank_buf		784589	0					
ANR	784651	Identifier	core		784589	0					
ANR	784652	Identifier	yank_buf		784589	1					
ANR	784653	BreakStatement	break ;	721:2:20902:20907	784589	5	True				
ANR	784654	Label	case 'y' :	722:1:20910:20918	784589	6	True				
ANR	784655	WhileStatement	while ( input [ 1 ] == ' ' )		784589	7					
ANR	784656	Condition	input [ 1 ] == ' '	723:9:20937:20951	784589	0	True				
ANR	784657	EqualityExpression	input [ 1 ] == ' '		784589	0		==			
ANR	784658	ArrayIndexing	input [ 1 ]		784589	0					
ANR	784659	Identifier	input		784589	0					
ANR	784660	PrimaryExpression	1		784589	1					
ANR	784661	PrimaryExpression	' '		784589	1					
ANR	784662	CompoundStatement		12:26:283:283	784589	1					
ANR	784663	ExpressionStatement	input ++	724:3:20959:20966	784589	0	True				
ANR	784664	PostIncDecOperationExpression	input ++		784589	0					
ANR	784665	Identifier	input		784589	0					
ANR	784666	IncDec	++		784589	1					
ANR	784667	ExpressionStatement	"n = input [ 1 ] ? r_num_math ( core -> num , input + 1 ) : core -> offset"	726:2:20974:21035	784589	8	True				
ANR	784668	AssignmentExpression	"n = input [ 1 ] ? r_num_math ( core -> num , input + 1 ) : core -> offset"		784589	0		=			
ANR	784669	Identifier	n		784589	0					
ANR	784670	ConditionalExpression	"input [ 1 ] ? r_num_math ( core -> num , input + 1 ) : core -> offset"		784589	1					
ANR	784671	Condition	input [ 1 ]		784589	0					
ANR	784672	ArrayIndexing	input [ 1 ]		784589	0					
ANR	784673	Identifier	input		784589	0					
ANR	784674	PrimaryExpression	1		784589	1					
ANR	784675	CallExpression	"r_num_math ( core -> num , input + 1 )"		784589	1					
ANR	784676	Callee	r_num_math		784589	0					
ANR	784677	Identifier	r_num_math		784589	0					
ANR	784678	ArgumentList	core -> num		784589	1					
ANR	784679	Argument	core -> num		784589	0					
ANR	784680	PtrMemberAccess	core -> num		784589	0					
ANR	784681	Identifier	core		784589	0					
ANR	784682	Identifier	num		784589	1					
ANR	784683	Argument	input + 1		784589	1					
ANR	784684	AdditiveExpression	input + 1		784589	0		+			
ANR	784685	Identifier	input		784589	0					
ANR	784686	PrimaryExpression	1		784589	1					
ANR	784687	PtrMemberAccess	core -> offset		784589	2					
ANR	784688	Identifier	core		784589	0					
ANR	784689	Identifier	offset		784589	1					
ANR	784690	ExpressionStatement	"r_core_yank_paste ( core , n , 0 )"	727:2:21039:21069	784589	9	True				
ANR	784691	CallExpression	"r_core_yank_paste ( core , n , 0 )"		784589	0					
ANR	784692	Callee	r_core_yank_paste		784589	0					
ANR	784693	Identifier	r_core_yank_paste		784589	0					
ANR	784694	ArgumentList	core		784589	1					
ANR	784695	Argument	core		784589	0					
ANR	784696	Identifier	core		784589	0					
ANR	784697	Argument	n		784589	1					
ANR	784698	Identifier	n		784589	0					
ANR	784699	Argument	0		784589	2					
ANR	784700	PrimaryExpression	0		784589	0					
ANR	784701	BreakStatement	break ;	728:2:21073:21078	784589	10	True				
ANR	784702	Label	case 'x' :	729:1:21081:21089	784589	11	True				
ANR	784703	ExpressionStatement	"r_core_yank_hexdump ( core , r_num_math ( core -> num , input + 1 ) )"	730:2:21101:21162	784589	12	True				
ANR	784704	CallExpression	"r_core_yank_hexdump ( core , r_num_math ( core -> num , input + 1 ) )"		784589	0					
ANR	784705	Callee	r_core_yank_hexdump		784589	0					
ANR	784706	Identifier	r_core_yank_hexdump		784589	0					
ANR	784707	ArgumentList	core		784589	1					
ANR	784708	Argument	core		784589	0					
ANR	784709	Identifier	core		784589	0					
ANR	784710	Argument	"r_num_math ( core -> num , input + 1 )"		784589	1					
ANR	784711	CallExpression	"r_num_math ( core -> num , input + 1 )"		784589	0					
ANR	784712	Callee	r_num_math		784589	0					
ANR	784713	Identifier	r_num_math		784589	0					
ANR	784714	ArgumentList	core -> num		784589	1					
ANR	784715	Argument	core -> num		784589	0					
ANR	784716	PtrMemberAccess	core -> num		784589	0					
ANR	784717	Identifier	core		784589	0					
ANR	784718	Identifier	num		784589	1					
ANR	784719	Argument	input + 1		784589	1					
ANR	784720	AdditiveExpression	input + 1		784589	0		+			
ANR	784721	Identifier	input		784589	0					
ANR	784722	PrimaryExpression	1		784589	1					
ANR	784723	BreakStatement	break ;	731:2:21166:21171	784589	13	True				
ANR	784724	Label	case 'z' :	732:1:21174:21182	784589	14	True				
ANR	784725	ExpressionStatement	"r_core_yank_string ( core , core -> offset , r_num_math ( core -> num , input + 1 ) )"	733:2:21194:21268	784589	15	True				
ANR	784726	CallExpression	"r_core_yank_string ( core , core -> offset , r_num_math ( core -> num , input + 1 ) )"		784589	0					
ANR	784727	Callee	r_core_yank_string		784589	0					
ANR	784728	Identifier	r_core_yank_string		784589	0					
ANR	784729	ArgumentList	core		784589	1					
ANR	784730	Argument	core		784589	0					
ANR	784731	Identifier	core		784589	0					
ANR	784732	Argument	core -> offset		784589	1					
ANR	784733	PtrMemberAccess	core -> offset		784589	0					
ANR	784734	Identifier	core		784589	0					
ANR	784735	Identifier	offset		784589	1					
ANR	784736	Argument	"r_num_math ( core -> num , input + 1 )"		784589	2					
ANR	784737	CallExpression	"r_num_math ( core -> num , input + 1 )"		784589	0					
ANR	784738	Callee	r_num_math		784589	0					
ANR	784739	Identifier	r_num_math		784589	0					
ANR	784740	ArgumentList	core -> num		784589	1					
ANR	784741	Argument	core -> num		784589	0					
ANR	784742	PtrMemberAccess	core -> num		784589	0					
ANR	784743	Identifier	core		784589	0					
ANR	784744	Identifier	num		784589	1					
ANR	784745	Argument	input + 1		784589	1					
ANR	784746	AdditiveExpression	input + 1		784589	0		+			
ANR	784747	Identifier	input		784589	0					
ANR	784748	PrimaryExpression	1		784589	1					
ANR	784749	BreakStatement	break ;	734:2:21272:21277	784589	16	True				
ANR	784750	Label	case 'w' :	735:1:21280:21288	784589	17	True				
ANR	784751	SwitchStatement	switch ( input [ 1 ] )		784589	18					
ANR	784752	Condition	input [ 1 ]	736:10:21355:21362	784589	0	True				
ANR	784753	ArrayIndexing	input [ 1 ]		784589	0					
ANR	784754	Identifier	input		784589	0					
ANR	784755	PrimaryExpression	1		784589	1					
ANR	784756	CompoundStatement		25:20:694:694	784589	1					
ANR	784757	Label	case ' ' :	737:2:21369:21377	784589	0	True				
ANR	784758	ExpressionStatement	"r_core_yank_set ( core , 0 , ( const ut8 * ) input + 2 , strlen ( input + 2 ) )"	738:3:21382:21450	784589	1	True				
ANR	784759	CallExpression	"r_core_yank_set ( core , 0 , ( const ut8 * ) input + 2 , strlen ( input + 2 ) )"		784589	0					
ANR	784760	Callee	r_core_yank_set		784589	0					
ANR	784761	Identifier	r_core_yank_set		784589	0					
ANR	784762	ArgumentList	core		784589	1					
ANR	784763	Argument	core		784589	0					
ANR	784764	Identifier	core		784589	0					
ANR	784765	Argument	0		784589	1					
ANR	784766	PrimaryExpression	0		784589	0					
ANR	784767	Argument	( const ut8 * ) input + 2		784589	2					
ANR	784768	AdditiveExpression	( const ut8 * ) input + 2		784589	0		+			
ANR	784769	CastExpression	( const ut8 * ) input		784589	0					
ANR	784770	CastTarget	const ut8 *		784589	0					
ANR	784771	Identifier	input		784589	1					
ANR	784772	PrimaryExpression	2		784589	1					
ANR	784773	Argument	strlen ( input + 2 )		784589	3					
ANR	784774	CallExpression	strlen ( input + 2 )		784589	0					
ANR	784775	Callee	strlen		784589	0					
ANR	784776	Identifier	strlen		784589	0					
ANR	784777	ArgumentList	input + 2		784589	1					
ANR	784778	Argument	input + 2		784589	0					
ANR	784779	AdditiveExpression	input + 2		784589	0		+			
ANR	784780	Identifier	input		784589	0					
ANR	784781	PrimaryExpression	2		784589	1					
ANR	784782	BreakStatement	break ;	739:3:21455:21460	784589	2	True				
ANR	784783	Label	case 'x' :	740:2:21464:21472	784589	3	True				
ANR	784784	IfStatement	if ( input [ 2 ] == ' ' )		784589	4					
ANR	784785	Condition	input [ 2 ] == ' '	741:7:21481:21495	784589	0	True				
ANR	784786	EqualityExpression	input [ 2 ] == ' '		784589	0		==			
ANR	784787	ArrayIndexing	input [ 2 ]		784589	0					
ANR	784788	Identifier	input		784589	0					
ANR	784789	PrimaryExpression	2		784589	1					
ANR	784790	PrimaryExpression	' '		784589	1					
ANR	784791	CompoundStatement		32:4:869:915	784589	1					
ANR	784792	IdentifierDeclStatement	char * out = strdup ( input + 3 ) ;	742:4:21504:21534	784589	0	True				
ANR	784793	IdentifierDecl	* out = strdup ( input + 3 )		784589	0					
ANR	784794	IdentifierDeclType	char *		784589	0					
ANR	784795	Identifier	out		784589	1					
ANR	784796	AssignmentExpression	* out = strdup ( input + 3 )		784589	2		=			
ANR	784797	Identifier	out		784589	0					
ANR	784798	CallExpression	strdup ( input + 3 )		784589	1					
ANR	784799	Callee	strdup		784589	0					
ANR	784800	Identifier	strdup		784589	0					
ANR	784801	ArgumentList	input + 3		784589	1					
ANR	784802	Argument	input + 3		784589	0					
ANR	784803	AdditiveExpression	input + 3		784589	0		+			
ANR	784804	Identifier	input		784589	0					
ANR	784805	PrimaryExpression	3		784589	1					
ANR	784806	IdentifierDeclStatement	"int len = r_hex_str2bin ( input + 3 , ( ut8 * ) out ) ;"	743:4:21540:21586	784589	1	True				
ANR	784807	IdentifierDecl	"len = r_hex_str2bin ( input + 3 , ( ut8 * ) out )"		784589	0					
ANR	784808	IdentifierDeclType	int		784589	0					
ANR	784809	Identifier	len		784589	1					
ANR	784810	AssignmentExpression	"len = r_hex_str2bin ( input + 3 , ( ut8 * ) out )"		784589	2		=			
ANR	784811	Identifier	len		784589	0					
ANR	784812	CallExpression	"r_hex_str2bin ( input + 3 , ( ut8 * ) out )"		784589	1					
ANR	784813	Callee	r_hex_str2bin		784589	0					
ANR	784814	Identifier	r_hex_str2bin		784589	0					
ANR	784815	ArgumentList	input + 3		784589	1					
ANR	784816	Argument	input + 3		784589	0					
ANR	784817	AdditiveExpression	input + 3		784589	0		+			
ANR	784818	Identifier	input		784589	0					
ANR	784819	PrimaryExpression	3		784589	1					
ANR	784820	Argument	( ut8 * ) out		784589	1					
ANR	784821	CastExpression	( ut8 * ) out		784589	0					
ANR	784822	CastTarget	ut8 *		784589	0					
ANR	784823	Identifier	out		784589	1					
ANR	784824	IfStatement	if ( len > 0 )		784589	2					
ANR	784825	Condition	len > 0	744:8:21596:21602	784589	0	True				
ANR	784826	RelationalExpression	len > 0		784589	0		>			
ANR	784827	Identifier	len		784589	0					
ANR	784828	PrimaryExpression	0		784589	1					
ANR	784829	CompoundStatement		33:17:934:934	784589	1					
ANR	784830	ExpressionStatement	"r_core_yank_set ( core , core -> offset , ( const ut8 * ) out , len )"	745:5:21612:21670	784589	0	True				
ANR	784831	CallExpression	"r_core_yank_set ( core , core -> offset , ( const ut8 * ) out , len )"		784589	0					
ANR	784832	Callee	r_core_yank_set		784589	0					
ANR	784833	Identifier	r_core_yank_set		784589	0					
ANR	784834	ArgumentList	core		784589	1					
ANR	784835	Argument	core		784589	0					
ANR	784836	Identifier	core		784589	0					
ANR	784837	Argument	core -> offset		784589	1					
ANR	784838	PtrMemberAccess	core -> offset		784589	0					
ANR	784839	Identifier	core		784589	0					
ANR	784840	Identifier	offset		784589	1					
ANR	784841	Argument	( const ut8 * ) out		784589	2					
ANR	784842	CastExpression	( const ut8 * ) out		784589	0					
ANR	784843	CastTarget	const ut8 *		784589	0					
ANR	784844	Identifier	out		784589	1					
ANR	784845	Argument	len		784589	3					
ANR	784846	Identifier	len		784589	0					
ANR	784847	ElseStatement	else		784589	0					
ANR	784848	CompoundStatement		35:11:1012:1012	784589	0					
ANR	784849	ExpressionStatement	"eprintf ( ""Invalid length\\n"" )"	747:5:21690:21718	784589	0	True				
ANR	784850	CallExpression	"eprintf ( ""Invalid length\\n"" )"		784589	0					
ANR	784851	Callee	eprintf		784589	0					
ANR	784852	Identifier	eprintf		784589	0					
ANR	784853	ArgumentList	"""Invalid length\\n"""		784589	1					
ANR	784854	Argument	"""Invalid length\\n"""		784589	0					
ANR	784855	PrimaryExpression	"""Invalid length\\n"""		784589	0					
ANR	784856	ExpressionStatement	free ( out )	749:4:21730:21740	784589	3	True				
ANR	784857	CallExpression	free ( out )		784589	0					
ANR	784858	Callee	free		784589	0					
ANR	784859	Identifier	free		784589	0					
ANR	784860	ArgumentList	out		784589	1					
ANR	784861	Argument	out		784589	0					
ANR	784862	Identifier	out		784589	0					
ANR	784863	ElseStatement	else		784589	0					
ANR	784864	CompoundStatement		39:10:1081:1081	784589	0					
ANR	784865	ExpressionStatement	"eprintf ( ""Usage: ywx [hexpairs]\\n"" )"	751:4:21758:21793	784589	0	True				
ANR	784866	CallExpression	"eprintf ( ""Usage: ywx [hexpairs]\\n"" )"		784589	0					
ANR	784867	Callee	eprintf		784589	0					
ANR	784868	Identifier	eprintf		784589	0					
ANR	784869	ArgumentList	"""Usage: ywx [hexpairs]\\n"""		784589	1					
ANR	784870	Argument	"""Usage: ywx [hexpairs]\\n"""		784589	0					
ANR	784871	PrimaryExpression	"""Usage: ywx [hexpairs]\\n"""		784589	0					
ANR	784872	BreakStatement	break ;	754:3:21850:21855	784589	5	True				
ANR	784873	Label	default :	755:2:21859:21866	784589	6	True				
ANR	784874	Identifier	default		784589	0					
ANR	784875	ExpressionStatement	"eprintf ( ""Usage: ywx [hexpairs]\\n"" )"	756:3:21871:21906	784589	7	True				
ANR	784876	CallExpression	"eprintf ( ""Usage: ywx [hexpairs]\\n"" )"		784589	0					
ANR	784877	Callee	eprintf		784589	0					
ANR	784878	Identifier	eprintf		784589	0					
ANR	784879	ArgumentList	"""Usage: ywx [hexpairs]\\n"""		784589	1					
ANR	784880	Argument	"""Usage: ywx [hexpairs]\\n"""		784589	0					
ANR	784881	PrimaryExpression	"""Usage: ywx [hexpairs]\\n"""		784589	0					
ANR	784882	BreakStatement	break ;	757:3:21911:21916	784589	8	True				
ANR	784883	BreakStatement	break ;	759:2:21924:21929	784589	19	True				
ANR	784884	Label	case 'p' :	760:1:21932:21940	784589	20	True				
ANR	784885	ExpressionStatement	"r_core_yank_cat ( core , r_num_math ( core -> num , input + 1 ) )"	761:2:21952:22009	784589	21	True				
ANR	784886	CallExpression	"r_core_yank_cat ( core , r_num_math ( core -> num , input + 1 ) )"		784589	0					
ANR	784887	Callee	r_core_yank_cat		784589	0					
ANR	784888	Identifier	r_core_yank_cat		784589	0					
ANR	784889	ArgumentList	core		784589	1					
ANR	784890	Argument	core		784589	0					
ANR	784891	Identifier	core		784589	0					
ANR	784892	Argument	"r_num_math ( core -> num , input + 1 )"		784589	1					
ANR	784893	CallExpression	"r_num_math ( core -> num , input + 1 )"		784589	0					
ANR	784894	Callee	r_num_math		784589	0					
ANR	784895	Identifier	r_num_math		784589	0					
ANR	784896	ArgumentList	core -> num		784589	1					
ANR	784897	Argument	core -> num		784589	0					
ANR	784898	PtrMemberAccess	core -> num		784589	0					
ANR	784899	Identifier	core		784589	0					
ANR	784900	Identifier	num		784589	1					
ANR	784901	Argument	input + 1		784589	1					
ANR	784902	AdditiveExpression	input + 1		784589	0		+			
ANR	784903	Identifier	input		784589	0					
ANR	784904	PrimaryExpression	1		784589	1					
ANR	784905	BreakStatement	break ;	762:2:22013:22018	784589	22	True				
ANR	784906	Label	case 's' :	763:1:22021:22029	784589	23	True				
ANR	784907	ExpressionStatement	"r_core_yank_cat_string ( core , r_num_math ( core -> num , input + 1 ) )"	764:2:22041:22105	784589	24	True				
ANR	784908	CallExpression	"r_core_yank_cat_string ( core , r_num_math ( core -> num , input + 1 ) )"		784589	0					
ANR	784909	Callee	r_core_yank_cat_string		784589	0					
ANR	784910	Identifier	r_core_yank_cat_string		784589	0					
ANR	784911	ArgumentList	core		784589	1					
ANR	784912	Argument	core		784589	0					
ANR	784913	Identifier	core		784589	0					
ANR	784914	Argument	"r_num_math ( core -> num , input + 1 )"		784589	1					
ANR	784915	CallExpression	"r_num_math ( core -> num , input + 1 )"		784589	0					
ANR	784916	Callee	r_num_math		784589	0					
ANR	784917	Identifier	r_num_math		784589	0					
ANR	784918	ArgumentList	core -> num		784589	1					
ANR	784919	Argument	core -> num		784589	0					
ANR	784920	PtrMemberAccess	core -> num		784589	0					
ANR	784921	Identifier	core		784589	0					
ANR	784922	Identifier	num		784589	1					
ANR	784923	Argument	input + 1		784589	1					
ANR	784924	AdditiveExpression	input + 1		784589	0		+			
ANR	784925	Identifier	input		784589	0					
ANR	784926	PrimaryExpression	1		784589	1					
ANR	784927	BreakStatement	break ;	765:2:22109:22114	784589	25	True				
ANR	784928	Label	case 't' :	766:1:22117:22125	784589	26	True				
ANR	784929	IfStatement	if ( input [ 1 ] == 'f' )		784589	27					
ANR	784930	Condition	input [ 1 ] == 'f'	767:6:22141:22155	784589	0	True				
ANR	784931	EqualityExpression	input [ 1 ] == 'f'		784589	0		==			
ANR	784932	ArrayIndexing	input [ 1 ]		784589	0					
ANR	784933	Identifier	input		784589	0					
ANR	784934	PrimaryExpression	1		784589	1					
ANR	784935	PrimaryExpression	'f'		784589	1					
ANR	784936	CompoundStatement		59:3:1565:1617	784589	1					
ANR	784937	IdentifierDeclStatement	ut64 tmpsz ;	768:3:22172:22182	784589	0	True				
ANR	784938	IdentifierDecl	tmpsz		784589	0					
ANR	784939	IdentifierDeclType	ut64		784589	0					
ANR	784940	Identifier	tmpsz		784589	1					
ANR	784941	IdentifierDeclStatement	const char * file = r_str_trim_ro ( input + 2 ) ;	769:3:22187:22231	784589	1	True				
ANR	784942	IdentifierDecl	* file = r_str_trim_ro ( input + 2 )		784589	0					
ANR	784943	IdentifierDeclType	const char *		784589	0					
ANR	784944	Identifier	file		784589	1					
ANR	784945	AssignmentExpression	* file = r_str_trim_ro ( input + 2 )		784589	2		=			
ANR	784946	Identifier	file		784589	0					
ANR	784947	CallExpression	r_str_trim_ro ( input + 2 )		784589	1					
ANR	784948	Callee	r_str_trim_ro		784589	0					
ANR	784949	Identifier	r_str_trim_ro		784589	0					
ANR	784950	ArgumentList	input + 2		784589	1					
ANR	784951	Argument	input + 2		784589	0					
ANR	784952	AdditiveExpression	input + 2		784589	0		+			
ANR	784953	Identifier	input		784589	0					
ANR	784954	PrimaryExpression	2		784589	1					
ANR	784955	IdentifierDeclStatement	"const ut8 * tmp = r_buf_data ( core -> yank_buf , & tmpsz ) ;"	770:3:22236:22288	784589	2	True				
ANR	784956	IdentifierDecl	"* tmp = r_buf_data ( core -> yank_buf , & tmpsz )"		784589	0					
ANR	784957	IdentifierDeclType	const ut8 *		784589	0					
ANR	784958	Identifier	tmp		784589	1					
ANR	784959	AssignmentExpression	"* tmp = r_buf_data ( core -> yank_buf , & tmpsz )"		784589	2		=			
ANR	784960	Identifier	tmp		784589	0					
ANR	784961	CallExpression	"r_buf_data ( core -> yank_buf , & tmpsz )"		784589	1					
ANR	784962	Callee	r_buf_data		784589	0					
ANR	784963	Identifier	r_buf_data		784589	0					
ANR	784964	ArgumentList	core -> yank_buf		784589	1					
ANR	784965	Argument	core -> yank_buf		784589	0					
ANR	784966	PtrMemberAccess	core -> yank_buf		784589	0					
ANR	784967	Identifier	core		784589	0					
ANR	784968	Identifier	yank_buf		784589	1					
ANR	784969	Argument	& tmpsz		784589	1					
ANR	784970	UnaryOperationExpression	& tmpsz		784589	0					
ANR	784971	UnaryOperator	&		784589	0					
ANR	784972	Identifier	tmpsz		784589	1					
ANR	784973	IfStatement	"if ( ! r_file_dump ( file , tmp , tmpsz , false ) )"		784589	3					
ANR	784974	Condition	"! r_file_dump ( file , tmp , tmpsz , false )"	771:7:22297:22334	784589	0	True				
ANR	784975	UnaryOperationExpression	"! r_file_dump ( file , tmp , tmpsz , false )"		784589	0					
ANR	784976	UnaryOperator	!		784589	0					
ANR	784977	CallExpression	"r_file_dump ( file , tmp , tmpsz , false )"		784589	1					
ANR	784978	Callee	r_file_dump		784589	0					
ANR	784979	Identifier	r_file_dump		784589	0					
ANR	784980	ArgumentList	file		784589	1					
ANR	784981	Argument	file		784589	0					
ANR	784982	Identifier	file		784589	0					
ANR	784983	Argument	tmp		784589	1					
ANR	784984	Identifier	tmp		784589	0					
ANR	784985	Argument	tmpsz		784589	2					
ANR	784986	Identifier	tmpsz		784589	0					
ANR	784987	Argument	false		784589	3					
ANR	784988	Identifier	false		784589	0					
ANR	784989	CompoundStatement		60:47:1666:1666	784589	1					
ANR	784990	ExpressionStatement	"eprintf ( ""Cannot dump to '%s'\\n"" , file )"	772:4:22343:22382	784589	0	True				
ANR	784991	CallExpression	"eprintf ( ""Cannot dump to '%s'\\n"" , file )"		784589	0					
ANR	784992	Callee	eprintf		784589	0					
ANR	784993	Identifier	eprintf		784589	0					
ANR	784994	ArgumentList	"""Cannot dump to '%s'\\n"""		784589	1					
ANR	784995	Argument	"""Cannot dump to '%s'\\n"""		784589	0					
ANR	784996	PrimaryExpression	"""Cannot dump to '%s'\\n"""		784589	0					
ANR	784997	Argument	file		784589	1					
ANR	784998	Identifier	file		784589	0					
ANR	784999	ElseStatement	else		784589	0					
ANR	785000	IfStatement	if ( input [ 1 ] == ' ' )		784589	0					
ANR	785001	Condition	input [ 1 ] == ' '	774:13:22402:22416	784589	0	True				
ANR	785002	EqualityExpression	input [ 1 ] == ' '		784589	0		==			
ANR	785003	ArrayIndexing	input [ 1 ]		784589	0					
ANR	785004	Identifier	input		784589	0					
ANR	785005	PrimaryExpression	1		784589	1					
ANR	785006	PrimaryExpression	' '		784589	1					
ANR	785007	CompoundStatement		63:30:1748:1748	784589	1					
ANR	785008	ExpressionStatement	"r_core_yank_to ( core , input + 1 )"	775:3:22424:22456	784589	0	True				
ANR	785009	CallExpression	"r_core_yank_to ( core , input + 1 )"		784589	0					
ANR	785010	Callee	r_core_yank_to		784589	0					
ANR	785011	Identifier	r_core_yank_to		784589	0					
ANR	785012	ArgumentList	core		784589	1					
ANR	785013	Argument	core		784589	0					
ANR	785014	Identifier	core		784589	0					
ANR	785015	Argument	input + 1		784589	1					
ANR	785016	AdditiveExpression	input + 1		784589	0		+			
ANR	785017	Identifier	input		784589	0					
ANR	785018	PrimaryExpression	1		784589	1					
ANR	785019	ElseStatement	else		784589	0					
ANR	785020	CompoundStatement		65:9:1796:1796	784589	0					
ANR	785021	ExpressionStatement	"eprintf ( ""Usage: wt[f] [arg] ..\\n"" )"	777:3:22472:22507	784589	0	True				
ANR	785022	CallExpression	"eprintf ( ""Usage: wt[f] [arg] ..\\n"" )"		784589	0					
ANR	785023	Callee	eprintf		784589	0					
ANR	785024	Identifier	eprintf		784589	0					
ANR	785025	ArgumentList	"""Usage: wt[f] [arg] ..\\n"""		784589	1					
ANR	785026	Argument	"""Usage: wt[f] [arg] ..\\n"""		784589	0					
ANR	785027	PrimaryExpression	"""Usage: wt[f] [arg] ..\\n"""		784589	0					
ANR	785028	BreakStatement	break ;	779:2:22515:22520	784589	28	True				
ANR	785029	Label	case 'f' :	780:1:22523:22531	784589	29	True				
ANR	785030	SwitchStatement	switch ( input [ 1 ] )		784589	30					
ANR	785031	Condition	input [ 1 ]	781:10:22551:22558	784589	0	True				
ANR	785032	ArrayIndexing	input [ 1 ]		784589	0					
ANR	785033	Identifier	input		784589	0					
ANR	785034	PrimaryExpression	1		784589	1					
ANR	785035	CompoundStatement		70:20:1890:1890	784589	1					
ANR	785036	Label	case ' ' :	782:2:22565:22573	784589	0	True				
ANR	785037	ExpressionStatement	"r_core_yank_file_ex ( core , input + 1 )"	783:3:22586:22623	784589	1	True				
ANR	785038	CallExpression	"r_core_yank_file_ex ( core , input + 1 )"		784589	0					
ANR	785039	Callee	r_core_yank_file_ex		784589	0					
ANR	785040	Identifier	r_core_yank_file_ex		784589	0					
ANR	785041	ArgumentList	core		784589	1					
ANR	785042	Argument	core		784589	0					
ANR	785043	Identifier	core		784589	0					
ANR	785044	Argument	input + 1		784589	1					
ANR	785045	AdditiveExpression	input + 1		784589	0		+			
ANR	785046	Identifier	input		784589	0					
ANR	785047	PrimaryExpression	1		784589	1					
ANR	785048	BreakStatement	break ;	784:3:22628:22633	784589	2	True				
ANR	785049	Label	case 'x' :	785:2:22637:22645	784589	3	True				
ANR	785050	ExpressionStatement	"r_core_yank_hexpair ( core , input + 2 )"	786:3:22659:22696	784589	4	True				
ANR	785051	CallExpression	"r_core_yank_hexpair ( core , input + 2 )"		784589	0					
ANR	785052	Callee	r_core_yank_hexpair		784589	0					
ANR	785053	Identifier	r_core_yank_hexpair		784589	0					
ANR	785054	ArgumentList	core		784589	1					
ANR	785055	Argument	core		784589	0					
ANR	785056	Identifier	core		784589	0					
ANR	785057	Argument	input + 2		784589	1					
ANR	785058	AdditiveExpression	input + 2		784589	0		+			
ANR	785059	Identifier	input		784589	0					
ANR	785060	PrimaryExpression	2		784589	1					
ANR	785061	BreakStatement	break ;	787:3:22701:22706	784589	5	True				
ANR	785062	Label	case 'a' :	788:2:22710:22718	784589	6	True				
ANR	785063	ExpressionStatement	"r_core_yank_file_all ( core , input + 2 )"	789:3:22732:22770	784589	7	True				
ANR	785064	CallExpression	"r_core_yank_file_all ( core , input + 2 )"		784589	0					
ANR	785065	Callee	r_core_yank_file_all		784589	0					
ANR	785066	Identifier	r_core_yank_file_all		784589	0					
ANR	785067	ArgumentList	core		784589	1					
ANR	785068	Argument	core		784589	0					
ANR	785069	Identifier	core		784589	0					
ANR	785070	Argument	input + 2		784589	1					
ANR	785071	AdditiveExpression	input + 2		784589	0		+			
ANR	785072	Identifier	input		784589	0					
ANR	785073	PrimaryExpression	2		784589	1					
ANR	785074	BreakStatement	break ;	790:3:22775:22780	784589	8	True				
ANR	785075	Label	default :	791:2:22784:22791	784589	9	True				
ANR	785076	Identifier	default		784589	0					
ANR	785077	ExpressionStatement	"eprintf ( ""Usage: yf[xa] [arg]\\n"" )"	792:3:22796:22829	784589	10	True				
ANR	785078	CallExpression	"eprintf ( ""Usage: yf[xa] [arg]\\n"" )"		784589	0					
ANR	785079	Callee	eprintf		784589	0					
ANR	785080	Identifier	eprintf		784589	0					
ANR	785081	ArgumentList	"""Usage: yf[xa] [arg]\\n"""		784589	1					
ANR	785082	Argument	"""Usage: yf[xa] [arg]\\n"""		784589	0					
ANR	785083	PrimaryExpression	"""Usage: yf[xa] [arg]\\n"""		784589	0					
ANR	785084	ExpressionStatement	"eprintf ( ""yf [file]     - copy blocksize from file into the clipboard\\n"" )"	793:3:22834:22907	784589	11	True				
ANR	785085	CallExpression	"eprintf ( ""yf [file]     - copy blocksize from file into the clipboard\\n"" )"		784589	0					
ANR	785086	Callee	eprintf		784589	0					
ANR	785087	Identifier	eprintf		784589	0					
ANR	785088	ArgumentList	"""yf [file]     - copy blocksize from file into the clipboard\\n"""		784589	1					
ANR	785089	Argument	"""yf [file]     - copy blocksize from file into the clipboard\\n"""		784589	0					
ANR	785090	PrimaryExpression	"""yf [file]     - copy blocksize from file into the clipboard\\n"""		784589	0					
ANR	785091	ExpressionStatement	"eprintf ( ""yfa [path]    - yank the whole file\\n"" )"	794:3:22912:22961	784589	12	True				
ANR	785092	CallExpression	"eprintf ( ""yfa [path]    - yank the whole file\\n"" )"		784589	0					
ANR	785093	Callee	eprintf		784589	0					
ANR	785094	Identifier	eprintf		784589	0					
ANR	785095	ArgumentList	"""yfa [path]    - yank the whole file\\n"""		784589	1					
ANR	785096	Argument	"""yfa [path]    - yank the whole file\\n"""		784589	0					
ANR	785097	PrimaryExpression	"""yfa [path]    - yank the whole file\\n"""		784589	0					
ANR	785098	ExpressionStatement	"eprintf ( ""yfx [hexpair] - yank from hexpair string\\n"" )"	795:3:22966:23020	784589	13	True				
ANR	785099	CallExpression	"eprintf ( ""yfx [hexpair] - yank from hexpair string\\n"" )"		784589	0					
ANR	785100	Callee	eprintf		784589	0					
ANR	785101	Identifier	eprintf		784589	0					
ANR	785102	ArgumentList	"""yfx [hexpair] - yank from hexpair string\\n"""		784589	1					
ANR	785103	Argument	"""yfx [hexpair] - yank from hexpair string\\n"""		784589	0					
ANR	785104	PrimaryExpression	"""yfx [hexpair] - yank from hexpair string\\n"""		784589	0					
ANR	785105	BreakStatement	break ;	796:3:23025:23030	784589	14	True				
ANR	785106	BreakStatement	break ;	798:2:23038:23043	784589	31	True				
ANR	785107	Label	case '!' :	799:1:23046:23054	784589	32	True				
ANR	785108	CompoundStatement		95:3:2523:2567	784589	33					
ANR	785109	IdentifierDeclStatement	"char * sig = r_core_cmd_str ( core , ""y*"" ) ;"	801:3:23071:23110	784589	0	True				
ANR	785110	IdentifierDecl	"* sig = r_core_cmd_str ( core , ""y*"" )"		784589	0					
ANR	785111	IdentifierDeclType	char *		784589	0					
ANR	785112	Identifier	sig		784589	1					
ANR	785113	AssignmentExpression	"* sig = r_core_cmd_str ( core , ""y*"" )"		784589	2		=			
ANR	785114	Identifier	sig		784589	0					
ANR	785115	CallExpression	"r_core_cmd_str ( core , ""y*"" )"		784589	1					
ANR	785116	Callee	r_core_cmd_str		784589	0					
ANR	785117	Identifier	r_core_cmd_str		784589	0					
ANR	785118	ArgumentList	core		784589	1					
ANR	785119	Argument	core		784589	0					
ANR	785120	Identifier	core		784589	0					
ANR	785121	Argument	"""y*"""		784589	1					
ANR	785122	PrimaryExpression	"""y*"""		784589	0					
ANR	785123	IfStatement	if ( ! sig || ! * sig )		784589	1					
ANR	785124	Condition	! sig || ! * sig	802:7:23119:23131	784589	0	True				
ANR	785125	OrExpression	! sig || ! * sig		784589	0		||			
ANR	785126	UnaryOperationExpression	! sig		784589	0					
ANR	785127	UnaryOperator	!		784589	0					
ANR	785128	Identifier	sig		784589	1					
ANR	785129	UnaryOperationExpression	! * sig		784589	1					
ANR	785130	UnaryOperator	!		784589	0					
ANR	785131	UnaryOperationExpression	* sig		784589	1					
ANR	785132	UnaryOperator	*		784589	0					
ANR	785133	Identifier	sig		784589	1					
ANR	785134	CompoundStatement		91:22:2463:2463	784589	1					
ANR	785135	ExpressionStatement	free ( sig )	803:4:23140:23150	784589	0	True				
ANR	785136	CallExpression	free ( sig )		784589	0					
ANR	785137	Callee	free		784589	0					
ANR	785138	Identifier	free		784589	0					
ANR	785139	ArgumentList	sig		784589	1					
ANR	785140	Argument	sig		784589	0					
ANR	785141	Identifier	sig		784589	0					
ANR	785142	ExpressionStatement	"sig = strdup ( ""wx 10203040"" )"	804:4:23156:23184	784589	1	True				
ANR	785143	AssignmentExpression	"sig = strdup ( ""wx 10203040"" )"		784589	0		=			
ANR	785144	Identifier	sig		784589	0					
ANR	785145	CallExpression	"strdup ( ""wx 10203040"" )"		784589	1					
ANR	785146	Callee	strdup		784589	0					
ANR	785147	Identifier	strdup		784589	0					
ANR	785148	ArgumentList	"""wx 10203040"""		784589	1					
ANR	785149	Argument	"""wx 10203040"""		784589	0					
ANR	785150	PrimaryExpression	"""wx 10203040"""		784589	0					
ANR	785151	IdentifierDeclStatement	"char * data = r_core_editor ( core , NULL , sig ) ;"	806:3:23194:23238	784589	2	True				
ANR	785152	IdentifierDecl	"* data = r_core_editor ( core , NULL , sig )"		784589	0					
ANR	785153	IdentifierDeclType	char *		784589	0					
ANR	785154	Identifier	data		784589	1					
ANR	785155	AssignmentExpression	"* data = r_core_editor ( core , NULL , sig )"		784589	2		=			
ANR	785156	Identifier	data		784589	0					
ANR	785157	CallExpression	"r_core_editor ( core , NULL , sig )"		784589	1					
ANR	785158	Callee	r_core_editor		784589	0					
ANR	785159	Identifier	r_core_editor		784589	0					
ANR	785160	ArgumentList	core		784589	1					
ANR	785161	Argument	core		784589	0					
ANR	785162	Identifier	core		784589	0					
ANR	785163	Argument	NULL		784589	1					
ANR	785164	Identifier	NULL		784589	0					
ANR	785165	Argument	sig		784589	2					
ANR	785166	Identifier	sig		784589	0					
ANR	785167	ExpressionStatement	"( void ) strtok ( data , "";\\n"" )"	807:3:23243:23270	784589	3	True				
ANR	785168	CastExpression	"( void ) strtok ( data , "";\\n"" )"		784589	0					
ANR	785169	CastTarget	void		784589	0					
ANR	785170	CallExpression	"strtok ( data , "";\\n"" )"		784589	1					
ANR	785171	Callee	strtok		784589	0					
ANR	785172	Identifier	strtok		784589	0					
ANR	785173	ArgumentList	data		784589	1					
ANR	785174	Argument	data		784589	0					
ANR	785175	Identifier	data		784589	0					
ANR	785176	Argument	""";\\n"""		784589	1					
ANR	785177	PrimaryExpression	""";\\n"""		784589	0					
ANR	785178	ExpressionStatement	"r_core_cmdf ( core , ""y%s"" , data )"	808:3:23275:23306	784589	4	True				
ANR	785179	CallExpression	"r_core_cmdf ( core , ""y%s"" , data )"		784589	0					
ANR	785180	Callee	r_core_cmdf		784589	0					
ANR	785181	Identifier	r_core_cmdf		784589	0					
ANR	785182	ArgumentList	core		784589	1					
ANR	785183	Argument	core		784589	0					
ANR	785184	Identifier	core		784589	0					
ANR	785185	Argument	"""y%s"""		784589	1					
ANR	785186	PrimaryExpression	"""y%s"""		784589	0					
ANR	785187	Argument	data		784589	2					
ANR	785188	Identifier	data		784589	0					
ANR	785189	ExpressionStatement	free ( sig )	809:3:23311:23321	784589	5	True				
ANR	785190	CallExpression	free ( sig )		784589	0					
ANR	785191	Callee	free		784589	0					
ANR	785192	Identifier	free		784589	0					
ANR	785193	ArgumentList	sig		784589	1					
ANR	785194	Argument	sig		784589	0					
ANR	785195	Identifier	sig		784589	0					
ANR	785196	ExpressionStatement	free ( data )	810:3:23326:23337	784589	6	True				
ANR	785197	CallExpression	free ( data )		784589	0					
ANR	785198	Callee	free		784589	0					
ANR	785199	Identifier	free		784589	0					
ANR	785200	ArgumentList	data		784589	1					
ANR	785201	Argument	data		784589	0					
ANR	785202	Identifier	data		784589	0					
ANR	785203	BreakStatement	break ;	812:2:23345:23350	784589	34	True				
ANR	785204	Label	case '*' :	813:1:23353:23361	784589	35	True				
ANR	785205	Label	case 'j' :	814:1:23372:23380	784589	36	True				
ANR	785206	Label	case 'q' :	815:1:23391:23399	784589	37	True				
ANR	785207	Label	case '\\0' :	816:1:23410:23419	784589	38	True				
ANR	785208	ExpressionStatement	"r_core_yank_dump ( core , 0 , input [ 0 ] )"	817:2:23430:23466	784589	39	True				
ANR	785209	CallExpression	"r_core_yank_dump ( core , 0 , input [ 0 ] )"		784589	0					
ANR	785210	Callee	r_core_yank_dump		784589	0					
ANR	785211	Identifier	r_core_yank_dump		784589	0					
ANR	785212	ArgumentList	core		784589	1					
ANR	785213	Argument	core		784589	0					
ANR	785214	Identifier	core		784589	0					
ANR	785215	Argument	0		784589	1					
ANR	785216	PrimaryExpression	0		784589	0					
ANR	785217	Argument	input [ 0 ]		784589	2					
ANR	785218	ArrayIndexing	input [ 0 ]		784589	0					
ANR	785219	Identifier	input		784589	0					
ANR	785220	PrimaryExpression	0		784589	1					
ANR	785221	BreakStatement	break ;	818:2:23470:23475	784589	40	True				
ANR	785222	Label	default :	819:1:23478:23485	784589	41	True				
ANR	785223	Identifier	default		784589	0					
ANR	785224	ExpressionStatement	"r_core_cmd_help ( core , help_msg_y )"	820:2:23489:23523	784589	42	True				
ANR	785225	CallExpression	"r_core_cmd_help ( core , help_msg_y )"		784589	0					
ANR	785226	Callee	r_core_cmd_help		784589	0					
ANR	785227	Identifier	r_core_cmd_help		784589	0					
ANR	785228	ArgumentList	core		784589	1					
ANR	785229	Argument	core		784589	0					
ANR	785230	Identifier	core		784589	0					
ANR	785231	Argument	help_msg_y		784589	1					
ANR	785232	Identifier	help_msg_y		784589	0					
ANR	785233	BreakStatement	break ;	821:2:23527:23532	784589	43	True				
ANR	785234	ReturnStatement	return true ;	823:1:23538:23549	784589	3	True				
ANR	785235	Identifier	true		784589	0					
ANR	785236	ReturnType	static int		784589	1					
ANR	785237	Identifier	cmd_yank		784589	2					
ANR	785238	ParameterList	"void * data , const char * input"		784589	3					
ANR	785239	Parameter	void * data	712:20:20639:20648	784589	0	True				
ANR	785240	ParameterType	void *		784589	0					
ANR	785241	Identifier	data		784589	1					
ANR	785242	Parameter	const char * input	712:32:20651:20667	784589	1	True				
ANR	785243	ParameterType	const char *		784589	0					
ANR	785244	Identifier	input		784589	1					
ANR	785245	CFGEntryNode	ENTRY		784589		True				
ANR	785246	CFGExitNode	EXIT		784589		True				
ANR	785247	Symbol	r_core_cmd_str		784589						
ANR	785248	Symbol	data		784589						
ANR	785249	Symbol	* input		784589						
ANR	785250	Symbol	* core		784589						
ANR	785251	Symbol	core -> offset		784589						
ANR	785252	Symbol	core -> num -> value		784589						
ANR	785253	Symbol	r_num_math		784589						
ANR	785254	Symbol	out		784589						
ANR	785255	Symbol	sig		784589						
ANR	785256	Symbol	strlen		784589						
ANR	785257	Symbol	file		784589						
ANR	785258	Symbol	len		784589						
ANR	785259	Symbol	tmp		784589						
ANR	785260	Symbol	r_file_dump		784589						
ANR	785261	Symbol	& tmpsz		784589						
ANR	785262	Symbol	* core -> num		784589						
ANR	785263	Symbol	r_core_editor		784589						
ANR	785264	Symbol	core -> num		784589						
ANR	785265	Symbol	r_hex_str2bin		784589						
ANR	785266	Symbol	help_msg_y		784589						
ANR	785267	Symbol	* * core		784589						
ANR	785268	Symbol	r_buf_data		784589						
ANR	785269	Symbol	NULL		784589						
ANR	785270	Symbol	false		784589						
ANR	785271	Symbol	tmpsz		784589						
ANR	785272	Symbol	n		784589						
ANR	785273	Symbol	input		784589						
ANR	785274	Symbol	core		784589						
ANR	785275	Symbol	core -> yank_buf		784589						
ANR	785276	Symbol	r_str_trim_ro		784589						
ANR	785277	Symbol	true		784589						
ANR	785278	Symbol	strdup		784589						
ANR	785279	Symbol	* sig		784589						
ANR	785280	Symbol	r_buf_size		784589						
ANR	785281	Function	lang_run_file	826:0:23554:23704							
ANR	785282	FunctionDef	"lang_run_file (RCore * core , RLang * lang , const char * file)"		785281	0					
ANR	785283	CompoundStatement		826:69:23623:23704	785281	0					
ANR	785284	ExpressionStatement	"r_core_sysenv_begin ( core , NULL )"	827:1:23626:23658	785281	0	True				
ANR	785285	CallExpression	"r_core_sysenv_begin ( core , NULL )"		785281	0					
ANR	785286	Callee	r_core_sysenv_begin		785281	0					
ANR	785287	Identifier	r_core_sysenv_begin		785281	0					
ANR	785288	ArgumentList	core		785281	1					
ANR	785289	Argument	core		785281	0					
ANR	785290	Identifier	core		785281	0					
ANR	785291	Argument	NULL		785281	1					
ANR	785292	Identifier	NULL		785281	0					
ANR	785293	ReturnStatement	"return r_lang_run_file ( core -> lang , file ) ;"	828:1:23661:23702	785281	1	True				
ANR	785294	CallExpression	"r_lang_run_file ( core -> lang , file )"		785281	0					
ANR	785295	Callee	r_lang_run_file		785281	0					
ANR	785296	Identifier	r_lang_run_file		785281	0					
ANR	785297	ArgumentList	core -> lang		785281	1					
ANR	785298	Argument	core -> lang		785281	0					
ANR	785299	PtrMemberAccess	core -> lang		785281	0					
ANR	785300	Identifier	core		785281	0					
ANR	785301	Identifier	lang		785281	1					
ANR	785302	Argument	file		785281	1					
ANR	785303	Identifier	file		785281	0					
ANR	785304	ReturnType	static int		785281	1					
ANR	785305	Identifier	lang_run_file		785281	2					
ANR	785306	ParameterList	"RCore * core , RLang * lang , const char * file"		785281	3					
ANR	785307	Parameter	RCore * core	826:25:23579:23589	785281	0	True				
ANR	785308	ParameterType	RCore *		785281	0					
ANR	785309	Identifier	core		785281	1					
ANR	785310	Parameter	RLang * lang	826:38:23592:23602	785281	1	True				
ANR	785311	ParameterType	RLang *		785281	0					
ANR	785312	Identifier	lang		785281	1					
ANR	785313	Parameter	const char * file	826:51:23605:23620	785281	2	True				
ANR	785314	ParameterType	const char *		785281	0					
ANR	785315	Identifier	file		785281	1					
ANR	785316	CFGEntryNode	ENTRY		785281		True				
ANR	785317	CFGExitNode	EXIT		785281		True				
ANR	785318	Symbol	core		785281						
ANR	785319	Symbol	file		785281						
ANR	785320	Symbol	NULL		785281						
ANR	785321	Symbol	* core		785281						
ANR	785322	Symbol	r_lang_run_file		785281						
ANR	785323	Symbol	lang		785281						
ANR	785324	Symbol	core -> lang		785281						
ANR	785325	Function	langFromHashbang	831:0:23707:24239							
ANR	785326	FunctionDef	"langFromHashbang (RCore * core , const char * file)"		785325	0					
ANR	785327	CompoundStatement		831:61:23768:24239	785325	0					
ANR	785328	IdentifierDeclStatement	"int fd = r_sandbox_open ( file , O_RDONLY , 0 ) ;"	832:1:23771:23814	785325	0	True				
ANR	785329	IdentifierDecl	"fd = r_sandbox_open ( file , O_RDONLY , 0 )"		785325	0					
ANR	785330	IdentifierDeclType	int		785325	0					
ANR	785331	Identifier	fd		785325	1					
ANR	785332	AssignmentExpression	"fd = r_sandbox_open ( file , O_RDONLY , 0 )"		785325	2		=			
ANR	785333	Identifier	fd		785325	0					
ANR	785334	CallExpression	"r_sandbox_open ( file , O_RDONLY , 0 )"		785325	1					
ANR	785335	Callee	r_sandbox_open		785325	0					
ANR	785336	Identifier	r_sandbox_open		785325	0					
ANR	785337	ArgumentList	file		785325	1					
ANR	785338	Argument	file		785325	0					
ANR	785339	Identifier	file		785325	0					
ANR	785340	Argument	O_RDONLY		785325	1					
ANR	785341	Identifier	O_RDONLY		785325	0					
ANR	785342	Argument	0		785325	2					
ANR	785343	PrimaryExpression	0		785325	0					
ANR	785344	IfStatement	if ( fd != - 1 )		785325	1					
ANR	785345	Condition	fd != - 1	833:5:23821:23828	785325	0	True				
ANR	785346	EqualityExpression	fd != - 1		785325	0		!=			
ANR	785347	Identifier	fd		785325	0					
ANR	785348	UnaryOperationExpression	- 1		785325	1					
ANR	785349	UnaryOperator	-		785325	0					
ANR	785350	PrimaryExpression	1		785325	1					
ANR	785351	CompoundStatement		5:2:95:165	785325	1					
ANR	785352	IdentifierDeclStatement	char firstLine [ 128 ] = { 0 } ;	834:2:23835:23860	785325	0	True				
ANR	785353	IdentifierDecl	firstLine [ 128 ] = { 0 }		785325	0					
ANR	785354	IdentifierDeclType	char [ 128 ]		785325	0					
ANR	785355	Identifier	firstLine		785325	1					
ANR	785356	PrimaryExpression	128		785325	2					
ANR	785357	AssignmentExpression	firstLine [ 128 ] = { 0 }		785325	3		=			
ANR	785358	Identifier	firstLine		785325	0					
ANR	785359	InitializerList	0		785325	1					
ANR	785360	PrimaryExpression	0		785325	0					
ANR	785361	IdentifierDeclStatement	"int len = r_sandbox_read ( fd , ( ut8 * ) firstLine , sizeof ( firstLine ) - 1 ) ;"	835:2:23864:23934	785325	1	True				
ANR	785362	IdentifierDecl	"len = r_sandbox_read ( fd , ( ut8 * ) firstLine , sizeof ( firstLine ) - 1 )"		785325	0					
ANR	785363	IdentifierDeclType	int		785325	0					
ANR	785364	Identifier	len		785325	1					
ANR	785365	AssignmentExpression	"len = r_sandbox_read ( fd , ( ut8 * ) firstLine , sizeof ( firstLine ) - 1 )"		785325	2		=			
ANR	785366	Identifier	len		785325	0					
ANR	785367	CallExpression	"r_sandbox_read ( fd , ( ut8 * ) firstLine , sizeof ( firstLine ) - 1 )"		785325	1					
ANR	785368	Callee	r_sandbox_read		785325	0					
ANR	785369	Identifier	r_sandbox_read		785325	0					
ANR	785370	ArgumentList	fd		785325	1					
ANR	785371	Argument	fd		785325	0					
ANR	785372	Identifier	fd		785325	0					
ANR	785373	Argument	( ut8 * ) firstLine		785325	1					
ANR	785374	CastExpression	( ut8 * ) firstLine		785325	0					
ANR	785375	CastTarget	ut8 *		785325	0					
ANR	785376	Identifier	firstLine		785325	1					
ANR	785377	Argument	sizeof ( firstLine ) - 1		785325	2					
ANR	785378	AdditiveExpression	sizeof ( firstLine ) - 1		785325	0		-			
ANR	785379	SizeofExpression	sizeof ( firstLine )		785325	0					
ANR	785380	Sizeof	sizeof		785325	0					
ANR	785381	SizeofOperand	firstLine		785325	1					
ANR	785382	PrimaryExpression	1		785325	1					
ANR	785383	ExpressionStatement	firstLine [ len ] = 0	836:2:23938:23956	785325	2	True				
ANR	785384	AssignmentExpression	firstLine [ len ] = 0		785325	0		=			
ANR	785385	ArrayIndexing	firstLine [ len ]		785325	0					
ANR	785386	Identifier	firstLine		785325	0					
ANR	785387	Identifier	len		785325	1					
ANR	785388	PrimaryExpression	0		785325	1					
ANR	785389	IfStatement	"if ( ! strncmp ( firstLine , ""#!/"" , 3 ) )"		785325	3					
ANR	785390	Condition	"! strncmp ( firstLine , ""#!/"" , 3 )"	837:6:23964:23993	785325	0	True				
ANR	785391	UnaryOperationExpression	"! strncmp ( firstLine , ""#!/"" , 3 )"		785325	0					
ANR	785392	UnaryOperator	!		785325	0					
ANR	785393	CallExpression	"strncmp ( firstLine , ""#!/"" , 3 )"		785325	1					
ANR	785394	Callee	strncmp		785325	0					
ANR	785395	Identifier	strncmp		785325	0					
ANR	785396	ArgumentList	firstLine		785325	1					
ANR	785397	Argument	firstLine		785325	0					
ANR	785398	Identifier	firstLine		785325	0					
ANR	785399	Argument	"""#!/"""		785325	1					
ANR	785400	PrimaryExpression	"""#!/"""		785325	0					
ANR	785401	Argument	3		785325	2					
ANR	785402	PrimaryExpression	3		785325	0					
ANR	785403	CompoundStatement		9:3:259:294	785325	1					
ANR	785404	IdentifierDeclStatement	"char * nl = strchr ( firstLine , '\\n' ) ;"	839:3:24028:24063	785325	0	True				
ANR	785405	IdentifierDecl	"* nl = strchr ( firstLine , '\\n' )"		785325	0					
ANR	785406	IdentifierDeclType	char *		785325	0					
ANR	785407	Identifier	nl		785325	1					
ANR	785408	AssignmentExpression	"* nl = strchr ( firstLine , '\\n' )"		785325	2		=			
ANR	785409	Identifier	nl		785325	0					
ANR	785410	CallExpression	"strchr ( firstLine , '\\n' )"		785325	1					
ANR	785411	Callee	strchr		785325	0					
ANR	785412	Identifier	strchr		785325	0					
ANR	785413	ArgumentList	firstLine		785325	1					
ANR	785414	Argument	firstLine		785325	0					
ANR	785415	Identifier	firstLine		785325	0					
ANR	785416	Argument	'\\n'		785325	1					
ANR	785417	PrimaryExpression	'\\n'		785325	0					
ANR	785418	IfStatement	if ( nl )		785325	1					
ANR	785419	Condition	nl	840:7:24072:24073	785325	0	True				
ANR	785420	Identifier	nl		785325	0					
ANR	785421	CompoundStatement		10:11:307:307	785325	1					
ANR	785422	ExpressionStatement	* nl = 0	841:4:24082:24089	785325	0	True				
ANR	785423	AssignmentExpression	* nl = 0		785325	0		=			
ANR	785424	UnaryOperationExpression	* nl		785325	0					
ANR	785425	UnaryOperator	*		785325	0					
ANR	785426	Identifier	nl		785325	1					
ANR	785427	PrimaryExpression	0		785325	1					
ANR	785428	ExpressionStatement	"nl = strchr ( firstLine , ' ' )"	843:3:24099:24127	785325	2	True				
ANR	785429	AssignmentExpression	"nl = strchr ( firstLine , ' ' )"		785325	0		=			
ANR	785430	Identifier	nl		785325	0					
ANR	785431	CallExpression	"strchr ( firstLine , ' ' )"		785325	1					
ANR	785432	Callee	strchr		785325	0					
ANR	785433	Identifier	strchr		785325	0					
ANR	785434	ArgumentList	firstLine		785325	1					
ANR	785435	Argument	firstLine		785325	0					
ANR	785436	Identifier	firstLine		785325	0					
ANR	785437	Argument	' '		785325	1					
ANR	785438	PrimaryExpression	' '		785325	0					
ANR	785439	IfStatement	if ( nl )		785325	3					
ANR	785440	Condition	nl	844:7:24136:24137	785325	0	True				
ANR	785441	Identifier	nl		785325	0					
ANR	785442	CompoundStatement		14:11:371:371	785325	1					
ANR	785443	ExpressionStatement	* nl = 0	845:4:24146:24153	785325	0	True				
ANR	785444	AssignmentExpression	* nl = 0		785325	0		=			
ANR	785445	UnaryOperationExpression	* nl		785325	0					
ANR	785446	UnaryOperator	*		785325	0					
ANR	785447	Identifier	nl		785325	1					
ANR	785448	PrimaryExpression	0		785325	1					
ANR	785449	ReturnStatement	return strdup ( firstLine + 2 ) ;	847:3:24163:24192	785325	4	True				
ANR	785450	CallExpression	strdup ( firstLine + 2 )		785325	0					
ANR	785451	Callee	strdup		785325	0					
ANR	785452	Identifier	strdup		785325	0					
ANR	785453	ArgumentList	firstLine + 2		785325	1					
ANR	785454	Argument	firstLine + 2		785325	0					
ANR	785455	AdditiveExpression	firstLine + 2		785325	0		+			
ANR	785456	Identifier	firstLine		785325	0					
ANR	785457	PrimaryExpression	2		785325	1					
ANR	785458	ExpressionStatement	r_sandbox_close ( fd )	849:2:24200:24220	785325	4	True				
ANR	785459	CallExpression	r_sandbox_close ( fd )		785325	0					
ANR	785460	Callee	r_sandbox_close		785325	0					
ANR	785461	Identifier	r_sandbox_close		785325	0					
ANR	785462	ArgumentList	fd		785325	1					
ANR	785463	Argument	fd		785325	0					
ANR	785464	Identifier	fd		785325	0					
ANR	785465	ReturnStatement	return NULL ;	851:1:24226:24237	785325	2	True				
ANR	785466	Identifier	NULL		785325	0					
ANR	785467	ReturnType	static char *		785325	1					
ANR	785468	Identifier	langFromHashbang		785325	2					
ANR	785469	ParameterList	"RCore * core , const char * file"		785325	3					
ANR	785470	Parameter	RCore * core	831:30:23737:23747	785325	0	True				
ANR	785471	ParameterType	RCore *		785325	0					
ANR	785472	Identifier	core		785325	1					
ANR	785473	Parameter	const char * file	831:43:23750:23765	785325	1	True				
ANR	785474	ParameterType	const char *		785325	0					
ANR	785475	Identifier	file		785325	1					
ANR	785476	CFGEntryNode	ENTRY		785325		True				
ANR	785477	CFGExitNode	EXIT		785325		True				
ANR	785478	Symbol	NULL		785325						
ANR	785479	Symbol	r_sandbox_read		785325						
ANR	785480	Symbol	* nl		785325						
ANR	785481	Symbol	strchr		785325						
ANR	785482	Symbol	firstLine		785325						
ANR	785483	Symbol	core		785325						
ANR	785484	Symbol	strncmp		785325						
ANR	785485	Symbol	r_sandbox_open		785325						
ANR	785486	Symbol	file		785325						
ANR	785487	Symbol	O_RDONLY		785325						
ANR	785488	Symbol	* firstLine		785325						
ANR	785489	Symbol	len		785325						
ANR	785490	Symbol	strdup		785325						
ANR	785491	Symbol	fd		785325						
ANR	785492	Symbol	nl		785325						
ANR	785493	Symbol	* len		785325						
ANR	785494	Function	r_core_run_script	854:0:24242:29084							
ANR	785495	FunctionDef	"r_core_run_script (RCore * core , const char * file)"		785494	0					
ANR	785496	CompoundStatement		854:60:24302:29084	785494	0					
ANR	785497	IdentifierDeclStatement	bool ret = false ;	855:1:24305:24321	785494	0	True				
ANR	785498	IdentifierDecl	ret = false		785494	0					
ANR	785499	IdentifierDeclType	bool		785494	0					
ANR	785500	Identifier	ret		785494	1					
ANR	785501	AssignmentExpression	ret = false		785494	2		=			
ANR	785502	Identifier	false		785494	0					
ANR	785503	Identifier	false		785494	1					
ANR	785504	IdentifierDeclStatement	RListIter * iter ;	856:1:24324:24339	785494	1	True				
ANR	785505	IdentifierDecl	* iter		785494	0					
ANR	785506	IdentifierDeclType	RListIter *		785494	0					
ANR	785507	Identifier	iter		785494	1					
ANR	785508	IdentifierDeclStatement	RLangPlugin * p ;	857:1:24342:24356	785494	2	True				
ANR	785509	IdentifierDecl	* p		785494	0					
ANR	785510	IdentifierDeclType	RLangPlugin *		785494	0					
ANR	785511	Identifier	p		785494	1					
ANR	785512	IdentifierDeclStatement	char * name ;	858:1:24359:24369	785494	3	True				
ANR	785513	IdentifierDecl	* name		785494	0					
ANR	785514	IdentifierDeclType	char *		785494	0					
ANR	785515	Identifier	name		785494	1					
ANR	785516	Statement	r_list_foreach	860:1:24373:24386	785494	4	True				
ANR	785517	Statement	(	860:16:24388:24388	785494	5	True				
ANR	785518	Statement	core	860:17:24389:24392	785494	6	True				
ANR	785519	Statement	->	860:21:24393:24394	785494	7	True				
ANR	785520	Statement	scriptstack	860:23:24395:24405	785494	8	True				
ANR	785521	Statement	","	860:34:24406:24406	785494	9	True				
ANR	785522	Statement	iter	860:36:24408:24411	785494	10	True				
ANR	785523	Statement	","	860:40:24412:24412	785494	11	True				
ANR	785524	Statement	name	860:42:24414:24417	785494	12	True				
ANR	785525	Statement	)	860:46:24418:24418	785494	13	True				
ANR	785526	CompoundStatement		7:48:117:117	785494	14					
ANR	785527	IfStatement	"if ( ! strcmp ( file , name ) )"		785494	0					
ANR	785528	Condition	"! strcmp ( file , name )"	861:6:24428:24447	785494	0	True				
ANR	785529	UnaryOperationExpression	"! strcmp ( file , name )"		785494	0					
ANR	785530	UnaryOperator	!		785494	0					
ANR	785531	CallExpression	"strcmp ( file , name )"		785494	1					
ANR	785532	Callee	strcmp		785494	0					
ANR	785533	Identifier	strcmp		785494	0					
ANR	785534	ArgumentList	file		785494	1					
ANR	785535	Argument	file		785494	0					
ANR	785536	Identifier	file		785494	0					
ANR	785537	Argument	name		785494	1					
ANR	785538	Identifier	name		785494	0					
ANR	785539	CompoundStatement		8:28:147:147	785494	1					
ANR	785540	ExpressionStatement	"eprintf ( ""WARNING: ignored nested source: %s\\n"" , file )"	862:3:24455:24509	785494	0	True				
ANR	785541	CallExpression	"eprintf ( ""WARNING: ignored nested source: %s\\n"" , file )"		785494	0					
ANR	785542	Callee	eprintf		785494	0					
ANR	785543	Identifier	eprintf		785494	0					
ANR	785544	ArgumentList	"""WARNING: ignored nested source: %s\\n"""		785494	1					
ANR	785545	Argument	"""WARNING: ignored nested source: %s\\n"""		785494	0					
ANR	785546	PrimaryExpression	"""WARNING: ignored nested source: %s\\n"""		785494	0					
ANR	785547	Argument	file		785494	1					
ANR	785548	Identifier	file		785494	0					
ANR	785549	ReturnStatement	return false ;	863:3:24514:24526	785494	1	True				
ANR	785550	Identifier	false		785494	0					
ANR	785551	ExpressionStatement	"r_list_push ( core -> scriptstack , strdup ( file ) )"	866:1:24536:24582	785494	15	True				
ANR	785552	CallExpression	"r_list_push ( core -> scriptstack , strdup ( file ) )"		785494	0					
ANR	785553	Callee	r_list_push		785494	0					
ANR	785554	Identifier	r_list_push		785494	0					
ANR	785555	ArgumentList	core -> scriptstack		785494	1					
ANR	785556	Argument	core -> scriptstack		785494	0					
ANR	785557	PtrMemberAccess	core -> scriptstack		785494	0					
ANR	785558	Identifier	core		785494	0					
ANR	785559	Identifier	scriptstack		785494	1					
ANR	785560	Argument	strdup ( file )		785494	1					
ANR	785561	CallExpression	strdup ( file )		785494	0					
ANR	785562	Callee	strdup		785494	0					
ANR	785563	Identifier	strdup		785494	0					
ANR	785564	ArgumentList	file		785494	1					
ANR	785565	Argument	file		785494	0					
ANR	785566	Identifier	file		785494	0					
ANR	785567	IfStatement	"if ( ! strcmp ( file , ""-"" ) )"		785494	16					
ANR	785568	Condition	"! strcmp ( file , ""-"" )"	868:5:24590:24608	785494	0	True				
ANR	785569	UnaryOperationExpression	"! strcmp ( file , ""-"" )"		785494	0					
ANR	785570	UnaryOperator	!		785494	0					
ANR	785571	CallExpression	"strcmp ( file , ""-"" )"		785494	1					
ANR	785572	Callee	strcmp		785494	0					
ANR	785573	Identifier	strcmp		785494	0					
ANR	785574	ArgumentList	file		785494	1					
ANR	785575	Argument	file		785494	0					
ANR	785576	Identifier	file		785494	0					
ANR	785577	Argument	"""-"""		785494	1					
ANR	785578	PrimaryExpression	"""-"""		785494	0					
ANR	785579	CompoundStatement		16:2:312:356	785494	1					
ANR	785580	IdentifierDeclStatement	"char * out = r_core_editor ( core , NULL , NULL ) ;"	869:2:24615:24659	785494	0	True				
ANR	785581	IdentifierDecl	"* out = r_core_editor ( core , NULL , NULL )"		785494	0					
ANR	785582	IdentifierDeclType	char *		785494	0					
ANR	785583	Identifier	out		785494	1					
ANR	785584	AssignmentExpression	"* out = r_core_editor ( core , NULL , NULL )"		785494	2		=			
ANR	785585	Identifier	out		785494	0					
ANR	785586	CallExpression	"r_core_editor ( core , NULL , NULL )"		785494	1					
ANR	785587	Callee	r_core_editor		785494	0					
ANR	785588	Identifier	r_core_editor		785494	0					
ANR	785589	ArgumentList	core		785494	1					
ANR	785590	Argument	core		785494	0					
ANR	785591	Identifier	core		785494	0					
ANR	785592	Argument	NULL		785494	1					
ANR	785593	Identifier	NULL		785494	0					
ANR	785594	Argument	NULL		785494	2					
ANR	785595	Identifier	NULL		785494	0					
ANR	785596	IfStatement	if ( out )		785494	1					
ANR	785597	Condition	out	870:6:24667:24669	785494	0	True				
ANR	785598	Identifier	out		785494	0					
ANR	785599	CompoundStatement		17:11:369:369	785494	1					
ANR	785600	ExpressionStatement	"ret = r_core_cmd_lines ( core , out )"	871:3:24677:24711	785494	0	True				
ANR	785601	AssignmentExpression	"ret = r_core_cmd_lines ( core , out )"		785494	0		=			
ANR	785602	Identifier	ret		785494	0					
ANR	785603	CallExpression	"r_core_cmd_lines ( core , out )"		785494	1					
ANR	785604	Callee	r_core_cmd_lines		785494	0					
ANR	785605	Identifier	r_core_cmd_lines		785494	0					
ANR	785606	ArgumentList	core		785494	1					
ANR	785607	Argument	core		785494	0					
ANR	785608	Identifier	core		785494	0					
ANR	785609	Argument	out		785494	1					
ANR	785610	Identifier	out		785494	0					
ANR	785611	ExpressionStatement	free ( out )	872:3:24716:24726	785494	1	True				
ANR	785612	CallExpression	free ( out )		785494	0					
ANR	785613	Callee	free		785494	0					
ANR	785614	Identifier	free		785494	0					
ANR	785615	ArgumentList	out		785494	1					
ANR	785616	Argument	out		785494	0					
ANR	785617	Identifier	out		785494	0					
ANR	785618	ElseStatement	else		785494	0					
ANR	785619	IfStatement	"if ( r_str_endswith ( file , "".html"" ) )"		785494	0					
ANR	785620	Condition	"r_str_endswith ( file , "".html"" )"	874:12:24744:24773	785494	0	True				
ANR	785621	CallExpression	"r_str_endswith ( file , "".html"" )"		785494	0					
ANR	785622	Callee	r_str_endswith		785494	0					
ANR	785623	Identifier	r_str_endswith		785494	0					
ANR	785624	ArgumentList	file		785494	1					
ANR	785625	Argument	file		785494	0					
ANR	785626	Identifier	file		785494	0					
ANR	785627	Argument	""".html"""		785494	1					
ANR	785628	PrimaryExpression	""".html"""		785494	0					
ANR	785629	CompoundStatement		25:2:675:712	785494	1					
ANR	785630	IdentifierDeclStatement	"const bool httpSandbox = r_config_get_i ( core -> config , ""http.sandbox"" ) ;"	875:2:24780:24850	785494	0	True				
ANR	785631	IdentifierDecl	"httpSandbox = r_config_get_i ( core -> config , ""http.sandbox"" )"		785494	0					
ANR	785632	IdentifierDeclType	const bool		785494	0					
ANR	785633	Identifier	httpSandbox		785494	1					
ANR	785634	AssignmentExpression	"httpSandbox = r_config_get_i ( core -> config , ""http.sandbox"" )"		785494	2		=			
ANR	785635	Identifier	httpSandbox		785494	0					
ANR	785636	CallExpression	"r_config_get_i ( core -> config , ""http.sandbox"" )"		785494	1					
ANR	785637	Callee	r_config_get_i		785494	0					
ANR	785638	Identifier	r_config_get_i		785494	0					
ANR	785639	ArgumentList	core -> config		785494	1					
ANR	785640	Argument	core -> config		785494	0					
ANR	785641	PtrMemberAccess	core -> config		785494	0					
ANR	785642	Identifier	core		785494	0					
ANR	785643	Identifier	config		785494	1					
ANR	785644	Argument	"""http.sandbox"""		785494	1					
ANR	785645	PrimaryExpression	"""http.sandbox"""		785494	0					
ANR	785646	IdentifierDeclStatement	"char * httpIndex = strdup ( r_config_get ( core -> config , ""http.index"" ) ) ;"	876:2:24854:24922	785494	1	True				
ANR	785647	IdentifierDecl	"* httpIndex = strdup ( r_config_get ( core -> config , ""http.index"" ) )"		785494	0					
ANR	785648	IdentifierDeclType	char *		785494	0					
ANR	785649	Identifier	httpIndex		785494	1					
ANR	785650	AssignmentExpression	"* httpIndex = strdup ( r_config_get ( core -> config , ""http.index"" ) )"		785494	2		=			
ANR	785651	Identifier	httpIndex		785494	0					
ANR	785652	CallExpression	"strdup ( r_config_get ( core -> config , ""http.index"" ) )"		785494	1					
ANR	785653	Callee	strdup		785494	0					
ANR	785654	Identifier	strdup		785494	0					
ANR	785655	ArgumentList	"r_config_get ( core -> config , ""http.index"" )"		785494	1					
ANR	785656	Argument	"r_config_get ( core -> config , ""http.index"" )"		785494	0					
ANR	785657	CallExpression	"r_config_get ( core -> config , ""http.index"" )"		785494	0					
ANR	785658	Callee	r_config_get		785494	0					
ANR	785659	Identifier	r_config_get		785494	0					
ANR	785660	ArgumentList	core -> config		785494	1					
ANR	785661	Argument	core -> config		785494	0					
ANR	785662	PtrMemberAccess	core -> config		785494	0					
ANR	785663	Identifier	core		785494	0					
ANR	785664	Identifier	config		785494	1					
ANR	785665	Argument	"""http.index"""		785494	1					
ANR	785666	PrimaryExpression	"""http.index"""		785494	0					
ANR	785667	ExpressionStatement	"r_config_set_i ( core -> config , ""http.sandbox"" , 0 )"	877:2:24926:24974	785494	2	True				
ANR	785668	CallExpression	"r_config_set_i ( core -> config , ""http.sandbox"" , 0 )"		785494	0					
ANR	785669	Callee	r_config_set_i		785494	0					
ANR	785670	Identifier	r_config_set_i		785494	0					
ANR	785671	ArgumentList	core -> config		785494	1					
ANR	785672	Argument	core -> config		785494	0					
ANR	785673	PtrMemberAccess	core -> config		785494	0					
ANR	785674	Identifier	core		785494	0					
ANR	785675	Identifier	config		785494	1					
ANR	785676	Argument	"""http.sandbox"""		785494	1					
ANR	785677	PrimaryExpression	"""http.sandbox"""		785494	0					
ANR	785678	Argument	0		785494	2					
ANR	785679	PrimaryExpression	0		785494	0					
ANR	785680	IdentifierDeclStatement	char * absfile = r_file_abspath ( file ) ;	878:2:24978:25015	785494	3	True				
ANR	785681	IdentifierDecl	* absfile = r_file_abspath ( file )		785494	0					
ANR	785682	IdentifierDeclType	char *		785494	0					
ANR	785683	Identifier	absfile		785494	1					
ANR	785684	AssignmentExpression	* absfile = r_file_abspath ( file )		785494	2		=			
ANR	785685	Identifier	absfile		785494	0					
ANR	785686	CallExpression	r_file_abspath ( file )		785494	1					
ANR	785687	Callee	r_file_abspath		785494	0					
ANR	785688	Identifier	r_file_abspath		785494	0					
ANR	785689	ArgumentList	file		785494	1					
ANR	785690	Argument	file		785494	0					
ANR	785691	Identifier	file		785494	0					
ANR	785692	ExpressionStatement	"r_config_set ( core -> config , ""http.index"" , absfile )"	879:2:25019:25069	785494	4	True				
ANR	785693	CallExpression	"r_config_set ( core -> config , ""http.index"" , absfile )"		785494	0					
ANR	785694	Callee	r_config_set		785494	0					
ANR	785695	Identifier	r_config_set		785494	0					
ANR	785696	ArgumentList	core -> config		785494	1					
ANR	785697	Argument	core -> config		785494	0					
ANR	785698	PtrMemberAccess	core -> config		785494	0					
ANR	785699	Identifier	core		785494	0					
ANR	785700	Identifier	config		785494	1					
ANR	785701	Argument	"""http.index"""		785494	1					
ANR	785702	PrimaryExpression	"""http.index"""		785494	0					
ANR	785703	Argument	absfile		785494	2					
ANR	785704	Identifier	absfile		785494	0					
ANR	785705	ExpressionStatement	free ( absfile )	880:2:25073:25087	785494	5	True				
ANR	785706	CallExpression	free ( absfile )		785494	0					
ANR	785707	Callee	free		785494	0					
ANR	785708	Identifier	free		785494	0					
ANR	785709	ArgumentList	absfile		785494	1					
ANR	785710	Argument	absfile		785494	0					
ANR	785711	Identifier	absfile		785494	0					
ANR	785712	ExpressionStatement	"r_core_cmdf ( core , ""=H"" )"	881:2:25091:25115	785494	6	True				
ANR	785713	CallExpression	"r_core_cmdf ( core , ""=H"" )"		785494	0					
ANR	785714	Callee	r_core_cmdf		785494	0					
ANR	785715	Identifier	r_core_cmdf		785494	0					
ANR	785716	ArgumentList	core		785494	1					
ANR	785717	Argument	core		785494	0					
ANR	785718	Identifier	core		785494	0					
ANR	785719	Argument	"""=H"""		785494	1					
ANR	785720	PrimaryExpression	"""=H"""		785494	0					
ANR	785721	ExpressionStatement	"r_config_set_i ( core -> config , ""http.sandbox"" , httpSandbox )"	882:2:25119:25177	785494	7	True				
ANR	785722	CallExpression	"r_config_set_i ( core -> config , ""http.sandbox"" , httpSandbox )"		785494	0					
ANR	785723	Callee	r_config_set_i		785494	0					
ANR	785724	Identifier	r_config_set_i		785494	0					
ANR	785725	ArgumentList	core -> config		785494	1					
ANR	785726	Argument	core -> config		785494	0					
ANR	785727	PtrMemberAccess	core -> config		785494	0					
ANR	785728	Identifier	core		785494	0					
ANR	785729	Identifier	config		785494	1					
ANR	785730	Argument	"""http.sandbox"""		785494	1					
ANR	785731	PrimaryExpression	"""http.sandbox"""		785494	0					
ANR	785732	Argument	httpSandbox		785494	2					
ANR	785733	Identifier	httpSandbox		785494	0					
ANR	785734	ExpressionStatement	"r_config_set ( core -> config , ""http.index"" , httpIndex )"	883:2:25181:25233	785494	8	True				
ANR	785735	CallExpression	"r_config_set ( core -> config , ""http.index"" , httpIndex )"		785494	0					
ANR	785736	Callee	r_config_set		785494	0					
ANR	785737	Identifier	r_config_set		785494	0					
ANR	785738	ArgumentList	core -> config		785494	1					
ANR	785739	Argument	core -> config		785494	0					
ANR	785740	PtrMemberAccess	core -> config		785494	0					
ANR	785741	Identifier	core		785494	0					
ANR	785742	Identifier	config		785494	1					
ANR	785743	Argument	"""http.index"""		785494	1					
ANR	785744	PrimaryExpression	"""http.index"""		785494	0					
ANR	785745	Argument	httpIndex		785494	2					
ANR	785746	Identifier	httpIndex		785494	0					
ANR	785747	ExpressionStatement	free ( httpIndex )	884:2:25237:25253	785494	9	True				
ANR	785748	CallExpression	free ( httpIndex )		785494	0					
ANR	785749	Callee	free		785494	0					
ANR	785750	Identifier	free		785494	0					
ANR	785751	ArgumentList	httpIndex		785494	1					
ANR	785752	Argument	httpIndex		785494	0					
ANR	785753	Identifier	httpIndex		785494	0					
ANR	785754	ExpressionStatement	ret = true	885:2:25257:25267	785494	10	True				
ANR	785755	AssignmentExpression	ret = true		785494	0		=			
ANR	785756	Identifier	ret		785494	0					
ANR	785757	Identifier	true		785494	1					
ANR	785758	ElseStatement	else		785494	0					
ANR	785759	IfStatement	"if ( r_str_endswith ( file , "".c"" ) )"		785494	0					
ANR	785760	Condition	"r_str_endswith ( file , "".c"" )"	886:12:25281:25307	785494	0	True				
ANR	785761	CallExpression	"r_str_endswith ( file , "".c"" )"		785494	0					
ANR	785762	Callee	r_str_endswith		785494	0					
ANR	785763	Identifier	r_str_endswith		785494	0					
ANR	785764	ArgumentList	file		785494	1					
ANR	785765	Argument	file		785494	0					
ANR	785766	Identifier	file		785494	0					
ANR	785767	Argument	""".c"""		785494	1					
ANR	785768	PrimaryExpression	""".c"""		785494	0					
ANR	785769	CompoundStatement		33:41:1007:1007	785494	1					
ANR	785770	ExpressionStatement	"r_core_cmd_strf ( core , ""#!c %s"" , file )"	887:2:25314:25352	785494	0	True				
ANR	785771	CallExpression	"r_core_cmd_strf ( core , ""#!c %s"" , file )"		785494	0					
ANR	785772	Callee	r_core_cmd_strf		785494	0					
ANR	785773	Identifier	r_core_cmd_strf		785494	0					
ANR	785774	ArgumentList	core		785494	1					
ANR	785775	Argument	core		785494	0					
ANR	785776	Identifier	core		785494	0					
ANR	785777	Argument	"""#!c %s"""		785494	1					
ANR	785778	PrimaryExpression	"""#!c %s"""		785494	0					
ANR	785779	Argument	file		785494	2					
ANR	785780	Identifier	file		785494	0					
ANR	785781	ExpressionStatement	ret = true	888:2:25356:25366	785494	1	True				
ANR	785782	AssignmentExpression	ret = true		785494	0		=			
ANR	785783	Identifier	ret		785494	0					
ANR	785784	Identifier	true		785494	1					
ANR	785785	ElseStatement	else		785494	0					
ANR	785786	IfStatement	if ( r_file_is_c ( file ) )		785494	0					
ANR	785787	Condition	r_file_is_c ( file )	889:12:25380:25397	785494	0	True				
ANR	785788	CallExpression	r_file_is_c ( file )		785494	0					
ANR	785789	Callee	r_file_is_c		785494	0					
ANR	785790	Identifier	r_file_is_c		785494	0					
ANR	785791	ArgumentList	file		785494	1					
ANR	785792	Argument	file		785494	0					
ANR	785793	Identifier	file		785494	0					
ANR	785794	CompoundStatement		38:2:1163:1219	785494	1					
ANR	785795	IdentifierDeclStatement	"const char * dir = r_config_get ( core -> config , ""dir.types"" ) ;"	890:2:25404:25462	785494	0	True				
ANR	785796	IdentifierDecl	"* dir = r_config_get ( core -> config , ""dir.types"" )"		785494	0					
ANR	785797	IdentifierDeclType	const char *		785494	0					
ANR	785798	Identifier	dir		785494	1					
ANR	785799	AssignmentExpression	"* dir = r_config_get ( core -> config , ""dir.types"" )"		785494	2		=			
ANR	785800	Identifier	dir		785494	0					
ANR	785801	CallExpression	"r_config_get ( core -> config , ""dir.types"" )"		785494	1					
ANR	785802	Callee	r_config_get		785494	0					
ANR	785803	Identifier	r_config_get		785494	0					
ANR	785804	ArgumentList	core -> config		785494	1					
ANR	785805	Argument	core -> config		785494	0					
ANR	785806	PtrMemberAccess	core -> config		785494	0					
ANR	785807	Identifier	core		785494	0					
ANR	785808	Identifier	config		785494	1					
ANR	785809	Argument	"""dir.types"""		785494	1					
ANR	785810	PrimaryExpression	"""dir.types"""		785494	0					
ANR	785811	IdentifierDeclStatement	"char * out = r_parse_c_file ( core -> anal , file , dir , NULL ) ;"	891:2:25466:25522	785494	1	True				
ANR	785812	IdentifierDecl	"* out = r_parse_c_file ( core -> anal , file , dir , NULL )"		785494	0					
ANR	785813	IdentifierDeclType	char *		785494	0					
ANR	785814	Identifier	out		785494	1					
ANR	785815	AssignmentExpression	"* out = r_parse_c_file ( core -> anal , file , dir , NULL )"		785494	2		=			
ANR	785816	Identifier	out		785494	0					
ANR	785817	CallExpression	"r_parse_c_file ( core -> anal , file , dir , NULL )"		785494	1					
ANR	785818	Callee	r_parse_c_file		785494	0					
ANR	785819	Identifier	r_parse_c_file		785494	0					
ANR	785820	ArgumentList	core -> anal		785494	1					
ANR	785821	Argument	core -> anal		785494	0					
ANR	785822	PtrMemberAccess	core -> anal		785494	0					
ANR	785823	Identifier	core		785494	0					
ANR	785824	Identifier	anal		785494	1					
ANR	785825	Argument	file		785494	1					
ANR	785826	Identifier	file		785494	0					
ANR	785827	Argument	dir		785494	2					
ANR	785828	Identifier	dir		785494	0					
ANR	785829	Argument	NULL		785494	3					
ANR	785830	Identifier	NULL		785494	0					
ANR	785831	IfStatement	if ( out )		785494	2					
ANR	785832	Condition	out	892:6:25530:25532	785494	0	True				
ANR	785833	Identifier	out		785494	0					
ANR	785834	CompoundStatement		39:11:1232:1232	785494	1					
ANR	785835	ExpressionStatement	r_cons_strcat ( out )	893:3:25540:25559	785494	0	True				
ANR	785836	CallExpression	r_cons_strcat ( out )		785494	0					
ANR	785837	Callee	r_cons_strcat		785494	0					
ANR	785838	Identifier	r_cons_strcat		785494	0					
ANR	785839	ArgumentList	out		785494	1					
ANR	785840	Argument	out		785494	0					
ANR	785841	Identifier	out		785494	0					
ANR	785842	ExpressionStatement	"sdb_query_lines ( core -> anal -> sdb_types , out )"	894:3:25564:25608	785494	1	True				
ANR	785843	CallExpression	"sdb_query_lines ( core -> anal -> sdb_types , out )"		785494	0					
ANR	785844	Callee	sdb_query_lines		785494	0					
ANR	785845	Identifier	sdb_query_lines		785494	0					
ANR	785846	ArgumentList	core -> anal -> sdb_types		785494	1					
ANR	785847	Argument	core -> anal -> sdb_types		785494	0					
ANR	785848	PtrMemberAccess	core -> anal -> sdb_types		785494	0					
ANR	785849	PtrMemberAccess	core -> anal		785494	0					
ANR	785850	Identifier	core		785494	0					
ANR	785851	Identifier	anal		785494	1					
ANR	785852	Identifier	sdb_types		785494	1					
ANR	785853	Argument	out		785494	1					
ANR	785854	Identifier	out		785494	0					
ANR	785855	ExpressionStatement	free ( out )	895:3:25613:25623	785494	2	True				
ANR	785856	CallExpression	free ( out )		785494	0					
ANR	785857	Callee	free		785494	0					
ANR	785858	Identifier	free		785494	0					
ANR	785859	ArgumentList	out		785494	1					
ANR	785860	Argument	out		785494	0					
ANR	785861	Identifier	out		785494	0					
ANR	785862	ExpressionStatement	ret = out ? true : false	897:2:25631:25653	785494	3	True				
ANR	785863	AssignmentExpression	ret = out ? true : false		785494	0		=			
ANR	785864	Identifier	ret		785494	0					
ANR	785865	ConditionalExpression	out ? true : false		785494	1					
ANR	785866	Condition	out		785494	0					
ANR	785867	Identifier	out		785494	0					
ANR	785868	Identifier	true		785494	1					
ANR	785869	Identifier	false		785494	2					
ANR	785870	ElseStatement	else		785494	0					
ANR	785871	CompoundStatement		45:8:1360:1360	785494	0					
ANR	785872	ExpressionStatement	"p = r_lang_get_by_extension ( core -> lang , file )"	899:2:25667:25713	785494	0	True				
ANR	785873	AssignmentExpression	"p = r_lang_get_by_extension ( core -> lang , file )"		785494	0		=			
ANR	785874	Identifier	p		785494	0					
ANR	785875	CallExpression	"r_lang_get_by_extension ( core -> lang , file )"		785494	1					
ANR	785876	Callee	r_lang_get_by_extension		785494	0					
ANR	785877	Identifier	r_lang_get_by_extension		785494	0					
ANR	785878	ArgumentList	core -> lang		785494	1					
ANR	785879	Argument	core -> lang		785494	0					
ANR	785880	PtrMemberAccess	core -> lang		785494	0					
ANR	785881	Identifier	core		785494	0					
ANR	785882	Identifier	lang		785494	1					
ANR	785883	Argument	file		785494	1					
ANR	785884	Identifier	file		785494	0					
ANR	785885	IfStatement	if ( p )		785494	1					
ANR	785886	Condition	p	900:6:25721:25721	785494	0	True				
ANR	785887	Identifier	p		785494	0					
ANR	785888	CompoundStatement		47:9:1421:1421	785494	1					
ANR	785889	ExpressionStatement	"r_lang_use ( core -> lang , p -> name )"	901:3:25729:25761	785494	0	True				
ANR	785890	CallExpression	"r_lang_use ( core -> lang , p -> name )"		785494	0					
ANR	785891	Callee	r_lang_use		785494	0					
ANR	785892	Identifier	r_lang_use		785494	0					
ANR	785893	ArgumentList	core -> lang		785494	1					
ANR	785894	Argument	core -> lang		785494	0					
ANR	785895	PtrMemberAccess	core -> lang		785494	0					
ANR	785896	Identifier	core		785494	0					
ANR	785897	Identifier	lang		785494	1					
ANR	785898	Argument	p -> name		785494	1					
ANR	785899	PtrMemberAccess	p -> name		785494	0					
ANR	785900	Identifier	p		785494	0					
ANR	785901	Identifier	name		785494	1					
ANR	785902	ExpressionStatement	"ret = lang_run_file ( core , core -> lang , file )"	902:3:25766:25810	785494	1	True				
ANR	785903	AssignmentExpression	"ret = lang_run_file ( core , core -> lang , file )"		785494	0		=			
ANR	785904	Identifier	ret		785494	0					
ANR	785905	CallExpression	"lang_run_file ( core , core -> lang , file )"		785494	1					
ANR	785906	Callee	lang_run_file		785494	0					
ANR	785907	Identifier	lang_run_file		785494	0					
ANR	785908	ArgumentList	core		785494	1					
ANR	785909	Argument	core		785494	0					
ANR	785910	Identifier	core		785494	0					
ANR	785911	Argument	core -> lang		785494	1					
ANR	785912	PtrMemberAccess	core -> lang		785494	0					
ANR	785913	Identifier	core		785494	0					
ANR	785914	Identifier	lang		785494	1					
ANR	785915	Argument	file		785494	2					
ANR	785916	Identifier	file		785494	0					
ANR	785917	ElseStatement	else		785494	0					
ANR	785918	CompoundStatement		57:3:1726:1764	785494	0					
ANR	785919	Statement	define	906:1:25922:25927	785494	0	True				
ANR	785920	Statement	cmdstr	906:8:25929:25934	785494	1	True				
ANR	785921	Statement	(	906:14:25935:25935	785494	2	True				
ANR	785922	Statement	x	906:15:25936:25936	785494	3	True				
ANR	785923	Statement	)	906:16:25937:25937	785494	4	True				
ANR	785924	Statement	r_str_newf	906:18:25939:25948	785494	5	True				
ANR	785925	Statement	(	906:29:25950:25950	785494	6	True				
ANR	785926	Statement	x	906:30:25951:25951	785494	7	True				
ANR	785927	Statement	""" %s"""	906:31:25952:25956	785494	8	True				
ANR	785928	Statement	","	906:36:25957:25957	785494	9	True				
ANR	785929	Statement	file	906:38:25959:25962	785494	10	True				
ANR	785930	Statement	)	906:42:25963:25963	785494	11	True				
ANR	785931	ExpressionStatement		906:43:25964:25964	785494	12	True				
ANR	785932	IdentifierDeclStatement	"const char * p = r_str_lchr ( file , '.' ) ;"	910:3:26029:26067	785494	13	True				
ANR	785933	IdentifierDecl	"* p = r_str_lchr ( file , '.' )"		785494	0					
ANR	785934	IdentifierDeclType	const char *		785494	0					
ANR	785935	Identifier	p		785494	1					
ANR	785936	AssignmentExpression	"* p = r_str_lchr ( file , '.' )"		785494	2		=			
ANR	785937	Identifier	p		785494	0					
ANR	785938	CallExpression	"r_str_lchr ( file , '.' )"		785494	1					
ANR	785939	Callee	r_str_lchr		785494	0					
ANR	785940	Identifier	r_str_lchr		785494	0					
ANR	785941	ArgumentList	file		785494	1					
ANR	785942	Argument	file		785494	0					
ANR	785943	Identifier	file		785494	0					
ANR	785944	Argument	'.'		785494	1					
ANR	785945	PrimaryExpression	'.'		785494	0					
ANR	785946	IfStatement	if ( p )		785494	14					
ANR	785947	Condition	p	911:7:26076:26076	785494	0	True				
ANR	785948	Identifier	p		785494	0					
ANR	785949	CompoundStatement		59:4:1782:1805	785494	1					
ANR	785950	IdentifierDeclStatement	const char * ext = p + 1 ;	912:4:26085:26108	785494	0	True				
ANR	785951	IdentifierDecl	* ext = p + 1		785494	0					
ANR	785952	IdentifierDeclType	const char *		785494	0					
ANR	785953	Identifier	ext		785494	1					
ANR	785954	AssignmentExpression	* ext = p + 1		785494	2		=			
ANR	785955	Identifier	ext		785494	0					
ANR	785956	AdditiveExpression	p + 1		785494	1		+			
ANR	785957	Identifier	p		785494	0					
ANR	785958	PrimaryExpression	1		785494	1					
ANR	785959	IfStatement	"if ( ! strcmp ( ext , ""js"" ) )"		785494	1					
ANR	785960	Condition	"! strcmp ( ext , ""js"" )"	914:8:26179:26197	785494	0	True				
ANR	785961	UnaryOperationExpression	"! strcmp ( ext , ""js"" )"		785494	0					
ANR	785962	UnaryOperator	!		785494	0					
ANR	785963	CallExpression	"strcmp ( ext , ""js"" )"		785494	1					
ANR	785964	Callee	strcmp		785494	0					
ANR	785965	Identifier	strcmp		785494	0					
ANR	785966	ArgumentList	ext		785494	1					
ANR	785967	Argument	ext		785494	0					
ANR	785968	Identifier	ext		785494	0					
ANR	785969	Argument	"""js"""		785494	1					
ANR	785970	PrimaryExpression	"""js"""		785494	0					
ANR	785971	CompoundStatement		62:5:1904:1931	785494	1					
ANR	785972	IdentifierDeclStatement	"char * cmd = cmdstr ( ""node"" ) ;"	915:5:26207:26234	785494	0	True				
ANR	785973	IdentifierDecl	"* cmd = cmdstr ( ""node"" )"		785494	0					
ANR	785974	IdentifierDeclType	char *		785494	0					
ANR	785975	Identifier	cmd		785494	1					
ANR	785976	AssignmentExpression	"* cmd = cmdstr ( ""node"" )"		785494	2		=			
ANR	785977	Identifier	cmd		785494	0					
ANR	785978	CallExpression	"cmdstr ( ""node"" )"		785494	1					
ANR	785979	Callee	cmdstr		785494	0					
ANR	785980	Identifier	cmdstr		785494	0					
ANR	785981	ArgumentList	"""node"""		785494	1					
ANR	785982	Argument	"""node"""		785494	0					
ANR	785983	PrimaryExpression	"""node"""		785494	0					
ANR	785984	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	916:5:26241:26272	785494	1	True				
ANR	785985	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		785494	0					
ANR	785986	Callee	r_lang_use		785494	0					
ANR	785987	Identifier	r_lang_use		785494	0					
ANR	785988	ArgumentList	core -> lang		785494	1					
ANR	785989	Argument	core -> lang		785494	0					
ANR	785990	PtrMemberAccess	core -> lang		785494	0					
ANR	785991	Identifier	core		785494	0					
ANR	785992	Identifier	lang		785494	1					
ANR	785993	Argument	"""pipe"""		785494	1					
ANR	785994	PrimaryExpression	"""pipe"""		785494	0					
ANR	785995	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	917:5:26279:26316	785494	2	True				
ANR	785996	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		785494	0					
ANR	785997	Callee	lang_run_file		785494	0					
ANR	785998	Identifier	lang_run_file		785494	0					
ANR	785999	ArgumentList	core		785494	1					
ANR	786000	Argument	core		785494	0					
ANR	786001	Identifier	core		785494	0					
ANR	786002	Argument	core -> lang		785494	1					
ANR	786003	PtrMemberAccess	core -> lang		785494	0					
ANR	786004	Identifier	core		785494	0					
ANR	786005	Identifier	lang		785494	1					
ANR	786006	Argument	cmd		785494	2					
ANR	786007	Identifier	cmd		785494	0					
ANR	786008	ExpressionStatement	free ( cmd )	918:5:26323:26333	785494	3	True				
ANR	786009	CallExpression	free ( cmd )		785494	0					
ANR	786010	Callee	free		785494	0					
ANR	786011	Identifier	free		785494	0					
ANR	786012	ArgumentList	cmd		785494	1					
ANR	786013	Argument	cmd		785494	0					
ANR	786014	Identifier	cmd		785494	0					
ANR	786015	ExpressionStatement	ret = 1	919:5:26340:26347	785494	4	True				
ANR	786016	AssignmentExpression	ret = 1		785494	0		=			
ANR	786017	Identifier	ret		785494	0					
ANR	786018	PrimaryExpression	1		785494	1					
ANR	786019	ElseStatement	else		785494	0					
ANR	786020	IfStatement	"if ( ! strcmp ( ext , ""exe"" ) )"		785494	0					
ANR	786021	Condition	"! strcmp ( ext , ""exe"" )"	920:15:26364:26383	785494	0	True				
ANR	786022	UnaryOperationExpression	"! strcmp ( ext , ""exe"" )"		785494	0					
ANR	786023	UnaryOperator	!		785494	0					
ANR	786024	CallExpression	"strcmp ( ext , ""exe"" )"		785494	1					
ANR	786025	Callee	strcmp		785494	0					
ANR	786026	Identifier	strcmp		785494	0					
ANR	786027	ArgumentList	ext		785494	1					
ANR	786028	Argument	ext		785494	0					
ANR	786029	Identifier	ext		785494	0					
ANR	786030	Argument	"""exe"""		785494	1					
ANR	786031	PrimaryExpression	"""exe"""		785494	0					
ANR	786032	CompoundStatement		69:5:2106:2141	785494	1					
ANR	786033	IdentifierDeclStatement	"char * cmd = r_str_newf ( ""%s"" , file ) ;"	922:5:26409:26444	785494	0	True				
ANR	786034	IdentifierDecl	"* cmd = r_str_newf ( ""%s"" , file )"		785494	0					
ANR	786035	IdentifierDeclType	char *		785494	0					
ANR	786036	Identifier	cmd		785494	1					
ANR	786037	AssignmentExpression	"* cmd = r_str_newf ( ""%s"" , file )"		785494	2		=			
ANR	786038	Identifier	cmd		785494	0					
ANR	786039	CallExpression	"r_str_newf ( ""%s"" , file )"		785494	1					
ANR	786040	Callee	r_str_newf		785494	0					
ANR	786041	Identifier	r_str_newf		785494	0					
ANR	786042	ArgumentList	"""%s"""		785494	1					
ANR	786043	Argument	"""%s"""		785494	0					
ANR	786044	PrimaryExpression	"""%s"""		785494	0					
ANR	786045	Argument	file		785494	1					
ANR	786046	Identifier	file		785494	0					
ANR	786047	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	926:5:26498:26529	785494	1	True				
ANR	786048	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		785494	0					
ANR	786049	Callee	r_lang_use		785494	0					
ANR	786050	Identifier	r_lang_use		785494	0					
ANR	786051	ArgumentList	core -> lang		785494	1					
ANR	786052	Argument	core -> lang		785494	0					
ANR	786053	PtrMemberAccess	core -> lang		785494	0					
ANR	786054	Identifier	core		785494	0					
ANR	786055	Identifier	lang		785494	1					
ANR	786056	Argument	"""pipe"""		785494	1					
ANR	786057	PrimaryExpression	"""pipe"""		785494	0					
ANR	786058	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	927:5:26536:26573	785494	2	True				
ANR	786059	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		785494	0					
ANR	786060	Callee	lang_run_file		785494	0					
ANR	786061	Identifier	lang_run_file		785494	0					
ANR	786062	ArgumentList	core		785494	1					
ANR	786063	Argument	core		785494	0					
ANR	786064	Identifier	core		785494	0					
ANR	786065	Argument	core -> lang		785494	1					
ANR	786066	PtrMemberAccess	core -> lang		785494	0					
ANR	786067	Identifier	core		785494	0					
ANR	786068	Identifier	lang		785494	1					
ANR	786069	Argument	cmd		785494	2					
ANR	786070	Identifier	cmd		785494	0					
ANR	786071	ExpressionStatement	free ( cmd )	928:5:26580:26590	785494	3	True				
ANR	786072	CallExpression	free ( cmd )		785494	0					
ANR	786073	Callee	free		785494	0					
ANR	786074	Identifier	free		785494	0					
ANR	786075	ArgumentList	cmd		785494	1					
ANR	786076	Argument	cmd		785494	0					
ANR	786077	Identifier	cmd		785494	0					
ANR	786078	ExpressionStatement	ret = 1	929:5:26597:26604	785494	4	True				
ANR	786079	AssignmentExpression	ret = 1		785494	0		=			
ANR	786080	Identifier	ret		785494	0					
ANR	786081	PrimaryExpression	1		785494	1					
ANR	786082	ElseStatement	else		785494	0					
ANR	786083	IfStatement	"if ( ! strcmp ( ext , ""zig"" ) )"		785494	0					
ANR	786084	Condition	"! strcmp ( ext , ""zig"" )"	930:15:26621:26640	785494	0	True				
ANR	786085	UnaryOperationExpression	"! strcmp ( ext , ""zig"" )"		785494	0					
ANR	786086	UnaryOperator	!		785494	0					
ANR	786087	CallExpression	"strcmp ( ext , ""zig"" )"		785494	1					
ANR	786088	Callee	strcmp		785494	0					
ANR	786089	Identifier	strcmp		785494	0					
ANR	786090	ArgumentList	ext		785494	1					
ANR	786091	Argument	ext		785494	0					
ANR	786092	Identifier	ext		785494	0					
ANR	786093	Argument	"""zig"""		785494	1					
ANR	786094	PrimaryExpression	"""zig"""		785494	0					
ANR	786095	CompoundStatement		78:5:2347:2377	785494	1					
ANR	786096	IdentifierDeclStatement	"char * cmd = cmdstr ( ""zig run"" ) ;"	931:5:26650:26680	785494	0	True				
ANR	786097	IdentifierDecl	"* cmd = cmdstr ( ""zig run"" )"		785494	0					
ANR	786098	IdentifierDeclType	char *		785494	0					
ANR	786099	Identifier	cmd		785494	1					
ANR	786100	AssignmentExpression	"* cmd = cmdstr ( ""zig run"" )"		785494	2		=			
ANR	786101	Identifier	cmd		785494	0					
ANR	786102	CallExpression	"cmdstr ( ""zig run"" )"		785494	1					
ANR	786103	Callee	cmdstr		785494	0					
ANR	786104	Identifier	cmdstr		785494	0					
ANR	786105	ArgumentList	"""zig run"""		785494	1					
ANR	786106	Argument	"""zig run"""		785494	0					
ANR	786107	PrimaryExpression	"""zig run"""		785494	0					
ANR	786108	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	932:5:26687:26718	785494	1	True				
ANR	786109	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		785494	0					
ANR	786110	Callee	r_lang_use		785494	0					
ANR	786111	Identifier	r_lang_use		785494	0					
ANR	786112	ArgumentList	core -> lang		785494	1					
ANR	786113	Argument	core -> lang		785494	0					
ANR	786114	PtrMemberAccess	core -> lang		785494	0					
ANR	786115	Identifier	core		785494	0					
ANR	786116	Identifier	lang		785494	1					
ANR	786117	Argument	"""pipe"""		785494	1					
ANR	786118	PrimaryExpression	"""pipe"""		785494	0					
ANR	786119	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	933:5:26725:26762	785494	2	True				
ANR	786120	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		785494	0					
ANR	786121	Callee	lang_run_file		785494	0					
ANR	786122	Identifier	lang_run_file		785494	0					
ANR	786123	ArgumentList	core		785494	1					
ANR	786124	Argument	core		785494	0					
ANR	786125	Identifier	core		785494	0					
ANR	786126	Argument	core -> lang		785494	1					
ANR	786127	PtrMemberAccess	core -> lang		785494	0					
ANR	786128	Identifier	core		785494	0					
ANR	786129	Identifier	lang		785494	1					
ANR	786130	Argument	cmd		785494	2					
ANR	786131	Identifier	cmd		785494	0					
ANR	786132	ExpressionStatement	free ( cmd )	934:5:26769:26779	785494	3	True				
ANR	786133	CallExpression	free ( cmd )		785494	0					
ANR	786134	Callee	free		785494	0					
ANR	786135	Identifier	free		785494	0					
ANR	786136	ArgumentList	cmd		785494	1					
ANR	786137	Argument	cmd		785494	0					
ANR	786138	Identifier	cmd		785494	0					
ANR	786139	ExpressionStatement	ret = 1	935:5:26786:26793	785494	4	True				
ANR	786140	AssignmentExpression	ret = 1		785494	0		=			
ANR	786141	Identifier	ret		785494	0					
ANR	786142	PrimaryExpression	1		785494	1					
ANR	786143	ElseStatement	else		785494	0					
ANR	786144	IfStatement	"if ( ! strcmp ( ext , ""d"" ) )"		785494	0					
ANR	786145	Condition	"! strcmp ( ext , ""d"" )"	936:15:26810:26827	785494	0	True				
ANR	786146	UnaryOperationExpression	"! strcmp ( ext , ""d"" )"		785494	0					
ANR	786147	UnaryOperator	!		785494	0					
ANR	786148	CallExpression	"strcmp ( ext , ""d"" )"		785494	1					
ANR	786149	Callee	strcmp		785494	0					
ANR	786150	Identifier	strcmp		785494	0					
ANR	786151	ArgumentList	ext		785494	1					
ANR	786152	Argument	ext		785494	0					
ANR	786153	Identifier	ext		785494	0					
ANR	786154	Argument	"""d"""		785494	1					
ANR	786155	PrimaryExpression	"""d"""		785494	0					
ANR	786156	CompoundStatement		84:5:2534:2565	785494	1					
ANR	786157	IdentifierDeclStatement	"char * cmd = cmdstr ( ""dmd -run"" ) ;"	937:5:26837:26868	785494	0	True				
ANR	786158	IdentifierDecl	"* cmd = cmdstr ( ""dmd -run"" )"		785494	0					
ANR	786159	IdentifierDeclType	char *		785494	0					
ANR	786160	Identifier	cmd		785494	1					
ANR	786161	AssignmentExpression	"* cmd = cmdstr ( ""dmd -run"" )"		785494	2		=			
ANR	786162	Identifier	cmd		785494	0					
ANR	786163	CallExpression	"cmdstr ( ""dmd -run"" )"		785494	1					
ANR	786164	Callee	cmdstr		785494	0					
ANR	786165	Identifier	cmdstr		785494	0					
ANR	786166	ArgumentList	"""dmd -run"""		785494	1					
ANR	786167	Argument	"""dmd -run"""		785494	0					
ANR	786168	PrimaryExpression	"""dmd -run"""		785494	0					
ANR	786169	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	938:5:26875:26906	785494	1	True				
ANR	786170	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		785494	0					
ANR	786171	Callee	r_lang_use		785494	0					
ANR	786172	Identifier	r_lang_use		785494	0					
ANR	786173	ArgumentList	core -> lang		785494	1					
ANR	786174	Argument	core -> lang		785494	0					
ANR	786175	PtrMemberAccess	core -> lang		785494	0					
ANR	786176	Identifier	core		785494	0					
ANR	786177	Identifier	lang		785494	1					
ANR	786178	Argument	"""pipe"""		785494	1					
ANR	786179	PrimaryExpression	"""pipe"""		785494	0					
ANR	786180	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	939:5:26913:26950	785494	2	True				
ANR	786181	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		785494	0					
ANR	786182	Callee	lang_run_file		785494	0					
ANR	786183	Identifier	lang_run_file		785494	0					
ANR	786184	ArgumentList	core		785494	1					
ANR	786185	Argument	core		785494	0					
ANR	786186	Identifier	core		785494	0					
ANR	786187	Argument	core -> lang		785494	1					
ANR	786188	PtrMemberAccess	core -> lang		785494	0					
ANR	786189	Identifier	core		785494	0					
ANR	786190	Identifier	lang		785494	1					
ANR	786191	Argument	cmd		785494	2					
ANR	786192	Identifier	cmd		785494	0					
ANR	786193	ExpressionStatement	free ( cmd )	940:5:26957:26967	785494	3	True				
ANR	786194	CallExpression	free ( cmd )		785494	0					
ANR	786195	Callee	free		785494	0					
ANR	786196	Identifier	free		785494	0					
ANR	786197	ArgumentList	cmd		785494	1					
ANR	786198	Argument	cmd		785494	0					
ANR	786199	Identifier	cmd		785494	0					
ANR	786200	ExpressionStatement	ret = 1	941:5:26974:26981	785494	4	True				
ANR	786201	AssignmentExpression	ret = 1		785494	0		=			
ANR	786202	Identifier	ret		785494	0					
ANR	786203	PrimaryExpression	1		785494	1					
ANR	786204	ElseStatement	else		785494	0					
ANR	786205	IfStatement	"if ( ! strcmp ( ext , ""lsp"" ) )"		785494	0					
ANR	786206	Condition	"! strcmp ( ext , ""lsp"" )"	942:15:26998:27017	785494	0	True				
ANR	786207	UnaryOperationExpression	"! strcmp ( ext , ""lsp"" )"		785494	0					
ANR	786208	UnaryOperator	!		785494	0					
ANR	786209	CallExpression	"strcmp ( ext , ""lsp"" )"		785494	1					
ANR	786210	Callee	strcmp		785494	0					
ANR	786211	Identifier	strcmp		785494	0					
ANR	786212	ArgumentList	ext		785494	1					
ANR	786213	Argument	ext		785494	0					
ANR	786214	Identifier	ext		785494	0					
ANR	786215	Argument	"""lsp"""		785494	1					
ANR	786216	PrimaryExpression	"""lsp"""		785494	0					
ANR	786217	CompoundStatement		90:5:2724:2757	785494	1					
ANR	786218	IdentifierDeclStatement	"char * cmd = cmdstr ( ""newlisp -n"" ) ;"	943:5:27027:27060	785494	0	True				
ANR	786219	IdentifierDecl	"* cmd = cmdstr ( ""newlisp -n"" )"		785494	0					
ANR	786220	IdentifierDeclType	char *		785494	0					
ANR	786221	Identifier	cmd		785494	1					
ANR	786222	AssignmentExpression	"* cmd = cmdstr ( ""newlisp -n"" )"		785494	2		=			
ANR	786223	Identifier	cmd		785494	0					
ANR	786224	CallExpression	"cmdstr ( ""newlisp -n"" )"		785494	1					
ANR	786225	Callee	cmdstr		785494	0					
ANR	786226	Identifier	cmdstr		785494	0					
ANR	786227	ArgumentList	"""newlisp -n"""		785494	1					
ANR	786228	Argument	"""newlisp -n"""		785494	0					
ANR	786229	PrimaryExpression	"""newlisp -n"""		785494	0					
ANR	786230	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	944:5:27067:27098	785494	1	True				
ANR	786231	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		785494	0					
ANR	786232	Callee	r_lang_use		785494	0					
ANR	786233	Identifier	r_lang_use		785494	0					
ANR	786234	ArgumentList	core -> lang		785494	1					
ANR	786235	Argument	core -> lang		785494	0					
ANR	786236	PtrMemberAccess	core -> lang		785494	0					
ANR	786237	Identifier	core		785494	0					
ANR	786238	Identifier	lang		785494	1					
ANR	786239	Argument	"""pipe"""		785494	1					
ANR	786240	PrimaryExpression	"""pipe"""		785494	0					
ANR	786241	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	945:5:27105:27142	785494	2	True				
ANR	786242	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		785494	0					
ANR	786243	Callee	lang_run_file		785494	0					
ANR	786244	Identifier	lang_run_file		785494	0					
ANR	786245	ArgumentList	core		785494	1					
ANR	786246	Argument	core		785494	0					
ANR	786247	Identifier	core		785494	0					
ANR	786248	Argument	core -> lang		785494	1					
ANR	786249	PtrMemberAccess	core -> lang		785494	0					
ANR	786250	Identifier	core		785494	0					
ANR	786251	Identifier	lang		785494	1					
ANR	786252	Argument	cmd		785494	2					
ANR	786253	Identifier	cmd		785494	0					
ANR	786254	ExpressionStatement	free ( cmd )	946:5:27149:27159	785494	3	True				
ANR	786255	CallExpression	free ( cmd )		785494	0					
ANR	786256	Callee	free		785494	0					
ANR	786257	Identifier	free		785494	0					
ANR	786258	ArgumentList	cmd		785494	1					
ANR	786259	Argument	cmd		785494	0					
ANR	786260	Identifier	cmd		785494	0					
ANR	786261	ExpressionStatement	ret = 1	947:5:27166:27173	785494	4	True				
ANR	786262	AssignmentExpression	ret = 1		785494	0		=			
ANR	786263	Identifier	ret		785494	0					
ANR	786264	PrimaryExpression	1		785494	1					
ANR	786265	ElseStatement	else		785494	0					
ANR	786266	IfStatement	"if ( ! strcmp ( ext , ""go"" ) )"		785494	0					
ANR	786267	Condition	"! strcmp ( ext , ""go"" )"	948:15:27190:27208	785494	0	True				
ANR	786268	UnaryOperationExpression	"! strcmp ( ext , ""go"" )"		785494	0					
ANR	786269	UnaryOperator	!		785494	0					
ANR	786270	CallExpression	"strcmp ( ext , ""go"" )"		785494	1					
ANR	786271	Callee	strcmp		785494	0					
ANR	786272	Identifier	strcmp		785494	0					
ANR	786273	ArgumentList	ext		785494	1					
ANR	786274	Argument	ext		785494	0					
ANR	786275	Identifier	ext		785494	0					
ANR	786276	Argument	"""go"""		785494	1					
ANR	786277	PrimaryExpression	"""go"""		785494	0					
ANR	786278	CompoundStatement		96:5:2915:2944	785494	1					
ANR	786279	IdentifierDeclStatement	"char * cmd = cmdstr ( ""go run"" ) ;"	949:5:27218:27247	785494	0	True				
ANR	786280	IdentifierDecl	"* cmd = cmdstr ( ""go run"" )"		785494	0					
ANR	786281	IdentifierDeclType	char *		785494	0					
ANR	786282	Identifier	cmd		785494	1					
ANR	786283	AssignmentExpression	"* cmd = cmdstr ( ""go run"" )"		785494	2		=			
ANR	786284	Identifier	cmd		785494	0					
ANR	786285	CallExpression	"cmdstr ( ""go run"" )"		785494	1					
ANR	786286	Callee	cmdstr		785494	0					
ANR	786287	Identifier	cmdstr		785494	0					
ANR	786288	ArgumentList	"""go run"""		785494	1					
ANR	786289	Argument	"""go run"""		785494	0					
ANR	786290	PrimaryExpression	"""go run"""		785494	0					
ANR	786291	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	950:5:27254:27285	785494	1	True				
ANR	786292	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		785494	0					
ANR	786293	Callee	r_lang_use		785494	0					
ANR	786294	Identifier	r_lang_use		785494	0					
ANR	786295	ArgumentList	core -> lang		785494	1					
ANR	786296	Argument	core -> lang		785494	0					
ANR	786297	PtrMemberAccess	core -> lang		785494	0					
ANR	786298	Identifier	core		785494	0					
ANR	786299	Identifier	lang		785494	1					
ANR	786300	Argument	"""pipe"""		785494	1					
ANR	786301	PrimaryExpression	"""pipe"""		785494	0					
ANR	786302	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	951:5:27292:27329	785494	2	True				
ANR	786303	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		785494	0					
ANR	786304	Callee	lang_run_file		785494	0					
ANR	786305	Identifier	lang_run_file		785494	0					
ANR	786306	ArgumentList	core		785494	1					
ANR	786307	Argument	core		785494	0					
ANR	786308	Identifier	core		785494	0					
ANR	786309	Argument	core -> lang		785494	1					
ANR	786310	PtrMemberAccess	core -> lang		785494	0					
ANR	786311	Identifier	core		785494	0					
ANR	786312	Identifier	lang		785494	1					
ANR	786313	Argument	cmd		785494	2					
ANR	786314	Identifier	cmd		785494	0					
ANR	786315	ExpressionStatement	free ( cmd )	952:5:27336:27346	785494	3	True				
ANR	786316	CallExpression	free ( cmd )		785494	0					
ANR	786317	Callee	free		785494	0					
ANR	786318	Identifier	free		785494	0					
ANR	786319	ArgumentList	cmd		785494	1					
ANR	786320	Argument	cmd		785494	0					
ANR	786321	Identifier	cmd		785494	0					
ANR	786322	ExpressionStatement	ret = 1	953:5:27353:27360	785494	4	True				
ANR	786323	AssignmentExpression	ret = 1		785494	0		=			
ANR	786324	Identifier	ret		785494	0					
ANR	786325	PrimaryExpression	1		785494	1					
ANR	786326	ElseStatement	else		785494	0					
ANR	786327	IfStatement	"if ( ! strcmp ( ext , ""es6"" ) )"		785494	0					
ANR	786328	Condition	"! strcmp ( ext , ""es6"" )"	954:15:27377:27396	785494	0	True				
ANR	786329	UnaryOperationExpression	"! strcmp ( ext , ""es6"" )"		785494	0					
ANR	786330	UnaryOperator	!		785494	0					
ANR	786331	CallExpression	"strcmp ( ext , ""es6"" )"		785494	1					
ANR	786332	Callee	strcmp		785494	0					
ANR	786333	Identifier	strcmp		785494	0					
ANR	786334	ArgumentList	ext		785494	1					
ANR	786335	Argument	ext		785494	0					
ANR	786336	Identifier	ext		785494	0					
ANR	786337	Argument	"""es6"""		785494	1					
ANR	786338	PrimaryExpression	"""es6"""		785494	0					
ANR	786339	CompoundStatement		102:5:3103:3136	785494	1					
ANR	786340	IdentifierDeclStatement	"char * cmd = cmdstr ( ""babel-node"" ) ;"	955:5:27406:27439	785494	0	True				
ANR	786341	IdentifierDecl	"* cmd = cmdstr ( ""babel-node"" )"		785494	0					
ANR	786342	IdentifierDeclType	char *		785494	0					
ANR	786343	Identifier	cmd		785494	1					
ANR	786344	AssignmentExpression	"* cmd = cmdstr ( ""babel-node"" )"		785494	2		=			
ANR	786345	Identifier	cmd		785494	0					
ANR	786346	CallExpression	"cmdstr ( ""babel-node"" )"		785494	1					
ANR	786347	Callee	cmdstr		785494	0					
ANR	786348	Identifier	cmdstr		785494	0					
ANR	786349	ArgumentList	"""babel-node"""		785494	1					
ANR	786350	Argument	"""babel-node"""		785494	0					
ANR	786351	PrimaryExpression	"""babel-node"""		785494	0					
ANR	786352	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	956:5:27446:27477	785494	1	True				
ANR	786353	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		785494	0					
ANR	786354	Callee	r_lang_use		785494	0					
ANR	786355	Identifier	r_lang_use		785494	0					
ANR	786356	ArgumentList	core -> lang		785494	1					
ANR	786357	Argument	core -> lang		785494	0					
ANR	786358	PtrMemberAccess	core -> lang		785494	0					
ANR	786359	Identifier	core		785494	0					
ANR	786360	Identifier	lang		785494	1					
ANR	786361	Argument	"""pipe"""		785494	1					
ANR	786362	PrimaryExpression	"""pipe"""		785494	0					
ANR	786363	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	957:5:27484:27521	785494	2	True				
ANR	786364	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		785494	0					
ANR	786365	Callee	lang_run_file		785494	0					
ANR	786366	Identifier	lang_run_file		785494	0					
ANR	786367	ArgumentList	core		785494	1					
ANR	786368	Argument	core		785494	0					
ANR	786369	Identifier	core		785494	0					
ANR	786370	Argument	core -> lang		785494	1					
ANR	786371	PtrMemberAccess	core -> lang		785494	0					
ANR	786372	Identifier	core		785494	0					
ANR	786373	Identifier	lang		785494	1					
ANR	786374	Argument	cmd		785494	2					
ANR	786375	Identifier	cmd		785494	0					
ANR	786376	ExpressionStatement	free ( cmd )	958:5:27528:27538	785494	3	True				
ANR	786377	CallExpression	free ( cmd )		785494	0					
ANR	786378	Callee	free		785494	0					
ANR	786379	Identifier	free		785494	0					
ANR	786380	ArgumentList	cmd		785494	1					
ANR	786381	Argument	cmd		785494	0					
ANR	786382	Identifier	cmd		785494	0					
ANR	786383	ExpressionStatement	ret = 1	959:5:27545:27552	785494	4	True				
ANR	786384	AssignmentExpression	ret = 1		785494	0		=			
ANR	786385	Identifier	ret		785494	0					
ANR	786386	PrimaryExpression	1		785494	1					
ANR	786387	ElseStatement	else		785494	0					
ANR	786388	IfStatement	"if ( ! strcmp ( ext , ""rb"" ) )"		785494	0					
ANR	786389	Condition	"! strcmp ( ext , ""rb"" )"	960:15:27569:27587	785494	0	True				
ANR	786390	UnaryOperationExpression	"! strcmp ( ext , ""rb"" )"		785494	0					
ANR	786391	UnaryOperator	!		785494	0					
ANR	786392	CallExpression	"strcmp ( ext , ""rb"" )"		785494	1					
ANR	786393	Callee	strcmp		785494	0					
ANR	786394	Identifier	strcmp		785494	0					
ANR	786395	ArgumentList	ext		785494	1					
ANR	786396	Argument	ext		785494	0					
ANR	786397	Identifier	ext		785494	0					
ANR	786398	Argument	"""rb"""		785494	1					
ANR	786399	PrimaryExpression	"""rb"""		785494	0					
ANR	786400	CompoundStatement		108:5:3294:3321	785494	1					
ANR	786401	IdentifierDeclStatement	"char * cmd = cmdstr ( ""ruby"" ) ;"	961:5:27597:27624	785494	0	True				
ANR	786402	IdentifierDecl	"* cmd = cmdstr ( ""ruby"" )"		785494	0					
ANR	786403	IdentifierDeclType	char *		785494	0					
ANR	786404	Identifier	cmd		785494	1					
ANR	786405	AssignmentExpression	"* cmd = cmdstr ( ""ruby"" )"		785494	2		=			
ANR	786406	Identifier	cmd		785494	0					
ANR	786407	CallExpression	"cmdstr ( ""ruby"" )"		785494	1					
ANR	786408	Callee	cmdstr		785494	0					
ANR	786409	Identifier	cmdstr		785494	0					
ANR	786410	ArgumentList	"""ruby"""		785494	1					
ANR	786411	Argument	"""ruby"""		785494	0					
ANR	786412	PrimaryExpression	"""ruby"""		785494	0					
ANR	786413	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	962:5:27631:27662	785494	1	True				
ANR	786414	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		785494	0					
ANR	786415	Callee	r_lang_use		785494	0					
ANR	786416	Identifier	r_lang_use		785494	0					
ANR	786417	ArgumentList	core -> lang		785494	1					
ANR	786418	Argument	core -> lang		785494	0					
ANR	786419	PtrMemberAccess	core -> lang		785494	0					
ANR	786420	Identifier	core		785494	0					
ANR	786421	Identifier	lang		785494	1					
ANR	786422	Argument	"""pipe"""		785494	1					
ANR	786423	PrimaryExpression	"""pipe"""		785494	0					
ANR	786424	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	963:5:27669:27706	785494	2	True				
ANR	786425	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		785494	0					
ANR	786426	Callee	lang_run_file		785494	0					
ANR	786427	Identifier	lang_run_file		785494	0					
ANR	786428	ArgumentList	core		785494	1					
ANR	786429	Argument	core		785494	0					
ANR	786430	Identifier	core		785494	0					
ANR	786431	Argument	core -> lang		785494	1					
ANR	786432	PtrMemberAccess	core -> lang		785494	0					
ANR	786433	Identifier	core		785494	0					
ANR	786434	Identifier	lang		785494	1					
ANR	786435	Argument	cmd		785494	2					
ANR	786436	Identifier	cmd		785494	0					
ANR	786437	ExpressionStatement	free ( cmd )	964:5:27713:27723	785494	3	True				
ANR	786438	CallExpression	free ( cmd )		785494	0					
ANR	786439	Callee	free		785494	0					
ANR	786440	Identifier	free		785494	0					
ANR	786441	ArgumentList	cmd		785494	1					
ANR	786442	Argument	cmd		785494	0					
ANR	786443	Identifier	cmd		785494	0					
ANR	786444	ExpressionStatement	ret = 1	965:5:27730:27737	785494	4	True				
ANR	786445	AssignmentExpression	ret = 1		785494	0		=			
ANR	786446	Identifier	ret		785494	0					
ANR	786447	PrimaryExpression	1		785494	1					
ANR	786448	ElseStatement	else		785494	0					
ANR	786449	IfStatement	"if ( ! strcmp ( ext , ""vala"" ) )"		785494	0					
ANR	786450	Condition	"! strcmp ( ext , ""vala"" )"	966:15:27754:27774	785494	0	True				
ANR	786451	UnaryOperationExpression	"! strcmp ( ext , ""vala"" )"		785494	0					
ANR	786452	UnaryOperator	!		785494	0					
ANR	786453	CallExpression	"strcmp ( ext , ""vala"" )"		785494	1					
ANR	786454	Callee	strcmp		785494	0					
ANR	786455	Identifier	strcmp		785494	0					
ANR	786456	ArgumentList	ext		785494	1					
ANR	786457	Argument	ext		785494	0					
ANR	786458	Identifier	ext		785494	0					
ANR	786459	Argument	"""vala"""		785494	1					
ANR	786460	PrimaryExpression	"""vala"""		785494	0					
ANR	786461	CompoundStatement		113:38:3474:3474	785494	1					
ANR	786462	ExpressionStatement	"r_lang_use ( core -> lang , ""vala"" )"	967:5:27784:27815	785494	0	True				
ANR	786463	CallExpression	"r_lang_use ( core -> lang , ""vala"" )"		785494	0					
ANR	786464	Callee	r_lang_use		785494	0					
ANR	786465	Identifier	r_lang_use		785494	0					
ANR	786466	ArgumentList	core -> lang		785494	1					
ANR	786467	Argument	core -> lang		785494	0					
ANR	786468	PtrMemberAccess	core -> lang		785494	0					
ANR	786469	Identifier	core		785494	0					
ANR	786470	Identifier	lang		785494	1					
ANR	786471	Argument	"""vala"""		785494	1					
ANR	786472	PrimaryExpression	"""vala"""		785494	0					
ANR	786473	ExpressionStatement	"lang_run_file ( core , core -> lang , file )"	968:5:27822:27860	785494	1	True				
ANR	786474	CallExpression	"lang_run_file ( core , core -> lang , file )"		785494	0					
ANR	786475	Callee	lang_run_file		785494	0					
ANR	786476	Identifier	lang_run_file		785494	0					
ANR	786477	ArgumentList	core		785494	1					
ANR	786478	Argument	core		785494	0					
ANR	786479	Identifier	core		785494	0					
ANR	786480	Argument	core -> lang		785494	1					
ANR	786481	PtrMemberAccess	core -> lang		785494	0					
ANR	786482	Identifier	core		785494	0					
ANR	786483	Identifier	lang		785494	1					
ANR	786484	Argument	file		785494	2					
ANR	786485	Identifier	file		785494	0					
ANR	786486	ExpressionStatement	ret = 1	969:5:27867:27874	785494	2	True				
ANR	786487	AssignmentExpression	ret = 1		785494	0		=			
ANR	786488	Identifier	ret		785494	0					
ANR	786489	PrimaryExpression	1		785494	1					
ANR	786490	ElseStatement	else		785494	0					
ANR	786491	IfStatement	"if ( ! strcmp ( ext , ""sh"" ) )"		785494	0					
ANR	786492	Condition	"! strcmp ( ext , ""sh"" )"	970:15:27891:27909	785494	0	True				
ANR	786493	UnaryOperationExpression	"! strcmp ( ext , ""sh"" )"		785494	0					
ANR	786494	UnaryOperator	!		785494	0					
ANR	786495	CallExpression	"strcmp ( ext , ""sh"" )"		785494	1					
ANR	786496	Callee	strcmp		785494	0					
ANR	786497	Identifier	strcmp		785494	0					
ANR	786498	ArgumentList	ext		785494	1					
ANR	786499	Argument	ext		785494	0					
ANR	786500	Identifier	ext		785494	0					
ANR	786501	Argument	"""sh"""		785494	1					
ANR	786502	PrimaryExpression	"""sh"""		785494	0					
ANR	786503	CompoundStatement		118:5:3616:3652	785494	1					
ANR	786504	IdentifierDeclStatement	"char * shell = r_sys_getenv ( ""SHELL"" ) ;"	971:5:27919:27955	785494	0	True				
ANR	786505	IdentifierDecl	"* shell = r_sys_getenv ( ""SHELL"" )"		785494	0					
ANR	786506	IdentifierDeclType	char *		785494	0					
ANR	786507	Identifier	shell		785494	1					
ANR	786508	AssignmentExpression	"* shell = r_sys_getenv ( ""SHELL"" )"		785494	2		=			
ANR	786509	Identifier	shell		785494	0					
ANR	786510	CallExpression	"r_sys_getenv ( ""SHELL"" )"		785494	1					
ANR	786511	Callee	r_sys_getenv		785494	0					
ANR	786512	Identifier	r_sys_getenv		785494	0					
ANR	786513	ArgumentList	"""SHELL"""		785494	1					
ANR	786514	Argument	"""SHELL"""		785494	0					
ANR	786515	PrimaryExpression	"""SHELL"""		785494	0					
ANR	786516	IfStatement	if ( ! shell )		785494	1					
ANR	786517	Condition	! shell	972:9:27966:27971	785494	0	True				
ANR	786518	UnaryOperationExpression	! shell		785494	0					
ANR	786519	UnaryOperator	!		785494	0					
ANR	786520	Identifier	shell		785494	1					
ANR	786521	CompoundStatement		119:17:3671:3671	785494	1					
ANR	786522	ExpressionStatement	"shell = strdup ( ""sh"" )"	973:6:27982:28003	785494	0	True				
ANR	786523	AssignmentExpression	"shell = strdup ( ""sh"" )"		785494	0		=			
ANR	786524	Identifier	shell		785494	0					
ANR	786525	CallExpression	"strdup ( ""sh"" )"		785494	1					
ANR	786526	Callee	strdup		785494	0					
ANR	786527	Identifier	strdup		785494	0					
ANR	786528	ArgumentList	"""sh"""		785494	1					
ANR	786529	Argument	"""sh"""		785494	0					
ANR	786530	PrimaryExpression	"""sh"""		785494	0					
ANR	786531	IfStatement	if ( shell )		785494	2					
ANR	786532	Condition	shell	975:9:28021:28025	785494	0	True				
ANR	786533	Identifier	shell		785494	0					
ANR	786534	CompoundStatement		124:6:3772:3819	785494	1					
ANR	786535	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	976:6:28036:28067	785494	0	True				
ANR	786536	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		785494	0					
ANR	786537	Callee	r_lang_use		785494	0					
ANR	786538	Identifier	r_lang_use		785494	0					
ANR	786539	ArgumentList	core -> lang		785494	1					
ANR	786540	Argument	core -> lang		785494	0					
ANR	786541	PtrMemberAccess	core -> lang		785494	0					
ANR	786542	Identifier	core		785494	0					
ANR	786543	Identifier	lang		785494	1					
ANR	786544	Argument	"""pipe"""		785494	1					
ANR	786545	PrimaryExpression	"""pipe"""		785494	0					
ANR	786546	IdentifierDeclStatement	"char * cmd = r_str_newf ( ""%s '%s'"" , shell , file ) ;"	977:6:28075:28122	785494	1	True				
ANR	786547	IdentifierDecl	"* cmd = r_str_newf ( ""%s '%s'"" , shell , file )"		785494	0					
ANR	786548	IdentifierDeclType	char *		785494	0					
ANR	786549	Identifier	cmd		785494	1					
ANR	786550	AssignmentExpression	"* cmd = r_str_newf ( ""%s '%s'"" , shell , file )"		785494	2		=			
ANR	786551	Identifier	cmd		785494	0					
ANR	786552	CallExpression	"r_str_newf ( ""%s '%s'"" , shell , file )"		785494	1					
ANR	786553	Callee	r_str_newf		785494	0					
ANR	786554	Identifier	r_str_newf		785494	0					
ANR	786555	ArgumentList	"""%s '%s'"""		785494	1					
ANR	786556	Argument	"""%s '%s'"""		785494	0					
ANR	786557	PrimaryExpression	"""%s '%s'"""		785494	0					
ANR	786558	Argument	shell		785494	1					
ANR	786559	Identifier	shell		785494	0					
ANR	786560	Argument	file		785494	2					
ANR	786561	Identifier	file		785494	0					
ANR	786562	IfStatement	if ( cmd )		785494	2					
ANR	786563	Condition	cmd	978:10:28134:28136	785494	0	True				
ANR	786564	Identifier	cmd		785494	0					
ANR	786565	CompoundStatement		125:15:3836:3836	785494	1					
ANR	786566	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	979:7:28148:28185	785494	0	True				
ANR	786567	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		785494	0					
ANR	786568	Callee	lang_run_file		785494	0					
ANR	786569	Identifier	lang_run_file		785494	0					
ANR	786570	ArgumentList	core		785494	1					
ANR	786571	Argument	core		785494	0					
ANR	786572	Identifier	core		785494	0					
ANR	786573	Argument	core -> lang		785494	1					
ANR	786574	PtrMemberAccess	core -> lang		785494	0					
ANR	786575	Identifier	core		785494	0					
ANR	786576	Identifier	lang		785494	1					
ANR	786577	Argument	cmd		785494	2					
ANR	786578	Identifier	cmd		785494	0					
ANR	786579	ExpressionStatement	free ( cmd )	980:7:28194:28204	785494	1	True				
ANR	786580	CallExpression	free ( cmd )		785494	0					
ANR	786581	Callee	free		785494	0					
ANR	786582	Identifier	free		785494	0					
ANR	786583	ArgumentList	cmd		785494	1					
ANR	786584	Argument	cmd		785494	0					
ANR	786585	Identifier	cmd		785494	0					
ANR	786586	ExpressionStatement	free ( shell )	982:6:28220:28232	785494	3	True				
ANR	786587	CallExpression	free ( shell )		785494	0					
ANR	786588	Callee	free		785494	0					
ANR	786589	Identifier	free		785494	0					
ANR	786590	ArgumentList	shell		785494	1					
ANR	786591	Argument	shell		785494	0					
ANR	786592	Identifier	shell		785494	0					
ANR	786593	ExpressionStatement	ret = 1	984:5:28246:28253	785494	3	True				
ANR	786594	AssignmentExpression	ret = 1		785494	0		=			
ANR	786595	Identifier	ret		785494	0					
ANR	786596	PrimaryExpression	1		785494	1					
ANR	786597	ElseStatement	else		785494	0					
ANR	786598	IfStatement	"if ( ! strcmp ( ext , ""pl"" ) )"		785494	0					
ANR	786599	Condition	"! strcmp ( ext , ""pl"" )"	985:15:28270:28288	785494	0	True				
ANR	786600	UnaryOperationExpression	"! strcmp ( ext , ""pl"" )"		785494	0					
ANR	786601	UnaryOperator	!		785494	0					
ANR	786602	CallExpression	"strcmp ( ext , ""pl"" )"		785494	1					
ANR	786603	Callee	strcmp		785494	0					
ANR	786604	Identifier	strcmp		785494	0					
ANR	786605	ArgumentList	ext		785494	1					
ANR	786606	Argument	ext		785494	0					
ANR	786607	Identifier	ext		785494	0					
ANR	786608	Argument	"""pl"""		785494	1					
ANR	786609	PrimaryExpression	"""pl"""		785494	0					
ANR	786610	CompoundStatement		133:5:3995:4022	785494	1					
ANR	786611	IdentifierDeclStatement	"char * cmd = cmdstr ( ""perl"" ) ;"	986:5:28298:28325	785494	0	True				
ANR	786612	IdentifierDecl	"* cmd = cmdstr ( ""perl"" )"		785494	0					
ANR	786613	IdentifierDeclType	char *		785494	0					
ANR	786614	Identifier	cmd		785494	1					
ANR	786615	AssignmentExpression	"* cmd = cmdstr ( ""perl"" )"		785494	2		=			
ANR	786616	Identifier	cmd		785494	0					
ANR	786617	CallExpression	"cmdstr ( ""perl"" )"		785494	1					
ANR	786618	Callee	cmdstr		785494	0					
ANR	786619	Identifier	cmdstr		785494	0					
ANR	786620	ArgumentList	"""perl"""		785494	1					
ANR	786621	Argument	"""perl"""		785494	0					
ANR	786622	PrimaryExpression	"""perl"""		785494	0					
ANR	786623	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	987:5:28332:28363	785494	1	True				
ANR	786624	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		785494	0					
ANR	786625	Callee	r_lang_use		785494	0					
ANR	786626	Identifier	r_lang_use		785494	0					
ANR	786627	ArgumentList	core -> lang		785494	1					
ANR	786628	Argument	core -> lang		785494	0					
ANR	786629	PtrMemberAccess	core -> lang		785494	0					
ANR	786630	Identifier	core		785494	0					
ANR	786631	Identifier	lang		785494	1					
ANR	786632	Argument	"""pipe"""		785494	1					
ANR	786633	PrimaryExpression	"""pipe"""		785494	0					
ANR	786634	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	988:5:28370:28407	785494	2	True				
ANR	786635	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		785494	0					
ANR	786636	Callee	lang_run_file		785494	0					
ANR	786637	Identifier	lang_run_file		785494	0					
ANR	786638	ArgumentList	core		785494	1					
ANR	786639	Argument	core		785494	0					
ANR	786640	Identifier	core		785494	0					
ANR	786641	Argument	core -> lang		785494	1					
ANR	786642	PtrMemberAccess	core -> lang		785494	0					
ANR	786643	Identifier	core		785494	0					
ANR	786644	Identifier	lang		785494	1					
ANR	786645	Argument	cmd		785494	2					
ANR	786646	Identifier	cmd		785494	0					
ANR	786647	ExpressionStatement	free ( cmd )	989:5:28414:28424	785494	3	True				
ANR	786648	CallExpression	free ( cmd )		785494	0					
ANR	786649	Callee	free		785494	0					
ANR	786650	Identifier	free		785494	0					
ANR	786651	ArgumentList	cmd		785494	1					
ANR	786652	Argument	cmd		785494	0					
ANR	786653	Identifier	cmd		785494	0					
ANR	786654	ExpressionStatement	ret = 1	990:5:28431:28438	785494	4	True				
ANR	786655	AssignmentExpression	ret = 1		785494	0		=			
ANR	786656	Identifier	ret		785494	0					
ANR	786657	PrimaryExpression	1		785494	1					
ANR	786658	ElseStatement	else		785494	0					
ANR	786659	IfStatement	"if ( ! strcmp ( ext , ""py"" ) )"		785494	0					
ANR	786660	Condition	"! strcmp ( ext , ""py"" )"	991:15:28455:28473	785494	0	True				
ANR	786661	UnaryOperationExpression	"! strcmp ( ext , ""py"" )"		785494	0					
ANR	786662	UnaryOperator	!		785494	0					
ANR	786663	CallExpression	"strcmp ( ext , ""py"" )"		785494	1					
ANR	786664	Callee	strcmp		785494	0					
ANR	786665	Identifier	strcmp		785494	0					
ANR	786666	ArgumentList	ext		785494	1					
ANR	786667	Argument	ext		785494	0					
ANR	786668	Identifier	ext		785494	0					
ANR	786669	Argument	"""py"""		785494	1					
ANR	786670	PrimaryExpression	"""py"""		785494	0					
ANR	786671	CompoundStatement		139:5:4180:4209	785494	1					
ANR	786672	IdentifierDeclStatement	"char * cmd = cmdstr ( ""python"" ) ;"	992:5:28483:28512	785494	0	True				
ANR	786673	IdentifierDecl	"* cmd = cmdstr ( ""python"" )"		785494	0					
ANR	786674	IdentifierDeclType	char *		785494	0					
ANR	786675	Identifier	cmd		785494	1					
ANR	786676	AssignmentExpression	"* cmd = cmdstr ( ""python"" )"		785494	2		=			
ANR	786677	Identifier	cmd		785494	0					
ANR	786678	CallExpression	"cmdstr ( ""python"" )"		785494	1					
ANR	786679	Callee	cmdstr		785494	0					
ANR	786680	Identifier	cmdstr		785494	0					
ANR	786681	ArgumentList	"""python"""		785494	1					
ANR	786682	Argument	"""python"""		785494	0					
ANR	786683	PrimaryExpression	"""python"""		785494	0					
ANR	786684	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	993:5:28519:28550	785494	1	True				
ANR	786685	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		785494	0					
ANR	786686	Callee	r_lang_use		785494	0					
ANR	786687	Identifier	r_lang_use		785494	0					
ANR	786688	ArgumentList	core -> lang		785494	1					
ANR	786689	Argument	core -> lang		785494	0					
ANR	786690	PtrMemberAccess	core -> lang		785494	0					
ANR	786691	Identifier	core		785494	0					
ANR	786692	Identifier	lang		785494	1					
ANR	786693	Argument	"""pipe"""		785494	1					
ANR	786694	PrimaryExpression	"""pipe"""		785494	0					
ANR	786695	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	994:5:28557:28594	785494	2	True				
ANR	786696	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		785494	0					
ANR	786697	Callee	lang_run_file		785494	0					
ANR	786698	Identifier	lang_run_file		785494	0					
ANR	786699	ArgumentList	core		785494	1					
ANR	786700	Argument	core		785494	0					
ANR	786701	Identifier	core		785494	0					
ANR	786702	Argument	core -> lang		785494	1					
ANR	786703	PtrMemberAccess	core -> lang		785494	0					
ANR	786704	Identifier	core		785494	0					
ANR	786705	Identifier	lang		785494	1					
ANR	786706	Argument	cmd		785494	2					
ANR	786707	Identifier	cmd		785494	0					
ANR	786708	ExpressionStatement	free ( cmd )	995:5:28601:28611	785494	3	True				
ANR	786709	CallExpression	free ( cmd )		785494	0					
ANR	786710	Callee	free		785494	0					
ANR	786711	Identifier	free		785494	0					
ANR	786712	ArgumentList	cmd		785494	1					
ANR	786713	Argument	cmd		785494	0					
ANR	786714	Identifier	cmd		785494	0					
ANR	786715	ExpressionStatement	ret = 1	996:5:28618:28625	785494	4	True				
ANR	786716	AssignmentExpression	ret = 1		785494	0		=			
ANR	786717	Identifier	ret		785494	0					
ANR	786718	PrimaryExpression	1		785494	1					
ANR	786719	ElseStatement	else		785494	0					
ANR	786720	CompoundStatement		147:4:4386:4428	785494	0					
ANR	786721	IdentifierDeclStatement	char * abspath = r_file_path ( file ) ;	999:4:28649:28683	785494	0	True				
ANR	786722	IdentifierDecl	* abspath = r_file_path ( file )		785494	0					
ANR	786723	IdentifierDeclType	char *		785494	0					
ANR	786724	Identifier	abspath		785494	1					
ANR	786725	AssignmentExpression	* abspath = r_file_path ( file )		785494	2		=			
ANR	786726	Identifier	abspath		785494	0					
ANR	786727	CallExpression	r_file_path ( file )		785494	1					
ANR	786728	Callee	r_file_path		785494	0					
ANR	786729	Identifier	r_file_path		785494	0					
ANR	786730	ArgumentList	file		785494	1					
ANR	786731	Argument	file		785494	0					
ANR	786732	Identifier	file		785494	0					
ANR	786733	IdentifierDeclStatement	"char * lang = langFromHashbang ( core , file ) ;"	1000:4:28689:28731	785494	1	True				
ANR	786734	IdentifierDecl	"* lang = langFromHashbang ( core , file )"		785494	0					
ANR	786735	IdentifierDeclType	char *		785494	0					
ANR	786736	Identifier	lang		785494	1					
ANR	786737	AssignmentExpression	"* lang = langFromHashbang ( core , file )"		785494	2		=			
ANR	786738	Identifier	lang		785494	0					
ANR	786739	CallExpression	"langFromHashbang ( core , file )"		785494	1					
ANR	786740	Callee	langFromHashbang		785494	0					
ANR	786741	Identifier	langFromHashbang		785494	0					
ANR	786742	ArgumentList	core		785494	1					
ANR	786743	Argument	core		785494	0					
ANR	786744	Identifier	core		785494	0					
ANR	786745	Argument	file		785494	1					
ANR	786746	Identifier	file		785494	0					
ANR	786747	IfStatement	if ( lang )		785494	2					
ANR	786748	Condition	lang	1001:8:28741:28744	785494	0	True				
ANR	786749	Identifier	lang		785494	0					
ANR	786750	CompoundStatement		150:5:4489:4535	785494	1					
ANR	786751	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	1002:5:28754:28785	785494	0	True				
ANR	786752	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		785494	0					
ANR	786753	Callee	r_lang_use		785494	0					
ANR	786754	Identifier	r_lang_use		785494	0					
ANR	786755	ArgumentList	core -> lang		785494	1					
ANR	786756	Argument	core -> lang		785494	0					
ANR	786757	PtrMemberAccess	core -> lang		785494	0					
ANR	786758	Identifier	core		785494	0					
ANR	786759	Identifier	lang		785494	1					
ANR	786760	Argument	"""pipe"""		785494	1					
ANR	786761	PrimaryExpression	"""pipe"""		785494	0					
ANR	786762	IdentifierDeclStatement	"char * cmd = r_str_newf ( ""%s '%s'"" , lang , file ) ;"	1003:5:28792:28838	785494	1	True				
ANR	786763	IdentifierDecl	"* cmd = r_str_newf ( ""%s '%s'"" , lang , file )"		785494	0					
ANR	786764	IdentifierDeclType	char *		785494	0					
ANR	786765	Identifier	cmd		785494	1					
ANR	786766	AssignmentExpression	"* cmd = r_str_newf ( ""%s '%s'"" , lang , file )"		785494	2		=			
ANR	786767	Identifier	cmd		785494	0					
ANR	786768	CallExpression	"r_str_newf ( ""%s '%s'"" , lang , file )"		785494	1					
ANR	786769	Callee	r_str_newf		785494	0					
ANR	786770	Identifier	r_str_newf		785494	0					
ANR	786771	ArgumentList	"""%s '%s'"""		785494	1					
ANR	786772	Argument	"""%s '%s'"""		785494	0					
ANR	786773	PrimaryExpression	"""%s '%s'"""		785494	0					
ANR	786774	Argument	lang		785494	1					
ANR	786775	Identifier	lang		785494	0					
ANR	786776	Argument	file		785494	2					
ANR	786777	Identifier	file		785494	0					
ANR	786778	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	1004:5:28845:28882	785494	2	True				
ANR	786779	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		785494	0					
ANR	786780	Callee	lang_run_file		785494	0					
ANR	786781	Identifier	lang_run_file		785494	0					
ANR	786782	ArgumentList	core		785494	1					
ANR	786783	Argument	core		785494	0					
ANR	786784	Identifier	core		785494	0					
ANR	786785	Argument	core -> lang		785494	1					
ANR	786786	PtrMemberAccess	core -> lang		785494	0					
ANR	786787	Identifier	core		785494	0					
ANR	786788	Identifier	lang		785494	1					
ANR	786789	Argument	cmd		785494	2					
ANR	786790	Identifier	cmd		785494	0					
ANR	786791	ExpressionStatement	free ( lang )	1005:5:28889:28900	785494	3	True				
ANR	786792	CallExpression	free ( lang )		785494	0					
ANR	786793	Callee	free		785494	0					
ANR	786794	Identifier	free		785494	0					
ANR	786795	ArgumentList	lang		785494	1					
ANR	786796	Argument	lang		785494	0					
ANR	786797	Identifier	lang		785494	0					
ANR	786798	ExpressionStatement	free ( cmd )	1006:5:28907:28917	785494	4	True				
ANR	786799	CallExpression	free ( cmd )		785494	0					
ANR	786800	Callee	free		785494	0					
ANR	786801	Identifier	free		785494	0					
ANR	786802	ArgumentList	cmd		785494	1					
ANR	786803	Argument	cmd		785494	0					
ANR	786804	Identifier	cmd		785494	0					
ANR	786805	ExpressionStatement	ret = 1	1007:5:28924:28931	785494	5	True				
ANR	786806	AssignmentExpression	ret = 1		785494	0		=			
ANR	786807	Identifier	ret		785494	0					
ANR	786808	PrimaryExpression	1		785494	1					
ANR	786809	ExpressionStatement	free ( abspath )	1009:4:28943:28957	785494	3	True				
ANR	786810	CallExpression	free ( abspath )		785494	0					
ANR	786811	Callee	free		785494	0					
ANR	786812	Identifier	free		785494	0					
ANR	786813	ArgumentList	abspath		785494	1					
ANR	786814	Argument	abspath		785494	0					
ANR	786815	Identifier	abspath		785494	0					
ANR	786816	IfStatement	if ( ! ret )		785494	15					
ANR	786817	Condition	! ret	1011:7:28971:28974	785494	0	True				
ANR	786818	UnaryOperationExpression	! ret		785494	0					
ANR	786819	UnaryOperator	!		785494	0					
ANR	786820	Identifier	ret		785494	1					
ANR	786821	CompoundStatement		158:13:4674:4674	785494	1					
ANR	786822	ExpressionStatement	"ret = r_core_cmd_file ( core , file )"	1012:4:28983:29017	785494	0	True				
ANR	786823	AssignmentExpression	"ret = r_core_cmd_file ( core , file )"		785494	0		=			
ANR	786824	Identifier	ret		785494	0					
ANR	786825	CallExpression	"r_core_cmd_file ( core , file )"		785494	1					
ANR	786826	Callee	r_core_cmd_file		785494	0					
ANR	786827	Identifier	r_core_cmd_file		785494	0					
ANR	786828	ArgumentList	core		785494	1					
ANR	786829	Argument	core		785494	0					
ANR	786830	Identifier	core		785494	0					
ANR	786831	Argument	file		785494	1					
ANR	786832	Identifier	file		785494	0					
ANR	786833	ExpressionStatement	free ( r_list_pop ( core -> scriptstack ) )	1016:1:29032:29069	785494	17	True				
ANR	786834	CallExpression	free ( r_list_pop ( core -> scriptstack ) )		785494	0					
ANR	786835	Callee	free		785494	0					
ANR	786836	Identifier	free		785494	0					
ANR	786837	ArgumentList	r_list_pop ( core -> scriptstack )		785494	1					
ANR	786838	Argument	r_list_pop ( core -> scriptstack )		785494	0					
ANR	786839	CallExpression	r_list_pop ( core -> scriptstack )		785494	0					
ANR	786840	Callee	r_list_pop		785494	0					
ANR	786841	Identifier	r_list_pop		785494	0					
ANR	786842	ArgumentList	core -> scriptstack		785494	1					
ANR	786843	Argument	core -> scriptstack		785494	0					
ANR	786844	PtrMemberAccess	core -> scriptstack		785494	0					
ANR	786845	Identifier	core		785494	0					
ANR	786846	Identifier	scriptstack		785494	1					
ANR	786847	ReturnStatement	return ret ;	1017:1:29072:29082	785494	18	True				
ANR	786848	Identifier	ret		785494	0					
ANR	786849	ReturnType	R_API bool		785494	1					
ANR	786850	Identifier	r_core_run_script		785494	2					
ANR	786851	ParameterList	"RCore * core , const char * file"		785494	3					
ANR	786852	Parameter	RCore * core	854:29:24271:24281	785494	0	True				
ANR	786853	ParameterType	RCore *		785494	0					
ANR	786854	Identifier	core		785494	1					
ANR	786855	Parameter	const char * file	854:42:24284:24299	785494	1	True				
ANR	786856	ParameterType	const char *		785494	0					
ANR	786857	Identifier	file		785494	1					
ANR	786858	CFGEntryNode	ENTRY		785494		True				
ANR	786859	CFGExitNode	EXIT		785494		True				
ANR	786860	Symbol	httpSandbox		785494						
ANR	786861	Symbol	r_file_abspath		785494						
ANR	786862	Symbol	r_sys_getenv		785494						
ANR	786863	Symbol	lang_run_file		785494						
ANR	786864	Symbol	dir		785494						
ANR	786865	Symbol	core -> lang		785494						
ANR	786866	Symbol	r_list_pop		785494						
ANR	786867	Symbol	core -> scriptstack		785494						
ANR	786868	Symbol	r_core_cmd_lines		785494						
ANR	786869	Symbol	absfile		785494						
ANR	786870	Symbol	abspath		785494						
ANR	786871	Symbol	r_core_editor		785494						
ANR	786872	Symbol	ret		785494						
ANR	786873	Symbol	strcmp		785494						
ANR	786874	Symbol	ext		785494						
ANR	786875	Symbol	NULL		785494						
ANR	786876	Symbol	iter		785494						
ANR	786877	Symbol	cmdstr		785494						
ANR	786878	Symbol	core		785494						
ANR	786879	Symbol	r_str_lchr		785494						
ANR	786880	Symbol	shell		785494						
ANR	786881	Symbol	r_config_get_i		785494						
ANR	786882	Symbol	name		785494						
ANR	786883	Symbol	true		785494						
ANR	786884	Symbol	p -> name		785494						
ANR	786885	Symbol	cmd		785494						
ANR	786886	Symbol	r_parse_c_file		785494						
ANR	786887	Symbol	* core		785494						
ANR	786888	Symbol	r_config_get		785494						
ANR	786889	Symbol	core -> anal -> sdb_types		785494						
ANR	786890	Symbol	r_str_newf		785494						
ANR	786891	Symbol	core -> anal		785494						
ANR	786892	Symbol	out		785494						
ANR	786893	Symbol	file		785494						
ANR	786894	Symbol	langFromHashbang		785494						
ANR	786895	Symbol	httpIndex		785494						
ANR	786896	Symbol	r_str_endswith		785494						
ANR	786897	Symbol	r_file_path		785494						
ANR	786898	Symbol	lang		785494						
ANR	786899	Symbol	* * core		785494						
ANR	786900	Symbol	core -> config		785494						
ANR	786901	Symbol	r_core_cmd_file		785494						
ANR	786902	Symbol	false		785494						
ANR	786903	Symbol	p		785494						
ANR	786904	Symbol	* core -> anal		785494						
ANR	786905	Symbol	r_file_is_c		785494						
ANR	786906	Symbol	* p		785494						
ANR	786907	Symbol	strdup		785494						
ANR	786908	Symbol	r_lang_get_by_extension		785494						
ANR	786909	Function	cmd_ls	1020:0:29087:29770							
ANR	786910	FunctionDef	"cmd_ls (void * data , const char * input)"		786909	0					
ANR	786911	CompoundStatement		1020:49:29136:29770	786909	0					
ANR	786912	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1021:1:29147:29174	786909	0	True				
ANR	786913	IdentifierDecl	* core = ( RCore * ) data		786909	0					
ANR	786914	IdentifierDeclType	RCore *		786909	0					
ANR	786915	Identifier	core		786909	1					
ANR	786916	AssignmentExpression	* core = ( RCore * ) data		786909	2		=			
ANR	786917	Identifier	core		786909	0					
ANR	786918	CastExpression	( RCore * ) data		786909	1					
ANR	786919	CastTarget	RCore *		786909	0					
ANR	786920	Identifier	data		786909	1					
ANR	786921	IdentifierDeclStatement	"const char * arg = strchr ( input , ' ' ) ;"	1022:1:29177:29214	786909	1	True				
ANR	786922	IdentifierDecl	"* arg = strchr ( input , ' ' )"		786909	0					
ANR	786923	IdentifierDeclType	const char *		786909	0					
ANR	786924	Identifier	arg		786909	1					
ANR	786925	AssignmentExpression	"* arg = strchr ( input , ' ' )"		786909	2		=			
ANR	786926	Identifier	arg		786909	0					
ANR	786927	CallExpression	"strchr ( input , ' ' )"		786909	1					
ANR	786928	Callee	strchr		786909	0					
ANR	786929	Identifier	strchr		786909	0					
ANR	786930	ArgumentList	input		786909	1					
ANR	786931	Argument	input		786909	0					
ANR	786932	Identifier	input		786909	0					
ANR	786933	Argument	' '		786909	1					
ANR	786934	PrimaryExpression	' '		786909	0					
ANR	786935	IfStatement	if ( arg )		786909	2					
ANR	786936	Condition	arg	1023:5:29221:29223	786909	0	True				
ANR	786937	Identifier	arg		786909	0					
ANR	786938	CompoundStatement		4:10:89:89	786909	1					
ANR	786939	ExpressionStatement	arg = r_str_trim_ro ( arg + 1 )	1024:2:29230:29259	786909	0	True				
ANR	786940	AssignmentExpression	arg = r_str_trim_ro ( arg + 1 )		786909	0		=			
ANR	786941	Identifier	arg		786909	0					
ANR	786942	CallExpression	r_str_trim_ro ( arg + 1 )		786909	1					
ANR	786943	Callee	r_str_trim_ro		786909	0					
ANR	786944	Identifier	r_str_trim_ro		786909	0					
ANR	786945	ArgumentList	arg + 1		786909	1					
ANR	786946	Argument	arg + 1		786909	0					
ANR	786947	AdditiveExpression	arg + 1		786909	0		+			
ANR	786948	Identifier	arg		786909	0					
ANR	786949	PrimaryExpression	1		786909	1					
ANR	786950	SwitchStatement	switch ( * input )		786909	3					
ANR	786951	Condition	* input	1026:9:29273:29278	786909	0	True				
ANR	786952	UnaryOperationExpression	* input		786909	0					
ANR	786953	UnaryOperator	*		786909	0					
ANR	786954	Identifier	input		786909	1					
ANR	786955	CompoundStatement		7:17:144:144	786909	1					
ANR	786956	Label	case '?' :	1027:1:29284:29292	786909	0	True				
ANR	786957	ExpressionStatement	"eprintf ( ""Usage: l[es] # ls to list files, le[ss] to less a file\\n"" )"	1028:2:29304:29372	786909	1	True				
ANR	786958	CallExpression	"eprintf ( ""Usage: l[es] # ls to list files, le[ss] to less a file\\n"" )"		786909	0					
ANR	786959	Callee	eprintf		786909	0					
ANR	786960	Identifier	eprintf		786909	0					
ANR	786961	ArgumentList	"""Usage: l[es] # ls to list files, le[ss] to less a file\\n"""		786909	1					
ANR	786962	Argument	"""Usage: l[es] # ls to list files, le[ss] to less a file\\n"""		786909	0					
ANR	786963	PrimaryExpression	"""Usage: l[es] # ls to list files, le[ss] to less a file\\n"""		786909	0					
ANR	786964	BreakStatement	break ;	1029:2:29376:29381	786909	2	True				
ANR	786965	Label	case 'e' :	1030:1:29384:29392	786909	3	True				
ANR	786966	IfStatement	if ( arg )		786909	4					
ANR	786967	Condition	arg	1031:6:29408:29410	786909	0	True				
ANR	786968	Identifier	arg		786909	0					
ANR	786969	CompoundStatement		12:11:276:276	786909	1					
ANR	786970	ExpressionStatement	"r_core_cmdf ( core , ""cat %s~.."" , arg )"	1032:3:29418:29454	786909	0	True				
ANR	786971	CallExpression	"r_core_cmdf ( core , ""cat %s~.."" , arg )"		786909	0					
ANR	786972	Callee	r_core_cmdf		786909	0					
ANR	786973	Identifier	r_core_cmdf		786909	0					
ANR	786974	ArgumentList	core		786909	1					
ANR	786975	Argument	core		786909	0					
ANR	786976	Identifier	core		786909	0					
ANR	786977	Argument	"""cat %s~.."""		786909	1					
ANR	786978	PrimaryExpression	"""cat %s~.."""		786909	0					
ANR	786979	Argument	arg		786909	2					
ANR	786980	Identifier	arg		786909	0					
ANR	786981	ElseStatement	else		786909	0					
ANR	786982	CompoundStatement		14:9:328:328	786909	0					
ANR	786983	ExpressionStatement	"eprintf ( ""Usage: less [file]\\n"" )"	1034:3:29470:29502	786909	0	True				
ANR	786984	CallExpression	"eprintf ( ""Usage: less [file]\\n"" )"		786909	0					
ANR	786985	Callee	eprintf		786909	0					
ANR	786986	Identifier	eprintf		786909	0					
ANR	786987	ArgumentList	"""Usage: less [file]\\n"""		786909	1					
ANR	786988	Argument	"""Usage: less [file]\\n"""		786909	0					
ANR	786989	PrimaryExpression	"""Usage: less [file]\\n"""		786909	0					
ANR	786990	BreakStatement	break ;	1036:2:29510:29515	786909	5	True				
ANR	786991	Label	default :	1037:1:29518:29525	786909	6	True				
ANR	786992	Identifier	default		786909	0					
ANR	786993	IfStatement	if ( ! arg )		786909	7					
ANR	786994	Condition	! arg	1038:6:29541:29544	786909	0	True				
ANR	786995	UnaryOperationExpression	! arg		786909	0					
ANR	786996	UnaryOperator	!		786909	0					
ANR	786997	Identifier	arg		786909	1					
ANR	786998	CompoundStatement		19:12:410:410	786909	1					
ANR	786999	ExpressionStatement	"arg = """""	1039:3:29552:29560	786909	0	True				
ANR	787000	AssignmentExpression	"arg = """""		786909	0		=			
ANR	787001	Identifier	arg		786909	0					
ANR	787002	PrimaryExpression	""""""		786909	1					
ANR	787003	IfStatement	"if ( r_fs_check ( core -> fs , arg ) )"		786909	8					
ANR	787004	Condition	"r_fs_check ( core -> fs , arg )"	1041:6:29572:29597	786909	0	True				
ANR	787005	CallExpression	"r_fs_check ( core -> fs , arg )"		786909	0					
ANR	787006	Callee	r_fs_check		786909	0					
ANR	787007	Identifier	r_fs_check		786909	0					
ANR	787008	ArgumentList	core -> fs		786909	1					
ANR	787009	Argument	core -> fs		786909	0					
ANR	787010	PtrMemberAccess	core -> fs		786909	0					
ANR	787011	Identifier	core		786909	0					
ANR	787012	Identifier	fs		786909	1					
ANR	787013	Argument	arg		786909	1					
ANR	787014	Identifier	arg		786909	0					
ANR	787015	CompoundStatement		22:34:463:463	786909	1					
ANR	787016	ExpressionStatement	"r_core_cmdf ( core , ""md %s"" , arg )"	1042:3:29605:29637	786909	0	True				
ANR	787017	CallExpression	"r_core_cmdf ( core , ""md %s"" , arg )"		786909	0					
ANR	787018	Callee	r_core_cmdf		786909	0					
ANR	787019	Identifier	r_core_cmdf		786909	0					
ANR	787020	ArgumentList	core		786909	1					
ANR	787021	Argument	core		786909	0					
ANR	787022	Identifier	core		786909	0					
ANR	787023	Argument	"""md %s"""		786909	1					
ANR	787024	PrimaryExpression	"""md %s"""		786909	0					
ANR	787025	Argument	arg		786909	2					
ANR	787026	Identifier	arg		786909	0					
ANR	787027	ElseStatement	else		786909	0					
ANR	787028	CompoundStatement		25:3:516:545	786909	0					
ANR	787029	IdentifierDeclStatement	char * res = r_syscmd_ls ( arg ) ;	1044:3:29653:29682	786909	0	True				
ANR	787030	IdentifierDecl	* res = r_syscmd_ls ( arg )		786909	0					
ANR	787031	IdentifierDeclType	char *		786909	0					
ANR	787032	Identifier	res		786909	1					
ANR	787033	AssignmentExpression	* res = r_syscmd_ls ( arg )		786909	2		=			
ANR	787034	Identifier	res		786909	0					
ANR	787035	CallExpression	r_syscmd_ls ( arg )		786909	1					
ANR	787036	Callee	r_syscmd_ls		786909	0					
ANR	787037	Identifier	r_syscmd_ls		786909	0					
ANR	787038	ArgumentList	arg		786909	1					
ANR	787039	Argument	arg		786909	0					
ANR	787040	Identifier	arg		786909	0					
ANR	787041	IfStatement	if ( res )		786909	1					
ANR	787042	Condition	res	1045:7:29691:29693	786909	0	True				
ANR	787043	Identifier	res		786909	0					
ANR	787044	CompoundStatement		26:12:559:559	786909	1					
ANR	787045	ExpressionStatement	r_cons_print ( res )	1046:4:29702:29720	786909	0	True				
ANR	787046	CallExpression	r_cons_print ( res )		786909	0					
ANR	787047	Callee	r_cons_print		786909	0					
ANR	787048	Identifier	r_cons_print		786909	0					
ANR	787049	ArgumentList	res		786909	1					
ANR	787050	Argument	res		786909	0					
ANR	787051	Identifier	res		786909	0					
ANR	787052	ExpressionStatement	free ( res )	1047:4:29726:29736	786909	1	True				
ANR	787053	CallExpression	free ( res )		786909	0					
ANR	787054	Callee	free		786909	0					
ANR	787055	Identifier	free		786909	0					
ANR	787056	ArgumentList	res		786909	1					
ANR	787057	Argument	res		786909	0					
ANR	787058	Identifier	res		786909	0					
ANR	787059	BreakStatement	break ;	1050:2:29749:29754	786909	9	True				
ANR	787060	ReturnStatement	return 0 ;	1052:1:29760:29768	786909	4	True				
ANR	787061	PrimaryExpression	0		786909	0					
ANR	787062	ReturnType	static int		786909	1					
ANR	787063	Identifier	cmd_ls		786909	2					
ANR	787064	ParameterList	"void * data , const char * input"		786909	3					
ANR	787065	Parameter	void * data	1020:18:29105:29114	786909	0	True				
ANR	787066	ParameterType	void *		786909	0					
ANR	787067	Identifier	data		786909	1					
ANR	787068	Parameter	const char * input	1020:30:29117:29133	786909	1	True				
ANR	787069	ParameterType	const char *		786909	0					
ANR	787070	Identifier	input		786909	1					
ANR	787071	CFGEntryNode	ENTRY		786909		True				
ANR	787072	CFGExitNode	EXIT		786909		True				
ANR	787073	Symbol	input		786909						
ANR	787074	Symbol	core		786909						
ANR	787075	Symbol	res		786909						
ANR	787076	Symbol	r_syscmd_ls		786909						
ANR	787077	Symbol	data		786909						
ANR	787078	Symbol	arg		786909						
ANR	787079	Symbol	r_str_trim_ro		786909						
ANR	787080	Symbol	* input		786909						
ANR	787081	Symbol	* core		786909						
ANR	787082	Symbol	strchr		786909						
ANR	787083	Symbol	core -> fs		786909						
ANR	787084	Symbol	r_fs_check		786909						
ANR	787085	Function	cmd_join	1055:0:29773:30622							
ANR	787086	FunctionDef	"cmd_join (void * data , const char * input)"		787085	0					
ANR	787087	CompoundStatement		1055:51:29824:30622	787085	0					
ANR	787088	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1056:1:29837:29864	787085	0	True				
ANR	787089	IdentifierDecl	* core = ( RCore * ) data		787085	0					
ANR	787090	IdentifierDeclType	RCore *		787085	0					
ANR	787091	Identifier	core		787085	1					
ANR	787092	AssignmentExpression	* core = ( RCore * ) data		787085	2		=			
ANR	787093	Identifier	core		787085	0					
ANR	787094	CastExpression	( RCore * ) data		787085	1					
ANR	787095	CastTarget	RCore *		787085	0					
ANR	787096	Identifier	data		787085	1					
ANR	787097	IdentifierDeclStatement	const char * tmp = strdup ( input ) ;	1057:1:29867:29899	787085	1	True				
ANR	787098	IdentifierDecl	* tmp = strdup ( input )		787085	0					
ANR	787099	IdentifierDeclType	const char *		787085	0					
ANR	787100	Identifier	tmp		787085	1					
ANR	787101	AssignmentExpression	* tmp = strdup ( input )		787085	2		=			
ANR	787102	Identifier	tmp		787085	0					
ANR	787103	CallExpression	strdup ( input )		787085	1					
ANR	787104	Callee	strdup		787085	0					
ANR	787105	Identifier	strdup		787085	0					
ANR	787106	ArgumentList	input		787085	1					
ANR	787107	Argument	input		787085	0					
ANR	787108	Identifier	input		787085	0					
ANR	787109	IdentifierDeclStatement	"const char * arg1 = strchr ( tmp , ' ' ) ;"	1058:1:29902:29938	787085	2	True				
ANR	787110	IdentifierDecl	"* arg1 = strchr ( tmp , ' ' )"		787085	0					
ANR	787111	IdentifierDeclType	const char *		787085	0					
ANR	787112	Identifier	arg1		787085	1					
ANR	787113	AssignmentExpression	"* arg1 = strchr ( tmp , ' ' )"		787085	2		=			
ANR	787114	Identifier	arg1		787085	0					
ANR	787115	CallExpression	"strchr ( tmp , ' ' )"		787085	1					
ANR	787116	Callee	strchr		787085	0					
ANR	787117	Identifier	strchr		787085	0					
ANR	787118	ArgumentList	tmp		787085	1					
ANR	787119	Argument	tmp		787085	0					
ANR	787120	Identifier	tmp		787085	0					
ANR	787121	Argument	' '		787085	1					
ANR	787122	PrimaryExpression	' '		787085	0					
ANR	787123	IfStatement	if ( ! arg1 )		787085	3					
ANR	787124	Condition	! arg1	1059:5:29945:29949	787085	0	True				
ANR	787125	UnaryOperationExpression	! arg1		787085	0					
ANR	787126	UnaryOperator	!		787085	0					
ANR	787127	Identifier	arg1		787085	1					
ANR	787128	CompoundStatement		5:12:127:127	787085	1					
ANR	787129	GotoStatement	goto beach ;	1060:2:29956:29966	787085	0	True				
ANR	787130	Identifier	beach		787085	0					
ANR	787131	ExpressionStatement	arg1 = r_str_trim_ro ( arg1 )	1062:1:29972:29999	787085	4	True				
ANR	787132	AssignmentExpression	arg1 = r_str_trim_ro ( arg1 )		787085	0		=			
ANR	787133	Identifier	arg1		787085	0					
ANR	787134	CallExpression	r_str_trim_ro ( arg1 )		787085	1					
ANR	787135	Callee	r_str_trim_ro		787085	0					
ANR	787136	Identifier	r_str_trim_ro		787085	0					
ANR	787137	ArgumentList	arg1		787085	1					
ANR	787138	Argument	arg1		787085	0					
ANR	787139	Identifier	arg1		787085	0					
ANR	787140	IdentifierDeclStatement	"char * end = strchr ( arg1 , ' ' ) ;"	1063:1:30002:30032	787085	5	True				
ANR	787141	IdentifierDecl	"* end = strchr ( arg1 , ' ' )"		787085	0					
ANR	787142	IdentifierDeclType	char *		787085	0					
ANR	787143	Identifier	end		787085	1					
ANR	787144	AssignmentExpression	"* end = strchr ( arg1 , ' ' )"		787085	2		=			
ANR	787145	Identifier	end		787085	0					
ANR	787146	CallExpression	"strchr ( arg1 , ' ' )"		787085	1					
ANR	787147	Callee	strchr		787085	0					
ANR	787148	Identifier	strchr		787085	0					
ANR	787149	ArgumentList	arg1		787085	1					
ANR	787150	Argument	arg1		787085	0					
ANR	787151	Identifier	arg1		787085	0					
ANR	787152	Argument	' '		787085	1					
ANR	787153	PrimaryExpression	' '		787085	0					
ANR	787154	IfStatement	if ( ! end )		787085	6					
ANR	787155	Condition	! end	1064:5:30039:30042	787085	0	True				
ANR	787156	UnaryOperationExpression	! end		787085	0					
ANR	787157	UnaryOperator	!		787085	0					
ANR	787158	Identifier	end		787085	1					
ANR	787159	CompoundStatement		10:11:220:220	787085	1					
ANR	787160	GotoStatement	goto beach ;	1065:2:30049:30059	787085	0	True				
ANR	787161	Identifier	beach		787085	0					
ANR	787162	ExpressionStatement	* end = '\\0'	1067:1:30065:30076	787085	7	True				
ANR	787163	AssignmentExpression	* end = '\\0'		787085	0		=			
ANR	787164	UnaryOperationExpression	* end		787085	0					
ANR	787165	UnaryOperator	*		787085	0					
ANR	787166	Identifier	end		787085	1					
ANR	787167	PrimaryExpression	'\\0'		787085	1					
ANR	787168	IdentifierDeclStatement	const char * arg2 = end + 1 ;	1068:1:30079:30103	787085	8	True				
ANR	787169	IdentifierDecl	* arg2 = end + 1		787085	0					
ANR	787170	IdentifierDeclType	const char *		787085	0					
ANR	787171	Identifier	arg2		787085	1					
ANR	787172	AssignmentExpression	* arg2 = end + 1		787085	2		=			
ANR	787173	Identifier	arg2		787085	0					
ANR	787174	AdditiveExpression	end + 1		787085	1		+			
ANR	787175	Identifier	end		787085	0					
ANR	787176	PrimaryExpression	1		787085	1					
ANR	787177	IfStatement	if ( ! arg2 )		787085	9					
ANR	787178	Condition	! arg2	1069:5:30110:30114	787085	0	True				
ANR	787179	UnaryOperationExpression	! arg2		787085	0					
ANR	787180	UnaryOperator	!		787085	0					
ANR	787181	Identifier	arg2		787085	1					
ANR	787182	CompoundStatement		15:12:292:292	787085	1					
ANR	787183	GotoStatement	goto beach ;	1070:2:30121:30131	787085	0	True				
ANR	787184	Identifier	beach		787085	0					
ANR	787185	ExpressionStatement	arg2 = r_str_trim_ro ( arg2 )	1072:1:30137:30164	787085	10	True				
ANR	787186	AssignmentExpression	arg2 = r_str_trim_ro ( arg2 )		787085	0		=			
ANR	787187	Identifier	arg2		787085	0					
ANR	787188	CallExpression	r_str_trim_ro ( arg2 )		787085	1					
ANR	787189	Callee	r_str_trim_ro		787085	0					
ANR	787190	Identifier	r_str_trim_ro		787085	0					
ANR	787191	ArgumentList	arg2		787085	1					
ANR	787192	Argument	arg2		787085	0					
ANR	787193	Identifier	arg2		787085	0					
ANR	787194	SwitchStatement	switch ( * input )		787085	11					
ANR	787195	Condition	* input	1073:9:30175:30180	787085	0	True				
ANR	787196	UnaryOperationExpression	* input		787085	0					
ANR	787197	UnaryOperator	*		787085	0					
ANR	787198	Identifier	input		787085	1					
ANR	787199	CompoundStatement		19:17:358:358	787085	1					
ANR	787200	Label	case '?' :	1074:1:30186:30194	787085	0	True				
ANR	787201	GotoStatement	goto beach ;	1075:2:30209:30219	787085	1	True				
ANR	787202	Identifier	beach		787085	0					
ANR	787203	Label	default :	1076:1:30222:30229	787085	2	True				
ANR	787204	Identifier	default		787085	0					
ANR	787205	IfStatement	if ( ! arg1 )		787085	3					
ANR	787206	Condition	! arg1	1077:6:30247:30251	787085	0	True				
ANR	787207	UnaryOperationExpression	! arg1		787085	0					
ANR	787208	UnaryOperator	!		787085	0					
ANR	787209	Identifier	arg1		787085	1					
ANR	787210	CompoundStatement		23:13:429:429	787085	1					
ANR	787211	ExpressionStatement	"arg1 = """""	1078:3:30259:30268	787085	0	True				
ANR	787212	AssignmentExpression	"arg1 = """""		787085	0		=			
ANR	787213	Identifier	arg1		787085	0					
ANR	787214	PrimaryExpression	""""""		787085	1					
ANR	787215	IfStatement	if ( ! arg2 )		787085	4					
ANR	787216	Condition	! arg2	1080:6:30280:30284	787085	0	True				
ANR	787217	UnaryOperationExpression	! arg2		787085	0					
ANR	787218	UnaryOperator	!		787085	0					
ANR	787219	Identifier	arg2		787085	1					
ANR	787220	CompoundStatement		26:13:462:462	787085	1					
ANR	787221	ExpressionStatement	"arg2 = """""	1081:3:30292:30301	787085	0	True				
ANR	787222	AssignmentExpression	"arg2 = """""		787085	0		=			
ANR	787223	Identifier	arg2		787085	0					
ANR	787224	PrimaryExpression	""""""		787085	1					
ANR	787225	IfStatement	"if ( ! r_fs_check ( core -> fs , arg1 ) && ! r_fs_check ( core -> fs , arg2 ) )"		787085	5					
ANR	787226	Condition	"! r_fs_check ( core -> fs , arg1 ) && ! r_fs_check ( core -> fs , arg2 )"	1083:6:30313:30372	787085	0	True				
ANR	787227	AndExpression	"! r_fs_check ( core -> fs , arg1 ) && ! r_fs_check ( core -> fs , arg2 )"		787085	0		&&			
ANR	787228	UnaryOperationExpression	"! r_fs_check ( core -> fs , arg1 )"		787085	0					
ANR	787229	UnaryOperator	!		787085	0					
ANR	787230	CallExpression	"r_fs_check ( core -> fs , arg1 )"		787085	1					
ANR	787231	Callee	r_fs_check		787085	0					
ANR	787232	Identifier	r_fs_check		787085	0					
ANR	787233	ArgumentList	core -> fs		787085	1					
ANR	787234	Argument	core -> fs		787085	0					
ANR	787235	PtrMemberAccess	core -> fs		787085	0					
ANR	787236	Identifier	core		787085	0					
ANR	787237	Identifier	fs		787085	1					
ANR	787238	Argument	arg1		787085	1					
ANR	787239	Identifier	arg1		787085	0					
ANR	787240	UnaryOperationExpression	"! r_fs_check ( core -> fs , arg2 )"		787085	1					
ANR	787241	UnaryOperator	!		787085	0					
ANR	787242	CallExpression	"r_fs_check ( core -> fs , arg2 )"		787085	1					
ANR	787243	Callee	r_fs_check		787085	0					
ANR	787244	Identifier	r_fs_check		787085	0					
ANR	787245	ArgumentList	core -> fs		787085	1					
ANR	787246	Argument	core -> fs		787085	0					
ANR	787247	PtrMemberAccess	core -> fs		787085	0					
ANR	787248	Identifier	core		787085	0					
ANR	787249	Identifier	fs		787085	1					
ANR	787250	Argument	arg2		787085	1					
ANR	787251	Identifier	arg2		787085	0					
ANR	787252	CompoundStatement		30:3:555:593	787085	1					
ANR	787253	IdentifierDeclStatement	"char * res = r_syscmd_join ( arg1 , arg2 ) ;"	1084:3:30380:30418	787085	0	True				
ANR	787254	IdentifierDecl	"* res = r_syscmd_join ( arg1 , arg2 )"		787085	0					
ANR	787255	IdentifierDeclType	char *		787085	0					
ANR	787256	Identifier	res		787085	1					
ANR	787257	AssignmentExpression	"* res = r_syscmd_join ( arg1 , arg2 )"		787085	2		=			
ANR	787258	Identifier	res		787085	0					
ANR	787259	CallExpression	"r_syscmd_join ( arg1 , arg2 )"		787085	1					
ANR	787260	Callee	r_syscmd_join		787085	0					
ANR	787261	Identifier	r_syscmd_join		787085	0					
ANR	787262	ArgumentList	arg1		787085	1					
ANR	787263	Argument	arg1		787085	0					
ANR	787264	Identifier	arg1		787085	0					
ANR	787265	Argument	arg2		787085	1					
ANR	787266	Identifier	arg2		787085	0					
ANR	787267	IfStatement	if ( res )		787085	1					
ANR	787268	Condition	res	1085:7:30427:30429	787085	0	True				
ANR	787269	Identifier	res		787085	0					
ANR	787270	CompoundStatement		31:12:607:607	787085	1					
ANR	787271	ExpressionStatement	r_cons_print ( res )	1086:4:30438:30456	787085	0	True				
ANR	787272	CallExpression	r_cons_print ( res )		787085	0					
ANR	787273	Callee	r_cons_print		787085	0					
ANR	787274	Identifier	r_cons_print		787085	0					
ANR	787275	ArgumentList	res		787085	1					
ANR	787276	Argument	res		787085	0					
ANR	787277	Identifier	res		787085	0					
ANR	787278	ExpressionStatement	free ( res )	1087:4:30462:30472	787085	1	True				
ANR	787279	CallExpression	free ( res )		787085	0					
ANR	787280	Callee	free		787085	0					
ANR	787281	Identifier	free		787085	0					
ANR	787282	ArgumentList	res		787085	1					
ANR	787283	Argument	res		787085	0					
ANR	787284	Identifier	res		787085	0					
ANR	787285	ExpressionStatement	R_FREE ( tmp )	1089:3:30482:30494	787085	2	True				
ANR	787286	CallExpression	R_FREE ( tmp )		787085	0					
ANR	787287	Callee	R_FREE		787085	0					
ANR	787288	Identifier	R_FREE		787085	0					
ANR	787289	ArgumentList	tmp		787085	1					
ANR	787290	Argument	tmp		787085	0					
ANR	787291	Identifier	tmp		787085	0					
ANR	787292	BreakStatement	break ;	1091:2:30502:30507	787085	6	True				
ANR	787293	ReturnStatement	return 0 ;	1093:1:30513:30521	787085	12	True				
ANR	787294	PrimaryExpression	0		787085	0					
ANR	787295	Label	beach :	1094:0:30523:30528	787085	13	True				
ANR	787296	Identifier	beach		787085	0					
ANR	787297	ExpressionStatement	"eprintf ( ""Usage: join [file1] [file2] # join the contents of the two files\\n"" )"	1095:1:30531:30609	787085	14	True				
ANR	787298	CallExpression	"eprintf ( ""Usage: join [file1] [file2] # join the contents of the two files\\n"" )"		787085	0					
ANR	787299	Callee	eprintf		787085	0					
ANR	787300	Identifier	eprintf		787085	0					
ANR	787301	ArgumentList	"""Usage: join [file1] [file2] # join the contents of the two files\\n"""		787085	1					
ANR	787302	Argument	"""Usage: join [file1] [file2] # join the contents of the two files\\n"""		787085	0					
ANR	787303	PrimaryExpression	"""Usage: join [file1] [file2] # join the contents of the two files\\n"""		787085	0					
ANR	787304	ReturnStatement	return 0 ;	1096:1:30612:30620	787085	15	True				
ANR	787305	PrimaryExpression	0		787085	0					
ANR	787306	ReturnType	static int		787085	1					
ANR	787307	Identifier	cmd_join		787085	2					
ANR	787308	ParameterList	"void * data , const char * input"		787085	3					
ANR	787309	Parameter	void * data	1055:20:29793:29802	787085	0	True				
ANR	787310	ParameterType	void *		787085	0					
ANR	787311	Identifier	data		787085	1					
ANR	787312	Parameter	const char * input	1055:32:29805:29821	787085	1	True				
ANR	787313	ParameterType	const char *		787085	0					
ANR	787314	Identifier	input		787085	1					
ANR	787315	CFGEntryNode	ENTRY		787085		True				
ANR	787316	CFGExitNode	EXIT		787085		True				
ANR	787317	Symbol	res		787085						
ANR	787318	Symbol	data		787085						
ANR	787319	Symbol	* input		787085						
ANR	787320	Symbol	* core		787085						
ANR	787321	Symbol	strchr		787085						
ANR	787322	Symbol	r_syscmd_join		787085						
ANR	787323	Symbol	input		787085						
ANR	787324	Symbol	core		787085						
ANR	787325	Symbol	arg2		787085						
ANR	787326	Symbol	tmp		787085						
ANR	787327	Symbol	arg1		787085						
ANR	787328	Symbol	r_str_trim_ro		787085						
ANR	787329	Symbol	end		787085						
ANR	787330	Symbol	* end		787085						
ANR	787331	Symbol	strdup		787085						
ANR	787332	Symbol	core -> fs		787085						
ANR	787333	Symbol	r_fs_check		787085						
ANR	787334	Function	cmd_stdin	1099:0:30625:30848							
ANR	787335	FunctionDef	"cmd_stdin (void * data , const char * input)"		787334	0					
ANR	787336	CompoundStatement		1099:52:30677:30848	787334	0					
ANR	787337	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1100:1:30680:30707	787334	0	True				
ANR	787338	IdentifierDecl	* core = ( RCore * ) data		787334	0					
ANR	787339	IdentifierDeclType	RCore *		787334	0					
ANR	787340	Identifier	core		787334	1					
ANR	787341	AssignmentExpression	* core = ( RCore * ) data		787334	2		=			
ANR	787342	Identifier	core		787334	0					
ANR	787343	CastExpression	( RCore * ) data		787334	1					
ANR	787344	CastTarget	RCore *		787334	0					
ANR	787345	Identifier	data		787334	1					
ANR	787346	IfStatement	if ( input [ 0 ] == '?' )		787334	1					
ANR	787347	Condition	input [ 0 ] == '?'	1101:5:30714:30728	787334	0	True				
ANR	787348	EqualityExpression	input [ 0 ] == '?'		787334	0		==			
ANR	787349	ArrayIndexing	input [ 0 ]		787334	0					
ANR	787350	Identifier	input		787334	0					
ANR	787351	PrimaryExpression	0		787334	1					
ANR	787352	PrimaryExpression	'?'		787334	1					
ANR	787353	CompoundStatement		3:22:53:53	787334	1					
ANR	787354	ExpressionStatement	"r_cons_printf ( ""Usage: '-' '.-' '. -' do the same\\n"" )"	1102:2:30735:30788	787334	0	True				
ANR	787355	CallExpression	"r_cons_printf ( ""Usage: '-' '.-' '. -' do the same\\n"" )"		787334	0					
ANR	787356	Callee	r_cons_printf		787334	0					
ANR	787357	Identifier	r_cons_printf		787334	0					
ANR	787358	ArgumentList	"""Usage: '-' '.-' '. -' do the same\\n"""		787334	1					
ANR	787359	Argument	"""Usage: '-' '.-' '. -' do the same\\n"""		787334	0					
ANR	787360	PrimaryExpression	"""Usage: '-' '.-' '. -' do the same\\n"""		787334	0					
ANR	787361	ReturnStatement	return false ;	1103:2:30792:30804	787334	1	True				
ANR	787362	Identifier	false		787334	0					
ANR	787363	ReturnStatement	"return r_core_run_script ( core , ""-"" ) ;"	1105:1:30810:30846	787334	2	True				
ANR	787364	CallExpression	"r_core_run_script ( core , ""-"" )"		787334	0					
ANR	787365	Callee	r_core_run_script		787334	0					
ANR	787366	Identifier	r_core_run_script		787334	0					
ANR	787367	ArgumentList	core		787334	1					
ANR	787368	Argument	core		787334	0					
ANR	787369	Identifier	core		787334	0					
ANR	787370	Argument	"""-"""		787334	1					
ANR	787371	PrimaryExpression	"""-"""		787334	0					
ANR	787372	ReturnType	static int		787334	1					
ANR	787373	Identifier	cmd_stdin		787334	2					
ANR	787374	ParameterList	"void * data , const char * input"		787334	3					
ANR	787375	Parameter	void * data	1099:21:30646:30655	787334	0	True				
ANR	787376	ParameterType	void *		787334	0					
ANR	787377	Identifier	data		787334	1					
ANR	787378	Parameter	const char * input	1099:33:30658:30674	787334	1	True				
ANR	787379	ParameterType	const char *		787334	0					
ANR	787380	Identifier	input		787334	1					
ANR	787381	CFGEntryNode	ENTRY		787334		True				
ANR	787382	CFGExitNode	EXIT		787334		True				
ANR	787383	Symbol	input		787334						
ANR	787384	Symbol	core		787334						
ANR	787385	Symbol	data		787334						
ANR	787386	Symbol	* input		787334						
ANR	787387	Symbol	false		787334						
ANR	787388	Symbol	r_core_run_script		787334						
ANR	787389	Function	cmd_interpret	1108:0:30851:33843							
ANR	787390	FunctionDef	"cmd_interpret (void * data , const char * input)"		787389	0					
ANR	787391	CompoundStatement		1108:56:30907:33843	787389	0					
ANR	787392	IdentifierDeclStatement	"char * str , * ptr , * eol , * rbuf , * filter , * inp ;"	1109:1:30910:30953	787389	0	True				
ANR	787393	IdentifierDecl	* str		787389	0					
ANR	787394	IdentifierDeclType	char *		787389	0					
ANR	787395	Identifier	str		787389	1					
ANR	787396	IdentifierDecl	* ptr		787389	1					
ANR	787397	IdentifierDeclType	char *		787389	0					
ANR	787398	Identifier	ptr		787389	1					
ANR	787399	IdentifierDecl	* eol		787389	2					
ANR	787400	IdentifierDeclType	char *		787389	0					
ANR	787401	Identifier	eol		787389	1					
ANR	787402	IdentifierDecl	* rbuf		787389	3					
ANR	787403	IdentifierDeclType	char *		787389	0					
ANR	787404	Identifier	rbuf		787389	1					
ANR	787405	IdentifierDecl	* filter		787389	4					
ANR	787406	IdentifierDeclType	char *		787389	0					
ANR	787407	Identifier	filter		787389	1					
ANR	787408	IdentifierDecl	* inp		787389	5					
ANR	787409	IdentifierDeclType	char *		787389	0					
ANR	787410	Identifier	inp		787389	1					
ANR	787411	IdentifierDeclStatement	"const char * host , * port , * cmd ;"	1110:1:30956:30985	787389	1	True				
ANR	787412	IdentifierDecl	* host		787389	0					
ANR	787413	IdentifierDeclType	const char *		787389	0					
ANR	787414	Identifier	host		787389	1					
ANR	787415	IdentifierDecl	* port		787389	1					
ANR	787416	IdentifierDeclType	const char *		787389	0					
ANR	787417	Identifier	port		787389	1					
ANR	787418	IdentifierDecl	* cmd		787389	2					
ANR	787419	IdentifierDeclType	const char *		787389	0					
ANR	787420	Identifier	cmd		787389	1					
ANR	787421	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1111:1:30988:31015	787389	2	True				
ANR	787422	IdentifierDecl	* core = ( RCore * ) data		787389	0					
ANR	787423	IdentifierDeclType	RCore *		787389	0					
ANR	787424	Identifier	core		787389	1					
ANR	787425	AssignmentExpression	* core = ( RCore * ) data		787389	2		=			
ANR	787426	Identifier	core		787389	0					
ANR	787427	CastExpression	( RCore * ) data		787389	1					
ANR	787428	CastTarget	RCore *		787389	0					
ANR	787429	Identifier	data		787389	1					
ANR	787430	SwitchStatement	switch ( * input )		787389	3					
ANR	787431	Condition	* input	1113:9:31027:31032	787389	0	True				
ANR	787432	UnaryOperationExpression	* input		787389	0					
ANR	787433	UnaryOperator	*		787389	0					
ANR	787434	Identifier	input		787389	1					
ANR	787435	CompoundStatement		104:2:2297:2340	787389	1					
ANR	787436	Label	case '\\0' :	1114:1:31038:31047	787389	0	True				
ANR	787437	ExpressionStatement	"r_core_cmd_repeat ( core , 0 )"	1115:2:31058:31085	787389	1	True				
ANR	787438	CallExpression	"r_core_cmd_repeat ( core , 0 )"		787389	0					
ANR	787439	Callee	r_core_cmd_repeat		787389	0					
ANR	787440	Identifier	r_core_cmd_repeat		787389	0					
ANR	787441	ArgumentList	core		787389	1					
ANR	787442	Argument	core		787389	0					
ANR	787443	Identifier	core		787389	0					
ANR	787444	Argument	0		787389	1					
ANR	787445	PrimaryExpression	0		787389	0					
ANR	787446	BreakStatement	break ;	1116:2:31089:31094	787389	2	True				
ANR	787447	Label	case ':' :	1117:1:31097:31105	787389	3	True				
ANR	787448	IfStatement	"if ( ( ptr = strchr ( input + 1 , ' ' ) ) )"		787389	4					
ANR	787449	Condition	"ptr = strchr ( input + 1 , ' ' )"	1118:6:31121:31151	787389	0	True				
ANR	787450	AssignmentExpression	"ptr = strchr ( input + 1 , ' ' )"		787389	0		=			
ANR	787451	Identifier	ptr		787389	0					
ANR	787452	CallExpression	"strchr ( input + 1 , ' ' )"		787389	1					
ANR	787453	Callee	strchr		787389	0					
ANR	787454	Identifier	strchr		787389	0					
ANR	787455	ArgumentList	input + 1		787389	1					
ANR	787456	Argument	input + 1		787389	0					
ANR	787457	AdditiveExpression	input + 1		787389	0		+			
ANR	787458	Identifier	input		787389	0					
ANR	787459	PrimaryExpression	1		787389	1					
ANR	787460	Argument	' '		787389	1					
ANR	787461	PrimaryExpression	' '		787389	0					
ANR	787462	CompoundStatement		11:39:246:246	787389	1					
ANR	787463	ExpressionStatement	cmd = ptr + 1	1121:3:31204:31217	787389	0	True				
ANR	787464	AssignmentExpression	cmd = ptr + 1		787389	0		=			
ANR	787465	Identifier	cmd		787389	0					
ANR	787466	AdditiveExpression	ptr + 1		787389	1		+			
ANR	787467	Identifier	ptr		787389	0					
ANR	787468	PrimaryExpression	1		787389	1					
ANR	787469	ExpressionStatement	* ptr = 0	1122:3:31222:31230	787389	1	True				
ANR	787470	AssignmentExpression	* ptr = 0		787389	0		=			
ANR	787471	UnaryOperationExpression	* ptr		787389	0					
ANR	787472	UnaryOperator	*		787389	0					
ANR	787473	Identifier	ptr		787389	1					
ANR	787474	PrimaryExpression	0		787389	1					
ANR	787475	ExpressionStatement	"eol = strchr ( input + 1 , ':' )"	1123:3:31235:31264	787389	2	True				
ANR	787476	AssignmentExpression	"eol = strchr ( input + 1 , ':' )"		787389	0		=			
ANR	787477	Identifier	eol		787389	0					
ANR	787478	CallExpression	"strchr ( input + 1 , ':' )"		787389	1					
ANR	787479	Callee	strchr		787389	0					
ANR	787480	Identifier	strchr		787389	0					
ANR	787481	ArgumentList	input + 1		787389	1					
ANR	787482	Argument	input + 1		787389	0					
ANR	787483	AdditiveExpression	input + 1		787389	0		+			
ANR	787484	Identifier	input		787389	0					
ANR	787485	PrimaryExpression	1		787389	1					
ANR	787486	Argument	':'		787389	1					
ANR	787487	PrimaryExpression	':'		787389	0					
ANR	787488	IfStatement	if ( eol )		787389	3					
ANR	787489	Condition	eol	1124:7:31273:31275	787389	0	True				
ANR	787490	Identifier	eol		787389	0					
ANR	787491	CompoundStatement		17:12:370:370	787389	1					
ANR	787492	ExpressionStatement	* eol = 0	1125:4:31284:31292	787389	0	True				
ANR	787493	AssignmentExpression	* eol = 0		787389	0		=			
ANR	787494	UnaryOperationExpression	* eol		787389	0					
ANR	787495	UnaryOperator	*		787389	0					
ANR	787496	Identifier	eol		787389	1					
ANR	787497	PrimaryExpression	0		787389	1					
ANR	787498	ExpressionStatement	host = input + 1	1126:4:31298:31314	787389	1	True				
ANR	787499	AssignmentExpression	host = input + 1		787389	0		=			
ANR	787500	Identifier	host		787389	0					
ANR	787501	AdditiveExpression	input + 1		787389	1		+			
ANR	787502	Identifier	input		787389	0					
ANR	787503	PrimaryExpression	1		787389	1					
ANR	787504	ExpressionStatement	port = eol + 1	1127:4:31320:31334	787389	2	True				
ANR	787505	AssignmentExpression	port = eol + 1		787389	0		=			
ANR	787506	Identifier	port		787389	0					
ANR	787507	AdditiveExpression	eol + 1		787389	1		+			
ANR	787508	Identifier	eol		787389	0					
ANR	787509	PrimaryExpression	1		787389	1					
ANR	787510	ElseStatement	else		787389	0					
ANR	787511	CompoundStatement		21:10:438:438	787389	0					
ANR	787512	ExpressionStatement	"host = ""localhost"""	1129:4:31352:31370	787389	0	True				
ANR	787513	AssignmentExpression	"host = ""localhost"""		787389	0		=			
ANR	787514	Identifier	host		787389	0					
ANR	787515	PrimaryExpression	"""localhost"""		787389	1					
ANR	787516	ExpressionStatement	port = input + ( ( input [ 1 ] == ':' ) ? 2 : 1 )	1130:4:31376:31416	787389	1	True				
ANR	787517	AssignmentExpression	port = input + ( ( input [ 1 ] == ':' ) ? 2 : 1 )		787389	0		=			
ANR	787518	Identifier	port		787389	0					
ANR	787519	AdditiveExpression	input + ( ( input [ 1 ] == ':' ) ? 2 : 1 )		787389	1		+			
ANR	787520	Identifier	input		787389	0					
ANR	787521	ConditionalExpression	( input [ 1 ] == ':' ) ? 2 : 1		787389	1					
ANR	787522	Condition	input [ 1 ] == ':'		787389	0					
ANR	787523	EqualityExpression	input [ 1 ] == ':'		787389	0		==			
ANR	787524	ArrayIndexing	input [ 1 ]		787389	0					
ANR	787525	Identifier	input		787389	0					
ANR	787526	PrimaryExpression	1		787389	1					
ANR	787527	PrimaryExpression	':'		787389	1					
ANR	787528	PrimaryExpression	2		787389	1					
ANR	787529	PrimaryExpression	1		787389	2					
ANR	787530	ExpressionStatement	"rbuf = r_core_rtr_cmds_query ( core , host , port , cmd )"	1132:3:31426:31478	787389	4	True				
ANR	787531	AssignmentExpression	"rbuf = r_core_rtr_cmds_query ( core , host , port , cmd )"		787389	0		=			
ANR	787532	Identifier	rbuf		787389	0					
ANR	787533	CallExpression	"r_core_rtr_cmds_query ( core , host , port , cmd )"		787389	1					
ANR	787534	Callee	r_core_rtr_cmds_query		787389	0					
ANR	787535	Identifier	r_core_rtr_cmds_query		787389	0					
ANR	787536	ArgumentList	core		787389	1					
ANR	787537	Argument	core		787389	0					
ANR	787538	Identifier	core		787389	0					
ANR	787539	Argument	host		787389	1					
ANR	787540	Identifier	host		787389	0					
ANR	787541	Argument	port		787389	2					
ANR	787542	Identifier	port		787389	0					
ANR	787543	Argument	cmd		787389	3					
ANR	787544	Identifier	cmd		787389	0					
ANR	787545	IfStatement	if ( rbuf )		787389	5					
ANR	787546	Condition	rbuf	1133:7:31487:31490	787389	0	True				
ANR	787547	Identifier	rbuf		787389	0					
ANR	787548	CompoundStatement		26:13:585:585	787389	1					
ANR	787549	ExpressionStatement	r_cons_print ( rbuf )	1134:4:31499:31518	787389	0	True				
ANR	787550	CallExpression	r_cons_print ( rbuf )		787389	0					
ANR	787551	Callee	r_cons_print		787389	0					
ANR	787552	Identifier	r_cons_print		787389	0					
ANR	787553	ArgumentList	rbuf		787389	1					
ANR	787554	Argument	rbuf		787389	0					
ANR	787555	Identifier	rbuf		787389	0					
ANR	787556	ExpressionStatement	free ( rbuf )	1135:4:31524:31535	787389	1	True				
ANR	787557	CallExpression	free ( rbuf )		787389	0					
ANR	787558	Callee	free		787389	0					
ANR	787559	Identifier	free		787389	0					
ANR	787560	ArgumentList	rbuf		787389	1					
ANR	787561	Argument	rbuf		787389	0					
ANR	787562	Identifier	rbuf		787389	0					
ANR	787563	ElseStatement	else		787389	0					
ANR	787564	CompoundStatement		30:9:643:643	787389	0					
ANR	787565	ExpressionStatement	"r_core_rtr_cmds ( core , input + 1 )"	1138:3:31556:31589	787389	0	True				
ANR	787566	CallExpression	"r_core_rtr_cmds ( core , input + 1 )"		787389	0					
ANR	787567	Callee	r_core_rtr_cmds		787389	0					
ANR	787568	Identifier	r_core_rtr_cmds		787389	0					
ANR	787569	ArgumentList	core		787389	1					
ANR	787570	Argument	core		787389	0					
ANR	787571	Identifier	core		787389	0					
ANR	787572	Argument	input + 1		787389	1					
ANR	787573	AdditiveExpression	input + 1		787389	0		+			
ANR	787574	Identifier	input		787389	0					
ANR	787575	PrimaryExpression	1		787389	1					
ANR	787576	BreakStatement	break ;	1140:2:31597:31602	787389	5	True				
ANR	787577	Label	case '.' :	1141:1:31605:31613	787389	6	True				
ANR	787578	IfStatement	if ( input [ 1 ] == '.' )		787389	7					
ANR	787579	Condition	input [ 1 ] == '.'	1142:6:31640:31654	787389	0	True				
ANR	787580	EqualityExpression	input [ 1 ] == '.'		787389	0		==			
ANR	787581	ArrayIndexing	input [ 1 ]		787389	0					
ANR	787582	Identifier	input		787389	0					
ANR	787583	PrimaryExpression	1		787389	1					
ANR	787584	PrimaryExpression	'.'		787389	1					
ANR	787585	CompoundStatement		35:23:749:749	787389	1					
ANR	787586	ExpressionStatement	"r_core_cmd_repeat ( core , 1 )"	1144:3:31741:31768	787389	0	True				
ANR	787587	CallExpression	"r_core_cmd_repeat ( core , 1 )"		787389	0					
ANR	787588	Callee	r_core_cmd_repeat		787389	0					
ANR	787589	Identifier	r_core_cmd_repeat		787389	0					
ANR	787590	ArgumentList	core		787389	1					
ANR	787591	Argument	core		787389	0					
ANR	787592	Identifier	core		787389	0					
ANR	787593	Argument	1		787389	1					
ANR	787594	PrimaryExpression	1		787389	0					
ANR	787595	ElseStatement	else		787389	0					
ANR	787596	IfStatement	if ( input [ 1 ] )		787389	0					
ANR	787597	Condition	input [ 1 ]	1145:13:31783:31790	787389	0	True				
ANR	787598	ArrayIndexing	input [ 1 ]		787389	0					
ANR	787599	Identifier	input		787389	0					
ANR	787600	PrimaryExpression	1		787389	1					
ANR	787601	CompoundStatement		39:3:890:951	787389	1					
ANR	787602	IdentifierDeclStatement	"char * str = r_core_cmd_str_pipe ( core , r_str_trim_ro ( input ) ) ;"	1146:3:31798:31859	787389	0	True				
ANR	787603	IdentifierDecl	"* str = r_core_cmd_str_pipe ( core , r_str_trim_ro ( input ) )"		787389	0					
ANR	787604	IdentifierDeclType	char *		787389	0					
ANR	787605	Identifier	str		787389	1					
ANR	787606	AssignmentExpression	"* str = r_core_cmd_str_pipe ( core , r_str_trim_ro ( input ) )"		787389	2		=			
ANR	787607	Identifier	str		787389	0					
ANR	787608	CallExpression	"r_core_cmd_str_pipe ( core , r_str_trim_ro ( input ) )"		787389	1					
ANR	787609	Callee	r_core_cmd_str_pipe		787389	0					
ANR	787610	Identifier	r_core_cmd_str_pipe		787389	0					
ANR	787611	ArgumentList	core		787389	1					
ANR	787612	Argument	core		787389	0					
ANR	787613	Identifier	core		787389	0					
ANR	787614	Argument	r_str_trim_ro ( input )		787389	1					
ANR	787615	CallExpression	r_str_trim_ro ( input )		787389	0					
ANR	787616	Callee	r_str_trim_ro		787389	0					
ANR	787617	Identifier	r_str_trim_ro		787389	0					
ANR	787618	ArgumentList	input		787389	1					
ANR	787619	Argument	input		787389	0					
ANR	787620	Identifier	input		787389	0					
ANR	787621	IfStatement	if ( str )		787389	1					
ANR	787622	Condition	str	1147:7:31868:31870	787389	0	True				
ANR	787623	Identifier	str		787389	0					
ANR	787624	CompoundStatement		40:12:965:965	787389	1					
ANR	787625	ExpressionStatement	"r_core_cmd ( core , str , 0 )"	1148:4:31879:31904	787389	0	True				
ANR	787626	CallExpression	"r_core_cmd ( core , str , 0 )"		787389	0					
ANR	787627	Callee	r_core_cmd		787389	0					
ANR	787628	Identifier	r_core_cmd		787389	0					
ANR	787629	ArgumentList	core		787389	1					
ANR	787630	Argument	core		787389	0					
ANR	787631	Identifier	core		787389	0					
ANR	787632	Argument	str		787389	1					
ANR	787633	Identifier	str		787389	0					
ANR	787634	Argument	0		787389	2					
ANR	787635	PrimaryExpression	0		787389	0					
ANR	787636	ExpressionStatement	free ( str )	1149:4:31910:31920	787389	1	True				
ANR	787637	CallExpression	free ( str )		787389	0					
ANR	787638	Callee	free		787389	0					
ANR	787639	Identifier	free		787389	0					
ANR	787640	ArgumentList	str		787389	1					
ANR	787641	Argument	str		787389	0					
ANR	787642	Identifier	str		787389	0					
ANR	787643	ElseStatement	else		787389	0					
ANR	787644	CompoundStatement		44:9:1028:1028	787389	0					
ANR	787645	ExpressionStatement	"eprintf ( ""Usage: .. ([file])\\n"" )"	1152:3:31941:31973	787389	0	True				
ANR	787646	CallExpression	"eprintf ( ""Usage: .. ([file])\\n"" )"		787389	0					
ANR	787647	Callee	eprintf		787389	0					
ANR	787648	Identifier	eprintf		787389	0					
ANR	787649	ArgumentList	"""Usage: .. ([file])\\n"""		787389	1					
ANR	787650	Argument	"""Usage: .. ([file])\\n"""		787389	0					
ANR	787651	PrimaryExpression	"""Usage: .. ([file])\\n"""		787389	0					
ANR	787652	BreakStatement	break ;	1154:2:31981:31986	787389	8	True				
ANR	787653	Label	case '*' :	1155:1:31989:31997	787389	9	True				
ANR	787654	CompoundStatement		52:3:1177:1203	787389	10					
ANR	787655	IdentifierDeclStatement	const char * a = r_str_trim_ro ( input + 1 ) ;	1157:3:32014:32055	787389	0	True				
ANR	787656	IdentifierDecl	* a = r_str_trim_ro ( input + 1 )		787389	0					
ANR	787657	IdentifierDeclType	const char *		787389	0					
ANR	787658	Identifier	a		787389	1					
ANR	787659	AssignmentExpression	* a = r_str_trim_ro ( input + 1 )		787389	2		=			
ANR	787660	Identifier	a		787389	0					
ANR	787661	CallExpression	r_str_trim_ro ( input + 1 )		787389	1					
ANR	787662	Callee	r_str_trim_ro		787389	0					
ANR	787663	Identifier	r_str_trim_ro		787389	0					
ANR	787664	ArgumentList	input + 1		787389	1					
ANR	787665	Argument	input + 1		787389	0					
ANR	787666	AdditiveExpression	input + 1		787389	0		+			
ANR	787667	Identifier	input		787389	0					
ANR	787668	PrimaryExpression	1		787389	1					
ANR	787669	IdentifierDeclStatement	char * s = strdup ( a ) ;	1158:3:32060:32080	787389	1	True				
ANR	787670	IdentifierDecl	* s = strdup ( a )		787389	0					
ANR	787671	IdentifierDeclType	char *		787389	0					
ANR	787672	Identifier	s		787389	1					
ANR	787673	AssignmentExpression	* s = strdup ( a )		787389	2		=			
ANR	787674	Identifier	s		787389	0					
ANR	787675	CallExpression	strdup ( a )		787389	1					
ANR	787676	Callee	strdup		787389	0					
ANR	787677	Identifier	strdup		787389	0					
ANR	787678	ArgumentList	a		787389	1					
ANR	787679	Argument	a		787389	0					
ANR	787680	Identifier	a		787389	0					
ANR	787681	IdentifierDeclStatement	"char * sp = strchr ( s , ' ' ) ;"	1159:3:32085:32111	787389	2	True				
ANR	787682	IdentifierDecl	"* sp = strchr ( s , ' ' )"		787389	0					
ANR	787683	IdentifierDeclType	char *		787389	0					
ANR	787684	Identifier	sp		787389	1					
ANR	787685	AssignmentExpression	"* sp = strchr ( s , ' ' )"		787389	2		=			
ANR	787686	Identifier	sp		787389	0					
ANR	787687	CallExpression	"strchr ( s , ' ' )"		787389	1					
ANR	787688	Callee	strchr		787389	0					
ANR	787689	Identifier	strchr		787389	0					
ANR	787690	ArgumentList	s		787389	1					
ANR	787691	Argument	s		787389	0					
ANR	787692	Identifier	s		787389	0					
ANR	787693	Argument	' '		787389	1					
ANR	787694	PrimaryExpression	' '		787389	0					
ANR	787695	IfStatement	if ( sp )		787389	3					
ANR	787696	Condition	sp	1160:7:32120:32121	787389	0	True				
ANR	787697	Identifier	sp		787389	0					
ANR	787698	CompoundStatement		53:11:1216:1216	787389	1					
ANR	787699	ExpressionStatement	* sp = 0	1161:4:32130:32137	787389	0	True				
ANR	787700	AssignmentExpression	* sp = 0		787389	0		=			
ANR	787701	UnaryOperationExpression	* sp		787389	0					
ANR	787702	UnaryOperator	*		787389	0					
ANR	787703	Identifier	sp		787389	1					
ANR	787704	PrimaryExpression	0		787389	1					
ANR	787705	IfStatement	if ( R_STR_ISNOTEMPTY ( s ) )		787389	4					
ANR	787706	Condition	R_STR_ISNOTEMPTY ( s )	1163:7:32151:32170	787389	0	True				
ANR	787707	CallExpression	R_STR_ISNOTEMPTY ( s )		787389	0					
ANR	787708	Callee	R_STR_ISNOTEMPTY		787389	0					
ANR	787709	Identifier	R_STR_ISNOTEMPTY		787389	0					
ANR	787710	ArgumentList	s		787389	1					
ANR	787711	Argument	s		787389	0					
ANR	787712	Identifier	s		787389	0					
ANR	787713	CompoundStatement		56:29:1265:1265	787389	1					
ANR	787714	ExpressionStatement	"r_core_run_script ( core , s )"	1164:4:32179:32206	787389	0	True				
ANR	787715	CallExpression	"r_core_run_script ( core , s )"		787389	0					
ANR	787716	Callee	r_core_run_script		787389	0					
ANR	787717	Identifier	r_core_run_script		787389	0					
ANR	787718	ArgumentList	core		787389	1					
ANR	787719	Argument	core		787389	0					
ANR	787720	Identifier	core		787389	0					
ANR	787721	Argument	s		787389	1					
ANR	787722	Identifier	s		787389	0					
ANR	787723	ExpressionStatement	free ( s )	1166:3:32216:32224	787389	5	True				
ANR	787724	CallExpression	free ( s )		787389	0					
ANR	787725	Callee	free		787389	0					
ANR	787726	Identifier	free		787389	0					
ANR	787727	ArgumentList	s		787389	1					
ANR	787728	Argument	s		787389	0					
ANR	787729	Identifier	s		787389	0					
ANR	787730	BreakStatement	break ;	1168:2:32232:32237	787389	11	True				
ANR	787731	Label	case '-' :	1169:1:32240:32248	787389	12	True				
ANR	787732	IfStatement	if ( input [ 1 ] == '?' )		787389	13					
ANR	787733	Condition	input [ 1 ] == '?'	1170:6:32264:32278	787389	0	True				
ANR	787734	EqualityExpression	input [ 1 ] == '?'		787389	0		==			
ANR	787735	ArrayIndexing	input [ 1 ]		787389	0					
ANR	787736	Identifier	input		787389	0					
ANR	787737	PrimaryExpression	1		787389	1					
ANR	787738	PrimaryExpression	'?'		787389	1					
ANR	787739	CompoundStatement		63:23:1373:1373	787389	1					
ANR	787740	ExpressionStatement	"r_cons_printf ( ""Usage: '-' '.-' '. -' do the same\\n"" )"	1171:3:32286:32339	787389	0	True				
ANR	787741	CallExpression	"r_cons_printf ( ""Usage: '-' '.-' '. -' do the same\\n"" )"		787389	0					
ANR	787742	Callee	r_cons_printf		787389	0					
ANR	787743	Identifier	r_cons_printf		787389	0					
ANR	787744	ArgumentList	"""Usage: '-' '.-' '. -' do the same\\n"""		787389	1					
ANR	787745	Argument	"""Usage: '-' '.-' '. -' do the same\\n"""		787389	0					
ANR	787746	PrimaryExpression	"""Usage: '-' '.-' '. -' do the same\\n"""		787389	0					
ANR	787747	ElseStatement	else		787389	0					
ANR	787748	CompoundStatement		65:9:1442:1442	787389	0					
ANR	787749	ExpressionStatement	"r_core_run_script ( core , ""-"" )"	1173:3:32355:32384	787389	0	True				
ANR	787750	CallExpression	"r_core_run_script ( core , ""-"" )"		787389	0					
ANR	787751	Callee	r_core_run_script		787389	0					
ANR	787752	Identifier	r_core_run_script		787389	0					
ANR	787753	ArgumentList	core		787389	1					
ANR	787754	Argument	core		787389	0					
ANR	787755	Identifier	core		787389	0					
ANR	787756	Argument	"""-"""		787389	1					
ANR	787757	PrimaryExpression	"""-"""		787389	0					
ANR	787758	BreakStatement	break ;	1175:2:32392:32397	787389	14	True				
ANR	787759	Label	case ' ' :	1176:1:32400:32408	787389	15	True				
ANR	787760	CompoundStatement		71:3:1517:1568	787389	16					
ANR	787761	IdentifierDeclStatement	const char * script_file = r_str_trim_ro ( input + 1 ) ;	1178:3:32425:32476	787389	0	True				
ANR	787762	IdentifierDecl	* script_file = r_str_trim_ro ( input + 1 )		787389	0					
ANR	787763	IdentifierDeclType	const char *		787389	0					
ANR	787764	Identifier	script_file		787389	1					
ANR	787765	AssignmentExpression	* script_file = r_str_trim_ro ( input + 1 )		787389	2		=			
ANR	787766	Identifier	script_file		787389	0					
ANR	787767	CallExpression	r_str_trim_ro ( input + 1 )		787389	1					
ANR	787768	Callee	r_str_trim_ro		787389	0					
ANR	787769	Identifier	r_str_trim_ro		787389	0					
ANR	787770	ArgumentList	input + 1		787389	1					
ANR	787771	Argument	input + 1		787389	0					
ANR	787772	AdditiveExpression	input + 1		787389	0		+			
ANR	787773	Identifier	input		787389	0					
ANR	787774	PrimaryExpression	1		787389	1					
ANR	787775	IfStatement	if ( * script_file == '$' )		787389	1					
ANR	787776	Condition	* script_file == '$'	1179:7:32485:32503	787389	0	True				
ANR	787777	EqualityExpression	* script_file == '$'		787389	0		==			
ANR	787778	UnaryOperationExpression	* script_file		787389	0					
ANR	787779	UnaryOperator	*		787389	0					
ANR	787780	Identifier	script_file		787389	1					
ANR	787781	PrimaryExpression	'$'		787389	1					
ANR	787782	CompoundStatement		72:28:1598:1598	787389	1					
ANR	787783	ExpressionStatement	"r_core_cmd0 ( core , script_file )"	1180:4:32512:32543	787389	0	True				
ANR	787784	CallExpression	"r_core_cmd0 ( core , script_file )"		787389	0					
ANR	787785	Callee	r_core_cmd0		787389	0					
ANR	787786	Identifier	r_core_cmd0		787389	0					
ANR	787787	ArgumentList	core		787389	1					
ANR	787788	Argument	core		787389	0					
ANR	787789	Identifier	core		787389	0					
ANR	787790	Argument	script_file		787389	1					
ANR	787791	Identifier	script_file		787389	0					
ANR	787792	ElseStatement	else		787389	0					
ANR	787793	CompoundStatement		74:10:1647:1647	787389	0					
ANR	787794	IfStatement	"if ( ! r_core_run_script ( core , script_file ) )"		787389	0					
ANR	787795	Condition	"! r_core_run_script ( core , script_file )"	1182:8:32565:32602	787389	0	True				
ANR	787796	UnaryOperationExpression	"! r_core_run_script ( core , script_file )"		787389	0					
ANR	787797	UnaryOperator	!		787389	0					
ANR	787798	CallExpression	"r_core_run_script ( core , script_file )"		787389	1					
ANR	787799	Callee	r_core_run_script		787389	0					
ANR	787800	Identifier	r_core_run_script		787389	0					
ANR	787801	ArgumentList	core		787389	1					
ANR	787802	Argument	core		787389	0					
ANR	787803	Identifier	core		787389	0					
ANR	787804	Argument	script_file		787389	1					
ANR	787805	Identifier	script_file		787389	0					
ANR	787806	CompoundStatement		75:48:1697:1697	787389	1					
ANR	787807	ExpressionStatement	"eprintf ( ""Cannot find script '%s'\\n"" , script_file )"	1183:5:32612:32662	787389	0	True				
ANR	787808	CallExpression	"eprintf ( ""Cannot find script '%s'\\n"" , script_file )"		787389	0					
ANR	787809	Callee	eprintf		787389	0					
ANR	787810	Identifier	eprintf		787389	0					
ANR	787811	ArgumentList	"""Cannot find script '%s'\\n"""		787389	1					
ANR	787812	Argument	"""Cannot find script '%s'\\n"""		787389	0					
ANR	787813	PrimaryExpression	"""Cannot find script '%s'\\n"""		787389	0					
ANR	787814	Argument	script_file		787389	1					
ANR	787815	Identifier	script_file		787389	0					
ANR	787816	ExpressionStatement	core -> num -> value = 1	1184:5:32669:32689	787389	1	True				
ANR	787817	AssignmentExpression	core -> num -> value = 1		787389	0		=			
ANR	787818	PtrMemberAccess	core -> num -> value		787389	0					
ANR	787819	PtrMemberAccess	core -> num		787389	0					
ANR	787820	Identifier	core		787389	0					
ANR	787821	Identifier	num		787389	1					
ANR	787822	Identifier	value		787389	1					
ANR	787823	PrimaryExpression	1		787389	1					
ANR	787824	ElseStatement	else		787389	0					
ANR	787825	CompoundStatement		78:11:1794:1794	787389	0					
ANR	787826	ExpressionStatement	core -> num -> value = 0	1186:5:32709:32729	787389	0	True				
ANR	787827	AssignmentExpression	core -> num -> value = 0		787389	0		=			
ANR	787828	PtrMemberAccess	core -> num -> value		787389	0					
ANR	787829	PtrMemberAccess	core -> num		787389	0					
ANR	787830	Identifier	core		787389	0					
ANR	787831	Identifier	num		787389	1					
ANR	787832	Identifier	value		787389	1					
ANR	787833	PrimaryExpression	0		787389	1					
ANR	787834	BreakStatement	break ;	1190:2:32748:32753	787389	17	True				
ANR	787835	Label	case '!' :	1191:1:32756:32764	787389	18	True				
ANR	787836	ExpressionStatement	"r_core_cmd_command ( core , input + 1 )"	1193:2:32797:32833	787389	19	True				
ANR	787837	CallExpression	"r_core_cmd_command ( core , input + 1 )"		787389	0					
ANR	787838	Callee	r_core_cmd_command		787389	0					
ANR	787839	Identifier	r_core_cmd_command		787389	0					
ANR	787840	ArgumentList	core		787389	1					
ANR	787841	Argument	core		787389	0					
ANR	787842	Identifier	core		787389	0					
ANR	787843	Argument	input + 1		787389	1					
ANR	787844	AdditiveExpression	input + 1		787389	0		+			
ANR	787845	Identifier	input		787389	0					
ANR	787846	PrimaryExpression	1		787389	1					
ANR	787847	BreakStatement	break ;	1194:2:32837:32842	787389	20	True				
ANR	787848	Label	case '(' :	1195:1:32845:32853	787389	21	True				
ANR	787849	ExpressionStatement	"r_cmd_macro_call ( & core -> rcmd -> macro , input + 1 )"	1196:2:32865:32913	787389	22	True				
ANR	787850	CallExpression	"r_cmd_macro_call ( & core -> rcmd -> macro , input + 1 )"		787389	0					
ANR	787851	Callee	r_cmd_macro_call		787389	0					
ANR	787852	Identifier	r_cmd_macro_call		787389	0					
ANR	787853	ArgumentList	& core -> rcmd -> macro		787389	1					
ANR	787854	Argument	& core -> rcmd -> macro		787389	0					
ANR	787855	UnaryOperationExpression	& core -> rcmd -> macro		787389	0					
ANR	787856	UnaryOperator	&		787389	0					
ANR	787857	PtrMemberAccess	core -> rcmd -> macro		787389	1					
ANR	787858	PtrMemberAccess	core -> rcmd		787389	0					
ANR	787859	Identifier	core		787389	0					
ANR	787860	Identifier	rcmd		787389	1					
ANR	787861	Identifier	macro		787389	1					
ANR	787862	Argument	input + 1		787389	1					
ANR	787863	AdditiveExpression	input + 1		787389	0		+			
ANR	787864	Identifier	input		787389	0					
ANR	787865	PrimaryExpression	1		787389	1					
ANR	787866	BreakStatement	break ;	1197:2:32917:32922	787389	23	True				
ANR	787867	Label	case '?' :	1198:1:32925:32933	787389	24	True				
ANR	787868	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dot )"	1199:2:32945:32981	787389	25	True				
ANR	787869	CallExpression	"r_core_cmd_help ( core , help_msg_dot )"		787389	0					
ANR	787870	Callee	r_core_cmd_help		787389	0					
ANR	787871	Identifier	r_core_cmd_help		787389	0					
ANR	787872	ArgumentList	core		787389	1					
ANR	787873	Argument	core		787389	0					
ANR	787874	Identifier	core		787389	0					
ANR	787875	Argument	help_msg_dot		787389	1					
ANR	787876	Identifier	help_msg_dot		787389	0					
ANR	787877	BreakStatement	break ;	1200:2:32985:32990	787389	26	True				
ANR	787878	Label	default :	1201:1:32993:33000	787389	27	True				
ANR	787879	Identifier	default		787389	0					
ANR	787880	IfStatement	if ( * input >= 0 && * input <= 9 )		787389	28					
ANR	787881	Condition	* input >= 0 && * input <= 9	1202:6:33008:33033	787389	0	True				
ANR	787882	AndExpression	* input >= 0 && * input <= 9		787389	0		&&			
ANR	787883	RelationalExpression	* input >= 0		787389	0		>=			
ANR	787884	UnaryOperationExpression	* input		787389	0					
ANR	787885	UnaryOperator	*		787389	0					
ANR	787886	Identifier	input		787389	1					
ANR	787887	PrimaryExpression	0		787389	1					
ANR	787888	RelationalExpression	* input <= 9		787389	1		<=			
ANR	787889	UnaryOperationExpression	* input		787389	0					
ANR	787890	UnaryOperator	*		787389	0					
ANR	787891	Identifier	input		787389	1					
ANR	787892	PrimaryExpression	9		787389	1					
ANR	787893	CompoundStatement		95:34:2128:2128	787389	1					
ANR	787894	ExpressionStatement	"eprintf ( ""|ERROR| No .[0..9] to avoid infinite loops\\n"" )"	1203:3:33041:33097	787389	0	True				
ANR	787895	CallExpression	"eprintf ( ""|ERROR| No .[0..9] to avoid infinite loops\\n"" )"		787389	0					
ANR	787896	Callee	eprintf		787389	0					
ANR	787897	Identifier	eprintf		787389	0					
ANR	787898	ArgumentList	"""|ERROR| No .[0..9] to avoid infinite loops\\n"""		787389	1					
ANR	787899	Argument	"""|ERROR| No .[0..9] to avoid infinite loops\\n"""		787389	0					
ANR	787900	PrimaryExpression	"""|ERROR| No .[0..9] to avoid infinite loops\\n"""		787389	0					
ANR	787901	BreakStatement	break ;	1204:3:33102:33107	787389	1	True				
ANR	787902	ExpressionStatement	inp = strdup ( input )	1206:2:33115:33135	787389	29	True				
ANR	787903	AssignmentExpression	inp = strdup ( input )		787389	0		=			
ANR	787904	Identifier	inp		787389	0					
ANR	787905	CallExpression	strdup ( input )		787389	1					
ANR	787906	Callee	strdup		787389	0					
ANR	787907	Identifier	strdup		787389	0					
ANR	787908	ArgumentList	input		787389	1					
ANR	787909	Argument	input		787389	0					
ANR	787910	Identifier	input		787389	0					
ANR	787911	ExpressionStatement	"filter = strchr ( inp , '~' )"	1207:2:33139:33165	787389	30	True				
ANR	787912	AssignmentExpression	"filter = strchr ( inp , '~' )"		787389	0		=			
ANR	787913	Identifier	filter		787389	0					
ANR	787914	CallExpression	"strchr ( inp , '~' )"		787389	1					
ANR	787915	Callee	strchr		787389	0					
ANR	787916	Identifier	strchr		787389	0					
ANR	787917	ArgumentList	inp		787389	1					
ANR	787918	Argument	inp		787389	0					
ANR	787919	Identifier	inp		787389	0					
ANR	787920	Argument	'~'		787389	1					
ANR	787921	PrimaryExpression	'~'		787389	0					
ANR	787922	IfStatement	if ( filter )		787389	31					
ANR	787923	Condition	filter	1208:6:33173:33178	787389	0	True				
ANR	787924	Identifier	filter		787389	0					
ANR	787925	CompoundStatement		101:14:2273:2273	787389	1					
ANR	787926	ExpressionStatement	* filter = 0	1209:3:33186:33197	787389	0	True				
ANR	787927	AssignmentExpression	* filter = 0		787389	0		=			
ANR	787928	UnaryOperationExpression	* filter		787389	0					
ANR	787929	UnaryOperator	*		787389	0					
ANR	787930	Identifier	filter		787389	1					
ANR	787931	PrimaryExpression	0		787389	1					
ANR	787932	IdentifierDeclStatement	int tmp_html = r_cons_singleton ( ) -> is_html ;	1211:2:33205:33248	787389	32	True				
ANR	787933	IdentifierDecl	tmp_html = r_cons_singleton ( ) -> is_html		787389	0					
ANR	787934	IdentifierDeclType	int		787389	0					
ANR	787935	Identifier	tmp_html		787389	1					
ANR	787936	AssignmentExpression	tmp_html = r_cons_singleton ( ) -> is_html		787389	2		=			
ANR	787937	Identifier	tmp_html		787389	0					
ANR	787938	PtrMemberAccess	r_cons_singleton ( ) -> is_html		787389	1					
ANR	787939	CallExpression	r_cons_singleton ( )		787389	0					
ANR	787940	Callee	r_cons_singleton		787389	0					
ANR	787941	Identifier	r_cons_singleton		787389	0					
ANR	787942	ArgumentList			787389	1					
ANR	787943	Identifier	is_html		787389	1					
ANR	787944	ExpressionStatement	r_cons_singleton ( ) -> is_html = 0	1212:2:33252:33284	787389	33	True				
ANR	787945	AssignmentExpression	r_cons_singleton ( ) -> is_html = 0		787389	0		=			
ANR	787946	PtrMemberAccess	r_cons_singleton ( ) -> is_html		787389	0					
ANR	787947	CallExpression	r_cons_singleton ( )		787389	0					
ANR	787948	Callee	r_cons_singleton		787389	0					
ANR	787949	Identifier	r_cons_singleton		787389	0					
ANR	787950	ArgumentList			787389	1					
ANR	787951	Identifier	is_html		787389	1					
ANR	787952	PrimaryExpression	0		787389	1					
ANR	787953	ExpressionStatement	"ptr = str = r_core_cmd_str ( core , inp )"	1213:2:33288:33326	787389	34	True				
ANR	787954	AssignmentExpression	"ptr = str = r_core_cmd_str ( core , inp )"		787389	0		=			
ANR	787955	Identifier	ptr		787389	0					
ANR	787956	AssignmentExpression	"str = r_core_cmd_str ( core , inp )"		787389	1		=			
ANR	787957	Identifier	str		787389	0					
ANR	787958	CallExpression	"r_core_cmd_str ( core , inp )"		787389	1					
ANR	787959	Callee	r_core_cmd_str		787389	0					
ANR	787960	Identifier	r_core_cmd_str		787389	0					
ANR	787961	ArgumentList	core		787389	1					
ANR	787962	Argument	core		787389	0					
ANR	787963	Identifier	core		787389	0					
ANR	787964	Argument	inp		787389	1					
ANR	787965	Identifier	inp		787389	0					
ANR	787966	ExpressionStatement	r_cons_singleton ( ) -> is_html = tmp_html	1214:2:33330:33369	787389	35	True				
ANR	787967	AssignmentExpression	r_cons_singleton ( ) -> is_html = tmp_html		787389	0		=			
ANR	787968	PtrMemberAccess	r_cons_singleton ( ) -> is_html		787389	0					
ANR	787969	CallExpression	r_cons_singleton ( )		787389	0					
ANR	787970	Callee	r_cons_singleton		787389	0					
ANR	787971	Identifier	r_cons_singleton		787389	0					
ANR	787972	ArgumentList			787389	1					
ANR	787973	Identifier	is_html		787389	1					
ANR	787974	Identifier	tmp_html		787389	1					
ANR	787975	IfStatement	if ( filter )		787389	36					
ANR	787976	Condition	filter	1216:6:33378:33383	787389	0	True				
ANR	787977	Identifier	filter		787389	0					
ANR	787978	CompoundStatement		109:14:2478:2478	787389	1					
ANR	787979	ExpressionStatement	* filter = '~'	1217:3:33391:33404	787389	0	True				
ANR	787980	AssignmentExpression	* filter = '~'		787389	0		=			
ANR	787981	UnaryOperationExpression	* filter		787389	0					
ANR	787982	UnaryOperator	*		787389	0					
ANR	787983	Identifier	filter		787389	1					
ANR	787984	PrimaryExpression	'~'		787389	1					
ANR	787985	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	1219:2:33412:33442	787389	37	True				
ANR	787986	CallExpression	"r_cons_break_push ( NULL , NULL )"		787389	0					
ANR	787987	Callee	r_cons_break_push		787389	0					
ANR	787988	Identifier	r_cons_break_push		787389	0					
ANR	787989	ArgumentList	NULL		787389	1					
ANR	787990	Argument	NULL		787389	0					
ANR	787991	Identifier	NULL		787389	0					
ANR	787992	Argument	NULL		787389	1					
ANR	787993	Identifier	NULL		787389	0					
ANR	787994	IfStatement	if ( ptr )		787389	38					
ANR	787995	Condition	ptr	1220:6:33450:33452	787389	0	True				
ANR	787996	Identifier	ptr		787389	0					
ANR	787997	CompoundStatement		113:11:2547:2547	787389	1					
ANR	787998	ForStatement	for ( ; ; )		787389	0					
ANR	787999	CompoundStatement		114:12:2561:2561	787389	0					
ANR	788000	IfStatement	if ( r_cons_is_breaked ( ) )		787389	0					
ANR	788001	Condition	r_cons_is_breaked ( )	1222:8:33479:33498	787389	0	True				
ANR	788002	CallExpression	r_cons_is_breaked ( )		787389	0					
ANR	788003	Callee	r_cons_is_breaked		787389	0					
ANR	788004	Identifier	r_cons_is_breaked		787389	0					
ANR	788005	ArgumentList			787389	1					
ANR	788006	CompoundStatement		115:30:2593:2593	787389	1					
ANR	788007	BreakStatement	break ;	1223:5:33508:33513	787389	0	True				
ANR	788008	ExpressionStatement	"eol = strchr ( ptr , '\\n' )"	1225:4:33525:33549	787389	1	True				
ANR	788009	AssignmentExpression	"eol = strchr ( ptr , '\\n' )"		787389	0		=			
ANR	788010	Identifier	eol		787389	0					
ANR	788011	CallExpression	"strchr ( ptr , '\\n' )"		787389	1					
ANR	788012	Callee	strchr		787389	0					
ANR	788013	Identifier	strchr		787389	0					
ANR	788014	ArgumentList	ptr		787389	1					
ANR	788015	Argument	ptr		787389	0					
ANR	788016	Identifier	ptr		787389	0					
ANR	788017	Argument	'\\n'		787389	1					
ANR	788018	PrimaryExpression	'\\n'		787389	0					
ANR	788019	IfStatement	if ( eol )		787389	2					
ANR	788020	Condition	eol	1226:8:33559:33561	787389	0	True				
ANR	788021	Identifier	eol		787389	0					
ANR	788022	CompoundStatement		119:13:2656:2656	787389	1					
ANR	788023	ExpressionStatement	* eol = '\\0'	1227:5:33571:33582	787389	0	True				
ANR	788024	AssignmentExpression	* eol = '\\0'		787389	0		=			
ANR	788025	UnaryOperationExpression	* eol		787389	0					
ANR	788026	UnaryOperator	*		787389	0					
ANR	788027	Identifier	eol		787389	1					
ANR	788028	PrimaryExpression	'\\0'		787389	1					
ANR	788029	IfStatement	if ( * ptr )		787389	3					
ANR	788030	Condition	* ptr	1229:8:33598:33601	787389	0	True				
ANR	788031	UnaryOperationExpression	* ptr		787389	0					
ANR	788032	UnaryOperator	*		787389	0					
ANR	788033	Identifier	ptr		787389	1					
ANR	788034	CompoundStatement		123:5:2703:2748	787389	1					
ANR	788035	IdentifierDeclStatement	"char * p = r_str_append ( strdup ( ptr ) , filter ) ;"	1230:5:33611:33656	787389	0	True				
ANR	788036	IdentifierDecl	"* p = r_str_append ( strdup ( ptr ) , filter )"		787389	0					
ANR	788037	IdentifierDeclType	char *		787389	0					
ANR	788038	Identifier	p		787389	1					
ANR	788039	AssignmentExpression	"* p = r_str_append ( strdup ( ptr ) , filter )"		787389	2		=			
ANR	788040	Identifier	p		787389	0					
ANR	788041	CallExpression	"r_str_append ( strdup ( ptr ) , filter )"		787389	1					
ANR	788042	Callee	r_str_append		787389	0					
ANR	788043	Identifier	r_str_append		787389	0					
ANR	788044	ArgumentList	strdup ( ptr )		787389	1					
ANR	788045	Argument	strdup ( ptr )		787389	0					
ANR	788046	CallExpression	strdup ( ptr )		787389	0					
ANR	788047	Callee	strdup		787389	0					
ANR	788048	Identifier	strdup		787389	0					
ANR	788049	ArgumentList	ptr		787389	1					
ANR	788050	Argument	ptr		787389	0					
ANR	788051	Identifier	ptr		787389	0					
ANR	788052	Argument	filter		787389	1					
ANR	788053	Identifier	filter		787389	0					
ANR	788054	ExpressionStatement	"r_core_cmd0 ( core , p )"	1231:5:33663:33684	787389	1	True				
ANR	788055	CallExpression	"r_core_cmd0 ( core , p )"		787389	0					
ANR	788056	Callee	r_core_cmd0		787389	0					
ANR	788057	Identifier	r_core_cmd0		787389	0					
ANR	788058	ArgumentList	core		787389	1					
ANR	788059	Argument	core		787389	0					
ANR	788060	Identifier	core		787389	0					
ANR	788061	Argument	p		787389	1					
ANR	788062	Identifier	p		787389	0					
ANR	788063	ExpressionStatement	free ( p )	1232:5:33691:33699	787389	2	True				
ANR	788064	CallExpression	free ( p )		787389	0					
ANR	788065	Callee	free		787389	0					
ANR	788066	Identifier	free		787389	0					
ANR	788067	ArgumentList	p		787389	1					
ANR	788068	Argument	p		787389	0					
ANR	788069	Identifier	p		787389	0					
ANR	788070	IfStatement	if ( ! eol )		787389	4					
ANR	788071	Condition	! eol	1234:8:33715:33718	787389	0	True				
ANR	788072	UnaryOperationExpression	! eol		787389	0					
ANR	788073	UnaryOperator	!		787389	0					
ANR	788074	Identifier	eol		787389	1					
ANR	788075	CompoundStatement		127:14:2813:2813	787389	1					
ANR	788076	BreakStatement	break ;	1235:5:33728:33733	787389	0	True				
ANR	788077	ExpressionStatement	ptr = eol + 1	1237:4:33745:33758	787389	5	True				
ANR	788078	AssignmentExpression	ptr = eol + 1		787389	0		=			
ANR	788079	Identifier	ptr		787389	0					
ANR	788080	AdditiveExpression	eol + 1		787389	1		+			
ANR	788081	Identifier	eol		787389	0					
ANR	788082	PrimaryExpression	1		787389	1					
ANR	788083	ExpressionStatement	r_cons_break_pop ( )	1240:2:33771:33790	787389	39	True				
ANR	788084	CallExpression	r_cons_break_pop ( )		787389	0					
ANR	788085	Callee	r_cons_break_pop		787389	0					
ANR	788086	Identifier	r_cons_break_pop		787389	0					
ANR	788087	ArgumentList			787389	1					
ANR	788088	ExpressionStatement	free ( str )	1241:2:33794:33804	787389	40	True				
ANR	788089	CallExpression	free ( str )		787389	0					
ANR	788090	Callee	free		787389	0					
ANR	788091	Identifier	free		787389	0					
ANR	788092	ArgumentList	str		787389	1					
ANR	788093	Argument	str		787389	0					
ANR	788094	Identifier	str		787389	0					
ANR	788095	ExpressionStatement	free ( inp )	1242:2:33808:33818	787389	41	True				
ANR	788096	CallExpression	free ( inp )		787389	0					
ANR	788097	Callee	free		787389	0					
ANR	788098	Identifier	free		787389	0					
ANR	788099	ArgumentList	inp		787389	1					
ANR	788100	Argument	inp		787389	0					
ANR	788101	Identifier	inp		787389	0					
ANR	788102	BreakStatement	break ;	1243:2:33822:33827	787389	42	True				
ANR	788103	ReturnStatement	return 0 ;	1245:1:33833:33841	787389	4	True				
ANR	788104	PrimaryExpression	0		787389	0					
ANR	788105	ReturnType	static int		787389	1					
ANR	788106	Identifier	cmd_interpret		787389	2					
ANR	788107	ParameterList	"void * data , const char * input"		787389	3					
ANR	788108	Parameter	void * data	1108:25:30876:30885	787389	0	True				
ANR	788109	ParameterType	void *		787389	0					
ANR	788110	Identifier	data		787389	1					
ANR	788111	Parameter	const char * input	1108:37:30888:30904	787389	1	True				
ANR	788112	ParameterType	const char *		787389	0					
ANR	788113	Identifier	input		787389	1					
ANR	788114	CFGEntryNode	ENTRY		787389		True				
ANR	788115	CFGExitNode	EXIT		787389		True				
ANR	788116	InfiniteForNode	true		787389		True				
ANR	788117	Symbol	* sp		787389						
ANR	788118	Symbol	r_str_append		787389						
ANR	788119	Symbol	eol		787389						
ANR	788120	Symbol	r_core_cmd_str		787389						
ANR	788121	Symbol	data		787389						
ANR	788122	Symbol	r_core_rtr_cmds_query		787389						
ANR	788123	Symbol	* input		787389						
ANR	788124	Symbol	* core		787389						
ANR	788125	Symbol	strchr		787389						
ANR	788126	Symbol	core -> num -> value		787389						
ANR	788127	Symbol	tmp_html		787389						
ANR	788128	Symbol	r_cons_is_breaked		787389						
ANR	788129	Symbol	* eol		787389						
ANR	788130	Symbol	r_core_cmd_str_pipe		787389						
ANR	788131	Symbol	host		787389						
ANR	788132	Symbol	* ptr		787389						
ANR	788133	Symbol	r_cons_singleton		787389						
ANR	788134	Symbol	* core -> num		787389						
ANR	788135	Symbol	core -> num		787389						
ANR	788136	Symbol	sp		787389						
ANR	788137	Symbol	R_STR_ISNOTEMPTY		787389						
ANR	788138	Symbol	* * core		787389						
ANR	788139	Symbol	a		787389						
ANR	788140	Symbol	NULL		787389						
ANR	788141	Symbol	core -> rcmd		787389						
ANR	788142	Symbol	inp		787389						
ANR	788143	Symbol	r_cons_singleton ( ) -> is_html		787389						
ANR	788144	Symbol	ptr		787389						
ANR	788145	Symbol	* filter		787389						
ANR	788146	Symbol	str		787389						
ANR	788147	Symbol	filter		787389						
ANR	788148	Symbol	p		787389						
ANR	788149	Symbol	input		787389						
ANR	788150	Symbol	core		787389						
ANR	788151	Symbol	s		787389						
ANR	788152	Symbol	help_msg_dot		787389						
ANR	788153	Symbol	rbuf		787389						
ANR	788154	Symbol	port		787389						
ANR	788155	Symbol	& core -> rcmd -> macro		787389						
ANR	788156	Symbol	r_str_trim_ro		787389						
ANR	788157	Symbol	* script_file		787389						
ANR	788158	Symbol	r_core_run_script		787389						
ANR	788159	Symbol	cmd		787389						
ANR	788160	Symbol	strdup		787389						
ANR	788161	Symbol	script_file		787389						
ANR	788162	Symbol	* r_cons_singleton		787389						
ANR	788163	Function	callback_foreach_kv	1248:0:33846:33966							
ANR	788164	FunctionDef	"callback_foreach_kv (void * user , const char * k , const char * v)"		788163	0					
ANR	788165	CompoundStatement		1248:73:33919:33966	788163	0					
ANR	788166	ExpressionStatement	"r_cons_printf ( ""%s=%s\\n"" , k , v )"	1249:1:33922:33953	788163	0	True				
ANR	788167	CallExpression	"r_cons_printf ( ""%s=%s\\n"" , k , v )"		788163	0					
ANR	788168	Callee	r_cons_printf		788163	0					
ANR	788169	Identifier	r_cons_printf		788163	0					
ANR	788170	ArgumentList	"""%s=%s\\n"""		788163	1					
ANR	788171	Argument	"""%s=%s\\n"""		788163	0					
ANR	788172	PrimaryExpression	"""%s=%s\\n"""		788163	0					
ANR	788173	Argument	k		788163	1					
ANR	788174	Identifier	k		788163	0					
ANR	788175	Argument	v		788163	2					
ANR	788176	Identifier	v		788163	0					
ANR	788177	ReturnStatement	return 1 ;	1250:1:33956:33964	788163	1	True				
ANR	788178	PrimaryExpression	1		788163	0					
ANR	788179	ReturnType	static int		788163	1					
ANR	788180	Identifier	callback_foreach_kv		788163	2					
ANR	788181	ParameterList	"void * user , const char * k , const char * v"		788163	3					
ANR	788182	Parameter	void * user	1248:31:33877:33886	788163	0	True				
ANR	788183	ParameterType	void *		788163	0					
ANR	788184	Identifier	user		788163	1					
ANR	788185	Parameter	const char * k	1248:43:33889:33901	788163	1	True				
ANR	788186	ParameterType	const char *		788163	0					
ANR	788187	Identifier	k		788163	1					
ANR	788188	Parameter	const char * v	1248:58:33904:33916	788163	2	True				
ANR	788189	ParameterType	const char *		788163	0					
ANR	788190	Identifier	v		788163	1					
ANR	788191	CFGEntryNode	ENTRY		788163		True				
ANR	788192	CFGExitNode	EXIT		788163		True				
ANR	788193	Symbol	v		788163						
ANR	788194	Symbol	k		788163						
ANR	788195	Symbol	user		788163						
ANR	788196	Function	r_line_hist_sdb_up	1253:0:33969:34323							
ANR	788197	FunctionDef	r_line_hist_sdb_up (RLine * line)		788196	0					
ANR	788198	CompoundStatement		1253:42:34011:34323	788196	0					
ANR	788199	IfStatement	if ( ! line -> sdbshell_hist_iter || ! line -> sdbshell_hist_iter -> n )		788196	0					
ANR	788200	Condition	! line -> sdbshell_hist_iter || ! line -> sdbshell_hist_iter -> n	1254:5:34018:34074	788196	0	True				
ANR	788201	OrExpression	! line -> sdbshell_hist_iter || ! line -> sdbshell_hist_iter -> n		788196	0		||			
ANR	788202	UnaryOperationExpression	! line -> sdbshell_hist_iter		788196	0					
ANR	788203	UnaryOperator	!		788196	0					
ANR	788204	PtrMemberAccess	line -> sdbshell_hist_iter		788196	1					
ANR	788205	Identifier	line		788196	0					
ANR	788206	Identifier	sdbshell_hist_iter		788196	1					
ANR	788207	UnaryOperationExpression	! line -> sdbshell_hist_iter -> n		788196	1					
ANR	788208	UnaryOperator	!		788196	0					
ANR	788209	PtrMemberAccess	line -> sdbshell_hist_iter -> n		788196	1					
ANR	788210	PtrMemberAccess	line -> sdbshell_hist_iter		788196	0					
ANR	788211	Identifier	line		788196	0					
ANR	788212	Identifier	sdbshell_hist_iter		788196	1					
ANR	788213	Identifier	n		788196	1					
ANR	788214	CompoundStatement		2:64:65:65	788196	1					
ANR	788215	ReturnStatement	return false ;	1255:2:34081:34093	788196	0	True				
ANR	788216	Identifier	false		788196	0					
ANR	788217	ExpressionStatement	line -> sdbshell_hist_iter = line -> sdbshell_hist_iter -> n	1257:1:34099:34153	788196	1	True				
ANR	788218	AssignmentExpression	line -> sdbshell_hist_iter = line -> sdbshell_hist_iter -> n		788196	0		=			
ANR	788219	PtrMemberAccess	line -> sdbshell_hist_iter		788196	0					
ANR	788220	Identifier	line		788196	0					
ANR	788221	Identifier	sdbshell_hist_iter		788196	1					
ANR	788222	PtrMemberAccess	line -> sdbshell_hist_iter -> n		788196	1					
ANR	788223	PtrMemberAccess	line -> sdbshell_hist_iter		788196	0					
ANR	788224	Identifier	line		788196	0					
ANR	788225	Identifier	sdbshell_hist_iter		788196	1					
ANR	788226	Identifier	n		788196	1					
ANR	788227	ExpressionStatement	"strncpy ( line -> buffer . data , line -> sdbshell_hist_iter -> data , R_LINE_BUFSIZE - 1 )"	1258:1:34156:34235	788196	2	True				
ANR	788228	CallExpression	"strncpy ( line -> buffer . data , line -> sdbshell_hist_iter -> data , R_LINE_BUFSIZE - 1 )"		788196	0					
ANR	788229	Callee	strncpy		788196	0					
ANR	788230	Identifier	strncpy		788196	0					
ANR	788231	ArgumentList	line -> buffer . data		788196	1					
ANR	788232	Argument	line -> buffer . data		788196	0					
ANR	788233	MemberAccess	line -> buffer . data		788196	0					
ANR	788234	PtrMemberAccess	line -> buffer		788196	0					
ANR	788235	Identifier	line		788196	0					
ANR	788236	Identifier	buffer		788196	1					
ANR	788237	Identifier	data		788196	1					
ANR	788238	Argument	line -> sdbshell_hist_iter -> data		788196	1					
ANR	788239	PtrMemberAccess	line -> sdbshell_hist_iter -> data		788196	0					
ANR	788240	PtrMemberAccess	line -> sdbshell_hist_iter		788196	0					
ANR	788241	Identifier	line		788196	0					
ANR	788242	Identifier	sdbshell_hist_iter		788196	1					
ANR	788243	Identifier	data		788196	1					
ANR	788244	Argument	R_LINE_BUFSIZE - 1		788196	2					
ANR	788245	AdditiveExpression	R_LINE_BUFSIZE - 1		788196	0		-			
ANR	788246	Identifier	R_LINE_BUFSIZE		788196	0					
ANR	788247	PrimaryExpression	1		788196	1					
ANR	788248	ExpressionStatement	line -> buffer . index = line -> buffer . length = strlen ( line -> buffer . data )	1259:1:34238:34307	788196	3	True				
ANR	788249	AssignmentExpression	line -> buffer . index = line -> buffer . length = strlen ( line -> buffer . data )		788196	0		=			
ANR	788250	MemberAccess	line -> buffer . index		788196	0					
ANR	788251	PtrMemberAccess	line -> buffer		788196	0					
ANR	788252	Identifier	line		788196	0					
ANR	788253	Identifier	buffer		788196	1					
ANR	788254	Identifier	index		788196	1					
ANR	788255	AssignmentExpression	line -> buffer . length = strlen ( line -> buffer . data )		788196	1		=			
ANR	788256	MemberAccess	line -> buffer . length		788196	0					
ANR	788257	PtrMemberAccess	line -> buffer		788196	0					
ANR	788258	Identifier	line		788196	0					
ANR	788259	Identifier	buffer		788196	1					
ANR	788260	Identifier	length		788196	1					
ANR	788261	CallExpression	strlen ( line -> buffer . data )		788196	1					
ANR	788262	Callee	strlen		788196	0					
ANR	788263	Identifier	strlen		788196	0					
ANR	788264	ArgumentList	line -> buffer . data		788196	1					
ANR	788265	Argument	line -> buffer . data		788196	0					
ANR	788266	MemberAccess	line -> buffer . data		788196	0					
ANR	788267	PtrMemberAccess	line -> buffer		788196	0					
ANR	788268	Identifier	line		788196	0					
ANR	788269	Identifier	buffer		788196	1					
ANR	788270	Identifier	data		788196	1					
ANR	788271	ReturnStatement	return true ;	1260:1:34310:34321	788196	4	True				
ANR	788272	Identifier	true		788196	0					
ANR	788273	ReturnType	R_API int		788196	1					
ANR	788274	Identifier	r_line_hist_sdb_up		788196	2					
ANR	788275	ParameterList	RLine * line		788196	3					
ANR	788276	Parameter	RLine * line	1253:29:33998:34008	788196	0	True				
ANR	788277	ParameterType	RLine *		788196	0					
ANR	788278	Identifier	line		788196	1					
ANR	788279	CFGEntryNode	ENTRY		788196		True				
ANR	788280	CFGExitNode	EXIT		788196		True				
ANR	788281	Symbol	line -> buffer . index		788196						
ANR	788282	Symbol	line		788196						
ANR	788283	Symbol	line -> sdbshell_hist_iter -> n		788196						
ANR	788284	Symbol	false		788196						
ANR	788285	Symbol	* line		788196						
ANR	788286	Symbol	line -> sdbshell_hist_iter -> data		788196						
ANR	788287	Symbol	strlen		788196						
ANR	788288	Symbol	line -> sdbshell_hist_iter		788196						
ANR	788289	Symbol	* line -> sdbshell_hist_iter		788196						
ANR	788290	Symbol	true		788196						
ANR	788291	Symbol	* * line		788196						
ANR	788292	Symbol	line -> buffer . data		788196						
ANR	788293	Symbol	line -> buffer		788196						
ANR	788294	Symbol	R_LINE_BUFSIZE		788196						
ANR	788295	Symbol	line -> buffer . length		788196						
ANR	788296	Function	r_line_hist_sdb_down	1263:0:34326:34682							
ANR	788297	FunctionDef	r_line_hist_sdb_down (RLine * line)		788296	0					
ANR	788298	CompoundStatement		1263:44:34370:34682	788296	0					
ANR	788299	IfStatement	if ( ! line -> sdbshell_hist_iter || ! line -> sdbshell_hist_iter -> p )		788296	0					
ANR	788300	Condition	! line -> sdbshell_hist_iter || ! line -> sdbshell_hist_iter -> p	1264:5:34377:34433	788296	0	True				
ANR	788301	OrExpression	! line -> sdbshell_hist_iter || ! line -> sdbshell_hist_iter -> p		788296	0		||			
ANR	788302	UnaryOperationExpression	! line -> sdbshell_hist_iter		788296	0					
ANR	788303	UnaryOperator	!		788296	0					
ANR	788304	PtrMemberAccess	line -> sdbshell_hist_iter		788296	1					
ANR	788305	Identifier	line		788296	0					
ANR	788306	Identifier	sdbshell_hist_iter		788296	1					
ANR	788307	UnaryOperationExpression	! line -> sdbshell_hist_iter -> p		788296	1					
ANR	788308	UnaryOperator	!		788296	0					
ANR	788309	PtrMemberAccess	line -> sdbshell_hist_iter -> p		788296	1					
ANR	788310	PtrMemberAccess	line -> sdbshell_hist_iter		788296	0					
ANR	788311	Identifier	line		788296	0					
ANR	788312	Identifier	sdbshell_hist_iter		788296	1					
ANR	788313	Identifier	p		788296	1					
ANR	788314	CompoundStatement		2:64:65:65	788296	1					
ANR	788315	ReturnStatement	return false ;	1265:2:34440:34452	788296	0	True				
ANR	788316	Identifier	false		788296	0					
ANR	788317	ExpressionStatement	line -> sdbshell_hist_iter = line -> sdbshell_hist_iter -> p	1267:1:34458:34512	788296	1	True				
ANR	788318	AssignmentExpression	line -> sdbshell_hist_iter = line -> sdbshell_hist_iter -> p		788296	0		=			
ANR	788319	PtrMemberAccess	line -> sdbshell_hist_iter		788296	0					
ANR	788320	Identifier	line		788296	0					
ANR	788321	Identifier	sdbshell_hist_iter		788296	1					
ANR	788322	PtrMemberAccess	line -> sdbshell_hist_iter -> p		788296	1					
ANR	788323	PtrMemberAccess	line -> sdbshell_hist_iter		788296	0					
ANR	788324	Identifier	line		788296	0					
ANR	788325	Identifier	sdbshell_hist_iter		788296	1					
ANR	788326	Identifier	p		788296	1					
ANR	788327	ExpressionStatement	"strncpy ( line -> buffer . data , line -> sdbshell_hist_iter -> data , R_LINE_BUFSIZE - 1 )"	1268:1:34515:34594	788296	2	True				
ANR	788328	CallExpression	"strncpy ( line -> buffer . data , line -> sdbshell_hist_iter -> data , R_LINE_BUFSIZE - 1 )"		788296	0					
ANR	788329	Callee	strncpy		788296	0					
ANR	788330	Identifier	strncpy		788296	0					
ANR	788331	ArgumentList	line -> buffer . data		788296	1					
ANR	788332	Argument	line -> buffer . data		788296	0					
ANR	788333	MemberAccess	line -> buffer . data		788296	0					
ANR	788334	PtrMemberAccess	line -> buffer		788296	0					
ANR	788335	Identifier	line		788296	0					
ANR	788336	Identifier	buffer		788296	1					
ANR	788337	Identifier	data		788296	1					
ANR	788338	Argument	line -> sdbshell_hist_iter -> data		788296	1					
ANR	788339	PtrMemberAccess	line -> sdbshell_hist_iter -> data		788296	0					
ANR	788340	PtrMemberAccess	line -> sdbshell_hist_iter		788296	0					
ANR	788341	Identifier	line		788296	0					
ANR	788342	Identifier	sdbshell_hist_iter		788296	1					
ANR	788343	Identifier	data		788296	1					
ANR	788344	Argument	R_LINE_BUFSIZE - 1		788296	2					
ANR	788345	AdditiveExpression	R_LINE_BUFSIZE - 1		788296	0		-			
ANR	788346	Identifier	R_LINE_BUFSIZE		788296	0					
ANR	788347	PrimaryExpression	1		788296	1					
ANR	788348	ExpressionStatement	line -> buffer . index = line -> buffer . length = strlen ( line -> buffer . data )	1269:1:34597:34666	788296	3	True				
ANR	788349	AssignmentExpression	line -> buffer . index = line -> buffer . length = strlen ( line -> buffer . data )		788296	0		=			
ANR	788350	MemberAccess	line -> buffer . index		788296	0					
ANR	788351	PtrMemberAccess	line -> buffer		788296	0					
ANR	788352	Identifier	line		788296	0					
ANR	788353	Identifier	buffer		788296	1					
ANR	788354	Identifier	index		788296	1					
ANR	788355	AssignmentExpression	line -> buffer . length = strlen ( line -> buffer . data )		788296	1		=			
ANR	788356	MemberAccess	line -> buffer . length		788296	0					
ANR	788357	PtrMemberAccess	line -> buffer		788296	0					
ANR	788358	Identifier	line		788296	0					
ANR	788359	Identifier	buffer		788296	1					
ANR	788360	Identifier	length		788296	1					
ANR	788361	CallExpression	strlen ( line -> buffer . data )		788296	1					
ANR	788362	Callee	strlen		788296	0					
ANR	788363	Identifier	strlen		788296	0					
ANR	788364	ArgumentList	line -> buffer . data		788296	1					
ANR	788365	Argument	line -> buffer . data		788296	0					
ANR	788366	MemberAccess	line -> buffer . data		788296	0					
ANR	788367	PtrMemberAccess	line -> buffer		788296	0					
ANR	788368	Identifier	line		788296	0					
ANR	788369	Identifier	buffer		788296	1					
ANR	788370	Identifier	data		788296	1					
ANR	788371	ReturnStatement	return true ;	1270:1:34669:34680	788296	4	True				
ANR	788372	Identifier	true		788296	0					
ANR	788373	ReturnType	R_API int		788296	1					
ANR	788374	Identifier	r_line_hist_sdb_down		788296	2					
ANR	788375	ParameterList	RLine * line		788296	3					
ANR	788376	Parameter	RLine * line	1263:31:34357:34367	788296	0	True				
ANR	788377	ParameterType	RLine *		788296	0					
ANR	788378	Identifier	line		788296	1					
ANR	788379	CFGEntryNode	ENTRY		788296		True				
ANR	788380	CFGExitNode	EXIT		788296		True				
ANR	788381	Symbol	line -> buffer . index		788296						
ANR	788382	Symbol	line		788296						
ANR	788383	Symbol	line -> sdbshell_hist_iter -> p		788296						
ANR	788384	Symbol	false		788296						
ANR	788385	Symbol	* line		788296						
ANR	788386	Symbol	line -> sdbshell_hist_iter -> data		788296						
ANR	788387	Symbol	strlen		788296						
ANR	788388	Symbol	line -> sdbshell_hist_iter		788296						
ANR	788389	Symbol	* line -> sdbshell_hist_iter		788296						
ANR	788390	Symbol	true		788296						
ANR	788391	Symbol	* * line		788296						
ANR	788392	Symbol	line -> buffer . data		788296						
ANR	788393	Symbol	line -> buffer		788296						
ANR	788394	Symbol	R_LINE_BUFSIZE		788296						
ANR	788395	Symbol	line -> buffer . length		788296						
ANR	788396	Function	cmd_kuery	1273:0:34685:39499							
ANR	788397	FunctionDef	"cmd_kuery (void * data , const char * input)"		788396	0					
ANR	788398	CompoundStatement		1273:52:34737:39499	788396	0					
ANR	788399	IdentifierDeclStatement	"char buf [ 1024 ] , * out ;"	1274:1:34740:34760	788396	0	True				
ANR	788400	IdentifierDecl	buf [ 1024 ]		788396	0					
ANR	788401	IdentifierDeclType	char [ 1024 ]		788396	0					
ANR	788402	Identifier	buf		788396	1					
ANR	788403	PrimaryExpression	1024		788396	2					
ANR	788404	IdentifierDecl	* out		788396	1					
ANR	788405	IdentifierDeclType	char *		788396	0					
ANR	788406	Identifier	out		788396	1					
ANR	788407	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1275:1:34763:34789	788396	1	True				
ANR	788408	IdentifierDecl	* core = ( RCore * ) data		788396	0					
ANR	788409	IdentifierDeclType	RCore *		788396	0					
ANR	788410	Identifier	core		788396	1					
ANR	788411	AssignmentExpression	* core = ( RCore * ) data		788396	2		=			
ANR	788412	Identifier	core		788396	0					
ANR	788413	CastExpression	( RCore * ) data		788396	1					
ANR	788414	CastTarget	RCore *		788396	0					
ANR	788415	Identifier	data		788396	1					
ANR	788416	IdentifierDeclStatement	"const char * sp , * p = ""[sdb]> "" ;"	1276:1:34792:34822	788396	2	True				
ANR	788417	IdentifierDecl	* sp		788396	0					
ANR	788418	IdentifierDeclType	const char *		788396	0					
ANR	788419	Identifier	sp		788396	1					
ANR	788420	IdentifierDecl	"* p = ""[sdb]> """		788396	1					
ANR	788421	IdentifierDeclType	const char *		788396	0					
ANR	788422	Identifier	p		788396	1					
ANR	788423	AssignmentExpression	"* p = ""[sdb]> """		788396	2		=			
ANR	788424	Identifier	p		788396	0					
ANR	788425	PrimaryExpression	"""[sdb]> """		788396	1					
ANR	788426	IdentifierDeclStatement	const int buflen = sizeof ( buf ) - 1 ;	1277:1:34825:34860	788396	3	True				
ANR	788427	IdentifierDecl	buflen = sizeof ( buf ) - 1		788396	0					
ANR	788428	IdentifierDeclType	const int		788396	0					
ANR	788429	Identifier	buflen		788396	1					
ANR	788430	AssignmentExpression	buflen = sizeof ( buf ) - 1		788396	2		=			
ANR	788431	Identifier	buflen		788396	0					
ANR	788432	AdditiveExpression	sizeof ( buf ) - 1		788396	1		-			
ANR	788433	SizeofExpression	sizeof ( buf )		788396	0					
ANR	788434	Sizeof	sizeof		788396	0					
ANR	788435	SizeofOperand	buf		788396	1					
ANR	788436	PrimaryExpression	1		788396	1					
ANR	788437	IdentifierDeclStatement	Sdb * s = core -> sdb ;	1278:1:34863:34881	788396	4	True				
ANR	788438	IdentifierDecl	* s = core -> sdb		788396	0					
ANR	788439	IdentifierDeclType	Sdb *		788396	0					
ANR	788440	Identifier	s		788396	1					
ANR	788441	AssignmentExpression	* s = core -> sdb		788396	2		=			
ANR	788442	Identifier	s		788396	0					
ANR	788443	PtrMemberAccess	core -> sdb		788396	1					
ANR	788444	Identifier	core		788396	0					
ANR	788445	Identifier	sdb		788396	1					
ANR	788446	IdentifierDeclStatement	"char * cur_pos , * cur_cmd , * next_cmd = NULL ;"	1280:1:34886:34927	788396	5	True				
ANR	788447	IdentifierDecl	* cur_pos		788396	0					
ANR	788448	IdentifierDeclType	char *		788396	0					
ANR	788449	Identifier	cur_pos		788396	1					
ANR	788450	IdentifierDecl	* cur_cmd		788396	1					
ANR	788451	IdentifierDeclType	char *		788396	0					
ANR	788452	Identifier	cur_cmd		788396	1					
ANR	788453	IdentifierDecl	* next_cmd = NULL		788396	2					
ANR	788454	IdentifierDeclType	char *		788396	0					
ANR	788455	Identifier	next_cmd		788396	1					
ANR	788456	AssignmentExpression	* next_cmd = NULL		788396	2		=			
ANR	788457	Identifier	NULL		788396	0					
ANR	788458	Identifier	NULL		788396	1					
ANR	788459	IdentifierDeclStatement	"char * temp_pos , * temp_cmd , * temp_storage = NULL ;"	1281:1:34930:34977	788396	6	True				
ANR	788460	IdentifierDecl	* temp_pos		788396	0					
ANR	788461	IdentifierDeclType	char *		788396	0					
ANR	788462	Identifier	temp_pos		788396	1					
ANR	788463	IdentifierDecl	* temp_cmd		788396	1					
ANR	788464	IdentifierDeclType	char *		788396	0					
ANR	788465	Identifier	temp_cmd		788396	1					
ANR	788466	IdentifierDecl	* temp_storage = NULL		788396	2					
ANR	788467	IdentifierDeclType	char *		788396	0					
ANR	788468	Identifier	temp_storage		788396	1					
ANR	788469	AssignmentExpression	* temp_storage = NULL		788396	2		=			
ANR	788470	Identifier	NULL		788396	0					
ANR	788471	Identifier	NULL		788396	1					
ANR	788472	SwitchStatement	switch ( input [ 0 ] )		788396	7					
ANR	788473	Condition	input [ 0 ]	1283:9:34989:34996	788396	0	True				
ANR	788474	ArrayIndexing	input [ 0 ]		788396	0					
ANR	788475	Identifier	input		788396	0					
ANR	788476	PrimaryExpression	0		788396	1					
ANR	788477	CompoundStatement		101:2:2221:2258	788396	1					
ANR	788478	Label	case 'j' :	1285:1:35003:35011	788396	0	True				
ANR	788479	ExpressionStatement	"out = sdb_querys ( s , NULL , 0 , ""anal/**"" )"	1286:2:35015:35055	788396	1	True				
ANR	788480	AssignmentExpression	"out = sdb_querys ( s , NULL , 0 , ""anal/**"" )"		788396	0		=			
ANR	788481	Identifier	out		788396	0					
ANR	788482	CallExpression	"sdb_querys ( s , NULL , 0 , ""anal/**"" )"		788396	1					
ANR	788483	Callee	sdb_querys		788396	0					
ANR	788484	Identifier	sdb_querys		788396	0					
ANR	788485	ArgumentList	s		788396	1					
ANR	788486	Argument	s		788396	0					
ANR	788487	Identifier	s		788396	0					
ANR	788488	Argument	NULL		788396	1					
ANR	788489	Identifier	NULL		788396	0					
ANR	788490	Argument	0		788396	2					
ANR	788491	PrimaryExpression	0		788396	0					
ANR	788492	Argument	"""anal/**"""		788396	3					
ANR	788493	PrimaryExpression	"""anal/**"""		788396	0					
ANR	788494	IfStatement	if ( ! out )		788396	2					
ANR	788495	Condition	! out	1287:6:35063:35066	788396	0	True				
ANR	788496	UnaryOperationExpression	! out		788396	0					
ANR	788497	UnaryOperator	!		788396	0					
ANR	788498	Identifier	out		788396	1					
ANR	788499	CompoundStatement		15:12:331:331	788396	1					
ANR	788500	ExpressionStatement	"r_cons_println ( ""No Output from sdb"" )"	1288:3:35074:35111	788396	0	True				
ANR	788501	CallExpression	"r_cons_println ( ""No Output from sdb"" )"		788396	0					
ANR	788502	Callee	r_cons_println		788396	0					
ANR	788503	Identifier	r_cons_println		788396	0					
ANR	788504	ArgumentList	"""No Output from sdb"""		788396	1					
ANR	788505	Argument	"""No Output from sdb"""		788396	0					
ANR	788506	PrimaryExpression	"""No Output from sdb"""		788396	0					
ANR	788507	BreakStatement	break ;	1289:3:35116:35121	788396	1	True				
ANR	788508	ExpressionStatement	"r_cons_printf ( ""{\\""anal\\"":{"" )"	1292:2:35130:35159	788396	3	True				
ANR	788509	CallExpression	"r_cons_printf ( ""{\\""anal\\"":{"" )"		788396	0					
ANR	788510	Callee	r_cons_printf		788396	0					
ANR	788511	Identifier	r_cons_printf		788396	0					
ANR	788512	ArgumentList	"""{\\""anal\\"":{"""		788396	1					
ANR	788513	Argument	"""{\\""anal\\"":{"""		788396	0					
ANR	788514	PrimaryExpression	"""{\\""anal\\"":{"""		788396	0					
ANR	788515	WhileStatement	while ( * out )		788396	4					
ANR	788516	Condition	* out	1294:9:35171:35174	788396	0	True				
ANR	788517	UnaryOperationExpression	* out		788396	0					
ANR	788518	UnaryOperator	*		788396	0					
ANR	788519	Identifier	out		788396	1					
ANR	788520	CompoundStatement		22:15:439:439	788396	1					
ANR	788521	ExpressionStatement	"cur_pos = strchr ( out , '\\n' )"	1295:3:35182:35210	788396	0	True				
ANR	788522	AssignmentExpression	"cur_pos = strchr ( out , '\\n' )"		788396	0		=			
ANR	788523	Identifier	cur_pos		788396	0					
ANR	788524	CallExpression	"strchr ( out , '\\n' )"		788396	1					
ANR	788525	Callee	strchr		788396	0					
ANR	788526	Identifier	strchr		788396	0					
ANR	788527	ArgumentList	out		788396	1					
ANR	788528	Argument	out		788396	0					
ANR	788529	Identifier	out		788396	0					
ANR	788530	Argument	'\\n'		788396	1					
ANR	788531	PrimaryExpression	'\\n'		788396	0					
ANR	788532	IfStatement	if ( ! cur_pos )		788396	1					
ANR	788533	Condition	! cur_pos	1296:7:35219:35226	788396	0	True				
ANR	788534	UnaryOperationExpression	! cur_pos		788396	0					
ANR	788535	UnaryOperator	!		788396	0					
ANR	788536	Identifier	cur_pos		788396	1					
ANR	788537	CompoundStatement		24:17:491:491	788396	1					
ANR	788538	BreakStatement	break ;	1297:5:35236:35241	788396	0	True				
ANR	788539	ExpressionStatement	"cur_cmd = r_str_ndup ( out , cur_pos - out )"	1299:3:35251:35292	788396	2	True				
ANR	788540	AssignmentExpression	"cur_cmd = r_str_ndup ( out , cur_pos - out )"		788396	0		=			
ANR	788541	Identifier	cur_cmd		788396	0					
ANR	788542	CallExpression	"r_str_ndup ( out , cur_pos - out )"		788396	1					
ANR	788543	Callee	r_str_ndup		788396	0					
ANR	788544	Identifier	r_str_ndup		788396	0					
ANR	788545	ArgumentList	out		788396	1					
ANR	788546	Argument	out		788396	0					
ANR	788547	Identifier	out		788396	0					
ANR	788548	Argument	cur_pos - out		788396	1					
ANR	788549	AdditiveExpression	cur_pos - out		788396	0		-			
ANR	788550	Identifier	cur_pos		788396	0					
ANR	788551	Identifier	out		788396	1					
ANR	788552	ExpressionStatement	"r_cons_printf ( ""\\n\\n\\""%s\\"" : ["" , cur_cmd )"	1301:3:35298:35339	788396	3	True				
ANR	788553	CallExpression	"r_cons_printf ( ""\\n\\n\\""%s\\"" : ["" , cur_cmd )"		788396	0					
ANR	788554	Callee	r_cons_printf		788396	0					
ANR	788555	Identifier	r_cons_printf		788396	0					
ANR	788556	ArgumentList	"""\\n\\n\\""%s\\"" : ["""		788396	1					
ANR	788557	Argument	"""\\n\\n\\""%s\\"" : ["""		788396	0					
ANR	788558	PrimaryExpression	"""\\n\\n\\""%s\\"" : ["""		788396	0					
ANR	788559	Argument	cur_cmd		788396	1					
ANR	788560	Identifier	cur_cmd		788396	0					
ANR	788561	ExpressionStatement	"next_cmd = r_str_newf ( ""anal/%s/*"" , cur_cmd )"	1303:3:35345:35389	788396	4	True				
ANR	788562	AssignmentExpression	"next_cmd = r_str_newf ( ""anal/%s/*"" , cur_cmd )"		788396	0		=			
ANR	788563	Identifier	next_cmd		788396	0					
ANR	788564	CallExpression	"r_str_newf ( ""anal/%s/*"" , cur_cmd )"		788396	1					
ANR	788565	Callee	r_str_newf		788396	0					
ANR	788566	Identifier	r_str_newf		788396	0					
ANR	788567	ArgumentList	"""anal/%s/*"""		788396	1					
ANR	788568	Argument	"""anal/%s/*"""		788396	0					
ANR	788569	PrimaryExpression	"""anal/%s/*"""		788396	0					
ANR	788570	Argument	cur_cmd		788396	1					
ANR	788571	Identifier	cur_cmd		788396	0					
ANR	788572	ExpressionStatement	"temp_storage = sdb_querys ( s , NULL , 0 , next_cmd )"	1304:3:35394:35442	788396	5	True				
ANR	788573	AssignmentExpression	"temp_storage = sdb_querys ( s , NULL , 0 , next_cmd )"		788396	0		=			
ANR	788574	Identifier	temp_storage		788396	0					
ANR	788575	CallExpression	"sdb_querys ( s , NULL , 0 , next_cmd )"		788396	1					
ANR	788576	Callee	sdb_querys		788396	0					
ANR	788577	Identifier	sdb_querys		788396	0					
ANR	788578	ArgumentList	s		788396	1					
ANR	788579	Argument	s		788396	0					
ANR	788580	Identifier	s		788396	0					
ANR	788581	Argument	NULL		788396	1					
ANR	788582	Identifier	NULL		788396	0					
ANR	788583	Argument	0		788396	2					
ANR	788584	PrimaryExpression	0		788396	0					
ANR	788585	Argument	next_cmd		788396	3					
ANR	788586	Identifier	next_cmd		788396	0					
ANR	788587	IfStatement	if ( ! temp_storage )		788396	6					
ANR	788588	Condition	! temp_storage	1306:7:35452:35464	788396	0	True				
ANR	788589	UnaryOperationExpression	! temp_storage		788396	0					
ANR	788590	UnaryOperator	!		788396	0					
ANR	788591	Identifier	temp_storage		788396	1					
ANR	788592	CompoundStatement		34:22:729:729	788396	1					
ANR	788593	ExpressionStatement	"r_cons_println ( ""\\nEMPTY\\n"" )"	1307:4:35473:35501	788396	0	True				
ANR	788594	CallExpression	"r_cons_println ( ""\\nEMPTY\\n"" )"		788396	0					
ANR	788595	Callee	r_cons_println		788396	0					
ANR	788596	Identifier	r_cons_println		788396	0					
ANR	788597	ArgumentList	"""\\nEMPTY\\n"""		788396	1					
ANR	788598	Argument	"""\\nEMPTY\\n"""		788396	0					
ANR	788599	PrimaryExpression	"""\\nEMPTY\\n"""		788396	0					
ANR	788600	ExpressionStatement	"r_cons_printf ( ""],\\n\\n"" )"	1308:4:35507:35531	788396	1	True				
ANR	788601	CallExpression	"r_cons_printf ( ""],\\n\\n"" )"		788396	0					
ANR	788602	Callee	r_cons_printf		788396	0					
ANR	788603	Identifier	r_cons_printf		788396	0					
ANR	788604	ArgumentList	"""],\\n\\n"""		788396	1					
ANR	788605	Argument	"""],\\n\\n"""		788396	0					
ANR	788606	PrimaryExpression	"""],\\n\\n"""		788396	0					
ANR	788607	ExpressionStatement	out += cur_pos - out + 1	1309:4:35537:35561	788396	2	True				
ANR	788608	AssignmentExpression	out += cur_pos - out + 1		788396	0		+=			
ANR	788609	Identifier	out		788396	0					
ANR	788610	AdditiveExpression	cur_pos - out + 1		788396	1		-			
ANR	788611	Identifier	cur_pos		788396	0					
ANR	788612	AdditiveExpression	out + 1		788396	1		+			
ANR	788613	Identifier	out		788396	0					
ANR	788614	PrimaryExpression	1		788396	1					
ANR	788615	ContinueStatement	continue ;	1310:4:35567:35575	788396	3	True				
ANR	788616	WhileStatement	while ( * temp_storage )		788396	7					
ANR	788617	Condition	* temp_storage	1313:10:35593:35605	788396	0	True				
ANR	788618	UnaryOperationExpression	* temp_storage		788396	0					
ANR	788619	UnaryOperator	*		788396	0					
ANR	788620	Identifier	temp_storage		788396	1					
ANR	788621	CompoundStatement		41:25:870:870	788396	1					
ANR	788622	ExpressionStatement	"temp_pos = strchr ( temp_storage , '\\n' )"	1314:4:35614:35652	788396	0	True				
ANR	788623	AssignmentExpression	"temp_pos = strchr ( temp_storage , '\\n' )"		788396	0		=			
ANR	788624	Identifier	temp_pos		788396	0					
ANR	788625	CallExpression	"strchr ( temp_storage , '\\n' )"		788396	1					
ANR	788626	Callee	strchr		788396	0					
ANR	788627	Identifier	strchr		788396	0					
ANR	788628	ArgumentList	temp_storage		788396	1					
ANR	788629	Argument	temp_storage		788396	0					
ANR	788630	Identifier	temp_storage		788396	0					
ANR	788631	Argument	'\\n'		788396	1					
ANR	788632	PrimaryExpression	'\\n'		788396	0					
ANR	788633	IfStatement	if ( ! temp_pos )		788396	1					
ANR	788634	Condition	! temp_pos	1315:8:35662:35670	788396	0	True				
ANR	788635	UnaryOperationExpression	! temp_pos		788396	0					
ANR	788636	UnaryOperator	!		788396	0					
ANR	788637	Identifier	temp_pos		788396	1					
ANR	788638	CompoundStatement		43:19:935:935	788396	1					
ANR	788639	BreakStatement	break ;	1316:5:35680:35685	788396	0	True				
ANR	788640	ExpressionStatement	"temp_cmd = r_str_ndup ( temp_storage , temp_pos - temp_storage )"	1319:4:35702:35763	788396	2	True				
ANR	788641	AssignmentExpression	"temp_cmd = r_str_ndup ( temp_storage , temp_pos - temp_storage )"		788396	0		=			
ANR	788642	Identifier	temp_cmd		788396	0					
ANR	788643	CallExpression	"r_str_ndup ( temp_storage , temp_pos - temp_storage )"		788396	1					
ANR	788644	Callee	r_str_ndup		788396	0					
ANR	788645	Identifier	r_str_ndup		788396	0					
ANR	788646	ArgumentList	temp_storage		788396	1					
ANR	788647	Argument	temp_storage		788396	0					
ANR	788648	Identifier	temp_storage		788396	0					
ANR	788649	Argument	temp_pos - temp_storage		788396	1					
ANR	788650	AdditiveExpression	temp_pos - temp_storage		788396	0		-			
ANR	788651	Identifier	temp_pos		788396	0					
ANR	788652	Identifier	temp_storage		788396	1					
ANR	788653	ExpressionStatement	"r_cons_printf ( ""\\""%s\\"","" , temp_cmd )"	1320:4:35769:35804	788396	3	True				
ANR	788654	CallExpression	"r_cons_printf ( ""\\""%s\\"","" , temp_cmd )"		788396	0					
ANR	788655	Callee	r_cons_printf		788396	0					
ANR	788656	Identifier	r_cons_printf		788396	0					
ANR	788657	ArgumentList	"""\\""%s\\"","""		788396	1					
ANR	788658	Argument	"""\\""%s\\"","""		788396	0					
ANR	788659	PrimaryExpression	"""\\""%s\\"","""		788396	0					
ANR	788660	Argument	temp_cmd		788396	1					
ANR	788661	Identifier	temp_cmd		788396	0					
ANR	788662	ExpressionStatement	temp_storage += temp_pos - temp_storage + 1	1321:4:35810:35853	788396	4	True				
ANR	788663	AssignmentExpression	temp_storage += temp_pos - temp_storage + 1		788396	0		+=			
ANR	788664	Identifier	temp_storage		788396	0					
ANR	788665	AdditiveExpression	temp_pos - temp_storage + 1		788396	1		-			
ANR	788666	Identifier	temp_pos		788396	0					
ANR	788667	AdditiveExpression	temp_storage + 1		788396	1		+			
ANR	788668	Identifier	temp_storage		788396	0					
ANR	788669	PrimaryExpression	1		788396	1					
ANR	788670	ExpressionStatement	"r_cons_printf ( ""],\\n\\n"" )"	1324:3:35864:35888	788396	8	True				
ANR	788671	CallExpression	"r_cons_printf ( ""],\\n\\n"" )"		788396	0					
ANR	788672	Callee	r_cons_printf		788396	0					
ANR	788673	Identifier	r_cons_printf		788396	0					
ANR	788674	ArgumentList	"""],\\n\\n"""		788396	1					
ANR	788675	Argument	"""],\\n\\n"""		788396	0					
ANR	788676	PrimaryExpression	"""],\\n\\n"""		788396	0					
ANR	788677	ExpressionStatement	out += cur_pos - out + 1	1325:3:35893:35917	788396	9	True				
ANR	788678	AssignmentExpression	out += cur_pos - out + 1		788396	0		+=			
ANR	788679	Identifier	out		788396	0					
ANR	788680	AdditiveExpression	cur_pos - out + 1		788396	1		-			
ANR	788681	Identifier	cur_pos		788396	0					
ANR	788682	AdditiveExpression	out + 1		788396	1		+			
ANR	788683	Identifier	out		788396	0					
ANR	788684	PrimaryExpression	1		788396	1					
ANR	788685	ExpressionStatement	"r_cons_printf ( ""}}"" )"	1328:2:35926:35946	788396	5	True				
ANR	788686	CallExpression	"r_cons_printf ( ""}}"" )"		788396	0					
ANR	788687	Callee	r_cons_printf		788396	0					
ANR	788688	Identifier	r_cons_printf		788396	0					
ANR	788689	ArgumentList	"""}}"""		788396	1					
ANR	788690	Argument	"""}}"""		788396	0					
ANR	788691	PrimaryExpression	"""}}"""		788396	0					
ANR	788692	ExpressionStatement	free ( next_cmd )	1329:2:35950:35965	788396	6	True				
ANR	788693	CallExpression	free ( next_cmd )		788396	0					
ANR	788694	Callee	free		788396	0					
ANR	788695	Identifier	free		788396	0					
ANR	788696	ArgumentList	next_cmd		788396	1					
ANR	788697	Argument	next_cmd		788396	0					
ANR	788698	Identifier	next_cmd		788396	0					
ANR	788699	ExpressionStatement	free ( temp_storage )	1330:2:35969:35988	788396	7	True				
ANR	788700	CallExpression	free ( temp_storage )		788396	0					
ANR	788701	Callee	free		788396	0					
ANR	788702	Identifier	free		788396	0					
ANR	788703	ArgumentList	temp_storage		788396	1					
ANR	788704	Argument	temp_storage		788396	0					
ANR	788705	Identifier	temp_storage		788396	0					
ANR	788706	BreakStatement	break ;	1331:2:35992:35997	788396	8	True				
ANR	788707	Label	case ' ' :	1333:1:36001:36009	788396	9	True				
ANR	788708	ExpressionStatement	"out = sdb_querys ( s , NULL , 0 , input + 1 )"	1334:2:36013:36053	788396	10	True				
ANR	788709	AssignmentExpression	"out = sdb_querys ( s , NULL , 0 , input + 1 )"		788396	0		=			
ANR	788710	Identifier	out		788396	0					
ANR	788711	CallExpression	"sdb_querys ( s , NULL , 0 , input + 1 )"		788396	1					
ANR	788712	Callee	sdb_querys		788396	0					
ANR	788713	Identifier	sdb_querys		788396	0					
ANR	788714	ArgumentList	s		788396	1					
ANR	788715	Argument	s		788396	0					
ANR	788716	Identifier	s		788396	0					
ANR	788717	Argument	NULL		788396	1					
ANR	788718	Identifier	NULL		788396	0					
ANR	788719	Argument	0		788396	2					
ANR	788720	PrimaryExpression	0		788396	0					
ANR	788721	Argument	input + 1		788396	3					
ANR	788722	AdditiveExpression	input + 1		788396	0		+			
ANR	788723	Identifier	input		788396	0					
ANR	788724	PrimaryExpression	1		788396	1					
ANR	788725	IfStatement	if ( out )		788396	11					
ANR	788726	Condition	out	1335:6:36061:36063	788396	0	True				
ANR	788727	Identifier	out		788396	0					
ANR	788728	CompoundStatement		63:11:1328:1328	788396	1					
ANR	788729	ExpressionStatement	r_cons_println ( out )	1336:3:36071:36091	788396	0	True				
ANR	788730	CallExpression	r_cons_println ( out )		788396	0					
ANR	788731	Callee	r_cons_println		788396	0					
ANR	788732	Identifier	r_cons_println		788396	0					
ANR	788733	ArgumentList	out		788396	1					
ANR	788734	Argument	out		788396	0					
ANR	788735	Identifier	out		788396	0					
ANR	788736	ExpressionStatement	free ( out )	1338:2:36099:36109	788396	12	True				
ANR	788737	CallExpression	free ( out )		788396	0					
ANR	788738	Callee	free		788396	0					
ANR	788739	Identifier	free		788396	0					
ANR	788740	ArgumentList	out		788396	1					
ANR	788741	Argument	out		788396	0					
ANR	788742	Identifier	out		788396	0					
ANR	788743	BreakStatement	break ;	1339:2:36113:36118	788396	13	True				
ANR	788744	Label	case '\\0' :	1342:1:36219:36228	788396	14	True				
ANR	788745	ExpressionStatement	"sdb_foreach ( s , callback_foreach_kv , NULL )"	1343:2:36232:36274	788396	15	True				
ANR	788746	CallExpression	"sdb_foreach ( s , callback_foreach_kv , NULL )"		788396	0					
ANR	788747	Callee	sdb_foreach		788396	0					
ANR	788748	Identifier	sdb_foreach		788396	0					
ANR	788749	ArgumentList	s		788396	1					
ANR	788750	Argument	s		788396	0					
ANR	788751	Identifier	s		788396	0					
ANR	788752	Argument	callback_foreach_kv		788396	1					
ANR	788753	Identifier	callback_foreach_kv		788396	0					
ANR	788754	Argument	NULL		788396	2					
ANR	788755	Identifier	NULL		788396	0					
ANR	788756	BreakStatement	break ;	1344:2:36278:36283	788396	16	True				
ANR	788757	Label	case 's' :	1346:1:36351:36359	788396	17	True				
ANR	788758	IfStatement	if ( core -> http_up )		788396	18					
ANR	788759	Condition	core -> http_up	1347:6:36375:36387	788396	0	True				
ANR	788760	PtrMemberAccess	core -> http_up		788396	0					
ANR	788761	Identifier	core		788396	0					
ANR	788762	Identifier	http_up		788396	1					
ANR	788763	CompoundStatement		75:21:1652:1652	788396	1					
ANR	788764	ReturnStatement	return false ;	1348:3:36395:36407	788396	0	True				
ANR	788765	Identifier	false		788396	0					
ANR	788766	IfStatement	if ( ! r_cons_is_interactive ( ) )		788396	19					
ANR	788767	Condition	! r_cons_is_interactive ( )	1350:6:36419:36443	788396	0	True				
ANR	788768	UnaryOperationExpression	! r_cons_is_interactive ( )		788396	0					
ANR	788769	UnaryOperator	!		788396	0					
ANR	788770	CallExpression	r_cons_is_interactive ( )		788396	1					
ANR	788771	Callee	r_cons_is_interactive		788396	0					
ANR	788772	Identifier	r_cons_is_interactive		788396	0					
ANR	788773	ArgumentList			788396	1					
ANR	788774	CompoundStatement		78:33:1708:1708	788396	1					
ANR	788775	ReturnStatement	return false ;	1351:3:36451:36463	788396	0	True				
ANR	788776	Identifier	false		788396	0					
ANR	788777	IfStatement	if ( input [ 1 ] == ' ' )		788396	20					
ANR	788778	Condition	input [ 1 ] == ' '	1353:6:36475:36489	788396	0	True				
ANR	788779	EqualityExpression	input [ 1 ] == ' '		788396	0		==			
ANR	788780	ArrayIndexing	input [ 1 ]		788396	0					
ANR	788781	Identifier	input		788396	0					
ANR	788782	PrimaryExpression	1		788396	1					
ANR	788783	PrimaryExpression	' '		788396	1					
ANR	788784	CompoundStatement		82:3:1759:1795	788396	1					
ANR	788785	IdentifierDeclStatement	"char * n , * o , * p = strdup ( input + 2 ) ;"	1354:3:36497:36533	788396	0	True				
ANR	788786	IdentifierDecl	* n		788396	0					
ANR	788787	IdentifierDeclType	char *		788396	0					
ANR	788788	Identifier	n		788396	1					
ANR	788789	IdentifierDecl	* o		788396	1					
ANR	788790	IdentifierDeclType	char *		788396	0					
ANR	788791	Identifier	o		788396	1					
ANR	788792	IdentifierDecl	* p = strdup ( input + 2 )		788396	2					
ANR	788793	IdentifierDeclType	char *		788396	0					
ANR	788794	Identifier	p		788396	1					
ANR	788795	AssignmentExpression	* p = strdup ( input + 2 )		788396	2		=			
ANR	788796	Identifier	p		788396	0					
ANR	788797	CallExpression	strdup ( input + 2 )		788396	1					
ANR	788798	Callee	strdup		788396	0					
ANR	788799	Identifier	strdup		788396	0					
ANR	788800	ArgumentList	input + 2		788396	1					
ANR	788801	Argument	input + 2		788396	0					
ANR	788802	AdditiveExpression	input + 2		788396	0		+			
ANR	788803	Identifier	input		788396	0					
ANR	788804	PrimaryExpression	2		788396	1					
ANR	788805	ForStatement	for ( n = o = p ; n ; o = n )		788396	1					
ANR	788806	ForInit	n = o = p ;	1356:8:36592:36601	788396	0	True				
ANR	788807	AssignmentExpression	n = o = p		788396	0		=			
ANR	788808	Identifier	n		788396	0					
ANR	788809	AssignmentExpression	o = p		788396	1		=			
ANR	788810	Identifier	o		788396	0					
ANR	788811	Identifier	p		788396	1					
ANR	788812	Condition	n	1356:19:36603:36603	788396	1	True				
ANR	788813	Identifier	n		788396	0					
ANR	788814	AssignmentExpression	o = n	1356:22:36606:36610	788396	2	True	=			
ANR	788815	Identifier	o		788396	0					
ANR	788816	Identifier	n		788396	1					
ANR	788817	CompoundStatement		84:29:1875:1875	788396	3					
ANR	788818	ExpressionStatement	"n = strchr ( o , '/' )"	1357:4:36619:36638	788396	0	True				
ANR	788819	AssignmentExpression	"n = strchr ( o , '/' )"		788396	0		=			
ANR	788820	Identifier	n		788396	0					
ANR	788821	CallExpression	"strchr ( o , '/' )"		788396	1					
ANR	788822	Callee	strchr		788396	0					
ANR	788823	Identifier	strchr		788396	0					
ANR	788824	ArgumentList	o		788396	1					
ANR	788825	Argument	o		788396	0					
ANR	788826	Identifier	o		788396	0					
ANR	788827	Argument	'/'		788396	1					
ANR	788828	PrimaryExpression	'/'		788396	0					
ANR	788829	IfStatement	if ( n )		788396	1					
ANR	788830	Condition	n	1358:8:36678:36678	788396	0	True				
ANR	788831	Identifier	n		788396	0					
ANR	788832	CompoundStatement		86:11:1943:1943	788396	1					
ANR	788833	ExpressionStatement	* n ++ = 0	1359:5:36688:36696	788396	0	True				
ANR	788834	AssignmentExpression	* n ++ = 0		788396	0		=			
ANR	788835	UnaryOperationExpression	* n ++		788396	0					
ANR	788836	UnaryOperator	*		788396	0					
ANR	788837	PostIncDecOperationExpression	n ++		788396	1					
ANR	788838	Identifier	n		788396	0					
ANR	788839	IncDec	++		788396	1					
ANR	788840	PrimaryExpression	0		788396	1					
ANR	788841	ExpressionStatement	"s = sdb_ns ( s , o , 1 )"	1361:4:36708:36728	788396	2	True				
ANR	788842	AssignmentExpression	"s = sdb_ns ( s , o , 1 )"		788396	0		=			
ANR	788843	Identifier	s		788396	0					
ANR	788844	CallExpression	"sdb_ns ( s , o , 1 )"		788396	1					
ANR	788845	Callee	sdb_ns		788396	0					
ANR	788846	Identifier	sdb_ns		788396	0					
ANR	788847	ArgumentList	s		788396	1					
ANR	788848	Argument	s		788396	0					
ANR	788849	Identifier	s		788396	0					
ANR	788850	Argument	o		788396	1					
ANR	788851	Identifier	o		788396	0					
ANR	788852	Argument	1		788396	2					
ANR	788853	PrimaryExpression	1		788396	0					
ANR	788854	ExpressionStatement	free ( p )	1363:3:36738:36746	788396	2	True				
ANR	788855	CallExpression	free ( p )		788396	0					
ANR	788856	Callee	free		788396	0					
ANR	788857	Identifier	free		788396	0					
ANR	788858	ArgumentList	p		788396	1					
ANR	788859	Argument	p		788396	0					
ANR	788860	Identifier	p		788396	0					
ANR	788861	IfStatement	if ( ! s )		788396	21					
ANR	788862	Condition	! s	1365:6:36758:36759	788396	0	True				
ANR	788863	UnaryOperationExpression	! s		788396	0					
ANR	788864	UnaryOperator	!		788396	0					
ANR	788865	Identifier	s		788396	1					
ANR	788866	CompoundStatement		93:10:2024:2024	788396	1					
ANR	788867	ExpressionStatement	s = core -> sdb	1366:3:36767:36780	788396	0	True				
ANR	788868	AssignmentExpression	s = core -> sdb		788396	0		=			
ANR	788869	Identifier	s		788396	0					
ANR	788870	PtrMemberAccess	core -> sdb		788396	1					
ANR	788871	Identifier	core		788396	0					
ANR	788872	Identifier	sdb		788396	1					
ANR	788873	IdentifierDeclStatement	RLine * line = core -> cons -> line ;	1368:2:36788:36818	788396	22	True				
ANR	788874	IdentifierDecl	* line = core -> cons -> line		788396	0					
ANR	788875	IdentifierDeclType	RLine *		788396	0					
ANR	788876	Identifier	line		788396	1					
ANR	788877	AssignmentExpression	* line = core -> cons -> line		788396	2		=			
ANR	788878	Identifier	line		788396	0					
ANR	788879	PtrMemberAccess	core -> cons -> line		788396	1					
ANR	788880	PtrMemberAccess	core -> cons		788396	0					
ANR	788881	Identifier	core		788396	0					
ANR	788882	Identifier	cons		788396	1					
ANR	788883	Identifier	line		788396	1					
ANR	788884	IfStatement	if ( ! line -> sdbshell_hist )		788396	23					
ANR	788885	Condition	! line -> sdbshell_hist	1369:6:36826:36845	788396	0	True				
ANR	788886	UnaryOperationExpression	! line -> sdbshell_hist		788396	0					
ANR	788887	UnaryOperator	!		788396	0					
ANR	788888	PtrMemberAccess	line -> sdbshell_hist		788396	1					
ANR	788889	Identifier	line		788396	0					
ANR	788890	Identifier	sdbshell_hist		788396	1					
ANR	788891	CompoundStatement		97:28:2110:2110	788396	1					
ANR	788892	ExpressionStatement	line -> sdbshell_hist = r_list_newf ( free )	1370:3:36853:36893	788396	0	True				
ANR	788893	AssignmentExpression	line -> sdbshell_hist = r_list_newf ( free )		788396	0		=			
ANR	788894	PtrMemberAccess	line -> sdbshell_hist		788396	0					
ANR	788895	Identifier	line		788396	0					
ANR	788896	Identifier	sdbshell_hist		788396	1					
ANR	788897	CallExpression	r_list_newf ( free )		788396	1					
ANR	788898	Callee	r_list_newf		788396	0					
ANR	788899	Identifier	r_list_newf		788396	0					
ANR	788900	ArgumentList	free		788396	1					
ANR	788901	Argument	free		788396	0					
ANR	788902	Identifier	free		788396	0					
ANR	788903	ExpressionStatement	"r_list_append ( line -> sdbshell_hist , r_str_new ( ""\\0"" ) )"	1371:3:36898:36951	788396	1	True				
ANR	788904	CallExpression	"r_list_append ( line -> sdbshell_hist , r_str_new ( ""\\0"" ) )"		788396	0					
ANR	788905	Callee	r_list_append		788396	0					
ANR	788906	Identifier	r_list_append		788396	0					
ANR	788907	ArgumentList	line -> sdbshell_hist		788396	1					
ANR	788908	Argument	line -> sdbshell_hist		788396	0					
ANR	788909	PtrMemberAccess	line -> sdbshell_hist		788396	0					
ANR	788910	Identifier	line		788396	0					
ANR	788911	Identifier	sdbshell_hist		788396	1					
ANR	788912	Argument	"r_str_new ( ""\\0"" )"		788396	1					
ANR	788913	CallExpression	"r_str_new ( ""\\0"" )"		788396	0					
ANR	788914	Callee	r_str_new		788396	0					
ANR	788915	Identifier	r_str_new		788396	0					
ANR	788916	ArgumentList	"""\\0"""		788396	1					
ANR	788917	Argument	"""\\0"""		788396	0					
ANR	788918	PrimaryExpression	"""\\0"""		788396	0					
ANR	788919	IdentifierDeclStatement	RList * sdb_hist = line -> sdbshell_hist ;	1373:2:36959:36996	788396	24	True				
ANR	788920	IdentifierDecl	* sdb_hist = line -> sdbshell_hist		788396	0					
ANR	788921	IdentifierDeclType	RList *		788396	0					
ANR	788922	Identifier	sdb_hist		788396	1					
ANR	788923	AssignmentExpression	* sdb_hist = line -> sdbshell_hist		788396	2		=			
ANR	788924	Identifier	sdb_hist		788396	0					
ANR	788925	PtrMemberAccess	line -> sdbshell_hist		788396	1					
ANR	788926	Identifier	line		788396	0					
ANR	788927	Identifier	sdbshell_hist		788396	1					
ANR	788928	ExpressionStatement	"r_line_set_hist_callback ( line , & r_line_hist_sdb_up , & r_line_hist_sdb_down )"	1374:2:37000:37075	788396	25	True				
ANR	788929	CallExpression	"r_line_set_hist_callback ( line , & r_line_hist_sdb_up , & r_line_hist_sdb_down )"		788396	0					
ANR	788930	Callee	r_line_set_hist_callback		788396	0					
ANR	788931	Identifier	r_line_set_hist_callback		788396	0					
ANR	788932	ArgumentList	line		788396	1					
ANR	788933	Argument	line		788396	0					
ANR	788934	Identifier	line		788396	0					
ANR	788935	Argument	& r_line_hist_sdb_up		788396	1					
ANR	788936	UnaryOperationExpression	& r_line_hist_sdb_up		788396	0					
ANR	788937	UnaryOperator	&		788396	0					
ANR	788938	Identifier	r_line_hist_sdb_up		788396	1					
ANR	788939	Argument	& r_line_hist_sdb_down		788396	2					
ANR	788940	UnaryOperationExpression	& r_line_hist_sdb_down		788396	0					
ANR	788941	UnaryOperator	&		788396	0					
ANR	788942	Identifier	r_line_hist_sdb_down		788396	1					
ANR	788943	ForStatement	for ( ; ; )		788396	26					
ANR	788944	CompoundStatement		103:11:2350:2350	788396	0					
ANR	788945	ExpressionStatement	r_line_set_prompt ( p )	1376:3:37093:37114	788396	0	True				
ANR	788946	CallExpression	r_line_set_prompt ( p )		788396	0					
ANR	788947	Callee	r_line_set_prompt		788396	0					
ANR	788948	Identifier	r_line_set_prompt		788396	0					
ANR	788949	ArgumentList	p		788396	1					
ANR	788950	Argument	p		788396	0					
ANR	788951	Identifier	p		788396	0					
ANR	788952	IfStatement	"if ( r_cons_fgets ( buf , buflen , 0 , NULL ) < 1 )"		788396	1					
ANR	788953	Condition	"r_cons_fgets ( buf , buflen , 0 , NULL ) < 1"	1377:7:37123:37161	788396	0	True				
ANR	788954	RelationalExpression	"r_cons_fgets ( buf , buflen , 0 , NULL ) < 1"		788396	0		<			
ANR	788955	CallExpression	"r_cons_fgets ( buf , buflen , 0 , NULL )"		788396	0					
ANR	788956	Callee	r_cons_fgets		788396	0					
ANR	788957	Identifier	r_cons_fgets		788396	0					
ANR	788958	ArgumentList	buf		788396	1					
ANR	788959	Argument	buf		788396	0					
ANR	788960	Identifier	buf		788396	0					
ANR	788961	Argument	buflen		788396	1					
ANR	788962	Identifier	buflen		788396	0					
ANR	788963	Argument	0		788396	2					
ANR	788964	PrimaryExpression	0		788396	0					
ANR	788965	Argument	NULL		788396	3					
ANR	788966	Identifier	NULL		788396	0					
ANR	788967	PrimaryExpression	1		788396	1					
ANR	788968	CompoundStatement		105:48:2426:2426	788396	1					
ANR	788969	BreakStatement	break ;	1378:4:37170:37175	788396	0	True				
ANR	788970	IfStatement	if ( ! * buf )		788396	2					
ANR	788971	Condition	! * buf	1380:7:37189:37193	788396	0	True				
ANR	788972	UnaryOperationExpression	! * buf		788396	0					
ANR	788973	UnaryOperator	!		788396	0					
ANR	788974	UnaryOperationExpression	* buf		788396	1					
ANR	788975	UnaryOperator	*		788396	0					
ANR	788976	Identifier	buf		788396	1					
ANR	788977	CompoundStatement		108:14:2458:2458	788396	1					
ANR	788978	BreakStatement	break ;	1381:4:37202:37207	788396	0	True				
ANR	788979	IfStatement	if ( sdb_hist )		788396	3					
ANR	788980	Condition	sdb_hist	1383:7:37221:37228	788396	0	True				
ANR	788981	Identifier	sdb_hist		788396	0					
ANR	788982	CompoundStatement		111:17:2493:2493	788396	1					
ANR	788983	IfStatement	"if ( ( r_list_length ( sdb_hist ) == 1 ) || ( r_list_length ( sdb_hist ) > 1 && strcmp ( r_list_get_n ( sdb_hist , 1 ) , buf ) ) )"		788396	0					
ANR	788984	Condition	"( r_list_length ( sdb_hist ) == 1 ) || ( r_list_length ( sdb_hist ) > 1 && strcmp ( r_list_get_n ( sdb_hist , 1 ) , buf ) )"	1384:8:37241:37349	788396	0	True				
ANR	788985	OrExpression	"( r_list_length ( sdb_hist ) == 1 ) || ( r_list_length ( sdb_hist ) > 1 && strcmp ( r_list_get_n ( sdb_hist , 1 ) , buf ) )"		788396	0		||			
ANR	788986	EqualityExpression	r_list_length ( sdb_hist ) == 1		788396	0		==			
ANR	788987	CallExpression	r_list_length ( sdb_hist )		788396	0					
ANR	788988	Callee	r_list_length		788396	0					
ANR	788989	Identifier	r_list_length		788396	0					
ANR	788990	ArgumentList	sdb_hist		788396	1					
ANR	788991	Argument	sdb_hist		788396	0					
ANR	788992	Identifier	sdb_hist		788396	0					
ANR	788993	PrimaryExpression	1		788396	1					
ANR	788994	AndExpression	"r_list_length ( sdb_hist ) > 1 && strcmp ( r_list_get_n ( sdb_hist , 1 ) , buf )"		788396	1		&&			
ANR	788995	RelationalExpression	r_list_length ( sdb_hist ) > 1		788396	0		>			
ANR	788996	CallExpression	r_list_length ( sdb_hist )		788396	0					
ANR	788997	Callee	r_list_length		788396	0					
ANR	788998	Identifier	r_list_length		788396	0					
ANR	788999	ArgumentList	sdb_hist		788396	1					
ANR	789000	Argument	sdb_hist		788396	0					
ANR	789001	Identifier	sdb_hist		788396	0					
ANR	789002	PrimaryExpression	1		788396	1					
ANR	789003	CallExpression	"strcmp ( r_list_get_n ( sdb_hist , 1 ) , buf )"		788396	1					
ANR	789004	Callee	strcmp		788396	0					
ANR	789005	Identifier	strcmp		788396	0					
ANR	789006	ArgumentList	"r_list_get_n ( sdb_hist , 1 )"		788396	1					
ANR	789007	Argument	"r_list_get_n ( sdb_hist , 1 )"		788396	0					
ANR	789008	CallExpression	"r_list_get_n ( sdb_hist , 1 )"		788396	0					
ANR	789009	Callee	r_list_get_n		788396	0					
ANR	789010	Identifier	r_list_get_n		788396	0					
ANR	789011	ArgumentList	sdb_hist		788396	1					
ANR	789012	Argument	sdb_hist		788396	0					
ANR	789013	Identifier	sdb_hist		788396	0					
ANR	789014	Argument	1		788396	1					
ANR	789015	PrimaryExpression	1		788396	0					
ANR	789016	Argument	buf		788396	1					
ANR	789017	Identifier	buf		788396	0					
ANR	789018	CompoundStatement		112:119:2614:2614	788396	1					
ANR	789019	ExpressionStatement	"r_list_insert ( sdb_hist , 1 , strdup ( buf ) )"	1385:5:37359:37400	788396	0	True				
ANR	789020	CallExpression	"r_list_insert ( sdb_hist , 1 , strdup ( buf ) )"		788396	0					
ANR	789021	Callee	r_list_insert		788396	0					
ANR	789022	Identifier	r_list_insert		788396	0					
ANR	789023	ArgumentList	sdb_hist		788396	1					
ANR	789024	Argument	sdb_hist		788396	0					
ANR	789025	Identifier	sdb_hist		788396	0					
ANR	789026	Argument	1		788396	1					
ANR	789027	PrimaryExpression	1		788396	0					
ANR	789028	Argument	strdup ( buf )		788396	2					
ANR	789029	CallExpression	strdup ( buf )		788396	0					
ANR	789030	Callee	strdup		788396	0					
ANR	789031	Identifier	strdup		788396	0					
ANR	789032	ArgumentList	buf		788396	1					
ANR	789033	Argument	buf		788396	0					
ANR	789034	Identifier	buf		788396	0					
ANR	789035	ExpressionStatement	line -> sdbshell_hist_iter = sdb_hist -> head	1387:4:37412:37453	788396	1	True				
ANR	789036	AssignmentExpression	line -> sdbshell_hist_iter = sdb_hist -> head		788396	0		=			
ANR	789037	PtrMemberAccess	line -> sdbshell_hist_iter		788396	0					
ANR	789038	Identifier	line		788396	0					
ANR	789039	Identifier	sdbshell_hist_iter		788396	1					
ANR	789040	PtrMemberAccess	sdb_hist -> head		788396	1					
ANR	789041	Identifier	sdb_hist		788396	0					
ANR	789042	Identifier	head		788396	1					
ANR	789043	ExpressionStatement	"out = sdb_querys ( s , NULL , 0 , buf )"	1389:3:37463:37497	788396	4	True				
ANR	789044	AssignmentExpression	"out = sdb_querys ( s , NULL , 0 , buf )"		788396	0		=			
ANR	789045	Identifier	out		788396	0					
ANR	789046	CallExpression	"sdb_querys ( s , NULL , 0 , buf )"		788396	1					
ANR	789047	Callee	sdb_querys		788396	0					
ANR	789048	Identifier	sdb_querys		788396	0					
ANR	789049	ArgumentList	s		788396	1					
ANR	789050	Argument	s		788396	0					
ANR	789051	Identifier	s		788396	0					
ANR	789052	Argument	NULL		788396	1					
ANR	789053	Identifier	NULL		788396	0					
ANR	789054	Argument	0		788396	2					
ANR	789055	PrimaryExpression	0		788396	0					
ANR	789056	Argument	buf		788396	3					
ANR	789057	Identifier	buf		788396	0					
ANR	789058	IfStatement	if ( out )		788396	5					
ANR	789059	Condition	out	1390:7:37506:37508	788396	0	True				
ANR	789060	Identifier	out		788396	0					
ANR	789061	CompoundStatement		118:12:2773:2773	788396	1					
ANR	789062	ExpressionStatement	r_cons_println ( out )	1391:4:37517:37537	788396	0	True				
ANR	789063	CallExpression	r_cons_println ( out )		788396	0					
ANR	789064	Callee	r_cons_println		788396	0					
ANR	789065	Identifier	r_cons_println		788396	0					
ANR	789066	ArgumentList	out		788396	1					
ANR	789067	Argument	out		788396	0					
ANR	789068	Identifier	out		788396	0					
ANR	789069	ExpressionStatement	r_cons_flush ( )	1392:4:37543:37558	788396	1	True				
ANR	789070	CallExpression	r_cons_flush ( )		788396	0					
ANR	789071	Callee	r_cons_flush		788396	0					
ANR	789072	Identifier	r_cons_flush		788396	0					
ANR	789073	ArgumentList			788396	1					
ANR	789074	ExpressionStatement	"r_line_set_hist_callback ( core -> cons -> line , & r_line_hist_cmd_up , & r_line_hist_cmd_down )"	1395:2:37571:37658	788396	27	True				
ANR	789075	CallExpression	"r_line_set_hist_callback ( core -> cons -> line , & r_line_hist_cmd_up , & r_line_hist_cmd_down )"		788396	0					
ANR	789076	Callee	r_line_set_hist_callback		788396	0					
ANR	789077	Identifier	r_line_set_hist_callback		788396	0					
ANR	789078	ArgumentList	core -> cons -> line		788396	1					
ANR	789079	Argument	core -> cons -> line		788396	0					
ANR	789080	PtrMemberAccess	core -> cons -> line		788396	0					
ANR	789081	PtrMemberAccess	core -> cons		788396	0					
ANR	789082	Identifier	core		788396	0					
ANR	789083	Identifier	cons		788396	1					
ANR	789084	Identifier	line		788396	1					
ANR	789085	Argument	& r_line_hist_cmd_up		788396	1					
ANR	789086	UnaryOperationExpression	& r_line_hist_cmd_up		788396	0					
ANR	789087	UnaryOperator	&		788396	0					
ANR	789088	Identifier	r_line_hist_cmd_up		788396	1					
ANR	789089	Argument	& r_line_hist_cmd_down		788396	2					
ANR	789090	UnaryOperationExpression	& r_line_hist_cmd_down		788396	0					
ANR	789091	UnaryOperator	&		788396	0					
ANR	789092	Identifier	r_line_hist_cmd_down		788396	1					
ANR	789093	BreakStatement	break ;	1396:2:37662:37667	788396	28	True				
ANR	789094	Label	case 'o' :	1397:1:37670:37678	788396	29	True				
ANR	789095	IfStatement	if ( r_sandbox_enable ( 0 ) )		788396	30					
ANR	789096	Condition	r_sandbox_enable ( 0 )	1398:6:37686:37705	788396	0	True				
ANR	789097	CallExpression	r_sandbox_enable ( 0 )		788396	0					
ANR	789098	Callee	r_sandbox_enable		788396	0					
ANR	789099	Identifier	r_sandbox_enable		788396	0					
ANR	789100	ArgumentList	0		788396	1					
ANR	789101	Argument	0		788396	0					
ANR	789102	PrimaryExpression	0		788396	0					
ANR	789103	CompoundStatement		126:28:2970:2970	788396	1					
ANR	789104	ExpressionStatement	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"	1399:3:37713:37767	788396	0	True				
ANR	789105	CallExpression	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"		788396	0					
ANR	789106	Callee	eprintf		788396	0					
ANR	789107	Identifier	eprintf		788396	0					
ANR	789108	ArgumentList	"""This command is disabled in sandbox mode\\n"""		788396	1					
ANR	789109	Argument	"""This command is disabled in sandbox mode\\n"""		788396	0					
ANR	789110	PrimaryExpression	"""This command is disabled in sandbox mode\\n"""		788396	0					
ANR	789111	ReturnStatement	return 0 ;	1400:3:37772:37780	788396	1	True				
ANR	789112	PrimaryExpression	0		788396	0					
ANR	789113	IfStatement	if ( input [ 1 ] == ' ' )		788396	31					
ANR	789114	Condition	input [ 1 ] == ' '	1402:6:37792:37806	788396	0	True				
ANR	789115	EqualityExpression	input [ 1 ] == ' '		788396	0		==			
ANR	789116	ArrayIndexing	input [ 1 ]		788396	0					
ANR	789117	Identifier	input		788396	0					
ANR	789118	PrimaryExpression	1		788396	1					
ANR	789119	PrimaryExpression	' '		788396	1					
ANR	789120	CompoundStatement		136:3:3187:3214	788396	1					
ANR	789121	IdentifierDeclStatement	char * fn = strdup ( input + 2 ) ;	1403:3:37814:37843	788396	0	True				
ANR	789122	IdentifierDecl	* fn = strdup ( input + 2 )		788396	0					
ANR	789123	IdentifierDeclType	char *		788396	0					
ANR	789124	Identifier	fn		788396	1					
ANR	789125	AssignmentExpression	* fn = strdup ( input + 2 )		788396	2		=			
ANR	789126	Identifier	fn		788396	0					
ANR	789127	CallExpression	strdup ( input + 2 )		788396	1					
ANR	789128	Callee	strdup		788396	0					
ANR	789129	Identifier	strdup		788396	0					
ANR	789130	ArgumentList	input + 2		788396	1					
ANR	789131	Argument	input + 2		788396	0					
ANR	789132	AdditiveExpression	input + 2		788396	0		+			
ANR	789133	Identifier	input		788396	0					
ANR	789134	PrimaryExpression	2		788396	1					
ANR	789135	IfStatement	if ( ! fn )		788396	1					
ANR	789136	Condition	! fn	1404:7:37852:37854	788396	0	True				
ANR	789137	UnaryOperationExpression	! fn		788396	0					
ANR	789138	UnaryOperator	!		788396	0					
ANR	789139	Identifier	fn		788396	1					
ANR	789140	CompoundStatement		132:12:3119:3119	788396	1					
ANR	789141	ExpressionStatement	"eprintf ( ""Unable to allocate memory\\n"" )"	1405:4:37863:37901	788396	0	True				
ANR	789142	CallExpression	"eprintf ( ""Unable to allocate memory\\n"" )"		788396	0					
ANR	789143	Callee	eprintf		788396	0					
ANR	789144	Identifier	eprintf		788396	0					
ANR	789145	ArgumentList	"""Unable to allocate memory\\n"""		788396	1					
ANR	789146	Argument	"""Unable to allocate memory\\n"""		788396	0					
ANR	789147	PrimaryExpression	"""Unable to allocate memory\\n"""		788396	0					
ANR	789148	ReturnStatement	return 0 ;	1406:4:37907:37915	788396	1	True				
ANR	789149	PrimaryExpression	0		788396	0					
ANR	789150	IdentifierDeclStatement	"char * ns = strchr ( fn , ' ' ) ;"	1408:3:37925:37952	788396	2	True				
ANR	789151	IdentifierDecl	"* ns = strchr ( fn , ' ' )"		788396	0					
ANR	789152	IdentifierDeclType	char *		788396	0					
ANR	789153	Identifier	ns		788396	1					
ANR	789154	AssignmentExpression	"* ns = strchr ( fn , ' ' )"		788396	2		=			
ANR	789155	Identifier	ns		788396	0					
ANR	789156	CallExpression	"strchr ( fn , ' ' )"		788396	1					
ANR	789157	Callee	strchr		788396	0					
ANR	789158	Identifier	strchr		788396	0					
ANR	789159	ArgumentList	fn		788396	1					
ANR	789160	Argument	fn		788396	0					
ANR	789161	Identifier	fn		788396	0					
ANR	789162	Argument	' '		788396	1					
ANR	789163	PrimaryExpression	' '		788396	0					
ANR	789164	IfStatement	if ( ns )		788396	3					
ANR	789165	Condition	ns	1409:7:37961:37962	788396	0	True				
ANR	789166	Identifier	ns		788396	0					
ANR	789167	CompoundStatement		138:4:3233:3240	788396	1					
ANR	789168	IdentifierDeclStatement	Sdb * db ;	1410:4:37971:37978	788396	0	True				
ANR	789169	IdentifierDecl	* db		788396	0					
ANR	789170	IdentifierDeclType	Sdb *		788396	0					
ANR	789171	Identifier	db		788396	1					
ANR	789172	ExpressionStatement	* ns ++ = 0	1411:4:37984:37993	788396	1	True				
ANR	789173	AssignmentExpression	* ns ++ = 0		788396	0		=			
ANR	789174	UnaryOperationExpression	* ns ++		788396	0					
ANR	789175	UnaryOperator	*		788396	0					
ANR	789176	PostIncDecOperationExpression	ns ++		788396	1					
ANR	789177	Identifier	ns		788396	0					
ANR	789178	IncDec	++		788396	1					
ANR	789179	PrimaryExpression	0		788396	1					
ANR	789180	IfStatement	if ( r_file_exists ( fn ) )		788396	2					
ANR	789181	Condition	r_file_exists ( fn )	1412:8:38003:38020	788396	0	True				
ANR	789182	CallExpression	r_file_exists ( fn )		788396	0					
ANR	789183	Callee	r_file_exists		788396	0					
ANR	789184	Identifier	r_file_exists		788396	0					
ANR	789185	ArgumentList	fn		788396	1					
ANR	789186	Argument	fn		788396	0					
ANR	789187	Identifier	fn		788396	0					
ANR	789188	CompoundStatement		140:28:3285:3285	788396	1					
ANR	789189	ExpressionStatement	"db = sdb_ns_path ( core -> sdb , ns , 1 )"	1413:5:38030:38065	788396	0	True				
ANR	789190	AssignmentExpression	"db = sdb_ns_path ( core -> sdb , ns , 1 )"		788396	0		=			
ANR	789191	Identifier	db		788396	0					
ANR	789192	CallExpression	"sdb_ns_path ( core -> sdb , ns , 1 )"		788396	1					
ANR	789193	Callee	sdb_ns_path		788396	0					
ANR	789194	Identifier	sdb_ns_path		788396	0					
ANR	789195	ArgumentList	core -> sdb		788396	1					
ANR	789196	Argument	core -> sdb		788396	0					
ANR	789197	PtrMemberAccess	core -> sdb		788396	0					
ANR	789198	Identifier	core		788396	0					
ANR	789199	Identifier	sdb		788396	1					
ANR	789200	Argument	ns		788396	1					
ANR	789201	Identifier	ns		788396	0					
ANR	789202	Argument	1		788396	2					
ANR	789203	PrimaryExpression	1		788396	0					
ANR	789204	IfStatement	if ( db )		788396	1					
ANR	789205	Condition	db	1414:9:38076:38077	788396	0	True				
ANR	789206	Identifier	db		788396	0					
ANR	789207	CompoundStatement		143:6:3350:3384	788396	1					
ANR	789208	IdentifierDeclStatement	"Sdb * newdb = sdb_new ( NULL , fn , 0 ) ;"	1415:6:38088:38122	788396	0	True				
ANR	789209	IdentifierDecl	"* newdb = sdb_new ( NULL , fn , 0 )"		788396	0					
ANR	789210	IdentifierDeclType	Sdb *		788396	0					
ANR	789211	Identifier	newdb		788396	1					
ANR	789212	AssignmentExpression	"* newdb = sdb_new ( NULL , fn , 0 )"		788396	2		=			
ANR	789213	Identifier	newdb		788396	0					
ANR	789214	CallExpression	"sdb_new ( NULL , fn , 0 )"		788396	1					
ANR	789215	Callee	sdb_new		788396	0					
ANR	789216	Identifier	sdb_new		788396	0					
ANR	789217	ArgumentList	NULL		788396	1					
ANR	789218	Argument	NULL		788396	0					
ANR	789219	Identifier	NULL		788396	0					
ANR	789220	Argument	fn		788396	1					
ANR	789221	Identifier	fn		788396	0					
ANR	789222	Argument	0		788396	2					
ANR	789223	PrimaryExpression	0		788396	0					
ANR	789224	IfStatement	if ( newdb )		788396	1					
ANR	789225	Condition	newdb	1416:10:38134:38138	788396	0	True				
ANR	789226	Identifier	newdb		788396	0					
ANR	789227	CompoundStatement		144:17:3403:3403	788396	1					
ANR	789228	ExpressionStatement	"sdb_drain ( db , newdb )"	1417:7:38150:38172	788396	0	True				
ANR	789229	CallExpression	"sdb_drain ( db , newdb )"		788396	0					
ANR	789230	Callee	sdb_drain		788396	0					
ANR	789231	Identifier	sdb_drain		788396	0					
ANR	789232	ArgumentList	db		788396	1					
ANR	789233	Argument	db		788396	0					
ANR	789234	Identifier	db		788396	0					
ANR	789235	Argument	newdb		788396	1					
ANR	789236	Identifier	newdb		788396	0					
ANR	789237	ElseStatement	else		788396	0					
ANR	789238	CompoundStatement		146:13:3449:3449	788396	0					
ANR	789239	ExpressionStatement	"eprintf ( ""Cannot open sdb '%s'\\n"" , fn )"	1419:7:38196:38234	788396	0	True				
ANR	789240	CallExpression	"eprintf ( ""Cannot open sdb '%s'\\n"" , fn )"		788396	0					
ANR	789241	Callee	eprintf		788396	0					
ANR	789242	Identifier	eprintf		788396	0					
ANR	789243	ArgumentList	"""Cannot open sdb '%s'\\n"""		788396	1					
ANR	789244	Argument	"""Cannot open sdb '%s'\\n"""		788396	0					
ANR	789245	PrimaryExpression	"""Cannot open sdb '%s'\\n"""		788396	0					
ANR	789246	Argument	fn		788396	1					
ANR	789247	Identifier	fn		788396	0					
ANR	789248	ElseStatement	else		788396	0					
ANR	789249	CompoundStatement		149:12:3518:3518	788396	0					
ANR	789250	ExpressionStatement	"eprintf ( ""Cannot find sdb '%s'\\n"" , ns )"	1422:6:38264:38302	788396	0	True				
ANR	789251	CallExpression	"eprintf ( ""Cannot find sdb '%s'\\n"" , ns )"		788396	0					
ANR	789252	Callee	eprintf		788396	0					
ANR	789253	Identifier	eprintf		788396	0					
ANR	789254	ArgumentList	"""Cannot find sdb '%s'\\n"""		788396	1					
ANR	789255	Argument	"""Cannot find sdb '%s'\\n"""		788396	0					
ANR	789256	PrimaryExpression	"""Cannot find sdb '%s'\\n"""		788396	0					
ANR	789257	Argument	ns		788396	1					
ANR	789258	Identifier	ns		788396	0					
ANR	789259	ElseStatement	else		788396	0					
ANR	789260	CompoundStatement		152:11:3584:3584	788396	0					
ANR	789261	ExpressionStatement	"eprintf ( ""Cannot open file\\n"" )"	1425:5:38329:38359	788396	0	True				
ANR	789262	CallExpression	"eprintf ( ""Cannot open file\\n"" )"		788396	0					
ANR	789263	Callee	eprintf		788396	0					
ANR	789264	Identifier	eprintf		788396	0					
ANR	789265	ArgumentList	"""Cannot open file\\n"""		788396	1					
ANR	789266	Argument	"""Cannot open file\\n"""		788396	0					
ANR	789267	PrimaryExpression	"""Cannot open file\\n"""		788396	0					
ANR	789268	ElseStatement	else		788396	0					
ANR	789269	CompoundStatement		155:10:3639:3639	788396	0					
ANR	789270	ExpressionStatement	"eprintf ( ""Missing sdb namespace\\n"" )"	1428:4:38383:38418	788396	0	True				
ANR	789271	CallExpression	"eprintf ( ""Missing sdb namespace\\n"" )"		788396	0					
ANR	789272	Callee	eprintf		788396	0					
ANR	789273	Identifier	eprintf		788396	0					
ANR	789274	ArgumentList	"""Missing sdb namespace\\n"""		788396	1					
ANR	789275	Argument	"""Missing sdb namespace\\n"""		788396	0					
ANR	789276	PrimaryExpression	"""Missing sdb namespace\\n"""		788396	0					
ANR	789277	ExpressionStatement	free ( fn )	1430:3:38428:38437	788396	4	True				
ANR	789278	CallExpression	free ( fn )		788396	0					
ANR	789279	Callee	free		788396	0					
ANR	789280	Identifier	free		788396	0					
ANR	789281	ArgumentList	fn		788396	1					
ANR	789282	Argument	fn		788396	0					
ANR	789283	Identifier	fn		788396	0					
ANR	789284	ElseStatement	else		788396	0					
ANR	789285	CompoundStatement		159:9:3710:3710	788396	0					
ANR	789286	ExpressionStatement	"eprintf ( ""Usage: ko [file] [namespace]\\n"" )"	1432:3:38453:38495	788396	0	True				
ANR	789287	CallExpression	"eprintf ( ""Usage: ko [file] [namespace]\\n"" )"		788396	0					
ANR	789288	Callee	eprintf		788396	0					
ANR	789289	Identifier	eprintf		788396	0					
ANR	789290	ArgumentList	"""Usage: ko [file] [namespace]\\n"""		788396	1					
ANR	789291	Argument	"""Usage: ko [file] [namespace]\\n"""		788396	0					
ANR	789292	PrimaryExpression	"""Usage: ko [file] [namespace]\\n"""		788396	0					
ANR	789293	BreakStatement	break ;	1434:2:38503:38508	788396	32	True				
ANR	789294	Label	case 'd' :	1435:1:38511:38519	788396	33	True				
ANR	789295	IfStatement	if ( r_sandbox_enable ( 0 ) )		788396	34					
ANR	789296	Condition	r_sandbox_enable ( 0 )	1436:6:38527:38546	788396	0	True				
ANR	789297	CallExpression	r_sandbox_enable ( 0 )		788396	0					
ANR	789298	Callee	r_sandbox_enable		788396	0					
ANR	789299	Identifier	r_sandbox_enable		788396	0					
ANR	789300	ArgumentList	0		788396	1					
ANR	789301	Argument	0		788396	0					
ANR	789302	PrimaryExpression	0		788396	0					
ANR	789303	CompoundStatement		164:28:3811:3811	788396	1					
ANR	789304	ExpressionStatement	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"	1437:3:38554:38608	788396	0	True				
ANR	789305	CallExpression	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"		788396	0					
ANR	789306	Callee	eprintf		788396	0					
ANR	789307	Identifier	eprintf		788396	0					
ANR	789308	ArgumentList	"""This command is disabled in sandbox mode\\n"""		788396	1					
ANR	789309	Argument	"""This command is disabled in sandbox mode\\n"""		788396	0					
ANR	789310	PrimaryExpression	"""This command is disabled in sandbox mode\\n"""		788396	0					
ANR	789311	ReturnStatement	return 0 ;	1438:3:38613:38621	788396	1	True				
ANR	789312	PrimaryExpression	0		788396	0					
ANR	789313	IfStatement	if ( input [ 1 ] == ' ' )		788396	35					
ANR	789314	Condition	input [ 1 ] == ' '	1440:6:38633:38647	788396	0	True				
ANR	789315	EqualityExpression	input [ 1 ] == ' '		788396	0		==			
ANR	789316	ArrayIndexing	input [ 1 ]		788396	0					
ANR	789317	Identifier	input		788396	0					
ANR	789318	PrimaryExpression	1		788396	1					
ANR	789319	PrimaryExpression	' '		788396	1					
ANR	789320	CompoundStatement		170:3:3951:3978	788396	1					
ANR	789321	IdentifierDeclStatement	char * fn = strdup ( input + 2 ) ;	1441:3:38655:38684	788396	0	True				
ANR	789322	IdentifierDecl	* fn = strdup ( input + 2 )		788396	0					
ANR	789323	IdentifierDeclType	char *		788396	0					
ANR	789324	Identifier	fn		788396	1					
ANR	789325	AssignmentExpression	* fn = strdup ( input + 2 )		788396	2		=			
ANR	789326	Identifier	fn		788396	0					
ANR	789327	CallExpression	strdup ( input + 2 )		788396	1					
ANR	789328	Callee	strdup		788396	0					
ANR	789329	Identifier	strdup		788396	0					
ANR	789330	ArgumentList	input + 2		788396	1					
ANR	789331	Argument	input + 2		788396	0					
ANR	789332	AdditiveExpression	input + 2		788396	0		+			
ANR	789333	Identifier	input		788396	0					
ANR	789334	PrimaryExpression	2		788396	1					
ANR	789335	IdentifierDeclStatement	"char * ns = strchr ( fn , ' ' ) ;"	1442:3:38689:38716	788396	1	True				
ANR	789336	IdentifierDecl	"* ns = strchr ( fn , ' ' )"		788396	0					
ANR	789337	IdentifierDeclType	char *		788396	0					
ANR	789338	Identifier	ns		788396	1					
ANR	789339	AssignmentExpression	"* ns = strchr ( fn , ' ' )"		788396	2		=			
ANR	789340	Identifier	ns		788396	0					
ANR	789341	CallExpression	"strchr ( fn , ' ' )"		788396	1					
ANR	789342	Callee	strchr		788396	0					
ANR	789343	Identifier	strchr		788396	0					
ANR	789344	ArgumentList	fn		788396	1					
ANR	789345	Argument	fn		788396	0					
ANR	789346	Identifier	fn		788396	0					
ANR	789347	Argument	' '		788396	1					
ANR	789348	PrimaryExpression	' '		788396	0					
ANR	789349	IfStatement	if ( ns )		788396	2					
ANR	789350	Condition	ns	1443:7:38725:38726	788396	0	True				
ANR	789351	Identifier	ns		788396	0					
ANR	789352	CompoundStatement		173:4:4012:4052	788396	1					
ANR	789353	ExpressionStatement	* ns ++ = 0	1444:4:38735:38744	788396	0	True				
ANR	789354	AssignmentExpression	* ns ++ = 0		788396	0		=			
ANR	789355	UnaryOperationExpression	* ns ++		788396	0					
ANR	789356	UnaryOperator	*		788396	0					
ANR	789357	PostIncDecOperationExpression	ns ++		788396	1					
ANR	789358	Identifier	ns		788396	0					
ANR	789359	IncDec	++		788396	1					
ANR	789360	PrimaryExpression	0		788396	1					
ANR	789361	IdentifierDeclStatement	"Sdb * db = sdb_ns_path ( core -> sdb , ns , 0 ) ;"	1445:4:38750:38790	788396	1	True				
ANR	789362	IdentifierDecl	"* db = sdb_ns_path ( core -> sdb , ns , 0 )"		788396	0					
ANR	789363	IdentifierDeclType	Sdb *		788396	0					
ANR	789364	Identifier	db		788396	1					
ANR	789365	AssignmentExpression	"* db = sdb_ns_path ( core -> sdb , ns , 0 )"		788396	2		=			
ANR	789366	Identifier	db		788396	0					
ANR	789367	CallExpression	"sdb_ns_path ( core -> sdb , ns , 0 )"		788396	1					
ANR	789368	Callee	sdb_ns_path		788396	0					
ANR	789369	Identifier	sdb_ns_path		788396	0					
ANR	789370	ArgumentList	core -> sdb		788396	1					
ANR	789371	Argument	core -> sdb		788396	0					
ANR	789372	PtrMemberAccess	core -> sdb		788396	0					
ANR	789373	Identifier	core		788396	0					
ANR	789374	Identifier	sdb		788396	1					
ANR	789375	Argument	ns		788396	1					
ANR	789376	Identifier	ns		788396	0					
ANR	789377	Argument	0		788396	2					
ANR	789378	PrimaryExpression	0		788396	0					
ANR	789379	IfStatement	if ( db )		788396	2					
ANR	789380	Condition	db	1446:8:38800:38801	788396	0	True				
ANR	789381	Identifier	db		788396	0					
ANR	789382	CompoundStatement		174:12:4066:4066	788396	1					
ANR	789383	ExpressionStatement	"sdb_file ( db , fn )"	1447:5:38811:38828	788396	0	True				
ANR	789384	CallExpression	"sdb_file ( db , fn )"		788396	0					
ANR	789385	Callee	sdb_file		788396	0					
ANR	789386	Identifier	sdb_file		788396	0					
ANR	789387	ArgumentList	db		788396	1					
ANR	789388	Argument	db		788396	0					
ANR	789389	Identifier	db		788396	0					
ANR	789390	Argument	fn		788396	1					
ANR	789391	Identifier	fn		788396	0					
ANR	789392	ExpressionStatement	sdb_sync ( db )	1448:5:38835:38848	788396	1	True				
ANR	789393	CallExpression	sdb_sync ( db )		788396	0					
ANR	789394	Callee	sdb_sync		788396	0					
ANR	789395	Identifier	sdb_sync		788396	0					
ANR	789396	ArgumentList	db		788396	1					
ANR	789397	Argument	db		788396	0					
ANR	789398	Identifier	db		788396	0					
ANR	789399	ElseStatement	else		788396	0					
ANR	789400	CompoundStatement		177:11:4123:4123	788396	0					
ANR	789401	ExpressionStatement	"eprintf ( ""Cannot find sdb '%s'\\n"" , ns )"	1450:5:38868:38906	788396	0	True				
ANR	789402	CallExpression	"eprintf ( ""Cannot find sdb '%s'\\n"" , ns )"		788396	0					
ANR	789403	Callee	eprintf		788396	0					
ANR	789404	Identifier	eprintf		788396	0					
ANR	789405	ArgumentList	"""Cannot find sdb '%s'\\n"""		788396	1					
ANR	789406	Argument	"""Cannot find sdb '%s'\\n"""		788396	0					
ANR	789407	PrimaryExpression	"""Cannot find sdb '%s'\\n"""		788396	0					
ANR	789408	Argument	ns		788396	1					
ANR	789409	Identifier	ns		788396	0					
ANR	789410	ElseStatement	else		788396	0					
ANR	789411	CompoundStatement		180:10:4186:4186	788396	0					
ANR	789412	ExpressionStatement	"eprintf ( ""Missing sdb namespace\\n"" )"	1453:4:38930:38965	788396	0	True				
ANR	789413	CallExpression	"eprintf ( ""Missing sdb namespace\\n"" )"		788396	0					
ANR	789414	Callee	eprintf		788396	0					
ANR	789415	Identifier	eprintf		788396	0					
ANR	789416	ArgumentList	"""Missing sdb namespace\\n"""		788396	1					
ANR	789417	Argument	"""Missing sdb namespace\\n"""		788396	0					
ANR	789418	PrimaryExpression	"""Missing sdb namespace\\n"""		788396	0					
ANR	789419	ExpressionStatement	free ( fn )	1455:3:38975:38984	788396	3	True				
ANR	789420	CallExpression	free ( fn )		788396	0					
ANR	789421	Callee	free		788396	0					
ANR	789422	Identifier	free		788396	0					
ANR	789423	ArgumentList	fn		788396	1					
ANR	789424	Argument	fn		788396	0					
ANR	789425	Identifier	fn		788396	0					
ANR	789426	ElseStatement	else		788396	0					
ANR	789427	CompoundStatement		184:9:4257:4257	788396	0					
ANR	789428	ExpressionStatement	"eprintf ( ""Usage: kd [file] [namespace]\\n"" )"	1457:3:39000:39042	788396	0	True				
ANR	789429	CallExpression	"eprintf ( ""Usage: kd [file] [namespace]\\n"" )"		788396	0					
ANR	789430	Callee	eprintf		788396	0					
ANR	789431	Identifier	eprintf		788396	0					
ANR	789432	ArgumentList	"""Usage: kd [file] [namespace]\\n"""		788396	1					
ANR	789433	Argument	"""Usage: kd [file] [namespace]\\n"""		788396	0					
ANR	789434	PrimaryExpression	"""Usage: kd [file] [namespace]\\n"""		788396	0					
ANR	789435	BreakStatement	break ;	1459:2:39050:39055	788396	36	True				
ANR	789436	Label	case '?' :	1460:1:39058:39066	788396	37	True				
ANR	789437	ExpressionStatement	"r_core_cmd_help ( core , help_msg_k )"	1461:2:39070:39104	788396	38	True				
ANR	789438	CallExpression	"r_core_cmd_help ( core , help_msg_k )"		788396	0					
ANR	789439	Callee	r_core_cmd_help		788396	0					
ANR	789440	Identifier	r_core_cmd_help		788396	0					
ANR	789441	ArgumentList	core		788396	1					
ANR	789442	Argument	core		788396	0					
ANR	789443	Identifier	core		788396	0					
ANR	789444	Argument	help_msg_k		788396	1					
ANR	789445	Identifier	help_msg_k		788396	0					
ANR	789446	BreakStatement	break ;	1462:2:39108:39113	788396	39	True				
ANR	789447	IfStatement	if ( input [ 0 ] == '\\0' )		788396	8					
ANR	789448	Condition	input [ 0 ] == '\\0'	1465:5:39124:39139	788396	0	True				
ANR	789449	EqualityExpression	input [ 0 ] == '\\0'		788396	0		==			
ANR	789450	ArrayIndexing	input [ 0 ]		788396	0					
ANR	789451	Identifier	input		788396	0					
ANR	789452	PrimaryExpression	0		788396	1					
ANR	789453	PrimaryExpression	'\\0'		788396	1					
ANR	789454	CompoundStatement		193:23:4404:4404	788396	1					
ANR	789455	ReturnStatement	return 0 ;	1467:2:39203:39211	788396	0	True				
ANR	789456	PrimaryExpression	0		788396	0					
ANR	789457	ExpressionStatement	"sp = strchr ( input + 1 , ' ' )"	1470:1:39218:39246	788396	9	True				
ANR	789458	AssignmentExpression	"sp = strchr ( input + 1 , ' ' )"		788396	0		=			
ANR	789459	Identifier	sp		788396	0					
ANR	789460	CallExpression	"strchr ( input + 1 , ' ' )"		788396	1					
ANR	789461	Callee	strchr		788396	0					
ANR	789462	Identifier	strchr		788396	0					
ANR	789463	ArgumentList	input + 1		788396	1					
ANR	789464	Argument	input + 1		788396	0					
ANR	789465	AdditiveExpression	input + 1		788396	0		+			
ANR	789466	Identifier	input		788396	0					
ANR	789467	PrimaryExpression	1		788396	1					
ANR	789468	Argument	' '		788396	1					
ANR	789469	PrimaryExpression	' '		788396	0					
ANR	789470	IfStatement	if ( sp )		788396	10					
ANR	789471	Condition	sp	1471:5:39253:39254	788396	0	True				
ANR	789472	Identifier	sp		788396	0					
ANR	789473	CompoundStatement		200:2:4523:4549	788396	1					
ANR	789474	IdentifierDeclStatement	char * inp = strdup ( input ) ;	1472:2:39261:39287	788396	0	True				
ANR	789475	IdentifierDecl	* inp = strdup ( input )		788396	0					
ANR	789476	IdentifierDeclType	char *		788396	0					
ANR	789477	Identifier	inp		788396	1					
ANR	789478	AssignmentExpression	* inp = strdup ( input )		788396	2		=			
ANR	789479	Identifier	inp		788396	0					
ANR	789480	CallExpression	strdup ( input )		788396	1					
ANR	789481	Callee	strdup		788396	0					
ANR	789482	Identifier	strdup		788396	0					
ANR	789483	ArgumentList	input		788396	1					
ANR	789484	Argument	input		788396	0					
ANR	789485	Identifier	input		788396	0					
ANR	789486	ExpressionStatement	inp [ ( size_t ) ( sp - input ) ] = 0	1473:2:39291:39321	788396	1	True				
ANR	789487	AssignmentExpression	inp [ ( size_t ) ( sp - input ) ] = 0		788396	0		=			
ANR	789488	ArrayIndexing	inp [ ( size_t ) ( sp - input ) ]		788396	0					
ANR	789489	Identifier	inp		788396	0					
ANR	789490	CastExpression	( size_t ) ( sp - input )		788396	1					
ANR	789491	CastTarget	size_t		788396	0					
ANR	789492	AdditiveExpression	sp - input		788396	1		-			
ANR	789493	Identifier	sp		788396	0					
ANR	789494	Identifier	input		788396	1					
ANR	789495	PrimaryExpression	0		788396	1					
ANR	789496	ExpressionStatement	"s = sdb_ns ( core -> sdb , inp + 1 , 1 )"	1474:2:39325:39359	788396	2	True				
ANR	789497	AssignmentExpression	"s = sdb_ns ( core -> sdb , inp + 1 , 1 )"		788396	0		=			
ANR	789498	Identifier	s		788396	0					
ANR	789499	CallExpression	"sdb_ns ( core -> sdb , inp + 1 , 1 )"		788396	1					
ANR	789500	Callee	sdb_ns		788396	0					
ANR	789501	Identifier	sdb_ns		788396	0					
ANR	789502	ArgumentList	core -> sdb		788396	1					
ANR	789503	Argument	core -> sdb		788396	0					
ANR	789504	PtrMemberAccess	core -> sdb		788396	0					
ANR	789505	Identifier	core		788396	0					
ANR	789506	Identifier	sdb		788396	1					
ANR	789507	Argument	inp + 1		788396	1					
ANR	789508	AdditiveExpression	inp + 1		788396	0		+			
ANR	789509	Identifier	inp		788396	0					
ANR	789510	PrimaryExpression	1		788396	1					
ANR	789511	Argument	1		788396	2					
ANR	789512	PrimaryExpression	1		788396	0					
ANR	789513	ExpressionStatement	"out = sdb_querys ( s , NULL , 0 , sp + 1 )"	1475:2:39363:39400	788396	3	True				
ANR	789514	AssignmentExpression	"out = sdb_querys ( s , NULL , 0 , sp + 1 )"		788396	0		=			
ANR	789515	Identifier	out		788396	0					
ANR	789516	CallExpression	"sdb_querys ( s , NULL , 0 , sp + 1 )"		788396	1					
ANR	789517	Callee	sdb_querys		788396	0					
ANR	789518	Identifier	sdb_querys		788396	0					
ANR	789519	ArgumentList	s		788396	1					
ANR	789520	Argument	s		788396	0					
ANR	789521	Identifier	s		788396	0					
ANR	789522	Argument	NULL		788396	1					
ANR	789523	Identifier	NULL		788396	0					
ANR	789524	Argument	0		788396	2					
ANR	789525	PrimaryExpression	0		788396	0					
ANR	789526	Argument	sp + 1		788396	3					
ANR	789527	AdditiveExpression	sp + 1		788396	0		+			
ANR	789528	Identifier	sp		788396	0					
ANR	789529	PrimaryExpression	1		788396	1					
ANR	789530	IfStatement	if ( out )		788396	4					
ANR	789531	Condition	out	1476:6:39408:39410	788396	0	True				
ANR	789532	Identifier	out		788396	0					
ANR	789533	CompoundStatement		204:11:4675:4675	788396	1					
ANR	789534	ExpressionStatement	r_cons_println ( out )	1477:3:39418:39438	788396	0	True				
ANR	789535	CallExpression	r_cons_println ( out )		788396	0					
ANR	789536	Callee	r_cons_println		788396	0					
ANR	789537	Identifier	r_cons_println		788396	0					
ANR	789538	ArgumentList	out		788396	1					
ANR	789539	Argument	out		788396	0					
ANR	789540	Identifier	out		788396	0					
ANR	789541	ExpressionStatement	free ( out )	1478:3:39443:39453	788396	1	True				
ANR	789542	CallExpression	free ( out )		788396	0					
ANR	789543	Callee	free		788396	0					
ANR	789544	Identifier	free		788396	0					
ANR	789545	ArgumentList	out		788396	1					
ANR	789546	Argument	out		788396	0					
ANR	789547	Identifier	out		788396	0					
ANR	789548	ExpressionStatement	free ( inp )	1480:2:39461:39471	788396	5	True				
ANR	789549	CallExpression	free ( inp )		788396	0					
ANR	789550	Callee	free		788396	0					
ANR	789551	Identifier	free		788396	0					
ANR	789552	ArgumentList	inp		788396	1					
ANR	789553	Argument	inp		788396	0					
ANR	789554	Identifier	inp		788396	0					
ANR	789555	ReturnStatement	return 0 ;	1481:2:39475:39483	788396	6	True				
ANR	789556	PrimaryExpression	0		788396	0					
ANR	789557	ReturnStatement	return 0 ;	1483:1:39489:39497	788396	11	True				
ANR	789558	PrimaryExpression	0		788396	0					
ANR	789559	ReturnType	static int		788396	1					
ANR	789560	Identifier	cmd_kuery		788396	2					
ANR	789561	ParameterList	"void * data , const char * input"		788396	3					
ANR	789562	Parameter	void * data	1273:21:34706:34715	788396	0	True				
ANR	789563	ParameterType	void *		788396	0					
ANR	789564	Identifier	data		788396	1					
ANR	789565	Parameter	const char * input	1273:33:34718:34734	788396	1	True				
ANR	789566	ParameterType	const char *		788396	0					
ANR	789567	Identifier	input		788396	1					
ANR	789568	CFGEntryNode	ENTRY		788396		True				
ANR	789569	CFGExitNode	EXIT		788396		True				
ANR	789570	InfiniteForNode	true		788396		True				
ANR	789571	Symbol	* sp		788396						
ANR	789572	Symbol	data		788396						
ANR	789573	Symbol	next_cmd		788396						
ANR	789574	Symbol	r_cons_fgets		788396						
ANR	789575	Symbol	* ns ++		788396						
ANR	789576	Symbol	* input		788396						
ANR	789577	Symbol	strchr		788396						
ANR	789578	Symbol	* line		788396						
ANR	789579	Symbol	line -> sdbshell_hist		788396						
ANR	789580	Symbol	& r_line_hist_cmd_down		788396						
ANR	789581	Symbol	line -> sdbshell_hist_iter		788396						
ANR	789582	Symbol	cur_cmd		788396						
ANR	789583	Symbol	buflen		788396						
ANR	789584	Symbol	sdb_ns_path		788396						
ANR	789585	Symbol	r_str_new		788396						
ANR	789586	Symbol	strcmp		788396						
ANR	789587	Symbol	r_cons_is_interactive		788396						
ANR	789588	Symbol	* buf		788396						
ANR	789589	Symbol	NULL		788396						
ANR	789590	Symbol	newdb		788396						
ANR	789591	Symbol	r_list_newf		788396						
ANR	789592	Symbol	sdb_hist -> head		788396						
ANR	789593	Symbol	* n ++		788396						
ANR	789594	Symbol	sdb_querys		788396						
ANR	789595	Symbol	r_list_get_n		788396						
ANR	789596	Symbol	* inp		788396						
ANR	789597	Symbol	& r_line_hist_sdb_up		788396						
ANR	789598	Symbol	input		788396						
ANR	789599	Symbol	core		788396						
ANR	789600	Symbol	sdb_new		788396						
ANR	789601	Symbol	* temp_storage		788396						
ANR	789602	Symbol	* out		788396						
ANR	789603	Symbol	& r_line_hist_cmd_up		788396						
ANR	789604	Symbol	temp_storage		788396						
ANR	789605	Symbol	* core -> cons		788396						
ANR	789606	Symbol	ns		788396						
ANR	789607	Symbol	r_str_ndup		788396						
ANR	789608	Symbol	line		788396						
ANR	789609	Symbol	r_sandbox_enable		788396						
ANR	789610	Symbol	core -> sdb		788396						
ANR	789611	Symbol	* core		788396						
ANR	789612	Symbol	fn		788396						
ANR	789613	Symbol	r_str_newf		788396						
ANR	789614	Symbol	& r_line_hist_sdb_down		788396						
ANR	789615	Symbol	sdb_hist		788396						
ANR	789616	Symbol	out		788396						
ANR	789617	Symbol	help_msg_k		788396						
ANR	789618	Symbol	core -> cons		788396						
ANR	789619	Symbol	core -> http_up		788396						
ANR	789620	Symbol	temp_pos		788396						
ANR	789621	Symbol	free		788396						
ANR	789622	Symbol	sp		788396						
ANR	789623	Symbol	callback_foreach_kv		788396						
ANR	789624	Symbol	* * core		788396						
ANR	789625	Symbol	false		788396						
ANR	789626	Symbol	inp		788396						
ANR	789627	Symbol	n		788396						
ANR	789628	Symbol	o		788396						
ANR	789629	Symbol	p		788396						
ANR	789630	Symbol	* sdb_hist		788396						
ANR	789631	Symbol	buf		788396						
ANR	789632	Symbol	s		788396						
ANR	789633	Symbol	cur_pos		788396						
ANR	789634	Symbol	temp_cmd		788396						
ANR	789635	Symbol	strdup		788396						
ANR	789636	Symbol	core -> cons -> line		788396						
ANR	789637	Symbol	r_file_exists		788396						
ANR	789638	Symbol	r_list_length		788396						
ANR	789639	Symbol	db		788396						
ANR	789640	Symbol	sdb_ns		788396						
ANR	789641	Function	cmd_bsize	1486:0:39502:40791							
ANR	789642	FunctionDef	"cmd_bsize (void * data , const char * input)"		789641	0					
ANR	789643	CompoundStatement		1486:52:39554:40791	789641	0					
ANR	789644	IdentifierDeclStatement	ut64 n ;	1487:1:39557:39563	789641	0	True				
ANR	789645	IdentifierDecl	n		789641	0					
ANR	789646	IdentifierDeclType	ut64		789641	0					
ANR	789647	Identifier	n		789641	1					
ANR	789648	IdentifierDeclStatement	RFlagItem * flag ;	1488:1:39566:39581	789641	1	True				
ANR	789649	IdentifierDecl	* flag		789641	0					
ANR	789650	IdentifierDeclType	RFlagItem *		789641	0					
ANR	789651	Identifier	flag		789641	1					
ANR	789652	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1489:1:39584:39611	789641	2	True				
ANR	789653	IdentifierDecl	* core = ( RCore * ) data		789641	0					
ANR	789654	IdentifierDeclType	RCore *		789641	0					
ANR	789655	Identifier	core		789641	1					
ANR	789656	AssignmentExpression	* core = ( RCore * ) data		789641	2		=			
ANR	789657	Identifier	core		789641	0					
ANR	789658	CastExpression	( RCore * ) data		789641	1					
ANR	789659	CastTarget	RCore *		789641	0					
ANR	789660	Identifier	data		789641	1					
ANR	789661	SwitchStatement	switch ( input [ 0 ] )		789641	3					
ANR	789662	Condition	input [ 0 ]	1490:9:39622:39629	789641	0	True				
ANR	789663	ArrayIndexing	input [ 0 ]		789641	0					
ANR	789664	Identifier	input		789641	0					
ANR	789665	PrimaryExpression	0		789641	1					
ANR	789666	CompoundStatement		5:19:77:77	789641	1					
ANR	789667	Label	case 'm' :	1491:1:39635:39643	789641	0	True				
ANR	789668	ExpressionStatement	"n = r_num_math ( core -> num , input + 1 )"	1492:2:39655:39692	789641	1	True				
ANR	789669	AssignmentExpression	"n = r_num_math ( core -> num , input + 1 )"		789641	0		=			
ANR	789670	Identifier	n		789641	0					
ANR	789671	CallExpression	"r_num_math ( core -> num , input + 1 )"		789641	1					
ANR	789672	Callee	r_num_math		789641	0					
ANR	789673	Identifier	r_num_math		789641	0					
ANR	789674	ArgumentList	core -> num		789641	1					
ANR	789675	Argument	core -> num		789641	0					
ANR	789676	PtrMemberAccess	core -> num		789641	0					
ANR	789677	Identifier	core		789641	0					
ANR	789678	Identifier	num		789641	1					
ANR	789679	Argument	input + 1		789641	1					
ANR	789680	AdditiveExpression	input + 1		789641	0		+			
ANR	789681	Identifier	input		789641	0					
ANR	789682	PrimaryExpression	1		789641	1					
ANR	789683	IfStatement	if ( n > 1 )		789641	2					
ANR	789684	Condition	n > 1	1493:6:39700:39704	789641	0	True				
ANR	789685	RelationalExpression	n > 1		789641	0		>			
ANR	789686	Identifier	n		789641	0					
ANR	789687	PrimaryExpression	1		789641	1					
ANR	789688	CompoundStatement		8:13:152:152	789641	1					
ANR	789689	ExpressionStatement	core -> blocksize_max = n	1494:3:39712:39735	789641	0	True				
ANR	789690	AssignmentExpression	core -> blocksize_max = n		789641	0		=			
ANR	789691	PtrMemberAccess	core -> blocksize_max		789641	0					
ANR	789692	Identifier	core		789641	0					
ANR	789693	Identifier	blocksize_max		789641	1					
ANR	789694	Identifier	n		789641	1					
ANR	789695	ElseStatement	else		789641	0					
ANR	789696	CompoundStatement		10:9:191:191	789641	0					
ANR	789697	ExpressionStatement	"r_cons_printf ( ""0x%x\\n"" , ( ut32 ) core -> blocksize_max )"	1496:3:39751:39802	789641	0	True				
ANR	789698	CallExpression	"r_cons_printf ( ""0x%x\\n"" , ( ut32 ) core -> blocksize_max )"		789641	0					
ANR	789699	Callee	r_cons_printf		789641	0					
ANR	789700	Identifier	r_cons_printf		789641	0					
ANR	789701	ArgumentList	"""0x%x\\n"""		789641	1					
ANR	789702	Argument	"""0x%x\\n"""		789641	0					
ANR	789703	PrimaryExpression	"""0x%x\\n"""		789641	0					
ANR	789704	Argument	( ut32 ) core -> blocksize_max		789641	1					
ANR	789705	CastExpression	( ut32 ) core -> blocksize_max		789641	0					
ANR	789706	CastTarget	ut32		789641	0					
ANR	789707	PtrMemberAccess	core -> blocksize_max		789641	1					
ANR	789708	Identifier	core		789641	0					
ANR	789709	Identifier	blocksize_max		789641	1					
ANR	789710	BreakStatement	break ;	1498:2:39810:39815	789641	3	True				
ANR	789711	Label	case '+' :	1499:1:39818:39826	789641	4	True				
ANR	789712	ExpressionStatement	"n = r_num_math ( core -> num , input + 1 )"	1500:2:39838:39875	789641	5	True				
ANR	789713	AssignmentExpression	"n = r_num_math ( core -> num , input + 1 )"		789641	0		=			
ANR	789714	Identifier	n		789641	0					
ANR	789715	CallExpression	"r_num_math ( core -> num , input + 1 )"		789641	1					
ANR	789716	Callee	r_num_math		789641	0					
ANR	789717	Identifier	r_num_math		789641	0					
ANR	789718	ArgumentList	core -> num		789641	1					
ANR	789719	Argument	core -> num		789641	0					
ANR	789720	PtrMemberAccess	core -> num		789641	0					
ANR	789721	Identifier	core		789641	0					
ANR	789722	Identifier	num		789641	1					
ANR	789723	Argument	input + 1		789641	1					
ANR	789724	AdditiveExpression	input + 1		789641	0		+			
ANR	789725	Identifier	input		789641	0					
ANR	789726	PrimaryExpression	1		789641	1					
ANR	789727	ExpressionStatement	"r_core_block_size ( core , core -> blocksize + n )"	1501:2:39879:39924	789641	6	True				
ANR	789728	CallExpression	"r_core_block_size ( core , core -> blocksize + n )"		789641	0					
ANR	789729	Callee	r_core_block_size		789641	0					
ANR	789730	Identifier	r_core_block_size		789641	0					
ANR	789731	ArgumentList	core		789641	1					
ANR	789732	Argument	core		789641	0					
ANR	789733	Identifier	core		789641	0					
ANR	789734	Argument	core -> blocksize + n		789641	1					
ANR	789735	AdditiveExpression	core -> blocksize + n		789641	0		+			
ANR	789736	PtrMemberAccess	core -> blocksize		789641	0					
ANR	789737	Identifier	core		789641	0					
ANR	789738	Identifier	blocksize		789641	1					
ANR	789739	Identifier	n		789641	1					
ANR	789740	BreakStatement	break ;	1502:2:39928:39933	789641	7	True				
ANR	789741	Label	case '-' :	1503:1:39936:39944	789641	8	True				
ANR	789742	ExpressionStatement	"n = r_num_math ( core -> num , input + 1 )"	1504:2:39956:39993	789641	9	True				
ANR	789743	AssignmentExpression	"n = r_num_math ( core -> num , input + 1 )"		789641	0		=			
ANR	789744	Identifier	n		789641	0					
ANR	789745	CallExpression	"r_num_math ( core -> num , input + 1 )"		789641	1					
ANR	789746	Callee	r_num_math		789641	0					
ANR	789747	Identifier	r_num_math		789641	0					
ANR	789748	ArgumentList	core -> num		789641	1					
ANR	789749	Argument	core -> num		789641	0					
ANR	789750	PtrMemberAccess	core -> num		789641	0					
ANR	789751	Identifier	core		789641	0					
ANR	789752	Identifier	num		789641	1					
ANR	789753	Argument	input + 1		789641	1					
ANR	789754	AdditiveExpression	input + 1		789641	0		+			
ANR	789755	Identifier	input		789641	0					
ANR	789756	PrimaryExpression	1		789641	1					
ANR	789757	ExpressionStatement	"r_core_block_size ( core , core -> blocksize - n )"	1505:2:39997:40042	789641	10	True				
ANR	789758	CallExpression	"r_core_block_size ( core , core -> blocksize - n )"		789641	0					
ANR	789759	Callee	r_core_block_size		789641	0					
ANR	789760	Identifier	r_core_block_size		789641	0					
ANR	789761	ArgumentList	core		789641	1					
ANR	789762	Argument	core		789641	0					
ANR	789763	Identifier	core		789641	0					
ANR	789764	Argument	core -> blocksize - n		789641	1					
ANR	789765	AdditiveExpression	core -> blocksize - n		789641	0		-			
ANR	789766	PtrMemberAccess	core -> blocksize		789641	0					
ANR	789767	Identifier	core		789641	0					
ANR	789768	Identifier	blocksize		789641	1					
ANR	789769	Identifier	n		789641	1					
ANR	789770	BreakStatement	break ;	1506:2:40046:40051	789641	11	True				
ANR	789771	Label	case 'f' :	1507:1:40054:40062	789641	12	True				
ANR	789772	IfStatement	if ( input [ 1 ] == ' ' )		789641	13					
ANR	789773	Condition	input [ 1 ] == ' '	1508:6:40078:40092	789641	0	True				
ANR	789774	EqualityExpression	input [ 1 ] == ' '		789641	0		==			
ANR	789775	ArrayIndexing	input [ 1 ]		789641	0					
ANR	789776	Identifier	input		789641	0					
ANR	789777	PrimaryExpression	1		789641	1					
ANR	789778	PrimaryExpression	' '		789641	1					
ANR	789779	CompoundStatement		23:23:540:540	789641	1					
ANR	789780	ExpressionStatement	"flag = r_flag_get ( core -> flags , input + 2 )"	1509:3:40100:40142	789641	0	True				
ANR	789781	AssignmentExpression	"flag = r_flag_get ( core -> flags , input + 2 )"		789641	0		=			
ANR	789782	Identifier	flag		789641	0					
ANR	789783	CallExpression	"r_flag_get ( core -> flags , input + 2 )"		789641	1					
ANR	789784	Callee	r_flag_get		789641	0					
ANR	789785	Identifier	r_flag_get		789641	0					
ANR	789786	ArgumentList	core -> flags		789641	1					
ANR	789787	Argument	core -> flags		789641	0					
ANR	789788	PtrMemberAccess	core -> flags		789641	0					
ANR	789789	Identifier	core		789641	0					
ANR	789790	Identifier	flags		789641	1					
ANR	789791	Argument	input + 2		789641	1					
ANR	789792	AdditiveExpression	input + 2		789641	0		+			
ANR	789793	Identifier	input		789641	0					
ANR	789794	PrimaryExpression	2		789641	1					
ANR	789795	IfStatement	if ( flag )		789641	1					
ANR	789796	Condition	flag	1510:7:40151:40154	789641	0	True				
ANR	789797	Identifier	flag		789641	0					
ANR	789798	CompoundStatement		25:13:602:602	789641	1					
ANR	789799	ExpressionStatement	"r_core_block_size ( core , flag -> size )"	1511:4:40163:40199	789641	0	True				
ANR	789800	CallExpression	"r_core_block_size ( core , flag -> size )"		789641	0					
ANR	789801	Callee	r_core_block_size		789641	0					
ANR	789802	Identifier	r_core_block_size		789641	0					
ANR	789803	ArgumentList	core		789641	1					
ANR	789804	Argument	core		789641	0					
ANR	789805	Identifier	core		789641	0					
ANR	789806	Argument	flag -> size		789641	1					
ANR	789807	PtrMemberAccess	flag -> size		789641	0					
ANR	789808	Identifier	flag		789641	0					
ANR	789809	Identifier	size		789641	1					
ANR	789810	ElseStatement	else		789641	0					
ANR	789811	CompoundStatement		27:10:656:656	789641	0					
ANR	789812	ExpressionStatement	"eprintf ( ""bf: cannot find flag named '%s'\\n"" , input + 2 )"	1513:4:40217:40273	789641	0	True				
ANR	789813	CallExpression	"eprintf ( ""bf: cannot find flag named '%s'\\n"" , input + 2 )"		789641	0					
ANR	789814	Callee	eprintf		789641	0					
ANR	789815	Identifier	eprintf		789641	0					
ANR	789816	ArgumentList	"""bf: cannot find flag named '%s'\\n"""		789641	1					
ANR	789817	Argument	"""bf: cannot find flag named '%s'\\n"""		789641	0					
ANR	789818	PrimaryExpression	"""bf: cannot find flag named '%s'\\n"""		789641	0					
ANR	789819	Argument	input + 2		789641	1					
ANR	789820	AdditiveExpression	input + 2		789641	0		+			
ANR	789821	Identifier	input		789641	0					
ANR	789822	PrimaryExpression	2		789641	1					
ANR	789823	ElseStatement	else		789641	0					
ANR	789824	CompoundStatement		30:9:734:734	789641	0					
ANR	789825	ExpressionStatement	"eprintf ( ""Usage: bf [flagname]\\n"" )"	1516:3:40294:40328	789641	0	True				
ANR	789826	CallExpression	"eprintf ( ""Usage: bf [flagname]\\n"" )"		789641	0					
ANR	789827	Callee	eprintf		789641	0					
ANR	789828	Identifier	eprintf		789641	0					
ANR	789829	ArgumentList	"""Usage: bf [flagname]\\n"""		789641	1					
ANR	789830	Argument	"""Usage: bf [flagname]\\n"""		789641	0					
ANR	789831	PrimaryExpression	"""Usage: bf [flagname]\\n"""		789641	0					
ANR	789832	BreakStatement	break ;	1518:2:40336:40341	789641	14	True				
ANR	789833	Label	case 'j' :	1519:1:40344:40352	789641	15	True				
ANR	789834	ExpressionStatement	"r_cons_printf ( ""{\\""blocksize\\"":%d,\\""blocksize_limit\\"":%d}\\n"" , core -> blocksize , core -> blocksize_max )"	1520:2:40364:40463	789641	16	True				
ANR	789835	CallExpression	"r_cons_printf ( ""{\\""blocksize\\"":%d,\\""blocksize_limit\\"":%d}\\n"" , core -> blocksize , core -> blocksize_max )"		789641	0					
ANR	789836	Callee	r_cons_printf		789641	0					
ANR	789837	Identifier	r_cons_printf		789641	0					
ANR	789838	ArgumentList	"""{\\""blocksize\\"":%d,\\""blocksize_limit\\"":%d}\\n"""		789641	1					
ANR	789839	Argument	"""{\\""blocksize\\"":%d,\\""blocksize_limit\\"":%d}\\n"""		789641	0					
ANR	789840	PrimaryExpression	"""{\\""blocksize\\"":%d,\\""blocksize_limit\\"":%d}\\n"""		789641	0					
ANR	789841	Argument	core -> blocksize		789641	1					
ANR	789842	PtrMemberAccess	core -> blocksize		789641	0					
ANR	789843	Identifier	core		789641	0					
ANR	789844	Identifier	blocksize		789641	1					
ANR	789845	Argument	core -> blocksize_max		789641	2					
ANR	789846	PtrMemberAccess	core -> blocksize_max		789641	0					
ANR	789847	Identifier	core		789641	0					
ANR	789848	Identifier	blocksize_max		789641	1					
ANR	789849	BreakStatement	break ;	1521:2:40467:40472	789641	17	True				
ANR	789850	Label	case '*' :	1522:1:40475:40483	789641	18	True				
ANR	789851	ExpressionStatement	"r_cons_printf ( ""b 0x%x\\n"" , core -> blocksize )"	1523:2:40495:40538	789641	19	True				
ANR	789852	CallExpression	"r_cons_printf ( ""b 0x%x\\n"" , core -> blocksize )"		789641	0					
ANR	789853	Callee	r_cons_printf		789641	0					
ANR	789854	Identifier	r_cons_printf		789641	0					
ANR	789855	ArgumentList	"""b 0x%x\\n"""		789641	1					
ANR	789856	Argument	"""b 0x%x\\n"""		789641	0					
ANR	789857	PrimaryExpression	"""b 0x%x\\n"""		789641	0					
ANR	789858	Argument	core -> blocksize		789641	1					
ANR	789859	PtrMemberAccess	core -> blocksize		789641	0					
ANR	789860	Identifier	core		789641	0					
ANR	789861	Identifier	blocksize		789641	1					
ANR	789862	BreakStatement	break ;	1524:2:40542:40547	789641	20	True				
ANR	789863	Label	case '\\0' :	1525:1:40550:40559	789641	21	True				
ANR	789864	ExpressionStatement	"r_cons_printf ( ""0x%x\\n"" , core -> blocksize )"	1526:2:40570:40611	789641	22	True				
ANR	789865	CallExpression	"r_cons_printf ( ""0x%x\\n"" , core -> blocksize )"		789641	0					
ANR	789866	Callee	r_cons_printf		789641	0					
ANR	789867	Identifier	r_cons_printf		789641	0					
ANR	789868	ArgumentList	"""0x%x\\n"""		789641	1					
ANR	789869	Argument	"""0x%x\\n"""		789641	0					
ANR	789870	PrimaryExpression	"""0x%x\\n"""		789641	0					
ANR	789871	Argument	core -> blocksize		789641	1					
ANR	789872	PtrMemberAccess	core -> blocksize		789641	0					
ANR	789873	Identifier	core		789641	0					
ANR	789874	Identifier	blocksize		789641	1					
ANR	789875	BreakStatement	break ;	1527:2:40615:40620	789641	23	True				
ANR	789876	Label	case ' ' :	1528:1:40623:40631	789641	24	True				
ANR	789877	ExpressionStatement	"r_core_block_size ( core , r_num_math ( core -> num , input ) )"	1529:2:40635:40690	789641	25	True				
ANR	789878	CallExpression	"r_core_block_size ( core , r_num_math ( core -> num , input ) )"		789641	0					
ANR	789879	Callee	r_core_block_size		789641	0					
ANR	789880	Identifier	r_core_block_size		789641	0					
ANR	789881	ArgumentList	core		789641	1					
ANR	789882	Argument	core		789641	0					
ANR	789883	Identifier	core		789641	0					
ANR	789884	Argument	"r_num_math ( core -> num , input )"		789641	1					
ANR	789885	CallExpression	"r_num_math ( core -> num , input )"		789641	0					
ANR	789886	Callee	r_num_math		789641	0					
ANR	789887	Identifier	r_num_math		789641	0					
ANR	789888	ArgumentList	core -> num		789641	1					
ANR	789889	Argument	core -> num		789641	0					
ANR	789890	PtrMemberAccess	core -> num		789641	0					
ANR	789891	Identifier	core		789641	0					
ANR	789892	Identifier	num		789641	1					
ANR	789893	Argument	input		789641	1					
ANR	789894	Identifier	input		789641	0					
ANR	789895	BreakStatement	break ;	1530:2:40694:40699	789641	26	True				
ANR	789896	Label	default :	1531:1:40702:40709	789641	27	True				
ANR	789897	Identifier	default		789641	0					
ANR	789898	Label	case '?' :	1532:1:40712:40720	789641	28	True				
ANR	789899	ExpressionStatement	"r_core_cmd_help ( core , help_msg_b )"	1533:2:40732:40766	789641	29	True				
ANR	789900	CallExpression	"r_core_cmd_help ( core , help_msg_b )"		789641	0					
ANR	789901	Callee	r_core_cmd_help		789641	0					
ANR	789902	Identifier	r_core_cmd_help		789641	0					
ANR	789903	ArgumentList	core		789641	1					
ANR	789904	Argument	core		789641	0					
ANR	789905	Identifier	core		789641	0					
ANR	789906	Argument	help_msg_b		789641	1					
ANR	789907	Identifier	help_msg_b		789641	0					
ANR	789908	BreakStatement	break ;	1534:2:40770:40775	789641	30	True				
ANR	789909	ReturnStatement	return 0 ;	1536:1:40781:40789	789641	4	True				
ANR	789910	PrimaryExpression	0		789641	0					
ANR	789911	ReturnType	static int		789641	1					
ANR	789912	Identifier	cmd_bsize		789641	2					
ANR	789913	ParameterList	"void * data , const char * input"		789641	3					
ANR	789914	Parameter	void * data	1486:21:39523:39532	789641	0	True				
ANR	789915	ParameterType	void *		789641	0					
ANR	789916	Identifier	data		789641	1					
ANR	789917	Parameter	const char * input	1486:33:39535:39551	789641	1	True				
ANR	789918	ParameterType	const char *		789641	0					
ANR	789919	Identifier	input		789641	1					
ANR	789920	CFGEntryNode	ENTRY		789641		True				
ANR	789921	CFGExitNode	EXIT		789641		True				
ANR	789922	Symbol	core -> blocksize		789641						
ANR	789923	Symbol	r_flag_get		789641						
ANR	789924	Symbol	flag		789641						
ANR	789925	Symbol	data		789641						
ANR	789926	Symbol	core -> blocksize_max		789641						
ANR	789927	Symbol	help_msg_b		789641						
ANR	789928	Symbol	* input		789641						
ANR	789929	Symbol	* core		789641						
ANR	789930	Symbol	core -> flags		789641						
ANR	789931	Symbol	n		789641						
ANR	789932	Symbol	r_num_math		789641						
ANR	789933	Symbol	input		789641						
ANR	789934	Symbol	core		789641						
ANR	789935	Symbol	core -> num		789641						
ANR	789936	Symbol	* flag		789641						
ANR	789937	Symbol	flag -> size		789641						
ANR	789938	Function	__runMain	1539:0:40794:41004							
ANR	789939	FunctionDef	"__runMain (RMainCallback cb , const char * arg)"		789938	0					
ANR	789940	CompoundStatement		1539:56:40850:41004	789938	0					
ANR	789941	IdentifierDeclStatement	char * a = r_str_trim_dup ( arg ) ;	1540:1:40853:40883	789938	0	True				
ANR	789942	IdentifierDecl	* a = r_str_trim_dup ( arg )		789938	0					
ANR	789943	IdentifierDeclType	char *		789938	0					
ANR	789944	Identifier	a		789938	1					
ANR	789945	AssignmentExpression	* a = r_str_trim_dup ( arg )		789938	2		=			
ANR	789946	Identifier	a		789938	0					
ANR	789947	CallExpression	r_str_trim_dup ( arg )		789938	1					
ANR	789948	Callee	r_str_trim_dup		789938	0					
ANR	789949	Identifier	r_str_trim_dup		789938	0					
ANR	789950	ArgumentList	arg		789938	1					
ANR	789951	Argument	arg		789938	0					
ANR	789952	Identifier	arg		789938	0					
ANR	789953	IdentifierDeclStatement	int argc = 0 ;	1541:1:40886:40898	789938	1	True				
ANR	789954	IdentifierDecl	argc = 0		789938	0					
ANR	789955	IdentifierDeclType	int		789938	0					
ANR	789956	Identifier	argc		789938	1					
ANR	789957	AssignmentExpression	argc = 0		789938	2		=			
ANR	789958	Identifier	argc		789938	0					
ANR	789959	PrimaryExpression	0		789938	1					
ANR	789960	IdentifierDeclStatement	"char * * args = r_str_argv ( a , & argc ) ;"	1542:1:40901:40936	789938	2	True				
ANR	789961	IdentifierDecl	"* * args = r_str_argv ( a , & argc )"		789938	0					
ANR	789962	IdentifierDeclType	char * *		789938	0					
ANR	789963	Identifier	args		789938	1					
ANR	789964	AssignmentExpression	"* * args = r_str_argv ( a , & argc )"		789938	2		=			
ANR	789965	Identifier	args		789938	0					
ANR	789966	CallExpression	"r_str_argv ( a , & argc )"		789938	1					
ANR	789967	Callee	r_str_argv		789938	0					
ANR	789968	Identifier	r_str_argv		789938	0					
ANR	789969	ArgumentList	a		789938	1					
ANR	789970	Argument	a		789938	0					
ANR	789971	Identifier	a		789938	0					
ANR	789972	Argument	& argc		789938	1					
ANR	789973	UnaryOperationExpression	& argc		789938	0					
ANR	789974	UnaryOperator	&		789938	0					
ANR	789975	Identifier	argc		789938	1					
ANR	789976	IdentifierDeclStatement	"int res = cb ( argc , args ) ;"	1543:1:40939:40964	789938	3	True				
ANR	789977	IdentifierDecl	"res = cb ( argc , args )"		789938	0					
ANR	789978	IdentifierDeclType	int		789938	0					
ANR	789979	Identifier	res		789938	1					
ANR	789980	AssignmentExpression	"res = cb ( argc , args )"		789938	2		=			
ANR	789981	Identifier	res		789938	0					
ANR	789982	CallExpression	"cb ( argc , args )"		789938	1					
ANR	789983	Callee	cb		789938	0					
ANR	789984	Identifier	cb		789938	0					
ANR	789985	ArgumentList	argc		789938	1					
ANR	789986	Argument	argc		789938	0					
ANR	789987	Identifier	argc		789938	0					
ANR	789988	Argument	args		789938	1					
ANR	789989	Identifier	args		789938	0					
ANR	789990	ExpressionStatement	free ( args )	1544:1:40967:40978	789938	4	True				
ANR	789991	CallExpression	free ( args )		789938	0					
ANR	789992	Callee	free		789938	0					
ANR	789993	Identifier	free		789938	0					
ANR	789994	ArgumentList	args		789938	1					
ANR	789995	Argument	args		789938	0					
ANR	789996	Identifier	args		789938	0					
ANR	789997	ExpressionStatement	free ( a )	1545:1:40981:40989	789938	5	True				
ANR	789998	CallExpression	free ( a )		789938	0					
ANR	789999	Callee	free		789938	0					
ANR	790000	Identifier	free		789938	0					
ANR	790001	ArgumentList	a		789938	1					
ANR	790002	Argument	a		789938	0					
ANR	790003	Identifier	a		789938	0					
ANR	790004	ReturnStatement	return res ;	1546:1:40992:41002	789938	6	True				
ANR	790005	Identifier	res		789938	0					
ANR	790006	ReturnType	static int		789938	1					
ANR	790007	Identifier	__runMain		789938	2					
ANR	790008	ParameterList	"RMainCallback cb , const char * arg"		789938	3					
ANR	790009	Parameter	RMainCallback cb	1539:21:40815:40830	789938	0	True				
ANR	790010	ParameterType	RMainCallback		789938	0					
ANR	790011	Identifier	cb		789938	1					
ANR	790012	Parameter	const char * arg	1539:39:40833:40847	789938	1	True				
ANR	790013	ParameterType	const char *		789938	0					
ANR	790014	Identifier	arg		789938	1					
ANR	790015	CFGEntryNode	ENTRY		789938		True				
ANR	790016	CFGExitNode	EXIT		789938		True				
ANR	790017	Symbol	argc		789938						
ANR	790018	Symbol	args		789938						
ANR	790019	Symbol	a		789938						
ANR	790020	Symbol	res		789938						
ANR	790021	Symbol	arg		789938						
ANR	790022	Symbol	r_str_trim_dup		789938						
ANR	790023	Symbol	cb		789938						
ANR	790024	Symbol	r_str_argv		789938						
ANR	790025	Symbol	& argc		789938						
ANR	790026	Function	cmd_r2cmd	1549:0:41007:42285							
ANR	790027	FunctionDef	"cmd_r2cmd (RCore * core , const char * _input)"		790026	0					
ANR	790028	CompoundStatement		1549:55:41062:42285	790026	0					
ANR	790029	IdentifierDeclStatement	"char * input = r_str_newf ( ""r%s"" , _input ) ;"	1550:1:41065:41105	790026	0	True				
ANR	790030	IdentifierDecl	"* input = r_str_newf ( ""r%s"" , _input )"		790026	0					
ANR	790031	IdentifierDeclType	char *		790026	0					
ANR	790032	Identifier	input		790026	1					
ANR	790033	AssignmentExpression	"* input = r_str_newf ( ""r%s"" , _input )"		790026	2		=			
ANR	790034	Identifier	input		790026	0					
ANR	790035	CallExpression	"r_str_newf ( ""r%s"" , _input )"		790026	1					
ANR	790036	Callee	r_str_newf		790026	0					
ANR	790037	Identifier	r_str_newf		790026	0					
ANR	790038	ArgumentList	"""r%s"""		790026	1					
ANR	790039	Argument	"""r%s"""		790026	0					
ANR	790040	PrimaryExpression	"""r%s"""		790026	0					
ANR	790041	Argument	_input		790026	1					
ANR	790042	Identifier	_input		790026	0					
ANR	790043	IdentifierDeclStatement	int rc = 0 ;	1551:1:41108:41118	790026	1	True				
ANR	790044	IdentifierDecl	rc = 0		790026	0					
ANR	790045	IdentifierDeclType	int		790026	0					
ANR	790046	Identifier	rc		790026	1					
ANR	790047	AssignmentExpression	rc = 0		790026	2		=			
ANR	790048	Identifier	rc		790026	0					
ANR	790049	PrimaryExpression	0		790026	1					
ANR	790050	IfStatement	"if ( r_str_startswith ( input , ""rax2"" ) )"		790026	2					
ANR	790051	Condition	"r_str_startswith ( input , ""rax2"" )"	1552:5:41125:41156	790026	0	True				
ANR	790052	CallExpression	"r_str_startswith ( input , ""rax2"" )"		790026	0					
ANR	790053	Callee	r_str_startswith		790026	0					
ANR	790054	Identifier	r_str_startswith		790026	0					
ANR	790055	ArgumentList	input		790026	1					
ANR	790056	Argument	input		790026	0					
ANR	790057	Identifier	input		790026	0					
ANR	790058	Argument	"""rax2"""		790026	1					
ANR	790059	PrimaryExpression	"""rax2"""		790026	0					
ANR	790060	CompoundStatement		4:39:96:96	790026	1					
ANR	790061	ExpressionStatement	"rc = __runMain ( core -> r_main_rax2 , input )"	1553:2:41163:41204	790026	0	True				
ANR	790062	AssignmentExpression	"rc = __runMain ( core -> r_main_rax2 , input )"		790026	0		=			
ANR	790063	Identifier	rc		790026	0					
ANR	790064	CallExpression	"__runMain ( core -> r_main_rax2 , input )"		790026	1					
ANR	790065	Callee	__runMain		790026	0					
ANR	790066	Identifier	__runMain		790026	0					
ANR	790067	ArgumentList	core -> r_main_rax2		790026	1					
ANR	790068	Argument	core -> r_main_rax2		790026	0					
ANR	790069	PtrMemberAccess	core -> r_main_rax2		790026	0					
ANR	790070	Identifier	core		790026	0					
ANR	790071	Identifier	r_main_rax2		790026	1					
ANR	790072	Argument	input		790026	1					
ANR	790073	Identifier	input		790026	0					
ANR	790074	ElseStatement	else		790026	0					
ANR	790075	IfStatement	"if ( r_str_startswith ( input , ""radare2"" ) )"		790026	0					
ANR	790076	Condition	"r_str_startswith ( input , ""radare2"" )"	1554:12:41218:41252	790026	0	True				
ANR	790077	CallExpression	"r_str_startswith ( input , ""radare2"" )"		790026	0					
ANR	790078	Callee	r_str_startswith		790026	0					
ANR	790079	Identifier	r_str_startswith		790026	0					
ANR	790080	ArgumentList	input		790026	1					
ANR	790081	Argument	input		790026	0					
ANR	790082	Identifier	input		790026	0					
ANR	790083	Argument	"""radare2"""		790026	1					
ANR	790084	PrimaryExpression	"""radare2"""		790026	0					
ANR	790085	CompoundStatement		6:49:192:192	790026	1					
ANR	790086	ExpressionStatement	"r_sys_cmdf ( ""%s"" , input )"	1555:2:41259:41283	790026	0	True				
ANR	790087	CallExpression	"r_sys_cmdf ( ""%s"" , input )"		790026	0					
ANR	790088	Callee	r_sys_cmdf		790026	0					
ANR	790089	Identifier	r_sys_cmdf		790026	0					
ANR	790090	ArgumentList	"""%s"""		790026	1					
ANR	790091	Argument	"""%s"""		790026	0					
ANR	790092	PrimaryExpression	"""%s"""		790026	0					
ANR	790093	Argument	input		790026	1					
ANR	790094	Identifier	input		790026	0					
ANR	790095	ElseStatement	else		790026	0					
ANR	790096	IfStatement	"if ( r_str_startswith ( input , ""rasm2"" ) )"		790026	0					
ANR	790097	Condition	"r_str_startswith ( input , ""rasm2"" )"	1557:12:41348:41380	790026	0	True				
ANR	790098	CallExpression	"r_str_startswith ( input , ""rasm2"" )"		790026	0					
ANR	790099	Callee	r_str_startswith		790026	0					
ANR	790100	Identifier	r_str_startswith		790026	0					
ANR	790101	ArgumentList	input		790026	1					
ANR	790102	Argument	input		790026	0					
ANR	790103	Identifier	input		790026	0					
ANR	790104	Argument	"""rasm2"""		790026	1					
ANR	790105	PrimaryExpression	"""rasm2"""		790026	0					
ANR	790106	CompoundStatement		9:47:320:320	790026	1					
ANR	790107	ExpressionStatement	"r_sys_cmdf ( ""%s"" , input )"	1558:2:41387:41411	790026	0	True				
ANR	790108	CallExpression	"r_sys_cmdf ( ""%s"" , input )"		790026	0					
ANR	790109	Callee	r_sys_cmdf		790026	0					
ANR	790110	Identifier	r_sys_cmdf		790026	0					
ANR	790111	ArgumentList	"""%s"""		790026	1					
ANR	790112	Argument	"""%s"""		790026	0					
ANR	790113	PrimaryExpression	"""%s"""		790026	0					
ANR	790114	Argument	input		790026	1					
ANR	790115	Identifier	input		790026	0					
ANR	790116	ElseStatement	else		790026	0					
ANR	790117	IfStatement	"if ( r_str_startswith ( input , ""rabin2"" ) )"		790026	0					
ANR	790118	Condition	"r_str_startswith ( input , ""rabin2"" )"	1560:12:41474:41507	790026	0	True				
ANR	790119	CallExpression	"r_str_startswith ( input , ""rabin2"" )"		790026	0					
ANR	790120	Callee	r_str_startswith		790026	0					
ANR	790121	Identifier	r_str_startswith		790026	0					
ANR	790122	ArgumentList	input		790026	1					
ANR	790123	Argument	input		790026	0					
ANR	790124	Identifier	input		790026	0					
ANR	790125	Argument	"""rabin2"""		790026	1					
ANR	790126	PrimaryExpression	"""rabin2"""		790026	0					
ANR	790127	CompoundStatement		12:48:447:447	790026	1					
ANR	790128	ExpressionStatement	"r_sys_cmdf ( ""%s"" , input )"	1561:2:41514:41538	790026	0	True				
ANR	790129	CallExpression	"r_sys_cmdf ( ""%s"" , input )"		790026	0					
ANR	790130	Callee	r_sys_cmdf		790026	0					
ANR	790131	Identifier	r_sys_cmdf		790026	0					
ANR	790132	ArgumentList	"""%s"""		790026	1					
ANR	790133	Argument	"""%s"""		790026	0					
ANR	790134	PrimaryExpression	"""%s"""		790026	0					
ANR	790135	Argument	input		790026	1					
ANR	790136	Identifier	input		790026	0					
ANR	790137	ElseStatement	else		790026	0					
ANR	790138	IfStatement	"if ( r_str_startswith ( input , ""ragg2"" ) )"		790026	0					
ANR	790139	Condition	"r_str_startswith ( input , ""ragg2"" )"	1563:12:41602:41634	790026	0	True				
ANR	790140	CallExpression	"r_str_startswith ( input , ""ragg2"" )"		790026	0					
ANR	790141	Callee	r_str_startswith		790026	0					
ANR	790142	Identifier	r_str_startswith		790026	0					
ANR	790143	ArgumentList	input		790026	1					
ANR	790144	Argument	input		790026	0					
ANR	790145	Identifier	input		790026	0					
ANR	790146	Argument	"""ragg2"""		790026	1					
ANR	790147	PrimaryExpression	"""ragg2"""		790026	0					
ANR	790148	CompoundStatement		15:47:574:574	790026	1					
ANR	790149	ExpressionStatement	"r_sys_cmdf ( ""%s"" , input )"	1564:2:41641:41665	790026	0	True				
ANR	790150	CallExpression	"r_sys_cmdf ( ""%s"" , input )"		790026	0					
ANR	790151	Callee	r_sys_cmdf		790026	0					
ANR	790152	Identifier	r_sys_cmdf		790026	0					
ANR	790153	ArgumentList	"""%s"""		790026	1					
ANR	790154	Argument	"""%s"""		790026	0					
ANR	790155	PrimaryExpression	"""%s"""		790026	0					
ANR	790156	Argument	input		790026	1					
ANR	790157	Identifier	input		790026	0					
ANR	790158	ElseStatement	else		790026	0					
ANR	790159	IfStatement	"if ( r_str_startswith ( input , ""r2pm"" ) )"		790026	0					
ANR	790160	Condition	"r_str_startswith ( input , ""r2pm"" )"	1566:12:41728:41759	790026	0	True				
ANR	790161	CallExpression	"r_str_startswith ( input , ""r2pm"" )"		790026	0					
ANR	790162	Callee	r_str_startswith		790026	0					
ANR	790163	Identifier	r_str_startswith		790026	0					
ANR	790164	ArgumentList	input		790026	1					
ANR	790165	Argument	input		790026	0					
ANR	790166	Identifier	input		790026	0					
ANR	790167	Argument	"""r2pm"""		790026	1					
ANR	790168	PrimaryExpression	"""r2pm"""		790026	0					
ANR	790169	CompoundStatement		18:46:699:699	790026	1					
ANR	790170	ExpressionStatement	"r_sys_cmdf ( ""%s"" , input )"	1567:2:41766:41790	790026	0	True				
ANR	790171	CallExpression	"r_sys_cmdf ( ""%s"" , input )"		790026	0					
ANR	790172	Callee	r_sys_cmdf		790026	0					
ANR	790173	Identifier	r_sys_cmdf		790026	0					
ANR	790174	ArgumentList	"""%s"""		790026	1					
ANR	790175	Argument	"""%s"""		790026	0					
ANR	790176	PrimaryExpression	"""%s"""		790026	0					
ANR	790177	Argument	input		790026	1					
ANR	790178	Identifier	input		790026	0					
ANR	790179	ElseStatement	else		790026	0					
ANR	790180	IfStatement	"if ( r_str_startswith ( input , ""radiff2"" ) )"		790026	0					
ANR	790181	Condition	"r_str_startswith ( input , ""radiff2"" )"	1569:12:41852:41886	790026	0	True				
ANR	790182	CallExpression	"r_str_startswith ( input , ""radiff2"" )"		790026	0					
ANR	790183	Callee	r_str_startswith		790026	0					
ANR	790184	Identifier	r_str_startswith		790026	0					
ANR	790185	ArgumentList	input		790026	1					
ANR	790186	Argument	input		790026	0					
ANR	790187	Identifier	input		790026	0					
ANR	790188	Argument	"""radiff2"""		790026	1					
ANR	790189	PrimaryExpression	"""radiff2"""		790026	0					
ANR	790190	CompoundStatement		21:49:826:826	790026	1					
ANR	790191	ExpressionStatement	"rc = __runMain ( core -> r_main_radiff2 , input )"	1570:2:41893:41937	790026	0	True				
ANR	790192	AssignmentExpression	"rc = __runMain ( core -> r_main_radiff2 , input )"		790026	0		=			
ANR	790193	Identifier	rc		790026	0					
ANR	790194	CallExpression	"__runMain ( core -> r_main_radiff2 , input )"		790026	1					
ANR	790195	Callee	__runMain		790026	0					
ANR	790196	Identifier	__runMain		790026	0					
ANR	790197	ArgumentList	core -> r_main_radiff2		790026	1					
ANR	790198	Argument	core -> r_main_radiff2		790026	0					
ANR	790199	PtrMemberAccess	core -> r_main_radiff2		790026	0					
ANR	790200	Identifier	core		790026	0					
ANR	790201	Identifier	r_main_radiff2		790026	1					
ANR	790202	Argument	input		790026	1					
ANR	790203	Identifier	input		790026	0					
ANR	790204	ElseStatement	else		790026	0					
ANR	790205	CompoundStatement		27:2:1021:1026	790026	0					
ANR	790206	IdentifierDeclStatement	"const char * r2cmds [ ] = { ""rax2"" , ""r2pm"" , ""rasm2"" , ""rabin2"" , ""rahash2"" , ""rafind2"" , ""rarun2"" , ""ragg2"" , ""radare2"" , ""r2"" , NULL } ;"	1572:2:41951:42080	790026	0	True				
ANR	790207	IdentifierDecl	"* r2cmds [ ] = { ""rax2"" , ""r2pm"" , ""rasm2"" , ""rabin2"" , ""rahash2"" , ""rafind2"" , ""rarun2"" , ""ragg2"" , ""radare2"" , ""r2"" , NULL }"		790026	0					
ANR	790208	IdentifierDeclType	const char * [ ]		790026	0					
ANR	790209	Identifier	r2cmds		790026	1					
ANR	790210	AssignmentExpression	"* r2cmds [ ] = { ""rax2"" , ""r2pm"" , ""rasm2"" , ""rabin2"" , ""rahash2"" , ""rafind2"" , ""rarun2"" , ""ragg2"" , ""radare2"" , ""r2"" , NULL }"		790026	2		=			
ANR	790211	Identifier	r2cmds		790026	0					
ANR	790212	InitializerList	"""rax2"""		790026	1					
ANR	790213	PrimaryExpression	"""rax2"""		790026	0					
ANR	790214	PrimaryExpression	"""r2pm"""		790026	1					
ANR	790215	PrimaryExpression	"""rasm2"""		790026	2					
ANR	790216	PrimaryExpression	"""rabin2"""		790026	3					
ANR	790217	PrimaryExpression	"""rahash2"""		790026	4					
ANR	790218	PrimaryExpression	"""rafind2"""		790026	5					
ANR	790219	PrimaryExpression	"""rarun2"""		790026	6					
ANR	790220	PrimaryExpression	"""ragg2"""		790026	7					
ANR	790221	PrimaryExpression	"""radare2"""		790026	8					
ANR	790222	PrimaryExpression	"""r2"""		790026	9					
ANR	790223	Identifier	NULL		790026	10					
ANR	790224	IdentifierDeclStatement	int i ;	1575:2:42084:42089	790026	1	True				
ANR	790225	IdentifierDecl	i		790026	0					
ANR	790226	IdentifierDeclType	int		790026	0					
ANR	790227	Identifier	i		790026	1					
ANR	790228	ForStatement	for ( i = 0 ; r2cmds [ i ] ; i ++ )		790026	2					
ANR	790229	ForInit	i = 0 ;	1576:7:42098:42103	790026	0	True				
ANR	790230	AssignmentExpression	i = 0		790026	0		=			
ANR	790231	Identifier	i		790026	0					
ANR	790232	PrimaryExpression	0		790026	1					
ANR	790233	Condition	r2cmds [ i ]	1576:14:42105:42113	790026	1	True				
ANR	790234	ArrayIndexing	r2cmds [ i ]		790026	0					
ANR	790235	Identifier	r2cmds		790026	0					
ANR	790236	Identifier	i		790026	1					
ANR	790237	PostIncDecOperationExpression	i ++	1576:25:42116:42118	790026	2	True				
ANR	790238	Identifier	i		790026	0					
ANR	790239	IncDec	++		790026	1					
ANR	790240	CompoundStatement		28:30:1058:1058	790026	3					
ANR	790241	IfStatement	"if ( r_str_startswith ( input , r2cmds [ i ] ) )"		790026	0					
ANR	790242	Condition	"r_str_startswith ( input , r2cmds [ i ] )"	1577:7:42130:42164	790026	0	True				
ANR	790243	CallExpression	"r_str_startswith ( input , r2cmds [ i ] )"		790026	0					
ANR	790244	Callee	r_str_startswith		790026	0					
ANR	790245	Identifier	r_str_startswith		790026	0					
ANR	790246	ArgumentList	input		790026	1					
ANR	790247	Argument	input		790026	0					
ANR	790248	Identifier	input		790026	0					
ANR	790249	Argument	r2cmds [ i ]		790026	1					
ANR	790250	ArrayIndexing	r2cmds [ i ]		790026	0					
ANR	790251	Identifier	r2cmds		790026	0					
ANR	790252	Identifier	i		790026	1					
ANR	790253	CompoundStatement		29:44:1104:1104	790026	1					
ANR	790254	ExpressionStatement	free ( input )	1578:4:42173:42185	790026	0	True				
ANR	790255	CallExpression	free ( input )		790026	0					
ANR	790256	Callee	free		790026	0					
ANR	790257	Identifier	free		790026	0					
ANR	790258	ArgumentList	input		790026	1					
ANR	790259	Argument	input		790026	0					
ANR	790260	Identifier	input		790026	0					
ANR	790261	ReturnStatement	return true ;	1579:4:42191:42202	790026	1	True				
ANR	790262	Identifier	true		790026	0					
ANR	790263	ReturnStatement	return false ;	1582:2:42215:42227	790026	3	True				
ANR	790264	Identifier	false		790026	0					
ANR	790265	ExpressionStatement	free ( input )	1584:1:42233:42245	790026	3	True				
ANR	790266	CallExpression	free ( input )		790026	0					
ANR	790267	Callee	free		790026	0					
ANR	790268	Identifier	free		790026	0					
ANR	790269	ArgumentList	input		790026	1					
ANR	790270	Argument	input		790026	0					
ANR	790271	Identifier	input		790026	0					
ANR	790272	ExpressionStatement	core -> num -> value = rc	1585:1:42248:42269	790026	4	True				
ANR	790273	AssignmentExpression	core -> num -> value = rc		790026	0		=			
ANR	790274	PtrMemberAccess	core -> num -> value		790026	0					
ANR	790275	PtrMemberAccess	core -> num		790026	0					
ANR	790276	Identifier	core		790026	0					
ANR	790277	Identifier	num		790026	1					
ANR	790278	Identifier	value		790026	1					
ANR	790279	Identifier	rc		790026	1					
ANR	790280	ReturnStatement	return true ;	1586:1:42272:42283	790026	5	True				
ANR	790281	Identifier	true		790026	0					
ANR	790282	ReturnType	static bool		790026	1					
ANR	790283	Identifier	cmd_r2cmd		790026	2					
ANR	790284	ParameterList	"RCore * core , const char * _input"		790026	3					
ANR	790285	Parameter	RCore * core	1549:22:41029:41039	790026	0	True				
ANR	790286	ParameterType	RCore *		790026	0					
ANR	790287	Identifier	core		790026	1					
ANR	790288	Parameter	const char * _input	1549:35:41042:41059	790026	1	True				
ANR	790289	ParameterType	const char *		790026	0					
ANR	790290	Identifier	_input		790026	1					
ANR	790291	CFGEntryNode	ENTRY		790026		True				
ANR	790292	CFGExitNode	EXIT		790026		True				
ANR	790293	Symbol	r_str_startswith		790026						
ANR	790294	Symbol	core -> r_main_radiff2		790026						
ANR	790295	Symbol	NULL		790026						
ANR	790296	Symbol	core -> r_main_rax2		790026						
ANR	790297	Symbol	* core		790026						
ANR	790298	Symbol	false		790026						
ANR	790299	Symbol	i		790026						
ANR	790300	Symbol	core -> num -> value		790026						
ANR	790301	Symbol	r_str_newf		790026						
ANR	790302	Symbol	r2cmds		790026						
ANR	790303	Symbol	__runMain		790026						
ANR	790304	Symbol	core		790026						
ANR	790305	Symbol	input		790026						
ANR	790306	Symbol	rc		790026						
ANR	790307	Symbol	* i		790026						
ANR	790308	Symbol	true		790026						
ANR	790309	Symbol	* core -> num		790026						
ANR	790310	Symbol	_input		790026						
ANR	790311	Symbol	core -> num		790026						
ANR	790312	Symbol	* * core		790026						
ANR	790313	Symbol	* r2cmds		790026						
ANR	790314	Function	cmd_resize	1589:0:42288:44464							
ANR	790315	FunctionDef	"cmd_resize (void * data , const char * input)"		790314	0					
ANR	790316	CompoundStatement		1589:53:42341:44464	790314	0					
ANR	790317	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1590:1:42344:42371	790314	0	True				
ANR	790318	IdentifierDecl	* core = ( RCore * ) data		790314	0					
ANR	790319	IdentifierDeclType	RCore *		790314	0					
ANR	790320	Identifier	core		790314	1					
ANR	790321	AssignmentExpression	* core = ( RCore * ) data		790314	2		=			
ANR	790322	Identifier	core		790314	0					
ANR	790323	CastExpression	( RCore * ) data		790314	1					
ANR	790324	CastTarget	RCore *		790314	0					
ANR	790325	Identifier	data		790314	1					
ANR	790326	IdentifierDeclStatement	ut64 newsize = 0 ;	1591:1:42374:42390	790314	1	True				
ANR	790327	IdentifierDecl	newsize = 0		790314	0					
ANR	790328	IdentifierDeclType	ut64		790314	0					
ANR	790329	Identifier	newsize		790314	1					
ANR	790330	AssignmentExpression	newsize = 0		790314	2		=			
ANR	790331	Identifier	newsize		790314	0					
ANR	790332	PrimaryExpression	0		790314	1					
ANR	790333	IdentifierDeclStatement	st64 delta = 0 ;	1592:1:42393:42407	790314	2	True				
ANR	790334	IdentifierDecl	delta = 0		790314	0					
ANR	790335	IdentifierDeclType	st64		790314	0					
ANR	790336	Identifier	delta		790314	1					
ANR	790337	AssignmentExpression	delta = 0		790314	2		=			
ANR	790338	Identifier	delta		790314	0					
ANR	790339	PrimaryExpression	0		790314	1					
ANR	790340	IdentifierDeclStatement	"int grow , ret ;"	1593:1:42410:42423	790314	3	True				
ANR	790341	IdentifierDecl	grow		790314	0					
ANR	790342	IdentifierDeclType	int		790314	0					
ANR	790343	Identifier	grow		790314	1					
ANR	790344	IdentifierDecl	ret		790314	1					
ANR	790345	IdentifierDeclType	int		790314	0					
ANR	790346	Identifier	ret		790314	1					
ANR	790347	IfStatement	"if ( cmd_r2cmd ( core , input ) )"		790314	4					
ANR	790348	Condition	"cmd_r2cmd ( core , input )"	1595:5:42431:42453	790314	0	True				
ANR	790349	CallExpression	"cmd_r2cmd ( core , input )"		790314	0					
ANR	790350	Callee	cmd_r2cmd		790314	0					
ANR	790351	Identifier	cmd_r2cmd		790314	0					
ANR	790352	ArgumentList	core		790314	1					
ANR	790353	Argument	core		790314	0					
ANR	790354	Identifier	core		790314	0					
ANR	790355	Argument	input		790314	1					
ANR	790356	Identifier	input		790314	0					
ANR	790357	CompoundStatement		7:30:114:114	790314	1					
ANR	790358	ReturnStatement	return true ;	1596:2:42460:42471	790314	0	True				
ANR	790359	Identifier	true		790314	0					
ANR	790360	IdentifierDeclStatement	"ut64 oldsize = ( core -> file ) ? r_io_fd_size ( core -> io , core -> file -> fd ) : 0 ;"	1599:1:42478:42550	790314	5	True				
ANR	790361	IdentifierDecl	"oldsize = ( core -> file ) ? r_io_fd_size ( core -> io , core -> file -> fd ) : 0"		790314	0					
ANR	790362	IdentifierDeclType	ut64		790314	0					
ANR	790363	Identifier	oldsize		790314	1					
ANR	790364	AssignmentExpression	"oldsize = ( core -> file ) ? r_io_fd_size ( core -> io , core -> file -> fd ) : 0"		790314	2		=			
ANR	790365	Identifier	oldsize		790314	0					
ANR	790366	ConditionalExpression	"( core -> file ) ? r_io_fd_size ( core -> io , core -> file -> fd ) : 0"		790314	1					
ANR	790367	Condition	core -> file		790314	0					
ANR	790368	PtrMemberAccess	core -> file		790314	0					
ANR	790369	Identifier	core		790314	0					
ANR	790370	Identifier	file		790314	1					
ANR	790371	CallExpression	"r_io_fd_size ( core -> io , core -> file -> fd )"		790314	1					
ANR	790372	Callee	r_io_fd_size		790314	0					
ANR	790373	Identifier	r_io_fd_size		790314	0					
ANR	790374	ArgumentList	core -> io		790314	1					
ANR	790375	Argument	core -> io		790314	0					
ANR	790376	PtrMemberAccess	core -> io		790314	0					
ANR	790377	Identifier	core		790314	0					
ANR	790378	Identifier	io		790314	1					
ANR	790379	Argument	core -> file -> fd		790314	1					
ANR	790380	PtrMemberAccess	core -> file -> fd		790314	0					
ANR	790381	PtrMemberAccess	core -> file		790314	0					
ANR	790382	Identifier	core		790314	0					
ANR	790383	Identifier	file		790314	1					
ANR	790384	Identifier	fd		790314	1					
ANR	790385	PrimaryExpression	0		790314	2					
ANR	790386	SwitchStatement	switch ( * input )		790314	6					
ANR	790387	Condition	* input	1600:9:42561:42566	790314	0	True				
ANR	790388	UnaryOperationExpression	* input		790314	0					
ANR	790389	UnaryOperator	*		790314	0					
ANR	790390	Identifier	input		790314	1					
ANR	790391	CompoundStatement		12:17:227:227	790314	1					
ANR	790392	Label	case 'a' :	1601:1:42572:42580	790314	0	True				
ANR	790393	IfStatement	"if ( r_str_startswith ( input , ""adare2"" ) )"		790314	1					
ANR	790394	Condition	"r_str_startswith ( input , ""adare2"" )"	1602:6:42598:42631	790314	0	True				
ANR	790395	CallExpression	"r_str_startswith ( input , ""adare2"" )"		790314	0					
ANR	790396	Callee	r_str_startswith		790314	0					
ANR	790397	Identifier	r_str_startswith		790314	0					
ANR	790398	ArgumentList	input		790314	1					
ANR	790399	Argument	input		790314	0					
ANR	790400	Identifier	input		790314	0					
ANR	790401	Argument	"""adare2"""		790314	1					
ANR	790402	PrimaryExpression	"""adare2"""		790314	0					
ANR	790403	CompoundStatement		14:42:292:292	790314	1					
ANR	790404	ExpressionStatement	"__runMain ( core -> r_main_radare2 , input - 1 )"	1603:3:42639:42682	790314	0	True				
ANR	790405	CallExpression	"__runMain ( core -> r_main_radare2 , input - 1 )"		790314	0					
ANR	790406	Callee	__runMain		790314	0					
ANR	790407	Identifier	__runMain		790314	0					
ANR	790408	ArgumentList	core -> r_main_radare2		790314	1					
ANR	790409	Argument	core -> r_main_radare2		790314	0					
ANR	790410	PtrMemberAccess	core -> r_main_radare2		790314	0					
ANR	790411	Identifier	core		790314	0					
ANR	790412	Identifier	r_main_radare2		790314	1					
ANR	790413	Argument	input - 1		790314	1					
ANR	790414	AdditiveExpression	input - 1		790314	0		-			
ANR	790415	Identifier	input		790314	0					
ANR	790416	PrimaryExpression	1		790314	1					
ANR	790417	ReturnStatement	return true ;	1605:2:42691:42702	790314	2	True				
ANR	790418	Identifier	true		790314	0					
ANR	790419	Label	case '2' :	1606:1:42705:42713	790314	3	True				
ANR	790420	ExpressionStatement	"r_sys_cmdf ( ""radare%s"" , input )"	1608:2:42817:42847	790314	4	True				
ANR	790421	CallExpression	"r_sys_cmdf ( ""radare%s"" , input )"		790314	0					
ANR	790422	Callee	r_sys_cmdf		790314	0					
ANR	790423	Identifier	r_sys_cmdf		790314	0					
ANR	790424	ArgumentList	"""radare%s"""		790314	1					
ANR	790425	Argument	"""radare%s"""		790314	0					
ANR	790426	PrimaryExpression	"""radare%s"""		790314	0					
ANR	790427	Argument	input		790314	1					
ANR	790428	Identifier	input		790314	0					
ANR	790429	ReturnStatement	return true ;	1609:2:42851:42862	790314	5	True				
ANR	790430	Identifier	true		790314	0					
ANR	790431	Label	case 'm' :	1610:1:42865:42873	790314	6	True				
ANR	790432	IfStatement	if ( input [ 1 ] == ' ' )		790314	7					
ANR	790433	Condition	input [ 1 ] == ' '	1611:6:42889:42903	790314	0	True				
ANR	790434	EqualityExpression	input [ 1 ] == ' '		790314	0		==			
ANR	790435	ArrayIndexing	input [ 1 ]		790314	0					
ANR	790436	Identifier	input		790314	0					
ANR	790437	PrimaryExpression	1		790314	1					
ANR	790438	PrimaryExpression	' '		790314	1					
ANR	790439	CompoundStatement		24:3:569:613	790314	1					
ANR	790440	IdentifierDeclStatement	const char * file = r_str_trim_ro ( input + 2 ) ;	1612:3:42911:42955	790314	0	True				
ANR	790441	IdentifierDecl	* file = r_str_trim_ro ( input + 2 )		790314	0					
ANR	790442	IdentifierDeclType	const char *		790314	0					
ANR	790443	Identifier	file		790314	1					
ANR	790444	AssignmentExpression	* file = r_str_trim_ro ( input + 2 )		790314	2		=			
ANR	790445	Identifier	file		790314	0					
ANR	790446	CallExpression	r_str_trim_ro ( input + 2 )		790314	1					
ANR	790447	Callee	r_str_trim_ro		790314	0					
ANR	790448	Identifier	r_str_trim_ro		790314	0					
ANR	790449	ArgumentList	input + 2		790314	1					
ANR	790450	Argument	input + 2		790314	0					
ANR	790451	AdditiveExpression	input + 2		790314	0		+			
ANR	790452	Identifier	input		790314	0					
ANR	790453	PrimaryExpression	2		790314	1					
ANR	790454	IfStatement	if ( * file == '$' )		790314	1					
ANR	790455	Condition	* file == '$'	1613:7:42964:42975	790314	0	True				
ANR	790456	EqualityExpression	* file == '$'		790314	0		==			
ANR	790457	UnaryOperationExpression	* file		790314	0					
ANR	790458	UnaryOperator	*		790314	0					
ANR	790459	Identifier	file		790314	1					
ANR	790460	PrimaryExpression	'$'		790314	1					
ANR	790461	CompoundStatement		25:21:636:636	790314	1					
ANR	790462	ExpressionStatement	"r_cmd_alias_del ( core -> rcmd , file )"	1614:4:42984:43018	790314	0	True				
ANR	790463	CallExpression	"r_cmd_alias_del ( core -> rcmd , file )"		790314	0					
ANR	790464	Callee	r_cmd_alias_del		790314	0					
ANR	790465	Identifier	r_cmd_alias_del		790314	0					
ANR	790466	ArgumentList	core -> rcmd		790314	1					
ANR	790467	Argument	core -> rcmd		790314	0					
ANR	790468	PtrMemberAccess	core -> rcmd		790314	0					
ANR	790469	Identifier	core		790314	0					
ANR	790470	Identifier	rcmd		790314	1					
ANR	790471	Argument	file		790314	1					
ANR	790472	Identifier	file		790314	0					
ANR	790473	ElseStatement	else		790314	0					
ANR	790474	CompoundStatement		27:10:688:688	790314	0					
ANR	790475	ExpressionStatement	r_file_rm ( file )	1616:4:43036:43052	790314	0	True				
ANR	790476	CallExpression	r_file_rm ( file )		790314	0					
ANR	790477	Callee	r_file_rm		790314	0					
ANR	790478	Identifier	r_file_rm		790314	0					
ANR	790479	ArgumentList	file		790314	1					
ANR	790480	Argument	file		790314	0					
ANR	790481	Identifier	file		790314	0					
ANR	790482	ElseStatement	else		790314	0					
ANR	790483	CompoundStatement		30:9:726:726	790314	0					
ANR	790484	ExpressionStatement	"eprintf ( ""Usage: rm [file]   # removes a file\\n"" )"	1619:3:43073:43122	790314	0	True				
ANR	790485	CallExpression	"eprintf ( ""Usage: rm [file]   # removes a file\\n"" )"		790314	0					
ANR	790486	Callee	eprintf		790314	0					
ANR	790487	Identifier	eprintf		790314	0					
ANR	790488	ArgumentList	"""Usage: rm [file]   # removes a file\\n"""		790314	1					
ANR	790489	Argument	"""Usage: rm [file]   # removes a file\\n"""		790314	0					
ANR	790490	PrimaryExpression	"""Usage: rm [file]   # removes a file\\n"""		790314	0					
ANR	790491	ReturnStatement	return true ;	1621:2:43130:43141	790314	8	True				
ANR	790492	Identifier	true		790314	0					
ANR	790493	Label	case '\\0' :	1622:1:43144:43153	790314	9	True				
ANR	790494	IfStatement	if ( core -> file )		790314	10					
ANR	790495	Condition	core -> file	1623:6:43161:43170	790314	0	True				
ANR	790496	PtrMemberAccess	core -> file		790314	0					
ANR	790497	Identifier	core		790314	0					
ANR	790498	Identifier	file		790314	1					
ANR	790499	CompoundStatement		35:18:831:831	790314	1					
ANR	790500	IfStatement	if ( oldsize != - 1 )		790314	0					
ANR	790501	Condition	oldsize != - 1	1624:7:43182:43194	790314	0	True				
ANR	790502	EqualityExpression	oldsize != - 1		790314	0		!=			
ANR	790503	Identifier	oldsize		790314	0					
ANR	790504	UnaryOperationExpression	- 1		790314	1					
ANR	790505	UnaryOperator	-		790314	0					
ANR	790506	PrimaryExpression	1		790314	1					
ANR	790507	CompoundStatement		36:22:855:855	790314	1					
ANR	790508	Statement	r_cons_printf	1625:4:43203:43215	790314	0	True				
ANR	790509	Statement	(	1625:18:43217:43217	790314	1	True				
ANR	790510	Statement	"""%"""	1625:19:43218:43220	790314	2	True				
ANR	790511	Statement	PFMT64d	1625:22:43221:43227	790314	3	True				
ANR	790512	Statement	"""\\n"""	1625:29:43228:43231	790314	4	True				
ANR	790513	Statement	","	1625:33:43232:43232	790314	5	True				
ANR	790514	Statement	oldsize	1625:35:43234:43240	790314	6	True				
ANR	790515	Statement	)	1625:42:43241:43241	790314	7	True				
ANR	790516	ExpressionStatement		1625:43:43242:43242	790314	8	True				
ANR	790517	ReturnStatement	return true ;	1628:2:43255:43266	790314	11	True				
ANR	790518	Identifier	true		790314	0					
ANR	790519	Label	case 'h' :	1629:1:43269:43277	790314	12	True				
ANR	790520	IfStatement	if ( core -> file )		790314	13					
ANR	790521	Condition	core -> file	1630:6:43285:43294	790314	0	True				
ANR	790522	PtrMemberAccess	core -> file		790314	0					
ANR	790523	Identifier	core		790314	0					
ANR	790524	Identifier	file		790314	1					
ANR	790525	CompoundStatement		42:18:955:955	790314	1					
ANR	790526	IfStatement	if ( oldsize != - 1 )		790314	0					
ANR	790527	Condition	oldsize != - 1	1631:7:43306:43318	790314	0	True				
ANR	790528	EqualityExpression	oldsize != - 1		790314	0		!=			
ANR	790529	Identifier	oldsize		790314	0					
ANR	790530	UnaryOperationExpression	- 1		790314	1					
ANR	790531	UnaryOperator	-		790314	0					
ANR	790532	PrimaryExpression	1		790314	1					
ANR	790533	CompoundStatement		44:4:985:1000	790314	1					
ANR	790534	IdentifierDeclStatement	char humansz [ 8 ] ;	1632:4:43327:43342	790314	0	True				
ANR	790535	IdentifierDecl	humansz [ 8 ]		790314	0					
ANR	790536	IdentifierDeclType	char [ 8 ]		790314	0					
ANR	790537	Identifier	humansz		790314	1					
ANR	790538	PrimaryExpression	8		790314	2					
ANR	790539	ExpressionStatement	"r_num_units ( humansz , sizeof ( humansz ) , oldsize )"	1633:4:43348:43396	790314	1	True				
ANR	790540	CallExpression	"r_num_units ( humansz , sizeof ( humansz ) , oldsize )"		790314	0					
ANR	790541	Callee	r_num_units		790314	0					
ANR	790542	Identifier	r_num_units		790314	0					
ANR	790543	ArgumentList	humansz		790314	1					
ANR	790544	Argument	humansz		790314	0					
ANR	790545	Identifier	humansz		790314	0					
ANR	790546	Argument	sizeof ( humansz )		790314	1					
ANR	790547	SizeofExpression	sizeof ( humansz )		790314	0					
ANR	790548	Sizeof	sizeof		790314	0					
ANR	790549	SizeofOperand	humansz		790314	1					
ANR	790550	Argument	oldsize		790314	2					
ANR	790551	Identifier	oldsize		790314	0					
ANR	790552	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , humansz )"	1634:4:43402:43433	790314	2	True				
ANR	790553	CallExpression	"r_cons_printf ( ""%s\\n"" , humansz )"		790314	0					
ANR	790554	Callee	r_cons_printf		790314	0					
ANR	790555	Identifier	r_cons_printf		790314	0					
ANR	790556	ArgumentList	"""%s\\n"""		790314	1					
ANR	790557	Argument	"""%s\\n"""		790314	0					
ANR	790558	PrimaryExpression	"""%s\\n"""		790314	0					
ANR	790559	Argument	humansz		790314	1					
ANR	790560	Identifier	humansz		790314	0					
ANR	790561	ReturnStatement	return true ;	1637:2:43446:43457	790314	14	True				
ANR	790562	Identifier	true		790314	0					
ANR	790563	Label	case '+' :	1638:1:43460:43468	790314	15	True				
ANR	790564	Label	case '-' :	1639:1:43479:43487	790314	16	True				
ANR	790565	ExpressionStatement	"delta = ( st64 ) r_num_math ( core -> num , input )"	1640:2:43499:43542	790314	17	True				
ANR	790566	AssignmentExpression	"delta = ( st64 ) r_num_math ( core -> num , input )"		790314	0		=			
ANR	790567	Identifier	delta		790314	0					
ANR	790568	CastExpression	"( st64 ) r_num_math ( core -> num , input )"		790314	1					
ANR	790569	CastTarget	st64		790314	0					
ANR	790570	CallExpression	"r_num_math ( core -> num , input )"		790314	1					
ANR	790571	Callee	r_num_math		790314	0					
ANR	790572	Identifier	r_num_math		790314	0					
ANR	790573	ArgumentList	core -> num		790314	1					
ANR	790574	Argument	core -> num		790314	0					
ANR	790575	PtrMemberAccess	core -> num		790314	0					
ANR	790576	Identifier	core		790314	0					
ANR	790577	Identifier	num		790314	1					
ANR	790578	Argument	input		790314	1					
ANR	790579	Identifier	input		790314	0					
ANR	790580	ExpressionStatement	newsize = oldsize + delta	1641:2:43546:43571	790314	18	True				
ANR	790581	AssignmentExpression	newsize = oldsize + delta		790314	0		=			
ANR	790582	Identifier	newsize		790314	0					
ANR	790583	AdditiveExpression	oldsize + delta		790314	1		+			
ANR	790584	Identifier	oldsize		790314	0					
ANR	790585	Identifier	delta		790314	1					
ANR	790586	BreakStatement	break ;	1642:2:43575:43580	790314	19	True				
ANR	790587	Label	case ' ' :	1643:1:43583:43591	790314	20	True				
ANR	790588	ExpressionStatement	"newsize = r_num_math ( core -> num , input + 1 )"	1644:2:43603:43646	790314	21	True				
ANR	790589	AssignmentExpression	"newsize = r_num_math ( core -> num , input + 1 )"		790314	0		=			
ANR	790590	Identifier	newsize		790314	0					
ANR	790591	CallExpression	"r_num_math ( core -> num , input + 1 )"		790314	1					
ANR	790592	Callee	r_num_math		790314	0					
ANR	790593	Identifier	r_num_math		790314	0					
ANR	790594	ArgumentList	core -> num		790314	1					
ANR	790595	Argument	core -> num		790314	0					
ANR	790596	PtrMemberAccess	core -> num		790314	0					
ANR	790597	Identifier	core		790314	0					
ANR	790598	Identifier	num		790314	1					
ANR	790599	Argument	input + 1		790314	1					
ANR	790600	AdditiveExpression	input + 1		790314	0		+			
ANR	790601	Identifier	input		790314	0					
ANR	790602	PrimaryExpression	1		790314	1					
ANR	790603	IfStatement	if ( newsize == 0 )		790314	22					
ANR	790604	Condition	newsize == 0	1645:6:43654:43665	790314	0	True				
ANR	790605	EqualityExpression	newsize == 0		790314	0		==			
ANR	790606	Identifier	newsize		790314	0					
ANR	790607	PrimaryExpression	0		790314	1					
ANR	790608	CompoundStatement		57:20:1326:1326	790314	1					
ANR	790609	IfStatement	if ( input [ 1 ] == '0' )		790314	0					
ANR	790610	Condition	input [ 1 ] == '0'	1646:7:43677:43691	790314	0	True				
ANR	790611	EqualityExpression	input [ 1 ] == '0'		790314	0		==			
ANR	790612	ArrayIndexing	input [ 1 ]		790314	0					
ANR	790613	Identifier	input		790314	0					
ANR	790614	PrimaryExpression	1		790314	1					
ANR	790615	PrimaryExpression	'0'		790314	1					
ANR	790616	CompoundStatement		58:24:1352:1352	790314	1					
ANR	790617	ExpressionStatement	"eprintf ( ""Invalid size\\n"" )"	1647:4:43700:43726	790314	0	True				
ANR	790618	CallExpression	"eprintf ( ""Invalid size\\n"" )"		790314	0					
ANR	790619	Callee	eprintf		790314	0					
ANR	790620	Identifier	eprintf		790314	0					
ANR	790621	ArgumentList	"""Invalid size\\n"""		790314	1					
ANR	790622	Argument	"""Invalid size\\n"""		790314	0					
ANR	790623	PrimaryExpression	"""Invalid size\\n"""		790314	0					
ANR	790624	ReturnStatement	return false ;	1649:3:43736:43748	790314	1	True				
ANR	790625	Identifier	false		790314	0					
ANR	790626	BreakStatement	break ;	1651:2:43756:43761	790314	23	True				
ANR	790627	Label	case 'e' :	1652:1:43764:43772	790314	24	True				
ANR	790628	ExpressionStatement	"write ( 1 , Color_RESET_TERMINAL , strlen ( Color_RESET_TERMINAL ) )"	1653:2:43776:43838	790314	25	True				
ANR	790629	CallExpression	"write ( 1 , Color_RESET_TERMINAL , strlen ( Color_RESET_TERMINAL ) )"		790314	0					
ANR	790630	Callee	write		790314	0					
ANR	790631	Identifier	write		790314	0					
ANR	790632	ArgumentList	1		790314	1					
ANR	790633	Argument	1		790314	0					
ANR	790634	PrimaryExpression	1		790314	0					
ANR	790635	Argument	Color_RESET_TERMINAL		790314	1					
ANR	790636	Identifier	Color_RESET_TERMINAL		790314	0					
ANR	790637	Argument	strlen ( Color_RESET_TERMINAL )		790314	2					
ANR	790638	CallExpression	strlen ( Color_RESET_TERMINAL )		790314	0					
ANR	790639	Callee	strlen		790314	0					
ANR	790640	Identifier	strlen		790314	0					
ANR	790641	ArgumentList	Color_RESET_TERMINAL		790314	1					
ANR	790642	Argument	Color_RESET_TERMINAL		790314	0					
ANR	790643	Identifier	Color_RESET_TERMINAL		790314	0					
ANR	790644	ReturnStatement	return true ;	1654:2:43842:43853	790314	26	True				
ANR	790645	Identifier	true		790314	0					
ANR	790646	Label	case '?' :	1655:1:43856:43864	790314	27	True				
ANR	790647	Label	default :	1656:1:43875:43882	790314	28	True				
ANR	790648	Identifier	default		790314	0					
ANR	790649	ExpressionStatement	"r_core_cmd_help ( core , help_msg_r )"	1657:2:43886:43920	790314	29	True				
ANR	790650	CallExpression	"r_core_cmd_help ( core , help_msg_r )"		790314	0					
ANR	790651	Callee	r_core_cmd_help		790314	0					
ANR	790652	Identifier	r_core_cmd_help		790314	0					
ANR	790653	ArgumentList	core		790314	1					
ANR	790654	Argument	core		790314	0					
ANR	790655	Identifier	core		790314	0					
ANR	790656	Argument	help_msg_r		790314	1					
ANR	790657	Identifier	help_msg_r		790314	0					
ANR	790658	ReturnStatement	return true ;	1658:2:43924:43935	790314	30	True				
ANR	790659	Identifier	true		790314	0					
ANR	790660	ExpressionStatement	grow = ( newsize > oldsize )	1661:1:43942:43968	790314	7	True				
ANR	790661	AssignmentExpression	grow = ( newsize > oldsize )		790314	0		=			
ANR	790662	Identifier	grow		790314	0					
ANR	790663	RelationalExpression	newsize > oldsize		790314	1		>			
ANR	790664	Identifier	newsize		790314	0					
ANR	790665	Identifier	oldsize		790314	1					
ANR	790666	IfStatement	if ( grow )		790314	8					
ANR	790667	Condition	grow	1662:5:43975:43978	790314	0	True				
ANR	790668	Identifier	grow		790314	0					
ANR	790669	CompoundStatement		74:11:1639:1639	790314	1					
ANR	790670	ExpressionStatement	"ret = r_io_resize ( core -> io , newsize )"	1663:2:43985:44022	790314	0	True				
ANR	790671	AssignmentExpression	"ret = r_io_resize ( core -> io , newsize )"		790314	0		=			
ANR	790672	Identifier	ret		790314	0					
ANR	790673	CallExpression	"r_io_resize ( core -> io , newsize )"		790314	1					
ANR	790674	Callee	r_io_resize		790314	0					
ANR	790675	Identifier	r_io_resize		790314	0					
ANR	790676	ArgumentList	core -> io		790314	1					
ANR	790677	Argument	core -> io		790314	0					
ANR	790678	PtrMemberAccess	core -> io		790314	0					
ANR	790679	Identifier	core		790314	0					
ANR	790680	Identifier	io		790314	1					
ANR	790681	Argument	newsize		790314	1					
ANR	790682	Identifier	newsize		790314	0					
ANR	790683	IfStatement	if ( ret < 1 )		790314	1					
ANR	790684	Condition	ret < 1	1664:6:44030:44036	790314	0	True				
ANR	790685	RelationalExpression	ret < 1		790314	0		<			
ANR	790686	Identifier	ret		790314	0					
ANR	790687	PrimaryExpression	1		790314	1					
ANR	790688	CompoundStatement		76:15:1697:1697	790314	1					
ANR	790689	ExpressionStatement	"eprintf ( ""r_io_resize: cannot resize\\n"" )"	1665:3:44044:44084	790314	0	True				
ANR	790690	CallExpression	"eprintf ( ""r_io_resize: cannot resize\\n"" )"		790314	0					
ANR	790691	Callee	eprintf		790314	0					
ANR	790692	Identifier	eprintf		790314	0					
ANR	790693	ArgumentList	"""r_io_resize: cannot resize\\n"""		790314	1					
ANR	790694	Argument	"""r_io_resize: cannot resize\\n"""		790314	0					
ANR	790695	PrimaryExpression	"""r_io_resize: cannot resize\\n"""		790314	0					
ANR	790696	IfStatement	if ( delta && core -> offset < newsize )		790314	9					
ANR	790697	Condition	delta && core -> offset < newsize	1668:5:44098:44128	790314	0	True				
ANR	790698	AndExpression	delta && core -> offset < newsize		790314	0		&&			
ANR	790699	Identifier	delta		790314	0					
ANR	790700	RelationalExpression	core -> offset < newsize		790314	1		<			
ANR	790701	PtrMemberAccess	core -> offset		790314	0					
ANR	790702	Identifier	core		790314	0					
ANR	790703	Identifier	offset		790314	1					
ANR	790704	Identifier	newsize		790314	1					
ANR	790705	CompoundStatement		80:38:1789:1789	790314	1					
ANR	790706	ExpressionStatement	"r_io_shift ( core -> io , core -> offset , grow ? newsize : oldsize , delta )"	1669:2:44135:44199	790314	0	True				
ANR	790707	CallExpression	"r_io_shift ( core -> io , core -> offset , grow ? newsize : oldsize , delta )"		790314	0					
ANR	790708	Callee	r_io_shift		790314	0					
ANR	790709	Identifier	r_io_shift		790314	0					
ANR	790710	ArgumentList	core -> io		790314	1					
ANR	790711	Argument	core -> io		790314	0					
ANR	790712	PtrMemberAccess	core -> io		790314	0					
ANR	790713	Identifier	core		790314	0					
ANR	790714	Identifier	io		790314	1					
ANR	790715	Argument	core -> offset		790314	1					
ANR	790716	PtrMemberAccess	core -> offset		790314	0					
ANR	790717	Identifier	core		790314	0					
ANR	790718	Identifier	offset		790314	1					
ANR	790719	Argument	grow ? newsize : oldsize		790314	2					
ANR	790720	ConditionalExpression	grow ? newsize : oldsize		790314	0					
ANR	790721	Condition	grow		790314	0					
ANR	790722	Identifier	grow		790314	0					
ANR	790723	Identifier	newsize		790314	1					
ANR	790724	Identifier	oldsize		790314	2					
ANR	790725	Argument	delta		790314	3					
ANR	790726	Identifier	delta		790314	0					
ANR	790727	IfStatement	if ( ! grow )		790314	10					
ANR	790728	Condition	! grow	1671:5:44209:44213	790314	0	True				
ANR	790729	UnaryOperationExpression	! grow		790314	0					
ANR	790730	UnaryOperator	!		790314	0					
ANR	790731	Identifier	grow		790314	1					
ANR	790732	CompoundStatement		83:12:1874:1874	790314	1					
ANR	790733	ExpressionStatement	"ret = r_io_resize ( core -> io , newsize )"	1672:2:44220:44257	790314	0	True				
ANR	790734	AssignmentExpression	"ret = r_io_resize ( core -> io , newsize )"		790314	0		=			
ANR	790735	Identifier	ret		790314	0					
ANR	790736	CallExpression	"r_io_resize ( core -> io , newsize )"		790314	1					
ANR	790737	Callee	r_io_resize		790314	0					
ANR	790738	Identifier	r_io_resize		790314	0					
ANR	790739	ArgumentList	core -> io		790314	1					
ANR	790740	Argument	core -> io		790314	0					
ANR	790741	PtrMemberAccess	core -> io		790314	0					
ANR	790742	Identifier	core		790314	0					
ANR	790743	Identifier	io		790314	1					
ANR	790744	Argument	newsize		790314	1					
ANR	790745	Identifier	newsize		790314	0					
ANR	790746	IfStatement	if ( ret < 1 )		790314	1					
ANR	790747	Condition	ret < 1	1673:6:44265:44271	790314	0	True				
ANR	790748	RelationalExpression	ret < 1		790314	0		<			
ANR	790749	Identifier	ret		790314	0					
ANR	790750	PrimaryExpression	1		790314	1					
ANR	790751	CompoundStatement		85:15:1932:1932	790314	1					
ANR	790752	ExpressionStatement	"eprintf ( ""r_io_resize: cannot resize\\n"" )"	1674:3:44279:44319	790314	0	True				
ANR	790753	CallExpression	"eprintf ( ""r_io_resize: cannot resize\\n"" )"		790314	0					
ANR	790754	Callee	eprintf		790314	0					
ANR	790755	Identifier	eprintf		790314	0					
ANR	790756	ArgumentList	"""r_io_resize: cannot resize\\n"""		790314	1					
ANR	790757	Argument	"""r_io_resize: cannot resize\\n"""		790314	0					
ANR	790758	PrimaryExpression	"""r_io_resize: cannot resize\\n"""		790314	0					
ANR	790759	IfStatement	if ( newsize < core -> offset + core -> blocksize || oldsize < core -> offset + core -> blocksize )		790314	11					
ANR	790760	Condition	newsize < core -> offset + core -> blocksize || oldsize < core -> offset + core -> blocksize	1677:5:44333:44414	790314	0	True				
ANR	790761	OrExpression	newsize < core -> offset + core -> blocksize || oldsize < core -> offset + core -> blocksize		790314	0		||			
ANR	790762	RelationalExpression	newsize < core -> offset + core -> blocksize		790314	0		<			
ANR	790763	Identifier	newsize		790314	0					
ANR	790764	AdditiveExpression	core -> offset + core -> blocksize		790314	1		+			
ANR	790765	PtrMemberAccess	core -> offset		790314	0					
ANR	790766	Identifier	core		790314	0					
ANR	790767	Identifier	offset		790314	1					
ANR	790768	PtrMemberAccess	core -> blocksize		790314	1					
ANR	790769	Identifier	core		790314	0					
ANR	790770	Identifier	blocksize		790314	1					
ANR	790771	RelationalExpression	oldsize < core -> offset + core -> blocksize		790314	1		<			
ANR	790772	Identifier	oldsize		790314	0					
ANR	790773	AdditiveExpression	core -> offset + core -> blocksize		790314	1		+			
ANR	790774	PtrMemberAccess	core -> offset		790314	0					
ANR	790775	Identifier	core		790314	0					
ANR	790776	Identifier	offset		790314	1					
ANR	790777	PtrMemberAccess	core -> blocksize		790314	1					
ANR	790778	Identifier	core		790314	0					
ANR	790779	Identifier	blocksize		790314	1					
ANR	790780	CompoundStatement		89:89:2075:2075	790314	1					
ANR	790781	ExpressionStatement	r_core_block_read ( core )	1678:2:44421:44445	790314	0	True				
ANR	790782	CallExpression	r_core_block_read ( core )		790314	0					
ANR	790783	Callee	r_core_block_read		790314	0					
ANR	790784	Identifier	r_core_block_read		790314	0					
ANR	790785	ArgumentList	core		790314	1					
ANR	790786	Argument	core		790314	0					
ANR	790787	Identifier	core		790314	0					
ANR	790788	ReturnStatement	return true ;	1680:1:44451:44462	790314	12	True				
ANR	790789	Identifier	true		790314	0					
ANR	790790	ReturnType	static int		790314	1					
ANR	790791	Identifier	cmd_resize		790314	2					
ANR	790792	ParameterList	"void * data , const char * input"		790314	3					
ANR	790793	Parameter	void * data	1589:22:42310:42319	790314	0	True				
ANR	790794	ParameterType	void *		790314	0					
ANR	790795	Identifier	data		790314	1					
ANR	790796	Parameter	const char * input	1589:34:42322:42338	790314	1	True				
ANR	790797	ParameterType	const char *		790314	0					
ANR	790798	Identifier	input		790314	1					
ANR	790799	CFGEntryNode	ENTRY		790314		True				
ANR	790800	CFGExitNode	EXIT		790314		True				
ANR	790801	Symbol	data		790314						
ANR	790802	Symbol	core -> r_main_radare2		790314						
ANR	790803	Symbol	delta		790314						
ANR	790804	Symbol	* core		790314						
ANR	790805	Symbol	* input		790314						
ANR	790806	Symbol	humansz		790314						
ANR	790807	Symbol	core -> offset		790314						
ANR	790808	Symbol	r_num_math		790314						
ANR	790809	Symbol	strlen		790314						
ANR	790810	Symbol	r_io_fd_size		790314						
ANR	790811	Symbol	file		790314						
ANR	790812	Symbol	core -> io		790314						
ANR	790813	Symbol	help_msg_r		790314						
ANR	790814	Symbol	core -> num		790314						
ANR	790815	Symbol	* * core		790314						
ANR	790816	Symbol	ret		790314						
ANR	790817	Symbol	r_str_startswith		790314						
ANR	790818	Symbol	core -> blocksize		790314						
ANR	790819	Symbol	grow		790314						
ANR	790820	Symbol	core -> file		790314						
ANR	790821	Symbol	core -> rcmd		790314						
ANR	790822	Symbol	newsize		790314						
ANR	790823	Symbol	false		790314						
ANR	790824	Symbol	r_io_resize		790314						
ANR	790825	Symbol	Color_RESET_TERMINAL		790314						
ANR	790826	Symbol	* file		790314						
ANR	790827	Symbol	input		790314						
ANR	790828	Symbol	core		790314						
ANR	790829	Symbol	* core -> file		790314						
ANR	790830	Symbol	cmd_r2cmd		790314						
ANR	790831	Symbol	true		790314						
ANR	790832	Symbol	core -> file -> fd		790314						
ANR	790833	Symbol	r_str_trim_ro		790314						
ANR	790834	Symbol	oldsize		790314						
ANR	790835	Function	cmd_panels	1683:0:44467:45270							
ANR	790836	FunctionDef	"cmd_panels (void * data , const char * input)"		790835	0					
ANR	790837	CompoundStatement		1683:53:44520:45270	790835	0					
ANR	790838	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1684:1:44523:44550	790835	0	True				
ANR	790839	IdentifierDecl	* core = ( RCore * ) data		790835	0					
ANR	790840	IdentifierDeclType	RCore *		790835	0					
ANR	790841	Identifier	core		790835	1					
ANR	790842	AssignmentExpression	* core = ( RCore * ) data		790835	2		=			
ANR	790843	Identifier	core		790835	0					
ANR	790844	CastExpression	( RCore * ) data		790835	1					
ANR	790845	CastTarget	RCore *		790835	0					
ANR	790846	Identifier	data		790835	1					
ANR	790847	IfStatement	if ( core -> vmode )		790835	1					
ANR	790848	Condition	core -> vmode	1685:5:44557:44567	790835	0	True				
ANR	790849	PtrMemberAccess	core -> vmode		790835	0					
ANR	790850	Identifier	core		790835	0					
ANR	790851	Identifier	vmode		790835	1					
ANR	790852	CompoundStatement		3:18:49:49	790835	1					
ANR	790853	ReturnStatement	return false ;	1686:2:44574:44586	790835	0	True				
ANR	790854	Identifier	false		790835	0					
ANR	790855	IfStatement	if ( * input == '?' )		790835	2					
ANR	790856	Condition	* input == '?'	1688:5:44596:44608	790835	0	True				
ANR	790857	EqualityExpression	* input == '?'		790835	0		==			
ANR	790858	UnaryOperationExpression	* input		790835	0					
ANR	790859	UnaryOperator	*		790835	0					
ANR	790860	Identifier	input		790835	1					
ANR	790861	PrimaryExpression	'?'		790835	1					
ANR	790862	CompoundStatement		6:20:90:90	790835	1					
ANR	790863	ExpressionStatement	"eprintf ( ""Usage: v[*i]\\n"" )"	1689:2:44615:44641	790835	0	True				
ANR	790864	CallExpression	"eprintf ( ""Usage: v[*i]\\n"" )"		790835	0					
ANR	790865	Callee	eprintf		790835	0					
ANR	790866	Identifier	eprintf		790835	0					
ANR	790867	ArgumentList	"""Usage: v[*i]\\n"""		790835	1					
ANR	790868	Argument	"""Usage: v[*i]\\n"""		790835	0					
ANR	790869	PrimaryExpression	"""Usage: v[*i]\\n"""		790835	0					
ANR	790870	ExpressionStatement	"eprintf ( ""v.test    # save curren layout with name test\\n"" )"	1690:2:44645:44704	790835	1	True				
ANR	790871	CallExpression	"eprintf ( ""v.test    # save curren layout with name test\\n"" )"		790835	0					
ANR	790872	Callee	eprintf		790835	0					
ANR	790873	Identifier	eprintf		790835	0					
ANR	790874	ArgumentList	"""v.test    # save curren layout with name test\\n"""		790835	1					
ANR	790875	Argument	"""v.test    # save curren layout with name test\\n"""		790835	0					
ANR	790876	PrimaryExpression	"""v.test    # save curren layout with name test\\n"""		790835	0					
ANR	790877	ExpressionStatement	"eprintf ( ""v test    # load saved layout with name test\\n"" )"	1691:2:44708:44766	790835	2	True				
ANR	790878	CallExpression	"eprintf ( ""v test    # load saved layout with name test\\n"" )"		790835	0					
ANR	790879	Callee	eprintf		790835	0					
ANR	790880	Identifier	eprintf		790835	0					
ANR	790881	ArgumentList	"""v test    # load saved layout with name test\\n"""		790835	1					
ANR	790882	Argument	"""v test    # load saved layout with name test\\n"""		790835	0					
ANR	790883	PrimaryExpression	"""v test    # load saved layout with name test\\n"""		790835	0					
ANR	790884	ExpressionStatement	"eprintf ( ""vi ...    # launch 'vim'\\n"" )"	1692:2:44770:44808	790835	3	True				
ANR	790885	CallExpression	"eprintf ( ""vi ...    # launch 'vim'\\n"" )"		790835	0					
ANR	790886	Callee	eprintf		790835	0					
ANR	790887	Identifier	eprintf		790835	0					
ANR	790888	ArgumentList	"""vi ...    # launch 'vim'\\n"""		790835	1					
ANR	790889	Argument	"""vi ...    # launch 'vim'\\n"""		790835	0					
ANR	790890	PrimaryExpression	"""vi ...    # launch 'vim'\\n"""		790835	0					
ANR	790891	ReturnStatement	return false ;	1693:2:44812:44824	790835	4	True				
ANR	790892	Identifier	false		790835	0					
ANR	790893	IfStatement	if ( * input == ' ' )		790835	3					
ANR	790894	Condition	* input == ' '	1695:5:44834:44846	790835	0	True				
ANR	790895	EqualityExpression	* input == ' '		790835	0		==			
ANR	790896	UnaryOperationExpression	* input		790835	0					
ANR	790897	UnaryOperator	*		790835	0					
ANR	790898	Identifier	input		790835	1					
ANR	790899	PrimaryExpression	' '		790835	1					
ANR	790900	CompoundStatement		13:20:328:328	790835	1					
ANR	790901	IfStatement	if ( core -> panels )		790835	0					
ANR	790902	Condition	core -> panels	1696:6:44857:44868	790835	0	True				
ANR	790903	PtrMemberAccess	core -> panels		790835	0					
ANR	790904	Identifier	core		790835	0					
ANR	790905	Identifier	panels		790835	1					
ANR	790906	CompoundStatement		14:20:350:350	790835	1					
ANR	790907	ExpressionStatement	"r_load_panels_layout ( core , input + 1 )"	1697:3:44876:44914	790835	0	True				
ANR	790908	CallExpression	"r_load_panels_layout ( core , input + 1 )"		790835	0					
ANR	790909	Callee	r_load_panels_layout		790835	0					
ANR	790910	Identifier	r_load_panels_layout		790835	0					
ANR	790911	ArgumentList	core		790835	1					
ANR	790912	Argument	core		790835	0					
ANR	790913	Identifier	core		790835	0					
ANR	790914	Argument	input + 1		790835	1					
ANR	790915	AdditiveExpression	input + 1		790835	0		+			
ANR	790916	Identifier	input		790835	0					
ANR	790917	PrimaryExpression	1		790835	1					
ANR	790918	ExpressionStatement	"r_config_set ( core -> config , ""scr.layout"" , input + 1 )"	1699:2:44922:44974	790835	1	True				
ANR	790919	CallExpression	"r_config_set ( core -> config , ""scr.layout"" , input + 1 )"		790835	0					
ANR	790920	Callee	r_config_set		790835	0					
ANR	790921	Identifier	r_config_set		790835	0					
ANR	790922	ArgumentList	core -> config		790835	1					
ANR	790923	Argument	core -> config		790835	0					
ANR	790924	PtrMemberAccess	core -> config		790835	0					
ANR	790925	Identifier	core		790835	0					
ANR	790926	Identifier	config		790835	1					
ANR	790927	Argument	"""scr.layout"""		790835	1					
ANR	790928	PrimaryExpression	"""scr.layout"""		790835	0					
ANR	790929	Argument	input + 1		790835	2					
ANR	790930	AdditiveExpression	input + 1		790835	0		+			
ANR	790931	Identifier	input		790835	0					
ANR	790932	PrimaryExpression	1		790835	1					
ANR	790933	ReturnStatement	return true ;	1700:2:44978:44989	790835	2	True				
ANR	790934	Identifier	true		790835	0					
ANR	790935	IfStatement	if ( * input == '=' )		790835	4					
ANR	790936	Condition	* input == '='	1702:5:44999:45011	790835	0	True				
ANR	790937	EqualityExpression	* input == '='		790835	0		==			
ANR	790938	UnaryOperationExpression	* input		790835	0					
ANR	790939	UnaryOperator	*		790835	0					
ANR	790940	Identifier	input		790835	1					
ANR	790941	PrimaryExpression	'='		790835	1					
ANR	790942	CompoundStatement		20:20:493:493	790835	1					
ANR	790943	ExpressionStatement	"r_save_panels_layout ( core , input + 1 )"	1703:2:45018:45056	790835	0	True				
ANR	790944	CallExpression	"r_save_panels_layout ( core , input + 1 )"		790835	0					
ANR	790945	Callee	r_save_panels_layout		790835	0					
ANR	790946	Identifier	r_save_panels_layout		790835	0					
ANR	790947	ArgumentList	core		790835	1					
ANR	790948	Argument	core		790835	0					
ANR	790949	Identifier	core		790835	0					
ANR	790950	Argument	input + 1		790835	1					
ANR	790951	AdditiveExpression	input + 1		790835	0		+			
ANR	790952	Identifier	input		790835	0					
ANR	790953	PrimaryExpression	1		790835	1					
ANR	790954	ExpressionStatement	"r_config_set ( core -> config , ""scr.layout"" , input + 1 )"	1704:2:45060:45112	790835	1	True				
ANR	790955	CallExpression	"r_config_set ( core -> config , ""scr.layout"" , input + 1 )"		790835	0					
ANR	790956	Callee	r_config_set		790835	0					
ANR	790957	Identifier	r_config_set		790835	0					
ANR	790958	ArgumentList	core -> config		790835	1					
ANR	790959	Argument	core -> config		790835	0					
ANR	790960	PtrMemberAccess	core -> config		790835	0					
ANR	790961	Identifier	core		790835	0					
ANR	790962	Identifier	config		790835	1					
ANR	790963	Argument	"""scr.layout"""		790835	1					
ANR	790964	PrimaryExpression	"""scr.layout"""		790835	0					
ANR	790965	Argument	input + 1		790835	2					
ANR	790966	AdditiveExpression	input + 1		790835	0		+			
ANR	790967	Identifier	input		790835	0					
ANR	790968	PrimaryExpression	1		790835	1					
ANR	790969	ReturnStatement	return true ;	1705:2:45116:45127	790835	2	True				
ANR	790970	Identifier	true		790835	0					
ANR	790971	IfStatement	if ( * input == 'i' )		790835	5					
ANR	790972	Condition	* input == 'i'	1707:5:45137:45149	790835	0	True				
ANR	790973	EqualityExpression	* input == 'i'		790835	0		==			
ANR	790974	UnaryOperationExpression	* input		790835	0					
ANR	790975	UnaryOperator	*		790835	0					
ANR	790976	Identifier	input		790835	1					
ANR	790977	PrimaryExpression	'i'		790835	1					
ANR	790978	CompoundStatement		25:20:631:631	790835	1					
ANR	790979	ExpressionStatement	"r_sys_cmdf ( ""v%s"" , input )"	1708:2:45156:45181	790835	0	True				
ANR	790980	CallExpression	"r_sys_cmdf ( ""v%s"" , input )"		790835	0					
ANR	790981	Callee	r_sys_cmdf		790835	0					
ANR	790982	Identifier	r_sys_cmdf		790835	0					
ANR	790983	ArgumentList	"""v%s"""		790835	1					
ANR	790984	Argument	"""v%s"""		790835	0					
ANR	790985	PrimaryExpression	"""v%s"""		790835	0					
ANR	790986	Argument	input		790835	1					
ANR	790987	Identifier	input		790835	0					
ANR	790988	ReturnStatement	return false ;	1709:2:45185:45197	790835	1	True				
ANR	790989	Identifier	false		790835	0					
ANR	790990	ExpressionStatement	"r_core_visual_panels_root ( core , core -> panels_root )"	1711:1:45203:45254	790835	6	True				
ANR	790991	CallExpression	"r_core_visual_panels_root ( core , core -> panels_root )"		790835	0					
ANR	790992	Callee	r_core_visual_panels_root		790835	0					
ANR	790993	Identifier	r_core_visual_panels_root		790835	0					
ANR	790994	ArgumentList	core		790835	1					
ANR	790995	Argument	core		790835	0					
ANR	790996	Identifier	core		790835	0					
ANR	790997	Argument	core -> panels_root		790835	1					
ANR	790998	PtrMemberAccess	core -> panels_root		790835	0					
ANR	790999	Identifier	core		790835	0					
ANR	791000	Identifier	panels_root		790835	1					
ANR	791001	ReturnStatement	return true ;	1712:1:45257:45268	790835	7	True				
ANR	791002	Identifier	true		790835	0					
ANR	791003	ReturnType	static int		790835	1					
ANR	791004	Identifier	cmd_panels		790835	2					
ANR	791005	ParameterList	"void * data , const char * input"		790835	3					
ANR	791006	Parameter	void * data	1683:22:44489:44498	790835	0	True				
ANR	791007	ParameterType	void *		790835	0					
ANR	791008	Identifier	data		790835	1					
ANR	791009	Parameter	const char * input	1683:34:44501:44517	790835	1	True				
ANR	791010	ParameterType	const char *		790835	0					
ANR	791011	Identifier	input		790835	1					
ANR	791012	CFGEntryNode	ENTRY		790835		True				
ANR	791013	CFGExitNode	EXIT		790835		True				
ANR	791014	Symbol	core -> config		790835						
ANR	791015	Symbol	input		790835						
ANR	791016	Symbol	core		790835						
ANR	791017	Symbol	data		790835						
ANR	791018	Symbol	core -> panels		790835						
ANR	791019	Symbol	* core		790835						
ANR	791020	Symbol	false		790835						
ANR	791021	Symbol	* input		790835						
ANR	791022	Symbol	true		790835						
ANR	791023	Symbol	core -> panels_root		790835						
ANR	791024	Symbol	core -> vmode		790835						
ANR	791025	Function	cmd_visual	1715:0:45273:45498							
ANR	791026	FunctionDef	"cmd_visual (void * data , const char * input)"		791025	0					
ANR	791027	CompoundStatement		1715:53:45326:45498	791025	0					
ANR	791028	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1716:1:45329:45356	791025	0	True				
ANR	791029	IdentifierDecl	* core = ( RCore * ) data		791025	0					
ANR	791030	IdentifierDeclType	RCore *		791025	0					
ANR	791031	Identifier	core		791025	1					
ANR	791032	AssignmentExpression	* core = ( RCore * ) data		791025	2		=			
ANR	791033	Identifier	core		791025	0					
ANR	791034	CastExpression	( RCore * ) data		791025	1					
ANR	791035	CastTarget	RCore *		791025	0					
ANR	791036	Identifier	data		791025	1					
ANR	791037	IfStatement	if ( core -> http_up )		791025	1					
ANR	791038	Condition	core -> http_up	1717:5:45363:45375	791025	0	True				
ANR	791039	PtrMemberAccess	core -> http_up		791025	0					
ANR	791040	Identifier	core		791025	0					
ANR	791041	Identifier	http_up		791025	1					
ANR	791042	CompoundStatement		3:20:51:51	791025	1					
ANR	791043	ReturnStatement	return false ;	1718:2:45382:45394	791025	0	True				
ANR	791044	Identifier	false		791025	0					
ANR	791045	IfStatement	if ( ! r_cons_is_interactive ( ) )		791025	2					
ANR	791046	Condition	! r_cons_is_interactive ( )	1720:5:45404:45428	791025	0	True				
ANR	791047	UnaryOperationExpression	! r_cons_is_interactive ( )		791025	0					
ANR	791048	UnaryOperator	!		791025	0					
ANR	791049	CallExpression	r_cons_is_interactive ( )		791025	1					
ANR	791050	Callee	r_cons_is_interactive		791025	0					
ANR	791051	Identifier	r_cons_is_interactive		791025	0					
ANR	791052	ArgumentList			791025	1					
ANR	791053	CompoundStatement		6:32:104:104	791025	1					
ANR	791054	ReturnStatement	return false ;	1721:2:45435:45447	791025	0	True				
ANR	791055	Identifier	false		791025	0					
ANR	791056	ReturnStatement	"return r_core_visual ( ( RCore * ) data , input ) ;"	1723:1:45453:45496	791025	3	True				
ANR	791057	CallExpression	"r_core_visual ( ( RCore * ) data , input )"		791025	0					
ANR	791058	Callee	r_core_visual		791025	0					
ANR	791059	Identifier	r_core_visual		791025	0					
ANR	791060	ArgumentList	( RCore * ) data		791025	1					
ANR	791061	Argument	( RCore * ) data		791025	0					
ANR	791062	CastExpression	( RCore * ) data		791025	0					
ANR	791063	CastTarget	RCore *		791025	0					
ANR	791064	Identifier	data		791025	1					
ANR	791065	Argument	input		791025	1					
ANR	791066	Identifier	input		791025	0					
ANR	791067	ReturnType	static int		791025	1					
ANR	791068	Identifier	cmd_visual		791025	2					
ANR	791069	ParameterList	"void * data , const char * input"		791025	3					
ANR	791070	Parameter	void * data	1715:22:45295:45304	791025	0	True				
ANR	791071	ParameterType	void *		791025	0					
ANR	791072	Identifier	data		791025	1					
ANR	791073	Parameter	const char * input	1715:34:45307:45323	791025	1	True				
ANR	791074	ParameterType	const char *		791025	0					
ANR	791075	Identifier	input		791025	1					
ANR	791076	CFGEntryNode	ENTRY		791025		True				
ANR	791077	CFGExitNode	EXIT		791025		True				
ANR	791078	Symbol	input		791025						
ANR	791079	Symbol	core		791025						
ANR	791080	Symbol	r_cons_is_interactive		791025						
ANR	791081	Symbol	data		791025						
ANR	791082	Symbol	core -> http_up		791025						
ANR	791083	Symbol	* core		791025						
ANR	791084	Symbol	false		791025						
ANR	791085	Symbol	r_core_visual		791025						
ANR	791086	Function	cmd_pipein	1726:0:45501:45671							
ANR	791087	FunctionDef	"cmd_pipein (void * user , const char * input)"		791086	0					
ANR	791088	CompoundStatement		1726:53:45554:45671	791086	0					
ANR	791089	IdentifierDeclStatement	char * buf = strdup ( input ) ;	1727:1:45557:45583	791086	0	True				
ANR	791090	IdentifierDecl	* buf = strdup ( input )		791086	0					
ANR	791091	IdentifierDeclType	char *		791086	0					
ANR	791092	Identifier	buf		791086	1					
ANR	791093	AssignmentExpression	* buf = strdup ( input )		791086	2		=			
ANR	791094	Identifier	buf		791086	0					
ANR	791095	CallExpression	strdup ( input )		791086	1					
ANR	791096	Callee	strdup		791086	0					
ANR	791097	Identifier	strdup		791086	0					
ANR	791098	ArgumentList	input		791086	1					
ANR	791099	Argument	input		791086	0					
ANR	791100	Identifier	input		791086	0					
ANR	791101	IdentifierDeclStatement	int len = r_str_unescape ( buf ) ;	1728:1:45586:45616	791086	1	True				
ANR	791102	IdentifierDecl	len = r_str_unescape ( buf )		791086	0					
ANR	791103	IdentifierDeclType	int		791086	0					
ANR	791104	Identifier	len		791086	1					
ANR	791105	AssignmentExpression	len = r_str_unescape ( buf )		791086	2		=			
ANR	791106	Identifier	len		791086	0					
ANR	791107	CallExpression	r_str_unescape ( buf )		791086	1					
ANR	791108	Callee	r_str_unescape		791086	0					
ANR	791109	Identifier	r_str_unescape		791086	0					
ANR	791110	ArgumentList	buf		791086	1					
ANR	791111	Argument	buf		791086	0					
ANR	791112	Identifier	buf		791086	0					
ANR	791113	ExpressionStatement	"r_cons_readpush ( buf , len )"	1729:1:45619:45645	791086	2	True				
ANR	791114	CallExpression	"r_cons_readpush ( buf , len )"		791086	0					
ANR	791115	Callee	r_cons_readpush		791086	0					
ANR	791116	Identifier	r_cons_readpush		791086	0					
ANR	791117	ArgumentList	buf		791086	1					
ANR	791118	Argument	buf		791086	0					
ANR	791119	Identifier	buf		791086	0					
ANR	791120	Argument	len		791086	1					
ANR	791121	Identifier	len		791086	0					
ANR	791122	ExpressionStatement	free ( buf )	1730:1:45648:45658	791086	3	True				
ANR	791123	CallExpression	free ( buf )		791086	0					
ANR	791124	Callee	free		791086	0					
ANR	791125	Identifier	free		791086	0					
ANR	791126	ArgumentList	buf		791086	1					
ANR	791127	Argument	buf		791086	0					
ANR	791128	Identifier	buf		791086	0					
ANR	791129	ReturnStatement	return 0 ;	1731:1:45661:45669	791086	4	True				
ANR	791130	PrimaryExpression	0		791086	0					
ANR	791131	ReturnType	static int		791086	1					
ANR	791132	Identifier	cmd_pipein		791086	2					
ANR	791133	ParameterList	"void * user , const char * input"		791086	3					
ANR	791134	Parameter	void * user	1726:22:45523:45532	791086	0	True				
ANR	791135	ParameterType	void *		791086	0					
ANR	791136	Identifier	user		791086	1					
ANR	791137	Parameter	const char * input	1726:34:45535:45551	791086	1	True				
ANR	791138	ParameterType	const char *		791086	0					
ANR	791139	Identifier	input		791086	1					
ANR	791140	CFGEntryNode	ENTRY		791086		True				
ANR	791141	CFGExitNode	EXIT		791086		True				
ANR	791142	Symbol	input		791086						
ANR	791143	Symbol	buf		791086						
ANR	791144	Symbol	len		791086						
ANR	791145	Symbol	strdup		791086						
ANR	791146	Symbol	r_str_unescape		791086						
ANR	791147	Symbol	user		791086						
ANR	791148	Function	cmd_tasks	1734:0:45674:47394							
ANR	791149	FunctionDef	"cmd_tasks (void * data , const char * input)"		791148	0					
ANR	791150	CompoundStatement		1734:52:45726:47394	791148	0					
ANR	791151	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1735:1:45729:45756	791148	0	True				
ANR	791152	IdentifierDecl	* core = ( RCore * ) data		791148	0					
ANR	791153	IdentifierDeclType	RCore *		791148	0					
ANR	791154	Identifier	core		791148	1					
ANR	791155	AssignmentExpression	* core = ( RCore * ) data		791148	2		=			
ANR	791156	Identifier	core		791148	0					
ANR	791157	CastExpression	( RCore * ) data		791148	1					
ANR	791158	CastTarget	RCore *		791148	0					
ANR	791159	Identifier	data		791148	1					
ANR	791160	SwitchStatement	switch ( input [ 0 ] )		791148	1					
ANR	791161	Condition	input [ 0 ]	1736:9:45767:45774	791148	0	True				
ANR	791162	ArrayIndexing	input [ 0 ]		791148	0					
ANR	791163	Identifier	input		791148	0					
ANR	791164	PrimaryExpression	0		791148	1					
ANR	791165	CompoundStatement		3:19:50:50	791148	1					
ANR	791166	Label	case '\\0' :	1737:1:45780:45789	791148	0	True				
ANR	791167	Label	case 'j' :	1738:1:45799:45807	791148	1	True				
ANR	791168	ExpressionStatement	"r_core_task_list ( core , * input )"	1739:2:45819:45850	791148	2	True				
ANR	791169	CallExpression	"r_core_task_list ( core , * input )"		791148	0					
ANR	791170	Callee	r_core_task_list		791148	0					
ANR	791171	Identifier	r_core_task_list		791148	0					
ANR	791172	ArgumentList	core		791148	1					
ANR	791173	Argument	core		791148	0					
ANR	791174	Identifier	core		791148	0					
ANR	791175	Argument	* input		791148	1					
ANR	791176	UnaryOperationExpression	* input		791148	0					
ANR	791177	UnaryOperator	*		791148	0					
ANR	791178	Identifier	input		791148	1					
ANR	791179	BreakStatement	break ;	1740:2:45854:45859	791148	3	True				
ANR	791180	Label	case 'b' :	1741:1:45862:45870	791148	4	True				
ANR	791181	CompoundStatement		13:2:263:306	791148	5					
ANR	791182	IfStatement	if ( r_sandbox_enable ( 0 ) )		791148	0					
ANR	791183	Condition	r_sandbox_enable ( 0 )	1742:6:45888:45907	791148	0	True				
ANR	791184	CallExpression	r_sandbox_enable ( 0 )		791148	0					
ANR	791185	Callee	r_sandbox_enable		791148	0					
ANR	791186	Identifier	r_sandbox_enable		791148	0					
ANR	791187	ArgumentList	0		791148	1					
ANR	791188	Argument	0		791148	0					
ANR	791189	PrimaryExpression	0		791148	0					
ANR	791190	CompoundStatement		9:28:183:183	791148	1					
ANR	791191	ExpressionStatement	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"	1743:3:45915:45969	791148	0	True				
ANR	791192	CallExpression	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"		791148	0					
ANR	791193	Callee	eprintf		791148	0					
ANR	791194	Identifier	eprintf		791148	0					
ANR	791195	ArgumentList	"""This command is disabled in sandbox mode\\n"""		791148	1					
ANR	791196	Argument	"""This command is disabled in sandbox mode\\n"""		791148	0					
ANR	791197	PrimaryExpression	"""This command is disabled in sandbox mode\\n"""		791148	0					
ANR	791198	ReturnStatement	return 0 ;	1744:3:45974:45982	791148	1	True				
ANR	791199	PrimaryExpression	0		791148	0					
ANR	791200	IdentifierDeclStatement	"int tid = r_num_math ( core -> num , input + 1 ) ;"	1746:2:45990:46033	791148	1	True				
ANR	791201	IdentifierDecl	"tid = r_num_math ( core -> num , input + 1 )"		791148	0					
ANR	791202	IdentifierDeclType	int		791148	0					
ANR	791203	Identifier	tid		791148	1					
ANR	791204	AssignmentExpression	"tid = r_num_math ( core -> num , input + 1 )"		791148	2		=			
ANR	791205	Identifier	tid		791148	0					
ANR	791206	CallExpression	"r_num_math ( core -> num , input + 1 )"		791148	1					
ANR	791207	Callee	r_num_math		791148	0					
ANR	791208	Identifier	r_num_math		791148	0					
ANR	791209	ArgumentList	core -> num		791148	1					
ANR	791210	Argument	core -> num		791148	0					
ANR	791211	PtrMemberAccess	core -> num		791148	0					
ANR	791212	Identifier	core		791148	0					
ANR	791213	Identifier	num		791148	1					
ANR	791214	Argument	input + 1		791148	1					
ANR	791215	AdditiveExpression	input + 1		791148	0		+			
ANR	791216	Identifier	input		791148	0					
ANR	791217	PrimaryExpression	1		791148	1					
ANR	791218	IfStatement	if ( tid )		791148	2					
ANR	791219	Condition	tid	1747:6:46041:46043	791148	0	True				
ANR	791220	Identifier	tid		791148	0					
ANR	791221	CompoundStatement		14:11:319:319	791148	1					
ANR	791222	ExpressionStatement	"r_core_task_break ( core , tid )"	1748:3:46051:46080	791148	0	True				
ANR	791223	CallExpression	"r_core_task_break ( core , tid )"		791148	0					
ANR	791224	Callee	r_core_task_break		791148	0					
ANR	791225	Identifier	r_core_task_break		791148	0					
ANR	791226	ArgumentList	core		791148	1					
ANR	791227	Argument	core		791148	0					
ANR	791228	Identifier	core		791148	0					
ANR	791229	Argument	tid		791148	1					
ANR	791230	Identifier	tid		791148	0					
ANR	791231	BreakStatement	break ;	1750:2:46088:46093	791148	3	True				
ANR	791232	Label	case '&' :	1752:1:46099:46107	791148	6	True				
ANR	791233	CompoundStatement		24:2:500:543	791148	7					
ANR	791234	IfStatement	if ( r_sandbox_enable ( 0 ) )		791148	0					
ANR	791235	Condition	r_sandbox_enable ( 0 )	1753:6:46125:46144	791148	0	True				
ANR	791236	CallExpression	r_sandbox_enable ( 0 )		791148	0					
ANR	791237	Callee	r_sandbox_enable		791148	0					
ANR	791238	Identifier	r_sandbox_enable		791148	0					
ANR	791239	ArgumentList	0		791148	1					
ANR	791240	Argument	0		791148	0					
ANR	791241	PrimaryExpression	0		791148	0					
ANR	791242	CompoundStatement		20:28:420:420	791148	1					
ANR	791243	ExpressionStatement	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"	1754:3:46152:46206	791148	0	True				
ANR	791244	CallExpression	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"		791148	0					
ANR	791245	Callee	eprintf		791148	0					
ANR	791246	Identifier	eprintf		791148	0					
ANR	791247	ArgumentList	"""This command is disabled in sandbox mode\\n"""		791148	1					
ANR	791248	Argument	"""This command is disabled in sandbox mode\\n"""		791148	0					
ANR	791249	PrimaryExpression	"""This command is disabled in sandbox mode\\n"""		791148	0					
ANR	791250	ReturnStatement	return 0 ;	1755:3:46211:46219	791148	1	True				
ANR	791251	PrimaryExpression	0		791148	0					
ANR	791252	IdentifierDeclStatement	"int tid = r_num_math ( core -> num , input + 1 ) ;"	1757:2:46227:46270	791148	1	True				
ANR	791253	IdentifierDecl	"tid = r_num_math ( core -> num , input + 1 )"		791148	0					
ANR	791254	IdentifierDeclType	int		791148	0					
ANR	791255	Identifier	tid		791148	1					
ANR	791256	AssignmentExpression	"tid = r_num_math ( core -> num , input + 1 )"		791148	2		=			
ANR	791257	Identifier	tid		791148	0					
ANR	791258	CallExpression	"r_num_math ( core -> num , input + 1 )"		791148	1					
ANR	791259	Callee	r_num_math		791148	0					
ANR	791260	Identifier	r_num_math		791148	0					
ANR	791261	ArgumentList	core -> num		791148	1					
ANR	791262	Argument	core -> num		791148	0					
ANR	791263	PtrMemberAccess	core -> num		791148	0					
ANR	791264	Identifier	core		791148	0					
ANR	791265	Identifier	num		791148	1					
ANR	791266	Argument	input + 1		791148	1					
ANR	791267	AdditiveExpression	input + 1		791148	0		+			
ANR	791268	Identifier	input		791148	0					
ANR	791269	PrimaryExpression	1		791148	1					
ANR	791270	ExpressionStatement	"r_core_task_join ( core , core -> current_task , tid ? tid : - 1 )"	1758:2:46274:46333	791148	2	True				
ANR	791271	CallExpression	"r_core_task_join ( core , core -> current_task , tid ? tid : - 1 )"		791148	0					
ANR	791272	Callee	r_core_task_join		791148	0					
ANR	791273	Identifier	r_core_task_join		791148	0					
ANR	791274	ArgumentList	core		791148	1					
ANR	791275	Argument	core		791148	0					
ANR	791276	Identifier	core		791148	0					
ANR	791277	Argument	core -> current_task		791148	1					
ANR	791278	PtrMemberAccess	core -> current_task		791148	0					
ANR	791279	Identifier	core		791148	0					
ANR	791280	Identifier	current_task		791148	1					
ANR	791281	Argument	tid ? tid : - 1		791148	2					
ANR	791282	ConditionalExpression	tid ? tid : - 1		791148	0					
ANR	791283	Condition	tid		791148	0					
ANR	791284	Identifier	tid		791148	0					
ANR	791285	Identifier	tid		791148	1					
ANR	791286	UnaryOperationExpression	- 1		791148	2					
ANR	791287	UnaryOperator	-		791148	0					
ANR	791288	PrimaryExpression	1		791148	1					
ANR	791289	BreakStatement	break ;	1759:2:46337:46342	791148	3	True				
ANR	791290	Label	case '=' :	1761:1:46348:46356	791148	8	True				
ANR	791291	CompoundStatement		30:2:678:721	791148	9					
ANR	791292	IdentifierDeclStatement	"int tid = r_num_math ( core -> num , input + 1 ) ;"	1763:2:46405:46448	791148	0	True				
ANR	791293	IdentifierDecl	"tid = r_num_math ( core -> num , input + 1 )"		791148	0					
ANR	791294	IdentifierDeclType	int		791148	0					
ANR	791295	Identifier	tid		791148	1					
ANR	791296	AssignmentExpression	"tid = r_num_math ( core -> num , input + 1 )"		791148	2		=			
ANR	791297	Identifier	tid		791148	0					
ANR	791298	CallExpression	"r_num_math ( core -> num , input + 1 )"		791148	1					
ANR	791299	Callee	r_num_math		791148	0					
ANR	791300	Identifier	r_num_math		791148	0					
ANR	791301	ArgumentList	core -> num		791148	1					
ANR	791302	Argument	core -> num		791148	0					
ANR	791303	PtrMemberAccess	core -> num		791148	0					
ANR	791304	Identifier	core		791148	0					
ANR	791305	Identifier	num		791148	1					
ANR	791306	Argument	input + 1		791148	1					
ANR	791307	AdditiveExpression	input + 1		791148	0		+			
ANR	791308	Identifier	input		791148	0					
ANR	791309	PrimaryExpression	1		791148	1					
ANR	791310	IfStatement	if ( tid )		791148	1					
ANR	791311	Condition	tid	1764:6:46456:46458	791148	0	True				
ANR	791312	Identifier	tid		791148	0					
ANR	791313	CompoundStatement		32:3:739:791	791148	1					
ANR	791314	IdentifierDeclStatement	"RCoreTask * task = r_core_task_get_incref ( core , tid ) ;"	1765:3:46466:46518	791148	0	True				
ANR	791315	IdentifierDecl	"* task = r_core_task_get_incref ( core , tid )"		791148	0					
ANR	791316	IdentifierDeclType	RCoreTask *		791148	0					
ANR	791317	Identifier	task		791148	1					
ANR	791318	AssignmentExpression	"* task = r_core_task_get_incref ( core , tid )"		791148	2		=			
ANR	791319	Identifier	task		791148	0					
ANR	791320	CallExpression	"r_core_task_get_incref ( core , tid )"		791148	1					
ANR	791321	Callee	r_core_task_get_incref		791148	0					
ANR	791322	Identifier	r_core_task_get_incref		791148	0					
ANR	791323	ArgumentList	core		791148	1					
ANR	791324	Argument	core		791148	0					
ANR	791325	Identifier	core		791148	0					
ANR	791326	Argument	tid		791148	1					
ANR	791327	Identifier	tid		791148	0					
ANR	791328	IfStatement	if ( task )		791148	1					
ANR	791329	Condition	task	1766:7:46527:46530	791148	0	True				
ANR	791330	Identifier	task		791148	0					
ANR	791331	CompoundStatement		33:13:806:806	791148	1					
ANR	791332	IfStatement	if ( task -> res )		791148	0					
ANR	791333	Condition	task -> res	1767:8:46543:46551	791148	0	True				
ANR	791334	PtrMemberAccess	task -> res		791148	0					
ANR	791335	Identifier	task		791148	0					
ANR	791336	Identifier	res		791148	1					
ANR	791337	CompoundStatement		34:19:827:827	791148	1					
ANR	791338	ExpressionStatement	r_cons_println ( task -> res )	1768:5:46561:46587	791148	0	True				
ANR	791339	CallExpression	r_cons_println ( task -> res )		791148	0					
ANR	791340	Callee	r_cons_println		791148	0					
ANR	791341	Identifier	r_cons_println		791148	0					
ANR	791342	ArgumentList	task -> res		791148	1					
ANR	791343	Argument	task -> res		791148	0					
ANR	791344	PtrMemberAccess	task -> res		791148	0					
ANR	791345	Identifier	task		791148	0					
ANR	791346	Identifier	res		791148	1					
ANR	791347	ExpressionStatement	r_core_task_decref ( task )	1770:4:46599:46624	791148	1	True				
ANR	791348	CallExpression	r_core_task_decref ( task )		791148	0					
ANR	791349	Callee	r_core_task_decref		791148	0					
ANR	791350	Identifier	r_core_task_decref		791148	0					
ANR	791351	ArgumentList	task		791148	1					
ANR	791352	Argument	task		791148	0					
ANR	791353	Identifier	task		791148	0					
ANR	791354	ElseStatement	else		791148	0					
ANR	791355	CompoundStatement		38:10:909:909	791148	0					
ANR	791356	ExpressionStatement	"eprintf ( ""Cannot find task\\n"" )"	1772:4:46642:46672	791148	0	True				
ANR	791357	CallExpression	"eprintf ( ""Cannot find task\\n"" )"		791148	0					
ANR	791358	Callee	eprintf		791148	0					
ANR	791359	Identifier	eprintf		791148	0					
ANR	791360	ArgumentList	"""Cannot find task\\n"""		791148	1					
ANR	791361	Argument	"""Cannot find task\\n"""		791148	0					
ANR	791362	PrimaryExpression	"""Cannot find task\\n"""		791148	0					
ANR	791363	BreakStatement	break ;	1775:2:46685:46690	791148	2	True				
ANR	791364	Label	case '-' :	1777:1:46696:46704	791148	10	True				
ANR	791365	IfStatement	if ( r_sandbox_enable ( 0 ) )		791148	11					
ANR	791366	Condition	r_sandbox_enable ( 0 )	1778:6:46720:46739	791148	0	True				
ANR	791367	CallExpression	r_sandbox_enable ( 0 )		791148	0					
ANR	791368	Callee	r_sandbox_enable		791148	0					
ANR	791369	Identifier	r_sandbox_enable		791148	0					
ANR	791370	ArgumentList	0		791148	1					
ANR	791371	Argument	0		791148	0					
ANR	791372	PrimaryExpression	0		791148	0					
ANR	791373	CompoundStatement		45:28:1015:1015	791148	1					
ANR	791374	ExpressionStatement	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"	1779:3:46747:46801	791148	0	True				
ANR	791375	CallExpression	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"		791148	0					
ANR	791376	Callee	eprintf		791148	0					
ANR	791377	Identifier	eprintf		791148	0					
ANR	791378	ArgumentList	"""This command is disabled in sandbox mode\\n"""		791148	1					
ANR	791379	Argument	"""This command is disabled in sandbox mode\\n"""		791148	0					
ANR	791380	PrimaryExpression	"""This command is disabled in sandbox mode\\n"""		791148	0					
ANR	791381	ReturnStatement	return 0 ;	1780:3:46806:46814	791148	1	True				
ANR	791382	PrimaryExpression	0		791148	0					
ANR	791383	IfStatement	if ( input [ 1 ] == '*' )		791148	12					
ANR	791384	Condition	input [ 1 ] == '*'	1782:6:46826:46840	791148	0	True				
ANR	791385	EqualityExpression	input [ 1 ] == '*'		791148	0		==			
ANR	791386	ArrayIndexing	input [ 1 ]		791148	0					
ANR	791387	Identifier	input		791148	0					
ANR	791388	PrimaryExpression	1		791148	1					
ANR	791389	PrimaryExpression	'*'		791148	1					
ANR	791390	CompoundStatement		49:23:1116:1116	791148	1					
ANR	791391	ExpressionStatement	r_core_task_del_all_done ( core )	1783:3:46848:46879	791148	0	True				
ANR	791392	CallExpression	r_core_task_del_all_done ( core )		791148	0					
ANR	791393	Callee	r_core_task_del_all_done		791148	0					
ANR	791394	Identifier	r_core_task_del_all_done		791148	0					
ANR	791395	ArgumentList	core		791148	1					
ANR	791396	Argument	core		791148	0					
ANR	791397	Identifier	core		791148	0					
ANR	791398	ElseStatement	else		791148	0					
ANR	791399	CompoundStatement		51:9:1163:1163	791148	0					
ANR	791400	ExpressionStatement	"r_core_task_del ( core , r_num_math ( core -> num , input + 1 ) )"	1785:3:46895:46952	791148	0	True				
ANR	791401	CallExpression	"r_core_task_del ( core , r_num_math ( core -> num , input + 1 ) )"		791148	0					
ANR	791402	Callee	r_core_task_del		791148	0					
ANR	791403	Identifier	r_core_task_del		791148	0					
ANR	791404	ArgumentList	core		791148	1					
ANR	791405	Argument	core		791148	0					
ANR	791406	Identifier	core		791148	0					
ANR	791407	Argument	"r_num_math ( core -> num , input + 1 )"		791148	1					
ANR	791408	CallExpression	"r_num_math ( core -> num , input + 1 )"		791148	0					
ANR	791409	Callee	r_num_math		791148	0					
ANR	791410	Identifier	r_num_math		791148	0					
ANR	791411	ArgumentList	core -> num		791148	1					
ANR	791412	Argument	core -> num		791148	0					
ANR	791413	PtrMemberAccess	core -> num		791148	0					
ANR	791414	Identifier	core		791148	0					
ANR	791415	Identifier	num		791148	1					
ANR	791416	Argument	input + 1		791148	1					
ANR	791417	AdditiveExpression	input + 1		791148	0		+			
ANR	791418	Identifier	input		791148	0					
ANR	791419	PrimaryExpression	1		791148	1					
ANR	791420	BreakStatement	break ;	1787:2:46960:46965	791148	13	True				
ANR	791421	Label	case '?' :	1788:1:46968:46976	791148	14	True				
ANR	791422	Label	default :	1789:1:46987:46994	791148	15	True				
ANR	791423	Identifier	default		791148	0					
ANR	791424	ExpressionStatement	helpCmdTasks ( core )	1790:2:46998:47017	791148	16	True				
ANR	791425	CallExpression	helpCmdTasks ( core )		791148	0					
ANR	791426	Callee	helpCmdTasks		791148	0					
ANR	791427	Identifier	helpCmdTasks		791148	0					
ANR	791428	ArgumentList	core		791148	1					
ANR	791429	Argument	core		791148	0					
ANR	791430	Identifier	core		791148	0					
ANR	791431	BreakStatement	break ;	1791:2:47021:47026	791148	17	True				
ANR	791432	Label	case ' ' :	1792:1:47029:47037	791148	18	True				
ANR	791433	Label	case '_' :	1793:1:47048:47056	791148	19	True				
ANR	791434	Label	case 't' :	1794:1:47067:47075	791148	20	True				
ANR	791435	CompoundStatement		66:2:1468:1537	791148	21					
ANR	791436	IfStatement	if ( r_sandbox_enable ( 0 ) )		791148	0					
ANR	791437	Condition	r_sandbox_enable ( 0 )	1795:6:47093:47112	791148	0	True				
ANR	791438	CallExpression	r_sandbox_enable ( 0 )		791148	0					
ANR	791439	Callee	r_sandbox_enable		791148	0					
ANR	791440	Identifier	r_sandbox_enable		791148	0					
ANR	791441	ArgumentList	0		791148	1					
ANR	791442	Argument	0		791148	0					
ANR	791443	PrimaryExpression	0		791148	0					
ANR	791444	CompoundStatement		62:28:1388:1388	791148	1					
ANR	791445	ExpressionStatement	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"	1796:3:47120:47174	791148	0	True				
ANR	791446	CallExpression	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"		791148	0					
ANR	791447	Callee	eprintf		791148	0					
ANR	791448	Identifier	eprintf		791148	0					
ANR	791449	ArgumentList	"""This command is disabled in sandbox mode\\n"""		791148	1					
ANR	791450	Argument	"""This command is disabled in sandbox mode\\n"""		791148	0					
ANR	791451	PrimaryExpression	"""This command is disabled in sandbox mode\\n"""		791148	0					
ANR	791452	ReturnStatement	return 0 ;	1797:3:47179:47187	791148	1	True				
ANR	791453	PrimaryExpression	0		791148	0					
ANR	791454	IdentifierDeclStatement	"RCoreTask * task = r_core_task_new ( core , true , input + 1 , NULL , core ) ;"	1799:2:47195:47264	791148	1	True				
ANR	791455	IdentifierDecl	"* task = r_core_task_new ( core , true , input + 1 , NULL , core )"		791148	0					
ANR	791456	IdentifierDeclType	RCoreTask *		791148	0					
ANR	791457	Identifier	task		791148	1					
ANR	791458	AssignmentExpression	"* task = r_core_task_new ( core , true , input + 1 , NULL , core )"		791148	2		=			
ANR	791459	Identifier	task		791148	0					
ANR	791460	CallExpression	"r_core_task_new ( core , true , input + 1 , NULL , core )"		791148	1					
ANR	791461	Callee	r_core_task_new		791148	0					
ANR	791462	Identifier	r_core_task_new		791148	0					
ANR	791463	ArgumentList	core		791148	1					
ANR	791464	Argument	core		791148	0					
ANR	791465	Identifier	core		791148	0					
ANR	791466	Argument	true		791148	1					
ANR	791467	Identifier	true		791148	0					
ANR	791468	Argument	input + 1		791148	2					
ANR	791469	AdditiveExpression	input + 1		791148	0		+			
ANR	791470	Identifier	input		791148	0					
ANR	791471	PrimaryExpression	1		791148	1					
ANR	791472	Argument	NULL		791148	3					
ANR	791473	Identifier	NULL		791148	0					
ANR	791474	Argument	core		791148	4					
ANR	791475	Identifier	core		791148	0					
ANR	791476	IfStatement	if ( ! task )		791148	2					
ANR	791477	Condition	! task	1800:6:47272:47276	791148	0	True				
ANR	791478	UnaryOperationExpression	! task		791148	0					
ANR	791479	UnaryOperator	!		791148	0					
ANR	791480	Identifier	task		791148	1					
ANR	791481	CompoundStatement		67:13:1552:1552	791148	1					
ANR	791482	BreakStatement	break ;	1801:3:47284:47289	791148	0	True				
ANR	791483	ExpressionStatement	task -> transient = input [ 0 ] == 't'	1803:2:47297:47330	791148	3	True				
ANR	791484	AssignmentExpression	task -> transient = input [ 0 ] == 't'		791148	0		=			
ANR	791485	PtrMemberAccess	task -> transient		791148	0					
ANR	791486	Identifier	task		791148	0					
ANR	791487	Identifier	transient		791148	1					
ANR	791488	EqualityExpression	input [ 0 ] == 't'		791148	1		==			
ANR	791489	ArrayIndexing	input [ 0 ]		791148	0					
ANR	791490	Identifier	input		791148	0					
ANR	791491	PrimaryExpression	0		791148	1					
ANR	791492	PrimaryExpression	't'		791148	1					
ANR	791493	ExpressionStatement	"r_core_task_enqueue ( core , task )"	1804:2:47334:47366	791148	4	True				
ANR	791494	CallExpression	"r_core_task_enqueue ( core , task )"		791148	0					
ANR	791495	Callee	r_core_task_enqueue		791148	0					
ANR	791496	Identifier	r_core_task_enqueue		791148	0					
ANR	791497	ArgumentList	core		791148	1					
ANR	791498	Argument	core		791148	0					
ANR	791499	Identifier	core		791148	0					
ANR	791500	Argument	task		791148	1					
ANR	791501	Identifier	task		791148	0					
ANR	791502	BreakStatement	break ;	1805:2:47370:47375	791148	5	True				
ANR	791503	ReturnStatement	return 0 ;	1808:1:47384:47392	791148	2	True				
ANR	791504	PrimaryExpression	0		791148	0					
ANR	791505	ReturnType	static int		791148	1					
ANR	791506	Identifier	cmd_tasks		791148	2					
ANR	791507	ParameterList	"void * data , const char * input"		791148	3					
ANR	791508	Parameter	void * data	1734:21:45695:45704	791148	0	True				
ANR	791509	ParameterType	void *		791148	0					
ANR	791510	Identifier	data		791148	1					
ANR	791511	Parameter	const char * input	1734:33:45707:45723	791148	1	True				
ANR	791512	ParameterType	const char *		791148	0					
ANR	791513	Identifier	input		791148	1					
ANR	791514	CFGEntryNode	ENTRY		791148		True				
ANR	791515	CFGExitNode	EXIT		791148		True				
ANR	791516	Symbol	NULL		791148						
ANR	791517	Symbol	data		791148						
ANR	791518	Symbol	r_core_task_get_incref		791148						
ANR	791519	Symbol	r_sandbox_enable		791148						
ANR	791520	Symbol	r_core_task_new		791148						
ANR	791521	Symbol	* input		791148						
ANR	791522	Symbol	* core		791148						
ANR	791523	Symbol	tid		791148						
ANR	791524	Symbol	r_num_math		791148						
ANR	791525	Symbol	input		791148						
ANR	791526	Symbol	core		791148						
ANR	791527	Symbol	task		791148						
ANR	791528	Symbol	task -> res		791148						
ANR	791529	Symbol	true		791148						
ANR	791530	Symbol	task -> transient		791148						
ANR	791531	Symbol	core -> num		791148						
ANR	791532	Symbol	core -> current_task		791148						
ANR	791533	Symbol	* task		791148						
ANR	791534	Function	cmd_pointer	1811:0:47397:47983							
ANR	791535	FunctionDef	"cmd_pointer (void * data , const char * input)"		791534	0					
ANR	791536	CompoundStatement		1811:54:47451:47983	791534	0					
ANR	791537	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1812:1:47454:47481	791534	0	True				
ANR	791538	IdentifierDecl	* core = ( RCore * ) data		791534	0					
ANR	791539	IdentifierDeclType	RCore *		791534	0					
ANR	791540	Identifier	core		791534	1					
ANR	791541	AssignmentExpression	* core = ( RCore * ) data		791534	2		=			
ANR	791542	Identifier	core		791534	0					
ANR	791543	CastExpression	( RCore * ) data		791534	1					
ANR	791544	CastTarget	RCore *		791534	0					
ANR	791545	Identifier	data		791534	1					
ANR	791546	IdentifierDeclStatement	int ret = true ;	1813:1:47484:47498	791534	1	True				
ANR	791547	IdentifierDecl	ret = true		791534	0					
ANR	791548	IdentifierDeclType	int		791534	0					
ANR	791549	Identifier	ret		791534	1					
ANR	791550	AssignmentExpression	ret = true		791534	2		=			
ANR	791551	Identifier	true		791534	0					
ANR	791552	Identifier	true		791534	1					
ANR	791553	IdentifierDeclStatement	"char * str , * eq ;"	1814:1:47501:47515	791534	2	True				
ANR	791554	IdentifierDecl	* str		791534	0					
ANR	791555	IdentifierDeclType	char *		791534	0					
ANR	791556	Identifier	str		791534	1					
ANR	791557	IdentifierDecl	* eq		791534	1					
ANR	791558	IdentifierDeclType	char *		791534	0					
ANR	791559	Identifier	eq		791534	1					
ANR	791560	ExpressionStatement	input = r_str_trim_ro ( input )	1815:1:47518:47547	791534	3	True				
ANR	791561	AssignmentExpression	input = r_str_trim_ro ( input )		791534	0		=			
ANR	791562	Identifier	input		791534	0					
ANR	791563	CallExpression	r_str_trim_ro ( input )		791534	1					
ANR	791564	Callee	r_str_trim_ro		791534	0					
ANR	791565	Identifier	r_str_trim_ro		791534	0					
ANR	791566	ArgumentList	input		791534	1					
ANR	791567	Argument	input		791534	0					
ANR	791568	Identifier	input		791534	0					
ANR	791569	WhileStatement	while ( * input == ' ' )		791534	4					
ANR	791570	Condition	* input == ' '	1816:8:47557:47569	791534	0	True				
ANR	791571	EqualityExpression	* input == ' '		791534	0		==			
ANR	791572	UnaryOperationExpression	* input		791534	0					
ANR	791573	UnaryOperator	*		791534	0					
ANR	791574	Identifier	input		791534	1					
ANR	791575	PrimaryExpression	' '		791534	1					
ANR	791576	CompoundStatement		6:23:120:120	791534	1					
ANR	791577	ExpressionStatement	input ++	1817:2:47576:47583	791534	0	True				
ANR	791578	PostIncDecOperationExpression	input ++		791534	0					
ANR	791579	Identifier	input		791534	0					
ANR	791580	IncDec	++		791534	1					
ANR	791581	IfStatement	if ( ! * input || * input == '?' )		791534	5					
ANR	791582	Condition	! * input || * input == '?'	1819:5:47593:47616	791534	0	True				
ANR	791583	OrExpression	! * input || * input == '?'		791534	0		||			
ANR	791584	UnaryOperationExpression	! * input		791534	0					
ANR	791585	UnaryOperator	!		791534	0					
ANR	791586	UnaryOperationExpression	* input		791534	1					
ANR	791587	UnaryOperator	*		791534	0					
ANR	791588	Identifier	input		791534	1					
ANR	791589	EqualityExpression	* input == '?'		791534	1		==			
ANR	791590	UnaryOperationExpression	* input		791534	0					
ANR	791591	UnaryOperator	*		791534	0					
ANR	791592	Identifier	input		791534	1					
ANR	791593	PrimaryExpression	'?'		791534	1					
ANR	791594	CompoundStatement		9:31:167:167	791534	1					
ANR	791595	ExpressionStatement	"r_core_cmd_help ( core , help_msg_star )"	1820:2:47623:47660	791534	0	True				
ANR	791596	CallExpression	"r_core_cmd_help ( core , help_msg_star )"		791534	0					
ANR	791597	Callee	r_core_cmd_help		791534	0					
ANR	791598	Identifier	r_core_cmd_help		791534	0					
ANR	791599	ArgumentList	core		791534	1					
ANR	791600	Argument	core		791534	0					
ANR	791601	Identifier	core		791534	0					
ANR	791602	Argument	help_msg_star		791534	1					
ANR	791603	Identifier	help_msg_star		791534	0					
ANR	791604	ReturnStatement	return ret ;	1821:2:47664:47674	791534	1	True				
ANR	791605	Identifier	ret		791534	0					
ANR	791606	ExpressionStatement	str = strdup ( input )	1823:1:47680:47700	791534	6	True				
ANR	791607	AssignmentExpression	str = strdup ( input )		791534	0		=			
ANR	791608	Identifier	str		791534	0					
ANR	791609	CallExpression	strdup ( input )		791534	1					
ANR	791610	Callee	strdup		791534	0					
ANR	791611	Identifier	strdup		791534	0					
ANR	791612	ArgumentList	input		791534	1					
ANR	791613	Argument	input		791534	0					
ANR	791614	Identifier	input		791534	0					
ANR	791615	ExpressionStatement	"eq = strchr ( str , '=' )"	1824:1:47703:47725	791534	7	True				
ANR	791616	AssignmentExpression	"eq = strchr ( str , '=' )"		791534	0		=			
ANR	791617	Identifier	eq		791534	0					
ANR	791618	CallExpression	"strchr ( str , '=' )"		791534	1					
ANR	791619	Callee	strchr		791534	0					
ANR	791620	Identifier	strchr		791534	0					
ANR	791621	ArgumentList	str		791534	1					
ANR	791622	Argument	str		791534	0					
ANR	791623	Identifier	str		791534	0					
ANR	791624	Argument	'='		791534	1					
ANR	791625	PrimaryExpression	'='		791534	0					
ANR	791626	IfStatement	if ( eq )		791534	8					
ANR	791627	Condition	eq	1825:5:47732:47733	791534	0	True				
ANR	791628	Identifier	eq		791534	0					
ANR	791629	CompoundStatement		15:9:284:284	791534	1					
ANR	791630	ExpressionStatement	* eq ++ = 0	1826:2:47740:47749	791534	0	True				
ANR	791631	AssignmentExpression	* eq ++ = 0		791534	0		=			
ANR	791632	UnaryOperationExpression	* eq ++		791534	0					
ANR	791633	UnaryOperator	*		791534	0					
ANR	791634	PostIncDecOperationExpression	eq ++		791534	1					
ANR	791635	Identifier	eq		791534	0					
ANR	791636	IncDec	++		791534	1					
ANR	791637	PrimaryExpression	0		791534	1					
ANR	791638	IfStatement	"if ( ! strncmp ( eq , ""0x"" , 2 ) )"		791534	1					
ANR	791639	Condition	"! strncmp ( eq , ""0x"" , 2 )"	1827:6:47757:47778	791534	0	True				
ANR	791640	UnaryOperationExpression	"! strncmp ( eq , ""0x"" , 2 )"		791534	0					
ANR	791641	UnaryOperator	!		791534	0					
ANR	791642	CallExpression	"strncmp ( eq , ""0x"" , 2 )"		791534	1					
ANR	791643	Callee	strncmp		791534	0					
ANR	791644	Identifier	strncmp		791534	0					
ANR	791645	ArgumentList	eq		791534	1					
ANR	791646	Argument	eq		791534	0					
ANR	791647	Identifier	eq		791534	0					
ANR	791648	Argument	"""0x"""		791534	1					
ANR	791649	PrimaryExpression	"""0x"""		791534	0					
ANR	791650	Argument	2		791534	2					
ANR	791651	PrimaryExpression	2		791534	0					
ANR	791652	CompoundStatement		17:30:329:329	791534	1					
ANR	791653	ExpressionStatement	"ret = r_core_cmdf ( core , ""wv %s@%s"" , eq , str )"	1828:3:47786:47831	791534	0	True				
ANR	791654	AssignmentExpression	"ret = r_core_cmdf ( core , ""wv %s@%s"" , eq , str )"		791534	0		=			
ANR	791655	Identifier	ret		791534	0					
ANR	791656	CallExpression	"r_core_cmdf ( core , ""wv %s@%s"" , eq , str )"		791534	1					
ANR	791657	Callee	r_core_cmdf		791534	0					
ANR	791658	Identifier	r_core_cmdf		791534	0					
ANR	791659	ArgumentList	core		791534	1					
ANR	791660	Argument	core		791534	0					
ANR	791661	Identifier	core		791534	0					
ANR	791662	Argument	"""wv %s@%s"""		791534	1					
ANR	791663	PrimaryExpression	"""wv %s@%s"""		791534	0					
ANR	791664	Argument	eq		791534	2					
ANR	791665	Identifier	eq		791534	0					
ANR	791666	Argument	str		791534	3					
ANR	791667	Identifier	str		791534	0					
ANR	791668	ElseStatement	else		791534	0					
ANR	791669	CompoundStatement		19:9:390:390	791534	0					
ANR	791670	ExpressionStatement	"ret = r_core_cmdf ( core , ""wx %s@%s"" , eq , str )"	1830:3:47847:47892	791534	0	True				
ANR	791671	AssignmentExpression	"ret = r_core_cmdf ( core , ""wx %s@%s"" , eq , str )"		791534	0		=			
ANR	791672	Identifier	ret		791534	0					
ANR	791673	CallExpression	"r_core_cmdf ( core , ""wx %s@%s"" , eq , str )"		791534	1					
ANR	791674	Callee	r_core_cmdf		791534	0					
ANR	791675	Identifier	r_core_cmdf		791534	0					
ANR	791676	ArgumentList	core		791534	1					
ANR	791677	Argument	core		791534	0					
ANR	791678	Identifier	core		791534	0					
ANR	791679	Argument	"""wx %s@%s"""		791534	1					
ANR	791680	PrimaryExpression	"""wx %s@%s"""		791534	0					
ANR	791681	Argument	eq		791534	2					
ANR	791682	Identifier	eq		791534	0					
ANR	791683	Argument	str		791534	3					
ANR	791684	Identifier	str		791534	0					
ANR	791685	ElseStatement	else		791534	0					
ANR	791686	CompoundStatement		22:8:454:454	791534	0					
ANR	791687	ExpressionStatement	"ret = r_core_cmdf ( core , ""?v [%s]"" , input )"	1833:2:47910:47952	791534	0	True				
ANR	791688	AssignmentExpression	"ret = r_core_cmdf ( core , ""?v [%s]"" , input )"		791534	0		=			
ANR	791689	Identifier	ret		791534	0					
ANR	791690	CallExpression	"r_core_cmdf ( core , ""?v [%s]"" , input )"		791534	1					
ANR	791691	Callee	r_core_cmdf		791534	0					
ANR	791692	Identifier	r_core_cmdf		791534	0					
ANR	791693	ArgumentList	core		791534	1					
ANR	791694	Argument	core		791534	0					
ANR	791695	Identifier	core		791534	0					
ANR	791696	Argument	"""?v [%s]"""		791534	1					
ANR	791697	PrimaryExpression	"""?v [%s]"""		791534	0					
ANR	791698	Argument	input		791534	2					
ANR	791699	Identifier	input		791534	0					
ANR	791700	ExpressionStatement	free ( str )	1835:1:47958:47968	791534	9	True				
ANR	791701	CallExpression	free ( str )		791534	0					
ANR	791702	Callee	free		791534	0					
ANR	791703	Identifier	free		791534	0					
ANR	791704	ArgumentList	str		791534	1					
ANR	791705	Argument	str		791534	0					
ANR	791706	Identifier	str		791534	0					
ANR	791707	ReturnStatement	return ret ;	1836:1:47971:47981	791534	10	True				
ANR	791708	Identifier	ret		791534	0					
ANR	791709	ReturnType	static int		791534	1					
ANR	791710	Identifier	cmd_pointer		791534	2					
ANR	791711	ParameterList	"void * data , const char * input"		791534	3					
ANR	791712	Parameter	void * data	1811:23:47420:47429	791534	0	True				
ANR	791713	ParameterType	void *		791534	0					
ANR	791714	Identifier	data		791534	1					
ANR	791715	Parameter	const char * input	1811:35:47432:47448	791534	1	True				
ANR	791716	ParameterType	const char *		791534	0					
ANR	791717	Identifier	input		791534	1					
ANR	791718	CFGEntryNode	ENTRY		791534		True				
ANR	791719	CFGExitNode	EXIT		791534		True				
ANR	791720	Symbol	ret		791534						
ANR	791721	Symbol	data		791534						
ANR	791722	Symbol	r_core_cmdf		791534						
ANR	791723	Symbol	* input		791534						
ANR	791724	Symbol	strchr		791534						
ANR	791725	Symbol	eq		791534						
ANR	791726	Symbol	str		791534						
ANR	791727	Symbol	input		791534						
ANR	791728	Symbol	core		791534						
ANR	791729	Symbol	strncmp		791534						
ANR	791730	Symbol	true		791534						
ANR	791731	Symbol	r_str_trim_ro		791534						
ANR	791732	Symbol	strdup		791534						
ANR	791733	Symbol	help_msg_star		791534						
ANR	791734	Symbol	* eq ++		791534						
ANR	791735	Function	cmd_env	1839:0:47986:48221							
ANR	791736	FunctionDef	"cmd_env (void * data , const char * input)"		791735	0					
ANR	791737	CompoundStatement		1839:50:48036:48221	791735	0					
ANR	791738	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1840:1:48039:48065	791735	0	True				
ANR	791739	IdentifierDecl	* core = ( RCore * ) data		791735	0					
ANR	791740	IdentifierDeclType	RCore *		791735	0					
ANR	791741	Identifier	core		791735	1					
ANR	791742	AssignmentExpression	* core = ( RCore * ) data		791735	2		=			
ANR	791743	Identifier	core		791735	0					
ANR	791744	CastExpression	( RCore * ) data		791735	1					
ANR	791745	CastTarget	RCore *		791735	0					
ANR	791746	Identifier	data		791735	1					
ANR	791747	IdentifierDeclStatement	int ret = true ;	1841:1:48068:48082	791735	1	True				
ANR	791748	IdentifierDecl	ret = true		791735	0					
ANR	791749	IdentifierDeclType	int		791735	0					
ANR	791750	Identifier	ret		791735	1					
ANR	791751	AssignmentExpression	ret = true		791735	2		=			
ANR	791752	Identifier	true		791735	0					
ANR	791753	Identifier	true		791735	1					
ANR	791754	SwitchStatement	switch ( * input )		791735	2					
ANR	791755	Condition	* input	1842:9:48093:48098	791735	0	True				
ANR	791756	UnaryOperationExpression	* input		791735	0					
ANR	791757	UnaryOperator	*		791735	0					
ANR	791758	Identifier	input		791735	1					
ANR	791759	CompoundStatement		4:17:64:64	791735	1					
ANR	791760	Label	case '?' :	1843:1:48104:48112	791735	0	True				
ANR	791761	ExpressionStatement	cmd_help_percent ( core )	1844:2:48116:48139	791735	1	True				
ANR	791762	CallExpression	cmd_help_percent ( core )		791735	0					
ANR	791763	Callee	cmd_help_percent		791735	0					
ANR	791764	Identifier	cmd_help_percent		791735	0					
ANR	791765	ArgumentList	core		791735	1					
ANR	791766	Argument	core		791735	0					
ANR	791767	Identifier	core		791735	0					
ANR	791768	BreakStatement	break ;	1845:2:48143:48148	791735	2	True				
ANR	791769	Label	default :	1846:1:48151:48158	791735	3	True				
ANR	791770	Identifier	default		791735	0					
ANR	791771	ExpressionStatement	"ret = r_core_cmdf ( core , ""env %s"" , input )"	1847:2:48162:48203	791735	4	True				
ANR	791772	AssignmentExpression	"ret = r_core_cmdf ( core , ""env %s"" , input )"		791735	0		=			
ANR	791773	Identifier	ret		791735	0					
ANR	791774	CallExpression	"r_core_cmdf ( core , ""env %s"" , input )"		791735	1					
ANR	791775	Callee	r_core_cmdf		791735	0					
ANR	791776	Identifier	r_core_cmdf		791735	0					
ANR	791777	ArgumentList	core		791735	1					
ANR	791778	Argument	core		791735	0					
ANR	791779	Identifier	core		791735	0					
ANR	791780	Argument	"""env %s"""		791735	1					
ANR	791781	PrimaryExpression	"""env %s"""		791735	0					
ANR	791782	Argument	input		791735	2					
ANR	791783	Identifier	input		791735	0					
ANR	791784	ReturnStatement	return ret ;	1849:1:48209:48219	791735	3	True				
ANR	791785	Identifier	ret		791735	0					
ANR	791786	ReturnType	static int		791735	1					
ANR	791787	Identifier	cmd_env		791735	2					
ANR	791788	ParameterList	"void * data , const char * input"		791735	3					
ANR	791789	Parameter	void * data	1839:19:48005:48014	791735	0	True				
ANR	791790	ParameterType	void *		791735	0					
ANR	791791	Identifier	data		791735	1					
ANR	791792	Parameter	const char * input	1839:31:48017:48033	791735	1	True				
ANR	791793	ParameterType	const char *		791735	0					
ANR	791794	Identifier	input		791735	1					
ANR	791795	CFGEntryNode	ENTRY		791735		True				
ANR	791796	CFGExitNode	EXIT		791735		True				
ANR	791797	Symbol	ret		791735						
ANR	791798	Symbol	input		791735						
ANR	791799	Symbol	core		791735						
ANR	791800	Symbol	data		791735						
ANR	791801	Symbol	r_core_cmdf		791735						
ANR	791802	Symbol	true		791735						
ANR	791803	Symbol	* input		791735						
ANR	791804	ClassDef	autocomplete_flag_map_t	1852:7:48231:49227							
ANR	791805	DeclStmt									
ANR	791806	Decl							const char	const char *	name
ANR	791807	DeclStmt									
ANR	791808	Decl							const char	const char *	desc
ANR	791809	DeclStmt									
ANR	791810	Decl							int	int	type
ANR	791811	DeclStmt									
ANR	791812	Decl							autocomplete_flag_map_t	autocomplete_flag_map_t [ ]	autocomplete_flags
ANR	791813	Function	print_dict	1874:0:49230:49720							
ANR	791814	FunctionDef	"print_dict (RCoreAutocomplete * a , int sub)"		791813	0					
ANR	791815	CompoundStatement		1874:61:49291:49720	791813	0					
ANR	791816	IfStatement	if ( ! a )		791813	0					
ANR	791817	Condition	! a	1875:5:49298:49299	791813	0	True				
ANR	791818	UnaryOperationExpression	! a		791813	0					
ANR	791819	UnaryOperator	!		791813	0					
ANR	791820	Identifier	a		791813	1					
ANR	791821	CompoundStatement		2:9:10:10	791813	1					
ANR	791822	ReturnStatement	return ;	1876:2:49306:49312	791813	0	True				
ANR	791823	IdentifierDeclStatement	"int i , j ;"	1878:1:49318:49326	791813	1	True				
ANR	791824	IdentifierDecl	i		791813	0					
ANR	791825	IdentifierDeclType	int		791813	0					
ANR	791826	Identifier	i		791813	1					
ANR	791827	IdentifierDecl	j		791813	1					
ANR	791828	IdentifierDeclType	int		791813	0					
ANR	791829	Identifier	j		791813	1					
ANR	791830	IdentifierDeclStatement	"const char * name = ""unknown"" ;"	1879:1:49329:49357	791813	2	True				
ANR	791831	IdentifierDecl	"* name = ""unknown"""		791813	0					
ANR	791832	IdentifierDeclType	const char *		791813	0					
ANR	791833	Identifier	name		791813	1					
ANR	791834	AssignmentExpression	"* name = ""unknown"""		791813	2		=			
ANR	791835	Identifier	name		791813	0					
ANR	791836	PrimaryExpression	"""unknown"""		791813	1					
ANR	791837	ForStatement	for ( i = 0 ; i < a -> n_subcmds ; ++ i )		791813	3					
ANR	791838	ForInit	i = 0 ;	1880:6:49365:49370	791813	0	True				
ANR	791839	AssignmentExpression	i = 0		791813	0		=			
ANR	791840	Identifier	i		791813	0					
ANR	791841	PrimaryExpression	0		791813	1					
ANR	791842	Condition	i < a -> n_subcmds	1880:13:49372:49387	791813	1	True				
ANR	791843	RelationalExpression	i < a -> n_subcmds		791813	0		<			
ANR	791844	Identifier	i		791813	0					
ANR	791845	PtrMemberAccess	a -> n_subcmds		791813	1					
ANR	791846	Identifier	a		791813	0					
ANR	791847	Identifier	n_subcmds		791813	1					
ANR	791848	UnaryExpression	++ i	1880:31:49390:49392	791813	2	True				
ANR	791849	IncDec	++		791813	0					
ANR	791850	Identifier	i		791813	1					
ANR	791851	CompoundStatement		8:2:107:143	791813	3					
ANR	791852	IdentifierDeclStatement	RCoreAutocomplete * b = a -> subcmds [ i ] ;	1881:2:49399:49435	791813	0	True				
ANR	791853	IdentifierDecl	* b = a -> subcmds [ i ]		791813	0					
ANR	791854	IdentifierDeclType	RCoreAutocomplete *		791813	0					
ANR	791855	Identifier	b		791813	1					
ANR	791856	AssignmentExpression	* b = a -> subcmds [ i ]		791813	2		=			
ANR	791857	Identifier	b		791813	0					
ANR	791858	ArrayIndexing	a -> subcmds [ i ]		791813	1					
ANR	791859	PtrMemberAccess	a -> subcmds		791813	0					
ANR	791860	Identifier	a		791813	0					
ANR	791861	Identifier	subcmds		791813	1					
ANR	791862	Identifier	i		791813	1					
ANR	791863	IfStatement	if ( b -> locked )		791813	1					
ANR	791864	Condition	b -> locked	1882:6:49443:49451	791813	0	True				
ANR	791865	PtrMemberAccess	b -> locked		791813	0					
ANR	791866	Identifier	b		791813	0					
ANR	791867	Identifier	locked		791813	1					
ANR	791868	CompoundStatement		9:17:162:162	791813	1					
ANR	791869	ContinueStatement	continue ;	1883:3:49459:49467	791813	0	True				
ANR	791870	ForStatement	for ( j = 0 ; j < R_CORE_AUTOCMPLT_END ; ++ j )		791813	2					
ANR	791871	ForInit	j = 0 ;	1885:7:49480:49485	791813	0	True				
ANR	791872	AssignmentExpression	j = 0		791813	0		=			
ANR	791873	Identifier	j		791813	0					
ANR	791874	PrimaryExpression	0		791813	1					
ANR	791875	Condition	j < R_CORE_AUTOCMPLT_END	1885:14:49487:49510	791813	1	True				
ANR	791876	RelationalExpression	j < R_CORE_AUTOCMPLT_END		791813	0		<			
ANR	791877	Identifier	j		791813	0					
ANR	791878	Identifier	R_CORE_AUTOCMPLT_END		791813	1					
ANR	791879	UnaryExpression	++ j	1885:40:49513:49515	791813	2	True				
ANR	791880	IncDec	++		791813	0					
ANR	791881	Identifier	j		791813	1					
ANR	791882	CompoundStatement		12:45:226:226	791813	3					
ANR	791883	IfStatement	if ( b -> type == autocomplete_flags [ j ] . type )		791813	0					
ANR	791884	Condition	b -> type == autocomplete_flags [ j ] . type	1886:7:49527:49563	791813	0	True				
ANR	791885	EqualityExpression	b -> type == autocomplete_flags [ j ] . type		791813	0		==			
ANR	791886	PtrMemberAccess	b -> type		791813	0					
ANR	791887	Identifier	b		791813	0					
ANR	791888	Identifier	type		791813	1					
ANR	791889	MemberAccess	autocomplete_flags [ j ] . type		791813	1					
ANR	791890	ArrayIndexing	autocomplete_flags [ j ]		791813	0					
ANR	791891	Identifier	autocomplete_flags		791813	0					
ANR	791892	Identifier	j		791813	1					
ANR	791893	Identifier	type		791813	1					
ANR	791894	CompoundStatement		13:46:274:274	791813	1					
ANR	791895	ExpressionStatement	name = autocomplete_flags [ j ] . name	1887:4:49572:49605	791813	0	True				
ANR	791896	AssignmentExpression	name = autocomplete_flags [ j ] . name		791813	0		=			
ANR	791897	Identifier	name		791813	0					
ANR	791898	MemberAccess	autocomplete_flags [ j ] . name		791813	1					
ANR	791899	ArrayIndexing	autocomplete_flags [ j ]		791813	0					
ANR	791900	Identifier	autocomplete_flags		791813	0					
ANR	791901	Identifier	j		791813	1					
ANR	791902	Identifier	name		791813	1					
ANR	791903	BreakStatement	break ;	1888:4:49611:49616	791813	1	True				
ANR	791904	ExpressionStatement	"eprintf ( ""[%3d] %s: '%s'\\n"" , sub , name , b -> cmd )"	1891:2:49629:49676	791813	3	True				
ANR	791905	CallExpression	"eprintf ( ""[%3d] %s: '%s'\\n"" , sub , name , b -> cmd )"		791813	0					
ANR	791906	Callee	eprintf		791813	0					
ANR	791907	Identifier	eprintf		791813	0					
ANR	791908	ArgumentList	"""[%3d] %s: '%s'\\n"""		791813	1					
ANR	791909	Argument	"""[%3d] %s: '%s'\\n"""		791813	0					
ANR	791910	PrimaryExpression	"""[%3d] %s: '%s'\\n"""		791813	0					
ANR	791911	Argument	sub		791813	1					
ANR	791912	Identifier	sub		791813	0					
ANR	791913	Argument	name		791813	2					
ANR	791914	Identifier	name		791813	0					
ANR	791915	Argument	b -> cmd		791813	3					
ANR	791916	PtrMemberAccess	b -> cmd		791813	0					
ANR	791917	Identifier	b		791813	0					
ANR	791918	Identifier	cmd		791813	1					
ANR	791919	ExpressionStatement	"print_dict ( a -> subcmds [ i ] , sub + 1 )"	1892:2:49680:49715	791813	4	True				
ANR	791920	CallExpression	"print_dict ( a -> subcmds [ i ] , sub + 1 )"		791813	0					
ANR	791921	Callee	print_dict		791813	0					
ANR	791922	Identifier	print_dict		791813	0					
ANR	791923	ArgumentList	a -> subcmds [ i ]		791813	1					
ANR	791924	Argument	a -> subcmds [ i ]		791813	0					
ANR	791925	ArrayIndexing	a -> subcmds [ i ]		791813	0					
ANR	791926	PtrMemberAccess	a -> subcmds		791813	0					
ANR	791927	Identifier	a		791813	0					
ANR	791928	Identifier	subcmds		791813	1					
ANR	791929	Identifier	i		791813	1					
ANR	791930	Argument	sub + 1		791813	1					
ANR	791931	AdditiveExpression	sub + 1		791813	0		+			
ANR	791932	Identifier	sub		791813	0					
ANR	791933	PrimaryExpression	1		791813	1					
ANR	791934	ReturnType	static inline void		791813	1					
ANR	791935	Identifier	print_dict		791813	2					
ANR	791936	ParameterList	"RCoreAutocomplete * a , int sub"		791813	3					
ANR	791937	Parameter	RCoreAutocomplete * a	1874:30:49260:49279	791813	0	True				
ANR	791938	ParameterType	RCoreAutocomplete *		791813	0					
ANR	791939	Identifier	a		791813	1					
ANR	791940	Parameter	int sub	1874:52:49282:49288	791813	1	True				
ANR	791941	ParameterType	int		791813	0					
ANR	791942	Identifier	sub		791813	1					
ANR	791943	CFGEntryNode	ENTRY		791813		True				
ANR	791944	CFGExitNode	EXIT		791813		True				
ANR	791945	Symbol	autocomplete_flags		791813						
ANR	791946	Symbol	a		791813						
ANR	791947	Symbol	sub		791813						
ANR	791948	Symbol	b		791813						
ANR	791949	Symbol	a -> subcmds		791813						
ANR	791950	Symbol	i		791813						
ANR	791951	Symbol	autocomplete_flags [ j ] . type		791813						
ANR	791952	Symbol	j		791813						
ANR	791953	Symbol	* * a		791813						
ANR	791954	Symbol	* a		791813						
ANR	791955	Symbol	a -> n_subcmds		791813						
ANR	791956	Symbol	* b		791813						
ANR	791957	Symbol	* autocomplete_flags		791813						
ANR	791958	Symbol	* a -> subcmds		791813						
ANR	791959	Symbol	* i		791813						
ANR	791960	Symbol	b -> locked		791813						
ANR	791961	Symbol	R_CORE_AUTOCMPLT_END		791813						
ANR	791962	Symbol	* j		791813						
ANR	791963	Symbol	b -> cmd		791813						
ANR	791964	Symbol	name		791813						
ANR	791965	Symbol	autocomplete_flags [ j ] . name		791813						
ANR	791966	Symbol	b -> type		791813						
ANR	791967	Function	autocomplete_type	1896:0:49723:50036							
ANR	791968	FunctionDef	autocomplete_type (const char * strflag)		791967	0					
ANR	791969	CompoundStatement		1896:50:49773:50036	791967	0					
ANR	791970	IdentifierDeclStatement	int i ;	1897:1:49776:49781	791967	0	True				
ANR	791971	IdentifierDecl	i		791967	0					
ANR	791972	IdentifierDeclType	int		791967	0					
ANR	791973	Identifier	i		791967	1					
ANR	791974	ForStatement	for ( i = 0 ; i < R_CORE_AUTOCMPLT_END ; ++ i )		791967	1					
ANR	791975	ForInit	i = 0 ;	1898:6:49789:49794	791967	0	True				
ANR	791976	AssignmentExpression	i = 0		791967	0		=			
ANR	791977	Identifier	i		791967	0					
ANR	791978	PrimaryExpression	0		791967	1					
ANR	791979	Condition	i < R_CORE_AUTOCMPLT_END	1898:13:49796:49819	791967	1	True				
ANR	791980	RelationalExpression	i < R_CORE_AUTOCMPLT_END		791967	0		<			
ANR	791981	Identifier	i		791967	0					
ANR	791982	Identifier	R_CORE_AUTOCMPLT_END		791967	1					
ANR	791983	UnaryExpression	++ i	1898:39:49822:49824	791967	2	True				
ANR	791984	IncDec	++		791967	0					
ANR	791985	Identifier	i		791967	1					
ANR	791986	CompoundStatement		3:44:53:53	791967	3					
ANR	791987	IfStatement	"if ( autocomplete_flags [ i ] . desc && ! strncmp ( strflag , autocomplete_flags [ i ] . name , 5 ) )"		791967	0					
ANR	791988	Condition	"autocomplete_flags [ i ] . desc && ! strncmp ( strflag , autocomplete_flags [ i ] . name , 5 )"	1899:6:49835:49913	791967	0	True				
ANR	791989	AndExpression	"autocomplete_flags [ i ] . desc && ! strncmp ( strflag , autocomplete_flags [ i ] . name , 5 )"		791967	0		&&			
ANR	791990	MemberAccess	autocomplete_flags [ i ] . desc		791967	0					
ANR	791991	ArrayIndexing	autocomplete_flags [ i ]		791967	0					
ANR	791992	Identifier	autocomplete_flags		791967	0					
ANR	791993	Identifier	i		791967	1					
ANR	791994	Identifier	desc		791967	1					
ANR	791995	UnaryOperationExpression	"! strncmp ( strflag , autocomplete_flags [ i ] . name , 5 )"		791967	1					
ANR	791996	UnaryOperator	!		791967	0					
ANR	791997	CallExpression	"strncmp ( strflag , autocomplete_flags [ i ] . name , 5 )"		791967	1					
ANR	791998	Callee	strncmp		791967	0					
ANR	791999	Identifier	strncmp		791967	0					
ANR	792000	ArgumentList	strflag		791967	1					
ANR	792001	Argument	strflag		791967	0					
ANR	792002	Identifier	strflag		791967	0					
ANR	792003	Argument	autocomplete_flags [ i ] . name		791967	1					
ANR	792004	MemberAccess	autocomplete_flags [ i ] . name		791967	0					
ANR	792005	ArrayIndexing	autocomplete_flags [ i ]		791967	0					
ANR	792006	Identifier	autocomplete_flags		791967	0					
ANR	792007	Identifier	i		791967	1					
ANR	792008	Identifier	name		791967	1					
ANR	792009	Argument	5		791967	2					
ANR	792010	PrimaryExpression	5		791967	0					
ANR	792011	CompoundStatement		4:87:142:142	791967	1					
ANR	792012	ReturnStatement	return autocomplete_flags [ i ] . type ;	1900:3:49921:49954	791967	0	True				
ANR	792013	MemberAccess	autocomplete_flags [ i ] . type		791967	0					
ANR	792014	ArrayIndexing	autocomplete_flags [ i ]		791967	0					
ANR	792015	Identifier	autocomplete_flags		791967	0					
ANR	792016	Identifier	i		791967	1					
ANR	792017	Identifier	type		791967	1					
ANR	792018	ExpressionStatement	"eprintf ( ""Invalid flag '%s'\\n"" , strflag )"	1903:1:49964:50004	791967	2	True				
ANR	792019	CallExpression	"eprintf ( ""Invalid flag '%s'\\n"" , strflag )"		791967	0					
ANR	792020	Callee	eprintf		791967	0					
ANR	792021	Identifier	eprintf		791967	0					
ANR	792022	ArgumentList	"""Invalid flag '%s'\\n"""		791967	1					
ANR	792023	Argument	"""Invalid flag '%s'\\n"""		791967	0					
ANR	792024	PrimaryExpression	"""Invalid flag '%s'\\n"""		791967	0					
ANR	792025	Argument	strflag		791967	1					
ANR	792026	Identifier	strflag		791967	0					
ANR	792027	ReturnStatement	return R_CORE_AUTOCMPLT_END ;	1904:1:50007:50034	791967	3	True				
ANR	792028	Identifier	R_CORE_AUTOCMPLT_END		791967	0					
ANR	792029	ReturnType	static int		791967	1					
ANR	792030	Identifier	autocomplete_type		791967	2					
ANR	792031	ParameterList	const char * strflag		791967	3					
ANR	792032	Parameter	const char * strflag	1896:29:49752:49770	791967	0	True				
ANR	792033	ParameterType	const char *		791967	0					
ANR	792034	Identifier	strflag		791967	1					
ANR	792035	CFGEntryNode	ENTRY		791967		True				
ANR	792036	CFGExitNode	EXIT		791967		True				
ANR	792037	Symbol	autocomplete_flags		791967						
ANR	792038	Symbol	autocomplete_flags [ i ] . desc		791967						
ANR	792039	Symbol	strncmp		791967						
ANR	792040	Symbol	autocomplete_flags [ i ] . type		791967						
ANR	792041	Symbol	* i		791967						
ANR	792042	Symbol	R_CORE_AUTOCMPLT_END		791967						
ANR	792043	Symbol	strflag		791967						
ANR	792044	Symbol	i		791967						
ANR	792045	Symbol	autocomplete_flags [ i ] . name		791967						
ANR	792046	Symbol	* autocomplete_flags		791967						
ANR	792047	Function	cmd_autocomplete	1907:0:50039:52165							
ANR	792048	FunctionDef	"cmd_autocomplete (RCore * core , const char * input)"		792047	0					
ANR	792049	CompoundStatement		1907:61:50100:52165	792047	0					
ANR	792050	IdentifierDeclStatement	RCoreAutocomplete * b = core -> autocomplete ;	1908:1:50103:50144	792047	0	True				
ANR	792051	IdentifierDecl	* b = core -> autocomplete		792047	0					
ANR	792052	IdentifierDeclType	RCoreAutocomplete *		792047	0					
ANR	792053	Identifier	b		792047	1					
ANR	792054	AssignmentExpression	* b = core -> autocomplete		792047	2		=			
ANR	792055	Identifier	b		792047	0					
ANR	792056	PtrMemberAccess	core -> autocomplete		792047	1					
ANR	792057	Identifier	core		792047	0					
ANR	792058	Identifier	autocomplete		792047	1					
ANR	792059	ExpressionStatement	input = r_str_trim_ro ( input )	1909:1:50147:50176	792047	1	True				
ANR	792060	AssignmentExpression	input = r_str_trim_ro ( input )		792047	0		=			
ANR	792061	Identifier	input		792047	0					
ANR	792062	CallExpression	r_str_trim_ro ( input )		792047	1					
ANR	792063	Callee	r_str_trim_ro		792047	0					
ANR	792064	Identifier	r_str_trim_ro		792047	0					
ANR	792065	ArgumentList	input		792047	1					
ANR	792066	Argument	input		792047	0					
ANR	792067	Identifier	input		792047	0					
ANR	792068	IdentifierDeclStatement	char arg [ 256 ] ;	1910:1:50179:50192	792047	2	True				
ANR	792069	IdentifierDecl	arg [ 256 ]		792047	0					
ANR	792070	IdentifierDeclType	char [ 256 ]		792047	0					
ANR	792071	Identifier	arg		792047	1					
ANR	792072	PrimaryExpression	256		792047	2					
ANR	792073	IfStatement	if ( ! * input )		792047	3					
ANR	792074	Condition	! * input	1911:5:50199:50205	792047	0	True				
ANR	792075	UnaryOperationExpression	! * input		792047	0					
ANR	792076	UnaryOperator	!		792047	0					
ANR	792077	UnaryOperationExpression	* input		792047	1					
ANR	792078	UnaryOperator	*		792047	0					
ANR	792079	Identifier	input		792047	1					
ANR	792080	CompoundStatement		5:14:107:107	792047	1					
ANR	792081	ExpressionStatement	"print_dict ( core -> autocomplete , 0 )"	1912:2:50212:50246	792047	0	True				
ANR	792082	CallExpression	"print_dict ( core -> autocomplete , 0 )"		792047	0					
ANR	792083	Callee	print_dict		792047	0					
ANR	792084	Identifier	print_dict		792047	0					
ANR	792085	ArgumentList	core -> autocomplete		792047	1					
ANR	792086	Argument	core -> autocomplete		792047	0					
ANR	792087	PtrMemberAccess	core -> autocomplete		792047	0					
ANR	792088	Identifier	core		792047	0					
ANR	792089	Identifier	autocomplete		792047	1					
ANR	792090	Argument	0		792047	1					
ANR	792091	PrimaryExpression	0		792047	0					
ANR	792092	ReturnStatement	return ;	1913:2:50250:50256	792047	1	True				
ANR	792093	IfStatement	if ( * input == '?' )		792047	4					
ANR	792094	Condition	* input == '?'	1915:5:50266:50278	792047	0	True				
ANR	792095	EqualityExpression	* input == '?'		792047	0		==			
ANR	792096	UnaryOperationExpression	* input		792047	0					
ANR	792097	UnaryOperator	*		792047	0					
ANR	792098	Identifier	input		792047	1					
ANR	792099	PrimaryExpression	'?'		792047	1					
ANR	792100	CompoundStatement		11:2:239:244	792047	1					
ANR	792101	ExpressionStatement	"r_core_cmd_help ( core , help_msg_triple_exclamation )"	1916:2:50285:50336	792047	0	True				
ANR	792102	CallExpression	"r_core_cmd_help ( core , help_msg_triple_exclamation )"		792047	0					
ANR	792103	Callee	r_core_cmd_help		792047	0					
ANR	792104	Identifier	r_core_cmd_help		792047	0					
ANR	792105	ArgumentList	core		792047	1					
ANR	792106	Argument	core		792047	0					
ANR	792107	Identifier	core		792047	0					
ANR	792108	Argument	help_msg_triple_exclamation		792047	1					
ANR	792109	Identifier	help_msg_triple_exclamation		792047	0					
ANR	792110	IdentifierDeclStatement	int i ;	1917:2:50340:50345	792047	1	True				
ANR	792111	IdentifierDecl	i		792047	0					
ANR	792112	IdentifierDeclType	int		792047	0					
ANR	792113	Identifier	i		792047	1					
ANR	792114	ExpressionStatement	"r_cons_printf ( ""|Types:\\n"" )"	1918:2:50349:50376	792047	2	True				
ANR	792115	CallExpression	"r_cons_printf ( ""|Types:\\n"" )"		792047	0					
ANR	792116	Callee	r_cons_printf		792047	0					
ANR	792117	Identifier	r_cons_printf		792047	0					
ANR	792118	ArgumentList	"""|Types:\\n"""		792047	1					
ANR	792119	Argument	"""|Types:\\n"""		792047	0					
ANR	792120	PrimaryExpression	"""|Types:\\n"""		792047	0					
ANR	792121	ForStatement	for ( i = 0 ; i < R_CORE_AUTOCMPLT_END ; ++ i )		792047	3					
ANR	792122	ForInit	i = 0 ;	1919:7:50385:50390	792047	0	True				
ANR	792123	AssignmentExpression	i = 0		792047	0		=			
ANR	792124	Identifier	i		792047	0					
ANR	792125	PrimaryExpression	0		792047	1					
ANR	792126	Condition	i < R_CORE_AUTOCMPLT_END	1919:14:50392:50415	792047	1	True				
ANR	792127	RelationalExpression	i < R_CORE_AUTOCMPLT_END		792047	0		<			
ANR	792128	Identifier	i		792047	0					
ANR	792129	Identifier	R_CORE_AUTOCMPLT_END		792047	1					
ANR	792130	UnaryExpression	++ i	1919:40:50418:50420	792047	2	True				
ANR	792131	IncDec	++		792047	0					
ANR	792132	Identifier	i		792047	1					
ANR	792133	CompoundStatement		13:45:322:322	792047	3					
ANR	792134	IfStatement	if ( autocomplete_flags [ i ] . desc )		792047	0					
ANR	792135	Condition	autocomplete_flags [ i ] . desc	1920:7:50432:50457	792047	0	True				
ANR	792136	MemberAccess	autocomplete_flags [ i ] . desc		792047	0					
ANR	792137	ArrayIndexing	autocomplete_flags [ i ]		792047	0					
ANR	792138	Identifier	autocomplete_flags		792047	0					
ANR	792139	Identifier	i		792047	1					
ANR	792140	Identifier	desc		792047	1					
ANR	792141	CompoundStatement		14:35:359:359	792047	1					
ANR	792142	ExpressionStatement	"r_cons_printf ( ""| %s     %s\\n"" , autocomplete_flags [ i ] . name , autocomplete_flags [ i ] . desc )"	1921:4:50466:50563	792047	0	True				
ANR	792143	CallExpression	"r_cons_printf ( ""| %s     %s\\n"" , autocomplete_flags [ i ] . name , autocomplete_flags [ i ] . desc )"		792047	0					
ANR	792144	Callee	r_cons_printf		792047	0					
ANR	792145	Identifier	r_cons_printf		792047	0					
ANR	792146	ArgumentList	"""| %s     %s\\n"""		792047	1					
ANR	792147	Argument	"""| %s     %s\\n"""		792047	0					
ANR	792148	PrimaryExpression	"""| %s     %s\\n"""		792047	0					
ANR	792149	Argument	autocomplete_flags [ i ] . name		792047	1					
ANR	792150	MemberAccess	autocomplete_flags [ i ] . name		792047	0					
ANR	792151	ArrayIndexing	autocomplete_flags [ i ]		792047	0					
ANR	792152	Identifier	autocomplete_flags		792047	0					
ANR	792153	Identifier	i		792047	1					
ANR	792154	Identifier	name		792047	1					
ANR	792155	Argument	autocomplete_flags [ i ] . desc		792047	2					
ANR	792156	MemberAccess	autocomplete_flags [ i ] . desc		792047	0					
ANR	792157	ArrayIndexing	autocomplete_flags [ i ]		792047	0					
ANR	792158	Identifier	autocomplete_flags		792047	0					
ANR	792159	Identifier	i		792047	1					
ANR	792160	Identifier	desc		792047	1					
ANR	792161	ReturnStatement	return ;	1926:2:50576:50582	792047	4	True				
ANR	792162	IfStatement	if ( * input == '-' )		792047	5					
ANR	792163	Condition	* input == '-'	1928:5:50592:50604	792047	0	True				
ANR	792164	EqualityExpression	* input == '-'		792047	0		==			
ANR	792165	UnaryOperationExpression	* input		792047	0					
ANR	792166	UnaryOperator	*		792047	0					
ANR	792167	Identifier	input		792047	1					
ANR	792168	PrimaryExpression	'-'		792047	1					
ANR	792169	CompoundStatement		23:2:510:537	792047	1					
ANR	792170	IdentifierDeclStatement	const char * arg = input + 1 ;	1929:2:50611:50638	792047	0	True				
ANR	792171	IdentifierDecl	* arg = input + 1		792047	0					
ANR	792172	IdentifierDeclType	const char *		792047	0					
ANR	792173	Identifier	arg		792047	1					
ANR	792174	AssignmentExpression	* arg = input + 1		792047	2		=			
ANR	792175	Identifier	arg		792047	0					
ANR	792176	AdditiveExpression	input + 1		792047	1		+			
ANR	792177	Identifier	input		792047	0					
ANR	792178	PrimaryExpression	1		792047	1					
ANR	792179	IfStatement	if ( ! * input )		792047	1					
ANR	792180	Condition	! * input	1930:6:50646:50652	792047	0	True				
ANR	792181	UnaryOperationExpression	! * input		792047	0					
ANR	792182	UnaryOperator	!		792047	0					
ANR	792183	UnaryOperationExpression	* input		792047	1					
ANR	792184	UnaryOperator	*		792047	0					
ANR	792185	Identifier	input		792047	1					
ANR	792186	CompoundStatement		24:15:554:554	792047	1					
ANR	792187	ExpressionStatement	"eprintf ( ""Use !!!-* or !!!-<cmd>\\n"" )"	1931:3:50660:50696	792047	0	True				
ANR	792188	CallExpression	"eprintf ( ""Use !!!-* or !!!-<cmd>\\n"" )"		792047	0					
ANR	792189	Callee	eprintf		792047	0					
ANR	792190	Identifier	eprintf		792047	0					
ANR	792191	ArgumentList	"""Use !!!-* or !!!-<cmd>\\n"""		792047	1					
ANR	792192	Argument	"""Use !!!-* or !!!-<cmd>\\n"""		792047	0					
ANR	792193	PrimaryExpression	"""Use !!!-* or !!!-<cmd>\\n"""		792047	0					
ANR	792194	ReturnStatement	return ;	1932:3:50701:50707	792047	1	True				
ANR	792195	ExpressionStatement	"r_core_autocomplete_remove ( b , arg )"	1934:2:50715:50750	792047	2	True				
ANR	792196	CallExpression	"r_core_autocomplete_remove ( b , arg )"		792047	0					
ANR	792197	Callee	r_core_autocomplete_remove		792047	0					
ANR	792198	Identifier	r_core_autocomplete_remove		792047	0					
ANR	792199	ArgumentList	b		792047	1					
ANR	792200	Argument	b		792047	0					
ANR	792201	Identifier	b		792047	0					
ANR	792202	Argument	arg		792047	1					
ANR	792203	Identifier	arg		792047	0					
ANR	792204	ReturnStatement	return ;	1935:2:50754:50760	792047	3	True				
ANR	792205	WhileStatement	while ( b )		792047	6					
ANR	792206	Condition	b	1937:8:50773:50773	792047	0	True				
ANR	792207	Identifier	b		792047	0					
ANR	792208	CompoundStatement		46:2:964:1026	792047	1					
ANR	792209	IdentifierDeclStatement	const char * end = r_str_trim_wp ( input ) ;	1938:2:50780:50819	792047	0	True				
ANR	792210	IdentifierDecl	* end = r_str_trim_wp ( input )		792047	0					
ANR	792211	IdentifierDeclType	const char *		792047	0					
ANR	792212	Identifier	end		792047	1					
ANR	792213	AssignmentExpression	* end = r_str_trim_wp ( input )		792047	2		=			
ANR	792214	Identifier	end		792047	0					
ANR	792215	CallExpression	r_str_trim_wp ( input )		792047	1					
ANR	792216	Callee	r_str_trim_wp		792047	0					
ANR	792217	Identifier	r_str_trim_wp		792047	0					
ANR	792218	ArgumentList	input		792047	1					
ANR	792219	Argument	input		792047	0					
ANR	792220	Identifier	input		792047	0					
ANR	792221	IfStatement	if ( ! end )		792047	1					
ANR	792222	Condition	! end	1939:6:50827:50830	792047	0	True				
ANR	792223	UnaryOperationExpression	! end		792047	0					
ANR	792224	UnaryOperator	!		792047	0					
ANR	792225	Identifier	end		792047	1					
ANR	792226	CompoundStatement		33:12:732:732	792047	1					
ANR	792227	BreakStatement	break ;	1940:3:50838:50843	792047	0	True				
ANR	792228	IfStatement	if ( ( end - input ) >= sizeof ( arg ) )		792047	2					
ANR	792229	Condition	( end - input ) >= sizeof ( arg )	1942:6:50855:50883	792047	0	True				
ANR	792230	RelationalExpression	( end - input ) >= sizeof ( arg )		792047	0		>=			
ANR	792231	AdditiveExpression	end - input		792047	0		-			
ANR	792232	Identifier	end		792047	0					
ANR	792233	Identifier	input		792047	1					
ANR	792234	SizeofExpression	sizeof ( arg )		792047	1					
ANR	792235	Sizeof	sizeof		792047	0					
ANR	792236	SizeofOperand	arg		792047	1					
ANR	792237	CompoundStatement		36:37:785:785	792047	1					
ANR	792238	ExpressionStatement	"eprintf ( ""Exceeded the max arg length (255).\\n"" )"	1944:3:50902:50950	792047	0	True				
ANR	792239	CallExpression	"eprintf ( ""Exceeded the max arg length (255).\\n"" )"		792047	0					
ANR	792240	Callee	eprintf		792047	0					
ANR	792241	Identifier	eprintf		792047	0					
ANR	792242	ArgumentList	"""Exceeded the max arg length (255).\\n"""		792047	1					
ANR	792243	Argument	"""Exceeded the max arg length (255).\\n"""		792047	0					
ANR	792244	PrimaryExpression	"""Exceeded the max arg length (255).\\n"""		792047	0					
ANR	792245	ReturnStatement	return ;	1945:3:50955:50961	792047	1	True				
ANR	792246	IfStatement	if ( end == input )		792047	3					
ANR	792247	Condition	end == input	1947:6:50973:50984	792047	0	True				
ANR	792248	EqualityExpression	end == input		792047	0		==			
ANR	792249	Identifier	end		792047	0					
ANR	792250	Identifier	input		792047	1					
ANR	792251	CompoundStatement		41:20:886:886	792047	1					
ANR	792252	BreakStatement	break ;	1948:3:50992:50997	792047	0	True				
ANR	792253	ExpressionStatement	"memcpy ( arg , input , end - input )"	1950:2:51005:51037	792047	4	True				
ANR	792254	CallExpression	"memcpy ( arg , input , end - input )"		792047	0					
ANR	792255	Callee	memcpy		792047	0					
ANR	792256	Identifier	memcpy		792047	0					
ANR	792257	ArgumentList	arg		792047	1					
ANR	792258	Argument	arg		792047	0					
ANR	792259	Identifier	arg		792047	0					
ANR	792260	Argument	input		792047	1					
ANR	792261	Identifier	input		792047	0					
ANR	792262	Argument	end - input		792047	2					
ANR	792263	AdditiveExpression	end - input		792047	0		-			
ANR	792264	Identifier	end		792047	0					
ANR	792265	Identifier	input		792047	1					
ANR	792266	ExpressionStatement	arg [ end - input ] = 0	1951:2:51041:51061	792047	5	True				
ANR	792267	AssignmentExpression	arg [ end - input ] = 0		792047	0		=			
ANR	792268	ArrayIndexing	arg [ end - input ]		792047	0					
ANR	792269	Identifier	arg		792047	0					
ANR	792270	AdditiveExpression	end - input		792047	1		-			
ANR	792271	Identifier	end		792047	0					
ANR	792272	Identifier	input		792047	1					
ANR	792273	PrimaryExpression	0		792047	1					
ANR	792274	IdentifierDeclStatement	"RCoreAutocomplete * a = r_core_autocomplete_find ( b , arg , true ) ;"	1952:2:51065:51127	792047	6	True				
ANR	792275	IdentifierDecl	"* a = r_core_autocomplete_find ( b , arg , true )"		792047	0					
ANR	792276	IdentifierDeclType	RCoreAutocomplete *		792047	0					
ANR	792277	Identifier	a		792047	1					
ANR	792278	AssignmentExpression	"* a = r_core_autocomplete_find ( b , arg , true )"		792047	2		=			
ANR	792279	Identifier	a		792047	0					
ANR	792280	CallExpression	"r_core_autocomplete_find ( b , arg , true )"		792047	1					
ANR	792281	Callee	r_core_autocomplete_find		792047	0					
ANR	792282	Identifier	r_core_autocomplete_find		792047	0					
ANR	792283	ArgumentList	b		792047	1					
ANR	792284	Argument	b		792047	0					
ANR	792285	Identifier	b		792047	0					
ANR	792286	Argument	arg		792047	1					
ANR	792287	Identifier	arg		792047	0					
ANR	792288	Argument	true		792047	2					
ANR	792289	Identifier	true		792047	0					
ANR	792290	ExpressionStatement	input = r_str_trim_ro ( end )	1953:2:51131:51158	792047	7	True				
ANR	792291	AssignmentExpression	input = r_str_trim_ro ( end )		792047	0		=			
ANR	792292	Identifier	input		792047	0					
ANR	792293	CallExpression	r_str_trim_ro ( end )		792047	1					
ANR	792294	Callee	r_str_trim_ro		792047	0					
ANR	792295	Identifier	r_str_trim_ro		792047	0					
ANR	792296	ArgumentList	end		792047	1					
ANR	792297	Argument	end		792047	0					
ANR	792298	Identifier	end		792047	0					
ANR	792299	IfStatement	if ( input && * input && ! a )		792047	8					
ANR	792300	Condition	input && * input && ! a	1954:6:51166:51186	792047	0	True				
ANR	792301	AndExpression	input && * input && ! a		792047	0		&&			
ANR	792302	Identifier	input		792047	0					
ANR	792303	AndExpression	* input && ! a		792047	1		&&			
ANR	792304	UnaryOperationExpression	* input		792047	0					
ANR	792305	UnaryOperator	*		792047	0					
ANR	792306	Identifier	input		792047	1					
ANR	792307	UnaryOperationExpression	! a		792047	1					
ANR	792308	UnaryOperator	!		792047	0					
ANR	792309	Identifier	a		792047	1					
ANR	792310	CompoundStatement		48:29:1088:1088	792047	1					
ANR	792311	IfStatement	"if ( b -> type == R_CORE_AUTOCMPLT_DFLT && ! ( b = r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false ) ) )"		792047	0					
ANR	792312	Condition	"b -> type == R_CORE_AUTOCMPLT_DFLT && ! ( b = r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false ) )"	1955:7:51198:51302	792047	0	True				
ANR	792313	AndExpression	"b -> type == R_CORE_AUTOCMPLT_DFLT && ! ( b = r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false ) )"		792047	0		&&			
ANR	792314	EqualityExpression	b -> type == R_CORE_AUTOCMPLT_DFLT		792047	0		==			
ANR	792315	PtrMemberAccess	b -> type		792047	0					
ANR	792316	Identifier	b		792047	0					
ANR	792317	Identifier	type		792047	1					
ANR	792318	Identifier	R_CORE_AUTOCMPLT_DFLT		792047	1					
ANR	792319	UnaryOperationExpression	"! ( b = r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false ) )"		792047	1					
ANR	792320	UnaryOperator	!		792047	0					
ANR	792321	AssignmentExpression	"b = r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false )"		792047	1		=			
ANR	792322	Identifier	b		792047	0					
ANR	792323	CallExpression	"r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false )"		792047	1					
ANR	792324	Callee	r_core_autocomplete_add		792047	0					
ANR	792325	Identifier	r_core_autocomplete_add		792047	0					
ANR	792326	ArgumentList	b		792047	1					
ANR	792327	Argument	b		792047	0					
ANR	792328	Identifier	b		792047	0					
ANR	792329	Argument	arg		792047	1					
ANR	792330	Identifier	arg		792047	0					
ANR	792331	Argument	R_CORE_AUTOCMPLT_DFLT		792047	2					
ANR	792332	Identifier	R_CORE_AUTOCMPLT_DFLT		792047	0					
ANR	792333	Argument	false		792047	3					
ANR	792334	Identifier	false		792047	0					
ANR	792335	CompoundStatement		49:114:1204:1204	792047	1					
ANR	792336	ExpressionStatement	"eprintf ( ""ENOMEM\\n"" )"	1956:4:51311:51331	792047	0	True				
ANR	792337	CallExpression	"eprintf ( ""ENOMEM\\n"" )"		792047	0					
ANR	792338	Callee	eprintf		792047	0					
ANR	792339	Identifier	eprintf		792047	0					
ANR	792340	ArgumentList	"""ENOMEM\\n"""		792047	1					
ANR	792341	Argument	"""ENOMEM\\n"""		792047	0					
ANR	792342	PrimaryExpression	"""ENOMEM\\n"""		792047	0					
ANR	792343	ReturnStatement	return ;	1957:4:51337:51343	792047	1	True				
ANR	792344	ElseStatement	else		792047	0					
ANR	792345	IfStatement	if ( b -> type != R_CORE_AUTOCMPLT_DFLT )		792047	0					
ANR	792346	Condition	b -> type != R_CORE_AUTOCMPLT_DFLT	1958:14:51359:51390	792047	0	True				
ANR	792347	EqualityExpression	b -> type != R_CORE_AUTOCMPLT_DFLT		792047	0		!=			
ANR	792348	PtrMemberAccess	b -> type		792047	0					
ANR	792349	Identifier	b		792047	0					
ANR	792350	Identifier	type		792047	1					
ANR	792351	Identifier	R_CORE_AUTOCMPLT_DFLT		792047	1					
ANR	792352	CompoundStatement		52:48:1292:1292	792047	1					
ANR	792353	ExpressionStatement	"eprintf ( ""Cannot add autocomplete to '%s'. type not $dflt\\n"" , b -> cmd )"	1959:4:51399:51468	792047	0	True				
ANR	792354	CallExpression	"eprintf ( ""Cannot add autocomplete to '%s'. type not $dflt\\n"" , b -> cmd )"		792047	0					
ANR	792355	Callee	eprintf		792047	0					
ANR	792356	Identifier	eprintf		792047	0					
ANR	792357	ArgumentList	"""Cannot add autocomplete to '%s'. type not $dflt\\n"""		792047	1					
ANR	792358	Argument	"""Cannot add autocomplete to '%s'. type not $dflt\\n"""		792047	0					
ANR	792359	PrimaryExpression	"""Cannot add autocomplete to '%s'. type not $dflt\\n"""		792047	0					
ANR	792360	Argument	b -> cmd		792047	1					
ANR	792361	PtrMemberAccess	b -> cmd		792047	0					
ANR	792362	Identifier	b		792047	0					
ANR	792363	Identifier	cmd		792047	1					
ANR	792364	ReturnStatement	return ;	1960:4:51474:51480	792047	1	True				
ANR	792365	ElseStatement	else		792047	0					
ANR	792366	IfStatement	if ( ( ! input || ! * input ) && ! a )		792047	0					
ANR	792367	Condition	( ! input || ! * input ) && ! a	1962:13:51500:51524	792047	0	True				
ANR	792368	AndExpression	( ! input || ! * input ) && ! a		792047	0		&&			
ANR	792369	OrExpression	! input || ! * input		792047	0		||			
ANR	792370	UnaryOperationExpression	! input		792047	0					
ANR	792371	UnaryOperator	!		792047	0					
ANR	792372	Identifier	input		792047	1					
ANR	792373	UnaryOperationExpression	! * input		792047	1					
ANR	792374	UnaryOperator	!		792047	0					
ANR	792375	UnaryOperationExpression	* input		792047	1					
ANR	792376	UnaryOperator	*		792047	0					
ANR	792377	Identifier	input		792047	1					
ANR	792378	UnaryOperationExpression	! a		792047	1					
ANR	792379	UnaryOperator	!		792047	0					
ANR	792380	Identifier	a		792047	1					
ANR	792381	CompoundStatement		56:40:1426:1426	792047	1					
ANR	792382	IfStatement	if ( arg [ 0 ] == '$' )		792047	0					
ANR	792383	Condition	arg [ 0 ] == '$'	1963:7:51536:51548	792047	0	True				
ANR	792384	EqualityExpression	arg [ 0 ] == '$'		792047	0		==			
ANR	792385	ArrayIndexing	arg [ 0 ]		792047	0					
ANR	792386	Identifier	arg		792047	0					
ANR	792387	PrimaryExpression	0		792047	1					
ANR	792388	PrimaryExpression	'$'		792047	1					
ANR	792389	CompoundStatement		58:4:1456:1490	792047	1					
ANR	792390	IdentifierDeclStatement	int type = autocomplete_type ( arg ) ;	1964:4:51557:51591	792047	0	True				
ANR	792391	IdentifierDecl	type = autocomplete_type ( arg )		792047	0					
ANR	792392	IdentifierDeclType	int		792047	0					
ANR	792393	Identifier	type		792047	1					
ANR	792394	AssignmentExpression	type = autocomplete_type ( arg )		792047	2		=			
ANR	792395	Identifier	type		792047	0					
ANR	792396	CallExpression	autocomplete_type ( arg )		792047	1					
ANR	792397	Callee	autocomplete_type		792047	0					
ANR	792398	Identifier	autocomplete_type		792047	0					
ANR	792399	ArgumentList	arg		792047	1					
ANR	792400	Argument	arg		792047	0					
ANR	792401	Identifier	arg		792047	0					
ANR	792402	IfStatement	if ( type != R_CORE_AUTOCMPLT_END && ! b -> locked && ! b -> n_subcmds )		792047	1					
ANR	792403	Condition	type != R_CORE_AUTOCMPLT_END && ! b -> locked && ! b -> n_subcmds	1965:8:51601:51659	792047	0	True				
ANR	792404	AndExpression	type != R_CORE_AUTOCMPLT_END && ! b -> locked && ! b -> n_subcmds		792047	0		&&			
ANR	792405	EqualityExpression	type != R_CORE_AUTOCMPLT_END		792047	0		!=			
ANR	792406	Identifier	type		792047	0					
ANR	792407	Identifier	R_CORE_AUTOCMPLT_END		792047	1					
ANR	792408	AndExpression	! b -> locked && ! b -> n_subcmds		792047	1		&&			
ANR	792409	UnaryOperationExpression	! b -> locked		792047	0					
ANR	792410	UnaryOperator	!		792047	0					
ANR	792411	PtrMemberAccess	b -> locked		792047	1					
ANR	792412	Identifier	b		792047	0					
ANR	792413	Identifier	locked		792047	1					
ANR	792414	UnaryOperationExpression	! b -> n_subcmds		792047	1					
ANR	792415	UnaryOperator	!		792047	0					
ANR	792416	PtrMemberAccess	b -> n_subcmds		792047	1					
ANR	792417	Identifier	b		792047	0					
ANR	792418	Identifier	n_subcmds		792047	1					
ANR	792419	CompoundStatement		59:69:1561:1561	792047	1					
ANR	792420	ExpressionStatement	b -> type = type	1966:5:51669:51683	792047	0	True				
ANR	792421	AssignmentExpression	b -> type = type		792047	0		=			
ANR	792422	PtrMemberAccess	b -> type		792047	0					
ANR	792423	Identifier	b		792047	0					
ANR	792424	Identifier	type		792047	1					
ANR	792425	Identifier	type		792047	1					
ANR	792426	ElseStatement	else		792047	0					
ANR	792427	IfStatement	if ( b -> locked || b -> n_subcmds )		792047	0					
ANR	792428	Condition	b -> locked || b -> n_subcmds	1967:15:51700:51724	792047	0	True				
ANR	792429	OrExpression	b -> locked || b -> n_subcmds		792047	0		||			
ANR	792430	PtrMemberAccess	b -> locked		792047	0					
ANR	792431	Identifier	b		792047	0					
ANR	792432	Identifier	locked		792047	1					
ANR	792433	PtrMemberAccess	b -> n_subcmds		792047	1					
ANR	792434	Identifier	b		792047	0					
ANR	792435	Identifier	n_subcmds		792047	1					
ANR	792436	CompoundStatement		61:42:1626:1626	792047	1					
ANR	792437	IfStatement	if ( ! b -> cmd )		792047	0					
ANR	792438	Condition	! b -> cmd	1968:9:51738:51744	792047	0	True				
ANR	792439	UnaryOperationExpression	! b -> cmd		792047	0					
ANR	792440	UnaryOperator	!		792047	0					
ANR	792441	PtrMemberAccess	b -> cmd		792047	1					
ANR	792442	Identifier	b		792047	0					
ANR	792443	Identifier	cmd		792047	1					
ANR	792444	CompoundStatement		62:18:1646:1646	792047	1					
ANR	792445	ReturnStatement	return ;	1969:6:51755:51761	792047	0	True				
ANR	792446	ExpressionStatement	"eprintf ( ""Changing type of '%s' is forbidden.\\n"" , b -> cmd )"	1971:5:51775:51832	792047	1	True				
ANR	792447	CallExpression	"eprintf ( ""Changing type of '%s' is forbidden.\\n"" , b -> cmd )"		792047	0					
ANR	792448	Callee	eprintf		792047	0					
ANR	792449	Identifier	eprintf		792047	0					
ANR	792450	ArgumentList	"""Changing type of '%s' is forbidden.\\n"""		792047	1					
ANR	792451	Argument	"""Changing type of '%s' is forbidden.\\n"""		792047	0					
ANR	792452	PrimaryExpression	"""Changing type of '%s' is forbidden.\\n"""		792047	0					
ANR	792453	Argument	b -> cmd		792047	1					
ANR	792454	PtrMemberAccess	b -> cmd		792047	0					
ANR	792455	Identifier	b		792047	0					
ANR	792456	Identifier	cmd		792047	1					
ANR	792457	ElseStatement	else		792047	0					
ANR	792458	CompoundStatement		67:10:1749:1749	792047	0					
ANR	792459	IfStatement	"if ( ! r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false ) )"		792047	0					
ANR	792460	Condition	"! r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false )"	1974:8:51860:51922	792047	0	True				
ANR	792461	UnaryOperationExpression	"! r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false )"		792047	0					
ANR	792462	UnaryOperator	!		792047	0					
ANR	792463	CallExpression	"r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false )"		792047	1					
ANR	792464	Callee	r_core_autocomplete_add		792047	0					
ANR	792465	Identifier	r_core_autocomplete_add		792047	0					
ANR	792466	ArgumentList	b		792047	1					
ANR	792467	Argument	b		792047	0					
ANR	792468	Identifier	b		792047	0					
ANR	792469	Argument	arg		792047	1					
ANR	792470	Identifier	arg		792047	0					
ANR	792471	Argument	R_CORE_AUTOCMPLT_DFLT		792047	2					
ANR	792472	Identifier	R_CORE_AUTOCMPLT_DFLT		792047	0					
ANR	792473	Argument	false		792047	3					
ANR	792474	Identifier	false		792047	0					
ANR	792475	CompoundStatement		68:73:1824:1824	792047	1					
ANR	792476	ExpressionStatement	"eprintf ( ""ENOMEM\\n"" )"	1975:5:51932:51952	792047	0	True				
ANR	792477	CallExpression	"eprintf ( ""ENOMEM\\n"" )"		792047	0					
ANR	792478	Callee	eprintf		792047	0					
ANR	792479	Identifier	eprintf		792047	0					
ANR	792480	ArgumentList	"""ENOMEM\\n"""		792047	1					
ANR	792481	Argument	"""ENOMEM\\n"""		792047	0					
ANR	792482	PrimaryExpression	"""ENOMEM\\n"""		792047	0					
ANR	792483	ReturnStatement	return ;	1976:5:51959:51965	792047	1	True				
ANR	792484	ReturnStatement	return ;	1979:3:51981:51987	792047	1	True				
ANR	792485	ElseStatement	else		792047	0					
ANR	792486	IfStatement	if ( ( ! input || ! * input ) && a )		792047	0					
ANR	792487	Condition	( ! input || ! * input ) && a	1980:13:52002:52025	792047	0	True				
ANR	792488	AndExpression	( ! input || ! * input ) && a		792047	0		&&			
ANR	792489	OrExpression	! input || ! * input		792047	0		||			
ANR	792490	UnaryOperationExpression	! input		792047	0					
ANR	792491	UnaryOperator	!		792047	0					
ANR	792492	Identifier	input		792047	1					
ANR	792493	UnaryOperationExpression	! * input		792047	1					
ANR	792494	UnaryOperator	!		792047	0					
ANR	792495	UnaryOperationExpression	* input		792047	1					
ANR	792496	UnaryOperator	*		792047	0					
ANR	792497	Identifier	input		792047	1					
ANR	792498	Identifier	a		792047	1					
ANR	792499	CompoundStatement		74:39:1927:1927	792047	1					
ANR	792500	ReturnStatement	return ;	1982:3:52092:52098	792047	0	True				
ANR	792501	ElseStatement	else		792047	0					
ANR	792502	CompoundStatement		77:9:2008:2008	792047	0					
ANR	792503	ExpressionStatement	b = a	1984:3:52114:52119	792047	0	True				
ANR	792504	AssignmentExpression	b = a		792047	0		=			
ANR	792505	Identifier	b		792047	0					
ANR	792506	Identifier	a		792047	1					
ANR	792507	ExpressionStatement	"eprintf ( ""Invalid usage of !!!\\n"" )"	1987:1:52129:52163	792047	7	True				
ANR	792508	CallExpression	"eprintf ( ""Invalid usage of !!!\\n"" )"		792047	0					
ANR	792509	Callee	eprintf		792047	0					
ANR	792510	Identifier	eprintf		792047	0					
ANR	792511	ArgumentList	"""Invalid usage of !!!\\n"""		792047	1					
ANR	792512	Argument	"""Invalid usage of !!!\\n"""		792047	0					
ANR	792513	PrimaryExpression	"""Invalid usage of !!!\\n"""		792047	0					
ANR	792514	ReturnType	static void		792047	1					
ANR	792515	Identifier	cmd_autocomplete		792047	2					
ANR	792516	ParameterList	"RCore * core , const char * input"		792047	3					
ANR	792517	Parameter	RCore * core	1907:29:50068:50078	792047	0	True				
ANR	792518	ParameterType	RCore *		792047	0					
ANR	792519	Identifier	core		792047	1					
ANR	792520	Parameter	const char * input	1907:42:50081:50097	792047	1	True				
ANR	792521	ParameterType	const char *		792047	0					
ANR	792522	Identifier	input		792047	1					
ANR	792523	CFGEntryNode	ENTRY		792047		True				
ANR	792524	CFGExitNode	EXIT		792047		True				
ANR	792525	Symbol	autocomplete_flags		792047						
ANR	792526	Symbol	help_msg_triple_exclamation		792047						
ANR	792527	Symbol	b -> n_subcmds		792047						
ANR	792528	Symbol	* core		792047						
ANR	792529	Symbol	* input		792047						
ANR	792530	Symbol	type		792047						
ANR	792531	Symbol	core -> autocomplete		792047						
ANR	792532	Symbol	r_core_autocomplete_find		792047						
ANR	792533	Symbol	R_CORE_AUTOCMPLT_END		792047						
ANR	792534	Symbol	autocomplete_type		792047						
ANR	792535	Symbol	arg		792047						
ANR	792536	Symbol	end		792047						
ANR	792537	Symbol	r_str_trim_wp		792047						
ANR	792538	Symbol	b -> type		792047						
ANR	792539	Symbol	a		792047						
ANR	792540	Symbol	b		792047						
ANR	792541	Symbol	false		792047						
ANR	792542	Symbol	i		792047						
ANR	792543	Symbol	autocomplete_flags [ i ] . name		792047						
ANR	792544	Symbol	R_CORE_AUTOCMPLT_DFLT		792047						
ANR	792545	Symbol	* autocomplete_flags		792047						
ANR	792546	Symbol	* b		792047						
ANR	792547	Symbol	r_core_autocomplete_add		792047						
ANR	792548	Symbol	autocomplete_flags [ i ] . desc		792047						
ANR	792549	Symbol	core		792047						
ANR	792550	Symbol	input		792047						
ANR	792551	Symbol	* i		792047						
ANR	792552	Symbol	b -> locked		792047						
ANR	792553	Symbol	b -> cmd		792047						
ANR	792554	Symbol	r_str_trim_ro		792047						
ANR	792555	Symbol	true		792047						
ANR	792556	Symbol	* end		792047						
ANR	792557	Symbol	* arg		792047						
ANR	792558	Function	cmd_last	1990:0:52168:52345							
ANR	792559	FunctionDef	"cmd_last (void * data , const char * input)"		792558	0					
ANR	792560	CompoundStatement		1990:51:52219:52345	792558	0					
ANR	792561	SwitchStatement	switch ( * input )		792558	0					
ANR	792562	Condition	* input	1991:9:52230:52235	792558	0	True				
ANR	792563	UnaryOperationExpression	* input		792558	0					
ANR	792564	UnaryOperator	*		792558	0					
ANR	792565	Identifier	input		792558	1					
ANR	792566	CompoundStatement		2:17:18:18	792558	1					
ANR	792567	Label	case 0 :	1992:1:52241:52247	792558	0	True				
ANR	792568	ExpressionStatement	r_cons_last ( )	1993:2:52251:52265	792558	1	True				
ANR	792569	CallExpression	r_cons_last ( )		792558	0					
ANR	792570	Callee	r_cons_last		792558	0					
ANR	792571	Identifier	r_cons_last		792558	0					
ANR	792572	ArgumentList			792558	1					
ANR	792573	BreakStatement	break ;	1994:2:52269:52274	792558	2	True				
ANR	792574	Label	default :	1995:1:52277:52284	792558	3	True				
ANR	792575	Identifier	default		792558	0					
ANR	792576	ExpressionStatement	"eprintf ( ""Usage: _  print last output\\n"" )"	1996:2:52288:52329	792558	4	True				
ANR	792577	CallExpression	"eprintf ( ""Usage: _  print last output\\n"" )"		792558	0					
ANR	792578	Callee	eprintf		792558	0					
ANR	792579	Identifier	eprintf		792558	0					
ANR	792580	ArgumentList	"""Usage: _  print last output\\n"""		792558	1					
ANR	792581	Argument	"""Usage: _  print last output\\n"""		792558	0					
ANR	792582	PrimaryExpression	"""Usage: _  print last output\\n"""		792558	0					
ANR	792583	ReturnStatement	return 0 ;	1998:1:52335:52343	792558	1	True				
ANR	792584	PrimaryExpression	0		792558	0					
ANR	792585	ReturnType	static int		792558	1					
ANR	792586	Identifier	cmd_last		792558	2					
ANR	792587	ParameterList	"void * data , const char * input"		792558	3					
ANR	792588	Parameter	void * data	1990:20:52188:52197	792558	0	True				
ANR	792589	ParameterType	void *		792558	0					
ANR	792590	Identifier	data		792558	1					
ANR	792591	Parameter	const char * input	1990:32:52200:52216	792558	1	True				
ANR	792592	ParameterType	const char *		792558	0					
ANR	792593	Identifier	input		792558	1					
ANR	792594	CFGEntryNode	ENTRY		792558		True				
ANR	792595	CFGExitNode	EXIT		792558		True				
ANR	792596	Symbol	input		792558						
ANR	792597	Symbol	data		792558						
ANR	792598	Symbol	* input		792558						
ANR	792599	Function	cmd_system	2001:0:52348:54782							
ANR	792600	FunctionDef	"cmd_system (void * data , const char * input)"		792599	0					
ANR	792601	CompoundStatement		2001:53:52401:54782	792599	0					
ANR	792602	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	2002:1:52404:52430	792599	0	True				
ANR	792603	IdentifierDecl	* core = ( RCore * ) data		792599	0					
ANR	792604	IdentifierDeclType	RCore *		792599	0					
ANR	792605	Identifier	core		792599	1					
ANR	792606	AssignmentExpression	* core = ( RCore * ) data		792599	2		=			
ANR	792607	Identifier	core		792599	0					
ANR	792608	CastExpression	( RCore * ) data		792599	1					
ANR	792609	CastTarget	RCore *		792599	0					
ANR	792610	Identifier	data		792599	1					
ANR	792611	IdentifierDeclStatement	ut64 n ;	2003:1:52433:52439	792599	1	True				
ANR	792612	IdentifierDecl	n		792599	0					
ANR	792613	IdentifierDeclType	ut64		792599	0					
ANR	792614	Identifier	n		792599	1					
ANR	792615	IdentifierDeclStatement	int ret = 0 ;	2004:1:52442:52453	792599	2	True				
ANR	792616	IdentifierDecl	ret = 0		792599	0					
ANR	792617	IdentifierDeclType	int		792599	0					
ANR	792618	Identifier	ret		792599	1					
ANR	792619	AssignmentExpression	ret = 0		792599	2		=			
ANR	792620	Identifier	ret		792599	0					
ANR	792621	PrimaryExpression	0		792599	1					
ANR	792622	SwitchStatement	switch ( * input )		792599	3					
ANR	792623	Condition	* input	2005:9:52464:52469	792599	0	True				
ANR	792624	UnaryOperationExpression	* input		792599	0					
ANR	792625	UnaryOperator	*		792599	0					
ANR	792626	Identifier	input		792599	1					
ANR	792627	CompoundStatement		5:17:70:70	792599	1					
ANR	792628	Label	case '-' :	2006:1:52475:52483	792599	0	True				
ANR	792629	IfStatement	if ( input [ 1 ] )		792599	1					
ANR	792630	Condition	input [ 1 ]	2007:6:52496:52503	792599	0	True				
ANR	792631	ArrayIndexing	input [ 1 ]		792599	0					
ANR	792632	Identifier	input		792599	0					
ANR	792633	PrimaryExpression	1		792599	1					
ANR	792634	CompoundStatement		7:16:104:104	792599	1					
ANR	792635	ExpressionStatement	r_line_hist_free ( )	2008:3:52511:52529	792599	0	True				
ANR	792636	CallExpression	r_line_hist_free ( )		792599	0					
ANR	792637	Callee	r_line_hist_free		792599	0					
ANR	792638	Identifier	r_line_hist_free		792599	0					
ANR	792639	ArgumentList			792599	1					
ANR	792640	ExpressionStatement	r_line_hist_save ( R2_HOME_HISTORY )	2009:3:52534:52568	792599	1	True				
ANR	792641	CallExpression	r_line_hist_save ( R2_HOME_HISTORY )		792599	0					
ANR	792642	Callee	r_line_hist_save		792599	0					
ANR	792643	Identifier	r_line_hist_save		792599	0					
ANR	792644	ArgumentList	R2_HOME_HISTORY		792599	1					
ANR	792645	Argument	R2_HOME_HISTORY		792599	0					
ANR	792646	Identifier	R2_HOME_HISTORY		792599	0					
ANR	792647	ElseStatement	else		792599	0					
ANR	792648	CompoundStatement		10:9:177:177	792599	0					
ANR	792649	ExpressionStatement	r_line_hist_free ( )	2011:3:52584:52602	792599	0	True				
ANR	792650	CallExpression	r_line_hist_free ( )		792599	0					
ANR	792651	Callee	r_line_hist_free		792599	0					
ANR	792652	Identifier	r_line_hist_free		792599	0					
ANR	792653	ArgumentList			792599	1					
ANR	792654	BreakStatement	break ;	2013:2:52610:52615	792599	2	True				
ANR	792655	Label	case '=' :	2014:1:52618:52626	792599	3	True				
ANR	792656	IfStatement	if ( input [ 1 ] == '?' )		792599	4					
ANR	792657	Condition	input [ 1 ] == '?'	2015:6:52639:52653	792599	0	True				
ANR	792658	EqualityExpression	input [ 1 ] == '?'		792599	0		==			
ANR	792659	ArrayIndexing	input [ 1 ]		792599	0					
ANR	792660	Identifier	input		792599	0					
ANR	792661	PrimaryExpression	1		792599	1					
ANR	792662	PrimaryExpression	'?'		792599	1					
ANR	792663	CompoundStatement		15:23:254:254	792599	1					
ANR	792664	ExpressionStatement	"r_cons_printf ( ""Usage: !=[!]  - enable/disable remote commands\\n"" )"	2016:3:52661:52727	792599	0	True				
ANR	792665	CallExpression	"r_cons_printf ( ""Usage: !=[!]  - enable/disable remote commands\\n"" )"		792599	0					
ANR	792666	Callee	r_cons_printf		792599	0					
ANR	792667	Identifier	r_cons_printf		792599	0					
ANR	792668	ArgumentList	"""Usage: !=[!]  - enable/disable remote commands\\n"""		792599	1					
ANR	792669	Argument	"""Usage: !=[!]  - enable/disable remote commands\\n"""		792599	0					
ANR	792670	PrimaryExpression	"""Usage: !=[!]  - enable/disable remote commands\\n"""		792599	0					
ANR	792671	ElseStatement	else		792599	0					
ANR	792672	CompoundStatement		17:9:336:336	792599	0					
ANR	792673	IfStatement	if ( ! r_sandbox_enable ( 0 ) )		792599	0					
ANR	792674	Condition	! r_sandbox_enable ( 0 )	2018:7:52747:52767	792599	0	True				
ANR	792675	UnaryOperationExpression	! r_sandbox_enable ( 0 )		792599	0					
ANR	792676	UnaryOperator	!		792599	0					
ANR	792677	CallExpression	r_sandbox_enable ( 0 )		792599	1					
ANR	792678	Callee	r_sandbox_enable		792599	0					
ANR	792679	Identifier	r_sandbox_enable		792599	0					
ANR	792680	ArgumentList	0		792599	1					
ANR	792681	Argument	0		792599	0					
ANR	792682	PrimaryExpression	0		792599	0					
ANR	792683	CompoundStatement		18:30:368:368	792599	1					
ANR	792684	ExpressionStatement	core -> cmdremote = input [ 1 ] ? 1 : 0	2019:4:52776:52808	792599	0	True				
ANR	792685	AssignmentExpression	core -> cmdremote = input [ 1 ] ? 1 : 0		792599	0		=			
ANR	792686	PtrMemberAccess	core -> cmdremote		792599	0					
ANR	792687	Identifier	core		792599	0					
ANR	792688	Identifier	cmdremote		792599	1					
ANR	792689	ConditionalExpression	input [ 1 ] ? 1 : 0		792599	1					
ANR	792690	Condition	input [ 1 ]		792599	0					
ANR	792691	ArrayIndexing	input [ 1 ]		792599	0					
ANR	792692	Identifier	input		792599	0					
ANR	792693	PrimaryExpression	1		792599	1					
ANR	792694	PrimaryExpression	1		792599	1					
ANR	792695	PrimaryExpression	0		792599	2					
ANR	792696	ExpressionStatement	r_cons_println ( r_str_bool ( core -> cmdremote ) )	2020:4:52814:52859	792599	1	True				
ANR	792697	CallExpression	r_cons_println ( r_str_bool ( core -> cmdremote ) )		792599	0					
ANR	792698	Callee	r_cons_println		792599	0					
ANR	792699	Identifier	r_cons_println		792599	0					
ANR	792700	ArgumentList	r_str_bool ( core -> cmdremote )		792599	1					
ANR	792701	Argument	r_str_bool ( core -> cmdremote )		792599	0					
ANR	792702	CallExpression	r_str_bool ( core -> cmdremote )		792599	0					
ANR	792703	Callee	r_str_bool		792599	0					
ANR	792704	Identifier	r_str_bool		792599	0					
ANR	792705	ArgumentList	core -> cmdremote		792599	1					
ANR	792706	Argument	core -> cmdremote		792599	0					
ANR	792707	PtrMemberAccess	core -> cmdremote		792599	0					
ANR	792708	Identifier	core		792599	0					
ANR	792709	Identifier	cmdremote		792599	1					
ANR	792710	BreakStatement	break ;	2023:2:52872:52877	792599	5	True				
ANR	792711	Label	case '!' :	2024:1:52880:52888	792599	6	True				
ANR	792712	IfStatement	if ( input [ 1 ] == '!' )		792599	7					
ANR	792713	Condition	input [ 1 ] == '!'	2025:6:52901:52915	792599	0	True				
ANR	792714	EqualityExpression	input [ 1 ] == '!'		792599	0		==			
ANR	792715	ArrayIndexing	input [ 1 ]		792599	0					
ANR	792716	Identifier	input		792599	0					
ANR	792717	PrimaryExpression	1		792599	1					
ANR	792718	PrimaryExpression	'!'		792599	1					
ANR	792719	CompoundStatement		25:23:516:516	792599	1					
ANR	792720	ExpressionStatement	"cmd_autocomplete ( core , input + 2 )"	2026:3:52937:52971	792599	0	True				
ANR	792721	CallExpression	"cmd_autocomplete ( core , input + 2 )"		792599	0					
ANR	792722	Callee	cmd_autocomplete		792599	0					
ANR	792723	Identifier	cmd_autocomplete		792599	0					
ANR	792724	ArgumentList	core		792599	1					
ANR	792725	Argument	core		792599	0					
ANR	792726	Identifier	core		792599	0					
ANR	792727	Argument	input + 2		792599	1					
ANR	792728	AdditiveExpression	input + 2		792599	0		+			
ANR	792729	Identifier	input		792599	0					
ANR	792730	PrimaryExpression	2		792599	1					
ANR	792731	ElseStatement	else		792599	0					
ANR	792732	IfStatement	if ( input [ 1 ] == '?' )		792599	0					
ANR	792733	Condition	input [ 1 ] == '?'	2027:13:52986:53000	792599	0	True				
ANR	792734	EqualityExpression	input [ 1 ] == '?'		792599	0		==			
ANR	792735	ArrayIndexing	input [ 1 ]		792599	0					
ANR	792736	Identifier	input		792599	0					
ANR	792737	PrimaryExpression	1		792599	1					
ANR	792738	PrimaryExpression	'?'		792599	1					
ANR	792739	CompoundStatement		27:30:601:601	792599	1					
ANR	792740	ExpressionStatement	cmd_help_exclamation ( core )	2028:3:53008:53035	792599	0	True				
ANR	792741	CallExpression	cmd_help_exclamation ( core )		792599	0					
ANR	792742	Callee	cmd_help_exclamation		792599	0					
ANR	792743	Identifier	cmd_help_exclamation		792599	0					
ANR	792744	ArgumentList	core		792599	1					
ANR	792745	Argument	core		792599	0					
ANR	792746	Identifier	core		792599	0					
ANR	792747	ElseStatement	else		792599	0					
ANR	792748	IfStatement	if ( input [ 1 ] == '*' )		792599	0					
ANR	792749	Condition	input [ 1 ] == '*'	2029:13:53050:53064	792599	0	True				
ANR	792750	EqualityExpression	input [ 1 ] == '*'		792599	0		==			
ANR	792751	ArrayIndexing	input [ 1 ]		792599	0					
ANR	792752	Identifier	input		792599	0					
ANR	792753	PrimaryExpression	1		792599	1					
ANR	792754	PrimaryExpression	'*'		792599	1					
ANR	792755	CompoundStatement		30:3:670:708	792599	1					
ANR	792756	IdentifierDeclStatement	char * cmd = r_str_trim_dup ( input + 1 ) ;	2030:3:53072:53110	792599	0	True				
ANR	792757	IdentifierDecl	* cmd = r_str_trim_dup ( input + 1 )		792599	0					
ANR	792758	IdentifierDeclType	char *		792599	0					
ANR	792759	Identifier	cmd		792599	1					
ANR	792760	AssignmentExpression	* cmd = r_str_trim_dup ( input + 1 )		792599	2		=			
ANR	792761	Identifier	cmd		792599	0					
ANR	792762	CallExpression	r_str_trim_dup ( input + 1 )		792599	1					
ANR	792763	Callee	r_str_trim_dup		792599	0					
ANR	792764	Identifier	r_str_trim_dup		792599	0					
ANR	792765	ArgumentList	input + 1		792599	1					
ANR	792766	Argument	input + 1		792599	0					
ANR	792767	AdditiveExpression	input + 1		792599	0		+			
ANR	792768	Identifier	input		792599	0					
ANR	792769	PrimaryExpression	1		792599	1					
ANR	792770	ExpressionStatement	"( void ) r_core_cmdf ( core , ""\\""#!pipe %s\\"""" , cmd )"	2031:3:53115:53161	792599	1	True				
ANR	792771	CastExpression	"( void ) r_core_cmdf ( core , ""\\""#!pipe %s\\"""" , cmd )"		792599	0					
ANR	792772	CastTarget	void		792599	0					
ANR	792773	CallExpression	"r_core_cmdf ( core , ""\\""#!pipe %s\\"""" , cmd )"		792599	1					
ANR	792774	Callee	r_core_cmdf		792599	0					
ANR	792775	Identifier	r_core_cmdf		792599	0					
ANR	792776	ArgumentList	core		792599	1					
ANR	792777	Argument	core		792599	0					
ANR	792778	Identifier	core		792599	0					
ANR	792779	Argument	"""\\""#!pipe %s\\"""""		792599	1					
ANR	792780	PrimaryExpression	"""\\""#!pipe %s\\"""""		792599	0					
ANR	792781	Argument	cmd		792599	2					
ANR	792782	Identifier	cmd		792599	0					
ANR	792783	ExpressionStatement	free ( cmd )	2032:3:53166:53176	792599	2	True				
ANR	792784	CallExpression	free ( cmd )		792599	0					
ANR	792785	Callee	free		792599	0					
ANR	792786	Identifier	free		792599	0					
ANR	792787	ArgumentList	cmd		792599	1					
ANR	792788	Argument	cmd		792599	0					
ANR	792789	Identifier	cmd		792599	0					
ANR	792790	ElseStatement	else		792599	0					
ANR	792791	CompoundStatement		33:9:785:785	792599	0					
ANR	792792	IfStatement	if ( r_sandbox_enable ( 0 ) )		792599	0					
ANR	792793	Condition	r_sandbox_enable ( 0 )	2034:7:53196:53215	792599	0	True				
ANR	792794	CallExpression	r_sandbox_enable ( 0 )		792599	0					
ANR	792795	Callee	r_sandbox_enable		792599	0					
ANR	792796	Identifier	r_sandbox_enable		792599	0					
ANR	792797	ArgumentList	0		792599	1					
ANR	792798	Argument	0		792599	0					
ANR	792799	PrimaryExpression	0		792599	0					
ANR	792800	CompoundStatement		34:29:816:816	792599	1					
ANR	792801	ExpressionStatement	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"	2035:4:53224:53278	792599	0	True				
ANR	792802	CallExpression	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"		792599	0					
ANR	792803	Callee	eprintf		792599	0					
ANR	792804	Identifier	eprintf		792599	0					
ANR	792805	ArgumentList	"""This command is disabled in sandbox mode\\n"""		792599	1					
ANR	792806	Argument	"""This command is disabled in sandbox mode\\n"""		792599	0					
ANR	792807	PrimaryExpression	"""This command is disabled in sandbox mode\\n"""		792599	0					
ANR	792808	ReturnStatement	return 0 ;	2036:4:53284:53292	792599	1	True				
ANR	792809	PrimaryExpression	0		792599	0					
ANR	792810	IfStatement	if ( input [ 1 ] )		792599	1					
ANR	792811	Condition	input [ 1 ]	2038:7:53306:53313	792599	0	True				
ANR	792812	ArrayIndexing	input [ 1 ]		792599	0					
ANR	792813	Identifier	input		792599	0					
ANR	792814	PrimaryExpression	1		792599	1					
ANR	792815	CompoundStatement		41:4:956:1001	792599	1					
ANR	792816	IdentifierDeclStatement	int olen ;	2039:4:53322:53330	792599	0	True				
ANR	792817	IdentifierDecl	olen		792599	0					
ANR	792818	IdentifierDeclType	int		792599	0					
ANR	792819	Identifier	olen		792599	1					
ANR	792820	IdentifierDeclStatement	char * out = NULL ;	2040:4:53336:53352	792599	1	True				
ANR	792821	IdentifierDecl	* out = NULL		792599	0					
ANR	792822	IdentifierDeclType	char *		792599	0					
ANR	792823	Identifier	out		792599	1					
ANR	792824	AssignmentExpression	* out = NULL		792599	2		=			
ANR	792825	Identifier	NULL		792599	0					
ANR	792826	Identifier	NULL		792599	1					
ANR	792827	IdentifierDeclStatement	"char * cmd = r_core_sysenv_begin ( core , input ) ;"	2041:4:53358:53403	792599	2	True				
ANR	792828	IdentifierDecl	"* cmd = r_core_sysenv_begin ( core , input )"		792599	0					
ANR	792829	IdentifierDeclType	char *		792599	0					
ANR	792830	Identifier	cmd		792599	1					
ANR	792831	AssignmentExpression	"* cmd = r_core_sysenv_begin ( core , input )"		792599	2		=			
ANR	792832	Identifier	cmd		792599	0					
ANR	792833	CallExpression	"r_core_sysenv_begin ( core , input )"		792599	1					
ANR	792834	Callee	r_core_sysenv_begin		792599	0					
ANR	792835	Identifier	r_core_sysenv_begin		792599	0					
ANR	792836	ArgumentList	core		792599	1					
ANR	792837	Argument	core		792599	0					
ANR	792838	Identifier	core		792599	0					
ANR	792839	Argument	input		792599	1					
ANR	792840	Identifier	input		792599	0					
ANR	792841	IfStatement	if ( cmd )		792599	3					
ANR	792842	Condition	cmd	2042:8:53413:53415	792599	0	True				
ANR	792843	Identifier	cmd		792599	0					
ANR	792844	CompoundStatement		43:5:1023:1056	792599	1					
ANR	792845	IdentifierDeclStatement	void * bed = r_cons_sleep_begin ( ) ;	2043:5:53425:53458	792599	0	True				
ANR	792846	IdentifierDecl	* bed = r_cons_sleep_begin ( )		792599	0					
ANR	792847	IdentifierDeclType	void *		792599	0					
ANR	792848	Identifier	bed		792599	1					
ANR	792849	AssignmentExpression	* bed = r_cons_sleep_begin ( )		792599	2		=			
ANR	792850	Identifier	bed		792599	0					
ANR	792851	CallExpression	r_cons_sleep_begin ( )		792599	1					
ANR	792852	Callee	r_cons_sleep_begin		792599	0					
ANR	792853	Identifier	r_cons_sleep_begin		792599	0					
ANR	792854	ArgumentList			792599	1					
ANR	792855	ExpressionStatement	"ret = r_sys_cmd_str_full ( cmd + 1 , NULL , & out , & olen , NULL )"	2044:5:53465:53524	792599	1	True				
ANR	792856	AssignmentExpression	"ret = r_sys_cmd_str_full ( cmd + 1 , NULL , & out , & olen , NULL )"		792599	0		=			
ANR	792857	Identifier	ret		792599	0					
ANR	792858	CallExpression	"r_sys_cmd_str_full ( cmd + 1 , NULL , & out , & olen , NULL )"		792599	1					
ANR	792859	Callee	r_sys_cmd_str_full		792599	0					
ANR	792860	Identifier	r_sys_cmd_str_full		792599	0					
ANR	792861	ArgumentList	cmd + 1		792599	1					
ANR	792862	Argument	cmd + 1		792599	0					
ANR	792863	AdditiveExpression	cmd + 1		792599	0		+			
ANR	792864	Identifier	cmd		792599	0					
ANR	792865	PrimaryExpression	1		792599	1					
ANR	792866	Argument	NULL		792599	1					
ANR	792867	Identifier	NULL		792599	0					
ANR	792868	Argument	& out		792599	2					
ANR	792869	UnaryOperationExpression	& out		792599	0					
ANR	792870	UnaryOperator	&		792599	0					
ANR	792871	Identifier	out		792599	1					
ANR	792872	Argument	& olen		792599	3					
ANR	792873	UnaryOperationExpression	& olen		792599	0					
ANR	792874	UnaryOperator	&		792599	0					
ANR	792875	Identifier	olen		792599	1					
ANR	792876	Argument	NULL		792599	4					
ANR	792877	Identifier	NULL		792599	0					
ANR	792878	ExpressionStatement	r_cons_sleep_end ( bed )	2045:5:53531:53553	792599	2	True				
ANR	792879	CallExpression	r_cons_sleep_end ( bed )		792599	0					
ANR	792880	Callee	r_cons_sleep_end		792599	0					
ANR	792881	Identifier	r_cons_sleep_end		792599	0					
ANR	792882	ArgumentList	bed		792599	1					
ANR	792883	Argument	bed		792599	0					
ANR	792884	Identifier	bed		792599	0					
ANR	792885	ExpressionStatement	"r_core_sysenv_end ( core , input )"	2046:5:53560:53591	792599	3	True				
ANR	792886	CallExpression	"r_core_sysenv_end ( core , input )"		792599	0					
ANR	792887	Callee	r_core_sysenv_end		792599	0					
ANR	792888	Identifier	r_core_sysenv_end		792599	0					
ANR	792889	ArgumentList	core		792599	1					
ANR	792890	Argument	core		792599	0					
ANR	792891	Identifier	core		792599	0					
ANR	792892	Argument	input		792599	1					
ANR	792893	Identifier	input		792599	0					
ANR	792894	ExpressionStatement	"r_cons_memcat ( out , olen )"	2047:5:53598:53623	792599	4	True				
ANR	792895	CallExpression	"r_cons_memcat ( out , olen )"		792599	0					
ANR	792896	Callee	r_cons_memcat		792599	0					
ANR	792897	Identifier	r_cons_memcat		792599	0					
ANR	792898	ArgumentList	out		792599	1					
ANR	792899	Argument	out		792599	0					
ANR	792900	Identifier	out		792599	0					
ANR	792901	Argument	olen		792599	1					
ANR	792902	Identifier	olen		792599	0					
ANR	792903	ExpressionStatement	free ( out )	2048:5:53630:53640	792599	5	True				
ANR	792904	CallExpression	free ( out )		792599	0					
ANR	792905	Callee	free		792599	0					
ANR	792906	Identifier	free		792599	0					
ANR	792907	ArgumentList	out		792599	1					
ANR	792908	Argument	out		792599	0					
ANR	792909	Identifier	out		792599	0					
ANR	792910	ExpressionStatement	free ( cmd )	2049:5:53647:53657	792599	6	True				
ANR	792911	CallExpression	free ( cmd )		792599	0					
ANR	792912	Callee	free		792599	0					
ANR	792913	Identifier	free		792599	0					
ANR	792914	ArgumentList	cmd		792599	1					
ANR	792915	Argument	cmd		792599	0					
ANR	792916	Identifier	cmd		792599	0					
ANR	792917	ElseStatement	else		792599	0					
ANR	792918	CompoundStatement		51:10:1331:1331	792599	0					
ANR	792919	Statement	eprintf	2052:4:53739:53745	792599	0	True				
ANR	792920	Statement	(	2052:12:53747:53747	792599	1	True				
ANR	792921	Statement	"""History saved to """	2052:13:53748:53766	792599	2	True				
ANR	792922	Statement	R2_HOME_HISTORY	2052:32:53767:53781	792599	3	True				
ANR	792923	Statement	"""\\n"""	2052:47:53782:53785	792599	4	True				
ANR	792924	Statement	)	2052:51:53786:53786	792599	5	True				
ANR	792925	ExpressionStatement		2052:52:53787:53787	792599	6	True				
ANR	792926	ExpressionStatement	r_line_hist_save ( R2_HOME_HISTORY )	2053:4:53793:53827	792599	7	True				
ANR	792927	CallExpression	r_line_hist_save ( R2_HOME_HISTORY )		792599	0					
ANR	792928	Callee	r_line_hist_save		792599	0					
ANR	792929	Identifier	r_line_hist_save		792599	0					
ANR	792930	ArgumentList	R2_HOME_HISTORY		792599	1					
ANR	792931	Argument	R2_HOME_HISTORY		792599	0					
ANR	792932	Identifier	R2_HOME_HISTORY		792599	0					
ANR	792933	BreakStatement	break ;	2056:2:53840:53845	792599	8	True				
ANR	792934	Label	case '\\0' :	2057:1:53848:53857	792599	9	True				
ANR	792935	ExpressionStatement	r_line_hist_list ( )	2058:2:53861:53880	792599	10	True				
ANR	792936	CallExpression	r_line_hist_list ( )		792599	0					
ANR	792937	Callee	r_line_hist_list		792599	0					
ANR	792938	Identifier	r_line_hist_list		792599	0					
ANR	792939	ArgumentList			792599	1					
ANR	792940	BreakStatement	break ;	2059:2:53884:53889	792599	11	True				
ANR	792941	Label	case '?' :	2060:1:53892:53900	792599	12	True				
ANR	792942	ExpressionStatement	cmd_help_exclamation ( core )	2061:2:53909:53936	792599	13	True				
ANR	792943	CallExpression	cmd_help_exclamation ( core )		792599	0					
ANR	792944	Callee	cmd_help_exclamation		792599	0					
ANR	792945	Identifier	cmd_help_exclamation		792599	0					
ANR	792946	ArgumentList	core		792599	1					
ANR	792947	Argument	core		792599	0					
ANR	792948	Identifier	core		792599	0					
ANR	792949	BreakStatement	break ;	2062:2:53940:53945	792599	14	True				
ANR	792950	Label	case '*' :	2063:1:53948:53956	792599	15	True				
ANR	792951	CompoundStatement		66:2:1585:1623	792599	16					
ANR	792952	IdentifierDeclStatement	char * cmd = r_str_trim_dup ( input + 1 ) ;	2066:2:53987:54025	792599	0	True				
ANR	792953	IdentifierDecl	* cmd = r_str_trim_dup ( input + 1 )		792599	0					
ANR	792954	IdentifierDeclType	char *		792599	0					
ANR	792955	Identifier	cmd		792599	1					
ANR	792956	AssignmentExpression	* cmd = r_str_trim_dup ( input + 1 )		792599	2		=			
ANR	792957	Identifier	cmd		792599	0					
ANR	792958	CallExpression	r_str_trim_dup ( input + 1 )		792599	1					
ANR	792959	Callee	r_str_trim_dup		792599	0					
ANR	792960	Identifier	r_str_trim_dup		792599	0					
ANR	792961	ArgumentList	input + 1		792599	1					
ANR	792962	Argument	input + 1		792599	0					
ANR	792963	AdditiveExpression	input + 1		792599	0		+			
ANR	792964	Identifier	input		792599	0					
ANR	792965	PrimaryExpression	1		792599	1					
ANR	792966	ExpressionStatement	"cmd = r_str_replace ( cmd , "" "" , ""\\\\ "" , true )"	2067:2:54029:54072	792599	1	True				
ANR	792967	AssignmentExpression	"cmd = r_str_replace ( cmd , "" "" , ""\\\\ "" , true )"		792599	0		=			
ANR	792968	Identifier	cmd		792599	0					
ANR	792969	CallExpression	"r_str_replace ( cmd , "" "" , ""\\\\ "" , true )"		792599	1					
ANR	792970	Callee	r_str_replace		792599	0					
ANR	792971	Identifier	r_str_replace		792599	0					
ANR	792972	ArgumentList	cmd		792599	1					
ANR	792973	Argument	cmd		792599	0					
ANR	792974	Identifier	cmd		792599	0					
ANR	792975	Argument	""" """		792599	1					
ANR	792976	PrimaryExpression	""" """		792599	0					
ANR	792977	Argument	"""\\\\ """		792599	2					
ANR	792978	PrimaryExpression	"""\\\\ """		792599	0					
ANR	792979	Argument	true		792599	3					
ANR	792980	Identifier	true		792599	0					
ANR	792981	ExpressionStatement	"cmd = r_str_replace ( cmd , ""\\\\ "" , "" "" , false )"	2068:2:54076:54120	792599	2	True				
ANR	792982	AssignmentExpression	"cmd = r_str_replace ( cmd , ""\\\\ "" , "" "" , false )"		792599	0		=			
ANR	792983	Identifier	cmd		792599	0					
ANR	792984	CallExpression	"r_str_replace ( cmd , ""\\\\ "" , "" "" , false )"		792599	1					
ANR	792985	Callee	r_str_replace		792599	0					
ANR	792986	Identifier	r_str_replace		792599	0					
ANR	792987	ArgumentList	cmd		792599	1					
ANR	792988	Argument	cmd		792599	0					
ANR	792989	Identifier	cmd		792599	0					
ANR	792990	Argument	"""\\\\ """		792599	1					
ANR	792991	PrimaryExpression	"""\\\\ """		792599	0					
ANR	792992	Argument	""" """		792599	2					
ANR	792993	PrimaryExpression	""" """		792599	0					
ANR	792994	Argument	false		792599	3					
ANR	792995	Identifier	false		792599	0					
ANR	792996	ExpressionStatement	"cmd = r_str_replace ( cmd , ""\\"""" , ""'"" , false )"	2069:2:54124:54167	792599	3	True				
ANR	792997	AssignmentExpression	"cmd = r_str_replace ( cmd , ""\\"""" , ""'"" , false )"		792599	0		=			
ANR	792998	Identifier	cmd		792599	0					
ANR	792999	CallExpression	"r_str_replace ( cmd , ""\\"""" , ""'"" , false )"		792599	1					
ANR	793000	Callee	r_str_replace		792599	0					
ANR	793001	Identifier	r_str_replace		792599	0					
ANR	793002	ArgumentList	cmd		792599	1					
ANR	793003	Argument	cmd		792599	0					
ANR	793004	Identifier	cmd		792599	0					
ANR	793005	Argument	"""\\"""""		792599	1					
ANR	793006	PrimaryExpression	"""\\"""""		792599	0					
ANR	793007	Argument	"""'"""		792599	2					
ANR	793008	PrimaryExpression	"""'"""		792599	0					
ANR	793009	Argument	false		792599	3					
ANR	793010	Identifier	false		792599	0					
ANR	793011	ExpressionStatement	"ret = r_core_cmdf ( core , ""\\""#!pipe %s\\"""" , cmd )"	2070:2:54171:54217	792599	4	True				
ANR	793012	AssignmentExpression	"ret = r_core_cmdf ( core , ""\\""#!pipe %s\\"""" , cmd )"		792599	0		=			
ANR	793013	Identifier	ret		792599	0					
ANR	793014	CallExpression	"r_core_cmdf ( core , ""\\""#!pipe %s\\"""" , cmd )"		792599	1					
ANR	793015	Callee	r_core_cmdf		792599	0					
ANR	793016	Identifier	r_core_cmdf		792599	0					
ANR	793017	ArgumentList	core		792599	1					
ANR	793018	Argument	core		792599	0					
ANR	793019	Identifier	core		792599	0					
ANR	793020	Argument	"""\\""#!pipe %s\\"""""		792599	1					
ANR	793021	PrimaryExpression	"""\\""#!pipe %s\\"""""		792599	0					
ANR	793022	Argument	cmd		792599	2					
ANR	793023	Identifier	cmd		792599	0					
ANR	793024	ExpressionStatement	free ( cmd )	2071:2:54221:54231	792599	5	True				
ANR	793025	CallExpression	free ( cmd )		792599	0					
ANR	793026	Callee	free		792599	0					
ANR	793027	Identifier	free		792599	0					
ANR	793028	ArgumentList	cmd		792599	1					
ANR	793029	Argument	cmd		792599	0					
ANR	793030	Identifier	cmd		792599	0					
ANR	793031	BreakStatement	break ;	2073:2:54239:54244	792599	17	True				
ANR	793032	Label	default :	2074:1:54247:54254	792599	18	True				
ANR	793033	Identifier	default		792599	0					
ANR	793034	ExpressionStatement	n = atoi ( input )	2075:2:54258:54274	792599	19	True				
ANR	793035	AssignmentExpression	n = atoi ( input )		792599	0		=			
ANR	793036	Identifier	n		792599	0					
ANR	793037	CallExpression	atoi ( input )		792599	1					
ANR	793038	Callee	atoi		792599	0					
ANR	793039	Identifier	atoi		792599	0					
ANR	793040	ArgumentList	input		792599	1					
ANR	793041	Argument	input		792599	0					
ANR	793042	Identifier	input		792599	0					
ANR	793043	IfStatement	if ( * input == '0' || n > 0 )		792599	20					
ANR	793044	Condition	* input == '0' || n > 0	2076:6:54282:54303	792599	0	True				
ANR	793045	OrExpression	* input == '0' || n > 0		792599	0		||			
ANR	793046	EqualityExpression	* input == '0'		792599	0		==			
ANR	793047	UnaryOperationExpression	* input		792599	0					
ANR	793048	UnaryOperator	*		792599	0					
ANR	793049	Identifier	input		792599	1					
ANR	793050	PrimaryExpression	'0'		792599	1					
ANR	793051	RelationalExpression	n > 0		792599	1		>			
ANR	793052	Identifier	n		792599	0					
ANR	793053	PrimaryExpression	0		792599	1					
ANR	793054	CompoundStatement		77:3:1909:1946	792599	1					
ANR	793055	IdentifierDeclStatement	const char * cmd = r_line_hist_get ( n ) ;	2077:3:54311:54348	792599	0	True				
ANR	793056	IdentifierDecl	* cmd = r_line_hist_get ( n )		792599	0					
ANR	793057	IdentifierDeclType	const char *		792599	0					
ANR	793058	Identifier	cmd		792599	1					
ANR	793059	AssignmentExpression	* cmd = r_line_hist_get ( n )		792599	2		=			
ANR	793060	Identifier	cmd		792599	0					
ANR	793061	CallExpression	r_line_hist_get ( n )		792599	1					
ANR	793062	Callee	r_line_hist_get		792599	0					
ANR	793063	Identifier	r_line_hist_get		792599	0					
ANR	793064	ArgumentList	n		792599	1					
ANR	793065	Argument	n		792599	0					
ANR	793066	Identifier	n		792599	0					
ANR	793067	IfStatement	if ( cmd )		792599	1					
ANR	793068	Condition	cmd	2078:7:54357:54359	792599	0	True				
ANR	793069	Identifier	cmd		792599	0					
ANR	793070	CompoundStatement		78:12:1960:1960	792599	1					
ANR	793071	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	2079:4:54368:54391	792599	0	True				
ANR	793072	CallExpression	"r_core_cmd0 ( core , cmd )"		792599	0					
ANR	793073	Callee	r_core_cmd0		792599	0					
ANR	793074	Identifier	r_core_cmd0		792599	0					
ANR	793075	ArgumentList	core		792599	1					
ANR	793076	Argument	core		792599	0					
ANR	793077	Identifier	core		792599	0					
ANR	793078	Argument	cmd		792599	1					
ANR	793079	Identifier	cmd		792599	0					
ANR	793080	ElseStatement	else		792599	0					
ANR	793081	CompoundStatement		83:3:2071:2116	792599	0					
ANR	793082	IdentifierDeclStatement	"char * cmd = r_core_sysenv_begin ( core , input ) ;"	2083:3:54473:54518	792599	0	True				
ANR	793083	IdentifierDecl	"* cmd = r_core_sysenv_begin ( core , input )"		792599	0					
ANR	793084	IdentifierDeclType	char *		792599	0					
ANR	793085	Identifier	cmd		792599	1					
ANR	793086	AssignmentExpression	"* cmd = r_core_sysenv_begin ( core , input )"		792599	2		=			
ANR	793087	Identifier	cmd		792599	0					
ANR	793088	CallExpression	"r_core_sysenv_begin ( core , input )"		792599	1					
ANR	793089	Callee	r_core_sysenv_begin		792599	0					
ANR	793090	Identifier	r_core_sysenv_begin		792599	0					
ANR	793091	ArgumentList	core		792599	1					
ANR	793092	Argument	core		792599	0					
ANR	793093	Identifier	core		792599	0					
ANR	793094	Argument	input		792599	1					
ANR	793095	Identifier	input		792599	0					
ANR	793096	IfStatement	if ( cmd )		792599	1					
ANR	793097	Condition	cmd	2084:7:54527:54529	792599	0	True				
ANR	793098	Identifier	cmd		792599	0					
ANR	793099	CompoundStatement		85:4:2136:2169	792599	1					
ANR	793100	IdentifierDeclStatement	void * bed = r_cons_sleep_begin ( ) ;	2085:4:54538:54571	792599	0	True				
ANR	793101	IdentifierDecl	* bed = r_cons_sleep_begin ( )		792599	0					
ANR	793102	IdentifierDeclType	void *		792599	0					
ANR	793103	Identifier	bed		792599	1					
ANR	793104	AssignmentExpression	* bed = r_cons_sleep_begin ( )		792599	2		=			
ANR	793105	Identifier	bed		792599	0					
ANR	793106	CallExpression	r_cons_sleep_begin ( )		792599	1					
ANR	793107	Callee	r_cons_sleep_begin		792599	0					
ANR	793108	Identifier	r_cons_sleep_begin		792599	0					
ANR	793109	ArgumentList			792599	1					
ANR	793110	ExpressionStatement	ret = r_sys_cmd ( cmd )	2086:4:54577:54598	792599	1	True				
ANR	793111	AssignmentExpression	ret = r_sys_cmd ( cmd )		792599	0		=			
ANR	793112	Identifier	ret		792599	0					
ANR	793113	CallExpression	r_sys_cmd ( cmd )		792599	1					
ANR	793114	Callee	r_sys_cmd		792599	0					
ANR	793115	Identifier	r_sys_cmd		792599	0					
ANR	793116	ArgumentList	cmd		792599	1					
ANR	793117	Argument	cmd		792599	0					
ANR	793118	Identifier	cmd		792599	0					
ANR	793119	ExpressionStatement	r_cons_sleep_end ( bed )	2087:4:54604:54626	792599	2	True				
ANR	793120	CallExpression	r_cons_sleep_end ( bed )		792599	0					
ANR	793121	Callee	r_cons_sleep_end		792599	0					
ANR	793122	Identifier	r_cons_sleep_end		792599	0					
ANR	793123	ArgumentList	bed		792599	1					
ANR	793124	Argument	bed		792599	0					
ANR	793125	Identifier	bed		792599	0					
ANR	793126	ExpressionStatement	"r_core_sysenv_end ( core , input )"	2088:4:54632:54663	792599	3	True				
ANR	793127	CallExpression	"r_core_sysenv_end ( core , input )"		792599	0					
ANR	793128	Callee	r_core_sysenv_end		792599	0					
ANR	793129	Identifier	r_core_sysenv_end		792599	0					
ANR	793130	ArgumentList	core		792599	1					
ANR	793131	Argument	core		792599	0					
ANR	793132	Identifier	core		792599	0					
ANR	793133	Argument	input		792599	1					
ANR	793134	Identifier	input		792599	0					
ANR	793135	ExpressionStatement	free ( cmd )	2089:4:54669:54679	792599	4	True				
ANR	793136	CallExpression	free ( cmd )		792599	0					
ANR	793137	Callee	free		792599	0					
ANR	793138	Identifier	free		792599	0					
ANR	793139	ArgumentList	cmd		792599	1					
ANR	793140	Argument	cmd		792599	0					
ANR	793141	Identifier	cmd		792599	0					
ANR	793142	ElseStatement	else		792599	0					
ANR	793143	CompoundStatement		90:10:2289:2289	792599	0					
ANR	793144	ExpressionStatement	"eprintf ( ""Error setting up system environment\\n"" )"	2091:4:54697:54746	792599	0	True				
ANR	793145	CallExpression	"eprintf ( ""Error setting up system environment\\n"" )"		792599	0					
ANR	793146	Callee	eprintf		792599	0					
ANR	793147	Identifier	eprintf		792599	0					
ANR	793148	ArgumentList	"""Error setting up system environment\\n"""		792599	1					
ANR	793149	Argument	"""Error setting up system environment\\n"""		792599	0					
ANR	793150	PrimaryExpression	"""Error setting up system environment\\n"""		792599	0					
ANR	793151	BreakStatement	break ;	2094:2:54759:54764	792599	21	True				
ANR	793152	ReturnStatement	return ret ;	2096:1:54770:54780	792599	4	True				
ANR	793153	Identifier	ret		792599	0					
ANR	793154	ReturnType	static int		792599	1					
ANR	793155	Identifier	cmd_system		792599	2					
ANR	793156	ParameterList	"void * data , const char * input"		792599	3					
ANR	793157	Parameter	void * data	2001:22:52370:52379	792599	0	True				
ANR	793158	ParameterType	void *		792599	0					
ANR	793159	Identifier	data		792599	1					
ANR	793160	Parameter	const char * input	2001:34:52382:52398	792599	1	True				
ANR	793161	ParameterType	const char *		792599	0					
ANR	793162	Identifier	input		792599	1					
ANR	793163	CFGEntryNode	ENTRY		792599		True				
ANR	793164	CFGExitNode	EXIT		792599		True				
ANR	793165	Symbol	bed		792599						
ANR	793166	Symbol	r_core_sysenv_begin		792599						
ANR	793167	Symbol	data		792599						
ANR	793168	Symbol	r_core_cmdf		792599						
ANR	793169	Symbol	r_sandbox_enable		792599						
ANR	793170	Symbol	* input		792599						
ANR	793171	Symbol	* core		792599						
ANR	793172	Symbol	r_sys_cmd		792599						
ANR	793173	Symbol	r_str_trim_dup		792599						
ANR	793174	Symbol	out		792599						
ANR	793175	Symbol	& olen		792599						
ANR	793176	Symbol	core -> cmdremote		792599						
ANR	793177	Symbol	r_str_replace		792599						
ANR	793178	Symbol	ret		792599						
ANR	793179	Symbol	atoi		792599						
ANR	793180	Symbol	r_str_bool		792599						
ANR	793181	Symbol	NULL		792599						
ANR	793182	Symbol	false		792599						
ANR	793183	Symbol	r_line_hist_get		792599						
ANR	793184	Symbol	n		792599						
ANR	793185	Symbol	input		792599						
ANR	793186	Symbol	core		792599						
ANR	793187	Symbol	olen		792599						
ANR	793188	Symbol	r_sys_cmd_str_full		792599						
ANR	793189	Symbol	& out		792599						
ANR	793190	Symbol	R2_HOME_HISTORY		792599						
ANR	793191	Symbol	true		792599						
ANR	793192	Symbol	r_cons_sleep_begin		792599						
ANR	793193	Symbol	cmd		792599						
ANR	793194	Function	r_w32_cmd_pipe	2101:0:54820:57323							
ANR	793195	FunctionDef	"r_w32_cmd_pipe (RCore * core , char * radare_cmd , char * shell_cmd)"		793194	0					
ANR	793196	CompoundStatement		2101:75:54895:57323	793194	0					
ANR	793197	IdentifierDeclStatement	STARTUPINFO si = { 0 } ;	2102:1:54898:54918	793194	0	True				
ANR	793198	IdentifierDecl	si = { 0 }		793194	0					
ANR	793199	IdentifierDeclType	STARTUPINFO		793194	0					
ANR	793200	Identifier	si		793194	1					
ANR	793201	AssignmentExpression	si = { 0 }		793194	2		=			
ANR	793202	Identifier	si		793194	0					
ANR	793203	InitializerList	0		793194	1					
ANR	793204	PrimaryExpression	0		793194	0					
ANR	793205	IdentifierDeclStatement	PROCESS_INFORMATION pi = { 0 } ;	2103:1:54921:54949	793194	1	True				
ANR	793206	IdentifierDecl	pi = { 0 }		793194	0					
ANR	793207	IdentifierDeclType	PROCESS_INFORMATION		793194	0					
ANR	793208	Identifier	pi		793194	1					
ANR	793209	AssignmentExpression	pi = { 0 }		793194	2		=			
ANR	793210	Identifier	pi		793194	0					
ANR	793211	InitializerList	0		793194	1					
ANR	793212	PrimaryExpression	0		793194	0					
ANR	793213	IdentifierDeclStatement	SECURITY_ATTRIBUTES sa ;	2104:1:54952:54974	793194	2	True				
ANR	793214	IdentifierDecl	sa		793194	0					
ANR	793215	IdentifierDeclType	SECURITY_ATTRIBUTES		793194	0					
ANR	793216	Identifier	sa		793194	1					
ANR	793217	IdentifierDeclStatement	"HANDLE pipe [ 2 ] = { NULL , NULL } ;"	2105:1:54977:55006	793194	3	True				
ANR	793218	IdentifierDecl	"pipe [ 2 ] = { NULL , NULL }"		793194	0					
ANR	793219	IdentifierDeclType	HANDLE [ 2 ]		793194	0					
ANR	793220	Identifier	pipe		793194	1					
ANR	793221	PrimaryExpression	2		793194	2					
ANR	793222	AssignmentExpression	"pipe [ 2 ] = { NULL , NULL }"		793194	3		=			
ANR	793223	Identifier	pipe		793194	0					
ANR	793224	InitializerList	NULL		793194	1					
ANR	793225	Identifier	NULL		793194	0					
ANR	793226	Identifier	NULL		793194	1					
ANR	793227	IdentifierDeclStatement	"int fd_out = - 1 , cons_out = - 1 ;"	2106:1:55009:55039	793194	4	True				
ANR	793228	IdentifierDecl	fd_out = - 1		793194	0					
ANR	793229	IdentifierDeclType	int		793194	0					
ANR	793230	Identifier	fd_out		793194	1					
ANR	793231	AssignmentExpression	fd_out = - 1		793194	2		=			
ANR	793232	Identifier	fd_out		793194	0					
ANR	793233	UnaryOperationExpression	- 1		793194	1					
ANR	793234	UnaryOperator	-		793194	0					
ANR	793235	PrimaryExpression	1		793194	1					
ANR	793236	IdentifierDecl	cons_out = - 1		793194	1					
ANR	793237	IdentifierDeclType	int		793194	0					
ANR	793238	Identifier	cons_out		793194	1					
ANR	793239	AssignmentExpression	cons_out = - 1		793194	2		=			
ANR	793240	Identifier	cons_out		793194	0					
ANR	793241	UnaryOperationExpression	- 1		793194	1					
ANR	793242	UnaryOperator	-		793194	0					
ANR	793243	PrimaryExpression	1		793194	1					
ANR	793244	IdentifierDeclStatement	char * _shell_cmd = NULL ;	2107:1:55042:55065	793194	5	True				
ANR	793245	IdentifierDecl	* _shell_cmd = NULL		793194	0					
ANR	793246	IdentifierDeclType	char *		793194	0					
ANR	793247	Identifier	_shell_cmd		793194	1					
ANR	793248	AssignmentExpression	* _shell_cmd = NULL		793194	2		=			
ANR	793249	Identifier	NULL		793194	0					
ANR	793250	Identifier	NULL		793194	1					
ANR	793251	IdentifierDeclStatement	LPTSTR _shell_cmd_ = NULL ;	2108:1:55068:55093	793194	6	True				
ANR	793252	IdentifierDecl	_shell_cmd_ = NULL		793194	0					
ANR	793253	IdentifierDeclType	LPTSTR		793194	0					
ANR	793254	Identifier	_shell_cmd_		793194	1					
ANR	793255	AssignmentExpression	_shell_cmd_ = NULL		793194	2		=			
ANR	793256	Identifier	NULL		793194	0					
ANR	793257	Identifier	NULL		793194	1					
ANR	793258	IdentifierDeclStatement	DWORD mode ;	2109:1:55096:55106	793194	7	True				
ANR	793259	IdentifierDecl	mode		793194	0					
ANR	793260	IdentifierDeclType	DWORD		793194	0					
ANR	793261	Identifier	mode		793194	1					
ANR	793262	ExpressionStatement	"GetConsoleMode ( GetStdHandle ( STD_OUTPUT_HANDLE ) , & mode )"	2110:1:55109:55165	793194	8	True				
ANR	793263	CallExpression	"GetConsoleMode ( GetStdHandle ( STD_OUTPUT_HANDLE ) , & mode )"		793194	0					
ANR	793264	Callee	GetConsoleMode		793194	0					
ANR	793265	Identifier	GetConsoleMode		793194	0					
ANR	793266	ArgumentList	GetStdHandle ( STD_OUTPUT_HANDLE )		793194	1					
ANR	793267	Argument	GetStdHandle ( STD_OUTPUT_HANDLE )		793194	0					
ANR	793268	CallExpression	GetStdHandle ( STD_OUTPUT_HANDLE )		793194	0					
ANR	793269	Callee	GetStdHandle		793194	0					
ANR	793270	Identifier	GetStdHandle		793194	0					
ANR	793271	ArgumentList	STD_OUTPUT_HANDLE		793194	1					
ANR	793272	Argument	STD_OUTPUT_HANDLE		793194	0					
ANR	793273	Identifier	STD_OUTPUT_HANDLE		793194	0					
ANR	793274	Argument	& mode		793194	1					
ANR	793275	UnaryOperationExpression	& mode		793194	0					
ANR	793276	UnaryOperator	&		793194	0					
ANR	793277	Identifier	mode		793194	1					
ANR	793278	ExpressionStatement	sa . nLength = sizeof ( SECURITY_ATTRIBUTES )	2112:1:55169:55210	793194	9	True				
ANR	793279	AssignmentExpression	sa . nLength = sizeof ( SECURITY_ATTRIBUTES )		793194	0		=			
ANR	793280	MemberAccess	sa . nLength		793194	0					
ANR	793281	Identifier	sa		793194	0					
ANR	793282	Identifier	nLength		793194	1					
ANR	793283	SizeofExpression	sizeof ( SECURITY_ATTRIBUTES )		793194	1					
ANR	793284	Sizeof	sizeof		793194	0					
ANR	793285	SizeofOperand	SECURITY_ATTRIBUTES		793194	1					
ANR	793286	ExpressionStatement	sa . bInheritHandle = TRUE	2113:1:55213:55237	793194	10	True				
ANR	793287	AssignmentExpression	sa . bInheritHandle = TRUE		793194	0		=			
ANR	793288	MemberAccess	sa . bInheritHandle		793194	0					
ANR	793289	Identifier	sa		793194	0					
ANR	793290	Identifier	bInheritHandle		793194	1					
ANR	793291	Identifier	TRUE		793194	1					
ANR	793292	ExpressionStatement	sa . lpSecurityDescriptor = NULL	2114:1:55240:55270	793194	11	True				
ANR	793293	AssignmentExpression	sa . lpSecurityDescriptor = NULL		793194	0		=			
ANR	793294	MemberAccess	sa . lpSecurityDescriptor		793194	0					
ANR	793295	Identifier	sa		793194	0					
ANR	793296	Identifier	lpSecurityDescriptor		793194	1					
ANR	793297	Identifier	NULL		793194	1					
ANR	793298	IfStatement	"if ( ! CreatePipe ( & pipe [ 0 ] , & pipe [ 1 ] , & sa , 0 ) )"		793194	12					
ANR	793299	Condition	"! CreatePipe ( & pipe [ 0 ] , & pipe [ 1 ] , & sa , 0 )"	2115:5:55277:55316	793194	0	True				
ANR	793300	UnaryOperationExpression	"! CreatePipe ( & pipe [ 0 ] , & pipe [ 1 ] , & sa , 0 )"		793194	0					
ANR	793301	UnaryOperator	!		793194	0					
ANR	793302	CallExpression	"CreatePipe ( & pipe [ 0 ] , & pipe [ 1 ] , & sa , 0 )"		793194	1					
ANR	793303	Callee	CreatePipe		793194	0					
ANR	793304	Identifier	CreatePipe		793194	0					
ANR	793305	ArgumentList	& pipe [ 0 ]		793194	1					
ANR	793306	Argument	& pipe [ 0 ]		793194	0					
ANR	793307	UnaryOperationExpression	& pipe [ 0 ]		793194	0					
ANR	793308	UnaryOperator	&		793194	0					
ANR	793309	ArrayIndexing	pipe [ 0 ]		793194	1					
ANR	793310	Identifier	pipe		793194	0					
ANR	793311	PrimaryExpression	0		793194	1					
ANR	793312	Argument	& pipe [ 1 ]		793194	1					
ANR	793313	UnaryOperationExpression	& pipe [ 1 ]		793194	0					
ANR	793314	UnaryOperator	&		793194	0					
ANR	793315	ArrayIndexing	pipe [ 1 ]		793194	1					
ANR	793316	Identifier	pipe		793194	0					
ANR	793317	PrimaryExpression	1		793194	1					
ANR	793318	Argument	& sa		793194	2					
ANR	793319	UnaryOperationExpression	& sa		793194	0					
ANR	793320	UnaryOperator	&		793194	0					
ANR	793321	Identifier	sa		793194	1					
ANR	793322	Argument	0		793194	3					
ANR	793323	PrimaryExpression	0		793194	0					
ANR	793324	CompoundStatement		15:47:423:423	793194	1					
ANR	793325	ExpressionStatement	"r_sys_perror ( ""r_w32_cmd_pipe/CreatePipe"" )"	2116:2:55323:55365	793194	0	True				
ANR	793326	CallExpression	"r_sys_perror ( ""r_w32_cmd_pipe/CreatePipe"" )"		793194	0					
ANR	793327	Callee	r_sys_perror		793194	0					
ANR	793328	Identifier	r_sys_perror		793194	0					
ANR	793329	ArgumentList	"""r_w32_cmd_pipe/CreatePipe"""		793194	1					
ANR	793330	Argument	"""r_w32_cmd_pipe/CreatePipe"""		793194	0					
ANR	793331	PrimaryExpression	"""r_w32_cmd_pipe/CreatePipe"""		793194	0					
ANR	793332	GotoStatement	goto err_r_w32_cmd_pipe ;	2117:2:55369:55392	793194	1	True				
ANR	793333	Identifier	err_r_w32_cmd_pipe		793194	0					
ANR	793334	IfStatement	"if ( ! SetHandleInformation ( pipe [ 1 ] , HANDLE_FLAG_INHERIT , 0 ) )"		793194	13					
ANR	793335	Condition	"! SetHandleInformation ( pipe [ 1 ] , HANDLE_FLAG_INHERIT , 0 )"	2119:5:55402:55456	793194	0	True				
ANR	793336	UnaryOperationExpression	"! SetHandleInformation ( pipe [ 1 ] , HANDLE_FLAG_INHERIT , 0 )"		793194	0					
ANR	793337	UnaryOperator	!		793194	0					
ANR	793338	CallExpression	"SetHandleInformation ( pipe [ 1 ] , HANDLE_FLAG_INHERIT , 0 )"		793194	1					
ANR	793339	Callee	SetHandleInformation		793194	0					
ANR	793340	Identifier	SetHandleInformation		793194	0					
ANR	793341	ArgumentList	pipe [ 1 ]		793194	1					
ANR	793342	Argument	pipe [ 1 ]		793194	0					
ANR	793343	ArrayIndexing	pipe [ 1 ]		793194	0					
ANR	793344	Identifier	pipe		793194	0					
ANR	793345	PrimaryExpression	1		793194	1					
ANR	793346	Argument	HANDLE_FLAG_INHERIT		793194	1					
ANR	793347	Identifier	HANDLE_FLAG_INHERIT		793194	0					
ANR	793348	Argument	0		793194	2					
ANR	793349	PrimaryExpression	0		793194	0					
ANR	793350	CompoundStatement		19:62:563:563	793194	1					
ANR	793351	ExpressionStatement	"r_sys_perror ( ""r_w32_cmd_pipe/SetHandleInformation"" )"	2120:2:55463:55515	793194	0	True				
ANR	793352	CallExpression	"r_sys_perror ( ""r_w32_cmd_pipe/SetHandleInformation"" )"		793194	0					
ANR	793353	Callee	r_sys_perror		793194	0					
ANR	793354	Identifier	r_sys_perror		793194	0					
ANR	793355	ArgumentList	"""r_w32_cmd_pipe/SetHandleInformation"""		793194	1					
ANR	793356	Argument	"""r_w32_cmd_pipe/SetHandleInformation"""		793194	0					
ANR	793357	PrimaryExpression	"""r_w32_cmd_pipe/SetHandleInformation"""		793194	0					
ANR	793358	GotoStatement	goto err_r_w32_cmd_pipe ;	2121:2:55519:55542	793194	1	True				
ANR	793359	Identifier	err_r_w32_cmd_pipe		793194	0					
ANR	793360	ExpressionStatement	si . hStdError = GetStdHandle ( STD_ERROR_HANDLE )	2123:1:55548:55594	793194	14	True				
ANR	793361	AssignmentExpression	si . hStdError = GetStdHandle ( STD_ERROR_HANDLE )		793194	0		=			
ANR	793362	MemberAccess	si . hStdError		793194	0					
ANR	793363	Identifier	si		793194	0					
ANR	793364	Identifier	hStdError		793194	1					
ANR	793365	CallExpression	GetStdHandle ( STD_ERROR_HANDLE )		793194	1					
ANR	793366	Callee	GetStdHandle		793194	0					
ANR	793367	Identifier	GetStdHandle		793194	0					
ANR	793368	ArgumentList	STD_ERROR_HANDLE		793194	1					
ANR	793369	Argument	STD_ERROR_HANDLE		793194	0					
ANR	793370	Identifier	STD_ERROR_HANDLE		793194	0					
ANR	793371	ExpressionStatement	si . hStdOutput = GetStdHandle ( STD_OUTPUT_HANDLE )	2124:1:55597:55645	793194	15	True				
ANR	793372	AssignmentExpression	si . hStdOutput = GetStdHandle ( STD_OUTPUT_HANDLE )		793194	0		=			
ANR	793373	MemberAccess	si . hStdOutput		793194	0					
ANR	793374	Identifier	si		793194	0					
ANR	793375	Identifier	hStdOutput		793194	1					
ANR	793376	CallExpression	GetStdHandle ( STD_OUTPUT_HANDLE )		793194	1					
ANR	793377	Callee	GetStdHandle		793194	0					
ANR	793378	Identifier	GetStdHandle		793194	0					
ANR	793379	ArgumentList	STD_OUTPUT_HANDLE		793194	1					
ANR	793380	Argument	STD_OUTPUT_HANDLE		793194	0					
ANR	793381	Identifier	STD_OUTPUT_HANDLE		793194	0					
ANR	793382	ExpressionStatement	si . hStdInput = pipe [ 0 ]	2125:1:55648:55670	793194	16	True				
ANR	793383	AssignmentExpression	si . hStdInput = pipe [ 0 ]		793194	0		=			
ANR	793384	MemberAccess	si . hStdInput		793194	0					
ANR	793385	Identifier	si		793194	0					
ANR	793386	Identifier	hStdInput		793194	1					
ANR	793387	ArrayIndexing	pipe [ 0 ]		793194	1					
ANR	793388	Identifier	pipe		793194	0					
ANR	793389	PrimaryExpression	0		793194	1					
ANR	793390	ExpressionStatement	si . dwFlags |= STARTF_USESTDHANDLES	2126:1:55673:55707	793194	17	True				
ANR	793391	AssignmentExpression	si . dwFlags |= STARTF_USESTDHANDLES		793194	0		|=			
ANR	793392	MemberAccess	si . dwFlags		793194	0					
ANR	793393	Identifier	si		793194	0					
ANR	793394	Identifier	dwFlags		793194	1					
ANR	793395	Identifier	STARTF_USESTDHANDLES		793194	1					
ANR	793396	ExpressionStatement	si . cb = sizeof ( si )	2127:1:55710:55729	793194	18	True				
ANR	793397	AssignmentExpression	si . cb = sizeof ( si )		793194	0		=			
ANR	793398	MemberAccess	si . cb		793194	0					
ANR	793399	Identifier	si		793194	0					
ANR	793400	Identifier	cb		793194	1					
ANR	793401	SizeofExpression	sizeof ( si )		793194	1					
ANR	793402	Sizeof	sizeof		793194	0					
ANR	793403	SizeofOperand	si		793194	1					
ANR	793404	ExpressionStatement	_shell_cmd = shell_cmd	2128:1:55732:55754	793194	19	True				
ANR	793405	AssignmentExpression	_shell_cmd = shell_cmd		793194	0		=			
ANR	793406	Identifier	_shell_cmd		793194	0					
ANR	793407	Identifier	shell_cmd		793194	1					
ANR	793408	WhileStatement	while ( * _shell_cmd && isspace ( ( ut8 ) * _shell_cmd ) )		793194	20					
ANR	793409	Condition	* _shell_cmd && isspace ( ( ut8 ) * _shell_cmd )	2129:8:55764:55804	793194	0	True				
ANR	793410	AndExpression	* _shell_cmd && isspace ( ( ut8 ) * _shell_cmd )		793194	0		&&			
ANR	793411	UnaryOperationExpression	* _shell_cmd		793194	0					
ANR	793412	UnaryOperator	*		793194	0					
ANR	793413	Identifier	_shell_cmd		793194	1					
ANR	793414	CallExpression	isspace ( ( ut8 ) * _shell_cmd )		793194	1					
ANR	793415	Callee	isspace		793194	0					
ANR	793416	Identifier	isspace		793194	0					
ANR	793417	ArgumentList	( ut8 ) * _shell_cmd		793194	1					
ANR	793418	Argument	( ut8 ) * _shell_cmd		793194	0					
ANR	793419	CastExpression	( ut8 ) * _shell_cmd		793194	0					
ANR	793420	CastTarget	ut8		793194	0					
ANR	793421	UnaryOperationExpression	* _shell_cmd		793194	1					
ANR	793422	UnaryOperator	*		793194	0					
ANR	793423	Identifier	_shell_cmd		793194	1					
ANR	793424	CompoundStatement		29:51:911:911	793194	1					
ANR	793425	ExpressionStatement	_shell_cmd ++	2130:2:55811:55823	793194	0	True				
ANR	793426	PostIncDecOperationExpression	_shell_cmd ++		793194	0					
ANR	793427	Identifier	_shell_cmd		793194	0					
ANR	793428	IncDec	++		793194	1					
ANR	793429	IdentifierDeclStatement	"char * tmp = r_str_newf ( ""/Q /c \\""%s\\"""" , shell_cmd ) ;"	2132:1:55829:55879	793194	21	True				
ANR	793430	IdentifierDecl	"* tmp = r_str_newf ( ""/Q /c \\""%s\\"""" , shell_cmd )"		793194	0					
ANR	793431	IdentifierDeclType	char *		793194	0					
ANR	793432	Identifier	tmp		793194	1					
ANR	793433	AssignmentExpression	"* tmp = r_str_newf ( ""/Q /c \\""%s\\"""" , shell_cmd )"		793194	2		=			
ANR	793434	Identifier	tmp		793194	0					
ANR	793435	CallExpression	"r_str_newf ( ""/Q /c \\""%s\\"""" , shell_cmd )"		793194	1					
ANR	793436	Callee	r_str_newf		793194	0					
ANR	793437	Identifier	r_str_newf		793194	0					
ANR	793438	ArgumentList	"""/Q /c \\""%s\\"""""		793194	1					
ANR	793439	Argument	"""/Q /c \\""%s\\"""""		793194	0					
ANR	793440	PrimaryExpression	"""/Q /c \\""%s\\"""""		793194	0					
ANR	793441	Argument	shell_cmd		793194	1					
ANR	793442	Identifier	shell_cmd		793194	0					
ANR	793443	IfStatement	if ( ! tmp )		793194	22					
ANR	793444	Condition	! tmp	2133:5:55886:55889	793194	0	True				
ANR	793445	UnaryOperationExpression	! tmp		793194	0					
ANR	793446	UnaryOperator	!		793194	0					
ANR	793447	Identifier	tmp		793194	1					
ANR	793448	CompoundStatement		33:11:996:996	793194	1					
ANR	793449	GotoStatement	goto err_r_w32_cmd_pipe ;	2134:2:55896:55919	793194	0	True				
ANR	793450	Identifier	err_r_w32_cmd_pipe		793194	0					
ANR	793451	ExpressionStatement	_shell_cmd = tmp	2136:1:55925:55941	793194	23	True				
ANR	793452	AssignmentExpression	_shell_cmd = tmp		793194	0		=			
ANR	793453	Identifier	_shell_cmd		793194	0					
ANR	793454	Identifier	tmp		793194	1					
ANR	793455	ExpressionStatement	_shell_cmd_ = r_sys_conv_utf8_to_win ( _shell_cmd )	2137:1:55944:55993	793194	24	True				
ANR	793456	AssignmentExpression	_shell_cmd_ = r_sys_conv_utf8_to_win ( _shell_cmd )		793194	0		=			
ANR	793457	Identifier	_shell_cmd_		793194	0					
ANR	793458	CallExpression	r_sys_conv_utf8_to_win ( _shell_cmd )		793194	1					
ANR	793459	Callee	r_sys_conv_utf8_to_win		793194	0					
ANR	793460	Identifier	r_sys_conv_utf8_to_win		793194	0					
ANR	793461	ArgumentList	_shell_cmd		793194	1					
ANR	793462	Argument	_shell_cmd		793194	0					
ANR	793463	Identifier	_shell_cmd		793194	0					
ANR	793464	ExpressionStatement	free ( tmp )	2138:1:55996:56006	793194	25	True				
ANR	793465	CallExpression	free ( tmp )		793194	0					
ANR	793466	Callee	free		793194	0					
ANR	793467	Identifier	free		793194	0					
ANR	793468	ArgumentList	tmp		793194	1					
ANR	793469	Argument	tmp		793194	0					
ANR	793470	Identifier	tmp		793194	0					
ANR	793471	IfStatement	if ( ! _shell_cmd_ )		793194	26					
ANR	793472	Condition	! _shell_cmd_	2139:5:56013:56024	793194	0	True				
ANR	793473	UnaryOperationExpression	! _shell_cmd_		793194	0					
ANR	793474	UnaryOperator	!		793194	0					
ANR	793475	Identifier	_shell_cmd_		793194	1					
ANR	793476	CompoundStatement		39:19:1131:1131	793194	1					
ANR	793477	GotoStatement	goto err_r_w32_cmd_pipe ;	2140:2:56031:56054	793194	0	True				
ANR	793478	Identifier	err_r_w32_cmd_pipe		793194	0					
ANR	793479	IdentifierDeclStatement	"TCHAR * systemdir = calloc ( MAX_PATH , sizeof ( TCHAR ) ) ;"	2142:1:56060:56112	793194	27	True				
ANR	793480	IdentifierDecl	"* systemdir = calloc ( MAX_PATH , sizeof ( TCHAR ) )"		793194	0					
ANR	793481	IdentifierDeclType	TCHAR *		793194	0					
ANR	793482	Identifier	systemdir		793194	1					
ANR	793483	AssignmentExpression	"* systemdir = calloc ( MAX_PATH , sizeof ( TCHAR ) )"		793194	2		=			
ANR	793484	Identifier	systemdir		793194	0					
ANR	793485	CallExpression	"calloc ( MAX_PATH , sizeof ( TCHAR ) )"		793194	1					
ANR	793486	Callee	calloc		793194	0					
ANR	793487	Identifier	calloc		793194	0					
ANR	793488	ArgumentList	MAX_PATH		793194	1					
ANR	793489	Argument	MAX_PATH		793194	0					
ANR	793490	Identifier	MAX_PATH		793194	0					
ANR	793491	Argument	sizeof ( TCHAR )		793194	1					
ANR	793492	SizeofExpression	sizeof ( TCHAR )		793194	0					
ANR	793493	Sizeof	sizeof		793194	0					
ANR	793494	SizeofOperand	TCHAR		793194	1					
ANR	793495	IfStatement	if ( ! systemdir )		793194	28					
ANR	793496	Condition	! systemdir	2143:5:56119:56128	793194	0	True				
ANR	793497	UnaryOperationExpression	! systemdir		793194	0					
ANR	793498	UnaryOperator	!		793194	0					
ANR	793499	Identifier	systemdir		793194	1					
ANR	793500	CompoundStatement		43:17:1235:1235	793194	1					
ANR	793501	GotoStatement	goto err_r_w32_cmd_pipe ;	2144:2:56135:56158	793194	0	True				
ANR	793502	Identifier	err_r_w32_cmd_pipe		793194	0					
ANR	793503	IdentifierDeclStatement	"int ret = GetSystemDirectory ( systemdir , MAX_PATH ) ;"	2146:1:56164:56214	793194	29	True				
ANR	793504	IdentifierDecl	"ret = GetSystemDirectory ( systemdir , MAX_PATH )"		793194	0					
ANR	793505	IdentifierDeclType	int		793194	0					
ANR	793506	Identifier	ret		793194	1					
ANR	793507	AssignmentExpression	"ret = GetSystemDirectory ( systemdir , MAX_PATH )"		793194	2		=			
ANR	793508	Identifier	ret		793194	0					
ANR	793509	CallExpression	"GetSystemDirectory ( systemdir , MAX_PATH )"		793194	1					
ANR	793510	Callee	GetSystemDirectory		793194	0					
ANR	793511	Identifier	GetSystemDirectory		793194	0					
ANR	793512	ArgumentList	systemdir		793194	1					
ANR	793513	Argument	systemdir		793194	0					
ANR	793514	Identifier	systemdir		793194	0					
ANR	793515	Argument	MAX_PATH		793194	1					
ANR	793516	Identifier	MAX_PATH		793194	0					
ANR	793517	IfStatement	if ( ! ret )		793194	30					
ANR	793518	Condition	! ret	2147:5:56221:56224	793194	0	True				
ANR	793519	UnaryOperationExpression	! ret		793194	0					
ANR	793520	UnaryOperator	!		793194	0					
ANR	793521	Identifier	ret		793194	1					
ANR	793522	CompoundStatement		47:11:1331:1331	793194	1					
ANR	793523	ExpressionStatement	"r_sys_perror ( ""r_w32_cmd_pipe/systemdir"" )"	2148:2:56231:56272	793194	0	True				
ANR	793524	CallExpression	"r_sys_perror ( ""r_w32_cmd_pipe/systemdir"" )"		793194	0					
ANR	793525	Callee	r_sys_perror		793194	0					
ANR	793526	Identifier	r_sys_perror		793194	0					
ANR	793527	ArgumentList	"""r_w32_cmd_pipe/systemdir"""		793194	1					
ANR	793528	Argument	"""r_w32_cmd_pipe/systemdir"""		793194	0					
ANR	793529	PrimaryExpression	"""r_w32_cmd_pipe/systemdir"""		793194	0					
ANR	793530	GotoStatement	goto err_r_w32_cmd_pipe ;	2149:2:56276:56299	793194	1	True				
ANR	793531	Identifier	err_r_w32_cmd_pipe		793194	0					
ANR	793532	ExpressionStatement	"_tcscat_s ( systemdir , MAX_PATH , TEXT ( ""\\\\cmd.exe"" ) )"	2151:1:56305:56355	793194	31	True				
ANR	793533	CallExpression	"_tcscat_s ( systemdir , MAX_PATH , TEXT ( ""\\\\cmd.exe"" ) )"		793194	0					
ANR	793534	Callee	_tcscat_s		793194	0					
ANR	793535	Identifier	_tcscat_s		793194	0					
ANR	793536	ArgumentList	systemdir		793194	1					
ANR	793537	Argument	systemdir		793194	0					
ANR	793538	Identifier	systemdir		793194	0					
ANR	793539	Argument	MAX_PATH		793194	1					
ANR	793540	Identifier	MAX_PATH		793194	0					
ANR	793541	Argument	"TEXT ( ""\\\\cmd.exe"" )"		793194	2					
ANR	793542	CallExpression	"TEXT ( ""\\\\cmd.exe"" )"		793194	0					
ANR	793543	Callee	TEXT		793194	0					
ANR	793544	Identifier	TEXT		793194	0					
ANR	793545	ArgumentList	"""\\\\cmd.exe"""		793194	1					
ANR	793546	Argument	"""\\\\cmd.exe"""		793194	0					
ANR	793547	PrimaryExpression	"""\\\\cmd.exe"""		793194	0					
ANR	793548	IfStatement	"if ( ! CreateProcess ( systemdir , _shell_cmd_ , NULL , NULL , TRUE , 0 , NULL , NULL , & si , & pi ) )"		793194	32					
ANR	793549	Condition	"! CreateProcess ( systemdir , _shell_cmd_ , NULL , NULL , TRUE , 0 , NULL , NULL , & si , & pi )"	2153:5:56387:56468	793194	0	True				
ANR	793550	UnaryOperationExpression	"! CreateProcess ( systemdir , _shell_cmd_ , NULL , NULL , TRUE , 0 , NULL , NULL , & si , & pi )"		793194	0					
ANR	793551	UnaryOperator	!		793194	0					
ANR	793552	CallExpression	"CreateProcess ( systemdir , _shell_cmd_ , NULL , NULL , TRUE , 0 , NULL , NULL , & si , & pi )"		793194	1					
ANR	793553	Callee	CreateProcess		793194	0					
ANR	793554	Identifier	CreateProcess		793194	0					
ANR	793555	ArgumentList	systemdir		793194	1					
ANR	793556	Argument	systemdir		793194	0					
ANR	793557	Identifier	systemdir		793194	0					
ANR	793558	Argument	_shell_cmd_		793194	1					
ANR	793559	Identifier	_shell_cmd_		793194	0					
ANR	793560	Argument	NULL		793194	2					
ANR	793561	Identifier	NULL		793194	0					
ANR	793562	Argument	NULL		793194	3					
ANR	793563	Identifier	NULL		793194	0					
ANR	793564	Argument	TRUE		793194	4					
ANR	793565	Identifier	TRUE		793194	0					
ANR	793566	Argument	0		793194	5					
ANR	793567	PrimaryExpression	0		793194	0					
ANR	793568	Argument	NULL		793194	6					
ANR	793569	Identifier	NULL		793194	0					
ANR	793570	Argument	NULL		793194	7					
ANR	793571	Identifier	NULL		793194	0					
ANR	793572	Argument	& si		793194	8					
ANR	793573	UnaryOperationExpression	& si		793194	0					
ANR	793574	UnaryOperator	&		793194	0					
ANR	793575	Identifier	si		793194	1					
ANR	793576	Argument	& pi		793194	9					
ANR	793577	UnaryOperationExpression	& pi		793194	0					
ANR	793578	UnaryOperator	&		793194	0					
ANR	793579	Identifier	pi		793194	1					
ANR	793580	CompoundStatement		53:89:1575:1575	793194	1					
ANR	793581	ExpressionStatement	"r_sys_perror ( ""r_w32_cmd_pipe/CreateProcess"" )"	2154:2:56475:56520	793194	0	True				
ANR	793582	CallExpression	"r_sys_perror ( ""r_w32_cmd_pipe/CreateProcess"" )"		793194	0					
ANR	793583	Callee	r_sys_perror		793194	0					
ANR	793584	Identifier	r_sys_perror		793194	0					
ANR	793585	ArgumentList	"""r_w32_cmd_pipe/CreateProcess"""		793194	1					
ANR	793586	Argument	"""r_w32_cmd_pipe/CreateProcess"""		793194	0					
ANR	793587	PrimaryExpression	"""r_w32_cmd_pipe/CreateProcess"""		793194	0					
ANR	793588	GotoStatement	goto err_r_w32_cmd_pipe ;	2155:2:56524:56547	793194	1	True				
ANR	793589	Identifier	err_r_w32_cmd_pipe		793194	0					
ANR	793590	ExpressionStatement	"fd_out = _open_osfhandle ( ( intptr_t ) pipe [ 1 ] , _O_WRONLY | _O_TEXT )"	2157:1:56553:56616	793194	33	True				
ANR	793591	AssignmentExpression	"fd_out = _open_osfhandle ( ( intptr_t ) pipe [ 1 ] , _O_WRONLY | _O_TEXT )"		793194	0		=			
ANR	793592	Identifier	fd_out		793194	0					
ANR	793593	CallExpression	"_open_osfhandle ( ( intptr_t ) pipe [ 1 ] , _O_WRONLY | _O_TEXT )"		793194	1					
ANR	793594	Callee	_open_osfhandle		793194	0					
ANR	793595	Identifier	_open_osfhandle		793194	0					
ANR	793596	ArgumentList	( intptr_t ) pipe [ 1 ]		793194	1					
ANR	793597	Argument	( intptr_t ) pipe [ 1 ]		793194	0					
ANR	793598	CastExpression	( intptr_t ) pipe [ 1 ]		793194	0					
ANR	793599	CastTarget	intptr_t		793194	0					
ANR	793600	ArrayIndexing	pipe [ 1 ]		793194	1					
ANR	793601	Identifier	pipe		793194	0					
ANR	793602	PrimaryExpression	1		793194	1					
ANR	793603	Argument	_O_WRONLY | _O_TEXT		793194	1					
ANR	793604	InclusiveOrExpression	_O_WRONLY | _O_TEXT		793194	0		|			
ANR	793605	Identifier	_O_WRONLY		793194	0					
ANR	793606	Identifier	_O_TEXT		793194	1					
ANR	793607	IfStatement	if ( fd_out == - 1 )		793194	34					
ANR	793608	Condition	fd_out == - 1	2158:5:56623:56634	793194	0	True				
ANR	793609	EqualityExpression	fd_out == - 1		793194	0		==			
ANR	793610	Identifier	fd_out		793194	0					
ANR	793611	UnaryOperationExpression	- 1		793194	1					
ANR	793612	UnaryOperator	-		793194	0					
ANR	793613	PrimaryExpression	1		793194	1					
ANR	793614	CompoundStatement		58:19:1741:1741	793194	1					
ANR	793615	ExpressionStatement	"perror ( ""_open_osfhandle"" )"	2159:2:56641:56667	793194	0	True				
ANR	793616	CallExpression	"perror ( ""_open_osfhandle"" )"		793194	0					
ANR	793617	Callee	perror		793194	0					
ANR	793618	Identifier	perror		793194	0					
ANR	793619	ArgumentList	"""_open_osfhandle"""		793194	1					
ANR	793620	Argument	"""_open_osfhandle"""		793194	0					
ANR	793621	PrimaryExpression	"""_open_osfhandle"""		793194	0					
ANR	793622	GotoStatement	goto err_r_w32_cmd_pipe ;	2160:2:56671:56694	793194	1	True				
ANR	793623	Identifier	err_r_w32_cmd_pipe		793194	0					
ANR	793624	ExpressionStatement	cons_out = dup ( 1 )	2162:1:56700:56718	793194	35	True				
ANR	793625	AssignmentExpression	cons_out = dup ( 1 )		793194	0		=			
ANR	793626	Identifier	cons_out		793194	0					
ANR	793627	CallExpression	dup ( 1 )		793194	1					
ANR	793628	Callee	dup		793194	0					
ANR	793629	Identifier	dup		793194	0					
ANR	793630	ArgumentList	1		793194	1					
ANR	793631	Argument	1		793194	0					
ANR	793632	PrimaryExpression	1		793194	0					
ANR	793633	ExpressionStatement	"dup2 ( fd_out , 1 )"	2163:1:56721:56737	793194	36	True				
ANR	793634	CallExpression	"dup2 ( fd_out , 1 )"		793194	0					
ANR	793635	Callee	dup2		793194	0					
ANR	793636	Identifier	dup2		793194	0					
ANR	793637	ArgumentList	fd_out		793194	1					
ANR	793638	Argument	fd_out		793194	0					
ANR	793639	Identifier	fd_out		793194	0					
ANR	793640	Argument	1		793194	1					
ANR	793641	PrimaryExpression	1		793194	0					
ANR	793642	ExpressionStatement	"r_core_cmd ( core , radare_cmd , 0 )"	2165:1:56764:56796	793194	37	True				
ANR	793643	CallExpression	"r_core_cmd ( core , radare_cmd , 0 )"		793194	0					
ANR	793644	Callee	r_core_cmd		793194	0					
ANR	793645	Identifier	r_core_cmd		793194	0					
ANR	793646	ArgumentList	core		793194	1					
ANR	793647	Argument	core		793194	0					
ANR	793648	Identifier	core		793194	0					
ANR	793649	Argument	radare_cmd		793194	1					
ANR	793650	Identifier	radare_cmd		793194	0					
ANR	793651	Argument	0		793194	2					
ANR	793652	PrimaryExpression	0		793194	0					
ANR	793653	ExpressionStatement	r_cons_flush ( )	2166:1:56799:56814	793194	38	True				
ANR	793654	CallExpression	r_cons_flush ( )		793194	0					
ANR	793655	Callee	r_cons_flush		793194	0					
ANR	793656	Identifier	r_cons_flush		793194	0					
ANR	793657	ArgumentList			793194	1					
ANR	793658	ExpressionStatement	close ( 1 )	2167:1:56817:56826	793194	39	True				
ANR	793659	CallExpression	close ( 1 )		793194	0					
ANR	793660	Callee	close		793194	0					
ANR	793661	Identifier	close		793194	0					
ANR	793662	ArgumentList	1		793194	1					
ANR	793663	Argument	1		793194	0					
ANR	793664	PrimaryExpression	1		793194	0					
ANR	793665	ExpressionStatement	close ( fd_out )	2168:1:56829:56843	793194	40	True				
ANR	793666	CallExpression	close ( fd_out )		793194	0					
ANR	793667	Callee	close		793194	0					
ANR	793668	Identifier	close		793194	0					
ANR	793669	ArgumentList	fd_out		793194	1					
ANR	793670	Argument	fd_out		793194	0					
ANR	793671	Identifier	fd_out		793194	0					
ANR	793672	ExpressionStatement	fd_out = - 1	2169:1:56846:56857	793194	41	True				
ANR	793673	AssignmentExpression	fd_out = - 1		793194	0		=			
ANR	793674	Identifier	fd_out		793194	0					
ANR	793675	UnaryOperationExpression	- 1		793194	1					
ANR	793676	UnaryOperator	-		793194	0					
ANR	793677	PrimaryExpression	1		793194	1					
ANR	793678	ExpressionStatement	"WaitForSingleObject ( pi . hProcess , INFINITE )"	2170:1:56860:56903	793194	42	True				
ANR	793679	CallExpression	"WaitForSingleObject ( pi . hProcess , INFINITE )"		793194	0					
ANR	793680	Callee	WaitForSingleObject		793194	0					
ANR	793681	Identifier	WaitForSingleObject		793194	0					
ANR	793682	ArgumentList	pi . hProcess		793194	1					
ANR	793683	Argument	pi . hProcess		793194	0					
ANR	793684	MemberAccess	pi . hProcess		793194	0					
ANR	793685	Identifier	pi		793194	0					
ANR	793686	Identifier	hProcess		793194	1					
ANR	793687	Argument	INFINITE		793194	1					
ANR	793688	Identifier	INFINITE		793194	0					
ANR	793689	Label	err_r_w32_cmd_pipe :	2171:0:56905:56923	793194	43	True				
ANR	793690	Identifier	err_r_w32_cmd_pipe		793194	0					
ANR	793691	IfStatement	if ( pi . hProcess )		793194	44					
ANR	793692	Condition	pi . hProcess	2172:5:56930:56940	793194	0	True				
ANR	793693	MemberAccess	pi . hProcess		793194	0					
ANR	793694	Identifier	pi		793194	0					
ANR	793695	Identifier	hProcess		793194	1					
ANR	793696	CompoundStatement		72:18:2047:2047	793194	1					
ANR	793697	ExpressionStatement	CloseHandle ( pi . hProcess )	2173:2:56947:56972	793194	0	True				
ANR	793698	CallExpression	CloseHandle ( pi . hProcess )		793194	0					
ANR	793699	Callee	CloseHandle		793194	0					
ANR	793700	Identifier	CloseHandle		793194	0					
ANR	793701	ArgumentList	pi . hProcess		793194	1					
ANR	793702	Argument	pi . hProcess		793194	0					
ANR	793703	MemberAccess	pi . hProcess		793194	0					
ANR	793704	Identifier	pi		793194	0					
ANR	793705	Identifier	hProcess		793194	1					
ANR	793706	IfStatement	if ( pi . hThread )		793194	45					
ANR	793707	Condition	pi . hThread	2175:5:56982:56991	793194	0	True				
ANR	793708	MemberAccess	pi . hThread		793194	0					
ANR	793709	Identifier	pi		793194	0					
ANR	793710	Identifier	hThread		793194	1					
ANR	793711	CompoundStatement		75:17:2098:2098	793194	1					
ANR	793712	ExpressionStatement	CloseHandle ( pi . hThread )	2176:2:56998:57022	793194	0	True				
ANR	793713	CallExpression	CloseHandle ( pi . hThread )		793194	0					
ANR	793714	Callee	CloseHandle		793194	0					
ANR	793715	Identifier	CloseHandle		793194	0					
ANR	793716	ArgumentList	pi . hThread		793194	1					
ANR	793717	Argument	pi . hThread		793194	0					
ANR	793718	MemberAccess	pi . hThread		793194	0					
ANR	793719	Identifier	pi		793194	0					
ANR	793720	Identifier	hThread		793194	1					
ANR	793721	IfStatement	if ( pipe [ 0 ] )		793194	46					
ANR	793722	Condition	pipe [ 0 ]	2178:5:57032:57038	793194	0	True				
ANR	793723	ArrayIndexing	pipe [ 0 ]		793194	0					
ANR	793724	Identifier	pipe		793194	0					
ANR	793725	PrimaryExpression	0		793194	1					
ANR	793726	CompoundStatement		78:14:2145:2145	793194	1					
ANR	793727	ExpressionStatement	CloseHandle ( pipe [ 0 ] )	2179:2:57045:57066	793194	0	True				
ANR	793728	CallExpression	CloseHandle ( pipe [ 0 ] )		793194	0					
ANR	793729	Callee	CloseHandle		793194	0					
ANR	793730	Identifier	CloseHandle		793194	0					
ANR	793731	ArgumentList	pipe [ 0 ]		793194	1					
ANR	793732	Argument	pipe [ 0 ]		793194	0					
ANR	793733	ArrayIndexing	pipe [ 0 ]		793194	0					
ANR	793734	Identifier	pipe		793194	0					
ANR	793735	PrimaryExpression	0		793194	1					
ANR	793736	IfStatement	if ( pipe [ 1 ] )		793194	47					
ANR	793737	Condition	pipe [ 1 ]	2181:5:57076:57082	793194	0	True				
ANR	793738	ArrayIndexing	pipe [ 1 ]		793194	0					
ANR	793739	Identifier	pipe		793194	0					
ANR	793740	PrimaryExpression	1		793194	1					
ANR	793741	CompoundStatement		81:14:2189:2189	793194	1					
ANR	793742	ExpressionStatement	CloseHandle ( pipe [ 1 ] )	2182:2:57089:57110	793194	0	True				
ANR	793743	CallExpression	CloseHandle ( pipe [ 1 ] )		793194	0					
ANR	793744	Callee	CloseHandle		793194	0					
ANR	793745	Identifier	CloseHandle		793194	0					
ANR	793746	ArgumentList	pipe [ 1 ]		793194	1					
ANR	793747	Argument	pipe [ 1 ]		793194	0					
ANR	793748	ArrayIndexing	pipe [ 1 ]		793194	0					
ANR	793749	Identifier	pipe		793194	0					
ANR	793750	PrimaryExpression	1		793194	1					
ANR	793751	IfStatement	if ( fd_out != - 1 )		793194	48					
ANR	793752	Condition	fd_out != - 1	2184:5:57120:57131	793194	0	True				
ANR	793753	EqualityExpression	fd_out != - 1		793194	0		!=			
ANR	793754	Identifier	fd_out		793194	0					
ANR	793755	UnaryOperationExpression	- 1		793194	1					
ANR	793756	UnaryOperator	-		793194	0					
ANR	793757	PrimaryExpression	1		793194	1					
ANR	793758	CompoundStatement		84:19:2238:2238	793194	1					
ANR	793759	ExpressionStatement	close ( fd_out )	2185:2:57138:57152	793194	0	True				
ANR	793760	CallExpression	close ( fd_out )		793194	0					
ANR	793761	Callee	close		793194	0					
ANR	793762	Identifier	close		793194	0					
ANR	793763	ArgumentList	fd_out		793194	1					
ANR	793764	Argument	fd_out		793194	0					
ANR	793765	Identifier	fd_out		793194	0					
ANR	793766	IfStatement	if ( cons_out != - 1 )		793194	49					
ANR	793767	Condition	cons_out != - 1	2187:5:57162:57175	793194	0	True				
ANR	793768	EqualityExpression	cons_out != - 1		793194	0		!=			
ANR	793769	Identifier	cons_out		793194	0					
ANR	793770	UnaryOperationExpression	- 1		793194	1					
ANR	793771	UnaryOperator	-		793194	0					
ANR	793772	PrimaryExpression	1		793194	1					
ANR	793773	CompoundStatement		87:21:2282:2282	793194	1					
ANR	793774	ExpressionStatement	"dup2 ( cons_out , 1 )"	2188:2:57182:57200	793194	0	True				
ANR	793775	CallExpression	"dup2 ( cons_out , 1 )"		793194	0					
ANR	793776	Callee	dup2		793194	0					
ANR	793777	Identifier	dup2		793194	0					
ANR	793778	ArgumentList	cons_out		793194	1					
ANR	793779	Argument	cons_out		793194	0					
ANR	793780	Identifier	cons_out		793194	0					
ANR	793781	Argument	1		793194	1					
ANR	793782	PrimaryExpression	1		793194	0					
ANR	793783	ExpressionStatement	close ( cons_out )	2189:2:57204:57220	793194	1	True				
ANR	793784	CallExpression	close ( cons_out )		793194	0					
ANR	793785	Callee	close		793194	0					
ANR	793786	Identifier	close		793194	0					
ANR	793787	ArgumentList	cons_out		793194	1					
ANR	793788	Argument	cons_out		793194	0					
ANR	793789	Identifier	cons_out		793194	0					
ANR	793790	ExpressionStatement	free ( systemdir )	2191:1:57226:57242	793194	50	True				
ANR	793791	CallExpression	free ( systemdir )		793194	0					
ANR	793792	Callee	free		793194	0					
ANR	793793	Identifier	free		793194	0					
ANR	793794	ArgumentList	systemdir		793194	1					
ANR	793795	Argument	systemdir		793194	0					
ANR	793796	Identifier	systemdir		793194	0					
ANR	793797	ExpressionStatement	free ( _shell_cmd_ )	2192:1:57245:57263	793194	51	True				
ANR	793798	CallExpression	free ( _shell_cmd_ )		793194	0					
ANR	793799	Callee	free		793194	0					
ANR	793800	Identifier	free		793194	0					
ANR	793801	ArgumentList	_shell_cmd_		793194	1					
ANR	793802	Argument	_shell_cmd_		793194	0					
ANR	793803	Identifier	_shell_cmd_		793194	0					
ANR	793804	ExpressionStatement	"SetConsoleMode ( GetStdHandle ( STD_OUTPUT_HANDLE ) , mode )"	2193:1:57266:57321	793194	52	True				
ANR	793805	CallExpression	"SetConsoleMode ( GetStdHandle ( STD_OUTPUT_HANDLE ) , mode )"		793194	0					
ANR	793806	Callee	SetConsoleMode		793194	0					
ANR	793807	Identifier	SetConsoleMode		793194	0					
ANR	793808	ArgumentList	GetStdHandle ( STD_OUTPUT_HANDLE )		793194	1					
ANR	793809	Argument	GetStdHandle ( STD_OUTPUT_HANDLE )		793194	0					
ANR	793810	CallExpression	GetStdHandle ( STD_OUTPUT_HANDLE )		793194	0					
ANR	793811	Callee	GetStdHandle		793194	0					
ANR	793812	Identifier	GetStdHandle		793194	0					
ANR	793813	ArgumentList	STD_OUTPUT_HANDLE		793194	1					
ANR	793814	Argument	STD_OUTPUT_HANDLE		793194	0					
ANR	793815	Identifier	STD_OUTPUT_HANDLE		793194	0					
ANR	793816	Argument	mode		793194	1					
ANR	793817	Identifier	mode		793194	0					
ANR	793818	ReturnType	static void		793194	1					
ANR	793819	Identifier	r_w32_cmd_pipe		793194	2					
ANR	793820	ParameterList	"RCore * core , char * radare_cmd , char * shell_cmd"		793194	3					
ANR	793821	Parameter	RCore * core	2101:27:54847:54857	793194	0	True				
ANR	793822	ParameterType	RCore *		793194	0					
ANR	793823	Identifier	core		793194	1					
ANR	793824	Parameter	char * radare_cmd	2101:40:54860:54875	793194	1	True				
ANR	793825	ParameterType	char *		793194	0					
ANR	793826	Identifier	radare_cmd		793194	1					
ANR	793827	Parameter	char * shell_cmd	2101:58:54878:54892	793194	2	True				
ANR	793828	ParameterType	char *		793194	0					
ANR	793829	Identifier	shell_cmd		793194	1					
ANR	793830	CFGEntryNode	ENTRY		793194		True				
ANR	793831	CFGExitNode	EXIT		793194		True				
ANR	793832	Symbol	& si		793194						
ANR	793833	Symbol	radare_cmd		793194						
ANR	793834	Symbol	_open_osfhandle		793194						
ANR	793835	Symbol	CreatePipe		793194						
ANR	793836	Symbol	TEXT		793194						
ANR	793837	Symbol	mode		793194						
ANR	793838	Symbol	* _shell_cmd		793194						
ANR	793839	Symbol	& mode		793194						
ANR	793840	Symbol	_shell_cmd		793194						
ANR	793841	Symbol	tmp		793194						
ANR	793842	Symbol	& sa		793194						
ANR	793843	Symbol	pipe		793194						
ANR	793844	Symbol	SetHandleInformation		793194						
ANR	793845	Symbol	_O_TEXT		793194						
ANR	793846	Symbol	GetSystemDirectory		793194						
ANR	793847	Symbol	ret		793194						
ANR	793848	Symbol	CreateProcess		793194						
ANR	793849	Symbol	& pi		793194						
ANR	793850	Symbol	NULL		793194						
ANR	793851	Symbol	STD_ERROR_HANDLE		793194						
ANR	793852	Symbol	_O_WRONLY		793194						
ANR	793853	Symbol	isspace		793194						
ANR	793854	Symbol	TRUE		793194						
ANR	793855	Symbol	core		793194						
ANR	793856	Symbol	systemdir		793194						
ANR	793857	Symbol	sa . bInheritHandle		793194						
ANR	793858	Symbol	HANDLE_FLAG_INHERIT		793194						
ANR	793859	Symbol	si . dwFlags		793194						
ANR	793860	Symbol	r_sys_conv_utf8_to_win		793194						
ANR	793861	Symbol	GetStdHandle		793194						
ANR	793862	Symbol	sa . nLength		793194						
ANR	793863	Symbol	* pipe		793194						
ANR	793864	Symbol	pi . hThread		793194						
ANR	793865	Symbol	r_str_newf		793194						
ANR	793866	Symbol	calloc		793194						
ANR	793867	Symbol	sa		793194						
ANR	793868	Symbol	STARTF_USESTDHANDLES		793194						
ANR	793869	Symbol	si . hStdError		793194						
ANR	793870	Symbol	si		793194						
ANR	793871	Symbol	shell_cmd		793194						
ANR	793872	Symbol	cons_out		793194						
ANR	793873	Symbol	STD_OUTPUT_HANDLE		793194						
ANR	793874	Symbol	_shell_cmd_		793194						
ANR	793875	Symbol	si . hStdOutput		793194						
ANR	793876	Symbol	pi . hProcess		793194						
ANR	793877	Symbol	si . cb		793194						
ANR	793878	Symbol	si . hStdInput		793194						
ANR	793879	Symbol	INFINITE		793194						
ANR	793880	Symbol	fd_out		793194						
ANR	793881	Symbol	sa . lpSecurityDescriptor		793194						
ANR	793882	Symbol	pi		793194						
ANR	793883	Symbol	MAX_PATH		793194						
ANR	793884	Symbol	dup		793194						
ANR	793885	Function	r_core_cmd_pipe	2197:0:57333:59415							
ANR	793886	FunctionDef	"r_core_cmd_pipe (RCore * core , char * radare_cmd , char * shell_cmd)"		793885	0					
ANR	793887	CompoundStatement		2197:74:57407:59415	793885	0					
ANR	793888	IdentifierDeclStatement	"int stdout_fd , fds [ 2 ] ;"	2199:1:57423:57444	793885	0	True				
ANR	793889	IdentifierDecl	stdout_fd		793885	0					
ANR	793890	IdentifierDeclType	int		793885	0					
ANR	793891	Identifier	stdout_fd		793885	1					
ANR	793892	IdentifierDecl	fds [ 2 ]		793885	1					
ANR	793893	IdentifierDeclType	int [ 2 ]		793885	0					
ANR	793894	Identifier	fds		793885	1					
ANR	793895	PrimaryExpression	2		793885	2					
ANR	793896	IdentifierDeclStatement	int child ;	2200:1:57447:57456	793885	1	True				
ANR	793897	IdentifierDecl	child		793885	0					
ANR	793898	IdentifierDeclType	int		793885	0					
ANR	793899	Identifier	child		793885	1					
ANR	793900	IdentifierDeclStatement	"int si , olen , ret = - 1 , pipecolor = - 1 ;"	2202:1:57466:57504	793885	2	True				
ANR	793901	IdentifierDecl	si		793885	0					
ANR	793902	IdentifierDeclType	int		793885	0					
ANR	793903	Identifier	si		793885	1					
ANR	793904	IdentifierDecl	olen		793885	1					
ANR	793905	IdentifierDeclType	int		793885	0					
ANR	793906	Identifier	olen		793885	1					
ANR	793907	IdentifierDecl	ret = - 1		793885	2					
ANR	793908	IdentifierDeclType	int		793885	0					
ANR	793909	Identifier	ret		793885	1					
ANR	793910	AssignmentExpression	ret = - 1		793885	2		=			
ANR	793911	Identifier	ret		793885	0					
ANR	793912	UnaryOperationExpression	- 1		793885	1					
ANR	793913	UnaryOperator	-		793885	0					
ANR	793914	PrimaryExpression	1		793885	1					
ANR	793915	IdentifierDecl	pipecolor = - 1		793885	3					
ANR	793916	IdentifierDeclType	int		793885	0					
ANR	793917	Identifier	pipecolor		793885	1					
ANR	793918	AssignmentExpression	pipecolor = - 1		793885	2		=			
ANR	793919	Identifier	pipecolor		793885	0					
ANR	793920	UnaryOperationExpression	- 1		793885	1					
ANR	793921	UnaryOperator	-		793885	0					
ANR	793922	PrimaryExpression	1		793885	1					
ANR	793923	IdentifierDeclStatement	"char * str , * out = NULL ;"	2203:1:57507:57529	793885	3	True				
ANR	793924	IdentifierDecl	* str		793885	0					
ANR	793925	IdentifierDeclType	char *		793885	0					
ANR	793926	Identifier	str		793885	1					
ANR	793927	IdentifierDecl	* out = NULL		793885	1					
ANR	793928	IdentifierDeclType	char *		793885	0					
ANR	793929	Identifier	out		793885	1					
ANR	793930	AssignmentExpression	* out = NULL		793885	2		=			
ANR	793931	Identifier	NULL		793885	0					
ANR	793932	Identifier	NULL		793885	1					
ANR	793933	IfStatement	if ( r_sandbox_enable ( 0 ) )		793885	4					
ANR	793934	Condition	r_sandbox_enable ( 0 )	2205:5:57537:57556	793885	0	True				
ANR	793935	CallExpression	r_sandbox_enable ( 0 )		793885	0					
ANR	793936	Callee	r_sandbox_enable		793885	0					
ANR	793937	Identifier	r_sandbox_enable		793885	0					
ANR	793938	ArgumentList	0		793885	1					
ANR	793939	Argument	0		793885	0					
ANR	793940	PrimaryExpression	0		793885	0					
ANR	793941	CompoundStatement		9:27:151:151	793885	1					
ANR	793942	ExpressionStatement	"eprintf ( ""Pipes are not allowed in sandbox mode\\n"" )"	2206:2:57563:57614	793885	0	True				
ANR	793943	CallExpression	"eprintf ( ""Pipes are not allowed in sandbox mode\\n"" )"		793885	0					
ANR	793944	Callee	eprintf		793885	0					
ANR	793945	Identifier	eprintf		793885	0					
ANR	793946	ArgumentList	"""Pipes are not allowed in sandbox mode\\n"""		793885	1					
ANR	793947	Argument	"""Pipes are not allowed in sandbox mode\\n"""		793885	0					
ANR	793948	PrimaryExpression	"""Pipes are not allowed in sandbox mode\\n"""		793885	0					
ANR	793949	ReturnStatement	return - 1 ;	2207:2:57618:57627	793885	1	True				
ANR	793950	UnaryOperationExpression	- 1		793885	0					
ANR	793951	UnaryOperator	-		793885	0					
ANR	793952	PrimaryExpression	1		793885	1					
ANR	793953	ExpressionStatement	si = r_cons_is_interactive ( )	2209:1:57633:57662	793885	5	True				
ANR	793954	AssignmentExpression	si = r_cons_is_interactive ( )		793885	0		=			
ANR	793955	Identifier	si		793885	0					
ANR	793956	CallExpression	r_cons_is_interactive ( )		793885	1					
ANR	793957	Callee	r_cons_is_interactive		793885	0					
ANR	793958	Identifier	r_cons_is_interactive		793885	0					
ANR	793959	ArgumentList			793885	1					
ANR	793960	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.interactive"" , 0 )"	2210:1:57665:57716	793885	6	True				
ANR	793961	CallExpression	"r_config_set_i ( core -> config , ""scr.interactive"" , 0 )"		793885	0					
ANR	793962	Callee	r_config_set_i		793885	0					
ANR	793963	Identifier	r_config_set_i		793885	0					
ANR	793964	ArgumentList	core -> config		793885	1					
ANR	793965	Argument	core -> config		793885	0					
ANR	793966	PtrMemberAccess	core -> config		793885	0					
ANR	793967	Identifier	core		793885	0					
ANR	793968	Identifier	config		793885	1					
ANR	793969	Argument	"""scr.interactive"""		793885	1					
ANR	793970	PrimaryExpression	"""scr.interactive"""		793885	0					
ANR	793971	Argument	0		793885	2					
ANR	793972	PrimaryExpression	0		793885	0					
ANR	793973	IfStatement	"if ( ! r_config_get_i ( core -> config , ""scr.color.pipe"" ) )"		793885	7					
ANR	793974	Condition	"! r_config_get_i ( core -> config , ""scr.color.pipe"" )"	2211:5:57723:57770	793885	0	True				
ANR	793975	UnaryOperationExpression	"! r_config_get_i ( core -> config , ""scr.color.pipe"" )"		793885	0					
ANR	793976	UnaryOperator	!		793885	0					
ANR	793977	CallExpression	"r_config_get_i ( core -> config , ""scr.color.pipe"" )"		793885	1					
ANR	793978	Callee	r_config_get_i		793885	0					
ANR	793979	Identifier	r_config_get_i		793885	0					
ANR	793980	ArgumentList	core -> config		793885	1					
ANR	793981	Argument	core -> config		793885	0					
ANR	793982	PtrMemberAccess	core -> config		793885	0					
ANR	793983	Identifier	core		793885	0					
ANR	793984	Identifier	config		793885	1					
ANR	793985	Argument	"""scr.color.pipe"""		793885	1					
ANR	793986	PrimaryExpression	"""scr.color.pipe"""		793885	0					
ANR	793987	CompoundStatement		15:55:365:365	793885	1					
ANR	793988	ExpressionStatement	"pipecolor = r_config_get_i ( core -> config , ""scr.color"" )"	2212:2:57777:57831	793885	0	True				
ANR	793989	AssignmentExpression	"pipecolor = r_config_get_i ( core -> config , ""scr.color"" )"		793885	0		=			
ANR	793990	Identifier	pipecolor		793885	0					
ANR	793991	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		793885	1					
ANR	793992	Callee	r_config_get_i		793885	0					
ANR	793993	Identifier	r_config_get_i		793885	0					
ANR	793994	ArgumentList	core -> config		793885	1					
ANR	793995	Argument	core -> config		793885	0					
ANR	793996	PtrMemberAccess	core -> config		793885	0					
ANR	793997	Identifier	core		793885	0					
ANR	793998	Identifier	config		793885	1					
ANR	793999	Argument	"""scr.color"""		793885	1					
ANR	794000	PrimaryExpression	"""scr.color"""		793885	0					
ANR	794001	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"	2213:2:57835:57898	793885	1	True				
ANR	794002	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"		793885	0					
ANR	794003	Callee	r_config_set_i		793885	0					
ANR	794004	Identifier	r_config_set_i		793885	0					
ANR	794005	ArgumentList	core -> config		793885	1					
ANR	794006	Argument	core -> config		793885	0					
ANR	794007	PtrMemberAccess	core -> config		793885	0					
ANR	794008	Identifier	core		793885	0					
ANR	794009	Identifier	config		793885	1					
ANR	794010	Argument	"""scr.color"""		793885	1					
ANR	794011	PrimaryExpression	"""scr.color"""		793885	0					
ANR	794012	Argument	COLOR_MODE_DISABLED		793885	2					
ANR	794013	Identifier	COLOR_MODE_DISABLED		793885	0					
ANR	794014	IfStatement	if ( * shell_cmd == '!' )		793885	8					
ANR	794015	Condition	* shell_cmd == '!'	2215:5:57908:57922	793885	0	True				
ANR	794016	EqualityExpression	* shell_cmd == '!'		793885	0		==			
ANR	794017	UnaryOperationExpression	* shell_cmd		793885	0					
ANR	794018	UnaryOperator	*		793885	0					
ANR	794019	Identifier	shell_cmd		793885	1					
ANR	794020	PrimaryExpression	'!'		793885	1					
ANR	794021	CompoundStatement		19:22:517:517	793885	1					
ANR	794022	ExpressionStatement	"r_cons_grep_parsecmd ( shell_cmd , ""\\"""" )"	2216:2:57929:57967	793885	0	True				
ANR	794023	CallExpression	"r_cons_grep_parsecmd ( shell_cmd , ""\\"""" )"		793885	0					
ANR	794024	Callee	r_cons_grep_parsecmd		793885	0					
ANR	794025	Identifier	r_cons_grep_parsecmd		793885	0					
ANR	794026	ArgumentList	shell_cmd		793885	1					
ANR	794027	Argument	shell_cmd		793885	0					
ANR	794028	Identifier	shell_cmd		793885	0					
ANR	794029	Argument	"""\\"""""		793885	1					
ANR	794030	PrimaryExpression	"""\\"""""		793885	0					
ANR	794031	ExpressionStatement	olen = 0	2217:2:57971:57979	793885	1	True				
ANR	794032	AssignmentExpression	olen = 0		793885	0		=			
ANR	794033	Identifier	olen		793885	0					
ANR	794034	PrimaryExpression	0		793885	1					
ANR	794035	ExpressionStatement	out = NULL	2218:2:57983:57993	793885	2	True				
ANR	794036	AssignmentExpression	out = NULL		793885	0		=			
ANR	794037	Identifier	out		793885	0					
ANR	794038	Identifier	NULL		793885	1					
ANR	794039	ExpressionStatement	"str = r_core_cmd_str ( core , radare_cmd )"	2220:2:58022:58061	793885	3	True				
ANR	794040	AssignmentExpression	"str = r_core_cmd_str ( core , radare_cmd )"		793885	0		=			
ANR	794041	Identifier	str		793885	0					
ANR	794042	CallExpression	"r_core_cmd_str ( core , radare_cmd )"		793885	1					
ANR	794043	Callee	r_core_cmd_str		793885	0					
ANR	794044	Identifier	r_core_cmd_str		793885	0					
ANR	794045	ArgumentList	core		793885	1					
ANR	794046	Argument	core		793885	0					
ANR	794047	Identifier	core		793885	0					
ANR	794048	Argument	radare_cmd		793885	1					
ANR	794049	Identifier	radare_cmd		793885	0					
ANR	794050	ExpressionStatement	"r_sys_cmd_str_full ( shell_cmd + 1 , str , & out , & olen , NULL )"	2221:2:58065:58123	793885	4	True				
ANR	794051	CallExpression	"r_sys_cmd_str_full ( shell_cmd + 1 , str , & out , & olen , NULL )"		793885	0					
ANR	794052	Callee	r_sys_cmd_str_full		793885	0					
ANR	794053	Identifier	r_sys_cmd_str_full		793885	0					
ANR	794054	ArgumentList	shell_cmd + 1		793885	1					
ANR	794055	Argument	shell_cmd + 1		793885	0					
ANR	794056	AdditiveExpression	shell_cmd + 1		793885	0		+			
ANR	794057	Identifier	shell_cmd		793885	0					
ANR	794058	PrimaryExpression	1		793885	1					
ANR	794059	Argument	str		793885	1					
ANR	794060	Identifier	str		793885	0					
ANR	794061	Argument	& out		793885	2					
ANR	794062	UnaryOperationExpression	& out		793885	0					
ANR	794063	UnaryOperator	&		793885	0					
ANR	794064	Identifier	out		793885	1					
ANR	794065	Argument	& olen		793885	3					
ANR	794066	UnaryOperationExpression	& olen		793885	0					
ANR	794067	UnaryOperator	&		793885	0					
ANR	794068	Identifier	olen		793885	1					
ANR	794069	Argument	NULL		793885	4					
ANR	794070	Identifier	NULL		793885	0					
ANR	794071	ExpressionStatement	free ( str )	2222:2:58127:58137	793885	5	True				
ANR	794072	CallExpression	free ( str )		793885	0					
ANR	794073	Callee	free		793885	0					
ANR	794074	Identifier	free		793885	0					
ANR	794075	ArgumentList	str		793885	1					
ANR	794076	Argument	str		793885	0					
ANR	794077	Identifier	str		793885	0					
ANR	794078	ExpressionStatement	"r_cons_memcat ( out , olen )"	2223:2:58141:58166	793885	6	True				
ANR	794079	CallExpression	"r_cons_memcat ( out , olen )"		793885	0					
ANR	794080	Callee	r_cons_memcat		793885	0					
ANR	794081	Identifier	r_cons_memcat		793885	0					
ANR	794082	ArgumentList	out		793885	1					
ANR	794083	Argument	out		793885	0					
ANR	794084	Identifier	out		793885	0					
ANR	794085	Argument	olen		793885	1					
ANR	794086	Identifier	olen		793885	0					
ANR	794087	ExpressionStatement	free ( out )	2224:2:58170:58180	793885	7	True				
ANR	794088	CallExpression	free ( out )		793885	0					
ANR	794089	Callee	free		793885	0					
ANR	794090	Identifier	free		793885	0					
ANR	794091	ArgumentList	out		793885	1					
ANR	794092	Argument	out		793885	0					
ANR	794093	Identifier	out		793885	0					
ANR	794094	ExpressionStatement	ret = 0	2225:2:58184:58191	793885	8	True				
ANR	794095	AssignmentExpression	ret = 0		793885	0		=			
ANR	794096	Identifier	ret		793885	0					
ANR	794097	PrimaryExpression	0		793885	1					
ANR	794098	ExpressionStatement	radare_cmd = ( char * ) r_str_trim_head ( radare_cmd )	2228:1:58210:58258	793885	9	True				
ANR	794099	AssignmentExpression	radare_cmd = ( char * ) r_str_trim_head ( radare_cmd )		793885	0		=			
ANR	794100	Identifier	radare_cmd		793885	0					
ANR	794101	CastExpression	( char * ) r_str_trim_head ( radare_cmd )		793885	1					
ANR	794102	CastTarget	char *		793885	0					
ANR	794103	CallExpression	r_str_trim_head ( radare_cmd )		793885	1					
ANR	794104	Callee	r_str_trim_head		793885	0					
ANR	794105	Identifier	r_str_trim_head		793885	0					
ANR	794106	ArgumentList	radare_cmd		793885	1					
ANR	794107	Argument	radare_cmd		793885	0					
ANR	794108	Identifier	radare_cmd		793885	0					
ANR	794109	ExpressionStatement	shell_cmd = ( char * ) r_str_trim_head ( shell_cmd )	2229:1:58261:58307	793885	10	True				
ANR	794110	AssignmentExpression	shell_cmd = ( char * ) r_str_trim_head ( shell_cmd )		793885	0		=			
ANR	794111	Identifier	shell_cmd		793885	0					
ANR	794112	CastExpression	( char * ) r_str_trim_head ( shell_cmd )		793885	1					
ANR	794113	CastTarget	char *		793885	0					
ANR	794114	CallExpression	r_str_trim_head ( shell_cmd )		793885	1					
ANR	794115	Callee	r_str_trim_head		793885	0					
ANR	794116	Identifier	r_str_trim_head		793885	0					
ANR	794117	ArgumentList	shell_cmd		793885	1					
ANR	794118	Argument	shell_cmd		793885	0					
ANR	794119	Identifier	shell_cmd		793885	0					
ANR	794120	ExpressionStatement	"signal ( SIGPIPE , SIG_IGN )"	2231:1:58311:58336	793885	11	True				
ANR	794121	CallExpression	"signal ( SIGPIPE , SIG_IGN )"		793885	0					
ANR	794122	Callee	signal		793885	0					
ANR	794123	Identifier	signal		793885	0					
ANR	794124	ArgumentList	SIGPIPE		793885	1					
ANR	794125	Argument	SIGPIPE		793885	0					
ANR	794126	Identifier	SIGPIPE		793885	0					
ANR	794127	Argument	SIG_IGN		793885	1					
ANR	794128	Identifier	SIG_IGN		793885	0					
ANR	794129	ExpressionStatement	stdout_fd = dup ( 1 )	2232:1:58339:58358	793885	12	True				
ANR	794130	AssignmentExpression	stdout_fd = dup ( 1 )		793885	0		=			
ANR	794131	Identifier	stdout_fd		793885	0					
ANR	794132	CallExpression	dup ( 1 )		793885	1					
ANR	794133	Callee	dup		793885	0					
ANR	794134	Identifier	dup		793885	0					
ANR	794135	ArgumentList	1		793885	1					
ANR	794136	Argument	1		793885	0					
ANR	794137	PrimaryExpression	1		793885	0					
ANR	794138	IfStatement	if ( stdout_fd != - 1 )		793885	13					
ANR	794139	Condition	stdout_fd != - 1	2233:5:58365:58379	793885	0	True				
ANR	794140	EqualityExpression	stdout_fd != - 1		793885	0		!=			
ANR	794141	Identifier	stdout_fd		793885	0					
ANR	794142	UnaryOperationExpression	- 1		793885	1					
ANR	794143	UnaryOperator	-		793885	0					
ANR	794144	PrimaryExpression	1		793885	1					
ANR	794145	CompoundStatement		37:22:974:974	793885	1					
ANR	794146	IfStatement	if ( pipe ( fds ) == 0 )		793885	0					
ANR	794147	Condition	pipe ( fds ) == 0	2234:6:58390:58404	793885	0	True				
ANR	794148	EqualityExpression	pipe ( fds ) == 0		793885	0		==			
ANR	794149	CallExpression	pipe ( fds )		793885	0					
ANR	794150	Callee	pipe		793885	0					
ANR	794151	Identifier	pipe		793885	0					
ANR	794152	ArgumentList	fds		793885	1					
ANR	794153	Argument	fds		793885	0					
ANR	794154	Identifier	fds		793885	0					
ANR	794155	PrimaryExpression	0		793885	1					
ANR	794156	CompoundStatement		38:23:999:999	793885	1					
ANR	794157	ExpressionStatement	child = r_sys_fork ( )	2235:3:58412:58433	793885	0	True				
ANR	794158	AssignmentExpression	child = r_sys_fork ( )		793885	0		=			
ANR	794159	Identifier	child		793885	0					
ANR	794160	CallExpression	r_sys_fork ( )		793885	1					
ANR	794161	Callee	r_sys_fork		793885	0					
ANR	794162	Identifier	r_sys_fork		793885	0					
ANR	794163	ArgumentList			793885	1					
ANR	794164	IfStatement	if ( child == - 1 )		793885	1					
ANR	794165	Condition	child == - 1	2236:7:58442:58452	793885	0	True				
ANR	794166	EqualityExpression	child == - 1		793885	0		==			
ANR	794167	Identifier	child		793885	0					
ANR	794168	UnaryOperationExpression	- 1		793885	1					
ANR	794169	UnaryOperator	-		793885	0					
ANR	794170	PrimaryExpression	1		793885	1					
ANR	794171	CompoundStatement		40:20:1047:1047	793885	1					
ANR	794172	ExpressionStatement	"eprintf ( ""Cannot fork\\n"" )"	2237:4:58461:58486	793885	0	True				
ANR	794173	CallExpression	"eprintf ( ""Cannot fork\\n"" )"		793885	0					
ANR	794174	Callee	eprintf		793885	0					
ANR	794175	Identifier	eprintf		793885	0					
ANR	794176	ArgumentList	"""Cannot fork\\n"""		793885	1					
ANR	794177	Argument	"""Cannot fork\\n"""		793885	0					
ANR	794178	PrimaryExpression	"""Cannot fork\\n"""		793885	0					
ANR	794179	ExpressionStatement	close ( stdout_fd )	2238:4:58492:58509	793885	1	True				
ANR	794180	CallExpression	close ( stdout_fd )		793885	0					
ANR	794181	Callee	close		793885	0					
ANR	794182	Identifier	close		793885	0					
ANR	794183	ArgumentList	stdout_fd		793885	1					
ANR	794184	Argument	stdout_fd		793885	0					
ANR	794185	Identifier	stdout_fd		793885	0					
ANR	794186	ElseStatement	else		793885	0					
ANR	794187	IfStatement	if ( child )		793885	0					
ANR	794188	Condition	child	2239:14:58525:58529	793885	0	True				
ANR	794189	Identifier	child		793885	0					
ANR	794190	CompoundStatement		43:21:1124:1124	793885	1					
ANR	794191	ExpressionStatement	"dup2 ( fds [ 1 ] , 1 )"	2240:4:58538:58554	793885	0	True				
ANR	794192	CallExpression	"dup2 ( fds [ 1 ] , 1 )"		793885	0					
ANR	794193	Callee	dup2		793885	0					
ANR	794194	Identifier	dup2		793885	0					
ANR	794195	ArgumentList	fds [ 1 ]		793885	1					
ANR	794196	Argument	fds [ 1 ]		793885	0					
ANR	794197	ArrayIndexing	fds [ 1 ]		793885	0					
ANR	794198	Identifier	fds		793885	0					
ANR	794199	PrimaryExpression	1		793885	1					
ANR	794200	Argument	1		793885	1					
ANR	794201	PrimaryExpression	1		793885	0					
ANR	794202	ExpressionStatement	close ( fds [ 1 ] )	2241:4:58560:58574	793885	1	True				
ANR	794203	CallExpression	close ( fds [ 1 ] )		793885	0					
ANR	794204	Callee	close		793885	0					
ANR	794205	Identifier	close		793885	0					
ANR	794206	ArgumentList	fds [ 1 ]		793885	1					
ANR	794207	Argument	fds [ 1 ]		793885	0					
ANR	794208	ArrayIndexing	fds [ 1 ]		793885	0					
ANR	794209	Identifier	fds		793885	0					
ANR	794210	PrimaryExpression	1		793885	1					
ANR	794211	ExpressionStatement	close ( fds [ 0 ] )	2242:4:58580:58594	793885	2	True				
ANR	794212	CallExpression	close ( fds [ 0 ] )		793885	0					
ANR	794213	Callee	close		793885	0					
ANR	794214	Identifier	close		793885	0					
ANR	794215	ArgumentList	fds [ 0 ]		793885	1					
ANR	794216	Argument	fds [ 0 ]		793885	0					
ANR	794217	ArrayIndexing	fds [ 0 ]		793885	0					
ANR	794218	Identifier	fds		793885	0					
ANR	794219	PrimaryExpression	0		793885	1					
ANR	794220	ExpressionStatement	"r_core_cmd ( core , radare_cmd , 0 )"	2243:4:58600:58632	793885	3	True				
ANR	794221	CallExpression	"r_core_cmd ( core , radare_cmd , 0 )"		793885	0					
ANR	794222	Callee	r_core_cmd		793885	0					
ANR	794223	Identifier	r_core_cmd		793885	0					
ANR	794224	ArgumentList	core		793885	1					
ANR	794225	Argument	core		793885	0					
ANR	794226	Identifier	core		793885	0					
ANR	794227	Argument	radare_cmd		793885	1					
ANR	794228	Identifier	radare_cmd		793885	0					
ANR	794229	Argument	0		793885	2					
ANR	794230	PrimaryExpression	0		793885	0					
ANR	794231	ExpressionStatement	r_cons_flush ( )	2244:4:58638:58653	793885	4	True				
ANR	794232	CallExpression	r_cons_flush ( )		793885	0					
ANR	794233	Callee	r_cons_flush		793885	0					
ANR	794234	Identifier	r_cons_flush		793885	0					
ANR	794235	ArgumentList			793885	1					
ANR	794236	ExpressionStatement	close ( 1 )	2245:4:58659:58668	793885	5	True				
ANR	794237	CallExpression	close ( 1 )		793885	0					
ANR	794238	Callee	close		793885	0					
ANR	794239	Identifier	close		793885	0					
ANR	794240	ArgumentList	1		793885	1					
ANR	794241	Argument	1		793885	0					
ANR	794242	PrimaryExpression	1		793885	0					
ANR	794243	ExpressionStatement	wait ( & ret )	2246:4:58674:58685	793885	6	True				
ANR	794244	CallExpression	wait ( & ret )		793885	0					
ANR	794245	Callee	wait		793885	0					
ANR	794246	Identifier	wait		793885	0					
ANR	794247	ArgumentList	& ret		793885	1					
ANR	794248	Argument	& ret		793885	0					
ANR	794249	UnaryOperationExpression	& ret		793885	0					
ANR	794250	UnaryOperator	&		793885	0					
ANR	794251	Identifier	ret		793885	1					
ANR	794252	ExpressionStatement	"dup2 ( stdout_fd , 1 )"	2247:4:58691:58710	793885	7	True				
ANR	794253	CallExpression	"dup2 ( stdout_fd , 1 )"		793885	0					
ANR	794254	Callee	dup2		793885	0					
ANR	794255	Identifier	dup2		793885	0					
ANR	794256	ArgumentList	stdout_fd		793885	1					
ANR	794257	Argument	stdout_fd		793885	0					
ANR	794258	Identifier	stdout_fd		793885	0					
ANR	794259	Argument	1		793885	1					
ANR	794260	PrimaryExpression	1		793885	0					
ANR	794261	ExpressionStatement	close ( stdout_fd )	2248:4:58716:58733	793885	8	True				
ANR	794262	CallExpression	close ( stdout_fd )		793885	0					
ANR	794263	Callee	close		793885	0					
ANR	794264	Identifier	close		793885	0					
ANR	794265	ArgumentList	stdout_fd		793885	1					
ANR	794266	Argument	stdout_fd		793885	0					
ANR	794267	Identifier	stdout_fd		793885	0					
ANR	794268	ElseStatement	else		793885	0					
ANR	794269	CompoundStatement		53:10:1337:1337	793885	0					
ANR	794270	ExpressionStatement	close ( fds [ 1 ] )	2250:4:58751:58765	793885	0	True				
ANR	794271	CallExpression	close ( fds [ 1 ] )		793885	0					
ANR	794272	Callee	close		793885	0					
ANR	794273	Identifier	close		793885	0					
ANR	794274	ArgumentList	fds [ 1 ]		793885	1					
ANR	794275	Argument	fds [ 1 ]		793885	0					
ANR	794276	ArrayIndexing	fds [ 1 ]		793885	0					
ANR	794277	Identifier	fds		793885	0					
ANR	794278	PrimaryExpression	1		793885	1					
ANR	794279	ExpressionStatement	"dup2 ( fds [ 0 ] , 0 )"	2251:4:58771:58787	793885	1	True				
ANR	794280	CallExpression	"dup2 ( fds [ 0 ] , 0 )"		793885	0					
ANR	794281	Callee	dup2		793885	0					
ANR	794282	Identifier	dup2		793885	0					
ANR	794283	ArgumentList	fds [ 0 ]		793885	1					
ANR	794284	Argument	fds [ 0 ]		793885	0					
ANR	794285	ArrayIndexing	fds [ 0 ]		793885	0					
ANR	794286	Identifier	fds		793885	0					
ANR	794287	PrimaryExpression	0		793885	1					
ANR	794288	Argument	0		793885	1					
ANR	794289	PrimaryExpression	0		793885	0					
ANR	794290	ExpressionStatement	"r_sandbox_system ( shell_cmd , 0 )"	2253:4:58837:58868	793885	2	True				
ANR	794291	CallExpression	"r_sandbox_system ( shell_cmd , 0 )"		793885	0					
ANR	794292	Callee	r_sandbox_system		793885	0					
ANR	794293	Identifier	r_sandbox_system		793885	0					
ANR	794294	ArgumentList	shell_cmd		793885	1					
ANR	794295	Argument	shell_cmd		793885	0					
ANR	794296	Identifier	shell_cmd		793885	0					
ANR	794297	Argument	0		793885	1					
ANR	794298	PrimaryExpression	0		793885	0					
ANR	794299	ExpressionStatement	close ( stdout_fd )	2254:4:58874:58891	793885	3	True				
ANR	794300	CallExpression	close ( stdout_fd )		793885	0					
ANR	794301	Callee	close		793885	0					
ANR	794302	Identifier	close		793885	0					
ANR	794303	ArgumentList	stdout_fd		793885	1					
ANR	794304	Argument	stdout_fd		793885	0					
ANR	794305	Identifier	stdout_fd		793885	0					
ANR	794306	ElseStatement	else		793885	0					
ANR	794307	CompoundStatement		60:9:1499:1499	793885	0					
ANR	794308	ExpressionStatement	"eprintf ( ""r_core_cmd_pipe: Could not pipe\\n"" )"	2257:3:58912:58957	793885	0	True				
ANR	794309	CallExpression	"eprintf ( ""r_core_cmd_pipe: Could not pipe\\n"" )"		793885	0					
ANR	794310	Callee	eprintf		793885	0					
ANR	794311	Identifier	eprintf		793885	0					
ANR	794312	ArgumentList	"""r_core_cmd_pipe: Could not pipe\\n"""		793885	1					
ANR	794313	Argument	"""r_core_cmd_pipe: Could not pipe\\n"""		793885	0					
ANR	794314	PrimaryExpression	"""r_core_cmd_pipe: Could not pipe\\n"""		793885	0					
ANR	794315	IfStatement	if ( pipecolor != - 1 )		793885	14					
ANR	794316	Condition	pipecolor != - 1	2270:5:59268:59282	793885	0	True				
ANR	794317	EqualityExpression	pipecolor != - 1		793885	0		!=			
ANR	794318	Identifier	pipecolor		793885	0					
ANR	794319	UnaryOperationExpression	- 1		793885	1					
ANR	794320	UnaryOperator	-		793885	0					
ANR	794321	PrimaryExpression	1		793885	1					
ANR	794322	CompoundStatement		74:22:1877:1877	793885	1					
ANR	794323	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , pipecolor )"	2271:2:59289:59342	793885	0	True				
ANR	794324	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , pipecolor )"		793885	0					
ANR	794325	Callee	r_config_set_i		793885	0					
ANR	794326	Identifier	r_config_set_i		793885	0					
ANR	794327	ArgumentList	core -> config		793885	1					
ANR	794328	Argument	core -> config		793885	0					
ANR	794329	PtrMemberAccess	core -> config		793885	0					
ANR	794330	Identifier	core		793885	0					
ANR	794331	Identifier	config		793885	1					
ANR	794332	Argument	"""scr.color"""		793885	1					
ANR	794333	PrimaryExpression	"""scr.color"""		793885	0					
ANR	794334	Argument	pipecolor		793885	2					
ANR	794335	Identifier	pipecolor		793885	0					
ANR	794336	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.interactive"" , si )"	2273:1:59348:59400	793885	15	True				
ANR	794337	CallExpression	"r_config_set_i ( core -> config , ""scr.interactive"" , si )"		793885	0					
ANR	794338	Callee	r_config_set_i		793885	0					
ANR	794339	Identifier	r_config_set_i		793885	0					
ANR	794340	ArgumentList	core -> config		793885	1					
ANR	794341	Argument	core -> config		793885	0					
ANR	794342	PtrMemberAccess	core -> config		793885	0					
ANR	794343	Identifier	core		793885	0					
ANR	794344	Identifier	config		793885	1					
ANR	794345	Argument	"""scr.interactive"""		793885	1					
ANR	794346	PrimaryExpression	"""scr.interactive"""		793885	0					
ANR	794347	Argument	si		793885	2					
ANR	794348	Identifier	si		793885	0					
ANR	794349	ReturnStatement	return ret ;	2274:1:59403:59413	793885	16	True				
ANR	794350	Identifier	ret		793885	0					
ANR	794351	ReturnType	R_API int		793885	1					
ANR	794352	Identifier	r_core_cmd_pipe		793885	2					
ANR	794353	ParameterList	"RCore * core , char * radare_cmd , char * shell_cmd"		793885	3					
ANR	794354	Parameter	RCore * core	2197:26:57359:57369	793885	0	True				
ANR	794355	ParameterType	RCore *		793885	0					
ANR	794356	Identifier	core		793885	1					
ANR	794357	Parameter	char * radare_cmd	2197:39:57372:57387	793885	1	True				
ANR	794358	ParameterType	char *		793885	0					
ANR	794359	Identifier	radare_cmd		793885	1					
ANR	794360	Parameter	char * shell_cmd	2197:57:57390:57404	793885	2	True				
ANR	794361	ParameterType	char *		793885	0					
ANR	794362	Identifier	shell_cmd		793885	1					
ANR	794363	CFGEntryNode	ENTRY		793885		True				
ANR	794364	CFGExitNode	EXIT		793885		True				
ANR	794365	Symbol	& ret		793885						
ANR	794366	Symbol	radare_cmd		793885						
ANR	794367	Symbol	r_core_cmd_str		793885						
ANR	794368	Symbol	r_sandbox_enable		793885						
ANR	794369	Symbol	COLOR_MODE_DISABLED		793885						
ANR	794370	Symbol	* core		793885						
ANR	794371	Symbol	out		793885						
ANR	794372	Symbol	& olen		793885						
ANR	794373	Symbol	si		793885						
ANR	794374	Symbol	r_str_trim_head		793885						
ANR	794375	Symbol	pipe		793885						
ANR	794376	Symbol	SIGPIPE		793885						
ANR	794377	Symbol	r_sys_fork		793885						
ANR	794378	Symbol	shell_cmd		793885						
ANR	794379	Symbol	* shell_cmd		793885						
ANR	794380	Symbol	ret		793885						
ANR	794381	Symbol	core -> config		793885						
ANR	794382	Symbol	* fds		793885						
ANR	794383	Symbol	r_cons_is_interactive		793885						
ANR	794384	Symbol	NULL		793885						
ANR	794385	Symbol	SIG_IGN		793885						
ANR	794386	Symbol	str		793885						
ANR	794387	Symbol	core		793885						
ANR	794388	Symbol	olen		793885						
ANR	794389	Symbol	pipecolor		793885						
ANR	794390	Symbol	& out		793885						
ANR	794391	Symbol	stdout_fd		793885						
ANR	794392	Symbol	fds		793885						
ANR	794393	Symbol	r_config_get_i		793885						
ANR	794394	Symbol	dup		793885						
ANR	794395	Symbol	child		793885						
ANR	794396	Function	parse_tmp_evals	2277:0:59418:60193							
ANR	794397	FunctionDef	"parse_tmp_evals (RCore * core , const char * str)"		794396	0					
ANR	794398	CompoundStatement		2277:59:59477:60193	794396	0					
ANR	794399	IdentifierDeclStatement	char * s = strdup ( str ) ;	2278:1:59480:59502	794396	0	True				
ANR	794400	IdentifierDecl	* s = strdup ( str )		794396	0					
ANR	794401	IdentifierDeclType	char *		794396	0					
ANR	794402	Identifier	s		794396	1					
ANR	794403	AssignmentExpression	* s = strdup ( str )		794396	2		=			
ANR	794404	Identifier	s		794396	0					
ANR	794405	CallExpression	strdup ( str )		794396	1					
ANR	794406	Callee	strdup		794396	0					
ANR	794407	Identifier	strdup		794396	0					
ANR	794408	ArgumentList	str		794396	1					
ANR	794409	Argument	str		794396	0					
ANR	794410	Identifier	str		794396	0					
ANR	794411	IdentifierDeclStatement	"int i , argc = r_str_split ( s , ',' ) ;"	2279:1:59505:59539	794396	1	True				
ANR	794412	IdentifierDecl	i		794396	0					
ANR	794413	IdentifierDeclType	int		794396	0					
ANR	794414	Identifier	i		794396	1					
ANR	794415	IdentifierDecl	"argc = r_str_split ( s , ',' )"		794396	1					
ANR	794416	IdentifierDeclType	int		794396	0					
ANR	794417	Identifier	argc		794396	1					
ANR	794418	AssignmentExpression	"argc = r_str_split ( s , ',' )"		794396	2		=			
ANR	794419	Identifier	argc		794396	0					
ANR	794420	CallExpression	"r_str_split ( s , ',' )"		794396	1					
ANR	794421	Callee	r_str_split		794396	0					
ANR	794422	Identifier	r_str_split		794396	0					
ANR	794423	ArgumentList	s		794396	1					
ANR	794424	Argument	s		794396	0					
ANR	794425	Identifier	s		794396	0					
ANR	794426	Argument	"','"		794396	1					
ANR	794427	PrimaryExpression	"','"		794396	0					
ANR	794428	IdentifierDeclStatement	"char * res = strdup ( """" ) ;"	2280:1:59542:59565	794396	2	True				
ANR	794429	IdentifierDecl	"* res = strdup ( """" )"		794396	0					
ANR	794430	IdentifierDeclType	char *		794396	0					
ANR	794431	Identifier	res		794396	1					
ANR	794432	AssignmentExpression	"* res = strdup ( """" )"		794396	2		=			
ANR	794433	Identifier	res		794396	0					
ANR	794434	CallExpression	"strdup ( """" )"		794396	1					
ANR	794435	Callee	strdup		794396	0					
ANR	794436	Identifier	strdup		794396	0					
ANR	794437	ArgumentList	""""""		794396	1					
ANR	794438	Argument	""""""		794396	0					
ANR	794439	PrimaryExpression	""""""		794396	0					
ANR	794440	IfStatement	if ( ! s || ! res )		794396	3					
ANR	794441	Condition	! s || ! res	2281:5:59572:59581	794396	0	True				
ANR	794442	OrExpression	! s || ! res		794396	0		||			
ANR	794443	UnaryOperationExpression	! s		794396	0					
ANR	794444	UnaryOperator	!		794396	0					
ANR	794445	Identifier	s		794396	1					
ANR	794446	UnaryOperationExpression	! res		794396	1					
ANR	794447	UnaryOperator	!		794396	0					
ANR	794448	Identifier	res		794396	1					
ANR	794449	CompoundStatement		5:17:106:106	794396	1					
ANR	794450	ExpressionStatement	free ( s )	2282:2:59588:59596	794396	0	True				
ANR	794451	CallExpression	free ( s )		794396	0					
ANR	794452	Callee	free		794396	0					
ANR	794453	Identifier	free		794396	0					
ANR	794454	ArgumentList	s		794396	1					
ANR	794455	Argument	s		794396	0					
ANR	794456	Identifier	s		794396	0					
ANR	794457	ExpressionStatement	free ( res )	2283:2:59600:59610	794396	1	True				
ANR	794458	CallExpression	free ( res )		794396	0					
ANR	794459	Callee	free		794396	0					
ANR	794460	Identifier	free		794396	0					
ANR	794461	ArgumentList	res		794396	1					
ANR	794462	Argument	res		794396	0					
ANR	794463	Identifier	res		794396	0					
ANR	794464	ReturnStatement	return NULL ;	2284:2:59614:59625	794396	2	True				
ANR	794465	Identifier	NULL		794396	0					
ANR	794466	ForStatement	for ( i = 0 ; i < argc ; i ++ )		794396	4					
ANR	794467	ForInit	i = 0 ;	2286:6:59636:59641	794396	0	True				
ANR	794468	AssignmentExpression	i = 0		794396	0		=			
ANR	794469	Identifier	i		794396	0					
ANR	794470	PrimaryExpression	0		794396	1					
ANR	794471	Condition	i < argc	2286:13:59643:59650	794396	1	True				
ANR	794472	RelationalExpression	i < argc		794396	0		<			
ANR	794473	Identifier	i		794396	0					
ANR	794474	Identifier	argc		794396	1					
ANR	794475	PostIncDecOperationExpression	i ++	2286:23:59653:59655	794396	2	True				
ANR	794476	Identifier	i		794396	0					
ANR	794477	IncDec	++		794396	1					
ANR	794478	CompoundStatement		11:2:184:230	794396	3					
ANR	794479	IdentifierDeclStatement	"char * eq , * kv = ( char * ) r_str_word_get0 ( s , i ) ;"	2287:2:59662:59708	794396	0	True				
ANR	794480	IdentifierDecl	* eq		794396	0					
ANR	794481	IdentifierDeclType	char *		794396	0					
ANR	794482	Identifier	eq		794396	1					
ANR	794483	IdentifierDecl	"* kv = ( char * ) r_str_word_get0 ( s , i )"		794396	1					
ANR	794484	IdentifierDeclType	char *		794396	0					
ANR	794485	Identifier	kv		794396	1					
ANR	794486	AssignmentExpression	"* kv = ( char * ) r_str_word_get0 ( s , i )"		794396	2		=			
ANR	794487	Identifier	kv		794396	0					
ANR	794488	CastExpression	"( char * ) r_str_word_get0 ( s , i )"		794396	1					
ANR	794489	CastTarget	char *		794396	0					
ANR	794490	CallExpression	"r_str_word_get0 ( s , i )"		794396	1					
ANR	794491	Callee	r_str_word_get0		794396	0					
ANR	794492	Identifier	r_str_word_get0		794396	0					
ANR	794493	ArgumentList	s		794396	1					
ANR	794494	Argument	s		794396	0					
ANR	794495	Identifier	s		794396	0					
ANR	794496	Argument	i		794396	1					
ANR	794497	Identifier	i		794396	0					
ANR	794498	IfStatement	if ( ! kv )		794396	1					
ANR	794499	Condition	! kv	2288:6:59716:59718	794396	0	True				
ANR	794500	UnaryOperationExpression	! kv		794396	0					
ANR	794501	UnaryOperator	!		794396	0					
ANR	794502	Identifier	kv		794396	1					
ANR	794503	CompoundStatement		12:11:243:243	794396	1					
ANR	794504	BreakStatement	break ;	2289:3:59726:59731	794396	0	True				
ANR	794505	ExpressionStatement	"eq = strchr ( kv , '=' )"	2291:2:59739:59760	794396	2	True				
ANR	794506	AssignmentExpression	"eq = strchr ( kv , '=' )"		794396	0		=			
ANR	794507	Identifier	eq		794396	0					
ANR	794508	CallExpression	"strchr ( kv , '=' )"		794396	1					
ANR	794509	Callee	strchr		794396	0					
ANR	794510	Identifier	strchr		794396	0					
ANR	794511	ArgumentList	kv		794396	1					
ANR	794512	Argument	kv		794396	0					
ANR	794513	Identifier	kv		794396	0					
ANR	794514	Argument	'='		794396	1					
ANR	794515	PrimaryExpression	'='		794396	0					
ANR	794516	IfStatement	if ( eq )		794396	3					
ANR	794517	Condition	eq	2292:6:59768:59769	794396	0	True				
ANR	794518	Identifier	eq		794396	0					
ANR	794519	CompoundStatement		22:3:397:440	794396	1					
ANR	794520	ExpressionStatement	* eq = 0	2293:3:59777:59784	794396	0	True				
ANR	794521	AssignmentExpression	* eq = 0		794396	0		=			
ANR	794522	UnaryOperationExpression	* eq		794396	0					
ANR	794523	UnaryOperator	*		794396	0					
ANR	794524	Identifier	eq		794396	1					
ANR	794525	PrimaryExpression	0		794396	1					
ANR	794526	IdentifierDeclStatement	"const char * ov = r_config_get ( core -> config , kv ) ;"	2294:3:59789:59837	794396	1	True				
ANR	794527	IdentifierDecl	"* ov = r_config_get ( core -> config , kv )"		794396	0					
ANR	794528	IdentifierDeclType	const char *		794396	0					
ANR	794529	Identifier	ov		794396	1					
ANR	794530	AssignmentExpression	"* ov = r_config_get ( core -> config , kv )"		794396	2		=			
ANR	794531	Identifier	ov		794396	0					
ANR	794532	CallExpression	"r_config_get ( core -> config , kv )"		794396	1					
ANR	794533	Callee	r_config_get		794396	0					
ANR	794534	Identifier	r_config_get		794396	0					
ANR	794535	ArgumentList	core -> config		794396	1					
ANR	794536	Argument	core -> config		794396	0					
ANR	794537	PtrMemberAccess	core -> config		794396	0					
ANR	794538	Identifier	core		794396	0					
ANR	794539	Identifier	config		794396	1					
ANR	794540	Argument	kv		794396	1					
ANR	794541	Identifier	kv		794396	0					
ANR	794542	IfStatement	if ( ! ov )		794396	2					
ANR	794543	Condition	! ov	2295:7:59846:59848	794396	0	True				
ANR	794544	UnaryOperationExpression	! ov		794396	0					
ANR	794545	UnaryOperator	!		794396	0					
ANR	794546	Identifier	ov		794396	1					
ANR	794547	CompoundStatement		19:12:373:373	794396	1					
ANR	794548	ContinueStatement	continue ;	2296:4:59857:59865	794396	0	True				
ANR	794549	IdentifierDeclStatement	"char * cmd = r_str_newf ( ""e %s=%s;"" , kv , ov ) ;"	2298:3:59875:59918	794396	3	True				
ANR	794550	IdentifierDecl	"* cmd = r_str_newf ( ""e %s=%s;"" , kv , ov )"		794396	0					
ANR	794551	IdentifierDeclType	char *		794396	0					
ANR	794552	Identifier	cmd		794396	1					
ANR	794553	AssignmentExpression	"* cmd = r_str_newf ( ""e %s=%s;"" , kv , ov )"		794396	2		=			
ANR	794554	Identifier	cmd		794396	0					
ANR	794555	CallExpression	"r_str_newf ( ""e %s=%s;"" , kv , ov )"		794396	1					
ANR	794556	Callee	r_str_newf		794396	0					
ANR	794557	Identifier	r_str_newf		794396	0					
ANR	794558	ArgumentList	"""e %s=%s;"""		794396	1					
ANR	794559	Argument	"""e %s=%s;"""		794396	0					
ANR	794560	PrimaryExpression	"""e %s=%s;"""		794396	0					
ANR	794561	Argument	kv		794396	1					
ANR	794562	Identifier	kv		794396	0					
ANR	794563	Argument	ov		794396	2					
ANR	794564	Identifier	ov		794396	0					
ANR	794565	IfStatement	if ( ! cmd )		794396	4					
ANR	794566	Condition	! cmd	2299:7:59927:59930	794396	0	True				
ANR	794567	UnaryOperationExpression	! cmd		794396	0					
ANR	794568	UnaryOperator	!		794396	0					
ANR	794569	Identifier	cmd		794396	1					
ANR	794570	CompoundStatement		23:13:455:455	794396	1					
ANR	794571	ExpressionStatement	free ( s )	2300:4:59939:59947	794396	0	True				
ANR	794572	CallExpression	free ( s )		794396	0					
ANR	794573	Callee	free		794396	0					
ANR	794574	Identifier	free		794396	0					
ANR	794575	ArgumentList	s		794396	1					
ANR	794576	Argument	s		794396	0					
ANR	794577	Identifier	s		794396	0					
ANR	794578	ExpressionStatement	free ( res )	2301:4:59953:59963	794396	1	True				
ANR	794579	CallExpression	free ( res )		794396	0					
ANR	794580	Callee	free		794396	0					
ANR	794581	Identifier	free		794396	0					
ANR	794582	ArgumentList	res		794396	1					
ANR	794583	Argument	res		794396	0					
ANR	794584	Identifier	res		794396	0					
ANR	794585	ReturnStatement	return NULL ;	2302:4:59969:59980	794396	2	True				
ANR	794586	Identifier	NULL		794396	0					
ANR	794587	ExpressionStatement	"res = r_str_prepend ( res , cmd )"	2304:3:59990:60020	794396	5	True				
ANR	794588	AssignmentExpression	"res = r_str_prepend ( res , cmd )"		794396	0		=			
ANR	794589	Identifier	res		794396	0					
ANR	794590	CallExpression	"r_str_prepend ( res , cmd )"		794396	1					
ANR	794591	Callee	r_str_prepend		794396	0					
ANR	794592	Identifier	r_str_prepend		794396	0					
ANR	794593	ArgumentList	res		794396	1					
ANR	794594	Argument	res		794396	0					
ANR	794595	Identifier	res		794396	0					
ANR	794596	Argument	cmd		794396	1					
ANR	794597	Identifier	cmd		794396	0					
ANR	794598	ExpressionStatement	free ( cmd )	2305:3:60025:60035	794396	6	True				
ANR	794599	CallExpression	free ( cmd )		794396	0					
ANR	794600	Callee	free		794396	0					
ANR	794601	Identifier	free		794396	0					
ANR	794602	ArgumentList	cmd		794396	1					
ANR	794603	Argument	cmd		794396	0					
ANR	794604	Identifier	cmd		794396	0					
ANR	794605	ExpressionStatement	"r_config_set ( core -> config , kv , eq + 1 )"	2306:3:60040:60079	794396	7	True				
ANR	794606	CallExpression	"r_config_set ( core -> config , kv , eq + 1 )"		794396	0					
ANR	794607	Callee	r_config_set		794396	0					
ANR	794608	Identifier	r_config_set		794396	0					
ANR	794609	ArgumentList	core -> config		794396	1					
ANR	794610	Argument	core -> config		794396	0					
ANR	794611	PtrMemberAccess	core -> config		794396	0					
ANR	794612	Identifier	core		794396	0					
ANR	794613	Identifier	config		794396	1					
ANR	794614	Argument	kv		794396	1					
ANR	794615	Identifier	kv		794396	0					
ANR	794616	Argument	eq + 1		794396	2					
ANR	794617	AdditiveExpression	eq + 1		794396	0		+			
ANR	794618	Identifier	eq		794396	0					
ANR	794619	PrimaryExpression	1		794396	1					
ANR	794620	ExpressionStatement	* eq = '='	2307:3:60084:60093	794396	8	True				
ANR	794621	AssignmentExpression	* eq = '='		794396	0		=			
ANR	794622	UnaryOperationExpression	* eq		794396	0					
ANR	794623	UnaryOperator	*		794396	0					
ANR	794624	Identifier	eq		794396	1					
ANR	794625	PrimaryExpression	'='		794396	1					
ANR	794626	ElseStatement	else		794396	0					
ANR	794627	CompoundStatement		32:9:626:626	794396	0					
ANR	794628	ExpressionStatement	"eprintf ( ""Missing '=' in e: expression (%s)\\n"" , kv )"	2309:3:60109:60160	794396	0	True				
ANR	794629	CallExpression	"eprintf ( ""Missing '=' in e: expression (%s)\\n"" , kv )"		794396	0					
ANR	794630	Callee	eprintf		794396	0					
ANR	794631	Identifier	eprintf		794396	0					
ANR	794632	ArgumentList	"""Missing '=' in e: expression (%s)\\n"""		794396	1					
ANR	794633	Argument	"""Missing '=' in e: expression (%s)\\n"""		794396	0					
ANR	794634	PrimaryExpression	"""Missing '=' in e: expression (%s)\\n"""		794396	0					
ANR	794635	Argument	kv		794396	1					
ANR	794636	Identifier	kv		794396	0					
ANR	794637	ExpressionStatement	free ( s )	2312:1:60170:60178	794396	5	True				
ANR	794638	CallExpression	free ( s )		794396	0					
ANR	794639	Callee	free		794396	0					
ANR	794640	Identifier	free		794396	0					
ANR	794641	ArgumentList	s		794396	1					
ANR	794642	Argument	s		794396	0					
ANR	794643	Identifier	s		794396	0					
ANR	794644	ReturnStatement	return res ;	2313:1:60181:60191	794396	6	True				
ANR	794645	Identifier	res		794396	0					
ANR	794646	ReturnType	static char *		794396	1					
ANR	794647	Identifier	parse_tmp_evals		794396	2					
ANR	794648	ParameterList	"RCore * core , const char * str"		794396	3					
ANR	794649	Parameter	RCore * core	2277:29:59447:59457	794396	0	True				
ANR	794650	ParameterType	RCore *		794396	0					
ANR	794651	Identifier	core		794396	1					
ANR	794652	Parameter	const char * str	2277:42:59460:59474	794396	1	True				
ANR	794653	ParameterType	const char *		794396	0					
ANR	794654	Identifier	str		794396	1					
ANR	794655	CFGEntryNode	ENTRY		794396		True				
ANR	794656	CFGExitNode	EXIT		794396		True				
ANR	794657	Symbol	argc		794396						
ANR	794658	Symbol	core -> config		794396						
ANR	794659	Symbol	res		794396						
ANR	794660	Symbol	NULL		794396						
ANR	794661	Symbol	ov		794396						
ANR	794662	Symbol	* core		794396						
ANR	794663	Symbol	r_config_get		794396						
ANR	794664	Symbol	i		794396						
ANR	794665	Symbol	strchr		794396						
ANR	794666	Symbol	r_str_word_get0		794396						
ANR	794667	Symbol	kv		794396						
ANR	794668	Symbol	r_str_newf		794396						
ANR	794669	Symbol	r_str_prepend		794396						
ANR	794670	Symbol	eq		794396						
ANR	794671	Symbol	str		794396						
ANR	794672	Symbol	core		794396						
ANR	794673	Symbol	* eq		794396						
ANR	794674	Symbol	s		794396						
ANR	794675	Symbol	r_str_split		794396						
ANR	794676	Symbol	strdup		794396						
ANR	794677	Symbol	cmd		794396						
ANR	794678	Function	r_core_cmd_subst	2316:0:60196:63655							
ANR	794679	FunctionDef	"r_core_cmd_subst (RCore * core , char * cmd)"		794678	0					
ANR	794680	CompoundStatement		2316:52:60248:63655	794678	0					
ANR	794681	IdentifierDeclStatement	"ut64 rep = strtoull ( cmd , NULL , 10 ) ;"	2317:1:60251:60286	794678	0	True				
ANR	794682	IdentifierDecl	"rep = strtoull ( cmd , NULL , 10 )"		794678	0					
ANR	794683	IdentifierDeclType	ut64		794678	0					
ANR	794684	Identifier	rep		794678	1					
ANR	794685	AssignmentExpression	"rep = strtoull ( cmd , NULL , 10 )"		794678	2		=			
ANR	794686	Identifier	rep		794678	0					
ANR	794687	CallExpression	"strtoull ( cmd , NULL , 10 )"		794678	1					
ANR	794688	Callee	strtoull		794678	0					
ANR	794689	Identifier	strtoull		794678	0					
ANR	794690	ArgumentList	cmd		794678	1					
ANR	794691	Argument	cmd		794678	0					
ANR	794692	Identifier	cmd		794678	0					
ANR	794693	Argument	NULL		794678	1					
ANR	794694	Identifier	NULL		794678	0					
ANR	794695	Argument	10		794678	2					
ANR	794696	PrimaryExpression	10		794678	0					
ANR	794697	IdentifierDeclStatement	"int ret = 0 , orep ;"	2318:1:60289:60306	794678	1	True				
ANR	794698	IdentifierDecl	ret = 0		794678	0					
ANR	794699	IdentifierDeclType	int		794678	0					
ANR	794700	Identifier	ret		794678	1					
ANR	794701	AssignmentExpression	ret = 0		794678	2		=			
ANR	794702	Identifier	ret		794678	0					
ANR	794703	PrimaryExpression	0		794678	1					
ANR	794704	IdentifierDecl	orep		794678	1					
ANR	794705	IdentifierDeclType	int		794678	0					
ANR	794706	Identifier	orep		794678	1					
ANR	794707	IdentifierDeclStatement	"char * cmt , * colon = NULL , * icmd = NULL ;"	2319:1:60309:60347	794678	2	True				
ANR	794708	IdentifierDecl	* cmt		794678	0					
ANR	794709	IdentifierDeclType	char *		794678	0					
ANR	794710	Identifier	cmt		794678	1					
ANR	794711	IdentifierDecl	* colon = NULL		794678	1					
ANR	794712	IdentifierDeclType	char *		794678	0					
ANR	794713	Identifier	colon		794678	1					
ANR	794714	AssignmentExpression	* colon = NULL		794678	2		=			
ANR	794715	Identifier	NULL		794678	0					
ANR	794716	Identifier	NULL		794678	1					
ANR	794717	IdentifierDecl	* icmd = NULL		794678	2					
ANR	794718	IdentifierDeclType	char *		794678	0					
ANR	794719	Identifier	icmd		794678	1					
ANR	794720	AssignmentExpression	* icmd = NULL		794678	2		=			
ANR	794721	Identifier	NULL		794678	0					
ANR	794722	Identifier	NULL		794678	1					
ANR	794723	IdentifierDeclStatement	bool tmpseek = false ;	2320:1:60350:60370	794678	3	True				
ANR	794724	IdentifierDecl	tmpseek = false		794678	0					
ANR	794725	IdentifierDeclType	bool		794678	0					
ANR	794726	Identifier	tmpseek		794678	1					
ANR	794727	AssignmentExpression	tmpseek = false		794678	2		=			
ANR	794728	Identifier	false		794678	0					
ANR	794729	Identifier	false		794678	1					
ANR	794730	IdentifierDeclStatement	bool original_tmpseek = core -> tmpseek ;	2321:1:60373:60410	794678	4	True				
ANR	794731	IdentifierDecl	original_tmpseek = core -> tmpseek		794678	0					
ANR	794732	IdentifierDeclType	bool		794678	0					
ANR	794733	Identifier	original_tmpseek		794678	1					
ANR	794734	AssignmentExpression	original_tmpseek = core -> tmpseek		794678	2		=			
ANR	794735	Identifier	original_tmpseek		794678	0					
ANR	794736	PtrMemberAccess	core -> tmpseek		794678	1					
ANR	794737	Identifier	core		794678	0					
ANR	794738	Identifier	tmpseek		794678	1					
ANR	794739	IfStatement	"if ( r_str_startswith ( cmd , ""GET /cmd/"" ) )"		794678	5					
ANR	794740	Condition	"r_str_startswith ( cmd , ""GET /cmd/"" )"	2323:5:60418:60452	794678	0	True				
ANR	794741	CallExpression	"r_str_startswith ( cmd , ""GET /cmd/"" )"		794678	0					
ANR	794742	Callee	r_str_startswith		794678	0					
ANR	794743	Identifier	r_str_startswith		794678	0					
ANR	794744	ArgumentList	cmd		794678	1					
ANR	794745	Argument	cmd		794678	0					
ANR	794746	Identifier	cmd		794678	0					
ANR	794747	Argument	"""GET /cmd/"""		794678	1					
ANR	794748	PrimaryExpression	"""GET /cmd/"""		794678	0					
ANR	794749	CompoundStatement		10:2:258:291	794678	1					
ANR	794750	ExpressionStatement	"memmove ( cmd , cmd + 9 , strlen ( cmd + 9 ) + 1 )"	2324:2:60459:60503	794678	0	True				
ANR	794751	CallExpression	"memmove ( cmd , cmd + 9 , strlen ( cmd + 9 ) + 1 )"		794678	0					
ANR	794752	Callee	memmove		794678	0					
ANR	794753	Identifier	memmove		794678	0					
ANR	794754	ArgumentList	cmd		794678	1					
ANR	794755	Argument	cmd		794678	0					
ANR	794756	Identifier	cmd		794678	0					
ANR	794757	Argument	cmd + 9		794678	1					
ANR	794758	AdditiveExpression	cmd + 9		794678	0		+			
ANR	794759	Identifier	cmd		794678	0					
ANR	794760	PrimaryExpression	9		794678	1					
ANR	794761	Argument	strlen ( cmd + 9 ) + 1		794678	2					
ANR	794762	AdditiveExpression	strlen ( cmd + 9 ) + 1		794678	0		+			
ANR	794763	CallExpression	strlen ( cmd + 9 )		794678	0					
ANR	794764	Callee	strlen		794678	0					
ANR	794765	Identifier	strlen		794678	0					
ANR	794766	ArgumentList	cmd + 9		794678	1					
ANR	794767	Argument	cmd + 9		794678	0					
ANR	794768	AdditiveExpression	cmd + 9		794678	0		+			
ANR	794769	Identifier	cmd		794678	0					
ANR	794770	PrimaryExpression	9		794678	1					
ANR	794771	PrimaryExpression	1		794678	1					
ANR	794772	IdentifierDeclStatement	"char * http = strstr ( cmd , ""HTTP"" ) ;"	2325:2:60507:60540	794678	1	True				
ANR	794773	IdentifierDecl	"* http = strstr ( cmd , ""HTTP"" )"		794678	0					
ANR	794774	IdentifierDeclType	char *		794678	0					
ANR	794775	Identifier	http		794678	1					
ANR	794776	AssignmentExpression	"* http = strstr ( cmd , ""HTTP"" )"		794678	2		=			
ANR	794777	Identifier	http		794678	0					
ANR	794778	CallExpression	"strstr ( cmd , ""HTTP"" )"		794678	1					
ANR	794779	Callee	strstr		794678	0					
ANR	794780	Identifier	strstr		794678	0					
ANR	794781	ArgumentList	cmd		794678	1					
ANR	794782	Argument	cmd		794678	0					
ANR	794783	Identifier	cmd		794678	0					
ANR	794784	Argument	"""HTTP"""		794678	1					
ANR	794785	PrimaryExpression	"""HTTP"""		794678	0					
ANR	794786	IfStatement	if ( http )		794678	2					
ANR	794787	Condition	http	2326:6:60548:60551	794678	0	True				
ANR	794788	Identifier	http		794678	0					
ANR	794789	CompoundStatement		11:12:305:305	794678	1					
ANR	794790	ExpressionStatement	* http = 0	2327:3:60559:60568	794678	0	True				
ANR	794791	AssignmentExpression	* http = 0		794678	0		=			
ANR	794792	UnaryOperationExpression	* http		794678	0					
ANR	794793	UnaryOperator	*		794678	0					
ANR	794794	Identifier	http		794678	1					
ANR	794795	PrimaryExpression	0		794678	1					
ANR	794796	ExpressionStatement	http --	2328:3:60573:60579	794678	1	True				
ANR	794797	PostIncDecOperationExpression	http --		794678	0					
ANR	794798	Identifier	http		794678	0					
ANR	794799	IncDec	--		794678	1					
ANR	794800	IfStatement	if ( * http == ' ' )		794678	2					
ANR	794801	Condition	* http == ' '	2329:7:60588:60599	794678	0	True				
ANR	794802	EqualityExpression	* http == ' '		794678	0		==			
ANR	794803	UnaryOperationExpression	* http		794678	0					
ANR	794804	UnaryOperator	*		794678	0					
ANR	794805	Identifier	http		794678	1					
ANR	794806	PrimaryExpression	' '		794678	1					
ANR	794807	CompoundStatement		14:21:353:353	794678	1					
ANR	794808	ExpressionStatement	* http = 0	2330:4:60608:60617	794678	0	True				
ANR	794809	AssignmentExpression	* http = 0		794678	0		=			
ANR	794810	UnaryOperationExpression	* http		794678	0					
ANR	794811	UnaryOperator	*		794678	0					
ANR	794812	Identifier	http		794678	1					
ANR	794813	PrimaryExpression	0		794678	1					
ANR	794814	Statement	r_cons_printf	2333:2:60630:60642	794678	3	True				
ANR	794815	Statement	(	2333:16:60644:60644	794678	4	True				
ANR	794816	Statement	"""HTTP/1.0 %d %s\\r\\n%s"""	2333:17:60645:60666	794678	5	True				
ANR	794817	Statement	"""Connection: close\\r\\nContent-Length: %d\\r\\n\\r\\n"""	2334:4:60672:60720	794678	6	True				
ANR	794818	Statement	","	2334:53:60721:60721	794678	7	True				
ANR	794819	Statement	200	2335:4:60727:60729	794678	8	True				
ANR	794820	Statement	","	2335:7:60730:60730	794678	9	True				
ANR	794821	Statement	"""OK"""	2335:9:60732:60735	794678	10	True				
ANR	794822	Statement	","	2335:13:60736:60736	794678	11	True				
ANR	794823	Statement	""""""	2335:15:60738:60739	794678	12	True				
ANR	794824	Statement	","	2335:17:60740:60740	794678	13	True				
ANR	794825	Statement	-	2335:19:60742:60742	794678	14	True				
ANR	794826	Statement	1	2335:20:60743:60743	794678	15	True				
ANR	794827	Statement	)	2335:21:60744:60744	794678	16	True				
ANR	794828	ExpressionStatement		2335:22:60745:60745	794678	17	True				
ANR	794829	ReturnStatement	"return r_core_cmd0 ( core , cmd ) ;"	2336:2:60749:60779	794678	18	True				
ANR	794830	CallExpression	"r_core_cmd0 ( core , cmd )"		794678	0					
ANR	794831	Callee	r_core_cmd0		794678	0					
ANR	794832	Identifier	r_core_cmd0		794678	0					
ANR	794833	ArgumentList	core		794678	1					
ANR	794834	Argument	core		794678	0					
ANR	794835	Identifier	core		794678	0					
ANR	794836	Argument	cmd		794678	1					
ANR	794837	Identifier	cmd		794678	0					
ANR	794838	IdentifierDeclStatement	ut64 orig_offset = core -> offset ;	2341:1:60878:60909	794678	6	True				
ANR	794839	IdentifierDecl	orig_offset = core -> offset		794678	0					
ANR	794840	IdentifierDeclType	ut64		794678	0					
ANR	794841	Identifier	orig_offset		794678	1					
ANR	794842	AssignmentExpression	orig_offset = core -> offset		794678	2		=			
ANR	794843	Identifier	orig_offset		794678	0					
ANR	794844	PtrMemberAccess	core -> offset		794678	1					
ANR	794845	Identifier	core		794678	0					
ANR	794846	Identifier	offset		794678	1					
ANR	794847	ExpressionStatement	icmd = strdup ( cmd )	2342:1:60912:60931	794678	7	True				
ANR	794848	AssignmentExpression	icmd = strdup ( cmd )		794678	0		=			
ANR	794849	Identifier	icmd		794678	0					
ANR	794850	CallExpression	strdup ( cmd )		794678	1					
ANR	794851	Callee	strdup		794678	0					
ANR	794852	Identifier	strdup		794678	0					
ANR	794853	ArgumentList	cmd		794678	1					
ANR	794854	Argument	cmd		794678	0					
ANR	794855	Identifier	cmd		794678	0					
ANR	794856	IfStatement	if ( core -> max_cmd_depth - core -> cons -> context -> cmd_depth == 1 )		794678	8					
ANR	794857	Condition	core -> max_cmd_depth - core -> cons -> context -> cmd_depth == 1	2344:5:60939:60995	794678	0	True				
ANR	794858	EqualityExpression	core -> max_cmd_depth - core -> cons -> context -> cmd_depth == 1		794678	0		==			
ANR	794859	AdditiveExpression	core -> max_cmd_depth - core -> cons -> context -> cmd_depth		794678	0		-			
ANR	794860	PtrMemberAccess	core -> max_cmd_depth		794678	0					
ANR	794861	Identifier	core		794678	0					
ANR	794862	Identifier	max_cmd_depth		794678	1					
ANR	794863	PtrMemberAccess	core -> cons -> context -> cmd_depth		794678	1					
ANR	794864	PtrMemberAccess	core -> cons -> context		794678	0					
ANR	794865	PtrMemberAccess	core -> cons		794678	0					
ANR	794866	Identifier	core		794678	0					
ANR	794867	Identifier	cons		794678	1					
ANR	794868	Identifier	context		794678	1					
ANR	794869	Identifier	cmd_depth		794678	1					
ANR	794870	PrimaryExpression	1		794678	1					
ANR	794871	CompoundStatement		29:64:749:749	794678	1					
ANR	794872	ExpressionStatement	core -> prompt_offset = core -> offset	2345:2:61002:61036	794678	0	True				
ANR	794873	AssignmentExpression	core -> prompt_offset = core -> offset		794678	0		=			
ANR	794874	PtrMemberAccess	core -> prompt_offset		794678	0					
ANR	794875	Identifier	core		794678	0					
ANR	794876	Identifier	prompt_offset		794678	1					
ANR	794877	PtrMemberAccess	core -> offset		794678	1					
ANR	794878	Identifier	core		794678	0					
ANR	794879	Identifier	offset		794678	1					
ANR	794880	ExpressionStatement	cmd = r_str_trim_head_tail ( icmd )	2347:1:61042:61075	794678	9	True				
ANR	794881	AssignmentExpression	cmd = r_str_trim_head_tail ( icmd )		794678	0		=			
ANR	794882	Identifier	cmd		794678	0					
ANR	794883	CallExpression	r_str_trim_head_tail ( icmd )		794678	1					
ANR	794884	Callee	r_str_trim_head_tail		794678	0					
ANR	794885	Identifier	r_str_trim_head_tail		794678	0					
ANR	794886	ArgumentList	icmd		794678	1					
ANR	794887	Argument	icmd		794678	0					
ANR	794888	Identifier	icmd		794678	0					
ANR	794889	IfStatement	if ( ! * cmd )		794678	10					
ANR	794890	Condition	! * cmd	2349:5:61163:61167	794678	0	True				
ANR	794891	UnaryOperationExpression	! * cmd		794678	0					
ANR	794892	UnaryOperator	!		794678	0					
ANR	794893	UnaryOperationExpression	* cmd		794678	1					
ANR	794894	UnaryOperator	*		794678	0					
ANR	794895	Identifier	cmd		794678	1					
ANR	794896	CompoundStatement		34:12:921:921	794678	1					
ANR	794897	IfStatement	if ( core -> cmdrepeat > 0 )		794678	0					
ANR	794898	Condition	core -> cmdrepeat > 0	2350:6:61178:61196	794678	0	True				
ANR	794899	RelationalExpression	core -> cmdrepeat > 0		794678	0		>			
ANR	794900	PtrMemberAccess	core -> cmdrepeat		794678	0					
ANR	794901	Identifier	core		794678	0					
ANR	794902	Identifier	cmdrepeat		794678	1					
ANR	794903	PrimaryExpression	0		794678	1					
ANR	794904	CompoundStatement		35:27:950:950	794678	1					
ANR	794905	ExpressionStatement	"r_core_cmd_repeat ( core , true )"	2351:3:61204:61234	794678	0	True				
ANR	794906	CallExpression	"r_core_cmd_repeat ( core , true )"		794678	0					
ANR	794907	Callee	r_core_cmd_repeat		794678	0					
ANR	794908	Identifier	r_core_cmd_repeat		794678	0					
ANR	794909	ArgumentList	core		794678	1					
ANR	794910	Argument	core		794678	0					
ANR	794911	Identifier	core		794678	0					
ANR	794912	Argument	true		794678	1					
ANR	794913	Identifier	true		794678	0					
ANR	794914	ExpressionStatement	ret = r_core_cmd_nullcallback ( core )	2352:3:61239:61275	794678	1	True				
ANR	794915	AssignmentExpression	ret = r_core_cmd_nullcallback ( core )		794678	0		=			
ANR	794916	Identifier	ret		794678	0					
ANR	794917	CallExpression	r_core_cmd_nullcallback ( core )		794678	1					
ANR	794918	Callee	r_core_cmd_nullcallback		794678	0					
ANR	794919	Identifier	r_core_cmd_nullcallback		794678	0					
ANR	794920	ArgumentList	core		794678	1					
ANR	794921	Argument	core		794678	0					
ANR	794922	Identifier	core		794678	0					
ANR	794923	GotoStatement	goto beach ;	2354:2:61283:61293	794678	1	True				
ANR	794924	Identifier	beach		794678	0					
ANR	794925	IfStatement	if ( ! icmd || ( cmd [ 0 ] == '#' && cmd [ 1 ] != '!' && cmd [ 1 ] != '?' ) )		794678	11					
ANR	794926	Condition	! icmd || ( cmd [ 0 ] == '#' && cmd [ 1 ] != '!' && cmd [ 1 ] != '?' )	2356:5:61303:61360	794678	0	True				
ANR	794927	OrExpression	! icmd || ( cmd [ 0 ] == '#' && cmd [ 1 ] != '!' && cmd [ 1 ] != '?' )		794678	0		||			
ANR	794928	UnaryOperationExpression	! icmd		794678	0					
ANR	794929	UnaryOperator	!		794678	0					
ANR	794930	Identifier	icmd		794678	1					
ANR	794931	AndExpression	cmd [ 0 ] == '#' && cmd [ 1 ] != '!' && cmd [ 1 ] != '?'		794678	1		&&			
ANR	794932	EqualityExpression	cmd [ 0 ] == '#'		794678	0		==			
ANR	794933	ArrayIndexing	cmd [ 0 ]		794678	0					
ANR	794934	Identifier	cmd		794678	0					
ANR	794935	PrimaryExpression	0		794678	1					
ANR	794936	PrimaryExpression	'#'		794678	1					
ANR	794937	AndExpression	cmd [ 1 ] != '!' && cmd [ 1 ] != '?'		794678	1		&&			
ANR	794938	EqualityExpression	cmd [ 1 ] != '!'		794678	0		!=			
ANR	794939	ArrayIndexing	cmd [ 1 ]		794678	0					
ANR	794940	Identifier	cmd		794678	0					
ANR	794941	PrimaryExpression	1		794678	1					
ANR	794942	PrimaryExpression	'!'		794678	1					
ANR	794943	EqualityExpression	cmd [ 1 ] != '?'		794678	1		!=			
ANR	794944	ArrayIndexing	cmd [ 1 ]		794678	0					
ANR	794945	Identifier	cmd		794678	0					
ANR	794946	PrimaryExpression	1		794678	1					
ANR	794947	PrimaryExpression	'?'		794678	1					
ANR	794948	CompoundStatement		41:65:1114:1114	794678	1					
ANR	794949	GotoStatement	goto beach ;	2357:2:61367:61377	794678	0	True				
ANR	794950	Identifier	beach		794678	0					
ANR	794951	ExpressionStatement	"cmt = * icmd ? ( char * ) r_str_firstbut ( icmd , '#' , ""\\"""" ) : NULL"	2359:1:61383:61443	794678	12	True				
ANR	794952	AssignmentExpression	"cmt = * icmd ? ( char * ) r_str_firstbut ( icmd , '#' , ""\\"""" ) : NULL"		794678	0		=			
ANR	794953	Identifier	cmt		794678	0					
ANR	794954	ConditionalExpression	"* icmd ? ( char * ) r_str_firstbut ( icmd , '#' , ""\\"""" ) : NULL"		794678	1					
ANR	794955	Condition	* icmd		794678	0					
ANR	794956	UnaryOperationExpression	* icmd		794678	0					
ANR	794957	UnaryOperator	*		794678	0					
ANR	794958	Identifier	icmd		794678	1					
ANR	794959	CastExpression	"( char * ) r_str_firstbut ( icmd , '#' , ""\\"""" )"		794678	1					
ANR	794960	CastTarget	char *		794678	0					
ANR	794961	CallExpression	"r_str_firstbut ( icmd , '#' , ""\\"""" )"		794678	1					
ANR	794962	Callee	r_str_firstbut		794678	0					
ANR	794963	Identifier	r_str_firstbut		794678	0					
ANR	794964	ArgumentList	icmd		794678	1					
ANR	794965	Argument	icmd		794678	0					
ANR	794966	Identifier	icmd		794678	0					
ANR	794967	Argument	'#'		794678	1					
ANR	794968	PrimaryExpression	'#'		794678	0					
ANR	794969	Argument	"""\\"""""		794678	2					
ANR	794970	PrimaryExpression	"""\\"""""		794678	0					
ANR	794971	Identifier	NULL		794678	2					
ANR	794972	IfStatement	if ( cmt && ( cmt [ 1 ] == ' ' || cmt [ 1 ] == '\\t' ) )		794678	13					
ANR	794973	Condition	cmt && ( cmt [ 1 ] == ' ' || cmt [ 1 ] == '\\t' )	2360:5:61450:61489	794678	0	True				
ANR	794974	AndExpression	cmt && ( cmt [ 1 ] == ' ' || cmt [ 1 ] == '\\t' )		794678	0		&&			
ANR	794975	Identifier	cmt		794678	0					
ANR	794976	OrExpression	cmt [ 1 ] == ' ' || cmt [ 1 ] == '\\t'		794678	1		||			
ANR	794977	EqualityExpression	cmt [ 1 ] == ' '		794678	0		==			
ANR	794978	ArrayIndexing	cmt [ 1 ]		794678	0					
ANR	794979	Identifier	cmt		794678	0					
ANR	794980	PrimaryExpression	1		794678	1					
ANR	794981	PrimaryExpression	' '		794678	1					
ANR	794982	EqualityExpression	cmt [ 1 ] == '\\t'		794678	1		==			
ANR	794983	ArrayIndexing	cmt [ 1 ]		794678	0					
ANR	794984	Identifier	cmt		794678	0					
ANR	794985	PrimaryExpression	1		794678	1					
ANR	794986	PrimaryExpression	'\\t'		794678	1					
ANR	794987	CompoundStatement		45:47:1243:1243	794678	1					
ANR	794988	ExpressionStatement	* cmt = 0	2361:2:61496:61504	794678	0	True				
ANR	794989	AssignmentExpression	* cmt = 0		794678	0		=			
ANR	794990	UnaryOperationExpression	* cmt		794678	0					
ANR	794991	UnaryOperator	*		794678	0					
ANR	794992	Identifier	cmt		794678	1					
ANR	794993	PrimaryExpression	0		794678	1					
ANR	794994	IfStatement	"if ( * cmd != '""' )"		794678	14					
ANR	794995	Condition	"* cmd != '""'"	2363:5:61514:61524	794678	0	True				
ANR	794996	EqualityExpression	"* cmd != '""'"		794678	0		!=			
ANR	794997	UnaryOperationExpression	* cmd		794678	0					
ANR	794998	UnaryOperator	*		794678	0					
ANR	794999	Identifier	cmd		794678	1					
ANR	795000	PrimaryExpression	"'""'"		794678	1					
ANR	795001	CompoundStatement		48:18:1278:1278	794678	1					
ANR	795002	IfStatement	"if ( ! strchr ( cmd , '\\'' ) )"		794678	0					
ANR	795003	Condition	"! strchr ( cmd , '\\'' )"	2364:6:61535:61553	794678	0	True				
ANR	795004	UnaryOperationExpression	"! strchr ( cmd , '\\'' )"		794678	0					
ANR	795005	UnaryOperator	!		794678	0					
ANR	795006	CallExpression	"strchr ( cmd , '\\'' )"		794678	1					
ANR	795007	Callee	strchr		794678	0					
ANR	795008	Identifier	strchr		794678	0					
ANR	795009	ArgumentList	cmd		794678	1					
ANR	795010	Argument	cmd		794678	0					
ANR	795011	Identifier	cmd		794678	0					
ANR	795012	Argument	'\\''		794678	1					
ANR	795013	PrimaryExpression	'\\''		794678	0					
ANR	795014	CompoundStatement		49:27:1307:1307	794678	1					
ANR	795015	IfStatement	"if ( ( colon = strchr ( cmd , ';' ) ) )"		794678	0					
ANR	795016	Condition	"colon = strchr ( cmd , ';' )"	2365:7:61630:61656	794678	0	True				
ANR	795017	AssignmentExpression	"colon = strchr ( cmd , ';' )"		794678	0		=			
ANR	795018	Identifier	colon		794678	0					
ANR	795019	CallExpression	"strchr ( cmd , ';' )"		794678	1					
ANR	795020	Callee	strchr		794678	0					
ANR	795021	Identifier	strchr		794678	0					
ANR	795022	ArgumentList	cmd		794678	1					
ANR	795023	Argument	cmd		794678	0					
ANR	795024	Identifier	cmd		794678	0					
ANR	795025	Argument	';'		794678	1					
ANR	795026	PrimaryExpression	';'		794678	0					
ANR	795027	CompoundStatement		50:36:1410:1410	794678	1					
ANR	795028	ExpressionStatement	* colon = 0	2366:4:61665:61675	794678	0	True				
ANR	795029	AssignmentExpression	* colon = 0		794678	0		=			
ANR	795030	UnaryOperationExpression	* colon		794678	0					
ANR	795031	UnaryOperator	*		794678	0					
ANR	795032	Identifier	colon		794678	1					
ANR	795033	PrimaryExpression	0		794678	1					
ANR	795034	ElseStatement	else		794678	0					
ANR	795035	CompoundStatement		54:8:1445:1445	794678	0					
ANR	795036	ExpressionStatement	colon = NULL	2370:2:61698:61710	794678	0	True				
ANR	795037	AssignmentExpression	colon = NULL		794678	0		=			
ANR	795038	Identifier	colon		794678	0					
ANR	795039	Identifier	NULL		794678	1					
ANR	795040	IfStatement	if ( rep > 0 )		794678	15					
ANR	795041	Condition	rep > 0	2372:5:61720:61726	794678	0	True				
ANR	795042	RelationalExpression	rep > 0		794678	0		>			
ANR	795043	Identifier	rep		794678	0					
ANR	795044	PrimaryExpression	0		794678	1					
ANR	795045	CompoundStatement		57:14:1480:1480	794678	1					
ANR	795046	WhileStatement	while ( IS_DIGIT ( * cmd ) )		794678	0					
ANR	795047	Condition	IS_DIGIT ( * cmd )	2373:9:61740:61754	794678	0	True				
ANR	795048	CallExpression	IS_DIGIT ( * cmd )		794678	0					
ANR	795049	Callee	IS_DIGIT		794678	0					
ANR	795050	Identifier	IS_DIGIT		794678	0					
ANR	795051	ArgumentList	* cmd		794678	1					
ANR	795052	Argument	* cmd		794678	0					
ANR	795053	UnaryOperationExpression	* cmd		794678	0					
ANR	795054	UnaryOperator	*		794678	0					
ANR	795055	Identifier	cmd		794678	1					
ANR	795056	CompoundStatement		58:26:1508:1508	794678	1					
ANR	795057	ExpressionStatement	cmd ++	2374:3:61762:61767	794678	0	True				
ANR	795058	PostIncDecOperationExpression	cmd ++		794678	0					
ANR	795059	Identifier	cmd		794678	0					
ANR	795060	IncDec	++		794678	1					
ANR	795061	IfStatement	if ( ! * cmd )		794678	1					
ANR	795062	Condition	! * cmd	2377:6:61807:61811	794678	0	True				
ANR	795063	UnaryOperationExpression	! * cmd		794678	0					
ANR	795064	UnaryOperator	!		794678	0					
ANR	795065	UnaryOperationExpression	* cmd		794678	1					
ANR	795066	UnaryOperator	*		794678	0					
ANR	795067	Identifier	cmd		794678	1					
ANR	795068	CompoundStatement		62:13:1565:1565	794678	1					
ANR	795069	GotoStatement	goto beach ;	2378:3:61819:61829	794678	0	True				
ANR	795070	Identifier	beach		794678	0					
ANR	795071	IfStatement	if ( rep < 1 )		794678	16					
ANR	795072	Condition	rep < 1	2381:5:61843:61849	794678	0	True				
ANR	795073	RelationalExpression	rep < 1		794678	0		<			
ANR	795074	Identifier	rep		794678	0					
ANR	795075	PrimaryExpression	1		794678	1					
ANR	795076	CompoundStatement		66:14:1603:1603	794678	1					
ANR	795077	ExpressionStatement	rep = 1	2382:2:61856:61863	794678	0	True				
ANR	795078	AssignmentExpression	rep = 1		794678	0		=			
ANR	795079	Identifier	rep		794678	0					
ANR	795080	PrimaryExpression	1		794678	1					
ANR	795081	IfStatement	if ( rep > 1 && r_sandbox_enable ( 0 ) )		794678	17					
ANR	795082	Condition	rep > 1 && r_sandbox_enable ( 0 )	2385:5:61938:61968	794678	0	True				
ANR	795083	AndExpression	rep > 1 && r_sandbox_enable ( 0 )		794678	0		&&			
ANR	795084	RelationalExpression	rep > 1		794678	0		>			
ANR	795085	Identifier	rep		794678	0					
ANR	795086	PrimaryExpression	1		794678	1					
ANR	795087	CallExpression	r_sandbox_enable ( 0 )		794678	1					
ANR	795088	Callee	r_sandbox_enable		794678	0					
ANR	795089	Identifier	r_sandbox_enable		794678	0					
ANR	795090	ArgumentList	0		794678	1					
ANR	795091	Argument	0		794678	0					
ANR	795092	PrimaryExpression	0		794678	0					
ANR	795093	CompoundStatement		70:38:1722:1722	794678	1					
ANR	795094	ExpressionStatement	"eprintf ( ""Command repeat sugar disabled in sandbox mode (%s)\\n"" , cmd )"	2386:2:61975:62044	794678	0	True				
ANR	795095	CallExpression	"eprintf ( ""Command repeat sugar disabled in sandbox mode (%s)\\n"" , cmd )"		794678	0					
ANR	795096	Callee	eprintf		794678	0					
ANR	795097	Identifier	eprintf		794678	0					
ANR	795098	ArgumentList	"""Command repeat sugar disabled in sandbox mode (%s)\\n"""		794678	1					
ANR	795099	Argument	"""Command repeat sugar disabled in sandbox mode (%s)\\n"""		794678	0					
ANR	795100	PrimaryExpression	"""Command repeat sugar disabled in sandbox mode (%s)\\n"""		794678	0					
ANR	795101	Argument	cmd		794678	1					
ANR	795102	Identifier	cmd		794678	0					
ANR	795103	GotoStatement	goto beach ;	2387:2:62048:62058	794678	1	True				
ANR	795104	Identifier	beach		794678	0					
ANR	795105	ElseStatement	else		794678	0					
ANR	795106	CompoundStatement		73:8:1819:1819	794678	0					
ANR	795107	IfStatement	if ( rep > INTERACTIVE_MAX_REP )		794678	0					
ANR	795108	Condition	rep > INTERACTIVE_MAX_REP	2389:6:62076:62100	794678	0	True				
ANR	795109	RelationalExpression	rep > INTERACTIVE_MAX_REP		794678	0		>			
ANR	795110	Identifier	rep		794678	0					
ANR	795111	Identifier	INTERACTIVE_MAX_REP		794678	1					
ANR	795112	CompoundStatement		74:33:1854:1854	794678	1					
ANR	795113	IfStatement	if ( r_cons_is_interactive ( ) )		794678	0					
ANR	795114	Condition	r_cons_is_interactive ( )	2390:7:62112:62135	794678	0	True				
ANR	795115	CallExpression	r_cons_is_interactive ( )		794678	0					
ANR	795116	Callee	r_cons_is_interactive		794678	0					
ANR	795117	Identifier	r_cons_is_interactive		794678	0					
ANR	795118	ArgumentList			794678	1					
ANR	795119	CompoundStatement		75:33:1889:1889	794678	1					
ANR	795120	Statement	if	2391:4:62144:62145	794678	0	True				
ANR	795121	Statement	(	2391:7:62147:62147	794678	1	True				
ANR	795122	Statement	!	2391:8:62148:62148	794678	2	True				
ANR	795123	Statement	r_cons_yesno	2391:9:62149:62160	794678	3	True				
ANR	795124	Statement	(	2391:22:62162:62162	794678	4	True				
ANR	795125	Statement	'n'	2391:23:62163:62165	794678	5	True				
ANR	795126	Statement	","	2391:26:62166:62166	794678	6	True				
ANR	795127	Statement	"""Are you sure to repeat this %"""	2391:28:62168:62198	794678	7	True				
ANR	795128	Statement	PFMT64d	2391:59:62199:62205	794678	8	True				
ANR	795129	Statement	""" times? (y/N)"""	2391:66:62206:62220	794678	9	True				
ANR	795130	Statement	","	2391:81:62221:62221	794678	10	True				
ANR	795131	Statement	rep	2391:83:62223:62225	794678	11	True				
ANR	795132	Statement	)	2391:86:62226:62226	794678	12	True				
ANR	795133	Statement	)	2391:87:62227:62227	794678	13	True				
ANR	795134	CompoundStatement		76:89:1980:1980	794678	14					
ANR	795135	GotoStatement	goto beach ;	2392:5:62236:62246	794678	0	True				
ANR	795136	Identifier	beach		794678	0					
ANR	795137	IdentifierDeclStatement	"const char * cmdrep = core -> cmdtimes ? core -> cmdtimes : """" ;"	2398:1:62314:62370	794678	18	True				
ANR	795138	IdentifierDecl	"* cmdrep = core -> cmdtimes ? core -> cmdtimes : """""		794678	0					
ANR	795139	IdentifierDeclType	const char *		794678	0					
ANR	795140	Identifier	cmdrep		794678	1					
ANR	795141	AssignmentExpression	"* cmdrep = core -> cmdtimes ? core -> cmdtimes : """""		794678	2		=			
ANR	795142	Identifier	cmdrep		794678	0					
ANR	795143	ConditionalExpression	"core -> cmdtimes ? core -> cmdtimes : """""		794678	1					
ANR	795144	Condition	core -> cmdtimes		794678	0					
ANR	795145	PtrMemberAccess	core -> cmdtimes		794678	0					
ANR	795146	Identifier	core		794678	0					
ANR	795147	Identifier	cmdtimes		794678	1					
ANR	795148	PtrMemberAccess	core -> cmdtimes		794678	1					
ANR	795149	Identifier	core		794678	0					
ANR	795150	Identifier	cmdtimes		794678	1					
ANR	795151	PrimaryExpression	""""""		794678	2					
ANR	795152	ExpressionStatement	orep = rep	2399:1:62373:62383	794678	19	True				
ANR	795153	AssignmentExpression	orep = rep		794678	0		=			
ANR	795154	Identifier	orep		794678	0					
ANR	795155	Identifier	rep		794678	1					
ANR	795156	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	2401:1:62387:62417	794678	20	True				
ANR	795157	CallExpression	"r_cons_break_push ( NULL , NULL )"		794678	0					
ANR	795158	Callee	r_cons_break_push		794678	0					
ANR	795159	Identifier	r_cons_break_push		794678	0					
ANR	795160	ArgumentList	NULL		794678	1					
ANR	795161	Argument	NULL		794678	0					
ANR	795162	Identifier	NULL		794678	0					
ANR	795163	Argument	NULL		794678	1					
ANR	795164	Identifier	NULL		794678	0					
ANR	795165	IdentifierDeclStatement	int ocur_enabled = core -> print && core -> print -> cur_enabled ;	2403:1:62421:62479	794678	21	True				
ANR	795166	IdentifierDecl	ocur_enabled = core -> print && core -> print -> cur_enabled		794678	0					
ANR	795167	IdentifierDeclType	int		794678	0					
ANR	795168	Identifier	ocur_enabled		794678	1					
ANR	795169	AssignmentExpression	ocur_enabled = core -> print && core -> print -> cur_enabled		794678	2		=			
ANR	795170	Identifier	ocur_enabled		794678	0					
ANR	795171	AndExpression	core -> print && core -> print -> cur_enabled		794678	1		&&			
ANR	795172	PtrMemberAccess	core -> print		794678	0					
ANR	795173	Identifier	core		794678	0					
ANR	795174	Identifier	print		794678	1					
ANR	795175	PtrMemberAccess	core -> print -> cur_enabled		794678	1					
ANR	795176	PtrMemberAccess	core -> print		794678	0					
ANR	795177	Identifier	core		794678	0					
ANR	795178	Identifier	print		794678	1					
ANR	795179	Identifier	cur_enabled		794678	1					
ANR	795180	WhileStatement	while ( rep -- && * cmd )		794678	22					
ANR	795181	Condition	rep -- && * cmd	2404:8:62489:62501	794678	0	True				
ANR	795182	AndExpression	rep -- && * cmd		794678	0		&&			
ANR	795183	PostIncDecOperationExpression	rep --		794678	0					
ANR	795184	Identifier	rep		794678	0					
ANR	795185	IncDec	--		794678	1					
ANR	795186	UnaryOperationExpression	* cmd		794678	1					
ANR	795187	UnaryOperator	*		794678	0					
ANR	795188	Identifier	cmd		794678	1					
ANR	795189	CompoundStatement		101:2:2498:2524	794678	1					
ANR	795190	IfStatement	if ( core -> print )		794678	0					
ANR	795191	Condition	core -> print	2405:6:62512:62522	794678	0	True				
ANR	795192	PtrMemberAccess	core -> print		794678	0					
ANR	795193	Identifier	core		794678	0					
ANR	795194	Identifier	print		794678	1					
ANR	795195	CompoundStatement		90:19:2276:2276	794678	1					
ANR	795196	ExpressionStatement	core -> print -> cur_enabled = false	2406:3:62530:62562	794678	0	True				
ANR	795197	AssignmentExpression	core -> print -> cur_enabled = false		794678	0		=			
ANR	795198	PtrMemberAccess	core -> print -> cur_enabled		794678	0					
ANR	795199	PtrMemberAccess	core -> print		794678	0					
ANR	795200	Identifier	core		794678	0					
ANR	795201	Identifier	print		794678	1					
ANR	795202	Identifier	cur_enabled		794678	1					
ANR	795203	Identifier	false		794678	1					
ANR	795204	IfStatement	if ( ocur_enabled && core -> seltab >= 0 )		794678	1					
ANR	795205	Condition	ocur_enabled && core -> seltab >= 0	2407:7:62571:62603	794678	0	True				
ANR	795206	AndExpression	ocur_enabled && core -> seltab >= 0		794678	0		&&			
ANR	795207	Identifier	ocur_enabled		794678	0					
ANR	795208	RelationalExpression	core -> seltab >= 0		794678	1		>=			
ANR	795209	PtrMemberAccess	core -> seltab		794678	0					
ANR	795210	Identifier	core		794678	0					
ANR	795211	Identifier	seltab		794678	1					
ANR	795212	PrimaryExpression	0		794678	1					
ANR	795213	CompoundStatement		92:42:2357:2357	794678	1					
ANR	795214	IfStatement	if ( core -> seltab == core -> curtab )		794678	0					
ANR	795215	Condition	core -> seltab == core -> curtab	2408:8:62616:62643	794678	0	True				
ANR	795216	EqualityExpression	core -> seltab == core -> curtab		794678	0		==			
ANR	795217	PtrMemberAccess	core -> seltab		794678	0					
ANR	795218	Identifier	core		794678	0					
ANR	795219	Identifier	seltab		794678	1					
ANR	795220	PtrMemberAccess	core -> curtab		794678	1					
ANR	795221	Identifier	core		794678	0					
ANR	795222	Identifier	curtab		794678	1					
ANR	795223	CompoundStatement		93:38:2397:2397	794678	1					
ANR	795224	ExpressionStatement	core -> print -> cur_enabled = true	2409:5:62653:62684	794678	0	True				
ANR	795225	AssignmentExpression	core -> print -> cur_enabled = true		794678	0		=			
ANR	795226	PtrMemberAccess	core -> print -> cur_enabled		794678	0					
ANR	795227	PtrMemberAccess	core -> print		794678	0					
ANR	795228	Identifier	core		794678	0					
ANR	795229	Identifier	print		794678	1					
ANR	795230	Identifier	cur_enabled		794678	1					
ANR	795231	Identifier	true		794678	1					
ANR	795232	IfStatement	if ( r_cons_is_breaked ( ) )		794678	1					
ANR	795233	Condition	r_cons_is_breaked ( )	2413:6:62707:62726	794678	0	True				
ANR	795234	CallExpression	r_cons_is_breaked ( )		794678	0					
ANR	795235	Callee	r_cons_is_breaked		794678	0					
ANR	795236	Identifier	r_cons_is_breaked		794678	0					
ANR	795237	ArgumentList			794678	1					
ANR	795238	CompoundStatement		98:28:2480:2480	794678	1					
ANR	795239	BreakStatement	break ;	2414:3:62734:62739	794678	0	True				
ANR	795240	IdentifierDeclStatement	char * cr = strdup ( cmdrep ) ;	2416:2:62747:62773	794678	2	True				
ANR	795241	IdentifierDecl	* cr = strdup ( cmdrep )		794678	0					
ANR	795242	IdentifierDeclType	char *		794678	0					
ANR	795243	Identifier	cr		794678	1					
ANR	795244	AssignmentExpression	* cr = strdup ( cmdrep )		794678	2		=			
ANR	795245	Identifier	cr		794678	0					
ANR	795246	CallExpression	strdup ( cmdrep )		794678	1					
ANR	795247	Callee	strdup		794678	0					
ANR	795248	Identifier	strdup		794678	0					
ANR	795249	ArgumentList	cmdrep		794678	1					
ANR	795250	Argument	cmdrep		794678	0					
ANR	795251	Identifier	cmdrep		794678	0					
ANR	795252	ExpressionStatement	core -> break_loop = false	2417:2:62777:62801	794678	3	True				
ANR	795253	AssignmentExpression	core -> break_loop = false		794678	0		=			
ANR	795254	PtrMemberAccess	core -> break_loop		794678	0					
ANR	795255	Identifier	core		794678	0					
ANR	795256	Identifier	break_loop		794678	1					
ANR	795257	Identifier	false		794678	1					
ANR	795258	ExpressionStatement	"ret = r_core_cmd_subst_i ( core , cmd , colon , ( rep == orep - 1 ) ? & tmpseek : NULL )"	2418:2:62805:62885	794678	4	True				
ANR	795259	AssignmentExpression	"ret = r_core_cmd_subst_i ( core , cmd , colon , ( rep == orep - 1 ) ? & tmpseek : NULL )"		794678	0		=			
ANR	795260	Identifier	ret		794678	0					
ANR	795261	CallExpression	"r_core_cmd_subst_i ( core , cmd , colon , ( rep == orep - 1 ) ? & tmpseek : NULL )"		794678	1					
ANR	795262	Callee	r_core_cmd_subst_i		794678	0					
ANR	795263	Identifier	r_core_cmd_subst_i		794678	0					
ANR	795264	ArgumentList	core		794678	1					
ANR	795265	Argument	core		794678	0					
ANR	795266	Identifier	core		794678	0					
ANR	795267	Argument	cmd		794678	1					
ANR	795268	Identifier	cmd		794678	0					
ANR	795269	Argument	colon		794678	2					
ANR	795270	Identifier	colon		794678	0					
ANR	795271	Argument	( rep == orep - 1 ) ? & tmpseek : NULL		794678	3					
ANR	795272	ConditionalExpression	( rep == orep - 1 ) ? & tmpseek : NULL		794678	0					
ANR	795273	Condition	rep == orep - 1		794678	0					
ANR	795274	EqualityExpression	rep == orep - 1		794678	0		==			
ANR	795275	Identifier	rep		794678	0					
ANR	795276	AdditiveExpression	orep - 1		794678	1		-			
ANR	795277	Identifier	orep		794678	0					
ANR	795278	PrimaryExpression	1		794678	1					
ANR	795279	UnaryOperationExpression	& tmpseek		794678	1					
ANR	795280	UnaryOperator	&		794678	0					
ANR	795281	Identifier	tmpseek		794678	1					
ANR	795282	Identifier	NULL		794678	2					
ANR	795283	IfStatement	if ( ret && * cmd == 'q' )		794678	5					
ANR	795284	Condition	ret && * cmd == 'q'	2419:6:62893:62910	794678	0	True				
ANR	795285	AndExpression	ret && * cmd == 'q'		794678	0		&&			
ANR	795286	Identifier	ret		794678	0					
ANR	795287	EqualityExpression	* cmd == 'q'		794678	1		==			
ANR	795288	UnaryOperationExpression	* cmd		794678	0					
ANR	795289	UnaryOperator	*		794678	0					
ANR	795290	Identifier	cmd		794678	1					
ANR	795291	PrimaryExpression	'q'		794678	1					
ANR	795292	CompoundStatement		104:26:2664:2664	794678	1					
ANR	795293	ExpressionStatement	free ( cr )	2420:3:62918:62927	794678	0	True				
ANR	795294	CallExpression	free ( cr )		794678	0					
ANR	795295	Callee	free		794678	0					
ANR	795296	Identifier	free		794678	0					
ANR	795297	ArgumentList	cr		794678	1					
ANR	795298	Argument	cr		794678	0					
ANR	795299	Identifier	cr		794678	0					
ANR	795300	GotoStatement	goto beach ;	2421:3:62932:62942	794678	1	True				
ANR	795301	Identifier	beach		794678	0					
ANR	795302	IfStatement	if ( core -> break_loop )		794678	6					
ANR	795303	Condition	core -> break_loop	2423:6:62954:62969	794678	0	True				
ANR	795304	PtrMemberAccess	core -> break_loop		794678	0					
ANR	795305	Identifier	core		794678	0					
ANR	795306	Identifier	break_loop		794678	1					
ANR	795307	CompoundStatement		108:24:2723:2723	794678	1					
ANR	795308	ExpressionStatement	free ( cr )	2424:3:62977:62986	794678	0	True				
ANR	795309	CallExpression	free ( cr )		794678	0					
ANR	795310	Callee	free		794678	0					
ANR	795311	Identifier	free		794678	0					
ANR	795312	ArgumentList	cr		794678	1					
ANR	795313	Argument	cr		794678	0					
ANR	795314	Identifier	cr		794678	0					
ANR	795315	BreakStatement	break ;	2425:3:62991:62996	794678	1	True				
ANR	795316	IfStatement	if ( cr && * cr && orep > 1 )		794678	7					
ANR	795317	Condition	cr && * cr && orep > 1	2427:6:63008:63028	794678	0	True				
ANR	795318	AndExpression	cr && * cr && orep > 1		794678	0		&&			
ANR	795319	Identifier	cr		794678	0					
ANR	795320	AndExpression	* cr && orep > 1		794678	1		&&			
ANR	795321	UnaryOperationExpression	* cr		794678	0					
ANR	795322	UnaryOperator	*		794678	0					
ANR	795323	Identifier	cr		794678	1					
ANR	795324	RelationalExpression	orep > 1		794678	1		>			
ANR	795325	Identifier	orep		794678	0					
ANR	795326	PrimaryExpression	1		794678	1					
ANR	795327	CompoundStatement		112:29:2782:2782	794678	1					
ANR	795328	ExpressionStatement	r_cons_flush ( )	2429:3:63106:63121	794678	0	True				
ANR	795329	CallExpression	r_cons_flush ( )		794678	0					
ANR	795330	Callee	r_cons_flush		794678	0					
ANR	795331	Identifier	r_cons_flush		794678	0					
ANR	795332	ArgumentList			794678	1					
ANR	795333	ExpressionStatement	"( void ) r_core_cmd0 ( core , "".dr*"" )"	2431:3:63172:63204	794678	1	True				
ANR	795334	CastExpression	"( void ) r_core_cmd0 ( core , "".dr*"" )"		794678	0					
ANR	795335	CastTarget	void		794678	0					
ANR	795336	CallExpression	"r_core_cmd0 ( core , "".dr*"" )"		794678	1					
ANR	795337	Callee	r_core_cmd0		794678	0					
ANR	795338	Identifier	r_core_cmd0		794678	0					
ANR	795339	ArgumentList	core		794678	1					
ANR	795340	Argument	core		794678	0					
ANR	795341	Identifier	core		794678	0					
ANR	795342	Argument	""".dr*"""		794678	1					
ANR	795343	PrimaryExpression	""".dr*"""		794678	0					
ANR	795344	ExpressionStatement	"( void ) r_core_cmd0 ( core , cr )"	2432:3:63209:63237	794678	2	True				
ANR	795345	CastExpression	"( void ) r_core_cmd0 ( core , cr )"		794678	0					
ANR	795346	CastTarget	void		794678	0					
ANR	795347	CallExpression	"r_core_cmd0 ( core , cr )"		794678	1					
ANR	795348	Callee	r_core_cmd0		794678	0					
ANR	795349	Identifier	r_core_cmd0		794678	0					
ANR	795350	ArgumentList	core		794678	1					
ANR	795351	Argument	core		794678	0					
ANR	795352	Identifier	core		794678	0					
ANR	795353	Argument	cr		794678	1					
ANR	795354	Identifier	cr		794678	0					
ANR	795355	ExpressionStatement	free ( cr )	2434:2:63245:63254	794678	8	True				
ANR	795356	CallExpression	free ( cr )		794678	0					
ANR	795357	Callee	free		794678	0					
ANR	795358	Identifier	free		794678	0					
ANR	795359	ArgumentList	cr		794678	1					
ANR	795360	Argument	cr		794678	0					
ANR	795361	Identifier	cr		794678	0					
ANR	795362	ExpressionStatement	r_cons_break_pop ( )	2437:1:63261:63280	794678	23	True				
ANR	795363	CallExpression	r_cons_break_pop ( )		794678	0					
ANR	795364	Callee	r_cons_break_pop		794678	0					
ANR	795365	Identifier	r_cons_break_pop		794678	0					
ANR	795366	ArgumentList			794678	1					
ANR	795367	IfStatement	if ( tmpseek )		794678	24					
ANR	795368	Condition	tmpseek	2439:5:63288:63294	794678	0	True				
ANR	795369	Identifier	tmpseek		794678	0					
ANR	795370	CompoundStatement		124:14:3048:3048	794678	1					
ANR	795371	ExpressionStatement	"r_core_seek ( core , orig_offset , 1 )"	2440:2:63301:63335	794678	0	True				
ANR	795372	CallExpression	"r_core_seek ( core , orig_offset , 1 )"		794678	0					
ANR	795373	Callee	r_core_seek		794678	0					
ANR	795374	Identifier	r_core_seek		794678	0					
ANR	795375	ArgumentList	core		794678	1					
ANR	795376	Argument	core		794678	0					
ANR	795377	Identifier	core		794678	0					
ANR	795378	Argument	orig_offset		794678	1					
ANR	795379	Identifier	orig_offset		794678	0					
ANR	795380	Argument	1		794678	2					
ANR	795381	PrimaryExpression	1		794678	0					
ANR	795382	ExpressionStatement	core -> tmpseek = original_tmpseek	2441:2:63339:63371	794678	1	True				
ANR	795383	AssignmentExpression	core -> tmpseek = original_tmpseek		794678	0		=			
ANR	795384	PtrMemberAccess	core -> tmpseek		794678	0					
ANR	795385	Identifier	core		794678	0					
ANR	795386	Identifier	tmpseek		794678	1					
ANR	795387	Identifier	original_tmpseek		794678	1					
ANR	795388	IfStatement	if ( core -> print )		794678	25					
ANR	795389	Condition	core -> print	2443:5:63381:63391	794678	0	True				
ANR	795390	PtrMemberAccess	core -> print		794678	0					
ANR	795391	Identifier	core		794678	0					
ANR	795392	Identifier	print		794678	1					
ANR	795393	CompoundStatement		128:18:3145:3145	794678	1					
ANR	795394	ExpressionStatement	core -> print -> cur_enabled = ocur_enabled	2444:2:63398:63437	794678	0	True				
ANR	795395	AssignmentExpression	core -> print -> cur_enabled = ocur_enabled		794678	0		=			
ANR	795396	PtrMemberAccess	core -> print -> cur_enabled		794678	0					
ANR	795397	PtrMemberAccess	core -> print		794678	0					
ANR	795398	Identifier	core		794678	0					
ANR	795399	Identifier	print		794678	1					
ANR	795400	Identifier	cur_enabled		794678	1					
ANR	795401	Identifier	ocur_enabled		794678	1					
ANR	795402	IfStatement	if ( colon && colon [ 1 ] )		794678	26					
ANR	795403	Condition	colon && colon [ 1 ]	2446:5:63447:63463	794678	0	True				
ANR	795404	AndExpression	colon && colon [ 1 ]		794678	0		&&			
ANR	795405	Identifier	colon		794678	0					
ANR	795406	ArrayIndexing	colon [ 1 ]		794678	1					
ANR	795407	Identifier	colon		794678	0					
ANR	795408	PrimaryExpression	1		794678	1					
ANR	795409	CompoundStatement		131:24:3217:3217	794678	1					
ANR	795410	ForStatement	for ( ++ colon ; * colon == ';' ; colon ++ )		794678	0					
ANR	795411	ForInit	++ colon ;	2447:7:63475:63482	794678	0	True				
ANR	795412	UnaryExpression	++ colon		794678	0					
ANR	795413	IncDec	++		794678	0					
ANR	795414	Identifier	colon		794678	1					
ANR	795415	Condition	* colon == ';'	2447:16:63484:63496	794678	1	True				
ANR	795416	EqualityExpression	* colon == ';'		794678	0		==			
ANR	795417	UnaryOperationExpression	* colon		794678	0					
ANR	795418	UnaryOperator	*		794678	0					
ANR	795419	Identifier	colon		794678	1					
ANR	795420	PrimaryExpression	';'		794678	1					
ANR	795421	PostIncDecOperationExpression	colon ++	2447:31:63499:63505	794678	2	True				
ANR	795422	Identifier	colon		794678	0					
ANR	795423	IncDec	++		794678	1					
ANR	795424	CompoundStatement		132:40:3259:3259	794678	3					
ANR	795425	ExpressionStatement		2448:3:63513:63513	794678	0	True				
ANR	795426	ExpressionStatement	"r_core_cmd_subst ( core , colon )"	2450:2:63521:63551	794678	1	True				
ANR	795427	CallExpression	"r_core_cmd_subst ( core , colon )"		794678	0					
ANR	795428	Callee	r_core_cmd_subst		794678	0					
ANR	795429	Identifier	r_core_cmd_subst		794678	0					
ANR	795430	ArgumentList	core		794678	1					
ANR	795431	Argument	core		794678	0					
ANR	795432	Identifier	core		794678	0					
ANR	795433	Argument	colon		794678	1					
ANR	795434	Identifier	colon		794678	0					
ANR	795435	ElseStatement	else		794678	0					
ANR	795436	CompoundStatement		136:8:3312:3312	794678	0					
ANR	795437	IfStatement	if ( ! * icmd )		794678	0					
ANR	795438	Condition	! * icmd	2452:6:63569:63574	794678	0	True				
ANR	795439	UnaryOperationExpression	! * icmd		794678	0					
ANR	795440	UnaryOperator	!		794678	0					
ANR	795441	UnaryOperationExpression	* icmd		794678	1					
ANR	795442	UnaryOperator	*		794678	0					
ANR	795443	Identifier	icmd		794678	1					
ANR	795444	CompoundStatement		137:14:3328:3328	794678	1					
ANR	795445	ExpressionStatement	r_core_cmd_nullcallback ( core )	2453:3:63582:63612	794678	0	True				
ANR	795446	CallExpression	r_core_cmd_nullcallback ( core )		794678	0					
ANR	795447	Callee	r_core_cmd_nullcallback		794678	0					
ANR	795448	Identifier	r_core_cmd_nullcallback		794678	0					
ANR	795449	ArgumentList	core		794678	1					
ANR	795450	Argument	core		794678	0					
ANR	795451	Identifier	core		794678	0					
ANR	795452	Label	beach :	2456:0:63621:63626	794678	27	True				
ANR	795453	Identifier	beach		794678	0					
ANR	795454	ExpressionStatement	free ( icmd )	2457:1:63629:63640	794678	28	True				
ANR	795455	CallExpression	free ( icmd )		794678	0					
ANR	795456	Callee	free		794678	0					
ANR	795457	Identifier	free		794678	0					
ANR	795458	ArgumentList	icmd		794678	1					
ANR	795459	Argument	icmd		794678	0					
ANR	795460	Identifier	icmd		794678	0					
ANR	795461	ReturnStatement	return ret ;	2458:1:63643:63653	794678	29	True				
ANR	795462	Identifier	ret		794678	0					
ANR	795463	ReturnType	static int		794678	1					
ANR	795464	Identifier	r_core_cmd_subst		794678	2					
ANR	795465	ParameterList	"RCore * core , char * cmd"		794678	3					
ANR	795466	Parameter	RCore * core	2316:28:60224:60234	794678	0	True				
ANR	795467	ParameterType	RCore *		794678	0					
ANR	795468	Identifier	core		794678	1					
ANR	795469	Parameter	char * cmd	2316:41:60237:60245	794678	1	True				
ANR	795470	ParameterType	char *		794678	0					
ANR	795471	Identifier	cmd		794678	1					
ANR	795472	CFGEntryNode	ENTRY		794678		True				
ANR	795473	CFGExitNode	EXIT		794678		True				
ANR	795474	Symbol	icmd		794678						
ANR	795475	Symbol	core -> offset		794678						
ANR	795476	Symbol	strchr		794678						
ANR	795477	Symbol	core -> max_cmd_depth		794678						
ANR	795478	Symbol	* cmt		794678						
ANR	795479	Symbol	strlen		794678						
ANR	795480	Symbol	& tmpseek		794678						
ANR	795481	Symbol	original_tmpseek		794678						
ANR	795482	Symbol	* cmd		794678						
ANR	795483	Symbol	rep		794678						
ANR	795484	Symbol	core -> tmpseek		794678						
ANR	795485	Symbol	ret		794678						
ANR	795486	Symbol	* http		794678						
ANR	795487	Symbol	r_cons_is_interactive		794678						
ANR	795488	Symbol	NULL		794678						
ANR	795489	Symbol	* * core -> cons		794678						
ANR	795490	Symbol	core		794678						
ANR	795491	Symbol	* * * core		794678						
ANR	795492	Symbol	r_core_cmd0		794678						
ANR	795493	Symbol	strstr		794678						
ANR	795494	Symbol	* cr		794678						
ANR	795495	Symbol	true		794678						
ANR	795496	Symbol	http		794678						
ANR	795497	Symbol	cmd		794678						
ANR	795498	Symbol	tmpseek		794678						
ANR	795499	Symbol	core -> print		794678						
ANR	795500	Symbol	cmdrep		794678						
ANR	795501	Symbol	core -> cons -> context		794678						
ANR	795502	Symbol	* core -> cons		794678						
ANR	795503	Symbol	r_sandbox_enable		794678						
ANR	795504	Symbol	* core		794678						
ANR	795505	Symbol	cmt		794678						
ANR	795506	Symbol	r_core_cmd_nullcallback		794678						
ANR	795507	Symbol	core -> cmdtimes		794678						
ANR	795508	Symbol	r_core_cmd_subst_i		794678						
ANR	795509	Symbol	strtoull		794678						
ANR	795510	Symbol	core -> break_loop		794678						
ANR	795511	Symbol	INTERACTIVE_MAX_REP		794678						
ANR	795512	Symbol	ocur_enabled		794678						
ANR	795513	Symbol	r_cons_is_breaked		794678						
ANR	795514	Symbol	core -> cons		794678						
ANR	795515	Symbol	* core -> cons -> context		794678						
ANR	795516	Symbol	r_str_trim_head_tail		794678						
ANR	795517	Symbol	* * core		794678						
ANR	795518	Symbol	r_str_startswith		794678						
ANR	795519	Symbol	core -> cmdrepeat		794678						
ANR	795520	Symbol	core -> curtab		794678						
ANR	795521	Symbol	false		794678						
ANR	795522	Symbol	r_str_firstbut		794678						
ANR	795523	Symbol	* colon		794678						
ANR	795524	Symbol	IS_DIGIT		794678						
ANR	795525	Symbol	cr		794678						
ANR	795526	Symbol	* core -> print		794678						
ANR	795527	Symbol	colon		794678						
ANR	795528	Symbol	* icmd		794678						
ANR	795529	Symbol	core -> seltab		794678						
ANR	795530	Symbol	orep		794678						
ANR	795531	Symbol	core -> prompt_offset		794678						
ANR	795532	Symbol	strdup		794678						
ANR	795533	Symbol	orig_offset		794678						
ANR	795534	Symbol	core -> print -> cur_enabled		794678						
ANR	795535	Symbol	core -> cons -> context -> cmd_depth		794678						
ANR	795536	Function	find_eoq	2461:0:63658:63804							
ANR	795537	FunctionDef	find_eoq (char * p)		795536	0					
ANR	795538	CompoundStatement		2461:31:63689:63804	795536	0					
ANR	795539	ForStatement	for ( ; * p ; p ++ )		795536	0					
ANR	795540	Condition	* p	2462:8:63699:63700	795536	0	True				
ANR	795541	UnaryOperationExpression	* p		795536	0					
ANR	795542	UnaryOperator	*		795536	0					
ANR	795543	Identifier	p		795536	1					
ANR	795544	PostIncDecOperationExpression	p ++	2462:12:63703:63705	795536	1	True				
ANR	795545	Identifier	p		795536	0					
ANR	795546	IncDec	++		795536	1					
ANR	795547	CompoundStatement		2:17:18:18	795536	2					
ANR	795548	IfStatement	"if ( * p == '""' )"		795536	0					
ANR	795549	Condition	"* p == '""'"	2463:6:63716:63724	795536	0	True				
ANR	795550	EqualityExpression	"* p == '""'"		795536	0		==			
ANR	795551	UnaryOperationExpression	* p		795536	0					
ANR	795552	UnaryOperator	*		795536	0					
ANR	795553	Identifier	p		795536	1					
ANR	795554	PrimaryExpression	"'""'"		795536	1					
ANR	795555	CompoundStatement		3:17:37:37	795536	1					
ANR	795556	BreakStatement	break ;	2464:3:63732:63737	795536	0	True				
ANR	795557	IfStatement	"if ( * p == '\\\\' && p [ 1 ] == '""' )"		795536	1					
ANR	795558	Condition	"* p == '\\\\' && p [ 1 ] == '""'"	2466:6:63749:63773	795536	0	True				
ANR	795559	AndExpression	"* p == '\\\\' && p [ 1 ] == '""'"		795536	0		&&			
ANR	795560	EqualityExpression	* p == '\\\\'		795536	0		==			
ANR	795561	UnaryOperationExpression	* p		795536	0					
ANR	795562	UnaryOperator	*		795536	0					
ANR	795563	Identifier	p		795536	1					
ANR	795564	PrimaryExpression	'\\\\'		795536	1					
ANR	795565	EqualityExpression	"p [ 1 ] == '""'"		795536	1		==			
ANR	795566	ArrayIndexing	p [ 1 ]		795536	0					
ANR	795567	Identifier	p		795536	0					
ANR	795568	PrimaryExpression	1		795536	1					
ANR	795569	PrimaryExpression	"'""'"		795536	1					
ANR	795570	CompoundStatement		6:33:86:86	795536	1					
ANR	795571	ExpressionStatement	p ++	2467:3:63781:63784	795536	0	True				
ANR	795572	PostIncDecOperationExpression	p ++		795536	0					
ANR	795573	Identifier	p		795536	0					
ANR	795574	IncDec	++		795536	1					
ANR	795575	ReturnStatement	return p ;	2470:1:63794:63802	795536	1	True				
ANR	795576	Identifier	p		795536	0					
ANR	795577	ReturnType	static char *		795536	1					
ANR	795578	Identifier	find_eoq		795536	2					
ANR	795579	ParameterList	char * p		795536	3					
ANR	795580	Parameter	char * p	2461:22:63680:63686	795536	0	True				
ANR	795581	ParameterType	char *		795536	0					
ANR	795582	Identifier	p		795536	1					
ANR	795583	CFGEntryNode	ENTRY		795536		True				
ANR	795584	CFGExitNode	EXIT		795536		True				
ANR	795585	Symbol	p		795536						
ANR	795586	Symbol	* p		795536						
ANR	795587	Function	findSeparator	2473:0:63807:63923							
ANR	795588	FunctionDef	findSeparator (char * p)		795587	0					
ANR	795589	CompoundStatement		2473:36:63843:63923	795587	0					
ANR	795590	IdentifierDeclStatement	"char * q = strchr ( p , '+' ) ;"	2474:1:63846:63871	795587	0	True				
ANR	795591	IdentifierDecl	"* q = strchr ( p , '+' )"		795587	0					
ANR	795592	IdentifierDeclType	char *		795587	0					
ANR	795593	Identifier	q		795587	1					
ANR	795594	AssignmentExpression	"* q = strchr ( p , '+' )"		795587	2		=			
ANR	795595	Identifier	q		795587	0					
ANR	795596	CallExpression	"strchr ( p , '+' )"		795587	1					
ANR	795597	Callee	strchr		795587	0					
ANR	795598	Identifier	strchr		795587	0					
ANR	795599	ArgumentList	p		795587	1					
ANR	795600	Argument	p		795587	0					
ANR	795601	Identifier	p		795587	0					
ANR	795602	Argument	'+'		795587	1					
ANR	795603	PrimaryExpression	'+'		795587	0					
ANR	795604	IfStatement	if ( q )		795587	1					
ANR	795605	Condition	q	2475:5:63878:63878	795587	0	True				
ANR	795606	Identifier	q		795587	0					
ANR	795607	CompoundStatement		3:8:37:37	795587	1					
ANR	795608	ReturnStatement	return q ;	2476:2:63885:63893	795587	0	True				
ANR	795609	Identifier	q		795587	0					
ANR	795610	ReturnStatement	"return strchr ( p , '-' ) ;"	2478:1:63899:63921	795587	2	True				
ANR	795611	CallExpression	"strchr ( p , '-' )"		795587	0					
ANR	795612	Callee	strchr		795587	0					
ANR	795613	Identifier	strchr		795587	0					
ANR	795614	ArgumentList	p		795587	1					
ANR	795615	Argument	p		795587	0					
ANR	795616	Identifier	p		795587	0					
ANR	795617	Argument	'-'		795587	1					
ANR	795618	PrimaryExpression	'-'		795587	0					
ANR	795619	ReturnType	static char *		795587	1					
ANR	795620	Identifier	findSeparator		795587	2					
ANR	795621	ParameterList	char * p		795587	3					
ANR	795622	Parameter	char * p	2473:27:63834:63840	795587	0	True				
ANR	795623	ParameterType	char *		795587	0					
ANR	795624	Identifier	p		795587	1					
ANR	795625	CFGEntryNode	ENTRY		795587		True				
ANR	795626	CFGExitNode	EXIT		795587		True				
ANR	795627	Symbol	p		795587						
ANR	795628	Symbol	q		795587						
ANR	795629	Symbol	strchr		795587						
ANR	795630	Function	tmpenvs_free	2481:0:63926:64007							
ANR	795631	FunctionDef	tmpenvs_free (void * item)		795630	0					
ANR	795632	CompoundStatement		2481:37:63963:64007	795630	0					
ANR	795633	ExpressionStatement	"r_sys_setenv ( item , NULL )"	2482:1:63966:63991	795630	0	True				
ANR	795634	CallExpression	"r_sys_setenv ( item , NULL )"		795630	0					
ANR	795635	Callee	r_sys_setenv		795630	0					
ANR	795636	Identifier	r_sys_setenv		795630	0					
ANR	795637	ArgumentList	item		795630	1					
ANR	795638	Argument	item		795630	0					
ANR	795639	Identifier	item		795630	0					
ANR	795640	Argument	NULL		795630	1					
ANR	795641	Identifier	NULL		795630	0					
ANR	795642	ExpressionStatement	free ( item )	2483:1:63994:64005	795630	1	True				
ANR	795643	CallExpression	free ( item )		795630	0					
ANR	795644	Callee	free		795630	0					
ANR	795645	Identifier	free		795630	0					
ANR	795646	ArgumentList	item		795630	1					
ANR	795647	Argument	item		795630	0					
ANR	795648	Identifier	item		795630	0					
ANR	795649	ReturnType	static void		795630	1					
ANR	795650	Identifier	tmpenvs_free		795630	2					
ANR	795651	ParameterList	void * item		795630	3					
ANR	795652	Parameter	void * item	2481:25:63951:63960	795630	0	True				
ANR	795653	ParameterType	void *		795630	0					
ANR	795654	Identifier	item		795630	1					
ANR	795655	CFGEntryNode	ENTRY		795630		True				
ANR	795656	CFGExitNode	EXIT		795630		True				
ANR	795657	Symbol	item		795630						
ANR	795658	Symbol	NULL		795630						
ANR	795659	Function	set_tmp_arch	2486:0:64010:64286							
ANR	795660	FunctionDef	"set_tmp_arch (RCore * core , char * arch , char * * tmparch)"		795659	0					
ANR	795661	CompoundStatement		2486:66:64076:64286	795659	0					
ANR	795662	IfStatement	if ( ! tmparch )		795659	0					
ANR	795663	Condition	! tmparch	2487:5:64083:64090	795659	0	True				
ANR	795664	UnaryOperationExpression	! tmparch		795659	0					
ANR	795665	UnaryOperator	!		795659	0					
ANR	795666	Identifier	tmparch		795659	1					
ANR	795667	CompoundStatement		2:15:16:16	795659	1					
ANR	795668	ExpressionStatement	"eprintf ( ""tmparch should be set\\n"" )"	2488:2:64097:64132	795659	0	True				
ANR	795669	CallExpression	"eprintf ( ""tmparch should be set\\n"" )"		795659	0					
ANR	795670	Callee	eprintf		795659	0					
ANR	795671	Identifier	eprintf		795659	0					
ANR	795672	ArgumentList	"""tmparch should be set\\n"""		795659	1					
ANR	795673	Argument	"""tmparch should be set\\n"""		795659	0					
ANR	795674	PrimaryExpression	"""tmparch should be set\\n"""		795659	0					
ANR	795675	ExpressionStatement	"* tmparch = strdup ( r_config_get ( core -> config , ""asm.arch"" ) )"	2490:1:64138:64197	795659	1	True				
ANR	795676	AssignmentExpression	"* tmparch = strdup ( r_config_get ( core -> config , ""asm.arch"" ) )"		795659	0		=			
ANR	795677	UnaryOperationExpression	* tmparch		795659	0					
ANR	795678	UnaryOperator	*		795659	0					
ANR	795679	Identifier	tmparch		795659	1					
ANR	795680	CallExpression	"strdup ( r_config_get ( core -> config , ""asm.arch"" ) )"		795659	1					
ANR	795681	Callee	strdup		795659	0					
ANR	795682	Identifier	strdup		795659	0					
ANR	795683	ArgumentList	"r_config_get ( core -> config , ""asm.arch"" )"		795659	1					
ANR	795684	Argument	"r_config_get ( core -> config , ""asm.arch"" )"		795659	0					
ANR	795685	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		795659	0					
ANR	795686	Callee	r_config_get		795659	0					
ANR	795687	Identifier	r_config_get		795659	0					
ANR	795688	ArgumentList	core -> config		795659	1					
ANR	795689	Argument	core -> config		795659	0					
ANR	795690	PtrMemberAccess	core -> config		795659	0					
ANR	795691	Identifier	core		795659	0					
ANR	795692	Identifier	config		795659	1					
ANR	795693	Argument	"""asm.arch"""		795659	1					
ANR	795694	PrimaryExpression	"""asm.arch"""		795659	0					
ANR	795695	ExpressionStatement	"r_config_set ( core -> config , ""asm.arch"" , arch )"	2491:1:64200:64245	795659	2	True				
ANR	795696	CallExpression	"r_config_set ( core -> config , ""asm.arch"" , arch )"		795659	0					
ANR	795697	Callee	r_config_set		795659	0					
ANR	795698	Identifier	r_config_set		795659	0					
ANR	795699	ArgumentList	core -> config		795659	1					
ANR	795700	Argument	core -> config		795659	0					
ANR	795701	PtrMemberAccess	core -> config		795659	0					
ANR	795702	Identifier	core		795659	0					
ANR	795703	Identifier	config		795659	1					
ANR	795704	Argument	"""asm.arch"""		795659	1					
ANR	795705	PrimaryExpression	"""asm.arch"""		795659	0					
ANR	795706	Argument	arch		795659	2					
ANR	795707	Identifier	arch		795659	0					
ANR	795708	ExpressionStatement	core -> fixedarch = true	2492:1:64248:64270	795659	3	True				
ANR	795709	AssignmentExpression	core -> fixedarch = true		795659	0		=			
ANR	795710	PtrMemberAccess	core -> fixedarch		795659	0					
ANR	795711	Identifier	core		795659	0					
ANR	795712	Identifier	fixedarch		795659	1					
ANR	795713	Identifier	true		795659	1					
ANR	795714	ReturnStatement	return true ;	2493:1:64273:64284	795659	4	True				
ANR	795715	Identifier	true		795659	0					
ANR	795716	ReturnType	static bool		795659	1					
ANR	795717	Identifier	set_tmp_arch		795659	2					
ANR	795718	ParameterList	"RCore * core , char * arch , char * * tmparch"		795659	3					
ANR	795719	Parameter	RCore * core	2486:25:64035:64045	795659	0	True				
ANR	795720	ParameterType	RCore *		795659	0					
ANR	795721	Identifier	core		795659	1					
ANR	795722	Parameter	char * arch	2486:38:64048:64057	795659	1	True				
ANR	795723	ParameterType	char *		795659	0					
ANR	795724	Identifier	arch		795659	1					
ANR	795725	Parameter	char * * tmparch	2486:50:64060:64073	795659	2	True				
ANR	795726	ParameterType	char * *		795659	0					
ANR	795727	Identifier	tmparch		795659	1					
ANR	795728	CFGEntryNode	ENTRY		795659		True				
ANR	795729	CFGExitNode	EXIT		795659		True				
ANR	795730	Symbol	core -> config		795659						
ANR	795731	Symbol	core		795659						
ANR	795732	Symbol	tmparch		795659						
ANR	795733	Symbol	* core		795659						
ANR	795734	Symbol	r_config_get		795659						
ANR	795735	Symbol	true		795659						
ANR	795736	Symbol	core -> fixedarch		795659						
ANR	795737	Symbol	arch		795659						
ANR	795738	Symbol	strdup		795659						
ANR	795739	Symbol	* tmparch		795659						
ANR	795740	Function	set_tmp_bits	2496:0:64289:64565							
ANR	795741	FunctionDef	"set_tmp_bits (RCore * core , int bits , char * * tmpbits)"		795740	0					
ANR	795742	CompoundStatement		2496:64:64353:64565	795740	0					
ANR	795743	IfStatement	if ( ! tmpbits )		795740	0					
ANR	795744	Condition	! tmpbits	2497:5:64360:64367	795740	0	True				
ANR	795745	UnaryOperationExpression	! tmpbits		795740	0					
ANR	795746	UnaryOperator	!		795740	0					
ANR	795747	Identifier	tmpbits		795740	1					
ANR	795748	CompoundStatement		2:15:16:16	795740	1					
ANR	795749	ExpressionStatement	"eprintf ( ""tmpbits should be set\\n"" )"	2498:2:64374:64409	795740	0	True				
ANR	795750	CallExpression	"eprintf ( ""tmpbits should be set\\n"" )"		795740	0					
ANR	795751	Callee	eprintf		795740	0					
ANR	795752	Identifier	eprintf		795740	0					
ANR	795753	ArgumentList	"""tmpbits should be set\\n"""		795740	1					
ANR	795754	Argument	"""tmpbits should be set\\n"""		795740	0					
ANR	795755	PrimaryExpression	"""tmpbits should be set\\n"""		795740	0					
ANR	795756	ExpressionStatement	"* tmpbits = strdup ( r_config_get ( core -> config , ""asm.bits"" ) )"	2500:1:64415:64474	795740	1	True				
ANR	795757	AssignmentExpression	"* tmpbits = strdup ( r_config_get ( core -> config , ""asm.bits"" ) )"		795740	0		=			
ANR	795758	UnaryOperationExpression	* tmpbits		795740	0					
ANR	795759	UnaryOperator	*		795740	0					
ANR	795760	Identifier	tmpbits		795740	1					
ANR	795761	CallExpression	"strdup ( r_config_get ( core -> config , ""asm.bits"" ) )"		795740	1					
ANR	795762	Callee	strdup		795740	0					
ANR	795763	Identifier	strdup		795740	0					
ANR	795764	ArgumentList	"r_config_get ( core -> config , ""asm.bits"" )"		795740	1					
ANR	795765	Argument	"r_config_get ( core -> config , ""asm.bits"" )"		795740	0					
ANR	795766	CallExpression	"r_config_get ( core -> config , ""asm.bits"" )"		795740	0					
ANR	795767	Callee	r_config_get		795740	0					
ANR	795768	Identifier	r_config_get		795740	0					
ANR	795769	ArgumentList	core -> config		795740	1					
ANR	795770	Argument	core -> config		795740	0					
ANR	795771	PtrMemberAccess	core -> config		795740	0					
ANR	795772	Identifier	core		795740	0					
ANR	795773	Identifier	config		795740	1					
ANR	795774	Argument	"""asm.bits"""		795740	1					
ANR	795775	PrimaryExpression	"""asm.bits"""		795740	0					
ANR	795776	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bits"" , bits )"	2501:1:64477:64524	795740	2	True				
ANR	795777	CallExpression	"r_config_set_i ( core -> config , ""asm.bits"" , bits )"		795740	0					
ANR	795778	Callee	r_config_set_i		795740	0					
ANR	795779	Identifier	r_config_set_i		795740	0					
ANR	795780	ArgumentList	core -> config		795740	1					
ANR	795781	Argument	core -> config		795740	0					
ANR	795782	PtrMemberAccess	core -> config		795740	0					
ANR	795783	Identifier	core		795740	0					
ANR	795784	Identifier	config		795740	1					
ANR	795785	Argument	"""asm.bits"""		795740	1					
ANR	795786	PrimaryExpression	"""asm.bits"""		795740	0					
ANR	795787	Argument	bits		795740	2					
ANR	795788	Identifier	bits		795740	0					
ANR	795789	ExpressionStatement	core -> fixedbits = true	2502:1:64527:64549	795740	3	True				
ANR	795790	AssignmentExpression	core -> fixedbits = true		795740	0		=			
ANR	795791	PtrMemberAccess	core -> fixedbits		795740	0					
ANR	795792	Identifier	core		795740	0					
ANR	795793	Identifier	fixedbits		795740	1					
ANR	795794	Identifier	true		795740	1					
ANR	795795	ReturnStatement	return true ;	2503:1:64552:64563	795740	4	True				
ANR	795796	Identifier	true		795740	0					
ANR	795797	ReturnType	static bool		795740	1					
ANR	795798	Identifier	set_tmp_bits		795740	2					
ANR	795799	ParameterList	"RCore * core , int bits , char * * tmpbits"		795740	3					
ANR	795800	Parameter	RCore * core	2496:25:64314:64324	795740	0	True				
ANR	795801	ParameterType	RCore *		795740	0					
ANR	795802	Identifier	core		795740	1					
ANR	795803	Parameter	int bits	2496:38:64327:64334	795740	1	True				
ANR	795804	ParameterType	int		795740	0					
ANR	795805	Identifier	bits		795740	1					
ANR	795806	Parameter	char * * tmpbits	2496:48:64337:64350	795740	2	True				
ANR	795807	ParameterType	char * *		795740	0					
ANR	795808	Identifier	tmpbits		795740	1					
ANR	795809	CFGEntryNode	ENTRY		795740		True				
ANR	795810	CFGExitNode	EXIT		795740		True				
ANR	795811	Symbol	core -> config		795740						
ANR	795812	Symbol	core		795740						
ANR	795813	Symbol	tmpbits		795740						
ANR	795814	Symbol	bits		795740						
ANR	795815	Symbol	* core		795740						
ANR	795816	Symbol	r_config_get		795740						
ANR	795817	Symbol	true		795740						
ANR	795818	Symbol	core -> fixedbits		795740						
ANR	795819	Symbol	strdup		795740						
ANR	795820	Symbol	* tmpbits		795740						
ANR	795821	Function	r_core_cmd_subst_i	2506:0:64568:90717							
ANR	795822	FunctionDef	"r_core_cmd_subst_i (RCore * core , char * cmd , char * colon , bool * tmpseek)"		795821	0					
ANR	795823	CompoundStatement		2506:82:64650:90717	795821	0					
ANR	795824	IdentifierDeclStatement	RList * tmpenvs = r_list_newf ( tmpenvs_free ) ;	2507:1:64653:64696	795821	0	True				
ANR	795825	IdentifierDecl	* tmpenvs = r_list_newf ( tmpenvs_free )		795821	0					
ANR	795826	IdentifierDeclType	RList *		795821	0					
ANR	795827	Identifier	tmpenvs		795821	1					
ANR	795828	AssignmentExpression	* tmpenvs = r_list_newf ( tmpenvs_free )		795821	2		=			
ANR	795829	Identifier	tmpenvs		795821	0					
ANR	795830	CallExpression	r_list_newf ( tmpenvs_free )		795821	1					
ANR	795831	Callee	r_list_newf		795821	0					
ANR	795832	Identifier	r_list_newf		795821	0					
ANR	795833	ArgumentList	tmpenvs_free		795821	1					
ANR	795834	Argument	tmpenvs_free		795821	0					
ANR	795835	Identifier	tmpenvs_free		795821	0					
ANR	795836	IdentifierDeclStatement	"const char * quotestr = ""`"" ;"	2508:1:64699:64725	795821	1	True				
ANR	795837	IdentifierDecl	"* quotestr = ""`"""		795821	0					
ANR	795838	IdentifierDeclType	const char *		795821	0					
ANR	795839	Identifier	quotestr		795821	1					
ANR	795840	AssignmentExpression	"* quotestr = ""`"""		795821	2		=			
ANR	795841	Identifier	quotestr		795821	0					
ANR	795842	PrimaryExpression	"""`"""		795821	1					
ANR	795843	IdentifierDeclStatement	const char * tick = NULL ;	2509:1:64728:64751	795821	2	True				
ANR	795844	IdentifierDecl	* tick = NULL		795821	0					
ANR	795845	IdentifierDeclType	const char *		795821	0					
ANR	795846	Identifier	tick		795821	1					
ANR	795847	AssignmentExpression	* tick = NULL		795821	2		=			
ANR	795848	Identifier	NULL		795821	0					
ANR	795849	Identifier	NULL		795821	1					
ANR	795850	IdentifierDeclStatement	"char * ptr , * ptr2 , * str ;"	2510:1:64754:64776	795821	3	True				
ANR	795851	IdentifierDecl	* ptr		795821	0					
ANR	795852	IdentifierDeclType	char *		795821	0					
ANR	795853	Identifier	ptr		795821	1					
ANR	795854	IdentifierDecl	* ptr2		795821	1					
ANR	795855	IdentifierDeclType	char *		795821	0					
ANR	795856	Identifier	ptr2		795821	1					
ANR	795857	IdentifierDecl	* str		795821	2					
ANR	795858	IdentifierDeclType	char *		795821	0					
ANR	795859	Identifier	str		795821	1					
ANR	795860	IdentifierDeclStatement	char * arroba = NULL ;	2511:1:64779:64798	795821	4	True				
ANR	795861	IdentifierDecl	* arroba = NULL		795821	0					
ANR	795862	IdentifierDeclType	char *		795821	0					
ANR	795863	Identifier	arroba		795821	1					
ANR	795864	AssignmentExpression	* arroba = NULL		795821	2		=			
ANR	795865	Identifier	NULL		795821	0					
ANR	795866	Identifier	NULL		795821	1					
ANR	795867	IdentifierDeclStatement	char * grep = NULL ;	2512:1:64801:64818	795821	5	True				
ANR	795868	IdentifierDecl	* grep = NULL		795821	0					
ANR	795869	IdentifierDeclType	char *		795821	0					
ANR	795870	Identifier	grep		795821	1					
ANR	795871	AssignmentExpression	* grep = NULL		795821	2		=			
ANR	795872	Identifier	NULL		795821	0					
ANR	795873	Identifier	NULL		795821	1					
ANR	795874	IdentifierDeclStatement	RIODesc * tmpdesc = NULL ;	2513:1:64821:64844	795821	6	True				
ANR	795875	IdentifierDecl	* tmpdesc = NULL		795821	0					
ANR	795876	IdentifierDeclType	RIODesc *		795821	0					
ANR	795877	Identifier	tmpdesc		795821	1					
ANR	795878	AssignmentExpression	* tmpdesc = NULL		795821	2		=			
ANR	795879	Identifier	NULL		795821	0					
ANR	795880	Identifier	NULL		795821	1					
ANR	795881	IdentifierDeclStatement	int pamode = ! core -> io -> va ;	2514:1:64847:64873	795821	7	True				
ANR	795882	IdentifierDecl	pamode = ! core -> io -> va		795821	0					
ANR	795883	IdentifierDeclType	int		795821	0					
ANR	795884	Identifier	pamode		795821	1					
ANR	795885	AssignmentExpression	pamode = ! core -> io -> va		795821	2		=			
ANR	795886	Identifier	pamode		795821	0					
ANR	795887	UnaryOperationExpression	! core -> io -> va		795821	1					
ANR	795888	UnaryOperator	!		795821	0					
ANR	795889	PtrMemberAccess	core -> io -> va		795821	1					
ANR	795890	PtrMemberAccess	core -> io		795821	0					
ANR	795891	Identifier	core		795821	0					
ANR	795892	Identifier	io		795821	1					
ANR	795893	Identifier	va		795821	1					
ANR	795894	IdentifierDeclStatement	"int i , ret = 0 , pipefd ;"	2515:1:64876:64898	795821	8	True				
ANR	795895	IdentifierDecl	i		795821	0					
ANR	795896	IdentifierDeclType	int		795821	0					
ANR	795897	Identifier	i		795821	1					
ANR	795898	IdentifierDecl	ret = 0		795821	1					
ANR	795899	IdentifierDeclType	int		795821	0					
ANR	795900	Identifier	ret		795821	1					
ANR	795901	AssignmentExpression	ret = 0		795821	2		=			
ANR	795902	Identifier	ret		795821	0					
ANR	795903	PrimaryExpression	0		795821	1					
ANR	795904	IdentifierDecl	pipefd		795821	2					
ANR	795905	IdentifierDeclType	int		795821	0					
ANR	795906	Identifier	pipefd		795821	1					
ANR	795907	IdentifierDeclStatement	bool usemyblock = false ;	2516:1:64901:64924	795821	9	True				
ANR	795908	IdentifierDecl	usemyblock = false		795821	0					
ANR	795909	IdentifierDeclType	bool		795821	0					
ANR	795910	Identifier	usemyblock		795821	1					
ANR	795911	AssignmentExpression	usemyblock = false		795821	2		=			
ANR	795912	Identifier	false		795821	0					
ANR	795913	Identifier	false		795821	1					
ANR	795914	IdentifierDeclStatement	int scr_html = - 1 ;	2517:1:64927:64944	795821	10	True				
ANR	795915	IdentifierDecl	scr_html = - 1		795821	0					
ANR	795916	IdentifierDeclType	int		795821	0					
ANR	795917	Identifier	scr_html		795821	1					
ANR	795918	AssignmentExpression	scr_html = - 1		795821	2		=			
ANR	795919	Identifier	scr_html		795821	0					
ANR	795920	UnaryOperationExpression	- 1		795821	1					
ANR	795921	UnaryOperator	-		795821	0					
ANR	795922	PrimaryExpression	1		795821	1					
ANR	795923	IdentifierDeclStatement	int scr_color = - 1 ;	2518:1:64947:64965	795821	11	True				
ANR	795924	IdentifierDecl	scr_color = - 1		795821	0					
ANR	795925	IdentifierDeclType	int		795821	0					
ANR	795926	Identifier	scr_color		795821	1					
ANR	795927	AssignmentExpression	scr_color = - 1		795821	2		=			
ANR	795928	Identifier	scr_color		795821	0					
ANR	795929	UnaryOperationExpression	- 1		795821	1					
ANR	795930	UnaryOperator	-		795821	0					
ANR	795931	PrimaryExpression	1		795821	1					
ANR	795932	IdentifierDeclStatement	bool eos = false ;	2519:1:64968:64984	795821	12	True				
ANR	795933	IdentifierDecl	eos = false		795821	0					
ANR	795934	IdentifierDeclType	bool		795821	0					
ANR	795935	Identifier	eos		795821	1					
ANR	795936	AssignmentExpression	eos = false		795821	2		=			
ANR	795937	Identifier	false		795821	0					
ANR	795938	Identifier	false		795821	1					
ANR	795939	IdentifierDeclStatement	bool haveQuote = false ;	2520:1:64987:65009	795821	13	True				
ANR	795940	IdentifierDecl	haveQuote = false		795821	0					
ANR	795941	IdentifierDeclType	bool		795821	0					
ANR	795942	Identifier	haveQuote		795821	1					
ANR	795943	AssignmentExpression	haveQuote = false		795821	2		=			
ANR	795944	Identifier	false		795821	0					
ANR	795945	Identifier	false		795821	1					
ANR	795946	IdentifierDeclStatement	bool oldfixedarch = core -> fixedarch ;	2521:1:65012:65047	795821	14	True				
ANR	795947	IdentifierDecl	oldfixedarch = core -> fixedarch		795821	0					
ANR	795948	IdentifierDeclType	bool		795821	0					
ANR	795949	Identifier	oldfixedarch		795821	1					
ANR	795950	AssignmentExpression	oldfixedarch = core -> fixedarch		795821	2		=			
ANR	795951	Identifier	oldfixedarch		795821	0					
ANR	795952	PtrMemberAccess	core -> fixedarch		795821	1					
ANR	795953	Identifier	core		795821	0					
ANR	795954	Identifier	fixedarch		795821	1					
ANR	795955	IdentifierDeclStatement	bool oldfixedbits = core -> fixedbits ;	2522:1:65050:65085	795821	15	True				
ANR	795956	IdentifierDecl	oldfixedbits = core -> fixedbits		795821	0					
ANR	795957	IdentifierDeclType	bool		795821	0					
ANR	795958	Identifier	oldfixedbits		795821	1					
ANR	795959	AssignmentExpression	oldfixedbits = core -> fixedbits		795821	2		=			
ANR	795960	Identifier	oldfixedbits		795821	0					
ANR	795961	PtrMemberAccess	core -> fixedbits		795821	1					
ANR	795962	Identifier	core		795821	0					
ANR	795963	Identifier	fixedbits		795821	1					
ANR	795964	IdentifierDeclStatement	bool cmd_tmpseek = false ;	2523:1:65088:65112	795821	16	True				
ANR	795965	IdentifierDecl	cmd_tmpseek = false		795821	0					
ANR	795966	IdentifierDeclType	bool		795821	0					
ANR	795967	Identifier	cmd_tmpseek		795821	1					
ANR	795968	AssignmentExpression	cmd_tmpseek = false		795821	2		=			
ANR	795969	Identifier	false		795821	0					
ANR	795970	Identifier	false		795821	1					
ANR	795971	IdentifierDeclStatement	ut64 tmpbsz = core -> blocksize ;	2524:1:65115:65144	795821	17	True				
ANR	795972	IdentifierDecl	tmpbsz = core -> blocksize		795821	0					
ANR	795973	IdentifierDeclType	ut64		795821	0					
ANR	795974	Identifier	tmpbsz		795821	1					
ANR	795975	AssignmentExpression	tmpbsz = core -> blocksize		795821	2		=			
ANR	795976	Identifier	tmpbsz		795821	0					
ANR	795977	PtrMemberAccess	core -> blocksize		795821	1					
ANR	795978	Identifier	core		795821	0					
ANR	795979	Identifier	blocksize		795821	1					
ANR	795980	IdentifierDeclStatement	int cmd_ignbithints = - 1 ;	2525:1:65147:65171	795821	18	True				
ANR	795981	IdentifierDecl	cmd_ignbithints = - 1		795821	0					
ANR	795982	IdentifierDeclType	int		795821	0					
ANR	795983	Identifier	cmd_ignbithints		795821	1					
ANR	795984	AssignmentExpression	cmd_ignbithints = - 1		795821	2		=			
ANR	795985	Identifier	cmd_ignbithints		795821	0					
ANR	795986	UnaryOperationExpression	- 1		795821	1					
ANR	795987	UnaryOperator	-		795821	0					
ANR	795988	PrimaryExpression	1		795821	1					
ANR	795989	IfStatement	if ( ! cmd )		795821	19					
ANR	795990	Condition	! cmd	2527:5:65179:65182	795821	0	True				
ANR	795991	UnaryOperationExpression	! cmd		795821	0					
ANR	795992	UnaryOperator	!		795821	0					
ANR	795993	Identifier	cmd		795821	1					
ANR	795994	CompoundStatement		22:11:534:534	795821	1					
ANR	795995	ExpressionStatement	r_list_free ( tmpenvs )	2528:2:65189:65210	795821	0	True				
ANR	795996	CallExpression	r_list_free ( tmpenvs )		795821	0					
ANR	795997	Callee	r_list_free		795821	0					
ANR	795998	Identifier	r_list_free		795821	0					
ANR	795999	ArgumentList	tmpenvs		795821	1					
ANR	796000	Argument	tmpenvs		795821	0					
ANR	796001	Identifier	tmpenvs		795821	0					
ANR	796002	ReturnStatement	return 0 ;	2529:2:65214:65222	795821	1	True				
ANR	796003	PrimaryExpression	0		795821	0					
ANR	796004	ExpressionStatement	cmd = r_str_trim_head_tail ( cmd )	2531:1:65228:65260	795821	20	True				
ANR	796005	AssignmentExpression	cmd = r_str_trim_head_tail ( cmd )		795821	0		=			
ANR	796006	Identifier	cmd		795821	0					
ANR	796007	CallExpression	r_str_trim_head_tail ( cmd )		795821	1					
ANR	796008	Callee	r_str_trim_head_tail		795821	0					
ANR	796009	Identifier	r_str_trim_head_tail		795821	0					
ANR	796010	ArgumentList	cmd		795821	1					
ANR	796011	Argument	cmd		795821	0					
ANR	796012	Identifier	cmd		795821	0					
ANR	796013	ExpressionStatement	"char * 0 = strstr ( cmd , ""$("" )"	2533:1:65264:65293	795821	21	True				
ANR	796014	AssignmentExpression	"char * 0 = strstr ( cmd , ""$("" )"		795821	0		=			
ANR	796015	MultiplicativeExpression	char * 0		795821	0		*			
ANR	796016	Identifier	char		795821	0					
ANR	796017	PrimaryExpression	0		795821	1					
ANR	796018	CallExpression	"strstr ( cmd , ""$("" )"		795821	1					
ANR	796019	Callee	strstr		795821	0					
ANR	796020	Identifier	strstr		795821	0					
ANR	796021	ArgumentList	cmd		795821	1					
ANR	796022	Argument	cmd		795821	0					
ANR	796023	Identifier	cmd		795821	0					
ANR	796024	Argument	"""$("""		795821	1					
ANR	796025	PrimaryExpression	"""$("""		795821	0					
ANR	796026	IfStatement	if ( 0 )		795821	22					
ANR	796027	Condition	0	2534:6:65301:65301	795821	0	True				
ANR	796028	PrimaryExpression	0		795821	0					
ANR	796029	CompoundStatement		29:9:653:653	795821	1					
ANR	796030	ExpressionStatement	"char * 1 = strchr ( 0 + 2 , ')' )"	2535:2:65308:65339	795821	0	True				
ANR	796031	AssignmentExpression	"char * 1 = strchr ( 0 + 2 , ')' )"		795821	0		=			
ANR	796032	MultiplicativeExpression	char * 1		795821	0		*			
ANR	796033	Identifier	char		795821	0					
ANR	796034	PrimaryExpression	1		795821	1					
ANR	796035	CallExpression	"strchr ( 0 + 2 , ')' )"		795821	1					
ANR	796036	Callee	strchr		795821	0					
ANR	796037	Identifier	strchr		795821	0					
ANR	796038	ArgumentList	0 + 2		795821	1					
ANR	796039	Argument	0 + 2		795821	0					
ANR	796040	AdditiveExpression	0 + 2		795821	0		+			
ANR	796041	PrimaryExpression	0		795821	0					
ANR	796042	PrimaryExpression	2		795821	1					
ANR	796043	Argument	')'		795821	1					
ANR	796044	PrimaryExpression	')'		795821	0					
ANR	796045	IfStatement	if ( 1 )		795821	1					
ANR	796046	Condition	1	2536:7:65348:65348	795821	0	True				
ANR	796047	PrimaryExpression	1		795821	0					
ANR	796048	CompoundStatement		31:10:700:700	795821	1					
ANR	796049	ExpressionStatement	* 0 = '`'	2537:3:65356:65365	795821	0	True				
ANR	796050	AssignmentExpression	* 0 = '`'		795821	0		=			
ANR	796051	UnaryOperationExpression	* 0		795821	0					
ANR	796052	UnaryOperator	*		795821	0					
ANR	796053	PrimaryExpression	0		795821	1					
ANR	796054	PrimaryExpression	'`'		795821	1					
ANR	796055	ExpressionStatement	* 1 = '`'	2538:3:65370:65379	795821	1	True				
ANR	796056	AssignmentExpression	* 1 = '`'		795821	0		=			
ANR	796057	UnaryOperationExpression	* 1		795821	0					
ANR	796058	UnaryOperator	*		795821	0					
ANR	796059	PrimaryExpression	1		795821	1					
ANR	796060	PrimaryExpression	'`'		795821	1					
ANR	796061	ExpressionStatement	"memmove ( 0 + 1 , 0 + 2 , strlen ( 0 + 2 ) + 1 )"	2539:3:65384:65429	795821	2	True				
ANR	796062	CallExpression	"memmove ( 0 + 1 , 0 + 2 , strlen ( 0 + 2 ) + 1 )"		795821	0					
ANR	796063	Callee	memmove		795821	0					
ANR	796064	Identifier	memmove		795821	0					
ANR	796065	ArgumentList	0 + 1		795821	1					
ANR	796066	Argument	0 + 1		795821	0					
ANR	796067	AdditiveExpression	0 + 1		795821	0		+			
ANR	796068	PrimaryExpression	0		795821	0					
ANR	796069	PrimaryExpression	1		795821	1					
ANR	796070	Argument	0 + 2		795821	1					
ANR	796071	AdditiveExpression	0 + 2		795821	0		+			
ANR	796072	PrimaryExpression	0		795821	0					
ANR	796073	PrimaryExpression	2		795821	1					
ANR	796074	Argument	strlen ( 0 + 2 ) + 1		795821	2					
ANR	796075	AdditiveExpression	strlen ( 0 + 2 ) + 1		795821	0		+			
ANR	796076	CallExpression	strlen ( 0 + 2 )		795821	0					
ANR	796077	Callee	strlen		795821	0					
ANR	796078	Identifier	strlen		795821	0					
ANR	796079	ArgumentList	0 + 2		795821	1					
ANR	796080	Argument	0 + 2		795821	0					
ANR	796081	AdditiveExpression	0 + 2		795821	0		+			
ANR	796082	PrimaryExpression	0		795821	0					
ANR	796083	PrimaryExpression	2		795821	1					
ANR	796084	PrimaryExpression	1		795821	1					
ANR	796085	ElseStatement	else		795821	0					
ANR	796086	CompoundStatement		35:9:789:789	795821	0					
ANR	796087	ExpressionStatement	"eprintf ( ""Unterminated $() block\\n"" )"	2541:3:65445:65481	795821	0	True				
ANR	796088	CallExpression	"eprintf ( ""Unterminated $() block\\n"" )"		795821	0					
ANR	796089	Callee	eprintf		795821	0					
ANR	796090	Identifier	eprintf		795821	0					
ANR	796091	ArgumentList	"""Unterminated $() block\\n"""		795821	1					
ANR	796092	Argument	"""Unterminated $() block\\n"""		795821	0					
ANR	796093	PrimaryExpression	"""Unterminated $() block\\n"""		795821	0					
ANR	796094	SwitchStatement	switch ( * cmd )		795821	23					
ANR	796095	Condition	* cmd	2546:9:65528:65531	795821	0	True				
ANR	796096	UnaryOperationExpression	* cmd		795821	0					
ANR	796097	UnaryOperator	*		795821	0					
ANR	796098	Identifier	cmd		795821	1					
ANR	796099	CompoundStatement		41:15:883:883	795821	1					
ANR	796100	Label	case '.' :	2547:1:65537:65545	795821	0	True				
ANR	796101	IfStatement	"if ( cmd [ 1 ] == '""' )"		795821	1					
ANR	796102	Condition	"cmd [ 1 ] == '""'"	2548:6:65553:65565	795821	0	True				
ANR	796103	EqualityExpression	"cmd [ 1 ] == '""'"		795821	0		==			
ANR	796104	ArrayIndexing	cmd [ 1 ]		795821	0					
ANR	796105	Identifier	cmd		795821	0					
ANR	796106	PrimaryExpression	1		795821	1					
ANR	796107	PrimaryExpression	"'""'"		795821	1					
ANR	796108	CompoundStatement		43:21:917:917	795821	1					
ANR	796109	ExpressionStatement	r_list_free ( tmpenvs )	2549:3:65589:65610	795821	0	True				
ANR	796110	CallExpression	r_list_free ( tmpenvs )		795821	0					
ANR	796111	Callee	r_list_free		795821	0					
ANR	796112	Identifier	r_list_free		795821	0					
ANR	796113	ArgumentList	tmpenvs		795821	1					
ANR	796114	Argument	tmpenvs		795821	0					
ANR	796115	Identifier	tmpenvs		795821	0					
ANR	796116	ReturnStatement	"return r_cmd_call ( core -> rcmd , cmd ) ;"	2550:3:65615:65650	795821	1	True				
ANR	796117	CallExpression	"r_cmd_call ( core -> rcmd , cmd )"		795821	0					
ANR	796118	Callee	r_cmd_call		795821	0					
ANR	796119	Identifier	r_cmd_call		795821	0					
ANR	796120	ArgumentList	core -> rcmd		795821	1					
ANR	796121	Argument	core -> rcmd		795821	0					
ANR	796122	PtrMemberAccess	core -> rcmd		795821	0					
ANR	796123	Identifier	core		795821	0					
ANR	796124	Identifier	rcmd		795821	1					
ANR	796125	Argument	cmd		795821	1					
ANR	796126	Identifier	cmd		795821	0					
ANR	796127	BreakStatement	break ;	2552:2:65658:65663	795821	2	True				
ANR	796128	Label	"case '""' :"	2553:1:65666:65674	795821	3	True				
ANR	796129	ForStatement	for ( ; * cmd ; )		795821	4					
ANR	796130	Condition	* cmd	2554:9:65685:65688	795821	0	True				
ANR	796131	UnaryOperationExpression	* cmd		795821	0					
ANR	796132	UnaryOperator	*		795821	0					
ANR	796133	Identifier	cmd		795821	1					
ANR	796134	CompoundStatement		52:3:1093:1107	795821	1					
ANR	796135	IdentifierDeclStatement	int pipefd = - 1 ;	2555:3:65698:65713	795821	0	True				
ANR	796136	IdentifierDecl	pipefd = - 1		795821	0					
ANR	796137	IdentifierDeclType	int		795821	0					
ANR	796138	Identifier	pipefd		795821	1					
ANR	796139	AssignmentExpression	pipefd = - 1		795821	2		=			
ANR	796140	Identifier	pipefd		795821	0					
ANR	796141	UnaryOperationExpression	- 1		795821	1					
ANR	796142	UnaryOperator	-		795821	0					
ANR	796143	PrimaryExpression	1		795821	1					
ANR	796144	IdentifierDeclStatement	ut64 oseek = UT64_MAX ;	2556:3:65718:65739	795821	1	True				
ANR	796145	IdentifierDecl	oseek = UT64_MAX		795821	0					
ANR	796146	IdentifierDeclType	ut64		795821	0					
ANR	796147	Identifier	oseek		795821	1					
ANR	796148	AssignmentExpression	oseek = UT64_MAX		795821	2		=			
ANR	796149	Identifier	UT64_MAX		795821	0					
ANR	796150	Identifier	UT64_MAX		795821	1					
ANR	796151	IdentifierDeclStatement	"char * line , * p ;"	2557:3:65744:65758	795821	2	True				
ANR	796152	IdentifierDecl	* line		795821	0					
ANR	796153	IdentifierDeclType	char *		795821	0					
ANR	796154	Identifier	line		795821	1					
ANR	796155	IdentifierDecl	* p		795821	1					
ANR	796156	IdentifierDeclType	char *		795821	0					
ANR	796157	Identifier	p		795821	1					
ANR	796158	ExpressionStatement	"haveQuote = * cmd == '""'"	2558:3:65763:65786	795821	3	True				
ANR	796159	AssignmentExpression	"haveQuote = * cmd == '""'"		795821	0		=			
ANR	796160	Identifier	haveQuote		795821	0					
ANR	796161	EqualityExpression	"* cmd == '""'"		795821	1		==			
ANR	796162	UnaryOperationExpression	* cmd		795821	0					
ANR	796163	UnaryOperator	*		795821	0					
ANR	796164	Identifier	cmd		795821	1					
ANR	796165	PrimaryExpression	"'""'"		795821	1					
ANR	796166	IfStatement	if ( haveQuote )		795821	4					
ANR	796167	Condition	haveQuote	2559:7:65795:65803	795821	0	True				
ANR	796168	Identifier	haveQuote		795821	0					
ANR	796169	CompoundStatement		54:18:1155:1155	795821	1					
ANR	796170	ExpressionStatement	cmd ++	2560:4:65812:65817	795821	0	True				
ANR	796171	PostIncDecOperationExpression	cmd ++		795821	0					
ANR	796172	Identifier	cmd		795821	0					
ANR	796173	IncDec	++		795821	1					
ANR	796174	ExpressionStatement	p = * cmd ? find_eoq ( cmd ) : NULL	2561:4:65823:65855	795821	1	True				
ANR	796175	AssignmentExpression	p = * cmd ? find_eoq ( cmd ) : NULL		795821	0		=			
ANR	796176	Identifier	p		795821	0					
ANR	796177	ConditionalExpression	* cmd ? find_eoq ( cmd ) : NULL		795821	1					
ANR	796178	Condition	* cmd		795821	0					
ANR	796179	UnaryOperationExpression	* cmd		795821	0					
ANR	796180	UnaryOperator	*		795821	0					
ANR	796181	Identifier	cmd		795821	1					
ANR	796182	CallExpression	find_eoq ( cmd )		795821	1					
ANR	796183	Callee	find_eoq		795821	0					
ANR	796184	Identifier	find_eoq		795821	0					
ANR	796185	ArgumentList	cmd		795821	1					
ANR	796186	Argument	cmd		795821	0					
ANR	796187	Identifier	cmd		795821	0					
ANR	796188	Identifier	NULL		795821	2					
ANR	796189	IfStatement	if ( ! p || ! * p )		795821	2					
ANR	796190	Condition	! p || ! * p	2562:8:65865:65873	795821	0	True				
ANR	796191	OrExpression	! p || ! * p		795821	0		||			
ANR	796192	UnaryOperationExpression	! p		795821	0					
ANR	796193	UnaryOperator	!		795821	0					
ANR	796194	Identifier	p		795821	1					
ANR	796195	UnaryOperationExpression	! * p		795821	1					
ANR	796196	UnaryOperator	!		795821	0					
ANR	796197	UnaryOperationExpression	* p		795821	1					
ANR	796198	UnaryOperator	*		795821	0					
ANR	796199	Identifier	p		795821	1					
ANR	796200	CompoundStatement		57:19:1225:1225	795821	1					
ANR	796201	ExpressionStatement	"eprintf ( ""Missing \\"" in (%s)."" , cmd )"	2563:5:65883:65919	795821	0	True				
ANR	796202	CallExpression	"eprintf ( ""Missing \\"" in (%s)."" , cmd )"		795821	0					
ANR	796203	Callee	eprintf		795821	0					
ANR	796204	Identifier	eprintf		795821	0					
ANR	796205	ArgumentList	"""Missing \\"" in (%s)."""		795821	1					
ANR	796206	Argument	"""Missing \\"" in (%s)."""		795821	0					
ANR	796207	PrimaryExpression	"""Missing \\"" in (%s)."""		795821	0					
ANR	796208	Argument	cmd		795821	1					
ANR	796209	Identifier	cmd		795821	0					
ANR	796210	ExpressionStatement	r_list_free ( tmpenvs )	2564:5:65926:65947	795821	1	True				
ANR	796211	CallExpression	r_list_free ( tmpenvs )		795821	0					
ANR	796212	Callee	r_list_free		795821	0					
ANR	796213	Identifier	r_list_free		795821	0					
ANR	796214	ArgumentList	tmpenvs		795821	1					
ANR	796215	Argument	tmpenvs		795821	0					
ANR	796216	Identifier	tmpenvs		795821	0					
ANR	796217	ReturnStatement	return false ;	2565:5:65954:65966	795821	2	True				
ANR	796218	Identifier	false		795821	0					
ANR	796219	ExpressionStatement	* p ++ = 0	2567:4:65978:65986	795821	3	True				
ANR	796220	AssignmentExpression	* p ++ = 0		795821	0		=			
ANR	796221	UnaryOperationExpression	* p ++		795821	0					
ANR	796222	UnaryOperator	*		795821	0					
ANR	796223	PostIncDecOperationExpression	p ++		795821	1					
ANR	796224	Identifier	p		795821	0					
ANR	796225	IncDec	++		795821	1					
ANR	796226	PrimaryExpression	0		795821	1					
ANR	796227	IfStatement	if ( ! * p )		795821	4					
ANR	796228	Condition	! * p	2568:8:65996:65998	795821	0	True				
ANR	796229	UnaryOperationExpression	! * p		795821	0					
ANR	796230	UnaryOperator	!		795821	0					
ANR	796231	UnaryOperationExpression	* p		795821	1					
ANR	796232	UnaryOperator	*		795821	0					
ANR	796233	Identifier	p		795821	1					
ANR	796234	CompoundStatement		63:13:1350:1350	795821	1					
ANR	796235	ExpressionStatement	eos = true	2569:5:66008:66018	795821	0	True				
ANR	796236	AssignmentExpression	eos = true		795821	0		=			
ANR	796237	Identifier	eos		795821	0					
ANR	796238	Identifier	true		795821	1					
ANR	796239	ElseStatement	else		795821	0					
ANR	796240	CompoundStatement		67:4:1391:1419	795821	0					
ANR	796241	IdentifierDeclStatement	"char * sc = strchr ( cmd , ';' ) ;"	2572:4:66042:66070	795821	0	True				
ANR	796242	IdentifierDecl	"* sc = strchr ( cmd , ';' )"		795821	0					
ANR	796243	IdentifierDeclType	char *		795821	0					
ANR	796244	Identifier	sc		795821	1					
ANR	796245	AssignmentExpression	"* sc = strchr ( cmd , ';' )"		795821	2		=			
ANR	796246	Identifier	sc		795821	0					
ANR	796247	CallExpression	"strchr ( cmd , ';' )"		795821	1					
ANR	796248	Callee	strchr		795821	0					
ANR	796249	Identifier	strchr		795821	0					
ANR	796250	ArgumentList	cmd		795821	1					
ANR	796251	Argument	cmd		795821	0					
ANR	796252	Identifier	cmd		795821	0					
ANR	796253	Argument	';'		795821	1					
ANR	796254	PrimaryExpression	';'		795821	0					
ANR	796255	IfStatement	if ( sc )		795821	1					
ANR	796256	Condition	sc	2573:8:66080:66081	795821	0	True				
ANR	796257	Identifier	sc		795821	0					
ANR	796258	CompoundStatement		68:12:1433:1433	795821	1					
ANR	796259	ExpressionStatement	* sc = 0	2574:5:66091:66098	795821	0	True				
ANR	796260	AssignmentExpression	* sc = 0		795821	0		=			
ANR	796261	UnaryOperationExpression	* sc		795821	0					
ANR	796262	UnaryOperator	*		795821	0					
ANR	796263	Identifier	sc		795821	1					
ANR	796264	PrimaryExpression	0		795821	1					
ANR	796265	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	2576:4:66110:66133	795821	2	True				
ANR	796266	CallExpression	"r_core_cmd0 ( core , cmd )"		795821	0					
ANR	796267	Callee	r_core_cmd0		795821	0					
ANR	796268	Identifier	r_core_cmd0		795821	0					
ANR	796269	ArgumentList	core		795821	1					
ANR	796270	Argument	core		795821	0					
ANR	796271	Identifier	core		795821	0					
ANR	796272	Argument	cmd		795821	1					
ANR	796273	Identifier	cmd		795821	0					
ANR	796274	IfStatement	if ( ! sc )		795821	3					
ANR	796275	Condition	! sc	2577:8:66143:66145	795821	0	True				
ANR	796276	UnaryOperationExpression	! sc		795821	0					
ANR	796277	UnaryOperator	!		795821	0					
ANR	796278	Identifier	sc		795821	1					
ANR	796279	CompoundStatement		72:13:1497:1497	795821	1					
ANR	796280	BreakStatement	break ;	2578:5:66155:66160	795821	0	True				
ANR	796281	ExpressionStatement	cmd = sc + 1	2580:4:66172:66184	795821	4	True				
ANR	796282	AssignmentExpression	cmd = sc + 1		795821	0		=			
ANR	796283	Identifier	cmd		795821	0					
ANR	796284	AdditiveExpression	sc + 1		795821	1		+			
ANR	796285	Identifier	sc		795821	0					
ANR	796286	PrimaryExpression	1		795821	1					
ANR	796287	ContinueStatement	continue ;	2581:4:66190:66198	795821	5	True				
ANR	796288	IfStatement	if ( * p )		795821	5					
ANR	796289	Condition	* p	2583:7:66212:66213	795821	0	True				
ANR	796290	UnaryOperationExpression	* p		795821	0					
ANR	796291	UnaryOperator	*		795821	0					
ANR	796292	Identifier	p		795821	1					
ANR	796293	CompoundStatement		78:11:1565:1565	795821	1					
ANR	796294	IfStatement	if ( p [ 0 ] == '@' )		795821	0					
ANR	796295	Condition	p [ 0 ] == '@'	2585:8:66247:66257	795821	0	True				
ANR	796296	EqualityExpression	p [ 0 ] == '@'		795821	0		==			
ANR	796297	ArrayIndexing	p [ 0 ]		795821	0					
ANR	796298	Identifier	p		795821	0					
ANR	796299	PrimaryExpression	0		795821	1					
ANR	796300	PrimaryExpression	'@'		795821	1					
ANR	796301	CompoundStatement		80:21:1609:1609	795821	1					
ANR	796302	ExpressionStatement	p --	2586:5:66267:66270	795821	0	True				
ANR	796303	PostIncDecOperationExpression	p --		795821	0					
ANR	796304	Identifier	p		795821	0					
ANR	796305	IncDec	--		795821	1					
ANR	796306	WhileStatement	while ( p [ 1 ] == ';' || IS_WHITESPACE ( p [ 1 ] ) )		795821	1					
ANR	796307	Condition	p [ 1 ] == ';' || IS_WHITESPACE ( p [ 1 ] )	2588:11:66289:66323	795821	0	True				
ANR	796308	OrExpression	p [ 1 ] == ';' || IS_WHITESPACE ( p [ 1 ] )		795821	0		||			
ANR	796309	EqualityExpression	p [ 1 ] == ';'		795821	0		==			
ANR	796310	ArrayIndexing	p [ 1 ]		795821	0					
ANR	796311	Identifier	p		795821	0					
ANR	796312	PrimaryExpression	1		795821	1					
ANR	796313	PrimaryExpression	';'		795821	1					
ANR	796314	CallExpression	IS_WHITESPACE ( p [ 1 ] )		795821	1					
ANR	796315	Callee	IS_WHITESPACE		795821	0					
ANR	796316	Identifier	IS_WHITESPACE		795821	0					
ANR	796317	ArgumentList	p [ 1 ]		795821	1					
ANR	796318	Argument	p [ 1 ]		795821	0					
ANR	796319	ArrayIndexing	p [ 1 ]		795821	0					
ANR	796320	Identifier	p		795821	0					
ANR	796321	PrimaryExpression	1		795821	1					
ANR	796322	CompoundStatement		83:48:1675:1675	795821	1					
ANR	796323	ExpressionStatement	p ++	2589:5:66333:66336	795821	0	True				
ANR	796324	PostIncDecOperationExpression	p ++		795821	0					
ANR	796325	Identifier	p		795821	0					
ANR	796326	IncDec	++		795821	1					
ANR	796327	IfStatement	if ( p [ 1 ] == '@' || ( p [ 1 ] && p [ 2 ] == '@' ) )		795821	2					
ANR	796328	Condition	p [ 1 ] == '@' || ( p [ 1 ] && p [ 2 ] == '@' )	2591:8:66352:66387	795821	0	True				
ANR	796329	OrExpression	p [ 1 ] == '@' || ( p [ 1 ] && p [ 2 ] == '@' )		795821	0		||			
ANR	796330	EqualityExpression	p [ 1 ] == '@'		795821	0		==			
ANR	796331	ArrayIndexing	p [ 1 ]		795821	0					
ANR	796332	Identifier	p		795821	0					
ANR	796333	PrimaryExpression	1		795821	1					
ANR	796334	PrimaryExpression	'@'		795821	1					
ANR	796335	AndExpression	p [ 1 ] && p [ 2 ] == '@'		795821	1		&&			
ANR	796336	ArrayIndexing	p [ 1 ]		795821	0					
ANR	796337	Identifier	p		795821	0					
ANR	796338	PrimaryExpression	1		795821	1					
ANR	796339	EqualityExpression	p [ 2 ] == '@'		795821	1		==			
ANR	796340	ArrayIndexing	p [ 2 ]		795821	0					
ANR	796341	Identifier	p		795821	0					
ANR	796342	PrimaryExpression	2		795821	1					
ANR	796343	PrimaryExpression	'@'		795821	1					
ANR	796344	CompoundStatement		87:5:1746:1775	795821	1					
ANR	796345	IdentifierDeclStatement	"char * q = strchr ( p + 1 , '""' ) ;"	2592:5:66397:66426	795821	0	True				
ANR	796346	IdentifierDecl	"* q = strchr ( p + 1 , '""' )"		795821	0					
ANR	796347	IdentifierDeclType	char *		795821	0					
ANR	796348	Identifier	q		795821	1					
ANR	796349	AssignmentExpression	"* q = strchr ( p + 1 , '""' )"		795821	2		=			
ANR	796350	Identifier	q		795821	0					
ANR	796351	CallExpression	"strchr ( p + 1 , '""' )"		795821	1					
ANR	796352	Callee	strchr		795821	0					
ANR	796353	Identifier	strchr		795821	0					
ANR	796354	ArgumentList	p + 1		795821	1					
ANR	796355	Argument	p + 1		795821	0					
ANR	796356	AdditiveExpression	p + 1		795821	0		+			
ANR	796357	Identifier	p		795821	0					
ANR	796358	PrimaryExpression	1		795821	1					
ANR	796359	Argument	"'""'"		795821	1					
ANR	796360	PrimaryExpression	"'""'"		795821	0					
ANR	796361	IfStatement	if ( q )		795821	1					
ANR	796362	Condition	q	2593:9:66437:66437	795821	0	True				
ANR	796363	Identifier	q		795821	0					
ANR	796364	CompoundStatement		88:12:1789:1789	795821	1					
ANR	796365	ExpressionStatement	* q = 0	2594:6:66448:66454	795821	0	True				
ANR	796366	AssignmentExpression	* q = 0		795821	0		=			
ANR	796367	UnaryOperationExpression	* q		795821	0					
ANR	796368	UnaryOperator	*		795821	0					
ANR	796369	Identifier	q		795821	1					
ANR	796370	PrimaryExpression	0		795821	1					
ANR	796371	ExpressionStatement	haveQuote = q != NULL	2596:5:66468:66489	795821	2	True				
ANR	796372	AssignmentExpression	haveQuote = q != NULL		795821	0		=			
ANR	796373	Identifier	haveQuote		795821	0					
ANR	796374	EqualityExpression	q != NULL		795821	1		!=			
ANR	796375	Identifier	q		795821	0					
ANR	796376	Identifier	NULL		795821	1					
ANR	796377	ExpressionStatement	oseek = core -> offset	2597:5:66496:66516	795821	3	True				
ANR	796378	AssignmentExpression	oseek = core -> offset		795821	0		=			
ANR	796379	Identifier	oseek		795821	0					
ANR	796380	PtrMemberAccess	core -> offset		795821	1					
ANR	796381	Identifier	core		795821	0					
ANR	796382	Identifier	offset		795821	1					
ANR	796383	ExpressionStatement	"r_core_seek ( core , r_num_math ( core -> num , p + 2 ) , 1 )"	2598:5:66523:66575	795821	4	True				
ANR	796384	CallExpression	"r_core_seek ( core , r_num_math ( core -> num , p + 2 ) , 1 )"		795821	0					
ANR	796385	Callee	r_core_seek		795821	0					
ANR	796386	Identifier	r_core_seek		795821	0					
ANR	796387	ArgumentList	core		795821	1					
ANR	796388	Argument	core		795821	0					
ANR	796389	Identifier	core		795821	0					
ANR	796390	Argument	"r_num_math ( core -> num , p + 2 )"		795821	1					
ANR	796391	CallExpression	"r_num_math ( core -> num , p + 2 )"		795821	0					
ANR	796392	Callee	r_num_math		795821	0					
ANR	796393	Identifier	r_num_math		795821	0					
ANR	796394	ArgumentList	core -> num		795821	1					
ANR	796395	Argument	core -> num		795821	0					
ANR	796396	PtrMemberAccess	core -> num		795821	0					
ANR	796397	Identifier	core		795821	0					
ANR	796398	Identifier	num		795821	1					
ANR	796399	Argument	p + 2		795821	1					
ANR	796400	AdditiveExpression	p + 2		795821	0		+			
ANR	796401	Identifier	p		795821	0					
ANR	796402	PrimaryExpression	2		795821	1					
ANR	796403	Argument	1		795821	2					
ANR	796404	PrimaryExpression	1		795821	0					
ANR	796405	IfStatement	if ( q )		795821	5					
ANR	796406	Condition	q	2599:9:66586:66586	795821	0	True				
ANR	796407	Identifier	q		795821	0					
ANR	796408	CompoundStatement		94:12:1938:1938	795821	1					
ANR	796409	ExpressionStatement	"* p = '""'"	2600:6:66597:66605	795821	0	True				
ANR	796410	AssignmentExpression	"* p = '""'"		795821	0		=			
ANR	796411	UnaryOperationExpression	* p		795821	0					
ANR	796412	UnaryOperator	*		795821	0					
ANR	796413	Identifier	p		795821	1					
ANR	796414	PrimaryExpression	"'""'"		795821	1					
ANR	796415	ExpressionStatement	p = q	2601:6:66613:66618	795821	1	True				
ANR	796416	AssignmentExpression	p = q		795821	0		=			
ANR	796417	Identifier	p		795821	0					
ANR	796418	Identifier	q		795821	1					
ANR	796419	ElseStatement	else		795821	0					
ANR	796420	CompoundStatement		97:12:1981:1981	795821	0					
ANR	796421	ExpressionStatement	"p = strchr ( p + 1 , ';' )"	2603:6:66640:66663	795821	0	True				
ANR	796422	AssignmentExpression	"p = strchr ( p + 1 , ';' )"		795821	0		=			
ANR	796423	Identifier	p		795821	0					
ANR	796424	CallExpression	"strchr ( p + 1 , ';' )"		795821	1					
ANR	796425	Callee	strchr		795821	0					
ANR	796426	Identifier	strchr		795821	0					
ANR	796427	ArgumentList	p + 1		795821	1					
ANR	796428	Argument	p + 1		795821	0					
ANR	796429	AdditiveExpression	p + 1		795821	0		+			
ANR	796430	Identifier	p		795821	0					
ANR	796431	PrimaryExpression	1		795821	1					
ANR	796432	Argument	';'		795821	1					
ANR	796433	PrimaryExpression	';'		795821	0					
ANR	796434	IfStatement	if ( p && * p && p [ 1 ] == '>' )		795821	3					
ANR	796435	Condition	p && * p && p [ 1 ] == '>'	2606:8:66686:66707	795821	0	True				
ANR	796436	AndExpression	p && * p && p [ 1 ] == '>'		795821	0		&&			
ANR	796437	Identifier	p		795821	0					
ANR	796438	AndExpression	* p && p [ 1 ] == '>'		795821	1		&&			
ANR	796439	UnaryOperationExpression	* p		795821	0					
ANR	796440	UnaryOperator	*		795821	0					
ANR	796441	Identifier	p		795821	1					
ANR	796442	EqualityExpression	p [ 1 ] == '>'		795821	1		==			
ANR	796443	ArrayIndexing	p [ 1 ]		795821	0					
ANR	796444	Identifier	p		795821	0					
ANR	796445	PrimaryExpression	1		795821	1					
ANR	796446	PrimaryExpression	'>'		795821	1					
ANR	796447	CompoundStatement		108:5:2193:2224	795821	1					
ANR	796448	ExpressionStatement	str = p + 2	2607:5:66717:66728	795821	0	True				
ANR	796449	AssignmentExpression	str = p + 2		795821	0		=			
ANR	796450	Identifier	str		795821	0					
ANR	796451	AdditiveExpression	p + 2		795821	1		+			
ANR	796452	Identifier	p		795821	0					
ANR	796453	PrimaryExpression	2		795821	1					
ANR	796454	WhileStatement	while ( * str == '>' )		795821	1					
ANR	796455	Condition	* str == '>'	2608:12:66742:66752	795821	0	True				
ANR	796456	EqualityExpression	* str == '>'		795821	0		==			
ANR	796457	UnaryOperationExpression	* str		795821	0					
ANR	796458	UnaryOperator	*		795821	0					
ANR	796459	Identifier	str		795821	1					
ANR	796460	PrimaryExpression	'>'		795821	1					
ANR	796461	CompoundStatement		103:25:2104:2104	795821	1					
ANR	796462	ExpressionStatement	str ++	2609:6:66763:66768	795821	0	True				
ANR	796463	PostIncDecOperationExpression	str ++		795821	0					
ANR	796464	Identifier	str		795821	0					
ANR	796465	IncDec	++		795821	1					
ANR	796466	ExpressionStatement	str = ( char * ) r_str_trim_ro ( str )	2611:5:66782:66815	795821	2	True				
ANR	796467	AssignmentExpression	str = ( char * ) r_str_trim_ro ( str )		795821	0		=			
ANR	796468	Identifier	str		795821	0					
ANR	796469	CastExpression	( char * ) r_str_trim_ro ( str )		795821	1					
ANR	796470	CastTarget	char *		795821	0					
ANR	796471	CallExpression	r_str_trim_ro ( str )		795821	1					
ANR	796472	Callee	r_str_trim_ro		795821	0					
ANR	796473	Identifier	r_str_trim_ro		795821	0					
ANR	796474	ArgumentList	str		795821	1					
ANR	796475	Argument	str		795821	0					
ANR	796476	Identifier	str		795821	0					
ANR	796477	ExpressionStatement	r_cons_flush ( )	2612:5:66822:66837	795821	3	True				
ANR	796478	CallExpression	r_cons_flush ( )		795821	0					
ANR	796479	Callee	r_cons_flush		795821	0					
ANR	796480	Identifier	r_cons_flush		795821	0					
ANR	796481	ArgumentList			795821	1					
ANR	796482	IdentifierDeclStatement	const bool append = p [ 2 ] == '>' ;	2613:5:66844:66875	795821	4	True				
ANR	796483	IdentifierDecl	append = p [ 2 ] == '>'		795821	0					
ANR	796484	IdentifierDeclType	const bool		795821	0					
ANR	796485	Identifier	append		795821	1					
ANR	796486	AssignmentExpression	append = p [ 2 ] == '>'		795821	2		=			
ANR	796487	Identifier	append		795821	0					
ANR	796488	EqualityExpression	p [ 2 ] == '>'		795821	1		==			
ANR	796489	ArrayIndexing	p [ 2 ]		795821	0					
ANR	796490	Identifier	p		795821	0					
ANR	796491	PrimaryExpression	2		795821	1					
ANR	796492	PrimaryExpression	'>'		795821	1					
ANR	796493	ExpressionStatement	"pipefd = r_cons_pipe_open ( str , 1 , append )"	2614:5:66882:66924	795821	5	True				
ANR	796494	AssignmentExpression	"pipefd = r_cons_pipe_open ( str , 1 , append )"		795821	0		=			
ANR	796495	Identifier	pipefd		795821	0					
ANR	796496	CallExpression	"r_cons_pipe_open ( str , 1 , append )"		795821	1					
ANR	796497	Callee	r_cons_pipe_open		795821	0					
ANR	796498	Identifier	r_cons_pipe_open		795821	0					
ANR	796499	ArgumentList	str		795821	1					
ANR	796500	Argument	str		795821	0					
ANR	796501	Identifier	str		795821	0					
ANR	796502	Argument	1		795821	1					
ANR	796503	PrimaryExpression	1		795821	0					
ANR	796504	Argument	append		795821	2					
ANR	796505	Identifier	append		795821	0					
ANR	796506	ExpressionStatement	line = strdup ( cmd )	2617:3:66940:66959	795821	6	True				
ANR	796507	AssignmentExpression	line = strdup ( cmd )		795821	0		=			
ANR	796508	Identifier	line		795821	0					
ANR	796509	CallExpression	strdup ( cmd )		795821	1					
ANR	796510	Callee	strdup		795821	0					
ANR	796511	Identifier	strdup		795821	0					
ANR	796512	ArgumentList	cmd		795821	1					
ANR	796513	Argument	cmd		795821	0					
ANR	796514	Identifier	cmd		795821	0					
ANR	796515	ExpressionStatement	"line = r_str_replace ( line , ""\\\\\\"""" , ""\\"""" , true )"	2618:3:66964:67011	795821	7	True				
ANR	796516	AssignmentExpression	"line = r_str_replace ( line , ""\\\\\\"""" , ""\\"""" , true )"		795821	0		=			
ANR	796517	Identifier	line		795821	0					
ANR	796518	CallExpression	"r_str_replace ( line , ""\\\\\\"""" , ""\\"""" , true )"		795821	1					
ANR	796519	Callee	r_str_replace		795821	0					
ANR	796520	Identifier	r_str_replace		795821	0					
ANR	796521	ArgumentList	line		795821	1					
ANR	796522	Argument	line		795821	0					
ANR	796523	Identifier	line		795821	0					
ANR	796524	Argument	"""\\\\\\"""""		795821	1					
ANR	796525	PrimaryExpression	"""\\\\\\"""""		795821	0					
ANR	796526	Argument	"""\\"""""		795821	2					
ANR	796527	PrimaryExpression	"""\\"""""		795821	0					
ANR	796528	Argument	true		795821	3					
ANR	796529	Identifier	true		795821	0					
ANR	796530	IfStatement	if ( p && * p && p [ 1 ] == '|' )		795821	8					
ANR	796531	Condition	p && * p && p [ 1 ] == '|'	2619:7:67020:67041	795821	0	True				
ANR	796532	AndExpression	p && * p && p [ 1 ] == '|'		795821	0		&&			
ANR	796533	Identifier	p		795821	0					
ANR	796534	AndExpression	* p && p [ 1 ] == '|'		795821	1		&&			
ANR	796535	UnaryOperationExpression	* p		795821	0					
ANR	796536	UnaryOperator	*		795821	0					
ANR	796537	Identifier	p		795821	1					
ANR	796538	EqualityExpression	p [ 1 ] == '|'		795821	1		==			
ANR	796539	ArrayIndexing	p [ 1 ]		795821	0					
ANR	796540	Identifier	p		795821	0					
ANR	796541	PrimaryExpression	1		795821	1					
ANR	796542	PrimaryExpression	'|'		795821	1					
ANR	796543	CompoundStatement		114:31:2393:2393	795821	1					
ANR	796544	ExpressionStatement	str = p + 2	2620:4:67050:67061	795821	0	True				
ANR	796545	AssignmentExpression	str = p + 2		795821	0		=			
ANR	796546	Identifier	str		795821	0					
ANR	796547	AdditiveExpression	p + 2		795821	1		+			
ANR	796548	Identifier	p		795821	0					
ANR	796549	PrimaryExpression	2		795821	1					
ANR	796550	WhileStatement	while ( IS_WHITESPACE ( * str ) )		795821	1					
ANR	796551	Condition	IS_WHITESPACE ( * str )	2621:11:67074:67093	795821	0	True				
ANR	796552	CallExpression	IS_WHITESPACE ( * str )		795821	0					
ANR	796553	Callee	IS_WHITESPACE		795821	0					
ANR	796554	Identifier	IS_WHITESPACE		795821	0					
ANR	796555	ArgumentList	* str		795821	1					
ANR	796556	Argument	* str		795821	0					
ANR	796557	UnaryOperationExpression	* str		795821	0					
ANR	796558	UnaryOperator	*		795821	0					
ANR	796559	Identifier	str		795821	1					
ANR	796560	CompoundStatement		116:33:2445:2445	795821	1					
ANR	796561	ExpressionStatement	str ++	2622:5:67103:67108	795821	0	True				
ANR	796562	PostIncDecOperationExpression	str ++		795821	0					
ANR	796563	Identifier	str		795821	0					
ANR	796564	IncDec	++		795821	1					
ANR	796565	ExpressionStatement	"r_core_cmd_pipe ( core , cmd , str )"	2624:4:67120:67152	795821	2	True				
ANR	796566	CallExpression	"r_core_cmd_pipe ( core , cmd , str )"		795821	0					
ANR	796567	Callee	r_core_cmd_pipe		795821	0					
ANR	796568	Identifier	r_core_cmd_pipe		795821	0					
ANR	796569	ArgumentList	core		795821	1					
ANR	796570	Argument	core		795821	0					
ANR	796571	Identifier	core		795821	0					
ANR	796572	Argument	cmd		795821	1					
ANR	796573	Identifier	cmd		795821	0					
ANR	796574	Argument	str		795821	2					
ANR	796575	Identifier	str		795821	0					
ANR	796576	ElseStatement	else		795821	0					
ANR	796577	CompoundStatement		120:10:2513:2513	795821	0					
ANR	796578	ExpressionStatement	"r_cmd_call ( core -> rcmd , line )"	2626:4:67170:67199	795821	0	True				
ANR	796579	CallExpression	"r_cmd_call ( core -> rcmd , line )"		795821	0					
ANR	796580	Callee	r_cmd_call		795821	0					
ANR	796581	Identifier	r_cmd_call		795821	0					
ANR	796582	ArgumentList	core -> rcmd		795821	1					
ANR	796583	Argument	core -> rcmd		795821	0					
ANR	796584	PtrMemberAccess	core -> rcmd		795821	0					
ANR	796585	Identifier	core		795821	0					
ANR	796586	Identifier	rcmd		795821	1					
ANR	796587	Argument	line		795821	1					
ANR	796588	Identifier	line		795821	0					
ANR	796589	ExpressionStatement	free ( line )	2628:3:67209:67220	795821	9	True				
ANR	796590	CallExpression	free ( line )		795821	0					
ANR	796591	Callee	free		795821	0					
ANR	796592	Identifier	free		795821	0					
ANR	796593	ArgumentList	line		795821	1					
ANR	796594	Argument	line		795821	0					
ANR	796595	Identifier	line		795821	0					
ANR	796596	IfStatement	if ( oseek != UT64_MAX )		795821	10					
ANR	796597	Condition	oseek != UT64_MAX	2629:7:67229:67245	795821	0	True				
ANR	796598	EqualityExpression	oseek != UT64_MAX		795821	0		!=			
ANR	796599	Identifier	oseek		795821	0					
ANR	796600	Identifier	UT64_MAX		795821	1					
ANR	796601	CompoundStatement		124:26:2597:2597	795821	1					
ANR	796602	ExpressionStatement	"r_core_seek ( core , oseek , 1 )"	2630:4:67254:67282	795821	0	True				
ANR	796603	CallExpression	"r_core_seek ( core , oseek , 1 )"		795821	0					
ANR	796604	Callee	r_core_seek		795821	0					
ANR	796605	Identifier	r_core_seek		795821	0					
ANR	796606	ArgumentList	core		795821	1					
ANR	796607	Argument	core		795821	0					
ANR	796608	Identifier	core		795821	0					
ANR	796609	Argument	oseek		795821	1					
ANR	796610	Identifier	oseek		795821	0					
ANR	796611	Argument	1		795821	2					
ANR	796612	PrimaryExpression	1		795821	0					
ANR	796613	IfStatement	if ( pipefd != - 1 )		795821	11					
ANR	796614	Condition	pipefd != - 1	2632:7:67296:67307	795821	0	True				
ANR	796615	EqualityExpression	pipefd != - 1		795821	0		!=			
ANR	796616	Identifier	pipefd		795821	0					
ANR	796617	UnaryOperationExpression	- 1		795821	1					
ANR	796618	UnaryOperator	-		795821	0					
ANR	796619	PrimaryExpression	1		795821	1					
ANR	796620	CompoundStatement		127:21:2659:2659	795821	1					
ANR	796621	ExpressionStatement	r_cons_flush ( )	2633:4:67316:67331	795821	0	True				
ANR	796622	CallExpression	r_cons_flush ( )		795821	0					
ANR	796623	Callee	r_cons_flush		795821	0					
ANR	796624	Identifier	r_cons_flush		795821	0					
ANR	796625	ArgumentList			795821	1					
ANR	796626	ExpressionStatement	r_cons_pipe_close ( pipefd )	2634:4:67337:67363	795821	1	True				
ANR	796627	CallExpression	r_cons_pipe_close ( pipefd )		795821	0					
ANR	796628	Callee	r_cons_pipe_close		795821	0					
ANR	796629	Identifier	r_cons_pipe_close		795821	0					
ANR	796630	ArgumentList	pipefd		795821	1					
ANR	796631	Argument	pipefd		795821	0					
ANR	796632	Identifier	pipefd		795821	0					
ANR	796633	IfStatement	if ( ! p )		795821	12					
ANR	796634	Condition	! p	2636:7:67377:67378	795821	0	True				
ANR	796635	UnaryOperationExpression	! p		795821	0					
ANR	796636	UnaryOperator	!		795821	0					
ANR	796637	Identifier	p		795821	1					
ANR	796638	CompoundStatement		131:11:2730:2730	795821	1					
ANR	796639	BreakStatement	break ;	2637:4:67387:67392	795821	0	True				
ANR	796640	IfStatement	if ( eos )		795821	13					
ANR	796641	Condition	eos	2639:7:67406:67408	795821	0	True				
ANR	796642	Identifier	eos		795821	0					
ANR	796643	CompoundStatement		134:12:2760:2760	795821	1					
ANR	796644	BreakStatement	break ;	2640:4:67417:67422	795821	0	True				
ANR	796645	IfStatement	if ( haveQuote )		795821	14					
ANR	796646	Condition	haveQuote	2642:7:67436:67444	795821	0	True				
ANR	796647	Identifier	haveQuote		795821	0					
ANR	796648	CompoundStatement		137:18:2796:2796	795821	1					
ANR	796649	IfStatement	if ( * p == ';' )		795821	0					
ANR	796650	Condition	* p == ';'	2643:8:67457:67465	795821	0	True				
ANR	796651	EqualityExpression	* p == ';'		795821	0		==			
ANR	796652	UnaryOperationExpression	* p		795821	0					
ANR	796653	UnaryOperator	*		795821	0					
ANR	796654	Identifier	p		795821	1					
ANR	796655	PrimaryExpression	';'		795821	1					
ANR	796656	CompoundStatement		138:19:2817:2817	795821	1					
ANR	796657	ExpressionStatement	cmd = p + 1	2644:5:67475:67486	795821	0	True				
ANR	796658	AssignmentExpression	cmd = p + 1		795821	0		=			
ANR	796659	Identifier	cmd		795821	0					
ANR	796660	AdditiveExpression	p + 1		795821	1		+			
ANR	796661	Identifier	p		795821	0					
ANR	796662	PrimaryExpression	1		795821	1					
ANR	796663	ElseStatement	else		795821	0					
ANR	796664	CompoundStatement		140:11:2848:2848	795821	0					
ANR	796665	IfStatement	"if ( * p == '""' )"		795821	0					
ANR	796666	Condition	"* p == '""'"	2646:9:67510:67518	795821	0	True				
ANR	796667	EqualityExpression	"* p == '""'"		795821	0		==			
ANR	796668	UnaryOperationExpression	* p		795821	0					
ANR	796669	UnaryOperator	*		795821	0					
ANR	796670	Identifier	p		795821	1					
ANR	796671	PrimaryExpression	"'""'"		795821	1					
ANR	796672	CompoundStatement		141:20:2870:2870	795821	1					
ANR	796673	ExpressionStatement	cmd = p + 1	2647:6:67529:67540	795821	0	True				
ANR	796674	AssignmentExpression	cmd = p + 1		795821	0		=			
ANR	796675	Identifier	cmd		795821	0					
ANR	796676	AdditiveExpression	p + 1		795821	1		+			
ANR	796677	Identifier	p		795821	0					
ANR	796678	PrimaryExpression	1		795821	1					
ANR	796679	ElseStatement	else		795821	0					
ANR	796680	CompoundStatement		143:12:2903:2903	795821	0					
ANR	796681	ExpressionStatement	"* p = '""'"	2649:6:67562:67570	795821	0	True				
ANR	796682	AssignmentExpression	"* p = '""'"		795821	0		=			
ANR	796683	UnaryOperationExpression	* p		795821	0					
ANR	796684	UnaryOperator	*		795821	0					
ANR	796685	Identifier	p		795821	1					
ANR	796686	PrimaryExpression	"'""'"		795821	1					
ANR	796687	ExpressionStatement	cmd = p	2650:6:67578:67585	795821	1	True				
ANR	796688	AssignmentExpression	cmd = p		795821	0		=			
ANR	796689	Identifier	cmd		795821	0					
ANR	796690	Identifier	p		795821	1					
ANR	796691	ElseStatement	else		795821	0					
ANR	796692	CompoundStatement		148:10:2959:2959	795821	0					
ANR	796693	ExpressionStatement	cmd = p + 1	2654:4:67616:67627	795821	0	True				
ANR	796694	AssignmentExpression	cmd = p + 1		795821	0		=			
ANR	796695	Identifier	cmd		795821	0					
ANR	796696	AdditiveExpression	p + 1		795821	1		+			
ANR	796697	Identifier	p		795821	0					
ANR	796698	PrimaryExpression	1		795821	1					
ANR	796699	ExpressionStatement	r_list_free ( tmpenvs )	2657:2:67640:67661	795821	5	True				
ANR	796700	CallExpression	r_list_free ( tmpenvs )		795821	0					
ANR	796701	Callee	r_list_free		795821	0					
ANR	796702	Identifier	r_list_free		795821	0					
ANR	796703	ArgumentList	tmpenvs		795821	1					
ANR	796704	Argument	tmpenvs		795821	0					
ANR	796705	Identifier	tmpenvs		795821	0					
ANR	796706	ReturnStatement	return true ;	2658:2:67665:67676	795821	6	True				
ANR	796707	Identifier	true		795821	0					
ANR	796708	Label	case '(' :	2659:1:67679:67687	795821	7	True				
ANR	796709	IfStatement	"if ( cmd [ 1 ] != '*' && ! strstr ( cmd , "")()"" ) )"		795821	8					
ANR	796710	Condition	"cmd [ 1 ] != '*' && ! strstr ( cmd , "")()"" )"	2660:6:67695:67731	795821	0	True				
ANR	796711	AndExpression	"cmd [ 1 ] != '*' && ! strstr ( cmd , "")()"" )"		795821	0		&&			
ANR	796712	EqualityExpression	cmd [ 1 ] != '*'		795821	0		!=			
ANR	796713	ArrayIndexing	cmd [ 1 ]		795821	0					
ANR	796714	Identifier	cmd		795821	0					
ANR	796715	PrimaryExpression	1		795821	1					
ANR	796716	PrimaryExpression	'*'		795821	1					
ANR	796717	UnaryOperationExpression	"! strstr ( cmd , "")()"" )"		795821	1					
ANR	796718	UnaryOperator	!		795821	0					
ANR	796719	CallExpression	"strstr ( cmd , "")()"" )"		795821	1					
ANR	796720	Callee	strstr		795821	0					
ANR	796721	Identifier	strstr		795821	0					
ANR	796722	ArgumentList	cmd		795821	1					
ANR	796723	Argument	cmd		795821	0					
ANR	796724	Identifier	cmd		795821	0					
ANR	796725	Argument	""")()"""		795821	1					
ANR	796726	PrimaryExpression	""")()"""		795821	0					
ANR	796727	CompoundStatement		155:45:3083:3083	795821	1					
ANR	796728	ExpressionStatement	r_list_free ( tmpenvs )	2661:3:67739:67760	795821	0	True				
ANR	796729	CallExpression	r_list_free ( tmpenvs )		795821	0					
ANR	796730	Callee	r_list_free		795821	0					
ANR	796731	Identifier	r_list_free		795821	0					
ANR	796732	ArgumentList	tmpenvs		795821	1					
ANR	796733	Argument	tmpenvs		795821	0					
ANR	796734	Identifier	tmpenvs		795821	0					
ANR	796735	ReturnStatement	"return r_cmd_call ( core -> rcmd , cmd ) ;"	2662:3:67765:67800	795821	1	True				
ANR	796736	CallExpression	"r_cmd_call ( core -> rcmd , cmd )"		795821	0					
ANR	796737	Callee	r_cmd_call		795821	0					
ANR	796738	Identifier	r_cmd_call		795821	0					
ANR	796739	ArgumentList	core -> rcmd		795821	1					
ANR	796740	Argument	core -> rcmd		795821	0					
ANR	796741	PtrMemberAccess	core -> rcmd		795821	0					
ANR	796742	Identifier	core		795821	0					
ANR	796743	Identifier	rcmd		795821	1					
ANR	796744	Argument	cmd		795821	1					
ANR	796745	Identifier	cmd		795821	0					
ANR	796746	BreakStatement	break ;	2664:2:67808:67813	795821	9	True				
ANR	796747	Label	case '?' :	2665:1:67816:67824	795821	10	True				
ANR	796748	IfStatement	if ( cmd [ 1 ] == '>' )		795821	11					
ANR	796749	Condition	cmd [ 1 ] == '>'	2666:6:67832:67844	795821	0	True				
ANR	796750	EqualityExpression	cmd [ 1 ] == '>'		795821	0		==			
ANR	796751	ArrayIndexing	cmd [ 1 ]		795821	0					
ANR	796752	Identifier	cmd		795821	0					
ANR	796753	PrimaryExpression	1		795821	1					
ANR	796754	PrimaryExpression	'>'		795821	1					
ANR	796755	CompoundStatement		161:21:3196:3196	795821	1					
ANR	796756	ExpressionStatement	"r_core_cmd_help ( core , help_msg_greater_sign )"	2667:3:67852:67897	795821	0	True				
ANR	796757	CallExpression	"r_core_cmd_help ( core , help_msg_greater_sign )"		795821	0					
ANR	796758	Callee	r_core_cmd_help		795821	0					
ANR	796759	Identifier	r_core_cmd_help		795821	0					
ANR	796760	ArgumentList	core		795821	1					
ANR	796761	Argument	core		795821	0					
ANR	796762	Identifier	core		795821	0					
ANR	796763	Argument	help_msg_greater_sign		795821	1					
ANR	796764	Identifier	help_msg_greater_sign		795821	0					
ANR	796765	ExpressionStatement	r_list_free ( tmpenvs )	2668:3:67902:67923	795821	1	True				
ANR	796766	CallExpression	r_list_free ( tmpenvs )		795821	0					
ANR	796767	Callee	r_list_free		795821	0					
ANR	796768	Identifier	r_list_free		795821	0					
ANR	796769	ArgumentList	tmpenvs		795821	1					
ANR	796770	Argument	tmpenvs		795821	0					
ANR	796771	Identifier	tmpenvs		795821	0					
ANR	796772	ReturnStatement	return true ;	2669:3:67928:67939	795821	2	True				
ANR	796773	Identifier	true		795821	0					
ANR	796774	IfStatement	if ( * cmd != '#' )		795821	24					
ANR	796775	Condition	* cmd != '#'	2675:5:67991:68001	795821	0	True				
ANR	796776	EqualityExpression	* cmd != '#'		795821	0		!=			
ANR	796777	UnaryOperationExpression	* cmd		795821	0					
ANR	796778	UnaryOperator	*		795821	0					
ANR	796779	Identifier	cmd		795821	1					
ANR	796780	PrimaryExpression	'#'		795821	1					
ANR	796781	CompoundStatement		170:18:3353:3353	795821	1					
ANR	796782	ExpressionStatement	"ptr = ( char * ) r_str_firstbut ( cmd , '#' , ""`\\"""" )"	2676:2:68008:68054	795821	0	True				
ANR	796783	AssignmentExpression	"ptr = ( char * ) r_str_firstbut ( cmd , '#' , ""`\\"""" )"		795821	0		=			
ANR	796784	Identifier	ptr		795821	0					
ANR	796785	CastExpression	"( char * ) r_str_firstbut ( cmd , '#' , ""`\\"""" )"		795821	1					
ANR	796786	CastTarget	char *		795821	0					
ANR	796787	CallExpression	"r_str_firstbut ( cmd , '#' , ""`\\"""" )"		795821	1					
ANR	796788	Callee	r_str_firstbut		795821	0					
ANR	796789	Identifier	r_str_firstbut		795821	0					
ANR	796790	ArgumentList	cmd		795821	1					
ANR	796791	Argument	cmd		795821	0					
ANR	796792	Identifier	cmd		795821	0					
ANR	796793	Argument	'#'		795821	1					
ANR	796794	PrimaryExpression	'#'		795821	0					
ANR	796795	Argument	"""`\\"""""		795821	2					
ANR	796796	PrimaryExpression	"""`\\"""""		795821	0					
ANR	796797	IfStatement	if ( ptr && ( ptr [ 1 ] == ' ' || ptr [ 1 ] == '\\t' ) )		795821	1					
ANR	796798	Condition	ptr && ( ptr [ 1 ] == ' ' || ptr [ 1 ] == '\\t' )	2677:6:68089:68128	795821	0	True				
ANR	796799	AndExpression	ptr && ( ptr [ 1 ] == ' ' || ptr [ 1 ] == '\\t' )		795821	0		&&			
ANR	796800	Identifier	ptr		795821	0					
ANR	796801	OrExpression	ptr [ 1 ] == ' ' || ptr [ 1 ] == '\\t'		795821	1		||			
ANR	796802	EqualityExpression	ptr [ 1 ] == ' '		795821	0		==			
ANR	796803	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	796804	Identifier	ptr		795821	0					
ANR	796805	PrimaryExpression	1		795821	1					
ANR	796806	PrimaryExpression	' '		795821	1					
ANR	796807	EqualityExpression	ptr [ 1 ] == '\\t'		795821	1		==			
ANR	796808	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	796809	Identifier	ptr		795821	0					
ANR	796810	PrimaryExpression	1		795821	1					
ANR	796811	PrimaryExpression	'\\t'		795821	1					
ANR	796812	CompoundStatement		172:48:3480:3480	795821	1					
ANR	796813	ExpressionStatement	* ptr = '\\0'	2678:3:68136:68147	795821	0	True				
ANR	796814	AssignmentExpression	* ptr = '\\0'		795821	0		=			
ANR	796815	UnaryOperationExpression	* ptr		795821	0					
ANR	796816	UnaryOperator	*		795821	0					
ANR	796817	Identifier	ptr		795821	1					
ANR	796818	PrimaryExpression	'\\0'		795821	1					
ANR	796819	IfStatement	if ( * cmd != '#' )		795821	25					
ANR	796820	Condition	* cmd != '#'	2685:5:68256:68266	795821	0	True				
ANR	796821	EqualityExpression	* cmd != '#'		795821	0		!=			
ANR	796822	UnaryOperationExpression	* cmd		795821	0					
ANR	796823	UnaryOperator	*		795821	0					
ANR	796824	Identifier	cmd		795821	1					
ANR	796825	PrimaryExpression	'#'		795821	1					
ANR	796826	CompoundStatement		180:18:3618:3618	795821	1					
ANR	796827	ExpressionStatement	"ptr = ( char * ) r_str_lastbut ( cmd , ';' , quotestr )"	2686:2:68273:68321	795821	0	True				
ANR	796828	AssignmentExpression	"ptr = ( char * ) r_str_lastbut ( cmd , ';' , quotestr )"		795821	0		=			
ANR	796829	Identifier	ptr		795821	0					
ANR	796830	CastExpression	"( char * ) r_str_lastbut ( cmd , ';' , quotestr )"		795821	1					
ANR	796831	CastTarget	char *		795821	0					
ANR	796832	CallExpression	"r_str_lastbut ( cmd , ';' , quotestr )"		795821	1					
ANR	796833	Callee	r_str_lastbut		795821	0					
ANR	796834	Identifier	r_str_lastbut		795821	0					
ANR	796835	ArgumentList	cmd		795821	1					
ANR	796836	Argument	cmd		795821	0					
ANR	796837	Identifier	cmd		795821	0					
ANR	796838	Argument	';'		795821	1					
ANR	796839	PrimaryExpression	';'		795821	0					
ANR	796840	Argument	quotestr		795821	2					
ANR	796841	Identifier	quotestr		795821	0					
ANR	796842	IfStatement	if ( colon && ptr )		795821	1					
ANR	796843	Condition	colon && ptr	2687:6:68329:68340	795821	0	True				
ANR	796844	AndExpression	colon && ptr		795821	0		&&			
ANR	796845	Identifier	colon		795821	0					
ANR	796846	Identifier	ptr		795821	1					
ANR	796847	CompoundStatement		183:3:3697:3705	795821	1					
ANR	796848	IdentifierDeclStatement	int ret ;	2688:3:68348:68356	795821	0	True				
ANR	796849	IdentifierDecl	ret		795821	0					
ANR	796850	IdentifierDeclType	int		795821	0					
ANR	796851	Identifier	ret		795821	1					
ANR	796852	ExpressionStatement	* ptr = '\\0'	2689:3:68361:68372	795821	1	True				
ANR	796853	AssignmentExpression	* ptr = '\\0'		795821	0		=			
ANR	796854	UnaryOperationExpression	* ptr		795821	0					
ANR	796855	UnaryOperator	*		795821	0					
ANR	796856	Identifier	ptr		795821	1					
ANR	796857	PrimaryExpression	'\\0'		795821	1					
ANR	796858	IfStatement	"if ( r_core_cmd_subst ( core , cmd ) == - 1 )"		795821	2					
ANR	796859	Condition	"r_core_cmd_subst ( core , cmd ) == - 1"	2690:7:68381:68414	795821	0	True				
ANR	796860	EqualityExpression	"r_core_cmd_subst ( core , cmd ) == - 1"		795821	0		==			
ANR	796861	CallExpression	"r_core_cmd_subst ( core , cmd )"		795821	0					
ANR	796862	Callee	r_core_cmd_subst		795821	0					
ANR	796863	Identifier	r_core_cmd_subst		795821	0					
ANR	796864	ArgumentList	core		795821	1					
ANR	796865	Argument	core		795821	0					
ANR	796866	Identifier	core		795821	0					
ANR	796867	Argument	cmd		795821	1					
ANR	796868	Identifier	cmd		795821	0					
ANR	796869	UnaryOperationExpression	- 1		795821	1					
ANR	796870	UnaryOperator	-		795821	0					
ANR	796871	PrimaryExpression	1		795821	1					
ANR	796872	CompoundStatement		185:43:3766:3766	795821	1					
ANR	796873	ExpressionStatement	r_list_free ( tmpenvs )	2691:4:68423:68444	795821	0	True				
ANR	796874	CallExpression	r_list_free ( tmpenvs )		795821	0					
ANR	796875	Callee	r_list_free		795821	0					
ANR	796876	Identifier	r_list_free		795821	0					
ANR	796877	ArgumentList	tmpenvs		795821	1					
ANR	796878	Argument	tmpenvs		795821	0					
ANR	796879	Identifier	tmpenvs		795821	0					
ANR	796880	ReturnStatement	return - 1 ;	2692:4:68450:68459	795821	1	True				
ANR	796881	UnaryOperationExpression	- 1		795821	0					
ANR	796882	UnaryOperator	-		795821	0					
ANR	796883	PrimaryExpression	1		795821	1					
ANR	796884	ExpressionStatement	cmd = ptr + 1	2694:3:68469:68482	795821	3	True				
ANR	796885	AssignmentExpression	cmd = ptr + 1		795821	0		=			
ANR	796886	Identifier	cmd		795821	0					
ANR	796887	AdditiveExpression	ptr + 1		795821	1		+			
ANR	796888	Identifier	ptr		795821	0					
ANR	796889	PrimaryExpression	1		795821	1					
ANR	796890	ExpressionStatement	"ret = r_core_cmd_subst ( core , cmd )"	2695:3:68487:68521	795821	4	True				
ANR	796891	AssignmentExpression	"ret = r_core_cmd_subst ( core , cmd )"		795821	0		=			
ANR	796892	Identifier	ret		795821	0					
ANR	796893	CallExpression	"r_core_cmd_subst ( core , cmd )"		795821	1					
ANR	796894	Callee	r_core_cmd_subst		795821	0					
ANR	796895	Identifier	r_core_cmd_subst		795821	0					
ANR	796896	ArgumentList	core		795821	1					
ANR	796897	Argument	core		795821	0					
ANR	796898	Identifier	core		795821	0					
ANR	796899	Argument	cmd		795821	1					
ANR	796900	Identifier	cmd		795821	0					
ANR	796901	ExpressionStatement	* ptr = ';'	2696:3:68526:68536	795821	5	True				
ANR	796902	AssignmentExpression	* ptr = ';'		795821	0		=			
ANR	796903	UnaryOperationExpression	* ptr		795821	0					
ANR	796904	UnaryOperator	*		795821	0					
ANR	796905	Identifier	ptr		795821	1					
ANR	796906	PrimaryExpression	';'		795821	1					
ANR	796907	ExpressionStatement	r_list_free ( tmpenvs )	2697:3:68541:68562	795821	6	True				
ANR	796908	CallExpression	r_list_free ( tmpenvs )		795821	0					
ANR	796909	Callee	r_list_free		795821	0					
ANR	796910	Identifier	r_list_free		795821	0					
ANR	796911	ArgumentList	tmpenvs		795821	1					
ANR	796912	Argument	tmpenvs		795821	0					
ANR	796913	Identifier	tmpenvs		795821	0					
ANR	796914	ReturnStatement	return ret ;	2698:3:68567:68577	795821	7	True				
ANR	796915	Identifier	ret		795821	0					
ANR	796916	ExpressionStatement	"ptr = ( char * ) r_str_lastbut ( cmd , '|' , quotestr )"	2706:1:68703:68751	795821	26	True				
ANR	796917	AssignmentExpression	"ptr = ( char * ) r_str_lastbut ( cmd , '|' , quotestr )"		795821	0		=			
ANR	796918	Identifier	ptr		795821	0					
ANR	796919	CastExpression	"( char * ) r_str_lastbut ( cmd , '|' , quotestr )"		795821	1					
ANR	796920	CastTarget	char *		795821	0					
ANR	796921	CallExpression	"r_str_lastbut ( cmd , '|' , quotestr )"		795821	1					
ANR	796922	Callee	r_str_lastbut		795821	0					
ANR	796923	Identifier	r_str_lastbut		795821	0					
ANR	796924	ArgumentList	cmd		795821	1					
ANR	796925	Argument	cmd		795821	0					
ANR	796926	Identifier	cmd		795821	0					
ANR	796927	Argument	'|'		795821	1					
ANR	796928	PrimaryExpression	'|'		795821	0					
ANR	796929	Argument	quotestr		795821	2					
ANR	796930	Identifier	quotestr		795821	0					
ANR	796931	IfStatement	if ( ptr )		795821	27					
ANR	796932	Condition	ptr	2707:5:68758:68760	795821	0	True				
ANR	796933	Identifier	ptr		795821	0					
ANR	796934	CompoundStatement		210:2:4252:4282	795821	1					
ANR	796935	IfStatement	if ( ptr > cmd )		795821	0					
ANR	796936	Condition	ptr > cmd	2708:6:68771:68779	795821	0	True				
ANR	796937	RelationalExpression	ptr > cmd		795821	0		>			
ANR	796938	Identifier	ptr		795821	0					
ANR	796939	Identifier	cmd		795821	1					
ANR	796940	CompoundStatement		204:3:4136:4154	795821	1					
ANR	796941	IdentifierDeclStatement	char * ch = ptr - 1 ;	2709:3:68787:68805	795821	0	True				
ANR	796942	IdentifierDecl	* ch = ptr - 1		795821	0					
ANR	796943	IdentifierDeclType	char *		795821	0					
ANR	796944	Identifier	ch		795821	1					
ANR	796945	AssignmentExpression	* ch = ptr - 1		795821	2		=			
ANR	796946	Identifier	ch		795821	0					
ANR	796947	AdditiveExpression	ptr - 1		795821	1		-			
ANR	796948	Identifier	ptr		795821	0					
ANR	796949	PrimaryExpression	1		795821	1					
ANR	796950	IfStatement	if ( * ch == '\\\\' )		795821	1					
ANR	796951	Condition	* ch == '\\\\'	2710:7:68814:68824	795821	0	True				
ANR	796952	EqualityExpression	* ch == '\\\\'		795821	0		==			
ANR	796953	UnaryOperationExpression	* ch		795821	0					
ANR	796954	UnaryOperator	*		795821	0					
ANR	796955	Identifier	ch		795821	1					
ANR	796956	PrimaryExpression	'\\\\'		795821	1					
ANR	796957	CompoundStatement		205:20:4176:4176	795821	1					
ANR	796958	ExpressionStatement	"memmove ( ch , ptr , strlen ( ptr ) + 1 )"	2711:4:68833:68868	795821	0	True				
ANR	796959	CallExpression	"memmove ( ch , ptr , strlen ( ptr ) + 1 )"		795821	0					
ANR	796960	Callee	memmove		795821	0					
ANR	796961	Identifier	memmove		795821	0					
ANR	796962	ArgumentList	ch		795821	1					
ANR	796963	Argument	ch		795821	0					
ANR	796964	Identifier	ch		795821	0					
ANR	796965	Argument	ptr		795821	1					
ANR	796966	Identifier	ptr		795821	0					
ANR	796967	Argument	strlen ( ptr ) + 1		795821	2					
ANR	796968	AdditiveExpression	strlen ( ptr ) + 1		795821	0		+			
ANR	796969	CallExpression	strlen ( ptr )		795821	0					
ANR	796970	Callee	strlen		795821	0					
ANR	796971	Identifier	strlen		795821	0					
ANR	796972	ArgumentList	ptr		795821	1					
ANR	796973	Argument	ptr		795821	0					
ANR	796974	Identifier	ptr		795821	0					
ANR	796975	PrimaryExpression	1		795821	1					
ANR	796976	GotoStatement	goto escape_pipe ;	2712:4:68874:68890	795821	1	True				
ANR	796977	Identifier	escape_pipe		795821	0					
ANR	796978	IdentifierDeclStatement	"char * ptr2 = strchr ( cmd , '`' ) ;"	2715:2:68903:68933	795821	1	True				
ANR	796979	IdentifierDecl	"* ptr2 = strchr ( cmd , '`' )"		795821	0					
ANR	796980	IdentifierDeclType	char *		795821	0					
ANR	796981	Identifier	ptr2		795821	1					
ANR	796982	AssignmentExpression	"* ptr2 = strchr ( cmd , '`' )"		795821	2		=			
ANR	796983	Identifier	ptr2		795821	0					
ANR	796984	CallExpression	"strchr ( cmd , '`' )"		795821	1					
ANR	796985	Callee	strchr		795821	0					
ANR	796986	Identifier	strchr		795821	0					
ANR	796987	ArgumentList	cmd		795821	1					
ANR	796988	Argument	cmd		795821	0					
ANR	796989	Identifier	cmd		795821	0					
ANR	796990	Argument	'`'		795821	1					
ANR	796991	PrimaryExpression	'`'		795821	0					
ANR	796992	IfStatement	if ( ! ptr2 || ( ptr2 && ptr2 > ptr ) )		795821	2					
ANR	796993	Condition	! ptr2 || ( ptr2 && ptr2 > ptr )	2716:6:68941:68969	795821	0	True				
ANR	796994	OrExpression	! ptr2 || ( ptr2 && ptr2 > ptr )		795821	0		||			
ANR	796995	UnaryOperationExpression	! ptr2		795821	0					
ANR	796996	UnaryOperator	!		795821	0					
ANR	796997	Identifier	ptr2		795821	1					
ANR	796998	AndExpression	ptr2 && ptr2 > ptr		795821	1		&&			
ANR	796999	Identifier	ptr2		795821	0					
ANR	797000	RelationalExpression	ptr2 > ptr		795821	1		>			
ANR	797001	Identifier	ptr2		795821	0					
ANR	797002	Identifier	ptr		795821	1					
ANR	797003	CompoundStatement		211:37:4321:4321	795821	1					
ANR	797004	IfStatement	if ( ! tick || ( tick && tick > ptr ) )		795821	0					
ANR	797005	Condition	! tick || ( tick && tick > ptr )	2717:7:68981:69009	795821	0	True				
ANR	797006	OrExpression	! tick || ( tick && tick > ptr )		795821	0		||			
ANR	797007	UnaryOperationExpression	! tick		795821	0					
ANR	797008	UnaryOperator	!		795821	0					
ANR	797009	Identifier	tick		795821	1					
ANR	797010	AndExpression	tick && tick > ptr		795821	1		&&			
ANR	797011	Identifier	tick		795821	0					
ANR	797012	RelationalExpression	tick > ptr		795821	1		>			
ANR	797013	Identifier	tick		795821	0					
ANR	797014	Identifier	ptr		795821	1					
ANR	797015	CompoundStatement		212:38:4361:4361	795821	1					
ANR	797016	ExpressionStatement	* ptr = '\\0'	2718:4:69018:69029	795821	0	True				
ANR	797017	AssignmentExpression	* ptr = '\\0'		795821	0		=			
ANR	797018	UnaryOperationExpression	* ptr		795821	0					
ANR	797019	UnaryOperator	*		795821	0					
ANR	797020	Identifier	ptr		795821	1					
ANR	797021	PrimaryExpression	'\\0'		795821	1					
ANR	797022	ExpressionStatement	cmd = r_str_trim_nc ( cmd )	2719:4:69035:69060	795821	1	True				
ANR	797023	AssignmentExpression	cmd = r_str_trim_nc ( cmd )		795821	0		=			
ANR	797024	Identifier	cmd		795821	0					
ANR	797025	CallExpression	r_str_trim_nc ( cmd )		795821	1					
ANR	797026	Callee	r_str_trim_nc		795821	0					
ANR	797027	Identifier	r_str_trim_nc		795821	0					
ANR	797028	ArgumentList	cmd		795821	1					
ANR	797029	Argument	cmd		795821	0					
ANR	797030	Identifier	cmd		795821	0					
ANR	797031	IfStatement	"if ( ! strcmp ( ptr + 1 , ""?"" ) )"		795821	2					
ANR	797032	Condition	"! strcmp ( ptr + 1 , ""?"" )"	2720:8:69070:69091	795821	0	True				
ANR	797033	UnaryOperationExpression	"! strcmp ( ptr + 1 , ""?"" )"		795821	0					
ANR	797034	UnaryOperator	!		795821	0					
ANR	797035	CallExpression	"strcmp ( ptr + 1 , ""?"" )"		795821	1					
ANR	797036	Callee	strcmp		795821	0					
ANR	797037	Identifier	strcmp		795821	0					
ANR	797038	ArgumentList	ptr + 1		795821	1					
ANR	797039	Argument	ptr + 1		795821	0					
ANR	797040	AdditiveExpression	ptr + 1		795821	0		+			
ANR	797041	Identifier	ptr		795821	0					
ANR	797042	PrimaryExpression	1		795821	1					
ANR	797043	Argument	"""?"""		795821	1					
ANR	797044	PrimaryExpression	"""?"""		795821	0					
ANR	797045	CompoundStatement		215:32:4443:4443	795821	1					
ANR	797046	ExpressionStatement	"r_core_cmd_help ( core , help_msg_vertical_bar )"	2721:5:69109:69154	795821	0	True				
ANR	797047	CallExpression	"r_core_cmd_help ( core , help_msg_vertical_bar )"		795821	0					
ANR	797048	Callee	r_core_cmd_help		795821	0					
ANR	797049	Identifier	r_core_cmd_help		795821	0					
ANR	797050	ArgumentList	core		795821	1					
ANR	797051	Argument	core		795821	0					
ANR	797052	Identifier	core		795821	0					
ANR	797053	Argument	help_msg_vertical_bar		795821	1					
ANR	797054	Identifier	help_msg_vertical_bar		795821	0					
ANR	797055	ExpressionStatement	r_list_free ( tmpenvs )	2722:5:69161:69182	795821	1	True				
ANR	797056	CallExpression	r_list_free ( tmpenvs )		795821	0					
ANR	797057	Callee	r_list_free		795821	0					
ANR	797058	Identifier	r_list_free		795821	0					
ANR	797059	ArgumentList	tmpenvs		795821	1					
ANR	797060	Argument	tmpenvs		795821	0					
ANR	797061	Identifier	tmpenvs		795821	0					
ANR	797062	ReturnStatement	return ret ;	2723:5:69189:69199	795821	2	True				
ANR	797063	Identifier	ret		795821	0					
ANR	797064	ElseStatement	else		795821	0					
ANR	797065	IfStatement	"if ( ! strncmp ( ptr + 1 , ""H"" , 1 ) )"		795821	0					
ANR	797066	Condition	"! strncmp ( ptr + 1 , ""H"" , 1 )"	2724:15:69216:69241	795821	0	True				
ANR	797067	UnaryOperationExpression	"! strncmp ( ptr + 1 , ""H"" , 1 )"		795821	0					
ANR	797068	UnaryOperator	!		795821	0					
ANR	797069	CallExpression	"strncmp ( ptr + 1 , ""H"" , 1 )"		795821	1					
ANR	797070	Callee	strncmp		795821	0					
ANR	797071	Identifier	strncmp		795821	0					
ANR	797072	ArgumentList	ptr + 1		795821	1					
ANR	797073	Argument	ptr + 1		795821	0					
ANR	797074	AdditiveExpression	ptr + 1		795821	0		+			
ANR	797075	Identifier	ptr		795821	0					
ANR	797076	PrimaryExpression	1		795821	1					
ANR	797077	Argument	"""H"""		795821	1					
ANR	797078	PrimaryExpression	"""H"""		795821	0					
ANR	797079	Argument	1		795821	2					
ANR	797080	PrimaryExpression	1		795821	0					
ANR	797081	CompoundStatement		219:43:4593:4593	795821	1					
ANR	797082	ExpressionStatement	"scr_html = r_config_get_i ( core -> config , ""scr.html"" )"	2725:5:69259:69311	795821	0	True				
ANR	797083	AssignmentExpression	"scr_html = r_config_get_i ( core -> config , ""scr.html"" )"		795821	0		=			
ANR	797084	Identifier	scr_html		795821	0					
ANR	797085	CallExpression	"r_config_get_i ( core -> config , ""scr.html"" )"		795821	1					
ANR	797086	Callee	r_config_get_i		795821	0					
ANR	797087	Identifier	r_config_get_i		795821	0					
ANR	797088	ArgumentList	core -> config		795821	1					
ANR	797089	Argument	core -> config		795821	0					
ANR	797090	PtrMemberAccess	core -> config		795821	0					
ANR	797091	Identifier	core		795821	0					
ANR	797092	Identifier	config		795821	1					
ANR	797093	Argument	"""scr.html"""		795821	1					
ANR	797094	PrimaryExpression	"""scr.html"""		795821	0					
ANR	797095	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , true )"	2726:5:69318:69365	795821	1	True				
ANR	797096	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , true )"		795821	0					
ANR	797097	Callee	r_config_set_i		795821	0					
ANR	797098	Identifier	r_config_set_i		795821	0					
ANR	797099	ArgumentList	core -> config		795821	1					
ANR	797100	Argument	core -> config		795821	0					
ANR	797101	PtrMemberAccess	core -> config		795821	0					
ANR	797102	Identifier	core		795821	0					
ANR	797103	Identifier	config		795821	1					
ANR	797104	Argument	"""scr.html"""		795821	1					
ANR	797105	PrimaryExpression	"""scr.html"""		795821	0					
ANR	797106	Argument	true		795821	2					
ANR	797107	Identifier	true		795821	0					
ANR	797108	ElseStatement	else		795821	0					
ANR	797109	IfStatement	"if ( ! strcmp ( ptr + 1 , ""T"" ) )"		795821	0					
ANR	797110	Condition	"! strcmp ( ptr + 1 , ""T"" )"	2727:15:69382:69403	795821	0	True				
ANR	797111	UnaryOperationExpression	"! strcmp ( ptr + 1 , ""T"" )"		795821	0					
ANR	797112	UnaryOperator	!		795821	0					
ANR	797113	CallExpression	"strcmp ( ptr + 1 , ""T"" )"		795821	1					
ANR	797114	Callee	strcmp		795821	0					
ANR	797115	Identifier	strcmp		795821	0					
ANR	797116	ArgumentList	ptr + 1		795821	1					
ANR	797117	Argument	ptr + 1		795821	0					
ANR	797118	AdditiveExpression	ptr + 1		795821	0		+			
ANR	797119	Identifier	ptr		795821	0					
ANR	797120	PrimaryExpression	1		795821	1					
ANR	797121	Argument	"""T"""		795821	1					
ANR	797122	PrimaryExpression	"""T"""		795821	0					
ANR	797123	CompoundStatement		222:39:4755:4755	795821	1					
ANR	797124	ExpressionStatement	"scr_color = r_config_get_i ( core -> config , ""scr.color"" )"	2728:5:69421:69475	795821	0	True				
ANR	797125	AssignmentExpression	"scr_color = r_config_get_i ( core -> config , ""scr.color"" )"		795821	0		=			
ANR	797126	Identifier	scr_color		795821	0					
ANR	797127	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		795821	1					
ANR	797128	Callee	r_config_get_i		795821	0					
ANR	797129	Identifier	r_config_get_i		795821	0					
ANR	797130	ArgumentList	core -> config		795821	1					
ANR	797131	Argument	core -> config		795821	0					
ANR	797132	PtrMemberAccess	core -> config		795821	0					
ANR	797133	Identifier	core		795821	0					
ANR	797134	Identifier	config		795821	1					
ANR	797135	Argument	"""scr.color"""		795821	1					
ANR	797136	PrimaryExpression	"""scr.color"""		795821	0					
ANR	797137	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"	2729:5:69482:69545	795821	1	True				
ANR	797138	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"		795821	0					
ANR	797139	Callee	r_config_set_i		795821	0					
ANR	797140	Identifier	r_config_set_i		795821	0					
ANR	797141	ArgumentList	core -> config		795821	1					
ANR	797142	Argument	core -> config		795821	0					
ANR	797143	PtrMemberAccess	core -> config		795821	0					
ANR	797144	Identifier	core		795821	0					
ANR	797145	Identifier	config		795821	1					
ANR	797146	Argument	"""scr.color"""		795821	1					
ANR	797147	PrimaryExpression	"""scr.color"""		795821	0					
ANR	797148	Argument	COLOR_MODE_DISABLED		795821	2					
ANR	797149	Identifier	COLOR_MODE_DISABLED		795821	0					
ANR	797150	ExpressionStatement	core -> cons -> use_tts = true	2730:5:69552:69578	795821	2	True				
ANR	797151	AssignmentExpression	core -> cons -> use_tts = true		795821	0		=			
ANR	797152	PtrMemberAccess	core -> cons -> use_tts		795821	0					
ANR	797153	PtrMemberAccess	core -> cons		795821	0					
ANR	797154	Identifier	core		795821	0					
ANR	797155	Identifier	cons		795821	1					
ANR	797156	Identifier	use_tts		795821	1					
ANR	797157	Identifier	true		795821	1					
ANR	797158	ElseStatement	else		795821	0					
ANR	797159	IfStatement	"if ( ! strcmp ( ptr + 1 , ""."" ) )"		795821	0					
ANR	797160	Condition	"! strcmp ( ptr + 1 , ""."" )"	2731:15:69595:69616	795821	0	True				
ANR	797161	UnaryOperationExpression	"! strcmp ( ptr + 1 , ""."" )"		795821	0					
ANR	797162	UnaryOperator	!		795821	0					
ANR	797163	CallExpression	"strcmp ( ptr + 1 , ""."" )"		795821	1					
ANR	797164	Callee	strcmp		795821	0					
ANR	797165	Identifier	strcmp		795821	0					
ANR	797166	ArgumentList	ptr + 1		795821	1					
ANR	797167	Argument	ptr + 1		795821	0					
ANR	797168	AdditiveExpression	ptr + 1		795821	0		+			
ANR	797169	Identifier	ptr		795821	0					
ANR	797170	PrimaryExpression	1		795821	1					
ANR	797171	Argument	"""."""		795821	1					
ANR	797172	PrimaryExpression	"""."""		795821	0					
ANR	797173	CompoundStatement		226:39:4968:4968	795821	1					
ANR	797174	ExpressionStatement	"ret = * cmd ? r_core_cmdf ( core , "".%s"" , cmd ) : 0"	2732:5:69634:69681	795821	0	True				
ANR	797175	AssignmentExpression	"ret = * cmd ? r_core_cmdf ( core , "".%s"" , cmd ) : 0"		795821	0		=			
ANR	797176	Identifier	ret		795821	0					
ANR	797177	ConditionalExpression	"* cmd ? r_core_cmdf ( core , "".%s"" , cmd ) : 0"		795821	1					
ANR	797178	Condition	* cmd		795821	0					
ANR	797179	UnaryOperationExpression	* cmd		795821	0					
ANR	797180	UnaryOperator	*		795821	0					
ANR	797181	Identifier	cmd		795821	1					
ANR	797182	CallExpression	"r_core_cmdf ( core , "".%s"" , cmd )"		795821	1					
ANR	797183	Callee	r_core_cmdf		795821	0					
ANR	797184	Identifier	r_core_cmdf		795821	0					
ANR	797185	ArgumentList	core		795821	1					
ANR	797186	Argument	core		795821	0					
ANR	797187	Identifier	core		795821	0					
ANR	797188	Argument	""".%s"""		795821	1					
ANR	797189	PrimaryExpression	""".%s"""		795821	0					
ANR	797190	Argument	cmd		795821	2					
ANR	797191	Identifier	cmd		795821	0					
ANR	797192	PrimaryExpression	0		795821	2					
ANR	797193	ExpressionStatement	r_list_free ( tmpenvs )	2733:5:69688:69709	795821	1	True				
ANR	797194	CallExpression	r_list_free ( tmpenvs )		795821	0					
ANR	797195	Callee	r_list_free		795821	0					
ANR	797196	Identifier	r_list_free		795821	0					
ANR	797197	ArgumentList	tmpenvs		795821	1					
ANR	797198	Argument	tmpenvs		795821	0					
ANR	797199	Identifier	tmpenvs		795821	0					
ANR	797200	ReturnStatement	return ret ;	2734:5:69716:69726	795821	2	True				
ANR	797201	Identifier	ret		795821	0					
ANR	797202	ElseStatement	else		795821	0					
ANR	797203	IfStatement	if ( ptr [ 1 ] )		795821	0					
ANR	797204	Condition	ptr [ 1 ]	2735:15:69743:69748	795821	0	True				
ANR	797205	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	797206	Identifier	ptr		795821	0					
ANR	797207	PrimaryExpression	1		795821	1					
ANR	797208	CompoundStatement		231:5:5122:5150	795821	1					
ANR	797209	IdentifierDeclStatement	int value = core -> num -> value ;	2736:5:69773:69801	795821	0	True				
ANR	797210	IdentifierDecl	value = core -> num -> value		795821	0					
ANR	797211	IdentifierDeclType	int		795821	0					
ANR	797212	Identifier	value		795821	1					
ANR	797213	AssignmentExpression	value = core -> num -> value		795821	2		=			
ANR	797214	Identifier	value		795821	0					
ANR	797215	PtrMemberAccess	core -> num -> value		795821	1					
ANR	797216	PtrMemberAccess	core -> num		795821	0					
ANR	797217	Identifier	core		795821	0					
ANR	797218	Identifier	num		795821	1					
ANR	797219	Identifier	value		795821	1					
ANR	797220	IfStatement	if ( * cmd )		795821	1					
ANR	797221	Condition	* cmd	2737:9:69812:69815	795821	0	True				
ANR	797222	UnaryOperationExpression	* cmd		795821	0					
ANR	797223	UnaryOperator	*		795821	0					
ANR	797224	Identifier	cmd		795821	1					
ANR	797225	CompoundStatement		232:15:5167:5167	795821	1					
ANR	797226	ExpressionStatement	"r_core_cmd_pipe ( core , cmd , ptr + 1 )"	2738:6:69826:69862	795821	0	True				
ANR	797227	CallExpression	"r_core_cmd_pipe ( core , cmd , ptr + 1 )"		795821	0					
ANR	797228	Callee	r_core_cmd_pipe		795821	0					
ANR	797229	Identifier	r_core_cmd_pipe		795821	0					
ANR	797230	ArgumentList	core		795821	1					
ANR	797231	Argument	core		795821	0					
ANR	797232	Identifier	core		795821	0					
ANR	797233	Argument	cmd		795821	1					
ANR	797234	Identifier	cmd		795821	0					
ANR	797235	Argument	ptr + 1		795821	2					
ANR	797236	AdditiveExpression	ptr + 1		795821	0		+			
ANR	797237	Identifier	ptr		795821	0					
ANR	797238	PrimaryExpression	1		795821	1					
ANR	797239	ElseStatement	else		795821	0					
ANR	797240	CompoundStatement		235:6:5233:5276	795821	0					
ANR	797241	IdentifierDeclStatement	"char * res = r_io_system ( core -> io , ptr + 1 ) ;"	2740:6:69884:69927	795821	0	True				
ANR	797242	IdentifierDecl	"* res = r_io_system ( core -> io , ptr + 1 )"		795821	0					
ANR	797243	IdentifierDeclType	char *		795821	0					
ANR	797244	Identifier	res		795821	1					
ANR	797245	AssignmentExpression	"* res = r_io_system ( core -> io , ptr + 1 )"		795821	2		=			
ANR	797246	Identifier	res		795821	0					
ANR	797247	CallExpression	"r_io_system ( core -> io , ptr + 1 )"		795821	1					
ANR	797248	Callee	r_io_system		795821	0					
ANR	797249	Identifier	r_io_system		795821	0					
ANR	797250	ArgumentList	core -> io		795821	1					
ANR	797251	Argument	core -> io		795821	0					
ANR	797252	PtrMemberAccess	core -> io		795821	0					
ANR	797253	Identifier	core		795821	0					
ANR	797254	Identifier	io		795821	1					
ANR	797255	Argument	ptr + 1		795821	1					
ANR	797256	AdditiveExpression	ptr + 1		795821	0		+			
ANR	797257	Identifier	ptr		795821	0					
ANR	797258	PrimaryExpression	1		795821	1					
ANR	797259	IfStatement	if ( res )		795821	1					
ANR	797260	Condition	res	2741:10:69939:69941	795821	0	True				
ANR	797261	Identifier	res		795821	0					
ANR	797262	CompoundStatement		236:15:5293:5293	795821	1					
ANR	797263	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , res )"	2742:7:69953:69980	795821	0	True				
ANR	797264	CallExpression	"r_cons_printf ( ""%s\\n"" , res )"		795821	0					
ANR	797265	Callee	r_cons_printf		795821	0					
ANR	797266	Identifier	r_cons_printf		795821	0					
ANR	797267	ArgumentList	"""%s\\n"""		795821	1					
ANR	797268	Argument	"""%s\\n"""		795821	0					
ANR	797269	PrimaryExpression	"""%s\\n"""		795821	0					
ANR	797270	Argument	res		795821	1					
ANR	797271	Identifier	res		795821	0					
ANR	797272	ExpressionStatement	free ( res )	2743:7:69989:69999	795821	1	True				
ANR	797273	CallExpression	free ( res )		795821	0					
ANR	797274	Callee	free		795821	0					
ANR	797275	Identifier	free		795821	0					
ANR	797276	ArgumentList	res		795821	1					
ANR	797277	Argument	res		795821	0					
ANR	797278	Identifier	res		795821	0					
ANR	797279	ExpressionStatement	core -> num -> value = value	2746:5:70021:70045	795821	2	True				
ANR	797280	AssignmentExpression	core -> num -> value = value		795821	0		=			
ANR	797281	PtrMemberAccess	core -> num -> value		795821	0					
ANR	797282	PtrMemberAccess	core -> num		795821	0					
ANR	797283	Identifier	core		795821	0					
ANR	797284	Identifier	num		795821	1					
ANR	797285	Identifier	value		795821	1					
ANR	797286	Identifier	value		795821	1					
ANR	797287	ExpressionStatement	r_list_free ( tmpenvs )	2747:5:70052:70073	795821	3	True				
ANR	797288	CallExpression	r_list_free ( tmpenvs )		795821	0					
ANR	797289	Callee	r_list_free		795821	0					
ANR	797290	Identifier	r_list_free		795821	0					
ANR	797291	ArgumentList	tmpenvs		795821	1					
ANR	797292	Argument	tmpenvs		795821	0					
ANR	797293	Identifier	tmpenvs		795821	0					
ANR	797294	ReturnStatement	return 0 ;	2748:5:70080:70088	795821	4	True				
ANR	797295	PrimaryExpression	0		795821	0					
ANR	797296	ElseStatement	else		795821	0					
ANR	797297	CompoundStatement		244:11:5450:5450	795821	0					
ANR	797298	ExpressionStatement	"scr_html = r_config_get_i ( core -> config , ""scr.html"" )"	2750:5:70115:70167	795821	0	True				
ANR	797299	AssignmentExpression	"scr_html = r_config_get_i ( core -> config , ""scr.html"" )"		795821	0		=			
ANR	797300	Identifier	scr_html		795821	0					
ANR	797301	CallExpression	"r_config_get_i ( core -> config , ""scr.html"" )"		795821	1					
ANR	797302	Callee	r_config_get_i		795821	0					
ANR	797303	Identifier	r_config_get_i		795821	0					
ANR	797304	ArgumentList	core -> config		795821	1					
ANR	797305	Argument	core -> config		795821	0					
ANR	797306	PtrMemberAccess	core -> config		795821	0					
ANR	797307	Identifier	core		795821	0					
ANR	797308	Identifier	config		795821	1					
ANR	797309	Argument	"""scr.html"""		795821	1					
ANR	797310	PrimaryExpression	"""scr.html"""		795821	0					
ANR	797311	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , 0 )"	2751:5:70174:70218	795821	1	True				
ANR	797312	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , 0 )"		795821	0					
ANR	797313	Callee	r_config_set_i		795821	0					
ANR	797314	Identifier	r_config_set_i		795821	0					
ANR	797315	ArgumentList	core -> config		795821	1					
ANR	797316	Argument	core -> config		795821	0					
ANR	797317	PtrMemberAccess	core -> config		795821	0					
ANR	797318	Identifier	core		795821	0					
ANR	797319	Identifier	config		795821	1					
ANR	797320	Argument	"""scr.html"""		795821	1					
ANR	797321	PrimaryExpression	"""scr.html"""		795821	0					
ANR	797322	Argument	0		795821	2					
ANR	797323	PrimaryExpression	0		795821	0					
ANR	797324	ExpressionStatement	"scr_color = r_config_get_i ( core -> config , ""scr.color"" )"	2752:5:70225:70279	795821	2	True				
ANR	797325	AssignmentExpression	"scr_color = r_config_get_i ( core -> config , ""scr.color"" )"		795821	0		=			
ANR	797326	Identifier	scr_color		795821	0					
ANR	797327	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		795821	1					
ANR	797328	Callee	r_config_get_i		795821	0					
ANR	797329	Identifier	r_config_get_i		795821	0					
ANR	797330	ArgumentList	core -> config		795821	1					
ANR	797331	Argument	core -> config		795821	0					
ANR	797332	PtrMemberAccess	core -> config		795821	0					
ANR	797333	Identifier	core		795821	0					
ANR	797334	Identifier	config		795821	1					
ANR	797335	Argument	"""scr.color"""		795821	1					
ANR	797336	PrimaryExpression	"""scr.color"""		795821	0					
ANR	797337	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"	2753:5:70286:70349	795821	3	True				
ANR	797338	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"		795821	0					
ANR	797339	Callee	r_config_set_i		795821	0					
ANR	797340	Identifier	r_config_set_i		795821	0					
ANR	797341	ArgumentList	core -> config		795821	1					
ANR	797342	Argument	core -> config		795821	0					
ANR	797343	PtrMemberAccess	core -> config		795821	0					
ANR	797344	Identifier	core		795821	0					
ANR	797345	Identifier	config		795821	1					
ANR	797346	Argument	"""scr.color"""		795821	1					
ANR	797347	PrimaryExpression	"""scr.color"""		795821	0					
ANR	797348	Argument	COLOR_MODE_DISABLED		795821	2					
ANR	797349	Identifier	COLOR_MODE_DISABLED		795821	0					
ANR	797350	Label	escape_pipe :	2758:0:70369:70380	795821	28	True				
ANR	797351	Identifier	escape_pipe		795821	0					
ANR	797352	ExpressionStatement	"ptr = ( char * ) r_str_lastbut ( cmd , '&' , quotestr )"	2762:1:70435:70483	795821	29	True				
ANR	797353	AssignmentExpression	"ptr = ( char * ) r_str_lastbut ( cmd , '&' , quotestr )"		795821	0		=			
ANR	797354	Identifier	ptr		795821	0					
ANR	797355	CastExpression	"( char * ) r_str_lastbut ( cmd , '&' , quotestr )"		795821	1					
ANR	797356	CastTarget	char *		795821	0					
ANR	797357	CallExpression	"r_str_lastbut ( cmd , '&' , quotestr )"		795821	1					
ANR	797358	Callee	r_str_lastbut		795821	0					
ANR	797359	Identifier	r_str_lastbut		795821	0					
ANR	797360	ArgumentList	cmd		795821	1					
ANR	797361	Argument	cmd		795821	0					
ANR	797362	Identifier	cmd		795821	0					
ANR	797363	Argument	'&'		795821	1					
ANR	797364	PrimaryExpression	'&'		795821	0					
ANR	797365	Argument	quotestr		795821	2					
ANR	797366	Identifier	quotestr		795821	0					
ANR	797367	WhileStatement	while ( ptr && * ptr && ptr [ 1 ] == '&' )		795821	30					
ANR	797368	Condition	ptr && * ptr && ptr [ 1 ] == '&'	2764:8:70521:70548	795821	0	True				
ANR	797369	AndExpression	ptr && * ptr && ptr [ 1 ] == '&'		795821	0		&&			
ANR	797370	Identifier	ptr		795821	0					
ANR	797371	AndExpression	* ptr && ptr [ 1 ] == '&'		795821	1		&&			
ANR	797372	UnaryOperationExpression	* ptr		795821	0					
ANR	797373	UnaryOperator	*		795821	0					
ANR	797374	Identifier	ptr		795821	1					
ANR	797375	EqualityExpression	ptr [ 1 ] == '&'		795821	1		==			
ANR	797376	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	797377	Identifier	ptr		795821	0					
ANR	797378	PrimaryExpression	1		795821	1					
ANR	797379	PrimaryExpression	'&'		795821	1					
ANR	797380	CompoundStatement		259:38:5900:5900	795821	1					
ANR	797381	ExpressionStatement	* ptr = '\\0'	2765:2:70555:70566	795821	0	True				
ANR	797382	AssignmentExpression	* ptr = '\\0'		795821	0		=			
ANR	797383	UnaryOperationExpression	* ptr		795821	0					
ANR	797384	UnaryOperator	*		795821	0					
ANR	797385	Identifier	ptr		795821	1					
ANR	797386	PrimaryExpression	'\\0'		795821	1					
ANR	797387	ExpressionStatement	"ret = r_cmd_call ( core -> rcmd , cmd )"	2766:2:70570:70604	795821	1	True				
ANR	797388	AssignmentExpression	"ret = r_cmd_call ( core -> rcmd , cmd )"		795821	0		=			
ANR	797389	Identifier	ret		795821	0					
ANR	797390	CallExpression	"r_cmd_call ( core -> rcmd , cmd )"		795821	1					
ANR	797391	Callee	r_cmd_call		795821	0					
ANR	797392	Identifier	r_cmd_call		795821	0					
ANR	797393	ArgumentList	core -> rcmd		795821	1					
ANR	797394	Argument	core -> rcmd		795821	0					
ANR	797395	PtrMemberAccess	core -> rcmd		795821	0					
ANR	797396	Identifier	core		795821	0					
ANR	797397	Identifier	rcmd		795821	1					
ANR	797398	Argument	cmd		795821	1					
ANR	797399	Identifier	cmd		795821	0					
ANR	797400	IfStatement	if ( ret == - 1 )		795821	2					
ANR	797401	Condition	ret == - 1	2767:6:70612:70620	795821	0	True				
ANR	797402	EqualityExpression	ret == - 1		795821	0		==			
ANR	797403	Identifier	ret		795821	0					
ANR	797404	UnaryOperationExpression	- 1		795821	1					
ANR	797405	UnaryOperator	-		795821	0					
ANR	797406	PrimaryExpression	1		795821	1					
ANR	797407	CompoundStatement		262:17:5972:5972	795821	1					
ANR	797408	ExpressionStatement	"eprintf ( ""command error(%s)\\n"" , cmd )"	2768:3:70628:70664	795821	0	True				
ANR	797409	CallExpression	"eprintf ( ""command error(%s)\\n"" , cmd )"		795821	0					
ANR	797410	Callee	eprintf		795821	0					
ANR	797411	Identifier	eprintf		795821	0					
ANR	797412	ArgumentList	"""command error(%s)\\n"""		795821	1					
ANR	797413	Argument	"""command error(%s)\\n"""		795821	0					
ANR	797414	PrimaryExpression	"""command error(%s)\\n"""		795821	0					
ANR	797415	Argument	cmd		795821	1					
ANR	797416	Identifier	cmd		795821	0					
ANR	797417	IfStatement	if ( scr_html != - 1 )		795821	1					
ANR	797418	Condition	scr_html != - 1	2769:7:70673:70686	795821	0	True				
ANR	797419	EqualityExpression	scr_html != - 1		795821	0		!=			
ANR	797420	Identifier	scr_html		795821	0					
ANR	797421	UnaryOperationExpression	- 1		795821	1					
ANR	797422	UnaryOperator	-		795821	0					
ANR	797423	PrimaryExpression	1		795821	1					
ANR	797424	CompoundStatement		264:23:6038:6038	795821	1					
ANR	797425	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"	2770:4:70695:70746	795821	0	True				
ANR	797426	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"		795821	0					
ANR	797427	Callee	r_config_set_i		795821	0					
ANR	797428	Identifier	r_config_set_i		795821	0					
ANR	797429	ArgumentList	core -> config		795821	1					
ANR	797430	Argument	core -> config		795821	0					
ANR	797431	PtrMemberAccess	core -> config		795821	0					
ANR	797432	Identifier	core		795821	0					
ANR	797433	Identifier	config		795821	1					
ANR	797434	Argument	"""scr.html"""		795821	1					
ANR	797435	PrimaryExpression	"""scr.html"""		795821	0					
ANR	797436	Argument	scr_html		795821	2					
ANR	797437	Identifier	scr_html		795821	0					
ANR	797438	IfStatement	if ( scr_color != - 1 )		795821	2					
ANR	797439	Condition	scr_color != - 1	2772:7:70760:70774	795821	0	True				
ANR	797440	EqualityExpression	scr_color != - 1		795821	0		!=			
ANR	797441	Identifier	scr_color		795821	0					
ANR	797442	UnaryOperationExpression	- 1		795821	1					
ANR	797443	UnaryOperator	-		795821	0					
ANR	797444	PrimaryExpression	1		795821	1					
ANR	797445	CompoundStatement		267:24:6126:6126	795821	1					
ANR	797446	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , scr_color )"	2773:4:70783:70836	795821	0	True				
ANR	797447	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , scr_color )"		795821	0					
ANR	797448	Callee	r_config_set_i		795821	0					
ANR	797449	Identifier	r_config_set_i		795821	0					
ANR	797450	ArgumentList	core -> config		795821	1					
ANR	797451	Argument	core -> config		795821	0					
ANR	797452	PtrMemberAccess	core -> config		795821	0					
ANR	797453	Identifier	core		795821	0					
ANR	797454	Identifier	config		795821	1					
ANR	797455	Argument	"""scr.color"""		795821	1					
ANR	797456	PrimaryExpression	"""scr.color"""		795821	0					
ANR	797457	Argument	scr_color		795821	2					
ANR	797458	Identifier	scr_color		795821	0					
ANR	797459	ExpressionStatement	r_list_free ( tmpenvs )	2775:3:70846:70867	795821	3	True				
ANR	797460	CallExpression	r_list_free ( tmpenvs )		795821	0					
ANR	797461	Callee	r_list_free		795821	0					
ANR	797462	Identifier	r_list_free		795821	0					
ANR	797463	ArgumentList	tmpenvs		795821	1					
ANR	797464	Argument	tmpenvs		795821	0					
ANR	797465	Identifier	tmpenvs		795821	0					
ANR	797466	ReturnStatement	return ret ;	2776:3:70872:70882	795821	4	True				
ANR	797467	Identifier	ret		795821	0					
ANR	797468	ForStatement	for ( cmd = ptr + 2 ; cmd && * cmd == ' ' ; cmd ++ )		795821	3					
ANR	797469	ForInit	cmd = ptr + 2 ;	2778:7:70895:70908	795821	0	True				
ANR	797470	AssignmentExpression	cmd = ptr + 2		795821	0		=			
ANR	797471	Identifier	cmd		795821	0					
ANR	797472	AdditiveExpression	ptr + 2		795821	1		+			
ANR	797473	Identifier	ptr		795821	0					
ANR	797474	PrimaryExpression	2		795821	1					
ANR	797475	Condition	cmd && * cmd == ' '	2778:22:70910:70927	795821	1	True				
ANR	797476	AndExpression	cmd && * cmd == ' '		795821	0		&&			
ANR	797477	Identifier	cmd		795821	0					
ANR	797478	EqualityExpression	* cmd == ' '		795821	1		==			
ANR	797479	UnaryOperationExpression	* cmd		795821	0					
ANR	797480	UnaryOperator	*		795821	0					
ANR	797481	Identifier	cmd		795821	1					
ANR	797482	PrimaryExpression	' '		795821	1					
ANR	797483	PostIncDecOperationExpression	cmd ++	2778:42:70930:70934	795821	2	True				
ANR	797484	Identifier	cmd		795821	0					
ANR	797485	IncDec	++		795821	1					
ANR	797486	CompoundStatement		273:49:6286:6286	795821	3					
ANR	797487	ExpressionStatement		2779:3:70942:70942	795821	0	True				
ANR	797488	ExpressionStatement	"ptr = strchr ( cmd , '&' )"	2781:2:70950:70973	795821	4	True				
ANR	797489	AssignmentExpression	"ptr = strchr ( cmd , '&' )"		795821	0		=			
ANR	797490	Identifier	ptr		795821	0					
ANR	797491	CallExpression	"strchr ( cmd , '&' )"		795821	1					
ANR	797492	Callee	strchr		795821	0					
ANR	797493	Identifier	strchr		795821	0					
ANR	797494	ArgumentList	cmd		795821	1					
ANR	797495	Argument	cmd		795821	0					
ANR	797496	Identifier	cmd		795821	0					
ANR	797497	Argument	'&'		795821	1					
ANR	797498	PrimaryExpression	'&'		795821	0					
ANR	797499	ExpressionStatement	R_FREE ( core -> oobi )	2785:1:71005:71024	795821	31	True				
ANR	797500	CallExpression	R_FREE ( core -> oobi )		795821	0					
ANR	797501	Callee	R_FREE		795821	0					
ANR	797502	Identifier	R_FREE		795821	0					
ANR	797503	ArgumentList	core -> oobi		795821	1					
ANR	797504	Argument	core -> oobi		795821	0					
ANR	797505	PtrMemberAccess	core -> oobi		795821	0					
ANR	797506	Identifier	core		795821	0					
ANR	797507	Identifier	oobi		795821	1					
ANR	797508	ExpressionStatement	"ptr = strstr ( cmd , ""?*"" )"	2787:1:71028:71052	795821	32	True				
ANR	797509	AssignmentExpression	"ptr = strstr ( cmd , ""?*"" )"		795821	0		=			
ANR	797510	Identifier	ptr		795821	0					
ANR	797511	CallExpression	"strstr ( cmd , ""?*"" )"		795821	1					
ANR	797512	Callee	strstr		795821	0					
ANR	797513	Identifier	strstr		795821	0					
ANR	797514	ArgumentList	cmd		795821	1					
ANR	797515	Argument	cmd		795821	0					
ANR	797516	Identifier	cmd		795821	0					
ANR	797517	Argument	"""?*"""		795821	1					
ANR	797518	PrimaryExpression	"""?*"""		795821	0					
ANR	797519	IfStatement	if ( ptr && ( ptr == cmd || ptr [ - 1 ] != '~' ) )		795821	33					
ANR	797520	Condition	ptr && ( ptr == cmd || ptr [ - 1 ] != '~' )	2788:5:71059:71095	795821	0	True				
ANR	797521	AndExpression	ptr && ( ptr == cmd || ptr [ - 1 ] != '~' )		795821	0		&&			
ANR	797522	Identifier	ptr		795821	0					
ANR	797523	OrExpression	ptr == cmd || ptr [ - 1 ] != '~'		795821	1		||			
ANR	797524	EqualityExpression	ptr == cmd		795821	0		==			
ANR	797525	Identifier	ptr		795821	0					
ANR	797526	Identifier	cmd		795821	1					
ANR	797527	EqualityExpression	ptr [ - 1 ] != '~'		795821	1		!=			
ANR	797528	ArrayIndexing	ptr [ - 1 ]		795821	0					
ANR	797529	Identifier	ptr		795821	0					
ANR	797530	UnaryOperationExpression	- 1		795821	1					
ANR	797531	UnaryOperator	-		795821	0					
ANR	797532	PrimaryExpression	1		795821	1					
ANR	797533	PrimaryExpression	'~'		795821	1					
ANR	797534	CompoundStatement		283:44:6447:6447	795821	1					
ANR	797535	ExpressionStatement	ptr [ 0 ] = 0	2789:2:71102:71112	795821	0	True				
ANR	797536	AssignmentExpression	ptr [ 0 ] = 0		795821	0		=			
ANR	797537	ArrayIndexing	ptr [ 0 ]		795821	0					
ANR	797538	Identifier	ptr		795821	0					
ANR	797539	PrimaryExpression	0		795821	1					
ANR	797540	PrimaryExpression	0		795821	1					
ANR	797541	IfStatement	if ( * cmd != '#' )		795821	1					
ANR	797542	Condition	* cmd != '#'	2790:6:71120:71130	795821	0	True				
ANR	797543	EqualityExpression	* cmd != '#'		795821	0		!=			
ANR	797544	UnaryOperationExpression	* cmd		795821	0					
ANR	797545	UnaryOperator	*		795821	0					
ANR	797546	Identifier	cmd		795821	1					
ANR	797547	PrimaryExpression	'#'		795821	1					
ANR	797548	CompoundStatement		286:3:6487:6501	795821	1					
ANR	797549	IdentifierDeclStatement	int detail = 0 ;	2791:3:71138:71152	795821	0	True				
ANR	797550	IdentifierDecl	detail = 0		795821	0					
ANR	797551	IdentifierDeclType	int		795821	0					
ANR	797552	Identifier	detail		795821	1					
ANR	797553	AssignmentExpression	detail = 0		795821	2		=			
ANR	797554	Identifier	detail		795821	0					
ANR	797555	PrimaryExpression	0		795821	1					
ANR	797556	IfStatement	if ( cmd < ptr && ptr [ - 1 ] == '?' )		795821	1					
ANR	797557	Condition	cmd < ptr && ptr [ - 1 ] == '?'	2792:7:71161:71187	795821	0	True				
ANR	797558	AndExpression	cmd < ptr && ptr [ - 1 ] == '?'		795821	0		&&			
ANR	797559	RelationalExpression	cmd < ptr		795821	0		<			
ANR	797560	Identifier	cmd		795821	0					
ANR	797561	Identifier	ptr		795821	1					
ANR	797562	EqualityExpression	ptr [ - 1 ] == '?'		795821	1		==			
ANR	797563	ArrayIndexing	ptr [ - 1 ]		795821	0					
ANR	797564	Identifier	ptr		795821	0					
ANR	797565	UnaryOperationExpression	- 1		795821	1					
ANR	797566	UnaryOperator	-		795821	0					
ANR	797567	PrimaryExpression	1		795821	1					
ANR	797568	PrimaryExpression	'?'		795821	1					
ANR	797569	CompoundStatement		287:36:6539:6539	795821	1					
ANR	797570	ExpressionStatement	detail ++	2793:4:71196:71204	795821	0	True				
ANR	797571	PostIncDecOperationExpression	detail ++		795821	0					
ANR	797572	Identifier	detail		795821	0					
ANR	797573	IncDec	++		795821	1					
ANR	797574	IfStatement	if ( cmd < ptr - 1 && ptr [ - 2 ] == '?' )		795821	1					
ANR	797575	Condition	cmd < ptr - 1 && ptr [ - 2 ] == '?'	2794:8:71214:71244	795821	0	True				
ANR	797576	AndExpression	cmd < ptr - 1 && ptr [ - 2 ] == '?'		795821	0		&&			
ANR	797577	RelationalExpression	cmd < ptr - 1		795821	0		<			
ANR	797578	Identifier	cmd		795821	0					
ANR	797579	AdditiveExpression	ptr - 1		795821	1		-			
ANR	797580	Identifier	ptr		795821	0					
ANR	797581	PrimaryExpression	1		795821	1					
ANR	797582	EqualityExpression	ptr [ - 2 ] == '?'		795821	1		==			
ANR	797583	ArrayIndexing	ptr [ - 2 ]		795821	0					
ANR	797584	Identifier	ptr		795821	0					
ANR	797585	UnaryOperationExpression	- 2		795821	1					
ANR	797586	UnaryOperator	-		795821	0					
ANR	797587	PrimaryExpression	2		795821	1					
ANR	797588	PrimaryExpression	'?'		795821	1					
ANR	797589	CompoundStatement		289:41:6596:6596	795821	1					
ANR	797590	ExpressionStatement	detail ++	2795:5:71254:71262	795821	0	True				
ANR	797591	PostIncDecOperationExpression	detail ++		795821	0					
ANR	797592	Identifier	detail		795821	0					
ANR	797593	IncDec	++		795821	1					
ANR	797594	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	2798:3:71278:71308	795821	2	True				
ANR	797595	CallExpression	"r_cons_break_push ( NULL , NULL )"		795821	0					
ANR	797596	Callee	r_cons_break_push		795821	0					
ANR	797597	Identifier	r_cons_break_push		795821	0					
ANR	797598	ArgumentList	NULL		795821	1					
ANR	797599	Argument	NULL		795821	0					
ANR	797600	Identifier	NULL		795821	0					
ANR	797601	Argument	NULL		795821	1					
ANR	797602	Identifier	NULL		795821	0					
ANR	797603	ExpressionStatement	"recursive_help ( core , detail , cmd )"	2799:3:71313:71347	795821	3	True				
ANR	797604	CallExpression	"recursive_help ( core , detail , cmd )"		795821	0					
ANR	797605	Callee	recursive_help		795821	0					
ANR	797606	Identifier	recursive_help		795821	0					
ANR	797607	ArgumentList	core		795821	1					
ANR	797608	Argument	core		795821	0					
ANR	797609	Identifier	core		795821	0					
ANR	797610	Argument	detail		795821	1					
ANR	797611	Identifier	detail		795821	0					
ANR	797612	Argument	cmd		795821	2					
ANR	797613	Identifier	cmd		795821	0					
ANR	797614	ExpressionStatement	r_cons_break_pop ( )	2800:3:71352:71371	795821	4	True				
ANR	797615	CallExpression	r_cons_break_pop ( )		795821	0					
ANR	797616	Callee	r_cons_break_pop		795821	0					
ANR	797617	Identifier	r_cons_break_pop		795821	0					
ANR	797618	ArgumentList			795821	1					
ANR	797619	ExpressionStatement	"r_cons_grep_parsecmd ( ptr + 2 , ""`"" )"	2801:3:71376:71411	795821	5	True				
ANR	797620	CallExpression	"r_cons_grep_parsecmd ( ptr + 2 , ""`"" )"		795821	0					
ANR	797621	Callee	r_cons_grep_parsecmd		795821	0					
ANR	797622	Identifier	r_cons_grep_parsecmd		795821	0					
ANR	797623	ArgumentList	ptr + 2		795821	1					
ANR	797624	Argument	ptr + 2		795821	0					
ANR	797625	AdditiveExpression	ptr + 2		795821	0		+			
ANR	797626	Identifier	ptr		795821	0					
ANR	797627	PrimaryExpression	2		795821	1					
ANR	797628	Argument	"""`"""		795821	1					
ANR	797629	PrimaryExpression	"""`"""		795821	0					
ANR	797630	IfStatement	if ( scr_html != - 1 )		795821	6					
ANR	797631	Condition	scr_html != - 1	2802:7:71420:71433	795821	0	True				
ANR	797632	EqualityExpression	scr_html != - 1		795821	0		!=			
ANR	797633	Identifier	scr_html		795821	0					
ANR	797634	UnaryOperationExpression	- 1		795821	1					
ANR	797635	UnaryOperator	-		795821	0					
ANR	797636	PrimaryExpression	1		795821	1					
ANR	797637	CompoundStatement		297:23:6785:6785	795821	1					
ANR	797638	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"	2803:4:71442:71493	795821	0	True				
ANR	797639	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"		795821	0					
ANR	797640	Callee	r_config_set_i		795821	0					
ANR	797641	Identifier	r_config_set_i		795821	0					
ANR	797642	ArgumentList	core -> config		795821	1					
ANR	797643	Argument	core -> config		795821	0					
ANR	797644	PtrMemberAccess	core -> config		795821	0					
ANR	797645	Identifier	core		795821	0					
ANR	797646	Identifier	config		795821	1					
ANR	797647	Argument	"""scr.html"""		795821	1					
ANR	797648	PrimaryExpression	"""scr.html"""		795821	0					
ANR	797649	Argument	scr_html		795821	2					
ANR	797650	Identifier	scr_html		795821	0					
ANR	797651	IfStatement	if ( scr_color != - 1 )		795821	7					
ANR	797652	Condition	scr_color != - 1	2805:7:71507:71521	795821	0	True				
ANR	797653	EqualityExpression	scr_color != - 1		795821	0		!=			
ANR	797654	Identifier	scr_color		795821	0					
ANR	797655	UnaryOperationExpression	- 1		795821	1					
ANR	797656	UnaryOperator	-		795821	0					
ANR	797657	PrimaryExpression	1		795821	1					
ANR	797658	CompoundStatement		300:24:6873:6873	795821	1					
ANR	797659	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , scr_color )"	2806:4:71530:71583	795821	0	True				
ANR	797660	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , scr_color )"		795821	0					
ANR	797661	Callee	r_config_set_i		795821	0					
ANR	797662	Identifier	r_config_set_i		795821	0					
ANR	797663	ArgumentList	core -> config		795821	1					
ANR	797664	Argument	core -> config		795821	0					
ANR	797665	PtrMemberAccess	core -> config		795821	0					
ANR	797666	Identifier	core		795821	0					
ANR	797667	Identifier	config		795821	1					
ANR	797668	Argument	"""scr.color"""		795821	1					
ANR	797669	PrimaryExpression	"""scr.color"""		795821	0					
ANR	797670	Argument	scr_color		795821	2					
ANR	797671	Identifier	scr_color		795821	0					
ANR	797672	ExpressionStatement	r_list_free ( tmpenvs )	2808:3:71593:71614	795821	8	True				
ANR	797673	CallExpression	r_list_free ( tmpenvs )		795821	0					
ANR	797674	Callee	r_list_free		795821	0					
ANR	797675	Identifier	r_list_free		795821	0					
ANR	797676	ArgumentList	tmpenvs		795821	1					
ANR	797677	Argument	tmpenvs		795821	0					
ANR	797678	Identifier	tmpenvs		795821	0					
ANR	797679	ReturnStatement	return 0 ;	2809:3:71619:71627	795821	9	True				
ANR	797680	PrimaryExpression	0		795821	0					
ANR	797681	ExpressionStatement	"ptr = strchr ( cmd , '<' )"	2814:1:71644:71667	795821	34	True				
ANR	797682	AssignmentExpression	"ptr = strchr ( cmd , '<' )"		795821	0		=			
ANR	797683	Identifier	ptr		795821	0					
ANR	797684	CallExpression	"strchr ( cmd , '<' )"		795821	1					
ANR	797685	Callee	strchr		795821	0					
ANR	797686	Identifier	strchr		795821	0					
ANR	797687	ArgumentList	cmd		795821	1					
ANR	797688	Argument	cmd		795821	0					
ANR	797689	Identifier	cmd		795821	0					
ANR	797690	Argument	'<'		795821	1					
ANR	797691	PrimaryExpression	'<'		795821	0					
ANR	797692	IfStatement	if ( ptr )		795821	35					
ANR	797693	Condition	ptr	2815:5:71674:71676	795821	0	True				
ANR	797694	Identifier	ptr		795821	0					
ANR	797695	CompoundStatement		310:10:7028:7028	795821	1					
ANR	797696	ExpressionStatement	ptr [ 0 ] = '\\0'	2816:2:71683:71696	795821	0	True				
ANR	797697	AssignmentExpression	ptr [ 0 ] = '\\0'		795821	0		=			
ANR	797698	ArrayIndexing	ptr [ 0 ]		795821	0					
ANR	797699	Identifier	ptr		795821	0					
ANR	797700	PrimaryExpression	0		795821	1					
ANR	797701	PrimaryExpression	'\\0'		795821	1					
ANR	797702	IfStatement	if ( r_cons_singleton ( ) -> is_interactive )		795821	1					
ANR	797703	Condition	r_cons_singleton ( ) -> is_interactive	2817:6:71704:71738	795821	0	True				
ANR	797704	PtrMemberAccess	r_cons_singleton ( ) -> is_interactive		795821	0					
ANR	797705	CallExpression	r_cons_singleton ( )		795821	0					
ANR	797706	Callee	r_cons_singleton		795821	0					
ANR	797707	Identifier	r_cons_singleton		795821	0					
ANR	797708	ArgumentList			795821	1					
ANR	797709	Identifier	is_interactive		795821	1					
ANR	797710	CompoundStatement		312:43:7090:7090	795821	1					
ANR	797711	IfStatement	if ( ptr [ 1 ] == '<' )		795821	0					
ANR	797712	Condition	ptr [ 1 ] == '<'	2818:7:71750:71762	795821	0	True				
ANR	797713	EqualityExpression	ptr [ 1 ] == '<'		795821	0		==			
ANR	797714	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	797715	Identifier	ptr		795821	0					
ANR	797716	PrimaryExpression	1		795821	1					
ANR	797717	PrimaryExpression	'<'		795821	1					
ANR	797718	CompoundStatement		313:22:7114:7114	795821	1					
ANR	797719	ForStatement	for ( str = ptr + 2 ; str [ 0 ] == ' ' ; str ++ )		795821	0					
ANR	797720	ForInit	str = ptr + 2 ;	2822:9:71892:71905	795821	0	True				
ANR	797721	AssignmentExpression	str = ptr + 2		795821	0		=			
ANR	797722	Identifier	str		795821	0					
ANR	797723	AdditiveExpression	ptr + 2		795821	1		+			
ANR	797724	Identifier	ptr		795821	0					
ANR	797725	PrimaryExpression	2		795821	1					
ANR	797726	Condition	str [ 0 ] == ' '	2822:24:71907:71919	795821	1	True				
ANR	797727	EqualityExpression	str [ 0 ] == ' '		795821	0		==			
ANR	797728	ArrayIndexing	str [ 0 ]		795821	0					
ANR	797729	Identifier	str		795821	0					
ANR	797730	PrimaryExpression	0		795821	1					
ANR	797731	PrimaryExpression	' '		795821	1					
ANR	797732	PostIncDecOperationExpression	str ++	2822:39:71922:71926	795821	2	True				
ANR	797733	Identifier	str		795821	0					
ANR	797734	IncDec	++		795821	1					
ANR	797735	CompoundStatement		317:46:7278:7278	795821	3					
ANR	797736	ExpressionStatement	"eprintf ( ""==> Reading from stdin until '%s'\\n"" , str )"	2825:4:71968:72020	795821	1	True				
ANR	797737	CallExpression	"eprintf ( ""==> Reading from stdin until '%s'\\n"" , str )"		795821	0					
ANR	797738	Callee	eprintf		795821	0					
ANR	797739	Identifier	eprintf		795821	0					
ANR	797740	ArgumentList	"""==> Reading from stdin until '%s'\\n"""		795821	1					
ANR	797741	Argument	"""==> Reading from stdin until '%s'\\n"""		795821	0					
ANR	797742	PrimaryExpression	"""==> Reading from stdin until '%s'\\n"""		795821	0					
ANR	797743	Argument	str		795821	1					
ANR	797744	Identifier	str		795821	0					
ANR	797745	ExpressionStatement	free ( core -> oobi )	2826:4:72026:72043	795821	2	True				
ANR	797746	CallExpression	free ( core -> oobi )		795821	0					
ANR	797747	Callee	free		795821	0					
ANR	797748	Identifier	free		795821	0					
ANR	797749	ArgumentList	core -> oobi		795821	1					
ANR	797750	Argument	core -> oobi		795821	0					
ANR	797751	PtrMemberAccess	core -> oobi		795821	0					
ANR	797752	Identifier	core		795821	0					
ANR	797753	Identifier	oobi		795821	1					
ANR	797754	ExpressionStatement	core -> oobi = malloc ( 1 )	2827:4:72049:72072	795821	3	True				
ANR	797755	AssignmentExpression	core -> oobi = malloc ( 1 )		795821	0		=			
ANR	797756	PtrMemberAccess	core -> oobi		795821	0					
ANR	797757	Identifier	core		795821	0					
ANR	797758	Identifier	oobi		795821	1					
ANR	797759	CallExpression	malloc ( 1 )		795821	1					
ANR	797760	Callee	malloc		795821	0					
ANR	797761	Identifier	malloc		795821	0					
ANR	797762	ArgumentList	1		795821	1					
ANR	797763	Argument	1		795821	0					
ANR	797764	PrimaryExpression	1		795821	0					
ANR	797765	IfStatement	if ( core -> oobi )		795821	4					
ANR	797766	Condition	core -> oobi	2828:8:72082:72091	795821	0	True				
ANR	797767	PtrMemberAccess	core -> oobi		795821	0					
ANR	797768	Identifier	core		795821	0					
ANR	797769	Identifier	oobi		795821	1					
ANR	797770	CompoundStatement		323:20:7443:7443	795821	1					
ANR	797771	ExpressionStatement	core -> oobi [ 0 ] = '\\0'	2829:5:72101:72121	795821	0	True				
ANR	797772	AssignmentExpression	core -> oobi [ 0 ] = '\\0'		795821	0		=			
ANR	797773	ArrayIndexing	core -> oobi [ 0 ]		795821	0					
ANR	797774	PtrMemberAccess	core -> oobi		795821	0					
ANR	797775	Identifier	core		795821	0					
ANR	797776	Identifier	oobi		795821	1					
ANR	797777	PrimaryExpression	0		795821	1					
ANR	797778	PrimaryExpression	'\\0'		795821	1					
ANR	797779	ExpressionStatement	core -> oobi_len = 0	2831:4:72133:72151	795821	5	True				
ANR	797780	AssignmentExpression	core -> oobi_len = 0		795821	0		=			
ANR	797781	PtrMemberAccess	core -> oobi_len		795821	0					
ANR	797782	Identifier	core		795821	0					
ANR	797783	Identifier	oobi_len		795821	1					
ANR	797784	PrimaryExpression	0		795821	1					
ANR	797785	ForStatement	for ( ; ; )		795821	6					
ANR	797786	CompoundStatement		329:5:7543:7550	795821	0					
ANR	797787	IdentifierDeclStatement	char buf [ 1024 ] ;	2833:5:72173:72187	795821	0	True				
ANR	797788	IdentifierDecl	buf [ 1024 ]		795821	0					
ANR	797789	IdentifierDeclType	char [ 1024 ]		795821	0					
ANR	797790	Identifier	buf		795821	1					
ANR	797791	PrimaryExpression	1024		795821	2					
ANR	797792	IdentifierDeclStatement	int ret ;	2834:5:72194:72201	795821	1	True				
ANR	797793	IdentifierDecl	ret		795821	0					
ANR	797794	IdentifierDeclType	int		795821	0					
ANR	797795	Identifier	ret		795821	1					
ANR	797796	ExpressionStatement	"write ( 1 , ""> "" , 2 )"	2835:5:72208:72226	795821	2	True				
ANR	797797	CallExpression	"write ( 1 , ""> "" , 2 )"		795821	0					
ANR	797798	Callee	write		795821	0					
ANR	797799	Identifier	write		795821	0					
ANR	797800	ArgumentList	1		795821	1					
ANR	797801	Argument	1		795821	0					
ANR	797802	PrimaryExpression	1		795821	0					
ANR	797803	Argument	"""> """		795821	1					
ANR	797804	PrimaryExpression	"""> """		795821	0					
ANR	797805	Argument	2		795821	2					
ANR	797806	PrimaryExpression	2		795821	0					
ANR	797807	ExpressionStatement	"fgets ( buf , sizeof ( buf ) - 1 , stdin )"	2836:5:72233:72269	795821	3	True				
ANR	797808	CallExpression	"fgets ( buf , sizeof ( buf ) - 1 , stdin )"		795821	0					
ANR	797809	Callee	fgets		795821	0					
ANR	797810	Identifier	fgets		795821	0					
ANR	797811	ArgumentList	buf		795821	1					
ANR	797812	Argument	buf		795821	0					
ANR	797813	Identifier	buf		795821	0					
ANR	797814	Argument	sizeof ( buf ) - 1		795821	1					
ANR	797815	AdditiveExpression	sizeof ( buf ) - 1		795821	0		-			
ANR	797816	SizeofExpression	sizeof ( buf )		795821	0					
ANR	797817	Sizeof	sizeof		795821	0					
ANR	797818	SizeofOperand	buf		795821	1					
ANR	797819	PrimaryExpression	1		795821	1					
ANR	797820	Argument	stdin		795821	2					
ANR	797821	Identifier	stdin		795821	0					
ANR	797822	IfStatement	if ( feof ( stdin ) )		795821	4					
ANR	797823	Condition	feof ( stdin )	2837:9:72301:72312	795821	0	True				
ANR	797824	CallExpression	feof ( stdin )		795821	0					
ANR	797825	Callee	feof		795821	0					
ANR	797826	Identifier	feof		795821	0					
ANR	797827	ArgumentList	stdin		795821	1					
ANR	797828	Argument	stdin		795821	0					
ANR	797829	Identifier	stdin		795821	0					
ANR	797830	CompoundStatement		332:23:7664:7664	795821	1					
ANR	797831	BreakStatement	break ;	2838:6:72323:72328	795821	0	True				
ANR	797832	IfStatement	if ( * buf )		795821	5					
ANR	797833	Condition	* buf	2840:9:72346:72349	795821	0	True				
ANR	797834	UnaryOperationExpression	* buf		795821	0					
ANR	797835	UnaryOperator	*		795821	0					
ANR	797836	Identifier	buf		795821	1					
ANR	797837	ExpressionStatement	buf [ strlen ( buf ) - 1 ] = '\\0'	2840:15:72352:72378	795821	1	True				
ANR	797838	AssignmentExpression	buf [ strlen ( buf ) - 1 ] = '\\0'		795821	0		=			
ANR	797839	ArrayIndexing	buf [ strlen ( buf ) - 1 ]		795821	0					
ANR	797840	Identifier	buf		795821	0					
ANR	797841	AdditiveExpression	strlen ( buf ) - 1		795821	1		-			
ANR	797842	CallExpression	strlen ( buf )		795821	0					
ANR	797843	Callee	strlen		795821	0					
ANR	797844	Identifier	strlen		795821	0					
ANR	797845	ArgumentList	buf		795821	1					
ANR	797846	Argument	buf		795821	0					
ANR	797847	Identifier	buf		795821	0					
ANR	797848	PrimaryExpression	1		795821	1					
ANR	797849	PrimaryExpression	'\\0'		795821	1					
ANR	797850	ExpressionStatement	ret = strlen ( buf )	2841:5:72385:72403	795821	6	True				
ANR	797851	AssignmentExpression	ret = strlen ( buf )		795821	0		=			
ANR	797852	Identifier	ret		795821	0					
ANR	797853	CallExpression	strlen ( buf )		795821	1					
ANR	797854	Callee	strlen		795821	0					
ANR	797855	Identifier	strlen		795821	0					
ANR	797856	ArgumentList	buf		795821	1					
ANR	797857	Argument	buf		795821	0					
ANR	797858	Identifier	buf		795821	0					
ANR	797859	ExpressionStatement	core -> oobi_len += ret	2842:5:72410:72431	795821	7	True				
ANR	797860	AssignmentExpression	core -> oobi_len += ret		795821	0		+=			
ANR	797861	PtrMemberAccess	core -> oobi_len		795821	0					
ANR	797862	Identifier	core		795821	0					
ANR	797863	Identifier	oobi_len		795821	1					
ANR	797864	Identifier	ret		795821	1					
ANR	797865	ExpressionStatement	"core -> oobi = realloc ( core -> oobi , core -> oobi_len + 1 )"	2843:5:72438:72491	795821	8	True				
ANR	797866	AssignmentExpression	"core -> oobi = realloc ( core -> oobi , core -> oobi_len + 1 )"		795821	0		=			
ANR	797867	PtrMemberAccess	core -> oobi		795821	0					
ANR	797868	Identifier	core		795821	0					
ANR	797869	Identifier	oobi		795821	1					
ANR	797870	CallExpression	"realloc ( core -> oobi , core -> oobi_len + 1 )"		795821	1					
ANR	797871	Callee	realloc		795821	0					
ANR	797872	Identifier	realloc		795821	0					
ANR	797873	ArgumentList	core -> oobi		795821	1					
ANR	797874	Argument	core -> oobi		795821	0					
ANR	797875	PtrMemberAccess	core -> oobi		795821	0					
ANR	797876	Identifier	core		795821	0					
ANR	797877	Identifier	oobi		795821	1					
ANR	797878	Argument	core -> oobi_len + 1		795821	1					
ANR	797879	AdditiveExpression	core -> oobi_len + 1		795821	0		+			
ANR	797880	PtrMemberAccess	core -> oobi_len		795821	0					
ANR	797881	Identifier	core		795821	0					
ANR	797882	Identifier	oobi_len		795821	1					
ANR	797883	PrimaryExpression	1		795821	1					
ANR	797884	IfStatement	if ( core -> oobi )		795821	9					
ANR	797885	Condition	core -> oobi	2844:9:72502:72511	795821	0	True				
ANR	797886	PtrMemberAccess	core -> oobi		795821	0					
ANR	797887	Identifier	core		795821	0					
ANR	797888	Identifier	oobi		795821	1					
ANR	797889	CompoundStatement		339:21:7863:7863	795821	1					
ANR	797890	IfStatement	"if ( ! strcmp ( buf , str ) )"		795821	0					
ANR	797891	Condition	"! strcmp ( buf , str )"	2845:10:72526:72543	795821	0	True				
ANR	797892	UnaryOperationExpression	"! strcmp ( buf , str )"		795821	0					
ANR	797893	UnaryOperator	!		795821	0					
ANR	797894	CallExpression	"strcmp ( buf , str )"		795821	1					
ANR	797895	Callee	strcmp		795821	0					
ANR	797896	Identifier	strcmp		795821	0					
ANR	797897	ArgumentList	buf		795821	1					
ANR	797898	Argument	buf		795821	0					
ANR	797899	Identifier	buf		795821	0					
ANR	797900	Argument	str		795821	1					
ANR	797901	Identifier	str		795821	0					
ANR	797902	CompoundStatement		340:30:7895:7895	795821	1					
ANR	797903	BreakStatement	break ;	2846:7:72555:72560	795821	0	True				
ANR	797904	ExpressionStatement	"strcat ( ( char * ) core -> oobi , buf )"	2848:6:72576:72608	795821	1	True				
ANR	797905	CallExpression	"strcat ( ( char * ) core -> oobi , buf )"		795821	0					
ANR	797906	Callee	strcat		795821	0					
ANR	797907	Identifier	strcat		795821	0					
ANR	797908	ArgumentList	( char * ) core -> oobi		795821	1					
ANR	797909	Argument	( char * ) core -> oobi		795821	0					
ANR	797910	CastExpression	( char * ) core -> oobi		795821	0					
ANR	797911	CastTarget	char *		795821	0					
ANR	797912	PtrMemberAccess	core -> oobi		795821	1					
ANR	797913	Identifier	core		795821	0					
ANR	797914	Identifier	oobi		795821	1					
ANR	797915	Argument	buf		795821	1					
ANR	797916	Identifier	buf		795821	0					
ANR	797917	ElseStatement	else		795821	0					
ANR	797918	CompoundStatement		347:10:8017:8017	795821	0					
ANR	797919	ForStatement	for ( str = ptr + 1 ; * str == ' ' ; str ++ )		795821	0					
ANR	797920	ForInit	str = ptr + 1 ;	2853:9:72679:72692	795821	0	True				
ANR	797921	AssignmentExpression	str = ptr + 1		795821	0		=			
ANR	797922	Identifier	str		795821	0					
ANR	797923	AdditiveExpression	ptr + 1		795821	1		+			
ANR	797924	Identifier	ptr		795821	0					
ANR	797925	PrimaryExpression	1		795821	1					
ANR	797926	Condition	* str == ' '	2853:24:72694:72704	795821	1	True				
ANR	797927	EqualityExpression	* str == ' '		795821	0		==			
ANR	797928	UnaryOperationExpression	* str		795821	0					
ANR	797929	UnaryOperator	*		795821	0					
ANR	797930	Identifier	str		795821	1					
ANR	797931	PrimaryExpression	' '		795821	1					
ANR	797932	PostIncDecOperationExpression	str ++	2853:37:72707:72711	795821	2	True				
ANR	797933	Identifier	str		795821	0					
ANR	797934	IncDec	++		795821	1					
ANR	797935	CompoundStatement		348:44:8063:8063	795821	3					
ANR	797936	IfStatement	if ( ! * str )		795821	1					
ANR	797937	Condition	! * str	2856:8:72757:72761	795821	0	True				
ANR	797938	UnaryOperationExpression	! * str		795821	0					
ANR	797939	UnaryOperator	!		795821	0					
ANR	797940	UnaryOperationExpression	* str		795821	1					
ANR	797941	UnaryOperator	*		795821	0					
ANR	797942	Identifier	str		795821	1					
ANR	797943	CompoundStatement		351:15:8113:8113	795821	1					
ANR	797944	GotoStatement	goto next ;	2857:5:72771:72780	795821	0	True				
ANR	797945	Identifier	next		795821	0					
ANR	797946	ExpressionStatement	"eprintf ( ""Slurping file '%s'\\n"" , str )"	2859:4:72792:72829	795821	2	True				
ANR	797947	CallExpression	"eprintf ( ""Slurping file '%s'\\n"" , str )"		795821	0					
ANR	797948	Callee	eprintf		795821	0					
ANR	797949	Identifier	eprintf		795821	0					
ANR	797950	ArgumentList	"""Slurping file '%s'\\n"""		795821	1					
ANR	797951	Argument	"""Slurping file '%s'\\n"""		795821	0					
ANR	797952	PrimaryExpression	"""Slurping file '%s'\\n"""		795821	0					
ANR	797953	Argument	str		795821	1					
ANR	797954	Identifier	str		795821	0					
ANR	797955	ExpressionStatement	free ( core -> oobi )	2860:4:72835:72852	795821	3	True				
ANR	797956	CallExpression	free ( core -> oobi )		795821	0					
ANR	797957	Callee	free		795821	0					
ANR	797958	Identifier	free		795821	0					
ANR	797959	ArgumentList	core -> oobi		795821	1					
ANR	797960	Argument	core -> oobi		795821	0					
ANR	797961	PtrMemberAccess	core -> oobi		795821	0					
ANR	797962	Identifier	core		795821	0					
ANR	797963	Identifier	oobi		795821	1					
ANR	797964	ExpressionStatement	"core -> oobi = ( ut8 * ) r_file_slurp ( str , & core -> oobi_len )"	2861:4:72858:72912	795821	4	True				
ANR	797965	AssignmentExpression	"core -> oobi = ( ut8 * ) r_file_slurp ( str , & core -> oobi_len )"		795821	0		=			
ANR	797966	PtrMemberAccess	core -> oobi		795821	0					
ANR	797967	Identifier	core		795821	0					
ANR	797968	Identifier	oobi		795821	1					
ANR	797969	CastExpression	"( ut8 * ) r_file_slurp ( str , & core -> oobi_len )"		795821	1					
ANR	797970	CastTarget	ut8 *		795821	0					
ANR	797971	CallExpression	"r_file_slurp ( str , & core -> oobi_len )"		795821	1					
ANR	797972	Callee	r_file_slurp		795821	0					
ANR	797973	Identifier	r_file_slurp		795821	0					
ANR	797974	ArgumentList	str		795821	1					
ANR	797975	Argument	str		795821	0					
ANR	797976	Identifier	str		795821	0					
ANR	797977	Argument	& core -> oobi_len		795821	1					
ANR	797978	UnaryOperationExpression	& core -> oobi_len		795821	0					
ANR	797979	UnaryOperator	&		795821	0					
ANR	797980	PtrMemberAccess	core -> oobi_len		795821	1					
ANR	797981	Identifier	core		795821	0					
ANR	797982	Identifier	oobi_len		795821	1					
ANR	797983	IfStatement	if ( ! core -> oobi )		795821	5					
ANR	797984	Condition	! core -> oobi	2862:8:72922:72932	795821	0	True				
ANR	797985	UnaryOperationExpression	! core -> oobi		795821	0					
ANR	797986	UnaryOperator	!		795821	0					
ANR	797987	PtrMemberAccess	core -> oobi		795821	1					
ANR	797988	Identifier	core		795821	0					
ANR	797989	Identifier	oobi		795821	1					
ANR	797990	CompoundStatement		357:21:8284:8284	795821	1					
ANR	797991	ExpressionStatement	"eprintf ( ""cannot open file\\n"" )"	2863:5:72942:72972	795821	0	True				
ANR	797992	CallExpression	"eprintf ( ""cannot open file\\n"" )"		795821	0					
ANR	797993	Callee	eprintf		795821	0					
ANR	797994	Identifier	eprintf		795821	0					
ANR	797995	ArgumentList	"""cannot open file\\n"""		795821	1					
ANR	797996	Argument	"""cannot open file\\n"""		795821	0					
ANR	797997	PrimaryExpression	"""cannot open file\\n"""		795821	0					
ANR	797998	ElseStatement	else		795821	0					
ANR	797999	IfStatement	if ( ptr == cmd )		795821	0					
ANR	798000	Condition	ptr == cmd	2864:15:72989:72998	795821	0	True				
ANR	798001	EqualityExpression	ptr == cmd		795821	0		==			
ANR	798002	Identifier	ptr		795821	0					
ANR	798003	Identifier	cmd		795821	1					
ANR	798004	CompoundStatement		359:27:8350:8350	795821	1					
ANR	798005	ReturnStatement	"return r_core_cmd_buffer ( core , ( const char * ) core -> oobi ) ;"	2865:5:73008:73065	795821	0	True				
ANR	798006	CallExpression	"r_core_cmd_buffer ( core , ( const char * ) core -> oobi )"		795821	0					
ANR	798007	Callee	r_core_cmd_buffer		795821	0					
ANR	798008	Identifier	r_core_cmd_buffer		795821	0					
ANR	798009	ArgumentList	core		795821	1					
ANR	798010	Argument	core		795821	0					
ANR	798011	Identifier	core		795821	0					
ANR	798012	Argument	( const char * ) core -> oobi		795821	1					
ANR	798013	CastExpression	( const char * ) core -> oobi		795821	0					
ANR	798014	CastTarget	const char *		795821	0					
ANR	798015	PtrMemberAccess	core -> oobi		795821	1					
ANR	798016	Identifier	core		795821	0					
ANR	798017	Identifier	oobi		795821	1					
ANR	798018	ElseStatement	else		795821	0					
ANR	798019	CompoundStatement		363:9:8436:8436	795821	0					
ANR	798020	ExpressionStatement	"eprintf ( ""Cannot slurp with << in non-interactive mode\\n"" )"	2869:3:73092:73150	795821	0	True				
ANR	798021	CallExpression	"eprintf ( ""Cannot slurp with << in non-interactive mode\\n"" )"		795821	0					
ANR	798022	Callee	eprintf		795821	0					
ANR	798023	Identifier	eprintf		795821	0					
ANR	798024	ArgumentList	"""Cannot slurp with << in non-interactive mode\\n"""		795821	1					
ANR	798025	Argument	"""Cannot slurp with << in non-interactive mode\\n"""		795821	0					
ANR	798026	PrimaryExpression	"""Cannot slurp with << in non-interactive mode\\n"""		795821	0					
ANR	798027	ExpressionStatement	r_list_free ( tmpenvs )	2870:3:73155:73176	795821	1	True				
ANR	798028	CallExpression	r_list_free ( tmpenvs )		795821	0					
ANR	798029	Callee	r_list_free		795821	0					
ANR	798030	Identifier	r_list_free		795821	0					
ANR	798031	ArgumentList	tmpenvs		795821	1					
ANR	798032	Argument	tmpenvs		795821	0					
ANR	798033	Identifier	tmpenvs		795821	0					
ANR	798034	ReturnStatement	return 0 ;	2871:3:73181:73189	795821	2	True				
ANR	798035	PrimaryExpression	0		795821	0					
ANR	798036	Label	next :	2874:0:73198:73202	795821	36	True				
ANR	798037	Identifier	next		795821	0					
ANR	798038	ExpressionStatement	"ptr = ( char * ) r_str_firstbut ( cmd , '>' , ""\\"""" )"	2877:1:73240:73285	795821	37	True				
ANR	798039	AssignmentExpression	"ptr = ( char * ) r_str_firstbut ( cmd , '>' , ""\\"""" )"		795821	0		=			
ANR	798040	Identifier	ptr		795821	0					
ANR	798041	CastExpression	"( char * ) r_str_firstbut ( cmd , '>' , ""\\"""" )"		795821	1					
ANR	798042	CastTarget	char *		795821	0					
ANR	798043	CallExpression	"r_str_firstbut ( cmd , '>' , ""\\"""" )"		795821	1					
ANR	798044	Callee	r_str_firstbut		795821	0					
ANR	798045	Identifier	r_str_firstbut		795821	0					
ANR	798046	ArgumentList	cmd		795821	1					
ANR	798047	Argument	cmd		795821	0					
ANR	798048	Identifier	cmd		795821	0					
ANR	798049	Argument	'>'		795821	1					
ANR	798050	PrimaryExpression	'>'		795821	0					
ANR	798051	Argument	"""\\"""""		795821	2					
ANR	798052	PrimaryExpression	"""\\"""""		795821	0					
ANR	798053	IfStatement	if ( ptr )		795821	38					
ANR	798054	Condition	ptr	2879:5:73309:73311	795821	0	True				
ANR	798055	Identifier	ptr		795821	0					
ANR	798056	CompoundStatement		420:2:9972:10013	795821	1					
ANR	798057	IfStatement	if ( ptr > cmd )		795821	0					
ANR	798058	Condition	ptr > cmd	2880:6:73322:73330	795821	0	True				
ANR	798059	RelationalExpression	ptr > cmd		795821	0		>			
ANR	798060	Identifier	ptr		795821	0					
ANR	798061	Identifier	cmd		795821	1					
ANR	798062	CompoundStatement		376:3:8687:8705	795821	1					
ANR	798063	IdentifierDeclStatement	char * ch = ptr - 1 ;	2881:3:73338:73356	795821	0	True				
ANR	798064	IdentifierDecl	* ch = ptr - 1		795821	0					
ANR	798065	IdentifierDeclType	char *		795821	0					
ANR	798066	Identifier	ch		795821	1					
ANR	798067	AssignmentExpression	* ch = ptr - 1		795821	2		=			
ANR	798068	Identifier	ch		795821	0					
ANR	798069	AdditiveExpression	ptr - 1		795821	1		-			
ANR	798070	Identifier	ptr		795821	0					
ANR	798071	PrimaryExpression	1		795821	1					
ANR	798072	IfStatement	if ( * ch == '\\\\' )		795821	1					
ANR	798073	Condition	* ch == '\\\\'	2882:7:73365:73375	795821	0	True				
ANR	798074	EqualityExpression	* ch == '\\\\'		795821	0		==			
ANR	798075	UnaryOperationExpression	* ch		795821	0					
ANR	798076	UnaryOperator	*		795821	0					
ANR	798077	Identifier	ch		795821	1					
ANR	798078	PrimaryExpression	'\\\\'		795821	1					
ANR	798079	CompoundStatement		377:20:8727:8727	795821	1					
ANR	798080	ExpressionStatement	"memmove ( ch , ptr , strlen ( ptr ) + 1 )"	2883:4:73384:73419	795821	0	True				
ANR	798081	CallExpression	"memmove ( ch , ptr , strlen ( ptr ) + 1 )"		795821	0					
ANR	798082	Callee	memmove		795821	0					
ANR	798083	Identifier	memmove		795821	0					
ANR	798084	ArgumentList	ch		795821	1					
ANR	798085	Argument	ch		795821	0					
ANR	798086	Identifier	ch		795821	0					
ANR	798087	Argument	ptr		795821	1					
ANR	798088	Identifier	ptr		795821	0					
ANR	798089	Argument	strlen ( ptr ) + 1		795821	2					
ANR	798090	AdditiveExpression	strlen ( ptr ) + 1		795821	0		+			
ANR	798091	CallExpression	strlen ( ptr )		795821	0					
ANR	798092	Callee	strlen		795821	0					
ANR	798093	Identifier	strlen		795821	0					
ANR	798094	ArgumentList	ptr		795821	1					
ANR	798095	Argument	ptr		795821	0					
ANR	798096	Identifier	ptr		795821	0					
ANR	798097	PrimaryExpression	1		795821	1					
ANR	798098	GotoStatement	goto escape_redir ;	2884:4:73425:73442	795821	1	True				
ANR	798099	Identifier	escape_redir		795821	0					
ANR	798100	IfStatement	if ( ptr [ 0 ] && ptr [ 1 ] == '?' )		795821	1					
ANR	798101	Condition	ptr [ 0 ] && ptr [ 1 ] == '?'	2887:6:73459:73481	795821	0	True				
ANR	798102	AndExpression	ptr [ 0 ] && ptr [ 1 ] == '?'		795821	0		&&			
ANR	798103	ArrayIndexing	ptr [ 0 ]		795821	0					
ANR	798104	Identifier	ptr		795821	0					
ANR	798105	PrimaryExpression	0		795821	1					
ANR	798106	EqualityExpression	ptr [ 1 ] == '?'		795821	1		==			
ANR	798107	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	798108	Identifier	ptr		795821	0					
ANR	798109	PrimaryExpression	1		795821	1					
ANR	798110	PrimaryExpression	'?'		795821	1					
ANR	798111	CompoundStatement		382:31:8833:8833	795821	1					
ANR	798112	ExpressionStatement	"r_core_cmd_help ( core , help_msg_greater_sign )"	2888:3:73489:73534	795821	0	True				
ANR	798113	CallExpression	"r_core_cmd_help ( core , help_msg_greater_sign )"		795821	0					
ANR	798114	Callee	r_core_cmd_help		795821	0					
ANR	798115	Identifier	r_core_cmd_help		795821	0					
ANR	798116	ArgumentList	core		795821	1					
ANR	798117	Argument	core		795821	0					
ANR	798118	Identifier	core		795821	0					
ANR	798119	Argument	help_msg_greater_sign		795821	1					
ANR	798120	Identifier	help_msg_greater_sign		795821	0					
ANR	798121	ExpressionStatement	r_list_free ( tmpenvs )	2889:3:73539:73560	795821	1	True				
ANR	798122	CallExpression	r_list_free ( tmpenvs )		795821	0					
ANR	798123	Callee	r_list_free		795821	0					
ANR	798124	Identifier	r_list_free		795821	0					
ANR	798125	ArgumentList	tmpenvs		795821	1					
ANR	798126	Argument	tmpenvs		795821	0					
ANR	798127	Identifier	tmpenvs		795821	0					
ANR	798128	ReturnStatement	return true ;	2890:3:73565:73576	795821	2	True				
ANR	798129	Identifier	true		795821	0					
ANR	798130	IdentifierDeclStatement	int fdn = 1 ;	2892:2:73584:73595	795821	2	True				
ANR	798131	IdentifierDecl	fdn = 1		795821	0					
ANR	798132	IdentifierDeclType	int		795821	0					
ANR	798133	Identifier	fdn		795821	1					
ANR	798134	AssignmentExpression	fdn = 1		795821	2		=			
ANR	798135	Identifier	fdn		795821	0					
ANR	798136	PrimaryExpression	1		795821	1					
ANR	798137	IdentifierDeclStatement	"int pipecolor = r_config_get_i ( core -> config , ""scr.color.pipe"" ) ;"	2893:2:73599:73662	795821	3	True				
ANR	798138	IdentifierDecl	"pipecolor = r_config_get_i ( core -> config , ""scr.color.pipe"" )"		795821	0					
ANR	798139	IdentifierDeclType	int		795821	0					
ANR	798140	Identifier	pipecolor		795821	1					
ANR	798141	AssignmentExpression	"pipecolor = r_config_get_i ( core -> config , ""scr.color.pipe"" )"		795821	2		=			
ANR	798142	Identifier	pipecolor		795821	0					
ANR	798143	CallExpression	"r_config_get_i ( core -> config , ""scr.color.pipe"" )"		795821	1					
ANR	798144	Callee	r_config_get_i		795821	0					
ANR	798145	Identifier	r_config_get_i		795821	0					
ANR	798146	ArgumentList	core -> config		795821	1					
ANR	798147	Argument	core -> config		795821	0					
ANR	798148	PtrMemberAccess	core -> config		795821	0					
ANR	798149	Identifier	core		795821	0					
ANR	798150	Identifier	config		795821	1					
ANR	798151	Argument	"""scr.color.pipe"""		795821	1					
ANR	798152	PrimaryExpression	"""scr.color.pipe"""		795821	0					
ANR	798153	IdentifierDeclStatement	int use_editor = false ;	2894:2:73666:73688	795821	4	True				
ANR	798154	IdentifierDecl	use_editor = false		795821	0					
ANR	798155	IdentifierDeclType	int		795821	0					
ANR	798156	Identifier	use_editor		795821	1					
ANR	798157	AssignmentExpression	use_editor = false		795821	2		=			
ANR	798158	Identifier	false		795821	0					
ANR	798159	Identifier	false		795821	1					
ANR	798160	IdentifierDeclStatement	"int ocolor = r_config_get_i ( core -> config , ""scr.color"" ) ;"	2895:2:73692:73747	795821	5	True				
ANR	798161	IdentifierDecl	"ocolor = r_config_get_i ( core -> config , ""scr.color"" )"		795821	0					
ANR	798162	IdentifierDeclType	int		795821	0					
ANR	798163	Identifier	ocolor		795821	1					
ANR	798164	AssignmentExpression	"ocolor = r_config_get_i ( core -> config , ""scr.color"" )"		795821	2		=			
ANR	798165	Identifier	ocolor		795821	0					
ANR	798166	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		795821	1					
ANR	798167	Callee	r_config_get_i		795821	0					
ANR	798168	Identifier	r_config_get_i		795821	0					
ANR	798169	ArgumentList	core -> config		795821	1					
ANR	798170	Argument	core -> config		795821	0					
ANR	798171	PtrMemberAccess	core -> config		795821	0					
ANR	798172	Identifier	core		795821	0					
ANR	798173	Identifier	config		795821	1					
ANR	798174	Argument	"""scr.color"""		795821	1					
ANR	798175	PrimaryExpression	"""scr.color"""		795821	0					
ANR	798176	ExpressionStatement	* ptr = '\\0'	2896:2:73751:73762	795821	6	True				
ANR	798177	AssignmentExpression	* ptr = '\\0'		795821	0		=			
ANR	798178	UnaryOperationExpression	* ptr		795821	0					
ANR	798179	UnaryOperator	*		795821	0					
ANR	798180	Identifier	ptr		795821	1					
ANR	798181	PrimaryExpression	'\\0'		795821	1					
ANR	798182	ExpressionStatement	str = r_str_trim_head_tail ( ptr + 1 + ( ptr [ 1 ] == '>' ) )	2897:2:73766:73820	795821	7	True				
ANR	798183	AssignmentExpression	str = r_str_trim_head_tail ( ptr + 1 + ( ptr [ 1 ] == '>' ) )		795821	0		=			
ANR	798184	Identifier	str		795821	0					
ANR	798185	CallExpression	r_str_trim_head_tail ( ptr + 1 + ( ptr [ 1 ] == '>' ) )		795821	1					
ANR	798186	Callee	r_str_trim_head_tail		795821	0					
ANR	798187	Identifier	r_str_trim_head_tail		795821	0					
ANR	798188	ArgumentList	ptr + 1 + ( ptr [ 1 ] == '>' )		795821	1					
ANR	798189	Argument	ptr + 1 + ( ptr [ 1 ] == '>' )		795821	0					
ANR	798190	AdditiveExpression	ptr + 1 + ( ptr [ 1 ] == '>' )		795821	0		+			
ANR	798191	Identifier	ptr		795821	0					
ANR	798192	AdditiveExpression	1 + ( ptr [ 1 ] == '>' )		795821	1		+			
ANR	798193	PrimaryExpression	1		795821	0					
ANR	798194	EqualityExpression	ptr [ 1 ] == '>'		795821	1		==			
ANR	798195	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	798196	Identifier	ptr		795821	0					
ANR	798197	PrimaryExpression	1		795821	1					
ANR	798198	PrimaryExpression	'>'		795821	1					
ANR	798199	IfStatement	if ( ! * str )		795821	8					
ANR	798200	Condition	! * str	2898:6:73828:73832	795821	0	True				
ANR	798201	UnaryOperationExpression	! * str		795821	0					
ANR	798202	UnaryOperator	!		795821	0					
ANR	798203	UnaryOperationExpression	* str		795821	1					
ANR	798204	UnaryOperator	*		795821	0					
ANR	798205	Identifier	str		795821	1					
ANR	798206	CompoundStatement		393:13:9184:9184	795821	1					
ANR	798207	ExpressionStatement	"eprintf ( ""No output?\\n"" )"	2899:3:73840:73864	795821	0	True				
ANR	798208	CallExpression	"eprintf ( ""No output?\\n"" )"		795821	0					
ANR	798209	Callee	eprintf		795821	0					
ANR	798210	Identifier	eprintf		795821	0					
ANR	798211	ArgumentList	"""No output?\\n"""		795821	1					
ANR	798212	Argument	"""No output?\\n"""		795821	0					
ANR	798213	PrimaryExpression	"""No output?\\n"""		795821	0					
ANR	798214	GotoStatement	goto next2 ;	2900:3:73869:73879	795821	1	True				
ANR	798215	Identifier	next2		795821	0					
ANR	798216	IfStatement	if ( ptr > ( cmd + 1 ) && IS_WHITECHAR ( ptr [ - 2 ] ) )		795821	9					
ANR	798217	Condition	ptr > ( cmd + 1 ) && IS_WHITECHAR ( ptr [ - 2 ] )	2905:6:74081:74121	795821	0	True				
ANR	798218	AndExpression	ptr > ( cmd + 1 ) && IS_WHITECHAR ( ptr [ - 2 ] )		795821	0		&&			
ANR	798219	RelationalExpression	ptr > ( cmd + 1 )		795821	0		>			
ANR	798220	Identifier	ptr		795821	0					
ANR	798221	AdditiveExpression	cmd + 1		795821	1		+			
ANR	798222	Identifier	cmd		795821	0					
ANR	798223	PrimaryExpression	1		795821	1					
ANR	798224	CallExpression	IS_WHITECHAR ( ptr [ - 2 ] )		795821	1					
ANR	798225	Callee	IS_WHITECHAR		795821	0					
ANR	798226	Identifier	IS_WHITECHAR		795821	0					
ANR	798227	ArgumentList	ptr [ - 2 ]		795821	1					
ANR	798228	Argument	ptr [ - 2 ]		795821	0					
ANR	798229	ArrayIndexing	ptr [ - 2 ]		795821	0					
ANR	798230	Identifier	ptr		795821	0					
ANR	798231	UnaryOperationExpression	- 2		795821	1					
ANR	798232	UnaryOperator	-		795821	0					
ANR	798233	PrimaryExpression	2		795821	1					
ANR	798234	CompoundStatement		401:3:9478:9499	795821	1					
ANR	798235	IdentifierDeclStatement	char * fdnum = ptr - 1 ;	2906:3:74129:74150	795821	0	True				
ANR	798236	IdentifierDecl	* fdnum = ptr - 1		795821	0					
ANR	798237	IdentifierDeclType	char *		795821	0					
ANR	798238	Identifier	fdnum		795821	1					
ANR	798239	AssignmentExpression	* fdnum = ptr - 1		795821	2		=			
ANR	798240	Identifier	fdnum		795821	0					
ANR	798241	AdditiveExpression	ptr - 1		795821	1		-			
ANR	798242	Identifier	ptr		795821	0					
ANR	798243	PrimaryExpression	1		795821	1					
ANR	798244	IfStatement	if ( * fdnum == 'H' )		795821	1					
ANR	798245	Condition	* fdnum == 'H'	2907:7:74159:74171	795821	0	True				
ANR	798246	EqualityExpression	* fdnum == 'H'		795821	0		==			
ANR	798247	UnaryOperationExpression	* fdnum		795821	0					
ANR	798248	UnaryOperator	*		795821	0					
ANR	798249	Identifier	fdnum		795821	1					
ANR	798250	PrimaryExpression	'H'		795821	1					
ANR	798251	CompoundStatement		402:22:9523:9523	795821	1					
ANR	798252	ExpressionStatement	"scr_html = r_config_get_i ( core -> config , ""scr.html"" )"	2908:4:74188:74240	795821	0	True				
ANR	798253	AssignmentExpression	"scr_html = r_config_get_i ( core -> config , ""scr.html"" )"		795821	0		=			
ANR	798254	Identifier	scr_html		795821	0					
ANR	798255	CallExpression	"r_config_get_i ( core -> config , ""scr.html"" )"		795821	1					
ANR	798256	Callee	r_config_get_i		795821	0					
ANR	798257	Identifier	r_config_get_i		795821	0					
ANR	798258	ArgumentList	core -> config		795821	1					
ANR	798259	Argument	core -> config		795821	0					
ANR	798260	PtrMemberAccess	core -> config		795821	0					
ANR	798261	Identifier	core		795821	0					
ANR	798262	Identifier	config		795821	1					
ANR	798263	Argument	"""scr.html"""		795821	1					
ANR	798264	PrimaryExpression	"""scr.html"""		795821	0					
ANR	798265	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , true )"	2909:4:74246:74293	795821	1	True				
ANR	798266	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , true )"		795821	0					
ANR	798267	Callee	r_config_set_i		795821	0					
ANR	798268	Identifier	r_config_set_i		795821	0					
ANR	798269	ArgumentList	core -> config		795821	1					
ANR	798270	Argument	core -> config		795821	0					
ANR	798271	PtrMemberAccess	core -> config		795821	0					
ANR	798272	Identifier	core		795821	0					
ANR	798273	Identifier	config		795821	1					
ANR	798274	Argument	"""scr.html"""		795821	1					
ANR	798275	PrimaryExpression	"""scr.html"""		795821	0					
ANR	798276	Argument	true		795821	2					
ANR	798277	Identifier	true		795821	0					
ANR	798278	ExpressionStatement	pipecolor = true	2910:4:74299:74315	795821	2	True				
ANR	798279	AssignmentExpression	pipecolor = true		795821	0		=			
ANR	798280	Identifier	pipecolor		795821	0					
ANR	798281	Identifier	true		795821	1					
ANR	798282	ExpressionStatement	* fdnum = 0	2911:4:74321:74331	795821	3	True				
ANR	798283	AssignmentExpression	* fdnum = 0		795821	0		=			
ANR	798284	UnaryOperationExpression	* fdnum		795821	0					
ANR	798285	UnaryOperator	*		795821	0					
ANR	798286	Identifier	fdnum		795821	1					
ANR	798287	PrimaryExpression	0		795821	1					
ANR	798288	ElseStatement	else		795821	0					
ANR	798289	CompoundStatement		407:10:9692:9692	795821	0					
ANR	798290	IfStatement	if ( IS_DIGIT ( * fdnum ) )		795821	0					
ANR	798291	Condition	IS_DIGIT ( * fdnum )	2913:8:74353:74369	795821	0	True				
ANR	798292	CallExpression	IS_DIGIT ( * fdnum )		795821	0					
ANR	798293	Callee	IS_DIGIT		795821	0					
ANR	798294	Identifier	IS_DIGIT		795821	0					
ANR	798295	ArgumentList	* fdnum		795821	1					
ANR	798296	Argument	* fdnum		795821	0					
ANR	798297	UnaryOperationExpression	* fdnum		795821	0					
ANR	798298	UnaryOperator	*		795821	0					
ANR	798299	Identifier	fdnum		795821	1					
ANR	798300	CompoundStatement		408:27:9721:9721	795821	1					
ANR	798301	ExpressionStatement	fdn = * fdnum - '0'	2914:5:74379:74397	795821	0	True				
ANR	798302	AssignmentExpression	fdn = * fdnum - '0'		795821	0		=			
ANR	798303	Identifier	fdn		795821	0					
ANR	798304	AdditiveExpression	* fdnum - '0'		795821	1		-			
ANR	798305	UnaryOperationExpression	* fdnum		795821	0					
ANR	798306	UnaryOperator	*		795821	0					
ANR	798307	Identifier	fdnum		795821	1					
ANR	798308	PrimaryExpression	'0'		795821	1					
ANR	798309	ExpressionStatement	* fdnum = 0	2916:4:74409:74419	795821	1	True				
ANR	798310	AssignmentExpression	* fdnum = 0		795821	0		=			
ANR	798311	UnaryOperationExpression	* fdnum		795821	0					
ANR	798312	UnaryOperator	*		795821	0					
ANR	798313	Identifier	fdnum		795821	1					
ANR	798314	PrimaryExpression	0		795821	1					
ANR	798315	ExpressionStatement	r_cons_set_interactive ( false )	2919:2:74432:74462	795821	10	True				
ANR	798316	CallExpression	r_cons_set_interactive ( false )		795821	0					
ANR	798317	Callee	r_cons_set_interactive		795821	0					
ANR	798318	Identifier	r_cons_set_interactive		795821	0					
ANR	798319	ArgumentList	false		795821	1					
ANR	798320	Argument	false		795821	0					
ANR	798321	Identifier	false		795821	0					
ANR	798322	IfStatement	"if ( ! strcmp ( str , ""-"" ) )"		795821	11					
ANR	798323	Condition	"! strcmp ( str , ""-"" )"	2920:6:74470:74487	795821	0	True				
ANR	798324	UnaryOperationExpression	"! strcmp ( str , ""-"" )"		795821	0					
ANR	798325	UnaryOperator	!		795821	0					
ANR	798326	CallExpression	"strcmp ( str , ""-"" )"		795821	1					
ANR	798327	Callee	strcmp		795821	0					
ANR	798328	Identifier	strcmp		795821	0					
ANR	798329	ArgumentList	str		795821	1					
ANR	798330	Argument	str		795821	0					
ANR	798331	Identifier	str		795821	0					
ANR	798332	Argument	"""-"""		795821	1					
ANR	798333	PrimaryExpression	"""-"""		795821	0					
ANR	798334	CompoundStatement		415:26:9839:9839	795821	1					
ANR	798335	ExpressionStatement	use_editor = true	2921:3:74495:74512	795821	0	True				
ANR	798336	AssignmentExpression	use_editor = true		795821	0		=			
ANR	798337	Identifier	use_editor		795821	0					
ANR	798338	Identifier	true		795821	1					
ANR	798339	ExpressionStatement	"str = r_file_temp ( ""dumpedit"" )"	2922:3:74517:74547	795821	1	True				
ANR	798340	AssignmentExpression	"str = r_file_temp ( ""dumpedit"" )"		795821	0		=			
ANR	798341	Identifier	str		795821	0					
ANR	798342	CallExpression	"r_file_temp ( ""dumpedit"" )"		795821	1					
ANR	798343	Callee	r_file_temp		795821	0					
ANR	798344	Identifier	r_file_temp		795821	0					
ANR	798345	ArgumentList	"""dumpedit"""		795821	1					
ANR	798346	Argument	"""dumpedit"""		795821	0					
ANR	798347	PrimaryExpression	"""dumpedit"""		795821	0					
ANR	798348	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"	2923:3:74552:74615	795821	2	True				
ANR	798349	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"		795821	0					
ANR	798350	Callee	r_config_set_i		795821	0					
ANR	798351	Identifier	r_config_set_i		795821	0					
ANR	798352	ArgumentList	core -> config		795821	1					
ANR	798353	Argument	core -> config		795821	0					
ANR	798354	PtrMemberAccess	core -> config		795821	0					
ANR	798355	Identifier	core		795821	0					
ANR	798356	Identifier	config		795821	1					
ANR	798357	Argument	"""scr.color"""		795821	1					
ANR	798358	PrimaryExpression	"""scr.color"""		795821	0					
ANR	798359	Argument	COLOR_MODE_DISABLED		795821	2					
ANR	798360	Identifier	COLOR_MODE_DISABLED		795821	0					
ANR	798361	IdentifierDeclStatement	const bool appendResult = ( ptr [ 1 ] == '>' ) ;	2925:2:74623:74664	795821	12	True				
ANR	798362	IdentifierDecl	appendResult = ( ptr [ 1 ] == '>' )		795821	0					
ANR	798363	IdentifierDeclType	const bool		795821	0					
ANR	798364	Identifier	appendResult		795821	1					
ANR	798365	AssignmentExpression	appendResult = ( ptr [ 1 ] == '>' )		795821	2		=			
ANR	798366	Identifier	appendResult		795821	0					
ANR	798367	EqualityExpression	ptr [ 1 ] == '>'		795821	1		==			
ANR	798368	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	798369	Identifier	ptr		795821	0					
ANR	798370	PrimaryExpression	1		795821	1					
ANR	798371	PrimaryExpression	'>'		795821	1					
ANR	798372	IfStatement	if ( * str == '$' )		795821	13					
ANR	798373	Condition	* str == '$'	2926:6:74672:74682	795821	0	True				
ANR	798374	EqualityExpression	* str == '$'		795821	0		==			
ANR	798375	UnaryOperationExpression	* str		795821	0					
ANR	798376	UnaryOperator	*		795821	0					
ANR	798377	Identifier	str		795821	1					
ANR	798378	PrimaryExpression	'$'		795821	1					
ANR	798379	CompoundStatement		424:3:10113:10149	795821	1					
ANR	798380	IdentifierDeclStatement	"char * o = r_core_cmd_str ( core , cmd ) ;"	2929:3:74764:74800	795821	0	True				
ANR	798381	IdentifierDecl	"* o = r_core_cmd_str ( core , cmd )"		795821	0					
ANR	798382	IdentifierDeclType	char *		795821	0					
ANR	798383	Identifier	o		795821	1					
ANR	798384	AssignmentExpression	"* o = r_core_cmd_str ( core , cmd )"		795821	2		=			
ANR	798385	Identifier	o		795821	0					
ANR	798386	CallExpression	"r_core_cmd_str ( core , cmd )"		795821	1					
ANR	798387	Callee	r_core_cmd_str		795821	0					
ANR	798388	Identifier	r_core_cmd_str		795821	0					
ANR	798389	ArgumentList	core		795821	1					
ANR	798390	Argument	core		795821	0					
ANR	798391	Identifier	core		795821	0					
ANR	798392	Argument	cmd		795821	1					
ANR	798393	Identifier	cmd		795821	0					
ANR	798394	IfStatement	if ( appendResult )		795821	1					
ANR	798395	Condition	appendResult	2930:7:74809:74820	795821	0	True				
ANR	798396	Identifier	appendResult		795821	0					
ANR	798397	CompoundStatement		426:4:10178:10230	795821	1					
ANR	798398	IdentifierDeclStatement	"char * oldText = r_cmd_alias_get ( core -> rcmd , str , 1 ) ;"	2931:4:74829:74881	795821	0	True				
ANR	798399	IdentifierDecl	"* oldText = r_cmd_alias_get ( core -> rcmd , str , 1 )"		795821	0					
ANR	798400	IdentifierDeclType	char *		795821	0					
ANR	798401	Identifier	oldText		795821	1					
ANR	798402	AssignmentExpression	"* oldText = r_cmd_alias_get ( core -> rcmd , str , 1 )"		795821	2		=			
ANR	798403	Identifier	oldText		795821	0					
ANR	798404	CallExpression	"r_cmd_alias_get ( core -> rcmd , str , 1 )"		795821	1					
ANR	798405	Callee	r_cmd_alias_get		795821	0					
ANR	798406	Identifier	r_cmd_alias_get		795821	0					
ANR	798407	ArgumentList	core -> rcmd		795821	1					
ANR	798408	Argument	core -> rcmd		795821	0					
ANR	798409	PtrMemberAccess	core -> rcmd		795821	0					
ANR	798410	Identifier	core		795821	0					
ANR	798411	Identifier	rcmd		795821	1					
ANR	798412	Argument	str		795821	1					
ANR	798413	Identifier	str		795821	0					
ANR	798414	Argument	1		795821	2					
ANR	798415	PrimaryExpression	1		795821	0					
ANR	798416	IfStatement	if ( oldText )		795821	1					
ANR	798417	Condition	oldText	2932:8:74891:74897	795821	0	True				
ANR	798418	Identifier	oldText		795821	0					
ANR	798419	CompoundStatement		428:5:10256:10299	795821	1					
ANR	798420	IdentifierDeclStatement	"char * two = r_str_newf ( ""%s%s"" , oldText , o ) ;"	2933:5:74907:74950	795821	0	True				
ANR	798421	IdentifierDecl	"* two = r_str_newf ( ""%s%s"" , oldText , o )"		795821	0					
ANR	798422	IdentifierDeclType	char *		795821	0					
ANR	798423	Identifier	two		795821	1					
ANR	798424	AssignmentExpression	"* two = r_str_newf ( ""%s%s"" , oldText , o )"		795821	2		=			
ANR	798425	Identifier	two		795821	0					
ANR	798426	CallExpression	"r_str_newf ( ""%s%s"" , oldText , o )"		795821	1					
ANR	798427	Callee	r_str_newf		795821	0					
ANR	798428	Identifier	r_str_newf		795821	0					
ANR	798429	ArgumentList	"""%s%s"""		795821	1					
ANR	798430	Argument	"""%s%s"""		795821	0					
ANR	798431	PrimaryExpression	"""%s%s"""		795821	0					
ANR	798432	Argument	oldText		795821	1					
ANR	798433	Identifier	oldText		795821	0					
ANR	798434	Argument	o		795821	2					
ANR	798435	Identifier	o		795821	0					
ANR	798436	IfStatement	if ( two )		795821	1					
ANR	798437	Condition	two	2934:9:74961:74963	795821	0	True				
ANR	798438	Identifier	two		795821	0					
ANR	798439	CompoundStatement		429:14:10315:10315	795821	1					
ANR	798440	ExpressionStatement	"r_cmd_alias_set ( core -> rcmd , str , two , 1 )"	2935:6:74974:75015	795821	0	True				
ANR	798441	CallExpression	"r_cmd_alias_set ( core -> rcmd , str , two , 1 )"		795821	0					
ANR	798442	Callee	r_cmd_alias_set		795821	0					
ANR	798443	Identifier	r_cmd_alias_set		795821	0					
ANR	798444	ArgumentList	core -> rcmd		795821	1					
ANR	798445	Argument	core -> rcmd		795821	0					
ANR	798446	PtrMemberAccess	core -> rcmd		795821	0					
ANR	798447	Identifier	core		795821	0					
ANR	798448	Identifier	rcmd		795821	1					
ANR	798449	Argument	str		795821	1					
ANR	798450	Identifier	str		795821	0					
ANR	798451	Argument	two		795821	2					
ANR	798452	Identifier	two		795821	0					
ANR	798453	Argument	1		795821	3					
ANR	798454	PrimaryExpression	1		795821	0					
ANR	798455	ExpressionStatement	free ( two )	2936:6:75023:75033	795821	1	True				
ANR	798456	CallExpression	free ( two )		795821	0					
ANR	798457	Callee	free		795821	0					
ANR	798458	Identifier	free		795821	0					
ANR	798459	ArgumentList	two		795821	1					
ANR	798460	Argument	two		795821	0					
ANR	798461	Identifier	two		795821	0					
ANR	798462	ElseStatement	else		795821	0					
ANR	798463	CompoundStatement		434:5:10409:10440	795821	0					
ANR	798464	IdentifierDeclStatement	"char * n = r_str_newf ( ""$%s"" , o ) ;"	2939:5:75060:75091	795821	0	True				
ANR	798465	IdentifierDecl	"* n = r_str_newf ( ""$%s"" , o )"		795821	0					
ANR	798466	IdentifierDeclType	char *		795821	0					
ANR	798467	Identifier	n		795821	1					
ANR	798468	AssignmentExpression	"* n = r_str_newf ( ""$%s"" , o )"		795821	2		=			
ANR	798469	Identifier	n		795821	0					
ANR	798470	CallExpression	"r_str_newf ( ""$%s"" , o )"		795821	1					
ANR	798471	Callee	r_str_newf		795821	0					
ANR	798472	Identifier	r_str_newf		795821	0					
ANR	798473	ArgumentList	"""$%s"""		795821	1					
ANR	798474	Argument	"""$%s"""		795821	0					
ANR	798475	PrimaryExpression	"""$%s"""		795821	0					
ANR	798476	Argument	o		795821	1					
ANR	798477	Identifier	o		795821	0					
ANR	798478	ExpressionStatement	"r_cmd_alias_set ( core -> rcmd , str , n , 1 )"	2940:5:75098:75137	795821	1	True				
ANR	798479	CallExpression	"r_cmd_alias_set ( core -> rcmd , str , n , 1 )"		795821	0					
ANR	798480	Callee	r_cmd_alias_set		795821	0					
ANR	798481	Identifier	r_cmd_alias_set		795821	0					
ANR	798482	ArgumentList	core -> rcmd		795821	1					
ANR	798483	Argument	core -> rcmd		795821	0					
ANR	798484	PtrMemberAccess	core -> rcmd		795821	0					
ANR	798485	Identifier	core		795821	0					
ANR	798486	Identifier	rcmd		795821	1					
ANR	798487	Argument	str		795821	1					
ANR	798488	Identifier	str		795821	0					
ANR	798489	Argument	n		795821	2					
ANR	798490	Identifier	n		795821	0					
ANR	798491	Argument	1		795821	3					
ANR	798492	PrimaryExpression	1		795821	0					
ANR	798493	ExpressionStatement	free ( n )	2941:5:75144:75152	795821	2	True				
ANR	798494	CallExpression	free ( n )		795821	0					
ANR	798495	Callee	free		795821	0					
ANR	798496	Identifier	free		795821	0					
ANR	798497	ArgumentList	n		795821	1					
ANR	798498	Argument	n		795821	0					
ANR	798499	Identifier	n		795821	0					
ANR	798500	ElseStatement	else		795821	0					
ANR	798501	CompoundStatement		439:4:10525:10556	795821	0					
ANR	798502	IdentifierDeclStatement	"char * n = r_str_newf ( ""$%s"" , o ) ;"	2944:4:75176:75207	795821	0	True				
ANR	798503	IdentifierDecl	"* n = r_str_newf ( ""$%s"" , o )"		795821	0					
ANR	798504	IdentifierDeclType	char *		795821	0					
ANR	798505	Identifier	n		795821	1					
ANR	798506	AssignmentExpression	"* n = r_str_newf ( ""$%s"" , o )"		795821	2		=			
ANR	798507	Identifier	n		795821	0					
ANR	798508	CallExpression	"r_str_newf ( ""$%s"" , o )"		795821	1					
ANR	798509	Callee	r_str_newf		795821	0					
ANR	798510	Identifier	r_str_newf		795821	0					
ANR	798511	ArgumentList	"""$%s"""		795821	1					
ANR	798512	Argument	"""$%s"""		795821	0					
ANR	798513	PrimaryExpression	"""$%s"""		795821	0					
ANR	798514	Argument	o		795821	1					
ANR	798515	Identifier	o		795821	0					
ANR	798516	ExpressionStatement	"r_cmd_alias_set ( core -> rcmd , str , n , 1 )"	2945:4:75213:75252	795821	1	True				
ANR	798517	CallExpression	"r_cmd_alias_set ( core -> rcmd , str , n , 1 )"		795821	0					
ANR	798518	Callee	r_cmd_alias_set		795821	0					
ANR	798519	Identifier	r_cmd_alias_set		795821	0					
ANR	798520	ArgumentList	core -> rcmd		795821	1					
ANR	798521	Argument	core -> rcmd		795821	0					
ANR	798522	PtrMemberAccess	core -> rcmd		795821	0					
ANR	798523	Identifier	core		795821	0					
ANR	798524	Identifier	rcmd		795821	1					
ANR	798525	Argument	str		795821	1					
ANR	798526	Identifier	str		795821	0					
ANR	798527	Argument	n		795821	2					
ANR	798528	Identifier	n		795821	0					
ANR	798529	Argument	1		795821	3					
ANR	798530	PrimaryExpression	1		795821	0					
ANR	798531	ExpressionStatement	free ( n )	2946:4:75258:75266	795821	2	True				
ANR	798532	CallExpression	free ( n )		795821	0					
ANR	798533	Callee	free		795821	0					
ANR	798534	Identifier	free		795821	0					
ANR	798535	ArgumentList	n		795821	1					
ANR	798536	Argument	n		795821	0					
ANR	798537	Identifier	n		795821	0					
ANR	798538	ExpressionStatement	ret = 0	2948:3:75276:75283	795821	2	True				
ANR	798539	AssignmentExpression	ret = 0		795821	0		=			
ANR	798540	Identifier	ret		795821	0					
ANR	798541	PrimaryExpression	0		795821	1					
ANR	798542	ExpressionStatement	free ( o )	2949:3:75288:75296	795821	3	True				
ANR	798543	CallExpression	free ( o )		795821	0					
ANR	798544	Callee	free		795821	0					
ANR	798545	Identifier	free		795821	0					
ANR	798546	ArgumentList	o		795821	1					
ANR	798547	Argument	o		795821	0					
ANR	798548	Identifier	o		795821	0					
ANR	798549	ElseStatement	else		795821	0					
ANR	798550	IfStatement	if ( fdn > 0 )		795821	0					
ANR	798551	Condition	fdn > 0	2950:13:75311:75317	795821	0	True				
ANR	798552	RelationalExpression	fdn > 0		795821	0		>			
ANR	798553	Identifier	fdn		795821	0					
ANR	798554	PrimaryExpression	0		795821	1					
ANR	798555	CompoundStatement		445:22:10669:10669	795821	1					
ANR	798556	ExpressionStatement	"pipefd = r_cons_pipe_open ( str , fdn , appendResult )"	2952:3:75356:75406	795821	0	True				
ANR	798557	AssignmentExpression	"pipefd = r_cons_pipe_open ( str , fdn , appendResult )"		795821	0		=			
ANR	798558	Identifier	pipefd		795821	0					
ANR	798559	CallExpression	"r_cons_pipe_open ( str , fdn , appendResult )"		795821	1					
ANR	798560	Callee	r_cons_pipe_open		795821	0					
ANR	798561	Identifier	r_cons_pipe_open		795821	0					
ANR	798562	ArgumentList	str		795821	1					
ANR	798563	Argument	str		795821	0					
ANR	798564	Identifier	str		795821	0					
ANR	798565	Argument	fdn		795821	1					
ANR	798566	Identifier	fdn		795821	0					
ANR	798567	Argument	appendResult		795821	2					
ANR	798568	Identifier	appendResult		795821	0					
ANR	798569	IfStatement	if ( pipefd != - 1 )		795821	1					
ANR	798570	Condition	pipefd != - 1	2953:7:75415:75426	795821	0	True				
ANR	798571	EqualityExpression	pipefd != - 1		795821	0		!=			
ANR	798572	Identifier	pipefd		795821	0					
ANR	798573	UnaryOperationExpression	- 1		795821	1					
ANR	798574	UnaryOperator	-		795821	0					
ANR	798575	PrimaryExpression	1		795821	1					
ANR	798576	CompoundStatement		448:21:10778:10778	795821	1					
ANR	798577	IfStatement	if ( ! pipecolor )		795821	0					
ANR	798578	Condition	! pipecolor	2954:8:75439:75448	795821	0	True				
ANR	798579	UnaryOperationExpression	! pipecolor		795821	0					
ANR	798580	UnaryOperator	!		795821	0					
ANR	798581	Identifier	pipecolor		795821	1					
ANR	798582	CompoundStatement		449:20:10800:10800	795821	1					
ANR	798583	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"	2955:5:75458:75521	795821	0	True				
ANR	798584	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"		795821	0					
ANR	798585	Callee	r_config_set_i		795821	0					
ANR	798586	Identifier	r_config_set_i		795821	0					
ANR	798587	ArgumentList	core -> config		795821	1					
ANR	798588	Argument	core -> config		795821	0					
ANR	798589	PtrMemberAccess	core -> config		795821	0					
ANR	798590	Identifier	core		795821	0					
ANR	798591	Identifier	config		795821	1					
ANR	798592	Argument	"""scr.color"""		795821	1					
ANR	798593	PrimaryExpression	"""scr.color"""		795821	0					
ANR	798594	Argument	COLOR_MODE_DISABLED		795821	2					
ANR	798595	Identifier	COLOR_MODE_DISABLED		795821	0					
ANR	798596	ExpressionStatement	"ret = r_core_cmd_subst ( core , cmd )"	2957:4:75533:75567	795821	1	True				
ANR	798597	AssignmentExpression	"ret = r_core_cmd_subst ( core , cmd )"		795821	0		=			
ANR	798598	Identifier	ret		795821	0					
ANR	798599	CallExpression	"r_core_cmd_subst ( core , cmd )"		795821	1					
ANR	798600	Callee	r_core_cmd_subst		795821	0					
ANR	798601	Identifier	r_core_cmd_subst		795821	0					
ANR	798602	ArgumentList	core		795821	1					
ANR	798603	Argument	core		795821	0					
ANR	798604	Identifier	core		795821	0					
ANR	798605	Argument	cmd		795821	1					
ANR	798606	Identifier	cmd		795821	0					
ANR	798607	ExpressionStatement	r_cons_flush ( )	2958:4:75573:75588	795821	2	True				
ANR	798608	CallExpression	r_cons_flush ( )		795821	0					
ANR	798609	Callee	r_cons_flush		795821	0					
ANR	798610	Identifier	r_cons_flush		795821	0					
ANR	798611	ArgumentList			795821	1					
ANR	798612	ExpressionStatement	r_cons_pipe_close ( pipefd )	2959:4:75594:75620	795821	3	True				
ANR	798613	CallExpression	r_cons_pipe_close ( pipefd )		795821	0					
ANR	798614	Callee	r_cons_pipe_close		795821	0					
ANR	798615	Identifier	r_cons_pipe_close		795821	0					
ANR	798616	ArgumentList	pipefd		795821	1					
ANR	798617	Argument	pipefd		795821	0					
ANR	798618	Identifier	pipefd		795821	0					
ANR	798619	ExpressionStatement	r_cons_set_last_interactive ( )	2962:2:75633:75663	795821	14	True				
ANR	798620	CallExpression	r_cons_set_last_interactive ( )		795821	0					
ANR	798621	Callee	r_cons_set_last_interactive		795821	0					
ANR	798622	Identifier	r_cons_set_last_interactive		795821	0					
ANR	798623	ArgumentList			795821	1					
ANR	798624	IfStatement	if ( ! pipecolor )		795821	15					
ANR	798625	Condition	! pipecolor	2963:6:75671:75680	795821	0	True				
ANR	798626	UnaryOperationExpression	! pipecolor		795821	0					
ANR	798627	UnaryOperator	!		795821	0					
ANR	798628	Identifier	pipecolor		795821	1					
ANR	798629	CompoundStatement		458:18:11032:11032	795821	1					
ANR	798630	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , ocolor )"	2964:3:75688:75738	795821	0	True				
ANR	798631	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , ocolor )"		795821	0					
ANR	798632	Callee	r_config_set_i		795821	0					
ANR	798633	Identifier	r_config_set_i		795821	0					
ANR	798634	ArgumentList	core -> config		795821	1					
ANR	798635	Argument	core -> config		795821	0					
ANR	798636	PtrMemberAccess	core -> config		795821	0					
ANR	798637	Identifier	core		795821	0					
ANR	798638	Identifier	config		795821	1					
ANR	798639	Argument	"""scr.color"""		795821	1					
ANR	798640	PrimaryExpression	"""scr.color"""		795821	0					
ANR	798641	Argument	ocolor		795821	2					
ANR	798642	Identifier	ocolor		795821	0					
ANR	798643	IfStatement	if ( use_editor )		795821	16					
ANR	798644	Condition	use_editor	2966:6:75750:75759	795821	0	True				
ANR	798645	Identifier	use_editor		795821	0					
ANR	798646	CompoundStatement		462:3:11116:11178	795821	1					
ANR	798647	IdentifierDeclStatement	"const char * editor = r_config_get ( core -> config , ""cfg.editor"" ) ;"	2967:3:75767:75829	795821	0	True				
ANR	798648	IdentifierDecl	"* editor = r_config_get ( core -> config , ""cfg.editor"" )"		795821	0					
ANR	798649	IdentifierDeclType	const char *		795821	0					
ANR	798650	Identifier	editor		795821	1					
ANR	798651	AssignmentExpression	"* editor = r_config_get ( core -> config , ""cfg.editor"" )"		795821	2		=			
ANR	798652	Identifier	editor		795821	0					
ANR	798653	CallExpression	"r_config_get ( core -> config , ""cfg.editor"" )"		795821	1					
ANR	798654	Callee	r_config_get		795821	0					
ANR	798655	Identifier	r_config_get		795821	0					
ANR	798656	ArgumentList	core -> config		795821	1					
ANR	798657	Argument	core -> config		795821	0					
ANR	798658	PtrMemberAccess	core -> config		795821	0					
ANR	798659	Identifier	core		795821	0					
ANR	798660	Identifier	config		795821	1					
ANR	798661	Argument	"""cfg.editor"""		795821	1					
ANR	798662	PrimaryExpression	"""cfg.editor"""		795821	0					
ANR	798663	IfStatement	if ( editor && * editor )		795821	1					
ANR	798664	Condition	editor && * editor	2968:7:75838:75854	795821	0	True				
ANR	798665	AndExpression	editor && * editor		795821	0		&&			
ANR	798666	Identifier	editor		795821	0					
ANR	798667	UnaryOperationExpression	* editor		795821	1					
ANR	798668	UnaryOperator	*		795821	0					
ANR	798669	Identifier	editor		795821	1					
ANR	798670	CompoundStatement		463:26:11206:11206	795821	1					
ANR	798671	ExpressionStatement	"r_sys_cmdf ( ""%s '%s'"" , editor , str )"	2969:4:75863:75898	795821	0	True				
ANR	798672	CallExpression	"r_sys_cmdf ( ""%s '%s'"" , editor , str )"		795821	0					
ANR	798673	Callee	r_sys_cmdf		795821	0					
ANR	798674	Identifier	r_sys_cmdf		795821	0					
ANR	798675	ArgumentList	"""%s '%s'"""		795821	1					
ANR	798676	Argument	"""%s '%s'"""		795821	0					
ANR	798677	PrimaryExpression	"""%s '%s'"""		795821	0					
ANR	798678	Argument	editor		795821	1					
ANR	798679	Identifier	editor		795821	0					
ANR	798680	Argument	str		795821	2					
ANR	798681	Identifier	str		795821	0					
ANR	798682	ExpressionStatement	r_file_rm ( str )	2970:4:75904:75919	795821	1	True				
ANR	798683	CallExpression	r_file_rm ( str )		795821	0					
ANR	798684	Callee	r_file_rm		795821	0					
ANR	798685	Identifier	r_file_rm		795821	0					
ANR	798686	ArgumentList	str		795821	1					
ANR	798687	Argument	str		795821	0					
ANR	798688	Identifier	str		795821	0					
ANR	798689	ElseStatement	else		795821	0					
ANR	798690	CompoundStatement		466:10:11280:11280	795821	0					
ANR	798691	ExpressionStatement	"eprintf ( ""No cfg.editor configured\\n"" )"	2972:4:75937:75975	795821	0	True				
ANR	798692	CallExpression	"eprintf ( ""No cfg.editor configured\\n"" )"		795821	0					
ANR	798693	Callee	eprintf		795821	0					
ANR	798694	Identifier	eprintf		795821	0					
ANR	798695	ArgumentList	"""No cfg.editor configured\\n"""		795821	1					
ANR	798696	Argument	"""No cfg.editor configured\\n"""		795821	0					
ANR	798697	PrimaryExpression	"""No cfg.editor configured\\n"""		795821	0					
ANR	798698	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , ocolor )"	2974:3:75985:76035	795821	2	True				
ANR	798699	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , ocolor )"		795821	0					
ANR	798700	Callee	r_config_set_i		795821	0					
ANR	798701	Identifier	r_config_set_i		795821	0					
ANR	798702	ArgumentList	core -> config		795821	1					
ANR	798703	Argument	core -> config		795821	0					
ANR	798704	PtrMemberAccess	core -> config		795821	0					
ANR	798705	Identifier	core		795821	0					
ANR	798706	Identifier	config		795821	1					
ANR	798707	Argument	"""scr.color"""		795821	1					
ANR	798708	PrimaryExpression	"""scr.color"""		795821	0					
ANR	798709	Argument	ocolor		795821	2					
ANR	798710	Identifier	ocolor		795821	0					
ANR	798711	ExpressionStatement	free ( str )	2975:3:76040:76050	795821	3	True				
ANR	798712	CallExpression	free ( str )		795821	0					
ANR	798713	Callee	free		795821	0					
ANR	798714	Identifier	free		795821	0					
ANR	798715	ArgumentList	str		795821	1					
ANR	798716	Argument	str		795821	0					
ANR	798717	Identifier	str		795821	0					
ANR	798718	IfStatement	if ( scr_html != - 1 )		795821	17					
ANR	798719	Condition	scr_html != - 1	2977:6:76062:76075	795821	0	True				
ANR	798720	EqualityExpression	scr_html != - 1		795821	0		!=			
ANR	798721	Identifier	scr_html		795821	0					
ANR	798722	UnaryOperationExpression	- 1		795821	1					
ANR	798723	UnaryOperator	-		795821	0					
ANR	798724	PrimaryExpression	1		795821	1					
ANR	798725	CompoundStatement		472:22:11427:11427	795821	1					
ANR	798726	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"	2978:3:76083:76134	795821	0	True				
ANR	798727	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"		795821	0					
ANR	798728	Callee	r_config_set_i		795821	0					
ANR	798729	Identifier	r_config_set_i		795821	0					
ANR	798730	ArgumentList	core -> config		795821	1					
ANR	798731	Argument	core -> config		795821	0					
ANR	798732	PtrMemberAccess	core -> config		795821	0					
ANR	798733	Identifier	core		795821	0					
ANR	798734	Identifier	config		795821	1					
ANR	798735	Argument	"""scr.html"""		795821	1					
ANR	798736	PrimaryExpression	"""scr.html"""		795821	0					
ANR	798737	Argument	scr_html		795821	2					
ANR	798738	Identifier	scr_html		795821	0					
ANR	798739	IfStatement	if ( scr_color != - 1 )		795821	18					
ANR	798740	Condition	scr_color != - 1	2980:6:76146:76160	795821	0	True				
ANR	798741	EqualityExpression	scr_color != - 1		795821	0		!=			
ANR	798742	Identifier	scr_color		795821	0					
ANR	798743	UnaryOperationExpression	- 1		795821	1					
ANR	798744	UnaryOperator	-		795821	0					
ANR	798745	PrimaryExpression	1		795821	1					
ANR	798746	CompoundStatement		475:23:11512:11512	795821	1					
ANR	798747	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , scr_color )"	2981:3:76168:76221	795821	0	True				
ANR	798748	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , scr_color )"		795821	0					
ANR	798749	Callee	r_config_set_i		795821	0					
ANR	798750	Identifier	r_config_set_i		795821	0					
ANR	798751	ArgumentList	core -> config		795821	1					
ANR	798752	Argument	core -> config		795821	0					
ANR	798753	PtrMemberAccess	core -> config		795821	0					
ANR	798754	Identifier	core		795821	0					
ANR	798755	Identifier	config		795821	1					
ANR	798756	Argument	"""scr.color"""		795821	1					
ANR	798757	PrimaryExpression	"""scr.color"""		795821	0					
ANR	798758	Argument	scr_color		795821	2					
ANR	798759	Identifier	scr_color		795821	0					
ANR	798760	ExpressionStatement	core -> cons -> use_tts = false	2983:2:76229:76256	795821	19	True				
ANR	798761	AssignmentExpression	core -> cons -> use_tts = false		795821	0		=			
ANR	798762	PtrMemberAccess	core -> cons -> use_tts		795821	0					
ANR	798763	PtrMemberAccess	core -> cons		795821	0					
ANR	798764	Identifier	core		795821	0					
ANR	798765	Identifier	cons		795821	1					
ANR	798766	Identifier	use_tts		795821	1					
ANR	798767	Identifier	false		795821	1					
ANR	798768	ExpressionStatement	r_list_free ( tmpenvs )	2984:2:76260:76281	795821	20	True				
ANR	798769	CallExpression	r_list_free ( tmpenvs )		795821	0					
ANR	798770	Callee	r_list_free		795821	0					
ANR	798771	Identifier	r_list_free		795821	0					
ANR	798772	ArgumentList	tmpenvs		795821	1					
ANR	798773	Argument	tmpenvs		795821	0					
ANR	798774	Identifier	tmpenvs		795821	0					
ANR	798775	ReturnStatement	return ret ;	2985:2:76285:76295	795821	21	True				
ANR	798776	Identifier	ret		795821	0					
ANR	798777	Label	escape_redir :	2987:0:76300:76312	795821	39	True				
ANR	798778	Identifier	escape_redir		795821	0					
ANR	798779	Label	next2 :	2988:0:76314:76319	795821	40	True				
ANR	798780	Identifier	next2		795821	0					
ANR	798781	ExpressionStatement	"ptr = strchr ( cmd , '`' )"	2990:1:76342:76365	795821	41	True				
ANR	798782	AssignmentExpression	"ptr = strchr ( cmd , '`' )"		795821	0		=			
ANR	798783	Identifier	ptr		795821	0					
ANR	798784	CallExpression	"strchr ( cmd , '`' )"		795821	1					
ANR	798785	Callee	strchr		795821	0					
ANR	798786	Identifier	strchr		795821	0					
ANR	798787	ArgumentList	cmd		795821	1					
ANR	798788	Argument	cmd		795821	0					
ANR	798789	Identifier	cmd		795821	0					
ANR	798790	Argument	'`'		795821	1					
ANR	798791	PrimaryExpression	'`'		795821	0					
ANR	798792	IfStatement	if ( ptr )		795821	42					
ANR	798793	Condition	ptr	2991:5:76372:76374	795821	0	True				
ANR	798794	Identifier	ptr		795821	0					
ANR	798795	CompoundStatement		495:2:11892:11907	795821	1					
ANR	798796	IfStatement	if ( ptr > cmd )		795821	0					
ANR	798797	Condition	ptr > cmd	2992:6:76385:76393	795821	0	True				
ANR	798798	RelationalExpression	ptr > cmd		795821	0		>			
ANR	798799	Identifier	ptr		795821	0					
ANR	798800	Identifier	cmd		795821	1					
ANR	798801	CompoundStatement		488:3:11750:11768	795821	1					
ANR	798802	IdentifierDeclStatement	char * ch = ptr - 1 ;	2993:3:76401:76419	795821	0	True				
ANR	798803	IdentifierDecl	* ch = ptr - 1		795821	0					
ANR	798804	IdentifierDeclType	char *		795821	0					
ANR	798805	Identifier	ch		795821	1					
ANR	798806	AssignmentExpression	* ch = ptr - 1		795821	2		=			
ANR	798807	Identifier	ch		795821	0					
ANR	798808	AdditiveExpression	ptr - 1		795821	1		-			
ANR	798809	Identifier	ptr		795821	0					
ANR	798810	PrimaryExpression	1		795821	1					
ANR	798811	IfStatement	if ( * ch == '\\\\' )		795821	1					
ANR	798812	Condition	* ch == '\\\\'	2994:7:76428:76438	795821	0	True				
ANR	798813	EqualityExpression	* ch == '\\\\'		795821	0		==			
ANR	798814	UnaryOperationExpression	* ch		795821	0					
ANR	798815	UnaryOperator	*		795821	0					
ANR	798816	Identifier	ch		795821	1					
ANR	798817	PrimaryExpression	'\\\\'		795821	1					
ANR	798818	CompoundStatement		489:20:11790:11790	795821	1					
ANR	798819	ExpressionStatement	"memmove ( ch , ptr , strlen ( ptr ) + 1 )"	2995:4:76447:76482	795821	0	True				
ANR	798820	CallExpression	"memmove ( ch , ptr , strlen ( ptr ) + 1 )"		795821	0					
ANR	798821	Callee	memmove		795821	0					
ANR	798822	Identifier	memmove		795821	0					
ANR	798823	ArgumentList	ch		795821	1					
ANR	798824	Argument	ch		795821	0					
ANR	798825	Identifier	ch		795821	0					
ANR	798826	Argument	ptr		795821	1					
ANR	798827	Identifier	ptr		795821	0					
ANR	798828	Argument	strlen ( ptr ) + 1		795821	2					
ANR	798829	AdditiveExpression	strlen ( ptr ) + 1		795821	0		+			
ANR	798830	CallExpression	strlen ( ptr )		795821	0					
ANR	798831	Callee	strlen		795821	0					
ANR	798832	Identifier	strlen		795821	0					
ANR	798833	ArgumentList	ptr		795821	1					
ANR	798834	Argument	ptr		795821	0					
ANR	798835	Identifier	ptr		795821	0					
ANR	798836	PrimaryExpression	1		795821	1					
ANR	798837	GotoStatement	goto escape_backtick ;	2996:4:76488:76508	795821	1	True				
ANR	798838	Identifier	escape_backtick		795821	0					
ANR	798839	IdentifierDeclStatement	bool empty = false ;	2999:2:76521:76539	795821	1	True				
ANR	798840	IdentifierDecl	empty = false		795821	0					
ANR	798841	IdentifierDeclType	bool		795821	0					
ANR	798842	Identifier	empty		795821	1					
ANR	798843	AssignmentExpression	empty = false		795821	2		=			
ANR	798844	Identifier	false		795821	0					
ANR	798845	Identifier	false		795821	1					
ANR	798846	IdentifierDeclStatement	int oneline = 1 ;	3000:2:76543:76558	795821	2	True				
ANR	798847	IdentifierDecl	oneline = 1		795821	0					
ANR	798848	IdentifierDeclType	int		795821	0					
ANR	798849	Identifier	oneline		795821	1					
ANR	798850	AssignmentExpression	oneline = 1		795821	2		=			
ANR	798851	Identifier	oneline		795821	0					
ANR	798852	PrimaryExpression	1		795821	1					
ANR	798853	IfStatement	if ( ptr [ 1 ] == '`' )		795821	3					
ANR	798854	Condition	ptr [ 1 ] == '`'	3001:6:76566:76578	795821	0	True				
ANR	798855	EqualityExpression	ptr [ 1 ] == '`'		795821	0		==			
ANR	798856	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	798857	Identifier	ptr		795821	0					
ANR	798858	PrimaryExpression	1		795821	1					
ANR	798859	PrimaryExpression	'`'		795821	1					
ANR	798860	CompoundStatement		496:21:11930:11930	795821	1					
ANR	798861	ExpressionStatement	"memmove ( ptr , ptr + 1 , strlen ( ptr ) )"	3002:3:76586:76622	795821	0	True				
ANR	798862	CallExpression	"memmove ( ptr , ptr + 1 , strlen ( ptr ) )"		795821	0					
ANR	798863	Callee	memmove		795821	0					
ANR	798864	Identifier	memmove		795821	0					
ANR	798865	ArgumentList	ptr		795821	1					
ANR	798866	Argument	ptr		795821	0					
ANR	798867	Identifier	ptr		795821	0					
ANR	798868	Argument	ptr + 1		795821	1					
ANR	798869	AdditiveExpression	ptr + 1		795821	0		+			
ANR	798870	Identifier	ptr		795821	0					
ANR	798871	PrimaryExpression	1		795821	1					
ANR	798872	Argument	strlen ( ptr )		795821	2					
ANR	798873	CallExpression	strlen ( ptr )		795821	0					
ANR	798874	Callee	strlen		795821	0					
ANR	798875	Identifier	strlen		795821	0					
ANR	798876	ArgumentList	ptr		795821	1					
ANR	798877	Argument	ptr		795821	0					
ANR	798878	Identifier	ptr		795821	0					
ANR	798879	ExpressionStatement	oneline = 0	3003:3:76627:76638	795821	1	True				
ANR	798880	AssignmentExpression	oneline = 0		795821	0		=			
ANR	798881	Identifier	oneline		795821	0					
ANR	798882	PrimaryExpression	0		795821	1					
ANR	798883	ExpressionStatement	empty = true	3004:3:76643:76655	795821	2	True				
ANR	798884	AssignmentExpression	empty = true		795821	0		=			
ANR	798885	Identifier	empty		795821	0					
ANR	798886	Identifier	true		795821	1					
ANR	798887	ExpressionStatement	"ptr2 = strchr ( ptr + 1 , '`' )"	3006:2:76663:76691	795821	4	True				
ANR	798888	AssignmentExpression	"ptr2 = strchr ( ptr + 1 , '`' )"		795821	0		=			
ANR	798889	Identifier	ptr2		795821	0					
ANR	798890	CallExpression	"strchr ( ptr + 1 , '`' )"		795821	1					
ANR	798891	Callee	strchr		795821	0					
ANR	798892	Identifier	strchr		795821	0					
ANR	798893	ArgumentList	ptr + 1		795821	1					
ANR	798894	Argument	ptr + 1		795821	0					
ANR	798895	AdditiveExpression	ptr + 1		795821	0		+			
ANR	798896	Identifier	ptr		795821	0					
ANR	798897	PrimaryExpression	1		795821	1					
ANR	798898	Argument	'`'		795821	1					
ANR	798899	PrimaryExpression	'`'		795821	0					
ANR	798900	IfStatement	if ( empty )		795821	5					
ANR	798901	Condition	empty	3007:6:76699:76703	795821	0	True				
ANR	798902	Identifier	empty		795821	0					
ANR	798903	CompoundStatement		502:13:12055:12055	795821	1					
ANR	798904	ElseStatement	else		795821	0					
ANR	798905	IfStatement	if ( ! ptr2 )		795821	0					
ANR	798906	Condition	! ptr2	3009:13:76741:76745	795821	0	True				
ANR	798907	UnaryOperationExpression	! ptr2		795821	0					
ANR	798908	UnaryOperator	!		795821	0					
ANR	798909	Identifier	ptr2		795821	1					
ANR	798910	CompoundStatement		504:20:12097:12097	795821	1					
ANR	798911	ExpressionStatement	"eprintf ( ""parse: Missing backtick in expression.\\n"" )"	3010:3:76753:76805	795821	0	True				
ANR	798912	CallExpression	"eprintf ( ""parse: Missing backtick in expression.\\n"" )"		795821	0					
ANR	798913	Callee	eprintf		795821	0					
ANR	798914	Identifier	eprintf		795821	0					
ANR	798915	ArgumentList	"""parse: Missing backtick in expression.\\n"""		795821	1					
ANR	798916	Argument	"""parse: Missing backtick in expression.\\n"""		795821	0					
ANR	798917	PrimaryExpression	"""parse: Missing backtick in expression.\\n"""		795821	0					
ANR	798918	GotoStatement	goto fail ;	3011:3:76810:76819	795821	1	True				
ANR	798919	Identifier	fail		795821	0					
ANR	798920	ElseStatement	else		795821	0					
ANR	798921	CompoundStatement		508:3:12184:12212	795821	0					
ANR	798922	IdentifierDeclStatement	int value = core -> num -> value ;	3013:3:76835:76863	795821	0	True				
ANR	798923	IdentifierDecl	value = core -> num -> value		795821	0					
ANR	798924	IdentifierDeclType	int		795821	0					
ANR	798925	Identifier	value		795821	1					
ANR	798926	AssignmentExpression	value = core -> num -> value		795821	2		=			
ANR	798927	Identifier	value		795821	0					
ANR	798928	PtrMemberAccess	core -> num -> value		795821	1					
ANR	798929	PtrMemberAccess	core -> num		795821	0					
ANR	798930	Identifier	core		795821	0					
ANR	798931	Identifier	num		795821	1					
ANR	798932	Identifier	value		795821	1					
ANR	798933	ExpressionStatement	* ptr = '\\0'	3014:3:76868:76879	795821	1	True				
ANR	798934	AssignmentExpression	* ptr = '\\0'		795821	0		=			
ANR	798935	UnaryOperationExpression	* ptr		795821	0					
ANR	798936	UnaryOperator	*		795821	0					
ANR	798937	Identifier	ptr		795821	1					
ANR	798938	PrimaryExpression	'\\0'		795821	1					
ANR	798939	ExpressionStatement	* ptr2 = '\\0'	3015:3:76884:76896	795821	2	True				
ANR	798940	AssignmentExpression	* ptr2 = '\\0'		795821	0		=			
ANR	798941	UnaryOperationExpression	* ptr2		795821	0					
ANR	798942	UnaryOperator	*		795821	0					
ANR	798943	Identifier	ptr2		795821	1					
ANR	798944	PrimaryExpression	'\\0'		795821	1					
ANR	798945	IfStatement	if ( ptr [ 1 ] == '!' )		795821	3					
ANR	798946	Condition	ptr [ 1 ] == '!'	3016:7:76905:76917	795821	0	True				
ANR	798947	EqualityExpression	ptr [ 1 ] == '!'		795821	0		==			
ANR	798948	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	798949	Identifier	ptr		795821	0					
ANR	798950	PrimaryExpression	1		795821	1					
ANR	798951	PrimaryExpression	'!'		795821	1					
ANR	798952	CompoundStatement		511:22:12269:12269	795821	1					
ANR	798953	ExpressionStatement	"str = r_core_cmd_str_pipe ( core , ptr + 1 )"	3017:4:76926:76967	795821	0	True				
ANR	798954	AssignmentExpression	"str = r_core_cmd_str_pipe ( core , ptr + 1 )"		795821	0		=			
ANR	798955	Identifier	str		795821	0					
ANR	798956	CallExpression	"r_core_cmd_str_pipe ( core , ptr + 1 )"		795821	1					
ANR	798957	Callee	r_core_cmd_str_pipe		795821	0					
ANR	798958	Identifier	r_core_cmd_str_pipe		795821	0					
ANR	798959	ArgumentList	core		795821	1					
ANR	798960	Argument	core		795821	0					
ANR	798961	Identifier	core		795821	0					
ANR	798962	Argument	ptr + 1		795821	1					
ANR	798963	AdditiveExpression	ptr + 1		795821	0		+			
ANR	798964	Identifier	ptr		795821	0					
ANR	798965	PrimaryExpression	1		795821	1					
ANR	798966	ElseStatement	else		795821	0					
ANR	798967	CompoundStatement		515:4:12387:12442	795821	0					
ANR	798968	IdentifierDeclStatement	"int ocolor = r_config_get_i ( core -> config , ""scr.color"" ) ;"	3020:4:77038:77093	795821	0	True				
ANR	798969	IdentifierDecl	"ocolor = r_config_get_i ( core -> config , ""scr.color"" )"		795821	0					
ANR	798970	IdentifierDeclType	int		795821	0					
ANR	798971	Identifier	ocolor		795821	1					
ANR	798972	AssignmentExpression	"ocolor = r_config_get_i ( core -> config , ""scr.color"" )"		795821	2		=			
ANR	798973	Identifier	ocolor		795821	0					
ANR	798974	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		795821	1					
ANR	798975	Callee	r_config_get_i		795821	0					
ANR	798976	Identifier	r_config_get_i		795821	0					
ANR	798977	ArgumentList	core -> config		795821	1					
ANR	798978	Argument	core -> config		795821	0					
ANR	798979	PtrMemberAccess	core -> config		795821	0					
ANR	798980	Identifier	core		795821	0					
ANR	798981	Identifier	config		795821	1					
ANR	798982	Argument	"""scr.color"""		795821	1					
ANR	798983	PrimaryExpression	"""scr.color"""		795821	0					
ANR	798984	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , 0 )"	3021:4:77099:77144	795821	1	True				
ANR	798985	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , 0 )"		795821	0					
ANR	798986	Callee	r_config_set_i		795821	0					
ANR	798987	Identifier	r_config_set_i		795821	0					
ANR	798988	ArgumentList	core -> config		795821	1					
ANR	798989	Argument	core -> config		795821	0					
ANR	798990	PtrMemberAccess	core -> config		795821	0					
ANR	798991	Identifier	core		795821	0					
ANR	798992	Identifier	config		795821	1					
ANR	798993	Argument	"""scr.color"""		795821	1					
ANR	798994	PrimaryExpression	"""scr.color"""		795821	0					
ANR	798995	Argument	0		795821	2					
ANR	798996	PrimaryExpression	0		795821	0					
ANR	798997	ExpressionStatement	core -> cmd_in_backticks = true	3022:4:77150:77179	795821	2	True				
ANR	798998	AssignmentExpression	core -> cmd_in_backticks = true		795821	0		=			
ANR	798999	PtrMemberAccess	core -> cmd_in_backticks		795821	0					
ANR	799000	Identifier	core		795821	0					
ANR	799001	Identifier	cmd_in_backticks		795821	1					
ANR	799002	Identifier	true		795821	1					
ANR	799003	ExpressionStatement	"str = r_core_cmd_str ( core , ptr + 1 )"	3023:4:77185:77221	795821	3	True				
ANR	799004	AssignmentExpression	"str = r_core_cmd_str ( core , ptr + 1 )"		795821	0		=			
ANR	799005	Identifier	str		795821	0					
ANR	799006	CallExpression	"r_core_cmd_str ( core , ptr + 1 )"		795821	1					
ANR	799007	Callee	r_core_cmd_str		795821	0					
ANR	799008	Identifier	r_core_cmd_str		795821	0					
ANR	799009	ArgumentList	core		795821	1					
ANR	799010	Argument	core		795821	0					
ANR	799011	Identifier	core		795821	0					
ANR	799012	Argument	ptr + 1		795821	1					
ANR	799013	AdditiveExpression	ptr + 1		795821	0		+			
ANR	799014	Identifier	ptr		795821	0					
ANR	799015	PrimaryExpression	1		795821	1					
ANR	799016	ExpressionStatement	core -> cmd_in_backticks = false	3024:4:77227:77257	795821	4	True				
ANR	799017	AssignmentExpression	core -> cmd_in_backticks = false		795821	0		=			
ANR	799018	PtrMemberAccess	core -> cmd_in_backticks		795821	0					
ANR	799019	Identifier	core		795821	0					
ANR	799020	Identifier	cmd_in_backticks		795821	1					
ANR	799021	Identifier	false		795821	1					
ANR	799022	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , ocolor )"	3025:4:77263:77313	795821	5	True				
ANR	799023	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , ocolor )"		795821	0					
ANR	799024	Callee	r_config_set_i		795821	0					
ANR	799025	Identifier	r_config_set_i		795821	0					
ANR	799026	ArgumentList	core -> config		795821	1					
ANR	799027	Argument	core -> config		795821	0					
ANR	799028	PtrMemberAccess	core -> config		795821	0					
ANR	799029	Identifier	core		795821	0					
ANR	799030	Identifier	config		795821	1					
ANR	799031	Argument	"""scr.color"""		795821	1					
ANR	799032	PrimaryExpression	"""scr.color"""		795821	0					
ANR	799033	Argument	ocolor		795821	2					
ANR	799034	Identifier	ocolor		795821	0					
ANR	799035	IfStatement	if ( ! str )		795821	4					
ANR	799036	Condition	! str	3027:7:77327:77330	795821	0	True				
ANR	799037	UnaryOperationExpression	! str		795821	0					
ANR	799038	UnaryOperator	!		795821	0					
ANR	799039	Identifier	str		795821	1					
ANR	799040	CompoundStatement		522:13:12682:12682	795821	1					
ANR	799041	GotoStatement	goto fail ;	3028:4:77339:77348	795821	0	True				
ANR	799042	Identifier	fail		795821	0					
ANR	799043	IfStatement	if ( * str == '|' || * str == '*' )		795821	5					
ANR	799044	Condition	* str == '|' || * str == '*'	3031:7:77417:77442	795821	0	True				
ANR	799045	OrExpression	* str == '|' || * str == '*'		795821	0		||			
ANR	799046	EqualityExpression	* str == '|'		795821	0		==			
ANR	799047	UnaryOperationExpression	* str		795821	0					
ANR	799048	UnaryOperator	*		795821	0					
ANR	799049	Identifier	str		795821	1					
ANR	799050	PrimaryExpression	'|'		795821	1					
ANR	799051	EqualityExpression	* str == '*'		795821	1		==			
ANR	799052	UnaryOperationExpression	* str		795821	0					
ANR	799053	UnaryOperator	*		795821	0					
ANR	799054	Identifier	str		795821	1					
ANR	799055	PrimaryExpression	'*'		795821	1					
ANR	799056	CompoundStatement		526:35:12794:12794	795821	1					
ANR	799057	ExpressionStatement	"eprintf ( ""r_core_cmd_subst_i: invalid backticked command\\n"" )"	3032:4:77451:77511	795821	0	True				
ANR	799058	CallExpression	"eprintf ( ""r_core_cmd_subst_i: invalid backticked command\\n"" )"		795821	0					
ANR	799059	Callee	eprintf		795821	0					
ANR	799060	Identifier	eprintf		795821	0					
ANR	799061	ArgumentList	"""r_core_cmd_subst_i: invalid backticked command\\n"""		795821	1					
ANR	799062	Argument	"""r_core_cmd_subst_i: invalid backticked command\\n"""		795821	0					
ANR	799063	PrimaryExpression	"""r_core_cmd_subst_i: invalid backticked command\\n"""		795821	0					
ANR	799064	ExpressionStatement	free ( str )	3033:4:77517:77527	795821	1	True				
ANR	799065	CallExpression	free ( str )		795821	0					
ANR	799066	Callee	free		795821	0					
ANR	799067	Identifier	free		795821	0					
ANR	799068	ArgumentList	str		795821	1					
ANR	799069	Argument	str		795821	0					
ANR	799070	Identifier	str		795821	0					
ANR	799071	GotoStatement	goto fail ;	3034:4:77533:77542	795821	2	True				
ANR	799072	Identifier	fail		795821	0					
ANR	799073	IfStatement	if ( oneline && str )		795821	6					
ANR	799074	Condition	oneline && str	3036:7:77556:77569	795821	0	True				
ANR	799075	AndExpression	oneline && str		795821	0		&&			
ANR	799076	Identifier	oneline		795821	0					
ANR	799077	Identifier	str		795821	1					
ANR	799078	CompoundStatement		531:23:12921:12921	795821	1					
ANR	799079	ForStatement	for ( i = 0 ; str [ i ] ; i ++ )		795821	0					
ANR	799080	ForInit	i = 0 ;	3037:9:77583:77588	795821	0	True				
ANR	799081	AssignmentExpression	i = 0		795821	0		=			
ANR	799082	Identifier	i		795821	0					
ANR	799083	PrimaryExpression	0		795821	1					
ANR	799084	Condition	str [ i ]	3037:16:77590:77595	795821	1	True				
ANR	799085	ArrayIndexing	str [ i ]		795821	0					
ANR	799086	Identifier	str		795821	0					
ANR	799087	Identifier	i		795821	1					
ANR	799088	PostIncDecOperationExpression	i ++	3037:24:77598:77600	795821	2	True				
ANR	799089	Identifier	i		795821	0					
ANR	799090	IncDec	++		795821	1					
ANR	799091	CompoundStatement		532:29:12952:12952	795821	3					
ANR	799092	IfStatement	if ( str [ i ] == '\\n' )		795821	0					
ANR	799093	Condition	str [ i ] == '\\n'	3038:9:77614:77627	795821	0	True				
ANR	799094	EqualityExpression	str [ i ] == '\\n'		795821	0		==			
ANR	799095	ArrayIndexing	str [ i ]		795821	0					
ANR	799096	Identifier	str		795821	0					
ANR	799097	Identifier	i		795821	1					
ANR	799098	PrimaryExpression	'\\n'		795821	1					
ANR	799099	CompoundStatement		533:25:12979:12979	795821	1					
ANR	799100	ExpressionStatement	str [ i ] = ' '	3039:6:77638:77650	795821	0	True				
ANR	799101	AssignmentExpression	str [ i ] = ' '		795821	0		=			
ANR	799102	ArrayIndexing	str [ i ]		795821	0					
ANR	799103	Identifier	str		795821	0					
ANR	799104	Identifier	i		795821	1					
ANR	799105	PrimaryExpression	' '		795821	1					
ANR	799106	ExpressionStatement	"str = r_str_append ( str , ptr2 + 1 )"	3043:3:77673:77707	795821	7	True				
ANR	799107	AssignmentExpression	"str = r_str_append ( str , ptr2 + 1 )"		795821	0		=			
ANR	799108	Identifier	str		795821	0					
ANR	799109	CallExpression	"r_str_append ( str , ptr2 + 1 )"		795821	1					
ANR	799110	Callee	r_str_append		795821	0					
ANR	799111	Identifier	r_str_append		795821	0					
ANR	799112	ArgumentList	str		795821	1					
ANR	799113	Argument	str		795821	0					
ANR	799114	Identifier	str		795821	0					
ANR	799115	Argument	ptr2 + 1		795821	1					
ANR	799116	AdditiveExpression	ptr2 + 1		795821	0		+			
ANR	799117	Identifier	ptr2		795821	0					
ANR	799118	PrimaryExpression	1		795821	1					
ANR	799119	ExpressionStatement	"cmd = r_str_append ( strdup ( cmd ) , str )"	3044:3:77712:77750	795821	8	True				
ANR	799120	AssignmentExpression	"cmd = r_str_append ( strdup ( cmd ) , str )"		795821	0		=			
ANR	799121	Identifier	cmd		795821	0					
ANR	799122	CallExpression	"r_str_append ( strdup ( cmd ) , str )"		795821	1					
ANR	799123	Callee	r_str_append		795821	0					
ANR	799124	Identifier	r_str_append		795821	0					
ANR	799125	ArgumentList	strdup ( cmd )		795821	1					
ANR	799126	Argument	strdup ( cmd )		795821	0					
ANR	799127	CallExpression	strdup ( cmd )		795821	0					
ANR	799128	Callee	strdup		795821	0					
ANR	799129	Identifier	strdup		795821	0					
ANR	799130	ArgumentList	cmd		795821	1					
ANR	799131	Argument	cmd		795821	0					
ANR	799132	Identifier	cmd		795821	0					
ANR	799133	Argument	str		795821	1					
ANR	799134	Identifier	str		795821	0					
ANR	799135	ExpressionStatement	core -> num -> value = value	3045:3:77755:77779	795821	9	True				
ANR	799136	AssignmentExpression	core -> num -> value = value		795821	0		=			
ANR	799137	PtrMemberAccess	core -> num -> value		795821	0					
ANR	799138	PtrMemberAccess	core -> num		795821	0					
ANR	799139	Identifier	core		795821	0					
ANR	799140	Identifier	num		795821	1					
ANR	799141	Identifier	value		795821	1					
ANR	799142	Identifier	value		795821	1					
ANR	799143	ExpressionStatement	"ret = r_core_cmd_subst ( core , cmd )"	3046:3:77784:77818	795821	10	True				
ANR	799144	AssignmentExpression	"ret = r_core_cmd_subst ( core , cmd )"		795821	0		=			
ANR	799145	Identifier	ret		795821	0					
ANR	799146	CallExpression	"r_core_cmd_subst ( core , cmd )"		795821	1					
ANR	799147	Callee	r_core_cmd_subst		795821	0					
ANR	799148	Identifier	r_core_cmd_subst		795821	0					
ANR	799149	ArgumentList	core		795821	1					
ANR	799150	Argument	core		795821	0					
ANR	799151	Identifier	core		795821	0					
ANR	799152	Argument	cmd		795821	1					
ANR	799153	Identifier	cmd		795821	0					
ANR	799154	ExpressionStatement	free ( cmd )	3047:3:77823:77833	795821	11	True				
ANR	799155	CallExpression	free ( cmd )		795821	0					
ANR	799156	Callee	free		795821	0					
ANR	799157	Identifier	free		795821	0					
ANR	799158	ArgumentList	cmd		795821	1					
ANR	799159	Argument	cmd		795821	0					
ANR	799160	Identifier	cmd		795821	0					
ANR	799161	IfStatement	if ( scr_html != - 1 )		795821	12					
ANR	799162	Condition	scr_html != - 1	3048:7:77842:77855	795821	0	True				
ANR	799163	EqualityExpression	scr_html != - 1		795821	0		!=			
ANR	799164	Identifier	scr_html		795821	0					
ANR	799165	UnaryOperationExpression	- 1		795821	1					
ANR	799166	UnaryOperator	-		795821	0					
ANR	799167	PrimaryExpression	1		795821	1					
ANR	799168	CompoundStatement		543:23:13207:13207	795821	1					
ANR	799169	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"	3049:4:77864:77915	795821	0	True				
ANR	799170	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"		795821	0					
ANR	799171	Callee	r_config_set_i		795821	0					
ANR	799172	Identifier	r_config_set_i		795821	0					
ANR	799173	ArgumentList	core -> config		795821	1					
ANR	799174	Argument	core -> config		795821	0					
ANR	799175	PtrMemberAccess	core -> config		795821	0					
ANR	799176	Identifier	core		795821	0					
ANR	799177	Identifier	config		795821	1					
ANR	799178	Argument	"""scr.html"""		795821	1					
ANR	799179	PrimaryExpression	"""scr.html"""		795821	0					
ANR	799180	Argument	scr_html		795821	2					
ANR	799181	Identifier	scr_html		795821	0					
ANR	799182	ExpressionStatement	free ( str )	3051:3:77925:77935	795821	13	True				
ANR	799183	CallExpression	free ( str )		795821	0					
ANR	799184	Callee	free		795821	0					
ANR	799185	Identifier	free		795821	0					
ANR	799186	ArgumentList	str		795821	1					
ANR	799187	Argument	str		795821	0					
ANR	799188	Identifier	str		795821	0					
ANR	799189	ExpressionStatement	r_list_free ( tmpenvs )	3052:3:77940:77961	795821	14	True				
ANR	799190	CallExpression	r_list_free ( tmpenvs )		795821	0					
ANR	799191	Callee	r_list_free		795821	0					
ANR	799192	Identifier	r_list_free		795821	0					
ANR	799193	ArgumentList	tmpenvs		795821	1					
ANR	799194	Argument	tmpenvs		795821	0					
ANR	799195	Identifier	tmpenvs		795821	0					
ANR	799196	ReturnStatement	return ret ;	3053:3:77966:77976	795821	15	True				
ANR	799197	Identifier	ret		795821	0					
ANR	799198	Label	escape_backtick :	3056:0:77985:78000	795821	43	True				
ANR	799199	Identifier	escape_backtick		795821	0					
ANR	799200	IfStatement	"if ( * cmd != '""' && * cmd )"		795821	44					
ANR	799201	Condition	"* cmd != '""' && * cmd"	3058:5:78035:78053	795821	0	True				
ANR	799202	AndExpression	"* cmd != '""' && * cmd"		795821	0		&&			
ANR	799203	EqualityExpression	"* cmd != '""'"		795821	0		!=			
ANR	799204	UnaryOperationExpression	* cmd		795821	0					
ANR	799205	UnaryOperator	*		795821	0					
ANR	799206	Identifier	cmd		795821	1					
ANR	799207	PrimaryExpression	"'""'"		795821	1					
ANR	799208	UnaryOperationExpression	* cmd		795821	1					
ANR	799209	UnaryOperator	*		795821	0					
ANR	799210	Identifier	cmd		795821	1					
ANR	799211	CompoundStatement		554:2:13409:13443	795821	1					
ANR	799212	IdentifierDeclStatement	"const char * s = strstr ( cmd , ""~?"" ) ;"	3059:2:78060:78094	795821	0	True				
ANR	799213	IdentifierDecl	"* s = strstr ( cmd , ""~?"" )"		795821	0					
ANR	799214	IdentifierDeclType	const char *		795821	0					
ANR	799215	Identifier	s		795821	1					
ANR	799216	AssignmentExpression	"* s = strstr ( cmd , ""~?"" )"		795821	2		=			
ANR	799217	Identifier	s		795821	0					
ANR	799218	CallExpression	"strstr ( cmd , ""~?"" )"		795821	1					
ANR	799219	Callee	strstr		795821	0					
ANR	799220	Identifier	strstr		795821	0					
ANR	799221	ArgumentList	cmd		795821	1					
ANR	799222	Argument	cmd		795821	0					
ANR	799223	Identifier	cmd		795821	0					
ANR	799224	Argument	"""~?"""		795821	1					
ANR	799225	PrimaryExpression	"""~?"""		795821	0					
ANR	799226	IfStatement	if ( s )		795821	1					
ANR	799227	Condition	s	3060:6:78102:78102	795821	0	True				
ANR	799228	Identifier	s		795821	0					
ANR	799229	CompoundStatement		556:3:13459:13480	795821	1					
ANR	799230	IdentifierDeclStatement	bool showHelp = false ;	3061:3:78110:78131	795821	0	True				
ANR	799231	IdentifierDecl	showHelp = false		795821	0					
ANR	799232	IdentifierDeclType	bool		795821	0					
ANR	799233	Identifier	showHelp		795821	1					
ANR	799234	AssignmentExpression	showHelp = false		795821	2		=			
ANR	799235	Identifier	false		795821	0					
ANR	799236	Identifier	false		795821	1					
ANR	799237	IfStatement	if ( cmd == s )		795821	1					
ANR	799238	Condition	cmd == s	3062:7:78140:78147	795821	0	True				
ANR	799239	EqualityExpression	cmd == s		795821	0		==			
ANR	799240	Identifier	cmd		795821	0					
ANR	799241	Identifier	s		795821	1					
ANR	799242	CompoundStatement		557:17:13499:13499	795821	1					
ANR	799243	ExpressionStatement	showHelp = true	3065:4:78177:78192	795821	0	True				
ANR	799244	AssignmentExpression	showHelp = true		795821	0		=			
ANR	799245	Identifier	showHelp		795821	0					
ANR	799246	Identifier	true		795821	1					
ANR	799247	ElseStatement	else		795821	0					
ANR	799248	CompoundStatement		561:10:13553:13553	795821	0					
ANR	799249	IfStatement	"if ( ! strcmp ( s , ""~??"" ) )"		795821	0					
ANR	799250	Condition	"! strcmp ( s , ""~??"" )"	3069:8:78239:78256	795821	0	True				
ANR	799251	UnaryOperationExpression	"! strcmp ( s , ""~??"" )"		795821	0					
ANR	799252	UnaryOperator	!		795821	0					
ANR	799253	CallExpression	"strcmp ( s , ""~??"" )"		795821	1					
ANR	799254	Callee	strcmp		795821	0					
ANR	799255	Identifier	strcmp		795821	0					
ANR	799256	ArgumentList	s		795821	1					
ANR	799257	Argument	s		795821	0					
ANR	799258	Identifier	s		795821	0					
ANR	799259	Argument	"""~??"""		795821	1					
ANR	799260	PrimaryExpression	"""~??"""		795821	0					
ANR	799261	CompoundStatement		564:28:13608:13608	795821	1					
ANR	799262	ExpressionStatement	showHelp = true	3070:5:78266:78281	795821	0	True				
ANR	799263	AssignmentExpression	showHelp = true		795821	0		=			
ANR	799264	Identifier	showHelp		795821	0					
ANR	799265	Identifier	true		795821	1					
ANR	799266	IfStatement	if ( showHelp )		795821	2					
ANR	799267	Condition	showHelp	3073:7:78301:78308	795821	0	True				
ANR	799268	Identifier	showHelp		795821	0					
ANR	799269	CompoundStatement		568:17:13660:13660	795821	1					
ANR	799270	ExpressionStatement	r_cons_grep_help ( )	3074:4:78317:78336	795821	0	True				
ANR	799271	CallExpression	r_cons_grep_help ( )		795821	0					
ANR	799272	Callee	r_cons_grep_help		795821	0					
ANR	799273	Identifier	r_cons_grep_help		795821	0					
ANR	799274	ArgumentList			795821	1					
ANR	799275	ExpressionStatement	r_list_free ( tmpenvs )	3075:4:78342:78363	795821	1	True				
ANR	799276	CallExpression	r_list_free ( tmpenvs )		795821	0					
ANR	799277	Callee	r_list_free		795821	0					
ANR	799278	Identifier	r_list_free		795821	0					
ANR	799279	ArgumentList	tmpenvs		795821	1					
ANR	799280	Argument	tmpenvs		795821	0					
ANR	799281	Identifier	tmpenvs		795821	0					
ANR	799282	ReturnStatement	return true ;	3076:4:78369:78380	795821	2	True				
ANR	799283	Identifier	true		795821	0					
ANR	799284	IfStatement	if ( * cmd != '.' )		795821	45					
ANR	799285	Condition	* cmd != '.'	3080:5:78399:78409	795821	0	True				
ANR	799286	EqualityExpression	* cmd != '.'		795821	0		!=			
ANR	799287	UnaryOperationExpression	* cmd		795821	0					
ANR	799288	UnaryOperator	*		795821	0					
ANR	799289	Identifier	cmd		795821	1					
ANR	799290	PrimaryExpression	'.'		795821	1					
ANR	799291	CompoundStatement		575:18:13761:13761	795821	1					
ANR	799292	ExpressionStatement	"grep = r_cons_grep_strip ( cmd , quotestr )"	3081:2:78416:78456	795821	0	True				
ANR	799293	AssignmentExpression	"grep = r_cons_grep_strip ( cmd , quotestr )"		795821	0		=			
ANR	799294	Identifier	grep		795821	0					
ANR	799295	CallExpression	"r_cons_grep_strip ( cmd , quotestr )"		795821	1					
ANR	799296	Callee	r_cons_grep_strip		795821	0					
ANR	799297	Identifier	r_cons_grep_strip		795821	0					
ANR	799298	ArgumentList	cmd		795821	1					
ANR	799299	Argument	cmd		795821	0					
ANR	799300	Identifier	cmd		795821	0					
ANR	799301	Argument	quotestr		795821	1					
ANR	799302	Identifier	quotestr		795821	0					
ANR	799303	IfStatement	"if ( * cmd != '""' )"		795821	46					
ANR	799304	Condition	"* cmd != '""'"	3086:5:78536:78546	795821	0	True				
ANR	799305	EqualityExpression	"* cmd != '""'"		795821	0		!=			
ANR	799306	UnaryOperationExpression	* cmd		795821	0					
ANR	799307	UnaryOperator	*		795821	0					
ANR	799308	Identifier	cmd		795821	1					
ANR	799309	PrimaryExpression	"'""'"		795821	1					
ANR	799310	CompoundStatement		581:18:13898:13898	795821	1					
ANR	799311	ExpressionStatement	"ptr = strchr ( cmd , '@' )"	3087:2:78553:78576	795821	0	True				
ANR	799312	AssignmentExpression	"ptr = strchr ( cmd , '@' )"		795821	0		=			
ANR	799313	Identifier	ptr		795821	0					
ANR	799314	CallExpression	"strchr ( cmd , '@' )"		795821	1					
ANR	799315	Callee	strchr		795821	0					
ANR	799316	Identifier	strchr		795821	0					
ANR	799317	ArgumentList	cmd		795821	1					
ANR	799318	Argument	cmd		795821	0					
ANR	799319	Identifier	cmd		795821	0					
ANR	799320	Argument	'@'		795821	1					
ANR	799321	PrimaryExpression	'@'		795821	0					
ANR	799322	IfStatement	if ( ptr == cmd + 1 && * cmd == '?' )		795821	1					
ANR	799323	Condition	ptr == cmd + 1 && * cmd == '?'	3088:6:78584:78612	795821	0	True				
ANR	799324	AndExpression	ptr == cmd + 1 && * cmd == '?'		795821	0		&&			
ANR	799325	EqualityExpression	ptr == cmd + 1		795821	0		==			
ANR	799326	Identifier	ptr		795821	0					
ANR	799327	AdditiveExpression	cmd + 1		795821	1		+			
ANR	799328	Identifier	cmd		795821	0					
ANR	799329	PrimaryExpression	1		795821	1					
ANR	799330	EqualityExpression	* cmd == '?'		795821	1		==			
ANR	799331	UnaryOperationExpression	* cmd		795821	0					
ANR	799332	UnaryOperator	*		795821	0					
ANR	799333	Identifier	cmd		795821	1					
ANR	799334	PrimaryExpression	'?'		795821	1					
ANR	799335	CompoundStatement		583:37:13964:13964	795821	1					
ANR	799336	ExpressionStatement	ptr = NULL	3089:3:78620:78630	795821	0	True				
ANR	799337	AssignmentExpression	ptr = NULL		795821	0		=			
ANR	799338	Identifier	ptr		795821	0					
ANR	799339	Identifier	NULL		795821	1					
ANR	799340	ElseStatement	else		795821	0					
ANR	799341	CompoundStatement		586:8:13993:13993	795821	0					
ANR	799342	ExpressionStatement	ptr = NULL	3092:2:78648:78658	795821	0	True				
ANR	799343	AssignmentExpression	ptr = NULL		795821	0		=			
ANR	799344	Identifier	ptr		795821	0					
ANR	799345	Identifier	NULL		795821	1					
ANR	799346	ExpressionStatement	cmd_tmpseek = core -> tmpseek = ptr ? true : false	3095:1:78665:78712	795821	47	True				
ANR	799347	AssignmentExpression	cmd_tmpseek = core -> tmpseek = ptr ? true : false		795821	0		=			
ANR	799348	Identifier	cmd_tmpseek		795821	0					
ANR	799349	AssignmentExpression	core -> tmpseek = ptr ? true : false		795821	1		=			
ANR	799350	PtrMemberAccess	core -> tmpseek		795821	0					
ANR	799351	Identifier	core		795821	0					
ANR	799352	Identifier	tmpseek		795821	1					
ANR	799353	ConditionalExpression	ptr ? true : false		795821	1					
ANR	799354	Condition	ptr		795821	0					
ANR	799355	Identifier	ptr		795821	0					
ANR	799356	Identifier	true		795821	1					
ANR	799357	Identifier	false		795821	2					
ANR	799358	IdentifierDeclStatement	int rc = 0 ;	3096:1:78715:78725	795821	48	True				
ANR	799359	IdentifierDecl	rc = 0		795821	0					
ANR	799360	IdentifierDeclType	int		795821	0					
ANR	799361	Identifier	rc		795821	1					
ANR	799362	AssignmentExpression	rc = 0		795821	2		=			
ANR	799363	Identifier	rc		795821	0					
ANR	799364	PrimaryExpression	0		795821	1					
ANR	799365	IfStatement	if ( ptr )		795821	49					
ANR	799366	Condition	ptr	3097:5:78732:78734	795821	0	True				
ANR	799367	Identifier	ptr		795821	0					
ANR	799368	CompoundStatement		605:2:14408:14416	795821	1					
ANR	799369	IdentifierDeclStatement	"char * f , * ptr2 = strchr ( ptr + 1 , '!' ) ;"	3098:2:78741:78779	795821	0	True				
ANR	799370	IdentifierDecl	* f		795821	0					
ANR	799371	IdentifierDeclType	char *		795821	0					
ANR	799372	Identifier	f		795821	1					
ANR	799373	IdentifierDecl	"* ptr2 = strchr ( ptr + 1 , '!' )"		795821	1					
ANR	799374	IdentifierDeclType	char *		795821	0					
ANR	799375	Identifier	ptr2		795821	1					
ANR	799376	AssignmentExpression	"* ptr2 = strchr ( ptr + 1 , '!' )"		795821	2		=			
ANR	799377	Identifier	ptr2		795821	0					
ANR	799378	CallExpression	"strchr ( ptr + 1 , '!' )"		795821	1					
ANR	799379	Callee	strchr		795821	0					
ANR	799380	Identifier	strchr		795821	0					
ANR	799381	ArgumentList	ptr + 1		795821	1					
ANR	799382	Argument	ptr + 1		795821	0					
ANR	799383	AdditiveExpression	ptr + 1		795821	0		+			
ANR	799384	Identifier	ptr		795821	0					
ANR	799385	PrimaryExpression	1		795821	1					
ANR	799386	Argument	'!'		795821	1					
ANR	799387	PrimaryExpression	'!'		795821	0					
ANR	799388	IdentifierDeclStatement	ut64 addr = core -> offset ;	3099:2:78783:78807	795821	1	True				
ANR	799389	IdentifierDecl	addr = core -> offset		795821	0					
ANR	799390	IdentifierDeclType	ut64		795821	0					
ANR	799391	Identifier	addr		795821	1					
ANR	799392	AssignmentExpression	addr = core -> offset		795821	2		=			
ANR	799393	Identifier	addr		795821	0					
ANR	799394	PtrMemberAccess	core -> offset		795821	1					
ANR	799395	Identifier	core		795821	0					
ANR	799396	Identifier	offset		795821	1					
ANR	799397	IdentifierDeclStatement	bool addr_is_set = false ;	3100:2:78811:78835	795821	2	True				
ANR	799398	IdentifierDecl	addr_is_set = false		795821	0					
ANR	799399	IdentifierDeclType	bool		795821	0					
ANR	799400	Identifier	addr_is_set		795821	1					
ANR	799401	AssignmentExpression	addr_is_set = false		795821	2		=			
ANR	799402	Identifier	false		795821	0					
ANR	799403	Identifier	false		795821	1					
ANR	799404	IdentifierDeclStatement	char * tmpbits = NULL ;	3101:2:78839:78859	795821	3	True				
ANR	799405	IdentifierDecl	* tmpbits = NULL		795821	0					
ANR	799406	IdentifierDeclType	char *		795821	0					
ANR	799407	Identifier	tmpbits		795821	1					
ANR	799408	AssignmentExpression	* tmpbits = NULL		795821	2		=			
ANR	799409	Identifier	NULL		795821	0					
ANR	799410	Identifier	NULL		795821	1					
ANR	799411	IdentifierDeclStatement	const char * offstr = NULL ;	3102:2:78863:78888	795821	4	True				
ANR	799412	IdentifierDecl	* offstr = NULL		795821	0					
ANR	799413	IdentifierDeclType	const char *		795821	0					
ANR	799414	Identifier	offstr		795821	1					
ANR	799415	AssignmentExpression	* offstr = NULL		795821	2		=			
ANR	799416	Identifier	NULL		795821	0					
ANR	799417	Identifier	NULL		795821	1					
ANR	799418	IdentifierDeclStatement	bool is_bits_set = false ;	3103:2:78892:78916	795821	5	True				
ANR	799419	IdentifierDecl	is_bits_set = false		795821	0					
ANR	799420	IdentifierDeclType	bool		795821	0					
ANR	799421	Identifier	is_bits_set		795821	1					
ANR	799422	AssignmentExpression	is_bits_set = false		795821	2		=			
ANR	799423	Identifier	false		795821	0					
ANR	799424	Identifier	false		795821	1					
ANR	799425	IdentifierDeclStatement	bool is_arch_set = false ;	3104:2:78920:78944	795821	6	True				
ANR	799426	IdentifierDecl	is_arch_set = false		795821	0					
ANR	799427	IdentifierDeclType	bool		795821	0					
ANR	799428	Identifier	is_arch_set		795821	1					
ANR	799429	AssignmentExpression	is_arch_set = false		795821	2		=			
ANR	799430	Identifier	false		795821	0					
ANR	799431	Identifier	false		795821	1					
ANR	799432	IdentifierDeclStatement	char * tmpeval = NULL ;	3105:2:78948:78968	795821	7	True				
ANR	799433	IdentifierDecl	* tmpeval = NULL		795821	0					
ANR	799434	IdentifierDeclType	char *		795821	0					
ANR	799435	Identifier	tmpeval		795821	1					
ANR	799436	AssignmentExpression	* tmpeval = NULL		795821	2		=			
ANR	799437	Identifier	NULL		795821	0					
ANR	799438	Identifier	NULL		795821	1					
ANR	799439	IdentifierDeclStatement	char * tmpasm = NULL ;	3106:2:78972:78991	795821	8	True				
ANR	799440	IdentifierDecl	* tmpasm = NULL		795821	0					
ANR	799441	IdentifierDeclType	char *		795821	0					
ANR	799442	Identifier	tmpasm		795821	1					
ANR	799443	AssignmentExpression	* tmpasm = NULL		795821	2		=			
ANR	799444	Identifier	NULL		795821	0					
ANR	799445	Identifier	NULL		795821	1					
ANR	799446	IdentifierDeclStatement	bool flgspc_changed = false ;	3107:2:78995:79022	795821	9	True				
ANR	799447	IdentifierDecl	flgspc_changed = false		795821	0					
ANR	799448	IdentifierDeclType	bool		795821	0					
ANR	799449	Identifier	flgspc_changed		795821	1					
ANR	799450	AssignmentExpression	flgspc_changed = false		795821	2		=			
ANR	799451	Identifier	false		795821	0					
ANR	799452	Identifier	false		795821	1					
ANR	799453	IdentifierDeclStatement	int tmpfd = - 1 ;	3108:2:79026:79040	795821	10	True				
ANR	799454	IdentifierDecl	tmpfd = - 1		795821	0					
ANR	799455	IdentifierDeclType	int		795821	0					
ANR	799456	Identifier	tmpfd		795821	1					
ANR	799457	AssignmentExpression	tmpfd = - 1		795821	2		=			
ANR	799458	Identifier	tmpfd		795821	0					
ANR	799459	UnaryOperationExpression	- 1		795821	1					
ANR	799460	UnaryOperator	-		795821	0					
ANR	799461	PrimaryExpression	1		795821	1					
ANR	799462	IdentifierDeclStatement	"int sz , len ;"	3109:2:79044:79055	795821	11	True				
ANR	799463	IdentifierDecl	sz		795821	0					
ANR	799464	IdentifierDeclType	int		795821	0					
ANR	799465	Identifier	sz		795821	1					
ANR	799466	IdentifierDecl	len		795821	1					
ANR	799467	IdentifierDeclType	int		795821	0					
ANR	799468	Identifier	len		795821	1					
ANR	799469	IdentifierDeclStatement	ut8 * buf ;	3110:2:79059:79067	795821	12	True				
ANR	799470	IdentifierDecl	* buf		795821	0					
ANR	799471	IdentifierDeclType	ut8 *		795821	0					
ANR	799472	Identifier	buf		795821	1					
ANR	799473	ExpressionStatement	* ptr ++ = '\\0'	3112:2:79072:79085	795821	13	True				
ANR	799474	AssignmentExpression	* ptr ++ = '\\0'		795821	0		=			
ANR	799475	UnaryOperationExpression	* ptr ++		795821	0					
ANR	799476	UnaryOperator	*		795821	0					
ANR	799477	PostIncDecOperationExpression	ptr ++		795821	1					
ANR	799478	Identifier	ptr		795821	0					
ANR	799479	IncDec	++		795821	1					
ANR	799480	PrimaryExpression	'\\0'		795821	1					
ANR	799481	Label	repeat_arroba :	3113:0:79087:79100	795821	14	True				
ANR	799482	Identifier	repeat_arroba		795821	0					
ANR	799483	ExpressionStatement	"arroba = ( ptr [ 0 ] && ptr [ 1 ] && ptr [ 2 ] ) ? strchr ( ptr + 2 , '@' ) : NULL"	3114:2:79104:79175	795821	15	True				
ANR	799484	AssignmentExpression	"arroba = ( ptr [ 0 ] && ptr [ 1 ] && ptr [ 2 ] ) ? strchr ( ptr + 2 , '@' ) : NULL"		795821	0		=			
ANR	799485	Identifier	arroba		795821	0					
ANR	799486	ConditionalExpression	"( ptr [ 0 ] && ptr [ 1 ] && ptr [ 2 ] ) ? strchr ( ptr + 2 , '@' ) : NULL"		795821	1					
ANR	799487	Condition	ptr [ 0 ] && ptr [ 1 ] && ptr [ 2 ]		795821	0					
ANR	799488	AndExpression	ptr [ 0 ] && ptr [ 1 ] && ptr [ 2 ]		795821	0		&&			
ANR	799489	ArrayIndexing	ptr [ 0 ]		795821	0					
ANR	799490	Identifier	ptr		795821	0					
ANR	799491	PrimaryExpression	0		795821	1					
ANR	799492	AndExpression	ptr [ 1 ] && ptr [ 2 ]		795821	1		&&			
ANR	799493	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	799494	Identifier	ptr		795821	0					
ANR	799495	PrimaryExpression	1		795821	1					
ANR	799496	ArrayIndexing	ptr [ 2 ]		795821	1					
ANR	799497	Identifier	ptr		795821	0					
ANR	799498	PrimaryExpression	2		795821	1					
ANR	799499	CallExpression	"strchr ( ptr + 2 , '@' )"		795821	1					
ANR	799500	Callee	strchr		795821	0					
ANR	799501	Identifier	strchr		795821	0					
ANR	799502	ArgumentList	ptr + 2		795821	1					
ANR	799503	Argument	ptr + 2		795821	0					
ANR	799504	AdditiveExpression	ptr + 2		795821	0		+			
ANR	799505	Identifier	ptr		795821	0					
ANR	799506	PrimaryExpression	2		795821	1					
ANR	799507	Argument	'@'		795821	1					
ANR	799508	PrimaryExpression	'@'		795821	0					
ANR	799509	Identifier	NULL		795821	2					
ANR	799510	IfStatement	if ( arroba )		795821	16					
ANR	799511	Condition	arroba	3116:6:79183:79188	795821	0	True				
ANR	799512	Identifier	arroba		795821	0					
ANR	799513	CompoundStatement		611:14:14540:14540	795821	1					
ANR	799514	ExpressionStatement	* arroba = 0	3117:3:79196:79207	795821	0	True				
ANR	799515	AssignmentExpression	* arroba = 0		795821	0		=			
ANR	799516	UnaryOperationExpression	* arroba		795821	0					
ANR	799517	UnaryOperator	*		795821	0					
ANR	799518	Identifier	arroba		795821	1					
ANR	799519	PrimaryExpression	0		795821	1					
ANR	799520	ForStatement	for ( ; * ptr == ' ' ; ptr ++ )		795821	17					
ANR	799521	Condition	* ptr == ' '	3120:9:79223:79233	795821	0	True				
ANR	799522	EqualityExpression	* ptr == ' '		795821	0		==			
ANR	799523	UnaryOperationExpression	* ptr		795821	0					
ANR	799524	UnaryOperator	*		795821	0					
ANR	799525	Identifier	ptr		795821	1					
ANR	799526	PrimaryExpression	' '		795821	1					
ANR	799527	PostIncDecOperationExpression	ptr ++	3120:22:79236:79240	795821	1	True				
ANR	799528	Identifier	ptr		795821	0					
ANR	799529	IncDec	++		795821	1					
ANR	799530	CompoundStatement		615:29:14592:14592	795821	2					
ANR	799531	IfStatement	if ( * ptr && ptr [ 1 ] == ':' )		795821	18					
ANR	799532	Condition	* ptr && ptr [ 1 ] == ':'	3123:6:79280:79300	795821	0	True				
ANR	799533	AndExpression	* ptr && ptr [ 1 ] == ':'		795821	0		&&			
ANR	799534	UnaryOperationExpression	* ptr		795821	0					
ANR	799535	UnaryOperator	*		795821	0					
ANR	799536	Identifier	ptr		795821	1					
ANR	799537	EqualityExpression	ptr [ 1 ] == ':'		795821	1		==			
ANR	799538	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	799539	Identifier	ptr		795821	0					
ANR	799540	PrimaryExpression	1		795821	1					
ANR	799541	PrimaryExpression	':'		795821	1					
ANR	799542	CompoundStatement		618:29:14652:14652	795821	1					
ANR	799543	ElseStatement	else		795821	0					
ANR	799544	CompoundStatement		620:9:14688:14688	795821	0					
ANR	799545	ExpressionStatement	ptr --	3126:3:79344:79349	795821	0	True				
ANR	799546	PostIncDecOperationExpression	ptr --		795821	0					
ANR	799547	Identifier	ptr		795821	0					
ANR	799548	IncDec	--		795821	1					
ANR	799549	ExpressionStatement	ptr = r_str_trim_tail ( ptr )	3129:2:79358:79385	795821	19	True				
ANR	799550	AssignmentExpression	ptr = r_str_trim_tail ( ptr )		795821	0		=			
ANR	799551	Identifier	ptr		795821	0					
ANR	799552	CallExpression	r_str_trim_tail ( ptr )		795821	1					
ANR	799553	Callee	r_str_trim_tail		795821	0					
ANR	799554	Identifier	r_str_trim_tail		795821	0					
ANR	799555	ArgumentList	ptr		795821	1					
ANR	799556	Argument	ptr		795821	0					
ANR	799557	Identifier	ptr		795821	0					
ANR	799558	IfStatement	if ( ptr [ 1 ] == '?' )		795821	20					
ANR	799559	Condition	ptr [ 1 ] == '?'	3131:6:79394:79406	795821	0	True				
ANR	799560	EqualityExpression	ptr [ 1 ] == '?'		795821	0		==			
ANR	799561	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	799562	Identifier	ptr		795821	0					
ANR	799563	PrimaryExpression	1		795821	1					
ANR	799564	PrimaryExpression	'?'		795821	1					
ANR	799565	CompoundStatement		626:21:14758:14758	795821	1					
ANR	799566	ExpressionStatement	"r_core_cmd_help ( core , help_msg_at )"	3132:3:79414:79449	795821	0	True				
ANR	799567	CallExpression	"r_core_cmd_help ( core , help_msg_at )"		795821	0					
ANR	799568	Callee	r_core_cmd_help		795821	0					
ANR	799569	Identifier	r_core_cmd_help		795821	0					
ANR	799570	ArgumentList	core		795821	1					
ANR	799571	Argument	core		795821	0					
ANR	799572	Identifier	core		795821	0					
ANR	799573	Argument	help_msg_at		795821	1					
ANR	799574	Identifier	help_msg_at		795821	0					
ANR	799575	ElseStatement	else		795821	0					
ANR	799576	IfStatement	if ( ptr [ 1 ] == '%' )		795821	0					
ANR	799577	Condition	ptr [ 1 ] == '%'	3133:13:79464:79476	795821	0	True				
ANR	799578	EqualityExpression	ptr [ 1 ] == '%'		795821	0		==			
ANR	799579	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	799580	Identifier	ptr		795821	0					
ANR	799581	PrimaryExpression	1		795821	1					
ANR	799582	PrimaryExpression	'%'		795821	1					
ANR	799583	CompoundStatement		630:3:14872:14897	795821	1					
ANR	799584	IdentifierDeclStatement	char * k = strdup ( ptr + 2 ) ;	3134:3:79492:79518	795821	0	True				
ANR	799585	IdentifierDecl	* k = strdup ( ptr + 2 )		795821	0					
ANR	799586	IdentifierDeclType	char *		795821	0					
ANR	799587	Identifier	k		795821	1					
ANR	799588	AssignmentExpression	* k = strdup ( ptr + 2 )		795821	2		=			
ANR	799589	Identifier	k		795821	0					
ANR	799590	CallExpression	strdup ( ptr + 2 )		795821	1					
ANR	799591	Callee	strdup		795821	0					
ANR	799592	Identifier	strdup		795821	0					
ANR	799593	ArgumentList	ptr + 2		795821	1					
ANR	799594	Argument	ptr + 2		795821	0					
ANR	799595	AdditiveExpression	ptr + 2		795821	0		+			
ANR	799596	Identifier	ptr		795821	0					
ANR	799597	PrimaryExpression	2		795821	1					
ANR	799598	IdentifierDeclStatement	"char * v = strchr ( k , '=' ) ;"	3135:3:79523:79548	795821	1	True				
ANR	799599	IdentifierDecl	"* v = strchr ( k , '=' )"		795821	0					
ANR	799600	IdentifierDeclType	char *		795821	0					
ANR	799601	Identifier	v		795821	1					
ANR	799602	AssignmentExpression	"* v = strchr ( k , '=' )"		795821	2		=			
ANR	799603	Identifier	v		795821	0					
ANR	799604	CallExpression	"strchr ( k , '=' )"		795821	1					
ANR	799605	Callee	strchr		795821	0					
ANR	799606	Identifier	strchr		795821	0					
ANR	799607	ArgumentList	k		795821	1					
ANR	799608	Argument	k		795821	0					
ANR	799609	Identifier	k		795821	0					
ANR	799610	Argument	'='		795821	1					
ANR	799611	PrimaryExpression	'='		795821	0					
ANR	799612	IfStatement	if ( v )		795821	2					
ANR	799613	Condition	v	3136:7:79557:79557	795821	0	True				
ANR	799614	Identifier	v		795821	0					
ANR	799615	CompoundStatement		631:10:14909:14909	795821	1					
ANR	799616	ExpressionStatement	* v ++ = 0	3137:4:79566:79574	795821	0	True				
ANR	799617	AssignmentExpression	* v ++ = 0		795821	0		=			
ANR	799618	UnaryOperationExpression	* v ++		795821	0					
ANR	799619	UnaryOperator	*		795821	0					
ANR	799620	PostIncDecOperationExpression	v ++		795821	1					
ANR	799621	Identifier	v		795821	0					
ANR	799622	IncDec	++		795821	1					
ANR	799623	PrimaryExpression	0		795821	1					
ANR	799624	ExpressionStatement	"r_sys_setenv ( k , v )"	3138:4:79580:79599	795821	1	True				
ANR	799625	CallExpression	"r_sys_setenv ( k , v )"		795821	0					
ANR	799626	Callee	r_sys_setenv		795821	0					
ANR	799627	Identifier	r_sys_setenv		795821	0					
ANR	799628	ArgumentList	k		795821	1					
ANR	799629	Argument	k		795821	0					
ANR	799630	Identifier	k		795821	0					
ANR	799631	Argument	v		795821	1					
ANR	799632	Identifier	v		795821	0					
ANR	799633	ExpressionStatement	"r_list_append ( tmpenvs , k )"	3139:4:79605:79631	795821	2	True				
ANR	799634	CallExpression	"r_list_append ( tmpenvs , k )"		795821	0					
ANR	799635	Callee	r_list_append		795821	0					
ANR	799636	Identifier	r_list_append		795821	0					
ANR	799637	ArgumentList	tmpenvs		795821	1					
ANR	799638	Argument	tmpenvs		795821	0					
ANR	799639	Identifier	tmpenvs		795821	0					
ANR	799640	Argument	k		795821	1					
ANR	799641	Identifier	k		795821	0					
ANR	799642	ElseStatement	else		795821	0					
ANR	799643	CompoundStatement		635:10:14992:14992	795821	0					
ANR	799644	ExpressionStatement	free ( k )	3141:4:79649:79657	795821	0	True				
ANR	799645	CallExpression	free ( k )		795821	0					
ANR	799646	Callee	free		795821	0					
ANR	799647	Identifier	free		795821	0					
ANR	799648	ArgumentList	k		795821	1					
ANR	799649	Argument	k		795821	0					
ANR	799650	Identifier	k		795821	0					
ANR	799651	ElseStatement	else		795821	0					
ANR	799652	IfStatement	if ( ptr [ 1 ] == '.' )		795821	0					
ANR	799653	Condition	ptr [ 1 ] == '.'	3143:13:79677:79689	795821	0	True				
ANR	799654	EqualityExpression	ptr [ 1 ] == '.'		795821	0		==			
ANR	799655	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	799656	Identifier	ptr		795821	0					
ANR	799657	PrimaryExpression	1		795821	1					
ANR	799658	PrimaryExpression	'.'		795821	1					
ANR	799659	CompoundStatement		638:28:15041:15041	795821	1					
ANR	799660	IfStatement	if ( ptr [ 2 ] == '.' )		795821	0					
ANR	799661	Condition	ptr [ 2 ] == '.'	3144:7:79709:79721	795821	0	True				
ANR	799662	EqualityExpression	ptr [ 2 ] == '.'		795821	0		==			
ANR	799663	ArrayIndexing	ptr [ 2 ]		795821	0					
ANR	799664	Identifier	ptr		795821	0					
ANR	799665	PrimaryExpression	2		795821	1					
ANR	799666	PrimaryExpression	'.'		795821	1					
ANR	799667	CompoundStatement		639:22:15073:15073	795821	1					
ANR	799668	IfStatement	if ( ptr [ 3 ] == '.' )		795821	0					
ANR	799669	Condition	ptr [ 3 ] == '.'	3145:8:79743:79755	795821	0	True				
ANR	799670	EqualityExpression	ptr [ 3 ] == '.'		795821	0		==			
ANR	799671	ArrayIndexing	ptr [ 3 ]		795821	0					
ANR	799672	Identifier	ptr		795821	0					
ANR	799673	PrimaryExpression	3		795821	1					
ANR	799674	PrimaryExpression	'.'		795821	1					
ANR	799675	CompoundStatement		641:5:15124:15181	795821	1					
ANR	799676	IdentifierDeclStatement	"ut64 addr = r_num_tail ( core -> num , core -> offset , ptr + 4 ) ;"	3146:5:79775:79832	795821	0	True				
ANR	799677	IdentifierDecl	"addr = r_num_tail ( core -> num , core -> offset , ptr + 4 )"		795821	0					
ANR	799678	IdentifierDeclType	ut64		795821	0					
ANR	799679	Identifier	addr		795821	1					
ANR	799680	AssignmentExpression	"addr = r_num_tail ( core -> num , core -> offset , ptr + 4 )"		795821	2		=			
ANR	799681	Identifier	addr		795821	0					
ANR	799682	CallExpression	"r_num_tail ( core -> num , core -> offset , ptr + 4 )"		795821	1					
ANR	799683	Callee	r_num_tail		795821	0					
ANR	799684	Identifier	r_num_tail		795821	0					
ANR	799685	ArgumentList	core -> num		795821	1					
ANR	799686	Argument	core -> num		795821	0					
ANR	799687	PtrMemberAccess	core -> num		795821	0					
ANR	799688	Identifier	core		795821	0					
ANR	799689	Identifier	num		795821	1					
ANR	799690	Argument	core -> offset		795821	1					
ANR	799691	PtrMemberAccess	core -> offset		795821	0					
ANR	799692	Identifier	core		795821	0					
ANR	799693	Identifier	offset		795821	1					
ANR	799694	Argument	ptr + 4		795821	2					
ANR	799695	AdditiveExpression	ptr + 4		795821	0		+			
ANR	799696	Identifier	ptr		795821	0					
ANR	799697	PrimaryExpression	4		795821	1					
ANR	799698	ExpressionStatement	"r_core_block_size ( core , R_ABS ( ( st64 ) addr - ( st64 ) core -> offset ) )"	3147:5:79839:79904	795821	1	True				
ANR	799699	CallExpression	"r_core_block_size ( core , R_ABS ( ( st64 ) addr - ( st64 ) core -> offset ) )"		795821	0					
ANR	799700	Callee	r_core_block_size		795821	0					
ANR	799701	Identifier	r_core_block_size		795821	0					
ANR	799702	ArgumentList	core		795821	1					
ANR	799703	Argument	core		795821	0					
ANR	799704	Identifier	core		795821	0					
ANR	799705	Argument	R_ABS ( ( st64 ) addr - ( st64 ) core -> offset )		795821	1					
ANR	799706	CallExpression	R_ABS ( ( st64 ) addr - ( st64 ) core -> offset )		795821	0					
ANR	799707	Callee	R_ABS		795821	0					
ANR	799708	Identifier	R_ABS		795821	0					
ANR	799709	ArgumentList	( st64 ) addr - ( st64 ) core -> offset		795821	1					
ANR	799710	Argument	( st64 ) addr - ( st64 ) core -> offset		795821	0					
ANR	799711	AdditiveExpression	( st64 ) addr - ( st64 ) core -> offset		795821	0		-			
ANR	799712	CastExpression	( st64 ) addr		795821	0					
ANR	799713	CastTarget	st64		795821	0					
ANR	799714	Identifier	addr		795821	1					
ANR	799715	CastExpression	( st64 ) core -> offset		795821	1					
ANR	799716	CastTarget	st64		795821	0					
ANR	799717	PtrMemberAccess	core -> offset		795821	1					
ANR	799718	Identifier	core		795821	0					
ANR	799719	Identifier	offset		795821	1					
ANR	799720	GotoStatement	goto fuji ;	3148:5:79911:79920	795821	2	True				
ANR	799721	Identifier	fuji		795821	0					
ANR	799722	ElseStatement	else		795821	0					
ANR	799723	CompoundStatement		644:11:15282:15282	795821	0					
ANR	799724	ExpressionStatement	"addr = r_num_tail ( core -> num , core -> offset , ptr + 3 )"	3150:5:79940:79992	795821	0	True				
ANR	799725	AssignmentExpression	"addr = r_num_tail ( core -> num , core -> offset , ptr + 3 )"		795821	0		=			
ANR	799726	Identifier	addr		795821	0					
ANR	799727	CallExpression	"r_num_tail ( core -> num , core -> offset , ptr + 3 )"		795821	1					
ANR	799728	Callee	r_num_tail		795821	0					
ANR	799729	Identifier	r_num_tail		795821	0					
ANR	799730	ArgumentList	core -> num		795821	1					
ANR	799731	Argument	core -> num		795821	0					
ANR	799732	PtrMemberAccess	core -> num		795821	0					
ANR	799733	Identifier	core		795821	0					
ANR	799734	Identifier	num		795821	1					
ANR	799735	Argument	core -> offset		795821	1					
ANR	799736	PtrMemberAccess	core -> offset		795821	0					
ANR	799737	Identifier	core		795821	0					
ANR	799738	Identifier	offset		795821	1					
ANR	799739	Argument	ptr + 3		795821	2					
ANR	799740	AdditiveExpression	ptr + 3		795821	0		+			
ANR	799741	Identifier	ptr		795821	0					
ANR	799742	PrimaryExpression	3		795821	1					
ANR	799743	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	3151:5:79999:80026	795821	1	True				
ANR	799744	CallExpression	"r_core_seek ( core , addr , 1 )"		795821	0					
ANR	799745	Callee	r_core_seek		795821	0					
ANR	799746	Identifier	r_core_seek		795821	0					
ANR	799747	ArgumentList	core		795821	1					
ANR	799748	Argument	core		795821	0					
ANR	799749	Identifier	core		795821	0					
ANR	799750	Argument	addr		795821	1					
ANR	799751	Identifier	addr		795821	0					
ANR	799752	Argument	1		795821	2					
ANR	799753	PrimaryExpression	1		795821	0					
ANR	799754	ExpressionStatement	cmd_tmpseek = core -> tmpseek = true	3152:5:80033:80067	795821	2	True				
ANR	799755	AssignmentExpression	cmd_tmpseek = core -> tmpseek = true		795821	0		=			
ANR	799756	Identifier	cmd_tmpseek		795821	0					
ANR	799757	AssignmentExpression	core -> tmpseek = true		795821	1		=			
ANR	799758	PtrMemberAccess	core -> tmpseek		795821	0					
ANR	799759	Identifier	core		795821	0					
ANR	799760	Identifier	tmpseek		795821	1					
ANR	799761	Identifier	true		795821	1					
ANR	799762	GotoStatement	goto fuji ;	3153:5:80074:80083	795821	3	True				
ANR	799763	Identifier	fuji		795821	0					
ANR	799764	ElseStatement	else		795821	0					
ANR	799765	CompoundStatement		650:10:15450:15450	795821	0					
ANR	799766	ExpressionStatement	"eprintf ( ""TODO: what do you expect for @. import offset from file maybe?\\n"" )"	3157:4:80121:80197	795821	0	True				
ANR	799767	CallExpression	"eprintf ( ""TODO: what do you expect for @. import offset from file maybe?\\n"" )"		795821	0					
ANR	799768	Callee	eprintf		795821	0					
ANR	799769	Identifier	eprintf		795821	0					
ANR	799770	ArgumentList	"""TODO: what do you expect for @. import offset from file maybe?\\n"""		795821	1					
ANR	799771	Argument	"""TODO: what do you expect for @. import offset from file maybe?\\n"""		795821	0					
ANR	799772	PrimaryExpression	"""TODO: what do you expect for @. import offset from file maybe?\\n"""		795821	0					
ANR	799773	ElseStatement	else		795821	0					
ANR	799774	IfStatement	if ( ptr [ 0 ] && ptr [ 1 ] == ':' && ptr [ 2 ] )		795821	0					
ANR	799775	Condition	ptr [ 0 ] && ptr [ 1 ] == ':' && ptr [ 2 ]	3159:13:80217:80249	795821	0	True				
ANR	799776	AndExpression	ptr [ 0 ] && ptr [ 1 ] == ':' && ptr [ 2 ]		795821	0		&&			
ANR	799777	ArrayIndexing	ptr [ 0 ]		795821	0					
ANR	799778	Identifier	ptr		795821	0					
ANR	799779	PrimaryExpression	0		795821	1					
ANR	799780	AndExpression	ptr [ 1 ] == ':' && ptr [ 2 ]		795821	1		&&			
ANR	799781	EqualityExpression	ptr [ 1 ] == ':'		795821	0		==			
ANR	799782	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	799783	Identifier	ptr		795821	0					
ANR	799784	PrimaryExpression	1		795821	1					
ANR	799785	PrimaryExpression	':'		795821	1					
ANR	799786	ArrayIndexing	ptr [ 2 ]		795821	1					
ANR	799787	Identifier	ptr		795821	0					
ANR	799788	PrimaryExpression	2		795821	1					
ANR	799789	CompoundStatement		857:3:21223:21243	795821	1					
ANR	799790	SwitchStatement	switch ( ptr [ 0 ] )		795821	0					
ANR	799791	Condition	ptr [ 0 ]	3160:11:80265:80270	795821	0	True				
ANR	799792	ArrayIndexing	ptr [ 0 ]		795821	0					
ANR	799793	Identifier	ptr		795821	0					
ANR	799794	PrimaryExpression	0		795821	1					
ANR	799795	CompoundStatement		655:19:15622:15622	795821	1					
ANR	799796	Label	case 'F' :	3161:3:80278:80286	795821	0	True				
ANR	799797	ExpressionStatement	"flgspc_changed = r_flag_space_push ( core -> flags , ptr + 2 )"	3162:4:80325:80382	795821	1	True				
ANR	799798	AssignmentExpression	"flgspc_changed = r_flag_space_push ( core -> flags , ptr + 2 )"		795821	0		=			
ANR	799799	Identifier	flgspc_changed		795821	0					
ANR	799800	CallExpression	"r_flag_space_push ( core -> flags , ptr + 2 )"		795821	1					
ANR	799801	Callee	r_flag_space_push		795821	0					
ANR	799802	Identifier	r_flag_space_push		795821	0					
ANR	799803	ArgumentList	core -> flags		795821	1					
ANR	799804	Argument	core -> flags		795821	0					
ANR	799805	PtrMemberAccess	core -> flags		795821	0					
ANR	799806	Identifier	core		795821	0					
ANR	799807	Identifier	flags		795821	1					
ANR	799808	Argument	ptr + 2		795821	1					
ANR	799809	AdditiveExpression	ptr + 2		795821	0		+			
ANR	799810	Identifier	ptr		795821	0					
ANR	799811	PrimaryExpression	2		795821	1					
ANR	799812	BreakStatement	break ;	3163:4:80388:80393	795821	2	True				
ANR	799813	Label	case 'B' :	3164:3:80398:80406	795821	3	True				
ANR	799814	CompoundStatement		662:5:15879:15944	795821	4					
ANR	799815	IdentifierDeclStatement	"int index = ( int ) r_num_math ( core -> num , ptr + 2 ) ;"	3166:5:80475:80523	795821	0	True				
ANR	799816	IdentifierDecl	"index = ( int ) r_num_math ( core -> num , ptr + 2 )"		795821	0					
ANR	799817	IdentifierDeclType	int		795821	0					
ANR	799818	Identifier	index		795821	1					
ANR	799819	AssignmentExpression	"index = ( int ) r_num_math ( core -> num , ptr + 2 )"		795821	2		=			
ANR	799820	Identifier	index		795821	0					
ANR	799821	CastExpression	"( int ) r_num_math ( core -> num , ptr + 2 )"		795821	1					
ANR	799822	CastTarget	int		795821	0					
ANR	799823	CallExpression	"r_num_math ( core -> num , ptr + 2 )"		795821	1					
ANR	799824	Callee	r_num_math		795821	0					
ANR	799825	Identifier	r_num_math		795821	0					
ANR	799826	ArgumentList	core -> num		795821	1					
ANR	799827	Argument	core -> num		795821	0					
ANR	799828	PtrMemberAccess	core -> num		795821	0					
ANR	799829	Identifier	core		795821	0					
ANR	799830	Identifier	num		795821	1					
ANR	799831	Argument	ptr + 2		795821	1					
ANR	799832	AdditiveExpression	ptr + 2		795821	0		+			
ANR	799833	Identifier	ptr		795821	0					
ANR	799834	PrimaryExpression	2		795821	1					
ANR	799835	IdentifierDeclStatement	"RAnalBlock * bb = r_anal_bb_from_offset ( core -> anal , core -> offset ) ;"	3167:5:80530:80595	795821	1	True				
ANR	799836	IdentifierDecl	"* bb = r_anal_bb_from_offset ( core -> anal , core -> offset )"		795821	0					
ANR	799837	IdentifierDeclType	RAnalBlock *		795821	0					
ANR	799838	Identifier	bb		795821	1					
ANR	799839	AssignmentExpression	"* bb = r_anal_bb_from_offset ( core -> anal , core -> offset )"		795821	2		=			
ANR	799840	Identifier	bb		795821	0					
ANR	799841	CallExpression	"r_anal_bb_from_offset ( core -> anal , core -> offset )"		795821	1					
ANR	799842	Callee	r_anal_bb_from_offset		795821	0					
ANR	799843	Identifier	r_anal_bb_from_offset		795821	0					
ANR	799844	ArgumentList	core -> anal		795821	1					
ANR	799845	Argument	core -> anal		795821	0					
ANR	799846	PtrMemberAccess	core -> anal		795821	0					
ANR	799847	Identifier	core		795821	0					
ANR	799848	Identifier	anal		795821	1					
ANR	799849	Argument	core -> offset		795821	1					
ANR	799850	PtrMemberAccess	core -> offset		795821	0					
ANR	799851	Identifier	core		795821	0					
ANR	799852	Identifier	offset		795821	1					
ANR	799853	IfStatement	if ( bb )		795821	2					
ANR	799854	Condition	bb	3168:9:80606:80607	795821	0	True				
ANR	799855	Identifier	bb		795821	0					
ANR	799856	CompoundStatement		663:13:15959:15959	795821	1					
ANR	799857	IfStatement	if ( index < 0 )		795821	0					
ANR	799858	Condition	index < 0	3170:10:80655:80663	795821	0	True				
ANR	799859	RelationalExpression	index < 0		795821	0		<			
ANR	799860	Identifier	index		795821	0					
ANR	799861	PrimaryExpression	0		795821	1					
ANR	799862	CompoundStatement		665:21:16015:16015	795821	1					
ANR	799863	ExpressionStatement	index = bb -> ninstr + index	3171:7:80675:80701	795821	0	True				
ANR	799864	AssignmentExpression	index = bb -> ninstr + index		795821	0		=			
ANR	799865	Identifier	index		795821	0					
ANR	799866	AdditiveExpression	bb -> ninstr + index		795821	1		+			
ANR	799867	PtrMemberAccess	bb -> ninstr		795821	0					
ANR	799868	Identifier	bb		795821	0					
ANR	799869	Identifier	ninstr		795821	1					
ANR	799870	Identifier	index		795821	1					
ANR	799871	IfStatement	if ( index >= 0 && index < bb -> ninstr )		795821	1					
ANR	799872	Condition	index >= 0 && index < bb -> ninstr	3174:10:80722:80753	795821	0	True				
ANR	799873	AndExpression	index >= 0 && index < bb -> ninstr		795821	0		&&			
ANR	799874	RelationalExpression	index >= 0		795821	0		>=			
ANR	799875	Identifier	index		795821	0					
ANR	799876	PrimaryExpression	0		795821	1					
ANR	799877	RelationalExpression	index < bb -> ninstr		795821	1		<			
ANR	799878	Identifier	index		795821	0					
ANR	799879	PtrMemberAccess	bb -> ninstr		795821	1					
ANR	799880	Identifier	bb		795821	0					
ANR	799881	Identifier	ninstr		795821	1					
ANR	799882	CompoundStatement		670:7:16114:16163	795821	1					
ANR	799883	IdentifierDeclStatement	"ut16 inst_off = r_anal_bb_offset_inst ( bb , index ) ;"	3175:7:80765:80814	795821	0	True				
ANR	799884	IdentifierDecl	"inst_off = r_anal_bb_offset_inst ( bb , index )"		795821	0					
ANR	799885	IdentifierDeclType	ut16		795821	0					
ANR	799886	Identifier	inst_off		795821	1					
ANR	799887	AssignmentExpression	"inst_off = r_anal_bb_offset_inst ( bb , index )"		795821	2		=			
ANR	799888	Identifier	inst_off		795821	0					
ANR	799889	CallExpression	"r_anal_bb_offset_inst ( bb , index )"		795821	1					
ANR	799890	Callee	r_anal_bb_offset_inst		795821	0					
ANR	799891	Identifier	r_anal_bb_offset_inst		795821	0					
ANR	799892	ArgumentList	bb		795821	1					
ANR	799893	Argument	bb		795821	0					
ANR	799894	Identifier	bb		795821	0					
ANR	799895	Argument	index		795821	1					
ANR	799896	Identifier	index		795821	0					
ANR	799897	ExpressionStatement	"r_core_seek ( core , bb -> addr + inst_off , 1 )"	3176:7:80823:80865	795821	1	True				
ANR	799898	CallExpression	"r_core_seek ( core , bb -> addr + inst_off , 1 )"		795821	0					
ANR	799899	Callee	r_core_seek		795821	0					
ANR	799900	Identifier	r_core_seek		795821	0					
ANR	799901	ArgumentList	core		795821	1					
ANR	799902	Argument	core		795821	0					
ANR	799903	Identifier	core		795821	0					
ANR	799904	Argument	bb -> addr + inst_off		795821	1					
ANR	799905	AdditiveExpression	bb -> addr + inst_off		795821	0		+			
ANR	799906	PtrMemberAccess	bb -> addr		795821	0					
ANR	799907	Identifier	bb		795821	0					
ANR	799908	Identifier	addr		795821	1					
ANR	799909	Identifier	inst_off		795821	1					
ANR	799910	Argument	1		795821	2					
ANR	799911	PrimaryExpression	1		795821	0					
ANR	799912	ExpressionStatement	cmd_tmpseek = core -> tmpseek = true	3177:7:80874:80908	795821	2	True				
ANR	799913	AssignmentExpression	cmd_tmpseek = core -> tmpseek = true		795821	0		=			
ANR	799914	Identifier	cmd_tmpseek		795821	0					
ANR	799915	AssignmentExpression	core -> tmpseek = true		795821	1		=			
ANR	799916	PtrMemberAccess	core -> tmpseek		795821	0					
ANR	799917	Identifier	core		795821	0					
ANR	799918	Identifier	tmpseek		795821	1					
ANR	799919	Identifier	true		795821	1					
ANR	799920	ElseStatement	else		795821	0					
ANR	799921	CompoundStatement		673:13:16272:16272	795821	0					
ANR	799922	ExpressionStatement	"eprintf ( ""The current basic block has %d instructions\\n"" , bb -> ninstr )"	3179:7:80932:81001	795821	0	True				
ANR	799923	CallExpression	"eprintf ( ""The current basic block has %d instructions\\n"" , bb -> ninstr )"		795821	0					
ANR	799924	Callee	eprintf		795821	0					
ANR	799925	Identifier	eprintf		795821	0					
ANR	799926	ArgumentList	"""The current basic block has %d instructions\\n"""		795821	1					
ANR	799927	Argument	"""The current basic block has %d instructions\\n"""		795821	0					
ANR	799928	PrimaryExpression	"""The current basic block has %d instructions\\n"""		795821	0					
ANR	799929	Argument	bb -> ninstr		795821	1					
ANR	799930	PtrMemberAccess	bb -> ninstr		795821	0					
ANR	799931	Identifier	bb		795821	0					
ANR	799932	Identifier	ninstr		795821	1					
ANR	799933	ElseStatement	else		795821	0					
ANR	799934	CompoundStatement		676:12:16372:16372	795821	0					
ANR	799935	Statement	eprintf	3182:6:81031:81037	795821	0	True				
ANR	799936	Statement	(	3182:14:81039:81039	795821	1	True				
ANR	799937	Statement	"""Can't find a basic block for 0x%08"""	3182:15:81040:81075	795821	2	True				
ANR	799938	Statement	PFMT64x	3182:51:81076:81082	795821	3	True				
ANR	799939	Statement	"""\\n"""	3182:58:81083:81086	795821	4	True				
ANR	799940	Statement	","	3182:62:81087:81087	795821	5	True				
ANR	799941	Statement	core	3182:64:81089:81092	795821	6	True				
ANR	799942	Statement	->	3182:68:81093:81094	795821	7	True				
ANR	799943	Statement	offset	3182:70:81095:81100	795821	8	True				
ANR	799944	Statement	)	3182:76:81101:81101	795821	9	True				
ANR	799945	ExpressionStatement		3182:77:81102:81102	795821	10	True				
ANR	799946	BreakStatement	break ;	3184:5:81116:81121	795821	3	True				
ANR	799947	BreakStatement	break ;	3186:4:81133:81138	795821	5	True				
ANR	799948	Label	case 'f' :	3187:3:81143:81151	795821	6	True				
ANR	799949	ExpressionStatement	"f = r_file_slurp ( ptr + 2 , & sz )"	3188:4:81189:81220	795821	7	True				
ANR	799950	AssignmentExpression	"f = r_file_slurp ( ptr + 2 , & sz )"		795821	0		=			
ANR	799951	Identifier	f		795821	0					
ANR	799952	CallExpression	"r_file_slurp ( ptr + 2 , & sz )"		795821	1					
ANR	799953	Callee	r_file_slurp		795821	0					
ANR	799954	Identifier	r_file_slurp		795821	0					
ANR	799955	ArgumentList	ptr + 2		795821	1					
ANR	799956	Argument	ptr + 2		795821	0					
ANR	799957	AdditiveExpression	ptr + 2		795821	0		+			
ANR	799958	Identifier	ptr		795821	0					
ANR	799959	PrimaryExpression	2		795821	1					
ANR	799960	Argument	& sz		795821	1					
ANR	799961	UnaryOperationExpression	& sz		795821	0					
ANR	799962	UnaryOperator	&		795821	0					
ANR	799963	Identifier	sz		795821	1					
ANR	799964	IfStatement	if ( f )		795821	8					
ANR	799965	Condition	f	3189:8:81230:81230	795821	0	True				
ANR	799966	Identifier	f		795821	0					
ANR	799967	CompoundStatement		684:11:16582:16582	795821	1					
ANR	799968	CompoundStatement		687:6:16658:16716	795821	0					
ANR	799969	IdentifierDeclStatement	"RBuffer * b = r_buf_new_with_bytes ( ( const ut8 * ) f , sz ) ;"	3191:6:81248:81301	795821	0	True				
ANR	799970	IdentifierDecl	"* b = r_buf_new_with_bytes ( ( const ut8 * ) f , sz )"		795821	0					
ANR	799971	IdentifierDeclType	RBuffer *		795821	0					
ANR	799972	Identifier	b		795821	1					
ANR	799973	AssignmentExpression	"* b = r_buf_new_with_bytes ( ( const ut8 * ) f , sz )"		795821	2		=			
ANR	799974	Identifier	b		795821	0					
ANR	799975	CallExpression	"r_buf_new_with_bytes ( ( const ut8 * ) f , sz )"		795821	1					
ANR	799976	Callee	r_buf_new_with_bytes		795821	0					
ANR	799977	Identifier	r_buf_new_with_bytes		795821	0					
ANR	799978	ArgumentList	( const ut8 * ) f		795821	1					
ANR	799979	Argument	( const ut8 * ) f		795821	0					
ANR	799980	CastExpression	( const ut8 * ) f		795821	0					
ANR	799981	CastTarget	const ut8 *		795821	0					
ANR	799982	Identifier	f		795821	1					
ANR	799983	Argument	sz		795821	1					
ANR	799984	Identifier	sz		795821	0					
ANR	799985	IdentifierDeclStatement	"RIODesc * d = r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 ) ;"	3192:6:81309:81367	795821	1	True				
ANR	799986	IdentifierDecl	"* d = r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 )"		795821	0					
ANR	799987	IdentifierDeclType	RIODesc *		795821	0					
ANR	799988	Identifier	d		795821	1					
ANR	799989	AssignmentExpression	"* d = r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 )"		795821	2		=			
ANR	799990	Identifier	d		795821	0					
ANR	799991	CallExpression	"r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 )"		795821	1					
ANR	799992	Callee	r_io_open_buffer		795821	0					
ANR	799993	Identifier	r_io_open_buffer		795821	0					
ANR	799994	ArgumentList	core -> io		795821	1					
ANR	799995	Argument	core -> io		795821	0					
ANR	799996	PtrMemberAccess	core -> io		795821	0					
ANR	799997	Identifier	core		795821	0					
ANR	799998	Identifier	io		795821	1					
ANR	799999	Argument	b		795821	1					
ANR	800000	Identifier	b		795821	0					
ANR	800001	Argument	R_PERM_RWX		795821	2					
ANR	800002	Identifier	R_PERM_RWX		795821	0					
ANR	800003	Argument	0		795821	3					
ANR	800004	PrimaryExpression	0		795821	0					
ANR	800005	IfStatement	if ( d )		795821	2					
ANR	800006	Condition	d	3193:10:81379:81379	795821	0	True				
ANR	800007	Identifier	d		795821	0					
ANR	800008	CompoundStatement		688:13:16731:16731	795821	1					
ANR	800009	IfStatement	if ( tmpdesc )		795821	0					
ANR	800010	Condition	tmpdesc	3194:11:81395:81401	795821	0	True				
ANR	800011	Identifier	tmpdesc		795821	0					
ANR	800012	CompoundStatement		689:20:16753:16753	795821	1					
ANR	800013	ExpressionStatement	r_io_desc_close ( tmpdesc )	3195:8:81414:81439	795821	0	True				
ANR	800014	CallExpression	r_io_desc_close ( tmpdesc )		795821	0					
ANR	800015	Callee	r_io_desc_close		795821	0					
ANR	800016	Identifier	r_io_desc_close		795821	0					
ANR	800017	ArgumentList	tmpdesc		795821	1					
ANR	800018	Argument	tmpdesc		795821	0					
ANR	800019	Identifier	tmpdesc		795821	0					
ANR	800020	ExpressionStatement	tmpdesc = d	3197:7:81457:81468	795821	1	True				
ANR	800021	AssignmentExpression	tmpdesc = d		795821	0		=			
ANR	800022	Identifier	tmpdesc		795821	0					
ANR	800023	Identifier	d		795821	1					
ANR	800024	IfStatement	if ( pamode )		795821	2					
ANR	800025	Condition	pamode	3198:11:81481:81486	795821	0	True				
ANR	800026	Identifier	pamode		795821	0					
ANR	800027	CompoundStatement		693:19:16838:16838	795821	1					
ANR	800028	ExpressionStatement	"r_config_set_i ( core -> config , ""io.va"" , 1 )"	3199:8:81499:81540	795821	0	True				
ANR	800029	CallExpression	"r_config_set_i ( core -> config , ""io.va"" , 1 )"		795821	0					
ANR	800030	Callee	r_config_set_i		795821	0					
ANR	800031	Identifier	r_config_set_i		795821	0					
ANR	800032	ArgumentList	core -> config		795821	1					
ANR	800033	Argument	core -> config		795821	0					
ANR	800034	PtrMemberAccess	core -> config		795821	0					
ANR	800035	Identifier	core		795821	0					
ANR	800036	Identifier	config		795821	1					
ANR	800037	Argument	"""io.va"""		795821	1					
ANR	800038	PrimaryExpression	"""io.va"""		795821	0					
ANR	800039	Argument	1		795821	2					
ANR	800040	PrimaryExpression	1		795821	0					
ANR	800041	ExpressionStatement	"r_io_map_new ( core -> io , d -> fd , d -> perm , 0 , core -> offset , r_buf_size ( b ) )"	3201:7:81558:81630	795821	3	True				
ANR	800042	CallExpression	"r_io_map_new ( core -> io , d -> fd , d -> perm , 0 , core -> offset , r_buf_size ( b ) )"		795821	0					
ANR	800043	Callee	r_io_map_new		795821	0					
ANR	800044	Identifier	r_io_map_new		795821	0					
ANR	800045	ArgumentList	core -> io		795821	1					
ANR	800046	Argument	core -> io		795821	0					
ANR	800047	PtrMemberAccess	core -> io		795821	0					
ANR	800048	Identifier	core		795821	0					
ANR	800049	Identifier	io		795821	1					
ANR	800050	Argument	d -> fd		795821	1					
ANR	800051	PtrMemberAccess	d -> fd		795821	0					
ANR	800052	Identifier	d		795821	0					
ANR	800053	Identifier	fd		795821	1					
ANR	800054	Argument	d -> perm		795821	2					
ANR	800055	PtrMemberAccess	d -> perm		795821	0					
ANR	800056	Identifier	d		795821	0					
ANR	800057	Identifier	perm		795821	1					
ANR	800058	Argument	0		795821	3					
ANR	800059	PrimaryExpression	0		795821	0					
ANR	800060	Argument	core -> offset		795821	4					
ANR	800061	PtrMemberAccess	core -> offset		795821	0					
ANR	800062	Identifier	core		795821	0					
ANR	800063	Identifier	offset		795821	1					
ANR	800064	Argument	r_buf_size ( b )		795821	5					
ANR	800065	CallExpression	r_buf_size ( b )		795821	0					
ANR	800066	Callee	r_buf_size		795821	0					
ANR	800067	Identifier	r_buf_size		795821	0					
ANR	800068	ArgumentList	b		795821	1					
ANR	800069	Argument	b		795821	0					
ANR	800070	Identifier	b		795821	0					
ANR	800071	ExpressionStatement	buf = malloc ( sz )	3205:5:81658:81675	795821	1	True				
ANR	800072	AssignmentExpression	buf = malloc ( sz )		795821	0		=			
ANR	800073	Identifier	buf		795821	0					
ANR	800074	CallExpression	malloc ( sz )		795821	1					
ANR	800075	Callee	malloc		795821	0					
ANR	800076	Identifier	malloc		795821	0					
ANR	800077	ArgumentList	sz		795821	1					
ANR	800078	Argument	sz		795821	0					
ANR	800079	Identifier	sz		795821	0					
ANR	800080	IfStatement	if ( buf )		795821	2					
ANR	800081	Condition	buf	3206:9:81686:81688	795821	0	True				
ANR	800082	Identifier	buf		795821	0					
ANR	800083	CompoundStatement		701:14:17040:17040	795821	1					
ANR	800084	ExpressionStatement	free ( core -> block )	3207:6:81699:81717	795821	0	True				
ANR	800085	CallExpression	free ( core -> block )		795821	0					
ANR	800086	Callee	free		795821	0					
ANR	800087	Identifier	free		795821	0					
ANR	800088	ArgumentList	core -> block		795821	1					
ANR	800089	Argument	core -> block		795821	0					
ANR	800090	PtrMemberAccess	core -> block		795821	0					
ANR	800091	Identifier	core		795821	0					
ANR	800092	Identifier	block		795821	1					
ANR	800093	ExpressionStatement	core -> block = buf	3208:6:81725:81742	795821	1	True				
ANR	800094	AssignmentExpression	core -> block = buf		795821	0		=			
ANR	800095	PtrMemberAccess	core -> block		795821	0					
ANR	800096	Identifier	core		795821	0					
ANR	800097	Identifier	block		795821	1					
ANR	800098	Identifier	buf		795821	1					
ANR	800099	ExpressionStatement	core -> blocksize = sz	3209:6:81750:81770	795821	2	True				
ANR	800100	AssignmentExpression	core -> blocksize = sz		795821	0		=			
ANR	800101	PtrMemberAccess	core -> blocksize		795821	0					
ANR	800102	Identifier	core		795821	0					
ANR	800103	Identifier	blocksize		795821	1					
ANR	800104	Identifier	sz		795821	1					
ANR	800105	ExpressionStatement	"memcpy ( core -> block , f , sz )"	3210:6:81778:81805	795821	3	True				
ANR	800106	CallExpression	"memcpy ( core -> block , f , sz )"		795821	0					
ANR	800107	Callee	memcpy		795821	0					
ANR	800108	Identifier	memcpy		795821	0					
ANR	800109	ArgumentList	core -> block		795821	1					
ANR	800110	Argument	core -> block		795821	0					
ANR	800111	PtrMemberAccess	core -> block		795821	0					
ANR	800112	Identifier	core		795821	0					
ANR	800113	Identifier	block		795821	1					
ANR	800114	Argument	f		795821	1					
ANR	800115	Identifier	f		795821	0					
ANR	800116	Argument	sz		795821	2					
ANR	800117	Identifier	sz		795821	0					
ANR	800118	ExpressionStatement	usemyblock = true	3211:6:81813:81830	795821	4	True				
ANR	800119	AssignmentExpression	usemyblock = true		795821	0		=			
ANR	800120	Identifier	usemyblock		795821	0					
ANR	800121	Identifier	true		795821	1					
ANR	800122	ElseStatement	else		795821	0					
ANR	800123	CompoundStatement		707:12:17193:17193	795821	0					
ANR	800124	ExpressionStatement	"eprintf ( ""cannot alloc %d"" , sz )"	3213:6:81852:81883	795821	0	True				
ANR	800125	CallExpression	"eprintf ( ""cannot alloc %d"" , sz )"		795821	0					
ANR	800126	Callee	eprintf		795821	0					
ANR	800127	Identifier	eprintf		795821	0					
ANR	800128	ArgumentList	"""cannot alloc %d"""		795821	1					
ANR	800129	Argument	"""cannot alloc %d"""		795821	0					
ANR	800130	PrimaryExpression	"""cannot alloc %d"""		795821	0					
ANR	800131	Argument	sz		795821	1					
ANR	800132	Identifier	sz		795821	0					
ANR	800133	ExpressionStatement	free ( f )	3215:5:81897:81905	795821	3	True				
ANR	800134	CallExpression	free ( f )		795821	0					
ANR	800135	Callee	free		795821	0					
ANR	800136	Identifier	free		795821	0					
ANR	800137	ArgumentList	f		795821	1					
ANR	800138	Argument	f		795821	0					
ANR	800139	Identifier	f		795821	0					
ANR	800140	ElseStatement	else		795821	0					
ANR	800141	CompoundStatement		712:11:17274:17274	795821	0					
ANR	800142	ExpressionStatement	"eprintf ( ""cannot open '%s'\\n"" , ptr + 3 )"	3218:5:81932:81971	795821	0	True				
ANR	800143	CallExpression	"eprintf ( ""cannot open '%s'\\n"" , ptr + 3 )"		795821	0					
ANR	800144	Callee	eprintf		795821	0					
ANR	800145	Identifier	eprintf		795821	0					
ANR	800146	ArgumentList	"""cannot open '%s'\\n"""		795821	1					
ANR	800147	Argument	"""cannot open '%s'\\n"""		795821	0					
ANR	800148	PrimaryExpression	"""cannot open '%s'\\n"""		795821	0					
ANR	800149	Argument	ptr + 3		795821	1					
ANR	800150	AdditiveExpression	ptr + 3		795821	0		+			
ANR	800151	Identifier	ptr		795821	0					
ANR	800152	PrimaryExpression	3		795821	1					
ANR	800153	BreakStatement	break ;	3220:4:81983:81988	795821	9	True				
ANR	800154	Label	case 'r' :	3221:3:81993:82001	795821	10	True				
ANR	800155	IfStatement	if ( ptr [ 1 ] == ':' )		795821	11					
ANR	800156	Condition	ptr [ 1 ] == ':'	3222:8:82031:82043	795821	0	True				
ANR	800157	EqualityExpression	ptr [ 1 ] == ':'		795821	0		==			
ANR	800158	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	800159	Identifier	ptr		795821	0					
ANR	800160	PrimaryExpression	1		795821	1					
ANR	800161	PrimaryExpression	':'		795821	1					
ANR	800162	CompoundStatement		720:5:17458:17492	795821	1					
ANR	800163	IdentifierDeclStatement	ut64 regval ;	3223:5:82053:82064	795821	0	True				
ANR	800164	IdentifierDecl	regval		795821	0					
ANR	800165	IdentifierDeclType	ut64		795821	0					
ANR	800166	Identifier	regval		795821	1					
ANR	800167	IdentifierDeclStatement	char * mander = strdup ( ptr + 2 ) ;	3224:5:82071:82102	795821	1	True				
ANR	800168	IdentifierDecl	* mander = strdup ( ptr + 2 )		795821	0					
ANR	800169	IdentifierDeclType	char *		795821	0					
ANR	800170	Identifier	mander		795821	1					
ANR	800171	AssignmentExpression	* mander = strdup ( ptr + 2 )		795821	2		=			
ANR	800172	Identifier	mander		795821	0					
ANR	800173	CallExpression	strdup ( ptr + 2 )		795821	1					
ANR	800174	Callee	strdup		795821	0					
ANR	800175	Identifier	strdup		795821	0					
ANR	800176	ArgumentList	ptr + 2		795821	1					
ANR	800177	Argument	ptr + 2		795821	0					
ANR	800178	AdditiveExpression	ptr + 2		795821	0		+			
ANR	800179	Identifier	ptr		795821	0					
ANR	800180	PrimaryExpression	2		795821	1					
ANR	800181	IdentifierDeclStatement	char * sep = findSeparator ( mander ) ;	3225:5:82109:82143	795821	2	True				
ANR	800182	IdentifierDecl	* sep = findSeparator ( mander )		795821	0					
ANR	800183	IdentifierDeclType	char *		795821	0					
ANR	800184	Identifier	sep		795821	1					
ANR	800185	AssignmentExpression	* sep = findSeparator ( mander )		795821	2		=			
ANR	800186	Identifier	sep		795821	0					
ANR	800187	CallExpression	findSeparator ( mander )		795821	1					
ANR	800188	Callee	findSeparator		795821	0					
ANR	800189	Identifier	findSeparator		795821	0					
ANR	800190	ArgumentList	mander		795821	1					
ANR	800191	Argument	mander		795821	0					
ANR	800192	Identifier	mander		795821	0					
ANR	800193	IfStatement	if ( sep )		795821	3					
ANR	800194	Condition	sep	3226:9:82154:82156	795821	0	True				
ANR	800195	Identifier	sep		795821	0					
ANR	800196	CompoundStatement		722:6:17516:17530	795821	1					
ANR	800197	IdentifierDeclStatement	char ch = * sep ;	3227:6:82167:82181	795821	0	True				
ANR	800198	IdentifierDecl	ch = * sep		795821	0					
ANR	800199	IdentifierDeclType	char		795821	0					
ANR	800200	Identifier	ch		795821	1					
ANR	800201	AssignmentExpression	ch = * sep		795821	2		=			
ANR	800202	Identifier	ch		795821	0					
ANR	800203	UnaryOperationExpression	* sep		795821	1					
ANR	800204	UnaryOperator	*		795821	0					
ANR	800205	Identifier	sep		795821	1					
ANR	800206	ExpressionStatement	* sep = 0	3228:6:82189:82197	795821	1	True				
ANR	800207	AssignmentExpression	* sep = 0		795821	0		=			
ANR	800208	UnaryOperationExpression	* sep		795821	0					
ANR	800209	UnaryOperator	*		795821	0					
ANR	800210	Identifier	sep		795821	1					
ANR	800211	PrimaryExpression	0		795821	1					
ANR	800212	ExpressionStatement	"regval = r_debug_reg_get ( core -> dbg , mander )"	3229:6:82205:82249	795821	2	True				
ANR	800213	AssignmentExpression	"regval = r_debug_reg_get ( core -> dbg , mander )"		795821	0		=			
ANR	800214	Identifier	regval		795821	0					
ANR	800215	CallExpression	"r_debug_reg_get ( core -> dbg , mander )"		795821	1					
ANR	800216	Callee	r_debug_reg_get		795821	0					
ANR	800217	Identifier	r_debug_reg_get		795821	0					
ANR	800218	ArgumentList	core -> dbg		795821	1					
ANR	800219	Argument	core -> dbg		795821	0					
ANR	800220	PtrMemberAccess	core -> dbg		795821	0					
ANR	800221	Identifier	core		795821	0					
ANR	800222	Identifier	dbg		795821	1					
ANR	800223	Argument	mander		795821	1					
ANR	800224	Identifier	mander		795821	0					
ANR	800225	ExpressionStatement	* sep = ch	3230:6:82257:82266	795821	3	True				
ANR	800226	AssignmentExpression	* sep = ch		795821	0		=			
ANR	800227	UnaryOperationExpression	* sep		795821	0					
ANR	800228	UnaryOperator	*		795821	0					
ANR	800229	Identifier	sep		795821	1					
ANR	800230	Identifier	ch		795821	1					
ANR	800231	Statement	char	3231:6:82274:82277	795821	4	True				
ANR	800232	Statement	*	3231:11:82279:82279	795821	5	True				
ANR	800233	Statement	numexpr	3231:12:82280:82286	795821	6	True				
ANR	800234	Statement	=	3231:20:82288:82288	795821	7	True				
ANR	800235	Statement	r_str_newf	3231:22:82290:82299	795821	8	True				
ANR	800236	Statement	(	3231:33:82301:82301	795821	9	True				
ANR	800237	Statement	"""0x%"""	3231:34:82302:82306	795821	10	True				
ANR	800238	Statement	PFMT64x	3231:39:82307:82313	795821	11	True				
ANR	800239	Statement	"""%s"""	3231:46:82314:82317	795821	12	True				
ANR	800240	Statement	","	3231:50:82318:82318	795821	13	True				
ANR	800241	Statement	regval	3231:52:82320:82325	795821	14	True				
ANR	800242	Statement	","	3231:58:82326:82326	795821	15	True				
ANR	800243	Statement	sep	3231:60:82328:82330	795821	16	True				
ANR	800244	Statement	)	3231:63:82331:82331	795821	17	True				
ANR	800245	ExpressionStatement		3231:64:82332:82332	795821	18	True				
ANR	800246	ExpressionStatement	"regval = r_num_math ( core -> num , numexpr )"	3232:6:82340:82380	795821	19	True				
ANR	800247	AssignmentExpression	"regval = r_num_math ( core -> num , numexpr )"		795821	0		=			
ANR	800248	Identifier	regval		795821	0					
ANR	800249	CallExpression	"r_num_math ( core -> num , numexpr )"		795821	1					
ANR	800250	Callee	r_num_math		795821	0					
ANR	800251	Identifier	r_num_math		795821	0					
ANR	800252	ArgumentList	core -> num		795821	1					
ANR	800253	Argument	core -> num		795821	0					
ANR	800254	PtrMemberAccess	core -> num		795821	0					
ANR	800255	Identifier	core		795821	0					
ANR	800256	Identifier	num		795821	1					
ANR	800257	Argument	numexpr		795821	1					
ANR	800258	Identifier	numexpr		795821	0					
ANR	800259	ExpressionStatement	free ( numexpr )	3233:6:82388:82402	795821	20	True				
ANR	800260	CallExpression	free ( numexpr )		795821	0					
ANR	800261	Callee	free		795821	0					
ANR	800262	Identifier	free		795821	0					
ANR	800263	ArgumentList	numexpr		795821	1					
ANR	800264	Argument	numexpr		795821	0					
ANR	800265	Identifier	numexpr		795821	0					
ANR	800266	ElseStatement	else		795821	0					
ANR	800267	CompoundStatement		729:12:17765:17765	795821	0					
ANR	800268	ExpressionStatement	"regval = r_debug_reg_get ( core -> dbg , ptr + 2 )"	3235:6:82424:82469	795821	0	True				
ANR	800269	AssignmentExpression	"regval = r_debug_reg_get ( core -> dbg , ptr + 2 )"		795821	0		=			
ANR	800270	Identifier	regval		795821	0					
ANR	800271	CallExpression	"r_debug_reg_get ( core -> dbg , ptr + 2 )"		795821	1					
ANR	800272	Callee	r_debug_reg_get		795821	0					
ANR	800273	Identifier	r_debug_reg_get		795821	0					
ANR	800274	ArgumentList	core -> dbg		795821	1					
ANR	800275	Argument	core -> dbg		795821	0					
ANR	800276	PtrMemberAccess	core -> dbg		795821	0					
ANR	800277	Identifier	core		795821	0					
ANR	800278	Identifier	dbg		795821	1					
ANR	800279	Argument	ptr + 2		795821	1					
ANR	800280	AdditiveExpression	ptr + 2		795821	0		+			
ANR	800281	Identifier	ptr		795821	0					
ANR	800282	PrimaryExpression	2		795821	1					
ANR	800283	ExpressionStatement	"r_core_seek ( core , regval , 1 )"	3237:5:82483:82512	795821	4	True				
ANR	800284	CallExpression	"r_core_seek ( core , regval , 1 )"		795821	0					
ANR	800285	Callee	r_core_seek		795821	0					
ANR	800286	Identifier	r_core_seek		795821	0					
ANR	800287	ArgumentList	core		795821	1					
ANR	800288	Argument	core		795821	0					
ANR	800289	Identifier	core		795821	0					
ANR	800290	Argument	regval		795821	1					
ANR	800291	Identifier	regval		795821	0					
ANR	800292	Argument	1		795821	2					
ANR	800293	PrimaryExpression	1		795821	0					
ANR	800294	ExpressionStatement	cmd_tmpseek = core -> tmpseek = true	3238:5:82519:82553	795821	5	True				
ANR	800295	AssignmentExpression	cmd_tmpseek = core -> tmpseek = true		795821	0		=			
ANR	800296	Identifier	cmd_tmpseek		795821	0					
ANR	800297	AssignmentExpression	core -> tmpseek = true		795821	1		=			
ANR	800298	PtrMemberAccess	core -> tmpseek		795821	0					
ANR	800299	Identifier	core		795821	0					
ANR	800300	Identifier	tmpseek		795821	1					
ANR	800301	Identifier	true		795821	1					
ANR	800302	ExpressionStatement	free ( mander )	3239:5:82560:82573	795821	6	True				
ANR	800303	CallExpression	free ( mander )		795821	0					
ANR	800304	Callee	free		795821	0					
ANR	800305	Identifier	free		795821	0					
ANR	800306	ArgumentList	mander		795821	1					
ANR	800307	Argument	mander		795821	0					
ANR	800308	Identifier	mander		795821	0					
ANR	800309	BreakStatement	break ;	3241:4:82585:82590	795821	12	True				
ANR	800310	Label	case 'b' :	3242:3:82595:82603	795821	13	True				
ANR	800311	ExpressionStatement	"is_bits_set = set_tmp_bits ( core , r_num_math ( core -> num , ptr + 2 ) , & tmpbits )"	3243:4:82626:82702	795821	14	True				
ANR	800312	AssignmentExpression	"is_bits_set = set_tmp_bits ( core , r_num_math ( core -> num , ptr + 2 ) , & tmpbits )"		795821	0		=			
ANR	800313	Identifier	is_bits_set		795821	0					
ANR	800314	CallExpression	"set_tmp_bits ( core , r_num_math ( core -> num , ptr + 2 ) , & tmpbits )"		795821	1					
ANR	800315	Callee	set_tmp_bits		795821	0					
ANR	800316	Identifier	set_tmp_bits		795821	0					
ANR	800317	ArgumentList	core		795821	1					
ANR	800318	Argument	core		795821	0					
ANR	800319	Identifier	core		795821	0					
ANR	800320	Argument	"r_num_math ( core -> num , ptr + 2 )"		795821	1					
ANR	800321	CallExpression	"r_num_math ( core -> num , ptr + 2 )"		795821	0					
ANR	800322	Callee	r_num_math		795821	0					
ANR	800323	Identifier	r_num_math		795821	0					
ANR	800324	ArgumentList	core -> num		795821	1					
ANR	800325	Argument	core -> num		795821	0					
ANR	800326	PtrMemberAccess	core -> num		795821	0					
ANR	800327	Identifier	core		795821	0					
ANR	800328	Identifier	num		795821	1					
ANR	800329	Argument	ptr + 2		795821	1					
ANR	800330	AdditiveExpression	ptr + 2		795821	0		+			
ANR	800331	Identifier	ptr		795821	0					
ANR	800332	PrimaryExpression	2		795821	1					
ANR	800333	Argument	& tmpbits		795821	2					
ANR	800334	UnaryOperationExpression	& tmpbits		795821	0					
ANR	800335	UnaryOperator	&		795821	0					
ANR	800336	Identifier	tmpbits		795821	1					
ANR	800337	ExpressionStatement	"cmd_ignbithints = r_config_get_i ( core -> config , ""anal.ignbithints"" )"	3244:4:82708:82775	795821	15	True				
ANR	800338	AssignmentExpression	"cmd_ignbithints = r_config_get_i ( core -> config , ""anal.ignbithints"" )"		795821	0		=			
ANR	800339	Identifier	cmd_ignbithints		795821	0					
ANR	800340	CallExpression	"r_config_get_i ( core -> config , ""anal.ignbithints"" )"		795821	1					
ANR	800341	Callee	r_config_get_i		795821	0					
ANR	800342	Identifier	r_config_get_i		795821	0					
ANR	800343	ArgumentList	core -> config		795821	1					
ANR	800344	Argument	core -> config		795821	0					
ANR	800345	PtrMemberAccess	core -> config		795821	0					
ANR	800346	Identifier	core		795821	0					
ANR	800347	Identifier	config		795821	1					
ANR	800348	Argument	"""anal.ignbithints"""		795821	1					
ANR	800349	PrimaryExpression	"""anal.ignbithints"""		795821	0					
ANR	800350	ExpressionStatement	"r_config_set_i ( core -> config , ""anal.ignbithints"" , 1 )"	3245:4:82781:82833	795821	16	True				
ANR	800351	CallExpression	"r_config_set_i ( core -> config , ""anal.ignbithints"" , 1 )"		795821	0					
ANR	800352	Callee	r_config_set_i		795821	0					
ANR	800353	Identifier	r_config_set_i		795821	0					
ANR	800354	ArgumentList	core -> config		795821	1					
ANR	800355	Argument	core -> config		795821	0					
ANR	800356	PtrMemberAccess	core -> config		795821	0					
ANR	800357	Identifier	core		795821	0					
ANR	800358	Identifier	config		795821	1					
ANR	800359	Argument	"""anal.ignbithints"""		795821	1					
ANR	800360	PrimaryExpression	"""anal.ignbithints"""		795821	0					
ANR	800361	Argument	1		795821	2					
ANR	800362	PrimaryExpression	1		795821	0					
ANR	800363	BreakStatement	break ;	3246:4:82839:82844	795821	17	True				
ANR	800364	Label	case 'i' :	3247:3:82849:82857	795821	18	True				
ANR	800365	CompoundStatement		744:5:18228:18271	795821	19					
ANR	800366	IdentifierDeclStatement	"ut64 addr = r_num_math ( core -> num , ptr + 2 ) ;"	3249:5:82879:82922	795821	0	True				
ANR	800367	IdentifierDecl	"addr = r_num_math ( core -> num , ptr + 2 )"		795821	0					
ANR	800368	IdentifierDeclType	ut64		795821	0					
ANR	800369	Identifier	addr		795821	1					
ANR	800370	AssignmentExpression	"addr = r_num_math ( core -> num , ptr + 2 )"		795821	2		=			
ANR	800371	Identifier	addr		795821	0					
ANR	800372	CallExpression	"r_num_math ( core -> num , ptr + 2 )"		795821	1					
ANR	800373	Callee	r_num_math		795821	0					
ANR	800374	Identifier	r_num_math		795821	0					
ANR	800375	ArgumentList	core -> num		795821	1					
ANR	800376	Argument	core -> num		795821	0					
ANR	800377	PtrMemberAccess	core -> num		795821	0					
ANR	800378	Identifier	core		795821	0					
ANR	800379	Identifier	num		795821	1					
ANR	800380	Argument	ptr + 2		795821	1					
ANR	800381	AdditiveExpression	ptr + 2		795821	0		+			
ANR	800382	Identifier	ptr		795821	0					
ANR	800383	PrimaryExpression	2		795821	1					
ANR	800384	IfStatement	if ( addr )		795821	1					
ANR	800385	Condition	addr	3250:9:82933:82936	795821	0	True				
ANR	800386	Identifier	addr		795821	0					
ANR	800387	CompoundStatement		745:15:18288:18288	795821	1					
ANR	800388	ExpressionStatement	"r_core_cmdf ( core , ""so %s"" , ptr + 2 )"	3251:6:82947:82983	795821	0	True				
ANR	800389	CallExpression	"r_core_cmdf ( core , ""so %s"" , ptr + 2 )"		795821	0					
ANR	800390	Callee	r_core_cmdf		795821	0					
ANR	800391	Identifier	r_core_cmdf		795821	0					
ANR	800392	ArgumentList	core		795821	1					
ANR	800393	Argument	core		795821	0					
ANR	800394	Identifier	core		795821	0					
ANR	800395	Argument	"""so %s"""		795821	1					
ANR	800396	PrimaryExpression	"""so %s"""		795821	0					
ANR	800397	Argument	ptr + 2		795821	2					
ANR	800398	AdditiveExpression	ptr + 2		795821	0		+			
ANR	800399	Identifier	ptr		795821	0					
ANR	800400	PrimaryExpression	2		795821	1					
ANR	800401	ExpressionStatement	cmd_tmpseek = core -> tmpseek = true	3253:6:83036:83070	795821	1	True				
ANR	800402	AssignmentExpression	cmd_tmpseek = core -> tmpseek = true		795821	0		=			
ANR	800403	Identifier	cmd_tmpseek		795821	0					
ANR	800404	AssignmentExpression	core -> tmpseek = true		795821	1		=			
ANR	800405	PtrMemberAccess	core -> tmpseek		795821	0					
ANR	800406	Identifier	core		795821	0					
ANR	800407	Identifier	tmpseek		795821	1					
ANR	800408	Identifier	true		795821	1					
ANR	800409	BreakStatement	break ;	3256:4:83089:83094	795821	20	True				
ANR	800410	Label	case 'e' :	3257:3:83099:83107	795821	21	True				
ANR	800411	CompoundStatement		754:5:18478:18521	795821	22					
ANR	800412	IdentifierDeclStatement	"char * cmd = parse_tmp_evals ( core , ptr + 2 ) ;"	3259:5:83129:83172	795821	0	True				
ANR	800413	IdentifierDecl	"* cmd = parse_tmp_evals ( core , ptr + 2 )"		795821	0					
ANR	800414	IdentifierDeclType	char *		795821	0					
ANR	800415	Identifier	cmd		795821	1					
ANR	800416	AssignmentExpression	"* cmd = parse_tmp_evals ( core , ptr + 2 )"		795821	2		=			
ANR	800417	Identifier	cmd		795821	0					
ANR	800418	CallExpression	"parse_tmp_evals ( core , ptr + 2 )"		795821	1					
ANR	800419	Callee	parse_tmp_evals		795821	0					
ANR	800420	Identifier	parse_tmp_evals		795821	0					
ANR	800421	ArgumentList	core		795821	1					
ANR	800422	Argument	core		795821	0					
ANR	800423	Identifier	core		795821	0					
ANR	800424	Argument	ptr + 2		795821	1					
ANR	800425	AdditiveExpression	ptr + 2		795821	0		+			
ANR	800426	Identifier	ptr		795821	0					
ANR	800427	PrimaryExpression	2		795821	1					
ANR	800428	IfStatement	if ( ! tmpeval )		795821	1					
ANR	800429	Condition	! tmpeval	3260:9:83183:83190	795821	0	True				
ANR	800430	UnaryOperationExpression	! tmpeval		795821	0					
ANR	800431	UnaryOperator	!		795821	0					
ANR	800432	Identifier	tmpeval		795821	1					
ANR	800433	CompoundStatement		755:19:18542:18542	795821	1					
ANR	800434	ExpressionStatement	tmpeval = cmd	3261:6:83201:83214	795821	0	True				
ANR	800435	AssignmentExpression	tmpeval = cmd		795821	0		=			
ANR	800436	Identifier	tmpeval		795821	0					
ANR	800437	Identifier	cmd		795821	1					
ANR	800438	ElseStatement	else		795821	0					
ANR	800439	CompoundStatement		757:12:18577:18577	795821	0					
ANR	800440	ExpressionStatement	"tmpeval = r_str_prepend ( tmpeval , cmd )"	3263:6:83236:83274	795821	0	True				
ANR	800441	AssignmentExpression	"tmpeval = r_str_prepend ( tmpeval , cmd )"		795821	0		=			
ANR	800442	Identifier	tmpeval		795821	0					
ANR	800443	CallExpression	"r_str_prepend ( tmpeval , cmd )"		795821	1					
ANR	800444	Callee	r_str_prepend		795821	0					
ANR	800445	Identifier	r_str_prepend		795821	0					
ANR	800446	ArgumentList	tmpeval		795821	1					
ANR	800447	Argument	tmpeval		795821	0					
ANR	800448	Identifier	tmpeval		795821	0					
ANR	800449	Argument	cmd		795821	1					
ANR	800450	Identifier	cmd		795821	0					
ANR	800451	ExpressionStatement	free ( cmd )	3264:6:83282:83292	795821	1	True				
ANR	800452	CallExpression	free ( cmd )		795821	0					
ANR	800453	Callee	free		795821	0					
ANR	800454	Identifier	free		795821	0					
ANR	800455	ArgumentList	cmd		795821	1					
ANR	800456	Argument	cmd		795821	0					
ANR	800457	Identifier	cmd		795821	0					
ANR	800458	BreakStatement	break ;	3267:4:83311:83316	795821	23	True				
ANR	800459	Label	case 'x' :	3268:3:83321:83329	795821	24	True				
ANR	800460	IfStatement	if ( ptr [ 1 ] == ':' )		795821	25					
ANR	800461	Condition	ptr [ 1 ] == ':'	3269:8:83360:83372	795821	0	True				
ANR	800462	EqualityExpression	ptr [ 1 ] == ':'		795821	0		==			
ANR	800463	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	800464	Identifier	ptr		795821	0					
ANR	800465	PrimaryExpression	1		795821	1					
ANR	800466	PrimaryExpression	':'		795821	1					
ANR	800467	CompoundStatement		764:23:18724:18724	795821	1					
ANR	800468	ExpressionStatement	buf = malloc ( strlen ( ptr + 2 ) + 1 )	3270:5:83382:83417	795821	0	True				
ANR	800469	AssignmentExpression	buf = malloc ( strlen ( ptr + 2 ) + 1 )		795821	0		=			
ANR	800470	Identifier	buf		795821	0					
ANR	800471	CallExpression	malloc ( strlen ( ptr + 2 ) + 1 )		795821	1					
ANR	800472	Callee	malloc		795821	0					
ANR	800473	Identifier	malloc		795821	0					
ANR	800474	ArgumentList	strlen ( ptr + 2 ) + 1		795821	1					
ANR	800475	Argument	strlen ( ptr + 2 ) + 1		795821	0					
ANR	800476	AdditiveExpression	strlen ( ptr + 2 ) + 1		795821	0		+			
ANR	800477	CallExpression	strlen ( ptr + 2 )		795821	0					
ANR	800478	Callee	strlen		795821	0					
ANR	800479	Identifier	strlen		795821	0					
ANR	800480	ArgumentList	ptr + 2		795821	1					
ANR	800481	Argument	ptr + 2		795821	0					
ANR	800482	AdditiveExpression	ptr + 2		795821	0		+			
ANR	800483	Identifier	ptr		795821	0					
ANR	800484	PrimaryExpression	2		795821	1					
ANR	800485	PrimaryExpression	1		795821	1					
ANR	800486	IfStatement	if ( buf )		795821	1					
ANR	800487	Condition	buf	3271:9:83428:83430	795821	0	True				
ANR	800488	Identifier	buf		795821	0					
ANR	800489	CompoundStatement		766:14:18782:18782	795821	1					
ANR	800490	ExpressionStatement	"len = r_hex_str2bin ( ptr + 2 , buf )"	3272:6:83441:83475	795821	0	True				
ANR	800491	AssignmentExpression	"len = r_hex_str2bin ( ptr + 2 , buf )"		795821	0		=			
ANR	800492	Identifier	len		795821	0					
ANR	800493	CallExpression	"r_hex_str2bin ( ptr + 2 , buf )"		795821	1					
ANR	800494	Callee	r_hex_str2bin		795821	0					
ANR	800495	Identifier	r_hex_str2bin		795821	0					
ANR	800496	ArgumentList	ptr + 2		795821	1					
ANR	800497	Argument	ptr + 2		795821	0					
ANR	800498	AdditiveExpression	ptr + 2		795821	0		+			
ANR	800499	Identifier	ptr		795821	0					
ANR	800500	PrimaryExpression	2		795821	1					
ANR	800501	Argument	buf		795821	1					
ANR	800502	Identifier	buf		795821	0					
ANR	800503	ExpressionStatement	"r_core_block_size ( core , R_ABS ( len ) )"	3273:6:83483:83520	795821	1	True				
ANR	800504	CallExpression	"r_core_block_size ( core , R_ABS ( len ) )"		795821	0					
ANR	800505	Callee	r_core_block_size		795821	0					
ANR	800506	Identifier	r_core_block_size		795821	0					
ANR	800507	ArgumentList	core		795821	1					
ANR	800508	Argument	core		795821	0					
ANR	800509	Identifier	core		795821	0					
ANR	800510	Argument	R_ABS ( len )		795821	1					
ANR	800511	CallExpression	R_ABS ( len )		795821	0					
ANR	800512	Callee	R_ABS		795821	0					
ANR	800513	Identifier	R_ABS		795821	0					
ANR	800514	ArgumentList	len		795821	1					
ANR	800515	Argument	len		795821	0					
ANR	800516	Identifier	len		795821	0					
ANR	800517	IfStatement	if ( len > 0 )		795821	2					
ANR	800518	Condition	len > 0	3274:10:83532:83538	795821	0	True				
ANR	800519	RelationalExpression	len > 0		795821	0		>			
ANR	800520	Identifier	len		795821	0					
ANR	800521	PrimaryExpression	0		795821	1					
ANR	800522	CompoundStatement		771:7:18952:19010	795821	1					
ANR	800523	IdentifierDeclStatement	"RBuffer * b = r_buf_new_with_bytes ( buf , len ) ;"	3275:7:83550:83594	795821	0	True				
ANR	800524	IdentifierDecl	"* b = r_buf_new_with_bytes ( buf , len )"		795821	0					
ANR	800525	IdentifierDeclType	RBuffer *		795821	0					
ANR	800526	Identifier	b		795821	1					
ANR	800527	AssignmentExpression	"* b = r_buf_new_with_bytes ( buf , len )"		795821	2		=			
ANR	800528	Identifier	b		795821	0					
ANR	800529	CallExpression	"r_buf_new_with_bytes ( buf , len )"		795821	1					
ANR	800530	Callee	r_buf_new_with_bytes		795821	0					
ANR	800531	Identifier	r_buf_new_with_bytes		795821	0					
ANR	800532	ArgumentList	buf		795821	1					
ANR	800533	Argument	buf		795821	0					
ANR	800534	Identifier	buf		795821	0					
ANR	800535	Argument	len		795821	1					
ANR	800536	Identifier	len		795821	0					
ANR	800537	IdentifierDeclStatement	"RIODesc * d = r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 ) ;"	3276:7:83603:83661	795821	1	True				
ANR	800538	IdentifierDecl	"* d = r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 )"		795821	0					
ANR	800539	IdentifierDeclType	RIODesc *		795821	0					
ANR	800540	Identifier	d		795821	1					
ANR	800541	AssignmentExpression	"* d = r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 )"		795821	2		=			
ANR	800542	Identifier	d		795821	0					
ANR	800543	CallExpression	"r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 )"		795821	1					
ANR	800544	Callee	r_io_open_buffer		795821	0					
ANR	800545	Identifier	r_io_open_buffer		795821	0					
ANR	800546	ArgumentList	core -> io		795821	1					
ANR	800547	Argument	core -> io		795821	0					
ANR	800548	PtrMemberAccess	core -> io		795821	0					
ANR	800549	Identifier	core		795821	0					
ANR	800550	Identifier	io		795821	1					
ANR	800551	Argument	b		795821	1					
ANR	800552	Identifier	b		795821	0					
ANR	800553	Argument	R_PERM_RWX		795821	2					
ANR	800554	Identifier	R_PERM_RWX		795821	0					
ANR	800555	Argument	0		795821	3					
ANR	800556	PrimaryExpression	0		795821	0					
ANR	800557	IfStatement	if ( d )		795821	2					
ANR	800558	Condition	d	3277:11:83674:83674	795821	0	True				
ANR	800559	Identifier	d		795821	0					
ANR	800560	CompoundStatement		772:14:19026:19026	795821	1					
ANR	800561	IfStatement	if ( tmpdesc )		795821	0					
ANR	800562	Condition	tmpdesc	3278:12:83691:83697	795821	0	True				
ANR	800563	Identifier	tmpdesc		795821	0					
ANR	800564	CompoundStatement		773:21:19049:19049	795821	1					
ANR	800565	ExpressionStatement	r_io_desc_close ( tmpdesc )	3279:9:83711:83736	795821	0	True				
ANR	800566	CallExpression	r_io_desc_close ( tmpdesc )		795821	0					
ANR	800567	Callee	r_io_desc_close		795821	0					
ANR	800568	Identifier	r_io_desc_close		795821	0					
ANR	800569	ArgumentList	tmpdesc		795821	1					
ANR	800570	Argument	tmpdesc		795821	0					
ANR	800571	Identifier	tmpdesc		795821	0					
ANR	800572	ExpressionStatement	tmpdesc = d	3281:8:83756:83767	795821	1	True				
ANR	800573	AssignmentExpression	tmpdesc = d		795821	0		=			
ANR	800574	Identifier	tmpdesc		795821	0					
ANR	800575	Identifier	d		795821	1					
ANR	800576	IfStatement	if ( pamode )		795821	2					
ANR	800577	Condition	pamode	3282:12:83781:83786	795821	0	True				
ANR	800578	Identifier	pamode		795821	0					
ANR	800579	CompoundStatement		777:20:19138:19138	795821	1					
ANR	800580	ExpressionStatement	"r_config_set_i ( core -> config , ""io.va"" , 1 )"	3283:9:83800:83841	795821	0	True				
ANR	800581	CallExpression	"r_config_set_i ( core -> config , ""io.va"" , 1 )"		795821	0					
ANR	800582	Callee	r_config_set_i		795821	0					
ANR	800583	Identifier	r_config_set_i		795821	0					
ANR	800584	ArgumentList	core -> config		795821	1					
ANR	800585	Argument	core -> config		795821	0					
ANR	800586	PtrMemberAccess	core -> config		795821	0					
ANR	800587	Identifier	core		795821	0					
ANR	800588	Identifier	config		795821	1					
ANR	800589	Argument	"""io.va"""		795821	1					
ANR	800590	PrimaryExpression	"""io.va"""		795821	0					
ANR	800591	Argument	1		795821	2					
ANR	800592	PrimaryExpression	1		795821	0					
ANR	800593	ExpressionStatement	"r_io_map_new ( core -> io , d -> fd , d -> perm , 0 , core -> offset , r_buf_size ( b ) )"	3285:8:83861:83933	795821	3	True				
ANR	800594	CallExpression	"r_io_map_new ( core -> io , d -> fd , d -> perm , 0 , core -> offset , r_buf_size ( b ) )"		795821	0					
ANR	800595	Callee	r_io_map_new		795821	0					
ANR	800596	Identifier	r_io_map_new		795821	0					
ANR	800597	ArgumentList	core -> io		795821	1					
ANR	800598	Argument	core -> io		795821	0					
ANR	800599	PtrMemberAccess	core -> io		795821	0					
ANR	800600	Identifier	core		795821	0					
ANR	800601	Identifier	io		795821	1					
ANR	800602	Argument	d -> fd		795821	1					
ANR	800603	PtrMemberAccess	d -> fd		795821	0					
ANR	800604	Identifier	d		795821	0					
ANR	800605	Identifier	fd		795821	1					
ANR	800606	Argument	d -> perm		795821	2					
ANR	800607	PtrMemberAccess	d -> perm		795821	0					
ANR	800608	Identifier	d		795821	0					
ANR	800609	Identifier	perm		795821	1					
ANR	800610	Argument	0		795821	3					
ANR	800611	PrimaryExpression	0		795821	0					
ANR	800612	Argument	core -> offset		795821	4					
ANR	800613	PtrMemberAccess	core -> offset		795821	0					
ANR	800614	Identifier	core		795821	0					
ANR	800615	Identifier	offset		795821	1					
ANR	800616	Argument	r_buf_size ( b )		795821	5					
ANR	800617	CallExpression	r_buf_size ( b )		795821	0					
ANR	800618	Callee	r_buf_size		795821	0					
ANR	800619	Identifier	r_buf_size		795821	0					
ANR	800620	ArgumentList	b		795821	1					
ANR	800621	Argument	b		795821	0					
ANR	800622	Identifier	b		795821	0					
ANR	800623	ExpressionStatement	"r_core_block_size ( core , len )"	3286:8:83943:83972	795821	4	True				
ANR	800624	CallExpression	"r_core_block_size ( core , len )"		795821	0					
ANR	800625	Callee	r_core_block_size		795821	0					
ANR	800626	Identifier	r_core_block_size		795821	0					
ANR	800627	ArgumentList	core		795821	1					
ANR	800628	Argument	core		795821	0					
ANR	800629	Identifier	core		795821	0					
ANR	800630	Argument	len		795821	1					
ANR	800631	Identifier	len		795821	0					
ANR	800632	ExpressionStatement	r_core_block_read ( core )	3287:8:83982:84006	795821	5	True				
ANR	800633	CallExpression	r_core_block_read ( core )		795821	0					
ANR	800634	Callee	r_core_block_read		795821	0					
ANR	800635	Identifier	r_core_block_read		795821	0					
ANR	800636	ArgumentList	core		795821	1					
ANR	800637	Argument	core		795821	0					
ANR	800638	Identifier	core		795821	0					
ANR	800639	ElseStatement	else		795821	0					
ANR	800640	CompoundStatement		784:13:19379:19379	795821	0					
ANR	800641	ExpressionStatement	"eprintf ( ""Error: Invalid hexpairs for @x:\\n"" )"	3290:7:84039:84084	795821	0	True				
ANR	800642	CallExpression	"eprintf ( ""Error: Invalid hexpairs for @x:\\n"" )"		795821	0					
ANR	800643	Callee	eprintf		795821	0					
ANR	800644	Identifier	eprintf		795821	0					
ANR	800645	ArgumentList	"""Error: Invalid hexpairs for @x:\\n"""		795821	1					
ANR	800646	Argument	"""Error: Invalid hexpairs for @x:\\n"""		795821	0					
ANR	800647	PrimaryExpression	"""Error: Invalid hexpairs for @x:\\n"""		795821	0					
ANR	800648	ExpressionStatement	free ( buf )	3292:6:84100:84110	795821	3	True				
ANR	800649	CallExpression	free ( buf )		795821	0					
ANR	800650	Callee	free		795821	0					
ANR	800651	Identifier	free		795821	0					
ANR	800652	ArgumentList	buf		795821	1					
ANR	800653	Argument	buf		795821	0					
ANR	800654	Identifier	buf		795821	0					
ANR	800655	ElseStatement	else		795821	0					
ANR	800656	CompoundStatement		788:12:19473:19473	795821	0					
ANR	800657	ExpressionStatement	"eprintf ( ""cannot allocate\\n"" )"	3294:6:84132:84161	795821	0	True				
ANR	800658	CallExpression	"eprintf ( ""cannot allocate\\n"" )"		795821	0					
ANR	800659	Callee	eprintf		795821	0					
ANR	800660	Identifier	eprintf		795821	0					
ANR	800661	ArgumentList	"""cannot allocate\\n"""		795821	1					
ANR	800662	Argument	"""cannot allocate\\n"""		795821	0					
ANR	800663	PrimaryExpression	"""cannot allocate\\n"""		795821	0					
ANR	800664	ElseStatement	else		795821	0					
ANR	800665	CompoundStatement		791:11:19530:19530	795821	0					
ANR	800666	ExpressionStatement	"eprintf ( ""Invalid @x: syntax\\n"" )"	3297:5:84188:84220	795821	0	True				
ANR	800667	CallExpression	"eprintf ( ""Invalid @x: syntax\\n"" )"		795821	0					
ANR	800668	Callee	eprintf		795821	0					
ANR	800669	Identifier	eprintf		795821	0					
ANR	800670	ArgumentList	"""Invalid @x: syntax\\n"""		795821	1					
ANR	800671	Argument	"""Invalid @x: syntax\\n"""		795821	0					
ANR	800672	PrimaryExpression	"""Invalid @x: syntax\\n"""		795821	0					
ANR	800673	BreakStatement	break ;	3299:4:84232:84237	795821	26	True				
ANR	800674	Label	case 'k' :	3300:3:84242:84250	795821	27	True				
ANR	800675	CompoundStatement		797:5:19621:19688	795821	28					
ANR	800676	IdentifierDeclStatement	"char * out = sdb_querys ( core -> sdb , NULL , 0 , ptr + ( ( ptr [ 1 ] ) ? 2 : 1 ) ) ;"	3302:5:84272:84339	795821	0	True				
ANR	800677	IdentifierDecl	"* out = sdb_querys ( core -> sdb , NULL , 0 , ptr + ( ( ptr [ 1 ] ) ? 2 : 1 ) )"		795821	0					
ANR	800678	IdentifierDeclType	char *		795821	0					
ANR	800679	Identifier	out		795821	1					
ANR	800680	AssignmentExpression	"* out = sdb_querys ( core -> sdb , NULL , 0 , ptr + ( ( ptr [ 1 ] ) ? 2 : 1 ) )"		795821	2		=			
ANR	800681	Identifier	out		795821	0					
ANR	800682	CallExpression	"sdb_querys ( core -> sdb , NULL , 0 , ptr + ( ( ptr [ 1 ] ) ? 2 : 1 ) )"		795821	1					
ANR	800683	Callee	sdb_querys		795821	0					
ANR	800684	Identifier	sdb_querys		795821	0					
ANR	800685	ArgumentList	core -> sdb		795821	1					
ANR	800686	Argument	core -> sdb		795821	0					
ANR	800687	PtrMemberAccess	core -> sdb		795821	0					
ANR	800688	Identifier	core		795821	0					
ANR	800689	Identifier	sdb		795821	1					
ANR	800690	Argument	NULL		795821	1					
ANR	800691	Identifier	NULL		795821	0					
ANR	800692	Argument	0		795821	2					
ANR	800693	PrimaryExpression	0		795821	0					
ANR	800694	Argument	ptr + ( ( ptr [ 1 ] ) ? 2 : 1 )		795821	3					
ANR	800695	AdditiveExpression	ptr + ( ( ptr [ 1 ] ) ? 2 : 1 )		795821	0		+			
ANR	800696	Identifier	ptr		795821	0					
ANR	800697	ConditionalExpression	( ptr [ 1 ] ) ? 2 : 1		795821	1					
ANR	800698	Condition	ptr [ 1 ]		795821	0					
ANR	800699	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	800700	Identifier	ptr		795821	0					
ANR	800701	PrimaryExpression	1		795821	1					
ANR	800702	PrimaryExpression	2		795821	1					
ANR	800703	PrimaryExpression	1		795821	2					
ANR	800704	IfStatement	if ( out )		795821	1					
ANR	800705	Condition	out	3303:9:84350:84352	795821	0	True				
ANR	800706	Identifier	out		795821	0					
ANR	800707	CompoundStatement		798:14:19704:19704	795821	1					
ANR	800708	ExpressionStatement	"r_core_seek ( core , r_num_math ( core -> num , out ) , 1 )"	3304:6:84363:84413	795821	0	True				
ANR	800709	CallExpression	"r_core_seek ( core , r_num_math ( core -> num , out ) , 1 )"		795821	0					
ANR	800710	Callee	r_core_seek		795821	0					
ANR	800711	Identifier	r_core_seek		795821	0					
ANR	800712	ArgumentList	core		795821	1					
ANR	800713	Argument	core		795821	0					
ANR	800714	Identifier	core		795821	0					
ANR	800715	Argument	"r_num_math ( core -> num , out )"		795821	1					
ANR	800716	CallExpression	"r_num_math ( core -> num , out )"		795821	0					
ANR	800717	Callee	r_num_math		795821	0					
ANR	800718	Identifier	r_num_math		795821	0					
ANR	800719	ArgumentList	core -> num		795821	1					
ANR	800720	Argument	core -> num		795821	0					
ANR	800721	PtrMemberAccess	core -> num		795821	0					
ANR	800722	Identifier	core		795821	0					
ANR	800723	Identifier	num		795821	1					
ANR	800724	Argument	out		795821	1					
ANR	800725	Identifier	out		795821	0					
ANR	800726	Argument	1		795821	2					
ANR	800727	PrimaryExpression	1		795821	0					
ANR	800728	ExpressionStatement	free ( out )	3305:6:84421:84431	795821	1	True				
ANR	800729	CallExpression	free ( out )		795821	0					
ANR	800730	Callee	free		795821	0					
ANR	800731	Identifier	free		795821	0					
ANR	800732	ArgumentList	out		795821	1					
ANR	800733	Argument	out		795821	0					
ANR	800734	Identifier	out		795821	0					
ANR	800735	ExpressionStatement	usemyblock = true	3306:6:84439:84456	795821	2	True				
ANR	800736	AssignmentExpression	usemyblock = true		795821	0		=			
ANR	800737	Identifier	usemyblock		795821	0					
ANR	800738	Identifier	true		795821	1					
ANR	800739	BreakStatement	break ;	3309:4:84476:84481	795821	29	True				
ANR	800740	Label	case 'o' :	3310:3:84486:84494	795821	30	True				
ANR	800741	IfStatement	if ( ptr [ 1 ] == ':' )		795821	31					
ANR	800742	Condition	ptr [ 1 ] == ':'	3311:8:84514:84526	795821	0	True				
ANR	800743	EqualityExpression	ptr [ 1 ] == ':'		795821	0		==			
ANR	800744	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	800745	Identifier	ptr		795821	0					
ANR	800746	PrimaryExpression	1		795821	1					
ANR	800747	PrimaryExpression	':'		795821	1					
ANR	800748	CompoundStatement		806:23:19878:19878	795821	1					
ANR	800749	ExpressionStatement	tmpfd = core -> io -> desc ? core -> io -> desc -> fd : - 1	3312:5:84536:84584	795821	0	True				
ANR	800750	AssignmentExpression	tmpfd = core -> io -> desc ? core -> io -> desc -> fd : - 1		795821	0		=			
ANR	800751	Identifier	tmpfd		795821	0					
ANR	800752	ConditionalExpression	core -> io -> desc ? core -> io -> desc -> fd : - 1		795821	1					
ANR	800753	Condition	core -> io -> desc		795821	0					
ANR	800754	PtrMemberAccess	core -> io -> desc		795821	0					
ANR	800755	PtrMemberAccess	core -> io		795821	0					
ANR	800756	Identifier	core		795821	0					
ANR	800757	Identifier	io		795821	1					
ANR	800758	Identifier	desc		795821	1					
ANR	800759	PtrMemberAccess	core -> io -> desc -> fd		795821	1					
ANR	800760	PtrMemberAccess	core -> io -> desc		795821	0					
ANR	800761	PtrMemberAccess	core -> io		795821	0					
ANR	800762	Identifier	core		795821	0					
ANR	800763	Identifier	io		795821	1					
ANR	800764	Identifier	desc		795821	1					
ANR	800765	Identifier	fd		795821	1					
ANR	800766	UnaryOperationExpression	- 1		795821	2					
ANR	800767	UnaryOperator	-		795821	0					
ANR	800768	PrimaryExpression	1		795821	1					
ANR	800769	ExpressionStatement	"r_io_use_fd ( core -> io , atoi ( ptr + 2 ) )"	3313:5:84591:84629	795821	1	True				
ANR	800770	CallExpression	"r_io_use_fd ( core -> io , atoi ( ptr + 2 ) )"		795821	0					
ANR	800771	Callee	r_io_use_fd		795821	0					
ANR	800772	Identifier	r_io_use_fd		795821	0					
ANR	800773	ArgumentList	core -> io		795821	1					
ANR	800774	Argument	core -> io		795821	0					
ANR	800775	PtrMemberAccess	core -> io		795821	0					
ANR	800776	Identifier	core		795821	0					
ANR	800777	Identifier	io		795821	1					
ANR	800778	Argument	atoi ( ptr + 2 )		795821	1					
ANR	800779	CallExpression	atoi ( ptr + 2 )		795821	0					
ANR	800780	Callee	atoi		795821	0					
ANR	800781	Identifier	atoi		795821	0					
ANR	800782	ArgumentList	ptr + 2		795821	1					
ANR	800783	Argument	ptr + 2		795821	0					
ANR	800784	AdditiveExpression	ptr + 2		795821	0		+			
ANR	800785	Identifier	ptr		795821	0					
ANR	800786	PrimaryExpression	2		795821	1					
ANR	800787	BreakStatement	break ;	3315:4:84641:84646	795821	32	True				
ANR	800788	Label	case 'a' :	3316:3:84651:84659	795821	33	True				
ANR	800789	IfStatement	if ( ptr [ 1 ] == ':' )		795821	34					
ANR	800790	Condition	ptr [ 1 ] == ':'	3317:8:84678:84690	795821	0	True				
ANR	800791	EqualityExpression	ptr [ 1 ] == ':'		795821	0		==			
ANR	800792	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	800793	Identifier	ptr		795821	0					
ANR	800794	PrimaryExpression	1		795821	1					
ANR	800795	PrimaryExpression	':'		795821	1					
ANR	800796	CompoundStatement		813:5:20049:20080	795821	1					
ANR	800797	IdentifierDeclStatement	"char * q = strchr ( ptr + 2 , ':' ) ;"	3318:5:84700:84731	795821	0	True				
ANR	800798	IdentifierDecl	"* q = strchr ( ptr + 2 , ':' )"		795821	0					
ANR	800799	IdentifierDeclType	char *		795821	0					
ANR	800800	Identifier	q		795821	1					
ANR	800801	AssignmentExpression	"* q = strchr ( ptr + 2 , ':' )"		795821	2		=			
ANR	800802	Identifier	q		795821	0					
ANR	800803	CallExpression	"strchr ( ptr + 2 , ':' )"		795821	1					
ANR	800804	Callee	strchr		795821	0					
ANR	800805	Identifier	strchr		795821	0					
ANR	800806	ArgumentList	ptr + 2		795821	1					
ANR	800807	Argument	ptr + 2		795821	0					
ANR	800808	AdditiveExpression	ptr + 2		795821	0		+			
ANR	800809	Identifier	ptr		795821	0					
ANR	800810	PrimaryExpression	2		795821	1					
ANR	800811	Argument	':'		795821	1					
ANR	800812	PrimaryExpression	':'		795821	0					
ANR	800813	IfStatement	if ( q )		795821	1					
ANR	800814	Condition	q	3319:9:84742:84742	795821	0	True				
ANR	800815	Identifier	q		795821	0					
ANR	800816	CompoundStatement		816:6:20118:20154	795821	1					
ANR	800817	ExpressionStatement	* q ++ = 0	3320:6:84753:84761	795821	0	True				
ANR	800818	AssignmentExpression	* q ++ = 0		795821	0		=			
ANR	800819	UnaryOperationExpression	* q ++		795821	0					
ANR	800820	UnaryOperator	*		795821	0					
ANR	800821	PostIncDecOperationExpression	q ++		795821	1					
ANR	800822	Identifier	q		795821	0					
ANR	800823	IncDec	++		795821	1					
ANR	800824	PrimaryExpression	0		795821	1					
ANR	800825	IdentifierDeclStatement	"int bits = r_num_math ( core -> num , q ) ;"	3321:6:84769:84805	795821	1	True				
ANR	800826	IdentifierDecl	"bits = r_num_math ( core -> num , q )"		795821	0					
ANR	800827	IdentifierDeclType	int		795821	0					
ANR	800828	Identifier	bits		795821	1					
ANR	800829	AssignmentExpression	"bits = r_num_math ( core -> num , q )"		795821	2		=			
ANR	800830	Identifier	bits		795821	0					
ANR	800831	CallExpression	"r_num_math ( core -> num , q )"		795821	1					
ANR	800832	Callee	r_num_math		795821	0					
ANR	800833	Identifier	r_num_math		795821	0					
ANR	800834	ArgumentList	core -> num		795821	1					
ANR	800835	Argument	core -> num		795821	0					
ANR	800836	PtrMemberAccess	core -> num		795821	0					
ANR	800837	Identifier	core		795821	0					
ANR	800838	Identifier	num		795821	1					
ANR	800839	Argument	q		795821	1					
ANR	800840	Identifier	q		795821	0					
ANR	800841	ExpressionStatement	"is_bits_set = set_tmp_bits ( core , bits , & tmpbits )"	3322:6:84813:84862	795821	2	True				
ANR	800842	AssignmentExpression	"is_bits_set = set_tmp_bits ( core , bits , & tmpbits )"		795821	0		=			
ANR	800843	Identifier	is_bits_set		795821	0					
ANR	800844	CallExpression	"set_tmp_bits ( core , bits , & tmpbits )"		795821	1					
ANR	800845	Callee	set_tmp_bits		795821	0					
ANR	800846	Identifier	set_tmp_bits		795821	0					
ANR	800847	ArgumentList	core		795821	1					
ANR	800848	Argument	core		795821	0					
ANR	800849	Identifier	core		795821	0					
ANR	800850	Argument	bits		795821	1					
ANR	800851	Identifier	bits		795821	0					
ANR	800852	Argument	& tmpbits		795821	2					
ANR	800853	UnaryOperationExpression	& tmpbits		795821	0					
ANR	800854	UnaryOperator	&		795821	0					
ANR	800855	Identifier	tmpbits		795821	1					
ANR	800856	ExpressionStatement	"is_arch_set = set_tmp_arch ( core , ptr + 2 , & tmpasm )"	3324:5:84876:84927	795821	2	True				
ANR	800857	AssignmentExpression	"is_arch_set = set_tmp_arch ( core , ptr + 2 , & tmpasm )"		795821	0		=			
ANR	800858	Identifier	is_arch_set		795821	0					
ANR	800859	CallExpression	"set_tmp_arch ( core , ptr + 2 , & tmpasm )"		795821	1					
ANR	800860	Callee	set_tmp_arch		795821	0					
ANR	800861	Identifier	set_tmp_arch		795821	0					
ANR	800862	ArgumentList	core		795821	1					
ANR	800863	Argument	core		795821	0					
ANR	800864	Identifier	core		795821	0					
ANR	800865	Argument	ptr + 2		795821	1					
ANR	800866	AdditiveExpression	ptr + 2		795821	0		+			
ANR	800867	Identifier	ptr		795821	0					
ANR	800868	PrimaryExpression	2		795821	1					
ANR	800869	Argument	& tmpasm		795821	2					
ANR	800870	UnaryOperationExpression	& tmpasm		795821	0					
ANR	800871	UnaryOperator	&		795821	0					
ANR	800872	Identifier	tmpasm		795821	1					
ANR	800873	ElseStatement	else		795821	0					
ANR	800874	CompoundStatement		820:11:20289:20289	795821	0					
ANR	800875	ExpressionStatement	"eprintf ( ""Usage: pd 10 @a:arm:32\\n"" )"	3326:5:84947:84983	795821	0	True				
ANR	800876	CallExpression	"eprintf ( ""Usage: pd 10 @a:arm:32\\n"" )"		795821	0					
ANR	800877	Callee	eprintf		795821	0					
ANR	800878	Identifier	eprintf		795821	0					
ANR	800879	ArgumentList	"""Usage: pd 10 @a:arm:32\\n"""		795821	1					
ANR	800880	Argument	"""Usage: pd 10 @a:arm:32\\n"""		795821	0					
ANR	800881	PrimaryExpression	"""Usage: pd 10 @a:arm:32\\n"""		795821	0					
ANR	800882	BreakStatement	break ;	3328:4:84995:85000	795821	35	True				
ANR	800883	Label	case 's' :	3329:3:85005:85013	795821	36	True				
ANR	800884	CompoundStatement		828:5:20463:20515	795821	37					
ANR	800885	ExpressionStatement	len = strlen ( ptr + 2 )	3331:5:85049:85071	795821	0	True				
ANR	800886	AssignmentExpression	len = strlen ( ptr + 2 )		795821	0		=			
ANR	800887	Identifier	len		795821	0					
ANR	800888	CallExpression	strlen ( ptr + 2 )		795821	1					
ANR	800889	Callee	strlen		795821	0					
ANR	800890	Identifier	strlen		795821	0					
ANR	800891	ArgumentList	ptr + 2		795821	1					
ANR	800892	Argument	ptr + 2		795821	0					
ANR	800893	AdditiveExpression	ptr + 2		795821	0		+			
ANR	800894	Identifier	ptr		795821	0					
ANR	800895	PrimaryExpression	2		795821	1					
ANR	800896	ExpressionStatement	"r_core_block_size ( core , len )"	3332:5:85078:85107	795821	1	True				
ANR	800897	CallExpression	"r_core_block_size ( core , len )"		795821	0					
ANR	800898	Callee	r_core_block_size		795821	0					
ANR	800899	Identifier	r_core_block_size		795821	0					
ANR	800900	ArgumentList	core		795821	1					
ANR	800901	Argument	core		795821	0					
ANR	800902	Identifier	core		795821	0					
ANR	800903	Argument	len		795821	1					
ANR	800904	Identifier	len		795821	0					
ANR	800905	IdentifierDeclStatement	const ut8 * buf = ( const ut8 * ) r_str_trim_ro ( ptr + 2 ) ;	3333:5:85114:85166	795821	2	True				
ANR	800906	IdentifierDecl	* buf = ( const ut8 * ) r_str_trim_ro ( ptr + 2 )		795821	0					
ANR	800907	IdentifierDeclType	const ut8 *		795821	0					
ANR	800908	Identifier	buf		795821	1					
ANR	800909	AssignmentExpression	* buf = ( const ut8 * ) r_str_trim_ro ( ptr + 2 )		795821	2		=			
ANR	800910	Identifier	buf		795821	0					
ANR	800911	CastExpression	( const ut8 * ) r_str_trim_ro ( ptr + 2 )		795821	1					
ANR	800912	CastTarget	const ut8 *		795821	0					
ANR	800913	CallExpression	r_str_trim_ro ( ptr + 2 )		795821	1					
ANR	800914	Callee	r_str_trim_ro		795821	0					
ANR	800915	Identifier	r_str_trim_ro		795821	0					
ANR	800916	ArgumentList	ptr + 2		795821	1					
ANR	800917	Argument	ptr + 2		795821	0					
ANR	800918	AdditiveExpression	ptr + 2		795821	0		+			
ANR	800919	Identifier	ptr		795821	0					
ANR	800920	PrimaryExpression	2		795821	1					
ANR	800921	IfStatement	if ( len > 0 )		795821	3					
ANR	800922	Condition	len > 0	3335:9:85178:85184	795821	0	True				
ANR	800923	RelationalExpression	len > 0		795821	0		>			
ANR	800924	Identifier	len		795821	0					
ANR	800925	PrimaryExpression	0		795821	1					
ANR	800926	CompoundStatement		832:6:20596:20654	795821	1					
ANR	800927	IdentifierDeclStatement	"RBuffer * b = r_buf_new_with_bytes ( buf , len ) ;"	3336:6:85195:85239	795821	0	True				
ANR	800928	IdentifierDecl	"* b = r_buf_new_with_bytes ( buf , len )"		795821	0					
ANR	800929	IdentifierDeclType	RBuffer *		795821	0					
ANR	800930	Identifier	b		795821	1					
ANR	800931	AssignmentExpression	"* b = r_buf_new_with_bytes ( buf , len )"		795821	2		=			
ANR	800932	Identifier	b		795821	0					
ANR	800933	CallExpression	"r_buf_new_with_bytes ( buf , len )"		795821	1					
ANR	800934	Callee	r_buf_new_with_bytes		795821	0					
ANR	800935	Identifier	r_buf_new_with_bytes		795821	0					
ANR	800936	ArgumentList	buf		795821	1					
ANR	800937	Argument	buf		795821	0					
ANR	800938	Identifier	buf		795821	0					
ANR	800939	Argument	len		795821	1					
ANR	800940	Identifier	len		795821	0					
ANR	800941	IdentifierDeclStatement	"RIODesc * d = r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 ) ;"	3337:6:85247:85305	795821	1	True				
ANR	800942	IdentifierDecl	"* d = r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 )"		795821	0					
ANR	800943	IdentifierDeclType	RIODesc *		795821	0					
ANR	800944	Identifier	d		795821	1					
ANR	800945	AssignmentExpression	"* d = r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 )"		795821	2		=			
ANR	800946	Identifier	d		795821	0					
ANR	800947	CallExpression	"r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 )"		795821	1					
ANR	800948	Callee	r_io_open_buffer		795821	0					
ANR	800949	Identifier	r_io_open_buffer		795821	0					
ANR	800950	ArgumentList	core -> io		795821	1					
ANR	800951	Argument	core -> io		795821	0					
ANR	800952	PtrMemberAccess	core -> io		795821	0					
ANR	800953	Identifier	core		795821	0					
ANR	800954	Identifier	io		795821	1					
ANR	800955	Argument	b		795821	1					
ANR	800956	Identifier	b		795821	0					
ANR	800957	Argument	R_PERM_RWX		795821	2					
ANR	800958	Identifier	R_PERM_RWX		795821	0					
ANR	800959	Argument	0		795821	3					
ANR	800960	PrimaryExpression	0		795821	0					
ANR	800961	IfStatement	if ( ! core -> io -> va )		795821	2					
ANR	800962	Condition	! core -> io -> va	3338:10:85317:85329	795821	0	True				
ANR	800963	UnaryOperationExpression	! core -> io -> va		795821	0					
ANR	800964	UnaryOperator	!		795821	0					
ANR	800965	PtrMemberAccess	core -> io -> va		795821	1					
ANR	800966	PtrMemberAccess	core -> io		795821	0					
ANR	800967	Identifier	core		795821	0					
ANR	800968	Identifier	io		795821	1					
ANR	800969	Identifier	va		795821	1					
ANR	800970	CompoundStatement		833:25:20681:20681	795821	1					
ANR	800971	ExpressionStatement	"r_config_set_i ( core -> config , ""io.va"" , 1 )"	3339:7:85341:85382	795821	0	True				
ANR	800972	CallExpression	"r_config_set_i ( core -> config , ""io.va"" , 1 )"		795821	0					
ANR	800973	Callee	r_config_set_i		795821	0					
ANR	800974	Identifier	r_config_set_i		795821	0					
ANR	800975	ArgumentList	core -> config		795821	1					
ANR	800976	Argument	core -> config		795821	0					
ANR	800977	PtrMemberAccess	core -> config		795821	0					
ANR	800978	Identifier	core		795821	0					
ANR	800979	Identifier	config		795821	1					
ANR	800980	Argument	"""io.va"""		795821	1					
ANR	800981	PrimaryExpression	"""io.va"""		795821	0					
ANR	800982	Argument	1		795821	2					
ANR	800983	PrimaryExpression	1		795821	0					
ANR	800984	IfStatement	if ( d )		795821	3					
ANR	800985	Condition	d	3341:10:85402:85402	795821	0	True				
ANR	800986	Identifier	d		795821	0					
ANR	800987	CompoundStatement		836:13:20754:20754	795821	1					
ANR	800988	IfStatement	if ( tmpdesc )		795821	0					
ANR	800989	Condition	tmpdesc	3342:11:85418:85424	795821	0	True				
ANR	800990	Identifier	tmpdesc		795821	0					
ANR	800991	CompoundStatement		837:20:20776:20776	795821	1					
ANR	800992	ExpressionStatement	r_io_desc_close ( tmpdesc )	3343:8:85437:85462	795821	0	True				
ANR	800993	CallExpression	r_io_desc_close ( tmpdesc )		795821	0					
ANR	800994	Callee	r_io_desc_close		795821	0					
ANR	800995	Identifier	r_io_desc_close		795821	0					
ANR	800996	ArgumentList	tmpdesc		795821	1					
ANR	800997	Argument	tmpdesc		795821	0					
ANR	800998	Identifier	tmpdesc		795821	0					
ANR	800999	ExpressionStatement	tmpdesc = d	3345:7:85480:85491	795821	1	True				
ANR	801000	AssignmentExpression	tmpdesc = d		795821	0		=			
ANR	801001	Identifier	tmpdesc		795821	0					
ANR	801002	Identifier	d		795821	1					
ANR	801003	IfStatement	if ( pamode )		795821	2					
ANR	801004	Condition	pamode	3346:11:85504:85509	795821	0	True				
ANR	801005	Identifier	pamode		795821	0					
ANR	801006	CompoundStatement		841:19:20861:20861	795821	1					
ANR	801007	ExpressionStatement	"r_config_set_i ( core -> config , ""io.va"" , 1 )"	3347:8:85522:85563	795821	0	True				
ANR	801008	CallExpression	"r_config_set_i ( core -> config , ""io.va"" , 1 )"		795821	0					
ANR	801009	Callee	r_config_set_i		795821	0					
ANR	801010	Identifier	r_config_set_i		795821	0					
ANR	801011	ArgumentList	core -> config		795821	1					
ANR	801012	Argument	core -> config		795821	0					
ANR	801013	PtrMemberAccess	core -> config		795821	0					
ANR	801014	Identifier	core		795821	0					
ANR	801015	Identifier	config		795821	1					
ANR	801016	Argument	"""io.va"""		795821	1					
ANR	801017	PrimaryExpression	"""io.va"""		795821	0					
ANR	801018	Argument	1		795821	2					
ANR	801019	PrimaryExpression	1		795821	0					
ANR	801020	ExpressionStatement	"r_io_map_new ( core -> io , d -> fd , d -> perm , 0 , core -> offset , r_buf_size ( b ) )"	3349:7:85581:85653	795821	3	True				
ANR	801021	CallExpression	"r_io_map_new ( core -> io , d -> fd , d -> perm , 0 , core -> offset , r_buf_size ( b ) )"		795821	0					
ANR	801022	Callee	r_io_map_new		795821	0					
ANR	801023	Identifier	r_io_map_new		795821	0					
ANR	801024	ArgumentList	core -> io		795821	1					
ANR	801025	Argument	core -> io		795821	0					
ANR	801026	PtrMemberAccess	core -> io		795821	0					
ANR	801027	Identifier	core		795821	0					
ANR	801028	Identifier	io		795821	1					
ANR	801029	Argument	d -> fd		795821	1					
ANR	801030	PtrMemberAccess	d -> fd		795821	0					
ANR	801031	Identifier	d		795821	0					
ANR	801032	Identifier	fd		795821	1					
ANR	801033	Argument	d -> perm		795821	2					
ANR	801034	PtrMemberAccess	d -> perm		795821	0					
ANR	801035	Identifier	d		795821	0					
ANR	801036	Identifier	perm		795821	1					
ANR	801037	Argument	0		795821	3					
ANR	801038	PrimaryExpression	0		795821	0					
ANR	801039	Argument	core -> offset		795821	4					
ANR	801040	PtrMemberAccess	core -> offset		795821	0					
ANR	801041	Identifier	core		795821	0					
ANR	801042	Identifier	offset		795821	1					
ANR	801043	Argument	r_buf_size ( b )		795821	5					
ANR	801044	CallExpression	r_buf_size ( b )		795821	0					
ANR	801045	Callee	r_buf_size		795821	0					
ANR	801046	Identifier	r_buf_size		795821	0					
ANR	801047	ArgumentList	b		795821	1					
ANR	801048	Argument	b		795821	0					
ANR	801049	Identifier	b		795821	0					
ANR	801050	ExpressionStatement	"r_core_block_size ( core , len )"	3350:7:85662:85691	795821	4	True				
ANR	801051	CallExpression	"r_core_block_size ( core , len )"		795821	0					
ANR	801052	Callee	r_core_block_size		795821	0					
ANR	801053	Identifier	r_core_block_size		795821	0					
ANR	801054	ArgumentList	core		795821	1					
ANR	801055	Argument	core		795821	0					
ANR	801056	Identifier	core		795821	0					
ANR	801057	Argument	len		795821	1					
ANR	801058	Identifier	len		795821	0					
ANR	801059	BreakStatement	break ;	3355:0:85750:85755	795821	38	True				
ANR	801060	Label	default :	3356:3:85760:85767	795821	39	True				
ANR	801061	Identifier	default		795821	0					
ANR	801062	GotoStatement	goto ignore ;	3357:4:85773:85784	795821	40	True				
ANR	801063	Identifier	ignore		795821	0					
ANR	801064	ExpressionStatement	* ptr = '@'	3359:3:85794:85804	795821	1	True				
ANR	801065	AssignmentExpression	* ptr = '@'		795821	0		=			
ANR	801066	UnaryOperationExpression	* ptr		795821	0					
ANR	801067	UnaryOperator	*		795821	0					
ANR	801068	Identifier	ptr		795821	1					
ANR	801069	PrimaryExpression	'@'		795821	1					
ANR	801070	IdentifierDeclStatement	char * trim = ptr - 2 ;	3362:3:85874:85894	795821	2	True				
ANR	801071	IdentifierDecl	* trim = ptr - 2		795821	0					
ANR	801072	IdentifierDeclType	char *		795821	0					
ANR	801073	Identifier	trim		795821	1					
ANR	801074	AssignmentExpression	* trim = ptr - 2		795821	2		=			
ANR	801075	Identifier	trim		795821	0					
ANR	801076	AdditiveExpression	ptr - 2		795821	1		-			
ANR	801077	Identifier	ptr		795821	0					
ANR	801078	PrimaryExpression	2		795821	1					
ANR	801079	WhileStatement	while ( trim > cmd )		795821	3					
ANR	801080	Condition	trim > cmd	3363:10:85906:85915	795821	0	True				
ANR	801081	RelationalExpression	trim > cmd		795821	0		>			
ANR	801082	Identifier	trim		795821	0					
ANR	801083	Identifier	cmd		795821	1					
ANR	801084	CompoundStatement		858:22:21267:21267	795821	1					
ANR	801085	IfStatement	if ( ! IS_WHITESPACE ( * trim ) )		795821	0					
ANR	801086	Condition	! IS_WHITESPACE ( * trim )	3364:8:85928:85949	795821	0	True				
ANR	801087	UnaryOperationExpression	! IS_WHITESPACE ( * trim )		795821	0					
ANR	801088	UnaryOperator	!		795821	0					
ANR	801089	CallExpression	IS_WHITESPACE ( * trim )		795821	1					
ANR	801090	Callee	IS_WHITESPACE		795821	0					
ANR	801091	Identifier	IS_WHITESPACE		795821	0					
ANR	801092	ArgumentList	* trim		795821	1					
ANR	801093	Argument	* trim		795821	0					
ANR	801094	UnaryOperationExpression	* trim		795821	0					
ANR	801095	UnaryOperator	*		795821	0					
ANR	801096	Identifier	trim		795821	1					
ANR	801097	CompoundStatement		859:32:21301:21301	795821	1					
ANR	801098	BreakStatement	break ;	3365:5:85959:85964	795821	0	True				
ANR	801099	ExpressionStatement	* trim = 0	3367:4:85976:85985	795821	1	True				
ANR	801100	AssignmentExpression	* trim = 0		795821	0		=			
ANR	801101	UnaryOperationExpression	* trim		795821	0					
ANR	801102	UnaryOperator	*		795821	0					
ANR	801103	Identifier	trim		795821	1					
ANR	801104	PrimaryExpression	0		795821	1					
ANR	801105	ExpressionStatement	trim --	3368:4:85991:85997	795821	2	True				
ANR	801106	PostIncDecOperationExpression	trim --		795821	0					
ANR	801107	Identifier	trim		795821	0					
ANR	801108	IncDec	--		795821	1					
ANR	801109	GotoStatement	goto next_arroba ;	3370:3:86007:86023	795821	4	True				
ANR	801110	Identifier	next_arroba		795821	0					
ANR	801111	Label	ignore :	3372:0:86029:86035	795821	21	True				
ANR	801112	Identifier	ignore		795821	0					
ANR	801113	ExpressionStatement	ptr = r_str_trim_head ( ptr + 1 ) - 1	3373:2:86039:86074	795821	22	True				
ANR	801114	AssignmentExpression	ptr = r_str_trim_head ( ptr + 1 ) - 1		795821	0		=			
ANR	801115	Identifier	ptr		795821	0					
ANR	801116	AdditiveExpression	r_str_trim_head ( ptr + 1 ) - 1		795821	1		-			
ANR	801117	CallExpression	r_str_trim_head ( ptr + 1 )		795821	0					
ANR	801118	Callee	r_str_trim_head		795821	0					
ANR	801119	Identifier	r_str_trim_head		795821	0					
ANR	801120	ArgumentList	ptr + 1		795821	1					
ANR	801121	Argument	ptr + 1		795821	0					
ANR	801122	AdditiveExpression	ptr + 1		795821	0		+			
ANR	801123	Identifier	ptr		795821	0					
ANR	801124	PrimaryExpression	1		795821	1					
ANR	801125	PrimaryExpression	1		795821	1					
ANR	801126	ExpressionStatement	cmd = r_str_trim_nc ( cmd )	3374:2:86078:86103	795821	23	True				
ANR	801127	AssignmentExpression	cmd = r_str_trim_nc ( cmd )		795821	0		=			
ANR	801128	Identifier	cmd		795821	0					
ANR	801129	CallExpression	r_str_trim_nc ( cmd )		795821	1					
ANR	801130	Callee	r_str_trim_nc		795821	0					
ANR	801131	Identifier	r_str_trim_nc		795821	0					
ANR	801132	ArgumentList	cmd		795821	1					
ANR	801133	Argument	cmd		795821	0					
ANR	801134	Identifier	cmd		795821	0					
ANR	801135	IfStatement	if ( ptr2 )		795821	24					
ANR	801136	Condition	ptr2	3375:6:86111:86114	795821	0	True				
ANR	801137	Identifier	ptr2		795821	0					
ANR	801138	CompoundStatement		870:12:21466:21466	795821	1					
ANR	801139	IfStatement	"if ( strlen ( ptr + 1 ) == 13 && strlen ( ptr2 + 1 ) == 6 && ! memcmp ( ptr + 1 , ""0x"" , 2 ) && ! memcmp ( ptr2 + 1 , ""0x"" , 2 ) )"		795821	0					
ANR	801140	Condition	"strlen ( ptr + 1 ) == 13 && strlen ( ptr2 + 1 ) == 6 && ! memcmp ( ptr + 1 , ""0x"" , 2 ) && ! memcmp ( ptr2 + 1 , ""0x"" , 2 )"	3376:7:86126:86242	795821	0	True				
ANR	801141	AndExpression	"strlen ( ptr + 1 ) == 13 && strlen ( ptr2 + 1 ) == 6 && ! memcmp ( ptr + 1 , ""0x"" , 2 ) && ! memcmp ( ptr2 + 1 , ""0x"" , 2 )"		795821	0		&&			
ANR	801142	EqualityExpression	strlen ( ptr + 1 ) == 13		795821	0		==			
ANR	801143	CallExpression	strlen ( ptr + 1 )		795821	0					
ANR	801144	Callee	strlen		795821	0					
ANR	801145	Identifier	strlen		795821	0					
ANR	801146	ArgumentList	ptr + 1		795821	1					
ANR	801147	Argument	ptr + 1		795821	0					
ANR	801148	AdditiveExpression	ptr + 1		795821	0		+			
ANR	801149	Identifier	ptr		795821	0					
ANR	801150	PrimaryExpression	1		795821	1					
ANR	801151	PrimaryExpression	13		795821	1					
ANR	801152	AndExpression	"strlen ( ptr2 + 1 ) == 6 && ! memcmp ( ptr + 1 , ""0x"" , 2 ) && ! memcmp ( ptr2 + 1 , ""0x"" , 2 )"		795821	1		&&			
ANR	801153	EqualityExpression	strlen ( ptr2 + 1 ) == 6		795821	0		==			
ANR	801154	CallExpression	strlen ( ptr2 + 1 )		795821	0					
ANR	801155	Callee	strlen		795821	0					
ANR	801156	Identifier	strlen		795821	0					
ANR	801157	ArgumentList	ptr2 + 1		795821	1					
ANR	801158	Argument	ptr2 + 1		795821	0					
ANR	801159	AdditiveExpression	ptr2 + 1		795821	0		+			
ANR	801160	Identifier	ptr2		795821	0					
ANR	801161	PrimaryExpression	1		795821	1					
ANR	801162	PrimaryExpression	6		795821	1					
ANR	801163	AndExpression	"! memcmp ( ptr + 1 , ""0x"" , 2 ) && ! memcmp ( ptr2 + 1 , ""0x"" , 2 )"		795821	1		&&			
ANR	801164	UnaryOperationExpression	"! memcmp ( ptr + 1 , ""0x"" , 2 )"		795821	0					
ANR	801165	UnaryOperator	!		795821	0					
ANR	801166	CallExpression	"memcmp ( ptr + 1 , ""0x"" , 2 )"		795821	1					
ANR	801167	Callee	memcmp		795821	0					
ANR	801168	Identifier	memcmp		795821	0					
ANR	801169	ArgumentList	ptr + 1		795821	1					
ANR	801170	Argument	ptr + 1		795821	0					
ANR	801171	AdditiveExpression	ptr + 1		795821	0		+			
ANR	801172	Identifier	ptr		795821	0					
ANR	801173	PrimaryExpression	1		795821	1					
ANR	801174	Argument	"""0x"""		795821	1					
ANR	801175	PrimaryExpression	"""0x"""		795821	0					
ANR	801176	Argument	2		795821	2					
ANR	801177	PrimaryExpression	2		795821	0					
ANR	801178	UnaryOperationExpression	"! memcmp ( ptr2 + 1 , ""0x"" , 2 )"		795821	1					
ANR	801179	UnaryOperator	!		795821	0					
ANR	801180	CallExpression	"memcmp ( ptr2 + 1 , ""0x"" , 2 )"		795821	1					
ANR	801181	Callee	memcmp		795821	0					
ANR	801182	Identifier	memcmp		795821	0					
ANR	801183	ArgumentList	ptr2 + 1		795821	1					
ANR	801184	Argument	ptr2 + 1		795821	0					
ANR	801185	AdditiveExpression	ptr2 + 1		795821	0		+			
ANR	801186	Identifier	ptr2		795821	0					
ANR	801187	PrimaryExpression	1		795821	1					
ANR	801188	Argument	"""0x"""		795821	1					
ANR	801189	PrimaryExpression	"""0x"""		795821	0					
ANR	801190	Argument	2		795821	2					
ANR	801191	PrimaryExpression	2		795821	0					
ANR	801192	CompoundStatement		873:33:21594:21594	795821	1					
ANR	801193	ElseStatement	else		795821	0					
ANR	801194	IfStatement	if ( strlen ( ptr + 1 ) == 9 && strlen ( ptr2 + 1 ) == 4 )		795821	0					
ANR	801195	Condition	strlen ( ptr + 1 ) == 9 && strlen ( ptr2 + 1 ) == 4	3380:14:86285:86331	795821	0	True				
ANR	801196	AndExpression	strlen ( ptr + 1 ) == 9 && strlen ( ptr2 + 1 ) == 4		795821	0		&&			
ANR	801197	EqualityExpression	strlen ( ptr + 1 ) == 9		795821	0		==			
ANR	801198	CallExpression	strlen ( ptr + 1 )		795821	0					
ANR	801199	Callee	strlen		795821	0					
ANR	801200	Identifier	strlen		795821	0					
ANR	801201	ArgumentList	ptr + 1		795821	1					
ANR	801202	Argument	ptr + 1		795821	0					
ANR	801203	AdditiveExpression	ptr + 1		795821	0		+			
ANR	801204	Identifier	ptr		795821	0					
ANR	801205	PrimaryExpression	1		795821	1					
ANR	801206	PrimaryExpression	9		795821	1					
ANR	801207	EqualityExpression	strlen ( ptr2 + 1 ) == 4		795821	1		==			
ANR	801208	CallExpression	strlen ( ptr2 + 1 )		795821	0					
ANR	801209	Callee	strlen		795821	0					
ANR	801210	Identifier	strlen		795821	0					
ANR	801211	ArgumentList	ptr2 + 1		795821	1					
ANR	801212	Argument	ptr2 + 1		795821	0					
ANR	801213	AdditiveExpression	ptr2 + 1		795821	0		+			
ANR	801214	Identifier	ptr2		795821	0					
ANR	801215	PrimaryExpression	1		795821	1					
ANR	801216	PrimaryExpression	4		795821	1					
ANR	801217	CompoundStatement		875:63:21683:21683	795821	1					
ANR	801218	ElseStatement	else		795821	0					
ANR	801219	CompoundStatement		877:10:21715:21715	795821	0					
ANR	801220	ExpressionStatement	* ptr2 = '\\0'	3383:4:86372:86384	795821	0	True				
ANR	801221	AssignmentExpression	* ptr2 = '\\0'		795821	0		=			
ANR	801222	UnaryOperationExpression	* ptr2		795821	0					
ANR	801223	UnaryOperator	*		795821	0					
ANR	801224	Identifier	ptr2		795821	1					
ANR	801225	PrimaryExpression	'\\0'		795821	1					
ANR	801226	IfStatement	if ( ! ptr2 [ 1 ] )		795821	1					
ANR	801227	Condition	! ptr2 [ 1 ]	3384:8:86394:86401	795821	0	True				
ANR	801228	UnaryOperationExpression	! ptr2 [ 1 ]		795821	0					
ANR	801229	UnaryOperator	!		795821	0					
ANR	801230	ArrayIndexing	ptr2 [ 1 ]		795821	1					
ANR	801231	Identifier	ptr2		795821	0					
ANR	801232	PrimaryExpression	1		795821	1					
ANR	801233	CompoundStatement		879:18:21753:21753	795821	1					
ANR	801234	GotoStatement	goto fail ;	3385:5:86411:86420	795821	0	True				
ANR	801235	Identifier	fail		795821	0					
ANR	801236	ExpressionStatement	"r_core_block_size ( core , r_num_math ( core -> num , ptr2 + 1 ) )"	3387:4:86432:86496	795821	2	True				
ANR	801237	CallExpression	"r_core_block_size ( core , r_num_math ( core -> num , ptr2 + 1 ) )"		795821	0					
ANR	801238	Callee	r_core_block_size		795821	0					
ANR	801239	Identifier	r_core_block_size		795821	0					
ANR	801240	ArgumentList	core		795821	1					
ANR	801241	Argument	core		795821	0					
ANR	801242	Identifier	core		795821	0					
ANR	801243	Argument	"r_num_math ( core -> num , ptr2 + 1 )"		795821	1					
ANR	801244	CallExpression	"r_num_math ( core -> num , ptr2 + 1 )"		795821	0					
ANR	801245	Callee	r_num_math		795821	0					
ANR	801246	Identifier	r_num_math		795821	0					
ANR	801247	ArgumentList	core -> num		795821	1					
ANR	801248	Argument	core -> num		795821	0					
ANR	801249	PtrMemberAccess	core -> num		795821	0					
ANR	801250	Identifier	core		795821	0					
ANR	801251	Identifier	num		795821	1					
ANR	801252	Argument	ptr2 + 1		795821	1					
ANR	801253	AdditiveExpression	ptr2 + 1		795821	0		+			
ANR	801254	Identifier	ptr2		795821	0					
ANR	801255	PrimaryExpression	1		795821	1					
ANR	801256	ExpressionStatement	offstr = r_str_trim_head ( ptr + 1 )	3392:2:86510:86544	795821	25	True				
ANR	801257	AssignmentExpression	offstr = r_str_trim_head ( ptr + 1 )		795821	0		=			
ANR	801258	Identifier	offstr		795821	0					
ANR	801259	CallExpression	r_str_trim_head ( ptr + 1 )		795821	1					
ANR	801260	Callee	r_str_trim_head		795821	0					
ANR	801261	Identifier	r_str_trim_head		795821	0					
ANR	801262	ArgumentList	ptr + 1		795821	1					
ANR	801263	Argument	ptr + 1		795821	0					
ANR	801264	AdditiveExpression	ptr + 1		795821	0		+			
ANR	801265	Identifier	ptr		795821	0					
ANR	801266	PrimaryExpression	1		795821	1					
ANR	801267	ExpressionStatement	"addr = r_num_math ( core -> num , offstr )"	3394:2:86549:86586	795821	26	True				
ANR	801268	AssignmentExpression	"addr = r_num_math ( core -> num , offstr )"		795821	0		=			
ANR	801269	Identifier	addr		795821	0					
ANR	801270	CallExpression	"r_num_math ( core -> num , offstr )"		795821	1					
ANR	801271	Callee	r_num_math		795821	0					
ANR	801272	Identifier	r_num_math		795821	0					
ANR	801273	ArgumentList	core -> num		795821	1					
ANR	801274	Argument	core -> num		795821	0					
ANR	801275	PtrMemberAccess	core -> num		795821	0					
ANR	801276	Identifier	core		795821	0					
ANR	801277	Identifier	num		795821	1					
ANR	801278	Argument	offstr		795821	1					
ANR	801279	Identifier	offstr		795821	0					
ANR	801280	ExpressionStatement	addr_is_set = true	3395:2:86590:86608	795821	27	True				
ANR	801281	AssignmentExpression	addr_is_set = true		795821	0		=			
ANR	801282	Identifier	addr_is_set		795821	0					
ANR	801283	Identifier	true		795821	1					
ANR	801284	IfStatement	if ( isalpha ( ( ut8 ) ptr [ 1 ] ) && ! addr )		795821	28					
ANR	801285	Condition	isalpha ( ( ut8 ) ptr [ 1 ] ) && ! addr	3397:6:86617:86646	795821	0	True				
ANR	801286	AndExpression	isalpha ( ( ut8 ) ptr [ 1 ] ) && ! addr		795821	0		&&			
ANR	801287	CallExpression	isalpha ( ( ut8 ) ptr [ 1 ] )		795821	0					
ANR	801288	Callee	isalpha		795821	0					
ANR	801289	Identifier	isalpha		795821	0					
ANR	801290	ArgumentList	( ut8 ) ptr [ 1 ]		795821	1					
ANR	801291	Argument	( ut8 ) ptr [ 1 ]		795821	0					
ANR	801292	CastExpression	( ut8 ) ptr [ 1 ]		795821	0					
ANR	801293	CastTarget	ut8		795821	0					
ANR	801294	ArrayIndexing	ptr [ 1 ]		795821	1					
ANR	801295	Identifier	ptr		795821	0					
ANR	801296	PrimaryExpression	1		795821	1					
ANR	801297	UnaryOperationExpression	! addr		795821	1					
ANR	801298	UnaryOperator	!		795821	0					
ANR	801299	Identifier	addr		795821	1					
ANR	801300	CompoundStatement		892:38:21998:21998	795821	1					
ANR	801301	IfStatement	"if ( ! r_flag_get ( core -> flags , ptr + 1 ) )"		795821	0					
ANR	801302	Condition	"! r_flag_get ( core -> flags , ptr + 1 )"	3398:7:86658:86691	795821	0	True				
ANR	801303	UnaryOperationExpression	"! r_flag_get ( core -> flags , ptr + 1 )"		795821	0					
ANR	801304	UnaryOperator	!		795821	0					
ANR	801305	CallExpression	"r_flag_get ( core -> flags , ptr + 1 )"		795821	1					
ANR	801306	Callee	r_flag_get		795821	0					
ANR	801307	Identifier	r_flag_get		795821	0					
ANR	801308	ArgumentList	core -> flags		795821	1					
ANR	801309	Argument	core -> flags		795821	0					
ANR	801310	PtrMemberAccess	core -> flags		795821	0					
ANR	801311	Identifier	core		795821	0					
ANR	801312	Identifier	flags		795821	1					
ANR	801313	Argument	ptr + 1		795821	1					
ANR	801314	AdditiveExpression	ptr + 1		795821	0		+			
ANR	801315	Identifier	ptr		795821	0					
ANR	801316	PrimaryExpression	1		795821	1					
ANR	801317	CompoundStatement		893:43:22043:22043	795821	1					
ANR	801318	ExpressionStatement	"eprintf ( ""Invalid address (%s)\\n"" , ptr + 1 )"	3399:4:86700:86743	795821	0	True				
ANR	801319	CallExpression	"eprintf ( ""Invalid address (%s)\\n"" , ptr + 1 )"		795821	0					
ANR	801320	Callee	eprintf		795821	0					
ANR	801321	Identifier	eprintf		795821	0					
ANR	801322	ArgumentList	"""Invalid address (%s)\\n"""		795821	1					
ANR	801323	Argument	"""Invalid address (%s)\\n"""		795821	0					
ANR	801324	PrimaryExpression	"""Invalid address (%s)\\n"""		795821	0					
ANR	801325	Argument	ptr + 1		795821	1					
ANR	801326	AdditiveExpression	ptr + 1		795821	0		+			
ANR	801327	Identifier	ptr		795821	0					
ANR	801328	PrimaryExpression	1		795821	1					
ANR	801329	GotoStatement	goto fail ;	3400:4:86749:86758	795821	1	True				
ANR	801330	Identifier	fail		795821	0					
ANR	801331	ElseStatement	else		795821	0					
ANR	801332	CompoundStatement		898:3:22128:22145	795821	0					
ANR	801333	IdentifierDeclStatement	char ch = * offstr ;	3403:3:86779:86796	795821	0	True				
ANR	801334	IdentifierDecl	ch = * offstr		795821	0					
ANR	801335	IdentifierDeclType	char		795821	0					
ANR	801336	Identifier	ch		795821	1					
ANR	801337	AssignmentExpression	ch = * offstr		795821	2		=			
ANR	801338	Identifier	ch		795821	0					
ANR	801339	UnaryOperationExpression	* offstr		795821	1					
ANR	801340	UnaryOperator	*		795821	0					
ANR	801341	Identifier	offstr		795821	1					
ANR	801342	IfStatement	if ( ch == '-' || ch == '+' )		795821	1					
ANR	801343	Condition	ch == '-' || ch == '+'	3404:7:86805:86826	795821	0	True				
ANR	801344	OrExpression	ch == '-' || ch == '+'		795821	0		||			
ANR	801345	EqualityExpression	ch == '-'		795821	0		==			
ANR	801346	Identifier	ch		795821	0					
ANR	801347	PrimaryExpression	'-'		795821	1					
ANR	801348	EqualityExpression	ch == '+'		795821	1		==			
ANR	801349	Identifier	ch		795821	0					
ANR	801350	PrimaryExpression	'+'		795821	1					
ANR	801351	CompoundStatement		899:31:22178:22178	795821	1					
ANR	801352	ExpressionStatement	addr = core -> offset + addr	3405:4:86835:86861	795821	0	True				
ANR	801353	AssignmentExpression	addr = core -> offset + addr		795821	0		=			
ANR	801354	Identifier	addr		795821	0					
ANR	801355	AdditiveExpression	core -> offset + addr		795821	1		+			
ANR	801356	PtrMemberAccess	core -> offset		795821	0					
ANR	801357	Identifier	core		795821	0					
ANR	801358	Identifier	offset		795821	1					
ANR	801359	Identifier	addr		795821	1					
ANR	801360	IfStatement	if ( addr )		795821	29					
ANR	801361	Condition	addr	3409:6:86909:86912	795821	0	True				
ANR	801362	Identifier	addr		795821	0					
ANR	801363	CompoundStatement		905:3:22269:22289	795821	1					
ANR	801364	IdentifierDeclStatement	RIODesc * d = tmpdesc ;	3410:3:86920:86940	795821	0	True				
ANR	801365	IdentifierDecl	* d = tmpdesc		795821	0					
ANR	801366	IdentifierDeclType	RIODesc *		795821	0					
ANR	801367	Identifier	d		795821	1					
ANR	801368	AssignmentExpression	* d = tmpdesc		795821	2		=			
ANR	801369	Identifier	tmpdesc		795821	0					
ANR	801370	Identifier	tmpdesc		795821	1					
ANR	801371	IfStatement	if ( d )		795821	1					
ANR	801372	Condition	d	3411:7:86949:86949	795821	0	True				
ANR	801373	Identifier	d		795821	0					
ANR	801374	CompoundStatement		906:10:22301:22301	795821	1					
ANR	801375	ExpressionStatement	"r_io_map_new ( core -> io , d -> fd , d -> perm , 0 , addr , r_io_desc_size ( d ) )"	3412:4:86958:87026	795821	0	True				
ANR	801376	CallExpression	"r_io_map_new ( core -> io , d -> fd , d -> perm , 0 , addr , r_io_desc_size ( d ) )"		795821	0					
ANR	801377	Callee	r_io_map_new		795821	0					
ANR	801378	Identifier	r_io_map_new		795821	0					
ANR	801379	ArgumentList	core -> io		795821	1					
ANR	801380	Argument	core -> io		795821	0					
ANR	801381	PtrMemberAccess	core -> io		795821	0					
ANR	801382	Identifier	core		795821	0					
ANR	801383	Identifier	io		795821	1					
ANR	801384	Argument	d -> fd		795821	1					
ANR	801385	PtrMemberAccess	d -> fd		795821	0					
ANR	801386	Identifier	d		795821	0					
ANR	801387	Identifier	fd		795821	1					
ANR	801388	Argument	d -> perm		795821	2					
ANR	801389	PtrMemberAccess	d -> perm		795821	0					
ANR	801390	Identifier	d		795821	0					
ANR	801391	Identifier	perm		795821	1					
ANR	801392	Argument	0		795821	3					
ANR	801393	PrimaryExpression	0		795821	0					
ANR	801394	Argument	addr		795821	4					
ANR	801395	Identifier	addr		795821	0					
ANR	801396	Argument	r_io_desc_size ( d )		795821	5					
ANR	801397	CallExpression	r_io_desc_size ( d )		795821	0					
ANR	801398	Callee	r_io_desc_size		795821	0					
ANR	801399	Identifier	r_io_desc_size		795821	0					
ANR	801400	ArgumentList	d		795821	1					
ANR	801401	Argument	d		795821	0					
ANR	801402	Identifier	d		795821	0					
ANR	801403	Label	next_arroba :	3415:0:87037:87048	795821	30	True				
ANR	801404	Identifier	next_arroba		795821	0					
ANR	801405	IfStatement	if ( arroba )		795821	31					
ANR	801406	Condition	arroba	3416:6:87056:87061	795821	0	True				
ANR	801407	Identifier	arroba		795821	0					
ANR	801408	CompoundStatement		911:14:22413:22413	795821	1					
ANR	801409	ExpressionStatement	ptr = arroba + 1	3417:3:87069:87085	795821	0	True				
ANR	801410	AssignmentExpression	ptr = arroba + 1		795821	0		=			
ANR	801411	Identifier	ptr		795821	0					
ANR	801412	AdditiveExpression	arroba + 1		795821	1		+			
ANR	801413	Identifier	arroba		795821	0					
ANR	801414	PrimaryExpression	1		795821	1					
ANR	801415	ExpressionStatement	* arroba = '@'	3418:3:87090:87103	795821	1	True				
ANR	801416	AssignmentExpression	* arroba = '@'		795821	0		=			
ANR	801417	UnaryOperationExpression	* arroba		795821	0					
ANR	801418	UnaryOperator	*		795821	0					
ANR	801419	Identifier	arroba		795821	1					
ANR	801420	PrimaryExpression	'@'		795821	1					
ANR	801421	ExpressionStatement	arroba = NULL	3419:3:87108:87121	795821	2	True				
ANR	801422	AssignmentExpression	arroba = NULL		795821	0		=			
ANR	801423	Identifier	arroba		795821	0					
ANR	801424	Identifier	NULL		795821	1					
ANR	801425	GotoStatement	goto repeat_arroba ;	3420:3:87126:87144	795821	3	True				
ANR	801426	Identifier	repeat_arroba		795821	0					
ANR	801427	ExpressionStatement	core -> fixedblock = ! ! tmpdesc	3422:2:87152:87180	795821	32	True				
ANR	801428	AssignmentExpression	core -> fixedblock = ! ! tmpdesc		795821	0		=			
ANR	801429	PtrMemberAccess	core -> fixedblock		795821	0					
ANR	801430	Identifier	core		795821	0					
ANR	801431	Identifier	fixedblock		795821	1					
ANR	801432	UnaryOperationExpression	! ! tmpdesc		795821	1					
ANR	801433	UnaryOperator	!		795821	0					
ANR	801434	UnaryOperationExpression	! tmpdesc		795821	1					
ANR	801435	UnaryOperator	!		795821	0					
ANR	801436	Identifier	tmpdesc		795821	1					
ANR	801437	IfStatement	if ( core -> fixedblock )		795821	33					
ANR	801438	Condition	core -> fixedblock	3423:6:87188:87203	795821	0	True				
ANR	801439	PtrMemberAccess	core -> fixedblock		795821	0					
ANR	801440	Identifier	core		795821	0					
ANR	801441	Identifier	fixedblock		795821	1					
ANR	801442	CompoundStatement		918:24:22555:22555	795821	1					
ANR	801443	ExpressionStatement	r_core_block_read ( core )	3424:3:87211:87235	795821	0	True				
ANR	801444	CallExpression	r_core_block_read ( core )		795821	0					
ANR	801445	Callee	r_core_block_read		795821	0					
ANR	801446	Identifier	r_core_block_read		795821	0					
ANR	801447	ArgumentList	core		795821	1					
ANR	801448	Argument	core		795821	0					
ANR	801449	Identifier	core		795821	0					
ANR	801450	IfStatement	if ( ptr [ 1 ] == '@' )		795821	34					
ANR	801451	Condition	ptr [ 1 ] == '@'	3426:6:87247:87259	795821	0	True				
ANR	801452	EqualityExpression	ptr [ 1 ] == '@'		795821	0		==			
ANR	801453	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	801454	Identifier	ptr		795821	0					
ANR	801455	PrimaryExpression	1		795821	1					
ANR	801456	PrimaryExpression	'@'		795821	1					
ANR	801457	CompoundStatement		921:21:22611:22611	795821	1					
ANR	801458	IfStatement	if ( ptr [ 2 ] == '@' )		795821	0					
ANR	801459	Condition	ptr [ 2 ] == '@'	3427:7:87271:87283	795821	0	True				
ANR	801460	EqualityExpression	ptr [ 2 ] == '@'		795821	0		==			
ANR	801461	ArrayIndexing	ptr [ 2 ]		795821	0					
ANR	801462	Identifier	ptr		795821	0					
ANR	801463	PrimaryExpression	2		795821	1					
ANR	801464	PrimaryExpression	'@'		795821	1					
ANR	801465	CompoundStatement		923:4:22641:22661	795821	1					
ANR	801466	IdentifierDeclStatement	char * rule = ptr + 3 ;	3428:4:87292:87312	795821	0	True				
ANR	801467	IdentifierDecl	* rule = ptr + 3		795821	0					
ANR	801468	IdentifierDeclType	char *		795821	0					
ANR	801469	Identifier	rule		795821	1					
ANR	801470	AssignmentExpression	* rule = ptr + 3		795821	2		=			
ANR	801471	Identifier	rule		795821	0					
ANR	801472	AdditiveExpression	ptr + 3		795821	1		+			
ANR	801473	Identifier	ptr		795821	0					
ANR	801474	PrimaryExpression	3		795821	1					
ANR	801475	WhileStatement	while ( * rule && * rule == ' ' )		795821	1					
ANR	801476	Condition	* rule && * rule == ' '	3429:11:87325:87345	795821	0	True				
ANR	801477	AndExpression	* rule && * rule == ' '		795821	0		&&			
ANR	801478	UnaryOperationExpression	* rule		795821	0					
ANR	801479	UnaryOperator	*		795821	0					
ANR	801480	Identifier	rule		795821	1					
ANR	801481	EqualityExpression	* rule == ' '		795821	1		==			
ANR	801482	UnaryOperationExpression	* rule		795821	0					
ANR	801483	UnaryOperator	*		795821	0					
ANR	801484	Identifier	rule		795821	1					
ANR	801485	PrimaryExpression	' '		795821	1					
ANR	801486	CompoundStatement		924:34:22697:22697	795821	1					
ANR	801487	ExpressionStatement	rule ++	3430:5:87355:87361	795821	0	True				
ANR	801488	PostIncDecOperationExpression	rule ++		795821	0					
ANR	801489	Identifier	rule		795821	0					
ANR	801490	IncDec	++		795821	1					
ANR	801491	ExpressionStatement	"ret = r_core_cmd_foreach3 ( core , cmd , rule )"	3432:4:87373:87416	795821	2	True				
ANR	801492	AssignmentExpression	"ret = r_core_cmd_foreach3 ( core , cmd , rule )"		795821	0		=			
ANR	801493	Identifier	ret		795821	0					
ANR	801494	CallExpression	"r_core_cmd_foreach3 ( core , cmd , rule )"		795821	1					
ANR	801495	Callee	r_core_cmd_foreach3		795821	0					
ANR	801496	Identifier	r_core_cmd_foreach3		795821	0					
ANR	801497	ArgumentList	core		795821	1					
ANR	801498	Argument	core		795821	0					
ANR	801499	Identifier	core		795821	0					
ANR	801500	Argument	cmd		795821	1					
ANR	801501	Identifier	cmd		795821	0					
ANR	801502	Argument	rule		795821	2					
ANR	801503	Identifier	rule		795821	0					
ANR	801504	ElseStatement	else		795821	0					
ANR	801505	CompoundStatement		928:10:22777:22777	795821	0					
ANR	801506	ExpressionStatement	"ret = r_core_cmd_foreach ( core , cmd , ptr + 2 )"	3434:4:87434:87479	795821	0	True				
ANR	801507	AssignmentExpression	"ret = r_core_cmd_foreach ( core , cmd , ptr + 2 )"		795821	0		=			
ANR	801508	Identifier	ret		795821	0					
ANR	801509	CallExpression	"r_core_cmd_foreach ( core , cmd , ptr + 2 )"		795821	1					
ANR	801510	Callee	r_core_cmd_foreach		795821	0					
ANR	801511	Identifier	r_core_cmd_foreach		795821	0					
ANR	801512	ArgumentList	core		795821	1					
ANR	801513	Argument	core		795821	0					
ANR	801514	Identifier	core		795821	0					
ANR	801515	Argument	cmd		795821	1					
ANR	801516	Identifier	cmd		795821	0					
ANR	801517	Argument	ptr + 2		795821	2					
ANR	801518	AdditiveExpression	ptr + 2		795821	0		+			
ANR	801519	Identifier	ptr		795821	0					
ANR	801520	PrimaryExpression	2		795821	1					
ANR	801521	ElseStatement	else		795821	0					
ANR	801522	CompoundStatement		937:3:23142:23217	795821	0					
ANR	801523	IdentifierDeclStatement	bool tmpseek = false ;	3437:3:87500:87520	795821	0	True				
ANR	801524	IdentifierDecl	tmpseek = false		795821	0					
ANR	801525	IdentifierDeclType	bool		795821	0					
ANR	801526	Identifier	tmpseek		795821	1					
ANR	801527	AssignmentExpression	tmpseek = false		795821	2		=			
ANR	801528	Identifier	false		795821	0					
ANR	801529	Identifier	false		795821	1					
ANR	801530	IdentifierDeclStatement	"const char * fromvars [ ] = { ""anal.from"" , ""diff.from"" , ""graph.from"" , ""io.buffer.from"" , ""lines.from"" , ""search.from"" , ""zoom.from"" , NULL } ;"	3438:3:87525:87662	795821	1	True				
ANR	801531	IdentifierDecl	"* fromvars [ ] = { ""anal.from"" , ""diff.from"" , ""graph.from"" , ""io.buffer.from"" , ""lines.from"" , ""search.from"" , ""zoom.from"" , NULL }"		795821	0					
ANR	801532	IdentifierDeclType	const char * [ ]		795821	0					
ANR	801533	Identifier	fromvars		795821	1					
ANR	801534	AssignmentExpression	"* fromvars [ ] = { ""anal.from"" , ""diff.from"" , ""graph.from"" , ""io.buffer.from"" , ""lines.from"" , ""search.from"" , ""zoom.from"" , NULL }"		795821	2		=			
ANR	801535	Identifier	fromvars		795821	0					
ANR	801536	InitializerList	"""anal.from"""		795821	1					
ANR	801537	PrimaryExpression	"""anal.from"""		795821	0					
ANR	801538	PrimaryExpression	"""diff.from"""		795821	1					
ANR	801539	PrimaryExpression	"""graph.from"""		795821	2					
ANR	801540	PrimaryExpression	"""io.buffer.from"""		795821	3					
ANR	801541	PrimaryExpression	"""lines.from"""		795821	4					
ANR	801542	PrimaryExpression	"""search.from"""		795821	5					
ANR	801543	PrimaryExpression	"""zoom.from"""		795821	6					
ANR	801544	Identifier	NULL		795821	7					
ANR	801545	IdentifierDeclStatement	"const char * tovars [ ] = { ""anal.to"" , ""diff.to"" , ""graph.to"" , ""io.buffer.to"" , ""lines.to"" , ""search.to"" , ""zoom.to"" , NULL } ;"	3440:3:87667:87788	795821	2	True				
ANR	801546	IdentifierDecl	"* tovars [ ] = { ""anal.to"" , ""diff.to"" , ""graph.to"" , ""io.buffer.to"" , ""lines.to"" , ""search.to"" , ""zoom.to"" , NULL }"		795821	0					
ANR	801547	IdentifierDeclType	const char * [ ]		795821	0					
ANR	801548	Identifier	tovars		795821	1					
ANR	801549	AssignmentExpression	"* tovars [ ] = { ""anal.to"" , ""diff.to"" , ""graph.to"" , ""io.buffer.to"" , ""lines.to"" , ""search.to"" , ""zoom.to"" , NULL }"		795821	2		=			
ANR	801550	Identifier	tovars		795821	0					
ANR	801551	InitializerList	"""anal.to"""		795821	1					
ANR	801552	PrimaryExpression	"""anal.to"""		795821	0					
ANR	801553	PrimaryExpression	"""diff.to"""		795821	1					
ANR	801554	PrimaryExpression	"""graph.to"""		795821	2					
ANR	801555	PrimaryExpression	"""io.buffer.to"""		795821	3					
ANR	801556	PrimaryExpression	"""lines.to"""		795821	4					
ANR	801557	PrimaryExpression	"""search.to"""		795821	5					
ANR	801558	PrimaryExpression	"""zoom.to"""		795821	6					
ANR	801559	Identifier	NULL		795821	7					
ANR	801560	IdentifierDeclStatement	"ut64 curfrom [ R_ARRAY_SIZE ( fromvars ) - 1 ] , curto [ R_ARRAY_SIZE ( tovars ) - 1 ] ;"	3442:3:87793:87868	795821	3	True				
ANR	801561	IdentifierDecl	curfrom [ R_ARRAY_SIZE ( fromvars ) - 1 ]		795821	0					
ANR	801562	IdentifierDeclType	ut64 [ R_ARRAY_SIZE ( fromvars ) - 1 ]		795821	0					
ANR	801563	Identifier	curfrom		795821	1					
ANR	801564	AdditiveExpression	R_ARRAY_SIZE ( fromvars ) - 1		795821	2		-			
ANR	801565	CallExpression	R_ARRAY_SIZE ( fromvars )		795821	0					
ANR	801566	Callee	R_ARRAY_SIZE		795821	0					
ANR	801567	Identifier	R_ARRAY_SIZE		795821	0					
ANR	801568	ArgumentList	fromvars		795821	1					
ANR	801569	Argument	fromvars		795821	0					
ANR	801570	Identifier	fromvars		795821	0					
ANR	801571	PrimaryExpression	1		795821	1					
ANR	801572	IdentifierDecl	curto [ R_ARRAY_SIZE ( tovars ) - 1 ]		795821	1					
ANR	801573	IdentifierDeclType	ut64 [ R_ARRAY_SIZE ( tovars ) - 1 ]		795821	0					
ANR	801574	Identifier	curto		795821	1					
ANR	801575	AdditiveExpression	R_ARRAY_SIZE ( tovars ) - 1		795821	2		-			
ANR	801576	CallExpression	R_ARRAY_SIZE ( tovars )		795821	0					
ANR	801577	Callee	R_ARRAY_SIZE		795821	0					
ANR	801578	Identifier	R_ARRAY_SIZE		795821	0					
ANR	801579	ArgumentList	tovars		795821	1					
ANR	801580	Argument	tovars		795821	0					
ANR	801581	Identifier	tovars		795821	0					
ANR	801582	PrimaryExpression	1		795821	1					
ANR	801583	IfStatement	if ( ptr [ 1 ] == '(' )		795821	4					
ANR	801584	Condition	ptr [ 1 ] == '('	3445:7:87893:87905	795821	0	True				
ANR	801585	EqualityExpression	ptr [ 1 ] == '('		795821	0		==			
ANR	801586	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	801587	Identifier	ptr		795821	0					
ANR	801588	PrimaryExpression	1		795821	1					
ANR	801589	PrimaryExpression	'('		795821	1					
ANR	801590	CompoundStatement		952:4:23538:23577	795821	1					
ANR	801591	IdentifierDeclStatement	char * range = ptr + 3 ;	3446:4:87914:87935	795821	0	True				
ANR	801592	IdentifierDecl	* range = ptr + 3		795821	0					
ANR	801593	IdentifierDeclType	char *		795821	0					
ANR	801594	Identifier	range		795821	1					
ANR	801595	AssignmentExpression	* range = ptr + 3		795821	2		=			
ANR	801596	Identifier	range		795821	0					
ANR	801597	AdditiveExpression	ptr + 3		795821	1		+			
ANR	801598	Identifier	ptr		795821	0					
ANR	801599	PrimaryExpression	3		795821	1					
ANR	801600	IdentifierDeclStatement	"char * p = strchr ( range , ' ' ) ;"	3447:4:87941:87970	795821	1	True				
ANR	801601	IdentifierDecl	"* p = strchr ( range , ' ' )"		795821	0					
ANR	801602	IdentifierDeclType	char *		795821	0					
ANR	801603	Identifier	p		795821	1					
ANR	801604	AssignmentExpression	"* p = strchr ( range , ' ' )"		795821	2		=			
ANR	801605	Identifier	p		795821	0					
ANR	801606	CallExpression	"strchr ( range , ' ' )"		795821	1					
ANR	801607	Callee	strchr		795821	0					
ANR	801608	Identifier	strchr		795821	0					
ANR	801609	ArgumentList	range		795821	1					
ANR	801610	Argument	range		795821	0					
ANR	801611	Identifier	range		795821	0					
ANR	801612	Argument	' '		795821	1					
ANR	801613	PrimaryExpression	' '		795821	0					
ANR	801614	IfStatement	if ( ! p )		795821	2					
ANR	801615	Condition	! p	3448:8:87980:87981	795821	0	True				
ANR	801616	UnaryOperationExpression	! p		795821	0					
ANR	801617	UnaryOperator	!		795821	0					
ANR	801618	Identifier	p		795821	1					
ANR	801619	CompoundStatement		943:12:23333:23333	795821	1					
ANR	801620	ExpressionStatement	"eprintf ( ""Usage: / ABCD @..0x1000 0x3000\\n"" )"	3449:5:87991:88035	795821	0	True				
ANR	801621	CallExpression	"eprintf ( ""Usage: / ABCD @..0x1000 0x3000\\n"" )"		795821	0					
ANR	801622	Callee	eprintf		795821	0					
ANR	801623	Identifier	eprintf		795821	0					
ANR	801624	ArgumentList	"""Usage: / ABCD @..0x1000 0x3000\\n"""		795821	1					
ANR	801625	Argument	"""Usage: / ABCD @..0x1000 0x3000\\n"""		795821	0					
ANR	801626	PrimaryExpression	"""Usage: / ABCD @..0x1000 0x3000\\n"""		795821	0					
ANR	801627	ExpressionStatement	free ( tmpeval )	3450:5:88042:88056	795821	1	True				
ANR	801628	CallExpression	free ( tmpeval )		795821	0					
ANR	801629	Callee	free		795821	0					
ANR	801630	Identifier	free		795821	0					
ANR	801631	ArgumentList	tmpeval		795821	1					
ANR	801632	Argument	tmpeval		795821	0					
ANR	801633	Identifier	tmpeval		795821	0					
ANR	801634	ExpressionStatement	free ( tmpasm )	3451:5:88063:88076	795821	2	True				
ANR	801635	CallExpression	free ( tmpasm )		795821	0					
ANR	801636	Callee	free		795821	0					
ANR	801637	Identifier	free		795821	0					
ANR	801638	ArgumentList	tmpasm		795821	1					
ANR	801639	Argument	tmpasm		795821	0					
ANR	801640	Identifier	tmpasm		795821	0					
ANR	801641	ExpressionStatement	free ( tmpbits )	3452:5:88083:88097	795821	3	True				
ANR	801642	CallExpression	free ( tmpbits )		795821	0					
ANR	801643	Callee	free		795821	0					
ANR	801644	Identifier	free		795821	0					
ANR	801645	ArgumentList	tmpbits		795821	1					
ANR	801646	Argument	tmpbits		795821	0					
ANR	801647	Identifier	tmpbits		795821	0					
ANR	801648	GotoStatement	goto fail ;	3453:5:88104:88113	795821	4	True				
ANR	801649	Identifier	fail		795821	0					
ANR	801650	ExpressionStatement	* p = x00	3455:4:88125:88136	795821	3	True				
ANR	801651	AssignmentExpression	* p = x00		795821	0		=			
ANR	801652	UnaryOperationExpression	* p		795821	0					
ANR	801653	UnaryOperator	*		795821	0					
ANR	801654	Identifier	p		795821	1					
ANR	801655	Identifier	x00		795821	1					
ANR	801656	IdentifierDeclStatement	"ut64 from = r_num_math ( core -> num , range ) ;"	3456:4:88142:88183	795821	4	True				
ANR	801657	IdentifierDecl	"from = r_num_math ( core -> num , range )"		795821	0					
ANR	801658	IdentifierDeclType	ut64		795821	0					
ANR	801659	Identifier	from		795821	1					
ANR	801660	AssignmentExpression	"from = r_num_math ( core -> num , range )"		795821	2		=			
ANR	801661	Identifier	from		795821	0					
ANR	801662	CallExpression	"r_num_math ( core -> num , range )"		795821	1					
ANR	801663	Callee	r_num_math		795821	0					
ANR	801664	Identifier	r_num_math		795821	0					
ANR	801665	ArgumentList	core -> num		795821	1					
ANR	801666	Argument	core -> num		795821	0					
ANR	801667	PtrMemberAccess	core -> num		795821	0					
ANR	801668	Identifier	core		795821	0					
ANR	801669	Identifier	num		795821	1					
ANR	801670	Argument	range		795821	1					
ANR	801671	Identifier	range		795821	0					
ANR	801672	IdentifierDeclStatement	"ut64 to = r_num_math ( core -> num , p + 1 ) ;"	3457:4:88189:88228	795821	5	True				
ANR	801673	IdentifierDecl	"to = r_num_math ( core -> num , p + 1 )"		795821	0					
ANR	801674	IdentifierDeclType	ut64		795821	0					
ANR	801675	Identifier	to		795821	1					
ANR	801676	AssignmentExpression	"to = r_num_math ( core -> num , p + 1 )"		795821	2		=			
ANR	801677	Identifier	to		795821	0					
ANR	801678	CallExpression	"r_num_math ( core -> num , p + 1 )"		795821	1					
ANR	801679	Callee	r_num_math		795821	0					
ANR	801680	Identifier	r_num_math		795821	0					
ANR	801681	ArgumentList	core -> num		795821	1					
ANR	801682	Argument	core -> num		795821	0					
ANR	801683	PtrMemberAccess	core -> num		795821	0					
ANR	801684	Identifier	core		795821	0					
ANR	801685	Identifier	num		795821	1					
ANR	801686	Argument	p + 1		795821	1					
ANR	801687	AdditiveExpression	p + 1		795821	0		+			
ANR	801688	Identifier	p		795821	0					
ANR	801689	PrimaryExpression	1		795821	1					
ANR	801690	ForStatement	for ( i = 0 ; fromvars [ i ] ; i ++ )		795821	6					
ANR	801691	ForInit	i = 0 ;	3459:9:88266:88271	795821	0	True				
ANR	801692	AssignmentExpression	i = 0		795821	0		=			
ANR	801693	Identifier	i		795821	0					
ANR	801694	PrimaryExpression	0		795821	1					
ANR	801695	Condition	fromvars [ i ]	3459:16:88273:88283	795821	1	True				
ANR	801696	ArrayIndexing	fromvars [ i ]		795821	0					
ANR	801697	Identifier	fromvars		795821	0					
ANR	801698	Identifier	i		795821	1					
ANR	801699	PostIncDecOperationExpression	i ++	3459:29:88286:88288	795821	2	True				
ANR	801700	Identifier	i		795821	0					
ANR	801701	IncDec	++		795821	1					
ANR	801702	CompoundStatement		954:34:23640:23640	795821	3					
ANR	801703	ExpressionStatement	"curfrom [ i ] = r_config_get_i ( core -> config , fromvars [ i ] )"	3460:5:88298:88353	795821	0	True				
ANR	801704	AssignmentExpression	"curfrom [ i ] = r_config_get_i ( core -> config , fromvars [ i ] )"		795821	0		=			
ANR	801705	ArrayIndexing	curfrom [ i ]		795821	0					
ANR	801706	Identifier	curfrom		795821	0					
ANR	801707	Identifier	i		795821	1					
ANR	801708	CallExpression	"r_config_get_i ( core -> config , fromvars [ i ] )"		795821	1					
ANR	801709	Callee	r_config_get_i		795821	0					
ANR	801710	Identifier	r_config_get_i		795821	0					
ANR	801711	ArgumentList	core -> config		795821	1					
ANR	801712	Argument	core -> config		795821	0					
ANR	801713	PtrMemberAccess	core -> config		795821	0					
ANR	801714	Identifier	core		795821	0					
ANR	801715	Identifier	config		795821	1					
ANR	801716	Argument	fromvars [ i ]		795821	1					
ANR	801717	ArrayIndexing	fromvars [ i ]		795821	0					
ANR	801718	Identifier	fromvars		795821	0					
ANR	801719	Identifier	i		795821	1					
ANR	801720	ForStatement	for ( i = 0 ; tovars [ i ] ; i ++ )		795821	7					
ANR	801721	ForInit	i = 0 ;	3462:9:88370:88375	795821	0	True				
ANR	801722	AssignmentExpression	i = 0		795821	0		=			
ANR	801723	Identifier	i		795821	0					
ANR	801724	PrimaryExpression	0		795821	1					
ANR	801725	Condition	tovars [ i ]	3462:16:88377:88385	795821	1	True				
ANR	801726	ArrayIndexing	tovars [ i ]		795821	0					
ANR	801727	Identifier	tovars		795821	0					
ANR	801728	Identifier	i		795821	1					
ANR	801729	PostIncDecOperationExpression	i ++	3462:27:88388:88390	795821	2	True				
ANR	801730	Identifier	i		795821	0					
ANR	801731	IncDec	++		795821	1					
ANR	801732	CompoundStatement		957:32:23742:23742	795821	3					
ANR	801733	ExpressionStatement	"curto [ i ] = r_config_get_i ( core -> config , tovars [ i ] )"	3463:5:88400:88451	795821	0	True				
ANR	801734	AssignmentExpression	"curto [ i ] = r_config_get_i ( core -> config , tovars [ i ] )"		795821	0		=			
ANR	801735	ArrayIndexing	curto [ i ]		795821	0					
ANR	801736	Identifier	curto		795821	0					
ANR	801737	Identifier	i		795821	1					
ANR	801738	CallExpression	"r_config_get_i ( core -> config , tovars [ i ] )"		795821	1					
ANR	801739	Callee	r_config_get_i		795821	0					
ANR	801740	Identifier	r_config_get_i		795821	0					
ANR	801741	ArgumentList	core -> config		795821	1					
ANR	801742	Argument	core -> config		795821	0					
ANR	801743	PtrMemberAccess	core -> config		795821	0					
ANR	801744	Identifier	core		795821	0					
ANR	801745	Identifier	config		795821	1					
ANR	801746	Argument	tovars [ i ]		795821	1					
ANR	801747	ArrayIndexing	tovars [ i ]		795821	0					
ANR	801748	Identifier	tovars		795821	0					
ANR	801749	Identifier	i		795821	1					
ANR	801750	ForStatement	for ( i = 0 ; fromvars [ i ] ; i ++ )		795821	8					
ANR	801751	ForInit	i = 0 ;	3466:9:88490:88495	795821	0	True				
ANR	801752	AssignmentExpression	i = 0		795821	0		=			
ANR	801753	Identifier	i		795821	0					
ANR	801754	PrimaryExpression	0		795821	1					
ANR	801755	Condition	fromvars [ i ]	3466:16:88497:88507	795821	1	True				
ANR	801756	ArrayIndexing	fromvars [ i ]		795821	0					
ANR	801757	Identifier	fromvars		795821	0					
ANR	801758	Identifier	i		795821	1					
ANR	801759	PostIncDecOperationExpression	i ++	3466:29:88510:88512	795821	2	True				
ANR	801760	Identifier	i		795821	0					
ANR	801761	IncDec	++		795821	1					
ANR	801762	CompoundStatement		961:34:23864:23864	795821	3					
ANR	801763	ExpressionStatement	"r_config_set_i ( core -> config , fromvars [ i ] , from )"	3467:5:88522:88570	795821	0	True				
ANR	801764	CallExpression	"r_config_set_i ( core -> config , fromvars [ i ] , from )"		795821	0					
ANR	801765	Callee	r_config_set_i		795821	0					
ANR	801766	Identifier	r_config_set_i		795821	0					
ANR	801767	ArgumentList	core -> config		795821	1					
ANR	801768	Argument	core -> config		795821	0					
ANR	801769	PtrMemberAccess	core -> config		795821	0					
ANR	801770	Identifier	core		795821	0					
ANR	801771	Identifier	config		795821	1					
ANR	801772	Argument	fromvars [ i ]		795821	1					
ANR	801773	ArrayIndexing	fromvars [ i ]		795821	0					
ANR	801774	Identifier	fromvars		795821	0					
ANR	801775	Identifier	i		795821	1					
ANR	801776	Argument	from		795821	2					
ANR	801777	Identifier	from		795821	0					
ANR	801778	ForStatement	for ( i = 0 ; tovars [ i ] ; i ++ )		795821	9					
ANR	801779	ForInit	i = 0 ;	3469:9:88587:88592	795821	0	True				
ANR	801780	AssignmentExpression	i = 0		795821	0		=			
ANR	801781	Identifier	i		795821	0					
ANR	801782	PrimaryExpression	0		795821	1					
ANR	801783	Condition	tovars [ i ]	3469:16:88594:88602	795821	1	True				
ANR	801784	ArrayIndexing	tovars [ i ]		795821	0					
ANR	801785	Identifier	tovars		795821	0					
ANR	801786	Identifier	i		795821	1					
ANR	801787	PostIncDecOperationExpression	i ++	3469:27:88605:88607	795821	2	True				
ANR	801788	Identifier	i		795821	0					
ANR	801789	IncDec	++		795821	1					
ANR	801790	CompoundStatement		964:32:23959:23959	795821	3					
ANR	801791	ExpressionStatement	"r_config_set_i ( core -> config , tovars [ i ] , to )"	3470:5:88617:88661	795821	0	True				
ANR	801792	CallExpression	"r_config_set_i ( core -> config , tovars [ i ] , to )"		795821	0					
ANR	801793	Callee	r_config_set_i		795821	0					
ANR	801794	Identifier	r_config_set_i		795821	0					
ANR	801795	ArgumentList	core -> config		795821	1					
ANR	801796	Argument	core -> config		795821	0					
ANR	801797	PtrMemberAccess	core -> config		795821	0					
ANR	801798	Identifier	core		795821	0					
ANR	801799	Identifier	config		795821	1					
ANR	801800	Argument	tovars [ i ]		795821	1					
ANR	801801	ArrayIndexing	tovars [ i ]		795821	0					
ANR	801802	Identifier	tovars		795821	0					
ANR	801803	Identifier	i		795821	1					
ANR	801804	Argument	to		795821	2					
ANR	801805	Identifier	to		795821	0					
ANR	801806	ExpressionStatement	tmpseek = true	3472:4:88673:88687	795821	10	True				
ANR	801807	AssignmentExpression	tmpseek = true		795821	0		=			
ANR	801808	Identifier	tmpseek		795821	0					
ANR	801809	Identifier	true		795821	1					
ANR	801810	IfStatement	if ( usemyblock )		795821	5					
ANR	801811	Condition	usemyblock	3474:7:88701:88710	795821	0	True				
ANR	801812	Identifier	usemyblock		795821	0					
ANR	801813	CompoundStatement		969:19:24062:24062	795821	1					
ANR	801814	IfStatement	if ( addr_is_set )		795821	0					
ANR	801815	Condition	addr_is_set	3475:8:88723:88733	795821	0	True				
ANR	801816	Identifier	addr_is_set		795821	0					
ANR	801817	CompoundStatement		970:21:24085:24085	795821	1					
ANR	801818	ExpressionStatement	core -> offset = addr	3476:5:88743:88762	795821	0	True				
ANR	801819	AssignmentExpression	core -> offset = addr		795821	0		=			
ANR	801820	PtrMemberAccess	core -> offset		795821	0					
ANR	801821	Identifier	core		795821	0					
ANR	801822	Identifier	offset		795821	1					
ANR	801823	Identifier	addr		795821	1					
ANR	801824	ExpressionStatement	"ret = r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) )"	3478:4:88774:88826	795821	1	True				
ANR	801825	AssignmentExpression	"ret = r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) )"		795821	0		=			
ANR	801826	Identifier	ret		795821	0					
ANR	801827	CallExpression	"r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) )"		795821	1					
ANR	801828	Callee	r_cmd_call		795821	0					
ANR	801829	Identifier	r_cmd_call		795821	0					
ANR	801830	ArgumentList	core -> rcmd		795821	1					
ANR	801831	Argument	core -> rcmd		795821	0					
ANR	801832	PtrMemberAccess	core -> rcmd		795821	0					
ANR	801833	Identifier	core		795821	0					
ANR	801834	Identifier	rcmd		795821	1					
ANR	801835	Argument	r_str_trim_head ( cmd )		795821	1					
ANR	801836	CallExpression	r_str_trim_head ( cmd )		795821	0					
ANR	801837	Callee	r_str_trim_head		795821	0					
ANR	801838	Identifier	r_str_trim_head		795821	0					
ANR	801839	ArgumentList	cmd		795821	1					
ANR	801840	Argument	cmd		795821	0					
ANR	801841	Identifier	cmd		795821	0					
ANR	801842	ElseStatement	else		795821	0					
ANR	801843	CompoundStatement		974:10:24187:24187	795821	0					
ANR	801844	IfStatement	if ( addr_is_set )		795821	0					
ANR	801845	Condition	addr_is_set	3480:8:88848:88858	795821	0	True				
ANR	801846	Identifier	addr_is_set		795821	0					
ANR	801847	CompoundStatement		975:21:24210:24210	795821	1					
ANR	801848	IfStatement	if ( ptr [ 1 ] )		795821	0					
ANR	801849	Condition	ptr [ 1 ]	3481:9:88872:88877	795821	0	True				
ANR	801850	ArrayIndexing	ptr [ 1 ]		795821	0					
ANR	801851	Identifier	ptr		795821	0					
ANR	801852	PrimaryExpression	1		795821	1					
ANR	801853	CompoundStatement		976:17:24229:24229	795821	1					
ANR	801854	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	3482:6:88888:88915	795821	0	True				
ANR	801855	CallExpression	"r_core_seek ( core , addr , 1 )"		795821	0					
ANR	801856	Callee	r_core_seek		795821	0					
ANR	801857	Identifier	r_core_seek		795821	0					
ANR	801858	ArgumentList	core		795821	1					
ANR	801859	Argument	core		795821	0					
ANR	801860	Identifier	core		795821	0					
ANR	801861	Argument	addr		795821	1					
ANR	801862	Identifier	addr		795821	0					
ANR	801863	Argument	1		795821	2					
ANR	801864	PrimaryExpression	1		795821	0					
ANR	801865	ExpressionStatement	r_core_block_read ( core )	3483:6:88923:88947	795821	1	True				
ANR	801866	CallExpression	r_core_block_read ( core )		795821	0					
ANR	801867	Callee	r_core_block_read		795821	0					
ANR	801868	Identifier	r_core_block_read		795821	0					
ANR	801869	ArgumentList	core		795821	1					
ANR	801870	Argument	core		795821	0					
ANR	801871	Identifier	core		795821	0					
ANR	801872	ExpressionStatement	"ret = r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) )"	3486:4:88966:89018	795821	1	True				
ANR	801873	AssignmentExpression	"ret = r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) )"		795821	0		=			
ANR	801874	Identifier	ret		795821	0					
ANR	801875	CallExpression	"r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) )"		795821	1					
ANR	801876	Callee	r_cmd_call		795821	0					
ANR	801877	Identifier	r_cmd_call		795821	0					
ANR	801878	ArgumentList	core -> rcmd		795821	1					
ANR	801879	Argument	core -> rcmd		795821	0					
ANR	801880	PtrMemberAccess	core -> rcmd		795821	0					
ANR	801881	Identifier	core		795821	0					
ANR	801882	Identifier	rcmd		795821	1					
ANR	801883	Argument	r_str_trim_head ( cmd )		795821	1					
ANR	801884	CallExpression	r_str_trim_head ( cmd )		795821	0					
ANR	801885	Callee	r_str_trim_head		795821	0					
ANR	801886	Identifier	r_str_trim_head		795821	0					
ANR	801887	ArgumentList	cmd		795821	1					
ANR	801888	Argument	cmd		795821	0					
ANR	801889	Identifier	cmd		795821	0					
ANR	801890	IfStatement	if ( tmpseek )		795821	6					
ANR	801891	Condition	tmpseek	3489:7:89033:89039	795821	0	True				
ANR	801892	Identifier	tmpseek		795821	0					
ANR	801893	CompoundStatement		984:16:24391:24391	795821	1					
ANR	801894	ForStatement	for ( i = 0 ; fromvars [ i ] ; i ++ )		795821	0					
ANR	801895	ForInit	i = 0 ;	3491:9:89075:89080	795821	0	True				
ANR	801896	AssignmentExpression	i = 0		795821	0		=			
ANR	801897	Identifier	i		795821	0					
ANR	801898	PrimaryExpression	0		795821	1					
ANR	801899	Condition	fromvars [ i ]	3491:16:89082:89092	795821	1	True				
ANR	801900	ArrayIndexing	fromvars [ i ]		795821	0					
ANR	801901	Identifier	fromvars		795821	0					
ANR	801902	Identifier	i		795821	1					
ANR	801903	PostIncDecOperationExpression	i ++	3491:29:89095:89097	795821	2	True				
ANR	801904	Identifier	i		795821	0					
ANR	801905	IncDec	++		795821	1					
ANR	801906	CompoundStatement		986:34:24449:24449	795821	3					
ANR	801907	ExpressionStatement	"r_config_set_i ( core -> config , fromvars [ i ] , curfrom [ i ] )"	3492:5:89107:89161	795821	0	True				
ANR	801908	CallExpression	"r_config_set_i ( core -> config , fromvars [ i ] , curfrom [ i ] )"		795821	0					
ANR	801909	Callee	r_config_set_i		795821	0					
ANR	801910	Identifier	r_config_set_i		795821	0					
ANR	801911	ArgumentList	core -> config		795821	1					
ANR	801912	Argument	core -> config		795821	0					
ANR	801913	PtrMemberAccess	core -> config		795821	0					
ANR	801914	Identifier	core		795821	0					
ANR	801915	Identifier	config		795821	1					
ANR	801916	Argument	fromvars [ i ]		795821	1					
ANR	801917	ArrayIndexing	fromvars [ i ]		795821	0					
ANR	801918	Identifier	fromvars		795821	0					
ANR	801919	Identifier	i		795821	1					
ANR	801920	Argument	curfrom [ i ]		795821	2					
ANR	801921	ArrayIndexing	curfrom [ i ]		795821	0					
ANR	801922	Identifier	curfrom		795821	0					
ANR	801923	Identifier	i		795821	1					
ANR	801924	ForStatement	for ( i = 0 ; tovars [ i ] ; i ++ )		795821	1					
ANR	801925	ForInit	i = 0 ;	3494:9:89178:89183	795821	0	True				
ANR	801926	AssignmentExpression	i = 0		795821	0		=			
ANR	801927	Identifier	i		795821	0					
ANR	801928	PrimaryExpression	0		795821	1					
ANR	801929	Condition	tovars [ i ]	3494:16:89185:89193	795821	1	True				
ANR	801930	ArrayIndexing	tovars [ i ]		795821	0					
ANR	801931	Identifier	tovars		795821	0					
ANR	801932	Identifier	i		795821	1					
ANR	801933	PostIncDecOperationExpression	i ++	3494:27:89196:89198	795821	2	True				
ANR	801934	Identifier	i		795821	0					
ANR	801935	IncDec	++		795821	1					
ANR	801936	CompoundStatement		989:32:24550:24550	795821	3					
ANR	801937	ExpressionStatement	"r_config_set_i ( core -> config , tovars [ i ] , curto [ i ] )"	3495:5:89208:89258	795821	0	True				
ANR	801938	CallExpression	"r_config_set_i ( core -> config , tovars [ i ] , curto [ i ] )"		795821	0					
ANR	801939	Callee	r_config_set_i		795821	0					
ANR	801940	Identifier	r_config_set_i		795821	0					
ANR	801941	ArgumentList	core -> config		795821	1					
ANR	801942	Argument	core -> config		795821	0					
ANR	801943	PtrMemberAccess	core -> config		795821	0					
ANR	801944	Identifier	core		795821	0					
ANR	801945	Identifier	config		795821	1					
ANR	801946	Argument	tovars [ i ]		795821	1					
ANR	801947	ArrayIndexing	tovars [ i ]		795821	0					
ANR	801948	Identifier	tovars		795821	0					
ANR	801949	Identifier	i		795821	1					
ANR	801950	Argument	curto [ i ]		795821	2					
ANR	801951	ArrayIndexing	curto [ i ]		795821	0					
ANR	801952	Identifier	curto		795821	0					
ANR	801953	Identifier	i		795821	1					
ANR	801954	IfStatement	if ( ptr2 )		795821	35					
ANR	801955	Condition	ptr2	3499:6:89281:89284	795821	0	True				
ANR	801956	Identifier	ptr2		795821	0					
ANR	801957	CompoundStatement		994:12:24636:24636	795821	1					
ANR	801958	ExpressionStatement	* ptr2 = '!'	3500:3:89292:89303	795821	0	True				
ANR	801959	AssignmentExpression	* ptr2 = '!'		795821	0		=			
ANR	801960	UnaryOperationExpression	* ptr2		795821	0					
ANR	801961	UnaryOperator	*		795821	0					
ANR	801962	Identifier	ptr2		795821	1					
ANR	801963	PrimaryExpression	'!'		795821	1					
ANR	801964	ExpressionStatement	"r_core_block_size ( core , tmpbsz )"	3501:3:89308:89340	795821	1	True				
ANR	801965	CallExpression	"r_core_block_size ( core , tmpbsz )"		795821	0					
ANR	801966	Callee	r_core_block_size		795821	0					
ANR	801967	Identifier	r_core_block_size		795821	0					
ANR	801968	ArgumentList	core		795821	1					
ANR	801969	Argument	core		795821	0					
ANR	801970	Identifier	core		795821	0					
ANR	801971	Argument	tmpbsz		795821	1					
ANR	801972	Identifier	tmpbsz		795821	0					
ANR	801973	IfStatement	if ( is_arch_set )		795821	36					
ANR	801974	Condition	is_arch_set	3503:6:89352:89362	795821	0	True				
ANR	801975	Identifier	is_arch_set		795821	0					
ANR	801976	CompoundStatement		998:19:24714:24714	795821	1					
ANR	801977	ExpressionStatement	core -> fixedarch = oldfixedarch	3504:3:89370:89400	795821	0	True				
ANR	801978	AssignmentExpression	core -> fixedarch = oldfixedarch		795821	0		=			
ANR	801979	PtrMemberAccess	core -> fixedarch		795821	0					
ANR	801980	Identifier	core		795821	0					
ANR	801981	Identifier	fixedarch		795821	1					
ANR	801982	Identifier	oldfixedarch		795821	1					
ANR	801983	ExpressionStatement	"r_config_set ( core -> config , ""asm.arch"" , tmpasm )"	3505:3:89405:89452	795821	1	True				
ANR	801984	CallExpression	"r_config_set ( core -> config , ""asm.arch"" , tmpasm )"		795821	0					
ANR	801985	Callee	r_config_set		795821	0					
ANR	801986	Identifier	r_config_set		795821	0					
ANR	801987	ArgumentList	core -> config		795821	1					
ANR	801988	Argument	core -> config		795821	0					
ANR	801989	PtrMemberAccess	core -> config		795821	0					
ANR	801990	Identifier	core		795821	0					
ANR	801991	Identifier	config		795821	1					
ANR	801992	Argument	"""asm.arch"""		795821	1					
ANR	801993	PrimaryExpression	"""asm.arch"""		795821	0					
ANR	801994	Argument	tmpasm		795821	2					
ANR	801995	Identifier	tmpasm		795821	0					
ANR	801996	ExpressionStatement	R_FREE ( tmpasm )	3506:3:89457:89472	795821	2	True				
ANR	801997	CallExpression	R_FREE ( tmpasm )		795821	0					
ANR	801998	Callee	R_FREE		795821	0					
ANR	801999	Identifier	R_FREE		795821	0					
ANR	802000	ArgumentList	tmpasm		795821	1					
ANR	802001	Argument	tmpasm		795821	0					
ANR	802002	Identifier	tmpasm		795821	0					
ANR	802003	IfStatement	if ( tmpfd != - 1 )		795821	37					
ANR	802004	Condition	tmpfd != - 1	3508:6:89484:89494	795821	0	True				
ANR	802005	EqualityExpression	tmpfd != - 1		795821	0		!=			
ANR	802006	Identifier	tmpfd		795821	0					
ANR	802007	UnaryOperationExpression	- 1		795821	1					
ANR	802008	UnaryOperator	-		795821	0					
ANR	802009	PrimaryExpression	1		795821	1					
ANR	802010	CompoundStatement		1003:19:24846:24846	795821	1					
ANR	802011	ExpressionStatement	"r_io_use_fd ( core -> io , tmpfd )"	3510:3:89537:89566	795821	0	True				
ANR	802012	CallExpression	"r_io_use_fd ( core -> io , tmpfd )"		795821	0					
ANR	802013	Callee	r_io_use_fd		795821	0					
ANR	802014	Identifier	r_io_use_fd		795821	0					
ANR	802015	ArgumentList	core -> io		795821	1					
ANR	802016	Argument	core -> io		795821	0					
ANR	802017	PtrMemberAccess	core -> io		795821	0					
ANR	802018	Identifier	core		795821	0					
ANR	802019	Identifier	io		795821	1					
ANR	802020	Argument	tmpfd		795821	1					
ANR	802021	Identifier	tmpfd		795821	0					
ANR	802022	IfStatement	if ( tmpdesc )		795821	38					
ANR	802023	Condition	tmpdesc	3512:6:89578:89584	795821	0	True				
ANR	802024	Identifier	tmpdesc		795821	0					
ANR	802025	CompoundStatement		1007:15:24936:24936	795821	1					
ANR	802026	IfStatement	if ( pamode )		795821	0					
ANR	802027	Condition	pamode	3513:7:89596:89601	795821	0	True				
ANR	802028	Identifier	pamode		795821	0					
ANR	802029	CompoundStatement		1008:15:24953:24953	795821	1					
ANR	802030	ExpressionStatement	"r_config_set_i ( core -> config , ""io.va"" , 0 )"	3514:4:89610:89651	795821	0	True				
ANR	802031	CallExpression	"r_config_set_i ( core -> config , ""io.va"" , 0 )"		795821	0					
ANR	802032	Callee	r_config_set_i		795821	0					
ANR	802033	Identifier	r_config_set_i		795821	0					
ANR	802034	ArgumentList	core -> config		795821	1					
ANR	802035	Argument	core -> config		795821	0					
ANR	802036	PtrMemberAccess	core -> config		795821	0					
ANR	802037	Identifier	core		795821	0					
ANR	802038	Identifier	config		795821	1					
ANR	802039	Argument	"""io.va"""		795821	1					
ANR	802040	PrimaryExpression	"""io.va"""		795821	0					
ANR	802041	Argument	0		795821	2					
ANR	802042	PrimaryExpression	0		795821	0					
ANR	802043	ExpressionStatement	r_io_desc_close ( tmpdesc )	3516:3:89661:89686	795821	1	True				
ANR	802044	CallExpression	r_io_desc_close ( tmpdesc )		795821	0					
ANR	802045	Callee	r_io_desc_close		795821	0					
ANR	802046	Identifier	r_io_desc_close		795821	0					
ANR	802047	ArgumentList	tmpdesc		795821	1					
ANR	802048	Argument	tmpdesc		795821	0					
ANR	802049	Identifier	tmpdesc		795821	0					
ANR	802050	ExpressionStatement	tmpdesc = NULL	3517:3:89691:89705	795821	2	True				
ANR	802051	AssignmentExpression	tmpdesc = NULL		795821	0		=			
ANR	802052	Identifier	tmpdesc		795821	0					
ANR	802053	Identifier	NULL		795821	1					
ANR	802054	IfStatement	if ( is_bits_set )		795821	39					
ANR	802055	Condition	is_bits_set	3519:6:89717:89727	795821	0	True				
ANR	802056	Identifier	is_bits_set		795821	0					
ANR	802057	CompoundStatement		1014:19:25079:25079	795821	1					
ANR	802058	ExpressionStatement	"r_config_set ( core -> config , ""asm.bits"" , tmpbits )"	3520:3:89735:89783	795821	0	True				
ANR	802059	CallExpression	"r_config_set ( core -> config , ""asm.bits"" , tmpbits )"		795821	0					
ANR	802060	Callee	r_config_set		795821	0					
ANR	802061	Identifier	r_config_set		795821	0					
ANR	802062	ArgumentList	core -> config		795821	1					
ANR	802063	Argument	core -> config		795821	0					
ANR	802064	PtrMemberAccess	core -> config		795821	0					
ANR	802065	Identifier	core		795821	0					
ANR	802066	Identifier	config		795821	1					
ANR	802067	Argument	"""asm.bits"""		795821	1					
ANR	802068	PrimaryExpression	"""asm.bits"""		795821	0					
ANR	802069	Argument	tmpbits		795821	2					
ANR	802070	Identifier	tmpbits		795821	0					
ANR	802071	ExpressionStatement	core -> fixedbits = oldfixedbits	3521:3:89788:89818	795821	1	True				
ANR	802072	AssignmentExpression	core -> fixedbits = oldfixedbits		795821	0		=			
ANR	802073	PtrMemberAccess	core -> fixedbits		795821	0					
ANR	802074	Identifier	core		795821	0					
ANR	802075	Identifier	fixedbits		795821	1					
ANR	802076	Identifier	oldfixedbits		795821	1					
ANR	802077	IfStatement	if ( tmpbsz != core -> blocksize )		795821	40					
ANR	802078	Condition	tmpbsz != core -> blocksize	3523:6:89830:89854	795821	0	True				
ANR	802079	EqualityExpression	tmpbsz != core -> blocksize		795821	0		!=			
ANR	802080	Identifier	tmpbsz		795821	0					
ANR	802081	PtrMemberAccess	core -> blocksize		795821	1					
ANR	802082	Identifier	core		795821	0					
ANR	802083	Identifier	blocksize		795821	1					
ANR	802084	CompoundStatement		1018:33:25206:25206	795821	1					
ANR	802085	ExpressionStatement	"r_core_block_size ( core , tmpbsz )"	3524:3:89862:89894	795821	0	True				
ANR	802086	CallExpression	"r_core_block_size ( core , tmpbsz )"		795821	0					
ANR	802087	Callee	r_core_block_size		795821	0					
ANR	802088	Identifier	r_core_block_size		795821	0					
ANR	802089	ArgumentList	core		795821	1					
ANR	802090	Argument	core		795821	0					
ANR	802091	Identifier	core		795821	0					
ANR	802092	Argument	tmpbsz		795821	1					
ANR	802093	Identifier	tmpbsz		795821	0					
ANR	802094	IfStatement	if ( tmpeval )		795821	41					
ANR	802095	Condition	tmpeval	3526:6:89906:89912	795821	0	True				
ANR	802096	Identifier	tmpeval		795821	0					
ANR	802097	CompoundStatement		1021:15:25264:25264	795821	1					
ANR	802098	ExpressionStatement	"r_core_cmd0 ( core , tmpeval )"	3527:3:89920:89947	795821	0	True				
ANR	802099	CallExpression	"r_core_cmd0 ( core , tmpeval )"		795821	0					
ANR	802100	Callee	r_core_cmd0		795821	0					
ANR	802101	Identifier	r_core_cmd0		795821	0					
ANR	802102	ArgumentList	core		795821	1					
ANR	802103	Argument	core		795821	0					
ANR	802104	Identifier	core		795821	0					
ANR	802105	Argument	tmpeval		795821	1					
ANR	802106	Identifier	tmpeval		795821	0					
ANR	802107	ExpressionStatement	R_FREE ( tmpeval )	3528:3:89952:89968	795821	1	True				
ANR	802108	CallExpression	R_FREE ( tmpeval )		795821	0					
ANR	802109	Callee	R_FREE		795821	0					
ANR	802110	Identifier	R_FREE		795821	0					
ANR	802111	ArgumentList	tmpeval		795821	1					
ANR	802112	Argument	tmpeval		795821	0					
ANR	802113	Identifier	tmpeval		795821	0					
ANR	802114	IfStatement	if ( flgspc_changed )		795821	42					
ANR	802115	Condition	flgspc_changed	3530:6:89980:89993	795821	0	True				
ANR	802116	Identifier	flgspc_changed		795821	0					
ANR	802117	CompoundStatement		1025:22:25345:25345	795821	1					
ANR	802118	ExpressionStatement	r_flag_space_pop ( core -> flags )	3531:3:90001:90031	795821	0	True				
ANR	802119	CallExpression	r_flag_space_pop ( core -> flags )		795821	0					
ANR	802120	Callee	r_flag_space_pop		795821	0					
ANR	802121	Identifier	r_flag_space_pop		795821	0					
ANR	802122	ArgumentList	core -> flags		795821	1					
ANR	802123	Argument	core -> flags		795821	0					
ANR	802124	PtrMemberAccess	core -> flags		795821	0					
ANR	802125	Identifier	core		795821	0					
ANR	802126	Identifier	flags		795821	1					
ANR	802127	ExpressionStatement	* ptr = '@'	3533:2:90039:90049	795821	43	True				
ANR	802128	AssignmentExpression	* ptr = '@'		795821	0		=			
ANR	802129	UnaryOperationExpression	* ptr		795821	0					
ANR	802130	UnaryOperator	*		795821	0					
ANR	802131	Identifier	ptr		795821	1					
ANR	802132	PrimaryExpression	'@'		795821	1					
ANR	802133	ExpressionStatement	rc = ret	3534:2:90053:90061	795821	44	True				
ANR	802134	AssignmentExpression	rc = ret		795821	0		=			
ANR	802135	Identifier	rc		795821	0					
ANR	802136	Identifier	ret		795821	1					
ANR	802137	GotoStatement	goto beach ;	3535:2:90065:90075	795821	45	True				
ANR	802138	Identifier	beach		795821	0					
ANR	802139	Label	fuji :	3537:0:90080:90084	795821	50	True				
ANR	802140	Identifier	fuji		795821	0					
ANR	802141	ExpressionStatement	"rc = cmd ? r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) ) : false"	3538:1:90087:90150	795821	51	True				
ANR	802142	AssignmentExpression	"rc = cmd ? r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) ) : false"		795821	0		=			
ANR	802143	Identifier	rc		795821	0					
ANR	802144	ConditionalExpression	"cmd ? r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) ) : false"		795821	1					
ANR	802145	Condition	cmd		795821	0					
ANR	802146	Identifier	cmd		795821	0					
ANR	802147	CallExpression	"r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) )"		795821	1					
ANR	802148	Callee	r_cmd_call		795821	0					
ANR	802149	Identifier	r_cmd_call		795821	0					
ANR	802150	ArgumentList	core -> rcmd		795821	1					
ANR	802151	Argument	core -> rcmd		795821	0					
ANR	802152	PtrMemberAccess	core -> rcmd		795821	0					
ANR	802153	Identifier	core		795821	0					
ANR	802154	Identifier	rcmd		795821	1					
ANR	802155	Argument	r_str_trim_head ( cmd )		795821	1					
ANR	802156	CallExpression	r_str_trim_head ( cmd )		795821	0					
ANR	802157	Callee	r_str_trim_head		795821	0					
ANR	802158	Identifier	r_str_trim_head		795821	0					
ANR	802159	ArgumentList	cmd		795821	1					
ANR	802160	Argument	cmd		795821	0					
ANR	802161	Identifier	cmd		795821	0					
ANR	802162	Identifier	false		795821	2					
ANR	802163	Label	beach :	3539:0:90152:90157	795821	52	True				
ANR	802164	Identifier	beach		795821	0					
ANR	802165	ExpressionStatement	r_cons_grep_process ( grep )	3540:1:90160:90186	795821	53	True				
ANR	802166	CallExpression	r_cons_grep_process ( grep )		795821	0					
ANR	802167	Callee	r_cons_grep_process		795821	0					
ANR	802168	Identifier	r_cons_grep_process		795821	0					
ANR	802169	ArgumentList	grep		795821	1					
ANR	802170	Argument	grep		795821	0					
ANR	802171	Identifier	grep		795821	0					
ANR	802172	IfStatement	if ( scr_html != - 1 )		795821	54					
ANR	802173	Condition	scr_html != - 1	3541:5:90193:90206	795821	0	True				
ANR	802174	EqualityExpression	scr_html != - 1		795821	0		!=			
ANR	802175	Identifier	scr_html		795821	0					
ANR	802176	UnaryOperationExpression	- 1		795821	1					
ANR	802177	UnaryOperator	-		795821	0					
ANR	802178	PrimaryExpression	1		795821	1					
ANR	802179	CompoundStatement		1036:21:25558:25558	795821	1					
ANR	802180	ExpressionStatement	r_cons_flush ( )	3542:2:90213:90228	795821	0	True				
ANR	802181	CallExpression	r_cons_flush ( )		795821	0					
ANR	802182	Callee	r_cons_flush		795821	0					
ANR	802183	Identifier	r_cons_flush		795821	0					
ANR	802184	ArgumentList			795821	1					
ANR	802185	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"	3543:2:90232:90283	795821	1	True				
ANR	802186	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"		795821	0					
ANR	802187	Callee	r_config_set_i		795821	0					
ANR	802188	Identifier	r_config_set_i		795821	0					
ANR	802189	ArgumentList	core -> config		795821	1					
ANR	802190	Argument	core -> config		795821	0					
ANR	802191	PtrMemberAccess	core -> config		795821	0					
ANR	802192	Identifier	core		795821	0					
ANR	802193	Identifier	config		795821	1					
ANR	802194	Argument	"""scr.html"""		795821	1					
ANR	802195	PrimaryExpression	"""scr.html"""		795821	0					
ANR	802196	Argument	scr_html		795821	2					
ANR	802197	Identifier	scr_html		795821	0					
ANR	802198	IfStatement	if ( scr_color != - 1 )		795821	55					
ANR	802199	Condition	scr_color != - 1	3545:5:90293:90307	795821	0	True				
ANR	802200	EqualityExpression	scr_color != - 1		795821	0		!=			
ANR	802201	Identifier	scr_color		795821	0					
ANR	802202	UnaryOperationExpression	- 1		795821	1					
ANR	802203	UnaryOperator	-		795821	0					
ANR	802204	PrimaryExpression	1		795821	1					
ANR	802205	CompoundStatement		1040:22:25659:25659	795821	1					
ANR	802206	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , scr_color )"	3546:2:90314:90367	795821	0	True				
ANR	802207	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , scr_color )"		795821	0					
ANR	802208	Callee	r_config_set_i		795821	0					
ANR	802209	Identifier	r_config_set_i		795821	0					
ANR	802210	ArgumentList	core -> config		795821	1					
ANR	802211	Argument	core -> config		795821	0					
ANR	802212	PtrMemberAccess	core -> config		795821	0					
ANR	802213	Identifier	core		795821	0					
ANR	802214	Identifier	config		795821	1					
ANR	802215	Argument	"""scr.color"""		795821	1					
ANR	802216	PrimaryExpression	"""scr.color"""		795821	0					
ANR	802217	Argument	scr_color		795821	2					
ANR	802218	Identifier	scr_color		795821	0					
ANR	802219	ExpressionStatement	r_list_free ( tmpenvs )	3548:1:90373:90394	795821	56	True				
ANR	802220	CallExpression	r_list_free ( tmpenvs )		795821	0					
ANR	802221	Callee	r_list_free		795821	0					
ANR	802222	Identifier	r_list_free		795821	0					
ANR	802223	ArgumentList	tmpenvs		795821	1					
ANR	802224	Argument	tmpenvs		795821	0					
ANR	802225	Identifier	tmpenvs		795821	0					
ANR	802226	IfStatement	if ( tmpdesc )		795821	57					
ANR	802227	Condition	tmpdesc	3549:5:90401:90407	795821	0	True				
ANR	802228	Identifier	tmpdesc		795821	0					
ANR	802229	CompoundStatement		1044:14:25759:25759	795821	1					
ANR	802230	ExpressionStatement	r_io_desc_close ( tmpdesc )	3550:2:90414:90439	795821	0	True				
ANR	802231	CallExpression	r_io_desc_close ( tmpdesc )		795821	0					
ANR	802232	Callee	r_io_desc_close		795821	0					
ANR	802233	Identifier	r_io_desc_close		795821	0					
ANR	802234	ArgumentList	tmpdesc		795821	1					
ANR	802235	Argument	tmpdesc		795821	0					
ANR	802236	Identifier	tmpdesc		795821	0					
ANR	802237	ExpressionStatement	tmpdesc = NULL	3551:2:90443:90457	795821	1	True				
ANR	802238	AssignmentExpression	tmpdesc = NULL		795821	0		=			
ANR	802239	Identifier	tmpdesc		795821	0					
ANR	802240	Identifier	NULL		795821	1					
ANR	802241	ExpressionStatement	core -> fixedarch = oldfixedarch	3553:1:90463:90493	795821	58	True				
ANR	802242	AssignmentExpression	core -> fixedarch = oldfixedarch		795821	0		=			
ANR	802243	PtrMemberAccess	core -> fixedarch		795821	0					
ANR	802244	Identifier	core		795821	0					
ANR	802245	Identifier	fixedarch		795821	1					
ANR	802246	Identifier	oldfixedarch		795821	1					
ANR	802247	ExpressionStatement	core -> fixedbits = oldfixedbits	3554:1:90496:90526	795821	59	True				
ANR	802248	AssignmentExpression	core -> fixedbits = oldfixedbits		795821	0		=			
ANR	802249	PtrMemberAccess	core -> fixedbits		795821	0					
ANR	802250	Identifier	core		795821	0					
ANR	802251	Identifier	fixedbits		795821	1					
ANR	802252	Identifier	oldfixedbits		795821	1					
ANR	802253	IfStatement	if ( tmpseek )		795821	60					
ANR	802254	Condition	tmpseek	3555:5:90533:90539	795821	0	True				
ANR	802255	Identifier	tmpseek		795821	0					
ANR	802256	CompoundStatement		1050:14:25891:25891	795821	1					
ANR	802257	ExpressionStatement	* tmpseek = cmd_tmpseek	3556:2:90546:90568	795821	0	True				
ANR	802258	AssignmentExpression	* tmpseek = cmd_tmpseek		795821	0		=			
ANR	802259	UnaryOperationExpression	* tmpseek		795821	0					
ANR	802260	UnaryOperator	*		795821	0					
ANR	802261	Identifier	tmpseek		795821	1					
ANR	802262	Identifier	cmd_tmpseek		795821	1					
ANR	802263	IfStatement	if ( cmd_ignbithints != - 1 )		795821	61					
ANR	802264	Condition	cmd_ignbithints != - 1	3558:5:90578:90598	795821	0	True				
ANR	802265	EqualityExpression	cmd_ignbithints != - 1		795821	0		!=			
ANR	802266	Identifier	cmd_ignbithints		795821	0					
ANR	802267	UnaryOperationExpression	- 1		795821	1					
ANR	802268	UnaryOperator	-		795821	0					
ANR	802269	PrimaryExpression	1		795821	1					
ANR	802270	CompoundStatement		1053:28:25950:25950	795821	1					
ANR	802271	ExpressionStatement	"r_config_set_i ( core -> config , ""anal.ignbithints"" , cmd_ignbithints )"	3559:2:90605:90671	795821	0	True				
ANR	802272	CallExpression	"r_config_set_i ( core -> config , ""anal.ignbithints"" , cmd_ignbithints )"		795821	0					
ANR	802273	Callee	r_config_set_i		795821	0					
ANR	802274	Identifier	r_config_set_i		795821	0					
ANR	802275	ArgumentList	core -> config		795821	1					
ANR	802276	Argument	core -> config		795821	0					
ANR	802277	PtrMemberAccess	core -> config		795821	0					
ANR	802278	Identifier	core		795821	0					
ANR	802279	Identifier	config		795821	1					
ANR	802280	Argument	"""anal.ignbithints"""		795821	1					
ANR	802281	PrimaryExpression	"""anal.ignbithints"""		795821	0					
ANR	802282	Argument	cmd_ignbithints		795821	2					
ANR	802283	Identifier	cmd_ignbithints		795821	0					
ANR	802284	ReturnStatement	return rc ;	3561:1:90677:90686	795821	62	True				
ANR	802285	Identifier	rc		795821	0					
ANR	802286	Label	fail :	3562:0:90688:90692	795821	63	True				
ANR	802287	Identifier	fail		795821	0					
ANR	802288	ExpressionStatement	rc = - 1	3563:1:90695:90702	795821	64	True				
ANR	802289	AssignmentExpression	rc = - 1		795821	0		=			
ANR	802290	Identifier	rc		795821	0					
ANR	802291	UnaryOperationExpression	- 1		795821	1					
ANR	802292	UnaryOperator	-		795821	0					
ANR	802293	PrimaryExpression	1		795821	1					
ANR	802294	GotoStatement	goto beach ;	3564:1:90705:90715	795821	65	True				
ANR	802295	Identifier	beach		795821	0					
ANR	802296	ReturnType	static int		795821	1					
ANR	802297	Identifier	r_core_cmd_subst_i		795821	2					
ANR	802298	ParameterList	"RCore * core , char * cmd , char * colon , bool * tmpseek"		795821	3					
ANR	802299	Parameter	RCore * core	2506:30:64598:64608	795821	0	True				
ANR	802300	ParameterType	RCore *		795821	0					
ANR	802301	Identifier	core		795821	1					
ANR	802302	Parameter	char * cmd	2506:43:64611:64619	795821	1	True				
ANR	802303	ParameterType	char *		795821	0					
ANR	802304	Identifier	cmd		795821	1					
ANR	802305	Parameter	char * colon	2506:54:64622:64632	795821	2	True				
ANR	802306	ParameterType	char *		795821	0					
ANR	802307	Identifier	colon		795821	1					
ANR	802308	Parameter	bool * tmpseek	2506:67:64635:64647	795821	3	True				
ANR	802309	ParameterType	bool *		795821	0					
ANR	802310	Identifier	tmpseek		795821	1					
ANR	802311	CFGEntryNode	ENTRY		795821		True				
ANR	802312	CFGExitNode	EXIT		795821		True				
ANR	802313	InfiniteForNode	true		795821		True				
ANR	802314	Symbol	stdin		795821						
ANR	802315	Symbol	* q ++		795821						
ANR	802316	Symbol	find_eoq		795821						
ANR	802317	Symbol	* ch		795821						
ANR	802318	Symbol	strchr		795821						
ANR	802319	Symbol	core -> offset		795821						
ANR	802320	Symbol	* tmpseek		795821						
ANR	802321	Symbol	& core -> oobi_len		795821						
ANR	802322	Symbol	oneline		795821						
ANR	802323	Symbol	tmpenvs		795821						
ANR	802324	Symbol	strncmp		795821						
ANR	802325	Symbol	flgspc_changed		795821						
ANR	802326	Symbol	len		795821						
ANR	802327	Symbol	trim		795821						
ANR	802328	Symbol	* sc		795821						
ANR	802329	Symbol	r_core_cmd_str_pipe		795821						
ANR	802330	Symbol	showHelp		795821						
ANR	802331	Symbol	help_msg_vertical_bar		795821						
ANR	802332	Symbol	* arroba		795821						
ANR	802333	Symbol	scr_color		795821						
ANR	802334	Symbol	* core -> num		795821						
ANR	802335	Symbol	* cmd		795821						
ANR	802336	Symbol	core -> blocksize		795821						
ANR	802337	Symbol	set_tmp_bits		795821						
ANR	802338	Symbol	r_file_slurp		795821						
ANR	802339	Symbol	tmpasm		795821						
ANR	802340	Symbol	* tovars		795821						
ANR	802341	Symbol	* v ++		795821						
ANR	802342	Symbol	core -> block		795821						
ANR	802343	Symbol	r_list_newf		795821						
ANR	802344	Symbol	r_str_trim_tail		795821						
ANR	802345	Symbol	str		795821						
ANR	802346	Symbol	rc		795821						
ANR	802347	Symbol	* * * core		795821						
ANR	802348	Symbol	oldText		795821						
ANR	802349	Symbol	appendResult		795821						
ANR	802350	Symbol	tmpbits		795821						
ANR	802351	Symbol	r_config_get_i		795821						
ANR	802352	Symbol	core -> cons -> use_tts		795821						
ANR	802353	Symbol	r_str_trim_ro		795821						
ANR	802354	Symbol	core -> cmd_in_backticks		795821						
ANR	802355	Symbol	detail		795821						
ANR	802356	Symbol	bb		795821						
ANR	802357	Symbol	isalpha		795821						
ANR	802358	Symbol	oldfixedarch		795821						
ANR	802359	Symbol	regval		795821						
ANR	802360	Symbol	* core		795821						
ANR	802361	Symbol	core -> fixedbits		795821						
ANR	802362	Symbol	R_ABS		795821						
ANR	802363	Symbol	two		795821						
ANR	802364	Symbol	core -> anal		795821						
ANR	802365	Symbol	core -> fixedblock		795821						
ANR	802366	Symbol	sc		795821						
ANR	802367	Symbol	r_str_lastbut		795821						
ANR	802368	Symbol	core -> cons		795821						
ANR	802369	Symbol	core -> io		795821						
ANR	802370	Symbol	r_str_trim_head_tail		795821						
ANR	802371	Symbol	r_core_cmd_foreach		795821						
ANR	802372	Symbol	& tmpbits		795821						
ANR	802373	Symbol	is_bits_set		795821						
ANR	802374	Symbol	* core -> oobi		795821						
ANR	802375	Symbol	r_hex_str2bin		795821						
ANR	802376	Symbol	sep		795821						
ANR	802377	Symbol	b		795821						
ANR	802378	Symbol	d		795821						
ANR	802379	Symbol	ch		795821						
ANR	802380	Symbol	f		795821						
ANR	802381	Symbol	sz		795821						
ANR	802382	Symbol	i		795821						
ANR	802383	Symbol	r_anal_bb_offset_inst		795821						
ANR	802384	Symbol	core -> flags		795821						
ANR	802385	Symbol	k		795821						
ANR	802386	Symbol	r_str_prepend		795821						
ANR	802387	Symbol	n		795821						
ANR	802388	Symbol	IS_DIGIT		795821						
ANR	802389	Symbol	o		795821						
ANR	802390	Symbol	p		795821						
ANR	802391	Symbol	q		795821						
ANR	802392	Symbol	buf		795821						
ANR	802393	Symbol	pipecolor		795821						
ANR	802394	Symbol	s		795821						
ANR	802395	Symbol	* strlen		795821						
ANR	802396	Symbol	* fromvars		795821						
ANR	802397	Symbol	v		795821						
ANR	802398	Symbol	x00		795821						
ANR	802399	Symbol	to		795821						
ANR	802400	Symbol	* r_cons_singleton		795821						
ANR	802401	Symbol	r_buf_size		795821						
ANR	802402	Symbol	tmpfd		795821						
ANR	802403	Symbol	r_core_cmd_str		795821						
ANR	802404	Symbol	tmpdesc		795821						
ANR	802405	Symbol	use_editor		795821						
ANR	802406	Symbol	IS_WHITECHAR		795821						
ANR	802407	Symbol	realloc		795821						
ANR	802408	Symbol	scr_html		795821						
ANR	802409	Symbol	IS_WHITESPACE		795821						
ANR	802410	Symbol	empty		795821						
ANR	802411	Symbol	strlen		795821						
ANR	802412	Symbol	memcmp		795821						
ANR	802413	Symbol	* rule		795821						
ANR	802414	Symbol	* ptr2		795821						
ANR	802415	Symbol	tmpeval		795821						
ANR	802416	Symbol	core -> tmpseek		795821						
ANR	802417	Symbol	ret		795821						
ANR	802418	Symbol	res		795821						
ANR	802419	Symbol	sdb_querys		795821						
ANR	802420	Symbol	core -> io -> desc		795821						
ANR	802421	Symbol	r_buf_new_with_bytes		795821						
ANR	802422	Symbol	addr_is_set		795821						
ANR	802423	Symbol	haveQuote		795821						
ANR	802424	Symbol	& sz		795821						
ANR	802425	Symbol	strstr		795821						
ANR	802426	Symbol	tmpseek		795821						
ANR	802427	Symbol	* fdnum		795821						
ANR	802428	Symbol	numexpr		795821						
ANR	802429	Symbol	r_anal_bb_from_offset		795821						
ANR	802430	Symbol	usemyblock		795821						
ANR	802431	Symbol	r_io_open_buffer		795821						
ANR	802432	Symbol	rule		795821						
ANR	802433	Symbol	curfrom		795821						
ANR	802434	Symbol	r_num_math		795821						
ANR	802435	Symbol	r_str_trim_head		795821						
ANR	802436	Symbol	inst_off		795821						
ANR	802437	Symbol	grep		795821						
ANR	802438	Symbol	* p ++		795821						
ANR	802439	Symbol	false		795821						
ANR	802440	Symbol	core -> oobi_len		795821						
ANR	802441	Symbol	findSeparator		795821						
ANR	802442	Symbol	ptr		795821						
ANR	802443	Symbol	arroba		795821						
ANR	802444	Symbol	colon		795821						
ANR	802445	Symbol	feof		795821						
ANR	802446	Symbol	strdup		795821						
ANR	802447	Symbol	append		795821						
ANR	802448	Symbol	* * core -> io		795821						
ANR	802449	Symbol	r_core_cmdf		795821						
ANR	802450	Symbol	COLOR_MODE_DISABLED		795821						
ANR	802451	Symbol	r_debug_reg_get		795821						
ANR	802452	Symbol	core -> io -> desc -> fd		795821						
ANR	802453	Symbol	eos		795821						
ANR	802454	Symbol	* sep		795821						
ANR	802455	Symbol	fromvars		795821						
ANR	802456	Symbol	r_cons_pipe_open		795821						
ANR	802457	Symbol	curto		795821						
ANR	802458	Symbol	r_num_tail		795821						
ANR	802459	Symbol	core -> fixedarch		795821						
ANR	802460	Symbol	* buf		795821						
ANR	802461	Symbol	tmpenvs_free		795821						
ANR	802462	Symbol	bits		795821						
ANR	802463	Symbol	index		795821						
ANR	802464	Symbol	ptr2		795821						
ANR	802465	Symbol	r_cmd_call		795821						
ANR	802466	Symbol	oseek		795821						
ANR	802467	Symbol	cmd		795821						
ANR	802468	Symbol	r_str_append		795821						
ANR	802469	Symbol	* core -> cons		795821						
ANR	802470	Symbol	ocolor		795821						
ANR	802471	Symbol	core -> oobi		795821						
ANR	802472	Symbol	core -> sdb		795821						
ANR	802473	Symbol	r_config_get		795821						
ANR	802474	Symbol	range		795821						
ANR	802475	Symbol	r_flag_space_push		795821						
ANR	802476	Symbol	help_msg_greater_sign		795821						
ANR	802477	Symbol	out		795821						
ANR	802478	Symbol	* curto		795821						
ANR	802479	Symbol	r_core_cmd_subst		795821						
ANR	802480	Symbol	offstr		795821						
ANR	802481	Symbol	help_msg_at		795821						
ANR	802482	Symbol	* str		795821						
ANR	802483	Symbol	r_core_cmd_buffer		795821						
ANR	802484	Symbol	r_cmd_alias_get		795821						
ANR	802485	Symbol	d -> perm		795821						
ANR	802486	Symbol	atoi		795821						
ANR	802487	Symbol	r_flag_get		795821						
ANR	802488	Symbol	r_core_cmd_foreach3		795821						
ANR	802489	Symbol	malloc		795821						
ANR	802490	Symbol	editor		795821						
ANR	802491	Symbol	tovars		795821						
ANR	802492	Symbol	& tmpasm		795821						
ANR	802493	Symbol	bb -> ninstr		795821						
ANR	802494	Symbol	fdn		795821						
ANR	802495	Symbol	r_cons_grep_strip		795821						
ANR	802496	Symbol	* curfrom		795821						
ANR	802497	Symbol	char		795821						
ANR	802498	Symbol	r_io_system		795821						
ANR	802499	Symbol	r_cons_singleton ( ) -> is_interactive		795821						
ANR	802500	Symbol	core -> num -> value		795821						
ANR	802501	Symbol	r_file_temp		795821						
ANR	802502	Symbol	bb -> addr		795821						
ANR	802503	Symbol	parse_tmp_evals		795821						
ANR	802504	Symbol	* ptr		795821						
ANR	802505	Symbol	from		795821						
ANR	802506	Symbol	core -> num		795821						
ANR	802507	Symbol	* core -> io -> desc		795821						
ANR	802508	Symbol	R_PERM_RWX		795821						
ANR	802509	Symbol	strcmp		795821						
ANR	802510	Symbol	NULL		795821						
ANR	802511	Symbol	tick		795821						
ANR	802512	Symbol	quotestr		795821						
ANR	802513	Symbol	core -> io -> va		795821						
ANR	802514	Symbol	r_str_trim_nc		795821						
ANR	802515	Symbol	is_arch_set		795821						
ANR	802516	Symbol	core		795821						
ANR	802517	Symbol	true		795821						
ANR	802518	Symbol	* 0		795821						
ANR	802519	Symbol	* 1		795821						
ANR	802520	Symbol	pamode		795821						
ANR	802521	Symbol	cmd_tmpseek		795821						
ANR	802522	Symbol	fdnum		795821						
ANR	802523	Symbol	line		795821						
ANR	802524	Symbol	cmd_ignbithints		795821						
ANR	802525	Symbol	r_io_desc_size		795821						
ANR	802526	Symbol	r_str_newf		795821						
ANR	802527	Symbol	r_str_replace		795821						
ANR	802528	Symbol	r_cons_singleton		795821						
ANR	802529	Symbol	UT64_MAX		795821						
ANR	802530	Symbol	addr		795821						
ANR	802531	Symbol	value		795821						
ANR	802532	Symbol	* * core		795821						
ANR	802533	Symbol	core -> config		795821						
ANR	802534	Symbol	core -> rcmd		795821						
ANR	802535	Symbol	* bb		795821						
ANR	802536	Symbol	* ptr ++		795821						
ANR	802537	Symbol	* editor		795821						
ANR	802538	Symbol	r_str_firstbut		795821						
ANR	802539	Symbol	* offstr		795821						
ANR	802540	Symbol	* d		795821						
ANR	802541	Symbol	d -> fd		795821						
ANR	802542	Symbol	set_tmp_arch		795821						
ANR	802543	Symbol	* core -> io		795821						
ANR	802544	Symbol	* i		795821						
ANR	802545	Symbol	tmpbsz		795821						
ANR	802546	Symbol	oldfixedbits		795821						
ANR	802547	Symbol	pipefd		795821						
ANR	802548	Symbol	* p		795821						
ANR	802549	Symbol	* q		795821						
ANR	802550	Symbol	* trim		795821						
ANR	802551	Symbol	mander		795821						
ANR	802552	Symbol	core -> dbg		795821						
ANR	802553	Function	foreach_comment	3567:0:90720:91070							
ANR	802554	FunctionDef	"foreach_comment (void * user , const char * k , const char * v)"		802553	0					
ANR	802555	CompoundStatement		3567:69:90789:91070	802553	0					
ANR	802556	IdentifierDeclStatement	RAnalMetaUserItem * ui = user ;	3568:1:90792:90820	802553	0	True				
ANR	802557	IdentifierDecl	* ui = user		802553	0					
ANR	802558	IdentifierDeclType	RAnalMetaUserItem *		802553	0					
ANR	802559	Identifier	ui		802553	1					
ANR	802560	AssignmentExpression	* ui = user		802553	2		=			
ANR	802561	Identifier	user		802553	0					
ANR	802562	Identifier	user		802553	1					
ANR	802563	IdentifierDeclStatement	RCore * core = ui -> anal -> user ;	3569:1:90823:90851	802553	1	True				
ANR	802564	IdentifierDecl	* core = ui -> anal -> user		802553	0					
ANR	802565	IdentifierDeclType	RCore *		802553	0					
ANR	802566	Identifier	core		802553	1					
ANR	802567	AssignmentExpression	* core = ui -> anal -> user		802553	2		=			
ANR	802568	Identifier	core		802553	0					
ANR	802569	PtrMemberAccess	ui -> anal -> user		802553	1					
ANR	802570	PtrMemberAccess	ui -> anal		802553	0					
ANR	802571	Identifier	ui		802553	0					
ANR	802572	Identifier	anal		802553	1					
ANR	802573	Identifier	user		802553	1					
ANR	802574	IdentifierDeclStatement	const char * cmd = ui -> user ;	3570:1:90854:90880	802553	2	True				
ANR	802575	IdentifierDecl	* cmd = ui -> user		802553	0					
ANR	802576	IdentifierDeclType	const char *		802553	0					
ANR	802577	Identifier	cmd		802553	1					
ANR	802578	AssignmentExpression	* cmd = ui -> user		802553	2		=			
ANR	802579	Identifier	cmd		802553	0					
ANR	802580	PtrMemberAccess	ui -> user		802553	1					
ANR	802581	Identifier	ui		802553	0					
ANR	802582	Identifier	user		802553	1					
ANR	802583	IfStatement	"if ( ! strncmp ( k , ""meta.C."" , 7 ) )"		802553	3					
ANR	802584	Condition	"! strncmp ( k , ""meta.C."" , 7 )"	3571:5:90887:90912	802553	0	True				
ANR	802585	UnaryOperationExpression	"! strncmp ( k , ""meta.C."" , 7 )"		802553	0					
ANR	802586	UnaryOperator	!		802553	0					
ANR	802587	CallExpression	"strncmp ( k , ""meta.C."" , 7 )"		802553	1					
ANR	802588	Callee	strncmp		802553	0					
ANR	802589	Identifier	strncmp		802553	0					
ANR	802590	ArgumentList	k		802553	1					
ANR	802591	Argument	k		802553	0					
ANR	802592	Identifier	k		802553	0					
ANR	802593	Argument	"""meta.C."""		802553	1					
ANR	802594	PrimaryExpression	"""meta.C."""		802553	0					
ANR	802595	Argument	7		802553	2					
ANR	802596	PrimaryExpression	7		802553	0					
ANR	802597	CompoundStatement		6:2:129:166	802553	1					
ANR	802598	IdentifierDeclStatement	"char * cmt = ( char * ) sdb_decode ( v , 0 ) ;"	3572:2:90919:90956	802553	0	True				
ANR	802599	IdentifierDecl	"* cmt = ( char * ) sdb_decode ( v , 0 )"		802553	0					
ANR	802600	IdentifierDeclType	char *		802553	0					
ANR	802601	Identifier	cmt		802553	1					
ANR	802602	AssignmentExpression	"* cmt = ( char * ) sdb_decode ( v , 0 )"		802553	2		=			
ANR	802603	Identifier	cmt		802553	0					
ANR	802604	CastExpression	"( char * ) sdb_decode ( v , 0 )"		802553	1					
ANR	802605	CastTarget	char *		802553	0					
ANR	802606	CallExpression	"sdb_decode ( v , 0 )"		802553	1					
ANR	802607	Callee	sdb_decode		802553	0					
ANR	802608	Identifier	sdb_decode		802553	0					
ANR	802609	ArgumentList	v		802553	1					
ANR	802610	Argument	v		802553	0					
ANR	802611	Identifier	v		802553	0					
ANR	802612	Argument	0		802553	1					
ANR	802613	PrimaryExpression	0		802553	0					
ANR	802614	IfStatement	if ( cmt )		802553	1					
ANR	802615	Condition	cmt	3573:6:90964:90966	802553	0	True				
ANR	802616	Identifier	cmt		802553	0					
ANR	802617	CompoundStatement		7:11:179:179	802553	1					
ANR	802618	ExpressionStatement	"r_core_cmdf ( core , ""s %s"" , k + 7 )"	3574:3:90974:91007	802553	0	True				
ANR	802619	CallExpression	"r_core_cmdf ( core , ""s %s"" , k + 7 )"		802553	0					
ANR	802620	Callee	r_core_cmdf		802553	0					
ANR	802621	Identifier	r_core_cmdf		802553	0					
ANR	802622	ArgumentList	core		802553	1					
ANR	802623	Argument	core		802553	0					
ANR	802624	Identifier	core		802553	0					
ANR	802625	Argument	"""s %s"""		802553	1					
ANR	802626	PrimaryExpression	"""s %s"""		802553	0					
ANR	802627	Argument	k + 7		802553	2					
ANR	802628	AdditiveExpression	k + 7		802553	0		+			
ANR	802629	Identifier	k		802553	0					
ANR	802630	PrimaryExpression	7		802553	1					
ANR	802631	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3575:3:91012:91035	802553	1	True				
ANR	802632	CallExpression	"r_core_cmd0 ( core , cmd )"		802553	0					
ANR	802633	Callee	r_core_cmd0		802553	0					
ANR	802634	Identifier	r_core_cmd0		802553	0					
ANR	802635	ArgumentList	core		802553	1					
ANR	802636	Argument	core		802553	0					
ANR	802637	Identifier	core		802553	0					
ANR	802638	Argument	cmd		802553	1					
ANR	802639	Identifier	cmd		802553	0					
ANR	802640	ExpressionStatement	free ( cmt )	3576:3:91040:91050	802553	2	True				
ANR	802641	CallExpression	free ( cmt )		802553	0					
ANR	802642	Callee	free		802553	0					
ANR	802643	Identifier	free		802553	0					
ANR	802644	ArgumentList	cmt		802553	1					
ANR	802645	Argument	cmt		802553	0					
ANR	802646	Identifier	cmt		802553	0					
ANR	802647	ReturnStatement	return 1 ;	3579:1:91060:91068	802553	4	True				
ANR	802648	PrimaryExpression	1		802553	0					
ANR	802649	ReturnType	static int		802553	1					
ANR	802650	Identifier	foreach_comment		802553	2					
ANR	802651	ParameterList	"void * user , const char * k , const char * v"		802553	3					
ANR	802652	Parameter	void * user	3567:27:90747:90756	802553	0	True				
ANR	802653	ParameterType	void *		802553	0					
ANR	802654	Identifier	user		802553	1					
ANR	802655	Parameter	const char * k	3567:39:90759:90771	802553	1	True				
ANR	802656	ParameterType	const char *		802553	0					
ANR	802657	Identifier	k		802553	1					
ANR	802658	Parameter	const char * v	3567:54:90774:90786	802553	2	True				
ANR	802659	ParameterType	const char *		802553	0					
ANR	802660	Identifier	v		802553	1					
ANR	802661	CFGEntryNode	ENTRY		802553		True				
ANR	802662	CFGExitNode	EXIT		802553		True				
ANR	802663	Symbol	* * ui		802553						
ANR	802664	Symbol	sdb_decode		802553						
ANR	802665	Symbol	ui -> anal		802553						
ANR	802666	Symbol	ui -> user		802553						
ANR	802667	Symbol	* ui -> anal		802553						
ANR	802668	Symbol	k		802553						
ANR	802669	Symbol	cmt		802553						
ANR	802670	Symbol	core		802553						
ANR	802671	Symbol	strncmp		802553						
ANR	802672	Symbol	ui		802553						
ANR	802673	Symbol	v		802553						
ANR	802674	Symbol	* ui		802553						
ANR	802675	Symbol	cmd		802553						
ANR	802676	Symbol	user		802553						
ANR	802677	Symbol	ui -> anal -> user		802553						
ANR	802678	ClassDef	exec_command_t	3582:0:91073:91129							
ANR	802679	DeclStmt									
ANR	802680	Decl							RCore	RCore *	core
ANR	802681	DeclStmt									
ANR	802682	Decl							const char	const char *	cmd
ANR	802683	Function	exec_command_on_flag	3587:0:91133:91391							
ANR	802684	FunctionDef	"exec_command_on_flag (RFlagItem * flg , void * u)"		802683	0					
ANR	802685	CompoundStatement		3587:58:91191:91391	802683	0					
ANR	802686	IdentifierDeclStatement	struct exec_command_t * user = ( struct exec_command_t * ) u ;	3588:1:91194:91250	802683	0	True				
ANR	802687	IdentifierDecl	* user = ( struct exec_command_t * ) u		802683	0					
ANR	802688	IdentifierDeclType	struct exec_command_t *		802683	0					
ANR	802689	Identifier	user		802683	1					
ANR	802690	AssignmentExpression	* user = ( struct exec_command_t * ) u		802683	2		=			
ANR	802691	Identifier	user		802683	0					
ANR	802692	CastExpression	( struct exec_command_t * ) u		802683	1					
ANR	802693	CastTarget	struct exec_command_t *		802683	0					
ANR	802694	Identifier	u		802683	1					
ANR	802695	ExpressionStatement	"r_core_block_size ( user -> core , flg -> size )"	3589:1:91253:91294	802683	1	True				
ANR	802696	CallExpression	"r_core_block_size ( user -> core , flg -> size )"		802683	0					
ANR	802697	Callee	r_core_block_size		802683	0					
ANR	802698	Identifier	r_core_block_size		802683	0					
ANR	802699	ArgumentList	user -> core		802683	1					
ANR	802700	Argument	user -> core		802683	0					
ANR	802701	PtrMemberAccess	user -> core		802683	0					
ANR	802702	Identifier	user		802683	0					
ANR	802703	Identifier	core		802683	1					
ANR	802704	Argument	flg -> size		802683	1					
ANR	802705	PtrMemberAccess	flg -> size		802683	0					
ANR	802706	Identifier	flg		802683	0					
ANR	802707	Identifier	size		802683	1					
ANR	802708	ExpressionStatement	"r_core_seek ( user -> core , flg -> offset , 1 )"	3590:1:91297:91337	802683	2	True				
ANR	802709	CallExpression	"r_core_seek ( user -> core , flg -> offset , 1 )"		802683	0					
ANR	802710	Callee	r_core_seek		802683	0					
ANR	802711	Identifier	r_core_seek		802683	0					
ANR	802712	ArgumentList	user -> core		802683	1					
ANR	802713	Argument	user -> core		802683	0					
ANR	802714	PtrMemberAccess	user -> core		802683	0					
ANR	802715	Identifier	user		802683	0					
ANR	802716	Identifier	core		802683	1					
ANR	802717	Argument	flg -> offset		802683	1					
ANR	802718	PtrMemberAccess	flg -> offset		802683	0					
ANR	802719	Identifier	flg		802683	0					
ANR	802720	Identifier	offset		802683	1					
ANR	802721	Argument	1		802683	2					
ANR	802722	PrimaryExpression	1		802683	0					
ANR	802723	ExpressionStatement	"r_core_cmd0 ( user -> core , user -> cmd )"	3591:1:91340:91375	802683	3	True				
ANR	802724	CallExpression	"r_core_cmd0 ( user -> core , user -> cmd )"		802683	0					
ANR	802725	Callee	r_core_cmd0		802683	0					
ANR	802726	Identifier	r_core_cmd0		802683	0					
ANR	802727	ArgumentList	user -> core		802683	1					
ANR	802728	Argument	user -> core		802683	0					
ANR	802729	PtrMemberAccess	user -> core		802683	0					
ANR	802730	Identifier	user		802683	0					
ANR	802731	Identifier	core		802683	1					
ANR	802732	Argument	user -> cmd		802683	1					
ANR	802733	PtrMemberAccess	user -> cmd		802683	0					
ANR	802734	Identifier	user		802683	0					
ANR	802735	Identifier	cmd		802683	1					
ANR	802736	ReturnStatement	return true ;	3592:1:91378:91389	802683	4	True				
ANR	802737	Identifier	true		802683	0					
ANR	802738	ReturnType	static bool		802683	1					
ANR	802739	Identifier	exec_command_on_flag		802683	2					
ANR	802740	ParameterList	"RFlagItem * flg , void * u"		802683	3					
ANR	802741	Parameter	RFlagItem * flg	3587:33:91166:91179	802683	0	True				
ANR	802742	ParameterType	RFlagItem *		802683	0					
ANR	802743	Identifier	flg		802683	1					
ANR	802744	Parameter	void * u	3587:49:91182:91188	802683	1	True				
ANR	802745	ParameterType	void *		802683	0					
ANR	802746	Identifier	u		802683	1					
ANR	802747	CFGEntryNode	ENTRY		802683		True				
ANR	802748	CFGExitNode	EXIT		802683		True				
ANR	802749	Symbol	flg		802683						
ANR	802750	Symbol	* flg		802683						
ANR	802751	Symbol	* user		802683						
ANR	802752	Symbol	flg -> offset		802683						
ANR	802753	Symbol	user -> cmd		802683						
ANR	802754	Symbol	u		802683						
ANR	802755	Symbol	user -> core		802683						
ANR	802756	Symbol	flg -> size		802683						
ANR	802757	Symbol	true		802683						
ANR	802758	Symbol	user		802683						
ANR	802759	Function	foreach_pairs	3595:0:91394:91841							
ANR	802760	FunctionDef	"foreach_pairs (RCore * core , const char * cmd , const char * each)"		802759	0					
ANR	802761	CompoundStatement		3595:74:91468:91841	802759	0					
ANR	802762	IdentifierDeclStatement	const char * arg ;	3596:1:91471:91486	802759	0	True				
ANR	802763	IdentifierDecl	* arg		802759	0					
ANR	802764	IdentifierDeclType	const char *		802759	0					
ANR	802765	Identifier	arg		802759	1					
ANR	802766	IdentifierDeclStatement	int pair = 0 ;	3597:1:91489:91501	802759	1	True				
ANR	802767	IdentifierDecl	pair = 0		802759	0					
ANR	802768	IdentifierDeclType	int		802759	0					
ANR	802769	Identifier	pair		802759	1					
ANR	802770	AssignmentExpression	pair = 0		802759	2		=			
ANR	802771	Identifier	pair		802759	0					
ANR	802772	PrimaryExpression	0		802759	1					
ANR	802773	ForStatement	for ( arg = each ; ; )		802759	2					
ANR	802774	ForInit	arg = each ;	3598:6:91509:91520	802759	0	True				
ANR	802775	AssignmentExpression	arg = each		802759	0		=			
ANR	802776	Identifier	arg		802759	0					
ANR	802777	Identifier	each		802759	1					
ANR	802778	CompoundStatement		5:2:61:91	802759	1					
ANR	802779	IdentifierDeclStatement	"char * next = strchr ( arg , ' ' ) ;"	3599:2:91530:91560	802759	0	True				
ANR	802780	IdentifierDecl	"* next = strchr ( arg , ' ' )"		802759	0					
ANR	802781	IdentifierDeclType	char *		802759	0					
ANR	802782	Identifier	next		802759	1					
ANR	802783	AssignmentExpression	"* next = strchr ( arg , ' ' )"		802759	2		=			
ANR	802784	Identifier	next		802759	0					
ANR	802785	CallExpression	"strchr ( arg , ' ' )"		802759	1					
ANR	802786	Callee	strchr		802759	0					
ANR	802787	Identifier	strchr		802759	0					
ANR	802788	ArgumentList	arg		802759	1					
ANR	802789	Argument	arg		802759	0					
ANR	802790	Identifier	arg		802759	0					
ANR	802791	Argument	' '		802759	1					
ANR	802792	PrimaryExpression	' '		802759	0					
ANR	802793	IfStatement	if ( next )		802759	1					
ANR	802794	Condition	next	3600:6:91568:91571	802759	0	True				
ANR	802795	Identifier	next		802759	0					
ANR	802796	CompoundStatement		6:12:105:105	802759	1					
ANR	802797	ExpressionStatement	* next = 0	3601:3:91579:91588	802759	0	True				
ANR	802798	AssignmentExpression	* next = 0		802759	0		=			
ANR	802799	UnaryOperationExpression	* next		802759	0					
ANR	802800	UnaryOperator	*		802759	0					
ANR	802801	Identifier	next		802759	1					
ANR	802802	PrimaryExpression	0		802759	1					
ANR	802803	IfStatement	if ( arg && * arg )		802759	2					
ANR	802804	Condition	arg && * arg	3603:6:91600:91610	802759	0	True				
ANR	802805	AndExpression	arg && * arg		802759	0		&&			
ANR	802806	Identifier	arg		802759	0					
ANR	802807	UnaryOperationExpression	* arg		802759	1					
ANR	802808	UnaryOperator	*		802759	0					
ANR	802809	Identifier	arg		802759	1					
ANR	802810	CompoundStatement		10:3:149:179	802759	1					
ANR	802811	IdentifierDeclStatement	"ut64 n = r_num_get ( NULL , arg ) ;"	3604:3:91618:91648	802759	0	True				
ANR	802812	IdentifierDecl	"n = r_num_get ( NULL , arg )"		802759	0					
ANR	802813	IdentifierDeclType	ut64		802759	0					
ANR	802814	Identifier	n		802759	1					
ANR	802815	AssignmentExpression	"n = r_num_get ( NULL , arg )"		802759	2		=			
ANR	802816	Identifier	n		802759	0					
ANR	802817	CallExpression	"r_num_get ( NULL , arg )"		802759	1					
ANR	802818	Callee	r_num_get		802759	0					
ANR	802819	Identifier	r_num_get		802759	0					
ANR	802820	ArgumentList	NULL		802759	1					
ANR	802821	Argument	NULL		802759	0					
ANR	802822	Identifier	NULL		802759	0					
ANR	802823	Argument	arg		802759	1					
ANR	802824	Identifier	arg		802759	0					
ANR	802825	IfStatement	if ( pair % 2 )		802759	1					
ANR	802826	Condition	pair % 2	3605:7:91657:91662	802759	0	True				
ANR	802827	MultiplicativeExpression	pair % 2		802759	0		%			
ANR	802828	Identifier	pair		802759	0					
ANR	802829	PrimaryExpression	2		802759	1					
ANR	802830	CompoundStatement		11:15:196:196	802759	1					
ANR	802831	ExpressionStatement	"r_core_block_size ( core , n )"	3606:4:91671:91698	802759	0	True				
ANR	802832	CallExpression	"r_core_block_size ( core , n )"		802759	0					
ANR	802833	Callee	r_core_block_size		802759	0					
ANR	802834	Identifier	r_core_block_size		802759	0					
ANR	802835	ArgumentList	core		802759	1					
ANR	802836	Argument	core		802759	0					
ANR	802837	Identifier	core		802759	0					
ANR	802838	Argument	n		802759	1					
ANR	802839	Identifier	n		802759	0					
ANR	802840	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3607:4:91704:91727	802759	1	True				
ANR	802841	CallExpression	"r_core_cmd0 ( core , cmd )"		802759	0					
ANR	802842	Callee	r_core_cmd0		802759	0					
ANR	802843	Identifier	r_core_cmd0		802759	0					
ANR	802844	ArgumentList	core		802759	1					
ANR	802845	Argument	core		802759	0					
ANR	802846	Identifier	core		802759	0					
ANR	802847	Argument	cmd		802759	1					
ANR	802848	Identifier	cmd		802759	0					
ANR	802849	ElseStatement	else		802759	0					
ANR	802850	CompoundStatement		14:10:270:270	802759	0					
ANR	802851	ExpressionStatement	"r_core_seek ( core , n , 1 )"	3609:4:91745:91769	802759	0	True				
ANR	802852	CallExpression	"r_core_seek ( core , n , 1 )"		802759	0					
ANR	802853	Callee	r_core_seek		802759	0					
ANR	802854	Identifier	r_core_seek		802759	0					
ANR	802855	ArgumentList	core		802759	1					
ANR	802856	Argument	core		802759	0					
ANR	802857	Identifier	core		802759	0					
ANR	802858	Argument	n		802759	1					
ANR	802859	Identifier	n		802759	0					
ANR	802860	Argument	1		802759	2					
ANR	802861	PrimaryExpression	1		802759	0					
ANR	802862	ExpressionStatement	pair ++	3611:3:91779:91785	802759	2	True				
ANR	802863	PostIncDecOperationExpression	pair ++		802759	0					
ANR	802864	Identifier	pair		802759	0					
ANR	802865	IncDec	++		802759	1					
ANR	802866	IfStatement	if ( ! next )		802759	3					
ANR	802867	Condition	! next	3613:6:91797:91801	802759	0	True				
ANR	802868	UnaryOperationExpression	! next		802759	0					
ANR	802869	UnaryOperator	!		802759	0					
ANR	802870	Identifier	next		802759	1					
ANR	802871	CompoundStatement		19:13:335:335	802759	1					
ANR	802872	BreakStatement	break ;	3614:3:91809:91814	802759	0	True				
ANR	802873	ExpressionStatement	arg = next + 1	3616:2:91822:91836	802759	4	True				
ANR	802874	AssignmentExpression	arg = next + 1		802759	0		=			
ANR	802875	Identifier	arg		802759	0					
ANR	802876	AdditiveExpression	next + 1		802759	1		+			
ANR	802877	Identifier	next		802759	0					
ANR	802878	PrimaryExpression	1		802759	1					
ANR	802879	ReturnType	static void		802759	1					
ANR	802880	Identifier	foreach_pairs		802759	2					
ANR	802881	ParameterList	"RCore * core , const char * cmd , const char * each"		802759	3					
ANR	802882	Parameter	RCore * core	3595:26:91420:91430	802759	0	True				
ANR	802883	ParameterType	RCore *		802759	0					
ANR	802884	Identifier	core		802759	1					
ANR	802885	Parameter	const char * cmd	3595:39:91433:91447	802759	1	True				
ANR	802886	ParameterType	const char *		802759	0					
ANR	802887	Identifier	cmd		802759	1					
ANR	802888	Parameter	const char * each	3595:56:91450:91465	802759	2	True				
ANR	802889	ParameterType	const char *		802759	0					
ANR	802890	Identifier	each		802759	1					
ANR	802891	CFGEntryNode	ENTRY		802759		True				
ANR	802892	CFGExitNode	EXIT		802759		True				
ANR	802893	InfiniteForNode	true		802759		True				
ANR	802894	Symbol	next		802759						
ANR	802895	Symbol	core		802759						
ANR	802896	Symbol	NULL		802759						
ANR	802897	Symbol	arg		802759						
ANR	802898	Symbol	strchr		802759						
ANR	802899	Symbol	r_num_get		802759						
ANR	802900	Symbol	cmd		802759						
ANR	802901	Symbol	* next		802759						
ANR	802902	Symbol	each		802759						
ANR	802903	Symbol	pair		802759						
ANR	802904	Symbol	n		802759						
ANR	802905	Symbol	* arg		802759						
ANR	802906	Function	r_core_cmd_foreach3	3620:0:91844:97840							
ANR	802907	FunctionDef	"r_core_cmd_foreach3 (RCore * core , const char * cmd , char * each)"		802906	0					
ANR	802908	CompoundStatement		3620:72:91916:97840	802906	0					
ANR	802909	IdentifierDeclStatement	RDebug * dbg = core -> dbg ;	3621:1:91928:91951	802906	0	True				
ANR	802910	IdentifierDecl	* dbg = core -> dbg		802906	0					
ANR	802911	IdentifierDeclType	RDebug *		802906	0					
ANR	802912	Identifier	dbg		802906	1					
ANR	802913	AssignmentExpression	* dbg = core -> dbg		802906	2		=			
ANR	802914	Identifier	dbg		802906	0					
ANR	802915	PtrMemberAccess	core -> dbg		802906	1					
ANR	802916	Identifier	core		802906	0					
ANR	802917	Identifier	dbg		802906	1					
ANR	802918	IdentifierDeclStatement	"RList * list , * head ;"	3622:1:91954:91972	802906	1	True				
ANR	802919	IdentifierDecl	* list		802906	0					
ANR	802920	IdentifierDeclType	RList *		802906	0					
ANR	802921	Identifier	list		802906	1					
ANR	802922	IdentifierDecl	* head		802906	1					
ANR	802923	IdentifierDeclType	RList *		802906	0					
ANR	802924	Identifier	head		802906	1					
ANR	802925	IdentifierDeclStatement	RListIter * iter ;	3623:1:91975:91990	802906	2	True				
ANR	802926	IdentifierDecl	* iter		802906	0					
ANR	802927	IdentifierDeclType	RListIter *		802906	0					
ANR	802928	Identifier	iter		802906	1					
ANR	802929	IdentifierDeclStatement	int i ;	3624:1:91993:91998	802906	3	True				
ANR	802930	IdentifierDecl	i		802906	0					
ANR	802931	IdentifierDeclType	int		802906	0					
ANR	802932	Identifier	i		802906	1					
ANR	802933	IdentifierDeclStatement	const char * filter = NULL ;	3625:1:92001:92026	802906	4	True				
ANR	802934	IdentifierDecl	* filter = NULL		802906	0					
ANR	802935	IdentifierDeclType	const char *		802906	0					
ANR	802936	Identifier	filter		802906	1					
ANR	802937	AssignmentExpression	* filter = NULL		802906	2		=			
ANR	802938	Identifier	NULL		802906	0					
ANR	802939	Identifier	NULL		802906	1					
ANR	802940	IfStatement	if ( each [ 1 ] == ':' )		802906	5					
ANR	802941	Condition	each [ 1 ] == ':'	3627:5:92034:92047	802906	0	True				
ANR	802942	EqualityExpression	each [ 1 ] == ':'		802906	0		==			
ANR	802943	ArrayIndexing	each [ 1 ]		802906	0					
ANR	802944	Identifier	each		802906	0					
ANR	802945	PrimaryExpression	1		802906	1					
ANR	802946	PrimaryExpression	':'		802906	1					
ANR	802947	CompoundStatement		8:21:133:133	802906	1					
ANR	802948	ExpressionStatement	filter = each + 2	3628:2:92054:92071	802906	0	True				
ANR	802949	AssignmentExpression	filter = each + 2		802906	0		=			
ANR	802950	Identifier	filter		802906	0					
ANR	802951	AdditiveExpression	each + 2		802906	1		+			
ANR	802952	Identifier	each		802906	0					
ANR	802953	PrimaryExpression	2		802906	1					
ANR	802954	SwitchStatement	switch ( each [ 0 ] )		802906	6					
ANR	802955	Condition	each [ 0 ]	3631:9:92086:92092	802906	0	True				
ANR	802956	ArrayIndexing	each [ 0 ]		802906	0					
ANR	802957	Identifier	each		802906	0					
ANR	802958	PrimaryExpression	0		802906	1					
ANR	802959	CompoundStatement		12:18:178:178	802906	1					
ANR	802960	Label	case '=' :	3632:1:92098:92106	802906	0	True				
ANR	802961	ExpressionStatement	"foreach_pairs ( core , cmd , each + 1 )"	3633:2:92110:92145	802906	1	True				
ANR	802962	CallExpression	"foreach_pairs ( core , cmd , each + 1 )"		802906	0					
ANR	802963	Callee	foreach_pairs		802906	0					
ANR	802964	Identifier	foreach_pairs		802906	0					
ANR	802965	ArgumentList	core		802906	1					
ANR	802966	Argument	core		802906	0					
ANR	802967	Identifier	core		802906	0					
ANR	802968	Argument	cmd		802906	1					
ANR	802969	Identifier	cmd		802906	0					
ANR	802970	Argument	each + 1		802906	2					
ANR	802971	AdditiveExpression	each + 1		802906	0		+			
ANR	802972	Identifier	each		802906	0					
ANR	802973	PrimaryExpression	1		802906	1					
ANR	802974	BreakStatement	break ;	3634:2:92149:92154	802906	2	True				
ANR	802975	Label	case '?' :	3635:1:92157:92165	802906	3	True				
ANR	802976	ExpressionStatement	"r_core_cmd_help ( core , help_msg_at_at_at )"	3636:2:92169:92210	802906	4	True				
ANR	802977	CallExpression	"r_core_cmd_help ( core , help_msg_at_at_at )"		802906	0					
ANR	802978	Callee	r_core_cmd_help		802906	0					
ANR	802979	Identifier	r_core_cmd_help		802906	0					
ANR	802980	ArgumentList	core		802906	1					
ANR	802981	Argument	core		802906	0					
ANR	802982	Identifier	core		802906	0					
ANR	802983	Argument	help_msg_at_at_at		802906	1					
ANR	802984	Identifier	help_msg_at_at_at		802906	0					
ANR	802985	BreakStatement	break ;	3637:2:92214:92219	802906	5	True				
ANR	802986	Label	case 'c' :	3638:1:92222:92230	802906	6	True				
ANR	802987	IfStatement	if ( filter )		802906	7					
ANR	802988	Condition	filter	3639:6:92238:92243	802906	0	True				
ANR	802989	Identifier	filter		802906	0					
ANR	802990	CompoundStatement		21:3:334:375	802906	1					
ANR	802991	IdentifierDeclStatement	"char * arg = r_core_cmd_str ( core , filter ) ;"	3640:3:92251:92292	802906	0	True				
ANR	802992	IdentifierDecl	"* arg = r_core_cmd_str ( core , filter )"		802906	0					
ANR	802993	IdentifierDeclType	char *		802906	0					
ANR	802994	Identifier	arg		802906	1					
ANR	802995	AssignmentExpression	"* arg = r_core_cmd_str ( core , filter )"		802906	2		=			
ANR	802996	Identifier	arg		802906	0					
ANR	802997	CallExpression	"r_core_cmd_str ( core , filter )"		802906	1					
ANR	802998	Callee	r_core_cmd_str		802906	0					
ANR	802999	Identifier	r_core_cmd_str		802906	0					
ANR	803000	ArgumentList	core		802906	1					
ANR	803001	Argument	core		802906	0					
ANR	803002	Identifier	core		802906	0					
ANR	803003	Argument	filter		802906	1					
ANR	803004	Identifier	filter		802906	0					
ANR	803005	ExpressionStatement	"foreach_pairs ( core , cmd , arg )"	3641:3:92297:92327	802906	1	True				
ANR	803006	CallExpression	"foreach_pairs ( core , cmd , arg )"		802906	0					
ANR	803007	Callee	foreach_pairs		802906	0					
ANR	803008	Identifier	foreach_pairs		802906	0					
ANR	803009	ArgumentList	core		802906	1					
ANR	803010	Argument	core		802906	0					
ANR	803011	Identifier	core		802906	0					
ANR	803012	Argument	cmd		802906	1					
ANR	803013	Identifier	cmd		802906	0					
ANR	803014	Argument	arg		802906	2					
ANR	803015	Identifier	arg		802906	0					
ANR	803016	ExpressionStatement	free ( arg )	3642:3:92332:92342	802906	2	True				
ANR	803017	CallExpression	free ( arg )		802906	0					
ANR	803018	Callee	free		802906	0					
ANR	803019	Identifier	free		802906	0					
ANR	803020	ArgumentList	arg		802906	1					
ANR	803021	Argument	arg		802906	0					
ANR	803022	Identifier	arg		802906	0					
ANR	803023	ElseStatement	else		802906	0					
ANR	803024	CompoundStatement		24:9:436:436	802906	0					
ANR	803025	ExpressionStatement	"eprintf ( ""Usage: @@@c:command   # same as @@@=`command`\\n"" )"	3644:3:92358:92417	802906	0	True				
ANR	803026	CallExpression	"eprintf ( ""Usage: @@@c:command   # same as @@@=`command`\\n"" )"		802906	0					
ANR	803027	Callee	eprintf		802906	0					
ANR	803028	Identifier	eprintf		802906	0					
ANR	803029	ArgumentList	"""Usage: @@@c:command   # same as @@@=`command`\\n"""		802906	1					
ANR	803030	Argument	"""Usage: @@@c:command   # same as @@@=`command`\\n"""		802906	0					
ANR	803031	PrimaryExpression	"""Usage: @@@c:command   # same as @@@=`command`\\n"""		802906	0					
ANR	803032	BreakStatement	break ;	3646:2:92425:92430	802906	8	True				
ANR	803033	Label	case 'C' :	3647:1:92433:92441	802906	9	True				
ANR	803034	ExpressionStatement	"r_meta_list_cb ( core -> anal , R_META_TYPE_COMMENT , 0 , foreach_comment , ( void * ) cmd , UT64_MAX )"	3648:2:92445:92535	802906	10	True				
ANR	803035	CallExpression	"r_meta_list_cb ( core -> anal , R_META_TYPE_COMMENT , 0 , foreach_comment , ( void * ) cmd , UT64_MAX )"		802906	0					
ANR	803036	Callee	r_meta_list_cb		802906	0					
ANR	803037	Identifier	r_meta_list_cb		802906	0					
ANR	803038	ArgumentList	core -> anal		802906	1					
ANR	803039	Argument	core -> anal		802906	0					
ANR	803040	PtrMemberAccess	core -> anal		802906	0					
ANR	803041	Identifier	core		802906	0					
ANR	803042	Identifier	anal		802906	1					
ANR	803043	Argument	R_META_TYPE_COMMENT		802906	1					
ANR	803044	Identifier	R_META_TYPE_COMMENT		802906	0					
ANR	803045	Argument	0		802906	2					
ANR	803046	PrimaryExpression	0		802906	0					
ANR	803047	Argument	foreach_comment		802906	3					
ANR	803048	Identifier	foreach_comment		802906	0					
ANR	803049	Argument	( void * ) cmd		802906	4					
ANR	803050	CastExpression	( void * ) cmd		802906	0					
ANR	803051	CastTarget	void *		802906	0					
ANR	803052	Identifier	cmd		802906	1					
ANR	803053	Argument	UT64_MAX		802906	5					
ANR	803054	Identifier	UT64_MAX		802906	0					
ANR	803055	BreakStatement	break ;	3649:2:92539:92544	802906	11	True				
ANR	803056	Label	case 'm' :	3650:1:92547:92555	802906	12	True				
ANR	803057	CompoundStatement		36:3:782:793	802906	13					
ANR	803058	IdentifierDeclStatement	int fd = r_io_fd_get_current ( core -> io ) ;	3652:3:92564:92603	802906	0	True				
ANR	803059	IdentifierDecl	fd = r_io_fd_get_current ( core -> io )		802906	0					
ANR	803060	IdentifierDeclType	int		802906	0					
ANR	803061	Identifier	fd		802906	1					
ANR	803062	AssignmentExpression	fd = r_io_fd_get_current ( core -> io )		802906	2		=			
ANR	803063	Identifier	fd		802906	0					
ANR	803064	CallExpression	r_io_fd_get_current ( core -> io )		802906	1					
ANR	803065	Callee	r_io_fd_get_current		802906	0					
ANR	803066	Identifier	r_io_fd_get_current		802906	0					
ANR	803067	ArgumentList	core -> io		802906	1					
ANR	803068	Argument	core -> io		802906	0					
ANR	803069	PtrMemberAccess	core -> io		802906	0					
ANR	803070	Identifier	core		802906	0					
ANR	803071	Identifier	io		802906	1					
ANR	803072	IdentifierDeclStatement	"RList * maps = r_io_map_get_for_fd ( core -> io , fd ) ;"	3654:3:92646:92694	802906	1	True				
ANR	803073	IdentifierDecl	"* maps = r_io_map_get_for_fd ( core -> io , fd )"		802906	0					
ANR	803074	IdentifierDeclType	RList *		802906	0					
ANR	803075	Identifier	maps		802906	1					
ANR	803076	AssignmentExpression	"* maps = r_io_map_get_for_fd ( core -> io , fd )"		802906	2		=			
ANR	803077	Identifier	maps		802906	0					
ANR	803078	CallExpression	"r_io_map_get_for_fd ( core -> io , fd )"		802906	1					
ANR	803079	Callee	r_io_map_get_for_fd		802906	0					
ANR	803080	Identifier	r_io_map_get_for_fd		802906	0					
ANR	803081	ArgumentList	core -> io		802906	1					
ANR	803082	Argument	core -> io		802906	0					
ANR	803083	PtrMemberAccess	core -> io		802906	0					
ANR	803084	Identifier	core		802906	0					
ANR	803085	Identifier	io		802906	1					
ANR	803086	Argument	fd		802906	1					
ANR	803087	Identifier	fd		802906	0					
ANR	803088	IdentifierDeclStatement	RIOMap * map ;	3655:3:92699:92710	802906	2	True				
ANR	803089	IdentifierDecl	* map		802906	0					
ANR	803090	IdentifierDeclType	RIOMap *		802906	0					
ANR	803091	Identifier	map		802906	1					
ANR	803092	IfStatement	if ( maps )		802906	3					
ANR	803093	Condition	maps	3656:7:92719:92722	802906	0	True				
ANR	803094	Identifier	maps		802906	0					
ANR	803095	CompoundStatement		38:4:814:829	802906	1					
ANR	803096	IdentifierDeclStatement	RListIter * iter ;	3657:4:92731:92746	802906	0	True				
ANR	803097	IdentifierDecl	* iter		802906	0					
ANR	803098	IdentifierDeclType	RListIter *		802906	0					
ANR	803099	Identifier	iter		802906	1					
ANR	803100	Statement	r_list_foreach	3658:4:92752:92765	802906	1	True				
ANR	803101	Statement	(	3658:19:92767:92767	802906	2	True				
ANR	803102	Statement	maps	3658:20:92768:92771	802906	3	True				
ANR	803103	Statement	","	3658:24:92772:92772	802906	4	True				
ANR	803104	Statement	iter	3658:26:92774:92777	802906	5	True				
ANR	803105	Statement	","	3658:30:92778:92778	802906	6	True				
ANR	803106	Statement	map	3658:32:92780:92782	802906	7	True				
ANR	803107	Statement	)	3658:35:92783:92783	802906	8	True				
ANR	803108	CompoundStatement		39:37:868:868	802906	9					
ANR	803109	ExpressionStatement	"r_core_seek ( core , map -> itv . addr , 1 )"	3659:5:92792:92828	802906	0	True				
ANR	803110	CallExpression	"r_core_seek ( core , map -> itv . addr , 1 )"		802906	0					
ANR	803111	Callee	r_core_seek		802906	0					
ANR	803112	Identifier	r_core_seek		802906	0					
ANR	803113	ArgumentList	core		802906	1					
ANR	803114	Argument	core		802906	0					
ANR	803115	Identifier	core		802906	0					
ANR	803116	Argument	map -> itv . addr		802906	1					
ANR	803117	MemberAccess	map -> itv . addr		802906	0					
ANR	803118	PtrMemberAccess	map -> itv		802906	0					
ANR	803119	Identifier	map		802906	0					
ANR	803120	Identifier	itv		802906	1					
ANR	803121	Identifier	addr		802906	1					
ANR	803122	Argument	1		802906	2					
ANR	803123	PrimaryExpression	1		802906	0					
ANR	803124	ExpressionStatement	"r_core_block_size ( core , map -> itv . size )"	3660:5:92835:92874	802906	1	True				
ANR	803125	CallExpression	"r_core_block_size ( core , map -> itv . size )"		802906	0					
ANR	803126	Callee	r_core_block_size		802906	0					
ANR	803127	Identifier	r_core_block_size		802906	0					
ANR	803128	ArgumentList	core		802906	1					
ANR	803129	Argument	core		802906	0					
ANR	803130	Identifier	core		802906	0					
ANR	803131	Argument	map -> itv . size		802906	1					
ANR	803132	MemberAccess	map -> itv . size		802906	0					
ANR	803133	PtrMemberAccess	map -> itv		802906	0					
ANR	803134	Identifier	map		802906	0					
ANR	803135	Identifier	itv		802906	1					
ANR	803136	Identifier	size		802906	1					
ANR	803137	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3661:5:92881:92904	802906	2	True				
ANR	803138	CallExpression	"r_core_cmd0 ( core , cmd )"		802906	0					
ANR	803139	Callee	r_core_cmd0		802906	0					
ANR	803140	Identifier	r_core_cmd0		802906	0					
ANR	803141	ArgumentList	core		802906	1					
ANR	803142	Argument	core		802906	0					
ANR	803143	Identifier	core		802906	0					
ANR	803144	Argument	cmd		802906	1					
ANR	803145	Identifier	cmd		802906	0					
ANR	803146	ExpressionStatement	r_list_free ( maps )	3663:4:92916:92934	802906	10	True				
ANR	803147	CallExpression	r_list_free ( maps )		802906	0					
ANR	803148	Callee	r_list_free		802906	0					
ANR	803149	Identifier	r_list_free		802906	0					
ANR	803150	ArgumentList	maps		802906	1					
ANR	803151	Argument	maps		802906	0					
ANR	803152	Identifier	maps		802906	0					
ANR	803153	BreakStatement	break ;	3666:2:92947:92952	802906	14	True				
ANR	803154	Label	case 'M' :	3667:1:92955:92963	802906	15	True				
ANR	803155	IfStatement	if ( dbg && dbg -> h && dbg -> maps )		802906	16					
ANR	803156	Condition	dbg && dbg -> h && dbg -> maps	3668:6:92971:92996	802906	0	True				
ANR	803157	AndExpression	dbg && dbg -> h && dbg -> maps		802906	0		&&			
ANR	803158	Identifier	dbg		802906	0					
ANR	803159	AndExpression	dbg -> h && dbg -> maps		802906	1		&&			
ANR	803160	PtrMemberAccess	dbg -> h		802906	0					
ANR	803161	Identifier	dbg		802906	0					
ANR	803162	Identifier	h		802906	1					
ANR	803163	PtrMemberAccess	dbg -> maps		802906	1					
ANR	803164	Identifier	dbg		802906	0					
ANR	803165	Identifier	maps		802906	1					
ANR	803166	CompoundStatement		50:3:1087:1101	802906	1					
ANR	803167	IdentifierDeclStatement	RDebugMap * map ;	3669:3:93004:93018	802906	0	True				
ANR	803168	IdentifierDecl	* map		802906	0					
ANR	803169	IdentifierDeclType	RDebugMap *		802906	0					
ANR	803170	Identifier	map		802906	1					
ANR	803171	Statement	r_list_foreach	3670:3:93023:93036	802906	1	True				
ANR	803172	Statement	(	3670:18:93038:93038	802906	2	True				
ANR	803173	Statement	dbg	3670:19:93039:93041	802906	3	True				
ANR	803174	Statement	->	3670:22:93042:93043	802906	4	True				
ANR	803175	Statement	maps	3670:24:93044:93047	802906	5	True				
ANR	803176	Statement	","	3670:28:93048:93048	802906	6	True				
ANR	803177	Statement	iter	3670:30:93050:93053	802906	7	True				
ANR	803178	Statement	","	3670:34:93054:93054	802906	8	True				
ANR	803179	Statement	map	3670:36:93056:93058	802906	9	True				
ANR	803180	Statement	)	3670:39:93059:93059	802906	10	True				
ANR	803181	CompoundStatement		51:41:1144:1144	802906	11					
ANR	803182	ExpressionStatement	"r_core_seek ( core , map -> addr , 1 )"	3671:4:93067:93099	802906	0	True				
ANR	803183	CallExpression	"r_core_seek ( core , map -> addr , 1 )"		802906	0					
ANR	803184	Callee	r_core_seek		802906	0					
ANR	803185	Identifier	r_core_seek		802906	0					
ANR	803186	ArgumentList	core		802906	1					
ANR	803187	Argument	core		802906	0					
ANR	803188	Identifier	core		802906	0					
ANR	803189	Argument	map -> addr		802906	1					
ANR	803190	PtrMemberAccess	map -> addr		802906	0					
ANR	803191	Identifier	map		802906	0					
ANR	803192	Identifier	addr		802906	1					
ANR	803193	Argument	1		802906	2					
ANR	803194	PrimaryExpression	1		802906	0					
ANR	803195	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3673:4:93148:93171	802906	1	True				
ANR	803196	CallExpression	"r_core_cmd0 ( core , cmd )"		802906	0					
ANR	803197	Callee	r_core_cmd0		802906	0					
ANR	803198	Identifier	r_core_cmd0		802906	0					
ANR	803199	ArgumentList	core		802906	1					
ANR	803200	Argument	core		802906	0					
ANR	803201	Identifier	core		802906	0					
ANR	803202	Argument	cmd		802906	1					
ANR	803203	Identifier	cmd		802906	0					
ANR	803204	BreakStatement	break ;	3676:2:93184:93189	802906	17	True				
ANR	803205	Label	case 't' :	3677:1:93192:93200	802906	18	True				
ANR	803206	IfStatement	if ( dbg && dbg -> h && dbg -> h -> threads )		802906	19					
ANR	803207	Condition	dbg && dbg -> h && dbg -> h -> threads	3679:6:93238:93269	802906	0	True				
ANR	803208	AndExpression	dbg && dbg -> h && dbg -> h -> threads		802906	0		&&			
ANR	803209	Identifier	dbg		802906	0					
ANR	803210	AndExpression	dbg -> h && dbg -> h -> threads		802906	1		&&			
ANR	803211	PtrMemberAccess	dbg -> h		802906	0					
ANR	803212	Identifier	dbg		802906	0					
ANR	803213	Identifier	h		802906	1					
ANR	803214	PtrMemberAccess	dbg -> h -> threads		802906	1					
ANR	803215	PtrMemberAccess	dbg -> h		802906	0					
ANR	803216	Identifier	dbg		802906	0					
ANR	803217	Identifier	h		802906	1					
ANR	803218	Identifier	threads		802906	1					
ANR	803219	CompoundStatement		62:3:1387:1399	802906	1					
ANR	803220	IdentifierDeclStatement	int origpid = dbg -> pid ;	3680:3:93277:93299	802906	0	True				
ANR	803221	IdentifierDecl	origpid = dbg -> pid		802906	0					
ANR	803222	IdentifierDeclType	int		802906	0					
ANR	803223	Identifier	origpid		802906	1					
ANR	803224	AssignmentExpression	origpid = dbg -> pid		802906	2		=			
ANR	803225	Identifier	origpid		802906	0					
ANR	803226	PtrMemberAccess	dbg -> pid		802906	1					
ANR	803227	Identifier	dbg		802906	0					
ANR	803228	Identifier	pid		802906	1					
ANR	803229	IdentifierDeclStatement	RDebugPid * p ;	3681:3:93304:93316	802906	1	True				
ANR	803230	IdentifierDecl	* p		802906	0					
ANR	803231	IdentifierDeclType	RDebugPid *		802906	0					
ANR	803232	Identifier	p		802906	1					
ANR	803233	ExpressionStatement	"list = dbg -> h -> threads ( dbg , dbg -> pid )"	3682:3:93321:93359	802906	2	True				
ANR	803234	AssignmentExpression	"list = dbg -> h -> threads ( dbg , dbg -> pid )"		802906	0		=			
ANR	803235	Identifier	list		802906	0					
ANR	803236	CallExpression	"dbg -> h -> threads ( dbg , dbg -> pid )"		802906	1					
ANR	803237	Callee	dbg -> h -> threads		802906	0					
ANR	803238	PtrMemberAccess	dbg -> h -> threads		802906	0					
ANR	803239	PtrMemberAccess	dbg -> h		802906	0					
ANR	803240	Identifier	dbg		802906	0					
ANR	803241	Identifier	h		802906	1					
ANR	803242	Identifier	threads		802906	1					
ANR	803243	ArgumentList	dbg		802906	1					
ANR	803244	Argument	dbg		802906	0					
ANR	803245	Identifier	dbg		802906	0					
ANR	803246	Argument	dbg -> pid		802906	1					
ANR	803247	PtrMemberAccess	dbg -> pid		802906	0					
ANR	803248	Identifier	dbg		802906	0					
ANR	803249	Identifier	pid		802906	1					
ANR	803250	IfStatement	if ( ! list )		802906	3					
ANR	803251	Condition	! list	3683:7:93368:93372	802906	0	True				
ANR	803252	UnaryOperationExpression	! list		802906	0					
ANR	803253	UnaryOperator	!		802906	0					
ANR	803254	Identifier	list		802906	1					
ANR	803255	CompoundStatement		64:14:1458:1458	802906	1					
ANR	803256	ReturnStatement	return false ;	3684:4:93381:93393	802906	0	True				
ANR	803257	Identifier	false		802906	0					
ANR	803258	Statement	r_list_foreach	3686:3:93403:93416	802906	4	True				
ANR	803259	Statement	(	3686:18:93418:93418	802906	5	True				
ANR	803260	Statement	list	3686:19:93419:93422	802906	6	True				
ANR	803261	Statement	","	3686:23:93423:93423	802906	7	True				
ANR	803262	Statement	iter	3686:25:93425:93428	802906	8	True				
ANR	803263	Statement	","	3686:29:93429:93429	802906	9	True				
ANR	803264	Statement	p	3686:31:93431:93431	802906	10	True				
ANR	803265	Statement	)	3686:32:93432:93432	802906	11	True				
ANR	803266	CompoundStatement		67:34:1517:1517	802906	12					
ANR	803267	ExpressionStatement	"r_core_cmdf ( core , ""dp %d"" , p -> pid )"	3687:4:93440:93475	802906	0	True				
ANR	803268	CallExpression	"r_core_cmdf ( core , ""dp %d"" , p -> pid )"		802906	0					
ANR	803269	Callee	r_core_cmdf		802906	0					
ANR	803270	Identifier	r_core_cmdf		802906	0					
ANR	803271	ArgumentList	core		802906	1					
ANR	803272	Argument	core		802906	0					
ANR	803273	Identifier	core		802906	0					
ANR	803274	Argument	"""dp %d"""		802906	1					
ANR	803275	PrimaryExpression	"""dp %d"""		802906	0					
ANR	803276	Argument	p -> pid		802906	2					
ANR	803277	PtrMemberAccess	p -> pid		802906	0					
ANR	803278	Identifier	p		802906	0					
ANR	803279	Identifier	pid		802906	1					
ANR	803280	ExpressionStatement	"r_cons_printf ( ""PID %d\\n"" , p -> pid )"	3688:4:93481:93515	802906	1	True				
ANR	803281	CallExpression	"r_cons_printf ( ""PID %d\\n"" , p -> pid )"		802906	0					
ANR	803282	Callee	r_cons_printf		802906	0					
ANR	803283	Identifier	r_cons_printf		802906	0					
ANR	803284	ArgumentList	"""PID %d\\n"""		802906	1					
ANR	803285	Argument	"""PID %d\\n"""		802906	0					
ANR	803286	PrimaryExpression	"""PID %d\\n"""		802906	0					
ANR	803287	Argument	p -> pid		802906	1					
ANR	803288	PtrMemberAccess	p -> pid		802906	0					
ANR	803289	Identifier	p		802906	0					
ANR	803290	Identifier	pid		802906	1					
ANR	803291	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3689:4:93521:93544	802906	2	True				
ANR	803292	CallExpression	"r_core_cmd0 ( core , cmd )"		802906	0					
ANR	803293	Callee	r_core_cmd0		802906	0					
ANR	803294	Identifier	r_core_cmd0		802906	0					
ANR	803295	ArgumentList	core		802906	1					
ANR	803296	Argument	core		802906	0					
ANR	803297	Identifier	core		802906	0					
ANR	803298	Argument	cmd		802906	1					
ANR	803299	Identifier	cmd		802906	0					
ANR	803300	ExpressionStatement	"r_core_cmdf ( core , ""dp %d"" , origpid )"	3691:3:93554:93590	802906	13	True				
ANR	803301	CallExpression	"r_core_cmdf ( core , ""dp %d"" , origpid )"		802906	0					
ANR	803302	Callee	r_core_cmdf		802906	0					
ANR	803303	Identifier	r_core_cmdf		802906	0					
ANR	803304	ArgumentList	core		802906	1					
ANR	803305	Argument	core		802906	0					
ANR	803306	Identifier	core		802906	0					
ANR	803307	Argument	"""dp %d"""		802906	1					
ANR	803308	PrimaryExpression	"""dp %d"""		802906	0					
ANR	803309	Argument	origpid		802906	2					
ANR	803310	Identifier	origpid		802906	0					
ANR	803311	ExpressionStatement	r_list_free ( list )	3692:3:93595:93613	802906	14	True				
ANR	803312	CallExpression	r_list_free ( list )		802906	0					
ANR	803313	Callee	r_list_free		802906	0					
ANR	803314	Identifier	r_list_free		802906	0					
ANR	803315	ArgumentList	list		802906	1					
ANR	803316	Argument	list		802906	0					
ANR	803317	Identifier	list		802906	0					
ANR	803318	BreakStatement	break ;	3694:2:93621:93626	802906	20	True				
ANR	803319	Label	case 'r' :	3695:1:93629:93637	802906	21	True				
ANR	803320	CompoundStatement		79:3:1744:1771	802906	22					
ANR	803321	IdentifierDeclStatement	ut64 offorig = core -> offset ;	3698:3:93661:93688	802906	0	True				
ANR	803322	IdentifierDecl	offorig = core -> offset		802906	0					
ANR	803323	IdentifierDeclType	ut64		802906	0					
ANR	803324	Identifier	offorig		802906	1					
ANR	803325	AssignmentExpression	offorig = core -> offset		802906	2		=			
ANR	803326	Identifier	offorig		802906	0					
ANR	803327	PtrMemberAccess	core -> offset		802906	1					
ANR	803328	Identifier	core		802906	0					
ANR	803329	Identifier	offset		802906	1					
ANR	803330	ForStatement	for ( i = 0 ; i < 128 ; i ++ )		802906	1					
ANR	803331	ForInit	i = 0 ;	3699:8:93698:93703	802906	0	True				
ANR	803332	AssignmentExpression	i = 0		802906	0		=			
ANR	803333	Identifier	i		802906	0					
ANR	803334	PrimaryExpression	0		802906	1					
ANR	803335	Condition	i < 128	3699:15:93705:93711	802906	1	True				
ANR	803336	RelationalExpression	i < 128		802906	0		<			
ANR	803337	Identifier	i		802906	0					
ANR	803338	PrimaryExpression	128		802906	1					
ANR	803339	PostIncDecOperationExpression	i ++	3699:24:93714:93716	802906	2	True				
ANR	803340	Identifier	i		802906	0					
ANR	803341	IncDec	++		802906	1					
ANR	803342	CompoundStatement		82:4:1828:1838	802906	3					
ANR	803343	IdentifierDeclStatement	RRegItem * item ;	3700:4:93725:93739	802906	0	True				
ANR	803344	IdentifierDecl	* item		802906	0					
ANR	803345	IdentifierDeclType	RRegItem *		802906	0					
ANR	803346	Identifier	item		802906	1					
ANR	803347	IdentifierDeclStatement	ut64 value ;	3701:4:93745:93755	802906	1	True				
ANR	803348	IdentifierDecl	value		802906	0					
ANR	803349	IdentifierDeclType	ut64		802906	0					
ANR	803350	Identifier	value		802906	1					
ANR	803351	ExpressionStatement	"head = r_reg_get_list ( dbg -> reg , i )"	3702:4:93761:93796	802906	2	True				
ANR	803352	AssignmentExpression	"head = r_reg_get_list ( dbg -> reg , i )"		802906	0		=			
ANR	803353	Identifier	head		802906	0					
ANR	803354	CallExpression	"r_reg_get_list ( dbg -> reg , i )"		802906	1					
ANR	803355	Callee	r_reg_get_list		802906	0					
ANR	803356	Identifier	r_reg_get_list		802906	0					
ANR	803357	ArgumentList	dbg -> reg		802906	1					
ANR	803358	Argument	dbg -> reg		802906	0					
ANR	803359	PtrMemberAccess	dbg -> reg		802906	0					
ANR	803360	Identifier	dbg		802906	0					
ANR	803361	Identifier	reg		802906	1					
ANR	803362	Argument	i		802906	1					
ANR	803363	Identifier	i		802906	0					
ANR	803364	IfStatement	if ( ! head )		802906	3					
ANR	803365	Condition	! head	3703:8:93806:93810	802906	0	True				
ANR	803366	UnaryOperationExpression	! head		802906	0					
ANR	803367	UnaryOperator	!		802906	0					
ANR	803368	Identifier	head		802906	1					
ANR	803369	CompoundStatement		84:15:1896:1896	802906	1					
ANR	803370	ContinueStatement	continue ;	3704:5:93820:93828	802906	0	True				
ANR	803371	Statement	r_list_foreach	3706:4:93840:93853	802906	4	True				
ANR	803372	Statement	(	3706:19:93855:93855	802906	5	True				
ANR	803373	Statement	head	3706:20:93856:93859	802906	6	True				
ANR	803374	Statement	","	3706:24:93860:93860	802906	7	True				
ANR	803375	Statement	iter	3706:26:93862:93865	802906	8	True				
ANR	803376	Statement	","	3706:30:93866:93866	802906	9	True				
ANR	803377	Statement	item	3706:32:93868:93871	802906	10	True				
ANR	803378	Statement	)	3706:36:93872:93872	802906	11	True				
ANR	803379	CompoundStatement		87:38:1957:1957	802906	12					
ANR	803380	IfStatement	if ( item -> size != core -> anal -> bits )		802906	0					
ANR	803381	Condition	item -> size != core -> anal -> bits	3707:9:93885:93914	802906	0	True				
ANR	803382	EqualityExpression	item -> size != core -> anal -> bits		802906	0		!=			
ANR	803383	PtrMemberAccess	item -> size		802906	0					
ANR	803384	Identifier	item		802906	0					
ANR	803385	Identifier	size		802906	1					
ANR	803386	PtrMemberAccess	core -> anal -> bits		802906	1					
ANR	803387	PtrMemberAccess	core -> anal		802906	0					
ANR	803388	Identifier	core		802906	0					
ANR	803389	Identifier	anal		802906	1					
ANR	803390	Identifier	bits		802906	1					
ANR	803391	CompoundStatement		88:41:2000:2000	802906	1					
ANR	803392	ContinueStatement	continue ;	3708:6:93925:93933	802906	0	True				
ANR	803393	ExpressionStatement	"value = r_reg_get_value ( dbg -> reg , item )"	3710:5:93947:93987	802906	1	True				
ANR	803394	AssignmentExpression	"value = r_reg_get_value ( dbg -> reg , item )"		802906	0		=			
ANR	803395	Identifier	value		802906	0					
ANR	803396	CallExpression	"r_reg_get_value ( dbg -> reg , item )"		802906	1					
ANR	803397	Callee	r_reg_get_value		802906	0					
ANR	803398	Identifier	r_reg_get_value		802906	0					
ANR	803399	ArgumentList	dbg -> reg		802906	1					
ANR	803400	Argument	dbg -> reg		802906	0					
ANR	803401	PtrMemberAccess	dbg -> reg		802906	0					
ANR	803402	Identifier	dbg		802906	0					
ANR	803403	Identifier	reg		802906	1					
ANR	803404	Argument	item		802906	1					
ANR	803405	Identifier	item		802906	0					
ANR	803406	ExpressionStatement	"r_core_seek ( core , value , 1 )"	3711:5:93994:94022	802906	2	True				
ANR	803407	CallExpression	"r_core_seek ( core , value , 1 )"		802906	0					
ANR	803408	Callee	r_core_seek		802906	0					
ANR	803409	Identifier	r_core_seek		802906	0					
ANR	803410	ArgumentList	core		802906	1					
ANR	803411	Argument	core		802906	0					
ANR	803412	Identifier	core		802906	0					
ANR	803413	Argument	value		802906	1					
ANR	803414	Identifier	value		802906	0					
ANR	803415	Argument	1		802906	2					
ANR	803416	PrimaryExpression	1		802906	0					
ANR	803417	ExpressionStatement	"r_cons_printf ( ""%s: "" , item -> name )"	3712:5:94029:94063	802906	3	True				
ANR	803418	CallExpression	"r_cons_printf ( ""%s: "" , item -> name )"		802906	0					
ANR	803419	Callee	r_cons_printf		802906	0					
ANR	803420	Identifier	r_cons_printf		802906	0					
ANR	803421	ArgumentList	"""%s: """		802906	1					
ANR	803422	Argument	"""%s: """		802906	0					
ANR	803423	PrimaryExpression	"""%s: """		802906	0					
ANR	803424	Argument	item -> name		802906	1					
ANR	803425	PtrMemberAccess	item -> name		802906	0					
ANR	803426	Identifier	item		802906	0					
ANR	803427	Identifier	name		802906	1					
ANR	803428	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3713:5:94070:94093	802906	4	True				
ANR	803429	CallExpression	"r_core_cmd0 ( core , cmd )"		802906	0					
ANR	803430	Callee	r_core_cmd0		802906	0					
ANR	803431	Identifier	r_core_cmd0		802906	0					
ANR	803432	ArgumentList	core		802906	1					
ANR	803433	Argument	core		802906	0					
ANR	803434	Identifier	core		802906	0					
ANR	803435	Argument	cmd		802906	1					
ANR	803436	Identifier	cmd		802906	0					
ANR	803437	ExpressionStatement	"r_core_seek ( core , offorig , 1 )"	3716:3:94109:94139	802906	2	True				
ANR	803438	CallExpression	"r_core_seek ( core , offorig , 1 )"		802906	0					
ANR	803439	Callee	r_core_seek		802906	0					
ANR	803440	Identifier	r_core_seek		802906	0					
ANR	803441	ArgumentList	core		802906	1					
ANR	803442	Argument	core		802906	0					
ANR	803443	Identifier	core		802906	0					
ANR	803444	Argument	offorig		802906	1					
ANR	803445	Identifier	offorig		802906	0					
ANR	803446	Argument	1		802906	2					
ANR	803447	PrimaryExpression	1		802906	0					
ANR	803448	BreakStatement	break ;	3718:2:94147:94152	802906	23	True				
ANR	803449	Label	case 'i' :	3719:1:94155:94163	802906	24	True				
ANR	803450	CompoundStatement		104:3:2296:2323	802906	25					
ANR	803451	IdentifierDeclStatement	RBinImport * imp ;	3722:3:94193:94208	802906	0	True				
ANR	803452	IdentifierDecl	* imp		802906	0					
ANR	803453	IdentifierDeclType	RBinImport *		802906	0					
ANR	803454	Identifier	imp		802906	1					
ANR	803455	IdentifierDeclStatement	ut64 offorig = core -> offset ;	3723:3:94213:94240	802906	1	True				
ANR	803456	IdentifierDecl	offorig = core -> offset		802906	0					
ANR	803457	IdentifierDeclType	ut64		802906	0					
ANR	803458	Identifier	offorig		802906	1					
ANR	803459	AssignmentExpression	offorig = core -> offset		802906	2		=			
ANR	803460	Identifier	offorig		802906	0					
ANR	803461	PtrMemberAccess	core -> offset		802906	1					
ANR	803462	Identifier	core		802906	0					
ANR	803463	Identifier	offset		802906	1					
ANR	803464	ExpressionStatement	list = r_bin_get_imports ( core -> bin )	3724:3:94245:94281	802906	2	True				
ANR	803465	AssignmentExpression	list = r_bin_get_imports ( core -> bin )		802906	0		=			
ANR	803466	Identifier	list		802906	0					
ANR	803467	CallExpression	r_bin_get_imports ( core -> bin )		802906	1					
ANR	803468	Callee	r_bin_get_imports		802906	0					
ANR	803469	Identifier	r_bin_get_imports		802906	0					
ANR	803470	ArgumentList	core -> bin		802906	1					
ANR	803471	Argument	core -> bin		802906	0					
ANR	803472	PtrMemberAccess	core -> bin		802906	0					
ANR	803473	Identifier	core		802906	0					
ANR	803474	Identifier	bin		802906	1					
ANR	803475	Statement	r_list_foreach	3725:3:94286:94299	802906	3	True				
ANR	803476	Statement	(	3725:18:94301:94301	802906	4	True				
ANR	803477	Statement	list	3725:19:94302:94305	802906	5	True				
ANR	803478	Statement	","	3725:23:94306:94306	802906	6	True				
ANR	803479	Statement	iter	3725:25:94308:94311	802906	7	True				
ANR	803480	Statement	","	3725:29:94312:94312	802906	8	True				
ANR	803481	Statement	imp	3725:31:94314:94316	802906	9	True				
ANR	803482	Statement	)	3725:34:94317:94317	802906	10	True				
ANR	803483	CompoundStatement		108:4:2466:2509	802906	11					
ANR	803484	IdentifierDeclStatement	"char * impflag = r_str_newf ( ""sym.imp.%s"" , imp -> name ) ;"	3726:4:94325:94377	802906	0	True				
ANR	803485	IdentifierDecl	"* impflag = r_str_newf ( ""sym.imp.%s"" , imp -> name )"		802906	0					
ANR	803486	IdentifierDeclType	char *		802906	0					
ANR	803487	Identifier	impflag		802906	1					
ANR	803488	AssignmentExpression	"* impflag = r_str_newf ( ""sym.imp.%s"" , imp -> name )"		802906	2		=			
ANR	803489	Identifier	impflag		802906	0					
ANR	803490	CallExpression	"r_str_newf ( ""sym.imp.%s"" , imp -> name )"		802906	1					
ANR	803491	Callee	r_str_newf		802906	0					
ANR	803492	Identifier	r_str_newf		802906	0					
ANR	803493	ArgumentList	"""sym.imp.%s"""		802906	1					
ANR	803494	Argument	"""sym.imp.%s"""		802906	0					
ANR	803495	PrimaryExpression	"""sym.imp.%s"""		802906	0					
ANR	803496	Argument	imp -> name		802906	1					
ANR	803497	PtrMemberAccess	imp -> name		802906	0					
ANR	803498	Identifier	imp		802906	0					
ANR	803499	Identifier	name		802906	1					
ANR	803500	IdentifierDeclStatement	"ut64 addr = r_num_math ( core -> num , impflag ) ;"	3727:4:94383:94426	802906	1	True				
ANR	803501	IdentifierDecl	"addr = r_num_math ( core -> num , impflag )"		802906	0					
ANR	803502	IdentifierDeclType	ut64		802906	0					
ANR	803503	Identifier	addr		802906	1					
ANR	803504	AssignmentExpression	"addr = r_num_math ( core -> num , impflag )"		802906	2		=			
ANR	803505	Identifier	addr		802906	0					
ANR	803506	CallExpression	"r_num_math ( core -> num , impflag )"		802906	1					
ANR	803507	Callee	r_num_math		802906	0					
ANR	803508	Identifier	r_num_math		802906	0					
ANR	803509	ArgumentList	core -> num		802906	1					
ANR	803510	Argument	core -> num		802906	0					
ANR	803511	PtrMemberAccess	core -> num		802906	0					
ANR	803512	Identifier	core		802906	0					
ANR	803513	Identifier	num		802906	1					
ANR	803514	Argument	impflag		802906	1					
ANR	803515	Identifier	impflag		802906	0					
ANR	803516	ExpressionStatement	free ( impflag )	3728:4:94432:94446	802906	2	True				
ANR	803517	CallExpression	free ( impflag )		802906	0					
ANR	803518	Callee	free		802906	0					
ANR	803519	Identifier	free		802906	0					
ANR	803520	ArgumentList	impflag		802906	1					
ANR	803521	Argument	impflag		802906	0					
ANR	803522	Identifier	impflag		802906	0					
ANR	803523	IfStatement	if ( addr && addr != UT64_MAX )		802906	3					
ANR	803524	Condition	addr && addr != UT64_MAX	3729:8:94456:94479	802906	0	True				
ANR	803525	AndExpression	addr && addr != UT64_MAX		802906	0		&&			
ANR	803526	Identifier	addr		802906	0					
ANR	803527	EqualityExpression	addr != UT64_MAX		802906	1		!=			
ANR	803528	Identifier	addr		802906	0					
ANR	803529	Identifier	UT64_MAX		802906	1					
ANR	803530	CompoundStatement		110:34:2565:2565	802906	1					
ANR	803531	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	3730:5:94489:94516	802906	0	True				
ANR	803532	CallExpression	"r_core_seek ( core , addr , 1 )"		802906	0					
ANR	803533	Callee	r_core_seek		802906	0					
ANR	803534	Identifier	r_core_seek		802906	0					
ANR	803535	ArgumentList	core		802906	1					
ANR	803536	Argument	core		802906	0					
ANR	803537	Identifier	core		802906	0					
ANR	803538	Argument	addr		802906	1					
ANR	803539	Identifier	addr		802906	0					
ANR	803540	Argument	1		802906	2					
ANR	803541	PrimaryExpression	1		802906	0					
ANR	803542	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3731:5:94523:94546	802906	1	True				
ANR	803543	CallExpression	"r_core_cmd0 ( core , cmd )"		802906	0					
ANR	803544	Callee	r_core_cmd0		802906	0					
ANR	803545	Identifier	r_core_cmd0		802906	0					
ANR	803546	ArgumentList	core		802906	1					
ANR	803547	Argument	core		802906	0					
ANR	803548	Identifier	core		802906	0					
ANR	803549	Argument	cmd		802906	1					
ANR	803550	Identifier	cmd		802906	0					
ANR	803551	ExpressionStatement	"r_core_seek ( core , offorig , 1 )"	3734:3:94562:94592	802906	12	True				
ANR	803552	CallExpression	"r_core_seek ( core , offorig , 1 )"		802906	0					
ANR	803553	Callee	r_core_seek		802906	0					
ANR	803554	Identifier	r_core_seek		802906	0					
ANR	803555	ArgumentList	core		802906	1					
ANR	803556	Argument	core		802906	0					
ANR	803557	Identifier	core		802906	0					
ANR	803558	Argument	offorig		802906	1					
ANR	803559	Identifier	offorig		802906	0					
ANR	803560	Argument	1		802906	2					
ANR	803561	PrimaryExpression	1		802906	0					
ANR	803562	BreakStatement	break ;	3736:2:94600:94605	802906	26	True				
ANR	803563	Label	case 'S' :	3737:1:94608:94616	802906	27	True				
ANR	803564	CompoundStatement		120:3:2718:2764	802906	28					
ANR	803565	IdentifierDeclStatement	RBinObject * obj = r_bin_cur_object ( core -> bin ) ;	3739:3:94635:94681	802906	0	True				
ANR	803566	IdentifierDecl	* obj = r_bin_cur_object ( core -> bin )		802906	0					
ANR	803567	IdentifierDeclType	RBinObject *		802906	0					
ANR	803568	Identifier	obj		802906	1					
ANR	803569	AssignmentExpression	* obj = r_bin_cur_object ( core -> bin )		802906	2		=			
ANR	803570	Identifier	obj		802906	0					
ANR	803571	CallExpression	r_bin_cur_object ( core -> bin )		802906	1					
ANR	803572	Callee	r_bin_cur_object		802906	0					
ANR	803573	Identifier	r_bin_cur_object		802906	0					
ANR	803574	ArgumentList	core -> bin		802906	1					
ANR	803575	Argument	core -> bin		802906	0					
ANR	803576	PtrMemberAccess	core -> bin		802906	0					
ANR	803577	Identifier	core		802906	0					
ANR	803578	Identifier	bin		802906	1					
ANR	803579	IfStatement	if ( obj )		802906	1					
ANR	803580	Condition	obj	3740:7:94690:94692	802906	0	True				
ANR	803581	Identifier	obj		802906	0					
ANR	803582	CompoundStatement		125:4:2875:2890	802906	1					
ANR	803583	IdentifierDeclStatement	ut64 offorig = core -> offset ;	3741:4:94701:94728	802906	0	True				
ANR	803584	IdentifierDecl	offorig = core -> offset		802906	0					
ANR	803585	IdentifierDeclType	ut64		802906	0					
ANR	803586	Identifier	offorig		802906	1					
ANR	803587	AssignmentExpression	offorig = core -> offset		802906	2		=			
ANR	803588	Identifier	offorig		802906	0					
ANR	803589	PtrMemberAccess	core -> offset		802906	1					
ANR	803590	Identifier	core		802906	0					
ANR	803591	Identifier	offset		802906	1					
ANR	803592	IdentifierDeclStatement	ut64 bszorig = core -> blocksize ;	3742:4:94734:94764	802906	1	True				
ANR	803593	IdentifierDecl	bszorig = core -> blocksize		802906	0					
ANR	803594	IdentifierDeclType	ut64		802906	0					
ANR	803595	Identifier	bszorig		802906	1					
ANR	803596	AssignmentExpression	bszorig = core -> blocksize		802906	2		=			
ANR	803597	Identifier	bszorig		802906	0					
ANR	803598	PtrMemberAccess	core -> blocksize		802906	1					
ANR	803599	Identifier	core		802906	0					
ANR	803600	Identifier	blocksize		802906	1					
ANR	803601	IdentifierDeclStatement	RBinSection * sec ;	3743:4:94770:94786	802906	2	True				
ANR	803602	IdentifierDecl	* sec		802906	0					
ANR	803603	IdentifierDeclType	RBinSection *		802906	0					
ANR	803604	Identifier	sec		802906	1					
ANR	803605	IdentifierDeclStatement	RListIter * iter ;	3744:4:94792:94807	802906	3	True				
ANR	803606	IdentifierDecl	* iter		802906	0					
ANR	803607	IdentifierDeclType	RListIter *		802906	0					
ANR	803608	Identifier	iter		802906	1					
ANR	803609	Statement	r_list_foreach	3745:4:94813:94826	802906	4	True				
ANR	803610	Statement	(	3745:19:94828:94828	802906	5	True				
ANR	803611	Statement	obj	3745:20:94829:94831	802906	6	True				
ANR	803612	Statement	->	3745:23:94832:94833	802906	7	True				
ANR	803613	Statement	sections	3745:25:94834:94841	802906	8	True				
ANR	803614	Statement	","	3745:33:94842:94842	802906	9	True				
ANR	803615	Statement	iter	3745:35:94844:94847	802906	10	True				
ANR	803616	Statement	","	3745:39:94848:94848	802906	11	True				
ANR	803617	Statement	sec	3745:41:94850:94852	802906	12	True				
ANR	803618	Statement	)	3745:44:94853:94853	802906	13	True				
ANR	803619	CompoundStatement		126:46:2938:2938	802906	14					
ANR	803620	ExpressionStatement	"r_core_seek ( core , sec -> vaddr , 1 )"	3746:5:94862:94895	802906	0	True				
ANR	803621	CallExpression	"r_core_seek ( core , sec -> vaddr , 1 )"		802906	0					
ANR	803622	Callee	r_core_seek		802906	0					
ANR	803623	Identifier	r_core_seek		802906	0					
ANR	803624	ArgumentList	core		802906	1					
ANR	803625	Argument	core		802906	0					
ANR	803626	Identifier	core		802906	0					
ANR	803627	Argument	sec -> vaddr		802906	1					
ANR	803628	PtrMemberAccess	sec -> vaddr		802906	0					
ANR	803629	Identifier	sec		802906	0					
ANR	803630	Identifier	vaddr		802906	1					
ANR	803631	Argument	1		802906	2					
ANR	803632	PrimaryExpression	1		802906	0					
ANR	803633	ExpressionStatement	"r_core_block_size ( core , sec -> vsize )"	3747:5:94902:94938	802906	1	True				
ANR	803634	CallExpression	"r_core_block_size ( core , sec -> vsize )"		802906	0					
ANR	803635	Callee	r_core_block_size		802906	0					
ANR	803636	Identifier	r_core_block_size		802906	0					
ANR	803637	ArgumentList	core		802906	1					
ANR	803638	Argument	core		802906	0					
ANR	803639	Identifier	core		802906	0					
ANR	803640	Argument	sec -> vsize		802906	1					
ANR	803641	PtrMemberAccess	sec -> vsize		802906	0					
ANR	803642	Identifier	sec		802906	0					
ANR	803643	Identifier	vsize		802906	1					
ANR	803644	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3748:5:94945:94968	802906	2	True				
ANR	803645	CallExpression	"r_core_cmd0 ( core , cmd )"		802906	0					
ANR	803646	Callee	r_core_cmd0		802906	0					
ANR	803647	Identifier	r_core_cmd0		802906	0					
ANR	803648	ArgumentList	core		802906	1					
ANR	803649	Argument	core		802906	0					
ANR	803650	Identifier	core		802906	0					
ANR	803651	Argument	cmd		802906	1					
ANR	803652	Identifier	cmd		802906	0					
ANR	803653	ExpressionStatement	"r_core_block_size ( core , bszorig )"	3750:4:94980:95013	802906	15	True				
ANR	803654	CallExpression	"r_core_block_size ( core , bszorig )"		802906	0					
ANR	803655	Callee	r_core_block_size		802906	0					
ANR	803656	Identifier	r_core_block_size		802906	0					
ANR	803657	ArgumentList	core		802906	1					
ANR	803658	Argument	core		802906	0					
ANR	803659	Identifier	core		802906	0					
ANR	803660	Argument	bszorig		802906	1					
ANR	803661	Identifier	bszorig		802906	0					
ANR	803662	ExpressionStatement	"r_core_seek ( core , offorig , 1 )"	3751:4:95019:95049	802906	16	True				
ANR	803663	CallExpression	"r_core_seek ( core , offorig , 1 )"		802906	0					
ANR	803664	Callee	r_core_seek		802906	0					
ANR	803665	Identifier	r_core_seek		802906	0					
ANR	803666	ArgumentList	core		802906	1					
ANR	803667	Argument	core		802906	0					
ANR	803668	Identifier	core		802906	0					
ANR	803669	Argument	offorig		802906	1					
ANR	803670	Identifier	offorig		802906	0					
ANR	803671	Argument	1		802906	2					
ANR	803672	PrimaryExpression	1		802906	0					
ANR	803673	IfStatement	if ( each [ 1 ] == 'S' )		802906	29					
ANR	803674	Condition	each [ 1 ] == 'S'	3755:6:95076:95089	802906	0	True				
ANR	803675	EqualityExpression	each [ 1 ] == 'S'		802906	0		==			
ANR	803676	ArrayIndexing	each [ 1 ]		802906	0					
ANR	803677	Identifier	each		802906	0					
ANR	803678	PrimaryExpression	1		802906	1					
ANR	803679	PrimaryExpression	'S'		802906	1					
ANR	803680	CompoundStatement		140:3:3270:3296	802906	1					
ANR	803681	IdentifierDeclStatement	RListIter * it ;	3756:3:95097:95110	802906	0	True				
ANR	803682	IdentifierDecl	* it		802906	0					
ANR	803683	IdentifierDeclType	RListIter *		802906	0					
ANR	803684	Identifier	it		802906	1					
ANR	803685	IdentifierDeclStatement	RBinSection * sec ;	3757:3:95115:95131	802906	1	True				
ANR	803686	IdentifierDecl	* sec		802906	0					
ANR	803687	IdentifierDeclType	RBinSection *		802906	0					
ANR	803688	Identifier	sec		802906	1					
ANR	803689	IdentifierDeclStatement	RBinObject * obj = r_bin_cur_object ( core -> bin ) ;	3758:3:95136:95182	802906	2	True				
ANR	803690	IdentifierDecl	* obj = r_bin_cur_object ( core -> bin )		802906	0					
ANR	803691	IdentifierDeclType	RBinObject *		802906	0					
ANR	803692	Identifier	obj		802906	1					
ANR	803693	AssignmentExpression	* obj = r_bin_cur_object ( core -> bin )		802906	2		=			
ANR	803694	Identifier	obj		802906	0					
ANR	803695	CallExpression	r_bin_cur_object ( core -> bin )		802906	1					
ANR	803696	Callee	r_bin_cur_object		802906	0					
ANR	803697	Identifier	r_bin_cur_object		802906	0					
ANR	803698	ArgumentList	core -> bin		802906	1					
ANR	803699	Argument	core -> bin		802906	0					
ANR	803700	PtrMemberAccess	core -> bin		802906	0					
ANR	803701	Identifier	core		802906	0					
ANR	803702	Identifier	bin		802906	1					
ANR	803703	IdentifierDeclStatement	int cbsz = core -> blocksize ;	3759:3:95187:95213	802906	3	True				
ANR	803704	IdentifierDecl	cbsz = core -> blocksize		802906	0					
ANR	803705	IdentifierDeclType	int		802906	0					
ANR	803706	Identifier	cbsz		802906	1					
ANR	803707	AssignmentExpression	cbsz = core -> blocksize		802906	2		=			
ANR	803708	Identifier	cbsz		802906	0					
ANR	803709	PtrMemberAccess	core -> blocksize		802906	1					
ANR	803710	Identifier	core		802906	0					
ANR	803711	Identifier	blocksize		802906	1					
ANR	803712	Statement	r_list_foreach	3760:3:95218:95231	802906	4	True				
ANR	803713	Statement	(	3760:18:95233:95233	802906	5	True				
ANR	803714	Statement	obj	3760:19:95234:95236	802906	6	True				
ANR	803715	Statement	->	3760:22:95237:95238	802906	7	True				
ANR	803716	Statement	sections	3760:24:95239:95246	802906	8	True				
ANR	803717	Statement	","	3760:32:95247:95247	802906	9	True				
ANR	803718	Statement	it	3760:34:95249:95250	802906	10	True				
ANR	803719	Statement	","	3760:36:95251:95251	802906	11	True				
ANR	803720	Statement	sec	3760:38:95253:95255	802906	12	True				
ANR	803721	Statement	)	3760:41:95256:95256	802906	13	True				
ANR	803722	CompoundStatement		143:4:3374:3396	802906	14					
ANR	803723	IdentifierDeclStatement	ut64 addr = sec -> vaddr ;	3761:4:95263:95285	802906	0	True				
ANR	803724	IdentifierDecl	addr = sec -> vaddr		802906	0					
ANR	803725	IdentifierDeclType	ut64		802906	0					
ANR	803726	Identifier	addr		802906	1					
ANR	803727	AssignmentExpression	addr = sec -> vaddr		802906	2		=			
ANR	803728	Identifier	addr		802906	0					
ANR	803729	PtrMemberAccess	sec -> vaddr		802906	1					
ANR	803730	Identifier	sec		802906	0					
ANR	803731	Identifier	vaddr		802906	1					
ANR	803732	IdentifierDeclStatement	ut64 size = sec -> vsize ;	3762:4:95291:95313	802906	1	True				
ANR	803733	IdentifierDecl	size = sec -> vsize		802906	0					
ANR	803734	IdentifierDeclType	ut64		802906	0					
ANR	803735	Identifier	size		802906	1					
ANR	803736	AssignmentExpression	size = sec -> vsize		802906	2		=			
ANR	803737	Identifier	size		802906	0					
ANR	803738	PtrMemberAccess	sec -> vsize		802906	1					
ANR	803739	Identifier	sec		802906	0					
ANR	803740	Identifier	vsize		802906	1					
ANR	803741	ExpressionStatement	"r_core_seek_size ( core , addr , size )"	3767:4:95403:95438	802906	2	True				
ANR	803742	CallExpression	"r_core_seek_size ( core , addr , size )"		802906	0					
ANR	803743	Callee	r_core_seek_size		802906	0					
ANR	803744	Identifier	r_core_seek_size		802906	0					
ANR	803745	ArgumentList	core		802906	1					
ANR	803746	Argument	core		802906	0					
ANR	803747	Identifier	core		802906	0					
ANR	803748	Argument	addr		802906	1					
ANR	803749	Identifier	addr		802906	0					
ANR	803750	Argument	size		802906	2					
ANR	803751	Identifier	size		802906	0					
ANR	803752	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	3768:4:95444:95469	802906	3	True				
ANR	803753	CallExpression	"r_core_cmd ( core , cmd , 0 )"		802906	0					
ANR	803754	Callee	r_core_cmd		802906	0					
ANR	803755	Identifier	r_core_cmd		802906	0					
ANR	803756	ArgumentList	core		802906	1					
ANR	803757	Argument	core		802906	0					
ANR	803758	Identifier	core		802906	0					
ANR	803759	Argument	cmd		802906	1					
ANR	803760	Identifier	cmd		802906	0					
ANR	803761	Argument	0		802906	2					
ANR	803762	PrimaryExpression	0		802906	0					
ANR	803763	ExpressionStatement	"r_core_block_size ( core , cbsz )"	3770:3:95479:95509	802906	15	True				
ANR	803764	CallExpression	"r_core_block_size ( core , cbsz )"		802906	0					
ANR	803765	Callee	r_core_block_size		802906	0					
ANR	803766	Identifier	r_core_block_size		802906	0					
ANR	803767	ArgumentList	core		802906	1					
ANR	803768	Argument	core		802906	0					
ANR	803769	Identifier	core		802906	0					
ANR	803770	Argument	cbsz		802906	1					
ANR	803771	Identifier	cbsz		802906	0					
ANR	803772	BreakStatement	break ;	3773:2:95524:95529	802906	30	True				
ANR	803773	Label	case 's' :	3774:1:95532:95540	802906	31	True				
ANR	803774	IfStatement	if ( each [ 1 ] == 't' )		802906	32					
ANR	803775	Condition	each [ 1 ] == 't'	3775:6:95548:95561	802906	0	True				
ANR	803776	EqualityExpression	each [ 1 ] == 't'		802906	0		==			
ANR	803777	ArrayIndexing	each [ 1 ]		802906	0					
ANR	803778	Identifier	each		802906	0					
ANR	803779	PrimaryExpression	1		802906	1					
ANR	803780	PrimaryExpression	't'		802906	1					
ANR	803781	CompoundStatement		158:3:3704:3717	802906	1					
ANR	803782	ExpressionStatement	list = r_bin_get_strings ( core -> bin )	3776:3:95580:95616	802906	0	True				
ANR	803783	AssignmentExpression	list = r_bin_get_strings ( core -> bin )		802906	0		=			
ANR	803784	Identifier	list		802906	0					
ANR	803785	CallExpression	r_bin_get_strings ( core -> bin )		802906	1					
ANR	803786	Callee	r_bin_get_strings		802906	0					
ANR	803787	Identifier	r_bin_get_strings		802906	0					
ANR	803788	ArgumentList	core -> bin		802906	1					
ANR	803789	Argument	core -> bin		802906	0					
ANR	803790	PtrMemberAccess	core -> bin		802906	0					
ANR	803791	Identifier	core		802906	0					
ANR	803792	Identifier	bin		802906	1					
ANR	803793	IdentifierDeclStatement	RBinString * s ;	3777:3:95621:95634	802906	1	True				
ANR	803794	IdentifierDecl	* s		802906	0					
ANR	803795	IdentifierDeclType	RBinString *		802906	0					
ANR	803796	Identifier	s		802906	1					
ANR	803797	IfStatement	if ( list )		802906	2					
ANR	803798	Condition	list	3778:7:95643:95646	802906	0	True				
ANR	803799	Identifier	list		802906	0					
ANR	803800	CompoundStatement		161:4:3771:3797	802906	1					
ANR	803801	IdentifierDeclStatement	ut64 offorig = core -> offset ;	3779:4:95655:95682	802906	0	True				
ANR	803802	IdentifierDecl	offorig = core -> offset		802906	0					
ANR	803803	IdentifierDeclType	ut64		802906	0					
ANR	803804	Identifier	offorig		802906	1					
ANR	803805	AssignmentExpression	offorig = core -> offset		802906	2		=			
ANR	803806	Identifier	offorig		802906	0					
ANR	803807	PtrMemberAccess	core -> offset		802906	1					
ANR	803808	Identifier	core		802906	0					
ANR	803809	Identifier	offset		802906	1					
ANR	803810	IdentifierDeclStatement	ut64 obs = core -> blocksize ;	3780:4:95688:95714	802906	1	True				
ANR	803811	IdentifierDecl	obs = core -> blocksize		802906	0					
ANR	803812	IdentifierDeclType	ut64		802906	0					
ANR	803813	Identifier	obs		802906	1					
ANR	803814	AssignmentExpression	obs = core -> blocksize		802906	2		=			
ANR	803815	Identifier	obs		802906	0					
ANR	803816	PtrMemberAccess	core -> blocksize		802906	1					
ANR	803817	Identifier	core		802906	0					
ANR	803818	Identifier	blocksize		802906	1					
ANR	803819	Statement	r_list_foreach	3781:4:95720:95733	802906	2	True				
ANR	803820	Statement	(	3781:19:95735:95735	802906	3	True				
ANR	803821	Statement	list	3781:20:95736:95739	802906	4	True				
ANR	803822	Statement	","	3781:24:95740:95740	802906	5	True				
ANR	803823	Statement	iter	3781:26:95742:95745	802906	6	True				
ANR	803824	Statement	","	3781:30:95746:95746	802906	7	True				
ANR	803825	Statement	s	3781:32:95748:95748	802906	8	True				
ANR	803826	Statement	)	3781:33:95749:95749	802906	9	True				
ANR	803827	CompoundStatement		162:35:3834:3834	802906	10					
ANR	803828	ExpressionStatement	"r_core_block_size ( core , s -> size )"	3782:5:95758:95791	802906	0	True				
ANR	803829	CallExpression	"r_core_block_size ( core , s -> size )"		802906	0					
ANR	803830	Callee	r_core_block_size		802906	0					
ANR	803831	Identifier	r_core_block_size		802906	0					
ANR	803832	ArgumentList	core		802906	1					
ANR	803833	Argument	core		802906	0					
ANR	803834	Identifier	core		802906	0					
ANR	803835	Argument	s -> size		802906	1					
ANR	803836	PtrMemberAccess	s -> size		802906	0					
ANR	803837	Identifier	s		802906	0					
ANR	803838	Identifier	size		802906	1					
ANR	803839	ExpressionStatement	"r_core_seek ( core , s -> vaddr , 1 )"	3783:5:95798:95829	802906	1	True				
ANR	803840	CallExpression	"r_core_seek ( core , s -> vaddr , 1 )"		802906	0					
ANR	803841	Callee	r_core_seek		802906	0					
ANR	803842	Identifier	r_core_seek		802906	0					
ANR	803843	ArgumentList	core		802906	1					
ANR	803844	Argument	core		802906	0					
ANR	803845	Identifier	core		802906	0					
ANR	803846	Argument	s -> vaddr		802906	1					
ANR	803847	PtrMemberAccess	s -> vaddr		802906	0					
ANR	803848	Identifier	s		802906	0					
ANR	803849	Identifier	vaddr		802906	1					
ANR	803850	Argument	1		802906	2					
ANR	803851	PrimaryExpression	1		802906	0					
ANR	803852	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3784:5:95836:95859	802906	2	True				
ANR	803853	CallExpression	"r_core_cmd0 ( core , cmd )"		802906	0					
ANR	803854	Callee	r_core_cmd0		802906	0					
ANR	803855	Identifier	r_core_cmd0		802906	0					
ANR	803856	ArgumentList	core		802906	1					
ANR	803857	Argument	core		802906	0					
ANR	803858	Identifier	core		802906	0					
ANR	803859	Argument	cmd		802906	1					
ANR	803860	Identifier	cmd		802906	0					
ANR	803861	ExpressionStatement	"r_core_block_size ( core , obs )"	3786:4:95871:95900	802906	11	True				
ANR	803862	CallExpression	"r_core_block_size ( core , obs )"		802906	0					
ANR	803863	Callee	r_core_block_size		802906	0					
ANR	803864	Identifier	r_core_block_size		802906	0					
ANR	803865	ArgumentList	core		802906	1					
ANR	803866	Argument	core		802906	0					
ANR	803867	Identifier	core		802906	0					
ANR	803868	Argument	obs		802906	1					
ANR	803869	Identifier	obs		802906	0					
ANR	803870	ExpressionStatement	"r_core_seek ( core , offorig , 1 )"	3787:4:95906:95936	802906	12	True				
ANR	803871	CallExpression	"r_core_seek ( core , offorig , 1 )"		802906	0					
ANR	803872	Callee	r_core_seek		802906	0					
ANR	803873	Identifier	r_core_seek		802906	0					
ANR	803874	ArgumentList	core		802906	1					
ANR	803875	Argument	core		802906	0					
ANR	803876	Identifier	core		802906	0					
ANR	803877	Argument	offorig		802906	1					
ANR	803878	Identifier	offorig		802906	0					
ANR	803879	Argument	1		802906	2					
ANR	803880	PrimaryExpression	1		802906	0					
ANR	803881	ElseStatement	else		802906	0					
ANR	803882	CompoundStatement		174:3:4106:4132	802906	0					
ANR	803883	IdentifierDeclStatement	RBinSymbol * sym ;	3791:3:95971:95986	802906	0	True				
ANR	803884	IdentifierDecl	* sym		802906	0					
ANR	803885	IdentifierDeclType	RBinSymbol *		802906	0					
ANR	803886	Identifier	sym		802906	1					
ANR	803887	IdentifierDeclStatement	ut64 offorig = core -> offset ;	3792:3:95991:96018	802906	1	True				
ANR	803888	IdentifierDecl	offorig = core -> offset		802906	0					
ANR	803889	IdentifierDeclType	ut64		802906	0					
ANR	803890	Identifier	offorig		802906	1					
ANR	803891	AssignmentExpression	offorig = core -> offset		802906	2		=			
ANR	803892	Identifier	offorig		802906	0					
ANR	803893	PtrMemberAccess	core -> offset		802906	1					
ANR	803894	Identifier	core		802906	0					
ANR	803895	Identifier	offset		802906	1					
ANR	803896	IdentifierDeclStatement	ut64 obs = core -> blocksize ;	3793:3:96023:96049	802906	2	True				
ANR	803897	IdentifierDecl	obs = core -> blocksize		802906	0					
ANR	803898	IdentifierDeclType	ut64		802906	0					
ANR	803899	Identifier	obs		802906	1					
ANR	803900	AssignmentExpression	obs = core -> blocksize		802906	2		=			
ANR	803901	Identifier	obs		802906	0					
ANR	803902	PtrMemberAccess	core -> blocksize		802906	1					
ANR	803903	Identifier	core		802906	0					
ANR	803904	Identifier	blocksize		802906	1					
ANR	803905	ExpressionStatement	list = r_bin_get_symbols ( core -> bin )	3794:3:96054:96090	802906	3	True				
ANR	803906	AssignmentExpression	list = r_bin_get_symbols ( core -> bin )		802906	0		=			
ANR	803907	Identifier	list		802906	0					
ANR	803908	CallExpression	r_bin_get_symbols ( core -> bin )		802906	1					
ANR	803909	Callee	r_bin_get_symbols		802906	0					
ANR	803910	Identifier	r_bin_get_symbols		802906	0					
ANR	803911	ArgumentList	core -> bin		802906	1					
ANR	803912	Argument	core -> bin		802906	0					
ANR	803913	PtrMemberAccess	core -> bin		802906	0					
ANR	803914	Identifier	core		802906	0					
ANR	803915	Identifier	bin		802906	1					
ANR	803916	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	3795:3:96095:96125	802906	4	True				
ANR	803917	CallExpression	"r_cons_break_push ( NULL , NULL )"		802906	0					
ANR	803918	Callee	r_cons_break_push		802906	0					
ANR	803919	Identifier	r_cons_break_push		802906	0					
ANR	803920	ArgumentList	NULL		802906	1					
ANR	803921	Argument	NULL		802906	0					
ANR	803922	Identifier	NULL		802906	0					
ANR	803923	Argument	NULL		802906	1					
ANR	803924	Identifier	NULL		802906	0					
ANR	803925	Statement	r_list_foreach	3796:3:96130:96143	802906	5	True				
ANR	803926	Statement	(	3796:18:96145:96145	802906	6	True				
ANR	803927	Statement	list	3796:19:96146:96149	802906	7	True				
ANR	803928	Statement	","	3796:23:96150:96150	802906	8	True				
ANR	803929	Statement	iter	3796:25:96152:96155	802906	9	True				
ANR	803930	Statement	","	3796:29:96156:96156	802906	10	True				
ANR	803931	Statement	sym	3796:31:96158:96160	802906	11	True				
ANR	803932	Statement	)	3796:34:96161:96161	802906	12	True				
ANR	803933	CompoundStatement		177:36:4246:4246	802906	13					
ANR	803934	IfStatement	if ( r_cons_is_breaked ( ) )		802906	0					
ANR	803935	Condition	r_cons_is_breaked ( )	3797:8:96173:96192	802906	0	True				
ANR	803936	CallExpression	r_cons_is_breaked ( )		802906	0					
ANR	803937	Callee	r_cons_is_breaked		802906	0					
ANR	803938	Identifier	r_cons_is_breaked		802906	0					
ANR	803939	ArgumentList			802906	1					
ANR	803940	CompoundStatement		178:30:4278:4278	802906	1					
ANR	803941	BreakStatement	break ;	3798:5:96202:96207	802906	0	True				
ANR	803942	ExpressionStatement	"r_core_block_size ( core , sym -> size )"	3800:4:96219:96254	802906	1	True				
ANR	803943	CallExpression	"r_core_block_size ( core , sym -> size )"		802906	0					
ANR	803944	Callee	r_core_block_size		802906	0					
ANR	803945	Identifier	r_core_block_size		802906	0					
ANR	803946	ArgumentList	core		802906	1					
ANR	803947	Argument	core		802906	0					
ANR	803948	Identifier	core		802906	0					
ANR	803949	Argument	sym -> size		802906	1					
ANR	803950	PtrMemberAccess	sym -> size		802906	0					
ANR	803951	Identifier	sym		802906	0					
ANR	803952	Identifier	size		802906	1					
ANR	803953	ExpressionStatement	"r_core_seek ( core , sym -> vaddr , 1 )"	3801:4:96260:96293	802906	2	True				
ANR	803954	CallExpression	"r_core_seek ( core , sym -> vaddr , 1 )"		802906	0					
ANR	803955	Callee	r_core_seek		802906	0					
ANR	803956	Identifier	r_core_seek		802906	0					
ANR	803957	ArgumentList	core		802906	1					
ANR	803958	Argument	core		802906	0					
ANR	803959	Identifier	core		802906	0					
ANR	803960	Argument	sym -> vaddr		802906	1					
ANR	803961	PtrMemberAccess	sym -> vaddr		802906	0					
ANR	803962	Identifier	sym		802906	0					
ANR	803963	Identifier	vaddr		802906	1					
ANR	803964	Argument	1		802906	2					
ANR	803965	PrimaryExpression	1		802906	0					
ANR	803966	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3802:4:96299:96322	802906	3	True				
ANR	803967	CallExpression	"r_core_cmd0 ( core , cmd )"		802906	0					
ANR	803968	Callee	r_core_cmd0		802906	0					
ANR	803969	Identifier	r_core_cmd0		802906	0					
ANR	803970	ArgumentList	core		802906	1					
ANR	803971	Argument	core		802906	0					
ANR	803972	Identifier	core		802906	0					
ANR	803973	Argument	cmd		802906	1					
ANR	803974	Identifier	cmd		802906	0					
ANR	803975	ExpressionStatement	r_cons_break_pop ( )	3804:3:96332:96351	802906	14	True				
ANR	803976	CallExpression	r_cons_break_pop ( )		802906	0					
ANR	803977	Callee	r_cons_break_pop		802906	0					
ANR	803978	Identifier	r_cons_break_pop		802906	0					
ANR	803979	ArgumentList			802906	1					
ANR	803980	ExpressionStatement	"r_core_block_size ( core , obs )"	3805:3:96356:96385	802906	15	True				
ANR	803981	CallExpression	"r_core_block_size ( core , obs )"		802906	0					
ANR	803982	Callee	r_core_block_size		802906	0					
ANR	803983	Identifier	r_core_block_size		802906	0					
ANR	803984	ArgumentList	core		802906	1					
ANR	803985	Argument	core		802906	0					
ANR	803986	Identifier	core		802906	0					
ANR	803987	Argument	obs		802906	1					
ANR	803988	Identifier	obs		802906	0					
ANR	803989	ExpressionStatement	"r_core_seek ( core , offorig , 1 )"	3806:3:96390:96420	802906	16	True				
ANR	803990	CallExpression	"r_core_seek ( core , offorig , 1 )"		802906	0					
ANR	803991	Callee	r_core_seek		802906	0					
ANR	803992	Identifier	r_core_seek		802906	0					
ANR	803993	ArgumentList	core		802906	1					
ANR	803994	Argument	core		802906	0					
ANR	803995	Identifier	core		802906	0					
ANR	803996	Argument	offorig		802906	1					
ANR	803997	Identifier	offorig		802906	0					
ANR	803998	Argument	1		802906	2					
ANR	803999	PrimaryExpression	1		802906	0					
ANR	804000	BreakStatement	break ;	3808:2:96428:96433	802906	33	True				
ANR	804001	Label	case 'f' :	3809:1:96436:96444	802906	34	True				
ANR	804002	CompoundStatement		195:3:4648:4674	802906	35					
ANR	804003	IdentifierDeclStatement	char * glob = filter ? r_str_trim_dup ( filter ) : NULL ;	3812:3:96482:96532	802906	0	True				
ANR	804004	IdentifierDecl	* glob = filter ? r_str_trim_dup ( filter ) : NULL		802906	0					
ANR	804005	IdentifierDeclType	char *		802906	0					
ANR	804006	Identifier	glob		802906	1					
ANR	804007	AssignmentExpression	* glob = filter ? r_str_trim_dup ( filter ) : NULL		802906	2		=			
ANR	804008	Identifier	glob		802906	0					
ANR	804009	ConditionalExpression	filter ? r_str_trim_dup ( filter ) : NULL		802906	1					
ANR	804010	Condition	filter		802906	0					
ANR	804011	Identifier	filter		802906	0					
ANR	804012	CallExpression	r_str_trim_dup ( filter )		802906	1					
ANR	804013	Callee	r_str_trim_dup		802906	0					
ANR	804014	Identifier	r_str_trim_dup		802906	0					
ANR	804015	ArgumentList	filter		802906	1					
ANR	804016	Argument	filter		802906	0					
ANR	804017	Identifier	filter		802906	0					
ANR	804018	Identifier	NULL		802906	2					
ANR	804019	IdentifierDeclStatement	ut64 off = core -> offset ;	3813:3:96537:96560	802906	1	True				
ANR	804020	IdentifierDecl	off = core -> offset		802906	0					
ANR	804021	IdentifierDeclType	ut64		802906	0					
ANR	804022	Identifier	off		802906	1					
ANR	804023	AssignmentExpression	off = core -> offset		802906	2		=			
ANR	804024	Identifier	off		802906	0					
ANR	804025	PtrMemberAccess	core -> offset		802906	1					
ANR	804026	Identifier	core		802906	0					
ANR	804027	Identifier	offset		802906	1					
ANR	804028	IdentifierDeclStatement	ut64 obs = core -> blocksize ;	3814:3:96565:96591	802906	2	True				
ANR	804029	IdentifierDecl	obs = core -> blocksize		802906	0					
ANR	804030	IdentifierDeclType	ut64		802906	0					
ANR	804031	Identifier	obs		802906	1					
ANR	804032	AssignmentExpression	obs = core -> blocksize		802906	2		=			
ANR	804033	Identifier	obs		802906	0					
ANR	804034	PtrMemberAccess	core -> blocksize		802906	1					
ANR	804035	Identifier	core		802906	0					
ANR	804036	Identifier	blocksize		802906	1					
ANR	804037	Statement	struct	3815:3:96596:96601	802906	3	True				
ANR	804038	Statement	exec_command_t	3815:10:96603:96616	802906	4	True				
ANR	804039	Statement	u	3815:25:96618:96618	802906	5	True				
ANR	804040	Statement	=	3815:27:96620:96620	802906	6	True				
ANR	804041	CompoundStatement		196:29:4705:4705	802906	7					
ANR	804042	Statement	.	3815:31:96624:96624	802906	0	True				
ANR	804043	Statement	core	3815:32:96625:96628	802906	1	True				
ANR	804044	Statement	=	3815:37:96630:96630	802906	2	True				
ANR	804045	Statement	core	3815:39:96632:96635	802906	3	True				
ANR	804046	Statement	","	3815:43:96636:96636	802906	4	True				
ANR	804047	Statement	.	3815:45:96638:96638	802906	5	True				
ANR	804048	Statement	cmd	3815:46:96639:96641	802906	6	True				
ANR	804049	Statement	=	3815:50:96643:96643	802906	7	True				
ANR	804050	Statement	cmd	3815:52:96645:96647	802906	8	True				
ANR	804051	ExpressionStatement		3815:57:96650:96650	802906	8	True				
ANR	804052	ExpressionStatement	"r_flag_foreach_glob ( core -> flags , glob , exec_command_on_flag , & u )"	3816:3:96655:96720	802906	9	True				
ANR	804053	CallExpression	"r_flag_foreach_glob ( core -> flags , glob , exec_command_on_flag , & u )"		802906	0					
ANR	804054	Callee	r_flag_foreach_glob		802906	0					
ANR	804055	Identifier	r_flag_foreach_glob		802906	0					
ANR	804056	ArgumentList	core -> flags		802906	1					
ANR	804057	Argument	core -> flags		802906	0					
ANR	804058	PtrMemberAccess	core -> flags		802906	0					
ANR	804059	Identifier	core		802906	0					
ANR	804060	Identifier	flags		802906	1					
ANR	804061	Argument	glob		802906	1					
ANR	804062	Identifier	glob		802906	0					
ANR	804063	Argument	exec_command_on_flag		802906	2					
ANR	804064	Identifier	exec_command_on_flag		802906	0					
ANR	804065	Argument	& u		802906	3					
ANR	804066	UnaryOperationExpression	& u		802906	0					
ANR	804067	UnaryOperator	&		802906	0					
ANR	804068	Identifier	u		802906	1					
ANR	804069	ExpressionStatement	"r_core_seek ( core , off , 0 )"	3817:3:96725:96751	802906	10	True				
ANR	804070	CallExpression	"r_core_seek ( core , off , 0 )"		802906	0					
ANR	804071	Callee	r_core_seek		802906	0					
ANR	804072	Identifier	r_core_seek		802906	0					
ANR	804073	ArgumentList	core		802906	1					
ANR	804074	Argument	core		802906	0					
ANR	804075	Identifier	core		802906	0					
ANR	804076	Argument	off		802906	1					
ANR	804077	Identifier	off		802906	0					
ANR	804078	Argument	0		802906	2					
ANR	804079	PrimaryExpression	0		802906	0					
ANR	804080	ExpressionStatement	"r_core_block_size ( core , obs )"	3818:3:96756:96785	802906	11	True				
ANR	804081	CallExpression	"r_core_block_size ( core , obs )"		802906	0					
ANR	804082	Callee	r_core_block_size		802906	0					
ANR	804083	Identifier	r_core_block_size		802906	0					
ANR	804084	ArgumentList	core		802906	1					
ANR	804085	Argument	core		802906	0					
ANR	804086	Identifier	core		802906	0					
ANR	804087	Argument	obs		802906	1					
ANR	804088	Identifier	obs		802906	0					
ANR	804089	ExpressionStatement	free ( glob )	3819:3:96790:96801	802906	12	True				
ANR	804090	CallExpression	free ( glob )		802906	0					
ANR	804091	Callee	free		802906	0					
ANR	804092	Identifier	free		802906	0					
ANR	804093	ArgumentList	glob		802906	1					
ANR	804094	Argument	glob		802906	0					
ANR	804095	Identifier	glob		802906	0					
ANR	804096	BreakStatement	break ;	3821:2:96809:96814	802906	36	True				
ANR	804097	Label	case 'F' :	3822:1:96817:96825	802906	37	True				
ANR	804098	CompoundStatement		207:3:4993:5011	802906	38					
ANR	804099	IdentifierDeclStatement	ut64 obs = core -> blocksize ;	3824:3:96847:96873	802906	0	True				
ANR	804100	IdentifierDecl	obs = core -> blocksize		802906	0					
ANR	804101	IdentifierDeclType	ut64		802906	0					
ANR	804102	Identifier	obs		802906	1					
ANR	804103	AssignmentExpression	obs = core -> blocksize		802906	2		=			
ANR	804104	Identifier	obs		802906	0					
ANR	804105	PtrMemberAccess	core -> blocksize		802906	1					
ANR	804106	Identifier	core		802906	0					
ANR	804107	Identifier	blocksize		802906	1					
ANR	804108	IdentifierDeclStatement	ut64 offorig = core -> offset ;	3825:3:96878:96905	802906	1	True				
ANR	804109	IdentifierDecl	offorig = core -> offset		802906	0					
ANR	804110	IdentifierDeclType	ut64		802906	0					
ANR	804111	Identifier	offorig		802906	1					
ANR	804112	AssignmentExpression	offorig = core -> offset		802906	2		=			
ANR	804113	Identifier	offorig		802906	0					
ANR	804114	PtrMemberAccess	core -> offset		802906	1					
ANR	804115	Identifier	core		802906	0					
ANR	804116	Identifier	offset		802906	1					
ANR	804117	IdentifierDeclStatement	RAnalFunction * fcn ;	3826:3:96910:96928	802906	2	True				
ANR	804118	IdentifierDecl	* fcn		802906	0					
ANR	804119	IdentifierDeclType	RAnalFunction *		802906	0					
ANR	804120	Identifier	fcn		802906	1					
ANR	804121	ExpressionStatement	list = core -> anal -> fcns	3827:3:96933:96956	802906	3	True				
ANR	804122	AssignmentExpression	list = core -> anal -> fcns		802906	0		=			
ANR	804123	Identifier	list		802906	0					
ANR	804124	PtrMemberAccess	core -> anal -> fcns		802906	1					
ANR	804125	PtrMemberAccess	core -> anal		802906	0					
ANR	804126	Identifier	core		802906	0					
ANR	804127	Identifier	anal		802906	1					
ANR	804128	Identifier	fcns		802906	1					
ANR	804129	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	3828:3:96961:96991	802906	4	True				
ANR	804130	CallExpression	"r_cons_break_push ( NULL , NULL )"		802906	0					
ANR	804131	Callee	r_cons_break_push		802906	0					
ANR	804132	Identifier	r_cons_break_push		802906	0					
ANR	804133	ArgumentList	NULL		802906	1					
ANR	804134	Argument	NULL		802906	0					
ANR	804135	Identifier	NULL		802906	0					
ANR	804136	Argument	NULL		802906	1					
ANR	804137	Identifier	NULL		802906	0					
ANR	804138	Statement	r_list_foreach	3829:3:96996:97009	802906	5	True				
ANR	804139	Statement	(	3829:18:97011:97011	802906	6	True				
ANR	804140	Statement	list	3829:19:97012:97015	802906	7	True				
ANR	804141	Statement	","	3829:23:97016:97016	802906	8	True				
ANR	804142	Statement	iter	3829:25:97018:97021	802906	9	True				
ANR	804143	Statement	","	3829:29:97022:97022	802906	10	True				
ANR	804144	Statement	fcn	3829:31:97024:97026	802906	11	True				
ANR	804145	Statement	)	3829:34:97027:97027	802906	12	True				
ANR	804146	CompoundStatement		210:36:5112:5112	802906	13					
ANR	804147	IfStatement	if ( r_cons_is_breaked ( ) )		802906	0					
ANR	804148	Condition	r_cons_is_breaked ( )	3830:8:97039:97058	802906	0	True				
ANR	804149	CallExpression	r_cons_is_breaked ( )		802906	0					
ANR	804150	Callee	r_cons_is_breaked		802906	0					
ANR	804151	Identifier	r_cons_is_breaked		802906	0					
ANR	804152	ArgumentList			802906	1					
ANR	804153	CompoundStatement		211:30:5144:5144	802906	1					
ANR	804154	BreakStatement	break ;	3831:5:97068:97073	802906	0	True				
ANR	804155	IfStatement	"if ( ! filter || r_str_glob ( fcn -> name , filter ) )"		802906	1					
ANR	804156	Condition	"! filter || r_str_glob ( fcn -> name , filter )"	3833:8:97089:97129	802906	0	True				
ANR	804157	OrExpression	"! filter || r_str_glob ( fcn -> name , filter )"		802906	0		||			
ANR	804158	UnaryOperationExpression	! filter		802906	0					
ANR	804159	UnaryOperator	!		802906	0					
ANR	804160	Identifier	filter		802906	1					
ANR	804161	CallExpression	"r_str_glob ( fcn -> name , filter )"		802906	1					
ANR	804162	Callee	r_str_glob		802906	0					
ANR	804163	Identifier	r_str_glob		802906	0					
ANR	804164	ArgumentList	fcn -> name		802906	1					
ANR	804165	Argument	fcn -> name		802906	0					
ANR	804166	PtrMemberAccess	fcn -> name		802906	0					
ANR	804167	Identifier	fcn		802906	0					
ANR	804168	Identifier	name		802906	1					
ANR	804169	Argument	filter		802906	1					
ANR	804170	Identifier	filter		802906	0					
ANR	804171	CompoundStatement		214:51:5215:5215	802906	1					
ANR	804172	ExpressionStatement	"r_core_seek ( core , fcn -> addr , 1 )"	3834:5:97139:97171	802906	0	True				
ANR	804173	CallExpression	"r_core_seek ( core , fcn -> addr , 1 )"		802906	0					
ANR	804174	Callee	r_core_seek		802906	0					
ANR	804175	Identifier	r_core_seek		802906	0					
ANR	804176	ArgumentList	core		802906	1					
ANR	804177	Argument	core		802906	0					
ANR	804178	Identifier	core		802906	0					
ANR	804179	Argument	fcn -> addr		802906	1					
ANR	804180	PtrMemberAccess	fcn -> addr		802906	0					
ANR	804181	Identifier	fcn		802906	0					
ANR	804182	Identifier	addr		802906	1					
ANR	804183	Argument	1		802906	2					
ANR	804184	PrimaryExpression	1		802906	0					
ANR	804185	ExpressionStatement	"r_core_block_size ( core , r_anal_fcn_size ( fcn ) )"	3835:5:97178:97225	802906	1	True				
ANR	804186	CallExpression	"r_core_block_size ( core , r_anal_fcn_size ( fcn ) )"		802906	0					
ANR	804187	Callee	r_core_block_size		802906	0					
ANR	804188	Identifier	r_core_block_size		802906	0					
ANR	804189	ArgumentList	core		802906	1					
ANR	804190	Argument	core		802906	0					
ANR	804191	Identifier	core		802906	0					
ANR	804192	Argument	r_anal_fcn_size ( fcn )		802906	1					
ANR	804193	CallExpression	r_anal_fcn_size ( fcn )		802906	0					
ANR	804194	Callee	r_anal_fcn_size		802906	0					
ANR	804195	Identifier	r_anal_fcn_size		802906	0					
ANR	804196	ArgumentList	fcn		802906	1					
ANR	804197	Argument	fcn		802906	0					
ANR	804198	Identifier	fcn		802906	0					
ANR	804199	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3836:5:97232:97255	802906	2	True				
ANR	804200	CallExpression	"r_core_cmd0 ( core , cmd )"		802906	0					
ANR	804201	Callee	r_core_cmd0		802906	0					
ANR	804202	Identifier	r_core_cmd0		802906	0					
ANR	804203	ArgumentList	core		802906	1					
ANR	804204	Argument	core		802906	0					
ANR	804205	Identifier	core		802906	0					
ANR	804206	Argument	cmd		802906	1					
ANR	804207	Identifier	cmd		802906	0					
ANR	804208	ExpressionStatement	r_cons_break_pop ( )	3839:3:97271:97290	802906	14	True				
ANR	804209	CallExpression	r_cons_break_pop ( )		802906	0					
ANR	804210	Callee	r_cons_break_pop		802906	0					
ANR	804211	Identifier	r_cons_break_pop		802906	0					
ANR	804212	ArgumentList			802906	1					
ANR	804213	ExpressionStatement	"r_core_block_size ( core , obs )"	3840:3:97295:97324	802906	15	True				
ANR	804214	CallExpression	"r_core_block_size ( core , obs )"		802906	0					
ANR	804215	Callee	r_core_block_size		802906	0					
ANR	804216	Identifier	r_core_block_size		802906	0					
ANR	804217	ArgumentList	core		802906	1					
ANR	804218	Argument	core		802906	0					
ANR	804219	Identifier	core		802906	0					
ANR	804220	Argument	obs		802906	1					
ANR	804221	Identifier	obs		802906	0					
ANR	804222	ExpressionStatement	"r_core_seek ( core , offorig , 1 )"	3841:3:97329:97359	802906	16	True				
ANR	804223	CallExpression	"r_core_seek ( core , offorig , 1 )"		802906	0					
ANR	804224	Callee	r_core_seek		802906	0					
ANR	804225	Identifier	r_core_seek		802906	0					
ANR	804226	ArgumentList	core		802906	1					
ANR	804227	Argument	core		802906	0					
ANR	804228	Identifier	core		802906	0					
ANR	804229	Argument	offorig		802906	1					
ANR	804230	Identifier	offorig		802906	0					
ANR	804231	Argument	1		802906	2					
ANR	804232	PrimaryExpression	1		802906	0					
ANR	804233	BreakStatement	break ;	3843:2:97367:97372	802906	39	True				
ANR	804234	Label	case 'b' :	3844:1:97375:97383	802906	40	True				
ANR	804235	CompoundStatement		229:3:5580:5606	802906	41					
ANR	804236	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 ) ;"	3846:3:97392:97460	802906	0	True				
ANR	804237	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		802906	0					
ANR	804238	IdentifierDeclType	RAnalFunction *		802906	0					
ANR	804239	Identifier	fcn		802906	1					
ANR	804240	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		802906	2		=			
ANR	804241	Identifier	fcn		802906	0					
ANR	804242	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		802906	1					
ANR	804243	Callee	r_anal_get_fcn_in		802906	0					
ANR	804244	Identifier	r_anal_get_fcn_in		802906	0					
ANR	804245	ArgumentList	core -> anal		802906	1					
ANR	804246	Argument	core -> anal		802906	0					
ANR	804247	PtrMemberAccess	core -> anal		802906	0					
ANR	804248	Identifier	core		802906	0					
ANR	804249	Identifier	anal		802906	1					
ANR	804250	Argument	core -> offset		802906	1					
ANR	804251	PtrMemberAccess	core -> offset		802906	0					
ANR	804252	Identifier	core		802906	0					
ANR	804253	Identifier	offset		802906	1					
ANR	804254	Argument	0		802906	2					
ANR	804255	PrimaryExpression	0		802906	0					
ANR	804256	IdentifierDeclStatement	ut64 offorig = core -> offset ;	3847:3:97465:97492	802906	1	True				
ANR	804257	IdentifierDecl	offorig = core -> offset		802906	0					
ANR	804258	IdentifierDeclType	ut64		802906	0					
ANR	804259	Identifier	offorig		802906	1					
ANR	804260	AssignmentExpression	offorig = core -> offset		802906	2		=			
ANR	804261	Identifier	offorig		802906	0					
ANR	804262	PtrMemberAccess	core -> offset		802906	1					
ANR	804263	Identifier	core		802906	0					
ANR	804264	Identifier	offset		802906	1					
ANR	804265	IdentifierDeclStatement	ut64 obs = core -> blocksize ;	3848:3:97497:97523	802906	2	True				
ANR	804266	IdentifierDecl	obs = core -> blocksize		802906	0					
ANR	804267	IdentifierDeclType	ut64		802906	0					
ANR	804268	Identifier	obs		802906	1					
ANR	804269	AssignmentExpression	obs = core -> blocksize		802906	2		=			
ANR	804270	Identifier	obs		802906	0					
ANR	804271	PtrMemberAccess	core -> blocksize		802906	1					
ANR	804272	Identifier	core		802906	0					
ANR	804273	Identifier	blocksize		802906	1					
ANR	804274	IfStatement	if ( fcn )		802906	3					
ANR	804275	Condition	fcn	3849:7:97532:97534	802906	0	True				
ANR	804276	Identifier	fcn		802906	0					
ANR	804277	CompoundStatement		232:4:5647:5661	802906	1					
ANR	804278	IdentifierDeclStatement	RListIter * iter ;	3850:4:97543:97558	802906	0	True				
ANR	804279	IdentifierDecl	* iter		802906	0					
ANR	804280	IdentifierDeclType	RListIter *		802906	0					
ANR	804281	Identifier	iter		802906	1					
ANR	804282	IdentifierDeclStatement	RAnalBlock * bb ;	3851:4:97564:97578	802906	1	True				
ANR	804283	IdentifierDecl	* bb		802906	0					
ANR	804284	IdentifierDeclType	RAnalBlock *		802906	0					
ANR	804285	Identifier	bb		802906	1					
ANR	804286	Statement	r_list_foreach	3852:4:97584:97597	802906	2	True				
ANR	804287	Statement	(	3852:19:97599:97599	802906	3	True				
ANR	804288	Statement	fcn	3852:20:97600:97602	802906	4	True				
ANR	804289	Statement	->	3852:23:97603:97604	802906	5	True				
ANR	804290	Statement	bbs	3852:25:97605:97607	802906	6	True				
ANR	804291	Statement	","	3852:28:97608:97608	802906	7	True				
ANR	804292	Statement	iter	3852:30:97610:97613	802906	8	True				
ANR	804293	Statement	","	3852:34:97614:97614	802906	9	True				
ANR	804294	Statement	bb	3852:36:97616:97617	802906	10	True				
ANR	804295	Statement	)	3852:38:97618:97618	802906	11	True				
ANR	804296	CompoundStatement		233:40:5703:5703	802906	12					
ANR	804297	ExpressionStatement	"r_core_seek ( core , bb -> addr , 1 )"	3853:5:97627:97658	802906	0	True				
ANR	804298	CallExpression	"r_core_seek ( core , bb -> addr , 1 )"		802906	0					
ANR	804299	Callee	r_core_seek		802906	0					
ANR	804300	Identifier	r_core_seek		802906	0					
ANR	804301	ArgumentList	core		802906	1					
ANR	804302	Argument	core		802906	0					
ANR	804303	Identifier	core		802906	0					
ANR	804304	Argument	bb -> addr		802906	1					
ANR	804305	PtrMemberAccess	bb -> addr		802906	0					
ANR	804306	Identifier	bb		802906	0					
ANR	804307	Identifier	addr		802906	1					
ANR	804308	Argument	1		802906	2					
ANR	804309	PrimaryExpression	1		802906	0					
ANR	804310	ExpressionStatement	"r_core_block_size ( core , bb -> size )"	3854:5:97665:97699	802906	1	True				
ANR	804311	CallExpression	"r_core_block_size ( core , bb -> size )"		802906	0					
ANR	804312	Callee	r_core_block_size		802906	0					
ANR	804313	Identifier	r_core_block_size		802906	0					
ANR	804314	ArgumentList	core		802906	1					
ANR	804315	Argument	core		802906	0					
ANR	804316	Identifier	core		802906	0					
ANR	804317	Argument	bb -> size		802906	1					
ANR	804318	PtrMemberAccess	bb -> size		802906	0					
ANR	804319	Identifier	bb		802906	0					
ANR	804320	Identifier	size		802906	1					
ANR	804321	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3855:5:97706:97729	802906	2	True				
ANR	804322	CallExpression	"r_core_cmd0 ( core , cmd )"		802906	0					
ANR	804323	Callee	r_core_cmd0		802906	0					
ANR	804324	Identifier	r_core_cmd0		802906	0					
ANR	804325	ArgumentList	core		802906	1					
ANR	804326	Argument	core		802906	0					
ANR	804327	Identifier	core		802906	0					
ANR	804328	Argument	cmd		802906	1					
ANR	804329	Identifier	cmd		802906	0					
ANR	804330	ExpressionStatement	"r_core_block_size ( core , obs )"	3857:4:97741:97770	802906	13	True				
ANR	804331	CallExpression	"r_core_block_size ( core , obs )"		802906	0					
ANR	804332	Callee	r_core_block_size		802906	0					
ANR	804333	Identifier	r_core_block_size		802906	0					
ANR	804334	ArgumentList	core		802906	1					
ANR	804335	Argument	core		802906	0					
ANR	804336	Identifier	core		802906	0					
ANR	804337	Argument	obs		802906	1					
ANR	804338	Identifier	obs		802906	0					
ANR	804339	ExpressionStatement	"r_core_seek ( core , offorig , 1 )"	3858:4:97776:97806	802906	14	True				
ANR	804340	CallExpression	"r_core_seek ( core , offorig , 1 )"		802906	0					
ANR	804341	Callee	r_core_seek		802906	0					
ANR	804342	Identifier	r_core_seek		802906	0					
ANR	804343	ArgumentList	core		802906	1					
ANR	804344	Argument	core		802906	0					
ANR	804345	Identifier	core		802906	0					
ANR	804346	Argument	offorig		802906	1					
ANR	804347	Identifier	offorig		802906	0					
ANR	804348	Argument	1		802906	2					
ANR	804349	PrimaryExpression	1		802906	0					
ANR	804350	BreakStatement	break ;	3861:2:97819:97824	802906	42	True				
ANR	804351	ReturnStatement	return 0 ;	3863:1:97830:97838	802906	7	True				
ANR	804352	PrimaryExpression	0		802906	0					
ANR	804353	ReturnType	R_API int		802906	1					
ANR	804354	Identifier	r_core_cmd_foreach3		802906	2					
ANR	804355	ParameterList	"RCore * core , const char * cmd , char * each"		802906	3					
ANR	804356	Parameter	RCore * core	3620:30:91874:91884	802906	0	True				
ANR	804357	ParameterType	RCore *		802906	0					
ANR	804358	Identifier	core		802906	1					
ANR	804359	Parameter	const char * cmd	3620:43:91887:91901	802906	1	True				
ANR	804360	ParameterType	const char *		802906	0					
ANR	804361	Identifier	cmd		802906	1					
ANR	804362	Parameter	char * each	3620:60:91904:91913	802906	2	True				
ANR	804363	ParameterType	char *		802906	0					
ANR	804364	Identifier	each		802906	1					
ANR	804365	CFGEntryNode	ENTRY		802906		True				
ANR	804366	CFGExitNode	EXIT		802906		True				
ANR	804367	Symbol	obs		802906						
ANR	804368	Symbol	* fcn		802906						
ANR	804369	Symbol	r_io_map_get_for_fd		802906						
ANR	804370	Symbol	* map		802906						
ANR	804371	Symbol	core -> offset		802906						
ANR	804372	Symbol	core -> bin		802906						
ANR	804373	Symbol	core -> blocksize		802906						
ANR	804374	Symbol	item		802906						
ANR	804375	Symbol	imp -> name		802906						
ANR	804376	Symbol	sym -> vaddr		802906						
ANR	804377	Symbol	cbsz		802906						
ANR	804378	Symbol	iter		802906						
ANR	804379	Symbol	it		802906						
ANR	804380	Symbol	core -> anal -> fcns		802906						
ANR	804381	Symbol	each		802906						
ANR	804382	Symbol	size		802906						
ANR	804383	Symbol	cmd		802906						
ANR	804384	Symbol	* sec		802906						
ANR	804385	Symbol	bb		802906						
ANR	804386	Symbol	bszorig		802906						
ANR	804387	Symbol	s -> size		802906						
ANR	804388	Symbol	map -> addr		802906						
ANR	804389	Symbol	* core		802906						
ANR	804390	Symbol	* dbg -> h		802906						
ANR	804391	Symbol	glob		802906						
ANR	804392	Symbol	core -> anal		802906						
ANR	804393	Symbol	sym -> size		802906						
ANR	804394	Symbol	sec		802906						
ANR	804395	Symbol	fcn		802906						
ANR	804396	Symbol	r_cons_is_breaked		802906						
ANR	804397	Symbol	core -> io		802906						
ANR	804398	Symbol	arg		802906						
ANR	804399	Symbol	map		802906						
ANR	804400	Symbol	r_bin_cur_object		802906						
ANR	804401	Symbol	core -> anal -> bits		802906						
ANR	804402	Symbol	r_reg_get_value		802906						
ANR	804403	Symbol	dbg -> h		802906						
ANR	804404	Symbol	i		802906						
ANR	804405	Symbol	core -> flags		802906						
ANR	804406	Symbol	off		802906						
ANR	804407	Symbol	s -> vaddr		802906						
ANR	804408	Symbol	filter		802906						
ANR	804409	Symbol	p		802906						
ANR	804410	Symbol	dbg -> maps		802906						
ANR	804411	Symbol	* core -> anal		802906						
ANR	804412	Symbol	s		802906						
ANR	804413	Symbol	dbg -> pid		802906						
ANR	804414	Symbol	r_str_glob		802906						
ANR	804415	Symbol	item -> name		802906						
ANR	804416	Symbol	r_bin_get_symbols		802906						
ANR	804417	Symbol	fcn -> addr		802906						
ANR	804418	Symbol	dbg -> reg		802906						
ANR	804419	Symbol	foreach_comment		802906						
ANR	804420	Symbol	r_core_cmd_str		802906						
ANR	804421	Symbol	offorig		802906						
ANR	804422	Symbol	bb -> size		802906						
ANR	804423	Symbol	fcn -> name		802906						
ANR	804424	Symbol	r_anal_fcn_size		802906						
ANR	804425	Symbol	help_msg_at_at_at		802906						
ANR	804426	Symbol	* imp		802906						
ANR	804427	Symbol	bb -> addr		802906						
ANR	804428	Symbol	r_str_trim_dup		802906						
ANR	804429	Symbol	sec -> vsize		802906						
ANR	804430	Symbol	core -> num		802906						
ANR	804431	Symbol	NULL		802906						
ANR	804432	Symbol	maps		802906						
ANR	804433	Symbol	r_reg_get_list		802906						
ANR	804434	Symbol	dbg		802906						
ANR	804435	Symbol	* each		802906						
ANR	804436	Symbol	list		802906						
ANR	804437	Symbol	core		802906						
ANR	804438	Symbol	* sym		802906						
ANR	804439	Symbol	r_io_fd_get_current		802906						
ANR	804440	Symbol	sec -> vaddr		802906						
ANR	804441	Symbol	fd		802906						
ANR	804442	Symbol	map -> itv		802906						
ANR	804443	Symbol	p -> pid		802906						
ANR	804444	Symbol	sym		802906						
ANR	804445	Symbol	R_META_TYPE_COMMENT		802906						
ANR	804446	Symbol	r_str_newf		802906						
ANR	804447	Symbol	dbg -> h -> threads		802906						
ANR	804448	Symbol	imp		802906						
ANR	804449	Symbol	r_num_math		802906						
ANR	804450	Symbol	r_bin_get_strings		802906						
ANR	804451	Symbol	head		802906						
ANR	804452	Symbol	r_bin_get_imports		802906						
ANR	804453	Symbol	exec_command_on_flag		802906						
ANR	804454	Symbol	* item		802906						
ANR	804455	Symbol	map -> itv . addr		802906						
ANR	804456	Symbol	UT64_MAX		802906						
ANR	804457	Symbol	addr		802906						
ANR	804458	Symbol	value		802906						
ANR	804459	Symbol	* * core		802906						
ANR	804460	Symbol	* bb		802906						
ANR	804461	Symbol	false		802906						
ANR	804462	Symbol	* dbg		802906						
ANR	804463	Symbol	impflag		802906						
ANR	804464	Symbol	map -> itv . size		802906						
ANR	804465	Symbol	r_anal_get_fcn_in		802906						
ANR	804466	Symbol	obj		802906						
ANR	804467	Symbol	* p		802906						
ANR	804468	Symbol	& u		802906						
ANR	804469	Symbol	* * dbg		802906						
ANR	804470	Symbol	item -> size		802906						
ANR	804471	Symbol	* s		802906						
ANR	804472	Symbol	origpid		802906						
ANR	804473	Symbol	core -> dbg		802906						
ANR	804474	Function	foreachOffset	3866:0:97843:98848							
ANR	804475	FunctionDef	"foreachOffset (RCore * core , const char * _cmd , const char * each)"		804474	0					
ANR	804476	CompoundStatement		3866:75:97918:98848	804474	0					
ANR	804477	IdentifierDeclStatement	char * cmd = strdup ( _cmd ) ;	3867:1:97921:97946	804474	0	True				
ANR	804478	IdentifierDecl	* cmd = strdup ( _cmd )		804474	0					
ANR	804479	IdentifierDeclType	char *		804474	0					
ANR	804480	Identifier	cmd		804474	1					
ANR	804481	AssignmentExpression	* cmd = strdup ( _cmd )		804474	2		=			
ANR	804482	Identifier	cmd		804474	0					
ANR	804483	CallExpression	strdup ( _cmd )		804474	1					
ANR	804484	Callee	strdup		804474	0					
ANR	804485	Identifier	strdup		804474	0					
ANR	804486	ArgumentList	_cmd		804474	1					
ANR	804487	Argument	_cmd		804474	0					
ANR	804488	Identifier	_cmd		804474	0					
ANR	804489	IdentifierDeclStatement	char * nextLine = NULL ;	3868:1:97949:97970	804474	1	True				
ANR	804490	IdentifierDecl	* nextLine = NULL		804474	0					
ANR	804491	IdentifierDeclType	char *		804474	0					
ANR	804492	Identifier	nextLine		804474	1					
ANR	804493	AssignmentExpression	* nextLine = NULL		804474	2		=			
ANR	804494	Identifier	NULL		804474	0					
ANR	804495	Identifier	NULL		804474	1					
ANR	804496	IdentifierDeclStatement	ut64 addr ;	3869:1:97973:97982	804474	2	True				
ANR	804497	IdentifierDecl	addr		804474	0					
ANR	804498	IdentifierDeclType	ut64		804474	0					
ANR	804499	Identifier	addr		804474	1					
ANR	804500	WhileStatement	while ( each )		804474	3					
ANR	804501	Condition	each	3871:8:98021:98024	804474	0	True				
ANR	804502	Identifier	each		804474	0					
ANR	804503	CompoundStatement		16:2:244:274	804474	1					
ANR	804504	WhileStatement	while ( * each == ' ' )		804474	0					
ANR	804505	Condition	* each == ' '	3873:9:98055:98066	804474	0	True				
ANR	804506	EqualityExpression	* each == ' '		804474	0		==			
ANR	804507	UnaryOperationExpression	* each		804474	0					
ANR	804508	UnaryOperator	*		804474	0					
ANR	804509	Identifier	each		804474	1					
ANR	804510	PrimaryExpression	' '		804474	1					
ANR	804511	CompoundStatement		8:23:150:150	804474	1					
ANR	804512	ExpressionStatement	each ++	3874:3:98074:98080	804474	0	True				
ANR	804513	PostIncDecOperationExpression	each ++		804474	0					
ANR	804514	Identifier	each		804474	0					
ANR	804515	IncDec	++		804474	1					
ANR	804516	IfStatement	if ( ! * each )		804474	1					
ANR	804517	Condition	! * each	3877:6:98119:98124	804474	0	True				
ANR	804518	UnaryOperationExpression	! * each		804474	0					
ANR	804519	UnaryOperator	!		804474	0					
ANR	804520	UnaryOperationExpression	* each		804474	1					
ANR	804521	UnaryOperator	*		804474	0					
ANR	804522	Identifier	each		804474	1					
ANR	804523	CompoundStatement		12:14:208:208	804474	1					
ANR	804524	BreakStatement	break ;	3878:3:98132:98137	804474	0	True				
ANR	804525	IdentifierDeclStatement	"char * nl = strchr ( each , '\\n' ) ;"	3881:2:98163:98193	804474	2	True				
ANR	804526	IdentifierDecl	"* nl = strchr ( each , '\\n' )"		804474	0					
ANR	804527	IdentifierDeclType	char *		804474	0					
ANR	804528	Identifier	nl		804474	1					
ANR	804529	AssignmentExpression	"* nl = strchr ( each , '\\n' )"		804474	2		=			
ANR	804530	Identifier	nl		804474	0					
ANR	804531	CallExpression	"strchr ( each , '\\n' )"		804474	1					
ANR	804532	Callee	strchr		804474	0					
ANR	804533	Identifier	strchr		804474	0					
ANR	804534	ArgumentList	each		804474	1					
ANR	804535	Argument	each		804474	0					
ANR	804536	Identifier	each		804474	0					
ANR	804537	Argument	'\\n'		804474	1					
ANR	804538	PrimaryExpression	'\\n'		804474	0					
ANR	804539	IfStatement	if ( nl )		804474	3					
ANR	804540	Condition	nl	3882:6:98201:98202	804474	0	True				
ANR	804541	Identifier	nl		804474	0					
ANR	804542	CompoundStatement		17:10:286:286	804474	1					
ANR	804543	ExpressionStatement	* nl = 0	3883:3:98210:98217	804474	0	True				
ANR	804544	AssignmentExpression	* nl = 0		804474	0		=			
ANR	804545	UnaryOperationExpression	* nl		804474	0					
ANR	804546	UnaryOperator	*		804474	0					
ANR	804547	Identifier	nl		804474	1					
ANR	804548	PrimaryExpression	0		804474	1					
ANR	804549	ExpressionStatement	nextLine = nl + 1	3884:3:98222:98239	804474	1	True				
ANR	804550	AssignmentExpression	nextLine = nl + 1		804474	0		=			
ANR	804551	Identifier	nextLine		804474	0					
ANR	804552	AdditiveExpression	nl + 1		804474	1		+			
ANR	804553	Identifier	nl		804474	0					
ANR	804554	PrimaryExpression	1		804474	1					
ANR	804555	ElseStatement	else		804474	0					
ANR	804556	CompoundStatement		20:9:331:331	804474	0					
ANR	804557	ExpressionStatement	nextLine = NULL	3886:3:98255:98270	804474	0	True				
ANR	804558	AssignmentExpression	nextLine = NULL		804474	0		=			
ANR	804559	Identifier	nextLine		804474	0					
ANR	804560	Identifier	NULL		804474	1					
ANR	804561	ExpressionStatement	"nl = strchr ( each , '#' )"	3889:2:98304:98327	804474	4	True				
ANR	804562	AssignmentExpression	"nl = strchr ( each , '#' )"		804474	0		=			
ANR	804563	Identifier	nl		804474	0					
ANR	804564	CallExpression	"strchr ( each , '#' )"		804474	1					
ANR	804565	Callee	strchr		804474	0					
ANR	804566	Identifier	strchr		804474	0					
ANR	804567	ArgumentList	each		804474	1					
ANR	804568	Argument	each		804474	0					
ANR	804569	Identifier	each		804474	0					
ANR	804570	Argument	'#'		804474	1					
ANR	804571	PrimaryExpression	'#'		804474	0					
ANR	804572	IfStatement	if ( nl )		804474	5					
ANR	804573	Condition	nl	3890:6:98335:98336	804474	0	True				
ANR	804574	Identifier	nl		804474	0					
ANR	804575	CompoundStatement		25:10:420:420	804474	1					
ANR	804576	ExpressionStatement	* nl = 0	3891:3:98344:98351	804474	0	True				
ANR	804577	AssignmentExpression	* nl = 0		804474	0		=			
ANR	804578	UnaryOperationExpression	* nl		804474	0					
ANR	804579	UnaryOperator	*		804474	0					
ANR	804580	Identifier	nl		804474	1					
ANR	804581	PrimaryExpression	0		804474	1					
ANR	804582	WhileStatement	while ( each && * each )		804474	6					
ANR	804583	Condition	each && * each	3894:9:98395:98407	804474	0	True				
ANR	804584	AndExpression	each && * each		804474	0		&&			
ANR	804585	Identifier	each		804474	0					
ANR	804586	UnaryOperationExpression	* each		804474	1					
ANR	804587	UnaryOperator	*		804474	0					
ANR	804588	Identifier	each		804474	1					
ANR	804589	CompoundStatement		34:3:557:587	804474	1					
ANR	804590	WhileStatement	while ( * each == ' ' )		804474	0					
ANR	804591	Condition	* each == ' '	3896:10:98440:98451	804474	0	True				
ANR	804592	EqualityExpression	* each == ' '		804474	0		==			
ANR	804593	UnaryOperationExpression	* each		804474	0					
ANR	804594	UnaryOperator	*		804474	0					
ANR	804595	Identifier	each		804474	1					
ANR	804596	PrimaryExpression	' '		804474	1					
ANR	804597	CompoundStatement		31:24:535:535	804474	1					
ANR	804598	ExpressionStatement	each ++	3897:4:98460:98466	804474	0	True				
ANR	804599	PostIncDecOperationExpression	each ++		804474	0					
ANR	804600	Identifier	each		804474	0					
ANR	804601	IncDec	++		804474	1					
ANR	804602	IdentifierDeclStatement	"char * str = strchr ( each , ' ' ) ;"	3899:3:98476:98506	804474	1	True				
ANR	804603	IdentifierDecl	"* str = strchr ( each , ' ' )"		804474	0					
ANR	804604	IdentifierDeclType	char *		804474	0					
ANR	804605	Identifier	str		804474	1					
ANR	804606	AssignmentExpression	"* str = strchr ( each , ' ' )"		804474	2		=			
ANR	804607	Identifier	str		804474	0					
ANR	804608	CallExpression	"strchr ( each , ' ' )"		804474	1					
ANR	804609	Callee	strchr		804474	0					
ANR	804610	Identifier	strchr		804474	0					
ANR	804611	ArgumentList	each		804474	1					
ANR	804612	Argument	each		804474	0					
ANR	804613	Identifier	each		804474	0					
ANR	804614	Argument	' '		804474	1					
ANR	804615	PrimaryExpression	' '		804474	0					
ANR	804616	IfStatement	if ( str )		804474	2					
ANR	804617	Condition	str	3900:7:98515:98517	804474	0	True				
ANR	804618	Identifier	str		804474	0					
ANR	804619	CompoundStatement		35:12:601:601	804474	1					
ANR	804620	ExpressionStatement	* str = '\\0'	3901:4:98526:98537	804474	0	True				
ANR	804621	AssignmentExpression	* str = '\\0'		804474	0		=			
ANR	804622	UnaryOperationExpression	* str		804474	0					
ANR	804623	UnaryOperator	*		804474	0					
ANR	804624	Identifier	str		804474	1					
ANR	804625	PrimaryExpression	'\\0'		804474	1					
ANR	804626	ExpressionStatement	"addr = r_num_math ( core -> num , each )"	3902:4:98543:98578	804474	1	True				
ANR	804627	AssignmentExpression	"addr = r_num_math ( core -> num , each )"		804474	0		=			
ANR	804628	Identifier	addr		804474	0					
ANR	804629	CallExpression	"r_num_math ( core -> num , each )"		804474	1					
ANR	804630	Callee	r_num_math		804474	0					
ANR	804631	Identifier	r_num_math		804474	0					
ANR	804632	ArgumentList	core -> num		804474	1					
ANR	804633	Argument	core -> num		804474	0					
ANR	804634	PtrMemberAccess	core -> num		804474	0					
ANR	804635	Identifier	core		804474	0					
ANR	804636	Identifier	num		804474	1					
ANR	804637	Argument	each		804474	1					
ANR	804638	Identifier	each		804474	0					
ANR	804639	ExpressionStatement	* str = ' '	3903:4:98584:98594	804474	2	True				
ANR	804640	AssignmentExpression	* str = ' '		804474	0		=			
ANR	804641	UnaryOperationExpression	* str		804474	0					
ANR	804642	UnaryOperator	*		804474	0					
ANR	804643	Identifier	str		804474	1					
ANR	804644	PrimaryExpression	' '		804474	1					
ANR	804645	ExpressionStatement	each = str + 1	3904:4:98600:98614	804474	3	True				
ANR	804646	AssignmentExpression	each = str + 1		804474	0		=			
ANR	804647	Identifier	each		804474	0					
ANR	804648	AdditiveExpression	str + 1		804474	1		+			
ANR	804649	Identifier	str		804474	0					
ANR	804650	PrimaryExpression	1		804474	1					
ANR	804651	ElseStatement	else		804474	0					
ANR	804652	CompoundStatement		40:10:707:707	804474	0					
ANR	804653	IfStatement	if ( ! * each )		804474	0					
ANR	804654	Condition	! * each	3906:8:98636:98641	804474	0	True				
ANR	804655	UnaryOperationExpression	! * each		804474	0					
ANR	804656	UnaryOperator	!		804474	0					
ANR	804657	UnaryOperationExpression	* each		804474	1					
ANR	804658	UnaryOperator	*		804474	0					
ANR	804659	Identifier	each		804474	1					
ANR	804660	CompoundStatement		41:16:725:725	804474	1					
ANR	804661	BreakStatement	break ;	3907:5:98651:98656	804474	0	True				
ANR	804662	ExpressionStatement	"addr = r_num_math ( core -> num , each )"	3909:4:98668:98703	804474	1	True				
ANR	804663	AssignmentExpression	"addr = r_num_math ( core -> num , each )"		804474	0		=			
ANR	804664	Identifier	addr		804474	0					
ANR	804665	CallExpression	"r_num_math ( core -> num , each )"		804474	1					
ANR	804666	Callee	r_num_math		804474	0					
ANR	804667	Identifier	r_num_math		804474	0					
ANR	804668	ArgumentList	core -> num		804474	1					
ANR	804669	Argument	core -> num		804474	0					
ANR	804670	PtrMemberAccess	core -> num		804474	0					
ANR	804671	Identifier	core		804474	0					
ANR	804672	Identifier	num		804474	1					
ANR	804673	Argument	each		804474	1					
ANR	804674	Identifier	each		804474	0					
ANR	804675	ExpressionStatement	each = NULL	3910:4:98709:98720	804474	2	True				
ANR	804676	AssignmentExpression	each = NULL		804474	0		=			
ANR	804677	Identifier	each		804474	0					
ANR	804678	Identifier	NULL		804474	1					
ANR	804679	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	3912:3:98730:98757	804474	3	True				
ANR	804680	CallExpression	"r_core_seek ( core , addr , 1 )"		804474	0					
ANR	804681	Callee	r_core_seek		804474	0					
ANR	804682	Identifier	r_core_seek		804474	0					
ANR	804683	ArgumentList	core		804474	1					
ANR	804684	Argument	core		804474	0					
ANR	804685	Identifier	core		804474	0					
ANR	804686	Argument	addr		804474	1					
ANR	804687	Identifier	addr		804474	0					
ANR	804688	Argument	1		804474	2					
ANR	804689	PrimaryExpression	1		804474	0					
ANR	804690	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	3913:3:98762:98787	804474	4	True				
ANR	804691	CallExpression	"r_core_cmd ( core , cmd , 0 )"		804474	0					
ANR	804692	Callee	r_core_cmd		804474	0					
ANR	804693	Identifier	r_core_cmd		804474	0					
ANR	804694	ArgumentList	core		804474	1					
ANR	804695	Argument	core		804474	0					
ANR	804696	Identifier	core		804474	0					
ANR	804697	Argument	cmd		804474	1					
ANR	804698	Identifier	cmd		804474	0					
ANR	804699	Argument	0		804474	2					
ANR	804700	PrimaryExpression	0		804474	0					
ANR	804701	ExpressionStatement	r_cons_flush ( )	3914:3:98792:98807	804474	5	True				
ANR	804702	CallExpression	r_cons_flush ( )		804474	0					
ANR	804703	Callee	r_cons_flush		804474	0					
ANR	804704	Identifier	r_cons_flush		804474	0					
ANR	804705	ArgumentList			804474	1					
ANR	804706	ExpressionStatement	each = nextLine	3916:2:98815:98830	804474	7	True				
ANR	804707	AssignmentExpression	each = nextLine		804474	0		=			
ANR	804708	Identifier	each		804474	0					
ANR	804709	Identifier	nextLine		804474	1					
ANR	804710	ExpressionStatement	free ( cmd )	3918:1:98836:98846	804474	4	True				
ANR	804711	CallExpression	free ( cmd )		804474	0					
ANR	804712	Callee	free		804474	0					
ANR	804713	Identifier	free		804474	0					
ANR	804714	ArgumentList	cmd		804474	1					
ANR	804715	Argument	cmd		804474	0					
ANR	804716	Identifier	cmd		804474	0					
ANR	804717	ReturnType	static void		804474	1					
ANR	804718	Identifier	foreachOffset		804474	2					
ANR	804719	ParameterList	"RCore * core , const char * _cmd , const char * each"		804474	3					
ANR	804720	Parameter	RCore * core	3866:26:97869:97879	804474	0	True				
ANR	804721	ParameterType	RCore *		804474	0					
ANR	804722	Identifier	core		804474	1					
ANR	804723	Parameter	const char * _cmd	3866:39:97882:97897	804474	1	True				
ANR	804724	ParameterType	const char *		804474	0					
ANR	804725	Identifier	_cmd		804474	1					
ANR	804726	Parameter	const char * each	3866:57:97900:97915	804474	2	True				
ANR	804727	ParameterType	const char *		804474	0					
ANR	804728	Identifier	each		804474	1					
ANR	804729	CFGEntryNode	ENTRY		804474		True				
ANR	804730	CFGExitNode	EXIT		804474		True				
ANR	804731	Symbol	NULL		804474						
ANR	804732	Symbol	nextLine		804474						
ANR	804733	Symbol	* nl		804474						
ANR	804734	Symbol	* core		804474						
ANR	804735	Symbol	strchr		804474						
ANR	804736	Symbol	* each		804474						
ANR	804737	Symbol	each		804474						
ANR	804738	Symbol	r_num_math		804474						
ANR	804739	Symbol	str		804474						
ANR	804740	Symbol	core		804474						
ANR	804741	Symbol	_cmd		804474						
ANR	804742	Symbol	cmd		804474						
ANR	804743	Symbol	strdup		804474						
ANR	804744	Symbol	* str		804474						
ANR	804745	Symbol	addr		804474						
ANR	804746	Symbol	core -> num		804474						
ANR	804747	Symbol	nl		804474						
ANR	804748	ClassDef	duplicate_flag_t	3921:0:98851:98909							
ANR	804749	DeclStmt									
ANR	804750	Decl							RList	RList *	ret
ANR	804751	DeclStmt									
ANR	804752	Decl							const char	const char *	word
ANR	804753	Function	duplicate_flag	3926:0:98913:99260							
ANR	804754	FunctionDef	"duplicate_flag (RFlagItem * flag , void * u)"		804753	0					
ANR	804755	CompoundStatement		3926:53:98966:99260	804753	0					
ANR	804756	IdentifierDeclStatement	struct duplicate_flag_t * user = ( struct duplicate_flag_t * ) u ;	3927:1:98969:99029	804753	0	True				
ANR	804757	IdentifierDecl	* user = ( struct duplicate_flag_t * ) u		804753	0					
ANR	804758	IdentifierDeclType	struct duplicate_flag_t *		804753	0					
ANR	804759	Identifier	user		804753	1					
ANR	804760	AssignmentExpression	* user = ( struct duplicate_flag_t * ) u		804753	2		=			
ANR	804761	Identifier	user		804753	0					
ANR	804762	CastExpression	( struct duplicate_flag_t * ) u		804753	1					
ANR	804763	CastTarget	struct duplicate_flag_t *		804753	0					
ANR	804764	Identifier	u		804753	1					
ANR	804765	IfStatement	"if ( r_str_glob ( flag -> name , user -> word ) )"		804753	1					
ANR	804766	Condition	"r_str_glob ( flag -> name , user -> word )"	3929:5:99066:99100	804753	0	True				
ANR	804767	CallExpression	"r_str_glob ( flag -> name , user -> word )"		804753	0					
ANR	804768	Callee	r_str_glob		804753	0					
ANR	804769	Identifier	r_str_glob		804753	0					
ANR	804770	ArgumentList	flag -> name		804753	1					
ANR	804771	Argument	flag -> name		804753	0					
ANR	804772	PtrMemberAccess	flag -> name		804753	0					
ANR	804773	Identifier	flag		804753	0					
ANR	804774	Identifier	name		804753	1					
ANR	804775	Argument	user -> word		804753	1					
ANR	804776	PtrMemberAccess	user -> word		804753	0					
ANR	804777	Identifier	user		804753	0					
ANR	804778	Identifier	word		804753	1					
ANR	804779	CompoundStatement		5:2:140:189	804753	1					
ANR	804780	IdentifierDeclStatement	RFlagItem * cloned_item = r_flag_item_clone ( flag ) ;	3930:2:99107:99156	804753	0	True				
ANR	804781	IdentifierDecl	* cloned_item = r_flag_item_clone ( flag )		804753	0					
ANR	804782	IdentifierDeclType	RFlagItem *		804753	0					
ANR	804783	Identifier	cloned_item		804753	1					
ANR	804784	AssignmentExpression	* cloned_item = r_flag_item_clone ( flag )		804753	2		=			
ANR	804785	Identifier	cloned_item		804753	0					
ANR	804786	CallExpression	r_flag_item_clone ( flag )		804753	1					
ANR	804787	Callee	r_flag_item_clone		804753	0					
ANR	804788	Identifier	r_flag_item_clone		804753	0					
ANR	804789	ArgumentList	flag		804753	1					
ANR	804790	Argument	flag		804753	0					
ANR	804791	Identifier	flag		804753	0					
ANR	804792	IfStatement	if ( ! cloned_item )		804753	1					
ANR	804793	Condition	! cloned_item	3931:6:99164:99175	804753	0	True				
ANR	804794	UnaryOperationExpression	! cloned_item		804753	0					
ANR	804795	UnaryOperator	!		804753	0					
ANR	804796	Identifier	cloned_item		804753	1					
ANR	804797	CompoundStatement		6:20:211:211	804753	1					
ANR	804798	ReturnStatement	return false ;	3932:3:99183:99195	804753	0	True				
ANR	804799	Identifier	false		804753	0					
ANR	804800	ExpressionStatement	"r_list_append ( user -> ret , cloned_item )"	3934:2:99203:99241	804753	2	True				
ANR	804801	CallExpression	"r_list_append ( user -> ret , cloned_item )"		804753	0					
ANR	804802	Callee	r_list_append		804753	0					
ANR	804803	Identifier	r_list_append		804753	0					
ANR	804804	ArgumentList	user -> ret		804753	1					
ANR	804805	Argument	user -> ret		804753	0					
ANR	804806	PtrMemberAccess	user -> ret		804753	0					
ANR	804807	Identifier	user		804753	0					
ANR	804808	Identifier	ret		804753	1					
ANR	804809	Argument	cloned_item		804753	1					
ANR	804810	Identifier	cloned_item		804753	0					
ANR	804811	ReturnStatement	return true ;	3936:1:99247:99258	804753	2	True				
ANR	804812	Identifier	true		804753	0					
ANR	804813	ReturnType	static bool		804753	1					
ANR	804814	Identifier	duplicate_flag		804753	2					
ANR	804815	ParameterList	"RFlagItem * flag , void * u"		804753	3					
ANR	804816	Parameter	RFlagItem * flag	3926:27:98940:98954	804753	0	True				
ANR	804817	ParameterType	RFlagItem *		804753	0					
ANR	804818	Identifier	flag		804753	1					
ANR	804819	Parameter	void * u	3926:44:98957:98963	804753	1	True				
ANR	804820	ParameterType	void *		804753	0					
ANR	804821	Identifier	u		804753	1					
ANR	804822	CFGEntryNode	ENTRY		804753		True				
ANR	804823	CFGExitNode	EXIT		804753		True				
ANR	804824	Symbol	user -> word		804753						
ANR	804825	Symbol	flag		804753						
ANR	804826	Symbol	* user		804753						
ANR	804827	Symbol	flag -> name		804753						
ANR	804828	Symbol	false		804753						
ANR	804829	Symbol	cloned_item		804753						
ANR	804830	Symbol	user -> ret		804753						
ANR	804831	Symbol	r_str_glob		804753						
ANR	804832	Symbol	u		804753						
ANR	804833	Symbol	r_flag_item_clone		804753						
ANR	804834	Symbol	true		804753						
ANR	804835	Symbol	* flag		804753						
ANR	804836	Symbol	user		804753						
ANR	804837	Function	r_core_cmd_foreach	3939:0:99263:107464							
ANR	804838	FunctionDef	"r_core_cmd_foreach (RCore * core , const char * cmd , char * each)"		804837	0					
ANR	804839	CompoundStatement		3939:71:99334:107464	804837	0					
ANR	804840	IdentifierDeclStatement	"int i , j ;"	3940:1:99337:99345	804837	0	True				
ANR	804841	IdentifierDecl	i		804837	0					
ANR	804842	IdentifierDeclType	int		804837	0					
ANR	804843	Identifier	i		804837	1					
ANR	804844	IdentifierDecl	j		804837	1					
ANR	804845	IdentifierDeclType	int		804837	0					
ANR	804846	Identifier	j		804837	1					
ANR	804847	IdentifierDeclStatement	char ch ;	3941:1:99348:99355	804837	1	True				
ANR	804848	IdentifierDecl	ch		804837	0					
ANR	804849	IdentifierDeclType	char		804837	0					
ANR	804850	Identifier	ch		804837	1					
ANR	804851	IdentifierDeclStatement	char * word = NULL ;	3942:1:99358:99375	804837	2	True				
ANR	804852	IdentifierDecl	* word = NULL		804837	0					
ANR	804853	IdentifierDeclType	char *		804837	0					
ANR	804854	Identifier	word		804837	1					
ANR	804855	AssignmentExpression	* word = NULL		804837	2		=			
ANR	804856	Identifier	NULL		804837	0					
ANR	804857	Identifier	NULL		804837	1					
ANR	804858	IdentifierDeclStatement	"char * str , * ostr = NULL ;"	3943:1:99378:99401	804837	3	True				
ANR	804859	IdentifierDecl	* str		804837	0					
ANR	804860	IdentifierDeclType	char *		804837	0					
ANR	804861	Identifier	str		804837	1					
ANR	804862	IdentifierDecl	* ostr = NULL		804837	1					
ANR	804863	IdentifierDeclType	char *		804837	0					
ANR	804864	Identifier	ostr		804837	1					
ANR	804865	AssignmentExpression	* ostr = NULL		804837	2		=			
ANR	804866	Identifier	NULL		804837	0					
ANR	804867	Identifier	NULL		804837	1					
ANR	804868	IdentifierDeclStatement	RListIter * iter ;	3944:1:99404:99419	804837	4	True				
ANR	804869	IdentifierDecl	* iter		804837	0					
ANR	804870	IdentifierDeclType	RListIter *		804837	0					
ANR	804871	Identifier	iter		804837	1					
ANR	804872	IdentifierDeclStatement	RFlagItem * flag ;	3945:1:99422:99437	804837	5	True				
ANR	804873	IdentifierDecl	* flag		804837	0					
ANR	804874	IdentifierDeclType	RFlagItem *		804837	0					
ANR	804875	Identifier	flag		804837	1					
ANR	804876	IdentifierDeclStatement	"ut64 oseek , addr ;"	3946:1:99440:99456	804837	6	True				
ANR	804877	IdentifierDecl	oseek		804837	0					
ANR	804878	IdentifierDeclType	ut64		804837	0					
ANR	804879	Identifier	oseek		804837	1					
ANR	804880	IdentifierDecl	addr		804837	1					
ANR	804881	IdentifierDeclType	ut64		804837	0					
ANR	804882	Identifier	addr		804837	1					
ANR	804883	ForStatement	for ( ; * cmd == ' ' ; cmd ++ )		804837	7					
ANR	804884	Condition	* cmd == ' '	3948:8:99467:99477	804837	0	True				
ANR	804885	EqualityExpression	* cmd == ' '		804837	0		==			
ANR	804886	UnaryOperationExpression	* cmd		804837	0					
ANR	804887	UnaryOperator	*		804837	0					
ANR	804888	Identifier	cmd		804837	1					
ANR	804889	PrimaryExpression	' '		804837	1					
ANR	804890	PostIncDecOperationExpression	cmd ++	3948:21:99480:99484	804837	1	True				
ANR	804891	Identifier	cmd		804837	0					
ANR	804892	IncDec	++		804837	1					
ANR	804893	CompoundStatement		10:28:152:152	804837	2					
ANR	804894	ExpressionStatement		3949:2:99491:99491	804837	0	True				
ANR	804895	ExpressionStatement	oseek = core -> offset	3952:1:99498:99518	804837	8	True				
ANR	804896	AssignmentExpression	oseek = core -> offset		804837	0		=			
ANR	804897	Identifier	oseek		804837	0					
ANR	804898	PtrMemberAccess	core -> offset		804837	1					
ANR	804899	Identifier	core		804837	0					
ANR	804900	Identifier	offset		804837	1					
ANR	804901	ExpressionStatement	ostr = str = strdup ( each )	3953:1:99521:99547	804837	9	True				
ANR	804902	AssignmentExpression	ostr = str = strdup ( each )		804837	0		=			
ANR	804903	Identifier	ostr		804837	0					
ANR	804904	AssignmentExpression	str = strdup ( each )		804837	1		=			
ANR	804905	Identifier	str		804837	0					
ANR	804906	CallExpression	strdup ( each )		804837	1					
ANR	804907	Callee	strdup		804837	0					
ANR	804908	Identifier	strdup		804837	0					
ANR	804909	ArgumentList	each		804837	1					
ANR	804910	Argument	each		804837	0					
ANR	804911	Identifier	each		804837	0					
ANR	804912	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	3954:1:99550:99580	804837	10	True				
ANR	804913	CallExpression	"r_cons_break_push ( NULL , NULL )"		804837	0					
ANR	804914	Callee	r_cons_break_push		804837	0					
ANR	804915	Identifier	r_cons_break_push		804837	0					
ANR	804916	ArgumentList	NULL		804837	1					
ANR	804917	Argument	NULL		804837	0					
ANR	804918	Identifier	NULL		804837	0					
ANR	804919	Argument	NULL		804837	1					
ANR	804920	Identifier	NULL		804837	0					
ANR	804921	SwitchStatement	switch ( each [ 0 ] )		804837	11					
ANR	804922	Condition	each [ 0 ]	3955:9:99607:99613	804837	0	True				
ANR	804923	ArrayIndexing	each [ 0 ]		804837	0					
ANR	804924	Identifier	each		804837	0					
ANR	804925	PrimaryExpression	0		804837	1					
ANR	804926	CompoundStatement		17:18:281:281	804837	1					
ANR	804927	Label	case '/' :	3956:1:99619:99627	804837	0	True				
ANR	804928	CompoundStatement		20:2:309:371	804837	1					
ANR	804929	IdentifierDeclStatement	"char * cmdhit = strdup ( r_config_get ( core -> config , ""cmd.hit"" ) ) ;"	3958:2:99644:99706	804837	0	True				
ANR	804930	IdentifierDecl	"* cmdhit = strdup ( r_config_get ( core -> config , ""cmd.hit"" ) )"		804837	0					
ANR	804931	IdentifierDeclType	char *		804837	0					
ANR	804932	Identifier	cmdhit		804837	1					
ANR	804933	AssignmentExpression	"* cmdhit = strdup ( r_config_get ( core -> config , ""cmd.hit"" ) )"		804837	2		=			
ANR	804934	Identifier	cmdhit		804837	0					
ANR	804935	CallExpression	"strdup ( r_config_get ( core -> config , ""cmd.hit"" ) )"		804837	1					
ANR	804936	Callee	strdup		804837	0					
ANR	804937	Identifier	strdup		804837	0					
ANR	804938	ArgumentList	"r_config_get ( core -> config , ""cmd.hit"" )"		804837	1					
ANR	804939	Argument	"r_config_get ( core -> config , ""cmd.hit"" )"		804837	0					
ANR	804940	CallExpression	"r_config_get ( core -> config , ""cmd.hit"" )"		804837	0					
ANR	804941	Callee	r_config_get		804837	0					
ANR	804942	Identifier	r_config_get		804837	0					
ANR	804943	ArgumentList	core -> config		804837	1					
ANR	804944	Argument	core -> config		804837	0					
ANR	804945	PtrMemberAccess	core -> config		804837	0					
ANR	804946	Identifier	core		804837	0					
ANR	804947	Identifier	config		804837	1					
ANR	804948	Argument	"""cmd.hit"""		804837	1					
ANR	804949	PrimaryExpression	"""cmd.hit"""		804837	0					
ANR	804950	ExpressionStatement	"r_config_set ( core -> config , ""cmd.hit"" , cmd )"	3959:2:99710:99753	804837	1	True				
ANR	804951	CallExpression	"r_config_set ( core -> config , ""cmd.hit"" , cmd )"		804837	0					
ANR	804952	Callee	r_config_set		804837	0					
ANR	804953	Identifier	r_config_set		804837	0					
ANR	804954	ArgumentList	core -> config		804837	1					
ANR	804955	Argument	core -> config		804837	0					
ANR	804956	PtrMemberAccess	core -> config		804837	0					
ANR	804957	Identifier	core		804837	0					
ANR	804958	Identifier	config		804837	1					
ANR	804959	Argument	"""cmd.hit"""		804837	1					
ANR	804960	PrimaryExpression	"""cmd.hit"""		804837	0					
ANR	804961	Argument	cmd		804837	2					
ANR	804962	Identifier	cmd		804837	0					
ANR	804963	ExpressionStatement	"r_core_cmd0 ( core , each )"	3960:2:99757:99781	804837	2	True				
ANR	804964	CallExpression	"r_core_cmd0 ( core , each )"		804837	0					
ANR	804965	Callee	r_core_cmd0		804837	0					
ANR	804966	Identifier	r_core_cmd0		804837	0					
ANR	804967	ArgumentList	core		804837	1					
ANR	804968	Argument	core		804837	0					
ANR	804969	Identifier	core		804837	0					
ANR	804970	Argument	each		804837	1					
ANR	804971	Identifier	each		804837	0					
ANR	804972	ExpressionStatement	"r_config_set ( core -> config , ""cmd.hit"" , cmdhit )"	3961:2:99785:99831	804837	3	True				
ANR	804973	CallExpression	"r_config_set ( core -> config , ""cmd.hit"" , cmdhit )"		804837	0					
ANR	804974	Callee	r_config_set		804837	0					
ANR	804975	Identifier	r_config_set		804837	0					
ANR	804976	ArgumentList	core -> config		804837	1					
ANR	804977	Argument	core -> config		804837	0					
ANR	804978	PtrMemberAccess	core -> config		804837	0					
ANR	804979	Identifier	core		804837	0					
ANR	804980	Identifier	config		804837	1					
ANR	804981	Argument	"""cmd.hit"""		804837	1					
ANR	804982	PrimaryExpression	"""cmd.hit"""		804837	0					
ANR	804983	Argument	cmdhit		804837	2					
ANR	804984	Identifier	cmdhit		804837	0					
ANR	804985	ExpressionStatement	free ( cmdhit )	3962:2:99835:99848	804837	4	True				
ANR	804986	CallExpression	free ( cmdhit )		804837	0					
ANR	804987	Callee	free		804837	0					
ANR	804988	Identifier	free		804837	0					
ANR	804989	ArgumentList	cmdhit		804837	1					
ANR	804990	Argument	cmdhit		804837	0					
ANR	804991	Identifier	cmdhit		804837	0					
ANR	804992	ExpressionStatement	free ( ostr )	3964:2:99856:99867	804837	2	True				
ANR	804993	CallExpression	free ( ostr )		804837	0					
ANR	804994	Callee	free		804837	0					
ANR	804995	Identifier	free		804837	0					
ANR	804996	ArgumentList	ostr		804837	1					
ANR	804997	Argument	ostr		804837	0					
ANR	804998	Identifier	ostr		804837	0					
ANR	804999	ReturnStatement	return 0 ;	3965:2:99871:99879	804837	3	True				
ANR	805000	PrimaryExpression	0		804837	0					
ANR	805001	Label	case '?' :	3966:1:99882:99890	804837	4	True				
ANR	805002	ExpressionStatement	"r_core_cmd_help ( core , help_msg_at_at )"	3967:2:99903:99941	804837	5	True				
ANR	805003	CallExpression	"r_core_cmd_help ( core , help_msg_at_at )"		804837	0					
ANR	805004	Callee	r_core_cmd_help		804837	0					
ANR	805005	Identifier	r_core_cmd_help		804837	0					
ANR	805006	ArgumentList	core		804837	1					
ANR	805007	Argument	core		804837	0					
ANR	805008	Identifier	core		804837	0					
ANR	805009	Argument	help_msg_at_at		804837	1					
ANR	805010	Identifier	help_msg_at_at		804837	0					
ANR	805011	BreakStatement	break ;	3968:2:99945:99950	804837	6	True				
ANR	805012	Label	case 'b' :	3969:1:99953:99961	804837	7	True				
ANR	805013	CompoundStatement		36:3:780:804	804837	8					
ANR	805014	IdentifierDeclStatement	RListIter * iter ;	3971:3:100003:100018	804837	0	True				
ANR	805015	IdentifierDecl	* iter		804837	0					
ANR	805016	IdentifierDeclType	RListIter *		804837	0					
ANR	805017	Identifier	iter		804837	1					
ANR	805018	IdentifierDeclStatement	RAnalBlock * bb ;	3972:3:100023:100037	804837	1	True				
ANR	805019	IdentifierDecl	* bb		804837	0					
ANR	805020	IdentifierDeclType	RAnalBlock *		804837	0					
ANR	805021	Identifier	bb		804837	1					
ANR	805022	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 ) ;"	3973:3:100042:100110	804837	2	True				
ANR	805023	IdentifierDecl	"* fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		804837	0					
ANR	805024	IdentifierDeclType	RAnalFunction *		804837	0					
ANR	805025	Identifier	fcn		804837	1					
ANR	805026	AssignmentExpression	"* fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		804837	2		=			
ANR	805027	Identifier	fcn		804837	0					
ANR	805028	CallExpression	"r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		804837	1					
ANR	805029	Callee	r_anal_get_fcn_at		804837	0					
ANR	805030	Identifier	r_anal_get_fcn_at		804837	0					
ANR	805031	ArgumentList	core -> anal		804837	1					
ANR	805032	Argument	core -> anal		804837	0					
ANR	805033	PtrMemberAccess	core -> anal		804837	0					
ANR	805034	Identifier	core		804837	0					
ANR	805035	Identifier	anal		804837	1					
ANR	805036	Argument	core -> offset		804837	1					
ANR	805037	PtrMemberAccess	core -> offset		804837	0					
ANR	805038	Identifier	core		804837	0					
ANR	805039	Identifier	offset		804837	1					
ANR	805040	Argument	0		804837	2					
ANR	805041	PrimaryExpression	0		804837	0					
ANR	805042	IdentifierDeclStatement	int bs = core -> blocksize ;	3974:3:100115:100139	804837	3	True				
ANR	805043	IdentifierDecl	bs = core -> blocksize		804837	0					
ANR	805044	IdentifierDeclType	int		804837	0					
ANR	805045	Identifier	bs		804837	1					
ANR	805046	AssignmentExpression	bs = core -> blocksize		804837	2		=			
ANR	805047	Identifier	bs		804837	0					
ANR	805048	PtrMemberAccess	core -> blocksize		804837	1					
ANR	805049	Identifier	core		804837	0					
ANR	805050	Identifier	blocksize		804837	1					
ANR	805051	IfStatement	if ( fcn )		804837	4					
ANR	805052	Condition	fcn	3975:7:100148:100150	804837	0	True				
ANR	805053	Identifier	fcn		804837	0					
ANR	805054	CompoundStatement		37:12:818:818	804837	1					
ANR	805055	ExpressionStatement	"r_list_sort ( fcn -> bbs , bb_cmp )"	3976:4:100159:100189	804837	0	True				
ANR	805056	CallExpression	"r_list_sort ( fcn -> bbs , bb_cmp )"		804837	0					
ANR	805057	Callee	r_list_sort		804837	0					
ANR	805058	Identifier	r_list_sort		804837	0					
ANR	805059	ArgumentList	fcn -> bbs		804837	1					
ANR	805060	Argument	fcn -> bbs		804837	0					
ANR	805061	PtrMemberAccess	fcn -> bbs		804837	0					
ANR	805062	Identifier	fcn		804837	0					
ANR	805063	Identifier	bbs		804837	1					
ANR	805064	Argument	bb_cmp		804837	1					
ANR	805065	Identifier	bb_cmp		804837	0					
ANR	805066	Statement	r_list_foreach	3977:4:100195:100208	804837	1	True				
ANR	805067	Statement	(	3977:19:100210:100210	804837	2	True				
ANR	805068	Statement	fcn	3977:20:100211:100213	804837	3	True				
ANR	805069	Statement	->	3977:23:100214:100215	804837	4	True				
ANR	805070	Statement	bbs	3977:25:100216:100218	804837	5	True				
ANR	805071	Statement	","	3977:28:100219:100219	804837	6	True				
ANR	805072	Statement	iter	3977:30:100221:100224	804837	7	True				
ANR	805073	Statement	","	3977:34:100225:100225	804837	8	True				
ANR	805074	Statement	bb	3977:36:100227:100228	804837	9	True				
ANR	805075	Statement	)	3977:38:100229:100229	804837	10	True				
ANR	805076	CompoundStatement		39:40:896:896	804837	11					
ANR	805077	ExpressionStatement	"r_core_block_size ( core , bb -> size )"	3978:5:100238:100272	804837	0	True				
ANR	805078	CallExpression	"r_core_block_size ( core , bb -> size )"		804837	0					
ANR	805079	Callee	r_core_block_size		804837	0					
ANR	805080	Identifier	r_core_block_size		804837	0					
ANR	805081	ArgumentList	core		804837	1					
ANR	805082	Argument	core		804837	0					
ANR	805083	Identifier	core		804837	0					
ANR	805084	Argument	bb -> size		804837	1					
ANR	805085	PtrMemberAccess	bb -> size		804837	0					
ANR	805086	Identifier	bb		804837	0					
ANR	805087	Identifier	size		804837	1					
ANR	805088	ExpressionStatement	"r_core_seek ( core , bb -> addr , 1 )"	3979:5:100279:100310	804837	1	True				
ANR	805089	CallExpression	"r_core_seek ( core , bb -> addr , 1 )"		804837	0					
ANR	805090	Callee	r_core_seek		804837	0					
ANR	805091	Identifier	r_core_seek		804837	0					
ANR	805092	ArgumentList	core		804837	1					
ANR	805093	Argument	core		804837	0					
ANR	805094	Identifier	core		804837	0					
ANR	805095	Argument	bb -> addr		804837	1					
ANR	805096	PtrMemberAccess	bb -> addr		804837	0					
ANR	805097	Identifier	bb		804837	0					
ANR	805098	Identifier	addr		804837	1					
ANR	805099	Argument	1		804837	2					
ANR	805100	PrimaryExpression	1		804837	0					
ANR	805101	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	3980:5:100317:100342	804837	2	True				
ANR	805102	CallExpression	"r_core_cmd ( core , cmd , 0 )"		804837	0					
ANR	805103	Callee	r_core_cmd		804837	0					
ANR	805104	Identifier	r_core_cmd		804837	0					
ANR	805105	ArgumentList	core		804837	1					
ANR	805106	Argument	core		804837	0					
ANR	805107	Identifier	core		804837	0					
ANR	805108	Argument	cmd		804837	1					
ANR	805109	Identifier	cmd		804837	0					
ANR	805110	Argument	0		804837	2					
ANR	805111	PrimaryExpression	0		804837	0					
ANR	805112	IfStatement	if ( r_cons_is_breaked ( ) )		804837	3					
ANR	805113	Condition	r_cons_is_breaked ( )	3981:9:100353:100372	804837	0	True				
ANR	805114	CallExpression	r_cons_is_breaked ( )		804837	0					
ANR	805115	Callee	r_cons_is_breaked		804837	0					
ANR	805116	Identifier	r_cons_is_breaked		804837	0					
ANR	805117	ArgumentList			804837	1					
ANR	805118	CompoundStatement		43:31:1040:1040	804837	1					
ANR	805119	BreakStatement	break ;	3982:6:100383:100388	804837	0	True				
ANR	805120	ExpressionStatement	"r_core_block_size ( core , bs )"	3986:3:100411:100439	804837	5	True				
ANR	805121	CallExpression	"r_core_block_size ( core , bs )"		804837	0					
ANR	805122	Callee	r_core_block_size		804837	0					
ANR	805123	Identifier	r_core_block_size		804837	0					
ANR	805124	ArgumentList	core		804837	1					
ANR	805125	Argument	core		804837	0					
ANR	805126	Identifier	core		804837	0					
ANR	805127	Argument	bs		804837	1					
ANR	805128	Identifier	bs		804837	0					
ANR	805129	GotoStatement	goto out_finish ;	3987:3:100444:100459	804837	6	True				
ANR	805130	Identifier	out_finish		804837	0					
ANR	805131	BreakStatement	break ;	3989:2:100467:100472	804837	9	True				
ANR	805132	Label	case 's' :	3990:1:100475:100483	804837	10	True				
ANR	805133	CompoundStatement		58:3:1255:1289	804837	11					
ANR	805134	IdentifierDeclStatement	char * str = each + 1 ;	3992:3:100512:100532	804837	0	True				
ANR	805135	IdentifierDecl	* str = each + 1		804837	0					
ANR	805136	IdentifierDeclType	char *		804837	0					
ANR	805137	Identifier	str		804837	1					
ANR	805138	AssignmentExpression	* str = each + 1		804837	2		=			
ANR	805139	Identifier	str		804837	0					
ANR	805140	AdditiveExpression	each + 1		804837	1		+			
ANR	805141	Identifier	each		804837	0					
ANR	805142	PrimaryExpression	1		804837	1					
ANR	805143	IfStatement	if ( * str == ':' || * str == ' ' )		804837	1					
ANR	805144	Condition	* str == ':' || * str == ' '	3993:7:100541:100566	804837	0	True				
ANR	805145	OrExpression	* str == ':' || * str == ' '		804837	0		||			
ANR	805146	EqualityExpression	* str == ':'		804837	0		==			
ANR	805147	UnaryOperationExpression	* str		804837	0					
ANR	805148	UnaryOperator	*		804837	0					
ANR	805149	Identifier	str		804837	1					
ANR	805150	PrimaryExpression	':'		804837	1					
ANR	805151	EqualityExpression	* str == ' '		804837	1		==			
ANR	805152	UnaryOperationExpression	* str		804837	0					
ANR	805153	UnaryOperator	*		804837	0					
ANR	805154	Identifier	str		804837	1					
ANR	805155	PrimaryExpression	' '		804837	1					
ANR	805156	CompoundStatement		55:35:1234:1234	804837	1					
ANR	805157	ExpressionStatement	str ++	3994:4:100575:100580	804837	0	True				
ANR	805158	PostIncDecOperationExpression	str ++		804837	0					
ANR	805159	Identifier	str		804837	0					
ANR	805160	IncDec	++		804837	1					
ANR	805161	IdentifierDeclStatement	"int count = r_str_split ( str , ' ' ) ;"	3996:3:100590:100624	804837	2	True				
ANR	805162	IdentifierDecl	"count = r_str_split ( str , ' ' )"		804837	0					
ANR	805163	IdentifierDeclType	int		804837	0					
ANR	805164	Identifier	count		804837	1					
ANR	805165	AssignmentExpression	"count = r_str_split ( str , ' ' )"		804837	2		=			
ANR	805166	Identifier	count		804837	0					
ANR	805167	CallExpression	"r_str_split ( str , ' ' )"		804837	1					
ANR	805168	Callee	r_str_split		804837	0					
ANR	805169	Identifier	r_str_split		804837	0					
ANR	805170	ArgumentList	str		804837	1					
ANR	805171	Argument	str		804837	0					
ANR	805172	Identifier	str		804837	0					
ANR	805173	Argument	' '		804837	1					
ANR	805174	PrimaryExpression	' '		804837	0					
ANR	805175	IfStatement	if ( count == 3 )		804837	3					
ANR	805176	Condition	count == 3	3997:7:100633:100642	804837	0	True				
ANR	805177	EqualityExpression	count == 3		804837	0		==			
ANR	805178	Identifier	count		804837	0					
ANR	805179	PrimaryExpression	3		804837	1					
ANR	805180	CompoundStatement		63:4:1460:1520	804837	1					
ANR	805181	IdentifierDeclStatement	ut64 cur ;	3998:4:100651:100659	804837	0	True				
ANR	805182	IdentifierDecl	cur		804837	0					
ANR	805183	IdentifierDeclType	ut64		804837	0					
ANR	805184	Identifier	cur		804837	1					
ANR	805185	IdentifierDeclStatement	"ut64 from = r_num_math ( core -> num , r_str_word_get0 ( str , 0 ) ) ;"	3999:4:100665:100725	804837	1	True				
ANR	805186	IdentifierDecl	"from = r_num_math ( core -> num , r_str_word_get0 ( str , 0 ) )"		804837	0					
ANR	805187	IdentifierDeclType	ut64		804837	0					
ANR	805188	Identifier	from		804837	1					
ANR	805189	AssignmentExpression	"from = r_num_math ( core -> num , r_str_word_get0 ( str , 0 ) )"		804837	2		=			
ANR	805190	Identifier	from		804837	0					
ANR	805191	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( str , 0 ) )"		804837	1					
ANR	805192	Callee	r_num_math		804837	0					
ANR	805193	Identifier	r_num_math		804837	0					
ANR	805194	ArgumentList	core -> num		804837	1					
ANR	805195	Argument	core -> num		804837	0					
ANR	805196	PtrMemberAccess	core -> num		804837	0					
ANR	805197	Identifier	core		804837	0					
ANR	805198	Identifier	num		804837	1					
ANR	805199	Argument	"r_str_word_get0 ( str , 0 )"		804837	1					
ANR	805200	CallExpression	"r_str_word_get0 ( str , 0 )"		804837	0					
ANR	805201	Callee	r_str_word_get0		804837	0					
ANR	805202	Identifier	r_str_word_get0		804837	0					
ANR	805203	ArgumentList	str		804837	1					
ANR	805204	Argument	str		804837	0					
ANR	805205	Identifier	str		804837	0					
ANR	805206	Argument	0		804837	1					
ANR	805207	PrimaryExpression	0		804837	0					
ANR	805208	IdentifierDeclStatement	"ut64 to = r_num_math ( core -> num , r_str_word_get0 ( str , 1 ) ) ;"	4000:4:100731:100789	804837	2	True				
ANR	805209	IdentifierDecl	"to = r_num_math ( core -> num , r_str_word_get0 ( str , 1 ) )"		804837	0					
ANR	805210	IdentifierDeclType	ut64		804837	0					
ANR	805211	Identifier	to		804837	1					
ANR	805212	AssignmentExpression	"to = r_num_math ( core -> num , r_str_word_get0 ( str , 1 ) )"		804837	2		=			
ANR	805213	Identifier	to		804837	0					
ANR	805214	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( str , 1 ) )"		804837	1					
ANR	805215	Callee	r_num_math		804837	0					
ANR	805216	Identifier	r_num_math		804837	0					
ANR	805217	ArgumentList	core -> num		804837	1					
ANR	805218	Argument	core -> num		804837	0					
ANR	805219	PtrMemberAccess	core -> num		804837	0					
ANR	805220	Identifier	core		804837	0					
ANR	805221	Identifier	num		804837	1					
ANR	805222	Argument	"r_str_word_get0 ( str , 1 )"		804837	1					
ANR	805223	CallExpression	"r_str_word_get0 ( str , 1 )"		804837	0					
ANR	805224	Callee	r_str_word_get0		804837	0					
ANR	805225	Identifier	r_str_word_get0		804837	0					
ANR	805226	ArgumentList	str		804837	1					
ANR	805227	Argument	str		804837	0					
ANR	805228	Identifier	str		804837	0					
ANR	805229	Argument	1		804837	1					
ANR	805230	PrimaryExpression	1		804837	0					
ANR	805231	IdentifierDeclStatement	"ut64 step = r_num_math ( core -> num , r_str_word_get0 ( str , 2 ) ) ;"	4001:4:100795:100855	804837	3	True				
ANR	805232	IdentifierDecl	"step = r_num_math ( core -> num , r_str_word_get0 ( str , 2 ) )"		804837	0					
ANR	805233	IdentifierDeclType	ut64		804837	0					
ANR	805234	Identifier	step		804837	1					
ANR	805235	AssignmentExpression	"step = r_num_math ( core -> num , r_str_word_get0 ( str , 2 ) )"		804837	2		=			
ANR	805236	Identifier	step		804837	0					
ANR	805237	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( str , 2 ) )"		804837	1					
ANR	805238	Callee	r_num_math		804837	0					
ANR	805239	Identifier	r_num_math		804837	0					
ANR	805240	ArgumentList	core -> num		804837	1					
ANR	805241	Argument	core -> num		804837	0					
ANR	805242	PtrMemberAccess	core -> num		804837	0					
ANR	805243	Identifier	core		804837	0					
ANR	805244	Identifier	num		804837	1					
ANR	805245	Argument	"r_str_word_get0 ( str , 2 )"		804837	1					
ANR	805246	CallExpression	"r_str_word_get0 ( str , 2 )"		804837	0					
ANR	805247	Callee	r_str_word_get0		804837	0					
ANR	805248	Identifier	r_str_word_get0		804837	0					
ANR	805249	ArgumentList	str		804837	1					
ANR	805250	Argument	str		804837	0					
ANR	805251	Identifier	str		804837	0					
ANR	805252	Argument	2		804837	1					
ANR	805253	PrimaryExpression	2		804837	0					
ANR	805254	ForStatement	for ( cur = from ; cur < to ; cur += step )		804837	4					
ANR	805255	ForInit	cur = from ;	4002:9:100866:100876	804837	0	True				
ANR	805256	AssignmentExpression	cur = from		804837	0		=			
ANR	805257	Identifier	cur		804837	0					
ANR	805258	Identifier	from		804837	1					
ANR	805259	Condition	cur < to	4002:21:100878:100885	804837	1	True				
ANR	805260	RelationalExpression	cur < to		804837	0		<			
ANR	805261	Identifier	cur		804837	0					
ANR	805262	Identifier	to		804837	1					
ANR	805263	AssignmentExpression	cur += step	4002:31:100888:100898	804837	2	True	+=			
ANR	805264	Identifier	cur		804837	0					
ANR	805265	Identifier	step		804837	1					
ANR	805266	CompoundStatement		64:44:1566:1566	804837	3					
ANR	805267	ExpressionStatement	"( void ) r_core_seek ( core , cur , 1 )"	4003:5:100908:100940	804837	0	True				
ANR	805268	CastExpression	"( void ) r_core_seek ( core , cur , 1 )"		804837	0					
ANR	805269	CastTarget	void		804837	0					
ANR	805270	CallExpression	"r_core_seek ( core , cur , 1 )"		804837	1					
ANR	805271	Callee	r_core_seek		804837	0					
ANR	805272	Identifier	r_core_seek		804837	0					
ANR	805273	ArgumentList	core		804837	1					
ANR	805274	Argument	core		804837	0					
ANR	805275	Identifier	core		804837	0					
ANR	805276	Argument	cur		804837	1					
ANR	805277	Identifier	cur		804837	0					
ANR	805278	Argument	1		804837	2					
ANR	805279	PrimaryExpression	1		804837	0					
ANR	805280	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	4004:5:100947:100972	804837	1	True				
ANR	805281	CallExpression	"r_core_cmd ( core , cmd , 0 )"		804837	0					
ANR	805282	Callee	r_core_cmd		804837	0					
ANR	805283	Identifier	r_core_cmd		804837	0					
ANR	805284	ArgumentList	core		804837	1					
ANR	805285	Argument	core		804837	0					
ANR	805286	Identifier	core		804837	0					
ANR	805287	Argument	cmd		804837	1					
ANR	805288	Identifier	cmd		804837	0					
ANR	805289	Argument	0		804837	2					
ANR	805290	PrimaryExpression	0		804837	0					
ANR	805291	IfStatement	if ( r_cons_is_breaked ( ) )		804837	2					
ANR	805292	Condition	r_cons_is_breaked ( )	4005:9:100983:101002	804837	0	True				
ANR	805293	CallExpression	r_cons_is_breaked ( )		804837	0					
ANR	805294	Callee	r_cons_is_breaked		804837	0					
ANR	805295	Identifier	r_cons_is_breaked		804837	0					
ANR	805296	ArgumentList			804837	1					
ANR	805297	CompoundStatement		67:31:1670:1670	804837	1					
ANR	805298	BreakStatement	break ;	4006:6:101013:101018	804837	0	True				
ANR	805299	ElseStatement	else		804837	0					
ANR	805300	CompoundStatement		71:10:1708:1708	804837	0					
ANR	805301	ExpressionStatement	"eprintf ( ""Usage: cmd @@s:from to step\\n"" )"	4010:4:101049:101090	804837	0	True				
ANR	805302	CallExpression	"eprintf ( ""Usage: cmd @@s:from to step\\n"" )"		804837	0					
ANR	805303	Callee	eprintf		804837	0					
ANR	805304	Identifier	eprintf		804837	0					
ANR	805305	ArgumentList	"""Usage: cmd @@s:from to step\\n"""		804837	1					
ANR	805306	Argument	"""Usage: cmd @@s:from to step\\n"""		804837	0					
ANR	805307	PrimaryExpression	"""Usage: cmd @@s:from to step\\n"""		804837	0					
ANR	805308	GotoStatement	goto out_finish ;	4012:3:101100:101115	804837	4	True				
ANR	805309	Identifier	out_finish		804837	0					
ANR	805310	BreakStatement	break ;	4014:2:101123:101128	804837	12	True				
ANR	805311	Label	case 'i' :	4015:1:101131:101139	804837	13	True				
ANR	805312	CompoundStatement		82:3:1895:1963	804837	14					
ANR	805313	IdentifierDeclStatement	RListIter * iter ;	4017:3:101181:101196	804837	0	True				
ANR	805314	IdentifierDecl	* iter		804837	0					
ANR	805315	IdentifierDeclType	RListIter *		804837	0					
ANR	805316	Identifier	iter		804837	1					
ANR	805317	IdentifierDeclStatement	RAnalBlock * bb ;	4018:3:101201:101215	804837	1	True				
ANR	805318	IdentifierDecl	* bb		804837	0					
ANR	805319	IdentifierDeclType	RAnalBlock *		804837	0					
ANR	805320	Identifier	bb		804837	1					
ANR	805321	IdentifierDeclStatement	int i ;	4019:3:101220:101225	804837	2	True				
ANR	805322	IdentifierDecl	i		804837	0					
ANR	805323	IdentifierDeclType	int		804837	0					
ANR	805324	Identifier	i		804837	1					
ANR	805325	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 ) ;"	4020:3:101230:101298	804837	3	True				
ANR	805326	IdentifierDecl	"* fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		804837	0					
ANR	805327	IdentifierDeclType	RAnalFunction *		804837	0					
ANR	805328	Identifier	fcn		804837	1					
ANR	805329	AssignmentExpression	"* fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		804837	2		=			
ANR	805330	Identifier	fcn		804837	0					
ANR	805331	CallExpression	"r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		804837	1					
ANR	805332	Callee	r_anal_get_fcn_at		804837	0					
ANR	805333	Identifier	r_anal_get_fcn_at		804837	0					
ANR	805334	ArgumentList	core -> anal		804837	1					
ANR	805335	Argument	core -> anal		804837	0					
ANR	805336	PtrMemberAccess	core -> anal		804837	0					
ANR	805337	Identifier	core		804837	0					
ANR	805338	Identifier	anal		804837	1					
ANR	805339	Argument	core -> offset		804837	1					
ANR	805340	PtrMemberAccess	core -> offset		804837	0					
ANR	805341	Identifier	core		804837	0					
ANR	805342	Identifier	offset		804837	1					
ANR	805343	Argument	0		804837	2					
ANR	805344	PrimaryExpression	0		804837	0					
ANR	805345	IfStatement	if ( fcn )		804837	4					
ANR	805346	Condition	fcn	4021:7:101307:101309	804837	0	True				
ANR	805347	Identifier	fcn		804837	0					
ANR	805348	CompoundStatement		83:12:1977:1977	804837	1					
ANR	805349	ExpressionStatement	"r_list_sort ( fcn -> bbs , bb_cmp )"	4022:4:101318:101348	804837	0	True				
ANR	805350	CallExpression	"r_list_sort ( fcn -> bbs , bb_cmp )"		804837	0					
ANR	805351	Callee	r_list_sort		804837	0					
ANR	805352	Identifier	r_list_sort		804837	0					
ANR	805353	ArgumentList	fcn -> bbs		804837	1					
ANR	805354	Argument	fcn -> bbs		804837	0					
ANR	805355	PtrMemberAccess	fcn -> bbs		804837	0					
ANR	805356	Identifier	fcn		804837	0					
ANR	805357	Identifier	bbs		804837	1					
ANR	805358	Argument	bb_cmp		804837	1					
ANR	805359	Identifier	bb_cmp		804837	0					
ANR	805360	Statement	r_list_foreach	4023:4:101354:101367	804837	1	True				
ANR	805361	Statement	(	4023:19:101369:101369	804837	2	True				
ANR	805362	Statement	fcn	4023:20:101370:101372	804837	3	True				
ANR	805363	Statement	->	4023:23:101373:101374	804837	4	True				
ANR	805364	Statement	bbs	4023:25:101375:101377	804837	5	True				
ANR	805365	Statement	","	4023:28:101378:101378	804837	6	True				
ANR	805366	Statement	iter	4023:30:101380:101383	804837	7	True				
ANR	805367	Statement	","	4023:34:101384:101384	804837	8	True				
ANR	805368	Statement	bb	4023:36:101386:101387	804837	9	True				
ANR	805369	Statement	)	4023:38:101388:101388	804837	10	True				
ANR	805370	CompoundStatement		85:40:2055:2055	804837	11					
ANR	805371	ForStatement	for ( i = 0 ; i < bb -> op_pos_size ; i ++ )		804837	0					
ANR	805372	ForInit	i = 0 ;	4024:10:101402:101407	804837	0	True				
ANR	805373	AssignmentExpression	i = 0		804837	0		=			
ANR	805374	Identifier	i		804837	0					
ANR	805375	PrimaryExpression	0		804837	1					
ANR	805376	Condition	i < bb -> op_pos_size	4024:17:101409:101427	804837	1	True				
ANR	805377	RelationalExpression	i < bb -> op_pos_size		804837	0		<			
ANR	805378	Identifier	i		804837	0					
ANR	805379	PtrMemberAccess	bb -> op_pos_size		804837	1					
ANR	805380	Identifier	bb		804837	0					
ANR	805381	Identifier	op_pos_size		804837	1					
ANR	805382	PostIncDecOperationExpression	i ++	4024:38:101430:101432	804837	2	True				
ANR	805383	Identifier	i		804837	0					
ANR	805384	IncDec	++		804837	1					
ANR	805385	CompoundStatement		87:6:2108:2144	804837	3					
ANR	805386	IdentifierDeclStatement	ut64 addr = bb -> addr + bb -> op_pos [ i ] ;	4025:6:101443:101479	804837	0	True				
ANR	805387	IdentifierDecl	addr = bb -> addr + bb -> op_pos [ i ]		804837	0					
ANR	805388	IdentifierDeclType	ut64		804837	0					
ANR	805389	Identifier	addr		804837	1					
ANR	805390	AssignmentExpression	addr = bb -> addr + bb -> op_pos [ i ]		804837	2		=			
ANR	805391	Identifier	addr		804837	0					
ANR	805392	AdditiveExpression	bb -> addr + bb -> op_pos [ i ]		804837	1		+			
ANR	805393	PtrMemberAccess	bb -> addr		804837	0					
ANR	805394	Identifier	bb		804837	0					
ANR	805395	Identifier	addr		804837	1					
ANR	805396	ArrayIndexing	bb -> op_pos [ i ]		804837	1					
ANR	805397	PtrMemberAccess	bb -> op_pos		804837	0					
ANR	805398	Identifier	bb		804837	0					
ANR	805399	Identifier	op_pos		804837	1					
ANR	805400	Identifier	i		804837	1					
ANR	805401	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	4026:6:101487:101514	804837	1	True				
ANR	805402	CallExpression	"r_core_seek ( core , addr , 1 )"		804837	0					
ANR	805403	Callee	r_core_seek		804837	0					
ANR	805404	Identifier	r_core_seek		804837	0					
ANR	805405	ArgumentList	core		804837	1					
ANR	805406	Argument	core		804837	0					
ANR	805407	Identifier	core		804837	0					
ANR	805408	Argument	addr		804837	1					
ANR	805409	Identifier	addr		804837	0					
ANR	805410	Argument	1		804837	2					
ANR	805411	PrimaryExpression	1		804837	0					
ANR	805412	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	4027:6:101522:101547	804837	2	True				
ANR	805413	CallExpression	"r_core_cmd ( core , cmd , 0 )"		804837	0					
ANR	805414	Callee	r_core_cmd		804837	0					
ANR	805415	Identifier	r_core_cmd		804837	0					
ANR	805416	ArgumentList	core		804837	1					
ANR	805417	Argument	core		804837	0					
ANR	805418	Identifier	core		804837	0					
ANR	805419	Argument	cmd		804837	1					
ANR	805420	Identifier	cmd		804837	0					
ANR	805421	Argument	0		804837	2					
ANR	805422	PrimaryExpression	0		804837	0					
ANR	805423	IfStatement	if ( r_cons_is_breaked ( ) )		804837	3					
ANR	805424	Condition	r_cons_is_breaked ( )	4028:10:101559:101578	804837	0	True				
ANR	805425	CallExpression	r_cons_is_breaked ( )		804837	0					
ANR	805426	Callee	r_cons_is_breaked		804837	0					
ANR	805427	Identifier	r_cons_is_breaked		804837	0					
ANR	805428	ArgumentList			804837	1					
ANR	805429	CompoundStatement		90:32:2246:2246	804837	1					
ANR	805430	BreakStatement	break ;	4029:7:101590:101595	804837	0	True				
ANR	805431	GotoStatement	goto out_finish ;	4034:3:101626:101641	804837	5	True				
ANR	805432	Identifier	out_finish		804837	0					
ANR	805433	BreakStatement	break ;	4036:2:101649:101654	804837	15	True				
ANR	805434	Label	case 'f' :	4037:1:101657:101665	804837	16	True				
ANR	805435	IfStatement	if ( each [ 1 ] == ':' )		804837	17					
ANR	805436	Condition	each [ 1 ] == ':'	4038:6:101682:101695	804837	0	True				
ANR	805437	EqualityExpression	each [ 1 ] == ':'		804837	0		==			
ANR	805438	ArrayIndexing	each [ 1 ]		804837	0					
ANR	805439	Identifier	each		804837	0					
ANR	805440	PrimaryExpression	1		804837	1					
ANR	805441	PrimaryExpression	':'		804837	1					
ANR	805442	CompoundStatement		102:3:2391:2406	804837	1					
ANR	805443	IdentifierDeclStatement	RAnalFunction * fcn ;	4039:3:101703:101721	804837	0	True				
ANR	805444	IdentifierDecl	* fcn		804837	0					
ANR	805445	IdentifierDeclType	RAnalFunction *		804837	0					
ANR	805446	Identifier	fcn		804837	1					
ANR	805447	IdentifierDeclStatement	RListIter * iter ;	4040:3:101726:101741	804837	1	True				
ANR	805448	IdentifierDecl	* iter		804837	0					
ANR	805449	IdentifierDeclType	RListIter *		804837	0					
ANR	805450	Identifier	iter		804837	1					
ANR	805451	IfStatement	if ( core -> anal )		804837	2					
ANR	805452	Condition	core -> anal	4041:7:101750:101759	804837	0	True				
ANR	805453	PtrMemberAccess	core -> anal		804837	0					
ANR	805454	Identifier	core		804837	0					
ANR	805455	Identifier	anal		804837	1					
ANR	805456	CompoundStatement		103:19:2427:2427	804837	1					
ANR	805457	Statement	r_list_foreach	4042:4:101768:101781	804837	0	True				
ANR	805458	Statement	(	4042:19:101783:101783	804837	1	True				
ANR	805459	Statement	core	4042:20:101784:101787	804837	2	True				
ANR	805460	Statement	->	4042:24:101788:101789	804837	3	True				
ANR	805461	Statement	anal	4042:26:101790:101793	804837	4	True				
ANR	805462	Statement	->	4042:30:101794:101795	804837	5	True				
ANR	805463	Statement	fcns	4042:32:101796:101799	804837	6	True				
ANR	805464	Statement	","	4042:36:101800:101800	804837	7	True				
ANR	805465	Statement	iter	4042:38:101802:101805	804837	8	True				
ANR	805466	Statement	","	4042:42:101806:101806	804837	9	True				
ANR	805467	Statement	fcn	4042:44:101808:101810	804837	10	True				
ANR	805468	Statement	)	4042:47:101811:101811	804837	11	True				
ANR	805469	CompoundStatement		104:49:2478:2478	804837	12					
ANR	805470	IfStatement	"if ( each [ 2 ] && strstr ( fcn -> name , each + 2 ) )"		804837	0					
ANR	805471	Condition	"each [ 2 ] && strstr ( fcn -> name , each + 2 )"	4043:9:101824:101862	804837	0	True				
ANR	805472	AndExpression	"each [ 2 ] && strstr ( fcn -> name , each + 2 )"		804837	0		&&			
ANR	805473	ArrayIndexing	each [ 2 ]		804837	0					
ANR	805474	Identifier	each		804837	0					
ANR	805475	PrimaryExpression	2		804837	1					
ANR	805476	CallExpression	"strstr ( fcn -> name , each + 2 )"		804837	1					
ANR	805477	Callee	strstr		804837	0					
ANR	805478	Identifier	strstr		804837	0					
ANR	805479	ArgumentList	fcn -> name		804837	1					
ANR	805480	Argument	fcn -> name		804837	0					
ANR	805481	PtrMemberAccess	fcn -> name		804837	0					
ANR	805482	Identifier	fcn		804837	0					
ANR	805483	Identifier	name		804837	1					
ANR	805484	Argument	each + 2		804837	1					
ANR	805485	AdditiveExpression	each + 2		804837	0		+			
ANR	805486	Identifier	each		804837	0					
ANR	805487	PrimaryExpression	2		804837	1					
ANR	805488	CompoundStatement		105:50:2530:2530	804837	1					
ANR	805489	ExpressionStatement	"r_core_seek ( core , fcn -> addr , 1 )"	4044:6:101873:101905	804837	0	True				
ANR	805490	CallExpression	"r_core_seek ( core , fcn -> addr , 1 )"		804837	0					
ANR	805491	Callee	r_core_seek		804837	0					
ANR	805492	Identifier	r_core_seek		804837	0					
ANR	805493	ArgumentList	core		804837	1					
ANR	805494	Argument	core		804837	0					
ANR	805495	Identifier	core		804837	0					
ANR	805496	Argument	fcn -> addr		804837	1					
ANR	805497	PtrMemberAccess	fcn -> addr		804837	0					
ANR	805498	Identifier	fcn		804837	0					
ANR	805499	Identifier	addr		804837	1					
ANR	805500	Argument	1		804837	2					
ANR	805501	PrimaryExpression	1		804837	0					
ANR	805502	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	4045:6:101913:101938	804837	1	True				
ANR	805503	CallExpression	"r_core_cmd ( core , cmd , 0 )"		804837	0					
ANR	805504	Callee	r_core_cmd		804837	0					
ANR	805505	Identifier	r_core_cmd		804837	0					
ANR	805506	ArgumentList	core		804837	1					
ANR	805507	Argument	core		804837	0					
ANR	805508	Identifier	core		804837	0					
ANR	805509	Argument	cmd		804837	1					
ANR	805510	Identifier	cmd		804837	0					
ANR	805511	Argument	0		804837	2					
ANR	805512	PrimaryExpression	0		804837	0					
ANR	805513	IfStatement	if ( r_cons_is_breaked ( ) )		804837	2					
ANR	805514	Condition	r_cons_is_breaked ( )	4046:10:101950:101969	804837	0	True				
ANR	805515	CallExpression	r_cons_is_breaked ( )		804837	0					
ANR	805516	Callee	r_cons_is_breaked		804837	0					
ANR	805517	Identifier	r_cons_is_breaked		804837	0					
ANR	805518	ArgumentList			804837	1					
ANR	805519	CompoundStatement		108:32:2637:2637	804837	1					
ANR	805520	BreakStatement	break ;	4047:7:101981:101986	804837	0	True				
ANR	805521	GotoStatement	goto out_finish ;	4052:3:102017:102032	804837	3	True				
ANR	805522	Identifier	out_finish		804837	0					
ANR	805523	ElseStatement	else		804837	0					
ANR	805524	CompoundStatement		117:3:2736:2751	804837	0					
ANR	805525	IdentifierDeclStatement	RAnalFunction * fcn ;	4054:3:102048:102066	804837	0	True				
ANR	805526	IdentifierDecl	* fcn		804837	0					
ANR	805527	IdentifierDeclType	RAnalFunction *		804837	0					
ANR	805528	Identifier	fcn		804837	1					
ANR	805529	IdentifierDeclStatement	RListIter * iter ;	4055:3:102071:102086	804837	1	True				
ANR	805530	IdentifierDecl	* iter		804837	0					
ANR	805531	IdentifierDeclType	RListIter *		804837	0					
ANR	805532	Identifier	iter		804837	1					
ANR	805533	IfStatement	if ( core -> anal )		804837	2					
ANR	805534	Condition	core -> anal	4056:7:102095:102104	804837	0	True				
ANR	805535	PtrMemberAccess	core -> anal		804837	0					
ANR	805536	Identifier	core		804837	0					
ANR	805537	Identifier	anal		804837	1					
ANR	805538	CompoundStatement		119:4:2778:2820	804837	1					
ANR	805539	IdentifierDeclStatement	RConsGrep grep = core -> cons -> context -> grep ;	4057:4:102113:102155	804837	0	True				
ANR	805540	IdentifierDecl	grep = core -> cons -> context -> grep		804837	0					
ANR	805541	IdentifierDeclType	RConsGrep		804837	0					
ANR	805542	Identifier	grep		804837	1					
ANR	805543	AssignmentExpression	grep = core -> cons -> context -> grep		804837	2		=			
ANR	805544	Identifier	grep		804837	0					
ANR	805545	PtrMemberAccess	core -> cons -> context -> grep		804837	1					
ANR	805546	PtrMemberAccess	core -> cons -> context		804837	0					
ANR	805547	PtrMemberAccess	core -> cons		804837	0					
ANR	805548	Identifier	core		804837	0					
ANR	805549	Identifier	cons		804837	1					
ANR	805550	Identifier	context		804837	1					
ANR	805551	Identifier	grep		804837	1					
ANR	805552	Statement	r_list_foreach	4058:4:102161:102174	804837	1	True				
ANR	805553	Statement	(	4058:19:102176:102176	804837	2	True				
ANR	805554	Statement	core	4058:20:102177:102180	804837	3	True				
ANR	805555	Statement	->	4058:24:102181:102182	804837	4	True				
ANR	805556	Statement	anal	4058:26:102183:102186	804837	5	True				
ANR	805557	Statement	->	4058:30:102187:102188	804837	6	True				
ANR	805558	Statement	fcns	4058:32:102189:102192	804837	7	True				
ANR	805559	Statement	","	4058:36:102193:102193	804837	8	True				
ANR	805560	Statement	iter	4058:38:102195:102198	804837	9	True				
ANR	805561	Statement	","	4058:42:102199:102199	804837	10	True				
ANR	805562	Statement	fcn	4058:44:102201:102203	804837	11	True				
ANR	805563	Statement	)	4058:47:102204:102204	804837	12	True				
ANR	805564	CompoundStatement		121:5:2878:2887	804837	13					
ANR	805565	IdentifierDeclStatement	char * buf ;	4059:5:102213:102222	804837	0	True				
ANR	805566	IdentifierDecl	* buf		804837	0					
ANR	805567	IdentifierDeclType	char *		804837	0					
ANR	805568	Identifier	buf		804837	1					
ANR	805569	ExpressionStatement	"r_core_seek ( core , fcn -> addr , 1 )"	4060:5:102229:102261	804837	1	True				
ANR	805570	CallExpression	"r_core_seek ( core , fcn -> addr , 1 )"		804837	0					
ANR	805571	Callee	r_core_seek		804837	0					
ANR	805572	Identifier	r_core_seek		804837	0					
ANR	805573	ArgumentList	core		804837	1					
ANR	805574	Argument	core		804837	0					
ANR	805575	Identifier	core		804837	0					
ANR	805576	Argument	fcn -> addr		804837	1					
ANR	805577	PtrMemberAccess	fcn -> addr		804837	0					
ANR	805578	Identifier	fcn		804837	0					
ANR	805579	Identifier	addr		804837	1					
ANR	805580	Argument	1		804837	2					
ANR	805581	PrimaryExpression	1		804837	0					
ANR	805582	ExpressionStatement	r_cons_push ( )	4061:5:102268:102282	804837	2	True				
ANR	805583	CallExpression	r_cons_push ( )		804837	0					
ANR	805584	Callee	r_cons_push		804837	0					
ANR	805585	Identifier	r_cons_push		804837	0					
ANR	805586	ArgumentList			804837	1					
ANR	805587	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	4062:5:102289:102314	804837	3	True				
ANR	805588	CallExpression	"r_core_cmd ( core , cmd , 0 )"		804837	0					
ANR	805589	Callee	r_core_cmd		804837	0					
ANR	805590	Identifier	r_core_cmd		804837	0					
ANR	805591	ArgumentList	core		804837	1					
ANR	805592	Argument	core		804837	0					
ANR	805593	Identifier	core		804837	0					
ANR	805594	Argument	cmd		804837	1					
ANR	805595	Identifier	cmd		804837	0					
ANR	805596	Argument	0		804837	2					
ANR	805597	PrimaryExpression	0		804837	0					
ANR	805598	ExpressionStatement	buf = ( char * ) r_cons_get_buffer ( )	4063:5:102321:102355	804837	4	True				
ANR	805599	AssignmentExpression	buf = ( char * ) r_cons_get_buffer ( )		804837	0		=			
ANR	805600	Identifier	buf		804837	0					
ANR	805601	CastExpression	( char * ) r_cons_get_buffer ( )		804837	1					
ANR	805602	CastTarget	char *		804837	0					
ANR	805603	CallExpression	r_cons_get_buffer ( )		804837	1					
ANR	805604	Callee	r_cons_get_buffer		804837	0					
ANR	805605	Identifier	r_cons_get_buffer		804837	0					
ANR	805606	ArgumentList			804837	1					
ANR	805607	IfStatement	if ( buf )		804837	5					
ANR	805608	Condition	buf	4064:9:102366:102368	804837	0	True				
ANR	805609	Identifier	buf		804837	0					
ANR	805610	CompoundStatement		126:14:3036:3036	804837	1					
ANR	805611	ExpressionStatement	buf = strdup ( buf )	4065:6:102379:102397	804837	0	True				
ANR	805612	AssignmentExpression	buf = strdup ( buf )		804837	0		=			
ANR	805613	Identifier	buf		804837	0					
ANR	805614	CallExpression	strdup ( buf )		804837	1					
ANR	805615	Callee	strdup		804837	0					
ANR	805616	Identifier	strdup		804837	0					
ANR	805617	ArgumentList	buf		804837	1					
ANR	805618	Argument	buf		804837	0					
ANR	805619	Identifier	buf		804837	0					
ANR	805620	ExpressionStatement	r_cons_pop ( )	4067:5:102411:102424	804837	6	True				
ANR	805621	CallExpression	r_cons_pop ( )		804837	0					
ANR	805622	Callee	r_cons_pop		804837	0					
ANR	805623	Identifier	r_cons_pop		804837	0					
ANR	805624	ArgumentList			804837	1					
ANR	805625	ExpressionStatement	r_cons_strcat ( buf )	4068:5:102431:102450	804837	7	True				
ANR	805626	CallExpression	r_cons_strcat ( buf )		804837	0					
ANR	805627	Callee	r_cons_strcat		804837	0					
ANR	805628	Identifier	r_cons_strcat		804837	0					
ANR	805629	ArgumentList	buf		804837	1					
ANR	805630	Argument	buf		804837	0					
ANR	805631	Identifier	buf		804837	0					
ANR	805632	ExpressionStatement	free ( buf )	4069:5:102457:102467	804837	8	True				
ANR	805633	CallExpression	free ( buf )		804837	0					
ANR	805634	Callee	free		804837	0					
ANR	805635	Identifier	free		804837	0					
ANR	805636	ArgumentList	buf		804837	1					
ANR	805637	Argument	buf		804837	0					
ANR	805638	Identifier	buf		804837	0					
ANR	805639	IfStatement	if ( r_cons_is_breaked ( ) )		804837	9					
ANR	805640	Condition	r_cons_is_breaked ( )	4070:9:102478:102497	804837	0	True				
ANR	805641	CallExpression	r_cons_is_breaked ( )		804837	0					
ANR	805642	Callee	r_cons_is_breaked		804837	0					
ANR	805643	Identifier	r_cons_is_breaked		804837	0					
ANR	805644	ArgumentList			804837	1					
ANR	805645	CompoundStatement		132:31:3165:3165	804837	1					
ANR	805646	BreakStatement	break ;	4071:6:102508:102513	804837	0	True				
ANR	805647	ExpressionStatement	core -> cons -> context -> grep = grep	4074:4:102532:102564	804837	14	True				
ANR	805648	AssignmentExpression	core -> cons -> context -> grep = grep		804837	0		=			
ANR	805649	PtrMemberAccess	core -> cons -> context -> grep		804837	0					
ANR	805650	PtrMemberAccess	core -> cons -> context		804837	0					
ANR	805651	PtrMemberAccess	core -> cons		804837	0					
ANR	805652	Identifier	core		804837	0					
ANR	805653	Identifier	cons		804837	1					
ANR	805654	Identifier	context		804837	1					
ANR	805655	Identifier	grep		804837	1					
ANR	805656	Identifier	grep		804837	1					
ANR	805657	GotoStatement	goto out_finish ;	4076:3:102574:102589	804837	3	True				
ANR	805658	Identifier	out_finish		804837	0					
ANR	805659	BreakStatement	break ;	4078:2:102597:102602	804837	18	True				
ANR	805660	Label	case 't' :	4079:1:102605:102613	804837	19	True				
ANR	805661	CompoundStatement		144:3:3313:3337	804837	20					
ANR	805662	IdentifierDeclStatement	RDebugPid * p ;	4081:3:102631:102643	804837	0	True				
ANR	805663	IdentifierDecl	* p		804837	0					
ANR	805664	IdentifierDeclType	RDebugPid *		804837	0					
ANR	805665	Identifier	p		804837	1					
ANR	805666	IdentifierDeclStatement	int pid = core -> dbg -> pid ;	4082:3:102648:102672	804837	1	True				
ANR	805667	IdentifierDecl	pid = core -> dbg -> pid		804837	0					
ANR	805668	IdentifierDeclType	int		804837	0					
ANR	805669	Identifier	pid		804837	1					
ANR	805670	AssignmentExpression	pid = core -> dbg -> pid		804837	2		=			
ANR	805671	Identifier	pid		804837	0					
ANR	805672	PtrMemberAccess	core -> dbg -> pid		804837	1					
ANR	805673	PtrMemberAccess	core -> dbg		804837	0					
ANR	805674	Identifier	core		804837	0					
ANR	805675	Identifier	dbg		804837	1					
ANR	805676	Identifier	pid		804837	1					
ANR	805677	IfStatement	if ( core -> dbg -> h && core -> dbg -> h -> pids )		804837	2					
ANR	805678	Condition	core -> dbg -> h && core -> dbg -> h -> pids	4083:7:102681:102714	804837	0	True				
ANR	805679	AndExpression	core -> dbg -> h && core -> dbg -> h -> pids		804837	0		&&			
ANR	805680	PtrMemberAccess	core -> dbg -> h		804837	0					
ANR	805681	PtrMemberAccess	core -> dbg		804837	0					
ANR	805682	Identifier	core		804837	0					
ANR	805683	Identifier	dbg		804837	1					
ANR	805684	Identifier	h		804837	1					
ANR	805685	PtrMemberAccess	core -> dbg -> h -> pids		804837	1					
ANR	805686	PtrMemberAccess	core -> dbg -> h		804837	0					
ANR	805687	PtrMemberAccess	core -> dbg		804837	0					
ANR	805688	Identifier	core		804837	0					
ANR	805689	Identifier	dbg		804837	1					
ANR	805690	Identifier	h		804837	1					
ANR	805691	Identifier	pids		804837	1					
ANR	805692	CompoundStatement		146:4:3388:3448	804837	1					
ANR	805693	IdentifierDeclStatement	"RList * list = core -> dbg -> h -> pids ( core -> dbg , R_MAX ( 0 , pid ) ) ;"	4084:4:102723:102783	804837	0	True				
ANR	805694	IdentifierDecl	"* list = core -> dbg -> h -> pids ( core -> dbg , R_MAX ( 0 , pid ) )"		804837	0					
ANR	805695	IdentifierDeclType	RList *		804837	0					
ANR	805696	Identifier	list		804837	1					
ANR	805697	AssignmentExpression	"* list = core -> dbg -> h -> pids ( core -> dbg , R_MAX ( 0 , pid ) )"		804837	2		=			
ANR	805698	Identifier	list		804837	0					
ANR	805699	CallExpression	"core -> dbg -> h -> pids ( core -> dbg , R_MAX ( 0 , pid ) )"		804837	1					
ANR	805700	Callee	core -> dbg -> h -> pids		804837	0					
ANR	805701	PtrMemberAccess	core -> dbg -> h -> pids		804837	0					
ANR	805702	PtrMemberAccess	core -> dbg -> h		804837	0					
ANR	805703	PtrMemberAccess	core -> dbg		804837	0					
ANR	805704	Identifier	core		804837	0					
ANR	805705	Identifier	dbg		804837	1					
ANR	805706	Identifier	h		804837	1					
ANR	805707	Identifier	pids		804837	1					
ANR	805708	ArgumentList	core -> dbg		804837	1					
ANR	805709	Argument	core -> dbg		804837	0					
ANR	805710	PtrMemberAccess	core -> dbg		804837	0					
ANR	805711	Identifier	core		804837	0					
ANR	805712	Identifier	dbg		804837	1					
ANR	805713	Argument	"R_MAX ( 0 , pid )"		804837	1					
ANR	805714	CallExpression	"R_MAX ( 0 , pid )"		804837	0					
ANR	805715	Callee	R_MAX		804837	0					
ANR	805716	Identifier	R_MAX		804837	0					
ANR	805717	ArgumentList	0		804837	1					
ANR	805718	Argument	0		804837	0					
ANR	805719	PrimaryExpression	0		804837	0					
ANR	805720	Argument	pid		804837	1					
ANR	805721	Identifier	pid		804837	0					
ANR	805722	Statement	r_list_foreach	4085:4:102789:102802	804837	1	True				
ANR	805723	Statement	(	4085:19:102804:102804	804837	2	True				
ANR	805724	Statement	list	4085:20:102805:102808	804837	3	True				
ANR	805725	Statement	","	4085:24:102809:102809	804837	4	True				
ANR	805726	Statement	iter	4085:26:102811:102814	804837	5	True				
ANR	805727	Statement	","	4085:30:102815:102815	804837	6	True				
ANR	805728	Statement	p	4085:32:102817:102817	804837	7	True				
ANR	805729	Statement	)	4085:33:102818:102818	804837	8	True				
ANR	805730	CompoundStatement		147:35:3485:3485	804837	9					
ANR	805731	ExpressionStatement	"r_cons_printf ( ""# PID %d\\n"" , p -> pid )"	4086:5:102827:102863	804837	0	True				
ANR	805732	CallExpression	"r_cons_printf ( ""# PID %d\\n"" , p -> pid )"		804837	0					
ANR	805733	Callee	r_cons_printf		804837	0					
ANR	805734	Identifier	r_cons_printf		804837	0					
ANR	805735	ArgumentList	"""# PID %d\\n"""		804837	1					
ANR	805736	Argument	"""# PID %d\\n"""		804837	0					
ANR	805737	PrimaryExpression	"""# PID %d\\n"""		804837	0					
ANR	805738	Argument	p -> pid		804837	1					
ANR	805739	PtrMemberAccess	p -> pid		804837	0					
ANR	805740	Identifier	p		804837	0					
ANR	805741	Identifier	pid		804837	1					
ANR	805742	ExpressionStatement	"r_debug_select ( core -> dbg , p -> pid , p -> pid )"	4087:5:102870:102912	804837	1	True				
ANR	805743	CallExpression	"r_debug_select ( core -> dbg , p -> pid , p -> pid )"		804837	0					
ANR	805744	Callee	r_debug_select		804837	0					
ANR	805745	Identifier	r_debug_select		804837	0					
ANR	805746	ArgumentList	core -> dbg		804837	1					
ANR	805747	Argument	core -> dbg		804837	0					
ANR	805748	PtrMemberAccess	core -> dbg		804837	0					
ANR	805749	Identifier	core		804837	0					
ANR	805750	Identifier	dbg		804837	1					
ANR	805751	Argument	p -> pid		804837	1					
ANR	805752	PtrMemberAccess	p -> pid		804837	0					
ANR	805753	Identifier	p		804837	0					
ANR	805754	Identifier	pid		804837	1					
ANR	805755	Argument	p -> pid		804837	2					
ANR	805756	PtrMemberAccess	p -> pid		804837	0					
ANR	805757	Identifier	p		804837	0					
ANR	805758	Identifier	pid		804837	1					
ANR	805759	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	4088:5:102919:102944	804837	2	True				
ANR	805760	CallExpression	"r_core_cmd ( core , cmd , 0 )"		804837	0					
ANR	805761	Callee	r_core_cmd		804837	0					
ANR	805762	Identifier	r_core_cmd		804837	0					
ANR	805763	ArgumentList	core		804837	1					
ANR	805764	Argument	core		804837	0					
ANR	805765	Identifier	core		804837	0					
ANR	805766	Argument	cmd		804837	1					
ANR	805767	Identifier	cmd		804837	0					
ANR	805768	Argument	0		804837	2					
ANR	805769	PrimaryExpression	0		804837	0					
ANR	805770	ExpressionStatement	r_cons_newline ( )	4089:5:102951:102968	804837	3	True				
ANR	805771	CallExpression	r_cons_newline ( )		804837	0					
ANR	805772	Callee	r_cons_newline		804837	0					
ANR	805773	Identifier	r_cons_newline		804837	0					
ANR	805774	ArgumentList			804837	1					
ANR	805775	ExpressionStatement	r_list_free ( list )	4091:4:102980:102998	804837	10	True				
ANR	805776	CallExpression	r_list_free ( list )		804837	0					
ANR	805777	Callee	r_list_free		804837	0					
ANR	805778	Identifier	r_list_free		804837	0					
ANR	805779	ArgumentList	list		804837	1					
ANR	805780	Argument	list		804837	0					
ANR	805781	Identifier	list		804837	0					
ANR	805782	ExpressionStatement	"r_debug_select ( core -> dbg , pid , pid )"	4093:3:103008:103044	804837	3	True				
ANR	805783	CallExpression	"r_debug_select ( core -> dbg , pid , pid )"		804837	0					
ANR	805784	Callee	r_debug_select		804837	0					
ANR	805785	Identifier	r_debug_select		804837	0					
ANR	805786	ArgumentList	core -> dbg		804837	1					
ANR	805787	Argument	core -> dbg		804837	0					
ANR	805788	PtrMemberAccess	core -> dbg		804837	0					
ANR	805789	Identifier	core		804837	0					
ANR	805790	Identifier	dbg		804837	1					
ANR	805791	Argument	pid		804837	1					
ANR	805792	Identifier	pid		804837	0					
ANR	805793	Argument	pid		804837	2					
ANR	805794	Identifier	pid		804837	0					
ANR	805795	GotoStatement	goto out_finish ;	4094:3:103049:103064	804837	4	True				
ANR	805796	Identifier	out_finish		804837	0					
ANR	805797	BreakStatement	break ;	4096:2:103072:103077	804837	21	True				
ANR	805798	Label	case 'c' :	4097:1:103080:103088	804837	22	True				
ANR	805799	IfStatement	if ( each [ 1 ] == ':' )		804837	23					
ANR	805800	Condition	each [ 1 ] == ':'	4098:6:103106:103119	804837	0	True				
ANR	805801	EqualityExpression	each [ 1 ] == ':'		804837	0		==			
ANR	805802	ArrayIndexing	each [ 1 ]		804837	0					
ANR	805803	Identifier	each		804837	0					
ANR	805804	PrimaryExpression	1		804837	1					
ANR	805805	PrimaryExpression	':'		804837	1					
ANR	805806	CompoundStatement		161:3:3792:3835	804837	1					
ANR	805807	IdentifierDeclStatement	"char * arg = r_core_cmd_str ( core , each + 2 ) ;"	4099:3:103127:103170	804837	0	True				
ANR	805808	IdentifierDecl	"* arg = r_core_cmd_str ( core , each + 2 )"		804837	0					
ANR	805809	IdentifierDeclType	char *		804837	0					
ANR	805810	Identifier	arg		804837	1					
ANR	805811	AssignmentExpression	"* arg = r_core_cmd_str ( core , each + 2 )"		804837	2		=			
ANR	805812	Identifier	arg		804837	0					
ANR	805813	CallExpression	"r_core_cmd_str ( core , each + 2 )"		804837	1					
ANR	805814	Callee	r_core_cmd_str		804837	0					
ANR	805815	Identifier	r_core_cmd_str		804837	0					
ANR	805816	ArgumentList	core		804837	1					
ANR	805817	Argument	core		804837	0					
ANR	805818	Identifier	core		804837	0					
ANR	805819	Argument	each + 2		804837	1					
ANR	805820	AdditiveExpression	each + 2		804837	0		+			
ANR	805821	Identifier	each		804837	0					
ANR	805822	PrimaryExpression	2		804837	1					
ANR	805823	IfStatement	if ( arg )		804837	1					
ANR	805824	Condition	arg	4100:7:103179:103181	804837	0	True				
ANR	805825	Identifier	arg		804837	0					
ANR	805826	CompoundStatement		162:12:3849:3849	804837	1					
ANR	805827	ExpressionStatement	"foreachOffset ( core , cmd , arg )"	4101:4:103190:103220	804837	0	True				
ANR	805828	CallExpression	"foreachOffset ( core , cmd , arg )"		804837	0					
ANR	805829	Callee	foreachOffset		804837	0					
ANR	805830	Identifier	foreachOffset		804837	0					
ANR	805831	ArgumentList	core		804837	1					
ANR	805832	Argument	core		804837	0					
ANR	805833	Identifier	core		804837	0					
ANR	805834	Argument	cmd		804837	1					
ANR	805835	Identifier	cmd		804837	0					
ANR	805836	Argument	arg		804837	2					
ANR	805837	Identifier	arg		804837	0					
ANR	805838	ExpressionStatement	free ( arg )	4102:4:103226:103236	804837	1	True				
ANR	805839	CallExpression	free ( arg )		804837	0					
ANR	805840	Callee	free		804837	0					
ANR	805841	Identifier	free		804837	0					
ANR	805842	ArgumentList	arg		804837	1					
ANR	805843	Argument	arg		804837	0					
ANR	805844	Identifier	arg		804837	0					
ANR	805845	BreakStatement	break ;	4105:2:103249:103254	804837	24	True				
ANR	805846	Label	case '=' :	4106:1:103257:103265	804837	25	True				
ANR	805847	ExpressionStatement	"foreachOffset ( core , cmd , str + 1 )"	4107:2:103278:103312	804837	26	True				
ANR	805848	CallExpression	"foreachOffset ( core , cmd , str + 1 )"		804837	0					
ANR	805849	Callee	foreachOffset		804837	0					
ANR	805850	Identifier	foreachOffset		804837	0					
ANR	805851	ArgumentList	core		804837	1					
ANR	805852	Argument	core		804837	0					
ANR	805853	Identifier	core		804837	0					
ANR	805854	Argument	cmd		804837	1					
ANR	805855	Identifier	cmd		804837	0					
ANR	805856	Argument	str + 1		804837	2					
ANR	805857	AdditiveExpression	str + 1		804837	0		+			
ANR	805858	Identifier	str		804837	0					
ANR	805859	PrimaryExpression	1		804837	1					
ANR	805860	BreakStatement	break ;	4108:2:103316:103321	804837	27	True				
ANR	805861	Label	case 'd' :	4109:1:103324:103332	804837	28	True				
ANR	805862	IfStatement	if ( each [ 1 ] == 'b' && each [ 2 ] == 't' )		804837	29					
ANR	805863	Condition	each [ 1 ] == 'b' && each [ 2 ] == 't'	4110:6:103349:103380	804837	0	True				
ANR	805864	AndExpression	each [ 1 ] == 'b' && each [ 2 ] == 't'		804837	0		&&			
ANR	805865	EqualityExpression	each [ 1 ] == 'b'		804837	0		==			
ANR	805866	ArrayIndexing	each [ 1 ]		804837	0					
ANR	805867	Identifier	each		804837	0					
ANR	805868	PrimaryExpression	1		804837	1					
ANR	805869	PrimaryExpression	'b'		804837	1					
ANR	805870	EqualityExpression	each [ 2 ] == 't'		804837	1		==			
ANR	805871	ArrayIndexing	each [ 2 ]		804837	0					
ANR	805872	Identifier	each		804837	0					
ANR	805873	PrimaryExpression	2		804837	1					
ANR	805874	PrimaryExpression	't'		804837	1					
ANR	805875	CompoundStatement		176:3:4126:4137	804837	1					
ANR	805876	IdentifierDeclStatement	ut64 oseek = core -> offset ;	4111:3:103388:103413	804837	0	True				
ANR	805877	IdentifierDecl	oseek = core -> offset		804837	0					
ANR	805878	IdentifierDeclType	ut64		804837	0					
ANR	805879	Identifier	oseek		804837	1					
ANR	805880	AssignmentExpression	oseek = core -> offset		804837	2		=			
ANR	805881	Identifier	oseek		804837	0					
ANR	805882	PtrMemberAccess	core -> offset		804837	1					
ANR	805883	Identifier	core		804837	0					
ANR	805884	Identifier	offset		804837	1					
ANR	805885	IdentifierDeclStatement	RDebugFrame * frame ;	4112:3:103418:103436	804837	1	True				
ANR	805886	IdentifierDecl	* frame		804837	0					
ANR	805887	IdentifierDeclType	RDebugFrame *		804837	0					
ANR	805888	Identifier	frame		804837	1					
ANR	805889	IdentifierDeclStatement	RListIter * iter ;	4113:3:103441:103456	804837	2	True				
ANR	805890	IdentifierDecl	* iter		804837	0					
ANR	805891	IdentifierDeclType	RListIter *		804837	0					
ANR	805892	Identifier	iter		804837	1					
ANR	805893	IdentifierDeclStatement	RList * list ;	4114:3:103461:103472	804837	3	True				
ANR	805894	IdentifierDecl	* list		804837	0					
ANR	805895	IdentifierDeclType	RList *		804837	0					
ANR	805896	Identifier	list		804837	1					
ANR	805897	ExpressionStatement	"list = r_debug_frames ( core -> dbg , UT64_MAX )"	4115:3:103477:103520	804837	4	True				
ANR	805898	AssignmentExpression	"list = r_debug_frames ( core -> dbg , UT64_MAX )"		804837	0		=			
ANR	805899	Identifier	list		804837	0					
ANR	805900	CallExpression	"r_debug_frames ( core -> dbg , UT64_MAX )"		804837	1					
ANR	805901	Callee	r_debug_frames		804837	0					
ANR	805902	Identifier	r_debug_frames		804837	0					
ANR	805903	ArgumentList	core -> dbg		804837	1					
ANR	805904	Argument	core -> dbg		804837	0					
ANR	805905	PtrMemberAccess	core -> dbg		804837	0					
ANR	805906	Identifier	core		804837	0					
ANR	805907	Identifier	dbg		804837	1					
ANR	805908	Argument	UT64_MAX		804837	1					
ANR	805909	Identifier	UT64_MAX		804837	0					
ANR	805910	ExpressionStatement	i = 0	4116:3:103525:103530	804837	5	True				
ANR	805911	AssignmentExpression	i = 0		804837	0		=			
ANR	805912	Identifier	i		804837	0					
ANR	805913	PrimaryExpression	0		804837	1					
ANR	805914	Statement	r_list_foreach	4117:3:103535:103548	804837	6	True				
ANR	805915	Statement	(	4117:18:103550:103550	804837	7	True				
ANR	805916	Statement	list	4117:19:103551:103554	804837	8	True				
ANR	805917	Statement	","	4117:23:103555:103555	804837	9	True				
ANR	805918	Statement	iter	4117:25:103557:103560	804837	10	True				
ANR	805919	Statement	","	4117:29:103561:103561	804837	11	True				
ANR	805920	Statement	frame	4117:31:103563:103567	804837	12	True				
ANR	805921	Statement	)	4117:36:103568:103568	804837	13	True				
ANR	805922	CompoundStatement		179:38:4235:4235	804837	14					
ANR	805923	SwitchStatement	switch ( each [ 3 ] )		804837	0					
ANR	805924	Condition	each [ 3 ]	4118:12:103584:103590	804837	0	True				
ANR	805925	ArrayIndexing	each [ 3 ]		804837	0					
ANR	805926	Identifier	each		804837	0					
ANR	805927	PrimaryExpression	3		804837	1					
ANR	805928	CompoundStatement		180:21:4258:4258	804837	1					
ANR	805929	Label	case 'b' :	4119:4:103599:103607	804837	0	True				
ANR	805930	ExpressionStatement	"r_core_seek ( core , frame -> bp , 1 )"	4120:5:103614:103646	804837	1	True				
ANR	805931	CallExpression	"r_core_seek ( core , frame -> bp , 1 )"		804837	0					
ANR	805932	Callee	r_core_seek		804837	0					
ANR	805933	Identifier	r_core_seek		804837	0					
ANR	805934	ArgumentList	core		804837	1					
ANR	805935	Argument	core		804837	0					
ANR	805936	Identifier	core		804837	0					
ANR	805937	Argument	frame -> bp		804837	1					
ANR	805938	PtrMemberAccess	frame -> bp		804837	0					
ANR	805939	Identifier	frame		804837	0					
ANR	805940	Identifier	bp		804837	1					
ANR	805941	Argument	1		804837	2					
ANR	805942	PrimaryExpression	1		804837	0					
ANR	805943	BreakStatement	break ;	4121:5:103653:103658	804837	2	True				
ANR	805944	Label	case 's' :	4122:4:103664:103672	804837	3	True				
ANR	805945	ExpressionStatement	"r_core_seek ( core , frame -> sp , 1 )"	4123:5:103679:103711	804837	4	True				
ANR	805946	CallExpression	"r_core_seek ( core , frame -> sp , 1 )"		804837	0					
ANR	805947	Callee	r_core_seek		804837	0					
ANR	805948	Identifier	r_core_seek		804837	0					
ANR	805949	ArgumentList	core		804837	1					
ANR	805950	Argument	core		804837	0					
ANR	805951	Identifier	core		804837	0					
ANR	805952	Argument	frame -> sp		804837	1					
ANR	805953	PtrMemberAccess	frame -> sp		804837	0					
ANR	805954	Identifier	frame		804837	0					
ANR	805955	Identifier	sp		804837	1					
ANR	805956	Argument	1		804837	2					
ANR	805957	PrimaryExpression	1		804837	0					
ANR	805958	BreakStatement	break ;	4124:5:103718:103723	804837	5	True				
ANR	805959	Label	default :	4125:4:103729:103736	804837	6	True				
ANR	805960	Identifier	default		804837	0					
ANR	805961	Label	case 'a' :	4126:4:103742:103750	804837	7	True				
ANR	805962	ExpressionStatement	"r_core_seek ( core , frame -> addr , 1 )"	4127:5:103757:103791	804837	8	True				
ANR	805963	CallExpression	"r_core_seek ( core , frame -> addr , 1 )"		804837	0					
ANR	805964	Callee	r_core_seek		804837	0					
ANR	805965	Identifier	r_core_seek		804837	0					
ANR	805966	ArgumentList	core		804837	1					
ANR	805967	Argument	core		804837	0					
ANR	805968	Identifier	core		804837	0					
ANR	805969	Argument	frame -> addr		804837	1					
ANR	805970	PtrMemberAccess	frame -> addr		804837	0					
ANR	805971	Identifier	frame		804837	0					
ANR	805972	Identifier	addr		804837	1					
ANR	805973	Argument	1		804837	2					
ANR	805974	PrimaryExpression	1		804837	0					
ANR	805975	BreakStatement	break ;	4128:5:103798:103803	804837	9	True				
ANR	805976	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	4130:4:103815:103840	804837	1	True				
ANR	805977	CallExpression	"r_core_cmd ( core , cmd , 0 )"		804837	0					
ANR	805978	Callee	r_core_cmd		804837	0					
ANR	805979	Identifier	r_core_cmd		804837	0					
ANR	805980	ArgumentList	core		804837	1					
ANR	805981	Argument	core		804837	0					
ANR	805982	Identifier	core		804837	0					
ANR	805983	Argument	cmd		804837	1					
ANR	805984	Identifier	cmd		804837	0					
ANR	805985	Argument	0		804837	2					
ANR	805986	PrimaryExpression	0		804837	0					
ANR	805987	ExpressionStatement	r_cons_newline ( )	4131:4:103846:103863	804837	2	True				
ANR	805988	CallExpression	r_cons_newline ( )		804837	0					
ANR	805989	Callee	r_cons_newline		804837	0					
ANR	805990	Identifier	r_cons_newline		804837	0					
ANR	805991	ArgumentList			804837	1					
ANR	805992	ExpressionStatement	i ++	4132:4:103869:103872	804837	3	True				
ANR	805993	PostIncDecOperationExpression	i ++		804837	0					
ANR	805994	Identifier	i		804837	0					
ANR	805995	IncDec	++		804837	1					
ANR	805996	ExpressionStatement	"r_core_seek ( core , oseek , 0 )"	4134:3:103882:103910	804837	15	True				
ANR	805997	CallExpression	"r_core_seek ( core , oseek , 0 )"		804837	0					
ANR	805998	Callee	r_core_seek		804837	0					
ANR	805999	Identifier	r_core_seek		804837	0					
ANR	806000	ArgumentList	core		804837	1					
ANR	806001	Argument	core		804837	0					
ANR	806002	Identifier	core		804837	0					
ANR	806003	Argument	oseek		804837	1					
ANR	806004	Identifier	oseek		804837	0					
ANR	806005	Argument	0		804837	2					
ANR	806006	PrimaryExpression	0		804837	0					
ANR	806007	ExpressionStatement	r_list_free ( list )	4135:3:103915:103933	804837	16	True				
ANR	806008	CallExpression	r_list_free ( list )		804837	0					
ANR	806009	Callee	r_list_free		804837	0					
ANR	806010	Identifier	r_list_free		804837	0					
ANR	806011	ArgumentList	list		804837	1					
ANR	806012	Argument	list		804837	0					
ANR	806013	Identifier	list		804837	0					
ANR	806014	ElseStatement	else		804837	0					
ANR	806015	CompoundStatement		198:9:4609:4609	804837	0					
ANR	806016	ExpressionStatement	"eprintf ( ""Invalid for-each statement. Use @@=dbt[abs]\\n"" )"	4137:3:103949:104005	804837	0	True				
ANR	806017	CallExpression	"eprintf ( ""Invalid for-each statement. Use @@=dbt[abs]\\n"" )"		804837	0					
ANR	806018	Callee	eprintf		804837	0					
ANR	806019	Identifier	eprintf		804837	0					
ANR	806020	ArgumentList	"""Invalid for-each statement. Use @@=dbt[abs]\\n"""		804837	1					
ANR	806021	Argument	"""Invalid for-each statement. Use @@=dbt[abs]\\n"""		804837	0					
ANR	806022	PrimaryExpression	"""Invalid for-each statement. Use @@=dbt[abs]\\n"""		804837	0					
ANR	806023	BreakStatement	break ;	4139:2:104013:104018	804837	30	True				
ANR	806024	Label	case 'k' :	4140:1:104021:104029	804837	31	True				
ANR	806025	CompoundStatement		205:2:4741:4808	804837	32					
ANR	806026	IdentifierDeclStatement	"char * out = sdb_querys ( core -> sdb , NULL , 0 , str + ( ( str [ 1 ] ) ? 2 : 1 ) ) ;"	4143:2:104076:104143	804837	0	True				
ANR	806027	IdentifierDecl	"* out = sdb_querys ( core -> sdb , NULL , 0 , str + ( ( str [ 1 ] ) ? 2 : 1 ) )"		804837	0					
ANR	806028	IdentifierDeclType	char *		804837	0					
ANR	806029	Identifier	out		804837	1					
ANR	806030	AssignmentExpression	"* out = sdb_querys ( core -> sdb , NULL , 0 , str + ( ( str [ 1 ] ) ? 2 : 1 ) )"		804837	2		=			
ANR	806031	Identifier	out		804837	0					
ANR	806032	CallExpression	"sdb_querys ( core -> sdb , NULL , 0 , str + ( ( str [ 1 ] ) ? 2 : 1 ) )"		804837	1					
ANR	806033	Callee	sdb_querys		804837	0					
ANR	806034	Identifier	sdb_querys		804837	0					
ANR	806035	ArgumentList	core -> sdb		804837	1					
ANR	806036	Argument	core -> sdb		804837	0					
ANR	806037	PtrMemberAccess	core -> sdb		804837	0					
ANR	806038	Identifier	core		804837	0					
ANR	806039	Identifier	sdb		804837	1					
ANR	806040	Argument	NULL		804837	1					
ANR	806041	Identifier	NULL		804837	0					
ANR	806042	Argument	0		804837	2					
ANR	806043	PrimaryExpression	0		804837	0					
ANR	806044	Argument	str + ( ( str [ 1 ] ) ? 2 : 1 )		804837	3					
ANR	806045	AdditiveExpression	str + ( ( str [ 1 ] ) ? 2 : 1 )		804837	0		+			
ANR	806046	Identifier	str		804837	0					
ANR	806047	ConditionalExpression	( str [ 1 ] ) ? 2 : 1		804837	1					
ANR	806048	Condition	str [ 1 ]		804837	0					
ANR	806049	ArrayIndexing	str [ 1 ]		804837	0					
ANR	806050	Identifier	str		804837	0					
ANR	806051	PrimaryExpression	1		804837	1					
ANR	806052	PrimaryExpression	2		804837	1					
ANR	806053	PrimaryExpression	1		804837	2					
ANR	806054	IfStatement	if ( out )		804837	1					
ANR	806055	Condition	out	4144:6:104151:104153	804837	0	True				
ANR	806056	Identifier	out		804837	0					
ANR	806057	CompoundStatement		206:11:4821:4821	804837	1					
ANR	806058	ExpressionStatement	each = out	4145:3:104161:104171	804837	0	True				
ANR	806059	AssignmentExpression	each = out		804837	0		=			
ANR	806060	Identifier	each		804837	0					
ANR	806061	Identifier	out		804837	1					
ANR	806062	DoStatement	do		804837	1					
ANR	806063	CompoundStatement		208:6:4844:4844	804837	0					
ANR	806064	WhileStatement	while ( * each == ' ' )		804837	0					
ANR	806065	Condition	* each == ' '	4147:11:104192:104203	804837	0	True				
ANR	806066	EqualityExpression	* each == ' '		804837	0		==			
ANR	806067	UnaryOperationExpression	* each		804837	0					
ANR	806068	UnaryOperator	*		804837	0					
ANR	806069	Identifier	each		804837	1					
ANR	806070	PrimaryExpression	' '		804837	1					
ANR	806071	CompoundStatement		209:25:4871:4871	804837	1					
ANR	806072	ExpressionStatement	each ++	4148:5:104213:104219	804837	0	True				
ANR	806073	PostIncDecOperationExpression	each ++		804837	0					
ANR	806074	Identifier	each		804837	0					
ANR	806075	IncDec	++		804837	1					
ANR	806076	IfStatement	if ( ! * each )		804837	1					
ANR	806077	Condition	! * each	4150:8:104235:104240	804837	0	True				
ANR	806078	UnaryOperationExpression	! * each		804837	0					
ANR	806079	UnaryOperator	!		804837	0					
ANR	806080	UnaryOperationExpression	* each		804837	1					
ANR	806081	UnaryOperator	*		804837	0					
ANR	806082	Identifier	each		804837	1					
ANR	806083	CompoundStatement		212:16:4908:4908	804837	1					
ANR	806084	BreakStatement	break ;	4151:5:104250:104255	804837	0	True				
ANR	806085	ExpressionStatement	"str = strchr ( each , ' ' )"	4153:4:104267:104291	804837	2	True				
ANR	806086	AssignmentExpression	"str = strchr ( each , ' ' )"		804837	0		=			
ANR	806087	Identifier	str		804837	0					
ANR	806088	CallExpression	"strchr ( each , ' ' )"		804837	1					
ANR	806089	Callee	strchr		804837	0					
ANR	806090	Identifier	strchr		804837	0					
ANR	806091	ArgumentList	each		804837	1					
ANR	806092	Argument	each		804837	0					
ANR	806093	Identifier	each		804837	0					
ANR	806094	Argument	' '		804837	1					
ANR	806095	PrimaryExpression	' '		804837	0					
ANR	806096	IfStatement	if ( str )		804837	3					
ANR	806097	Condition	str	4154:8:104301:104303	804837	0	True				
ANR	806098	Identifier	str		804837	0					
ANR	806099	CompoundStatement		216:13:4971:4971	804837	1					
ANR	806100	ExpressionStatement	* str = '\\0'	4155:5:104313:104324	804837	0	True				
ANR	806101	AssignmentExpression	* str = '\\0'		804837	0		=			
ANR	806102	UnaryOperationExpression	* str		804837	0					
ANR	806103	UnaryOperator	*		804837	0					
ANR	806104	Identifier	str		804837	1					
ANR	806105	PrimaryExpression	'\\0'		804837	1					
ANR	806106	ExpressionStatement	"addr = r_num_math ( core -> num , each )"	4156:5:104331:104366	804837	1	True				
ANR	806107	AssignmentExpression	"addr = r_num_math ( core -> num , each )"		804837	0		=			
ANR	806108	Identifier	addr		804837	0					
ANR	806109	CallExpression	"r_num_math ( core -> num , each )"		804837	1					
ANR	806110	Callee	r_num_math		804837	0					
ANR	806111	Identifier	r_num_math		804837	0					
ANR	806112	ArgumentList	core -> num		804837	1					
ANR	806113	Argument	core -> num		804837	0					
ANR	806114	PtrMemberAccess	core -> num		804837	0					
ANR	806115	Identifier	core		804837	0					
ANR	806116	Identifier	num		804837	1					
ANR	806117	Argument	each		804837	1					
ANR	806118	Identifier	each		804837	0					
ANR	806119	ExpressionStatement	* str = ' '	4157:5:104373:104383	804837	2	True				
ANR	806120	AssignmentExpression	* str = ' '		804837	0		=			
ANR	806121	UnaryOperationExpression	* str		804837	0					
ANR	806122	UnaryOperator	*		804837	0					
ANR	806123	Identifier	str		804837	1					
ANR	806124	PrimaryExpression	' '		804837	1					
ANR	806125	ElseStatement	else		804837	0					
ANR	806126	CompoundStatement		220:11:5061:5061	804837	0					
ANR	806127	ExpressionStatement	"addr = r_num_math ( core -> num , each )"	4159:5:104403:104438	804837	0	True				
ANR	806128	AssignmentExpression	"addr = r_num_math ( core -> num , each )"		804837	0		=			
ANR	806129	Identifier	addr		804837	0					
ANR	806130	CallExpression	"r_num_math ( core -> num , each )"		804837	1					
ANR	806131	Callee	r_num_math		804837	0					
ANR	806132	Identifier	r_num_math		804837	0					
ANR	806133	ArgumentList	core -> num		804837	1					
ANR	806134	Argument	core -> num		804837	0					
ANR	806135	PtrMemberAccess	core -> num		804837	0					
ANR	806136	Identifier	core		804837	0					
ANR	806137	Identifier	num		804837	1					
ANR	806138	Argument	each		804837	1					
ANR	806139	Identifier	each		804837	0					
ANR	806140	ExpressionStatement	each = str + 1	4162:4:104495:104509	804837	4	True				
ANR	806141	AssignmentExpression	each = str + 1		804837	0		=			
ANR	806142	Identifier	each		804837	0					
ANR	806143	AdditiveExpression	str + 1		804837	1		+			
ANR	806144	Identifier	str		804837	0					
ANR	806145	PrimaryExpression	1		804837	1					
ANR	806146	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	4163:4:104515:104542	804837	5	True				
ANR	806147	CallExpression	"r_core_seek ( core , addr , 1 )"		804837	0					
ANR	806148	Callee	r_core_seek		804837	0					
ANR	806149	Identifier	r_core_seek		804837	0					
ANR	806150	ArgumentList	core		804837	1					
ANR	806151	Argument	core		804837	0					
ANR	806152	Identifier	core		804837	0					
ANR	806153	Argument	addr		804837	1					
ANR	806154	Identifier	addr		804837	0					
ANR	806155	Argument	1		804837	2					
ANR	806156	PrimaryExpression	1		804837	0					
ANR	806157	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	4164:4:104548:104573	804837	6	True				
ANR	806158	CallExpression	"r_core_cmd ( core , cmd , 0 )"		804837	0					
ANR	806159	Callee	r_core_cmd		804837	0					
ANR	806160	Identifier	r_core_cmd		804837	0					
ANR	806161	ArgumentList	core		804837	1					
ANR	806162	Argument	core		804837	0					
ANR	806163	Identifier	core		804837	0					
ANR	806164	Argument	cmd		804837	1					
ANR	806165	Identifier	cmd		804837	0					
ANR	806166	Argument	0		804837	2					
ANR	806167	PrimaryExpression	0		804837	0					
ANR	806168	ExpressionStatement	r_cons_flush ( )	4165:4:104579:104594	804837	7	True				
ANR	806169	CallExpression	r_cons_flush ( )		804837	0					
ANR	806170	Callee	r_cons_flush		804837	0					
ANR	806171	Identifier	r_cons_flush		804837	0					
ANR	806172	ArgumentList			804837	1					
ANR	806173	Condition	str != NULL	4166:12:104608:104618	804837	1	True				
ANR	806174	EqualityExpression	str != NULL		804837	0		!=			
ANR	806175	Identifier	str		804837	0					
ANR	806176	Identifier	NULL		804837	1					
ANR	806177	ExpressionStatement	free ( out )	4167:3:104625:104635	804837	2	True				
ANR	806178	CallExpression	free ( out )		804837	0					
ANR	806179	Callee	free		804837	0					
ANR	806180	Identifier	free		804837	0					
ANR	806181	ArgumentList	out		804837	1					
ANR	806182	Argument	out		804837	0					
ANR	806183	Identifier	out		804837	0					
ANR	806184	BreakStatement	break ;	4170:2:104647:104652	804837	33	True				
ANR	806185	Label	case '.' :	4171:1:104655:104663	804837	34	True				
ANR	806186	IfStatement	if ( each [ 1 ] == '(' )		804837	35					
ANR	806187	Condition	each [ 1 ] == '('	4172:6:104680:104693	804837	0	True				
ANR	806188	EqualityExpression	each [ 1 ] == '('		804837	0		==			
ANR	806189	ArrayIndexing	each [ 1 ]		804837	0					
ANR	806190	Identifier	each		804837	0					
ANR	806191	PrimaryExpression	1		804837	1					
ANR	806192	PrimaryExpression	'('		804837	1					
ANR	806193	CompoundStatement		235:3:5366:5381	804837	1					
ANR	806194	IdentifierDeclStatement	char cmd2 [ 1024 ] ;	4173:3:104701:104716	804837	0	True				
ANR	806195	IdentifierDecl	cmd2 [ 1024 ]		804837	0					
ANR	806196	IdentifierDeclType	char [ 1024 ]		804837	0					
ANR	806197	Identifier	cmd2		804837	1					
ANR	806198	PrimaryExpression	1024		804837	2					
ANR	806199	ExpressionStatement	i = 0	4175:3:104749:104754	804837	1	True				
ANR	806200	AssignmentExpression	i = 0		804837	0		=			
ANR	806201	Identifier	i		804837	0					
ANR	806202	PrimaryExpression	0		804837	1					
ANR	806203	ForStatement	for ( core -> rcmd -> macro . counter = 0 ; i < 999 ; core -> rcmd -> macro . counter ++ )		804837	2					
ANR	806204	ForInit	core -> rcmd -> macro . counter = 0 ;	4176:8:104764:104793	804837	0	True				
ANR	806205	AssignmentExpression	core -> rcmd -> macro . counter = 0		804837	0		=			
ANR	806206	MemberAccess	core -> rcmd -> macro . counter		804837	0					
ANR	806207	PtrMemberAccess	core -> rcmd -> macro		804837	0					
ANR	806208	PtrMemberAccess	core -> rcmd		804837	0					
ANR	806209	Identifier	core		804837	0					
ANR	806210	Identifier	rcmd		804837	1					
ANR	806211	Identifier	macro		804837	1					
ANR	806212	Identifier	counter		804837	1					
ANR	806213	PrimaryExpression	0		804837	1					
ANR	806214	Condition	i < 999	4176:39:104795:104801	804837	1	True				
ANR	806215	RelationalExpression	i < 999		804837	0		<			
ANR	806216	Identifier	i		804837	0					
ANR	806217	PrimaryExpression	999		804837	1					
ANR	806218	PostIncDecOperationExpression	core -> rcmd -> macro . counter ++	4176:48:104804:104830	804837	2	True				
ANR	806219	MemberAccess	core -> rcmd -> macro . counter		804837	0					
ANR	806220	PtrMemberAccess	core -> rcmd -> macro		804837	0					
ANR	806221	PtrMemberAccess	core -> rcmd		804837	0					
ANR	806222	Identifier	core		804837	0					
ANR	806223	Identifier	rcmd		804837	1					
ANR	806224	Identifier	macro		804837	1					
ANR	806225	Identifier	counter		804837	1					
ANR	806226	IncDec	++		804837	1					
ANR	806227	CompoundStatement		238:77:5498:5498	804837	3					
ANR	806228	IfStatement	if ( r_cons_is_breaked ( ) )		804837	0					
ANR	806229	Condition	r_cons_is_breaked ( )	4177:8:104843:104862	804837	0	True				
ANR	806230	CallExpression	r_cons_is_breaked ( )		804837	0					
ANR	806231	Callee	r_cons_is_breaked		804837	0					
ANR	806232	Identifier	r_cons_is_breaked		804837	0					
ANR	806233	ArgumentList			804837	1					
ANR	806234	CompoundStatement		239:30:5530:5530	804837	1					
ANR	806235	BreakStatement	break ;	4178:5:104872:104877	804837	0	True				
ANR	806236	ExpressionStatement	"r_cmd_macro_call ( & core -> rcmd -> macro , each + 2 )"	4180:4:104889:104936	804837	1	True				
ANR	806237	CallExpression	"r_cmd_macro_call ( & core -> rcmd -> macro , each + 2 )"		804837	0					
ANR	806238	Callee	r_cmd_macro_call		804837	0					
ANR	806239	Identifier	r_cmd_macro_call		804837	0					
ANR	806240	ArgumentList	& core -> rcmd -> macro		804837	1					
ANR	806241	Argument	& core -> rcmd -> macro		804837	0					
ANR	806242	UnaryOperationExpression	& core -> rcmd -> macro		804837	0					
ANR	806243	UnaryOperator	&		804837	0					
ANR	806244	PtrMemberAccess	core -> rcmd -> macro		804837	1					
ANR	806245	PtrMemberAccess	core -> rcmd		804837	0					
ANR	806246	Identifier	core		804837	0					
ANR	806247	Identifier	rcmd		804837	1					
ANR	806248	Identifier	macro		804837	1					
ANR	806249	Argument	each + 2		804837	1					
ANR	806250	AdditiveExpression	each + 2		804837	0		+			
ANR	806251	Identifier	each		804837	0					
ANR	806252	PrimaryExpression	2		804837	1					
ANR	806253	IfStatement	if ( ! core -> rcmd -> macro . brk_value )		804837	2					
ANR	806254	Condition	! core -> rcmd -> macro . brk_value	4181:8:104946:104973	804837	0	True				
ANR	806255	UnaryOperationExpression	! core -> rcmd -> macro . brk_value		804837	0					
ANR	806256	UnaryOperator	!		804837	0					
ANR	806257	MemberAccess	core -> rcmd -> macro . brk_value		804837	1					
ANR	806258	PtrMemberAccess	core -> rcmd -> macro		804837	0					
ANR	806259	PtrMemberAccess	core -> rcmd		804837	0					
ANR	806260	Identifier	core		804837	0					
ANR	806261	Identifier	rcmd		804837	1					
ANR	806262	Identifier	macro		804837	1					
ANR	806263	Identifier	brk_value		804837	1					
ANR	806264	CompoundStatement		243:38:5641:5641	804837	1					
ANR	806265	BreakStatement	break ;	4182:5:104983:104988	804837	0	True				
ANR	806266	ExpressionStatement	addr = core -> rcmd -> macro . _brk_value	4184:4:105000:105035	804837	3	True				
ANR	806267	AssignmentExpression	addr = core -> rcmd -> macro . _brk_value		804837	0		=			
ANR	806268	Identifier	addr		804837	0					
ANR	806269	MemberAccess	core -> rcmd -> macro . _brk_value		804837	1					
ANR	806270	PtrMemberAccess	core -> rcmd -> macro		804837	0					
ANR	806271	PtrMemberAccess	core -> rcmd		804837	0					
ANR	806272	Identifier	core		804837	0					
ANR	806273	Identifier	rcmd		804837	1					
ANR	806274	Identifier	macro		804837	1					
ANR	806275	Identifier	_brk_value		804837	1					
ANR	806276	Statement	sprintf	4185:4:105041:105047	804837	4	True				
ANR	806277	Statement	(	4185:12:105049:105049	804837	5	True				
ANR	806278	Statement	cmd2	4185:13:105050:105053	804837	6	True				
ANR	806279	Statement	","	4185:17:105054:105054	804837	7	True				
ANR	806280	Statement	"""%s @ 0x%08"""	4185:19:105056:105067	804837	8	True				
ANR	806281	Statement	PFMT64x	4185:31:105068:105074	804837	9	True				
ANR	806282	Statement	""""""	4185:38:105075:105076	804837	10	True				
ANR	806283	Statement	","	4185:40:105077:105077	804837	11	True				
ANR	806284	Statement	cmd	4185:42:105079:105081	804837	12	True				
ANR	806285	Statement	","	4185:45:105082:105082	804837	13	True				
ANR	806286	Statement	addr	4185:47:105084:105087	804837	14	True				
ANR	806287	Statement	)	4185:51:105088:105088	804837	15	True				
ANR	806288	ExpressionStatement		4185:52:105089:105089	804837	16	True				
ANR	806289	Statement	eprintf	4186:4:105095:105101	804837	17	True				
ANR	806290	Statement	(	4186:12:105103:105103	804837	18	True				
ANR	806291	Statement	"""0x%08"""	4186:13:105104:105110	804837	19	True				
ANR	806292	Statement	PFMT64x	4186:20:105111:105117	804837	20	True				
ANR	806293	Statement	""" (%s)\\n"""	4186:27:105118:105126	804837	21	True				
ANR	806294	Statement	","	4186:36:105127:105127	804837	22	True				
ANR	806295	Statement	addr	4186:38:105129:105132	804837	23	True				
ANR	806296	Statement	","	4186:42:105133:105133	804837	24	True				
ANR	806297	Statement	cmd2	4186:44:105135:105138	804837	25	True				
ANR	806298	Statement	)	4186:48:105139:105139	804837	26	True				
ANR	806299	ExpressionStatement		4186:49:105140:105140	804837	27	True				
ANR	806300	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	4187:4:105146:105173	804837	28	True				
ANR	806301	CallExpression	"r_core_seek ( core , addr , 1 )"		804837	0					
ANR	806302	Callee	r_core_seek		804837	0					
ANR	806303	Identifier	r_core_seek		804837	0					
ANR	806304	ArgumentList	core		804837	1					
ANR	806305	Argument	core		804837	0					
ANR	806306	Identifier	core		804837	0					
ANR	806307	Argument	addr		804837	1					
ANR	806308	Identifier	addr		804837	0					
ANR	806309	Argument	1		804837	2					
ANR	806310	PrimaryExpression	1		804837	0					
ANR	806311	ExpressionStatement	"r_core_cmd ( core , cmd2 , 0 )"	4188:4:105179:105205	804837	29	True				
ANR	806312	CallExpression	"r_core_cmd ( core , cmd2 , 0 )"		804837	0					
ANR	806313	Callee	r_core_cmd		804837	0					
ANR	806314	Identifier	r_core_cmd		804837	0					
ANR	806315	ArgumentList	core		804837	1					
ANR	806316	Argument	core		804837	0					
ANR	806317	Identifier	core		804837	0					
ANR	806318	Argument	cmd2		804837	1					
ANR	806319	Identifier	cmd2		804837	0					
ANR	806320	Argument	0		804837	2					
ANR	806321	PrimaryExpression	0		804837	0					
ANR	806322	ExpressionStatement	i ++	4189:4:105211:105214	804837	30	True				
ANR	806323	PostIncDecOperationExpression	i ++		804837	0					
ANR	806324	Identifier	i		804837	0					
ANR	806325	IncDec	++		804837	1					
ANR	806326	ElseStatement	else		804837	0					
ANR	806327	CompoundStatement		256:3:5939:5981	804837	0					
ANR	806328	IdentifierDeclStatement	char buf [ 1024 ] ;	4192:3:105235:105249	804837	0	True				
ANR	806329	IdentifierDecl	buf [ 1024 ]		804837	0					
ANR	806330	IdentifierDeclType	char [ 1024 ]		804837	0					
ANR	806331	Identifier	buf		804837	1					
ANR	806332	PrimaryExpression	1024		804837	2					
ANR	806333	IdentifierDeclStatement	char cmd2 [ 1024 ] ;	4193:3:105254:105269	804837	1	True				
ANR	806334	IdentifierDecl	cmd2 [ 1024 ]		804837	0					
ANR	806335	IdentifierDeclType	char [ 1024 ]		804837	0					
ANR	806336	Identifier	cmd2		804837	1					
ANR	806337	PrimaryExpression	1024		804837	2					
ANR	806338	IdentifierDeclStatement	"FILE * fd = r_sandbox_fopen ( each + 1 , ""r"" ) ;"	4194:3:105274:105316	804837	2	True				
ANR	806339	IdentifierDecl	"* fd = r_sandbox_fopen ( each + 1 , ""r"" )"		804837	0					
ANR	806340	IdentifierDeclType	FILE *		804837	0					
ANR	806341	Identifier	fd		804837	1					
ANR	806342	AssignmentExpression	"* fd = r_sandbox_fopen ( each + 1 , ""r"" )"		804837	2		=			
ANR	806343	Identifier	fd		804837	0					
ANR	806344	CallExpression	"r_sandbox_fopen ( each + 1 , ""r"" )"		804837	1					
ANR	806345	Callee	r_sandbox_fopen		804837	0					
ANR	806346	Identifier	r_sandbox_fopen		804837	0					
ANR	806347	ArgumentList	each + 1		804837	1					
ANR	806348	Argument	each + 1		804837	0					
ANR	806349	AdditiveExpression	each + 1		804837	0		+			
ANR	806350	Identifier	each		804837	0					
ANR	806351	PrimaryExpression	1		804837	1					
ANR	806352	Argument	"""r"""		804837	1					
ANR	806353	PrimaryExpression	"""r"""		804837	0					
ANR	806354	IfStatement	if ( fd )		804837	3					
ANR	806355	Condition	fd	4195:7:105325:105326	804837	0	True				
ANR	806356	Identifier	fd		804837	0					
ANR	806357	CompoundStatement		257:11:5994:5994	804837	1					
ANR	806358	ExpressionStatement	core -> rcmd -> macro . counter = 0	4196:4:105335:105364	804837	0	True				
ANR	806359	AssignmentExpression	core -> rcmd -> macro . counter = 0		804837	0		=			
ANR	806360	MemberAccess	core -> rcmd -> macro . counter		804837	0					
ANR	806361	PtrMemberAccess	core -> rcmd -> macro		804837	0					
ANR	806362	PtrMemberAccess	core -> rcmd		804837	0					
ANR	806363	Identifier	core		804837	0					
ANR	806364	Identifier	rcmd		804837	1					
ANR	806365	Identifier	macro		804837	1					
ANR	806366	Identifier	counter		804837	1					
ANR	806367	PrimaryExpression	0		804837	1					
ANR	806368	WhileStatement	while ( ! feof ( fd ) )		804837	1					
ANR	806369	Condition	! feof ( fd )	4197:11:105377:105386	804837	0	True				
ANR	806370	UnaryOperationExpression	! feof ( fd )		804837	0					
ANR	806371	UnaryOperator	!		804837	0					
ANR	806372	CallExpression	feof ( fd )		804837	1					
ANR	806373	Callee	feof		804837	0					
ANR	806374	Identifier	feof		804837	0					
ANR	806375	ArgumentList	fd		804837	1					
ANR	806376	Argument	fd		804837	0					
ANR	806377	Identifier	fd		804837	0					
ANR	806378	CompoundStatement		259:23:6054:6054	804837	1					
ANR	806379	ExpressionStatement	buf [ 0 ] = '\\0'	4198:5:105396:105409	804837	0	True				
ANR	806380	AssignmentExpression	buf [ 0 ] = '\\0'		804837	0		=			
ANR	806381	ArrayIndexing	buf [ 0 ]		804837	0					
ANR	806382	Identifier	buf		804837	0					
ANR	806383	PrimaryExpression	0		804837	1					
ANR	806384	PrimaryExpression	'\\0'		804837	1					
ANR	806385	IfStatement	"if ( ! fgets ( buf , sizeof ( buf ) , fd ) )"		804837	1					
ANR	806386	Condition	"! fgets ( buf , sizeof ( buf ) , fd )"	4199:9:105420:105449	804837	0	True				
ANR	806387	UnaryOperationExpression	"! fgets ( buf , sizeof ( buf ) , fd )"		804837	0					
ANR	806388	UnaryOperator	!		804837	0					
ANR	806389	CallExpression	"fgets ( buf , sizeof ( buf ) , fd )"		804837	1					
ANR	806390	Callee	fgets		804837	0					
ANR	806391	Identifier	fgets		804837	0					
ANR	806392	ArgumentList	buf		804837	1					
ANR	806393	Argument	buf		804837	0					
ANR	806394	Identifier	buf		804837	0					
ANR	806395	Argument	sizeof ( buf )		804837	1					
ANR	806396	SizeofExpression	sizeof ( buf )		804837	0					
ANR	806397	Sizeof	sizeof		804837	0					
ANR	806398	SizeofOperand	buf		804837	1					
ANR	806399	Argument	fd		804837	2					
ANR	806400	Identifier	fd		804837	0					
ANR	806401	CompoundStatement		261:41:6117:6117	804837	1					
ANR	806402	BreakStatement	break ;	4200:6:105460:105465	804837	0	True				
ANR	806403	ExpressionStatement	"addr = r_num_math ( core -> num , buf )"	4202:5:105479:105513	804837	2	True				
ANR	806404	AssignmentExpression	"addr = r_num_math ( core -> num , buf )"		804837	0		=			
ANR	806405	Identifier	addr		804837	0					
ANR	806406	CallExpression	"r_num_math ( core -> num , buf )"		804837	1					
ANR	806407	Callee	r_num_math		804837	0					
ANR	806408	Identifier	r_num_math		804837	0					
ANR	806409	ArgumentList	core -> num		804837	1					
ANR	806410	Argument	core -> num		804837	0					
ANR	806411	PtrMemberAccess	core -> num		804837	0					
ANR	806412	Identifier	core		804837	0					
ANR	806413	Identifier	num		804837	1					
ANR	806414	Argument	buf		804837	1					
ANR	806415	Identifier	buf		804837	0					
ANR	806416	Statement	eprintf	4203:5:105520:105526	804837	3	True				
ANR	806417	Statement	(	4203:13:105528:105528	804837	4	True				
ANR	806418	Statement	"""0x%08"""	4203:14:105529:105535	804837	5	True				
ANR	806419	Statement	PFMT64x	4203:21:105536:105542	804837	6	True				
ANR	806420	Statement	""": %s\\n"""	4203:28:105543:105550	804837	7	True				
ANR	806421	Statement	","	4203:36:105551:105551	804837	8	True				
ANR	806422	Statement	addr	4203:38:105553:105556	804837	9	True				
ANR	806423	Statement	","	4203:42:105557:105557	804837	10	True				
ANR	806424	Statement	cmd	4203:44:105559:105561	804837	11	True				
ANR	806425	Statement	)	4203:47:105562:105562	804837	12	True				
ANR	806426	ExpressionStatement		4203:48:105563:105563	804837	13	True				
ANR	806427	Statement	sprintf	4204:5:105570:105576	804837	14	True				
ANR	806428	Statement	(	4204:13:105578:105578	804837	15	True				
ANR	806429	Statement	cmd2	4204:14:105579:105582	804837	16	True				
ANR	806430	Statement	","	4204:18:105583:105583	804837	17	True				
ANR	806431	Statement	"""%s @ 0x%08"""	4204:20:105585:105596	804837	18	True				
ANR	806432	Statement	PFMT64x	4204:32:105597:105603	804837	19	True				
ANR	806433	Statement	""""""	4204:39:105604:105605	804837	20	True				
ANR	806434	Statement	","	4204:41:105606:105606	804837	21	True				
ANR	806435	Statement	cmd	4204:43:105608:105610	804837	22	True				
ANR	806436	Statement	","	4204:46:105611:105611	804837	23	True				
ANR	806437	Statement	addr	4204:48:105613:105616	804837	24	True				
ANR	806438	Statement	)	4204:52:105617:105617	804837	25	True				
ANR	806439	ExpressionStatement		4204:53:105618:105618	804837	26	True				
ANR	806440	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	4205:5:105625:105652	804837	27	True				
ANR	806441	CallExpression	"r_core_seek ( core , addr , 1 )"		804837	0					
ANR	806442	Callee	r_core_seek		804837	0					
ANR	806443	Identifier	r_core_seek		804837	0					
ANR	806444	ArgumentList	core		804837	1					
ANR	806445	Argument	core		804837	0					
ANR	806446	Identifier	core		804837	0					
ANR	806447	Argument	addr		804837	1					
ANR	806448	Identifier	addr		804837	0					
ANR	806449	Argument	1		804837	2					
ANR	806450	PrimaryExpression	1		804837	0					
ANR	806451	ExpressionStatement	"r_core_cmd ( core , cmd2 , 0 )"	4206:5:105666:105692	804837	28	True				
ANR	806452	CallExpression	"r_core_cmd ( core , cmd2 , 0 )"		804837	0					
ANR	806453	Callee	r_core_cmd		804837	0					
ANR	806454	Identifier	r_core_cmd		804837	0					
ANR	806455	ArgumentList	core		804837	1					
ANR	806456	Argument	core		804837	0					
ANR	806457	Identifier	core		804837	0					
ANR	806458	Argument	cmd2		804837	1					
ANR	806459	Identifier	cmd2		804837	0					
ANR	806460	Argument	0		804837	2					
ANR	806461	PrimaryExpression	0		804837	0					
ANR	806462	ExpressionStatement	core -> rcmd -> macro . counter ++	4207:5:105699:105726	804837	29	True				
ANR	806463	PostIncDecOperationExpression	core -> rcmd -> macro . counter ++		804837	0					
ANR	806464	MemberAccess	core -> rcmd -> macro . counter		804837	0					
ANR	806465	PtrMemberAccess	core -> rcmd -> macro		804837	0					
ANR	806466	PtrMemberAccess	core -> rcmd		804837	0					
ANR	806467	Identifier	core		804837	0					
ANR	806468	Identifier	rcmd		804837	1					
ANR	806469	Identifier	macro		804837	1					
ANR	806470	Identifier	counter		804837	1					
ANR	806471	IncDec	++		804837	1					
ANR	806472	ExpressionStatement	fclose ( fd )	4209:4:105738:105749	804837	2	True				
ANR	806473	CallExpression	fclose ( fd )		804837	0					
ANR	806474	Callee	fclose		804837	0					
ANR	806475	Identifier	fclose		804837	0					
ANR	806476	ArgumentList	fd		804837	1					
ANR	806477	Argument	fd		804837	0					
ANR	806478	Identifier	fd		804837	0					
ANR	806479	ElseStatement	else		804837	0					
ANR	806480	CompoundStatement		272:10:6426:6426	804837	0					
ANR	806481	ExpressionStatement	"eprintf ( ""cannot open file '%s' to read offsets\\n"" , each + 1 )"	4211:4:105767:105828	804837	0	True				
ANR	806482	CallExpression	"eprintf ( ""cannot open file '%s' to read offsets\\n"" , each + 1 )"		804837	0					
ANR	806483	Callee	eprintf		804837	0					
ANR	806484	Identifier	eprintf		804837	0					
ANR	806485	ArgumentList	"""cannot open file '%s' to read offsets\\n"""		804837	1					
ANR	806486	Argument	"""cannot open file '%s' to read offsets\\n"""		804837	0					
ANR	806487	PrimaryExpression	"""cannot open file '%s' to read offsets\\n"""		804837	0					
ANR	806488	Argument	each + 1		804837	1					
ANR	806489	AdditiveExpression	each + 1		804837	0		+			
ANR	806490	Identifier	each		804837	0					
ANR	806491	PrimaryExpression	1		804837	1					
ANR	806492	BreakStatement	break ;	4214:2:105841:105846	804837	36	True				
ANR	806493	Label	default :	4215:1:105849:105856	804837	37	True				
ANR	806494	Identifier	default		804837	0					
ANR	806495	ExpressionStatement	core -> rcmd -> macro . counter = 0	4216:2:105860:105889	804837	38	True				
ANR	806496	AssignmentExpression	core -> rcmd -> macro . counter = 0		804837	0		=			
ANR	806497	MemberAccess	core -> rcmd -> macro . counter		804837	0					
ANR	806498	PtrMemberAccess	core -> rcmd -> macro		804837	0					
ANR	806499	PtrMemberAccess	core -> rcmd		804837	0					
ANR	806500	Identifier	core		804837	0					
ANR	806501	Identifier	rcmd		804837	1					
ANR	806502	Identifier	macro		804837	1					
ANR	806503	Identifier	counter		804837	1					
ANR	806504	PrimaryExpression	0		804837	1					
ANR	806505	ForStatement	for ( ; * each == ' ' ; each ++ )		804837	39					
ANR	806506	Condition	* each == ' '	4217:9:105900:105911	804837	0	True				
ANR	806507	EqualityExpression	* each == ' '		804837	0		==			
ANR	806508	UnaryOperationExpression	* each		804837	0					
ANR	806509	UnaryOperator	*		804837	0					
ANR	806510	Identifier	each		804837	1					
ANR	806511	PrimaryExpression	' '		804837	1					
ANR	806512	PostIncDecOperationExpression	each ++	4217:23:105914:105919	804837	1	True				
ANR	806513	Identifier	each		804837	0					
ANR	806514	IncDec	++		804837	1					
ANR	806515	CompoundStatement		279:31:6587:6587	804837	2					
ANR	806516	ExpressionStatement		4218:3:105927:105927	804837	0	True				
ANR	806517	ExpressionStatement	i = 0	4220:2:105935:105940	804837	40	True				
ANR	806518	AssignmentExpression	i = 0		804837	0		=			
ANR	806519	Identifier	i		804837	0					
ANR	806520	PrimaryExpression	0		804837	1					
ANR	806521	WhileStatement	while ( str [ i ] )		804837	41					
ANR	806522	Condition	str [ i ]	4221:9:105951:105956	804837	0	True				
ANR	806523	ArrayIndexing	str [ i ]		804837	0					
ANR	806524	Identifier	str		804837	0					
ANR	806525	Identifier	i		804837	1					
ANR	806526	CompoundStatement		283:17:6624:6624	804837	1					
ANR	806527	ExpressionStatement	j = i	4222:3:105964:105969	804837	0	True				
ANR	806528	AssignmentExpression	j = i		804837	0		=			
ANR	806529	Identifier	j		804837	0					
ANR	806530	Identifier	i		804837	1					
ANR	806531	ForStatement	for ( ; str [ j ] && str [ j ] == ' ' ; j ++ )		804837	1					
ANR	806532	Condition	str [ j ] && str [ j ] == ' '	4223:10:105981:106003	804837	0	True				
ANR	806533	AndExpression	str [ j ] && str [ j ] == ' '		804837	0		&&			
ANR	806534	ArrayIndexing	str [ j ]		804837	0					
ANR	806535	Identifier	str		804837	0					
ANR	806536	Identifier	j		804837	1					
ANR	806537	EqualityExpression	str [ j ] == ' '		804837	1		==			
ANR	806538	ArrayIndexing	str [ j ]		804837	0					
ANR	806539	Identifier	str		804837	0					
ANR	806540	Identifier	j		804837	1					
ANR	806541	PrimaryExpression	' '		804837	1					
ANR	806542	PostIncDecOperationExpression	j ++	4223:35:106006:106008	804837	1	True				
ANR	806543	Identifier	j		804837	0					
ANR	806544	IncDec	++		804837	1					
ANR	806545	CompoundStatement		285:40:6676:6676	804837	2					
ANR	806546	ExpressionStatement		4224:4:106017:106017	804837	0	True				
ANR	806547	ForStatement	for ( i = j ; str [ i ] && str [ i ] != ' ' ; i ++ )		804837	2					
ANR	806548	ForInit	i = j ;	4226:8:106047:106052	804837	0	True				
ANR	806549	AssignmentExpression	i = j		804837	0		=			
ANR	806550	Identifier	i		804837	0					
ANR	806551	Identifier	j		804837	1					
ANR	806552	Condition	str [ i ] && str [ i ] != ' '	4226:15:106054:106076	804837	1	True				
ANR	806553	AndExpression	str [ i ] && str [ i ] != ' '		804837	0		&&			
ANR	806554	ArrayIndexing	str [ i ]		804837	0					
ANR	806555	Identifier	str		804837	0					
ANR	806556	Identifier	i		804837	1					
ANR	806557	EqualityExpression	str [ i ] != ' '		804837	1		!=			
ANR	806558	ArrayIndexing	str [ i ]		804837	0					
ANR	806559	Identifier	str		804837	0					
ANR	806560	Identifier	i		804837	1					
ANR	806561	PrimaryExpression	' '		804837	1					
ANR	806562	PostIncDecOperationExpression	i ++	4226:40:106079:106081	804837	2	True				
ANR	806563	Identifier	i		804837	0					
ANR	806564	IncDec	++		804837	1					
ANR	806565	CompoundStatement		288:45:6749:6749	804837	3					
ANR	806566	ExpressionStatement		4227:4:106090:106090	804837	0	True				
ANR	806567	ExpressionStatement	ch = str [ i ]	4229:3:106112:106123	804837	3	True				
ANR	806568	AssignmentExpression	ch = str [ i ]		804837	0		=			
ANR	806569	Identifier	ch		804837	0					
ANR	806570	ArrayIndexing	str [ i ]		804837	1					
ANR	806571	Identifier	str		804837	0					
ANR	806572	Identifier	i		804837	1					
ANR	806573	ExpressionStatement	str [ i ] = '\\0'	4230:3:106128:106141	804837	4	True				
ANR	806574	AssignmentExpression	str [ i ] = '\\0'		804837	0		=			
ANR	806575	ArrayIndexing	str [ i ]		804837	0					
ANR	806576	Identifier	str		804837	0					
ANR	806577	Identifier	i		804837	1					
ANR	806578	PrimaryExpression	'\\0'		804837	1					
ANR	806579	ExpressionStatement	word = strdup ( str + j )	4231:3:106146:106169	804837	5	True				
ANR	806580	AssignmentExpression	word = strdup ( str + j )		804837	0		=			
ANR	806581	Identifier	word		804837	0					
ANR	806582	CallExpression	strdup ( str + j )		804837	1					
ANR	806583	Callee	strdup		804837	0					
ANR	806584	Identifier	strdup		804837	0					
ANR	806585	ArgumentList	str + j		804837	1					
ANR	806586	Argument	str + j		804837	0					
ANR	806587	AdditiveExpression	str + j		804837	0		+			
ANR	806588	Identifier	str		804837	0					
ANR	806589	Identifier	j		804837	1					
ANR	806590	IfStatement	if ( ! word )		804837	6					
ANR	806591	Condition	! word	4232:7:106178:106182	804837	0	True				
ANR	806592	UnaryOperationExpression	! word		804837	0					
ANR	806593	UnaryOperator	!		804837	0					
ANR	806594	Identifier	word		804837	1					
ANR	806595	CompoundStatement		294:14:6850:6850	804837	1					
ANR	806596	BreakStatement	break ;	4233:4:106191:106196	804837	0	True				
ANR	806597	ExpressionStatement	str [ i ] = ch	4235:3:106206:106217	804837	7	True				
ANR	806598	AssignmentExpression	str [ i ] = ch		804837	0		=			
ANR	806599	ArrayIndexing	str [ i ]		804837	0					
ANR	806600	Identifier	str		804837	0					
ANR	806601	Identifier	i		804837	1					
ANR	806602	Identifier	ch		804837	1					
ANR	806603	CompoundStatement		300:4:6955:7022	804837	8					
ANR	806604	IdentifierDeclStatement	const RSpace * flagspace = r_flag_space_cur ( core -> flags ) ;	4237:4:106228:106284	804837	0	True				
ANR	806605	IdentifierDecl	* flagspace = r_flag_space_cur ( core -> flags )		804837	0					
ANR	806606	IdentifierDeclType	const RSpace *		804837	0					
ANR	806607	Identifier	flagspace		804837	1					
ANR	806608	AssignmentExpression	* flagspace = r_flag_space_cur ( core -> flags )		804837	2		=			
ANR	806609	Identifier	flagspace		804837	0					
ANR	806610	CallExpression	r_flag_space_cur ( core -> flags )		804837	1					
ANR	806611	Callee	r_flag_space_cur		804837	0					
ANR	806612	Identifier	r_flag_space_cur		804837	0					
ANR	806613	ArgumentList	core -> flags		804837	1					
ANR	806614	Argument	core -> flags		804837	0					
ANR	806615	PtrMemberAccess	core -> flags		804837	0					
ANR	806616	Identifier	core		804837	0					
ANR	806617	Identifier	flags		804837	1					
ANR	806618	IdentifierDeclStatement	RList * match_flag_items = r_list_newf ( ( RListFree ) r_flag_item_free ) ;	4238:4:106290:106357	804837	1	True				
ANR	806619	IdentifierDecl	* match_flag_items = r_list_newf ( ( RListFree ) r_flag_item_free )		804837	0					
ANR	806620	IdentifierDeclType	RList *		804837	0					
ANR	806621	Identifier	match_flag_items		804837	1					
ANR	806622	AssignmentExpression	* match_flag_items = r_list_newf ( ( RListFree ) r_flag_item_free )		804837	2		=			
ANR	806623	Identifier	match_flag_items		804837	0					
ANR	806624	CallExpression	r_list_newf ( ( RListFree ) r_flag_item_free )		804837	1					
ANR	806625	Callee	r_list_newf		804837	0					
ANR	806626	Identifier	r_list_newf		804837	0					
ANR	806627	ArgumentList	( RListFree ) r_flag_item_free		804837	1					
ANR	806628	Argument	( RListFree ) r_flag_item_free		804837	0					
ANR	806629	CastExpression	( RListFree ) r_flag_item_free		804837	0					
ANR	806630	CastTarget	RListFree		804837	0					
ANR	806631	Identifier	r_flag_item_free		804837	1					
ANR	806632	IfStatement	if ( ! match_flag_items )		804837	2					
ANR	806633	Condition	! match_flag_items	4239:8:106367:106383	804837	0	True				
ANR	806634	UnaryOperationExpression	! match_flag_items		804837	0					
ANR	806635	UnaryOperator	!		804837	0					
ANR	806636	Identifier	match_flag_items		804837	1					
ANR	806637	CompoundStatement		301:27:7051:7051	804837	1					
ANR	806638	BreakStatement	break ;	4240:5:106393:106398	804837	0	True				
ANR	806639	Statement	struct	4247:4:106597:106602	804837	3	True				
ANR	806640	Statement	duplicate_flag_t	4247:11:106604:106619	804837	4	True				
ANR	806641	Statement	u	4247:28:106621:106621	804837	5	True				
ANR	806642	Statement	=	4247:30:106623:106623	804837	6	True				
ANR	806643	CompoundStatement		309:32:7290:7290	804837	7					
ANR	806644	Statement	.	4248:5:106632:106632	804837	0	True				
ANR	806645	Statement	ret	4248:6:106633:106635	804837	1	True				
ANR	806646	Statement	=	4248:10:106637:106637	804837	2	True				
ANR	806647	Statement	match_flag_items	4248:12:106639:106654	804837	3	True				
ANR	806648	Statement	","	4248:28:106655:106655	804837	4	True				
ANR	806649	Statement	.	4249:5:106662:106662	804837	5	True				
ANR	806650	Statement	word	4249:6:106663:106666	804837	6	True				
ANR	806651	Statement	=	4249:11:106668:106668	804837	7	True				
ANR	806652	Statement	word	4249:13:106670:106673	804837	8	True				
ANR	806653	Statement	","	4249:17:106674:106674	804837	9	True				
ANR	806654	ExpressionStatement		4250:5:106681:106681	804837	8	True				
ANR	806655	ExpressionStatement	"r_flag_foreach_space ( core -> flags , flagspace , duplicate_flag , & u )"	4251:4:106687:106752	804837	9	True				
ANR	806656	CallExpression	"r_flag_foreach_space ( core -> flags , flagspace , duplicate_flag , & u )"		804837	0					
ANR	806657	Callee	r_flag_foreach_space		804837	0					
ANR	806658	Identifier	r_flag_foreach_space		804837	0					
ANR	806659	ArgumentList	core -> flags		804837	1					
ANR	806660	Argument	core -> flags		804837	0					
ANR	806661	PtrMemberAccess	core -> flags		804837	0					
ANR	806662	Identifier	core		804837	0					
ANR	806663	Identifier	flags		804837	1					
ANR	806664	Argument	flagspace		804837	1					
ANR	806665	Identifier	flagspace		804837	0					
ANR	806666	Argument	duplicate_flag		804837	2					
ANR	806667	Identifier	duplicate_flag		804837	0					
ANR	806668	Argument	& u		804837	3					
ANR	806669	UnaryOperationExpression	& u		804837	0					
ANR	806670	UnaryOperator	&		804837	0					
ANR	806671	Identifier	u		804837	1					
ANR	806672	Statement	r_list_foreach	4254:4:106794:106807	804837	10	True				
ANR	806673	Statement	(	4254:19:106809:106809	804837	11	True				
ANR	806674	Statement	match_flag_items	4254:20:106810:106825	804837	12	True				
ANR	806675	Statement	","	4254:36:106826:106826	804837	13	True				
ANR	806676	Statement	iter	4254:38:106828:106831	804837	14	True				
ANR	806677	Statement	","	4254:42:106832:106832	804837	15	True				
ANR	806678	Statement	flag	4254:44:106834:106837	804837	16	True				
ANR	806679	Statement	)	4254:48:106838:106838	804837	17	True				
ANR	806680	CompoundStatement		322:5:7589:7611	804837	18					
ANR	806681	IfStatement	if ( r_cons_is_breaked ( ) )		804837	0					
ANR	806682	Condition	r_cons_is_breaked ( )	4255:9:106851:106870	804837	0	True				
ANR	806683	CallExpression	r_cons_is_breaked ( )		804837	0					
ANR	806684	Callee	r_cons_is_breaked		804837	0					
ANR	806685	Identifier	r_cons_is_breaked		804837	0					
ANR	806686	ArgumentList			804837	1					
ANR	806687	CompoundStatement		317:31:7538:7538	804837	1					
ANR	806688	BreakStatement	break ;	4256:6:106881:106886	804837	0	True				
ANR	806689	IdentifierDeclStatement	char * buf = NULL ;	4259:5:106901:106917	804837	1	True				
ANR	806690	IdentifierDecl	* buf = NULL		804837	0					
ANR	806691	IdentifierDeclType	char *		804837	0					
ANR	806692	Identifier	buf		804837	1					
ANR	806693	AssignmentExpression	* buf = NULL		804837	2		=			
ANR	806694	Identifier	NULL		804837	0					
ANR	806695	Identifier	NULL		804837	1					
ANR	806696	IdentifierDeclStatement	const char * tmp = NULL ;	4260:5:106924:106946	804837	2	True				
ANR	806697	IdentifierDecl	* tmp = NULL		804837	0					
ANR	806698	IdentifierDeclType	const char *		804837	0					
ANR	806699	Identifier	tmp		804837	1					
ANR	806700	AssignmentExpression	* tmp = NULL		804837	2		=			
ANR	806701	Identifier	NULL		804837	0					
ANR	806702	Identifier	NULL		804837	1					
ANR	806703	ExpressionStatement	"r_core_seek ( core , flag -> offset , 1 )"	4261:5:106953:106988	804837	3	True				
ANR	806704	CallExpression	"r_core_seek ( core , flag -> offset , 1 )"		804837	0					
ANR	806705	Callee	r_core_seek		804837	0					
ANR	806706	Identifier	r_core_seek		804837	0					
ANR	806707	ArgumentList	core		804837	1					
ANR	806708	Argument	core		804837	0					
ANR	806709	Identifier	core		804837	0					
ANR	806710	Argument	flag -> offset		804837	1					
ANR	806711	PtrMemberAccess	flag -> offset		804837	0					
ANR	806712	Identifier	flag		804837	0					
ANR	806713	Identifier	offset		804837	1					
ANR	806714	Argument	1		804837	2					
ANR	806715	PrimaryExpression	1		804837	0					
ANR	806716	ExpressionStatement	r_cons_push ( )	4262:5:106995:107009	804837	4	True				
ANR	806717	CallExpression	r_cons_push ( )		804837	0					
ANR	806718	Callee	r_cons_push		804837	0					
ANR	806719	Identifier	r_cons_push		804837	0					
ANR	806720	ArgumentList			804837	1					
ANR	806721	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	4263:5:107016:107041	804837	5	True				
ANR	806722	CallExpression	"r_core_cmd ( core , cmd , 0 )"		804837	0					
ANR	806723	Callee	r_core_cmd		804837	0					
ANR	806724	Identifier	r_core_cmd		804837	0					
ANR	806725	ArgumentList	core		804837	1					
ANR	806726	Argument	core		804837	0					
ANR	806727	Identifier	core		804837	0					
ANR	806728	Argument	cmd		804837	1					
ANR	806729	Identifier	cmd		804837	0					
ANR	806730	Argument	0		804837	2					
ANR	806731	PrimaryExpression	0		804837	0					
ANR	806732	ExpressionStatement	tmp = r_cons_get_buffer ( )	4264:5:107048:107074	804837	6	True				
ANR	806733	AssignmentExpression	tmp = r_cons_get_buffer ( )		804837	0		=			
ANR	806734	Identifier	tmp		804837	0					
ANR	806735	CallExpression	r_cons_get_buffer ( )		804837	1					
ANR	806736	Callee	r_cons_get_buffer		804837	0					
ANR	806737	Identifier	r_cons_get_buffer		804837	0					
ANR	806738	ArgumentList			804837	1					
ANR	806739	ExpressionStatement	buf = tmp ? strdup ( tmp ) : NULL	4265:5:107081:107110	804837	7	True				
ANR	806740	AssignmentExpression	buf = tmp ? strdup ( tmp ) : NULL		804837	0		=			
ANR	806741	Identifier	buf		804837	0					
ANR	806742	ConditionalExpression	tmp ? strdup ( tmp ) : NULL		804837	1					
ANR	806743	Condition	tmp		804837	0					
ANR	806744	Identifier	tmp		804837	0					
ANR	806745	CallExpression	strdup ( tmp )		804837	1					
ANR	806746	Callee	strdup		804837	0					
ANR	806747	Identifier	strdup		804837	0					
ANR	806748	ArgumentList	tmp		804837	1					
ANR	806749	Argument	tmp		804837	0					
ANR	806750	Identifier	tmp		804837	0					
ANR	806751	Identifier	NULL		804837	2					
ANR	806752	ExpressionStatement	r_cons_pop ( )	4266:5:107117:107130	804837	8	True				
ANR	806753	CallExpression	r_cons_pop ( )		804837	0					
ANR	806754	Callee	r_cons_pop		804837	0					
ANR	806755	Identifier	r_cons_pop		804837	0					
ANR	806756	ArgumentList			804837	1					
ANR	806757	ExpressionStatement	r_cons_strcat ( buf )	4267:5:107137:107156	804837	9	True				
ANR	806758	CallExpression	r_cons_strcat ( buf )		804837	0					
ANR	806759	Callee	r_cons_strcat		804837	0					
ANR	806760	Identifier	r_cons_strcat		804837	0					
ANR	806761	ArgumentList	buf		804837	1					
ANR	806762	Argument	buf		804837	0					
ANR	806763	Identifier	buf		804837	0					
ANR	806764	ExpressionStatement	free ( buf )	4268:5:107163:107173	804837	10	True				
ANR	806765	CallExpression	free ( buf )		804837	0					
ANR	806766	Callee	free		804837	0					
ANR	806767	Identifier	free		804837	0					
ANR	806768	ArgumentList	buf		804837	1					
ANR	806769	Argument	buf		804837	0					
ANR	806770	Identifier	buf		804837	0					
ANR	806771	ExpressionStatement	r_list_free ( match_flag_items )	4271:4:107186:107216	804837	19	True				
ANR	806772	CallExpression	r_list_free ( match_flag_items )		804837	0					
ANR	806773	Callee	r_list_free		804837	0					
ANR	806774	Identifier	r_list_free		804837	0					
ANR	806775	ArgumentList	match_flag_items		804837	1					
ANR	806776	Argument	match_flag_items		804837	0					
ANR	806777	Identifier	match_flag_items		804837	0					
ANR	806778	ExpressionStatement	core -> rcmd -> macro . counter ++	4272:4:107222:107250	804837	20	True				
ANR	806779	PostIncDecOperationExpression	core -> rcmd -> macro . counter ++		804837	0					
ANR	806780	MemberAccess	core -> rcmd -> macro . counter		804837	0					
ANR	806781	PtrMemberAccess	core -> rcmd -> macro		804837	0					
ANR	806782	PtrMemberAccess	core -> rcmd		804837	0					
ANR	806783	Identifier	core		804837	0					
ANR	806784	Identifier	rcmd		804837	1					
ANR	806785	Identifier	macro		804837	1					
ANR	806786	Identifier	counter		804837	1					
ANR	806787	IncDec	++		804837	1					
ANR	806788	ExpressionStatement	R_FREE ( word )	4273:4:107256:107269	804837	21	True				
ANR	806789	CallExpression	R_FREE ( word )		804837	0					
ANR	806790	Callee	R_FREE		804837	0					
ANR	806791	Identifier	R_FREE		804837	0					
ANR	806792	ArgumentList	word		804837	1					
ANR	806793	Argument	word		804837	0					
ANR	806794	Identifier	word		804837	0					
ANR	806795	ExpressionStatement	r_cons_break_pop ( )	4277:1:107284:107303	804837	12	True				
ANR	806796	CallExpression	r_cons_break_pop ( )		804837	0					
ANR	806797	Callee	r_cons_break_pop		804837	0					
ANR	806798	Identifier	r_cons_break_pop		804837	0					
ANR	806799	ArgumentList			804837	1					
ANR	806800	ExpressionStatement	core -> offset = oseek	4279:1:107336:107356	804837	13	True				
ANR	806801	AssignmentExpression	core -> offset = oseek		804837	0		=			
ANR	806802	PtrMemberAccess	core -> offset		804837	0					
ANR	806803	Identifier	core		804837	0					
ANR	806804	Identifier	offset		804837	1					
ANR	806805	Identifier	oseek		804837	1					
ANR	806806	ExpressionStatement	free ( word )	4281:1:107360:107371	804837	14	True				
ANR	806807	CallExpression	free ( word )		804837	0					
ANR	806808	Callee	free		804837	0					
ANR	806809	Identifier	free		804837	0					
ANR	806810	ArgumentList	word		804837	1					
ANR	806811	Argument	word		804837	0					
ANR	806812	Identifier	word		804837	0					
ANR	806813	ExpressionStatement	free ( ostr )	4282:1:107374:107385	804837	15	True				
ANR	806814	CallExpression	free ( ostr )		804837	0					
ANR	806815	Callee	free		804837	0					
ANR	806816	Identifier	free		804837	0					
ANR	806817	ArgumentList	ostr		804837	1					
ANR	806818	Argument	ostr		804837	0					
ANR	806819	Identifier	ostr		804837	0					
ANR	806820	ReturnStatement	return true ;	4283:1:107388:107399	804837	16	True				
ANR	806821	Identifier	true		804837	0					
ANR	806822	Label	out_finish :	4284:0:107401:107411	804837	17	True				
ANR	806823	Identifier	out_finish		804837	0					
ANR	806824	ExpressionStatement	free ( ostr )	4285:1:107414:107425	804837	18	True				
ANR	806825	CallExpression	free ( ostr )		804837	0					
ANR	806826	Callee	free		804837	0					
ANR	806827	Identifier	free		804837	0					
ANR	806828	ArgumentList	ostr		804837	1					
ANR	806829	Argument	ostr		804837	0					
ANR	806830	Identifier	ostr		804837	0					
ANR	806831	ExpressionStatement	r_cons_break_pop ( )	4286:1:107428:107447	804837	19	True				
ANR	806832	CallExpression	r_cons_break_pop ( )		804837	0					
ANR	806833	Callee	r_cons_break_pop		804837	0					
ANR	806834	Identifier	r_cons_break_pop		804837	0					
ANR	806835	ArgumentList			804837	1					
ANR	806836	ReturnStatement	return false ;	4287:1:107450:107462	804837	20	True				
ANR	806837	Identifier	false		804837	0					
ANR	806838	ReturnType	R_API int		804837	1					
ANR	806839	Identifier	r_core_cmd_foreach		804837	2					
ANR	806840	ParameterList	"RCore * core , const char * cmd , char * each"		804837	3					
ANR	806841	Parameter	RCore * core	3939:29:99292:99302	804837	0	True				
ANR	806842	ParameterType	RCore *		804837	0					
ANR	806843	Identifier	core		804837	1					
ANR	806844	Parameter	const char * cmd	3939:42:99305:99319	804837	1	True				
ANR	806845	ParameterType	const char *		804837	0					
ANR	806846	Identifier	cmd		804837	1					
ANR	806847	Parameter	char * each	3939:59:99322:99331	804837	2	True				
ANR	806848	ParameterType	char *		804837	0					
ANR	806849	Identifier	each		804837	1					
ANR	806850	CFGEntryNode	ENTRY		804837		True				
ANR	806851	CFGExitNode	EXIT		804837		True				
ANR	806852	Symbol	* bb -> op_pos		804837						
ANR	806853	Symbol	frame -> bp		804837						
ANR	806854	Symbol	* fcn		804837						
ANR	806855	Symbol	cmdhit		804837						
ANR	806856	Symbol	core -> offset		804837						
ANR	806857	Symbol	strchr		804837						
ANR	806858	Symbol	bb_cmp		804837						
ANR	806859	Symbol	* core -> dbg -> h		804837						
ANR	806860	Symbol	frame -> sp		804837						
ANR	806861	Symbol	cmd2		804837						
ANR	806862	Symbol	tmp		804837						
ANR	806863	Symbol	* cmd		804837						
ANR	806864	Symbol	core -> blocksize		804837						
ANR	806865	Symbol	core -> rcmd -> macro		804837						
ANR	806866	Symbol	* buf		804837						
ANR	806867	Symbol	r_flag_space_cur		804837						
ANR	806868	Symbol	r_list_newf		804837						
ANR	806869	Symbol	iter		804837						
ANR	806870	Symbol	core -> dbg -> h		804837						
ANR	806871	Symbol	core -> rcmd -> macro . counter		804837						
ANR	806872	Symbol	each		804837						
ANR	806873	Symbol	str		804837						
ANR	806874	Symbol	* * * core		804837						
ANR	806875	Symbol	oseek		804837						
ANR	806876	Symbol	cmd		804837						
ANR	806877	Symbol	* flag		804837						
ANR	806878	Symbol	word		804837						
ANR	806879	Symbol	* core -> dbg		804837						
ANR	806880	Symbol	core -> cons -> context		804837						
ANR	806881	Symbol	bb		804837						
ANR	806882	Symbol	cur		804837						
ANR	806883	Symbol	flag		804837						
ANR	806884	Symbol	match_flag_items		804837						
ANR	806885	Symbol	* core -> cons		804837						
ANR	806886	Symbol	core -> sdb		804837						
ANR	806887	Symbol	* core		804837						
ANR	806888	Symbol	r_config_get		804837						
ANR	806889	Symbol	core -> anal		804837						
ANR	806890	Symbol	r_debug_frames		804837						
ANR	806891	Symbol	out		804837						
ANR	806892	Symbol	fcn		804837						
ANR	806893	Symbol	bs		804837						
ANR	806894	Symbol	r_cons_is_breaked		804837						
ANR	806895	Symbol	core -> cons		804837						
ANR	806896	Symbol	ostr		804837						
ANR	806897	Symbol	arg		804837						
ANR	806898	Symbol	* str		804837						
ANR	806899	Symbol	ch		804837						
ANR	806900	Symbol	i		804837						
ANR	806901	Symbol	j		804837						
ANR	806902	Symbol	r_str_word_get0		804837						
ANR	806903	Symbol	core -> flags		804837						
ANR	806904	Symbol	p		804837						
ANR	806905	Symbol	buf		804837						
ANR	806906	Symbol	fcn -> bbs		804837						
ANR	806907	Symbol	bb -> op_pos_size		804837						
ANR	806908	Symbol	R_MAX		804837						
ANR	806909	Symbol	fcn -> addr		804837						
ANR	806910	Symbol	to		804837						
ANR	806911	Symbol	core -> dbg -> pid		804837						
ANR	806912	Symbol	bb -> size		804837						
ANR	806913	Symbol	r_core_cmd_str		804837						
ANR	806914	Symbol	fcn -> name		804837						
ANR	806915	Symbol	r_flag_item_free		804837						
ANR	806916	Symbol	bb -> addr		804837						
ANR	806917	Symbol	pid		804837						
ANR	806918	Symbol	fgets		804837						
ANR	806919	Symbol	core -> rcmd -> macro . brk_value		804837						
ANR	806920	Symbol	duplicate_flag		804837						
ANR	806921	Symbol	from		804837						
ANR	806922	Symbol	core -> rcmd -> macro . _brk_value		804837						
ANR	806923	Symbol	flag -> offset		804837						
ANR	806924	Symbol	core -> num		804837						
ANR	806925	Symbol	help_msg_at_at		804837						
ANR	806926	Symbol	NULL		804837						
ANR	806927	Symbol	* * core -> cons		804837						
ANR	806928	Symbol	count		804837						
ANR	806929	Symbol	sdb_querys		804837						
ANR	806930	Symbol	* each		804837						
ANR	806931	Symbol	list		804837						
ANR	806932	Symbol	* * bb		804837						
ANR	806933	Symbol	core		804837						
ANR	806934	Symbol	bb -> op_pos		804837						
ANR	806935	Symbol	strstr		804837						
ANR	806936	Symbol	& core -> rcmd -> macro		804837						
ANR	806937	Symbol	true		804837						
ANR	806938	Symbol	fd		804837						
ANR	806939	Symbol	frame		804837						
ANR	806940	Symbol	r_anal_get_fcn_at		804837						
ANR	806941	Symbol	p -> pid		804837						
ANR	806942	Symbol	* frame		804837						
ANR	806943	Symbol	core -> dbg -> h -> pids		804837						
ANR	806944	Symbol	r_num_math		804837						
ANR	806945	Symbol	flagspace		804837						
ANR	806946	Symbol	* core -> cons -> context		804837						
ANR	806947	Symbol	frame -> addr		804837						
ANR	806948	Symbol	addr		804837						
ANR	806949	Symbol	UT64_MAX		804837						
ANR	806950	Symbol	* * core		804837						
ANR	806951	Symbol	core -> config		804837						
ANR	806952	Symbol	* bb		804837						
ANR	806953	Symbol	core -> rcmd		804837						
ANR	806954	Symbol	grep		804837						
ANR	806955	Symbol	false		804837						
ANR	806956	Symbol	r_cons_get_buffer		804837						
ANR	806957	Symbol	core -> cons -> context -> grep		804837						
ANR	806958	Symbol	* i		804837						
ANR	806959	Symbol	* j		804837						
ANR	806960	Symbol	r_str_split		804837						
ANR	806961	Symbol	r_sandbox_fopen		804837						
ANR	806962	Symbol	feof		804837						
ANR	806963	Symbol	step		804837						
ANR	806964	Symbol	* p		804837						
ANR	806965	Symbol	strdup		804837						
ANR	806966	Symbol	* core -> rcmd		804837						
ANR	806967	Symbol	& u		804837						
ANR	806968	Symbol	core -> dbg		804837						
ANR	806969	Symbol	* * core -> dbg		804837						
ANR	806970	Function	run_pending_anal	4290:0:107467:107749							
ANR	806971	FunctionDef	run_pending_anal (RCore * core)		806970	0					
ANR	806972	CompoundStatement		4290:41:107508:107749	806970	0					
ANR	806973	ExpressionStatement	core -> ev -> incall = false	4292:1:107559:107583	806970	0	True				
ANR	806974	AssignmentExpression	core -> ev -> incall = false		806970	0		=			
ANR	806975	PtrMemberAccess	core -> ev -> incall		806970	0					
ANR	806976	PtrMemberAccess	core -> ev		806970	0					
ANR	806977	Identifier	core		806970	0					
ANR	806978	Identifier	ev		806970	1					
ANR	806979	Identifier	incall		806970	1					
ANR	806980	Identifier	false		806970	1					
ANR	806981	IfStatement	if ( core && core -> anal && core -> anal -> cmdtail )		806970	1					
ANR	806982	Condition	core && core -> anal && core -> anal -> cmdtail	4293:5:107590:107630	806970	0	True				
ANR	806983	AndExpression	core && core -> anal && core -> anal -> cmdtail		806970	0		&&			
ANR	806984	Identifier	core		806970	0					
ANR	806985	AndExpression	core -> anal && core -> anal -> cmdtail		806970	1		&&			
ANR	806986	PtrMemberAccess	core -> anal		806970	0					
ANR	806987	Identifier	core		806970	0					
ANR	806988	Identifier	anal		806970	1					
ANR	806989	PtrMemberAccess	core -> anal -> cmdtail		806970	1					
ANR	806990	PtrMemberAccess	core -> anal		806970	0					
ANR	806991	Identifier	core		806970	0					
ANR	806992	Identifier	anal		806970	1					
ANR	806993	Identifier	cmdtail		806970	1					
ANR	806994	CompoundStatement		5:2:128:159	806970	1					
ANR	806995	IdentifierDeclStatement	char * res = core -> anal -> cmdtail ;	4294:2:107637:107668	806970	0	True				
ANR	806996	IdentifierDecl	* res = core -> anal -> cmdtail		806970	0					
ANR	806997	IdentifierDeclType	char *		806970	0					
ANR	806998	Identifier	res		806970	1					
ANR	806999	AssignmentExpression	* res = core -> anal -> cmdtail		806970	2		=			
ANR	807000	Identifier	res		806970	0					
ANR	807001	PtrMemberAccess	core -> anal -> cmdtail		806970	1					
ANR	807002	PtrMemberAccess	core -> anal		806970	0					
ANR	807003	Identifier	core		806970	0					
ANR	807004	Identifier	anal		806970	1					
ANR	807005	Identifier	cmdtail		806970	1					
ANR	807006	ExpressionStatement	core -> anal -> cmdtail = NULL	4295:2:107672:107698	806970	1	True				
ANR	807007	AssignmentExpression	core -> anal -> cmdtail = NULL		806970	0		=			
ANR	807008	PtrMemberAccess	core -> anal -> cmdtail		806970	0					
ANR	807009	PtrMemberAccess	core -> anal		806970	0					
ANR	807010	Identifier	core		806970	0					
ANR	807011	Identifier	anal		806970	1					
ANR	807012	Identifier	cmdtail		806970	1					
ANR	807013	Identifier	NULL		806970	1					
ANR	807014	ExpressionStatement	"r_core_cmd_lines ( core , res )"	4296:2:107702:107730	806970	2	True				
ANR	807015	CallExpression	"r_core_cmd_lines ( core , res )"		806970	0					
ANR	807016	Callee	r_core_cmd_lines		806970	0					
ANR	807017	Identifier	r_core_cmd_lines		806970	0					
ANR	807018	ArgumentList	core		806970	1					
ANR	807019	Argument	core		806970	0					
ANR	807020	Identifier	core		806970	0					
ANR	807021	Argument	res		806970	1					
ANR	807022	Identifier	res		806970	0					
ANR	807023	ExpressionStatement	free ( res )	4297:2:107734:107744	806970	3	True				
ANR	807024	CallExpression	free ( res )		806970	0					
ANR	807025	Callee	free		806970	0					
ANR	807026	Identifier	free		806970	0					
ANR	807027	ArgumentList	res		806970	1					
ANR	807028	Argument	res		806970	0					
ANR	807029	Identifier	res		806970	0					
ANR	807030	ReturnType	R_API void		806970	1					
ANR	807031	Identifier	run_pending_anal		806970	2					
ANR	807032	ParameterList	RCore * core		806970	3					
ANR	807033	Parameter	RCore * core	4290:28:107495:107505	806970	0	True				
ANR	807034	ParameterType	RCore *		806970	0					
ANR	807035	Identifier	core		806970	1					
ANR	807036	CFGEntryNode	ENTRY		806970		True				
ANR	807037	CFGExitNode	EXIT		806970		True				
ANR	807038	Symbol	core		806970						
ANR	807039	Symbol	res		806970						
ANR	807040	Symbol	* core -> anal		806970						
ANR	807041	Symbol	NULL		806970						
ANR	807042	Symbol	core -> anal -> cmdtail		806970						
ANR	807043	Symbol	core -> ev -> incall		806970						
ANR	807044	Symbol	* core		806970						
ANR	807045	Symbol	false		806970						
ANR	807046	Symbol	core -> anal		806970						
ANR	807047	Symbol	* core -> ev		806970						
ANR	807048	Symbol	* * core		806970						
ANR	807049	Symbol	core -> ev		806970						
ANR	807050	Function	r_core_cmd	4301:0:107752:110028							
ANR	807051	FunctionDef	"r_core_cmd (RCore * core , const char * cstr , int log)"		807050	0					
ANR	807052	CompoundStatement		4301:61:107813:110028	807050	0					
ANR	807053	IdentifierDeclStatement	"char * cmd , * ocmd , * ptr , * rcmd ;"	4302:1:107816:107845	807050	0	True				
ANR	807054	IdentifierDecl	* cmd		807050	0					
ANR	807055	IdentifierDeclType	char *		807050	0					
ANR	807056	Identifier	cmd		807050	1					
ANR	807057	IdentifierDecl	* ocmd		807050	1					
ANR	807058	IdentifierDeclType	char *		807050	0					
ANR	807059	Identifier	ocmd		807050	1					
ANR	807060	IdentifierDecl	* ptr		807050	2					
ANR	807061	IdentifierDeclType	char *		807050	0					
ANR	807062	Identifier	ptr		807050	1					
ANR	807063	IdentifierDecl	* rcmd		807050	3					
ANR	807064	IdentifierDeclType	char *		807050	0					
ANR	807065	Identifier	rcmd		807050	1					
ANR	807066	IdentifierDeclStatement	"int ret = false , i ;"	4303:1:107848:107866	807050	1	True				
ANR	807067	IdentifierDecl	ret = false		807050	0					
ANR	807068	IdentifierDeclType	int		807050	0					
ANR	807069	Identifier	ret		807050	1					
ANR	807070	AssignmentExpression	ret = false		807050	2		=			
ANR	807071	Identifier	false		807050	0					
ANR	807072	Identifier	false		807050	1					
ANR	807073	IdentifierDecl	i		807050	1					
ANR	807074	IdentifierDeclType	int		807050	0					
ANR	807075	Identifier	i		807050	1					
ANR	807076	IfStatement	if ( core -> cmdfilter )		807050	2					
ANR	807077	Condition	core -> cmdfilter	4305:5:107874:107888	807050	0	True				
ANR	807078	PtrMemberAccess	core -> cmdfilter		807050	0					
ANR	807079	Identifier	core		807050	0					
ANR	807080	Identifier	cmdfilter		807050	1					
ANR	807081	CompoundStatement		6:2:81:116	807050	1					
ANR	807082	IdentifierDeclStatement	"const char * invalid_chars = "";|>`@"" ;"	4306:2:107895:107930	807050	0	True				
ANR	807083	IdentifierDecl	"* invalid_chars = "";|>`@"""		807050	0					
ANR	807084	IdentifierDeclType	const char *		807050	0					
ANR	807085	Identifier	invalid_chars		807050	1					
ANR	807086	AssignmentExpression	"* invalid_chars = "";|>`@"""		807050	2		=			
ANR	807087	Identifier	invalid_chars		807050	0					
ANR	807088	PrimaryExpression	""";|>`@"""		807050	1					
ANR	807089	ForStatement	for ( i = 0 ; invalid_chars [ i ] ; i ++ )		807050	1					
ANR	807090	ForInit	i = 0 ;	4307:7:107939:107944	807050	0	True				
ANR	807091	AssignmentExpression	i = 0		807050	0		=			
ANR	807092	Identifier	i		807050	0					
ANR	807093	PrimaryExpression	0		807050	1					
ANR	807094	Condition	invalid_chars [ i ]	4307:14:107946:107961	807050	1	True				
ANR	807095	ArrayIndexing	invalid_chars [ i ]		807050	0					
ANR	807096	Identifier	invalid_chars		807050	0					
ANR	807097	Identifier	i		807050	1					
ANR	807098	PostIncDecOperationExpression	i ++	4307:32:107964:107966	807050	2	True				
ANR	807099	Identifier	i		807050	0					
ANR	807100	IncDec	++		807050	1					
ANR	807101	CompoundStatement		7:37:155:155	807050	3					
ANR	807102	IfStatement	"if ( strchr ( cstr , invalid_chars [ i ] ) )"		807050	0					
ANR	807103	Condition	"strchr ( cstr , invalid_chars [ i ] )"	4308:7:107978:108008	807050	0	True				
ANR	807104	CallExpression	"strchr ( cstr , invalid_chars [ i ] )"		807050	0					
ANR	807105	Callee	strchr		807050	0					
ANR	807106	Identifier	strchr		807050	0					
ANR	807107	ArgumentList	cstr		807050	1					
ANR	807108	Argument	cstr		807050	0					
ANR	807109	Identifier	cstr		807050	0					
ANR	807110	Argument	invalid_chars [ i ]		807050	1					
ANR	807111	ArrayIndexing	invalid_chars [ i ]		807050	0					
ANR	807112	Identifier	invalid_chars		807050	0					
ANR	807113	Identifier	i		807050	1					
ANR	807114	CompoundStatement		8:40:197:197	807050	1					
ANR	807115	ExpressionStatement	ret = true	4309:4:108017:108027	807050	0	True				
ANR	807116	AssignmentExpression	ret = true		807050	0		=			
ANR	807117	Identifier	ret		807050	0					
ANR	807118	Identifier	true		807050	1					
ANR	807119	GotoStatement	goto beach ;	4310:4:108033:108043	807050	1	True				
ANR	807120	Identifier	beach		807050	0					
ANR	807121	IfStatement	"if ( strncmp ( cstr , core -> cmdfilter , strlen ( core -> cmdfilter ) ) )"		807050	2					
ANR	807122	Condition	"strncmp ( cstr , core -> cmdfilter , strlen ( core -> cmdfilter ) )"	4313:6:108060:108116	807050	0	True				
ANR	807123	CallExpression	"strncmp ( cstr , core -> cmdfilter , strlen ( core -> cmdfilter ) )"		807050	0					
ANR	807124	Callee	strncmp		807050	0					
ANR	807125	Identifier	strncmp		807050	0					
ANR	807126	ArgumentList	cstr		807050	1					
ANR	807127	Argument	cstr		807050	0					
ANR	807128	Identifier	cstr		807050	0					
ANR	807129	Argument	core -> cmdfilter		807050	1					
ANR	807130	PtrMemberAccess	core -> cmdfilter		807050	0					
ANR	807131	Identifier	core		807050	0					
ANR	807132	Identifier	cmdfilter		807050	1					
ANR	807133	Argument	strlen ( core -> cmdfilter )		807050	2					
ANR	807134	CallExpression	strlen ( core -> cmdfilter )		807050	0					
ANR	807135	Callee	strlen		807050	0					
ANR	807136	Identifier	strlen		807050	0					
ANR	807137	ArgumentList	core -> cmdfilter		807050	1					
ANR	807138	Argument	core -> cmdfilter		807050	0					
ANR	807139	PtrMemberAccess	core -> cmdfilter		807050	0					
ANR	807140	Identifier	core		807050	0					
ANR	807141	Identifier	cmdfilter		807050	1					
ANR	807142	CompoundStatement		13:65:305:305	807050	1					
ANR	807143	ExpressionStatement	ret = true	4314:3:108124:108134	807050	0	True				
ANR	807144	AssignmentExpression	ret = true		807050	0		=			
ANR	807145	Identifier	ret		807050	0					
ANR	807146	Identifier	true		807050	1					
ANR	807147	GotoStatement	goto beach ;	4315:3:108139:108149	807050	1	True				
ANR	807148	Identifier	beach		807050	0					
ANR	807149	IfStatement	if ( core -> cmdremote )		807050	3					
ANR	807150	Condition	core -> cmdremote	4318:5:108163:108177	807050	0	True				
ANR	807151	PtrMemberAccess	core -> cmdremote		807050	0					
ANR	807152	Identifier	core		807050	0					
ANR	807153	Identifier	cmdremote		807050	1					
ANR	807154	CompoundStatement		18:22:366:366	807050	1					
ANR	807155	IfStatement	"if ( * cstr != '=' && * cstr != 'q' && strncmp ( cstr , ""!="" , 2 ) )"		807050	0					
ANR	807156	Condition	"* cstr != '=' && * cstr != 'q' && strncmp ( cstr , ""!="" , 2 )"	4319:6:108188:108242	807050	0	True				
ANR	807157	AndExpression	"* cstr != '=' && * cstr != 'q' && strncmp ( cstr , ""!="" , 2 )"		807050	0		&&			
ANR	807158	EqualityExpression	* cstr != '='		807050	0		!=			
ANR	807159	UnaryOperationExpression	* cstr		807050	0					
ANR	807160	UnaryOperator	*		807050	0					
ANR	807161	Identifier	cstr		807050	1					
ANR	807162	PrimaryExpression	'='		807050	1					
ANR	807163	AndExpression	"* cstr != 'q' && strncmp ( cstr , ""!="" , 2 )"		807050	1		&&			
ANR	807164	EqualityExpression	* cstr != 'q'		807050	0		!=			
ANR	807165	UnaryOperationExpression	* cstr		807050	0					
ANR	807166	UnaryOperator	*		807050	0					
ANR	807167	Identifier	cstr		807050	1					
ANR	807168	PrimaryExpression	'q'		807050	1					
ANR	807169	CallExpression	"strncmp ( cstr , ""!="" , 2 )"		807050	1					
ANR	807170	Callee	strncmp		807050	0					
ANR	807171	Identifier	strncmp		807050	0					
ANR	807172	ArgumentList	cstr		807050	1					
ANR	807173	Argument	cstr		807050	0					
ANR	807174	Identifier	cstr		807050	0					
ANR	807175	Argument	"""!="""		807050	1					
ANR	807176	PrimaryExpression	"""!="""		807050	0					
ANR	807177	Argument	2		807050	2					
ANR	807178	PrimaryExpression	2		807050	0					
ANR	807179	CompoundStatement		20:3:436:476	807050	1					
ANR	807180	IdentifierDeclStatement	"char * res = r_io_system ( core -> io , cstr ) ;"	4320:3:108250:108290	807050	0	True				
ANR	807181	IdentifierDecl	"* res = r_io_system ( core -> io , cstr )"		807050	0					
ANR	807182	IdentifierDeclType	char *		807050	0					
ANR	807183	Identifier	res		807050	1					
ANR	807184	AssignmentExpression	"* res = r_io_system ( core -> io , cstr )"		807050	2		=			
ANR	807185	Identifier	res		807050	0					
ANR	807186	CallExpression	"r_io_system ( core -> io , cstr )"		807050	1					
ANR	807187	Callee	r_io_system		807050	0					
ANR	807188	Identifier	r_io_system		807050	0					
ANR	807189	ArgumentList	core -> io		807050	1					
ANR	807190	Argument	core -> io		807050	0					
ANR	807191	PtrMemberAccess	core -> io		807050	0					
ANR	807192	Identifier	core		807050	0					
ANR	807193	Identifier	io		807050	1					
ANR	807194	Argument	cstr		807050	1					
ANR	807195	Identifier	cstr		807050	0					
ANR	807196	IfStatement	if ( res )		807050	1					
ANR	807197	Condition	res	4321:7:108299:108301	807050	0	True				
ANR	807198	Identifier	res		807050	0					
ANR	807199	CompoundStatement		21:12:490:490	807050	1					
ANR	807200	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , res )"	4322:4:108310:108337	807050	0	True				
ANR	807201	CallExpression	"r_cons_printf ( ""%s\\n"" , res )"		807050	0					
ANR	807202	Callee	r_cons_printf		807050	0					
ANR	807203	Identifier	r_cons_printf		807050	0					
ANR	807204	ArgumentList	"""%s\\n"""		807050	1					
ANR	807205	Argument	"""%s\\n"""		807050	0					
ANR	807206	PrimaryExpression	"""%s\\n"""		807050	0					
ANR	807207	Argument	res		807050	1					
ANR	807208	Identifier	res		807050	0					
ANR	807209	ExpressionStatement	free ( res )	4323:4:108343:108353	807050	1	True				
ANR	807210	CallExpression	free ( res )		807050	0					
ANR	807211	Callee	free		807050	0					
ANR	807212	Identifier	free		807050	0					
ANR	807213	ArgumentList	res		807050	1					
ANR	807214	Argument	res		807050	0					
ANR	807215	Identifier	res		807050	0					
ANR	807216	GotoStatement	goto beach ;	4325:3:108363:108373	807050	2	True				
ANR	807217	Identifier	beach		807050	0					
ANR	807218	IfStatement	if ( ! cstr || ( * cstr == '|' && cstr [ 1 ] != '?' ) )		807050	4					
ANR	807219	Condition	! cstr || ( * cstr == '|' && cstr [ 1 ] != '?' )	4329:5:108397:108437	807050	0	True				
ANR	807220	OrExpression	! cstr || ( * cstr == '|' && cstr [ 1 ] != '?' )		807050	0		||			
ANR	807221	UnaryOperationExpression	! cstr		807050	0					
ANR	807222	UnaryOperator	!		807050	0					
ANR	807223	Identifier	cstr		807050	1					
ANR	807224	AndExpression	* cstr == '|' && cstr [ 1 ] != '?'		807050	1		&&			
ANR	807225	EqualityExpression	* cstr == '|'		807050	0		==			
ANR	807226	UnaryOperationExpression	* cstr		807050	0					
ANR	807227	UnaryOperator	*		807050	0					
ANR	807228	Identifier	cstr		807050	1					
ANR	807229	PrimaryExpression	'|'		807050	1					
ANR	807230	EqualityExpression	cstr [ 1 ] != '?'		807050	1		!=			
ANR	807231	ArrayIndexing	cstr [ 1 ]		807050	0					
ANR	807232	Identifier	cstr		807050	0					
ANR	807233	PrimaryExpression	1		807050	1					
ANR	807234	PrimaryExpression	'?'		807050	1					
ANR	807235	CompoundStatement		29:48:626:626	807050	1					
ANR	807236	GotoStatement	goto beach ;	4331:2:108468:108478	807050	0	True				
ANR	807237	Identifier	beach		807050	0					
ANR	807238	IfStatement	"if ( ! strncmp ( cstr , ""/*"" , 2 ) )"		807050	5					
ANR	807239	Condition	"! strncmp ( cstr , ""/*"" , 2 )"	4333:5:108498:108521	807050	0	True				
ANR	807240	UnaryOperationExpression	"! strncmp ( cstr , ""/*"" , 2 )"		807050	0					
ANR	807241	UnaryOperator	!		807050	0					
ANR	807242	CallExpression	"strncmp ( cstr , ""/*"" , 2 )"		807050	1					
ANR	807243	Callee	strncmp		807050	0					
ANR	807244	Identifier	strncmp		807050	0					
ANR	807245	ArgumentList	cstr		807050	1					
ANR	807246	Argument	cstr		807050	0					
ANR	807247	Identifier	cstr		807050	0					
ANR	807248	Argument	"""/*"""		807050	1					
ANR	807249	PrimaryExpression	"""/*"""		807050	0					
ANR	807250	Argument	2		807050	2					
ANR	807251	PrimaryExpression	2		807050	0					
ANR	807252	CompoundStatement		33:31:710:710	807050	1					
ANR	807253	IfStatement	if ( r_sandbox_enable ( 0 ) )		807050	0					
ANR	807254	Condition	r_sandbox_enable ( 0 )	4334:6:108532:108551	807050	0	True				
ANR	807255	CallExpression	r_sandbox_enable ( 0 )		807050	0					
ANR	807256	Callee	r_sandbox_enable		807050	0					
ANR	807257	Identifier	r_sandbox_enable		807050	0					
ANR	807258	ArgumentList	0		807050	1					
ANR	807259	Argument	0		807050	0					
ANR	807260	PrimaryExpression	0		807050	0					
ANR	807261	CompoundStatement		34:28:740:740	807050	1					
ANR	807262	ExpressionStatement	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"	4335:3:108559:108613	807050	0	True				
ANR	807263	CallExpression	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"		807050	0					
ANR	807264	Callee	eprintf		807050	0					
ANR	807265	Identifier	eprintf		807050	0					
ANR	807266	ArgumentList	"""This command is disabled in sandbox mode\\n"""		807050	1					
ANR	807267	Argument	"""This command is disabled in sandbox mode\\n"""		807050	0					
ANR	807268	PrimaryExpression	"""This command is disabled in sandbox mode\\n"""		807050	0					
ANR	807269	GotoStatement	goto beach ;	4336:3:108618:108628	807050	1	True				
ANR	807270	Identifier	beach		807050	0					
ANR	807271	ExpressionStatement	core -> incomment = true	4338:2:108645:108667	807050	1	True				
ANR	807272	AssignmentExpression	core -> incomment = true		807050	0		=			
ANR	807273	PtrMemberAccess	core -> incomment		807050	0					
ANR	807274	Identifier	core		807050	0					
ANR	807275	Identifier	incomment		807050	1					
ANR	807276	Identifier	true		807050	1					
ANR	807277	ElseStatement	else		807050	0					
ANR	807278	IfStatement	"if ( ! strncmp ( cstr , ""*/"" , 2 ) )"		807050	0					
ANR	807279	Condition	"! strncmp ( cstr , ""*/"" , 2 )"	4339:12:108681:108704	807050	0	True				
ANR	807280	UnaryOperationExpression	"! strncmp ( cstr , ""*/"" , 2 )"		807050	0					
ANR	807281	UnaryOperator	!		807050	0					
ANR	807282	CallExpression	"strncmp ( cstr , ""*/"" , 2 )"		807050	1					
ANR	807283	Callee	strncmp		807050	0					
ANR	807284	Identifier	strncmp		807050	0					
ANR	807285	ArgumentList	cstr		807050	1					
ANR	807286	Argument	cstr		807050	0					
ANR	807287	Identifier	cstr		807050	0					
ANR	807288	Argument	"""*/"""		807050	1					
ANR	807289	PrimaryExpression	"""*/"""		807050	0					
ANR	807290	Argument	2		807050	2					
ANR	807291	PrimaryExpression	2		807050	0					
ANR	807292	CompoundStatement		39:38:893:893	807050	1					
ANR	807293	ExpressionStatement	core -> incomment = false	4340:2:108711:108734	807050	0	True				
ANR	807294	AssignmentExpression	core -> incomment = false		807050	0		=			
ANR	807295	PtrMemberAccess	core -> incomment		807050	0					
ANR	807296	Identifier	core		807050	0					
ANR	807297	Identifier	incomment		807050	1					
ANR	807298	Identifier	false		807050	1					
ANR	807299	GotoStatement	goto beach ;	4341:2:108738:108748	807050	1	True				
ANR	807300	Identifier	beach		807050	0					
ANR	807301	IfStatement	if ( core -> incomment )		807050	6					
ANR	807302	Condition	core -> incomment	4343:5:108767:108781	807050	0	True				
ANR	807303	PtrMemberAccess	core -> incomment		807050	0					
ANR	807304	Identifier	core		807050	0					
ANR	807305	Identifier	incomment		807050	1					
ANR	807306	CompoundStatement		43:22:970:970	807050	1					
ANR	807307	GotoStatement	goto beach ;	4344:2:108788:108798	807050	0	True				
ANR	807308	Identifier	beach		807050	0					
ANR	807309	IfStatement	"if ( log && ( * cstr && ( * cstr != '.' || ! strncmp ( cstr , "".("" , 2 ) ) ) )"		807050	7					
ANR	807310	Condition	"log && ( * cstr && ( * cstr != '.' || ! strncmp ( cstr , "".("" , 2 ) ) )"	4346:5:108817:108876	807050	0	True				
ANR	807311	AndExpression	"log && ( * cstr && ( * cstr != '.' || ! strncmp ( cstr , "".("" , 2 ) ) )"		807050	0		&&			
ANR	807312	Identifier	log		807050	0					
ANR	807313	AndExpression	"* cstr && ( * cstr != '.' || ! strncmp ( cstr , "".("" , 2 ) )"		807050	1		&&			
ANR	807314	UnaryOperationExpression	* cstr		807050	0					
ANR	807315	UnaryOperator	*		807050	0					
ANR	807316	Identifier	cstr		807050	1					
ANR	807317	OrExpression	"* cstr != '.' || ! strncmp ( cstr , "".("" , 2 )"		807050	1		||			
ANR	807318	EqualityExpression	* cstr != '.'		807050	0		!=			
ANR	807319	UnaryOperationExpression	* cstr		807050	0					
ANR	807320	UnaryOperator	*		807050	0					
ANR	807321	Identifier	cstr		807050	1					
ANR	807322	PrimaryExpression	'.'		807050	1					
ANR	807323	UnaryOperationExpression	"! strncmp ( cstr , "".("" , 2 )"		807050	1					
ANR	807324	UnaryOperator	!		807050	0					
ANR	807325	CallExpression	"strncmp ( cstr , "".("" , 2 )"		807050	1					
ANR	807326	Callee	strncmp		807050	0					
ANR	807327	Identifier	strncmp		807050	0					
ANR	807328	ArgumentList	cstr		807050	1					
ANR	807329	Argument	cstr		807050	0					
ANR	807330	Identifier	cstr		807050	0					
ANR	807331	Argument	""".("""		807050	1					
ANR	807332	PrimaryExpression	""".("""		807050	0					
ANR	807333	Argument	2		807050	2					
ANR	807334	PrimaryExpression	2		807050	0					
ANR	807335	CompoundStatement		46:67:1065:1065	807050	1					
ANR	807336	ExpressionStatement	free ( core -> lastcmd )	4347:2:108883:108903	807050	0	True				
ANR	807337	CallExpression	free ( core -> lastcmd )		807050	0					
ANR	807338	Callee	free		807050	0					
ANR	807339	Identifier	free		807050	0					
ANR	807340	ArgumentList	core -> lastcmd		807050	1					
ANR	807341	Argument	core -> lastcmd		807050	0					
ANR	807342	PtrMemberAccess	core -> lastcmd		807050	0					
ANR	807343	Identifier	core		807050	0					
ANR	807344	Identifier	lastcmd		807050	1					
ANR	807345	ExpressionStatement	core -> lastcmd = strdup ( cstr )	4348:2:108907:108936	807050	1	True				
ANR	807346	AssignmentExpression	core -> lastcmd = strdup ( cstr )		807050	0		=			
ANR	807347	PtrMemberAccess	core -> lastcmd		807050	0					
ANR	807348	Identifier	core		807050	0					
ANR	807349	Identifier	lastcmd		807050	1					
ANR	807350	CallExpression	strdup ( cstr )		807050	1					
ANR	807351	Callee	strdup		807050	0					
ANR	807352	Identifier	strdup		807050	0					
ANR	807353	ArgumentList	cstr		807050	1					
ANR	807354	Argument	cstr		807050	0					
ANR	807355	Identifier	cstr		807050	0					
ANR	807356	ExpressionStatement	ocmd = cmd = malloc ( strlen ( cstr ) + 4096 )	4351:1:108943:108985	807050	8	True				
ANR	807357	AssignmentExpression	ocmd = cmd = malloc ( strlen ( cstr ) + 4096 )		807050	0		=			
ANR	807358	Identifier	ocmd		807050	0					
ANR	807359	AssignmentExpression	cmd = malloc ( strlen ( cstr ) + 4096 )		807050	1		=			
ANR	807360	Identifier	cmd		807050	0					
ANR	807361	CallExpression	malloc ( strlen ( cstr ) + 4096 )		807050	1					
ANR	807362	Callee	malloc		807050	0					
ANR	807363	Identifier	malloc		807050	0					
ANR	807364	ArgumentList	strlen ( cstr ) + 4096		807050	1					
ANR	807365	Argument	strlen ( cstr ) + 4096		807050	0					
ANR	807366	AdditiveExpression	strlen ( cstr ) + 4096		807050	0		+			
ANR	807367	CallExpression	strlen ( cstr )		807050	0					
ANR	807368	Callee	strlen		807050	0					
ANR	807369	Identifier	strlen		807050	0					
ANR	807370	ArgumentList	cstr		807050	1					
ANR	807371	Argument	cstr		807050	0					
ANR	807372	Identifier	cstr		807050	0					
ANR	807373	PrimaryExpression	4096		807050	1					
ANR	807374	IfStatement	if ( ! ocmd )		807050	9					
ANR	807375	Condition	! ocmd	4352:5:108992:108996	807050	0	True				
ANR	807376	UnaryOperationExpression	! ocmd		807050	0					
ANR	807377	UnaryOperator	!		807050	0					
ANR	807378	Identifier	ocmd		807050	1					
ANR	807379	CompoundStatement		52:12:1185:1185	807050	1					
ANR	807380	GotoStatement	goto beach ;	4353:2:109003:109013	807050	0	True				
ANR	807381	Identifier	beach		807050	0					
ANR	807382	ExpressionStatement	"r_str_cpy ( cmd , cstr )"	4355:1:109019:109040	807050	10	True				
ANR	807383	CallExpression	"r_str_cpy ( cmd , cstr )"		807050	0					
ANR	807384	Callee	r_str_cpy		807050	0					
ANR	807385	Identifier	r_str_cpy		807050	0					
ANR	807386	ArgumentList	cmd		807050	1					
ANR	807387	Argument	cmd		807050	0					
ANR	807388	Identifier	cmd		807050	0					
ANR	807389	Argument	cstr		807050	1					
ANR	807390	Identifier	cstr		807050	0					
ANR	807391	IfStatement	if ( log )		807050	11					
ANR	807392	Condition	log	4356:5:109047:109049	807050	0	True				
ANR	807393	Identifier	log		807050	0					
ANR	807394	CompoundStatement		56:10:1238:1238	807050	1					
ANR	807395	ExpressionStatement	r_line_hist_add ( cstr )	4357:2:109056:109078	807050	0	True				
ANR	807396	CallExpression	r_line_hist_add ( cstr )		807050	0					
ANR	807397	Callee	r_line_hist_add		807050	0					
ANR	807398	Identifier	r_line_hist_add		807050	0					
ANR	807399	ArgumentList	cstr		807050	1					
ANR	807400	Argument	cstr		807050	0					
ANR	807401	Identifier	cstr		807050	0					
ANR	807402	IfStatement	if ( core -> cons -> context -> cmd_depth < 1 )		807050	12					
ANR	807403	Condition	core -> cons -> context -> cmd_depth < 1	4360:5:109089:109122	807050	0	True				
ANR	807404	RelationalExpression	core -> cons -> context -> cmd_depth < 1		807050	0		<			
ANR	807405	PtrMemberAccess	core -> cons -> context -> cmd_depth		807050	0					
ANR	807406	PtrMemberAccess	core -> cons -> context		807050	0					
ANR	807407	PtrMemberAccess	core -> cons		807050	0					
ANR	807408	Identifier	core		807050	0					
ANR	807409	Identifier	cons		807050	1					
ANR	807410	Identifier	context		807050	1					
ANR	807411	Identifier	cmd_depth		807050	1					
ANR	807412	PrimaryExpression	1		807050	1					
ANR	807413	CompoundStatement		60:41:1311:1311	807050	1					
ANR	807414	ExpressionStatement	"eprintf ( ""r_core_cmd: That was too deep (%s)...\\n"" , cmd )"	4361:2:109129:109185	807050	0	True				
ANR	807415	CallExpression	"eprintf ( ""r_core_cmd: That was too deep (%s)...\\n"" , cmd )"		807050	0					
ANR	807416	Callee	eprintf		807050	0					
ANR	807417	Identifier	eprintf		807050	0					
ANR	807418	ArgumentList	"""r_core_cmd: That was too deep (%s)...\\n"""		807050	1					
ANR	807419	Argument	"""r_core_cmd: That was too deep (%s)...\\n"""		807050	0					
ANR	807420	PrimaryExpression	"""r_core_cmd: That was too deep (%s)...\\n"""		807050	0					
ANR	807421	Argument	cmd		807050	1					
ANR	807422	Identifier	cmd		807050	0					
ANR	807423	ExpressionStatement	free ( ocmd )	4362:2:109189:109200	807050	1	True				
ANR	807424	CallExpression	free ( ocmd )		807050	0					
ANR	807425	Callee	free		807050	0					
ANR	807426	Identifier	free		807050	0					
ANR	807427	ArgumentList	ocmd		807050	1					
ANR	807428	Argument	ocmd		807050	0					
ANR	807429	Identifier	ocmd		807050	0					
ANR	807430	ExpressionStatement	R_FREE ( core -> oobi )	4363:2:109204:109223	807050	2	True				
ANR	807431	CallExpression	R_FREE ( core -> oobi )		807050	0					
ANR	807432	Callee	R_FREE		807050	0					
ANR	807433	Identifier	R_FREE		807050	0					
ANR	807434	ArgumentList	core -> oobi		807050	1					
ANR	807435	Argument	core -> oobi		807050	0					
ANR	807436	PtrMemberAccess	core -> oobi		807050	0					
ANR	807437	Identifier	core		807050	0					
ANR	807438	Identifier	oobi		807050	1					
ANR	807439	ExpressionStatement	core -> oobi_len = 0	4364:2:109227:109245	807050	3	True				
ANR	807440	AssignmentExpression	core -> oobi_len = 0		807050	0		=			
ANR	807441	PtrMemberAccess	core -> oobi_len		807050	0					
ANR	807442	Identifier	core		807050	0					
ANR	807443	Identifier	oobi_len		807050	1					
ANR	807444	PrimaryExpression	0		807050	1					
ANR	807445	GotoStatement	goto beach ;	4365:2:109249:109259	807050	4	True				
ANR	807446	Identifier	beach		807050	0					
ANR	807447	ExpressionStatement	core -> cons -> context -> cmd_depth --	4367:1:109265:109297	807050	13	True				
ANR	807448	PostIncDecOperationExpression	core -> cons -> context -> cmd_depth --		807050	0					
ANR	807449	PtrMemberAccess	core -> cons -> context -> cmd_depth		807050	0					
ANR	807450	PtrMemberAccess	core -> cons -> context		807050	0					
ANR	807451	PtrMemberAccess	core -> cons		807050	0					
ANR	807452	Identifier	core		807050	0					
ANR	807453	Identifier	cons		807050	1					
ANR	807454	Identifier	context		807050	1					
ANR	807455	Identifier	cmd_depth		807050	1					
ANR	807456	IncDec	--		807050	1					
ANR	807457	ForStatement	for ( rcmd = cmd ; ; )		807050	14					
ANR	807458	ForInit	rcmd = cmd ;	4368:6:109305:109315	807050	0	True				
ANR	807459	AssignmentExpression	rcmd = cmd		807050	0		=			
ANR	807460	Identifier	rcmd		807050	0					
ANR	807461	Identifier	cmd		807050	1					
ANR	807462	CompoundStatement		68:20:1505:1505	807050	1					
ANR	807463	ExpressionStatement	"ptr = strchr ( rcmd , '\\n' )"	4369:2:109323:109348	807050	0	True				
ANR	807464	AssignmentExpression	"ptr = strchr ( rcmd , '\\n' )"		807050	0		=			
ANR	807465	Identifier	ptr		807050	0					
ANR	807466	CallExpression	"strchr ( rcmd , '\\n' )"		807050	1					
ANR	807467	Callee	strchr		807050	0					
ANR	807468	Identifier	strchr		807050	0					
ANR	807469	ArgumentList	rcmd		807050	1					
ANR	807470	Argument	rcmd		807050	0					
ANR	807471	Identifier	rcmd		807050	0					
ANR	807472	Argument	'\\n'		807050	1					
ANR	807473	PrimaryExpression	'\\n'		807050	0					
ANR	807474	IfStatement	if ( ptr )		807050	1					
ANR	807475	Condition	ptr	4370:6:109356:109358	807050	0	True				
ANR	807476	Identifier	ptr		807050	0					
ANR	807477	CompoundStatement		70:11:1547:1547	807050	1					
ANR	807478	ExpressionStatement	* ptr = '\\0'	4371:3:109366:109377	807050	0	True				
ANR	807479	AssignmentExpression	* ptr = '\\0'		807050	0		=			
ANR	807480	UnaryOperationExpression	* ptr		807050	0					
ANR	807481	UnaryOperator	*		807050	0					
ANR	807482	Identifier	ptr		807050	1					
ANR	807483	PrimaryExpression	'\\0'		807050	1					
ANR	807484	ExpressionStatement	"ret = r_core_cmd_subst ( core , rcmd )"	4373:2:109385:109420	807050	2	True				
ANR	807485	AssignmentExpression	"ret = r_core_cmd_subst ( core , rcmd )"		807050	0		=			
ANR	807486	Identifier	ret		807050	0					
ANR	807487	CallExpression	"r_core_cmd_subst ( core , rcmd )"		807050	1					
ANR	807488	Callee	r_core_cmd_subst		807050	0					
ANR	807489	Identifier	r_core_cmd_subst		807050	0					
ANR	807490	ArgumentList	core		807050	1					
ANR	807491	Argument	core		807050	0					
ANR	807492	Identifier	core		807050	0					
ANR	807493	Argument	rcmd		807050	1					
ANR	807494	Identifier	rcmd		807050	0					
ANR	807495	IfStatement	if ( ret == - 1 )		807050	3					
ANR	807496	Condition	ret == - 1	4374:6:109428:109436	807050	0	True				
ANR	807497	EqualityExpression	ret == - 1		807050	0		==			
ANR	807498	Identifier	ret		807050	0					
ANR	807499	UnaryOperationExpression	- 1		807050	1					
ANR	807500	UnaryOperator	-		807050	0					
ANR	807501	PrimaryExpression	1		807050	1					
ANR	807502	CompoundStatement		74:17:1625:1625	807050	1					
ANR	807503	ExpressionStatement	"eprintf ( ""|ERROR| Invalid command '%s' (0x%02x)\\n"" , rcmd , * rcmd )"	4375:3:109444:109508	807050	0	True				
ANR	807504	CallExpression	"eprintf ( ""|ERROR| Invalid command '%s' (0x%02x)\\n"" , rcmd , * rcmd )"		807050	0					
ANR	807505	Callee	eprintf		807050	0					
ANR	807506	Identifier	eprintf		807050	0					
ANR	807507	ArgumentList	"""|ERROR| Invalid command '%s' (0x%02x)\\n"""		807050	1					
ANR	807508	Argument	"""|ERROR| Invalid command '%s' (0x%02x)\\n"""		807050	0					
ANR	807509	PrimaryExpression	"""|ERROR| Invalid command '%s' (0x%02x)\\n"""		807050	0					
ANR	807510	Argument	rcmd		807050	1					
ANR	807511	Identifier	rcmd		807050	0					
ANR	807512	Argument	* rcmd		807050	2					
ANR	807513	UnaryOperationExpression	* rcmd		807050	0					
ANR	807514	UnaryOperator	*		807050	0					
ANR	807515	Identifier	rcmd		807050	1					
ANR	807516	BreakStatement	break ;	4376:3:109513:109518	807050	1	True				
ANR	807517	IfStatement	if ( ! ptr )		807050	4					
ANR	807518	Condition	! ptr	4378:6:109530:109533	807050	0	True				
ANR	807519	UnaryOperationExpression	! ptr		807050	0					
ANR	807520	UnaryOperator	!		807050	0					
ANR	807521	Identifier	ptr		807050	1					
ANR	807522	CompoundStatement		78:12:1722:1722	807050	1					
ANR	807523	BreakStatement	break ;	4379:3:109541:109546	807050	0	True				
ANR	807524	ExpressionStatement	rcmd = ptr + 1	4381:2:109554:109568	807050	5	True				
ANR	807525	AssignmentExpression	rcmd = ptr + 1		807050	0		=			
ANR	807526	Identifier	rcmd		807050	0					
ANR	807527	AdditiveExpression	ptr + 1		807050	1		+			
ANR	807528	Identifier	ptr		807050	0					
ANR	807529	PrimaryExpression	1		807050	1					
ANR	807530	ExpressionStatement	run_pending_anal ( core )	4384:1:109611:109634	807050	15	True				
ANR	807531	CallExpression	run_pending_anal ( core )		807050	0					
ANR	807532	Callee	run_pending_anal		807050	0					
ANR	807533	Identifier	run_pending_anal		807050	0					
ANR	807534	ArgumentList	core		807050	1					
ANR	807535	Argument	core		807050	0					
ANR	807536	Identifier	core		807050	0					
ANR	807537	ExpressionStatement	core -> cons -> context -> cmd_depth ++	4385:1:109637:109669	807050	16	True				
ANR	807538	PostIncDecOperationExpression	core -> cons -> context -> cmd_depth ++		807050	0					
ANR	807539	PtrMemberAccess	core -> cons -> context -> cmd_depth		807050	0					
ANR	807540	PtrMemberAccess	core -> cons -> context		807050	0					
ANR	807541	PtrMemberAccess	core -> cons		807050	0					
ANR	807542	Identifier	core		807050	0					
ANR	807543	Identifier	cons		807050	1					
ANR	807544	Identifier	context		807050	1					
ANR	807545	Identifier	cmd_depth		807050	1					
ANR	807546	IncDec	++		807050	1					
ANR	807547	ExpressionStatement	free ( ocmd )	4386:1:109672:109683	807050	17	True				
ANR	807548	CallExpression	free ( ocmd )		807050	0					
ANR	807549	Callee	free		807050	0					
ANR	807550	Identifier	free		807050	0					
ANR	807551	ArgumentList	ocmd		807050	1					
ANR	807552	Argument	ocmd		807050	0					
ANR	807553	Identifier	ocmd		807050	0					
ANR	807554	ExpressionStatement	R_FREE ( core -> oobi )	4387:1:109686:109705	807050	18	True				
ANR	807555	CallExpression	R_FREE ( core -> oobi )		807050	0					
ANR	807556	Callee	R_FREE		807050	0					
ANR	807557	Identifier	R_FREE		807050	0					
ANR	807558	ArgumentList	core -> oobi		807050	1					
ANR	807559	Argument	core -> oobi		807050	0					
ANR	807560	PtrMemberAccess	core -> oobi		807050	0					
ANR	807561	Identifier	core		807050	0					
ANR	807562	Identifier	oobi		807050	1					
ANR	807563	ExpressionStatement	core -> oobi_len = 0	4388:1:109708:109726	807050	19	True				
ANR	807564	AssignmentExpression	core -> oobi_len = 0		807050	0		=			
ANR	807565	PtrMemberAccess	core -> oobi_len		807050	0					
ANR	807566	Identifier	core		807050	0					
ANR	807567	Identifier	oobi_len		807050	1					
ANR	807568	PrimaryExpression	0		807050	1					
ANR	807569	ReturnStatement	return ret ;	4389:1:109729:109739	807050	20	True				
ANR	807570	Identifier	ret		807050	0					
ANR	807571	Label	beach :	4390:0:109741:109746	807050	21	True				
ANR	807572	Identifier	beach		807050	0					
ANR	807573	IfStatement	if ( r_list_empty ( core -> tasks ) )		807050	22					
ANR	807574	Condition	r_list_empty ( core -> tasks )	4391:5:109753:109778	807050	0	True				
ANR	807575	CallExpression	r_list_empty ( core -> tasks )		807050	0					
ANR	807576	Callee	r_list_empty		807050	0					
ANR	807577	Identifier	r_list_empty		807050	0					
ANR	807578	ArgumentList	core -> tasks		807050	1					
ANR	807579	Argument	core -> tasks		807050	0					
ANR	807580	PtrMemberAccess	core -> tasks		807050	0					
ANR	807581	Identifier	core		807050	0					
ANR	807582	Identifier	tasks		807050	1					
ANR	807583	CompoundStatement		91:33:1967:1967	807050	1					
ANR	807584	ExpressionStatement	r_th_lock_leave ( core -> lock )	4392:2:109785:109813	807050	0	True				
ANR	807585	CallExpression	r_th_lock_leave ( core -> lock )		807050	0					
ANR	807586	Callee	r_th_lock_leave		807050	0					
ANR	807587	Identifier	r_th_lock_leave		807050	0					
ANR	807588	ArgumentList	core -> lock		807050	1					
ANR	807589	Argument	core -> lock		807050	0					
ANR	807590	PtrMemberAccess	core -> lock		807050	0					
ANR	807591	Identifier	core		807050	0					
ANR	807592	Identifier	lock		807050	1					
ANR	807593	ElseStatement	else		807050	0					
ANR	807594	CompoundStatement		95:2:2032:2047	807050	0					
ANR	807595	IdentifierDeclStatement	RListIter * iter ;	4394:2:109827:109842	807050	0	True				
ANR	807596	IdentifierDecl	* iter		807050	0					
ANR	807597	IdentifierDeclType	RListIter *		807050	0					
ANR	807598	Identifier	iter		807050	1					
ANR	807599	IdentifierDeclStatement	RCoreTask * task ;	4395:2:109846:109861	807050	1	True				
ANR	807600	IdentifierDecl	* task		807050	0					
ANR	807601	IdentifierDeclType	RCoreTask *		807050	0					
ANR	807602	Identifier	task		807050	1					
ANR	807603	Statement	r_list_foreach	4396:2:109865:109878	807050	2	True				
ANR	807604	Statement	(	4396:17:109880:109880	807050	3	True				
ANR	807605	Statement	core	4396:18:109881:109884	807050	4	True				
ANR	807606	Statement	->	4396:22:109885:109886	807050	5	True				
ANR	807607	Statement	tasks	4396:24:109887:109891	807050	6	True				
ANR	807608	Statement	","	4396:29:109892:109892	807050	7	True				
ANR	807609	Statement	iter	4396:31:109894:109897	807050	8	True				
ANR	807610	Statement	","	4396:35:109898:109898	807050	9	True				
ANR	807611	Statement	task	4396:37:109900:109903	807050	10	True				
ANR	807612	Statement	)	4396:41:109904:109904	807050	11	True				
ANR	807613	CompoundStatement		96:43:2092:2092	807050	12					
ANR	807614	ExpressionStatement	"r_th_pause ( task -> thread , false )"	4397:3:109911:109943	807050	0	True				
ANR	807615	CallExpression	"r_th_pause ( task -> thread , false )"		807050	0					
ANR	807616	Callee	r_th_pause		807050	0					
ANR	807617	Identifier	r_th_pause		807050	0					
ANR	807618	ArgumentList	task -> thread		807050	1					
ANR	807619	Argument	task -> thread		807050	0					
ANR	807620	PtrMemberAccess	task -> thread		807050	0					
ANR	807621	Identifier	task		807050	0					
ANR	807622	Identifier	thread		807050	1					
ANR	807623	Argument	false		807050	1					
ANR	807624	Identifier	false		807050	0					
ANR	807625	ExpressionStatement	run_pending_anal ( core )	4401:1:109990:110013	807050	23	True				
ANR	807626	CallExpression	run_pending_anal ( core )		807050	0					
ANR	807627	Callee	run_pending_anal		807050	0					
ANR	807628	Identifier	run_pending_anal		807050	0					
ANR	807629	ArgumentList	core		807050	1					
ANR	807630	Argument	core		807050	0					
ANR	807631	Identifier	core		807050	0					
ANR	807632	ReturnStatement	return ret ;	4402:1:110016:110026	807050	24	True				
ANR	807633	Identifier	ret		807050	0					
ANR	807634	ReturnType	R_API int		807050	1					
ANR	807635	Identifier	r_core_cmd		807050	2					
ANR	807636	ParameterList	"RCore * core , const char * cstr , int log"		807050	3					
ANR	807637	Parameter	RCore * core	4301:21:107773:107783	807050	0	True				
ANR	807638	ParameterType	RCore *		807050	0					
ANR	807639	Identifier	core		807050	1					
ANR	807640	Parameter	const char * cstr	4301:34:107786:107801	807050	1	True				
ANR	807641	ParameterType	const char *		807050	0					
ANR	807642	Identifier	cstr		807050	1					
ANR	807643	Parameter	int log	4301:52:107804:107810	807050	2	True				
ANR	807644	ParameterType	int		807050	0					
ANR	807645	Identifier	log		807050	1					
ANR	807646	CFGEntryNode	ENTRY		807050		True				
ANR	807647	CFGExitNode	EXIT		807050		True				
ANR	807648	InfiniteForNode	true		807050		True				
ANR	807649	Symbol	r_io_system		807050						
ANR	807650	Symbol	core -> incomment		807050						
ANR	807651	Symbol	strchr		807050						
ANR	807652	Symbol	strncmp		807050						
ANR	807653	Symbol	strlen		807050						
ANR	807654	Symbol	task -> thread		807050						
ANR	807655	Symbol	* ptr		807050						
ANR	807656	Symbol	* rcmd		807050						
ANR	807657	Symbol	* task		807050						
ANR	807658	Symbol	ret		807050						
ANR	807659	Symbol	res		807050						
ANR	807660	Symbol	* * core -> cons		807050						
ANR	807661	Symbol	iter		807050						
ANR	807662	Symbol	invalid_chars		807050						
ANR	807663	Symbol	core		807050						
ANR	807664	Symbol	* * * core		807050						
ANR	807665	Symbol	task		807050						
ANR	807666	Symbol	true		807050						
ANR	807667	Symbol	* cstr		807050						
ANR	807668	Symbol	r_list_empty		807050						
ANR	807669	Symbol	cmd		807050						
ANR	807670	Symbol	rcmd		807050						
ANR	807671	Symbol	core -> cons -> context		807050						
ANR	807672	Symbol	cstr		807050						
ANR	807673	Symbol	log		807050						
ANR	807674	Symbol	core -> cmdfilter		807050						
ANR	807675	Symbol	* core -> cons		807050						
ANR	807676	Symbol	r_sandbox_enable		807050						
ANR	807677	Symbol	core -> oobi		807050						
ANR	807678	Symbol	* core		807050						
ANR	807679	Symbol	core -> lock		807050						
ANR	807680	Symbol	core -> lastcmd		807050						
ANR	807681	Symbol	core -> cmdremote		807050						
ANR	807682	Symbol	core -> cons		807050						
ANR	807683	Symbol	r_core_cmd_subst		807050						
ANR	807684	Symbol	core -> io		807050						
ANR	807685	Symbol	core -> tasks		807050						
ANR	807686	Symbol	* core -> cons -> context		807050						
ANR	807687	Symbol	ocmd		807050						
ANR	807688	Symbol	* * core		807050						
ANR	807689	Symbol	malloc		807050						
ANR	807690	Symbol	false		807050						
ANR	807691	Symbol	i		807050						
ANR	807692	Symbol	* invalid_chars		807050						
ANR	807693	Symbol	core -> oobi_len		807050						
ANR	807694	Symbol	ptr		807050						
ANR	807695	Symbol	* i		807050						
ANR	807696	Symbol	strdup		807050						
ANR	807697	Symbol	core -> cons -> context -> cmd_depth		807050						
ANR	807698	Function	r_core_cmd_lines	4405:0:110031:110931							
ANR	807699	FunctionDef	"r_core_cmd_lines (RCore * core , const char * lines)"		807698	0					
ANR	807700	CompoundStatement		4405:59:110090:110931	807698	0					
ANR	807701	IdentifierDeclStatement	"int r , ret = true ;"	4406:1:110093:110110	807698	0	True				
ANR	807702	IdentifierDecl	r		807698	0					
ANR	807703	IdentifierDeclType	int		807698	0					
ANR	807704	Identifier	r		807698	1					
ANR	807705	IdentifierDecl	ret = true		807698	1					
ANR	807706	IdentifierDeclType	int		807698	0					
ANR	807707	Identifier	ret		807698	1					
ANR	807708	AssignmentExpression	ret = true		807698	2		=			
ANR	807709	Identifier	true		807698	0					
ANR	807710	Identifier	true		807698	1					
ANR	807711	IdentifierDeclStatement	"char * nl , * data , * odata ;"	4407:1:110113:110136	807698	1	True				
ANR	807712	IdentifierDecl	* nl		807698	0					
ANR	807713	IdentifierDeclType	char *		807698	0					
ANR	807714	Identifier	nl		807698	1					
ANR	807715	IdentifierDecl	* data		807698	1					
ANR	807716	IdentifierDeclType	char *		807698	0					
ANR	807717	Identifier	data		807698	1					
ANR	807718	IdentifierDecl	* odata		807698	2					
ANR	807719	IdentifierDeclType	char *		807698	0					
ANR	807720	Identifier	odata		807698	1					
ANR	807721	IfStatement	if ( ! lines || ! * lines )		807698	2					
ANR	807722	Condition	! lines || ! * lines	4409:5:110144:110160	807698	0	True				
ANR	807723	OrExpression	! lines || ! * lines		807698	0		||			
ANR	807724	UnaryOperationExpression	! lines		807698	0					
ANR	807725	UnaryOperator	!		807698	0					
ANR	807726	Identifier	lines		807698	1					
ANR	807727	UnaryOperationExpression	! * lines		807698	1					
ANR	807728	UnaryOperator	!		807698	0					
ANR	807729	UnaryOperationExpression	* lines		807698	1					
ANR	807730	UnaryOperator	*		807698	0					
ANR	807731	Identifier	lines		807698	1					
ANR	807732	CompoundStatement		5:24:72:72	807698	1					
ANR	807733	ReturnStatement	return true ;	4410:2:110167:110178	807698	0	True				
ANR	807734	Identifier	true		807698	0					
ANR	807735	ExpressionStatement	data = odata = strdup ( lines )	4412:1:110184:110213	807698	3	True				
ANR	807736	AssignmentExpression	data = odata = strdup ( lines )		807698	0		=			
ANR	807737	Identifier	data		807698	0					
ANR	807738	AssignmentExpression	odata = strdup ( lines )		807698	1		=			
ANR	807739	Identifier	odata		807698	0					
ANR	807740	CallExpression	strdup ( lines )		807698	1					
ANR	807741	Callee	strdup		807698	0					
ANR	807742	Identifier	strdup		807698	0					
ANR	807743	ArgumentList	lines		807698	1					
ANR	807744	Argument	lines		807698	0					
ANR	807745	Identifier	lines		807698	0					
ANR	807746	IfStatement	if ( ! odata )		807698	4					
ANR	807747	Condition	! odata	4413:5:110220:110225	807698	0	True				
ANR	807748	UnaryOperationExpression	! odata		807698	0					
ANR	807749	UnaryOperator	!		807698	0					
ANR	807750	Identifier	odata		807698	1					
ANR	807751	CompoundStatement		9:13:137:137	807698	1					
ANR	807752	ReturnStatement	return false ;	4414:2:110232:110244	807698	0	True				
ANR	807753	Identifier	false		807698	0					
ANR	807754	ExpressionStatement	"nl = strchr ( odata , '\\n' )"	4416:1:110250:110275	807698	5	True				
ANR	807755	AssignmentExpression	"nl = strchr ( odata , '\\n' )"		807698	0		=			
ANR	807756	Identifier	nl		807698	0					
ANR	807757	CallExpression	"strchr ( odata , '\\n' )"		807698	1					
ANR	807758	Callee	strchr		807698	0					
ANR	807759	Identifier	strchr		807698	0					
ANR	807760	ArgumentList	odata		807698	1					
ANR	807761	Argument	odata		807698	0					
ANR	807762	Identifier	odata		807698	0					
ANR	807763	Argument	'\\n'		807698	1					
ANR	807764	PrimaryExpression	'\\n'		807698	0					
ANR	807765	IfStatement	if ( nl )		807698	6					
ANR	807766	Condition	nl	4417:5:110282:110283	807698	0	True				
ANR	807767	Identifier	nl		807698	0					
ANR	807768	CompoundStatement		13:9:195:195	807698	1					
ANR	807769	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	4418:2:110290:110320	807698	0	True				
ANR	807770	CallExpression	"r_cons_break_push ( NULL , NULL )"		807698	0					
ANR	807771	Callee	r_cons_break_push		807698	0					
ANR	807772	Identifier	r_cons_break_push		807698	0					
ANR	807773	ArgumentList	NULL		807698	1					
ANR	807774	Argument	NULL		807698	0					
ANR	807775	Identifier	NULL		807698	0					
ANR	807776	Argument	NULL		807698	1					
ANR	807777	Identifier	NULL		807698	0					
ANR	807778	DoStatement	do		807698	1					
ANR	807779	CompoundStatement		15:5:236:236	807698	0					
ANR	807780	IfStatement	if ( r_cons_is_breaked ( ) )		807698	0					
ANR	807781	Condition	r_cons_is_breaked ( )	4420:7:110336:110355	807698	0	True				
ANR	807782	CallExpression	r_cons_is_breaked ( )		807698	0					
ANR	807783	Callee	r_cons_is_breaked		807698	0					
ANR	807784	Identifier	r_cons_is_breaked		807698	0					
ANR	807785	ArgumentList			807698	1					
ANR	807786	CompoundStatement		16:29:267:267	807698	1					
ANR	807787	ExpressionStatement	free ( odata )	4421:4:110364:110376	807698	0	True				
ANR	807788	CallExpression	free ( odata )		807698	0					
ANR	807789	Callee	free		807698	0					
ANR	807790	Identifier	free		807698	0					
ANR	807791	ArgumentList	odata		807698	1					
ANR	807792	Argument	odata		807698	0					
ANR	807793	Identifier	odata		807698	0					
ANR	807794	ExpressionStatement	r_cons_break_pop ( )	4422:4:110382:110401	807698	1	True				
ANR	807795	CallExpression	r_cons_break_pop ( )		807698	0					
ANR	807796	Callee	r_cons_break_pop		807698	0					
ANR	807797	Identifier	r_cons_break_pop		807698	0					
ANR	807798	ArgumentList			807698	1					
ANR	807799	ReturnStatement	return ret ;	4423:4:110407:110417	807698	2	True				
ANR	807800	Identifier	ret		807698	0					
ANR	807801	ExpressionStatement	* nl = '\\0'	4425:3:110427:110437	807698	1	True				
ANR	807802	AssignmentExpression	* nl = '\\0'		807698	0		=			
ANR	807803	UnaryOperationExpression	* nl		807698	0					
ANR	807804	UnaryOperator	*		807698	0					
ANR	807805	Identifier	nl		807698	1					
ANR	807806	PrimaryExpression	'\\0'		807698	1					
ANR	807807	ExpressionStatement	"r = r_core_cmd ( core , data , 0 )"	4426:3:110442:110472	807698	2	True				
ANR	807808	AssignmentExpression	"r = r_core_cmd ( core , data , 0 )"		807698	0		=			
ANR	807809	Identifier	r		807698	0					
ANR	807810	CallExpression	"r_core_cmd ( core , data , 0 )"		807698	1					
ANR	807811	Callee	r_core_cmd		807698	0					
ANR	807812	Identifier	r_core_cmd		807698	0					
ANR	807813	ArgumentList	core		807698	1					
ANR	807814	Argument	core		807698	0					
ANR	807815	Identifier	core		807698	0					
ANR	807816	Argument	data		807698	1					
ANR	807817	Identifier	data		807698	0					
ANR	807818	Argument	0		807698	2					
ANR	807819	PrimaryExpression	0		807698	0					
ANR	807820	IfStatement	if ( r < 0 )		807698	3					
ANR	807821	Condition	r < 0	4427:7:110481:110485	807698	0	True				
ANR	807822	RelationalExpression	r < 0		807698	0		<			
ANR	807823	Identifier	r		807698	0					
ANR	807824	PrimaryExpression	0		807698	1					
ANR	807825	CompoundStatement		23:14:397:397	807698	1					
ANR	807826	ExpressionStatement	data = nl + 1	4428:4:110505:110518	807698	0	True				
ANR	807827	AssignmentExpression	data = nl + 1		807698	0		=			
ANR	807828	Identifier	data		807698	0					
ANR	807829	AdditiveExpression	nl + 1		807698	1		+			
ANR	807830	Identifier	nl		807698	0					
ANR	807831	PrimaryExpression	1		807698	1					
ANR	807832	ExpressionStatement	ret = - 1	4429:4:110524:110532	807698	1	True				
ANR	807833	AssignmentExpression	ret = - 1		807698	0		=			
ANR	807834	Identifier	ret		807698	0					
ANR	807835	UnaryOperationExpression	- 1		807698	1					
ANR	807836	UnaryOperator	-		807698	0					
ANR	807837	PrimaryExpression	1		807698	1					
ANR	807838	BreakStatement	break ;	4430:4:110552:110557	807698	2	True				
ANR	807839	ExpressionStatement	r_cons_flush ( )	4432:3:110567:110582	807698	4	True				
ANR	807840	CallExpression	r_cons_flush ( )		807698	0					
ANR	807841	Callee	r_cons_flush		807698	0					
ANR	807842	Identifier	r_cons_flush		807698	0					
ANR	807843	ArgumentList			807698	1					
ANR	807844	IfStatement	if ( data [ 0 ] == 'q' )		807698	5					
ANR	807845	Condition	data [ 0 ] == 'q'	4433:7:110591:110604	807698	0	True				
ANR	807846	EqualityExpression	data [ 0 ] == 'q'		807698	0		==			
ANR	807847	ArrayIndexing	data [ 0 ]		807698	0					
ANR	807848	Identifier	data		807698	0					
ANR	807849	PrimaryExpression	0		807698	1					
ANR	807850	PrimaryExpression	'q'		807698	1					
ANR	807851	CompoundStatement		29:23:516:516	807698	1					
ANR	807852	IfStatement	if ( data [ 1 ] == '!' )		807698	0					
ANR	807853	Condition	data [ 1 ] == '!'	4434:8:110617:110630	807698	0	True				
ANR	807854	EqualityExpression	data [ 1 ] == '!'		807698	0		==			
ANR	807855	ArrayIndexing	data [ 1 ]		807698	0					
ANR	807856	Identifier	data		807698	0					
ANR	807857	PrimaryExpression	1		807698	1					
ANR	807858	PrimaryExpression	'!'		807698	1					
ANR	807859	CompoundStatement		30:24:542:542	807698	1					
ANR	807860	ExpressionStatement	ret = - 1	4435:5:110640:110648	807698	0	True				
ANR	807861	AssignmentExpression	ret = - 1		807698	0		=			
ANR	807862	Identifier	ret		807698	0					
ANR	807863	UnaryOperationExpression	- 1		807698	1					
ANR	807864	UnaryOperator	-		807698	0					
ANR	807865	PrimaryExpression	1		807698	1					
ANR	807866	ElseStatement	else		807698	0					
ANR	807867	CompoundStatement		32:11:570:570	807698	0					
ANR	807868	ExpressionStatement	"eprintf ( ""'q': quit ignored. Use 'q!'\\n"" )"	4437:5:110668:110709	807698	0	True				
ANR	807869	CallExpression	"eprintf ( ""'q': quit ignored. Use 'q!'\\n"" )"		807698	0					
ANR	807870	Callee	eprintf		807698	0					
ANR	807871	Identifier	eprintf		807698	0					
ANR	807872	ArgumentList	"""'q': quit ignored. Use 'q!'\\n"""		807698	1					
ANR	807873	Argument	"""'q': quit ignored. Use 'q!'\\n"""		807698	0					
ANR	807874	PrimaryExpression	"""'q': quit ignored. Use 'q!'\\n"""		807698	0					
ANR	807875	ExpressionStatement	data = nl + 1	4439:4:110721:110734	807698	1	True				
ANR	807876	AssignmentExpression	data = nl + 1		807698	0		=			
ANR	807877	Identifier	data		807698	0					
ANR	807878	AdditiveExpression	nl + 1		807698	1		+			
ANR	807879	Identifier	nl		807698	0					
ANR	807880	PrimaryExpression	1		807698	1					
ANR	807881	BreakStatement	break ;	4440:4:110740:110745	807698	2	True				
ANR	807882	ExpressionStatement	data = nl + 1	4442:3:110755:110768	807698	6	True				
ANR	807883	AssignmentExpression	data = nl + 1		807698	0		=			
ANR	807884	Identifier	data		807698	0					
ANR	807885	AdditiveExpression	nl + 1		807698	1		+			
ANR	807886	Identifier	nl		807698	0					
ANR	807887	PrimaryExpression	1		807698	1					
ANR	807888	Condition	"nl = strchr ( data , '\\n' )"	4443:11:110781:110806	807698	1	True				
ANR	807889	AssignmentExpression	"nl = strchr ( data , '\\n' )"		807698	0		=			
ANR	807890	Identifier	nl		807698	0					
ANR	807891	CallExpression	"strchr ( data , '\\n' )"		807698	1					
ANR	807892	Callee	strchr		807698	0					
ANR	807893	Identifier	strchr		807698	0					
ANR	807894	ArgumentList	data		807698	1					
ANR	807895	Argument	data		807698	0					
ANR	807896	Identifier	data		807698	0					
ANR	807897	Argument	'\\n'		807698	1					
ANR	807898	PrimaryExpression	'\\n'		807698	0					
ANR	807899	ExpressionStatement	r_cons_break_pop ( )	4444:2:110812:110831	807698	2	True				
ANR	807900	CallExpression	r_cons_break_pop ( )		807698	0					
ANR	807901	Callee	r_cons_break_pop		807698	0					
ANR	807902	Identifier	r_cons_break_pop		807698	0					
ANR	807903	ArgumentList			807698	1					
ANR	807904	IfStatement	if ( ret >= 0 && data && * data )		807698	7					
ANR	807905	Condition	ret >= 0 && data && * data	4446:5:110841:110865	807698	0	True				
ANR	807906	AndExpression	ret >= 0 && data && * data		807698	0		&&			
ANR	807907	RelationalExpression	ret >= 0		807698	0		>=			
ANR	807908	Identifier	ret		807698	0					
ANR	807909	PrimaryExpression	0		807698	1					
ANR	807910	AndExpression	data && * data		807698	1		&&			
ANR	807911	Identifier	data		807698	0					
ANR	807912	UnaryOperationExpression	* data		807698	1					
ANR	807913	UnaryOperator	*		807698	0					
ANR	807914	Identifier	data		807698	1					
ANR	807915	CompoundStatement		42:32:777:777	807698	1					
ANR	807916	ExpressionStatement	"r_core_cmd ( core , data , 0 )"	4447:2:110872:110898	807698	0	True				
ANR	807917	CallExpression	"r_core_cmd ( core , data , 0 )"		807698	0					
ANR	807918	Callee	r_core_cmd		807698	0					
ANR	807919	Identifier	r_core_cmd		807698	0					
ANR	807920	ArgumentList	core		807698	1					
ANR	807921	Argument	core		807698	0					
ANR	807922	Identifier	core		807698	0					
ANR	807923	Argument	data		807698	1					
ANR	807924	Identifier	data		807698	0					
ANR	807925	Argument	0		807698	2					
ANR	807926	PrimaryExpression	0		807698	0					
ANR	807927	ExpressionStatement	free ( odata )	4449:1:110904:110916	807698	8	True				
ANR	807928	CallExpression	free ( odata )		807698	0					
ANR	807929	Callee	free		807698	0					
ANR	807930	Identifier	free		807698	0					
ANR	807931	ArgumentList	odata		807698	1					
ANR	807932	Argument	odata		807698	0					
ANR	807933	Identifier	odata		807698	0					
ANR	807934	ReturnStatement	return ret ;	4450:1:110919:110929	807698	9	True				
ANR	807935	Identifier	ret		807698	0					
ANR	807936	ReturnType	R_API int		807698	1					
ANR	807937	Identifier	r_core_cmd_lines		807698	2					
ANR	807938	ParameterList	"RCore * core , const char * lines"		807698	3					
ANR	807939	Parameter	RCore * core	4405:27:110058:110068	807698	0	True				
ANR	807940	ParameterType	RCore *		807698	0					
ANR	807941	Identifier	core		807698	1					
ANR	807942	Parameter	const char * lines	4405:40:110071:110087	807698	1	True				
ANR	807943	ParameterType	const char *		807698	0					
ANR	807944	Identifier	lines		807698	1					
ANR	807945	CFGEntryNode	ENTRY		807698		True				
ANR	807946	CFGExitNode	EXIT		807698		True				
ANR	807947	Symbol	ret		807698						
ANR	807948	Symbol	r_core_cmd		807698						
ANR	807949	Symbol	NULL		807698						
ANR	807950	Symbol	data		807698						
ANR	807951	Symbol	* nl		807698						
ANR	807952	Symbol	false		807698						
ANR	807953	Symbol	strchr		807698						
ANR	807954	Symbol	* lines		807698						
ANR	807955	Symbol	core		807698						
ANR	807956	Symbol	r		807698						
ANR	807957	Symbol	odata		807698						
ANR	807958	Symbol	r_cons_is_breaked		807698						
ANR	807959	Symbol	true		807698						
ANR	807960	Symbol	strdup		807698						
ANR	807961	Symbol	lines		807698						
ANR	807962	Symbol	* data		807698						
ANR	807963	Symbol	nl		807698						
ANR	807964	Function	r_core_cmd_file	4453:0:110934:111306							
ANR	807965	FunctionDef	"r_core_cmd_file (RCore * core , const char * file)"		807964	0					
ANR	807966	CompoundStatement		4453:57:110991:111306	807964	0					
ANR	807967	IdentifierDeclStatement	char * data = r_file_abspath ( file ) ;	4454:1:110994:111028	807964	0	True				
ANR	807968	IdentifierDecl	* data = r_file_abspath ( file )		807964	0					
ANR	807969	IdentifierDeclType	char *		807964	0					
ANR	807970	Identifier	data		807964	1					
ANR	807971	AssignmentExpression	* data = r_file_abspath ( file )		807964	2		=			
ANR	807972	Identifier	data		807964	0					
ANR	807973	CallExpression	r_file_abspath ( file )		807964	1					
ANR	807974	Callee	r_file_abspath		807964	0					
ANR	807975	Identifier	r_file_abspath		807964	0					
ANR	807976	ArgumentList	file		807964	1					
ANR	807977	Argument	file		807964	0					
ANR	807978	Identifier	file		807964	0					
ANR	807979	IfStatement	if ( ! data )		807964	1					
ANR	807980	Condition	! data	4455:5:111035:111039	807964	0	True				
ANR	807981	UnaryOperationExpression	! data		807964	0					
ANR	807982	UnaryOperator	!		807964	0					
ANR	807983	Identifier	data		807964	1					
ANR	807984	CompoundStatement		3:12:50:50	807964	1					
ANR	807985	ReturnStatement	return false ;	4456:2:111046:111058	807964	0	True				
ANR	807986	Identifier	false		807964	0					
ANR	807987	IdentifierDeclStatement	"char * odata = r_file_slurp ( data , NULL ) ;"	4458:1:111064:111103	807964	2	True				
ANR	807988	IdentifierDecl	"* odata = r_file_slurp ( data , NULL )"		807964	0					
ANR	807989	IdentifierDeclType	char *		807964	0					
ANR	807990	Identifier	odata		807964	1					
ANR	807991	AssignmentExpression	"* odata = r_file_slurp ( data , NULL )"		807964	2		=			
ANR	807992	Identifier	odata		807964	0					
ANR	807993	CallExpression	"r_file_slurp ( data , NULL )"		807964	1					
ANR	807994	Callee	r_file_slurp		807964	0					
ANR	807995	Identifier	r_file_slurp		807964	0					
ANR	807996	ArgumentList	data		807964	1					
ANR	807997	Argument	data		807964	0					
ANR	807998	Identifier	data		807964	0					
ANR	807999	Argument	NULL		807964	1					
ANR	808000	Identifier	NULL		807964	0					
ANR	808001	ExpressionStatement	free ( data )	4459:1:111106:111117	807964	3	True				
ANR	808002	CallExpression	free ( data )		807964	0					
ANR	808003	Callee	free		807964	0					
ANR	808004	Identifier	free		807964	0					
ANR	808005	ArgumentList	data		807964	1					
ANR	808006	Argument	data		807964	0					
ANR	808007	Identifier	data		807964	0					
ANR	808008	IfStatement	if ( ! odata )		807964	4					
ANR	808009	Condition	! odata	4460:5:111124:111129	807964	0	True				
ANR	808010	UnaryOperationExpression	! odata		807964	0					
ANR	808011	UnaryOperator	!		807964	0					
ANR	808012	Identifier	odata		807964	1					
ANR	808013	CompoundStatement		8:13:140:140	807964	1					
ANR	808014	ReturnStatement	return false ;	4461:2:111136:111148	807964	0	True				
ANR	808015	Identifier	false		807964	0					
ANR	808016	IfStatement	"if ( ! r_core_cmd_lines ( core , odata ) )"		807964	5					
ANR	808017	Condition	"! r_core_cmd_lines ( core , odata )"	4463:5:111158:111188	807964	0	True				
ANR	808018	UnaryOperationExpression	"! r_core_cmd_lines ( core , odata )"		807964	0					
ANR	808019	UnaryOperator	!		807964	0					
ANR	808020	CallExpression	"r_core_cmd_lines ( core , odata )"		807964	1					
ANR	808021	Callee	r_core_cmd_lines		807964	0					
ANR	808022	Identifier	r_core_cmd_lines		807964	0					
ANR	808023	ArgumentList	core		807964	1					
ANR	808024	Argument	core		807964	0					
ANR	808025	Identifier	core		807964	0					
ANR	808026	Argument	odata		807964	1					
ANR	808027	Identifier	odata		807964	0					
ANR	808028	CompoundStatement		11:38:199:199	807964	1					
ANR	808029	ExpressionStatement	"eprintf ( ""Failed to run script '%s'\\n"" , file )"	4464:2:111195:111240	807964	0	True				
ANR	808030	CallExpression	"eprintf ( ""Failed to run script '%s'\\n"" , file )"		807964	0					
ANR	808031	Callee	eprintf		807964	0					
ANR	808032	Identifier	eprintf		807964	0					
ANR	808033	ArgumentList	"""Failed to run script '%s'\\n"""		807964	1					
ANR	808034	Argument	"""Failed to run script '%s'\\n"""		807964	0					
ANR	808035	PrimaryExpression	"""Failed to run script '%s'\\n"""		807964	0					
ANR	808036	Argument	file		807964	1					
ANR	808037	Identifier	file		807964	0					
ANR	808038	ExpressionStatement	free ( odata )	4465:2:111244:111256	807964	1	True				
ANR	808039	CallExpression	free ( odata )		807964	0					
ANR	808040	Callee	free		807964	0					
ANR	808041	Identifier	free		807964	0					
ANR	808042	ArgumentList	odata		807964	1					
ANR	808043	Argument	odata		807964	0					
ANR	808044	Identifier	odata		807964	0					
ANR	808045	ReturnStatement	return false ;	4466:2:111260:111272	807964	2	True				
ANR	808046	Identifier	false		807964	0					
ANR	808047	ExpressionStatement	free ( odata )	4468:1:111278:111290	807964	6	True				
ANR	808048	CallExpression	free ( odata )		807964	0					
ANR	808049	Callee	free		807964	0					
ANR	808050	Identifier	free		807964	0					
ANR	808051	ArgumentList	odata		807964	1					
ANR	808052	Argument	odata		807964	0					
ANR	808053	Identifier	odata		807964	0					
ANR	808054	ReturnStatement	return true ;	4469:1:111293:111304	807964	7	True				
ANR	808055	Identifier	true		807964	0					
ANR	808056	ReturnType	R_API int		807964	1					
ANR	808057	Identifier	r_core_cmd_file		807964	2					
ANR	808058	ParameterList	"RCore * core , const char * file"		807964	3					
ANR	808059	Parameter	RCore * core	4453:26:110960:110970	807964	0	True				
ANR	808060	ParameterType	RCore *		807964	0					
ANR	808061	Identifier	core		807964	1					
ANR	808062	Parameter	const char * file	4453:39:110973:110988	807964	1	True				
ANR	808063	ParameterType	const char *		807964	0					
ANR	808064	Identifier	file		807964	1					
ANR	808065	CFGEntryNode	ENTRY		807964		True				
ANR	808066	CFGExitNode	EXIT		807964		True				
ANR	808067	Symbol	core		807964						
ANR	808068	Symbol	r_file_abspath		807964						
ANR	808069	Symbol	odata		807964						
ANR	808070	Symbol	r_file_slurp		807964						
ANR	808071	Symbol	file		807964						
ANR	808072	Symbol	NULL		807964						
ANR	808073	Symbol	data		807964						
ANR	808074	Symbol	r_core_cmd_lines		807964						
ANR	808075	Symbol	false		807964						
ANR	808076	Symbol	true		807964						
ANR	808077	Function	r_core_cmd_command	4472:0:111309:111654							
ANR	808078	FunctionDef	"r_core_cmd_command (RCore * core , const char * command)"		808077	0					
ANR	808079	CompoundStatement		4472:63:111372:111654	808077	0					
ANR	808080	IdentifierDeclStatement	"int ret , len ;"	4473:1:111375:111387	808077	0	True				
ANR	808081	IdentifierDecl	ret		808077	0					
ANR	808082	IdentifierDeclType	int		808077	0					
ANR	808083	Identifier	ret		808077	1					
ANR	808084	IdentifierDecl	len		808077	1					
ANR	808085	IdentifierDeclType	int		808077	0					
ANR	808086	Identifier	len		808077	1					
ANR	808087	IdentifierDeclStatement	"char * buf , * rcmd , * ptr ;"	4474:1:111390:111412	808077	1	True				
ANR	808088	IdentifierDecl	* buf		808077	0					
ANR	808089	IdentifierDeclType	char *		808077	0					
ANR	808090	Identifier	buf		808077	1					
ANR	808091	IdentifierDecl	* rcmd		808077	1					
ANR	808092	IdentifierDeclType	char *		808077	0					
ANR	808093	Identifier	rcmd		808077	1					
ANR	808094	IdentifierDecl	* ptr		808077	2					
ANR	808095	IdentifierDeclType	char *		808077	0					
ANR	808096	Identifier	ptr		808077	1					
ANR	808097	IdentifierDeclStatement	"char * cmd = r_core_sysenv_begin ( core , command ) ;"	4475:1:111415:111462	808077	2	True				
ANR	808098	IdentifierDecl	"* cmd = r_core_sysenv_begin ( core , command )"		808077	0					
ANR	808099	IdentifierDeclType	char *		808077	0					
ANR	808100	Identifier	cmd		808077	1					
ANR	808101	AssignmentExpression	"* cmd = r_core_sysenv_begin ( core , command )"		808077	2		=			
ANR	808102	Identifier	cmd		808077	0					
ANR	808103	CallExpression	"r_core_sysenv_begin ( core , command )"		808077	1					
ANR	808104	Callee	r_core_sysenv_begin		808077	0					
ANR	808105	Identifier	r_core_sysenv_begin		808077	0					
ANR	808106	ArgumentList	core		808077	1					
ANR	808107	Argument	core		808077	0					
ANR	808108	Identifier	core		808077	0					
ANR	808109	Argument	command		808077	1					
ANR	808110	Identifier	command		808077	0					
ANR	808111	ExpressionStatement	"rcmd = ptr = buf = r_sys_cmd_str ( cmd , 0 , & len )"	4476:1:111465:111512	808077	3	True				
ANR	808112	AssignmentExpression	"rcmd = ptr = buf = r_sys_cmd_str ( cmd , 0 , & len )"		808077	0		=			
ANR	808113	Identifier	rcmd		808077	0					
ANR	808114	AssignmentExpression	"ptr = buf = r_sys_cmd_str ( cmd , 0 , & len )"		808077	1		=			
ANR	808115	Identifier	ptr		808077	0					
ANR	808116	AssignmentExpression	"buf = r_sys_cmd_str ( cmd , 0 , & len )"		808077	1		=			
ANR	808117	Identifier	buf		808077	0					
ANR	808118	CallExpression	"r_sys_cmd_str ( cmd , 0 , & len )"		808077	1					
ANR	808119	Callee	r_sys_cmd_str		808077	0					
ANR	808120	Identifier	r_sys_cmd_str		808077	0					
ANR	808121	ArgumentList	cmd		808077	1					
ANR	808122	Argument	cmd		808077	0					
ANR	808123	Identifier	cmd		808077	0					
ANR	808124	Argument	0		808077	1					
ANR	808125	PrimaryExpression	0		808077	0					
ANR	808126	Argument	& len		808077	2					
ANR	808127	UnaryOperationExpression	& len		808077	0					
ANR	808128	UnaryOperator	&		808077	0					
ANR	808129	Identifier	len		808077	1					
ANR	808130	IfStatement	if ( ! buf )		808077	4					
ANR	808131	Condition	! buf	4477:5:111519:111522	808077	0	True				
ANR	808132	UnaryOperationExpression	! buf		808077	0					
ANR	808133	UnaryOperator	!		808077	0					
ANR	808134	Identifier	buf		808077	1					
ANR	808135	CompoundStatement		6:11:152:152	808077	1					
ANR	808136	ExpressionStatement	free ( cmd )	4478:2:111529:111539	808077	0	True				
ANR	808137	CallExpression	free ( cmd )		808077	0					
ANR	808138	Callee	free		808077	0					
ANR	808139	Identifier	free		808077	0					
ANR	808140	ArgumentList	cmd		808077	1					
ANR	808141	Argument	cmd		808077	0					
ANR	808142	Identifier	cmd		808077	0					
ANR	808143	ReturnStatement	return - 1 ;	4479:2:111543:111552	808077	1	True				
ANR	808144	UnaryOperationExpression	- 1		808077	0					
ANR	808145	UnaryOperator	-		808077	0					
ANR	808146	PrimaryExpression	1		808077	1					
ANR	808147	ExpressionStatement	"ret = r_core_cmd ( core , rcmd , 0 )"	4481:1:111558:111590	808077	5	True				
ANR	808148	AssignmentExpression	"ret = r_core_cmd ( core , rcmd , 0 )"		808077	0		=			
ANR	808149	Identifier	ret		808077	0					
ANR	808150	CallExpression	"r_core_cmd ( core , rcmd , 0 )"		808077	1					
ANR	808151	Callee	r_core_cmd		808077	0					
ANR	808152	Identifier	r_core_cmd		808077	0					
ANR	808153	ArgumentList	core		808077	1					
ANR	808154	Argument	core		808077	0					
ANR	808155	Identifier	core		808077	0					
ANR	808156	Argument	rcmd		808077	1					
ANR	808157	Identifier	rcmd		808077	0					
ANR	808158	Argument	0		808077	2					
ANR	808159	PrimaryExpression	0		808077	0					
ANR	808160	ExpressionStatement	"r_core_sysenv_end ( core , command )"	4482:1:111593:111626	808077	6	True				
ANR	808161	CallExpression	"r_core_sysenv_end ( core , command )"		808077	0					
ANR	808162	Callee	r_core_sysenv_end		808077	0					
ANR	808163	Identifier	r_core_sysenv_end		808077	0					
ANR	808164	ArgumentList	core		808077	1					
ANR	808165	Argument	core		808077	0					
ANR	808166	Identifier	core		808077	0					
ANR	808167	Argument	command		808077	1					
ANR	808168	Identifier	command		808077	0					
ANR	808169	ExpressionStatement	free ( buf )	4483:1:111629:111639	808077	7	True				
ANR	808170	CallExpression	free ( buf )		808077	0					
ANR	808171	Callee	free		808077	0					
ANR	808172	Identifier	free		808077	0					
ANR	808173	ArgumentList	buf		808077	1					
ANR	808174	Argument	buf		808077	0					
ANR	808175	Identifier	buf		808077	0					
ANR	808176	ReturnStatement	return ret ;	4484:1:111642:111652	808077	8	True				
ANR	808177	Identifier	ret		808077	0					
ANR	808178	ReturnType	R_API int		808077	1					
ANR	808179	Identifier	r_core_cmd_command		808077	2					
ANR	808180	ParameterList	"RCore * core , const char * command"		808077	3					
ANR	808181	Parameter	RCore * core	4472:29:111338:111348	808077	0	True				
ANR	808182	ParameterType	RCore *		808077	0					
ANR	808183	Identifier	core		808077	1					
ANR	808184	Parameter	const char * command	4472:42:111351:111369	808077	1	True				
ANR	808185	ParameterType	const char *		808077	0					
ANR	808186	Identifier	command		808077	1					
ANR	808187	CFGEntryNode	ENTRY		808077		True				
ANR	808188	CFGExitNode	EXIT		808077		True				
ANR	808189	Symbol	ret		808077						
ANR	808190	Symbol	core		808077						
ANR	808191	Symbol	r_core_sysenv_begin		808077						
ANR	808192	Symbol	r_sys_cmd_str		808077						
ANR	808193	Symbol	r_core_cmd		808077						
ANR	808194	Symbol	buf		808077						
ANR	808195	Symbol	len		808077						
ANR	808196	Symbol	cmd		808077						
ANR	808197	Symbol	& len		808077						
ANR	808198	Symbol	rcmd		808077						
ANR	808199	Symbol	command		808077						
ANR	808200	Symbol	ptr		808077						
ANR	808201	Function	r_core_disassemble_instr	4488:0:111694:111920							
ANR	808202	FunctionDef	"r_core_disassemble_instr (RCore * core , ut64 addr , int l)"		808201	0					
ANR	808203	CompoundStatement		4488:68:111762:111920	808201	0					
ANR	808204	IdentifierDeclStatement	"char * cmd , * ret = NULL ;"	4489:1:111765:111787	808201	0	True				
ANR	808205	IdentifierDecl	* cmd		808201	0					
ANR	808206	IdentifierDeclType	char *		808201	0					
ANR	808207	Identifier	cmd		808201	1					
ANR	808208	IdentifierDecl	* ret = NULL		808201	1					
ANR	808209	IdentifierDeclType	char *		808201	0					
ANR	808210	Identifier	ret		808201	1					
ANR	808211	AssignmentExpression	* ret = NULL		808201	2		=			
ANR	808212	Identifier	NULL		808201	0					
ANR	808213	Identifier	NULL		808201	1					
ANR	808214	Statement	cmd	4490:1:111790:111792	808201	1	True				
ANR	808215	Statement	=	4490:5:111794:111794	808201	2	True				
ANR	808216	Statement	r_str_newf	4490:7:111796:111805	808201	3	True				
ANR	808217	Statement	(	4490:18:111807:111807	808201	4	True				
ANR	808218	Statement	"""pd %i @ 0x%08"""	4490:19:111808:111822	808201	5	True				
ANR	808219	Statement	PFMT64x	4490:34:111823:111829	808201	6	True				
ANR	808220	Statement	","	4490:41:111830:111830	808201	7	True				
ANR	808221	Statement	l	4490:43:111832:111832	808201	8	True				
ANR	808222	Statement	","	4490:44:111833:111833	808201	9	True				
ANR	808223	Statement	addr	4490:46:111835:111838	808201	10	True				
ANR	808224	Statement	)	4490:50:111839:111839	808201	11	True				
ANR	808225	ExpressionStatement		4490:51:111840:111840	808201	12	True				
ANR	808226	IfStatement	if ( cmd )		808201	13					
ANR	808227	Condition	cmd	4491:5:111847:111849	808201	0	True				
ANR	808228	Identifier	cmd		808201	0					
ANR	808229	CompoundStatement		4:10:89:89	808201	1					
ANR	808230	ExpressionStatement	"ret = r_core_cmd_str ( core , cmd )"	4492:2:111856:111888	808201	0	True				
ANR	808231	AssignmentExpression	"ret = r_core_cmd_str ( core , cmd )"		808201	0		=			
ANR	808232	Identifier	ret		808201	0					
ANR	808233	CallExpression	"r_core_cmd_str ( core , cmd )"		808201	1					
ANR	808234	Callee	r_core_cmd_str		808201	0					
ANR	808235	Identifier	r_core_cmd_str		808201	0					
ANR	808236	ArgumentList	core		808201	1					
ANR	808237	Argument	core		808201	0					
ANR	808238	Identifier	core		808201	0					
ANR	808239	Argument	cmd		808201	1					
ANR	808240	Identifier	cmd		808201	0					
ANR	808241	ExpressionStatement	free ( cmd )	4493:2:111892:111902	808201	1	True				
ANR	808242	CallExpression	free ( cmd )		808201	0					
ANR	808243	Callee	free		808201	0					
ANR	808244	Identifier	free		808201	0					
ANR	808245	ArgumentList	cmd		808201	1					
ANR	808246	Argument	cmd		808201	0					
ANR	808247	Identifier	cmd		808201	0					
ANR	808248	ReturnStatement	return ret ;	4495:1:111908:111918	808201	14	True				
ANR	808249	Identifier	ret		808201	0					
ANR	808250	ReturnType	R_API char *		808201	1					
ANR	808251	Identifier	r_core_disassemble_instr		808201	2					
ANR	808252	ParameterList	"RCore * core , ut64 addr , int l"		808201	3					
ANR	808253	Parameter	RCore * core	4488:37:111731:111741	808201	0	True				
ANR	808254	ParameterType	RCore *		808201	0					
ANR	808255	Identifier	core		808201	1					
ANR	808256	Parameter	ut64 addr	4488:50:111744:111752	808201	1	True				
ANR	808257	ParameterType	ut64		808201	0					
ANR	808258	Identifier	addr		808201	1					
ANR	808259	Parameter	int l	4488:61:111755:111759	808201	2	True				
ANR	808260	ParameterType	int		808201	0					
ANR	808261	Identifier	l		808201	1					
ANR	808262	CFGEntryNode	ENTRY		808201		True				
ANR	808263	CFGExitNode	EXIT		808201		True				
ANR	808264	Symbol	ret		808201						
ANR	808265	Symbol	core		808201						
ANR	808266	Symbol	NULL		808201						
ANR	808267	Symbol	r_core_cmd_str		808201						
ANR	808268	Symbol	cmd		808201						
ANR	808269	Symbol	addr		808201						
ANR	808270	Symbol	l		808201						
ANR	808271	Function	r_core_disassemble_bytes	4498:0:111923:112149							
ANR	808272	FunctionDef	"r_core_disassemble_bytes (RCore * core , ut64 addr , int b)"		808271	0					
ANR	808273	CompoundStatement		4498:68:111991:112149	808271	0					
ANR	808274	IdentifierDeclStatement	"char * cmd , * ret = NULL ;"	4499:1:111994:112016	808271	0	True				
ANR	808275	IdentifierDecl	* cmd		808271	0					
ANR	808276	IdentifierDeclType	char *		808271	0					
ANR	808277	Identifier	cmd		808271	1					
ANR	808278	IdentifierDecl	* ret = NULL		808271	1					
ANR	808279	IdentifierDeclType	char *		808271	0					
ANR	808280	Identifier	ret		808271	1					
ANR	808281	AssignmentExpression	* ret = NULL		808271	2		=			
ANR	808282	Identifier	NULL		808271	0					
ANR	808283	Identifier	NULL		808271	1					
ANR	808284	Statement	cmd	4500:1:112019:112021	808271	1	True				
ANR	808285	Statement	=	4500:5:112023:112023	808271	2	True				
ANR	808286	Statement	r_str_newf	4500:7:112025:112034	808271	3	True				
ANR	808287	Statement	(	4500:18:112036:112036	808271	4	True				
ANR	808288	Statement	"""pD %i @ 0x%08"""	4500:19:112037:112051	808271	5	True				
ANR	808289	Statement	PFMT64x	4500:34:112052:112058	808271	6	True				
ANR	808290	Statement	","	4500:41:112059:112059	808271	7	True				
ANR	808291	Statement	b	4500:43:112061:112061	808271	8	True				
ANR	808292	Statement	","	4500:44:112062:112062	808271	9	True				
ANR	808293	Statement	addr	4500:46:112064:112067	808271	10	True				
ANR	808294	Statement	)	4500:50:112068:112068	808271	11	True				
ANR	808295	ExpressionStatement		4500:51:112069:112069	808271	12	True				
ANR	808296	IfStatement	if ( cmd )		808271	13					
ANR	808297	Condition	cmd	4501:5:112076:112078	808271	0	True				
ANR	808298	Identifier	cmd		808271	0					
ANR	808299	CompoundStatement		4:10:89:89	808271	1					
ANR	808300	ExpressionStatement	"ret = r_core_cmd_str ( core , cmd )"	4502:2:112085:112117	808271	0	True				
ANR	808301	AssignmentExpression	"ret = r_core_cmd_str ( core , cmd )"		808271	0		=			
ANR	808302	Identifier	ret		808271	0					
ANR	808303	CallExpression	"r_core_cmd_str ( core , cmd )"		808271	1					
ANR	808304	Callee	r_core_cmd_str		808271	0					
ANR	808305	Identifier	r_core_cmd_str		808271	0					
ANR	808306	ArgumentList	core		808271	1					
ANR	808307	Argument	core		808271	0					
ANR	808308	Identifier	core		808271	0					
ANR	808309	Argument	cmd		808271	1					
ANR	808310	Identifier	cmd		808271	0					
ANR	808311	ExpressionStatement	free ( cmd )	4503:2:112121:112131	808271	1	True				
ANR	808312	CallExpression	free ( cmd )		808271	0					
ANR	808313	Callee	free		808271	0					
ANR	808314	Identifier	free		808271	0					
ANR	808315	ArgumentList	cmd		808271	1					
ANR	808316	Argument	cmd		808271	0					
ANR	808317	Identifier	cmd		808271	0					
ANR	808318	ReturnStatement	return ret ;	4505:1:112137:112147	808271	14	True				
ANR	808319	Identifier	ret		808271	0					
ANR	808320	ReturnType	R_API char *		808271	1					
ANR	808321	Identifier	r_core_disassemble_bytes		808271	2					
ANR	808322	ParameterList	"RCore * core , ut64 addr , int b"		808271	3					
ANR	808323	Parameter	RCore * core	4498:37:111960:111970	808271	0	True				
ANR	808324	ParameterType	RCore *		808271	0					
ANR	808325	Identifier	core		808271	1					
ANR	808326	Parameter	ut64 addr	4498:50:111973:111981	808271	1	True				
ANR	808327	ParameterType	ut64		808271	0					
ANR	808328	Identifier	addr		808271	1					
ANR	808329	Parameter	int b	4498:61:111984:111988	808271	2	True				
ANR	808330	ParameterType	int		808271	0					
ANR	808331	Identifier	b		808271	1					
ANR	808332	CFGEntryNode	ENTRY		808271		True				
ANR	808333	CFGExitNode	EXIT		808271		True				
ANR	808334	Symbol	ret		808271						
ANR	808335	Symbol	core		808271						
ANR	808336	Symbol	b		808271						
ANR	808337	Symbol	NULL		808271						
ANR	808338	Symbol	r_core_cmd_str		808271						
ANR	808339	Symbol	cmd		808271						
ANR	808340	Symbol	addr		808271						
ANR	808341	Function	r_core_cmd_buffer	4508:0:112152:112489							
ANR	808342	FunctionDef	"r_core_cmd_buffer (RCore * core , const char * buf)"		808341	0					
ANR	808343	CompoundStatement		4508:58:112210:112489	808341	0					
ANR	808344	IdentifierDeclStatement	"char * ptr , * optr , * str = strdup ( buf ) ;"	4509:1:112213:112250	808341	0	True				
ANR	808345	IdentifierDecl	* ptr		808341	0					
ANR	808346	IdentifierDeclType	char *		808341	0					
ANR	808347	Identifier	ptr		808341	1					
ANR	808348	IdentifierDecl	* optr		808341	1					
ANR	808349	IdentifierDeclType	char *		808341	0					
ANR	808350	Identifier	optr		808341	1					
ANR	808351	IdentifierDecl	* str = strdup ( buf )		808341	2					
ANR	808352	IdentifierDeclType	char *		808341	0					
ANR	808353	Identifier	str		808341	1					
ANR	808354	AssignmentExpression	* str = strdup ( buf )		808341	2		=			
ANR	808355	Identifier	str		808341	0					
ANR	808356	CallExpression	strdup ( buf )		808341	1					
ANR	808357	Callee	strdup		808341	0					
ANR	808358	Identifier	strdup		808341	0					
ANR	808359	ArgumentList	buf		808341	1					
ANR	808360	Argument	buf		808341	0					
ANR	808361	Identifier	buf		808341	0					
ANR	808362	IfStatement	if ( ! str )		808341	1					
ANR	808363	Condition	! str	4510:5:112257:112260	808341	0	True				
ANR	808364	UnaryOperationExpression	! str		808341	0					
ANR	808365	UnaryOperator	!		808341	0					
ANR	808366	Identifier	str		808341	1					
ANR	808367	CompoundStatement		3:11:52:52	808341	1					
ANR	808368	ReturnStatement	return false ;	4511:2:112267:112279	808341	0	True				
ANR	808369	Identifier	false		808341	0					
ANR	808370	ExpressionStatement	optr = str	4513:1:112285:112295	808341	2	True				
ANR	808371	AssignmentExpression	optr = str		808341	0		=			
ANR	808372	Identifier	optr		808341	0					
ANR	808373	Identifier	str		808341	1					
ANR	808374	ExpressionStatement	"ptr = strchr ( str , '\\n' )"	4514:1:112298:112322	808341	3	True				
ANR	808375	AssignmentExpression	"ptr = strchr ( str , '\\n' )"		808341	0		=			
ANR	808376	Identifier	ptr		808341	0					
ANR	808377	CallExpression	"strchr ( str , '\\n' )"		808341	1					
ANR	808378	Callee	strchr		808341	0					
ANR	808379	Identifier	strchr		808341	0					
ANR	808380	ArgumentList	str		808341	1					
ANR	808381	Argument	str		808341	0					
ANR	808382	Identifier	str		808341	0					
ANR	808383	Argument	'\\n'		808341	1					
ANR	808384	PrimaryExpression	'\\n'		808341	0					
ANR	808385	WhileStatement	while ( ptr )		808341	4					
ANR	808386	Condition	ptr	4515:8:112332:112334	808341	0	True				
ANR	808387	Identifier	ptr		808341	0					
ANR	808388	CompoundStatement		8:13:126:126	808341	1					
ANR	808389	ExpressionStatement	* ptr = '\\0'	4516:2:112341:112352	808341	0	True				
ANR	808390	AssignmentExpression	* ptr = '\\0'		808341	0		=			
ANR	808391	UnaryOperationExpression	* ptr		808341	0					
ANR	808392	UnaryOperator	*		808341	0					
ANR	808393	Identifier	ptr		808341	1					
ANR	808394	PrimaryExpression	'\\0'		808341	1					
ANR	808395	ExpressionStatement	"r_core_cmd ( core , optr , 0 )"	4517:2:112356:112382	808341	1	True				
ANR	808396	CallExpression	"r_core_cmd ( core , optr , 0 )"		808341	0					
ANR	808397	Callee	r_core_cmd		808341	0					
ANR	808398	Identifier	r_core_cmd		808341	0					
ANR	808399	ArgumentList	core		808341	1					
ANR	808400	Argument	core		808341	0					
ANR	808401	Identifier	core		808341	0					
ANR	808402	Argument	optr		808341	1					
ANR	808403	Identifier	optr		808341	0					
ANR	808404	Argument	0		808341	2					
ANR	808405	PrimaryExpression	0		808341	0					
ANR	808406	ExpressionStatement	optr = ptr + 1	4518:2:112386:112400	808341	2	True				
ANR	808407	AssignmentExpression	optr = ptr + 1		808341	0		=			
ANR	808408	Identifier	optr		808341	0					
ANR	808409	AdditiveExpression	ptr + 1		808341	1		+			
ANR	808410	Identifier	ptr		808341	0					
ANR	808411	PrimaryExpression	1		808341	1					
ANR	808412	ExpressionStatement	"ptr = strchr ( str , '\\n' )"	4519:2:112404:112428	808341	3	True				
ANR	808413	AssignmentExpression	"ptr = strchr ( str , '\\n' )"		808341	0		=			
ANR	808414	Identifier	ptr		808341	0					
ANR	808415	CallExpression	"strchr ( str , '\\n' )"		808341	1					
ANR	808416	Callee	strchr		808341	0					
ANR	808417	Identifier	strchr		808341	0					
ANR	808418	ArgumentList	str		808341	1					
ANR	808419	Argument	str		808341	0					
ANR	808420	Identifier	str		808341	0					
ANR	808421	Argument	'\\n'		808341	1					
ANR	808422	PrimaryExpression	'\\n'		808341	0					
ANR	808423	ExpressionStatement	"r_core_cmd ( core , optr , 0 )"	4521:1:112434:112460	808341	5	True				
ANR	808424	CallExpression	"r_core_cmd ( core , optr , 0 )"		808341	0					
ANR	808425	Callee	r_core_cmd		808341	0					
ANR	808426	Identifier	r_core_cmd		808341	0					
ANR	808427	ArgumentList	core		808341	1					
ANR	808428	Argument	core		808341	0					
ANR	808429	Identifier	core		808341	0					
ANR	808430	Argument	optr		808341	1					
ANR	808431	Identifier	optr		808341	0					
ANR	808432	Argument	0		808341	2					
ANR	808433	PrimaryExpression	0		808341	0					
ANR	808434	ExpressionStatement	free ( str )	4522:1:112463:112473	808341	6	True				
ANR	808435	CallExpression	free ( str )		808341	0					
ANR	808436	Callee	free		808341	0					
ANR	808437	Identifier	free		808341	0					
ANR	808438	ArgumentList	str		808341	1					
ANR	808439	Argument	str		808341	0					
ANR	808440	Identifier	str		808341	0					
ANR	808441	ReturnStatement	return true ;	4523:1:112476:112487	808341	7	True				
ANR	808442	Identifier	true		808341	0					
ANR	808443	ReturnType	R_API int		808341	1					
ANR	808444	Identifier	r_core_cmd_buffer		808341	2					
ANR	808445	ParameterList	"RCore * core , const char * buf"		808341	3					
ANR	808446	Parameter	RCore * core	4508:28:112180:112190	808341	0	True				
ANR	808447	ParameterType	RCore *		808341	0					
ANR	808448	Identifier	core		808341	1					
ANR	808449	Parameter	const char * buf	4508:41:112193:112207	808341	1	True				
ANR	808450	ParameterType	const char *		808341	0					
ANR	808451	Identifier	buf		808341	1					
ANR	808452	CFGEntryNode	ENTRY		808341		True				
ANR	808453	CFGExitNode	EXIT		808341		True				
ANR	808454	Symbol	str		808341						
ANR	808455	Symbol	core		808341						
ANR	808456	Symbol	buf		808341						
ANR	808457	Symbol	false		808341						
ANR	808458	Symbol	* ptr		808341						
ANR	808459	Symbol	true		808341						
ANR	808460	Symbol	strchr		808341						
ANR	808461	Symbol	strdup		808341						
ANR	808462	Symbol	optr		808341						
ANR	808463	Symbol	ptr		808341						
ANR	808464	Function	r_core_cmdf	4526:0:112492:112726							
ANR	808465	FunctionDef	"r_core_cmdf (RCore * core , const char * fmt)"		808464	0					
ANR	808466	CompoundStatement		4526:57:112549:112726	808464	0					
ANR	808467	IdentifierDeclStatement	char string [ 4096 ] ;	4527:1:112552:112569	808464	0	True				
ANR	808468	IdentifierDecl	string [ 4096 ]		808464	0					
ANR	808469	IdentifierDeclType	char [ 4096 ]		808464	0					
ANR	808470	Identifier	string		808464	1					
ANR	808471	PrimaryExpression	4096		808464	2					
ANR	808472	IdentifierDeclStatement	int ret ;	4528:1:112572:112579	808464	1	True				
ANR	808473	IdentifierDecl	ret		808464	0					
ANR	808474	IdentifierDeclType	int		808464	0					
ANR	808475	Identifier	ret		808464	1					
ANR	808476	IdentifierDeclStatement	va_list ap ;	4529:1:112582:112592	808464	2	True				
ANR	808477	IdentifierDecl	ap		808464	0					
ANR	808478	IdentifierDeclType	va_list		808464	0					
ANR	808479	Identifier	ap		808464	1					
ANR	808480	ExpressionStatement	"va_start ( ap , fmt )"	4530:1:112595:112613	808464	3	True				
ANR	808481	CallExpression	"va_start ( ap , fmt )"		808464	0					
ANR	808482	Callee	va_start		808464	0					
ANR	808483	Identifier	va_start		808464	0					
ANR	808484	ArgumentList	ap		808464	1					
ANR	808485	Argument	ap		808464	0					
ANR	808486	Identifier	ap		808464	0					
ANR	808487	Argument	fmt		808464	1					
ANR	808488	Identifier	fmt		808464	0					
ANR	808489	ExpressionStatement	"vsnprintf ( string , sizeof ( string ) , fmt , ap )"	4531:1:112616:112660	808464	4	True				
ANR	808490	CallExpression	"vsnprintf ( string , sizeof ( string ) , fmt , ap )"		808464	0					
ANR	808491	Callee	vsnprintf		808464	0					
ANR	808492	Identifier	vsnprintf		808464	0					
ANR	808493	ArgumentList	string		808464	1					
ANR	808494	Argument	string		808464	0					
ANR	808495	Identifier	string		808464	0					
ANR	808496	Argument	sizeof ( string )		808464	1					
ANR	808497	SizeofExpression	sizeof ( string )		808464	0					
ANR	808498	Sizeof	sizeof		808464	0					
ANR	808499	SizeofOperand	string		808464	1					
ANR	808500	Argument	fmt		808464	2					
ANR	808501	Identifier	fmt		808464	0					
ANR	808502	Argument	ap		808464	3					
ANR	808503	Identifier	ap		808464	0					
ANR	808504	ExpressionStatement	"ret = r_core_cmd ( core , string , 0 )"	4532:1:112663:112697	808464	5	True				
ANR	808505	AssignmentExpression	"ret = r_core_cmd ( core , string , 0 )"		808464	0		=			
ANR	808506	Identifier	ret		808464	0					
ANR	808507	CallExpression	"r_core_cmd ( core , string , 0 )"		808464	1					
ANR	808508	Callee	r_core_cmd		808464	0					
ANR	808509	Identifier	r_core_cmd		808464	0					
ANR	808510	ArgumentList	core		808464	1					
ANR	808511	Argument	core		808464	0					
ANR	808512	Identifier	core		808464	0					
ANR	808513	Argument	string		808464	1					
ANR	808514	Identifier	string		808464	0					
ANR	808515	Argument	0		808464	2					
ANR	808516	PrimaryExpression	0		808464	0					
ANR	808517	ExpressionStatement	va_end ( ap )	4533:1:112700:112711	808464	6	True				
ANR	808518	CallExpression	va_end ( ap )		808464	0					
ANR	808519	Callee	va_end		808464	0					
ANR	808520	Identifier	va_end		808464	0					
ANR	808521	ArgumentList	ap		808464	1					
ANR	808522	Argument	ap		808464	0					
ANR	808523	Identifier	ap		808464	0					
ANR	808524	ReturnStatement	return ret ;	4534:1:112714:112724	808464	7	True				
ANR	808525	Identifier	ret		808464	0					
ANR	808526	ReturnType	R_API int		808464	1					
ANR	808527	Identifier	r_core_cmdf		808464	2					
ANR	808528	ParameterList	"RCore * core , const char * fmt"		808464	3					
ANR	808529	Parameter	RCore * core	4526:22:112514:112524	808464	0	True				
ANR	808530	ParameterType	RCore *		808464	0					
ANR	808531	Identifier	core		808464	1					
ANR	808532	Parameter	const char * fmt	4526:35:112527:112541	808464	1	True				
ANR	808533	ParameterType	const char *		808464	0					
ANR	808534	Identifier	fmt		808464	1					
ANR	808535	CFGEntryNode	ENTRY		808464		True				
ANR	808536	CFGExitNode	EXIT		808464		True				
ANR	808537	Symbol	ret		808464						
ANR	808538	Symbol	core		808464						
ANR	808539	Symbol	r_core_cmd		808464						
ANR	808540	Symbol	string		808464						
ANR	808541	Symbol	fmt		808464						
ANR	808542	Symbol	ap		808464						
ANR	808543	Function	r_core_cmd0	4537:0:112729:112818							
ANR	808544	FunctionDef	"r_core_cmd0 (RCore * core , const char * cmd)"		808543	0					
ANR	808545	CompoundStatement		4537:52:112781:112818	808543	0					
ANR	808546	ReturnStatement	"return r_core_cmd ( core , cmd , 0 ) ;"	4538:1:112784:112816	808543	0	True				
ANR	808547	CallExpression	"r_core_cmd ( core , cmd , 0 )"		808543	0					
ANR	808548	Callee	r_core_cmd		808543	0					
ANR	808549	Identifier	r_core_cmd		808543	0					
ANR	808550	ArgumentList	core		808543	1					
ANR	808551	Argument	core		808543	0					
ANR	808552	Identifier	core		808543	0					
ANR	808553	Argument	cmd		808543	1					
ANR	808554	Identifier	cmd		808543	0					
ANR	808555	Argument	0		808543	2					
ANR	808556	PrimaryExpression	0		808543	0					
ANR	808557	ReturnType	R_API int		808543	1					
ANR	808558	Identifier	r_core_cmd0		808543	2					
ANR	808559	ParameterList	"RCore * core , const char * cmd"		808543	3					
ANR	808560	Parameter	RCore * core	4537:22:112751:112761	808543	0	True				
ANR	808561	ParameterType	RCore *		808543	0					
ANR	808562	Identifier	core		808543	1					
ANR	808563	Parameter	const char * cmd	4537:35:112764:112778	808543	1	True				
ANR	808564	ParameterType	const char *		808543	0					
ANR	808565	Identifier	cmd		808543	1					
ANR	808566	CFGEntryNode	ENTRY		808543		True				
ANR	808567	CFGExitNode	EXIT		808543		True				
ANR	808568	Symbol	core		808543						
ANR	808569	Symbol	r_core_cmd		808543						
ANR	808570	Symbol	cmd		808543						
ANR	808571	Function	r_core_flush	4541:0:112821:112945							
ANR	808572	FunctionDef	"r_core_flush (RCore * core , const char * cmd)"		808571	0					
ANR	808573	CompoundStatement		4541:53:112874:112945	808571	0					
ANR	808574	IdentifierDeclStatement	"int ret = r_core_cmd ( core , cmd , 0 ) ;"	4542:1:112877:112912	808571	0	True				
ANR	808575	IdentifierDecl	"ret = r_core_cmd ( core , cmd , 0 )"		808571	0					
ANR	808576	IdentifierDeclType	int		808571	0					
ANR	808577	Identifier	ret		808571	1					
ANR	808578	AssignmentExpression	"ret = r_core_cmd ( core , cmd , 0 )"		808571	2		=			
ANR	808579	Identifier	ret		808571	0					
ANR	808580	CallExpression	"r_core_cmd ( core , cmd , 0 )"		808571	1					
ANR	808581	Callee	r_core_cmd		808571	0					
ANR	808582	Identifier	r_core_cmd		808571	0					
ANR	808583	ArgumentList	core		808571	1					
ANR	808584	Argument	core		808571	0					
ANR	808585	Identifier	core		808571	0					
ANR	808586	Argument	cmd		808571	1					
ANR	808587	Identifier	cmd		808571	0					
ANR	808588	Argument	0		808571	2					
ANR	808589	PrimaryExpression	0		808571	0					
ANR	808590	ExpressionStatement	r_cons_flush ( )	4543:1:112915:112930	808571	1	True				
ANR	808591	CallExpression	r_cons_flush ( )		808571	0					
ANR	808592	Callee	r_cons_flush		808571	0					
ANR	808593	Identifier	r_cons_flush		808571	0					
ANR	808594	ArgumentList			808571	1					
ANR	808595	ReturnStatement	return ret ;	4544:1:112933:112943	808571	2	True				
ANR	808596	Identifier	ret		808571	0					
ANR	808597	ReturnType	R_API int		808571	1					
ANR	808598	Identifier	r_core_flush		808571	2					
ANR	808599	ParameterList	"RCore * core , const char * cmd"		808571	3					
ANR	808600	Parameter	RCore * core	4541:23:112844:112854	808571	0	True				
ANR	808601	ParameterType	RCore *		808571	0					
ANR	808602	Identifier	core		808571	1					
ANR	808603	Parameter	const char * cmd	4541:36:112857:112871	808571	1	True				
ANR	808604	ParameterType	const char *		808571	0					
ANR	808605	Identifier	cmd		808571	1					
ANR	808606	CFGEntryNode	ENTRY		808571		True				
ANR	808607	CFGExitNode	EXIT		808571		True				
ANR	808608	Symbol	ret		808571						
ANR	808609	Symbol	core		808571						
ANR	808610	Symbol	r_core_cmd		808571						
ANR	808611	Symbol	cmd		808571						
ANR	808612	Function	r_core_cmd_str_pipe	4547:0:112948:114502							
ANR	808613	FunctionDef	"r_core_cmd_str_pipe (RCore * core , const char * cmd)"		808612	0					
ANR	808614	CompoundStatement		4547:62:113010:114502	808612	0					
ANR	808615	IdentifierDeclStatement	"char * s , * tmp = NULL ;"	4548:1:113013:113033	808612	0	True				
ANR	808616	IdentifierDecl	* s		808612	0					
ANR	808617	IdentifierDeclType	char *		808612	0					
ANR	808618	Identifier	s		808612	1					
ANR	808619	IdentifierDecl	* tmp = NULL		808612	1					
ANR	808620	IdentifierDeclType	char *		808612	0					
ANR	808621	Identifier	tmp		808612	1					
ANR	808622	AssignmentExpression	* tmp = NULL		808612	2		=			
ANR	808623	Identifier	NULL		808612	0					
ANR	808624	Identifier	NULL		808612	1					
ANR	808625	IfStatement	if ( r_sandbox_enable ( 0 ) )		808612	1					
ANR	808626	Condition	r_sandbox_enable ( 0 )	4549:5:113040:113059	808612	0	True				
ANR	808627	CallExpression	r_sandbox_enable ( 0 )		808612	0					
ANR	808628	Callee	r_sandbox_enable		808612	0					
ANR	808629	Identifier	r_sandbox_enable		808612	0					
ANR	808630	ArgumentList	0		808612	1					
ANR	808631	Argument	0		808612	0					
ANR	808632	PrimaryExpression	0		808612	0					
ANR	808633	CompoundStatement		4:2:55:103	808612	1					
ANR	808634	IdentifierDeclStatement	"char * p = ( * cmd != '""' ) ? strchr ( cmd , '|' ) : NULL ;"	4550:2:113066:113114	808612	0	True				
ANR	808635	IdentifierDecl	"* p = ( * cmd != '""' ) ? strchr ( cmd , '|' ) : NULL"		808612	0					
ANR	808636	IdentifierDeclType	char *		808612	0					
ANR	808637	Identifier	p		808612	1					
ANR	808638	AssignmentExpression	"* p = ( * cmd != '""' ) ? strchr ( cmd , '|' ) : NULL"		808612	2		=			
ANR	808639	Identifier	p		808612	0					
ANR	808640	ConditionalExpression	"( * cmd != '""' ) ? strchr ( cmd , '|' ) : NULL"		808612	1					
ANR	808641	Condition	"* cmd != '""'"		808612	0					
ANR	808642	EqualityExpression	"* cmd != '""'"		808612	0		!=			
ANR	808643	UnaryOperationExpression	* cmd		808612	0					
ANR	808644	UnaryOperator	*		808612	0					
ANR	808645	Identifier	cmd		808612	1					
ANR	808646	PrimaryExpression	"'""'"		808612	1					
ANR	808647	CallExpression	"strchr ( cmd , '|' )"		808612	1					
ANR	808648	Callee	strchr		808612	0					
ANR	808649	Identifier	strchr		808612	0					
ANR	808650	ArgumentList	cmd		808612	1					
ANR	808651	Argument	cmd		808612	0					
ANR	808652	Identifier	cmd		808612	0					
ANR	808653	Argument	'|'		808612	1					
ANR	808654	PrimaryExpression	'|'		808612	0					
ANR	808655	Identifier	NULL		808612	2					
ANR	808656	IfStatement	if ( p )		808612	1					
ANR	808657	Condition	p	4551:6:113122:113122	808612	0	True				
ANR	808658	Identifier	p		808612	0					
ANR	808659	CompoundStatement		9:3:295:317	808612	1					
ANR	808660	IdentifierDeclStatement	char * c = strdup ( cmd ) ;	4555:3:113306:113328	808612	0	True				
ANR	808661	IdentifierDecl	* c = strdup ( cmd )		808612	0					
ANR	808662	IdentifierDeclType	char *		808612	0					
ANR	808663	Identifier	c		808612	1					
ANR	808664	AssignmentExpression	* c = strdup ( cmd )		808612	2		=			
ANR	808665	Identifier	c		808612	0					
ANR	808666	CallExpression	strdup ( cmd )		808612	1					
ANR	808667	Callee	strdup		808612	0					
ANR	808668	Identifier	strdup		808612	0					
ANR	808669	ArgumentList	cmd		808612	1					
ANR	808670	Argument	cmd		808612	0					
ANR	808671	Identifier	cmd		808612	0					
ANR	808672	ExpressionStatement	c [ p - cmd ] = 0	4556:3:113333:113347	808612	1	True				
ANR	808673	AssignmentExpression	c [ p - cmd ] = 0		808612	0		=			
ANR	808674	ArrayIndexing	c [ p - cmd ]		808612	0					
ANR	808675	Identifier	c		808612	0					
ANR	808676	AdditiveExpression	p - cmd		808612	1		-			
ANR	808677	Identifier	p		808612	0					
ANR	808678	Identifier	cmd		808612	1					
ANR	808679	PrimaryExpression	0		808612	1					
ANR	808680	IfStatement	"if ( ! strcmp ( p + 1 , ""H"" ) )"		808612	2					
ANR	808681	Condition	"! strcmp ( p + 1 , ""H"" )"	4557:7:113356:113375	808612	0	True				
ANR	808682	UnaryOperationExpression	"! strcmp ( p + 1 , ""H"" )"		808612	0					
ANR	808683	UnaryOperator	!		808612	0					
ANR	808684	CallExpression	"strcmp ( p + 1 , ""H"" )"		808612	1					
ANR	808685	Callee	strcmp		808612	0					
ANR	808686	Identifier	strcmp		808612	0					
ANR	808687	ArgumentList	p + 1		808612	1					
ANR	808688	Argument	p + 1		808612	0					
ANR	808689	AdditiveExpression	p + 1		808612	0		+			
ANR	808690	Identifier	p		808612	0					
ANR	808691	PrimaryExpression	1		808612	1					
ANR	808692	Argument	"""H"""		808612	1					
ANR	808693	PrimaryExpression	"""H"""		808612	0					
ANR	808694	CompoundStatement		14:4:429:472	808612	1					
ANR	808695	IdentifierDeclStatement	"char * res = r_core_cmd_str ( core , c ) ;"	4558:4:113384:113420	808612	0	True				
ANR	808696	IdentifierDecl	"* res = r_core_cmd_str ( core , c )"		808612	0					
ANR	808697	IdentifierDeclType	char *		808612	0					
ANR	808698	Identifier	res		808612	1					
ANR	808699	AssignmentExpression	"* res = r_core_cmd_str ( core , c )"		808612	2		=			
ANR	808700	Identifier	res		808612	0					
ANR	808701	CallExpression	"r_core_cmd_str ( core , c )"		808612	1					
ANR	808702	Callee	r_core_cmd_str		808612	0					
ANR	808703	Identifier	r_core_cmd_str		808612	0					
ANR	808704	ArgumentList	core		808612	1					
ANR	808705	Argument	core		808612	0					
ANR	808706	Identifier	core		808612	0					
ANR	808707	Argument	c		808612	1					
ANR	808708	Identifier	c		808612	0					
ANR	808709	ExpressionStatement	free ( c )	4559:4:113426:113434	808612	1	True				
ANR	808710	CallExpression	free ( c )		808612	0					
ANR	808711	Callee	free		808612	0					
ANR	808712	Identifier	free		808612	0					
ANR	808713	ArgumentList	c		808612	1					
ANR	808714	Argument	c		808612	0					
ANR	808715	Identifier	c		808612	0					
ANR	808716	IdentifierDeclStatement	"char * hres = r_cons_html_filter ( res , NULL ) ;"	4560:4:113440:113483	808612	2	True				
ANR	808717	IdentifierDecl	"* hres = r_cons_html_filter ( res , NULL )"		808612	0					
ANR	808718	IdentifierDeclType	char *		808612	0					
ANR	808719	Identifier	hres		808612	1					
ANR	808720	AssignmentExpression	"* hres = r_cons_html_filter ( res , NULL )"		808612	2		=			
ANR	808721	Identifier	hres		808612	0					
ANR	808722	CallExpression	"r_cons_html_filter ( res , NULL )"		808612	1					
ANR	808723	Callee	r_cons_html_filter		808612	0					
ANR	808724	Identifier	r_cons_html_filter		808612	0					
ANR	808725	ArgumentList	res		808612	1					
ANR	808726	Argument	res		808612	0					
ANR	808727	Identifier	res		808612	0					
ANR	808728	Argument	NULL		808612	1					
ANR	808729	Identifier	NULL		808612	0					
ANR	808730	ExpressionStatement	free ( res )	4561:4:113489:113499	808612	3	True				
ANR	808731	CallExpression	free ( res )		808612	0					
ANR	808732	Callee	free		808612	0					
ANR	808733	Identifier	free		808612	0					
ANR	808734	ArgumentList	res		808612	1					
ANR	808735	Argument	res		808612	0					
ANR	808736	Identifier	res		808612	0					
ANR	808737	ReturnStatement	return hres ;	4562:4:113505:113516	808612	4	True				
ANR	808738	Identifier	hres		808612	0					
ANR	808739	ElseStatement	else		808612	0					
ANR	808740	CompoundStatement		20:4:631:667	808612	0					
ANR	808741	IdentifierDeclStatement	"int sh = r_config_get_i ( core -> config , ""scr.color"" ) ;"	4564:4:113534:113585	808612	0	True				
ANR	808742	IdentifierDecl	"sh = r_config_get_i ( core -> config , ""scr.color"" )"		808612	0					
ANR	808743	IdentifierDeclType	int		808612	0					
ANR	808744	Identifier	sh		808612	1					
ANR	808745	AssignmentExpression	"sh = r_config_get_i ( core -> config , ""scr.color"" )"		808612	2		=			
ANR	808746	Identifier	sh		808612	0					
ANR	808747	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		808612	1					
ANR	808748	Callee	r_config_get_i		808612	0					
ANR	808749	Identifier	r_config_get_i		808612	0					
ANR	808750	ArgumentList	core -> config		808612	1					
ANR	808751	Argument	core -> config		808612	0					
ANR	808752	PtrMemberAccess	core -> config		808612	0					
ANR	808753	Identifier	core		808612	0					
ANR	808754	Identifier	config		808612	1					
ANR	808755	Argument	"""scr.color"""		808612	1					
ANR	808756	PrimaryExpression	"""scr.color"""		808612	0					
ANR	808757	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , 0 )"	4565:4:113591:113636	808612	1	True				
ANR	808758	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , 0 )"		808612	0					
ANR	808759	Callee	r_config_set_i		808612	0					
ANR	808760	Identifier	r_config_set_i		808612	0					
ANR	808761	ArgumentList	core -> config		808612	1					
ANR	808762	Argument	core -> config		808612	0					
ANR	808763	PtrMemberAccess	core -> config		808612	0					
ANR	808764	Identifier	core		808612	0					
ANR	808765	Identifier	config		808612	1					
ANR	808766	Argument	"""scr.color"""		808612	1					
ANR	808767	PrimaryExpression	"""scr.color"""		808612	0					
ANR	808768	Argument	0		808612	2					
ANR	808769	PrimaryExpression	0		808612	0					
ANR	808770	IdentifierDeclStatement	"char * ret = r_core_cmd_str ( core , c ) ;"	4566:4:113642:113678	808612	2	True				
ANR	808771	IdentifierDecl	"* ret = r_core_cmd_str ( core , c )"		808612	0					
ANR	808772	IdentifierDeclType	char *		808612	0					
ANR	808773	Identifier	ret		808612	1					
ANR	808774	AssignmentExpression	"* ret = r_core_cmd_str ( core , c )"		808612	2		=			
ANR	808775	Identifier	ret		808612	0					
ANR	808776	CallExpression	"r_core_cmd_str ( core , c )"		808612	1					
ANR	808777	Callee	r_core_cmd_str		808612	0					
ANR	808778	Identifier	r_core_cmd_str		808612	0					
ANR	808779	ArgumentList	core		808612	1					
ANR	808780	Argument	core		808612	0					
ANR	808781	Identifier	core		808612	0					
ANR	808782	Argument	c		808612	1					
ANR	808783	Identifier	c		808612	0					
ANR	808784	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , sh )"	4567:4:113684:113730	808612	3	True				
ANR	808785	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , sh )"		808612	0					
ANR	808786	Callee	r_config_set_i		808612	0					
ANR	808787	Identifier	r_config_set_i		808612	0					
ANR	808788	ArgumentList	core -> config		808612	1					
ANR	808789	Argument	core -> config		808612	0					
ANR	808790	PtrMemberAccess	core -> config		808612	0					
ANR	808791	Identifier	core		808612	0					
ANR	808792	Identifier	config		808612	1					
ANR	808793	Argument	"""scr.color"""		808612	1					
ANR	808794	PrimaryExpression	"""scr.color"""		808612	0					
ANR	808795	Argument	sh		808612	2					
ANR	808796	Identifier	sh		808612	0					
ANR	808797	ExpressionStatement	free ( c )	4568:4:113736:113744	808612	4	True				
ANR	808798	CallExpression	free ( c )		808612	0					
ANR	808799	Callee	free		808612	0					
ANR	808800	Identifier	free		808612	0					
ANR	808801	ArgumentList	c		808612	1					
ANR	808802	Argument	c		808612	0					
ANR	808803	Identifier	c		808612	0					
ANR	808804	ReturnStatement	return ret ;	4569:4:113750:113760	808612	5	True				
ANR	808805	Identifier	ret		808612	0					
ANR	808806	ReturnStatement	"return r_core_cmd_str ( core , cmd ) ;"	4572:2:113773:113806	808612	2	True				
ANR	808807	CallExpression	"r_core_cmd_str ( core , cmd )"		808612	0					
ANR	808808	Callee	r_core_cmd_str		808612	0					
ANR	808809	Identifier	r_core_cmd_str		808612	0					
ANR	808810	ArgumentList	core		808612	1					
ANR	808811	Argument	core		808612	0					
ANR	808812	Identifier	core		808612	0					
ANR	808813	Argument	cmd		808612	1					
ANR	808814	Identifier	cmd		808612	0					
ANR	808815	ExpressionStatement	r_cons_reset ( )	4574:1:113812:113827	808612	2	True				
ANR	808816	CallExpression	r_cons_reset ( )		808612	0					
ANR	808817	Callee	r_cons_reset		808612	0					
ANR	808818	Identifier	r_cons_reset		808612	0					
ANR	808819	ArgumentList			808612	1					
ANR	808820	ExpressionStatement	r_sandbox_disable ( 1 )	4575:1:113830:113851	808612	3	True				
ANR	808821	CallExpression	r_sandbox_disable ( 1 )		808612	0					
ANR	808822	Callee	r_sandbox_disable		808612	0					
ANR	808823	Identifier	r_sandbox_disable		808612	0					
ANR	808824	ArgumentList	1		808612	1					
ANR	808825	Argument	1		808612	0					
ANR	808826	PrimaryExpression	1		808612	0					
ANR	808827	IfStatement	"if ( r_file_mkstemp ( ""cmd"" , & tmp ) != - 1 )"		808612	4					
ANR	808828	Condition	"r_file_mkstemp ( ""cmd"" , & tmp ) != - 1"	4576:5:113858:113891	808612	0	True				
ANR	808829	EqualityExpression	"r_file_mkstemp ( ""cmd"" , & tmp ) != - 1"		808612	0		!=			
ANR	808830	CallExpression	"r_file_mkstemp ( ""cmd"" , & tmp )"		808612	0					
ANR	808831	Callee	r_file_mkstemp		808612	0					
ANR	808832	Identifier	r_file_mkstemp		808612	0					
ANR	808833	ArgumentList	"""cmd"""		808612	1					
ANR	808834	Argument	"""cmd"""		808612	0					
ANR	808835	PrimaryExpression	"""cmd"""		808612	0					
ANR	808836	Argument	& tmp		808612	1					
ANR	808837	UnaryOperationExpression	& tmp		808612	0					
ANR	808838	UnaryOperator	&		808612	0					
ANR	808839	Identifier	tmp		808612	1					
ANR	808840	UnaryOperationExpression	- 1		808612	1					
ANR	808841	UnaryOperator	-		808612	0					
ANR	808842	PrimaryExpression	1		808612	1					
ANR	808843	CompoundStatement		38:2:1057:1082	808612	1					
ANR	808844	IdentifierDeclStatement	"int pipefd = r_cons_pipe_open ( tmp , 1 , 0 ) ;"	4577:2:113898:113939	808612	0	True				
ANR	808845	IdentifierDecl	"pipefd = r_cons_pipe_open ( tmp , 1 , 0 )"		808612	0					
ANR	808846	IdentifierDeclType	int		808612	0					
ANR	808847	Identifier	pipefd		808612	1					
ANR	808848	AssignmentExpression	"pipefd = r_cons_pipe_open ( tmp , 1 , 0 )"		808612	2		=			
ANR	808849	Identifier	pipefd		808612	0					
ANR	808850	CallExpression	"r_cons_pipe_open ( tmp , 1 , 0 )"		808612	1					
ANR	808851	Callee	r_cons_pipe_open		808612	0					
ANR	808852	Identifier	r_cons_pipe_open		808612	0					
ANR	808853	ArgumentList	tmp		808612	1					
ANR	808854	Argument	tmp		808612	0					
ANR	808855	Identifier	tmp		808612	0					
ANR	808856	Argument	1		808612	1					
ANR	808857	PrimaryExpression	1		808612	0					
ANR	808858	Argument	0		808612	2					
ANR	808859	PrimaryExpression	0		808612	0					
ANR	808860	IfStatement	if ( pipefd == - 1 )		808612	1					
ANR	808861	Condition	pipefd == - 1	4578:6:113947:113958	808612	0	True				
ANR	808862	EqualityExpression	pipefd == - 1		808612	0		==			
ANR	808863	Identifier	pipefd		808612	0					
ANR	808864	UnaryOperationExpression	- 1		808612	1					
ANR	808865	UnaryOperator	-		808612	0					
ANR	808866	PrimaryExpression	1		808612	1					
ANR	808867	CompoundStatement		32:20:950:950	808612	1					
ANR	808868	ExpressionStatement	r_file_rm ( tmp )	4579:3:113966:113981	808612	0	True				
ANR	808869	CallExpression	r_file_rm ( tmp )		808612	0					
ANR	808870	Callee	r_file_rm		808612	0					
ANR	808871	Identifier	r_file_rm		808612	0					
ANR	808872	ArgumentList	tmp		808612	1					
ANR	808873	Argument	tmp		808612	0					
ANR	808874	Identifier	tmp		808612	0					
ANR	808875	ExpressionStatement	r_sandbox_disable ( 0 )	4580:3:113986:114007	808612	1	True				
ANR	808876	CallExpression	r_sandbox_disable ( 0 )		808612	0					
ANR	808877	Callee	r_sandbox_disable		808612	0					
ANR	808878	Identifier	r_sandbox_disable		808612	0					
ANR	808879	ArgumentList	0		808612	1					
ANR	808880	Argument	0		808612	0					
ANR	808881	PrimaryExpression	0		808612	0					
ANR	808882	ExpressionStatement	free ( tmp )	4581:3:114012:114022	808612	2	True				
ANR	808883	CallExpression	free ( tmp )		808612	0					
ANR	808884	Callee	free		808612	0					
ANR	808885	Identifier	free		808612	0					
ANR	808886	ArgumentList	tmp		808612	1					
ANR	808887	Argument	tmp		808612	0					
ANR	808888	Identifier	tmp		808612	0					
ANR	808889	ReturnStatement	"return r_core_cmd_str ( core , cmd ) ;"	4582:3:114027:114060	808612	3	True				
ANR	808890	CallExpression	"r_core_cmd_str ( core , cmd )"		808612	0					
ANR	808891	Callee	r_core_cmd_str		808612	0					
ANR	808892	Identifier	r_core_cmd_str		808612	0					
ANR	808893	ArgumentList	core		808612	1					
ANR	808894	Argument	core		808612	0					
ANR	808895	Identifier	core		808612	0					
ANR	808896	Argument	cmd		808612	1					
ANR	808897	Identifier	cmd		808612	0					
ANR	808898	IdentifierDeclStatement	char * _cmd = strdup ( cmd ) ;	4584:2:114068:114093	808612	2	True				
ANR	808899	IdentifierDecl	* _cmd = strdup ( cmd )		808612	0					
ANR	808900	IdentifierDeclType	char *		808612	0					
ANR	808901	Identifier	_cmd		808612	1					
ANR	808902	AssignmentExpression	* _cmd = strdup ( cmd )		808612	2		=			
ANR	808903	Identifier	_cmd		808612	0					
ANR	808904	CallExpression	strdup ( cmd )		808612	1					
ANR	808905	Callee	strdup		808612	0					
ANR	808906	Identifier	strdup		808612	0					
ANR	808907	ArgumentList	cmd		808612	1					
ANR	808908	Argument	cmd		808612	0					
ANR	808909	Identifier	cmd		808612	0					
ANR	808910	ExpressionStatement	"r_core_cmd_subst ( core , _cmd )"	4585:2:114097:114126	808612	3	True				
ANR	808911	CallExpression	"r_core_cmd_subst ( core , _cmd )"		808612	0					
ANR	808912	Callee	r_core_cmd_subst		808612	0					
ANR	808913	Identifier	r_core_cmd_subst		808612	0					
ANR	808914	ArgumentList	core		808612	1					
ANR	808915	Argument	core		808612	0					
ANR	808916	Identifier	core		808612	0					
ANR	808917	Argument	_cmd		808612	1					
ANR	808918	Identifier	_cmd		808612	0					
ANR	808919	ExpressionStatement	r_cons_flush ( )	4586:2:114130:114145	808612	4	True				
ANR	808920	CallExpression	r_cons_flush ( )		808612	0					
ANR	808921	Callee	r_cons_flush		808612	0					
ANR	808922	Identifier	r_cons_flush		808612	0					
ANR	808923	ArgumentList			808612	1					
ANR	808924	ExpressionStatement	r_cons_pipe_close ( pipefd )	4587:2:114149:114175	808612	5	True				
ANR	808925	CallExpression	r_cons_pipe_close ( pipefd )		808612	0					
ANR	808926	Callee	r_cons_pipe_close		808612	0					
ANR	808927	Identifier	r_cons_pipe_close		808612	0					
ANR	808928	ArgumentList	pipefd		808612	1					
ANR	808929	Argument	pipefd		808612	0					
ANR	808930	Identifier	pipefd		808612	0					
ANR	808931	ExpressionStatement	"s = r_file_slurp ( tmp , NULL )"	4588:2:114179:114207	808612	6	True				
ANR	808932	AssignmentExpression	"s = r_file_slurp ( tmp , NULL )"		808612	0		=			
ANR	808933	Identifier	s		808612	0					
ANR	808934	CallExpression	"r_file_slurp ( tmp , NULL )"		808612	1					
ANR	808935	Callee	r_file_slurp		808612	0					
ANR	808936	Identifier	r_file_slurp		808612	0					
ANR	808937	ArgumentList	tmp		808612	1					
ANR	808938	Argument	tmp		808612	0					
ANR	808939	Identifier	tmp		808612	0					
ANR	808940	Argument	NULL		808612	1					
ANR	808941	Identifier	NULL		808612	0					
ANR	808942	IfStatement	if ( s )		808612	7					
ANR	808943	Condition	s	4589:6:114215:114215	808612	0	True				
ANR	808944	Identifier	s		808612	0					
ANR	808945	CompoundStatement		43:9:1207:1207	808612	1					
ANR	808946	ExpressionStatement	r_file_rm ( tmp )	4590:3:114223:114238	808612	0	True				
ANR	808947	CallExpression	r_file_rm ( tmp )		808612	0					
ANR	808948	Callee	r_file_rm		808612	0					
ANR	808949	Identifier	r_file_rm		808612	0					
ANR	808950	ArgumentList	tmp		808612	1					
ANR	808951	Argument	tmp		808612	0					
ANR	808952	Identifier	tmp		808612	0					
ANR	808953	ExpressionStatement	r_sandbox_disable ( 0 )	4591:3:114243:114264	808612	1	True				
ANR	808954	CallExpression	r_sandbox_disable ( 0 )		808612	0					
ANR	808955	Callee	r_sandbox_disable		808612	0					
ANR	808956	Identifier	r_sandbox_disable		808612	0					
ANR	808957	ArgumentList	0		808612	1					
ANR	808958	Argument	0		808612	0					
ANR	808959	PrimaryExpression	0		808612	0					
ANR	808960	ExpressionStatement	free ( tmp )	4592:3:114269:114279	808612	2	True				
ANR	808961	CallExpression	free ( tmp )		808612	0					
ANR	808962	Callee	free		808612	0					
ANR	808963	Identifier	free		808612	0					
ANR	808964	ArgumentList	tmp		808612	1					
ANR	808965	Argument	tmp		808612	0					
ANR	808966	Identifier	tmp		808612	0					
ANR	808967	ExpressionStatement	free ( _cmd )	4593:3:114284:114295	808612	3	True				
ANR	808968	CallExpression	free ( _cmd )		808612	0					
ANR	808969	Callee	free		808612	0					
ANR	808970	Identifier	free		808612	0					
ANR	808971	ArgumentList	_cmd		808612	1					
ANR	808972	Argument	_cmd		808612	0					
ANR	808973	Identifier	_cmd		808612	0					
ANR	808974	ReturnStatement	return s ;	4594:3:114300:114308	808612	4	True				
ANR	808975	Identifier	s		808612	0					
ANR	808976	ExpressionStatement	"eprintf ( ""slurp %s fails\\n"" , tmp )"	4596:2:114316:114349	808612	8	True				
ANR	808977	CallExpression	"eprintf ( ""slurp %s fails\\n"" , tmp )"		808612	0					
ANR	808978	Callee	eprintf		808612	0					
ANR	808979	Identifier	eprintf		808612	0					
ANR	808980	ArgumentList	"""slurp %s fails\\n"""		808612	1					
ANR	808981	Argument	"""slurp %s fails\\n"""		808612	0					
ANR	808982	PrimaryExpression	"""slurp %s fails\\n"""		808612	0					
ANR	808983	Argument	tmp		808612	1					
ANR	808984	Identifier	tmp		808612	0					
ANR	808985	ExpressionStatement	r_file_rm ( tmp )	4597:2:114353:114368	808612	9	True				
ANR	808986	CallExpression	r_file_rm ( tmp )		808612	0					
ANR	808987	Callee	r_file_rm		808612	0					
ANR	808988	Identifier	r_file_rm		808612	0					
ANR	808989	ArgumentList	tmp		808612	1					
ANR	808990	Argument	tmp		808612	0					
ANR	808991	Identifier	tmp		808612	0					
ANR	808992	ExpressionStatement	free ( tmp )	4598:2:114372:114382	808612	10	True				
ANR	808993	CallExpression	free ( tmp )		808612	0					
ANR	808994	Callee	free		808612	0					
ANR	808995	Identifier	free		808612	0					
ANR	808996	ArgumentList	tmp		808612	1					
ANR	808997	Argument	tmp		808612	0					
ANR	808998	Identifier	tmp		808612	0					
ANR	808999	ExpressionStatement	free ( _cmd )	4599:2:114386:114397	808612	11	True				
ANR	809000	CallExpression	free ( _cmd )		808612	0					
ANR	809001	Callee	free		808612	0					
ANR	809002	Identifier	free		808612	0					
ANR	809003	ArgumentList	_cmd		808612	1					
ANR	809004	Argument	_cmd		808612	0					
ANR	809005	Identifier	_cmd		808612	0					
ANR	809006	ExpressionStatement	r_sandbox_disable ( 0 )	4600:2:114401:114422	808612	12	True				
ANR	809007	CallExpression	r_sandbox_disable ( 0 )		808612	0					
ANR	809008	Callee	r_sandbox_disable		808612	0					
ANR	809009	Identifier	r_sandbox_disable		808612	0					
ANR	809010	ArgumentList	0		808612	1					
ANR	809011	Argument	0		808612	0					
ANR	809012	PrimaryExpression	0		808612	0					
ANR	809013	ReturnStatement	"return r_core_cmd_str ( core , cmd ) ;"	4601:2:114426:114459	808612	13	True				
ANR	809014	CallExpression	"r_core_cmd_str ( core , cmd )"		808612	0					
ANR	809015	Callee	r_core_cmd_str		808612	0					
ANR	809016	Identifier	r_core_cmd_str		808612	0					
ANR	809017	ArgumentList	core		808612	1					
ANR	809018	Argument	core		808612	0					
ANR	809019	Identifier	core		808612	0					
ANR	809020	Argument	cmd		808612	1					
ANR	809021	Identifier	cmd		808612	0					
ANR	809022	ExpressionStatement	r_sandbox_disable ( 0 )	4603:1:114465:114486	808612	5	True				
ANR	809023	CallExpression	r_sandbox_disable ( 0 )		808612	0					
ANR	809024	Callee	r_sandbox_disable		808612	0					
ANR	809025	Identifier	r_sandbox_disable		808612	0					
ANR	809026	ArgumentList	0		808612	1					
ANR	809027	Argument	0		808612	0					
ANR	809028	PrimaryExpression	0		808612	0					
ANR	809029	ReturnStatement	return NULL ;	4604:1:114489:114500	808612	6	True				
ANR	809030	Identifier	NULL		808612	0					
ANR	809031	ReturnType	R_API char *		808612	1					
ANR	809032	Identifier	r_core_cmd_str_pipe		808612	2					
ANR	809033	ParameterList	"RCore * core , const char * cmd"		808612	3					
ANR	809034	Parameter	RCore * core	4547:32:112980:112990	808612	0	True				
ANR	809035	ParameterType	RCore *		808612	0					
ANR	809036	Identifier	core		808612	1					
ANR	809037	Parameter	const char * cmd	4547:45:112993:113007	808612	1	True				
ANR	809038	ParameterType	const char *		808612	0					
ANR	809039	Identifier	cmd		808612	1					
ANR	809040	CFGEntryNode	ENTRY		808612		True				
ANR	809041	CFGExitNode	EXIT		808612		True				
ANR	809042	Symbol	r_cons_html_filter		808612						
ANR	809043	Symbol	r_core_cmd_str		808612						
ANR	809044	Symbol	r_sandbox_enable		808612						
ANR	809045	Symbol	hres		808612						
ANR	809046	Symbol	* core		808612						
ANR	809047	Symbol	strchr		808612						
ANR	809048	Symbol	r_cons_pipe_open		808612						
ANR	809049	Symbol	sh		808612						
ANR	809050	Symbol	tmp		808612						
ANR	809051	Symbol	_cmd		808612						
ANR	809052	Symbol	* cmd		808612						
ANR	809053	Symbol	strcmp		808612						
ANR	809054	Symbol	core -> config		808612						
ANR	809055	Symbol	ret		808612						
ANR	809056	Symbol	res		808612						
ANR	809057	Symbol	r_file_slurp		808612						
ANR	809058	Symbol	NULL		808612						
ANR	809059	Symbol	c		808612						
ANR	809060	Symbol	* c		808612						
ANR	809061	Symbol	p		808612						
ANR	809062	Symbol	core		808612						
ANR	809063	Symbol	s		808612						
ANR	809064	Symbol	pipefd		808612						
ANR	809065	Symbol	r_config_get_i		808612						
ANR	809066	Symbol	* p		808612						
ANR	809067	Symbol	& tmp		808612						
ANR	809068	Symbol	cmd		808612						
ANR	809069	Symbol	strdup		808612						
ANR	809070	Symbol	r_file_mkstemp		808612						
ANR	809071	Function	r_core_cmd_strf	4607:0:114505:114748							
ANR	809072	FunctionDef	"r_core_cmd_strf (RCore * core , const char * fmt)"		809071	0					
ANR	809073	CompoundStatement		4607:63:114568:114748	809071	0					
ANR	809074	IdentifierDeclStatement	char string [ 4096 ] ;	4608:1:114571:114588	809071	0	True				
ANR	809075	IdentifierDecl	string [ 4096 ]		809071	0					
ANR	809076	IdentifierDeclType	char [ 4096 ]		809071	0					
ANR	809077	Identifier	string		809071	1					
ANR	809078	PrimaryExpression	4096		809071	2					
ANR	809079	IdentifierDeclStatement	char * ret ;	4609:1:114591:114600	809071	1	True				
ANR	809080	IdentifierDecl	* ret		809071	0					
ANR	809081	IdentifierDeclType	char *		809071	0					
ANR	809082	Identifier	ret		809071	1					
ANR	809083	IdentifierDeclStatement	va_list ap ;	4610:1:114603:114613	809071	2	True				
ANR	809084	IdentifierDecl	ap		809071	0					
ANR	809085	IdentifierDeclType	va_list		809071	0					
ANR	809086	Identifier	ap		809071	1					
ANR	809087	ExpressionStatement	"va_start ( ap , fmt )"	4611:1:114616:114634	809071	3	True				
ANR	809088	CallExpression	"va_start ( ap , fmt )"		809071	0					
ANR	809089	Callee	va_start		809071	0					
ANR	809090	Identifier	va_start		809071	0					
ANR	809091	ArgumentList	ap		809071	1					
ANR	809092	Argument	ap		809071	0					
ANR	809093	Identifier	ap		809071	0					
ANR	809094	Argument	fmt		809071	1					
ANR	809095	Identifier	fmt		809071	0					
ANR	809096	ExpressionStatement	"vsnprintf ( string , sizeof ( string ) , fmt , ap )"	4612:1:114637:114681	809071	4	True				
ANR	809097	CallExpression	"vsnprintf ( string , sizeof ( string ) , fmt , ap )"		809071	0					
ANR	809098	Callee	vsnprintf		809071	0					
ANR	809099	Identifier	vsnprintf		809071	0					
ANR	809100	ArgumentList	string		809071	1					
ANR	809101	Argument	string		809071	0					
ANR	809102	Identifier	string		809071	0					
ANR	809103	Argument	sizeof ( string )		809071	1					
ANR	809104	SizeofExpression	sizeof ( string )		809071	0					
ANR	809105	Sizeof	sizeof		809071	0					
ANR	809106	SizeofOperand	string		809071	1					
ANR	809107	Argument	fmt		809071	2					
ANR	809108	Identifier	fmt		809071	0					
ANR	809109	Argument	ap		809071	3					
ANR	809110	Identifier	ap		809071	0					
ANR	809111	ExpressionStatement	"ret = r_core_cmd_str ( core , string )"	4613:1:114684:114719	809071	5	True				
ANR	809112	AssignmentExpression	"ret = r_core_cmd_str ( core , string )"		809071	0		=			
ANR	809113	Identifier	ret		809071	0					
ANR	809114	CallExpression	"r_core_cmd_str ( core , string )"		809071	1					
ANR	809115	Callee	r_core_cmd_str		809071	0					
ANR	809116	Identifier	r_core_cmd_str		809071	0					
ANR	809117	ArgumentList	core		809071	1					
ANR	809118	Argument	core		809071	0					
ANR	809119	Identifier	core		809071	0					
ANR	809120	Argument	string		809071	1					
ANR	809121	Identifier	string		809071	0					
ANR	809122	ExpressionStatement	va_end ( ap )	4614:1:114722:114733	809071	6	True				
ANR	809123	CallExpression	va_end ( ap )		809071	0					
ANR	809124	Callee	va_end		809071	0					
ANR	809125	Identifier	va_end		809071	0					
ANR	809126	ArgumentList	ap		809071	1					
ANR	809127	Argument	ap		809071	0					
ANR	809128	Identifier	ap		809071	0					
ANR	809129	ReturnStatement	return ret ;	4615:1:114736:114746	809071	7	True				
ANR	809130	Identifier	ret		809071	0					
ANR	809131	ReturnType	R_API char *		809071	1					
ANR	809132	Identifier	r_core_cmd_strf		809071	2					
ANR	809133	ParameterList	"RCore * core , const char * fmt"		809071	3					
ANR	809134	Parameter	RCore * core	4607:28:114533:114543	809071	0	True				
ANR	809135	ParameterType	RCore *		809071	0					
ANR	809136	Identifier	core		809071	1					
ANR	809137	Parameter	const char * fmt	4607:41:114546:114560	809071	1	True				
ANR	809138	ParameterType	const char *		809071	0					
ANR	809139	Identifier	fmt		809071	1					
ANR	809140	CFGEntryNode	ENTRY		809071		True				
ANR	809141	CFGExitNode	EXIT		809071		True				
ANR	809142	Symbol	ret		809071						
ANR	809143	Symbol	core		809071						
ANR	809144	Symbol	r_core_cmd_str		809071						
ANR	809145	Symbol	string		809071						
ANR	809146	Symbol	fmt		809071						
ANR	809147	Symbol	ap		809071						
ANR	809148	Function	r_core_cmd_str	4619:0:114816:115196							
ANR	809149	FunctionDef	"r_core_cmd_str (RCore * core , const char * cmd)"		809148	0					
ANR	809150	CompoundStatement		4619:57:114873:115196	809148	0					
ANR	809151	IdentifierDeclStatement	const char * static_str ;	4620:1:114876:114898	809148	0	True				
ANR	809152	IdentifierDecl	* static_str		809148	0					
ANR	809153	IdentifierDeclType	const char *		809148	0					
ANR	809154	Identifier	static_str		809148	1					
ANR	809155	IdentifierDeclStatement	char * retstr = NULL ;	4621:1:114901:114920	809148	1	True				
ANR	809156	IdentifierDecl	* retstr = NULL		809148	0					
ANR	809157	IdentifierDeclType	char *		809148	0					
ANR	809158	Identifier	retstr		809148	1					
ANR	809159	AssignmentExpression	* retstr = NULL		809148	2		=			
ANR	809160	Identifier	NULL		809148	0					
ANR	809161	Identifier	NULL		809148	1					
ANR	809162	ExpressionStatement	r_cons_push ( )	4622:1:114923:114937	809148	2	True				
ANR	809163	CallExpression	r_cons_push ( )		809148	0					
ANR	809164	Callee	r_cons_push		809148	0					
ANR	809165	Identifier	r_cons_push		809148	0					
ANR	809166	ArgumentList			809148	1					
ANR	809167	IfStatement	"if ( r_core_cmd ( core , cmd , 0 ) == - 1 )"		809148	3					
ANR	809168	Condition	"r_core_cmd ( core , cmd , 0 ) == - 1"	4623:5:114944:114974	809148	0	True				
ANR	809169	EqualityExpression	"r_core_cmd ( core , cmd , 0 ) == - 1"		809148	0		==			
ANR	809170	CallExpression	"r_core_cmd ( core , cmd , 0 )"		809148	0					
ANR	809171	Callee	r_core_cmd		809148	0					
ANR	809172	Identifier	r_core_cmd		809148	0					
ANR	809173	ArgumentList	core		809148	1					
ANR	809174	Argument	core		809148	0					
ANR	809175	Identifier	core		809148	0					
ANR	809176	Argument	cmd		809148	1					
ANR	809177	Identifier	cmd		809148	0					
ANR	809178	Argument	0		809148	2					
ANR	809179	PrimaryExpression	0		809148	0					
ANR	809180	UnaryOperationExpression	- 1		809148	1					
ANR	809181	UnaryOperator	-		809148	0					
ANR	809182	PrimaryExpression	1		809148	1					
ANR	809183	CompoundStatement		5:38:103:103	809148	1					
ANR	809184	ReturnStatement	return NULL ;	4625:2:115025:115036	809148	0	True				
ANR	809185	Identifier	NULL		809148	0					
ANR	809186	ExpressionStatement	r_cons_filter ( )	4627:1:115042:115058	809148	4	True				
ANR	809187	CallExpression	r_cons_filter ( )		809148	0					
ANR	809188	Callee	r_cons_filter		809148	0					
ANR	809189	Identifier	r_cons_filter		809148	0					
ANR	809190	ArgumentList			809148	1					
ANR	809191	ExpressionStatement	static_str = r_cons_get_buffer ( )	4628:1:115061:115094	809148	5	True				
ANR	809192	AssignmentExpression	static_str = r_cons_get_buffer ( )		809148	0		=			
ANR	809193	Identifier	static_str		809148	0					
ANR	809194	CallExpression	r_cons_get_buffer ( )		809148	1					
ANR	809195	Callee	r_cons_get_buffer		809148	0					
ANR	809196	Identifier	r_cons_get_buffer		809148	0					
ANR	809197	ArgumentList			809148	1					
ANR	809198	ExpressionStatement	"retstr = strdup ( static_str ? static_str : """" )"	4629:1:115097:115141	809148	6	True				
ANR	809199	AssignmentExpression	"retstr = strdup ( static_str ? static_str : """" )"		809148	0		=			
ANR	809200	Identifier	retstr		809148	0					
ANR	809201	CallExpression	"strdup ( static_str ? static_str : """" )"		809148	1					
ANR	809202	Callee	strdup		809148	0					
ANR	809203	Identifier	strdup		809148	0					
ANR	809204	ArgumentList	"static_str ? static_str : """""		809148	1					
ANR	809205	Argument	"static_str ? static_str : """""		809148	0					
ANR	809206	ConditionalExpression	"static_str ? static_str : """""		809148	0					
ANR	809207	Condition	static_str		809148	0					
ANR	809208	Identifier	static_str		809148	0					
ANR	809209	Identifier	static_str		809148	1					
ANR	809210	PrimaryExpression	""""""		809148	2					
ANR	809211	ExpressionStatement	r_cons_pop ( )	4630:1:115144:115157	809148	7	True				
ANR	809212	CallExpression	r_cons_pop ( )		809148	0					
ANR	809213	Callee	r_cons_pop		809148	0					
ANR	809214	Identifier	r_cons_pop		809148	0					
ANR	809215	ArgumentList			809148	1					
ANR	809216	ExpressionStatement	r_cons_echo ( NULL )	4631:1:115160:115178	809148	8	True				
ANR	809217	CallExpression	r_cons_echo ( NULL )		809148	0					
ANR	809218	Callee	r_cons_echo		809148	0					
ANR	809219	Identifier	r_cons_echo		809148	0					
ANR	809220	ArgumentList	NULL		809148	1					
ANR	809221	Argument	NULL		809148	0					
ANR	809222	Identifier	NULL		809148	0					
ANR	809223	ReturnStatement	return retstr ;	4632:1:115181:115194	809148	9	True				
ANR	809224	Identifier	retstr		809148	0					
ANR	809225	ReturnType	R_API char *		809148	1					
ANR	809226	Identifier	r_core_cmd_str		809148	2					
ANR	809227	ParameterList	"RCore * core , const char * cmd"		809148	3					
ANR	809228	Parameter	RCore * core	4619:27:114843:114853	809148	0	True				
ANR	809229	ParameterType	RCore *		809148	0					
ANR	809230	Identifier	core		809148	1					
ANR	809231	Parameter	const char * cmd	4619:40:114856:114870	809148	1	True				
ANR	809232	ParameterType	const char *		809148	0					
ANR	809233	Identifier	cmd		809148	1					
ANR	809234	CFGEntryNode	ENTRY		809148		True				
ANR	809235	CFGExitNode	EXIT		809148		True				
ANR	809236	Symbol	core		809148						
ANR	809237	Symbol	static_str		809148						
ANR	809238	Symbol	r_core_cmd		809148						
ANR	809239	Symbol	NULL		809148						
ANR	809240	Symbol	r_cons_get_buffer		809148						
ANR	809241	Symbol	cmd		809148						
ANR	809242	Symbol	strdup		809148						
ANR	809243	Symbol	retstr		809148						
ANR	809244	Function	r_core_cmd_repeat	4635:0:115199:116185							
ANR	809245	FunctionDef	"r_core_cmd_repeat (RCore * core , int next)"		809244	0					
ANR	809246	CompoundStatement		4635:52:115251:116185	809244	0					
ANR	809247	IfStatement	if ( ! core -> lastcmd || core -> cons -> context -> cmd_depth < 1 )		809244	0					
ANR	809248	Condition	! core -> lastcmd || core -> cons -> context -> cmd_depth < 1	4637:5:115288:115339	809244	0	True				
ANR	809249	OrExpression	! core -> lastcmd || core -> cons -> context -> cmd_depth < 1		809244	0		||			
ANR	809250	UnaryOperationExpression	! core -> lastcmd		809244	0					
ANR	809251	UnaryOperator	!		809244	0					
ANR	809252	PtrMemberAccess	core -> lastcmd		809244	1					
ANR	809253	Identifier	core		809244	0					
ANR	809254	Identifier	lastcmd		809244	1					
ANR	809255	RelationalExpression	core -> cons -> context -> cmd_depth < 1		809244	1		<			
ANR	809256	PtrMemberAccess	core -> cons -> context -> cmd_depth		809244	0					
ANR	809257	PtrMemberAccess	core -> cons -> context		809244	0					
ANR	809258	PtrMemberAccess	core -> cons		809244	0					
ANR	809259	Identifier	core		809244	0					
ANR	809260	Identifier	cons		809244	1					
ANR	809261	Identifier	context		809244	1					
ANR	809262	Identifier	cmd_depth		809244	1					
ANR	809263	PrimaryExpression	1		809244	1					
ANR	809264	CompoundStatement		3:59:90:90	809244	1					
ANR	809265	ReturnStatement	return ;	4638:2:115346:115352	809244	0	True				
ANR	809266	SwitchStatement	switch ( * core -> lastcmd )		809244	1					
ANR	809267	Condition	* core -> lastcmd	4640:9:115366:115379	809244	0	True				
ANR	809268	UnaryOperationExpression	* core -> lastcmd		809244	0					
ANR	809269	UnaryOperator	*		809244	0					
ANR	809270	PtrMemberAccess	core -> lastcmd		809244	1					
ANR	809271	Identifier	core		809244	0					
ANR	809272	Identifier	lastcmd		809244	1					
ANR	809273	CompoundStatement		6:25:130:130	809244	1					
ANR	809274	Label	case '.' :	4641:1:115385:115393	809244	0	True				
ANR	809275	IfStatement	if ( core -> lastcmd [ 1 ] == '(' )		809244	1					
ANR	809276	Condition	core -> lastcmd [ 1 ] == '('	4642:6:115401:115423	809244	0	True				
ANR	809277	EqualityExpression	core -> lastcmd [ 1 ] == '('		809244	0		==			
ANR	809278	ArrayIndexing	core -> lastcmd [ 1 ]		809244	0					
ANR	809279	PtrMemberAccess	core -> lastcmd		809244	0					
ANR	809280	Identifier	core		809244	0					
ANR	809281	Identifier	lastcmd		809244	1					
ANR	809282	PrimaryExpression	1		809244	1					
ANR	809283	PrimaryExpression	'('		809244	1					
ANR	809284	CompoundStatement		8:31:174:174	809244	1					
ANR	809285	ExpressionStatement	"r_core_cmd0 ( core , core -> lastcmd )"	4643:3:115445:115478	809244	0	True				
ANR	809286	CallExpression	"r_core_cmd0 ( core , core -> lastcmd )"		809244	0					
ANR	809287	Callee	r_core_cmd0		809244	0					
ANR	809288	Identifier	r_core_cmd0		809244	0					
ANR	809289	ArgumentList	core		809244	1					
ANR	809290	Argument	core		809244	0					
ANR	809291	Identifier	core		809244	0					
ANR	809292	Argument	core -> lastcmd		809244	1					
ANR	809293	PtrMemberAccess	core -> lastcmd		809244	0					
ANR	809294	Identifier	core		809244	0					
ANR	809295	Identifier	lastcmd		809244	1					
ANR	809296	BreakStatement	break ;	4645:2:115486:115491	809244	2	True				
ANR	809297	Label	case 'd' :	4646:1:115494:115502	809244	3	True				
ANR	809298	ExpressionStatement	"r_core_cmd0 ( core , core -> lastcmd )"	4647:2:115515:115548	809244	4	True				
ANR	809299	CallExpression	"r_core_cmd0 ( core , core -> lastcmd )"		809244	0					
ANR	809300	Callee	r_core_cmd0		809244	0					
ANR	809301	Identifier	r_core_cmd0		809244	0					
ANR	809302	ArgumentList	core		809244	1					
ANR	809303	Argument	core		809244	0					
ANR	809304	Identifier	core		809244	0					
ANR	809305	Argument	core -> lastcmd		809244	1					
ANR	809306	PtrMemberAccess	core -> lastcmd		809244	0					
ANR	809307	Identifier	core		809244	0					
ANR	809308	Identifier	lastcmd		809244	1					
ANR	809309	SwitchStatement	switch ( core -> lastcmd [ 1 ] )		809244	5					
ANR	809310	Condition	core -> lastcmd [ 1 ]	4648:10:115560:115575	809244	0	True				
ANR	809311	ArrayIndexing	core -> lastcmd [ 1 ]		809244	0					
ANR	809312	PtrMemberAccess	core -> lastcmd		809244	0					
ANR	809313	Identifier	core		809244	0					
ANR	809314	Identifier	lastcmd		809244	1					
ANR	809315	PrimaryExpression	1		809244	1					
ANR	809316	CompoundStatement		14:28:326:326	809244	1					
ANR	809317	Label	case 's' :	4649:2:115582:115590	809244	0	True				
ANR	809318	Label	case 'c' :	4650:2:115594:115602	809244	1	True				
ANR	809319	ExpressionStatement	"r_core_cmd0 ( core , ""sr PC;pd 1"" )"	4651:3:115607:115639	809244	2	True				
ANR	809320	CallExpression	"r_core_cmd0 ( core , ""sr PC;pd 1"" )"		809244	0					
ANR	809321	Callee	r_core_cmd0		809244	0					
ANR	809322	Identifier	r_core_cmd0		809244	0					
ANR	809323	ArgumentList	core		809244	1					
ANR	809324	Argument	core		809244	0					
ANR	809325	Identifier	core		809244	0					
ANR	809326	Argument	"""sr PC;pd 1"""		809244	1					
ANR	809327	PrimaryExpression	"""sr PC;pd 1"""		809244	0					
ANR	809328	BreakStatement	break ;	4653:2:115647:115652	809244	6	True				
ANR	809329	Label	case 'p' :	4654:1:115655:115663	809244	7	True				
ANR	809330	Label	case 'x' :	4655:1:115675:115683	809244	8	True				
ANR	809331	Label	case '$' :	4656:1:115686:115694	809244	9	True				
ANR	809332	IfStatement	"if ( ! strncmp ( core -> lastcmd , ""pd"" , 2 ) )"		809244	10					
ANR	809333	Condition	"! strncmp ( core -> lastcmd , ""pd"" , 2 )"	4657:6:115702:115734	809244	0	True				
ANR	809334	UnaryOperationExpression	"! strncmp ( core -> lastcmd , ""pd"" , 2 )"		809244	0					
ANR	809335	UnaryOperator	!		809244	0					
ANR	809336	CallExpression	"strncmp ( core -> lastcmd , ""pd"" , 2 )"		809244	1					
ANR	809337	Callee	strncmp		809244	0					
ANR	809338	Identifier	strncmp		809244	0					
ANR	809339	ArgumentList	core -> lastcmd		809244	1					
ANR	809340	Argument	core -> lastcmd		809244	0					
ANR	809341	PtrMemberAccess	core -> lastcmd		809244	0					
ANR	809342	Identifier	core		809244	0					
ANR	809343	Identifier	lastcmd		809244	1					
ANR	809344	Argument	"""pd"""		809244	1					
ANR	809345	PrimaryExpression	"""pd"""		809244	0					
ANR	809346	Argument	2		809244	2					
ANR	809347	PrimaryExpression	2		809244	0					
ANR	809348	CompoundStatement		23:41:485:485	809244	1					
ANR	809349	IfStatement	if ( core -> lastcmd [ 2 ] == ' ' )		809244	0					
ANR	809350	Condition	core -> lastcmd [ 2 ] == ' '	4658:7:115746:115767	809244	0	True				
ANR	809351	EqualityExpression	core -> lastcmd [ 2 ] == ' '		809244	0		==			
ANR	809352	ArrayIndexing	core -> lastcmd [ 2 ]		809244	0					
ANR	809353	PtrMemberAccess	core -> lastcmd		809244	0					
ANR	809354	Identifier	core		809244	0					
ANR	809355	Identifier	lastcmd		809244	1					
ANR	809356	PrimaryExpression	2		809244	1					
ANR	809357	PrimaryExpression	' '		809244	1					
ANR	809358	CompoundStatement		24:31:518:518	809244	1					
ANR	809359	ExpressionStatement	"r_core_cmdf ( core , ""so %s"" , core -> lastcmd + 3 )"	4659:4:115776:115822	809244	0	True				
ANR	809360	CallExpression	"r_core_cmdf ( core , ""so %s"" , core -> lastcmd + 3 )"		809244	0					
ANR	809361	Callee	r_core_cmdf		809244	0					
ANR	809362	Identifier	r_core_cmdf		809244	0					
ANR	809363	ArgumentList	core		809244	1					
ANR	809364	Argument	core		809244	0					
ANR	809365	Identifier	core		809244	0					
ANR	809366	Argument	"""so %s"""		809244	1					
ANR	809367	PrimaryExpression	"""so %s"""		809244	0					
ANR	809368	Argument	core -> lastcmd + 3		809244	2					
ANR	809369	AdditiveExpression	core -> lastcmd + 3		809244	0		+			
ANR	809370	PtrMemberAccess	core -> lastcmd		809244	0					
ANR	809371	Identifier	core		809244	0					
ANR	809372	Identifier	lastcmd		809244	1					
ANR	809373	PrimaryExpression	3		809244	1					
ANR	809374	ElseStatement	else		809244	0					
ANR	809375	CompoundStatement		26:10:582:582	809244	0					
ANR	809376	ExpressionStatement	"r_core_cmd0 ( core , ""so `pi~?`"" )"	4661:4:115840:115871	809244	0	True				
ANR	809377	CallExpression	"r_core_cmd0 ( core , ""so `pi~?`"" )"		809244	0					
ANR	809378	Callee	r_core_cmd0		809244	0					
ANR	809379	Identifier	r_core_cmd0		809244	0					
ANR	809380	ArgumentList	core		809244	1					
ANR	809381	Argument	core		809244	0					
ANR	809382	Identifier	core		809244	0					
ANR	809383	Argument	"""so `pi~?`"""		809244	1					
ANR	809384	PrimaryExpression	"""so `pi~?`"""		809244	0					
ANR	809385	ElseStatement	else		809244	0					
ANR	809386	CompoundStatement		29:9:635:635	809244	0					
ANR	809387	IfStatement	if ( next )		809244	0					
ANR	809388	Condition	next	4664:7:115896:115899	809244	0	True				
ANR	809389	Identifier	next		809244	0					
ANR	809390	CompoundStatement		30:13:650:650	809244	1					
ANR	809391	ExpressionStatement	"r_core_seek ( core , core -> offset + core -> blocksize , 1 )"	4665:4:115908:115961	809244	0	True				
ANR	809392	CallExpression	"r_core_seek ( core , core -> offset + core -> blocksize , 1 )"		809244	0					
ANR	809393	Callee	r_core_seek		809244	0					
ANR	809394	Identifier	r_core_seek		809244	0					
ANR	809395	ArgumentList	core		809244	1					
ANR	809396	Argument	core		809244	0					
ANR	809397	Identifier	core		809244	0					
ANR	809398	Argument	core -> offset + core -> blocksize		809244	1					
ANR	809399	AdditiveExpression	core -> offset + core -> blocksize		809244	0		+			
ANR	809400	PtrMemberAccess	core -> offset		809244	0					
ANR	809401	Identifier	core		809244	0					
ANR	809402	Identifier	offset		809244	1					
ANR	809403	PtrMemberAccess	core -> blocksize		809244	1					
ANR	809404	Identifier	core		809244	0					
ANR	809405	Identifier	blocksize		809244	1					
ANR	809406	Argument	1		809244	2					
ANR	809407	PrimaryExpression	1		809244	0					
ANR	809408	ElseStatement	else		809244	0					
ANR	809409	CompoundStatement		32:10:721:721	809244	0					
ANR	809410	IfStatement	if ( core -> blocksize > core -> offset )		809244	0					
ANR	809411	Condition	core -> blocksize > core -> offset	4667:8:115983:116012	809244	0	True				
ANR	809412	RelationalExpression	core -> blocksize > core -> offset		809244	0		>			
ANR	809413	PtrMemberAccess	core -> blocksize		809244	0					
ANR	809414	Identifier	core		809244	0					
ANR	809415	Identifier	blocksize		809244	1					
ANR	809416	PtrMemberAccess	core -> offset		809244	1					
ANR	809417	Identifier	core		809244	0					
ANR	809418	Identifier	offset		809244	1					
ANR	809419	CompoundStatement		33:40:763:763	809244	1					
ANR	809420	ExpressionStatement	"r_core_seek ( core , 0 , 1 )"	4668:5:116022:116046	809244	0	True				
ANR	809421	CallExpression	"r_core_seek ( core , 0 , 1 )"		809244	0					
ANR	809422	Callee	r_core_seek		809244	0					
ANR	809423	Identifier	r_core_seek		809244	0					
ANR	809424	ArgumentList	core		809244	1					
ANR	809425	Argument	core		809244	0					
ANR	809426	Identifier	core		809244	0					
ANR	809427	Argument	0		809244	1					
ANR	809428	PrimaryExpression	0		809244	0					
ANR	809429	Argument	1		809244	2					
ANR	809430	PrimaryExpression	1		809244	0					
ANR	809431	ElseStatement	else		809244	0					
ANR	809432	CompoundStatement		35:11:807:807	809244	0					
ANR	809433	ExpressionStatement	"r_core_seek ( core , core -> offset - core -> blocksize , 1 )"	4670:5:116066:116119	809244	0	True				
ANR	809434	CallExpression	"r_core_seek ( core , core -> offset - core -> blocksize , 1 )"		809244	0					
ANR	809435	Callee	r_core_seek		809244	0					
ANR	809436	Identifier	r_core_seek		809244	0					
ANR	809437	ArgumentList	core		809244	1					
ANR	809438	Argument	core		809244	0					
ANR	809439	Identifier	core		809244	0					
ANR	809440	Argument	core -> offset - core -> blocksize		809244	1					
ANR	809441	AdditiveExpression	core -> offset - core -> blocksize		809244	0		-			
ANR	809442	PtrMemberAccess	core -> offset		809244	0					
ANR	809443	Identifier	core		809244	0					
ANR	809444	Identifier	offset		809244	1					
ANR	809445	PtrMemberAccess	core -> blocksize		809244	1					
ANR	809446	Identifier	core		809244	0					
ANR	809447	Identifier	blocksize		809244	1					
ANR	809448	Argument	1		809244	2					
ANR	809449	PrimaryExpression	1		809244	0					
ANR	809450	ExpressionStatement	"r_core_cmd0 ( core , core -> lastcmd )"	4674:2:116138:116171	809244	11	True				
ANR	809451	CallExpression	"r_core_cmd0 ( core , core -> lastcmd )"		809244	0					
ANR	809452	Callee	r_core_cmd0		809244	0					
ANR	809453	Identifier	r_core_cmd0		809244	0					
ANR	809454	ArgumentList	core		809244	1					
ANR	809455	Argument	core		809244	0					
ANR	809456	Identifier	core		809244	0					
ANR	809457	Argument	core -> lastcmd		809244	1					
ANR	809458	PtrMemberAccess	core -> lastcmd		809244	0					
ANR	809459	Identifier	core		809244	0					
ANR	809460	Identifier	lastcmd		809244	1					
ANR	809461	BreakStatement	break ;	4675:2:116175:116180	809244	12	True				
ANR	809462	ReturnType	R_API void		809244	1					
ANR	809463	Identifier	r_core_cmd_repeat		809244	2					
ANR	809464	ParameterList	"RCore * core , int next"		809244	3					
ANR	809465	Parameter	RCore * core	4635:29:115228:115238	809244	0	True				
ANR	809466	ParameterType	RCore *		809244	0					
ANR	809467	Identifier	core		809244	1					
ANR	809468	Parameter	int next	4635:42:115241:115248	809244	1	True				
ANR	809469	ParameterType	int		809244	0					
ANR	809470	Identifier	next		809244	1					
ANR	809471	CFGEntryNode	ENTRY		809244		True				
ANR	809472	CFGExitNode	EXIT		809244		True				
ANR	809473	Symbol	next		809244						
ANR	809474	Symbol	core -> blocksize		809244						
ANR	809475	Symbol	* core -> cons		809244						
ANR	809476	Symbol	* * core -> cons		809244						
ANR	809477	Symbol	* core		809244						
ANR	809478	Symbol	core -> offset		809244						
ANR	809479	Symbol	core -> lastcmd		809244						
ANR	809480	Symbol	core		809244						
ANR	809481	Symbol	* * * core		809244						
ANR	809482	Symbol	strncmp		809244						
ANR	809483	Symbol	core -> cons		809244						
ANR	809484	Symbol	* core -> cons -> context		809244						
ANR	809485	Symbol	* core -> lastcmd		809244						
ANR	809486	Symbol	core -> cons -> context		809244						
ANR	809487	Symbol	* * core		809244						
ANR	809488	Symbol	core -> cons -> context -> cmd_depth		809244						
ANR	809489	Function	r_core_cmd_task_sync	4680:0:116233:116548							
ANR	809490	FunctionDef	"r_core_cmd_task_sync (RCore * core , const char * cmd , bool log)"		809489	0					
ANR	809491	CompoundStatement		4680:71:116304:116548	809489	0					
ANR	809492	IdentifierDeclStatement	RCoreTask * task = core -> main_task ;	4681:1:116307:116340	809489	0	True				
ANR	809493	IdentifierDecl	* task = core -> main_task		809489	0					
ANR	809494	IdentifierDeclType	RCoreTask *		809489	0					
ANR	809495	Identifier	task		809489	1					
ANR	809496	AssignmentExpression	* task = core -> main_task		809489	2		=			
ANR	809497	Identifier	task		809489	0					
ANR	809498	PtrMemberAccess	core -> main_task		809489	1					
ANR	809499	Identifier	core		809489	0					
ANR	809500	Identifier	main_task		809489	1					
ANR	809501	IdentifierDeclStatement	char * s = strdup ( cmd ) ;	4682:1:116343:116365	809489	1	True				
ANR	809502	IdentifierDecl	* s = strdup ( cmd )		809489	0					
ANR	809503	IdentifierDeclType	char *		809489	0					
ANR	809504	Identifier	s		809489	1					
ANR	809505	AssignmentExpression	* s = strdup ( cmd )		809489	2		=			
ANR	809506	Identifier	s		809489	0					
ANR	809507	CallExpression	strdup ( cmd )		809489	1					
ANR	809508	Callee	strdup		809489	0					
ANR	809509	Identifier	strdup		809489	0					
ANR	809510	ArgumentList	cmd		809489	1					
ANR	809511	Argument	cmd		809489	0					
ANR	809512	Identifier	cmd		809489	0					
ANR	809513	IfStatement	if ( ! s )		809489	2					
ANR	809514	Condition	! s	4683:5:116372:116373	809489	0	True				
ANR	809515	UnaryOperationExpression	! s		809489	0					
ANR	809516	UnaryOperator	!		809489	0					
ANR	809517	Identifier	s		809489	1					
ANR	809518	CompoundStatement		4:9:71:71	809489	1					
ANR	809519	ReturnStatement	return 0 ;	4684:2:116380:116388	809489	0	True				
ANR	809520	PrimaryExpression	0		809489	0					
ANR	809521	ExpressionStatement	task -> cmd = s	4686:1:116394:116407	809489	3	True				
ANR	809522	AssignmentExpression	task -> cmd = s		809489	0		=			
ANR	809523	PtrMemberAccess	task -> cmd		809489	0					
ANR	809524	Identifier	task		809489	0					
ANR	809525	Identifier	cmd		809489	1					
ANR	809526	Identifier	s		809489	1					
ANR	809527	ExpressionStatement	task -> cmd_log = log	4687:1:116410:116429	809489	4	True				
ANR	809528	AssignmentExpression	task -> cmd_log = log		809489	0		=			
ANR	809529	PtrMemberAccess	task -> cmd_log		809489	0					
ANR	809530	Identifier	task		809489	0					
ANR	809531	Identifier	cmd_log		809489	1					
ANR	809532	Identifier	log		809489	1					
ANR	809533	ExpressionStatement	task -> state = R_CORE_TASK_STATE_BEFORE_START	4688:1:116432:116476	809489	5	True				
ANR	809534	AssignmentExpression	task -> state = R_CORE_TASK_STATE_BEFORE_START		809489	0		=			
ANR	809535	PtrMemberAccess	task -> state		809489	0					
ANR	809536	Identifier	task		809489	0					
ANR	809537	Identifier	state		809489	1					
ANR	809538	Identifier	R_CORE_TASK_STATE_BEFORE_START		809489	1					
ANR	809539	IdentifierDeclStatement	"int res = r_core_task_run_sync ( core , task ) ;"	4689:1:116479:116522	809489	6	True				
ANR	809540	IdentifierDecl	"res = r_core_task_run_sync ( core , task )"		809489	0					
ANR	809541	IdentifierDeclType	int		809489	0					
ANR	809542	Identifier	res		809489	1					
ANR	809543	AssignmentExpression	"res = r_core_task_run_sync ( core , task )"		809489	2		=			
ANR	809544	Identifier	res		809489	0					
ANR	809545	CallExpression	"r_core_task_run_sync ( core , task )"		809489	1					
ANR	809546	Callee	r_core_task_run_sync		809489	0					
ANR	809547	Identifier	r_core_task_run_sync		809489	0					
ANR	809548	ArgumentList	core		809489	1					
ANR	809549	Argument	core		809489	0					
ANR	809550	Identifier	core		809489	0					
ANR	809551	Argument	task		809489	1					
ANR	809552	Identifier	task		809489	0					
ANR	809553	ExpressionStatement	free ( s )	4690:1:116525:116533	809489	7	True				
ANR	809554	CallExpression	free ( s )		809489	0					
ANR	809555	Callee	free		809489	0					
ANR	809556	Identifier	free		809489	0					
ANR	809557	ArgumentList	s		809489	1					
ANR	809558	Argument	s		809489	0					
ANR	809559	Identifier	s		809489	0					
ANR	809560	ReturnStatement	return res ;	4691:1:116536:116546	809489	8	True				
ANR	809561	Identifier	res		809489	0					
ANR	809562	ReturnType	R_API int		809489	1					
ANR	809563	Identifier	r_core_cmd_task_sync		809489	2					
ANR	809564	ParameterList	"RCore * core , const char * cmd , bool log"		809489	3					
ANR	809565	Parameter	RCore * core	4680:31:116264:116274	809489	0	True				
ANR	809566	ParameterType	RCore *		809489	0					
ANR	809567	Identifier	core		809489	1					
ANR	809568	Parameter	const char * cmd	4680:44:116277:116291	809489	1	True				
ANR	809569	ParameterType	const char *		809489	0					
ANR	809570	Identifier	cmd		809489	1					
ANR	809571	Parameter	bool log	4680:61:116294:116301	809489	2	True				
ANR	809572	ParameterType	bool		809489	0					
ANR	809573	Identifier	log		809489	1					
ANR	809574	CFGEntryNode	ENTRY		809489		True				
ANR	809575	CFGExitNode	EXIT		809489		True				
ANR	809576	Symbol	res		809489						
ANR	809577	Symbol	log		809489						
ANR	809578	Symbol	core -> main_task		809489						
ANR	809579	Symbol	* core		809489						
ANR	809580	Symbol	task -> cmd_log		809489						
ANR	809581	Symbol	R_CORE_TASK_STATE_BEFORE_START		809489						
ANR	809582	Symbol	r_core_task_run_sync		809489						
ANR	809583	Symbol	core		809489						
ANR	809584	Symbol	task		809489						
ANR	809585	Symbol	s		809489						
ANR	809586	Symbol	task -> state		809489						
ANR	809587	Symbol	cmd		809489						
ANR	809588	Symbol	strdup		809489						
ANR	809589	Symbol	task -> cmd		809489						
ANR	809590	Symbol	* task		809489						
ANR	809591	Function	cmd_ox	4694:0:116551:116654							
ANR	809592	FunctionDef	"cmd_ox (void * data , const char * input)"		809591	0					
ANR	809593	CompoundStatement		4694:49:116600:116654	809591	0					
ANR	809594	ReturnStatement	"return r_core_cmdf ( ( RCore * ) data , ""s 0%s"" , input ) ;"	4695:1:116603:116652	809591	0	True				
ANR	809595	CallExpression	"r_core_cmdf ( ( RCore * ) data , ""s 0%s"" , input )"		809591	0					
ANR	809596	Callee	r_core_cmdf		809591	0					
ANR	809597	Identifier	r_core_cmdf		809591	0					
ANR	809598	ArgumentList	( RCore * ) data		809591	1					
ANR	809599	Argument	( RCore * ) data		809591	0					
ANR	809600	CastExpression	( RCore * ) data		809591	0					
ANR	809601	CastTarget	RCore *		809591	0					
ANR	809602	Identifier	data		809591	1					
ANR	809603	Argument	"""s 0%s"""		809591	1					
ANR	809604	PrimaryExpression	"""s 0%s"""		809591	0					
ANR	809605	Argument	input		809591	2					
ANR	809606	Identifier	input		809591	0					
ANR	809607	ReturnType	static int		809591	1					
ANR	809608	Identifier	cmd_ox		809591	2					
ANR	809609	ParameterList	"void * data , const char * input"		809591	3					
ANR	809610	Parameter	void * data	4694:18:116569:116578	809591	0	True				
ANR	809611	ParameterType	void *		809591	0					
ANR	809612	Identifier	data		809591	1					
ANR	809613	Parameter	const char * input	4694:30:116581:116597	809591	1	True				
ANR	809614	ParameterType	const char *		809591	0					
ANR	809615	Identifier	input		809591	1					
ANR	809616	CFGEntryNode	ENTRY		809591		True				
ANR	809617	CFGExitNode	EXIT		809591		True				
ANR	809618	Symbol	input		809591						
ANR	809619	Symbol	data		809591						
ANR	809620	Symbol	r_core_cmdf		809591						
ANR	809621	Function	compare_cmd_descriptor_name	4698:0:116657:116801							
ANR	809622	FunctionDef	"compare_cmd_descriptor_name (const void * a , const void * b)"		809621	0					
ANR	809623	CompoundStatement		4698:69:116726:116801	809621	0					
ANR	809624	ReturnStatement	"return strcmp ( ( ( RCmdDescriptor * ) a ) -> cmd , ( ( RCmdDescriptor * ) b ) -> cmd ) ;"	4699:1:116729:116799	809621	0	True				
ANR	809625	CallExpression	"strcmp ( ( ( RCmdDescriptor * ) a ) -> cmd , ( ( RCmdDescriptor * ) b ) -> cmd )"		809621	0					
ANR	809626	Callee	strcmp		809621	0					
ANR	809627	Identifier	strcmp		809621	0					
ANR	809628	ArgumentList	( ( RCmdDescriptor * ) a ) -> cmd		809621	1					
ANR	809629	Argument	( ( RCmdDescriptor * ) a ) -> cmd		809621	0					
ANR	809630	PtrMemberAccess	( ( RCmdDescriptor * ) a ) -> cmd		809621	0					
ANR	809631	CastExpression	( RCmdDescriptor * ) a		809621	0					
ANR	809632	CastTarget	RCmdDescriptor *		809621	0					
ANR	809633	Identifier	a		809621	1					
ANR	809634	Identifier	cmd		809621	1					
ANR	809635	Argument	( ( RCmdDescriptor * ) b ) -> cmd		809621	1					
ANR	809636	PtrMemberAccess	( ( RCmdDescriptor * ) b ) -> cmd		809621	0					
ANR	809637	CastExpression	( RCmdDescriptor * ) b		809621	0					
ANR	809638	CastTarget	RCmdDescriptor *		809621	0					
ANR	809639	Identifier	b		809621	1					
ANR	809640	Identifier	cmd		809621	1					
ANR	809641	ReturnType	static int		809621	1					
ANR	809642	Identifier	compare_cmd_descriptor_name		809621	2					
ANR	809643	ParameterList	"const void * a , const void * b"		809621	3					
ANR	809644	Parameter	const void * a	4698:39:116696:116708	809621	0	True				
ANR	809645	ParameterType	const void *		809621	0					
ANR	809646	Identifier	a		809621	1					
ANR	809647	Parameter	const void * b	4698:54:116711:116723	809621	1	True				
ANR	809648	ParameterType	const void *		809621	0					
ANR	809649	Identifier	b		809621	1					
ANR	809650	CFGEntryNode	ENTRY		809621		True				
ANR	809651	CFGExitNode	EXIT		809621		True				
ANR	809652	Symbol	strcmp		809621						
ANR	809653	Symbol	a		809621						
ANR	809654	Symbol	b		809621						
ANR	809655	Symbol	( ( RCmdDescriptor * ) a ) -> cmd		809621						
ANR	809656	Symbol	* a		809621						
ANR	809657	Symbol	* b		809621						
ANR	809658	Symbol	( ( RCmdDescriptor * ) b ) -> cmd		809621						
ANR	809659	Function	cmd_descriptor_init	4702:0:116804:117492							
ANR	809660	FunctionDef	cmd_descriptor_init (RCore * core)		809659	0					
ANR	809661	CompoundStatement		4702:45:116849:117492	809659	0					
ANR	809662	IdentifierDeclStatement	const ut8 * p ;	4703:1:116852:116864	809659	0	True				
ANR	809663	IdentifierDecl	* p		809659	0					
ANR	809664	IdentifierDeclType	const ut8 *		809659	0					
ANR	809665	Identifier	p		809659	1					
ANR	809666	IdentifierDeclStatement	RListIter * iter ;	4704:1:116867:116882	809659	1	True				
ANR	809667	IdentifierDecl	* iter		809659	0					
ANR	809668	IdentifierDeclType	RListIter *		809659	0					
ANR	809669	Identifier	iter		809659	1					
ANR	809670	IdentifierDeclStatement	"RCmdDescriptor * x , * y ;"	4705:1:116885:116906	809659	2	True				
ANR	809671	IdentifierDecl	* x		809659	0					
ANR	809672	IdentifierDeclType	RCmdDescriptor *		809659	0					
ANR	809673	Identifier	x		809659	1					
ANR	809674	IdentifierDecl	* y		809659	1					
ANR	809675	IdentifierDeclType	RCmdDescriptor *		809659	0					
ANR	809676	Identifier	y		809659	1					
ANR	809677	IdentifierDeclStatement	int n = core -> cmd_descriptors -> length ;	4706:1:116909:116946	809659	3	True				
ANR	809678	IdentifierDecl	n = core -> cmd_descriptors -> length		809659	0					
ANR	809679	IdentifierDeclType	int		809659	0					
ANR	809680	Identifier	n		809659	1					
ANR	809681	AssignmentExpression	n = core -> cmd_descriptors -> length		809659	2		=			
ANR	809682	Identifier	n		809659	0					
ANR	809683	PtrMemberAccess	core -> cmd_descriptors -> length		809659	1					
ANR	809684	PtrMemberAccess	core -> cmd_descriptors		809659	0					
ANR	809685	Identifier	core		809659	0					
ANR	809686	Identifier	cmd_descriptors		809659	1					
ANR	809687	Identifier	length		809659	1					
ANR	809688	ExpressionStatement	"r_list_sort ( core -> cmd_descriptors , compare_cmd_descriptor_name )"	4707:1:116949:117013	809659	4	True				
ANR	809689	CallExpression	"r_list_sort ( core -> cmd_descriptors , compare_cmd_descriptor_name )"		809659	0					
ANR	809690	Callee	r_list_sort		809659	0					
ANR	809691	Identifier	r_list_sort		809659	0					
ANR	809692	ArgumentList	core -> cmd_descriptors		809659	1					
ANR	809693	Argument	core -> cmd_descriptors		809659	0					
ANR	809694	PtrMemberAccess	core -> cmd_descriptors		809659	0					
ANR	809695	Identifier	core		809659	0					
ANR	809696	Identifier	cmd_descriptors		809659	1					
ANR	809697	Argument	compare_cmd_descriptor_name		809659	1					
ANR	809698	Identifier	compare_cmd_descriptor_name		809659	0					
ANR	809699	Statement	r_list_foreach	4708:1:117016:117029	809659	5	True				
ANR	809700	Statement	(	4708:16:117031:117031	809659	6	True				
ANR	809701	Statement	core	4708:17:117032:117035	809659	7	True				
ANR	809702	Statement	->	4708:21:117036:117037	809659	8	True				
ANR	809703	Statement	cmd_descriptors	4708:23:117038:117052	809659	9	True				
ANR	809704	Statement	","	4708:38:117053:117053	809659	10	True				
ANR	809705	Statement	iter	4708:40:117055:117058	809659	11	True				
ANR	809706	Statement	","	4708:44:117059:117059	809659	12	True				
ANR	809707	Statement	y	4708:46:117061:117061	809659	13	True				
ANR	809708	Statement	)	4708:47:117062:117062	809659	14	True				
ANR	809709	CompoundStatement		7:49:214:214	809659	15					
ANR	809710	IfStatement	if ( -- n < 0 )		809659	0					
ANR	809711	Condition	-- n < 0	4709:6:117072:117078	809659	0	True				
ANR	809712	RelationalExpression	-- n < 0		809659	0		<			
ANR	809713	UnaryExpression	-- n		809659	0					
ANR	809714	IncDec	--		809659	0					
ANR	809715	Identifier	n		809659	1					
ANR	809716	PrimaryExpression	0		809659	1					
ANR	809717	CompoundStatement		8:15:231:231	809659	1					
ANR	809718	BreakStatement	break ;	4710:3:117086:117091	809659	0	True				
ANR	809719	ExpressionStatement	x = & core -> root_cmd_descriptor	4712:2:117099:117129	809659	1	True				
ANR	809720	AssignmentExpression	x = & core -> root_cmd_descriptor		809659	0		=			
ANR	809721	Identifier	x		809659	0					
ANR	809722	UnaryOperationExpression	& core -> root_cmd_descriptor		809659	1					
ANR	809723	UnaryOperator	&		809659	0					
ANR	809724	PtrMemberAccess	core -> root_cmd_descriptor		809659	1					
ANR	809725	Identifier	core		809659	0					
ANR	809726	Identifier	root_cmd_descriptor		809659	1					
ANR	809727	ForStatement	for ( p = ( const ut8 * ) y -> cmd ; * p ; p ++ )		809659	2					
ANR	809728	ForInit	p = ( const ut8 * ) y -> cmd ;	4713:7:117138:117161	809659	0	True				
ANR	809729	AssignmentExpression	p = ( const ut8 * ) y -> cmd		809659	0		=			
ANR	809730	Identifier	p		809659	0					
ANR	809731	CastExpression	( const ut8 * ) y -> cmd		809659	1					
ANR	809732	CastTarget	const ut8 *		809659	0					
ANR	809733	PtrMemberAccess	y -> cmd		809659	1					
ANR	809734	Identifier	y		809659	0					
ANR	809735	Identifier	cmd		809659	1					
ANR	809736	Condition	* p	4713:32:117163:117164	809659	1	True				
ANR	809737	UnaryOperationExpression	* p		809659	0					
ANR	809738	UnaryOperator	*		809659	0					
ANR	809739	Identifier	p		809659	1					
ANR	809740	PostIncDecOperationExpression	p ++	4713:36:117167:117169	809659	2	True				
ANR	809741	Identifier	p		809659	0					
ANR	809742	IncDec	++		809659	1					
ANR	809743	CompoundStatement		12:41:322:322	809659	3					
ANR	809744	IfStatement	if ( ! x -> sub [ * p ] )		809659	0					
ANR	809745	Condition	! x -> sub [ * p ]	4714:7:117181:117191	809659	0	True				
ANR	809746	UnaryOperationExpression	! x -> sub [ * p ]		809659	0					
ANR	809747	UnaryOperator	!		809659	0					
ANR	809748	ArrayIndexing	x -> sub [ * p ]		809659	1					
ANR	809749	PtrMemberAccess	x -> sub		809659	0					
ANR	809750	Identifier	x		809659	0					
ANR	809751	Identifier	sub		809659	1					
ANR	809752	UnaryOperationExpression	* p		809659	1					
ANR	809753	UnaryOperator	*		809659	0					
ANR	809754	Identifier	p		809659	1					
ANR	809755	CompoundStatement		13:20:344:344	809659	1					
ANR	809756	IfStatement	if ( p [ 1 ] )		809659	0					
ANR	809757	Condition	p [ 1 ]	4715:8:117204:117207	809659	0	True				
ANR	809758	ArrayIndexing	p [ 1 ]		809659	0					
ANR	809759	Identifier	p		809659	0					
ANR	809760	PrimaryExpression	1		809659	1					
ANR	809761	CompoundStatement		15:5:367:410	809659	1					
ANR	809762	IdentifierDeclStatement	RCmdDescriptor * d = R_NEW0 ( RCmdDescriptor ) ;	4716:5:117217:117260	809659	0	True				
ANR	809763	IdentifierDecl	* d = R_NEW0 ( RCmdDescriptor )		809659	0					
ANR	809764	IdentifierDeclType	RCmdDescriptor *		809659	0					
ANR	809765	Identifier	d		809659	1					
ANR	809766	AssignmentExpression	* d = R_NEW0 ( RCmdDescriptor )		809659	2		=			
ANR	809767	Identifier	d		809659	0					
ANR	809768	CallExpression	R_NEW0 ( RCmdDescriptor )		809659	1					
ANR	809769	Callee	R_NEW0		809659	0					
ANR	809770	Identifier	R_NEW0		809659	0					
ANR	809771	ArgumentList	RCmdDescriptor		809659	1					
ANR	809772	Argument	RCmdDescriptor		809659	0					
ANR	809773	Identifier	RCmdDescriptor		809659	0					
ANR	809774	ExpressionStatement	"r_list_append ( core -> cmd_descriptors , d )"	4717:5:117267:117307	809659	1	True				
ANR	809775	CallExpression	"r_list_append ( core -> cmd_descriptors , d )"		809659	0					
ANR	809776	Callee	r_list_append		809659	0					
ANR	809777	Identifier	r_list_append		809659	0					
ANR	809778	ArgumentList	core -> cmd_descriptors		809659	1					
ANR	809779	Argument	core -> cmd_descriptors		809659	0					
ANR	809780	PtrMemberAccess	core -> cmd_descriptors		809659	0					
ANR	809781	Identifier	core		809659	0					
ANR	809782	Identifier	cmd_descriptors		809659	1					
ANR	809783	Argument	d		809659	1					
ANR	809784	Identifier	d		809659	0					
ANR	809785	ExpressionStatement	x -> sub [ * p ] = d	4718:5:117314:117328	809659	2	True				
ANR	809786	AssignmentExpression	x -> sub [ * p ] = d		809659	0		=			
ANR	809787	ArrayIndexing	x -> sub [ * p ]		809659	0					
ANR	809788	PtrMemberAccess	x -> sub		809659	0					
ANR	809789	Identifier	x		809659	0					
ANR	809790	Identifier	sub		809659	1					
ANR	809791	UnaryOperationExpression	* p		809659	1					
ANR	809792	UnaryOperator	*		809659	0					
ANR	809793	Identifier	p		809659	1					
ANR	809794	Identifier	d		809659	1					
ANR	809795	ElseStatement	else		809659	0					
ANR	809796	CompoundStatement		18:11:491:491	809659	0					
ANR	809797	ExpressionStatement	x -> sub [ * p ] = y	4720:5:117348:117362	809659	0	True				
ANR	809798	AssignmentExpression	x -> sub [ * p ] = y		809659	0		=			
ANR	809799	ArrayIndexing	x -> sub [ * p ]		809659	0					
ANR	809800	PtrMemberAccess	x -> sub		809659	0					
ANR	809801	Identifier	x		809659	0					
ANR	809802	Identifier	sub		809659	1					
ANR	809803	UnaryOperationExpression	* p		809659	1					
ANR	809804	UnaryOperator	*		809659	0					
ANR	809805	Identifier	p		809659	1					
ANR	809806	Identifier	y		809659	1					
ANR	809807	ElseStatement	else		809659	0					
ANR	809808	IfStatement	if ( ! p [ 1 ] )		809659	0					
ANR	809809	Condition	! p [ 1 ]	4722:14:117384:117388	809659	0	True				
ANR	809810	UnaryOperationExpression	! p [ 1 ]		809659	0					
ANR	809811	UnaryOperator	!		809659	0					
ANR	809812	ArrayIndexing	p [ 1 ]		809659	1					
ANR	809813	Identifier	p		809659	0					
ANR	809814	PrimaryExpression	1		809659	1					
ANR	809815	CompoundStatement		21:21:541:541	809659	1					
ANR	809816	ExpressionStatement	"eprintf ( ""Command '%s' is duplicated, please check\\n"" , y -> cmd )"	4723:4:117397:117459	809659	0	True				
ANR	809817	CallExpression	"eprintf ( ""Command '%s' is duplicated, please check\\n"" , y -> cmd )"		809659	0					
ANR	809818	Callee	eprintf		809659	0					
ANR	809819	Identifier	eprintf		809659	0					
ANR	809820	ArgumentList	"""Command '%s' is duplicated, please check\\n"""		809659	1					
ANR	809821	Argument	"""Command '%s' is duplicated, please check\\n"""		809659	0					
ANR	809822	PrimaryExpression	"""Command '%s' is duplicated, please check\\n"""		809659	0					
ANR	809823	Argument	y -> cmd		809659	1					
ANR	809824	PtrMemberAccess	y -> cmd		809659	0					
ANR	809825	Identifier	y		809659	0					
ANR	809826	Identifier	cmd		809659	1					
ANR	809827	ExpressionStatement	x = x -> sub [ * p ]	4725:3:117469:117483	809659	1	True				
ANR	809828	AssignmentExpression	x = x -> sub [ * p ]		809659	0		=			
ANR	809829	Identifier	x		809659	0					
ANR	809830	ArrayIndexing	x -> sub [ * p ]		809659	1					
ANR	809831	PtrMemberAccess	x -> sub		809659	0					
ANR	809832	Identifier	x		809659	0					
ANR	809833	Identifier	sub		809659	1					
ANR	809834	UnaryOperationExpression	* p		809659	1					
ANR	809835	UnaryOperator	*		809659	0					
ANR	809836	Identifier	p		809659	1					
ANR	809837	ReturnType	static void		809659	1					
ANR	809838	Identifier	cmd_descriptor_init		809659	2					
ANR	809839	ParameterList	RCore * core		809659	3					
ANR	809840	Parameter	RCore * core	4702:32:116836:116846	809659	0	True				
ANR	809841	ParameterType	RCore *		809659	0					
ANR	809842	Identifier	core		809659	1					
ANR	809843	CFGEntryNode	ENTRY		809659		True				
ANR	809844	CFGExitNode	EXIT		809659		True				
ANR	809845	CFGErrorNode	ERROR		809659		True				
ANR	809846	Symbol	x -> sub		809659						
ANR	809847	Symbol	* x		809659						
ANR	809848	Symbol	* y		809659						
ANR	809849	Symbol	d		809659						
ANR	809850	Symbol	& core -> root_cmd_descriptor		809659						
ANR	809851	Symbol	core -> cmd_descriptors -> length		809659						
ANR	809852	Symbol	* core		809659						
ANR	809853	Symbol	iter		809659						
ANR	809854	Symbol	y -> cmd		809659						
ANR	809855	Symbol	n		809659						
ANR	809856	Symbol	p		809659						
ANR	809857	Symbol	core		809659						
ANR	809858	Symbol	R_NEW0		809659						
ANR	809859	Symbol	* core -> cmd_descriptors		809659						
ANR	809860	Symbol	RCmdDescriptor		809659						
ANR	809861	Symbol	compare_cmd_descriptor_name		809659						
ANR	809862	Symbol	* * x		809659						
ANR	809863	Symbol	x		809659						
ANR	809864	Symbol	y		809659						
ANR	809865	Symbol	core -> cmd_descriptors		809659						
ANR	809866	Symbol	* p		809659						
ANR	809867	Symbol	* * p		809659						
ANR	809868	Symbol	* x -> sub		809659						
ANR	809869	Symbol	* * core		809659						
ANR	809870	Function	core_cmd0_wrapper	4730:0:117495:117597							
ANR	809871	FunctionDef	"core_cmd0_wrapper (void * core , const char * cmd)"		809870	0					
ANR	809872	CompoundStatement		4730:58:117553:117597	809870	0					
ANR	809873	ReturnStatement	"return r_core_cmd0 ( ( RCore * ) core , cmd ) ;"	4731:1:117556:117595	809870	0	True				
ANR	809874	CallExpression	"r_core_cmd0 ( ( RCore * ) core , cmd )"		809870	0					
ANR	809875	Callee	r_core_cmd0		809870	0					
ANR	809876	Identifier	r_core_cmd0		809870	0					
ANR	809877	ArgumentList	( RCore * ) core		809870	1					
ANR	809878	Argument	( RCore * ) core		809870	0					
ANR	809879	CastExpression	( RCore * ) core		809870	0					
ANR	809880	CastTarget	RCore *		809870	0					
ANR	809881	Identifier	core		809870	1					
ANR	809882	Argument	cmd		809870	1					
ANR	809883	Identifier	cmd		809870	0					
ANR	809884	ReturnType	static int		809870	1					
ANR	809885	Identifier	core_cmd0_wrapper		809870	2					
ANR	809886	ParameterList	"void * core , const char * cmd"		809870	3					
ANR	809887	Parameter	void * core	4730:29:117524:117533	809870	0	True				
ANR	809888	ParameterType	void *		809870	0					
ANR	809889	Identifier	core		809870	1					
ANR	809890	Parameter	const char * cmd	4730:41:117536:117550	809870	1	True				
ANR	809891	ParameterType	const char *		809870	0					
ANR	809892	Identifier	cmd		809870	1					
ANR	809893	CFGEntryNode	ENTRY		809870		True				
ANR	809894	CFGExitNode	EXIT		809870		True				
ANR	809895	Symbol	core		809870						
ANR	809896	Symbol	r_core_cmd0		809870						
ANR	809897	Symbol	cmd		809870						
ANR	809898	Function	r_core_cmd_init	4734:0:117600:121418							
ANR	809899	FunctionDef	r_core_cmd_init (RCore * core)		809898	0					
ANR	809900	CompoundStatement		4734:40:117640:121418	809898	0					
ANR	809901	ClassDefStatement	struct { const char * cmd ; const char * description ; r_cmd_callback ( cb ) ; void ( * descriptor_init ) ( RCore * core ) ; }	4735:1:117643:117762	809898	0	True				
ANR	809902	Statement	cmds	4740:3:117764:117767	809898	1	True				
ANR	809903	Statement	[	4740:7:117768:117768	809898	2	True				
ANR	809904	Statement	]	4740:8:117769:117769	809898	3	True				
ANR	809905	Statement	=	4740:10:117771:117771	809898	4	True				
ANR	809906	CompoundStatement		7:12:132:132	809898	5					
ANR	809907	CompoundStatement		8:2:136:136	809898	0					
ANR	809908	Statement	"""!"""	4741:3:117778:117780	809898	0	True				
ANR	809909	Statement	","	4741:6:117781:117781	809898	1	True				
ANR	809910	Statement	"""run system command"""	4741:15:117790:117809	809898	2	True				
ANR	809911	Statement	","	4741:35:117810:117810	809898	3	True				
ANR	809912	Statement	cmd_system	4741:37:117812:117821	809898	4	True				
ANR	809913	Statement	","	4741:48:117823:117823	809898	1	True				
ANR	809914	CompoundStatement		9:2:186:186	809898	2					
ANR	809915	Statement	"""_"""	4742:3:117828:117830	809898	0	True				
ANR	809916	Statement	","	4742:6:117831:117831	809898	1	True				
ANR	809917	Statement	"""print last output"""	4742:15:117840:117858	809898	2	True				
ANR	809918	Statement	","	4742:34:117859:117859	809898	3	True				
ANR	809919	Statement	cmd_last	4742:36:117861:117868	809898	4	True				
ANR	809920	Statement	","	4742:45:117870:117870	809898	3	True				
ANR	809921	CompoundStatement		10:2:233:233	809898	4					
ANR	809922	Statement	"""#"""	4743:3:117875:117877	809898	0	True				
ANR	809923	Statement	","	4743:6:117878:117878	809898	1	True				
ANR	809924	Statement	"""calculate hash"""	4743:15:117887:117902	809898	2	True				
ANR	809925	Statement	","	4743:31:117903:117903	809898	3	True				
ANR	809926	Statement	cmd_hash	4743:33:117905:117912	809898	4	True				
ANR	809927	Statement	","	4743:42:117914:117914	809898	5	True				
ANR	809928	CompoundStatement		11:2:277:277	809898	6					
ANR	809929	Statement	"""$"""	4744:3:117919:117921	809898	0	True				
ANR	809930	Statement	","	4744:6:117922:117922	809898	1	True				
ANR	809931	Statement	"""alias"""	4744:15:117931:117937	809898	2	True				
ANR	809932	Statement	","	4744:22:117938:117938	809898	3	True				
ANR	809933	Statement	cmd_alias	4744:24:117940:117948	809898	4	True				
ANR	809934	Statement	","	4744:34:117950:117950	809898	7	True				
ANR	809935	CompoundStatement		12:2:313:313	809898	8					
ANR	809936	Statement	"""%"""	4745:3:117955:117957	809898	0	True				
ANR	809937	Statement	","	4745:6:117958:117958	809898	1	True				
ANR	809938	Statement	"""short version of 'env' command"""	4745:15:117967:117998	809898	2	True				
ANR	809939	Statement	","	4745:47:117999:117999	809898	3	True				
ANR	809940	Statement	cmd_env	4745:49:118001:118007	809898	4	True				
ANR	809941	Statement	","	4745:57:118009:118009	809898	9	True				
ANR	809942	CompoundStatement		13:2:372:372	809898	10					
ANR	809943	Statement	"""&"""	4746:3:118014:118016	809898	0	True				
ANR	809944	Statement	","	4746:6:118017:118017	809898	1	True				
ANR	809945	Statement	"""tasks"""	4746:15:118026:118032	809898	2	True				
ANR	809946	Statement	","	4746:22:118033:118033	809898	3	True				
ANR	809947	Statement	cmd_tasks	4746:24:118035:118043	809898	4	True				
ANR	809948	Statement	","	4746:34:118045:118045	809898	11	True				
ANR	809949	CompoundStatement		14:2:408:408	809898	12					
ANR	809950	Statement	"""("""	4747:3:118050:118052	809898	0	True				
ANR	809951	Statement	","	4747:6:118053:118053	809898	1	True				
ANR	809952	Statement	"""macro"""	4747:15:118062:118068	809898	2	True				
ANR	809953	Statement	","	4747:22:118069:118069	809898	3	True				
ANR	809954	Statement	cmd_macro	4747:24:118071:118079	809898	4	True				
ANR	809955	Statement	","	4747:33:118080:118080	809898	5	True				
ANR	809956	Statement	cmd_macro_init	4747:35:118082:118095	809898	6	True				
ANR	809957	Statement	","	4747:50:118097:118097	809898	13	True				
ANR	809958	CompoundStatement		15:2:460:460	809898	14					
ANR	809959	Statement	"""*"""	4748:3:118102:118104	809898	0	True				
ANR	809960	Statement	","	4748:6:118105:118105	809898	1	True				
ANR	809961	Statement	"""pointer read/write"""	4748:15:118114:118133	809898	2	True				
ANR	809962	Statement	","	4748:35:118134:118134	809898	3	True				
ANR	809963	Statement	cmd_pointer	4748:37:118136:118146	809898	4	True				
ANR	809964	Statement	","	4748:49:118148:118148	809898	15	True				
ANR	809965	CompoundStatement		16:2:511:511	809898	16					
ANR	809966	Statement	"""-"""	4749:3:118153:118155	809898	0	True				
ANR	809967	Statement	","	4749:6:118156:118156	809898	1	True				
ANR	809968	Statement	"""open cfg.editor and run script"""	4749:15:118165:118196	809898	2	True				
ANR	809969	Statement	","	4749:47:118197:118197	809898	3	True				
ANR	809970	Statement	cmd_stdin	4749:49:118199:118207	809898	4	True				
ANR	809971	Statement	","	4749:59:118209:118209	809898	17	True				
ANR	809972	CompoundStatement		17:2:572:572	809898	18					
ANR	809973	Statement	"""."""	4750:3:118214:118216	809898	0	True				
ANR	809974	Statement	","	4750:6:118217:118217	809898	1	True				
ANR	809975	Statement	"""interpret"""	4750:15:118226:118236	809898	2	True				
ANR	809976	Statement	","	4750:26:118237:118237	809898	3	True				
ANR	809977	Statement	cmd_interpret	4750:28:118239:118251	809898	4	True				
ANR	809978	Statement	","	4750:42:118253:118253	809898	19	True				
ANR	809979	CompoundStatement		18:2:616:616	809898	20					
ANR	809980	Statement	"""/"""	4751:3:118258:118260	809898	0	True				
ANR	809981	Statement	","	4751:6:118261:118261	809898	1	True				
ANR	809982	Statement	"""search kw, pattern aes"""	4751:15:118270:118293	809898	2	True				
ANR	809983	Statement	","	4751:39:118294:118294	809898	3	True				
ANR	809984	Statement	cmd_search	4751:41:118296:118305	809898	4	True				
ANR	809985	Statement	","	4751:51:118306:118306	809898	5	True				
ANR	809986	Statement	cmd_search_init	4751:53:118308:118322	809898	6	True				
ANR	809987	Statement	","	4751:69:118324:118324	809898	21	True				
ANR	809988	CompoundStatement		19:2:687:687	809898	22					
ANR	809989	Statement	"""="""	4752:3:118329:118331	809898	0	True				
ANR	809990	Statement	","	4752:6:118332:118332	809898	1	True				
ANR	809991	Statement	"""io pipe"""	4752:15:118341:118349	809898	2	True				
ANR	809992	Statement	","	4752:24:118350:118350	809898	3	True				
ANR	809993	Statement	cmd_rap	4752:26:118352:118358	809898	4	True				
ANR	809994	Statement	","	4752:34:118360:118360	809898	23	True				
ANR	809995	CompoundStatement		20:2:723:723	809898	24					
ANR	809996	Statement	"""?"""	4753:3:118365:118367	809898	0	True				
ANR	809997	Statement	","	4753:6:118368:118368	809898	1	True				
ANR	809998	Statement	"""help message"""	4753:15:118377:118390	809898	2	True				
ANR	809999	Statement	","	4753:29:118391:118391	809898	3	True				
ANR	810000	Statement	cmd_help	4753:31:118393:118400	809898	4	True				
ANR	810001	Statement	","	4753:39:118401:118401	809898	5	True				
ANR	810002	Statement	cmd_help_init	4753:41:118403:118415	809898	6	True				
ANR	810003	Statement	","	4753:55:118417:118417	809898	25	True				
ANR	810004	CompoundStatement		21:2:780:780	809898	26					
ANR	810005	Statement	"""\\\\"""	4754:3:118422:118425	809898	0	True				
ANR	810006	Statement	","	4754:7:118426:118426	809898	1	True				
ANR	810007	Statement	"""alias for =!"""	4754:15:118434:118447	809898	2	True				
ANR	810008	Statement	","	4754:29:118448:118448	809898	3	True				
ANR	810009	Statement	cmd_rap_run	4754:31:118450:118460	809898	4	True				
ANR	810010	Statement	","	4754:43:118462:118462	809898	27	True				
ANR	810011	CompoundStatement		22:2:825:825	809898	28					
ANR	810012	Statement	"""'"""	4755:3:118467:118469	809898	0	True				
ANR	810013	Statement	","	4755:6:118470:118470	809898	1	True				
ANR	810014	Statement	"""alias for =!"""	4755:15:118479:118492	809898	2	True				
ANR	810015	Statement	","	4755:29:118493:118493	809898	3	True				
ANR	810016	Statement	cmd_rap_run	4755:31:118495:118505	809898	4	True				
ANR	810017	Statement	","	4755:43:118507:118507	809898	29	True				
ANR	810018	CompoundStatement		23:2:870:870	809898	30					
ANR	810019	Statement	"""0x"""	4756:3:118512:118515	809898	0	True				
ANR	810020	Statement	","	4756:7:118516:118516	809898	1	True				
ANR	810021	Statement	"""alias for s 0x"""	4756:15:118524:118539	809898	2	True				
ANR	810022	Statement	","	4756:31:118540:118540	809898	3	True				
ANR	810023	Statement	cmd_ox	4756:33:118542:118547	809898	4	True				
ANR	810024	Statement	","	4756:40:118549:118549	809898	31	True				
ANR	810025	CompoundStatement		24:2:912:912	809898	32					
ANR	810026	Statement	"""analysis"""	4757:3:118554:118563	809898	0	True				
ANR	810027	Statement	","	4757:13:118564:118564	809898	1	True				
ANR	810028	Statement	"""analysis"""	4757:15:118566:118575	809898	2	True				
ANR	810029	Statement	","	4757:25:118576:118576	809898	3	True				
ANR	810030	Statement	cmd_anal	4757:27:118578:118585	809898	4	True				
ANR	810031	Statement	","	4757:35:118586:118586	809898	5	True				
ANR	810032	Statement	cmd_anal_init	4757:37:118588:118600	809898	6	True				
ANR	810033	Statement	","	4757:51:118602:118602	809898	33	True				
ANR	810034	CompoundStatement		25:2:965:965	809898	34					
ANR	810035	Statement	"""bsize"""	4758:3:118607:118613	809898	0	True				
ANR	810036	Statement	","	4758:10:118614:118614	809898	1	True				
ANR	810037	Statement	"""change block size"""	4758:15:118619:118637	809898	2	True				
ANR	810038	Statement	","	4758:34:118638:118638	809898	3	True				
ANR	810039	Statement	cmd_bsize	4758:36:118640:118648	809898	4	True				
ANR	810040	Statement	","	4758:46:118650:118650	809898	35	True				
ANR	810041	CompoundStatement		26:2:1013:1013	809898	36					
ANR	810042	Statement	"""cmp"""	4759:3:118655:118659	809898	0	True				
ANR	810043	Statement	","	4759:8:118660:118660	809898	1	True				
ANR	810044	Statement	"""compare memory"""	4759:15:118667:118682	809898	2	True				
ANR	810045	Statement	","	4759:31:118683:118683	809898	3	True				
ANR	810046	Statement	cmd_cmp	4759:33:118685:118691	809898	4	True				
ANR	810047	Statement	","	4759:40:118692:118692	809898	5	True				
ANR	810048	Statement	cmd_cmp_init	4759:42:118694:118705	809898	6	True				
ANR	810049	Statement	","	4759:55:118707:118707	809898	37	True				
ANR	810050	CompoundStatement		27:2:1070:1070	809898	38					
ANR	810051	Statement	"""Code"""	4760:3:118712:118717	809898	0	True				
ANR	810052	Statement	","	4760:9:118718:118718	809898	1	True				
ANR	810053	Statement	"""code metadata"""	4760:15:118724:118738	809898	2	True				
ANR	810054	Statement	","	4760:30:118739:118739	809898	3	True				
ANR	810055	Statement	cmd_meta	4760:32:118741:118748	809898	4	True				
ANR	810056	Statement	","	4760:40:118749:118749	809898	5	True				
ANR	810057	Statement	cmd_meta_init	4760:42:118751:118763	809898	6	True				
ANR	810058	Statement	","	4760:56:118765:118765	809898	39	True				
ANR	810059	CompoundStatement		28:2:1128:1128	809898	40					
ANR	810060	Statement	"""debug"""	4761:3:118770:118776	809898	0	True				
ANR	810061	Statement	","	4761:10:118777:118777	809898	1	True				
ANR	810062	Statement	"""debugger operations"""	4761:15:118782:118802	809898	2	True				
ANR	810063	Statement	","	4761:36:118803:118803	809898	3	True				
ANR	810064	Statement	cmd_debug	4761:38:118805:118813	809898	4	True				
ANR	810065	Statement	","	4761:47:118814:118814	809898	5	True				
ANR	810066	Statement	cmd_debug_init	4761:49:118816:118829	809898	6	True				
ANR	810067	Statement	","	4761:64:118831:118831	809898	41	True				
ANR	810068	CompoundStatement		29:2:1194:1194	809898	42					
ANR	810069	Statement	"""eval"""	4762:3:118836:118841	809898	0	True				
ANR	810070	Statement	","	4762:9:118842:118842	809898	1	True				
ANR	810071	Statement	"""evaluate configuration variable"""	4762:15:118848:118880	809898	2	True				
ANR	810072	Statement	","	4762:48:118881:118881	809898	3	True				
ANR	810073	Statement	cmd_eval	4762:50:118883:118890	809898	4	True				
ANR	810074	Statement	","	4762:58:118891:118891	809898	5	True				
ANR	810075	Statement	cmd_eval_init	4762:60:118893:118905	809898	6	True				
ANR	810076	Statement	","	4762:74:118907:118907	809898	43	True				
ANR	810077	CompoundStatement		30:2:1270:1270	809898	44					
ANR	810078	Statement	"""flag"""	4763:3:118912:118917	809898	0	True				
ANR	810079	Statement	","	4763:9:118918:118918	809898	1	True				
ANR	810080	Statement	"""get/set flags"""	4763:15:118924:118938	809898	2	True				
ANR	810081	Statement	","	4763:30:118939:118939	809898	3	True				
ANR	810082	Statement	cmd_flag	4763:32:118941:118948	809898	4	True				
ANR	810083	Statement	","	4763:40:118949:118949	809898	5	True				
ANR	810084	Statement	cmd_flag_init	4763:42:118951:118963	809898	6	True				
ANR	810085	Statement	","	4763:56:118965:118965	809898	45	True				
ANR	810086	CompoundStatement		31:2:1328:1328	809898	46					
ANR	810087	Statement	"""g"""	4764:3:118970:118972	809898	0	True				
ANR	810088	Statement	","	4764:6:118973:118973	809898	1	True				
ANR	810089	Statement	"""egg manipulation"""	4764:15:118982:118999	809898	2	True				
ANR	810090	Statement	","	4764:33:119000:119000	809898	3	True				
ANR	810091	Statement	cmd_egg	4764:35:119002:119008	809898	4	True				
ANR	810092	Statement	","	4764:42:119009:119009	809898	5	True				
ANR	810093	Statement	cmd_egg_init	4764:44:119011:119022	809898	6	True				
ANR	810094	Statement	","	4764:57:119024:119024	809898	47	True				
ANR	810095	CompoundStatement		32:2:1387:1387	809898	48					
ANR	810096	Statement	"""info"""	4765:3:119029:119034	809898	0	True				
ANR	810097	Statement	","	4765:9:119035:119035	809898	1	True				
ANR	810098	Statement	"""get file info"""	4765:15:119041:119055	809898	2	True				
ANR	810099	Statement	","	4765:30:119056:119056	809898	3	True				
ANR	810100	Statement	cmd_info	4765:32:119058:119065	809898	4	True				
ANR	810101	Statement	","	4765:40:119066:119066	809898	5	True				
ANR	810102	Statement	cmd_info_init	4765:42:119068:119080	809898	6	True				
ANR	810103	Statement	","	4765:56:119082:119082	809898	49	True				
ANR	810104	CompoundStatement		33:2:1445:1445	809898	50					
ANR	810105	Statement	"""kuery"""	4766:3:119087:119093	809898	0	True				
ANR	810106	Statement	","	4766:10:119094:119094	809898	1	True				
ANR	810107	Statement	"""perform sdb query"""	4766:15:119099:119117	809898	2	True				
ANR	810108	Statement	","	4766:34:119118:119118	809898	3	True				
ANR	810109	Statement	cmd_kuery	4766:36:119120:119128	809898	4	True				
ANR	810110	Statement	","	4766:46:119130:119130	809898	51	True				
ANR	810111	CompoundStatement		34:2:1493:1493	809898	52					
ANR	810112	Statement	"""l"""	4767:3:119135:119137	809898	0	True				
ANR	810113	Statement	","	4767:6:119138:119138	809898	1	True				
ANR	810114	Statement	"""list files and directories"""	4767:14:119146:119173	809898	2	True				
ANR	810115	Statement	","	4767:42:119174:119174	809898	3	True				
ANR	810116	Statement	cmd_ls	4767:44:119176:119181	809898	4	True				
ANR	810117	Statement	","	4767:51:119183:119183	809898	53	True				
ANR	810118	CompoundStatement		35:2:1546:1546	809898	54					
ANR	810119	Statement	"""join"""	4768:3:119188:119193	809898	0	True				
ANR	810120	Statement	","	4768:9:119194:119194	809898	1	True				
ANR	810121	Statement	"""join the contents of the two files"""	4768:14:119199:119234	809898	2	True				
ANR	810122	Statement	","	4768:50:119235:119235	809898	3	True				
ANR	810123	Statement	cmd_join	4768:52:119237:119244	809898	4	True				
ANR	810124	Statement	","	4768:61:119246:119246	809898	55	True				
ANR	810125	CompoundStatement		36:2:1609:1609	809898	56					
ANR	810126	Statement	"""head"""	4769:3:119251:119256	809898	0	True				
ANR	810127	Statement	","	4769:9:119257:119257	809898	1	True				
ANR	810128	Statement	"""show the top n number of line in file"""	4769:14:119262:119300	809898	2	True				
ANR	810129	Statement	","	4769:53:119301:119301	809898	3	True				
ANR	810130	Statement	cmd_head	4769:55:119303:119310	809898	4	True				
ANR	810131	Statement	","	4769:64:119312:119312	809898	57	True				
ANR	810132	CompoundStatement		37:2:1675:1675	809898	58					
ANR	810133	Statement	"""L"""	4770:3:119317:119319	809898	0	True				
ANR	810134	Statement	","	4770:6:119320:119320	809898	1	True				
ANR	810135	Statement	"""manage dynamically loaded plugins"""	4770:15:119329:119363	809898	2	True				
ANR	810136	Statement	","	4770:50:119364:119364	809898	3	True				
ANR	810137	Statement	cmd_plugins	4770:52:119366:119376	809898	4	True				
ANR	810138	Statement	","	4770:64:119378:119378	809898	59	True				
ANR	810139	CompoundStatement		38:2:1741:1741	809898	60					
ANR	810140	Statement	"""mount"""	4771:3:119383:119389	809898	0	True				
ANR	810141	Statement	","	4771:10:119390:119390	809898	1	True				
ANR	810142	Statement	"""mount filesystem"""	4771:15:119395:119412	809898	2	True				
ANR	810143	Statement	","	4771:33:119413:119413	809898	3	True				
ANR	810144	Statement	cmd_mount	4771:35:119415:119423	809898	4	True				
ANR	810145	Statement	","	4771:44:119424:119424	809898	5	True				
ANR	810146	Statement	cmd_mount_init	4771:46:119426:119439	809898	6	True				
ANR	810147	Statement	","	4771:61:119441:119441	809898	61	True				
ANR	810148	CompoundStatement		39:2:1804:1804	809898	62					
ANR	810149	Statement	"""open"""	4772:3:119446:119451	809898	0	True				
ANR	810150	Statement	","	4772:9:119452:119452	809898	1	True				
ANR	810151	Statement	"""open or map file"""	4772:15:119458:119475	809898	2	True				
ANR	810152	Statement	","	4772:33:119476:119476	809898	3	True				
ANR	810153	Statement	cmd_open	4772:35:119478:119485	809898	4	True				
ANR	810154	Statement	","	4772:43:119486:119486	809898	5	True				
ANR	810155	Statement	cmd_open_init	4772:45:119488:119500	809898	6	True				
ANR	810156	Statement	","	4772:59:119502:119502	809898	63	True				
ANR	810157	CompoundStatement		40:2:1865:1865	809898	64					
ANR	810158	Statement	"""print"""	4773:3:119507:119513	809898	0	True				
ANR	810159	Statement	","	4773:10:119514:119514	809898	1	True				
ANR	810160	Statement	"""print current block"""	4773:15:119519:119539	809898	2	True				
ANR	810161	Statement	","	4773:36:119540:119540	809898	3	True				
ANR	810162	Statement	cmd_print	4773:38:119542:119550	809898	4	True				
ANR	810163	Statement	","	4773:47:119551:119551	809898	5	True				
ANR	810164	Statement	cmd_print_init	4773:49:119553:119566	809898	6	True				
ANR	810165	Statement	","	4773:64:119568:119568	809898	65	True				
ANR	810166	CompoundStatement		41:2:1931:1931	809898	66					
ANR	810167	Statement	"""Project"""	4774:3:119573:119581	809898	0	True				
ANR	810168	Statement	","	4774:12:119582:119582	809898	1	True				
ANR	810169	Statement	"""project"""	4774:15:119585:119593	809898	2	True				
ANR	810170	Statement	","	4774:24:119594:119594	809898	3	True				
ANR	810171	Statement	cmd_project	4774:26:119596:119606	809898	4	True				
ANR	810172	Statement	","	4774:37:119607:119607	809898	5	True				
ANR	810173	Statement	cmd_project_init	4774:39:119609:119624	809898	6	True				
ANR	810174	Statement	","	4774:56:119626:119626	809898	67	True				
ANR	810175	CompoundStatement		42:2:1989:1989	809898	68					
ANR	810176	Statement	"""quit"""	4775:3:119631:119636	809898	0	True				
ANR	810177	Statement	","	4775:9:119637:119637	809898	1	True				
ANR	810178	Statement	"""exit program session"""	4775:15:119643:119664	809898	2	True				
ANR	810179	Statement	","	4775:37:119665:119665	809898	3	True				
ANR	810180	Statement	cmd_quit	4775:39:119667:119674	809898	4	True				
ANR	810181	Statement	","	4775:47:119675:119675	809898	5	True				
ANR	810182	Statement	cmd_quit_init	4775:49:119677:119689	809898	6	True				
ANR	810183	Statement	","	4775:63:119691:119691	809898	69	True				
ANR	810184	CompoundStatement		43:2:2054:2054	809898	70					
ANR	810185	Statement	"""Q"""	4776:3:119696:119698	809898	0	True				
ANR	810186	Statement	","	4776:6:119699:119699	809898	1	True				
ANR	810187	Statement	"""alias for q!"""	4776:15:119708:119721	809898	2	True				
ANR	810188	Statement	","	4776:29:119722:119722	809898	3	True				
ANR	810189	Statement	cmd_Quit	4776:31:119724:119731	809898	4	True				
ANR	810190	Statement	","	4776:40:119733:119733	809898	71	True				
ANR	810191	CompoundStatement		44:2:2096:2096	809898	72					
ANR	810192	Statement	""":"""	4777:3:119738:119740	809898	0	True				
ANR	810193	Statement	","	4777:6:119741:119741	809898	1	True				
ANR	810194	Statement	"""long commands starting with :"""	4777:15:119750:119780	809898	2	True				
ANR	810195	Statement	","	4777:46:119781:119781	809898	3	True				
ANR	810196	Statement	cmd_colon	4777:48:119783:119791	809898	4	True				
ANR	810197	Statement	","	4777:58:119793:119793	809898	73	True				
ANR	810198	CompoundStatement		45:2:2156:2156	809898	74					
ANR	810199	Statement	"""resize"""	4778:3:119798:119805	809898	0	True				
ANR	810200	Statement	","	4778:11:119806:119806	809898	1	True				
ANR	810201	Statement	"""change file size"""	4778:15:119810:119827	809898	2	True				
ANR	810202	Statement	","	4778:33:119828:119828	809898	3	True				
ANR	810203	Statement	cmd_resize	4778:35:119830:119839	809898	4	True				
ANR	810204	Statement	","	4778:46:119841:119841	809898	75	True				
ANR	810205	CompoundStatement		46:2:2204:2204	809898	76					
ANR	810206	Statement	"""seek"""	4779:3:119846:119851	809898	0	True				
ANR	810207	Statement	","	4779:9:119852:119852	809898	1	True				
ANR	810208	Statement	"""seek to an offset"""	4779:15:119858:119876	809898	2	True				
ANR	810209	Statement	","	4779:34:119877:119877	809898	3	True				
ANR	810210	Statement	cmd_seek	4779:36:119879:119886	809898	4	True				
ANR	810211	Statement	","	4779:44:119887:119887	809898	5	True				
ANR	810212	Statement	cmd_seek_init	4779:46:119889:119901	809898	6	True				
ANR	810213	Statement	","	4779:60:119903:119903	809898	77	True				
ANR	810214	CompoundStatement		47:2:2266:2266	809898	78					
ANR	810215	Statement	"""t"""	4780:3:119908:119910	809898	0	True				
ANR	810216	Statement	","	4780:6:119911:119911	809898	1	True				
ANR	810217	Statement	"""type information (cparse)"""	4780:15:119920:119946	809898	2	True				
ANR	810218	Statement	","	4780:42:119947:119947	809898	3	True				
ANR	810219	Statement	cmd_type	4780:44:119949:119956	809898	4	True				
ANR	810220	Statement	","	4780:52:119957:119957	809898	5	True				
ANR	810221	Statement	cmd_type_init	4780:54:119959:119971	809898	6	True				
ANR	810222	Statement	","	4780:68:119973:119973	809898	79	True				
ANR	810223	CompoundStatement		48:2:2336:2336	809898	80					
ANR	810224	Statement	"""Text"""	4781:3:119978:119983	809898	0	True				
ANR	810225	Statement	","	4781:9:119984:119984	809898	1	True				
ANR	810226	Statement	"""Text log utility"""	4781:15:119990:120007	809898	2	True				
ANR	810227	Statement	","	4781:33:120008:120008	809898	3	True				
ANR	810228	Statement	cmd_log	4781:35:120010:120016	809898	4	True				
ANR	810229	Statement	","	4781:42:120017:120017	809898	5	True				
ANR	810230	Statement	cmd_log_init	4781:44:120019:120030	809898	6	True				
ANR	810231	Statement	","	4781:57:120032:120032	809898	81	True				
ANR	810232	CompoundStatement		49:2:2395:2395	809898	82					
ANR	810233	Statement	"""u"""	4782:3:120037:120039	809898	0	True				
ANR	810234	Statement	","	4782:6:120040:120040	809898	1	True				
ANR	810235	Statement	"""uname/undo"""	4782:15:120049:120060	809898	2	True				
ANR	810236	Statement	","	4782:27:120061:120061	809898	3	True				
ANR	810237	Statement	cmd_uname	4782:29:120063:120071	809898	4	True				
ANR	810238	Statement	","	4782:39:120073:120073	809898	83	True				
ANR	810239	CompoundStatement		50:2:2436:2436	809898	84					
ANR	810240	Statement	"""<"""	4783:3:120078:120080	809898	0	True				
ANR	810241	Statement	","	4783:6:120081:120081	809898	1	True				
ANR	810242	Statement	"""pipe into RCons.readChar"""	4783:15:120090:120115	809898	2	True				
ANR	810243	Statement	","	4783:41:120116:120116	809898	3	True				
ANR	810244	Statement	cmd_pipein	4783:43:120118:120127	809898	4	True				
ANR	810245	Statement	","	4783:54:120129:120129	809898	85	True				
ANR	810246	CompoundStatement		51:2:2492:2492	809898	86					
ANR	810247	Statement	"""Visual"""	4784:3:120134:120141	809898	0	True				
ANR	810248	Statement	","	4784:11:120142:120142	809898	1	True				
ANR	810249	Statement	"""enter visual mode"""	4784:15:120146:120164	809898	2	True				
ANR	810250	Statement	","	4784:34:120165:120165	809898	3	True				
ANR	810251	Statement	cmd_visual	4784:36:120167:120176	809898	4	True				
ANR	810252	Statement	","	4784:47:120178:120178	809898	87	True				
ANR	810253	CompoundStatement		52:2:2541:2541	809898	88					
ANR	810254	Statement	"""visualPanels"""	4785:3:120183:120196	809898	0	True				
ANR	810255	Statement	","	4785:17:120197:120197	809898	1	True				
ANR	810256	Statement	"""enter visual mode"""	4785:21:120201:120219	809898	2	True				
ANR	810257	Statement	","	4785:40:120220:120220	809898	3	True				
ANR	810258	Statement	cmd_panels	4785:42:120222:120231	809898	4	True				
ANR	810259	Statement	","	4785:53:120233:120233	809898	89	True				
ANR	810260	CompoundStatement		53:2:2596:2596	809898	90					
ANR	810261	Statement	"""write"""	4786:3:120238:120244	809898	0	True				
ANR	810262	Statement	","	4786:10:120245:120245	809898	1	True				
ANR	810263	Statement	"""write bytes"""	4786:15:120250:120262	809898	2	True				
ANR	810264	Statement	","	4786:28:120263:120263	809898	3	True				
ANR	810265	Statement	cmd_write	4786:30:120265:120273	809898	4	True				
ANR	810266	Statement	","	4786:39:120274:120274	809898	5	True				
ANR	810267	Statement	cmd_write_init	4786:41:120276:120289	809898	6	True				
ANR	810268	Statement	","	4786:56:120291:120291	809898	91	True				
ANR	810269	CompoundStatement		54:2:2654:2654	809898	92					
ANR	810270	Statement	"""x"""	4787:3:120296:120298	809898	0	True				
ANR	810271	Statement	","	4787:6:120299:120299	809898	1	True				
ANR	810272	Statement	"""alias for px"""	4787:15:120308:120321	809898	2	True				
ANR	810273	Statement	","	4787:29:120322:120322	809898	3	True				
ANR	810274	Statement	cmd_hexdump	4787:31:120324:120334	809898	4	True				
ANR	810275	Statement	","	4787:43:120336:120336	809898	93	True				
ANR	810276	CompoundStatement		55:2:2699:2699	809898	94					
ANR	810277	Statement	"""yank"""	4788:3:120341:120346	809898	0	True				
ANR	810278	Statement	","	4788:9:120347:120347	809898	1	True				
ANR	810279	Statement	"""yank bytes"""	4788:15:120353:120364	809898	2	True				
ANR	810280	Statement	","	4788:27:120365:120365	809898	3	True				
ANR	810281	Statement	cmd_yank	4788:29:120367:120374	809898	4	True				
ANR	810282	Statement	","	4788:38:120376:120376	809898	95	True				
ANR	810283	CompoundStatement		56:2:2739:2739	809898	96					
ANR	810284	Statement	"""zign"""	4789:3:120381:120386	809898	0	True				
ANR	810285	Statement	","	4789:9:120387:120387	809898	1	True				
ANR	810286	Statement	"""zignatures"""	4789:15:120393:120404	809898	2	True				
ANR	810287	Statement	","	4789:27:120405:120405	809898	3	True				
ANR	810288	Statement	cmd_zign	4789:29:120407:120414	809898	4	True				
ANR	810289	Statement	","	4789:37:120415:120415	809898	5	True				
ANR	810290	Statement	cmd_zign_init	4789:39:120417:120429	809898	6	True				
ANR	810291	Statement	","	4789:53:120431:120431	809898	97	True				
ANR	810292	ExpressionStatement		4790:2:120435:120435	809898	6	True				
ANR	810293	ExpressionStatement	core -> rcmd = r_cmd_new ( )	4792:1:120439:120464	809898	7	True				
ANR	810294	AssignmentExpression	core -> rcmd = r_cmd_new ( )		809898	0		=			
ANR	810295	PtrMemberAccess	core -> rcmd		809898	0					
ANR	810296	Identifier	core		809898	0					
ANR	810297	Identifier	rcmd		809898	1					
ANR	810298	CallExpression	r_cmd_new ( )		809898	1					
ANR	810299	Callee	r_cmd_new		809898	0					
ANR	810300	Identifier	r_cmd_new		809898	0					
ANR	810301	ArgumentList			809898	1					
ANR	810302	ExpressionStatement	core -> rcmd -> macro . user = core	4793:1:120467:120496	809898	8	True				
ANR	810303	AssignmentExpression	core -> rcmd -> macro . user = core		809898	0		=			
ANR	810304	MemberAccess	core -> rcmd -> macro . user		809898	0					
ANR	810305	PtrMemberAccess	core -> rcmd -> macro		809898	0					
ANR	810306	PtrMemberAccess	core -> rcmd		809898	0					
ANR	810307	Identifier	core		809898	0					
ANR	810308	Identifier	rcmd		809898	1					
ANR	810309	Identifier	macro		809898	1					
ANR	810310	Identifier	user		809898	1					
ANR	810311	Identifier	core		809898	1					
ANR	810312	ExpressionStatement	core -> rcmd -> macro . num = core -> num	4794:1:120499:120532	809898	9	True				
ANR	810313	AssignmentExpression	core -> rcmd -> macro . num = core -> num		809898	0		=			
ANR	810314	MemberAccess	core -> rcmd -> macro . num		809898	0					
ANR	810315	PtrMemberAccess	core -> rcmd -> macro		809898	0					
ANR	810316	PtrMemberAccess	core -> rcmd		809898	0					
ANR	810317	Identifier	core		809898	0					
ANR	810318	Identifier	rcmd		809898	1					
ANR	810319	Identifier	macro		809898	1					
ANR	810320	Identifier	num		809898	1					
ANR	810321	PtrMemberAccess	core -> num		809898	1					
ANR	810322	Identifier	core		809898	0					
ANR	810323	Identifier	num		809898	1					
ANR	810324	ExpressionStatement	core -> rcmd -> macro . cmd = core_cmd0_wrapper	4795:1:120535:120576	809898	10	True				
ANR	810325	AssignmentExpression	core -> rcmd -> macro . cmd = core_cmd0_wrapper		809898	0		=			
ANR	810326	MemberAccess	core -> rcmd -> macro . cmd		809898	0					
ANR	810327	PtrMemberAccess	core -> rcmd -> macro		809898	0					
ANR	810328	PtrMemberAccess	core -> rcmd		809898	0					
ANR	810329	Identifier	core		809898	0					
ANR	810330	Identifier	rcmd		809898	1					
ANR	810331	Identifier	macro		809898	1					
ANR	810332	Identifier	cmd		809898	1					
ANR	810333	Identifier	core_cmd0_wrapper		809898	1					
ANR	810334	ExpressionStatement	core -> rcmd -> nullcallback = r_core_cmd_nullcallback	4796:1:120579:120629	809898	11	True				
ANR	810335	AssignmentExpression	core -> rcmd -> nullcallback = r_core_cmd_nullcallback		809898	0		=			
ANR	810336	PtrMemberAccess	core -> rcmd -> nullcallback		809898	0					
ANR	810337	PtrMemberAccess	core -> rcmd		809898	0					
ANR	810338	Identifier	core		809898	0					
ANR	810339	Identifier	rcmd		809898	1					
ANR	810340	Identifier	nullcallback		809898	1					
ANR	810341	Identifier	r_core_cmd_nullcallback		809898	1					
ANR	810342	ExpressionStatement	core -> rcmd -> macro . cb_printf = ( PrintfCallback ) r_cons_printf	4797:1:120632:120691	809898	12	True				
ANR	810343	AssignmentExpression	core -> rcmd -> macro . cb_printf = ( PrintfCallback ) r_cons_printf		809898	0		=			
ANR	810344	MemberAccess	core -> rcmd -> macro . cb_printf		809898	0					
ANR	810345	PtrMemberAccess	core -> rcmd -> macro		809898	0					
ANR	810346	PtrMemberAccess	core -> rcmd		809898	0					
ANR	810347	Identifier	core		809898	0					
ANR	810348	Identifier	rcmd		809898	1					
ANR	810349	Identifier	macro		809898	1					
ANR	810350	Identifier	cb_printf		809898	1					
ANR	810351	CastExpression	( PrintfCallback ) r_cons_printf		809898	1					
ANR	810352	CastTarget	PrintfCallback		809898	0					
ANR	810353	Identifier	r_cons_printf		809898	1					
ANR	810354	ExpressionStatement	"r_cmd_set_data ( core -> rcmd , core )"	4798:1:120694:120727	809898	13	True				
ANR	810355	CallExpression	"r_cmd_set_data ( core -> rcmd , core )"		809898	0					
ANR	810356	Callee	r_cmd_set_data		809898	0					
ANR	810357	Identifier	r_cmd_set_data		809898	0					
ANR	810358	ArgumentList	core -> rcmd		809898	1					
ANR	810359	Argument	core -> rcmd		809898	0					
ANR	810360	PtrMemberAccess	core -> rcmd		809898	0					
ANR	810361	Identifier	core		809898	0					
ANR	810362	Identifier	rcmd		809898	1					
ANR	810363	Argument	core		809898	1					
ANR	810364	Identifier	core		809898	0					
ANR	810365	ExpressionStatement	core -> cmd_descriptors = r_list_newf ( free )	4799:1:120730:120772	809898	14	True				
ANR	810366	AssignmentExpression	core -> cmd_descriptors = r_list_newf ( free )		809898	0		=			
ANR	810367	PtrMemberAccess	core -> cmd_descriptors		809898	0					
ANR	810368	Identifier	core		809898	0					
ANR	810369	Identifier	cmd_descriptors		809898	1					
ANR	810370	CallExpression	r_list_newf ( free )		809898	1					
ANR	810371	Callee	r_list_newf		809898	0					
ANR	810372	Identifier	r_list_newf		809898	0					
ANR	810373	ArgumentList	free		809898	1					
ANR	810374	Argument	free		809898	0					
ANR	810375	Identifier	free		809898	0					
ANR	810376	IdentifierDeclStatement	int i ;	4800:1:120775:120780	809898	15	True				
ANR	810377	IdentifierDecl	i		809898	0					
ANR	810378	IdentifierDeclType	int		809898	0					
ANR	810379	Identifier	i		809898	1					
ANR	810380	ForStatement	for ( i = 0 ; i < R_ARRAY_SIZE ( cmds ) ; i ++ )		809898	16					
ANR	810381	ForInit	i = 0 ;	4801:6:120788:120793	809898	0	True				
ANR	810382	AssignmentExpression	i = 0		809898	0		=			
ANR	810383	Identifier	i		809898	0					
ANR	810384	PrimaryExpression	0		809898	1					
ANR	810385	Condition	i < R_ARRAY_SIZE ( cmds )	4801:13:120795:120817	809898	1	True				
ANR	810386	RelationalExpression	i < R_ARRAY_SIZE ( cmds )		809898	0		<			
ANR	810387	Identifier	i		809898	0					
ANR	810388	CallExpression	R_ARRAY_SIZE ( cmds )		809898	1					
ANR	810389	Callee	R_ARRAY_SIZE		809898	0					
ANR	810390	Identifier	R_ARRAY_SIZE		809898	0					
ANR	810391	ArgumentList	cmds		809898	1					
ANR	810392	Argument	cmds		809898	0					
ANR	810393	Identifier	cmds		809898	0					
ANR	810394	PostIncDecOperationExpression	i ++	4801:38:120820:120822	809898	2	True				
ANR	810395	Identifier	i		809898	0					
ANR	810396	IncDec	++		809898	1					
ANR	810397	CompoundStatement		68:43:3184:3184	809898	3					
ANR	810398	ExpressionStatement	"r_cmd_add ( core -> rcmd , cmds [ i ] . cmd , cmds [ i ] . description , cmds [ i ] . cb )"	4802:2:120829:120897	809898	0	True				
ANR	810399	CallExpression	"r_cmd_add ( core -> rcmd , cmds [ i ] . cmd , cmds [ i ] . description , cmds [ i ] . cb )"		809898	0					
ANR	810400	Callee	r_cmd_add		809898	0					
ANR	810401	Identifier	r_cmd_add		809898	0					
ANR	810402	ArgumentList	core -> rcmd		809898	1					
ANR	810403	Argument	core -> rcmd		809898	0					
ANR	810404	PtrMemberAccess	core -> rcmd		809898	0					
ANR	810405	Identifier	core		809898	0					
ANR	810406	Identifier	rcmd		809898	1					
ANR	810407	Argument	cmds [ i ] . cmd		809898	1					
ANR	810408	MemberAccess	cmds [ i ] . cmd		809898	0					
ANR	810409	ArrayIndexing	cmds [ i ]		809898	0					
ANR	810410	Identifier	cmds		809898	0					
ANR	810411	Identifier	i		809898	1					
ANR	810412	Identifier	cmd		809898	1					
ANR	810413	Argument	cmds [ i ] . description		809898	2					
ANR	810414	MemberAccess	cmds [ i ] . description		809898	0					
ANR	810415	ArrayIndexing	cmds [ i ]		809898	0					
ANR	810416	Identifier	cmds		809898	0					
ANR	810417	Identifier	i		809898	1					
ANR	810418	Identifier	description		809898	1					
ANR	810419	Argument	cmds [ i ] . cb		809898	3					
ANR	810420	MemberAccess	cmds [ i ] . cb		809898	0					
ANR	810421	ArrayIndexing	cmds [ i ]		809898	0					
ANR	810422	Identifier	cmds		809898	0					
ANR	810423	Identifier	i		809898	1					
ANR	810424	Identifier	cb		809898	1					
ANR	810425	IfStatement	if ( cmds [ i ] . descriptor_init )		809898	1					
ANR	810426	Condition	cmds [ i ] . descriptor_init	4803:6:120905:120927	809898	0	True				
ANR	810427	MemberAccess	cmds [ i ] . descriptor_init		809898	0					
ANR	810428	ArrayIndexing	cmds [ i ]		809898	0					
ANR	810429	Identifier	cmds		809898	0					
ANR	810430	Identifier	i		809898	1					
ANR	810431	Identifier	descriptor_init		809898	1					
ANR	810432	CompoundStatement		70:31:3289:3289	809898	1					
ANR	810433	ExpressionStatement	cmds [ i ] . descriptor_init ( core )	4804:3:120935:120965	809898	0	True				
ANR	810434	CallExpression	cmds [ i ] . descriptor_init ( core )		809898	0					
ANR	810435	Callee	cmds [ i ] . descriptor_init		809898	0					
ANR	810436	MemberAccess	cmds [ i ] . descriptor_init		809898	0					
ANR	810437	ArrayIndexing	cmds [ i ]		809898	0					
ANR	810438	Identifier	cmds		809898	0					
ANR	810439	Identifier	i		809898	1					
ANR	810440	Identifier	descriptor_init		809898	1					
ANR	810441	ArgumentList	core		809898	1					
ANR	810442	Argument	core		809898	0					
ANR	810443	Identifier	core		809898	0					
ANR	810444	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	4807:1:120975:121003	809898	17	True				
ANR	810445	Statement	(	4807:31:121005:121005	809898	18	True				
ANR	810446	Statement	core	4807:32:121006:121009	809898	19	True				
ANR	810447	Statement	","	4807:36:121010:121010	809898	20	True				
ANR	810448	Statement	","	4807:39:121013:121013	809898	21	True				
ANR	810449	Statement	dollar	4807:41:121015:121020	809898	22	True				
ANR	810450	Statement	)	4807:47:121021:121021	809898	23	True				
ANR	810451	ExpressionStatement		4807:48:121022:121022	809898	24	True				
ANR	810452	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	4808:1:121025:121053	809898	25	True				
ANR	810453	Statement	(	4808:31:121055:121055	809898	26	True				
ANR	810454	Statement	core	4808:32:121056:121059	809898	27	True				
ANR	810455	Statement	","	4808:36:121060:121060	809898	28	True				
ANR	810456	Statement	%	4808:38:121062:121062	809898	29	True				
ANR	810457	Statement	","	4808:39:121063:121063	809898	30	True				
ANR	810458	Statement	percent	4808:41:121065:121071	809898	31	True				
ANR	810459	Statement	)	4808:48:121072:121072	809898	32	True				
ANR	810460	ExpressionStatement		4808:49:121073:121073	809898	33	True				
ANR	810461	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	4809:1:121076:121104	809898	34	True				
ANR	810462	Statement	(	4809:31:121106:121106	809898	35	True				
ANR	810463	Statement	core	4809:32:121107:121110	809898	36	True				
ANR	810464	Statement	","	4809:36:121111:121111	809898	37	True				
ANR	810465	Statement	*	4809:38:121113:121113	809898	38	True				
ANR	810466	Statement	","	4809:39:121114:121114	809898	39	True				
ANR	810467	Statement	star	4809:41:121116:121119	809898	40	True				
ANR	810468	Statement	)	4809:45:121120:121120	809898	41	True				
ANR	810469	ExpressionStatement		4809:46:121121:121121	809898	42	True				
ANR	810470	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	4810:1:121124:121152	809898	43	True				
ANR	810471	Statement	(	4810:31:121154:121154	809898	44	True				
ANR	810472	Statement	core	4810:32:121155:121158	809898	45	True				
ANR	810473	Statement	","	4810:36:121159:121159	809898	46	True				
ANR	810474	Statement	.	4810:38:121161:121161	809898	47	True				
ANR	810475	Statement	","	4810:39:121162:121162	809898	48	True				
ANR	810476	Statement	dot	4810:41:121164:121166	809898	49	True				
ANR	810477	Statement	)	4810:44:121167:121167	809898	50	True				
ANR	810478	ExpressionStatement		4810:45:121168:121168	809898	51	True				
ANR	810479	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	4811:1:121171:121199	809898	52	True				
ANR	810480	Statement	(	4811:31:121201:121201	809898	53	True				
ANR	810481	Statement	core	4811:32:121202:121205	809898	54	True				
ANR	810482	Statement	","	4811:36:121206:121206	809898	55	True				
ANR	810483	Statement	=	4811:38:121208:121208	809898	56	True				
ANR	810484	Statement	","	4811:39:121209:121209	809898	57	True				
ANR	810485	Statement	equal	4811:41:121211:121215	809898	58	True				
ANR	810486	Statement	)	4811:46:121216:121216	809898	59	True				
ANR	810487	ExpressionStatement		4811:47:121217:121217	809898	60	True				
ANR	810488	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , b )"	4812:1:121220:121251	809898	61	True				
ANR	810489	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , b )"		809898	0					
ANR	810490	Callee	DEFINE_CMD_DESCRIPTOR		809898	0					
ANR	810491	Identifier	DEFINE_CMD_DESCRIPTOR		809898	0					
ANR	810492	ArgumentList	core		809898	1					
ANR	810493	Argument	core		809898	0					
ANR	810494	Identifier	core		809898	0					
ANR	810495	Argument	b		809898	1					
ANR	810496	Identifier	b		809898	0					
ANR	810497	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , k )"	4813:1:121254:121285	809898	62	True				
ANR	810498	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , k )"		809898	0					
ANR	810499	Callee	DEFINE_CMD_DESCRIPTOR		809898	0					
ANR	810500	Identifier	DEFINE_CMD_DESCRIPTOR		809898	0					
ANR	810501	ArgumentList	core		809898	1					
ANR	810502	Argument	core		809898	0					
ANR	810503	Identifier	core		809898	0					
ANR	810504	Argument	k		809898	1					
ANR	810505	Identifier	k		809898	0					
ANR	810506	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , r )"	4814:1:121288:121319	809898	63	True				
ANR	810507	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , r )"		809898	0					
ANR	810508	Callee	DEFINE_CMD_DESCRIPTOR		809898	0					
ANR	810509	Identifier	DEFINE_CMD_DESCRIPTOR		809898	0					
ANR	810510	ArgumentList	core		809898	1					
ANR	810511	Argument	core		809898	0					
ANR	810512	Identifier	core		809898	0					
ANR	810513	Argument	r		809898	1					
ANR	810514	Identifier	r		809898	0					
ANR	810515	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , u )"	4815:1:121322:121353	809898	64	True				
ANR	810516	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , u )"		809898	0					
ANR	810517	Callee	DEFINE_CMD_DESCRIPTOR		809898	0					
ANR	810518	Identifier	DEFINE_CMD_DESCRIPTOR		809898	0					
ANR	810519	ArgumentList	core		809898	1					
ANR	810520	Argument	core		809898	0					
ANR	810521	Identifier	core		809898	0					
ANR	810522	Argument	u		809898	1					
ANR	810523	Identifier	u		809898	0					
ANR	810524	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , y )"	4816:1:121356:121387	809898	65	True				
ANR	810525	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , y )"		809898	0					
ANR	810526	Callee	DEFINE_CMD_DESCRIPTOR		809898	0					
ANR	810527	Identifier	DEFINE_CMD_DESCRIPTOR		809898	0					
ANR	810528	ArgumentList	core		809898	1					
ANR	810529	Argument	core		809898	0					
ANR	810530	Identifier	core		809898	0					
ANR	810531	Argument	y		809898	1					
ANR	810532	Identifier	y		809898	0					
ANR	810533	ExpressionStatement	cmd_descriptor_init ( core )	4817:1:121390:121416	809898	66	True				
ANR	810534	CallExpression	cmd_descriptor_init ( core )		809898	0					
ANR	810535	Callee	cmd_descriptor_init		809898	0					
ANR	810536	Identifier	cmd_descriptor_init		809898	0					
ANR	810537	ArgumentList	core		809898	1					
ANR	810538	Argument	core		809898	0					
ANR	810539	Identifier	core		809898	0					
ANR	810540	ReturnType	R_API void		809898	1					
ANR	810541	Identifier	r_core_cmd_init		809898	2					
ANR	810542	ParameterList	RCore * core		809898	3					
ANR	810543	Parameter	RCore * core	4734:27:117627:117637	809898	0	True				
ANR	810544	ParameterType	RCore *		809898	0					
ANR	810545	Identifier	core		809898	1					
ANR	810546	CFGEntryNode	ENTRY		809898		True				
ANR	810547	CFGExitNode	EXIT		809898		True				
ANR	810548	Symbol	core -> rcmd -> macro . num		809898						
ANR	810549	Symbol	cmds [ i ] . cb		809898						
ANR	810550	Symbol	* core		809898						
ANR	810551	Symbol	core -> rcmd -> macro . user		809898						
ANR	810552	Symbol	r_core_cmd_nullcallback		809898						
ANR	810553	Symbol	r_cmd_new		809898						
ANR	810554	Symbol	core -> rcmd -> nullcallback		809898						
ANR	810555	Symbol	core -> rcmd -> macro . cmd		809898						
ANR	810556	Symbol	cmds		809898						
ANR	810557	Symbol	core -> cmd_descriptors		809898						
ANR	810558	Symbol	cmds [ i ] . description		809898						
ANR	810559	Symbol	cmds [ i ] . descriptor_init		809898						
ANR	810560	Symbol	core -> num		809898						
ANR	810561	Symbol	free		809898						
ANR	810562	Symbol	* * core		809898						
ANR	810563	Symbol	core -> rcmd -> macro		809898						
ANR	810564	Symbol	b		809898						
ANR	810565	Symbol	core -> rcmd		809898						
ANR	810566	Symbol	r_list_newf		809898						
ANR	810567	Symbol	i		809898						
ANR	810568	Symbol	core -> rcmd -> macro . cb_printf		809898						
ANR	810569	Symbol	k		809898						
ANR	810570	Symbol	core_cmd0_wrapper		809898						
ANR	810571	Symbol	core		809898						
ANR	810572	Symbol	* cmds		809898						
ANR	810573	Symbol	cmds [ i ] . cmd		809898						
ANR	810574	Symbol	r		809898						
ANR	810575	Symbol	* i		809898						
ANR	810576	Symbol	u		809898						
ANR	810577	Symbol	R_ARRAY_SIZE		809898						
ANR	810578	Symbol	r_cons_printf		809898						
ANR	810579	Symbol	y		809898						
ANR	810580	Symbol	* core -> rcmd		809898						
