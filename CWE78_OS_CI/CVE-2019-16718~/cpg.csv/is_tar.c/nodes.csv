command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2196102	File	data/converged/CVE-2019-16718~_radare2/is_tar.c								
ANR	2196103	Function	from_oct	62:0:2348:2774							
ANR	2196104	FunctionDef	"from_oct (int digs , const char * where)"		2196103	0					
ANR	2196105	CompoundStatement		62:49:2397:2774	2196103	0					
ANR	2196106	IdentifierDeclStatement	int value = 0 ;	63:1:2400:2413	2196103	0	True				
ANR	2196107	IdentifierDecl	value = 0		2196103	0					
ANR	2196108	IdentifierDeclType	int		2196103	0					
ANR	2196109	Identifier	value		2196103	1					
ANR	2196110	AssignmentExpression	value = 0		2196103	2		=			
ANR	2196111	Identifier	value		2196103	0					
ANR	2196112	PrimaryExpression	0		2196103	1					
ANR	2196113	WhileStatement	while ( isspace ( ( ut8 ) * where ) )		2196103	1					
ANR	2196114	Condition	isspace ( ( ut8 ) * where )	64:8:2423:2443	2196103	0	True				
ANR	2196115	CallExpression	isspace ( ( ut8 ) * where )		2196103	0					
ANR	2196116	Callee	isspace		2196103	0					
ANR	2196117	Identifier	isspace		2196103	0					
ANR	2196118	ArgumentList	( ut8 ) * where		2196103	1					
ANR	2196119	Argument	( ut8 ) * where		2196103	0					
ANR	2196120	CastExpression	( ut8 ) * where		2196103	0					
ANR	2196121	CastTarget	ut8		2196103	0					
ANR	2196122	UnaryOperationExpression	* where		2196103	1					
ANR	2196123	UnaryOperator	*		2196103	0					
ANR	2196124	Identifier	where		2196103	1					
ANR	2196125	CompoundStatement		3:31:48:48	2196103	1					
ANR	2196126	ExpressionStatement	where ++	65:2:2468:2475	2196103	0	True				
ANR	2196127	PostIncDecOperationExpression	where ++		2196103	0					
ANR	2196128	Identifier	where		2196103	0					
ANR	2196129	IncDec	++		2196103	1					
ANR	2196130	IfStatement	if ( -- digs <= 0 )		2196103	1					
ANR	2196131	Condition	-- digs <= 0	66:6:2483:2493	2196103	0	True				
ANR	2196132	RelationalExpression	-- digs <= 0		2196103	0		<=			
ANR	2196133	UnaryExpression	-- digs		2196103	0					
ANR	2196134	IncDec	--		2196103	0					
ANR	2196135	Identifier	digs		2196103	1					
ANR	2196136	PrimaryExpression	0		2196103	1					
ANR	2196137	CompoundStatement		5:19:98:98	2196103	1					
ANR	2196138	ReturnStatement	return - 1 ;	67:3:2501:2510	2196103	0	True				
ANR	2196139	UnaryOperationExpression	- 1		2196103	0					
ANR	2196140	UnaryOperator	-		2196103	0					
ANR	2196141	PrimaryExpression	1		2196103	1					
ANR	2196142	WhileStatement	while ( digs > 0 && isodigit ( * where ) )		2196103	2					
ANR	2196143	Condition	digs > 0 && isodigit ( * where )	70:8:2549:2576	2196103	0	True				
ANR	2196144	AndExpression	digs > 0 && isodigit ( * where )		2196103	0		&&			
ANR	2196145	RelationalExpression	digs > 0		2196103	0		>			
ANR	2196146	Identifier	digs		2196103	0					
ANR	2196147	PrimaryExpression	0		2196103	1					
ANR	2196148	CallExpression	isodigit ( * where )		2196103	1					
ANR	2196149	Callee	isodigit		2196103	0					
ANR	2196150	Identifier	isodigit		2196103	0					
ANR	2196151	ArgumentList	* where		2196103	1					
ANR	2196152	Argument	* where		2196103	0					
ANR	2196153	UnaryOperationExpression	* where		2196103	0					
ANR	2196154	UnaryOperator	*		2196103	0					
ANR	2196155	Identifier	where		2196103	1					
ANR	2196156	CompoundStatement		9:38:181:181	2196103	1					
ANR	2196157	ExpressionStatement	value = ( value << 3 ) | ( * where ++ - '0' )	71:2:2607:2646	2196103	0	True				
ANR	2196158	AssignmentExpression	value = ( value << 3 ) | ( * where ++ - '0' )		2196103	0		=			
ANR	2196159	Identifier	value		2196103	0					
ANR	2196160	InclusiveOrExpression	( value << 3 ) | ( * where ++ - '0' )		2196103	1		|			
ANR	2196161	ShiftExpression	value << 3		2196103	0		<<			
ANR	2196162	Identifier	value		2196103	0					
ANR	2196163	PrimaryExpression	3		2196103	1					
ANR	2196164	AdditiveExpression	* where ++ - '0'		2196103	1		-			
ANR	2196165	UnaryOperationExpression	* where ++		2196103	0					
ANR	2196166	UnaryOperator	*		2196103	0					
ANR	2196167	PostIncDecOperationExpression	where ++		2196103	1					
ANR	2196168	Identifier	where		2196103	0					
ANR	2196169	IncDec	++		2196103	1					
ANR	2196170	PrimaryExpression	'0'		2196103	1					
ANR	2196171	ExpressionStatement	-- digs	72:2:2650:2656	2196103	1	True				
ANR	2196172	UnaryExpression	-- digs		2196103	0					
ANR	2196173	IncDec	--		2196103	0					
ANR	2196174	Identifier	digs		2196103	1					
ANR	2196175	IfStatement	if ( digs > 0 && * where && ! isspace ( ( ut8 ) * where ) )		2196103	3					
ANR	2196176	Condition	digs > 0 && * where && ! isspace ( ( ut8 ) * where )	74:5:2666:2709	2196103	0	True				
ANR	2196177	AndExpression	digs > 0 && * where && ! isspace ( ( ut8 ) * where )		2196103	0		&&			
ANR	2196178	RelationalExpression	digs > 0		2196103	0		>			
ANR	2196179	Identifier	digs		2196103	0					
ANR	2196180	PrimaryExpression	0		2196103	1					
ANR	2196181	AndExpression	* where && ! isspace ( ( ut8 ) * where )		2196103	1		&&			
ANR	2196182	UnaryOperationExpression	* where		2196103	0					
ANR	2196183	UnaryOperator	*		2196103	0					
ANR	2196184	Identifier	where		2196103	1					
ANR	2196185	UnaryOperationExpression	! isspace ( ( ut8 ) * where )		2196103	1					
ANR	2196186	UnaryOperator	!		2196103	0					
ANR	2196187	CallExpression	isspace ( ( ut8 ) * where )		2196103	1					
ANR	2196188	Callee	isspace		2196103	0					
ANR	2196189	Identifier	isspace		2196103	0					
ANR	2196190	ArgumentList	( ut8 ) * where		2196103	1					
ANR	2196191	Argument	( ut8 ) * where		2196103	0					
ANR	2196192	CastExpression	( ut8 ) * where		2196103	0					
ANR	2196193	CastTarget	ut8		2196103	0					
ANR	2196194	UnaryOperationExpression	* where		2196103	1					
ANR	2196195	UnaryOperator	*		2196103	0					
ANR	2196196	Identifier	where		2196103	1					
ANR	2196197	CompoundStatement		13:51:314:314	2196103	1					
ANR	2196198	ReturnStatement	return - 1 ;	75:2:2716:2725	2196103	0	True				
ANR	2196199	UnaryOperationExpression	- 1		2196103	0					
ANR	2196200	UnaryOperator	-		2196103	0					
ANR	2196201	PrimaryExpression	1		2196103	1					
ANR	2196202	ReturnStatement	return value ;	77:1:2760:2772	2196103	4	True				
ANR	2196203	Identifier	value		2196103	0					
ANR	2196204	ReturnType	static int		2196103	1					
ANR	2196205	Identifier	from_oct		2196103	2					
ANR	2196206	ParameterList	"int digs , const char * where"		2196103	3					
ANR	2196207	Parameter	int digs	62:20:2368:2375	2196103	0	True				
ANR	2196208	ParameterType	int		2196103	0					
ANR	2196209	Identifier	digs		2196103	1					
ANR	2196210	Parameter	const char * where	62:30:2378:2394	2196103	1	True				
ANR	2196211	ParameterType	const char *		2196103	0					
ANR	2196212	Identifier	where		2196103	1					
ANR	2196213	CFGEntryNode	ENTRY		2196103		True				
ANR	2196214	CFGExitNode	EXIT		2196103		True				
ANR	2196215	Symbol	* where ++		2196103						
ANR	2196216	Symbol	isspace		2196103						
ANR	2196217	Symbol	where		2196103						
ANR	2196218	Symbol	isodigit		2196103						
ANR	2196219	Symbol	value		2196103						
ANR	2196220	Symbol	digs		2196103						
ANR	2196221	Symbol	* where		2196103						
ANR	2196222	Function	is_tar	87:0:2947:3905							
ANR	2196223	FunctionDef	"is_tar (const ut8 * buf , size_t nbytes)"		2196222	0					
ANR	2196224	CompoundStatement		87:49:2996:3905	2196222	0					
ANR	2196225	IdentifierDeclStatement	const union record * header = ( const union record * ) ( const void * ) buf ;	88:1:2999:3067	2196222	0	True				
ANR	2196226	IdentifierDecl	* header = ( const union record * ) ( const void * ) buf		2196222	0					
ANR	2196227	IdentifierDeclType	const union record *		2196222	0					
ANR	2196228	Identifier	header		2196222	1					
ANR	2196229	AssignmentExpression	* header = ( const union record * ) ( const void * ) buf		2196222	2		=			
ANR	2196230	Identifier	header		2196222	0					
ANR	2196231	CastExpression	( const union record * ) ( const void * ) buf		2196222	1					
ANR	2196232	CastTarget	const union record *		2196222	0					
ANR	2196233	CastExpression	( const void * ) buf		2196222	1					
ANR	2196234	CastTarget	const void *		2196222	0					
ANR	2196235	Identifier	buf		2196222	1					
ANR	2196236	IdentifierDeclStatement	"int i , sum , recsum ;"	89:1:3070:3088	2196222	1	True				
ANR	2196237	IdentifierDecl	i		2196222	0					
ANR	2196238	IdentifierDeclType	int		2196222	0					
ANR	2196239	Identifier	i		2196222	1					
ANR	2196240	IdentifierDecl	sum		2196222	1					
ANR	2196241	IdentifierDeclType	int		2196222	0					
ANR	2196242	Identifier	sum		2196222	1					
ANR	2196243	IdentifierDecl	recsum		2196222	2					
ANR	2196244	IdentifierDeclType	int		2196222	0					
ANR	2196245	Identifier	recsum		2196222	1					
ANR	2196246	IdentifierDeclStatement	const char * p ;	90:1:3091:3104	2196222	2	True				
ANR	2196247	IdentifierDecl	* p		2196222	0					
ANR	2196248	IdentifierDeclType	const char *		2196222	0					
ANR	2196249	Identifier	p		2196222	1					
ANR	2196250	IfStatement	if ( nbytes < sizeof ( union record ) )		2196222	3					
ANR	2196251	Condition	nbytes < sizeof ( union record )	92:5:3112:3141	2196222	0	True				
ANR	2196252	RelationalExpression	nbytes < sizeof ( union record )		2196222	0		<			
ANR	2196253	Identifier	nbytes		2196222	0					
ANR	2196254	SizeofExpression	sizeof ( union record )		2196222	1					
ANR	2196255	Sizeof	sizeof		2196222	0					
ANR	2196256	SizeofOperand	union record		2196222	1					
ANR	2196257	CompoundStatement		6:37:147:147	2196222	1					
ANR	2196258	ReturnStatement	return 0 ;	93:2:3148:3156	2196222	0	True				
ANR	2196259	PrimaryExpression	0		2196222	0					
ANR	2196260	ExpressionStatement	"recsum = from_oct ( 8 , header -> header . chksum )"	96:1:3163:3207	2196222	4	True				
ANR	2196261	AssignmentExpression	"recsum = from_oct ( 8 , header -> header . chksum )"		2196222	0		=			
ANR	2196262	Identifier	recsum		2196222	0					
ANR	2196263	CallExpression	"from_oct ( 8 , header -> header . chksum )"		2196222	1					
ANR	2196264	Callee	from_oct		2196222	0					
ANR	2196265	Identifier	from_oct		2196222	0					
ANR	2196266	ArgumentList	8		2196222	1					
ANR	2196267	Argument	8		2196222	0					
ANR	2196268	PrimaryExpression	8		2196222	0					
ANR	2196269	Argument	header -> header . chksum		2196222	1					
ANR	2196270	MemberAccess	header -> header . chksum		2196222	0					
ANR	2196271	PtrMemberAccess	header -> header		2196222	0					
ANR	2196272	Identifier	header		2196222	0					
ANR	2196273	Identifier	header		2196222	1					
ANR	2196274	Identifier	chksum		2196222	1					
ANR	2196275	ExpressionStatement	sum = 0	98:1:3211:3218	2196222	5	True				
ANR	2196276	AssignmentExpression	sum = 0		2196222	0		=			
ANR	2196277	Identifier	sum		2196222	0					
ANR	2196278	PrimaryExpression	0		2196222	1					
ANR	2196279	ExpressionStatement	p = header -> charptr	99:1:3221:3240	2196222	6	True				
ANR	2196280	AssignmentExpression	p = header -> charptr		2196222	0		=			
ANR	2196281	Identifier	p		2196222	0					
ANR	2196282	PtrMemberAccess	header -> charptr		2196222	1					
ANR	2196283	Identifier	header		2196222	0					
ANR	2196284	Identifier	charptr		2196222	1					
ANR	2196285	ForStatement	for ( i = sizeof ( union record ) ; -- i >= 0 ; )		2196222	7					
ANR	2196286	ForInit	i = sizeof ( union record ) ;	100:6:3248:3272	2196222	0	True				
ANR	2196287	AssignmentExpression	i = sizeof ( union record )		2196222	0		=			
ANR	2196288	Identifier	i		2196222	0					
ANR	2196289	SizeofExpression	sizeof ( union record )		2196222	1					
ANR	2196290	Sizeof	sizeof		2196222	0					
ANR	2196291	SizeofOperand	union record		2196222	1					
ANR	2196292	Condition	-- i >= 0	100:32:3274:3281	2196222	1	True				
ANR	2196293	RelationalExpression	-- i >= 0		2196222	0		>=			
ANR	2196294	UnaryExpression	-- i		2196222	0					
ANR	2196295	IncDec	--		2196222	0					
ANR	2196296	Identifier	i		2196222	1					
ANR	2196297	PrimaryExpression	0		2196222	1					
ANR	2196298	CompoundStatement		14:43:288:288	2196222	2					
ANR	2196299	ExpressionStatement	sum += 0xFF & * p ++	105:2:3368:3386	2196222	0	True				
ANR	2196300	AssignmentExpression	sum += 0xFF & * p ++		2196222	0		+=			
ANR	2196301	Identifier	sum		2196222	0					
ANR	2196302	BitAndExpression	0xFF & * p ++		2196222	1		&			
ANR	2196303	PrimaryExpression	0xFF		2196222	0					
ANR	2196304	UnaryOperationExpression	* p ++		2196222	1					
ANR	2196305	UnaryOperator	*		2196222	0					
ANR	2196306	PostIncDecOperationExpression	p ++		2196222	1					
ANR	2196307	Identifier	p		2196222	0					
ANR	2196308	IncDec	++		2196222	1					
ANR	2196309	ForStatement	for ( i = sizeof header -> header . chksum ; -- i >= 0 ; )		2196222	8					
ANR	2196310	ForInit	i = sizeof header -> header . chksum ;	109:6:3460:3492	2196222	0	True				
ANR	2196311	AssignmentExpression	i = sizeof header -> header . chksum		2196222	0		=			
ANR	2196312	Identifier	i		2196222	0					
ANR	2196313	SizeofExpression	sizeof header -> header . chksum		2196222	1					
ANR	2196314	Sizeof	sizeof		2196222	0					
ANR	2196315	MemberAccess	header -> header . chksum		2196222	1					
ANR	2196316	PtrMemberAccess	header -> header		2196222	0					
ANR	2196317	Identifier	header		2196222	0					
ANR	2196318	Identifier	header		2196222	1					
ANR	2196319	Identifier	chksum		2196222	1					
ANR	2196320	Condition	-- i >= 0	109:40:3494:3501	2196222	1	True				
ANR	2196321	RelationalExpression	-- i >= 0		2196222	0		>=			
ANR	2196322	UnaryExpression	-- i		2196222	0					
ANR	2196323	IncDec	--		2196222	0					
ANR	2196324	Identifier	i		2196222	1					
ANR	2196325	PrimaryExpression	0		2196222	1					
ANR	2196326	CompoundStatement		23:51:508:508	2196222	2					
ANR	2196327	ExpressionStatement	sum -= 0xFF & header -> header . chksum [ i ]	110:2:3509:3547	2196222	0	True				
ANR	2196328	AssignmentExpression	sum -= 0xFF & header -> header . chksum [ i ]		2196222	0		-=			
ANR	2196329	Identifier	sum		2196222	0					
ANR	2196330	BitAndExpression	0xFF & header -> header . chksum [ i ]		2196222	1		&			
ANR	2196331	PrimaryExpression	0xFF		2196222	0					
ANR	2196332	ArrayIndexing	header -> header . chksum [ i ]		2196222	1					
ANR	2196333	MemberAccess	header -> header . chksum		2196222	0					
ANR	2196334	PtrMemberAccess	header -> header		2196222	0					
ANR	2196335	Identifier	header		2196222	0					
ANR	2196336	Identifier	header		2196222	1					
ANR	2196337	Identifier	chksum		2196222	1					
ANR	2196338	Identifier	i		2196222	1					
ANR	2196339	ExpressionStatement	sum += ' ' * sizeof header -> header . chksum	112:1:3553:3594	2196222	9	True				
ANR	2196340	AssignmentExpression	sum += ' ' * sizeof header -> header . chksum		2196222	0		+=			
ANR	2196341	Identifier	sum		2196222	0					
ANR	2196342	MultiplicativeExpression	' ' * sizeof header -> header . chksum		2196222	1		*			
ANR	2196343	PrimaryExpression	' '		2196222	0					
ANR	2196344	SizeofExpression	sizeof header -> header . chksum		2196222	1					
ANR	2196345	Sizeof	sizeof		2196222	0					
ANR	2196346	MemberAccess	header -> header . chksum		2196222	1					
ANR	2196347	PtrMemberAccess	header -> header		2196222	0					
ANR	2196348	Identifier	header		2196222	0					
ANR	2196349	Identifier	header		2196222	1					
ANR	2196350	Identifier	chksum		2196222	1					
ANR	2196351	IfStatement	if ( sum != recsum )		2196222	10					
ANR	2196352	Condition	sum != recsum	113:5:3601:3613	2196222	0	True				
ANR	2196353	EqualityExpression	sum != recsum		2196222	0		!=			
ANR	2196354	Identifier	sum		2196222	0					
ANR	2196355	Identifier	recsum		2196222	1					
ANR	2196356	CompoundStatement		27:20:619:619	2196222	1					
ANR	2196357	ReturnStatement	return 0 ;	114:2:3620:3628	2196222	0	True				
ANR	2196358	PrimaryExpression	0		2196222	0					
ANR	2196359	IfStatement	"if ( strcmp ( header -> header . magic , GNUTMAGIC ) == 0 )"		2196222	11					
ANR	2196360	Condition	"strcmp ( header -> header . magic , GNUTMAGIC ) == 0"	116:5:3662:3706	2196222	0	True				
ANR	2196361	EqualityExpression	"strcmp ( header -> header . magic , GNUTMAGIC ) == 0"		2196222	0		==			
ANR	2196362	CallExpression	"strcmp ( header -> header . magic , GNUTMAGIC )"		2196222	0					
ANR	2196363	Callee	strcmp		2196222	0					
ANR	2196364	Identifier	strcmp		2196222	0					
ANR	2196365	ArgumentList	header -> header . magic		2196222	1					
ANR	2196366	Argument	header -> header . magic		2196222	0					
ANR	2196367	MemberAccess	header -> header . magic		2196222	0					
ANR	2196368	PtrMemberAccess	header -> header		2196222	0					
ANR	2196369	Identifier	header		2196222	0					
ANR	2196370	Identifier	header		2196222	1					
ANR	2196371	Identifier	magic		2196222	1					
ANR	2196372	Argument	GNUTMAGIC		2196222	1					
ANR	2196373	Identifier	GNUTMAGIC		2196222	0					
ANR	2196374	PrimaryExpression	0		2196222	1					
ANR	2196375	CompoundStatement		30:52:712:712	2196222	1					
ANR	2196376	ReturnStatement	return 3 ;	117:2:3713:3721	2196222	0	True				
ANR	2196377	PrimaryExpression	3		2196222	0					
ANR	2196378	IfStatement	"if ( strcmp ( header -> header . magic , TMAGIC ) == 0 )"		2196222	12					
ANR	2196379	Condition	"strcmp ( header -> header . magic , TMAGIC ) == 0"	119:5:3767:3808	2196222	0	True				
ANR	2196380	EqualityExpression	"strcmp ( header -> header . magic , TMAGIC ) == 0"		2196222	0		==			
ANR	2196381	CallExpression	"strcmp ( header -> header . magic , TMAGIC )"		2196222	0					
ANR	2196382	Callee	strcmp		2196222	0					
ANR	2196383	Identifier	strcmp		2196222	0					
ANR	2196384	ArgumentList	header -> header . magic		2196222	1					
ANR	2196385	Argument	header -> header . magic		2196222	0					
ANR	2196386	MemberAccess	header -> header . magic		2196222	0					
ANR	2196387	PtrMemberAccess	header -> header		2196222	0					
ANR	2196388	Identifier	header		2196222	0					
ANR	2196389	Identifier	header		2196222	1					
ANR	2196390	Identifier	magic		2196222	1					
ANR	2196391	Argument	TMAGIC		2196222	1					
ANR	2196392	Identifier	TMAGIC		2196222	0					
ANR	2196393	PrimaryExpression	0		2196222	1					
ANR	2196394	CompoundStatement		33:49:814:814	2196222	1					
ANR	2196395	ReturnStatement	return 2 ;	120:2:3815:3823	2196222	0	True				
ANR	2196396	PrimaryExpression	2		2196222	0					
ANR	2196397	ReturnStatement	return 1 ;	122:1:3861:3869	2196222	13	True				
ANR	2196398	PrimaryExpression	1		2196222	0					
ANR	2196399	ReturnType	static int		2196222	1					
ANR	2196400	Identifier	is_tar		2196222	2					
ANR	2196401	ParameterList	"const ut8 * buf , size_t nbytes"		2196222	3					
ANR	2196402	Parameter	const ut8 * buf	87:18:2965:2978	2196222	0	True				
ANR	2196403	ParameterType	const ut8 *		2196222	0					
ANR	2196404	Identifier	buf		2196222	1					
ANR	2196405	Parameter	size_t nbytes	87:34:2981:2993	2196222	1	True				
ANR	2196406	ParameterType	size_t		2196222	0					
ANR	2196407	Identifier	nbytes		2196222	1					
ANR	2196408	CFGEntryNode	ENTRY		2196222		True				
ANR	2196409	CFGExitNode	EXIT		2196222		True				
ANR	2196410	Symbol	strcmp		2196222						
ANR	2196411	Symbol	* header -> header		2196222						
ANR	2196412	Symbol	* header -> header . chksum		2196222						
ANR	2196413	Symbol	header -> header . magic		2196222						
ANR	2196414	Symbol	* p ++		2196222						
ANR	2196415	Symbol	i		2196222						
ANR	2196416	Symbol	sum		2196222						
ANR	2196417	Symbol	TMAGIC		2196222						
ANR	2196418	Symbol	header -> header . chksum		2196222						
ANR	2196419	Symbol	* header		2196222						
ANR	2196420	Symbol	nbytes		2196222						
ANR	2196421	Symbol	p		2196222						
ANR	2196422	Symbol	* * header		2196222						
ANR	2196423	Symbol	buf		2196222						
ANR	2196424	Symbol	* i		2196222						
ANR	2196425	Symbol	header		2196222						
ANR	2196426	Symbol	header -> header		2196222						
ANR	2196427	Symbol	header -> charptr		2196222						
ANR	2196428	Symbol	recsum		2196222						
ANR	2196429	Symbol	GNUTMAGIC		2196222						
ANR	2196430	Symbol	from_oct		2196222						
ANR	2196431	Function	file_is_tar	125:0:3908:4382							
ANR	2196432	FunctionDef	"file_is_tar (RMagic * ms , const ut8 * buf , size_t nbytes)"		2196431	0					
ANR	2196433	CompoundStatement		125:59:3967:4382	2196431	0					
ANR	2196434	IdentifierDeclStatement	"int tar = is_tar ( buf , nbytes ) ;"	130:1:4112:4141	2196431	0	True				
ANR	2196435	IdentifierDecl	"tar = is_tar ( buf , nbytes )"		2196431	0					
ANR	2196436	IdentifierDeclType	int		2196431	0					
ANR	2196437	Identifier	tar		2196431	1					
ANR	2196438	AssignmentExpression	"tar = is_tar ( buf , nbytes )"		2196431	2		=			
ANR	2196439	Identifier	tar		2196431	0					
ANR	2196440	CallExpression	"is_tar ( buf , nbytes )"		2196431	1					
ANR	2196441	Callee	is_tar		2196431	0					
ANR	2196442	Identifier	is_tar		2196431	0					
ANR	2196443	ArgumentList	buf		2196431	1					
ANR	2196444	Argument	buf		2196431	0					
ANR	2196445	Identifier	buf		2196431	0					
ANR	2196446	Argument	nbytes		2196431	1					
ANR	2196447	Identifier	nbytes		2196431	0					
ANR	2196448	IdentifierDeclStatement	int mime = ms -> flags & R_MAGIC_MIME ;	131:1:4144:4179	2196431	1	True				
ANR	2196449	IdentifierDecl	mime = ms -> flags & R_MAGIC_MIME		2196431	0					
ANR	2196450	IdentifierDeclType	int		2196431	0					
ANR	2196451	Identifier	mime		2196431	1					
ANR	2196452	AssignmentExpression	mime = ms -> flags & R_MAGIC_MIME		2196431	2		=			
ANR	2196453	Identifier	mime		2196431	0					
ANR	2196454	BitAndExpression	ms -> flags & R_MAGIC_MIME		2196431	1		&			
ANR	2196455	PtrMemberAccess	ms -> flags		2196431	0					
ANR	2196456	Identifier	ms		2196431	0					
ANR	2196457	Identifier	flags		2196431	1					
ANR	2196458	Identifier	R_MAGIC_MIME		2196431	1					
ANR	2196459	IfStatement	if ( tar < 1 || tar > 3 )		2196431	2					
ANR	2196460	Condition	tar < 1 || tar > 3	133:5:4187:4204	2196431	0	True				
ANR	2196461	OrExpression	tar < 1 || tar > 3		2196431	0		||			
ANR	2196462	RelationalExpression	tar < 1		2196431	0		<			
ANR	2196463	Identifier	tar		2196431	0					
ANR	2196464	PrimaryExpression	1		2196431	1					
ANR	2196465	RelationalExpression	tar > 3		2196431	1		>			
ANR	2196466	Identifier	tar		2196431	0					
ANR	2196467	PrimaryExpression	3		2196431	1					
ANR	2196468	CompoundStatement		9:25:239:239	2196431	1					
ANR	2196469	ReturnStatement	return 0 ;	134:2:4211:4219	2196431	0	True				
ANR	2196470	PrimaryExpression	0		2196431	0					
ANR	2196471	IfStatement	if ( mime == R_MAGIC_MIME_ENCODING )		2196431	3					
ANR	2196472	Condition	mime == R_MAGIC_MIME_ENCODING	136:5:4229:4257	2196431	0	True				
ANR	2196473	EqualityExpression	mime == R_MAGIC_MIME_ENCODING		2196431	0		==			
ANR	2196474	Identifier	mime		2196431	0					
ANR	2196475	Identifier	R_MAGIC_MIME_ENCODING		2196431	1					
ANR	2196476	CompoundStatement		12:36:292:292	2196431	1					
ANR	2196477	ReturnStatement	return 0 ;	137:2:4264:4272	2196431	0	True				
ANR	2196478	PrimaryExpression	0		2196431	0					
ANR	2196479	IfStatement	"if ( file_printf ( ms , mime ? ""application/x-tar"" : tartype [ tar - 1 ] ) == - 1 )"		2196431	4					
ANR	2196480	Condition	"file_printf ( ms , mime ? ""application/x-tar"" : tartype [ tar - 1 ] ) == - 1"	139:5:4282:4350	2196431	0	True				
ANR	2196481	EqualityExpression	"file_printf ( ms , mime ? ""application/x-tar"" : tartype [ tar - 1 ] ) == - 1"		2196431	0		==			
ANR	2196482	CallExpression	"file_printf ( ms , mime ? ""application/x-tar"" : tartype [ tar - 1 ] )"		2196431	0					
ANR	2196483	Callee	file_printf		2196431	0					
ANR	2196484	Identifier	file_printf		2196431	0					
ANR	2196485	ArgumentList	ms		2196431	1					
ANR	2196486	Argument	ms		2196431	0					
ANR	2196487	Identifier	ms		2196431	0					
ANR	2196488	Argument	"mime ? ""application/x-tar"" : tartype [ tar - 1 ]"		2196431	1					
ANR	2196489	ConditionalExpression	"mime ? ""application/x-tar"" : tartype [ tar - 1 ]"		2196431	0					
ANR	2196490	Condition	mime		2196431	0					
ANR	2196491	Identifier	mime		2196431	0					
ANR	2196492	PrimaryExpression	"""application/x-tar"""		2196431	1					
ANR	2196493	ArrayIndexing	tartype [ tar - 1 ]		2196431	2					
ANR	2196494	Identifier	tartype		2196431	0					
ANR	2196495	AdditiveExpression	tar - 1		2196431	1		-			
ANR	2196496	Identifier	tar		2196431	0					
ANR	2196497	PrimaryExpression	1		2196431	1					
ANR	2196498	UnaryOperationExpression	- 1		2196431	1					
ANR	2196499	UnaryOperator	-		2196431	0					
ANR	2196500	PrimaryExpression	1		2196431	1					
ANR	2196501	CompoundStatement		15:76:385:385	2196431	1					
ANR	2196502	ReturnStatement	return - 1 ;	140:2:4357:4366	2196431	0	True				
ANR	2196503	UnaryOperationExpression	- 1		2196431	0					
ANR	2196504	UnaryOperator	-		2196431	0					
ANR	2196505	PrimaryExpression	1		2196431	1					
ANR	2196506	ReturnStatement	return 1 ;	142:1:4372:4380	2196431	5	True				
ANR	2196507	PrimaryExpression	1		2196431	0					
ANR	2196508	ReturnType	int		2196431	1					
ANR	2196509	Identifier	file_is_tar		2196431	2					
ANR	2196510	ParameterList	"RMagic * ms , const ut8 * buf , size_t nbytes"		2196431	3					
ANR	2196511	Parameter	RMagic * ms	125:16:3924:3933	2196431	0	True				
ANR	2196512	ParameterType	RMagic *		2196431	0					
ANR	2196513	Identifier	ms		2196431	1					
ANR	2196514	Parameter	const ut8 * buf	125:28:3936:3949	2196431	1	True				
ANR	2196515	ParameterType	const ut8 *		2196431	0					
ANR	2196516	Identifier	buf		2196431	1					
ANR	2196517	Parameter	size_t nbytes	125:44:3952:3964	2196431	2	True				
ANR	2196518	ParameterType	size_t		2196431	0					
ANR	2196519	Identifier	nbytes		2196431	1					
ANR	2196520	CFGEntryNode	ENTRY		2196431		True				
ANR	2196521	CFGExitNode	EXIT		2196431		True				
ANR	2196522	Symbol	tar		2196431						
ANR	2196523	Symbol	ms		2196431						
ANR	2196524	Symbol	file_printf		2196431						
ANR	2196525	Symbol	mime		2196431						
ANR	2196526	Symbol	R_MAGIC_MIME_ENCODING		2196431						
ANR	2196527	Symbol	tartype		2196431						
ANR	2196528	Symbol	nbytes		2196431						
ANR	2196529	Symbol	* ms		2196431						
ANR	2196530	Symbol	* tar		2196431						
ANR	2196531	Symbol	buf		2196431						
ANR	2196532	Symbol	R_MAGIC_MIME		2196431						
ANR	2196533	Symbol	ms -> flags		2196431						
ANR	2196534	Symbol	* tartype		2196431						
ANR	2196535	Symbol	is_tar		2196431						
