command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1526491	File	data/converged/CVE-2019-16718~_radare2/graph.c								
ANR	1526492	ClassDef	<unnamed>	5:0:84:135							
ANR	1526493	Function	r_graph_node_new	11:0:139:388							
ANR	1526494	FunctionDef	r_graph_node_new (void * data)		1526493	0					
ANR	1526495	CompoundStatement		11:49:188:388	1526493	0					
ANR	1526496	IdentifierDeclStatement	RGraphNode * p = R_NEW0 ( RGraphNode ) ;	12:1:191:226	1526493	0	True				
ANR	1526497	IdentifierDecl	* p = R_NEW0 ( RGraphNode )		1526493	0					
ANR	1526498	IdentifierDeclType	RGraphNode *		1526493	0					
ANR	1526499	Identifier	p		1526493	1					
ANR	1526500	AssignmentExpression	* p = R_NEW0 ( RGraphNode )		1526493	2		=			
ANR	1526501	Identifier	p		1526493	0					
ANR	1526502	CallExpression	R_NEW0 ( RGraphNode )		1526493	1					
ANR	1526503	Callee	R_NEW0		1526493	0					
ANR	1526504	Identifier	R_NEW0		1526493	0					
ANR	1526505	ArgumentList	RGraphNode		1526493	1					
ANR	1526506	Argument	RGraphNode		1526493	0					
ANR	1526507	Identifier	RGraphNode		1526493	0					
ANR	1526508	IfStatement	if ( p )		1526493	1					
ANR	1526509	Condition	p	13:5:233:233	1526493	0	True				
ANR	1526510	Identifier	p		1526493	0					
ANR	1526511	CompoundStatement		3:8:47:47	1526493	1					
ANR	1526512	ExpressionStatement	p -> data = data	14:2:240:254	1526493	0	True				
ANR	1526513	AssignmentExpression	p -> data = data		1526493	0		=			
ANR	1526514	PtrMemberAccess	p -> data		1526493	0					
ANR	1526515	Identifier	p		1526493	0					
ANR	1526516	Identifier	data		1526493	1					
ANR	1526517	Identifier	data		1526493	1					
ANR	1526518	ExpressionStatement	p -> free = NULL	15:2:258:272	1526493	1	True				
ANR	1526519	AssignmentExpression	p -> free = NULL		1526493	0		=			
ANR	1526520	PtrMemberAccess	p -> free		1526493	0					
ANR	1526521	Identifier	p		1526493	0					
ANR	1526522	Identifier	free		1526493	1					
ANR	1526523	Identifier	NULL		1526493	1					
ANR	1526524	ExpressionStatement	p -> out_nodes = r_list_new ( )	16:2:276:304	1526493	2	True				
ANR	1526525	AssignmentExpression	p -> out_nodes = r_list_new ( )		1526493	0		=			
ANR	1526526	PtrMemberAccess	p -> out_nodes		1526493	0					
ANR	1526527	Identifier	p		1526493	0					
ANR	1526528	Identifier	out_nodes		1526493	1					
ANR	1526529	CallExpression	r_list_new ( )		1526493	1					
ANR	1526530	Callee	r_list_new		1526493	0					
ANR	1526531	Identifier	r_list_new		1526493	0					
ANR	1526532	ArgumentList			1526493	1					
ANR	1526533	ExpressionStatement	p -> in_nodes = r_list_new ( )	17:2:308:335	1526493	3	True				
ANR	1526534	AssignmentExpression	p -> in_nodes = r_list_new ( )		1526493	0		=			
ANR	1526535	PtrMemberAccess	p -> in_nodes		1526493	0					
ANR	1526536	Identifier	p		1526493	0					
ANR	1526537	Identifier	in_nodes		1526493	1					
ANR	1526538	CallExpression	r_list_new ( )		1526493	1					
ANR	1526539	Callee	r_list_new		1526493	0					
ANR	1526540	Identifier	r_list_new		1526493	0					
ANR	1526541	ArgumentList			1526493	1					
ANR	1526542	ExpressionStatement	p -> all_neighbours = r_list_new ( )	18:2:339:372	1526493	4	True				
ANR	1526543	AssignmentExpression	p -> all_neighbours = r_list_new ( )		1526493	0		=			
ANR	1526544	PtrMemberAccess	p -> all_neighbours		1526493	0					
ANR	1526545	Identifier	p		1526493	0					
ANR	1526546	Identifier	all_neighbours		1526493	1					
ANR	1526547	CallExpression	r_list_new ( )		1526493	1					
ANR	1526548	Callee	r_list_new		1526493	0					
ANR	1526549	Identifier	r_list_new		1526493	0					
ANR	1526550	ArgumentList			1526493	1					
ANR	1526551	ReturnStatement	return p ;	20:1:378:386	1526493	2	True				
ANR	1526552	Identifier	p		1526493	0					
ANR	1526553	ReturnType	static RGraphNode *		1526493	1					
ANR	1526554	Identifier	r_graph_node_new		1526493	2					
ANR	1526555	ParameterList	void * data		1526493	3					
ANR	1526556	Parameter	void * data	11:37:176:185	1526493	0	True				
ANR	1526557	ParameterType	void *		1526493	0					
ANR	1526558	Identifier	data		1526493	1					
ANR	1526559	CFGEntryNode	ENTRY		1526493		True				
ANR	1526560	CFGExitNode	EXIT		1526493		True				
ANR	1526561	Symbol	p		1526493						
ANR	1526562	Symbol	R_NEW0		1526493						
ANR	1526563	Symbol	p -> all_neighbours		1526493						
ANR	1526564	Symbol	NULL		1526493						
ANR	1526565	Symbol	data		1526493						
ANR	1526566	Symbol	p -> data		1526493						
ANR	1526567	Symbol	p -> free		1526493						
ANR	1526568	Symbol	* p		1526493						
ANR	1526569	Symbol	p -> out_nodes		1526493						
ANR	1526570	Symbol	RGraphNode		1526493						
ANR	1526571	Symbol	r_list_new		1526493						
ANR	1526572	Symbol	p -> in_nodes		1526493						
ANR	1526573	Function	r_graph_node_free	23:0:391:605							
ANR	1526574	FunctionDef	r_graph_node_free (RGraphNode * n)		1526573	0					
ANR	1526575	CompoundStatement		23:46:437:605	1526573	0					
ANR	1526576	IfStatement	if ( ! n )		1526573	0					
ANR	1526577	Condition	! n	24:5:444:445	1526573	0	True				
ANR	1526578	UnaryOperationExpression	! n		1526573	0					
ANR	1526579	UnaryOperator	!		1526573	0					
ANR	1526580	Identifier	n		1526573	1					
ANR	1526581	CompoundStatement		2:9:10:10	1526573	1					
ANR	1526582	ReturnStatement	return ;	25:2:452:458	1526573	0	True				
ANR	1526583	IfStatement	if ( n -> free )		1526573	1					
ANR	1526584	Condition	n -> free	27:5:468:474	1526573	0	True				
ANR	1526585	PtrMemberAccess	n -> free		1526573	0					
ANR	1526586	Identifier	n		1526573	0					
ANR	1526587	Identifier	free		1526573	1					
ANR	1526588	CompoundStatement		5:14:39:39	1526573	1					
ANR	1526589	ExpressionStatement	n -> free ( n -> data )	28:2:481:498	1526573	0	True				
ANR	1526590	CallExpression	n -> free ( n -> data )		1526573	0					
ANR	1526591	Callee	n -> free		1526573	0					
ANR	1526592	PtrMemberAccess	n -> free		1526573	0					
ANR	1526593	Identifier	n		1526573	0					
ANR	1526594	Identifier	free		1526573	1					
ANR	1526595	ArgumentList	n -> data		1526573	1					
ANR	1526596	Argument	n -> data		1526573	0					
ANR	1526597	PtrMemberAccess	n -> data		1526573	0					
ANR	1526598	Identifier	n		1526573	0					
ANR	1526599	Identifier	data		1526573	1					
ANR	1526600	ExpressionStatement	r_list_free ( n -> out_nodes )	30:1:504:530	1526573	2	True				
ANR	1526601	CallExpression	r_list_free ( n -> out_nodes )		1526573	0					
ANR	1526602	Callee	r_list_free		1526573	0					
ANR	1526603	Identifier	r_list_free		1526573	0					
ANR	1526604	ArgumentList	n -> out_nodes		1526573	1					
ANR	1526605	Argument	n -> out_nodes		1526573	0					
ANR	1526606	PtrMemberAccess	n -> out_nodes		1526573	0					
ANR	1526607	Identifier	n		1526573	0					
ANR	1526608	Identifier	out_nodes		1526573	1					
ANR	1526609	ExpressionStatement	r_list_free ( n -> in_nodes )	31:1:533:558	1526573	3	True				
ANR	1526610	CallExpression	r_list_free ( n -> in_nodes )		1526573	0					
ANR	1526611	Callee	r_list_free		1526573	0					
ANR	1526612	Identifier	r_list_free		1526573	0					
ANR	1526613	ArgumentList	n -> in_nodes		1526573	1					
ANR	1526614	Argument	n -> in_nodes		1526573	0					
ANR	1526615	PtrMemberAccess	n -> in_nodes		1526573	0					
ANR	1526616	Identifier	n		1526573	0					
ANR	1526617	Identifier	in_nodes		1526573	1					
ANR	1526618	ExpressionStatement	r_list_free ( n -> all_neighbours )	32:1:561:592	1526573	4	True				
ANR	1526619	CallExpression	r_list_free ( n -> all_neighbours )		1526573	0					
ANR	1526620	Callee	r_list_free		1526573	0					
ANR	1526621	Identifier	r_list_free		1526573	0					
ANR	1526622	ArgumentList	n -> all_neighbours		1526573	1					
ANR	1526623	Argument	n -> all_neighbours		1526573	0					
ANR	1526624	PtrMemberAccess	n -> all_neighbours		1526573	0					
ANR	1526625	Identifier	n		1526573	0					
ANR	1526626	Identifier	all_neighbours		1526573	1					
ANR	1526627	ExpressionStatement	free ( n )	33:1:595:603	1526573	5	True				
ANR	1526628	CallExpression	free ( n )		1526573	0					
ANR	1526629	Callee	free		1526573	0					
ANR	1526630	Identifier	free		1526573	0					
ANR	1526631	ArgumentList	n		1526573	1					
ANR	1526632	Argument	n		1526573	0					
ANR	1526633	Identifier	n		1526573	0					
ANR	1526634	ReturnType	static void		1526573	1					
ANR	1526635	Identifier	r_graph_node_free		1526573	2					
ANR	1526636	ParameterList	RGraphNode * n		1526573	3					
ANR	1526637	Parameter	RGraphNode * n	23:31:422:434	1526573	0	True				
ANR	1526638	ParameterType	RGraphNode *		1526573	0					
ANR	1526639	Identifier	n		1526573	1					
ANR	1526640	CFGEntryNode	ENTRY		1526573		True				
ANR	1526641	CFGExitNode	EXIT		1526573		True				
ANR	1526642	Symbol	n -> data		1526573						
ANR	1526643	Symbol	n -> in_nodes		1526573						
ANR	1526644	Symbol	* n		1526573						
ANR	1526645	Symbol	n -> free		1526573						
ANR	1526646	Symbol	n -> out_nodes		1526573						
ANR	1526647	Symbol	n -> all_neighbours		1526573						
ANR	1526648	Symbol	n		1526573						
ANR	1526649	Function	node_cmp	36:0:608:696							
ANR	1526650	FunctionDef	"node_cmp (unsigned int idx , RGraphNode * b)"		1526649	0					
ANR	1526651	CompoundStatement		36:54:662:696	1526649	0					
ANR	1526652	ReturnStatement	return idx == b -> idx ? 0 : - 1 ;	37:1:665:694	1526649	0	True				
ANR	1526653	ConditionalExpression	idx == b -> idx ? 0 : - 1		1526649	0					
ANR	1526654	Condition	idx == b -> idx		1526649	0					
ANR	1526655	EqualityExpression	idx == b -> idx		1526649	0		==			
ANR	1526656	Identifier	idx		1526649	0					
ANR	1526657	PtrMemberAccess	b -> idx		1526649	1					
ANR	1526658	Identifier	b		1526649	0					
ANR	1526659	Identifier	idx		1526649	1					
ANR	1526660	PrimaryExpression	0		1526649	1					
ANR	1526661	UnaryOperationExpression	- 1		1526649	2					
ANR	1526662	UnaryOperator	-		1526649	0					
ANR	1526663	PrimaryExpression	1		1526649	1					
ANR	1526664	ReturnType	static int		1526649	1					
ANR	1526665	Identifier	node_cmp		1526649	2					
ANR	1526666	ParameterList	"unsigned int idx , RGraphNode * b"		1526649	3					
ANR	1526667	Parameter	unsigned int idx	36:21:629:644	1526649	0	True				
ANR	1526668	ParameterType	unsigned int		1526649	0					
ANR	1526669	Identifier	idx		1526649	1					
ANR	1526670	Parameter	RGraphNode * b	36:39:647:659	1526649	1	True				
ANR	1526671	ParameterType	RGraphNode *		1526649	0					
ANR	1526672	Identifier	b		1526649	1					
ANR	1526673	CFGEntryNode	ENTRY		1526649		True				
ANR	1526674	CFGExitNode	EXIT		1526649		True				
ANR	1526675	Symbol	b		1526649						
ANR	1526676	Symbol	b -> idx		1526649						
ANR	1526677	Symbol	idx		1526649						
ANR	1526678	Symbol	* b		1526649						
ANR	1526679	Function	dfs_node	40:0:699:2235							
ANR	1526680	FunctionDef	"dfs_node (RGraph * g , RGraphNode * n , RGraphVisitor * vis , int color [ ])"		1526679	0					
ANR	1526681	CompoundStatement		40:81:780:2235	1526679	0					
ANR	1526682	IdentifierDeclStatement	RStack * s = r_stack_new ( 2 * g -> n_edges + 1 ) ;	41:1:783:827	1526679	0	True				
ANR	1526683	IdentifierDecl	* s = r_stack_new ( 2 * g -> n_edges + 1 )		1526679	0					
ANR	1526684	IdentifierDeclType	RStack *		1526679	0					
ANR	1526685	Identifier	s		1526679	1					
ANR	1526686	AssignmentExpression	* s = r_stack_new ( 2 * g -> n_edges + 1 )		1526679	2		=			
ANR	1526687	Identifier	s		1526679	0					
ANR	1526688	CallExpression	r_stack_new ( 2 * g -> n_edges + 1 )		1526679	1					
ANR	1526689	Callee	r_stack_new		1526679	0					
ANR	1526690	Identifier	r_stack_new		1526679	0					
ANR	1526691	ArgumentList	2 * g -> n_edges + 1		1526679	1					
ANR	1526692	Argument	2 * g -> n_edges + 1		1526679	0					
ANR	1526693	AdditiveExpression	2 * g -> n_edges + 1		1526679	0		+			
ANR	1526694	MultiplicativeExpression	2 * g -> n_edges		1526679	0		*			
ANR	1526695	PrimaryExpression	2		1526679	0					
ANR	1526696	PtrMemberAccess	g -> n_edges		1526679	1					
ANR	1526697	Identifier	g		1526679	0					
ANR	1526698	Identifier	n_edges		1526679	1					
ANR	1526699	PrimaryExpression	1		1526679	1					
ANR	1526700	IfStatement	if ( ! s )		1526679	1					
ANR	1526701	Condition	! s	42:5:834:835	1526679	0	True				
ANR	1526702	UnaryOperationExpression	! s		1526679	0					
ANR	1526703	UnaryOperator	!		1526679	0					
ANR	1526704	Identifier	s		1526679	1					
ANR	1526705	CompoundStatement		3:9:57:57	1526679	1					
ANR	1526706	ReturnStatement	return ;	43:2:842:848	1526679	0	True				
ANR	1526707	IdentifierDeclStatement	RGraphEdge * edg = R_NEW0 ( RGraphEdge ) ;	45:1:854:891	1526679	2	True				
ANR	1526708	IdentifierDecl	* edg = R_NEW0 ( RGraphEdge )		1526679	0					
ANR	1526709	IdentifierDeclType	RGraphEdge *		1526679	0					
ANR	1526710	Identifier	edg		1526679	1					
ANR	1526711	AssignmentExpression	* edg = R_NEW0 ( RGraphEdge )		1526679	2		=			
ANR	1526712	Identifier	edg		1526679	0					
ANR	1526713	CallExpression	R_NEW0 ( RGraphEdge )		1526679	1					
ANR	1526714	Callee	R_NEW0		1526679	0					
ANR	1526715	Identifier	R_NEW0		1526679	0					
ANR	1526716	ArgumentList	RGraphEdge		1526679	1					
ANR	1526717	Argument	RGraphEdge		1526679	0					
ANR	1526718	Identifier	RGraphEdge		1526679	0					
ANR	1526719	IfStatement	if ( ! edg )		1526679	3					
ANR	1526720	Condition	! edg	46:5:898:901	1526679	0	True				
ANR	1526721	UnaryOperationExpression	! edg		1526679	0					
ANR	1526722	UnaryOperator	!		1526679	0					
ANR	1526723	Identifier	edg		1526679	1					
ANR	1526724	CompoundStatement		7:11:123:123	1526679	1					
ANR	1526725	ExpressionStatement	r_stack_free ( s )	47:2:908:924	1526679	0	True				
ANR	1526726	CallExpression	r_stack_free ( s )		1526679	0					
ANR	1526727	Callee	r_stack_free		1526679	0					
ANR	1526728	Identifier	r_stack_free		1526679	0					
ANR	1526729	ArgumentList	s		1526679	1					
ANR	1526730	Argument	s		1526679	0					
ANR	1526731	Identifier	s		1526679	0					
ANR	1526732	ReturnStatement	return ;	48:2:928:934	1526679	1	True				
ANR	1526733	ExpressionStatement	edg -> from = NULL	50:1:940:956	1526679	4	True				
ANR	1526734	AssignmentExpression	edg -> from = NULL		1526679	0		=			
ANR	1526735	PtrMemberAccess	edg -> from		1526679	0					
ANR	1526736	Identifier	edg		1526679	0					
ANR	1526737	Identifier	from		1526679	1					
ANR	1526738	Identifier	NULL		1526679	1					
ANR	1526739	ExpressionStatement	edg -> to = n	51:1:959:970	1526679	5	True				
ANR	1526740	AssignmentExpression	edg -> to = n		1526679	0		=			
ANR	1526741	PtrMemberAccess	edg -> to		1526679	0					
ANR	1526742	Identifier	edg		1526679	0					
ANR	1526743	Identifier	to		1526679	1					
ANR	1526744	Identifier	n		1526679	1					
ANR	1526745	ExpressionStatement	"r_stack_push ( s , edg )"	52:1:973:994	1526679	6	True				
ANR	1526746	CallExpression	"r_stack_push ( s , edg )"		1526679	0					
ANR	1526747	Callee	r_stack_push		1526679	0					
ANR	1526748	Identifier	r_stack_push		1526679	0					
ANR	1526749	ArgumentList	s		1526679	1					
ANR	1526750	Argument	s		1526679	0					
ANR	1526751	Identifier	s		1526679	0					
ANR	1526752	Argument	edg		1526679	1					
ANR	1526753	Identifier	edg		1526679	0					
ANR	1526754	WhileStatement	while ( ! r_stack_is_empty ( s ) )		1526679	7					
ANR	1526755	Condition	! r_stack_is_empty ( s )	53:8:1004:1024	1526679	0	True				
ANR	1526756	UnaryOperationExpression	! r_stack_is_empty ( s )		1526679	0					
ANR	1526757	UnaryOperator	!		1526679	0					
ANR	1526758	CallExpression	r_stack_is_empty ( s )		1526679	1					
ANR	1526759	Callee	r_stack_is_empty		1526679	0					
ANR	1526760	Identifier	r_stack_is_empty		1526679	0					
ANR	1526761	ArgumentList	s		1526679	1					
ANR	1526762	Argument	s		1526679	0					
ANR	1526763	Identifier	s		1526679	0					
ANR	1526764	CompoundStatement		51:2:1220:1277	1526679	1					
ANR	1526765	IdentifierDeclStatement	RGraphEdge * cur_edge = ( RGraphEdge * ) r_stack_pop ( s ) ;	54:2:1031:1083	1526679	0	True				
ANR	1526766	IdentifierDecl	* cur_edge = ( RGraphEdge * ) r_stack_pop ( s )		1526679	0					
ANR	1526767	IdentifierDeclType	RGraphEdge *		1526679	0					
ANR	1526768	Identifier	cur_edge		1526679	1					
ANR	1526769	AssignmentExpression	* cur_edge = ( RGraphEdge * ) r_stack_pop ( s )		1526679	2		=			
ANR	1526770	Identifier	cur_edge		1526679	0					
ANR	1526771	CastExpression	( RGraphEdge * ) r_stack_pop ( s )		1526679	1					
ANR	1526772	CastTarget	RGraphEdge *		1526679	0					
ANR	1526773	CallExpression	r_stack_pop ( s )		1526679	1					
ANR	1526774	Callee	r_stack_pop		1526679	0					
ANR	1526775	Identifier	r_stack_pop		1526679	0					
ANR	1526776	ArgumentList	s		1526679	1					
ANR	1526777	Argument	s		1526679	0					
ANR	1526778	Identifier	s		1526679	0					
ANR	1526779	IdentifierDeclStatement	"RGraphNode * v , * cur = cur_edge -> to , * from = cur_edge -> from ;"	55:2:1087:1145	1526679	1	True				
ANR	1526780	IdentifierDecl	* v		1526679	0					
ANR	1526781	IdentifierDeclType	RGraphNode *		1526679	0					
ANR	1526782	Identifier	v		1526679	1					
ANR	1526783	IdentifierDecl	* cur = cur_edge -> to		1526679	1					
ANR	1526784	IdentifierDeclType	RGraphNode *		1526679	0					
ANR	1526785	Identifier	cur		1526679	1					
ANR	1526786	AssignmentExpression	* cur = cur_edge -> to		1526679	2		=			
ANR	1526787	Identifier	cur		1526679	0					
ANR	1526788	PtrMemberAccess	cur_edge -> to		1526679	1					
ANR	1526789	Identifier	cur_edge		1526679	0					
ANR	1526790	Identifier	to		1526679	1					
ANR	1526791	IdentifierDecl	* from = cur_edge -> from		1526679	2					
ANR	1526792	IdentifierDeclType	RGraphNode *		1526679	0					
ANR	1526793	Identifier	from		1526679	1					
ANR	1526794	AssignmentExpression	* from = cur_edge -> from		1526679	2		=			
ANR	1526795	Identifier	from		1526679	0					
ANR	1526796	PtrMemberAccess	cur_edge -> from		1526679	1					
ANR	1526797	Identifier	cur_edge		1526679	0					
ANR	1526798	Identifier	from		1526679	1					
ANR	1526799	IdentifierDeclStatement	RListIter * it ;	56:2:1149:1162	1526679	2	True				
ANR	1526800	IdentifierDecl	* it		1526679	0					
ANR	1526801	IdentifierDeclType	RListIter *		1526679	0					
ANR	1526802	Identifier	it		1526679	1					
ANR	1526803	IdentifierDeclStatement	int i ;	57:2:1166:1171	1526679	3	True				
ANR	1526804	IdentifierDecl	i		1526679	0					
ANR	1526805	IdentifierDeclType	int		1526679	0					
ANR	1526806	Identifier	i		1526679	1					
ANR	1526807	IfStatement	if ( from && cur )		1526679	4					
ANR	1526808	Condition	from && cur	59:6:1180:1190	1526679	0	True				
ANR	1526809	AndExpression	from && cur		1526679	0		&&			
ANR	1526810	Identifier	from		1526679	0					
ANR	1526811	Identifier	cur		1526679	1					
ANR	1526812	CompoundStatement		20:19:412:412	1526679	1					
ANR	1526813	IfStatement	if ( color [ cur -> idx ] == WHITE_COLOR && vis -> tree_edge )		1526679	0					
ANR	1526814	Condition	color [ cur -> idx ] == WHITE_COLOR && vis -> tree_edge	60:7:1202:1249	1526679	0	True				
ANR	1526815	AndExpression	color [ cur -> idx ] == WHITE_COLOR && vis -> tree_edge		1526679	0		&&			
ANR	1526816	EqualityExpression	color [ cur -> idx ] == WHITE_COLOR		1526679	0		==			
ANR	1526817	ArrayIndexing	color [ cur -> idx ]		1526679	0					
ANR	1526818	Identifier	color		1526679	0					
ANR	1526819	PtrMemberAccess	cur -> idx		1526679	1					
ANR	1526820	Identifier	cur		1526679	0					
ANR	1526821	Identifier	idx		1526679	1					
ANR	1526822	Identifier	WHITE_COLOR		1526679	1					
ANR	1526823	PtrMemberAccess	vis -> tree_edge		1526679	1					
ANR	1526824	Identifier	vis		1526679	0					
ANR	1526825	Identifier	tree_edge		1526679	1					
ANR	1526826	CompoundStatement		21:57:471:471	1526679	1					
ANR	1526827	ExpressionStatement	"vis -> tree_edge ( cur_edge , vis )"	61:4:1258:1288	1526679	0	True				
ANR	1526828	CallExpression	"vis -> tree_edge ( cur_edge , vis )"		1526679	0					
ANR	1526829	Callee	vis -> tree_edge		1526679	0					
ANR	1526830	PtrMemberAccess	vis -> tree_edge		1526679	0					
ANR	1526831	Identifier	vis		1526679	0					
ANR	1526832	Identifier	tree_edge		1526679	1					
ANR	1526833	ArgumentList	cur_edge		1526679	1					
ANR	1526834	Argument	cur_edge		1526679	0					
ANR	1526835	Identifier	cur_edge		1526679	0					
ANR	1526836	Argument	vis		1526679	1					
ANR	1526837	Identifier	vis		1526679	0					
ANR	1526838	ElseStatement	else		1526679	0					
ANR	1526839	IfStatement	if ( color [ cur -> idx ] == GRAY_COLOR && vis -> back_edge )		1526679	0					
ANR	1526840	Condition	color [ cur -> idx ] == GRAY_COLOR && vis -> back_edge	62:14:1304:1350	1526679	0	True				
ANR	1526841	AndExpression	color [ cur -> idx ] == GRAY_COLOR && vis -> back_edge		1526679	0		&&			
ANR	1526842	EqualityExpression	color [ cur -> idx ] == GRAY_COLOR		1526679	0		==			
ANR	1526843	ArrayIndexing	color [ cur -> idx ]		1526679	0					
ANR	1526844	Identifier	color		1526679	0					
ANR	1526845	PtrMemberAccess	cur -> idx		1526679	1					
ANR	1526846	Identifier	cur		1526679	0					
ANR	1526847	Identifier	idx		1526679	1					
ANR	1526848	Identifier	GRAY_COLOR		1526679	1					
ANR	1526849	PtrMemberAccess	vis -> back_edge		1526679	1					
ANR	1526850	Identifier	vis		1526679	0					
ANR	1526851	Identifier	back_edge		1526679	1					
ANR	1526852	CompoundStatement		23:63:572:572	1526679	1					
ANR	1526853	ExpressionStatement	"vis -> back_edge ( cur_edge , vis )"	63:4:1359:1389	1526679	0	True				
ANR	1526854	CallExpression	"vis -> back_edge ( cur_edge , vis )"		1526679	0					
ANR	1526855	Callee	vis -> back_edge		1526679	0					
ANR	1526856	PtrMemberAccess	vis -> back_edge		1526679	0					
ANR	1526857	Identifier	vis		1526679	0					
ANR	1526858	Identifier	back_edge		1526679	1					
ANR	1526859	ArgumentList	cur_edge		1526679	1					
ANR	1526860	Argument	cur_edge		1526679	0					
ANR	1526861	Identifier	cur_edge		1526679	0					
ANR	1526862	Argument	vis		1526679	1					
ANR	1526863	Identifier	vis		1526679	0					
ANR	1526864	ElseStatement	else		1526679	0					
ANR	1526865	IfStatement	if ( color [ cur -> idx ] == BLACK_COLOR && vis -> fcross_edge )		1526679	0					
ANR	1526866	Condition	color [ cur -> idx ] == BLACK_COLOR && vis -> fcross_edge	64:14:1405:1454	1526679	0	True				
ANR	1526867	AndExpression	color [ cur -> idx ] == BLACK_COLOR && vis -> fcross_edge		1526679	0		&&			
ANR	1526868	EqualityExpression	color [ cur -> idx ] == BLACK_COLOR		1526679	0		==			
ANR	1526869	ArrayIndexing	color [ cur -> idx ]		1526679	0					
ANR	1526870	Identifier	color		1526679	0					
ANR	1526871	PtrMemberAccess	cur -> idx		1526679	1					
ANR	1526872	Identifier	cur		1526679	0					
ANR	1526873	Identifier	idx		1526679	1					
ANR	1526874	Identifier	BLACK_COLOR		1526679	1					
ANR	1526875	PtrMemberAccess	vis -> fcross_edge		1526679	1					
ANR	1526876	Identifier	vis		1526679	0					
ANR	1526877	Identifier	fcross_edge		1526679	1					
ANR	1526878	CompoundStatement		25:66:676:676	1526679	1					
ANR	1526879	ExpressionStatement	"vis -> fcross_edge ( cur_edge , vis )"	65:4:1463:1495	1526679	0	True				
ANR	1526880	CallExpression	"vis -> fcross_edge ( cur_edge , vis )"		1526679	0					
ANR	1526881	Callee	vis -> fcross_edge		1526679	0					
ANR	1526882	PtrMemberAccess	vis -> fcross_edge		1526679	0					
ANR	1526883	Identifier	vis		1526679	0					
ANR	1526884	Identifier	fcross_edge		1526679	1					
ANR	1526885	ArgumentList	cur_edge		1526679	1					
ANR	1526886	Argument	cur_edge		1526679	0					
ANR	1526887	Identifier	cur_edge		1526679	0					
ANR	1526888	Argument	vis		1526679	1					
ANR	1526889	Identifier	vis		1526679	0					
ANR	1526890	ElseStatement	else		1526679	0					
ANR	1526891	IfStatement	if ( ! cur && from )		1526679	0					
ANR	1526892	Condition	! cur && from	67:13:1515:1526	1526679	0	True				
ANR	1526893	AndExpression	! cur && from		1526679	0		&&			
ANR	1526894	UnaryOperationExpression	! cur		1526679	0					
ANR	1526895	UnaryOperator	!		1526679	0					
ANR	1526896	Identifier	cur		1526679	1					
ANR	1526897	Identifier	from		1526679	1					
ANR	1526898	CompoundStatement		28:27:748:748	1526679	1					
ANR	1526899	IfStatement	if ( color [ from -> idx ] != BLACK_COLOR && vis -> finish_node )		1526679	0					
ANR	1526900	Condition	color [ from -> idx ] != BLACK_COLOR && vis -> finish_node	68:7:1538:1588	1526679	0	True				
ANR	1526901	AndExpression	color [ from -> idx ] != BLACK_COLOR && vis -> finish_node		1526679	0		&&			
ANR	1526902	EqualityExpression	color [ from -> idx ] != BLACK_COLOR		1526679	0		!=			
ANR	1526903	ArrayIndexing	color [ from -> idx ]		1526679	0					
ANR	1526904	Identifier	color		1526679	0					
ANR	1526905	PtrMemberAccess	from -> idx		1526679	1					
ANR	1526906	Identifier	from		1526679	0					
ANR	1526907	Identifier	idx		1526679	1					
ANR	1526908	Identifier	BLACK_COLOR		1526679	1					
ANR	1526909	PtrMemberAccess	vis -> finish_node		1526679	1					
ANR	1526910	Identifier	vis		1526679	0					
ANR	1526911	Identifier	finish_node		1526679	1					
ANR	1526912	CompoundStatement		29:60:810:810	1526679	1					
ANR	1526913	ExpressionStatement	"vis -> finish_node ( from , vis )"	69:4:1597:1625	1526679	0	True				
ANR	1526914	CallExpression	"vis -> finish_node ( from , vis )"		1526679	0					
ANR	1526915	Callee	vis -> finish_node		1526679	0					
ANR	1526916	PtrMemberAccess	vis -> finish_node		1526679	0					
ANR	1526917	Identifier	vis		1526679	0					
ANR	1526918	Identifier	finish_node		1526679	1					
ANR	1526919	ArgumentList	from		1526679	1					
ANR	1526920	Argument	from		1526679	0					
ANR	1526921	Identifier	from		1526679	0					
ANR	1526922	Argument	vis		1526679	1					
ANR	1526923	Identifier	vis		1526679	0					
ANR	1526924	ExpressionStatement	color [ from -> idx ] = BLACK_COLOR	71:3:1635:1665	1526679	1	True				
ANR	1526925	AssignmentExpression	color [ from -> idx ] = BLACK_COLOR		1526679	0		=			
ANR	1526926	ArrayIndexing	color [ from -> idx ]		1526679	0					
ANR	1526927	Identifier	color		1526679	0					
ANR	1526928	PtrMemberAccess	from -> idx		1526679	1					
ANR	1526929	Identifier	from		1526679	0					
ANR	1526930	Identifier	idx		1526679	1					
ANR	1526931	Identifier	BLACK_COLOR		1526679	1					
ANR	1526932	ExpressionStatement	free ( cur_edge )	73:2:1673:1688	1526679	5	True				
ANR	1526933	CallExpression	free ( cur_edge )		1526679	0					
ANR	1526934	Callee	free		1526679	0					
ANR	1526935	Identifier	free		1526679	0					
ANR	1526936	ArgumentList	cur_edge		1526679	1					
ANR	1526937	Argument	cur_edge		1526679	0					
ANR	1526938	Identifier	cur_edge		1526679	0					
ANR	1526939	IfStatement	if ( ! cur || color [ cur -> idx ] != WHITE_COLOR )		1526679	6					
ANR	1526940	Condition	! cur || color [ cur -> idx ] != WHITE_COLOR	74:6:1696:1733	1526679	0	True				
ANR	1526941	OrExpression	! cur || color [ cur -> idx ] != WHITE_COLOR		1526679	0		||			
ANR	1526942	UnaryOperationExpression	! cur		1526679	0					
ANR	1526943	UnaryOperator	!		1526679	0					
ANR	1526944	Identifier	cur		1526679	1					
ANR	1526945	EqualityExpression	color [ cur -> idx ] != WHITE_COLOR		1526679	1		!=			
ANR	1526946	ArrayIndexing	color [ cur -> idx ]		1526679	0					
ANR	1526947	Identifier	color		1526679	0					
ANR	1526948	PtrMemberAccess	cur -> idx		1526679	1					
ANR	1526949	Identifier	cur		1526679	0					
ANR	1526950	Identifier	idx		1526679	1					
ANR	1526951	Identifier	WHITE_COLOR		1526679	1					
ANR	1526952	CompoundStatement		35:46:955:955	1526679	1					
ANR	1526953	ContinueStatement	continue ;	75:3:1741:1749	1526679	0	True				
ANR	1526954	IfStatement	if ( color [ cur -> idx ] == WHITE_COLOR && vis -> discover_node )		1526679	7					
ANR	1526955	Condition	color [ cur -> idx ] == WHITE_COLOR && vis -> discover_node	77:6:1761:1812	1526679	0	True				
ANR	1526956	AndExpression	color [ cur -> idx ] == WHITE_COLOR && vis -> discover_node		1526679	0		&&			
ANR	1526957	EqualityExpression	color [ cur -> idx ] == WHITE_COLOR		1526679	0		==			
ANR	1526958	ArrayIndexing	color [ cur -> idx ]		1526679	0					
ANR	1526959	Identifier	color		1526679	0					
ANR	1526960	PtrMemberAccess	cur -> idx		1526679	1					
ANR	1526961	Identifier	cur		1526679	0					
ANR	1526962	Identifier	idx		1526679	1					
ANR	1526963	Identifier	WHITE_COLOR		1526679	1					
ANR	1526964	PtrMemberAccess	vis -> discover_node		1526679	1					
ANR	1526965	Identifier	vis		1526679	0					
ANR	1526966	Identifier	discover_node		1526679	1					
ANR	1526967	CompoundStatement		38:60:1034:1034	1526679	1					
ANR	1526968	ExpressionStatement	"vis -> discover_node ( cur , vis )"	78:3:1820:1849	1526679	0	True				
ANR	1526969	CallExpression	"vis -> discover_node ( cur , vis )"		1526679	0					
ANR	1526970	Callee	vis -> discover_node		1526679	0					
ANR	1526971	PtrMemberAccess	vis -> discover_node		1526679	0					
ANR	1526972	Identifier	vis		1526679	0					
ANR	1526973	Identifier	discover_node		1526679	1					
ANR	1526974	ArgumentList	cur		1526679	1					
ANR	1526975	Argument	cur		1526679	0					
ANR	1526976	Identifier	cur		1526679	0					
ANR	1526977	Argument	vis		1526679	1					
ANR	1526978	Identifier	vis		1526679	0					
ANR	1526979	ExpressionStatement	color [ cur -> idx ] = GRAY_COLOR	80:2:1857:1885	1526679	8	True				
ANR	1526980	AssignmentExpression	color [ cur -> idx ] = GRAY_COLOR		1526679	0		=			
ANR	1526981	ArrayIndexing	color [ cur -> idx ]		1526679	0					
ANR	1526982	Identifier	color		1526679	0					
ANR	1526983	PtrMemberAccess	cur -> idx		1526679	1					
ANR	1526984	Identifier	cur		1526679	0					
ANR	1526985	Identifier	idx		1526679	1					
ANR	1526986	Identifier	GRAY_COLOR		1526679	1					
ANR	1526987	ExpressionStatement	edg = R_NEW0 ( RGraphEdge )	82:2:1890:1915	1526679	9	True				
ANR	1526988	AssignmentExpression	edg = R_NEW0 ( RGraphEdge )		1526679	0		=			
ANR	1526989	Identifier	edg		1526679	0					
ANR	1526990	CallExpression	R_NEW0 ( RGraphEdge )		1526679	1					
ANR	1526991	Callee	R_NEW0		1526679	0					
ANR	1526992	Identifier	R_NEW0		1526679	0					
ANR	1526993	ArgumentList	RGraphEdge		1526679	1					
ANR	1526994	Argument	RGraphEdge		1526679	0					
ANR	1526995	Identifier	RGraphEdge		1526679	0					
ANR	1526996	IfStatement	if ( ! edg )		1526679	10					
ANR	1526997	Condition	! edg	83:6:1923:1926	1526679	0	True				
ANR	1526998	UnaryOperationExpression	! edg		1526679	0					
ANR	1526999	UnaryOperator	!		1526679	0					
ANR	1527000	Identifier	edg		1526679	1					
ANR	1527001	CompoundStatement		44:12:1148:1148	1526679	1					
ANR	1527002	BreakStatement	break ;	84:3:1934:1939	1526679	0	True				
ANR	1527003	ExpressionStatement	edg -> from = cur	86:2:1947:1962	1526679	11	True				
ANR	1527004	AssignmentExpression	edg -> from = cur		1526679	0		=			
ANR	1527005	PtrMemberAccess	edg -> from		1526679	0					
ANR	1527006	Identifier	edg		1526679	0					
ANR	1527007	Identifier	from		1526679	1					
ANR	1527008	Identifier	cur		1526679	1					
ANR	1527009	ExpressionStatement	"r_stack_push ( s , edg )"	87:2:1966:1987	1526679	12	True				
ANR	1527010	CallExpression	"r_stack_push ( s , edg )"		1526679	0					
ANR	1527011	Callee	r_stack_push		1526679	0					
ANR	1527012	Identifier	r_stack_push		1526679	0					
ANR	1527013	ArgumentList	s		1526679	1					
ANR	1527014	Argument	s		1526679	0					
ANR	1527015	Identifier	s		1526679	0					
ANR	1527016	Argument	edg		1526679	1					
ANR	1527017	Identifier	edg		1526679	0					
ANR	1527018	ExpressionStatement	i = 0	89:2:1992:1997	1526679	13	True				
ANR	1527019	AssignmentExpression	i = 0		1526679	0		=			
ANR	1527020	Identifier	i		1526679	0					
ANR	1527021	PrimaryExpression	0		1526679	1					
ANR	1527022	IdentifierDeclStatement	"const RList * neighbours = r_graph_get_neighbours ( g , cur ) ;"	90:2:2001:2058	1526679	14	True				
ANR	1527023	IdentifierDecl	"* neighbours = r_graph_get_neighbours ( g , cur )"		1526679	0					
ANR	1527024	IdentifierDeclType	const RList *		1526679	0					
ANR	1527025	Identifier	neighbours		1526679	1					
ANR	1527026	AssignmentExpression	"* neighbours = r_graph_get_neighbours ( g , cur )"		1526679	2		=			
ANR	1527027	Identifier	neighbours		1526679	0					
ANR	1527028	CallExpression	"r_graph_get_neighbours ( g , cur )"		1526679	1					
ANR	1527029	Callee	r_graph_get_neighbours		1526679	0					
ANR	1527030	Identifier	r_graph_get_neighbours		1526679	0					
ANR	1527031	ArgumentList	g		1526679	1					
ANR	1527032	Argument	g		1526679	0					
ANR	1527033	Identifier	g		1526679	0					
ANR	1527034	Argument	cur		1526679	1					
ANR	1527035	Identifier	cur		1526679	0					
ANR	1527036	Statement	r_list_foreach	91:2:2062:2075	1526679	15	True				
ANR	1527037	Statement	(	91:17:2077:2077	1526679	16	True				
ANR	1527038	Statement	neighbours	91:18:2078:2087	1526679	17	True				
ANR	1527039	Statement	","	91:28:2088:2088	1526679	18	True				
ANR	1527040	Statement	it	91:30:2090:2091	1526679	19	True				
ANR	1527041	Statement	","	91:32:2092:2092	1526679	20	True				
ANR	1527042	Statement	v	91:34:2094:2094	1526679	21	True				
ANR	1527043	Statement	)	91:35:2095:2095	1526679	22	True				
ANR	1527044	CompoundStatement		52:37:1316:1316	1526679	23					
ANR	1527045	ExpressionStatement	edg = R_NEW ( RGraphEdge )	92:3:2102:2126	1526679	0	True				
ANR	1527046	AssignmentExpression	edg = R_NEW ( RGraphEdge )		1526679	0		=			
ANR	1527047	Identifier	edg		1526679	0					
ANR	1527048	CallExpression	R_NEW ( RGraphEdge )		1526679	1					
ANR	1527049	Callee	R_NEW		1526679	0					
ANR	1527050	Identifier	R_NEW		1526679	0					
ANR	1527051	ArgumentList	RGraphEdge		1526679	1					
ANR	1527052	Argument	RGraphEdge		1526679	0					
ANR	1527053	Identifier	RGraphEdge		1526679	0					
ANR	1527054	ExpressionStatement	edg -> from = cur	93:3:2131:2146	1526679	1	True				
ANR	1527055	AssignmentExpression	edg -> from = cur		1526679	0		=			
ANR	1527056	PtrMemberAccess	edg -> from		1526679	0					
ANR	1527057	Identifier	edg		1526679	0					
ANR	1527058	Identifier	from		1526679	1					
ANR	1527059	Identifier	cur		1526679	1					
ANR	1527060	ExpressionStatement	edg -> to = v	94:3:2151:2162	1526679	2	True				
ANR	1527061	AssignmentExpression	edg -> to = v		1526679	0		=			
ANR	1527062	PtrMemberAccess	edg -> to		1526679	0					
ANR	1527063	Identifier	edg		1526679	0					
ANR	1527064	Identifier	to		1526679	1					
ANR	1527065	Identifier	v		1526679	1					
ANR	1527066	ExpressionStatement	edg -> nth = i ++	95:3:2167:2181	1526679	3	True				
ANR	1527067	AssignmentExpression	edg -> nth = i ++		1526679	0		=			
ANR	1527068	PtrMemberAccess	edg -> nth		1526679	0					
ANR	1527069	Identifier	edg		1526679	0					
ANR	1527070	Identifier	nth		1526679	1					
ANR	1527071	PostIncDecOperationExpression	i ++		1526679	1					
ANR	1527072	Identifier	i		1526679	0					
ANR	1527073	IncDec	++		1526679	1					
ANR	1527074	ExpressionStatement	"r_stack_push ( s , edg )"	96:3:2186:2207	1526679	4	True				
ANR	1527075	CallExpression	"r_stack_push ( s , edg )"		1526679	0					
ANR	1527076	Callee	r_stack_push		1526679	0					
ANR	1527077	Identifier	r_stack_push		1526679	0					
ANR	1527078	ArgumentList	s		1526679	1					
ANR	1527079	Argument	s		1526679	0					
ANR	1527080	Identifier	s		1526679	0					
ANR	1527081	Argument	edg		1526679	1					
ANR	1527082	Identifier	edg		1526679	0					
ANR	1527083	ExpressionStatement	r_stack_free ( s )	99:1:2217:2233	1526679	8	True				
ANR	1527084	CallExpression	r_stack_free ( s )		1526679	0					
ANR	1527085	Callee	r_stack_free		1526679	0					
ANR	1527086	Identifier	r_stack_free		1526679	0					
ANR	1527087	ArgumentList	s		1526679	1					
ANR	1527088	Argument	s		1526679	0					
ANR	1527089	Identifier	s		1526679	0					
ANR	1527090	ReturnType	static void		1526679	1					
ANR	1527091	Identifier	dfs_node		1526679	2					
ANR	1527092	ParameterList	"RGraph * g , RGraphNode * n , RGraphVisitor * vis , int color [ ]"		1526679	3					
ANR	1527093	Parameter	RGraph * g	40:22:721:729	1526679	0	True				
ANR	1527094	ParameterType	RGraph *		1526679	0					
ANR	1527095	Identifier	g		1526679	1					
ANR	1527096	Parameter	RGraphNode * n	40:33:732:744	1526679	1	True				
ANR	1527097	ParameterType	RGraphNode *		1526679	0					
ANR	1527098	Identifier	n		1526679	1					
ANR	1527099	Parameter	RGraphVisitor * vis	40:48:747:764	1526679	2	True				
ANR	1527100	ParameterType	RGraphVisitor *		1526679	0					
ANR	1527101	Identifier	vis		1526679	1					
ANR	1527102	Parameter	int color [ ]	40:68:767:777	1526679	3	True				
ANR	1527103	ParameterType	int [ ]		1526679	0					
ANR	1527104	Identifier	color		1526679	1					
ANR	1527105	CFGEntryNode	ENTRY		1526679		True				
ANR	1527106	CFGExitNode	EXIT		1526679		True				
ANR	1527107	Symbol	cur		1526679						
ANR	1527108	Symbol	* * from		1526679						
ANR	1527109	Symbol	color		1526679						
ANR	1527110	Symbol	RGraphEdge		1526679						
ANR	1527111	Symbol	r_graph_get_neighbours		1526679						
ANR	1527112	Symbol	r_stack_new		1526679						
ANR	1527113	Symbol	* cur_edge		1526679						
ANR	1527114	Symbol	* vis		1526679						
ANR	1527115	Symbol	WHITE_COLOR		1526679						
ANR	1527116	Symbol	cur -> idx		1526679						
ANR	1527117	Symbol	* from -> idx		1526679						
ANR	1527118	Symbol	edg -> from		1526679						
ANR	1527119	Symbol	vis -> fcross_edge		1526679						
ANR	1527120	Symbol	* * cur		1526679						
ANR	1527121	Symbol	BLACK_COLOR		1526679						
ANR	1527122	Symbol	* cur		1526679						
ANR	1527123	Symbol	GRAY_COLOR		1526679						
ANR	1527124	Symbol	g -> n_edges		1526679						
ANR	1527125	Symbol	r_stack_pop		1526679						
ANR	1527126	Symbol	vis -> discover_node		1526679						
ANR	1527127	Symbol	from		1526679						
ANR	1527128	Symbol	edg -> to		1526679						
ANR	1527129	Symbol	r_stack_is_empty		1526679						
ANR	1527130	Symbol	cur_edge		1526679						
ANR	1527131	Symbol	cur_edge -> from		1526679						
ANR	1527132	Symbol	* cur -> idx		1526679						
ANR	1527133	Symbol	vis -> finish_node		1526679						
ANR	1527134	Symbol	vis		1526679						
ANR	1527135	Symbol	NULL		1526679						
ANR	1527136	Symbol	vis -> tree_edge		1526679						
ANR	1527137	Symbol	g		1526679						
ANR	1527138	Symbol	edg		1526679						
ANR	1527139	Symbol	i		1526679						
ANR	1527140	Symbol	* color		1526679						
ANR	1527141	Symbol	neighbours		1526679						
ANR	1527142	Symbol	it		1526679						
ANR	1527143	Symbol	* edg		1526679						
ANR	1527144	Symbol	n		1526679						
ANR	1527145	Symbol	from -> idx		1526679						
ANR	1527146	Symbol	cur_edge -> to		1526679						
ANR	1527147	Symbol	vis -> back_edge		1526679						
ANR	1527148	Symbol	* g		1526679						
ANR	1527149	Symbol	R_NEW0		1526679						
ANR	1527150	Symbol	edg -> nth		1526679						
ANR	1527151	Symbol	s		1526679						
ANR	1527152	Symbol	v		1526679						
ANR	1527153	Symbol	R_NEW		1526679						
ANR	1527154	Symbol	* from		1526679						
ANR	1527155	Function	r_graph_new	102:0:2238:2506							
ANR	1527156	FunctionDef	r_graph_new ()		1527155	0					
ANR	1527157	CompoundStatement		102:29:2267:2506	1527155	0					
ANR	1527158	IdentifierDeclStatement	RGraph * t = R_NEW0 ( RGraph ) ;	103:1:2270:2297	1527155	0	True				
ANR	1527159	IdentifierDecl	* t = R_NEW0 ( RGraph )		1527155	0					
ANR	1527160	IdentifierDeclType	RGraph *		1527155	0					
ANR	1527161	Identifier	t		1527155	1					
ANR	1527162	AssignmentExpression	* t = R_NEW0 ( RGraph )		1527155	2		=			
ANR	1527163	Identifier	t		1527155	0					
ANR	1527164	CallExpression	R_NEW0 ( RGraph )		1527155	1					
ANR	1527165	Callee	R_NEW0		1527155	0					
ANR	1527166	Identifier	R_NEW0		1527155	0					
ANR	1527167	ArgumentList	RGraph		1527155	1					
ANR	1527168	Argument	RGraph		1527155	0					
ANR	1527169	Identifier	RGraph		1527155	0					
ANR	1527170	IfStatement	if ( ! t )		1527155	1					
ANR	1527171	Condition	! t	104:5:2304:2305	1527155	0	True				
ANR	1527172	UnaryOperationExpression	! t		1527155	0					
ANR	1527173	UnaryOperator	!		1527155	0					
ANR	1527174	Identifier	t		1527155	1					
ANR	1527175	CompoundStatement		3:9:40:40	1527155	1					
ANR	1527176	ReturnStatement	return NULL ;	105:2:2312:2323	1527155	0	True				
ANR	1527177	Identifier	NULL		1527155	0					
ANR	1527178	ExpressionStatement	t -> nodes = r_list_new ( )	107:1:2329:2353	1527155	2	True				
ANR	1527179	AssignmentExpression	t -> nodes = r_list_new ( )		1527155	0		=			
ANR	1527180	PtrMemberAccess	t -> nodes		1527155	0					
ANR	1527181	Identifier	t		1527155	0					
ANR	1527182	Identifier	nodes		1527155	1					
ANR	1527183	CallExpression	r_list_new ( )		1527155	1					
ANR	1527184	Callee	r_list_new		1527155	0					
ANR	1527185	Identifier	r_list_new		1527155	0					
ANR	1527186	ArgumentList			1527155	1					
ANR	1527187	IfStatement	if ( ! t -> nodes )		1527155	3					
ANR	1527188	Condition	! t -> nodes	108:5:2360:2368	1527155	0	True				
ANR	1527189	UnaryOperationExpression	! t -> nodes		1527155	0					
ANR	1527190	UnaryOperator	!		1527155	0					
ANR	1527191	PtrMemberAccess	t -> nodes		1527155	1					
ANR	1527192	Identifier	t		1527155	0					
ANR	1527193	Identifier	nodes		1527155	1					
ANR	1527194	CompoundStatement		7:16:103:103	1527155	1					
ANR	1527195	ExpressionStatement	r_graph_free ( t )	109:2:2375:2390	1527155	0	True				
ANR	1527196	CallExpression	r_graph_free ( t )		1527155	0					
ANR	1527197	Callee	r_graph_free		1527155	0					
ANR	1527198	Identifier	r_graph_free		1527155	0					
ANR	1527199	ArgumentList	t		1527155	1					
ANR	1527200	Argument	t		1527155	0					
ANR	1527201	Identifier	t		1527155	0					
ANR	1527202	ReturnStatement	return NULL ;	110:2:2394:2405	1527155	1	True				
ANR	1527203	Identifier	NULL		1527155	0					
ANR	1527204	ExpressionStatement	t -> nodes -> free = ( RListFree ) r_graph_node_free	112:1:2411:2456	1527155	4	True				
ANR	1527205	AssignmentExpression	t -> nodes -> free = ( RListFree ) r_graph_node_free		1527155	0		=			
ANR	1527206	PtrMemberAccess	t -> nodes -> free		1527155	0					
ANR	1527207	PtrMemberAccess	t -> nodes		1527155	0					
ANR	1527208	Identifier	t		1527155	0					
ANR	1527209	Identifier	nodes		1527155	1					
ANR	1527210	Identifier	free		1527155	1					
ANR	1527211	CastExpression	( RListFree ) r_graph_node_free		1527155	1					
ANR	1527212	CastTarget	RListFree		1527155	0					
ANR	1527213	Identifier	r_graph_node_free		1527155	1					
ANR	1527214	ExpressionStatement	t -> n_nodes = 0	113:1:2459:2473	1527155	5	True				
ANR	1527215	AssignmentExpression	t -> n_nodes = 0		1527155	0		=			
ANR	1527216	PtrMemberAccess	t -> n_nodes		1527155	0					
ANR	1527217	Identifier	t		1527155	0					
ANR	1527218	Identifier	n_nodes		1527155	1					
ANR	1527219	PrimaryExpression	0		1527155	1					
ANR	1527220	ExpressionStatement	t -> last_index = 0	114:1:2476:2493	1527155	6	True				
ANR	1527221	AssignmentExpression	t -> last_index = 0		1527155	0		=			
ANR	1527222	PtrMemberAccess	t -> last_index		1527155	0					
ANR	1527223	Identifier	t		1527155	0					
ANR	1527224	Identifier	last_index		1527155	1					
ANR	1527225	PrimaryExpression	0		1527155	1					
ANR	1527226	ReturnStatement	return t ;	115:1:2496:2504	1527155	7	True				
ANR	1527227	Identifier	t		1527155	0					
ANR	1527228	ReturnType	R_API RGraph *		1527155	1					
ANR	1527229	Identifier	r_graph_new		1527155	2					
ANR	1527230	ParameterList			1527155	3					
ANR	1527231	CFGEntryNode	ENTRY		1527155		True				
ANR	1527232	CFGExitNode	EXIT		1527155		True				
ANR	1527233	Symbol	* t -> nodes		1527155						
ANR	1527234	Symbol	NULL		1527155						
ANR	1527235	Symbol	t -> nodes		1527155						
ANR	1527236	Symbol	t -> last_index		1527155						
ANR	1527237	Symbol	R_NEW0		1527155						
ANR	1527238	Symbol	t		1527155						
ANR	1527239	Symbol	RGraph		1527155						
ANR	1527240	Symbol	* * t		1527155						
ANR	1527241	Symbol	t -> nodes -> free		1527155						
ANR	1527242	Symbol	r_graph_node_free		1527155						
ANR	1527243	Symbol	* t		1527155						
ANR	1527244	Symbol	r_list_new		1527155						
ANR	1527245	Symbol	t -> n_nodes		1527155						
ANR	1527246	Function	r_graph_free	118:0:2509:2583							
ANR	1527247	FunctionDef	r_graph_free (RGraph * t)		1527246	0					
ANR	1527248	CompoundStatement		118:36:2545:2583	1527246	0					
ANR	1527249	ExpressionStatement	r_list_free ( t -> nodes )	119:1:2548:2570	1527246	0	True				
ANR	1527250	CallExpression	r_list_free ( t -> nodes )		1527246	0					
ANR	1527251	Callee	r_list_free		1527246	0					
ANR	1527252	Identifier	r_list_free		1527246	0					
ANR	1527253	ArgumentList	t -> nodes		1527246	1					
ANR	1527254	Argument	t -> nodes		1527246	0					
ANR	1527255	PtrMemberAccess	t -> nodes		1527246	0					
ANR	1527256	Identifier	t		1527246	0					
ANR	1527257	Identifier	nodes		1527246	1					
ANR	1527258	ExpressionStatement	free ( t )	120:1:2573:2581	1527246	1	True				
ANR	1527259	CallExpression	free ( t )		1527246	0					
ANR	1527260	Callee	free		1527246	0					
ANR	1527261	Identifier	free		1527246	0					
ANR	1527262	ArgumentList	t		1527246	1					
ANR	1527263	Argument	t		1527246	0					
ANR	1527264	Identifier	t		1527246	0					
ANR	1527265	ReturnType	R_API void		1527246	1					
ANR	1527266	Identifier	r_graph_free		1527246	2					
ANR	1527267	ParameterList	RGraph * t		1527246	3					
ANR	1527268	Parameter	RGraph * t	118:25:2534:2542	1527246	0	True				
ANR	1527269	ParameterType	RGraph *		1527246	0					
ANR	1527270	Identifier	t		1527246	1					
ANR	1527271	CFGEntryNode	ENTRY		1527246		True				
ANR	1527272	CFGExitNode	EXIT		1527246		True				
ANR	1527273	Symbol	t		1527246						
ANR	1527274	Symbol	t -> nodes		1527246						
ANR	1527275	Symbol	* t		1527246						
ANR	1527276	Function	r_graph_get_node	123:0:2586:2810							
ANR	1527277	FunctionDef	"r_graph_get_node (const RGraph * t , unsigned int idx)"		1527276	0					
ANR	1527278	CompoundStatement		123:71:2657:2810	1527276	0					
ANR	1527279	IdentifierDeclStatement	"RListIter * it = r_list_find ( t -> nodes , ( void * ) ( size_t ) idx , ( RListComparator ) node_cmp ) ;"	124:1:2660:2746	1527276	0	True				
ANR	1527280	IdentifierDecl	"* it = r_list_find ( t -> nodes , ( void * ) ( size_t ) idx , ( RListComparator ) node_cmp )"		1527276	0					
ANR	1527281	IdentifierDeclType	RListIter *		1527276	0					
ANR	1527282	Identifier	it		1527276	1					
ANR	1527283	AssignmentExpression	"* it = r_list_find ( t -> nodes , ( void * ) ( size_t ) idx , ( RListComparator ) node_cmp )"		1527276	2		=			
ANR	1527284	Identifier	it		1527276	0					
ANR	1527285	CallExpression	"r_list_find ( t -> nodes , ( void * ) ( size_t ) idx , ( RListComparator ) node_cmp )"		1527276	1					
ANR	1527286	Callee	r_list_find		1527276	0					
ANR	1527287	Identifier	r_list_find		1527276	0					
ANR	1527288	ArgumentList	t -> nodes		1527276	1					
ANR	1527289	Argument	t -> nodes		1527276	0					
ANR	1527290	PtrMemberAccess	t -> nodes		1527276	0					
ANR	1527291	Identifier	t		1527276	0					
ANR	1527292	Identifier	nodes		1527276	1					
ANR	1527293	Argument	( void * ) ( size_t ) idx		1527276	1					
ANR	1527294	CastExpression	( void * ) ( size_t ) idx		1527276	0					
ANR	1527295	CastTarget	void *		1527276	0					
ANR	1527296	CastExpression	( size_t ) idx		1527276	1					
ANR	1527297	CastTarget	size_t		1527276	0					
ANR	1527298	Identifier	idx		1527276	1					
ANR	1527299	Argument	( RListComparator ) node_cmp		1527276	2					
ANR	1527300	CastExpression	( RListComparator ) node_cmp		1527276	0					
ANR	1527301	CastTarget	RListComparator		1527276	0					
ANR	1527302	Identifier	node_cmp		1527276	1					
ANR	1527303	IfStatement	if ( ! it )		1527276	1					
ANR	1527304	Condition	! it	125:5:2753:2755	1527276	0	True				
ANR	1527305	UnaryOperationExpression	! it		1527276	0					
ANR	1527306	UnaryOperator	!		1527276	0					
ANR	1527307	Identifier	it		1527276	1					
ANR	1527308	CompoundStatement		3:10:100:100	1527276	1					
ANR	1527309	ReturnStatement	return NULL ;	126:2:2762:2773	1527276	0	True				
ANR	1527310	Identifier	NULL		1527276	0					
ANR	1527311	ReturnStatement	return ( RGraphNode * ) it -> data ;	128:1:2779:2808	1527276	2	True				
ANR	1527312	CastExpression	( RGraphNode * ) it -> data		1527276	0					
ANR	1527313	CastTarget	RGraphNode *		1527276	0					
ANR	1527314	PtrMemberAccess	it -> data		1527276	1					
ANR	1527315	Identifier	it		1527276	0					
ANR	1527316	Identifier	data		1527276	1					
ANR	1527317	ReturnType	R_API RGraphNode *		1527276	1					
ANR	1527318	Identifier	r_graph_get_node		1527276	2					
ANR	1527319	ParameterList	"const RGraph * t , unsigned int idx"		1527276	3					
ANR	1527320	Parameter	const RGraph * t	123:36:2622:2636	1527276	0	True				
ANR	1527321	ParameterType	const RGraph *		1527276	0					
ANR	1527322	Identifier	t		1527276	1					
ANR	1527323	Parameter	unsigned int idx	123:53:2639:2654	1527276	1	True				
ANR	1527324	ParameterType	unsigned int		1527276	0					
ANR	1527325	Identifier	idx		1527276	1					
ANR	1527326	CFGEntryNode	ENTRY		1527276		True				
ANR	1527327	CFGExitNode	EXIT		1527276		True				
ANR	1527328	Symbol	r_list_find		1527276						
ANR	1527329	Symbol	* it		1527276						
ANR	1527330	Symbol	NULL		1527276						
ANR	1527331	Symbol	t		1527276						
ANR	1527332	Symbol	t -> nodes		1527276						
ANR	1527333	Symbol	it -> data		1527276						
ANR	1527334	Symbol	it		1527276						
ANR	1527335	Symbol	idx		1527276						
ANR	1527336	Symbol	node_cmp		1527276						
ANR	1527337	Symbol	* t		1527276						
ANR	1527338	Function	r_graph_node_iter	131:0:2813:2966							
ANR	1527339	FunctionDef	"r_graph_node_iter (const RGraph * t , unsigned int idx)"		1527338	0					
ANR	1527340	CompoundStatement		131:71:2884:2966	1527338	0					
ANR	1527341	ReturnStatement	"return r_list_find ( t -> nodes , ( void * ) ( size_t ) idx , ( RListComparator ) node_cmp ) ;"	132:1:2887:2964	1527338	0	True				
ANR	1527342	CallExpression	"r_list_find ( t -> nodes , ( void * ) ( size_t ) idx , ( RListComparator ) node_cmp )"		1527338	0					
ANR	1527343	Callee	r_list_find		1527338	0					
ANR	1527344	Identifier	r_list_find		1527338	0					
ANR	1527345	ArgumentList	t -> nodes		1527338	1					
ANR	1527346	Argument	t -> nodes		1527338	0					
ANR	1527347	PtrMemberAccess	t -> nodes		1527338	0					
ANR	1527348	Identifier	t		1527338	0					
ANR	1527349	Identifier	nodes		1527338	1					
ANR	1527350	Argument	( void * ) ( size_t ) idx		1527338	1					
ANR	1527351	CastExpression	( void * ) ( size_t ) idx		1527338	0					
ANR	1527352	CastTarget	void *		1527338	0					
ANR	1527353	CastExpression	( size_t ) idx		1527338	1					
ANR	1527354	CastTarget	size_t		1527338	0					
ANR	1527355	Identifier	idx		1527338	1					
ANR	1527356	Argument	( RListComparator ) node_cmp		1527338	2					
ANR	1527357	CastExpression	( RListComparator ) node_cmp		1527338	0					
ANR	1527358	CastTarget	RListComparator		1527338	0					
ANR	1527359	Identifier	node_cmp		1527338	1					
ANR	1527360	ReturnType	R_API RListIter *		1527338	1					
ANR	1527361	Identifier	r_graph_node_iter		1527338	2					
ANR	1527362	ParameterList	"const RGraph * t , unsigned int idx"		1527338	3					
ANR	1527363	Parameter	const RGraph * t	131:36:2849:2863	1527338	0	True				
ANR	1527364	ParameterType	const RGraph *		1527338	0					
ANR	1527365	Identifier	t		1527338	1					
ANR	1527366	Parameter	unsigned int idx	131:53:2866:2881	1527338	1	True				
ANR	1527367	ParameterType	unsigned int		1527338	0					
ANR	1527368	Identifier	idx		1527338	1					
ANR	1527369	CFGEntryNode	ENTRY		1527338		True				
ANR	1527370	CFGExitNode	EXIT		1527338		True				
ANR	1527371	Symbol	r_list_find		1527338						
ANR	1527372	Symbol	t		1527338						
ANR	1527373	Symbol	t -> nodes		1527338						
ANR	1527374	Symbol	idx		1527338						
ANR	1527375	Symbol	node_cmp		1527338						
ANR	1527376	Symbol	* t		1527338						
ANR	1527377	Function	r_graph_reset	135:0:2969:3193							
ANR	1527378	FunctionDef	r_graph_reset (RGraph * t)		1527377	0					
ANR	1527379	CompoundStatement		135:37:3006:3193	1527377	0					
ANR	1527380	ExpressionStatement	r_list_free ( t -> nodes )	136:1:3009:3031	1527377	0	True				
ANR	1527381	CallExpression	r_list_free ( t -> nodes )		1527377	0					
ANR	1527382	Callee	r_list_free		1527377	0					
ANR	1527383	Identifier	r_list_free		1527377	0					
ANR	1527384	ArgumentList	t -> nodes		1527377	1					
ANR	1527385	Argument	t -> nodes		1527377	0					
ANR	1527386	PtrMemberAccess	t -> nodes		1527377	0					
ANR	1527387	Identifier	t		1527377	0					
ANR	1527388	Identifier	nodes		1527377	1					
ANR	1527389	ExpressionStatement	t -> nodes = r_list_new ( )	137:1:3034:3058	1527377	1	True				
ANR	1527390	AssignmentExpression	t -> nodes = r_list_new ( )		1527377	0		=			
ANR	1527391	PtrMemberAccess	t -> nodes		1527377	0					
ANR	1527392	Identifier	t		1527377	0					
ANR	1527393	Identifier	nodes		1527377	1					
ANR	1527394	CallExpression	r_list_new ( )		1527377	1					
ANR	1527395	Callee	r_list_new		1527377	0					
ANR	1527396	Identifier	r_list_new		1527377	0					
ANR	1527397	ArgumentList			1527377	1					
ANR	1527398	IfStatement	if ( ! t -> nodes )		1527377	2					
ANR	1527399	Condition	! t -> nodes	138:5:3065:3073	1527377	0	True				
ANR	1527400	UnaryOperationExpression	! t -> nodes		1527377	0					
ANR	1527401	UnaryOperator	!		1527377	0					
ANR	1527402	PtrMemberAccess	t -> nodes		1527377	1					
ANR	1527403	Identifier	t		1527377	0					
ANR	1527404	Identifier	nodes		1527377	1					
ANR	1527405	CompoundStatement		4:16:69:69	1527377	1					
ANR	1527406	ReturnStatement	return ;	139:2:3080:3086	1527377	0	True				
ANR	1527407	ExpressionStatement	t -> nodes -> free = ( RListFree ) r_graph_node_free	141:1:3092:3137	1527377	3	True				
ANR	1527408	AssignmentExpression	t -> nodes -> free = ( RListFree ) r_graph_node_free		1527377	0		=			
ANR	1527409	PtrMemberAccess	t -> nodes -> free		1527377	0					
ANR	1527410	PtrMemberAccess	t -> nodes		1527377	0					
ANR	1527411	Identifier	t		1527377	0					
ANR	1527412	Identifier	nodes		1527377	1					
ANR	1527413	Identifier	free		1527377	1					
ANR	1527414	CastExpression	( RListFree ) r_graph_node_free		1527377	1					
ANR	1527415	CastTarget	RListFree		1527377	0					
ANR	1527416	Identifier	r_graph_node_free		1527377	1					
ANR	1527417	ExpressionStatement	t -> n_nodes = 0	142:1:3140:3154	1527377	4	True				
ANR	1527418	AssignmentExpression	t -> n_nodes = 0		1527377	0		=			
ANR	1527419	PtrMemberAccess	t -> n_nodes		1527377	0					
ANR	1527420	Identifier	t		1527377	0					
ANR	1527421	Identifier	n_nodes		1527377	1					
ANR	1527422	PrimaryExpression	0		1527377	1					
ANR	1527423	ExpressionStatement	t -> n_edges = 0	143:1:3157:3171	1527377	5	True				
ANR	1527424	AssignmentExpression	t -> n_edges = 0		1527377	0		=			
ANR	1527425	PtrMemberAccess	t -> n_edges		1527377	0					
ANR	1527426	Identifier	t		1527377	0					
ANR	1527427	Identifier	n_edges		1527377	1					
ANR	1527428	PrimaryExpression	0		1527377	1					
ANR	1527429	ExpressionStatement	t -> last_index = 0	144:1:3174:3191	1527377	6	True				
ANR	1527430	AssignmentExpression	t -> last_index = 0		1527377	0		=			
ANR	1527431	PtrMemberAccess	t -> last_index		1527377	0					
ANR	1527432	Identifier	t		1527377	0					
ANR	1527433	Identifier	last_index		1527377	1					
ANR	1527434	PrimaryExpression	0		1527377	1					
ANR	1527435	ReturnType	R_API void		1527377	1					
ANR	1527436	Identifier	r_graph_reset		1527377	2					
ANR	1527437	ParameterList	RGraph * t		1527377	3					
ANR	1527438	Parameter	RGraph * t	135:26:2995:3003	1527377	0	True				
ANR	1527439	ParameterType	RGraph *		1527377	0					
ANR	1527440	Identifier	t		1527377	1					
ANR	1527441	CFGEntryNode	ENTRY		1527377		True				
ANR	1527442	CFGExitNode	EXIT		1527377		True				
ANR	1527443	Symbol	* t -> nodes		1527377						
ANR	1527444	Symbol	t		1527377						
ANR	1527445	Symbol	t -> nodes		1527377						
ANR	1527446	Symbol	* * t		1527377						
ANR	1527447	Symbol	t -> last_index		1527377						
ANR	1527448	Symbol	t -> nodes -> free		1527377						
ANR	1527449	Symbol	t -> n_edges		1527377						
ANR	1527450	Symbol	r_graph_node_free		1527377						
ANR	1527451	Symbol	* t		1527377						
ANR	1527452	Symbol	r_list_new		1527377						
ANR	1527453	Symbol	t -> n_nodes		1527377						
ANR	1527454	Function	r_graph_add_node	147:0:3196:3440							
ANR	1527455	FunctionDef	"r_graph_add_node (RGraph * t , void * data)"		1527454	0					
ANR	1527456	CompoundStatement		147:59:3255:3440	1527454	0					
ANR	1527457	IfStatement	if ( ! t )		1527454	0					
ANR	1527458	Condition	! t	148:5:3262:3263	1527454	0	True				
ANR	1527459	UnaryOperationExpression	! t		1527454	0					
ANR	1527460	UnaryOperator	!		1527454	0					
ANR	1527461	Identifier	t		1527454	1					
ANR	1527462	CompoundStatement		2:9:10:10	1527454	1					
ANR	1527463	ReturnStatement	return NULL ;	149:2:3270:3281	1527454	0	True				
ANR	1527464	Identifier	NULL		1527454	0					
ANR	1527465	IdentifierDeclStatement	RGraphNode * n = r_graph_node_new ( data ) ;	151:1:3287:3326	1527454	1	True				
ANR	1527466	IdentifierDecl	* n = r_graph_node_new ( data )		1527454	0					
ANR	1527467	IdentifierDeclType	RGraphNode *		1527454	0					
ANR	1527468	Identifier	n		1527454	1					
ANR	1527469	AssignmentExpression	* n = r_graph_node_new ( data )		1527454	2		=			
ANR	1527470	Identifier	n		1527454	0					
ANR	1527471	CallExpression	r_graph_node_new ( data )		1527454	1					
ANR	1527472	Callee	r_graph_node_new		1527454	0					
ANR	1527473	Identifier	r_graph_node_new		1527454	0					
ANR	1527474	ArgumentList	data		1527454	1					
ANR	1527475	Argument	data		1527454	0					
ANR	1527476	Identifier	data		1527454	0					
ANR	1527477	IfStatement	if ( ! n )		1527454	2					
ANR	1527478	Condition	! n	152:5:3333:3334	1527454	0	True				
ANR	1527479	UnaryOperationExpression	! n		1527454	0					
ANR	1527480	UnaryOperator	!		1527454	0					
ANR	1527481	Identifier	n		1527454	1					
ANR	1527482	CompoundStatement		6:9:81:81	1527454	1					
ANR	1527483	ReturnStatement	return NULL ;	153:2:3341:3352	1527454	0	True				
ANR	1527484	Identifier	NULL		1527454	0					
ANR	1527485	ExpressionStatement	n -> idx = t -> last_index ++	155:1:3358:3382	1527454	3	True				
ANR	1527486	AssignmentExpression	n -> idx = t -> last_index ++		1527454	0		=			
ANR	1527487	PtrMemberAccess	n -> idx		1527454	0					
ANR	1527488	Identifier	n		1527454	0					
ANR	1527489	Identifier	idx		1527454	1					
ANR	1527490	PostIncDecOperationExpression	t -> last_index ++		1527454	1					
ANR	1527491	PtrMemberAccess	t -> last_index		1527454	0					
ANR	1527492	Identifier	t		1527454	0					
ANR	1527493	Identifier	last_index		1527454	1					
ANR	1527494	IncDec	++		1527454	1					
ANR	1527495	ExpressionStatement	"r_list_append ( t -> nodes , n )"	156:1:3385:3412	1527454	4	True				
ANR	1527496	CallExpression	"r_list_append ( t -> nodes , n )"		1527454	0					
ANR	1527497	Callee	r_list_append		1527454	0					
ANR	1527498	Identifier	r_list_append		1527454	0					
ANR	1527499	ArgumentList	t -> nodes		1527454	1					
ANR	1527500	Argument	t -> nodes		1527454	0					
ANR	1527501	PtrMemberAccess	t -> nodes		1527454	0					
ANR	1527502	Identifier	t		1527454	0					
ANR	1527503	Identifier	nodes		1527454	1					
ANR	1527504	Argument	n		1527454	1					
ANR	1527505	Identifier	n		1527454	0					
ANR	1527506	ExpressionStatement	t -> n_nodes ++	157:1:3415:3427	1527454	5	True				
ANR	1527507	PostIncDecOperationExpression	t -> n_nodes ++		1527454	0					
ANR	1527508	PtrMemberAccess	t -> n_nodes		1527454	0					
ANR	1527509	Identifier	t		1527454	0					
ANR	1527510	Identifier	n_nodes		1527454	1					
ANR	1527511	IncDec	++		1527454	1					
ANR	1527512	ReturnStatement	return n ;	158:1:3430:3438	1527454	6	True				
ANR	1527513	Identifier	n		1527454	0					
ANR	1527514	ReturnType	R_API RGraphNode *		1527454	1					
ANR	1527515	Identifier	r_graph_add_node		1527454	2					
ANR	1527516	ParameterList	"RGraph * t , void * data"		1527454	3					
ANR	1527517	Parameter	RGraph * t	147:36:3232:3240	1527454	0	True				
ANR	1527518	ParameterType	RGraph *		1527454	0					
ANR	1527519	Identifier	t		1527454	1					
ANR	1527520	Parameter	void * data	147:47:3243:3252	1527454	1	True				
ANR	1527521	ParameterType	void *		1527454	0					
ANR	1527522	Identifier	data		1527454	1					
ANR	1527523	CFGEntryNode	ENTRY		1527454		True				
ANR	1527524	CFGExitNode	EXIT		1527454		True				
ANR	1527525	Symbol	NULL		1527454						
ANR	1527526	Symbol	t		1527454						
ANR	1527527	Symbol	data		1527454						
ANR	1527528	Symbol	r_graph_node_new		1527454						
ANR	1527529	Symbol	t -> nodes		1527454						
ANR	1527530	Symbol	* n		1527454						
ANR	1527531	Symbol	t -> last_index		1527454						
ANR	1527532	Symbol	n -> idx		1527454						
ANR	1527533	Symbol	n		1527454						
ANR	1527534	Symbol	* t		1527454						
ANR	1527535	Symbol	t -> n_nodes		1527454						
ANR	1527536	Function	r_graph_del_node	163:0:3571:4028							
ANR	1527537	FunctionDef	"r_graph_del_node (RGraph * t , RGraphNode * n)"		1527536	0					
ANR	1527538	CompoundStatement		163:54:3625:4028	1527536	0					
ANR	1527539	IdentifierDeclStatement	RGraphNode * gn ;	164:1:3628:3642	1527536	0	True				
ANR	1527540	IdentifierDecl	* gn		1527536	0					
ANR	1527541	IdentifierDeclType	RGraphNode *		1527536	0					
ANR	1527542	Identifier	gn		1527536	1					
ANR	1527543	IdentifierDeclStatement	RListIter * it ;	165:1:3645:3658	1527536	1	True				
ANR	1527544	IdentifierDecl	* it		1527536	0					
ANR	1527545	IdentifierDeclType	RListIter *		1527536	0					
ANR	1527546	Identifier	it		1527536	1					
ANR	1527547	IfStatement	if ( ! n )		1527536	2					
ANR	1527548	Condition	! n	166:5:3665:3666	1527536	0	True				
ANR	1527549	UnaryOperationExpression	! n		1527536	0					
ANR	1527550	UnaryOperator	!		1527536	0					
ANR	1527551	Identifier	n		1527536	1					
ANR	1527552	CompoundStatement		4:9:43:43	1527536	1					
ANR	1527553	ReturnStatement	return ;	167:2:3673:3679	1527536	0	True				
ANR	1527554	Statement	r_list_foreach	169:1:3685:3698	1527536	3	True				
ANR	1527555	Statement	(	169:16:3700:3700	1527536	4	True				
ANR	1527556	Statement	n	169:17:3701:3701	1527536	5	True				
ANR	1527557	Statement	->	169:18:3702:3703	1527536	6	True				
ANR	1527558	Statement	in_nodes	169:20:3704:3711	1527536	7	True				
ANR	1527559	Statement	","	169:28:3712:3712	1527536	8	True				
ANR	1527560	Statement	it	169:30:3714:3715	1527536	9	True				
ANR	1527561	Statement	","	169:32:3716:3716	1527536	10	True				
ANR	1527562	Statement	gn	169:34:3718:3719	1527536	11	True				
ANR	1527563	Statement	)	169:36:3720:3720	1527536	12	True				
ANR	1527564	CompoundStatement		7:38:96:96	1527536	13					
ANR	1527565	ExpressionStatement	"r_list_delete_data ( gn -> out_nodes , n )"	170:2:3726:3763	1527536	0	True				
ANR	1527566	CallExpression	"r_list_delete_data ( gn -> out_nodes , n )"		1527536	0					
ANR	1527567	Callee	r_list_delete_data		1527536	0					
ANR	1527568	Identifier	r_list_delete_data		1527536	0					
ANR	1527569	ArgumentList	gn -> out_nodes		1527536	1					
ANR	1527570	Argument	gn -> out_nodes		1527536	0					
ANR	1527571	PtrMemberAccess	gn -> out_nodes		1527536	0					
ANR	1527572	Identifier	gn		1527536	0					
ANR	1527573	Identifier	out_nodes		1527536	1					
ANR	1527574	Argument	n		1527536	1					
ANR	1527575	Identifier	n		1527536	0					
ANR	1527576	ExpressionStatement	"r_list_delete_data ( gn -> all_neighbours , n )"	171:2:3767:3809	1527536	1	True				
ANR	1527577	CallExpression	"r_list_delete_data ( gn -> all_neighbours , n )"		1527536	0					
ANR	1527578	Callee	r_list_delete_data		1527536	0					
ANR	1527579	Identifier	r_list_delete_data		1527536	0					
ANR	1527580	ArgumentList	gn -> all_neighbours		1527536	1					
ANR	1527581	Argument	gn -> all_neighbours		1527536	0					
ANR	1527582	PtrMemberAccess	gn -> all_neighbours		1527536	0					
ANR	1527583	Identifier	gn		1527536	0					
ANR	1527584	Identifier	all_neighbours		1527536	1					
ANR	1527585	Argument	n		1527536	1					
ANR	1527586	Identifier	n		1527536	0					
ANR	1527587	ExpressionStatement	t -> n_edges --	172:2:3813:3825	1527536	2	True				
ANR	1527588	PostIncDecOperationExpression	t -> n_edges --		1527536	0					
ANR	1527589	PtrMemberAccess	t -> n_edges		1527536	0					
ANR	1527590	Identifier	t		1527536	0					
ANR	1527591	Identifier	n_edges		1527536	1					
ANR	1527592	IncDec	--		1527536	1					
ANR	1527593	Statement	r_list_foreach	175:1:3832:3845	1527536	14	True				
ANR	1527594	Statement	(	175:16:3847:3847	1527536	15	True				
ANR	1527595	Statement	n	175:17:3848:3848	1527536	16	True				
ANR	1527596	Statement	->	175:18:3849:3850	1527536	17	True				
ANR	1527597	Statement	out_nodes	175:20:3851:3859	1527536	18	True				
ANR	1527598	Statement	","	175:29:3860:3860	1527536	19	True				
ANR	1527599	Statement	it	175:31:3862:3863	1527536	20	True				
ANR	1527600	Statement	","	175:33:3864:3864	1527536	21	True				
ANR	1527601	Statement	gn	175:35:3866:3867	1527536	22	True				
ANR	1527602	Statement	)	175:37:3868:3868	1527536	23	True				
ANR	1527603	CompoundStatement		13:39:244:244	1527536	24					
ANR	1527604	ExpressionStatement	"r_list_delete_data ( gn -> in_nodes , n )"	176:2:3874:3910	1527536	0	True				
ANR	1527605	CallExpression	"r_list_delete_data ( gn -> in_nodes , n )"		1527536	0					
ANR	1527606	Callee	r_list_delete_data		1527536	0					
ANR	1527607	Identifier	r_list_delete_data		1527536	0					
ANR	1527608	ArgumentList	gn -> in_nodes		1527536	1					
ANR	1527609	Argument	gn -> in_nodes		1527536	0					
ANR	1527610	PtrMemberAccess	gn -> in_nodes		1527536	0					
ANR	1527611	Identifier	gn		1527536	0					
ANR	1527612	Identifier	in_nodes		1527536	1					
ANR	1527613	Argument	n		1527536	1					
ANR	1527614	Identifier	n		1527536	0					
ANR	1527615	ExpressionStatement	"r_list_delete_data ( gn -> all_neighbours , n )"	177:2:3914:3956	1527536	1	True				
ANR	1527616	CallExpression	"r_list_delete_data ( gn -> all_neighbours , n )"		1527536	0					
ANR	1527617	Callee	r_list_delete_data		1527536	0					
ANR	1527618	Identifier	r_list_delete_data		1527536	0					
ANR	1527619	ArgumentList	gn -> all_neighbours		1527536	1					
ANR	1527620	Argument	gn -> all_neighbours		1527536	0					
ANR	1527621	PtrMemberAccess	gn -> all_neighbours		1527536	0					
ANR	1527622	Identifier	gn		1527536	0					
ANR	1527623	Identifier	all_neighbours		1527536	1					
ANR	1527624	Argument	n		1527536	1					
ANR	1527625	Identifier	n		1527536	0					
ANR	1527626	ExpressionStatement	t -> n_edges --	178:2:3960:3972	1527536	2	True				
ANR	1527627	PostIncDecOperationExpression	t -> n_edges --		1527536	0					
ANR	1527628	PtrMemberAccess	t -> n_edges		1527536	0					
ANR	1527629	Identifier	t		1527536	0					
ANR	1527630	Identifier	n_edges		1527536	1					
ANR	1527631	IncDec	--		1527536	1					
ANR	1527632	ExpressionStatement	"r_list_delete_data ( t -> nodes , n )"	181:1:3979:4011	1527536	25	True				
ANR	1527633	CallExpression	"r_list_delete_data ( t -> nodes , n )"		1527536	0					
ANR	1527634	Callee	r_list_delete_data		1527536	0					
ANR	1527635	Identifier	r_list_delete_data		1527536	0					
ANR	1527636	ArgumentList	t -> nodes		1527536	1					
ANR	1527637	Argument	t -> nodes		1527536	0					
ANR	1527638	PtrMemberAccess	t -> nodes		1527536	0					
ANR	1527639	Identifier	t		1527536	0					
ANR	1527640	Identifier	nodes		1527536	1					
ANR	1527641	Argument	n		1527536	1					
ANR	1527642	Identifier	n		1527536	0					
ANR	1527643	ExpressionStatement	t -> n_nodes --	182:1:4014:4026	1527536	26	True				
ANR	1527644	PostIncDecOperationExpression	t -> n_nodes --		1527536	0					
ANR	1527645	PtrMemberAccess	t -> n_nodes		1527536	0					
ANR	1527646	Identifier	t		1527536	0					
ANR	1527647	Identifier	n_nodes		1527536	1					
ANR	1527648	IncDec	--		1527536	1					
ANR	1527649	ReturnType	R_API void		1527536	1					
ANR	1527650	Identifier	r_graph_del_node		1527536	2					
ANR	1527651	ParameterList	"RGraph * t , RGraphNode * n"		1527536	3					
ANR	1527652	Parameter	RGraph * t	163:28:3599:3607	1527536	0	True				
ANR	1527653	ParameterType	RGraph *		1527536	0					
ANR	1527654	Identifier	t		1527536	1					
ANR	1527655	Parameter	RGraphNode * n	163:39:3610:3622	1527536	1	True				
ANR	1527656	ParameterType	RGraphNode *		1527536	0					
ANR	1527657	Identifier	n		1527536	1					
ANR	1527658	CFGEntryNode	ENTRY		1527536		True				
ANR	1527659	CFGExitNode	EXIT		1527536		True				
ANR	1527660	Symbol	gn -> in_nodes		1527536						
ANR	1527661	Symbol	gn -> all_neighbours		1527536						
ANR	1527662	Symbol	t		1527536						
ANR	1527663	Symbol	gn		1527536						
ANR	1527664	Symbol	t -> nodes		1527536						
ANR	1527665	Symbol	it		1527536						
ANR	1527666	Symbol	t -> n_edges		1527536						
ANR	1527667	Symbol	gn -> out_nodes		1527536						
ANR	1527668	Symbol	n		1527536						
ANR	1527669	Symbol	* gn		1527536						
ANR	1527670	Symbol	* t		1527536						
ANR	1527671	Symbol	t -> n_nodes		1527536						
ANR	1527672	Function	r_graph_add_edge	185:0:4031:4147							
ANR	1527673	FunctionDef	"r_graph_add_edge (RGraph * t , RGraphNode * from , RGraphNode * to)"		1527672	0					
ANR	1527674	CompoundStatement		185:74:4105:4147	1527672	0					
ANR	1527675	ExpressionStatement	"r_graph_add_edge_at ( t , from , to , - 1 )"	186:1:4108:4145	1527672	0	True				
ANR	1527676	CallExpression	"r_graph_add_edge_at ( t , from , to , - 1 )"		1527672	0					
ANR	1527677	Callee	r_graph_add_edge_at		1527672	0					
ANR	1527678	Identifier	r_graph_add_edge_at		1527672	0					
ANR	1527679	ArgumentList	t		1527672	1					
ANR	1527680	Argument	t		1527672	0					
ANR	1527681	Identifier	t		1527672	0					
ANR	1527682	Argument	from		1527672	1					
ANR	1527683	Identifier	from		1527672	0					
ANR	1527684	Argument	to		1527672	2					
ANR	1527685	Identifier	to		1527672	0					
ANR	1527686	Argument	- 1		1527672	3					
ANR	1527687	UnaryOperationExpression	- 1		1527672	0					
ANR	1527688	UnaryOperator	-		1527672	0					
ANR	1527689	PrimaryExpression	1		1527672	1					
ANR	1527690	ReturnType	R_API void		1527672	1					
ANR	1527691	Identifier	r_graph_add_edge		1527672	2					
ANR	1527692	ParameterList	"RGraph * t , RGraphNode * from , RGraphNode * to"		1527672	3					
ANR	1527693	Parameter	RGraph * t	185:29:4060:4068	1527672	0	True				
ANR	1527694	ParameterType	RGraph *		1527672	0					
ANR	1527695	Identifier	t		1527672	1					
ANR	1527696	Parameter	RGraphNode * from	185:40:4071:4086	1527672	1	True				
ANR	1527697	ParameterType	RGraphNode *		1527672	0					
ANR	1527698	Identifier	from		1527672	1					
ANR	1527699	Parameter	RGraphNode * to	185:58:4089:4102	1527672	2	True				
ANR	1527700	ParameterType	RGraphNode *		1527672	0					
ANR	1527701	Identifier	to		1527672	1					
ANR	1527702	CFGEntryNode	ENTRY		1527672		True				
ANR	1527703	CFGExitNode	EXIT		1527672		True				
ANR	1527704	Symbol	t		1527672						
ANR	1527705	Symbol	from		1527672						
ANR	1527706	Symbol	to		1527672						
ANR	1527707	Function	r_graph_add_edge_at	189:0:4150:4446							
ANR	1527708	FunctionDef	"r_graph_add_edge_at (RGraph * t , RGraphNode * from , RGraphNode * to , int nth)"		1527707	0					
ANR	1527709	CompoundStatement		189:86:4236:4446	1527707	0					
ANR	1527710	IfStatement	if ( from && to )		1527707	0					
ANR	1527711	Condition	from && to	190:5:4243:4252	1527707	0	True				
ANR	1527712	AndExpression	from && to		1527707	0		&&			
ANR	1527713	Identifier	from		1527707	0					
ANR	1527714	Identifier	to		1527707	1					
ANR	1527715	CompoundStatement		2:17:18:18	1527707	1					
ANR	1527716	ExpressionStatement	"r_list_insert ( from -> out_nodes , nth , to )"	191:2:4259:4299	1527707	0	True				
ANR	1527717	CallExpression	"r_list_insert ( from -> out_nodes , nth , to )"		1527707	0					
ANR	1527718	Callee	r_list_insert		1527707	0					
ANR	1527719	Identifier	r_list_insert		1527707	0					
ANR	1527720	ArgumentList	from -> out_nodes		1527707	1					
ANR	1527721	Argument	from -> out_nodes		1527707	0					
ANR	1527722	PtrMemberAccess	from -> out_nodes		1527707	0					
ANR	1527723	Identifier	from		1527707	0					
ANR	1527724	Identifier	out_nodes		1527707	1					
ANR	1527725	Argument	nth		1527707	1					
ANR	1527726	Identifier	nth		1527707	0					
ANR	1527727	Argument	to		1527707	2					
ANR	1527728	Identifier	to		1527707	0					
ANR	1527729	ExpressionStatement	"r_list_append ( from -> all_neighbours , to )"	192:2:4303:4343	1527707	1	True				
ANR	1527730	CallExpression	"r_list_append ( from -> all_neighbours , to )"		1527707	0					
ANR	1527731	Callee	r_list_append		1527707	0					
ANR	1527732	Identifier	r_list_append		1527707	0					
ANR	1527733	ArgumentList	from -> all_neighbours		1527707	1					
ANR	1527734	Argument	from -> all_neighbours		1527707	0					
ANR	1527735	PtrMemberAccess	from -> all_neighbours		1527707	0					
ANR	1527736	Identifier	from		1527707	0					
ANR	1527737	Identifier	all_neighbours		1527707	1					
ANR	1527738	Argument	to		1527707	1					
ANR	1527739	Identifier	to		1527707	0					
ANR	1527740	ExpressionStatement	"r_list_append ( to -> in_nodes , from )"	193:2:4347:4381	1527707	2	True				
ANR	1527741	CallExpression	"r_list_append ( to -> in_nodes , from )"		1527707	0					
ANR	1527742	Callee	r_list_append		1527707	0					
ANR	1527743	Identifier	r_list_append		1527707	0					
ANR	1527744	ArgumentList	to -> in_nodes		1527707	1					
ANR	1527745	Argument	to -> in_nodes		1527707	0					
ANR	1527746	PtrMemberAccess	to -> in_nodes		1527707	0					
ANR	1527747	Identifier	to		1527707	0					
ANR	1527748	Identifier	in_nodes		1527707	1					
ANR	1527749	Argument	from		1527707	1					
ANR	1527750	Identifier	from		1527707	0					
ANR	1527751	ExpressionStatement	"r_list_append ( to -> all_neighbours , from )"	194:2:4385:4425	1527707	3	True				
ANR	1527752	CallExpression	"r_list_append ( to -> all_neighbours , from )"		1527707	0					
ANR	1527753	Callee	r_list_append		1527707	0					
ANR	1527754	Identifier	r_list_append		1527707	0					
ANR	1527755	ArgumentList	to -> all_neighbours		1527707	1					
ANR	1527756	Argument	to -> all_neighbours		1527707	0					
ANR	1527757	PtrMemberAccess	to -> all_neighbours		1527707	0					
ANR	1527758	Identifier	to		1527707	0					
ANR	1527759	Identifier	all_neighbours		1527707	1					
ANR	1527760	Argument	from		1527707	1					
ANR	1527761	Identifier	from		1527707	0					
ANR	1527762	ExpressionStatement	t -> n_edges ++	195:2:4429:4441	1527707	4	True				
ANR	1527763	PostIncDecOperationExpression	t -> n_edges ++		1527707	0					
ANR	1527764	PtrMemberAccess	t -> n_edges		1527707	0					
ANR	1527765	Identifier	t		1527707	0					
ANR	1527766	Identifier	n_edges		1527707	1					
ANR	1527767	IncDec	++		1527707	1					
ANR	1527768	ReturnType	R_API void		1527707	1					
ANR	1527769	Identifier	r_graph_add_edge_at		1527707	2					
ANR	1527770	ParameterList	"RGraph * t , RGraphNode * from , RGraphNode * to , int nth"		1527707	3					
ANR	1527771	Parameter	RGraph * t	189:32:4182:4190	1527707	0	True				
ANR	1527772	ParameterType	RGraph *		1527707	0					
ANR	1527773	Identifier	t		1527707	1					
ANR	1527774	Parameter	RGraphNode * from	189:43:4193:4208	1527707	1	True				
ANR	1527775	ParameterType	RGraphNode *		1527707	0					
ANR	1527776	Identifier	from		1527707	1					
ANR	1527777	Parameter	RGraphNode * to	189:61:4211:4224	1527707	2	True				
ANR	1527778	ParameterType	RGraphNode *		1527707	0					
ANR	1527779	Identifier	to		1527707	1					
ANR	1527780	Parameter	int nth	189:77:4227:4233	1527707	3	True				
ANR	1527781	ParameterType	int		1527707	0					
ANR	1527782	Identifier	nth		1527707	1					
ANR	1527783	CFGEntryNode	ENTRY		1527707		True				
ANR	1527784	CFGExitNode	EXIT		1527707		True				
ANR	1527785	Symbol	* to		1527707						
ANR	1527786	Symbol	nth		1527707						
ANR	1527787	Symbol	t		1527707						
ANR	1527788	Symbol	to -> in_nodes		1527707						
ANR	1527789	Symbol	to -> all_neighbours		1527707						
ANR	1527790	Symbol	from		1527707						
ANR	1527791	Symbol	to		1527707						
ANR	1527792	Symbol	t -> n_edges		1527707						
ANR	1527793	Symbol	* from		1527707						
ANR	1527794	Symbol	from -> all_neighbours		1527707						
ANR	1527795	Symbol	* t		1527707						
ANR	1527796	Symbol	from -> out_nodes		1527707						
ANR	1527797	Function	r_graph_del_edge	199:0:4449:4790							
ANR	1527798	FunctionDef	"r_graph_del_edge (RGraph * t , RGraphNode * from , RGraphNode * to)"		1527797	0					
ANR	1527799	CompoundStatement		199:74:4523:4790	1527797	0					
ANR	1527800	IfStatement	"if ( ! from || ! to || ! r_graph_adjacent ( t , from , to ) )"		1527797	0					
ANR	1527801	Condition	"! from || ! to || ! r_graph_adjacent ( t , from , to )"	200:5:4530:4576	1527797	0	True				
ANR	1527802	OrExpression	"! from || ! to || ! r_graph_adjacent ( t , from , to )"		1527797	0		||			
ANR	1527803	UnaryOperationExpression	! from		1527797	0					
ANR	1527804	UnaryOperator	!		1527797	0					
ANR	1527805	Identifier	from		1527797	1					
ANR	1527806	OrExpression	"! to || ! r_graph_adjacent ( t , from , to )"		1527797	1		||			
ANR	1527807	UnaryOperationExpression	! to		1527797	0					
ANR	1527808	UnaryOperator	!		1527797	0					
ANR	1527809	Identifier	to		1527797	1					
ANR	1527810	UnaryOperationExpression	"! r_graph_adjacent ( t , from , to )"		1527797	1					
ANR	1527811	UnaryOperator	!		1527797	0					
ANR	1527812	CallExpression	"r_graph_adjacent ( t , from , to )"		1527797	1					
ANR	1527813	Callee	r_graph_adjacent		1527797	0					
ANR	1527814	Identifier	r_graph_adjacent		1527797	0					
ANR	1527815	ArgumentList	t		1527797	1					
ANR	1527816	Argument	t		1527797	0					
ANR	1527817	Identifier	t		1527797	0					
ANR	1527818	Argument	from		1527797	1					
ANR	1527819	Identifier	from		1527797	0					
ANR	1527820	Argument	to		1527797	2					
ANR	1527821	Identifier	to		1527797	0					
ANR	1527822	CompoundStatement		2:54:55:55	1527797	1					
ANR	1527823	ReturnStatement	return ;	201:2:4583:4589	1527797	0	True				
ANR	1527824	ExpressionStatement	"r_list_delete_data ( from -> out_nodes , to )"	203:1:4595:4635	1527797	1	True				
ANR	1527825	CallExpression	"r_list_delete_data ( from -> out_nodes , to )"		1527797	0					
ANR	1527826	Callee	r_list_delete_data		1527797	0					
ANR	1527827	Identifier	r_list_delete_data		1527797	0					
ANR	1527828	ArgumentList	from -> out_nodes		1527797	1					
ANR	1527829	Argument	from -> out_nodes		1527797	0					
ANR	1527830	PtrMemberAccess	from -> out_nodes		1527797	0					
ANR	1527831	Identifier	from		1527797	0					
ANR	1527832	Identifier	out_nodes		1527797	1					
ANR	1527833	Argument	to		1527797	1					
ANR	1527834	Identifier	to		1527797	0					
ANR	1527835	ExpressionStatement	"r_list_delete_data ( from -> all_neighbours , to )"	204:1:4638:4683	1527797	2	True				
ANR	1527836	CallExpression	"r_list_delete_data ( from -> all_neighbours , to )"		1527797	0					
ANR	1527837	Callee	r_list_delete_data		1527797	0					
ANR	1527838	Identifier	r_list_delete_data		1527797	0					
ANR	1527839	ArgumentList	from -> all_neighbours		1527797	1					
ANR	1527840	Argument	from -> all_neighbours		1527797	0					
ANR	1527841	PtrMemberAccess	from -> all_neighbours		1527797	0					
ANR	1527842	Identifier	from		1527797	0					
ANR	1527843	Identifier	all_neighbours		1527797	1					
ANR	1527844	Argument	to		1527797	1					
ANR	1527845	Identifier	to		1527797	0					
ANR	1527846	ExpressionStatement	"r_list_delete_data ( to -> in_nodes , from )"	205:1:4686:4725	1527797	3	True				
ANR	1527847	CallExpression	"r_list_delete_data ( to -> in_nodes , from )"		1527797	0					
ANR	1527848	Callee	r_list_delete_data		1527797	0					
ANR	1527849	Identifier	r_list_delete_data		1527797	0					
ANR	1527850	ArgumentList	to -> in_nodes		1527797	1					
ANR	1527851	Argument	to -> in_nodes		1527797	0					
ANR	1527852	PtrMemberAccess	to -> in_nodes		1527797	0					
ANR	1527853	Identifier	to		1527797	0					
ANR	1527854	Identifier	in_nodes		1527797	1					
ANR	1527855	Argument	from		1527797	1					
ANR	1527856	Identifier	from		1527797	0					
ANR	1527857	ExpressionStatement	"r_list_delete_data ( to -> all_neighbours , from )"	206:1:4728:4773	1527797	4	True				
ANR	1527858	CallExpression	"r_list_delete_data ( to -> all_neighbours , from )"		1527797	0					
ANR	1527859	Callee	r_list_delete_data		1527797	0					
ANR	1527860	Identifier	r_list_delete_data		1527797	0					
ANR	1527861	ArgumentList	to -> all_neighbours		1527797	1					
ANR	1527862	Argument	to -> all_neighbours		1527797	0					
ANR	1527863	PtrMemberAccess	to -> all_neighbours		1527797	0					
ANR	1527864	Identifier	to		1527797	0					
ANR	1527865	Identifier	all_neighbours		1527797	1					
ANR	1527866	Argument	from		1527797	1					
ANR	1527867	Identifier	from		1527797	0					
ANR	1527868	ExpressionStatement	t -> n_edges --	207:1:4776:4788	1527797	5	True				
ANR	1527869	PostIncDecOperationExpression	t -> n_edges --		1527797	0					
ANR	1527870	PtrMemberAccess	t -> n_edges		1527797	0					
ANR	1527871	Identifier	t		1527797	0					
ANR	1527872	Identifier	n_edges		1527797	1					
ANR	1527873	IncDec	--		1527797	1					
ANR	1527874	ReturnType	R_API void		1527797	1					
ANR	1527875	Identifier	r_graph_del_edge		1527797	2					
ANR	1527876	ParameterList	"RGraph * t , RGraphNode * from , RGraphNode * to"		1527797	3					
ANR	1527877	Parameter	RGraph * t	199:29:4478:4486	1527797	0	True				
ANR	1527878	ParameterType	RGraph *		1527797	0					
ANR	1527879	Identifier	t		1527797	1					
ANR	1527880	Parameter	RGraphNode * from	199:40:4489:4504	1527797	1	True				
ANR	1527881	ParameterType	RGraphNode *		1527797	0					
ANR	1527882	Identifier	from		1527797	1					
ANR	1527883	Parameter	RGraphNode * to	199:58:4507:4520	1527797	2	True				
ANR	1527884	ParameterType	RGraphNode *		1527797	0					
ANR	1527885	Identifier	to		1527797	1					
ANR	1527886	CFGEntryNode	ENTRY		1527797		True				
ANR	1527887	CFGExitNode	EXIT		1527797		True				
ANR	1527888	Symbol	* to		1527797						
ANR	1527889	Symbol	t		1527797						
ANR	1527890	Symbol	to -> in_nodes		1527797						
ANR	1527891	Symbol	to -> all_neighbours		1527797						
ANR	1527892	Symbol	r_graph_adjacent		1527797						
ANR	1527893	Symbol	from		1527797						
ANR	1527894	Symbol	to		1527797						
ANR	1527895	Symbol	t -> n_edges		1527797						
ANR	1527896	Symbol	* from		1527797						
ANR	1527897	Symbol	from -> all_neighbours		1527797						
ANR	1527898	Symbol	* t		1527797						
ANR	1527899	Symbol	from -> out_nodes		1527797						
ANR	1527900	Function	r_graph_get_neighbours	212:6:4905:5013							
ANR	1527901	FunctionDef	"r_graph_get_neighbours (const RGraph * g , const RGraphNode * n)"		1527900	0					
ANR	1527902	CompoundStatement		212:81:4980:5013	1527900	0					
ANR	1527903	ReturnStatement	return n ? n -> out_nodes : NULL ;	213:1:4983:5011	1527900	0	True				
ANR	1527904	ConditionalExpression	n ? n -> out_nodes : NULL		1527900	0					
ANR	1527905	Condition	n		1527900	0					
ANR	1527906	Identifier	n		1527900	0					
ANR	1527907	PtrMemberAccess	n -> out_nodes		1527900	1					
ANR	1527908	Identifier	n		1527900	0					
ANR	1527909	Identifier	out_nodes		1527900	1					
ANR	1527910	Identifier	NULL		1527900	2					
ANR	1527911	ReturnType	const RList *		1527900	1					
ANR	1527912	Identifier	r_graph_get_neighbours		1527900	2					
ANR	1527913	ParameterList	"const RGraph * g , const RGraphNode * n"		1527900	3					
ANR	1527914	Parameter	const RGraph * g	212:43:4942:4956	1527900	0	True				
ANR	1527915	ParameterType	const RGraph *		1527900	0					
ANR	1527916	Identifier	g		1527900	1					
ANR	1527917	Parameter	const RGraphNode * n	212:60:4959:4977	1527900	1	True				
ANR	1527918	ParameterType	const RGraphNode *		1527900	0					
ANR	1527919	Identifier	n		1527900	1					
ANR	1527920	CFGEntryNode	ENTRY		1527900		True				
ANR	1527921	CFGExitNode	EXIT		1527900		True				
ANR	1527922	Symbol	NULL		1527900						
ANR	1527923	Symbol	g		1527900						
ANR	1527924	Symbol	* n		1527900						
ANR	1527925	Symbol	n -> out_nodes		1527900						
ANR	1527926	Symbol	n		1527900						
ANR	1527927	Function	r_graph_nth_neighbour	218:0:5134:5289							
ANR	1527928	FunctionDef	"r_graph_nth_neighbour (const RGraph * g , const RGraphNode * n , int nth)"		1527927	0					
ANR	1527929	CompoundStatement		218:88:5222:5289	1527927	0					
ANR	1527930	ReturnStatement	"return n ? ( RGraphNode * ) r_list_get_n ( n -> out_nodes , nth ) : NULL ;"	219:1:5225:5287	1527927	0	True				
ANR	1527931	ConditionalExpression	"n ? ( RGraphNode * ) r_list_get_n ( n -> out_nodes , nth ) : NULL"		1527927	0					
ANR	1527932	Condition	n		1527927	0					
ANR	1527933	Identifier	n		1527927	0					
ANR	1527934	CastExpression	"( RGraphNode * ) r_list_get_n ( n -> out_nodes , nth )"		1527927	1					
ANR	1527935	CastTarget	RGraphNode *		1527927	0					
ANR	1527936	CallExpression	"r_list_get_n ( n -> out_nodes , nth )"		1527927	1					
ANR	1527937	Callee	r_list_get_n		1527927	0					
ANR	1527938	Identifier	r_list_get_n		1527927	0					
ANR	1527939	ArgumentList	n -> out_nodes		1527927	1					
ANR	1527940	Argument	n -> out_nodes		1527927	0					
ANR	1527941	PtrMemberAccess	n -> out_nodes		1527927	0					
ANR	1527942	Identifier	n		1527927	0					
ANR	1527943	Identifier	out_nodes		1527927	1					
ANR	1527944	Argument	nth		1527927	1					
ANR	1527945	Identifier	nth		1527927	0					
ANR	1527946	Identifier	NULL		1527927	2					
ANR	1527947	ReturnType	R_API RGraphNode *		1527927	1					
ANR	1527948	Identifier	r_graph_nth_neighbour		1527927	2					
ANR	1527949	ParameterList	"const RGraph * g , const RGraphNode * n , int nth"		1527927	3					
ANR	1527950	Parameter	const RGraph * g	218:41:5175:5189	1527927	0	True				
ANR	1527951	ParameterType	const RGraph *		1527927	0					
ANR	1527952	Identifier	g		1527927	1					
ANR	1527953	Parameter	const RGraphNode * n	218:58:5192:5210	1527927	1	True				
ANR	1527954	ParameterType	const RGraphNode *		1527927	0					
ANR	1527955	Identifier	n		1527927	1					
ANR	1527956	Parameter	int nth	218:79:5213:5219	1527927	2	True				
ANR	1527957	ParameterType	int		1527927	0					
ANR	1527958	Identifier	nth		1527927	1					
ANR	1527959	CFGEntryNode	ENTRY		1527927		True				
ANR	1527960	CFGExitNode	EXIT		1527927		True				
ANR	1527961	Symbol	nth		1527927						
ANR	1527962	Symbol	NULL		1527927						
ANR	1527963	Symbol	g		1527927						
ANR	1527964	Symbol	* n		1527927						
ANR	1527965	Symbol	r_list_get_n		1527927						
ANR	1527966	Symbol	n -> out_nodes		1527927						
ANR	1527967	Symbol	n		1527927						
ANR	1527968	Function	r_graph_innodes	223:6:5349:5449							
ANR	1527969	FunctionDef	"r_graph_innodes (const RGraph * g , const RGraphNode * n)"		1527968	0					
ANR	1527970	CompoundStatement		223:74:5417:5449	1527968	0					
ANR	1527971	ReturnStatement	return n ? n -> in_nodes : NULL ;	224:1:5420:5447	1527968	0	True				
ANR	1527972	ConditionalExpression	n ? n -> in_nodes : NULL		1527968	0					
ANR	1527973	Condition	n		1527968	0					
ANR	1527974	Identifier	n		1527968	0					
ANR	1527975	PtrMemberAccess	n -> in_nodes		1527968	1					
ANR	1527976	Identifier	n		1527968	0					
ANR	1527977	Identifier	in_nodes		1527968	1					
ANR	1527978	Identifier	NULL		1527968	2					
ANR	1527979	ReturnType	const RList *		1527968	1					
ANR	1527980	Identifier	r_graph_innodes		1527968	2					
ANR	1527981	ParameterList	"const RGraph * g , const RGraphNode * n"		1527968	3					
ANR	1527982	Parameter	const RGraph * g	223:36:5379:5393	1527968	0	True				
ANR	1527983	ParameterType	const RGraph *		1527968	0					
ANR	1527984	Identifier	g		1527968	1					
ANR	1527985	Parameter	const RGraphNode * n	223:53:5396:5414	1527968	1	True				
ANR	1527986	ParameterType	const RGraphNode *		1527968	0					
ANR	1527987	Identifier	n		1527968	1					
ANR	1527988	CFGEntryNode	ENTRY		1527968		True				
ANR	1527989	CFGExitNode	EXIT		1527968		True				
ANR	1527990	Symbol	NULL		1527968						
ANR	1527991	Symbol	g		1527968						
ANR	1527992	Symbol	n -> in_nodes		1527968						
ANR	1527993	Symbol	* n		1527968						
ANR	1527994	Symbol	n		1527968						
ANR	1527995	Function	r_graph_all_neighbours	228:6:5533:5646							
ANR	1527996	FunctionDef	"r_graph_all_neighbours (const RGraph * g , const RGraphNode * n)"		1527995	0					
ANR	1527997	CompoundStatement		228:81:5608:5646	1527995	0					
ANR	1527998	ReturnStatement	return n ? n -> all_neighbours : NULL ;	229:1:5611:5644	1527995	0	True				
ANR	1527999	ConditionalExpression	n ? n -> all_neighbours : NULL		1527995	0					
ANR	1528000	Condition	n		1527995	0					
ANR	1528001	Identifier	n		1527995	0					
ANR	1528002	PtrMemberAccess	n -> all_neighbours		1527995	1					
ANR	1528003	Identifier	n		1527995	0					
ANR	1528004	Identifier	all_neighbours		1527995	1					
ANR	1528005	Identifier	NULL		1527995	2					
ANR	1528006	ReturnType	const RList *		1527995	1					
ANR	1528007	Identifier	r_graph_all_neighbours		1527995	2					
ANR	1528008	ParameterList	"const RGraph * g , const RGraphNode * n"		1527995	3					
ANR	1528009	Parameter	const RGraph * g	228:43:5570:5584	1527995	0	True				
ANR	1528010	ParameterType	const RGraph *		1527995	0					
ANR	1528011	Identifier	g		1527995	1					
ANR	1528012	Parameter	const RGraphNode * n	228:60:5587:5605	1527995	1	True				
ANR	1528013	ParameterType	const RGraphNode *		1527995	0					
ANR	1528014	Identifier	n		1527995	1					
ANR	1528015	CFGEntryNode	ENTRY		1527995		True				
ANR	1528016	CFGExitNode	EXIT		1527995		True				
ANR	1528017	Symbol	NULL		1527995						
ANR	1528018	Symbol	g		1527995						
ANR	1528019	Symbol	* n		1527995						
ANR	1528020	Symbol	n -> all_neighbours		1527995						
ANR	1528021	Symbol	n		1527995						
ANR	1528022	Function	r_graph_get_nodes	232:6:5655:5733							
ANR	1528023	FunctionDef	r_graph_get_nodes (const RGraph * g)		1528022	0					
ANR	1528024	CompoundStatement		232:55:5704:5733	1528022	0					
ANR	1528025	ReturnStatement	return g ? g -> nodes : NULL ;	233:1:5707:5731	1528022	0	True				
ANR	1528026	ConditionalExpression	g ? g -> nodes : NULL		1528022	0					
ANR	1528027	Condition	g		1528022	0					
ANR	1528028	Identifier	g		1528022	0					
ANR	1528029	PtrMemberAccess	g -> nodes		1528022	1					
ANR	1528030	Identifier	g		1528022	0					
ANR	1528031	Identifier	nodes		1528022	1					
ANR	1528032	Identifier	NULL		1528022	2					
ANR	1528033	ReturnType	const RList *		1528022	1					
ANR	1528034	Identifier	r_graph_get_nodes		1528022	2					
ANR	1528035	ParameterList	const RGraph * g		1528022	3					
ANR	1528036	Parameter	const RGraph * g	232:38:5687:5701	1528022	0	True				
ANR	1528037	ParameterType	const RGraph *		1528022	0					
ANR	1528038	Identifier	g		1528022	1					
ANR	1528039	CFGEntryNode	ENTRY		1528022		True				
ANR	1528040	CFGExitNode	EXIT		1528022		True				
ANR	1528041	Symbol	* g		1528022						
ANR	1528042	Symbol	NULL		1528022						
ANR	1528043	Symbol	g -> nodes		1528022						
ANR	1528044	Symbol	g		1528022						
ANR	1528045	Function	r_graph_adjacent	237:0:5805:5999							
ANR	1528046	FunctionDef	"r_graph_adjacent (const RGraph * g , const RGraphNode * from , const RGraphNode * to)"		1528045	0					
ANR	1528047	CompoundStatement		237:91:5896:5999	1528045	0					
ANR	1528048	IfStatement	if ( ! g || ! from )		1528045	0					
ANR	1528049	Condition	! g || ! from	238:5:5903:5913	1528045	0	True				
ANR	1528050	OrExpression	! g || ! from		1528045	0		||			
ANR	1528051	UnaryOperationExpression	! g		1528045	0					
ANR	1528052	UnaryOperator	!		1528045	0					
ANR	1528053	Identifier	g		1528045	1					
ANR	1528054	UnaryOperationExpression	! from		1528045	1					
ANR	1528055	UnaryOperator	!		1528045	0					
ANR	1528056	Identifier	from		1528045	1					
ANR	1528057	CompoundStatement		2:18:19:19	1528045	1					
ANR	1528058	ReturnStatement	return false ;	239:2:5920:5932	1528045	0	True				
ANR	1528059	Identifier	false		1528045	0					
ANR	1528060	ReturnStatement	"return r_list_contains ( from -> out_nodes , to ) ? true : false ;"	241:1:5938:5997	1528045	1	True				
ANR	1528061	ConditionalExpression	"r_list_contains ( from -> out_nodes , to ) ? true : false"		1528045	0					
ANR	1528062	Condition	"r_list_contains ( from -> out_nodes , to )"		1528045	0					
ANR	1528063	CallExpression	"r_list_contains ( from -> out_nodes , to )"		1528045	0					
ANR	1528064	Callee	r_list_contains		1528045	0					
ANR	1528065	Identifier	r_list_contains		1528045	0					
ANR	1528066	ArgumentList	from -> out_nodes		1528045	1					
ANR	1528067	Argument	from -> out_nodes		1528045	0					
ANR	1528068	PtrMemberAccess	from -> out_nodes		1528045	0					
ANR	1528069	Identifier	from		1528045	0					
ANR	1528070	Identifier	out_nodes		1528045	1					
ANR	1528071	Argument	to		1528045	1					
ANR	1528072	Identifier	to		1528045	0					
ANR	1528073	Identifier	true		1528045	1					
ANR	1528074	Identifier	false		1528045	2					
ANR	1528075	ReturnType	R_API int		1528045	1					
ANR	1528076	Identifier	r_graph_adjacent		1528045	2					
ANR	1528077	ParameterList	"const RGraph * g , const RGraphNode * from , const RGraphNode * to"		1528045	3					
ANR	1528078	Parameter	const RGraph * g	237:28:5833:5847	1528045	0	True				
ANR	1528079	ParameterType	const RGraph *		1528045	0					
ANR	1528080	Identifier	g		1528045	1					
ANR	1528081	Parameter	const RGraphNode * from	237:45:5850:5871	1528045	1	True				
ANR	1528082	ParameterType	const RGraphNode *		1528045	0					
ANR	1528083	Identifier	from		1528045	1					
ANR	1528084	Parameter	const RGraphNode * to	237:69:5874:5893	1528045	2	True				
ANR	1528085	ParameterType	const RGraphNode *		1528045	0					
ANR	1528086	Identifier	to		1528045	1					
ANR	1528087	CFGEntryNode	ENTRY		1528045		True				
ANR	1528088	CFGExitNode	EXIT		1528045		True				
ANR	1528089	Symbol	g		1528045						
ANR	1528090	Symbol	false		1528045						
ANR	1528091	Symbol	true		1528045						
ANR	1528092	Symbol	from		1528045						
ANR	1528093	Symbol	to		1528045						
ANR	1528094	Symbol	* from		1528045						
ANR	1528095	Symbol	from -> out_nodes		1528045						
ANR	1528096	Symbol	r_list_contains		1528045						
ANR	1528097	Function	r_graph_dfs_node	244:0:6002:6225							
ANR	1528098	FunctionDef	"r_graph_dfs_node (RGraph * g , RGraphNode * n , RGraphVisitor * vis)"		1528097	0					
ANR	1528099	CompoundStatement		244:75:6077:6225	1528097	0					
ANR	1528100	IfStatement	if ( ! g || ! n || ! vis )		1528097	0					
ANR	1528101	Condition	! g || ! n || ! vis	245:5:6084:6099	1528097	0	True				
ANR	1528102	OrExpression	! g || ! n || ! vis		1528097	0		||			
ANR	1528103	UnaryOperationExpression	! g		1528097	0					
ANR	1528104	UnaryOperator	!		1528097	0					
ANR	1528105	Identifier	g		1528097	1					
ANR	1528106	OrExpression	! n || ! vis		1528097	1		||			
ANR	1528107	UnaryOperationExpression	! n		1528097	0					
ANR	1528108	UnaryOperator	!		1528097	0					
ANR	1528109	Identifier	n		1528097	1					
ANR	1528110	UnaryOperationExpression	! vis		1528097	1					
ANR	1528111	UnaryOperator	!		1528097	0					
ANR	1528112	Identifier	vis		1528097	1					
ANR	1528113	CompoundStatement		2:23:24:24	1528097	1					
ANR	1528114	ReturnStatement	return ;	246:2:6106:6112	1528097	0	True				
ANR	1528115	IdentifierDeclStatement	"int * color = R_NEWS0 ( int , g -> last_index ) ;"	248:1:6118:6159	1528097	1	True				
ANR	1528116	IdentifierDecl	"* color = R_NEWS0 ( int , g -> last_index )"		1528097	0					
ANR	1528117	IdentifierDeclType	int *		1528097	0					
ANR	1528118	Identifier	color		1528097	1					
ANR	1528119	AssignmentExpression	"* color = R_NEWS0 ( int , g -> last_index )"		1528097	2		=			
ANR	1528120	Identifier	color		1528097	0					
ANR	1528121	CallExpression	"R_NEWS0 ( int , g -> last_index )"		1528097	1					
ANR	1528122	Callee	R_NEWS0		1528097	0					
ANR	1528123	Identifier	R_NEWS0		1528097	0					
ANR	1528124	ArgumentList	int		1528097	1					
ANR	1528125	Argument	int		1528097	0					
ANR	1528126	Identifier	int		1528097	0					
ANR	1528127	Argument	g -> last_index		1528097	1					
ANR	1528128	PtrMemberAccess	g -> last_index		1528097	0					
ANR	1528129	Identifier	g		1528097	0					
ANR	1528130	Identifier	last_index		1528097	1					
ANR	1528131	IfStatement	if ( color )		1528097	2					
ANR	1528132	Condition	color	249:5:6166:6170	1528097	0	True				
ANR	1528133	Identifier	color		1528097	0					
ANR	1528134	CompoundStatement		6:12:95:95	1528097	1					
ANR	1528135	ExpressionStatement	"dfs_node ( g , n , vis , color )"	250:2:6177:6204	1528097	0	True				
ANR	1528136	CallExpression	"dfs_node ( g , n , vis , color )"		1528097	0					
ANR	1528137	Callee	dfs_node		1528097	0					
ANR	1528138	Identifier	dfs_node		1528097	0					
ANR	1528139	ArgumentList	g		1528097	1					
ANR	1528140	Argument	g		1528097	0					
ANR	1528141	Identifier	g		1528097	0					
ANR	1528142	Argument	n		1528097	1					
ANR	1528143	Identifier	n		1528097	0					
ANR	1528144	Argument	vis		1528097	2					
ANR	1528145	Identifier	vis		1528097	0					
ANR	1528146	Argument	color		1528097	3					
ANR	1528147	Identifier	color		1528097	0					
ANR	1528148	ExpressionStatement	free ( color )	251:2:6208:6220	1528097	1	True				
ANR	1528149	CallExpression	free ( color )		1528097	0					
ANR	1528150	Callee	free		1528097	0					
ANR	1528151	Identifier	free		1528097	0					
ANR	1528152	ArgumentList	color		1528097	1					
ANR	1528153	Argument	color		1528097	0					
ANR	1528154	Identifier	color		1528097	0					
ANR	1528155	ReturnType	R_API void		1528097	1					
ANR	1528156	Identifier	r_graph_dfs_node		1528097	2					
ANR	1528157	ParameterList	"RGraph * g , RGraphNode * n , RGraphVisitor * vis"		1528097	3					
ANR	1528158	Parameter	RGraph * g	244:29:6031:6039	1528097	0	True				
ANR	1528159	ParameterType	RGraph *		1528097	0					
ANR	1528160	Identifier	g		1528097	1					
ANR	1528161	Parameter	RGraphNode * n	244:40:6042:6054	1528097	1	True				
ANR	1528162	ParameterType	RGraphNode *		1528097	0					
ANR	1528163	Identifier	n		1528097	1					
ANR	1528164	Parameter	RGraphVisitor * vis	244:55:6057:6074	1528097	2	True				
ANR	1528165	ParameterType	RGraphVisitor *		1528097	0					
ANR	1528166	Identifier	vis		1528097	1					
ANR	1528167	CFGEntryNode	ENTRY		1528097		True				
ANR	1528168	CFGExitNode	EXIT		1528097		True				
ANR	1528169	Symbol	vis		1528097						
ANR	1528170	Symbol	* g		1528097						
ANR	1528171	Symbol	color		1528097						
ANR	1528172	Symbol	g		1528097						
ANR	1528173	Symbol	R_NEWS0		1528097						
ANR	1528174	Symbol	n		1528097						
ANR	1528175	Symbol	int		1528097						
ANR	1528176	Symbol	g -> last_index		1528097						
ANR	1528177	Function	r_graph_dfs	255:0:6228:6543							
ANR	1528178	FunctionDef	"r_graph_dfs (RGraph * g , RGraphVisitor * vis)"		1528177	0					
ANR	1528179	CompoundStatement		255:55:6283:6543	1528177	0					
ANR	1528180	ExpressionStatement	r_return_if_fail ( g && vis )	256:1:6286:6313	1528177	0	True				
ANR	1528181	CallExpression	r_return_if_fail ( g && vis )		1528177	0					
ANR	1528182	Callee	r_return_if_fail		1528177	0					
ANR	1528183	Identifier	r_return_if_fail		1528177	0					
ANR	1528184	ArgumentList	g && vis		1528177	1					
ANR	1528185	Argument	g && vis		1528177	0					
ANR	1528186	AndExpression	g && vis		1528177	0		&&			
ANR	1528187	Identifier	g		1528177	0					
ANR	1528188	Identifier	vis		1528177	1					
ANR	1528189	IdentifierDeclStatement	RGraphNode * n ;	257:1:6316:6329	1528177	1	True				
ANR	1528190	IdentifierDecl	* n		1528177	0					
ANR	1528191	IdentifierDeclType	RGraphNode *		1528177	0					
ANR	1528192	Identifier	n		1528177	1					
ANR	1528193	IdentifierDeclStatement	RListIter * it ;	258:1:6332:6345	1528177	2	True				
ANR	1528194	IdentifierDecl	* it		1528177	0					
ANR	1528195	IdentifierDeclType	RListIter *		1528177	0					
ANR	1528196	Identifier	it		1528177	1					
ANR	1528197	IdentifierDeclStatement	"int * color = R_NEWS0 ( int , g -> last_index ) ;"	260:1:6349:6390	1528177	3	True				
ANR	1528198	IdentifierDecl	"* color = R_NEWS0 ( int , g -> last_index )"		1528177	0					
ANR	1528199	IdentifierDeclType	int *		1528177	0					
ANR	1528200	Identifier	color		1528177	1					
ANR	1528201	AssignmentExpression	"* color = R_NEWS0 ( int , g -> last_index )"		1528177	2		=			
ANR	1528202	Identifier	color		1528177	0					
ANR	1528203	CallExpression	"R_NEWS0 ( int , g -> last_index )"		1528177	1					
ANR	1528204	Callee	R_NEWS0		1528177	0					
ANR	1528205	Identifier	R_NEWS0		1528177	0					
ANR	1528206	ArgumentList	int		1528177	1					
ANR	1528207	Argument	int		1528177	0					
ANR	1528208	Identifier	int		1528177	0					
ANR	1528209	Argument	g -> last_index		1528177	1					
ANR	1528210	PtrMemberAccess	g -> last_index		1528177	0					
ANR	1528211	Identifier	g		1528177	0					
ANR	1528212	Identifier	last_index		1528177	1					
ANR	1528213	IfStatement	if ( color )		1528177	4					
ANR	1528214	Condition	color	261:5:6397:6401	1528177	0	True				
ANR	1528215	Identifier	color		1528177	0					
ANR	1528216	CompoundStatement		7:12:120:120	1528177	1					
ANR	1528217	Statement	r_list_foreach	262:2:6408:6421	1528177	0	True				
ANR	1528218	Statement	(	262:17:6423:6423	1528177	1	True				
ANR	1528219	Statement	g	262:18:6424:6424	1528177	2	True				
ANR	1528220	Statement	->	262:19:6425:6426	1528177	3	True				
ANR	1528221	Statement	nodes	262:21:6427:6431	1528177	4	True				
ANR	1528222	Statement	","	262:26:6432:6432	1528177	5	True				
ANR	1528223	Statement	it	262:28:6434:6435	1528177	6	True				
ANR	1528224	Statement	","	262:30:6436:6436	1528177	7	True				
ANR	1528225	Statement	n	262:32:6438:6438	1528177	8	True				
ANR	1528226	Statement	)	262:33:6439:6439	1528177	9	True				
ANR	1528227	CompoundStatement		8:35:157:157	1528177	10					
ANR	1528228	IfStatement	if ( color [ n -> idx ] == WHITE_COLOR )		1528177	0					
ANR	1528229	Condition	color [ n -> idx ] == WHITE_COLOR	263:7:6450:6477	1528177	0	True				
ANR	1528230	EqualityExpression	color [ n -> idx ] == WHITE_COLOR		1528177	0		==			
ANR	1528231	ArrayIndexing	color [ n -> idx ]		1528177	0					
ANR	1528232	Identifier	color		1528177	0					
ANR	1528233	PtrMemberAccess	n -> idx		1528177	1					
ANR	1528234	Identifier	n		1528177	0					
ANR	1528235	Identifier	idx		1528177	1					
ANR	1528236	Identifier	WHITE_COLOR		1528177	1					
ANR	1528237	CompoundStatement		9:37:196:196	1528177	1					
ANR	1528238	ExpressionStatement	"dfs_node ( g , n , vis , color )"	264:4:6486:6513	1528177	0	True				
ANR	1528239	CallExpression	"dfs_node ( g , n , vis , color )"		1528177	0					
ANR	1528240	Callee	dfs_node		1528177	0					
ANR	1528241	Identifier	dfs_node		1528177	0					
ANR	1528242	ArgumentList	g		1528177	1					
ANR	1528243	Argument	g		1528177	0					
ANR	1528244	Identifier	g		1528177	0					
ANR	1528245	Argument	n		1528177	1					
ANR	1528246	Identifier	n		1528177	0					
ANR	1528247	Argument	vis		1528177	2					
ANR	1528248	Identifier	vis		1528177	0					
ANR	1528249	Argument	color		1528177	3					
ANR	1528250	Identifier	color		1528177	0					
ANR	1528251	ExpressionStatement	free ( color )	267:2:6526:6538	1528177	11	True				
ANR	1528252	CallExpression	free ( color )		1528177	0					
ANR	1528253	Callee	free		1528177	0					
ANR	1528254	Identifier	free		1528177	0					
ANR	1528255	ArgumentList	color		1528177	1					
ANR	1528256	Argument	color		1528177	0					
ANR	1528257	Identifier	color		1528177	0					
ANR	1528258	ReturnType	R_API void		1528177	1					
ANR	1528259	Identifier	r_graph_dfs		1528177	2					
ANR	1528260	ParameterList	"RGraph * g , RGraphVisitor * vis"		1528177	3					
ANR	1528261	Parameter	RGraph * g	255:24:6252:6260	1528177	0	True				
ANR	1528262	ParameterType	RGraph *		1528177	0					
ANR	1528263	Identifier	g		1528177	1					
ANR	1528264	Parameter	RGraphVisitor * vis	255:35:6263:6280	1528177	1	True				
ANR	1528265	ParameterType	RGraphVisitor *		1528177	0					
ANR	1528266	Identifier	vis		1528177	1					
ANR	1528267	CFGEntryNode	ENTRY		1528177		True				
ANR	1528268	CFGExitNode	EXIT		1528177		True				
ANR	1528269	Symbol	vis		1528177						
ANR	1528270	Symbol	color		1528177						
ANR	1528271	Symbol	g		1528177						
ANR	1528272	Symbol	* color		1528177						
ANR	1528273	Symbol	it		1528177						
ANR	1528274	Symbol	WHITE_COLOR		1528177						
ANR	1528275	Symbol	n -> idx		1528177						
ANR	1528276	Symbol	n		1528177						
ANR	1528277	Symbol	int		1528177						
ANR	1528278	Symbol	* g		1528177						
ANR	1528279	Symbol	* n -> idx		1528177						
ANR	1528280	Symbol	R_NEWS0		1528177						
ANR	1528281	Symbol	* n		1528177						
ANR	1528282	Symbol	* * n		1528177						
ANR	1528283	Symbol	g -> last_index		1528177						
