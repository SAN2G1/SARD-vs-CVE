command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2527862	File	data/converged/CVE-2019-16718~_radare2/libr_anal_type.c								
ANR	2527863	Function	is_type	7:0:135:453							
ANR	2527864	FunctionDef	is_type (char * type)		2527863	0					
ANR	2527865	CompoundStatement		7:33:168:453	2527863	0					
ANR	2527866	IdentifierDeclStatement	char * name = NULL ;	8:1:171:188	2527863	0	True				
ANR	2527867	IdentifierDecl	* name = NULL		2527863	0					
ANR	2527868	IdentifierDeclType	char *		2527863	0					
ANR	2527869	Identifier	name		2527863	1					
ANR	2527870	AssignmentExpression	* name = NULL		2527863	2		=			
ANR	2527871	Identifier	NULL		2527863	0					
ANR	2527872	Identifier	NULL		2527863	1					
ANR	2527873	IfStatement	"if ( ( name = strstr ( type , ""=type"" ) ) || ( name = strstr ( type , ""=struct"" ) ) || ( name = strstr ( type , ""=union"" ) ) || ( name = strstr ( type , ""=enum"" ) ) || ( name = strstr ( type , ""=typedef"" ) ) || ( name = strstr ( type , ""=func"" ) ) )"		2527863	1					
ANR	2527874	Condition	"( name = strstr ( type , ""=type"" ) ) || ( name = strstr ( type , ""=struct"" ) ) || ( name = strstr ( type , ""=union"" ) ) || ( name = strstr ( type , ""=enum"" ) ) || ( name = strstr ( type , ""=typedef"" ) ) || ( name = strstr ( type , ""=func"" ) )"	9:5:195:416	2527863	0	True				
ANR	2527875	OrExpression	"( name = strstr ( type , ""=type"" ) ) || ( name = strstr ( type , ""=struct"" ) ) || ( name = strstr ( type , ""=union"" ) ) || ( name = strstr ( type , ""=enum"" ) ) || ( name = strstr ( type , ""=typedef"" ) ) || ( name = strstr ( type , ""=func"" ) )"		2527863	0		||			
ANR	2527876	AssignmentExpression	"name = strstr ( type , ""=type"" )"		2527863	0		=			
ANR	2527877	Identifier	name		2527863	0					
ANR	2527878	CallExpression	"strstr ( type , ""=type"" )"		2527863	1					
ANR	2527879	Callee	strstr		2527863	0					
ANR	2527880	Identifier	strstr		2527863	0					
ANR	2527881	ArgumentList	type		2527863	1					
ANR	2527882	Argument	type		2527863	0					
ANR	2527883	Identifier	type		2527863	0					
ANR	2527884	Argument	"""=type"""		2527863	1					
ANR	2527885	PrimaryExpression	"""=type"""		2527863	0					
ANR	2527886	OrExpression	"( name = strstr ( type , ""=struct"" ) ) || ( name = strstr ( type , ""=union"" ) ) || ( name = strstr ( type , ""=enum"" ) ) || ( name = strstr ( type , ""=typedef"" ) ) || ( name = strstr ( type , ""=func"" ) )"		2527863	1		||			
ANR	2527887	AssignmentExpression	"name = strstr ( type , ""=struct"" )"		2527863	0		=			
ANR	2527888	Identifier	name		2527863	0					
ANR	2527889	CallExpression	"strstr ( type , ""=struct"" )"		2527863	1					
ANR	2527890	Callee	strstr		2527863	0					
ANR	2527891	Identifier	strstr		2527863	0					
ANR	2527892	ArgumentList	type		2527863	1					
ANR	2527893	Argument	type		2527863	0					
ANR	2527894	Identifier	type		2527863	0					
ANR	2527895	Argument	"""=struct"""		2527863	1					
ANR	2527896	PrimaryExpression	"""=struct"""		2527863	0					
ANR	2527897	OrExpression	"( name = strstr ( type , ""=union"" ) ) || ( name = strstr ( type , ""=enum"" ) ) || ( name = strstr ( type , ""=typedef"" ) ) || ( name = strstr ( type , ""=func"" ) )"		2527863	1		||			
ANR	2527898	AssignmentExpression	"name = strstr ( type , ""=union"" )"		2527863	0		=			
ANR	2527899	Identifier	name		2527863	0					
ANR	2527900	CallExpression	"strstr ( type , ""=union"" )"		2527863	1					
ANR	2527901	Callee	strstr		2527863	0					
ANR	2527902	Identifier	strstr		2527863	0					
ANR	2527903	ArgumentList	type		2527863	1					
ANR	2527904	Argument	type		2527863	0					
ANR	2527905	Identifier	type		2527863	0					
ANR	2527906	Argument	"""=union"""		2527863	1					
ANR	2527907	PrimaryExpression	"""=union"""		2527863	0					
ANR	2527908	OrExpression	"( name = strstr ( type , ""=enum"" ) ) || ( name = strstr ( type , ""=typedef"" ) ) || ( name = strstr ( type , ""=func"" ) )"		2527863	1		||			
ANR	2527909	AssignmentExpression	"name = strstr ( type , ""=enum"" )"		2527863	0		=			
ANR	2527910	Identifier	name		2527863	0					
ANR	2527911	CallExpression	"strstr ( type , ""=enum"" )"		2527863	1					
ANR	2527912	Callee	strstr		2527863	0					
ANR	2527913	Identifier	strstr		2527863	0					
ANR	2527914	ArgumentList	type		2527863	1					
ANR	2527915	Argument	type		2527863	0					
ANR	2527916	Identifier	type		2527863	0					
ANR	2527917	Argument	"""=enum"""		2527863	1					
ANR	2527918	PrimaryExpression	"""=enum"""		2527863	0					
ANR	2527919	OrExpression	"( name = strstr ( type , ""=typedef"" ) ) || ( name = strstr ( type , ""=func"" ) )"		2527863	1		||			
ANR	2527920	AssignmentExpression	"name = strstr ( type , ""=typedef"" )"		2527863	0		=			
ANR	2527921	Identifier	name		2527863	0					
ANR	2527922	CallExpression	"strstr ( type , ""=typedef"" )"		2527863	1					
ANR	2527923	Callee	strstr		2527863	0					
ANR	2527924	Identifier	strstr		2527863	0					
ANR	2527925	ArgumentList	type		2527863	1					
ANR	2527926	Argument	type		2527863	0					
ANR	2527927	Identifier	type		2527863	0					
ANR	2527928	Argument	"""=typedef"""		2527863	1					
ANR	2527929	PrimaryExpression	"""=typedef"""		2527863	0					
ANR	2527930	AssignmentExpression	"name = strstr ( type , ""=func"" )"		2527863	1		=			
ANR	2527931	Identifier	name		2527863	0					
ANR	2527932	CallExpression	"strstr ( type , ""=func"" )"		2527863	1					
ANR	2527933	Callee	strstr		2527863	0					
ANR	2527934	Identifier	strstr		2527863	0					
ANR	2527935	ArgumentList	type		2527863	1					
ANR	2527936	Argument	type		2527863	0					
ANR	2527937	Identifier	type		2527863	0					
ANR	2527938	Argument	"""=func"""		2527863	1					
ANR	2527939	PrimaryExpression	"""=func"""		2527863	0					
ANR	2527940	CompoundStatement		8:35:250:250	2527863	1					
ANR	2527941	ReturnStatement	return name ;	15:2:423:434	2527863	0	True				
ANR	2527942	Identifier	name		2527863	0					
ANR	2527943	ReturnStatement	return NULL ;	17:1:440:451	2527863	2	True				
ANR	2527944	Identifier	NULL		2527863	0					
ANR	2527945	ReturnType	static char *		2527863	1					
ANR	2527946	Identifier	is_type		2527863	2					
ANR	2527947	ParameterList	char * type		2527863	3					
ANR	2527948	Parameter	char * type	7:21:156:165	2527863	0	True				
ANR	2527949	ParameterType	char *		2527863	0					
ANR	2527950	Identifier	type		2527863	1					
ANR	2527951	CFGEntryNode	ENTRY		2527863		True				
ANR	2527952	CFGExitNode	EXIT		2527863		True				
ANR	2527953	Symbol	NULL		2527863						
ANR	2527954	Symbol	strstr		2527863						
ANR	2527955	Symbol	name		2527863						
ANR	2527956	Symbol	type		2527863						
ANR	2527957	Function	save_type_size	25:0:621:1087							
ANR	2527958	FunctionDef	"save_type_size (Sdb * sdb_types , char * name)"		2527957	0					
ANR	2527959	CompoundStatement		25:55:676:1087	2527957	0					
ANR	2527960	IdentifierDeclStatement	char * type = NULL ;	26:1:679:696	2527957	0	True				
ANR	2527961	IdentifierDecl	* type = NULL		2527957	0					
ANR	2527962	IdentifierDeclType	char *		2527957	0					
ANR	2527963	Identifier	type		2527957	1					
ANR	2527964	AssignmentExpression	* type = NULL		2527957	2		=			
ANR	2527965	Identifier	NULL		2527957	0					
ANR	2527966	Identifier	NULL		2527957	1					
ANR	2527967	ExpressionStatement	r_return_if_fail ( sdb_types && name )	27:1:699:735	2527957	1	True				
ANR	2527968	CallExpression	r_return_if_fail ( sdb_types && name )		2527957	0					
ANR	2527969	Callee	r_return_if_fail		2527957	0					
ANR	2527970	Identifier	r_return_if_fail		2527957	0					
ANR	2527971	ArgumentList	sdb_types && name		2527957	1					
ANR	2527972	Argument	sdb_types && name		2527957	0					
ANR	2527973	AndExpression	sdb_types && name		2527957	0		&&			
ANR	2527974	Identifier	sdb_types		2527957	0					
ANR	2527975	Identifier	name		2527957	1					
ANR	2527976	IfStatement	"if ( ! sdb_exists ( sdb_types , name ) || ! ( type = sdb_get ( sdb_types , name , 0 ) ) )"		2527957	2					
ANR	2527977	Condition	"! sdb_exists ( sdb_types , name ) || ! ( type = sdb_get ( sdb_types , name , 0 ) )"	28:5:742:812	2527957	0	True				
ANR	2527978	OrExpression	"! sdb_exists ( sdb_types , name ) || ! ( type = sdb_get ( sdb_types , name , 0 ) )"		2527957	0		||			
ANR	2527979	UnaryOperationExpression	"! sdb_exists ( sdb_types , name )"		2527957	0					
ANR	2527980	UnaryOperator	!		2527957	0					
ANR	2527981	CallExpression	"sdb_exists ( sdb_types , name )"		2527957	1					
ANR	2527982	Callee	sdb_exists		2527957	0					
ANR	2527983	Identifier	sdb_exists		2527957	0					
ANR	2527984	ArgumentList	sdb_types		2527957	1					
ANR	2527985	Argument	sdb_types		2527957	0					
ANR	2527986	Identifier	sdb_types		2527957	0					
ANR	2527987	Argument	name		2527957	1					
ANR	2527988	Identifier	name		2527957	0					
ANR	2527989	UnaryOperationExpression	"! ( type = sdb_get ( sdb_types , name , 0 ) )"		2527957	1					
ANR	2527990	UnaryOperator	!		2527957	0					
ANR	2527991	AssignmentExpression	"type = sdb_get ( sdb_types , name , 0 )"		2527957	1		=			
ANR	2527992	Identifier	type		2527957	0					
ANR	2527993	CallExpression	"sdb_get ( sdb_types , name , 0 )"		2527957	1					
ANR	2527994	Callee	sdb_get		2527957	0					
ANR	2527995	Identifier	sdb_get		2527957	0					
ANR	2527996	ArgumentList	sdb_types		2527957	1					
ANR	2527997	Argument	sdb_types		2527957	0					
ANR	2527998	Identifier	sdb_types		2527957	0					
ANR	2527999	Argument	name		2527957	1					
ANR	2528000	Identifier	name		2527957	0					
ANR	2528001	Argument	0		2527957	2					
ANR	2528002	PrimaryExpression	0		2527957	0					
ANR	2528003	CompoundStatement		4:78:138:138	2527957	1					
ANR	2528004	ReturnStatement	return ;	29:2:819:825	2527957	0	True				
ANR	2528005	IdentifierDeclStatement	"char * type_name_size = r_str_newf ( ""%s.%s.%s"" , type , name , ""!size"" ) ;"	31:1:831:898	2527957	3	True				
ANR	2528006	IdentifierDecl	"* type_name_size = r_str_newf ( ""%s.%s.%s"" , type , name , ""!size"" )"		2527957	0					
ANR	2528007	IdentifierDeclType	char *		2527957	0					
ANR	2528008	Identifier	type_name_size		2527957	1					
ANR	2528009	AssignmentExpression	"* type_name_size = r_str_newf ( ""%s.%s.%s"" , type , name , ""!size"" )"		2527957	2		=			
ANR	2528010	Identifier	type_name_size		2527957	0					
ANR	2528011	CallExpression	"r_str_newf ( ""%s.%s.%s"" , type , name , ""!size"" )"		2527957	1					
ANR	2528012	Callee	r_str_newf		2527957	0					
ANR	2528013	Identifier	r_str_newf		2527957	0					
ANR	2528014	ArgumentList	"""%s.%s.%s"""		2527957	1					
ANR	2528015	Argument	"""%s.%s.%s"""		2527957	0					
ANR	2528016	PrimaryExpression	"""%s.%s.%s"""		2527957	0					
ANR	2528017	Argument	type		2527957	1					
ANR	2528018	Identifier	type		2527957	0					
ANR	2528019	Argument	name		2527957	2					
ANR	2528020	Identifier	name		2527957	0					
ANR	2528021	Argument	"""!size"""		2527957	3					
ANR	2528022	PrimaryExpression	"""!size"""		2527957	0					
ANR	2528023	ExpressionStatement	r_return_if_fail ( type_name_size )	32:1:901:934	2527957	4	True				
ANR	2528024	CallExpression	r_return_if_fail ( type_name_size )		2527957	0					
ANR	2528025	Callee	r_return_if_fail		2527957	0					
ANR	2528026	Identifier	r_return_if_fail		2527957	0					
ANR	2528027	ArgumentList	type_name_size		2527957	1					
ANR	2528028	Argument	type_name_size		2527957	0					
ANR	2528029	Identifier	type_name_size		2527957	0					
ANR	2528030	IdentifierDeclStatement	"int size = r_type_get_bitsize ( sdb_types , name ) ;"	33:1:937:984	2527957	5	True				
ANR	2528031	IdentifierDecl	"size = r_type_get_bitsize ( sdb_types , name )"		2527957	0					
ANR	2528032	IdentifierDeclType	int		2527957	0					
ANR	2528033	Identifier	size		2527957	1					
ANR	2528034	AssignmentExpression	"size = r_type_get_bitsize ( sdb_types , name )"		2527957	2		=			
ANR	2528035	Identifier	size		2527957	0					
ANR	2528036	CallExpression	"r_type_get_bitsize ( sdb_types , name )"		2527957	1					
ANR	2528037	Callee	r_type_get_bitsize		2527957	0					
ANR	2528038	Identifier	r_type_get_bitsize		2527957	0					
ANR	2528039	ArgumentList	sdb_types		2527957	1					
ANR	2528040	Argument	sdb_types		2527957	0					
ANR	2528041	Identifier	sdb_types		2527957	0					
ANR	2528042	Argument	name		2527957	1					
ANR	2528043	Identifier	name		2527957	0					
ANR	2528044	ExpressionStatement	"sdb_set ( sdb_types , type_name_size , sdb_fmt ( ""%d"" , size ) , 0 )"	34:1:987:1047	2527957	6	True				
ANR	2528045	CallExpression	"sdb_set ( sdb_types , type_name_size , sdb_fmt ( ""%d"" , size ) , 0 )"		2527957	0					
ANR	2528046	Callee	sdb_set		2527957	0					
ANR	2528047	Identifier	sdb_set		2527957	0					
ANR	2528048	ArgumentList	sdb_types		2527957	1					
ANR	2528049	Argument	sdb_types		2527957	0					
ANR	2528050	Identifier	sdb_types		2527957	0					
ANR	2528051	Argument	type_name_size		2527957	1					
ANR	2528052	Identifier	type_name_size		2527957	0					
ANR	2528053	Argument	"sdb_fmt ( ""%d"" , size )"		2527957	2					
ANR	2528054	CallExpression	"sdb_fmt ( ""%d"" , size )"		2527957	0					
ANR	2528055	Callee	sdb_fmt		2527957	0					
ANR	2528056	Identifier	sdb_fmt		2527957	0					
ANR	2528057	ArgumentList	"""%d"""		2527957	1					
ANR	2528058	Argument	"""%d"""		2527957	0					
ANR	2528059	PrimaryExpression	"""%d"""		2527957	0					
ANR	2528060	Argument	size		2527957	1					
ANR	2528061	Identifier	size		2527957	0					
ANR	2528062	Argument	0		2527957	3					
ANR	2528063	PrimaryExpression	0		2527957	0					
ANR	2528064	ExpressionStatement	free ( type )	35:1:1050:1061	2527957	7	True				
ANR	2528065	CallExpression	free ( type )		2527957	0					
ANR	2528066	Callee	free		2527957	0					
ANR	2528067	Identifier	free		2527957	0					
ANR	2528068	ArgumentList	type		2527957	1					
ANR	2528069	Argument	type		2527957	0					
ANR	2528070	Identifier	type		2527957	0					
ANR	2528071	ExpressionStatement	free ( type_name_size )	36:1:1064:1085	2527957	8	True				
ANR	2528072	CallExpression	free ( type_name_size )		2527957	0					
ANR	2528073	Callee	free		2527957	0					
ANR	2528074	Identifier	free		2527957	0					
ANR	2528075	ArgumentList	type_name_size		2527957	1					
ANR	2528076	Argument	type_name_size		2527957	0					
ANR	2528077	Identifier	type_name_size		2527957	0					
ANR	2528078	ReturnType	static void		2527957	1					
ANR	2528079	Identifier	save_type_size		2527957	2					
ANR	2528080	ParameterList	"Sdb * sdb_types , char * name"		2527957	3					
ANR	2528081	Parameter	Sdb * sdb_types	25:27:648:661	2527957	0	True				
ANR	2528082	ParameterType	Sdb *		2527957	0					
ANR	2528083	Identifier	sdb_types		2527957	1					
ANR	2528084	Parameter	char * name	25:43:664:673	2527957	1	True				
ANR	2528085	ParameterType	char *		2527957	0					
ANR	2528086	Identifier	name		2527957	1					
ANR	2528087	CFGEntryNode	ENTRY		2527957		True				
ANR	2528088	CFGExitNode	EXIT		2527957		True				
ANR	2528089	Symbol	NULL		2527957						
ANR	2528090	Symbol	size		2527957						
ANR	2528091	Symbol	sdb_types		2527957						
ANR	2528092	Symbol	r_type_get_bitsize		2527957						
ANR	2528093	Symbol	name		2527957						
ANR	2528094	Symbol	sdb_exists		2527957						
ANR	2528095	Symbol	sdb_get		2527957						
ANR	2528096	Symbol	r_str_newf		2527957						
ANR	2528097	Symbol	type		2527957						
ANR	2528098	Symbol	type_name_size		2527957						
ANR	2528099	Symbol	sdb_fmt		2527957						
ANR	2528100	Function	__save_parsed_type_size	44:0:1253:1833							
ANR	2528101	FunctionDef	"__save_parsed_type_size (RAnal * anal , const char * parsed)"		2528100	0					
ANR	2528102	CompoundStatement		44:69:1322:1833	2528100	0					
ANR	2528103	ExpressionStatement	r_return_if_fail ( anal && parsed )	45:1:1325:1358	2528100	0	True				
ANR	2528104	CallExpression	r_return_if_fail ( anal && parsed )		2528100	0					
ANR	2528105	Callee	r_return_if_fail		2528100	0					
ANR	2528106	Identifier	r_return_if_fail		2528100	0					
ANR	2528107	ArgumentList	anal && parsed		2528100	1					
ANR	2528108	Argument	anal && parsed		2528100	0					
ANR	2528109	AndExpression	anal && parsed		2528100	0		&&			
ANR	2528110	Identifier	anal		2528100	0					
ANR	2528111	Identifier	parsed		2528100	1					
ANR	2528112	IdentifierDeclStatement	char * str = strdup ( parsed ) ;	46:1:1361:1388	2528100	1	True				
ANR	2528113	IdentifierDecl	* str = strdup ( parsed )		2528100	0					
ANR	2528114	IdentifierDeclType	char *		2528100	0					
ANR	2528115	Identifier	str		2528100	1					
ANR	2528116	AssignmentExpression	* str = strdup ( parsed )		2528100	2		=			
ANR	2528117	Identifier	str		2528100	0					
ANR	2528118	CallExpression	strdup ( parsed )		2528100	1					
ANR	2528119	Callee	strdup		2528100	0					
ANR	2528120	Identifier	strdup		2528100	0					
ANR	2528121	ArgumentList	parsed		2528100	1					
ANR	2528122	Argument	parsed		2528100	0					
ANR	2528123	Identifier	parsed		2528100	0					
ANR	2528124	IfStatement	if ( str )		2528100	2					
ANR	2528125	Condition	str	47:5:1395:1397	2528100	0	True				
ANR	2528126	Identifier	str		2528100	0					
ANR	2528127	CompoundStatement		6:2:101:115	2528100	1					
ANR	2528128	IdentifierDeclStatement	char * ptr = NULL ;	48:2:1404:1420	2528100	0	True				
ANR	2528129	IdentifierDecl	* ptr = NULL		2528100	0					
ANR	2528130	IdentifierDeclType	char *		2528100	0					
ANR	2528131	Identifier	ptr		2528100	1					
ANR	2528132	AssignmentExpression	* ptr = NULL		2528100	2		=			
ANR	2528133	Identifier	NULL		2528100	0					
ANR	2528134	Identifier	NULL		2528100	1					
ANR	2528135	IdentifierDeclStatement	int offset = 0 ;	49:2:1424:1438	2528100	1	True				
ANR	2528136	IdentifierDecl	offset = 0		2528100	0					
ANR	2528137	IdentifierDeclType	int		2528100	0					
ANR	2528138	Identifier	offset		2528100	1					
ANR	2528139	AssignmentExpression	offset = 0		2528100	2		=			
ANR	2528140	Identifier	offset		2528100	0					
ANR	2528141	PrimaryExpression	0		2528100	1					
ANR	2528142	WhileStatement	"while ( ( ptr = strstr ( str + offset , ""=struct\\n"" ) ) || ( ptr = strstr ( str + offset , ""=union\\n"" ) ) )"		2528100	2					
ANR	2528143	Condition	"( ptr = strstr ( str + offset , ""=struct\\n"" ) ) || ( ptr = strstr ( str + offset , ""=union\\n"" ) )"	50:9:1449:1539	2528100	0	True				
ANR	2528144	OrExpression	"( ptr = strstr ( str + offset , ""=struct\\n"" ) ) || ( ptr = strstr ( str + offset , ""=union\\n"" ) )"		2528100	0		||			
ANR	2528145	AssignmentExpression	"ptr = strstr ( str + offset , ""=struct\\n"" )"		2528100	0		=			
ANR	2528146	Identifier	ptr		2528100	0					
ANR	2528147	CallExpression	"strstr ( str + offset , ""=struct\\n"" )"		2528100	1					
ANR	2528148	Callee	strstr		2528100	0					
ANR	2528149	Identifier	strstr		2528100	0					
ANR	2528150	ArgumentList	str + offset		2528100	1					
ANR	2528151	Argument	str + offset		2528100	0					
ANR	2528152	AdditiveExpression	str + offset		2528100	0		+			
ANR	2528153	Identifier	str		2528100	0					
ANR	2528154	Identifier	offset		2528100	1					
ANR	2528155	Argument	"""=struct\\n"""		2528100	1					
ANR	2528156	PrimaryExpression	"""=struct\\n"""		2528100	0					
ANR	2528157	AssignmentExpression	"ptr = strstr ( str + offset , ""=union\\n"" )"		2528100	1		=			
ANR	2528158	Identifier	ptr		2528100	0					
ANR	2528159	CallExpression	"strstr ( str + offset , ""=union\\n"" )"		2528100	1					
ANR	2528160	Callee	strstr		2528100	0					
ANR	2528161	Identifier	strstr		2528100	0					
ANR	2528162	ArgumentList	str + offset		2528100	1					
ANR	2528163	Argument	str + offset		2528100	0					
ANR	2528164	AdditiveExpression	str + offset		2528100	0		+			
ANR	2528165	Identifier	str		2528100	0					
ANR	2528166	Identifier	offset		2528100	1					
ANR	2528167	Argument	"""=union\\n"""		2528100	1					
ANR	2528168	PrimaryExpression	"""=union\\n"""		2528100	0					
ANR	2528169	CompoundStatement		13:3:283:303	2528100	1					
ANR	2528170	ExpressionStatement	* ptr = 0	52:3:1547:1555	2528100	0	True				
ANR	2528171	AssignmentExpression	* ptr = 0		2528100	0		=			
ANR	2528172	UnaryOperationExpression	* ptr		2528100	0					
ANR	2528173	UnaryOperator	*		2528100	0					
ANR	2528174	Identifier	ptr		2528100	1					
ANR	2528175	PrimaryExpression	0		2528100	1					
ANR	2528176	IfStatement	if ( str + offset == ptr )		2528100	1					
ANR	2528177	Condition	str + offset == ptr	53:7:1564:1582	2528100	0	True				
ANR	2528178	EqualityExpression	str + offset == ptr		2528100	0		==			
ANR	2528179	AdditiveExpression	str + offset		2528100	0		+			
ANR	2528180	Identifier	str		2528100	0					
ANR	2528181	Identifier	offset		2528100	1					
ANR	2528182	Identifier	ptr		2528100	1					
ANR	2528183	CompoundStatement		10:28:262:262	2528100	1					
ANR	2528184	BreakStatement	break ;	54:4:1591:1596	2528100	0	True				
ANR	2528185	IdentifierDeclStatement	char * name = ptr - 1 ;	56:3:1606:1626	2528100	2	True				
ANR	2528186	IdentifierDecl	* name = ptr - 1		2528100	0					
ANR	2528187	IdentifierDeclType	char *		2528100	0					
ANR	2528188	Identifier	name		2528100	1					
ANR	2528189	AssignmentExpression	* name = ptr - 1		2528100	2		=			
ANR	2528190	Identifier	name		2528100	0					
ANR	2528191	AdditiveExpression	ptr - 1		2528100	1		-			
ANR	2528192	Identifier	ptr		2528100	0					
ANR	2528193	PrimaryExpression	1		2528100	1					
ANR	2528194	WhileStatement	while ( name > str && * name != '\\n' )		2528100	3					
ANR	2528195	Condition	name > str && * name != '\\n'	57:10:1638:1664	2528100	0	True				
ANR	2528196	AndExpression	name > str && * name != '\\n'		2528100	0		&&			
ANR	2528197	RelationalExpression	name > str		2528100	0		>			
ANR	2528198	Identifier	name		2528100	0					
ANR	2528199	Identifier	str		2528100	1					
ANR	2528200	EqualityExpression	* name != '\\n'		2528100	1		!=			
ANR	2528201	UnaryOperationExpression	* name		2528100	0					
ANR	2528202	UnaryOperator	*		2528100	0					
ANR	2528203	Identifier	name		2528100	1					
ANR	2528204	PrimaryExpression	'\\n'		2528100	1					
ANR	2528205	CompoundStatement		14:39:344:344	2528100	1					
ANR	2528206	ExpressionStatement	name --	58:4:1673:1679	2528100	0	True				
ANR	2528207	PostIncDecOperationExpression	name --		2528100	0					
ANR	2528208	Identifier	name		2528100	0					
ANR	2528209	IncDec	--		2528100	1					
ANR	2528210	IfStatement	if ( * name == '\\n' )		2528100	4					
ANR	2528211	Condition	* name == '\\n'	60:7:1693:1705	2528100	0	True				
ANR	2528212	EqualityExpression	* name == '\\n'		2528100	0		==			
ANR	2528213	UnaryOperationExpression	* name		2528100	0					
ANR	2528214	UnaryOperator	*		2528100	0					
ANR	2528215	Identifier	name		2528100	1					
ANR	2528216	PrimaryExpression	'\\n'		2528100	1					
ANR	2528217	CompoundStatement		17:22:385:385	2528100	1					
ANR	2528218	ExpressionStatement	name ++	61:4:1714:1720	2528100	0	True				
ANR	2528219	PostIncDecOperationExpression	name ++		2528100	0					
ANR	2528220	Identifier	name		2528100	0					
ANR	2528221	IncDec	++		2528100	1					
ANR	2528222	ExpressionStatement	"save_type_size ( anal -> sdb_types , name )"	63:3:1730:1768	2528100	5	True				
ANR	2528223	CallExpression	"save_type_size ( anal -> sdb_types , name )"		2528100	0					
ANR	2528224	Callee	save_type_size		2528100	0					
ANR	2528225	Identifier	save_type_size		2528100	0					
ANR	2528226	ArgumentList	anal -> sdb_types		2528100	1					
ANR	2528227	Argument	anal -> sdb_types		2528100	0					
ANR	2528228	PtrMemberAccess	anal -> sdb_types		2528100	0					
ANR	2528229	Identifier	anal		2528100	0					
ANR	2528230	Identifier	sdb_types		2528100	1					
ANR	2528231	Argument	name		2528100	1					
ANR	2528232	Identifier	name		2528100	0					
ANR	2528233	ExpressionStatement	* ptr = '='	64:3:1773:1783	2528100	6	True				
ANR	2528234	AssignmentExpression	* ptr = '='		2528100	0		=			
ANR	2528235	UnaryOperationExpression	* ptr		2528100	0					
ANR	2528236	UnaryOperator	*		2528100	0					
ANR	2528237	Identifier	ptr		2528100	1					
ANR	2528238	PrimaryExpression	'='		2528100	1					
ANR	2528239	ExpressionStatement	offset = ptr + 1 - str	65:3:1788:1810	2528100	7	True				
ANR	2528240	AssignmentExpression	offset = ptr + 1 - str		2528100	0		=			
ANR	2528241	Identifier	offset		2528100	0					
ANR	2528242	AdditiveExpression	ptr + 1 - str		2528100	1		+			
ANR	2528243	Identifier	ptr		2528100	0					
ANR	2528244	AdditiveExpression	1 - str		2528100	1		-			
ANR	2528245	PrimaryExpression	1		2528100	0					
ANR	2528246	Identifier	str		2528100	1					
ANR	2528247	ExpressionStatement	free ( str )	67:2:1818:1828	2528100	3	True				
ANR	2528248	CallExpression	free ( str )		2528100	0					
ANR	2528249	Callee	free		2528100	0					
ANR	2528250	Identifier	free		2528100	0					
ANR	2528251	ArgumentList	str		2528100	1					
ANR	2528252	Argument	str		2528100	0					
ANR	2528253	Identifier	str		2528100	0					
ANR	2528254	ReturnType	static void		2528100	1					
ANR	2528255	Identifier	__save_parsed_type_size		2528100	2					
ANR	2528256	ParameterList	"RAnal * anal , const char * parsed"		2528100	3					
ANR	2528257	Parameter	RAnal * anal	44:36:1289:1299	2528100	0	True				
ANR	2528258	ParameterType	RAnal *		2528100	0					
ANR	2528259	Identifier	anal		2528100	1					
ANR	2528260	Parameter	const char * parsed	44:49:1302:1319	2528100	1	True				
ANR	2528261	ParameterType	const char *		2528100	0					
ANR	2528262	Identifier	parsed		2528100	1					
ANR	2528263	CFGEntryNode	ENTRY		2528100		True				
ANR	2528264	CFGExitNode	EXIT		2528100		True				
ANR	2528265	Symbol	* name		2528100						
ANR	2528266	Symbol	NULL		2528100						
ANR	2528267	Symbol	offset		2528100						
ANR	2528268	Symbol	ptr		2528100						
ANR	2528269	Symbol	str		2528100						
ANR	2528270	Symbol	* anal		2528100						
ANR	2528271	Symbol	anal		2528100						
ANR	2528272	Symbol	strstr		2528100						
ANR	2528273	Symbol	* ptr		2528100						
ANR	2528274	Symbol	name		2528100						
ANR	2528275	Symbol	parsed		2528100						
ANR	2528276	Symbol	strdup		2528100						
ANR	2528277	Symbol	anal -> sdb_types		2528100						
ANR	2528278	Function	r_anal_remove_parsed_type	71:0:1836:2452							
ANR	2528279	FunctionDef	"r_anal_remove_parsed_type (RAnal * anal , const char * name)"		2528278	0					
ANR	2528280	CompoundStatement		71:68:1904:2452	2528278	0					
ANR	2528281	ExpressionStatement	r_return_if_fail ( anal && name )	72:1:1907:1938	2528278	0	True				
ANR	2528282	CallExpression	r_return_if_fail ( anal && name )		2528278	0					
ANR	2528283	Callee	r_return_if_fail		2528278	0					
ANR	2528284	Identifier	r_return_if_fail		2528278	0					
ANR	2528285	ArgumentList	anal && name		2528278	1					
ANR	2528286	Argument	anal && name		2528278	0					
ANR	2528287	AndExpression	anal && name		2528278	0		&&			
ANR	2528288	Identifier	anal		2528278	0					
ANR	2528289	Identifier	name		2528278	1					
ANR	2528290	IdentifierDeclStatement	Sdb * TDB = anal -> sdb_types ;	73:1:1941:1967	2528278	1	True				
ANR	2528291	IdentifierDecl	* TDB = anal -> sdb_types		2528278	0					
ANR	2528292	IdentifierDeclType	Sdb *		2528278	0					
ANR	2528293	Identifier	TDB		2528278	1					
ANR	2528294	AssignmentExpression	* TDB = anal -> sdb_types		2528278	2		=			
ANR	2528295	Identifier	TDB		2528278	0					
ANR	2528296	PtrMemberAccess	anal -> sdb_types		2528278	1					
ANR	2528297	Identifier	anal		2528278	0					
ANR	2528298	Identifier	sdb_types		2528278	1					
ANR	2528299	IdentifierDeclStatement	SdbKv * kv ;	74:1:1970:1979	2528278	2	True				
ANR	2528300	IdentifierDecl	* kv		2528278	0					
ANR	2528301	IdentifierDeclType	SdbKv *		2528278	0					
ANR	2528302	Identifier	kv		2528278	1					
ANR	2528303	IdentifierDeclStatement	SdbListIter * iter ;	75:1:1982:1999	2528278	3	True				
ANR	2528304	IdentifierDecl	* iter		2528278	0					
ANR	2528305	IdentifierDeclType	SdbListIter *		2528278	0					
ANR	2528306	Identifier	iter		2528278	1					
ANR	2528307	IdentifierDeclStatement	"const char * type = sdb_const_get ( TDB , name , 0 ) ;"	76:1:2002:2049	2528278	4	True				
ANR	2528308	IdentifierDecl	"* type = sdb_const_get ( TDB , name , 0 )"		2528278	0					
ANR	2528309	IdentifierDeclType	const char *		2528278	0					
ANR	2528310	Identifier	type		2528278	1					
ANR	2528311	AssignmentExpression	"* type = sdb_const_get ( TDB , name , 0 )"		2528278	2		=			
ANR	2528312	Identifier	type		2528278	0					
ANR	2528313	CallExpression	"sdb_const_get ( TDB , name , 0 )"		2528278	1					
ANR	2528314	Callee	sdb_const_get		2528278	0					
ANR	2528315	Identifier	sdb_const_get		2528278	0					
ANR	2528316	ArgumentList	TDB		2528278	1					
ANR	2528317	Argument	TDB		2528278	0					
ANR	2528318	Identifier	TDB		2528278	0					
ANR	2528319	Argument	name		2528278	1					
ANR	2528320	Identifier	name		2528278	0					
ANR	2528321	Argument	0		2528278	2					
ANR	2528322	PrimaryExpression	0		2528278	0					
ANR	2528323	IfStatement	if ( ! type )		2528278	5					
ANR	2528324	Condition	! type	77:5:2056:2060	2528278	0	True				
ANR	2528325	UnaryOperationExpression	! type		2528278	0					
ANR	2528326	UnaryOperator	!		2528278	0					
ANR	2528327	Identifier	type		2528278	1					
ANR	2528328	CompoundStatement		7:12:158:158	2528278	1					
ANR	2528329	ReturnStatement	return ;	78:2:2067:2073	2528278	0	True				
ANR	2528330	IdentifierDeclStatement	int tmp_len = strlen ( name ) + strlen ( type ) ;	80:1:2079:2122	2528278	6	True				
ANR	2528331	IdentifierDecl	tmp_len = strlen ( name ) + strlen ( type )		2528278	0					
ANR	2528332	IdentifierDeclType	int		2528278	0					
ANR	2528333	Identifier	tmp_len		2528278	1					
ANR	2528334	AssignmentExpression	tmp_len = strlen ( name ) + strlen ( type )		2528278	2		=			
ANR	2528335	Identifier	tmp_len		2528278	0					
ANR	2528336	AdditiveExpression	strlen ( name ) + strlen ( type )		2528278	1		+			
ANR	2528337	CallExpression	strlen ( name )		2528278	0					
ANR	2528338	Callee	strlen		2528278	0					
ANR	2528339	Identifier	strlen		2528278	0					
ANR	2528340	ArgumentList	name		2528278	1					
ANR	2528341	Argument	name		2528278	0					
ANR	2528342	Identifier	name		2528278	0					
ANR	2528343	CallExpression	strlen ( type )		2528278	1					
ANR	2528344	Callee	strlen		2528278	0					
ANR	2528345	Identifier	strlen		2528278	0					
ANR	2528346	ArgumentList	type		2528278	1					
ANR	2528347	Argument	type		2528278	0					
ANR	2528348	Identifier	type		2528278	0					
ANR	2528349	IdentifierDeclStatement	char * tmp = malloc ( tmp_len + 1 ) ;	81:1:2125:2157	2528278	7	True				
ANR	2528350	IdentifierDecl	* tmp = malloc ( tmp_len + 1 )		2528278	0					
ANR	2528351	IdentifierDeclType	char *		2528278	0					
ANR	2528352	Identifier	tmp		2528278	1					
ANR	2528353	AssignmentExpression	* tmp = malloc ( tmp_len + 1 )		2528278	2		=			
ANR	2528354	Identifier	tmp		2528278	0					
ANR	2528355	CallExpression	malloc ( tmp_len + 1 )		2528278	1					
ANR	2528356	Callee	malloc		2528278	0					
ANR	2528357	Identifier	malloc		2528278	0					
ANR	2528358	ArgumentList	tmp_len + 1		2528278	1					
ANR	2528359	Argument	tmp_len + 1		2528278	0					
ANR	2528360	AdditiveExpression	tmp_len + 1		2528278	0		+			
ANR	2528361	Identifier	tmp_len		2528278	0					
ANR	2528362	PrimaryExpression	1		2528278	1					
ANR	2528363	ExpressionStatement	"r_type_del ( TDB , name )"	82:1:2160:2182	2528278	8	True				
ANR	2528364	CallExpression	"r_type_del ( TDB , name )"		2528278	0					
ANR	2528365	Callee	r_type_del		2528278	0					
ANR	2528366	Identifier	r_type_del		2528278	0					
ANR	2528367	ArgumentList	TDB		2528278	1					
ANR	2528368	Argument	TDB		2528278	0					
ANR	2528369	Identifier	TDB		2528278	0					
ANR	2528370	Argument	name		2528278	1					
ANR	2528371	Identifier	name		2528278	0					
ANR	2528372	IfStatement	if ( tmp )		2528278	9					
ANR	2528373	Condition	tmp	83:5:2189:2191	2528278	0	True				
ANR	2528374	Identifier	tmp		2528278	0					
ANR	2528375	CompoundStatement		15:2:346:387	2528278	1					
ANR	2528376	ExpressionStatement	"snprintf ( tmp , tmp_len + 1 , ""%s.%s."" , type , name )"	84:2:2198:2247	2528278	0	True				
ANR	2528377	CallExpression	"snprintf ( tmp , tmp_len + 1 , ""%s.%s."" , type , name )"		2528278	0					
ANR	2528378	Callee	snprintf		2528278	0					
ANR	2528379	Identifier	snprintf		2528278	0					
ANR	2528380	ArgumentList	tmp		2528278	1					
ANR	2528381	Argument	tmp		2528278	0					
ANR	2528382	Identifier	tmp		2528278	0					
ANR	2528383	Argument	tmp_len + 1		2528278	1					
ANR	2528384	AdditiveExpression	tmp_len + 1		2528278	0		+			
ANR	2528385	Identifier	tmp_len		2528278	0					
ANR	2528386	PrimaryExpression	1		2528278	1					
ANR	2528387	Argument	"""%s.%s."""		2528278	2					
ANR	2528388	PrimaryExpression	"""%s.%s."""		2528278	0					
ANR	2528389	Argument	type		2528278	3					
ANR	2528390	Identifier	type		2528278	0					
ANR	2528391	Argument	name		2528278	4					
ANR	2528392	Identifier	name		2528278	0					
ANR	2528393	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list ( TDB , true ) ;"	85:2:2251:2292	2528278	1	True				
ANR	2528394	IdentifierDecl	"* l = sdb_foreach_list ( TDB , true )"		2528278	0					
ANR	2528395	IdentifierDeclType	SdbList *		2528278	0					
ANR	2528396	Identifier	l		2528278	1					
ANR	2528397	AssignmentExpression	"* l = sdb_foreach_list ( TDB , true )"		2528278	2		=			
ANR	2528398	Identifier	l		2528278	0					
ANR	2528399	CallExpression	"sdb_foreach_list ( TDB , true )"		2528278	1					
ANR	2528400	Callee	sdb_foreach_list		2528278	0					
ANR	2528401	Identifier	sdb_foreach_list		2528278	0					
ANR	2528402	ArgumentList	TDB		2528278	1					
ANR	2528403	Argument	TDB		2528278	0					
ANR	2528404	Identifier	TDB		2528278	0					
ANR	2528405	Argument	true		2528278	1					
ANR	2528406	Identifier	true		2528278	0					
ANR	2528407	Statement	ls_foreach	86:2:2296:2305	2528278	2	True				
ANR	2528408	Statement	(	86:13:2307:2307	2528278	3	True				
ANR	2528409	Statement	l	86:14:2308:2308	2528278	4	True				
ANR	2528410	Statement	","	86:15:2309:2309	2528278	5	True				
ANR	2528411	Statement	iter	86:17:2311:2314	2528278	6	True				
ANR	2528412	Statement	","	86:21:2315:2315	2528278	7	True				
ANR	2528413	Statement	kv	86:23:2317:2318	2528278	8	True				
ANR	2528414	Statement	)	86:25:2319:2319	2528278	9	True				
ANR	2528415	CompoundStatement		16:27:416:416	2528278	10					
ANR	2528416	IfStatement	"if ( ! strncmp ( sdbkv_key ( kv ) , tmp , tmp_len ) )"		2528278	0					
ANR	2528417	Condition	"! strncmp ( sdbkv_key ( kv ) , tmp , tmp_len )"	87:7:2330:2368	2528278	0	True				
ANR	2528418	UnaryOperationExpression	"! strncmp ( sdbkv_key ( kv ) , tmp , tmp_len )"		2528278	0					
ANR	2528419	UnaryOperator	!		2528278	0					
ANR	2528420	CallExpression	"strncmp ( sdbkv_key ( kv ) , tmp , tmp_len )"		2528278	1					
ANR	2528421	Callee	strncmp		2528278	0					
ANR	2528422	Identifier	strncmp		2528278	0					
ANR	2528423	ArgumentList	sdbkv_key ( kv )		2528278	1					
ANR	2528424	Argument	sdbkv_key ( kv )		2528278	0					
ANR	2528425	CallExpression	sdbkv_key ( kv )		2528278	0					
ANR	2528426	Callee	sdbkv_key		2528278	0					
ANR	2528427	Identifier	sdbkv_key		2528278	0					
ANR	2528428	ArgumentList	kv		2528278	1					
ANR	2528429	Argument	kv		2528278	0					
ANR	2528430	Identifier	kv		2528278	0					
ANR	2528431	Argument	tmp		2528278	1					
ANR	2528432	Identifier	tmp		2528278	0					
ANR	2528433	Argument	tmp_len		2528278	2					
ANR	2528434	Identifier	tmp_len		2528278	0					
ANR	2528435	CompoundStatement		17:48:466:466	2528278	1					
ANR	2528436	ExpressionStatement	"r_type_del ( TDB , sdbkv_key ( kv ) )"	88:4:2377:2409	2528278	0	True				
ANR	2528437	CallExpression	"r_type_del ( TDB , sdbkv_key ( kv ) )"		2528278	0					
ANR	2528438	Callee	r_type_del		2528278	0					
ANR	2528439	Identifier	r_type_del		2528278	0					
ANR	2528440	ArgumentList	TDB		2528278	1					
ANR	2528441	Argument	TDB		2528278	0					
ANR	2528442	Identifier	TDB		2528278	0					
ANR	2528443	Argument	sdbkv_key ( kv )		2528278	1					
ANR	2528444	CallExpression	sdbkv_key ( kv )		2528278	0					
ANR	2528445	Callee	sdbkv_key		2528278	0					
ANR	2528446	Identifier	sdbkv_key		2528278	0					
ANR	2528447	ArgumentList	kv		2528278	1					
ANR	2528448	Argument	kv		2528278	0					
ANR	2528449	Identifier	kv		2528278	0					
ANR	2528450	ExpressionStatement	ls_free ( l )	91:2:2422:2433	2528278	11	True				
ANR	2528451	CallExpression	ls_free ( l )		2528278	0					
ANR	2528452	Callee	ls_free		2528278	0					
ANR	2528453	Identifier	ls_free		2528278	0					
ANR	2528454	ArgumentList	l		2528278	1					
ANR	2528455	Argument	l		2528278	0					
ANR	2528456	Identifier	l		2528278	0					
ANR	2528457	ExpressionStatement	free ( tmp )	92:2:2437:2447	2528278	12	True				
ANR	2528458	CallExpression	free ( tmp )		2528278	0					
ANR	2528459	Callee	free		2528278	0					
ANR	2528460	Identifier	free		2528278	0					
ANR	2528461	ArgumentList	tmp		2528278	1					
ANR	2528462	Argument	tmp		2528278	0					
ANR	2528463	Identifier	tmp		2528278	0					
ANR	2528464	ReturnType	R_API void		2528278	1					
ANR	2528465	Identifier	r_anal_remove_parsed_type		2528278	2					
ANR	2528466	ParameterList	"RAnal * anal , const char * name"		2528278	3					
ANR	2528467	Parameter	RAnal * anal	71:37:1873:1883	2528278	0	True				
ANR	2528468	ParameterType	RAnal *		2528278	0					
ANR	2528469	Identifier	anal		2528278	1					
ANR	2528470	Parameter	const char * name	71:50:1886:1901	2528278	1	True				
ANR	2528471	ParameterType	const char *		2528278	0					
ANR	2528472	Identifier	name		2528278	1					
ANR	2528473	CFGEntryNode	ENTRY		2528278		True				
ANR	2528474	CFGExitNode	EXIT		2528278		True				
ANR	2528475	Symbol	malloc		2528278						
ANR	2528476	Symbol	sdbkv_key		2528278						
ANR	2528477	Symbol	tmp_len		2528278						
ANR	2528478	Symbol	iter		2528278						
ANR	2528479	Symbol	sdb_foreach_list		2528278						
ANR	2528480	Symbol	kv		2528278						
ANR	2528481	Symbol	type		2528278						
ANR	2528482	Symbol	l		2528278						
ANR	2528483	Symbol	sdb_const_get		2528278						
ANR	2528484	Symbol	strlen		2528278						
ANR	2528485	Symbol	strncmp		2528278						
ANR	2528486	Symbol	* anal		2528278						
ANR	2528487	Symbol	TDB		2528278						
ANR	2528488	Symbol	anal		2528278						
ANR	2528489	Symbol	tmp		2528278						
ANR	2528490	Symbol	name		2528278						
ANR	2528491	Symbol	true		2528278						
ANR	2528492	Symbol	anal -> sdb_types		2528278						
ANR	2528493	Function	r_anal_save_parsed_type	96:0:2455:3034							
ANR	2528494	FunctionDef	"r_anal_save_parsed_type (RAnal * anal , const char * parsed)"		2528493	0					
ANR	2528495	CompoundStatement		96:68:2523:3034	2528493	0					
ANR	2528496	ExpressionStatement	r_return_if_fail ( anal && parsed )	97:1:2526:2559	2528493	0	True				
ANR	2528497	CallExpression	r_return_if_fail ( anal && parsed )		2528493	0					
ANR	2528498	Callee	r_return_if_fail		2528493	0					
ANR	2528499	Identifier	r_return_if_fail		2528493	0					
ANR	2528500	ArgumentList	anal && parsed		2528493	1					
ANR	2528501	Argument	anal && parsed		2528493	0					
ANR	2528502	AndExpression	anal && parsed		2528493	0		&&			
ANR	2528503	Identifier	anal		2528493	0					
ANR	2528504	Identifier	parsed		2528493	1					
ANR	2528505	IdentifierDeclStatement	char * type = strdup ( parsed ) ;	100:1:2620:2648	2528493	1	True				
ANR	2528506	IdentifierDecl	* type = strdup ( parsed )		2528493	0					
ANR	2528507	IdentifierDeclType	char *		2528493	0					
ANR	2528508	Identifier	type		2528493	1					
ANR	2528509	AssignmentExpression	* type = strdup ( parsed )		2528493	2		=			
ANR	2528510	Identifier	type		2528493	0					
ANR	2528511	CallExpression	strdup ( parsed )		2528493	1					
ANR	2528512	Callee	strdup		2528493	0					
ANR	2528513	Identifier	strdup		2528493	0					
ANR	2528514	ArgumentList	parsed		2528493	1					
ANR	2528515	Argument	parsed		2528493	0					
ANR	2528516	Identifier	parsed		2528493	0					
ANR	2528517	IfStatement	if ( type )		2528493	2					
ANR	2528518	Condition	type	101:5:2655:2658	2528493	0	True				
ANR	2528519	Identifier	type		2528493	0					
ANR	2528520	CompoundStatement		7:2:141:157	2528493	1					
ANR	2528521	IdentifierDeclStatement	char * cur = type ;	102:2:2665:2681	2528493	0	True				
ANR	2528522	IdentifierDecl	* cur = type		2528493	0					
ANR	2528523	IdentifierDeclType	char *		2528493	0					
ANR	2528524	Identifier	cur		2528493	1					
ANR	2528525	AssignmentExpression	* cur = type		2528493	2		=			
ANR	2528526	Identifier	type		2528493	0					
ANR	2528527	Identifier	type		2528493	1					
ANR	2528528	WhileStatement	while ( 1 )		2528493	1					
ANR	2528529	Condition	1	103:9:2692:2692	2528493	0	True				
ANR	2528530	PrimaryExpression	1		2528493	0					
ANR	2528531	CompoundStatement		13:3:231:249	2528493	1					
ANR	2528532	ExpressionStatement	cur = is_type ( cur )	104:3:2700:2719	2528493	0	True				
ANR	2528533	AssignmentExpression	cur = is_type ( cur )		2528493	0		=			
ANR	2528534	Identifier	cur		2528493	0					
ANR	2528535	CallExpression	is_type ( cur )		2528493	1					
ANR	2528536	Callee	is_type		2528493	0					
ANR	2528537	Identifier	is_type		2528493	0					
ANR	2528538	ArgumentList	cur		2528493	1					
ANR	2528539	Argument	cur		2528493	0					
ANR	2528540	Identifier	cur		2528493	0					
ANR	2528541	IfStatement	if ( ! cur )		2528493	1					
ANR	2528542	Condition	! cur	105:7:2728:2731	2528493	0	True				
ANR	2528543	UnaryOperationExpression	! cur		2528493	0					
ANR	2528544	UnaryOperator	!		2528493	0					
ANR	2528545	Identifier	cur		2528493	1					
ANR	2528546	CompoundStatement		10:13:210:210	2528493	1					
ANR	2528547	BreakStatement	break ;	106:4:2740:2745	2528493	0	True				
ANR	2528548	IdentifierDeclStatement	char * name = cur ++ ;	108:3:2755:2773	2528493	2	True				
ANR	2528549	IdentifierDecl	* name = cur ++		2528493	0					
ANR	2528550	IdentifierDeclType	char *		2528493	0					
ANR	2528551	Identifier	name		2528493	1					
ANR	2528552	AssignmentExpression	* name = cur ++		2528493	2		=			
ANR	2528553	Identifier	name		2528493	0					
ANR	2528554	PostIncDecOperationExpression	cur ++		2528493	1					
ANR	2528555	Identifier	cur		2528493	0					
ANR	2528556	IncDec	++		2528493	1					
ANR	2528557	ExpressionStatement	* name = 0	109:3:2778:2787	2528493	3	True				
ANR	2528558	AssignmentExpression	* name = 0		2528493	0		=			
ANR	2528559	UnaryOperationExpression	* name		2528493	0					
ANR	2528560	UnaryOperator	*		2528493	0					
ANR	2528561	Identifier	name		2528493	1					
ANR	2528562	PrimaryExpression	0		2528493	1					
ANR	2528563	WhileStatement	while ( name > type && * ( name - 1 ) != '\\n' )		2528493	4					
ANR	2528564	Condition	name > type && * ( name - 1 ) != '\\n'	110:10:2799:2832	2528493	0	True				
ANR	2528565	AndExpression	name > type && * ( name - 1 ) != '\\n'		2528493	0		&&			
ANR	2528566	RelationalExpression	name > type		2528493	0		>			
ANR	2528567	Identifier	name		2528493	0					
ANR	2528568	Identifier	type		2528493	1					
ANR	2528569	EqualityExpression	* ( name - 1 ) != '\\n'		2528493	1		!=			
ANR	2528570	UnaryOperationExpression	* ( name - 1 )		2528493	0					
ANR	2528571	UnaryOperator	*		2528493	0					
ANR	2528572	AdditiveExpression	name - 1		2528493	1		-			
ANR	2528573	Identifier	name		2528493	0					
ANR	2528574	PrimaryExpression	1		2528493	1					
ANR	2528575	PrimaryExpression	'\\n'		2528493	1					
ANR	2528576	CompoundStatement		15:46:311:311	2528493	1					
ANR	2528577	ExpressionStatement	name --	111:4:2841:2847	2528493	0	True				
ANR	2528578	PostIncDecOperationExpression	name --		2528493	0					
ANR	2528579	Identifier	name		2528493	0					
ANR	2528580	IncDec	--		2528493	1					
ANR	2528581	ExpressionStatement	"r_anal_remove_parsed_type ( anal , name )"	113:3:2857:2895	2528493	5	True				
ANR	2528582	CallExpression	"r_anal_remove_parsed_type ( anal , name )"		2528493	0					
ANR	2528583	Callee	r_anal_remove_parsed_type		2528493	0					
ANR	2528584	Identifier	r_anal_remove_parsed_type		2528493	0					
ANR	2528585	ArgumentList	anal		2528493	1					
ANR	2528586	Argument	anal		2528493	0					
ANR	2528587	Identifier	anal		2528493	0					
ANR	2528588	Argument	name		2528493	1					
ANR	2528589	Identifier	name		2528493	0					
ANR	2528590	ExpressionStatement	free ( type )	115:2:2903:2914	2528493	2	True				
ANR	2528591	CallExpression	free ( type )		2528493	0					
ANR	2528592	Callee	free		2528493	0					
ANR	2528593	Identifier	free		2528493	0					
ANR	2528594	ArgumentList	type		2528493	1					
ANR	2528595	Argument	type		2528493	0					
ANR	2528596	Identifier	type		2528493	0					
ANR	2528597	ExpressionStatement	"sdb_query_lines ( anal -> sdb_types , parsed )"	119:1:2950:2991	2528493	3	True				
ANR	2528598	CallExpression	"sdb_query_lines ( anal -> sdb_types , parsed )"		2528493	0					
ANR	2528599	Callee	sdb_query_lines		2528493	0					
ANR	2528600	Identifier	sdb_query_lines		2528493	0					
ANR	2528601	ArgumentList	anal -> sdb_types		2528493	1					
ANR	2528602	Argument	anal -> sdb_types		2528493	0					
ANR	2528603	PtrMemberAccess	anal -> sdb_types		2528493	0					
ANR	2528604	Identifier	anal		2528493	0					
ANR	2528605	Identifier	sdb_types		2528493	1					
ANR	2528606	Argument	parsed		2528493	1					
ANR	2528607	Identifier	parsed		2528493	0					
ANR	2528608	ExpressionStatement	"__save_parsed_type_size ( anal , parsed )"	120:1:2994:3032	2528493	4	True				
ANR	2528609	CallExpression	"__save_parsed_type_size ( anal , parsed )"		2528493	0					
ANR	2528610	Callee	__save_parsed_type_size		2528493	0					
ANR	2528611	Identifier	__save_parsed_type_size		2528493	0					
ANR	2528612	ArgumentList	anal		2528493	1					
ANR	2528613	Argument	anal		2528493	0					
ANR	2528614	Identifier	anal		2528493	0					
ANR	2528615	Argument	parsed		2528493	1					
ANR	2528616	Identifier	parsed		2528493	0					
ANR	2528617	ReturnType	R_API void		2528493	1					
ANR	2528618	Identifier	r_anal_save_parsed_type		2528493	2					
ANR	2528619	ParameterList	"RAnal * anal , const char * parsed"		2528493	3					
ANR	2528620	Parameter	RAnal * anal	96:35:2490:2500	2528493	0	True				
ANR	2528621	ParameterType	RAnal *		2528493	0					
ANR	2528622	Identifier	anal		2528493	1					
ANR	2528623	Parameter	const char * parsed	96:48:2503:2520	2528493	1	True				
ANR	2528624	ParameterType	const char *		2528493	0					
ANR	2528625	Identifier	parsed		2528493	1					
ANR	2528626	CFGEntryNode	ENTRY		2528493		True				
ANR	2528627	CFGExitNode	EXIT		2528493		True				
ANR	2528628	Symbol	* name		2528493						
ANR	2528629	Symbol	cur		2528493						
ANR	2528630	Symbol	* ( name - 1 )		2528493						
ANR	2528631	Symbol	* anal		2528493						
ANR	2528632	Symbol	is_type		2528493						
ANR	2528633	Symbol	anal		2528493						
ANR	2528634	Symbol	name		2528493						
ANR	2528635	Symbol	parsed		2528493						
ANR	2528636	Symbol	strdup		2528493						
ANR	2528637	Symbol	type		2528493						
ANR	2528638	Symbol	anal -> sdb_types		2528493						
