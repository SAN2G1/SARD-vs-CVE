command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5765686	File	data/converged/CVE-2019-16718~_radare2/run.c								
ANR	5765687	Function	r_run_new	66:0:1510:1669							
ANR	5765688	FunctionDef	r_run_new (const char * str)		5765687	0					
ANR	5765689	CompoundStatement		66:46:1556:1669	5765687	0					
ANR	5765690	IdentifierDeclStatement	RRunProfile * p = R_NEW0 ( RRunProfile ) ;	67:1:1559:1596	5765687	0	True				
ANR	5765691	IdentifierDecl	* p = R_NEW0 ( RRunProfile )		5765687	0					
ANR	5765692	IdentifierDeclType	RRunProfile *		5765687	0					
ANR	5765693	Identifier	p		5765687	1					
ANR	5765694	AssignmentExpression	* p = R_NEW0 ( RRunProfile )		5765687	2		=			
ANR	5765695	Identifier	p		5765687	0					
ANR	5765696	CallExpression	R_NEW0 ( RRunProfile )		5765687	1					
ANR	5765697	Callee	R_NEW0		5765687	0					
ANR	5765698	Identifier	R_NEW0		5765687	0					
ANR	5765699	ArgumentList	RRunProfile		5765687	1					
ANR	5765700	Argument	RRunProfile		5765687	0					
ANR	5765701	Identifier	RRunProfile		5765687	0					
ANR	5765702	IfStatement	if ( p )		5765687	1					
ANR	5765703	Condition	p	68:5:1603:1603	5765687	0	True				
ANR	5765704	Identifier	p		5765687	0					
ANR	5765705	CompoundStatement		3:8:49:49	5765687	1					
ANR	5765706	ExpressionStatement	r_run_reset ( p )	69:2:1610:1625	5765687	0	True				
ANR	5765707	CallExpression	r_run_reset ( p )		5765687	0					
ANR	5765708	Callee	r_run_reset		5765687	0					
ANR	5765709	Identifier	r_run_reset		5765687	0					
ANR	5765710	ArgumentList	p		5765687	1					
ANR	5765711	Argument	p		5765687	0					
ANR	5765712	Identifier	p		5765687	0					
ANR	5765713	ExpressionStatement	"r_run_parsefile ( p , str )"	70:2:1629:1653	5765687	1	True				
ANR	5765714	CallExpression	"r_run_parsefile ( p , str )"		5765687	0					
ANR	5765715	Callee	r_run_parsefile		5765687	0					
ANR	5765716	Identifier	r_run_parsefile		5765687	0					
ANR	5765717	ArgumentList	p		5765687	1					
ANR	5765718	Argument	p		5765687	0					
ANR	5765719	Identifier	p		5765687	0					
ANR	5765720	Argument	str		5765687	1					
ANR	5765721	Identifier	str		5765687	0					
ANR	5765722	ReturnStatement	return p ;	72:1:1659:1667	5765687	2	True				
ANR	5765723	Identifier	p		5765687	0					
ANR	5765724	ReturnType	R_API RRunProfile *		5765687	1					
ANR	5765725	Identifier	r_run_new		5765687	2					
ANR	5765726	ParameterList	const char * str		5765687	3					
ANR	5765727	Parameter	const char * str	66:29:1539:1553	5765687	0	True				
ANR	5765728	ParameterType	const char *		5765687	0					
ANR	5765729	Identifier	str		5765687	1					
ANR	5765730	CFGEntryNode	ENTRY		5765687		True				
ANR	5765731	CFGExitNode	EXIT		5765687		True				
ANR	5765732	Symbol	str		5765687						
ANR	5765733	Symbol	p		5765687						
ANR	5765734	Symbol	R_NEW0		5765687						
ANR	5765735	Symbol	RRunProfile		5765687						
ANR	5765736	Function	r_run_reset	75:0:1672:1767							
ANR	5765737	FunctionDef	r_run_reset (RRunProfile * p)		5765736	0					
ANR	5765738	CompoundStatement		75:39:1711:1767	5765736	0					
ANR	5765739	ExpressionStatement	"memset ( p , 0 , sizeof ( RRunProfile ) )"	76:1:1714:1749	5765736	0	True				
ANR	5765740	CallExpression	"memset ( p , 0 , sizeof ( RRunProfile ) )"		5765736	0					
ANR	5765741	Callee	memset		5765736	0					
ANR	5765742	Identifier	memset		5765736	0					
ANR	5765743	ArgumentList	p		5765736	1					
ANR	5765744	Argument	p		5765736	0					
ANR	5765745	Identifier	p		5765736	0					
ANR	5765746	Argument	0		5765736	1					
ANR	5765747	PrimaryExpression	0		5765736	0					
ANR	5765748	Argument	sizeof ( RRunProfile )		5765736	2					
ANR	5765749	SizeofExpression	sizeof ( RRunProfile )		5765736	0					
ANR	5765750	Sizeof	sizeof		5765736	0					
ANR	5765751	SizeofOperand	RRunProfile		5765736	1					
ANR	5765752	ExpressionStatement	p -> _aslr = - 1	77:1:1752:1765	5765736	1	True				
ANR	5765753	AssignmentExpression	p -> _aslr = - 1		5765736	0		=			
ANR	5765754	PtrMemberAccess	p -> _aslr		5765736	0					
ANR	5765755	Identifier	p		5765736	0					
ANR	5765756	Identifier	_aslr		5765736	1					
ANR	5765757	UnaryOperationExpression	- 1		5765736	1					
ANR	5765758	UnaryOperator	-		5765736	0					
ANR	5765759	PrimaryExpression	1		5765736	1					
ANR	5765760	ReturnType	R_API void		5765736	1					
ANR	5765761	Identifier	r_run_reset		5765736	2					
ANR	5765762	ParameterList	RRunProfile * p		5765736	3					
ANR	5765763	Parameter	RRunProfile * p	75:23:1695:1708	5765736	0	True				
ANR	5765764	ParameterType	RRunProfile *		5765736	0					
ANR	5765765	Identifier	p		5765736	1					
ANR	5765766	CFGEntryNode	ENTRY		5765736		True				
ANR	5765767	CFGExitNode	EXIT		5765736		True				
ANR	5765768	Symbol	p		5765736						
ANR	5765769	Symbol	p -> _aslr		5765736						
ANR	5765770	Symbol	* p		5765736						
ANR	5765771	Function	r_run_parse	80:0:1770:2099							
ANR	5765772	FunctionDef	"r_run_parse (RRunProfile * pf , const char * profile)"		5765771	0					
ANR	5765773	CompoundStatement		80:61:1831:2099	5765771	0					
ANR	5765774	IfStatement	if ( ! pf || ! profile )		5765771	0					
ANR	5765775	Condition	! pf || ! profile	81:5:1838:1852	5765771	0	True				
ANR	5765776	OrExpression	! pf || ! profile		5765771	0		||			
ANR	5765777	UnaryOperationExpression	! pf		5765771	0					
ANR	5765778	UnaryOperator	!		5765771	0					
ANR	5765779	Identifier	pf		5765771	1					
ANR	5765780	UnaryOperationExpression	! profile		5765771	1					
ANR	5765781	UnaryOperator	!		5765771	0					
ANR	5765782	Identifier	profile		5765771	1					
ANR	5765783	CompoundStatement		2:22:23:23	5765771	1					
ANR	5765784	ReturnStatement	return false ;	82:2:1859:1871	5765771	0	True				
ANR	5765785	Identifier	false		5765771	0					
ANR	5765786	IdentifierDeclStatement	"char * p , * o , * str = strdup ( profile ) ;"	84:1:1877:1913	5765771	1	True				
ANR	5765787	IdentifierDecl	* p		5765771	0					
ANR	5765788	IdentifierDeclType	char *		5765771	0					
ANR	5765789	Identifier	p		5765771	1					
ANR	5765790	IdentifierDecl	* o		5765771	1					
ANR	5765791	IdentifierDeclType	char *		5765771	0					
ANR	5765792	Identifier	o		5765771	1					
ANR	5765793	IdentifierDecl	* str = strdup ( profile )		5765771	2					
ANR	5765794	IdentifierDeclType	char *		5765771	0					
ANR	5765795	Identifier	str		5765771	1					
ANR	5765796	AssignmentExpression	* str = strdup ( profile )		5765771	2		=			
ANR	5765797	Identifier	str		5765771	0					
ANR	5765798	CallExpression	strdup ( profile )		5765771	1					
ANR	5765799	Callee	strdup		5765771	0					
ANR	5765800	Identifier	strdup		5765771	0					
ANR	5765801	ArgumentList	profile		5765771	1					
ANR	5765802	Argument	profile		5765771	0					
ANR	5765803	Identifier	profile		5765771	0					
ANR	5765804	IfStatement	if ( ! str )		5765771	2					
ANR	5765805	Condition	! str	85:5:1920:1923	5765771	0	True				
ANR	5765806	UnaryOperationExpression	! str		5765771	0					
ANR	5765807	UnaryOperator	!		5765771	0					
ANR	5765808	Identifier	str		5765771	1					
ANR	5765809	CompoundStatement		6:11:94:94	5765771	1					
ANR	5765810	ReturnStatement	return false ;	86:2:1930:1942	5765771	0	True				
ANR	5765811	Identifier	false		5765771	0					
ANR	5765812	ExpressionStatement	"r_str_replace_char ( str , '\\r' , 0 )"	88:1:1948:1980	5765771	3	True				
ANR	5765813	CallExpression	"r_str_replace_char ( str , '\\r' , 0 )"		5765771	0					
ANR	5765814	Callee	r_str_replace_char		5765771	0					
ANR	5765815	Identifier	r_str_replace_char		5765771	0					
ANR	5765816	ArgumentList	str		5765771	1					
ANR	5765817	Argument	str		5765771	0					
ANR	5765818	Identifier	str		5765771	0					
ANR	5765819	Argument	'\\r'		5765771	1					
ANR	5765820	PrimaryExpression	'\\r'		5765771	0					
ANR	5765821	Argument	0		5765771	2					
ANR	5765822	PrimaryExpression	0		5765771	0					
ANR	5765823	ForStatement	"for ( p = str ; ( o = strchr ( p , '\\n' ) ) ; p = o )"		5765771	4					
ANR	5765824	ForInit	p = str ;	89:6:1988:1995	5765771	0	True				
ANR	5765825	AssignmentExpression	p = str		5765771	0		=			
ANR	5765826	Identifier	p		5765771	0					
ANR	5765827	Identifier	str		5765771	1					
ANR	5765828	Condition	"o = strchr ( p , '\\n' )"	89:15:1997:2018	5765771	1	True				
ANR	5765829	AssignmentExpression	"o = strchr ( p , '\\n' )"		5765771	0		=			
ANR	5765830	Identifier	o		5765771	0					
ANR	5765831	CallExpression	"strchr ( p , '\\n' )"		5765771	1					
ANR	5765832	Callee	strchr		5765771	0					
ANR	5765833	Identifier	strchr		5765771	0					
ANR	5765834	ArgumentList	p		5765771	1					
ANR	5765835	Argument	p		5765771	0					
ANR	5765836	Identifier	p		5765771	0					
ANR	5765837	Argument	'\\n'		5765771	1					
ANR	5765838	PrimaryExpression	'\\n'		5765771	0					
ANR	5765839	AssignmentExpression	p = o	89:39:2021:2025	5765771	2	True	=			
ANR	5765840	Identifier	p		5765771	0					
ANR	5765841	Identifier	o		5765771	1					
ANR	5765842	CompoundStatement		10:46:196:196	5765771	3					
ANR	5765843	ExpressionStatement	* o ++ = 0	90:2:2032:2040	5765771	0	True				
ANR	5765844	AssignmentExpression	* o ++ = 0		5765771	0		=			
ANR	5765845	UnaryOperationExpression	* o ++		5765771	0					
ANR	5765846	UnaryOperator	*		5765771	0					
ANR	5765847	PostIncDecOperationExpression	o ++		5765771	1					
ANR	5765848	Identifier	o		5765771	0					
ANR	5765849	IncDec	++		5765771	1					
ANR	5765850	PrimaryExpression	0		5765771	1					
ANR	5765851	ExpressionStatement	"r_run_parseline ( pf , p )"	91:2:2044:2067	5765771	1	True				
ANR	5765852	CallExpression	"r_run_parseline ( pf , p )"		5765771	0					
ANR	5765853	Callee	r_run_parseline		5765771	0					
ANR	5765854	Identifier	r_run_parseline		5765771	0					
ANR	5765855	ArgumentList	pf		5765771	1					
ANR	5765856	Argument	pf		5765771	0					
ANR	5765857	Identifier	pf		5765771	0					
ANR	5765858	Argument	p		5765771	1					
ANR	5765859	Identifier	p		5765771	0					
ANR	5765860	ExpressionStatement	free ( str )	93:1:2073:2083	5765771	5	True				
ANR	5765861	CallExpression	free ( str )		5765771	0					
ANR	5765862	Callee	free		5765771	0					
ANR	5765863	Identifier	free		5765771	0					
ANR	5765864	ArgumentList	str		5765771	1					
ANR	5765865	Argument	str		5765771	0					
ANR	5765866	Identifier	str		5765771	0					
ANR	5765867	ReturnStatement	return true ;	94:1:2086:2097	5765771	6	True				
ANR	5765868	Identifier	true		5765771	0					
ANR	5765869	ReturnType	R_API bool		5765771	1					
ANR	5765870	Identifier	r_run_parse		5765771	2					
ANR	5765871	ParameterList	"RRunProfile * pf , const char * profile"		5765771	3					
ANR	5765872	Parameter	RRunProfile * pf	80:23:1793:1807	5765771	0	True				
ANR	5765873	ParameterType	RRunProfile *		5765771	0					
ANR	5765874	Identifier	pf		5765771	1					
ANR	5765875	Parameter	const char * profile	80:40:1810:1828	5765771	1	True				
ANR	5765876	ParameterType	const char *		5765771	0					
ANR	5765877	Identifier	profile		5765771	1					
ANR	5765878	CFGEntryNode	ENTRY		5765771		True				
ANR	5765879	CFGExitNode	EXIT		5765771		True				
ANR	5765880	Symbol	str		5765771						
ANR	5765881	Symbol	p		5765771						
ANR	5765882	Symbol	pf		5765771						
ANR	5765883	Symbol	* o ++		5765771						
ANR	5765884	Symbol	profile		5765771						
ANR	5765885	Symbol	false		5765771						
ANR	5765886	Symbol	true		5765771						
ANR	5765887	Symbol	strchr		5765771						
ANR	5765888	Symbol	strdup		5765771						
ANR	5765889	Symbol	o		5765771						
ANR	5765890	Function	r_run_free	97:0:2102:2399							
ANR	5765891	FunctionDef	r_run_free (RRunProfile * r)		5765890	0					
ANR	5765892	CompoundStatement		97:39:2141:2399	5765890	0					
ANR	5765893	ExpressionStatement	free ( r -> _system )	98:1:2144:2161	5765890	0	True				
ANR	5765894	CallExpression	free ( r -> _system )		5765890	0					
ANR	5765895	Callee	free		5765890	0					
ANR	5765896	Identifier	free		5765890	0					
ANR	5765897	ArgumentList	r -> _system		5765890	1					
ANR	5765898	Argument	r -> _system		5765890	0					
ANR	5765899	PtrMemberAccess	r -> _system		5765890	0					
ANR	5765900	Identifier	r		5765890	0					
ANR	5765901	Identifier	_system		5765890	1					
ANR	5765902	ExpressionStatement	free ( r -> _program )	99:1:2164:2182	5765890	1	True				
ANR	5765903	CallExpression	free ( r -> _program )		5765890	0					
ANR	5765904	Callee	free		5765890	0					
ANR	5765905	Identifier	free		5765890	0					
ANR	5765906	ArgumentList	r -> _program		5765890	1					
ANR	5765907	Argument	r -> _program		5765890	0					
ANR	5765908	PtrMemberAccess	r -> _program		5765890	0					
ANR	5765909	Identifier	r		5765890	0					
ANR	5765910	Identifier	_program		5765890	1					
ANR	5765911	ExpressionStatement	free ( r -> _runlib )	100:1:2185:2202	5765890	2	True				
ANR	5765912	CallExpression	free ( r -> _runlib )		5765890	0					
ANR	5765913	Callee	free		5765890	0					
ANR	5765914	Identifier	free		5765890	0					
ANR	5765915	ArgumentList	r -> _runlib		5765890	1					
ANR	5765916	Argument	r -> _runlib		5765890	0					
ANR	5765917	PtrMemberAccess	r -> _runlib		5765890	0					
ANR	5765918	Identifier	r		5765890	0					
ANR	5765919	Identifier	_runlib		5765890	1					
ANR	5765920	ExpressionStatement	free ( r -> _runlib_fcn )	101:1:2205:2226	5765890	3	True				
ANR	5765921	CallExpression	free ( r -> _runlib_fcn )		5765890	0					
ANR	5765922	Callee	free		5765890	0					
ANR	5765923	Identifier	free		5765890	0					
ANR	5765924	ArgumentList	r -> _runlib_fcn		5765890	1					
ANR	5765925	Argument	r -> _runlib_fcn		5765890	0					
ANR	5765926	PtrMemberAccess	r -> _runlib_fcn		5765890	0					
ANR	5765927	Identifier	r		5765890	0					
ANR	5765928	Identifier	_runlib_fcn		5765890	1					
ANR	5765929	ExpressionStatement	free ( r -> _stdio )	102:1:2229:2245	5765890	4	True				
ANR	5765930	CallExpression	free ( r -> _stdio )		5765890	0					
ANR	5765931	Callee	free		5765890	0					
ANR	5765932	Identifier	free		5765890	0					
ANR	5765933	ArgumentList	r -> _stdio		5765890	1					
ANR	5765934	Argument	r -> _stdio		5765890	0					
ANR	5765935	PtrMemberAccess	r -> _stdio		5765890	0					
ANR	5765936	Identifier	r		5765890	0					
ANR	5765937	Identifier	_stdio		5765890	1					
ANR	5765938	ExpressionStatement	free ( r -> _stdin )	103:1:2248:2264	5765890	5	True				
ANR	5765939	CallExpression	free ( r -> _stdin )		5765890	0					
ANR	5765940	Callee	free		5765890	0					
ANR	5765941	Identifier	free		5765890	0					
ANR	5765942	ArgumentList	r -> _stdin		5765890	1					
ANR	5765943	Argument	r -> _stdin		5765890	0					
ANR	5765944	PtrMemberAccess	r -> _stdin		5765890	0					
ANR	5765945	Identifier	r		5765890	0					
ANR	5765946	Identifier	_stdin		5765890	1					
ANR	5765947	ExpressionStatement	free ( r -> _stdout )	104:1:2267:2284	5765890	6	True				
ANR	5765948	CallExpression	free ( r -> _stdout )		5765890	0					
ANR	5765949	Callee	free		5765890	0					
ANR	5765950	Identifier	free		5765890	0					
ANR	5765951	ArgumentList	r -> _stdout		5765890	1					
ANR	5765952	Argument	r -> _stdout		5765890	0					
ANR	5765953	PtrMemberAccess	r -> _stdout		5765890	0					
ANR	5765954	Identifier	r		5765890	0					
ANR	5765955	Identifier	_stdout		5765890	1					
ANR	5765956	ExpressionStatement	free ( r -> _stderr )	105:1:2287:2304	5765890	7	True				
ANR	5765957	CallExpression	free ( r -> _stderr )		5765890	0					
ANR	5765958	Callee	free		5765890	0					
ANR	5765959	Identifier	free		5765890	0					
ANR	5765960	ArgumentList	r -> _stderr		5765890	1					
ANR	5765961	Argument	r -> _stderr		5765890	0					
ANR	5765962	PtrMemberAccess	r -> _stderr		5765890	0					
ANR	5765963	Identifier	r		5765890	0					
ANR	5765964	Identifier	_stderr		5765890	1					
ANR	5765965	ExpressionStatement	free ( r -> _chgdir )	106:1:2307:2324	5765890	8	True				
ANR	5765966	CallExpression	free ( r -> _chgdir )		5765890	0					
ANR	5765967	Callee	free		5765890	0					
ANR	5765968	Identifier	free		5765890	0					
ANR	5765969	ArgumentList	r -> _chgdir		5765890	1					
ANR	5765970	Argument	r -> _chgdir		5765890	0					
ANR	5765971	PtrMemberAccess	r -> _chgdir		5765890	0					
ANR	5765972	Identifier	r		5765890	0					
ANR	5765973	Identifier	_chgdir		5765890	1					
ANR	5765974	ExpressionStatement	free ( r -> _chroot )	107:1:2327:2344	5765890	9	True				
ANR	5765975	CallExpression	free ( r -> _chroot )		5765890	0					
ANR	5765976	Callee	free		5765890	0					
ANR	5765977	Identifier	free		5765890	0					
ANR	5765978	ArgumentList	r -> _chroot		5765890	1					
ANR	5765979	Argument	r -> _chroot		5765890	0					
ANR	5765980	PtrMemberAccess	r -> _chroot		5765890	0					
ANR	5765981	Identifier	r		5765890	0					
ANR	5765982	Identifier	_chroot		5765890	1					
ANR	5765983	ExpressionStatement	free ( r -> _libpath )	108:1:2347:2365	5765890	10	True				
ANR	5765984	CallExpression	free ( r -> _libpath )		5765890	0					
ANR	5765985	Callee	free		5765890	0					
ANR	5765986	Identifier	free		5765890	0					
ANR	5765987	ArgumentList	r -> _libpath		5765890	1					
ANR	5765988	Argument	r -> _libpath		5765890	0					
ANR	5765989	PtrMemberAccess	r -> _libpath		5765890	0					
ANR	5765990	Identifier	r		5765890	0					
ANR	5765991	Identifier	_libpath		5765890	1					
ANR	5765992	ExpressionStatement	free ( r -> _preload )	109:1:2368:2386	5765890	11	True				
ANR	5765993	CallExpression	free ( r -> _preload )		5765890	0					
ANR	5765994	Callee	free		5765890	0					
ANR	5765995	Identifier	free		5765890	0					
ANR	5765996	ArgumentList	r -> _preload		5765890	1					
ANR	5765997	Argument	r -> _preload		5765890	0					
ANR	5765998	PtrMemberAccess	r -> _preload		5765890	0					
ANR	5765999	Identifier	r		5765890	0					
ANR	5766000	Identifier	_preload		5765890	1					
ANR	5766001	ExpressionStatement	free ( r )	110:1:2389:2397	5765890	12	True				
ANR	5766002	CallExpression	free ( r )		5765890	0					
ANR	5766003	Callee	free		5765890	0					
ANR	5766004	Identifier	free		5765890	0					
ANR	5766005	ArgumentList	r		5765890	1					
ANR	5766006	Argument	r		5765890	0					
ANR	5766007	Identifier	r		5765890	0					
ANR	5766008	ReturnType	R_API void		5765890	1					
ANR	5766009	Identifier	r_run_free		5765890	2					
ANR	5766010	ParameterList	RRunProfile * r		5765890	3					
ANR	5766011	Parameter	RRunProfile * r	97:23:2125:2138	5765890	0	True				
ANR	5766012	ParameterType	RRunProfile *		5765890	0					
ANR	5766013	Identifier	r		5765890	1					
ANR	5766014	CFGEntryNode	ENTRY		5765890		True				
ANR	5766015	CFGExitNode	EXIT		5765890		True				
ANR	5766016	Symbol	r -> _runlib_fcn		5765890						
ANR	5766017	Symbol	r -> _libpath		5765890						
ANR	5766018	Symbol	r -> _chroot		5765890						
ANR	5766019	Symbol	r -> _preload		5765890						
ANR	5766020	Symbol	r -> _runlib		5765890						
ANR	5766021	Symbol	r -> _stdin		5765890						
ANR	5766022	Symbol	r -> _stdio		5765890						
ANR	5766023	Symbol	r -> _program		5765890						
ANR	5766024	Symbol	r		5765890						
ANR	5766025	Symbol	r -> _system		5765890						
ANR	5766026	Symbol	r -> _stderr		5765890						
ANR	5766027	Symbol	r -> _chgdir		5765890						
ANR	5766028	Symbol	r -> _stdout		5765890						
ANR	5766029	Symbol	* r		5765890						
ANR	5766030	Function	set_limit	114:0:2415:2596							
ANR	5766031	FunctionDef	"set_limit (int n , int a , ut64 b)"		5766030	0					
ANR	5766032	CompoundStatement		114:44:2459:2596	5766030	0					
ANR	5766033	IfStatement	if ( n )		5766030	0					
ANR	5766034	Condition	n	115:5:2466:2466	5766030	0	True				
ANR	5766035	Identifier	n		5766030	0					
ANR	5766036	CompoundStatement		3:2:13:38	5766030	1					
ANR	5766037	IdentifierDeclStatement	"struct rlimit cl = { b , b } ;"	116:2:2473:2498	5766030	0	True				
ANR	5766038	IdentifierDecl	"cl = { b , b }"		5766030	0					
ANR	5766039	IdentifierDeclType	struct rlimit		5766030	0					
ANR	5766040	Identifier	cl		5766030	1					
ANR	5766041	AssignmentExpression	"cl = { b , b }"		5766030	2		=			
ANR	5766042	Identifier	cl		5766030	0					
ANR	5766043	InitializerList	b		5766030	1					
ANR	5766044	Identifier	b		5766030	0					
ANR	5766045	Identifier	b		5766030	1					
ANR	5766046	ExpressionStatement	"setrlimit ( RLIMIT_CORE , & cl )"	117:2:2502:2530	5766030	1	True				
ANR	5766047	CallExpression	"setrlimit ( RLIMIT_CORE , & cl )"		5766030	0					
ANR	5766048	Callee	setrlimit		5766030	0					
ANR	5766049	Identifier	setrlimit		5766030	0					
ANR	5766050	ArgumentList	RLIMIT_CORE		5766030	1					
ANR	5766051	Argument	RLIMIT_CORE		5766030	0					
ANR	5766052	Identifier	RLIMIT_CORE		5766030	0					
ANR	5766053	Argument	& cl		5766030	1					
ANR	5766054	UnaryOperationExpression	& cl		5766030	0					
ANR	5766055	UnaryOperator	&		5766030	0					
ANR	5766056	Identifier	cl		5766030	1					
ANR	5766057	ElseStatement	else		5766030	0					
ANR	5766058	CompoundStatement		6:2:84:109	5766030	0					
ANR	5766059	IdentifierDeclStatement	"struct rlimit cl = { 0 , 0 } ;"	119:2:2544:2569	5766030	0	True				
ANR	5766060	IdentifierDecl	"cl = { 0 , 0 }"		5766030	0					
ANR	5766061	IdentifierDeclType	struct rlimit		5766030	0					
ANR	5766062	Identifier	cl		5766030	1					
ANR	5766063	AssignmentExpression	"cl = { 0 , 0 }"		5766030	2		=			
ANR	5766064	Identifier	cl		5766030	0					
ANR	5766065	InitializerList	0		5766030	1					
ANR	5766066	PrimaryExpression	0		5766030	0					
ANR	5766067	PrimaryExpression	0		5766030	1					
ANR	5766068	ExpressionStatement	"setrlimit ( a , & cl )"	120:2:2573:2591	5766030	1	True				
ANR	5766069	CallExpression	"setrlimit ( a , & cl )"		5766030	0					
ANR	5766070	Callee	setrlimit		5766030	0					
ANR	5766071	Identifier	setrlimit		5766030	0					
ANR	5766072	ArgumentList	a		5766030	1					
ANR	5766073	Argument	a		5766030	0					
ANR	5766074	Identifier	a		5766030	0					
ANR	5766075	Argument	& cl		5766030	1					
ANR	5766076	UnaryOperationExpression	& cl		5766030	0					
ANR	5766077	UnaryOperator	&		5766030	0					
ANR	5766078	Identifier	cl		5766030	1					
ANR	5766079	ReturnType	static void		5766030	1					
ANR	5766080	Identifier	set_limit		5766030	2					
ANR	5766081	ParameterList	"int n , int a , ut64 b"		5766030	3					
ANR	5766082	Parameter	int n	114:22:2437:2441	5766030	0	True				
ANR	5766083	ParameterType	int		5766030	0					
ANR	5766084	Identifier	n		5766030	1					
ANR	5766085	Parameter	int a	114:29:2444:2448	5766030	1	True				
ANR	5766086	ParameterType	int		5766030	0					
ANR	5766087	Identifier	a		5766030	1					
ANR	5766088	Parameter	ut64 b	114:36:2451:2456	5766030	2	True				
ANR	5766089	ParameterType	ut64		5766030	0					
ANR	5766090	Identifier	b		5766030	1					
ANR	5766091	CFGEntryNode	ENTRY		5766030		True				
ANR	5766092	CFGExitNode	EXIT		5766030		True				
ANR	5766093	Symbol	RLIMIT_CORE		5766030						
ANR	5766094	Symbol	a		5766030						
ANR	5766095	Symbol	b		5766030						
ANR	5766096	Symbol	& cl		5766030						
ANR	5766097	Symbol	cl		5766030						
ANR	5766098	Symbol	n		5766030						
ANR	5766099	Function	getstr	125:0:2606:4375							
ANR	5766100	FunctionDef	getstr (const char * src)		5766099	0					
ANR	5766101	CompoundStatement		125:37:2643:4375	5766099	0					
ANR	5766102	IdentifierDeclStatement	int len ;	126:1:2646:2653	5766099	0	True				
ANR	5766103	IdentifierDecl	len		5766099	0					
ANR	5766104	IdentifierDeclType	int		5766099	0					
ANR	5766105	Identifier	len		5766099	1					
ANR	5766106	IdentifierDeclStatement	char * ret = NULL ;	127:1:2656:2672	5766099	1	True				
ANR	5766107	IdentifierDecl	* ret = NULL		5766099	0					
ANR	5766108	IdentifierDeclType	char *		5766099	0					
ANR	5766109	Identifier	ret		5766099	1					
ANR	5766110	AssignmentExpression	* ret = NULL		5766099	2		=			
ANR	5766111	Identifier	NULL		5766099	0					
ANR	5766112	Identifier	NULL		5766099	1					
ANR	5766113	SwitchStatement	switch ( * src )		5766099	2					
ANR	5766114	Condition	* src	129:9:2684:2687	5766099	0	True				
ANR	5766115	UnaryOperationExpression	* src		5766099	0					
ANR	5766116	UnaryOperator	*		5766099	0					
ANR	5766117	Identifier	src		5766099	1					
ANR	5766118	CompoundStatement		5:15:46:46	5766099	1					
ANR	5766119	Label	case '\\'' :	130:1:2693:2702	5766099	0	True				
ANR	5766120	ExpressionStatement	ret = strdup ( src + 1 )	131:2:2706:2726	5766099	1	True				
ANR	5766121	AssignmentExpression	ret = strdup ( src + 1 )		5766099	0		=			
ANR	5766122	Identifier	ret		5766099	0					
ANR	5766123	CallExpression	strdup ( src + 1 )		5766099	1					
ANR	5766124	Callee	strdup		5766099	0					
ANR	5766125	Identifier	strdup		5766099	0					
ANR	5766126	ArgumentList	src + 1		5766099	1					
ANR	5766127	Argument	src + 1		5766099	0					
ANR	5766128	AdditiveExpression	src + 1		5766099	0		+			
ANR	5766129	Identifier	src		5766099	0					
ANR	5766130	PrimaryExpression	1		5766099	1					
ANR	5766131	IfStatement	if ( ret )		5766099	2					
ANR	5766132	Condition	ret	132:6:2734:2736	5766099	0	True				
ANR	5766133	Identifier	ret		5766099	0					
ANR	5766134	CompoundStatement		8:11:95:95	5766099	1					
ANR	5766135	ExpressionStatement	len = strlen ( ret )	133:3:2744:2762	5766099	0	True				
ANR	5766136	AssignmentExpression	len = strlen ( ret )		5766099	0		=			
ANR	5766137	Identifier	len		5766099	0					
ANR	5766138	CallExpression	strlen ( ret )		5766099	1					
ANR	5766139	Callee	strlen		5766099	0					
ANR	5766140	Identifier	strlen		5766099	0					
ANR	5766141	ArgumentList	ret		5766099	1					
ANR	5766142	Argument	ret		5766099	0					
ANR	5766143	Identifier	ret		5766099	0					
ANR	5766144	IfStatement	if ( len > 0 )		5766099	1					
ANR	5766145	Condition	len > 0	134:7:2771:2777	5766099	0	True				
ANR	5766146	RelationalExpression	len > 0		5766099	0		>			
ANR	5766147	Identifier	len		5766099	0					
ANR	5766148	PrimaryExpression	0		5766099	1					
ANR	5766149	CompoundStatement		10:16:136:136	5766099	1					
ANR	5766150	ExpressionStatement	len --	135:4:2786:2791	5766099	0	True				
ANR	5766151	PostIncDecOperationExpression	len --		5766099	0					
ANR	5766152	Identifier	len		5766099	0					
ANR	5766153	IncDec	--		5766099	1					
ANR	5766154	IfStatement	if ( ret [ len ] == '\\'' )		5766099	1					
ANR	5766155	Condition	ret [ len ] == '\\''	136:8:2801:2816	5766099	0	True				
ANR	5766156	EqualityExpression	ret [ len ] == '\\''		5766099	0		==			
ANR	5766157	ArrayIndexing	ret [ len ]		5766099	0					
ANR	5766158	Identifier	ret		5766099	0					
ANR	5766159	Identifier	len		5766099	1					
ANR	5766160	PrimaryExpression	'\\''		5766099	1					
ANR	5766161	CompoundStatement		12:26:175:175	5766099	1					
ANR	5766162	ExpressionStatement	ret [ len ] = 0	137:5:2826:2838	5766099	0	True				
ANR	5766163	AssignmentExpression	ret [ len ] = 0		5766099	0		=			
ANR	5766164	ArrayIndexing	ret [ len ]		5766099	0					
ANR	5766165	Identifier	ret		5766099	0					
ANR	5766166	Identifier	len		5766099	1					
ANR	5766167	PrimaryExpression	0		5766099	1					
ANR	5766168	ReturnStatement	return ret ;	138:5:2845:2855	5766099	1	True				
ANR	5766169	Identifier	ret		5766099	0					
ANR	5766170	ExpressionStatement	"eprintf ( ""Missing \\""\\n"" )"	140:4:2867:2891	5766099	2	True				
ANR	5766171	CallExpression	"eprintf ( ""Missing \\""\\n"" )"		5766099	0					
ANR	5766172	Callee	eprintf		5766099	0					
ANR	5766173	Identifier	eprintf		5766099	0					
ANR	5766174	ArgumentList	"""Missing \\""\\n"""		5766099	1					
ANR	5766175	Argument	"""Missing \\""\\n"""		5766099	0					
ANR	5766176	PrimaryExpression	"""Missing \\""\\n"""		5766099	0					
ANR	5766177	ExpressionStatement	free ( ret )	142:3:2901:2911	5766099	2	True				
ANR	5766178	CallExpression	free ( ret )		5766099	0					
ANR	5766179	Callee	free		5766099	0					
ANR	5766180	Identifier	free		5766099	0					
ANR	5766181	ArgumentList	ret		5766099	1					
ANR	5766182	Argument	ret		5766099	0					
ANR	5766183	Identifier	ret		5766099	0					
ANR	5766184	ReturnStatement	return NULL ;	144:2:2919:2930	5766099	3	True				
ANR	5766185	Identifier	NULL		5766099	0					
ANR	5766186	Label	"case '""' :"	145:1:2933:2941	5766099	4	True				
ANR	5766187	ExpressionStatement	ret = strdup ( src + 1 )	146:2:2945:2967	5766099	5	True				
ANR	5766188	AssignmentExpression	ret = strdup ( src + 1 )		5766099	0		=			
ANR	5766189	Identifier	ret		5766099	0					
ANR	5766190	CallExpression	strdup ( src + 1 )		5766099	1					
ANR	5766191	Callee	strdup		5766099	0					
ANR	5766192	Identifier	strdup		5766099	0					
ANR	5766193	ArgumentList	src + 1		5766099	1					
ANR	5766194	Argument	src + 1		5766099	0					
ANR	5766195	AdditiveExpression	src + 1		5766099	0		+			
ANR	5766196	Identifier	src		5766099	0					
ANR	5766197	PrimaryExpression	1		5766099	1					
ANR	5766198	IfStatement	if ( ret )		5766099	6					
ANR	5766199	Condition	ret	147:6:2975:2977	5766099	0	True				
ANR	5766200	Identifier	ret		5766099	0					
ANR	5766201	CompoundStatement		23:11:336:336	5766099	1					
ANR	5766202	ExpressionStatement	len = strlen ( ret )	148:3:2985:3003	5766099	0	True				
ANR	5766203	AssignmentExpression	len = strlen ( ret )		5766099	0		=			
ANR	5766204	Identifier	len		5766099	0					
ANR	5766205	CallExpression	strlen ( ret )		5766099	1					
ANR	5766206	Callee	strlen		5766099	0					
ANR	5766207	Identifier	strlen		5766099	0					
ANR	5766208	ArgumentList	ret		5766099	1					
ANR	5766209	Argument	ret		5766099	0					
ANR	5766210	Identifier	ret		5766099	0					
ANR	5766211	IfStatement	if ( len > 0 )		5766099	1					
ANR	5766212	Condition	len > 0	149:7:3012:3018	5766099	0	True				
ANR	5766213	RelationalExpression	len > 0		5766099	0		>			
ANR	5766214	Identifier	len		5766099	0					
ANR	5766215	PrimaryExpression	0		5766099	1					
ANR	5766216	CompoundStatement		25:16:377:377	5766099	1					
ANR	5766217	ExpressionStatement	len --	150:4:3027:3032	5766099	0	True				
ANR	5766218	PostIncDecOperationExpression	len --		5766099	0					
ANR	5766219	Identifier	len		5766099	0					
ANR	5766220	IncDec	--		5766099	1					
ANR	5766221	IfStatement	"if ( ret [ len ] == '""' )"		5766099	1					
ANR	5766222	Condition	"ret [ len ] == '""'"	151:8:3042:3056	5766099	0	True				
ANR	5766223	EqualityExpression	"ret [ len ] == '""'"		5766099	0		==			
ANR	5766224	ArrayIndexing	ret [ len ]		5766099	0					
ANR	5766225	Identifier	ret		5766099	0					
ANR	5766226	Identifier	len		5766099	1					
ANR	5766227	PrimaryExpression	"'""'"		5766099	1					
ANR	5766228	CompoundStatement		27:25:415:415	5766099	1					
ANR	5766229	ExpressionStatement	ret [ len ] = 0	152:5:3066:3078	5766099	0	True				
ANR	5766230	AssignmentExpression	ret [ len ] = 0		5766099	0		=			
ANR	5766231	ArrayIndexing	ret [ len ]		5766099	0					
ANR	5766232	Identifier	ret		5766099	0					
ANR	5766233	Identifier	len		5766099	1					
ANR	5766234	PrimaryExpression	0		5766099	1					
ANR	5766235	ExpressionStatement	r_str_unescape ( ret )	153:5:3085:3105	5766099	1	True				
ANR	5766236	CallExpression	r_str_unescape ( ret )		5766099	0					
ANR	5766237	Callee	r_str_unescape		5766099	0					
ANR	5766238	Identifier	r_str_unescape		5766099	0					
ANR	5766239	ArgumentList	ret		5766099	1					
ANR	5766240	Argument	ret		5766099	0					
ANR	5766241	Identifier	ret		5766099	0					
ANR	5766242	ReturnStatement	return ret ;	154:5:3112:3122	5766099	2	True				
ANR	5766243	Identifier	ret		5766099	0					
ANR	5766244	ExpressionStatement	"eprintf ( ""Missing \\""\\n"" )"	156:4:3134:3158	5766099	2	True				
ANR	5766245	CallExpression	"eprintf ( ""Missing \\""\\n"" )"		5766099	0					
ANR	5766246	Callee	eprintf		5766099	0					
ANR	5766247	Identifier	eprintf		5766099	0					
ANR	5766248	ArgumentList	"""Missing \\""\\n"""		5766099	1					
ANR	5766249	Argument	"""Missing \\""\\n"""		5766099	0					
ANR	5766250	PrimaryExpression	"""Missing \\""\\n"""		5766099	0					
ANR	5766251	ExpressionStatement	free ( ret )	158:3:3168:3178	5766099	2	True				
ANR	5766252	CallExpression	free ( ret )		5766099	0					
ANR	5766253	Callee	free		5766099	0					
ANR	5766254	Identifier	free		5766099	0					
ANR	5766255	ArgumentList	ret		5766099	1					
ANR	5766256	Argument	ret		5766099	0					
ANR	5766257	Identifier	ret		5766099	0					
ANR	5766258	ReturnStatement	return NULL ;	160:2:3186:3197	5766099	7	True				
ANR	5766259	Identifier	NULL		5766099	0					
ANR	5766260	Label	case '@' :	161:1:3200:3208	5766099	8	True				
ANR	5766261	CompoundStatement		39:3:573:606	5766099	9					
ANR	5766262	IdentifierDeclStatement	"char * pat = strchr ( src + 1 , '@' ) ;"	163:3:3217:3250	5766099	0	True				
ANR	5766263	IdentifierDecl	"* pat = strchr ( src + 1 , '@' )"		5766099	0					
ANR	5766264	IdentifierDeclType	char *		5766099	0					
ANR	5766265	Identifier	pat		5766099	1					
ANR	5766266	AssignmentExpression	"* pat = strchr ( src + 1 , '@' )"		5766099	2		=			
ANR	5766267	Identifier	pat		5766099	0					
ANR	5766268	CallExpression	"strchr ( src + 1 , '@' )"		5766099	1					
ANR	5766269	Callee	strchr		5766099	0					
ANR	5766270	Identifier	strchr		5766099	0					
ANR	5766271	ArgumentList	src + 1		5766099	1					
ANR	5766272	Argument	src + 1		5766099	0					
ANR	5766273	AdditiveExpression	src + 1		5766099	0		+			
ANR	5766274	Identifier	src		5766099	0					
ANR	5766275	PrimaryExpression	1		5766099	1					
ANR	5766276	Argument	'@'		5766099	1					
ANR	5766277	PrimaryExpression	'@'		5766099	0					
ANR	5766278	IfStatement	if ( pat )		5766099	1					
ANR	5766279	Condition	pat	164:7:3259:3261	5766099	0	True				
ANR	5766280	Identifier	pat		5766099	0					
ANR	5766281	CompoundStatement		41:4:626:641	5766099	1					
ANR	5766282	IdentifierDeclStatement	"int i , len , rep ;"	165:4:3270:3285	5766099	0	True				
ANR	5766283	IdentifierDecl	i		5766099	0					
ANR	5766284	IdentifierDeclType	int		5766099	0					
ANR	5766285	Identifier	i		5766099	1					
ANR	5766286	IdentifierDecl	len		5766099	1					
ANR	5766287	IdentifierDeclType	int		5766099	0					
ANR	5766288	Identifier	len		5766099	1					
ANR	5766289	IdentifierDecl	rep		5766099	2					
ANR	5766290	IdentifierDeclType	int		5766099	0					
ANR	5766291	Identifier	rep		5766099	1					
ANR	5766292	ExpressionStatement	* pat ++ = 0	166:4:3291:3301	5766099	1	True				
ANR	5766293	AssignmentExpression	* pat ++ = 0		5766099	0		=			
ANR	5766294	UnaryOperationExpression	* pat ++		5766099	0					
ANR	5766295	UnaryOperator	*		5766099	0					
ANR	5766296	PostIncDecOperationExpression	pat ++		5766099	1					
ANR	5766297	Identifier	pat		5766099	0					
ANR	5766298	IncDec	++		5766099	1					
ANR	5766299	PrimaryExpression	0		5766099	1					
ANR	5766300	ExpressionStatement	rep = atoi ( src + 1 )	167:4:3307:3327	5766099	2	True				
ANR	5766301	AssignmentExpression	rep = atoi ( src + 1 )		5766099	0		=			
ANR	5766302	Identifier	rep		5766099	0					
ANR	5766303	CallExpression	atoi ( src + 1 )		5766099	1					
ANR	5766304	Callee	atoi		5766099	0					
ANR	5766305	Identifier	atoi		5766099	0					
ANR	5766306	ArgumentList	src + 1		5766099	1					
ANR	5766307	Argument	src + 1		5766099	0					
ANR	5766308	AdditiveExpression	src + 1		5766099	0		+			
ANR	5766309	Identifier	src		5766099	0					
ANR	5766310	PrimaryExpression	1		5766099	1					
ANR	5766311	ExpressionStatement	len = strlen ( pat )	168:4:3333:3351	5766099	3	True				
ANR	5766312	AssignmentExpression	len = strlen ( pat )		5766099	0		=			
ANR	5766313	Identifier	len		5766099	0					
ANR	5766314	CallExpression	strlen ( pat )		5766099	1					
ANR	5766315	Callee	strlen		5766099	0					
ANR	5766316	Identifier	strlen		5766099	0					
ANR	5766317	ArgumentList	pat		5766099	1					
ANR	5766318	Argument	pat		5766099	0					
ANR	5766319	Identifier	pat		5766099	0					
ANR	5766320	IfStatement	if ( rep > 0 )		5766099	4					
ANR	5766321	Condition	rep > 0	169:8:3361:3367	5766099	0	True				
ANR	5766322	RelationalExpression	rep > 0		5766099	0		>			
ANR	5766323	Identifier	rep		5766099	0					
ANR	5766324	PrimaryExpression	0		5766099	1					
ANR	5766325	CompoundStatement		46:5:733:757	5766099	1					
ANR	5766326	IdentifierDeclStatement	char * buf = malloc ( rep ) ;	170:5:3377:3401	5766099	0	True				
ANR	5766327	IdentifierDecl	* buf = malloc ( rep )		5766099	0					
ANR	5766328	IdentifierDeclType	char *		5766099	0					
ANR	5766329	Identifier	buf		5766099	1					
ANR	5766330	AssignmentExpression	* buf = malloc ( rep )		5766099	2		=			
ANR	5766331	Identifier	buf		5766099	0					
ANR	5766332	CallExpression	malloc ( rep )		5766099	1					
ANR	5766333	Callee	malloc		5766099	0					
ANR	5766334	Identifier	malloc		5766099	0					
ANR	5766335	ArgumentList	rep		5766099	1					
ANR	5766336	Argument	rep		5766099	0					
ANR	5766337	Identifier	rep		5766099	0					
ANR	5766338	IfStatement	if ( buf )		5766099	1					
ANR	5766339	Condition	buf	171:9:3412:3414	5766099	0	True				
ANR	5766340	Identifier	buf		5766099	0					
ANR	5766341	CompoundStatement		47:14:773:773	5766099	1					
ANR	5766342	ForStatement	for ( i = 0 ; i < rep ; i ++ )		5766099	0					
ANR	5766343	ForInit	i = 0 ;	172:11:3430:3435	5766099	0	True				
ANR	5766344	AssignmentExpression	i = 0		5766099	0		=			
ANR	5766345	Identifier	i		5766099	0					
ANR	5766346	PrimaryExpression	0		5766099	1					
ANR	5766347	Condition	i < rep	172:18:3437:3443	5766099	1	True				
ANR	5766348	RelationalExpression	i < rep		5766099	0		<			
ANR	5766349	Identifier	i		5766099	0					
ANR	5766350	Identifier	rep		5766099	1					
ANR	5766351	PostIncDecOperationExpression	i ++	172:27:3446:3448	5766099	2	True				
ANR	5766352	Identifier	i		5766099	0					
ANR	5766353	IncDec	++		5766099	1					
ANR	5766354	CompoundStatement		48:32:807:807	5766099	3					
ANR	5766355	ExpressionStatement	buf [ i ] = pat [ i % len ]	173:7:3460:3479	5766099	0	True				
ANR	5766356	AssignmentExpression	buf [ i ] = pat [ i % len ]		5766099	0		=			
ANR	5766357	ArrayIndexing	buf [ i ]		5766099	0					
ANR	5766358	Identifier	buf		5766099	0					
ANR	5766359	Identifier	i		5766099	1					
ANR	5766360	ArrayIndexing	pat [ i % len ]		5766099	1					
ANR	5766361	Identifier	pat		5766099	0					
ANR	5766362	MultiplicativeExpression	i % len		5766099	1		%			
ANR	5766363	Identifier	i		5766099	0					
ANR	5766364	Identifier	len		5766099	1					
ANR	5766365	ReturnStatement	return buf ;	176:5:3501:3511	5766099	2	True				
ANR	5766366	Identifier	buf		5766099	0					
ANR	5766367	ReturnStatement	"return r_file_slurp ( src + 1 , NULL ) ;"	180:3:3544:3579	5766099	2	True				
ANR	5766368	CallExpression	"r_file_slurp ( src + 1 , NULL )"		5766099	0					
ANR	5766369	Callee	r_file_slurp		5766099	0					
ANR	5766370	Identifier	r_file_slurp		5766099	0					
ANR	5766371	ArgumentList	src + 1		5766099	1					
ANR	5766372	Argument	src + 1		5766099	0					
ANR	5766373	AdditiveExpression	src + 1		5766099	0		+			
ANR	5766374	Identifier	src		5766099	0					
ANR	5766375	PrimaryExpression	1		5766099	1					
ANR	5766376	Argument	NULL		5766099	1					
ANR	5766377	Identifier	NULL		5766099	0					
ANR	5766378	Label	case '`' :	182:1:3586:3594	5766099	10	True				
ANR	5766379	CompoundStatement		61:2:990:1016	5766099	11					
ANR	5766380	IdentifierDeclStatement	char * msg = strdup ( src + 1 ) ;	184:2:3602:3630	5766099	0	True				
ANR	5766381	IdentifierDecl	* msg = strdup ( src + 1 )		5766099	0					
ANR	5766382	IdentifierDeclType	char *		5766099	0					
ANR	5766383	Identifier	msg		5766099	1					
ANR	5766384	AssignmentExpression	* msg = strdup ( src + 1 )		5766099	2		=			
ANR	5766385	Identifier	msg		5766099	0					
ANR	5766386	CallExpression	strdup ( src + 1 )		5766099	1					
ANR	5766387	Callee	strdup		5766099	0					
ANR	5766388	Identifier	strdup		5766099	0					
ANR	5766389	ArgumentList	src + 1		5766099	1					
ANR	5766390	Argument	src + 1		5766099	0					
ANR	5766391	AdditiveExpression	src + 1		5766099	0		+			
ANR	5766392	Identifier	src		5766099	0					
ANR	5766393	PrimaryExpression	1		5766099	1					
ANR	5766394	IdentifierDeclStatement	int msg_len = strlen ( msg ) ;	185:2:3634:3660	5766099	1	True				
ANR	5766395	IdentifierDecl	msg_len = strlen ( msg )		5766099	0					
ANR	5766396	IdentifierDeclType	int		5766099	0					
ANR	5766397	Identifier	msg_len		5766099	1					
ANR	5766398	AssignmentExpression	msg_len = strlen ( msg )		5766099	2		=			
ANR	5766399	Identifier	msg_len		5766099	0					
ANR	5766400	CallExpression	strlen ( msg )		5766099	1					
ANR	5766401	Callee	strlen		5766099	0					
ANR	5766402	Identifier	strlen		5766099	0					
ANR	5766403	ArgumentList	msg		5766099	1					
ANR	5766404	Argument	msg		5766099	0					
ANR	5766405	Identifier	msg		5766099	0					
ANR	5766406	IfStatement	if ( msg_len > 0 )		5766099	2					
ANR	5766407	Condition	msg_len > 0	186:6:3668:3678	5766099	0	True				
ANR	5766408	RelationalExpression	msg_len > 0		5766099	0		>			
ANR	5766409	Identifier	msg_len		5766099	0					
ANR	5766410	PrimaryExpression	0		5766099	1					
ANR	5766411	CompoundStatement		64:3:1068:1129	5766099	1					
ANR	5766412	ExpressionStatement	msg [ msg_len - 1 ] = 0	187:3:3686:3707	5766099	0	True				
ANR	5766413	AssignmentExpression	msg [ msg_len - 1 ] = 0		5766099	0		=			
ANR	5766414	ArrayIndexing	msg [ msg_len - 1 ]		5766099	0					
ANR	5766415	Identifier	msg		5766099	0					
ANR	5766416	AdditiveExpression	msg_len - 1		5766099	1		-			
ANR	5766417	Identifier	msg_len		5766099	0					
ANR	5766418	PrimaryExpression	1		5766099	1					
ANR	5766419	PrimaryExpression	0		5766099	1					
ANR	5766420	IdentifierDeclStatement	"char * ret = r_str_trim_tail ( r_sys_cmd_str ( msg , NULL , NULL ) ) ;"	188:3:3712:3773	5766099	1	True				
ANR	5766421	IdentifierDecl	"* ret = r_str_trim_tail ( r_sys_cmd_str ( msg , NULL , NULL ) )"		5766099	0					
ANR	5766422	IdentifierDeclType	char *		5766099	0					
ANR	5766423	Identifier	ret		5766099	1					
ANR	5766424	AssignmentExpression	"* ret = r_str_trim_tail ( r_sys_cmd_str ( msg , NULL , NULL ) )"		5766099	2		=			
ANR	5766425	Identifier	ret		5766099	0					
ANR	5766426	CallExpression	"r_str_trim_tail ( r_sys_cmd_str ( msg , NULL , NULL ) )"		5766099	1					
ANR	5766427	Callee	r_str_trim_tail		5766099	0					
ANR	5766428	Identifier	r_str_trim_tail		5766099	0					
ANR	5766429	ArgumentList	"r_sys_cmd_str ( msg , NULL , NULL )"		5766099	1					
ANR	5766430	Argument	"r_sys_cmd_str ( msg , NULL , NULL )"		5766099	0					
ANR	5766431	CallExpression	"r_sys_cmd_str ( msg , NULL , NULL )"		5766099	0					
ANR	5766432	Callee	r_sys_cmd_str		5766099	0					
ANR	5766433	Identifier	r_sys_cmd_str		5766099	0					
ANR	5766434	ArgumentList	msg		5766099	1					
ANR	5766435	Argument	msg		5766099	0					
ANR	5766436	Identifier	msg		5766099	0					
ANR	5766437	Argument	NULL		5766099	1					
ANR	5766438	Identifier	NULL		5766099	0					
ANR	5766439	Argument	NULL		5766099	2					
ANR	5766440	Identifier	NULL		5766099	0					
ANR	5766441	ExpressionStatement	free ( msg )	189:3:3778:3788	5766099	2	True				
ANR	5766442	CallExpression	free ( msg )		5766099	0					
ANR	5766443	Callee	free		5766099	0					
ANR	5766444	Identifier	free		5766099	0					
ANR	5766445	ArgumentList	msg		5766099	1					
ANR	5766446	Argument	msg		5766099	0					
ANR	5766447	Identifier	msg		5766099	0					
ANR	5766448	ReturnStatement	return ret ;	190:3:3793:3803	5766099	3	True				
ANR	5766449	Identifier	ret		5766099	0					
ANR	5766450	ExpressionStatement	free ( msg )	192:2:3811:3821	5766099	3	True				
ANR	5766451	CallExpression	free ( msg )		5766099	0					
ANR	5766452	Callee	free		5766099	0					
ANR	5766453	Identifier	free		5766099	0					
ANR	5766454	ArgumentList	msg		5766099	1					
ANR	5766455	Argument	msg		5766099	0					
ANR	5766456	Identifier	msg		5766099	0					
ANR	5766457	ReturnStatement	"return strdup ( """" ) ;"	193:2:3825:3843	5766099	4	True				
ANR	5766458	CallExpression	"strdup ( """" )"		5766099	0					
ANR	5766459	Callee	strdup		5766099	0					
ANR	5766460	Identifier	strdup		5766099	0					
ANR	5766461	ArgumentList	""""""		5766099	1					
ANR	5766462	Argument	""""""		5766099	0					
ANR	5766463	PrimaryExpression	""""""		5766099	0					
ANR	5766464	Label	case '!' :	195:1:3850:3858	5766099	12	True				
ANR	5766465	ReturnStatement	"return r_str_trim_tail ( r_sys_cmd_str ( src + 1 , NULL , NULL ) ) ;"	196:2:3862:3922	5766099	13	True				
ANR	5766466	CallExpression	"r_str_trim_tail ( r_sys_cmd_str ( src + 1 , NULL , NULL ) )"		5766099	0					
ANR	5766467	Callee	r_str_trim_tail		5766099	0					
ANR	5766468	Identifier	r_str_trim_tail		5766099	0					
ANR	5766469	ArgumentList	"r_sys_cmd_str ( src + 1 , NULL , NULL )"		5766099	1					
ANR	5766470	Argument	"r_sys_cmd_str ( src + 1 , NULL , NULL )"		5766099	0					
ANR	5766471	CallExpression	"r_sys_cmd_str ( src + 1 , NULL , NULL )"		5766099	0					
ANR	5766472	Callee	r_sys_cmd_str		5766099	0					
ANR	5766473	Identifier	r_sys_cmd_str		5766099	0					
ANR	5766474	ArgumentList	src + 1		5766099	1					
ANR	5766475	Argument	src + 1		5766099	0					
ANR	5766476	AdditiveExpression	src + 1		5766099	0		+			
ANR	5766477	Identifier	src		5766099	0					
ANR	5766478	PrimaryExpression	1		5766099	1					
ANR	5766479	Argument	NULL		5766099	1					
ANR	5766480	Identifier	NULL		5766099	0					
ANR	5766481	Argument	NULL		5766099	2					
ANR	5766482	Identifier	NULL		5766099	0					
ANR	5766483	Label	case ':' :	197:1:3925:3933	5766099	14	True				
ANR	5766484	IfStatement	if ( src [ 1 ] == '!' )		5766099	15					
ANR	5766485	Condition	src [ 1 ] == '!'	198:6:3941:3953	5766099	0	True				
ANR	5766486	EqualityExpression	src [ 1 ] == '!'		5766099	0		==			
ANR	5766487	ArrayIndexing	src [ 1 ]		5766099	0					
ANR	5766488	Identifier	src		5766099	0					
ANR	5766489	PrimaryExpression	1		5766099	1					
ANR	5766490	PrimaryExpression	'!'		5766099	1					
ANR	5766491	CompoundStatement		74:21:1312:1312	5766099	1					
ANR	5766492	ExpressionStatement	"ret = r_str_trim_tail ( r_sys_cmd_str ( src + 1 , NULL , NULL ) )"	199:3:3961:4020	5766099	0	True				
ANR	5766493	AssignmentExpression	"ret = r_str_trim_tail ( r_sys_cmd_str ( src + 1 , NULL , NULL ) )"		5766099	0		=			
ANR	5766494	Identifier	ret		5766099	0					
ANR	5766495	CallExpression	"r_str_trim_tail ( r_sys_cmd_str ( src + 1 , NULL , NULL ) )"		5766099	1					
ANR	5766496	Callee	r_str_trim_tail		5766099	0					
ANR	5766497	Identifier	r_str_trim_tail		5766099	0					
ANR	5766498	ArgumentList	"r_sys_cmd_str ( src + 1 , NULL , NULL )"		5766099	1					
ANR	5766499	Argument	"r_sys_cmd_str ( src + 1 , NULL , NULL )"		5766099	0					
ANR	5766500	CallExpression	"r_sys_cmd_str ( src + 1 , NULL , NULL )"		5766099	0					
ANR	5766501	Callee	r_sys_cmd_str		5766099	0					
ANR	5766502	Identifier	r_sys_cmd_str		5766099	0					
ANR	5766503	ArgumentList	src + 1		5766099	1					
ANR	5766504	Argument	src + 1		5766099	0					
ANR	5766505	AdditiveExpression	src + 1		5766099	0		+			
ANR	5766506	Identifier	src		5766099	0					
ANR	5766507	PrimaryExpression	1		5766099	1					
ANR	5766508	Argument	NULL		5766099	1					
ANR	5766509	Identifier	NULL		5766099	0					
ANR	5766510	Argument	NULL		5766099	2					
ANR	5766511	Identifier	NULL		5766099	0					
ANR	5766512	ElseStatement	else		5766099	0					
ANR	5766513	CompoundStatement		76:9:1387:1387	5766099	0					
ANR	5766514	ExpressionStatement	ret = strdup ( src )	201:3:4036:4054	5766099	0	True				
ANR	5766515	AssignmentExpression	ret = strdup ( src )		5766099	0		=			
ANR	5766516	Identifier	ret		5766099	0					
ANR	5766517	CallExpression	strdup ( src )		5766099	1					
ANR	5766518	Callee	strdup		5766099	0					
ANR	5766519	Identifier	strdup		5766099	0					
ANR	5766520	ArgumentList	src		5766099	1					
ANR	5766521	Argument	src		5766099	0					
ANR	5766522	Identifier	src		5766099	0					
ANR	5766523	ExpressionStatement	"len = r_hex_str2bin ( src + 1 , ( ut8 * ) ret )"	203:2:4062:4102	5766099	16	True				
ANR	5766524	AssignmentExpression	"len = r_hex_str2bin ( src + 1 , ( ut8 * ) ret )"		5766099	0		=			
ANR	5766525	Identifier	len		5766099	0					
ANR	5766526	CallExpression	"r_hex_str2bin ( src + 1 , ( ut8 * ) ret )"		5766099	1					
ANR	5766527	Callee	r_hex_str2bin		5766099	0					
ANR	5766528	Identifier	r_hex_str2bin		5766099	0					
ANR	5766529	ArgumentList	src + 1		5766099	1					
ANR	5766530	Argument	src + 1		5766099	0					
ANR	5766531	AdditiveExpression	src + 1		5766099	0		+			
ANR	5766532	Identifier	src		5766099	0					
ANR	5766533	PrimaryExpression	1		5766099	1					
ANR	5766534	Argument	( ut8 * ) ret		5766099	1					
ANR	5766535	CastExpression	( ut8 * ) ret		5766099	0					
ANR	5766536	CastTarget	ut8 *		5766099	0					
ANR	5766537	Identifier	ret		5766099	1					
ANR	5766538	IfStatement	if ( len > 0 )		5766099	17					
ANR	5766539	Condition	len > 0	204:6:4110:4116	5766099	0	True				
ANR	5766540	RelationalExpression	len > 0		5766099	0		>			
ANR	5766541	Identifier	len		5766099	0					
ANR	5766542	PrimaryExpression	0		5766099	1					
ANR	5766543	CompoundStatement		80:15:1475:1475	5766099	1					
ANR	5766544	ExpressionStatement	ret [ len ] = 0	205:3:4124:4136	5766099	0	True				
ANR	5766545	AssignmentExpression	ret [ len ] = 0		5766099	0		=			
ANR	5766546	ArrayIndexing	ret [ len ]		5766099	0					
ANR	5766547	Identifier	ret		5766099	0					
ANR	5766548	Identifier	len		5766099	1					
ANR	5766549	PrimaryExpression	0		5766099	1					
ANR	5766550	ReturnStatement	return ret ;	206:3:4141:4151	5766099	1	True				
ANR	5766551	Identifier	ret		5766099	0					
ANR	5766552	ExpressionStatement	"eprintf ( ""Invalid hexpair string\\n"" )"	208:2:4159:4195	5766099	18	True				
ANR	5766553	CallExpression	"eprintf ( ""Invalid hexpair string\\n"" )"		5766099	0					
ANR	5766554	Callee	eprintf		5766099	0					
ANR	5766555	Identifier	eprintf		5766099	0					
ANR	5766556	ArgumentList	"""Invalid hexpair string\\n"""		5766099	1					
ANR	5766557	Argument	"""Invalid hexpair string\\n"""		5766099	0					
ANR	5766558	PrimaryExpression	"""Invalid hexpair string\\n"""		5766099	0					
ANR	5766559	ExpressionStatement	free ( ret )	209:2:4199:4209	5766099	19	True				
ANR	5766560	CallExpression	free ( ret )		5766099	0					
ANR	5766561	Callee	free		5766099	0					
ANR	5766562	Identifier	free		5766099	0					
ANR	5766563	ArgumentList	ret		5766099	1					
ANR	5766564	Argument	ret		5766099	0					
ANR	5766565	Identifier	ret		5766099	0					
ANR	5766566	ReturnStatement	return NULL ;	210:2:4213:4224	5766099	20	True				
ANR	5766567	Identifier	NULL		5766099	0					
ANR	5766568	Label	case '%' :	213:1:4256:4264	5766099	21	True				
ANR	5766569	ReturnStatement	"return ( char * ) strtoul ( src + 1 , NULL , 0 ) ;"	214:2:4268:4310	5766099	22	True				
ANR	5766570	CastExpression	"( char * ) strtoul ( src + 1 , NULL , 0 )"		5766099	0					
ANR	5766571	CastTarget	char *		5766099	0					
ANR	5766572	CallExpression	"strtoul ( src + 1 , NULL , 0 )"		5766099	1					
ANR	5766573	Callee	strtoul		5766099	0					
ANR	5766574	Identifier	strtoul		5766099	0					
ANR	5766575	ArgumentList	src + 1		5766099	1					
ANR	5766576	Argument	src + 1		5766099	0					
ANR	5766577	AdditiveExpression	src + 1		5766099	0		+			
ANR	5766578	Identifier	src		5766099	0					
ANR	5766579	PrimaryExpression	1		5766099	1					
ANR	5766580	Argument	NULL		5766099	1					
ANR	5766581	Identifier	NULL		5766099	0					
ANR	5766582	Argument	0		5766099	2					
ANR	5766583	PrimaryExpression	0		5766099	0					
ANR	5766584	ExpressionStatement	r_str_unescape ( ( ret = strdup ( src ) ) )	217:1:4323:4360	5766099	3	True				
ANR	5766585	CallExpression	r_str_unescape ( ( ret = strdup ( src ) ) )		5766099	0					
ANR	5766586	Callee	r_str_unescape		5766099	0					
ANR	5766587	Identifier	r_str_unescape		5766099	0					
ANR	5766588	ArgumentList	ret = strdup ( src )		5766099	1					
ANR	5766589	Argument	ret = strdup ( src )		5766099	0					
ANR	5766590	AssignmentExpression	ret = strdup ( src )		5766099	0		=			
ANR	5766591	Identifier	ret		5766099	0					
ANR	5766592	CallExpression	strdup ( src )		5766099	1					
ANR	5766593	Callee	strdup		5766099	0					
ANR	5766594	Identifier	strdup		5766099	0					
ANR	5766595	ArgumentList	src		5766099	1					
ANR	5766596	Argument	src		5766099	0					
ANR	5766597	Identifier	src		5766099	0					
ANR	5766598	ReturnStatement	return ret ;	218:1:4363:4373	5766099	4	True				
ANR	5766599	Identifier	ret		5766099	0					
ANR	5766600	ReturnType	static char *		5766099	1					
ANR	5766601	Identifier	getstr		5766099	2					
ANR	5766602	ParameterList	const char * src		5766099	3					
ANR	5766603	Parameter	const char * src	125:20:2626:2640	5766099	0	True				
ANR	5766604	ParameterType	const char *		5766099	0					
ANR	5766605	Identifier	src		5766099	1					
ANR	5766606	CFGEntryNode	ENTRY		5766099		True				
ANR	5766607	CFGExitNode	EXIT		5766099		True				
ANR	5766608	Symbol	msg		5766099						
ANR	5766609	Symbol	strchr		5766099						
ANR	5766610	Symbol	* ret		5766099						
ANR	5766611	Symbol	msg_len		5766099						
ANR	5766612	Symbol	* pat		5766099						
ANR	5766613	Symbol	* src		5766099						
ANR	5766614	Symbol	* pat ++		5766099						
ANR	5766615	Symbol	strlen		5766099						
ANR	5766616	Symbol	r_sys_cmd_str		5766099						
ANR	5766617	Symbol	len		5766099						
ANR	5766618	Symbol	strtoul		5766099						
ANR	5766619	Symbol	rep		5766099						
ANR	5766620	Symbol	* msg_len		5766099						
ANR	5766621	Symbol	r_hex_str2bin		5766099						
ANR	5766622	Symbol	ret		5766099						
ANR	5766623	Symbol	atoi		5766099						
ANR	5766624	Symbol	malloc		5766099						
ANR	5766625	Symbol	pat		5766099						
ANR	5766626	Symbol	* buf		5766099						
ANR	5766627	Symbol	r_file_slurp		5766099						
ANR	5766628	Symbol	NULL		5766099						
ANR	5766629	Symbol	src		5766099						
ANR	5766630	Symbol	i		5766099						
ANR	5766631	Symbol	* msg		5766099						
ANR	5766632	Symbol	r_str_trim_tail		5766099						
ANR	5766633	Symbol	buf		5766099						
ANR	5766634	Symbol	* i		5766099						
ANR	5766635	Symbol	strdup		5766099						
ANR	5766636	Symbol	* len		5766099						
ANR	5766637	Function	parseBool	221:0:4378:4529							
ANR	5766638	FunctionDef	parseBool (const char * e)		5766637	0					
ANR	5766639	CompoundStatement		221:36:4414:4529	5766637	0					
ANR	5766640	ReturnStatement	"return ( strcmp ( e , ""yes"" ) ? ( strcmp ( e , ""on"" ) ? ( strcmp ( e , ""true"" ) ? ( strcmp ( e , ""1"" ) ? 0 : 1 ) : 1 ) : 1 ) : 1 ) ;"	222:1:4417:4527	5766637	0	True				
ANR	5766641	ConditionalExpression	"strcmp ( e , ""yes"" ) ? ( strcmp ( e , ""on"" ) ? ( strcmp ( e , ""true"" ) ? ( strcmp ( e , ""1"" ) ? 0 : 1 ) : 1 ) : 1 ) : 1"		5766637	0					
ANR	5766642	Condition	"strcmp ( e , ""yes"" )"		5766637	0					
ANR	5766643	CallExpression	"strcmp ( e , ""yes"" )"		5766637	0					
ANR	5766644	Callee	strcmp		5766637	0					
ANR	5766645	Identifier	strcmp		5766637	0					
ANR	5766646	ArgumentList	e		5766637	1					
ANR	5766647	Argument	e		5766637	0					
ANR	5766648	Identifier	e		5766637	0					
ANR	5766649	Argument	"""yes"""		5766637	1					
ANR	5766650	PrimaryExpression	"""yes"""		5766637	0					
ANR	5766651	ConditionalExpression	"strcmp ( e , ""on"" ) ? ( strcmp ( e , ""true"" ) ? ( strcmp ( e , ""1"" ) ? 0 : 1 ) : 1 ) : 1"		5766637	1					
ANR	5766652	Condition	"strcmp ( e , ""on"" )"		5766637	0					
ANR	5766653	CallExpression	"strcmp ( e , ""on"" )"		5766637	0					
ANR	5766654	Callee	strcmp		5766637	0					
ANR	5766655	Identifier	strcmp		5766637	0					
ANR	5766656	ArgumentList	e		5766637	1					
ANR	5766657	Argument	e		5766637	0					
ANR	5766658	Identifier	e		5766637	0					
ANR	5766659	Argument	"""on"""		5766637	1					
ANR	5766660	PrimaryExpression	"""on"""		5766637	0					
ANR	5766661	ConditionalExpression	"strcmp ( e , ""true"" ) ? ( strcmp ( e , ""1"" ) ? 0 : 1 ) : 1"		5766637	1					
ANR	5766662	Condition	"strcmp ( e , ""true"" )"		5766637	0					
ANR	5766663	CallExpression	"strcmp ( e , ""true"" )"		5766637	0					
ANR	5766664	Callee	strcmp		5766637	0					
ANR	5766665	Identifier	strcmp		5766637	0					
ANR	5766666	ArgumentList	e		5766637	1					
ANR	5766667	Argument	e		5766637	0					
ANR	5766668	Identifier	e		5766637	0					
ANR	5766669	Argument	"""true"""		5766637	1					
ANR	5766670	PrimaryExpression	"""true"""		5766637	0					
ANR	5766671	ConditionalExpression	"strcmp ( e , ""1"" ) ? 0 : 1"		5766637	1					
ANR	5766672	Condition	"strcmp ( e , ""1"" )"		5766637	0					
ANR	5766673	CallExpression	"strcmp ( e , ""1"" )"		5766637	0					
ANR	5766674	Callee	strcmp		5766637	0					
ANR	5766675	Identifier	strcmp		5766637	0					
ANR	5766676	ArgumentList	e		5766637	1					
ANR	5766677	Argument	e		5766637	0					
ANR	5766678	Identifier	e		5766637	0					
ANR	5766679	Argument	"""1"""		5766637	1					
ANR	5766680	PrimaryExpression	"""1"""		5766637	0					
ANR	5766681	PrimaryExpression	0		5766637	1					
ANR	5766682	PrimaryExpression	1		5766637	2					
ANR	5766683	PrimaryExpression	1		5766637	2					
ANR	5766684	PrimaryExpression	1		5766637	2					
ANR	5766685	PrimaryExpression	1		5766637	2					
ANR	5766686	ReturnType	static int		5766637	1					
ANR	5766687	Identifier	parseBool		5766637	2					
ANR	5766688	ParameterList	const char * e		5766637	3					
ANR	5766689	Parameter	const char * e	221:21:4399:4411	5766637	0	True				
ANR	5766690	ParameterType	const char *		5766637	0					
ANR	5766691	Identifier	e		5766637	1					
ANR	5766692	CFGEntryNode	ENTRY		5766637		True				
ANR	5766693	CFGExitNode	EXIT		5766637		True				
ANR	5766694	Symbol	strcmp		5766637						
ANR	5766695	Symbol	e		5766637						
ANR	5766696	Function	setASLR	230:0:4595:5490							
ANR	5766697	FunctionDef	"setASLR (RRunProfile * r , int enabled)"		5766696	0					
ANR	5766698	CompoundStatement		230:49:4644:5490	5766696	0					
ANR	5766699	ExpressionStatement	r_sys_aslr ( enabled )	232:1:4661:4681	5766696	0	True				
ANR	5766700	CallExpression	r_sys_aslr ( enabled )		5766696	0					
ANR	5766701	Callee	r_sys_aslr		5766696	0					
ANR	5766702	Identifier	r_sys_aslr		5766696	0					
ANR	5766703	ArgumentList	enabled		5766696	1					
ANR	5766704	Argument	enabled		5766696	0					
ANR	5766705	Identifier	enabled		5766696	0					
ANR	5766706	IfStatement	if ( personality ( ADDR_NO_RANDOMIZE ) == - 1 )		5766696	1					
ANR	5766707	Condition	personality ( ADDR_NO_RANDOMIZE ) == - 1	234:5:4736:4772	5766696	0	True				
ANR	5766708	EqualityExpression	personality ( ADDR_NO_RANDOMIZE ) == - 1		5766696	0		==			
ANR	5766709	CallExpression	personality ( ADDR_NO_RANDOMIZE )		5766696	0					
ANR	5766710	Callee	personality		5766696	0					
ANR	5766711	Identifier	personality		5766696	0					
ANR	5766712	ArgumentList	ADDR_NO_RANDOMIZE		5766696	1					
ANR	5766713	Argument	ADDR_NO_RANDOMIZE		5766696	0					
ANR	5766714	Identifier	ADDR_NO_RANDOMIZE		5766696	0					
ANR	5766715	UnaryOperationExpression	- 1		5766696	1					
ANR	5766716	UnaryOperator	-		5766696	0					
ANR	5766717	PrimaryExpression	1		5766696	1					
ANR	5766718	CompoundStatement		5:44:130:130	5766696	1					
ANR	5766719	ExpressionStatement	r_sys_aslr ( 0 )	236:2:4786:4800	5766696	0	True				
ANR	5766720	CallExpression	r_sys_aslr ( 0 )		5766696	0					
ANR	5766721	Callee	r_sys_aslr		5766696	0					
ANR	5766722	Identifier	r_sys_aslr		5766696	0					
ANR	5766723	ArgumentList	0		5766696	1					
ANR	5766724	Argument	0		5766696	0					
ANR	5766725	PrimaryExpression	0		5766696	0					
ANR	5766726	ReturnType	static void		5766696	1					
ANR	5766727	Identifier	setASLR		5766696	2					
ANR	5766728	ParameterList	"RRunProfile * r , int enabled"		5766696	3					
ANR	5766729	Parameter	RRunProfile * r	230:20:4615:4628	5766696	0	True				
ANR	5766730	ParameterType	RRunProfile *		5766696	0					
ANR	5766731	Identifier	r		5766696	1					
ANR	5766732	Parameter	int enabled	230:36:4631:4641	5766696	1	True				
ANR	5766733	ParameterType	int		5766696	0					
ANR	5766734	Identifier	enabled		5766696	1					
ANR	5766735	CFGEntryNode	ENTRY		5766696		True				
ANR	5766736	CFGExitNode	EXIT		5766696		True				
ANR	5766737	Symbol	r		5766696						
ANR	5766738	Symbol	personality		5766696						
ANR	5766739	Symbol	ADDR_NO_RANDOMIZE		5766696						
ANR	5766740	Symbol	enabled		5766696						
ANR	5766741	Function	restore_saved_fd	261:0:5506:5658							
ANR	5766742	FunctionDef	"restore_saved_fd (int saved , bool restore , int fd)"		5766741	0					
ANR	5766743	CompoundStatement		261:62:5568:5658	5766741	0					
ANR	5766744	IfStatement	if ( saved == - 1 )		5766741	0					
ANR	5766745	Condition	saved == - 1	262:5:5575:5585	5766741	0	True				
ANR	5766746	EqualityExpression	saved == - 1		5766741	0		==			
ANR	5766747	Identifier	saved		5766741	0					
ANR	5766748	UnaryOperationExpression	- 1		5766741	1					
ANR	5766749	UnaryOperator	-		5766741	0					
ANR	5766750	PrimaryExpression	1		5766741	1					
ANR	5766751	CompoundStatement		2:18:19:19	5766741	1					
ANR	5766752	ReturnStatement	return ;	263:2:5592:5598	5766741	0	True				
ANR	5766753	IfStatement	if ( restore )		5766741	1					
ANR	5766754	Condition	restore	265:5:5608:5614	5766741	0	True				
ANR	5766755	Identifier	restore		5766741	0					
ANR	5766756	CompoundStatement		5:14:48:48	5766741	1					
ANR	5766757	ExpressionStatement	"dup2 ( saved , fd )"	266:2:5621:5637	5766741	0	True				
ANR	5766758	CallExpression	"dup2 ( saved , fd )"		5766741	0					
ANR	5766759	Callee	dup2		5766741	0					
ANR	5766760	Identifier	dup2		5766741	0					
ANR	5766761	ArgumentList	saved		5766741	1					
ANR	5766762	Argument	saved		5766741	0					
ANR	5766763	Identifier	saved		5766741	0					
ANR	5766764	Argument	fd		5766741	1					
ANR	5766765	Identifier	fd		5766741	0					
ANR	5766766	ExpressionStatement	close ( saved )	268:1:5643:5656	5766741	2	True				
ANR	5766767	CallExpression	close ( saved )		5766741	0					
ANR	5766768	Callee	close		5766741	0					
ANR	5766769	Identifier	close		5766741	0					
ANR	5766770	ArgumentList	saved		5766741	1					
ANR	5766771	Argument	saved		5766741	0					
ANR	5766772	Identifier	saved		5766741	0					
ANR	5766773	ReturnType	static void		5766741	1					
ANR	5766774	Identifier	restore_saved_fd		5766741	2					
ANR	5766775	ParameterList	"int saved , bool restore , int fd"		5766741	3					
ANR	5766776	Parameter	int saved	261:29:5535:5543	5766741	0	True				
ANR	5766777	ParameterType	int		5766741	0					
ANR	5766778	Identifier	saved		5766741	1					
ANR	5766779	Parameter	bool restore	261:40:5546:5557	5766741	1	True				
ANR	5766780	ParameterType	bool		5766741	0					
ANR	5766781	Identifier	restore		5766741	1					
ANR	5766782	Parameter	int fd	261:54:5560:5565	5766741	2	True				
ANR	5766783	ParameterType	int		5766741	0					
ANR	5766784	Identifier	fd		5766741	1					
ANR	5766785	CFGEntryNode	ENTRY		5766741		True				
ANR	5766786	CFGExitNode	EXIT		5766741		True				
ANR	5766787	Symbol	restore		5766741						
ANR	5766788	Symbol	saved		5766741						
ANR	5766789	Symbol	fd		5766741						
ANR	5766790	Function	handle_redirection_proc	272:0:5668:7358							
ANR	5766791	FunctionDef	"handle_redirection_proc (const char * cmd , bool in , bool out , bool err)"		5766790	0					
ANR	5766792	CompoundStatement		272:81:5749:7358	5766790	0					
ANR	5766793	IdentifierDeclStatement	int saved_stdin = dup ( STDIN_FILENO ) ;	276:1:5863:5899	5766790	0	True				
ANR	5766794	IdentifierDecl	saved_stdin = dup ( STDIN_FILENO )		5766790	0					
ANR	5766795	IdentifierDeclType	int		5766790	0					
ANR	5766796	Identifier	saved_stdin		5766790	1					
ANR	5766797	AssignmentExpression	saved_stdin = dup ( STDIN_FILENO )		5766790	2		=			
ANR	5766798	Identifier	saved_stdin		5766790	0					
ANR	5766799	CallExpression	dup ( STDIN_FILENO )		5766790	1					
ANR	5766800	Callee	dup		5766790	0					
ANR	5766801	Identifier	dup		5766790	0					
ANR	5766802	ArgumentList	STDIN_FILENO		5766790	1					
ANR	5766803	Argument	STDIN_FILENO		5766790	0					
ANR	5766804	Identifier	STDIN_FILENO		5766790	0					
ANR	5766805	IfStatement	if ( saved_stdin == - 1 )		5766790	1					
ANR	5766806	Condition	saved_stdin == - 1	277:5:5906:5922	5766790	0	True				
ANR	5766807	EqualityExpression	saved_stdin == - 1		5766790	0		==			
ANR	5766808	Identifier	saved_stdin		5766790	0					
ANR	5766809	UnaryOperationExpression	- 1		5766790	1					
ANR	5766810	UnaryOperator	-		5766790	0					
ANR	5766811	PrimaryExpression	1		5766790	1					
ANR	5766812	CompoundStatement		6:24:175:175	5766790	1					
ANR	5766813	ReturnStatement	return - 1 ;	278:2:5929:5938	5766790	0	True				
ANR	5766814	UnaryOperationExpression	- 1		5766790	0					
ANR	5766815	UnaryOperator	-		5766790	0					
ANR	5766816	PrimaryExpression	1		5766790	1					
ANR	5766817	IdentifierDeclStatement	int saved_stdout = dup ( STDOUT_FILENO ) ;	280:1:5944:5982	5766790	2	True				
ANR	5766818	IdentifierDecl	saved_stdout = dup ( STDOUT_FILENO )		5766790	0					
ANR	5766819	IdentifierDeclType	int		5766790	0					
ANR	5766820	Identifier	saved_stdout		5766790	1					
ANR	5766821	AssignmentExpression	saved_stdout = dup ( STDOUT_FILENO )		5766790	2		=			
ANR	5766822	Identifier	saved_stdout		5766790	0					
ANR	5766823	CallExpression	dup ( STDOUT_FILENO )		5766790	1					
ANR	5766824	Callee	dup		5766790	0					
ANR	5766825	Identifier	dup		5766790	0					
ANR	5766826	ArgumentList	STDOUT_FILENO		5766790	1					
ANR	5766827	Argument	STDOUT_FILENO		5766790	0					
ANR	5766828	Identifier	STDOUT_FILENO		5766790	0					
ANR	5766829	IfStatement	if ( saved_stdout == - 1 )		5766790	3					
ANR	5766830	Condition	saved_stdout == - 1	281:5:5989:6005	5766790	0	True				
ANR	5766831	EqualityExpression	saved_stdout == - 1		5766790	0		==			
ANR	5766832	Identifier	saved_stdout		5766790	0					
ANR	5766833	UnaryOperationExpression	- 1		5766790	1					
ANR	5766834	UnaryOperator	-		5766790	0					
ANR	5766835	PrimaryExpression	1		5766790	1					
ANR	5766836	CompoundStatement		10:24:258:258	5766790	1					
ANR	5766837	ExpressionStatement	close ( saved_stdin )	282:2:6012:6031	5766790	0	True				
ANR	5766838	CallExpression	close ( saved_stdin )		5766790	0					
ANR	5766839	Callee	close		5766790	0					
ANR	5766840	Identifier	close		5766790	0					
ANR	5766841	ArgumentList	saved_stdin		5766790	1					
ANR	5766842	Argument	saved_stdin		5766790	0					
ANR	5766843	Identifier	saved_stdin		5766790	0					
ANR	5766844	ReturnStatement	return - 1 ;	283:2:6035:6044	5766790	1	True				
ANR	5766845	UnaryOperationExpression	- 1		5766790	0					
ANR	5766846	UnaryOperator	-		5766790	0					
ANR	5766847	PrimaryExpression	1		5766790	1					
ANR	5766848	IdentifierDeclStatement	"int fdm , pid = forkpty ( & fdm , NULL , NULL , NULL ) ;"	285:1:6050:6097	5766790	4	True				
ANR	5766849	IdentifierDecl	fdm		5766790	0					
ANR	5766850	IdentifierDeclType	int		5766790	0					
ANR	5766851	Identifier	fdm		5766790	1					
ANR	5766852	IdentifierDecl	"pid = forkpty ( & fdm , NULL , NULL , NULL )"		5766790	1					
ANR	5766853	IdentifierDeclType	int		5766790	0					
ANR	5766854	Identifier	pid		5766790	1					
ANR	5766855	AssignmentExpression	"pid = forkpty ( & fdm , NULL , NULL , NULL )"		5766790	2		=			
ANR	5766856	Identifier	pid		5766790	0					
ANR	5766857	CallExpression	"forkpty ( & fdm , NULL , NULL , NULL )"		5766790	1					
ANR	5766858	Callee	forkpty		5766790	0					
ANR	5766859	Identifier	forkpty		5766790	0					
ANR	5766860	ArgumentList	& fdm		5766790	1					
ANR	5766861	Argument	& fdm		5766790	0					
ANR	5766862	UnaryOperationExpression	& fdm		5766790	0					
ANR	5766863	UnaryOperator	&		5766790	0					
ANR	5766864	Identifier	fdm		5766790	1					
ANR	5766865	Argument	NULL		5766790	1					
ANR	5766866	Identifier	NULL		5766790	0					
ANR	5766867	Argument	NULL		5766790	2					
ANR	5766868	Identifier	NULL		5766790	0					
ANR	5766869	Argument	NULL		5766790	3					
ANR	5766870	Identifier	NULL		5766790	0					
ANR	5766871	IfStatement	if ( pid == - 1 )		5766790	5					
ANR	5766872	Condition	pid == - 1	286:5:6104:6112	5766790	0	True				
ANR	5766873	EqualityExpression	pid == - 1		5766790	0		==			
ANR	5766874	Identifier	pid		5766790	0					
ANR	5766875	UnaryOperationExpression	- 1		5766790	1					
ANR	5766876	UnaryOperator	-		5766790	0					
ANR	5766877	PrimaryExpression	1		5766790	1					
ANR	5766878	CompoundStatement		15:16:365:365	5766790	1					
ANR	5766879	ExpressionStatement	close ( saved_stdin )	287:2:6119:6138	5766790	0	True				
ANR	5766880	CallExpression	close ( saved_stdin )		5766790	0					
ANR	5766881	Callee	close		5766790	0					
ANR	5766882	Identifier	close		5766790	0					
ANR	5766883	ArgumentList	saved_stdin		5766790	1					
ANR	5766884	Argument	saved_stdin		5766790	0					
ANR	5766885	Identifier	saved_stdin		5766790	0					
ANR	5766886	ExpressionStatement	close ( saved_stdout )	288:2:6142:6162	5766790	1	True				
ANR	5766887	CallExpression	close ( saved_stdout )		5766790	0					
ANR	5766888	Callee	close		5766790	0					
ANR	5766889	Identifier	close		5766790	0					
ANR	5766890	ArgumentList	saved_stdout		5766790	1					
ANR	5766891	Argument	saved_stdout		5766790	0					
ANR	5766892	Identifier	saved_stdout		5766790	0					
ANR	5766893	ReturnStatement	return - 1 ;	289:2:6166:6175	5766790	2	True				
ANR	5766894	UnaryOperationExpression	- 1		5766790	0					
ANR	5766895	UnaryOperator	-		5766790	0					
ANR	5766896	PrimaryExpression	1		5766790	1					
ANR	5766897	IdentifierDeclStatement	const char * tn = ttyname ( fdm ) ;	291:1:6181:6211	5766790	6	True				
ANR	5766898	IdentifierDecl	* tn = ttyname ( fdm )		5766790	0					
ANR	5766899	IdentifierDeclType	const char *		5766790	0					
ANR	5766900	Identifier	tn		5766790	1					
ANR	5766901	AssignmentExpression	* tn = ttyname ( fdm )		5766790	2		=			
ANR	5766902	Identifier	tn		5766790	0					
ANR	5766903	CallExpression	ttyname ( fdm )		5766790	1					
ANR	5766904	Callee	ttyname		5766790	0					
ANR	5766905	Identifier	ttyname		5766790	0					
ANR	5766906	ArgumentList	fdm		5766790	1					
ANR	5766907	Argument	fdm		5766790	0					
ANR	5766908	Identifier	fdm		5766790	0					
ANR	5766909	IfStatement	if ( ! tn )		5766790	7					
ANR	5766910	Condition	! tn	292:5:6218:6220	5766790	0	True				
ANR	5766911	UnaryOperationExpression	! tn		5766790	0					
ANR	5766912	UnaryOperator	!		5766790	0					
ANR	5766913	Identifier	tn		5766790	1					
ANR	5766914	CompoundStatement		21:10:473:473	5766790	1					
ANR	5766915	ExpressionStatement	close ( saved_stdin )	293:2:6227:6246	5766790	0	True				
ANR	5766916	CallExpression	close ( saved_stdin )		5766790	0					
ANR	5766917	Callee	close		5766790	0					
ANR	5766918	Identifier	close		5766790	0					
ANR	5766919	ArgumentList	saved_stdin		5766790	1					
ANR	5766920	Argument	saved_stdin		5766790	0					
ANR	5766921	Identifier	saved_stdin		5766790	0					
ANR	5766922	ExpressionStatement	close ( saved_stdout )	294:2:6250:6270	5766790	1	True				
ANR	5766923	CallExpression	close ( saved_stdout )		5766790	0					
ANR	5766924	Callee	close		5766790	0					
ANR	5766925	Identifier	close		5766790	0					
ANR	5766926	ArgumentList	saved_stdout		5766790	1					
ANR	5766927	Argument	saved_stdout		5766790	0					
ANR	5766928	Identifier	saved_stdout		5766790	0					
ANR	5766929	ReturnStatement	return - 1 ;	295:2:6274:6283	5766790	2	True				
ANR	5766930	UnaryOperationExpression	- 1		5766790	0					
ANR	5766931	UnaryOperator	-		5766790	0					
ANR	5766932	PrimaryExpression	1		5766790	1					
ANR	5766933	IdentifierDeclStatement	"int fds = open ( tn , O_RDWR ) ;"	297:1:6289:6316	5766790	8	True				
ANR	5766934	IdentifierDecl	"fds = open ( tn , O_RDWR )"		5766790	0					
ANR	5766935	IdentifierDeclType	int		5766790	0					
ANR	5766936	Identifier	fds		5766790	1					
ANR	5766937	AssignmentExpression	"fds = open ( tn , O_RDWR )"		5766790	2		=			
ANR	5766938	Identifier	fds		5766790	0					
ANR	5766939	CallExpression	"open ( tn , O_RDWR )"		5766790	1					
ANR	5766940	Callee	open		5766790	0					
ANR	5766941	Identifier	open		5766790	0					
ANR	5766942	ArgumentList	tn		5766790	1					
ANR	5766943	Argument	tn		5766790	0					
ANR	5766944	Identifier	tn		5766790	0					
ANR	5766945	Argument	O_RDWR		5766790	1					
ANR	5766946	Identifier	O_RDWR		5766790	0					
ANR	5766947	IfStatement	if ( fds == - 1 )		5766790	9					
ANR	5766948	Condition	fds == - 1	298:5:6323:6331	5766790	0	True				
ANR	5766949	EqualityExpression	fds == - 1		5766790	0		==			
ANR	5766950	Identifier	fds		5766790	0					
ANR	5766951	UnaryOperationExpression	- 1		5766790	1					
ANR	5766952	UnaryOperator	-		5766790	0					
ANR	5766953	PrimaryExpression	1		5766790	1					
ANR	5766954	CompoundStatement		27:16:584:584	5766790	1					
ANR	5766955	ExpressionStatement	close ( saved_stdin )	299:2:6338:6357	5766790	0	True				
ANR	5766956	CallExpression	close ( saved_stdin )		5766790	0					
ANR	5766957	Callee	close		5766790	0					
ANR	5766958	Identifier	close		5766790	0					
ANR	5766959	ArgumentList	saved_stdin		5766790	1					
ANR	5766960	Argument	saved_stdin		5766790	0					
ANR	5766961	Identifier	saved_stdin		5766790	0					
ANR	5766962	ExpressionStatement	close ( saved_stdout )	300:2:6361:6381	5766790	1	True				
ANR	5766963	CallExpression	close ( saved_stdout )		5766790	0					
ANR	5766964	Callee	close		5766790	0					
ANR	5766965	Identifier	close		5766790	0					
ANR	5766966	ArgumentList	saved_stdout		5766790	1					
ANR	5766967	Argument	saved_stdout		5766790	0					
ANR	5766968	Identifier	saved_stdout		5766790	0					
ANR	5766969	ReturnStatement	return - 1 ;	301:2:6385:6394	5766790	2	True				
ANR	5766970	UnaryOperationExpression	- 1		5766790	0					
ANR	5766971	UnaryOperator	-		5766790	0					
ANR	5766972	PrimaryExpression	1		5766790	1					
ANR	5766973	IfStatement	if ( pid == 0 )		5766790	10					
ANR	5766974	Condition	pid == 0	303:5:6404:6411	5766790	0	True				
ANR	5766975	EqualityExpression	pid == 0		5766790	0		==			
ANR	5766976	Identifier	pid		5766790	0					
ANR	5766977	PrimaryExpression	0		5766790	1					
ANR	5766978	CompoundStatement		50:2:1001:1027	5766790	1					
ANR	5766979	ExpressionStatement	close ( fdm )	304:2:6418:6429	5766790	0	True				
ANR	5766980	CallExpression	close ( fdm )		5766790	0					
ANR	5766981	Callee	close		5766790	0					
ANR	5766982	Identifier	close		5766790	0					
ANR	5766983	ArgumentList	fdm		5766790	1					
ANR	5766984	Argument	fdm		5766790	0					
ANR	5766985	Identifier	fdm		5766790	0					
ANR	5766986	IfStatement	if ( in )		5766790	1					
ANR	5766987	Condition	in	306:6:6456:6457	5766790	0	True				
ANR	5766988	Identifier	in		5766790	0					
ANR	5766989	CompoundStatement		35:10:710:710	5766790	1					
ANR	5766990	ExpressionStatement	"dup2 ( fds , STDIN_FILENO )"	307:3:6465:6489	5766790	0	True				
ANR	5766991	CallExpression	"dup2 ( fds , STDIN_FILENO )"		5766790	0					
ANR	5766992	Callee	dup2		5766790	0					
ANR	5766993	Identifier	dup2		5766790	0					
ANR	5766994	ArgumentList	fds		5766790	1					
ANR	5766995	Argument	fds		5766790	0					
ANR	5766996	Identifier	fds		5766790	0					
ANR	5766997	Argument	STDIN_FILENO		5766790	1					
ANR	5766998	Identifier	STDIN_FILENO		5766790	0					
ANR	5766999	IfStatement	if ( out )		5766790	2					
ANR	5767000	Condition	out	309:6:6501:6503	5766790	0	True				
ANR	5767001	Identifier	out		5766790	0					
ANR	5767002	CompoundStatement		38:11:756:756	5766790	1					
ANR	5767003	ExpressionStatement	"dup2 ( fds , STDOUT_FILENO )"	310:3:6511:6536	5766790	0	True				
ANR	5767004	CallExpression	"dup2 ( fds , STDOUT_FILENO )"		5766790	0					
ANR	5767005	Callee	dup2		5766790	0					
ANR	5767006	Identifier	dup2		5766790	0					
ANR	5767007	ArgumentList	fds		5766790	1					
ANR	5767008	Argument	fds		5766790	0					
ANR	5767009	Identifier	fds		5766790	0					
ANR	5767010	Argument	STDOUT_FILENO		5766790	1					
ANR	5767011	Identifier	STDOUT_FILENO		5766790	0					
ANR	5767012	IdentifierDeclStatement	struct termios t ;	316:2:6657:6673	5766790	3	True				
ANR	5767013	IdentifierDecl	t		5766790	0					
ANR	5767014	IdentifierDeclType	struct termios		5766790	0					
ANR	5767015	Identifier	t		5766790	1					
ANR	5767016	ExpressionStatement	"tcgetattr ( fds , & t )"	317:2:6677:6696	5766790	4	True				
ANR	5767017	CallExpression	"tcgetattr ( fds , & t )"		5766790	0					
ANR	5767018	Callee	tcgetattr		5766790	0					
ANR	5767019	Identifier	tcgetattr		5766790	0					
ANR	5767020	ArgumentList	fds		5766790	1					
ANR	5767021	Argument	fds		5766790	0					
ANR	5767022	Identifier	fds		5766790	0					
ANR	5767023	Argument	& t		5766790	1					
ANR	5767024	UnaryOperationExpression	& t		5766790	0					
ANR	5767025	UnaryOperator	&		5766790	0					
ANR	5767026	Identifier	t		5766790	1					
ANR	5767027	ExpressionStatement	cfmakeraw ( & t )	318:2:6700:6714	5766790	5	True				
ANR	5767028	CallExpression	cfmakeraw ( & t )		5766790	0					
ANR	5767029	Callee	cfmakeraw		5766790	0					
ANR	5767030	Identifier	cfmakeraw		5766790	0					
ANR	5767031	ArgumentList	& t		5766790	1					
ANR	5767032	Argument	& t		5766790	0					
ANR	5767033	UnaryOperationExpression	& t		5766790	0					
ANR	5767034	UnaryOperator	&		5766790	0					
ANR	5767035	Identifier	t		5766790	1					
ANR	5767036	ExpressionStatement	"tcsetattr ( fds , TCSANOW , & t )"	319:2:6718:6746	5766790	6	True				
ANR	5767037	CallExpression	"tcsetattr ( fds , TCSANOW , & t )"		5766790	0					
ANR	5767038	Callee	tcsetattr		5766790	0					
ANR	5767039	Identifier	tcsetattr		5766790	0					
ANR	5767040	ArgumentList	fds		5766790	1					
ANR	5767041	Argument	fds		5766790	0					
ANR	5767042	Identifier	fds		5766790	0					
ANR	5767043	Argument	TCSANOW		5766790	1					
ANR	5767044	Identifier	TCSANOW		5766790	0					
ANR	5767045	Argument	& t		5766790	2					
ANR	5767046	UnaryOperationExpression	& t		5766790	0					
ANR	5767047	UnaryOperator	&		5766790	0					
ANR	5767048	Identifier	t		5766790	1					
ANR	5767049	IdentifierDeclStatement	int code = r_sys_cmd ( cmd ) ;	321:2:6751:6777	5766790	7	True				
ANR	5767050	IdentifierDecl	code = r_sys_cmd ( cmd )		5766790	0					
ANR	5767051	IdentifierDeclType	int		5766790	0					
ANR	5767052	Identifier	code		5766790	1					
ANR	5767053	AssignmentExpression	code = r_sys_cmd ( cmd )		5766790	2		=			
ANR	5767054	Identifier	code		5766790	0					
ANR	5767055	CallExpression	r_sys_cmd ( cmd )		5766790	1					
ANR	5767056	Callee	r_sys_cmd		5766790	0					
ANR	5767057	Identifier	r_sys_cmd		5766790	0					
ANR	5767058	ArgumentList	cmd		5766790	1					
ANR	5767059	Argument	cmd		5766790	0					
ANR	5767060	Identifier	cmd		5766790	0					
ANR	5767061	ExpressionStatement	"restore_saved_fd ( saved_stdin , in , STDIN_FILENO )"	322:2:6781:6829	5766790	8	True				
ANR	5767062	CallExpression	"restore_saved_fd ( saved_stdin , in , STDIN_FILENO )"		5766790	0					
ANR	5767063	Callee	restore_saved_fd		5766790	0					
ANR	5767064	Identifier	restore_saved_fd		5766790	0					
ANR	5767065	ArgumentList	saved_stdin		5766790	1					
ANR	5767066	Argument	saved_stdin		5766790	0					
ANR	5767067	Identifier	saved_stdin		5766790	0					
ANR	5767068	Argument	in		5766790	1					
ANR	5767069	Identifier	in		5766790	0					
ANR	5767070	Argument	STDIN_FILENO		5766790	2					
ANR	5767071	Identifier	STDIN_FILENO		5766790	0					
ANR	5767072	ExpressionStatement	"restore_saved_fd ( saved_stdout , out , STDOUT_FILENO )"	323:2:6833:6884	5766790	9	True				
ANR	5767073	CallExpression	"restore_saved_fd ( saved_stdout , out , STDOUT_FILENO )"		5766790	0					
ANR	5767074	Callee	restore_saved_fd		5766790	0					
ANR	5767075	Identifier	restore_saved_fd		5766790	0					
ANR	5767076	ArgumentList	saved_stdout		5766790	1					
ANR	5767077	Argument	saved_stdout		5766790	0					
ANR	5767078	Identifier	saved_stdout		5766790	0					
ANR	5767079	Argument	out		5766790	1					
ANR	5767080	Identifier	out		5766790	0					
ANR	5767081	Argument	STDOUT_FILENO		5766790	2					
ANR	5767082	Identifier	STDOUT_FILENO		5766790	0					
ANR	5767083	ExpressionStatement	exit ( code )	324:2:6888:6899	5766790	10	True				
ANR	5767084	CallExpression	exit ( code )		5766790	0					
ANR	5767085	Callee	exit		5766790	0					
ANR	5767086	Identifier	exit		5766790	0					
ANR	5767087	ArgumentList	code		5766790	1					
ANR	5767088	Argument	code		5766790	0					
ANR	5767089	Identifier	code		5766790	0					
ANR	5767090	ElseStatement	else		5766790	0					
ANR	5767091	CompoundStatement		63:2:1290:1300	5766790	0					
ANR	5767092	ExpressionStatement	close ( fds )	326:2:6913:6924	5766790	0	True				
ANR	5767093	CallExpression	close ( fds )		5766790	0					
ANR	5767094	Callee	close		5766790	0					
ANR	5767095	Identifier	close		5766790	0					
ANR	5767096	ArgumentList	fds		5766790	1					
ANR	5767097	Argument	fds		5766790	0					
ANR	5767098	Identifier	fds		5766790	0					
ANR	5767099	IfStatement	if ( in )		5766790	1					
ANR	5767100	Condition	in	327:6:6932:6933	5766790	0	True				
ANR	5767101	Identifier	in		5766790	0					
ANR	5767102	CompoundStatement		56:10:1186:1186	5766790	1					
ANR	5767103	ExpressionStatement	"dup2 ( fdm , STDIN_FILENO )"	328:3:6941:6965	5766790	0	True				
ANR	5767104	CallExpression	"dup2 ( fdm , STDIN_FILENO )"		5766790	0					
ANR	5767105	Callee	dup2		5766790	0					
ANR	5767106	Identifier	dup2		5766790	0					
ANR	5767107	ArgumentList	fdm		5766790	1					
ANR	5767108	Argument	fdm		5766790	0					
ANR	5767109	Identifier	fdm		5766790	0					
ANR	5767110	Argument	STDIN_FILENO		5766790	1					
ANR	5767111	Identifier	STDIN_FILENO		5766790	0					
ANR	5767112	IfStatement	if ( out )		5766790	2					
ANR	5767113	Condition	out	330:6:6977:6979	5766790	0	True				
ANR	5767114	Identifier	out		5766790	0					
ANR	5767115	CompoundStatement		59:11:1232:1232	5766790	1					
ANR	5767116	ExpressionStatement	"dup2 ( fdm , STDOUT_FILENO )"	331:3:6987:7012	5766790	0	True				
ANR	5767117	CallExpression	"dup2 ( fdm , STDOUT_FILENO )"		5766790	0					
ANR	5767118	Callee	dup2		5766790	0					
ANR	5767119	Identifier	dup2		5766790	0					
ANR	5767120	ArgumentList	fdm		5766790	1					
ANR	5767121	Argument	fdm		5766790	0					
ANR	5767122	Identifier	fdm		5766790	0					
ANR	5767123	Argument	STDOUT_FILENO		5766790	1					
ANR	5767124	Identifier	STDOUT_FILENO		5766790	0					
ANR	5767125	IdentifierDeclStatement	int status ;	334:2:7040:7050	5766790	3	True				
ANR	5767126	IdentifierDecl	status		5766790	0					
ANR	5767127	IdentifierDeclType	int		5766790	0					
ANR	5767128	Identifier	status		5766790	1					
ANR	5767129	ExpressionStatement	"waitpid ( pid , & status , 0 )"	335:2:7054:7079	5766790	4	True				
ANR	5767130	CallExpression	"waitpid ( pid , & status , 0 )"		5766790	0					
ANR	5767131	Callee	waitpid		5766790	0					
ANR	5767132	Identifier	waitpid		5766790	0					
ANR	5767133	ArgumentList	pid		5766790	1					
ANR	5767134	Argument	pid		5766790	0					
ANR	5767135	Identifier	pid		5766790	0					
ANR	5767136	Argument	& status		5766790	1					
ANR	5767137	UnaryOperationExpression	& status		5766790	0					
ANR	5767138	UnaryOperator	&		5766790	0					
ANR	5767139	Identifier	status		5766790	1					
ANR	5767140	Argument	0		5766790	2					
ANR	5767141	PrimaryExpression	0		5766790	0					
ANR	5767142	ExpressionStatement	close ( saved_stdin )	339:1:7097:7116	5766790	11	True				
ANR	5767143	CallExpression	close ( saved_stdin )		5766790	0					
ANR	5767144	Callee	close		5766790	0					
ANR	5767145	Identifier	close		5766790	0					
ANR	5767146	ArgumentList	saved_stdin		5766790	1					
ANR	5767147	Argument	saved_stdin		5766790	0					
ANR	5767148	Identifier	saved_stdin		5766790	0					
ANR	5767149	ExpressionStatement	close ( saved_stdout )	340:1:7119:7139	5766790	12	True				
ANR	5767150	CallExpression	close ( saved_stdout )		5766790	0					
ANR	5767151	Callee	close		5766790	0					
ANR	5767152	Identifier	close		5766790	0					
ANR	5767153	ArgumentList	saved_stdout		5766790	1					
ANR	5767154	Argument	saved_stdout		5766790	0					
ANR	5767155	Identifier	saved_stdout		5766790	0					
ANR	5767156	ReturnStatement	return 0 ;	341:1:7142:7150	5766790	13	True				
ANR	5767157	PrimaryExpression	0		5766790	0					
ANR	5767158	ReturnType	static int		5766790	1					
ANR	5767159	Identifier	handle_redirection_proc		5766790	2					
ANR	5767160	ParameterList	"const char * cmd , bool in , bool out , bool err"		5766790	3					
ANR	5767161	Parameter	const char * cmd	272:35:5703:5717	5766790	0	True				
ANR	5767162	ParameterType	const char *		5766790	0					
ANR	5767163	Identifier	cmd		5766790	1					
ANR	5767164	Parameter	bool in	272:52:5720:5726	5766790	1	True				
ANR	5767165	ParameterType	bool		5766790	0					
ANR	5767166	Identifier	in		5766790	1					
ANR	5767167	Parameter	bool out	272:61:5729:5736	5766790	2	True				
ANR	5767168	ParameterType	bool		5766790	0					
ANR	5767169	Identifier	out		5766790	1					
ANR	5767170	Parameter	bool err	272:71:5739:5746	5766790	3	True				
ANR	5767171	ParameterType	bool		5766790	0					
ANR	5767172	Identifier	err		5766790	1					
ANR	5767173	CFGEntryNode	ENTRY		5766790		True				
ANR	5767174	CFGExitNode	EXIT		5766790		True				
ANR	5767175	Symbol	saved_stdout		5766790						
ANR	5767176	Symbol	code		5766790						
ANR	5767177	Symbol	TCSANOW		5766790						
ANR	5767178	Symbol	pid		5766790						
ANR	5767179	Symbol	r_sys_cmd		5766790						
ANR	5767180	Symbol	out		5766790						
ANR	5767181	Symbol	& fdm		5766790						
ANR	5767182	Symbol	O_RDWR		5766790						
ANR	5767183	Symbol	saved_stdin		5766790						
ANR	5767184	Symbol	NULL		5766790						
ANR	5767185	Symbol	err		5766790						
ANR	5767186	Symbol	STDIN_FILENO		5766790						
ANR	5767187	Symbol	STDOUT_FILENO		5766790						
ANR	5767188	Symbol	in		5766790						
ANR	5767189	Symbol	ttyname		5766790						
ANR	5767190	Symbol	forkpty		5766790						
ANR	5767191	Symbol	& status		5766790						
ANR	5767192	Symbol	fdm		5766790						
ANR	5767193	Symbol	fds		5766790						
ANR	5767194	Symbol	t		5766790						
ANR	5767195	Symbol	tn		5766790						
ANR	5767196	Symbol	& t		5766790						
ANR	5767197	Symbol	cmd		5766790						
ANR	5767198	Symbol	dup		5766790						
ANR	5767199	Symbol	open		5766790						
ANR	5767200	Symbol	status		5766790						
ANR	5767201	Function	handle_redirection	352:0:7361:9008							
ANR	5767202	FunctionDef	"handle_redirection (const char * cmd , bool in , bool out , bool err)"		5767201	0					
ANR	5767203	CompoundStatement		352:76:7437:9008	5767201	0					
ANR	5767204	IfStatement	if ( ! cmd || cmd [ 0 ] == '\\0' )		5767201	0					
ANR	5767205	Condition	! cmd || cmd [ 0 ] == '\\0'	353:5:7444:7465	5767201	0	True				
ANR	5767206	OrExpression	! cmd || cmd [ 0 ] == '\\0'		5767201	0		||			
ANR	5767207	UnaryOperationExpression	! cmd		5767201	0					
ANR	5767208	UnaryOperator	!		5767201	0					
ANR	5767209	Identifier	cmd		5767201	1					
ANR	5767210	EqualityExpression	cmd [ 0 ] == '\\0'		5767201	1		==			
ANR	5767211	ArrayIndexing	cmd [ 0 ]		5767201	0					
ANR	5767212	Identifier	cmd		5767201	0					
ANR	5767213	PrimaryExpression	0		5767201	1					
ANR	5767214	PrimaryExpression	'\\0'		5767201	1					
ANR	5767215	CompoundStatement		2:29:30:30	5767201	1					
ANR	5767216	ReturnStatement	return 0 ;	354:2:7472:7480	5767201	0	True				
ANR	5767217	PrimaryExpression	0		5767201	0					
ANR	5767218	ReturnStatement	return 0 ;	360:1:7642:7650	5767201	1	True				
ANR	5767219	PrimaryExpression	0		5767201	0					
ANR	5767220	IfStatement	"if ( cmd [ 0 ] == '""' )"		5767201	2					
ANR	5767221	Condition	"cmd [ 0 ] == '""'"	362:5:7664:7676	5767201	0	True				
ANR	5767222	EqualityExpression	"cmd [ 0 ] == '""'"		5767201	0		==			
ANR	5767223	ArrayIndexing	cmd [ 0 ]		5767201	0					
ANR	5767224	Identifier	cmd		5767201	0					
ANR	5767225	PrimaryExpression	0		5767201	1					
ANR	5767226	PrimaryExpression	"'""'"		5767201	1					
ANR	5767227	CompoundStatement		11:20:241:241	5767201	1					
ANR	5767228	IfStatement	if ( in )		5767201	0					
ANR	5767229	Condition	in	364:6:7700:7701	5767201	0	True				
ANR	5767230	Identifier	in		5767201	0					
ANR	5767231	CompoundStatement		14:3:271:283	5767201	1					
ANR	5767232	IdentifierDeclStatement	int pipes [ 2 ] ;	365:3:7709:7721	5767201	0	True				
ANR	5767233	IdentifierDecl	pipes [ 2 ]		5767201	0					
ANR	5767234	IdentifierDeclType	int [ 2 ]		5767201	0					
ANR	5767235	Identifier	pipes		5767201	1					
ANR	5767236	PrimaryExpression	2		5767201	2					
ANR	5767237	IfStatement	if ( pipe ( pipes ) != - 1 )		5767201	1					
ANR	5767238	Condition	pipe ( pipes ) != - 1	366:7:7730:7747	5767201	0	True				
ANR	5767239	EqualityExpression	pipe ( pipes ) != - 1		5767201	0		!=			
ANR	5767240	CallExpression	pipe ( pipes )		5767201	0					
ANR	5767241	Callee	pipe		5767201	0					
ANR	5767242	Identifier	pipe		5767201	0					
ANR	5767243	ArgumentList	pipes		5767201	1					
ANR	5767244	Argument	pipes		5767201	0					
ANR	5767245	Identifier	pipes		5767201	0					
ANR	5767246	UnaryOperationExpression	- 1		5767201	1					
ANR	5767247	UnaryOperator	-		5767201	0					
ANR	5767248	PrimaryExpression	1		5767201	1					
ANR	5767249	CompoundStatement		16:4:318:346	5767201	1					
ANR	5767250	IdentifierDeclStatement	size_t cmdl = strlen ( cmd ) - 2 ;	367:4:7756:7784	5767201	0	True				
ANR	5767251	IdentifierDecl	cmdl = strlen ( cmd ) - 2		5767201	0					
ANR	5767252	IdentifierDeclType	size_t		5767201	0					
ANR	5767253	Identifier	cmdl		5767201	1					
ANR	5767254	AssignmentExpression	cmdl = strlen ( cmd ) - 2		5767201	2		=			
ANR	5767255	Identifier	cmdl		5767201	0					
ANR	5767256	AdditiveExpression	strlen ( cmd ) - 2		5767201	1		-			
ANR	5767257	CallExpression	strlen ( cmd )		5767201	0					
ANR	5767258	Callee	strlen		5767201	0					
ANR	5767259	Identifier	strlen		5767201	0					
ANR	5767260	ArgumentList	cmd		5767201	1					
ANR	5767261	Argument	cmd		5767201	0					
ANR	5767262	Identifier	cmd		5767201	0					
ANR	5767263	PrimaryExpression	2		5767201	1					
ANR	5767264	IfStatement	"if ( write ( pipes [ 1 ] , cmd + 1 , cmdl ) != cmdl )"		5767201	1					
ANR	5767265	Condition	"write ( pipes [ 1 ] , cmd + 1 , cmdl ) != cmdl"	368:8:7794:7832	5767201	0	True				
ANR	5767266	EqualityExpression	"write ( pipes [ 1 ] , cmd + 1 , cmdl ) != cmdl"		5767201	0		!=			
ANR	5767267	CallExpression	"write ( pipes [ 1 ] , cmd + 1 , cmdl )"		5767201	0					
ANR	5767268	Callee	write		5767201	0					
ANR	5767269	Identifier	write		5767201	0					
ANR	5767270	ArgumentList	pipes [ 1 ]		5767201	1					
ANR	5767271	Argument	pipes [ 1 ]		5767201	0					
ANR	5767272	ArrayIndexing	pipes [ 1 ]		5767201	0					
ANR	5767273	Identifier	pipes		5767201	0					
ANR	5767274	PrimaryExpression	1		5767201	1					
ANR	5767275	Argument	cmd + 1		5767201	1					
ANR	5767276	AdditiveExpression	cmd + 1		5767201	0		+			
ANR	5767277	Identifier	cmd		5767201	0					
ANR	5767278	PrimaryExpression	1		5767201	1					
ANR	5767279	Argument	cmdl		5767201	2					
ANR	5767280	Identifier	cmdl		5767201	0					
ANR	5767281	Identifier	cmdl		5767201	1					
ANR	5767282	CompoundStatement		17:49:397:397	5767201	1					
ANR	5767283	ExpressionStatement	"eprintf ( ""[ERROR] rarun2: Cannot write to the pipe\\n"" )"	369:5:7842:7896	5767201	0	True				
ANR	5767284	CallExpression	"eprintf ( ""[ERROR] rarun2: Cannot write to the pipe\\n"" )"		5767201	0					
ANR	5767285	Callee	eprintf		5767201	0					
ANR	5767286	Identifier	eprintf		5767201	0					
ANR	5767287	ArgumentList	"""[ERROR] rarun2: Cannot write to the pipe\\n"""		5767201	1					
ANR	5767288	Argument	"""[ERROR] rarun2: Cannot write to the pipe\\n"""		5767201	0					
ANR	5767289	PrimaryExpression	"""[ERROR] rarun2: Cannot write to the pipe\\n"""		5767201	0					
ANR	5767290	ExpressionStatement	close ( 0 )	370:5:7903:7912	5767201	1	True				
ANR	5767291	CallExpression	close ( 0 )		5767201	0					
ANR	5767292	Callee	close		5767201	0					
ANR	5767293	Identifier	close		5767201	0					
ANR	5767294	ArgumentList	0		5767201	1					
ANR	5767295	Argument	0		5767201	0					
ANR	5767296	PrimaryExpression	0		5767201	0					
ANR	5767297	ReturnStatement	return 1 ;	371:5:7919:7927	5767201	2	True				
ANR	5767298	PrimaryExpression	1		5767201	0					
ANR	5767299	IfStatement	"if ( write ( pipes [ 1 ] , ""\\n"" , 1 ) != 1 )"		5767201	2					
ANR	5767300	Condition	"write ( pipes [ 1 ] , ""\\n"" , 1 ) != 1"	373:8:7943:7972	5767201	0	True				
ANR	5767301	EqualityExpression	"write ( pipes [ 1 ] , ""\\n"" , 1 ) != 1"		5767201	0		!=			
ANR	5767302	CallExpression	"write ( pipes [ 1 ] , ""\\n"" , 1 )"		5767201	0					
ANR	5767303	Callee	write		5767201	0					
ANR	5767304	Identifier	write		5767201	0					
ANR	5767305	ArgumentList	pipes [ 1 ]		5767201	1					
ANR	5767306	Argument	pipes [ 1 ]		5767201	0					
ANR	5767307	ArrayIndexing	pipes [ 1 ]		5767201	0					
ANR	5767308	Identifier	pipes		5767201	0					
ANR	5767309	PrimaryExpression	1		5767201	1					
ANR	5767310	Argument	"""\\n"""		5767201	1					
ANR	5767311	PrimaryExpression	"""\\n"""		5767201	0					
ANR	5767312	Argument	1		5767201	2					
ANR	5767313	PrimaryExpression	1		5767201	0					
ANR	5767314	PrimaryExpression	1		5767201	1					
ANR	5767315	CompoundStatement		22:40:537:537	5767201	1					
ANR	5767316	ExpressionStatement	"eprintf ( ""[ERROR] rarun2: Cannot write to the pipe\\n"" )"	374:5:7982:8036	5767201	0	True				
ANR	5767317	CallExpression	"eprintf ( ""[ERROR] rarun2: Cannot write to the pipe\\n"" )"		5767201	0					
ANR	5767318	Callee	eprintf		5767201	0					
ANR	5767319	Identifier	eprintf		5767201	0					
ANR	5767320	ArgumentList	"""[ERROR] rarun2: Cannot write to the pipe\\n"""		5767201	1					
ANR	5767321	Argument	"""[ERROR] rarun2: Cannot write to the pipe\\n"""		5767201	0					
ANR	5767322	PrimaryExpression	"""[ERROR] rarun2: Cannot write to the pipe\\n"""		5767201	0					
ANR	5767323	ExpressionStatement	close ( 0 )	375:5:8043:8052	5767201	1	True				
ANR	5767324	CallExpression	close ( 0 )		5767201	0					
ANR	5767325	Callee	close		5767201	0					
ANR	5767326	Identifier	close		5767201	0					
ANR	5767327	ArgumentList	0		5767201	1					
ANR	5767328	Argument	0		5767201	0					
ANR	5767329	PrimaryExpression	0		5767201	0					
ANR	5767330	ReturnStatement	return 1 ;	376:5:8059:8067	5767201	2	True				
ANR	5767331	PrimaryExpression	1		5767201	0					
ANR	5767332	ExpressionStatement	close ( 0 )	378:4:8079:8088	5767201	3	True				
ANR	5767333	CallExpression	close ( 0 )		5767201	0					
ANR	5767334	Callee	close		5767201	0					
ANR	5767335	Identifier	close		5767201	0					
ANR	5767336	ArgumentList	0		5767201	1					
ANR	5767337	Argument	0		5767201	0					
ANR	5767338	PrimaryExpression	0		5767201	0					
ANR	5767339	ExpressionStatement	"dup2 ( pipes [ 0 ] , 0 )"	379:4:8094:8112	5767201	4	True				
ANR	5767340	CallExpression	"dup2 ( pipes [ 0 ] , 0 )"		5767201	0					
ANR	5767341	Callee	dup2		5767201	0					
ANR	5767342	Identifier	dup2		5767201	0					
ANR	5767343	ArgumentList	pipes [ 0 ]		5767201	1					
ANR	5767344	Argument	pipes [ 0 ]		5767201	0					
ANR	5767345	ArrayIndexing	pipes [ 0 ]		5767201	0					
ANR	5767346	Identifier	pipes		5767201	0					
ANR	5767347	PrimaryExpression	0		5767201	1					
ANR	5767348	Argument	0		5767201	1					
ANR	5767349	PrimaryExpression	0		5767201	0					
ANR	5767350	ElseStatement	else		5767201	0					
ANR	5767351	CompoundStatement		29:10:686:686	5767201	0					
ANR	5767352	ExpressionStatement	"eprintf ( ""[ERROR] rarun2: Cannot create pipe\\n"" )"	381:4:8130:8178	5767201	0	True				
ANR	5767353	CallExpression	"eprintf ( ""[ERROR] rarun2: Cannot create pipe\\n"" )"		5767201	0					
ANR	5767354	Callee	eprintf		5767201	0					
ANR	5767355	Identifier	eprintf		5767201	0					
ANR	5767356	ArgumentList	"""[ERROR] rarun2: Cannot create pipe\\n"""		5767201	1					
ANR	5767357	Argument	"""[ERROR] rarun2: Cannot create pipe\\n"""		5767201	0					
ANR	5767358	PrimaryExpression	"""[ERROR] rarun2: Cannot create pipe\\n"""		5767201	0					
ANR	5767359	ReturnStatement	return 0 ;	391:2:8347:8355	5767201	1	True				
ANR	5767360	PrimaryExpression	0		5767201	0					
ANR	5767361	ElseStatement	else		5767201	0					
ANR	5767362	IfStatement	if ( cmd [ 0 ] == '!' )		5767201	0					
ANR	5767363	Condition	cmd [ 0 ] == '!'	392:12:8369:8381	5767201	0	True				
ANR	5767364	EqualityExpression	cmd [ 0 ] == '!'		5767201	0		==			
ANR	5767365	ArrayIndexing	cmd [ 0 ]		5767201	0					
ANR	5767366	Identifier	cmd		5767201	0					
ANR	5767367	PrimaryExpression	0		5767201	1					
ANR	5767368	PrimaryExpression	'!'		5767201	1					
ANR	5767369	CompoundStatement		41:27:946:946	5767201	1					
ANR	5767370	ReturnStatement	"return handle_redirection_proc ( cmd + 1 , in , out , err ) ;"	394:2:8418:8472	5767201	0	True				
ANR	5767371	CallExpression	"handle_redirection_proc ( cmd + 1 , in , out , err )"		5767201	0					
ANR	5767372	Callee	handle_redirection_proc		5767201	0					
ANR	5767373	Identifier	handle_redirection_proc		5767201	0					
ANR	5767374	ArgumentList	cmd + 1		5767201	1					
ANR	5767375	Argument	cmd + 1		5767201	0					
ANR	5767376	AdditiveExpression	cmd + 1		5767201	0		+			
ANR	5767377	Identifier	cmd		5767201	0					
ANR	5767378	PrimaryExpression	1		5767201	1					
ANR	5767379	Argument	in		5767201	1					
ANR	5767380	Identifier	in		5767201	0					
ANR	5767381	Argument	out		5767201	2					
ANR	5767382	Identifier	out		5767201	0					
ANR	5767383	Argument	err		5767201	3					
ANR	5767384	Identifier	err		5767201	0					
ANR	5767385	ElseStatement	else		5767201	0					
ANR	5767386	CompoundStatement		46:2:1075:1100	5767201	0					
ANR	5767387	IdentifierDeclStatement	"int f , flag = 0 , mode = 0 ;"	397:2:8513:8538	5767201	0	True				
ANR	5767388	IdentifierDecl	f		5767201	0					
ANR	5767389	IdentifierDeclType	int		5767201	0					
ANR	5767390	Identifier	f		5767201	1					
ANR	5767391	IdentifierDecl	flag = 0		5767201	1					
ANR	5767392	IdentifierDeclType	int		5767201	0					
ANR	5767393	Identifier	flag		5767201	1					
ANR	5767394	AssignmentExpression	flag = 0		5767201	2		=			
ANR	5767395	Identifier	flag		5767201	0					
ANR	5767396	PrimaryExpression	0		5767201	1					
ANR	5767397	IdentifierDecl	mode = 0		5767201	2					
ANR	5767398	IdentifierDeclType	int		5767201	0					
ANR	5767399	Identifier	mode		5767201	1					
ANR	5767400	AssignmentExpression	mode = 0		5767201	2		=			
ANR	5767401	Identifier	mode		5767201	0					
ANR	5767402	PrimaryExpression	0		5767201	1					
ANR	5767403	ExpressionStatement	flag |= in ? O_RDONLY : 0	398:2:8542:8567	5767201	1	True				
ANR	5767404	AssignmentExpression	flag |= in ? O_RDONLY : 0		5767201	0		|=			
ANR	5767405	Identifier	flag		5767201	0					
ANR	5767406	ConditionalExpression	in ? O_RDONLY : 0		5767201	1					
ANR	5767407	Condition	in		5767201	0					
ANR	5767408	Identifier	in		5767201	0					
ANR	5767409	Identifier	O_RDONLY		5767201	1					
ANR	5767410	PrimaryExpression	0		5767201	2					
ANR	5767411	ExpressionStatement	flag |= out ? O_WRONLY | O_CREAT : 0	399:2:8571:8607	5767201	2	True				
ANR	5767412	AssignmentExpression	flag |= out ? O_WRONLY | O_CREAT : 0		5767201	0		|=			
ANR	5767413	Identifier	flag		5767201	0					
ANR	5767414	ConditionalExpression	out ? O_WRONLY | O_CREAT : 0		5767201	1					
ANR	5767415	Condition	out		5767201	0					
ANR	5767416	Identifier	out		5767201	0					
ANR	5767417	InclusiveOrExpression	O_WRONLY | O_CREAT		5767201	1		|			
ANR	5767418	Identifier	O_WRONLY		5767201	0					
ANR	5767419	Identifier	O_CREAT		5767201	1					
ANR	5767420	PrimaryExpression	0		5767201	2					
ANR	5767421	ExpressionStatement	flag |= err ? O_WRONLY | O_CREAT : 0	400:2:8611:8647	5767201	3	True				
ANR	5767422	AssignmentExpression	flag |= err ? O_WRONLY | O_CREAT : 0		5767201	0		|=			
ANR	5767423	Identifier	flag		5767201	0					
ANR	5767424	ConditionalExpression	err ? O_WRONLY | O_CREAT : 0		5767201	1					
ANR	5767425	Condition	err		5767201	0					
ANR	5767426	Identifier	err		5767201	0					
ANR	5767427	InclusiveOrExpression	O_WRONLY | O_CREAT		5767201	1		|			
ANR	5767428	Identifier	O_WRONLY		5767201	0					
ANR	5767429	Identifier	O_CREAT		5767201	1					
ANR	5767430	PrimaryExpression	0		5767201	2					
ANR	5767431	ExpressionStatement	mode = _S_IREAD | _S_IWRITE	402:2:8670:8697	5767201	4	True				
ANR	5767432	AssignmentExpression	mode = _S_IREAD | _S_IWRITE		5767201	0		=			
ANR	5767433	Identifier	mode		5767201	0					
ANR	5767434	InclusiveOrExpression	_S_IREAD | _S_IWRITE		5767201	1		|			
ANR	5767435	Identifier	_S_IREAD		5767201	0					
ANR	5767436	Identifier	_S_IWRITE		5767201	1					
ANR	5767437	ExpressionStatement	"f = open ( cmd , flag , mode )"	406:2:8742:8768	5767201	5	True				
ANR	5767438	AssignmentExpression	"f = open ( cmd , flag , mode )"		5767201	0		=			
ANR	5767439	Identifier	f		5767201	0					
ANR	5767440	CallExpression	"open ( cmd , flag , mode )"		5767201	1					
ANR	5767441	Callee	open		5767201	0					
ANR	5767442	Identifier	open		5767201	0					
ANR	5767443	ArgumentList	cmd		5767201	1					
ANR	5767444	Argument	cmd		5767201	0					
ANR	5767445	Identifier	cmd		5767201	0					
ANR	5767446	Argument	flag		5767201	1					
ANR	5767447	Identifier	flag		5767201	0					
ANR	5767448	Argument	mode		5767201	2					
ANR	5767449	Identifier	mode		5767201	0					
ANR	5767450	IfStatement	if ( f < 0 )		5767201	6					
ANR	5767451	Condition	f < 0	407:6:8776:8780	5767201	0	True				
ANR	5767452	RelationalExpression	f < 0		5767201	0		<			
ANR	5767453	Identifier	f		5767201	0					
ANR	5767454	PrimaryExpression	0		5767201	1					
ANR	5767455	CompoundStatement		56:13:1345:1345	5767201	1					
ANR	5767456	ExpressionStatement	"eprintf ( ""[ERROR] rarun2: Cannot open: %s\\n"" , cmd )"	408:3:8788:8838	5767201	0	True				
ANR	5767457	CallExpression	"eprintf ( ""[ERROR] rarun2: Cannot open: %s\\n"" , cmd )"		5767201	0					
ANR	5767458	Callee	eprintf		5767201	0					
ANR	5767459	Identifier	eprintf		5767201	0					
ANR	5767460	ArgumentList	"""[ERROR] rarun2: Cannot open: %s\\n"""		5767201	1					
ANR	5767461	Argument	"""[ERROR] rarun2: Cannot open: %s\\n"""		5767201	0					
ANR	5767462	PrimaryExpression	"""[ERROR] rarun2: Cannot open: %s\\n"""		5767201	0					
ANR	5767463	Argument	cmd		5767201	1					
ANR	5767464	Identifier	cmd		5767201	0					
ANR	5767465	ReturnStatement	return 1 ;	409:3:8843:8851	5767201	1	True				
ANR	5767466	PrimaryExpression	1		5767201	0					
ANR	5767467	Statement	define	411:1:8858:8863	5767201	7	True				
ANR	5767468	Statement	DUP	411:8:8865:8867	5767201	8	True				
ANR	5767469	Statement	(	411:11:8868:8868	5767201	9	True				
ANR	5767470	Statement	x	411:12:8869:8869	5767201	10	True				
ANR	5767471	Statement	)	411:13:8870:8870	5767201	11	True				
ANR	5767472	CompoundStatement		60:15:1434:1434	5767201	12					
ANR	5767473	ExpressionStatement	close ( x )	411:17:8874:8882	5767201	0	True				
ANR	5767474	CallExpression	close ( x )		5767201	0					
ANR	5767475	Callee	close		5767201	0					
ANR	5767476	Identifier	close		5767201	0					
ANR	5767477	ArgumentList	x		5767201	1					
ANR	5767478	Argument	x		5767201	0					
ANR	5767479	Identifier	x		5767201	0					
ANR	5767480	ExpressionStatement	"dup2 ( f , x )"	411:27:8884:8893	5767201	1	True				
ANR	5767481	CallExpression	"dup2 ( f , x )"		5767201	0					
ANR	5767482	Callee	dup2		5767201	0					
ANR	5767483	Identifier	dup2		5767201	0					
ANR	5767484	ArgumentList	f		5767201	1					
ANR	5767485	Argument	f		5767201	0					
ANR	5767486	Identifier	f		5767201	0					
ANR	5767487	Argument	x		5767201	1					
ANR	5767488	Identifier	x		5767201	0					
ANR	5767489	IfStatement	if ( in )		5767201	13					
ANR	5767490	Condition	in	412:6:8903:8904	5767201	0	True				
ANR	5767491	Identifier	in		5767201	0					
ANR	5767492	CompoundStatement		61:10:1469:1469	5767201	1					
ANR	5767493	ExpressionStatement	DUP ( 0 )	413:3:8912:8918	5767201	0	True				
ANR	5767494	CallExpression	DUP ( 0 )		5767201	0					
ANR	5767495	Callee	DUP		5767201	0					
ANR	5767496	Identifier	DUP		5767201	0					
ANR	5767497	ArgumentList	0		5767201	1					
ANR	5767498	Argument	0		5767201	0					
ANR	5767499	PrimaryExpression	0		5767201	0					
ANR	5767500	IfStatement	if ( out )		5767201	14					
ANR	5767501	Condition	out	415:6:8930:8932	5767201	0	True				
ANR	5767502	Identifier	out		5767201	0					
ANR	5767503	CompoundStatement		64:11:1497:1497	5767201	1					
ANR	5767504	ExpressionStatement	DUP ( 1 )	416:3:8940:8946	5767201	0	True				
ANR	5767505	CallExpression	DUP ( 1 )		5767201	0					
ANR	5767506	Callee	DUP		5767201	0					
ANR	5767507	Identifier	DUP		5767201	0					
ANR	5767508	ArgumentList	1		5767201	1					
ANR	5767509	Argument	1		5767201	0					
ANR	5767510	PrimaryExpression	1		5767201	0					
ANR	5767511	IfStatement	if ( err )		5767201	15					
ANR	5767512	Condition	err	418:6:8958:8960	5767201	0	True				
ANR	5767513	Identifier	err		5767201	0					
ANR	5767514	CompoundStatement		67:11:1525:1525	5767201	1					
ANR	5767515	ExpressionStatement	DUP ( 2 )	419:3:8968:8974	5767201	0	True				
ANR	5767516	CallExpression	DUP ( 2 )		5767201	0					
ANR	5767517	Callee	DUP		5767201	0					
ANR	5767518	Identifier	DUP		5767201	0					
ANR	5767519	ArgumentList	2		5767201	1					
ANR	5767520	Argument	2		5767201	0					
ANR	5767521	PrimaryExpression	2		5767201	0					
ANR	5767522	ExpressionStatement	close ( f )	421:2:8982:8991	5767201	16	True				
ANR	5767523	CallExpression	close ( f )		5767201	0					
ANR	5767524	Callee	close		5767201	0					
ANR	5767525	Identifier	close		5767201	0					
ANR	5767526	ArgumentList	f		5767201	1					
ANR	5767527	Argument	f		5767201	0					
ANR	5767528	Identifier	f		5767201	0					
ANR	5767529	ReturnStatement	return 0 ;	422:2:8995:9003	5767201	17	True				
ANR	5767530	PrimaryExpression	0		5767201	0					
ANR	5767531	ReturnType	static int		5767201	1					
ANR	5767532	Identifier	handle_redirection		5767201	2					
ANR	5767533	ParameterList	"const char * cmd , bool in , bool out , bool err"		5767201	3					
ANR	5767534	Parameter	const char * cmd	352:30:7391:7405	5767201	0	True				
ANR	5767535	ParameterType	const char *		5767201	0					
ANR	5767536	Identifier	cmd		5767201	1					
ANR	5767537	Parameter	bool in	352:47:7408:7414	5767201	1	True				
ANR	5767538	ParameterType	bool		5767201	0					
ANR	5767539	Identifier	in		5767201	1					
ANR	5767540	Parameter	bool out	352:56:7417:7424	5767201	2	True				
ANR	5767541	ParameterType	bool		5767201	0					
ANR	5767542	Identifier	out		5767201	1					
ANR	5767543	Parameter	bool err	352:66:7427:7434	5767201	3	True				
ANR	5767544	ParameterType	bool		5767201	0					
ANR	5767545	Identifier	err		5767201	1					
ANR	5767546	CFGEntryNode	ENTRY		5767201		True				
ANR	5767547	CFGExitNode	EXIT		5767201		True				
ANR	5767548	Symbol	flag		5767201						
ANR	5767549	Symbol	err		5767201						
ANR	5767550	Symbol	in		5767201						
ANR	5767551	Symbol	f		5767201						
ANR	5767552	Symbol	O_CREAT		5767201						
ANR	5767553	Symbol	_S_IREAD		5767201						
ANR	5767554	Symbol	out		5767201						
ANR	5767555	Symbol	mode		5767201						
ANR	5767556	Symbol	strlen		5767201						
ANR	5767557	Symbol	* pipes		5767201						
ANR	5767558	Symbol	O_RDONLY		5767201						
ANR	5767559	Symbol	handle_redirection_proc		5767201						
ANR	5767560	Symbol	x		5767201						
ANR	5767561	Symbol	_S_IWRITE		5767201						
ANR	5767562	Symbol	pipe		5767201						
ANR	5767563	Symbol	cmd		5767201						
ANR	5767564	Symbol	* cmd		5767201						
ANR	5767565	Symbol	cmdl		5767201						
ANR	5767566	Symbol	O_WRONLY		5767201						
ANR	5767567	Symbol	write		5767201						
ANR	5767568	Symbol	pipes		5767201						
ANR	5767569	Symbol	open		5767201						
ANR	5767570	Function	r_run_parsefile	426:0:9011:9187							
ANR	5767571	FunctionDef	"r_run_parsefile (RRunProfile * p , const char * b)"		5767570	0					
ANR	5767572	CompoundStatement		426:57:9068:9187	5767570	0					
ANR	5767573	IdentifierDeclStatement	"char * s = r_file_slurp ( b , NULL ) ;"	427:1:9071:9103	5767570	0	True				
ANR	5767574	IdentifierDecl	"* s = r_file_slurp ( b , NULL )"		5767570	0					
ANR	5767575	IdentifierDeclType	char *		5767570	0					
ANR	5767576	Identifier	s		5767570	1					
ANR	5767577	AssignmentExpression	"* s = r_file_slurp ( b , NULL )"		5767570	2		=			
ANR	5767578	Identifier	s		5767570	0					
ANR	5767579	CallExpression	"r_file_slurp ( b , NULL )"		5767570	1					
ANR	5767580	Callee	r_file_slurp		5767570	0					
ANR	5767581	Identifier	r_file_slurp		5767570	0					
ANR	5767582	ArgumentList	b		5767570	1					
ANR	5767583	Argument	b		5767570	0					
ANR	5767584	Identifier	b		5767570	0					
ANR	5767585	Argument	NULL		5767570	1					
ANR	5767586	Identifier	NULL		5767570	0					
ANR	5767587	IfStatement	if ( s )		5767570	1					
ANR	5767588	Condition	s	428:5:9110:9110	5767570	0	True				
ANR	5767589	Identifier	s		5767570	0					
ANR	5767590	CompoundStatement		4:2:48:76	5767570	1					
ANR	5767591	IdentifierDeclStatement	"int ret = r_run_parse ( p , s ) ;"	429:2:9117:9145	5767570	0	True				
ANR	5767592	IdentifierDecl	"ret = r_run_parse ( p , s )"		5767570	0					
ANR	5767593	IdentifierDeclType	int		5767570	0					
ANR	5767594	Identifier	ret		5767570	1					
ANR	5767595	AssignmentExpression	"ret = r_run_parse ( p , s )"		5767570	2		=			
ANR	5767596	Identifier	ret		5767570	0					
ANR	5767597	CallExpression	"r_run_parse ( p , s )"		5767570	1					
ANR	5767598	Callee	r_run_parse		5767570	0					
ANR	5767599	Identifier	r_run_parse		5767570	0					
ANR	5767600	ArgumentList	p		5767570	1					
ANR	5767601	Argument	p		5767570	0					
ANR	5767602	Identifier	p		5767570	0					
ANR	5767603	Argument	s		5767570	1					
ANR	5767604	Identifier	s		5767570	0					
ANR	5767605	ExpressionStatement	free ( s )	430:2:9149:9157	5767570	1	True				
ANR	5767606	CallExpression	free ( s )		5767570	0					
ANR	5767607	Callee	free		5767570	0					
ANR	5767608	Identifier	free		5767570	0					
ANR	5767609	ArgumentList	s		5767570	1					
ANR	5767610	Argument	s		5767570	0					
ANR	5767611	Identifier	s		5767570	0					
ANR	5767612	ReturnStatement	return ret ;	431:2:9161:9171	5767570	2	True				
ANR	5767613	Identifier	ret		5767570	0					
ANR	5767614	ReturnStatement	return 0 ;	433:1:9177:9185	5767570	2	True				
ANR	5767615	PrimaryExpression	0		5767570	0					
ANR	5767616	ReturnType	R_API int		5767570	1					
ANR	5767617	Identifier	r_run_parsefile		5767570	2					
ANR	5767618	ParameterList	"RRunProfile * p , const char * b"		5767570	3					
ANR	5767619	Parameter	RRunProfile * p	426:26:9037:9050	5767570	0	True				
ANR	5767620	ParameterType	RRunProfile *		5767570	0					
ANR	5767621	Identifier	p		5767570	1					
ANR	5767622	Parameter	const char * b	426:42:9053:9065	5767570	1	True				
ANR	5767623	ParameterType	const char *		5767570	0					
ANR	5767624	Identifier	b		5767570	1					
ANR	5767625	CFGEntryNode	ENTRY		5767570		True				
ANR	5767626	CFGExitNode	EXIT		5767570		True				
ANR	5767627	Symbol	p		5767570						
ANR	5767628	Symbol	ret		5767570						
ANR	5767629	Symbol	b		5767570						
ANR	5767630	Symbol	r_file_slurp		5767570						
ANR	5767631	Symbol	NULL		5767570						
ANR	5767632	Symbol	s		5767570						
ANR	5767633	Symbol	r_run_parse		5767570						
ANR	5767634	Function	r_run_parseline	436:0:9190:12988							
ANR	5767635	FunctionDef	"r_run_parseline (RRunProfile * p , char * b)"		5767634	0					
ANR	5767636	CompoundStatement		436:52:9242:12988	5767634	0					
ANR	5767637	IdentifierDeclStatement	int must_free = false ;	437:1:9245:9266	5767634	0	True				
ANR	5767638	IdentifierDecl	must_free = false		5767634	0					
ANR	5767639	IdentifierDeclType	int		5767634	0					
ANR	5767640	Identifier	must_free		5767634	1					
ANR	5767641	AssignmentExpression	must_free = false		5767634	2		=			
ANR	5767642	Identifier	false		5767634	0					
ANR	5767643	Identifier	false		5767634	1					
ANR	5767644	IdentifierDeclStatement	"char * e = strchr ( b , '=' ) ;"	438:1:9269:9294	5767634	1	True				
ANR	5767645	IdentifierDecl	"* e = strchr ( b , '=' )"		5767634	0					
ANR	5767646	IdentifierDeclType	char *		5767634	0					
ANR	5767647	Identifier	e		5767634	1					
ANR	5767648	AssignmentExpression	"* e = strchr ( b , '=' )"		5767634	2		=			
ANR	5767649	Identifier	e		5767634	0					
ANR	5767650	CallExpression	"strchr ( b , '=' )"		5767634	1					
ANR	5767651	Callee	strchr		5767634	0					
ANR	5767652	Identifier	strchr		5767634	0					
ANR	5767653	ArgumentList	b		5767634	1					
ANR	5767654	Argument	b		5767634	0					
ANR	5767655	Identifier	b		5767634	0					
ANR	5767656	Argument	'='		5767634	1					
ANR	5767657	PrimaryExpression	'='		5767634	0					
ANR	5767658	IfStatement	if ( ! e || * b == '#' )		5767634	2					
ANR	5767659	Condition	! e || * b == '#'	439:5:9301:9315	5767634	0	True				
ANR	5767660	OrExpression	! e || * b == '#'		5767634	0		||			
ANR	5767661	UnaryOperationExpression	! e		5767634	0					
ANR	5767662	UnaryOperator	!		5767634	0					
ANR	5767663	Identifier	e		5767634	1					
ANR	5767664	EqualityExpression	* b == '#'		5767634	1		==			
ANR	5767665	UnaryOperationExpression	* b		5767634	0					
ANR	5767666	UnaryOperator	*		5767634	0					
ANR	5767667	Identifier	b		5767634	1					
ANR	5767668	PrimaryExpression	'#'		5767634	1					
ANR	5767669	CompoundStatement		4:22:75:75	5767634	1					
ANR	5767670	ReturnStatement	return 0 ;	440:2:9322:9330	5767634	0	True				
ANR	5767671	PrimaryExpression	0		5767634	0					
ANR	5767672	ExpressionStatement	* e ++ = 0	442:1:9336:9344	5767634	3	True				
ANR	5767673	AssignmentExpression	* e ++ = 0		5767634	0		=			
ANR	5767674	UnaryOperationExpression	* e ++		5767634	0					
ANR	5767675	UnaryOperator	*		5767634	0					
ANR	5767676	PostIncDecOperationExpression	e ++		5767634	1					
ANR	5767677	Identifier	e		5767634	0					
ANR	5767678	IncDec	++		5767634	1					
ANR	5767679	PrimaryExpression	0		5767634	1					
ANR	5767680	IfStatement	if ( * e == '$' )		5767634	4					
ANR	5767681	Condition	* e == '$'	443:5:9351:9357	5767634	0	True				
ANR	5767682	EqualityExpression	* e == '$'		5767634	0		==			
ANR	5767683	UnaryOperationExpression	* e		5767634	0					
ANR	5767684	UnaryOperator	*		5767634	0					
ANR	5767685	Identifier	e		5767634	1					
ANR	5767686	PrimaryExpression	'$'		5767634	1					
ANR	5767687	CompoundStatement		8:14:117:117	5767634	1					
ANR	5767688	ExpressionStatement	must_free = true	444:2:9364:9380	5767634	0	True				
ANR	5767689	AssignmentExpression	must_free = true		5767634	0		=			
ANR	5767690	Identifier	must_free		5767634	0					
ANR	5767691	Identifier	true		5767634	1					
ANR	5767692	ExpressionStatement	e = r_sys_getenv ( e )	445:2:9384:9404	5767634	1	True				
ANR	5767693	AssignmentExpression	e = r_sys_getenv ( e )		5767634	0		=			
ANR	5767694	Identifier	e		5767634	0					
ANR	5767695	CallExpression	r_sys_getenv ( e )		5767634	1					
ANR	5767696	Callee	r_sys_getenv		5767634	0					
ANR	5767697	Identifier	r_sys_getenv		5767634	0					
ANR	5767698	ArgumentList	e		5767634	1					
ANR	5767699	Argument	e		5767634	0					
ANR	5767700	Identifier	e		5767634	0					
ANR	5767701	IfStatement	if ( ! e )		5767634	5					
ANR	5767702	Condition	! e	447:5:9414:9415	5767634	0	True				
ANR	5767703	UnaryOperationExpression	! e		5767634	0					
ANR	5767704	UnaryOperator	!		5767634	0					
ANR	5767705	Identifier	e		5767634	1					
ANR	5767706	CompoundStatement		12:9:175:175	5767634	1					
ANR	5767707	ReturnStatement	return 0 ;	448:2:9422:9430	5767634	0	True				
ANR	5767708	PrimaryExpression	0		5767634	0					
ANR	5767709	IfStatement	"if ( ! strcmp ( b , ""program"" ) )"		5767634	6					
ANR	5767710	Condition	"! strcmp ( b , ""program"" )"	450:5:9440:9461	5767634	0	True				
ANR	5767711	UnaryOperationExpression	"! strcmp ( b , ""program"" )"		5767634	0					
ANR	5767712	UnaryOperator	!		5767634	0					
ANR	5767713	CallExpression	"strcmp ( b , ""program"" )"		5767634	1					
ANR	5767714	Callee	strcmp		5767634	0					
ANR	5767715	Identifier	strcmp		5767634	0					
ANR	5767716	ArgumentList	b		5767634	1					
ANR	5767717	Argument	b		5767634	0					
ANR	5767718	Identifier	b		5767634	0					
ANR	5767719	Argument	"""program"""		5767634	1					
ANR	5767720	PrimaryExpression	"""program"""		5767634	0					
ANR	5767721	CompoundStatement		15:29:221:221	5767634	1					
ANR	5767722	ExpressionStatement	p -> _args [ 0 ] = p -> _program = strdup ( e )	451:2:9468:9506	5767634	0	True				
ANR	5767723	AssignmentExpression	p -> _args [ 0 ] = p -> _program = strdup ( e )		5767634	0		=			
ANR	5767724	ArrayIndexing	p -> _args [ 0 ]		5767634	0					
ANR	5767725	PtrMemberAccess	p -> _args		5767634	0					
ANR	5767726	Identifier	p		5767634	0					
ANR	5767727	Identifier	_args		5767634	1					
ANR	5767728	PrimaryExpression	0		5767634	1					
ANR	5767729	AssignmentExpression	p -> _program = strdup ( e )		5767634	1		=			
ANR	5767730	PtrMemberAccess	p -> _program		5767634	0					
ANR	5767731	Identifier	p		5767634	0					
ANR	5767732	Identifier	_program		5767634	1					
ANR	5767733	CallExpression	strdup ( e )		5767634	1					
ANR	5767734	Callee	strdup		5767634	0					
ANR	5767735	Identifier	strdup		5767634	0					
ANR	5767736	ArgumentList	e		5767634	1					
ANR	5767737	Argument	e		5767634	0					
ANR	5767738	Identifier	e		5767634	0					
ANR	5767739	ElseStatement	else		5767634	0					
ANR	5767740	IfStatement	"if ( ! strcmp ( b , ""system"" ) )"		5767634	0					
ANR	5767741	Condition	"! strcmp ( b , ""system"" )"	452:12:9520:9540	5767634	0	True				
ANR	5767742	UnaryOperationExpression	"! strcmp ( b , ""system"" )"		5767634	0					
ANR	5767743	UnaryOperator	!		5767634	0					
ANR	5767744	CallExpression	"strcmp ( b , ""system"" )"		5767634	1					
ANR	5767745	Callee	strcmp		5767634	0					
ANR	5767746	Identifier	strcmp		5767634	0					
ANR	5767747	ArgumentList	b		5767634	1					
ANR	5767748	Argument	b		5767634	0					
ANR	5767749	Identifier	b		5767634	0					
ANR	5767750	Argument	"""system"""		5767634	1					
ANR	5767751	PrimaryExpression	"""system"""		5767634	0					
ANR	5767752	CompoundStatement		17:35:300:300	5767634	1					
ANR	5767753	ExpressionStatement	p -> _system = strdup ( e )	453:2:9547:9570	5767634	0	True				
ANR	5767754	AssignmentExpression	p -> _system = strdup ( e )		5767634	0		=			
ANR	5767755	PtrMemberAccess	p -> _system		5767634	0					
ANR	5767756	Identifier	p		5767634	0					
ANR	5767757	Identifier	_system		5767634	1					
ANR	5767758	CallExpression	strdup ( e )		5767634	1					
ANR	5767759	Callee	strdup		5767634	0					
ANR	5767760	Identifier	strdup		5767634	0					
ANR	5767761	ArgumentList	e		5767634	1					
ANR	5767762	Argument	e		5767634	0					
ANR	5767763	Identifier	e		5767634	0					
ANR	5767764	ElseStatement	else		5767634	0					
ANR	5767765	IfStatement	"if ( ! strcmp ( b , ""runlib"" ) )"		5767634	0					
ANR	5767766	Condition	"! strcmp ( b , ""runlib"" )"	454:12:9584:9604	5767634	0	True				
ANR	5767767	UnaryOperationExpression	"! strcmp ( b , ""runlib"" )"		5767634	0					
ANR	5767768	UnaryOperator	!		5767634	0					
ANR	5767769	CallExpression	"strcmp ( b , ""runlib"" )"		5767634	1					
ANR	5767770	Callee	strcmp		5767634	0					
ANR	5767771	Identifier	strcmp		5767634	0					
ANR	5767772	ArgumentList	b		5767634	1					
ANR	5767773	Argument	b		5767634	0					
ANR	5767774	Identifier	b		5767634	0					
ANR	5767775	Argument	"""runlib"""		5767634	1					
ANR	5767776	PrimaryExpression	"""runlib"""		5767634	0					
ANR	5767777	CompoundStatement		19:35:364:364	5767634	1					
ANR	5767778	ExpressionStatement	p -> _runlib = strdup ( e )	455:2:9611:9634	5767634	0	True				
ANR	5767779	AssignmentExpression	p -> _runlib = strdup ( e )		5767634	0		=			
ANR	5767780	PtrMemberAccess	p -> _runlib		5767634	0					
ANR	5767781	Identifier	p		5767634	0					
ANR	5767782	Identifier	_runlib		5767634	1					
ANR	5767783	CallExpression	strdup ( e )		5767634	1					
ANR	5767784	Callee	strdup		5767634	0					
ANR	5767785	Identifier	strdup		5767634	0					
ANR	5767786	ArgumentList	e		5767634	1					
ANR	5767787	Argument	e		5767634	0					
ANR	5767788	Identifier	e		5767634	0					
ANR	5767789	ElseStatement	else		5767634	0					
ANR	5767790	IfStatement	"if ( ! strcmp ( b , ""runlib.fcn"" ) )"		5767634	0					
ANR	5767791	Condition	"! strcmp ( b , ""runlib.fcn"" )"	456:12:9648:9672	5767634	0	True				
ANR	5767792	UnaryOperationExpression	"! strcmp ( b , ""runlib.fcn"" )"		5767634	0					
ANR	5767793	UnaryOperator	!		5767634	0					
ANR	5767794	CallExpression	"strcmp ( b , ""runlib.fcn"" )"		5767634	1					
ANR	5767795	Callee	strcmp		5767634	0					
ANR	5767796	Identifier	strcmp		5767634	0					
ANR	5767797	ArgumentList	b		5767634	1					
ANR	5767798	Argument	b		5767634	0					
ANR	5767799	Identifier	b		5767634	0					
ANR	5767800	Argument	"""runlib.fcn"""		5767634	1					
ANR	5767801	PrimaryExpression	"""runlib.fcn"""		5767634	0					
ANR	5767802	CompoundStatement		21:39:432:432	5767634	1					
ANR	5767803	ExpressionStatement	p -> _runlib_fcn = strdup ( e )	457:2:9679:9706	5767634	0	True				
ANR	5767804	AssignmentExpression	p -> _runlib_fcn = strdup ( e )		5767634	0		=			
ANR	5767805	PtrMemberAccess	p -> _runlib_fcn		5767634	0					
ANR	5767806	Identifier	p		5767634	0					
ANR	5767807	Identifier	_runlib_fcn		5767634	1					
ANR	5767808	CallExpression	strdup ( e )		5767634	1					
ANR	5767809	Callee	strdup		5767634	0					
ANR	5767810	Identifier	strdup		5767634	0					
ANR	5767811	ArgumentList	e		5767634	1					
ANR	5767812	Argument	e		5767634	0					
ANR	5767813	Identifier	e		5767634	0					
ANR	5767814	ElseStatement	else		5767634	0					
ANR	5767815	IfStatement	"if ( ! strcmp ( b , ""aslr"" ) )"		5767634	0					
ANR	5767816	Condition	"! strcmp ( b , ""aslr"" )"	458:12:9720:9738	5767634	0	True				
ANR	5767817	UnaryOperationExpression	"! strcmp ( b , ""aslr"" )"		5767634	0					
ANR	5767818	UnaryOperator	!		5767634	0					
ANR	5767819	CallExpression	"strcmp ( b , ""aslr"" )"		5767634	1					
ANR	5767820	Callee	strcmp		5767634	0					
ANR	5767821	Identifier	strcmp		5767634	0					
ANR	5767822	ArgumentList	b		5767634	1					
ANR	5767823	Argument	b		5767634	0					
ANR	5767824	Identifier	b		5767634	0					
ANR	5767825	Argument	"""aslr"""		5767634	1					
ANR	5767826	PrimaryExpression	"""aslr"""		5767634	0					
ANR	5767827	CompoundStatement		23:33:498:498	5767634	1					
ANR	5767828	ExpressionStatement	p -> _aslr = parseBool ( e )	459:2:9745:9769	5767634	0	True				
ANR	5767829	AssignmentExpression	p -> _aslr = parseBool ( e )		5767634	0		=			
ANR	5767830	PtrMemberAccess	p -> _aslr		5767634	0					
ANR	5767831	Identifier	p		5767634	0					
ANR	5767832	Identifier	_aslr		5767634	1					
ANR	5767833	CallExpression	parseBool ( e )		5767634	1					
ANR	5767834	Callee	parseBool		5767634	0					
ANR	5767835	Identifier	parseBool		5767634	0					
ANR	5767836	ArgumentList	e		5767634	1					
ANR	5767837	Argument	e		5767634	0					
ANR	5767838	Identifier	e		5767634	0					
ANR	5767839	ElseStatement	else		5767634	0					
ANR	5767840	IfStatement	"if ( ! strcmp ( b , ""pid"" ) )"		5767634	0					
ANR	5767841	Condition	"! strcmp ( b , ""pid"" )"	460:12:9783:9800	5767634	0	True				
ANR	5767842	UnaryOperationExpression	"! strcmp ( b , ""pid"" )"		5767634	0					
ANR	5767843	UnaryOperator	!		5767634	0					
ANR	5767844	CallExpression	"strcmp ( b , ""pid"" )"		5767634	1					
ANR	5767845	Callee	strcmp		5767634	0					
ANR	5767846	Identifier	strcmp		5767634	0					
ANR	5767847	ArgumentList	b		5767634	1					
ANR	5767848	Argument	b		5767634	0					
ANR	5767849	Identifier	b		5767634	0					
ANR	5767850	Argument	"""pid"""		5767634	1					
ANR	5767851	PrimaryExpression	"""pid"""		5767634	0					
ANR	5767852	CompoundStatement		25:32:560:560	5767634	1					
ANR	5767853	ExpressionStatement	p -> _pid = atoi ( e )	461:2:9807:9825	5767634	0	True				
ANR	5767854	AssignmentExpression	p -> _pid = atoi ( e )		5767634	0		=			
ANR	5767855	PtrMemberAccess	p -> _pid		5767634	0					
ANR	5767856	Identifier	p		5767634	0					
ANR	5767857	Identifier	_pid		5767634	1					
ANR	5767858	CallExpression	atoi ( e )		5767634	1					
ANR	5767859	Callee	atoi		5767634	0					
ANR	5767860	Identifier	atoi		5767634	0					
ANR	5767861	ArgumentList	e		5767634	1					
ANR	5767862	Argument	e		5767634	0					
ANR	5767863	Identifier	e		5767634	0					
ANR	5767864	ElseStatement	else		5767634	0					
ANR	5767865	IfStatement	"if ( ! strcmp ( b , ""pidfile"" ) )"		5767634	0					
ANR	5767866	Condition	"! strcmp ( b , ""pidfile"" )"	462:12:9839:9860	5767634	0	True				
ANR	5767867	UnaryOperationExpression	"! strcmp ( b , ""pidfile"" )"		5767634	0					
ANR	5767868	UnaryOperator	!		5767634	0					
ANR	5767869	CallExpression	"strcmp ( b , ""pidfile"" )"		5767634	1					
ANR	5767870	Callee	strcmp		5767634	0					
ANR	5767871	Identifier	strcmp		5767634	0					
ANR	5767872	ArgumentList	b		5767634	1					
ANR	5767873	Argument	b		5767634	0					
ANR	5767874	Identifier	b		5767634	0					
ANR	5767875	Argument	"""pidfile"""		5767634	1					
ANR	5767876	PrimaryExpression	"""pidfile"""		5767634	0					
ANR	5767877	CompoundStatement		27:36:620:620	5767634	1					
ANR	5767878	ExpressionStatement	p -> _pidfile = strdup ( e )	463:2:9867:9891	5767634	0	True				
ANR	5767879	AssignmentExpression	p -> _pidfile = strdup ( e )		5767634	0		=			
ANR	5767880	PtrMemberAccess	p -> _pidfile		5767634	0					
ANR	5767881	Identifier	p		5767634	0					
ANR	5767882	Identifier	_pidfile		5767634	1					
ANR	5767883	CallExpression	strdup ( e )		5767634	1					
ANR	5767884	Callee	strdup		5767634	0					
ANR	5767885	Identifier	strdup		5767634	0					
ANR	5767886	ArgumentList	e		5767634	1					
ANR	5767887	Argument	e		5767634	0					
ANR	5767888	Identifier	e		5767634	0					
ANR	5767889	ElseStatement	else		5767634	0					
ANR	5767890	IfStatement	"if ( ! strcmp ( b , ""connect"" ) )"		5767634	0					
ANR	5767891	Condition	"! strcmp ( b , ""connect"" )"	464:12:9905:9926	5767634	0	True				
ANR	5767892	UnaryOperationExpression	"! strcmp ( b , ""connect"" )"		5767634	0					
ANR	5767893	UnaryOperator	!		5767634	0					
ANR	5767894	CallExpression	"strcmp ( b , ""connect"" )"		5767634	1					
ANR	5767895	Callee	strcmp		5767634	0					
ANR	5767896	Identifier	strcmp		5767634	0					
ANR	5767897	ArgumentList	b		5767634	1					
ANR	5767898	Argument	b		5767634	0					
ANR	5767899	Identifier	b		5767634	0					
ANR	5767900	Argument	"""connect"""		5767634	1					
ANR	5767901	PrimaryExpression	"""connect"""		5767634	0					
ANR	5767902	CompoundStatement		29:36:686:686	5767634	1					
ANR	5767903	ExpressionStatement	p -> _connect = strdup ( e )	465:2:9933:9957	5767634	0	True				
ANR	5767904	AssignmentExpression	p -> _connect = strdup ( e )		5767634	0		=			
ANR	5767905	PtrMemberAccess	p -> _connect		5767634	0					
ANR	5767906	Identifier	p		5767634	0					
ANR	5767907	Identifier	_connect		5767634	1					
ANR	5767908	CallExpression	strdup ( e )		5767634	1					
ANR	5767909	Callee	strdup		5767634	0					
ANR	5767910	Identifier	strdup		5767634	0					
ANR	5767911	ArgumentList	e		5767634	1					
ANR	5767912	Argument	e		5767634	0					
ANR	5767913	Identifier	e		5767634	0					
ANR	5767914	ElseStatement	else		5767634	0					
ANR	5767915	IfStatement	"if ( ! strcmp ( b , ""listen"" ) )"		5767634	0					
ANR	5767916	Condition	"! strcmp ( b , ""listen"" )"	466:12:9971:9991	5767634	0	True				
ANR	5767917	UnaryOperationExpression	"! strcmp ( b , ""listen"" )"		5767634	0					
ANR	5767918	UnaryOperator	!		5767634	0					
ANR	5767919	CallExpression	"strcmp ( b , ""listen"" )"		5767634	1					
ANR	5767920	Callee	strcmp		5767634	0					
ANR	5767921	Identifier	strcmp		5767634	0					
ANR	5767922	ArgumentList	b		5767634	1					
ANR	5767923	Argument	b		5767634	0					
ANR	5767924	Identifier	b		5767634	0					
ANR	5767925	Argument	"""listen"""		5767634	1					
ANR	5767926	PrimaryExpression	"""listen"""		5767634	0					
ANR	5767927	CompoundStatement		31:35:751:751	5767634	1					
ANR	5767928	ExpressionStatement	p -> _listen = strdup ( e )	467:2:9998:10021	5767634	0	True				
ANR	5767929	AssignmentExpression	p -> _listen = strdup ( e )		5767634	0		=			
ANR	5767930	PtrMemberAccess	p -> _listen		5767634	0					
ANR	5767931	Identifier	p		5767634	0					
ANR	5767932	Identifier	_listen		5767634	1					
ANR	5767933	CallExpression	strdup ( e )		5767634	1					
ANR	5767934	Callee	strdup		5767634	0					
ANR	5767935	Identifier	strdup		5767634	0					
ANR	5767936	ArgumentList	e		5767634	1					
ANR	5767937	Argument	e		5767634	0					
ANR	5767938	Identifier	e		5767634	0					
ANR	5767939	ElseStatement	else		5767634	0					
ANR	5767940	IfStatement	"if ( ! strcmp ( b , ""pty"" ) )"		5767634	0					
ANR	5767941	Condition	"! strcmp ( b , ""pty"" )"	468:12:10035:10052	5767634	0	True				
ANR	5767942	UnaryOperationExpression	"! strcmp ( b , ""pty"" )"		5767634	0					
ANR	5767943	UnaryOperator	!		5767634	0					
ANR	5767944	CallExpression	"strcmp ( b , ""pty"" )"		5767634	1					
ANR	5767945	Callee	strcmp		5767634	0					
ANR	5767946	Identifier	strcmp		5767634	0					
ANR	5767947	ArgumentList	b		5767634	1					
ANR	5767948	Argument	b		5767634	0					
ANR	5767949	Identifier	b		5767634	0					
ANR	5767950	Argument	"""pty"""		5767634	1					
ANR	5767951	PrimaryExpression	"""pty"""		5767634	0					
ANR	5767952	CompoundStatement		33:32:812:812	5767634	1					
ANR	5767953	ExpressionStatement	p -> _pty = parseBool ( e )	469:2:10059:10082	5767634	0	True				
ANR	5767954	AssignmentExpression	p -> _pty = parseBool ( e )		5767634	0		=			
ANR	5767955	PtrMemberAccess	p -> _pty		5767634	0					
ANR	5767956	Identifier	p		5767634	0					
ANR	5767957	Identifier	_pty		5767634	1					
ANR	5767958	CallExpression	parseBool ( e )		5767634	1					
ANR	5767959	Callee	parseBool		5767634	0					
ANR	5767960	Identifier	parseBool		5767634	0					
ANR	5767961	ArgumentList	e		5767634	1					
ANR	5767962	Argument	e		5767634	0					
ANR	5767963	Identifier	e		5767634	0					
ANR	5767964	ElseStatement	else		5767634	0					
ANR	5767965	IfStatement	"if ( ! strcmp ( b , ""stdio"" ) )"		5767634	0					
ANR	5767966	Condition	"! strcmp ( b , ""stdio"" )"	470:12:10096:10115	5767634	0	True				
ANR	5767967	UnaryOperationExpression	"! strcmp ( b , ""stdio"" )"		5767634	0					
ANR	5767968	UnaryOperator	!		5767634	0					
ANR	5767969	CallExpression	"strcmp ( b , ""stdio"" )"		5767634	1					
ANR	5767970	Callee	strcmp		5767634	0					
ANR	5767971	Identifier	strcmp		5767634	0					
ANR	5767972	ArgumentList	b		5767634	1					
ANR	5767973	Argument	b		5767634	0					
ANR	5767974	Identifier	b		5767634	0					
ANR	5767975	Argument	"""stdio"""		5767634	1					
ANR	5767976	PrimaryExpression	"""stdio"""		5767634	0					
ANR	5767977	CompoundStatement		35:34:875:875	5767634	1					
ANR	5767978	IfStatement	if ( e [ 0 ] == '!' )		5767634	0					
ANR	5767979	Condition	e [ 0 ] == '!'	471:6:10126:10136	5767634	0	True				
ANR	5767980	EqualityExpression	e [ 0 ] == '!'		5767634	0		==			
ANR	5767981	ArrayIndexing	e [ 0 ]		5767634	0					
ANR	5767982	Identifier	e		5767634	0					
ANR	5767983	PrimaryExpression	0		5767634	1					
ANR	5767984	PrimaryExpression	'!'		5767634	1					
ANR	5767985	CompoundStatement		36:19:896:896	5767634	1					
ANR	5767986	ExpressionStatement	p -> _stdio = strdup ( e )	472:3:10144:10166	5767634	0	True				
ANR	5767987	AssignmentExpression	p -> _stdio = strdup ( e )		5767634	0		=			
ANR	5767988	PtrMemberAccess	p -> _stdio		5767634	0					
ANR	5767989	Identifier	p		5767634	0					
ANR	5767990	Identifier	_stdio		5767634	1					
ANR	5767991	CallExpression	strdup ( e )		5767634	1					
ANR	5767992	Callee	strdup		5767634	0					
ANR	5767993	Identifier	strdup		5767634	0					
ANR	5767994	ArgumentList	e		5767634	1					
ANR	5767995	Argument	e		5767634	0					
ANR	5767996	Identifier	e		5767634	0					
ANR	5767997	ElseStatement	else		5767634	0					
ANR	5767998	CompoundStatement		38:9:934:934	5767634	0					
ANR	5767999	ExpressionStatement	p -> _stdout = strdup ( e )	474:3:10182:10205	5767634	0	True				
ANR	5768000	AssignmentExpression	p -> _stdout = strdup ( e )		5767634	0		=			
ANR	5768001	PtrMemberAccess	p -> _stdout		5767634	0					
ANR	5768002	Identifier	p		5767634	0					
ANR	5768003	Identifier	_stdout		5767634	1					
ANR	5768004	CallExpression	strdup ( e )		5767634	1					
ANR	5768005	Callee	strdup		5767634	0					
ANR	5768006	Identifier	strdup		5767634	0					
ANR	5768007	ArgumentList	e		5767634	1					
ANR	5768008	Argument	e		5767634	0					
ANR	5768009	Identifier	e		5767634	0					
ANR	5768010	ExpressionStatement	p -> _stderr = strdup ( e )	475:3:10210:10233	5767634	1	True				
ANR	5768011	AssignmentExpression	p -> _stderr = strdup ( e )		5767634	0		=			
ANR	5768012	PtrMemberAccess	p -> _stderr		5767634	0					
ANR	5768013	Identifier	p		5767634	0					
ANR	5768014	Identifier	_stderr		5767634	1					
ANR	5768015	CallExpression	strdup ( e )		5767634	1					
ANR	5768016	Callee	strdup		5767634	0					
ANR	5768017	Identifier	strdup		5767634	0					
ANR	5768018	ArgumentList	e		5767634	1					
ANR	5768019	Argument	e		5767634	0					
ANR	5768020	Identifier	e		5767634	0					
ANR	5768021	ExpressionStatement	p -> _stdin = strdup ( e )	476:3:10238:10260	5767634	2	True				
ANR	5768022	AssignmentExpression	p -> _stdin = strdup ( e )		5767634	0		=			
ANR	5768023	PtrMemberAccess	p -> _stdin		5767634	0					
ANR	5768024	Identifier	p		5767634	0					
ANR	5768025	Identifier	_stdin		5767634	1					
ANR	5768026	CallExpression	strdup ( e )		5767634	1					
ANR	5768027	Callee	strdup		5767634	0					
ANR	5768028	Identifier	strdup		5767634	0					
ANR	5768029	ArgumentList	e		5767634	1					
ANR	5768030	Argument	e		5767634	0					
ANR	5768031	Identifier	e		5767634	0					
ANR	5768032	ElseStatement	else		5767634	0					
ANR	5768033	IfStatement	"if ( ! strcmp ( b , ""stdout"" ) )"		5767634	0					
ANR	5768034	Condition	"! strcmp ( b , ""stdout"" )"	478:12:10278:10298	5767634	0	True				
ANR	5768035	UnaryOperationExpression	"! strcmp ( b , ""stdout"" )"		5767634	0					
ANR	5768036	UnaryOperator	!		5767634	0					
ANR	5768037	CallExpression	"strcmp ( b , ""stdout"" )"		5767634	1					
ANR	5768038	Callee	strcmp		5767634	0					
ANR	5768039	Identifier	strcmp		5767634	0					
ANR	5768040	ArgumentList	b		5767634	1					
ANR	5768041	Argument	b		5767634	0					
ANR	5768042	Identifier	b		5767634	0					
ANR	5768043	Argument	"""stdout"""		5767634	1					
ANR	5768044	PrimaryExpression	"""stdout"""		5767634	0					
ANR	5768045	CompoundStatement		43:35:1058:1058	5767634	1					
ANR	5768046	ExpressionStatement	p -> _stdout = strdup ( e )	479:2:10305:10328	5767634	0	True				
ANR	5768047	AssignmentExpression	p -> _stdout = strdup ( e )		5767634	0		=			
ANR	5768048	PtrMemberAccess	p -> _stdout		5767634	0					
ANR	5768049	Identifier	p		5767634	0					
ANR	5768050	Identifier	_stdout		5767634	1					
ANR	5768051	CallExpression	strdup ( e )		5767634	1					
ANR	5768052	Callee	strdup		5767634	0					
ANR	5768053	Identifier	strdup		5767634	0					
ANR	5768054	ArgumentList	e		5767634	1					
ANR	5768055	Argument	e		5767634	0					
ANR	5768056	Identifier	e		5767634	0					
ANR	5768057	ElseStatement	else		5767634	0					
ANR	5768058	IfStatement	"if ( ! strcmp ( b , ""stdin"" ) )"		5767634	0					
ANR	5768059	Condition	"! strcmp ( b , ""stdin"" )"	480:12:10342:10361	5767634	0	True				
ANR	5768060	UnaryOperationExpression	"! strcmp ( b , ""stdin"" )"		5767634	0					
ANR	5768061	UnaryOperator	!		5767634	0					
ANR	5768062	CallExpression	"strcmp ( b , ""stdin"" )"		5767634	1					
ANR	5768063	Callee	strcmp		5767634	0					
ANR	5768064	Identifier	strcmp		5767634	0					
ANR	5768065	ArgumentList	b		5767634	1					
ANR	5768066	Argument	b		5767634	0					
ANR	5768067	Identifier	b		5767634	0					
ANR	5768068	Argument	"""stdin"""		5767634	1					
ANR	5768069	PrimaryExpression	"""stdin"""		5767634	0					
ANR	5768070	CompoundStatement		45:34:1121:1121	5767634	1					
ANR	5768071	ExpressionStatement	p -> _stdin = strdup ( e )	481:2:10368:10390	5767634	0	True				
ANR	5768072	AssignmentExpression	p -> _stdin = strdup ( e )		5767634	0		=			
ANR	5768073	PtrMemberAccess	p -> _stdin		5767634	0					
ANR	5768074	Identifier	p		5767634	0					
ANR	5768075	Identifier	_stdin		5767634	1					
ANR	5768076	CallExpression	strdup ( e )		5767634	1					
ANR	5768077	Callee	strdup		5767634	0					
ANR	5768078	Identifier	strdup		5767634	0					
ANR	5768079	ArgumentList	e		5767634	1					
ANR	5768080	Argument	e		5767634	0					
ANR	5768081	Identifier	e		5767634	0					
ANR	5768082	ElseStatement	else		5767634	0					
ANR	5768083	IfStatement	"if ( ! strcmp ( b , ""stderr"" ) )"		5767634	0					
ANR	5768084	Condition	"! strcmp ( b , ""stderr"" )"	482:12:10404:10424	5767634	0	True				
ANR	5768085	UnaryOperationExpression	"! strcmp ( b , ""stderr"" )"		5767634	0					
ANR	5768086	UnaryOperator	!		5767634	0					
ANR	5768087	CallExpression	"strcmp ( b , ""stderr"" )"		5767634	1					
ANR	5768088	Callee	strcmp		5767634	0					
ANR	5768089	Identifier	strcmp		5767634	0					
ANR	5768090	ArgumentList	b		5767634	1					
ANR	5768091	Argument	b		5767634	0					
ANR	5768092	Identifier	b		5767634	0					
ANR	5768093	Argument	"""stderr"""		5767634	1					
ANR	5768094	PrimaryExpression	"""stderr"""		5767634	0					
ANR	5768095	CompoundStatement		47:35:1184:1184	5767634	1					
ANR	5768096	ExpressionStatement	p -> _stderr = strdup ( e )	483:2:10431:10454	5767634	0	True				
ANR	5768097	AssignmentExpression	p -> _stderr = strdup ( e )		5767634	0		=			
ANR	5768098	PtrMemberAccess	p -> _stderr		5767634	0					
ANR	5768099	Identifier	p		5767634	0					
ANR	5768100	Identifier	_stderr		5767634	1					
ANR	5768101	CallExpression	strdup ( e )		5767634	1					
ANR	5768102	Callee	strdup		5767634	0					
ANR	5768103	Identifier	strdup		5767634	0					
ANR	5768104	ArgumentList	e		5767634	1					
ANR	5768105	Argument	e		5767634	0					
ANR	5768106	Identifier	e		5767634	0					
ANR	5768107	ElseStatement	else		5767634	0					
ANR	5768108	IfStatement	"if ( ! strcmp ( b , ""input"" ) )"		5767634	0					
ANR	5768109	Condition	"! strcmp ( b , ""input"" )"	484:12:10468:10487	5767634	0	True				
ANR	5768110	UnaryOperationExpression	"! strcmp ( b , ""input"" )"		5767634	0					
ANR	5768111	UnaryOperator	!		5767634	0					
ANR	5768112	CallExpression	"strcmp ( b , ""input"" )"		5767634	1					
ANR	5768113	Callee	strcmp		5767634	0					
ANR	5768114	Identifier	strcmp		5767634	0					
ANR	5768115	ArgumentList	b		5767634	1					
ANR	5768116	Argument	b		5767634	0					
ANR	5768117	Identifier	b		5767634	0					
ANR	5768118	Argument	"""input"""		5767634	1					
ANR	5768119	PrimaryExpression	"""input"""		5767634	0					
ANR	5768120	CompoundStatement		49:34:1247:1247	5767634	1					
ANR	5768121	ExpressionStatement	p -> _input = strdup ( e )	485:2:10494:10516	5767634	0	True				
ANR	5768122	AssignmentExpression	p -> _input = strdup ( e )		5767634	0		=			
ANR	5768123	PtrMemberAccess	p -> _input		5767634	0					
ANR	5768124	Identifier	p		5767634	0					
ANR	5768125	Identifier	_input		5767634	1					
ANR	5768126	CallExpression	strdup ( e )		5767634	1					
ANR	5768127	Callee	strdup		5767634	0					
ANR	5768128	Identifier	strdup		5767634	0					
ANR	5768129	ArgumentList	e		5767634	1					
ANR	5768130	Argument	e		5767634	0					
ANR	5768131	Identifier	e		5767634	0					
ANR	5768132	ElseStatement	else		5767634	0					
ANR	5768133	IfStatement	"if ( ! strcmp ( b , ""chdir"" ) )"		5767634	0					
ANR	5768134	Condition	"! strcmp ( b , ""chdir"" )"	486:12:10530:10549	5767634	0	True				
ANR	5768135	UnaryOperationExpression	"! strcmp ( b , ""chdir"" )"		5767634	0					
ANR	5768136	UnaryOperator	!		5767634	0					
ANR	5768137	CallExpression	"strcmp ( b , ""chdir"" )"		5767634	1					
ANR	5768138	Callee	strcmp		5767634	0					
ANR	5768139	Identifier	strcmp		5767634	0					
ANR	5768140	ArgumentList	b		5767634	1					
ANR	5768141	Argument	b		5767634	0					
ANR	5768142	Identifier	b		5767634	0					
ANR	5768143	Argument	"""chdir"""		5767634	1					
ANR	5768144	PrimaryExpression	"""chdir"""		5767634	0					
ANR	5768145	CompoundStatement		51:34:1309:1309	5767634	1					
ANR	5768146	ExpressionStatement	p -> _chgdir = strdup ( e )	487:2:10556:10579	5767634	0	True				
ANR	5768147	AssignmentExpression	p -> _chgdir = strdup ( e )		5767634	0		=			
ANR	5768148	PtrMemberAccess	p -> _chgdir		5767634	0					
ANR	5768149	Identifier	p		5767634	0					
ANR	5768150	Identifier	_chgdir		5767634	1					
ANR	5768151	CallExpression	strdup ( e )		5767634	1					
ANR	5768152	Callee	strdup		5767634	0					
ANR	5768153	Identifier	strdup		5767634	0					
ANR	5768154	ArgumentList	e		5767634	1					
ANR	5768155	Argument	e		5767634	0					
ANR	5768156	Identifier	e		5767634	0					
ANR	5768157	ElseStatement	else		5767634	0					
ANR	5768158	IfStatement	"if ( ! strcmp ( b , ""core"" ) )"		5767634	0					
ANR	5768159	Condition	"! strcmp ( b , ""core"" )"	488:12:10593:10611	5767634	0	True				
ANR	5768160	UnaryOperationExpression	"! strcmp ( b , ""core"" )"		5767634	0					
ANR	5768161	UnaryOperator	!		5767634	0					
ANR	5768162	CallExpression	"strcmp ( b , ""core"" )"		5767634	1					
ANR	5768163	Callee	strcmp		5767634	0					
ANR	5768164	Identifier	strcmp		5767634	0					
ANR	5768165	ArgumentList	b		5767634	1					
ANR	5768166	Argument	b		5767634	0					
ANR	5768167	Identifier	b		5767634	0					
ANR	5768168	Argument	"""core"""		5767634	1					
ANR	5768169	PrimaryExpression	"""core"""		5767634	0					
ANR	5768170	CompoundStatement		53:33:1371:1371	5767634	1					
ANR	5768171	ExpressionStatement	p -> _docore = parseBool ( e )	489:2:10618:10644	5767634	0	True				
ANR	5768172	AssignmentExpression	p -> _docore = parseBool ( e )		5767634	0		=			
ANR	5768173	PtrMemberAccess	p -> _docore		5767634	0					
ANR	5768174	Identifier	p		5767634	0					
ANR	5768175	Identifier	_docore		5767634	1					
ANR	5768176	CallExpression	parseBool ( e )		5767634	1					
ANR	5768177	Callee	parseBool		5767634	0					
ANR	5768178	Identifier	parseBool		5767634	0					
ANR	5768179	ArgumentList	e		5767634	1					
ANR	5768180	Argument	e		5767634	0					
ANR	5768181	Identifier	e		5767634	0					
ANR	5768182	ElseStatement	else		5767634	0					
ANR	5768183	IfStatement	"if ( ! strcmp ( b , ""fork"" ) )"		5767634	0					
ANR	5768184	Condition	"! strcmp ( b , ""fork"" )"	490:12:10658:10676	5767634	0	True				
ANR	5768185	UnaryOperationExpression	"! strcmp ( b , ""fork"" )"		5767634	0					
ANR	5768186	UnaryOperator	!		5767634	0					
ANR	5768187	CallExpression	"strcmp ( b , ""fork"" )"		5767634	1					
ANR	5768188	Callee	strcmp		5767634	0					
ANR	5768189	Identifier	strcmp		5767634	0					
ANR	5768190	ArgumentList	b		5767634	1					
ANR	5768191	Argument	b		5767634	0					
ANR	5768192	Identifier	b		5767634	0					
ANR	5768193	Argument	"""fork"""		5767634	1					
ANR	5768194	PrimaryExpression	"""fork"""		5767634	0					
ANR	5768195	CompoundStatement		55:33:1436:1436	5767634	1					
ANR	5768196	ExpressionStatement	p -> _dofork = parseBool ( e )	491:2:10683:10709	5767634	0	True				
ANR	5768197	AssignmentExpression	p -> _dofork = parseBool ( e )		5767634	0		=			
ANR	5768198	PtrMemberAccess	p -> _dofork		5767634	0					
ANR	5768199	Identifier	p		5767634	0					
ANR	5768200	Identifier	_dofork		5767634	1					
ANR	5768201	CallExpression	parseBool ( e )		5767634	1					
ANR	5768202	Callee	parseBool		5767634	0					
ANR	5768203	Identifier	parseBool		5767634	0					
ANR	5768204	ArgumentList	e		5767634	1					
ANR	5768205	Argument	e		5767634	0					
ANR	5768206	Identifier	e		5767634	0					
ANR	5768207	ElseStatement	else		5767634	0					
ANR	5768208	IfStatement	"if ( ! strcmp ( b , ""sleep"" ) )"		5767634	0					
ANR	5768209	Condition	"! strcmp ( b , ""sleep"" )"	492:12:10723:10742	5767634	0	True				
ANR	5768210	UnaryOperationExpression	"! strcmp ( b , ""sleep"" )"		5767634	0					
ANR	5768211	UnaryOperator	!		5767634	0					
ANR	5768212	CallExpression	"strcmp ( b , ""sleep"" )"		5767634	1					
ANR	5768213	Callee	strcmp		5767634	0					
ANR	5768214	Identifier	strcmp		5767634	0					
ANR	5768215	ArgumentList	b		5767634	1					
ANR	5768216	Argument	b		5767634	0					
ANR	5768217	Identifier	b		5767634	0					
ANR	5768218	Argument	"""sleep"""		5767634	1					
ANR	5768219	PrimaryExpression	"""sleep"""		5767634	0					
ANR	5768220	CompoundStatement		57:34:1502:1502	5767634	1					
ANR	5768221	ExpressionStatement	p -> _r2sleep = atoi ( e )	493:2:10749:10771	5767634	0	True				
ANR	5768222	AssignmentExpression	p -> _r2sleep = atoi ( e )		5767634	0		=			
ANR	5768223	PtrMemberAccess	p -> _r2sleep		5767634	0					
ANR	5768224	Identifier	p		5767634	0					
ANR	5768225	Identifier	_r2sleep		5767634	1					
ANR	5768226	CallExpression	atoi ( e )		5767634	1					
ANR	5768227	Callee	atoi		5767634	0					
ANR	5768228	Identifier	atoi		5767634	0					
ANR	5768229	ArgumentList	e		5767634	1					
ANR	5768230	Argument	e		5767634	0					
ANR	5768231	Identifier	e		5767634	0					
ANR	5768232	ElseStatement	else		5767634	0					
ANR	5768233	IfStatement	"if ( ! strcmp ( b , ""maxstack"" ) )"		5767634	0					
ANR	5768234	Condition	"! strcmp ( b , ""maxstack"" )"	494:12:10785:10807	5767634	0	True				
ANR	5768235	UnaryOperationExpression	"! strcmp ( b , ""maxstack"" )"		5767634	0					
ANR	5768236	UnaryOperator	!		5767634	0					
ANR	5768237	CallExpression	"strcmp ( b , ""maxstack"" )"		5767634	1					
ANR	5768238	Callee	strcmp		5767634	0					
ANR	5768239	Identifier	strcmp		5767634	0					
ANR	5768240	ArgumentList	b		5767634	1					
ANR	5768241	Argument	b		5767634	0					
ANR	5768242	Identifier	b		5767634	0					
ANR	5768243	Argument	"""maxstack"""		5767634	1					
ANR	5768244	PrimaryExpression	"""maxstack"""		5767634	0					
ANR	5768245	CompoundStatement		59:37:1567:1567	5767634	1					
ANR	5768246	ExpressionStatement	p -> _maxstack = atoi ( e )	495:2:10814:10837	5767634	0	True				
ANR	5768247	AssignmentExpression	p -> _maxstack = atoi ( e )		5767634	0		=			
ANR	5768248	PtrMemberAccess	p -> _maxstack		5767634	0					
ANR	5768249	Identifier	p		5767634	0					
ANR	5768250	Identifier	_maxstack		5767634	1					
ANR	5768251	CallExpression	atoi ( e )		5767634	1					
ANR	5768252	Callee	atoi		5767634	0					
ANR	5768253	Identifier	atoi		5767634	0					
ANR	5768254	ArgumentList	e		5767634	1					
ANR	5768255	Argument	e		5767634	0					
ANR	5768256	Identifier	e		5767634	0					
ANR	5768257	ElseStatement	else		5767634	0					
ANR	5768258	IfStatement	"if ( ! strcmp ( b , ""maxproc"" ) )"		5767634	0					
ANR	5768259	Condition	"! strcmp ( b , ""maxproc"" )"	496:12:10851:10872	5767634	0	True				
ANR	5768260	UnaryOperationExpression	"! strcmp ( b , ""maxproc"" )"		5767634	0					
ANR	5768261	UnaryOperator	!		5767634	0					
ANR	5768262	CallExpression	"strcmp ( b , ""maxproc"" )"		5767634	1					
ANR	5768263	Callee	strcmp		5767634	0					
ANR	5768264	Identifier	strcmp		5767634	0					
ANR	5768265	ArgumentList	b		5767634	1					
ANR	5768266	Argument	b		5767634	0					
ANR	5768267	Identifier	b		5767634	0					
ANR	5768268	Argument	"""maxproc"""		5767634	1					
ANR	5768269	PrimaryExpression	"""maxproc"""		5767634	0					
ANR	5768270	CompoundStatement		61:36:1632:1632	5767634	1					
ANR	5768271	ExpressionStatement	p -> _maxproc = atoi ( e )	497:2:10879:10901	5767634	0	True				
ANR	5768272	AssignmentExpression	p -> _maxproc = atoi ( e )		5767634	0		=			
ANR	5768273	PtrMemberAccess	p -> _maxproc		5767634	0					
ANR	5768274	Identifier	p		5767634	0					
ANR	5768275	Identifier	_maxproc		5767634	1					
ANR	5768276	CallExpression	atoi ( e )		5767634	1					
ANR	5768277	Callee	atoi		5767634	0					
ANR	5768278	Identifier	atoi		5767634	0					
ANR	5768279	ArgumentList	e		5767634	1					
ANR	5768280	Argument	e		5767634	0					
ANR	5768281	Identifier	e		5767634	0					
ANR	5768282	ElseStatement	else		5767634	0					
ANR	5768283	IfStatement	"if ( ! strcmp ( b , ""maxfd"" ) )"		5767634	0					
ANR	5768284	Condition	"! strcmp ( b , ""maxfd"" )"	498:12:10915:10934	5767634	0	True				
ANR	5768285	UnaryOperationExpression	"! strcmp ( b , ""maxfd"" )"		5767634	0					
ANR	5768286	UnaryOperator	!		5767634	0					
ANR	5768287	CallExpression	"strcmp ( b , ""maxfd"" )"		5767634	1					
ANR	5768288	Callee	strcmp		5767634	0					
ANR	5768289	Identifier	strcmp		5767634	0					
ANR	5768290	ArgumentList	b		5767634	1					
ANR	5768291	Argument	b		5767634	0					
ANR	5768292	Identifier	b		5767634	0					
ANR	5768293	Argument	"""maxfd"""		5767634	1					
ANR	5768294	PrimaryExpression	"""maxfd"""		5767634	0					
ANR	5768295	CompoundStatement		63:34:1694:1694	5767634	1					
ANR	5768296	ExpressionStatement	p -> _maxfd = atoi ( e )	499:2:10941:10961	5767634	0	True				
ANR	5768297	AssignmentExpression	p -> _maxfd = atoi ( e )		5767634	0		=			
ANR	5768298	PtrMemberAccess	p -> _maxfd		5767634	0					
ANR	5768299	Identifier	p		5767634	0					
ANR	5768300	Identifier	_maxfd		5767634	1					
ANR	5768301	CallExpression	atoi ( e )		5767634	1					
ANR	5768302	Callee	atoi		5767634	0					
ANR	5768303	Identifier	atoi		5767634	0					
ANR	5768304	ArgumentList	e		5767634	1					
ANR	5768305	Argument	e		5767634	0					
ANR	5768306	Identifier	e		5767634	0					
ANR	5768307	ElseStatement	else		5767634	0					
ANR	5768308	IfStatement	"if ( ! strcmp ( b , ""bits"" ) )"		5767634	0					
ANR	5768309	Condition	"! strcmp ( b , ""bits"" )"	500:12:10975:10993	5767634	0	True				
ANR	5768310	UnaryOperationExpression	"! strcmp ( b , ""bits"" )"		5767634	0					
ANR	5768311	UnaryOperator	!		5767634	0					
ANR	5768312	CallExpression	"strcmp ( b , ""bits"" )"		5767634	1					
ANR	5768313	Callee	strcmp		5767634	0					
ANR	5768314	Identifier	strcmp		5767634	0					
ANR	5768315	ArgumentList	b		5767634	1					
ANR	5768316	Argument	b		5767634	0					
ANR	5768317	Identifier	b		5767634	0					
ANR	5768318	Argument	"""bits"""		5767634	1					
ANR	5768319	PrimaryExpression	"""bits"""		5767634	0					
ANR	5768320	CompoundStatement		65:33:1753:1753	5767634	1					
ANR	5768321	ExpressionStatement	p -> _bits = atoi ( e )	501:2:11000:11019	5767634	0	True				
ANR	5768322	AssignmentExpression	p -> _bits = atoi ( e )		5767634	0		=			
ANR	5768323	PtrMemberAccess	p -> _bits		5767634	0					
ANR	5768324	Identifier	p		5767634	0					
ANR	5768325	Identifier	_bits		5767634	1					
ANR	5768326	CallExpression	atoi ( e )		5767634	1					
ANR	5768327	Callee	atoi		5767634	0					
ANR	5768328	Identifier	atoi		5767634	0					
ANR	5768329	ArgumentList	e		5767634	1					
ANR	5768330	Argument	e		5767634	0					
ANR	5768331	Identifier	e		5767634	0					
ANR	5768332	ElseStatement	else		5767634	0					
ANR	5768333	IfStatement	"if ( ! strcmp ( b , ""chroot"" ) )"		5767634	0					
ANR	5768334	Condition	"! strcmp ( b , ""chroot"" )"	502:12:11033:11053	5767634	0	True				
ANR	5768335	UnaryOperationExpression	"! strcmp ( b , ""chroot"" )"		5767634	0					
ANR	5768336	UnaryOperator	!		5767634	0					
ANR	5768337	CallExpression	"strcmp ( b , ""chroot"" )"		5767634	1					
ANR	5768338	Callee	strcmp		5767634	0					
ANR	5768339	Identifier	strcmp		5767634	0					
ANR	5768340	ArgumentList	b		5767634	1					
ANR	5768341	Argument	b		5767634	0					
ANR	5768342	Identifier	b		5767634	0					
ANR	5768343	Argument	"""chroot"""		5767634	1					
ANR	5768344	PrimaryExpression	"""chroot"""		5767634	0					
ANR	5768345	CompoundStatement		67:35:1813:1813	5767634	1					
ANR	5768346	ExpressionStatement	p -> _chroot = strdup ( e )	503:2:11060:11083	5767634	0	True				
ANR	5768347	AssignmentExpression	p -> _chroot = strdup ( e )		5767634	0		=			
ANR	5768348	PtrMemberAccess	p -> _chroot		5767634	0					
ANR	5768349	Identifier	p		5767634	0					
ANR	5768350	Identifier	_chroot		5767634	1					
ANR	5768351	CallExpression	strdup ( e )		5767634	1					
ANR	5768352	Callee	strdup		5767634	0					
ANR	5768353	Identifier	strdup		5767634	0					
ANR	5768354	ArgumentList	e		5767634	1					
ANR	5768355	Argument	e		5767634	0					
ANR	5768356	Identifier	e		5767634	0					
ANR	5768357	ElseStatement	else		5767634	0					
ANR	5768358	IfStatement	"if ( ! strcmp ( b , ""libpath"" ) )"		5767634	0					
ANR	5768359	Condition	"! strcmp ( b , ""libpath"" )"	504:12:11097:11118	5767634	0	True				
ANR	5768360	UnaryOperationExpression	"! strcmp ( b , ""libpath"" )"		5767634	0					
ANR	5768361	UnaryOperator	!		5767634	0					
ANR	5768362	CallExpression	"strcmp ( b , ""libpath"" )"		5767634	1					
ANR	5768363	Callee	strcmp		5767634	0					
ANR	5768364	Identifier	strcmp		5767634	0					
ANR	5768365	ArgumentList	b		5767634	1					
ANR	5768366	Argument	b		5767634	0					
ANR	5768367	Identifier	b		5767634	0					
ANR	5768368	Argument	"""libpath"""		5767634	1					
ANR	5768369	PrimaryExpression	"""libpath"""		5767634	0					
ANR	5768370	CompoundStatement		69:36:1878:1878	5767634	1					
ANR	5768371	ExpressionStatement	p -> _libpath = strdup ( e )	505:2:11125:11149	5767634	0	True				
ANR	5768372	AssignmentExpression	p -> _libpath = strdup ( e )		5767634	0		=			
ANR	5768373	PtrMemberAccess	p -> _libpath		5767634	0					
ANR	5768374	Identifier	p		5767634	0					
ANR	5768375	Identifier	_libpath		5767634	1					
ANR	5768376	CallExpression	strdup ( e )		5767634	1					
ANR	5768377	Callee	strdup		5767634	0					
ANR	5768378	Identifier	strdup		5767634	0					
ANR	5768379	ArgumentList	e		5767634	1					
ANR	5768380	Argument	e		5767634	0					
ANR	5768381	Identifier	e		5767634	0					
ANR	5768382	ElseStatement	else		5767634	0					
ANR	5768383	IfStatement	"if ( ! strcmp ( b , ""preload"" ) )"		5767634	0					
ANR	5768384	Condition	"! strcmp ( b , ""preload"" )"	506:12:11163:11184	5767634	0	True				
ANR	5768385	UnaryOperationExpression	"! strcmp ( b , ""preload"" )"		5767634	0					
ANR	5768386	UnaryOperator	!		5767634	0					
ANR	5768387	CallExpression	"strcmp ( b , ""preload"" )"		5767634	1					
ANR	5768388	Callee	strcmp		5767634	0					
ANR	5768389	Identifier	strcmp		5767634	0					
ANR	5768390	ArgumentList	b		5767634	1					
ANR	5768391	Argument	b		5767634	0					
ANR	5768392	Identifier	b		5767634	0					
ANR	5768393	Argument	"""preload"""		5767634	1					
ANR	5768394	PrimaryExpression	"""preload"""		5767634	0					
ANR	5768395	CompoundStatement		71:36:1944:1944	5767634	1					
ANR	5768396	ExpressionStatement	p -> _preload = strdup ( e )	507:2:11191:11215	5767634	0	True				
ANR	5768397	AssignmentExpression	p -> _preload = strdup ( e )		5767634	0		=			
ANR	5768398	PtrMemberAccess	p -> _preload		5767634	0					
ANR	5768399	Identifier	p		5767634	0					
ANR	5768400	Identifier	_preload		5767634	1					
ANR	5768401	CallExpression	strdup ( e )		5767634	1					
ANR	5768402	Callee	strdup		5767634	0					
ANR	5768403	Identifier	strdup		5767634	0					
ANR	5768404	ArgumentList	e		5767634	1					
ANR	5768405	Argument	e		5767634	0					
ANR	5768406	Identifier	e		5767634	0					
ANR	5768407	ElseStatement	else		5767634	0					
ANR	5768408	IfStatement	"if ( ! strcmp ( b , ""r2preload"" ) )"		5767634	0					
ANR	5768409	Condition	"! strcmp ( b , ""r2preload"" )"	508:12:11229:11252	5767634	0	True				
ANR	5768410	UnaryOperationExpression	"! strcmp ( b , ""r2preload"" )"		5767634	0					
ANR	5768411	UnaryOperator	!		5767634	0					
ANR	5768412	CallExpression	"strcmp ( b , ""r2preload"" )"		5767634	1					
ANR	5768413	Callee	strcmp		5767634	0					
ANR	5768414	Identifier	strcmp		5767634	0					
ANR	5768415	ArgumentList	b		5767634	1					
ANR	5768416	Argument	b		5767634	0					
ANR	5768417	Identifier	b		5767634	0					
ANR	5768418	Argument	"""r2preload"""		5767634	1					
ANR	5768419	PrimaryExpression	"""r2preload"""		5767634	0					
ANR	5768420	CompoundStatement		73:38:2012:2012	5767634	1					
ANR	5768421	ExpressionStatement	p -> _r2preload = parseBool ( e )	509:2:11259:11288	5767634	0	True				
ANR	5768422	AssignmentExpression	p -> _r2preload = parseBool ( e )		5767634	0		=			
ANR	5768423	PtrMemberAccess	p -> _r2preload		5767634	0					
ANR	5768424	Identifier	p		5767634	0					
ANR	5768425	Identifier	_r2preload		5767634	1					
ANR	5768426	CallExpression	parseBool ( e )		5767634	1					
ANR	5768427	Callee	parseBool		5767634	0					
ANR	5768428	Identifier	parseBool		5767634	0					
ANR	5768429	ArgumentList	e		5767634	1					
ANR	5768430	Argument	e		5767634	0					
ANR	5768431	Identifier	e		5767634	0					
ANR	5768432	ElseStatement	else		5767634	0					
ANR	5768433	IfStatement	"if ( ! strcmp ( b , ""r2preweb"" ) )"		5767634	0					
ANR	5768434	Condition	"! strcmp ( b , ""r2preweb"" )"	510:12:11302:11324	5767634	0	True				
ANR	5768435	UnaryOperationExpression	"! strcmp ( b , ""r2preweb"" )"		5767634	0					
ANR	5768436	UnaryOperator	!		5767634	0					
ANR	5768437	CallExpression	"strcmp ( b , ""r2preweb"" )"		5767634	1					
ANR	5768438	Callee	strcmp		5767634	0					
ANR	5768439	Identifier	strcmp		5767634	0					
ANR	5768440	ArgumentList	b		5767634	1					
ANR	5768441	Argument	b		5767634	0					
ANR	5768442	Identifier	b		5767634	0					
ANR	5768443	Argument	"""r2preweb"""		5767634	1					
ANR	5768444	PrimaryExpression	"""r2preweb"""		5767634	0					
ANR	5768445	CompoundStatement		75:37:2084:2084	5767634	1					
ANR	5768446	ExpressionStatement	"r_sys_setenv ( ""RARUN2_WEB"" , ""yes"" )"	511:2:11331:11365	5767634	0	True				
ANR	5768447	CallExpression	"r_sys_setenv ( ""RARUN2_WEB"" , ""yes"" )"		5767634	0					
ANR	5768448	Callee	r_sys_setenv		5767634	0					
ANR	5768449	Identifier	r_sys_setenv		5767634	0					
ANR	5768450	ArgumentList	"""RARUN2_WEB"""		5767634	1					
ANR	5768451	Argument	"""RARUN2_WEB"""		5767634	0					
ANR	5768452	PrimaryExpression	"""RARUN2_WEB"""		5767634	0					
ANR	5768453	Argument	"""yes"""		5767634	1					
ANR	5768454	PrimaryExpression	"""yes"""		5767634	0					
ANR	5768455	ElseStatement	else		5767634	0					
ANR	5768456	IfStatement	"if ( ! strcmp ( b , ""setuid"" ) )"		5767634	0					
ANR	5768457	Condition	"! strcmp ( b , ""setuid"" )"	512:12:11379:11399	5767634	0	True				
ANR	5768458	UnaryOperationExpression	"! strcmp ( b , ""setuid"" )"		5767634	0					
ANR	5768459	UnaryOperator	!		5767634	0					
ANR	5768460	CallExpression	"strcmp ( b , ""setuid"" )"		5767634	1					
ANR	5768461	Callee	strcmp		5767634	0					
ANR	5768462	Identifier	strcmp		5767634	0					
ANR	5768463	ArgumentList	b		5767634	1					
ANR	5768464	Argument	b		5767634	0					
ANR	5768465	Identifier	b		5767634	0					
ANR	5768466	Argument	"""setuid"""		5767634	1					
ANR	5768467	PrimaryExpression	"""setuid"""		5767634	0					
ANR	5768468	CompoundStatement		77:35:2159:2159	5767634	1					
ANR	5768469	ExpressionStatement	p -> _setuid = strdup ( e )	513:2:11406:11429	5767634	0	True				
ANR	5768470	AssignmentExpression	p -> _setuid = strdup ( e )		5767634	0		=			
ANR	5768471	PtrMemberAccess	p -> _setuid		5767634	0					
ANR	5768472	Identifier	p		5767634	0					
ANR	5768473	Identifier	_setuid		5767634	1					
ANR	5768474	CallExpression	strdup ( e )		5767634	1					
ANR	5768475	Callee	strdup		5767634	0					
ANR	5768476	Identifier	strdup		5767634	0					
ANR	5768477	ArgumentList	e		5767634	1					
ANR	5768478	Argument	e		5767634	0					
ANR	5768479	Identifier	e		5767634	0					
ANR	5768480	ElseStatement	else		5767634	0					
ANR	5768481	IfStatement	"if ( ! strcmp ( b , ""seteuid"" ) )"		5767634	0					
ANR	5768482	Condition	"! strcmp ( b , ""seteuid"" )"	514:12:11443:11464	5767634	0	True				
ANR	5768483	UnaryOperationExpression	"! strcmp ( b , ""seteuid"" )"		5767634	0					
ANR	5768484	UnaryOperator	!		5767634	0					
ANR	5768485	CallExpression	"strcmp ( b , ""seteuid"" )"		5767634	1					
ANR	5768486	Callee	strcmp		5767634	0					
ANR	5768487	Identifier	strcmp		5767634	0					
ANR	5768488	ArgumentList	b		5767634	1					
ANR	5768489	Argument	b		5767634	0					
ANR	5768490	Identifier	b		5767634	0					
ANR	5768491	Argument	"""seteuid"""		5767634	1					
ANR	5768492	PrimaryExpression	"""seteuid"""		5767634	0					
ANR	5768493	CompoundStatement		79:36:2224:2224	5767634	1					
ANR	5768494	ExpressionStatement	p -> _seteuid = strdup ( e )	515:2:11471:11495	5767634	0	True				
ANR	5768495	AssignmentExpression	p -> _seteuid = strdup ( e )		5767634	0		=			
ANR	5768496	PtrMemberAccess	p -> _seteuid		5767634	0					
ANR	5768497	Identifier	p		5767634	0					
ANR	5768498	Identifier	_seteuid		5767634	1					
ANR	5768499	CallExpression	strdup ( e )		5767634	1					
ANR	5768500	Callee	strdup		5767634	0					
ANR	5768501	Identifier	strdup		5767634	0					
ANR	5768502	ArgumentList	e		5767634	1					
ANR	5768503	Argument	e		5767634	0					
ANR	5768504	Identifier	e		5767634	0					
ANR	5768505	ElseStatement	else		5767634	0					
ANR	5768506	IfStatement	"if ( ! strcmp ( b , ""setgid"" ) )"		5767634	0					
ANR	5768507	Condition	"! strcmp ( b , ""setgid"" )"	516:12:11509:11529	5767634	0	True				
ANR	5768508	UnaryOperationExpression	"! strcmp ( b , ""setgid"" )"		5767634	0					
ANR	5768509	UnaryOperator	!		5767634	0					
ANR	5768510	CallExpression	"strcmp ( b , ""setgid"" )"		5767634	1					
ANR	5768511	Callee	strcmp		5767634	0					
ANR	5768512	Identifier	strcmp		5767634	0					
ANR	5768513	ArgumentList	b		5767634	1					
ANR	5768514	Argument	b		5767634	0					
ANR	5768515	Identifier	b		5767634	0					
ANR	5768516	Argument	"""setgid"""		5767634	1					
ANR	5768517	PrimaryExpression	"""setgid"""		5767634	0					
ANR	5768518	CompoundStatement		81:35:2289:2289	5767634	1					
ANR	5768519	ExpressionStatement	p -> _setgid = strdup ( e )	517:2:11536:11559	5767634	0	True				
ANR	5768520	AssignmentExpression	p -> _setgid = strdup ( e )		5767634	0		=			
ANR	5768521	PtrMemberAccess	p -> _setgid		5767634	0					
ANR	5768522	Identifier	p		5767634	0					
ANR	5768523	Identifier	_setgid		5767634	1					
ANR	5768524	CallExpression	strdup ( e )		5767634	1					
ANR	5768525	Callee	strdup		5767634	0					
ANR	5768526	Identifier	strdup		5767634	0					
ANR	5768527	ArgumentList	e		5767634	1					
ANR	5768528	Argument	e		5767634	0					
ANR	5768529	Identifier	e		5767634	0					
ANR	5768530	ElseStatement	else		5767634	0					
ANR	5768531	IfStatement	"if ( ! strcmp ( b , ""setegid"" ) )"		5767634	0					
ANR	5768532	Condition	"! strcmp ( b , ""setegid"" )"	518:12:11573:11594	5767634	0	True				
ANR	5768533	UnaryOperationExpression	"! strcmp ( b , ""setegid"" )"		5767634	0					
ANR	5768534	UnaryOperator	!		5767634	0					
ANR	5768535	CallExpression	"strcmp ( b , ""setegid"" )"		5767634	1					
ANR	5768536	Callee	strcmp		5767634	0					
ANR	5768537	Identifier	strcmp		5767634	0					
ANR	5768538	ArgumentList	b		5767634	1					
ANR	5768539	Argument	b		5767634	0					
ANR	5768540	Identifier	b		5767634	0					
ANR	5768541	Argument	"""setegid"""		5767634	1					
ANR	5768542	PrimaryExpression	"""setegid"""		5767634	0					
ANR	5768543	CompoundStatement		83:36:2354:2354	5767634	1					
ANR	5768544	ExpressionStatement	p -> _setegid = strdup ( e )	519:2:11601:11625	5767634	0	True				
ANR	5768545	AssignmentExpression	p -> _setegid = strdup ( e )		5767634	0		=			
ANR	5768546	PtrMemberAccess	p -> _setegid		5767634	0					
ANR	5768547	Identifier	p		5767634	0					
ANR	5768548	Identifier	_setegid		5767634	1					
ANR	5768549	CallExpression	strdup ( e )		5767634	1					
ANR	5768550	Callee	strdup		5767634	0					
ANR	5768551	Identifier	strdup		5767634	0					
ANR	5768552	ArgumentList	e		5767634	1					
ANR	5768553	Argument	e		5767634	0					
ANR	5768554	Identifier	e		5767634	0					
ANR	5768555	ElseStatement	else		5767634	0					
ANR	5768556	IfStatement	"if ( ! strcmp ( b , ""nice"" ) )"		5767634	0					
ANR	5768557	Condition	"! strcmp ( b , ""nice"" )"	520:12:11639:11657	5767634	0	True				
ANR	5768558	UnaryOperationExpression	"! strcmp ( b , ""nice"" )"		5767634	0					
ANR	5768559	UnaryOperator	!		5767634	0					
ANR	5768560	CallExpression	"strcmp ( b , ""nice"" )"		5767634	1					
ANR	5768561	Callee	strcmp		5767634	0					
ANR	5768562	Identifier	strcmp		5767634	0					
ANR	5768563	ArgumentList	b		5767634	1					
ANR	5768564	Argument	b		5767634	0					
ANR	5768565	Identifier	b		5767634	0					
ANR	5768566	Argument	"""nice"""		5767634	1					
ANR	5768567	PrimaryExpression	"""nice"""		5767634	0					
ANR	5768568	CompoundStatement		85:33:2417:2417	5767634	1					
ANR	5768569	ExpressionStatement	p -> _nice = atoi ( e )	521:2:11664:11683	5767634	0	True				
ANR	5768570	AssignmentExpression	p -> _nice = atoi ( e )		5767634	0		=			
ANR	5768571	PtrMemberAccess	p -> _nice		5767634	0					
ANR	5768572	Identifier	p		5767634	0					
ANR	5768573	Identifier	_nice		5767634	1					
ANR	5768574	CallExpression	atoi ( e )		5767634	1					
ANR	5768575	Callee	atoi		5767634	0					
ANR	5768576	Identifier	atoi		5767634	0					
ANR	5768577	ArgumentList	e		5767634	1					
ANR	5768578	Argument	e		5767634	0					
ANR	5768579	Identifier	e		5767634	0					
ANR	5768580	ElseStatement	else		5767634	0					
ANR	5768581	IfStatement	"if ( ! strcmp ( b , ""timeout"" ) )"		5767634	0					
ANR	5768582	Condition	"! strcmp ( b , ""timeout"" )"	522:12:11697:11718	5767634	0	True				
ANR	5768583	UnaryOperationExpression	"! strcmp ( b , ""timeout"" )"		5767634	0					
ANR	5768584	UnaryOperator	!		5767634	0					
ANR	5768585	CallExpression	"strcmp ( b , ""timeout"" )"		5767634	1					
ANR	5768586	Callee	strcmp		5767634	0					
ANR	5768587	Identifier	strcmp		5767634	0					
ANR	5768588	ArgumentList	b		5767634	1					
ANR	5768589	Argument	b		5767634	0					
ANR	5768590	Identifier	b		5767634	0					
ANR	5768591	Argument	"""timeout"""		5767634	1					
ANR	5768592	PrimaryExpression	"""timeout"""		5767634	0					
ANR	5768593	CompoundStatement		87:36:2478:2478	5767634	1					
ANR	5768594	ExpressionStatement	p -> _timeout = atoi ( e )	523:2:11725:11747	5767634	0	True				
ANR	5768595	AssignmentExpression	p -> _timeout = atoi ( e )		5767634	0		=			
ANR	5768596	PtrMemberAccess	p -> _timeout		5767634	0					
ANR	5768597	Identifier	p		5767634	0					
ANR	5768598	Identifier	_timeout		5767634	1					
ANR	5768599	CallExpression	atoi ( e )		5767634	1					
ANR	5768600	Callee	atoi		5767634	0					
ANR	5768601	Identifier	atoi		5767634	0					
ANR	5768602	ArgumentList	e		5767634	1					
ANR	5768603	Argument	e		5767634	0					
ANR	5768604	Identifier	e		5767634	0					
ANR	5768605	ElseStatement	else		5767634	0					
ANR	5768606	IfStatement	"if ( ! strcmp ( b , ""timeoutsig"" ) )"		5767634	0					
ANR	5768607	Condition	"! strcmp ( b , ""timeoutsig"" )"	524:12:11761:11785	5767634	0	True				
ANR	5768608	UnaryOperationExpression	"! strcmp ( b , ""timeoutsig"" )"		5767634	0					
ANR	5768609	UnaryOperator	!		5767634	0					
ANR	5768610	CallExpression	"strcmp ( b , ""timeoutsig"" )"		5767634	1					
ANR	5768611	Callee	strcmp		5767634	0					
ANR	5768612	Identifier	strcmp		5767634	0					
ANR	5768613	ArgumentList	b		5767634	1					
ANR	5768614	Argument	b		5767634	0					
ANR	5768615	Identifier	b		5767634	0					
ANR	5768616	Argument	"""timeoutsig"""		5767634	1					
ANR	5768617	PrimaryExpression	"""timeoutsig"""		5767634	0					
ANR	5768618	CompoundStatement		89:39:2545:2545	5767634	1					
ANR	5768619	ExpressionStatement	p -> _timeout_sig = r_signal_from_string ( e )	525:2:11792:11834	5767634	0	True				
ANR	5768620	AssignmentExpression	p -> _timeout_sig = r_signal_from_string ( e )		5767634	0		=			
ANR	5768621	PtrMemberAccess	p -> _timeout_sig		5767634	0					
ANR	5768622	Identifier	p		5767634	0					
ANR	5768623	Identifier	_timeout_sig		5767634	1					
ANR	5768624	CallExpression	r_signal_from_string ( e )		5767634	1					
ANR	5768625	Callee	r_signal_from_string		5767634	0					
ANR	5768626	Identifier	r_signal_from_string		5767634	0					
ANR	5768627	ArgumentList	e		5767634	1					
ANR	5768628	Argument	e		5767634	0					
ANR	5768629	Identifier	e		5767634	0					
ANR	5768630	ElseStatement	else		5767634	0					
ANR	5768631	IfStatement	"if ( ! memcmp ( b , ""arg"" , 3 ) )"		5767634	0					
ANR	5768632	Condition	"! memcmp ( b , ""arg"" , 3 )"	526:12:11848:11868	5767634	0	True				
ANR	5768633	UnaryOperationExpression	"! memcmp ( b , ""arg"" , 3 )"		5767634	0					
ANR	5768634	UnaryOperator	!		5767634	0					
ANR	5768635	CallExpression	"memcmp ( b , ""arg"" , 3 )"		5767634	1					
ANR	5768636	Callee	memcmp		5767634	0					
ANR	5768637	Identifier	memcmp		5767634	0					
ANR	5768638	ArgumentList	b		5767634	1					
ANR	5768639	Argument	b		5767634	0					
ANR	5768640	Identifier	b		5767634	0					
ANR	5768641	Argument	"""arg"""		5767634	1					
ANR	5768642	PrimaryExpression	"""arg"""		5767634	0					
ANR	5768643	Argument	3		5767634	2					
ANR	5768644	PrimaryExpression	3		5767634	0					
ANR	5768645	CompoundStatement		92:2:2632:2652	5767634	1					
ANR	5768646	IdentifierDeclStatement	int n = atoi ( b + 3 ) ;	527:2:11875:11895	5767634	0	True				
ANR	5768647	IdentifierDecl	n = atoi ( b + 3 )		5767634	0					
ANR	5768648	IdentifierDeclType	int		5767634	0					
ANR	5768649	Identifier	n		5767634	1					
ANR	5768650	AssignmentExpression	n = atoi ( b + 3 )		5767634	2		=			
ANR	5768651	Identifier	n		5767634	0					
ANR	5768652	CallExpression	atoi ( b + 3 )		5767634	1					
ANR	5768653	Callee	atoi		5767634	0					
ANR	5768654	Identifier	atoi		5767634	0					
ANR	5768655	ArgumentList	b + 3		5767634	1					
ANR	5768656	Argument	b + 3		5767634	0					
ANR	5768657	AdditiveExpression	b + 3		5767634	0		+			
ANR	5768658	Identifier	b		5767634	0					
ANR	5768659	PrimaryExpression	3		5767634	1					
ANR	5768660	IfStatement	if ( n >= 0 && n < R_RUN_PROFILE_NARGS )		5767634	1					
ANR	5768661	Condition	n >= 0 && n < R_RUN_PROFILE_NARGS	528:6:11903:11935	5767634	0	True				
ANR	5768662	AndExpression	n >= 0 && n < R_RUN_PROFILE_NARGS		5767634	0		&&			
ANR	5768663	RelationalExpression	n >= 0		5767634	0		>=			
ANR	5768664	Identifier	n		5767634	0					
ANR	5768665	PrimaryExpression	0		5767634	1					
ANR	5768666	RelationalExpression	n < R_RUN_PROFILE_NARGS		5767634	1		<			
ANR	5768667	Identifier	n		5767634	0					
ANR	5768668	Identifier	R_RUN_PROFILE_NARGS		5767634	1					
ANR	5768669	CompoundStatement		93:41:2695:2695	5767634	1					
ANR	5768670	ExpressionStatement	p -> _args [ n ] = getstr ( e )	529:3:11943:11967	5767634	0	True				
ANR	5768671	AssignmentExpression	p -> _args [ n ] = getstr ( e )		5767634	0		=			
ANR	5768672	ArrayIndexing	p -> _args [ n ]		5767634	0					
ANR	5768673	PtrMemberAccess	p -> _args		5767634	0					
ANR	5768674	Identifier	p		5767634	0					
ANR	5768675	Identifier	_args		5767634	1					
ANR	5768676	Identifier	n		5767634	1					
ANR	5768677	CallExpression	getstr ( e )		5767634	1					
ANR	5768678	Callee	getstr		5767634	0					
ANR	5768679	Identifier	getstr		5767634	0					
ANR	5768680	ArgumentList	e		5767634	1					
ANR	5768681	Argument	e		5767634	0					
ANR	5768682	Identifier	e		5767634	0					
ANR	5768683	ExpressionStatement	p -> _argc ++	530:3:11972:11982	5767634	1	True				
ANR	5768684	PostIncDecOperationExpression	p -> _argc ++		5767634	0					
ANR	5768685	PtrMemberAccess	p -> _argc		5767634	0					
ANR	5768686	Identifier	p		5767634	0					
ANR	5768687	Identifier	_argc		5767634	1					
ANR	5768688	IncDec	++		5767634	1					
ANR	5768689	ElseStatement	else		5767634	0					
ANR	5768690	CompoundStatement		96:9:2750:2750	5767634	0					
ANR	5768691	ExpressionStatement	"eprintf ( ""Out of bounds args index: %d\\n"" , n )"	532:3:11998:12043	5767634	0	True				
ANR	5768692	CallExpression	"eprintf ( ""Out of bounds args index: %d\\n"" , n )"		5767634	0					
ANR	5768693	Callee	eprintf		5767634	0					
ANR	5768694	Identifier	eprintf		5767634	0					
ANR	5768695	ArgumentList	"""Out of bounds args index: %d\\n"""		5767634	1					
ANR	5768696	Argument	"""Out of bounds args index: %d\\n"""		5767634	0					
ANR	5768697	PrimaryExpression	"""Out of bounds args index: %d\\n"""		5767634	0					
ANR	5768698	Argument	n		5767634	1					
ANR	5768699	Identifier	n		5767634	0					
ANR	5768700	ElseStatement	else		5767634	0					
ANR	5768701	IfStatement	"if ( ! strcmp ( b , ""envfile"" ) )"		5767634	0					
ANR	5768702	Condition	"! strcmp ( b , ""envfile"" )"	534:12:12061:12082	5767634	0	True				
ANR	5768703	UnaryOperationExpression	"! strcmp ( b , ""envfile"" )"		5767634	0					
ANR	5768704	UnaryOperator	!		5767634	0					
ANR	5768705	CallExpression	"strcmp ( b , ""envfile"" )"		5767634	1					
ANR	5768706	Callee	strcmp		5767634	0					
ANR	5768707	Identifier	strcmp		5767634	0					
ANR	5768708	ArgumentList	b		5767634	1					
ANR	5768709	Argument	b		5767634	0					
ANR	5768710	Identifier	b		5767634	0					
ANR	5768711	Argument	"""envfile"""		5767634	1					
ANR	5768712	PrimaryExpression	"""envfile"""		5767634	0					
ANR	5768713	CompoundStatement		102:2:2882:2917	5767634	1					
ANR	5768714	IdentifierDeclStatement	"char * p , buf [ 1024 ] ;"	535:2:12089:12107	5767634	0	True				
ANR	5768715	IdentifierDecl	* p		5767634	0					
ANR	5768716	IdentifierDeclType	char *		5767634	0					
ANR	5768717	Identifier	p		5767634	1					
ANR	5768718	IdentifierDecl	buf [ 1024 ]		5767634	1					
ANR	5768719	IdentifierDeclType	char [ 1024 ]		5767634	0					
ANR	5768720	Identifier	buf		5767634	1					
ANR	5768721	PrimaryExpression	1024		5767634	2					
ANR	5768722	IdentifierDeclStatement	size_t len ;	536:2:12111:12121	5767634	1	True				
ANR	5768723	IdentifierDecl	len		5767634	0					
ANR	5768724	IdentifierDeclType	size_t		5767634	0					
ANR	5768725	Identifier	len		5767634	1					
ANR	5768726	IdentifierDeclStatement	"FILE * fd = r_sandbox_fopen ( e , ""r"" ) ;"	537:2:12125:12160	5767634	2	True				
ANR	5768727	IdentifierDecl	"* fd = r_sandbox_fopen ( e , ""r"" )"		5767634	0					
ANR	5768728	IdentifierDeclType	FILE *		5767634	0					
ANR	5768729	Identifier	fd		5767634	1					
ANR	5768730	AssignmentExpression	"* fd = r_sandbox_fopen ( e , ""r"" )"		5767634	2		=			
ANR	5768731	Identifier	fd		5767634	0					
ANR	5768732	CallExpression	"r_sandbox_fopen ( e , ""r"" )"		5767634	1					
ANR	5768733	Callee	r_sandbox_fopen		5767634	0					
ANR	5768734	Identifier	r_sandbox_fopen		5767634	0					
ANR	5768735	ArgumentList	e		5767634	1					
ANR	5768736	Argument	e		5767634	0					
ANR	5768737	Identifier	e		5767634	0					
ANR	5768738	Argument	"""r"""		5767634	1					
ANR	5768739	PrimaryExpression	"""r"""		5767634	0					
ANR	5768740	IfStatement	if ( ! fd )		5767634	3					
ANR	5768741	Condition	! fd	538:6:12168:12170	5767634	0	True				
ANR	5768742	UnaryOperationExpression	! fd		5767634	0					
ANR	5768743	UnaryOperator	!		5767634	0					
ANR	5768744	Identifier	fd		5767634	1					
ANR	5768745	CompoundStatement		103:11:2930:2930	5767634	1					
ANR	5768746	ExpressionStatement	"eprintf ( ""Cannot open '%s'\\n"" , e )"	539:3:12178:12211	5767634	0	True				
ANR	5768747	CallExpression	"eprintf ( ""Cannot open '%s'\\n"" , e )"		5767634	0					
ANR	5768748	Callee	eprintf		5767634	0					
ANR	5768749	Identifier	eprintf		5767634	0					
ANR	5768750	ArgumentList	"""Cannot open '%s'\\n"""		5767634	1					
ANR	5768751	Argument	"""Cannot open '%s'\\n"""		5767634	0					
ANR	5768752	PrimaryExpression	"""Cannot open '%s'\\n"""		5767634	0					
ANR	5768753	Argument	e		5767634	1					
ANR	5768754	Identifier	e		5767634	0					
ANR	5768755	IfStatement	if ( must_free == true )		5767634	1					
ANR	5768756	Condition	must_free == true	540:7:12220:12236	5767634	0	True				
ANR	5768757	EqualityExpression	must_free == true		5767634	0		==			
ANR	5768758	Identifier	must_free		5767634	0					
ANR	5768759	Identifier	true		5767634	1					
ANR	5768760	CompoundStatement		105:26:2996:2996	5767634	1					
ANR	5768761	ExpressionStatement	free ( e )	541:4:12245:12253	5767634	0	True				
ANR	5768762	CallExpression	free ( e )		5767634	0					
ANR	5768763	Callee	free		5767634	0					
ANR	5768764	Identifier	free		5767634	0					
ANR	5768765	ArgumentList	e		5767634	1					
ANR	5768766	Argument	e		5767634	0					
ANR	5768767	Identifier	e		5767634	0					
ANR	5768768	ReturnStatement	return false ;	543:3:12263:12275	5767634	2	True				
ANR	5768769	Identifier	false		5767634	0					
ANR	5768770	ForStatement	for ( ; ; )		5767634	4					
ANR	5768771	CompoundStatement		110:11:3049:3049	5767634	0					
ANR	5768772	IfStatement	"if ( ! fgets ( buf , sizeof ( buf ) - 1 , fd ) )"		5767634	0					
ANR	5768773	Condition	"! fgets ( buf , sizeof ( buf ) - 1 , fd )"	546:7:12301:12334	5767634	0	True				
ANR	5768774	UnaryOperationExpression	"! fgets ( buf , sizeof ( buf ) - 1 , fd )"		5767634	0					
ANR	5768775	UnaryOperator	!		5767634	0					
ANR	5768776	CallExpression	"fgets ( buf , sizeof ( buf ) - 1 , fd )"		5767634	1					
ANR	5768777	Callee	fgets		5767634	0					
ANR	5768778	Identifier	fgets		5767634	0					
ANR	5768779	ArgumentList	buf		5767634	1					
ANR	5768780	Argument	buf		5767634	0					
ANR	5768781	Identifier	buf		5767634	0					
ANR	5768782	Argument	sizeof ( buf ) - 1		5767634	1					
ANR	5768783	AdditiveExpression	sizeof ( buf ) - 1		5767634	0		-			
ANR	5768784	SizeofExpression	sizeof ( buf )		5767634	0					
ANR	5768785	Sizeof	sizeof		5767634	0					
ANR	5768786	SizeofOperand	buf		5767634	1					
ANR	5768787	PrimaryExpression	1		5767634	1					
ANR	5768788	Argument	fd		5767634	2					
ANR	5768789	Identifier	fd		5767634	0					
ANR	5768790	CompoundStatement		111:43:3094:3094	5767634	1					
ANR	5768791	BreakStatement	break ;	547:4:12343:12348	5767634	0	True				
ANR	5768792	IfStatement	if ( feof ( fd ) )		5767634	1					
ANR	5768793	Condition	feof ( fd )	549:7:12362:12370	5767634	0	True				
ANR	5768794	CallExpression	feof ( fd )		5767634	0					
ANR	5768795	Callee	feof		5767634	0					
ANR	5768796	Identifier	feof		5767634	0					
ANR	5768797	ArgumentList	fd		5767634	1					
ANR	5768798	Argument	fd		5767634	0					
ANR	5768799	Identifier	fd		5767634	0					
ANR	5768800	CompoundStatement		114:18:3130:3130	5767634	1					
ANR	5768801	BreakStatement	break ;	550:4:12379:12384	5767634	0	True				
ANR	5768802	ExpressionStatement	"p = strchr ( buf , '=' )"	552:3:12394:12415	5767634	2	True				
ANR	5768803	AssignmentExpression	"p = strchr ( buf , '=' )"		5767634	0		=			
ANR	5768804	Identifier	p		5767634	0					
ANR	5768805	CallExpression	"strchr ( buf , '=' )"		5767634	1					
ANR	5768806	Callee	strchr		5767634	0					
ANR	5768807	Identifier	strchr		5767634	0					
ANR	5768808	ArgumentList	buf		5767634	1					
ANR	5768809	Argument	buf		5767634	0					
ANR	5768810	Identifier	buf		5767634	0					
ANR	5768811	Argument	'='		5767634	1					
ANR	5768812	PrimaryExpression	'='		5767634	0					
ANR	5768813	IfStatement	if ( p )		5767634	3					
ANR	5768814	Condition	p	553:7:12424:12424	5767634	0	True				
ANR	5768815	Identifier	p		5767634	0					
ANR	5768816	CompoundStatement		118:10:3184:3184	5767634	1					
ANR	5768817	ExpressionStatement	* p ++ = 0	554:4:12433:12441	5767634	0	True				
ANR	5768818	AssignmentExpression	* p ++ = 0		5767634	0		=			
ANR	5768819	UnaryOperationExpression	* p ++		5767634	0					
ANR	5768820	UnaryOperator	*		5767634	0					
ANR	5768821	PostIncDecOperationExpression	p ++		5767634	1					
ANR	5768822	Identifier	p		5767634	0					
ANR	5768823	IncDec	++		5767634	1					
ANR	5768824	PrimaryExpression	0		5767634	1					
ANR	5768825	ExpressionStatement	len = strlen ( p )	555:4:12447:12463	5767634	1	True				
ANR	5768826	AssignmentExpression	len = strlen ( p )		5767634	0		=			
ANR	5768827	Identifier	len		5767634	0					
ANR	5768828	CallExpression	strlen ( p )		5767634	1					
ANR	5768829	Callee	strlen		5767634	0					
ANR	5768830	Identifier	strlen		5767634	0					
ANR	5768831	ArgumentList	p		5767634	1					
ANR	5768832	Argument	p		5767634	0					
ANR	5768833	Identifier	p		5767634	0					
ANR	5768834	IfStatement	if ( len > 0 && p [ len - 1 ] == '\\n' )		5767634	2					
ANR	5768835	Condition	len > 0 && p [ len - 1 ] == '\\n'	556:8:12473:12501	5767634	0	True				
ANR	5768836	AndExpression	len > 0 && p [ len - 1 ] == '\\n'		5767634	0		&&			
ANR	5768837	RelationalExpression	len > 0		5767634	0		>			
ANR	5768838	Identifier	len		5767634	0					
ANR	5768839	PrimaryExpression	0		5767634	1					
ANR	5768840	EqualityExpression	p [ len - 1 ] == '\\n'		5767634	1		==			
ANR	5768841	ArrayIndexing	p [ len - 1 ]		5767634	0					
ANR	5768842	Identifier	p		5767634	0					
ANR	5768843	AdditiveExpression	len - 1		5767634	1		-			
ANR	5768844	Identifier	len		5767634	0					
ANR	5768845	PrimaryExpression	1		5767634	1					
ANR	5768846	PrimaryExpression	'\\n'		5767634	1					
ANR	5768847	CompoundStatement		121:39:3261:3261	5767634	1					
ANR	5768848	ExpressionStatement	p [ len - 1 ] = 0	557:5:12511:12525	5767634	0	True				
ANR	5768849	AssignmentExpression	p [ len - 1 ] = 0		5767634	0		=			
ANR	5768850	ArrayIndexing	p [ len - 1 ]		5767634	0					
ANR	5768851	Identifier	p		5767634	0					
ANR	5768852	AdditiveExpression	len - 1		5767634	1		-			
ANR	5768853	Identifier	len		5767634	0					
ANR	5768854	PrimaryExpression	1		5767634	1					
ANR	5768855	PrimaryExpression	0		5767634	1					
ANR	5768856	IfStatement	if ( len > 1 && p [ len - 2 ] == '\\r' )		5767634	3					
ANR	5768857	Condition	len > 1 && p [ len - 2 ] == '\\r'	559:8:12541:12569	5767634	0	True				
ANR	5768858	AndExpression	len > 1 && p [ len - 2 ] == '\\r'		5767634	0		&&			
ANR	5768859	RelationalExpression	len > 1		5767634	0		>			
ANR	5768860	Identifier	len		5767634	0					
ANR	5768861	PrimaryExpression	1		5767634	1					
ANR	5768862	EqualityExpression	p [ len - 2 ] == '\\r'		5767634	1		==			
ANR	5768863	ArrayIndexing	p [ len - 2 ]		5767634	0					
ANR	5768864	Identifier	p		5767634	0					
ANR	5768865	AdditiveExpression	len - 2		5767634	1		-			
ANR	5768866	Identifier	len		5767634	0					
ANR	5768867	PrimaryExpression	2		5767634	1					
ANR	5768868	PrimaryExpression	'\\r'		5767634	1					
ANR	5768869	CompoundStatement		124:39:3329:3329	5767634	1					
ANR	5768870	ExpressionStatement	p [ len - 2 ] = 0	560:5:12579:12593	5767634	0	True				
ANR	5768871	AssignmentExpression	p [ len - 2 ] = 0		5767634	0		=			
ANR	5768872	ArrayIndexing	p [ len - 2 ]		5767634	0					
ANR	5768873	Identifier	p		5767634	0					
ANR	5768874	AdditiveExpression	len - 2		5767634	1		-			
ANR	5768875	Identifier	len		5767634	0					
ANR	5768876	PrimaryExpression	2		5767634	1					
ANR	5768877	PrimaryExpression	0		5767634	1					
ANR	5768878	ExpressionStatement	"r_sys_setenv ( buf , p )"	562:4:12605:12626	5767634	4	True				
ANR	5768879	CallExpression	"r_sys_setenv ( buf , p )"		5767634	0					
ANR	5768880	Callee	r_sys_setenv		5767634	0					
ANR	5768881	Identifier	r_sys_setenv		5767634	0					
ANR	5768882	ArgumentList	buf		5767634	1					
ANR	5768883	Argument	buf		5767634	0					
ANR	5768884	Identifier	buf		5767634	0					
ANR	5768885	Argument	p		5767634	1					
ANR	5768886	Identifier	p		5767634	0					
ANR	5768887	ExpressionStatement	fclose ( fd )	565:2:12639:12650	5767634	5	True				
ANR	5768888	CallExpression	fclose ( fd )		5767634	0					
ANR	5768889	Callee	fclose		5767634	0					
ANR	5768890	Identifier	fclose		5767634	0					
ANR	5768891	ArgumentList	fd		5767634	1					
ANR	5768892	Argument	fd		5767634	0					
ANR	5768893	Identifier	fd		5767634	0					
ANR	5768894	ElseStatement	else		5767634	0					
ANR	5768895	IfStatement	"if ( ! strcmp ( b , ""unsetenv"" ) )"		5767634	0					
ANR	5768896	Condition	"! strcmp ( b , ""unsetenv"" )"	566:12:12664:12686	5767634	0	True				
ANR	5768897	UnaryOperationExpression	"! strcmp ( b , ""unsetenv"" )"		5767634	0					
ANR	5768898	UnaryOperator	!		5767634	0					
ANR	5768899	CallExpression	"strcmp ( b , ""unsetenv"" )"		5767634	1					
ANR	5768900	Callee	strcmp		5767634	0					
ANR	5768901	Identifier	strcmp		5767634	0					
ANR	5768902	ArgumentList	b		5767634	1					
ANR	5768903	Argument	b		5767634	0					
ANR	5768904	Identifier	b		5767634	0					
ANR	5768905	Argument	"""unsetenv"""		5767634	1					
ANR	5768906	PrimaryExpression	"""unsetenv"""		5767634	0					
ANR	5768907	CompoundStatement		131:37:3446:3446	5767634	1					
ANR	5768908	ExpressionStatement	"r_sys_setenv ( e , NULL )"	567:2:12693:12715	5767634	0	True				
ANR	5768909	CallExpression	"r_sys_setenv ( e , NULL )"		5767634	0					
ANR	5768910	Callee	r_sys_setenv		5767634	0					
ANR	5768911	Identifier	r_sys_setenv		5767634	0					
ANR	5768912	ArgumentList	e		5767634	1					
ANR	5768913	Argument	e		5767634	0					
ANR	5768914	Identifier	e		5767634	0					
ANR	5768915	Argument	NULL		5767634	1					
ANR	5768916	Identifier	NULL		5767634	0					
ANR	5768917	ElseStatement	else		5767634	0					
ANR	5768918	IfStatement	"if ( ! strcmp ( b , ""setenv"" ) )"		5767634	0					
ANR	5768919	Condition	"! strcmp ( b , ""setenv"" )"	568:12:12729:12749	5767634	0	True				
ANR	5768920	UnaryOperationExpression	"! strcmp ( b , ""setenv"" )"		5767634	0					
ANR	5768921	UnaryOperator	!		5767634	0					
ANR	5768922	CallExpression	"strcmp ( b , ""setenv"" )"		5767634	1					
ANR	5768923	Callee	strcmp		5767634	0					
ANR	5768924	Identifier	strcmp		5767634	0					
ANR	5768925	ArgumentList	b		5767634	1					
ANR	5768926	Argument	b		5767634	0					
ANR	5768927	Identifier	b		5767634	0					
ANR	5768928	Argument	"""setenv"""		5767634	1					
ANR	5768929	PrimaryExpression	"""setenv"""		5767634	0					
ANR	5768930	CompoundStatement		134:2:3513:3542	5767634	1					
ANR	5768931	IdentifierDeclStatement	"char * V , * v = strchr ( e , '=' ) ;"	569:2:12756:12785	5767634	0	True				
ANR	5768932	IdentifierDecl	* V		5767634	0					
ANR	5768933	IdentifierDeclType	char *		5767634	0					
ANR	5768934	Identifier	V		5767634	1					
ANR	5768935	IdentifierDecl	"* v = strchr ( e , '=' )"		5767634	1					
ANR	5768936	IdentifierDeclType	char *		5767634	0					
ANR	5768937	Identifier	v		5767634	1					
ANR	5768938	AssignmentExpression	"* v = strchr ( e , '=' )"		5767634	2		=			
ANR	5768939	Identifier	v		5767634	0					
ANR	5768940	CallExpression	"strchr ( e , '=' )"		5767634	1					
ANR	5768941	Callee	strchr		5767634	0					
ANR	5768942	Identifier	strchr		5767634	0					
ANR	5768943	ArgumentList	e		5767634	1					
ANR	5768944	Argument	e		5767634	0					
ANR	5768945	Identifier	e		5767634	0					
ANR	5768946	Argument	'='		5767634	1					
ANR	5768947	PrimaryExpression	'='		5767634	0					
ANR	5768948	IfStatement	if ( v )		5767634	1					
ANR	5768949	Condition	v	570:6:12793:12793	5767634	0	True				
ANR	5768950	Identifier	v		5767634	0					
ANR	5768951	CompoundStatement		135:9:3553:3553	5767634	1					
ANR	5768952	ExpressionStatement	* v ++ = 0	571:3:12801:12809	5767634	0	True				
ANR	5768953	AssignmentExpression	* v ++ = 0		5767634	0		=			
ANR	5768954	UnaryOperationExpression	* v ++		5767634	0					
ANR	5768955	UnaryOperator	*		5767634	0					
ANR	5768956	PostIncDecOperationExpression	v ++		5767634	1					
ANR	5768957	Identifier	v		5767634	0					
ANR	5768958	IncDec	++		5767634	1					
ANR	5768959	PrimaryExpression	0		5767634	1					
ANR	5768960	ExpressionStatement	V = getstr ( v )	572:3:12814:12828	5767634	1	True				
ANR	5768961	AssignmentExpression	V = getstr ( v )		5767634	0		=			
ANR	5768962	Identifier	V		5767634	0					
ANR	5768963	CallExpression	getstr ( v )		5767634	1					
ANR	5768964	Callee	getstr		5767634	0					
ANR	5768965	Identifier	getstr		5767634	0					
ANR	5768966	ArgumentList	v		5767634	1					
ANR	5768967	Argument	v		5767634	0					
ANR	5768968	Identifier	v		5767634	0					
ANR	5768969	ExpressionStatement	"r_sys_setenv ( e , V )"	573:3:12833:12852	5767634	2	True				
ANR	5768970	CallExpression	"r_sys_setenv ( e , V )"		5767634	0					
ANR	5768971	Callee	r_sys_setenv		5767634	0					
ANR	5768972	Identifier	r_sys_setenv		5767634	0					
ANR	5768973	ArgumentList	e		5767634	1					
ANR	5768974	Argument	e		5767634	0					
ANR	5768975	Identifier	e		5767634	0					
ANR	5768976	Argument	V		5767634	1					
ANR	5768977	Identifier	V		5767634	0					
ANR	5768978	ExpressionStatement	free ( V )	574:3:12857:12865	5767634	3	True				
ANR	5768979	CallExpression	free ( V )		5767634	0					
ANR	5768980	Callee	free		5767634	0					
ANR	5768981	Identifier	free		5767634	0					
ANR	5768982	ArgumentList	V		5767634	1					
ANR	5768983	Argument	V		5767634	0					
ANR	5768984	Identifier	V		5767634	0					
ANR	5768985	ElseStatement	else		5767634	0					
ANR	5768986	IfStatement	"if ( ! strcmp ( b , ""clearenv"" ) )"		5767634	0					
ANR	5768987	Condition	"! strcmp ( b , ""clearenv"" )"	576:12:12883:12904	5767634	0	True				
ANR	5768988	UnaryOperationExpression	"! strcmp ( b , ""clearenv"" )"		5767634	0					
ANR	5768989	UnaryOperator	!		5767634	0					
ANR	5768990	CallExpression	"strcmp ( b , ""clearenv"" )"		5767634	1					
ANR	5768991	Callee	strcmp		5767634	0					
ANR	5768992	Identifier	strcmp		5767634	0					
ANR	5768993	ArgumentList	b		5767634	1					
ANR	5768994	Argument	b		5767634	0					
ANR	5768995	Identifier	b		5767634	0					
ANR	5768996	Argument	"""clearenv"""		5767634	1					
ANR	5768997	PrimaryExpression	"""clearenv"""		5767634	0					
ANR	5768998	CompoundStatement		141:36:3664:3664	5767634	1					
ANR	5768999	ExpressionStatement	r_sys_clearenv ( )	577:2:12911:12928	5767634	0	True				
ANR	5769000	CallExpression	r_sys_clearenv ( )		5767634	0					
ANR	5769001	Callee	r_sys_clearenv		5767634	0					
ANR	5769002	Identifier	r_sys_clearenv		5767634	0					
ANR	5769003	ArgumentList			5767634	1					
ANR	5769004	IfStatement	if ( must_free == true )		5767634	7					
ANR	5769005	Condition	must_free == true	579:5:12938:12954	5767634	0	True				
ANR	5769006	EqualityExpression	must_free == true		5767634	0		==			
ANR	5769007	Identifier	must_free		5767634	0					
ANR	5769008	Identifier	true		5767634	1					
ANR	5769009	CompoundStatement		144:24:3714:3714	5767634	1					
ANR	5769010	ExpressionStatement	free ( e )	580:2:12961:12969	5767634	0	True				
ANR	5769011	CallExpression	free ( e )		5767634	0					
ANR	5769012	Callee	free		5767634	0					
ANR	5769013	Identifier	free		5767634	0					
ANR	5769014	ArgumentList	e		5767634	1					
ANR	5769015	Argument	e		5767634	0					
ANR	5769016	Identifier	e		5767634	0					
ANR	5769017	ReturnStatement	return true ;	582:1:12975:12986	5767634	8	True				
ANR	5769018	Identifier	true		5767634	0					
ANR	5769019	ReturnType	R_API bool		5767634	1					
ANR	5769020	Identifier	r_run_parseline		5767634	2					
ANR	5769021	ParameterList	"RRunProfile * p , char * b"		5767634	3					
ANR	5769022	Parameter	RRunProfile * p	436:27:9217:9230	5767634	0	True				
ANR	5769023	ParameterType	RRunProfile *		5767634	0					
ANR	5769024	Identifier	p		5767634	1					
ANR	5769025	Parameter	char * b	436:43:9233:9239	5767634	1	True				
ANR	5769026	ParameterType	char *		5767634	0					
ANR	5769027	Identifier	b		5767634	1					
ANR	5769028	CFGEntryNode	ENTRY		5767634		True				
ANR	5769029	CFGExitNode	EXIT		5767634		True				
ANR	5769030	InfiniteForNode	true		5767634		True				
ANR	5769031	Symbol	p -> _maxstack		5767634						
ANR	5769032	Symbol	p -> _stdout		5767634						
ANR	5769033	Symbol	r_sys_getenv		5767634						
ANR	5769034	Symbol	parseBool		5767634						
ANR	5769035	Symbol	strchr		5767634						
ANR	5769036	Symbol	p -> _listen		5767634						
ANR	5769037	Symbol	fgets		5767634						
ANR	5769038	Symbol	p -> _preload		5767634						
ANR	5769039	Symbol	strlen		5767634						
ANR	5769040	Symbol	p -> _aslr		5767634						
ANR	5769041	Symbol	p -> _stdio		5767634						
ANR	5769042	Symbol	p -> _stdin		5767634						
ANR	5769043	Symbol	memcmp		5767634						
ANR	5769044	Symbol	getstr		5767634						
ANR	5769045	Symbol	p -> _program		5767634						
ANR	5769046	Symbol	len		5767634						
ANR	5769047	Symbol	p -> _chroot		5767634						
ANR	5769048	Symbol	p -> _maxfd		5767634						
ANR	5769049	Symbol	p -> _pidfile		5767634						
ANR	5769050	Symbol	strcmp		5767634						
ANR	5769051	Symbol	NULL		5767634						
ANR	5769052	Symbol	p -> _maxproc		5767634						
ANR	5769053	Symbol	* v ++		5767634						
ANR	5769054	Symbol	p -> _argc		5767634						
ANR	5769055	Symbol	p -> _runlib_fcn		5767634						
ANR	5769056	Symbol	* e ++		5767634						
ANR	5769057	Symbol	p -> _chgdir		5767634						
ANR	5769058	Symbol	p -> _nice		5767634						
ANR	5769059	Symbol	must_free		5767634						
ANR	5769060	Symbol	* p -> _args		5767634						
ANR	5769061	Symbol	p -> _args		5767634						
ANR	5769062	Symbol	p -> _seteuid		5767634						
ANR	5769063	Symbol	true		5767634						
ANR	5769064	Symbol	p -> _r2preload		5767634						
ANR	5769065	Symbol	fd		5767634						
ANR	5769066	Symbol	p -> _input		5767634						
ANR	5769067	Symbol	p -> _libpath		5767634						
ANR	5769068	Symbol	p -> _docore		5767634						
ANR	5769069	Symbol	p -> _setegid		5767634						
ANR	5769070	Symbol	r_signal_from_string		5767634						
ANR	5769071	Symbol	p -> _timeout		5767634						
ANR	5769072	Symbol	V		5767634						
ANR	5769073	Symbol	* * p		5767634						
ANR	5769074	Symbol	p -> _connect		5767634						
ANR	5769075	Symbol	R_RUN_PROFILE_NARGS		5767634						
ANR	5769076	Symbol	p -> _pty		5767634						
ANR	5769077	Symbol	atoi		5767634						
ANR	5769078	Symbol	p -> _pid		5767634						
ANR	5769079	Symbol	b		5767634						
ANR	5769080	Symbol	p -> _setgid		5767634						
ANR	5769081	Symbol	e		5767634						
ANR	5769082	Symbol	* p ++		5767634						
ANR	5769083	Symbol	false		5767634						
ANR	5769084	Symbol	* b		5767634						
ANR	5769085	Symbol	p -> _bits		5767634						
ANR	5769086	Symbol	p -> _stderr		5767634						
ANR	5769087	Symbol	p -> _setuid		5767634						
ANR	5769088	Symbol	n		5767634						
ANR	5769089	Symbol	* e		5767634						
ANR	5769090	Symbol	p		5767634						
ANR	5769091	Symbol	buf		5767634						
ANR	5769092	Symbol	p -> _system		5767634						
ANR	5769093	Symbol	p -> _timeout_sig		5767634						
ANR	5769094	Symbol	p -> _runlib		5767634						
ANR	5769095	Symbol	p -> _r2sleep		5767634						
ANR	5769096	Symbol	v		5767634						
ANR	5769097	Symbol	* n		5767634						
ANR	5769098	Symbol	r_sandbox_fopen		5767634						
ANR	5769099	Symbol	feof		5767634						
ANR	5769100	Symbol	* p		5767634						
ANR	5769101	Symbol	strdup		5767634						
ANR	5769102	Symbol	p -> _dofork		5767634						
ANR	5769103	Symbol	* len		5767634						
ANR	5769104	Function	r_run_help	585:6:12997:14071							
ANR	5769105	FunctionDef	r_run_help ()		5769104	0					
ANR	5769106	CompoundStatement		585:31:13022:14071	5769104	0					
ANR	5769107	Statement	return	586:1:13025:13030	5769104	0	True				
ANR	5769108	Statement	"""program=/bin/ls\\n"""	587:1:13033:13051	5769104	1	True				
ANR	5769109	Statement	"""arg1=/bin\\n"""	588:1:13054:13066	5769104	2	True				
ANR	5769110	Statement	"""# arg2=hello\\n"""	589:1:13069:13084	5769104	3	True				
ANR	5769111	Statement	"""# arg3=\\""hello\\\\nworld\\""\\n"""	590:1:13087:13114	5769104	4	True				
ANR	5769112	Statement	"""# arg4=:048490184058104849\\n"""	591:1:13117:13146	5769104	5	True				
ANR	5769113	Statement	"""# arg5=:!ragg2 -p n50 -d 10:0x8048123\\n"""	592:1:13149:13189	5769104	6	True				
ANR	5769114	Statement	"""# arg6=@arg.txt\\n"""	593:1:13192:13210	5769104	7	True				
ANR	5769115	Statement	"""# arg7=@300@ABCD # 300 chars filled with ABCD pattern\\n"""	594:1:13213:13269	5769104	8	True				
ANR	5769116	Statement	"""# system=r2 -\\n"""	595:1:13272:13288	5769104	9	True				
ANR	5769117	Statement	"""# aslr=no\\n"""	596:1:13291:13303	5769104	10	True				
ANR	5769118	Statement	"""setenv=FOO=BAR\\n"""	597:1:13306:13323	5769104	11	True				
ANR	5769119	Statement	"""# unsetenv=FOO\\n"""	598:1:13326:13343	5769104	12	True				
ANR	5769120	Statement	"""# clearenv=true\\n"""	599:1:13346:13364	5769104	13	True				
ANR	5769121	Statement	"""# envfile=environ.txt\\n"""	600:1:13367:13391	5769104	14	True				
ANR	5769122	Statement	"""timeout=3\\n"""	601:1:13394:13406	5769104	15	True				
ANR	5769123	Statement	"""# timeoutsig=SIGTERM # or 15\\n"""	602:1:13409:13440	5769104	16	True				
ANR	5769124	Statement	"""# connect=localhost:8080\\n"""	603:1:13443:13470	5769104	17	True				
ANR	5769125	Statement	"""# listen=8080\\n"""	604:1:13473:13489	5769104	18	True				
ANR	5769126	Statement	"""# pty=false\\n"""	605:1:13492:13506	5769104	19	True				
ANR	5769127	Statement	"""# fork=true\\n"""	606:1:13509:13523	5769104	20	True				
ANR	5769128	Statement	"""# bits=32\\n"""	607:1:13526:13538	5769104	21	True				
ANR	5769129	Statement	"""# pid=0\\n"""	608:1:13541:13551	5769104	22	True				
ANR	5769130	Statement	"""# pidfile=/tmp/foo.pid\\n"""	609:1:13554:13579	5769104	23	True				
ANR	5769131	Statement	"""# #sleep=0\\n"""	610:1:13582:13595	5769104	24	True				
ANR	5769132	Statement	"""# #maxfd=0\\n"""	611:1:13598:13611	5769104	25	True				
ANR	5769133	Statement	"""# #execve=false\\n"""	612:1:13614:13632	5769104	26	True				
ANR	5769134	Statement	"""# #maxproc=0\\n"""	613:1:13635:13650	5769104	27	True				
ANR	5769135	Statement	"""# #maxstack=0\\n"""	614:1:13653:13669	5769104	28	True				
ANR	5769136	Statement	"""# #core=false\\n"""	615:1:13672:13688	5769104	29	True				
ANR	5769137	Statement	"""# #stdio=blah.txt\\n"""	616:1:13691:13711	5769104	30	True				
ANR	5769138	Statement	"""# #stderr=foo.txt\\n"""	617:1:13714:13734	5769104	31	True				
ANR	5769139	Statement	"""# stdout=foo.txt\\n"""	618:1:13737:13756	5769104	32	True				
ANR	5769140	Statement	"""# stdin=input.txt # or !program to redirect input from another program\\n"""	619:1:13759:13832	5769104	33	True				
ANR	5769141	Statement	"""# input=input.txt\\n"""	620:1:13835:13855	5769104	34	True				
ANR	5769142	Statement	"""# chdir=/\\n"""	621:1:13858:13870	5769104	35	True				
ANR	5769143	Statement	"""# chroot=/mnt/chroot\\n"""	622:1:13873:13896	5769104	36	True				
ANR	5769144	Statement	"""# libpath=$PWD:/tmp/lib\\n"""	623:1:13899:13925	5769104	37	True				
ANR	5769145	Statement	"""# r2preload=yes\\n"""	624:1:13928:13946	5769104	38	True				
ANR	5769146	Statement	"""# preload=/lib/libfoo.so\\n"""	625:1:13949:13976	5769104	39	True				
ANR	5769147	Statement	"""# setuid=2000\\n"""	626:1:13979:13995	5769104	40	True				
ANR	5769148	Statement	"""# seteuid=2000\\n"""	627:1:13998:14015	5769104	41	True				
ANR	5769149	Statement	"""# setgid=2001\\n"""	628:1:14018:14034	5769104	42	True				
ANR	5769150	Statement	"""# setegid=2001\\n"""	629:1:14037:14054	5769104	43	True				
ANR	5769151	ExpressionStatement	"""# nice=5\\n"""	630:1:14057:14069	5769104	44	True				
ANR	5769152	PrimaryExpression	"""# nice=5\\n"""		5769104	0					
ANR	5769153	ReturnType	const char *		5769104	1					
ANR	5769154	Identifier	r_run_help		5769104	2					
ANR	5769155	ParameterList			5769104	3					
ANR	5769156	CFGEntryNode	ENTRY		5769104		True				
ANR	5769157	CFGExitNode	EXIT		5769104		True				
ANR	5769158	Function	fd_forward	634:0:14087:14639							
ANR	5769159	FunctionDef	"fd_forward (int in_fd , int out_fd , char * * buff)"		5769158	0					
ANR	5769160	CompoundStatement		634:58:14145:14639	5769158	0					
ANR	5769161	IdentifierDeclStatement	int size = 0 ;	635:1:14148:14160	5769158	0	True				
ANR	5769162	IdentifierDecl	size = 0		5769158	0					
ANR	5769163	IdentifierDeclType	int		5769158	0					
ANR	5769164	Identifier	size		5769158	1					
ANR	5769165	AssignmentExpression	size = 0		5769158	2		=			
ANR	5769166	Identifier	size		5769158	0					
ANR	5769167	PrimaryExpression	0		5769158	1					
ANR	5769168	IfStatement	"if ( ioctl ( in_fd , FIONREAD , & size ) == - 1 )"		5769158	1					
ANR	5769169	Condition	"ioctl ( in_fd , FIONREAD , & size ) == - 1"	637:5:14168:14203	5769158	0	True				
ANR	5769170	EqualityExpression	"ioctl ( in_fd , FIONREAD , & size ) == - 1"		5769158	0		==			
ANR	5769171	CallExpression	"ioctl ( in_fd , FIONREAD , & size )"		5769158	0					
ANR	5769172	Callee	ioctl		5769158	0					
ANR	5769173	Identifier	ioctl		5769158	0					
ANR	5769174	ArgumentList	in_fd		5769158	1					
ANR	5769175	Argument	in_fd		5769158	0					
ANR	5769176	Identifier	in_fd		5769158	0					
ANR	5769177	Argument	FIONREAD		5769158	1					
ANR	5769178	Identifier	FIONREAD		5769158	0					
ANR	5769179	Argument	& size		5769158	2					
ANR	5769180	UnaryOperationExpression	& size		5769158	0					
ANR	5769181	UnaryOperator	&		5769158	0					
ANR	5769182	Identifier	size		5769158	1					
ANR	5769183	UnaryOperationExpression	- 1		5769158	1					
ANR	5769184	UnaryOperator	-		5769158	0					
ANR	5769185	PrimaryExpression	1		5769158	1					
ANR	5769186	CompoundStatement		4:43:60:60	5769158	1					
ANR	5769187	ExpressionStatement	"perror ( ""ioctl"" )"	638:2:14210:14226	5769158	0	True				
ANR	5769188	CallExpression	"perror ( ""ioctl"" )"		5769158	0					
ANR	5769189	Callee	perror		5769158	0					
ANR	5769190	Identifier	perror		5769158	0					
ANR	5769191	ArgumentList	"""ioctl"""		5769158	1					
ANR	5769192	Argument	"""ioctl"""		5769158	0					
ANR	5769193	PrimaryExpression	"""ioctl"""		5769158	0					
ANR	5769194	ReturnStatement	return - 1 ;	639:2:14230:14239	5769158	1	True				
ANR	5769195	UnaryOperationExpression	- 1		5769158	0					
ANR	5769196	UnaryOperator	-		5769158	0					
ANR	5769197	PrimaryExpression	1		5769158	1					
ANR	5769198	IfStatement	if ( ! size )		5769158	2					
ANR	5769199	Condition	! size	641:5:14249:14253	5769158	0	True				
ANR	5769200	UnaryOperationExpression	! size		5769158	0					
ANR	5769201	UnaryOperator	!		5769158	0					
ANR	5769202	Identifier	size		5769158	1					
ANR	5769203	CompoundStatement		8:12:110:110	5769158	1					
ANR	5769204	ReturnStatement	return - 1 ;	642:2:14304:14313	5769158	0	True				
ANR	5769205	UnaryOperationExpression	- 1		5769158	0					
ANR	5769206	UnaryOperator	-		5769158	0					
ANR	5769207	PrimaryExpression	1		5769158	1					
ANR	5769208	IdentifierDeclStatement	"char * new_buff = realloc ( * buff , size ) ;"	645:1:14320:14358	5769158	3	True				
ANR	5769209	IdentifierDecl	"* new_buff = realloc ( * buff , size )"		5769158	0					
ANR	5769210	IdentifierDeclType	char *		5769158	0					
ANR	5769211	Identifier	new_buff		5769158	1					
ANR	5769212	AssignmentExpression	"* new_buff = realloc ( * buff , size )"		5769158	2		=			
ANR	5769213	Identifier	new_buff		5769158	0					
ANR	5769214	CallExpression	"realloc ( * buff , size )"		5769158	1					
ANR	5769215	Callee	realloc		5769158	0					
ANR	5769216	Identifier	realloc		5769158	0					
ANR	5769217	ArgumentList	* buff		5769158	1					
ANR	5769218	Argument	* buff		5769158	0					
ANR	5769219	UnaryOperationExpression	* buff		5769158	0					
ANR	5769220	UnaryOperator	*		5769158	0					
ANR	5769221	Identifier	buff		5769158	1					
ANR	5769222	Argument	size		5769158	1					
ANR	5769223	Identifier	size		5769158	0					
ANR	5769224	IfStatement	if ( ! new_buff )		5769158	4					
ANR	5769225	Condition	! new_buff	646:5:14365:14373	5769158	0	True				
ANR	5769226	UnaryOperationExpression	! new_buff		5769158	0					
ANR	5769227	UnaryOperator	!		5769158	0					
ANR	5769228	Identifier	new_buff		5769158	1					
ANR	5769229	CompoundStatement		13:16:230:230	5769158	1					
ANR	5769230	ExpressionStatement	"eprintf ( ""Failed to allocate buffer for redirection"" )"	647:2:14380:14433	5769158	0	True				
ANR	5769231	CallExpression	"eprintf ( ""Failed to allocate buffer for redirection"" )"		5769158	0					
ANR	5769232	Callee	eprintf		5769158	0					
ANR	5769233	Identifier	eprintf		5769158	0					
ANR	5769234	ArgumentList	"""Failed to allocate buffer for redirection"""		5769158	1					
ANR	5769235	Argument	"""Failed to allocate buffer for redirection"""		5769158	0					
ANR	5769236	PrimaryExpression	"""Failed to allocate buffer for redirection"""		5769158	0					
ANR	5769237	ReturnStatement	return - 1 ;	648:2:14437:14446	5769158	1	True				
ANR	5769238	UnaryOperationExpression	- 1		5769158	0					
ANR	5769239	UnaryOperator	-		5769158	0					
ANR	5769240	PrimaryExpression	1		5769158	1					
ANR	5769241	ExpressionStatement	* buff = new_buff	650:1:14452:14468	5769158	5	True				
ANR	5769242	AssignmentExpression	* buff = new_buff		5769158	0		=			
ANR	5769243	UnaryOperationExpression	* buff		5769158	0					
ANR	5769244	UnaryOperator	*		5769158	0					
ANR	5769245	Identifier	buff		5769158	1					
ANR	5769246	Identifier	new_buff		5769158	1					
ANR	5769247	IfStatement	"if ( read ( in_fd , * buff , size ) != size )"		5769158	6					
ANR	5769248	Condition	"read ( in_fd , * buff , size ) != size"	651:5:14475:14507	5769158	0	True				
ANR	5769249	EqualityExpression	"read ( in_fd , * buff , size ) != size"		5769158	0		!=			
ANR	5769250	CallExpression	"read ( in_fd , * buff , size )"		5769158	0					
ANR	5769251	Callee	read		5769158	0					
ANR	5769252	Identifier	read		5769158	0					
ANR	5769253	ArgumentList	in_fd		5769158	1					
ANR	5769254	Argument	in_fd		5769158	0					
ANR	5769255	Identifier	in_fd		5769158	0					
ANR	5769256	Argument	* buff		5769158	1					
ANR	5769257	UnaryOperationExpression	* buff		5769158	0					
ANR	5769258	UnaryOperator	*		5769158	0					
ANR	5769259	Identifier	buff		5769158	1					
ANR	5769260	Argument	size		5769158	2					
ANR	5769261	Identifier	size		5769158	0					
ANR	5769262	Identifier	size		5769158	1					
ANR	5769263	CompoundStatement		18:40:364:364	5769158	1					
ANR	5769264	ExpressionStatement	"perror ( ""read"" )"	652:2:14514:14529	5769158	0	True				
ANR	5769265	CallExpression	"perror ( ""read"" )"		5769158	0					
ANR	5769266	Callee	perror		5769158	0					
ANR	5769267	Identifier	perror		5769158	0					
ANR	5769268	ArgumentList	"""read"""		5769158	1					
ANR	5769269	Argument	"""read"""		5769158	0					
ANR	5769270	PrimaryExpression	"""read"""		5769158	0					
ANR	5769271	ReturnStatement	return - 1 ;	653:2:14533:14542	5769158	1	True				
ANR	5769272	UnaryOperationExpression	- 1		5769158	0					
ANR	5769273	UnaryOperator	-		5769158	0					
ANR	5769274	PrimaryExpression	1		5769158	1					
ANR	5769275	IfStatement	"if ( write ( out_fd , * buff , size ) != size )"		5769158	7					
ANR	5769276	Condition	"write ( out_fd , * buff , size ) != size"	655:5:14552:14586	5769158	0	True				
ANR	5769277	EqualityExpression	"write ( out_fd , * buff , size ) != size"		5769158	0		!=			
ANR	5769278	CallExpression	"write ( out_fd , * buff , size )"		5769158	0					
ANR	5769279	Callee	write		5769158	0					
ANR	5769280	Identifier	write		5769158	0					
ANR	5769281	ArgumentList	out_fd		5769158	1					
ANR	5769282	Argument	out_fd		5769158	0					
ANR	5769283	Identifier	out_fd		5769158	0					
ANR	5769284	Argument	* buff		5769158	1					
ANR	5769285	UnaryOperationExpression	* buff		5769158	0					
ANR	5769286	UnaryOperator	*		5769158	0					
ANR	5769287	Identifier	buff		5769158	1					
ANR	5769288	Argument	size		5769158	2					
ANR	5769289	Identifier	size		5769158	0					
ANR	5769290	Identifier	size		5769158	1					
ANR	5769291	CompoundStatement		22:42:443:443	5769158	1					
ANR	5769292	ExpressionStatement	"perror ( ""write"" )"	656:2:14593:14609	5769158	0	True				
ANR	5769293	CallExpression	"perror ( ""write"" )"		5769158	0					
ANR	5769294	Callee	perror		5769158	0					
ANR	5769295	Identifier	perror		5769158	0					
ANR	5769296	ArgumentList	"""write"""		5769158	1					
ANR	5769297	Argument	"""write"""		5769158	0					
ANR	5769298	PrimaryExpression	"""write"""		5769158	0					
ANR	5769299	ReturnStatement	return - 1 ;	657:2:14613:14622	5769158	1	True				
ANR	5769300	UnaryOperationExpression	- 1		5769158	0					
ANR	5769301	UnaryOperator	-		5769158	0					
ANR	5769302	PrimaryExpression	1		5769158	1					
ANR	5769303	ReturnStatement	return 0 ;	660:1:14629:14637	5769158	8	True				
ANR	5769304	PrimaryExpression	0		5769158	0					
ANR	5769305	ReturnType	static int		5769158	1					
ANR	5769306	Identifier	fd_forward		5769158	2					
ANR	5769307	ParameterList	"int in_fd , int out_fd , char * * buff"		5769158	3					
ANR	5769308	Parameter	int in_fd	634:22:14109:14117	5769158	0	True				
ANR	5769309	ParameterType	int		5769158	0					
ANR	5769310	Identifier	in_fd		5769158	1					
ANR	5769311	Parameter	int out_fd	634:33:14120:14129	5769158	1	True				
ANR	5769312	ParameterType	int		5769158	0					
ANR	5769313	Identifier	out_fd		5769158	1					
ANR	5769314	Parameter	char * * buff	634:45:14132:14142	5769158	2	True				
ANR	5769315	ParameterType	char * *		5769158	0					
ANR	5769316	Identifier	buff		5769158	1					
ANR	5769317	CFGEntryNode	ENTRY		5769158		True				
ANR	5769318	CFGExitNode	EXIT		5769158		True				
ANR	5769319	Symbol	FIONREAD		5769158						
ANR	5769320	Symbol	new_buff		5769158						
ANR	5769321	Symbol	in_fd		5769158						
ANR	5769322	Symbol	read		5769158						
ANR	5769323	Symbol	size		5769158						
ANR	5769324	Symbol	* buff		5769158						
ANR	5769325	Symbol	& size		5769158						
ANR	5769326	Symbol	realloc		5769158						
ANR	5769327	Symbol	buff		5769158						
ANR	5769328	Symbol	write		5769158						
ANR	5769329	Symbol	ioctl		5769158						
ANR	5769330	Symbol	out_fd		5769158						
ANR	5769331	Function	redirect_socket_to_stdio	664:0:14649:14814							
ANR	5769332	FunctionDef	redirect_socket_to_stdio (RSocket * sock)		5769331	0					
ANR	5769333	CompoundStatement		664:51:14700:14814	5769331	0					
ANR	5769334	ExpressionStatement	close ( 0 )	665:1:14703:14712	5769331	0	True				
ANR	5769335	CallExpression	close ( 0 )		5769331	0					
ANR	5769336	Callee	close		5769331	0					
ANR	5769337	Identifier	close		5769331	0					
ANR	5769338	ArgumentList	0		5769331	1					
ANR	5769339	Argument	0		5769331	0					
ANR	5769340	PrimaryExpression	0		5769331	0					
ANR	5769341	ExpressionStatement	close ( 1 )	666:1:14715:14724	5769331	1	True				
ANR	5769342	CallExpression	close ( 1 )		5769331	0					
ANR	5769343	Callee	close		5769331	0					
ANR	5769344	Identifier	close		5769331	0					
ANR	5769345	ArgumentList	1		5769331	1					
ANR	5769346	Argument	1		5769331	0					
ANR	5769347	PrimaryExpression	1		5769331	0					
ANR	5769348	ExpressionStatement	close ( 2 )	667:1:14727:14736	5769331	2	True				
ANR	5769349	CallExpression	close ( 2 )		5769331	0					
ANR	5769350	Callee	close		5769331	0					
ANR	5769351	Identifier	close		5769331	0					
ANR	5769352	ArgumentList	2		5769331	1					
ANR	5769353	Argument	2		5769331	0					
ANR	5769354	PrimaryExpression	2		5769331	0					
ANR	5769355	ExpressionStatement	"dup2 ( sock -> fd , 0 )"	669:1:14740:14758	5769331	3	True				
ANR	5769356	CallExpression	"dup2 ( sock -> fd , 0 )"		5769331	0					
ANR	5769357	Callee	dup2		5769331	0					
ANR	5769358	Identifier	dup2		5769331	0					
ANR	5769359	ArgumentList	sock -> fd		5769331	1					
ANR	5769360	Argument	sock -> fd		5769331	0					
ANR	5769361	PtrMemberAccess	sock -> fd		5769331	0					
ANR	5769362	Identifier	sock		5769331	0					
ANR	5769363	Identifier	fd		5769331	1					
ANR	5769364	Argument	0		5769331	1					
ANR	5769365	PrimaryExpression	0		5769331	0					
ANR	5769366	ExpressionStatement	"dup2 ( sock -> fd , 1 )"	670:1:14761:14779	5769331	4	True				
ANR	5769367	CallExpression	"dup2 ( sock -> fd , 1 )"		5769331	0					
ANR	5769368	Callee	dup2		5769331	0					
ANR	5769369	Identifier	dup2		5769331	0					
ANR	5769370	ArgumentList	sock -> fd		5769331	1					
ANR	5769371	Argument	sock -> fd		5769331	0					
ANR	5769372	PtrMemberAccess	sock -> fd		5769331	0					
ANR	5769373	Identifier	sock		5769331	0					
ANR	5769374	Identifier	fd		5769331	1					
ANR	5769375	Argument	1		5769331	1					
ANR	5769376	PrimaryExpression	1		5769331	0					
ANR	5769377	ExpressionStatement	"dup2 ( sock -> fd , 2 )"	671:1:14782:14800	5769331	5	True				
ANR	5769378	CallExpression	"dup2 ( sock -> fd , 2 )"		5769331	0					
ANR	5769379	Callee	dup2		5769331	0					
ANR	5769380	Identifier	dup2		5769331	0					
ANR	5769381	ArgumentList	sock -> fd		5769331	1					
ANR	5769382	Argument	sock -> fd		5769331	0					
ANR	5769383	PtrMemberAccess	sock -> fd		5769331	0					
ANR	5769384	Identifier	sock		5769331	0					
ANR	5769385	Identifier	fd		5769331	1					
ANR	5769386	Argument	2		5769331	1					
ANR	5769387	PrimaryExpression	2		5769331	0					
ANR	5769388	ReturnStatement	return 0 ;	673:1:14804:14812	5769331	6	True				
ANR	5769389	PrimaryExpression	0		5769331	0					
ANR	5769390	ReturnType	static int		5769331	1					
ANR	5769391	Identifier	redirect_socket_to_stdio		5769331	2					
ANR	5769392	ParameterList	RSocket * sock		5769331	3					
ANR	5769393	Parameter	RSocket * sock	664:36:14685:14697	5769331	0	True				
ANR	5769394	ParameterType	RSocket *		5769331	0					
ANR	5769395	Identifier	sock		5769331	1					
ANR	5769396	CFGEntryNode	ENTRY		5769331		True				
ANR	5769397	CFGExitNode	EXIT		5769331		True				
ANR	5769398	Symbol	sock		5769331						
ANR	5769399	Symbol	sock -> fd		5769331						
ANR	5769400	Symbol	* sock		5769331						
ANR	5769401	Function	redirect_socket_to_pty	676:0:14817:16196							
ANR	5769402	FunctionDef	redirect_socket_to_pty (RSocket * sock)		5769401	0					
ANR	5769403	CompoundStatement		676:49:14866:16196	5769401	0					
ANR	5769404	IdentifierDeclStatement	"int fdm , fds ;"	680:1:14985:14997	5769401	0	True				
ANR	5769405	IdentifierDecl	fdm		5769401	0					
ANR	5769406	IdentifierDeclType	int		5769401	0					
ANR	5769407	Identifier	fdm		5769401	1					
ANR	5769408	IdentifierDecl	fds		5769401	1					
ANR	5769409	IdentifierDeclType	int		5769401	0					
ANR	5769410	Identifier	fds		5769401	1					
ANR	5769411	IfStatement	"if ( openpty ( & fdm , & fds , NULL , NULL , NULL ) == - 1 )"		5769401	1					
ANR	5769412	Condition	"openpty ( & fdm , & fds , NULL , NULL , NULL ) == - 1"	682:5:15005:15048	5769401	0	True				
ANR	5769413	EqualityExpression	"openpty ( & fdm , & fds , NULL , NULL , NULL ) == - 1"		5769401	0		==			
ANR	5769414	CallExpression	"openpty ( & fdm , & fds , NULL , NULL , NULL )"		5769401	0					
ANR	5769415	Callee	openpty		5769401	0					
ANR	5769416	Identifier	openpty		5769401	0					
ANR	5769417	ArgumentList	& fdm		5769401	1					
ANR	5769418	Argument	& fdm		5769401	0					
ANR	5769419	UnaryOperationExpression	& fdm		5769401	0					
ANR	5769420	UnaryOperator	&		5769401	0					
ANR	5769421	Identifier	fdm		5769401	1					
ANR	5769422	Argument	& fds		5769401	1					
ANR	5769423	UnaryOperationExpression	& fds		5769401	0					
ANR	5769424	UnaryOperator	&		5769401	0					
ANR	5769425	Identifier	fds		5769401	1					
ANR	5769426	Argument	NULL		5769401	2					
ANR	5769427	Identifier	NULL		5769401	0					
ANR	5769428	Argument	NULL		5769401	3					
ANR	5769429	Identifier	NULL		5769401	0					
ANR	5769430	Argument	NULL		5769401	4					
ANR	5769431	Identifier	NULL		5769401	0					
ANR	5769432	UnaryOperationExpression	- 1		5769401	1					
ANR	5769433	UnaryOperator	-		5769401	0					
ANR	5769434	PrimaryExpression	1		5769401	1					
ANR	5769435	CompoundStatement		7:51:184:184	5769401	1					
ANR	5769436	ExpressionStatement	"perror ( ""opening pty"" )"	683:2:15055:15077	5769401	0	True				
ANR	5769437	CallExpression	"perror ( ""opening pty"" )"		5769401	0					
ANR	5769438	Callee	perror		5769401	0					
ANR	5769439	Identifier	perror		5769401	0					
ANR	5769440	ArgumentList	"""opening pty"""		5769401	1					
ANR	5769441	Argument	"""opening pty"""		5769401	0					
ANR	5769442	PrimaryExpression	"""opening pty"""		5769401	0					
ANR	5769443	ReturnStatement	return - 1 ;	684:2:15081:15090	5769401	1	True				
ANR	5769444	UnaryOperationExpression	- 1		5769401	0					
ANR	5769445	UnaryOperator	-		5769401	0					
ANR	5769446	PrimaryExpression	1		5769401	1					
ANR	5769447	IdentifierDeclStatement	pid_t child_pid = r_sys_fork ( ) ;	687:1:15097:15128	5769401	2	True				
ANR	5769448	IdentifierDecl	child_pid = r_sys_fork ( )		5769401	0					
ANR	5769449	IdentifierDeclType	pid_t		5769401	0					
ANR	5769450	Identifier	child_pid		5769401	1					
ANR	5769451	AssignmentExpression	child_pid = r_sys_fork ( )		5769401	2		=			
ANR	5769452	Identifier	child_pid		5769401	0					
ANR	5769453	CallExpression	r_sys_fork ( )		5769401	1					
ANR	5769454	Callee	r_sys_fork		5769401	0					
ANR	5769455	Identifier	r_sys_fork		5769401	0					
ANR	5769456	ArgumentList			5769401	1					
ANR	5769457	IfStatement	if ( child_pid == - 1 )		5769401	3					
ANR	5769458	Condition	child_pid == - 1	689:5:15136:15150	5769401	0	True				
ANR	5769459	EqualityExpression	child_pid == - 1		5769401	0		==			
ANR	5769460	Identifier	child_pid		5769401	0					
ANR	5769461	UnaryOperationExpression	- 1		5769401	1					
ANR	5769462	UnaryOperator	-		5769401	0					
ANR	5769463	PrimaryExpression	1		5769401	1					
ANR	5769464	CompoundStatement		14:22:286:286	5769401	1					
ANR	5769465	ExpressionStatement	"eprintf ( ""cannot fork\\n"" )"	690:2:15157:15182	5769401	0	True				
ANR	5769466	CallExpression	"eprintf ( ""cannot fork\\n"" )"		5769401	0					
ANR	5769467	Callee	eprintf		5769401	0					
ANR	5769468	Identifier	eprintf		5769401	0					
ANR	5769469	ArgumentList	"""cannot fork\\n"""		5769401	1					
ANR	5769470	Argument	"""cannot fork\\n"""		5769401	0					
ANR	5769471	PrimaryExpression	"""cannot fork\\n"""		5769401	0					
ANR	5769472	ExpressionStatement	close ( fdm )	691:2:15186:15196	5769401	1	True				
ANR	5769473	CallExpression	close ( fdm )		5769401	0					
ANR	5769474	Callee	close		5769401	0					
ANR	5769475	Identifier	close		5769401	0					
ANR	5769476	ArgumentList	fdm		5769401	1					
ANR	5769477	Argument	fdm		5769401	0					
ANR	5769478	Identifier	fdm		5769401	0					
ANR	5769479	ExpressionStatement	close ( fds )	692:2:15200:15210	5769401	2	True				
ANR	5769480	CallExpression	close ( fds )		5769401	0					
ANR	5769481	Callee	close		5769401	0					
ANR	5769482	Identifier	close		5769401	0					
ANR	5769483	ArgumentList	fds		5769401	1					
ANR	5769484	Argument	fds		5769401	0					
ANR	5769485	Identifier	fds		5769401	0					
ANR	5769486	ReturnStatement	return - 1 ;	693:2:15214:15223	5769401	3	True				
ANR	5769487	UnaryOperationExpression	- 1		5769401	0					
ANR	5769488	UnaryOperator	-		5769401	0					
ANR	5769489	PrimaryExpression	1		5769401	1					
ANR	5769490	IfStatement	if ( child_pid == 0 )		5769401	4					
ANR	5769491	Condition	child_pid == 0	696:5:15234:15247	5769401	0	True				
ANR	5769492	EqualityExpression	child_pid == 0		5769401	0		==			
ANR	5769493	Identifier	child_pid		5769401	0					
ANR	5769494	PrimaryExpression	0		5769401	1					
ANR	5769495	CompoundStatement		27:2:468:508	5769401	1					
ANR	5769496	ExpressionStatement	close ( fds )	698:2:15273:15284	5769401	0	True				
ANR	5769497	CallExpression	close ( fds )		5769401	0					
ANR	5769498	Callee	close		5769401	0					
ANR	5769499	Identifier	close		5769401	0					
ANR	5769500	ArgumentList	fds		5769401	1					
ANR	5769501	Argument	fds		5769401	0					
ANR	5769502	Identifier	fds		5769401	0					
ANR	5769503	IdentifierDeclStatement	char * buff = NULL ;	700:2:15289:15306	5769401	1	True				
ANR	5769504	IdentifierDecl	* buff = NULL		5769401	0					
ANR	5769505	IdentifierDeclType	char *		5769401	0					
ANR	5769506	Identifier	buff		5769401	1					
ANR	5769507	AssignmentExpression	* buff = NULL		5769401	2		=			
ANR	5769508	Identifier	NULL		5769401	0					
ANR	5769509	Identifier	NULL		5769401	1					
ANR	5769510	IdentifierDeclStatement	int sockfd = sock -> fd ;	701:2:15310:15331	5769401	2	True				
ANR	5769511	IdentifierDecl	sockfd = sock -> fd		5769401	0					
ANR	5769512	IdentifierDeclType	int		5769401	0					
ANR	5769513	Identifier	sockfd		5769401	1					
ANR	5769514	AssignmentExpression	sockfd = sock -> fd		5769401	2		=			
ANR	5769515	Identifier	sockfd		5769401	0					
ANR	5769516	PtrMemberAccess	sock -> fd		5769401	1					
ANR	5769517	Identifier	sock		5769401	0					
ANR	5769518	Identifier	fd		5769401	1					
ANR	5769519	IdentifierDeclStatement	int max_fd = fdm > sockfd ? fdm : sockfd ;	702:2:15335:15375	5769401	3	True				
ANR	5769520	IdentifierDecl	max_fd = fdm > sockfd ? fdm : sockfd		5769401	0					
ANR	5769521	IdentifierDeclType	int		5769401	0					
ANR	5769522	Identifier	max_fd		5769401	1					
ANR	5769523	AssignmentExpression	max_fd = fdm > sockfd ? fdm : sockfd		5769401	2		=			
ANR	5769524	Identifier	max_fd		5769401	0					
ANR	5769525	ConditionalExpression	fdm > sockfd ? fdm : sockfd		5769401	1					
ANR	5769526	Condition	fdm > sockfd		5769401	0					
ANR	5769527	RelationalExpression	fdm > sockfd		5769401	0		>			
ANR	5769528	Identifier	fdm		5769401	0					
ANR	5769529	Identifier	sockfd		5769401	1					
ANR	5769530	Identifier	fdm		5769401	1					
ANR	5769531	Identifier	sockfd		5769401	2					
ANR	5769532	WhileStatement	while ( true )		5769401	4					
ANR	5769533	Condition	true	704:9:15387:15390	5769401	0	True				
ANR	5769534	Identifier	true		5769401	0					
ANR	5769535	CompoundStatement		30:3:531:545	5769401	1					
ANR	5769536	IdentifierDeclStatement	fd_set readfds ;	705:3:15398:15412	5769401	0	True				
ANR	5769537	IdentifierDecl	readfds		5769401	0					
ANR	5769538	IdentifierDeclType	fd_set		5769401	0					
ANR	5769539	Identifier	readfds		5769401	1					
ANR	5769540	ExpressionStatement	FD_ZERO ( & readfds )	706:3:15417:15435	5769401	1	True				
ANR	5769541	CallExpression	FD_ZERO ( & readfds )		5769401	0					
ANR	5769542	Callee	FD_ZERO		5769401	0					
ANR	5769543	Identifier	FD_ZERO		5769401	0					
ANR	5769544	ArgumentList	& readfds		5769401	1					
ANR	5769545	Argument	& readfds		5769401	0					
ANR	5769546	UnaryOperationExpression	& readfds		5769401	0					
ANR	5769547	UnaryOperator	&		5769401	0					
ANR	5769548	Identifier	readfds		5769401	1					
ANR	5769549	ExpressionStatement	"FD_SET ( fdm , & readfds )"	707:3:15440:15462	5769401	2	True				
ANR	5769550	CallExpression	"FD_SET ( fdm , & readfds )"		5769401	0					
ANR	5769551	Callee	FD_SET		5769401	0					
ANR	5769552	Identifier	FD_SET		5769401	0					
ANR	5769553	ArgumentList	fdm		5769401	1					
ANR	5769554	Argument	fdm		5769401	0					
ANR	5769555	Identifier	fdm		5769401	0					
ANR	5769556	Argument	& readfds		5769401	1					
ANR	5769557	UnaryOperationExpression	& readfds		5769401	0					
ANR	5769558	UnaryOperator	&		5769401	0					
ANR	5769559	Identifier	readfds		5769401	1					
ANR	5769560	ExpressionStatement	"FD_SET ( sockfd , & readfds )"	708:3:15467:15492	5769401	3	True				
ANR	5769561	CallExpression	"FD_SET ( sockfd , & readfds )"		5769401	0					
ANR	5769562	Callee	FD_SET		5769401	0					
ANR	5769563	Identifier	FD_SET		5769401	0					
ANR	5769564	ArgumentList	sockfd		5769401	1					
ANR	5769565	Argument	sockfd		5769401	0					
ANR	5769566	Identifier	sockfd		5769401	0					
ANR	5769567	Argument	& readfds		5769401	1					
ANR	5769568	UnaryOperationExpression	& readfds		5769401	0					
ANR	5769569	UnaryOperator	&		5769401	0					
ANR	5769570	Identifier	readfds		5769401	1					
ANR	5769571	IfStatement	"if ( select ( max_fd + 1 , & readfds , NULL , NULL , NULL ) == - 1 )"		5769401	4					
ANR	5769572	Condition	"select ( max_fd + 1 , & readfds , NULL , NULL , NULL ) == - 1"	710:7:15502:15554	5769401	0	True				
ANR	5769573	EqualityExpression	"select ( max_fd + 1 , & readfds , NULL , NULL , NULL ) == - 1"		5769401	0		==			
ANR	5769574	CallExpression	"select ( max_fd + 1 , & readfds , NULL , NULL , NULL )"		5769401	0					
ANR	5769575	Callee	select		5769401	0					
ANR	5769576	Identifier	select		5769401	0					
ANR	5769577	ArgumentList	max_fd + 1		5769401	1					
ANR	5769578	Argument	max_fd + 1		5769401	0					
ANR	5769579	AdditiveExpression	max_fd + 1		5769401	0		+			
ANR	5769580	Identifier	max_fd		5769401	0					
ANR	5769581	PrimaryExpression	1		5769401	1					
ANR	5769582	Argument	& readfds		5769401	1					
ANR	5769583	UnaryOperationExpression	& readfds		5769401	0					
ANR	5769584	UnaryOperator	&		5769401	0					
ANR	5769585	Identifier	readfds		5769401	1					
ANR	5769586	Argument	NULL		5769401	2					
ANR	5769587	Identifier	NULL		5769401	0					
ANR	5769588	Argument	NULL		5769401	3					
ANR	5769589	Identifier	NULL		5769401	0					
ANR	5769590	Argument	NULL		5769401	4					
ANR	5769591	Identifier	NULL		5769401	0					
ANR	5769592	UnaryOperationExpression	- 1		5769401	1					
ANR	5769593	UnaryOperator	-		5769401	0					
ANR	5769594	PrimaryExpression	1		5769401	1					
ANR	5769595	CompoundStatement		35:62:690:690	5769401	1					
ANR	5769596	ExpressionStatement	"perror ( ""select error"" )"	711:4:15563:15586	5769401	0	True				
ANR	5769597	CallExpression	"perror ( ""select error"" )"		5769401	0					
ANR	5769598	Callee	perror		5769401	0					
ANR	5769599	Identifier	perror		5769401	0					
ANR	5769600	ArgumentList	"""select error"""		5769401	1					
ANR	5769601	Argument	"""select error"""		5769401	0					
ANR	5769602	PrimaryExpression	"""select error"""		5769401	0					
ANR	5769603	BreakStatement	break ;	712:4:15592:15597	5769401	1	True				
ANR	5769604	IfStatement	"if ( FD_ISSET ( fdm , & readfds ) )"		5769401	5					
ANR	5769605	Condition	"FD_ISSET ( fdm , & readfds )"	715:7:15612:15635	5769401	0	True				
ANR	5769606	CallExpression	"FD_ISSET ( fdm , & readfds )"		5769401	0					
ANR	5769607	Callee	FD_ISSET		5769401	0					
ANR	5769608	Identifier	FD_ISSET		5769401	0					
ANR	5769609	ArgumentList	fdm		5769401	1					
ANR	5769610	Argument	fdm		5769401	0					
ANR	5769611	Identifier	fdm		5769401	0					
ANR	5769612	Argument	& readfds		5769401	1					
ANR	5769613	UnaryOperationExpression	& readfds		5769401	0					
ANR	5769614	UnaryOperator	&		5769401	0					
ANR	5769615	Identifier	readfds		5769401	1					
ANR	5769616	CompoundStatement		40:33:771:771	5769401	1					
ANR	5769617	IfStatement	"if ( fd_forward ( fdm , sockfd , & buff ) != 0 )"		5769401	0					
ANR	5769618	Condition	"fd_forward ( fdm , sockfd , & buff ) != 0"	716:8:15648:15683	5769401	0	True				
ANR	5769619	EqualityExpression	"fd_forward ( fdm , sockfd , & buff ) != 0"		5769401	0		!=			
ANR	5769620	CallExpression	"fd_forward ( fdm , sockfd , & buff )"		5769401	0					
ANR	5769621	Callee	fd_forward		5769401	0					
ANR	5769622	Identifier	fd_forward		5769401	0					
ANR	5769623	ArgumentList	fdm		5769401	1					
ANR	5769624	Argument	fdm		5769401	0					
ANR	5769625	Identifier	fdm		5769401	0					
ANR	5769626	Argument	sockfd		5769401	1					
ANR	5769627	Identifier	sockfd		5769401	0					
ANR	5769628	Argument	& buff		5769401	2					
ANR	5769629	UnaryOperationExpression	& buff		5769401	0					
ANR	5769630	UnaryOperator	&		5769401	0					
ANR	5769631	Identifier	buff		5769401	1					
ANR	5769632	PrimaryExpression	0		5769401	1					
ANR	5769633	CompoundStatement		41:46:819:819	5769401	1					
ANR	5769634	BreakStatement	break ;	717:5:15693:15698	5769401	0	True				
ANR	5769635	IfStatement	"if ( FD_ISSET ( sockfd , & readfds ) )"		5769401	6					
ANR	5769636	Condition	"FD_ISSET ( sockfd , & readfds )"	721:7:15719:15745	5769401	0	True				
ANR	5769637	CallExpression	"FD_ISSET ( sockfd , & readfds )"		5769401	0					
ANR	5769638	Callee	FD_ISSET		5769401	0					
ANR	5769639	Identifier	FD_ISSET		5769401	0					
ANR	5769640	ArgumentList	sockfd		5769401	1					
ANR	5769641	Argument	sockfd		5769401	0					
ANR	5769642	Identifier	sockfd		5769401	0					
ANR	5769643	Argument	& readfds		5769401	1					
ANR	5769644	UnaryOperationExpression	& readfds		5769401	0					
ANR	5769645	UnaryOperator	&		5769401	0					
ANR	5769646	Identifier	readfds		5769401	1					
ANR	5769647	CompoundStatement		46:36:881:881	5769401	1					
ANR	5769648	IfStatement	"if ( fd_forward ( sockfd , fdm , & buff ) != 0 )"		5769401	0					
ANR	5769649	Condition	"fd_forward ( sockfd , fdm , & buff ) != 0"	722:8:15758:15793	5769401	0	True				
ANR	5769650	EqualityExpression	"fd_forward ( sockfd , fdm , & buff ) != 0"		5769401	0		!=			
ANR	5769651	CallExpression	"fd_forward ( sockfd , fdm , & buff )"		5769401	0					
ANR	5769652	Callee	fd_forward		5769401	0					
ANR	5769653	Identifier	fd_forward		5769401	0					
ANR	5769654	ArgumentList	sockfd		5769401	1					
ANR	5769655	Argument	sockfd		5769401	0					
ANR	5769656	Identifier	sockfd		5769401	0					
ANR	5769657	Argument	fdm		5769401	1					
ANR	5769658	Identifier	fdm		5769401	0					
ANR	5769659	Argument	& buff		5769401	2					
ANR	5769660	UnaryOperationExpression	& buff		5769401	0					
ANR	5769661	UnaryOperator	&		5769401	0					
ANR	5769662	Identifier	buff		5769401	1					
ANR	5769663	PrimaryExpression	0		5769401	1					
ANR	5769664	CompoundStatement		47:46:929:929	5769401	1					
ANR	5769665	BreakStatement	break ;	723:5:15803:15808	5769401	0	True				
ANR	5769666	ExpressionStatement	free ( buff )	728:2:15828:15839	5769401	5	True				
ANR	5769667	CallExpression	free ( buff )		5769401	0					
ANR	5769668	Callee	free		5769401	0					
ANR	5769669	Identifier	free		5769401	0					
ANR	5769670	ArgumentList	buff		5769401	1					
ANR	5769671	Argument	buff		5769401	0					
ANR	5769672	Identifier	buff		5769401	0					
ANR	5769673	ExpressionStatement	close ( fdm )	729:2:15843:15854	5769401	6	True				
ANR	5769674	CallExpression	close ( fdm )		5769401	0					
ANR	5769675	Callee	close		5769401	0					
ANR	5769676	Identifier	close		5769401	0					
ANR	5769677	ArgumentList	fdm		5769401	1					
ANR	5769678	Argument	fdm		5769401	0					
ANR	5769679	Identifier	fdm		5769401	0					
ANR	5769680	ExpressionStatement	r_socket_free ( sock )	730:2:15858:15878	5769401	7	True				
ANR	5769681	CallExpression	r_socket_free ( sock )		5769401	0					
ANR	5769682	Callee	r_socket_free		5769401	0					
ANR	5769683	Identifier	r_socket_free		5769401	0					
ANR	5769684	ArgumentList	sock		5769401	1					
ANR	5769685	Argument	sock		5769401	0					
ANR	5769686	Identifier	sock		5769401	0					
ANR	5769687	ExpressionStatement	exit ( 0 )	731:2:15882:15890	5769401	8	True				
ANR	5769688	CallExpression	exit ( 0 )		5769401	0					
ANR	5769689	Callee	exit		5769401	0					
ANR	5769690	Identifier	exit		5769401	0					
ANR	5769691	ArgumentList	0		5769401	1					
ANR	5769692	Argument	0		5769401	0					
ANR	5769693	PrimaryExpression	0		5769401	0					
ANR	5769694	ExpressionStatement	r_socket_close_fd ( sock )	735:1:15908:15932	5769401	5	True				
ANR	5769695	CallExpression	r_socket_close_fd ( sock )		5769401	0					
ANR	5769696	Callee	r_socket_close_fd		5769401	0					
ANR	5769697	Identifier	r_socket_close_fd		5769401	0					
ANR	5769698	ArgumentList	sock		5769401	1					
ANR	5769699	Argument	sock		5769401	0					
ANR	5769700	Identifier	sock		5769401	0					
ANR	5769701	ExpressionStatement	login_tty ( fds )	736:1:15935:15950	5769401	6	True				
ANR	5769702	CallExpression	login_tty ( fds )		5769401	0					
ANR	5769703	Callee	login_tty		5769401	0					
ANR	5769704	Identifier	login_tty		5769401	0					
ANR	5769705	ArgumentList	fds		5769401	1					
ANR	5769706	Argument	fds		5769401	0					
ANR	5769707	Identifier	fds		5769401	0					
ANR	5769708	ExpressionStatement	close ( fdm )	737:1:15953:15964	5769401	7	True				
ANR	5769709	CallExpression	close ( fdm )		5769401	0					
ANR	5769710	Callee	close		5769401	0					
ANR	5769711	Identifier	close		5769401	0					
ANR	5769712	ArgumentList	fdm		5769401	1					
ANR	5769713	Argument	fdm		5769401	0					
ANR	5769714	Identifier	fdm		5769401	0					
ANR	5769715	IdentifierDeclStatement	struct termios t ;	740:1:16004:16020	5769401	8	True				
ANR	5769716	IdentifierDecl	t		5769401	0					
ANR	5769717	IdentifierDeclType	struct termios		5769401	0					
ANR	5769718	Identifier	t		5769401	1					
ANR	5769719	ExpressionStatement	"tcgetattr ( 0 , & t )"	741:1:16023:16040	5769401	9	True				
ANR	5769720	CallExpression	"tcgetattr ( 0 , & t )"		5769401	0					
ANR	5769721	Callee	tcgetattr		5769401	0					
ANR	5769722	Identifier	tcgetattr		5769401	0					
ANR	5769723	ArgumentList	0		5769401	1					
ANR	5769724	Argument	0		5769401	0					
ANR	5769725	PrimaryExpression	0		5769401	0					
ANR	5769726	Argument	& t		5769401	1					
ANR	5769727	UnaryOperationExpression	& t		5769401	0					
ANR	5769728	UnaryOperator	&		5769401	0					
ANR	5769729	Identifier	t		5769401	1					
ANR	5769730	ExpressionStatement	cfmakeraw ( & t )	742:1:16043:16057	5769401	10	True				
ANR	5769731	CallExpression	cfmakeraw ( & t )		5769401	0					
ANR	5769732	Callee	cfmakeraw		5769401	0					
ANR	5769733	Identifier	cfmakeraw		5769401	0					
ANR	5769734	ArgumentList	& t		5769401	1					
ANR	5769735	Argument	& t		5769401	0					
ANR	5769736	UnaryOperationExpression	& t		5769401	0					
ANR	5769737	UnaryOperator	&		5769401	0					
ANR	5769738	Identifier	t		5769401	1					
ANR	5769739	ExpressionStatement	"tcsetattr ( 0 , TCSANOW , & t )"	743:1:16060:16086	5769401	11	True				
ANR	5769740	CallExpression	"tcsetattr ( 0 , TCSANOW , & t )"		5769401	0					
ANR	5769741	Callee	tcsetattr		5769401	0					
ANR	5769742	Identifier	tcsetattr		5769401	0					
ANR	5769743	ArgumentList	0		5769401	1					
ANR	5769744	Argument	0		5769401	0					
ANR	5769745	PrimaryExpression	0		5769401	0					
ANR	5769746	Argument	TCSANOW		5769401	1					
ANR	5769747	Identifier	TCSANOW		5769401	0					
ANR	5769748	Argument	& t		5769401	2					
ANR	5769749	UnaryOperationExpression	& t		5769401	0					
ANR	5769750	UnaryOperator	&		5769401	0					
ANR	5769751	Identifier	t		5769401	1					
ANR	5769752	ReturnStatement	return 0 ;	745:1:16090:16098	5769401	12	True				
ANR	5769753	PrimaryExpression	0		5769401	0					
ANR	5769754	ReturnType	static int		5769401	1					
ANR	5769755	Identifier	redirect_socket_to_pty		5769401	2					
ANR	5769756	ParameterList	RSocket * sock		5769401	3					
ANR	5769757	Parameter	RSocket * sock	676:34:14851:14863	5769401	0	True				
ANR	5769758	ParameterType	RSocket *		5769401	0					
ANR	5769759	Identifier	sock		5769401	1					
ANR	5769760	CFGEntryNode	ENTRY		5769401		True				
ANR	5769761	CFGExitNode	EXIT		5769401		True				
ANR	5769762	Symbol	NULL		5769401						
ANR	5769763	Symbol	select		5769401						
ANR	5769764	Symbol	& buff		5769401						
ANR	5769765	Symbol	TCSANOW		5769401						
ANR	5769766	Symbol	sockfd		5769401						
ANR	5769767	Symbol	fdm		5769401						
ANR	5769768	Symbol	child_pid		5769401						
ANR	5769769	Symbol	sock		5769401						
ANR	5769770	Symbol	& fdm		5769401						
ANR	5769771	Symbol	fds		5769401						
ANR	5769772	Symbol	t		5769401						
ANR	5769773	Symbol	FD_ISSET		5769401						
ANR	5769774	Symbol	fd_forward		5769401						
ANR	5769775	Symbol	max_fd		5769401						
ANR	5769776	Symbol	& readfds		5769401						
ANR	5769777	Symbol	true		5769401						
ANR	5769778	Symbol	readfds		5769401						
ANR	5769779	Symbol	& t		5769401						
ANR	5769780	Symbol	r_sys_fork		5769401						
ANR	5769781	Symbol	sock -> fd		5769401						
ANR	5769782	Symbol	& fds		5769401						
ANR	5769783	Symbol	buff		5769401						
ANR	5769784	Symbol	openpty		5769401						
ANR	5769785	Symbol	* sock		5769401						
ANR	5769786	Function	r_run_config_env	752:0:16199:21853							
ANR	5769787	FunctionDef	r_run_config_env (RRunProfile * p)		5769786	0					
ANR	5769788	CompoundStatement		752:43:16242:21853	5769786	0					
ANR	5769789	IdentifierDeclStatement	int ret ;	753:1:16245:16252	5769786	0	True				
ANR	5769790	IdentifierDecl	ret		5769786	0					
ANR	5769791	IdentifierDeclType	int		5769786	0					
ANR	5769792	Identifier	ret		5769786	1					
ANR	5769793	IfStatement	if ( ! p -> _program && ! p -> _system && ! p -> _runlib )		5769786	1					
ANR	5769794	Condition	! p -> _program && ! p -> _system && ! p -> _runlib	755:5:16260:16301	5769786	0	True				
ANR	5769795	AndExpression	! p -> _program && ! p -> _system && ! p -> _runlib		5769786	0		&&			
ANR	5769796	UnaryOperationExpression	! p -> _program		5769786	0					
ANR	5769797	UnaryOperator	!		5769786	0					
ANR	5769798	PtrMemberAccess	p -> _program		5769786	1					
ANR	5769799	Identifier	p		5769786	0					
ANR	5769800	Identifier	_program		5769786	1					
ANR	5769801	AndExpression	! p -> _system && ! p -> _runlib		5769786	1		&&			
ANR	5769802	UnaryOperationExpression	! p -> _system		5769786	0					
ANR	5769803	UnaryOperator	!		5769786	0					
ANR	5769804	PtrMemberAccess	p -> _system		5769786	1					
ANR	5769805	Identifier	p		5769786	0					
ANR	5769806	Identifier	_system		5769786	1					
ANR	5769807	UnaryOperationExpression	! p -> _runlib		5769786	1					
ANR	5769808	UnaryOperator	!		5769786	0					
ANR	5769809	PtrMemberAccess	p -> _runlib		5769786	1					
ANR	5769810	Identifier	p		5769786	0					
ANR	5769811	Identifier	_runlib		5769786	1					
ANR	5769812	CompoundStatement		4:49:61:61	5769786	1					
ANR	5769813	ExpressionStatement	"printf ( ""No program, system or runlib rule defined\\n"" )"	756:2:16308:16362	5769786	0	True				
ANR	5769814	CallExpression	"printf ( ""No program, system or runlib rule defined\\n"" )"		5769786	0					
ANR	5769815	Callee	printf		5769786	0					
ANR	5769816	Identifier	printf		5769786	0					
ANR	5769817	ArgumentList	"""No program, system or runlib rule defined\\n"""		5769786	1					
ANR	5769818	Argument	"""No program, system or runlib rule defined\\n"""		5769786	0					
ANR	5769819	PrimaryExpression	"""No program, system or runlib rule defined\\n"""		5769786	0					
ANR	5769820	ReturnStatement	return 1 ;	757:2:16366:16374	5769786	1	True				
ANR	5769821	PrimaryExpression	1		5769786	0					
ANR	5769822	IfStatement	"if ( handle_redirection ( p -> _stdio , true , true , false ) != 0 )"		5769786	2					
ANR	5769823	Condition	"handle_redirection ( p -> _stdio , true , true , false ) != 0"	760:5:16445:16498	5769786	0	True				
ANR	5769824	EqualityExpression	"handle_redirection ( p -> _stdio , true , true , false ) != 0"		5769786	0		!=			
ANR	5769825	CallExpression	"handle_redirection ( p -> _stdio , true , true , false )"		5769786	0					
ANR	5769826	Callee	handle_redirection		5769786	0					
ANR	5769827	Identifier	handle_redirection		5769786	0					
ANR	5769828	ArgumentList	p -> _stdio		5769786	1					
ANR	5769829	Argument	p -> _stdio		5769786	0					
ANR	5769830	PtrMemberAccess	p -> _stdio		5769786	0					
ANR	5769831	Identifier	p		5769786	0					
ANR	5769832	Identifier	_stdio		5769786	1					
ANR	5769833	Argument	true		5769786	1					
ANR	5769834	Identifier	true		5769786	0					
ANR	5769835	Argument	true		5769786	2					
ANR	5769836	Identifier	true		5769786	0					
ANR	5769837	Argument	false		5769786	3					
ANR	5769838	Identifier	false		5769786	0					
ANR	5769839	PrimaryExpression	0		5769786	1					
ANR	5769840	CompoundStatement		9:61:258:258	5769786	1					
ANR	5769841	ReturnStatement	return 1 ;	761:2:16505:16513	5769786	0	True				
ANR	5769842	PrimaryExpression	1		5769786	0					
ANR	5769843	IfStatement	"if ( handle_redirection ( p -> _stdin , true , false , false ) != 0 )"		5769786	3					
ANR	5769844	Condition	"handle_redirection ( p -> _stdin , true , false , false ) != 0"	763:5:16523:16577	5769786	0	True				
ANR	5769845	EqualityExpression	"handle_redirection ( p -> _stdin , true , false , false ) != 0"		5769786	0		!=			
ANR	5769846	CallExpression	"handle_redirection ( p -> _stdin , true , false , false )"		5769786	0					
ANR	5769847	Callee	handle_redirection		5769786	0					
ANR	5769848	Identifier	handle_redirection		5769786	0					
ANR	5769849	ArgumentList	p -> _stdin		5769786	1					
ANR	5769850	Argument	p -> _stdin		5769786	0					
ANR	5769851	PtrMemberAccess	p -> _stdin		5769786	0					
ANR	5769852	Identifier	p		5769786	0					
ANR	5769853	Identifier	_stdin		5769786	1					
ANR	5769854	Argument	true		5769786	1					
ANR	5769855	Identifier	true		5769786	0					
ANR	5769856	Argument	false		5769786	2					
ANR	5769857	Identifier	false		5769786	0					
ANR	5769858	Argument	false		5769786	3					
ANR	5769859	Identifier	false		5769786	0					
ANR	5769860	PrimaryExpression	0		5769786	1					
ANR	5769861	CompoundStatement		12:62:337:337	5769786	1					
ANR	5769862	ReturnStatement	return 1 ;	764:2:16584:16592	5769786	0	True				
ANR	5769863	PrimaryExpression	1		5769786	0					
ANR	5769864	IfStatement	"if ( handle_redirection ( p -> _stdout , false , true , false ) != 0 )"		5769786	4					
ANR	5769865	Condition	"handle_redirection ( p -> _stdout , false , true , false ) != 0"	766:5:16602:16657	5769786	0	True				
ANR	5769866	EqualityExpression	"handle_redirection ( p -> _stdout , false , true , false ) != 0"		5769786	0		!=			
ANR	5769867	CallExpression	"handle_redirection ( p -> _stdout , false , true , false )"		5769786	0					
ANR	5769868	Callee	handle_redirection		5769786	0					
ANR	5769869	Identifier	handle_redirection		5769786	0					
ANR	5769870	ArgumentList	p -> _stdout		5769786	1					
ANR	5769871	Argument	p -> _stdout		5769786	0					
ANR	5769872	PtrMemberAccess	p -> _stdout		5769786	0					
ANR	5769873	Identifier	p		5769786	0					
ANR	5769874	Identifier	_stdout		5769786	1					
ANR	5769875	Argument	false		5769786	1					
ANR	5769876	Identifier	false		5769786	0					
ANR	5769877	Argument	true		5769786	2					
ANR	5769878	Identifier	true		5769786	0					
ANR	5769879	Argument	false		5769786	3					
ANR	5769880	Identifier	false		5769786	0					
ANR	5769881	PrimaryExpression	0		5769786	1					
ANR	5769882	CompoundStatement		15:63:417:417	5769786	1					
ANR	5769883	ReturnStatement	return 1 ;	767:2:16664:16672	5769786	0	True				
ANR	5769884	PrimaryExpression	1		5769786	0					
ANR	5769885	IfStatement	"if ( handle_redirection ( p -> _stderr , false , false , true ) != 0 )"		5769786	5					
ANR	5769886	Condition	"handle_redirection ( p -> _stderr , false , false , true ) != 0"	769:5:16682:16737	5769786	0	True				
ANR	5769887	EqualityExpression	"handle_redirection ( p -> _stderr , false , false , true ) != 0"		5769786	0		!=			
ANR	5769888	CallExpression	"handle_redirection ( p -> _stderr , false , false , true )"		5769786	0					
ANR	5769889	Callee	handle_redirection		5769786	0					
ANR	5769890	Identifier	handle_redirection		5769786	0					
ANR	5769891	ArgumentList	p -> _stderr		5769786	1					
ANR	5769892	Argument	p -> _stderr		5769786	0					
ANR	5769893	PtrMemberAccess	p -> _stderr		5769786	0					
ANR	5769894	Identifier	p		5769786	0					
ANR	5769895	Identifier	_stderr		5769786	1					
ANR	5769896	Argument	false		5769786	1					
ANR	5769897	Identifier	false		5769786	0					
ANR	5769898	Argument	false		5769786	2					
ANR	5769899	Identifier	false		5769786	0					
ANR	5769900	Argument	true		5769786	3					
ANR	5769901	Identifier	true		5769786	0					
ANR	5769902	PrimaryExpression	0		5769786	1					
ANR	5769903	CompoundStatement		18:63:497:497	5769786	1					
ANR	5769904	ReturnStatement	return 1 ;	770:2:16744:16752	5769786	0	True				
ANR	5769905	PrimaryExpression	1		5769786	0					
ANR	5769906	IfStatement	if ( p -> _aslr != - 1 )		5769786	6					
ANR	5769907	Condition	p -> _aslr != - 1	772:5:16762:16775	5769786	0	True				
ANR	5769908	EqualityExpression	p -> _aslr != - 1		5769786	0		!=			
ANR	5769909	PtrMemberAccess	p -> _aslr		5769786	0					
ANR	5769910	Identifier	p		5769786	0					
ANR	5769911	Identifier	_aslr		5769786	1					
ANR	5769912	UnaryOperationExpression	- 1		5769786	1					
ANR	5769913	UnaryOperator	-		5769786	0					
ANR	5769914	PrimaryExpression	1		5769786	1					
ANR	5769915	CompoundStatement		21:21:535:535	5769786	1					
ANR	5769916	ExpressionStatement	"setASLR ( p , p -> _aslr )"	773:2:16782:16803	5769786	0	True				
ANR	5769917	CallExpression	"setASLR ( p , p -> _aslr )"		5769786	0					
ANR	5769918	Callee	setASLR		5769786	0					
ANR	5769919	Identifier	setASLR		5769786	0					
ANR	5769920	ArgumentList	p		5769786	1					
ANR	5769921	Argument	p		5769786	0					
ANR	5769922	Identifier	p		5769786	0					
ANR	5769923	Argument	p -> _aslr		5769786	1					
ANR	5769924	PtrMemberAccess	p -> _aslr		5769786	0					
ANR	5769925	Identifier	p		5769786	0					
ANR	5769926	Identifier	_aslr		5769786	1					
ANR	5769927	ExpressionStatement	"set_limit ( p -> _docore , RLIMIT_CORE , RLIM_INFINITY )"	776:1:16822:16872	5769786	7	True				
ANR	5769928	CallExpression	"set_limit ( p -> _docore , RLIMIT_CORE , RLIM_INFINITY )"		5769786	0					
ANR	5769929	Callee	set_limit		5769786	0					
ANR	5769930	Identifier	set_limit		5769786	0					
ANR	5769931	ArgumentList	p -> _docore		5769786	1					
ANR	5769932	Argument	p -> _docore		5769786	0					
ANR	5769933	PtrMemberAccess	p -> _docore		5769786	0					
ANR	5769934	Identifier	p		5769786	0					
ANR	5769935	Identifier	_docore		5769786	1					
ANR	5769936	Argument	RLIMIT_CORE		5769786	1					
ANR	5769937	Identifier	RLIMIT_CORE		5769786	0					
ANR	5769938	Argument	RLIM_INFINITY		5769786	2					
ANR	5769939	Identifier	RLIM_INFINITY		5769786	0					
ANR	5769940	IfStatement	if ( p -> _maxfd )		5769786	8					
ANR	5769941	Condition	p -> _maxfd	777:5:16879:16887	5769786	0	True				
ANR	5769942	PtrMemberAccess	p -> _maxfd		5769786	0					
ANR	5769943	Identifier	p		5769786	0					
ANR	5769944	Identifier	_maxfd		5769786	1					
ANR	5769945	CompoundStatement		26:16:647:647	5769786	1					
ANR	5769946	ExpressionStatement	"set_limit ( p -> _maxfd , RLIMIT_NOFILE , p -> _maxfd )"	778:2:16894:16941	5769786	0	True				
ANR	5769947	CallExpression	"set_limit ( p -> _maxfd , RLIMIT_NOFILE , p -> _maxfd )"		5769786	0					
ANR	5769948	Callee	set_limit		5769786	0					
ANR	5769949	Identifier	set_limit		5769786	0					
ANR	5769950	ArgumentList	p -> _maxfd		5769786	1					
ANR	5769951	Argument	p -> _maxfd		5769786	0					
ANR	5769952	PtrMemberAccess	p -> _maxfd		5769786	0					
ANR	5769953	Identifier	p		5769786	0					
ANR	5769954	Identifier	_maxfd		5769786	1					
ANR	5769955	Argument	RLIMIT_NOFILE		5769786	1					
ANR	5769956	Identifier	RLIMIT_NOFILE		5769786	0					
ANR	5769957	Argument	p -> _maxfd		5769786	2					
ANR	5769958	PtrMemberAccess	p -> _maxfd		5769786	0					
ANR	5769959	Identifier	p		5769786	0					
ANR	5769960	Identifier	_maxfd		5769786	1					
ANR	5769961	IfStatement	if ( p -> _maxproc )		5769786	9					
ANR	5769962	Condition	p -> _maxproc	781:5:16971:16981	5769786	0	True				
ANR	5769963	PtrMemberAccess	p -> _maxproc		5769786	0					
ANR	5769964	Identifier	p		5769786	0					
ANR	5769965	Identifier	_maxproc		5769786	1					
ANR	5769966	CompoundStatement		30:18:741:741	5769786	1					
ANR	5769967	ExpressionStatement	"set_limit ( p -> _maxproc , RLIMIT_NPROC , p -> _maxproc )"	782:2:16988:17038	5769786	0	True				
ANR	5769968	CallExpression	"set_limit ( p -> _maxproc , RLIMIT_NPROC , p -> _maxproc )"		5769786	0					
ANR	5769969	Callee	set_limit		5769786	0					
ANR	5769970	Identifier	set_limit		5769786	0					
ANR	5769971	ArgumentList	p -> _maxproc		5769786	1					
ANR	5769972	Argument	p -> _maxproc		5769786	0					
ANR	5769973	PtrMemberAccess	p -> _maxproc		5769786	0					
ANR	5769974	Identifier	p		5769786	0					
ANR	5769975	Identifier	_maxproc		5769786	1					
ANR	5769976	Argument	RLIMIT_NPROC		5769786	1					
ANR	5769977	Identifier	RLIMIT_NPROC		5769786	0					
ANR	5769978	Argument	p -> _maxproc		5769786	2					
ANR	5769979	PtrMemberAccess	p -> _maxproc		5769786	0					
ANR	5769980	Identifier	p		5769786	0					
ANR	5769981	Identifier	_maxproc		5769786	1					
ANR	5769982	IfStatement	if ( p -> _maxstack )		5769786	10					
ANR	5769983	Condition	p -> _maxstack	785:5:17055:17066	5769786	0	True				
ANR	5769984	PtrMemberAccess	p -> _maxstack		5769786	0					
ANR	5769985	Identifier	p		5769786	0					
ANR	5769986	Identifier	_maxstack		5769786	1					
ANR	5769987	CompoundStatement		34:19:826:826	5769786	1					
ANR	5769988	ExpressionStatement	"set_limit ( p -> _maxstack , RLIMIT_STACK , p -> _maxstack )"	786:2:17073:17125	5769786	0	True				
ANR	5769989	CallExpression	"set_limit ( p -> _maxstack , RLIMIT_STACK , p -> _maxstack )"		5769786	0					
ANR	5769990	Callee	set_limit		5769786	0					
ANR	5769991	Identifier	set_limit		5769786	0					
ANR	5769992	ArgumentList	p -> _maxstack		5769786	1					
ANR	5769993	Argument	p -> _maxstack		5769786	0					
ANR	5769994	PtrMemberAccess	p -> _maxstack		5769786	0					
ANR	5769995	Identifier	p		5769786	0					
ANR	5769996	Identifier	_maxstack		5769786	1					
ANR	5769997	Argument	RLIMIT_STACK		5769786	1					
ANR	5769998	Identifier	RLIMIT_STACK		5769786	0					
ANR	5769999	Argument	p -> _maxstack		5769786	2					
ANR	5770000	PtrMemberAccess	p -> _maxstack		5769786	0					
ANR	5770001	Identifier	p		5769786	0					
ANR	5770002	Identifier	_maxstack		5769786	1					
ANR	5770003	IfStatement	if ( p -> _connect )		5769786	11					
ANR	5770004	Condition	p -> _connect	792:5:17278:17288	5769786	0	True				
ANR	5770005	PtrMemberAccess	p -> _connect		5769786	0					
ANR	5770006	Identifier	p		5769786	0					
ANR	5770007	Identifier	_connect		5769786	1					
ANR	5770008	CompoundStatement		42:2:1052:1087	5769786	1					
ANR	5770009	IdentifierDeclStatement	"char * q = strchr ( p -> _connect , ':' ) ;"	793:2:17295:17330	5769786	0	True				
ANR	5770010	IdentifierDecl	"* q = strchr ( p -> _connect , ':' )"		5769786	0					
ANR	5770011	IdentifierDeclType	char *		5769786	0					
ANR	5770012	Identifier	q		5769786	1					
ANR	5770013	AssignmentExpression	"* q = strchr ( p -> _connect , ':' )"		5769786	2		=			
ANR	5770014	Identifier	q		5769786	0					
ANR	5770015	CallExpression	"strchr ( p -> _connect , ':' )"		5769786	1					
ANR	5770016	Callee	strchr		5769786	0					
ANR	5770017	Identifier	strchr		5769786	0					
ANR	5770018	ArgumentList	p -> _connect		5769786	1					
ANR	5770019	Argument	p -> _connect		5769786	0					
ANR	5770020	PtrMemberAccess	p -> _connect		5769786	0					
ANR	5770021	Identifier	p		5769786	0					
ANR	5770022	Identifier	_connect		5769786	1					
ANR	5770023	Argument	':'		5769786	1					
ANR	5770024	PrimaryExpression	':'		5769786	0					
ANR	5770025	IfStatement	if ( q )		5769786	1					
ANR	5770026	Condition	q	794:6:17338:17338	5769786	0	True				
ANR	5770027	Identifier	q		5769786	0					
ANR	5770028	CompoundStatement		44:3:1103:1133	5769786	1					
ANR	5770029	IdentifierDeclStatement	RSocket * fd = r_socket_new ( 0 ) ;	795:3:17346:17376	5769786	0	True				
ANR	5770030	IdentifierDecl	* fd = r_socket_new ( 0 )		5769786	0					
ANR	5770031	IdentifierDeclType	RSocket *		5769786	0					
ANR	5770032	Identifier	fd		5769786	1					
ANR	5770033	AssignmentExpression	* fd = r_socket_new ( 0 )		5769786	2		=			
ANR	5770034	Identifier	fd		5769786	0					
ANR	5770035	CallExpression	r_socket_new ( 0 )		5769786	1					
ANR	5770036	Callee	r_socket_new		5769786	0					
ANR	5770037	Identifier	r_socket_new		5769786	0					
ANR	5770038	ArgumentList	0		5769786	1					
ANR	5770039	Argument	0		5769786	0					
ANR	5770040	PrimaryExpression	0		5769786	0					
ANR	5770041	ExpressionStatement	* q = 0	796:3:17381:17387	5769786	1	True				
ANR	5770042	AssignmentExpression	* q = 0		5769786	0		=			
ANR	5770043	UnaryOperationExpression	* q		5769786	0					
ANR	5770044	UnaryOperator	*		5769786	0					
ANR	5770045	Identifier	q		5769786	1					
ANR	5770046	PrimaryExpression	0		5769786	1					
ANR	5770047	IfStatement	"if ( ! r_socket_connect_tcp ( fd , p -> _connect , q + 1 , 30 ) )"		5769786	2					
ANR	5770048	Condition	"! r_socket_connect_tcp ( fd , p -> _connect , q + 1 , 30 )"	797:7:17396:17443	5769786	0	True				
ANR	5770049	UnaryOperationExpression	"! r_socket_connect_tcp ( fd , p -> _connect , q + 1 , 30 )"		5769786	0					
ANR	5770050	UnaryOperator	!		5769786	0					
ANR	5770051	CallExpression	"r_socket_connect_tcp ( fd , p -> _connect , q + 1 , 30 )"		5769786	1					
ANR	5770052	Callee	r_socket_connect_tcp		5769786	0					
ANR	5770053	Identifier	r_socket_connect_tcp		5769786	0					
ANR	5770054	ArgumentList	fd		5769786	1					
ANR	5770055	Argument	fd		5769786	0					
ANR	5770056	Identifier	fd		5769786	0					
ANR	5770057	Argument	p -> _connect		5769786	1					
ANR	5770058	PtrMemberAccess	p -> _connect		5769786	0					
ANR	5770059	Identifier	p		5769786	0					
ANR	5770060	Identifier	_connect		5769786	1					
ANR	5770061	Argument	q + 1		5769786	2					
ANR	5770062	AdditiveExpression	q + 1		5769786	0		+			
ANR	5770063	Identifier	q		5769786	0					
ANR	5770064	PrimaryExpression	1		5769786	1					
ANR	5770065	Argument	30		5769786	3					
ANR	5770066	PrimaryExpression	30		5769786	0					
ANR	5770067	CompoundStatement		46:57:1203:1203	5769786	1					
ANR	5770068	ExpressionStatement	"eprintf ( ""Cannot connect\\n"" )"	798:4:17452:17480	5769786	0	True				
ANR	5770069	CallExpression	"eprintf ( ""Cannot connect\\n"" )"		5769786	0					
ANR	5770070	Callee	eprintf		5769786	0					
ANR	5770071	Identifier	eprintf		5769786	0					
ANR	5770072	ArgumentList	"""Cannot connect\\n"""		5769786	1					
ANR	5770073	Argument	"""Cannot connect\\n"""		5769786	0					
ANR	5770074	PrimaryExpression	"""Cannot connect\\n"""		5769786	0					
ANR	5770075	ReturnStatement	return 1 ;	799:4:17486:17494	5769786	1	True				
ANR	5770076	PrimaryExpression	1		5769786	0					
ANR	5770077	IfStatement	if ( p -> _pty )		5769786	3					
ANR	5770078	Condition	p -> _pty	801:7:17508:17514	5769786	0	True				
ANR	5770079	PtrMemberAccess	p -> _pty		5769786	0					
ANR	5770080	Identifier	p		5769786	0					
ANR	5770081	Identifier	_pty		5769786	1					
ANR	5770082	CompoundStatement		50:16:1274:1274	5769786	1					
ANR	5770083	IfStatement	if ( redirect_socket_to_pty ( fd ) != 0 )		5769786	0					
ANR	5770084	Condition	redirect_socket_to_pty ( fd ) != 0	802:8:17527:17558	5769786	0	True				
ANR	5770085	EqualityExpression	redirect_socket_to_pty ( fd ) != 0		5769786	0		!=			
ANR	5770086	CallExpression	redirect_socket_to_pty ( fd )		5769786	0					
ANR	5770087	Callee	redirect_socket_to_pty		5769786	0					
ANR	5770088	Identifier	redirect_socket_to_pty		5769786	0					
ANR	5770089	ArgumentList	fd		5769786	1					
ANR	5770090	Argument	fd		5769786	0					
ANR	5770091	Identifier	fd		5769786	0					
ANR	5770092	PrimaryExpression	0		5769786	1					
ANR	5770093	CompoundStatement		51:42:1318:1318	5769786	1					
ANR	5770094	ExpressionStatement	"eprintf ( ""socket redirection failed\\n"" )"	803:5:17568:17607	5769786	0	True				
ANR	5770095	CallExpression	"eprintf ( ""socket redirection failed\\n"" )"		5769786	0					
ANR	5770096	Callee	eprintf		5769786	0					
ANR	5770097	Identifier	eprintf		5769786	0					
ANR	5770098	ArgumentList	"""socket redirection failed\\n"""		5769786	1					
ANR	5770099	Argument	"""socket redirection failed\\n"""		5769786	0					
ANR	5770100	PrimaryExpression	"""socket redirection failed\\n"""		5769786	0					
ANR	5770101	ExpressionStatement	r_socket_free ( fd )	804:5:17614:17632	5769786	1	True				
ANR	5770102	CallExpression	r_socket_free ( fd )		5769786	0					
ANR	5770103	Callee	r_socket_free		5769786	0					
ANR	5770104	Identifier	r_socket_free		5769786	0					
ANR	5770105	ArgumentList	fd		5769786	1					
ANR	5770106	Argument	fd		5769786	0					
ANR	5770107	Identifier	fd		5769786	0					
ANR	5770108	ReturnStatement	return 1 ;	805:5:17639:17647	5769786	2	True				
ANR	5770109	PrimaryExpression	1		5769786	0					
ANR	5770110	ElseStatement	else		5769786	0					
ANR	5770111	CompoundStatement		56:10:1422:1422	5769786	0					
ANR	5770112	ExpressionStatement	redirect_socket_to_stdio ( fd )	808:4:17671:17700	5769786	0	True				
ANR	5770113	CallExpression	redirect_socket_to_stdio ( fd )		5769786	0					
ANR	5770114	Callee	redirect_socket_to_stdio		5769786	0					
ANR	5770115	Identifier	redirect_socket_to_stdio		5769786	0					
ANR	5770116	ArgumentList	fd		5769786	1					
ANR	5770117	Argument	fd		5769786	0					
ANR	5770118	Identifier	fd		5769786	0					
ANR	5770119	ElseStatement	else		5769786	0					
ANR	5770120	CompoundStatement		59:9:1473:1473	5769786	0					
ANR	5770121	ExpressionStatement	"eprintf ( ""Invalid format for connect. missing ':'\\n"" )"	811:3:17721:17774	5769786	0	True				
ANR	5770122	CallExpression	"eprintf ( ""Invalid format for connect. missing ':'\\n"" )"		5769786	0					
ANR	5770123	Callee	eprintf		5769786	0					
ANR	5770124	Identifier	eprintf		5769786	0					
ANR	5770125	ArgumentList	"""Invalid format for connect. missing ':'\\n"""		5769786	1					
ANR	5770126	Argument	"""Invalid format for connect. missing ':'\\n"""		5769786	0					
ANR	5770127	PrimaryExpression	"""Invalid format for connect. missing ':'\\n"""		5769786	0					
ANR	5770128	ReturnStatement	return 1 ;	812:3:17779:17787	5769786	1	True				
ANR	5770129	PrimaryExpression	1		5769786	0					
ANR	5770130	IfStatement	if ( p -> _listen )		5769786	12					
ANR	5770131	Condition	p -> _listen	815:5:17801:17810	5769786	0	True				
ANR	5770132	PtrMemberAccess	p -> _listen		5769786	0					
ANR	5770133	Identifier	p		5769786	0					
ANR	5770134	Identifier	_listen		5769786	1					
ANR	5770135	CompoundStatement		66:2:1616:1637	5769786	1					
ANR	5770136	IdentifierDeclStatement	"RSocket * child , * fd = r_socket_new ( 0 ) ;"	816:2:17817:17855	5769786	0	True				
ANR	5770137	IdentifierDecl	* child		5769786	0					
ANR	5770138	IdentifierDeclType	RSocket *		5769786	0					
ANR	5770139	Identifier	child		5769786	1					
ANR	5770140	IdentifierDecl	* fd = r_socket_new ( 0 )		5769786	1					
ANR	5770141	IdentifierDeclType	RSocket *		5769786	0					
ANR	5770142	Identifier	fd		5769786	1					
ANR	5770143	AssignmentExpression	* fd = r_socket_new ( 0 )		5769786	2		=			
ANR	5770144	Identifier	fd		5769786	0					
ANR	5770145	CallExpression	r_socket_new ( 0 )		5769786	1					
ANR	5770146	Callee	r_socket_new		5769786	0					
ANR	5770147	Identifier	r_socket_new		5769786	0					
ANR	5770148	ArgumentList	0		5769786	1					
ANR	5770149	Argument	0		5769786	0					
ANR	5770150	PrimaryExpression	0		5769786	0					
ANR	5770151	IdentifierDeclStatement	bool is_child = false ;	817:2:17859:17880	5769786	1	True				
ANR	5770152	IdentifierDecl	is_child = false		5769786	0					
ANR	5770153	IdentifierDeclType	bool		5769786	0					
ANR	5770154	Identifier	is_child		5769786	1					
ANR	5770155	AssignmentExpression	is_child = false		5769786	2		=			
ANR	5770156	Identifier	false		5769786	0					
ANR	5770157	Identifier	false		5769786	1					
ANR	5770158	IfStatement	"if ( ! r_socket_listen ( fd , p -> _listen , NULL ) )"		5769786	2					
ANR	5770159	Condition	"! r_socket_listen ( fd , p -> _listen , NULL )"	818:6:17888:17926	5769786	0	True				
ANR	5770160	UnaryOperationExpression	"! r_socket_listen ( fd , p -> _listen , NULL )"		5769786	0					
ANR	5770161	UnaryOperator	!		5769786	0					
ANR	5770162	CallExpression	"r_socket_listen ( fd , p -> _listen , NULL )"		5769786	1					
ANR	5770163	Callee	r_socket_listen		5769786	0					
ANR	5770164	Identifier	r_socket_listen		5769786	0					
ANR	5770165	ArgumentList	fd		5769786	1					
ANR	5770166	Argument	fd		5769786	0					
ANR	5770167	Identifier	fd		5769786	0					
ANR	5770168	Argument	p -> _listen		5769786	1					
ANR	5770169	PtrMemberAccess	p -> _listen		5769786	0					
ANR	5770170	Identifier	p		5769786	0					
ANR	5770171	Identifier	_listen		5769786	1					
ANR	5770172	Argument	NULL		5769786	2					
ANR	5770173	Identifier	NULL		5769786	0					
ANR	5770174	CompoundStatement		67:47:1686:1686	5769786	1					
ANR	5770175	ExpressionStatement	"eprintf ( ""rarun2: cannot listen\\n"" )"	819:3:17934:17969	5769786	0	True				
ANR	5770176	CallExpression	"eprintf ( ""rarun2: cannot listen\\n"" )"		5769786	0					
ANR	5770177	Callee	eprintf		5769786	0					
ANR	5770178	Identifier	eprintf		5769786	0					
ANR	5770179	ArgumentList	"""rarun2: cannot listen\\n"""		5769786	1					
ANR	5770180	Argument	"""rarun2: cannot listen\\n"""		5769786	0					
ANR	5770181	PrimaryExpression	"""rarun2: cannot listen\\n"""		5769786	0					
ANR	5770182	ExpressionStatement	r_socket_free ( fd )	820:3:17974:17992	5769786	1	True				
ANR	5770183	CallExpression	r_socket_free ( fd )		5769786	0					
ANR	5770184	Callee	r_socket_free		5769786	0					
ANR	5770185	Identifier	r_socket_free		5769786	0					
ANR	5770186	ArgumentList	fd		5769786	1					
ANR	5770187	Argument	fd		5769786	0					
ANR	5770188	Identifier	fd		5769786	0					
ANR	5770189	ReturnStatement	return 1 ;	821:3:17997:18005	5769786	2	True				
ANR	5770190	PrimaryExpression	1		5769786	0					
ANR	5770191	WhileStatement	while ( true )		5769786	3					
ANR	5770192	Condition	true	823:9:18020:18023	5769786	0	True				
ANR	5770193	Identifier	true		5769786	0					
ANR	5770194	CompoundStatement		72:15:1783:1783	5769786	1					
ANR	5770195	ExpressionStatement	child = r_socket_accept ( fd )	824:3:18031:18059	5769786	0	True				
ANR	5770196	AssignmentExpression	child = r_socket_accept ( fd )		5769786	0		=			
ANR	5770197	Identifier	child		5769786	0					
ANR	5770198	CallExpression	r_socket_accept ( fd )		5769786	1					
ANR	5770199	Callee	r_socket_accept		5769786	0					
ANR	5770200	Identifier	r_socket_accept		5769786	0					
ANR	5770201	ArgumentList	fd		5769786	1					
ANR	5770202	Argument	fd		5769786	0					
ANR	5770203	Identifier	fd		5769786	0					
ANR	5770204	IfStatement	if ( child )		5769786	1					
ANR	5770205	Condition	child	825:7:18068:18072	5769786	0	True				
ANR	5770206	Identifier	child		5769786	0					
ANR	5770207	CompoundStatement		74:14:1832:1832	5769786	1					
ANR	5770208	ExpressionStatement	is_child = true	826:4:18081:18096	5769786	0	True				
ANR	5770209	AssignmentExpression	is_child = true		5769786	0		=			
ANR	5770210	Identifier	is_child		5769786	0					
ANR	5770211	Identifier	true		5769786	1					
ANR	5770212	IfStatement	if ( p -> _dofork && ! p -> _dodebug )		5769786	1					
ANR	5770213	Condition	p -> _dofork && ! p -> _dodebug	828:8:18107:18132	5769786	0	True				
ANR	5770214	AndExpression	p -> _dofork && ! p -> _dodebug		5769786	0		&&			
ANR	5770215	PtrMemberAccess	p -> _dofork		5769786	0					
ANR	5770216	Identifier	p		5769786	0					
ANR	5770217	Identifier	_dofork		5769786	1					
ANR	5770218	UnaryOperationExpression	! p -> _dodebug		5769786	1					
ANR	5770219	UnaryOperator	!		5769786	0					
ANR	5770220	PtrMemberAccess	p -> _dodebug		5769786	1					
ANR	5770221	Identifier	p		5769786	0					
ANR	5770222	Identifier	_dodebug		5769786	1					
ANR	5770223	CompoundStatement		79:5:1915:1944	5769786	1					
ANR	5770224	IdentifierDeclStatement	int child_pid = r_sys_fork ( ) ;	830:5:18158:18187	5769786	0	True				
ANR	5770225	IdentifierDecl	child_pid = r_sys_fork ( )		5769786	0					
ANR	5770226	IdentifierDeclType	int		5769786	0					
ANR	5770227	Identifier	child_pid		5769786	1					
ANR	5770228	AssignmentExpression	child_pid = r_sys_fork ( )		5769786	2		=			
ANR	5770229	Identifier	child_pid		5769786	0					
ANR	5770230	CallExpression	r_sys_fork ( )		5769786	1					
ANR	5770231	Callee	r_sys_fork		5769786	0					
ANR	5770232	Identifier	r_sys_fork		5769786	0					
ANR	5770233	ArgumentList			5769786	1					
ANR	5770234	IfStatement	if ( child_pid == - 1 )		5769786	1					
ANR	5770235	Condition	child_pid == - 1	834:9:18249:18263	5769786	0	True				
ANR	5770236	EqualityExpression	child_pid == - 1		5769786	0		==			
ANR	5770237	Identifier	child_pid		5769786	0					
ANR	5770238	UnaryOperationExpression	- 1		5769786	1					
ANR	5770239	UnaryOperator	-		5769786	0					
ANR	5770240	PrimaryExpression	1		5769786	1					
ANR	5770241	CompoundStatement		83:26:2023:2023	5769786	1					
ANR	5770242	ExpressionStatement	"eprintf ( ""rarun2: cannot fork\\n"" )"	835:6:18274:18306	5769786	0	True				
ANR	5770243	CallExpression	"eprintf ( ""rarun2: cannot fork\\n"" )"		5769786	0					
ANR	5770244	Callee	eprintf		5769786	0					
ANR	5770245	Identifier	eprintf		5769786	0					
ANR	5770246	ArgumentList	"""rarun2: cannot fork\\n"""		5769786	1					
ANR	5770247	Argument	"""rarun2: cannot fork\\n"""		5769786	0					
ANR	5770248	PrimaryExpression	"""rarun2: cannot fork\\n"""		5769786	0					
ANR	5770249	ExpressionStatement	r_socket_free ( child )	836:6:18314:18335	5769786	1	True				
ANR	5770250	CallExpression	r_socket_free ( child )		5769786	0					
ANR	5770251	Callee	r_socket_free		5769786	0					
ANR	5770252	Identifier	r_socket_free		5769786	0					
ANR	5770253	ArgumentList	child		5769786	1					
ANR	5770254	Argument	child		5769786	0					
ANR	5770255	Identifier	child		5769786	0					
ANR	5770256	ExpressionStatement	r_socket_free ( fd )	837:6:18343:18361	5769786	2	True				
ANR	5770257	CallExpression	r_socket_free ( fd )		5769786	0					
ANR	5770258	Callee	r_socket_free		5769786	0					
ANR	5770259	Identifier	r_socket_free		5769786	0					
ANR	5770260	ArgumentList	fd		5769786	1					
ANR	5770261	Argument	fd		5769786	0					
ANR	5770262	Identifier	fd		5769786	0					
ANR	5770263	ReturnStatement	return 1 ;	838:6:18369:18377	5769786	3	True				
ANR	5770264	PrimaryExpression	1		5769786	0					
ANR	5770265	ElseStatement	else		5769786	0					
ANR	5770266	IfStatement	if ( child_pid != 0 )		5769786	0					
ANR	5770267	Condition	child_pid != 0	839:16:18395:18408	5769786	0	True				
ANR	5770268	EqualityExpression	child_pid != 0		5769786	0		!=			
ANR	5770269	Identifier	child_pid		5769786	0					
ANR	5770270	PrimaryExpression	0		5769786	1					
ANR	5770271	CompoundStatement		88:31:2167:2167	5769786	1					
ANR	5770272	ExpressionStatement	is_child = false	841:6:18439:18455	5769786	0	True				
ANR	5770273	AssignmentExpression	is_child = false		5769786	0		=			
ANR	5770274	Identifier	is_child		5769786	0					
ANR	5770275	Identifier	false		5769786	1					
ANR	5770276	IfStatement	if ( is_child )		5769786	2					
ANR	5770277	Condition	is_child	845:8:18479:18486	5769786	0	True				
ANR	5770278	Identifier	is_child		5769786	0					
ANR	5770279	CompoundStatement		94:18:2246:2246	5769786	1					
ANR	5770280	ExpressionStatement	r_socket_close_fd ( fd )	846:5:18496:18518	5769786	0	True				
ANR	5770281	CallExpression	r_socket_close_fd ( fd )		5769786	0					
ANR	5770282	Callee	r_socket_close_fd		5769786	0					
ANR	5770283	Identifier	r_socket_close_fd		5769786	0					
ANR	5770284	ArgumentList	fd		5769786	1					
ANR	5770285	Argument	fd		5769786	0					
ANR	5770286	Identifier	fd		5769786	0					
ANR	5770287	ExpressionStatement	"eprintf ( ""connected\\n"" )"	847:5:18525:18548	5769786	1	True				
ANR	5770288	CallExpression	"eprintf ( ""connected\\n"" )"		5769786	0					
ANR	5770289	Callee	eprintf		5769786	0					
ANR	5770290	Identifier	eprintf		5769786	0					
ANR	5770291	ArgumentList	"""connected\\n"""		5769786	1					
ANR	5770292	Argument	"""connected\\n"""		5769786	0					
ANR	5770293	PrimaryExpression	"""connected\\n"""		5769786	0					
ANR	5770294	IfStatement	if ( p -> _pty )		5769786	2					
ANR	5770295	Condition	p -> _pty	848:9:18559:18565	5769786	0	True				
ANR	5770296	PtrMemberAccess	p -> _pty		5769786	0					
ANR	5770297	Identifier	p		5769786	0					
ANR	5770298	Identifier	_pty		5769786	1					
ANR	5770299	CompoundStatement		97:18:2325:2325	5769786	1					
ANR	5770300	IfStatement	if ( redirect_socket_to_pty ( child ) != 0 )		5769786	0					
ANR	5770301	Condition	redirect_socket_to_pty ( child ) != 0	849:10:18580:18614	5769786	0	True				
ANR	5770302	EqualityExpression	redirect_socket_to_pty ( child ) != 0		5769786	0		!=			
ANR	5770303	CallExpression	redirect_socket_to_pty ( child )		5769786	0					
ANR	5770304	Callee	redirect_socket_to_pty		5769786	0					
ANR	5770305	Identifier	redirect_socket_to_pty		5769786	0					
ANR	5770306	ArgumentList	child		5769786	1					
ANR	5770307	Argument	child		5769786	0					
ANR	5770308	Identifier	child		5769786	0					
ANR	5770309	PrimaryExpression	0		5769786	1					
ANR	5770310	CompoundStatement		98:47:2374:2374	5769786	1					
ANR	5770311	ExpressionStatement	"eprintf ( ""socket redirection failed\\n"" )"	850:7:18626:18665	5769786	0	True				
ANR	5770312	CallExpression	"eprintf ( ""socket redirection failed\\n"" )"		5769786	0					
ANR	5770313	Callee	eprintf		5769786	0					
ANR	5770314	Identifier	eprintf		5769786	0					
ANR	5770315	ArgumentList	"""socket redirection failed\\n"""		5769786	1					
ANR	5770316	Argument	"""socket redirection failed\\n"""		5769786	0					
ANR	5770317	PrimaryExpression	"""socket redirection failed\\n"""		5769786	0					
ANR	5770318	ExpressionStatement	r_socket_free ( child )	851:7:18674:18695	5769786	1	True				
ANR	5770319	CallExpression	r_socket_free ( child )		5769786	0					
ANR	5770320	Callee	r_socket_free		5769786	0					
ANR	5770321	Identifier	r_socket_free		5769786	0					
ANR	5770322	ArgumentList	child		5769786	1					
ANR	5770323	Argument	child		5769786	0					
ANR	5770324	Identifier	child		5769786	0					
ANR	5770325	ExpressionStatement	r_socket_free ( fd )	852:7:18704:18722	5769786	2	True				
ANR	5770326	CallExpression	r_socket_free ( fd )		5769786	0					
ANR	5770327	Callee	r_socket_free		5769786	0					
ANR	5770328	Identifier	r_socket_free		5769786	0					
ANR	5770329	ArgumentList	fd		5769786	1					
ANR	5770330	Argument	fd		5769786	0					
ANR	5770331	Identifier	fd		5769786	0					
ANR	5770332	ReturnStatement	return 1 ;	853:7:18731:18739	5769786	3	True				
ANR	5770333	PrimaryExpression	1		5769786	0					
ANR	5770334	ElseStatement	else		5769786	0					
ANR	5770335	CompoundStatement		104:12:2518:2518	5769786	0					
ANR	5770336	ExpressionStatement	redirect_socket_to_stdio ( child )	856:6:18769:18801	5769786	0	True				
ANR	5770337	CallExpression	redirect_socket_to_stdio ( child )		5769786	0					
ANR	5770338	Callee	redirect_socket_to_stdio		5769786	0					
ANR	5770339	Identifier	redirect_socket_to_stdio		5769786	0					
ANR	5770340	ArgumentList	child		5769786	1					
ANR	5770341	Argument	child		5769786	0					
ANR	5770342	Identifier	child		5769786	0					
ANR	5770343	BreakStatement	break ;	858:5:18815:18820	5769786	3	True				
ANR	5770344	ElseStatement	else		5769786	0					
ANR	5770345	CompoundStatement		108:11:2590:2590	5769786	0					
ANR	5770346	ExpressionStatement	r_socket_close_fd ( child )	860:5:18840:18865	5769786	0	True				
ANR	5770347	CallExpression	r_socket_close_fd ( child )		5769786	0					
ANR	5770348	Callee	r_socket_close_fd		5769786	0					
ANR	5770349	Identifier	r_socket_close_fd		5769786	0					
ANR	5770350	ArgumentList	child		5769786	1					
ANR	5770351	Argument	child		5769786	0					
ANR	5770352	Identifier	child		5769786	0					
ANR	5770353	IfStatement	if ( ! is_child )		5769786	4					
ANR	5770354	Condition	! is_child	864:6:18888:18896	5769786	0	True				
ANR	5770355	UnaryOperationExpression	! is_child		5769786	0					
ANR	5770356	UnaryOperator	!		5769786	0					
ANR	5770357	Identifier	is_child		5769786	1					
ANR	5770358	CompoundStatement		113:17:2656:2656	5769786	1					
ANR	5770359	ExpressionStatement	r_socket_free ( child )	865:3:18904:18925	5769786	0	True				
ANR	5770360	CallExpression	r_socket_free ( child )		5769786	0					
ANR	5770361	Callee	r_socket_free		5769786	0					
ANR	5770362	Identifier	r_socket_free		5769786	0					
ANR	5770363	ArgumentList	child		5769786	1					
ANR	5770364	Argument	child		5769786	0					
ANR	5770365	Identifier	child		5769786	0					
ANR	5770366	ExpressionStatement	r_socket_free ( fd )	867:2:18933:18951	5769786	5	True				
ANR	5770367	CallExpression	r_socket_free ( fd )		5769786	0					
ANR	5770368	Callee	r_socket_free		5769786	0					
ANR	5770369	Identifier	r_socket_free		5769786	0					
ANR	5770370	ArgumentList	fd		5769786	1					
ANR	5770371	Argument	fd		5769786	0					
ANR	5770372	Identifier	fd		5769786	0					
ANR	5770373	IfStatement	if ( p -> _r2sleep != 0 )		5769786	13					
ANR	5770374	Condition	p -> _r2sleep != 0	869:5:18961:18976	5769786	0	True				
ANR	5770375	EqualityExpression	p -> _r2sleep != 0		5769786	0		!=			
ANR	5770376	PtrMemberAccess	p -> _r2sleep		5769786	0					
ANR	5770377	Identifier	p		5769786	0					
ANR	5770378	Identifier	_r2sleep		5769786	1					
ANR	5770379	PrimaryExpression	0		5769786	1					
ANR	5770380	CompoundStatement		118:23:2736:2736	5769786	1					
ANR	5770381	ExpressionStatement	r_sys_sleep ( p -> _r2sleep )	870:2:18983:19008	5769786	0	True				
ANR	5770382	CallExpression	r_sys_sleep ( p -> _r2sleep )		5769786	0					
ANR	5770383	Callee	r_sys_sleep		5769786	0					
ANR	5770384	Identifier	r_sys_sleep		5769786	0					
ANR	5770385	ArgumentList	p -> _r2sleep		5769786	1					
ANR	5770386	Argument	p -> _r2sleep		5769786	0					
ANR	5770387	PtrMemberAccess	p -> _r2sleep		5769786	0					
ANR	5770388	Identifier	p		5769786	0					
ANR	5770389	Identifier	_r2sleep		5769786	1					
ANR	5770390	IfStatement	if ( p -> _chroot )		5769786	14					
ANR	5770391	Condition	p -> _chroot	873:5:19031:19040	5769786	0	True				
ANR	5770392	PtrMemberAccess	p -> _chroot		5769786	0					
ANR	5770393	Identifier	p		5769786	0					
ANR	5770394	Identifier	_chroot		5769786	1					
ANR	5770395	CompoundStatement		122:17:2800:2800	5769786	1					
ANR	5770396	IfStatement	if ( chdir ( p -> _chroot ) == - 1 )		5769786	0					
ANR	5770397	Condition	chdir ( p -> _chroot ) == - 1	874:6:19051:19074	5769786	0	True				
ANR	5770398	EqualityExpression	chdir ( p -> _chroot ) == - 1		5769786	0		==			
ANR	5770399	CallExpression	chdir ( p -> _chroot )		5769786	0					
ANR	5770400	Callee	chdir		5769786	0					
ANR	5770401	Identifier	chdir		5769786	0					
ANR	5770402	ArgumentList	p -> _chroot		5769786	1					
ANR	5770403	Argument	p -> _chroot		5769786	0					
ANR	5770404	PtrMemberAccess	p -> _chroot		5769786	0					
ANR	5770405	Identifier	p		5769786	0					
ANR	5770406	Identifier	_chroot		5769786	1					
ANR	5770407	UnaryOperationExpression	- 1		5769786	1					
ANR	5770408	UnaryOperator	-		5769786	0					
ANR	5770409	PrimaryExpression	1		5769786	1					
ANR	5770410	CompoundStatement		123:32:2834:2834	5769786	1					
ANR	5770411	ExpressionStatement	"eprintf ( ""Cannot chdir to chroot in %s\\n"" , p -> _chroot )"	875:3:19082:19136	5769786	0	True				
ANR	5770412	CallExpression	"eprintf ( ""Cannot chdir to chroot in %s\\n"" , p -> _chroot )"		5769786	0					
ANR	5770413	Callee	eprintf		5769786	0					
ANR	5770414	Identifier	eprintf		5769786	0					
ANR	5770415	ArgumentList	"""Cannot chdir to chroot in %s\\n"""		5769786	1					
ANR	5770416	Argument	"""Cannot chdir to chroot in %s\\n"""		5769786	0					
ANR	5770417	PrimaryExpression	"""Cannot chdir to chroot in %s\\n"""		5769786	0					
ANR	5770418	Argument	p -> _chroot		5769786	1					
ANR	5770419	PtrMemberAccess	p -> _chroot		5769786	0					
ANR	5770420	Identifier	p		5769786	0					
ANR	5770421	Identifier	_chroot		5769786	1					
ANR	5770422	ReturnStatement	return 1 ;	876:3:19141:19149	5769786	1	True				
ANR	5770423	PrimaryExpression	1		5769786	0					
ANR	5770424	ElseStatement	else		5769786	0					
ANR	5770425	CompoundStatement		126:9:2917:2917	5769786	0					
ANR	5770426	IfStatement	"if ( chroot ( ""."" ) == - 1 )"		5769786	0					
ANR	5770427	Condition	"chroot ( ""."" ) == - 1"	878:7:19169:19186	5769786	0	True				
ANR	5770428	EqualityExpression	"chroot ( ""."" ) == - 1"		5769786	0		==			
ANR	5770429	CallExpression	"chroot ( ""."" )"		5769786	0					
ANR	5770430	Callee	chroot		5769786	0					
ANR	5770431	Identifier	chroot		5769786	0					
ANR	5770432	ArgumentList	"""."""		5769786	1					
ANR	5770433	Argument	"""."""		5769786	0					
ANR	5770434	PrimaryExpression	"""."""		5769786	0					
ANR	5770435	UnaryOperationExpression	- 1		5769786	1					
ANR	5770436	UnaryOperator	-		5769786	0					
ANR	5770437	PrimaryExpression	1		5769786	1					
ANR	5770438	CompoundStatement		127:27:2946:2946	5769786	1					
ANR	5770439	ExpressionStatement	"eprintf ( ""Cannot chroot to %s\\n"" , p -> _chroot )"	879:4:19195:19240	5769786	0	True				
ANR	5770440	CallExpression	"eprintf ( ""Cannot chroot to %s\\n"" , p -> _chroot )"		5769786	0					
ANR	5770441	Callee	eprintf		5769786	0					
ANR	5770442	Identifier	eprintf		5769786	0					
ANR	5770443	ArgumentList	"""Cannot chroot to %s\\n"""		5769786	1					
ANR	5770444	Argument	"""Cannot chroot to %s\\n"""		5769786	0					
ANR	5770445	PrimaryExpression	"""Cannot chroot to %s\\n"""		5769786	0					
ANR	5770446	Argument	p -> _chroot		5769786	1					
ANR	5770447	PtrMemberAccess	p -> _chroot		5769786	0					
ANR	5770448	Identifier	p		5769786	0					
ANR	5770449	Identifier	_chroot		5769786	1					
ANR	5770450	ReturnStatement	return 1 ;	880:4:19246:19254	5769786	1	True				
ANR	5770451	PrimaryExpression	1		5769786	0					
ANR	5770452	ElseStatement	else		5769786	0					
ANR	5770453	CompoundStatement		130:10:3023:3023	5769786	0					
ANR	5770454	IfStatement	"if ( chdir ( ""/"" ) == - 1 )"		5769786	0					
ANR	5770455	Condition	"chdir ( ""/"" ) == - 1"	883:8:19317:19333	5769786	0	True				
ANR	5770456	EqualityExpression	"chdir ( ""/"" ) == - 1"		5769786	0		==			
ANR	5770457	CallExpression	"chdir ( ""/"" )"		5769786	0					
ANR	5770458	Callee	chdir		5769786	0					
ANR	5770459	Identifier	chdir		5769786	0					
ANR	5770460	ArgumentList	"""/"""		5769786	1					
ANR	5770461	Argument	"""/"""		5769786	0					
ANR	5770462	PrimaryExpression	"""/"""		5769786	0					
ANR	5770463	UnaryOperationExpression	- 1		5769786	1					
ANR	5770464	UnaryOperator	-		5769786	0					
ANR	5770465	PrimaryExpression	1		5769786	1					
ANR	5770466	CompoundStatement		132:27:3093:3093	5769786	1					
ANR	5770467	ExpressionStatement	"eprintf ( ""Cannot chdir to /\\n"" )"	884:5:19343:19374	5769786	0	True				
ANR	5770468	CallExpression	"eprintf ( ""Cannot chdir to /\\n"" )"		5769786	0					
ANR	5770469	Callee	eprintf		5769786	0					
ANR	5770470	Identifier	eprintf		5769786	0					
ANR	5770471	ArgumentList	"""Cannot chdir to /\\n"""		5769786	1					
ANR	5770472	Argument	"""Cannot chdir to /\\n"""		5769786	0					
ANR	5770473	PrimaryExpression	"""Cannot chdir to /\\n"""		5769786	0					
ANR	5770474	ReturnStatement	return 1 ;	885:5:19381:19389	5769786	1	True				
ANR	5770475	PrimaryExpression	1		5769786	0					
ANR	5770476	IfStatement	if ( p -> _chgdir )		5769786	1					
ANR	5770477	Condition	p -> _chgdir	887:8:19405:19414	5769786	0	True				
ANR	5770478	PtrMemberAccess	p -> _chgdir		5769786	0					
ANR	5770479	Identifier	p		5769786	0					
ANR	5770480	Identifier	_chgdir		5769786	1					
ANR	5770481	CompoundStatement		136:20:3174:3174	5769786	1					
ANR	5770482	IfStatement	if ( chdir ( p -> _chgdir ) == - 1 )		5769786	0					
ANR	5770483	Condition	chdir ( p -> _chgdir ) == - 1	888:9:19428:19451	5769786	0	True				
ANR	5770484	EqualityExpression	chdir ( p -> _chgdir ) == - 1		5769786	0		==			
ANR	5770485	CallExpression	chdir ( p -> _chgdir )		5769786	0					
ANR	5770486	Callee	chdir		5769786	0					
ANR	5770487	Identifier	chdir		5769786	0					
ANR	5770488	ArgumentList	p -> _chgdir		5769786	1					
ANR	5770489	Argument	p -> _chgdir		5769786	0					
ANR	5770490	PtrMemberAccess	p -> _chgdir		5769786	0					
ANR	5770491	Identifier	p		5769786	0					
ANR	5770492	Identifier	_chgdir		5769786	1					
ANR	5770493	UnaryOperationExpression	- 1		5769786	1					
ANR	5770494	UnaryOperator	-		5769786	0					
ANR	5770495	PrimaryExpression	1		5769786	1					
ANR	5770496	CompoundStatement		137:35:3211:3211	5769786	1					
ANR	5770497	ExpressionStatement	"eprintf ( ""Cannot chdir after chroot to %s\\n"" , p -> _chgdir )"	889:6:19462:19519	5769786	0	True				
ANR	5770498	CallExpression	"eprintf ( ""Cannot chdir after chroot to %s\\n"" , p -> _chgdir )"		5769786	0					
ANR	5770499	Callee	eprintf		5769786	0					
ANR	5770500	Identifier	eprintf		5769786	0					
ANR	5770501	ArgumentList	"""Cannot chdir after chroot to %s\\n"""		5769786	1					
ANR	5770502	Argument	"""Cannot chdir after chroot to %s\\n"""		5769786	0					
ANR	5770503	PrimaryExpression	"""Cannot chdir after chroot to %s\\n"""		5769786	0					
ANR	5770504	Argument	p -> _chgdir		5769786	1					
ANR	5770505	PtrMemberAccess	p -> _chgdir		5769786	0					
ANR	5770506	Identifier	p		5769786	0					
ANR	5770507	Identifier	_chgdir		5769786	1					
ANR	5770508	ReturnStatement	return 1 ;	890:6:19527:19535	5769786	1	True				
ANR	5770509	PrimaryExpression	1		5769786	0					
ANR	5770510	ElseStatement	else		5769786	0					
ANR	5770511	IfStatement	if ( p -> _chgdir )		5769786	0					
ANR	5770512	Condition	p -> _chgdir	895:12:19571:19580	5769786	0	True				
ANR	5770513	PtrMemberAccess	p -> _chgdir		5769786	0					
ANR	5770514	Identifier	p		5769786	0					
ANR	5770515	Identifier	_chgdir		5769786	1					
ANR	5770516	CompoundStatement		144:24:3340:3340	5769786	1					
ANR	5770517	IfStatement	if ( chdir ( p -> _chgdir ) == - 1 )		5769786	0					
ANR	5770518	Condition	chdir ( p -> _chgdir ) == - 1	896:6:19591:19614	5769786	0	True				
ANR	5770519	EqualityExpression	chdir ( p -> _chgdir ) == - 1		5769786	0		==			
ANR	5770520	CallExpression	chdir ( p -> _chgdir )		5769786	0					
ANR	5770521	Callee	chdir		5769786	0					
ANR	5770522	Identifier	chdir		5769786	0					
ANR	5770523	ArgumentList	p -> _chgdir		5769786	1					
ANR	5770524	Argument	p -> _chgdir		5769786	0					
ANR	5770525	PtrMemberAccess	p -> _chgdir		5769786	0					
ANR	5770526	Identifier	p		5769786	0					
ANR	5770527	Identifier	_chgdir		5769786	1					
ANR	5770528	UnaryOperationExpression	- 1		5769786	1					
ANR	5770529	UnaryOperator	-		5769786	0					
ANR	5770530	PrimaryExpression	1		5769786	1					
ANR	5770531	CompoundStatement		145:32:3374:3374	5769786	1					
ANR	5770532	ExpressionStatement	"eprintf ( ""Cannot chdir after chroot to %s\\n"" , p -> _chgdir )"	897:3:19622:19679	5769786	0	True				
ANR	5770533	CallExpression	"eprintf ( ""Cannot chdir after chroot to %s\\n"" , p -> _chgdir )"		5769786	0					
ANR	5770534	Callee	eprintf		5769786	0					
ANR	5770535	Identifier	eprintf		5769786	0					
ANR	5770536	ArgumentList	"""Cannot chdir after chroot to %s\\n"""		5769786	1					
ANR	5770537	Argument	"""Cannot chdir after chroot to %s\\n"""		5769786	0					
ANR	5770538	PrimaryExpression	"""Cannot chdir after chroot to %s\\n"""		5769786	0					
ANR	5770539	Argument	p -> _chgdir		5769786	1					
ANR	5770540	PtrMemberAccess	p -> _chgdir		5769786	0					
ANR	5770541	Identifier	p		5769786	0					
ANR	5770542	Identifier	_chgdir		5769786	1					
ANR	5770543	ReturnStatement	return 1 ;	898:3:19684:19692	5769786	1	True				
ANR	5770544	PrimaryExpression	1		5769786	0					
ANR	5770545	IfStatement	if ( p -> _setuid )		5769786	15					
ANR	5770546	Condition	p -> _setuid	916:5:19900:19909	5769786	0	True				
ANR	5770547	PtrMemberAccess	p -> _setuid		5769786	0					
ANR	5770548	Identifier	p		5769786	0					
ANR	5770549	Identifier	_setuid		5769786	1					
ANR	5770550	CompoundStatement		165:17:3669:3669	5769786	1					
ANR	5770551	ExpressionStatement	"ret = setgroups ( 0 , NULL )"	917:2:19916:19941	5769786	0	True				
ANR	5770552	AssignmentExpression	"ret = setgroups ( 0 , NULL )"		5769786	0		=			
ANR	5770553	Identifier	ret		5769786	0					
ANR	5770554	CallExpression	"setgroups ( 0 , NULL )"		5769786	1					
ANR	5770555	Callee	setgroups		5769786	0					
ANR	5770556	Identifier	setgroups		5769786	0					
ANR	5770557	ArgumentList	0		5769786	1					
ANR	5770558	Argument	0		5769786	0					
ANR	5770559	PrimaryExpression	0		5769786	0					
ANR	5770560	Argument	NULL		5769786	1					
ANR	5770561	Identifier	NULL		5769786	0					
ANR	5770562	IfStatement	if ( ret < 0 )		5769786	1					
ANR	5770563	Condition	ret < 0	918:6:19949:19955	5769786	0	True				
ANR	5770564	RelationalExpression	ret < 0		5769786	0		<			
ANR	5770565	Identifier	ret		5769786	0					
ANR	5770566	PrimaryExpression	0		5769786	1					
ANR	5770567	CompoundStatement		167:15:3715:3715	5769786	1					
ANR	5770568	ReturnStatement	return 1 ;	919:3:19963:19971	5769786	0	True				
ANR	5770569	PrimaryExpression	1		5769786	0					
ANR	5770570	ExpressionStatement	ret = setuid ( atoi ( p -> _setuid ) )	921:2:19979:20011	5769786	2	True				
ANR	5770571	AssignmentExpression	ret = setuid ( atoi ( p -> _setuid ) )		5769786	0		=			
ANR	5770572	Identifier	ret		5769786	0					
ANR	5770573	CallExpression	setuid ( atoi ( p -> _setuid ) )		5769786	1					
ANR	5770574	Callee	setuid		5769786	0					
ANR	5770575	Identifier	setuid		5769786	0					
ANR	5770576	ArgumentList	atoi ( p -> _setuid )		5769786	1					
ANR	5770577	Argument	atoi ( p -> _setuid )		5769786	0					
ANR	5770578	CallExpression	atoi ( p -> _setuid )		5769786	0					
ANR	5770579	Callee	atoi		5769786	0					
ANR	5770580	Identifier	atoi		5769786	0					
ANR	5770581	ArgumentList	p -> _setuid		5769786	1					
ANR	5770582	Argument	p -> _setuid		5769786	0					
ANR	5770583	PtrMemberAccess	p -> _setuid		5769786	0					
ANR	5770584	Identifier	p		5769786	0					
ANR	5770585	Identifier	_setuid		5769786	1					
ANR	5770586	IfStatement	if ( ret < 0 )		5769786	3					
ANR	5770587	Condition	ret < 0	922:6:20019:20025	5769786	0	True				
ANR	5770588	RelationalExpression	ret < 0		5769786	0		<			
ANR	5770589	Identifier	ret		5769786	0					
ANR	5770590	PrimaryExpression	0		5769786	1					
ANR	5770591	CompoundStatement		171:15:3785:3785	5769786	1					
ANR	5770592	ReturnStatement	return 1 ;	923:3:20033:20041	5769786	0	True				
ANR	5770593	PrimaryExpression	1		5769786	0					
ANR	5770594	IfStatement	if ( p -> _seteuid )		5769786	16					
ANR	5770595	Condition	p -> _seteuid	926:5:20055:20065	5769786	0	True				
ANR	5770596	PtrMemberAccess	p -> _seteuid		5769786	0					
ANR	5770597	Identifier	p		5769786	0					
ANR	5770598	Identifier	_seteuid		5769786	1					
ANR	5770599	CompoundStatement		175:18:3825:3825	5769786	1					
ANR	5770600	ExpressionStatement	ret = seteuid ( atoi ( p -> _seteuid ) )	927:2:20072:20106	5769786	0	True				
ANR	5770601	AssignmentExpression	ret = seteuid ( atoi ( p -> _seteuid ) )		5769786	0		=			
ANR	5770602	Identifier	ret		5769786	0					
ANR	5770603	CallExpression	seteuid ( atoi ( p -> _seteuid ) )		5769786	1					
ANR	5770604	Callee	seteuid		5769786	0					
ANR	5770605	Identifier	seteuid		5769786	0					
ANR	5770606	ArgumentList	atoi ( p -> _seteuid )		5769786	1					
ANR	5770607	Argument	atoi ( p -> _seteuid )		5769786	0					
ANR	5770608	CallExpression	atoi ( p -> _seteuid )		5769786	0					
ANR	5770609	Callee	atoi		5769786	0					
ANR	5770610	Identifier	atoi		5769786	0					
ANR	5770611	ArgumentList	p -> _seteuid		5769786	1					
ANR	5770612	Argument	p -> _seteuid		5769786	0					
ANR	5770613	PtrMemberAccess	p -> _seteuid		5769786	0					
ANR	5770614	Identifier	p		5769786	0					
ANR	5770615	Identifier	_seteuid		5769786	1					
ANR	5770616	IfStatement	if ( ret < 0 )		5769786	1					
ANR	5770617	Condition	ret < 0	928:6:20114:20120	5769786	0	True				
ANR	5770618	RelationalExpression	ret < 0		5769786	0		<			
ANR	5770619	Identifier	ret		5769786	0					
ANR	5770620	PrimaryExpression	0		5769786	1					
ANR	5770621	CompoundStatement		177:15:3880:3880	5769786	1					
ANR	5770622	ReturnStatement	return 1 ;	929:3:20128:20136	5769786	0	True				
ANR	5770623	PrimaryExpression	1		5769786	0					
ANR	5770624	IfStatement	if ( p -> _setgid )		5769786	17					
ANR	5770625	Condition	p -> _setgid	932:5:20150:20159	5769786	0	True				
ANR	5770626	PtrMemberAccess	p -> _setgid		5769786	0					
ANR	5770627	Identifier	p		5769786	0					
ANR	5770628	Identifier	_setgid		5769786	1					
ANR	5770629	CompoundStatement		181:17:3919:3919	5769786	1					
ANR	5770630	ExpressionStatement	ret = setgid ( atoi ( p -> _setgid ) )	933:2:20166:20198	5769786	0	True				
ANR	5770631	AssignmentExpression	ret = setgid ( atoi ( p -> _setgid ) )		5769786	0		=			
ANR	5770632	Identifier	ret		5769786	0					
ANR	5770633	CallExpression	setgid ( atoi ( p -> _setgid ) )		5769786	1					
ANR	5770634	Callee	setgid		5769786	0					
ANR	5770635	Identifier	setgid		5769786	0					
ANR	5770636	ArgumentList	atoi ( p -> _setgid )		5769786	1					
ANR	5770637	Argument	atoi ( p -> _setgid )		5769786	0					
ANR	5770638	CallExpression	atoi ( p -> _setgid )		5769786	0					
ANR	5770639	Callee	atoi		5769786	0					
ANR	5770640	Identifier	atoi		5769786	0					
ANR	5770641	ArgumentList	p -> _setgid		5769786	1					
ANR	5770642	Argument	p -> _setgid		5769786	0					
ANR	5770643	PtrMemberAccess	p -> _setgid		5769786	0					
ANR	5770644	Identifier	p		5769786	0					
ANR	5770645	Identifier	_setgid		5769786	1					
ANR	5770646	IfStatement	if ( ret < 0 )		5769786	1					
ANR	5770647	Condition	ret < 0	934:6:20206:20212	5769786	0	True				
ANR	5770648	RelationalExpression	ret < 0		5769786	0		<			
ANR	5770649	Identifier	ret		5769786	0					
ANR	5770650	PrimaryExpression	0		5769786	1					
ANR	5770651	CompoundStatement		183:15:3972:3972	5769786	1					
ANR	5770652	ReturnStatement	return 1 ;	935:3:20220:20228	5769786	0	True				
ANR	5770653	PrimaryExpression	1		5769786	0					
ANR	5770654	IfStatement	if ( p -> _input )		5769786	18					
ANR	5770655	Condition	p -> _input	938:5:20242:20250	5769786	0	True				
ANR	5770656	PtrMemberAccess	p -> _input		5769786	0					
ANR	5770657	Identifier	p		5769786	0					
ANR	5770658	Identifier	_input		5769786	1					
ANR	5770659	CompoundStatement		189:2:4027:4036	5769786	1					
ANR	5770660	IdentifierDeclStatement	char * inp ;	939:2:20257:20266	5769786	0	True				
ANR	5770661	IdentifierDecl	* inp		5769786	0					
ANR	5770662	IdentifierDeclType	char *		5769786	0					
ANR	5770663	Identifier	inp		5769786	1					
ANR	5770664	IdentifierDeclStatement	int f2 [ 2 ] ;	940:2:20270:20279	5769786	1	True				
ANR	5770665	IdentifierDecl	f2 [ 2 ]		5769786	0					
ANR	5770666	IdentifierDeclType	int [ 2 ]		5769786	0					
ANR	5770667	Identifier	f2		5769786	1					
ANR	5770668	PrimaryExpression	2		5769786	2					
ANR	5770669	IfStatement	if ( pipe ( f2 ) != - 1 )		5769786	2					
ANR	5770670	Condition	pipe ( f2 ) != - 1	941:6:20287:20301	5769786	0	True				
ANR	5770671	EqualityExpression	pipe ( f2 ) != - 1		5769786	0		!=			
ANR	5770672	CallExpression	pipe ( f2 )		5769786	0					
ANR	5770673	Callee	pipe		5769786	0					
ANR	5770674	Identifier	pipe		5769786	0					
ANR	5770675	ArgumentList	f2		5769786	1					
ANR	5770676	Argument	f2		5769786	0					
ANR	5770677	Identifier	f2		5769786	0					
ANR	5770678	UnaryOperationExpression	- 1		5769786	1					
ANR	5770679	UnaryOperator	-		5769786	0					
ANR	5770680	PrimaryExpression	1		5769786	1					
ANR	5770681	CompoundStatement		190:23:4061:4061	5769786	1					
ANR	5770682	ExpressionStatement	close ( 0 )	942:3:20309:20318	5769786	0	True				
ANR	5770683	CallExpression	close ( 0 )		5769786	0					
ANR	5770684	Callee	close		5769786	0					
ANR	5770685	Identifier	close		5769786	0					
ANR	5770686	ArgumentList	0		5769786	1					
ANR	5770687	Argument	0		5769786	0					
ANR	5770688	PrimaryExpression	0		5769786	0					
ANR	5770689	ExpressionStatement	"dup2 ( f2 [ 0 ] , 0 )"	943:3:20323:20338	5769786	1	True				
ANR	5770690	CallExpression	"dup2 ( f2 [ 0 ] , 0 )"		5769786	0					
ANR	5770691	Callee	dup2		5769786	0					
ANR	5770692	Identifier	dup2		5769786	0					
ANR	5770693	ArgumentList	f2 [ 0 ]		5769786	1					
ANR	5770694	Argument	f2 [ 0 ]		5769786	0					
ANR	5770695	ArrayIndexing	f2 [ 0 ]		5769786	0					
ANR	5770696	Identifier	f2		5769786	0					
ANR	5770697	PrimaryExpression	0		5769786	1					
ANR	5770698	Argument	0		5769786	1					
ANR	5770699	PrimaryExpression	0		5769786	0					
ANR	5770700	ElseStatement	else		5769786	0					
ANR	5770701	CompoundStatement		193:9:4106:4106	5769786	0					
ANR	5770702	ExpressionStatement	"eprintf ( ""[ERROR] rarun2: Cannot create pipe\\n"" )"	945:3:20354:20402	5769786	0	True				
ANR	5770703	CallExpression	"eprintf ( ""[ERROR] rarun2: Cannot create pipe\\n"" )"		5769786	0					
ANR	5770704	Callee	eprintf		5769786	0					
ANR	5770705	Identifier	eprintf		5769786	0					
ANR	5770706	ArgumentList	"""[ERROR] rarun2: Cannot create pipe\\n"""		5769786	1					
ANR	5770707	Argument	"""[ERROR] rarun2: Cannot create pipe\\n"""		5769786	0					
ANR	5770708	PrimaryExpression	"""[ERROR] rarun2: Cannot create pipe\\n"""		5769786	0					
ANR	5770709	ReturnStatement	return 1 ;	946:3:20407:20415	5769786	1	True				
ANR	5770710	PrimaryExpression	1		5769786	0					
ANR	5770711	ExpressionStatement	inp = getstr ( p -> _input )	948:2:20423:20447	5769786	3	True				
ANR	5770712	AssignmentExpression	inp = getstr ( p -> _input )		5769786	0		=			
ANR	5770713	Identifier	inp		5769786	0					
ANR	5770714	CallExpression	getstr ( p -> _input )		5769786	1					
ANR	5770715	Callee	getstr		5769786	0					
ANR	5770716	Identifier	getstr		5769786	0					
ANR	5770717	ArgumentList	p -> _input		5769786	1					
ANR	5770718	Argument	p -> _input		5769786	0					
ANR	5770719	PtrMemberAccess	p -> _input		5769786	0					
ANR	5770720	Identifier	p		5769786	0					
ANR	5770721	Identifier	_input		5769786	1					
ANR	5770722	IfStatement	if ( inp )		5769786	4					
ANR	5770723	Condition	inp	949:6:20455:20457	5769786	0	True				
ANR	5770724	Identifier	inp		5769786	0					
ANR	5770725	CompoundStatement		199:3:4222:4248	5769786	1					
ANR	5770726	IdentifierDeclStatement	size_t inpl = strlen ( inp ) ;	950:3:20465:20491	5769786	0	True				
ANR	5770727	IdentifierDecl	inpl = strlen ( inp )		5769786	0					
ANR	5770728	IdentifierDeclType	size_t		5769786	0					
ANR	5770729	Identifier	inpl		5769786	1					
ANR	5770730	AssignmentExpression	inpl = strlen ( inp )		5769786	2		=			
ANR	5770731	Identifier	inpl		5769786	0					
ANR	5770732	CallExpression	strlen ( inp )		5769786	1					
ANR	5770733	Callee	strlen		5769786	0					
ANR	5770734	Identifier	strlen		5769786	0					
ANR	5770735	ArgumentList	inp		5769786	1					
ANR	5770736	Argument	inp		5769786	0					
ANR	5770737	Identifier	inp		5769786	0					
ANR	5770738	IfStatement	"if ( write ( f2 [ 1 ] , inp , inpl ) != inpl )"		5769786	1					
ANR	5770739	Condition	"write ( f2 [ 1 ] , inp , inpl ) != inpl"	951:8:20501:20532	5769786	0	True				
ANR	5770740	EqualityExpression	"write ( f2 [ 1 ] , inp , inpl ) != inpl"		5769786	0		!=			
ANR	5770741	CallExpression	"write ( f2 [ 1 ] , inp , inpl )"		5769786	0					
ANR	5770742	Callee	write		5769786	0					
ANR	5770743	Identifier	write		5769786	0					
ANR	5770744	ArgumentList	f2 [ 1 ]		5769786	1					
ANR	5770745	Argument	f2 [ 1 ]		5769786	0					
ANR	5770746	ArrayIndexing	f2 [ 1 ]		5769786	0					
ANR	5770747	Identifier	f2		5769786	0					
ANR	5770748	PrimaryExpression	1		5769786	1					
ANR	5770749	Argument	inp		5769786	1					
ANR	5770750	Identifier	inp		5769786	0					
ANR	5770751	Argument	inpl		5769786	2					
ANR	5770752	Identifier	inpl		5769786	0					
ANR	5770753	Identifier	inpl		5769786	1					
ANR	5770754	CompoundStatement		200:42:4292:4292	5769786	1					
ANR	5770755	ExpressionStatement	"eprintf ( ""[ERROR] rarun2: Cannot write to the pipe\\n"" )"	952:4:20541:20595	5769786	0	True				
ANR	5770756	CallExpression	"eprintf ( ""[ERROR] rarun2: Cannot write to the pipe\\n"" )"		5769786	0					
ANR	5770757	Callee	eprintf		5769786	0					
ANR	5770758	Identifier	eprintf		5769786	0					
ANR	5770759	ArgumentList	"""[ERROR] rarun2: Cannot write to the pipe\\n"""		5769786	1					
ANR	5770760	Argument	"""[ERROR] rarun2: Cannot write to the pipe\\n"""		5769786	0					
ANR	5770761	PrimaryExpression	"""[ERROR] rarun2: Cannot write to the pipe\\n"""		5769786	0					
ANR	5770762	ExpressionStatement	close ( f2 [ 1 ] )	954:3:20605:20618	5769786	2	True				
ANR	5770763	CallExpression	close ( f2 [ 1 ] )		5769786	0					
ANR	5770764	Callee	close		5769786	0					
ANR	5770765	Identifier	close		5769786	0					
ANR	5770766	ArgumentList	f2 [ 1 ]		5769786	1					
ANR	5770767	Argument	f2 [ 1 ]		5769786	0					
ANR	5770768	ArrayIndexing	f2 [ 1 ]		5769786	0					
ANR	5770769	Identifier	f2		5769786	0					
ANR	5770770	PrimaryExpression	1		5769786	1					
ANR	5770771	ExpressionStatement	free ( inp )	955:3:20623:20633	5769786	3	True				
ANR	5770772	CallExpression	free ( inp )		5769786	0					
ANR	5770773	Callee	free		5769786	0					
ANR	5770774	Identifier	free		5769786	0					
ANR	5770775	ArgumentList	inp		5769786	1					
ANR	5770776	Argument	inp		5769786	0					
ANR	5770777	Identifier	inp		5769786	0					
ANR	5770778	ElseStatement	else		5769786	0					
ANR	5770779	CompoundStatement		205:9:4401:4401	5769786	0					
ANR	5770780	ExpressionStatement	"eprintf ( ""Invalid input\\n"" )"	957:3:20649:20676	5769786	0	True				
ANR	5770781	CallExpression	"eprintf ( ""Invalid input\\n"" )"		5769786	0					
ANR	5770782	Callee	eprintf		5769786	0					
ANR	5770783	Identifier	eprintf		5769786	0					
ANR	5770784	ArgumentList	"""Invalid input\\n"""		5769786	1					
ANR	5770785	Argument	"""Invalid input\\n"""		5769786	0					
ANR	5770786	PrimaryExpression	"""Invalid input\\n"""		5769786	0					
ANR	5770787	IfStatement	if ( p -> _r2preload )		5769786	19					
ANR	5770788	Condition	p -> _r2preload	961:5:20697:20709	5769786	0	True				
ANR	5770789	PtrMemberAccess	p -> _r2preload		5769786	0					
ANR	5770790	Identifier	p		5769786	0					
ANR	5770791	Identifier	_r2preload		5769786	1					
ANR	5770792	CompoundStatement		210:20:4469:4469	5769786	1					
ANR	5770793	IfStatement	if ( p -> _preload )		5769786	0					
ANR	5770794	Condition	p -> _preload	962:6:20720:20730	5769786	0	True				
ANR	5770795	PtrMemberAccess	p -> _preload		5769786	0					
ANR	5770796	Identifier	p		5769786	0					
ANR	5770797	Identifier	_preload		5769786	1					
ANR	5770798	CompoundStatement		211:19:4490:4490	5769786	1					
ANR	5770799	ExpressionStatement	"eprintf ( ""WARNING: Only one library can be opened at a time\\n"" )"	963:3:20738:20801	5769786	0	True				
ANR	5770800	CallExpression	"eprintf ( ""WARNING: Only one library can be opened at a time\\n"" )"		5769786	0					
ANR	5770801	Callee	eprintf		5769786	0					
ANR	5770802	Identifier	eprintf		5769786	0					
ANR	5770803	ArgumentList	"""WARNING: Only one library can be opened at a time\\n"""		5769786	1					
ANR	5770804	Argument	"""WARNING: Only one library can be opened at a time\\n"""		5769786	0					
ANR	5770805	PrimaryExpression	"""WARNING: Only one library can be opened at a time\\n"""		5769786	0					
ANR	5770806	Statement	p	965:2:20809:20809	5769786	1	True				
ANR	5770807	Statement	->	965:3:20810:20811	5769786	2	True				
ANR	5770808	Statement	_preload	965:5:20812:20819	5769786	3	True				
ANR	5770809	Statement	=	965:14:20821:20821	5769786	4	True				
ANR	5770810	Statement	R2_LIBDIR	965:16:20823:20831	5769786	5	True				
ANR	5770811	Statement	"""/libr2."""	965:25:20832:20840	5769786	6	True				
ANR	5770812	ExpressionStatement	R_LIB_EXT	965:34:20841:20850	5769786	7	True				
ANR	5770813	Identifier	R_LIB_EXT		5769786	0					
ANR	5770814	IfStatement	if ( p -> _libpath )		5769786	20					
ANR	5770815	Condition	p -> _libpath	967:5:20860:20870	5769786	0	True				
ANR	5770816	PtrMemberAccess	p -> _libpath		5769786	0					
ANR	5770817	Identifier	p		5769786	0					
ANR	5770818	Identifier	_libpath		5769786	1					
ANR	5770819	CompoundStatement		216:18:4630:4630	5769786	1					
ANR	5770820	ExpressionStatement	"eprintf ( ""rarun2: libpath unsupported for this platform\\n"" )"	969:2:20893:20952	5769786	0	True				
ANR	5770821	CallExpression	"eprintf ( ""rarun2: libpath unsupported for this platform\\n"" )"		5769786	0					
ANR	5770822	Callee	eprintf		5769786	0					
ANR	5770823	Identifier	eprintf		5769786	0					
ANR	5770824	ArgumentList	"""rarun2: libpath unsupported for this platform\\n"""		5769786	1					
ANR	5770825	Argument	"""rarun2: libpath unsupported for this platform\\n"""		5769786	0					
ANR	5770826	PrimaryExpression	"""rarun2: libpath unsupported for this platform\\n"""		5769786	0					
ANR	5770827	IfStatement	if ( p -> _preload )		5769786	21					
ANR	5770828	Condition	p -> _preload	978:5:21153:21163	5769786	0	True				
ANR	5770829	PtrMemberAccess	p -> _preload		5769786	0					
ANR	5770830	Identifier	p		5769786	0					
ANR	5770831	Identifier	_preload		5769786	1					
ANR	5770832	CompoundStatement		227:18:4923:4923	5769786	1					
ANR	5770833	ExpressionStatement	"r_sys_setenv ( ""DYLD_PRELOAD"" , p -> _preload )"	982:2:21213:21255	5769786	0	True				
ANR	5770834	CallExpression	"r_sys_setenv ( ""DYLD_PRELOAD"" , p -> _preload )"		5769786	0					
ANR	5770835	Callee	r_sys_setenv		5769786	0					
ANR	5770836	Identifier	r_sys_setenv		5769786	0					
ANR	5770837	ArgumentList	"""DYLD_PRELOAD"""		5769786	1					
ANR	5770838	Argument	"""DYLD_PRELOAD"""		5769786	0					
ANR	5770839	PrimaryExpression	"""DYLD_PRELOAD"""		5769786	0					
ANR	5770840	Argument	p -> _preload		5769786	1					
ANR	5770841	PtrMemberAccess	p -> _preload		5769786	0					
ANR	5770842	Identifier	p		5769786	0					
ANR	5770843	Identifier	_preload		5769786	1					
ANR	5770844	ExpressionStatement	"r_sys_setenv ( ""DYLD_INSERT_LIBRARIES"" , p -> _preload )"	984:2:21266:21317	5769786	1	True				
ANR	5770845	CallExpression	"r_sys_setenv ( ""DYLD_INSERT_LIBRARIES"" , p -> _preload )"		5769786	0					
ANR	5770846	Callee	r_sys_setenv		5769786	0					
ANR	5770847	Identifier	r_sys_setenv		5769786	0					
ANR	5770848	ArgumentList	"""DYLD_INSERT_LIBRARIES"""		5769786	1					
ANR	5770849	Argument	"""DYLD_INSERT_LIBRARIES"""		5769786	0					
ANR	5770850	PrimaryExpression	"""DYLD_INSERT_LIBRARIES"""		5769786	0					
ANR	5770851	Argument	p -> _preload		5769786	1					
ANR	5770852	PtrMemberAccess	p -> _preload		5769786	0					
ANR	5770853	Identifier	p		5769786	0					
ANR	5770854	Identifier	_preload		5769786	1					
ANR	5770855	ExpressionStatement	"r_sys_setenv ( ""DYLD_FORCE_FLAT_NAMESPACE"" , ""1"" )"	986:2:21331:21378	5769786	2	True				
ANR	5770856	CallExpression	"r_sys_setenv ( ""DYLD_FORCE_FLAT_NAMESPACE"" , ""1"" )"		5769786	0					
ANR	5770857	Callee	r_sys_setenv		5769786	0					
ANR	5770858	Identifier	r_sys_setenv		5769786	0					
ANR	5770859	ArgumentList	"""DYLD_FORCE_FLAT_NAMESPACE"""		5769786	1					
ANR	5770860	Argument	"""DYLD_FORCE_FLAT_NAMESPACE"""		5769786	0					
ANR	5770861	PrimaryExpression	"""DYLD_FORCE_FLAT_NAMESPACE"""		5769786	0					
ANR	5770862	Argument	"""1"""		5769786	1					
ANR	5770863	PrimaryExpression	"""1"""		5769786	0					
ANR	5770864	IfStatement	if ( p -> _timeout )		5769786	22					
ANR	5770865	Condition	p -> _timeout	991:5:21445:21455	5769786	0	True				
ANR	5770866	PtrMemberAccess	p -> _timeout		5769786	0					
ANR	5770867	Identifier	p		5769786	0					
ANR	5770868	Identifier	_timeout		5769786	1					
ANR	5770869	CompoundStatement		242:2:5232:5253	5769786	1					
ANR	5770870	IdentifierDeclStatement	int mypid = getpid ( ) ;	993:2:21475:21496	5769786	0	True				
ANR	5770871	IdentifierDecl	mypid = getpid ( )		5769786	0					
ANR	5770872	IdentifierDeclType	int		5769786	0					
ANR	5770873	Identifier	mypid		5769786	1					
ANR	5770874	AssignmentExpression	mypid = getpid ( )		5769786	2		=			
ANR	5770875	Identifier	mypid		5769786	0					
ANR	5770876	CallExpression	getpid ( )		5769786	1					
ANR	5770877	Callee	getpid		5769786	0					
ANR	5770878	Identifier	getpid		5769786	0					
ANR	5770879	ArgumentList			5769786	1					
ANR	5770880	IfStatement	if ( ! r_sys_fork ( ) )		5769786	1					
ANR	5770881	Condition	! r_sys_fork ( )	994:6:21504:21517	5769786	0	True				
ANR	5770882	UnaryOperationExpression	! r_sys_fork ( )		5769786	0					
ANR	5770883	UnaryOperator	!		5769786	0					
ANR	5770884	CallExpression	r_sys_fork ( )		5769786	1					
ANR	5770885	Callee	r_sys_fork		5769786	0					
ANR	5770886	Identifier	r_sys_fork		5769786	0					
ANR	5770887	ArgumentList			5769786	1					
ANR	5770888	CompoundStatement		244:3:5282:5314	5769786	1					
ANR	5770889	IdentifierDeclStatement	int use_signal = p -> _timeout_sig ;	995:3:21525:21557	5769786	0	True				
ANR	5770890	IdentifierDecl	use_signal = p -> _timeout_sig		5769786	0					
ANR	5770891	IdentifierDeclType	int		5769786	0					
ANR	5770892	Identifier	use_signal		5769786	1					
ANR	5770893	AssignmentExpression	use_signal = p -> _timeout_sig		5769786	2		=			
ANR	5770894	Identifier	use_signal		5769786	0					
ANR	5770895	PtrMemberAccess	p -> _timeout_sig		5769786	1					
ANR	5770896	Identifier	p		5769786	0					
ANR	5770897	Identifier	_timeout_sig		5769786	1					
ANR	5770898	IfStatement	if ( use_signal < 1 )		5769786	1					
ANR	5770899	Condition	use_signal < 1	996:7:21566:21579	5769786	0	True				
ANR	5770900	RelationalExpression	use_signal < 1		5769786	0		<			
ANR	5770901	Identifier	use_signal		5769786	0					
ANR	5770902	PrimaryExpression	1		5769786	1					
ANR	5770903	CompoundStatement		245:23:5339:5339	5769786	1					
ANR	5770904	ExpressionStatement	use_signal = SIGKILL	997:4:21588:21608	5769786	0	True				
ANR	5770905	AssignmentExpression	use_signal = SIGKILL		5769786	0		=			
ANR	5770906	Identifier	use_signal		5769786	0					
ANR	5770907	Identifier	SIGKILL		5769786	1					
ANR	5770908	ExpressionStatement	sleep ( p -> _timeout )	999:3:21618:21637	5769786	2	True				
ANR	5770909	CallExpression	sleep ( p -> _timeout )		5769786	0					
ANR	5770910	Callee	sleep		5769786	0					
ANR	5770911	Identifier	sleep		5769786	0					
ANR	5770912	ArgumentList	p -> _timeout		5769786	1					
ANR	5770913	Argument	p -> _timeout		5769786	0					
ANR	5770914	PtrMemberAccess	p -> _timeout		5769786	0					
ANR	5770915	Identifier	p		5769786	0					
ANR	5770916	Identifier	_timeout		5769786	1					
ANR	5770917	IfStatement	"if ( ! kill ( mypid , 0 ) )"		5769786	3					
ANR	5770918	Condition	"! kill ( mypid , 0 )"	1000:7:21646:21661	5769786	0	True				
ANR	5770919	UnaryOperationExpression	"! kill ( mypid , 0 )"		5769786	0					
ANR	5770920	UnaryOperator	!		5769786	0					
ANR	5770921	CallExpression	"kill ( mypid , 0 )"		5769786	1					
ANR	5770922	Callee	kill		5769786	0					
ANR	5770923	Identifier	kill		5769786	0					
ANR	5770924	ArgumentList	mypid		5769786	1					
ANR	5770925	Argument	mypid		5769786	0					
ANR	5770926	Identifier	mypid		5769786	0					
ANR	5770927	Argument	0		5769786	1					
ANR	5770928	PrimaryExpression	0		5769786	0					
ANR	5770929	CompoundStatement		249:25:5421:5421	5769786	1					
ANR	5770930	ExpressionStatement	"eprintf ( ""\\nrarun2: Interrupted by timeout\\n"" )"	1001:4:21670:21716	5769786	0	True				
ANR	5770931	CallExpression	"eprintf ( ""\\nrarun2: Interrupted by timeout\\n"" )"		5769786	0					
ANR	5770932	Callee	eprintf		5769786	0					
ANR	5770933	Identifier	eprintf		5769786	0					
ANR	5770934	ArgumentList	"""\\nrarun2: Interrupted by timeout\\n"""		5769786	1					
ANR	5770935	Argument	"""\\nrarun2: Interrupted by timeout\\n"""		5769786	0					
ANR	5770936	PrimaryExpression	"""\\nrarun2: Interrupted by timeout\\n"""		5769786	0					
ANR	5770937	ExpressionStatement	"kill ( mypid , use_signal )"	1003:3:21726:21750	5769786	4	True				
ANR	5770938	CallExpression	"kill ( mypid , use_signal )"		5769786	0					
ANR	5770939	Callee	kill		5769786	0					
ANR	5770940	Identifier	kill		5769786	0					
ANR	5770941	ArgumentList	mypid		5769786	1					
ANR	5770942	Argument	mypid		5769786	0					
ANR	5770943	Identifier	mypid		5769786	0					
ANR	5770944	Argument	use_signal		5769786	1					
ANR	5770945	Identifier	use_signal		5769786	0					
ANR	5770946	ExpressionStatement	exit ( 0 )	1004:3:21755:21763	5769786	5	True				
ANR	5770947	CallExpression	exit ( 0 )		5769786	0					
ANR	5770948	Callee	exit		5769786	0					
ANR	5770949	Identifier	exit		5769786	0					
ANR	5770950	ArgumentList	0		5769786	1					
ANR	5770951	Argument	0		5769786	0					
ANR	5770952	PrimaryExpression	0		5769786	0					
ANR	5770953	ReturnStatement	return 0 ;	1010:1:21843:21851	5769786	23	True				
ANR	5770954	PrimaryExpression	0		5769786	0					
ANR	5770955	ReturnType	R_API int		5769786	1					
ANR	5770956	Identifier	r_run_config_env		5769786	2					
ANR	5770957	ParameterList	RRunProfile * p		5769786	3					
ANR	5770958	Parameter	RRunProfile * p	752:27:16226:16239	5769786	0	True				
ANR	5770959	ParameterType	RRunProfile *		5769786	0					
ANR	5770960	Identifier	p		5769786	1					
ANR	5770961	CFGEntryNode	ENTRY		5769786		True				
ANR	5770962	CFGExitNode	EXIT		5769786		True				
ANR	5770963	Symbol	r_socket_connect_tcp		5769786						
ANR	5770964	Symbol	p -> _maxstack		5769786						
ANR	5770965	Symbol	p -> _stdout		5769786						
ANR	5770966	Symbol	RLIM_INFINITY		5769786						
ANR	5770967	Symbol	strchr		5769786						
ANR	5770968	Symbol	f2		5769786						
ANR	5770969	Symbol	redirect_socket_to_pty		5769786						
ANR	5770970	Symbol	p -> _listen		5769786						
ANR	5770971	Symbol	p -> _preload		5769786						
ANR	5770972	Symbol	strlen		5769786						
ANR	5770973	Symbol	p -> _stdio		5769786						
ANR	5770974	Symbol	p -> _aslr		5769786						
ANR	5770975	Symbol	p -> _stdin		5769786						
ANR	5770976	Symbol	setgroups		5769786						
ANR	5770977	Symbol	getstr		5769786						
ANR	5770978	Symbol	p -> _program		5769786						
ANR	5770979	Symbol	p -> _chroot		5769786						
ANR	5770980	Symbol	chroot		5769786						
ANR	5770981	Symbol	pipe		5769786						
ANR	5770982	Symbol	r_sys_fork		5769786						
ANR	5770983	Symbol	p -> _maxfd		5769786						
ANR	5770984	Symbol	r_socket_new		5769786						
ANR	5770985	Symbol	write		5769786						
ANR	5770986	Symbol	ret		5769786						
ANR	5770987	Symbol	setgid		5769786						
ANR	5770988	Symbol	NULL		5769786						
ANR	5770989	Symbol	p -> _maxproc		5769786						
ANR	5770990	Symbol	use_signal		5769786						
ANR	5770991	Symbol	chdir		5769786						
ANR	5770992	Symbol	setuid		5769786						
ANR	5770993	Symbol	RLIMIT_CORE		5769786						
ANR	5770994	Symbol	child_pid		5769786						
ANR	5770995	Symbol	handle_redirection		5769786						
ANR	5770996	Symbol	p -> _chgdir		5769786						
ANR	5770997	Symbol	p -> _seteuid		5769786						
ANR	5770998	Symbol	true		5769786						
ANR	5770999	Symbol	p -> _r2preload		5769786						
ANR	5771000	Symbol	fd		5769786						
ANR	5771001	Symbol	child		5769786						
ANR	5771002	Symbol	p -> _input		5769786						
ANR	5771003	Symbol	p -> _libpath		5769786						
ANR	5771004	Symbol	p -> _docore		5769786						
ANR	5771005	Symbol	r_socket_listen		5769786						
ANR	5771006	Symbol	SIGKILL		5769786						
ANR	5771007	Symbol	RLIMIT_NPROC		5769786						
ANR	5771008	Symbol	is_child		5769786						
ANR	5771009	Symbol	inpl		5769786						
ANR	5771010	Symbol	p -> _timeout		5769786						
ANR	5771011	Symbol	* f2		5769786						
ANR	5771012	Symbol	RLIMIT_STACK		5769786						
ANR	5771013	Symbol	p -> _connect		5769786						
ANR	5771014	Symbol	RLIMIT_NOFILE		5769786						
ANR	5771015	Symbol	p -> _pty		5769786						
ANR	5771016	Symbol	atoi		5769786						
ANR	5771017	Symbol	p -> _setgid		5769786						
ANR	5771018	Symbol	p -> _dodebug		5769786						
ANR	5771019	Symbol	mypid		5769786						
ANR	5771020	Symbol	false		5769786						
ANR	5771021	Symbol	inp		5769786						
ANR	5771022	Symbol	kill		5769786						
ANR	5771023	Symbol	p -> _stderr		5769786						
ANR	5771024	Symbol	p -> _setuid		5769786						
ANR	5771025	Symbol	r_socket_accept		5769786						
ANR	5771026	Symbol	p		5769786						
ANR	5771027	Symbol	q		5769786						
ANR	5771028	Symbol	p -> _system		5769786						
ANR	5771029	Symbol	p -> _timeout_sig		5769786						
ANR	5771030	Symbol	seteuid		5769786						
ANR	5771031	Symbol	p -> _runlib		5769786						
ANR	5771032	Symbol	p -> _r2sleep		5769786						
ANR	5771033	Symbol	* p		5769786						
ANR	5771034	Symbol	* q		5769786						
ANR	5771035	Symbol	p -> _dofork		5769786						
ANR	5771036	Symbol	getpid		5769786						
ANR	5771037	Function	r_run_start	1013:0:21856:26081							
ANR	5771038	FunctionDef	r_run_start (RRunProfile * p)		5771037	0					
ANR	5771039	CompoundStatement		1013:38:21894:26081	5771037	0					
ANR	5771040	IfStatement	if ( p -> _execve )		5771037	0					
ANR	5771041	Condition	p -> _execve	1015:5:21920:21929	5771037	0	True				
ANR	5771042	PtrMemberAccess	p -> _execve		5771037	0					
ANR	5771043	Identifier	p		5771037	0					
ANR	5771044	Identifier	_execve		5771037	1					
ANR	5771045	CompoundStatement		3:17:37:37	5771037	1					
ANR	5771046	Statement	exit	1016:2:21936:21939	5771037	0	True				
ANR	5771047	Statement	(	1016:7:21941:21941	5771037	1	True				
ANR	5771048	Statement	execv	1016:8:21942:21946	5771037	2	True				
ANR	5771049	Statement	(	1016:14:21948:21948	5771037	3	True				
ANR	5771050	Statement	p	1016:15:21949:21949	5771037	4	True				
ANR	5771051	Statement	->	1016:16:21950:21951	5771037	5	True				
ANR	5771052	Statement	_program	1016:18:21952:21959	5771037	6	True				
ANR	5771053	Statement	","	1016:26:21960:21960	5771037	7	True				
ANR	5771054	Statement	(	1016:28:21962:21962	5771037	8	True				
ANR	5771055	Statement	char	1016:29:21963:21966	5771037	9	True				
ANR	5771056	Statement	*	1016:33:21967:21967	5771037	10	True				
ANR	5771057	Statement	const	1016:35:21969:21973	5771037	11	True				
ANR	5771058	Statement	*	1016:40:21974:21974	5771037	12	True				
ANR	5771059	Statement	)	1016:41:21975:21975	5771037	13	True				
ANR	5771060	Statement	p	1016:42:21976:21976	5771037	14	True				
ANR	5771061	Statement	->	1016:43:21977:21978	5771037	15	True				
ANR	5771062	Statement	_args	1016:45:21979:21983	5771037	16	True				
ANR	5771063	Statement	)	1016:50:21984:21984	5771037	17	True				
ANR	5771064	Statement	)	1016:51:21985:21985	5771037	18	True				
ANR	5771065	ExpressionStatement		1016:52:21986:21986	5771037	19	True				
ANR	5771066	IdentifierDeclStatement	posix_spawnattr_t attr = { 0 } ;	1020:1:22047:22075	5771037	1	True				
ANR	5771067	IdentifierDecl	attr = { 0 }		5771037	0					
ANR	5771068	IdentifierDeclType	posix_spawnattr_t		5771037	0					
ANR	5771069	Identifier	attr		5771037	1					
ANR	5771070	AssignmentExpression	attr = { 0 }		5771037	2		=			
ANR	5771071	Identifier	attr		5771037	0					
ANR	5771072	InitializerList	0		5771037	1					
ANR	5771073	PrimaryExpression	0		5771037	0					
ANR	5771074	IdentifierDeclStatement	pid_t pid = - 1 ;	1021:1:22078:22092	5771037	2	True				
ANR	5771075	IdentifierDecl	pid = - 1		5771037	0					
ANR	5771076	IdentifierDeclType	pid_t		5771037	0					
ANR	5771077	Identifier	pid		5771037	1					
ANR	5771078	AssignmentExpression	pid = - 1		5771037	2		=			
ANR	5771079	Identifier	pid		5771037	0					
ANR	5771080	UnaryOperationExpression	- 1		5771037	1					
ANR	5771081	UnaryOperator	-		5771037	0					
ANR	5771082	PrimaryExpression	1		5771037	1					
ANR	5771083	IdentifierDeclStatement	int ret ;	1022:1:22095:22102	5771037	3	True				
ANR	5771084	IdentifierDecl	ret		5771037	0					
ANR	5771085	IdentifierDeclType	int		5771037	0					
ANR	5771086	Identifier	ret		5771037	1					
ANR	5771087	ExpressionStatement	posix_spawnattr_init ( & attr )	1023:1:22105:22133	5771037	4	True				
ANR	5771088	CallExpression	posix_spawnattr_init ( & attr )		5771037	0					
ANR	5771089	Callee	posix_spawnattr_init		5771037	0					
ANR	5771090	Identifier	posix_spawnattr_init		5771037	0					
ANR	5771091	ArgumentList	& attr		5771037	1					
ANR	5771092	Argument	& attr		5771037	0					
ANR	5771093	UnaryOperationExpression	& attr		5771037	0					
ANR	5771094	UnaryOperator	&		5771037	0					
ANR	5771095	Identifier	attr		5771037	1					
ANR	5771096	IfStatement	if ( p -> _args [ 0 ] )		5771037	5					
ANR	5771097	Condition	p -> _args [ 0 ]	1024:5:22140:22150	5771037	0	True				
ANR	5771098	ArrayIndexing	p -> _args [ 0 ]		5771037	0					
ANR	5771099	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771100	Identifier	p		5771037	0					
ANR	5771101	Identifier	_args		5771037	1					
ANR	5771102	PrimaryExpression	0		5771037	1					
ANR	5771103	CompoundStatement		14:2:299:315	5771037	1					
ANR	5771104	IdentifierDeclStatement	char * * envp = r_sys_get_environ ( ) ;	1025:2:22157:22190	5771037	0	True				
ANR	5771105	IdentifierDecl	* * envp = r_sys_get_environ ( )		5771037	0					
ANR	5771106	IdentifierDeclType	char * *		5771037	0					
ANR	5771107	Identifier	envp		5771037	1					
ANR	5771108	AssignmentExpression	* * envp = r_sys_get_environ ( )		5771037	2		=			
ANR	5771109	Identifier	envp		5771037	0					
ANR	5771110	CallExpression	r_sys_get_environ ( )		5771037	1					
ANR	5771111	Callee	r_sys_get_environ		5771037	0					
ANR	5771112	Identifier	r_sys_get_environ		5771037	0					
ANR	5771113	ArgumentList			5771037	1					
ANR	5771114	IdentifierDeclStatement	ut32 spflags = 0 ;	1026:2:22194:22210	5771037	1	True				
ANR	5771115	IdentifierDecl	spflags = 0		5771037	0					
ANR	5771116	IdentifierDeclType	ut32		5771037	0					
ANR	5771117	Identifier	spflags		5771037	1					
ANR	5771118	AssignmentExpression	spflags = 0		5771037	2		=			
ANR	5771119	Identifier	spflags		5771037	0					
ANR	5771120	PrimaryExpression	0		5771037	1					
ANR	5771121	ExpressionStatement	spflags |= POSIX_SPAWN_SETEXEC	1027:2:22245:22275	5771037	2	True				
ANR	5771122	AssignmentExpression	spflags |= POSIX_SPAWN_SETEXEC		5771037	0		|=			
ANR	5771123	Identifier	spflags		5771037	0					
ANR	5771124	Identifier	POSIX_SPAWN_SETEXEC		5771037	1					
ANR	5771125	IfStatement	if ( p -> _aslr == 0 )		5771037	3					
ANR	5771126	Condition	p -> _aslr == 0	1028:6:22283:22295	5771037	0	True				
ANR	5771127	EqualityExpression	p -> _aslr == 0		5771037	0		==			
ANR	5771128	PtrMemberAccess	p -> _aslr		5771037	0					
ANR	5771129	Identifier	p		5771037	0					
ANR	5771130	Identifier	_aslr		5771037	1					
ANR	5771131	PrimaryExpression	0		5771037	1					
ANR	5771132	CompoundStatement		16:21:403:403	5771037	1					
ANR	5771133	Statement	define	1029:1:22301:22306	5771037	0	True				
ANR	5771134	Statement	_POSIX_SPAWN_DISABLE_ASLR	1029:8:22308:22332	5771037	1	True				
ANR	5771135	Statement	0x0100	1029:34:22334:22339	5771037	2	True				
ANR	5771136	ExpressionStatement	spflags |= _POSIX_SPAWN_DISABLE_ASLR	1030:3:22344:22380	5771037	3	True				
ANR	5771137	AssignmentExpression	spflags |= _POSIX_SPAWN_DISABLE_ASLR		5771037	0		|=			
ANR	5771138	Identifier	spflags		5771037	0					
ANR	5771139	Identifier	_POSIX_SPAWN_DISABLE_ASLR		5771037	1					
ANR	5771140	ExpressionStatement	"( void ) posix_spawnattr_setflags ( & attr , spflags )"	1032:2:22388:22435	5771037	4	True				
ANR	5771141	CastExpression	"( void ) posix_spawnattr_setflags ( & attr , spflags )"		5771037	0					
ANR	5771142	CastTarget	void		5771037	0					
ANR	5771143	CallExpression	"posix_spawnattr_setflags ( & attr , spflags )"		5771037	1					
ANR	5771144	Callee	posix_spawnattr_setflags		5771037	0					
ANR	5771145	Identifier	posix_spawnattr_setflags		5771037	0					
ANR	5771146	ArgumentList	& attr		5771037	1					
ANR	5771147	Argument	& attr		5771037	0					
ANR	5771148	UnaryOperationExpression	& attr		5771037	0					
ANR	5771149	UnaryOperator	&		5771037	0					
ANR	5771150	Identifier	attr		5771037	1					
ANR	5771151	Argument	spflags		5771037	1					
ANR	5771152	Identifier	spflags		5771037	0					
ANR	5771153	IfStatement	if ( p -> _bits )		5771037	5					
ANR	5771154	Condition	p -> _bits	1033:6:22443:22450	5771037	0	True				
ANR	5771155	PtrMemberAccess	p -> _bits		5771037	0					
ANR	5771156	Identifier	p		5771037	0					
ANR	5771157	Identifier	_bits		5771037	1					
ANR	5771158	CompoundStatement		23:3:585:599	5771037	1					
ANR	5771159	IdentifierDeclStatement	size_t copied = 1 ;	1034:3:22458:22475	5771037	0	True				
ANR	5771160	IdentifierDecl	copied = 1		5771037	0					
ANR	5771161	IdentifierDeclType	size_t		5771037	0					
ANR	5771162	Identifier	copied		5771037	1					
ANR	5771163	AssignmentExpression	copied = 1		5771037	2		=			
ANR	5771164	Identifier	copied		5771037	0					
ANR	5771165	PrimaryExpression	1		5771037	1					
ANR	5771166	IdentifierDeclStatement	cpu_type_t cpu ;	1035:3:22480:22494	5771037	1	True				
ANR	5771167	IdentifierDecl	cpu		5771037	0					
ANR	5771168	IdentifierDeclType	cpu_type_t		5771037	0					
ANR	5771169	Identifier	cpu		5771037	1					
ANR	5771170	ExpressionStatement	cpu = CPU_TYPE_I386	1037:3:22526:22545	5771037	2	True				
ANR	5771171	AssignmentExpression	cpu = CPU_TYPE_I386		5771037	0		=			
ANR	5771172	Identifier	cpu		5771037	0					
ANR	5771173	Identifier	CPU_TYPE_I386		5771037	1					
ANR	5771174	IfStatement	if ( p -> _bits == 64 )		5771037	3					
ANR	5771175	Condition	p -> _bits == 64	1038:7:22554:22567	5771037	0	True				
ANR	5771176	EqualityExpression	p -> _bits == 64		5771037	0		==			
ANR	5771177	PtrMemberAccess	p -> _bits		5771037	0					
ANR	5771178	Identifier	p		5771037	0					
ANR	5771179	Identifier	_bits		5771037	1					
ANR	5771180	PrimaryExpression	64		5771037	1					
ANR	5771181	CompoundStatement		26:23:675:675	5771037	1					
ANR	5771182	ExpressionStatement	cpu |= CPU_ARCH_ABI64	1039:4:22576:22597	5771037	0	True				
ANR	5771183	AssignmentExpression	cpu |= CPU_ARCH_ABI64		5771037	0		|=			
ANR	5771184	Identifier	cpu		5771037	0					
ANR	5771185	Identifier	CPU_ARCH_ABI64		5771037	1					
ANR	5771186	ExpressionStatement	"posix_spawnattr_setbinpref_np ( & attr , 1 , & cpu , & copied )"	1044:3:22643:22704	5771037	4	True				
ANR	5771187	CallExpression	"posix_spawnattr_setbinpref_np ( & attr , 1 , & cpu , & copied )"		5771037	0					
ANR	5771188	Callee	posix_spawnattr_setbinpref_np		5771037	0					
ANR	5771189	Identifier	posix_spawnattr_setbinpref_np		5771037	0					
ANR	5771190	ArgumentList	& attr		5771037	1					
ANR	5771191	Argument	& attr		5771037	0					
ANR	5771192	UnaryOperationExpression	& attr		5771037	0					
ANR	5771193	UnaryOperator	&		5771037	0					
ANR	5771194	Identifier	attr		5771037	1					
ANR	5771195	Argument	1		5771037	1					
ANR	5771196	PrimaryExpression	1		5771037	0					
ANR	5771197	Argument	& cpu		5771037	2					
ANR	5771198	UnaryOperationExpression	& cpu		5771037	0					
ANR	5771199	UnaryOperator	&		5771037	0					
ANR	5771200	Identifier	cpu		5771037	1					
ANR	5771201	Argument	& copied		5771037	3					
ANR	5771202	UnaryOperationExpression	& copied		5771037	0					
ANR	5771203	UnaryOperator	&		5771037	0					
ANR	5771204	Identifier	copied		5771037	1					
ANR	5771205	ExpressionStatement	"ret = posix_spawnp ( & pid , p -> _args [ 0 ] , NULL , & attr , p -> _args , envp )"	1047:2:22712:22782	5771037	6	True				
ANR	5771206	AssignmentExpression	"ret = posix_spawnp ( & pid , p -> _args [ 0 ] , NULL , & attr , p -> _args , envp )"		5771037	0		=			
ANR	5771207	Identifier	ret		5771037	0					
ANR	5771208	CallExpression	"posix_spawnp ( & pid , p -> _args [ 0 ] , NULL , & attr , p -> _args , envp )"		5771037	1					
ANR	5771209	Callee	posix_spawnp		5771037	0					
ANR	5771210	Identifier	posix_spawnp		5771037	0					
ANR	5771211	ArgumentList	& pid		5771037	1					
ANR	5771212	Argument	& pid		5771037	0					
ANR	5771213	UnaryOperationExpression	& pid		5771037	0					
ANR	5771214	UnaryOperator	&		5771037	0					
ANR	5771215	Identifier	pid		5771037	1					
ANR	5771216	Argument	p -> _args [ 0 ]		5771037	1					
ANR	5771217	ArrayIndexing	p -> _args [ 0 ]		5771037	0					
ANR	5771218	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771219	Identifier	p		5771037	0					
ANR	5771220	Identifier	_args		5771037	1					
ANR	5771221	PrimaryExpression	0		5771037	1					
ANR	5771222	Argument	NULL		5771037	2					
ANR	5771223	Identifier	NULL		5771037	0					
ANR	5771224	Argument	& attr		5771037	3					
ANR	5771225	UnaryOperationExpression	& attr		5771037	0					
ANR	5771226	UnaryOperator	&		5771037	0					
ANR	5771227	Identifier	attr		5771037	1					
ANR	5771228	Argument	p -> _args		5771037	4					
ANR	5771229	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771230	Identifier	p		5771037	0					
ANR	5771231	Identifier	_args		5771037	1					
ANR	5771232	Argument	envp		5771037	5					
ANR	5771233	Identifier	envp		5771037	0					
ANR	5771234	SwitchStatement	switch ( ret )		5771037	7					
ANR	5771235	Condition	ret	1049:10:22794:22796	5771037	0	True				
ANR	5771236	Identifier	ret		5771037	0					
ANR	5771237	CompoundStatement		37:15:904:904	5771037	1					
ANR	5771238	Label	case 0 :	1050:2:22803:22809	5771037	0	True				
ANR	5771239	BreakStatement	break ;	1051:3:22814:22819	5771037	1	True				
ANR	5771240	Label	case 22 :	1052:2:22823:22830	5771037	2	True				
ANR	5771241	ExpressionStatement	"eprintf ( ""posix_spawnp: Invalid argument\\n"" )"	1053:3:22835:22879	5771037	3	True				
ANR	5771242	CallExpression	"eprintf ( ""posix_spawnp: Invalid argument\\n"" )"		5771037	0					
ANR	5771243	Callee	eprintf		5771037	0					
ANR	5771244	Identifier	eprintf		5771037	0					
ANR	5771245	ArgumentList	"""posix_spawnp: Invalid argument\\n"""		5771037	1					
ANR	5771246	Argument	"""posix_spawnp: Invalid argument\\n"""		5771037	0					
ANR	5771247	PrimaryExpression	"""posix_spawnp: Invalid argument\\n"""		5771037	0					
ANR	5771248	BreakStatement	break ;	1054:3:22884:22889	5771037	4	True				
ANR	5771249	Label	case 86 :	1055:2:22893:22900	5771037	5	True				
ANR	5771250	ExpressionStatement	"eprintf ( ""posix_spawnp: Unsupported architecture\\n"" )"	1056:3:22905:22957	5771037	6	True				
ANR	5771251	CallExpression	"eprintf ( ""posix_spawnp: Unsupported architecture\\n"" )"		5771037	0					
ANR	5771252	Callee	eprintf		5771037	0					
ANR	5771253	Identifier	eprintf		5771037	0					
ANR	5771254	ArgumentList	"""posix_spawnp: Unsupported architecture\\n"""		5771037	1					
ANR	5771255	Argument	"""posix_spawnp: Unsupported architecture\\n"""		5771037	0					
ANR	5771256	PrimaryExpression	"""posix_spawnp: Unsupported architecture\\n"""		5771037	0					
ANR	5771257	BreakStatement	break ;	1057:3:22962:22967	5771037	7	True				
ANR	5771258	Label	default :	1058:2:22971:22978	5771037	8	True				
ANR	5771259	Identifier	default		5771037	0					
ANR	5771260	ExpressionStatement	"eprintf ( ""posix_spawnp: unknown error %d\\n"" , ret )"	1059:3:22983:23032	5771037	9	True				
ANR	5771261	CallExpression	"eprintf ( ""posix_spawnp: unknown error %d\\n"" , ret )"		5771037	0					
ANR	5771262	Callee	eprintf		5771037	0					
ANR	5771263	Identifier	eprintf		5771037	0					
ANR	5771264	ArgumentList	"""posix_spawnp: unknown error %d\\n"""		5771037	1					
ANR	5771265	Argument	"""posix_spawnp: unknown error %d\\n"""		5771037	0					
ANR	5771266	PrimaryExpression	"""posix_spawnp: unknown error %d\\n"""		5771037	0					
ANR	5771267	Argument	ret		5771037	1					
ANR	5771268	Identifier	ret		5771037	0					
ANR	5771269	ExpressionStatement	"perror ( ""posix_spawnp"" )"	1060:3:23037:23060	5771037	10	True				
ANR	5771270	CallExpression	"perror ( ""posix_spawnp"" )"		5771037	0					
ANR	5771271	Callee	perror		5771037	0					
ANR	5771272	Identifier	perror		5771037	0					
ANR	5771273	ArgumentList	"""posix_spawnp"""		5771037	1					
ANR	5771274	Argument	"""posix_spawnp"""		5771037	0					
ANR	5771275	PrimaryExpression	"""posix_spawnp"""		5771037	0					
ANR	5771276	BreakStatement	break ;	1061:3:23065:23070	5771037	11	True				
ANR	5771277	ExpressionStatement	exit ( ret )	1063:2:23078:23088	5771037	8	True				
ANR	5771278	CallExpression	exit ( ret )		5771037	0					
ANR	5771279	Callee	exit		5771037	0					
ANR	5771280	Identifier	exit		5771037	0					
ANR	5771281	ArgumentList	ret		5771037	1					
ANR	5771282	Argument	ret		5771037	0					
ANR	5771283	Identifier	ret		5771037	0					
ANR	5771284	IfStatement	if ( p -> _system )		5771037	6					
ANR	5771285	Condition	p -> _system	1066:5:23105:23114	5771037	0	True				
ANR	5771286	PtrMemberAccess	p -> _system		5771037	0					
ANR	5771287	Identifier	p		5771037	0					
ANR	5771288	Identifier	_system		5771037	1					
ANR	5771289	CompoundStatement		54:17:1222:1222	5771037	1					
ANR	5771290	IfStatement	if ( p -> _pid )		5771037	0					
ANR	5771291	Condition	p -> _pid	1067:6:23125:23131	5771037	0	True				
ANR	5771292	PtrMemberAccess	p -> _pid		5771037	0					
ANR	5771293	Identifier	p		5771037	0					
ANR	5771294	Identifier	_pid		5771037	1					
ANR	5771295	CompoundStatement		55:15:1239:1239	5771037	1					
ANR	5771296	ExpressionStatement	"eprintf ( ""PID: Cannot determine pid with 'system' directive. Use 'program'.\\n"" )"	1068:3:23139:23218	5771037	0	True				
ANR	5771297	CallExpression	"eprintf ( ""PID: Cannot determine pid with 'system' directive. Use 'program'.\\n"" )"		5771037	0					
ANR	5771298	Callee	eprintf		5771037	0					
ANR	5771299	Identifier	eprintf		5771037	0					
ANR	5771300	ArgumentList	"""PID: Cannot determine pid with 'system' directive. Use 'program'.\\n"""		5771037	1					
ANR	5771301	Argument	"""PID: Cannot determine pid with 'system' directive. Use 'program'.\\n"""		5771037	0					
ANR	5771302	PrimaryExpression	"""PID: Cannot determine pid with 'system' directive. Use 'program'.\\n"""		5771037	0					
ANR	5771303	ExpressionStatement	exit ( r_sys_cmd ( p -> _system ) )	1070:2:23226:23255	5771037	1	True				
ANR	5771304	CallExpression	exit ( r_sys_cmd ( p -> _system ) )		5771037	0					
ANR	5771305	Callee	exit		5771037	0					
ANR	5771306	Identifier	exit		5771037	0					
ANR	5771307	ArgumentList	r_sys_cmd ( p -> _system )		5771037	1					
ANR	5771308	Argument	r_sys_cmd ( p -> _system )		5771037	0					
ANR	5771309	CallExpression	r_sys_cmd ( p -> _system )		5771037	0					
ANR	5771310	Callee	r_sys_cmd		5771037	0					
ANR	5771311	Identifier	r_sys_cmd		5771037	0					
ANR	5771312	ArgumentList	p -> _system		5771037	1					
ANR	5771313	Argument	p -> _system		5771037	0					
ANR	5771314	PtrMemberAccess	p -> _system		5771037	0					
ANR	5771315	Identifier	p		5771037	0					
ANR	5771316	Identifier	_system		5771037	1					
ANR	5771317	IfStatement	if ( p -> _program )		5771037	7					
ANR	5771318	Condition	p -> _program	1072:5:23265:23275	5771037	0	True				
ANR	5771319	PtrMemberAccess	p -> _program		5771037	0					
ANR	5771320	Identifier	p		5771037	0					
ANR	5771321	Identifier	_program		5771037	1					
ANR	5771322	CompoundStatement		60:18:1383:1383	5771037	1					
ANR	5771323	IfStatement	if ( ! r_file_exists ( p -> _program ) )		5771037	0					
ANR	5771324	Condition	! r_file_exists ( p -> _program )	1073:6:23286:23313	5771037	0	True				
ANR	5771325	UnaryOperationExpression	! r_file_exists ( p -> _program )		5771037	0					
ANR	5771326	UnaryOperator	!		5771037	0					
ANR	5771327	CallExpression	r_file_exists ( p -> _program )		5771037	1					
ANR	5771328	Callee	r_file_exists		5771037	0					
ANR	5771329	Identifier	r_file_exists		5771037	0					
ANR	5771330	ArgumentList	p -> _program		5771037	1					
ANR	5771331	Argument	p -> _program		5771037	0					
ANR	5771332	PtrMemberAccess	p -> _program		5771037	0					
ANR	5771333	Identifier	p		5771037	0					
ANR	5771334	Identifier	_program		5771037	1					
ANR	5771335	CompoundStatement		62:3:1426:1468	5771037	1					
ANR	5771336	IdentifierDeclStatement	char * progpath = r_file_path ( p -> _program ) ;	1074:3:23321:23363	5771037	0	True				
ANR	5771337	IdentifierDecl	* progpath = r_file_path ( p -> _program )		5771037	0					
ANR	5771338	IdentifierDeclType	char *		5771037	0					
ANR	5771339	Identifier	progpath		5771037	1					
ANR	5771340	AssignmentExpression	* progpath = r_file_path ( p -> _program )		5771037	2		=			
ANR	5771341	Identifier	progpath		5771037	0					
ANR	5771342	CallExpression	r_file_path ( p -> _program )		5771037	1					
ANR	5771343	Callee	r_file_path		5771037	0					
ANR	5771344	Identifier	r_file_path		5771037	0					
ANR	5771345	ArgumentList	p -> _program		5771037	1					
ANR	5771346	Argument	p -> _program		5771037	0					
ANR	5771347	PtrMemberAccess	p -> _program		5771037	0					
ANR	5771348	Identifier	p		5771037	0					
ANR	5771349	Identifier	_program		5771037	1					
ANR	5771350	IfStatement	if ( progpath && * progpath )		5771037	1					
ANR	5771351	Condition	progpath && * progpath	1075:7:23372:23392	5771037	0	True				
ANR	5771352	AndExpression	progpath && * progpath		5771037	0		&&			
ANR	5771353	Identifier	progpath		5771037	0					
ANR	5771354	UnaryOperationExpression	* progpath		5771037	1					
ANR	5771355	UnaryOperator	*		5771037	0					
ANR	5771356	Identifier	progpath		5771037	1					
ANR	5771357	CompoundStatement		63:30:1500:1500	5771037	1					
ANR	5771358	ExpressionStatement	free ( p -> _program )	1076:4:23401:23419	5771037	0	True				
ANR	5771359	CallExpression	free ( p -> _program )		5771037	0					
ANR	5771360	Callee	free		5771037	0					
ANR	5771361	Identifier	free		5771037	0					
ANR	5771362	ArgumentList	p -> _program		5771037	1					
ANR	5771363	Argument	p -> _program		5771037	0					
ANR	5771364	PtrMemberAccess	p -> _program		5771037	0					
ANR	5771365	Identifier	p		5771037	0					
ANR	5771366	Identifier	_program		5771037	1					
ANR	5771367	ExpressionStatement	p -> _program = progpath	1077:4:23425:23447	5771037	1	True				
ANR	5771368	AssignmentExpression	p -> _program = progpath		5771037	0		=			
ANR	5771369	PtrMemberAccess	p -> _program		5771037	0					
ANR	5771370	Identifier	p		5771037	0					
ANR	5771371	Identifier	_program		5771037	1					
ANR	5771372	Identifier	progpath		5771037	1					
ANR	5771373	ElseStatement	else		5771037	0					
ANR	5771374	CompoundStatement		66:10:1564:1564	5771037	0					
ANR	5771375	ExpressionStatement	free ( progpath )	1079:4:23465:23480	5771037	0	True				
ANR	5771376	CallExpression	free ( progpath )		5771037	0					
ANR	5771377	Callee	free		5771037	0					
ANR	5771378	Identifier	free		5771037	0					
ANR	5771379	ArgumentList	progpath		5771037	1					
ANR	5771380	Argument	progpath		5771037	0					
ANR	5771381	Identifier	progpath		5771037	0					
ANR	5771382	ExpressionStatement	"eprintf ( ""rarun2: %s: file not found\\n"" , p -> _program )"	1080:4:23486:23539	5771037	1	True				
ANR	5771383	CallExpression	"eprintf ( ""rarun2: %s: file not found\\n"" , p -> _program )"		5771037	0					
ANR	5771384	Callee	eprintf		5771037	0					
ANR	5771385	Identifier	eprintf		5771037	0					
ANR	5771386	ArgumentList	"""rarun2: %s: file not found\\n"""		5771037	1					
ANR	5771387	Argument	"""rarun2: %s: file not found\\n"""		5771037	0					
ANR	5771388	PrimaryExpression	"""rarun2: %s: file not found\\n"""		5771037	0					
ANR	5771389	Argument	p -> _program		5771037	1					
ANR	5771390	PtrMemberAccess	p -> _program		5771037	0					
ANR	5771391	Identifier	p		5771037	0					
ANR	5771392	Identifier	_program		5771037	1					
ANR	5771393	ReturnStatement	return 1 ;	1081:4:23545:23553	5771037	2	True				
ANR	5771394	PrimaryExpression	1		5771037	0					
ANR	5771395	CompoundStatement		74:4:1722:1727	5771037	1					
ANR	5771396	IdentifierDeclStatement	int i ;	1086:4:23617:23622	5771037	0	True				
ANR	5771397	IdentifierDecl	i		5771037	0					
ANR	5771398	IdentifierDeclType	int		5771037	0					
ANR	5771399	Identifier	i		5771037	1					
ANR	5771400	ForStatement	for ( i = 3 ; i < 10 ; i ++ )		5771037	1					
ANR	5771401	ForInit	i = 3 ;	1087:8:23632:23637	5771037	0	True				
ANR	5771402	AssignmentExpression	i = 3		5771037	0		=			
ANR	5771403	Identifier	i		5771037	0					
ANR	5771404	PrimaryExpression	3		5771037	1					
ANR	5771405	Condition	i < 10	1087:15:23639:23644	5771037	1	True				
ANR	5771406	RelationalExpression	i < 10		5771037	0		<			
ANR	5771407	Identifier	i		5771037	0					
ANR	5771408	PrimaryExpression	10		5771037	1					
ANR	5771409	PostIncDecOperationExpression	i ++	1087:23:23647:23649	5771037	2	True				
ANR	5771410	Identifier	i		5771037	0					
ANR	5771411	IncDec	++		5771037	1					
ANR	5771412	CompoundStatement		75:28:1757:1757	5771037	3					
ANR	5771413	ExpressionStatement	close ( i )	1088:4:23658:23667	5771037	0	True				
ANR	5771414	CallExpression	close ( i )		5771037	0					
ANR	5771415	Callee	close		5771037	0					
ANR	5771416	Identifier	close		5771037	0					
ANR	5771417	ArgumentList	i		5771037	1					
ANR	5771418	Argument	i		5771037	0					
ANR	5771419	Identifier	i		5771037	0					
ANR	5771420	IfStatement	if ( p -> _setgid )		5771037	2					
ANR	5771421	Condition	p -> _setgid	1092:6:23711:23720	5771037	0	True				
ANR	5771422	PtrMemberAccess	p -> _setgid		5771037	0					
ANR	5771423	Identifier	p		5771037	0					
ANR	5771424	Identifier	_setgid		5771037	1					
ANR	5771425	CompoundStatement		81:3:1833:1869	5771037	1					
ANR	5771426	IdentifierDeclStatement	int ret = setgid ( atoi ( p -> _setgid ) ) ;	1093:3:23728:23764	5771037	0	True				
ANR	5771427	IdentifierDecl	ret = setgid ( atoi ( p -> _setgid ) )		5771037	0					
ANR	5771428	IdentifierDeclType	int		5771037	0					
ANR	5771429	Identifier	ret		5771037	1					
ANR	5771430	AssignmentExpression	ret = setgid ( atoi ( p -> _setgid ) )		5771037	2		=			
ANR	5771431	Identifier	ret		5771037	0					
ANR	5771432	CallExpression	setgid ( atoi ( p -> _setgid ) )		5771037	1					
ANR	5771433	Callee	setgid		5771037	0					
ANR	5771434	Identifier	setgid		5771037	0					
ANR	5771435	ArgumentList	atoi ( p -> _setgid )		5771037	1					
ANR	5771436	Argument	atoi ( p -> _setgid )		5771037	0					
ANR	5771437	CallExpression	atoi ( p -> _setgid )		5771037	0					
ANR	5771438	Callee	atoi		5771037	0					
ANR	5771439	Identifier	atoi		5771037	0					
ANR	5771440	ArgumentList	p -> _setgid		5771037	1					
ANR	5771441	Argument	p -> _setgid		5771037	0					
ANR	5771442	PtrMemberAccess	p -> _setgid		5771037	0					
ANR	5771443	Identifier	p		5771037	0					
ANR	5771444	Identifier	_setgid		5771037	1					
ANR	5771445	IfStatement	if ( ret < 0 )		5771037	1					
ANR	5771446	Condition	ret < 0	1094:7:23773:23779	5771037	0	True				
ANR	5771447	RelationalExpression	ret < 0		5771037	0		<			
ANR	5771448	Identifier	ret		5771037	0					
ANR	5771449	PrimaryExpression	0		5771037	1					
ANR	5771450	CompoundStatement		82:16:1887:1887	5771037	1					
ANR	5771451	ReturnStatement	return 1 ;	1095:4:23788:23796	5771037	0	True				
ANR	5771452	PrimaryExpression	1		5771037	0					
ANR	5771453	IfStatement	if ( p -> _pid )		5771037	3					
ANR	5771454	Condition	p -> _pid	1098:6:23813:23819	5771037	0	True				
ANR	5771455	PtrMemberAccess	p -> _pid		5771037	0					
ANR	5771456	Identifier	p		5771037	0					
ANR	5771457	Identifier	_pid		5771037	1					
ANR	5771458	CompoundStatement		86:15:1927:1927	5771037	1					
ANR	5771459	ExpressionStatement	"eprintf ( ""PID: %d\\n"" , getpid ( ) )"	1099:3:23827:23859	5771037	0	True				
ANR	5771460	CallExpression	"eprintf ( ""PID: %d\\n"" , getpid ( ) )"		5771037	0					
ANR	5771461	Callee	eprintf		5771037	0					
ANR	5771462	Identifier	eprintf		5771037	0					
ANR	5771463	ArgumentList	"""PID: %d\\n"""		5771037	1					
ANR	5771464	Argument	"""PID: %d\\n"""		5771037	0					
ANR	5771465	PrimaryExpression	"""PID: %d\\n"""		5771037	0					
ANR	5771466	Argument	getpid ( )		5771037	1					
ANR	5771467	CallExpression	getpid ( )		5771037	0					
ANR	5771468	Callee	getpid		5771037	0					
ANR	5771469	Identifier	getpid		5771037	0					
ANR	5771470	ArgumentList			5771037	1					
ANR	5771471	IfStatement	if ( p -> _pidfile )		5771037	4					
ANR	5771472	Condition	p -> _pidfile	1101:6:23871:23881	5771037	0	True				
ANR	5771473	PtrMemberAccess	p -> _pidfile		5771037	0					
ANR	5771474	Identifier	p		5771037	0					
ANR	5771475	Identifier	_pidfile		5771037	1					
ANR	5771476	CompoundStatement		90:3:1994:2009	5771037	1					
ANR	5771477	IdentifierDeclStatement	char pidstr [ 32 ] ;	1102:3:23889:23904	5771037	0	True				
ANR	5771478	IdentifierDecl	pidstr [ 32 ]		5771037	0					
ANR	5771479	IdentifierDeclType	char [ 32 ]		5771037	0					
ANR	5771480	Identifier	pidstr		5771037	1					
ANR	5771481	PrimaryExpression	32		5771037	2					
ANR	5771482	ExpressionStatement	"snprintf ( pidstr , sizeof ( pidstr ) , ""%d\\n"" , getpid ( ) )"	1103:3:23909:23962	5771037	1	True				
ANR	5771483	CallExpression	"snprintf ( pidstr , sizeof ( pidstr ) , ""%d\\n"" , getpid ( ) )"		5771037	0					
ANR	5771484	Callee	snprintf		5771037	0					
ANR	5771485	Identifier	snprintf		5771037	0					
ANR	5771486	ArgumentList	pidstr		5771037	1					
ANR	5771487	Argument	pidstr		5771037	0					
ANR	5771488	Identifier	pidstr		5771037	0					
ANR	5771489	Argument	sizeof ( pidstr )		5771037	1					
ANR	5771490	SizeofExpression	sizeof ( pidstr )		5771037	0					
ANR	5771491	Sizeof	sizeof		5771037	0					
ANR	5771492	SizeofOperand	pidstr		5771037	1					
ANR	5771493	Argument	"""%d\\n"""		5771037	2					
ANR	5771494	PrimaryExpression	"""%d\\n"""		5771037	0					
ANR	5771495	Argument	getpid ( )		5771037	3					
ANR	5771496	CallExpression	getpid ( )		5771037	0					
ANR	5771497	Callee	getpid		5771037	0					
ANR	5771498	Identifier	getpid		5771037	0					
ANR	5771499	ArgumentList			5771037	1					
ANR	5771500	ExpressionStatement	"r_file_dump ( p -> _pidfile , ( const ut8 * ) pidstr , strlen ( pidstr ) , 0 )"	1104:3:23967:24040	5771037	2	True				
ANR	5771501	CallExpression	"r_file_dump ( p -> _pidfile , ( const ut8 * ) pidstr , strlen ( pidstr ) , 0 )"		5771037	0					
ANR	5771502	Callee	r_file_dump		5771037	0					
ANR	5771503	Identifier	r_file_dump		5771037	0					
ANR	5771504	ArgumentList	p -> _pidfile		5771037	1					
ANR	5771505	Argument	p -> _pidfile		5771037	0					
ANR	5771506	PtrMemberAccess	p -> _pidfile		5771037	0					
ANR	5771507	Identifier	p		5771037	0					
ANR	5771508	Identifier	_pidfile		5771037	1					
ANR	5771509	Argument	( const ut8 * ) pidstr		5771037	1					
ANR	5771510	CastExpression	( const ut8 * ) pidstr		5771037	0					
ANR	5771511	CastTarget	const ut8 *		5771037	0					
ANR	5771512	Identifier	pidstr		5771037	1					
ANR	5771513	Argument	strlen ( pidstr )		5771037	2					
ANR	5771514	CallExpression	strlen ( pidstr )		5771037	0					
ANR	5771515	Callee	strlen		5771037	0					
ANR	5771516	Identifier	strlen		5771037	0					
ANR	5771517	ArgumentList	pidstr		5771037	1					
ANR	5771518	Argument	pidstr		5771037	0					
ANR	5771519	Identifier	pidstr		5771037	0					
ANR	5771520	Argument	0		5771037	3					
ANR	5771521	PrimaryExpression	0		5771037	0					
ANR	5771522	IfStatement	if ( p -> _nice )		5771037	5					
ANR	5771523	Condition	p -> _nice	1110:6:24060:24067	5771037	0	True				
ANR	5771524	PtrMemberAccess	p -> _nice		5771037	0					
ANR	5771525	Identifier	p		5771037	0					
ANR	5771526	Identifier	_nice		5771037	1					
ANR	5771527	CompoundStatement		98:16:2175:2175	5771037	1					
ANR	5771528	IfStatement	if ( nice ( p -> _nice ) == - 1 )		5771037	0					
ANR	5771529	Condition	nice ( p -> _nice ) == - 1	1112:7:24115:24135	5771037	0	True				
ANR	5771530	EqualityExpression	nice ( p -> _nice ) == - 1		5771037	0		==			
ANR	5771531	CallExpression	nice ( p -> _nice )		5771037	0					
ANR	5771532	Callee	nice		5771037	0					
ANR	5771533	Identifier	nice		5771037	0					
ANR	5771534	ArgumentList	p -> _nice		5771037	1					
ANR	5771535	Argument	p -> _nice		5771037	0					
ANR	5771536	PtrMemberAccess	p -> _nice		5771037	0					
ANR	5771537	Identifier	p		5771037	0					
ANR	5771538	Identifier	_nice		5771037	1					
ANR	5771539	UnaryOperationExpression	- 1		5771037	1					
ANR	5771540	UnaryOperator	-		5771037	0					
ANR	5771541	PrimaryExpression	1		5771037	1					
ANR	5771542	CompoundStatement		100:30:2243:2243	5771037	1					
ANR	5771543	ReturnStatement	return 1 ;	1113:4:24144:24152	5771037	0	True				
ANR	5771544	PrimaryExpression	1		5771037	0					
ANR	5771545	Statement	exit	1121:2:24281:24284	5771037	6	True				
ANR	5771546	Statement	(	1121:7:24286:24286	5771037	7	True				
ANR	5771547	Statement	execv	1121:8:24287:24291	5771037	8	True				
ANR	5771548	Statement	(	1121:14:24293:24293	5771037	9	True				
ANR	5771549	Statement	p	1121:15:24294:24294	5771037	10	True				
ANR	5771550	Statement	->	1121:16:24295:24296	5771037	11	True				
ANR	5771551	Statement	_program	1121:18:24297:24304	5771037	12	True				
ANR	5771552	Statement	","	1121:26:24305:24305	5771037	13	True				
ANR	5771553	Statement	(	1121:28:24307:24307	5771037	14	True				
ANR	5771554	Statement	char	1121:29:24308:24311	5771037	15	True				
ANR	5771555	Statement	*	1121:33:24312:24312	5771037	16	True				
ANR	5771556	Statement	const	1121:35:24314:24318	5771037	17	True				
ANR	5771557	Statement	*	1121:40:24319:24319	5771037	18	True				
ANR	5771558	Statement	)	1121:41:24320:24320	5771037	19	True				
ANR	5771559	Statement	p	1121:42:24321:24321	5771037	20	True				
ANR	5771560	Statement	->	1121:43:24322:24323	5771037	21	True				
ANR	5771561	Statement	_args	1121:45:24324:24328	5771037	22	True				
ANR	5771562	Statement	)	1121:50:24329:24329	5771037	23	True				
ANR	5771563	Statement	)	1121:51:24330:24330	5771037	24	True				
ANR	5771564	ExpressionStatement		1121:52:24331:24331	5771037	25	True				
ANR	5771565	IfStatement	if ( p -> _runlib )		5771037	8					
ANR	5771566	Condition	p -> _runlib	1124:5:24348:24357	5771037	0	True				
ANR	5771567	PtrMemberAccess	p -> _runlib		5771037	0					
ANR	5771568	Identifier	p		5771037	0					
ANR	5771569	Identifier	_runlib		5771037	1					
ANR	5771570	CompoundStatement		122:2:2711:2766	5771037	1					
ANR	5771571	IfStatement	if ( ! p -> _runlib_fcn )		5771037	0					
ANR	5771572	Condition	! p -> _runlib_fcn	1125:6:24368:24382	5771037	0	True				
ANR	5771573	UnaryOperationExpression	! p -> _runlib_fcn		5771037	0					
ANR	5771574	UnaryOperator	!		5771037	0					
ANR	5771575	PtrMemberAccess	p -> _runlib_fcn		5771037	1					
ANR	5771576	Identifier	p		5771037	0					
ANR	5771577	Identifier	_runlib_fcn		5771037	1					
ANR	5771578	CompoundStatement		113:23:2490:2490	5771037	1					
ANR	5771579	ExpressionStatement	"eprintf ( ""No function specified. Please set runlib.fcn\\n"" )"	1126:3:24390:24448	5771037	0	True				
ANR	5771580	CallExpression	"eprintf ( ""No function specified. Please set runlib.fcn\\n"" )"		5771037	0					
ANR	5771581	Callee	eprintf		5771037	0					
ANR	5771582	Identifier	eprintf		5771037	0					
ANR	5771583	ArgumentList	"""No function specified. Please set runlib.fcn\\n"""		5771037	1					
ANR	5771584	Argument	"""No function specified. Please set runlib.fcn\\n"""		5771037	0					
ANR	5771585	PrimaryExpression	"""No function specified. Please set runlib.fcn\\n"""		5771037	0					
ANR	5771586	ReturnStatement	return 1 ;	1127:3:24453:24461	5771037	1	True				
ANR	5771587	PrimaryExpression	1		5771037	0					
ANR	5771588	IdentifierDeclStatement	void * addr = r_lib_dl_open ( p -> _runlib ) ;	1129:2:24469:24508	5771037	1	True				
ANR	5771589	IdentifierDecl	* addr = r_lib_dl_open ( p -> _runlib )		5771037	0					
ANR	5771590	IdentifierDeclType	void *		5771037	0					
ANR	5771591	Identifier	addr		5771037	1					
ANR	5771592	AssignmentExpression	* addr = r_lib_dl_open ( p -> _runlib )		5771037	2		=			
ANR	5771593	Identifier	addr		5771037	0					
ANR	5771594	CallExpression	r_lib_dl_open ( p -> _runlib )		5771037	1					
ANR	5771595	Callee	r_lib_dl_open		5771037	0					
ANR	5771596	Identifier	r_lib_dl_open		5771037	0					
ANR	5771597	ArgumentList	p -> _runlib		5771037	1					
ANR	5771598	Argument	p -> _runlib		5771037	0					
ANR	5771599	PtrMemberAccess	p -> _runlib		5771037	0					
ANR	5771600	Identifier	p		5771037	0					
ANR	5771601	Identifier	_runlib		5771037	1					
ANR	5771602	IfStatement	if ( ! addr )		5771037	2					
ANR	5771603	Condition	! addr	1130:6:24516:24520	5771037	0	True				
ANR	5771604	UnaryOperationExpression	! addr		5771037	0					
ANR	5771605	UnaryOperator	!		5771037	0					
ANR	5771606	Identifier	addr		5771037	1					
ANR	5771607	CompoundStatement		118:13:2628:2628	5771037	1					
ANR	5771608	ExpressionStatement	"eprintf ( ""Could not load the library '%s'\\n"" , p -> _runlib )"	1131:3:24528:24585	5771037	0	True				
ANR	5771609	CallExpression	"eprintf ( ""Could not load the library '%s'\\n"" , p -> _runlib )"		5771037	0					
ANR	5771610	Callee	eprintf		5771037	0					
ANR	5771611	Identifier	eprintf		5771037	0					
ANR	5771612	ArgumentList	"""Could not load the library '%s'\\n"""		5771037	1					
ANR	5771613	Argument	"""Could not load the library '%s'\\n"""		5771037	0					
ANR	5771614	PrimaryExpression	"""Could not load the library '%s'\\n"""		5771037	0					
ANR	5771615	Argument	p -> _runlib		5771037	1					
ANR	5771616	PtrMemberAccess	p -> _runlib		5771037	0					
ANR	5771617	Identifier	p		5771037	0					
ANR	5771618	Identifier	_runlib		5771037	1					
ANR	5771619	ReturnStatement	return 1 ;	1132:3:24590:24598	5771037	1	True				
ANR	5771620	PrimaryExpression	1		5771037	0					
ANR	5771621	IdentifierDeclStatement	"void ( * fcn ) ( void ) = r_lib_dl_sym ( addr , p -> _runlib_fcn ) ;"	1134:2:24606:24661	5771037	3	True				
ANR	5771622	IdentifierDecl	"( * fcn ) ( void ) = r_lib_dl_sym ( addr , p -> _runlib_fcn )"		5771037	0					
ANR	5771623	IdentifierDeclType	void ( * ) ( void )		5771037	0					
ANR	5771624	Identifier	fcn		5771037	1					
ANR	5771625	AssignmentExpression	"( * fcn ) ( void ) = r_lib_dl_sym ( addr , p -> _runlib_fcn )"		5771037	2		=			
ANR	5771626	Identifier	fcn		5771037	0					
ANR	5771627	CallExpression	"r_lib_dl_sym ( addr , p -> _runlib_fcn )"		5771037	1					
ANR	5771628	Callee	r_lib_dl_sym		5771037	0					
ANR	5771629	Identifier	r_lib_dl_sym		5771037	0					
ANR	5771630	ArgumentList	addr		5771037	1					
ANR	5771631	Argument	addr		5771037	0					
ANR	5771632	Identifier	addr		5771037	0					
ANR	5771633	Argument	p -> _runlib_fcn		5771037	1					
ANR	5771634	PtrMemberAccess	p -> _runlib_fcn		5771037	0					
ANR	5771635	Identifier	p		5771037	0					
ANR	5771636	Identifier	_runlib_fcn		5771037	1					
ANR	5771637	IfStatement	if ( ! fcn )		5771037	4					
ANR	5771638	Condition	! fcn	1135:6:24669:24672	5771037	0	True				
ANR	5771639	UnaryOperationExpression	! fcn		5771037	0					
ANR	5771640	UnaryOperator	!		5771037	0					
ANR	5771641	Identifier	fcn		5771037	1					
ANR	5771642	CompoundStatement		123:12:2780:2780	5771037	1					
ANR	5771643	ExpressionStatement	"eprintf ( ""Could not find the function '%s'\\n"" , p -> _runlib_fcn )"	1136:3:24680:24742	5771037	0	True				
ANR	5771644	CallExpression	"eprintf ( ""Could not find the function '%s'\\n"" , p -> _runlib_fcn )"		5771037	0					
ANR	5771645	Callee	eprintf		5771037	0					
ANR	5771646	Identifier	eprintf		5771037	0					
ANR	5771647	ArgumentList	"""Could not find the function '%s'\\n"""		5771037	1					
ANR	5771648	Argument	"""Could not find the function '%s'\\n"""		5771037	0					
ANR	5771649	PrimaryExpression	"""Could not find the function '%s'\\n"""		5771037	0					
ANR	5771650	Argument	p -> _runlib_fcn		5771037	1					
ANR	5771651	PtrMemberAccess	p -> _runlib_fcn		5771037	0					
ANR	5771652	Identifier	p		5771037	0					
ANR	5771653	Identifier	_runlib_fcn		5771037	1					
ANR	5771654	ReturnStatement	return 1 ;	1137:3:24747:24755	5771037	1	True				
ANR	5771655	PrimaryExpression	1		5771037	0					
ANR	5771656	SwitchStatement	switch ( p -> _argc )		5771037	5					
ANR	5771657	Condition	p -> _argc	1139:10:24771:24778	5771037	0	True				
ANR	5771658	PtrMemberAccess	p -> _argc		5771037	0					
ANR	5771659	Identifier	p		5771037	0					
ANR	5771660	Identifier	_argc		5771037	1					
ANR	5771661	CompoundStatement		127:20:2886:2886	5771037	1					
ANR	5771662	Label	case 0 :	1140:2:24785:24791	5771037	0	True				
ANR	5771663	ExpressionStatement	fcn ( )	1141:3:24796:24802	5771037	1	True				
ANR	5771664	CallExpression	fcn ( )		5771037	0					
ANR	5771665	Callee	fcn		5771037	0					
ANR	5771666	Identifier	fcn		5771037	0					
ANR	5771667	ArgumentList			5771037	1					
ANR	5771668	BreakStatement	break ;	1142:3:24807:24812	5771037	2	True				
ANR	5771669	Label	case 1 :	1143:2:24816:24822	5771037	3	True				
ANR	5771670	ExpressionStatement	"r_run_call1 ( fcn , p -> _args [ 1 ] )"	1144:3:24827:24857	5771037	4	True				
ANR	5771671	CallExpression	"r_run_call1 ( fcn , p -> _args [ 1 ] )"		5771037	0					
ANR	5771672	Callee	r_run_call1		5771037	0					
ANR	5771673	Identifier	r_run_call1		5771037	0					
ANR	5771674	ArgumentList	fcn		5771037	1					
ANR	5771675	Argument	fcn		5771037	0					
ANR	5771676	Identifier	fcn		5771037	0					
ANR	5771677	Argument	p -> _args [ 1 ]		5771037	1					
ANR	5771678	ArrayIndexing	p -> _args [ 1 ]		5771037	0					
ANR	5771679	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771680	Identifier	p		5771037	0					
ANR	5771681	Identifier	_args		5771037	1					
ANR	5771682	PrimaryExpression	1		5771037	1					
ANR	5771683	BreakStatement	break ;	1145:3:24862:24867	5771037	5	True				
ANR	5771684	Label	case 2 :	1146:2:24871:24877	5771037	6	True				
ANR	5771685	ExpressionStatement	"r_run_call2 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] )"	1147:3:24882:24925	5771037	7	True				
ANR	5771686	CallExpression	"r_run_call2 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] )"		5771037	0					
ANR	5771687	Callee	r_run_call2		5771037	0					
ANR	5771688	Identifier	r_run_call2		5771037	0					
ANR	5771689	ArgumentList	fcn		5771037	1					
ANR	5771690	Argument	fcn		5771037	0					
ANR	5771691	Identifier	fcn		5771037	0					
ANR	5771692	Argument	p -> _args [ 1 ]		5771037	1					
ANR	5771693	ArrayIndexing	p -> _args [ 1 ]		5771037	0					
ANR	5771694	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771695	Identifier	p		5771037	0					
ANR	5771696	Identifier	_args		5771037	1					
ANR	5771697	PrimaryExpression	1		5771037	1					
ANR	5771698	Argument	p -> _args [ 2 ]		5771037	2					
ANR	5771699	ArrayIndexing	p -> _args [ 2 ]		5771037	0					
ANR	5771700	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771701	Identifier	p		5771037	0					
ANR	5771702	Identifier	_args		5771037	1					
ANR	5771703	PrimaryExpression	2		5771037	1					
ANR	5771704	BreakStatement	break ;	1148:3:24930:24935	5771037	8	True				
ANR	5771705	Label	case 3 :	1149:2:24939:24945	5771037	9	True				
ANR	5771706	ExpressionStatement	"r_run_call3 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] )"	1150:3:24950:25006	5771037	10	True				
ANR	5771707	CallExpression	"r_run_call3 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] )"		5771037	0					
ANR	5771708	Callee	r_run_call3		5771037	0					
ANR	5771709	Identifier	r_run_call3		5771037	0					
ANR	5771710	ArgumentList	fcn		5771037	1					
ANR	5771711	Argument	fcn		5771037	0					
ANR	5771712	Identifier	fcn		5771037	0					
ANR	5771713	Argument	p -> _args [ 1 ]		5771037	1					
ANR	5771714	ArrayIndexing	p -> _args [ 1 ]		5771037	0					
ANR	5771715	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771716	Identifier	p		5771037	0					
ANR	5771717	Identifier	_args		5771037	1					
ANR	5771718	PrimaryExpression	1		5771037	1					
ANR	5771719	Argument	p -> _args [ 2 ]		5771037	2					
ANR	5771720	ArrayIndexing	p -> _args [ 2 ]		5771037	0					
ANR	5771721	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771722	Identifier	p		5771037	0					
ANR	5771723	Identifier	_args		5771037	1					
ANR	5771724	PrimaryExpression	2		5771037	1					
ANR	5771725	Argument	p -> _args [ 3 ]		5771037	3					
ANR	5771726	ArrayIndexing	p -> _args [ 3 ]		5771037	0					
ANR	5771727	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771728	Identifier	p		5771037	0					
ANR	5771729	Identifier	_args		5771037	1					
ANR	5771730	PrimaryExpression	3		5771037	1					
ANR	5771731	BreakStatement	break ;	1151:3:25011:25016	5771037	11	True				
ANR	5771732	Label	case 4 :	1152:2:25020:25026	5771037	12	True				
ANR	5771733	ExpressionStatement	"r_run_call4 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] )"	1153:3:25031:25100	5771037	13	True				
ANR	5771734	CallExpression	"r_run_call4 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] )"		5771037	0					
ANR	5771735	Callee	r_run_call4		5771037	0					
ANR	5771736	Identifier	r_run_call4		5771037	0					
ANR	5771737	ArgumentList	fcn		5771037	1					
ANR	5771738	Argument	fcn		5771037	0					
ANR	5771739	Identifier	fcn		5771037	0					
ANR	5771740	Argument	p -> _args [ 1 ]		5771037	1					
ANR	5771741	ArrayIndexing	p -> _args [ 1 ]		5771037	0					
ANR	5771742	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771743	Identifier	p		5771037	0					
ANR	5771744	Identifier	_args		5771037	1					
ANR	5771745	PrimaryExpression	1		5771037	1					
ANR	5771746	Argument	p -> _args [ 2 ]		5771037	2					
ANR	5771747	ArrayIndexing	p -> _args [ 2 ]		5771037	0					
ANR	5771748	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771749	Identifier	p		5771037	0					
ANR	5771750	Identifier	_args		5771037	1					
ANR	5771751	PrimaryExpression	2		5771037	1					
ANR	5771752	Argument	p -> _args [ 3 ]		5771037	3					
ANR	5771753	ArrayIndexing	p -> _args [ 3 ]		5771037	0					
ANR	5771754	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771755	Identifier	p		5771037	0					
ANR	5771756	Identifier	_args		5771037	1					
ANR	5771757	PrimaryExpression	3		5771037	1					
ANR	5771758	Argument	p -> _args [ 4 ]		5771037	4					
ANR	5771759	ArrayIndexing	p -> _args [ 4 ]		5771037	0					
ANR	5771760	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771761	Identifier	p		5771037	0					
ANR	5771762	Identifier	_args		5771037	1					
ANR	5771763	PrimaryExpression	4		5771037	1					
ANR	5771764	BreakStatement	break ;	1154:3:25105:25110	5771037	14	True				
ANR	5771765	Label	case 5 :	1155:2:25114:25120	5771037	15	True				
ANR	5771766	ExpressionStatement	"r_run_call5 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] )"	1156:3:25125:25211	5771037	16	True				
ANR	5771767	CallExpression	"r_run_call5 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] )"		5771037	0					
ANR	5771768	Callee	r_run_call5		5771037	0					
ANR	5771769	Identifier	r_run_call5		5771037	0					
ANR	5771770	ArgumentList	fcn		5771037	1					
ANR	5771771	Argument	fcn		5771037	0					
ANR	5771772	Identifier	fcn		5771037	0					
ANR	5771773	Argument	p -> _args [ 1 ]		5771037	1					
ANR	5771774	ArrayIndexing	p -> _args [ 1 ]		5771037	0					
ANR	5771775	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771776	Identifier	p		5771037	0					
ANR	5771777	Identifier	_args		5771037	1					
ANR	5771778	PrimaryExpression	1		5771037	1					
ANR	5771779	Argument	p -> _args [ 2 ]		5771037	2					
ANR	5771780	ArrayIndexing	p -> _args [ 2 ]		5771037	0					
ANR	5771781	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771782	Identifier	p		5771037	0					
ANR	5771783	Identifier	_args		5771037	1					
ANR	5771784	PrimaryExpression	2		5771037	1					
ANR	5771785	Argument	p -> _args [ 3 ]		5771037	3					
ANR	5771786	ArrayIndexing	p -> _args [ 3 ]		5771037	0					
ANR	5771787	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771788	Identifier	p		5771037	0					
ANR	5771789	Identifier	_args		5771037	1					
ANR	5771790	PrimaryExpression	3		5771037	1					
ANR	5771791	Argument	p -> _args [ 4 ]		5771037	4					
ANR	5771792	ArrayIndexing	p -> _args [ 4 ]		5771037	0					
ANR	5771793	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771794	Identifier	p		5771037	0					
ANR	5771795	Identifier	_args		5771037	1					
ANR	5771796	PrimaryExpression	4		5771037	1					
ANR	5771797	Argument	p -> _args [ 5 ]		5771037	5					
ANR	5771798	ArrayIndexing	p -> _args [ 5 ]		5771037	0					
ANR	5771799	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771800	Identifier	p		5771037	0					
ANR	5771801	Identifier	_args		5771037	1					
ANR	5771802	PrimaryExpression	5		5771037	1					
ANR	5771803	BreakStatement	break ;	1158:3:25216:25221	5771037	17	True				
ANR	5771804	Label	case 6 :	1159:2:25225:25231	5771037	18	True				
ANR	5771805	ExpressionStatement	"r_run_call6 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] )"	1160:3:25236:25335	5771037	19	True				
ANR	5771806	CallExpression	"r_run_call6 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] )"		5771037	0					
ANR	5771807	Callee	r_run_call6		5771037	0					
ANR	5771808	Identifier	r_run_call6		5771037	0					
ANR	5771809	ArgumentList	fcn		5771037	1					
ANR	5771810	Argument	fcn		5771037	0					
ANR	5771811	Identifier	fcn		5771037	0					
ANR	5771812	Argument	p -> _args [ 1 ]		5771037	1					
ANR	5771813	ArrayIndexing	p -> _args [ 1 ]		5771037	0					
ANR	5771814	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771815	Identifier	p		5771037	0					
ANR	5771816	Identifier	_args		5771037	1					
ANR	5771817	PrimaryExpression	1		5771037	1					
ANR	5771818	Argument	p -> _args [ 2 ]		5771037	2					
ANR	5771819	ArrayIndexing	p -> _args [ 2 ]		5771037	0					
ANR	5771820	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771821	Identifier	p		5771037	0					
ANR	5771822	Identifier	_args		5771037	1					
ANR	5771823	PrimaryExpression	2		5771037	1					
ANR	5771824	Argument	p -> _args [ 3 ]		5771037	3					
ANR	5771825	ArrayIndexing	p -> _args [ 3 ]		5771037	0					
ANR	5771826	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771827	Identifier	p		5771037	0					
ANR	5771828	Identifier	_args		5771037	1					
ANR	5771829	PrimaryExpression	3		5771037	1					
ANR	5771830	Argument	p -> _args [ 4 ]		5771037	4					
ANR	5771831	ArrayIndexing	p -> _args [ 4 ]		5771037	0					
ANR	5771832	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771833	Identifier	p		5771037	0					
ANR	5771834	Identifier	_args		5771037	1					
ANR	5771835	PrimaryExpression	4		5771037	1					
ANR	5771836	Argument	p -> _args [ 5 ]		5771037	5					
ANR	5771837	ArrayIndexing	p -> _args [ 5 ]		5771037	0					
ANR	5771838	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771839	Identifier	p		5771037	0					
ANR	5771840	Identifier	_args		5771037	1					
ANR	5771841	PrimaryExpression	5		5771037	1					
ANR	5771842	Argument	p -> _args [ 6 ]		5771037	6					
ANR	5771843	ArrayIndexing	p -> _args [ 6 ]		5771037	0					
ANR	5771844	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771845	Identifier	p		5771037	0					
ANR	5771846	Identifier	_args		5771037	1					
ANR	5771847	PrimaryExpression	6		5771037	1					
ANR	5771848	BreakStatement	break ;	1162:3:25340:25345	5771037	20	True				
ANR	5771849	Label	case 7 :	1163:2:25349:25355	5771037	21	True				
ANR	5771850	ExpressionStatement	"r_run_call7 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] , p -> _args [ 7 ] )"	1164:3:25360:25472	5771037	22	True				
ANR	5771851	CallExpression	"r_run_call7 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] , p -> _args [ 7 ] )"		5771037	0					
ANR	5771852	Callee	r_run_call7		5771037	0					
ANR	5771853	Identifier	r_run_call7		5771037	0					
ANR	5771854	ArgumentList	fcn		5771037	1					
ANR	5771855	Argument	fcn		5771037	0					
ANR	5771856	Identifier	fcn		5771037	0					
ANR	5771857	Argument	p -> _args [ 1 ]		5771037	1					
ANR	5771858	ArrayIndexing	p -> _args [ 1 ]		5771037	0					
ANR	5771859	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771860	Identifier	p		5771037	0					
ANR	5771861	Identifier	_args		5771037	1					
ANR	5771862	PrimaryExpression	1		5771037	1					
ANR	5771863	Argument	p -> _args [ 2 ]		5771037	2					
ANR	5771864	ArrayIndexing	p -> _args [ 2 ]		5771037	0					
ANR	5771865	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771866	Identifier	p		5771037	0					
ANR	5771867	Identifier	_args		5771037	1					
ANR	5771868	PrimaryExpression	2		5771037	1					
ANR	5771869	Argument	p -> _args [ 3 ]		5771037	3					
ANR	5771870	ArrayIndexing	p -> _args [ 3 ]		5771037	0					
ANR	5771871	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771872	Identifier	p		5771037	0					
ANR	5771873	Identifier	_args		5771037	1					
ANR	5771874	PrimaryExpression	3		5771037	1					
ANR	5771875	Argument	p -> _args [ 4 ]		5771037	4					
ANR	5771876	ArrayIndexing	p -> _args [ 4 ]		5771037	0					
ANR	5771877	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771878	Identifier	p		5771037	0					
ANR	5771879	Identifier	_args		5771037	1					
ANR	5771880	PrimaryExpression	4		5771037	1					
ANR	5771881	Argument	p -> _args [ 5 ]		5771037	5					
ANR	5771882	ArrayIndexing	p -> _args [ 5 ]		5771037	0					
ANR	5771883	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771884	Identifier	p		5771037	0					
ANR	5771885	Identifier	_args		5771037	1					
ANR	5771886	PrimaryExpression	5		5771037	1					
ANR	5771887	Argument	p -> _args [ 6 ]		5771037	6					
ANR	5771888	ArrayIndexing	p -> _args [ 6 ]		5771037	0					
ANR	5771889	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771890	Identifier	p		5771037	0					
ANR	5771891	Identifier	_args		5771037	1					
ANR	5771892	PrimaryExpression	6		5771037	1					
ANR	5771893	Argument	p -> _args [ 7 ]		5771037	7					
ANR	5771894	ArrayIndexing	p -> _args [ 7 ]		5771037	0					
ANR	5771895	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771896	Identifier	p		5771037	0					
ANR	5771897	Identifier	_args		5771037	1					
ANR	5771898	PrimaryExpression	7		5771037	1					
ANR	5771899	BreakStatement	break ;	1166:3:25477:25482	5771037	23	True				
ANR	5771900	Label	case 8 :	1167:2:25486:25492	5771037	24	True				
ANR	5771901	ExpressionStatement	"r_run_call8 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] , p -> _args [ 7 ] , p -> _args [ 8 ] )"	1168:3:25497:25622	5771037	25	True				
ANR	5771902	CallExpression	"r_run_call8 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] , p -> _args [ 7 ] , p -> _args [ 8 ] )"		5771037	0					
ANR	5771903	Callee	r_run_call8		5771037	0					
ANR	5771904	Identifier	r_run_call8		5771037	0					
ANR	5771905	ArgumentList	fcn		5771037	1					
ANR	5771906	Argument	fcn		5771037	0					
ANR	5771907	Identifier	fcn		5771037	0					
ANR	5771908	Argument	p -> _args [ 1 ]		5771037	1					
ANR	5771909	ArrayIndexing	p -> _args [ 1 ]		5771037	0					
ANR	5771910	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771911	Identifier	p		5771037	0					
ANR	5771912	Identifier	_args		5771037	1					
ANR	5771913	PrimaryExpression	1		5771037	1					
ANR	5771914	Argument	p -> _args [ 2 ]		5771037	2					
ANR	5771915	ArrayIndexing	p -> _args [ 2 ]		5771037	0					
ANR	5771916	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771917	Identifier	p		5771037	0					
ANR	5771918	Identifier	_args		5771037	1					
ANR	5771919	PrimaryExpression	2		5771037	1					
ANR	5771920	Argument	p -> _args [ 3 ]		5771037	3					
ANR	5771921	ArrayIndexing	p -> _args [ 3 ]		5771037	0					
ANR	5771922	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771923	Identifier	p		5771037	0					
ANR	5771924	Identifier	_args		5771037	1					
ANR	5771925	PrimaryExpression	3		5771037	1					
ANR	5771926	Argument	p -> _args [ 4 ]		5771037	4					
ANR	5771927	ArrayIndexing	p -> _args [ 4 ]		5771037	0					
ANR	5771928	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771929	Identifier	p		5771037	0					
ANR	5771930	Identifier	_args		5771037	1					
ANR	5771931	PrimaryExpression	4		5771037	1					
ANR	5771932	Argument	p -> _args [ 5 ]		5771037	5					
ANR	5771933	ArrayIndexing	p -> _args [ 5 ]		5771037	0					
ANR	5771934	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771935	Identifier	p		5771037	0					
ANR	5771936	Identifier	_args		5771037	1					
ANR	5771937	PrimaryExpression	5		5771037	1					
ANR	5771938	Argument	p -> _args [ 6 ]		5771037	6					
ANR	5771939	ArrayIndexing	p -> _args [ 6 ]		5771037	0					
ANR	5771940	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771941	Identifier	p		5771037	0					
ANR	5771942	Identifier	_args		5771037	1					
ANR	5771943	PrimaryExpression	6		5771037	1					
ANR	5771944	Argument	p -> _args [ 7 ]		5771037	7					
ANR	5771945	ArrayIndexing	p -> _args [ 7 ]		5771037	0					
ANR	5771946	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771947	Identifier	p		5771037	0					
ANR	5771948	Identifier	_args		5771037	1					
ANR	5771949	PrimaryExpression	7		5771037	1					
ANR	5771950	Argument	p -> _args [ 8 ]		5771037	8					
ANR	5771951	ArrayIndexing	p -> _args [ 8 ]		5771037	0					
ANR	5771952	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771953	Identifier	p		5771037	0					
ANR	5771954	Identifier	_args		5771037	1					
ANR	5771955	PrimaryExpression	8		5771037	1					
ANR	5771956	BreakStatement	break ;	1170:3:25627:25632	5771037	26	True				
ANR	5771957	Label	case 9 :	1171:2:25636:25642	5771037	27	True				
ANR	5771958	ExpressionStatement	"r_run_call9 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] , p -> _args [ 7 ] , p -> _args [ 8 ] , p -> _args [ 9 ] )"	1172:3:25647:25785	5771037	28	True				
ANR	5771959	CallExpression	"r_run_call9 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] , p -> _args [ 7 ] , p -> _args [ 8 ] , p -> _args [ 9 ] )"		5771037	0					
ANR	5771960	Callee	r_run_call9		5771037	0					
ANR	5771961	Identifier	r_run_call9		5771037	0					
ANR	5771962	ArgumentList	fcn		5771037	1					
ANR	5771963	Argument	fcn		5771037	0					
ANR	5771964	Identifier	fcn		5771037	0					
ANR	5771965	Argument	p -> _args [ 1 ]		5771037	1					
ANR	5771966	ArrayIndexing	p -> _args [ 1 ]		5771037	0					
ANR	5771967	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771968	Identifier	p		5771037	0					
ANR	5771969	Identifier	_args		5771037	1					
ANR	5771970	PrimaryExpression	1		5771037	1					
ANR	5771971	Argument	p -> _args [ 2 ]		5771037	2					
ANR	5771972	ArrayIndexing	p -> _args [ 2 ]		5771037	0					
ANR	5771973	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771974	Identifier	p		5771037	0					
ANR	5771975	Identifier	_args		5771037	1					
ANR	5771976	PrimaryExpression	2		5771037	1					
ANR	5771977	Argument	p -> _args [ 3 ]		5771037	3					
ANR	5771978	ArrayIndexing	p -> _args [ 3 ]		5771037	0					
ANR	5771979	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771980	Identifier	p		5771037	0					
ANR	5771981	Identifier	_args		5771037	1					
ANR	5771982	PrimaryExpression	3		5771037	1					
ANR	5771983	Argument	p -> _args [ 4 ]		5771037	4					
ANR	5771984	ArrayIndexing	p -> _args [ 4 ]		5771037	0					
ANR	5771985	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771986	Identifier	p		5771037	0					
ANR	5771987	Identifier	_args		5771037	1					
ANR	5771988	PrimaryExpression	4		5771037	1					
ANR	5771989	Argument	p -> _args [ 5 ]		5771037	5					
ANR	5771990	ArrayIndexing	p -> _args [ 5 ]		5771037	0					
ANR	5771991	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771992	Identifier	p		5771037	0					
ANR	5771993	Identifier	_args		5771037	1					
ANR	5771994	PrimaryExpression	5		5771037	1					
ANR	5771995	Argument	p -> _args [ 6 ]		5771037	6					
ANR	5771996	ArrayIndexing	p -> _args [ 6 ]		5771037	0					
ANR	5771997	PtrMemberAccess	p -> _args		5771037	0					
ANR	5771998	Identifier	p		5771037	0					
ANR	5771999	Identifier	_args		5771037	1					
ANR	5772000	PrimaryExpression	6		5771037	1					
ANR	5772001	Argument	p -> _args [ 7 ]		5771037	7					
ANR	5772002	ArrayIndexing	p -> _args [ 7 ]		5771037	0					
ANR	5772003	PtrMemberAccess	p -> _args		5771037	0					
ANR	5772004	Identifier	p		5771037	0					
ANR	5772005	Identifier	_args		5771037	1					
ANR	5772006	PrimaryExpression	7		5771037	1					
ANR	5772007	Argument	p -> _args [ 8 ]		5771037	8					
ANR	5772008	ArrayIndexing	p -> _args [ 8 ]		5771037	0					
ANR	5772009	PtrMemberAccess	p -> _args		5771037	0					
ANR	5772010	Identifier	p		5771037	0					
ANR	5772011	Identifier	_args		5771037	1					
ANR	5772012	PrimaryExpression	8		5771037	1					
ANR	5772013	Argument	p -> _args [ 9 ]		5771037	9					
ANR	5772014	ArrayIndexing	p -> _args [ 9 ]		5771037	0					
ANR	5772015	PtrMemberAccess	p -> _args		5771037	0					
ANR	5772016	Identifier	p		5771037	0					
ANR	5772017	Identifier	_args		5771037	1					
ANR	5772018	PrimaryExpression	9		5771037	1					
ANR	5772019	BreakStatement	break ;	1174:3:25790:25795	5771037	29	True				
ANR	5772020	Label	case 10 :	1175:2:25799:25806	5771037	30	True				
ANR	5772021	ExpressionStatement	"r_run_call10 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] , p -> _args [ 7 ] , p -> _args [ 8 ] , p -> _args [ 9 ] , p -> _args [ 10 ] )"	1176:3:25811:25964	5771037	31	True				
ANR	5772022	CallExpression	"r_run_call10 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] , p -> _args [ 7 ] , p -> _args [ 8 ] , p -> _args [ 9 ] , p -> _args [ 10 ] )"		5771037	0					
ANR	5772023	Callee	r_run_call10		5771037	0					
ANR	5772024	Identifier	r_run_call10		5771037	0					
ANR	5772025	ArgumentList	fcn		5771037	1					
ANR	5772026	Argument	fcn		5771037	0					
ANR	5772027	Identifier	fcn		5771037	0					
ANR	5772028	Argument	p -> _args [ 1 ]		5771037	1					
ANR	5772029	ArrayIndexing	p -> _args [ 1 ]		5771037	0					
ANR	5772030	PtrMemberAccess	p -> _args		5771037	0					
ANR	5772031	Identifier	p		5771037	0					
ANR	5772032	Identifier	_args		5771037	1					
ANR	5772033	PrimaryExpression	1		5771037	1					
ANR	5772034	Argument	p -> _args [ 2 ]		5771037	2					
ANR	5772035	ArrayIndexing	p -> _args [ 2 ]		5771037	0					
ANR	5772036	PtrMemberAccess	p -> _args		5771037	0					
ANR	5772037	Identifier	p		5771037	0					
ANR	5772038	Identifier	_args		5771037	1					
ANR	5772039	PrimaryExpression	2		5771037	1					
ANR	5772040	Argument	p -> _args [ 3 ]		5771037	3					
ANR	5772041	ArrayIndexing	p -> _args [ 3 ]		5771037	0					
ANR	5772042	PtrMemberAccess	p -> _args		5771037	0					
ANR	5772043	Identifier	p		5771037	0					
ANR	5772044	Identifier	_args		5771037	1					
ANR	5772045	PrimaryExpression	3		5771037	1					
ANR	5772046	Argument	p -> _args [ 4 ]		5771037	4					
ANR	5772047	ArrayIndexing	p -> _args [ 4 ]		5771037	0					
ANR	5772048	PtrMemberAccess	p -> _args		5771037	0					
ANR	5772049	Identifier	p		5771037	0					
ANR	5772050	Identifier	_args		5771037	1					
ANR	5772051	PrimaryExpression	4		5771037	1					
ANR	5772052	Argument	p -> _args [ 5 ]		5771037	5					
ANR	5772053	ArrayIndexing	p -> _args [ 5 ]		5771037	0					
ANR	5772054	PtrMemberAccess	p -> _args		5771037	0					
ANR	5772055	Identifier	p		5771037	0					
ANR	5772056	Identifier	_args		5771037	1					
ANR	5772057	PrimaryExpression	5		5771037	1					
ANR	5772058	Argument	p -> _args [ 6 ]		5771037	6					
ANR	5772059	ArrayIndexing	p -> _args [ 6 ]		5771037	0					
ANR	5772060	PtrMemberAccess	p -> _args		5771037	0					
ANR	5772061	Identifier	p		5771037	0					
ANR	5772062	Identifier	_args		5771037	1					
ANR	5772063	PrimaryExpression	6		5771037	1					
ANR	5772064	Argument	p -> _args [ 7 ]		5771037	7					
ANR	5772065	ArrayIndexing	p -> _args [ 7 ]		5771037	0					
ANR	5772066	PtrMemberAccess	p -> _args		5771037	0					
ANR	5772067	Identifier	p		5771037	0					
ANR	5772068	Identifier	_args		5771037	1					
ANR	5772069	PrimaryExpression	7		5771037	1					
ANR	5772070	Argument	p -> _args [ 8 ]		5771037	8					
ANR	5772071	ArrayIndexing	p -> _args [ 8 ]		5771037	0					
ANR	5772072	PtrMemberAccess	p -> _args		5771037	0					
ANR	5772073	Identifier	p		5771037	0					
ANR	5772074	Identifier	_args		5771037	1					
ANR	5772075	PrimaryExpression	8		5771037	1					
ANR	5772076	Argument	p -> _args [ 9 ]		5771037	9					
ANR	5772077	ArrayIndexing	p -> _args [ 9 ]		5771037	0					
ANR	5772078	PtrMemberAccess	p -> _args		5771037	0					
ANR	5772079	Identifier	p		5771037	0					
ANR	5772080	Identifier	_args		5771037	1					
ANR	5772081	PrimaryExpression	9		5771037	1					
ANR	5772082	Argument	p -> _args [ 10 ]		5771037	10					
ANR	5772083	ArrayIndexing	p -> _args [ 10 ]		5771037	0					
ANR	5772084	PtrMemberAccess	p -> _args		5771037	0					
ANR	5772085	Identifier	p		5771037	0					
ANR	5772086	Identifier	_args		5771037	1					
ANR	5772087	PrimaryExpression	10		5771037	1					
ANR	5772088	BreakStatement	break ;	1178:3:25969:25974	5771037	32	True				
ANR	5772089	Label	default :	1179:2:25978:25985	5771037	33	True				
ANR	5772090	Identifier	default		5771037	0					
ANR	5772091	ExpressionStatement	"eprintf ( ""Too many arguments.\\n"" )"	1180:3:25990:26023	5771037	34	True				
ANR	5772092	CallExpression	"eprintf ( ""Too many arguments.\\n"" )"		5771037	0					
ANR	5772093	Callee	eprintf		5771037	0					
ANR	5772094	Identifier	eprintf		5771037	0					
ANR	5772095	ArgumentList	"""Too many arguments.\\n"""		5771037	1					
ANR	5772096	Argument	"""Too many arguments.\\n"""		5771037	0					
ANR	5772097	PrimaryExpression	"""Too many arguments.\\n"""		5771037	0					
ANR	5772098	ReturnStatement	return 1 ;	1181:3:26028:26036	5771037	35	True				
ANR	5772099	PrimaryExpression	1		5771037	0					
ANR	5772100	ExpressionStatement	r_lib_dl_close ( addr )	1183:2:26044:26065	5771037	6	True				
ANR	5772101	CallExpression	r_lib_dl_close ( addr )		5771037	0					
ANR	5772102	Callee	r_lib_dl_close		5771037	0					
ANR	5772103	Identifier	r_lib_dl_close		5771037	0					
ANR	5772104	ArgumentList	addr		5771037	1					
ANR	5772105	Argument	addr		5771037	0					
ANR	5772106	Identifier	addr		5771037	0					
ANR	5772107	ReturnStatement	return 0 ;	1185:1:26071:26079	5771037	9	True				
ANR	5772108	PrimaryExpression	0		5771037	0					
ANR	5772109	ReturnType	R_API int		5771037	1					
ANR	5772110	Identifier	r_run_start		5771037	2					
ANR	5772111	ParameterList	RRunProfile * p		5771037	3					
ANR	5772112	Parameter	RRunProfile * p	1013:22:21878:21891	5771037	0	True				
ANR	5772113	ParameterType	RRunProfile *		5771037	0					
ANR	5772114	Identifier	p		5771037	1					
ANR	5772115	CFGEntryNode	ENTRY		5771037		True				
ANR	5772116	CFGExitNode	EXIT		5771037		True				
ANR	5772117	Symbol	copied		5771037						
ANR	5772118	Symbol	& cpu		5771037						
ANR	5772119	Symbol	pid		5771037						
ANR	5772120	Symbol	& copied		5771037						
ANR	5772121	Symbol	r_sys_cmd		5771037						
ANR	5772122	Symbol	envp		5771037						
ANR	5772123	Symbol	spflags		5771037						
ANR	5772124	Symbol	strlen		5771037						
ANR	5772125	Symbol	p -> _aslr		5771037						
ANR	5772126	Symbol	posix_spawnp		5771037						
ANR	5772127	Symbol	p -> _program		5771037						
ANR	5772128	Symbol	r_lib_dl_sym		5771037						
ANR	5772129	Symbol	CPU_ARCH_ABI64		5771037						
ANR	5772130	Symbol	p -> _pidfile		5771037						
ANR	5772131	Symbol	ret		5771037						
ANR	5772132	Symbol	setgid		5771037						
ANR	5772133	Symbol	NULL		5771037						
ANR	5772134	Symbol	p -> _argc		5771037						
ANR	5772135	Symbol	cpu		5771037						
ANR	5772136	Symbol	p -> _runlib_fcn		5771037						
ANR	5772137	Symbol	progpath		5771037						
ANR	5772138	Symbol	POSIX_SPAWN_SETEXEC		5771037						
ANR	5772139	Symbol	r_sys_get_environ		5771037						
ANR	5772140	Symbol	p -> _nice		5771037						
ANR	5772141	Symbol	* p -> _args		5771037						
ANR	5772142	Symbol	& pid		5771037						
ANR	5772143	Symbol	p -> _args		5771037						
ANR	5772144	Symbol	_POSIX_SPAWN_DISABLE_ASLR		5771037						
ANR	5772145	Symbol	CPU_TYPE_I386		5771037						
ANR	5772146	Symbol	fcn		5771037						
ANR	5772147	Symbol	r_lib_dl_open		5771037						
ANR	5772148	Symbol	pidstr		5771037						
ANR	5772149	Symbol	r_file_path		5771037						
ANR	5772150	Symbol	* * p		5771037						
ANR	5772151	Symbol	* progpath		5771037						
ANR	5772152	Symbol	attr		5771037						
ANR	5772153	Symbol	addr		5771037						
ANR	5772154	Symbol	atoi		5771037						
ANR	5772155	Symbol	p -> _pid		5771037						
ANR	5772156	Symbol	p -> _setgid		5771037						
ANR	5772157	Symbol	p -> _execve		5771037						
ANR	5772158	Symbol	& attr		5771037						
ANR	5772159	Symbol	i		5771037						
ANR	5772160	Symbol	p -> _bits		5771037						
ANR	5772161	Symbol	nice		5771037						
ANR	5772162	Symbol	p		5771037						
ANR	5772163	Symbol	p -> _system		5771037						
ANR	5772164	Symbol	p -> _runlib		5771037						
ANR	5772165	Symbol	* p		5771037						
ANR	5772166	Symbol	r_file_exists		5771037						
ANR	5772167	Symbol	getpid		5771037						
