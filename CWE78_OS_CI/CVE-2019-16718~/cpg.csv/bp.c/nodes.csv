command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	619254	File	data/converged/CVE-2019-16718~_radare2/bp.c								
ANR	619255	DeclStmt									
ANR	619256	Decl							include < config . h >	include < config . h > ( r_bp )	R_LIB_VERSION
ANR	619257	DeclStmt									
ANR	619258	Decl							struct r_bp_plugin_t	struct r_bp_plugin_t * [ ]	bp_static_plugins
ANR	619259	Function	r_bp_item_free	11:0:194:368							
ANR	619260	FunctionDef	r_bp_item_free (RBreakpointItem * b)		619259	0					
ANR	619261	CompoundStatement		11:48:242:368	619259	0					
ANR	619262	ExpressionStatement	free ( b -> name )	12:1:245:259	619259	0	True				
ANR	619263	CallExpression	free ( b -> name )		619259	0					
ANR	619264	Callee	free		619259	0					
ANR	619265	Identifier	free		619259	0					
ANR	619266	ArgumentList	b -> name		619259	1					
ANR	619267	Argument	b -> name		619259	0					
ANR	619268	PtrMemberAccess	b -> name		619259	0					
ANR	619269	Identifier	b		619259	0					
ANR	619270	Identifier	name		619259	1					
ANR	619271	ExpressionStatement	free ( b -> bbytes )	13:1:262:278	619259	1	True				
ANR	619272	CallExpression	free ( b -> bbytes )		619259	0					
ANR	619273	Callee	free		619259	0					
ANR	619274	Identifier	free		619259	0					
ANR	619275	ArgumentList	b -> bbytes		619259	1					
ANR	619276	Argument	b -> bbytes		619259	0					
ANR	619277	PtrMemberAccess	b -> bbytes		619259	0					
ANR	619278	Identifier	b		619259	0					
ANR	619279	Identifier	bbytes		619259	1					
ANR	619280	ExpressionStatement	free ( b -> obytes )	14:1:281:297	619259	2	True				
ANR	619281	CallExpression	free ( b -> obytes )		619259	0					
ANR	619282	Callee	free		619259	0					
ANR	619283	Identifier	free		619259	0					
ANR	619284	ArgumentList	b -> obytes		619259	1					
ANR	619285	Argument	b -> obytes		619259	0					
ANR	619286	PtrMemberAccess	b -> obytes		619259	0					
ANR	619287	Identifier	b		619259	0					
ANR	619288	Identifier	obytes		619259	1					
ANR	619289	ExpressionStatement	free ( b -> module_name )	15:1:300:321	619259	3	True				
ANR	619290	CallExpression	free ( b -> module_name )		619259	0					
ANR	619291	Callee	free		619259	0					
ANR	619292	Identifier	free		619259	0					
ANR	619293	ArgumentList	b -> module_name		619259	1					
ANR	619294	Argument	b -> module_name		619259	0					
ANR	619295	PtrMemberAccess	b -> module_name		619259	0					
ANR	619296	Identifier	b		619259	0					
ANR	619297	Identifier	module_name		619259	1					
ANR	619298	ExpressionStatement	free ( b -> data )	16:1:324:338	619259	4	True				
ANR	619299	CallExpression	free ( b -> data )		619259	0					
ANR	619300	Callee	free		619259	0					
ANR	619301	Identifier	free		619259	0					
ANR	619302	ArgumentList	b -> data		619259	1					
ANR	619303	Argument	b -> data		619259	0					
ANR	619304	PtrMemberAccess	b -> data		619259	0					
ANR	619305	Identifier	b		619259	0					
ANR	619306	Identifier	data		619259	1					
ANR	619307	ExpressionStatement	free ( b -> cond )	17:1:341:355	619259	5	True				
ANR	619308	CallExpression	free ( b -> cond )		619259	0					
ANR	619309	Callee	free		619259	0					
ANR	619310	Identifier	free		619259	0					
ANR	619311	ArgumentList	b -> cond		619259	1					
ANR	619312	Argument	b -> cond		619259	0					
ANR	619313	PtrMemberAccess	b -> cond		619259	0					
ANR	619314	Identifier	b		619259	0					
ANR	619315	Identifier	cond		619259	1					
ANR	619316	ExpressionStatement	free ( b )	18:1:358:366	619259	6	True				
ANR	619317	CallExpression	free ( b )		619259	0					
ANR	619318	Callee	free		619259	0					
ANR	619319	Identifier	free		619259	0					
ANR	619320	ArgumentList	b		619259	1					
ANR	619321	Argument	b		619259	0					
ANR	619322	Identifier	b		619259	0					
ANR	619323	ReturnType	static void		619259	1					
ANR	619324	Identifier	r_bp_item_free		619259	2					
ANR	619325	ParameterList	RBreakpointItem * b		619259	3					
ANR	619326	Parameter	RBreakpointItem * b	11:28:222:239	619259	0	True				
ANR	619327	ParameterType	RBreakpointItem *		619259	0					
ANR	619328	Identifier	b		619259	1					
ANR	619329	CFGEntryNode	ENTRY		619259		True				
ANR	619330	CFGExitNode	EXIT		619259		True				
ANR	619331	Symbol	b -> bbytes		619259						
ANR	619332	Symbol	b		619259						
ANR	619333	Symbol	b -> data		619259						
ANR	619334	Symbol	b -> obytes		619259						
ANR	619335	Symbol	b -> module_name		619259						
ANR	619336	Symbol	* b		619259						
ANR	619337	Symbol	b -> cond		619259						
ANR	619338	Symbol	b -> name		619259						
ANR	619339	Function	r_bp_new	21:0:371:1092							
ANR	619340	FunctionDef	r_bp_new ()		619339	0					
ANR	619341	CompoundStatement		21:30:401:1092	619339	0					
ANR	619342	IdentifierDeclStatement	int i ;	22:1:404:409	619339	0	True				
ANR	619343	IdentifierDecl	i		619339	0					
ANR	619344	IdentifierDeclType	int		619339	0					
ANR	619345	Identifier	i		619339	1					
ANR	619346	IdentifierDeclStatement	RBreakpointPlugin * static_plugin ;	23:1:412:444	619339	1	True				
ANR	619347	IdentifierDecl	* static_plugin		619339	0					
ANR	619348	IdentifierDeclType	RBreakpointPlugin *		619339	0					
ANR	619349	Identifier	static_plugin		619339	1					
ANR	619350	IdentifierDeclStatement	RBreakpoint * bp = R_NEW0 ( RBreakpoint ) ;	24:1:447:485	619339	2	True				
ANR	619351	IdentifierDecl	* bp = R_NEW0 ( RBreakpoint )		619339	0					
ANR	619352	IdentifierDeclType	RBreakpoint *		619339	0					
ANR	619353	Identifier	bp		619339	1					
ANR	619354	AssignmentExpression	* bp = R_NEW0 ( RBreakpoint )		619339	2		=			
ANR	619355	Identifier	bp		619339	0					
ANR	619356	CallExpression	R_NEW0 ( RBreakpoint )		619339	1					
ANR	619357	Callee	R_NEW0		619339	0					
ANR	619358	Identifier	R_NEW0		619339	0					
ANR	619359	ArgumentList	RBreakpoint		619339	1					
ANR	619360	Argument	RBreakpoint		619339	0					
ANR	619361	Identifier	RBreakpoint		619339	0					
ANR	619362	IfStatement	if ( ! bp )		619339	3					
ANR	619363	Condition	! bp	25:5:492:494	619339	0	True				
ANR	619364	UnaryOperationExpression	! bp		619339	0					
ANR	619365	UnaryOperator	!		619339	0					
ANR	619366	Identifier	bp		619339	1					
ANR	619367	CompoundStatement		5:10:95:95	619339	1					
ANR	619368	ReturnStatement	return NULL ;	26:2:501:512	619339	0	True				
ANR	619369	Identifier	NULL		619339	0					
ANR	619370	ExpressionStatement	bp -> bps_idx_count = 16	28:1:518:540	619339	4	True				
ANR	619371	AssignmentExpression	bp -> bps_idx_count = 16		619339	0		=			
ANR	619372	PtrMemberAccess	bp -> bps_idx_count		619339	0					
ANR	619373	Identifier	bp		619339	0					
ANR	619374	Identifier	bps_idx_count		619339	1					
ANR	619375	PrimaryExpression	16		619339	1					
ANR	619376	Statement	bp	29:1:543:544	619339	5	True				
ANR	619377	Statement	->	29:3:545:546	619339	6	True				
ANR	619378	Statement	bps_idx	29:5:547:553	619339	7	True				
ANR	619379	Statement	=	29:13:555:555	619339	8	True				
ANR	619380	Statement	R_NEWS0	29:15:557:563	619339	9	True				
ANR	619381	Statement	(	29:23:565:565	619339	10	True				
ANR	619382	Statement	RBreakpointItem	29:24:566:580	619339	11	True				
ANR	619383	Statement	*	29:39:581:581	619339	12	True				
ANR	619384	Statement	","	29:40:582:582	619339	13	True				
ANR	619385	Statement	bp	29:42:584:585	619339	14	True				
ANR	619386	Statement	->	29:44:586:587	619339	15	True				
ANR	619387	Statement	bps_idx_count	29:46:588:600	619339	16	True				
ANR	619388	Statement	)	29:59:601:601	619339	17	True				
ANR	619389	ExpressionStatement		29:60:602:602	619339	18	True				
ANR	619390	ExpressionStatement	bp -> stepcont = R_BP_CONT_NORMAL	30:1:605:636	619339	19	True				
ANR	619391	AssignmentExpression	bp -> stepcont = R_BP_CONT_NORMAL		619339	0		=			
ANR	619392	PtrMemberAccess	bp -> stepcont		619339	0					
ANR	619393	Identifier	bp		619339	0					
ANR	619394	Identifier	stepcont		619339	1					
ANR	619395	Identifier	R_BP_CONT_NORMAL		619339	1					
ANR	619396	ExpressionStatement	bp -> traces = r_bp_traptrace_new ( )	31:1:639:673	619339	20	True				
ANR	619397	AssignmentExpression	bp -> traces = r_bp_traptrace_new ( )		619339	0		=			
ANR	619398	PtrMemberAccess	bp -> traces		619339	0					
ANR	619399	Identifier	bp		619339	0					
ANR	619400	Identifier	traces		619339	1					
ANR	619401	CallExpression	r_bp_traptrace_new ( )		619339	1					
ANR	619402	Callee	r_bp_traptrace_new		619339	0					
ANR	619403	Identifier	r_bp_traptrace_new		619339	0					
ANR	619404	ArgumentList			619339	1					
ANR	619405	ExpressionStatement	bp -> cb_printf = ( PrintfCallback ) printf	32:1:676:714	619339	21	True				
ANR	619406	AssignmentExpression	bp -> cb_printf = ( PrintfCallback ) printf		619339	0		=			
ANR	619407	PtrMemberAccess	bp -> cb_printf		619339	0					
ANR	619408	Identifier	bp		619339	0					
ANR	619409	Identifier	cb_printf		619339	1					
ANR	619410	CastExpression	( PrintfCallback ) printf		619339	1					
ANR	619411	CastTarget	PrintfCallback		619339	0					
ANR	619412	Identifier	printf		619339	1					
ANR	619413	ExpressionStatement	bp -> bps = r_list_newf ( ( RListFree ) r_bp_item_free )	33:1:717:766	619339	22	True				
ANR	619414	AssignmentExpression	bp -> bps = r_list_newf ( ( RListFree ) r_bp_item_free )		619339	0		=			
ANR	619415	PtrMemberAccess	bp -> bps		619339	0					
ANR	619416	Identifier	bp		619339	0					
ANR	619417	Identifier	bps		619339	1					
ANR	619418	CallExpression	r_list_newf ( ( RListFree ) r_bp_item_free )		619339	1					
ANR	619419	Callee	r_list_newf		619339	0					
ANR	619420	Identifier	r_list_newf		619339	0					
ANR	619421	ArgumentList	( RListFree ) r_bp_item_free		619339	1					
ANR	619422	Argument	( RListFree ) r_bp_item_free		619339	0					
ANR	619423	CastExpression	( RListFree ) r_bp_item_free		619339	0					
ANR	619424	CastTarget	RListFree		619339	0					
ANR	619425	Identifier	r_bp_item_free		619339	1					
ANR	619426	ExpressionStatement	bp -> plugins = r_list_newf ( ( RListFree ) free )	34:1:769:812	619339	23	True				
ANR	619427	AssignmentExpression	bp -> plugins = r_list_newf ( ( RListFree ) free )		619339	0		=			
ANR	619428	PtrMemberAccess	bp -> plugins		619339	0					
ANR	619429	Identifier	bp		619339	0					
ANR	619430	Identifier	plugins		619339	1					
ANR	619431	CallExpression	r_list_newf ( ( RListFree ) free )		619339	1					
ANR	619432	Callee	r_list_newf		619339	0					
ANR	619433	Identifier	r_list_newf		619339	0					
ANR	619434	ArgumentList	( RListFree ) free		619339	1					
ANR	619435	Argument	( RListFree ) free		619339	0					
ANR	619436	CastExpression	( RListFree ) free		619339	0					
ANR	619437	CastTarget	RListFree		619339	0					
ANR	619438	Identifier	free		619339	1					
ANR	619439	ExpressionStatement	bp -> nhwbps = 0	35:1:815:829	619339	24	True				
ANR	619440	AssignmentExpression	bp -> nhwbps = 0		619339	0		=			
ANR	619441	PtrMemberAccess	bp -> nhwbps		619339	0					
ANR	619442	Identifier	bp		619339	0					
ANR	619443	Identifier	nhwbps		619339	1					
ANR	619444	PrimaryExpression	0		619339	1					
ANR	619445	ForStatement	for ( i = 0 ; bp_static_plugins [ i ] ; i ++ )		619339	25					
ANR	619446	ForInit	i = 0 ;	36:6:837:842	619339	0	True				
ANR	619447	AssignmentExpression	i = 0		619339	0		=			
ANR	619448	Identifier	i		619339	0					
ANR	619449	PrimaryExpression	0		619339	1					
ANR	619450	Condition	bp_static_plugins [ i ]	36:13:844:863	619339	1	True				
ANR	619451	ArrayIndexing	bp_static_plugins [ i ]		619339	0					
ANR	619452	Identifier	bp_static_plugins		619339	0					
ANR	619453	Identifier	i		619339	1					
ANR	619454	PostIncDecOperationExpression	i ++	36:35:866:868	619339	2	True				
ANR	619455	Identifier	i		619339	0					
ANR	619456	IncDec	++		619339	1					
ANR	619457	CompoundStatement		16:40:469:469	619339	3					
ANR	619458	ExpressionStatement	static_plugin = R_NEW ( RBreakpointPlugin )	37:2:875:916	619339	0	True				
ANR	619459	AssignmentExpression	static_plugin = R_NEW ( RBreakpointPlugin )		619339	0		=			
ANR	619460	Identifier	static_plugin		619339	0					
ANR	619461	CallExpression	R_NEW ( RBreakpointPlugin )		619339	1					
ANR	619462	Callee	R_NEW		619339	0					
ANR	619463	Identifier	R_NEW		619339	0					
ANR	619464	ArgumentList	RBreakpointPlugin		619339	1					
ANR	619465	Argument	RBreakpointPlugin		619339	0					
ANR	619466	Identifier	RBreakpointPlugin		619339	0					
ANR	619467	ExpressionStatement	"memcpy ( static_plugin , bp_static_plugins [ i ] , sizeof ( RBreakpointPlugin ) )"	38:2:920:995	619339	1	True				
ANR	619468	CallExpression	"memcpy ( static_plugin , bp_static_plugins [ i ] , sizeof ( RBreakpointPlugin ) )"		619339	0					
ANR	619469	Callee	memcpy		619339	0					
ANR	619470	Identifier	memcpy		619339	0					
ANR	619471	ArgumentList	static_plugin		619339	1					
ANR	619472	Argument	static_plugin		619339	0					
ANR	619473	Identifier	static_plugin		619339	0					
ANR	619474	Argument	bp_static_plugins [ i ]		619339	1					
ANR	619475	ArrayIndexing	bp_static_plugins [ i ]		619339	0					
ANR	619476	Identifier	bp_static_plugins		619339	0					
ANR	619477	Identifier	i		619339	1					
ANR	619478	Argument	sizeof ( RBreakpointPlugin )		619339	2					
ANR	619479	SizeofExpression	sizeof ( RBreakpointPlugin )		619339	0					
ANR	619480	Sizeof	sizeof		619339	0					
ANR	619481	SizeofOperand	RBreakpointPlugin		619339	1					
ANR	619482	ExpressionStatement	"r_bp_plugin_add ( bp , static_plugin )"	40:2:999:1034	619339	2	True				
ANR	619483	CallExpression	"r_bp_plugin_add ( bp , static_plugin )"		619339	0					
ANR	619484	Callee	r_bp_plugin_add		619339	0					
ANR	619485	Identifier	r_bp_plugin_add		619339	0					
ANR	619486	ArgumentList	bp		619339	1					
ANR	619487	Argument	bp		619339	0					
ANR	619488	Identifier	bp		619339	0					
ANR	619489	Argument	static_plugin		619339	1					
ANR	619490	Identifier	static_plugin		619339	0					
ANR	619491	ExpressionStatement	"memset ( & bp -> iob , 0 , sizeof ( bp -> iob ) )"	42:1:1040:1078	619339	26	True				
ANR	619492	CallExpression	"memset ( & bp -> iob , 0 , sizeof ( bp -> iob ) )"		619339	0					
ANR	619493	Callee	memset		619339	0					
ANR	619494	Identifier	memset		619339	0					
ANR	619495	ArgumentList	& bp -> iob		619339	1					
ANR	619496	Argument	& bp -> iob		619339	0					
ANR	619497	UnaryOperationExpression	& bp -> iob		619339	0					
ANR	619498	UnaryOperator	&		619339	0					
ANR	619499	PtrMemberAccess	bp -> iob		619339	1					
ANR	619500	Identifier	bp		619339	0					
ANR	619501	Identifier	iob		619339	1					
ANR	619502	Argument	0		619339	1					
ANR	619503	PrimaryExpression	0		619339	0					
ANR	619504	Argument	sizeof ( bp -> iob )		619339	2					
ANR	619505	SizeofExpression	sizeof ( bp -> iob )		619339	0					
ANR	619506	Sizeof	sizeof		619339	0					
ANR	619507	PtrMemberAccess	bp -> iob		619339	1					
ANR	619508	Identifier	bp		619339	0					
ANR	619509	Identifier	iob		619339	1					
ANR	619510	ReturnStatement	return bp ;	43:1:1081:1090	619339	27	True				
ANR	619511	Identifier	bp		619339	0					
ANR	619512	ReturnType	R_API RBreakpoint *		619339	1					
ANR	619513	Identifier	r_bp_new		619339	2					
ANR	619514	ParameterList			619339	3					
ANR	619515	CFGEntryNode	ENTRY		619339		True				
ANR	619516	CFGExitNode	EXIT		619339		True				
ANR	619517	Symbol	r_bp_traptrace_new		619339						
ANR	619518	Symbol	static_plugin		619339						
ANR	619519	Symbol	& bp -> iob		619339						
ANR	619520	Symbol	bp -> bps		619339						
ANR	619521	Symbol	bp -> bps_idx_count		619339						
ANR	619522	Symbol	R_BP_CONT_NORMAL		619339						
ANR	619523	Symbol	bp		619339						
ANR	619524	Symbol	printf		619339						
ANR	619525	Symbol	RBreakpoint		619339						
ANR	619526	Symbol	* bp		619339						
ANR	619527	Symbol	* bp_static_plugins		619339						
ANR	619528	Symbol	r_bp_item_free		619339						
ANR	619529	Symbol	free		619339						
ANR	619530	Symbol	bp -> stepcont		619339						
ANR	619531	Symbol	bp -> iob		619339						
ANR	619532	Symbol	bp_static_plugins		619339						
ANR	619533	Symbol	NULL		619339						
ANR	619534	Symbol	r_list_newf		619339						
ANR	619535	Symbol	i		619339						
ANR	619536	Symbol	RBreakpointPlugin		619339						
ANR	619537	Symbol	bp -> traces		619339						
ANR	619538	Symbol	R_NEW0		619339						
ANR	619539	Symbol	* i		619339						
ANR	619540	Symbol	bp -> plugins		619339						
ANR	619541	Symbol	R_NEW		619339						
ANR	619542	Symbol	bp -> nhwbps		619339						
ANR	619543	Symbol	bp -> cb_printf		619339						
ANR	619544	Function	r_bp_free	46:0:1095:1269							
ANR	619545	FunctionDef	r_bp_free (RBreakpoint * bp)		619544	0					
ANR	619546	CompoundStatement		46:46:1141:1269	619544	0					
ANR	619547	ExpressionStatement	r_list_free ( bp -> bps )	47:1:1144:1165	619544	0	True				
ANR	619548	CallExpression	r_list_free ( bp -> bps )		619544	0					
ANR	619549	Callee	r_list_free		619544	0					
ANR	619550	Identifier	r_list_free		619544	0					
ANR	619551	ArgumentList	bp -> bps		619544	1					
ANR	619552	Argument	bp -> bps		619544	0					
ANR	619553	PtrMemberAccess	bp -> bps		619544	0					
ANR	619554	Identifier	bp		619544	0					
ANR	619555	Identifier	bps		619544	1					
ANR	619556	ExpressionStatement	r_list_free ( bp -> plugins )	48:1:1168:1193	619544	1	True				
ANR	619557	CallExpression	r_list_free ( bp -> plugins )		619544	0					
ANR	619558	Callee	r_list_free		619544	0					
ANR	619559	Identifier	r_list_free		619544	0					
ANR	619560	ArgumentList	bp -> plugins		619544	1					
ANR	619561	Argument	bp -> plugins		619544	0					
ANR	619562	PtrMemberAccess	bp -> plugins		619544	0					
ANR	619563	Identifier	bp		619544	0					
ANR	619564	Identifier	plugins		619544	1					
ANR	619565	ExpressionStatement	r_list_free ( bp -> traces )	49:1:1196:1220	619544	2	True				
ANR	619566	CallExpression	r_list_free ( bp -> traces )		619544	0					
ANR	619567	Callee	r_list_free		619544	0					
ANR	619568	Identifier	r_list_free		619544	0					
ANR	619569	ArgumentList	bp -> traces		619544	1					
ANR	619570	Argument	bp -> traces		619544	0					
ANR	619571	PtrMemberAccess	bp -> traces		619544	0					
ANR	619572	Identifier	bp		619544	0					
ANR	619573	Identifier	traces		619544	1					
ANR	619574	ExpressionStatement	free ( bp -> bps_idx )	50:1:1223:1241	619544	3	True				
ANR	619575	CallExpression	free ( bp -> bps_idx )		619544	0					
ANR	619576	Callee	free		619544	0					
ANR	619577	Identifier	free		619544	0					
ANR	619578	ArgumentList	bp -> bps_idx		619544	1					
ANR	619579	Argument	bp -> bps_idx		619544	0					
ANR	619580	PtrMemberAccess	bp -> bps_idx		619544	0					
ANR	619581	Identifier	bp		619544	0					
ANR	619582	Identifier	bps_idx		619544	1					
ANR	619583	ExpressionStatement	free ( bp )	51:1:1244:1253	619544	4	True				
ANR	619584	CallExpression	free ( bp )		619544	0					
ANR	619585	Callee	free		619544	0					
ANR	619586	Identifier	free		619544	0					
ANR	619587	ArgumentList	bp		619544	1					
ANR	619588	Argument	bp		619544	0					
ANR	619589	Identifier	bp		619544	0					
ANR	619590	ReturnStatement	return NULL ;	52:1:1256:1267	619544	5	True				
ANR	619591	Identifier	NULL		619544	0					
ANR	619592	ReturnType	R_API RBreakpoint *		619544	1					
ANR	619593	Identifier	r_bp_free		619544	2					
ANR	619594	ParameterList	RBreakpoint * bp		619544	3					
ANR	619595	Parameter	RBreakpoint * bp	46:29:1124:1138	619544	0	True				
ANR	619596	ParameterType	RBreakpoint *		619544	0					
ANR	619597	Identifier	bp		619544	1					
ANR	619598	CFGEntryNode	ENTRY		619544		True				
ANR	619599	CFGExitNode	EXIT		619544		True				
ANR	619600	Symbol	bp -> traces		619544						
ANR	619601	Symbol	NULL		619544						
ANR	619602	Symbol	* bp		619544						
ANR	619603	Symbol	bp -> bps		619544						
ANR	619604	Symbol	bp -> plugins		619544						
ANR	619605	Symbol	bp -> bps_idx		619544						
ANR	619606	Symbol	bp		619544						
ANR	619607	Function	r_bp_get_bytes	55:0:1272:2073							
ANR	619608	FunctionDef	"r_bp_get_bytes (RBreakpoint * bp , ut8 * buf , int len , int endian , int idx)"		619607	0					
ANR	619609	CompoundStatement		55:82:1354:2073	619607	0					
ANR	619610	IdentifierDeclStatement	int i ;	56:1:1357:1362	619607	0	True				
ANR	619611	IdentifierDecl	i		619607	0					
ANR	619612	IdentifierDeclType	int		619607	0					
ANR	619613	Identifier	i		619607	1					
ANR	619614	IdentifierDeclStatement	struct r_bp_arch_t * b ;	57:1:1365:1386	619607	1	True				
ANR	619615	IdentifierDecl	* b		619607	0					
ANR	619616	IdentifierDeclType	struct r_bp_arch_t *		619607	0					
ANR	619617	Identifier	b		619607	1					
ANR	619618	IfStatement	if ( bp -> cur )		619607	2					
ANR	619619	Condition	bp -> cur	58:5:1393:1399	619607	0	True				
ANR	619620	PtrMemberAccess	bp -> cur		619607	0					
ANR	619621	Identifier	bp		619607	0					
ANR	619622	Identifier	cur		619607	1					
ANR	619623	CompoundStatement		4:14:47:47	619607	1					
ANR	619624	Label	repeat :	60:0:1439:1445	619607	0	True				
ANR	619625	Identifier	repeat		619607	0					
ANR	619626	ForStatement	for ( i = 0 ; i < bp -> cur -> nbps ; i ++ )		619607	1					
ANR	619627	ForInit	i = 0 ;	61:7:1454:1459	619607	0	True				
ANR	619628	AssignmentExpression	i = 0		619607	0		=			
ANR	619629	Identifier	i		619607	0					
ANR	619630	PrimaryExpression	0		619607	1					
ANR	619631	Condition	i < bp -> cur -> nbps	61:14:1461:1477	619607	1	True				
ANR	619632	RelationalExpression	i < bp -> cur -> nbps		619607	0		<			
ANR	619633	Identifier	i		619607	0					
ANR	619634	PtrMemberAccess	bp -> cur -> nbps		619607	1					
ANR	619635	PtrMemberAccess	bp -> cur		619607	0					
ANR	619636	Identifier	bp		619607	0					
ANR	619637	Identifier	cur		619607	1					
ANR	619638	Identifier	nbps		619607	1					
ANR	619639	PostIncDecOperationExpression	i ++	61:33:1480:1482	619607	2	True				
ANR	619640	Identifier	i		619607	0					
ANR	619641	IncDec	++		619607	1					
ANR	619642	CompoundStatement		7:38:130:130	619607	3					
ANR	619643	ExpressionStatement	b = & bp -> cur -> bps [ i ]	62:3:1490:1510	619607	0	True				
ANR	619644	AssignmentExpression	b = & bp -> cur -> bps [ i ]		619607	0		=			
ANR	619645	Identifier	b		619607	0					
ANR	619646	UnaryOperationExpression	& bp -> cur -> bps [ i ]		619607	1					
ANR	619647	UnaryOperator	&		619607	0					
ANR	619648	ArrayIndexing	bp -> cur -> bps [ i ]		619607	1					
ANR	619649	PtrMemberAccess	bp -> cur -> bps		619607	0					
ANR	619650	PtrMemberAccess	bp -> cur		619607	0					
ANR	619651	Identifier	bp		619607	0					
ANR	619652	Identifier	cur		619607	1					
ANR	619653	Identifier	bps		619607	1					
ANR	619654	Identifier	i		619607	1					
ANR	619655	IfStatement	if ( bp -> cur -> bps [ i ] . bits )		619607	1					
ANR	619656	Condition	bp -> cur -> bps [ i ] . bits	63:7:1519:1538	619607	0	True				
ANR	619657	MemberAccess	bp -> cur -> bps [ i ] . bits		619607	0					
ANR	619658	ArrayIndexing	bp -> cur -> bps [ i ]		619607	0					
ANR	619659	PtrMemberAccess	bp -> cur -> bps		619607	0					
ANR	619660	PtrMemberAccess	bp -> cur		619607	0					
ANR	619661	Identifier	bp		619607	0					
ANR	619662	Identifier	cur		619607	1					
ANR	619663	Identifier	bps		619607	1					
ANR	619664	Identifier	i		619607	1					
ANR	619665	Identifier	bits		619607	1					
ANR	619666	CompoundStatement		9:29:186:186	619607	1					
ANR	619667	IfStatement	if ( bp -> bits != bp -> cur -> bps [ i ] . bits )		619607	0					
ANR	619668	Condition	bp -> bits != bp -> cur -> bps [ i ] . bits	64:8:1551:1582	619607	0	True				
ANR	619669	EqualityExpression	bp -> bits != bp -> cur -> bps [ i ] . bits		619607	0		!=			
ANR	619670	PtrMemberAccess	bp -> bits		619607	0					
ANR	619671	Identifier	bp		619607	0					
ANR	619672	Identifier	bits		619607	1					
ANR	619673	MemberAccess	bp -> cur -> bps [ i ] . bits		619607	1					
ANR	619674	ArrayIndexing	bp -> cur -> bps [ i ]		619607	0					
ANR	619675	PtrMemberAccess	bp -> cur -> bps		619607	0					
ANR	619676	PtrMemberAccess	bp -> cur		619607	0					
ANR	619677	Identifier	bp		619607	0					
ANR	619678	Identifier	cur		619607	1					
ANR	619679	Identifier	bps		619607	1					
ANR	619680	Identifier	i		619607	1					
ANR	619681	Identifier	bits		619607	1					
ANR	619682	CompoundStatement		10:42:230:230	619607	1					
ANR	619683	ContinueStatement	continue ;	65:5:1592:1600	619607	0	True				
ANR	619684	IfStatement	if ( bp -> cur -> bps [ i ] . length == len && bp -> cur -> bps [ i ] . endian == endian )		619607	2					
ANR	619685	Condition	bp -> cur -> bps [ i ] . length == len && bp -> cur -> bps [ i ] . endian == endian	68:7:1620:1684	619607	0	True				
ANR	619686	AndExpression	bp -> cur -> bps [ i ] . length == len && bp -> cur -> bps [ i ] . endian == endian		619607	0		&&			
ANR	619687	EqualityExpression	bp -> cur -> bps [ i ] . length == len		619607	0		==			
ANR	619688	MemberAccess	bp -> cur -> bps [ i ] . length		619607	0					
ANR	619689	ArrayIndexing	bp -> cur -> bps [ i ]		619607	0					
ANR	619690	PtrMemberAccess	bp -> cur -> bps		619607	0					
ANR	619691	PtrMemberAccess	bp -> cur		619607	0					
ANR	619692	Identifier	bp		619607	0					
ANR	619693	Identifier	cur		619607	1					
ANR	619694	Identifier	bps		619607	1					
ANR	619695	Identifier	i		619607	1					
ANR	619696	Identifier	length		619607	1					
ANR	619697	Identifier	len		619607	1					
ANR	619698	EqualityExpression	bp -> cur -> bps [ i ] . endian == endian		619607	1		==			
ANR	619699	MemberAccess	bp -> cur -> bps [ i ] . endian		619607	0					
ANR	619700	ArrayIndexing	bp -> cur -> bps [ i ]		619607	0					
ANR	619701	PtrMemberAccess	bp -> cur -> bps		619607	0					
ANR	619702	PtrMemberAccess	bp -> cur		619607	0					
ANR	619703	Identifier	bp		619607	0					
ANR	619704	Identifier	cur		619607	1					
ANR	619705	Identifier	bps		619607	1					
ANR	619706	Identifier	i		619607	1					
ANR	619707	Identifier	endian		619607	1					
ANR	619708	Identifier	endian		619607	1					
ANR	619709	CompoundStatement		14:74:332:332	619607	1					
ANR	619710	ExpressionStatement	"memcpy ( buf , b -> bytes , b -> length )"	69:4:1693:1726	619607	0	True				
ANR	619711	CallExpression	"memcpy ( buf , b -> bytes , b -> length )"		619607	0					
ANR	619712	Callee	memcpy		619607	0					
ANR	619713	Identifier	memcpy		619607	0					
ANR	619714	ArgumentList	buf		619607	1					
ANR	619715	Argument	buf		619607	0					
ANR	619716	Identifier	buf		619607	0					
ANR	619717	Argument	b -> bytes		619607	1					
ANR	619718	PtrMemberAccess	b -> bytes		619607	0					
ANR	619719	Identifier	b		619607	0					
ANR	619720	Identifier	bytes		619607	1					
ANR	619721	Argument	b -> length		619607	2					
ANR	619722	PtrMemberAccess	b -> length		619607	0					
ANR	619723	Identifier	b		619607	0					
ANR	619724	Identifier	length		619607	1					
ANR	619725	ReturnStatement	return b -> length ;	70:4:1732:1748	619607	1	True				
ANR	619726	PtrMemberAccess	b -> length		619607	0					
ANR	619727	Identifier	b		619607	0					
ANR	619728	Identifier	length		619607	1					
ANR	619729	IfStatement	if ( len != 4 )		619607	2					
ANR	619730	Condition	len != 4	73:6:1765:1772	619607	0	True				
ANR	619731	EqualityExpression	len != 4		619607	0		!=			
ANR	619732	Identifier	len		619607	0					
ANR	619733	PrimaryExpression	4		619607	1					
ANR	619734	CompoundStatement		19:16:420:420	619607	1					
ANR	619735	ExpressionStatement	len = 4	74:3:1780:1787	619607	0	True				
ANR	619736	AssignmentExpression	len = 4		619607	0		=			
ANR	619737	Identifier	len		619607	0					
ANR	619738	PrimaryExpression	4		619607	1					
ANR	619739	GotoStatement	goto repeat ;	75:3:1792:1803	619607	1	True				
ANR	619740	Identifier	repeat		619607	0					
ANR	619741	ExpressionStatement	b = & bp -> cur -> bps [ 0 ]	78:2:1862:1882	619607	3	True				
ANR	619742	AssignmentExpression	b = & bp -> cur -> bps [ 0 ]		619607	0		=			
ANR	619743	Identifier	b		619607	0					
ANR	619744	UnaryOperationExpression	& bp -> cur -> bps [ 0 ]		619607	1					
ANR	619745	UnaryOperator	&		619607	0					
ANR	619746	ArrayIndexing	bp -> cur -> bps [ 0 ]		619607	1					
ANR	619747	PtrMemberAccess	bp -> cur -> bps		619607	0					
ANR	619748	PtrMemberAccess	bp -> cur		619607	0					
ANR	619749	Identifier	bp		619607	0					
ANR	619750	Identifier	cur		619607	1					
ANR	619751	Identifier	bps		619607	1					
ANR	619752	PrimaryExpression	0		619607	1					
ANR	619753	IfStatement	if ( len % b -> length )		619607	4					
ANR	619754	Condition	len % b -> length	79:6:1890:1904	619607	0	True				
ANR	619755	MultiplicativeExpression	len % b -> length		619607	0		%			
ANR	619756	Identifier	len		619607	0					
ANR	619757	PtrMemberAccess	b -> length		619607	1					
ANR	619758	Identifier	b		619607	0					
ANR	619759	Identifier	length		619607	1					
ANR	619760	CompoundStatement		25:23:552:552	619607	1					
ANR	619761	ExpressionStatement	"eprintf ( ""No matching bpsize\\n"" )"	80:3:1912:1944	619607	0	True				
ANR	619762	CallExpression	"eprintf ( ""No matching bpsize\\n"" )"		619607	0					
ANR	619763	Callee	eprintf		619607	0					
ANR	619764	Identifier	eprintf		619607	0					
ANR	619765	ArgumentList	"""No matching bpsize\\n"""		619607	1					
ANR	619766	Argument	"""No matching bpsize\\n"""		619607	0					
ANR	619767	PrimaryExpression	"""No matching bpsize\\n"""		619607	0					
ANR	619768	ReturnStatement	return 0 ;	81:3:1949:1957	619607	1	True				
ANR	619769	PrimaryExpression	0		619607	0					
ANR	619770	ForStatement	for ( i = 0 ; i < len ; i ++ )		619607	5					
ANR	619771	ForInit	i = 0 ;	83:7:1970:1975	619607	0	True				
ANR	619772	AssignmentExpression	i = 0		619607	0		=			
ANR	619773	Identifier	i		619607	0					
ANR	619774	PrimaryExpression	0		619607	1					
ANR	619775	Condition	i < len	83:14:1977:1983	619607	1	True				
ANR	619776	RelationalExpression	i < len		619607	0		<			
ANR	619777	Identifier	i		619607	0					
ANR	619778	Identifier	len		619607	1					
ANR	619779	PostIncDecOperationExpression	i ++	83:23:1986:1988	619607	2	True				
ANR	619780	Identifier	i		619607	0					
ANR	619781	IncDec	++		619607	1					
ANR	619782	CompoundStatement		29:28:636:636	619607	3					
ANR	619783	ExpressionStatement	"memcpy ( buf + i , b -> bytes , b -> length )"	84:3:1996:2033	619607	0	True				
ANR	619784	CallExpression	"memcpy ( buf + i , b -> bytes , b -> length )"		619607	0					
ANR	619785	Callee	memcpy		619607	0					
ANR	619786	Identifier	memcpy		619607	0					
ANR	619787	ArgumentList	buf + i		619607	1					
ANR	619788	Argument	buf + i		619607	0					
ANR	619789	AdditiveExpression	buf + i		619607	0		+			
ANR	619790	Identifier	buf		619607	0					
ANR	619791	Identifier	i		619607	1					
ANR	619792	Argument	b -> bytes		619607	1					
ANR	619793	PtrMemberAccess	b -> bytes		619607	0					
ANR	619794	Identifier	b		619607	0					
ANR	619795	Identifier	bytes		619607	1					
ANR	619796	Argument	b -> length		619607	2					
ANR	619797	PtrMemberAccess	b -> length		619607	0					
ANR	619798	Identifier	b		619607	0					
ANR	619799	Identifier	length		619607	1					
ANR	619800	ReturnStatement	return b -> length ;	86:2:2041:2057	619607	6	True				
ANR	619801	PtrMemberAccess	b -> length		619607	0					
ANR	619802	Identifier	b		619607	0					
ANR	619803	Identifier	length		619607	1					
ANR	619804	ReturnStatement	return 0 ;	88:1:2063:2071	619607	3	True				
ANR	619805	PrimaryExpression	0		619607	0					
ANR	619806	ReturnType	R_API int		619607	1					
ANR	619807	Identifier	r_bp_get_bytes		619607	2					
ANR	619808	ParameterList	"RBreakpoint * bp , ut8 * buf , int len , int endian , int idx"		619607	3					
ANR	619809	Parameter	RBreakpoint * bp	55:25:1297:1311	619607	0	True				
ANR	619810	ParameterType	RBreakpoint *		619607	0					
ANR	619811	Identifier	bp		619607	1					
ANR	619812	Parameter	ut8 * buf	55:42:1314:1321	619607	1	True				
ANR	619813	ParameterType	ut8 *		619607	0					
ANR	619814	Identifier	buf		619607	1					
ANR	619815	Parameter	int len	55:52:1324:1330	619607	2	True				
ANR	619816	ParameterType	int		619607	0					
ANR	619817	Identifier	len		619607	1					
ANR	619818	Parameter	int endian	55:61:1333:1342	619607	3	True				
ANR	619819	ParameterType	int		619607	0					
ANR	619820	Identifier	endian		619607	1					
ANR	619821	Parameter	int idx	55:73:1345:1351	619607	4	True				
ANR	619822	ParameterType	int		619607	0					
ANR	619823	Identifier	idx		619607	1					
ANR	619824	CFGEntryNode	ENTRY		619607		True				
ANR	619825	CFGExitNode	EXIT		619607		True				
ANR	619826	Symbol	b -> bytes		619607						
ANR	619827	Symbol	b		619607						
ANR	619828	Symbol	bp -> cur		619607						
ANR	619829	Symbol	bp -> cur -> bps		619607						
ANR	619830	Symbol	bp -> cur -> bps [ i ] . endian		619607						
ANR	619831	Symbol	bp -> cur -> nbps		619607						
ANR	619832	Symbol	i		619607						
ANR	619833	Symbol	* * * bp		619607						
ANR	619834	Symbol	bp -> bits		619607						
ANR	619835	Symbol	* b		619607						
ANR	619836	Symbol	endian		619607						
ANR	619837	Symbol	bp		619607						
ANR	619838	Symbol	buf		619607						
ANR	619839	Symbol	* i		619607						
ANR	619840	Symbol	len		619607						
ANR	619841	Symbol	* bp -> cur -> bps		619607						
ANR	619842	Symbol	bp -> cur -> bps [ i ] . bits		619607						
ANR	619843	Symbol	bp -> cur -> bps [ i ] . length		619607						
ANR	619844	Symbol	* bp		619607						
ANR	619845	Symbol	b -> length		619607						
ANR	619846	Symbol	* * bp		619607						
ANR	619847	Symbol	* bp -> cur		619607						
ANR	619848	Symbol	idx		619607						
ANR	619849	Symbol	* * bp -> cur		619607						
ANR	619850	Function	r_bp_get_at	91:0:2076:2275							
ANR	619851	FunctionDef	"r_bp_get_at (RBreakpoint * bp , ut64 addr)"		619850	0					
ANR	619852	CompoundStatement		91:63:2139:2275	619850	0					
ANR	619853	IdentifierDeclStatement	RListIter * iter ;	92:1:2142:2157	619850	0	True				
ANR	619854	IdentifierDecl	* iter		619850	0					
ANR	619855	IdentifierDeclType	RListIter *		619850	0					
ANR	619856	Identifier	iter		619850	1					
ANR	619857	IdentifierDeclStatement	RBreakpointItem * b ;	93:1:2160:2178	619850	1	True				
ANR	619858	IdentifierDecl	* b		619850	0					
ANR	619859	IdentifierDeclType	RBreakpointItem *		619850	0					
ANR	619860	Identifier	b		619850	1					
ANR	619861	Statement	r_list_foreach	94:1:2181:2194	619850	2	True				
ANR	619862	Statement	(	94:15:2195:2195	619850	3	True				
ANR	619863	Statement	bp	94:16:2196:2197	619850	4	True				
ANR	619864	Statement	->	94:18:2198:2199	619850	5	True				
ANR	619865	Statement	bps	94:20:2200:2202	619850	6	True				
ANR	619866	Statement	","	94:23:2203:2203	619850	7	True				
ANR	619867	Statement	iter	94:25:2205:2208	619850	8	True				
ANR	619868	Statement	","	94:29:2209:2209	619850	9	True				
ANR	619869	Statement	b	94:31:2211:2211	619850	10	True				
ANR	619870	Statement	)	94:32:2212:2212	619850	11	True				
ANR	619871	CompoundStatement		4:34:74:74	619850	12					
ANR	619872	IfStatement	if ( b -> addr == addr )		619850	0					
ANR	619873	Condition	b -> addr == addr	95:6:2222:2236	619850	0	True				
ANR	619874	EqualityExpression	b -> addr == addr		619850	0		==			
ANR	619875	PtrMemberAccess	b -> addr		619850	0					
ANR	619876	Identifier	b		619850	0					
ANR	619877	Identifier	addr		619850	1					
ANR	619878	Identifier	addr		619850	1					
ANR	619879	CompoundStatement		5:23:99:99	619850	1					
ANR	619880	ReturnStatement	return b ;	96:3:2244:2252	619850	0	True				
ANR	619881	Identifier	b		619850	0					
ANR	619882	ReturnStatement	return NULL ;	99:1:2262:2273	619850	13	True				
ANR	619883	Identifier	NULL		619850	0					
ANR	619884	ReturnType	R_API RBreakpointItem *		619850	1					
ANR	619885	Identifier	r_bp_get_at		619850	2					
ANR	619886	ParameterList	"RBreakpoint * bp , ut64 addr"		619850	3					
ANR	619887	Parameter	RBreakpoint * bp	91:35:2111:2125	619850	0	True				
ANR	619888	ParameterType	RBreakpoint *		619850	0					
ANR	619889	Identifier	bp		619850	1					
ANR	619890	Parameter	ut64 addr	91:52:2128:2136	619850	1	True				
ANR	619891	ParameterType	ut64		619850	0					
ANR	619892	Identifier	addr		619850	1					
ANR	619893	CFGEntryNode	ENTRY		619850		True				
ANR	619894	CFGExitNode	EXIT		619850		True				
ANR	619895	Symbol	b		619850						
ANR	619896	Symbol	NULL		619850						
ANR	619897	Symbol	iter		619850						
ANR	619898	Symbol	addr		619850						
ANR	619899	Symbol	* b		619850						
ANR	619900	Symbol	bp		619850						
ANR	619901	Symbol	b -> addr		619850						
ANR	619902	Function	inRange	102:0:2278:2395							
ANR	619903	FunctionDef	"inRange (RBreakpointItem * b , ut64 addr)"		619902	0					
ANR	619904	CompoundStatement		102:58:2336:2395	619902	0					
ANR	619905	ReturnStatement	return ( addr >= b -> addr && addr < ( b -> addr + b -> size ) ) ;	103:1:2339:2393	619902	0	True				
ANR	619906	AndExpression	addr >= b -> addr && addr < ( b -> addr + b -> size )		619902	0		&&			
ANR	619907	RelationalExpression	addr >= b -> addr		619902	0		>=			
ANR	619908	Identifier	addr		619902	0					
ANR	619909	PtrMemberAccess	b -> addr		619902	1					
ANR	619910	Identifier	b		619902	0					
ANR	619911	Identifier	addr		619902	1					
ANR	619912	RelationalExpression	addr < ( b -> addr + b -> size )		619902	1		<			
ANR	619913	Identifier	addr		619902	0					
ANR	619914	AdditiveExpression	b -> addr + b -> size		619902	1		+			
ANR	619915	PtrMemberAccess	b -> addr		619902	0					
ANR	619916	Identifier	b		619902	0					
ANR	619917	Identifier	addr		619902	1					
ANR	619918	PtrMemberAccess	b -> size		619902	1					
ANR	619919	Identifier	b		619902	0					
ANR	619920	Identifier	size		619902	1					
ANR	619921	ReturnType	static inline bool		619902	1					
ANR	619922	Identifier	inRange		619902	2					
ANR	619923	ParameterList	"RBreakpointItem * b , ut64 addr"		619902	3					
ANR	619924	Parameter	RBreakpointItem * b	102:27:2305:2322	619902	0	True				
ANR	619925	ParameterType	RBreakpointItem *		619902	0					
ANR	619926	Identifier	b		619902	1					
ANR	619927	Parameter	ut64 addr	102:47:2325:2333	619902	1	True				
ANR	619928	ParameterType	ut64		619902	0					
ANR	619929	Identifier	addr		619902	1					
ANR	619930	CFGEntryNode	ENTRY		619902		True				
ANR	619931	CFGExitNode	EXIT		619902		True				
ANR	619932	Symbol	b		619902						
ANR	619933	Symbol	b -> size		619902						
ANR	619934	Symbol	addr		619902						
ANR	619935	Symbol	* b		619902						
ANR	619936	Symbol	b -> addr		619902						
ANR	619937	Function	matchProt	106:0:2398:2497							
ANR	619938	FunctionDef	"matchProt (RBreakpointItem * b , int perm)"		619937	0					
ANR	619939	CompoundStatement		106:59:2457:2497	619937	0					
ANR	619940	ReturnStatement	return ( ! perm || ( perm && b -> perm ) ) ;	107:1:2460:2495	619937	0	True				
ANR	619941	OrExpression	! perm || ( perm && b -> perm )		619937	0		||			
ANR	619942	UnaryOperationExpression	! perm		619937	0					
ANR	619943	UnaryOperator	!		619937	0					
ANR	619944	Identifier	perm		619937	1					
ANR	619945	AndExpression	perm && b -> perm		619937	1		&&			
ANR	619946	Identifier	perm		619937	0					
ANR	619947	PtrMemberAccess	b -> perm		619937	1					
ANR	619948	Identifier	b		619937	0					
ANR	619949	Identifier	perm		619937	1					
ANR	619950	ReturnType	static inline bool		619937	1					
ANR	619951	Identifier	matchProt		619937	2					
ANR	619952	ParameterList	"RBreakpointItem * b , int perm"		619937	3					
ANR	619953	Parameter	RBreakpointItem * b	106:29:2427:2444	619937	0	True				
ANR	619954	ParameterType	RBreakpointItem *		619937	0					
ANR	619955	Identifier	b		619937	1					
ANR	619956	Parameter	int perm	106:49:2447:2454	619937	1	True				
ANR	619957	ParameterType	int		619937	0					
ANR	619958	Identifier	perm		619937	1					
ANR	619959	CFGEntryNode	ENTRY		619937		True				
ANR	619960	CFGExitNode	EXIT		619937		True				
ANR	619961	Symbol	b		619937						
ANR	619962	Symbol	perm		619937						
ANR	619963	Symbol	b -> perm		619937						
ANR	619964	Symbol	* b		619937						
ANR	619965	Function	r_bp_get_in	110:0:2500:2895							
ANR	619966	FunctionDef	"r_bp_get_in (RBreakpoint * bp , ut64 addr , int perm)"		619965	0					
ANR	619967	CompoundStatement		110:73:2573:2895	619965	0					
ANR	619968	IdentifierDeclStatement	RBreakpointItem * b ;	111:1:2576:2594	619965	0	True				
ANR	619969	IdentifierDecl	* b		619965	0					
ANR	619970	IdentifierDeclType	RBreakpointItem *		619965	0					
ANR	619971	Identifier	b		619965	1					
ANR	619972	IdentifierDeclStatement	RListIter * iter ;	112:1:2597:2612	619965	1	True				
ANR	619973	IdentifierDecl	* iter		619965	0					
ANR	619974	IdentifierDeclType	RListIter *		619965	0					
ANR	619975	Identifier	iter		619965	1					
ANR	619976	Statement	r_list_foreach	113:1:2615:2628	619965	2	True				
ANR	619977	Statement	(	113:16:2630:2630	619965	3	True				
ANR	619978	Statement	bp	113:17:2631:2632	619965	4	True				
ANR	619979	Statement	->	113:19:2633:2634	619965	5	True				
ANR	619980	Statement	bps	113:21:2635:2637	619965	6	True				
ANR	619981	Statement	","	113:24:2638:2638	619965	7	True				
ANR	619982	Statement	iter	113:26:2640:2643	619965	8	True				
ANR	619983	Statement	","	113:30:2644:2644	619965	9	True				
ANR	619984	Statement	b	113:32:2646:2646	619965	10	True				
ANR	619985	Statement	)	113:33:2647:2647	619965	11	True				
ANR	619986	CompoundStatement		4:35:75:75	619965	12					
ANR	619987	IfStatement	"if ( inRange ( b , addr ) && matchProt ( b , perm ) )"		619965	0					
ANR	619988	Condition	"inRange ( b , addr ) && matchProt ( b , perm )"	116:6:2817:2856	619965	0	True				
ANR	619989	AndExpression	"inRange ( b , addr ) && matchProt ( b , perm )"		619965	0		&&			
ANR	619990	CallExpression	"inRange ( b , addr )"		619965	0					
ANR	619991	Callee	inRange		619965	0					
ANR	619992	Identifier	inRange		619965	0					
ANR	619993	ArgumentList	b		619965	1					
ANR	619994	Argument	b		619965	0					
ANR	619995	Identifier	b		619965	0					
ANR	619996	Argument	addr		619965	1					
ANR	619997	Identifier	addr		619965	0					
ANR	619998	CallExpression	"matchProt ( b , perm )"		619965	1					
ANR	619999	Callee	matchProt		619965	0					
ANR	620000	Identifier	matchProt		619965	0					
ANR	620001	ArgumentList	b		619965	1					
ANR	620002	Argument	b		619965	0					
ANR	620003	Identifier	b		619965	0					
ANR	620004	Argument	perm		619965	1					
ANR	620005	Identifier	perm		619965	0					
ANR	620006	CompoundStatement		7:48:285:285	619965	1					
ANR	620007	ReturnStatement	return b ;	117:3:2864:2872	619965	0	True				
ANR	620008	Identifier	b		619965	0					
ANR	620009	ReturnStatement	return NULL ;	120:1:2882:2893	619965	13	True				
ANR	620010	Identifier	NULL		619965	0					
ANR	620011	ReturnType	R_API RBreakpointItem *		619965	1					
ANR	620012	Identifier	r_bp_get_in		619965	2					
ANR	620013	ParameterList	"RBreakpoint * bp , ut64 addr , int perm"		619965	3					
ANR	620014	Parameter	RBreakpoint * bp	110:35:2535:2549	619965	0	True				
ANR	620015	ParameterType	RBreakpoint *		619965	0					
ANR	620016	Identifier	bp		619965	1					
ANR	620017	Parameter	ut64 addr	110:52:2552:2560	619965	1	True				
ANR	620018	ParameterType	ut64		619965	0					
ANR	620019	Identifier	addr		619965	1					
ANR	620020	Parameter	int perm	110:63:2563:2570	619965	2	True				
ANR	620021	ParameterType	int		619965	0					
ANR	620022	Identifier	perm		619965	1					
ANR	620023	CFGEntryNode	ENTRY		619965		True				
ANR	620024	CFGExitNode	EXIT		619965		True				
ANR	620025	Symbol	b		619965						
ANR	620026	Symbol	NULL		619965						
ANR	620027	Symbol	perm		619965						
ANR	620028	Symbol	iter		619965						
ANR	620029	Symbol	matchProt		619965						
ANR	620030	Symbol	addr		619965						
ANR	620031	Symbol	inRange		619965						
ANR	620032	Symbol	bp		619965						
ANR	620033	Function	r_bp_enable	123:0:2898:3116							
ANR	620034	FunctionDef	"r_bp_enable (RBreakpoint * bp , ut64 addr , int set , int count)"		620033	0					
ANR	620035	CompoundStatement		123:83:2981:3116	620033	0					
ANR	620036	IdentifierDeclStatement	"RBreakpointItem * b = r_bp_get_in ( bp , addr , 0 ) ;"	124:1:2984:3030	620033	0	True				
ANR	620037	IdentifierDecl	"* b = r_bp_get_in ( bp , addr , 0 )"		620033	0					
ANR	620038	IdentifierDeclType	RBreakpointItem *		620033	0					
ANR	620039	Identifier	b		620033	1					
ANR	620040	AssignmentExpression	"* b = r_bp_get_in ( bp , addr , 0 )"		620033	2		=			
ANR	620041	Identifier	b		620033	0					
ANR	620042	CallExpression	"r_bp_get_in ( bp , addr , 0 )"		620033	1					
ANR	620043	Callee	r_bp_get_in		620033	0					
ANR	620044	Identifier	r_bp_get_in		620033	0					
ANR	620045	ArgumentList	bp		620033	1					
ANR	620046	Argument	bp		620033	0					
ANR	620047	Identifier	bp		620033	0					
ANR	620048	Argument	addr		620033	1					
ANR	620049	Identifier	addr		620033	0					
ANR	620050	Argument	0		620033	2					
ANR	620051	PrimaryExpression	0		620033	0					
ANR	620052	IfStatement	if ( b )		620033	1					
ANR	620053	Condition	b	125:5:3037:3037	620033	0	True				
ANR	620054	Identifier	b		620033	0					
ANR	620055	CompoundStatement		3:8:58:58	620033	1					
ANR	620056	ExpressionStatement	b -> enabled = set	126:2:3044:3060	620033	0	True				
ANR	620057	AssignmentExpression	b -> enabled = set		620033	0		=			
ANR	620058	PtrMemberAccess	b -> enabled		620033	0					
ANR	620059	Identifier	b		620033	0					
ANR	620060	Identifier	enabled		620033	1					
ANR	620061	Identifier	set		620033	1					
ANR	620062	ExpressionStatement	b -> togglehits = count	127:2:3064:3085	620033	1	True				
ANR	620063	AssignmentExpression	b -> togglehits = count		620033	0		=			
ANR	620064	PtrMemberAccess	b -> togglehits		620033	0					
ANR	620065	Identifier	b		620033	0					
ANR	620066	Identifier	togglehits		620033	1					
ANR	620067	Identifier	count		620033	1					
ANR	620068	ReturnStatement	return b ;	128:2:3089:3097	620033	2	True				
ANR	620069	Identifier	b		620033	0					
ANR	620070	ReturnStatement	return NULL ;	130:1:3103:3114	620033	2	True				
ANR	620071	Identifier	NULL		620033	0					
ANR	620072	ReturnType	R_API RBreakpointItem *		620033	1					
ANR	620073	Identifier	r_bp_enable		620033	2					
ANR	620074	ParameterList	"RBreakpoint * bp , ut64 addr , int set , int count"		620033	3					
ANR	620075	Parameter	RBreakpoint * bp	123:35:2933:2947	620033	0	True				
ANR	620076	ParameterType	RBreakpoint *		620033	0					
ANR	620077	Identifier	bp		620033	1					
ANR	620078	Parameter	ut64 addr	123:52:2950:2958	620033	1	True				
ANR	620079	ParameterType	ut64		620033	0					
ANR	620080	Identifier	addr		620033	1					
ANR	620081	Parameter	int set	123:63:2961:2967	620033	2	True				
ANR	620082	ParameterType	int		620033	0					
ANR	620083	Identifier	set		620033	1					
ANR	620084	Parameter	int count	123:72:2970:2978	620033	3	True				
ANR	620085	ParameterType	int		620033	0					
ANR	620086	Identifier	count		620033	1					
ANR	620087	CFGEntryNode	ENTRY		620033		True				
ANR	620088	CFGExitNode	EXIT		620033		True				
ANR	620089	Symbol	b		620033						
ANR	620090	Symbol	set		620033						
ANR	620091	Symbol	b -> togglehits		620033						
ANR	620092	Symbol	NULL		620033						
ANR	620093	Symbol	r_bp_get_in		620033						
ANR	620094	Symbol	count		620033						
ANR	620095	Symbol	b -> enabled		620033						
ANR	620096	Symbol	addr		620033						
ANR	620097	Symbol	* b		620033						
ANR	620098	Symbol	bp		620033						
ANR	620099	Function	r_bp_enable_all	133:0:3119:3286							
ANR	620100	FunctionDef	"r_bp_enable_all (RBreakpoint * bp , int set)"		620099	0					
ANR	620101	CompoundStatement		133:52:3171:3286	620099	0					
ANR	620102	IdentifierDeclStatement	RListIter * iter ;	134:1:3174:3189	620099	0	True				
ANR	620103	IdentifierDecl	* iter		620099	0					
ANR	620104	IdentifierDeclType	RListIter *		620099	0					
ANR	620105	Identifier	iter		620099	1					
ANR	620106	IdentifierDeclStatement	RBreakpointItem * b ;	135:1:3192:3210	620099	1	True				
ANR	620107	IdentifierDecl	* b		620099	0					
ANR	620108	IdentifierDeclType	RBreakpointItem *		620099	0					
ANR	620109	Identifier	b		620099	1					
ANR	620110	Statement	r_list_foreach	136:1:3213:3226	620099	2	True				
ANR	620111	Statement	(	136:16:3228:3228	620099	3	True				
ANR	620112	Statement	bp	136:17:3229:3230	620099	4	True				
ANR	620113	Statement	->	136:19:3231:3232	620099	5	True				
ANR	620114	Statement	bps	136:21:3233:3235	620099	6	True				
ANR	620115	Statement	","	136:24:3236:3236	620099	7	True				
ANR	620116	Statement	iter	136:26:3238:3241	620099	8	True				
ANR	620117	Statement	","	136:30:3242:3242	620099	9	True				
ANR	620118	Statement	b	136:32:3244:3244	620099	10	True				
ANR	620119	Statement	)	136:33:3245:3245	620099	11	True				
ANR	620120	CompoundStatement		4:35:75:75	620099	12					
ANR	620121	ExpressionStatement	b -> enabled = set	137:2:3251:3267	620099	0	True				
ANR	620122	AssignmentExpression	b -> enabled = set		620099	0		=			
ANR	620123	PtrMemberAccess	b -> enabled		620099	0					
ANR	620124	Identifier	b		620099	0					
ANR	620125	Identifier	enabled		620099	1					
ANR	620126	Identifier	set		620099	1					
ANR	620127	ReturnStatement	return true ;	139:1:3273:3284	620099	13	True				
ANR	620128	Identifier	true		620099	0					
ANR	620129	ReturnType	R_API int		620099	1					
ANR	620130	Identifier	r_bp_enable_all		620099	2					
ANR	620131	ParameterList	"RBreakpoint * bp , int set"		620099	3					
ANR	620132	Parameter	RBreakpoint * bp	133:26:3145:3159	620099	0	True				
ANR	620133	ParameterType	RBreakpoint *		620099	0					
ANR	620134	Identifier	bp		620099	1					
ANR	620135	Parameter	int set	133:43:3162:3168	620099	1	True				
ANR	620136	ParameterType	int		620099	0					
ANR	620137	Identifier	set		620099	1					
ANR	620138	CFGEntryNode	ENTRY		620099		True				
ANR	620139	CFGExitNode	EXIT		620099		True				
ANR	620140	Symbol	b		620099						
ANR	620141	Symbol	set		620099						
ANR	620142	Symbol	b -> enabled		620099						
ANR	620143	Symbol	true		620099						
ANR	620144	Symbol	iter		620099						
ANR	620145	Symbol	* b		620099						
ANR	620146	Symbol	bp		620099						
ANR	620147	Function	r_bp_stepy_continuation	142:0:3289:3384							
ANR	620148	FunctionDef	r_bp_stepy_continuation (RBreakpoint * bp)		620147	0					
ANR	620149	CompoundStatement		142:51:3340:3384	620147	0					
ANR	620150	ReturnStatement	return bp -> stepcont ;	144:1:3363:3382	620147	0	True				
ANR	620151	PtrMemberAccess	bp -> stepcont		620147	0					
ANR	620152	Identifier	bp		620147	0					
ANR	620153	Identifier	stepcont		620147	1					
ANR	620154	ReturnType	R_API int		620147	1					
ANR	620155	Identifier	r_bp_stepy_continuation		620147	2					
ANR	620156	ParameterList	RBreakpoint * bp		620147	3					
ANR	620157	Parameter	RBreakpoint * bp	142:34:3323:3337	620147	0	True				
ANR	620158	ParameterType	RBreakpoint *		620147	0					
ANR	620159	Identifier	bp		620147	1					
ANR	620160	CFGEntryNode	ENTRY		620147		True				
ANR	620161	CFGExitNode	EXIT		620147		True				
ANR	620162	Symbol	* bp		620147						
ANR	620163	Symbol	bp		620147						
ANR	620164	Symbol	bp -> stepcont		620147						
ANR	620165	Function	unlinkBreakpoint	147:0:3387:3602							
ANR	620166	FunctionDef	"unlinkBreakpoint (RBreakpoint * bp , RBreakpointItem * b)"		620165	0					
ANR	620167	CompoundStatement		147:66:3453:3602	620165	0					
ANR	620168	IdentifierDeclStatement	int i ;	148:1:3456:3461	620165	0	True				
ANR	620169	IdentifierDecl	i		620165	0					
ANR	620170	IdentifierDeclType	int		620165	0					
ANR	620171	Identifier	i		620165	1					
ANR	620172	ForStatement	for ( i = 0 ; i < bp -> bps_idx_count ; i ++ )		620165	1					
ANR	620173	ForInit	i = 0 ;	149:6:3469:3474	620165	0	True				
ANR	620174	AssignmentExpression	i = 0		620165	0		=			
ANR	620175	Identifier	i		620165	0					
ANR	620176	PrimaryExpression	0		620165	1					
ANR	620177	Condition	i < bp -> bps_idx_count	149:13:3476:3496	620165	1	True				
ANR	620178	RelationalExpression	i < bp -> bps_idx_count		620165	0		<			
ANR	620179	Identifier	i		620165	0					
ANR	620180	PtrMemberAccess	bp -> bps_idx_count		620165	1					
ANR	620181	Identifier	bp		620165	0					
ANR	620182	Identifier	bps_idx_count		620165	1					
ANR	620183	PostIncDecOperationExpression	i ++	149:36:3499:3501	620165	2	True				
ANR	620184	Identifier	i		620165	0					
ANR	620185	IncDec	++		620165	1					
ANR	620186	CompoundStatement		3:41:50:50	620165	3					
ANR	620187	IfStatement	if ( bp -> bps_idx [ i ] == b )		620165	0					
ANR	620188	Condition	bp -> bps_idx [ i ] == b	150:6:3512:3530	620165	0	True				
ANR	620189	EqualityExpression	bp -> bps_idx [ i ] == b		620165	0		==			
ANR	620190	ArrayIndexing	bp -> bps_idx [ i ]		620165	0					
ANR	620191	PtrMemberAccess	bp -> bps_idx		620165	0					
ANR	620192	Identifier	bp		620165	0					
ANR	620193	Identifier	bps_idx		620165	1					
ANR	620194	Identifier	i		620165	1					
ANR	620195	Identifier	b		620165	1					
ANR	620196	CompoundStatement		4:27:79:79	620165	1					
ANR	620197	ExpressionStatement	bp -> bps_idx [ i ] = NULL	151:3:3538:3559	620165	0	True				
ANR	620198	AssignmentExpression	bp -> bps_idx [ i ] = NULL		620165	0		=			
ANR	620199	ArrayIndexing	bp -> bps_idx [ i ]		620165	0					
ANR	620200	PtrMemberAccess	bp -> bps_idx		620165	0					
ANR	620201	Identifier	bp		620165	0					
ANR	620202	Identifier	bps_idx		620165	1					
ANR	620203	Identifier	i		620165	1					
ANR	620204	Identifier	NULL		620165	1					
ANR	620205	ExpressionStatement	"r_list_delete_data ( bp -> bps , b )"	154:1:3569:3600	620165	2	True				
ANR	620206	CallExpression	"r_list_delete_data ( bp -> bps , b )"		620165	0					
ANR	620207	Callee	r_list_delete_data		620165	0					
ANR	620208	Identifier	r_list_delete_data		620165	0					
ANR	620209	ArgumentList	bp -> bps		620165	1					
ANR	620210	Argument	bp -> bps		620165	0					
ANR	620211	PtrMemberAccess	bp -> bps		620165	0					
ANR	620212	Identifier	bp		620165	0					
ANR	620213	Identifier	bps		620165	1					
ANR	620214	Argument	b		620165	1					
ANR	620215	Identifier	b		620165	0					
ANR	620216	ReturnType	static void		620165	1					
ANR	620217	Identifier	unlinkBreakpoint		620165	2					
ANR	620218	ParameterList	"RBreakpoint * bp , RBreakpointItem * b"		620165	3					
ANR	620219	Parameter	RBreakpoint * bp	147:29:3416:3430	620165	0	True				
ANR	620220	ParameterType	RBreakpoint *		620165	0					
ANR	620221	Identifier	bp		620165	1					
ANR	620222	Parameter	RBreakpointItem * b	147:46:3433:3450	620165	1	True				
ANR	620223	ParameterType	RBreakpointItem *		620165	0					
ANR	620224	Identifier	b		620165	1					
ANR	620225	CFGEntryNode	ENTRY		620165		True				
ANR	620226	CFGExitNode	EXIT		620165		True				
ANR	620227	Symbol	b		620165						
ANR	620228	Symbol	* i		620165						
ANR	620229	Symbol	* bp -> bps_idx		620165						
ANR	620230	Symbol	NULL		620165						
ANR	620231	Symbol	* bp		620165						
ANR	620232	Symbol	* * bp		620165						
ANR	620233	Symbol	i		620165						
ANR	620234	Symbol	bp -> bps		620165						
ANR	620235	Symbol	bp -> bps_idx_count		620165						
ANR	620236	Symbol	bp -> bps_idx		620165						
ANR	620237	Symbol	bp		620165						
ANR	620238	Function	r_bp_add	158:0:3651:4734							
ANR	620239	FunctionDef	"r_bp_add (RBreakpoint * bp , const ut8 * obytes , ut64 addr , int size , int hw , int perm)"		620238	0					
ANR	620240	CompoundStatement		158:108:3759:4734	620238	0					
ANR	620241	IdentifierDeclStatement	int ret ;	159:1:3762:3769	620238	0	True				
ANR	620242	IdentifierDecl	ret		620238	0					
ANR	620243	IdentifierDeclType	int		620238	0					
ANR	620244	Identifier	ret		620238	1					
ANR	620245	IdentifierDeclStatement	RBreakpointItem * b ;	160:1:3772:3790	620238	1	True				
ANR	620246	IdentifierDecl	* b		620238	0					
ANR	620247	IdentifierDeclType	RBreakpointItem *		620238	0					
ANR	620248	Identifier	b		620238	1					
ANR	620249	IfStatement	if ( addr == UT64_MAX || size < 1 )		620238	2					
ANR	620250	Condition	addr == UT64_MAX || size < 1	161:5:3797:3824	620238	0	True				
ANR	620251	OrExpression	addr == UT64_MAX || size < 1		620238	0		||			
ANR	620252	EqualityExpression	addr == UT64_MAX		620238	0		==			
ANR	620253	Identifier	addr		620238	0					
ANR	620254	Identifier	UT64_MAX		620238	1					
ANR	620255	RelationalExpression	size < 1		620238	1		<			
ANR	620256	Identifier	size		620238	0					
ANR	620257	PrimaryExpression	1		620238	1					
ANR	620258	CompoundStatement		4:35:67:67	620238	1					
ANR	620259	ReturnStatement	return NULL ;	162:2:3831:3842	620238	0	True				
ANR	620260	Identifier	NULL		620238	0					
ANR	620261	IfStatement	"if ( r_bp_get_in ( bp , addr , perm ) )"		620238	3					
ANR	620262	Condition	"r_bp_get_in ( bp , addr , perm )"	164:5:3852:3879	620238	0	True				
ANR	620263	CallExpression	"r_bp_get_in ( bp , addr , perm )"		620238	0					
ANR	620264	Callee	r_bp_get_in		620238	0					
ANR	620265	Identifier	r_bp_get_in		620238	0					
ANR	620266	ArgumentList	bp		620238	1					
ANR	620267	Argument	bp		620238	0					
ANR	620268	Identifier	bp		620238	0					
ANR	620269	Argument	addr		620238	1					
ANR	620270	Identifier	addr		620238	0					
ANR	620271	Argument	perm		620238	2					
ANR	620272	Identifier	perm		620238	0					
ANR	620273	CompoundStatement		7:35:122:122	620238	1					
ANR	620274	ExpressionStatement	"eprintf ( ""Breakpoint already set at this address.\\n"" )"	165:2:3886:3939	620238	0	True				
ANR	620275	CallExpression	"eprintf ( ""Breakpoint already set at this address.\\n"" )"		620238	0					
ANR	620276	Callee	eprintf		620238	0					
ANR	620277	Identifier	eprintf		620238	0					
ANR	620278	ArgumentList	"""Breakpoint already set at this address.\\n"""		620238	1					
ANR	620279	Argument	"""Breakpoint already set at this address.\\n"""		620238	0					
ANR	620280	PrimaryExpression	"""Breakpoint already set at this address.\\n"""		620238	0					
ANR	620281	ReturnStatement	return NULL ;	166:2:3943:3954	620238	1	True				
ANR	620282	Identifier	NULL		620238	0					
ANR	620283	ExpressionStatement	b = r_bp_item_new ( bp )	168:1:3960:3982	620238	4	True				
ANR	620284	AssignmentExpression	b = r_bp_item_new ( bp )		620238	0		=			
ANR	620285	Identifier	b		620238	0					
ANR	620286	CallExpression	r_bp_item_new ( bp )		620238	1					
ANR	620287	Callee	r_bp_item_new		620238	0					
ANR	620288	Identifier	r_bp_item_new		620238	0					
ANR	620289	ArgumentList	bp		620238	1					
ANR	620290	Argument	bp		620238	0					
ANR	620291	Identifier	bp		620238	0					
ANR	620292	ExpressionStatement	b -> addr = addr + bp -> delta	169:1:3985:4011	620238	5	True				
ANR	620293	AssignmentExpression	b -> addr = addr + bp -> delta		620238	0		=			
ANR	620294	PtrMemberAccess	b -> addr		620238	0					
ANR	620295	Identifier	b		620238	0					
ANR	620296	Identifier	addr		620238	1					
ANR	620297	AdditiveExpression	addr + bp -> delta		620238	1		+			
ANR	620298	Identifier	addr		620238	0					
ANR	620299	PtrMemberAccess	bp -> delta		620238	1					
ANR	620300	Identifier	bp		620238	0					
ANR	620301	Identifier	delta		620238	1					
ANR	620302	ExpressionStatement	b -> size = size	170:1:4014:4028	620238	6	True				
ANR	620303	AssignmentExpression	b -> size = size		620238	0		=			
ANR	620304	PtrMemberAccess	b -> size		620238	0					
ANR	620305	Identifier	b		620238	0					
ANR	620306	Identifier	size		620238	1					
ANR	620307	Identifier	size		620238	1					
ANR	620308	ExpressionStatement	b -> enabled = true	171:1:4031:4048	620238	7	True				
ANR	620309	AssignmentExpression	b -> enabled = true		620238	0		=			
ANR	620310	PtrMemberAccess	b -> enabled		620238	0					
ANR	620311	Identifier	b		620238	0					
ANR	620312	Identifier	enabled		620238	1					
ANR	620313	Identifier	true		620238	1					
ANR	620314	ExpressionStatement	b -> perm = perm	172:1:4051:4065	620238	8	True				
ANR	620315	AssignmentExpression	b -> perm = perm		620238	0		=			
ANR	620316	PtrMemberAccess	b -> perm		620238	0					
ANR	620317	Identifier	b		620238	0					
ANR	620318	Identifier	perm		620238	1					
ANR	620319	Identifier	perm		620238	1					
ANR	620320	ExpressionStatement	b -> hw = hw	173:1:4068:4078	620238	9	True				
ANR	620321	AssignmentExpression	b -> hw = hw		620238	0		=			
ANR	620322	PtrMemberAccess	b -> hw		620238	0					
ANR	620323	Identifier	b		620238	0					
ANR	620324	Identifier	hw		620238	1					
ANR	620325	Identifier	hw		620238	1					
ANR	620326	IfStatement	if ( ! hw )		620238	10					
ANR	620327	Condition	! hw	175:5:4149:4151	620238	0	True				
ANR	620328	UnaryOperationExpression	! hw		620238	0					
ANR	620329	UnaryOperator	!		620238	0					
ANR	620330	Identifier	hw		620238	1					
ANR	620331	CompoundStatement		18:10:394:394	620238	1					
ANR	620332	ExpressionStatement	"b -> bbytes = calloc ( size + 16 , 1 )"	176:2:4158:4191	620238	0	True				
ANR	620333	AssignmentExpression	"b -> bbytes = calloc ( size + 16 , 1 )"		620238	0		=			
ANR	620334	PtrMemberAccess	b -> bbytes		620238	0					
ANR	620335	Identifier	b		620238	0					
ANR	620336	Identifier	bbytes		620238	1					
ANR	620337	CallExpression	"calloc ( size + 16 , 1 )"		620238	1					
ANR	620338	Callee	calloc		620238	0					
ANR	620339	Identifier	calloc		620238	0					
ANR	620340	ArgumentList	size + 16		620238	1					
ANR	620341	Argument	size + 16		620238	0					
ANR	620342	AdditiveExpression	size + 16		620238	0		+			
ANR	620343	Identifier	size		620238	0					
ANR	620344	PrimaryExpression	16		620238	1					
ANR	620345	Argument	1		620238	1					
ANR	620346	PrimaryExpression	1		620238	0					
ANR	620347	IfStatement	if ( ! b -> bbytes )		620238	1					
ANR	620348	Condition	! b -> bbytes	177:6:4199:4208	620238	0	True				
ANR	620349	UnaryOperationExpression	! b -> bbytes		620238	0					
ANR	620350	UnaryOperator	!		620238	0					
ANR	620351	PtrMemberAccess	b -> bbytes		620238	1					
ANR	620352	Identifier	b		620238	0					
ANR	620353	Identifier	bbytes		620238	1					
ANR	620354	CompoundStatement		20:18:451:451	620238	1					
ANR	620355	ReturnStatement	return NULL ;	178:3:4216:4227	620238	0	True				
ANR	620356	Identifier	NULL		620238	0					
ANR	620357	IfStatement	if ( obytes )		620238	2					
ANR	620358	Condition	obytes	180:6:4239:4244	620238	0	True				
ANR	620359	Identifier	obytes		620238	0					
ANR	620360	CompoundStatement		23:14:487:487	620238	1					
ANR	620361	ExpressionStatement	b -> obytes = malloc ( size )	181:3:4252:4277	620238	0	True				
ANR	620362	AssignmentExpression	b -> obytes = malloc ( size )		620238	0		=			
ANR	620363	PtrMemberAccess	b -> obytes		620238	0					
ANR	620364	Identifier	b		620238	0					
ANR	620365	Identifier	obytes		620238	1					
ANR	620366	CallExpression	malloc ( size )		620238	1					
ANR	620367	Callee	malloc		620238	0					
ANR	620368	Identifier	malloc		620238	0					
ANR	620369	ArgumentList	size		620238	1					
ANR	620370	Argument	size		620238	0					
ANR	620371	Identifier	size		620238	0					
ANR	620372	IfStatement	if ( ! b -> obytes )		620238	1					
ANR	620373	Condition	! b -> obytes	182:7:4286:4295	620238	0	True				
ANR	620374	UnaryOperationExpression	! b -> obytes		620238	0					
ANR	620375	UnaryOperator	!		620238	0					
ANR	620376	PtrMemberAccess	b -> obytes		620238	1					
ANR	620377	Identifier	b		620238	0					
ANR	620378	Identifier	obytes		620238	1					
ANR	620379	CompoundStatement		25:19:538:538	620238	1					
ANR	620380	ExpressionStatement	free ( b -> bbytes )	183:4:4304:4320	620238	0	True				
ANR	620381	CallExpression	free ( b -> bbytes )		620238	0					
ANR	620382	Callee	free		620238	0					
ANR	620383	Identifier	free		620238	0					
ANR	620384	ArgumentList	b -> bbytes		620238	1					
ANR	620385	Argument	b -> bbytes		620238	0					
ANR	620386	PtrMemberAccess	b -> bbytes		620238	0					
ANR	620387	Identifier	b		620238	0					
ANR	620388	Identifier	bbytes		620238	1					
ANR	620389	ReturnStatement	return NULL ;	184:4:4326:4337	620238	1	True				
ANR	620390	Identifier	NULL		620238	0					
ANR	620391	ExpressionStatement	"memcpy ( b -> obytes , obytes , size )"	186:3:4347:4379	620238	2	True				
ANR	620392	CallExpression	"memcpy ( b -> obytes , obytes , size )"		620238	0					
ANR	620393	Callee	memcpy		620238	0					
ANR	620394	Identifier	memcpy		620238	0					
ANR	620395	ArgumentList	b -> obytes		620238	1					
ANR	620396	Argument	b -> obytes		620238	0					
ANR	620397	PtrMemberAccess	b -> obytes		620238	0					
ANR	620398	Identifier	b		620238	0					
ANR	620399	Identifier	obytes		620238	1					
ANR	620400	Argument	obytes		620238	1					
ANR	620401	Identifier	obytes		620238	0					
ANR	620402	Argument	size		620238	2					
ANR	620403	Identifier	size		620238	0					
ANR	620404	ElseStatement	else		620238	0					
ANR	620405	CompoundStatement		30:9:630:630	620238	0					
ANR	620406	ExpressionStatement	b -> obytes = NULL	188:3:4395:4411	620238	0	True				
ANR	620407	AssignmentExpression	b -> obytes = NULL		620238	0		=			
ANR	620408	PtrMemberAccess	b -> obytes		620238	0					
ANR	620409	Identifier	b		620238	0					
ANR	620410	Identifier	obytes		620238	1					
ANR	620411	Identifier	NULL		620238	1					
ANR	620412	ExpressionStatement	"ret = r_bp_get_bytes ( bp , b -> bbytes , size , bp -> endian , 0 )"	191:2:4457:4514	620238	3	True				
ANR	620413	AssignmentExpression	"ret = r_bp_get_bytes ( bp , b -> bbytes , size , bp -> endian , 0 )"		620238	0		=			
ANR	620414	Identifier	ret		620238	0					
ANR	620415	CallExpression	"r_bp_get_bytes ( bp , b -> bbytes , size , bp -> endian , 0 )"		620238	1					
ANR	620416	Callee	r_bp_get_bytes		620238	0					
ANR	620417	Identifier	r_bp_get_bytes		620238	0					
ANR	620418	ArgumentList	bp		620238	1					
ANR	620419	Argument	bp		620238	0					
ANR	620420	Identifier	bp		620238	0					
ANR	620421	Argument	b -> bbytes		620238	1					
ANR	620422	PtrMemberAccess	b -> bbytes		620238	0					
ANR	620423	Identifier	b		620238	0					
ANR	620424	Identifier	bbytes		620238	1					
ANR	620425	Argument	size		620238	2					
ANR	620426	Identifier	size		620238	0					
ANR	620427	Argument	bp -> endian		620238	3					
ANR	620428	PtrMemberAccess	bp -> endian		620238	0					
ANR	620429	Identifier	bp		620238	0					
ANR	620430	Identifier	endian		620238	1					
ANR	620431	Argument	0		620238	4					
ANR	620432	PrimaryExpression	0		620238	0					
ANR	620433	IfStatement	if ( ret != size )		620238	4					
ANR	620434	Condition	ret != size	192:6:4522:4532	620238	0	True				
ANR	620435	EqualityExpression	ret != size		620238	0		!=			
ANR	620436	Identifier	ret		620238	0					
ANR	620437	Identifier	size		620238	1					
ANR	620438	CompoundStatement		35:19:775:775	620238	1					
ANR	620439	ExpressionStatement	"eprintf ( ""Cannot get breakpoint bytes. No architecture selected?\\n"" )"	193:3:4540:4608	620238	0	True				
ANR	620440	CallExpression	"eprintf ( ""Cannot get breakpoint bytes. No architecture selected?\\n"" )"		620238	0					
ANR	620441	Callee	eprintf		620238	0					
ANR	620442	Identifier	eprintf		620238	0					
ANR	620443	ArgumentList	"""Cannot get breakpoint bytes. No architecture selected?\\n"""		620238	1					
ANR	620444	Argument	"""Cannot get breakpoint bytes. No architecture selected?\\n"""		620238	0					
ANR	620445	PrimaryExpression	"""Cannot get breakpoint bytes. No architecture selected?\\n"""		620238	0					
ANR	620446	ExpressionStatement	"unlinkBreakpoint ( bp , b )"	194:3:4613:4637	620238	1	True				
ANR	620447	CallExpression	"unlinkBreakpoint ( bp , b )"		620238	0					
ANR	620448	Callee	unlinkBreakpoint		620238	0					
ANR	620449	Identifier	unlinkBreakpoint		620238	0					
ANR	620450	ArgumentList	bp		620238	1					
ANR	620451	Argument	bp		620238	0					
ANR	620452	Identifier	bp		620238	0					
ANR	620453	Argument	b		620238	1					
ANR	620454	Identifier	b		620238	0					
ANR	620455	ReturnStatement	return NULL ;	195:3:4642:4653	620238	2	True				
ANR	620456	Identifier	NULL		620238	0					
ANR	620457	ExpressionStatement	b -> recoil = ret	197:2:4661:4676	620238	5	True				
ANR	620458	AssignmentExpression	b -> recoil = ret		620238	0		=			
ANR	620459	PtrMemberAccess	b -> recoil		620238	0					
ANR	620460	Identifier	b		620238	0					
ANR	620461	Identifier	recoil		620238	1					
ANR	620462	Identifier	ret		620238	1					
ANR	620463	ExpressionStatement	bp -> nbps ++	199:1:4682:4692	620238	11	True				
ANR	620464	PostIncDecOperationExpression	bp -> nbps ++		620238	0					
ANR	620465	PtrMemberAccess	bp -> nbps		620238	0					
ANR	620466	Identifier	bp		620238	0					
ANR	620467	Identifier	nbps		620238	1					
ANR	620468	IncDec	++		620238	1					
ANR	620469	ExpressionStatement	"r_list_append ( bp -> bps , b )"	200:1:4695:4721	620238	12	True				
ANR	620470	CallExpression	"r_list_append ( bp -> bps , b )"		620238	0					
ANR	620471	Callee	r_list_append		620238	0					
ANR	620472	Identifier	r_list_append		620238	0					
ANR	620473	ArgumentList	bp -> bps		620238	1					
ANR	620474	Argument	bp -> bps		620238	0					
ANR	620475	PtrMemberAccess	bp -> bps		620238	0					
ANR	620476	Identifier	bp		620238	0					
ANR	620477	Identifier	bps		620238	1					
ANR	620478	Argument	b		620238	1					
ANR	620479	Identifier	b		620238	0					
ANR	620480	ReturnStatement	return b ;	201:1:4724:4732	620238	13	True				
ANR	620481	Identifier	b		620238	0					
ANR	620482	ReturnType	static RBreakpointItem *		620238	1					
ANR	620483	Identifier	r_bp_add		620238	2					
ANR	620484	ParameterList	"RBreakpoint * bp , const ut8 * obytes , ut64 addr , int size , int hw , int perm"		620238	3					
ANR	620485	Parameter	RBreakpoint * bp	158:33:3684:3698	620238	0	True				
ANR	620486	ParameterType	RBreakpoint *		620238	0					
ANR	620487	Identifier	bp		620238	1					
ANR	620488	Parameter	const ut8 * obytes	158:50:3701:3717	620238	1	True				
ANR	620489	ParameterType	const ut8 *		620238	0					
ANR	620490	Identifier	obytes		620238	1					
ANR	620491	Parameter	ut64 addr	158:69:3720:3728	620238	2	True				
ANR	620492	ParameterType	ut64		620238	0					
ANR	620493	Identifier	addr		620238	1					
ANR	620494	Parameter	int size	158:80:3731:3738	620238	3	True				
ANR	620495	ParameterType	int		620238	0					
ANR	620496	Identifier	size		620238	1					
ANR	620497	Parameter	int hw	158:90:3741:3746	620238	4	True				
ANR	620498	ParameterType	int		620238	0					
ANR	620499	Identifier	hw		620238	1					
ANR	620500	Parameter	int perm	158:98:3749:3756	620238	5	True				
ANR	620501	ParameterType	int		620238	0					
ANR	620502	Identifier	perm		620238	1					
ANR	620503	CFGEntryNode	ENTRY		620238		True				
ANR	620504	CFGExitNode	EXIT		620238		True				
ANR	620505	Symbol	perm		620238						
ANR	620506	Symbol	bp -> delta		620238						
ANR	620507	Symbol	b -> size		620238						
ANR	620508	Symbol	bp -> bps		620238						
ANR	620509	Symbol	calloc		620238						
ANR	620510	Symbol	b -> recoil		620238						
ANR	620511	Symbol	bp		620238						
ANR	620512	Symbol	hw		620238						
ANR	620513	Symbol	b -> addr		620238						
ANR	620514	Symbol	b -> perm		620238						
ANR	620515	Symbol	* bp		620238						
ANR	620516	Symbol	b -> enabled		620238						
ANR	620517	Symbol	bp -> nbps		620238						
ANR	620518	Symbol	obytes		620238						
ANR	620519	Symbol	addr		620238						
ANR	620520	Symbol	UT64_MAX		620238						
ANR	620521	Symbol	r_bp_get_bytes		620238						
ANR	620522	Symbol	ret		620238						
ANR	620523	Symbol	malloc		620238						
ANR	620524	Symbol	b		620238						
ANR	620525	Symbol	NULL		620238						
ANR	620526	Symbol	* b		620238						
ANR	620527	Symbol	b -> bbytes		620238						
ANR	620528	Symbol	size		620238						
ANR	620529	Symbol	r_bp_item_new		620238						
ANR	620530	Symbol	b -> hw		620238						
ANR	620531	Symbol	bp -> endian		620238						
ANR	620532	Symbol	r_bp_get_in		620238						
ANR	620533	Symbol	b -> obytes		620238						
ANR	620534	Symbol	true		620238						
ANR	620535	Function	r_bp_add_fault	204:0:4737:4836							
ANR	620536	FunctionDef	"r_bp_add_fault (RBreakpoint * bp , ut64 addr , int size , int perm)"		620535	0					
ANR	620537	CompoundStatement		204:73:4810:4836	620535	0					
ANR	620538	ReturnStatement	return false ;	206:1:4822:4834	620535	0	True				
ANR	620539	Identifier	false		620535	0					
ANR	620540	ReturnType	R_API int		620535	1					
ANR	620541	Identifier	r_bp_add_fault		620535	2					
ANR	620542	ParameterList	"RBreakpoint * bp , ut64 addr , int size , int perm"		620535	3					
ANR	620543	Parameter	RBreakpoint * bp	204:25:4762:4776	620535	0	True				
ANR	620544	ParameterType	RBreakpoint *		620535	0					
ANR	620545	Identifier	bp		620535	1					
ANR	620546	Parameter	ut64 addr	204:42:4779:4787	620535	1	True				
ANR	620547	ParameterType	ut64		620535	0					
ANR	620548	Identifier	addr		620535	1					
ANR	620549	Parameter	int size	204:53:4790:4797	620535	2	True				
ANR	620550	ParameterType	int		620535	0					
ANR	620551	Identifier	size		620535	1					
ANR	620552	Parameter	int perm	204:63:4800:4807	620535	3	True				
ANR	620553	ParameterType	int		620535	0					
ANR	620554	Identifier	perm		620535	1					
ANR	620555	CFGEntryNode	ENTRY		620535		True				
ANR	620556	CFGExitNode	EXIT		620535		True				
ANR	620557	Symbol	size		620535						
ANR	620558	Symbol	perm		620535						
ANR	620559	Symbol	false		620535						
ANR	620560	Symbol	addr		620535						
ANR	620561	Symbol	bp		620535						
ANR	620562	Function	r_bp_add_sw	209:0:4839:5242							
ANR	620563	FunctionDef	"r_bp_add_sw (RBreakpoint * bp , ut64 addr , int size , int perm)"		620562	0					
ANR	620564	CompoundStatement		209:83:4922:5242	620562	0					
ANR	620565	IdentifierDeclStatement	RBreakpointItem * item ;	210:1:4925:4946	620562	0	True				
ANR	620566	IdentifierDecl	* item		620562	0					
ANR	620567	IdentifierDeclType	RBreakpointItem *		620562	0					
ANR	620568	Identifier	item		620562	1					
ANR	620569	IdentifierDeclStatement	ut8 * bytes ;	211:1:4949:4959	620562	1	True				
ANR	620570	IdentifierDecl	* bytes		620562	0					
ANR	620571	IdentifierDeclType	ut8 *		620562	0					
ANR	620572	Identifier	bytes		620562	1					
ANR	620573	IfStatement	if ( size < 1 )		620562	2					
ANR	620574	Condition	size < 1	212:5:4966:4973	620562	0	True				
ANR	620575	RelationalExpression	size < 1		620562	0		<			
ANR	620576	Identifier	size		620562	0					
ANR	620577	PrimaryExpression	1		620562	1					
ANR	620578	CompoundStatement		4:15:53:53	620562	1					
ANR	620579	ExpressionStatement	size = 1	213:2:4980:4988	620562	0	True				
ANR	620580	AssignmentExpression	size = 1		620562	0		=			
ANR	620581	Identifier	size		620562	0					
ANR	620582	PrimaryExpression	1		620562	1					
ANR	620583	IfStatement	"if ( ! ( bytes = calloc ( 1 , size ) ) )"		620562	3					
ANR	620584	Condition	"! ( bytes = calloc ( 1 , size ) )"	215:5:4998:5024	620562	0	True				
ANR	620585	UnaryOperationExpression	"! ( bytes = calloc ( 1 , size ) )"		620562	0					
ANR	620586	UnaryOperator	!		620562	0					
ANR	620587	AssignmentExpression	"bytes = calloc ( 1 , size )"		620562	1		=			
ANR	620588	Identifier	bytes		620562	0					
ANR	620589	CallExpression	"calloc ( 1 , size )"		620562	1					
ANR	620590	Callee	calloc		620562	0					
ANR	620591	Identifier	calloc		620562	0					
ANR	620592	ArgumentList	1		620562	1					
ANR	620593	Argument	1		620562	0					
ANR	620594	PrimaryExpression	1		620562	0					
ANR	620595	Argument	size		620562	1					
ANR	620596	Identifier	size		620562	0					
ANR	620597	CompoundStatement		7:34:104:104	620562	1					
ANR	620598	ReturnStatement	return NULL ;	216:2:5031:5042	620562	0	True				
ANR	620599	Identifier	NULL		620562	0					
ANR	620600	ExpressionStatement	"memset ( bytes , 0 , size )"	218:1:5048:5071	620562	4	True				
ANR	620601	CallExpression	"memset ( bytes , 0 , size )"		620562	0					
ANR	620602	Callee	memset		620562	0					
ANR	620603	Identifier	memset		620562	0					
ANR	620604	ArgumentList	bytes		620562	1					
ANR	620605	Argument	bytes		620562	0					
ANR	620606	Identifier	bytes		620562	0					
ANR	620607	Argument	0		620562	1					
ANR	620608	PrimaryExpression	0		620562	0					
ANR	620609	Argument	size		620562	2					
ANR	620610	Identifier	size		620562	0					
ANR	620611	IfStatement	if ( bp -> iob . read_at )		620562	5					
ANR	620612	Condition	bp -> iob . read_at	219:5:5078:5092	620562	0	True				
ANR	620613	MemberAccess	bp -> iob . read_at		620562	0					
ANR	620614	PtrMemberAccess	bp -> iob		620562	0					
ANR	620615	Identifier	bp		620562	0					
ANR	620616	Identifier	iob		620562	1					
ANR	620617	Identifier	read_at		620562	1					
ANR	620618	CompoundStatement		11:22:172:172	620562	1					
ANR	620619	ExpressionStatement	"bp -> iob . read_at ( bp -> iob . io , addr , bytes , size )"	220:2:5099:5146	620562	0	True				
ANR	620620	CallExpression	"bp -> iob . read_at ( bp -> iob . io , addr , bytes , size )"		620562	0					
ANR	620621	Callee	bp -> iob . read_at		620562	0					
ANR	620622	MemberAccess	bp -> iob . read_at		620562	0					
ANR	620623	PtrMemberAccess	bp -> iob		620562	0					
ANR	620624	Identifier	bp		620562	0					
ANR	620625	Identifier	iob		620562	1					
ANR	620626	Identifier	read_at		620562	1					
ANR	620627	ArgumentList	bp -> iob . io		620562	1					
ANR	620628	Argument	bp -> iob . io		620562	0					
ANR	620629	MemberAccess	bp -> iob . io		620562	0					
ANR	620630	PtrMemberAccess	bp -> iob		620562	0					
ANR	620631	Identifier	bp		620562	0					
ANR	620632	Identifier	iob		620562	1					
ANR	620633	Identifier	io		620562	1					
ANR	620634	Argument	addr		620562	1					
ANR	620635	Identifier	addr		620562	0					
ANR	620636	Argument	bytes		620562	2					
ANR	620637	Identifier	bytes		620562	0					
ANR	620638	Argument	size		620562	3					
ANR	620639	Identifier	size		620562	0					
ANR	620640	ExpressionStatement	"item = r_bp_add ( bp , bytes , addr , size , R_BP_TYPE_SW , perm )"	222:1:5152:5211	620562	6	True				
ANR	620641	AssignmentExpression	"item = r_bp_add ( bp , bytes , addr , size , R_BP_TYPE_SW , perm )"		620562	0		=			
ANR	620642	Identifier	item		620562	0					
ANR	620643	CallExpression	"r_bp_add ( bp , bytes , addr , size , R_BP_TYPE_SW , perm )"		620562	1					
ANR	620644	Callee	r_bp_add		620562	0					
ANR	620645	Identifier	r_bp_add		620562	0					
ANR	620646	ArgumentList	bp		620562	1					
ANR	620647	Argument	bp		620562	0					
ANR	620648	Identifier	bp		620562	0					
ANR	620649	Argument	bytes		620562	1					
ANR	620650	Identifier	bytes		620562	0					
ANR	620651	Argument	addr		620562	2					
ANR	620652	Identifier	addr		620562	0					
ANR	620653	Argument	size		620562	3					
ANR	620654	Identifier	size		620562	0					
ANR	620655	Argument	R_BP_TYPE_SW		620562	4					
ANR	620656	Identifier	R_BP_TYPE_SW		620562	0					
ANR	620657	Argument	perm		620562	5					
ANR	620658	Identifier	perm		620562	0					
ANR	620659	ExpressionStatement	free ( bytes )	223:1:5214:5226	620562	7	True				
ANR	620660	CallExpression	free ( bytes )		620562	0					
ANR	620661	Callee	free		620562	0					
ANR	620662	Identifier	free		620562	0					
ANR	620663	ArgumentList	bytes		620562	1					
ANR	620664	Argument	bytes		620562	0					
ANR	620665	Identifier	bytes		620562	0					
ANR	620666	ReturnStatement	return item ;	224:1:5229:5240	620562	8	True				
ANR	620667	Identifier	item		620562	0					
ANR	620668	ReturnType	R_API RBreakpointItem *		620562	1					
ANR	620669	Identifier	r_bp_add_sw		620562	2					
ANR	620670	ParameterList	"RBreakpoint * bp , ut64 addr , int size , int perm"		620562	3					
ANR	620671	Parameter	RBreakpoint * bp	209:35:4874:4888	620562	0	True				
ANR	620672	ParameterType	RBreakpoint *		620562	0					
ANR	620673	Identifier	bp		620562	1					
ANR	620674	Parameter	ut64 addr	209:52:4891:4899	620562	1	True				
ANR	620675	ParameterType	ut64		620562	0					
ANR	620676	Identifier	addr		620562	1					
ANR	620677	Parameter	int size	209:63:4902:4909	620562	2	True				
ANR	620678	ParameterType	int		620562	0					
ANR	620679	Identifier	size		620562	1					
ANR	620680	Parameter	int perm	209:73:4912:4919	620562	3	True				
ANR	620681	ParameterType	int		620562	0					
ANR	620682	Identifier	perm		620562	1					
ANR	620683	CFGEntryNode	ENTRY		620562		True				
ANR	620684	CFGExitNode	EXIT		620562		True				
ANR	620685	Symbol	item		620562						
ANR	620686	Symbol	bp -> iob . io		620562						
ANR	620687	Symbol	NULL		620562						
ANR	620688	Symbol	perm		620562						
ANR	620689	Symbol	calloc		620562						
ANR	620690	Symbol	bp		620562						
ANR	620691	Symbol	size		620562						
ANR	620692	Symbol	bytes		620562						
ANR	620693	Symbol	bp -> iob . read_at		620562						
ANR	620694	Symbol	* bp		620562						
ANR	620695	Symbol	r_bp_add		620562						
ANR	620696	Symbol	addr		620562						
ANR	620697	Symbol	R_BP_TYPE_SW		620562						
ANR	620698	Symbol	bp -> iob		620562						
ANR	620699	Function	r_bp_add_hw	227:0:5245:5391							
ANR	620700	FunctionDef	"r_bp_add_hw (RBreakpoint * bp , ut64 addr , int size , int perm)"		620699	0					
ANR	620701	CompoundStatement		227:83:5328:5391	620699	0					
ANR	620702	ReturnStatement	"return r_bp_add ( bp , NULL , addr , size , R_BP_TYPE_HW , perm ) ;"	228:1:5331:5389	620699	0	True				
ANR	620703	CallExpression	"r_bp_add ( bp , NULL , addr , size , R_BP_TYPE_HW , perm )"		620699	0					
ANR	620704	Callee	r_bp_add		620699	0					
ANR	620705	Identifier	r_bp_add		620699	0					
ANR	620706	ArgumentList	bp		620699	1					
ANR	620707	Argument	bp		620699	0					
ANR	620708	Identifier	bp		620699	0					
ANR	620709	Argument	NULL		620699	1					
ANR	620710	Identifier	NULL		620699	0					
ANR	620711	Argument	addr		620699	2					
ANR	620712	Identifier	addr		620699	0					
ANR	620713	Argument	size		620699	3					
ANR	620714	Identifier	size		620699	0					
ANR	620715	Argument	R_BP_TYPE_HW		620699	4					
ANR	620716	Identifier	R_BP_TYPE_HW		620699	0					
ANR	620717	Argument	perm		620699	5					
ANR	620718	Identifier	perm		620699	0					
ANR	620719	ReturnType	R_API RBreakpointItem *		620699	1					
ANR	620720	Identifier	r_bp_add_hw		620699	2					
ANR	620721	ParameterList	"RBreakpoint * bp , ut64 addr , int size , int perm"		620699	3					
ANR	620722	Parameter	RBreakpoint * bp	227:35:5280:5294	620699	0	True				
ANR	620723	ParameterType	RBreakpoint *		620699	0					
ANR	620724	Identifier	bp		620699	1					
ANR	620725	Parameter	ut64 addr	227:52:5297:5305	620699	1	True				
ANR	620726	ParameterType	ut64		620699	0					
ANR	620727	Identifier	addr		620699	1					
ANR	620728	Parameter	int size	227:63:5308:5315	620699	2	True				
ANR	620729	ParameterType	int		620699	0					
ANR	620730	Identifier	size		620699	1					
ANR	620731	Parameter	int perm	227:73:5318:5325	620699	3	True				
ANR	620732	ParameterType	int		620699	0					
ANR	620733	Identifier	perm		620699	1					
ANR	620734	CFGEntryNode	ENTRY		620699		True				
ANR	620735	CFGExitNode	EXIT		620699		True				
ANR	620736	Symbol	NULL		620699						
ANR	620737	Symbol	size		620699						
ANR	620738	Symbol	perm		620699						
ANR	620739	Symbol	R_BP_TYPE_HW		620699						
ANR	620740	Symbol	r_bp_add		620699						
ANR	620741	Symbol	addr		620699						
ANR	620742	Symbol	bp		620699						
ANR	620743	Function	r_bp_del_all	231:0:5394:5527							
ANR	620744	FunctionDef	r_bp_del_all (RBreakpoint * bp)		620743	0					
ANR	620745	CompoundStatement		231:40:5434:5527	620743	0					
ANR	620746	IfStatement	if ( ! r_list_empty ( bp -> bps ) )		620743	0					
ANR	620747	Condition	! r_list_empty ( bp -> bps )	232:5:5441:5463	620743	0	True				
ANR	620748	UnaryOperationExpression	! r_list_empty ( bp -> bps )		620743	0					
ANR	620749	UnaryOperator	!		620743	0					
ANR	620750	CallExpression	r_list_empty ( bp -> bps )		620743	1					
ANR	620751	Callee	r_list_empty		620743	0					
ANR	620752	Identifier	r_list_empty		620743	0					
ANR	620753	ArgumentList	bp -> bps		620743	1					
ANR	620754	Argument	bp -> bps		620743	0					
ANR	620755	PtrMemberAccess	bp -> bps		620743	0					
ANR	620756	Identifier	bp		620743	0					
ANR	620757	Identifier	bps		620743	1					
ANR	620758	CompoundStatement		2:30:31:31	620743	1					
ANR	620759	ExpressionStatement	r_list_purge ( bp -> bps )	233:2:5470:5492	620743	0	True				
ANR	620760	CallExpression	r_list_purge ( bp -> bps )		620743	0					
ANR	620761	Callee	r_list_purge		620743	0					
ANR	620762	Identifier	r_list_purge		620743	0					
ANR	620763	ArgumentList	bp -> bps		620743	1					
ANR	620764	Argument	bp -> bps		620743	0					
ANR	620765	PtrMemberAccess	bp -> bps		620743	0					
ANR	620766	Identifier	bp		620743	0					
ANR	620767	Identifier	bps		620743	1					
ANR	620768	ReturnStatement	return true ;	234:2:5496:5507	620743	1	True				
ANR	620769	Identifier	true		620743	0					
ANR	620770	ReturnStatement	return false ;	236:1:5513:5525	620743	1	True				
ANR	620771	Identifier	false		620743	0					
ANR	620772	ReturnType	R_API int		620743	1					
ANR	620773	Identifier	r_bp_del_all		620743	2					
ANR	620774	ParameterList	RBreakpoint * bp		620743	3					
ANR	620775	Parameter	RBreakpoint * bp	231:23:5417:5431	620743	0	True				
ANR	620776	ParameterType	RBreakpoint *		620743	0					
ANR	620777	Identifier	bp		620743	1					
ANR	620778	CFGEntryNode	ENTRY		620743		True				
ANR	620779	CFGExitNode	EXIT		620743		True				
ANR	620780	Symbol	* bp		620743						
ANR	620781	Symbol	true		620743						
ANR	620782	Symbol	false		620743						
ANR	620783	Symbol	r_list_empty		620743						
ANR	620784	Symbol	bp -> bps		620743						
ANR	620785	Symbol	bp		620743						
ANR	620786	Function	r_bp_del	239:0:5530:5863							
ANR	620787	FunctionDef	"r_bp_del (RBreakpoint * bp , ut64 addr)"		620786	0					
ANR	620788	CompoundStatement		239:47:5577:5863	620786	0					
ANR	620789	IdentifierDeclStatement	RListIter * iter ;	240:1:5580:5595	620786	0	True				
ANR	620790	IdentifierDecl	* iter		620786	0					
ANR	620791	IdentifierDeclType	RListIter *		620786	0					
ANR	620792	Identifier	iter		620786	1					
ANR	620793	IdentifierDeclStatement	RBreakpointItem * b ;	241:1:5598:5616	620786	1	True				
ANR	620794	IdentifierDecl	* b		620786	0					
ANR	620795	IdentifierDeclType	RBreakpointItem *		620786	0					
ANR	620796	Identifier	b		620786	1					
ANR	620797	Statement	r_list_foreach	243:1:5698:5711	620786	2	True				
ANR	620798	Statement	(	243:16:5713:5713	620786	3	True				
ANR	620799	Statement	bp	243:17:5714:5715	620786	4	True				
ANR	620800	Statement	->	243:19:5716:5717	620786	5	True				
ANR	620801	Statement	bps	243:21:5718:5720	620786	6	True				
ANR	620802	Statement	","	243:24:5721:5721	620786	7	True				
ANR	620803	Statement	iter	243:26:5723:5726	620786	8	True				
ANR	620804	Statement	","	243:30:5727:5727	620786	9	True				
ANR	620805	Statement	b	243:32:5729:5729	620786	10	True				
ANR	620806	Statement	)	243:33:5730:5730	620786	11	True				
ANR	620807	CompoundStatement		5:35:154:154	620786	12					
ANR	620808	IfStatement	if ( b -> addr == addr )		620786	0					
ANR	620809	Condition	b -> addr == addr	244:6:5740:5754	620786	0	True				
ANR	620810	EqualityExpression	b -> addr == addr		620786	0		==			
ANR	620811	PtrMemberAccess	b -> addr		620786	0					
ANR	620812	Identifier	b		620786	0					
ANR	620813	Identifier	addr		620786	1					
ANR	620814	Identifier	addr		620786	1					
ANR	620815	CompoundStatement		6:23:179:179	620786	1					
ANR	620816	ExpressionStatement	"unlinkBreakpoint ( bp , b )"	245:3:5762:5786	620786	0	True				
ANR	620817	CallExpression	"unlinkBreakpoint ( bp , b )"		620786	0					
ANR	620818	Callee	unlinkBreakpoint		620786	0					
ANR	620819	Identifier	unlinkBreakpoint		620786	0					
ANR	620820	ArgumentList	bp		620786	1					
ANR	620821	Argument	bp		620786	0					
ANR	620822	Identifier	bp		620786	0					
ANR	620823	Argument	b		620786	1					
ANR	620824	Identifier	b		620786	0					
ANR	620825	ReturnStatement	return true ;	247:3:5828:5839	620786	1	True				
ANR	620826	Identifier	true		620786	0					
ANR	620827	ReturnStatement	return false ;	250:1:5849:5861	620786	13	True				
ANR	620828	Identifier	false		620786	0					
ANR	620829	ReturnType	R_API int		620786	1					
ANR	620830	Identifier	r_bp_del		620786	2					
ANR	620831	ParameterList	"RBreakpoint * bp , ut64 addr"		620786	3					
ANR	620832	Parameter	RBreakpoint * bp	239:19:5549:5563	620786	0	True				
ANR	620833	ParameterType	RBreakpoint *		620786	0					
ANR	620834	Identifier	bp		620786	1					
ANR	620835	Parameter	ut64 addr	239:36:5566:5574	620786	1	True				
ANR	620836	ParameterType	ut64		620786	0					
ANR	620837	Identifier	addr		620786	1					
ANR	620838	CFGEntryNode	ENTRY		620786		True				
ANR	620839	CFGExitNode	EXIT		620786		True				
ANR	620840	Symbol	b		620786						
ANR	620841	Symbol	true		620786						
ANR	620842	Symbol	false		620786						
ANR	620843	Symbol	iter		620786						
ANR	620844	Symbol	addr		620786						
ANR	620845	Symbol	* b		620786						
ANR	620846	Symbol	bp		620786						
ANR	620847	Symbol	b -> addr		620786						
ANR	620848	Function	r_bp_set_trace	253:0:5866:6040							
ANR	620849	FunctionDef	"r_bp_set_trace (RBreakpoint * bp , ut64 addr , int set)"		620848	0					
ANR	620850	CompoundStatement		253:62:5928:6040	620848	0					
ANR	620851	IdentifierDeclStatement	"RBreakpointItem * b = r_bp_get_in ( bp , addr , 0 ) ;"	254:1:5931:5977	620848	0	True				
ANR	620852	IdentifierDecl	"* b = r_bp_get_in ( bp , addr , 0 )"		620848	0					
ANR	620853	IdentifierDeclType	RBreakpointItem *		620848	0					
ANR	620854	Identifier	b		620848	1					
ANR	620855	AssignmentExpression	"* b = r_bp_get_in ( bp , addr , 0 )"		620848	2		=			
ANR	620856	Identifier	b		620848	0					
ANR	620857	CallExpression	"r_bp_get_in ( bp , addr , 0 )"		620848	1					
ANR	620858	Callee	r_bp_get_in		620848	0					
ANR	620859	Identifier	r_bp_get_in		620848	0					
ANR	620860	ArgumentList	bp		620848	1					
ANR	620861	Argument	bp		620848	0					
ANR	620862	Identifier	bp		620848	0					
ANR	620863	Argument	addr		620848	1					
ANR	620864	Identifier	addr		620848	0					
ANR	620865	Argument	0		620848	2					
ANR	620866	PrimaryExpression	0		620848	0					
ANR	620867	IfStatement	if ( b )		620848	1					
ANR	620868	Condition	b	255:5:5984:5984	620848	0	True				
ANR	620869	Identifier	b		620848	0					
ANR	620870	CompoundStatement		3:8:58:58	620848	1					
ANR	620871	ExpressionStatement	b -> trace = set	256:2:5991:6005	620848	0	True				
ANR	620872	AssignmentExpression	b -> trace = set		620848	0		=			
ANR	620873	PtrMemberAccess	b -> trace		620848	0					
ANR	620874	Identifier	b		620848	0					
ANR	620875	Identifier	trace		620848	1					
ANR	620876	Identifier	set		620848	1					
ANR	620877	ReturnStatement	return true ;	257:2:6009:6020	620848	1	True				
ANR	620878	Identifier	true		620848	0					
ANR	620879	ReturnStatement	return false ;	259:1:6026:6038	620848	2	True				
ANR	620880	Identifier	false		620848	0					
ANR	620881	ReturnType	R_API int		620848	1					
ANR	620882	Identifier	r_bp_set_trace		620848	2					
ANR	620883	ParameterList	"RBreakpoint * bp , ut64 addr , int set"		620848	3					
ANR	620884	Parameter	RBreakpoint * bp	253:25:5891:5905	620848	0	True				
ANR	620885	ParameterType	RBreakpoint *		620848	0					
ANR	620886	Identifier	bp		620848	1					
ANR	620887	Parameter	ut64 addr	253:42:5908:5916	620848	1	True				
ANR	620888	ParameterType	ut64		620848	0					
ANR	620889	Identifier	addr		620848	1					
ANR	620890	Parameter	int set	253:53:5919:5925	620848	2	True				
ANR	620891	ParameterType	int		620848	0					
ANR	620892	Identifier	set		620848	1					
ANR	620893	CFGEntryNode	ENTRY		620848		True				
ANR	620894	CFGExitNode	EXIT		620848		True				
ANR	620895	Symbol	b -> trace		620848						
ANR	620896	Symbol	b		620848						
ANR	620897	Symbol	set		620848						
ANR	620898	Symbol	r_bp_get_in		620848						
ANR	620899	Symbol	true		620848						
ANR	620900	Symbol	false		620848						
ANR	620901	Symbol	addr		620848						
ANR	620902	Symbol	* b		620848						
ANR	620903	Symbol	bp		620848						
ANR	620904	Function	r_bp_set_trace_all	262:0:6043:6211							
ANR	620905	FunctionDef	"r_bp_set_trace_all (RBreakpoint * bp , int set)"		620904	0					
ANR	620906	CompoundStatement		262:55:6098:6211	620904	0					
ANR	620907	IdentifierDeclStatement	RListIter * iter ;	263:1:6101:6116	620904	0	True				
ANR	620908	IdentifierDecl	* iter		620904	0					
ANR	620909	IdentifierDeclType	RListIter *		620904	0					
ANR	620910	Identifier	iter		620904	1					
ANR	620911	IdentifierDeclStatement	RBreakpointItem * b ;	264:1:6119:6137	620904	1	True				
ANR	620912	IdentifierDecl	* b		620904	0					
ANR	620913	IdentifierDeclType	RBreakpointItem *		620904	0					
ANR	620914	Identifier	b		620904	1					
ANR	620915	Statement	r_list_foreach	265:1:6140:6153	620904	2	True				
ANR	620916	Statement	(	265:16:6155:6155	620904	3	True				
ANR	620917	Statement	bp	265:17:6156:6157	620904	4	True				
ANR	620918	Statement	->	265:19:6158:6159	620904	5	True				
ANR	620919	Statement	bps	265:21:6160:6162	620904	6	True				
ANR	620920	Statement	","	265:24:6163:6163	620904	7	True				
ANR	620921	Statement	iter	265:26:6165:6168	620904	8	True				
ANR	620922	Statement	","	265:30:6169:6169	620904	9	True				
ANR	620923	Statement	b	265:32:6171:6171	620904	10	True				
ANR	620924	Statement	)	265:33:6172:6172	620904	11	True				
ANR	620925	CompoundStatement		4:35:75:75	620904	12					
ANR	620926	ExpressionStatement	b -> trace = set	266:2:6178:6192	620904	0	True				
ANR	620927	AssignmentExpression	b -> trace = set		620904	0		=			
ANR	620928	PtrMemberAccess	b -> trace		620904	0					
ANR	620929	Identifier	b		620904	0					
ANR	620930	Identifier	trace		620904	1					
ANR	620931	Identifier	set		620904	1					
ANR	620932	ReturnStatement	return true ;	268:1:6198:6209	620904	13	True				
ANR	620933	Identifier	true		620904	0					
ANR	620934	ReturnType	R_API int		620904	1					
ANR	620935	Identifier	r_bp_set_trace_all		620904	2					
ANR	620936	ParameterList	"RBreakpoint * bp , int set"		620904	3					
ANR	620937	Parameter	RBreakpoint * bp	262:29:6072:6086	620904	0	True				
ANR	620938	ParameterType	RBreakpoint *		620904	0					
ANR	620939	Identifier	bp		620904	1					
ANR	620940	Parameter	int set	262:46:6089:6095	620904	1	True				
ANR	620941	ParameterType	int		620904	0					
ANR	620942	Identifier	set		620904	1					
ANR	620943	CFGEntryNode	ENTRY		620904		True				
ANR	620944	CFGExitNode	EXIT		620904		True				
ANR	620945	Symbol	b -> trace		620904						
ANR	620946	Symbol	b		620904						
ANR	620947	Symbol	set		620904						
ANR	620948	Symbol	true		620904						
ANR	620949	Symbol	iter		620904						
ANR	620950	Symbol	* b		620904						
ANR	620951	Symbol	bp		620904						
ANR	620952	Function	r_bp_list	272:0:6233:8102							
ANR	620953	FunctionDef	"r_bp_list (RBreakpoint * bp , int rad)"		620952	0					
ANR	620954	CompoundStatement		272:46:6279:8102	620952	0					
ANR	620955	IdentifierDeclStatement	int n = 0 ;	273:1:6282:6291	620952	0	True				
ANR	620956	IdentifierDecl	n = 0		620952	0					
ANR	620957	IdentifierDeclType	int		620952	0					
ANR	620958	Identifier	n		620952	1					
ANR	620959	AssignmentExpression	n = 0		620952	2		=			
ANR	620960	Identifier	n		620952	0					
ANR	620961	PrimaryExpression	0		620952	1					
ANR	620962	IdentifierDeclStatement	RBreakpointItem * b ;	274:1:6294:6312	620952	1	True				
ANR	620963	IdentifierDecl	* b		620952	0					
ANR	620964	IdentifierDeclType	RBreakpointItem *		620952	0					
ANR	620965	Identifier	b		620952	1					
ANR	620966	IdentifierDeclStatement	RListIter * iter ;	275:1:6315:6330	620952	2	True				
ANR	620967	IdentifierDecl	* iter		620952	0					
ANR	620968	IdentifierDeclType	RListIter *		620952	0					
ANR	620969	Identifier	iter		620952	1					
ANR	620970	IfStatement	if ( rad == 'j' )		620952	3					
ANR	620971	Condition	rad == 'j'	276:5:6337:6346	620952	0	True				
ANR	620972	EqualityExpression	rad == 'j'		620952	0		==			
ANR	620973	Identifier	rad		620952	0					
ANR	620974	PrimaryExpression	'j'		620952	1					
ANR	620975	CompoundStatement		5:17:69:69	620952	1					
ANR	620976	ExpressionStatement	"bp -> cb_printf ( ""["" )"	277:2:6353:6372	620952	0	True				
ANR	620977	CallExpression	"bp -> cb_printf ( ""["" )"		620952	0					
ANR	620978	Callee	bp -> cb_printf		620952	0					
ANR	620979	PtrMemberAccess	bp -> cb_printf		620952	0					
ANR	620980	Identifier	bp		620952	0					
ANR	620981	Identifier	cb_printf		620952	1					
ANR	620982	ArgumentList	"""["""		620952	1					
ANR	620983	Argument	"""["""		620952	0					
ANR	620984	PrimaryExpression	"""["""		620952	0					
ANR	620985	Statement	r_list_foreach	280:1:6413:6426	620952	4	True				
ANR	620986	Statement	(	280:16:6428:6428	620952	5	True				
ANR	620987	Statement	bp	280:17:6429:6430	620952	6	True				
ANR	620988	Statement	->	280:19:6431:6432	620952	7	True				
ANR	620989	Statement	bps	280:21:6433:6435	620952	8	True				
ANR	620990	Statement	","	280:24:6436:6436	620952	9	True				
ANR	620991	Statement	iter	280:26:6438:6441	620952	10	True				
ANR	620992	Statement	","	280:30:6442:6442	620952	11	True				
ANR	620993	Statement	b	280:32:6444:6444	620952	12	True				
ANR	620994	Statement	)	280:33:6445:6445	620952	13	True				
ANR	620995	CompoundStatement		9:35:167:167	620952	14					
ANR	620996	SwitchStatement	switch ( rad )		620952	0					
ANR	620997	Condition	rad	281:10:6459:6461	620952	0	True				
ANR	620998	Identifier	rad		620952	0					
ANR	620999	CompoundStatement		10:15:184:184	620952	1					
ANR	621000	Label	case 0 :	282:2:6468:6474	620952	0	True				
ANR	621001	Statement	bp	283:3:6479:6480	620952	1	True				
ANR	621002	Statement	->	283:5:6481:6482	620952	2	True				
ANR	621003	Statement	cb_printf	283:7:6483:6491	620952	3	True				
ANR	621004	Statement	(	283:17:6493:6493	620952	4	True				
ANR	621005	Statement	"""0x%08"""	283:18:6494:6500	620952	5	True				
ANR	621006	Statement	PFMT64x	283:25:6501:6507	620952	6	True				
ANR	621007	Statement	""" - 0x%08"""	283:32:6508:6517	620952	7	True				
ANR	621008	Statement	PFMT64x	283:42:6518:6524	620952	8	True				
ANR	621009	Statement	""" %d %c%c%c %s %s %s cmd=\\""%s\\"" cond=\\""%s\\"" """	284:4:6532:6576	620952	9	True				
ANR	621010	Statement	"""name=\\""%s\\"" module=\\""%s\\""\\n"""	285:4:6584:6612	620952	10	True				
ANR	621011	Statement	","	285:33:6613:6613	620952	11	True				
ANR	621012	Statement	b	286:4:6619:6619	620952	12	True				
ANR	621013	Statement	->	286:5:6620:6621	620952	13	True				
ANR	621014	Statement	addr	286:7:6622:6625	620952	14	True				
ANR	621015	Statement	","	286:11:6626:6626	620952	15	True				
ANR	621016	Statement	b	286:13:6628:6628	620952	16	True				
ANR	621017	Statement	->	286:14:6629:6630	620952	17	True				
ANR	621018	Statement	addr	286:16:6631:6634	620952	18	True				
ANR	621019	Statement	+	286:21:6636:6636	620952	19	True				
ANR	621020	Statement	b	286:23:6638:6638	620952	20	True				
ANR	621021	Statement	->	286:24:6639:6640	620952	21	True				
ANR	621022	Statement	size	286:26:6641:6644	620952	22	True				
ANR	621023	Statement	","	286:30:6645:6645	620952	23	True				
ANR	621024	Statement	b	286:32:6647:6647	620952	24	True				
ANR	621025	Statement	->	286:33:6648:6649	620952	25	True				
ANR	621026	Statement	size	286:35:6650:6653	620952	26	True				
ANR	621027	Statement	","	286:39:6654:6654	620952	27	True				
ANR	621028	Statement	(	287:4:6660:6660	620952	28	True				
ANR	621029	Statement	(	287:5:6661:6661	620952	29	True				
ANR	621030	Statement	b	287:6:6662:6662	620952	30	True				
ANR	621031	Statement	->	287:7:6663:6664	620952	31	True				
ANR	621032	Statement	perm	287:9:6665:6668	620952	32	True				
ANR	621033	Statement	&	287:14:6670:6670	620952	33	True				
ANR	621034	Statement	R_BP_PROT_READ	287:16:6672:6685	620952	34	True				
ANR	621035	Statement	)	287:30:6686:6686	620952	35	True				
ANR	621036	Statement	|	287:32:6688:6688	620952	36	True				
ANR	621037	Statement	(	287:34:6690:6690	620952	37	True				
ANR	621038	Statement	b	287:35:6691:6691	620952	38	True				
ANR	621039	Statement	->	287:36:6692:6693	620952	39	True				
ANR	621040	Statement	perm	287:38:6694:6697	620952	40	True				
ANR	621041	Statement	&	287:43:6699:6699	620952	41	True				
ANR	621042	Statement	R_BP_PROT_ACCESS	287:45:6701:6716	620952	42	True				
ANR	621043	Statement	)	287:61:6717:6717	620952	43	True				
ANR	621044	Statement	)	287:62:6718:6718	620952	44	True				
ANR	621045	Statement	?	287:64:6720:6720	620952	45	True				
ANR	621046	Label	'r' :	287:66:6722:6726	620952	46	True				
ANR	621047	Statement	'-'	287:72:6728:6730	620952	47	True				
ANR	621048	Statement	","	287:75:6731:6731	620952	48	True				
ANR	621049	Statement	(	288:4:6737:6737	620952	49	True				
ANR	621050	Statement	(	288:5:6738:6738	620952	50	True				
ANR	621051	Statement	b	288:6:6739:6739	620952	51	True				
ANR	621052	Statement	->	288:7:6740:6741	620952	52	True				
ANR	621053	Statement	perm	288:9:6742:6745	620952	53	True				
ANR	621054	Statement	&	288:14:6747:6747	620952	54	True				
ANR	621055	Statement	R_BP_PROT_WRITE	288:16:6749:6763	620952	55	True				
ANR	621056	Statement	)	288:31:6764:6764	620952	56	True				
ANR	621057	Statement	|	288:32:6765:6765	620952	57	True				
ANR	621058	Statement	(	288:34:6767:6767	620952	58	True				
ANR	621059	Statement	b	288:35:6768:6768	620952	59	True				
ANR	621060	Statement	->	288:36:6769:6770	620952	60	True				
ANR	621061	Statement	perm	288:38:6771:6774	620952	61	True				
ANR	621062	Statement	&	288:43:6776:6776	620952	62	True				
ANR	621063	Statement	R_BP_PROT_ACCESS	288:45:6778:6793	620952	63	True				
ANR	621064	Statement	)	288:61:6794:6794	620952	64	True				
ANR	621065	Statement	)	288:62:6795:6795	620952	65	True				
ANR	621066	Statement	?	288:64:6797:6797	620952	66	True				
ANR	621067	Label	'w' :	288:66:6799:6803	620952	67	True				
ANR	621068	Statement	'-'	288:72:6805:6807	620952	68	True				
ANR	621069	Statement	","	288:75:6808:6808	620952	69	True				
ANR	621070	Statement	(	289:4:6814:6814	620952	70	True				
ANR	621071	Statement	b	289:5:6815:6815	620952	71	True				
ANR	621072	Statement	->	289:6:6816:6817	620952	72	True				
ANR	621073	Statement	perm	289:8:6818:6821	620952	73	True				
ANR	621074	Statement	&	289:13:6823:6823	620952	74	True				
ANR	621075	Statement	R_BP_PROT_EXEC	289:15:6825:6838	620952	75	True				
ANR	621076	Statement	)	289:29:6839:6839	620952	76	True				
ANR	621077	Statement	?	289:31:6841:6841	620952	77	True				
ANR	621078	Label	'x' :	289:33:6843:6847	620952	78	True				
ANR	621079	Statement	'-'	289:39:6849:6851	620952	79	True				
ANR	621080	Statement	","	289:42:6852:6852	620952	80	True				
ANR	621081	Statement	b	290:4:6858:6858	620952	81	True				
ANR	621082	Statement	->	290:5:6859:6860	620952	82	True				
ANR	621083	Statement	hw	290:7:6861:6862	620952	83	True				
ANR	621084	Statement	?	290:10:6864:6864	620952	84	True				
ANR	621085	Statement	"""hw"""	290:12:6866:6869	620952	85	True				
ANR	621086	Statement	:	290:16:6870:6870	620952	86	True				
ANR	621087	Statement	"""sw"""	290:18:6872:6875	620952	87	True				
ANR	621088	Statement	","	290:22:6876:6876	620952	88	True				
ANR	621089	Statement	b	291:4:6882:6882	620952	89	True				
ANR	621090	Statement	->	291:5:6883:6884	620952	90	True				
ANR	621091	Statement	trace	291:7:6885:6889	620952	91	True				
ANR	621092	Statement	?	291:13:6891:6891	620952	92	True				
ANR	621093	Statement	"""trace"""	291:15:6893:6899	620952	93	True				
ANR	621094	Statement	:	291:23:6901:6901	620952	94	True				
ANR	621095	Statement	"""break"""	291:25:6903:6909	620952	95	True				
ANR	621096	Statement	","	291:32:6910:6910	620952	96	True				
ANR	621097	Statement	b	292:4:6916:6916	620952	97	True				
ANR	621098	Statement	->	292:5:6917:6918	620952	98	True				
ANR	621099	Statement	enabled	292:7:6919:6925	620952	99	True				
ANR	621100	Statement	?	292:15:6927:6927	620952	100	True				
ANR	621101	Statement	"""enabled"""	292:17:6929:6937	620952	101	True				
ANR	621102	Statement	:	292:27:6939:6939	620952	102	True				
ANR	621103	Statement	"""disabled"""	292:29:6941:6950	620952	103	True				
ANR	621104	Statement	","	292:39:6951:6951	620952	104	True				
ANR	621105	Statement	r_str_get2	293:4:6957:6966	620952	105	True				
ANR	621106	Statement	(	293:15:6968:6968	620952	106	True				
ANR	621107	Statement	b	293:16:6969:6969	620952	107	True				
ANR	621108	Statement	->	293:17:6970:6971	620952	108	True				
ANR	621109	Statement	data	293:19:6972:6975	620952	109	True				
ANR	621110	Statement	)	293:23:6976:6976	620952	110	True				
ANR	621111	Statement	","	293:24:6977:6977	620952	111	True				
ANR	621112	Statement	r_str_get2	294:4:6983:6992	620952	112	True				
ANR	621113	Statement	(	294:15:6994:6994	620952	113	True				
ANR	621114	Statement	b	294:16:6995:6995	620952	114	True				
ANR	621115	Statement	->	294:17:6996:6997	620952	115	True				
ANR	621116	Statement	cond	294:19:6998:7001	620952	116	True				
ANR	621117	Statement	)	294:23:7002:7002	620952	117	True				
ANR	621118	Statement	","	294:24:7003:7003	620952	118	True				
ANR	621119	Statement	r_str_get2	295:4:7009:7018	620952	119	True				
ANR	621120	Statement	(	295:15:7020:7020	620952	120	True				
ANR	621121	Statement	b	295:16:7021:7021	620952	121	True				
ANR	621122	Statement	->	295:17:7022:7023	620952	122	True				
ANR	621123	Statement	name	295:19:7024:7027	620952	123	True				
ANR	621124	Statement	)	295:23:7028:7028	620952	124	True				
ANR	621125	Statement	","	295:24:7029:7029	620952	125	True				
ANR	621126	Statement	r_str_get2	296:4:7035:7044	620952	126	True				
ANR	621127	Statement	(	296:15:7046:7046	620952	127	True				
ANR	621128	Statement	b	296:16:7047:7047	620952	128	True				
ANR	621129	Statement	->	296:17:7048:7049	620952	129	True				
ANR	621130	Statement	module_name	296:19:7050:7060	620952	130	True				
ANR	621131	Statement	)	296:30:7061:7061	620952	131	True				
ANR	621132	Statement	)	296:31:7062:7062	620952	132	True				
ANR	621133	ExpressionStatement		296:32:7063:7063	620952	133	True				
ANR	621134	BreakStatement	break ;	297:3:7068:7073	620952	134	True				
ANR	621135	Label	case 1 :	298:2:7077:7083	620952	135	True				
ANR	621136	Label	case 'r' :	299:2:7087:7095	620952	136	True				
ANR	621137	Label	case '*' :	300:2:7099:7107	620952	137	True				
ANR	621138	IfStatement	if ( b -> module_name )		620952	138					
ANR	621139	Condition	b -> module_name	302:7:7161:7174	620952	0	True				
ANR	621140	PtrMemberAccess	b -> module_name		620952	0					
ANR	621141	Identifier	b		620952	0					
ANR	621142	Identifier	module_name		620952	1					
ANR	621143	CompoundStatement		31:23:897:897	620952	1					
ANR	621144	Statement	bp	303:8:7187:7188	620952	0	True				
ANR	621145	Statement	->	303:10:7189:7190	620952	1	True				
ANR	621146	Statement	cb_printf	303:12:7191:7199	620952	2	True				
ANR	621147	Statement	(	303:22:7201:7201	620952	3	True				
ANR	621148	Statement	"""dbm %s %"""	303:23:7202:7211	620952	4	True				
ANR	621149	Statement	PFMT64d	303:33:7212:7218	620952	5	True				
ANR	621150	Statement	"""\\n"""	303:40:7219:7222	620952	6	True				
ANR	621151	Statement	","	303:44:7223:7223	620952	7	True				
ANR	621152	Statement	b	303:46:7225:7225	620952	8	True				
ANR	621153	Statement	->	303:47:7226:7227	620952	9	True				
ANR	621154	Statement	module_name	303:49:7228:7238	620952	10	True				
ANR	621155	Statement	","	303:60:7239:7239	620952	11	True				
ANR	621156	Statement	b	303:62:7241:7241	620952	12	True				
ANR	621157	Statement	->	303:63:7242:7243	620952	13	True				
ANR	621158	Statement	module_delta	303:65:7244:7255	620952	14	True				
ANR	621159	Statement	)	303:77:7256:7256	620952	15	True				
ANR	621160	ExpressionStatement		303:78:7257:7257	620952	16	True				
ANR	621161	ElseStatement	else		620952	0					
ANR	621162	CompoundStatement		33:10:989:989	620952	0					
ANR	621163	Statement	bp	305:4:7275:7276	620952	0	True				
ANR	621164	Statement	->	305:6:7277:7278	620952	1	True				
ANR	621165	Statement	cb_printf	305:8:7279:7287	620952	2	True				
ANR	621166	Statement	(	305:18:7289:7289	620952	3	True				
ANR	621167	Statement	"""db 0x%08"""	305:19:7290:7299	620952	4	True				
ANR	621168	Statement	PFMT64x	305:29:7300:7306	620952	5	True				
ANR	621169	Statement	"""\\n"""	305:36:7307:7310	620952	6	True				
ANR	621170	Statement	","	305:40:7311:7311	620952	7	True				
ANR	621171	Statement	b	305:42:7313:7313	620952	8	True				
ANR	621172	Statement	->	305:43:7314:7315	620952	9	True				
ANR	621173	Statement	addr	305:45:7316:7319	620952	10	True				
ANR	621174	Statement	)	305:49:7320:7320	620952	11	True				
ANR	621175	ExpressionStatement		305:50:7321:7321	620952	12	True				
ANR	621176	BreakStatement	break ;	310:3:7433:7438	620952	139	True				
ANR	621177	Label	case 'j' :	311:2:7442:7450	620952	140	True				
ANR	621178	Statement	bp	312:3:7455:7456	620952	141	True				
ANR	621179	Statement	->	312:5:7457:7458	620952	142	True				
ANR	621180	Statement	cb_printf	312:7:7459:7467	620952	143	True				
ANR	621181	Statement	(	312:17:7469:7469	620952	144	True				
ANR	621182	Statement	"""%s{\\""addr\\"":%"""	312:18:7470:7484	620952	145	True				
ANR	621183	Statement	PFMT64d	312:33:7485:7491	620952	146	True				
ANR	621184	Statement	""",\\""size\\"":%d,"""	312:40:7492:7506	620952	147	True				
ANR	621185	Statement	"""\\""prot\\"":\\""%c%c%c\\"",\\""hw\\"":%s,"""	313:4:7512:7543	620952	148	True				
ANR	621186	Statement	"""\\""trace\\"":%s,\\""enabled\\"":%s,"""	314:4:7549:7578	620952	149	True				
ANR	621187	Statement	"""\\""data\\"":\\""%s\\"","""	315:4:7584:7601	620952	150	True				
ANR	621188	Statement	"""\\""cond\\"":\\""%s\\""}"""	316:4:7607:7624	620952	151	True				
ANR	621189	Statement	","	316:22:7625:7625	620952	152	True				
ANR	621190	Statement	iter	317:4:7631:7634	620952	153	True				
ANR	621191	Statement	->	317:8:7635:7636	620952	154	True				
ANR	621192	Statement	p	317:10:7637:7637	620952	155	True				
ANR	621193	Statement	?	317:12:7639:7639	620952	156	True				
ANR	621194	Statement	""","""	317:14:7641:7643	620952	157	True				
ANR	621195	Statement	:	317:18:7645:7645	620952	158	True				
ANR	621196	Statement	""""""	317:20:7647:7648	620952	159	True				
ANR	621197	Statement	","	317:22:7649:7649	620952	160	True				
ANR	621198	Statement	b	318:4:7655:7655	620952	161	True				
ANR	621199	Statement	->	318:5:7656:7657	620952	162	True				
ANR	621200	Statement	addr	318:7:7658:7661	620952	163	True				
ANR	621201	Statement	","	318:11:7662:7662	620952	164	True				
ANR	621202	Statement	b	318:13:7664:7664	620952	165	True				
ANR	621203	Statement	->	318:14:7665:7666	620952	166	True				
ANR	621204	Statement	size	318:16:7667:7670	620952	167	True				
ANR	621205	Statement	","	318:20:7671:7671	620952	168	True				
ANR	621206	Statement	(	319:4:7677:7677	620952	169	True				
ANR	621207	Statement	b	319:5:7678:7678	620952	170	True				
ANR	621208	Statement	->	319:6:7679:7680	620952	171	True				
ANR	621209	Statement	perm	319:8:7681:7684	620952	172	True				
ANR	621210	Statement	&	319:13:7686:7686	620952	173	True				
ANR	621211	Statement	R_BP_PROT_READ	319:15:7688:7701	620952	174	True				
ANR	621212	Statement	)	319:29:7702:7702	620952	175	True				
ANR	621213	Statement	?	319:31:7704:7704	620952	176	True				
ANR	621214	Label	'r' :	319:33:7706:7710	620952	177	True				
ANR	621215	Statement	'-'	319:39:7712:7714	620952	178	True				
ANR	621216	Statement	","	319:42:7715:7715	620952	179	True				
ANR	621217	Statement	(	320:4:7721:7721	620952	180	True				
ANR	621218	Statement	b	320:5:7722:7722	620952	181	True				
ANR	621219	Statement	->	320:6:7723:7724	620952	182	True				
ANR	621220	Statement	perm	320:8:7725:7728	620952	183	True				
ANR	621221	Statement	&	320:13:7730:7730	620952	184	True				
ANR	621222	Statement	R_BP_PROT_WRITE	320:15:7732:7746	620952	185	True				
ANR	621223	Statement	)	320:30:7747:7747	620952	186	True				
ANR	621224	Statement	?	320:32:7749:7749	620952	187	True				
ANR	621225	Label	'w' :	320:34:7751:7755	620952	188	True				
ANR	621226	Statement	'-'	320:40:7757:7759	620952	189	True				
ANR	621227	Statement	","	320:43:7760:7760	620952	190	True				
ANR	621228	Statement	(	321:4:7766:7766	620952	191	True				
ANR	621229	Statement	b	321:5:7767:7767	620952	192	True				
ANR	621230	Statement	->	321:6:7768:7769	620952	193	True				
ANR	621231	Statement	perm	321:8:7770:7773	620952	194	True				
ANR	621232	Statement	&	321:13:7775:7775	620952	195	True				
ANR	621233	Statement	R_BP_PROT_EXEC	321:15:7777:7790	620952	196	True				
ANR	621234	Statement	)	321:29:7791:7791	620952	197	True				
ANR	621235	Statement	?	321:31:7793:7793	620952	198	True				
ANR	621236	Label	'x' :	321:33:7795:7799	620952	199	True				
ANR	621237	Statement	'-'	321:39:7801:7803	620952	200	True				
ANR	621238	Statement	","	321:42:7804:7804	620952	201	True				
ANR	621239	Statement	b	322:4:7810:7810	620952	202	True				
ANR	621240	Statement	->	322:5:7811:7812	620952	203	True				
ANR	621241	Statement	hw	322:7:7813:7814	620952	204	True				
ANR	621242	Statement	?	322:10:7816:7816	620952	205	True				
ANR	621243	Statement	"""true"""	322:12:7818:7823	620952	206	True				
ANR	621244	Statement	:	322:19:7825:7825	620952	207	True				
ANR	621245	Statement	"""false"""	322:21:7827:7833	620952	208	True				
ANR	621246	Statement	","	322:28:7834:7834	620952	209	True				
ANR	621247	Statement	b	323:4:7840:7840	620952	210	True				
ANR	621248	Statement	->	323:5:7841:7842	620952	211	True				
ANR	621249	Statement	trace	323:7:7843:7847	620952	212	True				
ANR	621250	Statement	?	323:13:7849:7849	620952	213	True				
ANR	621251	Statement	"""true"""	323:15:7851:7856	620952	214	True				
ANR	621252	Statement	:	323:22:7858:7858	620952	215	True				
ANR	621253	Statement	"""false"""	323:24:7860:7866	620952	216	True				
ANR	621254	Statement	","	323:31:7867:7867	620952	217	True				
ANR	621255	Statement	b	324:4:7873:7873	620952	218	True				
ANR	621256	Statement	->	324:5:7874:7875	620952	219	True				
ANR	621257	Statement	enabled	324:7:7876:7882	620952	220	True				
ANR	621258	Statement	?	324:15:7884:7884	620952	221	True				
ANR	621259	Statement	"""true"""	324:17:7886:7891	620952	222	True				
ANR	621260	Statement	:	324:24:7893:7893	620952	223	True				
ANR	621261	Statement	"""false"""	324:26:7895:7901	620952	224	True				
ANR	621262	Statement	","	324:33:7902:7902	620952	225	True				
ANR	621263	Statement	r_str_get2	325:4:7908:7917	620952	226	True				
ANR	621264	Statement	(	325:15:7919:7919	620952	227	True				
ANR	621265	Statement	b	325:16:7920:7920	620952	228	True				
ANR	621266	Statement	->	325:17:7921:7922	620952	229	True				
ANR	621267	Statement	data	325:19:7923:7926	620952	230	True				
ANR	621268	Statement	)	325:23:7927:7927	620952	231	True				
ANR	621269	Statement	","	325:24:7928:7928	620952	232	True				
ANR	621270	Statement	r_str_get2	326:4:7934:7943	620952	233	True				
ANR	621271	Statement	(	326:15:7945:7945	620952	234	True				
ANR	621272	Statement	b	326:16:7946:7946	620952	235	True				
ANR	621273	Statement	->	326:17:7947:7948	620952	236	True				
ANR	621274	Statement	cond	326:19:7949:7952	620952	237	True				
ANR	621275	Statement	)	326:23:7953:7953	620952	238	True				
ANR	621276	Statement	)	326:24:7954:7954	620952	239	True				
ANR	621277	ExpressionStatement		326:25:7955:7955	620952	240	True				
ANR	621278	BreakStatement	break ;	327:3:7960:7965	620952	241	True				
ANR	621279	ExpressionStatement	n ++	330:2:8036:8039	620952	1	True				
ANR	621280	PostIncDecOperationExpression	n ++		620952	0					
ANR	621281	Identifier	n		620952	0					
ANR	621282	IncDec	++		620952	1					
ANR	621283	IfStatement	if ( rad == 'j' )		620952	15					
ANR	621284	Condition	rad == 'j'	332:5:8049:8058	620952	0	True				
ANR	621285	EqualityExpression	rad == 'j'		620952	0		==			
ANR	621286	Identifier	rad		620952	0					
ANR	621287	PrimaryExpression	'j'		620952	1					
ANR	621288	CompoundStatement		61:17:1781:1781	620952	1					
ANR	621289	ExpressionStatement	"bp -> cb_printf ( ""]\\n"" )"	333:2:8065:8086	620952	0	True				
ANR	621290	CallExpression	"bp -> cb_printf ( ""]\\n"" )"		620952	0					
ANR	621291	Callee	bp -> cb_printf		620952	0					
ANR	621292	PtrMemberAccess	bp -> cb_printf		620952	0					
ANR	621293	Identifier	bp		620952	0					
ANR	621294	Identifier	cb_printf		620952	1					
ANR	621295	ArgumentList	"""]\\n"""		620952	1					
ANR	621296	Argument	"""]\\n"""		620952	0					
ANR	621297	PrimaryExpression	"""]\\n"""		620952	0					
ANR	621298	ReturnStatement	return n ;	335:1:8092:8100	620952	16	True				
ANR	621299	Identifier	n		620952	0					
ANR	621300	ReturnType	R_API int		620952	1					
ANR	621301	Identifier	r_bp_list		620952	2					
ANR	621302	ParameterList	"RBreakpoint * bp , int rad"		620952	3					
ANR	621303	Parameter	RBreakpoint * bp	272:20:6253:6267	620952	0	True				
ANR	621304	ParameterType	RBreakpoint *		620952	0					
ANR	621305	Identifier	bp		620952	1					
ANR	621306	Parameter	int rad	272:37:6270:6276	620952	1	True				
ANR	621307	ParameterType	int		620952	0					
ANR	621308	Identifier	rad		620952	1					
ANR	621309	CFGEntryNode	ENTRY		620952		True				
ANR	621310	CFGExitNode	EXIT		620952		True				
ANR	621311	Symbol	b		620952						
ANR	621312	Symbol	rad		620952						
ANR	621313	Symbol	iter		620952						
ANR	621314	Symbol	b -> module_name		620952						
ANR	621315	Symbol	* b		620952						
ANR	621316	Symbol	bp		620952						
ANR	621317	Symbol	n		620952						
ANR	621318	Function	r_bp_item_new	338:0:8105:8743							
ANR	621319	FunctionDef	r_bp_item_new (RBreakpoint * bp)		621318	0					
ANR	621320	CompoundStatement		338:55:8160:8743	621318	0					
ANR	621321	IdentifierDeclStatement	"int i , j ;"	339:1:8163:8171	621318	0	True				
ANR	621322	IdentifierDecl	i		621318	0					
ANR	621323	IdentifierDeclType	int		621318	0					
ANR	621324	Identifier	i		621318	1					
ANR	621325	IdentifierDecl	j		621318	1					
ANR	621326	IdentifierDeclType	int		621318	0					
ANR	621327	Identifier	j		621318	1					
ANR	621328	ForStatement	for ( i = 0 ; i < bp -> bps_idx_count ; i ++ )		621318	1					
ANR	621329	ForInit	i = 0 ;	341:6:8202:8207	621318	0	True				
ANR	621330	AssignmentExpression	i = 0		621318	0		=			
ANR	621331	Identifier	i		621318	0					
ANR	621332	PrimaryExpression	0		621318	1					
ANR	621333	Condition	i < bp -> bps_idx_count	341:13:8209:8229	621318	1	True				
ANR	621334	RelationalExpression	i < bp -> bps_idx_count		621318	0		<			
ANR	621335	Identifier	i		621318	0					
ANR	621336	PtrMemberAccess	bp -> bps_idx_count		621318	1					
ANR	621337	Identifier	bp		621318	0					
ANR	621338	Identifier	bps_idx_count		621318	1					
ANR	621339	PostIncDecOperationExpression	i ++	341:36:8232:8234	621318	2	True				
ANR	621340	Identifier	i		621318	0					
ANR	621341	IncDec	++		621318	1					
ANR	621342	CompoundStatement		4:41:76:76	621318	3					
ANR	621343	IfStatement	if ( ! bp -> bps_idx [ i ] )		621318	0					
ANR	621344	Condition	! bp -> bps_idx [ i ]	342:6:8245:8259	621318	0	True				
ANR	621345	UnaryOperationExpression	! bp -> bps_idx [ i ]		621318	0					
ANR	621346	UnaryOperator	!		621318	0					
ANR	621347	ArrayIndexing	bp -> bps_idx [ i ]		621318	1					
ANR	621348	PtrMemberAccess	bp -> bps_idx		621318	0					
ANR	621349	Identifier	bp		621318	0					
ANR	621350	Identifier	bps_idx		621318	1					
ANR	621351	Identifier	i		621318	1					
ANR	621352	CompoundStatement		5:23:101:101	621318	1					
ANR	621353	GotoStatement	goto return_slot ;	343:3:8267:8283	621318	0	True				
ANR	621354	Identifier	return_slot		621318	0					
ANR	621355	ExpressionStatement	bp -> bps_idx_count += 16	347:1:8318:8341	621318	2	True				
ANR	621356	AssignmentExpression	bp -> bps_idx_count += 16		621318	0		+=			
ANR	621357	PtrMemberAccess	bp -> bps_idx_count		621318	0					
ANR	621358	Identifier	bp		621318	0					
ANR	621359	Identifier	bps_idx_count		621318	1					
ANR	621360	PrimaryExpression	16		621318	1					
ANR	621361	IdentifierDeclStatement	"RBreakpointItem * * newbps = realloc ( bp -> bps_idx , bp -> bps_idx_count * sizeof ( RBreakpointItem * ) ) ;"	348:1:8378:8473	621318	3	True				
ANR	621362	IdentifierDecl	"* * newbps = realloc ( bp -> bps_idx , bp -> bps_idx_count * sizeof ( RBreakpointItem * ) )"		621318	0					
ANR	621363	IdentifierDeclType	RBreakpointItem * *		621318	0					
ANR	621364	Identifier	newbps		621318	1					
ANR	621365	AssignmentExpression	"* * newbps = realloc ( bp -> bps_idx , bp -> bps_idx_count * sizeof ( RBreakpointItem * ) )"		621318	2		=			
ANR	621366	Identifier	newbps		621318	0					
ANR	621367	CallExpression	"realloc ( bp -> bps_idx , bp -> bps_idx_count * sizeof ( RBreakpointItem * ) )"		621318	1					
ANR	621368	Callee	realloc		621318	0					
ANR	621369	Identifier	realloc		621318	0					
ANR	621370	ArgumentList	bp -> bps_idx		621318	1					
ANR	621371	Argument	bp -> bps_idx		621318	0					
ANR	621372	PtrMemberAccess	bp -> bps_idx		621318	0					
ANR	621373	Identifier	bp		621318	0					
ANR	621374	Identifier	bps_idx		621318	1					
ANR	621375	Argument	bp -> bps_idx_count * sizeof ( RBreakpointItem * )		621318	1					
ANR	621376	MultiplicativeExpression	bp -> bps_idx_count * sizeof ( RBreakpointItem * )		621318	0		*			
ANR	621377	PtrMemberAccess	bp -> bps_idx_count		621318	0					
ANR	621378	Identifier	bp		621318	0					
ANR	621379	Identifier	bps_idx_count		621318	1					
ANR	621380	SizeofExpression	sizeof ( RBreakpointItem * )		621318	1					
ANR	621381	Sizeof	sizeof		621318	0					
ANR	621382	SizeofOperand	RBreakpointItem *		621318	1					
ANR	621383	IfStatement	if ( newbps )		621318	4					
ANR	621384	Condition	newbps	349:5:8480:8485	621318	0	True				
ANR	621385	Identifier	newbps		621318	0					
ANR	621386	CompoundStatement		12:13:327:327	621318	1					
ANR	621387	ExpressionStatement	bp -> bps_idx = newbps	350:2:8492:8512	621318	0	True				
ANR	621388	AssignmentExpression	bp -> bps_idx = newbps		621318	0		=			
ANR	621389	PtrMemberAccess	bp -> bps_idx		621318	0					
ANR	621390	Identifier	bp		621318	0					
ANR	621391	Identifier	bps_idx		621318	1					
ANR	621392	Identifier	newbps		621318	1					
ANR	621393	ElseStatement	else		621318	0					
ANR	621394	CompoundStatement		14:8:361:361	621318	0					
ANR	621395	ExpressionStatement	bp -> bps_idx_count -= 16	352:2:8526:8549	621318	0	True				
ANR	621396	AssignmentExpression	bp -> bps_idx_count -= 16		621318	0		-=			
ANR	621397	PtrMemberAccess	bp -> bps_idx_count		621318	0					
ANR	621398	Identifier	bp		621318	0					
ANR	621399	Identifier	bps_idx_count		621318	1					
ANR	621400	PrimaryExpression	16		621318	1					
ANR	621401	ForStatement	for ( j = i ; j < bp -> bps_idx_count ; j ++ )		621318	5					
ANR	621402	ForInit	j = i ;	354:6:8594:8599	621318	0	True				
ANR	621403	AssignmentExpression	j = i		621318	0		=			
ANR	621404	Identifier	j		621318	0					
ANR	621405	Identifier	i		621318	1					
ANR	621406	Condition	j < bp -> bps_idx_count	354:13:8601:8621	621318	1	True				
ANR	621407	RelationalExpression	j < bp -> bps_idx_count		621318	0		<			
ANR	621408	Identifier	j		621318	0					
ANR	621409	PtrMemberAccess	bp -> bps_idx_count		621318	1					
ANR	621410	Identifier	bp		621318	0					
ANR	621411	Identifier	bps_idx_count		621318	1					
ANR	621412	PostIncDecOperationExpression	j ++	354:36:8624:8626	621318	2	True				
ANR	621413	Identifier	j		621318	0					
ANR	621414	IncDec	++		621318	1					
ANR	621415	CompoundStatement		17:41:468:468	621318	3					
ANR	621416	ExpressionStatement	bp -> bps_idx [ j ] = NULL	355:2:8633:8654	621318	0	True				
ANR	621417	AssignmentExpression	bp -> bps_idx [ j ] = NULL		621318	0		=			
ANR	621418	ArrayIndexing	bp -> bps_idx [ j ]		621318	0					
ANR	621419	PtrMemberAccess	bp -> bps_idx		621318	0					
ANR	621420	Identifier	bp		621318	0					
ANR	621421	Identifier	bps_idx		621318	1					
ANR	621422	Identifier	j		621318	1					
ANR	621423	Identifier	NULL		621318	1					
ANR	621424	Label	return_slot :	357:0:8659:8670	621318	6	True				
ANR	621425	Identifier	return_slot		621318	0					
ANR	621426	ReturnStatement	return ( bp -> bps_idx [ i ] = R_NEW0 ( RBreakpointItem ) ) ;	359:1:8691:8741	621318	7	True				
ANR	621427	AssignmentExpression	bp -> bps_idx [ i ] = R_NEW0 ( RBreakpointItem )		621318	0		=			
ANR	621428	ArrayIndexing	bp -> bps_idx [ i ]		621318	0					
ANR	621429	PtrMemberAccess	bp -> bps_idx		621318	0					
ANR	621430	Identifier	bp		621318	0					
ANR	621431	Identifier	bps_idx		621318	1					
ANR	621432	Identifier	i		621318	1					
ANR	621433	CallExpression	R_NEW0 ( RBreakpointItem )		621318	1					
ANR	621434	Callee	R_NEW0		621318	0					
ANR	621435	Identifier	R_NEW0		621318	0					
ANR	621436	ArgumentList	RBreakpointItem		621318	1					
ANR	621437	Argument	RBreakpointItem		621318	0					
ANR	621438	Identifier	RBreakpointItem		621318	0					
ANR	621439	ReturnType	R_API RBreakpointItem *		621318	1					
ANR	621440	Identifier	r_bp_item_new		621318	2					
ANR	621441	ParameterList	RBreakpoint * bp		621318	3					
ANR	621442	Parameter	RBreakpoint * bp	338:38:8143:8157	621318	0	True				
ANR	621443	ParameterType	RBreakpoint *		621318	0					
ANR	621444	Identifier	bp		621318	1					
ANR	621445	CFGEntryNode	ENTRY		621318		True				
ANR	621446	CFGExitNode	EXIT		621318		True				
ANR	621447	Symbol	* bp -> bps_idx		621318						
ANR	621448	Symbol	NULL		621318						
ANR	621449	Symbol	i		621318						
ANR	621450	Symbol	j		621318						
ANR	621451	Symbol	bp -> bps_idx_count		621318						
ANR	621452	Symbol	realloc		621318						
ANR	621453	Symbol	RBreakpointItem		621318						
ANR	621454	Symbol	bp		621318						
ANR	621455	Symbol	R_NEW0		621318						
ANR	621456	Symbol	* i		621318						
ANR	621457	Symbol	* j		621318						
ANR	621458	Symbol	* bp		621318						
ANR	621459	Symbol	* * bp		621318						
ANR	621460	Symbol	bp -> bps_idx		621318						
ANR	621461	Symbol	newbps		621318						
ANR	621462	Function	r_bp_get_index	362:0:8746:8900							
ANR	621463	FunctionDef	"r_bp_get_index (RBreakpoint * bp , int idx)"		621462	0					
ANR	621464	CompoundStatement		362:64:8810:8900	621462	0					
ANR	621465	IfStatement	if ( idx >= 0 && idx < bp -> bps_idx_count )		621462	0					
ANR	621466	Condition	idx >= 0 && idx < bp -> bps_idx_count	363:5:8817:8851	621462	0	True				
ANR	621467	AndExpression	idx >= 0 && idx < bp -> bps_idx_count		621462	0		&&			
ANR	621468	RelationalExpression	idx >= 0		621462	0		>=			
ANR	621469	Identifier	idx		621462	0					
ANR	621470	PrimaryExpression	0		621462	1					
ANR	621471	RelationalExpression	idx < bp -> bps_idx_count		621462	1		<			
ANR	621472	Identifier	idx		621462	0					
ANR	621473	PtrMemberAccess	bp -> bps_idx_count		621462	1					
ANR	621474	Identifier	bp		621462	0					
ANR	621475	Identifier	bps_idx_count		621462	1					
ANR	621476	CompoundStatement		2:42:43:43	621462	1					
ANR	621477	ReturnStatement	return bp -> bps_idx [ idx ] ;	364:2:8858:8881	621462	0	True				
ANR	621478	ArrayIndexing	bp -> bps_idx [ idx ]		621462	0					
ANR	621479	PtrMemberAccess	bp -> bps_idx		621462	0					
ANR	621480	Identifier	bp		621462	0					
ANR	621481	Identifier	bps_idx		621462	1					
ANR	621482	Identifier	idx		621462	1					
ANR	621483	ReturnStatement	return NULL ;	366:1:8887:8898	621462	1	True				
ANR	621484	Identifier	NULL		621462	0					
ANR	621485	ReturnType	R_API RBreakpointItem *		621462	1					
ANR	621486	Identifier	r_bp_get_index		621462	2					
ANR	621487	ParameterList	"RBreakpoint * bp , int idx"		621462	3					
ANR	621488	Parameter	RBreakpoint * bp	362:38:8784:8798	621462	0	True				
ANR	621489	ParameterType	RBreakpoint *		621462	0					
ANR	621490	Identifier	bp		621462	1					
ANR	621491	Parameter	int idx	362:55:8801:8807	621462	1	True				
ANR	621492	ParameterType	int		621462	0					
ANR	621493	Identifier	idx		621462	1					
ANR	621494	CFGEntryNode	ENTRY		621462		True				
ANR	621495	CFGExitNode	EXIT		621462		True				
ANR	621496	Symbol	* bp -> bps_idx		621462						
ANR	621497	Symbol	NULL		621462						
ANR	621498	Symbol	* bp		621462						
ANR	621499	Symbol	* * bp		621462						
ANR	621500	Symbol	* idx		621462						
ANR	621501	Symbol	bp -> bps_idx_count		621462						
ANR	621502	Symbol	idx		621462						
ANR	621503	Symbol	bp -> bps_idx		621462						
ANR	621504	Symbol	bp		621462						
ANR	621505	Function	r_bp_get_index_at	369:0:8903:9100							
ANR	621506	FunctionDef	"r_bp_get_index_at (RBreakpoint * bp , ut64 addr)"		621505	0					
ANR	621507	CompoundStatement		369:57:8960:9100	621505	0					
ANR	621508	IdentifierDeclStatement	int i ;	370:1:8963:8968	621505	0	True				
ANR	621509	IdentifierDecl	i		621505	0					
ANR	621510	IdentifierDeclType	int		621505	0					
ANR	621511	Identifier	i		621505	1					
ANR	621512	ForStatement	for ( i = 0 ; i < bp -> bps_idx_count ; i ++ )		621505	1					
ANR	621513	ForInit	i = 0 ;	371:6:8976:8981	621505	0	True				
ANR	621514	AssignmentExpression	i = 0		621505	0		=			
ANR	621515	Identifier	i		621505	0					
ANR	621516	PrimaryExpression	0		621505	1					
ANR	621517	Condition	i < bp -> bps_idx_count	371:13:8983:9002	621505	1	True				
ANR	621518	RelationalExpression	i < bp -> bps_idx_count		621505	0		<			
ANR	621519	Identifier	i		621505	0					
ANR	621520	PtrMemberAccess	bp -> bps_idx_count		621505	1					
ANR	621521	Identifier	bp		621505	0					
ANR	621522	Identifier	bps_idx_count		621505	1					
ANR	621523	PostIncDecOperationExpression	i ++	371:35:9005:9007	621505	2	True				
ANR	621524	Identifier	i		621505	0					
ANR	621525	IncDec	++		621505	1					
ANR	621526	CompoundStatement		3:40:49:49	621505	3					
ANR	621527	IfStatement	if ( bp -> bps_idx [ i ] && bp -> bps_idx [ i ] -> addr == addr )		621505	0					
ANR	621528	Condition	bp -> bps_idx [ i ] && bp -> bps_idx [ i ] -> addr == addr	372:6:9018:9063	621505	0	True				
ANR	621529	AndExpression	bp -> bps_idx [ i ] && bp -> bps_idx [ i ] -> addr == addr		621505	0		&&			
ANR	621530	ArrayIndexing	bp -> bps_idx [ i ]		621505	0					
ANR	621531	PtrMemberAccess	bp -> bps_idx		621505	0					
ANR	621532	Identifier	bp		621505	0					
ANR	621533	Identifier	bps_idx		621505	1					
ANR	621534	Identifier	i		621505	1					
ANR	621535	EqualityExpression	bp -> bps_idx [ i ] -> addr == addr		621505	1		==			
ANR	621536	PtrMemberAccess	bp -> bps_idx [ i ] -> addr		621505	0					
ANR	621537	ArrayIndexing	bp -> bps_idx [ i ]		621505	0					
ANR	621538	PtrMemberAccess	bp -> bps_idx		621505	0					
ANR	621539	Identifier	bp		621505	0					
ANR	621540	Identifier	bps_idx		621505	1					
ANR	621541	Identifier	i		621505	1					
ANR	621542	Identifier	addr		621505	1					
ANR	621543	Identifier	addr		621505	1					
ANR	621544	CompoundStatement		4:54:105:105	621505	1					
ANR	621545	ReturnStatement	return i ;	373:3:9071:9079	621505	0	True				
ANR	621546	Identifier	i		621505	0					
ANR	621547	ReturnStatement	return - 1 ;	376:1:9089:9098	621505	2	True				
ANR	621548	UnaryOperationExpression	- 1		621505	0					
ANR	621549	UnaryOperator	-		621505	0					
ANR	621550	PrimaryExpression	1		621505	1					
ANR	621551	ReturnType	R_API int		621505	1					
ANR	621552	Identifier	r_bp_get_index_at		621505	2					
ANR	621553	ParameterList	"RBreakpoint * bp , ut64 addr"		621505	3					
ANR	621554	Parameter	RBreakpoint * bp	369:29:8932:8946	621505	0	True				
ANR	621555	ParameterType	RBreakpoint *		621505	0					
ANR	621556	Identifier	bp		621505	1					
ANR	621557	Parameter	ut64 addr	369:46:8949:8957	621505	1	True				
ANR	621558	ParameterType	ut64		621505	0					
ANR	621559	Identifier	addr		621505	1					
ANR	621560	CFGEntryNode	ENTRY		621505		True				
ANR	621561	CFGExitNode	EXIT		621505		True				
ANR	621562	Symbol	* * i		621505						
ANR	621563	Symbol	bp -> bps_idx [ i ] -> addr		621505						
ANR	621564	Symbol	* bp -> bps_idx		621505						
ANR	621565	Symbol	i		621505						
ANR	621566	Symbol	* * * bp		621505						
ANR	621567	Symbol	bp -> bps_idx_count		621505						
ANR	621568	Symbol	bp		621505						
ANR	621569	Symbol	* i		621505						
ANR	621570	Symbol	* * bp -> bps_idx		621505						
ANR	621571	Symbol	* bp		621505						
ANR	621572	Symbol	* * bp		621505						
ANR	621573	Symbol	addr		621505						
ANR	621574	Symbol	bp -> bps_idx		621505						
ANR	621575	Function	r_bp_del_index	379:0:9103:9312							
ANR	621576	FunctionDef	"r_bp_del_index (RBreakpoint * bp , int idx)"		621575	0					
ANR	621577	CompoundStatement		379:51:9154:9312	621575	0					
ANR	621578	IfStatement	if ( idx >= 0 && idx < bp -> bps_idx_count )		621575	0					
ANR	621579	Condition	idx >= 0 && idx < bp -> bps_idx_count	380:5:9161:9195	621575	0	True				
ANR	621580	AndExpression	idx >= 0 && idx < bp -> bps_idx_count		621575	0		&&			
ANR	621581	RelationalExpression	idx >= 0		621575	0		>=			
ANR	621582	Identifier	idx		621575	0					
ANR	621583	PrimaryExpression	0		621575	1					
ANR	621584	RelationalExpression	idx < bp -> bps_idx_count		621575	1		<			
ANR	621585	Identifier	idx		621575	0					
ANR	621586	PtrMemberAccess	bp -> bps_idx_count		621575	1					
ANR	621587	Identifier	bp		621575	0					
ANR	621588	Identifier	bps_idx_count		621575	1					
ANR	621589	CompoundStatement		2:42:43:43	621575	1					
ANR	621590	ExpressionStatement	"r_list_delete_data ( bp -> bps , bp -> bps_idx [ idx ] )"	381:2:9202:9248	621575	0	True				
ANR	621591	CallExpression	"r_list_delete_data ( bp -> bps , bp -> bps_idx [ idx ] )"		621575	0					
ANR	621592	Callee	r_list_delete_data		621575	0					
ANR	621593	Identifier	r_list_delete_data		621575	0					
ANR	621594	ArgumentList	bp -> bps		621575	1					
ANR	621595	Argument	bp -> bps		621575	0					
ANR	621596	PtrMemberAccess	bp -> bps		621575	0					
ANR	621597	Identifier	bp		621575	0					
ANR	621598	Identifier	bps		621575	1					
ANR	621599	Argument	bp -> bps_idx [ idx ]		621575	1					
ANR	621600	ArrayIndexing	bp -> bps_idx [ idx ]		621575	0					
ANR	621601	PtrMemberAccess	bp -> bps_idx		621575	0					
ANR	621602	Identifier	bp		621575	0					
ANR	621603	Identifier	bps_idx		621575	1					
ANR	621604	Identifier	idx		621575	1					
ANR	621605	ExpressionStatement	R_FREE ( bp -> bps_idx [ idx ] )	382:2:9252:9277	621575	1	True				
ANR	621606	CallExpression	R_FREE ( bp -> bps_idx [ idx ] )		621575	0					
ANR	621607	Callee	R_FREE		621575	0					
ANR	621608	Identifier	R_FREE		621575	0					
ANR	621609	ArgumentList	bp -> bps_idx [ idx ]		621575	1					
ANR	621610	Argument	bp -> bps_idx [ idx ]		621575	0					
ANR	621611	ArrayIndexing	bp -> bps_idx [ idx ]		621575	0					
ANR	621612	PtrMemberAccess	bp -> bps_idx		621575	0					
ANR	621613	Identifier	bp		621575	0					
ANR	621614	Identifier	bps_idx		621575	1					
ANR	621615	Identifier	idx		621575	1					
ANR	621616	ReturnStatement	return true ;	383:2:9281:9292	621575	2	True				
ANR	621617	Identifier	true		621575	0					
ANR	621618	ReturnStatement	return false ;	385:1:9298:9310	621575	1	True				
ANR	621619	Identifier	false		621575	0					
ANR	621620	ReturnType	R_API int		621575	1					
ANR	621621	Identifier	r_bp_del_index		621575	2					
ANR	621622	ParameterList	"RBreakpoint * bp , int idx"		621575	3					
ANR	621623	Parameter	RBreakpoint * bp	379:25:9128:9142	621575	0	True				
ANR	621624	ParameterType	RBreakpoint *		621575	0					
ANR	621625	Identifier	bp		621575	1					
ANR	621626	Parameter	int idx	379:42:9145:9151	621575	1	True				
ANR	621627	ParameterType	int		621575	0					
ANR	621628	Identifier	idx		621575	1					
ANR	621629	CFGEntryNode	ENTRY		621575		True				
ANR	621630	CFGExitNode	EXIT		621575		True				
ANR	621631	Symbol	* bp -> bps_idx		621575						
ANR	621632	Symbol	* bp		621575						
ANR	621633	Symbol	* idx		621575						
ANR	621634	Symbol	* * bp		621575						
ANR	621635	Symbol	true		621575						
ANR	621636	Symbol	false		621575						
ANR	621637	Symbol	bp -> bps		621575						
ANR	621638	Symbol	bp -> bps_idx_count		621575						
ANR	621639	Symbol	idx		621575						
ANR	621640	Symbol	bp -> bps_idx		621575						
ANR	621641	Symbol	bp		621575						
ANR	621642	Function	r_bp_size	388:0:9315:9644							
ANR	621643	FunctionDef	r_bp_size (RBreakpoint * bp)		621642	0					
ANR	621644	CompoundStatement		388:37:9352:9644	621642	0					
ANR	621645	IdentifierDeclStatement	RBreakpointArch * bpa ;	389:1:9355:9375	621642	0	True				
ANR	621646	IdentifierDecl	* bpa		621642	0					
ANR	621647	IdentifierDeclType	RBreakpointArch *		621642	0					
ANR	621648	Identifier	bpa		621642	1					
ANR	621649	IdentifierDeclStatement	"int i , bpsize = 8 ;"	390:1:9378:9395	621642	1	True				
ANR	621650	IdentifierDecl	i		621642	0					
ANR	621651	IdentifierDeclType	int		621642	0					
ANR	621652	Identifier	i		621642	1					
ANR	621653	IdentifierDecl	bpsize = 8		621642	1					
ANR	621654	IdentifierDeclType	int		621642	0					
ANR	621655	Identifier	bpsize		621642	1					
ANR	621656	AssignmentExpression	bpsize = 8		621642	2		=			
ANR	621657	Identifier	bpsize		621642	0					
ANR	621658	PrimaryExpression	8		621642	1					
ANR	621659	IfStatement	if ( ! bp || ! bp -> cur )		621642	2					
ANR	621660	Condition	! bp || ! bp -> cur	391:5:9402:9416	621642	0	True				
ANR	621661	OrExpression	! bp || ! bp -> cur		621642	0		||			
ANR	621662	UnaryOperationExpression	! bp		621642	0					
ANR	621663	UnaryOperator	!		621642	0					
ANR	621664	Identifier	bp		621642	1					
ANR	621665	UnaryOperationExpression	! bp -> cur		621642	1					
ANR	621666	UnaryOperator	!		621642	0					
ANR	621667	PtrMemberAccess	bp -> cur		621642	1					
ANR	621668	Identifier	bp		621642	0					
ANR	621669	Identifier	cur		621642	1					
ANR	621670	CompoundStatement		4:22:66:66	621642	1					
ANR	621671	ReturnStatement	return 0 ;	392:2:9423:9431	621642	0	True				
ANR	621672	PrimaryExpression	0		621642	0					
ANR	621673	ForStatement	for ( i = 0 ; bp -> cur -> bps [ i ] . bytes ; i ++ )		621642	3					
ANR	621674	ForInit	i = 0 ;	394:6:9442:9447	621642	0	True				
ANR	621675	AssignmentExpression	i = 0		621642	0		=			
ANR	621676	Identifier	i		621642	0					
ANR	621677	PrimaryExpression	0		621642	1					
ANR	621678	Condition	bp -> cur -> bps [ i ] . bytes	394:13:9449:9469	621642	1	True				
ANR	621679	MemberAccess	bp -> cur -> bps [ i ] . bytes		621642	0					
ANR	621680	ArrayIndexing	bp -> cur -> bps [ i ]		621642	0					
ANR	621681	PtrMemberAccess	bp -> cur -> bps		621642	0					
ANR	621682	PtrMemberAccess	bp -> cur		621642	0					
ANR	621683	Identifier	bp		621642	0					
ANR	621684	Identifier	cur		621642	1					
ANR	621685	Identifier	bps		621642	1					
ANR	621686	Identifier	i		621642	1					
ANR	621687	Identifier	bytes		621642	1					
ANR	621688	PostIncDecOperationExpression	i ++	394:36:9472:9474	621642	2	True				
ANR	621689	Identifier	i		621642	0					
ANR	621690	IncDec	++		621642	1					
ANR	621691	CompoundStatement		7:41:124:124	621642	3					
ANR	621692	ExpressionStatement	bpa = & bp -> cur -> bps [ i ]	395:2:9481:9503	621642	0	True				
ANR	621693	AssignmentExpression	bpa = & bp -> cur -> bps [ i ]		621642	0		=			
ANR	621694	Identifier	bpa		621642	0					
ANR	621695	UnaryOperationExpression	& bp -> cur -> bps [ i ]		621642	1					
ANR	621696	UnaryOperator	&		621642	0					
ANR	621697	ArrayIndexing	bp -> cur -> bps [ i ]		621642	1					
ANR	621698	PtrMemberAccess	bp -> cur -> bps		621642	0					
ANR	621699	PtrMemberAccess	bp -> cur		621642	0					
ANR	621700	Identifier	bp		621642	0					
ANR	621701	Identifier	cur		621642	1					
ANR	621702	Identifier	bps		621642	1					
ANR	621703	Identifier	i		621642	1					
ANR	621704	IfStatement	if ( bpa -> bits && bpa -> bits != bp -> bits )		621642	1					
ANR	621705	Condition	bpa -> bits && bpa -> bits != bp -> bits	396:6:9511:9544	621642	0	True				
ANR	621706	AndExpression	bpa -> bits && bpa -> bits != bp -> bits		621642	0		&&			
ANR	621707	PtrMemberAccess	bpa -> bits		621642	0					
ANR	621708	Identifier	bpa		621642	0					
ANR	621709	Identifier	bits		621642	1					
ANR	621710	EqualityExpression	bpa -> bits != bp -> bits		621642	1		!=			
ANR	621711	PtrMemberAccess	bpa -> bits		621642	0					
ANR	621712	Identifier	bpa		621642	0					
ANR	621713	Identifier	bits		621642	1					
ANR	621714	PtrMemberAccess	bp -> bits		621642	1					
ANR	621715	Identifier	bp		621642	0					
ANR	621716	Identifier	bits		621642	1					
ANR	621717	CompoundStatement		9:42:194:194	621642	1					
ANR	621718	ContinueStatement	continue ;	397:3:9552:9560	621642	0	True				
ANR	621719	IfStatement	if ( bpa -> length < bpsize )		621642	2					
ANR	621720	Condition	bpa -> length < bpsize	399:6:9572:9591	621642	0	True				
ANR	621721	RelationalExpression	bpa -> length < bpsize		621642	0		<			
ANR	621722	PtrMemberAccess	bpa -> length		621642	0					
ANR	621723	Identifier	bpa		621642	0					
ANR	621724	Identifier	length		621642	1					
ANR	621725	Identifier	bpsize		621642	1					
ANR	621726	CompoundStatement		12:28:241:241	621642	1					
ANR	621727	ExpressionStatement	bpsize = bpa -> length	400:3:9599:9619	621642	0	True				
ANR	621728	AssignmentExpression	bpsize = bpa -> length		621642	0		=			
ANR	621729	Identifier	bpsize		621642	0					
ANR	621730	PtrMemberAccess	bpa -> length		621642	1					
ANR	621731	Identifier	bpa		621642	0					
ANR	621732	Identifier	length		621642	1					
ANR	621733	ReturnStatement	return bpsize ;	403:1:9629:9642	621642	4	True				
ANR	621734	Identifier	bpsize		621642	0					
ANR	621735	ReturnType	R_API int		621642	1					
ANR	621736	Identifier	r_bp_size		621642	2					
ANR	621737	ParameterList	RBreakpoint * bp		621642	3					
ANR	621738	Parameter	RBreakpoint * bp	388:20:9335:9349	621642	0	True				
ANR	621739	ParameterType	RBreakpoint *		621642	0					
ANR	621740	Identifier	bp		621642	1					
ANR	621741	CFGEntryNode	ENTRY		621642		True				
ANR	621742	CFGExitNode	EXIT		621642		True				
ANR	621743	Symbol	bp -> cur		621642						
ANR	621744	Symbol	bp -> cur -> bps		621642						
ANR	621745	Symbol	* bpa		621642						
ANR	621746	Symbol	i		621642						
ANR	621747	Symbol	* * * bp		621642						
ANR	621748	Symbol	bp -> bits		621642						
ANR	621749	Symbol	bp		621642						
ANR	621750	Symbol	bp -> cur -> bps [ i ] . bytes		621642						
ANR	621751	Symbol	bpa		621642						
ANR	621752	Symbol	* i		621642						
ANR	621753	Symbol	bpsize		621642						
ANR	621754	Symbol	bpa -> length		621642						
ANR	621755	Symbol	* bp -> cur -> bps		621642						
ANR	621756	Symbol	* bp		621642						
ANR	621757	Symbol	* * bp		621642						
ANR	621758	Symbol	* bp -> cur		621642						
ANR	621759	Symbol	* * bp -> cur		621642						
ANR	621760	Symbol	bpa -> bits		621642						
