command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	632102	File	data/converged/CVE-2019-16718~_radare2/buf_sparse.c								
ANR	632103	ClassDef	buf_sparse_priv	3:0:21:76							
ANR	632104	DeclStmt									
ANR	632105	Decl							RList	RList *	sparse
ANR	632106	DeclStmt									
ANR	632107	Decl							ut64	ut64	offset
ANR	632108	Function	buffer_sparse_free	8:0:80:190							
ANR	632109	FunctionDef	buffer_sparse_free (void * a)		632108	0					
ANR	632110	CompoundStatement		8:40:120:190	632108	0					
ANR	632111	IdentifierDeclStatement	RBufferSparse * s = ( RBufferSparse * ) a ;	9:1:123:160	632108	0	True				
ANR	632112	IdentifierDecl	* s = ( RBufferSparse * ) a		632108	0					
ANR	632113	IdentifierDeclType	RBufferSparse *		632108	0					
ANR	632114	Identifier	s		632108	1					
ANR	632115	AssignmentExpression	* s = ( RBufferSparse * ) a		632108	2		=			
ANR	632116	Identifier	s		632108	0					
ANR	632117	CastExpression	( RBufferSparse * ) a		632108	1					
ANR	632118	CastTarget	RBufferSparse *		632108	0					
ANR	632119	Identifier	a		632108	1					
ANR	632120	ExpressionStatement	free ( s -> data )	10:1:163:177	632108	1	True				
ANR	632121	CallExpression	free ( s -> data )		632108	0					
ANR	632122	Callee	free		632108	0					
ANR	632123	Identifier	free		632108	0					
ANR	632124	ArgumentList	s -> data		632108	1					
ANR	632125	Argument	s -> data		632108	0					
ANR	632126	PtrMemberAccess	s -> data		632108	0					
ANR	632127	Identifier	s		632108	0					
ANR	632128	Identifier	data		632108	1					
ANR	632129	ExpressionStatement	free ( s )	11:1:180:188	632108	2	True				
ANR	632130	CallExpression	free ( s )		632108	0					
ANR	632131	Callee	free		632108	0					
ANR	632132	Identifier	free		632108	0					
ANR	632133	ArgumentList	s		632108	1					
ANR	632134	Argument	s		632108	0					
ANR	632135	Identifier	s		632108	0					
ANR	632136	ReturnType	static void		632108	1					
ANR	632137	Identifier	buffer_sparse_free		632108	2					
ANR	632138	ParameterList	void * a		632108	3					
ANR	632139	Parameter	void * a	8:31:111:117	632108	0	True				
ANR	632140	ParameterType	void *		632108	0					
ANR	632141	Identifier	a		632108	1					
ANR	632142	CFGEntryNode	ENTRY		632108		True				
ANR	632143	CFGExitNode	EXIT		632108		True				
ANR	632144	Symbol	a		632108						
ANR	632145	Symbol	s		632108						
ANR	632146	Symbol	s -> data		632108						
ANR	632147	Symbol	* s		632108						
ANR	632148	Function	sparse_limits	14:0:193:479							
ANR	632149	FunctionDef	"sparse_limits (RList * l , ut64 * max)"		632148	0					
ANR	632150	CompoundStatement		14:47:240:479	632148	0					
ANR	632151	IdentifierDeclStatement	bool set = false ;	15:1:243:259	632148	0	True				
ANR	632152	IdentifierDecl	set = false		632148	0					
ANR	632153	IdentifierDeclType	bool		632148	0					
ANR	632154	Identifier	set		632148	1					
ANR	632155	AssignmentExpression	set = false		632148	2		=			
ANR	632156	Identifier	false		632148	0					
ANR	632157	Identifier	false		632148	1					
ANR	632158	IdentifierDeclStatement	RBufferSparse * s ;	16:1:262:278	632148	1	True				
ANR	632159	IdentifierDecl	* s		632148	0					
ANR	632160	IdentifierDeclType	RBufferSparse *		632148	0					
ANR	632161	Identifier	s		632148	1					
ANR	632162	IdentifierDeclStatement	RListIter * iter ;	17:1:281:296	632148	2	True				
ANR	632163	IdentifierDecl	* iter		632148	0					
ANR	632164	IdentifierDeclType	RListIter *		632148	0					
ANR	632165	Identifier	iter		632148	1					
ANR	632166	Statement	r_list_foreach	19:1:300:313	632148	3	True				
ANR	632167	Statement	(	19:16:315:315	632148	4	True				
ANR	632168	Statement	l	19:17:316:316	632148	5	True				
ANR	632169	Statement	","	19:18:317:317	632148	6	True				
ANR	632170	Statement	iter	19:20:319:322	632148	7	True				
ANR	632171	Statement	","	19:24:323:323	632148	8	True				
ANR	632172	Statement	s	19:26:325:325	632148	9	True				
ANR	632173	Statement	)	19:27:326:326	632148	10	True				
ANR	632174	CompoundStatement		6:29:87:87	632148	11					
ANR	632175	IfStatement	if ( set )		632148	0					
ANR	632176	Condition	set	20:6:336:338	632148	0	True				
ANR	632177	Identifier	set		632148	0					
ANR	632178	CompoundStatement		7:11:100:100	632148	1					
ANR	632179	IfStatement	if ( max && s -> to > * max )		632148	0					
ANR	632180	Condition	max && s -> to > * max	21:7:350:368	632148	0	True				
ANR	632181	AndExpression	max && s -> to > * max		632148	0		&&			
ANR	632182	Identifier	max		632148	0					
ANR	632183	RelationalExpression	s -> to > * max		632148	1		>			
ANR	632184	PtrMemberAccess	s -> to		632148	0					
ANR	632185	Identifier	s		632148	0					
ANR	632186	Identifier	to		632148	1					
ANR	632187	UnaryOperationExpression	* max		632148	1					
ANR	632188	UnaryOperator	*		632148	0					
ANR	632189	Identifier	max		632148	1					
ANR	632190	CompoundStatement		8:28:130:130	632148	1					
ANR	632191	ExpressionStatement	* max = s -> to	22:4:377:389	632148	0	True				
ANR	632192	AssignmentExpression	* max = s -> to		632148	0		=			
ANR	632193	UnaryOperationExpression	* max		632148	0					
ANR	632194	UnaryOperator	*		632148	0					
ANR	632195	Identifier	max		632148	1					
ANR	632196	PtrMemberAccess	s -> to		632148	1					
ANR	632197	Identifier	s		632148	0					
ANR	632198	Identifier	to		632148	1					
ANR	632199	ElseStatement	else		632148	0					
ANR	632200	CompoundStatement		11:9:164:164	632148	0					
ANR	632201	ExpressionStatement	set = true	25:3:410:420	632148	0	True				
ANR	632202	AssignmentExpression	set = true		632148	0		=			
ANR	632203	Identifier	set		632148	0					
ANR	632204	Identifier	true		632148	1					
ANR	632205	IfStatement	if ( max )		632148	1					
ANR	632206	Condition	max	26:7:429:431	632148	0	True				
ANR	632207	Identifier	max		632148	0					
ANR	632208	CompoundStatement		13:12:193:193	632148	1					
ANR	632209	ExpressionStatement	* max = s -> to	27:4:440:452	632148	0	True				
ANR	632210	AssignmentExpression	* max = s -> to		632148	0		=			
ANR	632211	UnaryOperationExpression	* max		632148	0					
ANR	632212	UnaryOperator	*		632148	0					
ANR	632213	Identifier	max		632148	1					
ANR	632214	PtrMemberAccess	s -> to		632148	1					
ANR	632215	Identifier	s		632148	0					
ANR	632216	Identifier	to		632148	1					
ANR	632217	ReturnStatement	return set ;	31:1:467:477	632148	12	True				
ANR	632218	Identifier	set		632148	0					
ANR	632219	ReturnType	static bool		632148	1					
ANR	632220	Identifier	sparse_limits		632148	2					
ANR	632221	ParameterList	"RList * l , ut64 * max"		632148	3					
ANR	632222	Parameter	RList * l	14:26:219:226	632148	0	True				
ANR	632223	ParameterType	RList *		632148	0					
ANR	632224	Identifier	l		632148	1					
ANR	632225	Parameter	ut64 * max	14:36:229:237	632148	1	True				
ANR	632226	ParameterType	ut64 *		632148	0					
ANR	632227	Identifier	max		632148	1					
ANR	632228	CFGEntryNode	ENTRY		632148		True				
ANR	632229	CFGExitNode	EXIT		632148		True				
ANR	632230	Symbol	set		632148						
ANR	632231	Symbol	s		632148						
ANR	632232	Symbol	s -> to		632148						
ANR	632233	Symbol	max		632148						
ANR	632234	Symbol	false		632148						
ANR	632235	Symbol	true		632148						
ANR	632236	Symbol	iter		632148						
ANR	632237	Symbol	l		632148						
ANR	632238	Symbol	* s		632148						
ANR	632239	Symbol	* max		632148						
ANR	632240	Function	sparse_append	34:0:482:867							
ANR	632241	FunctionDef	"sparse_append (RList * l , ut64 addr , const ut8 * data , ut64 len)"		632240	0					
ANR	632242	CompoundStatement		34:84:566:867	632240	0					
ANR	632243	IfStatement	if ( l && data )		632240	0					
ANR	632244	Condition	l && data	35:5:573:581	632240	0	True				
ANR	632245	AndExpression	l && data		632240	0		&&			
ANR	632246	Identifier	l		632240	0					
ANR	632247	Identifier	data		632240	1					
ANR	632248	CompoundStatement		3:2:21:62	632240	1					
ANR	632249	IdentifierDeclStatement	RBufferSparse * s = R_NEW0 ( RBufferSparse ) ;	36:2:588:629	632240	0	True				
ANR	632250	IdentifierDecl	* s = R_NEW0 ( RBufferSparse )		632240	0					
ANR	632251	IdentifierDeclType	RBufferSparse *		632240	0					
ANR	632252	Identifier	s		632240	1					
ANR	632253	AssignmentExpression	* s = R_NEW0 ( RBufferSparse )		632240	2		=			
ANR	632254	Identifier	s		632240	0					
ANR	632255	CallExpression	R_NEW0 ( RBufferSparse )		632240	1					
ANR	632256	Callee	R_NEW0		632240	0					
ANR	632257	Identifier	R_NEW0		632240	0					
ANR	632258	ArgumentList	RBufferSparse		632240	1					
ANR	632259	Argument	RBufferSparse		632240	0					
ANR	632260	Identifier	RBufferSparse		632240	0					
ANR	632261	IfStatement	if ( s )		632240	1					
ANR	632262	Condition	s	37:6:637:637	632240	0	True				
ANR	632263	Identifier	s		632240	0					
ANR	632264	CompoundStatement		4:9:73:73	632240	1					
ANR	632265	ExpressionStatement	"s -> data = calloc ( 1 , len )"	38:3:645:670	632240	0	True				
ANR	632266	AssignmentExpression	"s -> data = calloc ( 1 , len )"		632240	0		=			
ANR	632267	PtrMemberAccess	s -> data		632240	0					
ANR	632268	Identifier	s		632240	0					
ANR	632269	Identifier	data		632240	1					
ANR	632270	CallExpression	"calloc ( 1 , len )"		632240	1					
ANR	632271	Callee	calloc		632240	0					
ANR	632272	Identifier	calloc		632240	0					
ANR	632273	ArgumentList	1		632240	1					
ANR	632274	Argument	1		632240	0					
ANR	632275	PrimaryExpression	1		632240	0					
ANR	632276	Argument	len		632240	1					
ANR	632277	Identifier	len		632240	0					
ANR	632278	IfStatement	if ( s -> data )		632240	1					
ANR	632279	Condition	s -> data	39:7:679:685	632240	0	True				
ANR	632280	PtrMemberAccess	s -> data		632240	0					
ANR	632281	Identifier	s		632240	0					
ANR	632282	Identifier	data		632240	1					
ANR	632283	CompoundStatement		6:16:121:121	632240	1					
ANR	632284	ExpressionStatement	s -> from = addr	40:4:694:708	632240	0	True				
ANR	632285	AssignmentExpression	s -> from = addr		632240	0		=			
ANR	632286	PtrMemberAccess	s -> from		632240	0					
ANR	632287	Identifier	s		632240	0					
ANR	632288	Identifier	from		632240	1					
ANR	632289	Identifier	addr		632240	1					
ANR	632290	ExpressionStatement	s -> to = addr + len	41:4:714:732	632240	1	True				
ANR	632291	AssignmentExpression	s -> to = addr + len		632240	0		=			
ANR	632292	PtrMemberAccess	s -> to		632240	0					
ANR	632293	Identifier	s		632240	0					
ANR	632294	Identifier	to		632240	1					
ANR	632295	AdditiveExpression	addr + len		632240	1		+			
ANR	632296	Identifier	addr		632240	0					
ANR	632297	Identifier	len		632240	1					
ANR	632298	ExpressionStatement	s -> size = len	42:4:738:751	632240	2	True				
ANR	632299	AssignmentExpression	s -> size = len		632240	0		=			
ANR	632300	PtrMemberAccess	s -> size		632240	0					
ANR	632301	Identifier	s		632240	0					
ANR	632302	Identifier	size		632240	1					
ANR	632303	Identifier	len		632240	1					
ANR	632304	ExpressionStatement	"memcpy ( s -> data , data , len )"	43:4:757:784	632240	3	True				
ANR	632305	CallExpression	"memcpy ( s -> data , data , len )"		632240	0					
ANR	632306	Callee	memcpy		632240	0					
ANR	632307	Identifier	memcpy		632240	0					
ANR	632308	ArgumentList	s -> data		632240	1					
ANR	632309	Argument	s -> data		632240	0					
ANR	632310	PtrMemberAccess	s -> data		632240	0					
ANR	632311	Identifier	s		632240	0					
ANR	632312	Identifier	data		632240	1					
ANR	632313	Argument	data		632240	1					
ANR	632314	Identifier	data		632240	0					
ANR	632315	Argument	len		632240	2					
ANR	632316	Identifier	len		632240	0					
ANR	632317	ReturnStatement	"return r_list_append ( l , s ) ? s : NULL ;"	44:4:790:826	632240	4	True				
ANR	632318	ConditionalExpression	"r_list_append ( l , s ) ? s : NULL"		632240	0					
ANR	632319	Condition	"r_list_append ( l , s )"		632240	0					
ANR	632320	CallExpression	"r_list_append ( l , s )"		632240	0					
ANR	632321	Callee	r_list_append		632240	0					
ANR	632322	Identifier	r_list_append		632240	0					
ANR	632323	ArgumentList	l		632240	1					
ANR	632324	Argument	l		632240	0					
ANR	632325	Identifier	l		632240	0					
ANR	632326	Argument	s		632240	1					
ANR	632327	Identifier	s		632240	0					
ANR	632328	Identifier	s		632240	1					
ANR	632329	Identifier	NULL		632240	2					
ANR	632330	ExpressionStatement	free ( s )	46:3:836:844	632240	2	True				
ANR	632331	CallExpression	free ( s )		632240	0					
ANR	632332	Callee	free		632240	0					
ANR	632333	Identifier	free		632240	0					
ANR	632334	ArgumentList	s		632240	1					
ANR	632335	Argument	s		632240	0					
ANR	632336	Identifier	s		632240	0					
ANR	632337	ReturnStatement	return NULL ;	49:1:854:865	632240	1	True				
ANR	632338	Identifier	NULL		632240	0					
ANR	632339	ReturnType	static RBufferSparse *		632240	1					
ANR	632340	Identifier	sparse_append		632240	2					
ANR	632341	ParameterList	"RList * l , ut64 addr , const ut8 * data , ut64 len"		632240	3					
ANR	632342	Parameter	RList * l	34:36:518:525	632240	0	True				
ANR	632343	ParameterType	RList *		632240	0					
ANR	632344	Identifier	l		632240	1					
ANR	632345	Parameter	ut64 addr	34:46:528:536	632240	1	True				
ANR	632346	ParameterType	ut64		632240	0					
ANR	632347	Identifier	addr		632240	1					
ANR	632348	Parameter	const ut8 * data	34:57:539:553	632240	2	True				
ANR	632349	ParameterType	const ut8 *		632240	0					
ANR	632350	Identifier	data		632240	1					
ANR	632351	Parameter	ut64 len	34:74:556:563	632240	3	True				
ANR	632352	ParameterType	ut64		632240	0					
ANR	632353	Identifier	len		632240	1					
ANR	632354	CFGEntryNode	ENTRY		632240		True				
ANR	632355	CFGExitNode	EXIT		632240		True				
ANR	632356	Symbol	s -> size		632240						
ANR	632357	Symbol	s -> to		632240						
ANR	632358	Symbol	NULL		632240						
ANR	632359	Symbol	data		632240						
ANR	632360	Symbol	calloc		632240						
ANR	632361	Symbol	l		632240						
ANR	632362	Symbol	R_NEW0		632240						
ANR	632363	Symbol	s		632240						
ANR	632364	Symbol	len		632240						
ANR	632365	Symbol	r_list_append		632240						
ANR	632366	Symbol	s -> data		632240						
ANR	632367	Symbol	s -> from		632240						
ANR	632368	Symbol	RBufferSparse		632240						
ANR	632369	Symbol	addr		632240						
ANR	632370	Symbol	* s		632240						
ANR	632371	Function	sparse_write	53:0:919:1451							
ANR	632372	FunctionDef	"sparse_write (RList * l , ut64 addr , const ut8 * data , ut64 len)"		632371	0					
ANR	632373	CompoundStatement		53:73:992:1451	632371	0					
ANR	632374	IdentifierDeclStatement	RBufferSparse * s ;	54:1:995:1011	632371	0	True				
ANR	632375	IdentifierDecl	* s		632371	0					
ANR	632376	IdentifierDeclType	RBufferSparse *		632371	0					
ANR	632377	Identifier	s		632371	1					
ANR	632378	IdentifierDeclStatement	RListIter * iter ;	55:1:1014:1029	632371	1	True				
ANR	632379	IdentifierDecl	* iter		632371	0					
ANR	632380	IdentifierDeclType	RListIter *		632371	0					
ANR	632381	Identifier	iter		632371	1					
ANR	632382	IdentifierDeclStatement	ut64 olen = len ;	56:1:1032:1047	632371	2	True				
ANR	632383	IdentifierDecl	olen = len		632371	0					
ANR	632384	IdentifierDeclType	ut64		632371	0					
ANR	632385	Identifier	olen		632371	1					
ANR	632386	AssignmentExpression	olen = len		632371	2		=			
ANR	632387	Identifier	len		632371	0					
ANR	632388	Identifier	len		632371	1					
ANR	632389	Statement	r_list_foreach	58:1:1051:1064	632371	3	True				
ANR	632390	Statement	(	58:16:1066:1066	632371	4	True				
ANR	632391	Statement	l	58:17:1067:1067	632371	5	True				
ANR	632392	Statement	","	58:18:1068:1068	632371	6	True				
ANR	632393	Statement	iter	58:20:1070:1073	632371	7	True				
ANR	632394	Statement	","	58:24:1074:1074	632371	8	True				
ANR	632395	Statement	s	58:26:1076:1076	632371	9	True				
ANR	632396	Statement	)	58:27:1077:1077	632371	10	True				
ANR	632397	CompoundStatement		6:29:86:86	632371	11					
ANR	632398	IfStatement	if ( addr >= s -> from && addr < s -> to )		632371	0					
ANR	632399	Condition	addr >= s -> from && addr < s -> to	59:6:1087:1117	632371	0	True				
ANR	632400	AndExpression	addr >= s -> from && addr < s -> to		632371	0		&&			
ANR	632401	RelationalExpression	addr >= s -> from		632371	0		>=			
ANR	632402	Identifier	addr		632371	0					
ANR	632403	PtrMemberAccess	s -> from		632371	1					
ANR	632404	Identifier	s		632371	0					
ANR	632405	Identifier	from		632371	1					
ANR	632406	RelationalExpression	addr < s -> to		632371	1		<			
ANR	632407	Identifier	addr		632371	0					
ANR	632408	PtrMemberAccess	s -> to		632371	1					
ANR	632409	Identifier	s		632371	0					
ANR	632410	Identifier	to		632371	1					
ANR	632411	CompoundStatement		9:3:164:223	632371	1					
ANR	632412	IdentifierDeclStatement	ut64 delta = addr - s -> from ;	60:3:1125:1152	632371	0	True				
ANR	632413	IdentifierDecl	delta = addr - s -> from		632371	0					
ANR	632414	IdentifierDeclType	ut64		632371	0					
ANR	632415	Identifier	delta		632371	1					
ANR	632416	AssignmentExpression	delta = addr - s -> from		632371	2		=			
ANR	632417	Identifier	delta		632371	0					
ANR	632418	AdditiveExpression	addr - s -> from		632371	1		-			
ANR	632419	Identifier	addr		632371	0					
ANR	632420	PtrMemberAccess	s -> from		632371	1					
ANR	632421	Identifier	s		632371	0					
ANR	632422	Identifier	from		632371	1					
ANR	632423	IdentifierDeclStatement	ut64 reallen = s -> size - delta >= len ? len : s -> size - delta ;	61:3:1157:1216	632371	1	True				
ANR	632424	IdentifierDecl	reallen = s -> size - delta >= len ? len : s -> size - delta		632371	0					
ANR	632425	IdentifierDeclType	ut64		632371	0					
ANR	632426	Identifier	reallen		632371	1					
ANR	632427	AssignmentExpression	reallen = s -> size - delta >= len ? len : s -> size - delta		632371	2		=			
ANR	632428	Identifier	reallen		632371	0					
ANR	632429	ConditionalExpression	s -> size - delta >= len ? len : s -> size - delta		632371	1					
ANR	632430	Condition	s -> size - delta >= len		632371	0					
ANR	632431	RelationalExpression	s -> size - delta >= len		632371	0		>=			
ANR	632432	AdditiveExpression	s -> size - delta		632371	0		-			
ANR	632433	PtrMemberAccess	s -> size		632371	0					
ANR	632434	Identifier	s		632371	0					
ANR	632435	Identifier	size		632371	1					
ANR	632436	Identifier	delta		632371	1					
ANR	632437	Identifier	len		632371	1					
ANR	632438	Identifier	len		632371	1					
ANR	632439	AdditiveExpression	s -> size - delta		632371	2		-			
ANR	632440	PtrMemberAccess	s -> size		632371	0					
ANR	632441	Identifier	s		632371	0					
ANR	632442	Identifier	size		632371	1					
ANR	632443	Identifier	delta		632371	1					
ANR	632444	ExpressionStatement	"memcpy ( s -> data + delta , data , reallen )"	62:3:1221:1260	632371	2	True				
ANR	632445	CallExpression	"memcpy ( s -> data + delta , data , reallen )"		632371	0					
ANR	632446	Callee	memcpy		632371	0					
ANR	632447	Identifier	memcpy		632371	0					
ANR	632448	ArgumentList	s -> data + delta		632371	1					
ANR	632449	Argument	s -> data + delta		632371	0					
ANR	632450	AdditiveExpression	s -> data + delta		632371	0		+			
ANR	632451	PtrMemberAccess	s -> data		632371	0					
ANR	632452	Identifier	s		632371	0					
ANR	632453	Identifier	data		632371	1					
ANR	632454	Identifier	delta		632371	1					
ANR	632455	Argument	data		632371	1					
ANR	632456	Identifier	data		632371	0					
ANR	632457	Argument	reallen		632371	2					
ANR	632458	Identifier	reallen		632371	0					
ANR	632459	ExpressionStatement	data += reallen	63:3:1265:1280	632371	3	True				
ANR	632460	AssignmentExpression	data += reallen		632371	0		+=			
ANR	632461	Identifier	data		632371	0					
ANR	632462	Identifier	reallen		632371	1					
ANR	632463	ExpressionStatement	len -= reallen	64:3:1285:1299	632371	4	True				
ANR	632464	AssignmentExpression	len -= reallen		632371	0		-=			
ANR	632465	Identifier	len		632371	0					
ANR	632466	Identifier	reallen		632371	1					
ANR	632467	ExpressionStatement	addr += reallen	65:3:1304:1319	632371	5	True				
ANR	632468	AssignmentExpression	addr += reallen		632371	0		+=			
ANR	632469	Identifier	addr		632371	0					
ANR	632470	Identifier	reallen		632371	1					
ANR	632471	IfStatement	if ( len == 0 )		632371	1					
ANR	632472	Condition	len == 0	67:6:1331:1338	632371	0	True				
ANR	632473	EqualityExpression	len == 0		632371	0		==			
ANR	632474	Identifier	len		632371	0					
ANR	632475	PrimaryExpression	0		632371	1					
ANR	632476	CompoundStatement		15:16:348:348	632371	1					
ANR	632477	ReturnStatement	return olen ;	68:3:1346:1357	632371	0	True				
ANR	632478	Identifier	olen		632371	0					
ANR	632479	IfStatement	"if ( len > 0 && ! sparse_append ( l , addr , data , len ) )"		632371	12					
ANR	632480	Condition	"len > 0 && ! sparse_append ( l , addr , data , len )"	71:5:1371:1416	632371	0	True				
ANR	632481	AndExpression	"len > 0 && ! sparse_append ( l , addr , data , len )"		632371	0		&&			
ANR	632482	RelationalExpression	len > 0		632371	0		>			
ANR	632483	Identifier	len		632371	0					
ANR	632484	PrimaryExpression	0		632371	1					
ANR	632485	UnaryOperationExpression	"! sparse_append ( l , addr , data , len )"		632371	1					
ANR	632486	UnaryOperator	!		632371	0					
ANR	632487	CallExpression	"sparse_append ( l , addr , data , len )"		632371	1					
ANR	632488	Callee	sparse_append		632371	0					
ANR	632489	Identifier	sparse_append		632371	0					
ANR	632490	ArgumentList	l		632371	1					
ANR	632491	Argument	l		632371	0					
ANR	632492	Identifier	l		632371	0					
ANR	632493	Argument	addr		632371	1					
ANR	632494	Identifier	addr		632371	0					
ANR	632495	Argument	data		632371	2					
ANR	632496	Identifier	data		632371	0					
ANR	632497	Argument	len		632371	3					
ANR	632498	Identifier	len		632371	0					
ANR	632499	CompoundStatement		19:53:426:426	632371	1					
ANR	632500	ReturnStatement	return - 1 ;	72:2:1423:1432	632371	0	True				
ANR	632501	UnaryOperationExpression	- 1		632371	0					
ANR	632502	UnaryOperator	-		632371	0					
ANR	632503	PrimaryExpression	1		632371	1					
ANR	632504	ReturnStatement	return olen ;	74:1:1438:1449	632371	13	True				
ANR	632505	Identifier	olen		632371	0					
ANR	632506	ReturnType	static st64		632371	1					
ANR	632507	Identifier	sparse_write		632371	2					
ANR	632508	ParameterList	"RList * l , ut64 addr , const ut8 * data , ut64 len"		632371	3					
ANR	632509	Parameter	RList * l	53:25:944:951	632371	0	True				
ANR	632510	ParameterType	RList *		632371	0					
ANR	632511	Identifier	l		632371	1					
ANR	632512	Parameter	ut64 addr	53:35:954:962	632371	1	True				
ANR	632513	ParameterType	ut64		632371	0					
ANR	632514	Identifier	addr		632371	1					
ANR	632515	Parameter	const ut8 * data	53:46:965:979	632371	2	True				
ANR	632516	ParameterType	const ut8 *		632371	0					
ANR	632517	Identifier	data		632371	1					
ANR	632518	Parameter	ut64 len	53:63:982:989	632371	3	True				
ANR	632519	ParameterType	ut64		632371	0					
ANR	632520	Identifier	len		632371	1					
ANR	632521	CFGEntryNode	ENTRY		632371		True				
ANR	632522	CFGExitNode	EXIT		632371		True				
ANR	632523	Symbol	sparse_append		632371						
ANR	632524	Symbol	s -> size		632371						
ANR	632525	Symbol	s -> to		632371						
ANR	632526	Symbol	data		632371						
ANR	632527	Symbol	delta		632371						
ANR	632528	Symbol	iter		632371						
ANR	632529	Symbol	l		632371						
ANR	632530	Symbol	olen		632371						
ANR	632531	Symbol	s		632371						
ANR	632532	Symbol	len		632371						
ANR	632533	Symbol	s -> data		632371						
ANR	632534	Symbol	s -> from		632371						
ANR	632535	Symbol	addr		632371						
ANR	632536	Symbol	* s		632371						
ANR	632537	Symbol	reallen		632371						
ANR	632538	Function	get_priv_sparse	77:0:1454:1627							
ANR	632539	FunctionDef	get_priv_sparse (RBuffer * b)		632538	0					
ANR	632540	CompoundStatement		77:66:1520:1627	632538	0					
ANR	632541	IdentifierDeclStatement	struct buf_sparse_priv * priv = ( struct buf_sparse_priv * ) b -> priv ;	78:1:1523:1587	632538	0	True				
ANR	632542	IdentifierDecl	* priv = ( struct buf_sparse_priv * ) b -> priv		632538	0					
ANR	632543	IdentifierDeclType	struct buf_sparse_priv *		632538	0					
ANR	632544	Identifier	priv		632538	1					
ANR	632545	AssignmentExpression	* priv = ( struct buf_sparse_priv * ) b -> priv		632538	2		=			
ANR	632546	Identifier	priv		632538	0					
ANR	632547	CastExpression	( struct buf_sparse_priv * ) b -> priv		632538	1					
ANR	632548	CastTarget	struct buf_sparse_priv *		632538	0					
ANR	632549	PtrMemberAccess	b -> priv		632538	1					
ANR	632550	Identifier	b		632538	0					
ANR	632551	Identifier	priv		632538	1					
ANR	632552	ExpressionStatement	r_warn_if_fail ( priv )	79:1:1590:1611	632538	1	True				
ANR	632553	CallExpression	r_warn_if_fail ( priv )		632538	0					
ANR	632554	Callee	r_warn_if_fail		632538	0					
ANR	632555	Identifier	r_warn_if_fail		632538	0					
ANR	632556	ArgumentList	priv		632538	1					
ANR	632557	Argument	priv		632538	0					
ANR	632558	Identifier	priv		632538	0					
ANR	632559	ReturnStatement	return priv ;	80:1:1614:1625	632538	2	True				
ANR	632560	Identifier	priv		632538	0					
ANR	632561	ReturnType	static inline struct buf_sparse_priv *		632538	1					
ANR	632562	Identifier	get_priv_sparse		632538	2					
ANR	632563	ParameterList	RBuffer * b		632538	3					
ANR	632564	Parameter	RBuffer * b	77:54:1508:1517	632538	0	True				
ANR	632565	ParameterType	RBuffer *		632538	0					
ANR	632566	Identifier	b		632538	1					
ANR	632567	CFGEntryNode	ENTRY		632538		True				
ANR	632568	CFGExitNode	EXIT		632538		True				
ANR	632569	Symbol	b		632538						
ANR	632570	Symbol	b -> priv		632538						
ANR	632571	Symbol	priv		632538						
ANR	632572	Symbol	* b		632538						
ANR	632573	Function	buf_sparse_init	83:0:1630:1888							
ANR	632574	FunctionDef	"buf_sparse_init (RBuffer * b , const void * user)"		632573	0					
ANR	632575	CompoundStatement		83:58:1688:1888	632573	0					
ANR	632576	Statement	struct	84:1:1691:1696	632573	0	True				
ANR	632577	Statement	buf_sparse_priv	84:8:1698:1712	632573	1	True				
ANR	632578	Statement	*	84:24:1714:1714	632573	2	True				
ANR	632579	Statement	priv	84:25:1715:1718	632573	3	True				
ANR	632580	Statement	=	84:30:1720:1720	632573	4	True				
ANR	632581	Statement	R_NEW0	84:32:1722:1727	632573	5	True				
ANR	632582	Statement	(	84:39:1729:1729	632573	6	True				
ANR	632583	Statement	struct	84:40:1730:1735	632573	7	True				
ANR	632584	Statement	buf_sparse_priv	84:47:1737:1751	632573	8	True				
ANR	632585	Statement	)	84:62:1752:1752	632573	9	True				
ANR	632586	ExpressionStatement		84:63:1753:1753	632573	10	True				
ANR	632587	IfStatement	if ( ! priv )		632573	11					
ANR	632588	Condition	! priv	85:5:1760:1764	632573	0	True				
ANR	632589	UnaryOperationExpression	! priv		632573	0					
ANR	632590	UnaryOperator	!		632573	0					
ANR	632591	Identifier	priv		632573	1					
ANR	632592	CompoundStatement		3:12:78:78	632573	1					
ANR	632593	ReturnStatement	return false ;	86:2:1771:1783	632573	0	True				
ANR	632594	Identifier	false		632573	0					
ANR	632595	ExpressionStatement	priv -> sparse = r_list_newf ( buffer_sparse_free )	88:1:1789:1836	632573	12	True				
ANR	632596	AssignmentExpression	priv -> sparse = r_list_newf ( buffer_sparse_free )		632573	0		=			
ANR	632597	PtrMemberAccess	priv -> sparse		632573	0					
ANR	632598	Identifier	priv		632573	0					
ANR	632599	Identifier	sparse		632573	1					
ANR	632600	CallExpression	r_list_newf ( buffer_sparse_free )		632573	1					
ANR	632601	Callee	r_list_newf		632573	0					
ANR	632602	Identifier	r_list_newf		632573	0					
ANR	632603	ArgumentList	buffer_sparse_free		632573	1					
ANR	632604	Argument	buffer_sparse_free		632573	0					
ANR	632605	Identifier	buffer_sparse_free		632573	0					
ANR	632606	ExpressionStatement	priv -> offset = 0	89:1:1839:1855	632573	13	True				
ANR	632607	AssignmentExpression	priv -> offset = 0		632573	0		=			
ANR	632608	PtrMemberAccess	priv -> offset		632573	0					
ANR	632609	Identifier	priv		632573	0					
ANR	632610	Identifier	offset		632573	1					
ANR	632611	PrimaryExpression	0		632573	1					
ANR	632612	ExpressionStatement	b -> priv = priv	90:1:1858:1872	632573	14	True				
ANR	632613	AssignmentExpression	b -> priv = priv		632573	0		=			
ANR	632614	PtrMemberAccess	b -> priv		632573	0					
ANR	632615	Identifier	b		632573	0					
ANR	632616	Identifier	priv		632573	1					
ANR	632617	Identifier	priv		632573	1					
ANR	632618	ReturnStatement	return true ;	91:1:1875:1886	632573	15	True				
ANR	632619	Identifier	true		632573	0					
ANR	632620	ReturnType	static bool		632573	1					
ANR	632621	Identifier	buf_sparse_init		632573	2					
ANR	632622	ParameterList	"RBuffer * b , const void * user"		632573	3					
ANR	632623	Parameter	RBuffer * b	83:28:1658:1667	632573	0	True				
ANR	632624	ParameterType	RBuffer *		632573	0					
ANR	632625	Identifier	b		632573	1					
ANR	632626	Parameter	const void * user	83:40:1670:1685	632573	1	True				
ANR	632627	ParameterType	const void *		632573	0					
ANR	632628	Identifier	user		632573	1					
ANR	632629	CFGEntryNode	ENTRY		632573		True				
ANR	632630	CFGExitNode	EXIT		632573		True				
ANR	632631	Symbol	b		632573						
ANR	632632	Symbol	buffer_sparse_free		632573						
ANR	632633	Symbol	priv -> offset		632573						
ANR	632634	Symbol	b -> priv		632573						
ANR	632635	Symbol	r_list_newf		632573						
ANR	632636	Symbol	* priv		632573						
ANR	632637	Symbol	false		632573						
ANR	632638	Symbol	true		632573						
ANR	632639	Symbol	priv		632573						
ANR	632640	Symbol	* b		632573						
ANR	632641	Symbol	user		632573						
ANR	632642	Symbol	priv -> sparse		632573						
ANR	632643	Function	buf_sparse_fini	94:0:1891:2048							
ANR	632644	FunctionDef	buf_sparse_fini (RBuffer * b)		632643	0					
ANR	632645	CompoundStatement		94:40:1931:2048	632643	0					
ANR	632646	IdentifierDeclStatement	struct buf_sparse_priv * priv = get_priv_sparse ( b ) ;	95:1:1934:1984	632643	0	True				
ANR	632647	IdentifierDecl	* priv = get_priv_sparse ( b )		632643	0					
ANR	632648	IdentifierDeclType	struct buf_sparse_priv *		632643	0					
ANR	632649	Identifier	priv		632643	1					
ANR	632650	AssignmentExpression	* priv = get_priv_sparse ( b )		632643	2		=			
ANR	632651	Identifier	priv		632643	0					
ANR	632652	CallExpression	get_priv_sparse ( b )		632643	1					
ANR	632653	Callee	get_priv_sparse		632643	0					
ANR	632654	Identifier	get_priv_sparse		632643	0					
ANR	632655	ArgumentList	b		632643	1					
ANR	632656	Argument	b		632643	0					
ANR	632657	Identifier	b		632643	0					
ANR	632658	ExpressionStatement	r_list_free ( priv -> sparse )	96:1:1987:2013	632643	1	True				
ANR	632659	CallExpression	r_list_free ( priv -> sparse )		632643	0					
ANR	632660	Callee	r_list_free		632643	0					
ANR	632661	Identifier	r_list_free		632643	0					
ANR	632662	ArgumentList	priv -> sparse		632643	1					
ANR	632663	Argument	priv -> sparse		632643	0					
ANR	632664	PtrMemberAccess	priv -> sparse		632643	0					
ANR	632665	Identifier	priv		632643	0					
ANR	632666	Identifier	sparse		632643	1					
ANR	632667	ExpressionStatement	R_FREE ( b -> priv )	97:1:2016:2032	632643	2	True				
ANR	632668	CallExpression	R_FREE ( b -> priv )		632643	0					
ANR	632669	Callee	R_FREE		632643	0					
ANR	632670	Identifier	R_FREE		632643	0					
ANR	632671	ArgumentList	b -> priv		632643	1					
ANR	632672	Argument	b -> priv		632643	0					
ANR	632673	PtrMemberAccess	b -> priv		632643	0					
ANR	632674	Identifier	b		632643	0					
ANR	632675	Identifier	priv		632643	1					
ANR	632676	ReturnStatement	return true ;	98:1:2035:2046	632643	3	True				
ANR	632677	Identifier	true		632643	0					
ANR	632678	ReturnType	static bool		632643	1					
ANR	632679	Identifier	buf_sparse_fini		632643	2					
ANR	632680	ParameterList	RBuffer * b		632643	3					
ANR	632681	Parameter	RBuffer * b	94:28:1919:1928	632643	0	True				
ANR	632682	ParameterType	RBuffer *		632643	0					
ANR	632683	Identifier	b		632643	1					
ANR	632684	CFGEntryNode	ENTRY		632643		True				
ANR	632685	CFGExitNode	EXIT		632643		True				
ANR	632686	Symbol	get_priv_sparse		632643						
ANR	632687	Symbol	b		632643						
ANR	632688	Symbol	b -> priv		632643						
ANR	632689	Symbol	* priv		632643						
ANR	632690	Symbol	true		632643						
ANR	632691	Symbol	priv		632643						
ANR	632692	Symbol	* b		632643						
ANR	632693	Symbol	priv -> sparse		632643						
ANR	632694	Function	buf_sparse_resize	101:0:2051:2962							
ANR	632695	FunctionDef	"buf_sparse_resize (RBuffer * b , ut64 newsize)"		632694	0					
ANR	632696	CompoundStatement		101:56:2107:2962	632694	0					
ANR	632697	IdentifierDeclStatement	struct buf_sparse_priv * priv = get_priv_sparse ( b ) ;	102:1:2110:2160	632694	0	True				
ANR	632698	IdentifierDecl	* priv = get_priv_sparse ( b )		632694	0					
ANR	632699	IdentifierDeclType	struct buf_sparse_priv *		632694	0					
ANR	632700	Identifier	priv		632694	1					
ANR	632701	AssignmentExpression	* priv = get_priv_sparse ( b )		632694	2		=			
ANR	632702	Identifier	priv		632694	0					
ANR	632703	CallExpression	get_priv_sparse ( b )		632694	1					
ANR	632704	Callee	get_priv_sparse		632694	0					
ANR	632705	Identifier	get_priv_sparse		632694	0					
ANR	632706	ArgumentList	b		632694	1					
ANR	632707	Argument	b		632694	0					
ANR	632708	Identifier	b		632694	0					
ANR	632709	IdentifierDeclStatement	"RListIter * iter , * tmp ;"	103:1:2163:2184	632694	1	True				
ANR	632710	IdentifierDecl	* iter		632694	0					
ANR	632711	IdentifierDeclType	RListIter *		632694	0					
ANR	632712	Identifier	iter		632694	1					
ANR	632713	IdentifierDecl	* tmp		632694	1					
ANR	632714	IdentifierDeclType	RListIter *		632694	0					
ANR	632715	Identifier	tmp		632694	1					
ANR	632716	IdentifierDeclStatement	RBufferSparse * s ;	104:1:2187:2203	632694	2	True				
ANR	632717	IdentifierDecl	* s		632694	0					
ANR	632718	IdentifierDeclType	RBufferSparse *		632694	0					
ANR	632719	Identifier	s		632694	1					
ANR	632720	Statement	r_list_foreach_safe	106:1:2207:2225	632694	3	True				
ANR	632721	Statement	(	106:21:2227:2227	632694	4	True				
ANR	632722	Statement	priv	106:22:2228:2231	632694	5	True				
ANR	632723	Statement	->	106:26:2232:2233	632694	6	True				
ANR	632724	Statement	sparse	106:28:2234:2239	632694	7	True				
ANR	632725	Statement	","	106:34:2240:2240	632694	8	True				
ANR	632726	Statement	iter	106:36:2242:2245	632694	9	True				
ANR	632727	Statement	","	106:40:2246:2246	632694	10	True				
ANR	632728	Statement	tmp	106:42:2248:2250	632694	11	True				
ANR	632729	Statement	","	106:45:2251:2251	632694	12	True				
ANR	632730	Statement	s	106:47:2253:2253	632694	13	True				
ANR	632731	Statement	)	106:48:2254:2254	632694	14	True				
ANR	632732	CompoundStatement		6:50:148:148	632694	15					
ANR	632733	IfStatement	if ( s -> from >= newsize )		632694	0					
ANR	632734	Condition	s -> from >= newsize	107:6:2264:2281	632694	0	True				
ANR	632735	RelationalExpression	s -> from >= newsize		632694	0		>=			
ANR	632736	PtrMemberAccess	s -> from		632694	0					
ANR	632737	Identifier	s		632694	0					
ANR	632738	Identifier	from		632694	1					
ANR	632739	Identifier	newsize		632694	1					
ANR	632740	CompoundStatement		7:26:176:176	632694	1					
ANR	632741	ExpressionStatement	"r_list_delete ( priv -> sparse , iter )"	108:3:2289:2323	632694	0	True				
ANR	632742	CallExpression	"r_list_delete ( priv -> sparse , iter )"		632694	0					
ANR	632743	Callee	r_list_delete		632694	0					
ANR	632744	Identifier	r_list_delete		632694	0					
ANR	632745	ArgumentList	priv -> sparse		632694	1					
ANR	632746	Argument	priv -> sparse		632694	0					
ANR	632747	PtrMemberAccess	priv -> sparse		632694	0					
ANR	632748	Identifier	priv		632694	0					
ANR	632749	Identifier	sparse		632694	1					
ANR	632750	Argument	iter		632694	1					
ANR	632751	Identifier	iter		632694	0					
ANR	632752	ElseStatement	else		632694	0					
ANR	632753	IfStatement	if ( s -> to >= newsize )		632694	0					
ANR	632754	Condition	s -> to >= newsize	109:13:2338:2353	632694	0	True				
ANR	632755	RelationalExpression	s -> to >= newsize		632694	0		>=			
ANR	632756	PtrMemberAccess	s -> to		632694	0					
ANR	632757	Identifier	s		632694	0					
ANR	632758	Identifier	to		632694	1					
ANR	632759	Identifier	newsize		632694	1					
ANR	632760	CompoundStatement		14:3:376:413	632694	1					
ANR	632761	IdentifierDeclStatement	RBufferSparse * ns = R_NEW ( RBufferSparse ) ;	110:3:2361:2402	632694	0	True				
ANR	632762	IdentifierDecl	* ns = R_NEW ( RBufferSparse )		632694	0					
ANR	632763	IdentifierDeclType	RBufferSparse *		632694	0					
ANR	632764	Identifier	ns		632694	1					
ANR	632765	AssignmentExpression	* ns = R_NEW ( RBufferSparse )		632694	2		=			
ANR	632766	Identifier	ns		632694	0					
ANR	632767	CallExpression	R_NEW ( RBufferSparse )		632694	1					
ANR	632768	Callee	R_NEW		632694	0					
ANR	632769	Identifier	R_NEW		632694	0					
ANR	632770	ArgumentList	RBufferSparse		632694	1					
ANR	632771	Argument	RBufferSparse		632694	0					
ANR	632772	Identifier	RBufferSparse		632694	0					
ANR	632773	ExpressionStatement	ns -> from = s -> from	111:3:2407:2425	632694	1	True				
ANR	632774	AssignmentExpression	ns -> from = s -> from		632694	0		=			
ANR	632775	PtrMemberAccess	ns -> from		632694	0					
ANR	632776	Identifier	ns		632694	0					
ANR	632777	Identifier	from		632694	1					
ANR	632778	PtrMemberAccess	s -> from		632694	1					
ANR	632779	Identifier	s		632694	0					
ANR	632780	Identifier	from		632694	1					
ANR	632781	ExpressionStatement	ns -> to = newsize	112:3:2430:2446	632694	2	True				
ANR	632782	AssignmentExpression	ns -> to = newsize		632694	0		=			
ANR	632783	PtrMemberAccess	ns -> to		632694	0					
ANR	632784	Identifier	ns		632694	0					
ANR	632785	Identifier	to		632694	1					
ANR	632786	Identifier	newsize		632694	1					
ANR	632787	ExpressionStatement	ns -> size = ns -> to - ns -> from	113:3:2451:2479	632694	3	True				
ANR	632788	AssignmentExpression	ns -> size = ns -> to - ns -> from		632694	0		=			
ANR	632789	PtrMemberAccess	ns -> size		632694	0					
ANR	632790	Identifier	ns		632694	0					
ANR	632791	Identifier	size		632694	1					
ANR	632792	AdditiveExpression	ns -> to - ns -> from		632694	1		-			
ANR	632793	PtrMemberAccess	ns -> to		632694	0					
ANR	632794	Identifier	ns		632694	0					
ANR	632795	Identifier	to		632694	1					
ANR	632796	PtrMemberAccess	ns -> from		632694	1					
ANR	632797	Identifier	ns		632694	0					
ANR	632798	Identifier	from		632694	1					
ANR	632799	IdentifierDeclStatement	"ut8 * tmp = realloc ( s -> data , s -> size ) ;"	114:3:2484:2521	632694	4	True				
ANR	632800	IdentifierDecl	"* tmp = realloc ( s -> data , s -> size )"		632694	0					
ANR	632801	IdentifierDeclType	ut8 *		632694	0					
ANR	632802	Identifier	tmp		632694	1					
ANR	632803	AssignmentExpression	"* tmp = realloc ( s -> data , s -> size )"		632694	2		=			
ANR	632804	Identifier	tmp		632694	0					
ANR	632805	CallExpression	"realloc ( s -> data , s -> size )"		632694	1					
ANR	632806	Callee	realloc		632694	0					
ANR	632807	Identifier	realloc		632694	0					
ANR	632808	ArgumentList	s -> data		632694	1					
ANR	632809	Argument	s -> data		632694	0					
ANR	632810	PtrMemberAccess	s -> data		632694	0					
ANR	632811	Identifier	s		632694	0					
ANR	632812	Identifier	data		632694	1					
ANR	632813	Argument	s -> size		632694	1					
ANR	632814	PtrMemberAccess	s -> size		632694	0					
ANR	632815	Identifier	s		632694	0					
ANR	632816	Identifier	size		632694	1					
ANR	632817	IfStatement	if ( ! tmp )		632694	5					
ANR	632818	Condition	! tmp	115:7:2530:2533	632694	0	True				
ANR	632819	UnaryOperationExpression	! tmp		632694	0					
ANR	632820	UnaryOperator	!		632694	0					
ANR	632821	Identifier	tmp		632694	1					
ANR	632822	CompoundStatement		15:13:428:428	632694	1					
ANR	632823	ExpressionStatement	free ( ns )	116:4:2542:2551	632694	0	True				
ANR	632824	CallExpression	free ( ns )		632694	0					
ANR	632825	Callee	free		632694	0					
ANR	632826	Identifier	free		632694	0					
ANR	632827	ArgumentList	ns		632694	1					
ANR	632828	Argument	ns		632694	0					
ANR	632829	Identifier	ns		632694	0					
ANR	632830	ReturnStatement	return false ;	117:4:2557:2569	632694	1	True				
ANR	632831	Identifier	false		632694	0					
ANR	632832	ExpressionStatement	s -> data = NULL	120:3:2636:2650	632694	6	True				
ANR	632833	AssignmentExpression	s -> data = NULL		632694	0		=			
ANR	632834	PtrMemberAccess	s -> data		632694	0					
ANR	632835	Identifier	s		632694	0					
ANR	632836	Identifier	data		632694	1					
ANR	632837	Identifier	NULL		632694	1					
ANR	632838	ExpressionStatement	ns -> data = tmp	121:3:2655:2669	632694	7	True				
ANR	632839	AssignmentExpression	ns -> data = tmp		632694	0		=			
ANR	632840	PtrMemberAccess	ns -> data		632694	0					
ANR	632841	Identifier	ns		632694	0					
ANR	632842	Identifier	data		632694	1					
ANR	632843	Identifier	tmp		632694	1					
ANR	632844	ExpressionStatement	ns -> written = s -> written	122:3:2674:2698	632694	8	True				
ANR	632845	AssignmentExpression	ns -> written = s -> written		632694	0		=			
ANR	632846	PtrMemberAccess	ns -> written		632694	0					
ANR	632847	Identifier	ns		632694	0					
ANR	632848	Identifier	written		632694	1					
ANR	632849	PtrMemberAccess	s -> written		632694	1					
ANR	632850	Identifier	s		632694	0					
ANR	632851	Identifier	written		632694	1					
ANR	632852	ExpressionStatement	"r_list_append ( priv -> sparse , ns )"	123:3:2703:2735	632694	9	True				
ANR	632853	CallExpression	"r_list_append ( priv -> sparse , ns )"		632694	0					
ANR	632854	Callee	r_list_append		632694	0					
ANR	632855	Identifier	r_list_append		632694	0					
ANR	632856	ArgumentList	priv -> sparse		632694	1					
ANR	632857	Argument	priv -> sparse		632694	0					
ANR	632858	PtrMemberAccess	priv -> sparse		632694	0					
ANR	632859	Identifier	priv		632694	0					
ANR	632860	Identifier	sparse		632694	1					
ANR	632861	Argument	ns		632694	1					
ANR	632862	Identifier	ns		632694	0					
ANR	632863	ExpressionStatement	"r_list_delete ( priv -> sparse , iter )"	124:3:2740:2774	632694	10	True				
ANR	632864	CallExpression	"r_list_delete ( priv -> sparse , iter )"		632694	0					
ANR	632865	Callee	r_list_delete		632694	0					
ANR	632866	Identifier	r_list_delete		632694	0					
ANR	632867	ArgumentList	priv -> sparse		632694	1					
ANR	632868	Argument	priv -> sparse		632694	0					
ANR	632869	PtrMemberAccess	priv -> sparse		632694	0					
ANR	632870	Identifier	priv		632694	0					
ANR	632871	Identifier	sparse		632694	1					
ANR	632872	Argument	iter		632694	1					
ANR	632873	Identifier	iter		632694	0					
ANR	632874	IdentifierDeclStatement	ut64 max ;	127:1:2784:2792	632694	16	True				
ANR	632875	IdentifierDecl	max		632694	0					
ANR	632876	IdentifierDeclType	ut64		632694	0					
ANR	632877	Identifier	max		632694	1					
ANR	632878	ExpressionStatement	"max = sparse_limits ( priv -> sparse , & max ) ? max : 0"	128:1:2795:2843	632694	17	True				
ANR	632879	AssignmentExpression	"max = sparse_limits ( priv -> sparse , & max ) ? max : 0"		632694	0		=			
ANR	632880	Identifier	max		632694	0					
ANR	632881	ConditionalExpression	"sparse_limits ( priv -> sparse , & max ) ? max : 0"		632694	1					
ANR	632882	Condition	"sparse_limits ( priv -> sparse , & max )"		632694	0					
ANR	632883	CallExpression	"sparse_limits ( priv -> sparse , & max )"		632694	0					
ANR	632884	Callee	sparse_limits		632694	0					
ANR	632885	Identifier	sparse_limits		632694	0					
ANR	632886	ArgumentList	priv -> sparse		632694	1					
ANR	632887	Argument	priv -> sparse		632694	0					
ANR	632888	PtrMemberAccess	priv -> sparse		632694	0					
ANR	632889	Identifier	priv		632694	0					
ANR	632890	Identifier	sparse		632694	1					
ANR	632891	Argument	& max		632694	1					
ANR	632892	UnaryOperationExpression	& max		632694	0					
ANR	632893	UnaryOperator	&		632694	0					
ANR	632894	Identifier	max		632694	1					
ANR	632895	Identifier	max		632694	1					
ANR	632896	PrimaryExpression	0		632694	2					
ANR	632897	IfStatement	if ( max < newsize )		632694	18					
ANR	632898	Condition	max < newsize	129:5:2850:2862	632694	0	True				
ANR	632899	RelationalExpression	max < newsize		632694	0		<			
ANR	632900	Identifier	max		632694	0					
ANR	632901	Identifier	newsize		632694	1					
ANR	632902	CompoundStatement		29:20:757:757	632694	1					
ANR	632903	ReturnStatement	"return ! ! sparse_write ( priv -> sparse , newsize - 1 , ( ut8 * ) & b -> Oxff_priv , 1 ) ;"	130:2:2869:2943	632694	0	True				
ANR	632904	UnaryOperationExpression	"! ! sparse_write ( priv -> sparse , newsize - 1 , ( ut8 * ) & b -> Oxff_priv , 1 )"		632694	0					
ANR	632905	UnaryOperator	!		632694	0					
ANR	632906	UnaryOperationExpression	"! sparse_write ( priv -> sparse , newsize - 1 , ( ut8 * ) & b -> Oxff_priv , 1 )"		632694	1					
ANR	632907	UnaryOperator	!		632694	0					
ANR	632908	CallExpression	"sparse_write ( priv -> sparse , newsize - 1 , ( ut8 * ) & b -> Oxff_priv , 1 )"		632694	1					
ANR	632909	Callee	sparse_write		632694	0					
ANR	632910	Identifier	sparse_write		632694	0					
ANR	632911	ArgumentList	priv -> sparse		632694	1					
ANR	632912	Argument	priv -> sparse		632694	0					
ANR	632913	PtrMemberAccess	priv -> sparse		632694	0					
ANR	632914	Identifier	priv		632694	0					
ANR	632915	Identifier	sparse		632694	1					
ANR	632916	Argument	newsize - 1		632694	1					
ANR	632917	AdditiveExpression	newsize - 1		632694	0		-			
ANR	632918	Identifier	newsize		632694	0					
ANR	632919	PrimaryExpression	1		632694	1					
ANR	632920	Argument	( ut8 * ) & b -> Oxff_priv		632694	2					
ANR	632921	CastExpression	( ut8 * ) & b -> Oxff_priv		632694	0					
ANR	632922	CastTarget	ut8 *		632694	0					
ANR	632923	UnaryOperationExpression	& b -> Oxff_priv		632694	1					
ANR	632924	UnaryOperator	&		632694	0					
ANR	632925	PtrMemberAccess	b -> Oxff_priv		632694	1					
ANR	632926	Identifier	b		632694	0					
ANR	632927	Identifier	Oxff_priv		632694	1					
ANR	632928	Argument	1		632694	3					
ANR	632929	PrimaryExpression	1		632694	0					
ANR	632930	ReturnStatement	return true ;	132:1:2949:2960	632694	19	True				
ANR	632931	Identifier	true		632694	0					
ANR	632932	ReturnType	static bool		632694	1					
ANR	632933	Identifier	buf_sparse_resize		632694	2					
ANR	632934	ParameterList	"RBuffer * b , ut64 newsize"		632694	3					
ANR	632935	Parameter	RBuffer * b	101:30:2081:2090	632694	0	True				
ANR	632936	ParameterType	RBuffer *		632694	0					
ANR	632937	Identifier	b		632694	1					
ANR	632938	Parameter	ut64 newsize	101:42:2093:2104	632694	1	True				
ANR	632939	ParameterType	ut64		632694	0					
ANR	632940	Identifier	newsize		632694	1					
ANR	632941	CFGEntryNode	ENTRY		632694		True				
ANR	632942	CFGExitNode	EXIT		632694		True				
ANR	632943	Symbol	s -> size		632694						
ANR	632944	Symbol	s -> to		632694						
ANR	632945	Symbol	sparse_write		632694						
ANR	632946	Symbol	ns		632694						
ANR	632947	Symbol	* priv		632694						
ANR	632948	Symbol	realloc		632694						
ANR	632949	Symbol	& max		632694						
ANR	632950	Symbol	tmp		632694						
ANR	632951	Symbol	s -> data		632694						
ANR	632952	Symbol	s -> from		632694						
ANR	632953	Symbol	ns -> size		632694						
ANR	632954	Symbol	priv		632694						
ANR	632955	Symbol	RBufferSparse		632694						
ANR	632956	Symbol	b		632694						
ANR	632957	Symbol	& b -> Oxff_priv		632694						
ANR	632958	Symbol	NULL		632694						
ANR	632959	Symbol	s -> written		632694						
ANR	632960	Symbol	max		632694						
ANR	632961	Symbol	newsize		632694						
ANR	632962	Symbol	* ns		632694						
ANR	632963	Symbol	false		632694						
ANR	632964	Symbol	iter		632694						
ANR	632965	Symbol	sparse_limits		632694						
ANR	632966	Symbol	get_priv_sparse		632694						
ANR	632967	Symbol	ns -> to		632694						
ANR	632968	Symbol	s		632694						
ANR	632969	Symbol	ns -> data		632694						
ANR	632970	Symbol	ns -> from		632694						
ANR	632971	Symbol	true		632694						
ANR	632972	Symbol	R_NEW		632694						
ANR	632973	Symbol	* s		632694						
ANR	632974	Symbol	priv -> sparse		632694						
ANR	632975	Symbol	ns -> written		632694						
ANR	632976	Function	buf_sparse_size	135:0:2965:3124							
ANR	632977	FunctionDef	buf_sparse_size (RBuffer * b)		632976	0					
ANR	632978	CompoundStatement		135:40:3005:3124	632976	0					
ANR	632979	IdentifierDeclStatement	struct buf_sparse_priv * priv = get_priv_sparse ( b ) ;	136:1:3008:3058	632976	0	True				
ANR	632980	IdentifierDecl	* priv = get_priv_sparse ( b )		632976	0					
ANR	632981	IdentifierDeclType	struct buf_sparse_priv *		632976	0					
ANR	632982	Identifier	priv		632976	1					
ANR	632983	AssignmentExpression	* priv = get_priv_sparse ( b )		632976	2		=			
ANR	632984	Identifier	priv		632976	0					
ANR	632985	CallExpression	get_priv_sparse ( b )		632976	1					
ANR	632986	Callee	get_priv_sparse		632976	0					
ANR	632987	Identifier	get_priv_sparse		632976	0					
ANR	632988	ArgumentList	b		632976	1					
ANR	632989	Argument	b		632976	0					
ANR	632990	Identifier	b		632976	0					
ANR	632991	IdentifierDeclStatement	ut64 max ;	137:1:3061:3069	632976	1	True				
ANR	632992	IdentifierDecl	max		632976	0					
ANR	632993	IdentifierDeclType	ut64		632976	0					
ANR	632994	Identifier	max		632976	1					
ANR	632995	ReturnStatement	"return sparse_limits ( priv -> sparse , & max ) ? max : 0 ;"	139:1:3073:3122	632976	2	True				
ANR	632996	ConditionalExpression	"sparse_limits ( priv -> sparse , & max ) ? max : 0"		632976	0					
ANR	632997	Condition	"sparse_limits ( priv -> sparse , & max )"		632976	0					
ANR	632998	CallExpression	"sparse_limits ( priv -> sparse , & max )"		632976	0					
ANR	632999	Callee	sparse_limits		632976	0					
ANR	633000	Identifier	sparse_limits		632976	0					
ANR	633001	ArgumentList	priv -> sparse		632976	1					
ANR	633002	Argument	priv -> sparse		632976	0					
ANR	633003	PtrMemberAccess	priv -> sparse		632976	0					
ANR	633004	Identifier	priv		632976	0					
ANR	633005	Identifier	sparse		632976	1					
ANR	633006	Argument	& max		632976	1					
ANR	633007	UnaryOperationExpression	& max		632976	0					
ANR	633008	UnaryOperator	&		632976	0					
ANR	633009	Identifier	max		632976	1					
ANR	633010	Identifier	max		632976	1					
ANR	633011	PrimaryExpression	0		632976	2					
ANR	633012	ReturnType	static ut64		632976	1					
ANR	633013	Identifier	buf_sparse_size		632976	2					
ANR	633014	ParameterList	RBuffer * b		632976	3					
ANR	633015	Parameter	RBuffer * b	135:28:2993:3002	632976	0	True				
ANR	633016	ParameterType	RBuffer *		632976	0					
ANR	633017	Identifier	b		632976	1					
ANR	633018	CFGEntryNode	ENTRY		632976		True				
ANR	633019	CFGExitNode	EXIT		632976		True				
ANR	633020	Symbol	get_priv_sparse		632976						
ANR	633021	Symbol	b		632976						
ANR	633022	Symbol	max		632976						
ANR	633023	Symbol	* priv		632976						
ANR	633024	Symbol	priv		632976						
ANR	633025	Symbol	sparse_limits		632976						
ANR	633026	Symbol	& max		632976						
ANR	633027	Symbol	priv -> sparse		632976						
ANR	633028	Function	buf_sparse_read	142:0:3127:3866							
ANR	633029	FunctionDef	"buf_sparse_read (RBuffer * b , ut8 * buf , ut64 len)"		633028	0					
ANR	633030	CompoundStatement		142:60:3187:3866	633028	0					
ANR	633031	IdentifierDeclStatement	struct buf_sparse_priv * priv = get_priv_sparse ( b ) ;	143:1:3190:3240	633028	0	True				
ANR	633032	IdentifierDecl	* priv = get_priv_sparse ( b )		633028	0					
ANR	633033	IdentifierDeclType	struct buf_sparse_priv *		633028	0					
ANR	633034	Identifier	priv		633028	1					
ANR	633035	AssignmentExpression	* priv = get_priv_sparse ( b )		633028	2		=			
ANR	633036	Identifier	priv		633028	0					
ANR	633037	CallExpression	get_priv_sparse ( b )		633028	1					
ANR	633038	Callee	get_priv_sparse		633028	0					
ANR	633039	Identifier	get_priv_sparse		633028	0					
ANR	633040	ArgumentList	b		633028	1					
ANR	633041	Argument	b		633028	0					
ANR	633042	Identifier	b		633028	0					
ANR	633043	IdentifierDeclStatement	RBufferSparse * c ;	144:1:3243:3259	633028	1	True				
ANR	633044	IdentifierDecl	* c		633028	0					
ANR	633045	IdentifierDeclType	RBufferSparse *		633028	0					
ANR	633046	Identifier	c		633028	1					
ANR	633047	IdentifierDeclStatement	RListIter * iter ;	145:1:3262:3277	633028	2	True				
ANR	633048	IdentifierDecl	* iter		633028	0					
ANR	633049	IdentifierDeclType	RListIter *		633028	0					
ANR	633050	Identifier	iter		633028	1					
ANR	633051	IdentifierDeclStatement	ut64 max = 0 ;	146:1:3280:3292	633028	3	True				
ANR	633052	IdentifierDecl	max = 0		633028	0					
ANR	633053	IdentifierDeclType	ut64		633028	0					
ANR	633054	Identifier	max		633028	1					
ANR	633055	AssignmentExpression	max = 0		633028	2		=			
ANR	633056	Identifier	max		633028	0					
ANR	633057	PrimaryExpression	0		633028	1					
ANR	633058	ExpressionStatement	"memset ( buf , b -> Oxff_priv , len )"	148:1:3296:3327	633028	4	True				
ANR	633059	CallExpression	"memset ( buf , b -> Oxff_priv , len )"		633028	0					
ANR	633060	Callee	memset		633028	0					
ANR	633061	Identifier	memset		633028	0					
ANR	633062	ArgumentList	buf		633028	1					
ANR	633063	Argument	buf		633028	0					
ANR	633064	Identifier	buf		633028	0					
ANR	633065	Argument	b -> Oxff_priv		633028	1					
ANR	633066	PtrMemberAccess	b -> Oxff_priv		633028	0					
ANR	633067	Identifier	b		633028	0					
ANR	633068	Identifier	Oxff_priv		633028	1					
ANR	633069	Argument	len		633028	2					
ANR	633070	Identifier	len		633028	0					
ANR	633071	Statement	r_list_foreach	149:1:3330:3343	633028	5	True				
ANR	633072	Statement	(	149:16:3345:3345	633028	6	True				
ANR	633073	Statement	priv	149:17:3346:3349	633028	7	True				
ANR	633074	Statement	->	149:21:3350:3351	633028	8	True				
ANR	633075	Statement	sparse	149:23:3352:3357	633028	9	True				
ANR	633076	Statement	","	149:29:3358:3358	633028	10	True				
ANR	633077	Statement	iter	149:31:3360:3363	633028	11	True				
ANR	633078	Statement	","	149:35:3364:3364	633028	12	True				
ANR	633079	Statement	c	149:37:3366:3366	633028	13	True				
ANR	633080	Statement	)	149:38:3367:3367	633028	14	True				
ANR	633081	CompoundStatement		8:40:181:181	633028	15					
ANR	633082	IfStatement	if ( max < c -> to )		633028	0					
ANR	633083	Condition	max < c -> to	150:6:3377:3387	633028	0	True				
ANR	633084	RelationalExpression	max < c -> to		633028	0		<			
ANR	633085	Identifier	max		633028	0					
ANR	633086	PtrMemberAccess	c -> to		633028	1					
ANR	633087	Identifier	c		633028	0					
ANR	633088	Identifier	to		633028	1					
ANR	633089	CompoundStatement		9:19:202:202	633028	1					
ANR	633090	ExpressionStatement	max = c -> to	151:3:3395:3406	633028	0	True				
ANR	633091	AssignmentExpression	max = c -> to		633028	0		=			
ANR	633092	Identifier	max		633028	0					
ANR	633093	PtrMemberAccess	c -> to		633028	1					
ANR	633094	Identifier	c		633028	0					
ANR	633095	Identifier	to		633028	1					
ANR	633096	IfStatement	if ( priv -> offset < c -> to && c -> from < priv -> offset + len )		633028	1					
ANR	633097	Condition	priv -> offset < c -> to && c -> from < priv -> offset + len	153:6:3418:3469	633028	0	True				
ANR	633098	AndExpression	priv -> offset < c -> to && c -> from < priv -> offset + len		633028	0		&&			
ANR	633099	RelationalExpression	priv -> offset < c -> to		633028	0		<			
ANR	633100	PtrMemberAccess	priv -> offset		633028	0					
ANR	633101	Identifier	priv		633028	0					
ANR	633102	Identifier	offset		633028	1					
ANR	633103	PtrMemberAccess	c -> to		633028	1					
ANR	633104	Identifier	c		633028	0					
ANR	633105	Identifier	to		633028	1					
ANR	633106	RelationalExpression	c -> from < priv -> offset + len		633028	1		<			
ANR	633107	PtrMemberAccess	c -> from		633028	0					
ANR	633108	Identifier	c		633028	0					
ANR	633109	Identifier	from		633028	1					
ANR	633110	AdditiveExpression	priv -> offset + len		633028	1		+			
ANR	633111	PtrMemberAccess	priv -> offset		633028	0					
ANR	633112	Identifier	priv		633028	0					
ANR	633113	Identifier	offset		633028	1					
ANR	633114	Identifier	len		633028	1					
ANR	633115	CompoundStatement		12:60:284:284	633028	1					
ANR	633116	IfStatement	if ( priv -> offset < c -> from )		633028	0					
ANR	633117	Condition	priv -> offset < c -> from	154:7:3481:3502	633028	0	True				
ANR	633118	RelationalExpression	priv -> offset < c -> from		633028	0		<			
ANR	633119	PtrMemberAccess	priv -> offset		633028	0					
ANR	633120	Identifier	priv		633028	0					
ANR	633121	Identifier	offset		633028	1					
ANR	633122	PtrMemberAccess	c -> from		633028	1					
ANR	633123	Identifier	c		633028	0					
ANR	633124	Identifier	from		633028	1					
ANR	633125	CompoundStatement		14:4:323:377	633028	1					
ANR	633126	IdentifierDeclStatement	"ut64 l = R_MIN ( priv -> offset + len - c -> from , c -> size ) ;"	155:4:3511:3565	633028	0	True				
ANR	633127	IdentifierDecl	"l = R_MIN ( priv -> offset + len - c -> from , c -> size )"		633028	0					
ANR	633128	IdentifierDeclType	ut64		633028	0					
ANR	633129	Identifier	l		633028	1					
ANR	633130	AssignmentExpression	"l = R_MIN ( priv -> offset + len - c -> from , c -> size )"		633028	2		=			
ANR	633131	Identifier	l		633028	0					
ANR	633132	CallExpression	"R_MIN ( priv -> offset + len - c -> from , c -> size )"		633028	1					
ANR	633133	Callee	R_MIN		633028	0					
ANR	633134	Identifier	R_MIN		633028	0					
ANR	633135	ArgumentList	priv -> offset + len - c -> from		633028	1					
ANR	633136	Argument	priv -> offset + len - c -> from		633028	0					
ANR	633137	AdditiveExpression	priv -> offset + len - c -> from		633028	0		+			
ANR	633138	PtrMemberAccess	priv -> offset		633028	0					
ANR	633139	Identifier	priv		633028	0					
ANR	633140	Identifier	offset		633028	1					
ANR	633141	AdditiveExpression	len - c -> from		633028	1		-			
ANR	633142	Identifier	len		633028	0					
ANR	633143	PtrMemberAccess	c -> from		633028	1					
ANR	633144	Identifier	c		633028	0					
ANR	633145	Identifier	from		633028	1					
ANR	633146	Argument	c -> size		633028	1					
ANR	633147	PtrMemberAccess	c -> size		633028	0					
ANR	633148	Identifier	c		633028	0					
ANR	633149	Identifier	size		633028	1					
ANR	633150	ExpressionStatement	"memcpy ( buf + c -> from - priv -> offset , c -> data , l )"	156:4:3571:3620	633028	1	True				
ANR	633151	CallExpression	"memcpy ( buf + c -> from - priv -> offset , c -> data , l )"		633028	0					
ANR	633152	Callee	memcpy		633028	0					
ANR	633153	Identifier	memcpy		633028	0					
ANR	633154	ArgumentList	buf + c -> from - priv -> offset		633028	1					
ANR	633155	Argument	buf + c -> from - priv -> offset		633028	0					
ANR	633156	AdditiveExpression	buf + c -> from - priv -> offset		633028	0		+			
ANR	633157	Identifier	buf		633028	0					
ANR	633158	AdditiveExpression	c -> from - priv -> offset		633028	1		-			
ANR	633159	PtrMemberAccess	c -> from		633028	0					
ANR	633160	Identifier	c		633028	0					
ANR	633161	Identifier	from		633028	1					
ANR	633162	PtrMemberAccess	priv -> offset		633028	1					
ANR	633163	Identifier	priv		633028	0					
ANR	633164	Identifier	offset		633028	1					
ANR	633165	Argument	c -> data		633028	1					
ANR	633166	PtrMemberAccess	c -> data		633028	0					
ANR	633167	Identifier	c		633028	0					
ANR	633168	Identifier	data		633028	1					
ANR	633169	Argument	l		633028	2					
ANR	633170	Identifier	l		633028	0					
ANR	633171	ElseStatement	else		633028	0					
ANR	633172	CompoundStatement		17:4:450:492	633028	0					
ANR	633173	IdentifierDeclStatement	"ut64 l = R_MIN ( c -> to - priv -> offset , len ) ;"	158:4:3638:3680	633028	0	True				
ANR	633174	IdentifierDecl	"l = R_MIN ( c -> to - priv -> offset , len )"		633028	0					
ANR	633175	IdentifierDeclType	ut64		633028	0					
ANR	633176	Identifier	l		633028	1					
ANR	633177	AssignmentExpression	"l = R_MIN ( c -> to - priv -> offset , len )"		633028	2		=			
ANR	633178	Identifier	l		633028	0					
ANR	633179	CallExpression	"R_MIN ( c -> to - priv -> offset , len )"		633028	1					
ANR	633180	Callee	R_MIN		633028	0					
ANR	633181	Identifier	R_MIN		633028	0					
ANR	633182	ArgumentList	c -> to - priv -> offset		633028	1					
ANR	633183	Argument	c -> to - priv -> offset		633028	0					
ANR	633184	AdditiveExpression	c -> to - priv -> offset		633028	0		-			
ANR	633185	PtrMemberAccess	c -> to		633028	0					
ANR	633186	Identifier	c		633028	0					
ANR	633187	Identifier	to		633028	1					
ANR	633188	PtrMemberAccess	priv -> offset		633028	1					
ANR	633189	Identifier	priv		633028	0					
ANR	633190	Identifier	offset		633028	1					
ANR	633191	Argument	len		633028	1					
ANR	633192	Identifier	len		633028	0					
ANR	633193	ExpressionStatement	"memcpy ( buf , c -> data + priv -> offset - c -> from , l )"	159:4:3686:3735	633028	1	True				
ANR	633194	CallExpression	"memcpy ( buf , c -> data + priv -> offset - c -> from , l )"		633028	0					
ANR	633195	Callee	memcpy		633028	0					
ANR	633196	Identifier	memcpy		633028	0					
ANR	633197	ArgumentList	buf		633028	1					
ANR	633198	Argument	buf		633028	0					
ANR	633199	Identifier	buf		633028	0					
ANR	633200	Argument	c -> data + priv -> offset - c -> from		633028	1					
ANR	633201	AdditiveExpression	c -> data + priv -> offset - c -> from		633028	0		+			
ANR	633202	PtrMemberAccess	c -> data		633028	0					
ANR	633203	Identifier	c		633028	0					
ANR	633204	Identifier	data		633028	1					
ANR	633205	AdditiveExpression	priv -> offset - c -> from		633028	1		-			
ANR	633206	PtrMemberAccess	priv -> offset		633028	0					
ANR	633207	Identifier	priv		633028	0					
ANR	633208	Identifier	offset		633028	1					
ANR	633209	PtrMemberAccess	c -> from		633028	1					
ANR	633210	Identifier	c		633028	0					
ANR	633211	Identifier	from		633028	1					
ANR	633212	Argument	l		633028	2					
ANR	633213	Identifier	l		633028	0					
ANR	633214	IfStatement	if ( priv -> offset > max )		633028	16					
ANR	633215	Condition	priv -> offset > max	163:5:3754:3771	633028	0	True				
ANR	633216	RelationalExpression	priv -> offset > max		633028	0		>			
ANR	633217	PtrMemberAccess	priv -> offset		633028	0					
ANR	633218	Identifier	priv		633028	0					
ANR	633219	Identifier	offset		633028	1					
ANR	633220	Identifier	max		633028	1					
ANR	633221	CompoundStatement		22:25:586:586	633028	1					
ANR	633222	ReturnStatement	return - 1 ;	164:2:3778:3787	633028	0	True				
ANR	633223	UnaryOperationExpression	- 1		633028	0					
ANR	633224	UnaryOperator	-		633028	0					
ANR	633225	PrimaryExpression	1		633028	1					
ANR	633226	IdentifierDeclStatement	"ut64 r = R_MIN ( max - priv -> offset , len ) ;"	166:1:3793:3833	633028	17	True				
ANR	633227	IdentifierDecl	"r = R_MIN ( max - priv -> offset , len )"		633028	0					
ANR	633228	IdentifierDeclType	ut64		633028	0					
ANR	633229	Identifier	r		633028	1					
ANR	633230	AssignmentExpression	"r = R_MIN ( max - priv -> offset , len )"		633028	2		=			
ANR	633231	Identifier	r		633028	0					
ANR	633232	CallExpression	"R_MIN ( max - priv -> offset , len )"		633028	1					
ANR	633233	Callee	R_MIN		633028	0					
ANR	633234	Identifier	R_MIN		633028	0					
ANR	633235	ArgumentList	max - priv -> offset		633028	1					
ANR	633236	Argument	max - priv -> offset		633028	0					
ANR	633237	AdditiveExpression	max - priv -> offset		633028	0		-			
ANR	633238	Identifier	max		633028	0					
ANR	633239	PtrMemberAccess	priv -> offset		633028	1					
ANR	633240	Identifier	priv		633028	0					
ANR	633241	Identifier	offset		633028	1					
ANR	633242	Argument	len		633028	1					
ANR	633243	Identifier	len		633028	0					
ANR	633244	ExpressionStatement	priv -> offset += r	167:1:3836:3853	633028	18	True				
ANR	633245	AssignmentExpression	priv -> offset += r		633028	0		+=			
ANR	633246	PtrMemberAccess	priv -> offset		633028	0					
ANR	633247	Identifier	priv		633028	0					
ANR	633248	Identifier	offset		633028	1					
ANR	633249	Identifier	r		633028	1					
ANR	633250	ReturnStatement	return r ;	168:1:3856:3864	633028	19	True				
ANR	633251	Identifier	r		633028	0					
ANR	633252	ReturnType	static st64		633028	1					
ANR	633253	Identifier	buf_sparse_read		633028	2					
ANR	633254	ParameterList	"RBuffer * b , ut8 * buf , ut64 len"		633028	3					
ANR	633255	Parameter	RBuffer * b	142:28:3155:3164	633028	0	True				
ANR	633256	ParameterType	RBuffer *		633028	0					
ANR	633257	Identifier	b		633028	1					
ANR	633258	Parameter	ut8 * buf	142:40:3167:3174	633028	1	True				
ANR	633259	ParameterType	ut8 *		633028	0					
ANR	633260	Identifier	buf		633028	1					
ANR	633261	Parameter	ut64 len	142:50:3177:3184	633028	2	True				
ANR	633262	ParameterType	ut64		633028	0					
ANR	633263	Identifier	len		633028	1					
ANR	633264	CFGEntryNode	ENTRY		633028		True				
ANR	633265	CFGExitNode	EXIT		633028		True				
ANR	633266	Symbol	b		633028						
ANR	633267	Symbol	c		633028						
ANR	633268	Symbol	max		633028						
ANR	633269	Symbol	* priv		633028						
ANR	633270	Symbol	c -> from		633028						
ANR	633271	Symbol	iter		633028						
ANR	633272	Symbol	c -> size		633028						
ANR	633273	Symbol	R_MIN		633028						
ANR	633274	Symbol	* b		633028						
ANR	633275	Symbol	b -> Oxff_priv		633028						
ANR	633276	Symbol	l		633028						
ANR	633277	Symbol	* c		633028						
ANR	633278	Symbol	c -> data		633028						
ANR	633279	Symbol	get_priv_sparse		633028						
ANR	633280	Symbol	buf		633028						
ANR	633281	Symbol	r		633028						
ANR	633282	Symbol	len		633028						
ANR	633283	Symbol	priv -> offset		633028						
ANR	633284	Symbol	c -> to		633028						
ANR	633285	Symbol	priv		633028						
ANR	633286	Function	buf_sparse_write	171:0:3869:4085							
ANR	633287	FunctionDef	"buf_sparse_write (RBuffer * b , const ut8 * buf , ut64 len)"		633286	0					
ANR	633288	CompoundStatement		171:67:3936:4085	633286	0					
ANR	633289	IdentifierDeclStatement	struct buf_sparse_priv * priv = get_priv_sparse ( b ) ;	172:1:3939:3989	633286	0	True				
ANR	633290	IdentifierDecl	* priv = get_priv_sparse ( b )		633286	0					
ANR	633291	IdentifierDeclType	struct buf_sparse_priv *		633286	0					
ANR	633292	Identifier	priv		633286	1					
ANR	633293	AssignmentExpression	* priv = get_priv_sparse ( b )		633286	2		=			
ANR	633294	Identifier	priv		633286	0					
ANR	633295	CallExpression	get_priv_sparse ( b )		633286	1					
ANR	633296	Callee	get_priv_sparse		633286	0					
ANR	633297	Identifier	get_priv_sparse		633286	0					
ANR	633298	ArgumentList	b		633286	1					
ANR	633299	Argument	b		633286	0					
ANR	633300	Identifier	b		633286	0					
ANR	633301	IdentifierDeclStatement	"st64 r = sparse_write ( priv -> sparse , priv -> offset , buf , len ) ;"	173:1:3992:4052	633286	1	True				
ANR	633302	IdentifierDecl	"r = sparse_write ( priv -> sparse , priv -> offset , buf , len )"		633286	0					
ANR	633303	IdentifierDeclType	st64		633286	0					
ANR	633304	Identifier	r		633286	1					
ANR	633305	AssignmentExpression	"r = sparse_write ( priv -> sparse , priv -> offset , buf , len )"		633286	2		=			
ANR	633306	Identifier	r		633286	0					
ANR	633307	CallExpression	"sparse_write ( priv -> sparse , priv -> offset , buf , len )"		633286	1					
ANR	633308	Callee	sparse_write		633286	0					
ANR	633309	Identifier	sparse_write		633286	0					
ANR	633310	ArgumentList	priv -> sparse		633286	1					
ANR	633311	Argument	priv -> sparse		633286	0					
ANR	633312	PtrMemberAccess	priv -> sparse		633286	0					
ANR	633313	Identifier	priv		633286	0					
ANR	633314	Identifier	sparse		633286	1					
ANR	633315	Argument	priv -> offset		633286	1					
ANR	633316	PtrMemberAccess	priv -> offset		633286	0					
ANR	633317	Identifier	priv		633286	0					
ANR	633318	Identifier	offset		633286	1					
ANR	633319	Argument	buf		633286	2					
ANR	633320	Identifier	buf		633286	0					
ANR	633321	Argument	len		633286	3					
ANR	633322	Identifier	len		633286	0					
ANR	633323	ExpressionStatement	priv -> offset += r	174:1:4055:4072	633286	2	True				
ANR	633324	AssignmentExpression	priv -> offset += r		633286	0		+=			
ANR	633325	PtrMemberAccess	priv -> offset		633286	0					
ANR	633326	Identifier	priv		633286	0					
ANR	633327	Identifier	offset		633286	1					
ANR	633328	Identifier	r		633286	1					
ANR	633329	ReturnStatement	return r ;	175:1:4075:4083	633286	3	True				
ANR	633330	Identifier	r		633286	0					
ANR	633331	ReturnType	static st64		633286	1					
ANR	633332	Identifier	buf_sparse_write		633286	2					
ANR	633333	ParameterList	"RBuffer * b , const ut8 * buf , ut64 len"		633286	3					
ANR	633334	Parameter	RBuffer * b	171:29:3898:3907	633286	0	True				
ANR	633335	ParameterType	RBuffer *		633286	0					
ANR	633336	Identifier	b		633286	1					
ANR	633337	Parameter	const ut8 * buf	171:41:3910:3923	633286	1	True				
ANR	633338	ParameterType	const ut8 *		633286	0					
ANR	633339	Identifier	buf		633286	1					
ANR	633340	Parameter	ut64 len	171:57:3926:3933	633286	2	True				
ANR	633341	ParameterType	ut64		633286	0					
ANR	633342	Identifier	len		633286	1					
ANR	633343	CFGEntryNode	ENTRY		633286		True				
ANR	633344	CFGExitNode	EXIT		633286		True				
ANR	633345	Symbol	get_priv_sparse		633286						
ANR	633346	Symbol	b		633286						
ANR	633347	Symbol	buf		633286						
ANR	633348	Symbol	r		633286						
ANR	633349	Symbol	len		633286						
ANR	633350	Symbol	sparse_write		633286						
ANR	633351	Symbol	priv -> offset		633286						
ANR	633352	Symbol	* priv		633286						
ANR	633353	Symbol	priv		633286						
ANR	633354	Symbol	priv -> sparse		633286						
ANR	633355	Function	buf_sparse_seek	178:0:4088:4589							
ANR	633356	FunctionDef	"buf_sparse_seek (RBuffer * b , st64 addr , int whence)"		633355	0					
ANR	633357	CompoundStatement		178:63:4151:4589	633355	0					
ANR	633358	IdentifierDeclStatement	struct buf_sparse_priv * priv = get_priv_sparse ( b ) ;	179:1:4154:4204	633355	0	True				
ANR	633359	IdentifierDecl	* priv = get_priv_sparse ( b )		633355	0					
ANR	633360	IdentifierDeclType	struct buf_sparse_priv *		633355	0					
ANR	633361	Identifier	priv		633355	1					
ANR	633362	AssignmentExpression	* priv = get_priv_sparse ( b )		633355	2		=			
ANR	633363	Identifier	priv		633355	0					
ANR	633364	CallExpression	get_priv_sparse ( b )		633355	1					
ANR	633365	Callee	get_priv_sparse		633355	0					
ANR	633366	Identifier	get_priv_sparse		633355	0					
ANR	633367	ArgumentList	b		633355	1					
ANR	633368	Argument	b		633355	0					
ANR	633369	Identifier	b		633355	0					
ANR	633370	IdentifierDeclStatement	ut64 max ;	180:1:4207:4215	633355	1	True				
ANR	633371	IdentifierDecl	max		633355	0					
ANR	633372	IdentifierDeclType	ut64		633355	0					
ANR	633373	Identifier	max		633355	1					
ANR	633374	IfStatement	if ( addr < 0 && ( - addr ) > ( st64 ) priv -> offset )		633355	2					
ANR	633375	Condition	addr < 0 && ( - addr ) > ( st64 ) priv -> offset	181:5:4222:4261	633355	0	True				
ANR	633376	AndExpression	addr < 0 && ( - addr ) > ( st64 ) priv -> offset		633355	0		&&			
ANR	633377	RelationalExpression	addr < 0		633355	0		<			
ANR	633378	Identifier	addr		633355	0					
ANR	633379	PrimaryExpression	0		633355	1					
ANR	633380	RelationalExpression	( - addr ) > ( st64 ) priv -> offset		633355	1		>			
ANR	633381	UnaryOperationExpression	- addr		633355	0					
ANR	633382	UnaryOperator	-		633355	0					
ANR	633383	Identifier	addr		633355	1					
ANR	633384	CastExpression	( st64 ) priv -> offset		633355	1					
ANR	633385	CastTarget	st64		633355	0					
ANR	633386	PtrMemberAccess	priv -> offset		633355	1					
ANR	633387	Identifier	priv		633355	0					
ANR	633388	Identifier	offset		633355	1					
ANR	633389	CompoundStatement		4:47:112:112	633355	1					
ANR	633390	ReturnStatement	return - 1 ;	182:2:4268:4277	633355	0	True				
ANR	633391	UnaryOperationExpression	- 1		633355	0					
ANR	633392	UnaryOperator	-		633355	0					
ANR	633393	PrimaryExpression	1		633355	1					
ANR	633394	SwitchStatement	switch ( whence )		633355	3					
ANR	633395	Condition	whence	185:9:4292:4297	633355	0	True				
ANR	633396	Identifier	whence		633355	0					
ANR	633397	CompoundStatement		8:17:148:148	633355	1					
ANR	633398	Label	case R_BUF_CUR :	186:1:4303:4317	633355	0	True				
ANR	633399	Identifier	R_BUF_CUR		633355	0					
ANR	633400	ExpressionStatement	priv -> offset += addr	187:2:4321:4341	633355	1	True				
ANR	633401	AssignmentExpression	priv -> offset += addr		633355	0		+=			
ANR	633402	PtrMemberAccess	priv -> offset		633355	0					
ANR	633403	Identifier	priv		633355	0					
ANR	633404	Identifier	offset		633355	1					
ANR	633405	Identifier	addr		633355	1					
ANR	633406	BreakStatement	break ;	188:2:4345:4350	633355	2	True				
ANR	633407	Label	case R_BUF_SET :	189:1:4353:4367	633355	3	True				
ANR	633408	Identifier	R_BUF_SET		633355	0					
ANR	633409	ExpressionStatement	priv -> offset = addr	190:2:4371:4390	633355	4	True				
ANR	633410	AssignmentExpression	priv -> offset = addr		633355	0		=			
ANR	633411	PtrMemberAccess	priv -> offset		633355	0					
ANR	633412	Identifier	priv		633355	0					
ANR	633413	Identifier	offset		633355	1					
ANR	633414	Identifier	addr		633355	1					
ANR	633415	BreakStatement	break ;	191:2:4394:4399	633355	5	True				
ANR	633416	Label	case R_BUF_END :	192:1:4402:4416	633355	6	True				
ANR	633417	Identifier	R_BUF_END		633355	0					
ANR	633418	IfStatement	"if ( ! sparse_limits ( priv -> sparse , & max ) )"		633355	7					
ANR	633419	Condition	"! sparse_limits ( priv -> sparse , & max )"	193:6:4424:4458	633355	0	True				
ANR	633420	UnaryOperationExpression	"! sparse_limits ( priv -> sparse , & max )"		633355	0					
ANR	633421	UnaryOperator	!		633355	0					
ANR	633422	CallExpression	"sparse_limits ( priv -> sparse , & max )"		633355	1					
ANR	633423	Callee	sparse_limits		633355	0					
ANR	633424	Identifier	sparse_limits		633355	0					
ANR	633425	ArgumentList	priv -> sparse		633355	1					
ANR	633426	Argument	priv -> sparse		633355	0					
ANR	633427	PtrMemberAccess	priv -> sparse		633355	0					
ANR	633428	Identifier	priv		633355	0					
ANR	633429	Identifier	sparse		633355	1					
ANR	633430	Argument	& max		633355	1					
ANR	633431	UnaryOperationExpression	& max		633355	0					
ANR	633432	UnaryOperator	&		633355	0					
ANR	633433	Identifier	max		633355	1					
ANR	633434	CompoundStatement		16:43:309:309	633355	1					
ANR	633435	ExpressionStatement	max = 0	194:3:4466:4473	633355	0	True				
ANR	633436	AssignmentExpression	max = 0		633355	0		=			
ANR	633437	Identifier	max		633355	0					
ANR	633438	PrimaryExpression	0		633355	1					
ANR	633439	ExpressionStatement	priv -> offset = max + addr	196:2:4481:4506	633355	8	True				
ANR	633440	AssignmentExpression	priv -> offset = max + addr		633355	0		=			
ANR	633441	PtrMemberAccess	priv -> offset		633355	0					
ANR	633442	Identifier	priv		633355	0					
ANR	633443	Identifier	offset		633355	1					
ANR	633444	AdditiveExpression	max + addr		633355	1		+			
ANR	633445	Identifier	max		633355	0					
ANR	633446	Identifier	addr		633355	1					
ANR	633447	BreakStatement	break ;	197:2:4510:4515	633355	9	True				
ANR	633448	Label	default :	198:1:4518:4525	633355	10	True				
ANR	633449	Identifier	default		633355	0					
ANR	633450	ExpressionStatement	r_warn_if_reached ( )	199:2:4529:4549	633355	11	True				
ANR	633451	CallExpression	r_warn_if_reached ( )		633355	0					
ANR	633452	Callee	r_warn_if_reached		633355	0					
ANR	633453	Identifier	r_warn_if_reached		633355	0					
ANR	633454	ArgumentList			633355	1					
ANR	633455	ReturnStatement	return - 1 ;	200:2:4553:4562	633355	12	True				
ANR	633456	UnaryOperationExpression	- 1		633355	0					
ANR	633457	UnaryOperator	-		633355	0					
ANR	633458	PrimaryExpression	1		633355	1					
ANR	633459	ReturnStatement	return priv -> offset ;	202:1:4568:4587	633355	4	True				
ANR	633460	PtrMemberAccess	priv -> offset		633355	0					
ANR	633461	Identifier	priv		633355	0					
ANR	633462	Identifier	offset		633355	1					
ANR	633463	ReturnType	static st64		633355	1					
ANR	633464	Identifier	buf_sparse_seek		633355	2					
ANR	633465	ParameterList	"RBuffer * b , st64 addr , int whence"		633355	3					
ANR	633466	Parameter	RBuffer * b	178:28:4116:4125	633355	0	True				
ANR	633467	ParameterType	RBuffer *		633355	0					
ANR	633468	Identifier	b		633355	1					
ANR	633469	Parameter	st64 addr	178:40:4128:4136	633355	1	True				
ANR	633470	ParameterType	st64		633355	0					
ANR	633471	Identifier	addr		633355	1					
ANR	633472	Parameter	int whence	178:51:4139:4148	633355	2	True				
ANR	633473	ParameterType	int		633355	0					
ANR	633474	Identifier	whence		633355	1					
ANR	633475	CFGEntryNode	ENTRY		633355		True				
ANR	633476	CFGExitNode	EXIT		633355		True				
ANR	633477	Symbol	get_priv_sparse		633355						
ANR	633478	Symbol	b		633355						
ANR	633479	Symbol	priv -> offset		633355						
ANR	633480	Symbol	whence		633355						
ANR	633481	Symbol	max		633355						
ANR	633482	Symbol	* priv		633355						
ANR	633483	Symbol	priv		633355						
ANR	633484	Symbol	addr		633355						
ANR	633485	Symbol	sparse_limits		633355						
ANR	633486	Symbol	priv -> sparse		633355						
ANR	633487	Symbol	& max		633355						
ANR	633488	Function	buf_sparse_nonempty_list	205:0:4592:4735							
ANR	633489	FunctionDef	buf_sparse_nonempty_list (RBuffer * b)		633488	0					
ANR	633490	CompoundStatement		205:51:4643:4735	633488	0					
ANR	633491	IdentifierDeclStatement	struct buf_sparse_priv * priv = get_priv_sparse ( b ) ;	206:1:4646:4696	633488	0	True				
ANR	633492	IdentifierDecl	* priv = get_priv_sparse ( b )		633488	0					
ANR	633493	IdentifierDeclType	struct buf_sparse_priv *		633488	0					
ANR	633494	Identifier	priv		633488	1					
ANR	633495	AssignmentExpression	* priv = get_priv_sparse ( b )		633488	2		=			
ANR	633496	Identifier	priv		633488	0					
ANR	633497	CallExpression	get_priv_sparse ( b )		633488	1					
ANR	633498	Callee	get_priv_sparse		633488	0					
ANR	633499	Identifier	get_priv_sparse		633488	0					
ANR	633500	ArgumentList	b		633488	1					
ANR	633501	Argument	b		633488	0					
ANR	633502	Identifier	b		633488	0					
ANR	633503	ReturnStatement	return r_list_clone ( priv -> sparse ) ;	207:1:4699:4733	633488	1	True				
ANR	633504	CallExpression	r_list_clone ( priv -> sparse )		633488	0					
ANR	633505	Callee	r_list_clone		633488	0					
ANR	633506	Identifier	r_list_clone		633488	0					
ANR	633507	ArgumentList	priv -> sparse		633488	1					
ANR	633508	Argument	priv -> sparse		633488	0					
ANR	633509	PtrMemberAccess	priv -> sparse		633488	0					
ANR	633510	Identifier	priv		633488	0					
ANR	633511	Identifier	sparse		633488	1					
ANR	633512	ReturnType	static RList *		633488	1					
ANR	633513	Identifier	buf_sparse_nonempty_list		633488	2					
ANR	633514	ParameterList	RBuffer * b		633488	3					
ANR	633515	Parameter	RBuffer * b	205:39:4631:4640	633488	0	True				
ANR	633516	ParameterType	RBuffer *		633488	0					
ANR	633517	Identifier	b		633488	1					
ANR	633518	CFGEntryNode	ENTRY		633488		True				
ANR	633519	CFGExitNode	EXIT		633488		True				
ANR	633520	Symbol	get_priv_sparse		633488						
ANR	633521	Symbol	b		633488						
ANR	633522	Symbol	* priv		633488						
ANR	633523	Symbol	r_list_clone		633488						
ANR	633524	Symbol	priv		633488						
ANR	633525	Symbol	priv -> sparse		633488						
ANR	633526	DeclStmt									
ANR	633527	Decl							const RBufferMethods	const RBufferMethods	buffer_sparse_methods
