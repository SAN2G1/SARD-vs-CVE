command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5267361	File	data/converged/CVE-2019-16718~_radare2/libr_util_utf16.c								
ANR	5267362	Function	r_utf16le_decode	7:0:142:608							
ANR	5267363	FunctionDef	"r_utf16le_decode (const ut8 * ptr , int ptrlen , RRune * ch)"		5267362	0					
ANR	5267364	CompoundStatement		7:66:208:608	5267362	0					
ANR	5267365	IfStatement	if ( ptrlen < 1 )		5267362	0					
ANR	5267366	Condition	ptrlen < 1	8:5:215:224	5267362	0	True				
ANR	5267367	RelationalExpression	ptrlen < 1		5267362	0		<			
ANR	5267368	Identifier	ptrlen		5267362	0					
ANR	5267369	PrimaryExpression	1		5267362	1					
ANR	5267370	CompoundStatement		2:17:18:18	5267362	1					
ANR	5267371	ReturnStatement	return 0 ;	9:2:231:239	5267362	0	True				
ANR	5267372	PrimaryExpression	0		5267362	0					
ANR	5267373	IfStatement	if ( ptrlen > 3 && ( ptr [ 1 ] & 0xdc ) == 0xd8 && ( ptr [ 3 ] & 0xdc ) == 0xdc )		5267362	1					
ANR	5267374	Condition	ptrlen > 3 && ( ptr [ 1 ] & 0xdc ) == 0xd8 && ( ptr [ 3 ] & 0xdc ) == 0xdc	11:5:249:312	5267362	0	True				
ANR	5267375	AndExpression	ptrlen > 3 && ( ptr [ 1 ] & 0xdc ) == 0xd8 && ( ptr [ 3 ] & 0xdc ) == 0xdc		5267362	0		&&			
ANR	5267376	RelationalExpression	ptrlen > 3		5267362	0		>			
ANR	5267377	Identifier	ptrlen		5267362	0					
ANR	5267378	PrimaryExpression	3		5267362	1					
ANR	5267379	AndExpression	( ptr [ 1 ] & 0xdc ) == 0xd8 && ( ptr [ 3 ] & 0xdc ) == 0xdc		5267362	1		&&			
ANR	5267380	EqualityExpression	( ptr [ 1 ] & 0xdc ) == 0xd8		5267362	0		==			
ANR	5267381	BitAndExpression	ptr [ 1 ] & 0xdc		5267362	0		&			
ANR	5267382	ArrayIndexing	ptr [ 1 ]		5267362	0					
ANR	5267383	Identifier	ptr		5267362	0					
ANR	5267384	PrimaryExpression	1		5267362	1					
ANR	5267385	PrimaryExpression	0xdc		5267362	1					
ANR	5267386	PrimaryExpression	0xd8		5267362	1					
ANR	5267387	EqualityExpression	( ptr [ 3 ] & 0xdc ) == 0xdc		5267362	1		==			
ANR	5267388	BitAndExpression	ptr [ 3 ] & 0xdc		5267362	0		&			
ANR	5267389	ArrayIndexing	ptr [ 3 ]		5267362	0					
ANR	5267390	Identifier	ptr		5267362	0					
ANR	5267391	PrimaryExpression	3		5267362	1					
ANR	5267392	PrimaryExpression	0xdc		5267362	1					
ANR	5267393	PrimaryExpression	0xdc		5267362	1					
ANR	5267394	CompoundStatement		5:71:106:106	5267362	1					
ANR	5267395	IfStatement	if ( ch )		5267362	0					
ANR	5267396	Condition	ch	12:6:323:324	5267362	0	True				
ANR	5267397	Identifier	ch		5267362	0					
ANR	5267398	CompoundStatement		6:10:118:118	5267362	1					
ANR	5267399	ExpressionStatement	* ch = ( ( ptr [ 1 ] & 3 ) << 24 | ptr [ 0 ] << 16 | ( ptr [ 3 ] & 3 ) << 8 | ptr [ 2 ] ) + 0x10000	13:3:332:412	5267362	0	True				
ANR	5267400	AssignmentExpression	* ch = ( ( ptr [ 1 ] & 3 ) << 24 | ptr [ 0 ] << 16 | ( ptr [ 3 ] & 3 ) << 8 | ptr [ 2 ] ) + 0x10000		5267362	0		=			
ANR	5267401	UnaryOperationExpression	* ch		5267362	0					
ANR	5267402	UnaryOperator	*		5267362	0					
ANR	5267403	Identifier	ch		5267362	1					
ANR	5267404	AdditiveExpression	( ( ptr [ 1 ] & 3 ) << 24 | ptr [ 0 ] << 16 | ( ptr [ 3 ] & 3 ) << 8 | ptr [ 2 ] ) + 0x10000		5267362	1		+			
ANR	5267405	InclusiveOrExpression	( ptr [ 1 ] & 3 ) << 24 | ptr [ 0 ] << 16 | ( ptr [ 3 ] & 3 ) << 8 | ptr [ 2 ]		5267362	0		|			
ANR	5267406	ShiftExpression	( ptr [ 1 ] & 3 ) << 24		5267362	0		<<			
ANR	5267407	BitAndExpression	ptr [ 1 ] & 3		5267362	0		&			
ANR	5267408	ArrayIndexing	ptr [ 1 ]		5267362	0					
ANR	5267409	Identifier	ptr		5267362	0					
ANR	5267410	PrimaryExpression	1		5267362	1					
ANR	5267411	PrimaryExpression	3		5267362	1					
ANR	5267412	PrimaryExpression	24		5267362	1					
ANR	5267413	InclusiveOrExpression	ptr [ 0 ] << 16 | ( ptr [ 3 ] & 3 ) << 8 | ptr [ 2 ]		5267362	1		|			
ANR	5267414	ShiftExpression	ptr [ 0 ] << 16		5267362	0		<<			
ANR	5267415	ArrayIndexing	ptr [ 0 ]		5267362	0					
ANR	5267416	Identifier	ptr		5267362	0					
ANR	5267417	PrimaryExpression	0		5267362	1					
ANR	5267418	PrimaryExpression	16		5267362	1					
ANR	5267419	InclusiveOrExpression	( ptr [ 3 ] & 3 ) << 8 | ptr [ 2 ]		5267362	1		|			
ANR	5267420	ShiftExpression	( ptr [ 3 ] & 3 ) << 8		5267362	0		<<			
ANR	5267421	BitAndExpression	ptr [ 3 ] & 3		5267362	0		&			
ANR	5267422	ArrayIndexing	ptr [ 3 ]		5267362	0					
ANR	5267423	Identifier	ptr		5267362	0					
ANR	5267424	PrimaryExpression	3		5267362	1					
ANR	5267425	PrimaryExpression	3		5267362	1					
ANR	5267426	PrimaryExpression	8		5267362	1					
ANR	5267427	ArrayIndexing	ptr [ 2 ]		5267362	1					
ANR	5267428	Identifier	ptr		5267362	0					
ANR	5267429	PrimaryExpression	2		5267362	1					
ANR	5267430	PrimaryExpression	0x10000		5267362	1					
ANR	5267431	ReturnStatement	return 4 ;	15:2:420:428	5267362	1	True				
ANR	5267432	PrimaryExpression	4		5267362	0					
ANR	5267433	IfStatement	if ( ptrlen > 1 && ptr [ 1 ] )		5267362	2					
ANR	5267434	Condition	ptrlen > 1 && ptr [ 1 ]	17:5:438:457	5267362	0	True				
ANR	5267435	AndExpression	ptrlen > 1 && ptr [ 1 ]		5267362	0		&&			
ANR	5267436	RelationalExpression	ptrlen > 1		5267362	0		>			
ANR	5267437	Identifier	ptrlen		5267362	0					
ANR	5267438	PrimaryExpression	1		5267362	1					
ANR	5267439	ArrayIndexing	ptr [ 1 ]		5267362	1					
ANR	5267440	Identifier	ptr		5267362	0					
ANR	5267441	PrimaryExpression	1		5267362	1					
ANR	5267442	CompoundStatement		11:27:251:251	5267362	1					
ANR	5267443	IfStatement	if ( ch )		5267362	0					
ANR	5267444	Condition	ch	18:6:468:469	5267362	0	True				
ANR	5267445	Identifier	ch		5267362	0					
ANR	5267446	CompoundStatement		12:10:263:263	5267362	1					
ANR	5267447	ExpressionStatement	* ch = ptr [ 1 ] << 8 | ptr [ 0 ]	19:3:477:503	5267362	0	True				
ANR	5267448	AssignmentExpression	* ch = ptr [ 1 ] << 8 | ptr [ 0 ]		5267362	0		=			
ANR	5267449	UnaryOperationExpression	* ch		5267362	0					
ANR	5267450	UnaryOperator	*		5267362	0					
ANR	5267451	Identifier	ch		5267362	1					
ANR	5267452	InclusiveOrExpression	ptr [ 1 ] << 8 | ptr [ 0 ]		5267362	1		|			
ANR	5267453	ShiftExpression	ptr [ 1 ] << 8		5267362	0		<<			
ANR	5267454	ArrayIndexing	ptr [ 1 ]		5267362	0					
ANR	5267455	Identifier	ptr		5267362	0					
ANR	5267456	PrimaryExpression	1		5267362	1					
ANR	5267457	PrimaryExpression	8		5267362	1					
ANR	5267458	ArrayIndexing	ptr [ 0 ]		5267362	1					
ANR	5267459	Identifier	ptr		5267362	0					
ANR	5267460	PrimaryExpression	0		5267362	1					
ANR	5267461	ReturnStatement	return 2 ;	21:2:511:519	5267362	1	True				
ANR	5267462	PrimaryExpression	2		5267362	0					
ANR	5267463	IfStatement	if ( ptrlen > 1 )		5267362	3					
ANR	5267464	Condition	ptrlen > 1	23:5:529:538	5267362	0	True				
ANR	5267465	RelationalExpression	ptrlen > 1		5267362	0		>			
ANR	5267466	Identifier	ptrlen		5267362	0					
ANR	5267467	PrimaryExpression	1		5267362	1					
ANR	5267468	CompoundStatement		17:17:332:332	5267362	1					
ANR	5267469	IfStatement	if ( ch )		5267362	0					
ANR	5267470	Condition	ch	24:6:549:550	5267362	0	True				
ANR	5267471	Identifier	ch		5267362	0					
ANR	5267472	CompoundStatement		18:10:344:344	5267362	1					
ANR	5267473	ExpressionStatement	* ch = ( ut32 ) ptr [ 0 ]	25:3:558:576	5267362	0	True				
ANR	5267474	AssignmentExpression	* ch = ( ut32 ) ptr [ 0 ]		5267362	0		=			
ANR	5267475	UnaryOperationExpression	* ch		5267362	0					
ANR	5267476	UnaryOperator	*		5267362	0					
ANR	5267477	Identifier	ch		5267362	1					
ANR	5267478	CastExpression	( ut32 ) ptr [ 0 ]		5267362	1					
ANR	5267479	CastTarget	ut32		5267362	0					
ANR	5267480	ArrayIndexing	ptr [ 0 ]		5267362	1					
ANR	5267481	Identifier	ptr		5267362	0					
ANR	5267482	PrimaryExpression	0		5267362	1					
ANR	5267483	ReturnStatement	return 1 ;	27:2:584:592	5267362	1	True				
ANR	5267484	PrimaryExpression	1		5267362	0					
ANR	5267485	ReturnStatement	return 0 ;	29:1:598:606	5267362	4	True				
ANR	5267486	PrimaryExpression	0		5267362	0					
ANR	5267487	ReturnType	R_API int		5267362	1					
ANR	5267488	Identifier	r_utf16le_decode		5267362	2					
ANR	5267489	ParameterList	"const ut8 * ptr , int ptrlen , RRune * ch"		5267362	3					
ANR	5267490	Parameter	const ut8 * ptr	7:27:169:182	5267362	0	True				
ANR	5267491	ParameterType	const ut8 *		5267362	0					
ANR	5267492	Identifier	ptr		5267362	1					
ANR	5267493	Parameter	int ptrlen	7:43:185:194	5267362	1	True				
ANR	5267494	ParameterType	int		5267362	0					
ANR	5267495	Identifier	ptrlen		5267362	1					
ANR	5267496	Parameter	RRune * ch	7:55:197:205	5267362	2	True				
ANR	5267497	ParameterType	RRune *		5267362	0					
ANR	5267498	Identifier	ch		5267362	1					
ANR	5267499	CFGEntryNode	ENTRY		5267362		True				
ANR	5267500	CFGExitNode	EXIT		5267362		True				
ANR	5267501	Symbol	ptrlen		5267362						
ANR	5267502	Symbol	ch		5267362						
ANR	5267503	Symbol	* ptr		5267362						
ANR	5267504	Symbol	* ch		5267362						
ANR	5267505	Symbol	ptr		5267362						
ANR	5267506	Function	r_utf16le_encode	33:0:661:1052							
ANR	5267507	FunctionDef	"r_utf16le_encode (ut8 * ptr , RRune ch)"		5267506	0					
ANR	5267508	CompoundStatement		33:47:708:1052	5267506	0					
ANR	5267509	IfStatement	if ( ch < 0x10000 )		5267506	0					
ANR	5267510	Condition	ch < 0x10000	34:5:715:726	5267506	0	True				
ANR	5267511	RelationalExpression	ch < 0x10000		5267506	0		<			
ANR	5267512	Identifier	ch		5267506	0					
ANR	5267513	PrimaryExpression	0x10000		5267506	1					
ANR	5267514	CompoundStatement		2:19:20:20	5267506	1					
ANR	5267515	ExpressionStatement	ptr [ 0 ] = ch & 0xff	35:2:733:751	5267506	0	True				
ANR	5267516	AssignmentExpression	ptr [ 0 ] = ch & 0xff		5267506	0		=			
ANR	5267517	ArrayIndexing	ptr [ 0 ]		5267506	0					
ANR	5267518	Identifier	ptr		5267506	0					
ANR	5267519	PrimaryExpression	0		5267506	1					
ANR	5267520	BitAndExpression	ch & 0xff		5267506	1		&			
ANR	5267521	Identifier	ch		5267506	0					
ANR	5267522	PrimaryExpression	0xff		5267506	1					
ANR	5267523	ExpressionStatement	ptr [ 1 ] = ch >> 8 & 0xff	36:2:755:778	5267506	1	True				
ANR	5267524	AssignmentExpression	ptr [ 1 ] = ch >> 8 & 0xff		5267506	0		=			
ANR	5267525	ArrayIndexing	ptr [ 1 ]		5267506	0					
ANR	5267526	Identifier	ptr		5267506	0					
ANR	5267527	PrimaryExpression	1		5267506	1					
ANR	5267528	BitAndExpression	ch >> 8 & 0xff		5267506	1		&			
ANR	5267529	ShiftExpression	ch >> 8		5267506	0		>>			
ANR	5267530	Identifier	ch		5267506	0					
ANR	5267531	PrimaryExpression	8		5267506	1					
ANR	5267532	PrimaryExpression	0xff		5267506	1					
ANR	5267533	ReturnStatement	return 2 ;	37:2:782:790	5267506	2	True				
ANR	5267534	PrimaryExpression	2		5267506	0					
ANR	5267535	IfStatement	if ( ch < 0x110000 )		5267506	1					
ANR	5267536	Condition	ch < 0x110000	39:5:800:812	5267506	0	True				
ANR	5267537	RelationalExpression	ch < 0x110000		5267506	0		<			
ANR	5267538	Identifier	ch		5267506	0					
ANR	5267539	PrimaryExpression	0x110000		5267506	1					
ANR	5267540	CompoundStatement		8:2:110:125	5267506	1					
ANR	5267541	IdentifierDeclStatement	"RRune high , low ;"	40:2:819:834	5267506	0	True				
ANR	5267542	IdentifierDecl	high		5267506	0					
ANR	5267543	IdentifierDeclType	RRune		5267506	0					
ANR	5267544	Identifier	high		5267506	1					
ANR	5267545	IdentifierDecl	low		5267506	1					
ANR	5267546	IdentifierDeclType	RRune		5267506	0					
ANR	5267547	Identifier	low		5267506	1					
ANR	5267548	ExpressionStatement	ch -= 0x10000	41:2:838:851	5267506	1	True				
ANR	5267549	AssignmentExpression	ch -= 0x10000		5267506	0		-=			
ANR	5267550	Identifier	ch		5267506	0					
ANR	5267551	PrimaryExpression	0x10000		5267506	1					
ANR	5267552	ExpressionStatement	high = 0xd800 + ( ch >> 10 & 0x3ff )	42:2:855:889	5267506	2	True				
ANR	5267553	AssignmentExpression	high = 0xd800 + ( ch >> 10 & 0x3ff )		5267506	0		=			
ANR	5267554	Identifier	high		5267506	0					
ANR	5267555	AdditiveExpression	0xd800 + ( ch >> 10 & 0x3ff )		5267506	1		+			
ANR	5267556	PrimaryExpression	0xd800		5267506	0					
ANR	5267557	BitAndExpression	ch >> 10 & 0x3ff		5267506	1		&			
ANR	5267558	ShiftExpression	ch >> 10		5267506	0		>>			
ANR	5267559	Identifier	ch		5267506	0					
ANR	5267560	PrimaryExpression	10		5267506	1					
ANR	5267561	PrimaryExpression	0x3ff		5267506	1					
ANR	5267562	ExpressionStatement	low = 0xdc00 + ( ch & 0x3ff )	43:2:893:920	5267506	3	True				
ANR	5267563	AssignmentExpression	low = 0xdc00 + ( ch & 0x3ff )		5267506	0		=			
ANR	5267564	Identifier	low		5267506	0					
ANR	5267565	AdditiveExpression	0xdc00 + ( ch & 0x3ff )		5267506	1		+			
ANR	5267566	PrimaryExpression	0xdc00		5267506	0					
ANR	5267567	BitAndExpression	ch & 0x3ff		5267506	1		&			
ANR	5267568	Identifier	ch		5267506	0					
ANR	5267569	PrimaryExpression	0x3ff		5267506	1					
ANR	5267570	ExpressionStatement	ptr [ 0 ] = high & 0xff	44:2:924:944	5267506	4	True				
ANR	5267571	AssignmentExpression	ptr [ 0 ] = high & 0xff		5267506	0		=			
ANR	5267572	ArrayIndexing	ptr [ 0 ]		5267506	0					
ANR	5267573	Identifier	ptr		5267506	0					
ANR	5267574	PrimaryExpression	0		5267506	1					
ANR	5267575	BitAndExpression	high & 0xff		5267506	1		&			
ANR	5267576	Identifier	high		5267506	0					
ANR	5267577	PrimaryExpression	0xff		5267506	1					
ANR	5267578	ExpressionStatement	ptr [ 1 ] = high >> 8 & 0xff	45:2:948:973	5267506	5	True				
ANR	5267579	AssignmentExpression	ptr [ 1 ] = high >> 8 & 0xff		5267506	0		=			
ANR	5267580	ArrayIndexing	ptr [ 1 ]		5267506	0					
ANR	5267581	Identifier	ptr		5267506	0					
ANR	5267582	PrimaryExpression	1		5267506	1					
ANR	5267583	BitAndExpression	high >> 8 & 0xff		5267506	1		&			
ANR	5267584	ShiftExpression	high >> 8		5267506	0		>>			
ANR	5267585	Identifier	high		5267506	0					
ANR	5267586	PrimaryExpression	8		5267506	1					
ANR	5267587	PrimaryExpression	0xff		5267506	1					
ANR	5267588	ExpressionStatement	ptr [ 2 ] = low & 0xff	46:2:977:996	5267506	6	True				
ANR	5267589	AssignmentExpression	ptr [ 2 ] = low & 0xff		5267506	0		=			
ANR	5267590	ArrayIndexing	ptr [ 2 ]		5267506	0					
ANR	5267591	Identifier	ptr		5267506	0					
ANR	5267592	PrimaryExpression	2		5267506	1					
ANR	5267593	BitAndExpression	low & 0xff		5267506	1		&			
ANR	5267594	Identifier	low		5267506	0					
ANR	5267595	PrimaryExpression	0xff		5267506	1					
ANR	5267596	ExpressionStatement	ptr [ 3 ] = low >> 8 & 0xff	47:2:1000:1024	5267506	7	True				
ANR	5267597	AssignmentExpression	ptr [ 3 ] = low >> 8 & 0xff		5267506	0		=			
ANR	5267598	ArrayIndexing	ptr [ 3 ]		5267506	0					
ANR	5267599	Identifier	ptr		5267506	0					
ANR	5267600	PrimaryExpression	3		5267506	1					
ANR	5267601	BitAndExpression	low >> 8 & 0xff		5267506	1		&			
ANR	5267602	ShiftExpression	low >> 8		5267506	0		>>			
ANR	5267603	Identifier	low		5267506	0					
ANR	5267604	PrimaryExpression	8		5267506	1					
ANR	5267605	PrimaryExpression	0xff		5267506	1					
ANR	5267606	ReturnStatement	return 4 ;	48:2:1028:1036	5267506	8	True				
ANR	5267607	PrimaryExpression	4		5267506	0					
ANR	5267608	ReturnStatement	return 0 ;	50:1:1042:1050	5267506	2	True				
ANR	5267609	PrimaryExpression	0		5267506	0					
ANR	5267610	ReturnType	R_API int		5267506	1					
ANR	5267611	Identifier	r_utf16le_encode		5267506	2					
ANR	5267612	ParameterList	"ut8 * ptr , RRune ch"		5267506	3					
ANR	5267613	Parameter	ut8 * ptr	33:27:688:695	5267506	0	True				
ANR	5267614	ParameterType	ut8 *		5267506	0					
ANR	5267615	Identifier	ptr		5267506	1					
ANR	5267616	Parameter	RRune ch	33:37:698:705	5267506	1	True				
ANR	5267617	ParameterType	RRune		5267506	0					
ANR	5267618	Identifier	ch		5267506	1					
ANR	5267619	CFGEntryNode	ENTRY		5267506		True				
ANR	5267620	CFGExitNode	EXIT		5267506		True				
ANR	5267621	Symbol	high		5267506						
ANR	5267622	Symbol	ch		5267506						
ANR	5267623	Symbol	low		5267506						
ANR	5267624	Symbol	* ptr		5267506						
ANR	5267625	Symbol	ptr		5267506						
