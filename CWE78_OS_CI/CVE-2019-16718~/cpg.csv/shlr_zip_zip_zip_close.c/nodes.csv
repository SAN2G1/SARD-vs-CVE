command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6158813	File	data/converged/CVE-2019-16718~_radare2/shlr_zip_zip_zip_close.c								
ANR	6158814	DeclStmt									
ANR	6158815	Decl							int	"int ( struct zip * , struct zip_source * , struct zip_dirent * , FILE * )"	add_data
ANR	6158816	DeclStmt									
ANR	6158817	Decl							int	"int ( FILE * , zip_uint64_t , FILE * , struct zip_error * )"	copy_data
ANR	6158818	DeclStmt									
ANR	6158819	Decl							int	"int ( struct zip * , struct zip_source * , FILE * )"	copy_source
ANR	6158820	DeclStmt									
ANR	6158821	Decl							int	"int ( struct zip * , const struct zip_filelist * , zip_uint64_t , FILE * )"	write_cdir
ANR	6158822	DeclStmt									
ANR	6158823	Decl							char	"char * ( struct zip * , FILE * * )"	_zip_create_temp_output
ANR	6158824	DeclStmt									
ANR	6158825	Decl							int	"int ( const void * , const void * )"	_zip_torrentzip_cmp
ANR	6158826	Function	zip_close	68:0:2461:7386							
ANR	6158827	FunctionDef	zip_close (struct zip * za)		6158826	0					
ANR	6158828	CompoundStatement		70:0:2502:7386	6158826	0					
ANR	6158829	IdentifierDeclStatement	"zip_uint64_t i , j , survivors ;"	71:4:2508:2536	6158826	0	True				
ANR	6158830	IdentifierDecl	i		6158826	0					
ANR	6158831	IdentifierDeclType	zip_uint64_t		6158826	0					
ANR	6158832	Identifier	i		6158826	1					
ANR	6158833	IdentifierDecl	j		6158826	1					
ANR	6158834	IdentifierDeclType	zip_uint64_t		6158826	0					
ANR	6158835	Identifier	j		6158826	1					
ANR	6158836	IdentifierDecl	survivors		6158826	2					
ANR	6158837	IdentifierDeclType	zip_uint64_t		6158826	0					
ANR	6158838	Identifier	survivors		6158826	1					
ANR	6158839	IdentifierDeclStatement	int error ;	72:4:2542:2551	6158826	1	True				
ANR	6158840	IdentifierDecl	error		6158826	0					
ANR	6158841	IdentifierDeclType	int		6158826	0					
ANR	6158842	Identifier	error		6158826	1					
ANR	6158843	IdentifierDeclStatement	char * temp ;	73:4:2557:2567	6158826	2	True				
ANR	6158844	IdentifierDecl	* temp		6158826	0					
ANR	6158845	IdentifierDeclType	char *		6158826	0					
ANR	6158846	Identifier	temp		6158826	1					
ANR	6158847	IdentifierDeclStatement	FILE * out ;	74:4:2573:2582	6158826	3	True				
ANR	6158848	IdentifierDecl	* out		6158826	0					
ANR	6158849	IdentifierDeclType	FILE *		6158826	0					
ANR	6158850	Identifier	out		6158826	1					
ANR	6158851	IdentifierDeclStatement	mode_t mask ;	76:4:2608:2619	6158826	4	True				
ANR	6158852	IdentifierDecl	mask		6158826	0					
ANR	6158853	IdentifierDeclType	mode_t		6158826	0					
ANR	6158854	Identifier	mask		6158826	1					
ANR	6158855	IdentifierDeclStatement	struct zip_filelist * filelist ;	78:4:2632:2661	6158826	5	True				
ANR	6158856	IdentifierDecl	* filelist		6158826	0					
ANR	6158857	IdentifierDeclType	struct zip_filelist *		6158826	0					
ANR	6158858	Identifier	filelist		6158826	1					
ANR	6158859	IdentifierDeclStatement	int reopen_on_error ;	79:4:2667:2686	6158826	6	True				
ANR	6158860	IdentifierDecl	reopen_on_error		6158826	0					
ANR	6158861	IdentifierDeclType	int		6158826	0					
ANR	6158862	Identifier	reopen_on_error		6158826	1					
ANR	6158863	IdentifierDeclStatement	int new_torrentzip ;	80:4:2692:2710	6158826	7	True				
ANR	6158864	IdentifierDecl	new_torrentzip		6158826	0					
ANR	6158865	IdentifierDeclType	int		6158826	0					
ANR	6158866	Identifier	new_torrentzip		6158826	1					
ANR	6158867	IdentifierDeclStatement	int changed ;	81:4:2716:2727	6158826	8	True				
ANR	6158868	IdentifierDecl	changed		6158826	0					
ANR	6158869	IdentifierDeclType	int		6158826	0					
ANR	6158870	Identifier	changed		6158826	1					
ANR	6158871	ExpressionStatement	reopen_on_error = 0	83:4:2734:2753	6158826	9	True				
ANR	6158872	AssignmentExpression	reopen_on_error = 0		6158826	0		=			
ANR	6158873	Identifier	reopen_on_error		6158826	0					
ANR	6158874	PrimaryExpression	0		6158826	1					
ANR	6158875	IfStatement	if ( za == NULL )		6158826	10					
ANR	6158876	Condition	za == NULL	85:8:2764:2773	6158826	0	True				
ANR	6158877	EqualityExpression	za == NULL		6158826	0		==			
ANR	6158878	Identifier	za		6158826	0					
ANR	6158879	Identifier	NULL		6158826	1					
ANR	6158880	ReturnStatement	return - 1 ;	86:1:2777:2786	6158826	1	True				
ANR	6158881	UnaryOperationExpression	- 1		6158826	0					
ANR	6158882	UnaryOperator	-		6158826	0					
ANR	6158883	PrimaryExpression	1		6158826	1					
ANR	6158884	ExpressionStatement	"changed = _zip_changed ( za , & survivors )"	88:4:2793:2831	6158826	11	True				
ANR	6158885	AssignmentExpression	"changed = _zip_changed ( za , & survivors )"		6158826	0		=			
ANR	6158886	Identifier	changed		6158826	0					
ANR	6158887	CallExpression	"_zip_changed ( za , & survivors )"		6158826	1					
ANR	6158888	Callee	_zip_changed		6158826	0					
ANR	6158889	Identifier	_zip_changed		6158826	0					
ANR	6158890	ArgumentList	za		6158826	1					
ANR	6158891	Argument	za		6158826	0					
ANR	6158892	Identifier	za		6158826	0					
ANR	6158893	Argument	& survivors		6158826	1					
ANR	6158894	UnaryOperationExpression	& survivors		6158826	0					
ANR	6158895	UnaryOperator	&		6158826	0					
ANR	6158896	Identifier	survivors		6158826	1					
ANR	6158897	IfStatement	if ( survivors == 0 )		6158826	12					
ANR	6158898	Condition	survivors == 0	91:8:2891:2904	6158826	0	True				
ANR	6158899	EqualityExpression	survivors == 0		6158826	0		==			
ANR	6158900	Identifier	survivors		6158826	0					
ANR	6158901	PrimaryExpression	0		6158826	1					
ANR	6158902	CompoundStatement		22:24:404:404	6158826	1					
ANR	6158903	IfStatement	if ( za -> zn && ( ( za -> open_flags & ZIP_TRUNCATE ) || ( changed && za -> zp ) ) )		6158826	0					
ANR	6158904	Condition	za -> zn && ( ( za -> open_flags & ZIP_TRUNCATE ) || ( changed && za -> zp ) )	92:5:2914:2979	6158826	0	True				
ANR	6158905	AndExpression	za -> zn && ( ( za -> open_flags & ZIP_TRUNCATE ) || ( changed && za -> zp ) )		6158826	0		&&			
ANR	6158906	PtrMemberAccess	za -> zn		6158826	0					
ANR	6158907	Identifier	za		6158826	0					
ANR	6158908	Identifier	zn		6158826	1					
ANR	6158909	OrExpression	( za -> open_flags & ZIP_TRUNCATE ) || ( changed && za -> zp )		6158826	1		||			
ANR	6158910	BitAndExpression	za -> open_flags & ZIP_TRUNCATE		6158826	0		&			
ANR	6158911	PtrMemberAccess	za -> open_flags		6158826	0					
ANR	6158912	Identifier	za		6158826	0					
ANR	6158913	Identifier	open_flags		6158826	1					
ANR	6158914	Identifier	ZIP_TRUNCATE		6158826	1					
ANR	6158915	AndExpression	changed && za -> zp		6158826	1		&&			
ANR	6158916	Identifier	changed		6158826	0					
ANR	6158917	PtrMemberAccess	za -> zp		6158826	1					
ANR	6158918	Identifier	za		6158826	0					
ANR	6158919	Identifier	zp		6158826	1					
ANR	6158920	CompoundStatement		23:73:479:479	6158826	1					
ANR	6158921	IfStatement	if ( remove ( za -> zn ) != 0 )		6158826	0					
ANR	6158922	Condition	remove ( za -> zn ) != 0	93:9:2993:3011	6158826	0	True				
ANR	6158923	EqualityExpression	remove ( za -> zn ) != 0		6158826	0		!=			
ANR	6158924	CallExpression	remove ( za -> zn )		6158826	0					
ANR	6158925	Callee	remove		6158826	0					
ANR	6158926	Identifier	remove		6158826	0					
ANR	6158927	ArgumentList	za -> zn		6158826	1					
ANR	6158928	Argument	za -> zn		6158826	0					
ANR	6158929	PtrMemberAccess	za -> zn		6158826	0					
ANR	6158930	Identifier	za		6158826	0					
ANR	6158931	Identifier	zn		6158826	1					
ANR	6158932	PrimaryExpression	0		6158826	1					
ANR	6158933	CompoundStatement		24:30:511:511	6158826	1					
ANR	6158934	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_REMOVE , errno )"	94:2:3018:3066	6158826	0	True				
ANR	6158935	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_REMOVE , errno )"		6158826	0					
ANR	6158936	Callee	_zip_error_set		6158826	0					
ANR	6158937	Identifier	_zip_error_set		6158826	0					
ANR	6158938	ArgumentList	& za -> error		6158826	1					
ANR	6158939	Argument	& za -> error		6158826	0					
ANR	6158940	UnaryOperationExpression	& za -> error		6158826	0					
ANR	6158941	UnaryOperator	&		6158826	0					
ANR	6158942	PtrMemberAccess	za -> error		6158826	1					
ANR	6158943	Identifier	za		6158826	0					
ANR	6158944	Identifier	error		6158826	1					
ANR	6158945	Argument	ZIP_ER_REMOVE		6158826	1					
ANR	6158946	Identifier	ZIP_ER_REMOVE		6158826	0					
ANR	6158947	Argument	errno		6158826	2					
ANR	6158948	Identifier	errno		6158826	0					
ANR	6158949	ReturnStatement	return - 1 ;	95:2:3070:3079	6158826	1	True				
ANR	6158950	UnaryOperationExpression	- 1		6158826	0					
ANR	6158951	UnaryOperator	-		6158826	0					
ANR	6158952	PrimaryExpression	1		6158826	1					
ANR	6158953	ExpressionStatement	zip_discard ( za )	98:1:3092:3107	6158826	1	True				
ANR	6158954	CallExpression	zip_discard ( za )		6158826	0					
ANR	6158955	Callee	zip_discard		6158826	0					
ANR	6158956	Identifier	zip_discard		6158826	0					
ANR	6158957	ArgumentList	za		6158826	1					
ANR	6158958	Argument	za		6158826	0					
ANR	6158959	Identifier	za		6158826	0					
ANR	6158960	ReturnStatement	return 0 ;	99:1:3110:3118	6158826	2	True				
ANR	6158961	PrimaryExpression	0		6158826	0					
ANR	6158962	IfStatement	if ( ! changed )		6158826	13					
ANR	6158963	Condition	! changed	102:8:3135:3142	6158826	0	True				
ANR	6158964	UnaryOperationExpression	! changed		6158826	0					
ANR	6158965	UnaryOperator	!		6158826	0					
ANR	6158966	Identifier	changed		6158826	1					
ANR	6158967	CompoundStatement		33:18:642:642	6158826	1					
ANR	6158968	ExpressionStatement	zip_discard ( za )	103:1:3148:3163	6158826	0	True				
ANR	6158969	CallExpression	zip_discard ( za )		6158826	0					
ANR	6158970	Callee	zip_discard		6158826	0					
ANR	6158971	Identifier	zip_discard		6158826	0					
ANR	6158972	ArgumentList	za		6158826	1					
ANR	6158973	Argument	za		6158826	0					
ANR	6158974	Identifier	za		6158826	0					
ANR	6158975	ReturnStatement	return 0 ;	104:1:3166:3174	6158826	1	True				
ANR	6158976	PrimaryExpression	0		6158826	0					
ANR	6158977	IfStatement	if ( survivors > za -> nentry )		6158826	14					
ANR	6158978	Condition	survivors > za -> nentry	107:8:3191:3212	6158826	0	True				
ANR	6158979	RelationalExpression	survivors > za -> nentry		6158826	0		>			
ANR	6158980	Identifier	survivors		6158826	0					
ANR	6158981	PtrMemberAccess	za -> nentry		6158826	1					
ANR	6158982	Identifier	za		6158826	0					
ANR	6158983	Identifier	nentry		6158826	1					
ANR	6158984	CompoundStatement		38:32:712:712	6158826	1					
ANR	6158985	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"	108:8:3225:3271	6158826	0	True				
ANR	6158986	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"		6158826	0					
ANR	6158987	Callee	_zip_error_set		6158826	0					
ANR	6158988	Identifier	_zip_error_set		6158826	0					
ANR	6158989	ArgumentList	& za -> error		6158826	1					
ANR	6158990	Argument	& za -> error		6158826	0					
ANR	6158991	UnaryOperationExpression	& za -> error		6158826	0					
ANR	6158992	UnaryOperator	&		6158826	0					
ANR	6158993	PtrMemberAccess	za -> error		6158826	1					
ANR	6158994	Identifier	za		6158826	0					
ANR	6158995	Identifier	error		6158826	1					
ANR	6158996	Argument	ZIP_ER_INTERNAL		6158826	1					
ANR	6158997	Identifier	ZIP_ER_INTERNAL		6158826	0					
ANR	6158998	Argument	0		6158826	2					
ANR	6158999	PrimaryExpression	0		6158826	0					
ANR	6159000	ReturnStatement	return - 1 ;	109:8:3281:3290	6158826	1	True				
ANR	6159001	UnaryOperationExpression	- 1		6158826	0					
ANR	6159002	UnaryOperator	-		6158826	0					
ANR	6159003	PrimaryExpression	1		6158826	1					
ANR	6159004	IfStatement	if ( ( filelist = ( struct zip_filelist * ) malloc ( sizeof ( filelist [ 0 ] ) * survivors ) ) == NULL )		6158826	15					
ANR	6159005	Condition	( filelist = ( struct zip_filelist * ) malloc ( sizeof ( filelist [ 0 ] ) * survivors ) ) == NULL	112:8:3307:3385	6158826	0	True				
ANR	6159006	EqualityExpression	( filelist = ( struct zip_filelist * ) malloc ( sizeof ( filelist [ 0 ] ) * survivors ) ) == NULL		6158826	0		==			
ANR	6159007	AssignmentExpression	filelist = ( struct zip_filelist * ) malloc ( sizeof ( filelist [ 0 ] ) * survivors )		6158826	0		=			
ANR	6159008	Identifier	filelist		6158826	0					
ANR	6159009	CastExpression	( struct zip_filelist * ) malloc ( sizeof ( filelist [ 0 ] ) * survivors )		6158826	1					
ANR	6159010	CastTarget	struct zip_filelist *		6158826	0					
ANR	6159011	CallExpression	malloc ( sizeof ( filelist [ 0 ] ) * survivors )		6158826	1					
ANR	6159012	Callee	malloc		6158826	0					
ANR	6159013	Identifier	malloc		6158826	0					
ANR	6159014	ArgumentList	sizeof ( filelist [ 0 ] ) * survivors		6158826	1					
ANR	6159015	Argument	sizeof ( filelist [ 0 ] ) * survivors		6158826	0					
ANR	6159016	MultiplicativeExpression	sizeof ( filelist [ 0 ] ) * survivors		6158826	0		*			
ANR	6159017	SizeofExpression	sizeof ( filelist [ 0 ] )		6158826	0					
ANR	6159018	Sizeof	sizeof		6158826	0					
ANR	6159019	ArrayIndexing	filelist [ 0 ]		6158826	1					
ANR	6159020	Identifier	filelist		6158826	0					
ANR	6159021	PrimaryExpression	0		6158826	1					
ANR	6159022	Identifier	survivors		6158826	1					
ANR	6159023	Identifier	NULL		6158826	1					
ANR	6159024	ReturnStatement	return - 1 ;	113:1:3389:3398	6158826	1	True				
ANR	6159025	UnaryOperationExpression	- 1		6158826	0					
ANR	6159026	UnaryOperator	-		6158826	0					
ANR	6159027	PrimaryExpression	1		6158826	1					
ANR	6159028	IfStatement	"if ( zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) )"		6158826	16					
ANR	6159029	Condition	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"	116:8:3461:3504	6158826	0	True				
ANR	6159030	CallExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"		6158826	0					
ANR	6159031	Callee	zip_get_archive_flag		6158826	0					
ANR	6159032	Identifier	zip_get_archive_flag		6158826	0					
ANR	6159033	ArgumentList	za		6158826	1					
ANR	6159034	Argument	za		6158826	0					
ANR	6159035	Identifier	za		6158826	0					
ANR	6159036	Argument	ZIP_AFL_TORRENT		6158826	1					
ANR	6159037	Identifier	ZIP_AFL_TORRENT		6158826	0					
ANR	6159038	Argument	0		6158826	2					
ANR	6159039	PrimaryExpression	0		6158826	0					
ANR	6159040	CompoundStatement		47:54:1004:1004	6158826	1					
ANR	6159041	Statement	if	118:1:3593:3594	6158826	0	True				
ANR	6159042	Statement	(	118:4:3596:3596	6158826	1	True				
ANR	6159043	Statement	zip_set_archive_comment	118:5:3597:3619	6158826	2	True				
ANR	6159044	Statement	(	118:28:3620:3620	6158826	3	True				
ANR	6159045	Statement	za	118:29:3621:3622	6158826	4	True				
ANR	6159046	Statement	","	118:31:3623:3623	6158826	5	True				
ANR	6159047	Statement	TORRENT_SIG	118:33:3625:3635	6158826	6	True				
ANR	6159048	Statement	"""XXXXXXXX"""	118:45:3637:3646	6158826	7	True				
ANR	6159049	Statement	","	118:55:3647:3647	6158826	8	True				
ANR	6159050	Statement	TORRENT_SIG_LEN	118:57:3649:3663	6158826	9	True				
ANR	6159051	Statement	+	118:73:3665:3665	6158826	10	True				
ANR	6159052	Statement	TORRENT_CRC_LEN	118:75:3667:3681	6158826	11	True				
ANR	6159053	Statement	)	118:90:3682:3682	6158826	12	True				
ANR	6159054	Statement	<	118:92:3684:3684	6158826	13	True				
ANR	6159055	Statement	0	118:94:3686:3686	6158826	14	True				
ANR	6159056	Statement	)	118:95:3687:3687	6158826	15	True				
ANR	6159057	CompoundStatement		49:97:1186:1186	6158826	16					
ANR	6159058	ExpressionStatement	free ( filelist )	119:5:3696:3710	6158826	0	True				
ANR	6159059	CallExpression	free ( filelist )		6158826	0					
ANR	6159060	Callee	free		6158826	0					
ANR	6159061	Identifier	free		6158826	0					
ANR	6159062	ArgumentList	filelist		6158826	1					
ANR	6159063	Argument	filelist		6158826	0					
ANR	6159064	Identifier	filelist		6158826	0					
ANR	6159065	ReturnStatement	return - 1 ;	120:5:3717:3726	6158826	1	True				
ANR	6159066	UnaryOperationExpression	- 1		6158826	0					
ANR	6159067	UnaryOperator	-		6158826	0					
ANR	6159068	PrimaryExpression	1		6158826	1					
ANR	6159069	ForStatement	for ( i = j = 0 ; i < za -> nentry ; i ++ )		6158826	17					
ANR	6159070	ForInit	i = j = 0 ;	127:9:3903:3908	6158826	0	True				
ANR	6159071	AssignmentExpression	i = j = 0		6158826	0		=			
ANR	6159072	Identifier	i		6158826	0					
ANR	6159073	AssignmentExpression	j = 0		6158826	1		=			
ANR	6159074	Identifier	j		6158826	0					
ANR	6159075	PrimaryExpression	0		6158826	1					
ANR	6159076	Condition	i < za -> nentry	127:16:3910:3921	6158826	1	True				
ANR	6159077	RelationalExpression	i < za -> nentry		6158826	0		<			
ANR	6159078	Identifier	i		6158826	0					
ANR	6159079	PtrMemberAccess	za -> nentry		6158826	1					
ANR	6159080	Identifier	za		6158826	0					
ANR	6159081	Identifier	nentry		6158826	1					
ANR	6159082	PostIncDecOperationExpression	i ++	127:30:3924:3926	6158826	2	True				
ANR	6159083	Identifier	i		6158826	0					
ANR	6159084	IncDec	++		6158826	1					
ANR	6159085	CompoundStatement		58:35:1426:1426	6158826	3					
ANR	6159086	IfStatement	if ( za -> entry [ i ] . deleted )		6158826	0					
ANR	6159087	Condition	za -> entry [ i ] . deleted	128:5:3936:3955	6158826	0	True				
ANR	6159088	MemberAccess	za -> entry [ i ] . deleted		6158826	0					
ANR	6159089	ArrayIndexing	za -> entry [ i ]		6158826	0					
ANR	6159090	PtrMemberAccess	za -> entry		6158826	0					
ANR	6159091	Identifier	za		6158826	0					
ANR	6159092	Identifier	entry		6158826	1					
ANR	6159093	Identifier	i		6158826	1					
ANR	6159094	Identifier	deleted		6158826	1					
ANR	6159095	ContinueStatement	continue ;	129:5:3963:3971	6158826	1	True				
ANR	6159096	IfStatement	if ( j >= survivors )		6158826	1					
ANR	6159097	Condition	j >= survivors	131:12:3986:3999	6158826	0	True				
ANR	6159098	RelationalExpression	j >= survivors		6158826	0		>=			
ANR	6159099	Identifier	j		6158826	0					
ANR	6159100	Identifier	survivors		6158826	1					
ANR	6159101	CompoundStatement		62:28:1499:1499	6158826	1					
ANR	6159102	ExpressionStatement	free ( filelist )	132:12:4016:4030	6158826	0	True				
ANR	6159103	CallExpression	free ( filelist )		6158826	0					
ANR	6159104	Callee	free		6158826	0					
ANR	6159105	Identifier	free		6158826	0					
ANR	6159106	ArgumentList	filelist		6158826	1					
ANR	6159107	Argument	filelist		6158826	0					
ANR	6159108	Identifier	filelist		6158826	0					
ANR	6159109	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"	133:12:4044:4090	6158826	1	True				
ANR	6159110	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"		6158826	0					
ANR	6159111	Callee	_zip_error_set		6158826	0					
ANR	6159112	Identifier	_zip_error_set		6158826	0					
ANR	6159113	ArgumentList	& za -> error		6158826	1					
ANR	6159114	Argument	& za -> error		6158826	0					
ANR	6159115	UnaryOperationExpression	& za -> error		6158826	0					
ANR	6159116	UnaryOperator	&		6158826	0					
ANR	6159117	PtrMemberAccess	za -> error		6158826	1					
ANR	6159118	Identifier	za		6158826	0					
ANR	6159119	Identifier	error		6158826	1					
ANR	6159120	Argument	ZIP_ER_INTERNAL		6158826	1					
ANR	6159121	Identifier	ZIP_ER_INTERNAL		6158826	0					
ANR	6159122	Argument	0		6158826	2					
ANR	6159123	PrimaryExpression	0		6158826	0					
ANR	6159124	ReturnStatement	return - 1 ;	134:12:4104:4113	6158826	2	True				
ANR	6159125	UnaryOperationExpression	- 1		6158826	0					
ANR	6159126	UnaryOperator	-		6158826	0					
ANR	6159127	PrimaryExpression	1		6158826	1					
ANR	6159128	ExpressionStatement	filelist [ j ] . idx = i	136:1:4126:4145	6158826	2	True				
ANR	6159129	AssignmentExpression	filelist [ j ] . idx = i		6158826	0		=			
ANR	6159130	MemberAccess	filelist [ j ] . idx		6158826	0					
ANR	6159131	ArrayIndexing	filelist [ j ]		6158826	0					
ANR	6159132	Identifier	filelist		6158826	0					
ANR	6159133	Identifier	j		6158826	1					
ANR	6159134	Identifier	idx		6158826	1					
ANR	6159135	Identifier	i		6158826	1					
ANR	6159136	ExpressionStatement	"filelist [ j ] . name = zip_get_name ( za , i , 0 )"	137:1:4148:4189	6158826	3	True				
ANR	6159137	AssignmentExpression	"filelist [ j ] . name = zip_get_name ( za , i , 0 )"		6158826	0		=			
ANR	6159138	MemberAccess	filelist [ j ] . name		6158826	0					
ANR	6159139	ArrayIndexing	filelist [ j ]		6158826	0					
ANR	6159140	Identifier	filelist		6158826	0					
ANR	6159141	Identifier	j		6158826	1					
ANR	6159142	Identifier	name		6158826	1					
ANR	6159143	CallExpression	"zip_get_name ( za , i , 0 )"		6158826	1					
ANR	6159144	Callee	zip_get_name		6158826	0					
ANR	6159145	Identifier	zip_get_name		6158826	0					
ANR	6159146	ArgumentList	za		6158826	1					
ANR	6159147	Argument	za		6158826	0					
ANR	6159148	Identifier	za		6158826	0					
ANR	6159149	Argument	i		6158826	1					
ANR	6159150	Identifier	i		6158826	0					
ANR	6159151	Argument	0		6158826	2					
ANR	6159152	PrimaryExpression	0		6158826	0					
ANR	6159153	ExpressionStatement	j ++	138:1:4192:4195	6158826	4	True				
ANR	6159154	PostIncDecOperationExpression	j ++		6158826	0					
ANR	6159155	Identifier	j		6158826	0					
ANR	6159156	IncDec	++		6158826	1					
ANR	6159157	IfStatement	if ( j < survivors )		6158826	18					
ANR	6159158	Condition	j < survivors	140:8:4211:4223	6158826	0	True				
ANR	6159159	RelationalExpression	j < survivors		6158826	0		<			
ANR	6159160	Identifier	j		6158826	0					
ANR	6159161	Identifier	survivors		6158826	1					
ANR	6159162	CompoundStatement		71:23:1723:1723	6158826	1					
ANR	6159163	ExpressionStatement	free ( filelist )	141:8:4236:4250	6158826	0	True				
ANR	6159164	CallExpression	free ( filelist )		6158826	0					
ANR	6159165	Callee	free		6158826	0					
ANR	6159166	Identifier	free		6158826	0					
ANR	6159167	ArgumentList	filelist		6158826	1					
ANR	6159168	Argument	filelist		6158826	0					
ANR	6159169	Identifier	filelist		6158826	0					
ANR	6159170	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"	142:8:4260:4306	6158826	1	True				
ANR	6159171	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"		6158826	0					
ANR	6159172	Callee	_zip_error_set		6158826	0					
ANR	6159173	Identifier	_zip_error_set		6158826	0					
ANR	6159174	ArgumentList	& za -> error		6158826	1					
ANR	6159175	Argument	& za -> error		6158826	0					
ANR	6159176	UnaryOperationExpression	& za -> error		6158826	0					
ANR	6159177	UnaryOperator	&		6158826	0					
ANR	6159178	PtrMemberAccess	za -> error		6158826	1					
ANR	6159179	Identifier	za		6158826	0					
ANR	6159180	Identifier	error		6158826	1					
ANR	6159181	Argument	ZIP_ER_INTERNAL		6158826	1					
ANR	6159182	Identifier	ZIP_ER_INTERNAL		6158826	0					
ANR	6159183	Argument	0		6158826	2					
ANR	6159184	PrimaryExpression	0		6158826	0					
ANR	6159185	ReturnStatement	return - 1 ;	143:8:4316:4325	6158826	2	True				
ANR	6159186	UnaryOperationExpression	- 1		6158826	0					
ANR	6159187	UnaryOperator	-		6158826	0					
ANR	6159188	PrimaryExpression	1		6158826	1					
ANR	6159189	IfStatement	"if ( ( temp = _zip_create_temp_output ( za , & out ) ) == NULL )"		6158826	19					
ANR	6159190	Condition	"( temp = _zip_create_temp_output ( za , & out ) ) == NULL"	147:8:4343:4390	6158826	0	True				
ANR	6159191	EqualityExpression	"( temp = _zip_create_temp_output ( za , & out ) ) == NULL"		6158826	0		==			
ANR	6159192	AssignmentExpression	"temp = _zip_create_temp_output ( za , & out )"		6158826	0		=			
ANR	6159193	Identifier	temp		6158826	0					
ANR	6159194	CallExpression	"_zip_create_temp_output ( za , & out )"		6158826	1					
ANR	6159195	Callee	_zip_create_temp_output		6158826	0					
ANR	6159196	Identifier	_zip_create_temp_output		6158826	0					
ANR	6159197	ArgumentList	za		6158826	1					
ANR	6159198	Argument	za		6158826	0					
ANR	6159199	Identifier	za		6158826	0					
ANR	6159200	Argument	& out		6158826	1					
ANR	6159201	UnaryOperationExpression	& out		6158826	0					
ANR	6159202	UnaryOperator	&		6158826	0					
ANR	6159203	Identifier	out		6158826	1					
ANR	6159204	Identifier	NULL		6158826	1					
ANR	6159205	CompoundStatement		78:58:1890:1890	6158826	1					
ANR	6159206	ExpressionStatement	free ( filelist )	148:1:4396:4410	6158826	0	True				
ANR	6159207	CallExpression	free ( filelist )		6158826	0					
ANR	6159208	Callee	free		6158826	0					
ANR	6159209	Identifier	free		6158826	0					
ANR	6159210	ArgumentList	filelist		6158826	1					
ANR	6159211	Argument	filelist		6158826	0					
ANR	6159212	Identifier	filelist		6158826	0					
ANR	6159213	ReturnStatement	return - 1 ;	149:1:4413:4422	6158826	1	True				
ANR	6159214	UnaryOperationExpression	- 1		6158826	0					
ANR	6159215	UnaryOperator	-		6158826	0					
ANR	6159216	PrimaryExpression	1		6158826	1					
ANR	6159217	IfStatement	"if ( zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) )"		6158826	20					
ANR	6159218	Condition	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"	152:8:4443:4486	6158826	0	True				
ANR	6159219	CallExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"		6158826	0					
ANR	6159220	Callee	zip_get_archive_flag		6158826	0					
ANR	6159221	Identifier	zip_get_archive_flag		6158826	0					
ANR	6159222	ArgumentList	za		6158826	1					
ANR	6159223	Argument	za		6158826	0					
ANR	6159224	Identifier	za		6158826	0					
ANR	6159225	Argument	ZIP_AFL_TORRENT		6158826	1					
ANR	6159226	Identifier	ZIP_AFL_TORRENT		6158826	0					
ANR	6159227	Argument	0		6158826	2					
ANR	6159228	PrimaryExpression	0		6158826	0					
ANR	6159229	ExpressionStatement	"qsort ( filelist , survivors , sizeof ( filelist [ 0 ] ) , _zip_torrentzip_cmp )"	153:1:4490:4565	6158826	1	True				
ANR	6159230	CallExpression	"qsort ( filelist , survivors , sizeof ( filelist [ 0 ] ) , _zip_torrentzip_cmp )"		6158826	0					
ANR	6159231	Callee	qsort		6158826	0					
ANR	6159232	Identifier	qsort		6158826	0					
ANR	6159233	ArgumentList	filelist		6158826	1					
ANR	6159234	Argument	filelist		6158826	0					
ANR	6159235	Identifier	filelist		6158826	0					
ANR	6159236	Argument	survivors		6158826	1					
ANR	6159237	Identifier	survivors		6158826	0					
ANR	6159238	Argument	sizeof ( filelist [ 0 ] )		6158826	2					
ANR	6159239	SizeofExpression	sizeof ( filelist [ 0 ] )		6158826	0					
ANR	6159240	Sizeof	sizeof		6158826	0					
ANR	6159241	ArrayIndexing	filelist [ 0 ]		6158826	1					
ANR	6159242	Identifier	filelist		6158826	0					
ANR	6159243	PrimaryExpression	0		6158826	1					
ANR	6159244	Argument	_zip_torrentzip_cmp		6158826	3					
ANR	6159245	Identifier	_zip_torrentzip_cmp		6158826	0					
ANR	6159246	ExpressionStatement	"new_torrentzip = ( zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) == 1 && zip_get_archive_flag ( za , ZIP_AFL_TORRENT , ZIP_FL_UNCHANGED ) == 0 )"	156:4:4572:4727	6158826	21	True				
ANR	6159247	AssignmentExpression	"new_torrentzip = ( zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) == 1 && zip_get_archive_flag ( za , ZIP_AFL_TORRENT , ZIP_FL_UNCHANGED ) == 0 )"		6158826	0		=			
ANR	6159248	Identifier	new_torrentzip		6158826	0					
ANR	6159249	AndExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) == 1 && zip_get_archive_flag ( za , ZIP_AFL_TORRENT , ZIP_FL_UNCHANGED ) == 0"		6158826	1		&&			
ANR	6159250	EqualityExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) == 1"		6158826	0		==			
ANR	6159251	CallExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"		6158826	0					
ANR	6159252	Callee	zip_get_archive_flag		6158826	0					
ANR	6159253	Identifier	zip_get_archive_flag		6158826	0					
ANR	6159254	ArgumentList	za		6158826	1					
ANR	6159255	Argument	za		6158826	0					
ANR	6159256	Identifier	za		6158826	0					
ANR	6159257	Argument	ZIP_AFL_TORRENT		6158826	1					
ANR	6159258	Identifier	ZIP_AFL_TORRENT		6158826	0					
ANR	6159259	Argument	0		6158826	2					
ANR	6159260	PrimaryExpression	0		6158826	0					
ANR	6159261	PrimaryExpression	1		6158826	1					
ANR	6159262	EqualityExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , ZIP_FL_UNCHANGED ) == 0"		6158826	1		==			
ANR	6159263	CallExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , ZIP_FL_UNCHANGED )"		6158826	0					
ANR	6159264	Callee	zip_get_archive_flag		6158826	0					
ANR	6159265	Identifier	zip_get_archive_flag		6158826	0					
ANR	6159266	ArgumentList	za		6158826	1					
ANR	6159267	Argument	za		6158826	0					
ANR	6159268	Identifier	za		6158826	0					
ANR	6159269	Argument	ZIP_AFL_TORRENT		6158826	1					
ANR	6159270	Identifier	ZIP_AFL_TORRENT		6158826	0					
ANR	6159271	Argument	ZIP_FL_UNCHANGED		6158826	2					
ANR	6159272	Identifier	ZIP_FL_UNCHANGED		6158826	0					
ANR	6159273	PrimaryExpression	0		6158826	1					
ANR	6159274	ExpressionStatement	error = 0	159:4:4733:4742	6158826	22	True				
ANR	6159275	AssignmentExpression	error = 0		6158826	0		=			
ANR	6159276	Identifier	error		6158826	0					
ANR	6159277	PrimaryExpression	0		6158826	1					
ANR	6159278	ForStatement	for ( j = 0 ; j < survivors ; j ++ )		6158826	23					
ANR	6159279	ForInit	j = 0 ;	160:9:4753:4756	6158826	0	True				
ANR	6159280	AssignmentExpression	j = 0		6158826	0		=			
ANR	6159281	Identifier	j		6158826	0					
ANR	6159282	PrimaryExpression	0		6158826	1					
ANR	6159283	Condition	j < survivors	160:14:4758:4768	6158826	1	True				
ANR	6159284	RelationalExpression	j < survivors		6158826	0		<			
ANR	6159285	Identifier	j		6158826	0					
ANR	6159286	Identifier	survivors		6158826	1					
ANR	6159287	PostIncDecOperationExpression	j ++	160:27:4771:4773	6158826	2	True				
ANR	6159288	Identifier	j		6158826	0					
ANR	6159289	IncDec	++		6158826	1					
ANR	6159290	CompoundStatement		94:1:2317:2338	6158826	3					
ANR	6159291	IdentifierDeclStatement	int new_data ;	161:1:4779:4791	6158826	0	True				
ANR	6159292	IdentifierDecl	new_data		6158826	0					
ANR	6159293	IdentifierDeclType	int		6158826	0					
ANR	6159294	Identifier	new_data		6158826	1					
ANR	6159295	IdentifierDeclStatement	struct zip_entry * entry ;	162:1:4794:4817	6158826	1	True				
ANR	6159296	IdentifierDecl	* entry		6158826	0					
ANR	6159297	IdentifierDeclType	struct zip_entry *		6158826	0					
ANR	6159298	Identifier	entry		6158826	1					
ANR	6159299	IdentifierDeclStatement	struct zip_dirent * de ;	163:1:4820:4841	6158826	2	True				
ANR	6159300	IdentifierDecl	* de		6158826	0					
ANR	6159301	IdentifierDeclType	struct zip_dirent *		6158826	0					
ANR	6159302	Identifier	de		6158826	1					
ANR	6159303	ExpressionStatement	i = filelist [ j ] . idx	165:1:4845:4864	6158826	3	True				
ANR	6159304	AssignmentExpression	i = filelist [ j ] . idx		6158826	0		=			
ANR	6159305	Identifier	i		6158826	0					
ANR	6159306	MemberAccess	filelist [ j ] . idx		6158826	1					
ANR	6159307	ArrayIndexing	filelist [ j ]		6158826	0					
ANR	6159308	Identifier	filelist		6158826	0					
ANR	6159309	Identifier	j		6158826	1					
ANR	6159310	Identifier	idx		6158826	1					
ANR	6159311	ExpressionStatement	entry = za -> entry + i	166:1:4867:4886	6158826	4	True				
ANR	6159312	AssignmentExpression	entry = za -> entry + i		6158826	0		=			
ANR	6159313	Identifier	entry		6158826	0					
ANR	6159314	AdditiveExpression	za -> entry + i		6158826	1		+			
ANR	6159315	PtrMemberAccess	za -> entry		6158826	0					
ANR	6159316	Identifier	za		6158826	0					
ANR	6159317	Identifier	entry		6158826	1					
ANR	6159318	Identifier	i		6158826	1					
ANR	6159319	ExpressionStatement	"new_data = ( ZIP_ENTRY_DATA_CHANGED ( entry ) || new_torrentzip || ZIP_ENTRY_CHANGED ( entry , ZIP_DIRENT_COMP_METHOD ) )"	168:1:4890:5002	6158826	5	True				
ANR	6159320	AssignmentExpression	"new_data = ( ZIP_ENTRY_DATA_CHANGED ( entry ) || new_torrentzip || ZIP_ENTRY_CHANGED ( entry , ZIP_DIRENT_COMP_METHOD ) )"		6158826	0		=			
ANR	6159321	Identifier	new_data		6158826	0					
ANR	6159322	OrExpression	"ZIP_ENTRY_DATA_CHANGED ( entry ) || new_torrentzip || ZIP_ENTRY_CHANGED ( entry , ZIP_DIRENT_COMP_METHOD )"		6158826	1		||			
ANR	6159323	CallExpression	ZIP_ENTRY_DATA_CHANGED ( entry )		6158826	0					
ANR	6159324	Callee	ZIP_ENTRY_DATA_CHANGED		6158826	0					
ANR	6159325	Identifier	ZIP_ENTRY_DATA_CHANGED		6158826	0					
ANR	6159326	ArgumentList	entry		6158826	1					
ANR	6159327	Argument	entry		6158826	0					
ANR	6159328	Identifier	entry		6158826	0					
ANR	6159329	OrExpression	"new_torrentzip || ZIP_ENTRY_CHANGED ( entry , ZIP_DIRENT_COMP_METHOD )"		6158826	1		||			
ANR	6159330	Identifier	new_torrentzip		6158826	0					
ANR	6159331	CallExpression	"ZIP_ENTRY_CHANGED ( entry , ZIP_DIRENT_COMP_METHOD )"		6158826	1					
ANR	6159332	Callee	ZIP_ENTRY_CHANGED		6158826	0					
ANR	6159333	Identifier	ZIP_ENTRY_CHANGED		6158826	0					
ANR	6159334	ArgumentList	entry		6158826	1					
ANR	6159335	Argument	entry		6158826	0					
ANR	6159336	Identifier	entry		6158826	0					
ANR	6159337	Argument	ZIP_DIRENT_COMP_METHOD		6158826	1					
ANR	6159338	Identifier	ZIP_DIRENT_COMP_METHOD		6158826	0					
ANR	6159339	IfStatement	if ( entry -> changes == NULL )		6158826	6					
ANR	6159340	Condition	entry -> changes == NULL	171:5:5050:5071	6158826	0	True				
ANR	6159341	EqualityExpression	entry -> changes == NULL		6158826	0		==			
ANR	6159342	PtrMemberAccess	entry -> changes		6158826	0					
ANR	6159343	Identifier	entry		6158826	0					
ANR	6159344	Identifier	changes		6158826	1					
ANR	6159345	Identifier	NULL		6158826	1					
ANR	6159346	CompoundStatement		102:29:2571:2571	6158826	1					
ANR	6159347	IfStatement	if ( ( entry -> changes = _zip_dirent_clone ( entry -> orig ) ) == NULL )		6158826	0					
ANR	6159348	Condition	( entry -> changes = _zip_dirent_clone ( entry -> orig ) ) == NULL	172:9:5085:5139	6158826	0	True				
ANR	6159349	EqualityExpression	( entry -> changes = _zip_dirent_clone ( entry -> orig ) ) == NULL		6158826	0		==			
ANR	6159350	AssignmentExpression	entry -> changes = _zip_dirent_clone ( entry -> orig )		6158826	0		=			
ANR	6159351	PtrMemberAccess	entry -> changes		6158826	0					
ANR	6159352	Identifier	entry		6158826	0					
ANR	6159353	Identifier	changes		6158826	1					
ANR	6159354	CallExpression	_zip_dirent_clone ( entry -> orig )		6158826	1					
ANR	6159355	Callee	_zip_dirent_clone		6158826	0					
ANR	6159356	Identifier	_zip_dirent_clone		6158826	0					
ANR	6159357	ArgumentList	entry -> orig		6158826	1					
ANR	6159358	Argument	entry -> orig		6158826	0					
ANR	6159359	PtrMemberAccess	entry -> orig		6158826	0					
ANR	6159360	Identifier	entry		6158826	0					
ANR	6159361	Identifier	orig		6158826	1					
ANR	6159362	Identifier	NULL		6158826	1					
ANR	6159363	CompoundStatement		103:66:2639:2639	6158826	1					
ANR	6159364	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"	173:16:5160:5204	6158826	0	True				
ANR	6159365	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"		6158826	0					
ANR	6159366	Callee	_zip_error_set		6158826	0					
ANR	6159367	Identifier	_zip_error_set		6158826	0					
ANR	6159368	ArgumentList	& za -> error		6158826	1					
ANR	6159369	Argument	& za -> error		6158826	0					
ANR	6159370	UnaryOperationExpression	& za -> error		6158826	0					
ANR	6159371	UnaryOperator	&		6158826	0					
ANR	6159372	PtrMemberAccess	za -> error		6158826	1					
ANR	6159373	Identifier	za		6158826	0					
ANR	6159374	Identifier	error		6158826	1					
ANR	6159375	Argument	ZIP_ER_MEMORY		6158826	1					
ANR	6159376	Identifier	ZIP_ER_MEMORY		6158826	0					
ANR	6159377	Argument	0		6158826	2					
ANR	6159378	PrimaryExpression	0		6158826	0					
ANR	6159379	ExpressionStatement	error = 1	174:16:5222:5231	6158826	1	True				
ANR	6159380	AssignmentExpression	error = 1		6158826	0		=			
ANR	6159381	Identifier	error		6158826	0					
ANR	6159382	PrimaryExpression	1		6158826	1					
ANR	6159383	BreakStatement	break ;	175:16:5249:5254	6158826	2	True				
ANR	6159384	ExpressionStatement	de = entry -> changes	178:1:5267:5286	6158826	7	True				
ANR	6159385	AssignmentExpression	de = entry -> changes		6158826	0		=			
ANR	6159386	Identifier	de		6158826	0					
ANR	6159387	PtrMemberAccess	entry -> changes		6158826	1					
ANR	6159388	Identifier	entry		6158826	0					
ANR	6159389	Identifier	changes		6158826	1					
ANR	6159390	IfStatement	"if ( _zip_read_local_ef ( za , i ) < 0 )"		6158826	8					
ANR	6159391	Condition	"_zip_read_local_ef ( za , i ) < 0"	180:5:5294:5322	6158826	0	True				
ANR	6159392	RelationalExpression	"_zip_read_local_ef ( za , i ) < 0"		6158826	0		<			
ANR	6159393	CallExpression	"_zip_read_local_ef ( za , i )"		6158826	0					
ANR	6159394	Callee	_zip_read_local_ef		6158826	0					
ANR	6159395	Identifier	_zip_read_local_ef		6158826	0					
ANR	6159396	ArgumentList	za		6158826	1					
ANR	6159397	Argument	za		6158826	0					
ANR	6159398	Identifier	za		6158826	0					
ANR	6159399	Argument	i		6158826	1					
ANR	6159400	Identifier	i		6158826	0					
ANR	6159401	PrimaryExpression	0		6158826	1					
ANR	6159402	CompoundStatement		111:36:2822:2822	6158826	1					
ANR	6159403	ExpressionStatement	error = 1	181:5:5332:5341	6158826	0	True				
ANR	6159404	AssignmentExpression	error = 1		6158826	0		=			
ANR	6159405	Identifier	error		6158826	0					
ANR	6159406	PrimaryExpression	1		6158826	1					
ANR	6159407	BreakStatement	break ;	182:5:5348:5353	6158826	1	True				
ANR	6159408	IfStatement	"if ( zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) )"		6158826	9					
ANR	6159409	Condition	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"	185:5:5364:5407	6158826	0	True				
ANR	6159410	CallExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"		6158826	0					
ANR	6159411	Callee	zip_get_archive_flag		6158826	0					
ANR	6159412	Identifier	zip_get_archive_flag		6158826	0					
ANR	6159413	ArgumentList	za		6158826	1					
ANR	6159414	Argument	za		6158826	0					
ANR	6159415	Identifier	za		6158826	0					
ANR	6159416	Argument	ZIP_AFL_TORRENT		6158826	1					
ANR	6159417	Identifier	ZIP_AFL_TORRENT		6158826	0					
ANR	6159418	Argument	0		6158826	2					
ANR	6159419	PrimaryExpression	0		6158826	0					
ANR	6159420	ExpressionStatement	_zip_dirent_torrent_normalize ( entry -> changes )	186:5:5415:5460	6158826	1	True				
ANR	6159421	CallExpression	_zip_dirent_torrent_normalize ( entry -> changes )		6158826	0					
ANR	6159422	Callee	_zip_dirent_torrent_normalize		6158826	0					
ANR	6159423	Identifier	_zip_dirent_torrent_normalize		6158826	0					
ANR	6159424	ArgumentList	entry -> changes		6158826	1					
ANR	6159425	Argument	entry -> changes		6158826	0					
ANR	6159426	PtrMemberAccess	entry -> changes		6158826	0					
ANR	6159427	Identifier	entry		6158826	0					
ANR	6159428	Identifier	changes		6158826	1					
ANR	6159429	ExpressionStatement	de -> offset = ( zip_uint64_t ) ftello ( out )	189:1:5465:5503	6158826	10	True				
ANR	6159430	AssignmentExpression	de -> offset = ( zip_uint64_t ) ftello ( out )		6158826	0		=			
ANR	6159431	PtrMemberAccess	de -> offset		6158826	0					
ANR	6159432	Identifier	de		6158826	0					
ANR	6159433	Identifier	offset		6158826	1					
ANR	6159434	CastExpression	( zip_uint64_t ) ftello ( out )		6158826	1					
ANR	6159435	CastTarget	zip_uint64_t		6158826	0					
ANR	6159436	CallExpression	ftello ( out )		6158826	1					
ANR	6159437	Callee	ftello		6158826	0					
ANR	6159438	Identifier	ftello		6158826	0					
ANR	6159439	ArgumentList	out		6158826	1					
ANR	6159440	Argument	out		6158826	0					
ANR	6159441	Identifier	out		6158826	0					
ANR	6159442	IfStatement	if ( new_data )		6158826	11					
ANR	6159443	Condition	new_data	191:5:5539:5546	6158826	0	True				
ANR	6159444	Identifier	new_data		6158826	0					
ANR	6159445	CompoundStatement		123:5:3053:3074	6158826	1					
ANR	6159446	IdentifierDeclStatement	struct zip_source * zs ;	192:5:5556:5577	6158826	0	True				
ANR	6159447	IdentifierDecl	* zs		6158826	0					
ANR	6159448	IdentifierDeclType	struct zip_source *		6158826	0					
ANR	6159449	Identifier	zs		6158826	1					
ANR	6159450	ExpressionStatement	zs = NULL	194:5:5585:5594	6158826	1	True				
ANR	6159451	AssignmentExpression	zs = NULL		6158826	0		=			
ANR	6159452	Identifier	zs		6158826	0					
ANR	6159453	Identifier	NULL		6158826	1					
ANR	6159454	IfStatement	if ( ! ZIP_ENTRY_DATA_CHANGED ( entry ) )		6158826	2					
ANR	6159455	Condition	! ZIP_ENTRY_DATA_CHANGED ( entry )	195:9:5605:5634	6158826	0	True				
ANR	6159456	UnaryOperationExpression	! ZIP_ENTRY_DATA_CHANGED ( entry )		6158826	0					
ANR	6159457	UnaryOperator	!		6158826	0					
ANR	6159458	CallExpression	ZIP_ENTRY_DATA_CHANGED ( entry )		6158826	1					
ANR	6159459	Callee	ZIP_ENTRY_DATA_CHANGED		6158826	0					
ANR	6159460	Identifier	ZIP_ENTRY_DATA_CHANGED		6158826	0					
ANR	6159461	ArgumentList	entry		6158826	1					
ANR	6159462	Argument	entry		6158826	0					
ANR	6159463	Identifier	entry		6158826	0					
ANR	6159464	CompoundStatement		126:41:3134:3134	6158826	1					
ANR	6159465	IfStatement	"if ( ( zs = _zip_source_zip_new ( za , za , i , ZIP_FL_UNCHANGED , 0 , 0 , NULL ) ) == NULL )"		6158826	0					
ANR	6159466	Condition	"( zs = _zip_source_zip_new ( za , za , i , ZIP_FL_UNCHANGED , 0 , 0 , NULL ) ) == NULL"	196:6:5645:5717	6158826	0	True				
ANR	6159467	EqualityExpression	"( zs = _zip_source_zip_new ( za , za , i , ZIP_FL_UNCHANGED , 0 , 0 , NULL ) ) == NULL"		6158826	0		==			
ANR	6159468	AssignmentExpression	"zs = _zip_source_zip_new ( za , za , i , ZIP_FL_UNCHANGED , 0 , 0 , NULL )"		6158826	0		=			
ANR	6159469	Identifier	zs		6158826	0					
ANR	6159470	CallExpression	"_zip_source_zip_new ( za , za , i , ZIP_FL_UNCHANGED , 0 , 0 , NULL )"		6158826	1					
ANR	6159471	Callee	_zip_source_zip_new		6158826	0					
ANR	6159472	Identifier	_zip_source_zip_new		6158826	0					
ANR	6159473	ArgumentList	za		6158826	1					
ANR	6159474	Argument	za		6158826	0					
ANR	6159475	Identifier	za		6158826	0					
ANR	6159476	Argument	za		6158826	1					
ANR	6159477	Identifier	za		6158826	0					
ANR	6159478	Argument	i		6158826	2					
ANR	6159479	Identifier	i		6158826	0					
ANR	6159480	Argument	ZIP_FL_UNCHANGED		6158826	3					
ANR	6159481	Identifier	ZIP_FL_UNCHANGED		6158826	0					
ANR	6159482	Argument	0		6158826	4					
ANR	6159483	PrimaryExpression	0		6158826	0					
ANR	6159484	Argument	0		6158826	5					
ANR	6159485	PrimaryExpression	0		6158826	0					
ANR	6159486	Argument	NULL		6158826	6					
ANR	6159487	Identifier	NULL		6158826	0					
ANR	6159488	Identifier	NULL		6158826	1					
ANR	6159489	CompoundStatement		127:81:3217:3217	6158826	1					
ANR	6159490	ExpressionStatement	error = 1	197:6:5728:5737	6158826	0	True				
ANR	6159491	AssignmentExpression	error = 1		6158826	0		=			
ANR	6159492	Identifier	error		6158826	0					
ANR	6159493	PrimaryExpression	1		6158826	1					
ANR	6159494	BreakStatement	break ;	198:6:5745:5750	6158826	1	True				
ANR	6159495	IfStatement	"if ( add_data ( za , zs ? zs : entry -> source , de , out ) < 0 )"		6158826	3					
ANR	6159496	Condition	"add_data ( za , zs ? zs : entry -> source , de , out ) < 0"	203:9:5807:5856	6158826	0	True				
ANR	6159497	RelationalExpression	"add_data ( za , zs ? zs : entry -> source , de , out ) < 0"		6158826	0		<			
ANR	6159498	CallExpression	"add_data ( za , zs ? zs : entry -> source , de , out )"		6158826	0					
ANR	6159499	Callee	add_data		6158826	0					
ANR	6159500	Identifier	add_data		6158826	0					
ANR	6159501	ArgumentList	za		6158826	1					
ANR	6159502	Argument	za		6158826	0					
ANR	6159503	Identifier	za		6158826	0					
ANR	6159504	Argument	zs ? zs : entry -> source		6158826	1					
ANR	6159505	ConditionalExpression	zs ? zs : entry -> source		6158826	0					
ANR	6159506	Condition	zs		6158826	0					
ANR	6159507	Identifier	zs		6158826	0					
ANR	6159508	Identifier	zs		6158826	1					
ANR	6159509	PtrMemberAccess	entry -> source		6158826	2					
ANR	6159510	Identifier	entry		6158826	0					
ANR	6159511	Identifier	source		6158826	1					
ANR	6159512	Argument	de		6158826	2					
ANR	6159513	Identifier	de		6158826	0					
ANR	6159514	Argument	out		6158826	3					
ANR	6159515	Identifier	out		6158826	0					
ANR	6159516	PrimaryExpression	0		6158826	1					
ANR	6159517	CompoundStatement		134:61:3356:3356	6158826	1					
ANR	6159518	ExpressionStatement	error = 1	204:2:5863:5872	6158826	0	True				
ANR	6159519	AssignmentExpression	error = 1		6158826	0		=			
ANR	6159520	Identifier	error		6158826	0					
ANR	6159521	PrimaryExpression	1		6158826	1					
ANR	6159522	IfStatement	if ( zs )		6158826	1					
ANR	6159523	Condition	zs	205:6:5880:5881	6158826	0	True				
ANR	6159524	Identifier	zs		6158826	0					
ANR	6159525	ExpressionStatement	zip_source_free ( zs )	206:6:5890:5909	6158826	1	True				
ANR	6159526	CallExpression	zip_source_free ( zs )		6158826	0					
ANR	6159527	Callee	zip_source_free		6158826	0					
ANR	6159528	Identifier	zip_source_free		6158826	0					
ANR	6159529	ArgumentList	zs		6158826	1					
ANR	6159530	Argument	zs		6158826	0					
ANR	6159531	Identifier	zs		6158826	0					
ANR	6159532	BreakStatement	break ;	207:2:5913:5918	6158826	2	True				
ANR	6159533	IfStatement	if ( zs )		6158826	4					
ANR	6159534	Condition	zs	209:9:5936:5937	6158826	0	True				
ANR	6159535	Identifier	zs		6158826	0					
ANR	6159536	ExpressionStatement	zip_source_free ( zs )	210:2:5942:5961	6158826	1	True				
ANR	6159537	CallExpression	zip_source_free ( zs )		6158826	0					
ANR	6159538	Callee	zip_source_free		6158826	0					
ANR	6159539	Identifier	zip_source_free		6158826	0					
ANR	6159540	ArgumentList	zs		6158826	1					
ANR	6159541	Argument	zs		6158826	0					
ANR	6159542	Identifier	zs		6158826	0					
ANR	6159543	ElseStatement	else		6158826	0					
ANR	6159544	CompoundStatement		144:5:3476:3495	6158826	0					
ANR	6159545	IdentifierDeclStatement	zip_uint64_t offset ;	213:5:5979:5998	6158826	0	True				
ANR	6159546	IdentifierDecl	offset		6158826	0					
ANR	6159547	IdentifierDeclType	zip_uint64_t		6158826	0					
ANR	6159548	Identifier	offset		6158826	1					
ANR	6159549	ExpressionStatement	de -> bitflags &= ~ZIP_GPBF_DATA_DESCRIPTOR	216:5:6085:6126	6158826	1	True				
ANR	6159550	AssignmentExpression	de -> bitflags &= ~ZIP_GPBF_DATA_DESCRIPTOR		6158826	0		&=			
ANR	6159551	PtrMemberAccess	de -> bitflags		6158826	0					
ANR	6159552	Identifier	de		6158826	0					
ANR	6159553	Identifier	bitflags		6158826	1					
ANR	6159554	Identifier	~ZIP_GPBF_DATA_DESCRIPTOR		6158826	1					
ANR	6159555	IfStatement	"if ( _zip_dirent_write ( de , out , ZIP_FL_LOCAL , & za -> error ) < 0 )"		6158826	2					
ANR	6159556	Condition	"_zip_dirent_write ( de , out , ZIP_FL_LOCAL , & za -> error ) < 0"	217:9:6137:6192	6158826	0	True				
ANR	6159557	RelationalExpression	"_zip_dirent_write ( de , out , ZIP_FL_LOCAL , & za -> error ) < 0"		6158826	0		<			
ANR	6159558	CallExpression	"_zip_dirent_write ( de , out , ZIP_FL_LOCAL , & za -> error )"		6158826	0					
ANR	6159559	Callee	_zip_dirent_write		6158826	0					
ANR	6159560	Identifier	_zip_dirent_write		6158826	0					
ANR	6159561	ArgumentList	de		6158826	1					
ANR	6159562	Argument	de		6158826	0					
ANR	6159563	Identifier	de		6158826	0					
ANR	6159564	Argument	out		6158826	1					
ANR	6159565	Identifier	out		6158826	0					
ANR	6159566	Argument	ZIP_FL_LOCAL		6158826	2					
ANR	6159567	Identifier	ZIP_FL_LOCAL		6158826	0					
ANR	6159568	Argument	& za -> error		6158826	3					
ANR	6159569	UnaryOperationExpression	& za -> error		6158826	0					
ANR	6159570	UnaryOperator	&		6158826	0					
ANR	6159571	PtrMemberAccess	za -> error		6158826	1					
ANR	6159572	Identifier	za		6158826	0					
ANR	6159573	Identifier	error		6158826	1					
ANR	6159574	PrimaryExpression	0		6158826	1					
ANR	6159575	CompoundStatement		148:67:3692:3692	6158826	1					
ANR	6159576	ExpressionStatement	error = 1	218:2:6199:6208	6158826	0	True				
ANR	6159577	AssignmentExpression	error = 1		6158826	0		=			
ANR	6159578	Identifier	error		6158826	0					
ANR	6159579	PrimaryExpression	1		6158826	1					
ANR	6159580	BreakStatement	break ;	219:2:6212:6217	6158826	1	True				
ANR	6159581	IfStatement	"if ( ( offset = _zip_file_get_offset ( za , i , & za -> error ) ) == 0 )"		6158826	3					
ANR	6159582	Condition	"( offset = _zip_file_get_offset ( za , i , & za -> error ) ) == 0"	221:9:6235:6287	6158826	0	True				
ANR	6159583	EqualityExpression	"( offset = _zip_file_get_offset ( za , i , & za -> error ) ) == 0"		6158826	0		==			
ANR	6159584	AssignmentExpression	"offset = _zip_file_get_offset ( za , i , & za -> error )"		6158826	0		=			
ANR	6159585	Identifier	offset		6158826	0					
ANR	6159586	CallExpression	"_zip_file_get_offset ( za , i , & za -> error )"		6158826	1					
ANR	6159587	Callee	_zip_file_get_offset		6158826	0					
ANR	6159588	Identifier	_zip_file_get_offset		6158826	0					
ANR	6159589	ArgumentList	za		6158826	1					
ANR	6159590	Argument	za		6158826	0					
ANR	6159591	Identifier	za		6158826	0					
ANR	6159592	Argument	i		6158826	1					
ANR	6159593	Identifier	i		6158826	0					
ANR	6159594	Argument	& za -> error		6158826	2					
ANR	6159595	UnaryOperationExpression	& za -> error		6158826	0					
ANR	6159596	UnaryOperator	&		6158826	0					
ANR	6159597	PtrMemberAccess	za -> error		6158826	1					
ANR	6159598	Identifier	za		6158826	0					
ANR	6159599	Identifier	error		6158826	1					
ANR	6159600	PrimaryExpression	0		6158826	1					
ANR	6159601	CompoundStatement		152:64:3787:3787	6158826	1					
ANR	6159602	ExpressionStatement	error = 1	222:2:6294:6303	6158826	0	True				
ANR	6159603	AssignmentExpression	error = 1		6158826	0		=			
ANR	6159604	Identifier	error		6158826	0					
ANR	6159605	PrimaryExpression	1		6158826	1					
ANR	6159606	BreakStatement	break ;	223:2:6307:6312	6158826	1	True				
ANR	6159607	IfStatement	"if ( ( fseek ( za -> zp , ( off_t ) offset , SEEK_SET ) < 0 ) )"		6158826	4					
ANR	6159608	Condition	"fseek ( za -> zp , ( off_t ) offset , SEEK_SET ) < 0"	225:9:6330:6373	6158826	0	True				
ANR	6159609	RelationalExpression	"fseek ( za -> zp , ( off_t ) offset , SEEK_SET ) < 0"		6158826	0		<			
ANR	6159610	CallExpression	"fseek ( za -> zp , ( off_t ) offset , SEEK_SET )"		6158826	0					
ANR	6159611	Callee	fseek		6158826	0					
ANR	6159612	Identifier	fseek		6158826	0					
ANR	6159613	ArgumentList	za -> zp		6158826	1					
ANR	6159614	Argument	za -> zp		6158826	0					
ANR	6159615	PtrMemberAccess	za -> zp		6158826	0					
ANR	6159616	Identifier	za		6158826	0					
ANR	6159617	Identifier	zp		6158826	1					
ANR	6159618	Argument	( off_t ) offset		6158826	1					
ANR	6159619	CastExpression	( off_t ) offset		6158826	0					
ANR	6159620	CastTarget	off_t		6158826	0					
ANR	6159621	Identifier	offset		6158826	1					
ANR	6159622	Argument	SEEK_SET		6158826	2					
ANR	6159623	Identifier	SEEK_SET		6158826	0					
ANR	6159624	PrimaryExpression	0		6158826	1					
ANR	6159625	CompoundStatement		156:55:3873:3873	6158826	1					
ANR	6159626	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"	226:2:6380:6426	6158826	0	True				
ANR	6159627	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"		6158826	0					
ANR	6159628	Callee	_zip_error_set		6158826	0					
ANR	6159629	Identifier	_zip_error_set		6158826	0					
ANR	6159630	ArgumentList	& za -> error		6158826	1					
ANR	6159631	Argument	& za -> error		6158826	0					
ANR	6159632	UnaryOperationExpression	& za -> error		6158826	0					
ANR	6159633	UnaryOperator	&		6158826	0					
ANR	6159634	PtrMemberAccess	za -> error		6158826	1					
ANR	6159635	Identifier	za		6158826	0					
ANR	6159636	Identifier	error		6158826	1					
ANR	6159637	Argument	ZIP_ER_SEEK		6158826	1					
ANR	6159638	Identifier	ZIP_ER_SEEK		6158826	0					
ANR	6159639	Argument	errno		6158826	2					
ANR	6159640	Identifier	errno		6158826	0					
ANR	6159641	ExpressionStatement	error = 1	227:2:6430:6439	6158826	1	True				
ANR	6159642	AssignmentExpression	error = 1		6158826	0		=			
ANR	6159643	Identifier	error		6158826	0					
ANR	6159644	PrimaryExpression	1		6158826	1					
ANR	6159645	BreakStatement	break ;	228:2:6443:6448	6158826	2	True				
ANR	6159646	IfStatement	"if ( copy_data ( za -> zp , de -> comp_size , out , & za -> error ) < 0 )"		6158826	5					
ANR	6159647	Condition	"copy_data ( za -> zp , de -> comp_size , out , & za -> error ) < 0"	230:9:6466:6518	6158826	0	True				
ANR	6159648	RelationalExpression	"copy_data ( za -> zp , de -> comp_size , out , & za -> error ) < 0"		6158826	0		<			
ANR	6159649	CallExpression	"copy_data ( za -> zp , de -> comp_size , out , & za -> error )"		6158826	0					
ANR	6159650	Callee	copy_data		6158826	0					
ANR	6159651	Identifier	copy_data		6158826	0					
ANR	6159652	ArgumentList	za -> zp		6158826	1					
ANR	6159653	Argument	za -> zp		6158826	0					
ANR	6159654	PtrMemberAccess	za -> zp		6158826	0					
ANR	6159655	Identifier	za		6158826	0					
ANR	6159656	Identifier	zp		6158826	1					
ANR	6159657	Argument	de -> comp_size		6158826	1					
ANR	6159658	PtrMemberAccess	de -> comp_size		6158826	0					
ANR	6159659	Identifier	de		6158826	0					
ANR	6159660	Identifier	comp_size		6158826	1					
ANR	6159661	Argument	out		6158826	2					
ANR	6159662	Identifier	out		6158826	0					
ANR	6159663	Argument	& za -> error		6158826	3					
ANR	6159664	UnaryOperationExpression	& za -> error		6158826	0					
ANR	6159665	UnaryOperator	&		6158826	0					
ANR	6159666	PtrMemberAccess	za -> error		6158826	1					
ANR	6159667	Identifier	za		6158826	0					
ANR	6159668	Identifier	error		6158826	1					
ANR	6159669	PrimaryExpression	0		6158826	1					
ANR	6159670	CompoundStatement		161:64:4018:4018	6158826	1					
ANR	6159671	ExpressionStatement	error = 1	231:2:6525:6534	6158826	0	True				
ANR	6159672	AssignmentExpression	error = 1		6158826	0		=			
ANR	6159673	Identifier	error		6158826	0					
ANR	6159674	PrimaryExpression	1		6158826	1					
ANR	6159675	BreakStatement	break ;	232:2:6538:6543	6158826	1	True				
ANR	6159676	IfStatement	if ( ! error )		6158826	24					
ANR	6159677	Condition	! error	237:8:6570:6575	6158826	0	True				
ANR	6159678	UnaryOperationExpression	! error		6158826	0					
ANR	6159679	UnaryOperator	!		6158826	0					
ANR	6159680	Identifier	error		6158826	1					
ANR	6159681	CompoundStatement		168:16:4075:4075	6158826	1					
ANR	6159682	IfStatement	"if ( write_cdir ( za , filelist , survivors , out ) < 0 )"		6158826	0					
ANR	6159683	Condition	"write_cdir ( za , filelist , survivors , out ) < 0"	238:5:6585:6628	6158826	0	True				
ANR	6159684	RelationalExpression	"write_cdir ( za , filelist , survivors , out ) < 0"		6158826	0		<			
ANR	6159685	CallExpression	"write_cdir ( za , filelist , survivors , out )"		6158826	0					
ANR	6159686	Callee	write_cdir		6158826	0					
ANR	6159687	Identifier	write_cdir		6158826	0					
ANR	6159688	ArgumentList	za		6158826	1					
ANR	6159689	Argument	za		6158826	0					
ANR	6159690	Identifier	za		6158826	0					
ANR	6159691	Argument	filelist		6158826	1					
ANR	6159692	Identifier	filelist		6158826	0					
ANR	6159693	Argument	survivors		6158826	2					
ANR	6159694	Identifier	survivors		6158826	0					
ANR	6159695	Argument	out		6158826	3					
ANR	6159696	Identifier	out		6158826	0					
ANR	6159697	PrimaryExpression	0		6158826	1					
ANR	6159698	ExpressionStatement	error = 1	239:5:6636:6645	6158826	1	True				
ANR	6159699	AssignmentExpression	error = 1		6158826	0		=			
ANR	6159700	Identifier	error		6158826	0					
ANR	6159701	PrimaryExpression	1		6158826	1					
ANR	6159702	ExpressionStatement	free ( filelist )	242:4:6658:6672	6158826	25	True				
ANR	6159703	CallExpression	free ( filelist )		6158826	0					
ANR	6159704	Callee	free		6158826	0					
ANR	6159705	Identifier	free		6158826	0					
ANR	6159706	ArgumentList	filelist		6158826	1					
ANR	6159707	Argument	filelist		6158826	0					
ANR	6159708	Identifier	filelist		6158826	0					
ANR	6159709	IfStatement	if ( error )		6158826	26					
ANR	6159710	Condition	error	244:8:6683:6687	6158826	0	True				
ANR	6159711	Identifier	error		6158826	0					
ANR	6159712	CompoundStatement		175:15:4187:4187	6158826	1					
ANR	6159713	ExpressionStatement	fclose ( out )	245:1:6693:6704	6158826	0	True				
ANR	6159714	CallExpression	fclose ( out )		6158826	0					
ANR	6159715	Callee	fclose		6158826	0					
ANR	6159716	Identifier	fclose		6158826	0					
ANR	6159717	ArgumentList	out		6158826	1					
ANR	6159718	Argument	out		6158826	0					
ANR	6159719	Identifier	out		6158826	0					
ANR	6159720	ExpressionStatement	( void ) remove ( temp )	246:1:6707:6725	6158826	1	True				
ANR	6159721	CastExpression	( void ) remove ( temp )		6158826	0					
ANR	6159722	CastTarget	void		6158826	0					
ANR	6159723	CallExpression	remove ( temp )		6158826	1					
ANR	6159724	Callee	remove		6158826	0					
ANR	6159725	Identifier	remove		6158826	0					
ANR	6159726	ArgumentList	temp		6158826	1					
ANR	6159727	Argument	temp		6158826	0					
ANR	6159728	Identifier	temp		6158826	0					
ANR	6159729	ExpressionStatement	free ( temp )	247:1:6728:6738	6158826	2	True				
ANR	6159730	CallExpression	free ( temp )		6158826	0					
ANR	6159731	Callee	free		6158826	0					
ANR	6159732	Identifier	free		6158826	0					
ANR	6159733	ArgumentList	temp		6158826	1					
ANR	6159734	Argument	temp		6158826	0					
ANR	6159735	Identifier	temp		6158826	0					
ANR	6159736	ReturnStatement	return - 1 ;	248:1:6741:6750	6158826	3	True				
ANR	6159737	UnaryOperationExpression	- 1		6158826	0					
ANR	6159738	UnaryOperator	-		6158826	0					
ANR	6159739	PrimaryExpression	1		6158826	1					
ANR	6159740	IfStatement	if ( fclose ( out ) != 0 )		6158826	27					
ANR	6159741	Condition	fclose ( out ) != 0	251:8:6767:6782	6158826	0	True				
ANR	6159742	EqualityExpression	fclose ( out ) != 0		6158826	0		!=			
ANR	6159743	CallExpression	fclose ( out )		6158826	0					
ANR	6159744	Callee	fclose		6158826	0					
ANR	6159745	Identifier	fclose		6158826	0					
ANR	6159746	ArgumentList	out		6158826	1					
ANR	6159747	Argument	out		6158826	0					
ANR	6159748	Identifier	out		6158826	0					
ANR	6159749	PrimaryExpression	0		6158826	1					
ANR	6159750	CompoundStatement		182:26:4282:4282	6158826	1					
ANR	6159751	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_CLOSE , errno )"	252:1:6788:6835	6158826	0	True				
ANR	6159752	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_CLOSE , errno )"		6158826	0					
ANR	6159753	Callee	_zip_error_set		6158826	0					
ANR	6159754	Identifier	_zip_error_set		6158826	0					
ANR	6159755	ArgumentList	& za -> error		6158826	1					
ANR	6159756	Argument	& za -> error		6158826	0					
ANR	6159757	UnaryOperationExpression	& za -> error		6158826	0					
ANR	6159758	UnaryOperator	&		6158826	0					
ANR	6159759	PtrMemberAccess	za -> error		6158826	1					
ANR	6159760	Identifier	za		6158826	0					
ANR	6159761	Identifier	error		6158826	1					
ANR	6159762	Argument	ZIP_ER_CLOSE		6158826	1					
ANR	6159763	Identifier	ZIP_ER_CLOSE		6158826	0					
ANR	6159764	Argument	errno		6158826	2					
ANR	6159765	Identifier	errno		6158826	0					
ANR	6159766	ExpressionStatement	( void ) remove ( temp )	253:1:6838:6856	6158826	1	True				
ANR	6159767	CastExpression	( void ) remove ( temp )		6158826	0					
ANR	6159768	CastTarget	void		6158826	0					
ANR	6159769	CallExpression	remove ( temp )		6158826	1					
ANR	6159770	Callee	remove		6158826	0					
ANR	6159771	Identifier	remove		6158826	0					
ANR	6159772	ArgumentList	temp		6158826	1					
ANR	6159773	Argument	temp		6158826	0					
ANR	6159774	Identifier	temp		6158826	0					
ANR	6159775	ExpressionStatement	free ( temp )	254:1:6859:6869	6158826	2	True				
ANR	6159776	CallExpression	free ( temp )		6158826	0					
ANR	6159777	Callee	free		6158826	0					
ANR	6159778	Identifier	free		6158826	0					
ANR	6159779	ArgumentList	temp		6158826	1					
ANR	6159780	Argument	temp		6158826	0					
ANR	6159781	Identifier	temp		6158826	0					
ANR	6159782	ReturnStatement	return - 1 ;	255:1:6872:6881	6158826	3	True				
ANR	6159783	UnaryOperationExpression	- 1		6158826	0					
ANR	6159784	UnaryOperator	-		6158826	0					
ANR	6159785	PrimaryExpression	1		6158826	1					
ANR	6159786	IfStatement	if ( za -> zp )		6158826	28					
ANR	6159787	Condition	za -> zp	257:8:6897:6902	6158826	0	True				
ANR	6159788	PtrMemberAccess	za -> zp		6158826	0					
ANR	6159789	Identifier	za		6158826	0					
ANR	6159790	Identifier	zp		6158826	1					
ANR	6159791	CompoundStatement		188:16:4402:4402	6158826	1					
ANR	6159792	ExpressionStatement	fclose ( za -> zp )	258:1:6908:6922	6158826	0	True				
ANR	6159793	CallExpression	fclose ( za -> zp )		6158826	0					
ANR	6159794	Callee	fclose		6158826	0					
ANR	6159795	Identifier	fclose		6158826	0					
ANR	6159796	ArgumentList	za -> zp		6158826	1					
ANR	6159797	Argument	za -> zp		6158826	0					
ANR	6159798	PtrMemberAccess	za -> zp		6158826	0					
ANR	6159799	Identifier	za		6158826	0					
ANR	6159800	Identifier	zp		6158826	1					
ANR	6159801	ExpressionStatement	za -> zp = NULL	259:1:6925:6938	6158826	1	True				
ANR	6159802	AssignmentExpression	za -> zp = NULL		6158826	0		=			
ANR	6159803	PtrMemberAccess	za -> zp		6158826	0					
ANR	6159804	Identifier	za		6158826	0					
ANR	6159805	Identifier	zp		6158826	1					
ANR	6159806	Identifier	NULL		6158826	1					
ANR	6159807	ExpressionStatement	reopen_on_error = 1	260:1:6941:6960	6158826	2	True				
ANR	6159808	AssignmentExpression	reopen_on_error = 1		6158826	0		=			
ANR	6159809	Identifier	reopen_on_error		6158826	0					
ANR	6159810	PrimaryExpression	1		6158826	1					
ANR	6159811	IfStatement	"if ( _zip_rename ( temp , za -> zn ) != 0 )"		6158826	29					
ANR	6159812	Condition	"_zip_rename ( temp , za -> zn ) != 0"	262:8:6976:7005	6158826	0	True				
ANR	6159813	EqualityExpression	"_zip_rename ( temp , za -> zn ) != 0"		6158826	0		!=			
ANR	6159814	CallExpression	"_zip_rename ( temp , za -> zn )"		6158826	0					
ANR	6159815	Callee	_zip_rename		6158826	0					
ANR	6159816	Identifier	_zip_rename		6158826	0					
ANR	6159817	ArgumentList	temp		6158826	1					
ANR	6159818	Argument	temp		6158826	0					
ANR	6159819	Identifier	temp		6158826	0					
ANR	6159820	Argument	za -> zn		6158826	1					
ANR	6159821	PtrMemberAccess	za -> zn		6158826	0					
ANR	6159822	Identifier	za		6158826	0					
ANR	6159823	Identifier	zn		6158826	1					
ANR	6159824	PrimaryExpression	0		6158826	1					
ANR	6159825	CompoundStatement		193:40:4505:4505	6158826	1					
ANR	6159826	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_RENAME , errno )"	263:1:7011:7059	6158826	0	True				
ANR	6159827	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_RENAME , errno )"		6158826	0					
ANR	6159828	Callee	_zip_error_set		6158826	0					
ANR	6159829	Identifier	_zip_error_set		6158826	0					
ANR	6159830	ArgumentList	& za -> error		6158826	1					
ANR	6159831	Argument	& za -> error		6158826	0					
ANR	6159832	UnaryOperationExpression	& za -> error		6158826	0					
ANR	6159833	UnaryOperator	&		6158826	0					
ANR	6159834	PtrMemberAccess	za -> error		6158826	1					
ANR	6159835	Identifier	za		6158826	0					
ANR	6159836	Identifier	error		6158826	1					
ANR	6159837	Argument	ZIP_ER_RENAME		6158826	1					
ANR	6159838	Identifier	ZIP_ER_RENAME		6158826	0					
ANR	6159839	Argument	errno		6158826	2					
ANR	6159840	Identifier	errno		6158826	0					
ANR	6159841	ExpressionStatement	( void ) remove ( temp )	264:1:7062:7080	6158826	1	True				
ANR	6159842	CastExpression	( void ) remove ( temp )		6158826	0					
ANR	6159843	CastTarget	void		6158826	0					
ANR	6159844	CallExpression	remove ( temp )		6158826	1					
ANR	6159845	Callee	remove		6158826	0					
ANR	6159846	Identifier	remove		6158826	0					
ANR	6159847	ArgumentList	temp		6158826	1					
ANR	6159848	Argument	temp		6158826	0					
ANR	6159849	Identifier	temp		6158826	0					
ANR	6159850	ExpressionStatement	free ( temp )	265:1:7083:7093	6158826	2	True				
ANR	6159851	CallExpression	free ( temp )		6158826	0					
ANR	6159852	Callee	free		6158826	0					
ANR	6159853	Identifier	free		6158826	0					
ANR	6159854	ArgumentList	temp		6158826	1					
ANR	6159855	Argument	temp		6158826	0					
ANR	6159856	Identifier	temp		6158826	0					
ANR	6159857	IfStatement	if ( reopen_on_error )		6158826	3					
ANR	6159858	Condition	reopen_on_error	266:5:7100:7114	6158826	0	True				
ANR	6159859	Identifier	reopen_on_error		6158826	0					
ANR	6159860	CompoundStatement		197:22:4614:4614	6158826	1					
ANR	6159861	ExpressionStatement	"za -> zp = fopen ( za -> zn , ""rb"" )"	268:5:7187:7215	6158826	0	True				
ANR	6159862	AssignmentExpression	"za -> zp = fopen ( za -> zn , ""rb"" )"		6158826	0		=			
ANR	6159863	PtrMemberAccess	za -> zp		6158826	0					
ANR	6159864	Identifier	za		6158826	0					
ANR	6159865	Identifier	zp		6158826	1					
ANR	6159866	CallExpression	"fopen ( za -> zn , ""rb"" )"		6158826	1					
ANR	6159867	Callee	fopen		6158826	0					
ANR	6159868	Identifier	fopen		6158826	0					
ANR	6159869	ArgumentList	za -> zn		6158826	1					
ANR	6159870	Argument	za -> zn		6158826	0					
ANR	6159871	PtrMemberAccess	za -> zn		6158826	0					
ANR	6159872	Identifier	za		6158826	0					
ANR	6159873	Identifier	zn		6158826	1					
ANR	6159874	Argument	"""rb"""		6158826	1					
ANR	6159875	PrimaryExpression	"""rb"""		6158826	0					
ANR	6159876	ReturnStatement	return - 1 ;	270:1:7221:7230	6158826	4	True				
ANR	6159877	UnaryOperationExpression	- 1		6158826	0					
ANR	6159878	UnaryOperator	-		6158826	0					
ANR	6159879	PrimaryExpression	1		6158826	1					
ANR	6159880	ExpressionStatement	mask = umask ( 0 )	273:4:7262:7277	6158826	30	True				
ANR	6159881	AssignmentExpression	mask = umask ( 0 )		6158826	0		=			
ANR	6159882	Identifier	mask		6158826	0					
ANR	6159883	CallExpression	umask ( 0 )		6158826	1					
ANR	6159884	Callee	umask		6158826	0					
ANR	6159885	Identifier	umask		6158826	0					
ANR	6159886	ArgumentList	0		6158826	1					
ANR	6159887	Argument	0		6158826	0					
ANR	6159888	PrimaryExpression	0		6158826	0					
ANR	6159889	ExpressionStatement	umask ( mask )	274:4:7283:7294	6158826	31	True				
ANR	6159890	CallExpression	umask ( mask )		6158826	0					
ANR	6159891	Callee	umask		6158826	0					
ANR	6159892	Identifier	umask		6158826	0					
ANR	6159893	ArgumentList	mask		6158826	1					
ANR	6159894	Argument	mask		6158826	0					
ANR	6159895	Identifier	mask		6158826	0					
ANR	6159896	ExpressionStatement	"chmod ( za -> zn , 0666 & ~mask )"	275:4:7300:7325	6158826	32	True				
ANR	6159897	CallExpression	"chmod ( za -> zn , 0666 & ~mask )"		6158826	0					
ANR	6159898	Callee	chmod		6158826	0					
ANR	6159899	Identifier	chmod		6158826	0					
ANR	6159900	ArgumentList	za -> zn		6158826	1					
ANR	6159901	Argument	za -> zn		6158826	0					
ANR	6159902	PtrMemberAccess	za -> zn		6158826	0					
ANR	6159903	Identifier	za		6158826	0					
ANR	6159904	Identifier	zn		6158826	1					
ANR	6159905	Argument	0666 & ~mask		6158826	1					
ANR	6159906	BitAndExpression	0666 & ~mask		6158826	0		&			
ANR	6159907	PrimaryExpression	0666		6158826	0					
ANR	6159908	Identifier	~mask		6158826	1					
ANR	6159909	ExpressionStatement	zip_discard ( za )	278:4:7339:7354	6158826	33	True				
ANR	6159910	CallExpression	zip_discard ( za )		6158826	0					
ANR	6159911	Callee	zip_discard		6158826	0					
ANR	6159912	Identifier	zip_discard		6158826	0					
ANR	6159913	ArgumentList	za		6158826	1					
ANR	6159914	Argument	za		6158826	0					
ANR	6159915	Identifier	za		6158826	0					
ANR	6159916	ExpressionStatement	free ( temp )	279:4:7360:7370	6158826	34	True				
ANR	6159917	CallExpression	free ( temp )		6158826	0					
ANR	6159918	Callee	free		6158826	0					
ANR	6159919	Identifier	free		6158826	0					
ANR	6159920	ArgumentList	temp		6158826	1					
ANR	6159921	Argument	temp		6158826	0					
ANR	6159922	Identifier	temp		6158826	0					
ANR	6159923	ReturnStatement	return 0 ;	280:4:7376:7384	6158826	35	True				
ANR	6159924	PrimaryExpression	0		6158826	0					
ANR	6159925	ReturnType	ZIP_EXTERN int		6158826	1					
ANR	6159926	Identifier	zip_close		6158826	2					
ANR	6159927	ParameterList	struct zip * za		6158826	3					
ANR	6159928	Parameter	struct zip * za	69:10:2486:2499	6158826	0	True				
ANR	6159929	ParameterType	struct zip *		6158826	0					
ANR	6159930	Identifier	za		6158826	1					
ANR	6159931	CFGEntryNode	ENTRY		6158826		True				
ANR	6159932	CFGExitNode	EXIT		6158826		True				
ANR	6159933	Symbol	_zip_create_temp_output		6158826						
ANR	6159934	Symbol	de		6158826						
ANR	6159935	Symbol	copy_data		6158826						
ANR	6159936	Symbol	ZIP_ER_RENAME		6158826						
ANR	6159937	Symbol	_zip_torrentzip_cmp		6158826						
ANR	6159938	Symbol	& za -> error		6158826						
ANR	6159939	Symbol	za -> entry [ i ] . deleted		6158826						
ANR	6159940	Symbol	_zip_file_get_offset		6158826						
ANR	6159941	Symbol	za -> entry		6158826						
ANR	6159942	Symbol	ZIP_ENTRY_CHANGED		6158826						
ANR	6159943	Symbol	ZIP_FL_UNCHANGED		6158826						
ANR	6159944	Symbol	fseek		6158826						
ANR	6159945	Symbol	_zip_source_zip_new		6158826						
ANR	6159946	Symbol	* * za		6158826						
ANR	6159947	Symbol	za -> nentry		6158826						
ANR	6159948	Symbol	za -> open_flags		6158826						
ANR	6159949	Symbol	_zip_rename		6158826						
ANR	6159950	Symbol	ftello		6158826						
ANR	6159951	Symbol	* filelist		6158826						
ANR	6159952	Symbol	ZIP_ER_CLOSE		6158826						
ANR	6159953	Symbol	errno		6158826						
ANR	6159954	Symbol	NULL		6158826						
ANR	6159955	Symbol	ZIP_ER_INTERNAL		6158826						
ANR	6159956	Symbol	entry -> changes		6158826						
ANR	6159957	Symbol	* de		6158826						
ANR	6159958	Symbol	offset		6158826						
ANR	6159959	Symbol	za		6158826						
ANR	6159960	Symbol	write_cdir		6158826						
ANR	6159961	Symbol	zip_get_archive_flag		6158826						
ANR	6159962	Symbol	filelist		6158826						
ANR	6159963	Symbol	ZIP_ER_SEEK		6158826						
ANR	6159964	Symbol	entry		6158826						
ANR	6159965	Symbol	ZIP_DIRENT_COMP_METHOD		6158826						
ANR	6159966	Symbol	entry -> orig		6158826						
ANR	6159967	Symbol	survivors		6158826						
ANR	6159968	Symbol	_zip_dirent_clone		6158826						
ANR	6159969	Symbol	zs		6158826						
ANR	6159970	Symbol	entry -> source		6158826						
ANR	6159971	Symbol	changed		6158826						
ANR	6159972	Symbol	umask		6158826						
ANR	6159973	Symbol	_zip_changed		6158826						
ANR	6159974	Symbol	add_data		6158826						
ANR	6159975	Symbol	~mask		6158826						
ANR	6159976	Symbol	ZIP_ER_REMOVE		6158826						
ANR	6159977	Symbol	ZIP_ENTRY_DATA_CHANGED		6158826						
ANR	6159978	Symbol	error		6158826						
ANR	6159979	Symbol	* za		6158826						
ANR	6159980	Symbol	remove		6158826						
ANR	6159981	Symbol	_zip_read_local_ef		6158826						
ANR	6159982	Symbol	out		6158826						
ANR	6159983	Symbol	ZIP_FL_LOCAL		6158826						
ANR	6159984	Symbol	de -> comp_size		6158826						
ANR	6159985	Symbol	_zip_dirent_write		6158826						
ANR	6159986	Symbol	ZIP_ER_MEMORY		6158826						
ANR	6159987	Symbol	new_torrentzip		6158826						
ANR	6159988	Symbol	mask		6158826						
ANR	6159989	Symbol	* entry		6158826						
ANR	6159990	Symbol	de -> offset		6158826						
ANR	6159991	Symbol	SEEK_SET		6158826						
ANR	6159992	Symbol	malloc		6158826						
ANR	6159993	Symbol	fopen		6158826						
ANR	6159994	Symbol	temp		6158826						
ANR	6159995	Symbol	fclose		6158826						
ANR	6159996	Symbol	i		6158826						
ANR	6159997	Symbol	j		6158826						
ANR	6159998	Symbol	& survivors		6158826						
ANR	6159999	Symbol	filelist [ j ] . name		6158826						
ANR	6160000	Symbol	* za -> entry		6158826						
ANR	6160001	Symbol	filelist [ j ] . idx		6158826						
ANR	6160002	Symbol	za -> zp		6158826						
ANR	6160003	Symbol	ZIP_AFL_TORRENT		6158826						
ANR	6160004	Symbol	* i		6158826						
ANR	6160005	Symbol	& out		6158826						
ANR	6160006	Symbol	* j		6158826						
ANR	6160007	Symbol	reopen_on_error		6158826						
ANR	6160008	Symbol	za -> zn		6158826						
ANR	6160009	Symbol	new_data		6158826						
ANR	6160010	Symbol	zip_get_name		6158826						
ANR	6160011	Symbol	~ZIP_GPBF_DATA_DESCRIPTOR		6158826						
ANR	6160012	Symbol	de -> bitflags		6158826						
ANR	6160013	Symbol	ZIP_TRUNCATE		6158826						
ANR	6160014	Function	add_data	285:0:7392:11622							
ANR	6160015	FunctionDef	"add_data (struct zip * za , struct zip_source * src , struct zip_dirent * de , FILE * ft)"		6160014	0					
ANR	6160016	CompoundStatement		287:0:7485:11622	6160014	0					
ANR	6160017	IdentifierDeclStatement	"off_t offstart , offdata , offend ;"	288:4:7491:7522	6160014	0	True				
ANR	6160018	IdentifierDecl	offstart		6160014	0					
ANR	6160019	IdentifierDeclType	off_t		6160014	0					
ANR	6160020	Identifier	offstart		6160014	1					
ANR	6160021	IdentifierDecl	offdata		6160014	1					
ANR	6160022	IdentifierDeclType	off_t		6160014	0					
ANR	6160023	Identifier	offdata		6160014	1					
ANR	6160024	IdentifierDecl	offend		6160014	2					
ANR	6160025	IdentifierDeclType	off_t		6160014	0					
ANR	6160026	Identifier	offend		6160014	1					
ANR	6160027	IdentifierDeclStatement	struct zip_stat st ;	289:4:7528:7546	6160014	1	True				
ANR	6160028	IdentifierDecl	st		6160014	0					
ANR	6160029	IdentifierDeclType	struct zip_stat		6160014	0					
ANR	6160030	Identifier	st		6160014	1					
ANR	6160031	IdentifierDeclStatement	struct zip_source * s2 ;	290:4:7552:7573	6160014	2	True				
ANR	6160032	IdentifierDecl	* s2		6160014	0					
ANR	6160033	IdentifierDeclType	struct zip_source *		6160014	0					
ANR	6160034	Identifier	s2		6160014	1					
ANR	6160035	IdentifierDeclStatement	int ret ;	291:4:7579:7586	6160014	3	True				
ANR	6160036	IdentifierDecl	ret		6160014	0					
ANR	6160037	IdentifierDeclType	int		6160014	0					
ANR	6160038	Identifier	ret		6160014	1					
ANR	6160039	IdentifierDeclStatement	int is_zip64 ;	292:4:7592:7604	6160014	4	True				
ANR	6160040	IdentifierDecl	is_zip64		6160014	0					
ANR	6160041	IdentifierDeclType	int		6160014	0					
ANR	6160042	Identifier	is_zip64		6160014	1					
ANR	6160043	IdentifierDeclStatement	zip_flags_t flags ;	293:4:7610:7627	6160014	5	True				
ANR	6160044	IdentifierDecl	flags		6160014	0					
ANR	6160045	IdentifierDeclType	zip_flags_t		6160014	0					
ANR	6160046	Identifier	flags		6160014	1					
ANR	6160047	IfStatement	"if ( zip_source_stat ( src , & st ) < 0 )"		6160014	6					
ANR	6160048	Condition	"zip_source_stat ( src , & st ) < 0"	295:8:7638:7666	6160014	0	True				
ANR	6160049	RelationalExpression	"zip_source_stat ( src , & st ) < 0"		6160014	0		<			
ANR	6160050	CallExpression	"zip_source_stat ( src , & st )"		6160014	0					
ANR	6160051	Callee	zip_source_stat		6160014	0					
ANR	6160052	Identifier	zip_source_stat		6160014	0					
ANR	6160053	ArgumentList	src		6160014	1					
ANR	6160054	Argument	src		6160014	0					
ANR	6160055	Identifier	src		6160014	0					
ANR	6160056	Argument	& st		6160014	1					
ANR	6160057	UnaryOperationExpression	& st		6160014	0					
ANR	6160058	UnaryOperator	&		6160014	0					
ANR	6160059	Identifier	st		6160014	1					
ANR	6160060	PrimaryExpression	0		6160014	1					
ANR	6160061	CompoundStatement		9:39:183:183	6160014	1					
ANR	6160062	ExpressionStatement	"_zip_error_set_from_source ( & za -> error , src )"	296:1:7672:7715	6160014	0	True				
ANR	6160063	CallExpression	"_zip_error_set_from_source ( & za -> error , src )"		6160014	0					
ANR	6160064	Callee	_zip_error_set_from_source		6160014	0					
ANR	6160065	Identifier	_zip_error_set_from_source		6160014	0					
ANR	6160066	ArgumentList	& za -> error		6160014	1					
ANR	6160067	Argument	& za -> error		6160014	0					
ANR	6160068	UnaryOperationExpression	& za -> error		6160014	0					
ANR	6160069	UnaryOperator	&		6160014	0					
ANR	6160070	PtrMemberAccess	za -> error		6160014	1					
ANR	6160071	Identifier	za		6160014	0					
ANR	6160072	Identifier	error		6160014	1					
ANR	6160073	Argument	src		6160014	1					
ANR	6160074	Identifier	src		6160014	0					
ANR	6160075	ReturnStatement	return - 1 ;	297:1:7718:7727	6160014	1	True				
ANR	6160076	UnaryOperationExpression	- 1		6160014	0					
ANR	6160077	UnaryOperator	-		6160014	0					
ANR	6160078	PrimaryExpression	1		6160014	1					
ANR	6160079	IfStatement	if ( ( st . valid & ZIP_STAT_COMP_METHOD ) == 0 )		6160014	7					
ANR	6160080	Condition	( st . valid & ZIP_STAT_COMP_METHOD ) == 0	300:8:7744:7781	6160014	0	True				
ANR	6160081	EqualityExpression	( st . valid & ZIP_STAT_COMP_METHOD ) == 0		6160014	0		==			
ANR	6160082	BitAndExpression	st . valid & ZIP_STAT_COMP_METHOD		6160014	0		&			
ANR	6160083	MemberAccess	st . valid		6160014	0					
ANR	6160084	Identifier	st		6160014	0					
ANR	6160085	Identifier	valid		6160014	1					
ANR	6160086	Identifier	ZIP_STAT_COMP_METHOD		6160014	1					
ANR	6160087	PrimaryExpression	0		6160014	1					
ANR	6160088	CompoundStatement		14:48:298:298	6160014	1					
ANR	6160089	ExpressionStatement	st . valid |= ZIP_STAT_COMP_METHOD	301:1:7787:7819	6160014	0	True				
ANR	6160090	AssignmentExpression	st . valid |= ZIP_STAT_COMP_METHOD		6160014	0		|=			
ANR	6160091	MemberAccess	st . valid		6160014	0					
ANR	6160092	Identifier	st		6160014	0					
ANR	6160093	Identifier	valid		6160014	1					
ANR	6160094	Identifier	ZIP_STAT_COMP_METHOD		6160014	1					
ANR	6160095	ExpressionStatement	st . comp_method = ZIP_CM_STORE	302:1:7822:7851	6160014	1	True				
ANR	6160096	AssignmentExpression	st . comp_method = ZIP_CM_STORE		6160014	0		=			
ANR	6160097	MemberAccess	st . comp_method		6160014	0					
ANR	6160098	Identifier	st		6160014	0					
ANR	6160099	Identifier	comp_method		6160014	1					
ANR	6160100	Identifier	ZIP_CM_STORE		6160014	1					
ANR	6160101	IfStatement	if ( ZIP_CM_IS_DEFAULT ( de -> comp_method ) && st . comp_method != ZIP_CM_STORE )		6160014	8					
ANR	6160102	Condition	ZIP_CM_IS_DEFAULT ( de -> comp_method ) && st . comp_method != ZIP_CM_STORE	305:8:7868:7935	6160014	0	True				
ANR	6160103	AndExpression	ZIP_CM_IS_DEFAULT ( de -> comp_method ) && st . comp_method != ZIP_CM_STORE		6160014	0		&&			
ANR	6160104	CallExpression	ZIP_CM_IS_DEFAULT ( de -> comp_method )		6160014	0					
ANR	6160105	Callee	ZIP_CM_IS_DEFAULT		6160014	0					
ANR	6160106	Identifier	ZIP_CM_IS_DEFAULT		6160014	0					
ANR	6160107	ArgumentList	de -> comp_method		6160014	1					
ANR	6160108	Argument	de -> comp_method		6160014	0					
ANR	6160109	PtrMemberAccess	de -> comp_method		6160014	0					
ANR	6160110	Identifier	de		6160014	0					
ANR	6160111	Identifier	comp_method		6160014	1					
ANR	6160112	EqualityExpression	st . comp_method != ZIP_CM_STORE		6160014	1		!=			
ANR	6160113	MemberAccess	st . comp_method		6160014	0					
ANR	6160114	Identifier	st		6160014	0					
ANR	6160115	Identifier	comp_method		6160014	1					
ANR	6160116	Identifier	ZIP_CM_STORE		6160014	1					
ANR	6160117	ExpressionStatement	de -> comp_method = st . comp_method	306:1:7939:7971	6160014	1	True				
ANR	6160118	AssignmentExpression	de -> comp_method = st . comp_method		6160014	0		=			
ANR	6160119	PtrMemberAccess	de -> comp_method		6160014	0					
ANR	6160120	Identifier	de		6160014	0					
ANR	6160121	Identifier	comp_method		6160014	1					
ANR	6160122	MemberAccess	st . comp_method		6160014	1					
ANR	6160123	Identifier	st		6160014	0					
ANR	6160124	Identifier	comp_method		6160014	1					
ANR	6160125	ElseStatement	else		6160014	0					
ANR	6160126	IfStatement	if ( de -> comp_method == ZIP_CM_STORE && ( st . valid & ZIP_STAT_SIZE ) )		6160014	0					
ANR	6160127	Condition	de -> comp_method == ZIP_CM_STORE && ( st . valid & ZIP_STAT_SIZE )	307:13:7986:8046	6160014	0	True				
ANR	6160128	AndExpression	de -> comp_method == ZIP_CM_STORE && ( st . valid & ZIP_STAT_SIZE )		6160014	0		&&			
ANR	6160129	EqualityExpression	de -> comp_method == ZIP_CM_STORE		6160014	0		==			
ANR	6160130	PtrMemberAccess	de -> comp_method		6160014	0					
ANR	6160131	Identifier	de		6160014	0					
ANR	6160132	Identifier	comp_method		6160014	1					
ANR	6160133	Identifier	ZIP_CM_STORE		6160014	1					
ANR	6160134	BitAndExpression	st . valid & ZIP_STAT_SIZE		6160014	1		&			
ANR	6160135	MemberAccess	st . valid		6160014	0					
ANR	6160136	Identifier	st		6160014	0					
ANR	6160137	Identifier	valid		6160014	1					
ANR	6160138	Identifier	ZIP_STAT_SIZE		6160014	1					
ANR	6160139	CompoundStatement		21:76:563:563	6160014	1					
ANR	6160140	ExpressionStatement	st . valid |= ZIP_STAT_COMP_SIZE	308:1:8052:8082	6160014	0	True				
ANR	6160141	AssignmentExpression	st . valid |= ZIP_STAT_COMP_SIZE		6160014	0		|=			
ANR	6160142	MemberAccess	st . valid		6160014	0					
ANR	6160143	Identifier	st		6160014	0					
ANR	6160144	Identifier	valid		6160014	1					
ANR	6160145	Identifier	ZIP_STAT_COMP_SIZE		6160014	1					
ANR	6160146	ExpressionStatement	st . comp_size = st . size	309:1:8085:8107	6160014	1	True				
ANR	6160147	AssignmentExpression	st . comp_size = st . size		6160014	0		=			
ANR	6160148	MemberAccess	st . comp_size		6160014	0					
ANR	6160149	Identifier	st		6160014	0					
ANR	6160150	Identifier	comp_size		6160014	1					
ANR	6160151	MemberAccess	st . size		6160014	1					
ANR	6160152	Identifier	st		6160014	0					
ANR	6160153	Identifier	size		6160014	1					
ANR	6160154	ElseStatement	else		6160014	0					
ANR	6160155	CompoundStatement		25:9:638:638	6160014	0					
ANR	6160156	ExpressionStatement	st . valid &= ~ZIP_STAT_COMP_SIZE	313:1:8151:8182	6160014	0	True				
ANR	6160157	AssignmentExpression	st . valid &= ~ZIP_STAT_COMP_SIZE		6160014	0		&=			
ANR	6160158	MemberAccess	st . valid		6160014	0					
ANR	6160159	Identifier	st		6160014	0					
ANR	6160160	Identifier	valid		6160014	1					
ANR	6160161	Identifier	~ZIP_STAT_COMP_SIZE		6160014	1					
ANR	6160162	ExpressionStatement	flags = ZIP_EF_LOCAL	317:4:8196:8216	6160014	9	True				
ANR	6160163	AssignmentExpression	flags = ZIP_EF_LOCAL		6160014	0		=			
ANR	6160164	Identifier	flags		6160014	0					
ANR	6160165	Identifier	ZIP_EF_LOCAL		6160014	1					
ANR	6160166	IfStatement	if ( ( st . valid & ZIP_STAT_SIZE ) == 0 )		6160014	10					
ANR	6160167	Condition	( st . valid & ZIP_STAT_SIZE ) == 0	319:8:8227:8257	6160014	0	True				
ANR	6160168	EqualityExpression	( st . valid & ZIP_STAT_SIZE ) == 0		6160014	0		==			
ANR	6160169	BitAndExpression	st . valid & ZIP_STAT_SIZE		6160014	0		&			
ANR	6160170	MemberAccess	st . valid		6160014	0					
ANR	6160171	Identifier	st		6160014	0					
ANR	6160172	Identifier	valid		6160014	1					
ANR	6160173	Identifier	ZIP_STAT_SIZE		6160014	1					
ANR	6160174	PrimaryExpression	0		6160014	1					
ANR	6160175	ExpressionStatement	flags |= ZIP_FL_FORCE_ZIP64	320:1:8261:8288	6160014	1	True				
ANR	6160176	AssignmentExpression	flags |= ZIP_FL_FORCE_ZIP64		6160014	0		|=			
ANR	6160177	Identifier	flags		6160014	0					
ANR	6160178	Identifier	ZIP_FL_FORCE_ZIP64		6160014	1					
ANR	6160179	ElseStatement	else		6160014	0					
ANR	6160180	CompoundStatement		35:9:813:813	6160014	0					
ANR	6160181	ExpressionStatement	de -> uncomp_size = st . size	322:1:8302:8327	6160014	0	True				
ANR	6160182	AssignmentExpression	de -> uncomp_size = st . size		6160014	0		=			
ANR	6160183	PtrMemberAccess	de -> uncomp_size		6160014	0					
ANR	6160184	Identifier	de		6160014	0					
ANR	6160185	Identifier	uncomp_size		6160014	1					
ANR	6160186	MemberAccess	st . size		6160014	1					
ANR	6160187	Identifier	st		6160014	0					
ANR	6160188	Identifier	size		6160014	1					
ANR	6160189	IfStatement	if ( ( st . valid & ZIP_STAT_COMP_SIZE ) == 0 )		6160014	1					
ANR	6160190	Condition	( st . valid & ZIP_STAT_COMP_SIZE ) == 0	324:5:8336:8371	6160014	0	True				
ANR	6160191	EqualityExpression	( st . valid & ZIP_STAT_COMP_SIZE ) == 0		6160014	0		==			
ANR	6160192	BitAndExpression	st . valid & ZIP_STAT_COMP_SIZE		6160014	0		&			
ANR	6160193	MemberAccess	st . valid		6160014	0					
ANR	6160194	Identifier	st		6160014	0					
ANR	6160195	Identifier	valid		6160014	1					
ANR	6160196	Identifier	ZIP_STAT_COMP_SIZE		6160014	1					
ANR	6160197	PrimaryExpression	0		6160014	1					
ANR	6160198	CompoundStatement		38:43:888:888	6160014	1					
ANR	6160199	IfStatement	if ( ( ( ( de -> comp_method == ZIP_CM_DEFLATE || ZIP_CM_IS_DEFAULT ( de -> comp_method ) ) && st . size > MAX_DEFLATE_SIZE_32 ) || ( de -> comp_method != ZIP_CM_STORE && de -> comp_method != ZIP_CM_DEFLATE && ! ZIP_CM_IS_DEFAULT ( de -> comp_method ) ) ) )		6160014	0					
ANR	6160200	Condition	( ( de -> comp_method == ZIP_CM_DEFLATE || ZIP_CM_IS_DEFAULT ( de -> comp_method ) ) && st . size > MAX_DEFLATE_SIZE_32 ) || ( de -> comp_method != ZIP_CM_STORE && de -> comp_method != ZIP_CM_DEFLATE && ! ZIP_CM_IS_DEFAULT ( de -> comp_method ) )	325:9:8385:8611	6160014	0	True				
ANR	6160201	OrExpression	( ( de -> comp_method == ZIP_CM_DEFLATE || ZIP_CM_IS_DEFAULT ( de -> comp_method ) ) && st . size > MAX_DEFLATE_SIZE_32 ) || ( de -> comp_method != ZIP_CM_STORE && de -> comp_method != ZIP_CM_DEFLATE && ! ZIP_CM_IS_DEFAULT ( de -> comp_method ) )		6160014	0		||			
ANR	6160202	AndExpression	( de -> comp_method == ZIP_CM_DEFLATE || ZIP_CM_IS_DEFAULT ( de -> comp_method ) ) && st . size > MAX_DEFLATE_SIZE_32		6160014	0		&&			
ANR	6160203	OrExpression	de -> comp_method == ZIP_CM_DEFLATE || ZIP_CM_IS_DEFAULT ( de -> comp_method )		6160014	0		||			
ANR	6160204	EqualityExpression	de -> comp_method == ZIP_CM_DEFLATE		6160014	0		==			
ANR	6160205	PtrMemberAccess	de -> comp_method		6160014	0					
ANR	6160206	Identifier	de		6160014	0					
ANR	6160207	Identifier	comp_method		6160014	1					
ANR	6160208	Identifier	ZIP_CM_DEFLATE		6160014	1					
ANR	6160209	CallExpression	ZIP_CM_IS_DEFAULT ( de -> comp_method )		6160014	1					
ANR	6160210	Callee	ZIP_CM_IS_DEFAULT		6160014	0					
ANR	6160211	Identifier	ZIP_CM_IS_DEFAULT		6160014	0					
ANR	6160212	ArgumentList	de -> comp_method		6160014	1					
ANR	6160213	Argument	de -> comp_method		6160014	0					
ANR	6160214	PtrMemberAccess	de -> comp_method		6160014	0					
ANR	6160215	Identifier	de		6160014	0					
ANR	6160216	Identifier	comp_method		6160014	1					
ANR	6160217	RelationalExpression	st . size > MAX_DEFLATE_SIZE_32		6160014	1		>			
ANR	6160218	MemberAccess	st . size		6160014	0					
ANR	6160219	Identifier	st		6160014	0					
ANR	6160220	Identifier	size		6160014	1					
ANR	6160221	Identifier	MAX_DEFLATE_SIZE_32		6160014	1					
ANR	6160222	AndExpression	de -> comp_method != ZIP_CM_STORE && de -> comp_method != ZIP_CM_DEFLATE && ! ZIP_CM_IS_DEFAULT ( de -> comp_method )		6160014	1		&&			
ANR	6160223	EqualityExpression	de -> comp_method != ZIP_CM_STORE		6160014	0		!=			
ANR	6160224	PtrMemberAccess	de -> comp_method		6160014	0					
ANR	6160225	Identifier	de		6160014	0					
ANR	6160226	Identifier	comp_method		6160014	1					
ANR	6160227	Identifier	ZIP_CM_STORE		6160014	1					
ANR	6160228	AndExpression	de -> comp_method != ZIP_CM_DEFLATE && ! ZIP_CM_IS_DEFAULT ( de -> comp_method )		6160014	1		&&			
ANR	6160229	EqualityExpression	de -> comp_method != ZIP_CM_DEFLATE		6160014	0		!=			
ANR	6160230	PtrMemberAccess	de -> comp_method		6160014	0					
ANR	6160231	Identifier	de		6160014	0					
ANR	6160232	Identifier	comp_method		6160014	1					
ANR	6160233	Identifier	ZIP_CM_DEFLATE		6160014	1					
ANR	6160234	UnaryOperationExpression	! ZIP_CM_IS_DEFAULT ( de -> comp_method )		6160014	1					
ANR	6160235	UnaryOperator	!		6160014	0					
ANR	6160236	CallExpression	ZIP_CM_IS_DEFAULT ( de -> comp_method )		6160014	1					
ANR	6160237	Callee	ZIP_CM_IS_DEFAULT		6160014	0					
ANR	6160238	Identifier	ZIP_CM_IS_DEFAULT		6160014	0					
ANR	6160239	ArgumentList	de -> comp_method		6160014	1					
ANR	6160240	Argument	de -> comp_method		6160014	0					
ANR	6160241	PtrMemberAccess	de -> comp_method		6160014	0					
ANR	6160242	Identifier	de		6160014	0					
ANR	6160243	Identifier	comp_method		6160014	1					
ANR	6160244	ExpressionStatement	flags |= ZIP_FL_FORCE_ZIP64	327:2:8616:8643	6160014	1	True				
ANR	6160245	AssignmentExpression	flags |= ZIP_FL_FORCE_ZIP64		6160014	0		|=			
ANR	6160246	Identifier	flags		6160014	0					
ANR	6160247	Identifier	ZIP_FL_FORCE_ZIP64		6160014	1					
ANR	6160248	ElseStatement	else		6160014	0					
ANR	6160249	ExpressionStatement	de -> comp_size = st . comp_size	330:5:8659:8687	6160014	0	True				
ANR	6160250	AssignmentExpression	de -> comp_size = st . comp_size		6160014	0		=			
ANR	6160251	PtrMemberAccess	de -> comp_size		6160014	0					
ANR	6160252	Identifier	de		6160014	0					
ANR	6160253	Identifier	comp_size		6160014	1					
ANR	6160254	MemberAccess	st . comp_size		6160014	1					
ANR	6160255	Identifier	st		6160014	0					
ANR	6160256	Identifier	comp_size		6160014	1					
ANR	6160257	ExpressionStatement	offstart = ftello ( ft )	334:4:8701:8722	6160014	11	True				
ANR	6160258	AssignmentExpression	offstart = ftello ( ft )		6160014	0		=			
ANR	6160259	Identifier	offstart		6160014	0					
ANR	6160260	CallExpression	ftello ( ft )		6160014	1					
ANR	6160261	Callee	ftello		6160014	0					
ANR	6160262	Identifier	ftello		6160014	0					
ANR	6160263	ArgumentList	ft		6160014	1					
ANR	6160264	Argument	ft		6160014	0					
ANR	6160265	Identifier	ft		6160014	0					
ANR	6160266	ExpressionStatement	de -> bitflags &= ~ZIP_GPBF_DATA_DESCRIPTOR	337:4:8814:8855	6160014	12	True				
ANR	6160267	AssignmentExpression	de -> bitflags &= ~ZIP_GPBF_DATA_DESCRIPTOR		6160014	0		&=			
ANR	6160268	PtrMemberAccess	de -> bitflags		6160014	0					
ANR	6160269	Identifier	de		6160014	0					
ANR	6160270	Identifier	bitflags		6160014	1					
ANR	6160271	Identifier	~ZIP_GPBF_DATA_DESCRIPTOR		6160014	1					
ANR	6160272	IfStatement	"if ( ( is_zip64 = _zip_dirent_write ( de , ft , flags , & za -> error ) ) < 0 )"		6160014	13					
ANR	6160273	Condition	"( is_zip64 = _zip_dirent_write ( de , ft , flags , & za -> error ) ) < 0"	338:8:8865:8923	6160014	0	True				
ANR	6160274	RelationalExpression	"( is_zip64 = _zip_dirent_write ( de , ft , flags , & za -> error ) ) < 0"		6160014	0		<			
ANR	6160275	AssignmentExpression	"is_zip64 = _zip_dirent_write ( de , ft , flags , & za -> error )"		6160014	0		=			
ANR	6160276	Identifier	is_zip64		6160014	0					
ANR	6160277	CallExpression	"_zip_dirent_write ( de , ft , flags , & za -> error )"		6160014	1					
ANR	6160278	Callee	_zip_dirent_write		6160014	0					
ANR	6160279	Identifier	_zip_dirent_write		6160014	0					
ANR	6160280	ArgumentList	de		6160014	1					
ANR	6160281	Argument	de		6160014	0					
ANR	6160282	Identifier	de		6160014	0					
ANR	6160283	Argument	ft		6160014	1					
ANR	6160284	Identifier	ft		6160014	0					
ANR	6160285	Argument	flags		6160014	2					
ANR	6160286	Identifier	flags		6160014	0					
ANR	6160287	Argument	& za -> error		6160014	3					
ANR	6160288	UnaryOperationExpression	& za -> error		6160014	0					
ANR	6160289	UnaryOperator	&		6160014	0					
ANR	6160290	PtrMemberAccess	za -> error		6160014	1					
ANR	6160291	Identifier	za		6160014	0					
ANR	6160292	Identifier	error		6160014	1					
ANR	6160293	PrimaryExpression	0		6160014	1					
ANR	6160294	ReturnStatement	return - 1 ;	339:1:8927:8936	6160014	1	True				
ANR	6160295	UnaryOperationExpression	- 1		6160014	0					
ANR	6160296	UnaryOperator	-		6160014	0					
ANR	6160297	PrimaryExpression	1		6160014	1					
ANR	6160298	IfStatement	if ( st . comp_method == ZIP_CM_STORE || ( ZIP_CM_IS_DEFAULT ( de -> comp_method ) && st . comp_method != de -> comp_method ) )		6160014	14					
ANR	6160299	Condition	st . comp_method == ZIP_CM_STORE || ( ZIP_CM_IS_DEFAULT ( de -> comp_method ) && st . comp_method != de -> comp_method )	342:8:8948:9054	6160014	0	True				
ANR	6160300	OrExpression	st . comp_method == ZIP_CM_STORE || ( ZIP_CM_IS_DEFAULT ( de -> comp_method ) && st . comp_method != de -> comp_method )		6160014	0		||			
ANR	6160301	EqualityExpression	st . comp_method == ZIP_CM_STORE		6160014	0		==			
ANR	6160302	MemberAccess	st . comp_method		6160014	0					
ANR	6160303	Identifier	st		6160014	0					
ANR	6160304	Identifier	comp_method		6160014	1					
ANR	6160305	Identifier	ZIP_CM_STORE		6160014	1					
ANR	6160306	AndExpression	ZIP_CM_IS_DEFAULT ( de -> comp_method ) && st . comp_method != de -> comp_method		6160014	1		&&			
ANR	6160307	CallExpression	ZIP_CM_IS_DEFAULT ( de -> comp_method )		6160014	0					
ANR	6160308	Callee	ZIP_CM_IS_DEFAULT		6160014	0					
ANR	6160309	Identifier	ZIP_CM_IS_DEFAULT		6160014	0					
ANR	6160310	ArgumentList	de -> comp_method		6160014	1					
ANR	6160311	Argument	de -> comp_method		6160014	0					
ANR	6160312	PtrMemberAccess	de -> comp_method		6160014	0					
ANR	6160313	Identifier	de		6160014	0					
ANR	6160314	Identifier	comp_method		6160014	1					
ANR	6160315	EqualityExpression	st . comp_method != de -> comp_method		6160014	1		!=			
ANR	6160316	MemberAccess	st . comp_method		6160014	0					
ANR	6160317	Identifier	st		6160014	0					
ANR	6160318	Identifier	comp_method		6160014	1					
ANR	6160319	PtrMemberAccess	de -> comp_method		6160014	1					
ANR	6160320	Identifier	de		6160014	0					
ANR	6160321	Identifier	comp_method		6160014	1					
ANR	6160322	CompoundStatement		58:1:1611:1651	6160014	1					
ANR	6160323	IdentifierDeclStatement	"struct zip_source * s_store , * s_crc ;"	343:1:9060:9094	6160014	0	True				
ANR	6160324	IdentifierDecl	* s_store		6160014	0					
ANR	6160325	IdentifierDeclType	struct zip_source *		6160014	0					
ANR	6160326	Identifier	s_store		6160014	1					
ANR	6160327	IdentifierDecl	* s_crc		6160014	1					
ANR	6160328	IdentifierDeclType	struct zip_source *		6160014	0					
ANR	6160329	Identifier	s_crc		6160014	1					
ANR	6160330	IdentifierDeclStatement	zip_compression_implementation comp_impl ;	344:1:9097:9137	6160014	1	True				
ANR	6160331	IdentifierDecl	comp_impl		6160014	0					
ANR	6160332	IdentifierDeclType	zip_compression_implementation		6160014	0					
ANR	6160333	Identifier	comp_impl		6160014	1					
ANR	6160334	IfStatement	if ( st . comp_method != ZIP_CM_STORE )		6160014	2					
ANR	6160335	Condition	st . comp_method != ZIP_CM_STORE	346:5:9146:9175	6160014	0	True				
ANR	6160336	EqualityExpression	st . comp_method != ZIP_CM_STORE		6160014	0		!=			
ANR	6160337	MemberAccess	st . comp_method		6160014	0					
ANR	6160338	Identifier	st		6160014	0					
ANR	6160339	Identifier	comp_method		6160014	1					
ANR	6160340	Identifier	ZIP_CM_STORE		6160014	1					
ANR	6160341	CompoundStatement		60:37:1692:1692	6160014	1					
ANR	6160342	IfStatement	if ( ( comp_impl = _zip_get_compression_implementation ( st . comp_method ) ) == NULL )		6160014	0					
ANR	6160343	Condition	( comp_impl = _zip_get_compression_implementation ( st . comp_method ) ) == NULL	347:9:9189:9259	6160014	0	True				
ANR	6160344	EqualityExpression	( comp_impl = _zip_get_compression_implementation ( st . comp_method ) ) == NULL		6160014	0		==			
ANR	6160345	AssignmentExpression	comp_impl = _zip_get_compression_implementation ( st . comp_method )		6160014	0		=			
ANR	6160346	Identifier	comp_impl		6160014	0					
ANR	6160347	CallExpression	_zip_get_compression_implementation ( st . comp_method )		6160014	1					
ANR	6160348	Callee	_zip_get_compression_implementation		6160014	0					
ANR	6160349	Identifier	_zip_get_compression_implementation		6160014	0					
ANR	6160350	ArgumentList	st . comp_method		6160014	1					
ANR	6160351	Argument	st . comp_method		6160014	0					
ANR	6160352	MemberAccess	st . comp_method		6160014	0					
ANR	6160353	Identifier	st		6160014	0					
ANR	6160354	Identifier	comp_method		6160014	1					
ANR	6160355	Identifier	NULL		6160014	1					
ANR	6160356	CompoundStatement		61:82:1776:1776	6160014	1					
ANR	6160357	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_COMPNOTSUPP , 0 )"	348:2:9266:9315	6160014	0	True				
ANR	6160358	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_COMPNOTSUPP , 0 )"		6160014	0					
ANR	6160359	Callee	_zip_error_set		6160014	0					
ANR	6160360	Identifier	_zip_error_set		6160014	0					
ANR	6160361	ArgumentList	& za -> error		6160014	1					
ANR	6160362	Argument	& za -> error		6160014	0					
ANR	6160363	UnaryOperationExpression	& za -> error		6160014	0					
ANR	6160364	UnaryOperator	&		6160014	0					
ANR	6160365	PtrMemberAccess	za -> error		6160014	1					
ANR	6160366	Identifier	za		6160014	0					
ANR	6160367	Identifier	error		6160014	1					
ANR	6160368	Argument	ZIP_ER_COMPNOTSUPP		6160014	1					
ANR	6160369	Identifier	ZIP_ER_COMPNOTSUPP		6160014	0					
ANR	6160370	Argument	0		6160014	2					
ANR	6160371	PrimaryExpression	0		6160014	0					
ANR	6160372	ReturnStatement	return - 1 ;	349:2:9319:9328	6160014	1	True				
ANR	6160373	UnaryOperationExpression	- 1		6160014	0					
ANR	6160374	UnaryOperator	-		6160014	0					
ANR	6160375	PrimaryExpression	1		6160014	1					
ANR	6160376	IfStatement	"if ( ( s_store = comp_impl ( za , src , st . comp_method , ZIP_CODEC_DECODE ) ) == NULL )"		6160014	1					
ANR	6160377	Condition	"( s_store = comp_impl ( za , src , st . comp_method , ZIP_CODEC_DECODE ) ) == NULL"	351:9:9346:9415	6160014	0	True				
ANR	6160378	EqualityExpression	"( s_store = comp_impl ( za , src , st . comp_method , ZIP_CODEC_DECODE ) ) == NULL"		6160014	0		==			
ANR	6160379	AssignmentExpression	"s_store = comp_impl ( za , src , st . comp_method , ZIP_CODEC_DECODE )"		6160014	0		=			
ANR	6160380	Identifier	s_store		6160014	0					
ANR	6160381	CallExpression	"comp_impl ( za , src , st . comp_method , ZIP_CODEC_DECODE )"		6160014	1					
ANR	6160382	Callee	comp_impl		6160014	0					
ANR	6160383	Identifier	comp_impl		6160014	0					
ANR	6160384	ArgumentList	za		6160014	1					
ANR	6160385	Argument	za		6160014	0					
ANR	6160386	Identifier	za		6160014	0					
ANR	6160387	Argument	src		6160014	1					
ANR	6160388	Identifier	src		6160014	0					
ANR	6160389	Argument	st . comp_method		6160014	2					
ANR	6160390	MemberAccess	st . comp_method		6160014	0					
ANR	6160391	Identifier	st		6160014	0					
ANR	6160392	Identifier	comp_method		6160014	1					
ANR	6160393	Argument	ZIP_CODEC_DECODE		6160014	3					
ANR	6160394	Identifier	ZIP_CODEC_DECODE		6160014	0					
ANR	6160395	Identifier	NULL		6160014	1					
ANR	6160396	CompoundStatement		65:81:1932:1932	6160014	1					
ANR	6160397	ReturnStatement	return - 1 ;	353:2:9453:9462	6160014	0	True				
ANR	6160398	UnaryOperationExpression	- 1		6160014	0					
ANR	6160399	UnaryOperator	-		6160014	0					
ANR	6160400	PrimaryExpression	1		6160014	1					
ANR	6160401	ElseStatement	else		6160014	0					
ANR	6160402	ExpressionStatement	s_store = src	357:5:9485:9498	6160014	0	True				
ANR	6160403	AssignmentExpression	s_store = src		6160014	0		=			
ANR	6160404	Identifier	s_store		6160014	0					
ANR	6160405	Identifier	src		6160014	1					
ANR	6160406	IfStatement	"if ( ( s_crc = zip_source_crc ( za , s_store , 0 ) ) == NULL )"		6160014	3					
ANR	6160407	Condition	"( s_crc = zip_source_crc ( za , s_store , 0 ) ) == NULL"	359:5:9506:9551	6160014	0	True				
ANR	6160408	EqualityExpression	"( s_crc = zip_source_crc ( za , s_store , 0 ) ) == NULL"		6160014	0		==			
ANR	6160409	AssignmentExpression	"s_crc = zip_source_crc ( za , s_store , 0 )"		6160014	0		=			
ANR	6160410	Identifier	s_crc		6160014	0					
ANR	6160411	CallExpression	"zip_source_crc ( za , s_store , 0 )"		6160014	1					
ANR	6160412	Callee	zip_source_crc		6160014	0					
ANR	6160413	Identifier	zip_source_crc		6160014	0					
ANR	6160414	ArgumentList	za		6160014	1					
ANR	6160415	Argument	za		6160014	0					
ANR	6160416	Identifier	za		6160014	0					
ANR	6160417	Argument	s_store		6160014	1					
ANR	6160418	Identifier	s_store		6160014	0					
ANR	6160419	Argument	0		6160014	2					
ANR	6160420	PrimaryExpression	0		6160014	0					
ANR	6160421	Identifier	NULL		6160014	1					
ANR	6160422	CompoundStatement		73:53:2068:2068	6160014	1					
ANR	6160423	IfStatement	if ( s_store != src )		6160014	0					
ANR	6160424	Condition	s_store != src	360:9:9565:9578	6160014	0	True				
ANR	6160425	EqualityExpression	s_store != src		6160014	0		!=			
ANR	6160426	Identifier	s_store		6160014	0					
ANR	6160427	Identifier	src		6160014	1					
ANR	6160428	ExpressionStatement	zip_source_pop ( s_store )	361:2:9583:9606	6160014	1	True				
ANR	6160429	CallExpression	zip_source_pop ( s_store )		6160014	0					
ANR	6160430	Callee	zip_source_pop		6160014	0					
ANR	6160431	Identifier	zip_source_pop		6160014	0					
ANR	6160432	ArgumentList	s_store		6160014	1					
ANR	6160433	Argument	s_store		6160014	0					
ANR	6160434	Identifier	s_store		6160014	0					
ANR	6160435	ReturnStatement	return - 1 ;	362:5:9613:9622	6160014	1	True				
ANR	6160436	UnaryOperationExpression	- 1		6160014	0					
ANR	6160437	UnaryOperator	-		6160014	0					
ANR	6160438	PrimaryExpression	1		6160014	1					
ANR	6160439	IfStatement	if ( de -> comp_method != ZIP_CM_STORE && ( ( st . valid & ZIP_STAT_SIZE ) == 0 || st . size != 0 ) )		6160014	4					
ANR	6160440	Condition	de -> comp_method != ZIP_CM_STORE && ( ( st . valid & ZIP_STAT_SIZE ) == 0 || st . size != 0 )	366:5:9682:9765	6160014	0	True				
ANR	6160441	AndExpression	de -> comp_method != ZIP_CM_STORE && ( ( st . valid & ZIP_STAT_SIZE ) == 0 || st . size != 0 )		6160014	0		&&			
ANR	6160442	EqualityExpression	de -> comp_method != ZIP_CM_STORE		6160014	0		!=			
ANR	6160443	PtrMemberAccess	de -> comp_method		6160014	0					
ANR	6160444	Identifier	de		6160014	0					
ANR	6160445	Identifier	comp_method		6160014	1					
ANR	6160446	Identifier	ZIP_CM_STORE		6160014	1					
ANR	6160447	OrExpression	( st . valid & ZIP_STAT_SIZE ) == 0 || st . size != 0		6160014	1		||			
ANR	6160448	EqualityExpression	( st . valid & ZIP_STAT_SIZE ) == 0		6160014	0		==			
ANR	6160449	BitAndExpression	st . valid & ZIP_STAT_SIZE		6160014	0		&			
ANR	6160450	MemberAccess	st . valid		6160014	0					
ANR	6160451	Identifier	st		6160014	0					
ANR	6160452	Identifier	valid		6160014	1					
ANR	6160453	Identifier	ZIP_STAT_SIZE		6160014	1					
ANR	6160454	PrimaryExpression	0		6160014	1					
ANR	6160455	EqualityExpression	st . size != 0		6160014	1		!=			
ANR	6160456	MemberAccess	st . size		6160014	0					
ANR	6160457	Identifier	st		6160014	0					
ANR	6160458	Identifier	size		6160014	1					
ANR	6160459	PrimaryExpression	0		6160014	1					
ANR	6160460	CompoundStatement		80:91:2282:2282	6160014	1					
ANR	6160461	IfStatement	if ( ( comp_impl = _zip_get_compression_implementation ( de -> comp_method ) ) == NULL )		6160014	0					
ANR	6160462	Condition	( comp_impl = _zip_get_compression_implementation ( de -> comp_method ) ) == NULL	367:9:9779:9850	6160014	0	True				
ANR	6160463	EqualityExpression	( comp_impl = _zip_get_compression_implementation ( de -> comp_method ) ) == NULL		6160014	0		==			
ANR	6160464	AssignmentExpression	comp_impl = _zip_get_compression_implementation ( de -> comp_method )		6160014	0		=			
ANR	6160465	Identifier	comp_impl		6160014	0					
ANR	6160466	CallExpression	_zip_get_compression_implementation ( de -> comp_method )		6160014	1					
ANR	6160467	Callee	_zip_get_compression_implementation		6160014	0					
ANR	6160468	Identifier	_zip_get_compression_implementation		6160014	0					
ANR	6160469	ArgumentList	de -> comp_method		6160014	1					
ANR	6160470	Argument	de -> comp_method		6160014	0					
ANR	6160471	PtrMemberAccess	de -> comp_method		6160014	0					
ANR	6160472	Identifier	de		6160014	0					
ANR	6160473	Identifier	comp_method		6160014	1					
ANR	6160474	Identifier	NULL		6160014	1					
ANR	6160475	CompoundStatement		81:83:2367:2367	6160014	1					
ANR	6160476	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_COMPNOTSUPP , 0 )"	368:2:9857:9906	6160014	0	True				
ANR	6160477	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_COMPNOTSUPP , 0 )"		6160014	0					
ANR	6160478	Callee	_zip_error_set		6160014	0					
ANR	6160479	Identifier	_zip_error_set		6160014	0					
ANR	6160480	ArgumentList	& za -> error		6160014	1					
ANR	6160481	Argument	& za -> error		6160014	0					
ANR	6160482	UnaryOperationExpression	& za -> error		6160014	0					
ANR	6160483	UnaryOperator	&		6160014	0					
ANR	6160484	PtrMemberAccess	za -> error		6160014	1					
ANR	6160485	Identifier	za		6160014	0					
ANR	6160486	Identifier	error		6160014	1					
ANR	6160487	Argument	ZIP_ER_COMPNOTSUPP		6160014	1					
ANR	6160488	Identifier	ZIP_ER_COMPNOTSUPP		6160014	0					
ANR	6160489	Argument	0		6160014	2					
ANR	6160490	PrimaryExpression	0		6160014	0					
ANR	6160491	ExpressionStatement	zip_source_pop ( s_crc )	369:2:9910:9931	6160014	1	True				
ANR	6160492	CallExpression	zip_source_pop ( s_crc )		6160014	0					
ANR	6160493	Callee	zip_source_pop		6160014	0					
ANR	6160494	Identifier	zip_source_pop		6160014	0					
ANR	6160495	ArgumentList	s_crc		6160014	1					
ANR	6160496	Argument	s_crc		6160014	0					
ANR	6160497	Identifier	s_crc		6160014	0					
ANR	6160498	IfStatement	if ( s_store != src )		6160014	2					
ANR	6160499	Condition	s_store != src	370:6:9939:9952	6160014	0	True				
ANR	6160500	EqualityExpression	s_store != src		6160014	0		!=			
ANR	6160501	Identifier	s_store		6160014	0					
ANR	6160502	Identifier	src		6160014	1					
ANR	6160503	ExpressionStatement	zip_source_pop ( s_store )	371:6:9961:9984	6160014	1	True				
ANR	6160504	CallExpression	zip_source_pop ( s_store )		6160014	0					
ANR	6160505	Callee	zip_source_pop		6160014	0					
ANR	6160506	Identifier	zip_source_pop		6160014	0					
ANR	6160507	ArgumentList	s_store		6160014	1					
ANR	6160508	Argument	s_store		6160014	0					
ANR	6160509	Identifier	s_store		6160014	0					
ANR	6160510	ReturnStatement	return - 1 ;	372:2:9988:9997	6160014	3	True				
ANR	6160511	UnaryOperationExpression	- 1		6160014	0					
ANR	6160512	UnaryOperator	-		6160014	0					
ANR	6160513	PrimaryExpression	1		6160014	1					
ANR	6160514	IfStatement	"if ( ( s2 = comp_impl ( za , s_crc , de -> comp_method , ZIP_CODEC_ENCODE ) ) == NULL )"		6160014	1					
ANR	6160515	Condition	"( s2 = comp_impl ( za , s_crc , de -> comp_method , ZIP_CODEC_ENCODE ) ) == NULL"	374:9:10015:10082	6160014	0	True				
ANR	6160516	EqualityExpression	"( s2 = comp_impl ( za , s_crc , de -> comp_method , ZIP_CODEC_ENCODE ) ) == NULL"		6160014	0		==			
ANR	6160517	AssignmentExpression	"s2 = comp_impl ( za , s_crc , de -> comp_method , ZIP_CODEC_ENCODE )"		6160014	0		=			
ANR	6160518	Identifier	s2		6160014	0					
ANR	6160519	CallExpression	"comp_impl ( za , s_crc , de -> comp_method , ZIP_CODEC_ENCODE )"		6160014	1					
ANR	6160520	Callee	comp_impl		6160014	0					
ANR	6160521	Identifier	comp_impl		6160014	0					
ANR	6160522	ArgumentList	za		6160014	1					
ANR	6160523	Argument	za		6160014	0					
ANR	6160524	Identifier	za		6160014	0					
ANR	6160525	Argument	s_crc		6160014	1					
ANR	6160526	Identifier	s_crc		6160014	0					
ANR	6160527	Argument	de -> comp_method		6160014	2					
ANR	6160528	PtrMemberAccess	de -> comp_method		6160014	0					
ANR	6160529	Identifier	de		6160014	0					
ANR	6160530	Identifier	comp_method		6160014	1					
ANR	6160531	Argument	ZIP_CODEC_ENCODE		6160014	3					
ANR	6160532	Identifier	ZIP_CODEC_ENCODE		6160014	0					
ANR	6160533	Identifier	NULL		6160014	1					
ANR	6160534	CompoundStatement		88:79:2599:2599	6160014	1					
ANR	6160535	ExpressionStatement	zip_source_pop ( s_crc )	375:2:10089:10110	6160014	0	True				
ANR	6160536	CallExpression	zip_source_pop ( s_crc )		6160014	0					
ANR	6160537	Callee	zip_source_pop		6160014	0					
ANR	6160538	Identifier	zip_source_pop		6160014	0					
ANR	6160539	ArgumentList	s_crc		6160014	1					
ANR	6160540	Argument	s_crc		6160014	0					
ANR	6160541	Identifier	s_crc		6160014	0					
ANR	6160542	IfStatement	if ( s_store != src )		6160014	1					
ANR	6160543	Condition	s_store != src	376:6:10118:10131	6160014	0	True				
ANR	6160544	EqualityExpression	s_store != src		6160014	0		!=			
ANR	6160545	Identifier	s_store		6160014	0					
ANR	6160546	Identifier	src		6160014	1					
ANR	6160547	ExpressionStatement	zip_source_pop ( s_store )	377:6:10140:10163	6160014	1	True				
ANR	6160548	CallExpression	zip_source_pop ( s_store )		6160014	0					
ANR	6160549	Callee	zip_source_pop		6160014	0					
ANR	6160550	Identifier	zip_source_pop		6160014	0					
ANR	6160551	ArgumentList	s_store		6160014	1					
ANR	6160552	Argument	s_store		6160014	0					
ANR	6160553	Identifier	s_store		6160014	0					
ANR	6160554	ReturnStatement	return - 1 ;	378:2:10167:10176	6160014	2	True				
ANR	6160555	UnaryOperationExpression	- 1		6160014	0					
ANR	6160556	UnaryOperator	-		6160014	0					
ANR	6160557	PrimaryExpression	1		6160014	1					
ANR	6160558	ElseStatement	else		6160014	0					
ANR	6160559	ExpressionStatement	s2 = s_crc	382:5:10199:10209	6160014	0	True				
ANR	6160560	AssignmentExpression	s2 = s_crc		6160014	0		=			
ANR	6160561	Identifier	s2		6160014	0					
ANR	6160562	Identifier	s_crc		6160014	1					
ANR	6160563	ElseStatement	else		6160014	0					
ANR	6160564	ExpressionStatement	s2 = src	385:1:10227:10235	6160014	0	True				
ANR	6160565	AssignmentExpression	s2 = src		6160014	0		=			
ANR	6160566	Identifier	s2		6160014	0					
ANR	6160567	Identifier	src		6160014	1					
ANR	6160568	ExpressionStatement	offdata = ftello ( ft )	387:4:10242:10262	6160014	15	True				
ANR	6160569	AssignmentExpression	offdata = ftello ( ft )		6160014	0		=			
ANR	6160570	Identifier	offdata		6160014	0					
ANR	6160571	CallExpression	ftello ( ft )		6160014	1					
ANR	6160572	Callee	ftello		6160014	0					
ANR	6160573	Identifier	ftello		6160014	0					
ANR	6160574	ArgumentList	ft		6160014	1					
ANR	6160575	Argument	ft		6160014	0					
ANR	6160576	Identifier	ft		6160014	0					
ANR	6160577	ExpressionStatement	"ret = copy_source ( za , s2 , ft )"	389:4:10270:10299	6160014	16	True				
ANR	6160578	AssignmentExpression	"ret = copy_source ( za , s2 , ft )"		6160014	0		=			
ANR	6160579	Identifier	ret		6160014	0					
ANR	6160580	CallExpression	"copy_source ( za , s2 , ft )"		6160014	1					
ANR	6160581	Callee	copy_source		6160014	0					
ANR	6160582	Identifier	copy_source		6160014	0					
ANR	6160583	ArgumentList	za		6160014	1					
ANR	6160584	Argument	za		6160014	0					
ANR	6160585	Identifier	za		6160014	0					
ANR	6160586	Argument	s2		6160014	1					
ANR	6160587	Identifier	s2		6160014	0					
ANR	6160588	Argument	ft		6160014	2					
ANR	6160589	Identifier	ft		6160014	0					
ANR	6160590	IfStatement	"if ( zip_source_stat ( s2 , & st ) < 0 )"		6160014	17					
ANR	6160591	Condition	"zip_source_stat ( s2 , & st ) < 0"	391:8:10311:10338	6160014	0	True				
ANR	6160592	RelationalExpression	"zip_source_stat ( s2 , & st ) < 0"		6160014	0		<			
ANR	6160593	CallExpression	"zip_source_stat ( s2 , & st )"		6160014	0					
ANR	6160594	Callee	zip_source_stat		6160014	0					
ANR	6160595	Identifier	zip_source_stat		6160014	0					
ANR	6160596	ArgumentList	s2		6160014	1					
ANR	6160597	Argument	s2		6160014	0					
ANR	6160598	Identifier	s2		6160014	0					
ANR	6160599	Argument	& st		6160014	1					
ANR	6160600	UnaryOperationExpression	& st		6160014	0					
ANR	6160601	UnaryOperator	&		6160014	0					
ANR	6160602	Identifier	st		6160014	1					
ANR	6160603	PrimaryExpression	0		6160014	1					
ANR	6160604	ExpressionStatement	ret = - 1	392:1:10342:10350	6160014	1	True				
ANR	6160605	AssignmentExpression	ret = - 1		6160014	0		=			
ANR	6160606	Identifier	ret		6160014	0					
ANR	6160607	UnaryOperationExpression	- 1		6160014	1					
ANR	6160608	UnaryOperator	-		6160014	0					
ANR	6160609	PrimaryExpression	1		6160014	1					
ANR	6160610	WhileStatement	while ( s2 != src )		6160014	18					
ANR	6160611	Condition	s2 != src	394:11:10364:10372	6160014	0	True				
ANR	6160612	EqualityExpression	s2 != src		6160014	0		!=			
ANR	6160613	Identifier	s2		6160014	0					
ANR	6160614	Identifier	src		6160014	1					
ANR	6160615	CompoundStatement		108:22:2889:2889	6160014	1					
ANR	6160616	IfStatement	if ( ( s2 = zip_source_pop ( s2 ) ) == NULL )		6160014	0					
ANR	6160617	Condition	( s2 = zip_source_pop ( s2 ) ) == NULL	395:5:10382:10412	6160014	0	True				
ANR	6160618	EqualityExpression	( s2 = zip_source_pop ( s2 ) ) == NULL		6160014	0		==			
ANR	6160619	AssignmentExpression	s2 = zip_source_pop ( s2 )		6160014	0		=			
ANR	6160620	Identifier	s2		6160014	0					
ANR	6160621	CallExpression	zip_source_pop ( s2 )		6160014	1					
ANR	6160622	Callee	zip_source_pop		6160014	0					
ANR	6160623	Identifier	zip_source_pop		6160014	0					
ANR	6160624	ArgumentList	s2		6160014	1					
ANR	6160625	Argument	s2		6160014	0					
ANR	6160626	Identifier	s2		6160014	0					
ANR	6160627	Identifier	NULL		6160014	1					
ANR	6160628	CompoundStatement		109:38:2929:2929	6160014	1					
ANR	6160629	ExpressionStatement	ret = - 1	397:5:10448:10456	6160014	0	True				
ANR	6160630	AssignmentExpression	ret = - 1		6160014	0		=			
ANR	6160631	Identifier	ret		6160014	0					
ANR	6160632	UnaryOperationExpression	- 1		6160014	1					
ANR	6160633	UnaryOperator	-		6160014	0					
ANR	6160634	PrimaryExpression	1		6160014	1					
ANR	6160635	BreakStatement	break ;	398:5:10463:10468	6160014	1	True				
ANR	6160636	IfStatement	if ( ret < 0 )		6160014	19					
ANR	6160637	Condition	ret < 0	402:8:10488:10494	6160014	0	True				
ANR	6160638	RelationalExpression	ret < 0		6160014	0		<			
ANR	6160639	Identifier	ret		6160014	0					
ANR	6160640	PrimaryExpression	0		6160014	1					
ANR	6160641	ReturnStatement	return - 1 ;	403:1:10498:10507	6160014	1	True				
ANR	6160642	UnaryOperationExpression	- 1		6160014	0					
ANR	6160643	UnaryOperator	-		6160014	0					
ANR	6160644	PrimaryExpression	1		6160014	1					
ANR	6160645	ExpressionStatement	offend = ftello ( ft )	405:4:10514:10533	6160014	20	True				
ANR	6160646	AssignmentExpression	offend = ftello ( ft )		6160014	0		=			
ANR	6160647	Identifier	offend		6160014	0					
ANR	6160648	CallExpression	ftello ( ft )		6160014	1					
ANR	6160649	Callee	ftello		6160014	0					
ANR	6160650	Identifier	ftello		6160014	0					
ANR	6160651	ArgumentList	ft		6160014	1					
ANR	6160652	Argument	ft		6160014	0					
ANR	6160653	Identifier	ft		6160014	0					
ANR	6160654	IfStatement	if ( offend < 0 )		6160014	21					
ANR	6160655	Condition	offend < 0	406:5:10540:10549	6160014	0	True				
ANR	6160656	RelationalExpression	offend < 0		6160014	0		<			
ANR	6160657	Identifier	offend		6160014	0					
ANR	6160658	PrimaryExpression	0		6160014	1					
ANR	6160659	ReturnStatement	return - 1 ;	407:2:10554:10563	6160014	1	True				
ANR	6160660	UnaryOperationExpression	- 1		6160014	0					
ANR	6160661	UnaryOperator	-		6160014	0					
ANR	6160662	PrimaryExpression	1		6160014	1					
ANR	6160663	IfStatement	"if ( fseeko ( ft , offstart , SEEK_SET ) < 0 )"		6160014	22					
ANR	6160664	Condition	"fseeko ( ft , offstart , SEEK_SET ) < 0"	409:8:10574:10607	6160014	0	True				
ANR	6160665	RelationalExpression	"fseeko ( ft , offstart , SEEK_SET ) < 0"		6160014	0		<			
ANR	6160666	CallExpression	"fseeko ( ft , offstart , SEEK_SET )"		6160014	0					
ANR	6160667	Callee	fseeko		6160014	0					
ANR	6160668	Identifier	fseeko		6160014	0					
ANR	6160669	ArgumentList	ft		6160014	1					
ANR	6160670	Argument	ft		6160014	0					
ANR	6160671	Identifier	ft		6160014	0					
ANR	6160672	Argument	offstart		6160014	1					
ANR	6160673	Identifier	offstart		6160014	0					
ANR	6160674	Argument	SEEK_SET		6160014	2					
ANR	6160675	Identifier	SEEK_SET		6160014	0					
ANR	6160676	PrimaryExpression	0		6160014	1					
ANR	6160677	CompoundStatement		123:44:3124:3124	6160014	1					
ANR	6160678	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"	410:1:10613:10659	6160014	0	True				
ANR	6160679	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"		6160014	0					
ANR	6160680	Callee	_zip_error_set		6160014	0					
ANR	6160681	Identifier	_zip_error_set		6160014	0					
ANR	6160682	ArgumentList	& za -> error		6160014	1					
ANR	6160683	Argument	& za -> error		6160014	0					
ANR	6160684	UnaryOperationExpression	& za -> error		6160014	0					
ANR	6160685	UnaryOperator	&		6160014	0					
ANR	6160686	PtrMemberAccess	za -> error		6160014	1					
ANR	6160687	Identifier	za		6160014	0					
ANR	6160688	Identifier	error		6160014	1					
ANR	6160689	Argument	ZIP_ER_SEEK		6160014	1					
ANR	6160690	Identifier	ZIP_ER_SEEK		6160014	0					
ANR	6160691	Argument	errno		6160014	2					
ANR	6160692	Identifier	errno		6160014	0					
ANR	6160693	ReturnStatement	return - 1 ;	411:1:10662:10671	6160014	1	True				
ANR	6160694	UnaryOperationExpression	- 1		6160014	0					
ANR	6160695	UnaryOperator	-		6160014	0					
ANR	6160696	PrimaryExpression	1		6160014	1					
ANR	6160697	IfStatement	if ( ( st . valid & ( ZIP_STAT_COMP_METHOD | ZIP_STAT_CRC | ZIP_STAT_SIZE ) ) != ( ZIP_STAT_COMP_METHOD | ZIP_STAT_CRC | ZIP_STAT_SIZE ) )		6160014	23					
ANR	6160698	Condition	( st . valid & ( ZIP_STAT_COMP_METHOD | ZIP_STAT_CRC | ZIP_STAT_SIZE ) ) != ( ZIP_STAT_COMP_METHOD | ZIP_STAT_CRC | ZIP_STAT_SIZE )	414:8:10688:10802	6160014	0	True				
ANR	6160699	EqualityExpression	( st . valid & ( ZIP_STAT_COMP_METHOD | ZIP_STAT_CRC | ZIP_STAT_SIZE ) ) != ( ZIP_STAT_COMP_METHOD | ZIP_STAT_CRC | ZIP_STAT_SIZE )		6160014	0		!=			
ANR	6160700	BitAndExpression	st . valid & ( ZIP_STAT_COMP_METHOD | ZIP_STAT_CRC | ZIP_STAT_SIZE )		6160014	0		&			
ANR	6160701	MemberAccess	st . valid		6160014	0					
ANR	6160702	Identifier	st		6160014	0					
ANR	6160703	Identifier	valid		6160014	1					
ANR	6160704	InclusiveOrExpression	ZIP_STAT_COMP_METHOD | ZIP_STAT_CRC | ZIP_STAT_SIZE		6160014	1		|			
ANR	6160705	Identifier	ZIP_STAT_COMP_METHOD		6160014	0					
ANR	6160706	InclusiveOrExpression	ZIP_STAT_CRC | ZIP_STAT_SIZE		6160014	1		|			
ANR	6160707	Identifier	ZIP_STAT_CRC		6160014	0					
ANR	6160708	Identifier	ZIP_STAT_SIZE		6160014	1					
ANR	6160709	InclusiveOrExpression	ZIP_STAT_COMP_METHOD | ZIP_STAT_CRC | ZIP_STAT_SIZE		6160014	1		|			
ANR	6160710	Identifier	ZIP_STAT_COMP_METHOD		6160014	0					
ANR	6160711	InclusiveOrExpression	ZIP_STAT_CRC | ZIP_STAT_SIZE		6160014	1		|			
ANR	6160712	Identifier	ZIP_STAT_CRC		6160014	0					
ANR	6160713	Identifier	ZIP_STAT_SIZE		6160014	1					
ANR	6160714	CompoundStatement		128:125:3319:3319	6160014	1					
ANR	6160715	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"	415:1:10808:10854	6160014	0	True				
ANR	6160716	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"		6160014	0					
ANR	6160717	Callee	_zip_error_set		6160014	0					
ANR	6160718	Identifier	_zip_error_set		6160014	0					
ANR	6160719	ArgumentList	& za -> error		6160014	1					
ANR	6160720	Argument	& za -> error		6160014	0					
ANR	6160721	UnaryOperationExpression	& za -> error		6160014	0					
ANR	6160722	UnaryOperator	&		6160014	0					
ANR	6160723	PtrMemberAccess	za -> error		6160014	1					
ANR	6160724	Identifier	za		6160014	0					
ANR	6160725	Identifier	error		6160014	1					
ANR	6160726	Argument	ZIP_ER_INTERNAL		6160014	1					
ANR	6160727	Identifier	ZIP_ER_INTERNAL		6160014	0					
ANR	6160728	Argument	0		6160014	2					
ANR	6160729	PrimaryExpression	0		6160014	0					
ANR	6160730	ReturnStatement	return - 1 ;	416:1:10857:10866	6160014	1	True				
ANR	6160731	UnaryOperationExpression	- 1		6160014	0					
ANR	6160732	UnaryOperator	-		6160014	0					
ANR	6160733	PrimaryExpression	1		6160014	1					
ANR	6160734	IfStatement	if ( st . valid & ZIP_STAT_MTIME )		6160014	24					
ANR	6160735	Condition	st . valid & ZIP_STAT_MTIME	419:8:10883:10907	6160014	0	True				
ANR	6160736	BitAndExpression	st . valid & ZIP_STAT_MTIME		6160014	0		&			
ANR	6160737	MemberAccess	st . valid		6160014	0					
ANR	6160738	Identifier	st		6160014	0					
ANR	6160739	Identifier	valid		6160014	1					
ANR	6160740	Identifier	ZIP_STAT_MTIME		6160014	1					
ANR	6160741	ExpressionStatement	de -> last_mod = st . mtime	420:1:10911:10934	6160014	1	True				
ANR	6160742	AssignmentExpression	de -> last_mod = st . mtime		6160014	0		=			
ANR	6160743	PtrMemberAccess	de -> last_mod		6160014	0					
ANR	6160744	Identifier	de		6160014	0					
ANR	6160745	Identifier	last_mod		6160014	1					
ANR	6160746	MemberAccess	st . mtime		6160014	1					
ANR	6160747	Identifier	st		6160014	0					
ANR	6160748	Identifier	mtime		6160014	1					
ANR	6160749	ElseStatement	else		6160014	0					
ANR	6160750	ExpressionStatement	time ( & de -> last_mod )	422:1:10946:10965	6160014	0	True				
ANR	6160751	CallExpression	time ( & de -> last_mod )		6160014	0					
ANR	6160752	Callee	time		6160014	0					
ANR	6160753	Identifier	time		6160014	0					
ANR	6160754	ArgumentList	& de -> last_mod		6160014	1					
ANR	6160755	Argument	& de -> last_mod		6160014	0					
ANR	6160756	UnaryOperationExpression	& de -> last_mod		6160014	0					
ANR	6160757	UnaryOperator	&		6160014	0					
ANR	6160758	PtrMemberAccess	de -> last_mod		6160014	1					
ANR	6160759	Identifier	de		6160014	0					
ANR	6160760	Identifier	last_mod		6160014	1					
ANR	6160761	ExpressionStatement	de -> comp_method = st . comp_method	423:4:10971:11003	6160014	25	True				
ANR	6160762	AssignmentExpression	de -> comp_method = st . comp_method		6160014	0		=			
ANR	6160763	PtrMemberAccess	de -> comp_method		6160014	0					
ANR	6160764	Identifier	de		6160014	0					
ANR	6160765	Identifier	comp_method		6160014	1					
ANR	6160766	MemberAccess	st . comp_method		6160014	1					
ANR	6160767	Identifier	st		6160014	0					
ANR	6160768	Identifier	comp_method		6160014	1					
ANR	6160769	ExpressionStatement	de -> crc = st . crc	424:4:11009:11025	6160014	26	True				
ANR	6160770	AssignmentExpression	de -> crc = st . crc		6160014	0		=			
ANR	6160771	PtrMemberAccess	de -> crc		6160014	0					
ANR	6160772	Identifier	de		6160014	0					
ANR	6160773	Identifier	crc		6160014	1					
ANR	6160774	MemberAccess	st . crc		6160014	1					
ANR	6160775	Identifier	st		6160014	0					
ANR	6160776	Identifier	crc		6160014	1					
ANR	6160777	ExpressionStatement	de -> uncomp_size = st . size	425:4:11031:11056	6160014	27	True				
ANR	6160778	AssignmentExpression	de -> uncomp_size = st . size		6160014	0		=			
ANR	6160779	PtrMemberAccess	de -> uncomp_size		6160014	0					
ANR	6160780	Identifier	de		6160014	0					
ANR	6160781	Identifier	uncomp_size		6160014	1					
ANR	6160782	MemberAccess	st . size		6160014	1					
ANR	6160783	Identifier	st		6160014	0					
ANR	6160784	Identifier	size		6160014	1					
ANR	6160785	ExpressionStatement	de -> comp_size = ( zip_uint64_t ) ( offend - offdata )	426:4:11062:11110	6160014	28	True				
ANR	6160786	AssignmentExpression	de -> comp_size = ( zip_uint64_t ) ( offend - offdata )		6160014	0		=			
ANR	6160787	PtrMemberAccess	de -> comp_size		6160014	0					
ANR	6160788	Identifier	de		6160014	0					
ANR	6160789	Identifier	comp_size		6160014	1					
ANR	6160790	CastExpression	( zip_uint64_t ) ( offend - offdata )		6160014	1					
ANR	6160791	CastTarget	zip_uint64_t		6160014	0					
ANR	6160792	AdditiveExpression	offend - offdata		6160014	1		-			
ANR	6160793	Identifier	offend		6160014	0					
ANR	6160794	Identifier	offdata		6160014	1					
ANR	6160795	IfStatement	"if ( zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) )"		6160014	29					
ANR	6160796	Condition	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"	428:8:11121:11164	6160014	0	True				
ANR	6160797	CallExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"		6160014	0					
ANR	6160798	Callee	zip_get_archive_flag		6160014	0					
ANR	6160799	Identifier	zip_get_archive_flag		6160014	0					
ANR	6160800	ArgumentList	za		6160014	1					
ANR	6160801	Argument	za		6160014	0					
ANR	6160802	Identifier	za		6160014	0					
ANR	6160803	Argument	ZIP_AFL_TORRENT		6160014	1					
ANR	6160804	Identifier	ZIP_AFL_TORRENT		6160014	0					
ANR	6160805	Argument	0		6160014	2					
ANR	6160806	PrimaryExpression	0		6160014	0					
ANR	6160807	ExpressionStatement	_zip_dirent_torrent_normalize ( de )	429:1:11168:11201	6160014	1	True				
ANR	6160808	CallExpression	_zip_dirent_torrent_normalize ( de )		6160014	0					
ANR	6160809	Callee	_zip_dirent_torrent_normalize		6160014	0					
ANR	6160810	Identifier	_zip_dirent_torrent_normalize		6160014	0					
ANR	6160811	ArgumentList	de		6160014	1					
ANR	6160812	Argument	de		6160014	0					
ANR	6160813	Identifier	de		6160014	0					
ANR	6160814	IfStatement	"if ( ( ret = _zip_dirent_write ( de , ft , flags , & za -> error ) ) < 0 )"		6160014	30					
ANR	6160815	Condition	"( ret = _zip_dirent_write ( de , ft , flags , & za -> error ) ) < 0"	431:8:11212:11265	6160014	0	True				
ANR	6160816	RelationalExpression	"( ret = _zip_dirent_write ( de , ft , flags , & za -> error ) ) < 0"		6160014	0		<			
ANR	6160817	AssignmentExpression	"ret = _zip_dirent_write ( de , ft , flags , & za -> error )"		6160014	0		=			
ANR	6160818	Identifier	ret		6160014	0					
ANR	6160819	CallExpression	"_zip_dirent_write ( de , ft , flags , & za -> error )"		6160014	1					
ANR	6160820	Callee	_zip_dirent_write		6160014	0					
ANR	6160821	Identifier	_zip_dirent_write		6160014	0					
ANR	6160822	ArgumentList	de		6160014	1					
ANR	6160823	Argument	de		6160014	0					
ANR	6160824	Identifier	de		6160014	0					
ANR	6160825	Argument	ft		6160014	1					
ANR	6160826	Identifier	ft		6160014	0					
ANR	6160827	Argument	flags		6160014	2					
ANR	6160828	Identifier	flags		6160014	0					
ANR	6160829	Argument	& za -> error		6160014	3					
ANR	6160830	UnaryOperationExpression	& za -> error		6160014	0					
ANR	6160831	UnaryOperator	&		6160014	0					
ANR	6160832	PtrMemberAccess	za -> error		6160014	1					
ANR	6160833	Identifier	za		6160014	0					
ANR	6160834	Identifier	error		6160014	1					
ANR	6160835	PrimaryExpression	0		6160014	1					
ANR	6160836	ReturnStatement	return - 1 ;	432:1:11269:11278	6160014	1	True				
ANR	6160837	UnaryOperationExpression	- 1		6160014	0					
ANR	6160838	UnaryOperator	-		6160014	0					
ANR	6160839	PrimaryExpression	1		6160014	1					
ANR	6160840	IfStatement	if ( is_zip64 != ret )		6160014	31					
ANR	6160841	Condition	is_zip64 != ret	434:8:11290:11304	6160014	0	True				
ANR	6160842	EqualityExpression	is_zip64 != ret		6160014	0		!=			
ANR	6160843	Identifier	is_zip64		6160014	0					
ANR	6160844	Identifier	ret		6160014	1					
ANR	6160845	CompoundStatement		148:25:3821:3821	6160014	1					
ANR	6160846	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"	436:1:11425:11471	6160014	0	True				
ANR	6160847	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"		6160014	0					
ANR	6160848	Callee	_zip_error_set		6160014	0					
ANR	6160849	Identifier	_zip_error_set		6160014	0					
ANR	6160850	ArgumentList	& za -> error		6160014	1					
ANR	6160851	Argument	& za -> error		6160014	0					
ANR	6160852	UnaryOperationExpression	& za -> error		6160014	0					
ANR	6160853	UnaryOperator	&		6160014	0					
ANR	6160854	PtrMemberAccess	za -> error		6160014	1					
ANR	6160855	Identifier	za		6160014	0					
ANR	6160856	Identifier	error		6160014	1					
ANR	6160857	Argument	ZIP_ER_INTERNAL		6160014	1					
ANR	6160858	Identifier	ZIP_ER_INTERNAL		6160014	0					
ANR	6160859	Argument	0		6160014	2					
ANR	6160860	PrimaryExpression	0		6160014	0					
ANR	6160861	ReturnStatement	return - 1 ;	437:1:11474:11483	6160014	1	True				
ANR	6160862	UnaryOperationExpression	- 1		6160014	0					
ANR	6160863	UnaryOperator	-		6160014	0					
ANR	6160864	PrimaryExpression	1		6160014	1					
ANR	6160865	IfStatement	"if ( fseeko ( ft , offend , SEEK_SET ) < 0 )"		6160014	32					
ANR	6160866	Condition	"fseeko ( ft , offend , SEEK_SET ) < 0"	441:8:11504:11535	6160014	0	True				
ANR	6160867	RelationalExpression	"fseeko ( ft , offend , SEEK_SET ) < 0"		6160014	0		<			
ANR	6160868	CallExpression	"fseeko ( ft , offend , SEEK_SET )"		6160014	0					
ANR	6160869	Callee	fseeko		6160014	0					
ANR	6160870	Identifier	fseeko		6160014	0					
ANR	6160871	ArgumentList	ft		6160014	1					
ANR	6160872	Argument	ft		6160014	0					
ANR	6160873	Identifier	ft		6160014	0					
ANR	6160874	Argument	offend		6160014	1					
ANR	6160875	Identifier	offend		6160014	0					
ANR	6160876	Argument	SEEK_SET		6160014	2					
ANR	6160877	Identifier	SEEK_SET		6160014	0					
ANR	6160878	PrimaryExpression	0		6160014	1					
ANR	6160879	CompoundStatement		155:42:4052:4052	6160014	1					
ANR	6160880	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"	442:1:11541:11587	6160014	0	True				
ANR	6160881	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"		6160014	0					
ANR	6160882	Callee	_zip_error_set		6160014	0					
ANR	6160883	Identifier	_zip_error_set		6160014	0					
ANR	6160884	ArgumentList	& za -> error		6160014	1					
ANR	6160885	Argument	& za -> error		6160014	0					
ANR	6160886	UnaryOperationExpression	& za -> error		6160014	0					
ANR	6160887	UnaryOperator	&		6160014	0					
ANR	6160888	PtrMemberAccess	za -> error		6160014	1					
ANR	6160889	Identifier	za		6160014	0					
ANR	6160890	Identifier	error		6160014	1					
ANR	6160891	Argument	ZIP_ER_SEEK		6160014	1					
ANR	6160892	Identifier	ZIP_ER_SEEK		6160014	0					
ANR	6160893	Argument	errno		6160014	2					
ANR	6160894	Identifier	errno		6160014	0					
ANR	6160895	ReturnStatement	return - 1 ;	443:1:11590:11599	6160014	1	True				
ANR	6160896	UnaryOperationExpression	- 1		6160014	0					
ANR	6160897	UnaryOperator	-		6160014	0					
ANR	6160898	PrimaryExpression	1		6160014	1					
ANR	6160899	ReturnStatement	return 0 ;	446:4:11612:11620	6160014	33	True				
ANR	6160900	PrimaryExpression	0		6160014	0					
ANR	6160901	ReturnType	static int		6160014	1					
ANR	6160902	Identifier	add_data		6160014	2					
ANR	6160903	ParameterList	"struct zip * za , struct zip_source * src , struct zip_dirent * de , FILE * ft"		6160014	3					
ANR	6160904	Parameter	struct zip * za	286:9:7412:7425	6160014	0	True				
ANR	6160905	ParameterType	struct zip *		6160014	0					
ANR	6160906	Identifier	za		6160014	1					
ANR	6160907	Parameter	struct zip_source * src	286:25:7428:7449	6160014	1	True				
ANR	6160908	ParameterType	struct zip_source *		6160014	0					
ANR	6160909	Identifier	src		6160014	1					
ANR	6160910	Parameter	struct zip_dirent * de	286:49:7452:7472	6160014	2	True				
ANR	6160911	ParameterType	struct zip_dirent *		6160014	0					
ANR	6160912	Identifier	de		6160014	1					
ANR	6160913	Parameter	FILE * ft	286:72:7475:7482	6160014	3	True				
ANR	6160914	ParameterType	FILE *		6160014	0					
ANR	6160915	Identifier	ft		6160014	1					
ANR	6160916	CFGEntryNode	ENTRY		6160014		True				
ANR	6160917	CFGExitNode	EXIT		6160014		True				
ANR	6160918	Symbol	ZIP_STAT_CRC		6160014						
ANR	6160919	Symbol	de		6160014						
ANR	6160920	Symbol	& za -> error		6160014						
ANR	6160921	Symbol	s_store		6160014						
ANR	6160922	Symbol	is_zip64		6160014						
ANR	6160923	Symbol	st . valid		6160014						
ANR	6160924	Symbol	s_crc		6160014						
ANR	6160925	Symbol	ZIP_ER_COMPNOTSUPP		6160014						
ANR	6160926	Symbol	& st		6160014						
ANR	6160927	Symbol	copy_source		6160014						
ANR	6160928	Symbol	ZIP_FL_FORCE_ZIP64		6160014						
ANR	6160929	Symbol	ZIP_CM_IS_DEFAULT		6160014						
ANR	6160930	Symbol	ZIP_STAT_COMP_SIZE		6160014						
ANR	6160931	Symbol	ftello		6160014						
ANR	6160932	Symbol	s2		6160014						
ANR	6160933	Symbol	ret		6160014						
ANR	6160934	Symbol	errno		6160014						
ANR	6160935	Symbol	NULL		6160014						
ANR	6160936	Symbol	offstart		6160014						
ANR	6160937	Symbol	* de		6160014						
ANR	6160938	Symbol	ZIP_ER_INTERNAL		6160014						
ANR	6160939	Symbol	za		6160014						
ANR	6160940	Symbol	ZIP_CODEC_ENCODE		6160014						
ANR	6160941	Symbol	zip_get_archive_flag		6160014						
ANR	6160942	Symbol	st . comp_size		6160014						
ANR	6160943	Symbol	ZIP_ER_SEEK		6160014						
ANR	6160944	Symbol	ZIP_CM_STORE		6160014						
ANR	6160945	Symbol	st . comp_method		6160014						
ANR	6160946	Symbol	ZIP_EF_LOCAL		6160014						
ANR	6160947	Symbol	& de -> last_mod		6160014						
ANR	6160948	Symbol	offdata		6160014						
ANR	6160949	Symbol	offend		6160014						
ANR	6160950	Symbol	zip_source_crc		6160014						
ANR	6160951	Symbol	fseeko		6160014						
ANR	6160952	Symbol	ZIP_STAT_COMP_METHOD		6160014						
ANR	6160953	Symbol	de -> comp_method		6160014						
ANR	6160954	Symbol	MAX_DEFLATE_SIZE_32		6160014						
ANR	6160955	Symbol	zip_source_pop		6160014						
ANR	6160956	Symbol	flags		6160014						
ANR	6160957	Symbol	de -> uncomp_size		6160014						
ANR	6160958	Symbol	ZIP_CM_DEFLATE		6160014						
ANR	6160959	Symbol	ft		6160014						
ANR	6160960	Symbol	st . crc		6160014						
ANR	6160961	Symbol	de -> last_mod		6160014						
ANR	6160962	Symbol	de -> comp_size		6160014						
ANR	6160963	Symbol	st . size		6160014						
ANR	6160964	Symbol	_zip_dirent_write		6160014						
ANR	6160965	Symbol	ZIP_STAT_MTIME		6160014						
ANR	6160966	Symbol	st . mtime		6160014						
ANR	6160967	Symbol	SEEK_SET		6160014						
ANR	6160968	Symbol	st		6160014						
ANR	6160969	Symbol	zip_source_stat		6160014						
ANR	6160970	Symbol	src		6160014						
ANR	6160971	Symbol	~ZIP_STAT_COMP_SIZE		6160014						
ANR	6160972	Symbol	_zip_get_compression_implementation		6160014						
ANR	6160973	Symbol	ZIP_AFL_TORRENT		6160014						
ANR	6160974	Symbol	ZIP_CODEC_DECODE		6160014						
ANR	6160975	Symbol	de -> crc		6160014						
ANR	6160976	Symbol	~ZIP_GPBF_DATA_DESCRIPTOR		6160014						
ANR	6160977	Symbol	comp_impl		6160014						
ANR	6160978	Symbol	de -> bitflags		6160014						
ANR	6160979	Symbol	ZIP_STAT_SIZE		6160014						
ANR	6160980	Function	copy_data	451:0:11628:12292							
ANR	6160981	FunctionDef	"copy_data (FILE * fs , zip_uint64_t len , FILE * ft , struct zip_error * error)"		6160980	0					
ANR	6160982	CompoundStatement		453:0:11712:12292	6160980	0					
ANR	6160983	IdentifierDeclStatement	char buf [ BUFSIZE ] ;	454:4:11718:11735	6160980	0	True				
ANR	6160984	IdentifierDecl	buf [ BUFSIZE ]		6160980	0					
ANR	6160985	IdentifierDeclType	char [ BUFSIZE ]		6160980	0					
ANR	6160986	Identifier	buf		6160980	1					
ANR	6160987	Identifier	BUFSIZE		6160980	2					
ANR	6160988	IdentifierDeclStatement	"size_t n , nn ;"	455:4:11741:11753	6160980	1	True				
ANR	6160989	IdentifierDecl	n		6160980	0					
ANR	6160990	IdentifierDeclType	size_t		6160980	0					
ANR	6160991	Identifier	n		6160980	1					
ANR	6160992	IdentifierDecl	nn		6160980	1					
ANR	6160993	IdentifierDeclType	size_t		6160980	0					
ANR	6160994	Identifier	nn		6160980	1					
ANR	6160995	IfStatement	if ( len == 0 )		6160980	2					
ANR	6160996	Condition	len == 0	457:8:11764:11771	6160980	0	True				
ANR	6160997	EqualityExpression	len == 0		6160980	0		==			
ANR	6160998	Identifier	len		6160980	0					
ANR	6160999	PrimaryExpression	0		6160980	1					
ANR	6161000	ReturnStatement	return 0 ;	458:1:11775:11783	6160980	1	True				
ANR	6161001	PrimaryExpression	0		6160980	0					
ANR	6161002	WhileStatement	while ( len > 0 )		6160980	3					
ANR	6161003	Condition	len > 0	460:11:11797:11803	6160980	0	True				
ANR	6161004	RelationalExpression	len > 0		6160980	0		>			
ANR	6161005	Identifier	len		6160980	0					
ANR	6161006	PrimaryExpression	0		6160980	1					
ANR	6161007	CompoundStatement		8:20:93:93	6160980	1					
ANR	6161008	ExpressionStatement	nn = len > sizeof ( buf ) ? sizeof ( buf ) : len	461:1:11809:11851	6160980	0	True				
ANR	6161009	AssignmentExpression	nn = len > sizeof ( buf ) ? sizeof ( buf ) : len		6160980	0		=			
ANR	6161010	Identifier	nn		6160980	0					
ANR	6161011	ConditionalExpression	len > sizeof ( buf ) ? sizeof ( buf ) : len		6160980	1					
ANR	6161012	Condition	len > sizeof ( buf )		6160980	0					
ANR	6161013	RelationalExpression	len > sizeof ( buf )		6160980	0		>			
ANR	6161014	Identifier	len		6160980	0					
ANR	6161015	SizeofExpression	sizeof ( buf )		6160980	1					
ANR	6161016	Sizeof	sizeof		6160980	0					
ANR	6161017	SizeofOperand	buf		6160980	1					
ANR	6161018	SizeofExpression	sizeof ( buf )		6160980	1					
ANR	6161019	Sizeof	sizeof		6160980	0					
ANR	6161020	SizeofOperand	buf		6160980	1					
ANR	6161021	Identifier	len		6160980	2					
ANR	6161022	IfStatement	"if ( ( n = fread ( buf , 1 , nn , fs ) ) == 0 )"		6160980	1					
ANR	6161023	Condition	"( n = fread ( buf , 1 , nn , fs ) ) == 0"	462:5:11858:11887	6160980	0	True				
ANR	6161024	EqualityExpression	"( n = fread ( buf , 1 , nn , fs ) ) == 0"		6160980	0		==			
ANR	6161025	AssignmentExpression	"n = fread ( buf , 1 , nn , fs )"		6160980	0		=			
ANR	6161026	Identifier	n		6160980	0					
ANR	6161027	CallExpression	"fread ( buf , 1 , nn , fs )"		6160980	1					
ANR	6161028	Callee	fread		6160980	0					
ANR	6161029	Identifier	fread		6160980	0					
ANR	6161030	ArgumentList	buf		6160980	1					
ANR	6161031	Argument	buf		6160980	0					
ANR	6161032	Identifier	buf		6160980	0					
ANR	6161033	Argument	1		6160980	1					
ANR	6161034	PrimaryExpression	1		6160980	0					
ANR	6161035	Argument	nn		6160980	2					
ANR	6161036	Identifier	nn		6160980	0					
ANR	6161037	Argument	fs		6160980	3					
ANR	6161038	Identifier	fs		6160980	0					
ANR	6161039	PrimaryExpression	0		6160980	1					
ANR	6161040	CompoundStatement		10:37:177:177	6160980	1					
ANR	6161041	IfStatement	if ( ferror ( fs ) )		6160980	0					
ANR	6161042	Condition	ferror ( fs )	463:16:11908:11917	6160980	0	True				
ANR	6161043	CallExpression	ferror ( fs )		6160980	0					
ANR	6161044	Callee	ferror		6160980	0					
ANR	6161045	Identifier	ferror		6160980	0					
ANR	6161046	ArgumentList	fs		6160980	1					
ANR	6161047	Argument	fs		6160980	0					
ANR	6161048	Identifier	fs		6160980	0					
ANR	6161049	CompoundStatement		11:28:207:207	6160980	1					
ANR	6161050	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_READ , errno )"	464:16:11938:11979	6160980	0	True				
ANR	6161051	CallExpression	"_zip_error_set ( error , ZIP_ER_READ , errno )"		6160980	0					
ANR	6161052	Callee	_zip_error_set		6160980	0					
ANR	6161053	Identifier	_zip_error_set		6160980	0					
ANR	6161054	ArgumentList	error		6160980	1					
ANR	6161055	Argument	error		6160980	0					
ANR	6161056	Identifier	error		6160980	0					
ANR	6161057	Argument	ZIP_ER_READ		6160980	1					
ANR	6161058	Identifier	ZIP_ER_READ		6160980	0					
ANR	6161059	Argument	errno		6160980	2					
ANR	6161060	Identifier	errno		6160980	0					
ANR	6161061	ReturnStatement	return - 1 ;	465:16:11997:12006	6160980	1	True				
ANR	6161062	UnaryOperationExpression	- 1		6160980	0					
ANR	6161063	UnaryOperator	-		6160980	0					
ANR	6161064	PrimaryExpression	1		6160980	1					
ANR	6161065	ElseStatement	else		6160980	0					
ANR	6161066	CompoundStatement		15:17:326:326	6160980	0					
ANR	6161067	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_EOF , 0 )"	468:16:12057:12093	6160980	0	True				
ANR	6161068	CallExpression	"_zip_error_set ( error , ZIP_ER_EOF , 0 )"		6160980	0					
ANR	6161069	Callee	_zip_error_set		6160980	0					
ANR	6161070	Identifier	_zip_error_set		6160980	0					
ANR	6161071	ArgumentList	error		6160980	1					
ANR	6161072	Argument	error		6160980	0					
ANR	6161073	Identifier	error		6160980	0					
ANR	6161074	Argument	ZIP_ER_EOF		6160980	1					
ANR	6161075	Identifier	ZIP_ER_EOF		6160980	0					
ANR	6161076	Argument	0		6160980	2					
ANR	6161077	PrimaryExpression	0		6160980	0					
ANR	6161078	ReturnStatement	return - 1 ;	469:16:12111:12120	6160980	1	True				
ANR	6161079	UnaryOperationExpression	- 1		6160980	0					
ANR	6161080	UnaryOperator	-		6160980	0					
ANR	6161081	PrimaryExpression	1		6160980	1					
ANR	6161082	IfStatement	"if ( fwrite ( buf , 1 , n , ft ) != ( size_t ) n )"		6160980	2					
ANR	6161083	Condition	"fwrite ( buf , 1 , n , ft ) != ( size_t ) n"	473:5:12152:12185	6160980	0	True				
ANR	6161084	EqualityExpression	"fwrite ( buf , 1 , n , ft ) != ( size_t ) n"		6160980	0		!=			
ANR	6161085	CallExpression	"fwrite ( buf , 1 , n , ft )"		6160980	0					
ANR	6161086	Callee	fwrite		6160980	0					
ANR	6161087	Identifier	fwrite		6160980	0					
ANR	6161088	ArgumentList	buf		6160980	1					
ANR	6161089	Argument	buf		6160980	0					
ANR	6161090	Identifier	buf		6160980	0					
ANR	6161091	Argument	1		6160980	1					
ANR	6161092	PrimaryExpression	1		6160980	0					
ANR	6161093	Argument	n		6160980	2					
ANR	6161094	Identifier	n		6160980	0					
ANR	6161095	Argument	ft		6160980	3					
ANR	6161096	Identifier	ft		6160980	0					
ANR	6161097	CastExpression	( size_t ) n		6160980	1					
ANR	6161098	CastTarget	size_t		6160980	0					
ANR	6161099	Identifier	n		6160980	1					
ANR	6161100	CompoundStatement		21:41:475:475	6160980	1					
ANR	6161101	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_WRITE , errno )"	474:5:12195:12237	6160980	0	True				
ANR	6161102	CallExpression	"_zip_error_set ( error , ZIP_ER_WRITE , errno )"		6160980	0					
ANR	6161103	Callee	_zip_error_set		6160980	0					
ANR	6161104	Identifier	_zip_error_set		6160980	0					
ANR	6161105	ArgumentList	error		6160980	1					
ANR	6161106	Argument	error		6160980	0					
ANR	6161107	Identifier	error		6160980	0					
ANR	6161108	Argument	ZIP_ER_WRITE		6160980	1					
ANR	6161109	Identifier	ZIP_ER_WRITE		6160980	0					
ANR	6161110	Argument	errno		6160980	2					
ANR	6161111	Identifier	errno		6160980	0					
ANR	6161112	ReturnStatement	return - 1 ;	475:5:12244:12253	6160980	1	True				
ANR	6161113	UnaryOperationExpression	- 1		6160980	0					
ANR	6161114	UnaryOperator	-		6160980	0					
ANR	6161115	PrimaryExpression	1		6160980	1					
ANR	6161116	ExpressionStatement	len -= n	478:1:12261:12269	6160980	3	True				
ANR	6161117	AssignmentExpression	len -= n		6160980	0		-=			
ANR	6161118	Identifier	len		6160980	0					
ANR	6161119	Identifier	n		6160980	1					
ANR	6161120	ReturnStatement	return 0 ;	481:4:12282:12290	6160980	4	True				
ANR	6161121	PrimaryExpression	0		6160980	0					
ANR	6161122	ReturnType	static int		6160980	1					
ANR	6161123	Identifier	copy_data		6160980	2					
ANR	6161124	ParameterList	"FILE * fs , zip_uint64_t len , FILE * ft , struct zip_error * error"		6160980	3					
ANR	6161125	Parameter	FILE * fs	452:10:11649:11656	6160980	0	True				
ANR	6161126	ParameterType	FILE *		6160980	0					
ANR	6161127	Identifier	fs		6160980	1					
ANR	6161128	Parameter	zip_uint64_t len	452:20:11659:11674	6160980	1	True				
ANR	6161129	ParameterType	zip_uint64_t		6160980	0					
ANR	6161130	Identifier	len		6160980	1					
ANR	6161131	Parameter	FILE * ft	452:38:11677:11684	6160980	2	True				
ANR	6161132	ParameterType	FILE *		6160980	0					
ANR	6161133	Identifier	ft		6160980	1					
ANR	6161134	Parameter	struct zip_error * error	452:48:11687:11709	6160980	3	True				
ANR	6161135	ParameterType	struct zip_error *		6160980	0					
ANR	6161136	Identifier	error		6160980	1					
ANR	6161137	CFGEntryNode	ENTRY		6160980		True				
ANR	6161138	CFGExitNode	EXIT		6160980		True				
ANR	6161139	Symbol	nn		6160980						
ANR	6161140	Symbol	errno		6160980						
ANR	6161141	Symbol	fwrite		6160980						
ANR	6161142	Symbol	ZIP_ER_WRITE		6160980						
ANR	6161143	Symbol	error		6160980						
ANR	6161144	Symbol	ZIP_ER_READ		6160980						
ANR	6161145	Symbol	fs		6160980						
ANR	6161146	Symbol	ft		6160980						
ANR	6161147	Symbol	n		6160980						
ANR	6161148	Symbol	fread		6160980						
ANR	6161149	Symbol	ferror		6160980						
ANR	6161150	Symbol	buf		6160980						
ANR	6161151	Symbol	len		6160980						
ANR	6161152	Symbol	ZIP_ER_EOF		6160980						
ANR	6161153	Function	copy_source	486:0:12298:12891							
ANR	6161154	FunctionDef	"copy_source (struct zip * za , struct zip_source * src , FILE * ft)"		6161153	0					
ANR	6161155	CompoundStatement		488:0:12371:12891	6161153	0					
ANR	6161156	IdentifierDeclStatement	char buf [ BUFSIZE ] ;	489:4:12377:12394	6161153	0	True				
ANR	6161157	IdentifierDecl	buf [ BUFSIZE ]		6161153	0					
ANR	6161158	IdentifierDeclType	char [ BUFSIZE ]		6161153	0					
ANR	6161159	Identifier	buf		6161153	1					
ANR	6161160	Identifier	BUFSIZE		6161153	2					
ANR	6161161	IdentifierDeclStatement	zip_int64_t n ;	490:4:12400:12413	6161153	1	True				
ANR	6161162	IdentifierDecl	n		6161153	0					
ANR	6161163	IdentifierDeclType	zip_int64_t		6161153	0					
ANR	6161164	Identifier	n		6161153	1					
ANR	6161165	IdentifierDeclStatement	int ret ;	491:4:12419:12426	6161153	2	True				
ANR	6161166	IdentifierDecl	ret		6161153	0					
ANR	6161167	IdentifierDeclType	int		6161153	0					
ANR	6161168	Identifier	ret		6161153	1					
ANR	6161169	IfStatement	if ( zip_source_open ( src ) < 0 )		6161153	3					
ANR	6161170	Condition	zip_source_open ( src ) < 0	493:8:12437:12460	6161153	0	True				
ANR	6161171	RelationalExpression	zip_source_open ( src ) < 0		6161153	0		<			
ANR	6161172	CallExpression	zip_source_open ( src )		6161153	0					
ANR	6161173	Callee	zip_source_open		6161153	0					
ANR	6161174	Identifier	zip_source_open		6161153	0					
ANR	6161175	ArgumentList	src		6161153	1					
ANR	6161176	Argument	src		6161153	0					
ANR	6161177	Identifier	src		6161153	0					
ANR	6161178	PrimaryExpression	0		6161153	1					
ANR	6161179	CompoundStatement		6:34:91:91	6161153	1					
ANR	6161180	ExpressionStatement	"_zip_error_set_from_source ( & za -> error , src )"	494:1:12466:12509	6161153	0	True				
ANR	6161181	CallExpression	"_zip_error_set_from_source ( & za -> error , src )"		6161153	0					
ANR	6161182	Callee	_zip_error_set_from_source		6161153	0					
ANR	6161183	Identifier	_zip_error_set_from_source		6161153	0					
ANR	6161184	ArgumentList	& za -> error		6161153	1					
ANR	6161185	Argument	& za -> error		6161153	0					
ANR	6161186	UnaryOperationExpression	& za -> error		6161153	0					
ANR	6161187	UnaryOperator	&		6161153	0					
ANR	6161188	PtrMemberAccess	za -> error		6161153	1					
ANR	6161189	Identifier	za		6161153	0					
ANR	6161190	Identifier	error		6161153	1					
ANR	6161191	Argument	src		6161153	1					
ANR	6161192	Identifier	src		6161153	0					
ANR	6161193	ReturnStatement	return - 1 ;	495:1:12512:12521	6161153	1	True				
ANR	6161194	UnaryOperationExpression	- 1		6161153	0					
ANR	6161195	UnaryOperator	-		6161153	0					
ANR	6161196	PrimaryExpression	1		6161153	1					
ANR	6161197	ExpressionStatement	ret = 0	498:4:12534:12541	6161153	4	True				
ANR	6161198	AssignmentExpression	ret = 0		6161153	0		=			
ANR	6161199	Identifier	ret		6161153	0					
ANR	6161200	PrimaryExpression	0		6161153	1					
ANR	6161201	WhileStatement	"while ( ( n = zip_source_read ( src , buf , sizeof ( buf ) ) ) > 0 )"		6161153	5					
ANR	6161202	Condition	"( n = zip_source_read ( src , buf , sizeof ( buf ) ) ) > 0"	499:11:12554:12599	6161153	0	True				
ANR	6161203	RelationalExpression	"( n = zip_source_read ( src , buf , sizeof ( buf ) ) ) > 0"		6161153	0		>			
ANR	6161204	AssignmentExpression	"n = zip_source_read ( src , buf , sizeof ( buf ) )"		6161153	0		=			
ANR	6161205	Identifier	n		6161153	0					
ANR	6161206	CallExpression	"zip_source_read ( src , buf , sizeof ( buf ) )"		6161153	1					
ANR	6161207	Callee	zip_source_read		6161153	0					
ANR	6161208	Identifier	zip_source_read		6161153	0					
ANR	6161209	ArgumentList	src		6161153	1					
ANR	6161210	Argument	src		6161153	0					
ANR	6161211	Identifier	src		6161153	0					
ANR	6161212	Argument	buf		6161153	1					
ANR	6161213	Identifier	buf		6161153	0					
ANR	6161214	Argument	sizeof ( buf )		6161153	2					
ANR	6161215	SizeofExpression	sizeof ( buf )		6161153	0					
ANR	6161216	Sizeof	sizeof		6161153	0					
ANR	6161217	SizeofOperand	buf		6161153	1					
ANR	6161218	PrimaryExpression	0		6161153	1					
ANR	6161219	CompoundStatement		12:59:230:230	6161153	1					
ANR	6161220	IfStatement	"if ( fwrite ( buf , 1 , ( size_t ) n , ft ) != ( size_t ) n )"		6161153	0					
ANR	6161221	Condition	"fwrite ( buf , 1 , ( size_t ) n , ft ) != ( size_t ) n"	500:5:12609:12650	6161153	0	True				
ANR	6161222	EqualityExpression	"fwrite ( buf , 1 , ( size_t ) n , ft ) != ( size_t ) n"		6161153	0		!=			
ANR	6161223	CallExpression	"fwrite ( buf , 1 , ( size_t ) n , ft )"		6161153	0					
ANR	6161224	Callee	fwrite		6161153	0					
ANR	6161225	Identifier	fwrite		6161153	0					
ANR	6161226	ArgumentList	buf		6161153	1					
ANR	6161227	Argument	buf		6161153	0					
ANR	6161228	Identifier	buf		6161153	0					
ANR	6161229	Argument	1		6161153	1					
ANR	6161230	PrimaryExpression	1		6161153	0					
ANR	6161231	Argument	( size_t ) n		6161153	2					
ANR	6161232	CastExpression	( size_t ) n		6161153	0					
ANR	6161233	CastTarget	size_t		6161153	0					
ANR	6161234	Identifier	n		6161153	1					
ANR	6161235	Argument	ft		6161153	3					
ANR	6161236	Identifier	ft		6161153	0					
ANR	6161237	CastExpression	( size_t ) n		6161153	1					
ANR	6161238	CastTarget	size_t		6161153	0					
ANR	6161239	Identifier	n		6161153	1					
ANR	6161240	CompoundStatement		13:49:281:281	6161153	1					
ANR	6161241	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_WRITE , errno )"	501:5:12660:12707	6161153	0	True				
ANR	6161242	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_WRITE , errno )"		6161153	0					
ANR	6161243	Callee	_zip_error_set		6161153	0					
ANR	6161244	Identifier	_zip_error_set		6161153	0					
ANR	6161245	ArgumentList	& za -> error		6161153	1					
ANR	6161246	Argument	& za -> error		6161153	0					
ANR	6161247	UnaryOperationExpression	& za -> error		6161153	0					
ANR	6161248	UnaryOperator	&		6161153	0					
ANR	6161249	PtrMemberAccess	za -> error		6161153	1					
ANR	6161250	Identifier	za		6161153	0					
ANR	6161251	Identifier	error		6161153	1					
ANR	6161252	Argument	ZIP_ER_WRITE		6161153	1					
ANR	6161253	Identifier	ZIP_ER_WRITE		6161153	0					
ANR	6161254	Argument	errno		6161153	2					
ANR	6161255	Identifier	errno		6161153	0					
ANR	6161256	ExpressionStatement	ret = - 1	502:5:12714:12722	6161153	1	True				
ANR	6161257	AssignmentExpression	ret = - 1		6161153	0		=			
ANR	6161258	Identifier	ret		6161153	0					
ANR	6161259	UnaryOperationExpression	- 1		6161153	1					
ANR	6161260	UnaryOperator	-		6161153	0					
ANR	6161261	PrimaryExpression	1		6161153	1					
ANR	6161262	BreakStatement	break ;	503:5:12729:12734	6161153	2	True				
ANR	6161263	IfStatement	if ( n < 0 )		6161153	6					
ANR	6161264	Condition	n < 0	507:8:12754:12758	6161153	0	True				
ANR	6161265	RelationalExpression	n < 0		6161153	0		<			
ANR	6161266	Identifier	n		6161153	0					
ANR	6161267	PrimaryExpression	0		6161153	1					
ANR	6161268	CompoundStatement		20:15:389:389	6161153	1					
ANR	6161269	IfStatement	if ( ret == 0 )		6161153	0					
ANR	6161270	Condition	ret == 0	508:5:12768:12775	6161153	0	True				
ANR	6161271	EqualityExpression	ret == 0		6161153	0		==			
ANR	6161272	Identifier	ret		6161153	0					
ANR	6161273	PrimaryExpression	0		6161153	1					
ANR	6161274	ExpressionStatement	"_zip_error_set_from_source ( & za -> error , src )"	509:5:12783:12826	6161153	1	True				
ANR	6161275	CallExpression	"_zip_error_set_from_source ( & za -> error , src )"		6161153	0					
ANR	6161276	Callee	_zip_error_set_from_source		6161153	0					
ANR	6161277	Identifier	_zip_error_set_from_source		6161153	0					
ANR	6161278	ArgumentList	& za -> error		6161153	1					
ANR	6161279	Argument	& za -> error		6161153	0					
ANR	6161280	UnaryOperationExpression	& za -> error		6161153	0					
ANR	6161281	UnaryOperator	&		6161153	0					
ANR	6161282	PtrMemberAccess	za -> error		6161153	1					
ANR	6161283	Identifier	za		6161153	0					
ANR	6161284	Identifier	error		6161153	1					
ANR	6161285	Argument	src		6161153	1					
ANR	6161286	Identifier	src		6161153	0					
ANR	6161287	ExpressionStatement	ret = - 1	510:1:12829:12837	6161153	1	True				
ANR	6161288	AssignmentExpression	ret = - 1		6161153	0		=			
ANR	6161289	Identifier	ret		6161153	0					
ANR	6161290	UnaryOperationExpression	- 1		6161153	1					
ANR	6161291	UnaryOperator	-		6161153	0					
ANR	6161292	PrimaryExpression	1		6161153	1					
ANR	6161293	ExpressionStatement	zip_source_close ( src )	513:4:12851:12872	6161153	7	True				
ANR	6161294	CallExpression	zip_source_close ( src )		6161153	0					
ANR	6161295	Callee	zip_source_close		6161153	0					
ANR	6161296	Identifier	zip_source_close		6161153	0					
ANR	6161297	ArgumentList	src		6161153	1					
ANR	6161298	Argument	src		6161153	0					
ANR	6161299	Identifier	src		6161153	0					
ANR	6161300	ReturnStatement	return ret ;	515:4:12879:12889	6161153	8	True				
ANR	6161301	Identifier	ret		6161153	0					
ANR	6161302	ReturnType	static int		6161153	1					
ANR	6161303	Identifier	copy_source		6161153	2					
ANR	6161304	ParameterList	"struct zip * za , struct zip_source * src , FILE * ft"		6161153	3					
ANR	6161305	Parameter	struct zip * za	487:12:12321:12334	6161153	0	True				
ANR	6161306	ParameterType	struct zip *		6161153	0					
ANR	6161307	Identifier	za		6161153	1					
ANR	6161308	Parameter	struct zip_source * src	487:28:12337:12358	6161153	1	True				
ANR	6161309	ParameterType	struct zip_source *		6161153	0					
ANR	6161310	Identifier	src		6161153	1					
ANR	6161311	Parameter	FILE * ft	487:52:12361:12368	6161153	2	True				
ANR	6161312	ParameterType	FILE *		6161153	0					
ANR	6161313	Identifier	ft		6161153	1					
ANR	6161314	CFGEntryNode	ENTRY		6161153		True				
ANR	6161315	CFGExitNode	EXIT		6161153		True				
ANR	6161316	Symbol	ret		6161153						
ANR	6161317	Symbol	buf		6161153						
ANR	6161318	Symbol	errno		6161153						
ANR	6161319	Symbol	src		6161153						
ANR	6161320	Symbol	& za -> error		6161153						
ANR	6161321	Symbol	za		6161153						
ANR	6161322	Symbol	zip_source_read		6161153						
ANR	6161323	Symbol	zip_source_open		6161153						
ANR	6161324	Symbol	fwrite		6161153						
ANR	6161325	Symbol	ZIP_ER_WRITE		6161153						
ANR	6161326	Symbol	ft		6161153						
ANR	6161327	Symbol	n		6161153						
ANR	6161328	Function	write_cdir	520:0:12897:13781							
ANR	6161329	FunctionDef	"write_cdir (struct zip * za , const struct zip_filelist * filelist , zip_uint64_t survivors , FILE * out)"		6161328	0					
ANR	6161330	CompoundStatement		522:0:13007:13781	6161328	0					
ANR	6161331	IdentifierDeclStatement	"off_t cd_start , end ;"	523:4:13013:13032	6161328	0	True				
ANR	6161332	IdentifierDecl	cd_start		6161328	0					
ANR	6161333	IdentifierDeclType	off_t		6161328	0					
ANR	6161334	Identifier	cd_start		6161328	1					
ANR	6161335	IdentifierDecl	end		6161328	1					
ANR	6161336	IdentifierDeclType	off_t		6161328	0					
ANR	6161337	Identifier	end		6161328	1					
ANR	6161338	IdentifierDeclStatement	zip_int64_t size ;	524:4:13038:13054	6161328	1	True				
ANR	6161339	IdentifierDecl	size		6161328	0					
ANR	6161340	IdentifierDeclType	zip_int64_t		6161328	0					
ANR	6161341	Identifier	size		6161328	1					
ANR	6161342	IdentifierDeclStatement	uLong crc ;	525:4:13060:13069	6161328	2	True				
ANR	6161343	IdentifierDecl	crc		6161328	0					
ANR	6161344	IdentifierDeclType	uLong		6161328	0					
ANR	6161345	Identifier	crc		6161328	1					
ANR	6161346	IdentifierDeclStatement	char buf [ TORRENT_CRC_LEN + 1 ] ;	526:4:13075:13102	6161328	3	True				
ANR	6161347	IdentifierDecl	buf [ TORRENT_CRC_LEN + 1 ]		6161328	0					
ANR	6161348	IdentifierDeclType	char [ TORRENT_CRC_LEN + 1 ]		6161328	0					
ANR	6161349	Identifier	buf		6161328	1					
ANR	6161350	AdditiveExpression	TORRENT_CRC_LEN + 1		6161328	2		+			
ANR	6161351	Identifier	TORRENT_CRC_LEN		6161328	0					
ANR	6161352	PrimaryExpression	1		6161328	1					
ANR	6161353	ExpressionStatement	cd_start = ftello ( out )	528:4:13109:13131	6161328	4	True				
ANR	6161354	AssignmentExpression	cd_start = ftello ( out )		6161328	0		=			
ANR	6161355	Identifier	cd_start		6161328	0					
ANR	6161356	CallExpression	ftello ( out )		6161328	1					
ANR	6161357	Callee	ftello		6161328	0					
ANR	6161358	Identifier	ftello		6161328	0					
ANR	6161359	ArgumentList	out		6161328	1					
ANR	6161360	Argument	out		6161328	0					
ANR	6161361	Identifier	out		6161328	0					
ANR	6161362	IfStatement	if ( cd_start < 0 )		6161328	5					
ANR	6161363	Condition	cd_start < 0	529:5:13138:13149	6161328	0	True				
ANR	6161364	RelationalExpression	cd_start < 0		6161328	0		<			
ANR	6161365	Identifier	cd_start		6161328	0					
ANR	6161366	PrimaryExpression	0		6161328	1					
ANR	6161367	ReturnStatement	return - 1 ;	530:2:13154:13163	6161328	1	True				
ANR	6161368	UnaryOperationExpression	- 1		6161328	0					
ANR	6161369	UnaryOperator	-		6161328	0					
ANR	6161370	PrimaryExpression	1		6161328	1					
ANR	6161371	IfStatement	"if ( ( size = _zip_cdir_write ( za , filelist , survivors , out ) ) < 0 )"		6161328	6					
ANR	6161372	Condition	"( size = _zip_cdir_write ( za , filelist , survivors , out ) ) < 0"	532:8:13174:13229	6161328	0	True				
ANR	6161373	RelationalExpression	"( size = _zip_cdir_write ( za , filelist , survivors , out ) ) < 0"		6161328	0		<			
ANR	6161374	AssignmentExpression	"size = _zip_cdir_write ( za , filelist , survivors , out )"		6161328	0		=			
ANR	6161375	Identifier	size		6161328	0					
ANR	6161376	CallExpression	"_zip_cdir_write ( za , filelist , survivors , out )"		6161328	1					
ANR	6161377	Callee	_zip_cdir_write		6161328	0					
ANR	6161378	Identifier	_zip_cdir_write		6161328	0					
ANR	6161379	ArgumentList	za		6161328	1					
ANR	6161380	Argument	za		6161328	0					
ANR	6161381	Identifier	za		6161328	0					
ANR	6161382	Argument	filelist		6161328	1					
ANR	6161383	Identifier	filelist		6161328	0					
ANR	6161384	Argument	survivors		6161328	2					
ANR	6161385	Identifier	survivors		6161328	0					
ANR	6161386	Argument	out		6161328	3					
ANR	6161387	Identifier	out		6161328	0					
ANR	6161388	PrimaryExpression	0		6161328	1					
ANR	6161389	ReturnStatement	return - 1 ;	533:1:13233:13242	6161328	1	True				
ANR	6161390	UnaryOperationExpression	- 1		6161328	0					
ANR	6161391	UnaryOperator	-		6161328	0					
ANR	6161392	PrimaryExpression	1		6161328	1					
ANR	6161393	ExpressionStatement	end = ftello ( out )	535:4:13253:13270	6161328	7	True				
ANR	6161394	AssignmentExpression	end = ftello ( out )		6161328	0		=			
ANR	6161395	Identifier	end		6161328	0					
ANR	6161396	CallExpression	ftello ( out )		6161328	1					
ANR	6161397	Callee	ftello		6161328	0					
ANR	6161398	Identifier	ftello		6161328	0					
ANR	6161399	ArgumentList	out		6161328	1					
ANR	6161400	Argument	out		6161328	0					
ANR	6161401	Identifier	out		6161328	0					
ANR	6161402	IfStatement	"if ( zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) == 0 )"		6161328	8					
ANR	6161403	Condition	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) == 0"	537:8:13281:13329	6161328	0	True				
ANR	6161404	EqualityExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) == 0"		6161328	0		==			
ANR	6161405	CallExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"		6161328	0					
ANR	6161406	Callee	zip_get_archive_flag		6161328	0					
ANR	6161407	Identifier	zip_get_archive_flag		6161328	0					
ANR	6161408	ArgumentList	za		6161328	1					
ANR	6161409	Argument	za		6161328	0					
ANR	6161410	Identifier	za		6161328	0					
ANR	6161411	Argument	ZIP_AFL_TORRENT		6161328	1					
ANR	6161412	Identifier	ZIP_AFL_TORRENT		6161328	0					
ANR	6161413	Argument	0		6161328	2					
ANR	6161414	PrimaryExpression	0		6161328	0					
ANR	6161415	PrimaryExpression	0		6161328	1					
ANR	6161416	ReturnStatement	return 0 ;	538:1:13333:13341	6161328	1	True				
ANR	6161417	PrimaryExpression	0		6161328	0					
ANR	6161418	IfStatement	"if ( _zip_filerange_crc ( out , cd_start , size , & crc , & za -> error ) < 0 )"		6161328	9					
ANR	6161419	Condition	"_zip_filerange_crc ( out , cd_start , size , & crc , & za -> error ) < 0"	543:8:13390:13450	6161328	0	True				
ANR	6161420	RelationalExpression	"_zip_filerange_crc ( out , cd_start , size , & crc , & za -> error ) < 0"		6161328	0		<			
ANR	6161421	CallExpression	"_zip_filerange_crc ( out , cd_start , size , & crc , & za -> error )"		6161328	0					
ANR	6161422	Callee	_zip_filerange_crc		6161328	0					
ANR	6161423	Identifier	_zip_filerange_crc		6161328	0					
ANR	6161424	ArgumentList	out		6161328	1					
ANR	6161425	Argument	out		6161328	0					
ANR	6161426	Identifier	out		6161328	0					
ANR	6161427	Argument	cd_start		6161328	1					
ANR	6161428	Identifier	cd_start		6161328	0					
ANR	6161429	Argument	size		6161328	2					
ANR	6161430	Identifier	size		6161328	0					
ANR	6161431	Argument	& crc		6161328	3					
ANR	6161432	UnaryOperationExpression	& crc		6161328	0					
ANR	6161433	UnaryOperator	&		6161328	0					
ANR	6161434	Identifier	crc		6161328	1					
ANR	6161435	Argument	& za -> error		6161328	4					
ANR	6161436	UnaryOperationExpression	& za -> error		6161328	0					
ANR	6161437	UnaryOperator	&		6161328	0					
ANR	6161438	PtrMemberAccess	za -> error		6161328	1					
ANR	6161439	Identifier	za		6161328	0					
ANR	6161440	Identifier	error		6161328	1					
ANR	6161441	PrimaryExpression	0		6161328	1					
ANR	6161442	ReturnStatement	return - 1 ;	544:1:13454:13463	6161328	1	True				
ANR	6161443	UnaryOperationExpression	- 1		6161328	0					
ANR	6161444	UnaryOperator	-		6161328	0					
ANR	6161445	PrimaryExpression	1		6161328	1					
ANR	6161446	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""%08lX"" , ( long ) crc )"	546:4:13470:13516	6161328	10	True				
ANR	6161447	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%08lX"" , ( long ) crc )"		6161328	0					
ANR	6161448	Callee	snprintf		6161328	0					
ANR	6161449	Identifier	snprintf		6161328	0					
ANR	6161450	ArgumentList	buf		6161328	1					
ANR	6161451	Argument	buf		6161328	0					
ANR	6161452	Identifier	buf		6161328	0					
ANR	6161453	Argument	sizeof ( buf )		6161328	1					
ANR	6161454	SizeofExpression	sizeof ( buf )		6161328	0					
ANR	6161455	Sizeof	sizeof		6161328	0					
ANR	6161456	SizeofOperand	buf		6161328	1					
ANR	6161457	Argument	"""%08lX"""		6161328	2					
ANR	6161458	PrimaryExpression	"""%08lX"""		6161328	0					
ANR	6161459	Argument	( long ) crc		6161328	3					
ANR	6161460	CastExpression	( long ) crc		6161328	0					
ANR	6161461	CastTarget	long		6161328	0					
ANR	6161462	Identifier	crc		6161328	1					
ANR	6161463	IfStatement	"if ( fseeko ( out , end - TORRENT_CRC_LEN , SEEK_SET ) < 0 )"		6161328	11					
ANR	6161464	Condition	"fseeko ( out , end - TORRENT_CRC_LEN , SEEK_SET ) < 0"	548:8:13527:13572	6161328	0	True				
ANR	6161465	RelationalExpression	"fseeko ( out , end - TORRENT_CRC_LEN , SEEK_SET ) < 0"		6161328	0		<			
ANR	6161466	CallExpression	"fseeko ( out , end - TORRENT_CRC_LEN , SEEK_SET )"		6161328	0					
ANR	6161467	Callee	fseeko		6161328	0					
ANR	6161468	Identifier	fseeko		6161328	0					
ANR	6161469	ArgumentList	out		6161328	1					
ANR	6161470	Argument	out		6161328	0					
ANR	6161471	Identifier	out		6161328	0					
ANR	6161472	Argument	end - TORRENT_CRC_LEN		6161328	1					
ANR	6161473	AdditiveExpression	end - TORRENT_CRC_LEN		6161328	0		-			
ANR	6161474	Identifier	end		6161328	0					
ANR	6161475	Identifier	TORRENT_CRC_LEN		6161328	1					
ANR	6161476	Argument	SEEK_SET		6161328	2					
ANR	6161477	Identifier	SEEK_SET		6161328	0					
ANR	6161478	PrimaryExpression	0		6161328	1					
ANR	6161479	CompoundStatement		27:56:567:567	6161328	1					
ANR	6161480	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"	549:1:13578:13624	6161328	0	True				
ANR	6161481	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"		6161328	0					
ANR	6161482	Callee	_zip_error_set		6161328	0					
ANR	6161483	Identifier	_zip_error_set		6161328	0					
ANR	6161484	ArgumentList	& za -> error		6161328	1					
ANR	6161485	Argument	& za -> error		6161328	0					
ANR	6161486	UnaryOperationExpression	& za -> error		6161328	0					
ANR	6161487	UnaryOperator	&		6161328	0					
ANR	6161488	PtrMemberAccess	za -> error		6161328	1					
ANR	6161489	Identifier	za		6161328	0					
ANR	6161490	Identifier	error		6161328	1					
ANR	6161491	Argument	ZIP_ER_SEEK		6161328	1					
ANR	6161492	Identifier	ZIP_ER_SEEK		6161328	0					
ANR	6161493	Argument	errno		6161328	2					
ANR	6161494	Identifier	errno		6161328	0					
ANR	6161495	ReturnStatement	return - 1 ;	550:1:13627:13636	6161328	1	True				
ANR	6161496	UnaryOperationExpression	- 1		6161328	0					
ANR	6161497	UnaryOperator	-		6161328	0					
ANR	6161498	PrimaryExpression	1		6161328	1					
ANR	6161499	IfStatement	"if ( fwrite ( buf , TORRENT_CRC_LEN , 1 , out ) != 1 )"		6161328	12					
ANR	6161500	Condition	"fwrite ( buf , TORRENT_CRC_LEN , 1 , out ) != 1"	553:8:13653:13693	6161328	0	True				
ANR	6161501	EqualityExpression	"fwrite ( buf , TORRENT_CRC_LEN , 1 , out ) != 1"		6161328	0		!=			
ANR	6161502	CallExpression	"fwrite ( buf , TORRENT_CRC_LEN , 1 , out )"		6161328	0					
ANR	6161503	Callee	fwrite		6161328	0					
ANR	6161504	Identifier	fwrite		6161328	0					
ANR	6161505	ArgumentList	buf		6161328	1					
ANR	6161506	Argument	buf		6161328	0					
ANR	6161507	Identifier	buf		6161328	0					
ANR	6161508	Argument	TORRENT_CRC_LEN		6161328	1					
ANR	6161509	Identifier	TORRENT_CRC_LEN		6161328	0					
ANR	6161510	Argument	1		6161328	2					
ANR	6161511	PrimaryExpression	1		6161328	0					
ANR	6161512	Argument	out		6161328	3					
ANR	6161513	Identifier	out		6161328	0					
ANR	6161514	PrimaryExpression	1		6161328	1					
ANR	6161515	CompoundStatement		32:51:688:688	6161328	1					
ANR	6161516	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_WRITE , errno )"	554:1:13699:13746	6161328	0	True				
ANR	6161517	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_WRITE , errno )"		6161328	0					
ANR	6161518	Callee	_zip_error_set		6161328	0					
ANR	6161519	Identifier	_zip_error_set		6161328	0					
ANR	6161520	ArgumentList	& za -> error		6161328	1					
ANR	6161521	Argument	& za -> error		6161328	0					
ANR	6161522	UnaryOperationExpression	& za -> error		6161328	0					
ANR	6161523	UnaryOperator	&		6161328	0					
ANR	6161524	PtrMemberAccess	za -> error		6161328	1					
ANR	6161525	Identifier	za		6161328	0					
ANR	6161526	Identifier	error		6161328	1					
ANR	6161527	Argument	ZIP_ER_WRITE		6161328	1					
ANR	6161528	Identifier	ZIP_ER_WRITE		6161328	0					
ANR	6161529	Argument	errno		6161328	2					
ANR	6161530	Identifier	errno		6161328	0					
ANR	6161531	ReturnStatement	return - 1 ;	555:1:13749:13758	6161328	1	True				
ANR	6161532	UnaryOperationExpression	- 1		6161328	0					
ANR	6161533	UnaryOperator	-		6161328	0					
ANR	6161534	PrimaryExpression	1		6161328	1					
ANR	6161535	ReturnStatement	return 0 ;	558:4:13771:13779	6161328	13	True				
ANR	6161536	PrimaryExpression	0		6161328	0					
ANR	6161537	ReturnType	static int		6161328	1					
ANR	6161538	Identifier	write_cdir		6161328	2					
ANR	6161539	ParameterList	"struct zip * za , const struct zip_filelist * filelist , zip_uint64_t survivors , FILE * out"		6161328	3					
ANR	6161540	Parameter	struct zip * za	521:11:12919:12932	6161328	0	True				
ANR	6161541	ParameterType	struct zip *		6161328	0					
ANR	6161542	Identifier	za		6161328	1					
ANR	6161543	Parameter	const struct zip_filelist * filelist	521:27:12935:12969	6161328	1	True				
ANR	6161544	ParameterType	const struct zip_filelist *		6161328	0					
ANR	6161545	Identifier	filelist		6161328	1					
ANR	6161546	Parameter	zip_uint64_t survivors	521:64:12972:12993	6161328	2	True				
ANR	6161547	ParameterType	zip_uint64_t		6161328	0					
ANR	6161548	Identifier	survivors		6161328	1					
ANR	6161549	Parameter	FILE * out	521:88:12996:13004	6161328	3	True				
ANR	6161550	ParameterType	FILE *		6161328	0					
ANR	6161551	Identifier	out		6161328	1					
ANR	6161552	CFGEntryNode	ENTRY		6161328		True				
ANR	6161553	CFGExitNode	EXIT		6161328		True				
ANR	6161554	Symbol	SEEK_SET		6161328						
ANR	6161555	Symbol	errno		6161328						
ANR	6161556	Symbol	fseeko		6161328						
ANR	6161557	Symbol	& za -> error		6161328						
ANR	6161558	Symbol	za		6161328						
ANR	6161559	Symbol	zip_get_archive_flag		6161328						
ANR	6161560	Symbol	filelist		6161328						
ANR	6161561	Symbol	fwrite		6161328						
ANR	6161562	Symbol	ZIP_ER_SEEK		6161328						
ANR	6161563	Symbol	ZIP_ER_WRITE		6161328						
ANR	6161564	Symbol	_zip_filerange_crc		6161328						
ANR	6161565	Symbol	cd_start		6161328						
ANR	6161566	Symbol	out		6161328						
ANR	6161567	Symbol	ZIP_AFL_TORRENT		6161328						
ANR	6161568	Symbol	buf		6161328						
ANR	6161569	Symbol	_zip_cdir_write		6161328						
ANR	6161570	Symbol	size		6161328						
ANR	6161571	Symbol	survivors		6161328						
ANR	6161572	Symbol	crc		6161328						
ANR	6161573	Symbol	ftello		6161328						
ANR	6161574	Symbol	TORRENT_CRC_LEN		6161328						
ANR	6161575	Symbol	end		6161328						
ANR	6161576	Symbol	& crc		6161328						
ANR	6161577	Function	_zip_changed	563:0:13787:14300							
ANR	6161578	FunctionDef	"_zip_changed (const struct zip * za , zip_uint64_t * survivorsp)"		6161577	0					
ANR	6161579	CompoundStatement		565:0:13852:14300	6161577	0					
ANR	6161580	IdentifierDeclStatement	int changed ;	566:4:13858:13869	6161577	0	True				
ANR	6161581	IdentifierDecl	changed		6161577	0					
ANR	6161582	IdentifierDeclType	int		6161577	0					
ANR	6161583	Identifier	changed		6161577	1					
ANR	6161584	IdentifierDeclStatement	"zip_uint64_t i , survivors ;"	567:4:13875:13900	6161577	1	True				
ANR	6161585	IdentifierDecl	i		6161577	0					
ANR	6161586	IdentifierDeclType	zip_uint64_t		6161577	0					
ANR	6161587	Identifier	i		6161577	1					
ANR	6161588	IdentifierDecl	survivors		6161577	1					
ANR	6161589	IdentifierDeclType	zip_uint64_t		6161577	0					
ANR	6161590	Identifier	survivors		6161577	1					
ANR	6161591	ExpressionStatement	changed = 0	569:4:13907:13918	6161577	2	True				
ANR	6161592	AssignmentExpression	changed = 0		6161577	0		=			
ANR	6161593	Identifier	changed		6161577	0					
ANR	6161594	PrimaryExpression	0		6161577	1					
ANR	6161595	ExpressionStatement	survivors = 0	570:4:13924:13937	6161577	3	True				
ANR	6161596	AssignmentExpression	survivors = 0		6161577	0		=			
ANR	6161597	Identifier	survivors		6161577	0					
ANR	6161598	PrimaryExpression	0		6161577	1					
ANR	6161599	IfStatement	if ( za -> comment_changed || za -> ch_flags != za -> flags )		6161577	4					
ANR	6161600	Condition	za -> comment_changed || za -> ch_flags != za -> flags	572:8:13948:13995	6161577	0	True				
ANR	6161601	OrExpression	za -> comment_changed || za -> ch_flags != za -> flags		6161577	0		||			
ANR	6161602	PtrMemberAccess	za -> comment_changed		6161577	0					
ANR	6161603	Identifier	za		6161577	0					
ANR	6161604	Identifier	comment_changed		6161577	1					
ANR	6161605	EqualityExpression	za -> ch_flags != za -> flags		6161577	1		!=			
ANR	6161606	PtrMemberAccess	za -> ch_flags		6161577	0					
ANR	6161607	Identifier	za		6161577	0					
ANR	6161608	Identifier	ch_flags		6161577	1					
ANR	6161609	PtrMemberAccess	za -> flags		6161577	1					
ANR	6161610	Identifier	za		6161577	0					
ANR	6161611	Identifier	flags		6161577	1					
ANR	6161612	ExpressionStatement	changed = 1	573:1:13999:14010	6161577	1	True				
ANR	6161613	AssignmentExpression	changed = 1		6161577	0		=			
ANR	6161614	Identifier	changed		6161577	0					
ANR	6161615	PrimaryExpression	1		6161577	1					
ANR	6161616	ForStatement	for ( i = 0 ; i < za -> nentry ; i ++ )		6161577	5					
ANR	6161617	ForInit	i = 0 ;	575:9:14022:14025	6161577	0	True				
ANR	6161618	AssignmentExpression	i = 0		6161577	0		=			
ANR	6161619	Identifier	i		6161577	0					
ANR	6161620	PrimaryExpression	0		6161577	1					
ANR	6161621	Condition	i < za -> nentry	575:14:14027:14038	6161577	1	True				
ANR	6161622	RelationalExpression	i < za -> nentry		6161577	0		<			
ANR	6161623	Identifier	i		6161577	0					
ANR	6161624	PtrMemberAccess	za -> nentry		6161577	1					
ANR	6161625	Identifier	za		6161577	0					
ANR	6161626	Identifier	nentry		6161577	1					
ANR	6161627	PostIncDecOperationExpression	i ++	575:28:14041:14043	6161577	2	True				
ANR	6161628	Identifier	i		6161577	0					
ANR	6161629	IncDec	++		6161577	1					
ANR	6161630	CompoundStatement		11:33:193:193	6161577	3					
ANR	6161631	IfStatement	if ( za -> entry [ i ] . deleted || za -> entry [ i ] . source || ( za -> entry [ i ] . changes && za -> entry [ i ] . changes -> changed != 0 ) )		6161577	0					
ANR	6161632	Condition	za -> entry [ i ] . deleted || za -> entry [ i ] . source || ( za -> entry [ i ] . changes && za -> entry [ i ] . changes -> changed != 0 )	576:5:14053:14159	6161577	0	True				
ANR	6161633	OrExpression	za -> entry [ i ] . deleted || za -> entry [ i ] . source || ( za -> entry [ i ] . changes && za -> entry [ i ] . changes -> changed != 0 )		6161577	0		||			
ANR	6161634	MemberAccess	za -> entry [ i ] . deleted		6161577	0					
ANR	6161635	ArrayIndexing	za -> entry [ i ]		6161577	0					
ANR	6161636	PtrMemberAccess	za -> entry		6161577	0					
ANR	6161637	Identifier	za		6161577	0					
ANR	6161638	Identifier	entry		6161577	1					
ANR	6161639	Identifier	i		6161577	1					
ANR	6161640	Identifier	deleted		6161577	1					
ANR	6161641	OrExpression	za -> entry [ i ] . source || ( za -> entry [ i ] . changes && za -> entry [ i ] . changes -> changed != 0 )		6161577	1		||			
ANR	6161642	MemberAccess	za -> entry [ i ] . source		6161577	0					
ANR	6161643	ArrayIndexing	za -> entry [ i ]		6161577	0					
ANR	6161644	PtrMemberAccess	za -> entry		6161577	0					
ANR	6161645	Identifier	za		6161577	0					
ANR	6161646	Identifier	entry		6161577	1					
ANR	6161647	Identifier	i		6161577	1					
ANR	6161648	Identifier	source		6161577	1					
ANR	6161649	AndExpression	za -> entry [ i ] . changes && za -> entry [ i ] . changes -> changed != 0		6161577	1		&&			
ANR	6161650	MemberAccess	za -> entry [ i ] . changes		6161577	0					
ANR	6161651	ArrayIndexing	za -> entry [ i ]		6161577	0					
ANR	6161652	PtrMemberAccess	za -> entry		6161577	0					
ANR	6161653	Identifier	za		6161577	0					
ANR	6161654	Identifier	entry		6161577	1					
ANR	6161655	Identifier	i		6161577	1					
ANR	6161656	Identifier	changes		6161577	1					
ANR	6161657	EqualityExpression	za -> entry [ i ] . changes -> changed != 0		6161577	1		!=			
ANR	6161658	PtrMemberAccess	za -> entry [ i ] . changes -> changed		6161577	0					
ANR	6161659	MemberAccess	za -> entry [ i ] . changes		6161577	0					
ANR	6161660	ArrayIndexing	za -> entry [ i ]		6161577	0					
ANR	6161661	PtrMemberAccess	za -> entry		6161577	0					
ANR	6161662	Identifier	za		6161577	0					
ANR	6161663	Identifier	entry		6161577	1					
ANR	6161664	Identifier	i		6161577	1					
ANR	6161665	Identifier	changes		6161577	1					
ANR	6161666	Identifier	changed		6161577	1					
ANR	6161667	PrimaryExpression	0		6161577	1					
ANR	6161668	ExpressionStatement	changed = 1	577:5:14167:14178	6161577	1	True				
ANR	6161669	AssignmentExpression	changed = 1		6161577	0		=			
ANR	6161670	Identifier	changed		6161577	0					
ANR	6161671	PrimaryExpression	1		6161577	1					
ANR	6161672	IfStatement	if ( ! za -> entry [ i ] . deleted )		6161577	1					
ANR	6161673	Condition	! za -> entry [ i ] . deleted	578:5:14185:14205	6161577	0	True				
ANR	6161674	UnaryOperationExpression	! za -> entry [ i ] . deleted		6161577	0					
ANR	6161675	UnaryOperator	!		6161577	0					
ANR	6161676	MemberAccess	za -> entry [ i ] . deleted		6161577	1					
ANR	6161677	ArrayIndexing	za -> entry [ i ]		6161577	0					
ANR	6161678	PtrMemberAccess	za -> entry		6161577	0					
ANR	6161679	Identifier	za		6161577	0					
ANR	6161680	Identifier	entry		6161577	1					
ANR	6161681	Identifier	i		6161577	1					
ANR	6161682	Identifier	deleted		6161577	1					
ANR	6161683	ExpressionStatement	survivors ++	579:5:14213:14224	6161577	1	True				
ANR	6161684	PostIncDecOperationExpression	survivors ++		6161577	0					
ANR	6161685	Identifier	survivors		6161577	0					
ANR	6161686	IncDec	++		6161577	1					
ANR	6161687	IfStatement	if ( survivorsp )		6161577	6					
ANR	6161688	Condition	survivorsp	582:8:14241:14250	6161577	0	True				
ANR	6161689	Identifier	survivorsp		6161577	0					
ANR	6161690	ExpressionStatement	* survivorsp = survivors	583:1:14254:14277	6161577	1	True				
ANR	6161691	AssignmentExpression	* survivorsp = survivors		6161577	0		=			
ANR	6161692	UnaryOperationExpression	* survivorsp		6161577	0					
ANR	6161693	UnaryOperator	*		6161577	0					
ANR	6161694	Identifier	survivorsp		6161577	1					
ANR	6161695	Identifier	survivors		6161577	1					
ANR	6161696	ReturnStatement	return changed ;	585:4:14284:14298	6161577	7	True				
ANR	6161697	Identifier	changed		6161577	0					
ANR	6161698	ReturnType	int		6161577	1					
ANR	6161699	Identifier	_zip_changed		6161577	2					
ANR	6161700	ParameterList	"const struct zip * za , zip_uint64_t * survivorsp"		6161577	3					
ANR	6161701	Parameter	const struct zip * za	564:13:13804:13823	6161577	0	True				
ANR	6161702	ParameterType	const struct zip *		6161577	0					
ANR	6161703	Identifier	za		6161577	1					
ANR	6161704	Parameter	zip_uint64_t * survivorsp	564:35:13826:13849	6161577	1	True				
ANR	6161705	ParameterType	zip_uint64_t *		6161577	0					
ANR	6161706	Identifier	survivorsp		6161577	1					
ANR	6161707	CFGEntryNode	ENTRY		6161577		True				
ANR	6161708	CFGExitNode	EXIT		6161577		True				
ANR	6161709	Symbol	za -> comment_changed		6161577						
ANR	6161710	Symbol	* * i		6161577						
ANR	6161711	Symbol	za -> entry [ i ] . deleted		6161577						
ANR	6161712	Symbol	za		6161577						
ANR	6161713	Symbol	* za -> entry [ i ] . changes		6161577						
ANR	6161714	Symbol	za -> entry		6161577						
ANR	6161715	Symbol	i		6161577						
ANR	6161716	Symbol	za -> entry [ i ] . changes -> changed		6161577						
ANR	6161717	Symbol	za -> entry [ i ] . changes		6161577						
ANR	6161718	Symbol	* survivorsp		6161577						
ANR	6161719	Symbol	* za		6161577						
ANR	6161720	Symbol	* za -> entry		6161577						
ANR	6161721	Symbol	za -> flags		6161577						
ANR	6161722	Symbol	* * za -> entry		6161577						
ANR	6161723	Symbol	* * za		6161577						
ANR	6161724	Symbol	* i		6161577						
ANR	6161725	Symbol	* * * za		6161577						
ANR	6161726	Symbol	za -> nentry		6161577						
ANR	6161727	Symbol	survivors		6161577						
ANR	6161728	Symbol	survivorsp		6161577						
ANR	6161729	Symbol	za -> ch_flags		6161577						
ANR	6161730	Symbol	za -> entry [ i ] . source		6161577						
ANR	6161731	Symbol	changed		6161577						
ANR	6161732	Function	_zip_create_temp_output	590:0:14306:15659							
ANR	6161733	FunctionDef	"_zip_create_temp_output (struct zip * za , FILE * * outp)"		6161732	0					
ANR	6161734	CompoundStatement		592:0:14373:15659	6161732	0					
ANR	6161735	IdentifierDeclStatement	char * temp ;	593:4:14379:14389	6161732	0	True				
ANR	6161736	IdentifierDecl	* temp		6161732	0					
ANR	6161737	IdentifierDeclType	char *		6161732	0					
ANR	6161738	Identifier	temp		6161732	1					
ANR	6161739	IdentifierDeclStatement	int tfd ;	594:4:14395:14402	6161732	1	True				
ANR	6161740	IdentifierDecl	tfd		6161732	0					
ANR	6161741	IdentifierDeclType	int		6161732	0					
ANR	6161742	Identifier	tfd		6161732	1					
ANR	6161743	IdentifierDeclStatement	FILE * tfp ;	595:4:14408:14417	6161732	2	True				
ANR	6161744	IdentifierDecl	* tfp		6161732	0					
ANR	6161745	IdentifierDeclType	FILE *		6161732	0					
ANR	6161746	Identifier	tfp		6161732	1					
ANR	6161747	IfStatement	if ( za -> tempdir )		6161732	3					
ANR	6161748	Condition	za -> tempdir	597:8:14428:14438	6161732	0	True				
ANR	6161749	PtrMemberAccess	za -> tempdir		6161732	0					
ANR	6161750	Identifier	za		6161732	0					
ANR	6161751	Identifier	tempdir		6161732	1					
ANR	6161752	CompoundStatement		6:21:67:67	6161732	1					
ANR	6161753	IfStatement	if ( ( temp = ( char * ) malloc ( strlen ( za -> tempdir ) + 13 ) ) == NULL )		6161732	0					
ANR	6161754	Condition	( temp = ( char * ) malloc ( strlen ( za -> tempdir ) + 13 ) ) == NULL	598:12:14455:14507	6161732	0	True				
ANR	6161755	EqualityExpression	( temp = ( char * ) malloc ( strlen ( za -> tempdir ) + 13 ) ) == NULL		6161732	0		==			
ANR	6161756	AssignmentExpression	temp = ( char * ) malloc ( strlen ( za -> tempdir ) + 13 )		6161732	0		=			
ANR	6161757	Identifier	temp		6161732	0					
ANR	6161758	CastExpression	( char * ) malloc ( strlen ( za -> tempdir ) + 13 )		6161732	1					
ANR	6161759	CastTarget	char *		6161732	0					
ANR	6161760	CallExpression	malloc ( strlen ( za -> tempdir ) + 13 )		6161732	1					
ANR	6161761	Callee	malloc		6161732	0					
ANR	6161762	Identifier	malloc		6161732	0					
ANR	6161763	ArgumentList	strlen ( za -> tempdir ) + 13		6161732	1					
ANR	6161764	Argument	strlen ( za -> tempdir ) + 13		6161732	0					
ANR	6161765	AdditiveExpression	strlen ( za -> tempdir ) + 13		6161732	0		+			
ANR	6161766	CallExpression	strlen ( za -> tempdir )		6161732	0					
ANR	6161767	Callee	strlen		6161732	0					
ANR	6161768	Identifier	strlen		6161732	0					
ANR	6161769	ArgumentList	za -> tempdir		6161732	1					
ANR	6161770	Argument	za -> tempdir		6161732	0					
ANR	6161771	PtrMemberAccess	za -> tempdir		6161732	0					
ANR	6161772	Identifier	za		6161732	0					
ANR	6161773	Identifier	tempdir		6161732	1					
ANR	6161774	PrimaryExpression	13		6161732	1					
ANR	6161775	Identifier	NULL		6161732	1					
ANR	6161776	CompoundStatement		7:67:136:136	6161732	1					
ANR	6161777	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"	599:12:14524:14568	6161732	0	True				
ANR	6161778	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"		6161732	0					
ANR	6161779	Callee	_zip_error_set		6161732	0					
ANR	6161780	Identifier	_zip_error_set		6161732	0					
ANR	6161781	ArgumentList	& za -> error		6161732	1					
ANR	6161782	Argument	& za -> error		6161732	0					
ANR	6161783	UnaryOperationExpression	& za -> error		6161732	0					
ANR	6161784	UnaryOperator	&		6161732	0					
ANR	6161785	PtrMemberAccess	za -> error		6161732	1					
ANR	6161786	Identifier	za		6161732	0					
ANR	6161787	Identifier	error		6161732	1					
ANR	6161788	Argument	ZIP_ER_MEMORY		6161732	1					
ANR	6161789	Identifier	ZIP_ER_MEMORY		6161732	0					
ANR	6161790	Argument	0		6161732	2					
ANR	6161791	PrimaryExpression	0		6161732	0					
ANR	6161792	ReturnStatement	return NULL ;	600:12:14582:14593	6161732	1	True				
ANR	6161793	Identifier	NULL		6161732	0					
ANR	6161794	ExpressionStatement	"sprintf ( temp , ""%s/.zip.XXXXXX"" , za -> tempdir )"	602:8:14613:14657	6161732	1	True				
ANR	6161795	CallExpression	"sprintf ( temp , ""%s/.zip.XXXXXX"" , za -> tempdir )"		6161732	0					
ANR	6161796	Callee	sprintf		6161732	0					
ANR	6161797	Identifier	sprintf		6161732	0					
ANR	6161798	ArgumentList	temp		6161732	1					
ANR	6161799	Argument	temp		6161732	0					
ANR	6161800	Identifier	temp		6161732	0					
ANR	6161801	Argument	"""%s/.zip.XXXXXX"""		6161732	1					
ANR	6161802	PrimaryExpression	"""%s/.zip.XXXXXX"""		6161732	0					
ANR	6161803	Argument	za -> tempdir		6161732	2					
ANR	6161804	PtrMemberAccess	za -> tempdir		6161732	0					
ANR	6161805	Identifier	za		6161732	0					
ANR	6161806	Identifier	tempdir		6161732	1					
ANR	6161807	ElseStatement	else		6161732	0					
ANR	6161808	CompoundStatement		13:9:300:300	6161732	0					
ANR	6161809	IfStatement	if ( ( temp = ( char * ) malloc ( strlen ( za -> zn ) + 8 ) ) == NULL )		6161732	0					
ANR	6161810	Condition	( temp = ( char * ) malloc ( strlen ( za -> zn ) + 8 ) ) == NULL	605:12:14688:14734	6161732	0	True				
ANR	6161811	EqualityExpression	( temp = ( char * ) malloc ( strlen ( za -> zn ) + 8 ) ) == NULL		6161732	0		==			
ANR	6161812	AssignmentExpression	temp = ( char * ) malloc ( strlen ( za -> zn ) + 8 )		6161732	0		=			
ANR	6161813	Identifier	temp		6161732	0					
ANR	6161814	CastExpression	( char * ) malloc ( strlen ( za -> zn ) + 8 )		6161732	1					
ANR	6161815	CastTarget	char *		6161732	0					
ANR	6161816	CallExpression	malloc ( strlen ( za -> zn ) + 8 )		6161732	1					
ANR	6161817	Callee	malloc		6161732	0					
ANR	6161818	Identifier	malloc		6161732	0					
ANR	6161819	ArgumentList	strlen ( za -> zn ) + 8		6161732	1					
ANR	6161820	Argument	strlen ( za -> zn ) + 8		6161732	0					
ANR	6161821	AdditiveExpression	strlen ( za -> zn ) + 8		6161732	0		+			
ANR	6161822	CallExpression	strlen ( za -> zn )		6161732	0					
ANR	6161823	Callee	strlen		6161732	0					
ANR	6161824	Identifier	strlen		6161732	0					
ANR	6161825	ArgumentList	za -> zn		6161732	1					
ANR	6161826	Argument	za -> zn		6161732	0					
ANR	6161827	PtrMemberAccess	za -> zn		6161732	0					
ANR	6161828	Identifier	za		6161732	0					
ANR	6161829	Identifier	zn		6161732	1					
ANR	6161830	PrimaryExpression	8		6161732	1					
ANR	6161831	Identifier	NULL		6161732	1					
ANR	6161832	CompoundStatement		14:61:363:363	6161732	1					
ANR	6161833	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"	606:12:14751:14795	6161732	0	True				
ANR	6161834	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"		6161732	0					
ANR	6161835	Callee	_zip_error_set		6161732	0					
ANR	6161836	Identifier	_zip_error_set		6161732	0					
ANR	6161837	ArgumentList	& za -> error		6161732	1					
ANR	6161838	Argument	& za -> error		6161732	0					
ANR	6161839	UnaryOperationExpression	& za -> error		6161732	0					
ANR	6161840	UnaryOperator	&		6161732	0					
ANR	6161841	PtrMemberAccess	za -> error		6161732	1					
ANR	6161842	Identifier	za		6161732	0					
ANR	6161843	Identifier	error		6161732	1					
ANR	6161844	Argument	ZIP_ER_MEMORY		6161732	1					
ANR	6161845	Identifier	ZIP_ER_MEMORY		6161732	0					
ANR	6161846	Argument	0		6161732	2					
ANR	6161847	PrimaryExpression	0		6161732	0					
ANR	6161848	ReturnStatement	return NULL ;	607:12:14809:14820	6161732	1	True				
ANR	6161849	Identifier	NULL		6161732	0					
ANR	6161850	ExpressionStatement	"sprintf ( temp , ""%s.XXXXXX"" , za -> zn )"	609:8:14840:14874	6161732	1	True				
ANR	6161851	CallExpression	"sprintf ( temp , ""%s.XXXXXX"" , za -> zn )"		6161732	0					
ANR	6161852	Callee	sprintf		6161732	0					
ANR	6161853	Identifier	sprintf		6161732	0					
ANR	6161854	ArgumentList	temp		6161732	1					
ANR	6161855	Argument	temp		6161732	0					
ANR	6161856	Identifier	temp		6161732	0					
ANR	6161857	Argument	"""%s.XXXXXX"""		6161732	1					
ANR	6161858	PrimaryExpression	"""%s.XXXXXX"""		6161732	0					
ANR	6161859	Argument	za -> zn		6161732	2					
ANR	6161860	PtrMemberAccess	za -> zn		6161732	0					
ANR	6161861	Identifier	za		6161732	0					
ANR	6161862	Identifier	zn		6161732	1					
ANR	6161863	IfStatement	"if ( ( tfd = open ( temp , O_RDWR | O_CREAT , 0644 ) ) == - 1 )"		6161732	4					
ANR	6161864	Condition	"( tfd = open ( temp , O_RDWR | O_CREAT , 0644 ) ) == - 1"	612:8:14891:14934	6161732	0	True				
ANR	6161865	EqualityExpression	"( tfd = open ( temp , O_RDWR | O_CREAT , 0644 ) ) == - 1"		6161732	0		==			
ANR	6161866	AssignmentExpression	"tfd = open ( temp , O_RDWR | O_CREAT , 0644 )"		6161732	0		=			
ANR	6161867	Identifier	tfd		6161732	0					
ANR	6161868	CallExpression	"open ( temp , O_RDWR | O_CREAT , 0644 )"		6161732	1					
ANR	6161869	Callee	open		6161732	0					
ANR	6161870	Identifier	open		6161732	0					
ANR	6161871	ArgumentList	temp		6161732	1					
ANR	6161872	Argument	temp		6161732	0					
ANR	6161873	Identifier	temp		6161732	0					
ANR	6161874	Argument	O_RDWR | O_CREAT		6161732	1					
ANR	6161875	InclusiveOrExpression	O_RDWR | O_CREAT		6161732	0		|			
ANR	6161876	Identifier	O_RDWR		6161732	0					
ANR	6161877	Identifier	O_CREAT		6161732	1					
ANR	6161878	Argument	0644		6161732	2					
ANR	6161879	PrimaryExpression	0644		6161732	0					
ANR	6161880	UnaryOperationExpression	- 1		6161732	1					
ANR	6161881	UnaryOperator	-		6161732	0					
ANR	6161882	PrimaryExpression	1		6161732	1					
ANR	6161883	CompoundStatement		21:54:563:563	6161732	1					
ANR	6161884	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_TMPOPEN , errno )"	613:1:14940:14989	6161732	0	True				
ANR	6161885	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_TMPOPEN , errno )"		6161732	0					
ANR	6161886	Callee	_zip_error_set		6161732	0					
ANR	6161887	Identifier	_zip_error_set		6161732	0					
ANR	6161888	ArgumentList	& za -> error		6161732	1					
ANR	6161889	Argument	& za -> error		6161732	0					
ANR	6161890	UnaryOperationExpression	& za -> error		6161732	0					
ANR	6161891	UnaryOperator	&		6161732	0					
ANR	6161892	PtrMemberAccess	za -> error		6161732	1					
ANR	6161893	Identifier	za		6161732	0					
ANR	6161894	Identifier	error		6161732	1					
ANR	6161895	Argument	ZIP_ER_TMPOPEN		6161732	1					
ANR	6161896	Identifier	ZIP_ER_TMPOPEN		6161732	0					
ANR	6161897	Argument	errno		6161732	2					
ANR	6161898	Identifier	errno		6161732	0					
ANR	6161899	ExpressionStatement	free ( temp )	614:1:14992:15002	6161732	1	True				
ANR	6161900	CallExpression	free ( temp )		6161732	0					
ANR	6161901	Callee	free		6161732	0					
ANR	6161902	Identifier	free		6161732	0					
ANR	6161903	ArgumentList	temp		6161732	1					
ANR	6161904	Argument	temp		6161732	0					
ANR	6161905	Identifier	temp		6161732	0					
ANR	6161906	ReturnStatement	return NULL ;	615:1:15005:15016	6161732	2	True				
ANR	6161907	Identifier	NULL		6161732	0					
ANR	6161908	ExpressionStatement	umask ( S_IWGRP | S_IWOTH )	618:1:15031:15056	6161732	5	True				
ANR	6161909	CallExpression	umask ( S_IWGRP | S_IWOTH )		6161732	0					
ANR	6161910	Callee	umask		6161732	0					
ANR	6161911	Identifier	umask		6161732	0					
ANR	6161912	ArgumentList	S_IWGRP | S_IWOTH		6161732	1					
ANR	6161913	Argument	S_IWGRP | S_IWOTH		6161732	0					
ANR	6161914	InclusiveOrExpression	S_IWGRP | S_IWOTH		6161732	0		|			
ANR	6161915	Identifier	S_IWGRP		6161732	0					
ANR	6161916	Identifier	S_IWOTH		6161732	1					
ANR	6161917	IfStatement	if ( ( tfd = mkstemp ( temp ) ) == - 1 )		6161732	6					
ANR	6161918	Condition	( tfd = mkstemp ( temp ) ) == - 1	619:8:15066:15090	6161732	0	True				
ANR	6161919	EqualityExpression	( tfd = mkstemp ( temp ) ) == - 1		6161732	0		==			
ANR	6161920	AssignmentExpression	tfd = mkstemp ( temp )		6161732	0		=			
ANR	6161921	Identifier	tfd		6161732	0					
ANR	6161922	CallExpression	mkstemp ( temp )		6161732	1					
ANR	6161923	Callee	mkstemp		6161732	0					
ANR	6161924	Identifier	mkstemp		6161732	0					
ANR	6161925	ArgumentList	temp		6161732	1					
ANR	6161926	Argument	temp		6161732	0					
ANR	6161927	Identifier	temp		6161732	0					
ANR	6161928	UnaryOperationExpression	- 1		6161732	1					
ANR	6161929	UnaryOperator	-		6161732	0					
ANR	6161930	PrimaryExpression	1		6161732	1					
ANR	6161931	CompoundStatement		28:35:719:719	6161732	1					
ANR	6161932	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_TMPOPEN , errno )"	620:1:15096:15145	6161732	0	True				
ANR	6161933	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_TMPOPEN , errno )"		6161732	0					
ANR	6161934	Callee	_zip_error_set		6161732	0					
ANR	6161935	Identifier	_zip_error_set		6161732	0					
ANR	6161936	ArgumentList	& za -> error		6161732	1					
ANR	6161937	Argument	& za -> error		6161732	0					
ANR	6161938	UnaryOperationExpression	& za -> error		6161732	0					
ANR	6161939	UnaryOperator	&		6161732	0					
ANR	6161940	PtrMemberAccess	za -> error		6161732	1					
ANR	6161941	Identifier	za		6161732	0					
ANR	6161942	Identifier	error		6161732	1					
ANR	6161943	Argument	ZIP_ER_TMPOPEN		6161732	1					
ANR	6161944	Identifier	ZIP_ER_TMPOPEN		6161732	0					
ANR	6161945	Argument	errno		6161732	2					
ANR	6161946	Identifier	errno		6161732	0					
ANR	6161947	ExpressionStatement	free ( temp )	621:1:15148:15158	6161732	1	True				
ANR	6161948	CallExpression	free ( temp )		6161732	0					
ANR	6161949	Callee	free		6161732	0					
ANR	6161950	Identifier	free		6161732	0					
ANR	6161951	ArgumentList	temp		6161732	1					
ANR	6161952	Argument	temp		6161732	0					
ANR	6161953	Identifier	temp		6161732	0					
ANR	6161954	ReturnStatement	return NULL ;	622:1:15161:15172	6161732	2	True				
ANR	6161955	Identifier	NULL		6161732	0					
ANR	6161956	IfStatement	"if ( ( tfp = fdopen ( tfd , ""r+b"" ) ) == NULL )"		6161732	7					
ANR	6161957	Condition	"( tfp = fdopen ( tfd , ""r+b"" ) ) == NULL"	626:8:15196:15227	6161732	0	True				
ANR	6161958	EqualityExpression	"( tfp = fdopen ( tfd , ""r+b"" ) ) == NULL"		6161732	0		==			
ANR	6161959	AssignmentExpression	"tfp = fdopen ( tfd , ""r+b"" )"		6161732	0		=			
ANR	6161960	Identifier	tfp		6161732	0					
ANR	6161961	CallExpression	"fdopen ( tfd , ""r+b"" )"		6161732	1					
ANR	6161962	Callee	fdopen		6161732	0					
ANR	6161963	Identifier	fdopen		6161732	0					
ANR	6161964	ArgumentList	tfd		6161732	1					
ANR	6161965	Argument	tfd		6161732	0					
ANR	6161966	Identifier	tfd		6161732	0					
ANR	6161967	Argument	"""r+b"""		6161732	1					
ANR	6161968	PrimaryExpression	"""r+b"""		6161732	0					
ANR	6161969	Identifier	NULL		6161732	1					
ANR	6161970	CompoundStatement		35:42:856:856	6161732	1					
ANR	6161971	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_TMPOPEN , errno )"	627:1:15233:15282	6161732	0	True				
ANR	6161972	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_TMPOPEN , errno )"		6161732	0					
ANR	6161973	Callee	_zip_error_set		6161732	0					
ANR	6161974	Identifier	_zip_error_set		6161732	0					
ANR	6161975	ArgumentList	& za -> error		6161732	1					
ANR	6161976	Argument	& za -> error		6161732	0					
ANR	6161977	UnaryOperationExpression	& za -> error		6161732	0					
ANR	6161978	UnaryOperator	&		6161732	0					
ANR	6161979	PtrMemberAccess	za -> error		6161732	1					
ANR	6161980	Identifier	za		6161732	0					
ANR	6161981	Identifier	error		6161732	1					
ANR	6161982	Argument	ZIP_ER_TMPOPEN		6161732	1					
ANR	6161983	Identifier	ZIP_ER_TMPOPEN		6161732	0					
ANR	6161984	Argument	errno		6161732	2					
ANR	6161985	Identifier	errno		6161732	0					
ANR	6161986	ExpressionStatement	close ( tfd )	628:1:15285:15295	6161732	1	True				
ANR	6161987	CallExpression	close ( tfd )		6161732	0					
ANR	6161988	Callee	close		6161732	0					
ANR	6161989	Identifier	close		6161732	0					
ANR	6161990	ArgumentList	tfd		6161732	1					
ANR	6161991	Argument	tfd		6161732	0					
ANR	6161992	Identifier	tfd		6161732	0					
ANR	6161993	ExpressionStatement	( void ) remove ( temp )	629:1:15298:15316	6161732	2	True				
ANR	6161994	CastExpression	( void ) remove ( temp )		6161732	0					
ANR	6161995	CastTarget	void		6161732	0					
ANR	6161996	CallExpression	remove ( temp )		6161732	1					
ANR	6161997	Callee	remove		6161732	0					
ANR	6161998	Identifier	remove		6161732	0					
ANR	6161999	ArgumentList	temp		6161732	1					
ANR	6162000	Argument	temp		6161732	0					
ANR	6162001	Identifier	temp		6161732	0					
ANR	6162002	ExpressionStatement	free ( temp )	630:1:15319:15329	6161732	3	True				
ANR	6162003	CallExpression	free ( temp )		6161732	0					
ANR	6162004	Callee	free		6161732	0					
ANR	6162005	Identifier	free		6161732	0					
ANR	6162006	ArgumentList	temp		6161732	1					
ANR	6162007	Argument	temp		6161732	0					
ANR	6162008	Identifier	temp		6161732	0					
ANR	6162009	ReturnStatement	return NULL ;	631:1:15332:15343	6161732	4	True				
ANR	6162010	Identifier	NULL		6161732	0					
ANR	6162011	Statement	_setmode	640:4:15516:15523	6161732	8	True				
ANR	6162012	Statement	(	640:12:15524:15524	6161732	9	True				
ANR	6162013	Statement	_fileno	640:13:15525:15531	6161732	10	True				
ANR	6162014	Statement	(	640:20:15532:15532	6161732	11	True				
ANR	6162015	Statement	tfp	640:21:15533:15535	6161732	12	True				
ANR	6162016	Statement	)	640:24:15536:15536	6161732	13	True				
ANR	6162017	Statement	","	640:25:15537:15537	6161732	14	True				
ANR	6162018	Statement	O_BINARY	642:1:15553:15560	6161732	15	True				
ANR	6162019	Statement	)	648:1:15606:15606	6161732	16	True				
ANR	6162020	ExpressionStatement		648:2:15607:15607	6161732	17	True				
ANR	6162021	ExpressionStatement	* outp = tfp	652:4:15629:15640	6161732	18	True				
ANR	6162022	AssignmentExpression	* outp = tfp		6161732	0		=			
ANR	6162023	UnaryOperationExpression	* outp		6161732	0					
ANR	6162024	UnaryOperator	*		6161732	0					
ANR	6162025	Identifier	outp		6161732	1					
ANR	6162026	Identifier	tfp		6161732	1					
ANR	6162027	ReturnStatement	return temp ;	653:4:15646:15657	6161732	19	True				
ANR	6162028	Identifier	temp		6161732	0					
ANR	6162029	ReturnType	static char *		6161732	1					
ANR	6162030	Identifier	_zip_create_temp_output		6161732	2					
ANR	6162031	ParameterList	"struct zip * za , FILE * * outp"		6161732	3					
ANR	6162032	Parameter	struct zip * za	591:24:14344:14357	6161732	0	True				
ANR	6162033	ParameterType	struct zip *		6161732	0					
ANR	6162034	Identifier	za		6161732	1					
ANR	6162035	Parameter	FILE * * outp	591:40:14360:14370	6161732	1	True				
ANR	6162036	ParameterType	FILE * *		6161732	0					
ANR	6162037	Identifier	outp		6161732	1					
ANR	6162038	CFGEntryNode	ENTRY		6161732		True				
ANR	6162039	CFGExitNode	EXIT		6161732		True				
ANR	6162040	Symbol	malloc		6161732						
ANR	6162041	Symbol	mkstemp		6161732						
ANR	6162042	Symbol	temp		6161732						
ANR	6162043	Symbol	errno		6161732						
ANR	6162044	Symbol	NULL		6161732						
ANR	6162045	Symbol	& za -> error		6161732						
ANR	6162046	Symbol	S_IWGRP		6161732						
ANR	6162047	Symbol	O_CREAT		6161732						
ANR	6162048	Symbol	S_IWOTH		6161732						
ANR	6162049	Symbol	za		6161732						
ANR	6162050	Symbol	fdopen		6161732						
ANR	6162051	Symbol	* za		6161732						
ANR	6162052	Symbol	strlen		6161732						
ANR	6162053	Symbol	O_RDWR		6161732						
ANR	6162054	Symbol	tfd		6161732						
ANR	6162055	Symbol	outp		6161732						
ANR	6162056	Symbol	ZIP_ER_TMPOPEN		6161732						
ANR	6162057	Symbol	za -> zn		6161732						
ANR	6162058	Symbol	za -> tempdir		6161732						
ANR	6162059	Symbol	* outp		6161732						
ANR	6162060	Symbol	ZIP_ER_MEMORY		6161732						
ANR	6162061	Symbol	open		6161732						
ANR	6162062	Symbol	tfp		6161732						
ANR	6162063	Function	_zip_torrentzip_cmp	658:0:15665:15989							
ANR	6162064	FunctionDef	"_zip_torrentzip_cmp (const void * a , const void * b)"		6162063	0					
ANR	6162065	CompoundStatement		660:0:15726:15989	6162063	0					
ANR	6162066	IdentifierDeclStatement	const char * aname = ( ( const struct zip_filelist * ) a ) -> name ;	661:4:15732:15790	6162063	0	True				
ANR	6162067	IdentifierDecl	* aname = ( ( const struct zip_filelist * ) a ) -> name		6162063	0					
ANR	6162068	IdentifierDeclType	const char *		6162063	0					
ANR	6162069	Identifier	aname		6162063	1					
ANR	6162070	AssignmentExpression	* aname = ( ( const struct zip_filelist * ) a ) -> name		6162063	2		=			
ANR	6162071	Identifier	aname		6162063	0					
ANR	6162072	PtrMemberAccess	( ( const struct zip_filelist * ) a ) -> name		6162063	1					
ANR	6162073	CastExpression	( const struct zip_filelist * ) a		6162063	0					
ANR	6162074	CastTarget	const struct zip_filelist *		6162063	0					
ANR	6162075	Identifier	a		6162063	1					
ANR	6162076	Identifier	name		6162063	1					
ANR	6162077	IdentifierDeclStatement	const char * bname = ( ( const struct zip_filelist * ) b ) -> name ;	662:4:15796:15854	6162063	1	True				
ANR	6162078	IdentifierDecl	* bname = ( ( const struct zip_filelist * ) b ) -> name		6162063	0					
ANR	6162079	IdentifierDeclType	const char *		6162063	0					
ANR	6162080	Identifier	bname		6162063	1					
ANR	6162081	AssignmentExpression	* bname = ( ( const struct zip_filelist * ) b ) -> name		6162063	2		=			
ANR	6162082	Identifier	bname		6162063	0					
ANR	6162083	PtrMemberAccess	( ( const struct zip_filelist * ) b ) -> name		6162063	1					
ANR	6162084	CastExpression	( const struct zip_filelist * ) b		6162063	0					
ANR	6162085	CastTarget	const struct zip_filelist *		6162063	0					
ANR	6162086	Identifier	b		6162063	1					
ANR	6162087	Identifier	name		6162063	1					
ANR	6162088	IfStatement	if ( aname == NULL )		6162063	2					
ANR	6162089	Condition	aname == NULL	664:8:15865:15877	6162063	0	True				
ANR	6162090	EqualityExpression	aname == NULL		6162063	0		==			
ANR	6162091	Identifier	aname		6162063	0					
ANR	6162092	Identifier	NULL		6162063	1					
ANR	6162093	ReturnStatement	return ( bname != NULL ) * - 1 ;	665:1:15881:15908	6162063	1	True				
ANR	6162094	MultiplicativeExpression	( bname != NULL ) * - 1		6162063	0		*			
ANR	6162095	EqualityExpression	bname != NULL		6162063	0		!=			
ANR	6162096	Identifier	bname		6162063	0					
ANR	6162097	Identifier	NULL		6162063	1					
ANR	6162098	UnaryOperationExpression	- 1		6162063	1					
ANR	6162099	UnaryOperator	-		6162063	0					
ANR	6162100	PrimaryExpression	1		6162063	1					
ANR	6162101	ElseStatement	else		6162063	0					
ANR	6162102	IfStatement	if ( bname == NULL )		6162063	0					
ANR	6162103	Condition	bname == NULL	666:13:15923:15935	6162063	0	True				
ANR	6162104	EqualityExpression	bname == NULL		6162063	0		==			
ANR	6162105	Identifier	bname		6162063	0					
ANR	6162106	Identifier	NULL		6162063	1					
ANR	6162107	ReturnStatement	return 1 ;	667:1:15939:15947	6162063	1	True				
ANR	6162108	PrimaryExpression	1		6162063	0					
ANR	6162109	ReturnStatement	"return __strcasecmp ( aname , bname ) ;"	669:4:15954:15987	6162063	3	True				
ANR	6162110	CallExpression	"__strcasecmp ( aname , bname )"		6162063	0					
ANR	6162111	Callee	__strcasecmp		6162063	0					
ANR	6162112	Identifier	__strcasecmp		6162063	0					
ANR	6162113	ArgumentList	aname		6162063	1					
ANR	6162114	Argument	aname		6162063	0					
ANR	6162115	Identifier	aname		6162063	0					
ANR	6162116	Argument	bname		6162063	1					
ANR	6162117	Identifier	bname		6162063	0					
ANR	6162118	ReturnType	static int		6162063	1					
ANR	6162119	Identifier	_zip_torrentzip_cmp		6162063	2					
ANR	6162120	ParameterList	"const void * a , const void * b"		6162063	3					
ANR	6162121	Parameter	const void * a	659:20:15696:15708	6162063	0	True				
ANR	6162122	ParameterType	const void *		6162063	0					
ANR	6162123	Identifier	a		6162063	1					
ANR	6162124	Parameter	const void * b	659:35:15711:15723	6162063	1	True				
ANR	6162125	ParameterType	const void *		6162063	0					
ANR	6162126	Identifier	b		6162063	1					
ANR	6162127	CFGEntryNode	ENTRY		6162063		True				
ANR	6162128	CFGExitNode	EXIT		6162063		True				
ANR	6162129	Symbol	a		6162063						
ANR	6162130	Symbol	b		6162063						
ANR	6162131	Symbol	NULL		6162063						
ANR	6162132	Symbol	bname		6162063						
ANR	6162133	Symbol	( ( const struct zip_filelist * ) b ) -> name		6162063						
ANR	6162134	Symbol	aname		6162063						
ANR	6162135	Symbol	__strcasecmp		6162063						
ANR	6162136	Symbol	* a		6162063						
ANR	6162137	Symbol	( ( const struct zip_filelist * ) a ) -> name		6162063						
ANR	6162138	Symbol	* b		6162063						
