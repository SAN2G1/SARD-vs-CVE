command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	696631	File	data/converged/CVE-2019-16718~_radare2/cbin.c								
ANR	696632	Function	pair	30:0:860:1287							
ANR	696633	FunctionDef	"pair (const char * key , const char * val , int mode , bool last)"		696632	0					
ANR	696634	CompoundStatement		30:72:932:1287	696632	0					
ANR	696635	IfStatement	if ( ! val || ! * val )		696632	0					
ANR	696636	Condition	! val || ! * val	31:5:939:951	696632	0	True				
ANR	696637	OrExpression	! val || ! * val		696632	0		||			
ANR	696638	UnaryOperationExpression	! val		696632	0					
ANR	696639	UnaryOperator	!		696632	0					
ANR	696640	Identifier	val		696632	1					
ANR	696641	UnaryOperationExpression	! * val		696632	1					
ANR	696642	UnaryOperator	!		696632	0					
ANR	696643	UnaryOperationExpression	* val		696632	1					
ANR	696644	UnaryOperator	*		696632	0					
ANR	696645	Identifier	val		696632	1					
ANR	696646	CompoundStatement		2:20:21:21	696632	1					
ANR	696647	ReturnStatement	return ;	32:2:958:964	696632	0	True				
ANR	696648	IfStatement	if ( IS_MODE_JSON ( mode ) )		696632	1					
ANR	696649	Condition	IS_MODE_JSON ( mode )	34:5:974:992	696632	0	True				
ANR	696650	CallExpression	IS_MODE_JSON ( mode )		696632	0					
ANR	696651	Callee	IS_MODE_JSON		696632	0					
ANR	696652	Identifier	IS_MODE_JSON		696632	0					
ANR	696653	ArgumentList	mode		696632	1					
ANR	696654	Argument	mode		696632	0					
ANR	696655	Identifier	mode		696632	0					
ANR	696656	CompoundStatement		6:2:66:99	696632	1					
ANR	696657	IdentifierDeclStatement	"const char * lst = last ? """" : "","" ;"	35:2:999:1032	696632	0	True				
ANR	696658	IdentifierDecl	"* lst = last ? """" : "","""		696632	0					
ANR	696659	IdentifierDeclType	const char *		696632	0					
ANR	696660	Identifier	lst		696632	1					
ANR	696661	AssignmentExpression	"* lst = last ? """" : "","""		696632	2		=			
ANR	696662	Identifier	lst		696632	0					
ANR	696663	ConditionalExpression	"last ? """" : "","""		696632	1					
ANR	696664	Condition	last		696632	0					
ANR	696665	Identifier	last		696632	0					
ANR	696666	PrimaryExpression	""""""		696632	1					
ANR	696667	PrimaryExpression	""","""		696632	2					
ANR	696668	ExpressionStatement	"r_cons_printf ( ""\\""%s\\"":%s%s"" , key , val , lst )"	36:2:1036:1080	696632	1	True				
ANR	696669	CallExpression	"r_cons_printf ( ""\\""%s\\"":%s%s"" , key , val , lst )"		696632	0					
ANR	696670	Callee	r_cons_printf		696632	0					
ANR	696671	Identifier	r_cons_printf		696632	0					
ANR	696672	ArgumentList	"""\\""%s\\"":%s%s"""		696632	1					
ANR	696673	Argument	"""\\""%s\\"":%s%s"""		696632	0					
ANR	696674	PrimaryExpression	"""\\""%s\\"":%s%s"""		696632	0					
ANR	696675	Argument	key		696632	1					
ANR	696676	Identifier	key		696632	0					
ANR	696677	Argument	val		696632	2					
ANR	696678	Identifier	val		696632	0					
ANR	696679	Argument	lst		696632	3					
ANR	696680	Identifier	lst		696632	0					
ANR	696681	ElseStatement	else		696632	0					
ANR	696682	CompoundStatement		11:2:209:267	696632	0					
ANR	696683	IdentifierDeclStatement	char ws [ 16 ] ;	38:2:1094:1105	696632	0	True				
ANR	696684	IdentifierDecl	ws [ 16 ]		696632	0					
ANR	696685	IdentifierDeclType	char [ 16 ]		696632	0					
ANR	696686	Identifier	ws		696632	1					
ANR	696687	PrimaryExpression	16		696632	2					
ANR	696688	IdentifierDeclStatement	const int keyl = strlen ( key ) ;	39:2:1109:1138	696632	1	True				
ANR	696689	IdentifierDecl	keyl = strlen ( key )		696632	0					
ANR	696690	IdentifierDeclType	const int		696632	0					
ANR	696691	Identifier	keyl		696632	1					
ANR	696692	AssignmentExpression	keyl = strlen ( key )		696632	2		=			
ANR	696693	Identifier	keyl		696632	0					
ANR	696694	CallExpression	strlen ( key )		696632	1					
ANR	696695	Callee	strlen		696632	0					
ANR	696696	Identifier	strlen		696632	0					
ANR	696697	ArgumentList	key		696632	1					
ANR	696698	Argument	key		696632	0					
ANR	696699	Identifier	key		696632	0					
ANR	696700	IdentifierDeclStatement	const int wl = ( keyl > PAIR_WIDTH ) ? 0 : PAIR_WIDTH - keyl ;	40:2:1142:1200	696632	2	True				
ANR	696701	IdentifierDecl	wl = ( keyl > PAIR_WIDTH ) ? 0 : PAIR_WIDTH - keyl		696632	0					
ANR	696702	IdentifierDeclType	const int		696632	0					
ANR	696703	Identifier	wl		696632	1					
ANR	696704	AssignmentExpression	wl = ( keyl > PAIR_WIDTH ) ? 0 : PAIR_WIDTH - keyl		696632	2		=			
ANR	696705	Identifier	wl		696632	0					
ANR	696706	ConditionalExpression	( keyl > PAIR_WIDTH ) ? 0 : PAIR_WIDTH - keyl		696632	1					
ANR	696707	Condition	keyl > PAIR_WIDTH		696632	0					
ANR	696708	RelationalExpression	keyl > PAIR_WIDTH		696632	0		>			
ANR	696709	Identifier	keyl		696632	0					
ANR	696710	Identifier	PAIR_WIDTH		696632	1					
ANR	696711	PrimaryExpression	0		696632	1					
ANR	696712	AdditiveExpression	PAIR_WIDTH - keyl		696632	2		-			
ANR	696713	Identifier	PAIR_WIDTH		696632	0					
ANR	696714	Identifier	keyl		696632	1					
ANR	696715	ExpressionStatement	"memset ( ws , ' ' , wl )"	41:2:1204:1224	696632	3	True				
ANR	696716	CallExpression	"memset ( ws , ' ' , wl )"		696632	0					
ANR	696717	Callee	memset		696632	0					
ANR	696718	Identifier	memset		696632	0					
ANR	696719	ArgumentList	ws		696632	1					
ANR	696720	Argument	ws		696632	0					
ANR	696721	Identifier	ws		696632	0					
ANR	696722	Argument	' '		696632	1					
ANR	696723	PrimaryExpression	' '		696632	0					
ANR	696724	Argument	wl		696632	2					
ANR	696725	Identifier	wl		696632	0					
ANR	696726	ExpressionStatement	ws [ wl ] = 0	42:2:1228:1238	696632	4	True				
ANR	696727	AssignmentExpression	ws [ wl ] = 0		696632	0		=			
ANR	696728	ArrayIndexing	ws [ wl ]		696632	0					
ANR	696729	Identifier	ws		696632	0					
ANR	696730	Identifier	wl		696632	1					
ANR	696731	PrimaryExpression	0		696632	1					
ANR	696732	ExpressionStatement	"r_cons_printf ( ""%s%s%s\\n"" , key , ws , val )"	43:2:1242:1282	696632	5	True				
ANR	696733	CallExpression	"r_cons_printf ( ""%s%s%s\\n"" , key , ws , val )"		696632	0					
ANR	696734	Callee	r_cons_printf		696632	0					
ANR	696735	Identifier	r_cons_printf		696632	0					
ANR	696736	ArgumentList	"""%s%s%s\\n"""		696632	1					
ANR	696737	Argument	"""%s%s%s\\n"""		696632	0					
ANR	696738	PrimaryExpression	"""%s%s%s\\n"""		696632	0					
ANR	696739	Argument	key		696632	1					
ANR	696740	Identifier	key		696632	0					
ANR	696741	Argument	ws		696632	2					
ANR	696742	Identifier	ws		696632	0					
ANR	696743	Argument	val		696632	3					
ANR	696744	Identifier	val		696632	0					
ANR	696745	ReturnType	static void		696632	1					
ANR	696746	Identifier	pair		696632	2					
ANR	696747	ParameterList	"const char * key , const char * val , int mode , bool last"		696632	3					
ANR	696748	Parameter	const char * key	30:17:877:891	696632	0	True				
ANR	696749	ParameterType	const char *		696632	0					
ANR	696750	Identifier	key		696632	1					
ANR	696751	Parameter	const char * val	30:34:894:908	696632	1	True				
ANR	696752	ParameterType	const char *		696632	0					
ANR	696753	Identifier	val		696632	1					
ANR	696754	Parameter	int mode	30:51:911:918	696632	2	True				
ANR	696755	ParameterType	int		696632	0					
ANR	696756	Identifier	mode		696632	1					
ANR	696757	Parameter	bool last	30:61:921:929	696632	3	True				
ANR	696758	ParameterType	bool		696632	0					
ANR	696759	Identifier	last		696632	1					
ANR	696760	CFGEntryNode	ENTRY		696632		True				
ANR	696761	CFGExitNode	EXIT		696632		True				
ANR	696762	Symbol	val		696632						
ANR	696763	Symbol	* ws		696632						
ANR	696764	Symbol	last		696632						
ANR	696765	Symbol	IS_MODE_JSON		696632						
ANR	696766	Symbol	* val		696632						
ANR	696767	Symbol	lst		696632						
ANR	696768	Symbol	mode		696632						
ANR	696769	Symbol	strlen		696632						
ANR	696770	Symbol	PAIR_WIDTH		696632						
ANR	696771	Symbol	wl		696632						
ANR	696772	Symbol	* wl		696632						
ANR	696773	Symbol	ws		696632						
ANR	696774	Symbol	key		696632						
ANR	696775	Symbol	keyl		696632						
ANR	696776	Function	pair_bool	47:0:1290:1405							
ANR	696777	FunctionDef	"pair_bool (const char * key , bool val , int mode , bool last)"		696776	0					
ANR	696778	CompoundStatement		47:70:1360:1405	696776	0					
ANR	696779	ExpressionStatement	"pair ( key , r_str_bool ( val ) , mode , last )"	48:1:1363:1403	696776	0	True				
ANR	696780	CallExpression	"pair ( key , r_str_bool ( val ) , mode , last )"		696776	0					
ANR	696781	Callee	pair		696776	0					
ANR	696782	Identifier	pair		696776	0					
ANR	696783	ArgumentList	key		696776	1					
ANR	696784	Argument	key		696776	0					
ANR	696785	Identifier	key		696776	0					
ANR	696786	Argument	r_str_bool ( val )		696776	1					
ANR	696787	CallExpression	r_str_bool ( val )		696776	0					
ANR	696788	Callee	r_str_bool		696776	0					
ANR	696789	Identifier	r_str_bool		696776	0					
ANR	696790	ArgumentList	val		696776	1					
ANR	696791	Argument	val		696776	0					
ANR	696792	Identifier	val		696776	0					
ANR	696793	Argument	mode		696776	2					
ANR	696794	Identifier	mode		696776	0					
ANR	696795	Argument	last		696776	3					
ANR	696796	Identifier	last		696776	0					
ANR	696797	ReturnType	static void		696776	1					
ANR	696798	Identifier	pair_bool		696776	2					
ANR	696799	ParameterList	"const char * key , bool val , int mode , bool last"		696776	3					
ANR	696800	Parameter	const char * key	47:22:1312:1326	696776	0	True				
ANR	696801	ParameterType	const char *		696776	0					
ANR	696802	Identifier	key		696776	1					
ANR	696803	Parameter	bool val	47:39:1329:1336	696776	1	True				
ANR	696804	ParameterType	bool		696776	0					
ANR	696805	Identifier	val		696776	1					
ANR	696806	Parameter	int mode	47:49:1339:1346	696776	2	True				
ANR	696807	ParameterType	int		696776	0					
ANR	696808	Identifier	mode		696776	1					
ANR	696809	Parameter	bool last	47:59:1349:1357	696776	3	True				
ANR	696810	ParameterType	bool		696776	0					
ANR	696811	Identifier	last		696776	1					
ANR	696812	CFGEntryNode	ENTRY		696776		True				
ANR	696813	CFGExitNode	EXIT		696776		True				
ANR	696814	Symbol	val		696776						
ANR	696815	Symbol	mode		696776						
ANR	696816	Symbol	r_str_bool		696776						
ANR	696817	Symbol	last		696776						
ANR	696818	Symbol	key		696776						
ANR	696819	Function	pair_int	51:0:1408:1524							
ANR	696820	FunctionDef	"pair_int (const char * key , int val , int mode , bool last)"		696819	0					
ANR	696821	CompoundStatement		51:68:1476:1524	696819	0					
ANR	696822	ExpressionStatement	"pair ( key , sdb_fmt ( ""%d"" , val ) , mode , last )"	52:1:1479:1522	696819	0	True				
ANR	696823	CallExpression	"pair ( key , sdb_fmt ( ""%d"" , val ) , mode , last )"		696819	0					
ANR	696824	Callee	pair		696819	0					
ANR	696825	Identifier	pair		696819	0					
ANR	696826	ArgumentList	key		696819	1					
ANR	696827	Argument	key		696819	0					
ANR	696828	Identifier	key		696819	0					
ANR	696829	Argument	"sdb_fmt ( ""%d"" , val )"		696819	1					
ANR	696830	CallExpression	"sdb_fmt ( ""%d"" , val )"		696819	0					
ANR	696831	Callee	sdb_fmt		696819	0					
ANR	696832	Identifier	sdb_fmt		696819	0					
ANR	696833	ArgumentList	"""%d"""		696819	1					
ANR	696834	Argument	"""%d"""		696819	0					
ANR	696835	PrimaryExpression	"""%d"""		696819	0					
ANR	696836	Argument	val		696819	1					
ANR	696837	Identifier	val		696819	0					
ANR	696838	Argument	mode		696819	2					
ANR	696839	Identifier	mode		696819	0					
ANR	696840	Argument	last		696819	3					
ANR	696841	Identifier	last		696819	0					
ANR	696842	ReturnType	static void		696819	1					
ANR	696843	Identifier	pair_int		696819	2					
ANR	696844	ParameterList	"const char * key , int val , int mode , bool last"		696819	3					
ANR	696845	Parameter	const char * key	51:21:1429:1443	696819	0	True				
ANR	696846	ParameterType	const char *		696819	0					
ANR	696847	Identifier	key		696819	1					
ANR	696848	Parameter	int val	51:38:1446:1452	696819	1	True				
ANR	696849	ParameterType	int		696819	0					
ANR	696850	Identifier	val		696819	1					
ANR	696851	Parameter	int mode	51:47:1455:1462	696819	2	True				
ANR	696852	ParameterType	int		696819	0					
ANR	696853	Identifier	mode		696819	1					
ANR	696854	Parameter	bool last	51:57:1465:1473	696819	3	True				
ANR	696855	ParameterType	bool		696819	0					
ANR	696856	Identifier	last		696819	1					
ANR	696857	CFGEntryNode	ENTRY		696819		True				
ANR	696858	CFGExitNode	EXIT		696819		True				
ANR	696859	Symbol	val		696819						
ANR	696860	Symbol	mode		696819						
ANR	696861	Symbol	last		696819						
ANR	696862	Symbol	sdb_fmt		696819						
ANR	696863	Symbol	key		696819						
ANR	696864	Function	pair_ut64	55:0:1527:1651							
ANR	696865	FunctionDef	"pair_ut64 (const char * key , ut64 val , int mode , bool last)"		696864	0					
ANR	696866	CompoundStatement		55:70:1597:1651	696864	0					
ANR	696867	Statement	pair	56:1:1600:1603	696864	0	True				
ANR	696868	Statement	(	56:6:1605:1605	696864	1	True				
ANR	696869	Statement	key	56:7:1606:1608	696864	2	True				
ANR	696870	Statement	","	56:10:1609:1609	696864	3	True				
ANR	696871	Statement	sdb_fmt	56:12:1611:1617	696864	4	True				
ANR	696872	Statement	(	56:20:1619:1619	696864	5	True				
ANR	696873	Statement	"""%"""	56:21:1620:1622	696864	6	True				
ANR	696874	Statement	PFMT64d	56:24:1623:1629	696864	7	True				
ANR	696875	Statement	","	56:31:1630:1630	696864	8	True				
ANR	696876	Statement	val	56:33:1632:1634	696864	9	True				
ANR	696877	Statement	)	56:36:1635:1635	696864	10	True				
ANR	696878	Statement	","	56:37:1636:1636	696864	11	True				
ANR	696879	Statement	mode	56:39:1638:1641	696864	12	True				
ANR	696880	Statement	","	56:43:1642:1642	696864	13	True				
ANR	696881	Statement	last	56:45:1644:1647	696864	14	True				
ANR	696882	Statement	)	56:49:1648:1648	696864	15	True				
ANR	696883	ExpressionStatement		56:50:1649:1649	696864	16	True				
ANR	696884	ReturnType	static void		696864	1					
ANR	696885	Identifier	pair_ut64		696864	2					
ANR	696886	ParameterList	"const char * key , ut64 val , int mode , bool last"		696864	3					
ANR	696887	Parameter	const char * key	55:22:1549:1563	696864	0	True				
ANR	696888	ParameterType	const char *		696864	0					
ANR	696889	Identifier	key		696864	1					
ANR	696890	Parameter	ut64 val	55:39:1566:1573	696864	1	True				
ANR	696891	ParameterType	ut64		696864	0					
ANR	696892	Identifier	val		696864	1					
ANR	696893	Parameter	int mode	55:49:1576:1583	696864	2	True				
ANR	696894	ParameterType	int		696864	0					
ANR	696895	Identifier	mode		696864	1					
ANR	696896	Parameter	bool last	55:59:1586:1594	696864	3	True				
ANR	696897	ParameterType	bool		696864	0					
ANR	696898	Identifier	last		696864	1					
ANR	696899	CFGEntryNode	ENTRY		696864		True				
ANR	696900	CFGExitNode	EXIT		696864		True				
ANR	696901	Symbol	val		696864						
ANR	696902	Symbol	mode		696864						
ANR	696903	Symbol	last		696864						
ANR	696904	Symbol	key		696864						
ANR	696905	Function	__filterQuotedShell	59:0:1654:2014							
ANR	696906	FunctionDef	__filterQuotedShell (const char * arg)		696905	0					
ANR	696907	CompoundStatement		59:50:1704:2014	696905	0					
ANR	696908	ExpressionStatement	"r_return_val_if_fail ( arg , NULL )"	60:1:1707:1739	696905	0	True				
ANR	696909	CallExpression	"r_return_val_if_fail ( arg , NULL )"		696905	0					
ANR	696910	Callee	r_return_val_if_fail		696905	0					
ANR	696911	Identifier	r_return_val_if_fail		696905	0					
ANR	696912	ArgumentList	arg		696905	1					
ANR	696913	Argument	arg		696905	0					
ANR	696914	Identifier	arg		696905	0					
ANR	696915	Argument	NULL		696905	1					
ANR	696916	Identifier	NULL		696905	0					
ANR	696917	IdentifierDeclStatement	char * a = malloc ( strlen ( arg ) + 1 ) ;	61:1:1742:1777	696905	1	True				
ANR	696918	IdentifierDecl	* a = malloc ( strlen ( arg ) + 1 )		696905	0					
ANR	696919	IdentifierDeclType	char *		696905	0					
ANR	696920	Identifier	a		696905	1					
ANR	696921	AssignmentExpression	* a = malloc ( strlen ( arg ) + 1 )		696905	2		=			
ANR	696922	Identifier	a		696905	0					
ANR	696923	CallExpression	malloc ( strlen ( arg ) + 1 )		696905	1					
ANR	696924	Callee	malloc		696905	0					
ANR	696925	Identifier	malloc		696905	0					
ANR	696926	ArgumentList	strlen ( arg ) + 1		696905	1					
ANR	696927	Argument	strlen ( arg ) + 1		696905	0					
ANR	696928	AdditiveExpression	strlen ( arg ) + 1		696905	0		+			
ANR	696929	CallExpression	strlen ( arg )		696905	0					
ANR	696930	Callee	strlen		696905	0					
ANR	696931	Identifier	strlen		696905	0					
ANR	696932	ArgumentList	arg		696905	1					
ANR	696933	Argument	arg		696905	0					
ANR	696934	Identifier	arg		696905	0					
ANR	696935	PrimaryExpression	1		696905	1					
ANR	696936	IfStatement	if ( ! a )		696905	2					
ANR	696937	Condition	! a	62:5:1784:1785	696905	0	True				
ANR	696938	UnaryOperationExpression	! a		696905	0					
ANR	696939	UnaryOperator	!		696905	0					
ANR	696940	Identifier	a		696905	1					
ANR	696941	CompoundStatement		4:9:83:83	696905	1					
ANR	696942	ReturnStatement	return NULL ;	63:2:1792:1803	696905	0	True				
ANR	696943	Identifier	NULL		696905	0					
ANR	696944	IdentifierDeclStatement	char * b = a ;	65:1:1809:1820	696905	3	True				
ANR	696945	IdentifierDecl	* b = a		696905	0					
ANR	696946	IdentifierDeclType	char *		696905	0					
ANR	696947	Identifier	b		696905	1					
ANR	696948	AssignmentExpression	* b = a		696905	2		=			
ANR	696949	Identifier	a		696905	0					
ANR	696950	Identifier	a		696905	1					
ANR	696951	WhileStatement	while ( * arg )		696905	4					
ANR	696952	Condition	* arg	66:8:1830:1833	696905	0	True				
ANR	696953	UnaryOperationExpression	* arg		696905	0					
ANR	696954	UnaryOperator	*		696905	0					
ANR	696955	Identifier	arg		696905	1					
ANR	696956	CompoundStatement		8:14:131:131	696905	1					
ANR	696957	SwitchStatement	switch ( * arg )		696905	0					
ANR	696958	Condition	* arg	67:10:1848:1851	696905	0	True				
ANR	696959	UnaryOperationExpression	* arg		696905	0					
ANR	696960	UnaryOperator	*		696905	0					
ANR	696961	Identifier	arg		696905	1					
ANR	696962	CompoundStatement		9:16:149:149	696905	1					
ANR	696963	Label	case ' ' :	68:2:1858:1866	696905	0	True				
ANR	696964	Label	case '=' :	69:2:1870:1878	696905	1	True				
ANR	696965	Label	"case '""' :"	70:2:1882:1890	696905	2	True				
ANR	696966	Label	case '\\\\' :	71:2:1894:1903	696905	3	True				
ANR	696967	Label	case '\\r' :	72:2:1907:1916	696905	4	True				
ANR	696968	Label	case '\\n' :	73:2:1920:1929	696905	5	True				
ANR	696969	BreakStatement	break ;	74:3:1934:1939	696905	6	True				
ANR	696970	Label	default :	75:2:1943:1950	696905	7	True				
ANR	696971	Identifier	default		696905	0					
ANR	696972	ExpressionStatement	* b ++ = * arg	76:3:1955:1966	696905	8	True				
ANR	696973	AssignmentExpression	* b ++ = * arg		696905	0		=			
ANR	696974	UnaryOperationExpression	* b ++		696905	0					
ANR	696975	UnaryOperator	*		696905	0					
ANR	696976	PostIncDecOperationExpression	b ++		696905	1					
ANR	696977	Identifier	b		696905	0					
ANR	696978	IncDec	++		696905	1					
ANR	696979	UnaryOperationExpression	* arg		696905	1					
ANR	696980	UnaryOperator	*		696905	0					
ANR	696981	Identifier	arg		696905	1					
ANR	696982	BreakStatement	break ;	77:3:1971:1976	696905	9	True				
ANR	696983	ExpressionStatement	arg ++	79:2:1984:1989	696905	1	True				
ANR	696984	PostIncDecOperationExpression	arg ++		696905	0					
ANR	696985	Identifier	arg		696905	0					
ANR	696986	IncDec	++		696905	1					
ANR	696987	ExpressionStatement	* b = 0	81:1:1995:2001	696905	5	True				
ANR	696988	AssignmentExpression	* b = 0		696905	0		=			
ANR	696989	UnaryOperationExpression	* b		696905	0					
ANR	696990	UnaryOperator	*		696905	0					
ANR	696991	Identifier	b		696905	1					
ANR	696992	PrimaryExpression	0		696905	1					
ANR	696993	ReturnStatement	return a ;	82:1:2004:2012	696905	6	True				
ANR	696994	Identifier	a		696905	0					
ANR	696995	ReturnType	static char *		696905	1					
ANR	696996	Identifier	__filterQuotedShell		696905	2					
ANR	696997	ParameterList	const char * arg		696905	3					
ANR	696998	Parameter	const char * arg	59:33:1687:1701	696905	0	True				
ANR	696999	ParameterType	const char *		696905	0					
ANR	697000	Identifier	arg		696905	1					
ANR	697001	CFGEntryNode	ENTRY		696905		True				
ANR	697002	CFGExitNode	EXIT		696905		True				
ANR	697003	Symbol	a		696905						
ANR	697004	Symbol	strlen		696905						
ANR	697005	Symbol	malloc		696905						
ANR	697006	Symbol	b		696905						
ANR	697007	Symbol	NULL		696905						
ANR	697008	Symbol	arg		696905						
ANR	697009	Symbol	* b		696905						
ANR	697010	Symbol	* arg		696905						
ANR	697011	Symbol	* b ++		696905						
ANR	697012	Function	__filterShell	85:0:2052:2418							
ANR	697013	FunctionDef	__filterShell (const char * arg)		697012	0					
ANR	697014	CompoundStatement		85:44:2096:2418	697012	0					
ANR	697015	ExpressionStatement	"r_return_val_if_fail ( arg , NULL )"	86:1:2099:2131	697012	0	True				
ANR	697016	CallExpression	"r_return_val_if_fail ( arg , NULL )"		697012	0					
ANR	697017	Callee	r_return_val_if_fail		697012	0					
ANR	697018	Identifier	r_return_val_if_fail		697012	0					
ANR	697019	ArgumentList	arg		697012	1					
ANR	697020	Argument	arg		697012	0					
ANR	697021	Identifier	arg		697012	0					
ANR	697022	Argument	NULL		697012	1					
ANR	697023	Identifier	NULL		697012	0					
ANR	697024	IdentifierDeclStatement	char * a = malloc ( strlen ( arg ) + 1 ) ;	87:1:2134:2169	697012	1	True				
ANR	697025	IdentifierDecl	* a = malloc ( strlen ( arg ) + 1 )		697012	0					
ANR	697026	IdentifierDeclType	char *		697012	0					
ANR	697027	Identifier	a		697012	1					
ANR	697028	AssignmentExpression	* a = malloc ( strlen ( arg ) + 1 )		697012	2		=			
ANR	697029	Identifier	a		697012	0					
ANR	697030	CallExpression	malloc ( strlen ( arg ) + 1 )		697012	1					
ANR	697031	Callee	malloc		697012	0					
ANR	697032	Identifier	malloc		697012	0					
ANR	697033	ArgumentList	strlen ( arg ) + 1		697012	1					
ANR	697034	Argument	strlen ( arg ) + 1		697012	0					
ANR	697035	AdditiveExpression	strlen ( arg ) + 1		697012	0		+			
ANR	697036	CallExpression	strlen ( arg )		697012	0					
ANR	697037	Callee	strlen		697012	0					
ANR	697038	Identifier	strlen		697012	0					
ANR	697039	ArgumentList	arg		697012	1					
ANR	697040	Argument	arg		697012	0					
ANR	697041	Identifier	arg		697012	0					
ANR	697042	PrimaryExpression	1		697012	1					
ANR	697043	IfStatement	if ( ! a )		697012	2					
ANR	697044	Condition	! a	88:5:2176:2177	697012	0	True				
ANR	697045	UnaryOperationExpression	! a		697012	0					
ANR	697046	UnaryOperator	!		697012	0					
ANR	697047	Identifier	a		697012	1					
ANR	697048	CompoundStatement		4:9:83:83	697012	1					
ANR	697049	ReturnStatement	return NULL ;	89:2:2184:2195	697012	0	True				
ANR	697050	Identifier	NULL		697012	0					
ANR	697051	IdentifierDeclStatement	char * b = a ;	91:1:2201:2212	697012	3	True				
ANR	697052	IdentifierDecl	* b = a		697012	0					
ANR	697053	IdentifierDeclType	char *		697012	0					
ANR	697054	Identifier	b		697012	1					
ANR	697055	AssignmentExpression	* b = a		697012	2		=			
ANR	697056	Identifier	a		697012	0					
ANR	697057	Identifier	a		697012	1					
ANR	697058	WhileStatement	while ( * arg )		697012	4					
ANR	697059	Condition	* arg	92:8:2222:2225	697012	0	True				
ANR	697060	UnaryOperationExpression	* arg		697012	0					
ANR	697061	UnaryOperator	*		697012	0					
ANR	697062	Identifier	arg		697012	1					
ANR	697063	CompoundStatement		9:2:135:149	697012	1					
ANR	697064	IdentifierDeclStatement	char ch = * arg ;	93:2:2232:2246	697012	0	True				
ANR	697065	IdentifierDecl	ch = * arg		697012	0					
ANR	697066	IdentifierDeclType	char		697012	0					
ANR	697067	Identifier	ch		697012	1					
ANR	697068	AssignmentExpression	ch = * arg		697012	2		=			
ANR	697069	Identifier	ch		697012	0					
ANR	697070	UnaryOperationExpression	* arg		697012	1					
ANR	697071	UnaryOperator	*		697012	0					
ANR	697072	Identifier	arg		697012	1					
ANR	697073	SwitchStatement	switch ( ch )		697012	1					
ANR	697074	Condition	ch	94:10:2258:2259	697012	0	True				
ANR	697075	Identifier	ch		697012	0					
ANR	697076	CompoundStatement		10:14:165:165	697012	1					
ANR	697077	Label	case '@' :	95:2:2266:2274	697012	0	True				
ANR	697078	Label	case '`' :	96:2:2278:2286	697012	1	True				
ANR	697079	Label	case '|' :	97:2:2290:2298	697012	2	True				
ANR	697080	Label	case ';' :	98:2:2302:2310	697012	3	True				
ANR	697081	Label	case '=' :	99:2:2314:2322	697012	4	True				
ANR	697082	Label	case '\\n' :	100:2:2326:2335	697012	5	True				
ANR	697083	BreakStatement	break ;	101:3:2340:2345	697012	6	True				
ANR	697084	Label	default :	102:2:2349:2356	697012	7	True				
ANR	697085	Identifier	default		697012	0					
ANR	697086	ExpressionStatement	* b ++ = ch	103:3:2361:2370	697012	8	True				
ANR	697087	AssignmentExpression	* b ++ = ch		697012	0		=			
ANR	697088	UnaryOperationExpression	* b ++		697012	0					
ANR	697089	UnaryOperator	*		697012	0					
ANR	697090	PostIncDecOperationExpression	b ++		697012	1					
ANR	697091	Identifier	b		697012	0					
ANR	697092	IncDec	++		697012	1					
ANR	697093	Identifier	ch		697012	1					
ANR	697094	BreakStatement	break ;	104:3:2375:2380	697012	9	True				
ANR	697095	ExpressionStatement	arg ++	106:2:2388:2393	697012	2	True				
ANR	697096	PostIncDecOperationExpression	arg ++		697012	0					
ANR	697097	Identifier	arg		697012	0					
ANR	697098	IncDec	++		697012	1					
ANR	697099	ExpressionStatement	* b = 0	108:1:2399:2405	697012	5	True				
ANR	697100	AssignmentExpression	* b = 0		697012	0		=			
ANR	697101	UnaryOperationExpression	* b		697012	0					
ANR	697102	UnaryOperator	*		697012	0					
ANR	697103	Identifier	b		697012	1					
ANR	697104	PrimaryExpression	0		697012	1					
ANR	697105	ReturnStatement	return a ;	109:1:2408:2416	697012	6	True				
ANR	697106	Identifier	a		697012	0					
ANR	697107	ReturnType	static char *		697012	1					
ANR	697108	Identifier	__filterShell		697012	2					
ANR	697109	ParameterList	const char * arg		697012	3					
ANR	697110	Parameter	const char * arg	85:27:2079:2093	697012	0	True				
ANR	697111	ParameterType	const char *		697012	0					
ANR	697112	Identifier	arg		697012	1					
ANR	697113	CFGEntryNode	ENTRY		697012		True				
ANR	697114	CFGExitNode	EXIT		697012		True				
ANR	697115	Symbol	malloc		697012						
ANR	697116	Symbol	a		697012						
ANR	697117	Symbol	strlen		697012						
ANR	697118	Symbol	b		697012						
ANR	697119	Symbol	NULL		697012						
ANR	697120	Symbol	ch		697012						
ANR	697121	Symbol	arg		697012						
ANR	697122	Symbol	* b		697012						
ANR	697123	Symbol	* arg		697012						
ANR	697124	Symbol	* b ++		697012						
ANR	697125	Function	pair_ut64x	112:0:2421:2630							
ANR	697126	FunctionDef	"pair_ut64x (const char * key , ut64 val , int mode , bool last)"		697125	0					
ANR	697127	CompoundStatement		112:71:2492:2630	697125	0					
ANR	697128	Statement	const	113:1:2495:2499	697125	0	True				
ANR	697129	Statement	char	113:7:2501:2504	697125	1	True				
ANR	697130	Statement	*	113:12:2506:2506	697125	2	True				
ANR	697131	Statement	str_val	113:13:2507:2513	697125	3	True				
ANR	697132	Statement	=	113:21:2515:2515	697125	4	True				
ANR	697133	Statement	IS_MODE_JSON	113:23:2517:2528	697125	5	True				
ANR	697134	Statement	(	113:36:2530:2530	697125	6	True				
ANR	697135	Statement	mode	113:37:2531:2534	697125	7	True				
ANR	697136	Statement	)	113:41:2535:2535	697125	8	True				
ANR	697137	Statement	?	113:43:2537:2537	697125	9	True				
ANR	697138	Statement	sdb_fmt	113:45:2539:2545	697125	10	True				
ANR	697139	Statement	(	113:53:2547:2547	697125	11	True				
ANR	697140	Statement	"""%"""	113:54:2548:2550	697125	12	True				
ANR	697141	Statement	PFMT64d	113:57:2551:2557	697125	13	True				
ANR	697142	Statement	","	113:64:2558:2558	697125	14	True				
ANR	697143	Statement	val	113:66:2560:2562	697125	15	True				
ANR	697144	Statement	)	113:69:2563:2563	697125	16	True				
ANR	697145	Statement	:	113:71:2565:2565	697125	17	True				
ANR	697146	Statement	sdb_fmt	113:73:2567:2573	697125	18	True				
ANR	697147	Statement	(	113:81:2575:2575	697125	19	True				
ANR	697148	Statement	"""0x%"""	113:82:2576:2580	697125	20	True				
ANR	697149	Statement	PFMT64x	113:87:2581:2587	697125	21	True				
ANR	697150	Statement	","	113:94:2588:2588	697125	22	True				
ANR	697151	Statement	val	113:96:2590:2592	697125	23	True				
ANR	697152	Statement	)	113:99:2593:2593	697125	24	True				
ANR	697153	ExpressionStatement		113:100:2594:2594	697125	25	True				
ANR	697154	ExpressionStatement	"pair ( key , str_val , mode , last )"	114:1:2597:2628	697125	26	True				
ANR	697155	CallExpression	"pair ( key , str_val , mode , last )"		697125	0					
ANR	697156	Callee	pair		697125	0					
ANR	697157	Identifier	pair		697125	0					
ANR	697158	ArgumentList	key		697125	1					
ANR	697159	Argument	key		697125	0					
ANR	697160	Identifier	key		697125	0					
ANR	697161	Argument	str_val		697125	1					
ANR	697162	Identifier	str_val		697125	0					
ANR	697163	Argument	mode		697125	2					
ANR	697164	Identifier	mode		697125	0					
ANR	697165	Argument	last		697125	3					
ANR	697166	Identifier	last		697125	0					
ANR	697167	ReturnType	static void		697125	1					
ANR	697168	Identifier	pair_ut64x		697125	2					
ANR	697169	ParameterList	"const char * key , ut64 val , int mode , bool last"		697125	3					
ANR	697170	Parameter	const char * key	112:23:2444:2458	697125	0	True				
ANR	697171	ParameterType	const char *		697125	0					
ANR	697172	Identifier	key		697125	1					
ANR	697173	Parameter	ut64 val	112:40:2461:2468	697125	1	True				
ANR	697174	ParameterType	ut64		697125	0					
ANR	697175	Identifier	val		697125	1					
ANR	697176	Parameter	int mode	112:50:2471:2478	697125	2	True				
ANR	697177	ParameterType	int		697125	0					
ANR	697178	Identifier	mode		697125	1					
ANR	697179	Parameter	bool last	112:60:2481:2489	697125	3	True				
ANR	697180	ParameterType	bool		697125	0					
ANR	697181	Identifier	last		697125	1					
ANR	697182	CFGEntryNode	ENTRY		697125		True				
ANR	697183	CFGExitNode	EXIT		697125		True				
ANR	697184	Symbol	val		697125						
ANR	697185	Symbol	mode		697125						
ANR	697186	Symbol	str_val		697125						
ANR	697187	Symbol	last		697125						
ANR	697188	Symbol	key		697125						
ANR	697189	Function	pair_str	117:0:2633:2996							
ANR	697190	FunctionDef	"pair_str (const char * key , const char * val , int mode , int last)"		697189	0					
ANR	697191	CompoundStatement		117:75:2708:2996	697189	0					
ANR	697192	IfStatement	if ( IS_MODE_JSON ( mode ) )		697189	0					
ANR	697193	Condition	IS_MODE_JSON ( mode )	118:5:2715:2733	697189	0	True				
ANR	697194	CallExpression	IS_MODE_JSON ( mode )		697189	0					
ANR	697195	Callee	IS_MODE_JSON		697189	0					
ANR	697196	Identifier	IS_MODE_JSON		697189	0					
ANR	697197	ArgumentList	mode		697189	1					
ANR	697198	Argument	mode		697189	0					
ANR	697199	Identifier	mode		697189	0					
ANR	697200	CompoundStatement		6:2:62:113	697189	1					
ANR	697201	IfStatement	if ( ! val )		697189	0					
ANR	697202	Condition	! val	119:6:2744:2747	697189	0	True				
ANR	697203	UnaryOperationExpression	! val		697189	0					
ANR	697204	UnaryOperator	!		697189	0					
ANR	697205	Identifier	val		697189	1					
ANR	697206	CompoundStatement		3:12:41:41	697189	1					
ANR	697207	ExpressionStatement	"val = """""	120:3:2755:2763	697189	0	True				
ANR	697208	AssignmentExpression	"val = """""		697189	0		=			
ANR	697209	Identifier	val		697189	0					
ANR	697210	PrimaryExpression	""""""		697189	1					
ANR	697211	IdentifierDeclStatement	"char * encval = r_str_escape_utf8_for_json ( val , - 1 ) ;"	122:2:2771:2822	697189	1	True				
ANR	697212	IdentifierDecl	"* encval = r_str_escape_utf8_for_json ( val , - 1 )"		697189	0					
ANR	697213	IdentifierDeclType	char *		697189	0					
ANR	697214	Identifier	encval		697189	1					
ANR	697215	AssignmentExpression	"* encval = r_str_escape_utf8_for_json ( val , - 1 )"		697189	2		=			
ANR	697216	Identifier	encval		697189	0					
ANR	697217	CallExpression	"r_str_escape_utf8_for_json ( val , - 1 )"		697189	1					
ANR	697218	Callee	r_str_escape_utf8_for_json		697189	0					
ANR	697219	Identifier	r_str_escape_utf8_for_json		697189	0					
ANR	697220	ArgumentList	val		697189	1					
ANR	697221	Argument	val		697189	0					
ANR	697222	Identifier	val		697189	0					
ANR	697223	Argument	- 1		697189	1					
ANR	697224	UnaryOperationExpression	- 1		697189	0					
ANR	697225	UnaryOperator	-		697189	0					
ANR	697226	PrimaryExpression	1		697189	1					
ANR	697227	IfStatement	if ( encval )		697189	2					
ANR	697228	Condition	encval	123:6:2830:2835	697189	0	True				
ANR	697229	Identifier	encval		697189	0					
ANR	697230	CompoundStatement		8:3:134:174	697189	1					
ANR	697231	IdentifierDeclStatement	"char * qs = r_str_newf ( ""\\""%s\\"""" , encval ) ;"	124:3:2843:2883	697189	0	True				
ANR	697232	IdentifierDecl	"* qs = r_str_newf ( ""\\""%s\\"""" , encval )"		697189	0					
ANR	697233	IdentifierDeclType	char *		697189	0					
ANR	697234	Identifier	qs		697189	1					
ANR	697235	AssignmentExpression	"* qs = r_str_newf ( ""\\""%s\\"""" , encval )"		697189	2		=			
ANR	697236	Identifier	qs		697189	0					
ANR	697237	CallExpression	"r_str_newf ( ""\\""%s\\"""" , encval )"		697189	1					
ANR	697238	Callee	r_str_newf		697189	0					
ANR	697239	Identifier	r_str_newf		697189	0					
ANR	697240	ArgumentList	"""\\""%s\\"""""		697189	1					
ANR	697241	Argument	"""\\""%s\\"""""		697189	0					
ANR	697242	PrimaryExpression	"""\\""%s\\"""""		697189	0					
ANR	697243	Argument	encval		697189	1					
ANR	697244	Identifier	encval		697189	0					
ANR	697245	ExpressionStatement	"pair ( key , qs , mode , last )"	125:3:2888:2914	697189	1	True				
ANR	697246	CallExpression	"pair ( key , qs , mode , last )"		697189	0					
ANR	697247	Callee	pair		697189	0					
ANR	697248	Identifier	pair		697189	0					
ANR	697249	ArgumentList	key		697189	1					
ANR	697250	Argument	key		697189	0					
ANR	697251	Identifier	key		697189	0					
ANR	697252	Argument	qs		697189	1					
ANR	697253	Identifier	qs		697189	0					
ANR	697254	Argument	mode		697189	2					
ANR	697255	Identifier	mode		697189	0					
ANR	697256	Argument	last		697189	3					
ANR	697257	Identifier	last		697189	0					
ANR	697258	ExpressionStatement	free ( encval )	126:3:2919:2932	697189	2	True				
ANR	697259	CallExpression	free ( encval )		697189	0					
ANR	697260	Callee	free		697189	0					
ANR	697261	Identifier	free		697189	0					
ANR	697262	ArgumentList	encval		697189	1					
ANR	697263	Argument	encval		697189	0					
ANR	697264	Identifier	encval		697189	0					
ANR	697265	ExpressionStatement	free ( qs )	127:3:2937:2946	697189	3	True				
ANR	697266	CallExpression	free ( qs )		697189	0					
ANR	697267	Callee	free		697189	0					
ANR	697268	Identifier	free		697189	0					
ANR	697269	ArgumentList	qs		697189	1					
ANR	697270	Argument	qs		697189	0					
ANR	697271	Identifier	qs		697189	0					
ANR	697272	ElseStatement	else		697189	0					
ANR	697273	CompoundStatement		13:8:251:251	697189	0					
ANR	697274	ExpressionStatement	"pair ( key , val , mode , last )"	130:2:2964:2991	697189	0	True				
ANR	697275	CallExpression	"pair ( key , val , mode , last )"		697189	0					
ANR	697276	Callee	pair		697189	0					
ANR	697277	Identifier	pair		697189	0					
ANR	697278	ArgumentList	key		697189	1					
ANR	697279	Argument	key		697189	0					
ANR	697280	Identifier	key		697189	0					
ANR	697281	Argument	val		697189	1					
ANR	697282	Identifier	val		697189	0					
ANR	697283	Argument	mode		697189	2					
ANR	697284	Identifier	mode		697189	0					
ANR	697285	Argument	last		697189	3					
ANR	697286	Identifier	last		697189	0					
ANR	697287	ReturnType	static void		697189	1					
ANR	697288	Identifier	pair_str		697189	2					
ANR	697289	ParameterList	"const char * key , const char * val , int mode , int last"		697189	3					
ANR	697290	Parameter	const char * key	117:21:2654:2668	697189	0	True				
ANR	697291	ParameterType	const char *		697189	0					
ANR	697292	Identifier	key		697189	1					
ANR	697293	Parameter	const char * val	117:38:2671:2685	697189	1	True				
ANR	697294	ParameterType	const char *		697189	0					
ANR	697295	Identifier	val		697189	1					
ANR	697296	Parameter	int mode	117:55:2688:2695	697189	2	True				
ANR	697297	ParameterType	int		697189	0					
ANR	697298	Identifier	mode		697189	1					
ANR	697299	Parameter	int last	117:65:2698:2705	697189	3	True				
ANR	697300	ParameterType	int		697189	0					
ANR	697301	Identifier	last		697189	1					
ANR	697302	CFGEntryNode	ENTRY		697189		True				
ANR	697303	CFGExitNode	EXIT		697189		True				
ANR	697304	Symbol	val		697189						
ANR	697305	Symbol	mode		697189						
ANR	697306	Symbol	encval		697189						
ANR	697307	Symbol	qs		697189						
ANR	697308	Symbol	last		697189						
ANR	697309	Symbol	IS_MODE_JSON		697189						
ANR	697310	Symbol	r_str_escape_utf8_for_json		697189						
ANR	697311	Symbol	r_str_newf		697189						
ANR	697312	Symbol	key		697189						
ANR	697313	DeclStmt									
ANR	697314	Decl							R_API int	"R_API int ( RCore * core , RBinFile * binfile )"	r_core_bin_set_cur
ANR	697315	Function	rva	137:0:3090:3314							
ANR	697316	FunctionDef	"rva (RBin * bin , ut64 paddr , ut64 vaddr , int va)"		697315	0					
ANR	697317	CompoundStatement		137:59:3149:3314	697315	0					
ANR	697318	IfStatement	if ( va == VA_TRUE )		697315	0					
ANR	697319	Condition	va == VA_TRUE	138:5:3156:3168	697315	0	True				
ANR	697320	EqualityExpression	va == VA_TRUE		697315	0		==			
ANR	697321	Identifier	va		697315	0					
ANR	697322	Identifier	VA_TRUE		697315	1					
ANR	697323	CompoundStatement		2:20:21:21	697315	1					
ANR	697324	IfStatement	if ( paddr != UT64_MAX )		697315	0					
ANR	697325	Condition	paddr != UT64_MAX	139:6:3179:3195	697315	0	True				
ANR	697326	EqualityExpression	paddr != UT64_MAX		697315	0		!=			
ANR	697327	Identifier	paddr		697315	0					
ANR	697328	Identifier	UT64_MAX		697315	1					
ANR	697329	CompoundStatement		3:25:48:48	697315	1					
ANR	697330	ReturnStatement	"return r_bin_get_vaddr ( bin , paddr , vaddr ) ;"	140:3:3203:3245	697315	0	True				
ANR	697331	CallExpression	"r_bin_get_vaddr ( bin , paddr , vaddr )"		697315	0					
ANR	697332	Callee	r_bin_get_vaddr		697315	0					
ANR	697333	Identifier	r_bin_get_vaddr		697315	0					
ANR	697334	ArgumentList	bin		697315	1					
ANR	697335	Argument	bin		697315	0					
ANR	697336	Identifier	bin		697315	0					
ANR	697337	Argument	paddr		697315	1					
ANR	697338	Identifier	paddr		697315	0					
ANR	697339	Argument	vaddr		697315	2					
ANR	697340	Identifier	vaddr		697315	0					
ANR	697341	IfStatement	if ( va == VA_NOREBASE )		697315	1					
ANR	697342	Condition	va == VA_NOREBASE	143:5:3259:3275	697315	0	True				
ANR	697343	EqualityExpression	va == VA_NOREBASE		697315	0		==			
ANR	697344	Identifier	va		697315	0					
ANR	697345	Identifier	VA_NOREBASE		697315	1					
ANR	697346	CompoundStatement		7:24:128:128	697315	1					
ANR	697347	ReturnStatement	return vaddr ;	144:2:3282:3294	697315	0	True				
ANR	697348	Identifier	vaddr		697315	0					
ANR	697349	ReturnStatement	return paddr ;	146:1:3300:3312	697315	2	True				
ANR	697350	Identifier	paddr		697315	0					
ANR	697351	ReturnType	static ut64		697315	1					
ANR	697352	Identifier	rva		697315	2					
ANR	697353	ParameterList	"RBin * bin , ut64 paddr , ut64 vaddr , int va"		697315	3					
ANR	697354	Parameter	RBin * bin	137:16:3106:3114	697315	0	True				
ANR	697355	ParameterType	RBin *		697315	0					
ANR	697356	Identifier	bin		697315	1					
ANR	697357	Parameter	ut64 paddr	137:27:3117:3126	697315	1	True				
ANR	697358	ParameterType	ut64		697315	0					
ANR	697359	Identifier	paddr		697315	1					
ANR	697360	Parameter	ut64 vaddr	137:39:3129:3138	697315	2	True				
ANR	697361	ParameterType	ut64		697315	0					
ANR	697362	Identifier	vaddr		697315	1					
ANR	697363	Parameter	int va	137:51:3141:3146	697315	3	True				
ANR	697364	ParameterType	int		697315	0					
ANR	697365	Identifier	va		697315	1					
ANR	697366	CFGEntryNode	ENTRY		697315		True				
ANR	697367	CFGExitNode	EXIT		697315		True				
ANR	697368	Symbol	r_bin_get_vaddr		697315						
ANR	697369	Symbol	bin		697315						
ANR	697370	Symbol	paddr		697315						
ANR	697371	Symbol	VA_NOREBASE		697315						
ANR	697372	Symbol	VA_TRUE		697315						
ANR	697373	Symbol	vaddr		697315						
ANR	697374	Symbol	va		697315						
ANR	697375	Symbol	UT64_MAX		697315						
ANR	697376	Function	r_core_bin_set_by_fd	149:0:3317:3514							
ANR	697377	FunctionDef	"r_core_bin_set_by_fd (RCore * core , ut64 bin_fd)"		697376	0					
ANR	697378	CompoundStatement		149:57:3374:3514	697376	0					
ANR	697379	IfStatement	"if ( r_bin_file_set_cur_by_fd ( core -> bin , bin_fd ) )"		697376	0					
ANR	697380	Condition	"r_bin_file_set_cur_by_fd ( core -> bin , bin_fd )"	150:5:3381:3424	697376	0	True				
ANR	697381	CallExpression	"r_bin_file_set_cur_by_fd ( core -> bin , bin_fd )"		697376	0					
ANR	697382	Callee	r_bin_file_set_cur_by_fd		697376	0					
ANR	697383	Identifier	r_bin_file_set_cur_by_fd		697376	0					
ANR	697384	ArgumentList	core -> bin		697376	1					
ANR	697385	Argument	core -> bin		697376	0					
ANR	697386	PtrMemberAccess	core -> bin		697376	0					
ANR	697387	Identifier	core		697376	0					
ANR	697388	Identifier	bin		697376	1					
ANR	697389	Argument	bin_fd		697376	1					
ANR	697390	Identifier	bin_fd		697376	0					
ANR	697391	CompoundStatement		2:51:52:52	697376	1					
ANR	697392	ExpressionStatement	"r_core_bin_set_cur ( core , r_bin_cur ( core -> bin ) )"	151:2:3431:3479	697376	0	True				
ANR	697393	CallExpression	"r_core_bin_set_cur ( core , r_bin_cur ( core -> bin ) )"		697376	0					
ANR	697394	Callee	r_core_bin_set_cur		697376	0					
ANR	697395	Identifier	r_core_bin_set_cur		697376	0					
ANR	697396	ArgumentList	core		697376	1					
ANR	697397	Argument	core		697376	0					
ANR	697398	Identifier	core		697376	0					
ANR	697399	Argument	r_bin_cur ( core -> bin )		697376	1					
ANR	697400	CallExpression	r_bin_cur ( core -> bin )		697376	0					
ANR	697401	Callee	r_bin_cur		697376	0					
ANR	697402	Identifier	r_bin_cur		697376	0					
ANR	697403	ArgumentList	core -> bin		697376	1					
ANR	697404	Argument	core -> bin		697376	0					
ANR	697405	PtrMemberAccess	core -> bin		697376	0					
ANR	697406	Identifier	core		697376	0					
ANR	697407	Identifier	bin		697376	1					
ANR	697408	ReturnStatement	return true ;	152:2:3483:3494	697376	1	True				
ANR	697409	Identifier	true		697376	0					
ANR	697410	ReturnStatement	return false ;	154:1:3500:3512	697376	1	True				
ANR	697411	Identifier	false		697376	0					
ANR	697412	ReturnType	R_API int		697376	1					
ANR	697413	Identifier	r_core_bin_set_by_fd		697376	2					
ANR	697414	ParameterList	"RCore * core , ut64 bin_fd"		697376	3					
ANR	697415	Parameter	RCore * core	149:31:3348:3358	697376	0	True				
ANR	697416	ParameterType	RCore *		697376	0					
ANR	697417	Identifier	core		697376	1					
ANR	697418	Parameter	ut64 bin_fd	149:44:3361:3371	697376	1	True				
ANR	697419	ParameterType	ut64		697376	0					
ANR	697420	Identifier	bin_fd		697376	1					
ANR	697421	CFGEntryNode	ENTRY		697376		True				
ANR	697422	CFGExitNode	EXIT		697376		True				
ANR	697423	Symbol	bin_fd		697376						
ANR	697424	Symbol	core		697376						
ANR	697425	Symbol	* core		697376						
ANR	697426	Symbol	r_bin_cur		697376						
ANR	697427	Symbol	true		697376						
ANR	697428	Symbol	false		697376						
ANR	697429	Symbol	r_bin_file_set_cur_by_fd		697376						
ANR	697430	Symbol	core -> bin		697376						
ANR	697431	Function	r_core_bin_set_by_name	157:0:3517:3722							
ANR	697432	FunctionDef	"r_core_bin_set_by_name (RCore * core , const char * name)"		697431	0					
ANR	697433	CompoundStatement		157:65:3582:3722	697431	0					
ANR	697434	IfStatement	"if ( r_bin_file_set_cur_by_name ( core -> bin , name ) )"		697431	0					
ANR	697435	Condition	"r_bin_file_set_cur_by_name ( core -> bin , name )"	158:5:3589:3632	697431	0	True				
ANR	697436	CallExpression	"r_bin_file_set_cur_by_name ( core -> bin , name )"		697431	0					
ANR	697437	Callee	r_bin_file_set_cur_by_name		697431	0					
ANR	697438	Identifier	r_bin_file_set_cur_by_name		697431	0					
ANR	697439	ArgumentList	core -> bin		697431	1					
ANR	697440	Argument	core -> bin		697431	0					
ANR	697441	PtrMemberAccess	core -> bin		697431	0					
ANR	697442	Identifier	core		697431	0					
ANR	697443	Identifier	bin		697431	1					
ANR	697444	Argument	name		697431	1					
ANR	697445	Identifier	name		697431	0					
ANR	697446	CompoundStatement		2:51:52:52	697431	1					
ANR	697447	ExpressionStatement	"r_core_bin_set_cur ( core , r_bin_cur ( core -> bin ) )"	159:2:3639:3687	697431	0	True				
ANR	697448	CallExpression	"r_core_bin_set_cur ( core , r_bin_cur ( core -> bin ) )"		697431	0					
ANR	697449	Callee	r_core_bin_set_cur		697431	0					
ANR	697450	Identifier	r_core_bin_set_cur		697431	0					
ANR	697451	ArgumentList	core		697431	1					
ANR	697452	Argument	core		697431	0					
ANR	697453	Identifier	core		697431	0					
ANR	697454	Argument	r_bin_cur ( core -> bin )		697431	1					
ANR	697455	CallExpression	r_bin_cur ( core -> bin )		697431	0					
ANR	697456	Callee	r_bin_cur		697431	0					
ANR	697457	Identifier	r_bin_cur		697431	0					
ANR	697458	ArgumentList	core -> bin		697431	1					
ANR	697459	Argument	core -> bin		697431	0					
ANR	697460	PtrMemberAccess	core -> bin		697431	0					
ANR	697461	Identifier	core		697431	0					
ANR	697462	Identifier	bin		697431	1					
ANR	697463	ReturnStatement	return true ;	160:2:3691:3702	697431	1	True				
ANR	697464	Identifier	true		697431	0					
ANR	697465	ReturnStatement	return false ;	162:1:3708:3720	697431	1	True				
ANR	697466	Identifier	false		697431	0					
ANR	697467	ReturnType	R_API int		697431	1					
ANR	697468	Identifier	r_core_bin_set_by_name		697431	2					
ANR	697469	ParameterList	"RCore * core , const char * name"		697431	3					
ANR	697470	Parameter	RCore * core	157:33:3550:3560	697431	0	True				
ANR	697471	ParameterType	RCore *		697431	0					
ANR	697472	Identifier	core		697431	1					
ANR	697473	Parameter	const char * name	157:46:3563:3579	697431	1	True				
ANR	697474	ParameterType	const char *		697431	0					
ANR	697475	Identifier	name		697431	1					
ANR	697476	CFGEntryNode	ENTRY		697431		True				
ANR	697477	CFGExitNode	EXIT		697431		True				
ANR	697478	Symbol	core		697431						
ANR	697479	Symbol	r_bin_file_set_cur_by_name		697431						
ANR	697480	Symbol	name		697431						
ANR	697481	Symbol	* core		697431						
ANR	697482	Symbol	r_bin_cur		697431						
ANR	697483	Symbol	true		697431						
ANR	697484	Symbol	false		697431						
ANR	697485	Symbol	core -> bin		697431						
ANR	697486	Function	r_core_bin_set_env	165:0:3725:4621							
ANR	697487	FunctionDef	"r_core_bin_set_env (RCore * r , RBinFile * binfile)"		697486	0					
ANR	697488	CompoundStatement		165:58:3783:4621	697486	0					
ANR	697489	ExpressionStatement	"r_return_val_if_fail ( r , false )"	166:1:3786:3817	697486	0	True				
ANR	697490	CallExpression	"r_return_val_if_fail ( r , false )"		697486	0					
ANR	697491	Callee	r_return_val_if_fail		697486	0					
ANR	697492	Identifier	r_return_val_if_fail		697486	0					
ANR	697493	ArgumentList	r		697486	1					
ANR	697494	Argument	r		697486	0					
ANR	697495	Identifier	r		697486	0					
ANR	697496	Argument	false		697486	1					
ANR	697497	Identifier	false		697486	0					
ANR	697498	IdentifierDeclStatement	RBinObject * binobj = binfile ? binfile -> o : NULL ;	168:1:3821:3867	697486	1	True				
ANR	697499	IdentifierDecl	* binobj = binfile ? binfile -> o : NULL		697486	0					
ANR	697500	IdentifierDeclType	RBinObject *		697486	0					
ANR	697501	Identifier	binobj		697486	1					
ANR	697502	AssignmentExpression	* binobj = binfile ? binfile -> o : NULL		697486	2		=			
ANR	697503	Identifier	binobj		697486	0					
ANR	697504	ConditionalExpression	binfile ? binfile -> o : NULL		697486	1					
ANR	697505	Condition	binfile		697486	0					
ANR	697506	Identifier	binfile		697486	0					
ANR	697507	PtrMemberAccess	binfile -> o		697486	1					
ANR	697508	Identifier	binfile		697486	0					
ANR	697509	Identifier	o		697486	1					
ANR	697510	Identifier	NULL		697486	2					
ANR	697511	IdentifierDeclStatement	RBinInfo * info = binobj ? binobj -> info : NULL ;	169:1:3870:3913	697486	2	True				
ANR	697512	IdentifierDecl	* info = binobj ? binobj -> info : NULL		697486	0					
ANR	697513	IdentifierDeclType	RBinInfo *		697486	0					
ANR	697514	Identifier	info		697486	1					
ANR	697515	AssignmentExpression	* info = binobj ? binobj -> info : NULL		697486	2		=			
ANR	697516	Identifier	info		697486	0					
ANR	697517	ConditionalExpression	binobj ? binobj -> info : NULL		697486	1					
ANR	697518	Condition	binobj		697486	0					
ANR	697519	Identifier	binobj		697486	0					
ANR	697520	PtrMemberAccess	binobj -> info		697486	1					
ANR	697521	Identifier	binobj		697486	0					
ANR	697522	Identifier	info		697486	1					
ANR	697523	Identifier	NULL		697486	2					
ANR	697524	IfStatement	if ( info )		697486	3					
ANR	697525	Condition	info	170:5:3920:3923	697486	0	True				
ANR	697526	Identifier	info		697486	0					
ANR	697527	CompoundStatement		10:2:230:270	697486	1					
ANR	697528	IdentifierDeclStatement	int va = info -> has_va ;	171:2:3930:3951	697486	0	True				
ANR	697529	IdentifierDecl	va = info -> has_va		697486	0					
ANR	697530	IdentifierDeclType	int		697486	0					
ANR	697531	Identifier	va		697486	1					
ANR	697532	AssignmentExpression	va = info -> has_va		697486	2		=			
ANR	697533	Identifier	va		697486	0					
ANR	697534	PtrMemberAccess	info -> has_va		697486	1					
ANR	697535	Identifier	info		697486	0					
ANR	697536	Identifier	has_va		697486	1					
ANR	697537	IdentifierDeclStatement	const char * arch = info -> arch ;	172:2:3955:3984	697486	1	True				
ANR	697538	IdentifierDecl	* arch = info -> arch		697486	0					
ANR	697539	IdentifierDeclType	const char *		697486	0					
ANR	697540	Identifier	arch		697486	1					
ANR	697541	AssignmentExpression	* arch = info -> arch		697486	2		=			
ANR	697542	Identifier	arch		697486	0					
ANR	697543	PtrMemberAccess	info -> arch		697486	1					
ANR	697544	Identifier	info		697486	0					
ANR	697545	Identifier	arch		697486	1					
ANR	697546	IdentifierDeclStatement	ut16 bits = info -> bits ;	173:2:3988:4010	697486	2	True				
ANR	697547	IdentifierDecl	bits = info -> bits		697486	0					
ANR	697548	IdentifierDeclType	ut16		697486	0					
ANR	697549	Identifier	bits		697486	1					
ANR	697550	AssignmentExpression	bits = info -> bits		697486	2		=			
ANR	697551	Identifier	bits		697486	0					
ANR	697552	PtrMemberAccess	info -> bits		697486	1					
ANR	697553	Identifier	info		697486	0					
ANR	697554	Identifier	bits		697486	1					
ANR	697555	IdentifierDeclStatement	ut64 baseaddr = r_bin_get_baddr ( r -> bin ) ;	174:2:4014:4054	697486	3	True				
ANR	697556	IdentifierDecl	baseaddr = r_bin_get_baddr ( r -> bin )		697486	0					
ANR	697557	IdentifierDeclType	ut64		697486	0					
ANR	697558	Identifier	baseaddr		697486	1					
ANR	697559	AssignmentExpression	baseaddr = r_bin_get_baddr ( r -> bin )		697486	2		=			
ANR	697560	Identifier	baseaddr		697486	0					
ANR	697561	CallExpression	r_bin_get_baddr ( r -> bin )		697486	1					
ANR	697562	Callee	r_bin_get_baddr		697486	0					
ANR	697563	Identifier	r_bin_get_baddr		697486	0					
ANR	697564	ArgumentList	r -> bin		697486	1					
ANR	697565	Argument	r -> bin		697486	0					
ANR	697566	PtrMemberAccess	r -> bin		697486	0					
ANR	697567	Identifier	r		697486	0					
ANR	697568	Identifier	bin		697486	1					
ANR	697569	ExpressionStatement	"r_config_set_i ( r -> config , ""bin.baddr"" , baseaddr )"	175:2:4058:4107	697486	4	True				
ANR	697570	CallExpression	"r_config_set_i ( r -> config , ""bin.baddr"" , baseaddr )"		697486	0					
ANR	697571	Callee	r_config_set_i		697486	0					
ANR	697572	Identifier	r_config_set_i		697486	0					
ANR	697573	ArgumentList	r -> config		697486	1					
ANR	697574	Argument	r -> config		697486	0					
ANR	697575	PtrMemberAccess	r -> config		697486	0					
ANR	697576	Identifier	r		697486	0					
ANR	697577	Identifier	config		697486	1					
ANR	697578	Argument	"""bin.baddr"""		697486	1					
ANR	697579	PrimaryExpression	"""bin.baddr"""		697486	0					
ANR	697580	Argument	baseaddr		697486	2					
ANR	697581	Identifier	baseaddr		697486	0					
ANR	697582	ExpressionStatement	"sdb_num_add ( r -> sdb , ""orig_baddr"" , baseaddr , 0 )"	176:2:4111:4158	697486	5	True				
ANR	697583	CallExpression	"sdb_num_add ( r -> sdb , ""orig_baddr"" , baseaddr , 0 )"		697486	0					
ANR	697584	Callee	sdb_num_add		697486	0					
ANR	697585	Identifier	sdb_num_add		697486	0					
ANR	697586	ArgumentList	r -> sdb		697486	1					
ANR	697587	Argument	r -> sdb		697486	0					
ANR	697588	PtrMemberAccess	r -> sdb		697486	0					
ANR	697589	Identifier	r		697486	0					
ANR	697590	Identifier	sdb		697486	1					
ANR	697591	Argument	"""orig_baddr"""		697486	1					
ANR	697592	PrimaryExpression	"""orig_baddr"""		697486	0					
ANR	697593	Argument	baseaddr		697486	2					
ANR	697594	Identifier	baseaddr		697486	0					
ANR	697595	Argument	0		697486	3					
ANR	697596	PrimaryExpression	0		697486	0					
ANR	697597	ExpressionStatement	"r_config_set ( r -> config , ""asm.arch"" , arch )"	177:2:4162:4204	697486	6	True				
ANR	697598	CallExpression	"r_config_set ( r -> config , ""asm.arch"" , arch )"		697486	0					
ANR	697599	Callee	r_config_set		697486	0					
ANR	697600	Identifier	r_config_set		697486	0					
ANR	697601	ArgumentList	r -> config		697486	1					
ANR	697602	Argument	r -> config		697486	0					
ANR	697603	PtrMemberAccess	r -> config		697486	0					
ANR	697604	Identifier	r		697486	0					
ANR	697605	Identifier	config		697486	1					
ANR	697606	Argument	"""asm.arch"""		697486	1					
ANR	697607	PrimaryExpression	"""asm.arch"""		697486	0					
ANR	697608	Argument	arch		697486	2					
ANR	697609	Identifier	arch		697486	0					
ANR	697610	ExpressionStatement	"r_config_set_i ( r -> config , ""asm.bits"" , bits )"	178:2:4208:4252	697486	7	True				
ANR	697611	CallExpression	"r_config_set_i ( r -> config , ""asm.bits"" , bits )"		697486	0					
ANR	697612	Callee	r_config_set_i		697486	0					
ANR	697613	Identifier	r_config_set_i		697486	0					
ANR	697614	ArgumentList	r -> config		697486	1					
ANR	697615	Argument	r -> config		697486	0					
ANR	697616	PtrMemberAccess	r -> config		697486	0					
ANR	697617	Identifier	r		697486	0					
ANR	697618	Identifier	config		697486	1					
ANR	697619	Argument	"""asm.bits"""		697486	1					
ANR	697620	PrimaryExpression	"""asm.bits"""		697486	0					
ANR	697621	Argument	bits		697486	2					
ANR	697622	Identifier	bits		697486	0					
ANR	697623	ExpressionStatement	"r_config_set ( r -> config , ""anal.arch"" , arch )"	179:2:4256:4299	697486	8	True				
ANR	697624	CallExpression	"r_config_set ( r -> config , ""anal.arch"" , arch )"		697486	0					
ANR	697625	Callee	r_config_set		697486	0					
ANR	697626	Identifier	r_config_set		697486	0					
ANR	697627	ArgumentList	r -> config		697486	1					
ANR	697628	Argument	r -> config		697486	0					
ANR	697629	PtrMemberAccess	r -> config		697486	0					
ANR	697630	Identifier	r		697486	0					
ANR	697631	Identifier	config		697486	1					
ANR	697632	Argument	"""anal.arch"""		697486	1					
ANR	697633	PrimaryExpression	"""anal.arch"""		697486	0					
ANR	697634	Argument	arch		697486	2					
ANR	697635	Identifier	arch		697486	0					
ANR	697636	IfStatement	if ( info -> cpu && * info -> cpu )		697486	9					
ANR	697637	Condition	info -> cpu && * info -> cpu	180:6:4307:4329	697486	0	True				
ANR	697638	AndExpression	info -> cpu && * info -> cpu		697486	0		&&			
ANR	697639	PtrMemberAccess	info -> cpu		697486	0					
ANR	697640	Identifier	info		697486	0					
ANR	697641	Identifier	cpu		697486	1					
ANR	697642	UnaryOperationExpression	* info -> cpu		697486	1					
ANR	697643	UnaryOperator	*		697486	0					
ANR	697644	PtrMemberAccess	info -> cpu		697486	1					
ANR	697645	Identifier	info		697486	0					
ANR	697646	Identifier	cpu		697486	1					
ANR	697647	CompoundStatement		16:31:548:548	697486	1					
ANR	697648	ExpressionStatement	"r_config_set ( r -> config , ""anal.cpu"" , info -> cpu )"	181:3:4337:4384	697486	0	True				
ANR	697649	CallExpression	"r_config_set ( r -> config , ""anal.cpu"" , info -> cpu )"		697486	0					
ANR	697650	Callee	r_config_set		697486	0					
ANR	697651	Identifier	r_config_set		697486	0					
ANR	697652	ArgumentList	r -> config		697486	1					
ANR	697653	Argument	r -> config		697486	0					
ANR	697654	PtrMemberAccess	r -> config		697486	0					
ANR	697655	Identifier	r		697486	0					
ANR	697656	Identifier	config		697486	1					
ANR	697657	Argument	"""anal.cpu"""		697486	1					
ANR	697658	PrimaryExpression	"""anal.cpu"""		697486	0					
ANR	697659	Argument	info -> cpu		697486	2					
ANR	697660	PtrMemberAccess	info -> cpu		697486	0					
ANR	697661	Identifier	info		697486	0					
ANR	697662	Identifier	cpu		697486	1					
ANR	697663	ElseStatement	else		697486	0					
ANR	697664	CompoundStatement		18:9:611:611	697486	0					
ANR	697665	ExpressionStatement	"r_config_set ( r -> config , ""anal.cpu"" , arch )"	183:3:4400:4442	697486	0	True				
ANR	697666	CallExpression	"r_config_set ( r -> config , ""anal.cpu"" , arch )"		697486	0					
ANR	697667	Callee	r_config_set		697486	0					
ANR	697668	Identifier	r_config_set		697486	0					
ANR	697669	ArgumentList	r -> config		697486	1					
ANR	697670	Argument	r -> config		697486	0					
ANR	697671	PtrMemberAccess	r -> config		697486	0					
ANR	697672	Identifier	r		697486	0					
ANR	697673	Identifier	config		697486	1					
ANR	697674	Argument	"""anal.cpu"""		697486	1					
ANR	697675	PrimaryExpression	"""anal.cpu"""		697486	0					
ANR	697676	Argument	arch		697486	2					
ANR	697677	Identifier	arch		697486	0					
ANR	697678	ExpressionStatement	"r_asm_use ( r -> assembler , arch )"	185:2:4450:4480	697486	10	True				
ANR	697679	CallExpression	"r_asm_use ( r -> assembler , arch )"		697486	0					
ANR	697680	Callee	r_asm_use		697486	0					
ANR	697681	Identifier	r_asm_use		697486	0					
ANR	697682	ArgumentList	r -> assembler		697486	1					
ANR	697683	Argument	r -> assembler		697486	0					
ANR	697684	PtrMemberAccess	r -> assembler		697486	0					
ANR	697685	Identifier	r		697486	0					
ANR	697686	Identifier	assembler		697486	1					
ANR	697687	Argument	arch		697486	1					
ANR	697688	Identifier	arch		697486	0					
ANR	697689	ExpressionStatement	"r_core_bin_info ( r , R_CORE_BIN_ACC_ALL , R_MODE_SET , va , NULL , NULL )"	186:2:4484:4551	697486	11	True				
ANR	697690	CallExpression	"r_core_bin_info ( r , R_CORE_BIN_ACC_ALL , R_MODE_SET , va , NULL , NULL )"		697486	0					
ANR	697691	Callee	r_core_bin_info		697486	0					
ANR	697692	Identifier	r_core_bin_info		697486	0					
ANR	697693	ArgumentList	r		697486	1					
ANR	697694	Argument	r		697486	0					
ANR	697695	Identifier	r		697486	0					
ANR	697696	Argument	R_CORE_BIN_ACC_ALL		697486	1					
ANR	697697	Identifier	R_CORE_BIN_ACC_ALL		697486	0					
ANR	697698	Argument	R_MODE_SET		697486	2					
ANR	697699	Identifier	R_MODE_SET		697486	0					
ANR	697700	Argument	va		697486	3					
ANR	697701	Identifier	va		697486	0					
ANR	697702	Argument	NULL		697486	4					
ANR	697703	Identifier	NULL		697486	0					
ANR	697704	Argument	NULL		697486	5					
ANR	697705	Identifier	NULL		697486	0					
ANR	697706	ExpressionStatement	"r_core_bin_set_cur ( r , binfile )"	187:2:4555:4586	697486	12	True				
ANR	697707	CallExpression	"r_core_bin_set_cur ( r , binfile )"		697486	0					
ANR	697708	Callee	r_core_bin_set_cur		697486	0					
ANR	697709	Identifier	r_core_bin_set_cur		697486	0					
ANR	697710	ArgumentList	r		697486	1					
ANR	697711	Argument	r		697486	0					
ANR	697712	Identifier	r		697486	0					
ANR	697713	Argument	binfile		697486	1					
ANR	697714	Identifier	binfile		697486	0					
ANR	697715	ReturnStatement	return true ;	188:2:4590:4601	697486	13	True				
ANR	697716	Identifier	true		697486	0					
ANR	697717	ReturnStatement	return false ;	190:1:4607:4619	697486	4	True				
ANR	697718	Identifier	false		697486	0					
ANR	697719	ReturnType	R_API int		697486	1					
ANR	697720	Identifier	r_core_bin_set_env		697486	2					
ANR	697721	ParameterList	"RCore * r , RBinFile * binfile"		697486	3					
ANR	697722	Parameter	RCore * r	165:29:3754:3761	697486	0	True				
ANR	697723	ParameterType	RCore *		697486	0					
ANR	697724	Identifier	r		697486	1					
ANR	697725	Parameter	RBinFile * binfile	165:39:3764:3780	697486	1	True				
ANR	697726	ParameterType	RBinFile *		697486	0					
ANR	697727	Identifier	binfile		697486	1					
ANR	697728	CFGEntryNode	ENTRY		697486		True				
ANR	697729	CFGExitNode	EXIT		697486		True				
ANR	697730	Symbol	* * info		697486						
ANR	697731	Symbol	R_MODE_SET		697486						
ANR	697732	Symbol	r_bin_get_baddr		697486						
ANR	697733	Symbol	info -> has_va		697486						
ANR	697734	Symbol	binfile		697486						
ANR	697735	Symbol	info -> bits		697486						
ANR	697736	Symbol	r -> bin		697486						
ANR	697737	Symbol	binobj -> info		697486						
ANR	697738	Symbol	R_CORE_BIN_ACC_ALL		697486						
ANR	697739	Symbol	info		697486						
ANR	697740	Symbol	info -> arch		697486						
ANR	697741	Symbol	* binfile		697486						
ANR	697742	Symbol	r -> sdb		697486						
ANR	697743	Symbol	NULL		697486						
ANR	697744	Symbol	binobj		697486						
ANR	697745	Symbol	info -> cpu		697486						
ANR	697746	Symbol	r -> assembler		697486						
ANR	697747	Symbol	false		697486						
ANR	697748	Symbol	bits		697486						
ANR	697749	Symbol	* binobj		697486						
ANR	697750	Symbol	va		697486						
ANR	697751	Symbol	baseaddr		697486						
ANR	697752	Symbol	r		697486						
ANR	697753	Symbol	binfile -> o		697486						
ANR	697754	Symbol	* info -> cpu		697486						
ANR	697755	Symbol	true		697486						
ANR	697756	Symbol	* info		697486						
ANR	697757	Symbol	arch		697486						
ANR	697758	Symbol	* r		697486						
ANR	697759	Symbol	r -> config		697486						
ANR	697760	Function	r_core_bin_set_cur	193:0:4624:5008							
ANR	697761	FunctionDef	"r_core_bin_set_cur (RCore * core , RBinFile * binfile)"		697760	0					
ANR	697762	CompoundStatement		193:61:4685:5008	697760	0					
ANR	697763	IfStatement	if ( ! core -> bin )		697760	0					
ANR	697764	Condition	! core -> bin	194:5:4692:4701	697760	0	True				
ANR	697765	UnaryOperationExpression	! core -> bin		697760	0					
ANR	697766	UnaryOperator	!		697760	0					
ANR	697767	PtrMemberAccess	core -> bin		697760	1					
ANR	697768	Identifier	core		697760	0					
ANR	697769	Identifier	bin		697760	1					
ANR	697770	CompoundStatement		2:17:18:18	697760	1					
ANR	697771	ReturnStatement	return false ;	195:2:4708:4720	697760	0	True				
ANR	697772	Identifier	false		697760	0					
ANR	697773	IfStatement	if ( ! binfile )		697760	1					
ANR	697774	Condition	! binfile	197:5:4730:4737	697760	0	True				
ANR	697775	UnaryOperationExpression	! binfile		697760	0					
ANR	697776	UnaryOperator	!		697760	0					
ANR	697777	Identifier	binfile		697760	1					
ANR	697778	CompoundStatement		7:2:92:127	697760	1					
ANR	697779	IdentifierDeclStatement	ut32 fd = r_core_file_cur_fd ( core ) ;	199:2:4778:4813	697760	0	True				
ANR	697780	IdentifierDecl	fd = r_core_file_cur_fd ( core )		697760	0					
ANR	697781	IdentifierDeclType	ut32		697760	0					
ANR	697782	Identifier	fd		697760	1					
ANR	697783	AssignmentExpression	fd = r_core_file_cur_fd ( core )		697760	2		=			
ANR	697784	Identifier	fd		697760	0					
ANR	697785	CallExpression	r_core_file_cur_fd ( core )		697760	1					
ANR	697786	Callee	r_core_file_cur_fd		697760	0					
ANR	697787	Identifier	r_core_file_cur_fd		697760	0					
ANR	697788	ArgumentList	core		697760	1					
ANR	697789	Argument	core		697760	0					
ANR	697790	Identifier	core		697760	0					
ANR	697791	ExpressionStatement	"binfile = fd != ( ut32 ) - 1 ? r_bin_file_find_by_fd ( core -> bin , fd ) : NULL"	200:2:4817:4900	697760	1	True				
ANR	697792	AssignmentExpression	"binfile = fd != ( ut32 ) - 1 ? r_bin_file_find_by_fd ( core -> bin , fd ) : NULL"		697760	0		=			
ANR	697793	Identifier	binfile		697760	0					
ANR	697794	ConditionalExpression	"fd != ( ut32 ) - 1 ? r_bin_file_find_by_fd ( core -> bin , fd ) : NULL"		697760	1					
ANR	697795	Condition	fd != ( ut32 ) - 1		697760	0					
ANR	697796	EqualityExpression	fd != ( ut32 ) - 1		697760	0		!=			
ANR	697797	Identifier	fd		697760	0					
ANR	697798	CastExpression	( ut32 ) - 1		697760	1					
ANR	697799	CastTarget	ut32		697760	0					
ANR	697800	UnaryOperationExpression	- 1		697760	1					
ANR	697801	UnaryOperator	-		697760	0					
ANR	697802	PrimaryExpression	1		697760	1					
ANR	697803	CallExpression	"r_bin_file_find_by_fd ( core -> bin , fd )"		697760	1					
ANR	697804	Callee	r_bin_file_find_by_fd		697760	0					
ANR	697805	Identifier	r_bin_file_find_by_fd		697760	0					
ANR	697806	ArgumentList	core -> bin		697760	1					
ANR	697807	Argument	core -> bin		697760	0					
ANR	697808	PtrMemberAccess	core -> bin		697760	0					
ANR	697809	Identifier	core		697760	0					
ANR	697810	Identifier	bin		697760	1					
ANR	697811	Argument	fd		697760	1					
ANR	697812	Identifier	fd		697760	0					
ANR	697813	Identifier	NULL		697760	2					
ANR	697814	IfStatement	if ( ! binfile )		697760	2					
ANR	697815	Condition	! binfile	203:6:4908:4915	697760	0	True				
ANR	697816	UnaryOperationExpression	! binfile		697760	0					
ANR	697817	UnaryOperator	!		697760	0					
ANR	697818	Identifier	binfile		697760	1					
ANR	697819	CompoundStatement		11:16:232:232	697760	1					
ANR	697820	ReturnStatement	return false ;	204:3:4923:4935	697760	0	True				
ANR	697821	Identifier	false		697760	0					
ANR	697822	ExpressionStatement	"r_bin_file_set_cur_binfile ( core -> bin , binfile )"	207:1:4945:4992	697760	2	True				
ANR	697823	CallExpression	"r_bin_file_set_cur_binfile ( core -> bin , binfile )"		697760	0					
ANR	697824	Callee	r_bin_file_set_cur_binfile		697760	0					
ANR	697825	Identifier	r_bin_file_set_cur_binfile		697760	0					
ANR	697826	ArgumentList	core -> bin		697760	1					
ANR	697827	Argument	core -> bin		697760	0					
ANR	697828	PtrMemberAccess	core -> bin		697760	0					
ANR	697829	Identifier	core		697760	0					
ANR	697830	Identifier	bin		697760	1					
ANR	697831	Argument	binfile		697760	1					
ANR	697832	Identifier	binfile		697760	0					
ANR	697833	ReturnStatement	return true ;	208:1:4995:5006	697760	3	True				
ANR	697834	Identifier	true		697760	0					
ANR	697835	ReturnType	R_API int		697760	1					
ANR	697836	Identifier	r_core_bin_set_cur		697760	2					
ANR	697837	ParameterList	"RCore * core , RBinFile * binfile"		697760	3					
ANR	697838	Parameter	RCore * core	193:29:4653:4663	697760	0	True				
ANR	697839	ParameterType	RCore *		697760	0					
ANR	697840	Identifier	core		697760	1					
ANR	697841	Parameter	RBinFile * binfile	193:42:4666:4682	697760	1	True				
ANR	697842	ParameterType	RBinFile *		697760	0					
ANR	697843	Identifier	binfile		697760	1					
ANR	697844	CFGEntryNode	ENTRY		697760		True				
ANR	697845	CFGExitNode	EXIT		697760		True				
ANR	697846	Symbol	core		697760						
ANR	697847	Symbol	NULL		697760						
ANR	697848	Symbol	* core		697760						
ANR	697849	Symbol	false		697760						
ANR	697850	Symbol	true		697760						
ANR	697851	Symbol	r_bin_file_find_by_fd		697760						
ANR	697852	Symbol	r_core_file_cur_fd		697760						
ANR	697853	Symbol	core -> bin		697760						
ANR	697854	Symbol	binfile		697760						
ANR	697855	Symbol	fd		697760						
ANR	697856	Function	r_core_bin_refresh_strings	211:0:5011:5111							
ANR	697857	FunctionDef	r_core_bin_refresh_strings (RCore * r)		697856	0					
ANR	697858	CompoundStatement		211:47:5058:5111	697856	0					
ANR	697859	ReturnStatement	return r_bin_reset_strings ( r -> bin ) ? true : false ;	212:1:5061:5109	697856	0	True				
ANR	697860	ConditionalExpression	r_bin_reset_strings ( r -> bin ) ? true : false		697856	0					
ANR	697861	Condition	r_bin_reset_strings ( r -> bin )		697856	0					
ANR	697862	CallExpression	r_bin_reset_strings ( r -> bin )		697856	0					
ANR	697863	Callee	r_bin_reset_strings		697856	0					
ANR	697864	Identifier	r_bin_reset_strings		697856	0					
ANR	697865	ArgumentList	r -> bin		697856	1					
ANR	697866	Argument	r -> bin		697856	0					
ANR	697867	PtrMemberAccess	r -> bin		697856	0					
ANR	697868	Identifier	r		697856	0					
ANR	697869	Identifier	bin		697856	1					
ANR	697870	Identifier	true		697856	1					
ANR	697871	Identifier	false		697856	2					
ANR	697872	ReturnType	R_API int		697856	1					
ANR	697873	Identifier	r_core_bin_refresh_strings		697856	2					
ANR	697874	ParameterList	RCore * r		697856	3					
ANR	697875	Parameter	RCore * r	211:37:5048:5055	697856	0	True				
ANR	697876	ParameterType	RCore *		697856	0					
ANR	697877	Identifier	r		697856	1					
ANR	697878	CFGEntryNode	ENTRY		697856		True				
ANR	697879	CFGExitNode	EXIT		697856		True				
ANR	697880	Symbol	r		697856						
ANR	697881	Symbol	r -> bin		697856						
ANR	697882	Symbol	true		697856						
ANR	697883	Symbol	false		697856						
ANR	697884	Symbol	* r		697856						
ANR	697885	Symbol	r_bin_reset_strings		697856						
ANR	697886	Function	_print_strings	215:0:5114:11126							
ANR	697887	FunctionDef	"_print_strings (RCore * r , RList * list , int mode , int va)"		697886	0					
ANR	697888	CompoundStatement		215:68:5182:11126	697886	0					
ANR	697889	IdentifierDeclStatement	"bool b64str = r_config_get_i ( r -> config , ""bin.b64str"" ) ;"	216:1:5185:5239	697886	0	True				
ANR	697890	IdentifierDecl	"b64str = r_config_get_i ( r -> config , ""bin.b64str"" )"		697886	0					
ANR	697891	IdentifierDeclType	bool		697886	0					
ANR	697892	Identifier	b64str		697886	1					
ANR	697893	AssignmentExpression	"b64str = r_config_get_i ( r -> config , ""bin.b64str"" )"		697886	2		=			
ANR	697894	Identifier	b64str		697886	0					
ANR	697895	CallExpression	"r_config_get_i ( r -> config , ""bin.b64str"" )"		697886	1					
ANR	697896	Callee	r_config_get_i		697886	0					
ANR	697897	Identifier	r_config_get_i		697886	0					
ANR	697898	ArgumentList	r -> config		697886	1					
ANR	697899	Argument	r -> config		697886	0					
ANR	697900	PtrMemberAccess	r -> config		697886	0					
ANR	697901	Identifier	r		697886	0					
ANR	697902	Identifier	config		697886	1					
ANR	697903	Argument	"""bin.b64str"""		697886	1					
ANR	697904	PrimaryExpression	"""bin.b64str"""		697886	0					
ANR	697905	IdentifierDeclStatement	"int minstr = r_config_get_i ( r -> config , ""bin.minstr"" ) ;"	217:1:5242:5295	697886	1	True				
ANR	697906	IdentifierDecl	"minstr = r_config_get_i ( r -> config , ""bin.minstr"" )"		697886	0					
ANR	697907	IdentifierDeclType	int		697886	0					
ANR	697908	Identifier	minstr		697886	1					
ANR	697909	AssignmentExpression	"minstr = r_config_get_i ( r -> config , ""bin.minstr"" )"		697886	2		=			
ANR	697910	Identifier	minstr		697886	0					
ANR	697911	CallExpression	"r_config_get_i ( r -> config , ""bin.minstr"" )"		697886	1					
ANR	697912	Callee	r_config_get_i		697886	0					
ANR	697913	Identifier	r_config_get_i		697886	0					
ANR	697914	ArgumentList	r -> config		697886	1					
ANR	697915	Argument	r -> config		697886	0					
ANR	697916	PtrMemberAccess	r -> config		697886	0					
ANR	697917	Identifier	r		697886	0					
ANR	697918	Identifier	config		697886	1					
ANR	697919	Argument	"""bin.minstr"""		697886	1					
ANR	697920	PrimaryExpression	"""bin.minstr"""		697886	0					
ANR	697921	IdentifierDeclStatement	"int maxstr = r_config_get_i ( r -> config , ""bin.maxstr"" ) ;"	218:1:5298:5351	697886	2	True				
ANR	697922	IdentifierDecl	"maxstr = r_config_get_i ( r -> config , ""bin.maxstr"" )"		697886	0					
ANR	697923	IdentifierDeclType	int		697886	0					
ANR	697924	Identifier	maxstr		697886	1					
ANR	697925	AssignmentExpression	"maxstr = r_config_get_i ( r -> config , ""bin.maxstr"" )"		697886	2		=			
ANR	697926	Identifier	maxstr		697886	0					
ANR	697927	CallExpression	"r_config_get_i ( r -> config , ""bin.maxstr"" )"		697886	1					
ANR	697928	Callee	r_config_get_i		697886	0					
ANR	697929	Identifier	r_config_get_i		697886	0					
ANR	697930	ArgumentList	r -> config		697886	1					
ANR	697931	Argument	r -> config		697886	0					
ANR	697932	PtrMemberAccess	r -> config		697886	0					
ANR	697933	Identifier	r		697886	0					
ANR	697934	Identifier	config		697886	1					
ANR	697935	Argument	"""bin.maxstr"""		697886	1					
ANR	697936	PrimaryExpression	"""bin.maxstr"""		697886	0					
ANR	697937	IdentifierDeclStatement	RBin * bin = r -> bin ;	219:1:5354:5372	697886	3	True				
ANR	697938	IdentifierDecl	* bin = r -> bin		697886	0					
ANR	697939	IdentifierDeclType	RBin *		697886	0					
ANR	697940	Identifier	bin		697886	1					
ANR	697941	AssignmentExpression	* bin = r -> bin		697886	2		=			
ANR	697942	Identifier	bin		697886	0					
ANR	697943	PtrMemberAccess	r -> bin		697886	1					
ANR	697944	Identifier	r		697886	0					
ANR	697945	Identifier	bin		697886	1					
ANR	697946	IdentifierDeclStatement	RBinObject * obj = r_bin_cur_object ( bin ) ;	220:1:5375:5415	697886	4	True				
ANR	697947	IdentifierDecl	* obj = r_bin_cur_object ( bin )		697886	0					
ANR	697948	IdentifierDeclType	RBinObject *		697886	0					
ANR	697949	Identifier	obj		697886	1					
ANR	697950	AssignmentExpression	* obj = r_bin_cur_object ( bin )		697886	2		=			
ANR	697951	Identifier	obj		697886	0					
ANR	697952	CallExpression	r_bin_cur_object ( bin )		697886	1					
ANR	697953	Callee	r_bin_cur_object		697886	0					
ANR	697954	Identifier	r_bin_cur_object		697886	0					
ANR	697955	ArgumentList	bin		697886	1					
ANR	697956	Argument	bin		697886	0					
ANR	697957	Identifier	bin		697886	0					
ANR	697958	IdentifierDeclStatement	RListIter * iter ;	221:1:5418:5433	697886	5	True				
ANR	697959	IdentifierDecl	* iter		697886	0					
ANR	697960	IdentifierDeclType	RListIter *		697886	0					
ANR	697961	Identifier	iter		697886	1					
ANR	697962	IdentifierDeclStatement	RListIter * last_processed = NULL ;	222:1:5436:5468	697886	6	True				
ANR	697963	IdentifierDecl	* last_processed = NULL		697886	0					
ANR	697964	IdentifierDeclType	RListIter *		697886	0					
ANR	697965	Identifier	last_processed		697886	1					
ANR	697966	AssignmentExpression	* last_processed = NULL		697886	2		=			
ANR	697967	Identifier	NULL		697886	0					
ANR	697968	Identifier	NULL		697886	1					
ANR	697969	IdentifierDeclStatement	RBinString * string ;	223:1:5471:5489	697886	7	True				
ANR	697970	IdentifierDecl	* string		697886	0					
ANR	697971	IdentifierDeclType	RBinString *		697886	0					
ANR	697972	Identifier	string		697886	1					
ANR	697973	IdentifierDeclStatement	RBinSection * section ;	224:1:5492:5512	697886	8	True				
ANR	697974	IdentifierDecl	* section		697886	0					
ANR	697975	IdentifierDeclType	RBinSection *		697886	0					
ANR	697976	Identifier	section		697886	1					
ANR	697977	IdentifierDeclStatement	char * q ;	225:1:5515:5522	697886	9	True				
ANR	697978	IdentifierDecl	* q		697886	0					
ANR	697979	IdentifierDeclType	char *		697886	0					
ANR	697980	Identifier	q		697886	1					
ANR	697981	ExpressionStatement	bin -> minstrlen = minstr	227:1:5526:5549	697886	10	True				
ANR	697982	AssignmentExpression	bin -> minstrlen = minstr		697886	0		=			
ANR	697983	PtrMemberAccess	bin -> minstrlen		697886	0					
ANR	697984	Identifier	bin		697886	0					
ANR	697985	Identifier	minstrlen		697886	1					
ANR	697986	Identifier	minstr		697886	1					
ANR	697987	ExpressionStatement	bin -> maxstrlen = maxstr	228:1:5552:5575	697886	11	True				
ANR	697988	AssignmentExpression	bin -> maxstrlen = maxstr		697886	0		=			
ANR	697989	PtrMemberAccess	bin -> maxstrlen		697886	0					
ANR	697990	Identifier	bin		697886	0					
ANR	697991	Identifier	maxstrlen		697886	1					
ANR	697992	Identifier	maxstr		697886	1					
ANR	697993	IfStatement	if ( IS_MODE_JSON ( mode ) )		697886	12					
ANR	697994	Condition	IS_MODE_JSON ( mode )	229:5:5582:5600	697886	0	True				
ANR	697995	CallExpression	IS_MODE_JSON ( mode )		697886	0					
ANR	697996	Callee	IS_MODE_JSON		697886	0					
ANR	697997	Identifier	IS_MODE_JSON		697886	0					
ANR	697998	ArgumentList	mode		697886	1					
ANR	697999	Argument	mode		697886	0					
ANR	698000	Identifier	mode		697886	0					
ANR	698001	CompoundStatement		15:26:420:420	697886	1					
ANR	698002	ExpressionStatement	"r_cons_printf ( ""["" )"	230:2:5607:5626	697886	0	True				
ANR	698003	CallExpression	"r_cons_printf ( ""["" )"		697886	0					
ANR	698004	Callee	r_cons_printf		697886	0					
ANR	698005	Identifier	r_cons_printf		697886	0					
ANR	698006	ArgumentList	"""["""		697886	1					
ANR	698007	Argument	"""["""		697886	0					
ANR	698008	PrimaryExpression	"""["""		697886	0					
ANR	698009	IfStatement	if ( IS_MODE_RAD ( mode ) )		697886	13					
ANR	698010	Condition	IS_MODE_RAD ( mode )	232:5:5636:5653	697886	0	True				
ANR	698011	CallExpression	IS_MODE_RAD ( mode )		697886	0					
ANR	698012	Callee	IS_MODE_RAD		697886	0					
ANR	698013	Identifier	IS_MODE_RAD		697886	0					
ANR	698014	ArgumentList	mode		697886	1					
ANR	698015	Argument	mode		697886	0					
ANR	698016	Identifier	mode		697886	0					
ANR	698017	CompoundStatement		18:25:473:473	697886	1					
ANR	698018	ExpressionStatement	"r_cons_println ( ""fs strings"" )"	233:2:5660:5689	697886	0	True				
ANR	698019	CallExpression	"r_cons_println ( ""fs strings"" )"		697886	0					
ANR	698020	Callee	r_cons_println		697886	0					
ANR	698021	Identifier	r_cons_println		697886	0					
ANR	698022	ArgumentList	"""fs strings"""		697886	1					
ANR	698023	Argument	"""fs strings"""		697886	0					
ANR	698024	PrimaryExpression	"""fs strings"""		697886	0					
ANR	698025	IfStatement	"if ( IS_MODE_SET ( mode ) && r_config_get_i ( r -> config , ""bin.strings"" ) )"		697886	14					
ANR	698026	Condition	"IS_MODE_SET ( mode ) && r_config_get_i ( r -> config , ""bin.strings"" )"	235:5:5699:5761	697886	0	True				
ANR	698027	AndExpression	"IS_MODE_SET ( mode ) && r_config_get_i ( r -> config , ""bin.strings"" )"		697886	0		&&			
ANR	698028	CallExpression	IS_MODE_SET ( mode )		697886	0					
ANR	698029	Callee	IS_MODE_SET		697886	0					
ANR	698030	Identifier	IS_MODE_SET		697886	0					
ANR	698031	ArgumentList	mode		697886	1					
ANR	698032	Argument	mode		697886	0					
ANR	698033	Identifier	mode		697886	0					
ANR	698034	CallExpression	"r_config_get_i ( r -> config , ""bin.strings"" )"		697886	1					
ANR	698035	Callee	r_config_get_i		697886	0					
ANR	698036	Identifier	r_config_get_i		697886	0					
ANR	698037	ArgumentList	r -> config		697886	1					
ANR	698038	Argument	r -> config		697886	0					
ANR	698039	PtrMemberAccess	r -> config		697886	0					
ANR	698040	Identifier	r		697886	0					
ANR	698041	Identifier	config		697886	1					
ANR	698042	Argument	"""bin.strings"""		697886	1					
ANR	698043	PrimaryExpression	"""bin.strings"""		697886	0					
ANR	698044	CompoundStatement		21:70:581:581	697886	1					
ANR	698045	ExpressionStatement	"r_flag_space_set ( r -> flags , R_FLAGS_FS_STRINGS )"	236:2:5768:5815	697886	0	True				
ANR	698046	CallExpression	"r_flag_space_set ( r -> flags , R_FLAGS_FS_STRINGS )"		697886	0					
ANR	698047	Callee	r_flag_space_set		697886	0					
ANR	698048	Identifier	r_flag_space_set		697886	0					
ANR	698049	ArgumentList	r -> flags		697886	1					
ANR	698050	Argument	r -> flags		697886	0					
ANR	698051	PtrMemberAccess	r -> flags		697886	0					
ANR	698052	Identifier	r		697886	0					
ANR	698053	Identifier	flags		697886	1					
ANR	698054	Argument	R_FLAGS_FS_STRINGS		697886	1					
ANR	698055	Identifier	R_FLAGS_FS_STRINGS		697886	0					
ANR	698056	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	237:2:5819:5849	697886	1	True				
ANR	698057	CallExpression	"r_cons_break_push ( NULL , NULL )"		697886	0					
ANR	698058	Callee	r_cons_break_push		697886	0					
ANR	698059	Identifier	r_cons_break_push		697886	0					
ANR	698060	ArgumentList	NULL		697886	1					
ANR	698061	Argument	NULL		697886	0					
ANR	698062	Identifier	NULL		697886	0					
ANR	698063	Argument	NULL		697886	1					
ANR	698064	Identifier	NULL		697886	0					
ANR	698065	IfStatement	if ( IS_MODE_NORMAL ( mode ) )		697886	15					
ANR	698066	Condition	IS_MODE_NORMAL ( mode )	239:5:5859:5879	697886	0	True				
ANR	698067	CallExpression	IS_MODE_NORMAL ( mode )		697886	0					
ANR	698068	Callee	IS_MODE_NORMAL		697886	0					
ANR	698069	Identifier	IS_MODE_NORMAL		697886	0					
ANR	698070	ArgumentList	mode		697886	1					
ANR	698071	Argument	mode		697886	0					
ANR	698072	Identifier	mode		697886	0					
ANR	698073	CompoundStatement		25:28:699:699	697886	1					
ANR	698074	ExpressionStatement	"r_cons_printf ( ""[Strings]\\n"" )"	240:2:5886:5915	697886	0	True				
ANR	698075	CallExpression	"r_cons_printf ( ""[Strings]\\n"" )"		697886	0					
ANR	698076	Callee	r_cons_printf		697886	0					
ANR	698077	Identifier	r_cons_printf		697886	0					
ANR	698078	ArgumentList	"""[Strings]\\n"""		697886	1					
ANR	698079	Argument	"""[Strings]\\n"""		697886	0					
ANR	698080	PrimaryExpression	"""[Strings]\\n"""		697886	0					
ANR	698081	ExpressionStatement	"r_cons_printf ( ""Num Paddr      Vaddr      Len Size Section  Type  String\\n"" )"	241:2:5919:5995	697886	1	True				
ANR	698082	CallExpression	"r_cons_printf ( ""Num Paddr      Vaddr      Len Size Section  Type  String\\n"" )"		697886	0					
ANR	698083	Callee	r_cons_printf		697886	0					
ANR	698084	Identifier	r_cons_printf		697886	0					
ANR	698085	ArgumentList	"""Num Paddr      Vaddr      Len Size Section  Type  String\\n"""		697886	1					
ANR	698086	Argument	"""Num Paddr      Vaddr      Len Size Section  Type  String\\n"""		697886	0					
ANR	698087	PrimaryExpression	"""Num Paddr      Vaddr      Len Size Section  Type  String\\n"""		697886	0					
ANR	698088	IdentifierDeclStatement	RBinString b64 = { 0 } ;	243:1:6001:6023	697886	16	True				
ANR	698089	IdentifierDecl	b64 = { 0 }		697886	0					
ANR	698090	IdentifierDeclType	RBinString		697886	0					
ANR	698091	Identifier	b64		697886	1					
ANR	698092	AssignmentExpression	b64 = { 0 }		697886	2		=			
ANR	698093	Identifier	b64		697886	0					
ANR	698094	InitializerList	0		697886	1					
ANR	698095	PrimaryExpression	0		697886	0					
ANR	698096	Statement	r_list_foreach	244:1:6026:6039	697886	17	True				
ANR	698097	Statement	(	244:16:6041:6041	697886	18	True				
ANR	698098	Statement	list	244:17:6042:6045	697886	19	True				
ANR	698099	Statement	","	244:21:6046:6046	697886	20	True				
ANR	698100	Statement	iter	244:23:6048:6051	697886	21	True				
ANR	698101	Statement	","	244:27:6052:6052	697886	22	True				
ANR	698102	Statement	string	244:29:6054:6059	697886	23	True				
ANR	698103	Statement	)	244:35:6060:6060	697886	24	True				
ANR	698104	CompoundStatement		32:2:925:942	697886	25					
ANR	698105	IdentifierDeclStatement	"const char * section_name , * type_string ;"	245:2:6066:6104	697886	0	True				
ANR	698106	IdentifierDecl	* section_name		697886	0					
ANR	698107	IdentifierDeclType	const char *		697886	0					
ANR	698108	Identifier	section_name		697886	1					
ANR	698109	IdentifierDecl	* type_string		697886	1					
ANR	698110	IdentifierDeclType	const char *		697886	0					
ANR	698111	Identifier	type_string		697886	1					
ANR	698112	IdentifierDeclStatement	"ut64 paddr , vaddr ;"	246:2:6108:6125	697886	1	True				
ANR	698113	IdentifierDecl	paddr		697886	0					
ANR	698114	IdentifierDeclType	ut64		697886	0					
ANR	698115	Identifier	paddr		697886	1					
ANR	698116	IdentifierDecl	vaddr		697886	1					
ANR	698117	IdentifierDeclType	ut64		697886	0					
ANR	698118	Identifier	vaddr		697886	1					
ANR	698119	ExpressionStatement	paddr = string -> paddr	247:2:6129:6150	697886	2	True				
ANR	698120	AssignmentExpression	paddr = string -> paddr		697886	0		=			
ANR	698121	Identifier	paddr		697886	0					
ANR	698122	PtrMemberAccess	string -> paddr		697886	1					
ANR	698123	Identifier	string		697886	0					
ANR	698124	Identifier	paddr		697886	1					
ANR	698125	ExpressionStatement	"vaddr = rva ( r -> bin , paddr , string -> vaddr , va )"	248:2:6154:6200	697886	3	True				
ANR	698126	AssignmentExpression	"vaddr = rva ( r -> bin , paddr , string -> vaddr , va )"		697886	0		=			
ANR	698127	Identifier	vaddr		697886	0					
ANR	698128	CallExpression	"rva ( r -> bin , paddr , string -> vaddr , va )"		697886	1					
ANR	698129	Callee	rva		697886	0					
ANR	698130	Identifier	rva		697886	0					
ANR	698131	ArgumentList	r -> bin		697886	1					
ANR	698132	Argument	r -> bin		697886	0					
ANR	698133	PtrMemberAccess	r -> bin		697886	0					
ANR	698134	Identifier	r		697886	0					
ANR	698135	Identifier	bin		697886	1					
ANR	698136	Argument	paddr		697886	1					
ANR	698137	Identifier	paddr		697886	0					
ANR	698138	Argument	string -> vaddr		697886	2					
ANR	698139	PtrMemberAccess	string -> vaddr		697886	0					
ANR	698140	Identifier	string		697886	0					
ANR	698141	Identifier	vaddr		697886	1					
ANR	698142	Argument	va		697886	3					
ANR	698143	Identifier	va		697886	0					
ANR	698144	IfStatement	"if ( ! r_bin_string_filter ( bin , string -> string , vaddr ) )"		697886	4					
ANR	698145	Condition	"! r_bin_string_filter ( bin , string -> string , vaddr )"	249:6:6208:6256	697886	0	True				
ANR	698146	UnaryOperationExpression	"! r_bin_string_filter ( bin , string -> string , vaddr )"		697886	0					
ANR	698147	UnaryOperator	!		697886	0					
ANR	698148	CallExpression	"r_bin_string_filter ( bin , string -> string , vaddr )"		697886	1					
ANR	698149	Callee	r_bin_string_filter		697886	0					
ANR	698150	Identifier	r_bin_string_filter		697886	0					
ANR	698151	ArgumentList	bin		697886	1					
ANR	698152	Argument	bin		697886	0					
ANR	698153	Identifier	bin		697886	0					
ANR	698154	Argument	string -> string		697886	1					
ANR	698155	PtrMemberAccess	string -> string		697886	0					
ANR	698156	Identifier	string		697886	0					
ANR	698157	Identifier	string		697886	1					
ANR	698158	Argument	vaddr		697886	2					
ANR	698159	Identifier	vaddr		697886	0					
ANR	698160	CompoundStatement		35:57:1076:1076	697886	1					
ANR	698161	ContinueStatement	continue ;	250:3:6264:6272	697886	0	True				
ANR	698162	IfStatement	if ( string -> length < minstr )		697886	5					
ANR	698163	Condition	string -> length < minstr	252:6:6284:6306	697886	0	True				
ANR	698164	RelationalExpression	string -> length < minstr		697886	0		<			
ANR	698165	PtrMemberAccess	string -> length		697886	0					
ANR	698166	Identifier	string		697886	0					
ANR	698167	Identifier	length		697886	1					
ANR	698168	Identifier	minstr		697886	1					
ANR	698169	CompoundStatement		38:31:1126:1126	697886	1					
ANR	698170	ContinueStatement	continue ;	253:3:6314:6322	697886	0	True				
ANR	698171	IfStatement	if ( maxstr && string -> length > maxstr )		697886	6					
ANR	698172	Condition	maxstr && string -> length > maxstr	255:6:6334:6366	697886	0	True				
ANR	698173	AndExpression	maxstr && string -> length > maxstr		697886	0		&&			
ANR	698174	Identifier	maxstr		697886	0					
ANR	698175	RelationalExpression	string -> length > maxstr		697886	1		>			
ANR	698176	PtrMemberAccess	string -> length		697886	0					
ANR	698177	Identifier	string		697886	0					
ANR	698178	Identifier	length		697886	1					
ANR	698179	Identifier	maxstr		697886	1					
ANR	698180	CompoundStatement		41:41:1186:1186	697886	1					
ANR	698181	ContinueStatement	continue ;	256:3:6374:6382	697886	0	True				
ANR	698182	ExpressionStatement	"section = obj ? r_bin_get_section_at ( obj , paddr , 0 ) : NULL"	259:2:6391:6448	697886	7	True				
ANR	698183	AssignmentExpression	"section = obj ? r_bin_get_section_at ( obj , paddr , 0 ) : NULL"		697886	0		=			
ANR	698184	Identifier	section		697886	0					
ANR	698185	ConditionalExpression	"obj ? r_bin_get_section_at ( obj , paddr , 0 ) : NULL"		697886	1					
ANR	698186	Condition	obj		697886	0					
ANR	698187	Identifier	obj		697886	0					
ANR	698188	CallExpression	"r_bin_get_section_at ( obj , paddr , 0 )"		697886	1					
ANR	698189	Callee	r_bin_get_section_at		697886	0					
ANR	698190	Identifier	r_bin_get_section_at		697886	0					
ANR	698191	ArgumentList	obj		697886	1					
ANR	698192	Argument	obj		697886	0					
ANR	698193	Identifier	obj		697886	0					
ANR	698194	Argument	paddr		697886	1					
ANR	698195	Identifier	paddr		697886	0					
ANR	698196	Argument	0		697886	2					
ANR	698197	PrimaryExpression	0		697886	0					
ANR	698198	Identifier	NULL		697886	2					
ANR	698199	ExpressionStatement	"section_name = section ? section -> name : """""	260:2:6452:6495	697886	8	True				
ANR	698200	AssignmentExpression	"section_name = section ? section -> name : """""		697886	0		=			
ANR	698201	Identifier	section_name		697886	0					
ANR	698202	ConditionalExpression	"section ? section -> name : """""		697886	1					
ANR	698203	Condition	section		697886	0					
ANR	698204	Identifier	section		697886	0					
ANR	698205	PtrMemberAccess	section -> name		697886	1					
ANR	698206	Identifier	section		697886	0					
ANR	698207	Identifier	name		697886	1					
ANR	698208	PrimaryExpression	""""""		697886	2					
ANR	698209	ExpressionStatement	type_string = r_bin_string_type ( string -> type )	261:2:6499:6545	697886	9	True				
ANR	698210	AssignmentExpression	type_string = r_bin_string_type ( string -> type )		697886	0		=			
ANR	698211	Identifier	type_string		697886	0					
ANR	698212	CallExpression	r_bin_string_type ( string -> type )		697886	1					
ANR	698213	Callee	r_bin_string_type		697886	0					
ANR	698214	Identifier	r_bin_string_type		697886	0					
ANR	698215	ArgumentList	string -> type		697886	1					
ANR	698216	Argument	string -> type		697886	0					
ANR	698217	PtrMemberAccess	string -> type		697886	0					
ANR	698218	Identifier	string		697886	0					
ANR	698219	Identifier	type		697886	1					
ANR	698220	IfStatement	if ( b64str )		697886	10					
ANR	698221	Condition	b64str	262:6:6553:6558	697886	0	True				
ANR	698222	Identifier	b64str		697886	0					
ANR	698223	CompoundStatement		49:3:1383:1432	697886	1					
ANR	698224	IdentifierDeclStatement	"ut8 * s = r_base64_decode_dyn ( string -> string , - 1 ) ;"	263:3:6566:6615	697886	0	True				
ANR	698225	IdentifierDecl	"* s = r_base64_decode_dyn ( string -> string , - 1 )"		697886	0					
ANR	698226	IdentifierDeclType	ut8 *		697886	0					
ANR	698227	Identifier	s		697886	1					
ANR	698228	AssignmentExpression	"* s = r_base64_decode_dyn ( string -> string , - 1 )"		697886	2		=			
ANR	698229	Identifier	s		697886	0					
ANR	698230	CallExpression	"r_base64_decode_dyn ( string -> string , - 1 )"		697886	1					
ANR	698231	Callee	r_base64_decode_dyn		697886	0					
ANR	698232	Identifier	r_base64_decode_dyn		697886	0					
ANR	698233	ArgumentList	string -> string		697886	1					
ANR	698234	Argument	string -> string		697886	0					
ANR	698235	PtrMemberAccess	string -> string		697886	0					
ANR	698236	Identifier	string		697886	0					
ANR	698237	Identifier	string		697886	1					
ANR	698238	Argument	- 1		697886	1					
ANR	698239	UnaryOperationExpression	- 1		697886	0					
ANR	698240	UnaryOperator	-		697886	0					
ANR	698241	PrimaryExpression	1		697886	1					
ANR	698242	IfStatement	if ( s && * s && IS_PRINTABLE ( * s ) )		697886	1					
ANR	698243	Condition	s && * s && IS_PRINTABLE ( * s )	264:7:6624:6651	697886	0	True				
ANR	698244	AndExpression	s && * s && IS_PRINTABLE ( * s )		697886	0		&&			
ANR	698245	Identifier	s		697886	0					
ANR	698246	AndExpression	* s && IS_PRINTABLE ( * s )		697886	1		&&			
ANR	698247	UnaryOperationExpression	* s		697886	0					
ANR	698248	UnaryOperator	*		697886	0					
ANR	698249	Identifier	s		697886	1					
ANR	698250	CallExpression	IS_PRINTABLE ( * s )		697886	1					
ANR	698251	Callee	IS_PRINTABLE		697886	0					
ANR	698252	Identifier	IS_PRINTABLE		697886	0					
ANR	698253	ArgumentList	* s		697886	1					
ANR	698254	Argument	* s		697886	0					
ANR	698255	UnaryOperationExpression	* s		697886	0					
ANR	698256	UnaryOperator	*		697886	0					
ANR	698257	Identifier	s		697886	1					
ANR	698258	CompoundStatement		50:37:1471:1471	697886	1					
ANR	698259	ExpressionStatement	free ( b64 . string )	266:4:6689:6706	697886	0	True				
ANR	698260	CallExpression	free ( b64 . string )		697886	0					
ANR	698261	Callee	free		697886	0					
ANR	698262	Identifier	free		697886	0					
ANR	698263	ArgumentList	b64 . string		697886	1					
ANR	698264	Argument	b64 . string		697886	0					
ANR	698265	MemberAccess	b64 . string		697886	0					
ANR	698266	Identifier	b64		697886	0					
ANR	698267	Identifier	string		697886	1					
ANR	698268	ExpressionStatement	"memcpy ( & b64 , string , sizeof ( b64 ) )"	267:4:6712:6747	697886	1	True				
ANR	698269	CallExpression	"memcpy ( & b64 , string , sizeof ( b64 ) )"		697886	0					
ANR	698270	Callee	memcpy		697886	0					
ANR	698271	Identifier	memcpy		697886	0					
ANR	698272	ArgumentList	& b64		697886	1					
ANR	698273	Argument	& b64		697886	0					
ANR	698274	UnaryOperationExpression	& b64		697886	0					
ANR	698275	UnaryOperator	&		697886	0					
ANR	698276	Identifier	b64		697886	1					
ANR	698277	Argument	string		697886	1					
ANR	698278	Identifier	string		697886	0					
ANR	698279	Argument	sizeof ( b64 )		697886	2					
ANR	698280	SizeofExpression	sizeof ( b64 )		697886	0					
ANR	698281	Sizeof	sizeof		697886	0					
ANR	698282	SizeofOperand	b64		697886	1					
ANR	698283	ExpressionStatement	b64 . string = ( char * ) s	268:4:6753:6775	697886	2	True				
ANR	698284	AssignmentExpression	b64 . string = ( char * ) s		697886	0		=			
ANR	698285	MemberAccess	b64 . string		697886	0					
ANR	698286	Identifier	b64		697886	0					
ANR	698287	Identifier	string		697886	1					
ANR	698288	CastExpression	( char * ) s		697886	1					
ANR	698289	CastTarget	char *		697886	0					
ANR	698290	Identifier	s		697886	1					
ANR	698291	ExpressionStatement	b64 . size = strlen ( b64 . string )	269:4:6781:6811	697886	3	True				
ANR	698292	AssignmentExpression	b64 . size = strlen ( b64 . string )		697886	0		=			
ANR	698293	MemberAccess	b64 . size		697886	0					
ANR	698294	Identifier	b64		697886	0					
ANR	698295	Identifier	size		697886	1					
ANR	698296	CallExpression	strlen ( b64 . string )		697886	1					
ANR	698297	Callee	strlen		697886	0					
ANR	698298	Identifier	strlen		697886	0					
ANR	698299	ArgumentList	b64 . string		697886	1					
ANR	698300	Argument	b64 . string		697886	0					
ANR	698301	MemberAccess	b64 . string		697886	0					
ANR	698302	Identifier	b64		697886	0					
ANR	698303	Identifier	string		697886	1					
ANR	698304	ExpressionStatement	string = & b64	270:4:6817:6830	697886	4	True				
ANR	698305	AssignmentExpression	string = & b64		697886	0		=			
ANR	698306	Identifier	string		697886	0					
ANR	698307	UnaryOperationExpression	& b64		697886	1					
ANR	698308	UnaryOperator	&		697886	0					
ANR	698309	Identifier	b64		697886	1					
ANR	698310	IfStatement	if ( IS_MODE_SET ( mode ) )		697886	11					
ANR	698311	Condition	IS_MODE_SET ( mode )	273:6:6847:6864	697886	0	True				
ANR	698312	CallExpression	IS_MODE_SET ( mode )		697886	0					
ANR	698313	Callee	IS_MODE_SET		697886	0					
ANR	698314	Identifier	IS_MODE_SET		697886	0					
ANR	698315	ArgumentList	mode		697886	1					
ANR	698316	Argument	mode		697886	0					
ANR	698317	Identifier	mode		697886	0					
ANR	698318	CompoundStatement		74:3:2204:2269	697886	1					
ANR	698319	IdentifierDeclStatement	"char * f_name , * f_realname , * str ;"	274:3:6872:6903	697886	0	True				
ANR	698320	IdentifierDecl	* f_name		697886	0					
ANR	698321	IdentifierDeclType	char *		697886	0					
ANR	698322	Identifier	f_name		697886	1					
ANR	698323	IdentifierDecl	* f_realname		697886	1					
ANR	698324	IdentifierDeclType	char *		697886	0					
ANR	698325	Identifier	f_realname		697886	1					
ANR	698326	IdentifierDecl	* str		697886	2					
ANR	698327	IdentifierDeclType	char *		697886	0					
ANR	698328	Identifier	str		697886	1					
ANR	698329	IfStatement	if ( r_cons_is_breaked ( ) )		697886	1					
ANR	698330	Condition	r_cons_is_breaked ( )	275:7:6912:6931	697886	0	True				
ANR	698331	CallExpression	r_cons_is_breaked ( )		697886	0					
ANR	698332	Callee	r_cons_is_breaked		697886	0					
ANR	698333	Identifier	r_cons_is_breaked		697886	0					
ANR	698334	ArgumentList			697886	1					
ANR	698335	CompoundStatement		61:29:1751:1751	697886	1					
ANR	698336	BreakStatement	break ;	276:4:6940:6945	697886	0	True				
ANR	698337	ExpressionStatement	"r_meta_add ( r -> anal , R_META_TYPE_STRING , vaddr , vaddr + string -> size , string -> string )"	278:3:6955:7040	697886	2	True				
ANR	698338	CallExpression	"r_meta_add ( r -> anal , R_META_TYPE_STRING , vaddr , vaddr + string -> size , string -> string )"		697886	0					
ANR	698339	Callee	r_meta_add		697886	0					
ANR	698340	Identifier	r_meta_add		697886	0					
ANR	698341	ArgumentList	r -> anal		697886	1					
ANR	698342	Argument	r -> anal		697886	0					
ANR	698343	PtrMemberAccess	r -> anal		697886	0					
ANR	698344	Identifier	r		697886	0					
ANR	698345	Identifier	anal		697886	1					
ANR	698346	Argument	R_META_TYPE_STRING		697886	1					
ANR	698347	Identifier	R_META_TYPE_STRING		697886	0					
ANR	698348	Argument	vaddr		697886	2					
ANR	698349	Identifier	vaddr		697886	0					
ANR	698350	Argument	vaddr + string -> size		697886	3					
ANR	698351	AdditiveExpression	vaddr + string -> size		697886	0		+			
ANR	698352	Identifier	vaddr		697886	0					
ANR	698353	PtrMemberAccess	string -> size		697886	1					
ANR	698354	Identifier	string		697886	0					
ANR	698355	Identifier	size		697886	1					
ANR	698356	Argument	string -> string		697886	4					
ANR	698357	PtrMemberAccess	string -> string		697886	0					
ANR	698358	Identifier	string		697886	0					
ANR	698359	Identifier	string		697886	1					
ANR	698360	ExpressionStatement	f_name = strdup ( string -> string )	279:3:7045:7077	697886	3	True				
ANR	698361	AssignmentExpression	f_name = strdup ( string -> string )		697886	0		=			
ANR	698362	Identifier	f_name		697886	0					
ANR	698363	CallExpression	strdup ( string -> string )		697886	1					
ANR	698364	Callee	strdup		697886	0					
ANR	698365	Identifier	strdup		697886	0					
ANR	698366	ArgumentList	string -> string		697886	1					
ANR	698367	Argument	string -> string		697886	0					
ANR	698368	PtrMemberAccess	string -> string		697886	0					
ANR	698369	Identifier	string		697886	0					
ANR	698370	Identifier	string		697886	1					
ANR	698371	ExpressionStatement	"r_name_filter ( f_name , - 1 )"	280:3:7082:7108	697886	4	True				
ANR	698372	CallExpression	"r_name_filter ( f_name , - 1 )"		697886	0					
ANR	698373	Callee	r_name_filter		697886	0					
ANR	698374	Identifier	r_name_filter		697886	0					
ANR	698375	ArgumentList	f_name		697886	1					
ANR	698376	Argument	f_name		697886	0					
ANR	698377	Identifier	f_name		697886	0					
ANR	698378	Argument	- 1		697886	1					
ANR	698379	UnaryOperationExpression	- 1		697886	0					
ANR	698380	UnaryOperator	-		697886	0					
ANR	698381	PrimaryExpression	1		697886	1					
ANR	698382	IfStatement	if ( r -> bin -> prefix )		697886	5					
ANR	698383	Condition	r -> bin -> prefix	281:7:7117:7130	697886	0	True				
ANR	698384	PtrMemberAccess	r -> bin -> prefix		697886	0					
ANR	698385	PtrMemberAccess	r -> bin		697886	0					
ANR	698386	Identifier	r		697886	0					
ANR	698387	Identifier	bin		697886	1					
ANR	698388	Identifier	prefix		697886	1					
ANR	698389	CompoundStatement		67:23:1950:1950	697886	1					
ANR	698390	ExpressionStatement	"str = r_str_newf ( ""%s.str.%s"" , r -> bin -> prefix , f_name )"	282:4:7139:7193	697886	0	True				
ANR	698391	AssignmentExpression	"str = r_str_newf ( ""%s.str.%s"" , r -> bin -> prefix , f_name )"		697886	0		=			
ANR	698392	Identifier	str		697886	0					
ANR	698393	CallExpression	"r_str_newf ( ""%s.str.%s"" , r -> bin -> prefix , f_name )"		697886	1					
ANR	698394	Callee	r_str_newf		697886	0					
ANR	698395	Identifier	r_str_newf		697886	0					
ANR	698396	ArgumentList	"""%s.str.%s"""		697886	1					
ANR	698397	Argument	"""%s.str.%s"""		697886	0					
ANR	698398	PrimaryExpression	"""%s.str.%s"""		697886	0					
ANR	698399	Argument	r -> bin -> prefix		697886	1					
ANR	698400	PtrMemberAccess	r -> bin -> prefix		697886	0					
ANR	698401	PtrMemberAccess	r -> bin		697886	0					
ANR	698402	Identifier	r		697886	0					
ANR	698403	Identifier	bin		697886	1					
ANR	698404	Identifier	prefix		697886	1					
ANR	698405	Argument	f_name		697886	2					
ANR	698406	Identifier	f_name		697886	0					
ANR	698407	ExpressionStatement	"f_realname = r_str_newf ( ""%s.\\""%s\\"""" , r -> bin -> prefix , string -> string )"	283:4:7199:7268	697886	1	True				
ANR	698408	AssignmentExpression	"f_realname = r_str_newf ( ""%s.\\""%s\\"""" , r -> bin -> prefix , string -> string )"		697886	0		=			
ANR	698409	Identifier	f_realname		697886	0					
ANR	698410	CallExpression	"r_str_newf ( ""%s.\\""%s\\"""" , r -> bin -> prefix , string -> string )"		697886	1					
ANR	698411	Callee	r_str_newf		697886	0					
ANR	698412	Identifier	r_str_newf		697886	0					
ANR	698413	ArgumentList	"""%s.\\""%s\\"""""		697886	1					
ANR	698414	Argument	"""%s.\\""%s\\"""""		697886	0					
ANR	698415	PrimaryExpression	"""%s.\\""%s\\"""""		697886	0					
ANR	698416	Argument	r -> bin -> prefix		697886	1					
ANR	698417	PtrMemberAccess	r -> bin -> prefix		697886	0					
ANR	698418	PtrMemberAccess	r -> bin		697886	0					
ANR	698419	Identifier	r		697886	0					
ANR	698420	Identifier	bin		697886	1					
ANR	698421	Identifier	prefix		697886	1					
ANR	698422	Argument	string -> string		697886	2					
ANR	698423	PtrMemberAccess	string -> string		697886	0					
ANR	698424	Identifier	string		697886	0					
ANR	698425	Identifier	string		697886	1					
ANR	698426	ElseStatement	else		697886	0					
ANR	698427	CompoundStatement		70:10:2097:2097	697886	0					
ANR	698428	ExpressionStatement	"str = r_str_newf ( ""str.%s"" , f_name )"	285:4:7286:7321	697886	0	True				
ANR	698429	AssignmentExpression	"str = r_str_newf ( ""str.%s"" , f_name )"		697886	0		=			
ANR	698430	Identifier	str		697886	0					
ANR	698431	CallExpression	"r_str_newf ( ""str.%s"" , f_name )"		697886	1					
ANR	698432	Callee	r_str_newf		697886	0					
ANR	698433	Identifier	r_str_newf		697886	0					
ANR	698434	ArgumentList	"""str.%s"""		697886	1					
ANR	698435	Argument	"""str.%s"""		697886	0					
ANR	698436	PrimaryExpression	"""str.%s"""		697886	0					
ANR	698437	Argument	f_name		697886	1					
ANR	698438	Identifier	f_name		697886	0					
ANR	698439	ExpressionStatement	"f_realname = r_str_newf ( ""\\""%s\\"""" , string -> string )"	286:4:7327:7377	697886	1	True				
ANR	698440	AssignmentExpression	"f_realname = r_str_newf ( ""\\""%s\\"""" , string -> string )"		697886	0		=			
ANR	698441	Identifier	f_realname		697886	0					
ANR	698442	CallExpression	"r_str_newf ( ""\\""%s\\"""" , string -> string )"		697886	1					
ANR	698443	Callee	r_str_newf		697886	0					
ANR	698444	Identifier	r_str_newf		697886	0					
ANR	698445	ArgumentList	"""\\""%s\\"""""		697886	1					
ANR	698446	Argument	"""\\""%s\\"""""		697886	0					
ANR	698447	PrimaryExpression	"""\\""%s\\"""""		697886	0					
ANR	698448	Argument	string -> string		697886	1					
ANR	698449	PtrMemberAccess	string -> string		697886	0					
ANR	698450	Identifier	string		697886	0					
ANR	698451	Identifier	string		697886	1					
ANR	698452	IdentifierDeclStatement	"RFlagItem * flag = r_flag_set ( r -> flags , str , vaddr , string -> size ) ;"	288:3:7387:7452	697886	6	True				
ANR	698453	IdentifierDecl	"* flag = r_flag_set ( r -> flags , str , vaddr , string -> size )"		697886	0					
ANR	698454	IdentifierDeclType	RFlagItem *		697886	0					
ANR	698455	Identifier	flag		697886	1					
ANR	698456	AssignmentExpression	"* flag = r_flag_set ( r -> flags , str , vaddr , string -> size )"		697886	2		=			
ANR	698457	Identifier	flag		697886	0					
ANR	698458	CallExpression	"r_flag_set ( r -> flags , str , vaddr , string -> size )"		697886	1					
ANR	698459	Callee	r_flag_set		697886	0					
ANR	698460	Identifier	r_flag_set		697886	0					
ANR	698461	ArgumentList	r -> flags		697886	1					
ANR	698462	Argument	r -> flags		697886	0					
ANR	698463	PtrMemberAccess	r -> flags		697886	0					
ANR	698464	Identifier	r		697886	0					
ANR	698465	Identifier	flags		697886	1					
ANR	698466	Argument	str		697886	1					
ANR	698467	Identifier	str		697886	0					
ANR	698468	Argument	vaddr		697886	2					
ANR	698469	Identifier	vaddr		697886	0					
ANR	698470	Argument	string -> size		697886	3					
ANR	698471	PtrMemberAccess	string -> size		697886	0					
ANR	698472	Identifier	string		697886	0					
ANR	698473	Identifier	size		697886	1					
ANR	698474	ExpressionStatement	"r_flag_item_set_realname ( flag , f_realname )"	289:3:7457:7500	697886	7	True				
ANR	698475	CallExpression	"r_flag_item_set_realname ( flag , f_realname )"		697886	0					
ANR	698476	Callee	r_flag_item_set_realname		697886	0					
ANR	698477	Identifier	r_flag_item_set_realname		697886	0					
ANR	698478	ArgumentList	flag		697886	1					
ANR	698479	Argument	flag		697886	0					
ANR	698480	Identifier	flag		697886	0					
ANR	698481	Argument	f_realname		697886	1					
ANR	698482	Identifier	f_realname		697886	0					
ANR	698483	ExpressionStatement	free ( str )	290:3:7505:7515	697886	8	True				
ANR	698484	CallExpression	free ( str )		697886	0					
ANR	698485	Callee	free		697886	0					
ANR	698486	Identifier	free		697886	0					
ANR	698487	ArgumentList	str		697886	1					
ANR	698488	Argument	str		697886	0					
ANR	698489	Identifier	str		697886	0					
ANR	698490	ExpressionStatement	free ( f_name )	291:3:7520:7533	697886	9	True				
ANR	698491	CallExpression	free ( f_name )		697886	0					
ANR	698492	Callee	free		697886	0					
ANR	698493	Identifier	free		697886	0					
ANR	698494	ArgumentList	f_name		697886	1					
ANR	698495	Argument	f_name		697886	0					
ANR	698496	Identifier	f_name		697886	0					
ANR	698497	ExpressionStatement	free ( f_realname )	292:3:7538:7555	697886	10	True				
ANR	698498	CallExpression	free ( f_realname )		697886	0					
ANR	698499	Callee	free		697886	0					
ANR	698500	Identifier	free		697886	0					
ANR	698501	ArgumentList	f_realname		697886	1					
ANR	698502	Argument	f_realname		697886	0					
ANR	698503	Identifier	f_realname		697886	0					
ANR	698504	ElseStatement	else		697886	0					
ANR	698505	IfStatement	if ( IS_MODE_SIMPLE ( mode ) )		697886	0					
ANR	698506	Condition	IS_MODE_SIMPLE ( mode )	293:13:7570:7590	697886	0	True				
ANR	698507	CallExpression	IS_MODE_SIMPLE ( mode )		697886	0					
ANR	698508	Callee	IS_MODE_SIMPLE		697886	0					
ANR	698509	Identifier	IS_MODE_SIMPLE		697886	0					
ANR	698510	ArgumentList	mode		697886	1					
ANR	698511	Argument	mode		697886	0					
ANR	698512	Identifier	mode		697886	0					
ANR	698513	CompoundStatement		79:36:2410:2410	697886	1					
ANR	698514	Statement	r_cons_printf	294:3:7598:7610	697886	0	True				
ANR	698515	Statement	(	294:17:7612:7612	697886	1	True				
ANR	698516	Statement	"""0x%"""	294:18:7613:7617	697886	2	True				
ANR	698517	Statement	PFMT64x	294:23:7618:7624	697886	3	True				
ANR	698518	Statement	""" %d %d %s\\n"""	294:30:7625:7637	697886	4	True				
ANR	698519	Statement	","	294:43:7638:7638	697886	5	True				
ANR	698520	Statement	vaddr	294:45:7640:7644	697886	6	True				
ANR	698521	Statement	","	294:50:7645:7645	697886	7	True				
ANR	698522	Statement	string	295:4:7651:7656	697886	8	True				
ANR	698523	Statement	->	295:10:7657:7658	697886	9	True				
ANR	698524	Statement	size	295:12:7659:7662	697886	10	True				
ANR	698525	Statement	","	295:16:7663:7663	697886	11	True				
ANR	698526	Statement	string	295:18:7665:7670	697886	12	True				
ANR	698527	Statement	->	295:24:7671:7672	697886	13	True				
ANR	698528	Statement	length	295:26:7673:7678	697886	14	True				
ANR	698529	Statement	","	295:32:7679:7679	697886	15	True				
ANR	698530	Statement	string	295:34:7681:7686	697886	16	True				
ANR	698531	Statement	->	295:40:7687:7688	697886	17	True				
ANR	698532	Statement	string	295:42:7689:7694	697886	18	True				
ANR	698533	Statement	)	295:48:7695:7695	697886	19	True				
ANR	698534	ExpressionStatement		295:49:7696:7696	697886	20	True				
ANR	698535	ElseStatement	else		697886	0					
ANR	698536	IfStatement	if ( IS_MODE_SIMPLEST ( mode ) )		697886	0					
ANR	698537	Condition	IS_MODE_SIMPLEST ( mode )	296:13:7711:7733	697886	0	True				
ANR	698538	CallExpression	IS_MODE_SIMPLEST ( mode )		697886	0					
ANR	698539	Callee	IS_MODE_SIMPLEST		697886	0					
ANR	698540	Identifier	IS_MODE_SIMPLEST		697886	0					
ANR	698541	ArgumentList	mode		697886	1					
ANR	698542	Argument	mode		697886	0					
ANR	698543	Identifier	mode		697886	0					
ANR	698544	CompoundStatement		82:38:2553:2553	697886	1					
ANR	698545	ExpressionStatement	r_cons_println ( string -> string )	297:3:7741:7772	697886	0	True				
ANR	698546	CallExpression	r_cons_println ( string -> string )		697886	0					
ANR	698547	Callee	r_cons_println		697886	0					
ANR	698548	Identifier	r_cons_println		697886	0					
ANR	698549	ArgumentList	string -> string		697886	1					
ANR	698550	Argument	string -> string		697886	0					
ANR	698551	PtrMemberAccess	string -> string		697886	0					
ANR	698552	Identifier	string		697886	0					
ANR	698553	Identifier	string		697886	1					
ANR	698554	ElseStatement	else		697886	0					
ANR	698555	IfStatement	if ( IS_MODE_JSON ( mode ) )		697886	0					
ANR	698556	Condition	IS_MODE_JSON ( mode )	298:13:7787:7805	697886	0	True				
ANR	698557	CallExpression	IS_MODE_JSON ( mode )		697886	0					
ANR	698558	Callee	IS_MODE_JSON		697886	0					
ANR	698559	Identifier	IS_MODE_JSON		697886	0					
ANR	698560	ArgumentList	mode		697886	1					
ANR	698561	Argument	mode		697886	0					
ANR	698562	Identifier	mode		697886	0					
ANR	698563	CompoundStatement		85:3:2630:2645	697886	1					
ANR	698564	IdentifierDeclStatement	int * block_list ;	299:3:7813:7828	697886	0	True				
ANR	698565	IdentifierDecl	* block_list		697886	0					
ANR	698566	IdentifierDeclType	int *		697886	0					
ANR	698567	Identifier	block_list		697886	1					
ANR	698568	ExpressionStatement	"q = r_base64_encode_dyn ( string -> string , - 1 )"	300:3:7833:7877	697886	1	True				
ANR	698569	AssignmentExpression	"q = r_base64_encode_dyn ( string -> string , - 1 )"		697886	0		=			
ANR	698570	Identifier	q		697886	0					
ANR	698571	CallExpression	"r_base64_encode_dyn ( string -> string , - 1 )"		697886	1					
ANR	698572	Callee	r_base64_encode_dyn		697886	0					
ANR	698573	Identifier	r_base64_encode_dyn		697886	0					
ANR	698574	ArgumentList	string -> string		697886	1					
ANR	698575	Argument	string -> string		697886	0					
ANR	698576	PtrMemberAccess	string -> string		697886	0					
ANR	698577	Identifier	string		697886	0					
ANR	698578	Identifier	string		697886	1					
ANR	698579	Argument	- 1		697886	1					
ANR	698580	UnaryOperationExpression	- 1		697886	0					
ANR	698581	UnaryOperator	-		697886	0					
ANR	698582	PrimaryExpression	1		697886	1					
ANR	698583	Statement	r_cons_printf	301:3:7882:7894	697886	2	True				
ANR	698584	Statement	(	301:17:7896:7896	697886	3	True				
ANR	698585	Statement	"""%s{\\""vaddr\\"":%"""	301:18:7897:7912	697886	4	True				
ANR	698586	Statement	PFMT64u	301:34:7913:7919	697886	5	True				
ANR	698587	Statement	""",\\""paddr\\"":%"""	302:4:7925:7938	697886	6	True				
ANR	698588	Statement	PFMT64u	302:18:7939:7945	697886	7	True				
ANR	698589	Statement	""",\\""ordinal\\"":%d"""	302:25:7946:7962	697886	8	True				
ANR	698590	Statement	""",\\""size\\"":%d,\\""length\\"":%d,\\""section\\"":\\""%s\\"","""	303:4:7968:8015	697886	9	True				
ANR	698591	Statement	"""\\""type\\"":\\""%s\\"",\\""string\\"":\\""%s\\"""""	304:4:8021:8055	697886	10	True				
ANR	698592	Statement	","	304:39:8056:8056	697886	11	True				
ANR	698593	Statement	last_processed	305:4:8062:8075	697886	12	True				
ANR	698594	Statement	?	305:19:8077:8077	697886	13	True				
ANR	698595	Statement	""","""	305:21:8079:8081	697886	14	True				
ANR	698596	Statement	:	305:24:8082:8082	697886	15	True				
ANR	698597	Statement	""""""	305:26:8084:8085	697886	16	True				
ANR	698598	Statement	","	305:28:8086:8086	697886	17	True				
ANR	698599	Statement	vaddr	306:4:8092:8096	697886	18	True				
ANR	698600	Statement	","	306:9:8097:8097	697886	19	True				
ANR	698601	Statement	paddr	306:11:8099:8103	697886	20	True				
ANR	698602	Statement	","	306:16:8104:8104	697886	21	True				
ANR	698603	Statement	string	306:18:8106:8111	697886	22	True				
ANR	698604	Statement	->	306:24:8112:8113	697886	23	True				
ANR	698605	Statement	ordinal	306:26:8114:8120	697886	24	True				
ANR	698606	Statement	","	306:33:8121:8121	697886	25	True				
ANR	698607	Statement	string	306:35:8123:8128	697886	26	True				
ANR	698608	Statement	->	306:41:8129:8130	697886	27	True				
ANR	698609	Statement	size	306:43:8131:8134	697886	28	True				
ANR	698610	Statement	","	306:47:8135:8135	697886	29	True				
ANR	698611	Statement	string	307:4:8141:8146	697886	30	True				
ANR	698612	Statement	->	307:10:8147:8148	697886	31	True				
ANR	698613	Statement	length	307:12:8149:8154	697886	32	True				
ANR	698614	Statement	","	307:18:8155:8155	697886	33	True				
ANR	698615	Statement	section_name	307:20:8157:8168	697886	34	True				
ANR	698616	Statement	","	307:32:8169:8169	697886	35	True				
ANR	698617	Statement	type_string	307:34:8171:8181	697886	36	True				
ANR	698618	Statement	","	307:45:8182:8182	697886	37	True				
ANR	698619	Statement	q	307:47:8184:8184	697886	38	True				
ANR	698620	Statement	)	307:48:8185:8185	697886	39	True				
ANR	698621	ExpressionStatement		307:49:8186:8186	697886	40	True				
ANR	698622	SwitchStatement	switch ( string -> type )		697886	41					
ANR	698623	Condition	string -> type	308:11:8199:8210	697886	0	True				
ANR	698624	PtrMemberAccess	string -> type		697886	0					
ANR	698625	Identifier	string		697886	0					
ANR	698626	Identifier	type		697886	1					
ANR	698627	CompoundStatement		94:25:3030:3030	697886	1					
ANR	698628	Label	case R_STRING_TYPE_UTF8 :	309:3:8218:8241	697886	0	True				
ANR	698629	Identifier	R_STRING_TYPE_UTF8		697886	0					
ANR	698630	Label	case R_STRING_TYPE_WIDE :	310:3:8246:8269	697886	1	True				
ANR	698631	Identifier	R_STRING_TYPE_WIDE		697886	0					
ANR	698632	Label	case R_STRING_TYPE_WIDE32 :	311:3:8274:8299	697886	2	True				
ANR	698633	Identifier	R_STRING_TYPE_WIDE32		697886	0					
ANR	698634	ExpressionStatement	"block_list = r_utf_block_list ( ( const ut8 * ) string -> string , - 1 , NULL )"	312:4:8305:8373	697886	3	True				
ANR	698635	AssignmentExpression	"block_list = r_utf_block_list ( ( const ut8 * ) string -> string , - 1 , NULL )"		697886	0		=			
ANR	698636	Identifier	block_list		697886	0					
ANR	698637	CallExpression	"r_utf_block_list ( ( const ut8 * ) string -> string , - 1 , NULL )"		697886	1					
ANR	698638	Callee	r_utf_block_list		697886	0					
ANR	698639	Identifier	r_utf_block_list		697886	0					
ANR	698640	ArgumentList	( const ut8 * ) string -> string		697886	1					
ANR	698641	Argument	( const ut8 * ) string -> string		697886	0					
ANR	698642	CastExpression	( const ut8 * ) string -> string		697886	0					
ANR	698643	CastTarget	const ut8 *		697886	0					
ANR	698644	PtrMemberAccess	string -> string		697886	1					
ANR	698645	Identifier	string		697886	0					
ANR	698646	Identifier	string		697886	1					
ANR	698647	Argument	- 1		697886	1					
ANR	698648	UnaryOperationExpression	- 1		697886	0					
ANR	698649	UnaryOperator	-		697886	0					
ANR	698650	PrimaryExpression	1		697886	1					
ANR	698651	Argument	NULL		697886	2					
ANR	698652	Identifier	NULL		697886	0					
ANR	698653	IfStatement	if ( block_list )		697886	4					
ANR	698654	Condition	block_list	313:8:8383:8392	697886	0	True				
ANR	698655	Identifier	block_list		697886	0					
ANR	698656	CompoundStatement		106:5:3400:3427	697886	1					
ANR	698657	IfStatement	if ( block_list [ 0 ] == 0 && block_list [ 1 ] == - 1 )		697886	0					
ANR	698658	Condition	block_list [ 0 ] == 0 && block_list [ 1 ] == - 1	314:9:8406:8446	697886	0	True				
ANR	698659	AndExpression	block_list [ 0 ] == 0 && block_list [ 1 ] == - 1		697886	0		&&			
ANR	698660	EqualityExpression	block_list [ 0 ] == 0		697886	0		==			
ANR	698661	ArrayIndexing	block_list [ 0 ]		697886	0					
ANR	698662	Identifier	block_list		697886	0					
ANR	698663	PrimaryExpression	0		697886	1					
ANR	698664	PrimaryExpression	0		697886	1					
ANR	698665	EqualityExpression	block_list [ 1 ] == - 1		697886	1		==			
ANR	698666	ArrayIndexing	block_list [ 1 ]		697886	0					
ANR	698667	Identifier	block_list		697886	0					
ANR	698668	PrimaryExpression	1		697886	1					
ANR	698669	UnaryOperationExpression	- 1		697886	1					
ANR	698670	UnaryOperator	-		697886	0					
ANR	698671	PrimaryExpression	1		697886	1					
ANR	698672	CompoundStatement		100:52:3266:3266	697886	1					
ANR	698673	ExpressionStatement	R_FREE ( block_list )	317:6:8537:8556	697886	0	True				
ANR	698674	CallExpression	R_FREE ( block_list )		697886	0					
ANR	698675	Callee	R_FREE		697886	0					
ANR	698676	Identifier	R_FREE		697886	0					
ANR	698677	ArgumentList	block_list		697886	1					
ANR	698678	Argument	block_list		697886	0					
ANR	698679	Identifier	block_list		697886	0					
ANR	698680	BreakStatement	break ;	318:6:8564:8569	697886	1	True				
ANR	698681	IdentifierDeclStatement	int * block_ptr = block_list ;	320:5:8583:8610	697886	1	True				
ANR	698682	IdentifierDecl	* block_ptr = block_list		697886	0					
ANR	698683	IdentifierDeclType	int *		697886	0					
ANR	698684	Identifier	block_ptr		697886	1					
ANR	698685	AssignmentExpression	* block_ptr = block_list		697886	2		=			
ANR	698686	Identifier	block_list		697886	0					
ANR	698687	Identifier	block_list		697886	1					
ANR	698688	ExpressionStatement	"r_cons_printf ( "",\\""blocks\\"":["" )"	321:5:8617:8648	697886	2	True				
ANR	698689	CallExpression	"r_cons_printf ( "",\\""blocks\\"":["" )"		697886	0					
ANR	698690	Callee	r_cons_printf		697886	0					
ANR	698691	Identifier	r_cons_printf		697886	0					
ANR	698692	ArgumentList	""",\\""blocks\\"":["""		697886	1					
ANR	698693	Argument	""",\\""blocks\\"":["""		697886	0					
ANR	698694	PrimaryExpression	""",\\""blocks\\"":["""		697886	0					
ANR	698695	ForStatement	for ( ; * block_ptr != - 1 ; block_ptr ++ )		697886	3					
ANR	698696	Condition	* block_ptr != - 1	322:12:8662:8677	697886	0	True				
ANR	698697	EqualityExpression	* block_ptr != - 1		697886	0		!=			
ANR	698698	UnaryOperationExpression	* block_ptr		697886	0					
ANR	698699	UnaryOperator	*		697886	0					
ANR	698700	Identifier	block_ptr		697886	1					
ANR	698701	UnaryOperationExpression	- 1		697886	1					
ANR	698702	UnaryOperator	-		697886	0					
ANR	698703	PrimaryExpression	1		697886	1					
ANR	698704	PostIncDecOperationExpression	block_ptr ++	322:30:8680:8690	697886	1	True				
ANR	698705	Identifier	block_ptr		697886	0					
ANR	698706	IncDec	++		697886	1					
ANR	698707	CompoundStatement		112:6:3591:3642	697886	2					
ANR	698708	IfStatement	if ( block_ptr != block_list )		697886	0					
ANR	698709	Condition	block_ptr != block_list	323:10:8705:8727	697886	0	True				
ANR	698710	EqualityExpression	block_ptr != block_list		697886	0		!=			
ANR	698711	Identifier	block_ptr		697886	0					
ANR	698712	Identifier	block_list		697886	1					
ANR	698713	CompoundStatement		109:35:3547:3547	697886	1					
ANR	698714	ExpressionStatement	"r_cons_printf ( "","" )"	324:7:8739:8758	697886	0	True				
ANR	698715	CallExpression	"r_cons_printf ( "","" )"		697886	0					
ANR	698716	Callee	r_cons_printf		697886	0					
ANR	698717	Identifier	r_cons_printf		697886	0					
ANR	698718	ArgumentList	""","""		697886	1					
ANR	698719	Argument	""","""		697886	0					
ANR	698720	PrimaryExpression	""","""		697886	0					
ANR	698721	IdentifierDeclStatement	const char * utfName = r_utf_block_name ( * block_ptr ) ;	326:6:8774:8825	697886	1	True				
ANR	698722	IdentifierDecl	* utfName = r_utf_block_name ( * block_ptr )		697886	0					
ANR	698723	IdentifierDeclType	const char *		697886	0					
ANR	698724	Identifier	utfName		697886	1					
ANR	698725	AssignmentExpression	* utfName = r_utf_block_name ( * block_ptr )		697886	2		=			
ANR	698726	Identifier	utfName		697886	0					
ANR	698727	CallExpression	r_utf_block_name ( * block_ptr )		697886	1					
ANR	698728	Callee	r_utf_block_name		697886	0					
ANR	698729	Identifier	r_utf_block_name		697886	0					
ANR	698730	ArgumentList	* block_ptr		697886	1					
ANR	698731	Argument	* block_ptr		697886	0					
ANR	698732	UnaryOperationExpression	* block_ptr		697886	0					
ANR	698733	UnaryOperator	*		697886	0					
ANR	698734	Identifier	block_ptr		697886	1					
ANR	698735	ExpressionStatement	"r_cons_printf ( ""\\""%s\\"""" , utfName ? utfName : """" )"	327:6:8833:8879	697886	2	True				
ANR	698736	CallExpression	"r_cons_printf ( ""\\""%s\\"""" , utfName ? utfName : """" )"		697886	0					
ANR	698737	Callee	r_cons_printf		697886	0					
ANR	698738	Identifier	r_cons_printf		697886	0					
ANR	698739	ArgumentList	"""\\""%s\\"""""		697886	1					
ANR	698740	Argument	"""\\""%s\\"""""		697886	0					
ANR	698741	PrimaryExpression	"""\\""%s\\"""""		697886	0					
ANR	698742	Argument	"utfName ? utfName : """""		697886	1					
ANR	698743	ConditionalExpression	"utfName ? utfName : """""		697886	0					
ANR	698744	Condition	utfName		697886	0					
ANR	698745	Identifier	utfName		697886	0					
ANR	698746	Identifier	utfName		697886	1					
ANR	698747	PrimaryExpression	""""""		697886	2					
ANR	698748	ExpressionStatement	"r_cons_printf ( ""]"" )"	329:5:8893:8912	697886	4	True				
ANR	698749	CallExpression	"r_cons_printf ( ""]"" )"		697886	0					
ANR	698750	Callee	r_cons_printf		697886	0					
ANR	698751	Identifier	r_cons_printf		697886	0					
ANR	698752	ArgumentList	"""]"""		697886	1					
ANR	698753	Argument	"""]"""		697886	0					
ANR	698754	PrimaryExpression	"""]"""		697886	0					
ANR	698755	ExpressionStatement	R_FREE ( block_list )	330:5:8919:8938	697886	5	True				
ANR	698756	CallExpression	R_FREE ( block_list )		697886	0					
ANR	698757	Callee	R_FREE		697886	0					
ANR	698758	Identifier	R_FREE		697886	0					
ANR	698759	ArgumentList	block_list		697886	1					
ANR	698760	Argument	block_list		697886	0					
ANR	698761	Identifier	block_list		697886	0					
ANR	698762	ExpressionStatement	"r_cons_printf ( ""}"" )"	333:3:8954:8973	697886	42	True				
ANR	698763	CallExpression	"r_cons_printf ( ""}"" )"		697886	0					
ANR	698764	Callee	r_cons_printf		697886	0					
ANR	698765	Identifier	r_cons_printf		697886	0					
ANR	698766	ArgumentList	"""}"""		697886	1					
ANR	698767	Argument	"""}"""		697886	0					
ANR	698768	PrimaryExpression	"""}"""		697886	0					
ANR	698769	ExpressionStatement	free ( q )	334:3:8978:8986	697886	43	True				
ANR	698770	CallExpression	free ( q )		697886	0					
ANR	698771	Callee	free		697886	0					
ANR	698772	Identifier	free		697886	0					
ANR	698773	ArgumentList	q		697886	1					
ANR	698774	Argument	q		697886	0					
ANR	698775	Identifier	q		697886	0					
ANR	698776	ElseStatement	else		697886	0					
ANR	698777	IfStatement	if ( IS_MODE_RAD ( mode ) )		697886	0					
ANR	698778	Condition	IS_MODE_RAD ( mode )	335:13:9001:9018	697886	0	True				
ANR	698779	CallExpression	IS_MODE_RAD ( mode )		697886	0					
ANR	698780	Callee	IS_MODE_RAD		697886	0					
ANR	698781	Identifier	IS_MODE_RAD		697886	0					
ANR	698782	ArgumentList	mode		697886	1					
ANR	698783	Argument	mode		697886	0					
ANR	698784	Identifier	mode		697886	0					
ANR	698785	CompoundStatement		124:3:3931:4050	697886	1					
ANR	698786	IdentifierDeclStatement	char * f_name = strdup ( string -> string ) ;	336:3:9026:9064	697886	0	True				
ANR	698787	IdentifierDecl	* f_name = strdup ( string -> string )		697886	0					
ANR	698788	IdentifierDeclType	char *		697886	0					
ANR	698789	Identifier	f_name		697886	1					
ANR	698790	AssignmentExpression	* f_name = strdup ( string -> string )		697886	2		=			
ANR	698791	Identifier	f_name		697886	0					
ANR	698792	CallExpression	strdup ( string -> string )		697886	1					
ANR	698793	Callee	strdup		697886	0					
ANR	698794	Identifier	strdup		697886	0					
ANR	698795	ArgumentList	string -> string		697886	1					
ANR	698796	Argument	string -> string		697886	0					
ANR	698797	PtrMemberAccess	string -> string		697886	0					
ANR	698798	Identifier	string		697886	0					
ANR	698799	Identifier	string		697886	1					
ANR	698800	ExpressionStatement	"r_name_filter ( f_name , R_FLAG_NAME_SIZE )"	337:3:9069:9109	697886	1	True				
ANR	698801	CallExpression	"r_name_filter ( f_name , R_FLAG_NAME_SIZE )"		697886	0					
ANR	698802	Callee	r_name_filter		697886	0					
ANR	698803	Identifier	r_name_filter		697886	0					
ANR	698804	ArgumentList	f_name		697886	1					
ANR	698805	Argument	f_name		697886	0					
ANR	698806	Identifier	f_name		697886	0					
ANR	698807	Argument	R_FLAG_NAME_SIZE		697886	1					
ANR	698808	Identifier	R_FLAG_NAME_SIZE		697886	0					
ANR	698809	IdentifierDeclStatement	"char * str = ( r -> bin -> prefix ) ? r_str_newf ( ""%s.str.%s"" , r -> bin -> prefix , f_name ) : r_str_newf ( ""str.%s"" , f_name ) ;"	338:3:9114:9233	697886	2	True				
ANR	698810	IdentifierDecl	"* str = ( r -> bin -> prefix ) ? r_str_newf ( ""%s.str.%s"" , r -> bin -> prefix , f_name ) : r_str_newf ( ""str.%s"" , f_name )"		697886	0					
ANR	698811	IdentifierDeclType	char *		697886	0					
ANR	698812	Identifier	str		697886	1					
ANR	698813	AssignmentExpression	"* str = ( r -> bin -> prefix ) ? r_str_newf ( ""%s.str.%s"" , r -> bin -> prefix , f_name ) : r_str_newf ( ""str.%s"" , f_name )"		697886	2		=			
ANR	698814	Identifier	str		697886	0					
ANR	698815	ConditionalExpression	"( r -> bin -> prefix ) ? r_str_newf ( ""%s.str.%s"" , r -> bin -> prefix , f_name ) : r_str_newf ( ""str.%s"" , f_name )"		697886	1					
ANR	698816	Condition	r -> bin -> prefix		697886	0					
ANR	698817	PtrMemberAccess	r -> bin -> prefix		697886	0					
ANR	698818	PtrMemberAccess	r -> bin		697886	0					
ANR	698819	Identifier	r		697886	0					
ANR	698820	Identifier	bin		697886	1					
ANR	698821	Identifier	prefix		697886	1					
ANR	698822	CallExpression	"r_str_newf ( ""%s.str.%s"" , r -> bin -> prefix , f_name )"		697886	1					
ANR	698823	Callee	r_str_newf		697886	0					
ANR	698824	Identifier	r_str_newf		697886	0					
ANR	698825	ArgumentList	"""%s.str.%s"""		697886	1					
ANR	698826	Argument	"""%s.str.%s"""		697886	0					
ANR	698827	PrimaryExpression	"""%s.str.%s"""		697886	0					
ANR	698828	Argument	r -> bin -> prefix		697886	1					
ANR	698829	PtrMemberAccess	r -> bin -> prefix		697886	0					
ANR	698830	PtrMemberAccess	r -> bin		697886	0					
ANR	698831	Identifier	r		697886	0					
ANR	698832	Identifier	bin		697886	1					
ANR	698833	Identifier	prefix		697886	1					
ANR	698834	Argument	f_name		697886	2					
ANR	698835	Identifier	f_name		697886	0					
ANR	698836	CallExpression	"r_str_newf ( ""str.%s"" , f_name )"		697886	2					
ANR	698837	Callee	r_str_newf		697886	0					
ANR	698838	Identifier	r_str_newf		697886	0					
ANR	698839	ArgumentList	"""str.%s"""		697886	1					
ANR	698840	Argument	"""str.%s"""		697886	0					
ANR	698841	PrimaryExpression	"""str.%s"""		697886	0					
ANR	698842	Argument	f_name		697886	1					
ANR	698843	Identifier	f_name		697886	0					
ANR	698844	Statement	r_cons_printf	341:3:9238:9250	697886	3	True				
ANR	698845	Statement	(	341:17:9252:9252	697886	4	True				
ANR	698846	Statement	"""f %s %"""	341:18:9253:9260	697886	5	True				
ANR	698847	Statement	PFMT64d	341:26:9261:9267	697886	6	True				
ANR	698848	Statement	""" 0x%08"""	341:33:9268:9275	697886	7	True				
ANR	698849	Statement	PFMT64x	341:41:9276:9282	697886	8	True				
ANR	698850	Statement	"""\\n"""	341:48:9283:9286	697886	9	True				
ANR	698851	Statement	"""Cs %"""	342:4:9292:9297	697886	10	True				
ANR	698852	Statement	PFMT64d	342:10:9298:9304	697886	11	True				
ANR	698853	Statement	""" @ 0x%08"""	342:17:9305:9314	697886	12	True				
ANR	698854	Statement	PFMT64x	342:27:9315:9321	697886	13	True				
ANR	698855	Statement	"""\\n"""	342:34:9322:9325	697886	14	True				
ANR	698856	Statement	","	342:38:9326:9326	697886	15	True				
ANR	698857	Statement	str	343:4:9332:9334	697886	16	True				
ANR	698858	Statement	","	343:7:9335:9335	697886	17	True				
ANR	698859	Statement	string	343:9:9337:9342	697886	18	True				
ANR	698860	Statement	->	343:15:9343:9344	697886	19	True				
ANR	698861	Statement	size	343:17:9345:9348	697886	20	True				
ANR	698862	Statement	","	343:21:9349:9349	697886	21	True				
ANR	698863	Statement	vaddr	343:23:9351:9355	697886	22	True				
ANR	698864	Statement	","	343:28:9356:9356	697886	23	True				
ANR	698865	Statement	string	344:4:9362:9367	697886	24	True				
ANR	698866	Statement	->	344:10:9368:9369	697886	25	True				
ANR	698867	Statement	size	344:12:9370:9373	697886	26	True				
ANR	698868	Statement	","	344:16:9374:9374	697886	27	True				
ANR	698869	Statement	vaddr	344:18:9376:9380	697886	28	True				
ANR	698870	Statement	)	344:23:9381:9381	697886	29	True				
ANR	698871	ExpressionStatement		344:24:9382:9382	697886	30	True				
ANR	698872	ExpressionStatement	free ( str )	345:3:9387:9397	697886	31	True				
ANR	698873	CallExpression	free ( str )		697886	0					
ANR	698874	Callee	free		697886	0					
ANR	698875	Identifier	free		697886	0					
ANR	698876	ArgumentList	str		697886	1					
ANR	698877	Argument	str		697886	0					
ANR	698878	Identifier	str		697886	0					
ANR	698879	ExpressionStatement	free ( f_name )	346:3:9402:9415	697886	32	True				
ANR	698880	CallExpression	free ( f_name )		697886	0					
ANR	698881	Callee	free		697886	0					
ANR	698882	Identifier	free		697886	0					
ANR	698883	ArgumentList	f_name		697886	1					
ANR	698884	Argument	f_name		697886	0					
ANR	698885	Identifier	f_name		697886	0					
ANR	698886	ElseStatement	else		697886	0					
ANR	698887	CompoundStatement		136:3:4299:4329	697886	0					
ANR	698888	IdentifierDeclStatement	int * block_list ;	348:3:9431:9446	697886	0	True				
ANR	698889	IdentifierDecl	* block_list		697886	0					
ANR	698890	IdentifierDeclType	int *		697886	0					
ANR	698891	Identifier	block_list		697886	1					
ANR	698892	IdentifierDeclStatement	char * str = string -> string ;	349:3:9451:9477	697886	1	True				
ANR	698893	IdentifierDecl	* str = string -> string		697886	0					
ANR	698894	IdentifierDeclType	char *		697886	0					
ANR	698895	Identifier	str		697886	1					
ANR	698896	AssignmentExpression	* str = string -> string		697886	2		=			
ANR	698897	Identifier	str		697886	0					
ANR	698898	PtrMemberAccess	string -> string		697886	1					
ANR	698899	Identifier	string		697886	0					
ANR	698900	Identifier	string		697886	1					
ANR	698901	IdentifierDeclStatement	char * no_dbl_bslash_str = NULL ;	350:3:9482:9512	697886	2	True				
ANR	698902	IdentifierDecl	* no_dbl_bslash_str = NULL		697886	0					
ANR	698903	IdentifierDeclType	char *		697886	0					
ANR	698904	Identifier	no_dbl_bslash_str		697886	1					
ANR	698905	AssignmentExpression	* no_dbl_bslash_str = NULL		697886	2		=			
ANR	698906	Identifier	NULL		697886	0					
ANR	698907	Identifier	NULL		697886	1					
ANR	698908	IfStatement	if ( ! r -> print -> esc_bslash )		697886	3					
ANR	698909	Condition	! r -> print -> esc_bslash	351:7:9521:9541	697886	0	True				
ANR	698910	UnaryOperationExpression	! r -> print -> esc_bslash		697886	0					
ANR	698911	UnaryOperator	!		697886	0					
ANR	698912	PtrMemberAccess	r -> print -> esc_bslash		697886	1					
ANR	698913	PtrMemberAccess	r -> print		697886	0					
ANR	698914	Identifier	r		697886	0					
ANR	698915	Identifier	print		697886	1					
ANR	698916	Identifier	esc_bslash		697886	1					
ANR	698917	CompoundStatement		138:4:4367:4376	697886	1					
ANR	698918	IdentifierDeclStatement	char * ptr ;	352:4:9550:9559	697886	0	True				
ANR	698919	IdentifierDecl	* ptr		697886	0					
ANR	698920	IdentifierDeclType	char *		697886	0					
ANR	698921	Identifier	ptr		697886	1					
ANR	698922	ForStatement	for ( ptr = str ; * ptr ; ptr ++ )		697886	1					
ANR	698923	ForInit	ptr = str ;	353:9:9570:9579	697886	0	True				
ANR	698924	AssignmentExpression	ptr = str		697886	0		=			
ANR	698925	Identifier	ptr		697886	0					
ANR	698926	Identifier	str		697886	1					
ANR	698927	Condition	* ptr	353:20:9581:9584	697886	1	True				
ANR	698928	UnaryOperationExpression	* ptr		697886	0					
ANR	698929	UnaryOperator	*		697886	0					
ANR	698930	Identifier	ptr		697886	1					
ANR	698931	PostIncDecOperationExpression	ptr ++	353:26:9587:9591	697886	2	True				
ANR	698932	Identifier	ptr		697886	0					
ANR	698933	IncDec	++		697886	1					
ANR	698934	CompoundStatement		139:33:4411:4411	697886	3					
ANR	698935	IfStatement	if ( * ptr != '\\\\' )		697886	0					
ANR	698936	Condition	* ptr != '\\\\'	354:9:9605:9616	697886	0	True				
ANR	698937	EqualityExpression	* ptr != '\\\\'		697886	0		!=			
ANR	698938	UnaryOperationExpression	* ptr		697886	0					
ANR	698939	UnaryOperator	*		697886	0					
ANR	698940	Identifier	ptr		697886	1					
ANR	698941	PrimaryExpression	'\\\\'		697886	1					
ANR	698942	CompoundStatement		140:23:4436:4436	697886	1					
ANR	698943	ContinueStatement	continue ;	355:6:9627:9635	697886	0	True				
ANR	698944	IfStatement	if ( * ( ptr + 1 ) == '\\\\' )		697886	1					
ANR	698945	Condition	* ( ptr + 1 ) == '\\\\'	357:9:9653:9670	697886	0	True				
ANR	698946	EqualityExpression	* ( ptr + 1 ) == '\\\\'		697886	0		==			
ANR	698947	UnaryOperationExpression	* ( ptr + 1 )		697886	0					
ANR	698948	UnaryOperator	*		697886	0					
ANR	698949	AdditiveExpression	ptr + 1		697886	1		+			
ANR	698950	Identifier	ptr		697886	0					
ANR	698951	PrimaryExpression	1		697886	1					
ANR	698952	PrimaryExpression	'\\\\'		697886	1					
ANR	698953	CompoundStatement		143:29:4490:4490	697886	1					
ANR	698954	IfStatement	if ( ! no_dbl_bslash_str )		697886	0					
ANR	698955	Condition	! no_dbl_bslash_str	358:10:9685:9702	697886	0	True				
ANR	698956	UnaryOperationExpression	! no_dbl_bslash_str		697886	0					
ANR	698957	UnaryOperator	!		697886	0					
ANR	698958	Identifier	no_dbl_bslash_str		697886	1					
ANR	698959	CompoundStatement		144:30:4522:4522	697886	1					
ANR	698960	ExpressionStatement	no_dbl_bslash_str = strdup ( str )	359:7:9714:9746	697886	0	True				
ANR	698961	AssignmentExpression	no_dbl_bslash_str = strdup ( str )		697886	0		=			
ANR	698962	Identifier	no_dbl_bslash_str		697886	0					
ANR	698963	CallExpression	strdup ( str )		697886	1					
ANR	698964	Callee	strdup		697886	0					
ANR	698965	Identifier	strdup		697886	0					
ANR	698966	ArgumentList	str		697886	1					
ANR	698967	Argument	str		697886	0					
ANR	698968	Identifier	str		697886	0					
ANR	698969	IfStatement	if ( ! no_dbl_bslash_str )		697886	1					
ANR	698970	Condition	! no_dbl_bslash_str	360:11:9759:9776	697886	0	True				
ANR	698971	UnaryOperationExpression	! no_dbl_bslash_str		697886	0					
ANR	698972	UnaryOperator	!		697886	0					
ANR	698973	Identifier	no_dbl_bslash_str		697886	1					
ANR	698974	CompoundStatement		146:31:4596:4596	697886	1					
ANR	698975	BreakStatement	break ;	361:8:9789:9794	697886	0	True				
ANR	698976	ExpressionStatement	ptr = no_dbl_bslash_str + ( ptr - str )	363:7:9812:9849	697886	2	True				
ANR	698977	AssignmentExpression	ptr = no_dbl_bslash_str + ( ptr - str )		697886	0		=			
ANR	698978	Identifier	ptr		697886	0					
ANR	698979	AdditiveExpression	no_dbl_bslash_str + ( ptr - str )		697886	1		+			
ANR	698980	Identifier	no_dbl_bslash_str		697886	0					
ANR	698981	AdditiveExpression	ptr - str		697886	1		-			
ANR	698982	Identifier	ptr		697886	0					
ANR	698983	Identifier	str		697886	1					
ANR	698984	ExpressionStatement	"memmove ( ptr + 1 , ptr + 2 , strlen ( ptr + 2 ) + 1 )"	365:6:9865:9913	697886	1	True				
ANR	698985	CallExpression	"memmove ( ptr + 1 , ptr + 2 , strlen ( ptr + 2 ) + 1 )"		697886	0					
ANR	698986	Callee	memmove		697886	0					
ANR	698987	Identifier	memmove		697886	0					
ANR	698988	ArgumentList	ptr + 1		697886	1					
ANR	698989	Argument	ptr + 1		697886	0					
ANR	698990	AdditiveExpression	ptr + 1		697886	0		+			
ANR	698991	Identifier	ptr		697886	0					
ANR	698992	PrimaryExpression	1		697886	1					
ANR	698993	Argument	ptr + 2		697886	1					
ANR	698994	AdditiveExpression	ptr + 2		697886	0		+			
ANR	698995	Identifier	ptr		697886	0					
ANR	698996	PrimaryExpression	2		697886	1					
ANR	698997	Argument	strlen ( ptr + 2 ) + 1		697886	2					
ANR	698998	AdditiveExpression	strlen ( ptr + 2 ) + 1		697886	0		+			
ANR	698999	CallExpression	strlen ( ptr + 2 )		697886	0					
ANR	699000	Callee	strlen		697886	0					
ANR	699001	Identifier	strlen		697886	0					
ANR	699002	ArgumentList	ptr + 2		697886	1					
ANR	699003	Argument	ptr + 2		697886	0					
ANR	699004	AdditiveExpression	ptr + 2		697886	0		+			
ANR	699005	Identifier	ptr		697886	0					
ANR	699006	PrimaryExpression	2		697886	1					
ANR	699007	PrimaryExpression	1		697886	1					
ANR	699008	IfStatement	if ( no_dbl_bslash_str )		697886	2					
ANR	699009	Condition	no_dbl_bslash_str	368:8:9936:9952	697886	0	True				
ANR	699010	Identifier	no_dbl_bslash_str		697886	0					
ANR	699011	CompoundStatement		154:27:4772:4772	697886	1					
ANR	699012	ExpressionStatement	str = no_dbl_bslash_str	369:5:9962:9985	697886	0	True				
ANR	699013	AssignmentExpression	str = no_dbl_bslash_str		697886	0		=			
ANR	699014	Identifier	str		697886	0					
ANR	699015	Identifier	no_dbl_bslash_str		697886	1					
ANR	699016	Statement	r_cons_printf	372:3:10001:10013	697886	4	True				
ANR	699017	Statement	(	372:17:10015:10015	697886	5	True				
ANR	699018	Statement	"""%03u 0x%08"""	372:18:10016:10027	697886	6	True				
ANR	699019	Statement	PFMT64x	372:31:10029:10035	697886	7	True				
ANR	699020	Statement	""" 0x%08"""	372:39:10037:10044	697886	8	True				
ANR	699021	Statement	PFMT64x	372:48:10046:10052	697886	9	True				
ANR	699022	Statement	""" %3u %3u (%s) %5s %s"""	372:56:10054:10075	697886	10	True				
ANR	699023	Statement	","	372:78:10076:10076	697886	11	True				
ANR	699024	Statement	string	373:4:10082:10087	697886	12	True				
ANR	699025	Statement	->	373:10:10088:10089	697886	13	True				
ANR	699026	Statement	ordinal	373:12:10090:10096	697886	14	True				
ANR	699027	Statement	","	373:19:10097:10097	697886	15	True				
ANR	699028	Statement	paddr	373:21:10099:10103	697886	16	True				
ANR	699029	Statement	","	373:26:10104:10104	697886	17	True				
ANR	699030	Statement	vaddr	373:28:10106:10110	697886	18	True				
ANR	699031	Statement	","	373:33:10111:10111	697886	19	True				
ANR	699032	Statement	string	374:4:10117:10122	697886	20	True				
ANR	699033	Statement	->	374:10:10123:10124	697886	21	True				
ANR	699034	Statement	length	374:12:10125:10130	697886	22	True				
ANR	699035	Statement	","	374:18:10131:10131	697886	23	True				
ANR	699036	Statement	string	374:20:10133:10138	697886	24	True				
ANR	699037	Statement	->	374:26:10139:10140	697886	25	True				
ANR	699038	Statement	size	374:28:10141:10144	697886	26	True				
ANR	699039	Statement	","	374:32:10145:10145	697886	27	True				
ANR	699040	Statement	section_name	375:4:10151:10162	697886	28	True				
ANR	699041	Statement	","	375:16:10163:10163	697886	29	True				
ANR	699042	Statement	type_string	375:18:10165:10175	697886	30	True				
ANR	699043	Statement	","	375:29:10176:10176	697886	31	True				
ANR	699044	Statement	str	375:31:10178:10180	697886	32	True				
ANR	699045	Statement	)	375:34:10181:10181	697886	33	True				
ANR	699046	ExpressionStatement		375:35:10182:10182	697886	34	True				
ANR	699047	IfStatement	if ( str == no_dbl_bslash_str )		697886	35					
ANR	699048	Condition	str == no_dbl_bslash_str	376:7:10191:10214	697886	0	True				
ANR	699049	EqualityExpression	str == no_dbl_bslash_str		697886	0		==			
ANR	699050	Identifier	str		697886	0					
ANR	699051	Identifier	no_dbl_bslash_str		697886	1					
ANR	699052	CompoundStatement		162:33:5034:5034	697886	1					
ANR	699053	ExpressionStatement	R_FREE ( str )	377:4:10223:10235	697886	0	True				
ANR	699054	CallExpression	R_FREE ( str )		697886	0					
ANR	699055	Callee	R_FREE		697886	0					
ANR	699056	Identifier	R_FREE		697886	0					
ANR	699057	ArgumentList	str		697886	1					
ANR	699058	Argument	str		697886	0					
ANR	699059	Identifier	str		697886	0					
ANR	699060	SwitchStatement	switch ( string -> type )		697886	36					
ANR	699061	Condition	string -> type	379:11:10253:10264	697886	0	True				
ANR	699062	PtrMemberAccess	string -> type		697886	0					
ANR	699063	Identifier	string		697886	0					
ANR	699064	Identifier	type		697886	1					
ANR	699065	CompoundStatement		165:25:5084:5084	697886	1					
ANR	699066	Label	case R_STRING_TYPE_UTF8 :	380:3:10272:10295	697886	0	True				
ANR	699067	Identifier	R_STRING_TYPE_UTF8		697886	0					
ANR	699068	Label	case R_STRING_TYPE_WIDE :	381:3:10300:10323	697886	1	True				
ANR	699069	Identifier	R_STRING_TYPE_WIDE		697886	0					
ANR	699070	Label	case R_STRING_TYPE_WIDE32 :	382:3:10328:10353	697886	2	True				
ANR	699071	Identifier	R_STRING_TYPE_WIDE32		697886	0					
ANR	699072	ExpressionStatement	"block_list = r_utf_block_list ( ( const ut8 * ) string -> string , - 1 , NULL )"	383:4:10359:10427	697886	3	True				
ANR	699073	AssignmentExpression	"block_list = r_utf_block_list ( ( const ut8 * ) string -> string , - 1 , NULL )"		697886	0		=			
ANR	699074	Identifier	block_list		697886	0					
ANR	699075	CallExpression	"r_utf_block_list ( ( const ut8 * ) string -> string , - 1 , NULL )"		697886	1					
ANR	699076	Callee	r_utf_block_list		697886	0					
ANR	699077	Identifier	r_utf_block_list		697886	0					
ANR	699078	ArgumentList	( const ut8 * ) string -> string		697886	1					
ANR	699079	Argument	( const ut8 * ) string -> string		697886	0					
ANR	699080	CastExpression	( const ut8 * ) string -> string		697886	0					
ANR	699081	CastTarget	const ut8 *		697886	0					
ANR	699082	PtrMemberAccess	string -> string		697886	1					
ANR	699083	Identifier	string		697886	0					
ANR	699084	Identifier	string		697886	1					
ANR	699085	Argument	- 1		697886	1					
ANR	699086	UnaryOperationExpression	- 1		697886	0					
ANR	699087	UnaryOperator	-		697886	0					
ANR	699088	PrimaryExpression	1		697886	1					
ANR	699089	Argument	NULL		697886	2					
ANR	699090	Identifier	NULL		697886	0					
ANR	699091	IfStatement	if ( block_list )		697886	4					
ANR	699092	Condition	block_list	384:8:10437:10446	697886	0	True				
ANR	699093	Identifier	block_list		697886	0					
ANR	699094	CompoundStatement		176:5:5424:5451	697886	1					
ANR	699095	IfStatement	if ( block_list [ 0 ] == 0 && block_list [ 1 ] == - 1 )		697886	0					
ANR	699096	Condition	block_list [ 0 ] == 0 && block_list [ 1 ] == - 1	385:9:10460:10500	697886	0	True				
ANR	699097	AndExpression	block_list [ 0 ] == 0 && block_list [ 1 ] == - 1		697886	0		&&			
ANR	699098	EqualityExpression	block_list [ 0 ] == 0		697886	0		==			
ANR	699099	ArrayIndexing	block_list [ 0 ]		697886	0					
ANR	699100	Identifier	block_list		697886	0					
ANR	699101	PrimaryExpression	0		697886	1					
ANR	699102	PrimaryExpression	0		697886	1					
ANR	699103	EqualityExpression	block_list [ 1 ] == - 1		697886	1		==			
ANR	699104	ArrayIndexing	block_list [ 1 ]		697886	0					
ANR	699105	Identifier	block_list		697886	0					
ANR	699106	PrimaryExpression	1		697886	1					
ANR	699107	UnaryOperationExpression	- 1		697886	1					
ANR	699108	UnaryOperator	-		697886	0					
ANR	699109	PrimaryExpression	1		697886	1					
ANR	699110	CompoundStatement		171:52:5320:5320	697886	1					
ANR	699111	BreakStatement	break ;	388:6:10588:10593	697886	0	True				
ANR	699112	IdentifierDeclStatement	int * block_ptr = block_list ;	390:5:10607:10634	697886	1	True				
ANR	699113	IdentifierDecl	* block_ptr = block_list		697886	0					
ANR	699114	IdentifierDeclType	int *		697886	0					
ANR	699115	Identifier	block_ptr		697886	1					
ANR	699116	AssignmentExpression	* block_ptr = block_list		697886	2		=			
ANR	699117	Identifier	block_list		697886	0					
ANR	699118	Identifier	block_list		697886	1					
ANR	699119	ExpressionStatement	"r_cons_printf ( "" blocks="" )"	391:5:10641:10667	697886	2	True				
ANR	699120	CallExpression	"r_cons_printf ( "" blocks="" )"		697886	0					
ANR	699121	Callee	r_cons_printf		697886	0					
ANR	699122	Identifier	r_cons_printf		697886	0					
ANR	699123	ArgumentList	""" blocks="""		697886	1					
ANR	699124	Argument	""" blocks="""		697886	0					
ANR	699125	PrimaryExpression	""" blocks="""		697886	0					
ANR	699126	ForStatement	for ( ; * block_ptr != - 1 ; block_ptr ++ )		697886	3					
ANR	699127	Condition	* block_ptr != - 1	392:12:10681:10696	697886	0	True				
ANR	699128	EqualityExpression	* block_ptr != - 1		697886	0		!=			
ANR	699129	UnaryOperationExpression	* block_ptr		697886	0					
ANR	699130	UnaryOperator	*		697886	0					
ANR	699131	Identifier	block_ptr		697886	1					
ANR	699132	UnaryOperationExpression	- 1		697886	1					
ANR	699133	UnaryOperator	-		697886	0					
ANR	699134	PrimaryExpression	1		697886	1					
ANR	699135	PostIncDecOperationExpression	block_ptr ++	392:30:10699:10709	697886	1	True				
ANR	699136	Identifier	block_ptr		697886	0					
ANR	699137	IncDec	++		697886	1					
ANR	699138	CompoundStatement		182:6:5610:5658	697886	2					
ANR	699139	IfStatement	if ( block_ptr != block_list )		697886	0					
ANR	699140	Condition	block_ptr != block_list	393:10:10724:10746	697886	0	True				
ANR	699141	EqualityExpression	block_ptr != block_list		697886	0		!=			
ANR	699142	Identifier	block_ptr		697886	0					
ANR	699143	Identifier	block_list		697886	1					
ANR	699144	CompoundStatement		179:35:5566:5566	697886	1					
ANR	699145	ExpressionStatement	"r_cons_printf ( "","" )"	394:7:10758:10777	697886	0	True				
ANR	699146	CallExpression	"r_cons_printf ( "","" )"		697886	0					
ANR	699147	Callee	r_cons_printf		697886	0					
ANR	699148	Identifier	r_cons_printf		697886	0					
ANR	699149	ArgumentList	""","""		697886	1					
ANR	699150	Argument	""","""		697886	0					
ANR	699151	PrimaryExpression	""","""		697886	0					
ANR	699152	IdentifierDeclStatement	const char * name = r_utf_block_name ( * block_ptr ) ;	396:6:10793:10841	697886	1	True				
ANR	699153	IdentifierDecl	* name = r_utf_block_name ( * block_ptr )		697886	0					
ANR	699154	IdentifierDeclType	const char *		697886	0					
ANR	699155	Identifier	name		697886	1					
ANR	699156	AssignmentExpression	* name = r_utf_block_name ( * block_ptr )		697886	2		=			
ANR	699157	Identifier	name		697886	0					
ANR	699158	CallExpression	r_utf_block_name ( * block_ptr )		697886	1					
ANR	699159	Callee	r_utf_block_name		697886	0					
ANR	699160	Identifier	r_utf_block_name		697886	0					
ANR	699161	ArgumentList	* block_ptr		697886	1					
ANR	699162	Argument	* block_ptr		697886	0					
ANR	699163	UnaryOperationExpression	* block_ptr		697886	0					
ANR	699164	UnaryOperator	*		697886	0					
ANR	699165	Identifier	block_ptr		697886	1					
ANR	699166	ExpressionStatement	"r_cons_printf ( ""%s"" , name ? name : """" )"	397:6:10849:10885	697886	2	True				
ANR	699167	CallExpression	"r_cons_printf ( ""%s"" , name ? name : """" )"		697886	0					
ANR	699168	Callee	r_cons_printf		697886	0					
ANR	699169	Identifier	r_cons_printf		697886	0					
ANR	699170	ArgumentList	"""%s"""		697886	1					
ANR	699171	Argument	"""%s"""		697886	0					
ANR	699172	PrimaryExpression	"""%s"""		697886	0					
ANR	699173	Argument	"name ? name : """""		697886	1					
ANR	699174	ConditionalExpression	"name ? name : """""		697886	0					
ANR	699175	Condition	name		697886	0					
ANR	699176	Identifier	name		697886	0					
ANR	699177	Identifier	name		697886	1					
ANR	699178	PrimaryExpression	""""""		697886	2					
ANR	699179	ExpressionStatement	free ( block_list )	399:5:10899:10916	697886	4	True				
ANR	699180	CallExpression	free ( block_list )		697886	0					
ANR	699181	Callee	free		697886	0					
ANR	699182	Identifier	free		697886	0					
ANR	699183	ArgumentList	block_list		697886	1					
ANR	699184	Argument	block_list		697886	0					
ANR	699185	Identifier	block_list		697886	0					
ANR	699186	BreakStatement	break ;	401:4:10928:10933	697886	5	True				
ANR	699187	ExpressionStatement	"r_cons_printf ( ""\\n"" )"	403:3:10943:10963	697886	37	True				
ANR	699188	CallExpression	"r_cons_printf ( ""\\n"" )"		697886	0					
ANR	699189	Callee	r_cons_printf		697886	0					
ANR	699190	Identifier	r_cons_printf		697886	0					
ANR	699191	ArgumentList	"""\\n"""		697886	1					
ANR	699192	Argument	"""\\n"""		697886	0					
ANR	699193	PrimaryExpression	"""\\n"""		697886	0					
ANR	699194	ExpressionStatement	last_processed = iter	405:2:10971:10992	697886	12	True				
ANR	699195	AssignmentExpression	last_processed = iter		697886	0		=			
ANR	699196	Identifier	last_processed		697886	0					
ANR	699197	Identifier	iter		697886	1					
ANR	699198	ExpressionStatement	R_FREE ( b64 . string )	407:1:10998:11017	697886	26	True				
ANR	699199	CallExpression	R_FREE ( b64 . string )		697886	0					
ANR	699200	Callee	R_FREE		697886	0					
ANR	699201	Identifier	R_FREE		697886	0					
ANR	699202	ArgumentList	b64 . string		697886	1					
ANR	699203	Argument	b64 . string		697886	0					
ANR	699204	MemberAccess	b64 . string		697886	0					
ANR	699205	Identifier	b64		697886	0					
ANR	699206	Identifier	string		697886	1					
ANR	699207	IfStatement	if ( IS_MODE_JSON ( mode ) )		697886	27					
ANR	699208	Condition	IS_MODE_JSON ( mode )	408:5:11024:11042	697886	0	True				
ANR	699209	CallExpression	IS_MODE_JSON ( mode )		697886	0					
ANR	699210	Callee	IS_MODE_JSON		697886	0					
ANR	699211	Identifier	IS_MODE_JSON		697886	0					
ANR	699212	ArgumentList	mode		697886	1					
ANR	699213	Argument	mode		697886	0					
ANR	699214	Identifier	mode		697886	0					
ANR	699215	CompoundStatement		194:26:5862:5862	697886	1					
ANR	699216	ExpressionStatement	"r_cons_printf ( ""]"" )"	409:2:11049:11068	697886	0	True				
ANR	699217	CallExpression	"r_cons_printf ( ""]"" )"		697886	0					
ANR	699218	Callee	r_cons_printf		697886	0					
ANR	699219	Identifier	r_cons_printf		697886	0					
ANR	699220	ArgumentList	"""]"""		697886	1					
ANR	699221	Argument	"""]"""		697886	0					
ANR	699222	PrimaryExpression	"""]"""		697886	0					
ANR	699223	IfStatement	if ( IS_MODE_SET ( mode ) )		697886	28					
ANR	699224	Condition	IS_MODE_SET ( mode )	411:5:11078:11095	697886	0	True				
ANR	699225	CallExpression	IS_MODE_SET ( mode )		697886	0					
ANR	699226	Callee	IS_MODE_SET		697886	0					
ANR	699227	Identifier	IS_MODE_SET		697886	0					
ANR	699228	ArgumentList	mode		697886	1					
ANR	699229	Argument	mode		697886	0					
ANR	699230	Identifier	mode		697886	0					
ANR	699231	CompoundStatement		197:25:5915:5915	697886	1					
ANR	699232	ExpressionStatement	r_cons_break_pop ( )	412:2:11102:11121	697886	0	True				
ANR	699233	CallExpression	r_cons_break_pop ( )		697886	0					
ANR	699234	Callee	r_cons_break_pop		697886	0					
ANR	699235	Identifier	r_cons_break_pop		697886	0					
ANR	699236	ArgumentList			697886	1					
ANR	699237	ReturnType	static void		697886	1					
ANR	699238	Identifier	_print_strings		697886	2					
ANR	699239	ParameterList	"RCore * r , RList * list , int mode , int va"		697886	3					
ANR	699240	Parameter	RCore * r	215:27:5141:5148	697886	0	True				
ANR	699241	ParameterType	RCore *		697886	0					
ANR	699242	Identifier	r		697886	1					
ANR	699243	Parameter	RList * list	215:37:5151:5161	697886	1	True				
ANR	699244	ParameterType	RList *		697886	0					
ANR	699245	Identifier	list		697886	1					
ANR	699246	Parameter	int mode	215:50:5164:5171	697886	2	True				
ANR	699247	ParameterType	int		697886	0					
ANR	699248	Identifier	mode		697886	1					
ANR	699249	Parameter	int va	215:60:5174:5179	697886	3	True				
ANR	699250	ParameterType	int		697886	0					
ANR	699251	Identifier	va		697886	1					
ANR	699252	CFGEntryNode	ENTRY		697886		True				
ANR	699253	CFGExitNode	EXIT		697886		True				
ANR	699254	CFGErrorNode	ERROR		697886		True				
ANR	699255	Symbol	& b64		697886						
ANR	699256	Symbol	IS_PRINTABLE		697886						
ANR	699257	Symbol	bin		697886						
ANR	699258	Symbol	string -> length		697886						
ANR	699259	Symbol	b64 . string		697886						
ANR	699260	Symbol	section		697886						
ANR	699261	Symbol	IS_MODE_SIMPLE		697886						
ANR	699262	Symbol	f_realname		697886						
ANR	699263	Symbol	string -> paddr		697886						
ANR	699264	Symbol	mode		697886						
ANR	699265	Symbol	strlen		697886						
ANR	699266	Symbol	r_base64_encode_dyn		697886						
ANR	699267	Symbol	IS_MODE_SIMPLEST		697886						
ANR	699268	Symbol	* ptr		697886						
ANR	699269	Symbol	rva		697886						
ANR	699270	Symbol	r_bin_string_filter		697886						
ANR	699271	Symbol	* section		697886						
ANR	699272	Symbol	* block_list		697886						
ANR	699273	Symbol	b64		697886						
ANR	699274	Symbol	NULL		697886						
ANR	699275	Symbol	string -> vaddr		697886						
ANR	699276	Symbol	iter		697886						
ANR	699277	Symbol	va		697886						
ANR	699278	Symbol	list		697886						
ANR	699279	Symbol	r -> anal		697886						
ANR	699280	Symbol	IS_MODE_SET		697886						
ANR	699281	Symbol	str		697886						
ANR	699282	Symbol	paddr		697886						
ANR	699283	Symbol	r_config_get_i		697886						
ANR	699284	Symbol	f_name		697886						
ANR	699285	Symbol	name		697886						
ANR	699286	Symbol	string -> string		697886						
ANR	699287	Symbol	block_ptr		697886						
ANR	699288	Symbol	b64 . size		697886						
ANR	699289	Symbol	block_list		697886						
ANR	699290	Symbol	utfName		697886						
ANR	699291	Symbol	last_processed		697886						
ANR	699292	Symbol	* ( ptr + 1 )		697886						
ANR	699293	Symbol	maxstr		697886						
ANR	699294	Symbol	r -> flags		697886						
ANR	699295	Symbol	no_dbl_bslash_str		697886						
ANR	699296	Symbol	flag		697886						
ANR	699297	Symbol	string		697886						
ANR	699298	Symbol	* string		697886						
ANR	699299	Symbol	IS_MODE_JSON		697886						
ANR	699300	Symbol	R_FLAGS_FS_STRINGS		697886						
ANR	699301	Symbol	vaddr		697886						
ANR	699302	Symbol	r_str_newf		697886						
ANR	699303	Symbol	* bin		697886						
ANR	699304	Symbol	R_FLAG_NAME_SIZE		697886						
ANR	699305	Symbol	r -> print -> esc_bslash		697886						
ANR	699306	Symbol	type_string		697886						
ANR	699307	Symbol	r_cons_is_breaked		697886						
ANR	699308	Symbol	r_bin_string_type		697886						
ANR	699309	Symbol	r -> bin		697886						
ANR	699310	Symbol	* r -> bin		697886						
ANR	699311	Symbol	* * r		697886						
ANR	699312	Symbol	b64str		697886						
ANR	699313	Symbol	r_bin_cur_object		697886						
ANR	699314	Symbol	string -> type		697886						
ANR	699315	Symbol	r -> bin -> prefix		697886						
ANR	699316	Symbol	minstr		697886						
ANR	699317	Symbol	r_base64_decode_dyn		697886						
ANR	699318	Symbol	string -> size		697886						
ANR	699319	Symbol	section_name		697886						
ANR	699320	Symbol	r_flag_set		697886						
ANR	699321	Symbol	r_bin_get_section_at		697886						
ANR	699322	Symbol	r_utf_block_name		697886						
ANR	699323	Symbol	* r -> print		697886						
ANR	699324	Symbol	IS_MODE_NORMAL		697886						
ANR	699325	Symbol	ptr		697886						
ANR	699326	Symbol	bin -> minstrlen		697886						
ANR	699327	Symbol	q		697886						
ANR	699328	Symbol	r		697886						
ANR	699329	Symbol	s		697886						
ANR	699330	Symbol	R_META_TYPE_STRING		697886						
ANR	699331	Symbol	obj		697886						
ANR	699332	Symbol	bin -> maxstrlen		697886						
ANR	699333	Symbol	section -> name		697886						
ANR	699334	Symbol	r -> print		697886						
ANR	699335	Symbol	IS_MODE_RAD		697886						
ANR	699336	Symbol	r_utf_block_list		697886						
ANR	699337	Symbol	strdup		697886						
ANR	699338	Symbol	* r		697886						
ANR	699339	Symbol	* s		697886						
ANR	699340	Symbol	r -> config		697886						
ANR	699341	Symbol	* block_ptr		697886						
ANR	699342	Function	bin_raw_strings	416:0:11129:12267							
ANR	699343	FunctionDef	"bin_raw_strings (RCore * r , int mode , int va)"		699342	0					
ANR	699344	CompoundStatement		416:56:11185:12267	699342	0					
ANR	699345	IdentifierDeclStatement	RBinFile * bf = r_bin_cur ( r -> bin ) ;	417:1:11188:11221	699342	0	True				
ANR	699346	IdentifierDecl	* bf = r_bin_cur ( r -> bin )		699342	0					
ANR	699347	IdentifierDeclType	RBinFile *		699342	0					
ANR	699348	Identifier	bf		699342	1					
ANR	699349	AssignmentExpression	* bf = r_bin_cur ( r -> bin )		699342	2		=			
ANR	699350	Identifier	bf		699342	0					
ANR	699351	CallExpression	r_bin_cur ( r -> bin )		699342	1					
ANR	699352	Callee	r_bin_cur		699342	0					
ANR	699353	Identifier	r_bin_cur		699342	0					
ANR	699354	ArgumentList	r -> bin		699342	1					
ANR	699355	Argument	r -> bin		699342	0					
ANR	699356	PtrMemberAccess	r -> bin		699342	0					
ANR	699357	Identifier	r		699342	0					
ANR	699358	Identifier	bin		699342	1					
ANR	699359	IdentifierDeclStatement	bool new_bf = false ;	418:1:11224:11243	699342	1	True				
ANR	699360	IdentifierDecl	new_bf = false		699342	0					
ANR	699361	IdentifierDeclType	bool		699342	0					
ANR	699362	Identifier	new_bf		699342	1					
ANR	699363	AssignmentExpression	new_bf = false		699342	2		=			
ANR	699364	Identifier	false		699342	0					
ANR	699365	Identifier	false		699342	1					
ANR	699366	IfStatement	"if ( bf && strstr ( bf -> file , ""malloc://"" ) )"		699342	2					
ANR	699367	Condition	"bf && strstr ( bf -> file , ""malloc://"" )"	419:5:11250:11285	699342	0	True				
ANR	699368	AndExpression	"bf && strstr ( bf -> file , ""malloc://"" )"		699342	0		&&			
ANR	699369	Identifier	bf		699342	0					
ANR	699370	CallExpression	"strstr ( bf -> file , ""malloc://"" )"		699342	1					
ANR	699371	Callee	strstr		699342	0					
ANR	699372	Identifier	strstr		699342	0					
ANR	699373	ArgumentList	bf -> file		699342	1					
ANR	699374	Argument	bf -> file		699342	0					
ANR	699375	PtrMemberAccess	bf -> file		699342	0					
ANR	699376	Identifier	bf		699342	0					
ANR	699377	Identifier	file		699342	1					
ANR	699378	Argument	"""malloc://"""		699342	1					
ANR	699379	PrimaryExpression	"""malloc://"""		699342	0					
ANR	699380	CompoundStatement		6:2:146:179	699342	1					
ANR	699381	IdentifierDeclStatement	"ut8 * tmp = R_NEWS ( ut8 , bf -> size ) ;"	421:2:11332:11365	699342	0	True				
ANR	699382	IdentifierDecl	"* tmp = R_NEWS ( ut8 , bf -> size )"		699342	0					
ANR	699383	IdentifierDeclType	ut8 *		699342	0					
ANR	699384	Identifier	tmp		699342	1					
ANR	699385	AssignmentExpression	"* tmp = R_NEWS ( ut8 , bf -> size )"		699342	2		=			
ANR	699386	Identifier	tmp		699342	0					
ANR	699387	CallExpression	"R_NEWS ( ut8 , bf -> size )"		699342	1					
ANR	699388	Callee	R_NEWS		699342	0					
ANR	699389	Identifier	R_NEWS		699342	0					
ANR	699390	ArgumentList	ut8		699342	1					
ANR	699391	Argument	ut8		699342	0					
ANR	699392	Identifier	ut8		699342	0					
ANR	699393	Argument	bf -> size		699342	1					
ANR	699394	PtrMemberAccess	bf -> size		699342	0					
ANR	699395	Identifier	bf		699342	0					
ANR	699396	Identifier	size		699342	1					
ANR	699397	IfStatement	if ( ! tmp )		699342	1					
ANR	699398	Condition	! tmp	422:6:11373:11376	699342	0	True				
ANR	699399	UnaryOperationExpression	! tmp		699342	0					
ANR	699400	UnaryOperator	!		699342	0					
ANR	699401	Identifier	tmp		699342	1					
ANR	699402	CompoundStatement		7:12:193:193	699342	1					
ANR	699403	ReturnStatement	return false ;	423:3:11384:11396	699342	0	True				
ANR	699404	Identifier	false		699342	0					
ANR	699405	ExpressionStatement	"r_io_read_at ( r -> io , 0 , tmp , bf -> size )"	425:2:11404:11442	699342	2	True				
ANR	699406	CallExpression	"r_io_read_at ( r -> io , 0 , tmp , bf -> size )"		699342	0					
ANR	699407	Callee	r_io_read_at		699342	0					
ANR	699408	Identifier	r_io_read_at		699342	0					
ANR	699409	ArgumentList	r -> io		699342	1					
ANR	699410	Argument	r -> io		699342	0					
ANR	699411	PtrMemberAccess	r -> io		699342	0					
ANR	699412	Identifier	r		699342	0					
ANR	699413	Identifier	io		699342	1					
ANR	699414	Argument	0		699342	1					
ANR	699415	PrimaryExpression	0		699342	0					
ANR	699416	Argument	tmp		699342	2					
ANR	699417	Identifier	tmp		699342	0					
ANR	699418	Argument	bf -> size		699342	3					
ANR	699419	PtrMemberAccess	bf -> size		699342	0					
ANR	699420	Identifier	bf		699342	0					
ANR	699421	Identifier	size		699342	1					
ANR	699422	ExpressionStatement	"r_buf_write_at ( bf -> buf , 0 , tmp , bf -> size )"	426:2:11446:11488	699342	3	True				
ANR	699423	CallExpression	"r_buf_write_at ( bf -> buf , 0 , tmp , bf -> size )"		699342	0					
ANR	699424	Callee	r_buf_write_at		699342	0					
ANR	699425	Identifier	r_buf_write_at		699342	0					
ANR	699426	ArgumentList	bf -> buf		699342	1					
ANR	699427	Argument	bf -> buf		699342	0					
ANR	699428	PtrMemberAccess	bf -> buf		699342	0					
ANR	699429	Identifier	bf		699342	0					
ANR	699430	Identifier	buf		699342	1					
ANR	699431	Argument	0		699342	1					
ANR	699432	PrimaryExpression	0		699342	0					
ANR	699433	Argument	tmp		699342	2					
ANR	699434	Identifier	tmp		699342	0					
ANR	699435	Argument	bf -> size		699342	3					
ANR	699436	PtrMemberAccess	bf -> size		699342	0					
ANR	699437	Identifier	bf		699342	0					
ANR	699438	Identifier	size		699342	1					
ANR	699439	IfStatement	if ( ! r -> file )		699342	3					
ANR	699440	Condition	! r -> file	428:5:11498:11505	699342	0	True				
ANR	699441	UnaryOperationExpression	! r -> file		699342	0					
ANR	699442	UnaryOperator	!		699342	0					
ANR	699443	PtrMemberAccess	r -> file		699342	1					
ANR	699444	Identifier	r		699342	0					
ANR	699445	Identifier	file		699342	1					
ANR	699446	CompoundStatement		13:15:322:322	699342	1					
ANR	699447	ExpressionStatement	"eprintf ( ""Core file not open\\n"" )"	429:2:11512:11544	699342	0	True				
ANR	699448	CallExpression	"eprintf ( ""Core file not open\\n"" )"		699342	0					
ANR	699449	Callee	eprintf		699342	0					
ANR	699450	Identifier	eprintf		699342	0					
ANR	699451	ArgumentList	"""Core file not open\\n"""		699342	1					
ANR	699452	Argument	"""Core file not open\\n"""		699342	0					
ANR	699453	PrimaryExpression	"""Core file not open\\n"""		699342	0					
ANR	699454	IfStatement	if ( IS_MODE_JSON ( mode ) )		699342	1					
ANR	699455	Condition	IS_MODE_JSON ( mode )	430:6:11552:11570	699342	0	True				
ANR	699456	CallExpression	IS_MODE_JSON ( mode )		699342	0					
ANR	699457	Callee	IS_MODE_JSON		699342	0					
ANR	699458	Identifier	IS_MODE_JSON		699342	0					
ANR	699459	ArgumentList	mode		699342	1					
ANR	699460	Argument	mode		699342	0					
ANR	699461	Identifier	mode		699342	0					
ANR	699462	CompoundStatement		15:27:387:387	699342	1					
ANR	699463	ExpressionStatement	"r_cons_print ( ""[]"" )"	431:3:11578:11597	699342	0	True				
ANR	699464	CallExpression	"r_cons_print ( ""[]"" )"		699342	0					
ANR	699465	Callee	r_cons_print		699342	0					
ANR	699466	Identifier	r_cons_print		699342	0					
ANR	699467	ArgumentList	"""[]"""		699342	1					
ANR	699468	Argument	"""[]"""		699342	0					
ANR	699469	PrimaryExpression	"""[]"""		699342	0					
ANR	699470	ReturnStatement	return false ;	433:2:11605:11617	699342	2	True				
ANR	699471	Identifier	false		699342	0					
ANR	699472	IfStatement	if ( ! bf )		699342	4					
ANR	699473	Condition	! bf	435:5:11627:11629	699342	0	True				
ANR	699474	UnaryOperationExpression	! bf		699342	0					
ANR	699475	UnaryOperator	!		699342	0					
ANR	699476	Identifier	bf		699342	1					
ANR	699477	CompoundStatement		25:2:510:560	699342	1					
ANR	699478	ExpressionStatement	bf = R_NEW0 ( RBinFile )	436:2:11636:11658	699342	0	True				
ANR	699479	AssignmentExpression	bf = R_NEW0 ( RBinFile )		699342	0		=			
ANR	699480	Identifier	bf		699342	0					
ANR	699481	CallExpression	R_NEW0 ( RBinFile )		699342	1					
ANR	699482	Callee	R_NEW0		699342	0					
ANR	699483	Identifier	R_NEW0		699342	0					
ANR	699484	ArgumentList	RBinFile		699342	1					
ANR	699485	Argument	RBinFile		699342	0					
ANR	699486	Identifier	RBinFile		699342	0					
ANR	699487	IfStatement	if ( ! bf )		699342	1					
ANR	699488	Condition	! bf	437:6:11666:11668	699342	0	True				
ANR	699489	UnaryOperationExpression	! bf		699342	0					
ANR	699490	UnaryOperator	!		699342	0					
ANR	699491	Identifier	bf		699342	1					
ANR	699492	CompoundStatement		22:11:485:485	699342	1					
ANR	699493	ReturnStatement	return false ;	438:3:11676:11688	699342	0	True				
ANR	699494	Identifier	false		699342	0					
ANR	699495	IdentifierDeclStatement	"RIODesc * desc = r_io_desc_get ( r -> io , r -> file -> fd ) ;"	440:2:11696:11746	699342	2	True				
ANR	699496	IdentifierDecl	"* desc = r_io_desc_get ( r -> io , r -> file -> fd )"		699342	0					
ANR	699497	IdentifierDeclType	RIODesc *		699342	0					
ANR	699498	Identifier	desc		699342	1					
ANR	699499	AssignmentExpression	"* desc = r_io_desc_get ( r -> io , r -> file -> fd )"		699342	2		=			
ANR	699500	Identifier	desc		699342	0					
ANR	699501	CallExpression	"r_io_desc_get ( r -> io , r -> file -> fd )"		699342	1					
ANR	699502	Callee	r_io_desc_get		699342	0					
ANR	699503	Identifier	r_io_desc_get		699342	0					
ANR	699504	ArgumentList	r -> io		699342	1					
ANR	699505	Argument	r -> io		699342	0					
ANR	699506	PtrMemberAccess	r -> io		699342	0					
ANR	699507	Identifier	r		699342	0					
ANR	699508	Identifier	io		699342	1					
ANR	699509	Argument	r -> file -> fd		699342	1					
ANR	699510	PtrMemberAccess	r -> file -> fd		699342	0					
ANR	699511	PtrMemberAccess	r -> file		699342	0					
ANR	699512	Identifier	r		699342	0					
ANR	699513	Identifier	file		699342	1					
ANR	699514	Identifier	fd		699342	1					
ANR	699515	IfStatement	if ( ! desc )		699342	3					
ANR	699516	Condition	! desc	441:6:11754:11758	699342	0	True				
ANR	699517	UnaryOperationExpression	! desc		699342	0					
ANR	699518	UnaryOperator	!		699342	0					
ANR	699519	Identifier	desc		699342	1					
ANR	699520	CompoundStatement		26:13:575:575	699342	1					
ANR	699521	ExpressionStatement	free ( bf )	442:3:11766:11775	699342	0	True				
ANR	699522	CallExpression	free ( bf )		699342	0					
ANR	699523	Callee	free		699342	0					
ANR	699524	Identifier	free		699342	0					
ANR	699525	ArgumentList	bf		699342	1					
ANR	699526	Argument	bf		699342	0					
ANR	699527	Identifier	bf		699342	0					
ANR	699528	ReturnStatement	return false ;	443:3:11780:11792	699342	1	True				
ANR	699529	Identifier	false		699342	0					
ANR	699530	ExpressionStatement	bf -> file = strdup ( desc -> name )	445:2:11800:11830	699342	4	True				
ANR	699531	AssignmentExpression	bf -> file = strdup ( desc -> name )		699342	0		=			
ANR	699532	PtrMemberAccess	bf -> file		699342	0					
ANR	699533	Identifier	bf		699342	0					
ANR	699534	Identifier	file		699342	1					
ANR	699535	CallExpression	strdup ( desc -> name )		699342	1					
ANR	699536	Callee	strdup		699342	0					
ANR	699537	Identifier	strdup		699342	0					
ANR	699538	ArgumentList	desc -> name		699342	1					
ANR	699539	Argument	desc -> name		699342	0					
ANR	699540	PtrMemberAccess	desc -> name		699342	0					
ANR	699541	Identifier	desc		699342	0					
ANR	699542	Identifier	name		699342	1					
ANR	699543	ExpressionStatement	bf -> size = r_io_desc_size ( desc )	446:2:11834:11866	699342	5	True				
ANR	699544	AssignmentExpression	bf -> size = r_io_desc_size ( desc )		699342	0		=			
ANR	699545	PtrMemberAccess	bf -> size		699342	0					
ANR	699546	Identifier	bf		699342	0					
ANR	699547	Identifier	size		699342	1					
ANR	699548	CallExpression	r_io_desc_size ( desc )		699342	1					
ANR	699549	Callee	r_io_desc_size		699342	0					
ANR	699550	Identifier	r_io_desc_size		699342	0					
ANR	699551	ArgumentList	desc		699342	1					
ANR	699552	Argument	desc		699342	0					
ANR	699553	Identifier	desc		699342	0					
ANR	699554	IfStatement	if ( bf -> size == UT64_MAX )		699342	6					
ANR	699555	Condition	bf -> size == UT64_MAX	447:6:11874:11893	699342	0	True				
ANR	699556	EqualityExpression	bf -> size == UT64_MAX		699342	0		==			
ANR	699557	PtrMemberAccess	bf -> size		699342	0					
ANR	699558	Identifier	bf		699342	0					
ANR	699559	Identifier	size		699342	1					
ANR	699560	Identifier	UT64_MAX		699342	1					
ANR	699561	CompoundStatement		32:28:710:710	699342	1					
ANR	699562	ExpressionStatement	free ( bf )	448:3:11901:11910	699342	0	True				
ANR	699563	CallExpression	free ( bf )		699342	0					
ANR	699564	Callee	free		699342	0					
ANR	699565	Identifier	free		699342	0					
ANR	699566	ArgumentList	bf		699342	1					
ANR	699567	Argument	bf		699342	0					
ANR	699568	Identifier	bf		699342	0					
ANR	699569	ReturnStatement	return false ;	449:3:11915:11927	699342	1	True				
ANR	699570	Identifier	false		699342	0					
ANR	699571	ExpressionStatement	"bf -> buf = r_buf_new_with_io ( & r -> bin -> iob , r -> file -> fd )"	451:2:11935:11990	699342	7	True				
ANR	699572	AssignmentExpression	"bf -> buf = r_buf_new_with_io ( & r -> bin -> iob , r -> file -> fd )"		699342	0		=			
ANR	699573	PtrMemberAccess	bf -> buf		699342	0					
ANR	699574	Identifier	bf		699342	0					
ANR	699575	Identifier	buf		699342	1					
ANR	699576	CallExpression	"r_buf_new_with_io ( & r -> bin -> iob , r -> file -> fd )"		699342	1					
ANR	699577	Callee	r_buf_new_with_io		699342	0					
ANR	699578	Identifier	r_buf_new_with_io		699342	0					
ANR	699579	ArgumentList	& r -> bin -> iob		699342	1					
ANR	699580	Argument	& r -> bin -> iob		699342	0					
ANR	699581	UnaryOperationExpression	& r -> bin -> iob		699342	0					
ANR	699582	UnaryOperator	&		699342	0					
ANR	699583	PtrMemberAccess	r -> bin -> iob		699342	1					
ANR	699584	PtrMemberAccess	r -> bin		699342	0					
ANR	699585	Identifier	r		699342	0					
ANR	699586	Identifier	bin		699342	1					
ANR	699587	Identifier	iob		699342	1					
ANR	699588	Argument	r -> file -> fd		699342	1					
ANR	699589	PtrMemberAccess	r -> file -> fd		699342	0					
ANR	699590	PtrMemberAccess	r -> file		699342	0					
ANR	699591	Identifier	r		699342	0					
ANR	699592	Identifier	file		699342	1					
ANR	699593	Identifier	fd		699342	1					
ANR	699594	ExpressionStatement	bf -> o = NULL	452:2:11994:12006	699342	8	True				
ANR	699595	AssignmentExpression	bf -> o = NULL		699342	0		=			
ANR	699596	PtrMemberAccess	bf -> o		699342	0					
ANR	699597	Identifier	bf		699342	0					
ANR	699598	Identifier	o		699342	1					
ANR	699599	Identifier	NULL		699342	1					
ANR	699600	ExpressionStatement	bf -> rbin = r -> bin	453:2:12010:12027	699342	9	True				
ANR	699601	AssignmentExpression	bf -> rbin = r -> bin		699342	0		=			
ANR	699602	PtrMemberAccess	bf -> rbin		699342	0					
ANR	699603	Identifier	bf		699342	0					
ANR	699604	Identifier	rbin		699342	1					
ANR	699605	PtrMemberAccess	r -> bin		699342	1					
ANR	699606	Identifier	r		699342	0					
ANR	699607	Identifier	bin		699342	1					
ANR	699608	ExpressionStatement	new_bf = true	454:2:12031:12044	699342	10	True				
ANR	699609	AssignmentExpression	new_bf = true		699342	0		=			
ANR	699610	Identifier	new_bf		699342	0					
ANR	699611	Identifier	true		699342	1					
ANR	699612	ExpressionStatement	va = false	455:2:12048:12058	699342	11	True				
ANR	699613	AssignmentExpression	va = false		699342	0		=			
ANR	699614	Identifier	va		699342	0					
ANR	699615	Identifier	false		699342	1					
ANR	699616	IdentifierDeclStatement	"RList * l = r_bin_raw_strings ( bf , 0 ) ;"	457:1:12064:12100	699342	5	True				
ANR	699617	IdentifierDecl	"* l = r_bin_raw_strings ( bf , 0 )"		699342	0					
ANR	699618	IdentifierDeclType	RList *		699342	0					
ANR	699619	Identifier	l		699342	1					
ANR	699620	AssignmentExpression	"* l = r_bin_raw_strings ( bf , 0 )"		699342	2		=			
ANR	699621	Identifier	l		699342	0					
ANR	699622	CallExpression	"r_bin_raw_strings ( bf , 0 )"		699342	1					
ANR	699623	Callee	r_bin_raw_strings		699342	0					
ANR	699624	Identifier	r_bin_raw_strings		699342	0					
ANR	699625	ArgumentList	bf		699342	1					
ANR	699626	Argument	bf		699342	0					
ANR	699627	Identifier	bf		699342	0					
ANR	699628	Argument	0		699342	1					
ANR	699629	PrimaryExpression	0		699342	0					
ANR	699630	ExpressionStatement	"_print_strings ( r , l , mode , va )"	458:1:12103:12134	699342	6	True				
ANR	699631	CallExpression	"_print_strings ( r , l , mode , va )"		699342	0					
ANR	699632	Callee	_print_strings		699342	0					
ANR	699633	Identifier	_print_strings		699342	0					
ANR	699634	ArgumentList	r		699342	1					
ANR	699635	Argument	r		699342	0					
ANR	699636	Identifier	r		699342	0					
ANR	699637	Argument	l		699342	1					
ANR	699638	Identifier	l		699342	0					
ANR	699639	Argument	mode		699342	2					
ANR	699640	Identifier	mode		699342	0					
ANR	699641	Argument	va		699342	3					
ANR	699642	Identifier	va		699342	0					
ANR	699643	ExpressionStatement	r_list_free ( l )	459:1:12137:12152	699342	7	True				
ANR	699644	CallExpression	r_list_free ( l )		699342	0					
ANR	699645	Callee	r_list_free		699342	0					
ANR	699646	Identifier	r_list_free		699342	0					
ANR	699647	ArgumentList	l		699342	1					
ANR	699648	Argument	l		699342	0					
ANR	699649	Identifier	l		699342	0					
ANR	699650	IfStatement	if ( new_bf )		699342	8					
ANR	699651	Condition	new_bf	460:5:12159:12164	699342	0	True				
ANR	699652	Identifier	new_bf		699342	0					
ANR	699653	CompoundStatement		45:13:981:981	699342	1					
ANR	699654	ExpressionStatement	r_buf_free ( bf -> buf )	461:2:12171:12191	699342	0	True				
ANR	699655	CallExpression	r_buf_free ( bf -> buf )		699342	0					
ANR	699656	Callee	r_buf_free		699342	0					
ANR	699657	Identifier	r_buf_free		699342	0					
ANR	699658	ArgumentList	bf -> buf		699342	1					
ANR	699659	Argument	bf -> buf		699342	0					
ANR	699660	PtrMemberAccess	bf -> buf		699342	0					
ANR	699661	Identifier	bf		699342	0					
ANR	699662	Identifier	buf		699342	1					
ANR	699663	ExpressionStatement	bf -> buf = NULL	462:2:12195:12209	699342	1	True				
ANR	699664	AssignmentExpression	bf -> buf = NULL		699342	0		=			
ANR	699665	PtrMemberAccess	bf -> buf		699342	0					
ANR	699666	Identifier	bf		699342	0					
ANR	699667	Identifier	buf		699342	1					
ANR	699668	Identifier	NULL		699342	1					
ANR	699669	ExpressionStatement	bf -> id = - 1	463:2:12213:12224	699342	2	True				
ANR	699670	AssignmentExpression	bf -> id = - 1		699342	0		=			
ANR	699671	PtrMemberAccess	bf -> id		699342	0					
ANR	699672	Identifier	bf		699342	0					
ANR	699673	Identifier	id		699342	1					
ANR	699674	UnaryOperationExpression	- 1		699342	1					
ANR	699675	UnaryOperator	-		699342	0					
ANR	699676	PrimaryExpression	1		699342	1					
ANR	699677	ExpressionStatement	r_bin_file_free ( bf )	464:2:12228:12248	699342	3	True				
ANR	699678	CallExpression	r_bin_file_free ( bf )		699342	0					
ANR	699679	Callee	r_bin_file_free		699342	0					
ANR	699680	Identifier	r_bin_file_free		699342	0					
ANR	699681	ArgumentList	bf		699342	1					
ANR	699682	Argument	bf		699342	0					
ANR	699683	Identifier	bf		699342	0					
ANR	699684	ReturnStatement	return true ;	466:1:12254:12265	699342	9	True				
ANR	699685	Identifier	true		699342	0					
ANR	699686	ReturnType	static bool		699342	1					
ANR	699687	Identifier	bin_raw_strings		699342	2					
ANR	699688	ParameterList	"RCore * r , int mode , int va"		699342	3					
ANR	699689	Parameter	RCore * r	416:28:11157:11164	699342	0	True				
ANR	699690	ParameterType	RCore *		699342	0					
ANR	699691	Identifier	r		699342	1					
ANR	699692	Parameter	int mode	416:38:11167:11174	699342	1	True				
ANR	699693	ParameterType	int		699342	0					
ANR	699694	Identifier	mode		699342	1					
ANR	699695	Parameter	int va	416:48:11177:11182	699342	2	True				
ANR	699696	ParameterType	int		699342	0					
ANR	699697	Identifier	va		699342	1					
ANR	699698	CFGEntryNode	ENTRY		699342		True				
ANR	699699	CFGExitNode	EXIT		699342		True				
ANR	699700	Symbol	bf		699342						
ANR	699701	Symbol	IS_MODE_JSON		699342						
ANR	699702	Symbol	r_io_desc_size		699342						
ANR	699703	Symbol	r -> file		699342						
ANR	699704	Symbol	bf -> rbin		699342						
ANR	699705	Symbol	mode		699342						
ANR	699706	Symbol	bf -> file		699342						
ANR	699707	Symbol	bf -> buf		699342						
ANR	699708	Symbol	bf -> o		699342						
ANR	699709	Symbol	tmp		699342						
ANR	699710	Symbol	r -> bin		699342						
ANR	699711	Symbol	* * r		699342						
ANR	699712	Symbol	* desc		699342						
ANR	699713	Symbol	UT64_MAX		699342						
ANR	699714	Symbol	r_buf_new_with_io		699342						
ANR	699715	Symbol	r_io_desc_get		699342						
ANR	699716	Symbol	NULL		699342						
ANR	699717	Symbol	r -> file -> fd		699342						
ANR	699718	Symbol	r_bin_cur		699342						
ANR	699719	Symbol	false		699342						
ANR	699720	Symbol	* bf		699342						
ANR	699721	Symbol	RBinFile		699342						
ANR	699722	Symbol	va		699342						
ANR	699723	Symbol	R_NEWS		699342						
ANR	699724	Symbol	& r -> bin -> iob		699342						
ANR	699725	Symbol	l		699342						
ANR	699726	Symbol	* r -> file		699342						
ANR	699727	Symbol	bf -> id		699342						
ANR	699728	Symbol	bf -> size		699342						
ANR	699729	Symbol	R_NEW0		699342						
ANR	699730	Symbol	r_bin_raw_strings		699342						
ANR	699731	Symbol	r		699342						
ANR	699732	Symbol	strstr		699342						
ANR	699733	Symbol	new_bf		699342						
ANR	699734	Symbol	ut8		699342						
ANR	699735	Symbol	true		699342						
ANR	699736	Symbol	strdup		699342						
ANR	699737	Symbol	* r		699342						
ANR	699738	Symbol	r -> io		699342						
ANR	699739	Symbol	desc		699342						
ANR	699740	Symbol	desc -> name		699342						
ANR	699741	Function	bin_strings	469:0:12270:12921							
ANR	699742	FunctionDef	"bin_strings (RCore * r , int mode , int va)"		699741	0					
ANR	699743	CompoundStatement		469:52:12322:12921	699741	0					
ANR	699744	IdentifierDeclStatement	RList * list ;	470:1:12325:12336	699741	0	True				
ANR	699745	IdentifierDecl	* list		699741	0					
ANR	699746	IdentifierDeclType	RList *		699741	0					
ANR	699747	Identifier	list		699741	1					
ANR	699748	IdentifierDeclStatement	RBinFile * binfile = r_bin_cur ( r -> bin ) ;	471:1:12339:12377	699741	1	True				
ANR	699749	IdentifierDecl	* binfile = r_bin_cur ( r -> bin )		699741	0					
ANR	699750	IdentifierDeclType	RBinFile *		699741	0					
ANR	699751	Identifier	binfile		699741	1					
ANR	699752	AssignmentExpression	* binfile = r_bin_cur ( r -> bin )		699741	2		=			
ANR	699753	Identifier	binfile		699741	0					
ANR	699754	CallExpression	r_bin_cur ( r -> bin )		699741	1					
ANR	699755	Callee	r_bin_cur		699741	0					
ANR	699756	Identifier	r_bin_cur		699741	0					
ANR	699757	ArgumentList	r -> bin		699741	1					
ANR	699758	Argument	r -> bin		699741	0					
ANR	699759	PtrMemberAccess	r -> bin		699741	0					
ANR	699760	Identifier	r		699741	0					
ANR	699761	Identifier	bin		699741	1					
ANR	699762	IdentifierDeclStatement	RBinPlugin * plugin = r_bin_file_cur_plugin ( binfile ) ;	472:1:12380:12432	699741	2	True				
ANR	699763	IdentifierDecl	* plugin = r_bin_file_cur_plugin ( binfile )		699741	0					
ANR	699764	IdentifierDeclType	RBinPlugin *		699741	0					
ANR	699765	Identifier	plugin		699741	1					
ANR	699766	AssignmentExpression	* plugin = r_bin_file_cur_plugin ( binfile )		699741	2		=			
ANR	699767	Identifier	plugin		699741	0					
ANR	699768	CallExpression	r_bin_file_cur_plugin ( binfile )		699741	1					
ANR	699769	Callee	r_bin_file_cur_plugin		699741	0					
ANR	699770	Identifier	r_bin_file_cur_plugin		699741	0					
ANR	699771	ArgumentList	binfile		699741	1					
ANR	699772	Argument	binfile		699741	0					
ANR	699773	Identifier	binfile		699741	0					
ANR	699774	IdentifierDeclStatement	"int rawstr = r_config_get_i ( r -> config , ""bin.rawstr"" ) ;"	473:1:12435:12488	699741	3	True				
ANR	699775	IdentifierDecl	"rawstr = r_config_get_i ( r -> config , ""bin.rawstr"" )"		699741	0					
ANR	699776	IdentifierDeclType	int		699741	0					
ANR	699777	Identifier	rawstr		699741	1					
ANR	699778	AssignmentExpression	"rawstr = r_config_get_i ( r -> config , ""bin.rawstr"" )"		699741	2		=			
ANR	699779	Identifier	rawstr		699741	0					
ANR	699780	CallExpression	"r_config_get_i ( r -> config , ""bin.rawstr"" )"		699741	1					
ANR	699781	Callee	r_config_get_i		699741	0					
ANR	699782	Identifier	r_config_get_i		699741	0					
ANR	699783	ArgumentList	r -> config		699741	1					
ANR	699784	Argument	r -> config		699741	0					
ANR	699785	PtrMemberAccess	r -> config		699741	0					
ANR	699786	Identifier	r		699741	0					
ANR	699787	Identifier	config		699741	1					
ANR	699788	Argument	"""bin.rawstr"""		699741	1					
ANR	699789	PrimaryExpression	"""bin.rawstr"""		699741	0					
ANR	699790	IfStatement	if ( ! binfile )		699741	4					
ANR	699791	Condition	! binfile	474:5:12495:12502	699741	0	True				
ANR	699792	UnaryOperationExpression	! binfile		699741	0					
ANR	699793	UnaryOperator	!		699741	0					
ANR	699794	Identifier	binfile		699741	1					
ANR	699795	CompoundStatement		6:15:182:182	699741	1					
ANR	699796	ReturnStatement	return false ;	475:2:12509:12521	699741	0	True				
ANR	699797	Identifier	false		699741	0					
ANR	699798	IfStatement	"if ( ! r_config_get_i ( r -> config , ""bin.strings"" ) )"		699741	5					
ANR	699799	Condition	"! r_config_get_i ( r -> config , ""bin.strings"" )"	477:5:12531:12572	699741	0	True				
ANR	699800	UnaryOperationExpression	"! r_config_get_i ( r -> config , ""bin.strings"" )"		699741	0					
ANR	699801	UnaryOperator	!		699741	0					
ANR	699802	CallExpression	"r_config_get_i ( r -> config , ""bin.strings"" )"		699741	1					
ANR	699803	Callee	r_config_get_i		699741	0					
ANR	699804	Identifier	r_config_get_i		699741	0					
ANR	699805	ArgumentList	r -> config		699741	1					
ANR	699806	Argument	r -> config		699741	0					
ANR	699807	PtrMemberAccess	r -> config		699741	0					
ANR	699808	Identifier	r		699741	0					
ANR	699809	Identifier	config		699741	1					
ANR	699810	Argument	"""bin.strings"""		699741	1					
ANR	699811	PrimaryExpression	"""bin.strings"""		699741	0					
ANR	699812	CompoundStatement		9:49:252:252	699741	1					
ANR	699813	ReturnStatement	return false ;	478:2:12579:12591	699741	0	True				
ANR	699814	Identifier	false		699741	0					
ANR	699815	IfStatement	if ( ! plugin )		699741	6					
ANR	699816	Condition	! plugin	480:5:12601:12607	699741	0	True				
ANR	699817	UnaryOperationExpression	! plugin		699741	0					
ANR	699818	UnaryOperator	!		699741	0					
ANR	699819	Identifier	plugin		699741	1					
ANR	699820	CompoundStatement		12:14:287:287	699741	1					
ANR	699821	ReturnStatement	return false ;	481:2:12614:12626	699741	0	True				
ANR	699822	Identifier	false		699741	0					
ANR	699823	IfStatement	if ( plugin -> info && plugin -> name )		699741	7					
ANR	699824	Condition	plugin -> info && plugin -> name	483:5:12636:12663	699741	0	True				
ANR	699825	AndExpression	plugin -> info && plugin -> name		699741	0		&&			
ANR	699826	PtrMemberAccess	plugin -> info		699741	0					
ANR	699827	Identifier	plugin		699741	0					
ANR	699828	Identifier	info		699741	1					
ANR	699829	PtrMemberAccess	plugin -> name		699741	1					
ANR	699830	Identifier	plugin		699741	0					
ANR	699831	Identifier	name		699741	1					
ANR	699832	CompoundStatement		15:35:343:343	699741	1					
ANR	699833	IfStatement	"if ( strcmp ( plugin -> name , ""any"" ) == 0 && ! rawstr )"		699741	0					
ANR	699834	Condition	"strcmp ( plugin -> name , ""any"" ) == 0 && ! rawstr"	484:6:12674:12717	699741	0	True				
ANR	699835	AndExpression	"strcmp ( plugin -> name , ""any"" ) == 0 && ! rawstr"		699741	0		&&			
ANR	699836	EqualityExpression	"strcmp ( plugin -> name , ""any"" ) == 0"		699741	0		==			
ANR	699837	CallExpression	"strcmp ( plugin -> name , ""any"" )"		699741	0					
ANR	699838	Callee	strcmp		699741	0					
ANR	699839	Identifier	strcmp		699741	0					
ANR	699840	ArgumentList	plugin -> name		699741	1					
ANR	699841	Argument	plugin -> name		699741	0					
ANR	699842	PtrMemberAccess	plugin -> name		699741	0					
ANR	699843	Identifier	plugin		699741	0					
ANR	699844	Identifier	name		699741	1					
ANR	699845	Argument	"""any"""		699741	1					
ANR	699846	PrimaryExpression	"""any"""		699741	0					
ANR	699847	PrimaryExpression	0		699741	1					
ANR	699848	UnaryOperationExpression	! rawstr		699741	1					
ANR	699849	UnaryOperator	!		699741	0					
ANR	699850	Identifier	rawstr		699741	1					
ANR	699851	CompoundStatement		16:52:397:397	699741	1					
ANR	699852	IfStatement	if ( IS_MODE_JSON ( mode ) )		699741	0					
ANR	699853	Condition	IS_MODE_JSON ( mode )	485:7:12729:12747	699741	0	True				
ANR	699854	CallExpression	IS_MODE_JSON ( mode )		699741	0					
ANR	699855	Callee	IS_MODE_JSON		699741	0					
ANR	699856	Identifier	IS_MODE_JSON		699741	0					
ANR	699857	ArgumentList	mode		699741	1					
ANR	699858	Argument	mode		699741	0					
ANR	699859	Identifier	mode		699741	0					
ANR	699860	CompoundStatement		17:28:427:427	699741	1					
ANR	699861	ExpressionStatement	"r_cons_print ( ""[]"" )"	486:4:12756:12774	699741	0	True				
ANR	699862	CallExpression	"r_cons_print ( ""[]"" )"		699741	0					
ANR	699863	Callee	r_cons_print		699741	0					
ANR	699864	Identifier	r_cons_print		699741	0					
ANR	699865	ArgumentList	"""[]"""		699741	1					
ANR	699866	Argument	"""[]"""		699741	0					
ANR	699867	PrimaryExpression	"""[]"""		699741	0					
ANR	699868	ReturnStatement	return false ;	488:3:12784:12796	699741	1	True				
ANR	699869	Identifier	false		699741	0					
ANR	699870	IfStatement	if ( ! ( list = r_bin_get_strings ( r -> bin ) ) )		699741	8					
ANR	699871	Condition	! ( list = r_bin_get_strings ( r -> bin ) )	492:5:12811:12846	699741	0	True				
ANR	699872	UnaryOperationExpression	! ( list = r_bin_get_strings ( r -> bin ) )		699741	0					
ANR	699873	UnaryOperator	!		699741	0					
ANR	699874	AssignmentExpression	list = r_bin_get_strings ( r -> bin )		699741	1		=			
ANR	699875	Identifier	list		699741	0					
ANR	699876	CallExpression	r_bin_get_strings ( r -> bin )		699741	1					
ANR	699877	Callee	r_bin_get_strings		699741	0					
ANR	699878	Identifier	r_bin_get_strings		699741	0					
ANR	699879	ArgumentList	r -> bin		699741	1					
ANR	699880	Argument	r -> bin		699741	0					
ANR	699881	PtrMemberAccess	r -> bin		699741	0					
ANR	699882	Identifier	r		699741	0					
ANR	699883	Identifier	bin		699741	1					
ANR	699884	CompoundStatement		24:43:526:526	699741	1					
ANR	699885	ReturnStatement	return false ;	493:2:12853:12865	699741	0	True				
ANR	699886	Identifier	false		699741	0					
ANR	699887	ExpressionStatement	"_print_strings ( r , list , mode , va )"	495:1:12871:12905	699741	9	True				
ANR	699888	CallExpression	"_print_strings ( r , list , mode , va )"		699741	0					
ANR	699889	Callee	_print_strings		699741	0					
ANR	699890	Identifier	_print_strings		699741	0					
ANR	699891	ArgumentList	r		699741	1					
ANR	699892	Argument	r		699741	0					
ANR	699893	Identifier	r		699741	0					
ANR	699894	Argument	list		699741	1					
ANR	699895	Identifier	list		699741	0					
ANR	699896	Argument	mode		699741	2					
ANR	699897	Identifier	mode		699741	0					
ANR	699898	Argument	va		699741	3					
ANR	699899	Identifier	va		699741	0					
ANR	699900	ReturnStatement	return true ;	496:1:12908:12919	699741	10	True				
ANR	699901	Identifier	true		699741	0					
ANR	699902	ReturnType	static bool		699741	1					
ANR	699903	Identifier	bin_strings		699741	2					
ANR	699904	ParameterList	"RCore * r , int mode , int va"		699741	3					
ANR	699905	Parameter	RCore * r	469:24:12294:12301	699741	0	True				
ANR	699906	ParameterType	RCore *		699741	0					
ANR	699907	Identifier	r		699741	1					
ANR	699908	Parameter	int mode	469:34:12304:12311	699741	1	True				
ANR	699909	ParameterType	int		699741	0					
ANR	699910	Identifier	mode		699741	1					
ANR	699911	Parameter	int va	469:44:12314:12319	699741	2	True				
ANR	699912	ParameterType	int		699741	0					
ANR	699913	Identifier	va		699741	1					
ANR	699914	CFGEntryNode	ENTRY		699741		True				
ANR	699915	CFGExitNode	EXIT		699741		True				
ANR	699916	Symbol	strcmp		699741						
ANR	699917	Symbol	plugin -> name		699741						
ANR	699918	Symbol	r_bin_cur		699741						
ANR	699919	Symbol	false		699741						
ANR	699920	Symbol	* plugin		699741						
ANR	699921	Symbol	IS_MODE_JSON		699741						
ANR	699922	Symbol	va		699741						
ANR	699923	Symbol	list		699741						
ANR	699924	Symbol	binfile		699741						
ANR	699925	Symbol	r_bin_get_strings		699741						
ANR	699926	Symbol	mode		699741						
ANR	699927	Symbol	r		699741						
ANR	699928	Symbol	plugin		699741						
ANR	699929	Symbol	r_bin_file_cur_plugin		699741						
ANR	699930	Symbol	r -> bin		699741						
ANR	699931	Symbol	r_config_get_i		699741						
ANR	699932	Symbol	true		699741						
ANR	699933	Symbol	plugin -> info		699741						
ANR	699934	Symbol	* r		699741						
ANR	699935	Symbol	rawstr		699741						
ANR	699936	Symbol	r -> config		699741						
ANR	699937	Function	get_compile_time	499:0:12924:13169							
ANR	699938	FunctionDef	get_compile_time (Sdb * binFileSdb)		699937	0					
ANR	699939	CompoundStatement		499:53:12977:13169	699937	0					
ANR	699940	IdentifierDeclStatement	"Sdb * info_ns = sdb_ns ( binFileSdb , ""info"" , false ) ;"	500:1:12980:13029	699937	0	True				
ANR	699941	IdentifierDecl	"* info_ns = sdb_ns ( binFileSdb , ""info"" , false )"		699937	0					
ANR	699942	IdentifierDeclType	Sdb *		699937	0					
ANR	699943	Identifier	info_ns		699937	1					
ANR	699944	AssignmentExpression	"* info_ns = sdb_ns ( binFileSdb , ""info"" , false )"		699937	2		=			
ANR	699945	Identifier	info_ns		699937	0					
ANR	699946	CallExpression	"sdb_ns ( binFileSdb , ""info"" , false )"		699937	1					
ANR	699947	Callee	sdb_ns		699937	0					
ANR	699948	Identifier	sdb_ns		699937	0					
ANR	699949	ArgumentList	binFileSdb		699937	1					
ANR	699950	Argument	binFileSdb		699937	0					
ANR	699951	Identifier	binFileSdb		699937	0					
ANR	699952	Argument	"""info"""		699937	1					
ANR	699953	PrimaryExpression	"""info"""		699937	0					
ANR	699954	Argument	false		699937	2					
ANR	699955	Identifier	false		699937	0					
ANR	699956	IdentifierDeclStatement	"const char * timeDateStamp_string = sdb_const_get ( info_ns , ""image_file_header.TimeDateStamp_string"" , 0 ) ;"	501:1:13032:13137	699937	1	True				
ANR	699957	IdentifierDecl	"* timeDateStamp_string = sdb_const_get ( info_ns , ""image_file_header.TimeDateStamp_string"" , 0 )"		699937	0					
ANR	699958	IdentifierDeclType	const char *		699937	0					
ANR	699959	Identifier	timeDateStamp_string		699937	1					
ANR	699960	AssignmentExpression	"* timeDateStamp_string = sdb_const_get ( info_ns , ""image_file_header.TimeDateStamp_string"" , 0 )"		699937	2		=			
ANR	699961	Identifier	timeDateStamp_string		699937	0					
ANR	699962	CallExpression	"sdb_const_get ( info_ns , ""image_file_header.TimeDateStamp_string"" , 0 )"		699937	1					
ANR	699963	Callee	sdb_const_get		699937	0					
ANR	699964	Identifier	sdb_const_get		699937	0					
ANR	699965	ArgumentList	info_ns		699937	1					
ANR	699966	Argument	info_ns		699937	0					
ANR	699967	Identifier	info_ns		699937	0					
ANR	699968	Argument	"""image_file_header.TimeDateStamp_string"""		699937	1					
ANR	699969	PrimaryExpression	"""image_file_header.TimeDateStamp_string"""		699937	0					
ANR	699970	Argument	0		699937	2					
ANR	699971	PrimaryExpression	0		699937	0					
ANR	699972	ReturnStatement	return timeDateStamp_string ;	503:1:13140:13167	699937	2	True				
ANR	699973	Identifier	timeDateStamp_string		699937	0					
ANR	699974	ReturnType	static const char *		699937	1					
ANR	699975	Identifier	get_compile_time		699937	2					
ANR	699976	ParameterList	Sdb * binFileSdb		699937	3					
ANR	699977	Parameter	Sdb * binFileSdb	499:36:12960:12974	699937	0	True				
ANR	699978	ParameterType	Sdb *		699937	0					
ANR	699979	Identifier	binFileSdb		699937	1					
ANR	699980	CFGEntryNode	ENTRY		699937		True				
ANR	699981	CFGExitNode	EXIT		699937		True				
ANR	699982	Symbol	info_ns		699937						
ANR	699983	Symbol	false		699937						
ANR	699984	Symbol	binFileSdb		699937						
ANR	699985	Symbol	sdb_const_get		699937						
ANR	699986	Symbol	timeDateStamp_string		699937						
ANR	699987	Symbol	sdb_ns		699937						
ANR	699988	Function	is_executable	506:0:13172:13454							
ANR	699989	FunctionDef	is_executable (RBinObject * obj)		699988	0					
ANR	699990	CompoundStatement		506:43:13215:13454	699988	0					
ANR	699991	IdentifierDeclStatement	RListIter * it ;	507:1:13218:13231	699988	0	True				
ANR	699992	IdentifierDecl	* it		699988	0					
ANR	699993	IdentifierDeclType	RListIter *		699988	0					
ANR	699994	Identifier	it		699988	1					
ANR	699995	IdentifierDeclStatement	RBinSection * sec ;	508:1:13234:13250	699988	1	True				
ANR	699996	IdentifierDecl	* sec		699988	0					
ANR	699997	IdentifierDeclType	RBinSection *		699988	0					
ANR	699998	Identifier	sec		699988	1					
ANR	699999	ExpressionStatement	"r_return_val_if_fail ( obj , false )"	509:1:13253:13286	699988	2	True				
ANR	700000	CallExpression	"r_return_val_if_fail ( obj , false )"		699988	0					
ANR	700001	Callee	r_return_val_if_fail		699988	0					
ANR	700002	Identifier	r_return_val_if_fail		699988	0					
ANR	700003	ArgumentList	obj		699988	1					
ANR	700004	Argument	obj		699988	0					
ANR	700005	Identifier	obj		699988	0					
ANR	700006	Argument	false		699988	1					
ANR	700007	Identifier	false		699988	0					
ANR	700008	IfStatement	if ( obj -> info && obj -> info -> arch )		699988	3					
ANR	700009	Condition	obj -> info && obj -> info -> arch	510:5:13293:13320	699988	0	True				
ANR	700010	AndExpression	obj -> info && obj -> info -> arch		699988	0		&&			
ANR	700011	PtrMemberAccess	obj -> info		699988	0					
ANR	700012	Identifier	obj		699988	0					
ANR	700013	Identifier	info		699988	1					
ANR	700014	PtrMemberAccess	obj -> info -> arch		699988	1					
ANR	700015	PtrMemberAccess	obj -> info		699988	0					
ANR	700016	Identifier	obj		699988	0					
ANR	700017	Identifier	info		699988	1					
ANR	700018	Identifier	arch		699988	1					
ANR	700019	CompoundStatement		5:35:107:107	699988	1					
ANR	700020	ReturnStatement	return true ;	511:2:13327:13338	699988	0	True				
ANR	700021	Identifier	true		699988	0					
ANR	700022	Statement	r_list_foreach	513:1:13344:13357	699988	4	True				
ANR	700023	Statement	(	513:16:13359:13359	699988	5	True				
ANR	700024	Statement	obj	513:17:13360:13362	699988	6	True				
ANR	700025	Statement	->	513:20:13363:13364	699988	7	True				
ANR	700026	Statement	sections	513:22:13365:13372	699988	8	True				
ANR	700027	Statement	","	513:30:13373:13373	699988	9	True				
ANR	700028	Statement	it	513:32:13375:13376	699988	10	True				
ANR	700029	Statement	","	513:34:13377:13377	699988	11	True				
ANR	700030	Statement	sec	513:36:13379:13381	699988	12	True				
ANR	700031	Statement	)	513:39:13382:13382	699988	13	True				
ANR	700032	CompoundStatement		8:41:168:168	699988	14					
ANR	700033	IfStatement	if ( sec -> perm & R_PERM_X )		699988	0					
ANR	700034	Condition	sec -> perm & R_PERM_X	514:6:13392:13411	699988	0	True				
ANR	700035	BitAndExpression	sec -> perm & R_PERM_X		699988	0		&			
ANR	700036	PtrMemberAccess	sec -> perm		699988	0					
ANR	700037	Identifier	sec		699988	0					
ANR	700038	Identifier	perm		699988	1					
ANR	700039	Identifier	R_PERM_X		699988	1					
ANR	700040	CompoundStatement		9:28:198:198	699988	1					
ANR	700041	ReturnStatement	return true ;	515:3:13419:13430	699988	0	True				
ANR	700042	Identifier	true		699988	0					
ANR	700043	ReturnStatement	return false ;	518:1:13440:13452	699988	15	True				
ANR	700044	Identifier	false		699988	0					
ANR	700045	ReturnType	static bool		699988	1					
ANR	700046	Identifier	is_executable		699988	2					
ANR	700047	ParameterList	RBinObject * obj		699988	3					
ANR	700048	Parameter	RBinObject * obj	506:26:13198:13212	699988	0	True				
ANR	700049	ParameterType	RBinObject *		699988	0					
ANR	700050	Identifier	obj		699988	1					
ANR	700051	CFGEntryNode	ENTRY		699988		True				
ANR	700052	CFGExitNode	EXIT		699988		True				
ANR	700053	Symbol	* obj		699988						
ANR	700054	Symbol	false		699988						
ANR	700055	Symbol	it		699988						
ANR	700056	Symbol	* * obj		699988						
ANR	700057	Symbol	obj -> info		699988						
ANR	700058	Symbol	sec		699988						
ANR	700059	Symbol	R_PERM_X		699988						
ANR	700060	Symbol	* obj -> info		699988						
ANR	700061	Symbol	obj		699988						
ANR	700062	Symbol	true		699988						
ANR	700063	Symbol	obj -> info -> arch		699988						
ANR	700064	Symbol	* sec		699988						
ANR	700065	Symbol	sec -> perm		699988						
ANR	700066	Function	sdb_concat_by_path	521:0:13457:13602							
ANR	700067	FunctionDef	"sdb_concat_by_path (Sdb * s , const char * path)"		700066	0					
ANR	700068	CompoundStatement		521:57:13514:13602	700066	0					
ANR	700069	IdentifierDeclStatement	"Sdb * db = sdb_new ( 0 , path , 0 ) ;"	522:1:13517:13547	700066	0	True				
ANR	700070	IdentifierDecl	"* db = sdb_new ( 0 , path , 0 )"		700066	0					
ANR	700071	IdentifierDeclType	Sdb *		700066	0					
ANR	700072	Identifier	db		700066	1					
ANR	700073	AssignmentExpression	"* db = sdb_new ( 0 , path , 0 )"		700066	2		=			
ANR	700074	Identifier	db		700066	0					
ANR	700075	CallExpression	"sdb_new ( 0 , path , 0 )"		700066	1					
ANR	700076	Callee	sdb_new		700066	0					
ANR	700077	Identifier	sdb_new		700066	0					
ANR	700078	ArgumentList	0		700066	1					
ANR	700079	Argument	0		700066	0					
ANR	700080	PrimaryExpression	0		700066	0					
ANR	700081	Argument	path		700066	1					
ANR	700082	Identifier	path		700066	0					
ANR	700083	Argument	0		700066	2					
ANR	700084	PrimaryExpression	0		700066	0					
ANR	700085	ExpressionStatement	"sdb_merge ( s , db )"	523:1:13550:13567	700066	1	True				
ANR	700086	CallExpression	"sdb_merge ( s , db )"		700066	0					
ANR	700087	Callee	sdb_merge		700066	0					
ANR	700088	Identifier	sdb_merge		700066	0					
ANR	700089	ArgumentList	s		700066	1					
ANR	700090	Argument	s		700066	0					
ANR	700091	Identifier	s		700066	0					
ANR	700092	Argument	db		700066	1					
ANR	700093	Identifier	db		700066	0					
ANR	700094	ExpressionStatement	sdb_close ( db )	524:1:13570:13584	700066	2	True				
ANR	700095	CallExpression	sdb_close ( db )		700066	0					
ANR	700096	Callee	sdb_close		700066	0					
ANR	700097	Identifier	sdb_close		700066	0					
ANR	700098	ArgumentList	db		700066	1					
ANR	700099	Argument	db		700066	0					
ANR	700100	Identifier	db		700066	0					
ANR	700101	ExpressionStatement	sdb_free ( db )	525:1:13587:13600	700066	3	True				
ANR	700102	CallExpression	sdb_free ( db )		700066	0					
ANR	700103	Callee	sdb_free		700066	0					
ANR	700104	Identifier	sdb_free		700066	0					
ANR	700105	ArgumentList	db		700066	1					
ANR	700106	Argument	db		700066	0					
ANR	700107	Identifier	db		700066	0					
ANR	700108	ReturnType	static void		700066	1					
ANR	700109	Identifier	sdb_concat_by_path		700066	2					
ANR	700110	ParameterList	"Sdb * s , const char * path"		700066	3					
ANR	700111	Parameter	Sdb * s	521:31:13488:13493	700066	0	True				
ANR	700112	ParameterType	Sdb *		700066	0					
ANR	700113	Identifier	s		700066	1					
ANR	700114	Parameter	const char * path	521:39:13496:13511	700066	1	True				
ANR	700115	ParameterType	const char *		700066	0					
ANR	700116	Identifier	path		700066	1					
ANR	700117	CFGEntryNode	ENTRY		700066		True				
ANR	700118	CFGExitNode	EXIT		700066		True				
ANR	700119	Symbol	path		700066						
ANR	700120	Symbol	sdb_new		700066						
ANR	700121	Symbol	s		700066						
ANR	700122	Symbol	db		700066						
ANR	700123	Function	r_core_anal_type_init	528:0:13605:15443							
ANR	700124	FunctionDef	r_core_anal_type_init (RCore * core)		700123	0					
ANR	700125	CompoundStatement		528:46:13651:15443	700123	0					
ANR	700126	ExpressionStatement	r_return_if_fail ( core && core -> anal )	529:1:13654:13691	700123	0	True				
ANR	700127	CallExpression	r_return_if_fail ( core && core -> anal )		700123	0					
ANR	700128	Callee	r_return_if_fail		700123	0					
ANR	700129	Identifier	r_return_if_fail		700123	0					
ANR	700130	ArgumentList	core && core -> anal		700123	1					
ANR	700131	Argument	core && core -> anal		700123	0					
ANR	700132	AndExpression	core && core -> anal		700123	0		&&			
ANR	700133	Identifier	core		700123	0					
ANR	700134	PtrMemberAccess	core -> anal		700123	1					
ANR	700135	Identifier	core		700123	0					
ANR	700136	Identifier	anal		700123	1					
ANR	700137	IdentifierDeclStatement	"const char * dir_prefix = r_config_get ( core -> config , ""dir.prefix"" ) ;"	530:1:13694:13760	700123	1	True				
ANR	700138	IdentifierDecl	"* dir_prefix = r_config_get ( core -> config , ""dir.prefix"" )"		700123	0					
ANR	700139	IdentifierDeclType	const char *		700123	0					
ANR	700140	Identifier	dir_prefix		700123	1					
ANR	700141	AssignmentExpression	"* dir_prefix = r_config_get ( core -> config , ""dir.prefix"" )"		700123	2		=			
ANR	700142	Identifier	dir_prefix		700123	0					
ANR	700143	CallExpression	"r_config_get ( core -> config , ""dir.prefix"" )"		700123	1					
ANR	700144	Callee	r_config_get		700123	0					
ANR	700145	Identifier	r_config_get		700123	0					
ANR	700146	ArgumentList	core -> config		700123	1					
ANR	700147	Argument	core -> config		700123	0					
ANR	700148	PtrMemberAccess	core -> config		700123	0					
ANR	700149	Identifier	core		700123	0					
ANR	700150	Identifier	config		700123	1					
ANR	700151	Argument	"""dir.prefix"""		700123	1					
ANR	700152	PrimaryExpression	"""dir.prefix"""		700123	0					
ANR	700153	IdentifierDeclStatement	int bits = core -> assembler -> bits ;	531:1:13763:13795	700123	2	True				
ANR	700154	IdentifierDecl	bits = core -> assembler -> bits		700123	0					
ANR	700155	IdentifierDeclType	int		700123	0					
ANR	700156	Identifier	bits		700123	1					
ANR	700157	AssignmentExpression	bits = core -> assembler -> bits		700123	2		=			
ANR	700158	Identifier	bits		700123	0					
ANR	700159	PtrMemberAccess	core -> assembler -> bits		700123	1					
ANR	700160	PtrMemberAccess	core -> assembler		700123	0					
ANR	700161	Identifier	core		700123	0					
ANR	700162	Identifier	assembler		700123	1					
ANR	700163	Identifier	bits		700123	1					
ANR	700164	IdentifierDeclStatement	Sdb * types = core -> anal -> sdb_types ;	532:1:13798:13832	700123	3	True				
ANR	700165	IdentifierDecl	* types = core -> anal -> sdb_types		700123	0					
ANR	700166	IdentifierDeclType	Sdb *		700123	0					
ANR	700167	Identifier	types		700123	1					
ANR	700168	AssignmentExpression	* types = core -> anal -> sdb_types		700123	2		=			
ANR	700169	Identifier	types		700123	0					
ANR	700170	PtrMemberAccess	core -> anal -> sdb_types		700123	1					
ANR	700171	PtrMemberAccess	core -> anal		700123	0					
ANR	700172	Identifier	core		700123	0					
ANR	700173	Identifier	anal		700123	1					
ANR	700174	Identifier	sdb_types		700123	1					
ANR	700175	ExpressionStatement	sdb_reset ( types )	534:1:13885:13902	700123	4	True				
ANR	700176	CallExpression	sdb_reset ( types )		700123	0					
ANR	700177	Callee	sdb_reset		700123	0					
ANR	700178	Identifier	sdb_reset		700123	0					
ANR	700179	ArgumentList	types		700123	1					
ANR	700180	Argument	types		700123	0					
ANR	700181	Identifier	types		700123	0					
ANR	700182	IdentifierDeclStatement	"const char * anal_arch = r_config_get ( core -> config , ""anal.arch"" ) ;"	535:1:13905:13969	700123	5	True				
ANR	700183	IdentifierDecl	"* anal_arch = r_config_get ( core -> config , ""anal.arch"" )"		700123	0					
ANR	700184	IdentifierDeclType	const char *		700123	0					
ANR	700185	Identifier	anal_arch		700123	1					
ANR	700186	AssignmentExpression	"* anal_arch = r_config_get ( core -> config , ""anal.arch"" )"		700123	2		=			
ANR	700187	Identifier	anal_arch		700123	0					
ANR	700188	CallExpression	"r_config_get ( core -> config , ""anal.arch"" )"		700123	1					
ANR	700189	Callee	r_config_get		700123	0					
ANR	700190	Identifier	r_config_get		700123	0					
ANR	700191	ArgumentList	core -> config		700123	1					
ANR	700192	Argument	core -> config		700123	0					
ANR	700193	PtrMemberAccess	core -> config		700123	0					
ANR	700194	Identifier	core		700123	0					
ANR	700195	Identifier	config		700123	1					
ANR	700196	Argument	"""anal.arch"""		700123	1					
ANR	700197	PrimaryExpression	"""anal.arch"""		700123	0					
ANR	700198	IdentifierDeclStatement	"const char * os = r_config_get ( core -> config , ""asm.os"" ) ;"	536:1:13972:14026	700123	6	True				
ANR	700199	IdentifierDecl	"* os = r_config_get ( core -> config , ""asm.os"" )"		700123	0					
ANR	700200	IdentifierDeclType	const char *		700123	0					
ANR	700201	Identifier	os		700123	1					
ANR	700202	AssignmentExpression	"* os = r_config_get ( core -> config , ""asm.os"" )"		700123	2		=			
ANR	700203	Identifier	os		700123	0					
ANR	700204	CallExpression	"r_config_get ( core -> config , ""asm.os"" )"		700123	1					
ANR	700205	Callee	r_config_get		700123	0					
ANR	700206	Identifier	r_config_get		700123	0					
ANR	700207	ArgumentList	core -> config		700123	1					
ANR	700208	Argument	core -> config		700123	0					
ANR	700209	PtrMemberAccess	core -> config		700123	0					
ANR	700210	Identifier	core		700123	0					
ANR	700211	Identifier	config		700123	1					
ANR	700212	Argument	"""asm.os"""		700123	1					
ANR	700213	PrimaryExpression	"""asm.os"""		700123	0					
ANR	700214	IdentifierDeclStatement	"const char * dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types.sdb"" ) , dir_prefix ) ;"	539:1:14050:14143	700123	7	True				
ANR	700215	IdentifierDecl	"* dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types.sdb"" ) , dir_prefix )"		700123	0					
ANR	700216	IdentifierDeclType	const char *		700123	0					
ANR	700217	Identifier	dbpath		700123	1					
ANR	700218	AssignmentExpression	"* dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types.sdb"" ) , dir_prefix )"		700123	2		=			
ANR	700219	Identifier	dbpath		700123	0					
ANR	700220	CallExpression	"sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types.sdb"" ) , dir_prefix )"		700123	1					
ANR	700221	Callee	sdb_fmt		700123	0					
ANR	700222	Identifier	sdb_fmt		700123	0					
ANR	700223	ArgumentList	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types.sdb"" )"		700123	1					
ANR	700224	Argument	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types.sdb"" )"		700123	0					
ANR	700225	CallExpression	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types.sdb"" )"		700123	0					
ANR	700226	Callee	R_JOIN_3_PATHS		700123	0					
ANR	700227	Identifier	R_JOIN_3_PATHS		700123	0					
ANR	700228	ArgumentList	"""%s"""		700123	1					
ANR	700229	Argument	"""%s"""		700123	0					
ANR	700230	PrimaryExpression	"""%s"""		700123	0					
ANR	700231	Argument	R2_SDB_FCNSIGN		700123	1					
ANR	700232	Identifier	R2_SDB_FCNSIGN		700123	0					
ANR	700233	Argument	"""types.sdb"""		700123	2					
ANR	700234	PrimaryExpression	"""types.sdb"""		700123	0					
ANR	700235	Argument	dir_prefix		700123	1					
ANR	700236	Identifier	dir_prefix		700123	0					
ANR	700237	IfStatement	if ( r_file_exists ( dbpath ) )		700123	8					
ANR	700238	Condition	r_file_exists ( dbpath )	540:5:14150:14171	700123	0	True				
ANR	700239	CallExpression	r_file_exists ( dbpath )		700123	0					
ANR	700240	Callee	r_file_exists		700123	0					
ANR	700241	Identifier	r_file_exists		700123	0					
ANR	700242	ArgumentList	dbpath		700123	1					
ANR	700243	Argument	dbpath		700123	0					
ANR	700244	Identifier	dbpath		700123	0					
ANR	700245	CompoundStatement		13:29:522:522	700123	1					
ANR	700246	ExpressionStatement	"sdb_concat_by_path ( types , dbpath )"	541:2:14178:14212	700123	0	True				
ANR	700247	CallExpression	"sdb_concat_by_path ( types , dbpath )"		700123	0					
ANR	700248	Callee	sdb_concat_by_path		700123	0					
ANR	700249	Identifier	sdb_concat_by_path		700123	0					
ANR	700250	ArgumentList	types		700123	1					
ANR	700251	Argument	types		700123	0					
ANR	700252	Identifier	types		700123	0					
ANR	700253	Argument	dbpath		700123	1					
ANR	700254	Identifier	dbpath		700123	0					
ANR	700255	ExpressionStatement	"dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s.sdb"" ) , dir_prefix , anal_arch )"	543:1:14218:14315	700123	9	True				
ANR	700256	AssignmentExpression	"dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s.sdb"" ) , dir_prefix , anal_arch )"		700123	0		=			
ANR	700257	Identifier	dbpath		700123	0					
ANR	700258	CallExpression	"sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s.sdb"" ) , dir_prefix , anal_arch )"		700123	1					
ANR	700259	Callee	sdb_fmt		700123	0					
ANR	700260	Identifier	sdb_fmt		700123	0					
ANR	700261	ArgumentList	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s.sdb"" )"		700123	1					
ANR	700262	Argument	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s.sdb"" )"		700123	0					
ANR	700263	CallExpression	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s.sdb"" )"		700123	0					
ANR	700264	Callee	R_JOIN_3_PATHS		700123	0					
ANR	700265	Identifier	R_JOIN_3_PATHS		700123	0					
ANR	700266	ArgumentList	"""%s"""		700123	1					
ANR	700267	Argument	"""%s"""		700123	0					
ANR	700268	PrimaryExpression	"""%s"""		700123	0					
ANR	700269	Argument	R2_SDB_FCNSIGN		700123	1					
ANR	700270	Identifier	R2_SDB_FCNSIGN		700123	0					
ANR	700271	Argument	"""types-%s.sdb"""		700123	2					
ANR	700272	PrimaryExpression	"""types-%s.sdb"""		700123	0					
ANR	700273	Argument	dir_prefix		700123	1					
ANR	700274	Identifier	dir_prefix		700123	0					
ANR	700275	Argument	anal_arch		700123	2					
ANR	700276	Identifier	anal_arch		700123	0					
ANR	700277	IfStatement	if ( r_file_exists ( dbpath ) )		700123	10					
ANR	700278	Condition	r_file_exists ( dbpath )	545:5:14322:14343	700123	0	True				
ANR	700279	CallExpression	r_file_exists ( dbpath )		700123	0					
ANR	700280	Callee	r_file_exists		700123	0					
ANR	700281	Identifier	r_file_exists		700123	0					
ANR	700282	ArgumentList	dbpath		700123	1					
ANR	700283	Argument	dbpath		700123	0					
ANR	700284	Identifier	dbpath		700123	0					
ANR	700285	CompoundStatement		18:29:694:694	700123	1					
ANR	700286	ExpressionStatement	"sdb_concat_by_path ( types , dbpath )"	546:2:14350:14384	700123	0	True				
ANR	700287	CallExpression	"sdb_concat_by_path ( types , dbpath )"		700123	0					
ANR	700288	Callee	sdb_concat_by_path		700123	0					
ANR	700289	Identifier	sdb_concat_by_path		700123	0					
ANR	700290	ArgumentList	types		700123	1					
ANR	700291	Argument	types		700123	0					
ANR	700292	Identifier	types		700123	0					
ANR	700293	Argument	dbpath		700123	1					
ANR	700294	Identifier	dbpath		700123	0					
ANR	700295	ExpressionStatement	"dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s.sdb"" ) , dir_prefix , os )"	548:1:14390:14480	700123	11	True				
ANR	700296	AssignmentExpression	"dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s.sdb"" ) , dir_prefix , os )"		700123	0		=			
ANR	700297	Identifier	dbpath		700123	0					
ANR	700298	CallExpression	"sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s.sdb"" ) , dir_prefix , os )"		700123	1					
ANR	700299	Callee	sdb_fmt		700123	0					
ANR	700300	Identifier	sdb_fmt		700123	0					
ANR	700301	ArgumentList	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s.sdb"" )"		700123	1					
ANR	700302	Argument	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s.sdb"" )"		700123	0					
ANR	700303	CallExpression	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s.sdb"" )"		700123	0					
ANR	700304	Callee	R_JOIN_3_PATHS		700123	0					
ANR	700305	Identifier	R_JOIN_3_PATHS		700123	0					
ANR	700306	ArgumentList	"""%s"""		700123	1					
ANR	700307	Argument	"""%s"""		700123	0					
ANR	700308	PrimaryExpression	"""%s"""		700123	0					
ANR	700309	Argument	R2_SDB_FCNSIGN		700123	1					
ANR	700310	Identifier	R2_SDB_FCNSIGN		700123	0					
ANR	700311	Argument	"""types-%s.sdb"""		700123	2					
ANR	700312	PrimaryExpression	"""types-%s.sdb"""		700123	0					
ANR	700313	Argument	dir_prefix		700123	1					
ANR	700314	Identifier	dir_prefix		700123	0					
ANR	700315	Argument	os		700123	2					
ANR	700316	Identifier	os		700123	0					
ANR	700317	IfStatement	if ( r_file_exists ( dbpath ) )		700123	12					
ANR	700318	Condition	r_file_exists ( dbpath )	550:5:14487:14508	700123	0	True				
ANR	700319	CallExpression	r_file_exists ( dbpath )		700123	0					
ANR	700320	Callee	r_file_exists		700123	0					
ANR	700321	Identifier	r_file_exists		700123	0					
ANR	700322	ArgumentList	dbpath		700123	1					
ANR	700323	Argument	dbpath		700123	0					
ANR	700324	Identifier	dbpath		700123	0					
ANR	700325	CompoundStatement		23:29:859:859	700123	1					
ANR	700326	ExpressionStatement	"sdb_concat_by_path ( types , dbpath )"	551:2:14515:14549	700123	0	True				
ANR	700327	CallExpression	"sdb_concat_by_path ( types , dbpath )"		700123	0					
ANR	700328	Callee	sdb_concat_by_path		700123	0					
ANR	700329	Identifier	sdb_concat_by_path		700123	0					
ANR	700330	ArgumentList	types		700123	1					
ANR	700331	Argument	types		700123	0					
ANR	700332	Identifier	types		700123	0					
ANR	700333	Argument	dbpath		700123	1					
ANR	700334	Identifier	dbpath		700123	0					
ANR	700335	ExpressionStatement	"dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%d.sdb"" ) , dir_prefix , bits )"	553:1:14555:14647	700123	13	True				
ANR	700336	AssignmentExpression	"dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%d.sdb"" ) , dir_prefix , bits )"		700123	0		=			
ANR	700337	Identifier	dbpath		700123	0					
ANR	700338	CallExpression	"sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%d.sdb"" ) , dir_prefix , bits )"		700123	1					
ANR	700339	Callee	sdb_fmt		700123	0					
ANR	700340	Identifier	sdb_fmt		700123	0					
ANR	700341	ArgumentList	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%d.sdb"" )"		700123	1					
ANR	700342	Argument	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%d.sdb"" )"		700123	0					
ANR	700343	CallExpression	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%d.sdb"" )"		700123	0					
ANR	700344	Callee	R_JOIN_3_PATHS		700123	0					
ANR	700345	Identifier	R_JOIN_3_PATHS		700123	0					
ANR	700346	ArgumentList	"""%s"""		700123	1					
ANR	700347	Argument	"""%s"""		700123	0					
ANR	700348	PrimaryExpression	"""%s"""		700123	0					
ANR	700349	Argument	R2_SDB_FCNSIGN		700123	1					
ANR	700350	Identifier	R2_SDB_FCNSIGN		700123	0					
ANR	700351	Argument	"""types-%d.sdb"""		700123	2					
ANR	700352	PrimaryExpression	"""types-%d.sdb"""		700123	0					
ANR	700353	Argument	dir_prefix		700123	1					
ANR	700354	Identifier	dir_prefix		700123	0					
ANR	700355	Argument	bits		700123	2					
ANR	700356	Identifier	bits		700123	0					
ANR	700357	IfStatement	if ( r_file_exists ( dbpath ) )		700123	14					
ANR	700358	Condition	r_file_exists ( dbpath )	555:5:14654:14675	700123	0	True				
ANR	700359	CallExpression	r_file_exists ( dbpath )		700123	0					
ANR	700360	Callee	r_file_exists		700123	0					
ANR	700361	Identifier	r_file_exists		700123	0					
ANR	700362	ArgumentList	dbpath		700123	1					
ANR	700363	Argument	dbpath		700123	0					
ANR	700364	Identifier	dbpath		700123	0					
ANR	700365	CompoundStatement		28:29:1026:1026	700123	1					
ANR	700366	ExpressionStatement	"sdb_concat_by_path ( types , dbpath )"	556:2:14682:14716	700123	0	True				
ANR	700367	CallExpression	"sdb_concat_by_path ( types , dbpath )"		700123	0					
ANR	700368	Callee	sdb_concat_by_path		700123	0					
ANR	700369	Identifier	sdb_concat_by_path		700123	0					
ANR	700370	ArgumentList	types		700123	1					
ANR	700371	Argument	types		700123	0					
ANR	700372	Identifier	types		700123	0					
ANR	700373	Argument	dbpath		700123	1					
ANR	700374	Identifier	dbpath		700123	0					
ANR	700375	ExpressionStatement	"dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%d.sdb"" ) , dir_prefix , os , bits )"	558:1:14722:14821	700123	15	True				
ANR	700376	AssignmentExpression	"dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%d.sdb"" ) , dir_prefix , os , bits )"		700123	0		=			
ANR	700377	Identifier	dbpath		700123	0					
ANR	700378	CallExpression	"sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%d.sdb"" ) , dir_prefix , os , bits )"		700123	1					
ANR	700379	Callee	sdb_fmt		700123	0					
ANR	700380	Identifier	sdb_fmt		700123	0					
ANR	700381	ArgumentList	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%d.sdb"" )"		700123	1					
ANR	700382	Argument	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%d.sdb"" )"		700123	0					
ANR	700383	CallExpression	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%d.sdb"" )"		700123	0					
ANR	700384	Callee	R_JOIN_3_PATHS		700123	0					
ANR	700385	Identifier	R_JOIN_3_PATHS		700123	0					
ANR	700386	ArgumentList	"""%s"""		700123	1					
ANR	700387	Argument	"""%s"""		700123	0					
ANR	700388	PrimaryExpression	"""%s"""		700123	0					
ANR	700389	Argument	R2_SDB_FCNSIGN		700123	1					
ANR	700390	Identifier	R2_SDB_FCNSIGN		700123	0					
ANR	700391	Argument	"""types-%s-%d.sdb"""		700123	2					
ANR	700392	PrimaryExpression	"""types-%s-%d.sdb"""		700123	0					
ANR	700393	Argument	dir_prefix		700123	1					
ANR	700394	Identifier	dir_prefix		700123	0					
ANR	700395	Argument	os		700123	2					
ANR	700396	Identifier	os		700123	0					
ANR	700397	Argument	bits		700123	3					
ANR	700398	Identifier	bits		700123	0					
ANR	700399	IfStatement	if ( r_file_exists ( dbpath ) )		700123	16					
ANR	700400	Condition	r_file_exists ( dbpath )	560:5:14828:14849	700123	0	True				
ANR	700401	CallExpression	r_file_exists ( dbpath )		700123	0					
ANR	700402	Callee	r_file_exists		700123	0					
ANR	700403	Identifier	r_file_exists		700123	0					
ANR	700404	ArgumentList	dbpath		700123	1					
ANR	700405	Argument	dbpath		700123	0					
ANR	700406	Identifier	dbpath		700123	0					
ANR	700407	CompoundStatement		33:29:1200:1200	700123	1					
ANR	700408	ExpressionStatement	"sdb_concat_by_path ( types , dbpath )"	561:2:14856:14890	700123	0	True				
ANR	700409	CallExpression	"sdb_concat_by_path ( types , dbpath )"		700123	0					
ANR	700410	Callee	sdb_concat_by_path		700123	0					
ANR	700411	Identifier	sdb_concat_by_path		700123	0					
ANR	700412	ArgumentList	types		700123	1					
ANR	700413	Argument	types		700123	0					
ANR	700414	Identifier	types		700123	0					
ANR	700415	Argument	dbpath		700123	1					
ANR	700416	Identifier	dbpath		700123	0					
ANR	700417	ExpressionStatement	"dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%d.sdb"" ) , dir_prefix , anal_arch , bits )"	563:1:14896:15002	700123	17	True				
ANR	700418	AssignmentExpression	"dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%d.sdb"" ) , dir_prefix , anal_arch , bits )"		700123	0		=			
ANR	700419	Identifier	dbpath		700123	0					
ANR	700420	CallExpression	"sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%d.sdb"" ) , dir_prefix , anal_arch , bits )"		700123	1					
ANR	700421	Callee	sdb_fmt		700123	0					
ANR	700422	Identifier	sdb_fmt		700123	0					
ANR	700423	ArgumentList	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%d.sdb"" )"		700123	1					
ANR	700424	Argument	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%d.sdb"" )"		700123	0					
ANR	700425	CallExpression	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%d.sdb"" )"		700123	0					
ANR	700426	Callee	R_JOIN_3_PATHS		700123	0					
ANR	700427	Identifier	R_JOIN_3_PATHS		700123	0					
ANR	700428	ArgumentList	"""%s"""		700123	1					
ANR	700429	Argument	"""%s"""		700123	0					
ANR	700430	PrimaryExpression	"""%s"""		700123	0					
ANR	700431	Argument	R2_SDB_FCNSIGN		700123	1					
ANR	700432	Identifier	R2_SDB_FCNSIGN		700123	0					
ANR	700433	Argument	"""types-%s-%d.sdb"""		700123	2					
ANR	700434	PrimaryExpression	"""types-%s-%d.sdb"""		700123	0					
ANR	700435	Argument	dir_prefix		700123	1					
ANR	700436	Identifier	dir_prefix		700123	0					
ANR	700437	Argument	anal_arch		700123	2					
ANR	700438	Identifier	anal_arch		700123	0					
ANR	700439	Argument	bits		700123	3					
ANR	700440	Identifier	bits		700123	0					
ANR	700441	IfStatement	if ( r_file_exists ( dbpath ) )		700123	18					
ANR	700442	Condition	r_file_exists ( dbpath )	565:5:15009:15030	700123	0	True				
ANR	700443	CallExpression	r_file_exists ( dbpath )		700123	0					
ANR	700444	Callee	r_file_exists		700123	0					
ANR	700445	Identifier	r_file_exists		700123	0					
ANR	700446	ArgumentList	dbpath		700123	1					
ANR	700447	Argument	dbpath		700123	0					
ANR	700448	Identifier	dbpath		700123	0					
ANR	700449	CompoundStatement		38:29:1381:1381	700123	1					
ANR	700450	ExpressionStatement	"sdb_concat_by_path ( types , dbpath )"	566:2:15037:15071	700123	0	True				
ANR	700451	CallExpression	"sdb_concat_by_path ( types , dbpath )"		700123	0					
ANR	700452	Callee	sdb_concat_by_path		700123	0					
ANR	700453	Identifier	sdb_concat_by_path		700123	0					
ANR	700454	ArgumentList	types		700123	1					
ANR	700455	Argument	types		700123	0					
ANR	700456	Identifier	types		700123	0					
ANR	700457	Argument	dbpath		700123	1					
ANR	700458	Identifier	dbpath		700123	0					
ANR	700459	ExpressionStatement	"dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%s.sdb"" ) , dir_prefix , anal_arch , os )"	568:1:15077:15181	700123	19	True				
ANR	700460	AssignmentExpression	"dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%s.sdb"" ) , dir_prefix , anal_arch , os )"		700123	0		=			
ANR	700461	Identifier	dbpath		700123	0					
ANR	700462	CallExpression	"sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%s.sdb"" ) , dir_prefix , anal_arch , os )"		700123	1					
ANR	700463	Callee	sdb_fmt		700123	0					
ANR	700464	Identifier	sdb_fmt		700123	0					
ANR	700465	ArgumentList	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%s.sdb"" )"		700123	1					
ANR	700466	Argument	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%s.sdb"" )"		700123	0					
ANR	700467	CallExpression	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%s.sdb"" )"		700123	0					
ANR	700468	Callee	R_JOIN_3_PATHS		700123	0					
ANR	700469	Identifier	R_JOIN_3_PATHS		700123	0					
ANR	700470	ArgumentList	"""%s"""		700123	1					
ANR	700471	Argument	"""%s"""		700123	0					
ANR	700472	PrimaryExpression	"""%s"""		700123	0					
ANR	700473	Argument	R2_SDB_FCNSIGN		700123	1					
ANR	700474	Identifier	R2_SDB_FCNSIGN		700123	0					
ANR	700475	Argument	"""types-%s-%s.sdb"""		700123	2					
ANR	700476	PrimaryExpression	"""types-%s-%s.sdb"""		700123	0					
ANR	700477	Argument	dir_prefix		700123	1					
ANR	700478	Identifier	dir_prefix		700123	0					
ANR	700479	Argument	anal_arch		700123	2					
ANR	700480	Identifier	anal_arch		700123	0					
ANR	700481	Argument	os		700123	3					
ANR	700482	Identifier	os		700123	0					
ANR	700483	IfStatement	if ( r_file_exists ( dbpath ) )		700123	20					
ANR	700484	Condition	r_file_exists ( dbpath )	570:5:15188:15209	700123	0	True				
ANR	700485	CallExpression	r_file_exists ( dbpath )		700123	0					
ANR	700486	Callee	r_file_exists		700123	0					
ANR	700487	Identifier	r_file_exists		700123	0					
ANR	700488	ArgumentList	dbpath		700123	1					
ANR	700489	Argument	dbpath		700123	0					
ANR	700490	Identifier	dbpath		700123	0					
ANR	700491	CompoundStatement		43:29:1560:1560	700123	1					
ANR	700492	ExpressionStatement	"sdb_concat_by_path ( types , dbpath )"	571:2:15216:15250	700123	0	True				
ANR	700493	CallExpression	"sdb_concat_by_path ( types , dbpath )"		700123	0					
ANR	700494	Callee	sdb_concat_by_path		700123	0					
ANR	700495	Identifier	sdb_concat_by_path		700123	0					
ANR	700496	ArgumentList	types		700123	1					
ANR	700497	Argument	types		700123	0					
ANR	700498	Identifier	types		700123	0					
ANR	700499	Argument	dbpath		700123	1					
ANR	700500	Identifier	dbpath		700123	0					
ANR	700501	ExpressionStatement	"dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%s-%d.sdb"" ) , dir_prefix , anal_arch , os , bits )"	573:1:15256:15369	700123	21	True				
ANR	700502	AssignmentExpression	"dbpath = sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%s-%d.sdb"" ) , dir_prefix , anal_arch , os , bits )"		700123	0		=			
ANR	700503	Identifier	dbpath		700123	0					
ANR	700504	CallExpression	"sdb_fmt ( R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%s-%d.sdb"" ) , dir_prefix , anal_arch , os , bits )"		700123	1					
ANR	700505	Callee	sdb_fmt		700123	0					
ANR	700506	Identifier	sdb_fmt		700123	0					
ANR	700507	ArgumentList	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%s-%d.sdb"" )"		700123	1					
ANR	700508	Argument	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%s-%d.sdb"" )"		700123	0					
ANR	700509	CallExpression	"R_JOIN_3_PATHS ( ""%s"" , R2_SDB_FCNSIGN , ""types-%s-%s-%d.sdb"" )"		700123	0					
ANR	700510	Callee	R_JOIN_3_PATHS		700123	0					
ANR	700511	Identifier	R_JOIN_3_PATHS		700123	0					
ANR	700512	ArgumentList	"""%s"""		700123	1					
ANR	700513	Argument	"""%s"""		700123	0					
ANR	700514	PrimaryExpression	"""%s"""		700123	0					
ANR	700515	Argument	R2_SDB_FCNSIGN		700123	1					
ANR	700516	Identifier	R2_SDB_FCNSIGN		700123	0					
ANR	700517	Argument	"""types-%s-%s-%d.sdb"""		700123	2					
ANR	700518	PrimaryExpression	"""types-%s-%s-%d.sdb"""		700123	0					
ANR	700519	Argument	dir_prefix		700123	1					
ANR	700520	Identifier	dir_prefix		700123	0					
ANR	700521	Argument	anal_arch		700123	2					
ANR	700522	Identifier	anal_arch		700123	0					
ANR	700523	Argument	os		700123	3					
ANR	700524	Identifier	os		700123	0					
ANR	700525	Argument	bits		700123	4					
ANR	700526	Identifier	bits		700123	0					
ANR	700527	IfStatement	if ( r_file_exists ( dbpath ) )		700123	22					
ANR	700528	Condition	r_file_exists ( dbpath )	575:5:15376:15397	700123	0	True				
ANR	700529	CallExpression	r_file_exists ( dbpath )		700123	0					
ANR	700530	Callee	r_file_exists		700123	0					
ANR	700531	Identifier	r_file_exists		700123	0					
ANR	700532	ArgumentList	dbpath		700123	1					
ANR	700533	Argument	dbpath		700123	0					
ANR	700534	Identifier	dbpath		700123	0					
ANR	700535	CompoundStatement		48:29:1748:1748	700123	1					
ANR	700536	ExpressionStatement	"sdb_concat_by_path ( types , dbpath )"	576:2:15404:15438	700123	0	True				
ANR	700537	CallExpression	"sdb_concat_by_path ( types , dbpath )"		700123	0					
ANR	700538	Callee	sdb_concat_by_path		700123	0					
ANR	700539	Identifier	sdb_concat_by_path		700123	0					
ANR	700540	ArgumentList	types		700123	1					
ANR	700541	Argument	types		700123	0					
ANR	700542	Identifier	types		700123	0					
ANR	700543	Argument	dbpath		700123	1					
ANR	700544	Identifier	dbpath		700123	0					
ANR	700545	ReturnType	R_API void		700123	1					
ANR	700546	Identifier	r_core_anal_type_init		700123	2					
ANR	700547	ParameterList	RCore * core		700123	3					
ANR	700548	Parameter	RCore * core	528:33:13638:13648	700123	0	True				
ANR	700549	ParameterType	RCore *		700123	0					
ANR	700550	Identifier	core		700123	1					
ANR	700551	CFGEntryNode	ENTRY		700123		True				
ANR	700552	CFGExitNode	EXIT		700123		True				
ANR	700553	Symbol	core -> config		700123						
ANR	700554	Symbol	types		700123						
ANR	700555	Symbol	anal_arch		700123						
ANR	700556	Symbol	os		700123						
ANR	700557	Symbol	R2_SDB_FCNSIGN		700123						
ANR	700558	Symbol	* core		700123						
ANR	700559	Symbol	dir_prefix		700123						
ANR	700560	Symbol	r_config_get		700123						
ANR	700561	Symbol	bits		700123						
ANR	700562	Symbol	core -> assembler -> bits		700123						
ANR	700563	Symbol	R_JOIN_3_PATHS		700123						
ANR	700564	Symbol	core -> assembler		700123						
ANR	700565	Symbol	core -> anal -> sdb_types		700123						
ANR	700566	Symbol	core -> anal		700123						
ANR	700567	Symbol	* core -> assembler		700123						
ANR	700568	Symbol	core		700123						
ANR	700569	Symbol	* core -> anal		700123						
ANR	700570	Symbol	dbpath		700123						
ANR	700571	Symbol	sdb_fmt		700123						
ANR	700572	Symbol	r_file_exists		700123						
ANR	700573	Symbol	* * core		700123						
ANR	700574	Function	save_ptr	580:0:15446:15774							
ANR	700575	FunctionDef	"save_ptr (void * p , const char * k , const char * v)"		700574	0					
ANR	700576	CompoundStatement		580:59:15505:15774	700574	0					
ANR	700577	IdentifierDeclStatement	Sdb * sdbs [ 2 ] ;	581:1:15508:15520	700574	0	True				
ANR	700578	IdentifierDecl	* sdbs [ 2 ]		700574	0					
ANR	700579	IdentifierDeclType	Sdb * [ 2 ]		700574	0					
ANR	700580	Identifier	sdbs		700574	1					
ANR	700581	PrimaryExpression	2		700574	2					
ANR	700582	ExpressionStatement	sdbs [ 0 ] = ( ( Sdb * * ) p ) [ 0 ]	582:1:15523:15547	700574	1	True				
ANR	700583	AssignmentExpression	sdbs [ 0 ] = ( ( Sdb * * ) p ) [ 0 ]		700574	0		=			
ANR	700584	ArrayIndexing	sdbs [ 0 ]		700574	0					
ANR	700585	Identifier	sdbs		700574	0					
ANR	700586	PrimaryExpression	0		700574	1					
ANR	700587	ArrayIndexing	( ( Sdb * * ) p ) [ 0 ]		700574	1					
ANR	700588	CastExpression	( Sdb * * ) p		700574	0					
ANR	700589	CastTarget	Sdb * *		700574	0					
ANR	700590	Identifier	p		700574	1					
ANR	700591	PrimaryExpression	0		700574	1					
ANR	700592	ExpressionStatement	sdbs [ 1 ] = ( ( Sdb * * ) p ) [ 1 ]	583:1:15550:15574	700574	2	True				
ANR	700593	AssignmentExpression	sdbs [ 1 ] = ( ( Sdb * * ) p ) [ 1 ]		700574	0		=			
ANR	700594	ArrayIndexing	sdbs [ 1 ]		700574	0					
ANR	700595	Identifier	sdbs		700574	0					
ANR	700596	PrimaryExpression	1		700574	1					
ANR	700597	ArrayIndexing	( ( Sdb * * ) p ) [ 1 ]		700574	1					
ANR	700598	CastExpression	( Sdb * * ) p		700574	0					
ANR	700599	CastTarget	Sdb * *		700574	0					
ANR	700600	Identifier	p		700574	1					
ANR	700601	PrimaryExpression	1		700574	1					
ANR	700602	IfStatement	"if ( ! strncmp ( v , ""cc"" , strlen ( ""cc"" ) + 1 ) )"		700574	3					
ANR	700603	Condition	"! strncmp ( v , ""cc"" , strlen ( ""cc"" ) + 1 )"	584:5:15581:15617	700574	0	True				
ANR	700604	UnaryOperationExpression	"! strncmp ( v , ""cc"" , strlen ( ""cc"" ) + 1 )"		700574	0					
ANR	700605	UnaryOperator	!		700574	0					
ANR	700606	CallExpression	"strncmp ( v , ""cc"" , strlen ( ""cc"" ) + 1 )"		700574	1					
ANR	700607	Callee	strncmp		700574	0					
ANR	700608	Identifier	strncmp		700574	0					
ANR	700609	ArgumentList	v		700574	1					
ANR	700610	Argument	v		700574	0					
ANR	700611	Identifier	v		700574	0					
ANR	700612	Argument	"""cc"""		700574	1					
ANR	700613	PrimaryExpression	"""cc"""		700574	0					
ANR	700614	Argument	"strlen ( ""cc"" ) + 1"		700574	2					
ANR	700615	AdditiveExpression	"strlen ( ""cc"" ) + 1"		700574	0		+			
ANR	700616	CallExpression	"strlen ( ""cc"" )"		700574	0					
ANR	700617	Callee	strlen		700574	0					
ANR	700618	Identifier	strlen		700574	0					
ANR	700619	ArgumentList	"""cc"""		700574	1					
ANR	700620	Argument	"""cc"""		700574	0					
ANR	700621	PrimaryExpression	"""cc"""		700574	0					
ANR	700622	PrimaryExpression	1		700574	1					
ANR	700623	CompoundStatement		7:2:191:220	700574	1					
ANR	700624	IdentifierDeclStatement	"const char * x = sdb_const_get ( sdbs [ 1 ] , sdb_fmt ( ""cc.%s.name"" , k ) , 0 ) ;"	585:2:15624:15693	700574	0	True				
ANR	700625	IdentifierDecl	"* x = sdb_const_get ( sdbs [ 1 ] , sdb_fmt ( ""cc.%s.name"" , k ) , 0 )"		700574	0					
ANR	700626	IdentifierDeclType	const char *		700574	0					
ANR	700627	Identifier	x		700574	1					
ANR	700628	AssignmentExpression	"* x = sdb_const_get ( sdbs [ 1 ] , sdb_fmt ( ""cc.%s.name"" , k ) , 0 )"		700574	2		=			
ANR	700629	Identifier	x		700574	0					
ANR	700630	CallExpression	"sdb_const_get ( sdbs [ 1 ] , sdb_fmt ( ""cc.%s.name"" , k ) , 0 )"		700574	1					
ANR	700631	Callee	sdb_const_get		700574	0					
ANR	700632	Identifier	sdb_const_get		700574	0					
ANR	700633	ArgumentList	sdbs [ 1 ]		700574	1					
ANR	700634	Argument	sdbs [ 1 ]		700574	0					
ANR	700635	ArrayIndexing	sdbs [ 1 ]		700574	0					
ANR	700636	Identifier	sdbs		700574	0					
ANR	700637	PrimaryExpression	1		700574	1					
ANR	700638	Argument	"sdb_fmt ( ""cc.%s.name"" , k )"		700574	1					
ANR	700639	CallExpression	"sdb_fmt ( ""cc.%s.name"" , k )"		700574	0					
ANR	700640	Callee	sdb_fmt		700574	0					
ANR	700641	Identifier	sdb_fmt		700574	0					
ANR	700642	ArgumentList	"""cc.%s.name"""		700574	1					
ANR	700643	Argument	"""cc.%s.name"""		700574	0					
ANR	700644	PrimaryExpression	"""cc.%s.name"""		700574	0					
ANR	700645	Argument	k		700574	1					
ANR	700646	Identifier	k		700574	0					
ANR	700647	Argument	0		700574	2					
ANR	700648	PrimaryExpression	0		700574	0					
ANR	700649	IdentifierDeclStatement	"char * tmp = sdb_fmt ( ""%p"" , x ) ;"	586:2:15697:15726	700574	1	True				
ANR	700650	IdentifierDecl	"* tmp = sdb_fmt ( ""%p"" , x )"		700574	0					
ANR	700651	IdentifierDeclType	char *		700574	0					
ANR	700652	Identifier	tmp		700574	1					
ANR	700653	AssignmentExpression	"* tmp = sdb_fmt ( ""%p"" , x )"		700574	2		=			
ANR	700654	Identifier	tmp		700574	0					
ANR	700655	CallExpression	"sdb_fmt ( ""%p"" , x )"		700574	1					
ANR	700656	Callee	sdb_fmt		700574	0					
ANR	700657	Identifier	sdb_fmt		700574	0					
ANR	700658	ArgumentList	"""%p"""		700574	1					
ANR	700659	Argument	"""%p"""		700574	0					
ANR	700660	PrimaryExpression	"""%p"""		700574	0					
ANR	700661	Argument	x		700574	1					
ANR	700662	Identifier	x		700574	0					
ANR	700663	ExpressionStatement	"sdb_set ( sdbs [ 0 ] , tmp , x , 0 )"	587:2:15730:15758	700574	2	True				
ANR	700664	CallExpression	"sdb_set ( sdbs [ 0 ] , tmp , x , 0 )"		700574	0					
ANR	700665	Callee	sdb_set		700574	0					
ANR	700666	Identifier	sdb_set		700574	0					
ANR	700667	ArgumentList	sdbs [ 0 ]		700574	1					
ANR	700668	Argument	sdbs [ 0 ]		700574	0					
ANR	700669	ArrayIndexing	sdbs [ 0 ]		700574	0					
ANR	700670	Identifier	sdbs		700574	0					
ANR	700671	PrimaryExpression	0		700574	1					
ANR	700672	Argument	tmp		700574	1					
ANR	700673	Identifier	tmp		700574	0					
ANR	700674	Argument	x		700574	2					
ANR	700675	Identifier	x		700574	0					
ANR	700676	Argument	0		700574	3					
ANR	700677	PrimaryExpression	0		700574	0					
ANR	700678	ReturnStatement	return 1 ;	589:1:15764:15772	700574	4	True				
ANR	700679	PrimaryExpression	1		700574	0					
ANR	700680	ReturnType	static int		700574	1					
ANR	700681	Identifier	save_ptr		700574	2					
ANR	700682	ParameterList	"void * p , const char * k , const char * v"		700574	3					
ANR	700683	Parameter	void * p	580:20:15466:15472	700574	0	True				
ANR	700684	ParameterType	void *		700574	0					
ANR	700685	Identifier	p		700574	1					
ANR	700686	Parameter	const char * k	580:29:15475:15487	700574	1	True				
ANR	700687	ParameterType	const char *		700574	0					
ANR	700688	Identifier	k		700574	1					
ANR	700689	Parameter	const char * v	580:44:15490:15502	700574	2	True				
ANR	700690	ParameterType	const char *		700574	0					
ANR	700691	Identifier	v		700574	1					
ANR	700692	CFGEntryNode	ENTRY		700574		True				
ANR	700693	CFGExitNode	EXIT		700574		True				
ANR	700694	Symbol	p		700574						
ANR	700695	Symbol	strlen		700574						
ANR	700696	Symbol	strncmp		700574						
ANR	700697	Symbol	v		700574						
ANR	700698	Symbol	tmp		700574						
ANR	700699	Symbol	sdbs		700574						
ANR	700700	Symbol	x		700574						
ANR	700701	Symbol	* p		700574						
ANR	700702	Symbol	k		700574						
ANR	700703	Symbol	* sdbs		700574						
ANR	700704	Symbol	sdb_const_get		700574						
ANR	700705	Symbol	sdb_fmt		700574						
ANR	700706	Function	r_core_anal_cc_init	592:0:15777:16943							
ANR	700707	FunctionDef	r_core_anal_cc_init (RCore * core)		700706	0					
ANR	700708	CompoundStatement		592:44:15821:16943	700706	0					
ANR	700709	IdentifierDeclStatement	"Sdb * sdbs [ 2 ] = { sdb_new0 ( ) , core -> anal -> sdb_cc } ;"	593:1:15824:15879	700706	0	True				
ANR	700710	IdentifierDecl	"* sdbs [ 2 ] = { sdb_new0 ( ) , core -> anal -> sdb_cc }"		700706	0					
ANR	700711	IdentifierDeclType	Sdb * [ 2 ]		700706	0					
ANR	700712	Identifier	sdbs		700706	1					
ANR	700713	PrimaryExpression	2		700706	2					
ANR	700714	AssignmentExpression	"* sdbs [ 2 ] = { sdb_new0 ( ) , core -> anal -> sdb_cc }"		700706	3		=			
ANR	700715	Identifier	sdbs		700706	0					
ANR	700716	InitializerList	sdb_new0 ( )		700706	1					
ANR	700717	CallExpression	sdb_new0 ( )		700706	0					
ANR	700718	Callee	sdb_new0		700706	0					
ANR	700719	Identifier	sdb_new0		700706	0					
ANR	700720	ArgumentList			700706	1					
ANR	700721	PtrMemberAccess	core -> anal -> sdb_cc		700706	1					
ANR	700722	PtrMemberAccess	core -> anal		700706	0					
ANR	700723	Identifier	core		700706	0					
ANR	700724	Identifier	anal		700706	1					
ANR	700725	Identifier	sdb_cc		700706	1					
ANR	700726	IdentifierDeclStatement	"const char * dir_prefix = r_config_get ( core -> config , ""dir.prefix"" ) ;"	597:1:15882:15948	700706	1	True				
ANR	700727	IdentifierDecl	"* dir_prefix = r_config_get ( core -> config , ""dir.prefix"" )"		700706	0					
ANR	700728	IdentifierDeclType	const char *		700706	0					
ANR	700729	Identifier	dir_prefix		700706	1					
ANR	700730	AssignmentExpression	"* dir_prefix = r_config_get ( core -> config , ""dir.prefix"" )"		700706	2		=			
ANR	700731	Identifier	dir_prefix		700706	0					
ANR	700732	CallExpression	"r_config_get ( core -> config , ""dir.prefix"" )"		700706	1					
ANR	700733	Callee	r_config_get		700706	0					
ANR	700734	Identifier	r_config_get		700706	0					
ANR	700735	ArgumentList	core -> config		700706	1					
ANR	700736	Argument	core -> config		700706	0					
ANR	700737	PtrMemberAccess	core -> config		700706	0					
ANR	700738	Identifier	core		700706	0					
ANR	700739	Identifier	config		700706	1					
ANR	700740	Argument	"""dir.prefix"""		700706	1					
ANR	700741	PrimaryExpression	"""dir.prefix"""		700706	0					
ANR	700742	IdentifierDeclStatement	"const char * defaultcc = sdb_const_get ( sdbs [ 1 ] , ""default.cc"" , 0 ) ;"	600:1:16031:16095	700706	2	True				
ANR	700743	IdentifierDecl	"* defaultcc = sdb_const_get ( sdbs [ 1 ] , ""default.cc"" , 0 )"		700706	0					
ANR	700744	IdentifierDeclType	const char *		700706	0					
ANR	700745	Identifier	defaultcc		700706	1					
ANR	700746	AssignmentExpression	"* defaultcc = sdb_const_get ( sdbs [ 1 ] , ""default.cc"" , 0 )"		700706	2		=			
ANR	700747	Identifier	defaultcc		700706	0					
ANR	700748	CallExpression	"sdb_const_get ( sdbs [ 1 ] , ""default.cc"" , 0 )"		700706	1					
ANR	700749	Callee	sdb_const_get		700706	0					
ANR	700750	Identifier	sdb_const_get		700706	0					
ANR	700751	ArgumentList	sdbs [ 1 ]		700706	1					
ANR	700752	Argument	sdbs [ 1 ]		700706	0					
ANR	700753	ArrayIndexing	sdbs [ 1 ]		700706	0					
ANR	700754	Identifier	sdbs		700706	0					
ANR	700755	PrimaryExpression	1		700706	1					
ANR	700756	Argument	"""default.cc"""		700706	1					
ANR	700757	PrimaryExpression	"""default.cc"""		700706	0					
ANR	700758	Argument	0		700706	2					
ANR	700759	PrimaryExpression	0		700706	0					
ANR	700760	Statement	sdb_set	601:1:16098:16104	700706	3	True				
ANR	700761	Statement	(	601:9:16106:16106	700706	4	True				
ANR	700762	Statement	sdbs	601:10:16107:16110	700706	5	True				
ANR	700763	Statement	[	601:14:16111:16111	700706	6	True				
ANR	700764	Statement	0	601:15:16112:16112	700706	7	True				
ANR	700765	Statement	]	601:16:16113:16113	700706	8	True				
ANR	700766	Statement	","	601:17:16114:16114	700706	9	True				
ANR	700767	Statement	sdb_fmt	601:19:16116:16122	700706	10	True				
ANR	700768	Statement	(	601:27:16124:16124	700706	11	True				
ANR	700769	Statement	"""0x%08"""	601:28:16125:16131	700706	12	True				
ANR	700770	Statement	PFMT64x	601:35:16132:16138	700706	13	True				
ANR	700771	Statement	","	601:42:16139:16139	700706	14	True				
ANR	700772	Statement	r_num_get	601:44:16141:16149	700706	15	True				
ANR	700773	Statement	(	601:54:16151:16151	700706	16	True				
ANR	700774	Statement	NULL	601:55:16152:16155	700706	17	True				
ANR	700775	Statement	","	601:59:16156:16156	700706	18	True				
ANR	700776	Statement	defaultcc	601:61:16158:16166	700706	19	True				
ANR	700777	Statement	)	601:70:16167:16167	700706	20	True				
ANR	700778	Statement	)	601:71:16168:16168	700706	21	True				
ANR	700779	Statement	","	601:72:16169:16169	700706	22	True				
ANR	700780	Statement	defaultcc	601:74:16171:16179	700706	23	True				
ANR	700781	Statement	","	601:83:16180:16180	700706	24	True				
ANR	700782	Statement	0	601:85:16182:16182	700706	25	True				
ANR	700783	Statement	)	601:86:16183:16183	700706	26	True				
ANR	700784	ExpressionStatement		601:87:16184:16184	700706	27	True				
ANR	700785	ExpressionStatement	"sdb_foreach ( core -> anal -> sdb_cc , save_ptr , sdbs )"	602:1:16187:16235	700706	28	True				
ANR	700786	CallExpression	"sdb_foreach ( core -> anal -> sdb_cc , save_ptr , sdbs )"		700706	0					
ANR	700787	Callee	sdb_foreach		700706	0					
ANR	700788	Identifier	sdb_foreach		700706	0					
ANR	700789	ArgumentList	core -> anal -> sdb_cc		700706	1					
ANR	700790	Argument	core -> anal -> sdb_cc		700706	0					
ANR	700791	PtrMemberAccess	core -> anal -> sdb_cc		700706	0					
ANR	700792	PtrMemberAccess	core -> anal		700706	0					
ANR	700793	Identifier	core		700706	0					
ANR	700794	Identifier	anal		700706	1					
ANR	700795	Identifier	sdb_cc		700706	1					
ANR	700796	Argument	save_ptr		700706	1					
ANR	700797	Identifier	save_ptr		700706	0					
ANR	700798	Argument	sdbs		700706	2					
ANR	700799	Identifier	sdbs		700706	0					
ANR	700800	ExpressionStatement	sdb_reset ( core -> anal -> sdb_cc )	603:1:16238:16268	700706	29	True				
ANR	700801	CallExpression	sdb_reset ( core -> anal -> sdb_cc )		700706	0					
ANR	700802	Callee	sdb_reset		700706	0					
ANR	700803	Identifier	sdb_reset		700706	0					
ANR	700804	ArgumentList	core -> anal -> sdb_cc		700706	1					
ANR	700805	Argument	core -> anal -> sdb_cc		700706	0					
ANR	700806	PtrMemberAccess	core -> anal -> sdb_cc		700706	0					
ANR	700807	PtrMemberAccess	core -> anal		700706	0					
ANR	700808	Identifier	core		700706	0					
ANR	700809	Identifier	anal		700706	1					
ANR	700810	Identifier	sdb_cc		700706	1					
ANR	700811	IdentifierDeclStatement	"const char * anal_arch = r_config_get ( core -> config , ""anal.arch"" ) ;"	604:1:16271:16335	700706	30	True				
ANR	700812	IdentifierDecl	"* anal_arch = r_config_get ( core -> config , ""anal.arch"" )"		700706	0					
ANR	700813	IdentifierDeclType	const char *		700706	0					
ANR	700814	Identifier	anal_arch		700706	1					
ANR	700815	AssignmentExpression	"* anal_arch = r_config_get ( core -> config , ""anal.arch"" )"		700706	2		=			
ANR	700816	Identifier	anal_arch		700706	0					
ANR	700817	CallExpression	"r_config_get ( core -> config , ""anal.arch"" )"		700706	1					
ANR	700818	Callee	r_config_get		700706	0					
ANR	700819	Identifier	r_config_get		700706	0					
ANR	700820	ArgumentList	core -> config		700706	1					
ANR	700821	Argument	core -> config		700706	0					
ANR	700822	PtrMemberAccess	core -> config		700706	0					
ANR	700823	Identifier	core		700706	0					
ANR	700824	Identifier	config		700706	1					
ANR	700825	Argument	"""anal.arch"""		700706	1					
ANR	700826	PrimaryExpression	"""anal.arch"""		700706	0					
ANR	700827	IdentifierDeclStatement	int bits = core -> anal -> bits ;	606:1:16339:16366	700706	31	True				
ANR	700828	IdentifierDecl	bits = core -> anal -> bits		700706	0					
ANR	700829	IdentifierDeclType	int		700706	0					
ANR	700830	Identifier	bits		700706	1					
ANR	700831	AssignmentExpression	bits = core -> anal -> bits		700706	2		=			
ANR	700832	Identifier	bits		700706	0					
ANR	700833	PtrMemberAccess	core -> anal -> bits		700706	1					
ANR	700834	PtrMemberAccess	core -> anal		700706	0					
ANR	700835	Identifier	core		700706	0					
ANR	700836	Identifier	anal		700706	1					
ANR	700837	Identifier	bits		700706	1					
ANR	700838	Statement	char	607:1:16369:16372	700706	32	True				
ANR	700839	Statement	*	607:6:16374:16374	700706	33	True				
ANR	700840	Statement	dbpath	607:7:16375:16380	700706	34	True				
ANR	700841	Statement	=	607:14:16382:16382	700706	35	True				
ANR	700842	Statement	sdb_fmt	607:16:16384:16390	700706	36	True				
ANR	700843	Statement	(	607:24:16392:16392	700706	37	True				
ANR	700844	Statement	"""%s/"""	607:25:16393:16397	700706	38	True				
ANR	700845	Statement	R2_SDB_FCNSIGN	607:30:16398:16411	700706	39	True				
ANR	700846	Statement	"""/cc-%s-%d.sdb"""	607:44:16412:16426	700706	40	True				
ANR	700847	Statement	","	607:59:16427:16427	700706	41	True				
ANR	700848	Statement	dir_prefix	607:61:16429:16438	700706	42	True				
ANR	700849	Statement	","	607:71:16439:16439	700706	43	True				
ANR	700850	Statement	anal_arch	607:73:16441:16449	700706	44	True				
ANR	700851	Statement	","	607:82:16450:16450	700706	45	True				
ANR	700852	Statement	bits	607:84:16452:16455	700706	46	True				
ANR	700853	Statement	)	607:88:16456:16456	700706	47	True				
ANR	700854	ExpressionStatement		607:89:16457:16457	700706	48	True				
ANR	700855	IfStatement	if ( r_file_exists ( dbpath ) )		700706	49					
ANR	700856	Condition	r_file_exists ( dbpath )	608:5:16464:16485	700706	0	True				
ANR	700857	CallExpression	r_file_exists ( dbpath )		700706	0					
ANR	700858	Callee	r_file_exists		700706	0					
ANR	700859	Identifier	r_file_exists		700706	0					
ANR	700860	ArgumentList	dbpath		700706	1					
ANR	700861	Argument	dbpath		700706	0					
ANR	700862	Identifier	dbpath		700706	0					
ANR	700863	CompoundStatement		17:29:666:666	700706	1					
ANR	700864	ExpressionStatement	"sdb_concat_by_path ( core -> anal -> sdb_cc , dbpath )"	609:2:16492:16539	700706	0	True				
ANR	700865	CallExpression	"sdb_concat_by_path ( core -> anal -> sdb_cc , dbpath )"		700706	0					
ANR	700866	Callee	sdb_concat_by_path		700706	0					
ANR	700867	Identifier	sdb_concat_by_path		700706	0					
ANR	700868	ArgumentList	core -> anal -> sdb_cc		700706	1					
ANR	700869	Argument	core -> anal -> sdb_cc		700706	0					
ANR	700870	PtrMemberAccess	core -> anal -> sdb_cc		700706	0					
ANR	700871	PtrMemberAccess	core -> anal		700706	0					
ANR	700872	Identifier	core		700706	0					
ANR	700873	Identifier	anal		700706	1					
ANR	700874	Identifier	sdb_cc		700706	1					
ANR	700875	Argument	dbpath		700706	1					
ANR	700876	Identifier	dbpath		700706	0					
ANR	700877	IdentifierDeclStatement	RListIter * it ;	612:1:16600:16613	700706	50	True				
ANR	700878	IdentifierDecl	* it		700706	0					
ANR	700879	IdentifierDeclType	RListIter *		700706	0					
ANR	700880	Identifier	it		700706	1					
ANR	700881	IdentifierDeclStatement	RAnalFunction * fcn ;	613:1:16616:16634	700706	51	True				
ANR	700882	IdentifierDecl	* fcn		700706	0					
ANR	700883	IdentifierDeclType	RAnalFunction *		700706	0					
ANR	700884	Identifier	fcn		700706	1					
ANR	700885	Statement	r_list_foreach	614:1:16637:16650	700706	52	True				
ANR	700886	Statement	(	614:16:16652:16652	700706	53	True				
ANR	700887	Statement	core	614:17:16653:16656	700706	54	True				
ANR	700888	Statement	->	614:21:16657:16658	700706	55	True				
ANR	700889	Statement	anal	614:23:16659:16662	700706	56	True				
ANR	700890	Statement	->	614:27:16663:16664	700706	57	True				
ANR	700891	Statement	fcns	614:29:16665:16668	700706	58	True				
ANR	700892	Statement	","	614:33:16669:16669	700706	59	True				
ANR	700893	Statement	it	614:35:16671:16672	700706	60	True				
ANR	700894	Statement	","	614:37:16673:16673	700706	61	True				
ANR	700895	Statement	fcn	614:39:16675:16677	700706	62	True				
ANR	700896	Statement	)	614:42:16678:16678	700706	63	True				
ANR	700897	CompoundStatement		24:2:862:883	700706	64					
ANR	700898	IdentifierDeclStatement	const char * cc = NULL ;	615:2:16684:16705	700706	0	True				
ANR	700899	IdentifierDecl	* cc = NULL		700706	0					
ANR	700900	IdentifierDeclType	const char *		700706	0					
ANR	700901	Identifier	cc		700706	1					
ANR	700902	AssignmentExpression	* cc = NULL		700706	2		=			
ANR	700903	Identifier	NULL		700706	0					
ANR	700904	Identifier	NULL		700706	1					
ANR	700905	IfStatement	if ( fcn -> cc )		700706	1					
ANR	700906	Condition	fcn -> cc	616:6:16713:16719	700706	0	True				
ANR	700907	PtrMemberAccess	fcn -> cc		700706	0					
ANR	700908	Identifier	fcn		700706	0					
ANR	700909	Identifier	cc		700706	1					
ANR	700910	CompoundStatement		26:3:905:940	700706	1					
ANR	700911	IdentifierDeclStatement	"char * ptr = sdb_fmt ( ""%p"" , fcn -> cc ) ;"	617:3:16727:16762	700706	0	True				
ANR	700912	IdentifierDecl	"* ptr = sdb_fmt ( ""%p"" , fcn -> cc )"		700706	0					
ANR	700913	IdentifierDeclType	char *		700706	0					
ANR	700914	Identifier	ptr		700706	1					
ANR	700915	AssignmentExpression	"* ptr = sdb_fmt ( ""%p"" , fcn -> cc )"		700706	2		=			
ANR	700916	Identifier	ptr		700706	0					
ANR	700917	CallExpression	"sdb_fmt ( ""%p"" , fcn -> cc )"		700706	1					
ANR	700918	Callee	sdb_fmt		700706	0					
ANR	700919	Identifier	sdb_fmt		700706	0					
ANR	700920	ArgumentList	"""%p"""		700706	1					
ANR	700921	Argument	"""%p"""		700706	0					
ANR	700922	PrimaryExpression	"""%p"""		700706	0					
ANR	700923	Argument	fcn -> cc		700706	1					
ANR	700924	PtrMemberAccess	fcn -> cc		700706	0					
ANR	700925	Identifier	fcn		700706	0					
ANR	700926	Identifier	cc		700706	1					
ANR	700927	ExpressionStatement	"cc = sdb_const_get ( sdbs [ 0 ] , ptr , 0 )"	618:3:16767:16803	700706	1	True				
ANR	700928	AssignmentExpression	"cc = sdb_const_get ( sdbs [ 0 ] , ptr , 0 )"		700706	0		=			
ANR	700929	Identifier	cc		700706	0					
ANR	700930	CallExpression	"sdb_const_get ( sdbs [ 0 ] , ptr , 0 )"		700706	1					
ANR	700931	Callee	sdb_const_get		700706	0					
ANR	700932	Identifier	sdb_const_get		700706	0					
ANR	700933	ArgumentList	sdbs [ 0 ]		700706	1					
ANR	700934	Argument	sdbs [ 0 ]		700706	0					
ANR	700935	ArrayIndexing	sdbs [ 0 ]		700706	0					
ANR	700936	Identifier	sdbs		700706	0					
ANR	700937	PrimaryExpression	0		700706	1					
ANR	700938	Argument	ptr		700706	1					
ANR	700939	Identifier	ptr		700706	0					
ANR	700940	Argument	0		700706	2					
ANR	700941	PrimaryExpression	0		700706	0					
ANR	700942	IfStatement	if ( ! cc )		700706	2					
ANR	700943	Condition	! cc	620:7:16816:16818	700706	0	True				
ANR	700944	UnaryOperationExpression	! cc		700706	0					
ANR	700945	UnaryOperator	!		700706	0					
ANR	700946	Identifier	cc		700706	1					
ANR	700947	CompoundStatement		29:12:999:999	700706	1					
ANR	700948	ExpressionStatement	cc = r_anal_cc_default ( core -> anal )	621:3:16826:16861	700706	0	True				
ANR	700949	AssignmentExpression	cc = r_anal_cc_default ( core -> anal )		700706	0		=			
ANR	700950	Identifier	cc		700706	0					
ANR	700951	CallExpression	r_anal_cc_default ( core -> anal )		700706	1					
ANR	700952	Callee	r_anal_cc_default		700706	0					
ANR	700953	Identifier	r_anal_cc_default		700706	0					
ANR	700954	ArgumentList	core -> anal		700706	1					
ANR	700955	Argument	core -> anal		700706	0					
ANR	700956	PtrMemberAccess	core -> anal		700706	0					
ANR	700957	Identifier	core		700706	0					
ANR	700958	Identifier	anal		700706	1					
ANR	700959	ExpressionStatement	fcn -> cc = r_str_const ( cc )	623:2:16869:16895	700706	3	True				
ANR	700960	AssignmentExpression	fcn -> cc = r_str_const ( cc )		700706	0		=			
ANR	700961	PtrMemberAccess	fcn -> cc		700706	0					
ANR	700962	Identifier	fcn		700706	0					
ANR	700963	Identifier	cc		700706	1					
ANR	700964	CallExpression	r_str_const ( cc )		700706	1					
ANR	700965	Callee	r_str_const		700706	0					
ANR	700966	Identifier	r_str_const		700706	0					
ANR	700967	ArgumentList	cc		700706	1					
ANR	700968	Argument	cc		700706	0					
ANR	700969	Identifier	cc		700706	0					
ANR	700970	ExpressionStatement	sdb_close ( sdbs [ 0 ] )	625:1:16901:16920	700706	65	True				
ANR	700971	CallExpression	sdb_close ( sdbs [ 0 ] )		700706	0					
ANR	700972	Callee	sdb_close		700706	0					
ANR	700973	Identifier	sdb_close		700706	0					
ANR	700974	ArgumentList	sdbs [ 0 ]		700706	1					
ANR	700975	Argument	sdbs [ 0 ]		700706	0					
ANR	700976	ArrayIndexing	sdbs [ 0 ]		700706	0					
ANR	700977	Identifier	sdbs		700706	0					
ANR	700978	PrimaryExpression	0		700706	1					
ANR	700979	ExpressionStatement	sdb_free ( sdbs [ 0 ] )	626:1:16923:16941	700706	66	True				
ANR	700980	CallExpression	sdb_free ( sdbs [ 0 ] )		700706	0					
ANR	700981	Callee	sdb_free		700706	0					
ANR	700982	Identifier	sdb_free		700706	0					
ANR	700983	ArgumentList	sdbs [ 0 ]		700706	1					
ANR	700984	Argument	sdbs [ 0 ]		700706	0					
ANR	700985	ArrayIndexing	sdbs [ 0 ]		700706	0					
ANR	700986	Identifier	sdbs		700706	0					
ANR	700987	PrimaryExpression	0		700706	1					
ANR	700988	ReturnType	R_API void		700706	1					
ANR	700989	Identifier	r_core_anal_cc_init		700706	2					
ANR	700990	ParameterList	RCore * core		700706	3					
ANR	700991	Parameter	RCore * core	592:31:15808:15818	700706	0	True				
ANR	700992	ParameterType	RCore *		700706	0					
ANR	700993	Identifier	core		700706	1					
ANR	700994	CFGEntryNode	ENTRY		700706		True				
ANR	700995	CFGExitNode	EXIT		700706		True				
ANR	700996	Symbol	anal_arch		700706						
ANR	700997	Symbol	core -> anal -> sdb_cc		700706						
ANR	700998	Symbol	* fcn		700706						
ANR	700999	Symbol	* core		700706						
ANR	701000	Symbol	r_config_get		700706						
ANR	701001	Symbol	dir_prefix		700706						
ANR	701002	Symbol	core -> anal		700706						
ANR	701003	Symbol	sdb_const_get		700706						
ANR	701004	Symbol	fcn		700706						
ANR	701005	Symbol	defaultcc		700706						
ANR	701006	Symbol	sdbs		700706						
ANR	701007	Symbol	save_ptr		700706						
ANR	701008	Symbol	fcn -> cc		700706						
ANR	701009	Symbol	dbpath		700706						
ANR	701010	Symbol	sdb_fmt		700706						
ANR	701011	Symbol	* * core		700706						
ANR	701012	Symbol	core -> config		700706						
ANR	701013	Symbol	cc		700706						
ANR	701014	Symbol	r_str_const		700706						
ANR	701015	Symbol	sdb_new0		700706						
ANR	701016	Symbol	core -> anal -> bits		700706						
ANR	701017	Symbol	NULL		700706						
ANR	701018	Symbol	bits		700706						
ANR	701019	Symbol	it		700706						
ANR	701020	Symbol	ptr		700706						
ANR	701021	Symbol	r_anal_cc_default		700706						
ANR	701022	Symbol	core		700706						
ANR	701023	Symbol	* core -> anal		700706						
ANR	701024	Symbol	* sdbs		700706						
ANR	701025	Symbol	r_file_exists		700706						
ANR	701026	Function	bin_info	629:0:16946:25501							
ANR	701027	FunctionDef	"bin_info (RCore * r , int mode , ut64 laddr)"		701026	0					
ANR	701028	CompoundStatement		629:52:16998:25501	701026	0					
ANR	701029	IdentifierDeclStatement	"int i , j , v ;"	630:1:17001:17012	701026	0	True				
ANR	701030	IdentifierDecl	i		701026	0					
ANR	701031	IdentifierDeclType	int		701026	0					
ANR	701032	Identifier	i		701026	1					
ANR	701033	IdentifierDecl	j		701026	1					
ANR	701034	IdentifierDeclType	int		701026	0					
ANR	701035	Identifier	j		701026	1					
ANR	701036	IdentifierDecl	v		701026	2					
ANR	701037	IdentifierDeclType	int		701026	0					
ANR	701038	Identifier	v		701026	1					
ANR	701039	IdentifierDeclStatement	char str [ R_FLAG_NAME_SIZE ] ;	631:1:17015:17041	701026	1	True				
ANR	701040	IdentifierDecl	str [ R_FLAG_NAME_SIZE ]		701026	0					
ANR	701041	IdentifierDeclType	char [ R_FLAG_NAME_SIZE ]		701026	0					
ANR	701042	Identifier	str		701026	1					
ANR	701043	Identifier	R_FLAG_NAME_SIZE		701026	2					
ANR	701044	IdentifierDeclStatement	RBinInfo * info = r_bin_get_info ( r -> bin ) ;	632:1:17044:17084	701026	2	True				
ANR	701045	IdentifierDecl	* info = r_bin_get_info ( r -> bin )		701026	0					
ANR	701046	IdentifierDeclType	RBinInfo *		701026	0					
ANR	701047	Identifier	info		701026	1					
ANR	701048	AssignmentExpression	* info = r_bin_get_info ( r -> bin )		701026	2		=			
ANR	701049	Identifier	info		701026	0					
ANR	701050	CallExpression	r_bin_get_info ( r -> bin )		701026	1					
ANR	701051	Callee	r_bin_get_info		701026	0					
ANR	701052	Identifier	r_bin_get_info		701026	0					
ANR	701053	ArgumentList	r -> bin		701026	1					
ANR	701054	Argument	r -> bin		701026	0					
ANR	701055	PtrMemberAccess	r -> bin		701026	0					
ANR	701056	Identifier	r		701026	0					
ANR	701057	Identifier	bin		701026	1					
ANR	701058	IdentifierDeclStatement	RBinFile * bf = r_bin_cur ( r -> bin ) ;	633:1:17087:17120	701026	3	True				
ANR	701059	IdentifierDecl	* bf = r_bin_cur ( r -> bin )		701026	0					
ANR	701060	IdentifierDeclType	RBinFile *		701026	0					
ANR	701061	Identifier	bf		701026	1					
ANR	701062	AssignmentExpression	* bf = r_bin_cur ( r -> bin )		701026	2		=			
ANR	701063	Identifier	bf		701026	0					
ANR	701064	CallExpression	r_bin_cur ( r -> bin )		701026	1					
ANR	701065	Callee	r_bin_cur		701026	0					
ANR	701066	Identifier	r_bin_cur		701026	0					
ANR	701067	ArgumentList	r -> bin		701026	1					
ANR	701068	Argument	r -> bin		701026	0					
ANR	701069	PtrMemberAccess	r -> bin		701026	0					
ANR	701070	Identifier	r		701026	0					
ANR	701071	Identifier	bin		701026	1					
ANR	701072	IfStatement	if ( ! bf )		701026	4					
ANR	701073	Condition	! bf	634:5:17127:17129	701026	0	True				
ANR	701074	UnaryOperationExpression	! bf		701026	0					
ANR	701075	UnaryOperator	!		701026	0					
ANR	701076	Identifier	bf		701026	1					
ANR	701077	CompoundStatement		6:10:133:133	701026	1					
ANR	701078	ReturnStatement	return false ;	635:2:17136:17148	701026	0	True				
ANR	701079	Identifier	false		701026	0					
ANR	701080	IdentifierDeclStatement	RBinObject * obj = bf -> o ;	637:1:17154:17177	701026	5	True				
ANR	701081	IdentifierDecl	* obj = bf -> o		701026	0					
ANR	701082	IdentifierDeclType	RBinObject *		701026	0					
ANR	701083	Identifier	obj		701026	1					
ANR	701084	AssignmentExpression	* obj = bf -> o		701026	2		=			
ANR	701085	Identifier	obj		701026	0					
ANR	701086	PtrMemberAccess	bf -> o		701026	1					
ANR	701087	Identifier	bf		701026	0					
ANR	701088	Identifier	o		701026	1					
ANR	701089	IdentifierDeclStatement	const char * compiled = NULL ;	638:1:17180:17207	701026	6	True				
ANR	701090	IdentifierDecl	* compiled = NULL		701026	0					
ANR	701091	IdentifierDeclType	const char *		701026	0					
ANR	701092	Identifier	compiled		701026	1					
ANR	701093	AssignmentExpression	* compiled = NULL		701026	2		=			
ANR	701094	Identifier	NULL		701026	0					
ANR	701095	Identifier	NULL		701026	1					
ANR	701096	IdentifierDeclStatement	bool havecode ;	639:1:17210:17223	701026	7	True				
ANR	701097	IdentifierDecl	havecode		701026	0					
ANR	701098	IdentifierDeclType	bool		701026	0					
ANR	701099	Identifier	havecode		701026	1					
ANR	701100	IfStatement	if ( ! bf || ! info || ! obj )		701026	8					
ANR	701101	Condition	! bf || ! info || ! obj	641:5:17231:17250	701026	0	True				
ANR	701102	OrExpression	! bf || ! info || ! obj		701026	0		||			
ANR	701103	UnaryOperationExpression	! bf		701026	0					
ANR	701104	UnaryOperator	!		701026	0					
ANR	701105	Identifier	bf		701026	1					
ANR	701106	OrExpression	! info || ! obj		701026	1		||			
ANR	701107	UnaryOperationExpression	! info		701026	0					
ANR	701108	UnaryOperator	!		701026	0					
ANR	701109	Identifier	info		701026	1					
ANR	701110	UnaryOperationExpression	! obj		701026	1					
ANR	701111	UnaryOperator	!		701026	0					
ANR	701112	Identifier	obj		701026	1					
ANR	701113	CompoundStatement		13:27:254:254	701026	1					
ANR	701114	IfStatement	if ( mode & R_MODE_JSON )		701026	0					
ANR	701115	Condition	mode & R_MODE_JSON	642:6:17261:17278	701026	0	True				
ANR	701116	BitAndExpression	mode & R_MODE_JSON		701026	0		&			
ANR	701117	Identifier	mode		701026	0					
ANR	701118	Identifier	R_MODE_JSON		701026	1					
ANR	701119	CompoundStatement		14:26:282:282	701026	1					
ANR	701120	ExpressionStatement	"r_cons_printf ( ""{}"" )"	643:3:17286:17306	701026	0	True				
ANR	701121	CallExpression	"r_cons_printf ( ""{}"" )"		701026	0					
ANR	701122	Callee	r_cons_printf		701026	0					
ANR	701123	Identifier	r_cons_printf		701026	0					
ANR	701124	ArgumentList	"""{}"""		701026	1					
ANR	701125	Argument	"""{}"""		701026	0					
ANR	701126	PrimaryExpression	"""{}"""		701026	0					
ANR	701127	ReturnStatement	return false ;	645:2:17314:17326	701026	1	True				
ANR	701128	Identifier	false		701026	0					
ANR	701129	ExpressionStatement	havecode = is_executable ( obj ) | ( obj -> entries != NULL )	647:1:17332:17387	701026	9	True				
ANR	701130	AssignmentExpression	havecode = is_executable ( obj ) | ( obj -> entries != NULL )		701026	0		=			
ANR	701131	Identifier	havecode		701026	0					
ANR	701132	InclusiveOrExpression	is_executable ( obj ) | ( obj -> entries != NULL )		701026	1		|			
ANR	701133	CallExpression	is_executable ( obj )		701026	0					
ANR	701134	Callee	is_executable		701026	0					
ANR	701135	Identifier	is_executable		701026	0					
ANR	701136	ArgumentList	obj		701026	1					
ANR	701137	Argument	obj		701026	0					
ANR	701138	Identifier	obj		701026	0					
ANR	701139	EqualityExpression	obj -> entries != NULL		701026	1		!=			
ANR	701140	PtrMemberAccess	obj -> entries		701026	0					
ANR	701141	Identifier	obj		701026	0					
ANR	701142	Identifier	entries		701026	1					
ANR	701143	Identifier	NULL		701026	1					
ANR	701144	ExpressionStatement	compiled = get_compile_time ( bf -> sdb )	648:1:17390:17427	701026	10	True				
ANR	701145	AssignmentExpression	compiled = get_compile_time ( bf -> sdb )		701026	0		=			
ANR	701146	Identifier	compiled		701026	0					
ANR	701147	CallExpression	get_compile_time ( bf -> sdb )		701026	1					
ANR	701148	Callee	get_compile_time		701026	0					
ANR	701149	Identifier	get_compile_time		701026	0					
ANR	701150	ArgumentList	bf -> sdb		701026	1					
ANR	701151	Argument	bf -> sdb		701026	0					
ANR	701152	PtrMemberAccess	bf -> sdb		701026	0					
ANR	701153	Identifier	bf		701026	0					
ANR	701154	Identifier	sdb		701026	1					
ANR	701155	IfStatement	if ( IS_MODE_SET ( mode ) )		701026	11					
ANR	701156	Condition	IS_MODE_SET ( mode )	650:5:17435:17452	701026	0	True				
ANR	701157	CallExpression	IS_MODE_SET ( mode )		701026	0					
ANR	701158	Callee	IS_MODE_SET		701026	0					
ANR	701159	Identifier	IS_MODE_SET		701026	0					
ANR	701160	ArgumentList	mode		701026	1					
ANR	701161	Argument	mode		701026	0					
ANR	701162	Identifier	mode		701026	0					
ANR	701163	CompoundStatement		22:25:456:456	701026	1					
ANR	701164	ExpressionStatement	"r_config_set ( r -> config , ""file.type"" , info -> rclass )"	651:2:17459:17510	701026	0	True				
ANR	701165	CallExpression	"r_config_set ( r -> config , ""file.type"" , info -> rclass )"		701026	0					
ANR	701166	Callee	r_config_set		701026	0					
ANR	701167	Identifier	r_config_set		701026	0					
ANR	701168	ArgumentList	r -> config		701026	1					
ANR	701169	Argument	r -> config		701026	0					
ANR	701170	PtrMemberAccess	r -> config		701026	0					
ANR	701171	Identifier	r		701026	0					
ANR	701172	Identifier	config		701026	1					
ANR	701173	Argument	"""file.type"""		701026	1					
ANR	701174	PrimaryExpression	"""file.type"""		701026	0					
ANR	701175	Argument	info -> rclass		701026	2					
ANR	701176	PtrMemberAccess	info -> rclass		701026	0					
ANR	701177	Identifier	info		701026	0					
ANR	701178	Identifier	rclass		701026	1					
ANR	701179	ExpressionStatement	"r_config_set ( r -> config , ""cfg.bigendian"" , info -> big_endian ? ""true"" : ""false"" )"	652:2:17514:17601	701026	1	True				
ANR	701180	CallExpression	"r_config_set ( r -> config , ""cfg.bigendian"" , info -> big_endian ? ""true"" : ""false"" )"		701026	0					
ANR	701181	Callee	r_config_set		701026	0					
ANR	701182	Identifier	r_config_set		701026	0					
ANR	701183	ArgumentList	r -> config		701026	1					
ANR	701184	Argument	r -> config		701026	0					
ANR	701185	PtrMemberAccess	r -> config		701026	0					
ANR	701186	Identifier	r		701026	0					
ANR	701187	Identifier	config		701026	1					
ANR	701188	Argument	"""cfg.bigendian"""		701026	1					
ANR	701189	PrimaryExpression	"""cfg.bigendian"""		701026	0					
ANR	701190	Argument	"info -> big_endian ? ""true"" : ""false"""		701026	2					
ANR	701191	ConditionalExpression	"info -> big_endian ? ""true"" : ""false"""		701026	0					
ANR	701192	Condition	info -> big_endian		701026	0					
ANR	701193	PtrMemberAccess	info -> big_endian		701026	0					
ANR	701194	Identifier	info		701026	0					
ANR	701195	Identifier	big_endian		701026	1					
ANR	701196	PrimaryExpression	"""true"""		701026	1					
ANR	701197	PrimaryExpression	"""false"""		701026	2					
ANR	701198	IfStatement	"if ( info -> rclass && ! strcmp ( info -> rclass , ""fs"" ) )"		701026	2					
ANR	701199	Condition	"info -> rclass && ! strcmp ( info -> rclass , ""fs"" )"	654:6:17609:17652	701026	0	True				
ANR	701200	AndExpression	"info -> rclass && ! strcmp ( info -> rclass , ""fs"" )"		701026	0		&&			
ANR	701201	PtrMemberAccess	info -> rclass		701026	0					
ANR	701202	Identifier	info		701026	0					
ANR	701203	Identifier	rclass		701026	1					
ANR	701204	UnaryOperationExpression	"! strcmp ( info -> rclass , ""fs"" )"		701026	1					
ANR	701205	UnaryOperator	!		701026	0					
ANR	701206	CallExpression	"strcmp ( info -> rclass , ""fs"" )"		701026	1					
ANR	701207	Callee	strcmp		701026	0					
ANR	701208	Identifier	strcmp		701026	0					
ANR	701209	ArgumentList	info -> rclass		701026	1					
ANR	701210	Argument	info -> rclass		701026	0					
ANR	701211	PtrMemberAccess	info -> rclass		701026	0					
ANR	701212	Identifier	info		701026	0					
ANR	701213	Identifier	rclass		701026	1					
ANR	701214	Argument	"""fs"""		701026	1					
ANR	701215	PrimaryExpression	"""fs"""		701026	0					
ANR	701216	CompoundStatement		26:52:656:656	701026	1					
ANR	701217	ElseStatement	else		701026	0					
ANR	701218	CompoundStatement		31:9:849:849	701026	0					
ANR	701219	IfStatement	if ( info -> lang )		701026	0					
ANR	701220	Condition	info -> lang	660:7:17857:17866	701026	0	True				
ANR	701221	PtrMemberAccess	info -> lang		701026	0					
ANR	701222	Identifier	info		701026	0					
ANR	701223	Identifier	lang		701026	1					
ANR	701224	CompoundStatement		32:19:870:870	701026	1					
ANR	701225	ExpressionStatement	"r_config_set ( r -> config , ""bin.lang"" , info -> lang )"	661:4:17875:17923	701026	0	True				
ANR	701226	CallExpression	"r_config_set ( r -> config , ""bin.lang"" , info -> lang )"		701026	0					
ANR	701227	Callee	r_config_set		701026	0					
ANR	701228	Identifier	r_config_set		701026	0					
ANR	701229	ArgumentList	r -> config		701026	1					
ANR	701230	Argument	r -> config		701026	0					
ANR	701231	PtrMemberAccess	r -> config		701026	0					
ANR	701232	Identifier	r		701026	0					
ANR	701233	Identifier	config		701026	1					
ANR	701234	Argument	"""bin.lang"""		701026	1					
ANR	701235	PrimaryExpression	"""bin.lang"""		701026	0					
ANR	701236	Argument	info -> lang		701026	2					
ANR	701237	PtrMemberAccess	info -> lang		701026	0					
ANR	701238	Identifier	info		701026	0					
ANR	701239	Identifier	lang		701026	1					
ANR	701240	ExpressionStatement	"r_config_set ( r -> config , ""asm.os"" , info -> os )"	663:3:17933:17977	701026	1	True				
ANR	701241	CallExpression	"r_config_set ( r -> config , ""asm.os"" , info -> os )"		701026	0					
ANR	701242	Callee	r_config_set		701026	0					
ANR	701243	Identifier	r_config_set		701026	0					
ANR	701244	ArgumentList	r -> config		701026	1					
ANR	701245	Argument	r -> config		701026	0					
ANR	701246	PtrMemberAccess	r -> config		701026	0					
ANR	701247	Identifier	r		701026	0					
ANR	701248	Identifier	config		701026	1					
ANR	701249	Argument	"""asm.os"""		701026	1					
ANR	701250	PrimaryExpression	"""asm.os"""		701026	0					
ANR	701251	Argument	info -> os		701026	2					
ANR	701252	PtrMemberAccess	info -> os		701026	0					
ANR	701253	Identifier	info		701026	0					
ANR	701254	Identifier	os		701026	1					
ANR	701255	IfStatement	"if ( info -> rclass && ! strcmp ( info -> rclass , ""pe"" ) )"		701026	2					
ANR	701256	Condition	"info -> rclass && ! strcmp ( info -> rclass , ""pe"" )"	664:7:17986:18029	701026	0	True				
ANR	701257	AndExpression	"info -> rclass && ! strcmp ( info -> rclass , ""pe"" )"		701026	0		&&			
ANR	701258	PtrMemberAccess	info -> rclass		701026	0					
ANR	701259	Identifier	info		701026	0					
ANR	701260	Identifier	rclass		701026	1					
ANR	701261	UnaryOperationExpression	"! strcmp ( info -> rclass , ""pe"" )"		701026	1					
ANR	701262	UnaryOperator	!		701026	0					
ANR	701263	CallExpression	"strcmp ( info -> rclass , ""pe"" )"		701026	1					
ANR	701264	Callee	strcmp		701026	0					
ANR	701265	Identifier	strcmp		701026	0					
ANR	701266	ArgumentList	info -> rclass		701026	1					
ANR	701267	Argument	info -> rclass		701026	0					
ANR	701268	PtrMemberAccess	info -> rclass		701026	0					
ANR	701269	Identifier	info		701026	0					
ANR	701270	Identifier	rclass		701026	1					
ANR	701271	Argument	"""pe"""		701026	1					
ANR	701272	PrimaryExpression	"""pe"""		701026	0					
ANR	701273	CompoundStatement		36:53:1033:1033	701026	1					
ANR	701274	ExpressionStatement	"r_config_set ( r -> config , ""anal.cpp.abi"" , ""msvc"" )"	665:4:18038:18086	701026	0	True				
ANR	701275	CallExpression	"r_config_set ( r -> config , ""anal.cpp.abi"" , ""msvc"" )"		701026	0					
ANR	701276	Callee	r_config_set		701026	0					
ANR	701277	Identifier	r_config_set		701026	0					
ANR	701278	ArgumentList	r -> config		701026	1					
ANR	701279	Argument	r -> config		701026	0					
ANR	701280	PtrMemberAccess	r -> config		701026	0					
ANR	701281	Identifier	r		701026	0					
ANR	701282	Identifier	config		701026	1					
ANR	701283	Argument	"""anal.cpp.abi"""		701026	1					
ANR	701284	PrimaryExpression	"""anal.cpp.abi"""		701026	0					
ANR	701285	Argument	"""msvc"""		701026	2					
ANR	701286	PrimaryExpression	"""msvc"""		701026	0					
ANR	701287	ElseStatement	else		701026	0					
ANR	701288	CompoundStatement		38:10:1099:1099	701026	0					
ANR	701289	ExpressionStatement	"r_config_set ( r -> config , ""anal.cpp.abi"" , ""itanium"" )"	667:4:18104:18155	701026	0	True				
ANR	701290	CallExpression	"r_config_set ( r -> config , ""anal.cpp.abi"" , ""itanium"" )"		701026	0					
ANR	701291	Callee	r_config_set		701026	0					
ANR	701292	Identifier	r_config_set		701026	0					
ANR	701293	ArgumentList	r -> config		701026	1					
ANR	701294	Argument	r -> config		701026	0					
ANR	701295	PtrMemberAccess	r -> config		701026	0					
ANR	701296	Identifier	r		701026	0					
ANR	701297	Identifier	config		701026	1					
ANR	701298	Argument	"""anal.cpp.abi"""		701026	1					
ANR	701299	PrimaryExpression	"""anal.cpp.abi"""		701026	0					
ANR	701300	Argument	"""itanium"""		701026	2					
ANR	701301	PrimaryExpression	"""itanium"""		701026	0					
ANR	701302	ExpressionStatement	"r_config_set ( r -> config , ""asm.arch"" , info -> arch )"	669:3:18165:18213	701026	3	True				
ANR	701303	CallExpression	"r_config_set ( r -> config , ""asm.arch"" , info -> arch )"		701026	0					
ANR	701304	Callee	r_config_set		701026	0					
ANR	701305	Identifier	r_config_set		701026	0					
ANR	701306	ArgumentList	r -> config		701026	1					
ANR	701307	Argument	r -> config		701026	0					
ANR	701308	PtrMemberAccess	r -> config		701026	0					
ANR	701309	Identifier	r		701026	0					
ANR	701310	Identifier	config		701026	1					
ANR	701311	Argument	"""asm.arch"""		701026	1					
ANR	701312	PrimaryExpression	"""asm.arch"""		701026	0					
ANR	701313	Argument	info -> arch		701026	2					
ANR	701314	PtrMemberAccess	info -> arch		701026	0					
ANR	701315	Identifier	info		701026	0					
ANR	701316	Identifier	arch		701026	1					
ANR	701317	IfStatement	if ( info -> cpu && * info -> cpu )		701026	4					
ANR	701318	Condition	info -> cpu && * info -> cpu	670:7:18222:18244	701026	0	True				
ANR	701319	AndExpression	info -> cpu && * info -> cpu		701026	0		&&			
ANR	701320	PtrMemberAccess	info -> cpu		701026	0					
ANR	701321	Identifier	info		701026	0					
ANR	701322	Identifier	cpu		701026	1					
ANR	701323	UnaryOperationExpression	* info -> cpu		701026	1					
ANR	701324	UnaryOperator	*		701026	0					
ANR	701325	PtrMemberAccess	info -> cpu		701026	1					
ANR	701326	Identifier	info		701026	0					
ANR	701327	Identifier	cpu		701026	1					
ANR	701328	CompoundStatement		42:32:1248:1248	701026	1					
ANR	701329	ExpressionStatement	"r_config_set ( r -> config , ""asm.cpu"" , info -> cpu )"	671:4:18253:18299	701026	0	True				
ANR	701330	CallExpression	"r_config_set ( r -> config , ""asm.cpu"" , info -> cpu )"		701026	0					
ANR	701331	Callee	r_config_set		701026	0					
ANR	701332	Identifier	r_config_set		701026	0					
ANR	701333	ArgumentList	r -> config		701026	1					
ANR	701334	Argument	r -> config		701026	0					
ANR	701335	PtrMemberAccess	r -> config		701026	0					
ANR	701336	Identifier	r		701026	0					
ANR	701337	Identifier	config		701026	1					
ANR	701338	Argument	"""asm.cpu"""		701026	1					
ANR	701339	PrimaryExpression	"""asm.cpu"""		701026	0					
ANR	701340	Argument	info -> cpu		701026	2					
ANR	701341	PtrMemberAccess	info -> cpu		701026	0					
ANR	701342	Identifier	info		701026	0					
ANR	701343	Identifier	cpu		701026	1					
ANR	701344	ExpressionStatement	"r_config_set ( r -> config , ""anal.arch"" , info -> arch )"	673:3:18309:18358	701026	5	True				
ANR	701345	CallExpression	"r_config_set ( r -> config , ""anal.arch"" , info -> arch )"		701026	0					
ANR	701346	Callee	r_config_set		701026	0					
ANR	701347	Identifier	r_config_set		701026	0					
ANR	701348	ArgumentList	r -> config		701026	1					
ANR	701349	Argument	r -> config		701026	0					
ANR	701350	PtrMemberAccess	r -> config		701026	0					
ANR	701351	Identifier	r		701026	0					
ANR	701352	Identifier	config		701026	1					
ANR	701353	Argument	"""anal.arch"""		701026	1					
ANR	701354	PrimaryExpression	"""anal.arch"""		701026	0					
ANR	701355	Argument	info -> arch		701026	2					
ANR	701356	PtrMemberAccess	info -> arch		701026	0					
ANR	701357	Identifier	info		701026	0					
ANR	701358	Identifier	arch		701026	1					
ANR	701359	ExpressionStatement	"snprintf ( str , R_FLAG_NAME_SIZE , ""%i"" , info -> bits )"	674:3:18363:18413	701026	6	True				
ANR	701360	CallExpression	"snprintf ( str , R_FLAG_NAME_SIZE , ""%i"" , info -> bits )"		701026	0					
ANR	701361	Callee	snprintf		701026	0					
ANR	701362	Identifier	snprintf		701026	0					
ANR	701363	ArgumentList	str		701026	1					
ANR	701364	Argument	str		701026	0					
ANR	701365	Identifier	str		701026	0					
ANR	701366	Argument	R_FLAG_NAME_SIZE		701026	1					
ANR	701367	Identifier	R_FLAG_NAME_SIZE		701026	0					
ANR	701368	Argument	"""%i"""		701026	2					
ANR	701369	PrimaryExpression	"""%i"""		701026	0					
ANR	701370	Argument	info -> bits		701026	3					
ANR	701371	PtrMemberAccess	info -> bits		701026	0					
ANR	701372	Identifier	info		701026	0					
ANR	701373	Identifier	bits		701026	1					
ANR	701374	ExpressionStatement	"r_config_set ( r -> config , ""asm.bits"" , str )"	675:3:18418:18459	701026	7	True				
ANR	701375	CallExpression	"r_config_set ( r -> config , ""asm.bits"" , str )"		701026	0					
ANR	701376	Callee	r_config_set		701026	0					
ANR	701377	Identifier	r_config_set		701026	0					
ANR	701378	ArgumentList	r -> config		701026	1					
ANR	701379	Argument	r -> config		701026	0					
ANR	701380	PtrMemberAccess	r -> config		701026	0					
ANR	701381	Identifier	r		701026	0					
ANR	701382	Identifier	config		701026	1					
ANR	701383	Argument	"""asm.bits"""		701026	1					
ANR	701384	PrimaryExpression	"""asm.bits"""		701026	0					
ANR	701385	Argument	str		701026	2					
ANR	701386	Identifier	str		701026	0					
ANR	701387	ExpressionStatement	"r_config_set ( r -> config , ""asm.dwarf"" , ( R_BIN_DBG_STRIPPED & info -> dbg_info ) ? ""false"" : ""true"" )"	676:3:18464:18563	701026	8	True				
ANR	701388	CallExpression	"r_config_set ( r -> config , ""asm.dwarf"" , ( R_BIN_DBG_STRIPPED & info -> dbg_info ) ? ""false"" : ""true"" )"		701026	0					
ANR	701389	Callee	r_config_set		701026	0					
ANR	701390	Identifier	r_config_set		701026	0					
ANR	701391	ArgumentList	r -> config		701026	1					
ANR	701392	Argument	r -> config		701026	0					
ANR	701393	PtrMemberAccess	r -> config		701026	0					
ANR	701394	Identifier	r		701026	0					
ANR	701395	Identifier	config		701026	1					
ANR	701396	Argument	"""asm.dwarf"""		701026	1					
ANR	701397	PrimaryExpression	"""asm.dwarf"""		701026	0					
ANR	701398	Argument	"( R_BIN_DBG_STRIPPED & info -> dbg_info ) ? ""false"" : ""true"""		701026	2					
ANR	701399	ConditionalExpression	"( R_BIN_DBG_STRIPPED & info -> dbg_info ) ? ""false"" : ""true"""		701026	0					
ANR	701400	Condition	R_BIN_DBG_STRIPPED & info -> dbg_info		701026	0					
ANR	701401	BitAndExpression	R_BIN_DBG_STRIPPED & info -> dbg_info		701026	0		&			
ANR	701402	Identifier	R_BIN_DBG_STRIPPED		701026	0					
ANR	701403	PtrMemberAccess	info -> dbg_info		701026	1					
ANR	701404	Identifier	info		701026	0					
ANR	701405	Identifier	dbg_info		701026	1					
ANR	701406	PrimaryExpression	"""false"""		701026	1					
ANR	701407	PrimaryExpression	"""true"""		701026	2					
ANR	701408	ExpressionStatement	"v = r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_ALIGN )"	678:3:18568:18620	701026	9	True				
ANR	701409	AssignmentExpression	"v = r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_ALIGN )"		701026	0		=			
ANR	701410	Identifier	v		701026	0					
ANR	701411	CallExpression	"r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_ALIGN )"		701026	1					
ANR	701412	Callee	r_anal_archinfo		701026	0					
ANR	701413	Identifier	r_anal_archinfo		701026	0					
ANR	701414	ArgumentList	r -> anal		701026	1					
ANR	701415	Argument	r -> anal		701026	0					
ANR	701416	PtrMemberAccess	r -> anal		701026	0					
ANR	701417	Identifier	r		701026	0					
ANR	701418	Identifier	anal		701026	1					
ANR	701419	Argument	R_ANAL_ARCHINFO_ALIGN		701026	1					
ANR	701420	Identifier	R_ANAL_ARCHINFO_ALIGN		701026	0					
ANR	701421	IfStatement	if ( v != - 1 )		701026	10					
ANR	701422	Condition	v != - 1	679:7:18629:18635	701026	0	True				
ANR	701423	EqualityExpression	v != - 1		701026	0		!=			
ANR	701424	Identifier	v		701026	0					
ANR	701425	UnaryOperationExpression	- 1		701026	1					
ANR	701426	UnaryOperator	-		701026	0					
ANR	701427	PrimaryExpression	1		701026	1					
ANR	701428	CompoundStatement		51:16:1639:1639	701026	1					
ANR	701429	ExpressionStatement	"r_config_set_i ( r -> config , ""asm.pcalign"" , v )"	680:4:18644:18688	701026	0	True				
ANR	701430	CallExpression	"r_config_set_i ( r -> config , ""asm.pcalign"" , v )"		701026	0					
ANR	701431	Callee	r_config_set_i		701026	0					
ANR	701432	Identifier	r_config_set_i		701026	0					
ANR	701433	ArgumentList	r -> config		701026	1					
ANR	701434	Argument	r -> config		701026	0					
ANR	701435	PtrMemberAccess	r -> config		701026	0					
ANR	701436	Identifier	r		701026	0					
ANR	701437	Identifier	config		701026	1					
ANR	701438	Argument	"""asm.pcalign"""		701026	1					
ANR	701439	PrimaryExpression	"""asm.pcalign"""		701026	0					
ANR	701440	Argument	v		701026	2					
ANR	701441	Identifier	v		701026	0					
ANR	701442	ExpressionStatement	r_core_anal_type_init ( r )	683:2:18701:18726	701026	3	True				
ANR	701443	CallExpression	r_core_anal_type_init ( r )		701026	0					
ANR	701444	Callee	r_core_anal_type_init		701026	0					
ANR	701445	Identifier	r_core_anal_type_init		701026	0					
ANR	701446	ArgumentList	r		701026	1					
ANR	701447	Argument	r		701026	0					
ANR	701448	Identifier	r		701026	0					
ANR	701449	ExpressionStatement	r_core_anal_cc_init ( r )	684:2:18730:18753	701026	4	True				
ANR	701450	CallExpression	r_core_anal_cc_init ( r )		701026	0					
ANR	701451	Callee	r_core_anal_cc_init		701026	0					
ANR	701452	Identifier	r_core_anal_cc_init		701026	0					
ANR	701453	ArgumentList	r		701026	1					
ANR	701454	Argument	r		701026	0					
ANR	701455	Identifier	r		701026	0					
ANR	701456	ElseStatement	else		701026	0					
ANR	701457	IfStatement	if ( IS_MODE_SIMPLE ( mode ) )		701026	0					
ANR	701458	Condition	IS_MODE_SIMPLE ( mode )	685:12:18767:18787	701026	0	True				
ANR	701459	CallExpression	IS_MODE_SIMPLE ( mode )		701026	0					
ANR	701460	Callee	IS_MODE_SIMPLE		701026	0					
ANR	701461	Identifier	IS_MODE_SIMPLE		701026	0					
ANR	701462	ArgumentList	mode		701026	1					
ANR	701463	Argument	mode		701026	0					
ANR	701464	Identifier	mode		701026	0					
ANR	701465	CompoundStatement		57:35:1791:1791	701026	1					
ANR	701466	ExpressionStatement	"r_cons_printf ( ""arch %s\\n"" , info -> arch )"	686:2:18794:18833	701026	0	True				
ANR	701467	CallExpression	"r_cons_printf ( ""arch %s\\n"" , info -> arch )"		701026	0					
ANR	701468	Callee	r_cons_printf		701026	0					
ANR	701469	Identifier	r_cons_printf		701026	0					
ANR	701470	ArgumentList	"""arch %s\\n"""		701026	1					
ANR	701471	Argument	"""arch %s\\n"""		701026	0					
ANR	701472	PrimaryExpression	"""arch %s\\n"""		701026	0					
ANR	701473	Argument	info -> arch		701026	1					
ANR	701474	PtrMemberAccess	info -> arch		701026	0					
ANR	701475	Identifier	info		701026	0					
ANR	701476	Identifier	arch		701026	1					
ANR	701477	IfStatement	if ( info -> cpu && * info -> cpu )		701026	1					
ANR	701478	Condition	info -> cpu && * info -> cpu	687:6:18841:18863	701026	0	True				
ANR	701479	AndExpression	info -> cpu && * info -> cpu		701026	0		&&			
ANR	701480	PtrMemberAccess	info -> cpu		701026	0					
ANR	701481	Identifier	info		701026	0					
ANR	701482	Identifier	cpu		701026	1					
ANR	701483	UnaryOperationExpression	* info -> cpu		701026	1					
ANR	701484	UnaryOperator	*		701026	0					
ANR	701485	PtrMemberAccess	info -> cpu		701026	1					
ANR	701486	Identifier	info		701026	0					
ANR	701487	Identifier	cpu		701026	1					
ANR	701488	CompoundStatement		59:31:1867:1867	701026	1					
ANR	701489	ExpressionStatement	"r_cons_printf ( ""cpu %s\\n"" , info -> cpu )"	688:3:18871:18908	701026	0	True				
ANR	701490	CallExpression	"r_cons_printf ( ""cpu %s\\n"" , info -> cpu )"		701026	0					
ANR	701491	Callee	r_cons_printf		701026	0					
ANR	701492	Identifier	r_cons_printf		701026	0					
ANR	701493	ArgumentList	"""cpu %s\\n"""		701026	1					
ANR	701494	Argument	"""cpu %s\\n"""		701026	0					
ANR	701495	PrimaryExpression	"""cpu %s\\n"""		701026	0					
ANR	701496	Argument	info -> cpu		701026	1					
ANR	701497	PtrMemberAccess	info -> cpu		701026	0					
ANR	701498	Identifier	info		701026	0					
ANR	701499	Identifier	cpu		701026	1					
ANR	701500	ExpressionStatement	"r_cons_printf ( ""bits %d\\n"" , info -> bits )"	690:2:18916:18955	701026	2	True				
ANR	701501	CallExpression	"r_cons_printf ( ""bits %d\\n"" , info -> bits )"		701026	0					
ANR	701502	Callee	r_cons_printf		701026	0					
ANR	701503	Identifier	r_cons_printf		701026	0					
ANR	701504	ArgumentList	"""bits %d\\n"""		701026	1					
ANR	701505	Argument	"""bits %d\\n"""		701026	0					
ANR	701506	PrimaryExpression	"""bits %d\\n"""		701026	0					
ANR	701507	Argument	info -> bits		701026	1					
ANR	701508	PtrMemberAccess	info -> bits		701026	0					
ANR	701509	Identifier	info		701026	0					
ANR	701510	Identifier	bits		701026	1					
ANR	701511	ExpressionStatement	"r_cons_printf ( ""os %s\\n"" , info -> os )"	691:2:18959:18994	701026	3	True				
ANR	701512	CallExpression	"r_cons_printf ( ""os %s\\n"" , info -> os )"		701026	0					
ANR	701513	Callee	r_cons_printf		701026	0					
ANR	701514	Identifier	r_cons_printf		701026	0					
ANR	701515	ArgumentList	"""os %s\\n"""		701026	1					
ANR	701516	Argument	"""os %s\\n"""		701026	0					
ANR	701517	PrimaryExpression	"""os %s\\n"""		701026	0					
ANR	701518	Argument	info -> os		701026	1					
ANR	701519	PtrMemberAccess	info -> os		701026	0					
ANR	701520	Identifier	info		701026	0					
ANR	701521	Identifier	os		701026	1					
ANR	701522	ExpressionStatement	"r_cons_printf ( ""endian %s\\n"" , info -> big_endian ? ""big"" : ""little"" )"	692:2:18998:19062	701026	4	True				
ANR	701523	CallExpression	"r_cons_printf ( ""endian %s\\n"" , info -> big_endian ? ""big"" : ""little"" )"		701026	0					
ANR	701524	Callee	r_cons_printf		701026	0					
ANR	701525	Identifier	r_cons_printf		701026	0					
ANR	701526	ArgumentList	"""endian %s\\n"""		701026	1					
ANR	701527	Argument	"""endian %s\\n"""		701026	0					
ANR	701528	PrimaryExpression	"""endian %s\\n"""		701026	0					
ANR	701529	Argument	"info -> big_endian ? ""big"" : ""little"""		701026	1					
ANR	701530	ConditionalExpression	"info -> big_endian ? ""big"" : ""little"""		701026	0					
ANR	701531	Condition	info -> big_endian		701026	0					
ANR	701532	PtrMemberAccess	info -> big_endian		701026	0					
ANR	701533	Identifier	info		701026	0					
ANR	701534	Identifier	big_endian		701026	1					
ANR	701535	PrimaryExpression	"""big"""		701026	1					
ANR	701536	PrimaryExpression	"""little"""		701026	2					
ANR	701537	ExpressionStatement	"v = r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"	693:2:19066:19124	701026	5	True				
ANR	701538	AssignmentExpression	"v = r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		701026	0		=			
ANR	701539	Identifier	v		701026	0					
ANR	701540	CallExpression	"r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		701026	1					
ANR	701541	Callee	r_anal_archinfo		701026	0					
ANR	701542	Identifier	r_anal_archinfo		701026	0					
ANR	701543	ArgumentList	r -> anal		701026	1					
ANR	701544	Argument	r -> anal		701026	0					
ANR	701545	PtrMemberAccess	r -> anal		701026	0					
ANR	701546	Identifier	r		701026	0					
ANR	701547	Identifier	anal		701026	1					
ANR	701548	Argument	R_ANAL_ARCHINFO_MIN_OP_SIZE		701026	1					
ANR	701549	Identifier	R_ANAL_ARCHINFO_MIN_OP_SIZE		701026	0					
ANR	701550	IfStatement	if ( v != - 1 )		701026	6					
ANR	701551	Condition	v != - 1	694:6:19132:19138	701026	0	True				
ANR	701552	EqualityExpression	v != - 1		701026	0		!=			
ANR	701553	Identifier	v		701026	0					
ANR	701554	UnaryOperationExpression	- 1		701026	1					
ANR	701555	UnaryOperator	-		701026	0					
ANR	701556	PrimaryExpression	1		701026	1					
ANR	701557	CompoundStatement		66:15:2142:2142	701026	1					
ANR	701558	ExpressionStatement	"r_cons_printf ( ""minopsz %d\\n"" , v )"	695:3:19146:19179	701026	0	True				
ANR	701559	CallExpression	"r_cons_printf ( ""minopsz %d\\n"" , v )"		701026	0					
ANR	701560	Callee	r_cons_printf		701026	0					
ANR	701561	Identifier	r_cons_printf		701026	0					
ANR	701562	ArgumentList	"""minopsz %d\\n"""		701026	1					
ANR	701563	Argument	"""minopsz %d\\n"""		701026	0					
ANR	701564	PrimaryExpression	"""minopsz %d\\n"""		701026	0					
ANR	701565	Argument	v		701026	1					
ANR	701566	Identifier	v		701026	0					
ANR	701567	ExpressionStatement	"v = r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_MAX_OP_SIZE )"	697:2:19187:19245	701026	7	True				
ANR	701568	AssignmentExpression	"v = r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_MAX_OP_SIZE )"		701026	0		=			
ANR	701569	Identifier	v		701026	0					
ANR	701570	CallExpression	"r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_MAX_OP_SIZE )"		701026	1					
ANR	701571	Callee	r_anal_archinfo		701026	0					
ANR	701572	Identifier	r_anal_archinfo		701026	0					
ANR	701573	ArgumentList	r -> anal		701026	1					
ANR	701574	Argument	r -> anal		701026	0					
ANR	701575	PtrMemberAccess	r -> anal		701026	0					
ANR	701576	Identifier	r		701026	0					
ANR	701577	Identifier	anal		701026	1					
ANR	701578	Argument	R_ANAL_ARCHINFO_MAX_OP_SIZE		701026	1					
ANR	701579	Identifier	R_ANAL_ARCHINFO_MAX_OP_SIZE		701026	0					
ANR	701580	IfStatement	if ( v != - 1 )		701026	8					
ANR	701581	Condition	v != - 1	698:6:19253:19259	701026	0	True				
ANR	701582	EqualityExpression	v != - 1		701026	0		!=			
ANR	701583	Identifier	v		701026	0					
ANR	701584	UnaryOperationExpression	- 1		701026	1					
ANR	701585	UnaryOperator	-		701026	0					
ANR	701586	PrimaryExpression	1		701026	1					
ANR	701587	CompoundStatement		70:15:2263:2263	701026	1					
ANR	701588	ExpressionStatement	"r_cons_printf ( ""maxopsz %d\\n"" , v )"	699:3:19267:19300	701026	0	True				
ANR	701589	CallExpression	"r_cons_printf ( ""maxopsz %d\\n"" , v )"		701026	0					
ANR	701590	Callee	r_cons_printf		701026	0					
ANR	701591	Identifier	r_cons_printf		701026	0					
ANR	701592	ArgumentList	"""maxopsz %d\\n"""		701026	1					
ANR	701593	Argument	"""maxopsz %d\\n"""		701026	0					
ANR	701594	PrimaryExpression	"""maxopsz %d\\n"""		701026	0					
ANR	701595	Argument	v		701026	1					
ANR	701596	Identifier	v		701026	0					
ANR	701597	ExpressionStatement	"v = r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_ALIGN )"	701:2:19308:19360	701026	9	True				
ANR	701598	AssignmentExpression	"v = r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_ALIGN )"		701026	0		=			
ANR	701599	Identifier	v		701026	0					
ANR	701600	CallExpression	"r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_ALIGN )"		701026	1					
ANR	701601	Callee	r_anal_archinfo		701026	0					
ANR	701602	Identifier	r_anal_archinfo		701026	0					
ANR	701603	ArgumentList	r -> anal		701026	1					
ANR	701604	Argument	r -> anal		701026	0					
ANR	701605	PtrMemberAccess	r -> anal		701026	0					
ANR	701606	Identifier	r		701026	0					
ANR	701607	Identifier	anal		701026	1					
ANR	701608	Argument	R_ANAL_ARCHINFO_ALIGN		701026	1					
ANR	701609	Identifier	R_ANAL_ARCHINFO_ALIGN		701026	0					
ANR	701610	IfStatement	if ( v != - 1 )		701026	10					
ANR	701611	Condition	v != - 1	702:6:19368:19374	701026	0	True				
ANR	701612	EqualityExpression	v != - 1		701026	0		!=			
ANR	701613	Identifier	v		701026	0					
ANR	701614	UnaryOperationExpression	- 1		701026	1					
ANR	701615	UnaryOperator	-		701026	0					
ANR	701616	PrimaryExpression	1		701026	1					
ANR	701617	CompoundStatement		74:15:2378:2378	701026	1					
ANR	701618	ExpressionStatement	"r_cons_printf ( ""pcalign %d\\n"" , v )"	703:3:19382:19415	701026	0	True				
ANR	701619	CallExpression	"r_cons_printf ( ""pcalign %d\\n"" , v )"		701026	0					
ANR	701620	Callee	r_cons_printf		701026	0					
ANR	701621	Identifier	r_cons_printf		701026	0					
ANR	701622	ArgumentList	"""pcalign %d\\n"""		701026	1					
ANR	701623	Argument	"""pcalign %d\\n"""		701026	0					
ANR	701624	PrimaryExpression	"""pcalign %d\\n"""		701026	0					
ANR	701625	Argument	v		701026	1					
ANR	701626	Identifier	v		701026	0					
ANR	701627	ElseStatement	else		701026	0					
ANR	701628	IfStatement	if ( IS_MODE_RAD ( mode ) )		701026	0					
ANR	701629	Condition	IS_MODE_RAD ( mode )	705:12:19433:19450	701026	0	True				
ANR	701630	CallExpression	IS_MODE_RAD ( mode )		701026	0					
ANR	701631	Callee	IS_MODE_RAD		701026	0					
ANR	701632	Identifier	IS_MODE_RAD		701026	0					
ANR	701633	ArgumentList	mode		701026	1					
ANR	701634	Argument	mode		701026	0					
ANR	701635	Identifier	mode		701026	0					
ANR	701636	CompoundStatement		77:32:2454:2454	701026	1					
ANR	701637	IfStatement	"if ( info -> type && ! strcmp ( info -> type , ""fs"" ) )"		701026	0					
ANR	701638	Condition	"info -> type && ! strcmp ( info -> type , ""fs"" )"	706:6:19461:19500	701026	0	True				
ANR	701639	AndExpression	"info -> type && ! strcmp ( info -> type , ""fs"" )"		701026	0		&&			
ANR	701640	PtrMemberAccess	info -> type		701026	0					
ANR	701641	Identifier	info		701026	0					
ANR	701642	Identifier	type		701026	1					
ANR	701643	UnaryOperationExpression	"! strcmp ( info -> type , ""fs"" )"		701026	1					
ANR	701644	UnaryOperator	!		701026	0					
ANR	701645	CallExpression	"strcmp ( info -> type , ""fs"" )"		701026	1					
ANR	701646	Callee	strcmp		701026	0					
ANR	701647	Identifier	strcmp		701026	0					
ANR	701648	ArgumentList	info -> type		701026	1					
ANR	701649	Argument	info -> type		701026	0					
ANR	701650	PtrMemberAccess	info -> type		701026	0					
ANR	701651	Identifier	info		701026	0					
ANR	701652	Identifier	type		701026	1					
ANR	701653	Argument	"""fs"""		701026	1					
ANR	701654	PrimaryExpression	"""fs"""		701026	0					
ANR	701655	CompoundStatement		78:48:2504:2504	701026	1					
ANR	701656	ExpressionStatement	"r_cons_printf ( ""e file.type=fs\\n"" )"	707:3:19508:19542	701026	0	True				
ANR	701657	CallExpression	"r_cons_printf ( ""e file.type=fs\\n"" )"		701026	0					
ANR	701658	Callee	r_cons_printf		701026	0					
ANR	701659	Identifier	r_cons_printf		701026	0					
ANR	701660	ArgumentList	"""e file.type=fs\\n"""		701026	1					
ANR	701661	Argument	"""e file.type=fs\\n"""		701026	0					
ANR	701662	PrimaryExpression	"""e file.type=fs\\n"""		701026	0					
ANR	701663	ExpressionStatement	"r_cons_printf ( ""m /root %s 0\\n"" , info -> arch )"	708:3:19547:19591	701026	1	True				
ANR	701664	CallExpression	"r_cons_printf ( ""m /root %s 0\\n"" , info -> arch )"		701026	0					
ANR	701665	Callee	r_cons_printf		701026	0					
ANR	701666	Identifier	r_cons_printf		701026	0					
ANR	701667	ArgumentList	"""m /root %s 0\\n"""		701026	1					
ANR	701668	Argument	"""m /root %s 0\\n"""		701026	0					
ANR	701669	PrimaryExpression	"""m /root %s 0\\n"""		701026	0					
ANR	701670	Argument	info -> arch		701026	1					
ANR	701671	PtrMemberAccess	info -> arch		701026	0					
ANR	701672	Identifier	info		701026	0					
ANR	701673	Identifier	arch		701026	1					
ANR	701674	ElseStatement	else		701026	0					
ANR	701675	CompoundStatement		81:9:2603:2603	701026	0					
ANR	701676	Statement	r_cons_printf	710:3:19607:19619	701026	0	True				
ANR	701677	Statement	(	710:17:19621:19621	701026	1	True				
ANR	701678	Statement	"""e cfg.bigendian=%s\\n"""	710:18:19622:19643	701026	2	True				
ANR	701679	Statement	"""e asm.bits=%i\\n"""	711:4:19649:19665	701026	3	True				
ANR	701680	Statement	"""e asm.dwarf=%s\\n"""	712:4:19671:19688	701026	4	True				
ANR	701681	Statement	","	712:22:19689:19689	701026	5	True				
ANR	701682	Statement	r_str_bool	713:4:19695:19704	701026	6	True				
ANR	701683	Statement	(	713:15:19706:19706	701026	7	True				
ANR	701684	Statement	info	713:16:19707:19710	701026	8	True				
ANR	701685	Statement	->	713:20:19711:19712	701026	9	True				
ANR	701686	Statement	big_endian	713:22:19713:19722	701026	10	True				
ANR	701687	Statement	)	713:32:19723:19723	701026	11	True				
ANR	701688	Statement	","	713:33:19724:19724	701026	12	True				
ANR	701689	Statement	info	714:4:19730:19733	701026	13	True				
ANR	701690	Statement	->	714:8:19734:19735	701026	14	True				
ANR	701691	Statement	bits	714:10:19736:19739	701026	15	True				
ANR	701692	Statement	","	714:14:19740:19740	701026	16	True				
ANR	701693	Statement	r_str_bool	715:4:19746:19755	701026	17	True				
ANR	701694	Statement	(	715:15:19757:19757	701026	18	True				
ANR	701695	Statement	R_BIN_DBG_STRIPPED	715:16:19758:19775	701026	19	True				
ANR	701696	Statement	&	715:35:19777:19777	701026	20	True				
ANR	701697	Statement	info	715:36:19778:19781	701026	21	True				
ANR	701698	Statement	->	715:40:19782:19783	701026	22	True				
ANR	701699	Statement	dbg_info	715:42:19784:19791	701026	23	True				
ANR	701700	Statement	)	715:50:19792:19792	701026	24	True				
ANR	701701	Statement	)	715:51:19793:19793	701026	25	True				
ANR	701702	ExpressionStatement		715:52:19794:19794	701026	26	True				
ANR	701703	IfStatement	if ( info -> lang && * info -> lang )		701026	27					
ANR	701704	Condition	info -> lang && * info -> lang	716:7:19803:19827	701026	0	True				
ANR	701705	AndExpression	info -> lang && * info -> lang		701026	0		&&			
ANR	701706	PtrMemberAccess	info -> lang		701026	0					
ANR	701707	Identifier	info		701026	0					
ANR	701708	Identifier	lang		701026	1					
ANR	701709	UnaryOperationExpression	* info -> lang		701026	1					
ANR	701710	UnaryOperator	*		701026	0					
ANR	701711	PtrMemberAccess	info -> lang		701026	1					
ANR	701712	Identifier	info		701026	0					
ANR	701713	Identifier	lang		701026	1					
ANR	701714	CompoundStatement		88:34:2831:2831	701026	1					
ANR	701715	ExpressionStatement	"r_cons_printf ( ""e bin.lang=%s\\n"" , info -> lang )"	717:4:19836:19881	701026	0	True				
ANR	701716	CallExpression	"r_cons_printf ( ""e bin.lang=%s\\n"" , info -> lang )"		701026	0					
ANR	701717	Callee	r_cons_printf		701026	0					
ANR	701718	Identifier	r_cons_printf		701026	0					
ANR	701719	ArgumentList	"""e bin.lang=%s\\n"""		701026	1					
ANR	701720	Argument	"""e bin.lang=%s\\n"""		701026	0					
ANR	701721	PrimaryExpression	"""e bin.lang=%s\\n"""		701026	0					
ANR	701722	Argument	info -> lang		701026	1					
ANR	701723	PtrMemberAccess	info -> lang		701026	0					
ANR	701724	Identifier	info		701026	0					
ANR	701725	Identifier	lang		701026	1					
ANR	701726	IfStatement	if ( info -> rclass && * info -> rclass )		701026	28					
ANR	701727	Condition	info -> rclass && * info -> rclass	719:7:19895:19923	701026	0	True				
ANR	701728	AndExpression	info -> rclass && * info -> rclass		701026	0		&&			
ANR	701729	PtrMemberAccess	info -> rclass		701026	0					
ANR	701730	Identifier	info		701026	0					
ANR	701731	Identifier	rclass		701026	1					
ANR	701732	UnaryOperationExpression	* info -> rclass		701026	1					
ANR	701733	UnaryOperator	*		701026	0					
ANR	701734	PtrMemberAccess	info -> rclass		701026	1					
ANR	701735	Identifier	info		701026	0					
ANR	701736	Identifier	rclass		701026	1					
ANR	701737	CompoundStatement		91:38:2927:2927	701026	1					
ANR	701738	ExpressionStatement	"r_cons_printf ( ""e file.type=%s\\n"" , info -> rclass )"	720:4:19932:19985	701026	0	True				
ANR	701739	CallExpression	"r_cons_printf ( ""e file.type=%s\\n"" , info -> rclass )"		701026	0					
ANR	701740	Callee	r_cons_printf		701026	0					
ANR	701741	Identifier	r_cons_printf		701026	0					
ANR	701742	ArgumentList	"""e file.type=%s\\n"""		701026	1					
ANR	701743	Argument	"""e file.type=%s\\n"""		701026	0					
ANR	701744	PrimaryExpression	"""e file.type=%s\\n"""		701026	0					
ANR	701745	Argument	info -> rclass		701026	1					
ANR	701746	PtrMemberAccess	info -> rclass		701026	0					
ANR	701747	Identifier	info		701026	0					
ANR	701748	Identifier	rclass		701026	1					
ANR	701749	IfStatement	if ( info -> os )		701026	29					
ANR	701750	Condition	info -> os	723:7:19999:20006	701026	0	True				
ANR	701751	PtrMemberAccess	info -> os		701026	0					
ANR	701752	Identifier	info		701026	0					
ANR	701753	Identifier	os		701026	1					
ANR	701754	CompoundStatement		95:17:3010:3010	701026	1					
ANR	701755	ExpressionStatement	"r_cons_printf ( ""e asm.os=%s\\n"" , info -> os )"	724:4:20015:20056	701026	0	True				
ANR	701756	CallExpression	"r_cons_printf ( ""e asm.os=%s\\n"" , info -> os )"		701026	0					
ANR	701757	Callee	r_cons_printf		701026	0					
ANR	701758	Identifier	r_cons_printf		701026	0					
ANR	701759	ArgumentList	"""e asm.os=%s\\n"""		701026	1					
ANR	701760	Argument	"""e asm.os=%s\\n"""		701026	0					
ANR	701761	PrimaryExpression	"""e asm.os=%s\\n"""		701026	0					
ANR	701762	Argument	info -> os		701026	1					
ANR	701763	PtrMemberAccess	info -> os		701026	0					
ANR	701764	Identifier	info		701026	0					
ANR	701765	Identifier	os		701026	1					
ANR	701766	IfStatement	if ( info -> arch )		701026	30					
ANR	701767	Condition	info -> arch	726:7:20070:20079	701026	0	True				
ANR	701768	PtrMemberAccess	info -> arch		701026	0					
ANR	701769	Identifier	info		701026	0					
ANR	701770	Identifier	arch		701026	1					
ANR	701771	CompoundStatement		98:19:3083:3083	701026	1					
ANR	701772	ExpressionStatement	"r_cons_printf ( ""e asm.arch=%s\\n"" , info -> arch )"	727:4:20088:20133	701026	0	True				
ANR	701773	CallExpression	"r_cons_printf ( ""e asm.arch=%s\\n"" , info -> arch )"		701026	0					
ANR	701774	Callee	r_cons_printf		701026	0					
ANR	701775	Identifier	r_cons_printf		701026	0					
ANR	701776	ArgumentList	"""e asm.arch=%s\\n"""		701026	1					
ANR	701777	Argument	"""e asm.arch=%s\\n"""		701026	0					
ANR	701778	PrimaryExpression	"""e asm.arch=%s\\n"""		701026	0					
ANR	701779	Argument	info -> arch		701026	1					
ANR	701780	PtrMemberAccess	info -> arch		701026	0					
ANR	701781	Identifier	info		701026	0					
ANR	701782	Identifier	arch		701026	1					
ANR	701783	IfStatement	if ( info -> cpu && * info -> cpu )		701026	31					
ANR	701784	Condition	info -> cpu && * info -> cpu	729:7:20147:20169	701026	0	True				
ANR	701785	AndExpression	info -> cpu && * info -> cpu		701026	0		&&			
ANR	701786	PtrMemberAccess	info -> cpu		701026	0					
ANR	701787	Identifier	info		701026	0					
ANR	701788	Identifier	cpu		701026	1					
ANR	701789	UnaryOperationExpression	* info -> cpu		701026	1					
ANR	701790	UnaryOperator	*		701026	0					
ANR	701791	PtrMemberAccess	info -> cpu		701026	1					
ANR	701792	Identifier	info		701026	0					
ANR	701793	Identifier	cpu		701026	1					
ANR	701794	CompoundStatement		101:32:3173:3173	701026	1					
ANR	701795	ExpressionStatement	"r_cons_printf ( ""e asm.cpu=%s\\n"" , info -> cpu )"	730:4:20178:20221	701026	0	True				
ANR	701796	CallExpression	"r_cons_printf ( ""e asm.cpu=%s\\n"" , info -> cpu )"		701026	0					
ANR	701797	Callee	r_cons_printf		701026	0					
ANR	701798	Identifier	r_cons_printf		701026	0					
ANR	701799	ArgumentList	"""e asm.cpu=%s\\n"""		701026	1					
ANR	701800	Argument	"""e asm.cpu=%s\\n"""		701026	0					
ANR	701801	PrimaryExpression	"""e asm.cpu=%s\\n"""		701026	0					
ANR	701802	Argument	info -> cpu		701026	1					
ANR	701803	PtrMemberAccess	info -> cpu		701026	0					
ANR	701804	Identifier	info		701026	0					
ANR	701805	Identifier	cpu		701026	1					
ANR	701806	ExpressionStatement	"v = r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_ALIGN )"	732:3:20231:20283	701026	32	True				
ANR	701807	AssignmentExpression	"v = r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_ALIGN )"		701026	0		=			
ANR	701808	Identifier	v		701026	0					
ANR	701809	CallExpression	"r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_ALIGN )"		701026	1					
ANR	701810	Callee	r_anal_archinfo		701026	0					
ANR	701811	Identifier	r_anal_archinfo		701026	0					
ANR	701812	ArgumentList	r -> anal		701026	1					
ANR	701813	Argument	r -> anal		701026	0					
ANR	701814	PtrMemberAccess	r -> anal		701026	0					
ANR	701815	Identifier	r		701026	0					
ANR	701816	Identifier	anal		701026	1					
ANR	701817	Argument	R_ANAL_ARCHINFO_ALIGN		701026	1					
ANR	701818	Identifier	R_ANAL_ARCHINFO_ALIGN		701026	0					
ANR	701819	IfStatement	if ( v != - 1 )		701026	33					
ANR	701820	Condition	v != - 1	733:7:20292:20298	701026	0	True				
ANR	701821	EqualityExpression	v != - 1		701026	0		!=			
ANR	701822	Identifier	v		701026	0					
ANR	701823	UnaryOperationExpression	- 1		701026	1					
ANR	701824	UnaryOperator	-		701026	0					
ANR	701825	PrimaryExpression	1		701026	1					
ANR	701826	CompoundStatement		105:16:3302:3302	701026	1					
ANR	701827	ExpressionStatement	"r_cons_printf ( ""e asm.pcalign=%d\\n"" , v )"	734:4:20307:20346	701026	0	True				
ANR	701828	CallExpression	"r_cons_printf ( ""e asm.pcalign=%d\\n"" , v )"		701026	0					
ANR	701829	Callee	r_cons_printf		701026	0					
ANR	701830	Identifier	r_cons_printf		701026	0					
ANR	701831	ArgumentList	"""e asm.pcalign=%d\\n"""		701026	1					
ANR	701832	Argument	"""e asm.pcalign=%d\\n"""		701026	0					
ANR	701833	PrimaryExpression	"""e asm.pcalign=%d\\n"""		701026	0					
ANR	701834	Argument	v		701026	1					
ANR	701835	Identifier	v		701026	0					
ANR	701836	ElseStatement	else		701026	0					
ANR	701837	CompoundStatement		175:2:5916:5963	701026	0					
ANR	701838	IdentifierDeclStatement	char * tmp_buf ;	739:2:20421:20434	701026	0	True				
ANR	701839	IdentifierDecl	* tmp_buf		701026	0					
ANR	701840	IdentifierDeclType	char *		701026	0					
ANR	701841	Identifier	tmp_buf		701026	1					
ANR	701842	IfStatement	if ( IS_MODE_JSON ( mode ) )		701026	1					
ANR	701843	Condition	IS_MODE_JSON ( mode )	740:6:20442:20460	701026	0	True				
ANR	701844	CallExpression	IS_MODE_JSON ( mode )		701026	0					
ANR	701845	Callee	IS_MODE_JSON		701026	0					
ANR	701846	Identifier	IS_MODE_JSON		701026	0					
ANR	701847	ArgumentList	mode		701026	1					
ANR	701848	Argument	mode		701026	0					
ANR	701849	Identifier	mode		701026	0					
ANR	701850	CompoundStatement		112:27:3464:3464	701026	1					
ANR	701851	ExpressionStatement	"r_cons_printf ( ""{"" )"	741:3:20468:20487	701026	0	True				
ANR	701852	CallExpression	"r_cons_printf ( ""{"" )"		701026	0					
ANR	701853	Callee	r_cons_printf		701026	0					
ANR	701854	Identifier	r_cons_printf		701026	0					
ANR	701855	ArgumentList	"""{"""		701026	1					
ANR	701856	Argument	"""{"""		701026	0					
ANR	701857	PrimaryExpression	"""{"""		701026	0					
ANR	701858	ExpressionStatement	"pair_str ( ""arch"" , info -> arch , mode , false )"	743:2:20495:20537	701026	2	True				
ANR	701859	CallExpression	"pair_str ( ""arch"" , info -> arch , mode , false )"		701026	0					
ANR	701860	Callee	pair_str		701026	0					
ANR	701861	Identifier	pair_str		701026	0					
ANR	701862	ArgumentList	"""arch"""		701026	1					
ANR	701863	Argument	"""arch"""		701026	0					
ANR	701864	PrimaryExpression	"""arch"""		701026	0					
ANR	701865	Argument	info -> arch		701026	1					
ANR	701866	PtrMemberAccess	info -> arch		701026	0					
ANR	701867	Identifier	info		701026	0					
ANR	701868	Identifier	arch		701026	1					
ANR	701869	Argument	mode		701026	2					
ANR	701870	Identifier	mode		701026	0					
ANR	701871	Argument	false		701026	3					
ANR	701872	Identifier	false		701026	0					
ANR	701873	IfStatement	if ( info -> cpu && * info -> cpu )		701026	3					
ANR	701874	Condition	info -> cpu && * info -> cpu	744:6:20545:20567	701026	0	True				
ANR	701875	AndExpression	info -> cpu && * info -> cpu		701026	0		&&			
ANR	701876	PtrMemberAccess	info -> cpu		701026	0					
ANR	701877	Identifier	info		701026	0					
ANR	701878	Identifier	cpu		701026	1					
ANR	701879	UnaryOperationExpression	* info -> cpu		701026	1					
ANR	701880	UnaryOperator	*		701026	0					
ANR	701881	PtrMemberAccess	info -> cpu		701026	1					
ANR	701882	Identifier	info		701026	0					
ANR	701883	Identifier	cpu		701026	1					
ANR	701884	CompoundStatement		116:31:3571:3571	701026	1					
ANR	701885	ExpressionStatement	"pair_str ( ""cpu"" , info -> cpu , mode , false )"	745:3:20575:20615	701026	0	True				
ANR	701886	CallExpression	"pair_str ( ""cpu"" , info -> cpu , mode , false )"		701026	0					
ANR	701887	Callee	pair_str		701026	0					
ANR	701888	Identifier	pair_str		701026	0					
ANR	701889	ArgumentList	"""cpu"""		701026	1					
ANR	701890	Argument	"""cpu"""		701026	0					
ANR	701891	PrimaryExpression	"""cpu"""		701026	0					
ANR	701892	Argument	info -> cpu		701026	1					
ANR	701893	PtrMemberAccess	info -> cpu		701026	0					
ANR	701894	Identifier	info		701026	0					
ANR	701895	Identifier	cpu		701026	1					
ANR	701896	Argument	mode		701026	2					
ANR	701897	Identifier	mode		701026	0					
ANR	701898	Argument	false		701026	3					
ANR	701899	Identifier	false		701026	0					
ANR	701900	ExpressionStatement	"pair_ut64x ( ""baddr"" , r_bin_get_baddr ( r -> bin ) , mode , false )"	747:2:20623:20682	701026	4	True				
ANR	701901	CallExpression	"pair_ut64x ( ""baddr"" , r_bin_get_baddr ( r -> bin ) , mode , false )"		701026	0					
ANR	701902	Callee	pair_ut64x		701026	0					
ANR	701903	Identifier	pair_ut64x		701026	0					
ANR	701904	ArgumentList	"""baddr"""		701026	1					
ANR	701905	Argument	"""baddr"""		701026	0					
ANR	701906	PrimaryExpression	"""baddr"""		701026	0					
ANR	701907	Argument	r_bin_get_baddr ( r -> bin )		701026	1					
ANR	701908	CallExpression	r_bin_get_baddr ( r -> bin )		701026	0					
ANR	701909	Callee	r_bin_get_baddr		701026	0					
ANR	701910	Identifier	r_bin_get_baddr		701026	0					
ANR	701911	ArgumentList	r -> bin		701026	1					
ANR	701912	Argument	r -> bin		701026	0					
ANR	701913	PtrMemberAccess	r -> bin		701026	0					
ANR	701914	Identifier	r		701026	0					
ANR	701915	Identifier	bin		701026	1					
ANR	701916	Argument	mode		701026	2					
ANR	701917	Identifier	mode		701026	0					
ANR	701918	Argument	false		701026	3					
ANR	701919	Identifier	false		701026	0					
ANR	701920	ExpressionStatement	"pair_ut64 ( ""binsz"" , r_bin_get_size ( r -> bin ) , mode , false )"	748:2:20686:20743	701026	5	True				
ANR	701921	CallExpression	"pair_ut64 ( ""binsz"" , r_bin_get_size ( r -> bin ) , mode , false )"		701026	0					
ANR	701922	Callee	pair_ut64		701026	0					
ANR	701923	Identifier	pair_ut64		701026	0					
ANR	701924	ArgumentList	"""binsz"""		701026	1					
ANR	701925	Argument	"""binsz"""		701026	0					
ANR	701926	PrimaryExpression	"""binsz"""		701026	0					
ANR	701927	Argument	r_bin_get_size ( r -> bin )		701026	1					
ANR	701928	CallExpression	r_bin_get_size ( r -> bin )		701026	0					
ANR	701929	Callee	r_bin_get_size		701026	0					
ANR	701930	Identifier	r_bin_get_size		701026	0					
ANR	701931	ArgumentList	r -> bin		701026	1					
ANR	701932	Argument	r -> bin		701026	0					
ANR	701933	PtrMemberAccess	r -> bin		701026	0					
ANR	701934	Identifier	r		701026	0					
ANR	701935	Identifier	bin		701026	1					
ANR	701936	Argument	mode		701026	2					
ANR	701937	Identifier	mode		701026	0					
ANR	701938	Argument	false		701026	3					
ANR	701939	Identifier	false		701026	0					
ANR	701940	ExpressionStatement	"pair_str ( ""bintype"" , info -> rclass , mode , false )"	749:2:20747:20794	701026	6	True				
ANR	701941	CallExpression	"pair_str ( ""bintype"" , info -> rclass , mode , false )"		701026	0					
ANR	701942	Callee	pair_str		701026	0					
ANR	701943	Identifier	pair_str		701026	0					
ANR	701944	ArgumentList	"""bintype"""		701026	1					
ANR	701945	Argument	"""bintype"""		701026	0					
ANR	701946	PrimaryExpression	"""bintype"""		701026	0					
ANR	701947	Argument	info -> rclass		701026	1					
ANR	701948	PtrMemberAccess	info -> rclass		701026	0					
ANR	701949	Identifier	info		701026	0					
ANR	701950	Identifier	rclass		701026	1					
ANR	701951	Argument	mode		701026	2					
ANR	701952	Identifier	mode		701026	0					
ANR	701953	Argument	false		701026	3					
ANR	701954	Identifier	false		701026	0					
ANR	701955	ExpressionStatement	"pair_int ( ""bits"" , info -> bits , mode , false )"	750:2:20798:20840	701026	7	True				
ANR	701956	CallExpression	"pair_int ( ""bits"" , info -> bits , mode , false )"		701026	0					
ANR	701957	Callee	pair_int		701026	0					
ANR	701958	Identifier	pair_int		701026	0					
ANR	701959	ArgumentList	"""bits"""		701026	1					
ANR	701960	Argument	"""bits"""		701026	0					
ANR	701961	PrimaryExpression	"""bits"""		701026	0					
ANR	701962	Argument	info -> bits		701026	1					
ANR	701963	PtrMemberAccess	info -> bits		701026	0					
ANR	701964	Identifier	info		701026	0					
ANR	701965	Identifier	bits		701026	1					
ANR	701966	Argument	mode		701026	2					
ANR	701967	Identifier	mode		701026	0					
ANR	701968	Argument	false		701026	3					
ANR	701969	Identifier	false		701026	0					
ANR	701970	ExpressionStatement	"pair_bool ( ""canary"" , info -> has_canary , mode , false )"	751:2:20844:20895	701026	8	True				
ANR	701971	CallExpression	"pair_bool ( ""canary"" , info -> has_canary , mode , false )"		701026	0					
ANR	701972	Callee	pair_bool		701026	0					
ANR	701973	Identifier	pair_bool		701026	0					
ANR	701974	ArgumentList	"""canary"""		701026	1					
ANR	701975	Argument	"""canary"""		701026	0					
ANR	701976	PrimaryExpression	"""canary"""		701026	0					
ANR	701977	Argument	info -> has_canary		701026	1					
ANR	701978	PtrMemberAccess	info -> has_canary		701026	0					
ANR	701979	Identifier	info		701026	0					
ANR	701980	Identifier	has_canary		701026	1					
ANR	701981	Argument	mode		701026	2					
ANR	701982	Identifier	mode		701026	0					
ANR	701983	Argument	false		701026	3					
ANR	701984	Identifier	false		701026	0					
ANR	701985	IfStatement	if ( info -> has_retguard != - 1 )		701026	9					
ANR	701986	Condition	info -> has_retguard != - 1	752:6:20903:20926	701026	0	True				
ANR	701987	EqualityExpression	info -> has_retguard != - 1		701026	0		!=			
ANR	701988	PtrMemberAccess	info -> has_retguard		701026	0					
ANR	701989	Identifier	info		701026	0					
ANR	701990	Identifier	has_retguard		701026	1					
ANR	701991	UnaryOperationExpression	- 1		701026	1					
ANR	701992	UnaryOperator	-		701026	0					
ANR	701993	PrimaryExpression	1		701026	1					
ANR	701994	CompoundStatement		124:32:3930:3930	701026	1					
ANR	701995	ExpressionStatement	"pair_bool ( ""retguard"" , info -> has_retguard , mode , false )"	753:3:20934:20989	701026	0	True				
ANR	701996	CallExpression	"pair_bool ( ""retguard"" , info -> has_retguard , mode , false )"		701026	0					
ANR	701997	Callee	pair_bool		701026	0					
ANR	701998	Identifier	pair_bool		701026	0					
ANR	701999	ArgumentList	"""retguard"""		701026	1					
ANR	702000	Argument	"""retguard"""		701026	0					
ANR	702001	PrimaryExpression	"""retguard"""		701026	0					
ANR	702002	Argument	info -> has_retguard		701026	1					
ANR	702003	PtrMemberAccess	info -> has_retguard		701026	0					
ANR	702004	Identifier	info		701026	0					
ANR	702005	Identifier	has_retguard		701026	1					
ANR	702006	Argument	mode		701026	2					
ANR	702007	Identifier	mode		701026	0					
ANR	702008	Argument	false		701026	3					
ANR	702009	Identifier	false		701026	0					
ANR	702010	ExpressionStatement	"pair_str ( ""class"" , info -> bclass , mode , false )"	755:2:20997:21042	701026	10	True				
ANR	702011	CallExpression	"pair_str ( ""class"" , info -> bclass , mode , false )"		701026	0					
ANR	702012	Callee	pair_str		701026	0					
ANR	702013	Identifier	pair_str		701026	0					
ANR	702014	ArgumentList	"""class"""		701026	1					
ANR	702015	Argument	"""class"""		701026	0					
ANR	702016	PrimaryExpression	"""class"""		701026	0					
ANR	702017	Argument	info -> bclass		701026	1					
ANR	702018	PtrMemberAccess	info -> bclass		701026	0					
ANR	702019	Identifier	info		701026	0					
ANR	702020	Identifier	bclass		701026	1					
ANR	702021	Argument	mode		701026	2					
ANR	702022	Identifier	mode		701026	0					
ANR	702023	Argument	false		701026	3					
ANR	702024	Identifier	false		701026	0					
ANR	702025	IfStatement	if ( info -> actual_checksum )		701026	11					
ANR	702026	Condition	info -> actual_checksum	756:6:21050:21070	701026	0	True				
ANR	702027	PtrMemberAccess	info -> actual_checksum		701026	0					
ANR	702028	Identifier	info		701026	0					
ANR	702029	Identifier	actual_checksum		701026	1					
ANR	702030	CompoundStatement		128:29:4074:4074	701026	1					
ANR	702031	ExpressionStatement	"pair_str ( ""cmp.csum"" , info -> actual_checksum , mode , false )"	758:3:21105:21162	701026	0	True				
ANR	702032	CallExpression	"pair_str ( ""cmp.csum"" , info -> actual_checksum , mode , false )"		701026	0					
ANR	702033	Callee	pair_str		701026	0					
ANR	702034	Identifier	pair_str		701026	0					
ANR	702035	ArgumentList	"""cmp.csum"""		701026	1					
ANR	702036	Argument	"""cmp.csum"""		701026	0					
ANR	702037	PrimaryExpression	"""cmp.csum"""		701026	0					
ANR	702038	Argument	info -> actual_checksum		701026	1					
ANR	702039	PtrMemberAccess	info -> actual_checksum		701026	0					
ANR	702040	Identifier	info		701026	0					
ANR	702041	Identifier	actual_checksum		701026	1					
ANR	702042	Argument	mode		701026	2					
ANR	702043	Identifier	mode		701026	0					
ANR	702044	Argument	false		701026	3					
ANR	702045	Identifier	false		701026	0					
ANR	702046	ExpressionStatement	"pair_str ( ""compiled"" , compiled , mode , false )"	760:2:21170:21214	701026	12	True				
ANR	702047	CallExpression	"pair_str ( ""compiled"" , compiled , mode , false )"		701026	0					
ANR	702048	Callee	pair_str		701026	0					
ANR	702049	Identifier	pair_str		701026	0					
ANR	702050	ArgumentList	"""compiled"""		701026	1					
ANR	702051	Argument	"""compiled"""		701026	0					
ANR	702052	PrimaryExpression	"""compiled"""		701026	0					
ANR	702053	Argument	compiled		701026	1					
ANR	702054	Identifier	compiled		701026	0					
ANR	702055	Argument	mode		701026	2					
ANR	702056	Identifier	mode		701026	0					
ANR	702057	Argument	false		701026	3					
ANR	702058	Identifier	false		701026	0					
ANR	702059	ExpressionStatement	"pair_str ( ""compiler"" , info -> compiler , mode , false )"	761:2:21218:21268	701026	13	True				
ANR	702060	CallExpression	"pair_str ( ""compiler"" , info -> compiler , mode , false )"		701026	0					
ANR	702061	Callee	pair_str		701026	0					
ANR	702062	Identifier	pair_str		701026	0					
ANR	702063	ArgumentList	"""compiler"""		701026	1					
ANR	702064	Argument	"""compiler"""		701026	0					
ANR	702065	PrimaryExpression	"""compiler"""		701026	0					
ANR	702066	Argument	info -> compiler		701026	1					
ANR	702067	PtrMemberAccess	info -> compiler		701026	0					
ANR	702068	Identifier	info		701026	0					
ANR	702069	Identifier	compiler		701026	1					
ANR	702070	Argument	mode		701026	2					
ANR	702071	Identifier	mode		701026	0					
ANR	702072	Argument	false		701026	3					
ANR	702073	Identifier	false		701026	0					
ANR	702074	ExpressionStatement	"pair_bool ( ""crypto"" , info -> has_crypto , mode , false )"	762:2:21272:21323	701026	14	True				
ANR	702075	CallExpression	"pair_bool ( ""crypto"" , info -> has_crypto , mode , false )"		701026	0					
ANR	702076	Callee	pair_bool		701026	0					
ANR	702077	Identifier	pair_bool		701026	0					
ANR	702078	ArgumentList	"""crypto"""		701026	1					
ANR	702079	Argument	"""crypto"""		701026	0					
ANR	702080	PrimaryExpression	"""crypto"""		701026	0					
ANR	702081	Argument	info -> has_crypto		701026	1					
ANR	702082	PtrMemberAccess	info -> has_crypto		701026	0					
ANR	702083	Identifier	info		701026	0					
ANR	702084	Identifier	has_crypto		701026	1					
ANR	702085	Argument	mode		701026	2					
ANR	702086	Identifier	mode		701026	0					
ANR	702087	Argument	false		701026	3					
ANR	702088	Identifier	false		701026	0					
ANR	702089	ExpressionStatement	"pair_str ( ""dbg_file"" , info -> debug_file_name , mode , false )"	763:2:21327:21384	701026	15	True				
ANR	702090	CallExpression	"pair_str ( ""dbg_file"" , info -> debug_file_name , mode , false )"		701026	0					
ANR	702091	Callee	pair_str		701026	0					
ANR	702092	Identifier	pair_str		701026	0					
ANR	702093	ArgumentList	"""dbg_file"""		701026	1					
ANR	702094	Argument	"""dbg_file"""		701026	0					
ANR	702095	PrimaryExpression	"""dbg_file"""		701026	0					
ANR	702096	Argument	info -> debug_file_name		701026	1					
ANR	702097	PtrMemberAccess	info -> debug_file_name		701026	0					
ANR	702098	Identifier	info		701026	0					
ANR	702099	Identifier	debug_file_name		701026	1					
ANR	702100	Argument	mode		701026	2					
ANR	702101	Identifier	mode		701026	0					
ANR	702102	Argument	false		701026	3					
ANR	702103	Identifier	false		701026	0					
ANR	702104	ExpressionStatement	"pair_str ( ""endian"" , info -> big_endian ? ""big"" : ""little"" , mode , false )"	764:2:21388:21457	701026	16	True				
ANR	702105	CallExpression	"pair_str ( ""endian"" , info -> big_endian ? ""big"" : ""little"" , mode , false )"		701026	0					
ANR	702106	Callee	pair_str		701026	0					
ANR	702107	Identifier	pair_str		701026	0					
ANR	702108	ArgumentList	"""endian"""		701026	1					
ANR	702109	Argument	"""endian"""		701026	0					
ANR	702110	PrimaryExpression	"""endian"""		701026	0					
ANR	702111	Argument	"info -> big_endian ? ""big"" : ""little"""		701026	1					
ANR	702112	ConditionalExpression	"info -> big_endian ? ""big"" : ""little"""		701026	0					
ANR	702113	Condition	info -> big_endian		701026	0					
ANR	702114	PtrMemberAccess	info -> big_endian		701026	0					
ANR	702115	Identifier	info		701026	0					
ANR	702116	Identifier	big_endian		701026	1					
ANR	702117	PrimaryExpression	"""big"""		701026	1					
ANR	702118	PrimaryExpression	"""little"""		701026	2					
ANR	702119	Argument	mode		701026	2					
ANR	702120	Identifier	mode		701026	0					
ANR	702121	Argument	false		701026	3					
ANR	702122	Identifier	false		701026	0					
ANR	702123	IfStatement	"if ( info -> rclass && ! strcmp ( info -> rclass , ""mdmp"" ) )"		701026	17					
ANR	702124	Condition	"info -> rclass && ! strcmp ( info -> rclass , ""mdmp"" )"	765:6:21465:21510	701026	0	True				
ANR	702125	AndExpression	"info -> rclass && ! strcmp ( info -> rclass , ""mdmp"" )"		701026	0		&&			
ANR	702126	PtrMemberAccess	info -> rclass		701026	0					
ANR	702127	Identifier	info		701026	0					
ANR	702128	Identifier	rclass		701026	1					
ANR	702129	UnaryOperationExpression	"! strcmp ( info -> rclass , ""mdmp"" )"		701026	1					
ANR	702130	UnaryOperator	!		701026	0					
ANR	702131	CallExpression	"strcmp ( info -> rclass , ""mdmp"" )"		701026	1					
ANR	702132	Callee	strcmp		701026	0					
ANR	702133	Identifier	strcmp		701026	0					
ANR	702134	ArgumentList	info -> rclass		701026	1					
ANR	702135	Argument	info -> rclass		701026	0					
ANR	702136	PtrMemberAccess	info -> rclass		701026	0					
ANR	702137	Identifier	info		701026	0					
ANR	702138	Identifier	rclass		701026	1					
ANR	702139	Argument	"""mdmp"""		701026	1					
ANR	702140	PrimaryExpression	"""mdmp"""		701026	0					
ANR	702141	CompoundStatement		137:54:4514:4514	701026	1					
ANR	702142	ExpressionStatement	"tmp_buf = sdb_get ( bf -> sdb , ""mdmp.flags"" , 0 )"	766:3:21518:21562	701026	0	True				
ANR	702143	AssignmentExpression	"tmp_buf = sdb_get ( bf -> sdb , ""mdmp.flags"" , 0 )"		701026	0		=			
ANR	702144	Identifier	tmp_buf		701026	0					
ANR	702145	CallExpression	"sdb_get ( bf -> sdb , ""mdmp.flags"" , 0 )"		701026	1					
ANR	702146	Callee	sdb_get		701026	0					
ANR	702147	Identifier	sdb_get		701026	0					
ANR	702148	ArgumentList	bf -> sdb		701026	1					
ANR	702149	Argument	bf -> sdb		701026	0					
ANR	702150	PtrMemberAccess	bf -> sdb		701026	0					
ANR	702151	Identifier	bf		701026	0					
ANR	702152	Identifier	sdb		701026	1					
ANR	702153	Argument	"""mdmp.flags"""		701026	1					
ANR	702154	PrimaryExpression	"""mdmp.flags"""		701026	0					
ANR	702155	Argument	0		701026	2					
ANR	702156	PrimaryExpression	0		701026	0					
ANR	702157	IfStatement	if ( tmp_buf )		701026	1					
ANR	702158	Condition	tmp_buf	767:7:21571:21577	701026	0	True				
ANR	702159	Identifier	tmp_buf		701026	0					
ANR	702160	CompoundStatement		139:16:4581:4581	701026	1					
ANR	702161	ExpressionStatement	"pair_str ( ""flags"" , tmp_buf , mode , false )"	768:4:21586:21626	701026	0	True				
ANR	702162	CallExpression	"pair_str ( ""flags"" , tmp_buf , mode , false )"		701026	0					
ANR	702163	Callee	pair_str		701026	0					
ANR	702164	Identifier	pair_str		701026	0					
ANR	702165	ArgumentList	"""flags"""		701026	1					
ANR	702166	Argument	"""flags"""		701026	0					
ANR	702167	PrimaryExpression	"""flags"""		701026	0					
ANR	702168	Argument	tmp_buf		701026	1					
ANR	702169	Identifier	tmp_buf		701026	0					
ANR	702170	Argument	mode		701026	2					
ANR	702171	Identifier	mode		701026	0					
ANR	702172	Argument	false		701026	3					
ANR	702173	Identifier	false		701026	0					
ANR	702174	ExpressionStatement	free ( tmp_buf )	769:4:21632:21646	701026	1	True				
ANR	702175	CallExpression	free ( tmp_buf )		701026	0					
ANR	702176	Callee	free		701026	0					
ANR	702177	Identifier	free		701026	0					
ANR	702178	ArgumentList	tmp_buf		701026	1					
ANR	702179	Argument	tmp_buf		701026	0					
ANR	702180	Identifier	tmp_buf		701026	0					
ANR	702181	ExpressionStatement	"pair_bool ( ""havecode"" , havecode , mode , false )"	772:2:21659:21704	701026	18	True				
ANR	702182	CallExpression	"pair_bool ( ""havecode"" , havecode , mode , false )"		701026	0					
ANR	702183	Callee	pair_bool		701026	0					
ANR	702184	Identifier	pair_bool		701026	0					
ANR	702185	ArgumentList	"""havecode"""		701026	1					
ANR	702186	Argument	"""havecode"""		701026	0					
ANR	702187	PrimaryExpression	"""havecode"""		701026	0					
ANR	702188	Argument	havecode		701026	1					
ANR	702189	Identifier	havecode		701026	0					
ANR	702190	Argument	mode		701026	2					
ANR	702191	Identifier	mode		701026	0					
ANR	702192	Argument	false		701026	3					
ANR	702193	Identifier	false		701026	0					
ANR	702194	IfStatement	if ( info -> claimed_checksum )		701026	19					
ANR	702195	Condition	info -> claimed_checksum	773:6:21712:21733	701026	0	True				
ANR	702196	PtrMemberAccess	info -> claimed_checksum		701026	0					
ANR	702197	Identifier	info		701026	0					
ANR	702198	Identifier	claimed_checksum		701026	1					
ANR	702199	CompoundStatement		145:30:4737:4737	701026	1					
ANR	702200	ExpressionStatement	"pair_str ( ""hdr.csum"" , info -> claimed_checksum , mode , false )"	775:3:21779:21837	701026	0	True				
ANR	702201	CallExpression	"pair_str ( ""hdr.csum"" , info -> claimed_checksum , mode , false )"		701026	0					
ANR	702202	Callee	pair_str		701026	0					
ANR	702203	Identifier	pair_str		701026	0					
ANR	702204	ArgumentList	"""hdr.csum"""		701026	1					
ANR	702205	Argument	"""hdr.csum"""		701026	0					
ANR	702206	PrimaryExpression	"""hdr.csum"""		701026	0					
ANR	702207	Argument	info -> claimed_checksum		701026	1					
ANR	702208	PtrMemberAccess	info -> claimed_checksum		701026	0					
ANR	702209	Identifier	info		701026	0					
ANR	702210	Identifier	claimed_checksum		701026	1					
ANR	702211	Argument	mode		701026	2					
ANR	702212	Identifier	mode		701026	0					
ANR	702213	Argument	false		701026	3					
ANR	702214	Identifier	false		701026	0					
ANR	702215	ExpressionStatement	"pair_str ( ""guid"" , info -> guid , mode , false )"	777:2:21845:21887	701026	20	True				
ANR	702216	CallExpression	"pair_str ( ""guid"" , info -> guid , mode , false )"		701026	0					
ANR	702217	Callee	pair_str		701026	0					
ANR	702218	Identifier	pair_str		701026	0					
ANR	702219	ArgumentList	"""guid"""		701026	1					
ANR	702220	Argument	"""guid"""		701026	0					
ANR	702221	PrimaryExpression	"""guid"""		701026	0					
ANR	702222	Argument	info -> guid		701026	1					
ANR	702223	PtrMemberAccess	info -> guid		701026	0					
ANR	702224	Identifier	info		701026	0					
ANR	702225	Identifier	guid		701026	1					
ANR	702226	Argument	mode		701026	2					
ANR	702227	Identifier	mode		701026	0					
ANR	702228	Argument	false		701026	3					
ANR	702229	Identifier	false		701026	0					
ANR	702230	ExpressionStatement	"pair_str ( ""intrp"" , info -> intrp , mode , false )"	778:2:21891:21935	701026	21	True				
ANR	702231	CallExpression	"pair_str ( ""intrp"" , info -> intrp , mode , false )"		701026	0					
ANR	702232	Callee	pair_str		701026	0					
ANR	702233	Identifier	pair_str		701026	0					
ANR	702234	ArgumentList	"""intrp"""		701026	1					
ANR	702235	Argument	"""intrp"""		701026	0					
ANR	702236	PrimaryExpression	"""intrp"""		701026	0					
ANR	702237	Argument	info -> intrp		701026	1					
ANR	702238	PtrMemberAccess	info -> intrp		701026	0					
ANR	702239	Identifier	info		701026	0					
ANR	702240	Identifier	intrp		701026	1					
ANR	702241	Argument	mode		701026	2					
ANR	702242	Identifier	mode		701026	0					
ANR	702243	Argument	false		701026	3					
ANR	702244	Identifier	false		701026	0					
ANR	702245	ExpressionStatement	"pair_ut64x ( ""laddr"" , laddr , mode , false )"	779:2:21939:21979	701026	22	True				
ANR	702246	CallExpression	"pair_ut64x ( ""laddr"" , laddr , mode , false )"		701026	0					
ANR	702247	Callee	pair_ut64x		701026	0					
ANR	702248	Identifier	pair_ut64x		701026	0					
ANR	702249	ArgumentList	"""laddr"""		701026	1					
ANR	702250	Argument	"""laddr"""		701026	0					
ANR	702251	PrimaryExpression	"""laddr"""		701026	0					
ANR	702252	Argument	laddr		701026	1					
ANR	702253	Identifier	laddr		701026	0					
ANR	702254	Argument	mode		701026	2					
ANR	702255	Identifier	mode		701026	0					
ANR	702256	Argument	false		701026	3					
ANR	702257	Identifier	false		701026	0					
ANR	702258	ExpressionStatement	"pair_str ( ""lang"" , info -> lang , mode , false )"	780:2:21983:22025	701026	23	True				
ANR	702259	CallExpression	"pair_str ( ""lang"" , info -> lang , mode , false )"		701026	0					
ANR	702260	Callee	pair_str		701026	0					
ANR	702261	Identifier	pair_str		701026	0					
ANR	702262	ArgumentList	"""lang"""		701026	1					
ANR	702263	Argument	"""lang"""		701026	0					
ANR	702264	PrimaryExpression	"""lang"""		701026	0					
ANR	702265	Argument	info -> lang		701026	1					
ANR	702266	PtrMemberAccess	info -> lang		701026	0					
ANR	702267	Identifier	info		701026	0					
ANR	702268	Identifier	lang		701026	1					
ANR	702269	Argument	mode		701026	2					
ANR	702270	Identifier	mode		701026	0					
ANR	702271	Argument	false		701026	3					
ANR	702272	Identifier	false		701026	0					
ANR	702273	ExpressionStatement	"pair_bool ( ""linenum"" , R_BIN_DBG_LINENUMS & info -> dbg_info , mode , false )"	781:2:22029:22100	701026	24	True				
ANR	702274	CallExpression	"pair_bool ( ""linenum"" , R_BIN_DBG_LINENUMS & info -> dbg_info , mode , false )"		701026	0					
ANR	702275	Callee	pair_bool		701026	0					
ANR	702276	Identifier	pair_bool		701026	0					
ANR	702277	ArgumentList	"""linenum"""		701026	1					
ANR	702278	Argument	"""linenum"""		701026	0					
ANR	702279	PrimaryExpression	"""linenum"""		701026	0					
ANR	702280	Argument	R_BIN_DBG_LINENUMS & info -> dbg_info		701026	1					
ANR	702281	BitAndExpression	R_BIN_DBG_LINENUMS & info -> dbg_info		701026	0		&			
ANR	702282	Identifier	R_BIN_DBG_LINENUMS		701026	0					
ANR	702283	PtrMemberAccess	info -> dbg_info		701026	1					
ANR	702284	Identifier	info		701026	0					
ANR	702285	Identifier	dbg_info		701026	1					
ANR	702286	Argument	mode		701026	2					
ANR	702287	Identifier	mode		701026	0					
ANR	702288	Argument	false		701026	3					
ANR	702289	Identifier	false		701026	0					
ANR	702290	ExpressionStatement	"pair_bool ( ""lsyms"" , R_BIN_DBG_SYMS & info -> dbg_info , mode , false )"	782:2:22104:22169	701026	25	True				
ANR	702291	CallExpression	"pair_bool ( ""lsyms"" , R_BIN_DBG_SYMS & info -> dbg_info , mode , false )"		701026	0					
ANR	702292	Callee	pair_bool		701026	0					
ANR	702293	Identifier	pair_bool		701026	0					
ANR	702294	ArgumentList	"""lsyms"""		701026	1					
ANR	702295	Argument	"""lsyms"""		701026	0					
ANR	702296	PrimaryExpression	"""lsyms"""		701026	0					
ANR	702297	Argument	R_BIN_DBG_SYMS & info -> dbg_info		701026	1					
ANR	702298	BitAndExpression	R_BIN_DBG_SYMS & info -> dbg_info		701026	0		&			
ANR	702299	Identifier	R_BIN_DBG_SYMS		701026	0					
ANR	702300	PtrMemberAccess	info -> dbg_info		701026	1					
ANR	702301	Identifier	info		701026	0					
ANR	702302	Identifier	dbg_info		701026	1					
ANR	702303	Argument	mode		701026	2					
ANR	702304	Identifier	mode		701026	0					
ANR	702305	Argument	false		701026	3					
ANR	702306	Identifier	false		701026	0					
ANR	702307	ExpressionStatement	"pair_str ( ""machine"" , info -> machine , mode , false )"	783:2:22173:22221	701026	26	True				
ANR	702308	CallExpression	"pair_str ( ""machine"" , info -> machine , mode , false )"		701026	0					
ANR	702309	Callee	pair_str		701026	0					
ANR	702310	Identifier	pair_str		701026	0					
ANR	702311	ArgumentList	"""machine"""		701026	1					
ANR	702312	Argument	"""machine"""		701026	0					
ANR	702313	PrimaryExpression	"""machine"""		701026	0					
ANR	702314	Argument	info -> machine		701026	1					
ANR	702315	PtrMemberAccess	info -> machine		701026	0					
ANR	702316	Identifier	info		701026	0					
ANR	702317	Identifier	machine		701026	1					
ANR	702318	Argument	mode		701026	2					
ANR	702319	Identifier	mode		701026	0					
ANR	702320	Argument	false		701026	3					
ANR	702321	Identifier	false		701026	0					
ANR	702322	ExpressionStatement	"v = r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_MAX_OP_SIZE )"	784:2:22225:22283	701026	27	True				
ANR	702323	AssignmentExpression	"v = r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_MAX_OP_SIZE )"		701026	0		=			
ANR	702324	Identifier	v		701026	0					
ANR	702325	CallExpression	"r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_MAX_OP_SIZE )"		701026	1					
ANR	702326	Callee	r_anal_archinfo		701026	0					
ANR	702327	Identifier	r_anal_archinfo		701026	0					
ANR	702328	ArgumentList	r -> anal		701026	1					
ANR	702329	Argument	r -> anal		701026	0					
ANR	702330	PtrMemberAccess	r -> anal		701026	0					
ANR	702331	Identifier	r		701026	0					
ANR	702332	Identifier	anal		701026	1					
ANR	702333	Argument	R_ANAL_ARCHINFO_MAX_OP_SIZE		701026	1					
ANR	702334	Identifier	R_ANAL_ARCHINFO_MAX_OP_SIZE		701026	0					
ANR	702335	IfStatement	if ( v != - 1 )		701026	28					
ANR	702336	Condition	v != - 1	785:6:22291:22297	701026	0	True				
ANR	702337	EqualityExpression	v != - 1		701026	0		!=			
ANR	702338	Identifier	v		701026	0					
ANR	702339	UnaryOperationExpression	- 1		701026	1					
ANR	702340	UnaryOperator	-		701026	0					
ANR	702341	PrimaryExpression	1		701026	1					
ANR	702342	CompoundStatement		157:15:5301:5301	701026	1					
ANR	702343	ExpressionStatement	"pair_int ( ""maxopsz"" , v , mode , false )"	786:3:22305:22341	701026	0	True				
ANR	702344	CallExpression	"pair_int ( ""maxopsz"" , v , mode , false )"		701026	0					
ANR	702345	Callee	pair_int		701026	0					
ANR	702346	Identifier	pair_int		701026	0					
ANR	702347	ArgumentList	"""maxopsz"""		701026	1					
ANR	702348	Argument	"""maxopsz"""		701026	0					
ANR	702349	PrimaryExpression	"""maxopsz"""		701026	0					
ANR	702350	Argument	v		701026	1					
ANR	702351	Identifier	v		701026	0					
ANR	702352	Argument	mode		701026	2					
ANR	702353	Identifier	mode		701026	0					
ANR	702354	Argument	false		701026	3					
ANR	702355	Identifier	false		701026	0					
ANR	702356	ExpressionStatement	"v = r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"	788:2:22349:22407	701026	29	True				
ANR	702357	AssignmentExpression	"v = r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		701026	0		=			
ANR	702358	Identifier	v		701026	0					
ANR	702359	CallExpression	"r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		701026	1					
ANR	702360	Callee	r_anal_archinfo		701026	0					
ANR	702361	Identifier	r_anal_archinfo		701026	0					
ANR	702362	ArgumentList	r -> anal		701026	1					
ANR	702363	Argument	r -> anal		701026	0					
ANR	702364	PtrMemberAccess	r -> anal		701026	0					
ANR	702365	Identifier	r		701026	0					
ANR	702366	Identifier	anal		701026	1					
ANR	702367	Argument	R_ANAL_ARCHINFO_MIN_OP_SIZE		701026	1					
ANR	702368	Identifier	R_ANAL_ARCHINFO_MIN_OP_SIZE		701026	0					
ANR	702369	IfStatement	if ( v != - 1 )		701026	30					
ANR	702370	Condition	v != - 1	789:6:22415:22421	701026	0	True				
ANR	702371	EqualityExpression	v != - 1		701026	0		!=			
ANR	702372	Identifier	v		701026	0					
ANR	702373	UnaryOperationExpression	- 1		701026	1					
ANR	702374	UnaryOperator	-		701026	0					
ANR	702375	PrimaryExpression	1		701026	1					
ANR	702376	CompoundStatement		161:15:5425:5425	701026	1					
ANR	702377	ExpressionStatement	"pair_int ( ""minopsz"" , v , mode , false )"	790:3:22429:22465	701026	0	True				
ANR	702378	CallExpression	"pair_int ( ""minopsz"" , v , mode , false )"		701026	0					
ANR	702379	Callee	pair_int		701026	0					
ANR	702380	Identifier	pair_int		701026	0					
ANR	702381	ArgumentList	"""minopsz"""		701026	1					
ANR	702382	Argument	"""minopsz"""		701026	0					
ANR	702383	PrimaryExpression	"""minopsz"""		701026	0					
ANR	702384	Argument	v		701026	1					
ANR	702385	Identifier	v		701026	0					
ANR	702386	Argument	mode		701026	2					
ANR	702387	Identifier	mode		701026	0					
ANR	702388	Argument	false		701026	3					
ANR	702389	Identifier	false		701026	0					
ANR	702390	ExpressionStatement	"pair_bool ( ""nx"" , info -> has_nx , mode , false )"	792:2:22473:22516	701026	31	True				
ANR	702391	CallExpression	"pair_bool ( ""nx"" , info -> has_nx , mode , false )"		701026	0					
ANR	702392	Callee	pair_bool		701026	0					
ANR	702393	Identifier	pair_bool		701026	0					
ANR	702394	ArgumentList	"""nx"""		701026	1					
ANR	702395	Argument	"""nx"""		701026	0					
ANR	702396	PrimaryExpression	"""nx"""		701026	0					
ANR	702397	Argument	info -> has_nx		701026	1					
ANR	702398	PtrMemberAccess	info -> has_nx		701026	0					
ANR	702399	Identifier	info		701026	0					
ANR	702400	Identifier	has_nx		701026	1					
ANR	702401	Argument	mode		701026	2					
ANR	702402	Identifier	mode		701026	0					
ANR	702403	Argument	false		701026	3					
ANR	702404	Identifier	false		701026	0					
ANR	702405	ExpressionStatement	"pair_str ( ""os"" , info -> os , mode , false )"	793:2:22520:22558	701026	32	True				
ANR	702406	CallExpression	"pair_str ( ""os"" , info -> os , mode , false )"		701026	0					
ANR	702407	Callee	pair_str		701026	0					
ANR	702408	Identifier	pair_str		701026	0					
ANR	702409	ArgumentList	"""os"""		701026	1					
ANR	702410	Argument	"""os"""		701026	0					
ANR	702411	PrimaryExpression	"""os"""		701026	0					
ANR	702412	Argument	info -> os		701026	1					
ANR	702413	PtrMemberAccess	info -> os		701026	0					
ANR	702414	Identifier	info		701026	0					
ANR	702415	Identifier	os		701026	1					
ANR	702416	Argument	mode		701026	2					
ANR	702417	Identifier	mode		701026	0					
ANR	702418	Argument	false		701026	3					
ANR	702419	Identifier	false		701026	0					
ANR	702420	IfStatement	"if ( info -> rclass && ! strcmp ( info -> rclass , ""pe"" ) )"		701026	33					
ANR	702421	Condition	"info -> rclass && ! strcmp ( info -> rclass , ""pe"" )"	794:6:22566:22609	701026	0	True				
ANR	702422	AndExpression	"info -> rclass && ! strcmp ( info -> rclass , ""pe"" )"		701026	0		&&			
ANR	702423	PtrMemberAccess	info -> rclass		701026	0					
ANR	702424	Identifier	info		701026	0					
ANR	702425	Identifier	rclass		701026	1					
ANR	702426	UnaryOperationExpression	"! strcmp ( info -> rclass , ""pe"" )"		701026	1					
ANR	702427	UnaryOperator	!		701026	0					
ANR	702428	CallExpression	"strcmp ( info -> rclass , ""pe"" )"		701026	1					
ANR	702429	Callee	strcmp		701026	0					
ANR	702430	Identifier	strcmp		701026	0					
ANR	702431	ArgumentList	info -> rclass		701026	1					
ANR	702432	Argument	info -> rclass		701026	0					
ANR	702433	PtrMemberAccess	info -> rclass		701026	0					
ANR	702434	Identifier	info		701026	0					
ANR	702435	Identifier	rclass		701026	1					
ANR	702436	Argument	"""pe"""		701026	1					
ANR	702437	PrimaryExpression	"""pe"""		701026	0					
ANR	702438	CompoundStatement		166:52:5613:5613	701026	1					
ANR	702439	ExpressionStatement	"pair_bool ( ""overlay"" , info -> pe_overlay , mode , false )"	795:3:22617:22669	701026	0	True				
ANR	702440	CallExpression	"pair_bool ( ""overlay"" , info -> pe_overlay , mode , false )"		701026	0					
ANR	702441	Callee	pair_bool		701026	0					
ANR	702442	Identifier	pair_bool		701026	0					
ANR	702443	ArgumentList	"""overlay"""		701026	1					
ANR	702444	Argument	"""overlay"""		701026	0					
ANR	702445	PrimaryExpression	"""overlay"""		701026	0					
ANR	702446	Argument	info -> pe_overlay		701026	1					
ANR	702447	PtrMemberAccess	info -> pe_overlay		701026	0					
ANR	702448	Identifier	info		701026	0					
ANR	702449	Identifier	pe_overlay		701026	1					
ANR	702450	Argument	mode		701026	2					
ANR	702451	Identifier	mode		701026	0					
ANR	702452	Argument	false		701026	3					
ANR	702453	Identifier	false		701026	0					
ANR	702454	ExpressionStatement	"v = r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_ALIGN )"	797:2:22677:22729	701026	34	True				
ANR	702455	AssignmentExpression	"v = r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_ALIGN )"		701026	0		=			
ANR	702456	Identifier	v		701026	0					
ANR	702457	CallExpression	"r_anal_archinfo ( r -> anal , R_ANAL_ARCHINFO_ALIGN )"		701026	1					
ANR	702458	Callee	r_anal_archinfo		701026	0					
ANR	702459	Identifier	r_anal_archinfo		701026	0					
ANR	702460	ArgumentList	r -> anal		701026	1					
ANR	702461	Argument	r -> anal		701026	0					
ANR	702462	PtrMemberAccess	r -> anal		701026	0					
ANR	702463	Identifier	r		701026	0					
ANR	702464	Identifier	anal		701026	1					
ANR	702465	Argument	R_ANAL_ARCHINFO_ALIGN		701026	1					
ANR	702466	Identifier	R_ANAL_ARCHINFO_ALIGN		701026	0					
ANR	702467	IfStatement	if ( v != - 1 )		701026	35					
ANR	702468	Condition	v != - 1	798:6:22737:22743	701026	0	True				
ANR	702469	EqualityExpression	v != - 1		701026	0		!=			
ANR	702470	Identifier	v		701026	0					
ANR	702471	UnaryOperationExpression	- 1		701026	1					
ANR	702472	UnaryOperator	-		701026	0					
ANR	702473	PrimaryExpression	1		701026	1					
ANR	702474	CompoundStatement		170:15:5747:5747	701026	1					
ANR	702475	ExpressionStatement	"pair_int ( ""pcalign"" , v , mode , false )"	799:3:22751:22787	701026	0	True				
ANR	702476	CallExpression	"pair_int ( ""pcalign"" , v , mode , false )"		701026	0					
ANR	702477	Callee	pair_int		701026	0					
ANR	702478	Identifier	pair_int		701026	0					
ANR	702479	ArgumentList	"""pcalign"""		701026	1					
ANR	702480	Argument	"""pcalign"""		701026	0					
ANR	702481	PrimaryExpression	"""pcalign"""		701026	0					
ANR	702482	Argument	v		701026	1					
ANR	702483	Identifier	v		701026	0					
ANR	702484	Argument	mode		701026	2					
ANR	702485	Identifier	mode		701026	0					
ANR	702486	Argument	false		701026	3					
ANR	702487	Identifier	false		701026	0					
ANR	702488	ExpressionStatement	"pair_bool ( ""pic"" , info -> has_pi , mode , false )"	801:2:22795:22839	701026	36	True				
ANR	702489	CallExpression	"pair_bool ( ""pic"" , info -> has_pi , mode , false )"		701026	0					
ANR	702490	Callee	pair_bool		701026	0					
ANR	702491	Identifier	pair_bool		701026	0					
ANR	702492	ArgumentList	"""pic"""		701026	1					
ANR	702493	Argument	"""pic"""		701026	0					
ANR	702494	PrimaryExpression	"""pic"""		701026	0					
ANR	702495	Argument	info -> has_pi		701026	1					
ANR	702496	PtrMemberAccess	info -> has_pi		701026	0					
ANR	702497	Identifier	info		701026	0					
ANR	702498	Identifier	has_pi		701026	1					
ANR	702499	Argument	mode		701026	2					
ANR	702500	Identifier	mode		701026	0					
ANR	702501	Argument	false		701026	3					
ANR	702502	Identifier	false		701026	0					
ANR	702503	ExpressionStatement	"pair_bool ( ""relocs"" , R_BIN_DBG_RELOCS & info -> dbg_info , mode , false )"	802:2:22843:22911	701026	37	True				
ANR	702504	CallExpression	"pair_bool ( ""relocs"" , R_BIN_DBG_RELOCS & info -> dbg_info , mode , false )"		701026	0					
ANR	702505	Callee	pair_bool		701026	0					
ANR	702506	Identifier	pair_bool		701026	0					
ANR	702507	ArgumentList	"""relocs"""		701026	1					
ANR	702508	Argument	"""relocs"""		701026	0					
ANR	702509	PrimaryExpression	"""relocs"""		701026	0					
ANR	702510	Argument	R_BIN_DBG_RELOCS & info -> dbg_info		701026	1					
ANR	702511	BitAndExpression	R_BIN_DBG_RELOCS & info -> dbg_info		701026	0		&			
ANR	702512	Identifier	R_BIN_DBG_RELOCS		701026	0					
ANR	702513	PtrMemberAccess	info -> dbg_info		701026	1					
ANR	702514	Identifier	info		701026	0					
ANR	702515	Identifier	dbg_info		701026	1					
ANR	702516	Argument	mode		701026	2					
ANR	702517	Identifier	mode		701026	0					
ANR	702518	Argument	false		701026	3					
ANR	702519	Identifier	false		701026	0					
ANR	702520	IdentifierDeclStatement	"Sdb * sdb_info = sdb_ns ( obj -> kv , ""info"" , false ) ;"	803:2:22915:22962	701026	38	True				
ANR	702521	IdentifierDecl	"* sdb_info = sdb_ns ( obj -> kv , ""info"" , false )"		701026	0					
ANR	702522	IdentifierDeclType	Sdb *		701026	0					
ANR	702523	Identifier	sdb_info		701026	1					
ANR	702524	AssignmentExpression	"* sdb_info = sdb_ns ( obj -> kv , ""info"" , false )"		701026	2		=			
ANR	702525	Identifier	sdb_info		701026	0					
ANR	702526	CallExpression	"sdb_ns ( obj -> kv , ""info"" , false )"		701026	1					
ANR	702527	Callee	sdb_ns		701026	0					
ANR	702528	Identifier	sdb_ns		701026	0					
ANR	702529	ArgumentList	obj -> kv		701026	1					
ANR	702530	Argument	obj -> kv		701026	0					
ANR	702531	PtrMemberAccess	obj -> kv		701026	0					
ANR	702532	Identifier	obj		701026	0					
ANR	702533	Identifier	kv		701026	1					
ANR	702534	Argument	"""info"""		701026	1					
ANR	702535	PrimaryExpression	"""info"""		701026	0					
ANR	702536	Argument	false		701026	2					
ANR	702537	Identifier	false		701026	0					
ANR	702538	ExpressionStatement	"tmp_buf = sdb_get ( sdb_info , ""elf.relro"" , 0 )"	804:2:22966:23010	701026	39	True				
ANR	702539	AssignmentExpression	"tmp_buf = sdb_get ( sdb_info , ""elf.relro"" , 0 )"		701026	0		=			
ANR	702540	Identifier	tmp_buf		701026	0					
ANR	702541	CallExpression	"sdb_get ( sdb_info , ""elf.relro"" , 0 )"		701026	1					
ANR	702542	Callee	sdb_get		701026	0					
ANR	702543	Identifier	sdb_get		701026	0					
ANR	702544	ArgumentList	sdb_info		701026	1					
ANR	702545	Argument	sdb_info		701026	0					
ANR	702546	Identifier	sdb_info		701026	0					
ANR	702547	Argument	"""elf.relro"""		701026	1					
ANR	702548	PrimaryExpression	"""elf.relro"""		701026	0					
ANR	702549	Argument	0		701026	2					
ANR	702550	PrimaryExpression	0		701026	0					
ANR	702551	IfStatement	if ( tmp_buf )		701026	40					
ANR	702552	Condition	tmp_buf	805:6:23018:23024	701026	0	True				
ANR	702553	Identifier	tmp_buf		701026	0					
ANR	702554	CompoundStatement		177:15:6028:6028	701026	1					
ANR	702555	ExpressionStatement	"pair_str ( ""relro"" , tmp_buf , mode , false )"	806:3:23032:23072	701026	0	True				
ANR	702556	CallExpression	"pair_str ( ""relro"" , tmp_buf , mode , false )"		701026	0					
ANR	702557	Callee	pair_str		701026	0					
ANR	702558	Identifier	pair_str		701026	0					
ANR	702559	ArgumentList	"""relro"""		701026	1					
ANR	702560	Argument	"""relro"""		701026	0					
ANR	702561	PrimaryExpression	"""relro"""		701026	0					
ANR	702562	Argument	tmp_buf		701026	1					
ANR	702563	Identifier	tmp_buf		701026	0					
ANR	702564	Argument	mode		701026	2					
ANR	702565	Identifier	mode		701026	0					
ANR	702566	Argument	false		701026	3					
ANR	702567	Identifier	false		701026	0					
ANR	702568	ExpressionStatement	free ( tmp_buf )	807:3:23077:23091	701026	1	True				
ANR	702569	CallExpression	free ( tmp_buf )		701026	0					
ANR	702570	Callee	free		701026	0					
ANR	702571	Identifier	free		701026	0					
ANR	702572	ArgumentList	tmp_buf		701026	1					
ANR	702573	Argument	tmp_buf		701026	0					
ANR	702574	Identifier	tmp_buf		701026	0					
ANR	702575	ExpressionStatement	"pair_str ( ""rpath"" , info -> rpath , mode , false )"	809:2:23099:23143	701026	41	True				
ANR	702576	CallExpression	"pair_str ( ""rpath"" , info -> rpath , mode , false )"		701026	0					
ANR	702577	Callee	pair_str		701026	0					
ANR	702578	Identifier	pair_str		701026	0					
ANR	702579	ArgumentList	"""rpath"""		701026	1					
ANR	702580	Argument	"""rpath"""		701026	0					
ANR	702581	PrimaryExpression	"""rpath"""		701026	0					
ANR	702582	Argument	info -> rpath		701026	1					
ANR	702583	PtrMemberAccess	info -> rpath		701026	0					
ANR	702584	Identifier	info		701026	0					
ANR	702585	Identifier	rpath		701026	1					
ANR	702586	Argument	mode		701026	2					
ANR	702587	Identifier	mode		701026	0					
ANR	702588	Argument	false		701026	3					
ANR	702589	Identifier	false		701026	0					
ANR	702590	IfStatement	"if ( info -> rclass && ! strcmp ( info -> rclass , ""pe"" ) )"		701026	42					
ANR	702591	Condition	"info -> rclass && ! strcmp ( info -> rclass , ""pe"" )"	810:6:23151:23194	701026	0	True				
ANR	702592	AndExpression	"info -> rclass && ! strcmp ( info -> rclass , ""pe"" )"		701026	0		&&			
ANR	702593	PtrMemberAccess	info -> rclass		701026	0					
ANR	702594	Identifier	info		701026	0					
ANR	702595	Identifier	rclass		701026	1					
ANR	702596	UnaryOperationExpression	"! strcmp ( info -> rclass , ""pe"" )"		701026	1					
ANR	702597	UnaryOperator	!		701026	0					
ANR	702598	CallExpression	"strcmp ( info -> rclass , ""pe"" )"		701026	1					
ANR	702599	Callee	strcmp		701026	0					
ANR	702600	Identifier	strcmp		701026	0					
ANR	702601	ArgumentList	info -> rclass		701026	1					
ANR	702602	Argument	info -> rclass		701026	0					
ANR	702603	PtrMemberAccess	info -> rclass		701026	0					
ANR	702604	Identifier	info		701026	0					
ANR	702605	Identifier	rclass		701026	1					
ANR	702606	Argument	"""pe"""		701026	1					
ANR	702607	PrimaryExpression	"""pe"""		701026	0					
ANR	702608	CompoundStatement		182:52:6198:6198	701026	1					
ANR	702609	ExpressionStatement	"pair_bool ( ""signed"" , info -> signature , mode , false )"	812:3:23258:23308	701026	0	True				
ANR	702610	CallExpression	"pair_bool ( ""signed"" , info -> signature , mode , false )"		701026	0					
ANR	702611	Callee	pair_bool		701026	0					
ANR	702612	Identifier	pair_bool		701026	0					
ANR	702613	ArgumentList	"""signed"""		701026	1					
ANR	702614	Argument	"""signed"""		701026	0					
ANR	702615	PrimaryExpression	"""signed"""		701026	0					
ANR	702616	Argument	info -> signature		701026	1					
ANR	702617	PtrMemberAccess	info -> signature		701026	0					
ANR	702618	Identifier	info		701026	0					
ANR	702619	Identifier	signature		701026	1					
ANR	702620	Argument	mode		701026	2					
ANR	702621	Identifier	mode		701026	0					
ANR	702622	Argument	false		701026	3					
ANR	702623	Identifier	false		701026	0					
ANR	702624	ExpressionStatement	"pair_bool ( ""sanitiz"" , info -> has_sanitizers , mode , false )"	814:2:23316:23372	701026	43	True				
ANR	702625	CallExpression	"pair_bool ( ""sanitiz"" , info -> has_sanitizers , mode , false )"		701026	0					
ANR	702626	Callee	pair_bool		701026	0					
ANR	702627	Identifier	pair_bool		701026	0					
ANR	702628	ArgumentList	"""sanitiz"""		701026	1					
ANR	702629	Argument	"""sanitiz"""		701026	0					
ANR	702630	PrimaryExpression	"""sanitiz"""		701026	0					
ANR	702631	Argument	info -> has_sanitizers		701026	1					
ANR	702632	PtrMemberAccess	info -> has_sanitizers		701026	0					
ANR	702633	Identifier	info		701026	0					
ANR	702634	Identifier	has_sanitizers		701026	1					
ANR	702635	Argument	mode		701026	2					
ANR	702636	Identifier	mode		701026	0					
ANR	702637	Argument	false		701026	3					
ANR	702638	Identifier	false		701026	0					
ANR	702639	ExpressionStatement	"pair_bool ( ""static"" , r_bin_is_static ( r -> bin ) , mode , false )"	815:2:23376:23435	701026	44	True				
ANR	702640	CallExpression	"pair_bool ( ""static"" , r_bin_is_static ( r -> bin ) , mode , false )"		701026	0					
ANR	702641	Callee	pair_bool		701026	0					
ANR	702642	Identifier	pair_bool		701026	0					
ANR	702643	ArgumentList	"""static"""		701026	1					
ANR	702644	Argument	"""static"""		701026	0					
ANR	702645	PrimaryExpression	"""static"""		701026	0					
ANR	702646	Argument	r_bin_is_static ( r -> bin )		701026	1					
ANR	702647	CallExpression	r_bin_is_static ( r -> bin )		701026	0					
ANR	702648	Callee	r_bin_is_static		701026	0					
ANR	702649	Identifier	r_bin_is_static		701026	0					
ANR	702650	ArgumentList	r -> bin		701026	1					
ANR	702651	Argument	r -> bin		701026	0					
ANR	702652	PtrMemberAccess	r -> bin		701026	0					
ANR	702653	Identifier	r		701026	0					
ANR	702654	Identifier	bin		701026	1					
ANR	702655	Argument	mode		701026	2					
ANR	702656	Identifier	mode		701026	0					
ANR	702657	Argument	false		701026	3					
ANR	702658	Identifier	false		701026	0					
ANR	702659	IfStatement	"if ( info -> rclass && ! strcmp ( info -> rclass , ""mdmp"" ) )"		701026	45					
ANR	702660	Condition	"info -> rclass && ! strcmp ( info -> rclass , ""mdmp"" )"	816:6:23443:23488	701026	0	True				
ANR	702661	AndExpression	"info -> rclass && ! strcmp ( info -> rclass , ""mdmp"" )"		701026	0		&&			
ANR	702662	PtrMemberAccess	info -> rclass		701026	0					
ANR	702663	Identifier	info		701026	0					
ANR	702664	Identifier	rclass		701026	1					
ANR	702665	UnaryOperationExpression	"! strcmp ( info -> rclass , ""mdmp"" )"		701026	1					
ANR	702666	UnaryOperator	!		701026	0					
ANR	702667	CallExpression	"strcmp ( info -> rclass , ""mdmp"" )"		701026	1					
ANR	702668	Callee	strcmp		701026	0					
ANR	702669	Identifier	strcmp		701026	0					
ANR	702670	ArgumentList	info -> rclass		701026	1					
ANR	702671	Argument	info -> rclass		701026	0					
ANR	702672	PtrMemberAccess	info -> rclass		701026	0					
ANR	702673	Identifier	info		701026	0					
ANR	702674	Identifier	rclass		701026	1					
ANR	702675	Argument	"""mdmp"""		701026	1					
ANR	702676	PrimaryExpression	"""mdmp"""		701026	0					
ANR	702677	CompoundStatement		188:54:6492:6492	701026	1					
ANR	702678	ExpressionStatement	"v = sdb_num_get ( bf -> sdb , ""mdmp.streams"" , 0 )"	817:3:23496:23540	701026	0	True				
ANR	702679	AssignmentExpression	"v = sdb_num_get ( bf -> sdb , ""mdmp.streams"" , 0 )"		701026	0		=			
ANR	702680	Identifier	v		701026	0					
ANR	702681	CallExpression	"sdb_num_get ( bf -> sdb , ""mdmp.streams"" , 0 )"		701026	1					
ANR	702682	Callee	sdb_num_get		701026	0					
ANR	702683	Identifier	sdb_num_get		701026	0					
ANR	702684	ArgumentList	bf -> sdb		701026	1					
ANR	702685	Argument	bf -> sdb		701026	0					
ANR	702686	PtrMemberAccess	bf -> sdb		701026	0					
ANR	702687	Identifier	bf		701026	0					
ANR	702688	Identifier	sdb		701026	1					
ANR	702689	Argument	"""mdmp.streams"""		701026	1					
ANR	702690	PrimaryExpression	"""mdmp.streams"""		701026	0					
ANR	702691	Argument	0		701026	2					
ANR	702692	PrimaryExpression	0		701026	0					
ANR	702693	IfStatement	if ( v != - 1 )		701026	1					
ANR	702694	Condition	v != - 1	818:7:23549:23555	701026	0	True				
ANR	702695	EqualityExpression	v != - 1		701026	0		!=			
ANR	702696	Identifier	v		701026	0					
ANR	702697	UnaryOperationExpression	- 1		701026	1					
ANR	702698	UnaryOperator	-		701026	0					
ANR	702699	PrimaryExpression	1		701026	1					
ANR	702700	CompoundStatement		190:16:6559:6559	701026	1					
ANR	702701	ExpressionStatement	"pair_int ( ""streams"" , v , mode , false )"	819:4:23564:23600	701026	0	True				
ANR	702702	CallExpression	"pair_int ( ""streams"" , v , mode , false )"		701026	0					
ANR	702703	Callee	pair_int		701026	0					
ANR	702704	Identifier	pair_int		701026	0					
ANR	702705	ArgumentList	"""streams"""		701026	1					
ANR	702706	Argument	"""streams"""		701026	0					
ANR	702707	PrimaryExpression	"""streams"""		701026	0					
ANR	702708	Argument	v		701026	1					
ANR	702709	Identifier	v		701026	0					
ANR	702710	Argument	mode		701026	2					
ANR	702711	Identifier	mode		701026	0					
ANR	702712	Argument	false		701026	3					
ANR	702713	Identifier	false		701026	0					
ANR	702714	ExpressionStatement	"pair_bool ( ""stripped"" , R_BIN_DBG_STRIPPED & info -> dbg_info , mode , false )"	822:2:23613:23685	701026	46	True				
ANR	702715	CallExpression	"pair_bool ( ""stripped"" , R_BIN_DBG_STRIPPED & info -> dbg_info , mode , false )"		701026	0					
ANR	702716	Callee	pair_bool		701026	0					
ANR	702717	Identifier	pair_bool		701026	0					
ANR	702718	ArgumentList	"""stripped"""		701026	1					
ANR	702719	Argument	"""stripped"""		701026	0					
ANR	702720	PrimaryExpression	"""stripped"""		701026	0					
ANR	702721	Argument	R_BIN_DBG_STRIPPED & info -> dbg_info		701026	1					
ANR	702722	BitAndExpression	R_BIN_DBG_STRIPPED & info -> dbg_info		701026	0		&			
ANR	702723	Identifier	R_BIN_DBG_STRIPPED		701026	0					
ANR	702724	PtrMemberAccess	info -> dbg_info		701026	1					
ANR	702725	Identifier	info		701026	0					
ANR	702726	Identifier	dbg_info		701026	1					
ANR	702727	Argument	mode		701026	2					
ANR	702728	Identifier	mode		701026	0					
ANR	702729	Argument	false		701026	3					
ANR	702730	Identifier	false		701026	0					
ANR	702731	ExpressionStatement	"pair_str ( ""subsys"" , info -> subsystem , mode , false )"	823:2:23689:23738	701026	47	True				
ANR	702732	CallExpression	"pair_str ( ""subsys"" , info -> subsystem , mode , false )"		701026	0					
ANR	702733	Callee	pair_str		701026	0					
ANR	702734	Identifier	pair_str		701026	0					
ANR	702735	ArgumentList	"""subsys"""		701026	1					
ANR	702736	Argument	"""subsys"""		701026	0					
ANR	702737	PrimaryExpression	"""subsys"""		701026	0					
ANR	702738	Argument	info -> subsystem		701026	1					
ANR	702739	PtrMemberAccess	info -> subsystem		701026	0					
ANR	702740	Identifier	info		701026	0					
ANR	702741	Identifier	subsystem		701026	1					
ANR	702742	Argument	mode		701026	2					
ANR	702743	Identifier	mode		701026	0					
ANR	702744	Argument	false		701026	3					
ANR	702745	Identifier	false		701026	0					
ANR	702746	ExpressionStatement	"pair_bool ( ""va"" , info -> has_va , mode , true )"	824:2:23742:23784	701026	48	True				
ANR	702747	CallExpression	"pair_bool ( ""va"" , info -> has_va , mode , true )"		701026	0					
ANR	702748	Callee	pair_bool		701026	0					
ANR	702749	Identifier	pair_bool		701026	0					
ANR	702750	ArgumentList	"""va"""		701026	1					
ANR	702751	Argument	"""va"""		701026	0					
ANR	702752	PrimaryExpression	"""va"""		701026	0					
ANR	702753	Argument	info -> has_va		701026	1					
ANR	702754	PtrMemberAccess	info -> has_va		701026	0					
ANR	702755	Identifier	info		701026	0					
ANR	702756	Identifier	has_va		701026	1					
ANR	702757	Argument	mode		701026	2					
ANR	702758	Identifier	mode		701026	0					
ANR	702759	Argument	true		701026	3					
ANR	702760	Identifier	true		701026	0					
ANR	702761	IfStatement	if ( IS_MODE_JSON ( mode ) )		701026	49					
ANR	702762	Condition	IS_MODE_JSON ( mode )	825:6:23792:23810	701026	0	True				
ANR	702763	CallExpression	IS_MODE_JSON ( mode )		701026	0					
ANR	702764	Callee	IS_MODE_JSON		701026	0					
ANR	702765	Identifier	IS_MODE_JSON		701026	0					
ANR	702766	ArgumentList	mode		701026	1					
ANR	702767	Argument	mode		701026	0					
ANR	702768	Identifier	mode		701026	0					
ANR	702769	CompoundStatement		197:27:6814:6814	701026	1					
ANR	702770	ExpressionStatement	"r_cons_printf ( "",\\""checksums\\"":{"" )"	826:3:23818:23852	701026	0	True				
ANR	702771	CallExpression	"r_cons_printf ( "",\\""checksums\\"":{"" )"		701026	0					
ANR	702772	Callee	r_cons_printf		701026	0					
ANR	702773	Identifier	r_cons_printf		701026	0					
ANR	702774	ArgumentList	""",\\""checksums\\"":{"""		701026	1					
ANR	702775	Argument	""",\\""checksums\\"":{"""		701026	0					
ANR	702776	PrimaryExpression	""",\\""checksums\\"":{"""		701026	0					
ANR	702777	ForStatement	for ( i = 0 ; info -> sum [ i ] . type ; i ++ )		701026	1					
ANR	702778	ForInit	i = 0 ;	827:8:23862:23867	701026	0	True				
ANR	702779	AssignmentExpression	i = 0		701026	0		=			
ANR	702780	Identifier	i		701026	0					
ANR	702781	PrimaryExpression	0		701026	1					
ANR	702782	Condition	info -> sum [ i ] . type	827:15:23869:23885	701026	1	True				
ANR	702783	MemberAccess	info -> sum [ i ] . type		701026	0					
ANR	702784	ArrayIndexing	info -> sum [ i ]		701026	0					
ANR	702785	PtrMemberAccess	info -> sum		701026	0					
ANR	702786	Identifier	info		701026	0					
ANR	702787	Identifier	sum		701026	1					
ANR	702788	Identifier	i		701026	1					
ANR	702789	Identifier	type		701026	1					
ANR	702790	PostIncDecOperationExpression	i ++	827:34:23888:23890	701026	2	True				
ANR	702791	Identifier	i		701026	0					
ANR	702792	IncDec	++		701026	1					
ANR	702793	CompoundStatement		208:4:7148:7197	701026	3					
ANR	702794	IdentifierDeclStatement	RBinHash * h = & info -> sum [ i ] ;	828:4:23899:23926	701026	0	True				
ANR	702795	IdentifierDecl	* h = & info -> sum [ i ]		701026	0					
ANR	702796	IdentifierDeclType	RBinHash *		701026	0					
ANR	702797	Identifier	h		701026	1					
ANR	702798	AssignmentExpression	* h = & info -> sum [ i ]		701026	2		=			
ANR	702799	Identifier	h		701026	0					
ANR	702800	UnaryOperationExpression	& info -> sum [ i ]		701026	1					
ANR	702801	UnaryOperator	&		701026	0					
ANR	702802	ArrayIndexing	info -> sum [ i ]		701026	1					
ANR	702803	PtrMemberAccess	info -> sum		701026	0					
ANR	702804	Identifier	info		701026	0					
ANR	702805	Identifier	sum		701026	1					
ANR	702806	Identifier	i		701026	1					
ANR	702807	IdentifierDeclStatement	ut64 hash = r_hash_name_to_bits ( h -> type ) ;	829:4:23932:23973	701026	1	True				
ANR	702808	IdentifierDecl	hash = r_hash_name_to_bits ( h -> type )		701026	0					
ANR	702809	IdentifierDeclType	ut64		701026	0					
ANR	702810	Identifier	hash		701026	1					
ANR	702811	AssignmentExpression	hash = r_hash_name_to_bits ( h -> type )		701026	2		=			
ANR	702812	Identifier	hash		701026	0					
ANR	702813	CallExpression	r_hash_name_to_bits ( h -> type )		701026	1					
ANR	702814	Callee	r_hash_name_to_bits		701026	0					
ANR	702815	Identifier	r_hash_name_to_bits		701026	0					
ANR	702816	ArgumentList	h -> type		701026	1					
ANR	702817	Argument	h -> type		701026	0					
ANR	702818	PtrMemberAccess	h -> type		701026	0					
ANR	702819	Identifier	h		701026	0					
ANR	702820	Identifier	type		701026	1					
ANR	702821	IdentifierDeclStatement	"RHash * rh = r_hash_new ( true , hash ) ;"	830:4:23979:24014	701026	2	True				
ANR	702822	IdentifierDecl	"* rh = r_hash_new ( true , hash )"		701026	0					
ANR	702823	IdentifierDeclType	RHash *		701026	0					
ANR	702824	Identifier	rh		701026	1					
ANR	702825	AssignmentExpression	"* rh = r_hash_new ( true , hash )"		701026	2		=			
ANR	702826	Identifier	rh		701026	0					
ANR	702827	CallExpression	"r_hash_new ( true , hash )"		701026	1					
ANR	702828	Callee	r_hash_new		701026	0					
ANR	702829	Identifier	r_hash_new		701026	0					
ANR	702830	ArgumentList	true		701026	1					
ANR	702831	Argument	true		701026	0					
ANR	702832	Identifier	true		701026	0					
ANR	702833	Argument	hash		701026	1					
ANR	702834	Identifier	hash		701026	0					
ANR	702835	IdentifierDeclStatement	"ut8 * tmp = R_NEWS ( ut8 , h -> to ) ;"	831:4:24020:24050	701026	3	True				
ANR	702836	IdentifierDecl	"* tmp = R_NEWS ( ut8 , h -> to )"		701026	0					
ANR	702837	IdentifierDeclType	ut8 *		701026	0					
ANR	702838	Identifier	tmp		701026	1					
ANR	702839	AssignmentExpression	"* tmp = R_NEWS ( ut8 , h -> to )"		701026	2		=			
ANR	702840	Identifier	tmp		701026	0					
ANR	702841	CallExpression	"R_NEWS ( ut8 , h -> to )"		701026	1					
ANR	702842	Callee	R_NEWS		701026	0					
ANR	702843	Identifier	R_NEWS		701026	0					
ANR	702844	ArgumentList	ut8		701026	1					
ANR	702845	Argument	ut8		701026	0					
ANR	702846	Identifier	ut8		701026	0					
ANR	702847	Argument	h -> to		701026	1					
ANR	702848	PtrMemberAccess	h -> to		701026	0					
ANR	702849	Identifier	h		701026	0					
ANR	702850	Identifier	to		701026	1					
ANR	702851	IfStatement	if ( ! tmp )		701026	4					
ANR	702852	Condition	! tmp	832:8:24060:24063	701026	0	True				
ANR	702853	UnaryOperationExpression	! tmp		701026	0					
ANR	702854	UnaryOperator	!		701026	0					
ANR	702855	Identifier	tmp		701026	1					
ANR	702856	CompoundStatement		204:14:7067:7067	701026	1					
ANR	702857	ReturnStatement	return false ;	833:5:24073:24085	701026	0	True				
ANR	702858	Identifier	false		701026	0					
ANR	702859	ExpressionStatement	"r_buf_read_at ( bf -> buf , h -> from , tmp , h -> to )"	835:4:24097:24141	701026	5	True				
ANR	702860	CallExpression	"r_buf_read_at ( bf -> buf , h -> from , tmp , h -> to )"		701026	0					
ANR	702861	Callee	r_buf_read_at		701026	0					
ANR	702862	Identifier	r_buf_read_at		701026	0					
ANR	702863	ArgumentList	bf -> buf		701026	1					
ANR	702864	Argument	bf -> buf		701026	0					
ANR	702865	PtrMemberAccess	bf -> buf		701026	0					
ANR	702866	Identifier	bf		701026	0					
ANR	702867	Identifier	buf		701026	1					
ANR	702868	Argument	h -> from		701026	1					
ANR	702869	PtrMemberAccess	h -> from		701026	0					
ANR	702870	Identifier	h		701026	0					
ANR	702871	Identifier	from		701026	1					
ANR	702872	Argument	tmp		701026	2					
ANR	702873	Identifier	tmp		701026	0					
ANR	702874	Argument	h -> to		701026	3					
ANR	702875	PtrMemberAccess	h -> to		701026	0					
ANR	702876	Identifier	h		701026	0					
ANR	702877	Identifier	to		701026	1					
ANR	702878	IdentifierDeclStatement	"int len = r_hash_calculate ( rh , hash , tmp , h -> to ) ;"	836:4:24147:24196	701026	6	True				
ANR	702879	IdentifierDecl	"len = r_hash_calculate ( rh , hash , tmp , h -> to )"		701026	0					
ANR	702880	IdentifierDeclType	int		701026	0					
ANR	702881	Identifier	len		701026	1					
ANR	702882	AssignmentExpression	"len = r_hash_calculate ( rh , hash , tmp , h -> to )"		701026	2		=			
ANR	702883	Identifier	len		701026	0					
ANR	702884	CallExpression	"r_hash_calculate ( rh , hash , tmp , h -> to )"		701026	1					
ANR	702885	Callee	r_hash_calculate		701026	0					
ANR	702886	Identifier	r_hash_calculate		701026	0					
ANR	702887	ArgumentList	rh		701026	1					
ANR	702888	Argument	rh		701026	0					
ANR	702889	Identifier	rh		701026	0					
ANR	702890	Argument	hash		701026	1					
ANR	702891	Identifier	hash		701026	0					
ANR	702892	Argument	tmp		701026	2					
ANR	702893	Identifier	tmp		701026	0					
ANR	702894	Argument	h -> to		701026	3					
ANR	702895	PtrMemberAccess	h -> to		701026	0					
ANR	702896	Identifier	h		701026	0					
ANR	702897	Identifier	to		701026	1					
ANR	702898	ExpressionStatement	free ( tmp )	837:4:24202:24212	701026	7	True				
ANR	702899	CallExpression	free ( tmp )		701026	0					
ANR	702900	Callee	free		701026	0					
ANR	702901	Identifier	free		701026	0					
ANR	702902	ArgumentList	tmp		701026	1					
ANR	702903	Argument	tmp		701026	0					
ANR	702904	Identifier	tmp		701026	0					
ANR	702905	IfStatement	if ( len < 1 )		701026	8					
ANR	702906	Condition	len < 1	838:8:24222:24228	701026	0	True				
ANR	702907	RelationalExpression	len < 1		701026	0		<			
ANR	702908	Identifier	len		701026	0					
ANR	702909	PrimaryExpression	1		701026	1					
ANR	702910	CompoundStatement		210:17:7232:7232	701026	1					
ANR	702911	ExpressionStatement	"eprintf ( ""Invalid checksum length\\n"" )"	839:5:24238:24275	701026	0	True				
ANR	702912	CallExpression	"eprintf ( ""Invalid checksum length\\n"" )"		701026	0					
ANR	702913	Callee	eprintf		701026	0					
ANR	702914	Identifier	eprintf		701026	0					
ANR	702915	ArgumentList	"""Invalid checksum length\\n"""		701026	1					
ANR	702916	Argument	"""Invalid checksum length\\n"""		701026	0					
ANR	702917	PrimaryExpression	"""Invalid checksum length\\n"""		701026	0					
ANR	702918	ExpressionStatement	r_hash_free ( rh )	841:4:24287:24303	701026	9	True				
ANR	702919	CallExpression	r_hash_free ( rh )		701026	0					
ANR	702920	Callee	r_hash_free		701026	0					
ANR	702921	Identifier	r_hash_free		701026	0					
ANR	702922	ArgumentList	rh		701026	1					
ANR	702923	Argument	rh		701026	0					
ANR	702924	Identifier	rh		701026	0					
ANR	702925	ExpressionStatement	"r_cons_printf ( ""%s\\""%s\\"":{\\""hex\\"":\\"""" , i ? "","" : """" , h -> type )"	842:4:24309:24367	701026	10	True				
ANR	702926	CallExpression	"r_cons_printf ( ""%s\\""%s\\"":{\\""hex\\"":\\"""" , i ? "","" : """" , h -> type )"		701026	0					
ANR	702927	Callee	r_cons_printf		701026	0					
ANR	702928	Identifier	r_cons_printf		701026	0					
ANR	702929	ArgumentList	"""%s\\""%s\\"":{\\""hex\\"":\\"""""		701026	1					
ANR	702930	Argument	"""%s\\""%s\\"":{\\""hex\\"":\\"""""		701026	0					
ANR	702931	PrimaryExpression	"""%s\\""%s\\"":{\\""hex\\"":\\"""""		701026	0					
ANR	702932	Argument	"i ? "","" : """""		701026	1					
ANR	702933	ConditionalExpression	"i ? "","" : """""		701026	0					
ANR	702934	Condition	i		701026	0					
ANR	702935	Identifier	i		701026	0					
ANR	702936	PrimaryExpression	""","""		701026	1					
ANR	702937	PrimaryExpression	""""""		701026	2					
ANR	702938	Argument	h -> type		701026	2					
ANR	702939	PtrMemberAccess	h -> type		701026	0					
ANR	702940	Identifier	h		701026	0					
ANR	702941	Identifier	type		701026	1					
ANR	702942	ForStatement	for ( j = 0 ; j < h -> len ; j ++ )		701026	11					
ANR	702943	ForInit	j = 0 ;	844:9:24450:24455	701026	0	True				
ANR	702944	AssignmentExpression	j = 0		701026	0		=			
ANR	702945	Identifier	j		701026	0					
ANR	702946	PrimaryExpression	0		701026	1					
ANR	702947	Condition	j < h -> len	844:16:24457:24466	701026	1	True				
ANR	702948	RelationalExpression	j < h -> len		701026	0		<			
ANR	702949	Identifier	j		701026	0					
ANR	702950	PtrMemberAccess	h -> len		701026	1					
ANR	702951	Identifier	h		701026	0					
ANR	702952	Identifier	len		701026	1					
ANR	702953	PostIncDecOperationExpression	j ++	844:28:24469:24471	701026	2	True				
ANR	702954	Identifier	j		701026	0					
ANR	702955	IncDec	++		701026	1					
ANR	702956	CompoundStatement		216:33:7475:7475	701026	3					
ANR	702957	ExpressionStatement	"r_cons_printf ( ""%02x"" , h -> buf [ j ] )"	845:5:24481:24514	701026	0	True				
ANR	702958	CallExpression	"r_cons_printf ( ""%02x"" , h -> buf [ j ] )"		701026	0					
ANR	702959	Callee	r_cons_printf		701026	0					
ANR	702960	Identifier	r_cons_printf		701026	0					
ANR	702961	ArgumentList	"""%02x"""		701026	1					
ANR	702962	Argument	"""%02x"""		701026	0					
ANR	702963	PrimaryExpression	"""%02x"""		701026	0					
ANR	702964	Argument	h -> buf [ j ]		701026	1					
ANR	702965	ArrayIndexing	h -> buf [ j ]		701026	0					
ANR	702966	PtrMemberAccess	h -> buf		701026	0					
ANR	702967	Identifier	h		701026	0					
ANR	702968	Identifier	buf		701026	1					
ANR	702969	Identifier	j		701026	1					
ANR	702970	ExpressionStatement	"r_cons_printf ( ""\\""}"" )"	847:4:24526:24547	701026	12	True				
ANR	702971	CallExpression	"r_cons_printf ( ""\\""}"" )"		701026	0					
ANR	702972	Callee	r_cons_printf		701026	0					
ANR	702973	Identifier	r_cons_printf		701026	0					
ANR	702974	ArgumentList	"""\\""}"""		701026	1					
ANR	702975	Argument	"""\\""}"""		701026	0					
ANR	702976	PrimaryExpression	"""\\""}"""		701026	0					
ANR	702977	ExpressionStatement	"r_cons_printf ( ""}"" )"	849:3:24557:24576	701026	2	True				
ANR	702978	CallExpression	"r_cons_printf ( ""}"" )"		701026	0					
ANR	702979	Callee	r_cons_printf		701026	0					
ANR	702980	Identifier	r_cons_printf		701026	0					
ANR	702981	ArgumentList	"""}"""		701026	1					
ANR	702982	Argument	"""}"""		701026	0					
ANR	702983	PrimaryExpression	"""}"""		701026	0					
ANR	702984	ElseStatement	else		701026	0					
ANR	702985	CompoundStatement		222:9:7588:7588	701026	0					
ANR	702986	ForStatement	for ( i = 0 ; info -> sum [ i ] . type ; i ++ )		701026	0					
ANR	702987	ForInit	i = 0 ;	851:8:24597:24602	701026	0	True				
ANR	702988	AssignmentExpression	i = 0		701026	0		=			
ANR	702989	Identifier	i		701026	0					
ANR	702990	PrimaryExpression	0		701026	1					
ANR	702991	Condition	info -> sum [ i ] . type	851:15:24604:24620	701026	1	True				
ANR	702992	MemberAccess	info -> sum [ i ] . type		701026	0					
ANR	702993	ArrayIndexing	info -> sum [ i ]		701026	0					
ANR	702994	PtrMemberAccess	info -> sum		701026	0					
ANR	702995	Identifier	info		701026	0					
ANR	702996	Identifier	sum		701026	1					
ANR	702997	Identifier	i		701026	1					
ANR	702998	Identifier	type		701026	1					
ANR	702999	PostIncDecOperationExpression	i ++	851:34:24623:24625	701026	2	True				
ANR	703000	Identifier	i		701026	0					
ANR	703001	IncDec	++		701026	1					
ANR	703002	CompoundStatement		232:4:7883:7932	701026	3					
ANR	703003	IdentifierDeclStatement	RBinHash * h = & info -> sum [ i ] ;	852:4:24634:24661	701026	0	True				
ANR	703004	IdentifierDecl	* h = & info -> sum [ i ]		701026	0					
ANR	703005	IdentifierDeclType	RBinHash *		701026	0					
ANR	703006	Identifier	h		701026	1					
ANR	703007	AssignmentExpression	* h = & info -> sum [ i ]		701026	2		=			
ANR	703008	Identifier	h		701026	0					
ANR	703009	UnaryOperationExpression	& info -> sum [ i ]		701026	1					
ANR	703010	UnaryOperator	&		701026	0					
ANR	703011	ArrayIndexing	info -> sum [ i ]		701026	1					
ANR	703012	PtrMemberAccess	info -> sum		701026	0					
ANR	703013	Identifier	info		701026	0					
ANR	703014	Identifier	sum		701026	1					
ANR	703015	Identifier	i		701026	1					
ANR	703016	IdentifierDeclStatement	ut64 hash = r_hash_name_to_bits ( h -> type ) ;	853:4:24667:24708	701026	1	True				
ANR	703017	IdentifierDecl	hash = r_hash_name_to_bits ( h -> type )		701026	0					
ANR	703018	IdentifierDeclType	ut64		701026	0					
ANR	703019	Identifier	hash		701026	1					
ANR	703020	AssignmentExpression	hash = r_hash_name_to_bits ( h -> type )		701026	2		=			
ANR	703021	Identifier	hash		701026	0					
ANR	703022	CallExpression	r_hash_name_to_bits ( h -> type )		701026	1					
ANR	703023	Callee	r_hash_name_to_bits		701026	0					
ANR	703024	Identifier	r_hash_name_to_bits		701026	0					
ANR	703025	ArgumentList	h -> type		701026	1					
ANR	703026	Argument	h -> type		701026	0					
ANR	703027	PtrMemberAccess	h -> type		701026	0					
ANR	703028	Identifier	h		701026	0					
ANR	703029	Identifier	type		701026	1					
ANR	703030	IdentifierDeclStatement	"RHash * rh = r_hash_new ( true , hash ) ;"	854:4:24714:24749	701026	2	True				
ANR	703031	IdentifierDecl	"* rh = r_hash_new ( true , hash )"		701026	0					
ANR	703032	IdentifierDeclType	RHash *		701026	0					
ANR	703033	Identifier	rh		701026	1					
ANR	703034	AssignmentExpression	"* rh = r_hash_new ( true , hash )"		701026	2		=			
ANR	703035	Identifier	rh		701026	0					
ANR	703036	CallExpression	"r_hash_new ( true , hash )"		701026	1					
ANR	703037	Callee	r_hash_new		701026	0					
ANR	703038	Identifier	r_hash_new		701026	0					
ANR	703039	ArgumentList	true		701026	1					
ANR	703040	Argument	true		701026	0					
ANR	703041	Identifier	true		701026	0					
ANR	703042	Argument	hash		701026	1					
ANR	703043	Identifier	hash		701026	0					
ANR	703044	IdentifierDeclStatement	"ut8 * tmp = R_NEWS ( ut8 , h -> to ) ;"	855:4:24755:24785	701026	3	True				
ANR	703045	IdentifierDecl	"* tmp = R_NEWS ( ut8 , h -> to )"		701026	0					
ANR	703046	IdentifierDeclType	ut8 *		701026	0					
ANR	703047	Identifier	tmp		701026	1					
ANR	703048	AssignmentExpression	"* tmp = R_NEWS ( ut8 , h -> to )"		701026	2		=			
ANR	703049	Identifier	tmp		701026	0					
ANR	703050	CallExpression	"R_NEWS ( ut8 , h -> to )"		701026	1					
ANR	703051	Callee	R_NEWS		701026	0					
ANR	703052	Identifier	R_NEWS		701026	0					
ANR	703053	ArgumentList	ut8		701026	1					
ANR	703054	Argument	ut8		701026	0					
ANR	703055	Identifier	ut8		701026	0					
ANR	703056	Argument	h -> to		701026	1					
ANR	703057	PtrMemberAccess	h -> to		701026	0					
ANR	703058	Identifier	h		701026	0					
ANR	703059	Identifier	to		701026	1					
ANR	703060	IfStatement	if ( ! tmp )		701026	4					
ANR	703061	Condition	! tmp	856:8:24795:24798	701026	0	True				
ANR	703062	UnaryOperationExpression	! tmp		701026	0					
ANR	703063	UnaryOperator	!		701026	0					
ANR	703064	Identifier	tmp		701026	1					
ANR	703065	CompoundStatement		228:14:7802:7802	701026	1					
ANR	703066	ReturnStatement	return false ;	857:5:24808:24820	701026	0	True				
ANR	703067	Identifier	false		701026	0					
ANR	703068	ExpressionStatement	"r_buf_read_at ( bf -> buf , h -> from , tmp , h -> to )"	859:4:24832:24876	701026	5	True				
ANR	703069	CallExpression	"r_buf_read_at ( bf -> buf , h -> from , tmp , h -> to )"		701026	0					
ANR	703070	Callee	r_buf_read_at		701026	0					
ANR	703071	Identifier	r_buf_read_at		701026	0					
ANR	703072	ArgumentList	bf -> buf		701026	1					
ANR	703073	Argument	bf -> buf		701026	0					
ANR	703074	PtrMemberAccess	bf -> buf		701026	0					
ANR	703075	Identifier	bf		701026	0					
ANR	703076	Identifier	buf		701026	1					
ANR	703077	Argument	h -> from		701026	1					
ANR	703078	PtrMemberAccess	h -> from		701026	0					
ANR	703079	Identifier	h		701026	0					
ANR	703080	Identifier	from		701026	1					
ANR	703081	Argument	tmp		701026	2					
ANR	703082	Identifier	tmp		701026	0					
ANR	703083	Argument	h -> to		701026	3					
ANR	703084	PtrMemberAccess	h -> to		701026	0					
ANR	703085	Identifier	h		701026	0					
ANR	703086	Identifier	to		701026	1					
ANR	703087	IdentifierDeclStatement	"int len = r_hash_calculate ( rh , hash , tmp , h -> to ) ;"	860:4:24882:24931	701026	6	True				
ANR	703088	IdentifierDecl	"len = r_hash_calculate ( rh , hash , tmp , h -> to )"		701026	0					
ANR	703089	IdentifierDeclType	int		701026	0					
ANR	703090	Identifier	len		701026	1					
ANR	703091	AssignmentExpression	"len = r_hash_calculate ( rh , hash , tmp , h -> to )"		701026	2		=			
ANR	703092	Identifier	len		701026	0					
ANR	703093	CallExpression	"r_hash_calculate ( rh , hash , tmp , h -> to )"		701026	1					
ANR	703094	Callee	r_hash_calculate		701026	0					
ANR	703095	Identifier	r_hash_calculate		701026	0					
ANR	703096	ArgumentList	rh		701026	1					
ANR	703097	Argument	rh		701026	0					
ANR	703098	Identifier	rh		701026	0					
ANR	703099	Argument	hash		701026	1					
ANR	703100	Identifier	hash		701026	0					
ANR	703101	Argument	tmp		701026	2					
ANR	703102	Identifier	tmp		701026	0					
ANR	703103	Argument	h -> to		701026	3					
ANR	703104	PtrMemberAccess	h -> to		701026	0					
ANR	703105	Identifier	h		701026	0					
ANR	703106	Identifier	to		701026	1					
ANR	703107	ExpressionStatement	free ( tmp )	861:4:24937:24947	701026	7	True				
ANR	703108	CallExpression	free ( tmp )		701026	0					
ANR	703109	Callee	free		701026	0					
ANR	703110	Identifier	free		701026	0					
ANR	703111	ArgumentList	tmp		701026	1					
ANR	703112	Argument	tmp		701026	0					
ANR	703113	Identifier	tmp		701026	0					
ANR	703114	IfStatement	if ( len < 1 )		701026	8					
ANR	703115	Condition	len < 1	862:8:24957:24963	701026	0	True				
ANR	703116	RelationalExpression	len < 1		701026	0		<			
ANR	703117	Identifier	len		701026	0					
ANR	703118	PrimaryExpression	1		701026	1					
ANR	703119	CompoundStatement		234:17:7967:7967	701026	1					
ANR	703120	ExpressionStatement	"eprintf ( ""Invalid wtf\\n"" )"	863:5:24973:24998	701026	0	True				
ANR	703121	CallExpression	"eprintf ( ""Invalid wtf\\n"" )"		701026	0					
ANR	703122	Callee	eprintf		701026	0					
ANR	703123	Identifier	eprintf		701026	0					
ANR	703124	ArgumentList	"""Invalid wtf\\n"""		701026	1					
ANR	703125	Argument	"""Invalid wtf\\n"""		701026	0					
ANR	703126	PrimaryExpression	"""Invalid wtf\\n"""		701026	0					
ANR	703127	ExpressionStatement	r_hash_free ( rh )	865:4:25010:25026	701026	9	True				
ANR	703128	CallExpression	r_hash_free ( rh )		701026	0					
ANR	703129	Callee	r_hash_free		701026	0					
ANR	703130	Identifier	r_hash_free		701026	0					
ANR	703131	ArgumentList	rh		701026	1					
ANR	703132	Argument	rh		701026	0					
ANR	703133	Identifier	rh		701026	0					
ANR	703134	ExpressionStatement	"r_cons_printf ( ""%s  %d-%dc  "" , h -> type , h -> from , h -> to + h -> from )"	866:4:25032:25095	701026	10	True				
ANR	703135	CallExpression	"r_cons_printf ( ""%s  %d-%dc  "" , h -> type , h -> from , h -> to + h -> from )"		701026	0					
ANR	703136	Callee	r_cons_printf		701026	0					
ANR	703137	Identifier	r_cons_printf		701026	0					
ANR	703138	ArgumentList	"""%s  %d-%dc  """		701026	1					
ANR	703139	Argument	"""%s  %d-%dc  """		701026	0					
ANR	703140	PrimaryExpression	"""%s  %d-%dc  """		701026	0					
ANR	703141	Argument	h -> type		701026	1					
ANR	703142	PtrMemberAccess	h -> type		701026	0					
ANR	703143	Identifier	h		701026	0					
ANR	703144	Identifier	type		701026	1					
ANR	703145	Argument	h -> from		701026	2					
ANR	703146	PtrMemberAccess	h -> from		701026	0					
ANR	703147	Identifier	h		701026	0					
ANR	703148	Identifier	from		701026	1					
ANR	703149	Argument	h -> to + h -> from		701026	3					
ANR	703150	AdditiveExpression	h -> to + h -> from		701026	0		+			
ANR	703151	PtrMemberAccess	h -> to		701026	0					
ANR	703152	Identifier	h		701026	0					
ANR	703153	Identifier	to		701026	1					
ANR	703154	PtrMemberAccess	h -> from		701026	1					
ANR	703155	Identifier	h		701026	0					
ANR	703156	Identifier	from		701026	1					
ANR	703157	ForStatement	for ( j = 0 ; j < h -> len ; j ++ )		701026	11					
ANR	703158	ForInit	j = 0 ;	867:9:25106:25111	701026	0	True				
ANR	703159	AssignmentExpression	j = 0		701026	0		=			
ANR	703160	Identifier	j		701026	0					
ANR	703161	PrimaryExpression	0		701026	1					
ANR	703162	Condition	j < h -> len	867:16:25113:25122	701026	1	True				
ANR	703163	RelationalExpression	j < h -> len		701026	0		<			
ANR	703164	Identifier	j		701026	0					
ANR	703165	PtrMemberAccess	h -> len		701026	1					
ANR	703166	Identifier	h		701026	0					
ANR	703167	Identifier	len		701026	1					
ANR	703168	PostIncDecOperationExpression	j ++	867:28:25125:25127	701026	2	True				
ANR	703169	Identifier	j		701026	0					
ANR	703170	IncDec	++		701026	1					
ANR	703171	CompoundStatement		239:33:8131:8131	701026	3					
ANR	703172	ExpressionStatement	"r_cons_printf ( ""%02x"" , h -> buf [ j ] )"	868:5:25137:25170	701026	0	True				
ANR	703173	CallExpression	"r_cons_printf ( ""%02x"" , h -> buf [ j ] )"		701026	0					
ANR	703174	Callee	r_cons_printf		701026	0					
ANR	703175	Identifier	r_cons_printf		701026	0					
ANR	703176	ArgumentList	"""%02x"""		701026	1					
ANR	703177	Argument	"""%02x"""		701026	0					
ANR	703178	PrimaryExpression	"""%02x"""		701026	0					
ANR	703179	Argument	h -> buf [ j ]		701026	1					
ANR	703180	ArrayIndexing	h -> buf [ j ]		701026	0					
ANR	703181	PtrMemberAccess	h -> buf		701026	0					
ANR	703182	Identifier	h		701026	0					
ANR	703183	Identifier	buf		701026	1					
ANR	703184	Identifier	j		701026	1					
ANR	703185	ExpressionStatement	r_cons_newline ( )	870:4:25182:25199	701026	12	True				
ANR	703186	CallExpression	r_cons_newline ( )		701026	0					
ANR	703187	Callee	r_cons_newline		701026	0					
ANR	703188	Identifier	r_cons_newline		701026	0					
ANR	703189	ArgumentList			701026	1					
ANR	703190	IfStatement	if ( IS_MODE_JSON ( mode ) )		701026	50					
ANR	703191	Condition	IS_MODE_JSON ( mode )	873:6:25216:25234	701026	0	True				
ANR	703192	CallExpression	IS_MODE_JSON ( mode )		701026	0					
ANR	703193	Callee	IS_MODE_JSON		701026	0					
ANR	703194	Identifier	IS_MODE_JSON		701026	0					
ANR	703195	ArgumentList	mode		701026	1					
ANR	703196	Argument	mode		701026	0					
ANR	703197	Identifier	mode		701026	0					
ANR	703198	CompoundStatement		245:27:8238:8238	701026	1					
ANR	703199	ExpressionStatement	"r_cons_printf ( ""}"" )"	874:3:25242:25261	701026	0	True				
ANR	703200	CallExpression	"r_cons_printf ( ""}"" )"		701026	0					
ANR	703201	Callee	r_cons_printf		701026	0					
ANR	703202	Identifier	r_cons_printf		701026	0					
ANR	703203	ArgumentList	"""}"""		701026	1					
ANR	703204	Argument	"""}"""		701026	0					
ANR	703205	PrimaryExpression	"""}"""		701026	0					
ANR	703206	IdentifierDeclStatement	"const char * dir_prefix = r_config_get ( r -> config , ""dir.prefix"" ) ;"	877:1:25271:25334	701026	12	True				
ANR	703207	IdentifierDecl	"* dir_prefix = r_config_get ( r -> config , ""dir.prefix"" )"		701026	0					
ANR	703208	IdentifierDeclType	const char *		701026	0					
ANR	703209	Identifier	dir_prefix		701026	1					
ANR	703210	AssignmentExpression	"* dir_prefix = r_config_get ( r -> config , ""dir.prefix"" )"		701026	2		=			
ANR	703211	Identifier	dir_prefix		701026	0					
ANR	703212	CallExpression	"r_config_get ( r -> config , ""dir.prefix"" )"		701026	1					
ANR	703213	Callee	r_config_get		701026	0					
ANR	703214	Identifier	r_config_get		701026	0					
ANR	703215	ArgumentList	r -> config		701026	1					
ANR	703216	Argument	r -> config		701026	0					
ANR	703217	PtrMemberAccess	r -> config		701026	0					
ANR	703218	Identifier	r		701026	0					
ANR	703219	Identifier	config		701026	1					
ANR	703220	Argument	"""dir.prefix"""		701026	1					
ANR	703221	PrimaryExpression	"""dir.prefix"""		701026	0					
ANR	703222	Statement	char	878:1:25337:25340	701026	13	True				
ANR	703223	Statement	*	878:6:25342:25342	701026	14	True				
ANR	703224	Statement	spath	878:7:25343:25347	701026	15	True				
ANR	703225	Statement	=	878:13:25349:25349	701026	16	True				
ANR	703226	Statement	sdb_fmt	878:15:25351:25357	701026	17	True				
ANR	703227	Statement	(	878:23:25359:25359	701026	18	True				
ANR	703228	Statement	"""%s/"""	878:24:25360:25364	701026	19	True				
ANR	703229	Statement	R2_SDB_FCNSIGN	878:29:25365:25378	701026	20	True				
ANR	703230	Statement	"""/spec.sdb"""	878:43:25379:25389	701026	21	True				
ANR	703231	Statement	","	878:54:25390:25390	701026	22	True				
ANR	703232	Statement	dir_prefix	878:56:25392:25401	701026	23	True				
ANR	703233	Statement	)	878:66:25402:25402	701026	24	True				
ANR	703234	ExpressionStatement		878:67:25403:25403	701026	25	True				
ANR	703235	IfStatement	if ( r_file_exists ( spath ) )		701026	26					
ANR	703236	Condition	r_file_exists ( spath )	879:5:25410:25430	701026	0	True				
ANR	703237	CallExpression	r_file_exists ( spath )		701026	0					
ANR	703238	Callee	r_file_exists		701026	0					
ANR	703239	Identifier	r_file_exists		701026	0					
ANR	703240	ArgumentList	spath		701026	1					
ANR	703241	Argument	spath		701026	0					
ANR	703242	Identifier	spath		701026	0					
ANR	703243	CompoundStatement		251:28:8434:8434	701026	1					
ANR	703244	ExpressionStatement	"sdb_concat_by_path ( r -> anal -> sdb_fmts , spath )"	880:2:25437:25482	701026	0	True				
ANR	703245	CallExpression	"sdb_concat_by_path ( r -> anal -> sdb_fmts , spath )"		701026	0					
ANR	703246	Callee	sdb_concat_by_path		701026	0					
ANR	703247	Identifier	sdb_concat_by_path		701026	0					
ANR	703248	ArgumentList	r -> anal -> sdb_fmts		701026	1					
ANR	703249	Argument	r -> anal -> sdb_fmts		701026	0					
ANR	703250	PtrMemberAccess	r -> anal -> sdb_fmts		701026	0					
ANR	703251	PtrMemberAccess	r -> anal		701026	0					
ANR	703252	Identifier	r		701026	0					
ANR	703253	Identifier	anal		701026	1					
ANR	703254	Identifier	sdb_fmts		701026	1					
ANR	703255	Argument	spath		701026	1					
ANR	703256	Identifier	spath		701026	0					
ANR	703257	ReturnStatement	return true ;	882:1:25488:25499	701026	27	True				
ANR	703258	Identifier	true		701026	0					
ANR	703259	ReturnType	static int		701026	1					
ANR	703260	Identifier	bin_info		701026	2					
ANR	703261	ParameterList	"RCore * r , int mode , ut64 laddr"		701026	3					
ANR	703262	Parameter	RCore * r	629:20:16966:16973	701026	0	True				
ANR	703263	ParameterType	RCore *		701026	0					
ANR	703264	Identifier	r		701026	1					
ANR	703265	Parameter	int mode	629:30:16976:16983	701026	1	True				
ANR	703266	ParameterType	int		701026	0					
ANR	703267	Identifier	mode		701026	1					
ANR	703268	Parameter	ut64 laddr	629:40:16986:16995	701026	2	True				
ANR	703269	ParameterType	ut64		701026	0					
ANR	703270	Identifier	laddr		701026	1					
ANR	703271	CFGEntryNode	ENTRY		701026		True				
ANR	703272	CFGExitNode	EXIT		701026		True				
ANR	703273	Symbol	r -> anal -> sdb_fmts		701026						
ANR	703274	Symbol	IS_MODE_SIMPLE		701026						
ANR	703275	Symbol	r_bin_get_baddr		701026						
ANR	703276	Symbol	info -> has_va		701026						
ANR	703277	Symbol	r_hash_name_to_bits		701026						
ANR	703278	Symbol	len		701026						
ANR	703279	Symbol	bf -> o		701026						
ANR	703280	Symbol	bf -> buf		701026						
ANR	703281	Symbol	tmp		701026						
ANR	703282	Symbol	* info -> sum		701026						
ANR	703283	Symbol	get_compile_time		701026						
ANR	703284	Symbol	* info -> rclass		701026						
ANR	703285	Symbol	info -> signature		701026						
ANR	703286	Symbol	R_BIN_DBG_STRIPPED		701026						
ANR	703287	Symbol	info -> cpu		701026						
ANR	703288	Symbol	h -> to		701026						
ANR	703289	Symbol	h -> from		701026						
ANR	703290	Symbol	info -> has_nx		701026						
ANR	703291	Symbol	r_bin_get_info		701026						
ANR	703292	Symbol	info -> has_retguard		701026						
ANR	703293	Symbol	IS_MODE_SET		701026						
ANR	703294	Symbol	info -> bclass		701026						
ANR	703295	Symbol	str		701026						
ANR	703296	Symbol	rh		701026						
ANR	703297	Symbol	hash		701026						
ANR	703298	Symbol	info -> sum		701026						
ANR	703299	Symbol	sdb_info		701026						
ANR	703300	Symbol	laddr		701026						
ANR	703301	Symbol	bf		701026						
ANR	703302	Symbol	info -> guid		701026						
ANR	703303	Symbol	r_config_get		701026						
ANR	703304	Symbol	info -> rclass		701026						
ANR	703305	Symbol	IS_MODE_JSON		701026						
ANR	703306	Symbol	R_FLAG_NAME_SIZE		701026						
ANR	703307	Symbol	info -> actual_checksum		701026						
ANR	703308	Symbol	* * r		701026						
ANR	703309	Symbol	h -> len		701026						
ANR	703310	Symbol	info -> debug_file_name		701026						
ANR	703311	Symbol	R_ANAL_ARCHINFO_MIN_OP_SIZE		701026						
ANR	703312	Symbol	* obj		701026						
ANR	703313	Symbol	info -> machine		701026						
ANR	703314	Symbol	h		701026						
ANR	703315	Symbol	i		701026						
ANR	703316	Symbol	j		701026						
ANR	703317	Symbol	bf -> sdb		701026						
ANR	703318	Symbol	* h -> buf		701026						
ANR	703319	Symbol	R_ANAL_ARCHINFO_ALIGN		701026						
ANR	703320	Symbol	r		701026						
ANR	703321	Symbol	* info -> cpu		701026						
ANR	703322	Symbol	v		701026						
ANR	703323	Symbol	r_hash_calculate		701026						
ANR	703324	Symbol	ut8		701026						
ANR	703325	Symbol	* info		701026						
ANR	703326	Symbol	sdb_ns		701026						
ANR	703327	Symbol	havecode		701026						
ANR	703328	Symbol	info -> os		701026						
ANR	703329	Symbol	r_anal_archinfo		701026						
ANR	703330	Symbol	dir_prefix		701026						
ANR	703331	Symbol	* r -> anal		701026						
ANR	703332	Symbol	R_MODE_JSON		701026						
ANR	703333	Symbol	R_BIN_DBG_SYMS		701026						
ANR	703334	Symbol	mode		701026						
ANR	703335	Symbol	spath		701026						
ANR	703336	Symbol	info		701026						
ANR	703337	Symbol	info -> arch		701026						
ANR	703338	Symbol	info -> rpath		701026						
ANR	703339	Symbol	strcmp		701026						
ANR	703340	Symbol	h -> type		701026						
ANR	703341	Symbol	NULL		701026						
ANR	703342	Symbol	info -> type		701026						
ANR	703343	Symbol	* * h		701026						
ANR	703344	Symbol	R_BIN_DBG_LINENUMS		701026						
ANR	703345	Symbol	r_bin_cur		701026						
ANR	703346	Symbol	r -> anal		701026						
ANR	703347	Symbol	obj -> kv		701026						
ANR	703348	Symbol	true		701026						
ANR	703349	Symbol	h -> buf		701026						
ANR	703350	Symbol	* * info		701026						
ANR	703351	Symbol	info -> has_sanitizers		701026						
ANR	703352	Symbol	info -> bits		701026						
ANR	703353	Symbol	obj -> entries		701026						
ANR	703354	Symbol	compiled		701026						
ANR	703355	Symbol	r -> bin		701026						
ANR	703356	Symbol	info -> big_endian		701026						
ANR	703357	Symbol	R_BIN_DBG_RELOCS		701026						
ANR	703358	Symbol	info -> claimed_checksum		701026						
ANR	703359	Symbol	r_bin_get_size		701026						
ANR	703360	Symbol	r_bin_is_static		701026						
ANR	703361	Symbol	info -> has_pi		701026						
ANR	703362	Symbol	info -> has_crypto		701026						
ANR	703363	Symbol	sdb_num_get		701026						
ANR	703364	Symbol	tmp_buf		701026						
ANR	703365	Symbol	false		701026						
ANR	703366	Symbol	* bf		701026						
ANR	703367	Symbol	sdb_get		701026						
ANR	703368	Symbol	R_NEWS		701026						
ANR	703369	Symbol	r_hash_new		701026						
ANR	703370	Symbol	info -> subsystem		701026						
ANR	703371	Symbol	info -> dbg_info		701026						
ANR	703372	Symbol	R_ANAL_ARCHINFO_MAX_OP_SIZE		701026						
ANR	703373	Symbol	info -> compiler		701026						
ANR	703374	Symbol	is_executable		701026						
ANR	703375	Symbol	* h		701026						
ANR	703376	Symbol	* i		701026						
ANR	703377	Symbol	info -> pe_overlay		701026						
ANR	703378	Symbol	* j		701026						
ANR	703379	Symbol	* info -> lang		701026						
ANR	703380	Symbol	info -> intrp		701026						
ANR	703381	Symbol	obj		701026						
ANR	703382	Symbol	IS_MODE_RAD		701026						
ANR	703383	Symbol	info -> lang		701026						
ANR	703384	Symbol	* r		701026						
ANR	703385	Symbol	info -> sum [ i ] . type		701026						
ANR	703386	Symbol	info -> has_canary		701026						
ANR	703387	Symbol	r_file_exists		701026						
ANR	703388	Symbol	r -> config		701026						
ANR	703389	Function	bin_dwarf	885:0:25504:29585							
ANR	703390	FunctionDef	"bin_dwarf (RCore * core , int mode)"		703389	0					
ANR	703391	CompoundStatement		885:44:25548:29585	703389	0					
ANR	703392	IdentifierDeclStatement	RBinDwarfRow * row ;	886:1:25551:25568	703389	0	True				
ANR	703393	IdentifierDecl	* row		703389	0					
ANR	703394	IdentifierDeclType	RBinDwarfRow *		703389	0					
ANR	703395	Identifier	row		703389	1					
ANR	703396	IdentifierDeclStatement	RListIter * iter ;	887:1:25571:25586	703389	1	True				
ANR	703397	IdentifierDecl	* iter		703389	0					
ANR	703398	IdentifierDeclType	RListIter *		703389	0					
ANR	703399	Identifier	iter		703389	1					
ANR	703400	IdentifierDeclStatement	RList * list = NULL ;	888:1:25589:25607	703389	2	True				
ANR	703401	IdentifierDecl	* list = NULL		703389	0					
ANR	703402	IdentifierDeclType	RList *		703389	0					
ANR	703403	Identifier	list		703389	1					
ANR	703404	AssignmentExpression	* list = NULL		703389	2		=			
ANR	703405	Identifier	NULL		703389	0					
ANR	703406	Identifier	NULL		703389	1					
ANR	703407	IfStatement	"if ( ! r_config_get_i ( core -> config , ""bin.dbginfo"" ) )"		703389	3					
ANR	703408	Condition	"! r_config_get_i ( core -> config , ""bin.dbginfo"" )"	889:5:25614:25658	703389	0	True				
ANR	703409	UnaryOperationExpression	"! r_config_get_i ( core -> config , ""bin.dbginfo"" )"		703389	0					
ANR	703410	UnaryOperator	!		703389	0					
ANR	703411	CallExpression	"r_config_get_i ( core -> config , ""bin.dbginfo"" )"		703389	1					
ANR	703412	Callee	r_config_get_i		703389	0					
ANR	703413	Identifier	r_config_get_i		703389	0					
ANR	703414	ArgumentList	core -> config		703389	1					
ANR	703415	Argument	core -> config		703389	0					
ANR	703416	PtrMemberAccess	core -> config		703389	0					
ANR	703417	Identifier	core		703389	0					
ANR	703418	Identifier	config		703389	1					
ANR	703419	Argument	"""bin.dbginfo"""		703389	1					
ANR	703420	PrimaryExpression	"""bin.dbginfo"""		703389	0					
ANR	703421	CompoundStatement		5:52:112:112	703389	1					
ANR	703422	ReturnStatement	return false ;	890:2:25665:25677	703389	0	True				
ANR	703423	Identifier	false		703389	0					
ANR	703424	IdentifierDeclStatement	RBinFile * binfile = r_bin_cur ( core -> bin ) ;	892:1:25683:25724	703389	4	True				
ANR	703425	IdentifierDecl	* binfile = r_bin_cur ( core -> bin )		703389	0					
ANR	703426	IdentifierDeclType	RBinFile *		703389	0					
ANR	703427	Identifier	binfile		703389	1					
ANR	703428	AssignmentExpression	* binfile = r_bin_cur ( core -> bin )		703389	2		=			
ANR	703429	Identifier	binfile		703389	0					
ANR	703430	CallExpression	r_bin_cur ( core -> bin )		703389	1					
ANR	703431	Callee	r_bin_cur		703389	0					
ANR	703432	Identifier	r_bin_cur		703389	0					
ANR	703433	ArgumentList	core -> bin		703389	1					
ANR	703434	Argument	core -> bin		703389	0					
ANR	703435	PtrMemberAccess	core -> bin		703389	0					
ANR	703436	Identifier	core		703389	0					
ANR	703437	Identifier	bin		703389	1					
ANR	703438	IdentifierDeclStatement	RBinPlugin * plugin = r_bin_file_cur_plugin ( binfile ) ;	893:1:25727:25780	703389	5	True				
ANR	703439	IdentifierDecl	* plugin = r_bin_file_cur_plugin ( binfile )		703389	0					
ANR	703440	IdentifierDeclType	RBinPlugin *		703389	0					
ANR	703441	Identifier	plugin		703389	1					
ANR	703442	AssignmentExpression	* plugin = r_bin_file_cur_plugin ( binfile )		703389	2		=			
ANR	703443	Identifier	plugin		703389	0					
ANR	703444	CallExpression	r_bin_file_cur_plugin ( binfile )		703389	1					
ANR	703445	Callee	r_bin_file_cur_plugin		703389	0					
ANR	703446	Identifier	r_bin_file_cur_plugin		703389	0					
ANR	703447	ArgumentList	binfile		703389	1					
ANR	703448	Argument	binfile		703389	0					
ANR	703449	Identifier	binfile		703389	0					
ANR	703450	IfStatement	if ( ! binfile )		703389	6					
ANR	703451	Condition	! binfile	894:5:25787:25794	703389	0	True				
ANR	703452	UnaryOperationExpression	! binfile		703389	0					
ANR	703453	UnaryOperator	!		703389	0					
ANR	703454	Identifier	binfile		703389	1					
ANR	703455	CompoundStatement		10:15:248:248	703389	1					
ANR	703456	ReturnStatement	return false ;	895:2:25801:25813	703389	0	True				
ANR	703457	Identifier	false		703389	0					
ANR	703458	IfStatement	if ( plugin && plugin -> lines )		703389	7					
ANR	703459	Condition	plugin && plugin -> lines	897:5:25823:25845	703389	0	True				
ANR	703460	AndExpression	plugin && plugin -> lines		703389	0		&&			
ANR	703461	Identifier	plugin		703389	0					
ANR	703462	PtrMemberAccess	plugin -> lines		703389	1					
ANR	703463	Identifier	plugin		703389	0					
ANR	703464	Identifier	lines		703389	1					
ANR	703465	CompoundStatement		13:30:299:299	703389	1					
ANR	703466	ExpressionStatement	list = plugin -> lines ( binfile )	898:2:25852:25882	703389	0	True				
ANR	703467	AssignmentExpression	list = plugin -> lines ( binfile )		703389	0		=			
ANR	703468	Identifier	list		703389	0					
ANR	703469	CallExpression	plugin -> lines ( binfile )		703389	1					
ANR	703470	Callee	plugin -> lines		703389	0					
ANR	703471	PtrMemberAccess	plugin -> lines		703389	0					
ANR	703472	Identifier	plugin		703389	0					
ANR	703473	Identifier	lines		703389	1					
ANR	703474	ArgumentList	binfile		703389	1					
ANR	703475	Argument	binfile		703389	0					
ANR	703476	Identifier	binfile		703389	0					
ANR	703477	ElseStatement	else		703389	0					
ANR	703478	IfStatement	if ( core -> bin )		703389	0					
ANR	703479	Condition	core -> bin	899:12:25896:25904	703389	0	True				
ANR	703480	PtrMemberAccess	core -> bin		703389	0					
ANR	703481	Identifier	core		703389	0					
ANR	703482	Identifier	bin		703389	1					
ANR	703483	CompoundStatement		17:2:413:444	703389	1					
ANR	703484	IdentifierDeclStatement	RBinDwarfDebugAbbrev * da = NULL ;	901:2:25962:25993	703389	0	True				
ANR	703485	IdentifierDecl	* da = NULL		703389	0					
ANR	703486	IdentifierDeclType	RBinDwarfDebugAbbrev *		703389	0					
ANR	703487	Identifier	da		703389	1					
ANR	703488	AssignmentExpression	* da = NULL		703389	2		=			
ANR	703489	Identifier	NULL		703389	0					
ANR	703490	Identifier	NULL		703389	1					
ANR	703491	ExpressionStatement	"da = r_bin_dwarf_parse_abbrev ( core -> bin , mode )"	902:2:25997:26044	703389	1	True				
ANR	703492	AssignmentExpression	"da = r_bin_dwarf_parse_abbrev ( core -> bin , mode )"		703389	0		=			
ANR	703493	Identifier	da		703389	0					
ANR	703494	CallExpression	"r_bin_dwarf_parse_abbrev ( core -> bin , mode )"		703389	1					
ANR	703495	Callee	r_bin_dwarf_parse_abbrev		703389	0					
ANR	703496	Identifier	r_bin_dwarf_parse_abbrev		703389	0					
ANR	703497	ArgumentList	core -> bin		703389	1					
ANR	703498	Argument	core -> bin		703389	0					
ANR	703499	PtrMemberAccess	core -> bin		703389	0					
ANR	703500	Identifier	core		703389	0					
ANR	703501	Identifier	bin		703389	1					
ANR	703502	Argument	mode		703389	1					
ANR	703503	Identifier	mode		703389	0					
ANR	703504	ExpressionStatement	"r_bin_dwarf_parse_info ( da , core -> bin , mode )"	903:2:26048:26092	703389	2	True				
ANR	703505	CallExpression	"r_bin_dwarf_parse_info ( da , core -> bin , mode )"		703389	0					
ANR	703506	Callee	r_bin_dwarf_parse_info		703389	0					
ANR	703507	Identifier	r_bin_dwarf_parse_info		703389	0					
ANR	703508	ArgumentList	da		703389	1					
ANR	703509	Argument	da		703389	0					
ANR	703510	Identifier	da		703389	0					
ANR	703511	Argument	core -> bin		703389	1					
ANR	703512	PtrMemberAccess	core -> bin		703389	0					
ANR	703513	Identifier	core		703389	0					
ANR	703514	Identifier	bin		703389	1					
ANR	703515	Argument	mode		703389	2					
ANR	703516	Identifier	mode		703389	0					
ANR	703517	ExpressionStatement	"r_bin_dwarf_parse_aranges ( core -> bin , mode )"	904:2:26096:26139	703389	3	True				
ANR	703518	CallExpression	"r_bin_dwarf_parse_aranges ( core -> bin , mode )"		703389	0					
ANR	703519	Callee	r_bin_dwarf_parse_aranges		703389	0					
ANR	703520	Identifier	r_bin_dwarf_parse_aranges		703389	0					
ANR	703521	ArgumentList	core -> bin		703389	1					
ANR	703522	Argument	core -> bin		703389	0					
ANR	703523	PtrMemberAccess	core -> bin		703389	0					
ANR	703524	Identifier	core		703389	0					
ANR	703525	Identifier	bin		703389	1					
ANR	703526	Argument	mode		703389	1					
ANR	703527	Identifier	mode		703389	0					
ANR	703528	ExpressionStatement	"list = r_bin_dwarf_parse_line ( core -> bin , mode )"	905:2:26143:26190	703389	4	True				
ANR	703529	AssignmentExpression	"list = r_bin_dwarf_parse_line ( core -> bin , mode )"		703389	0		=			
ANR	703530	Identifier	list		703389	0					
ANR	703531	CallExpression	"r_bin_dwarf_parse_line ( core -> bin , mode )"		703389	1					
ANR	703532	Callee	r_bin_dwarf_parse_line		703389	0					
ANR	703533	Identifier	r_bin_dwarf_parse_line		703389	0					
ANR	703534	ArgumentList	core -> bin		703389	1					
ANR	703535	Argument	core -> bin		703389	0					
ANR	703536	PtrMemberAccess	core -> bin		703389	0					
ANR	703537	Identifier	core		703389	0					
ANR	703538	Identifier	bin		703389	1					
ANR	703539	Argument	mode		703389	1					
ANR	703540	Identifier	mode		703389	0					
ANR	703541	ExpressionStatement	r_bin_dwarf_free_debug_abbrev ( da )	906:2:26194:26228	703389	5	True				
ANR	703542	CallExpression	r_bin_dwarf_free_debug_abbrev ( da )		703389	0					
ANR	703543	Callee	r_bin_dwarf_free_debug_abbrev		703389	0					
ANR	703544	Identifier	r_bin_dwarf_free_debug_abbrev		703389	0					
ANR	703545	ArgumentList	da		703389	1					
ANR	703546	Argument	da		703389	0					
ANR	703547	Identifier	da		703389	0					
ANR	703548	ExpressionStatement	free ( da )	907:2:26232:26241	703389	6	True				
ANR	703549	CallExpression	free ( da )		703389	0					
ANR	703550	Callee	free		703389	0					
ANR	703551	Identifier	free		703389	0					
ANR	703552	ArgumentList	da		703389	1					
ANR	703553	Argument	da		703389	0					
ANR	703554	Identifier	da		703389	0					
ANR	703555	IfStatement	if ( ! list )		703389	8					
ANR	703556	Condition	! list	909:5:26251:26255	703389	0	True				
ANR	703557	UnaryOperationExpression	! list		703389	0					
ANR	703558	UnaryOperator	!		703389	0					
ANR	703559	Identifier	list		703389	1					
ANR	703560	CompoundStatement		25:12:709:709	703389	1					
ANR	703561	ReturnStatement	return false ;	910:2:26262:26274	703389	0	True				
ANR	703562	Identifier	false		703389	0					
ANR	703563	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	913:1:26281:26311	703389	9	True				
ANR	703564	CallExpression	"r_cons_break_push ( NULL , NULL )"		703389	0					
ANR	703565	Callee	r_cons_break_push		703389	0					
ANR	703566	Identifier	r_cons_break_push		703389	0					
ANR	703567	ArgumentList	NULL		703389	1					
ANR	703568	Argument	NULL		703389	0					
ANR	703569	Identifier	NULL		703389	0					
ANR	703570	Argument	NULL		703389	1					
ANR	703571	Identifier	NULL		703389	0					
ANR	703572	IdentifierDeclStatement	const char * lastFile = NULL ;	915:1:26346:26373	703389	10	True				
ANR	703573	IdentifierDecl	* lastFile = NULL		703389	0					
ANR	703574	IdentifierDeclType	const char *		703389	0					
ANR	703575	Identifier	lastFile		703389	1					
ANR	703576	AssignmentExpression	* lastFile = NULL		703389	2		=			
ANR	703577	Identifier	NULL		703389	0					
ANR	703578	Identifier	NULL		703389	1					
ANR	703579	IdentifierDeclStatement	int * lastFileLines = NULL ;	916:1:26376:26401	703389	11	True				
ANR	703580	IdentifierDecl	* lastFileLines = NULL		703389	0					
ANR	703581	IdentifierDeclType	int *		703389	0					
ANR	703582	Identifier	lastFileLines		703389	1					
ANR	703583	AssignmentExpression	* lastFileLines = NULL		703389	2		=			
ANR	703584	Identifier	NULL		703389	0					
ANR	703585	Identifier	NULL		703389	1					
ANR	703586	IdentifierDeclStatement	char * lastFileContents = NULL ;	917:1:26404:26433	703389	12	True				
ANR	703587	IdentifierDecl	* lastFileContents = NULL		703389	0					
ANR	703588	IdentifierDeclType	char *		703389	0					
ANR	703589	Identifier	lastFileContents		703389	1					
ANR	703590	AssignmentExpression	* lastFileContents = NULL		703389	2		=			
ANR	703591	Identifier	NULL		703389	0					
ANR	703592	Identifier	NULL		703389	1					
ANR	703593	IdentifierDeclStatement	int lastFileLinesCount = 0 ;	918:1:26436:26462	703389	13	True				
ANR	703594	IdentifierDecl	lastFileLinesCount = 0		703389	0					
ANR	703595	IdentifierDeclType	int		703389	0					
ANR	703596	Identifier	lastFileLinesCount		703389	1					
ANR	703597	AssignmentExpression	lastFileLinesCount = 0		703389	2		=			
ANR	703598	Identifier	lastFileLinesCount		703389	0					
ANR	703599	PrimaryExpression	0		703389	1					
ANR	703600	IdentifierDeclStatement	const char * lastFile2 = NULL ;	921:1:26495:26523	703389	14	True				
ANR	703601	IdentifierDecl	* lastFile2 = NULL		703389	0					
ANR	703602	IdentifierDeclType	const char *		703389	0					
ANR	703603	Identifier	lastFile2		703389	1					
ANR	703604	AssignmentExpression	* lastFile2 = NULL		703389	2		=			
ANR	703605	Identifier	NULL		703389	0					
ANR	703606	Identifier	NULL		703389	1					
ANR	703607	IdentifierDeclStatement	int * lastFileLines2 = NULL ;	922:1:26526:26552	703389	15	True				
ANR	703608	IdentifierDecl	* lastFileLines2 = NULL		703389	0					
ANR	703609	IdentifierDeclType	int *		703389	0					
ANR	703610	Identifier	lastFileLines2		703389	1					
ANR	703611	AssignmentExpression	* lastFileLines2 = NULL		703389	2		=			
ANR	703612	Identifier	NULL		703389	0					
ANR	703613	Identifier	NULL		703389	1					
ANR	703614	IdentifierDeclStatement	char * lastFileContents2 = NULL ;	923:1:26555:26585	703389	16	True				
ANR	703615	IdentifierDecl	* lastFileContents2 = NULL		703389	0					
ANR	703616	IdentifierDeclType	char *		703389	0					
ANR	703617	Identifier	lastFileContents2		703389	1					
ANR	703618	AssignmentExpression	* lastFileContents2 = NULL		703389	2		=			
ANR	703619	Identifier	NULL		703389	0					
ANR	703620	Identifier	NULL		703389	1					
ANR	703621	IdentifierDeclStatement	int lastFileLinesCount2 = 0 ;	924:1:26588:26615	703389	17	True				
ANR	703622	IdentifierDecl	lastFileLinesCount2 = 0		703389	0					
ANR	703623	IdentifierDeclType	int		703389	0					
ANR	703624	Identifier	lastFileLinesCount2		703389	1					
ANR	703625	AssignmentExpression	lastFileLinesCount2 = 0		703389	2		=			
ANR	703626	Identifier	lastFileLinesCount2		703389	0					
ANR	703627	PrimaryExpression	0		703389	1					
ANR	703628	IdentifierDeclStatement	const char * lf = NULL ;	926:1:26619:26640	703389	18	True				
ANR	703629	IdentifierDecl	* lf = NULL		703389	0					
ANR	703630	IdentifierDeclType	const char *		703389	0					
ANR	703631	Identifier	lf		703389	1					
ANR	703632	AssignmentExpression	* lf = NULL		703389	2		=			
ANR	703633	Identifier	NULL		703389	0					
ANR	703634	Identifier	NULL		703389	1					
ANR	703635	IdentifierDeclStatement	int * lfl = NULL ;	927:1:26643:26658	703389	19	True				
ANR	703636	IdentifierDecl	* lfl = NULL		703389	0					
ANR	703637	IdentifierDeclType	int *		703389	0					
ANR	703638	Identifier	lfl		703389	1					
ANR	703639	AssignmentExpression	* lfl = NULL		703389	2		=			
ANR	703640	Identifier	NULL		703389	0					
ANR	703641	Identifier	NULL		703389	1					
ANR	703642	IdentifierDeclStatement	char * lfc = NULL ;	928:1:26661:26677	703389	20	True				
ANR	703643	IdentifierDecl	* lfc = NULL		703389	0					
ANR	703644	IdentifierDeclType	char *		703389	0					
ANR	703645	Identifier	lfc		703389	1					
ANR	703646	AssignmentExpression	* lfc = NULL		703389	2		=			
ANR	703647	Identifier	NULL		703389	0					
ANR	703648	Identifier	NULL		703389	1					
ANR	703649	IdentifierDeclStatement	int lflc = 0 ;	929:1:26680:26692	703389	21	True				
ANR	703650	IdentifierDecl	lflc = 0		703389	0					
ANR	703651	IdentifierDeclType	int		703389	0					
ANR	703652	Identifier	lflc		703389	1					
ANR	703653	AssignmentExpression	lflc = 0		703389	2		=			
ANR	703654	Identifier	lflc		703389	0					
ANR	703655	PrimaryExpression	0		703389	1					
ANR	703656	Statement	r_list_foreach	933:1:26818:26831	703389	22	True				
ANR	703657	Statement	(	933:16:26833:26833	703389	23	True				
ANR	703658	Statement	list	933:17:26834:26837	703389	24	True				
ANR	703659	Statement	","	933:21:26838:26838	703389	25	True				
ANR	703660	Statement	iter	933:23:26840:26843	703389	26	True				
ANR	703661	Statement	","	933:27:26844:26844	703389	27	True				
ANR	703662	Statement	row	933:29:26846:26848	703389	28	True				
ANR	703663	Statement	)	933:32:26849:26849	703389	29	True				
ANR	703664	CompoundStatement		49:34:1302:1302	703389	30					
ANR	703665	IfStatement	if ( r_cons_is_breaked ( ) )		703389	0					
ANR	703666	Condition	r_cons_is_breaked ( )	934:6:26859:26878	703389	0	True				
ANR	703667	CallExpression	r_cons_is_breaked ( )		703389	0					
ANR	703668	Callee	r_cons_is_breaked		703389	0					
ANR	703669	Identifier	r_cons_is_breaked		703389	0					
ANR	703670	ArgumentList			703389	1					
ANR	703671	CompoundStatement		50:28:1332:1332	703389	1					
ANR	703672	BreakStatement	break ;	935:3:26886:26891	703389	0	True				
ANR	703673	IfStatement	if ( mode )		703389	1					
ANR	703674	Condition	mode	937:6:26903:26906	703389	0	True				
ANR	703675	Identifier	mode		703389	0					
ANR	703676	CompoundStatement		98:3:2802:2833	703389	1					
ANR	703677	IdentifierDeclStatement	const char * path = row -> file ;	939:3:26949:26977	703389	0	True				
ANR	703678	IdentifierDecl	* path = row -> file		703389	0					
ANR	703679	IdentifierDeclType	const char *		703389	0					
ANR	703680	Identifier	path		703389	1					
ANR	703681	AssignmentExpression	* path = row -> file		703389	2		=			
ANR	703682	Identifier	path		703389	0					
ANR	703683	PtrMemberAccess	row -> file		703389	1					
ANR	703684	Identifier	row		703389	0					
ANR	703685	Identifier	file		703389	1					
ANR	703686	IfStatement	"if ( ! lastFile || strcmp ( path , lastFile ) )"		703389	1					
ANR	703687	Condition	"! lastFile || strcmp ( path , lastFile )"	940:7:26986:27021	703389	0	True				
ANR	703688	OrExpression	"! lastFile || strcmp ( path , lastFile )"		703389	0		||			
ANR	703689	UnaryOperationExpression	! lastFile		703389	0					
ANR	703690	UnaryOperator	!		703389	0					
ANR	703691	Identifier	lastFile		703389	1					
ANR	703692	CallExpression	"strcmp ( path , lastFile )"		703389	1					
ANR	703693	Callee	strcmp		703389	0					
ANR	703694	Identifier	strcmp		703389	0					
ANR	703695	ArgumentList	path		703389	1					
ANR	703696	Argument	path		703389	0					
ANR	703697	Identifier	path		703389	0					
ANR	703698	Argument	lastFile		703389	1					
ANR	703699	Identifier	lastFile		703389	0					
ANR	703700	CompoundStatement		56:45:1475:1475	703389	1					
ANR	703701	IfStatement	"if ( lastFile && lastFile2 && ! strcmp ( path , lastFile2 ) )"		703389	0					
ANR	703702	Condition	"lastFile && lastFile2 && ! strcmp ( path , lastFile2 )"	941:8:27034:27083	703389	0	True				
ANR	703703	AndExpression	"lastFile && lastFile2 && ! strcmp ( path , lastFile2 )"		703389	0		&&			
ANR	703704	Identifier	lastFile		703389	0					
ANR	703705	AndExpression	"lastFile2 && ! strcmp ( path , lastFile2 )"		703389	1		&&			
ANR	703706	Identifier	lastFile2		703389	0					
ANR	703707	UnaryOperationExpression	"! strcmp ( path , lastFile2 )"		703389	1					
ANR	703708	UnaryOperator	!		703389	0					
ANR	703709	CallExpression	"strcmp ( path , lastFile2 )"		703389	1					
ANR	703710	Callee	strcmp		703389	0					
ANR	703711	Identifier	strcmp		703389	0					
ANR	703712	ArgumentList	path		703389	1					
ANR	703713	Argument	path		703389	0					
ANR	703714	Identifier	path		703389	0					
ANR	703715	Argument	lastFile2		703389	1					
ANR	703716	Identifier	lastFile2		703389	0					
ANR	703717	CompoundStatement		57:60:1537:1537	703389	1					
ANR	703718	ExpressionStatement	lf = lastFile	942:5:27093:27106	703389	0	True				
ANR	703719	AssignmentExpression	lf = lastFile		703389	0		=			
ANR	703720	Identifier	lf		703389	0					
ANR	703721	Identifier	lastFile		703389	1					
ANR	703722	ExpressionStatement	lfl = lastFileLines	943:5:27113:27132	703389	1	True				
ANR	703723	AssignmentExpression	lfl = lastFileLines		703389	0		=			
ANR	703724	Identifier	lfl		703389	0					
ANR	703725	Identifier	lastFileLines		703389	1					
ANR	703726	ExpressionStatement	lfc = lastFileContents	944:5:27139:27161	703389	2	True				
ANR	703727	AssignmentExpression	lfc = lastFileContents		703389	0		=			
ANR	703728	Identifier	lfc		703389	0					
ANR	703729	Identifier	lastFileContents		703389	1					
ANR	703730	ExpressionStatement	lflc = lastFileLinesCount	945:5:27168:27193	703389	3	True				
ANR	703731	AssignmentExpression	lflc = lastFileLinesCount		703389	0		=			
ANR	703732	Identifier	lflc		703389	0					
ANR	703733	Identifier	lastFileLinesCount		703389	1					
ANR	703734	ExpressionStatement	lastFile = lastFile2	946:5:27200:27220	703389	4	True				
ANR	703735	AssignmentExpression	lastFile = lastFile2		703389	0		=			
ANR	703736	Identifier	lastFile		703389	0					
ANR	703737	Identifier	lastFile2		703389	1					
ANR	703738	ExpressionStatement	lastFileLines = lastFileLines2	947:5:27227:27257	703389	5	True				
ANR	703739	AssignmentExpression	lastFileLines = lastFileLines2		703389	0		=			
ANR	703740	Identifier	lastFileLines		703389	0					
ANR	703741	Identifier	lastFileLines2		703389	1					
ANR	703742	ExpressionStatement	lastFileContents = lastFileContents2	948:5:27264:27300	703389	6	True				
ANR	703743	AssignmentExpression	lastFileContents = lastFileContents2		703389	0		=			
ANR	703744	Identifier	lastFileContents		703389	0					
ANR	703745	Identifier	lastFileContents2		703389	1					
ANR	703746	ExpressionStatement	lastFileLinesCount = lastFileLinesCount2	949:5:27307:27347	703389	7	True				
ANR	703747	AssignmentExpression	lastFileLinesCount = lastFileLinesCount2		703389	0		=			
ANR	703748	Identifier	lastFileLinesCount		703389	0					
ANR	703749	Identifier	lastFileLinesCount2		703389	1					
ANR	703750	ExpressionStatement	lastFile2 = lf	950:5:27354:27368	703389	8	True				
ANR	703751	AssignmentExpression	lastFile2 = lf		703389	0		=			
ANR	703752	Identifier	lastFile2		703389	0					
ANR	703753	Identifier	lf		703389	1					
ANR	703754	ExpressionStatement	lastFileLines2 = lfl	951:5:27375:27395	703389	9	True				
ANR	703755	AssignmentExpression	lastFileLines2 = lfl		703389	0		=			
ANR	703756	Identifier	lastFileLines2		703389	0					
ANR	703757	Identifier	lfl		703389	1					
ANR	703758	ExpressionStatement	lastFileContents2 = lfc	952:5:27402:27425	703389	10	True				
ANR	703759	AssignmentExpression	lastFileContents2 = lfc		703389	0		=			
ANR	703760	Identifier	lastFileContents2		703389	0					
ANR	703761	Identifier	lfc		703389	1					
ANR	703762	ExpressionStatement	lastFileLinesCount2 = lflc	953:5:27432:27458	703389	11	True				
ANR	703763	AssignmentExpression	lastFileLinesCount2 = lflc		703389	0		=			
ANR	703764	Identifier	lastFileLinesCount2		703389	0					
ANR	703765	Identifier	lflc		703389	1					
ANR	703766	ElseStatement	else		703389	0					
ANR	703767	CompoundStatement		70:11:1922:1922	703389	0					
ANR	703768	ExpressionStatement	lastFile2 = lastFile	955:5:27478:27498	703389	0	True				
ANR	703769	AssignmentExpression	lastFile2 = lastFile		703389	0		=			
ANR	703770	Identifier	lastFile2		703389	0					
ANR	703771	Identifier	lastFile		703389	1					
ANR	703772	ExpressionStatement	lastFileLines2 = lastFileLines	956:5:27505:27535	703389	1	True				
ANR	703773	AssignmentExpression	lastFileLines2 = lastFileLines		703389	0		=			
ANR	703774	Identifier	lastFileLines2		703389	0					
ANR	703775	Identifier	lastFileLines		703389	1					
ANR	703776	ExpressionStatement	lastFileContents2 = lastFileContents	957:5:27542:27578	703389	2	True				
ANR	703777	AssignmentExpression	lastFileContents2 = lastFileContents		703389	0		=			
ANR	703778	Identifier	lastFileContents2		703389	0					
ANR	703779	Identifier	lastFileContents		703389	1					
ANR	703780	ExpressionStatement	lastFileLinesCount2 = lastFileLinesCount	958:5:27585:27625	703389	3	True				
ANR	703781	AssignmentExpression	lastFileLinesCount2 = lastFileLinesCount		703389	0		=			
ANR	703782	Identifier	lastFileLinesCount2		703389	0					
ANR	703783	Identifier	lastFileLinesCount		703389	1					
ANR	703784	ExpressionStatement	lastFile = path	959:5:27632:27647	703389	4	True				
ANR	703785	AssignmentExpression	lastFile = path		703389	0		=			
ANR	703786	Identifier	lastFile		703389	0					
ANR	703787	Identifier	path		703389	1					
ANR	703788	ExpressionStatement	"lastFileContents = r_file_slurp ( path , NULL )"	960:5:27654:27698	703389	5	True				
ANR	703789	AssignmentExpression	"lastFileContents = r_file_slurp ( path , NULL )"		703389	0		=			
ANR	703790	Identifier	lastFileContents		703389	0					
ANR	703791	CallExpression	"r_file_slurp ( path , NULL )"		703389	1					
ANR	703792	Callee	r_file_slurp		703389	0					
ANR	703793	Identifier	r_file_slurp		703389	0					
ANR	703794	ArgumentList	path		703389	1					
ANR	703795	Argument	path		703389	0					
ANR	703796	Identifier	path		703389	0					
ANR	703797	Argument	NULL		703389	1					
ANR	703798	Identifier	NULL		703389	0					
ANR	703799	IfStatement	if ( lastFileContents )		703389	6					
ANR	703800	Condition	lastFileContents	961:9:27709:27724	703389	0	True				
ANR	703801	Identifier	lastFileContents		703389	0					
ANR	703802	CompoundStatement		77:27:2178:2178	703389	1					
ANR	703803	ExpressionStatement	"lastFileLines = r_str_split_lines ( lastFileContents , & lastFileLinesCount )"	962:6:27735:27808	703389	0	True				
ANR	703804	AssignmentExpression	"lastFileLines = r_str_split_lines ( lastFileContents , & lastFileLinesCount )"		703389	0		=			
ANR	703805	Identifier	lastFileLines		703389	0					
ANR	703806	CallExpression	"r_str_split_lines ( lastFileContents , & lastFileLinesCount )"		703389	1					
ANR	703807	Callee	r_str_split_lines		703389	0					
ANR	703808	Identifier	r_str_split_lines		703389	0					
ANR	703809	ArgumentList	lastFileContents		703389	1					
ANR	703810	Argument	lastFileContents		703389	0					
ANR	703811	Identifier	lastFileContents		703389	0					
ANR	703812	Argument	& lastFileLinesCount		703389	1					
ANR	703813	UnaryOperationExpression	& lastFileLinesCount		703389	0					
ANR	703814	UnaryOperator	&		703389	0					
ANR	703815	Identifier	lastFileLinesCount		703389	1					
ANR	703816	IdentifierDeclStatement	char * line = NULL ;	966:3:27831:27848	703389	2	True				
ANR	703817	IdentifierDecl	* line = NULL		703389	0					
ANR	703818	IdentifierDeclType	char *		703389	0					
ANR	703819	Identifier	line		703389	1					
ANR	703820	AssignmentExpression	* line = NULL		703389	2		=			
ANR	703821	Identifier	NULL		703389	0					
ANR	703822	Identifier	NULL		703389	1					
ANR	703823	IfStatement	if ( lastFileLines && lastFileContents )		703389	3					
ANR	703824	Condition	lastFileLines && lastFileContents	968:7:27906:27938	703389	0	True				
ANR	703825	AndExpression	lastFileLines && lastFileContents		703389	0		&&			
ANR	703826	Identifier	lastFileLines		703389	0					
ANR	703827	Identifier	lastFileContents		703389	1					
ANR	703828	CompoundStatement		85:4:2398:2420	703389	1					
ANR	703829	IdentifierDeclStatement	int nl = row -> line - 1 ;	969:4:27947:27969	703389	0	True				
ANR	703830	IdentifierDecl	nl = row -> line - 1		703389	0					
ANR	703831	IdentifierDeclType	int		703389	0					
ANR	703832	Identifier	nl		703389	1					
ANR	703833	AssignmentExpression	nl = row -> line - 1		703389	2		=			
ANR	703834	Identifier	nl		703389	0					
ANR	703835	AdditiveExpression	row -> line - 1		703389	1		-			
ANR	703836	PtrMemberAccess	row -> line		703389	0					
ANR	703837	Identifier	row		703389	0					
ANR	703838	Identifier	line		703389	1					
ANR	703839	PrimaryExpression	1		703389	1					
ANR	703840	IfStatement	if ( nl >= 0 && nl < lastFileLinesCount )		703389	1					
ANR	703841	Condition	nl >= 0 && nl < lastFileLinesCount	970:8:27979:28012	703389	0	True				
ANR	703842	AndExpression	nl >= 0 && nl < lastFileLinesCount		703389	0		&&			
ANR	703843	RelationalExpression	nl >= 0		703389	0		>=			
ANR	703844	Identifier	nl		703389	0					
ANR	703845	PrimaryExpression	0		703389	1					
ANR	703846	RelationalExpression	nl < lastFileLinesCount		703389	1		<			
ANR	703847	Identifier	nl		703389	0					
ANR	703848	Identifier	lastFileLinesCount		703389	1					
ANR	703849	CompoundStatement		86:44:2466:2466	703389	1					
ANR	703850	ExpressionStatement	line = strdup ( lastFileContents + lastFileLines [ nl ] )	971:5:28022:28074	703389	0	True				
ANR	703851	AssignmentExpression	line = strdup ( lastFileContents + lastFileLines [ nl ] )		703389	0		=			
ANR	703852	Identifier	line		703389	0					
ANR	703853	CallExpression	strdup ( lastFileContents + lastFileLines [ nl ] )		703389	1					
ANR	703854	Callee	strdup		703389	0					
ANR	703855	Identifier	strdup		703389	0					
ANR	703856	ArgumentList	lastFileContents + lastFileLines [ nl ]		703389	1					
ANR	703857	Argument	lastFileContents + lastFileLines [ nl ]		703389	0					
ANR	703858	AdditiveExpression	lastFileContents + lastFileLines [ nl ]		703389	0		+			
ANR	703859	Identifier	lastFileContents		703389	0					
ANR	703860	ArrayIndexing	lastFileLines [ nl ]		703389	1					
ANR	703861	Identifier	lastFileLines		703389	0					
ANR	703862	Identifier	nl		703389	1					
ANR	703863	ElseStatement	else		703389	0					
ANR	703864	CompoundStatement		89:10:2543:2543	703389	0					
ANR	703865	ExpressionStatement	line = NULL	974:4:28098:28109	703389	0	True				
ANR	703866	AssignmentExpression	line = NULL		703389	0		=			
ANR	703867	Identifier	line		703389	0					
ANR	703868	Identifier	NULL		703389	1					
ANR	703869	IfStatement	if ( line )		703389	4					
ANR	703870	Condition	line	976:7:28123:28126	703389	0	True				
ANR	703871	Identifier	line		703389	0					
ANR	703872	CompoundStatement		92:13:2580:2580	703389	1					
ANR	703873	ExpressionStatement	"r_str_filter ( line , strlen ( line ) )"	977:4:28135:28169	703389	0	True				
ANR	703874	CallExpression	"r_str_filter ( line , strlen ( line ) )"		703389	0					
ANR	703875	Callee	r_str_filter		703389	0					
ANR	703876	Identifier	r_str_filter		703389	0					
ANR	703877	ArgumentList	line		703389	1					
ANR	703878	Argument	line		703389	0					
ANR	703879	Identifier	line		703389	0					
ANR	703880	Argument	strlen ( line )		703389	1					
ANR	703881	CallExpression	strlen ( line )		703389	0					
ANR	703882	Callee	strlen		703389	0					
ANR	703883	Identifier	strlen		703389	0					
ANR	703884	ArgumentList	line		703389	1					
ANR	703885	Argument	line		703389	0					
ANR	703886	Identifier	line		703389	0					
ANR	703887	ExpressionStatement	"line = r_str_replace ( line , ""\\"""" , ""\\\\\\"""" , 1 )"	978:4:28175:28219	703389	1	True				
ANR	703888	AssignmentExpression	"line = r_str_replace ( line , ""\\"""" , ""\\\\\\"""" , 1 )"		703389	0		=			
ANR	703889	Identifier	line		703389	0					
ANR	703890	CallExpression	"r_str_replace ( line , ""\\"""" , ""\\\\\\"""" , 1 )"		703389	1					
ANR	703891	Callee	r_str_replace		703389	0					
ANR	703892	Identifier	r_str_replace		703389	0					
ANR	703893	ArgumentList	line		703389	1					
ANR	703894	Argument	line		703389	0					
ANR	703895	Identifier	line		703389	0					
ANR	703896	Argument	"""\\"""""		703389	1					
ANR	703897	PrimaryExpression	"""\\"""""		703389	0					
ANR	703898	Argument	"""\\\\\\"""""		703389	2					
ANR	703899	PrimaryExpression	"""\\\\\\"""""		703389	0					
ANR	703900	Argument	1		703389	3					
ANR	703901	PrimaryExpression	1		703389	0					
ANR	703902	ExpressionStatement	"line = r_str_replace ( line , ""\\\\\\\\"" , ""\\\\"" , 1 )"	979:4:28225:28269	703389	2	True				
ANR	703903	AssignmentExpression	"line = r_str_replace ( line , ""\\\\\\\\"" , ""\\\\"" , 1 )"		703389	0		=			
ANR	703904	Identifier	line		703389	0					
ANR	703905	CallExpression	"r_str_replace ( line , ""\\\\\\\\"" , ""\\\\"" , 1 )"		703389	1					
ANR	703906	Callee	r_str_replace		703389	0					
ANR	703907	Identifier	r_str_replace		703389	0					
ANR	703908	ArgumentList	line		703389	1					
ANR	703909	Argument	line		703389	0					
ANR	703910	Identifier	line		703389	0					
ANR	703911	Argument	"""\\\\\\\\"""		703389	1					
ANR	703912	PrimaryExpression	"""\\\\\\\\"""		703389	0					
ANR	703913	Argument	"""\\\\"""		703389	2					
ANR	703914	PrimaryExpression	"""\\\\"""		703389	0					
ANR	703915	Argument	1		703389	3					
ANR	703916	PrimaryExpression	1		703389	0					
ANR	703917	IdentifierDeclStatement	"bool chopPath = ! r_config_get_i ( core -> config , ""dir.dwarf.abspath"" ) ;"	981:3:28279:28346	703389	5	True				
ANR	703918	IdentifierDecl	"chopPath = ! r_config_get_i ( core -> config , ""dir.dwarf.abspath"" )"		703389	0					
ANR	703919	IdentifierDeclType	bool		703389	0					
ANR	703920	Identifier	chopPath		703389	1					
ANR	703921	AssignmentExpression	"chopPath = ! r_config_get_i ( core -> config , ""dir.dwarf.abspath"" )"		703389	2		=			
ANR	703922	Identifier	chopPath		703389	0					
ANR	703923	UnaryOperationExpression	"! r_config_get_i ( core -> config , ""dir.dwarf.abspath"" )"		703389	1					
ANR	703924	UnaryOperator	!		703389	0					
ANR	703925	CallExpression	"r_config_get_i ( core -> config , ""dir.dwarf.abspath"" )"		703389	1					
ANR	703926	Callee	r_config_get_i		703389	0					
ANR	703927	Identifier	r_config_get_i		703389	0					
ANR	703928	ArgumentList	core -> config		703389	1					
ANR	703929	Argument	core -> config		703389	0					
ANR	703930	PtrMemberAccess	core -> config		703389	0					
ANR	703931	Identifier	core		703389	0					
ANR	703932	Identifier	config		703389	1					
ANR	703933	Argument	"""dir.dwarf.abspath"""		703389	1					
ANR	703934	PrimaryExpression	"""dir.dwarf.abspath"""		703389	0					
ANR	703935	IdentifierDeclStatement	char * file = strdup ( row -> file ) ;	982:3:28351:28382	703389	6	True				
ANR	703936	IdentifierDecl	* file = strdup ( row -> file )		703389	0					
ANR	703937	IdentifierDeclType	char *		703389	0					
ANR	703938	Identifier	file		703389	1					
ANR	703939	AssignmentExpression	* file = strdup ( row -> file )		703389	2		=			
ANR	703940	Identifier	file		703389	0					
ANR	703941	CallExpression	strdup ( row -> file )		703389	1					
ANR	703942	Callee	strdup		703389	0					
ANR	703943	Identifier	strdup		703389	0					
ANR	703944	ArgumentList	row -> file		703389	1					
ANR	703945	Argument	row -> file		703389	0					
ANR	703946	PtrMemberAccess	row -> file		703389	0					
ANR	703947	Identifier	row		703389	0					
ANR	703948	Identifier	file		703389	1					
ANR	703949	IfStatement	if ( chopPath )		703389	7					
ANR	703950	Condition	chopPath	983:7:28391:28398	703389	0	True				
ANR	703951	Identifier	chopPath		703389	0					
ANR	703952	CompoundStatement		100:4:2858:2900	703389	1					
ANR	703953	IdentifierDeclStatement	"const char * slash = r_str_lchr ( file , '/' ) ;"	984:4:28407:28449	703389	0	True				
ANR	703954	IdentifierDecl	"* slash = r_str_lchr ( file , '/' )"		703389	0					
ANR	703955	IdentifierDeclType	const char *		703389	0					
ANR	703956	Identifier	slash		703389	1					
ANR	703957	AssignmentExpression	"* slash = r_str_lchr ( file , '/' )"		703389	2		=			
ANR	703958	Identifier	slash		703389	0					
ANR	703959	CallExpression	"r_str_lchr ( file , '/' )"		703389	1					
ANR	703960	Callee	r_str_lchr		703389	0					
ANR	703961	Identifier	r_str_lchr		703389	0					
ANR	703962	ArgumentList	file		703389	1					
ANR	703963	Argument	file		703389	0					
ANR	703964	Identifier	file		703389	0					
ANR	703965	Argument	'/'		703389	1					
ANR	703966	PrimaryExpression	'/'		703389	0					
ANR	703967	IfStatement	if ( slash )		703389	1					
ANR	703968	Condition	slash	985:8:28459:28463	703389	0	True				
ANR	703969	Identifier	slash		703389	0					
ANR	703970	CompoundStatement		101:15:2917:2917	703389	1					
ANR	703971	ExpressionStatement	"memmove ( file , slash + 1 , strlen ( slash ) )"	986:5:28473:28514	703389	0	True				
ANR	703972	CallExpression	"memmove ( file , slash + 1 , strlen ( slash ) )"		703389	0					
ANR	703973	Callee	memmove		703389	0					
ANR	703974	Identifier	memmove		703389	0					
ANR	703975	ArgumentList	file		703389	1					
ANR	703976	Argument	file		703389	0					
ANR	703977	Identifier	file		703389	0					
ANR	703978	Argument	slash + 1		703389	1					
ANR	703979	AdditiveExpression	slash + 1		703389	0		+			
ANR	703980	Identifier	slash		703389	0					
ANR	703981	PrimaryExpression	1		703389	1					
ANR	703982	Argument	strlen ( slash )		703389	2					
ANR	703983	CallExpression	strlen ( slash )		703389	0					
ANR	703984	Callee	strlen		703389	0					
ANR	703985	Identifier	strlen		703389	0					
ANR	703986	ArgumentList	slash		703389	1					
ANR	703987	Argument	slash		703389	0					
ANR	703988	Identifier	slash		703389	0					
ANR	703989	IfStatement	if ( ( mode & R_MODE_SET ) )		703389	8					
ANR	703990	Condition	mode & R_MODE_SET	990:7:28592:28610	703389	0	True				
ANR	703991	BitAndExpression	mode & R_MODE_SET		703389	0		&			
ANR	703992	Identifier	mode		703389	0					
ANR	703993	Identifier	R_MODE_SET		703389	1					
ANR	703994	CompoundStatement		110:4:3246:3319	703389	1					
ANR	703995	IdentifierDeclStatement	"char * cmt = r_str_newf ( ""%s:%d %s"" , file , ( int ) row -> line , line ? line : """" ) ;"	994:4:28795:28868	703389	0	True				
ANR	703996	IdentifierDecl	"* cmt = r_str_newf ( ""%s:%d %s"" , file , ( int ) row -> line , line ? line : """" )"		703389	0					
ANR	703997	IdentifierDeclType	char *		703389	0					
ANR	703998	Identifier	cmt		703389	1					
ANR	703999	AssignmentExpression	"* cmt = r_str_newf ( ""%s:%d %s"" , file , ( int ) row -> line , line ? line : """" )"		703389	2		=			
ANR	704000	Identifier	cmt		703389	0					
ANR	704001	CallExpression	"r_str_newf ( ""%s:%d %s"" , file , ( int ) row -> line , line ? line : """" )"		703389	1					
ANR	704002	Callee	r_str_newf		703389	0					
ANR	704003	Identifier	r_str_newf		703389	0					
ANR	704004	ArgumentList	"""%s:%d %s"""		703389	1					
ANR	704005	Argument	"""%s:%d %s"""		703389	0					
ANR	704006	PrimaryExpression	"""%s:%d %s"""		703389	0					
ANR	704007	Argument	file		703389	1					
ANR	704008	Identifier	file		703389	0					
ANR	704009	Argument	( int ) row -> line		703389	2					
ANR	704010	CastExpression	( int ) row -> line		703389	0					
ANR	704011	CastTarget	int		703389	0					
ANR	704012	PtrMemberAccess	row -> line		703389	1					
ANR	704013	Identifier	row		703389	0					
ANR	704014	Identifier	line		703389	1					
ANR	704015	Argument	"line ? line : """""		703389	3					
ANR	704016	ConditionalExpression	"line ? line : """""		703389	0					
ANR	704017	Condition	line		703389	0					
ANR	704018	Identifier	line		703389	0					
ANR	704019	Identifier	line		703389	1					
ANR	704020	PrimaryExpression	""""""		703389	2					
ANR	704021	ExpressionStatement	"r_meta_set_string ( core -> anal , R_META_TYPE_COMMENT , row -> address , cmt )"	995:4:28874:28944	703389	1	True				
ANR	704022	CallExpression	"r_meta_set_string ( core -> anal , R_META_TYPE_COMMENT , row -> address , cmt )"		703389	0					
ANR	704023	Callee	r_meta_set_string		703389	0					
ANR	704024	Identifier	r_meta_set_string		703389	0					
ANR	704025	ArgumentList	core -> anal		703389	1					
ANR	704026	Argument	core -> anal		703389	0					
ANR	704027	PtrMemberAccess	core -> anal		703389	0					
ANR	704028	Identifier	core		703389	0					
ANR	704029	Identifier	anal		703389	1					
ANR	704030	Argument	R_META_TYPE_COMMENT		703389	1					
ANR	704031	Identifier	R_META_TYPE_COMMENT		703389	0					
ANR	704032	Argument	row -> address		703389	2					
ANR	704033	PtrMemberAccess	row -> address		703389	0					
ANR	704034	Identifier	row		703389	0					
ANR	704035	Identifier	address		703389	1					
ANR	704036	Argument	cmt		703389	3					
ANR	704037	Identifier	cmt		703389	0					
ANR	704038	ExpressionStatement	free ( cmt )	996:4:28950:28960	703389	2	True				
ANR	704039	CallExpression	free ( cmt )		703389	0					
ANR	704040	Callee	free		703389	0					
ANR	704041	Identifier	free		703389	0					
ANR	704042	ArgumentList	cmt		703389	1					
ANR	704043	Argument	cmt		703389	0					
ANR	704044	Identifier	cmt		703389	0					
ANR	704045	ElseStatement	else		703389	0					
ANR	704046	CompoundStatement		114:10:3430:3430	703389	0					
ANR	704047	Statement	r_cons_printf	999:4:28985:28997	703389	0	True				
ANR	704048	Statement	(	999:18:28999:28999	703389	1	True				
ANR	704049	Statement	"""CL %s:%d 0x%08"""	999:19:29000:29015	703389	2	True				
ANR	704050	Statement	PFMT64x	999:36:29017:29023	703389	3	True				
ANR	704051	Statement	"""\\n"""	999:44:29025:29028	703389	4	True				
ANR	704052	Statement	","	999:48:29029:29029	703389	5	True				
ANR	704053	Statement	file	1000:12:29043:29046	703389	6	True				
ANR	704054	Statement	","	1000:16:29047:29047	703389	7	True				
ANR	704055	Statement	(	1000:18:29049:29049	703389	8	True				
ANR	704056	Statement	int	1000:19:29050:29052	703389	9	True				
ANR	704057	Statement	)	1000:22:29053:29053	703389	10	True				
ANR	704058	Statement	row	1000:23:29054:29056	703389	11	True				
ANR	704059	Statement	->	1000:26:29057:29058	703389	12	True				
ANR	704060	Statement	line	1000:28:29059:29062	703389	13	True				
ANR	704061	Statement	","	1000:32:29063:29063	703389	14	True				
ANR	704062	Statement	row	1001:12:29077:29079	703389	15	True				
ANR	704063	Statement	->	1001:15:29080:29081	703389	16	True				
ANR	704064	Statement	address	1001:17:29082:29088	703389	17	True				
ANR	704065	Statement	)	1001:24:29089:29089	703389	18	True				
ANR	704066	ExpressionStatement		1001:25:29090:29090	703389	19	True				
ANR	704067	Statement	r_cons_printf	1002:4:29096:29108	703389	20	True				
ANR	704068	Statement	(	1002:18:29110:29110	703389	21	True				
ANR	704069	Statement	"""\\""CC %s:%d %s\\""@0x%"""	1002:19:29111:29131	703389	22	True				
ANR	704070	Statement	PFMT64x	1002:41:29133:29139	703389	23	True				
ANR	704071	Statement	"""\\n"""	1003:12:29153:29156	703389	24	True				
ANR	704072	Statement	","	1003:16:29157:29157	703389	25	True				
ANR	704073	Statement	file	1004:12:29171:29174	703389	26	True				
ANR	704074	Statement	","	1004:16:29175:29175	703389	27	True				
ANR	704075	Statement	row	1004:18:29177:29179	703389	28	True				
ANR	704076	Statement	->	1004:21:29180:29181	703389	29	True				
ANR	704077	Statement	line	1004:23:29182:29185	703389	30	True				
ANR	704078	Statement	","	1004:27:29186:29186	703389	31	True				
ANR	704079	Statement	line	1005:12:29200:29203	703389	32	True				
ANR	704080	Statement	?	1005:17:29205:29205	703389	33	True				
ANR	704081	Label	line :	1005:19:29207:29212	703389	34	True				
ANR	704082	Identifier	line		703389	0					
ANR	704083	Statement	""""""	1005:26:29214:29215	703389	35	True				
ANR	704084	Statement	","	1005:28:29216:29216	703389	36	True				
ANR	704085	Statement	row	1005:30:29218:29220	703389	37	True				
ANR	704086	Statement	->	1005:33:29221:29222	703389	38	True				
ANR	704087	Statement	address	1005:35:29223:29229	703389	39	True				
ANR	704088	Statement	)	1005:42:29230:29230	703389	40	True				
ANR	704089	ExpressionStatement		1005:43:29231:29231	703389	41	True				
ANR	704090	ExpressionStatement	free ( file )	1007:3:29241:29252	703389	9	True				
ANR	704091	CallExpression	free ( file )		703389	0					
ANR	704092	Callee	free		703389	0					
ANR	704093	Identifier	free		703389	0					
ANR	704094	ArgumentList	file		703389	1					
ANR	704095	Argument	file		703389	0					
ANR	704096	Identifier	file		703389	0					
ANR	704097	ExpressionStatement	free ( line )	1008:3:29257:29268	703389	10	True				
ANR	704098	CallExpression	free ( line )		703389	0					
ANR	704099	Callee	free		703389	0					
ANR	704100	Identifier	free		703389	0					
ANR	704101	ArgumentList	line		703389	1					
ANR	704102	Argument	line		703389	0					
ANR	704103	Identifier	line		703389	0					
ANR	704104	ElseStatement	else		703389	0					
ANR	704105	CompoundStatement		125:9:3730:3730	703389	0					
ANR	704106	Statement	r_cons_printf	1010:3:29284:29296	703389	0	True				
ANR	704107	Statement	(	1010:17:29298:29298	703389	1	True				
ANR	704108	Statement	"""0x%08"""	1010:18:29299:29305	703389	2	True				
ANR	704109	Statement	PFMT64x	1010:26:29307:29313	703389	3	True				
ANR	704110	Statement	"""\\t%s\\t%d\\n"""	1010:34:29315:29326	703389	4	True				
ANR	704111	Statement	","	1010:46:29327:29327	703389	5	True				
ANR	704112	Statement	row	1011:11:29340:29342	703389	6	True				
ANR	704113	Statement	->	1011:14:29343:29344	703389	7	True				
ANR	704114	Statement	address	1011:16:29345:29351	703389	8	True				
ANR	704115	Statement	","	1011:23:29352:29352	703389	9	True				
ANR	704116	Statement	row	1011:25:29354:29356	703389	10	True				
ANR	704117	Statement	->	1011:28:29357:29358	703389	11	True				
ANR	704118	Statement	file	1011:30:29359:29362	703389	12	True				
ANR	704119	Statement	","	1011:34:29363:29363	703389	13	True				
ANR	704120	Statement	row	1011:36:29365:29367	703389	14	True				
ANR	704121	Statement	->	1011:39:29368:29369	703389	15	True				
ANR	704122	Statement	line	1011:41:29370:29373	703389	16	True				
ANR	704123	Statement	)	1011:45:29374:29374	703389	17	True				
ANR	704124	ExpressionStatement		1011:46:29375:29375	703389	18	True				
ANR	704125	ExpressionStatement	r_cons_break_pop ( )	1014:1:29385:29404	703389	31	True				
ANR	704126	CallExpression	r_cons_break_pop ( )		703389	0					
ANR	704127	Callee	r_cons_break_pop		703389	0					
ANR	704128	Identifier	r_cons_break_pop		703389	0					
ANR	704129	ArgumentList			703389	1					
ANR	704130	ExpressionStatement	R_FREE ( lastFileContents )	1015:1:29407:29432	703389	32	True				
ANR	704131	CallExpression	R_FREE ( lastFileContents )		703389	0					
ANR	704132	Callee	R_FREE		703389	0					
ANR	704133	Identifier	R_FREE		703389	0					
ANR	704134	ArgumentList	lastFileContents		703389	1					
ANR	704135	Argument	lastFileContents		703389	0					
ANR	704136	Identifier	lastFileContents		703389	0					
ANR	704137	ExpressionStatement	R_FREE ( lastFileContents2 )	1016:1:29435:29461	703389	33	True				
ANR	704138	CallExpression	R_FREE ( lastFileContents2 )		703389	0					
ANR	704139	Callee	R_FREE		703389	0					
ANR	704140	Identifier	R_FREE		703389	0					
ANR	704141	ArgumentList	lastFileContents2		703389	1					
ANR	704142	Argument	lastFileContents2		703389	0					
ANR	704143	Identifier	lastFileContents2		703389	0					
ANR	704144	ExpressionStatement	free ( lastFileLines )	1019:1:29549:29569	703389	34	True				
ANR	704145	CallExpression	free ( lastFileLines )		703389	0					
ANR	704146	Callee	free		703389	0					
ANR	704147	Identifier	free		703389	0					
ANR	704148	ArgumentList	lastFileLines		703389	1					
ANR	704149	Argument	lastFileLines		703389	0					
ANR	704150	Identifier	lastFileLines		703389	0					
ANR	704151	ReturnStatement	return true ;	1020:1:29572:29583	703389	35	True				
ANR	704152	Identifier	true		703389	0					
ANR	704153	ReturnType	static int		703389	1					
ANR	704154	Identifier	bin_dwarf		703389	2					
ANR	704155	ParameterList	"RCore * core , int mode"		703389	3					
ANR	704156	Parameter	RCore * core	885:21:25525:25535	703389	0	True				
ANR	704157	ParameterType	RCore *		703389	0					
ANR	704158	Identifier	core		703389	1					
ANR	704159	Parameter	int mode	885:34:25538:25545	703389	1	True				
ANR	704160	ParameterType	int		703389	0					
ANR	704161	Identifier	mode		703389	1					
ANR	704162	CFGEntryNode	ENTRY		703389		True				
ANR	704163	CFGExitNode	EXIT		703389		True				
ANR	704164	CFGErrorNode	ERROR		703389		True				
ANR	704165	Symbol	* row		703389						
ANR	704166	Symbol	r_bin_dwarf_parse_line		703389						
ANR	704167	Symbol	binfile		703389						
ANR	704168	Symbol	& lastFileLinesCount		703389						
ANR	704169	Symbol	mode		703389						
ANR	704170	Symbol	path		703389						
ANR	704171	Symbol	strlen		703389						
ANR	704172	Symbol	r_bin_file_cur_plugin		703389						
ANR	704173	Symbol	lastFileContents2		703389						
ANR	704174	Symbol	row -> file		703389						
ANR	704175	Symbol	core -> bin		703389						
ANR	704176	Symbol	chopPath		703389						
ANR	704177	Symbol	strcmp		703389						
ANR	704178	Symbol	r_file_slurp		703389						
ANR	704179	Symbol	NULL		703389						
ANR	704180	Symbol	lastFileLinesCount		703389						
ANR	704181	Symbol	r_bin_cur		703389						
ANR	704182	Symbol	lfc		703389						
ANR	704183	Symbol	iter		703389						
ANR	704184	Symbol	list		703389						
ANR	704185	Symbol	lastFileLines2		703389						
ANR	704186	Symbol	core		703389						
ANR	704187	Symbol	lfl		703389						
ANR	704188	Symbol	r_str_lchr		703389						
ANR	704189	Symbol	r_config_get_i		703389						
ANR	704190	Symbol	true		703389						
ANR	704191	Symbol	nl		703389						
ANR	704192	Symbol	lflc		703389						
ANR	704193	Symbol	line		703389						
ANR	704194	Symbol	R_MODE_SET		703389						
ANR	704195	Symbol	R_META_TYPE_COMMENT		703389						
ANR	704196	Symbol	* core		703389						
ANR	704197	Symbol	* lastFileLines		703389						
ANR	704198	Symbol	cmt		703389						
ANR	704199	Symbol	r_str_newf		703389						
ANR	704200	Symbol	core -> anal		703389						
ANR	704201	Symbol	lastFile		703389						
ANR	704202	Symbol	r_cons_is_breaked		703389						
ANR	704203	Symbol	file		703389						
ANR	704204	Symbol	r_str_replace		703389						
ANR	704205	Symbol	row		703389						
ANR	704206	Symbol	lastFile2		703389						
ANR	704207	Symbol	core -> config		703389						
ANR	704208	Symbol	row -> line		703389						
ANR	704209	Symbol	* nl		703389						
ANR	704210	Symbol	false		703389						
ANR	704211	Symbol	* plugin		703389						
ANR	704212	Symbol	lastFileLinesCount2		703389						
ANR	704213	Symbol	lastFileLines		703389						
ANR	704214	Symbol	plugin		703389						
ANR	704215	Symbol	plugin -> lines		703389						
ANR	704216	Symbol	r_bin_dwarf_parse_abbrev		703389						
ANR	704217	Symbol	r_str_split_lines		703389						
ANR	704218	Symbol	lf		703389						
ANR	704219	Symbol	slash		703389						
ANR	704220	Symbol	strdup		703389						
ANR	704221	Symbol	da		703389						
ANR	704222	Symbol	row -> address		703389						
ANR	704223	Symbol	lastFileContents		703389						
ANR	704224	Function	r_core_pdb_info	1023:0:29588:30385							
ANR	704225	FunctionDef	"r_core_pdb_info (RCore * core , const char * file , ut64 baddr , int mode)"		704224	0					
ANR	704226	CompoundStatement		1023:79:29667:30385	704224	0					
ANR	704227	IdentifierDeclStatement	R_PDB pdb = R_EMPTY ;	1024:1:29670:29689	704224	0	True				
ANR	704228	IdentifierDecl	pdb = R_EMPTY		704224	0					
ANR	704229	IdentifierDeclType	R_PDB		704224	0					
ANR	704230	Identifier	pdb		704224	1					
ANR	704231	AssignmentExpression	pdb = R_EMPTY		704224	2		=			
ANR	704232	Identifier	R_EMPTY		704224	0					
ANR	704233	Identifier	R_EMPTY		704224	1					
ANR	704234	ExpressionStatement	pdb . cb_printf = r_cons_printf	1026:1:29693:29722	704224	1	True				
ANR	704235	AssignmentExpression	pdb . cb_printf = r_cons_printf		704224	0		=			
ANR	704236	MemberAccess	pdb . cb_printf		704224	0					
ANR	704237	Identifier	pdb		704224	0					
ANR	704238	Identifier	cb_printf		704224	1					
ANR	704239	Identifier	r_cons_printf		704224	1					
ANR	704240	IfStatement	"if ( ! init_pdb_parser ( & pdb , file ) )"		704224	2					
ANR	704241	Condition	"! init_pdb_parser ( & pdb , file )"	1027:5:29729:29757	704224	0	True				
ANR	704242	UnaryOperationExpression	"! init_pdb_parser ( & pdb , file )"		704224	0					
ANR	704243	UnaryOperator	!		704224	0					
ANR	704244	CallExpression	"init_pdb_parser ( & pdb , file )"		704224	1					
ANR	704245	Callee	init_pdb_parser		704224	0					
ANR	704246	Identifier	init_pdb_parser		704224	0					
ANR	704247	ArgumentList	& pdb		704224	1					
ANR	704248	Argument	& pdb		704224	0					
ANR	704249	UnaryOperationExpression	& pdb		704224	0					
ANR	704250	UnaryOperator	&		704224	0					
ANR	704251	Identifier	pdb		704224	1					
ANR	704252	Argument	file		704224	1					
ANR	704253	Identifier	file		704224	0					
ANR	704254	CompoundStatement		5:36:92:92	704224	1					
ANR	704255	ReturnStatement	return false ;	1028:2:29764:29776	704224	0	True				
ANR	704256	Identifier	false		704224	0					
ANR	704257	IfStatement	if ( ! pdb . pdb_parse ( & pdb ) )		704224	3					
ANR	704258	Condition	! pdb . pdb_parse ( & pdb )	1030:5:29786:29806	704224	0	True				
ANR	704259	UnaryOperationExpression	! pdb . pdb_parse ( & pdb )		704224	0					
ANR	704260	UnaryOperator	!		704224	0					
ANR	704261	CallExpression	pdb . pdb_parse ( & pdb )		704224	1					
ANR	704262	Callee	pdb . pdb_parse		704224	0					
ANR	704263	MemberAccess	pdb . pdb_parse		704224	0					
ANR	704264	Identifier	pdb		704224	0					
ANR	704265	Identifier	pdb_parse		704224	1					
ANR	704266	ArgumentList	& pdb		704224	1					
ANR	704267	Argument	& pdb		704224	0					
ANR	704268	UnaryOperationExpression	& pdb		704224	0					
ANR	704269	UnaryOperator	&		704224	0					
ANR	704270	Identifier	pdb		704224	1					
ANR	704271	CompoundStatement		8:28:141:141	704224	1					
ANR	704272	ExpressionStatement	"eprintf ( ""pdb was not parsed\\n"" )"	1031:2:29813:29845	704224	0	True				
ANR	704273	CallExpression	"eprintf ( ""pdb was not parsed\\n"" )"		704224	0					
ANR	704274	Callee	eprintf		704224	0					
ANR	704275	Identifier	eprintf		704224	0					
ANR	704276	ArgumentList	"""pdb was not parsed\\n"""		704224	1					
ANR	704277	Argument	"""pdb was not parsed\\n"""		704224	0					
ANR	704278	PrimaryExpression	"""pdb was not parsed\\n"""		704224	0					
ANR	704279	ExpressionStatement	pdb . finish_pdb_parse ( & pdb )	1032:2:29849:29876	704224	1	True				
ANR	704280	CallExpression	pdb . finish_pdb_parse ( & pdb )		704224	0					
ANR	704281	Callee	pdb . finish_pdb_parse		704224	0					
ANR	704282	MemberAccess	pdb . finish_pdb_parse		704224	0					
ANR	704283	Identifier	pdb		704224	0					
ANR	704284	Identifier	finish_pdb_parse		704224	1					
ANR	704285	ArgumentList	& pdb		704224	1					
ANR	704286	Argument	& pdb		704224	0					
ANR	704287	UnaryOperationExpression	& pdb		704224	0					
ANR	704288	UnaryOperator	&		704224	0					
ANR	704289	Identifier	pdb		704224	1					
ANR	704290	ReturnStatement	return false ;	1033:2:29880:29892	704224	2	True				
ANR	704291	Identifier	false		704224	0					
ANR	704292	IfStatement	if ( mode == R_MODE_JSON )		704224	4					
ANR	704293	Condition	mode == R_MODE_JSON	1035:5:29902:29920	704224	0	True				
ANR	704294	EqualityExpression	mode == R_MODE_JSON		704224	0		==			
ANR	704295	Identifier	mode		704224	0					
ANR	704296	Identifier	R_MODE_JSON		704224	1					
ANR	704297	CompoundStatement		13:26:255:255	704224	1					
ANR	704298	ExpressionStatement	"r_cons_printf ( ""["" )"	1036:2:29927:29946	704224	0	True				
ANR	704299	CallExpression	"r_cons_printf ( ""["" )"		704224	0					
ANR	704300	Callee	r_cons_printf		704224	0					
ANR	704301	Identifier	r_cons_printf		704224	0					
ANR	704302	ArgumentList	"""["""		704224	1					
ANR	704303	Argument	"""["""		704224	0					
ANR	704304	PrimaryExpression	"""["""		704224	0					
ANR	704305	SwitchStatement	switch ( mode )		704224	5					
ANR	704306	Condition	mode	1039:9:29961:29964	704224	0	True				
ANR	704307	Identifier	mode		704224	0					
ANR	704308	CompoundStatement		17:15:299:299	704224	1					
ANR	704309	Label	case R_MODE_SET :	1040:1:29970:29985	704224	0	True				
ANR	704310	Identifier	R_MODE_SET		704224	0					
ANR	704311	ExpressionStatement	mode = 's'	1041:2:29989:29999	704224	1	True				
ANR	704312	AssignmentExpression	mode = 's'		704224	0		=			
ANR	704313	Identifier	mode		704224	0					
ANR	704314	PrimaryExpression	's'		704224	1					
ANR	704315	ExpressionStatement	"r_core_cmd0 ( core , "".iP*"" )"	1042:2:30003:30029	704224	2	True				
ANR	704316	CallExpression	"r_core_cmd0 ( core , "".iP*"" )"		704224	0					
ANR	704317	Callee	r_core_cmd0		704224	0					
ANR	704318	Identifier	r_core_cmd0		704224	0					
ANR	704319	ArgumentList	core		704224	1					
ANR	704320	Argument	core		704224	0					
ANR	704321	Identifier	core		704224	0					
ANR	704322	Argument	""".iP*"""		704224	1					
ANR	704323	PrimaryExpression	""".iP*"""		704224	0					
ANR	704324	ReturnStatement	return true ;	1043:2:30033:30044	704224	3	True				
ANR	704325	Identifier	true		704224	0					
ANR	704326	Label	case R_MODE_JSON :	1044:1:30047:30063	704224	4	True				
ANR	704327	Identifier	R_MODE_JSON		704224	0					
ANR	704328	ExpressionStatement	mode = 'j'	1045:2:30067:30077	704224	5	True				
ANR	704329	AssignmentExpression	mode = 'j'		704224	0		=			
ANR	704330	Identifier	mode		704224	0					
ANR	704331	PrimaryExpression	'j'		704224	1					
ANR	704332	BreakStatement	break ;	1046:2:30081:30086	704224	6	True				
ANR	704333	Label	case '*' :	1047:1:30089:30097	704224	7	True				
ANR	704334	Label	case 1 :	1048:1:30100:30106	704224	8	True				
ANR	704335	ExpressionStatement	mode = 'r'	1049:2:30110:30120	704224	9	True				
ANR	704336	AssignmentExpression	mode = 'r'		704224	0		=			
ANR	704337	Identifier	mode		704224	0					
ANR	704338	PrimaryExpression	'r'		704224	1					
ANR	704339	BreakStatement	break ;	1050:2:30124:30129	704224	10	True				
ANR	704340	Label	default :	1051:1:30132:30139	704224	11	True				
ANR	704341	Identifier	default		704224	0					
ANR	704342	ExpressionStatement	mode = 'd'	1052:2:30143:30153	704224	12	True				
ANR	704343	AssignmentExpression	mode = 'd'		704224	0		=			
ANR	704344	Identifier	mode		704224	0					
ANR	704345	PrimaryExpression	'd'		704224	1					
ANR	704346	BreakStatement	break ;	1053:2:30168:30173	704224	13	True				
ANR	704347	ExpressionStatement	"pdb . print_types ( & pdb , mode )"	1056:1:30180:30208	704224	6	True				
ANR	704348	CallExpression	"pdb . print_types ( & pdb , mode )"		704224	0					
ANR	704349	Callee	pdb . print_types		704224	0					
ANR	704350	MemberAccess	pdb . print_types		704224	0					
ANR	704351	Identifier	pdb		704224	0					
ANR	704352	Identifier	print_types		704224	1					
ANR	704353	ArgumentList	& pdb		704224	1					
ANR	704354	Argument	& pdb		704224	0					
ANR	704355	UnaryOperationExpression	& pdb		704224	0					
ANR	704356	UnaryOperator	&		704224	0					
ANR	704357	Identifier	pdb		704224	1					
ANR	704358	Argument	mode		704224	1					
ANR	704359	Identifier	mode		704224	0					
ANR	704360	IfStatement	if ( mode == 'j' )		704224	7					
ANR	704361	Condition	mode == 'j'	1057:5:30215:30225	704224	0	True				
ANR	704362	EqualityExpression	mode == 'j'		704224	0		==			
ANR	704363	Identifier	mode		704224	0					
ANR	704364	PrimaryExpression	'j'		704224	1					
ANR	704365	CompoundStatement		35:18:560:560	704224	1					
ANR	704366	ExpressionStatement	"r_cons_printf ( "","" )"	1058:2:30232:30251	704224	0	True				
ANR	704367	CallExpression	"r_cons_printf ( "","" )"		704224	0					
ANR	704368	Callee	r_cons_printf		704224	0					
ANR	704369	Identifier	r_cons_printf		704224	0					
ANR	704370	ArgumentList	""","""		704224	1					
ANR	704371	Argument	""","""		704224	0					
ANR	704372	PrimaryExpression	""","""		704224	0					
ANR	704373	ExpressionStatement	"pdb . print_gvars ( & pdb , baddr , mode )"	1060:1:30257:30292	704224	8	True				
ANR	704374	CallExpression	"pdb . print_gvars ( & pdb , baddr , mode )"		704224	0					
ANR	704375	Callee	pdb . print_gvars		704224	0					
ANR	704376	MemberAccess	pdb . print_gvars		704224	0					
ANR	704377	Identifier	pdb		704224	0					
ANR	704378	Identifier	print_gvars		704224	1					
ANR	704379	ArgumentList	& pdb		704224	1					
ANR	704380	Argument	& pdb		704224	0					
ANR	704381	UnaryOperationExpression	& pdb		704224	0					
ANR	704382	UnaryOperator	&		704224	0					
ANR	704383	Identifier	pdb		704224	1					
ANR	704384	Argument	baddr		704224	1					
ANR	704385	Identifier	baddr		704224	0					
ANR	704386	Argument	mode		704224	2					
ANR	704387	Identifier	mode		704224	0					
ANR	704388	IfStatement	if ( mode == 'j' )		704224	9					
ANR	704389	Condition	mode == 'j'	1061:5:30299:30309	704224	0	True				
ANR	704390	EqualityExpression	mode == 'j'		704224	0		==			
ANR	704391	Identifier	mode		704224	0					
ANR	704392	PrimaryExpression	'j'		704224	1					
ANR	704393	CompoundStatement		39:18:644:644	704224	1					
ANR	704394	ExpressionStatement	"r_cons_printf ( ""]"" )"	1062:2:30316:30335	704224	0	True				
ANR	704395	CallExpression	"r_cons_printf ( ""]"" )"		704224	0					
ANR	704396	Callee	r_cons_printf		704224	0					
ANR	704397	Identifier	r_cons_printf		704224	0					
ANR	704398	ArgumentList	"""]"""		704224	1					
ANR	704399	Argument	"""]"""		704224	0					
ANR	704400	PrimaryExpression	"""]"""		704224	0					
ANR	704401	ExpressionStatement	pdb . finish_pdb_parse ( & pdb )	1064:1:30341:30368	704224	10	True				
ANR	704402	CallExpression	pdb . finish_pdb_parse ( & pdb )		704224	0					
ANR	704403	Callee	pdb . finish_pdb_parse		704224	0					
ANR	704404	MemberAccess	pdb . finish_pdb_parse		704224	0					
ANR	704405	Identifier	pdb		704224	0					
ANR	704406	Identifier	finish_pdb_parse		704224	1					
ANR	704407	ArgumentList	& pdb		704224	1					
ANR	704408	Argument	& pdb		704224	0					
ANR	704409	UnaryOperationExpression	& pdb		704224	0					
ANR	704410	UnaryOperator	&		704224	0					
ANR	704411	Identifier	pdb		704224	1					
ANR	704412	ReturnStatement	return true ;	1066:1:30372:30383	704224	11	True				
ANR	704413	Identifier	true		704224	0					
ANR	704414	ReturnType	R_API int		704224	1					
ANR	704415	Identifier	r_core_pdb_info		704224	2					
ANR	704416	ParameterList	"RCore * core , const char * file , ut64 baddr , int mode"		704224	3					
ANR	704417	Parameter	RCore * core	1023:26:29614:29624	704224	0	True				
ANR	704418	ParameterType	RCore *		704224	0					
ANR	704419	Identifier	core		704224	1					
ANR	704420	Parameter	const char * file	1023:39:29627:29642	704224	1	True				
ANR	704421	ParameterType	const char *		704224	0					
ANR	704422	Identifier	file		704224	1					
ANR	704423	Parameter	ut64 baddr	1023:57:29645:29654	704224	2	True				
ANR	704424	ParameterType	ut64		704224	0					
ANR	704425	Identifier	baddr		704224	1					
ANR	704426	Parameter	int mode	1023:69:29657:29664	704224	3	True				
ANR	704427	ParameterType	int		704224	0					
ANR	704428	Identifier	mode		704224	1					
ANR	704429	CFGEntryNode	ENTRY		704224		True				
ANR	704430	CFGExitNode	EXIT		704224		True				
ANR	704431	Symbol	pdb . cb_printf		704224						
ANR	704432	Symbol	baddr		704224						
ANR	704433	Symbol	false		704224						
ANR	704434	Symbol	R_EMPTY		704224						
ANR	704435	Symbol	init_pdb_parser		704224						
ANR	704436	Symbol	pdb		704224						
ANR	704437	Symbol	R_MODE_JSON		704224						
ANR	704438	Symbol	mode		704224						
ANR	704439	Symbol	core		704224						
ANR	704440	Symbol	file		704224						
ANR	704441	Symbol	& pdb		704224						
ANR	704442	Symbol	true		704224						
ANR	704443	Symbol	r_cons_printf		704224						
ANR	704444	Symbol	pdb . pdb_parse		704224						
ANR	704445	Function	bin_pdb	1069:0:30388:30537							
ANR	704446	FunctionDef	"bin_pdb (RCore * core , int mode)"		704445	0					
ANR	704447	CompoundStatement		1069:42:30430:30537	704445	0					
ANR	704448	IdentifierDeclStatement	ut64 baddr = r_bin_get_baddr ( core -> bin ) ;	1070:1:30433:30473	704445	0	True				
ANR	704449	IdentifierDecl	baddr = r_bin_get_baddr ( core -> bin )		704445	0					
ANR	704450	IdentifierDeclType	ut64		704445	0					
ANR	704451	Identifier	baddr		704445	1					
ANR	704452	AssignmentExpression	baddr = r_bin_get_baddr ( core -> bin )		704445	2		=			
ANR	704453	Identifier	baddr		704445	0					
ANR	704454	CallExpression	r_bin_get_baddr ( core -> bin )		704445	1					
ANR	704455	Callee	r_bin_get_baddr		704445	0					
ANR	704456	Identifier	r_bin_get_baddr		704445	0					
ANR	704457	ArgumentList	core -> bin		704445	1					
ANR	704458	Argument	core -> bin		704445	0					
ANR	704459	PtrMemberAccess	core -> bin		704445	0					
ANR	704460	Identifier	core		704445	0					
ANR	704461	Identifier	bin		704445	1					
ANR	704462	ReturnStatement	"return r_core_pdb_info ( core , core -> bin -> file , baddr , mode ) ;"	1071:1:30476:30535	704445	1	True				
ANR	704463	CallExpression	"r_core_pdb_info ( core , core -> bin -> file , baddr , mode )"		704445	0					
ANR	704464	Callee	r_core_pdb_info		704445	0					
ANR	704465	Identifier	r_core_pdb_info		704445	0					
ANR	704466	ArgumentList	core		704445	1					
ANR	704467	Argument	core		704445	0					
ANR	704468	Identifier	core		704445	0					
ANR	704469	Argument	core -> bin -> file		704445	1					
ANR	704470	PtrMemberAccess	core -> bin -> file		704445	0					
ANR	704471	PtrMemberAccess	core -> bin		704445	0					
ANR	704472	Identifier	core		704445	0					
ANR	704473	Identifier	bin		704445	1					
ANR	704474	Identifier	file		704445	1					
ANR	704475	Argument	baddr		704445	2					
ANR	704476	Identifier	baddr		704445	0					
ANR	704477	Argument	mode		704445	3					
ANR	704478	Identifier	mode		704445	0					
ANR	704479	ReturnType	static int		704445	1					
ANR	704480	Identifier	bin_pdb		704445	2					
ANR	704481	ParameterList	"RCore * core , int mode"		704445	3					
ANR	704482	Parameter	RCore * core	1069:19:30407:30417	704445	0	True				
ANR	704483	ParameterType	RCore *		704445	0					
ANR	704484	Identifier	core		704445	1					
ANR	704485	Parameter	int mode	1069:32:30420:30427	704445	1	True				
ANR	704486	ParameterType	int		704445	0					
ANR	704487	Identifier	mode		704445	1					
ANR	704488	CFGEntryNode	ENTRY		704445		True				
ANR	704489	CFGExitNode	EXIT		704445		True				
ANR	704490	Symbol	mode		704445						
ANR	704491	Symbol	core		704445						
ANR	704492	Symbol	baddr		704445						
ANR	704493	Symbol	core -> bin -> file		704445						
ANR	704494	Symbol	r_core_pdb_info		704445						
ANR	704495	Symbol	* core		704445						
ANR	704496	Symbol	r_bin_get_baddr		704445						
ANR	704497	Symbol	* core -> bin		704445						
ANR	704498	Symbol	core -> bin		704445						
ANR	704499	Symbol	* * core		704445						
ANR	704500	Function	srclineCmp	1074:0:30540:30624							
ANR	704501	FunctionDef	"srclineCmp (const void * a , const void * b)"		704500	0					
ANR	704502	CompoundStatement		1074:52:30592:30624	704500	0					
ANR	704503	ReturnStatement	"return r_str_cmp ( a , b , - 1 ) ;"	1075:1:30595:30622	704500	0	True				
ANR	704504	CallExpression	"r_str_cmp ( a , b , - 1 )"		704500	0					
ANR	704505	Callee	r_str_cmp		704500	0					
ANR	704506	Identifier	r_str_cmp		704500	0					
ANR	704507	ArgumentList	a		704500	1					
ANR	704508	Argument	a		704500	0					
ANR	704509	Identifier	a		704500	0					
ANR	704510	Argument	b		704500	1					
ANR	704511	Identifier	b		704500	0					
ANR	704512	Argument	- 1		704500	2					
ANR	704513	UnaryOperationExpression	- 1		704500	0					
ANR	704514	UnaryOperator	-		704500	0					
ANR	704515	PrimaryExpression	1		704500	1					
ANR	704516	ReturnType	static int		704500	1					
ANR	704517	Identifier	srclineCmp		704500	2					
ANR	704518	ParameterList	"const void * a , const void * b"		704500	3					
ANR	704519	Parameter	const void * a	1074:22:30562:30574	704500	0	True				
ANR	704520	ParameterType	const void *		704500	0					
ANR	704521	Identifier	a		704500	1					
ANR	704522	Parameter	const void * b	1074:37:30577:30589	704500	1	True				
ANR	704523	ParameterType	const void *		704500	0					
ANR	704524	Identifier	b		704500	1					
ANR	704525	CFGEntryNode	ENTRY		704500		True				
ANR	704526	CFGExitNode	EXIT		704500		True				
ANR	704527	Symbol	r_str_cmp		704500						
ANR	704528	Symbol	a		704500						
ANR	704529	Symbol	b		704500						
ANR	704530	Function	bin_source	1078:0:30627:31483							
ANR	704531	FunctionDef	"bin_source (RCore * r , int mode)"		704530	0					
ANR	704532	CompoundStatement		1078:42:30669:31483	704530	0					
ANR	704533	IdentifierDeclStatement	RList * final_list = r_list_new ( ) ;	1079:1:30672:30705	704530	0	True				
ANR	704534	IdentifierDecl	* final_list = r_list_new ( )		704530	0					
ANR	704535	IdentifierDeclType	RList *		704530	0					
ANR	704536	Identifier	final_list		704530	1					
ANR	704537	AssignmentExpression	* final_list = r_list_new ( )		704530	2		=			
ANR	704538	Identifier	final_list		704530	0					
ANR	704539	CallExpression	r_list_new ( )		704530	1					
ANR	704540	Callee	r_list_new		704530	0					
ANR	704541	Identifier	r_list_new		704530	0					
ANR	704542	ArgumentList			704530	1					
ANR	704543	IdentifierDeclStatement	RBinFile * binfile = r -> bin -> cur ;	1080:1:30708:30740	704530	1	True				
ANR	704544	IdentifierDecl	* binfile = r -> bin -> cur		704530	0					
ANR	704545	IdentifierDeclType	RBinFile *		704530	0					
ANR	704546	Identifier	binfile		704530	1					
ANR	704547	AssignmentExpression	* binfile = r -> bin -> cur		704530	2		=			
ANR	704548	Identifier	binfile		704530	0					
ANR	704549	PtrMemberAccess	r -> bin -> cur		704530	1					
ANR	704550	PtrMemberAccess	r -> bin		704530	0					
ANR	704551	Identifier	r		704530	0					
ANR	704552	Identifier	bin		704530	1					
ANR	704553	Identifier	cur		704530	1					
ANR	704554	IfStatement	if ( ! binfile )		704530	2					
ANR	704555	Condition	! binfile	1082:5:30748:30755	704530	0	True				
ANR	704556	UnaryOperationExpression	! binfile		704530	0					
ANR	704557	UnaryOperator	!		704530	0					
ANR	704558	Identifier	binfile		704530	1					
ANR	704559	CompoundStatement		5:15:88:88	704530	1					
ANR	704560	ExpressionStatement	"bprintf ( ""[Error bin file]\\n"" )"	1083:2:30762:30792	704530	0	True				
ANR	704561	CallExpression	"bprintf ( ""[Error bin file]\\n"" )"		704530	0					
ANR	704562	Callee	bprintf		704530	0					
ANR	704563	Identifier	bprintf		704530	0					
ANR	704564	ArgumentList	"""[Error bin file]\\n"""		704530	1					
ANR	704565	Argument	"""[Error bin file]\\n"""		704530	0					
ANR	704566	PrimaryExpression	"""[Error bin file]\\n"""		704530	0					
ANR	704567	ExpressionStatement	r_list_free ( final_list )	1084:2:30796:30820	704530	1	True				
ANR	704568	CallExpression	r_list_free ( final_list )		704530	0					
ANR	704569	Callee	r_list_free		704530	0					
ANR	704570	Identifier	r_list_free		704530	0					
ANR	704571	ArgumentList	final_list		704530	1					
ANR	704572	Argument	final_list		704530	0					
ANR	704573	Identifier	final_list		704530	0					
ANR	704574	ReturnStatement	return false ;	1085:2:30824:30836	704530	2	True				
ANR	704575	Identifier	false		704530	0					
ANR	704576	IdentifierDeclStatement	SdbListIter * iter ;	1088:1:30843:30860	704530	3	True				
ANR	704577	IdentifierDecl	* iter		704530	0					
ANR	704578	IdentifierDeclType	SdbListIter *		704530	0					
ANR	704579	Identifier	iter		704530	1					
ANR	704580	IdentifierDeclStatement	RListIter * iter2 ;	1089:1:30863:30879	704530	4	True				
ANR	704581	IdentifierDecl	* iter2		704530	0					
ANR	704582	IdentifierDeclType	RListIter *		704530	0					
ANR	704583	Identifier	iter2		704530	1					
ANR	704584	IdentifierDeclStatement	char * srcline ;	1090:1:30882:30895	704530	5	True				
ANR	704585	IdentifierDecl	* srcline		704530	0					
ANR	704586	IdentifierDeclType	char *		704530	0					
ANR	704587	Identifier	srcline		704530	1					
ANR	704588	IdentifierDeclStatement	SdbKv * kv ;	1091:1:30898:30907	704530	6	True				
ANR	704589	IdentifierDecl	* kv		704530	0					
ANR	704590	IdentifierDeclType	SdbKv *		704530	0					
ANR	704591	Identifier	kv		704530	1					
ANR	704592	IdentifierDeclStatement	"SdbList * ls = sdb_foreach_list ( binfile -> sdb_addrinfo , false ) ;"	1092:1:30910:30971	704530	7	True				
ANR	704593	IdentifierDecl	"* ls = sdb_foreach_list ( binfile -> sdb_addrinfo , false )"		704530	0					
ANR	704594	IdentifierDeclType	SdbList *		704530	0					
ANR	704595	Identifier	ls		704530	1					
ANR	704596	AssignmentExpression	"* ls = sdb_foreach_list ( binfile -> sdb_addrinfo , false )"		704530	2		=			
ANR	704597	Identifier	ls		704530	0					
ANR	704598	CallExpression	"sdb_foreach_list ( binfile -> sdb_addrinfo , false )"		704530	1					
ANR	704599	Callee	sdb_foreach_list		704530	0					
ANR	704600	Identifier	sdb_foreach_list		704530	0					
ANR	704601	ArgumentList	binfile -> sdb_addrinfo		704530	1					
ANR	704602	Argument	binfile -> sdb_addrinfo		704530	0					
ANR	704603	PtrMemberAccess	binfile -> sdb_addrinfo		704530	0					
ANR	704604	Identifier	binfile		704530	0					
ANR	704605	Identifier	sdb_addrinfo		704530	1					
ANR	704606	Argument	false		704530	1					
ANR	704607	Identifier	false		704530	0					
ANR	704608	Statement	ls_foreach	1093:1:30974:30983	704530	8	True				
ANR	704609	Statement	(	1093:12:30985:30985	704530	9	True				
ANR	704610	Statement	ls	1093:13:30986:30987	704530	10	True				
ANR	704611	Statement	","	1093:15:30988:30988	704530	11	True				
ANR	704612	Statement	iter	1093:17:30990:30993	704530	12	True				
ANR	704613	Statement	","	1093:21:30994:30994	704530	13	True				
ANR	704614	Statement	kv	1093:23:30996:30997	704530	14	True				
ANR	704615	Statement	)	1093:25:30998:30998	704530	15	True				
ANR	704616	CompoundStatement		18:2:364:406	704530	16					
ANR	704617	IdentifierDeclStatement	char * v = sdbkv_value ( kv ) ;	1094:2:31004:31030	704530	0	True				
ANR	704618	IdentifierDecl	* v = sdbkv_value ( kv )		704530	0					
ANR	704619	IdentifierDeclType	char *		704530	0					
ANR	704620	Identifier	v		704530	1					
ANR	704621	AssignmentExpression	* v = sdbkv_value ( kv )		704530	2		=			
ANR	704622	Identifier	v		704530	0					
ANR	704623	CallExpression	sdbkv_value ( kv )		704530	1					
ANR	704624	Callee	sdbkv_value		704530	0					
ANR	704625	Identifier	sdbkv_value		704530	0					
ANR	704626	ArgumentList	kv		704530	1					
ANR	704627	Argument	kv		704530	0					
ANR	704628	Identifier	kv		704530	0					
ANR	704629	IdentifierDeclStatement	"RList * list = r_str_split_list ( v , ""|"" , 0 ) ;"	1095:2:31034:31076	704530	1	True				
ANR	704630	IdentifierDecl	"* list = r_str_split_list ( v , ""|"" , 0 )"		704530	0					
ANR	704631	IdentifierDeclType	RList *		704530	0					
ANR	704632	Identifier	list		704530	1					
ANR	704633	AssignmentExpression	"* list = r_str_split_list ( v , ""|"" , 0 )"		704530	2		=			
ANR	704634	Identifier	list		704530	0					
ANR	704635	CallExpression	"r_str_split_list ( v , ""|"" , 0 )"		704530	1					
ANR	704636	Callee	r_str_split_list		704530	0					
ANR	704637	Identifier	r_str_split_list		704530	0					
ANR	704638	ArgumentList	v		704530	1					
ANR	704639	Argument	v		704530	0					
ANR	704640	Identifier	v		704530	0					
ANR	704641	Argument	"""|"""		704530	1					
ANR	704642	PrimaryExpression	"""|"""		704530	0					
ANR	704643	Argument	0		704530	2					
ANR	704644	PrimaryExpression	0		704530	0					
ANR	704645	ExpressionStatement	srcline = r_list_get_bottom ( list )	1096:2:31080:31114	704530	2	True				
ANR	704646	AssignmentExpression	srcline = r_list_get_bottom ( list )		704530	0		=			
ANR	704647	Identifier	srcline		704530	0					
ANR	704648	CallExpression	r_list_get_bottom ( list )		704530	1					
ANR	704649	Callee	r_list_get_bottom		704530	0					
ANR	704650	Identifier	r_list_get_bottom		704530	0					
ANR	704651	ArgumentList	list		704530	1					
ANR	704652	Argument	list		704530	0					
ANR	704653	Identifier	list		704530	0					
ANR	704654	IfStatement	if ( srcline )		704530	3					
ANR	704655	Condition	srcline	1097:6:31122:31128	704530	0	True				
ANR	704656	Identifier	srcline		704530	0					
ANR	704657	CompoundStatement		20:15:461:461	704530	1					
ANR	704658	IfStatement	"if ( ! strstr ( srcline , ""0x"" ) )"		704530	0					
ANR	704659	Condition	"! strstr ( srcline , ""0x"" )"	1098:7:31140:31162	704530	0	True				
ANR	704660	UnaryOperationExpression	"! strstr ( srcline , ""0x"" )"		704530	0					
ANR	704661	UnaryOperator	!		704530	0					
ANR	704662	CallExpression	"strstr ( srcline , ""0x"" )"		704530	1					
ANR	704663	Callee	strstr		704530	0					
ANR	704664	Identifier	strstr		704530	0					
ANR	704665	ArgumentList	srcline		704530	1					
ANR	704666	Argument	srcline		704530	0					
ANR	704667	Identifier	srcline		704530	0					
ANR	704668	Argument	"""0x"""		704530	1					
ANR	704669	PrimaryExpression	"""0x"""		704530	0					
ANR	704670	CompoundStatement		21:31:494:494	704530	1					
ANR	704671	ExpressionStatement	"r_list_append ( final_list , srcline )"	1099:4:31170:31205	704530	0	True				
ANR	704672	CallExpression	"r_list_append ( final_list , srcline )"		704530	0					
ANR	704673	Callee	r_list_append		704530	0					
ANR	704674	Identifier	r_list_append		704530	0					
ANR	704675	ArgumentList	final_list		704530	1					
ANR	704676	Argument	final_list		704530	0					
ANR	704677	Identifier	final_list		704530	0					
ANR	704678	Argument	srcline		704530	1					
ANR	704679	Identifier	srcline		704530	0					
ANR	704680	ExpressionStatement	r_list_free ( list )	1102:2:31218:31236	704530	4	True				
ANR	704681	CallExpression	r_list_free ( list )		704530	0					
ANR	704682	Callee	r_list_free		704530	0					
ANR	704683	Identifier	r_list_free		704530	0					
ANR	704684	ArgumentList	list		704530	1					
ANR	704685	Argument	list		704530	0					
ANR	704686	Identifier	list		704530	0					
ANR	704687	ExpressionStatement	"r_cons_printf ( ""[Source file]\\n"" )"	1104:1:31242:31275	704530	17	True				
ANR	704688	CallExpression	"r_cons_printf ( ""[Source file]\\n"" )"		704530	0					
ANR	704689	Callee	r_cons_printf		704530	0					
ANR	704690	Identifier	r_cons_printf		704530	0					
ANR	704691	ArgumentList	"""[Source file]\\n"""		704530	1					
ANR	704692	Argument	"""[Source file]\\n"""		704530	0					
ANR	704693	PrimaryExpression	"""[Source file]\\n"""		704530	0					
ANR	704694	IdentifierDeclStatement	"RList * uniqlist = r_list_uniq ( final_list , srclineCmp ) ;"	1105:1:31278:31332	704530	18	True				
ANR	704695	IdentifierDecl	"* uniqlist = r_list_uniq ( final_list , srclineCmp )"		704530	0					
ANR	704696	IdentifierDeclType	RList *		704530	0					
ANR	704697	Identifier	uniqlist		704530	1					
ANR	704698	AssignmentExpression	"* uniqlist = r_list_uniq ( final_list , srclineCmp )"		704530	2		=			
ANR	704699	Identifier	uniqlist		704530	0					
ANR	704700	CallExpression	"r_list_uniq ( final_list , srclineCmp )"		704530	1					
ANR	704701	Callee	r_list_uniq		704530	0					
ANR	704702	Identifier	r_list_uniq		704530	0					
ANR	704703	ArgumentList	final_list		704530	1					
ANR	704704	Argument	final_list		704530	0					
ANR	704705	Identifier	final_list		704530	0					
ANR	704706	Argument	srclineCmp		704530	1					
ANR	704707	Identifier	srclineCmp		704530	0					
ANR	704708	Statement	r_list_foreach	1106:1:31335:31348	704530	19	True				
ANR	704709	Statement	(	1106:16:31350:31350	704530	20	True				
ANR	704710	Statement	uniqlist	1106:17:31351:31358	704530	21	True				
ANR	704711	Statement	","	1106:25:31359:31359	704530	22	True				
ANR	704712	Statement	iter2	1106:27:31361:31365	704530	23	True				
ANR	704713	Statement	","	1106:32:31366:31366	704530	24	True				
ANR	704714	Statement	srcline	1106:34:31368:31374	704530	25	True				
ANR	704715	Statement	)	1106:41:31375:31375	704530	26	True				
ANR	704716	CompoundStatement		29:43:707:707	704530	27					
ANR	704717	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , srcline )"	1107:2:31381:31412	704530	0	True				
ANR	704718	CallExpression	"r_cons_printf ( ""%s\\n"" , srcline )"		704530	0					
ANR	704719	Callee	r_cons_printf		704530	0					
ANR	704720	Identifier	r_cons_printf		704530	0					
ANR	704721	ArgumentList	"""%s\\n"""		704530	1					
ANR	704722	Argument	"""%s\\n"""		704530	0					
ANR	704723	PrimaryExpression	"""%s\\n"""		704530	0					
ANR	704724	Argument	srcline		704530	1					
ANR	704725	Identifier	srcline		704530	0					
ANR	704726	ExpressionStatement	r_list_free ( uniqlist )	1109:1:31418:31440	704530	28	True				
ANR	704727	CallExpression	r_list_free ( uniqlist )		704530	0					
ANR	704728	Callee	r_list_free		704530	0					
ANR	704729	Identifier	r_list_free		704530	0					
ANR	704730	ArgumentList	uniqlist		704530	1					
ANR	704731	Argument	uniqlist		704530	0					
ANR	704732	Identifier	uniqlist		704530	0					
ANR	704733	ExpressionStatement	r_list_free ( final_list )	1110:1:31443:31467	704530	29	True				
ANR	704734	CallExpression	r_list_free ( final_list )		704530	0					
ANR	704735	Callee	r_list_free		704530	0					
ANR	704736	Identifier	r_list_free		704530	0					
ANR	704737	ArgumentList	final_list		704530	1					
ANR	704738	Argument	final_list		704530	0					
ANR	704739	Identifier	final_list		704530	0					
ANR	704740	ReturnStatement	return true ;	1111:1:31470:31481	704530	30	True				
ANR	704741	Identifier	true		704530	0					
ANR	704742	ReturnType	static int		704530	1					
ANR	704743	Identifier	bin_source		704530	2					
ANR	704744	ParameterList	"RCore * r , int mode"		704530	3					
ANR	704745	Parameter	RCore * r	1078:22:30649:30656	704530	0	True				
ANR	704746	ParameterType	RCore *		704530	0					
ANR	704747	Identifier	r		704530	1					
ANR	704748	Parameter	int mode	1078:32:30659:30666	704530	1	True				
ANR	704749	ParameterType	int		704530	0					
ANR	704750	Identifier	mode		704530	1					
ANR	704751	CFGEntryNode	ENTRY		704530		True				
ANR	704752	CFGExitNode	EXIT		704530		True				
ANR	704753	Symbol	srcline		704530						
ANR	704754	Symbol	ls		704530						
ANR	704755	Symbol	r_str_split_list		704530						
ANR	704756	Symbol	final_list		704530						
ANR	704757	Symbol	binfile		704530						
ANR	704758	Symbol	mode		704530						
ANR	704759	Symbol	r_list_uniq		704530						
ANR	704760	Symbol	* r -> bin		704530						
ANR	704761	Symbol	r -> bin		704530						
ANR	704762	Symbol	srclineCmp		704530						
ANR	704763	Symbol	* * r		704530						
ANR	704764	Symbol	* binfile		704530						
ANR	704765	Symbol	r -> bin -> cur		704530						
ANR	704766	Symbol	iter2		704530						
ANR	704767	Symbol	false		704530						
ANR	704768	Symbol	iter		704530						
ANR	704769	Symbol	sdb_foreach_list		704530						
ANR	704770	Symbol	kv		704530						
ANR	704771	Symbol	sdbkv_value		704530						
ANR	704772	Symbol	list		704530						
ANR	704773	Symbol	uniqlist		704530						
ANR	704774	Symbol	r		704530						
ANR	704775	Symbol	r_list_get_bottom		704530						
ANR	704776	Symbol	strstr		704530						
ANR	704777	Symbol	v		704530						
ANR	704778	Symbol	true		704530						
ANR	704779	Symbol	binfile -> sdb_addrinfo		704530						
ANR	704780	Symbol	* r		704530						
ANR	704781	Symbol	r_list_new		704530						
ANR	704782	Function	bin_main	1114:0:31486:32313							
ANR	704783	FunctionDef	"bin_main (RCore * r , int mode , int va)"		704782	0					
ANR	704784	CompoundStatement		1114:48:31534:32313	704782	0					
ANR	704785	IdentifierDeclStatement	"RBinAddr * binmain = r_bin_get_sym ( r -> bin , R_BIN_SYM_MAIN ) ;"	1115:1:31537:31595	704782	0	True				
ANR	704786	IdentifierDecl	"* binmain = r_bin_get_sym ( r -> bin , R_BIN_SYM_MAIN )"		704782	0					
ANR	704787	IdentifierDeclType	RBinAddr *		704782	0					
ANR	704788	Identifier	binmain		704782	1					
ANR	704789	AssignmentExpression	"* binmain = r_bin_get_sym ( r -> bin , R_BIN_SYM_MAIN )"		704782	2		=			
ANR	704790	Identifier	binmain		704782	0					
ANR	704791	CallExpression	"r_bin_get_sym ( r -> bin , R_BIN_SYM_MAIN )"		704782	1					
ANR	704792	Callee	r_bin_get_sym		704782	0					
ANR	704793	Identifier	r_bin_get_sym		704782	0					
ANR	704794	ArgumentList	r -> bin		704782	1					
ANR	704795	Argument	r -> bin		704782	0					
ANR	704796	PtrMemberAccess	r -> bin		704782	0					
ANR	704797	Identifier	r		704782	0					
ANR	704798	Identifier	bin		704782	1					
ANR	704799	Argument	R_BIN_SYM_MAIN		704782	1					
ANR	704800	Identifier	R_BIN_SYM_MAIN		704782	0					
ANR	704801	IdentifierDeclStatement	ut64 addr ;	1116:1:31598:31607	704782	1	True				
ANR	704802	IdentifierDecl	addr		704782	0					
ANR	704803	IdentifierDeclType	ut64		704782	0					
ANR	704804	Identifier	addr		704782	1					
ANR	704805	IfStatement	if ( ! binmain )		704782	2					
ANR	704806	Condition	! binmain	1117:5:31614:31621	704782	0	True				
ANR	704807	UnaryOperationExpression	! binmain		704782	0					
ANR	704808	UnaryOperator	!		704782	0					
ANR	704809	Identifier	binmain		704782	1					
ANR	704810	CompoundStatement		4:15:89:89	704782	1					
ANR	704811	ReturnStatement	return false ;	1118:2:31628:31640	704782	0	True				
ANR	704812	Identifier	false		704782	0					
ANR	704813	ExpressionStatement	"addr = va ? r_bin_a2b ( r -> bin , binmain -> vaddr ) : binmain -> paddr"	1120:1:31646:31709	704782	3	True				
ANR	704814	AssignmentExpression	"addr = va ? r_bin_a2b ( r -> bin , binmain -> vaddr ) : binmain -> paddr"		704782	0		=			
ANR	704815	Identifier	addr		704782	0					
ANR	704816	ConditionalExpression	"va ? r_bin_a2b ( r -> bin , binmain -> vaddr ) : binmain -> paddr"		704782	1					
ANR	704817	Condition	va		704782	0					
ANR	704818	Identifier	va		704782	0					
ANR	704819	CallExpression	"r_bin_a2b ( r -> bin , binmain -> vaddr )"		704782	1					
ANR	704820	Callee	r_bin_a2b		704782	0					
ANR	704821	Identifier	r_bin_a2b		704782	0					
ANR	704822	ArgumentList	r -> bin		704782	1					
ANR	704823	Argument	r -> bin		704782	0					
ANR	704824	PtrMemberAccess	r -> bin		704782	0					
ANR	704825	Identifier	r		704782	0					
ANR	704826	Identifier	bin		704782	1					
ANR	704827	Argument	binmain -> vaddr		704782	1					
ANR	704828	PtrMemberAccess	binmain -> vaddr		704782	0					
ANR	704829	Identifier	binmain		704782	0					
ANR	704830	Identifier	vaddr		704782	1					
ANR	704831	PtrMemberAccess	binmain -> paddr		704782	2					
ANR	704832	Identifier	binmain		704782	0					
ANR	704833	Identifier	paddr		704782	1					
ANR	704834	IfStatement	if ( IS_MODE_SET ( mode ) )		704782	4					
ANR	704835	Condition	IS_MODE_SET ( mode )	1122:5:31717:31734	704782	0	True				
ANR	704836	CallExpression	IS_MODE_SET ( mode )		704782	0					
ANR	704837	Callee	IS_MODE_SET		704782	0					
ANR	704838	Identifier	IS_MODE_SET		704782	0					
ANR	704839	ArgumentList	mode		704782	1					
ANR	704840	Argument	mode		704782	0					
ANR	704841	Identifier	mode		704782	0					
ANR	704842	CompoundStatement		9:25:202:202	704782	1					
ANR	704843	ExpressionStatement	"r_flag_space_set ( r -> flags , R_FLAGS_FS_SYMBOLS )"	1123:2:31741:31788	704782	0	True				
ANR	704844	CallExpression	"r_flag_space_set ( r -> flags , R_FLAGS_FS_SYMBOLS )"		704782	0					
ANR	704845	Callee	r_flag_space_set		704782	0					
ANR	704846	Identifier	r_flag_space_set		704782	0					
ANR	704847	ArgumentList	r -> flags		704782	1					
ANR	704848	Argument	r -> flags		704782	0					
ANR	704849	PtrMemberAccess	r -> flags		704782	0					
ANR	704850	Identifier	r		704782	0					
ANR	704851	Identifier	flags		704782	1					
ANR	704852	Argument	R_FLAGS_FS_SYMBOLS		704782	1					
ANR	704853	Identifier	R_FLAGS_FS_SYMBOLS		704782	0					
ANR	704854	ExpressionStatement	"r_flag_set ( r -> flags , ""main"" , addr , r -> blocksize )"	1124:2:31792:31841	704782	1	True				
ANR	704855	CallExpression	"r_flag_set ( r -> flags , ""main"" , addr , r -> blocksize )"		704782	0					
ANR	704856	Callee	r_flag_set		704782	0					
ANR	704857	Identifier	r_flag_set		704782	0					
ANR	704858	ArgumentList	r -> flags		704782	1					
ANR	704859	Argument	r -> flags		704782	0					
ANR	704860	PtrMemberAccess	r -> flags		704782	0					
ANR	704861	Identifier	r		704782	0					
ANR	704862	Identifier	flags		704782	1					
ANR	704863	Argument	"""main"""		704782	1					
ANR	704864	PrimaryExpression	"""main"""		704782	0					
ANR	704865	Argument	addr		704782	2					
ANR	704866	Identifier	addr		704782	0					
ANR	704867	Argument	r -> blocksize		704782	3					
ANR	704868	PtrMemberAccess	r -> blocksize		704782	0					
ANR	704869	Identifier	r		704782	0					
ANR	704870	Identifier	blocksize		704782	1					
ANR	704871	ElseStatement	else		704782	0					
ANR	704872	IfStatement	if ( IS_MODE_SIMPLE ( mode ) )		704782	0					
ANR	704873	Condition	IS_MODE_SIMPLE ( mode )	1125:12:31855:31875	704782	0	True				
ANR	704874	CallExpression	IS_MODE_SIMPLE ( mode )		704782	0					
ANR	704875	Callee	IS_MODE_SIMPLE		704782	0					
ANR	704876	Identifier	IS_MODE_SIMPLE		704782	0					
ANR	704877	ArgumentList	mode		704782	1					
ANR	704878	Argument	mode		704782	0					
ANR	704879	Identifier	mode		704782	0					
ANR	704880	CompoundStatement		12:35:343:343	704782	1					
ANR	704881	Statement	r_cons_printf	1126:2:31882:31894	704782	0	True				
ANR	704882	Statement	(	1126:16:31896:31896	704782	1	True				
ANR	704883	Statement	"""%"""	1126:17:31897:31899	704782	2	True				
ANR	704884	Statement	PFMT64d	1126:20:31900:31906	704782	3	True				
ANR	704885	Statement	","	1126:27:31907:31907	704782	4	True				
ANR	704886	Statement	addr	1126:29:31909:31912	704782	5	True				
ANR	704887	Statement	)	1126:33:31913:31913	704782	6	True				
ANR	704888	ExpressionStatement		1126:34:31914:31914	704782	7	True				
ANR	704889	ElseStatement	else		704782	0					
ANR	704890	IfStatement	if ( IS_MODE_RAD ( mode ) )		704782	0					
ANR	704891	Condition	IS_MODE_RAD ( mode )	1127:12:31928:31945	704782	0	True				
ANR	704892	CallExpression	IS_MODE_RAD ( mode )		704782	0					
ANR	704893	Callee	IS_MODE_RAD		704782	0					
ANR	704894	Identifier	IS_MODE_RAD		704782	0					
ANR	704895	ArgumentList	mode		704782	1					
ANR	704896	Argument	mode		704782	0					
ANR	704897	Identifier	mode		704782	0					
ANR	704898	CompoundStatement		14:32:413:413	704782	1					
ANR	704899	ExpressionStatement	"r_cons_printf ( ""fs symbols\\n"" )"	1128:2:31952:31982	704782	0	True				
ANR	704900	CallExpression	"r_cons_printf ( ""fs symbols\\n"" )"		704782	0					
ANR	704901	Callee	r_cons_printf		704782	0					
ANR	704902	Identifier	r_cons_printf		704782	0					
ANR	704903	ArgumentList	"""fs symbols\\n"""		704782	1					
ANR	704904	Argument	"""fs symbols\\n"""		704782	0					
ANR	704905	PrimaryExpression	"""fs symbols\\n"""		704782	0					
ANR	704906	Statement	r_cons_printf	1129:2:31986:31998	704782	1	True				
ANR	704907	Statement	(	1129:16:32000:32000	704782	2	True				
ANR	704908	Statement	"""f main @ 0x%08"""	1129:17:32001:32016	704782	3	True				
ANR	704909	Statement	PFMT64x	1129:33:32017:32023	704782	4	True				
ANR	704910	Statement	"""\\n"""	1129:40:32024:32027	704782	5	True				
ANR	704911	Statement	","	1129:44:32028:32028	704782	6	True				
ANR	704912	Statement	addr	1129:46:32030:32033	704782	7	True				
ANR	704913	Statement	)	1129:50:32034:32034	704782	8	True				
ANR	704914	ExpressionStatement		1129:51:32035:32035	704782	9	True				
ANR	704915	ElseStatement	else		704782	0					
ANR	704916	IfStatement	if ( IS_MODE_JSON ( mode ) )		704782	0					
ANR	704917	Condition	IS_MODE_JSON ( mode )	1130:12:32049:32067	704782	0	True				
ANR	704918	CallExpression	IS_MODE_JSON ( mode )		704782	0					
ANR	704919	Callee	IS_MODE_JSON		704782	0					
ANR	704920	Identifier	IS_MODE_JSON		704782	0					
ANR	704921	ArgumentList	mode		704782	1					
ANR	704922	Argument	mode		704782	0					
ANR	704923	Identifier	mode		704782	0					
ANR	704924	CompoundStatement		17:33:535:535	704782	1					
ANR	704925	Statement	r_cons_printf	1131:2:32074:32086	704782	0	True				
ANR	704926	Statement	(	1131:16:32088:32088	704782	1	True				
ANR	704927	Statement	"""{\\""vaddr\\"":%"""	1131:17:32089:32102	704782	2	True				
ANR	704928	Statement	PFMT64d	1131:32:32104:32110	704782	3	True				
ANR	704929	Statement	""",\\""paddr\\"":%"""	1132:3:32115:32128	704782	4	True				
ANR	704930	Statement	PFMT64d	1132:18:32130:32136	704782	5	True				
ANR	704931	Statement	"""}"""	1132:26:32138:32140	704782	6	True				
ANR	704932	Statement	","	1132:29:32141:32141	704782	7	True				
ANR	704933	Statement	addr	1132:31:32143:32146	704782	8	True				
ANR	704934	Statement	","	1132:35:32147:32147	704782	9	True				
ANR	704935	Statement	binmain	1132:37:32149:32155	704782	10	True				
ANR	704936	Statement	->	1132:44:32156:32157	704782	11	True				
ANR	704937	Statement	paddr	1132:46:32158:32162	704782	12	True				
ANR	704938	Statement	)	1132:51:32163:32163	704782	13	True				
ANR	704939	ExpressionStatement		1132:52:32164:32164	704782	14	True				
ANR	704940	ElseStatement	else		704782	0					
ANR	704941	CompoundStatement		20:8:639:639	704782	0					
ANR	704942	ExpressionStatement	"r_cons_printf ( ""[Main]\\n"" )"	1134:2:32178:32204	704782	0	True				
ANR	704943	CallExpression	"r_cons_printf ( ""[Main]\\n"" )"		704782	0					
ANR	704944	Callee	r_cons_printf		704782	0					
ANR	704945	Identifier	r_cons_printf		704782	0					
ANR	704946	ArgumentList	"""[Main]\\n"""		704782	1					
ANR	704947	Argument	"""[Main]\\n"""		704782	0					
ANR	704948	PrimaryExpression	"""[Main]\\n"""		704782	0					
ANR	704949	Statement	r_cons_printf	1135:2:32208:32220	704782	1	True				
ANR	704950	Statement	(	1135:16:32222:32222	704782	2	True				
ANR	704951	Statement	"""vaddr=0x%08"""	1135:17:32223:32235	704782	3	True				
ANR	704952	Statement	PFMT64x	1135:30:32236:32242	704782	4	True				
ANR	704953	Statement	""" paddr=0x%08"""	1135:37:32243:32256	704782	5	True				
ANR	704954	Statement	PFMT64x	1135:51:32257:32263	704782	6	True				
ANR	704955	Statement	"""\\n"""	1135:58:32264:32267	704782	7	True				
ANR	704956	Statement	","	1135:62:32268:32268	704782	8	True				
ANR	704957	Statement	addr	1136:3:32273:32276	704782	9	True				
ANR	704958	Statement	","	1136:7:32277:32277	704782	10	True				
ANR	704959	Statement	binmain	1136:9:32279:32285	704782	11	True				
ANR	704960	Statement	->	1136:16:32286:32287	704782	12	True				
ANR	704961	Statement	paddr	1136:18:32288:32292	704782	13	True				
ANR	704962	Statement	)	1136:23:32293:32293	704782	14	True				
ANR	704963	ExpressionStatement		1136:24:32294:32294	704782	15	True				
ANR	704964	ReturnStatement	return true ;	1138:1:32300:32311	704782	5	True				
ANR	704965	Identifier	true		704782	0					
ANR	704966	ReturnType	static int		704782	1					
ANR	704967	Identifier	bin_main		704782	2					
ANR	704968	ParameterList	"RCore * r , int mode , int va"		704782	3					
ANR	704969	Parameter	RCore * r	1114:20:31506:31513	704782	0	True				
ANR	704970	ParameterType	RCore *		704782	0					
ANR	704971	Identifier	r		704782	1					
ANR	704972	Parameter	int mode	1114:30:31516:31523	704782	1	True				
ANR	704973	ParameterType	int		704782	0					
ANR	704974	Identifier	mode		704782	1					
ANR	704975	Parameter	int va	1114:40:31526:31531	704782	2	True				
ANR	704976	ParameterType	int		704782	0					
ANR	704977	Identifier	va		704782	1					
ANR	704978	CFGEntryNode	ENTRY		704782		True				
ANR	704979	CFGExitNode	EXIT		704782		True				
ANR	704980	Symbol	r -> flags		704782						
ANR	704981	Symbol	false		704782						
ANR	704982	Symbol	r_bin_get_sym		704782						
ANR	704983	Symbol	IS_MODE_SIMPLE		704782						
ANR	704984	Symbol	IS_MODE_JSON		704782						
ANR	704985	Symbol	va		704782						
ANR	704986	Symbol	IS_MODE_SET		704782						
ANR	704987	Symbol	mode		704782						
ANR	704988	Symbol	binmain		704782						
ANR	704989	Symbol	r		704782						
ANR	704990	Symbol	R_FLAGS_FS_SYMBOLS		704782						
ANR	704991	Symbol	r -> blocksize		704782						
ANR	704992	Symbol	R_BIN_SYM_MAIN		704782						
ANR	704993	Symbol	r -> bin		704782						
ANR	704994	Symbol	true		704782						
ANR	704995	Symbol	* binmain		704782						
ANR	704996	Symbol	IS_MODE_RAD		704782						
ANR	704997	Symbol	* r		704782						
ANR	704998	Symbol	addr		704782						
ANR	704999	Symbol	binmain -> vaddr		704782						
ANR	705000	Symbol	binmain -> paddr		704782						
ANR	705001	Symbol	r_bin_a2b		704782						
ANR	705002	Function	is_initfini	1141:0:32316:32524							
ANR	705003	FunctionDef	is_initfini (RBinAddr * entry)		705002	0					
ANR	705004	CompoundStatement		1141:48:32364:32524	705002	0					
ANR	705005	SwitchStatement	switch ( entry -> type )		705002	0					
ANR	705006	Condition	entry -> type	1142:9:32375:32385	705002	0	True				
ANR	705007	PtrMemberAccess	entry -> type		705002	0					
ANR	705008	Identifier	entry		705002	0					
ANR	705009	Identifier	type		705002	1					
ANR	705010	CompoundStatement		2:22:23:23	705002	1					
ANR	705011	Label	case R_BIN_ENTRY_TYPE_INIT :	1143:1:32391:32417	705002	0	True				
ANR	705012	Identifier	R_BIN_ENTRY_TYPE_INIT		705002	0					
ANR	705013	Label	case R_BIN_ENTRY_TYPE_FINI :	1144:1:32420:32446	705002	1	True				
ANR	705014	Identifier	R_BIN_ENTRY_TYPE_FINI		705002	0					
ANR	705015	Label	case R_BIN_ENTRY_TYPE_PREINIT :	1145:1:32449:32478	705002	2	True				
ANR	705016	Identifier	R_BIN_ENTRY_TYPE_PREINIT		705002	0					
ANR	705017	ReturnStatement	return true ;	1146:2:32482:32493	705002	3	True				
ANR	705018	Identifier	true		705002	0					
ANR	705019	Label	default :	1147:1:32496:32503	705002	4	True				
ANR	705020	Identifier	default		705002	0					
ANR	705021	ReturnStatement	return false ;	1148:2:32507:32519	705002	5	True				
ANR	705022	Identifier	false		705002	0					
ANR	705023	ReturnType	static inline bool		705002	1					
ANR	705024	Identifier	is_initfini		705002	2					
ANR	705025	ParameterList	RBinAddr * entry		705002	3					
ANR	705026	Parameter	RBinAddr * entry	1141:31:32347:32361	705002	0	True				
ANR	705027	ParameterType	RBinAddr *		705002	0					
ANR	705028	Identifier	entry		705002	1					
ANR	705029	CFGEntryNode	ENTRY		705002		True				
ANR	705030	CFGExitNode	EXIT		705002		True				
ANR	705031	Symbol	entry		705002						
ANR	705032	Symbol	entry -> type		705002						
ANR	705033	Symbol	true		705002						
ANR	705034	Symbol	false		705002						
ANR	705035	Symbol	* entry		705002						
ANR	705036	Function	bin_entry	1152:0:32527:36816							
ANR	705037	FunctionDef	"bin_entry (RCore * r , int mode , ut64 laddr , int va , bool inifin)"		705036	0					
ANR	705038	CompoundStatement		1152:74:32601:36816	705036	0					
ANR	705039	IdentifierDeclStatement	char str [ R_FLAG_NAME_SIZE ] ;	1153:1:32604:32630	705036	0	True				
ANR	705040	IdentifierDecl	str [ R_FLAG_NAME_SIZE ]		705036	0					
ANR	705041	IdentifierDeclType	char [ R_FLAG_NAME_SIZE ]		705036	0					
ANR	705042	Identifier	str		705036	1					
ANR	705043	Identifier	R_FLAG_NAME_SIZE		705036	2					
ANR	705044	IdentifierDeclStatement	RList * entries = r_bin_get_entries ( r -> bin ) ;	1154:1:32633:32676	705036	1	True				
ANR	705045	IdentifierDecl	* entries = r_bin_get_entries ( r -> bin )		705036	0					
ANR	705046	IdentifierDeclType	RList *		705036	0					
ANR	705047	Identifier	entries		705036	1					
ANR	705048	AssignmentExpression	* entries = r_bin_get_entries ( r -> bin )		705036	2		=			
ANR	705049	Identifier	entries		705036	0					
ANR	705050	CallExpression	r_bin_get_entries ( r -> bin )		705036	1					
ANR	705051	Callee	r_bin_get_entries		705036	0					
ANR	705052	Identifier	r_bin_get_entries		705036	0					
ANR	705053	ArgumentList	r -> bin		705036	1					
ANR	705054	Argument	r -> bin		705036	0					
ANR	705055	PtrMemberAccess	r -> bin		705036	0					
ANR	705056	Identifier	r		705036	0					
ANR	705057	Identifier	bin		705036	1					
ANR	705058	IdentifierDeclStatement	RListIter * iter ;	1155:1:32679:32694	705036	2	True				
ANR	705059	IdentifierDecl	* iter		705036	0					
ANR	705060	IdentifierDeclType	RListIter *		705036	0					
ANR	705061	Identifier	iter		705036	1					
ANR	705062	IdentifierDeclStatement	RListIter * last_processed = NULL ;	1156:1:32697:32729	705036	3	True				
ANR	705063	IdentifierDecl	* last_processed = NULL		705036	0					
ANR	705064	IdentifierDeclType	RListIter *		705036	0					
ANR	705065	Identifier	last_processed		705036	1					
ANR	705066	AssignmentExpression	* last_processed = NULL		705036	2		=			
ANR	705067	Identifier	NULL		705036	0					
ANR	705068	Identifier	NULL		705036	1					
ANR	705069	IdentifierDeclStatement	RBinAddr * entry = NULL ;	1157:1:32732:32754	705036	4	True				
ANR	705070	IdentifierDecl	* entry = NULL		705036	0					
ANR	705071	IdentifierDeclType	RBinAddr *		705036	0					
ANR	705072	Identifier	entry		705036	1					
ANR	705073	AssignmentExpression	* entry = NULL		705036	2		=			
ANR	705074	Identifier	NULL		705036	0					
ANR	705075	Identifier	NULL		705036	1					
ANR	705076	IdentifierDeclStatement	"int i = 0 , init_i = 0 , fini_i = 0 , preinit_i = 0 ;"	1158:1:32757:32805	705036	5	True				
ANR	705077	IdentifierDecl	i = 0		705036	0					
ANR	705078	IdentifierDeclType	int		705036	0					
ANR	705079	Identifier	i		705036	1					
ANR	705080	AssignmentExpression	i = 0		705036	2		=			
ANR	705081	Identifier	i		705036	0					
ANR	705082	PrimaryExpression	0		705036	1					
ANR	705083	IdentifierDecl	init_i = 0		705036	1					
ANR	705084	IdentifierDeclType	int		705036	0					
ANR	705085	Identifier	init_i		705036	1					
ANR	705086	AssignmentExpression	init_i = 0		705036	2		=			
ANR	705087	Identifier	init_i		705036	0					
ANR	705088	PrimaryExpression	0		705036	1					
ANR	705089	IdentifierDecl	fini_i = 0		705036	2					
ANR	705090	IdentifierDeclType	int		705036	0					
ANR	705091	Identifier	fini_i		705036	1					
ANR	705092	AssignmentExpression	fini_i = 0		705036	2		=			
ANR	705093	Identifier	fini_i		705036	0					
ANR	705094	PrimaryExpression	0		705036	1					
ANR	705095	IdentifierDecl	preinit_i = 0		705036	3					
ANR	705096	IdentifierDeclType	int		705036	0					
ANR	705097	Identifier	preinit_i		705036	1					
ANR	705098	AssignmentExpression	preinit_i = 0		705036	2		=			
ANR	705099	Identifier	preinit_i		705036	0					
ANR	705100	PrimaryExpression	0		705036	1					
ANR	705101	IdentifierDeclStatement	ut64 baddr = r_bin_get_baddr ( r -> bin ) ;	1159:1:32808:32845	705036	6	True				
ANR	705102	IdentifierDecl	baddr = r_bin_get_baddr ( r -> bin )		705036	0					
ANR	705103	IdentifierDeclType	ut64		705036	0					
ANR	705104	Identifier	baddr		705036	1					
ANR	705105	AssignmentExpression	baddr = r_bin_get_baddr ( r -> bin )		705036	2		=			
ANR	705106	Identifier	baddr		705036	0					
ANR	705107	CallExpression	r_bin_get_baddr ( r -> bin )		705036	1					
ANR	705108	Callee	r_bin_get_baddr		705036	0					
ANR	705109	Identifier	r_bin_get_baddr		705036	0					
ANR	705110	ArgumentList	r -> bin		705036	1					
ANR	705111	Argument	r -> bin		705036	0					
ANR	705112	PtrMemberAccess	r -> bin		705036	0					
ANR	705113	Identifier	r		705036	0					
ANR	705114	Identifier	bin		705036	1					
ANR	705115	IfStatement	if ( IS_MODE_RAD ( mode ) )		705036	7					
ANR	705116	Condition	IS_MODE_RAD ( mode )	1161:5:32853:32870	705036	0	True				
ANR	705117	CallExpression	IS_MODE_RAD ( mode )		705036	0					
ANR	705118	Callee	IS_MODE_RAD		705036	0					
ANR	705119	Identifier	IS_MODE_RAD		705036	0					
ANR	705120	ArgumentList	mode		705036	1					
ANR	705121	Argument	mode		705036	0					
ANR	705122	Identifier	mode		705036	0					
ANR	705123	CompoundStatement		10:25:271:271	705036	1					
ANR	705124	ExpressionStatement	"r_cons_printf ( ""fs symbols\\n"" )"	1162:2:32877:32907	705036	0	True				
ANR	705125	CallExpression	"r_cons_printf ( ""fs symbols\\n"" )"		705036	0					
ANR	705126	Callee	r_cons_printf		705036	0					
ANR	705127	Identifier	r_cons_printf		705036	0					
ANR	705128	ArgumentList	"""fs symbols\\n"""		705036	1					
ANR	705129	Argument	"""fs symbols\\n"""		705036	0					
ANR	705130	PrimaryExpression	"""fs symbols\\n"""		705036	0					
ANR	705131	ElseStatement	else		705036	0					
ANR	705132	IfStatement	if ( IS_MODE_JSON ( mode ) )		705036	0					
ANR	705133	Condition	IS_MODE_JSON ( mode )	1163:12:32921:32939	705036	0	True				
ANR	705134	CallExpression	IS_MODE_JSON ( mode )		705036	0					
ANR	705135	Callee	IS_MODE_JSON		705036	0					
ANR	705136	Identifier	IS_MODE_JSON		705036	0					
ANR	705137	ArgumentList	mode		705036	1					
ANR	705138	Argument	mode		705036	0					
ANR	705139	Identifier	mode		705036	0					
ANR	705140	CompoundStatement		12:33:340:340	705036	1					
ANR	705141	ExpressionStatement	"r_cons_printf ( ""["" )"	1164:2:32946:32965	705036	0	True				
ANR	705142	CallExpression	"r_cons_printf ( ""["" )"		705036	0					
ANR	705143	Callee	r_cons_printf		705036	0					
ANR	705144	Identifier	r_cons_printf		705036	0					
ANR	705145	ArgumentList	"""["""		705036	1					
ANR	705146	Argument	"""["""		705036	0					
ANR	705147	PrimaryExpression	"""["""		705036	0					
ANR	705148	ElseStatement	else		705036	0					
ANR	705149	IfStatement	if ( IS_MODE_NORMAL ( mode ) )		705036	0					
ANR	705150	Condition	IS_MODE_NORMAL ( mode )	1165:12:32979:32999	705036	0	True				
ANR	705151	CallExpression	IS_MODE_NORMAL ( mode )		705036	0					
ANR	705152	Callee	IS_MODE_NORMAL		705036	0					
ANR	705153	Identifier	IS_MODE_NORMAL		705036	0					
ANR	705154	ArgumentList	mode		705036	1					
ANR	705155	Argument	mode		705036	0					
ANR	705156	Identifier	mode		705036	0					
ANR	705157	CompoundStatement		14:35:400:400	705036	1					
ANR	705158	IfStatement	if ( inifin )		705036	0					
ANR	705159	Condition	inifin	1166:6:33010:33015	705036	0	True				
ANR	705160	Identifier	inifin		705036	0					
ANR	705161	CompoundStatement		15:14:416:416	705036	1					
ANR	705162	ExpressionStatement	"r_cons_printf ( ""[Constructors]\\n"" )"	1167:3:33023:33057	705036	0	True				
ANR	705163	CallExpression	"r_cons_printf ( ""[Constructors]\\n"" )"		705036	0					
ANR	705164	Callee	r_cons_printf		705036	0					
ANR	705165	Identifier	r_cons_printf		705036	0					
ANR	705166	ArgumentList	"""[Constructors]\\n"""		705036	1					
ANR	705167	Argument	"""[Constructors]\\n"""		705036	0					
ANR	705168	PrimaryExpression	"""[Constructors]\\n"""		705036	0					
ANR	705169	ElseStatement	else		705036	0					
ANR	705170	CompoundStatement		17:9:466:466	705036	0					
ANR	705171	ExpressionStatement	"r_cons_printf ( ""[Entrypoints]\\n"" )"	1169:3:33073:33106	705036	0	True				
ANR	705172	CallExpression	"r_cons_printf ( ""[Entrypoints]\\n"" )"		705036	0					
ANR	705173	Callee	r_cons_printf		705036	0					
ANR	705174	Identifier	r_cons_printf		705036	0					
ANR	705175	ArgumentList	"""[Entrypoints]\\n"""		705036	1					
ANR	705176	Argument	"""[Entrypoints]\\n"""		705036	0					
ANR	705177	PrimaryExpression	"""[Entrypoints]\\n"""		705036	0					
ANR	705178	Statement	r_list_foreach	1173:1:33117:33130	705036	8	True				
ANR	705179	Statement	(	1173:16:33132:33132	705036	9	True				
ANR	705180	Statement	entries	1173:17:33133:33139	705036	10	True				
ANR	705181	Statement	","	1173:24:33140:33140	705036	11	True				
ANR	705182	Statement	iter	1173:26:33142:33145	705036	12	True				
ANR	705183	Statement	","	1173:30:33146:33146	705036	13	True				
ANR	705184	Statement	entry	1173:32:33148:33152	705036	14	True				
ANR	705185	Statement	)	1173:37:33153:33153	705036	15	True				
ANR	705186	CompoundStatement		48:2:1136:1241	705036	16					
ANR	705187	IdentifierDeclStatement	ut64 paddr = entry -> paddr ;	1174:2:33159:33184	705036	0	True				
ANR	705188	IdentifierDecl	paddr = entry -> paddr		705036	0					
ANR	705189	IdentifierDeclType	ut64		705036	0					
ANR	705190	Identifier	paddr		705036	1					
ANR	705191	AssignmentExpression	paddr = entry -> paddr		705036	2		=			
ANR	705192	Identifier	paddr		705036	0					
ANR	705193	PtrMemberAccess	entry -> paddr		705036	1					
ANR	705194	Identifier	entry		705036	0					
ANR	705195	Identifier	paddr		705036	1					
ANR	705196	IdentifierDeclStatement	ut64 hpaddr = UT64_MAX ;	1175:2:33188:33210	705036	1	True				
ANR	705197	IdentifierDecl	hpaddr = UT64_MAX		705036	0					
ANR	705198	IdentifierDeclType	ut64		705036	0					
ANR	705199	Identifier	hpaddr		705036	1					
ANR	705200	AssignmentExpression	hpaddr = UT64_MAX		705036	2		=			
ANR	705201	Identifier	UT64_MAX		705036	0					
ANR	705202	Identifier	UT64_MAX		705036	1					
ANR	705203	IdentifierDeclStatement	ut64 hvaddr = UT64_MAX ;	1176:2:33214:33236	705036	2	True				
ANR	705204	IdentifierDecl	hvaddr = UT64_MAX		705036	0					
ANR	705205	IdentifierDeclType	ut64		705036	0					
ANR	705206	Identifier	hvaddr		705036	1					
ANR	705207	AssignmentExpression	hvaddr = UT64_MAX		705036	2		=			
ANR	705208	Identifier	UT64_MAX		705036	0					
ANR	705209	Identifier	UT64_MAX		705036	1					
ANR	705210	IfStatement	if ( mode != R_MODE_SET )		705036	3					
ANR	705211	Condition	mode != R_MODE_SET	1177:6:33244:33261	705036	0	True				
ANR	705212	EqualityExpression	mode != R_MODE_SET		705036	0		!=			
ANR	705213	Identifier	mode		705036	0					
ANR	705214	Identifier	R_MODE_SET		705036	1					
ANR	705215	CompoundStatement		26:26:662:662	705036	1					
ANR	705216	IfStatement	if ( inifin )		705036	0					
ANR	705217	Condition	inifin	1178:7:33273:33278	705036	0	True				
ANR	705218	Identifier	inifin		705036	0					
ANR	705219	CompoundStatement		27:15:679:679	705036	1					
ANR	705220	IfStatement	if ( entry -> type == R_BIN_ENTRY_TYPE_PROGRAM )		705036	0					
ANR	705221	Condition	entry -> type == R_BIN_ENTRY_TYPE_PROGRAM	1179:8:33291:33329	705036	0	True				
ANR	705222	EqualityExpression	entry -> type == R_BIN_ENTRY_TYPE_PROGRAM		705036	0		==			
ANR	705223	PtrMemberAccess	entry -> type		705036	0					
ANR	705224	Identifier	entry		705036	0					
ANR	705225	Identifier	type		705036	1					
ANR	705226	Identifier	R_BIN_ENTRY_TYPE_PROGRAM		705036	1					
ANR	705227	CompoundStatement		28:49:730:730	705036	1					
ANR	705228	ContinueStatement	continue ;	1180:5:33339:33347	705036	0	True				
ANR	705229	ElseStatement	else		705036	0					
ANR	705230	CompoundStatement		31:10:763:763	705036	0					
ANR	705231	IfStatement	if ( entry -> type != R_BIN_ENTRY_TYPE_PROGRAM )		705036	0					
ANR	705232	Condition	entry -> type != R_BIN_ENTRY_TYPE_PROGRAM	1183:8:33375:33413	705036	0	True				
ANR	705233	EqualityExpression	entry -> type != R_BIN_ENTRY_TYPE_PROGRAM		705036	0		!=			
ANR	705234	PtrMemberAccess	entry -> type		705036	0					
ANR	705235	Identifier	entry		705036	0					
ANR	705236	Identifier	type		705036	1					
ANR	705237	Identifier	R_BIN_ENTRY_TYPE_PROGRAM		705036	1					
ANR	705238	CompoundStatement		32:49:814:814	705036	1					
ANR	705239	ContinueStatement	continue ;	1184:5:33423:33431	705036	0	True				
ANR	705240	IfStatement	if ( entry -> hpaddr )		705036	4					
ANR	705241	Condition	entry -> hpaddr	1188:6:33454:33466	705036	0	True				
ANR	705242	PtrMemberAccess	entry -> hpaddr		705036	0					
ANR	705243	Identifier	entry		705036	0					
ANR	705244	Identifier	hpaddr		705036	1					
ANR	705245	CompoundStatement		37:21:867:867	705036	1					
ANR	705246	ExpressionStatement	hpaddr = entry -> hpaddr	1189:3:33474:33496	705036	0	True				
ANR	705247	AssignmentExpression	hpaddr = entry -> hpaddr		705036	0		=			
ANR	705248	Identifier	hpaddr		705036	0					
ANR	705249	PtrMemberAccess	entry -> hpaddr		705036	1					
ANR	705250	Identifier	entry		705036	0					
ANR	705251	Identifier	hpaddr		705036	1					
ANR	705252	IfStatement	if ( entry -> hvaddr )		705036	1					
ANR	705253	Condition	entry -> hvaddr	1190:7:33505:33517	705036	0	True				
ANR	705254	PtrMemberAccess	entry -> hvaddr		705036	0					
ANR	705255	Identifier	entry		705036	0					
ANR	705256	Identifier	hvaddr		705036	1					
ANR	705257	CompoundStatement		39:22:918:918	705036	1					
ANR	705258	ExpressionStatement	"hvaddr = rva ( r -> bin , hpaddr , entry -> hvaddr , va )"	1191:4:33526:33574	705036	0	True				
ANR	705259	AssignmentExpression	"hvaddr = rva ( r -> bin , hpaddr , entry -> hvaddr , va )"		705036	0		=			
ANR	705260	Identifier	hvaddr		705036	0					
ANR	705261	CallExpression	"rva ( r -> bin , hpaddr , entry -> hvaddr , va )"		705036	1					
ANR	705262	Callee	rva		705036	0					
ANR	705263	Identifier	rva		705036	0					
ANR	705264	ArgumentList	r -> bin		705036	1					
ANR	705265	Argument	r -> bin		705036	0					
ANR	705266	PtrMemberAccess	r -> bin		705036	0					
ANR	705267	Identifier	r		705036	0					
ANR	705268	Identifier	bin		705036	1					
ANR	705269	Argument	hpaddr		705036	1					
ANR	705270	Identifier	hpaddr		705036	0					
ANR	705271	Argument	entry -> hvaddr		705036	2					
ANR	705272	PtrMemberAccess	entry -> hvaddr		705036	0					
ANR	705273	Identifier	entry		705036	0					
ANR	705274	Identifier	hvaddr		705036	1					
ANR	705275	Argument	va		705036	3					
ANR	705276	Identifier	va		705036	0					
ANR	705277	IdentifierDeclStatement	"ut64 at = rva ( r -> bin , paddr , entry -> vaddr , va ) ;"	1194:2:33587:33634	705036	5	True				
ANR	705278	IdentifierDecl	"at = rva ( r -> bin , paddr , entry -> vaddr , va )"		705036	0					
ANR	705279	IdentifierDeclType	ut64		705036	0					
ANR	705280	Identifier	at		705036	1					
ANR	705281	AssignmentExpression	"at = rva ( r -> bin , paddr , entry -> vaddr , va )"		705036	2		=			
ANR	705282	Identifier	at		705036	0					
ANR	705283	CallExpression	"rva ( r -> bin , paddr , entry -> vaddr , va )"		705036	1					
ANR	705284	Callee	rva		705036	0					
ANR	705285	Identifier	rva		705036	0					
ANR	705286	ArgumentList	r -> bin		705036	1					
ANR	705287	Argument	r -> bin		705036	0					
ANR	705288	PtrMemberAccess	r -> bin		705036	0					
ANR	705289	Identifier	r		705036	0					
ANR	705290	Identifier	bin		705036	1					
ANR	705291	Argument	paddr		705036	1					
ANR	705292	Identifier	paddr		705036	0					
ANR	705293	Argument	entry -> vaddr		705036	2					
ANR	705294	PtrMemberAccess	entry -> vaddr		705036	0					
ANR	705295	Identifier	entry		705036	0					
ANR	705296	Identifier	vaddr		705036	1					
ANR	705297	Argument	va		705036	3					
ANR	705298	Identifier	va		705036	0					
ANR	705299	IdentifierDeclStatement	const char * type = r_bin_entry_type_string ( entry -> type ) ;	1195:2:33638:33694	705036	6	True				
ANR	705300	IdentifierDecl	* type = r_bin_entry_type_string ( entry -> type )		705036	0					
ANR	705301	IdentifierDeclType	const char *		705036	0					
ANR	705302	Identifier	type		705036	1					
ANR	705303	AssignmentExpression	* type = r_bin_entry_type_string ( entry -> type )		705036	2		=			
ANR	705304	Identifier	type		705036	0					
ANR	705305	CallExpression	r_bin_entry_type_string ( entry -> type )		705036	1					
ANR	705306	Callee	r_bin_entry_type_string		705036	0					
ANR	705307	Identifier	r_bin_entry_type_string		705036	0					
ANR	705308	ArgumentList	entry -> type		705036	1					
ANR	705309	Argument	entry -> type		705036	0					
ANR	705310	PtrMemberAccess	entry -> type		705036	0					
ANR	705311	Identifier	entry		705036	0					
ANR	705312	Identifier	type		705036	1					
ANR	705313	IfStatement	if ( ! type )		705036	7					
ANR	705314	Condition	! type	1196:6:33702:33706	705036	0	True				
ANR	705315	UnaryOperationExpression	! type		705036	0					
ANR	705316	UnaryOperator	!		705036	0					
ANR	705317	Identifier	type		705036	1					
ANR	705318	CompoundStatement		45:13:1107:1107	705036	1					
ANR	705319	ExpressionStatement	"type = ""unknown"""	1197:3:33714:33730	705036	0	True				
ANR	705320	AssignmentExpression	"type = ""unknown"""		705036	0		=			
ANR	705321	Identifier	type		705036	0					
ANR	705322	PrimaryExpression	"""unknown"""		705036	1					
ANR	705323	IdentifierDeclStatement	"const char * hpaddr_key = ( entry -> type == R_BIN_ENTRY_TYPE_PROGRAM ) ? ""haddr"" : ""hpaddr"" ;"	1199:2:33738:33843	705036	8	True				
ANR	705324	IdentifierDecl	"* hpaddr_key = ( entry -> type == R_BIN_ENTRY_TYPE_PROGRAM ) ? ""haddr"" : ""hpaddr"""		705036	0					
ANR	705325	IdentifierDeclType	const char *		705036	0					
ANR	705326	Identifier	hpaddr_key		705036	1					
ANR	705327	AssignmentExpression	"* hpaddr_key = ( entry -> type == R_BIN_ENTRY_TYPE_PROGRAM ) ? ""haddr"" : ""hpaddr"""		705036	2		=			
ANR	705328	Identifier	hpaddr_key		705036	0					
ANR	705329	ConditionalExpression	"( entry -> type == R_BIN_ENTRY_TYPE_PROGRAM ) ? ""haddr"" : ""hpaddr"""		705036	1					
ANR	705330	Condition	entry -> type == R_BIN_ENTRY_TYPE_PROGRAM		705036	0					
ANR	705331	EqualityExpression	entry -> type == R_BIN_ENTRY_TYPE_PROGRAM		705036	0		==			
ANR	705332	PtrMemberAccess	entry -> type		705036	0					
ANR	705333	Identifier	entry		705036	0					
ANR	705334	Identifier	type		705036	1					
ANR	705335	Identifier	R_BIN_ENTRY_TYPE_PROGRAM		705036	1					
ANR	705336	PrimaryExpression	"""haddr"""		705036	1					
ANR	705337	PrimaryExpression	"""hpaddr"""		705036	2					
ANR	705338	IfStatement	if ( IS_MODE_SET ( mode ) )		705036	9					
ANR	705339	Condition	IS_MODE_SET ( mode )	1201:6:33851:33868	705036	0	True				
ANR	705340	CallExpression	IS_MODE_SET ( mode )		705036	0					
ANR	705341	Callee	IS_MODE_SET		705036	0					
ANR	705342	Identifier	IS_MODE_SET		705036	0					
ANR	705343	ArgumentList	mode		705036	1					
ANR	705344	Argument	mode		705036	0					
ANR	705345	Identifier	mode		705036	0					
ANR	705346	CompoundStatement		50:26:1269:1269	705036	1					
ANR	705347	ExpressionStatement	"r_flag_space_set ( r -> flags , R_FLAGS_FS_SYMBOLS )"	1202:3:33876:33923	705036	0	True				
ANR	705348	CallExpression	"r_flag_space_set ( r -> flags , R_FLAGS_FS_SYMBOLS )"		705036	0					
ANR	705349	Callee	r_flag_space_set		705036	0					
ANR	705350	Identifier	r_flag_space_set		705036	0					
ANR	705351	ArgumentList	r -> flags		705036	1					
ANR	705352	Argument	r -> flags		705036	0					
ANR	705353	PtrMemberAccess	r -> flags		705036	0					
ANR	705354	Identifier	r		705036	0					
ANR	705355	Identifier	flags		705036	1					
ANR	705356	Argument	R_FLAGS_FS_SYMBOLS		705036	1					
ANR	705357	Identifier	R_FLAGS_FS_SYMBOLS		705036	0					
ANR	705358	IfStatement	if ( entry -> type == R_BIN_ENTRY_TYPE_INIT )		705036	1					
ANR	705359	Condition	entry -> type == R_BIN_ENTRY_TYPE_INIT	1203:7:33932:33967	705036	0	True				
ANR	705360	EqualityExpression	entry -> type == R_BIN_ENTRY_TYPE_INIT		705036	0		==			
ANR	705361	PtrMemberAccess	entry -> type		705036	0					
ANR	705362	Identifier	entry		705036	0					
ANR	705363	Identifier	type		705036	1					
ANR	705364	Identifier	R_BIN_ENTRY_TYPE_INIT		705036	1					
ANR	705365	CompoundStatement		52:45:1368:1368	705036	1					
ANR	705366	ExpressionStatement	"snprintf ( str , R_FLAG_NAME_SIZE , ""entry.init%i"" , init_i )"	1204:4:33976:34032	705036	0	True				
ANR	705367	CallExpression	"snprintf ( str , R_FLAG_NAME_SIZE , ""entry.init%i"" , init_i )"		705036	0					
ANR	705368	Callee	snprintf		705036	0					
ANR	705369	Identifier	snprintf		705036	0					
ANR	705370	ArgumentList	str		705036	1					
ANR	705371	Argument	str		705036	0					
ANR	705372	Identifier	str		705036	0					
ANR	705373	Argument	R_FLAG_NAME_SIZE		705036	1					
ANR	705374	Identifier	R_FLAG_NAME_SIZE		705036	0					
ANR	705375	Argument	"""entry.init%i"""		705036	2					
ANR	705376	PrimaryExpression	"""entry.init%i"""		705036	0					
ANR	705377	Argument	init_i		705036	3					
ANR	705378	Identifier	init_i		705036	0					
ANR	705379	ElseStatement	else		705036	0					
ANR	705380	IfStatement	if ( entry -> type == R_BIN_ENTRY_TYPE_FINI )		705036	0					
ANR	705381	Condition	entry -> type == R_BIN_ENTRY_TYPE_FINI	1205:14:34048:34083	705036	0	True				
ANR	705382	EqualityExpression	entry -> type == R_BIN_ENTRY_TYPE_FINI		705036	0		==			
ANR	705383	PtrMemberAccess	entry -> type		705036	0					
ANR	705384	Identifier	entry		705036	0					
ANR	705385	Identifier	type		705036	1					
ANR	705386	Identifier	R_BIN_ENTRY_TYPE_FINI		705036	1					
ANR	705387	CompoundStatement		54:52:1484:1484	705036	1					
ANR	705388	ExpressionStatement	"snprintf ( str , R_FLAG_NAME_SIZE , ""entry.fini%i"" , fini_i )"	1206:4:34092:34148	705036	0	True				
ANR	705389	CallExpression	"snprintf ( str , R_FLAG_NAME_SIZE , ""entry.fini%i"" , fini_i )"		705036	0					
ANR	705390	Callee	snprintf		705036	0					
ANR	705391	Identifier	snprintf		705036	0					
ANR	705392	ArgumentList	str		705036	1					
ANR	705393	Argument	str		705036	0					
ANR	705394	Identifier	str		705036	0					
ANR	705395	Argument	R_FLAG_NAME_SIZE		705036	1					
ANR	705396	Identifier	R_FLAG_NAME_SIZE		705036	0					
ANR	705397	Argument	"""entry.fini%i"""		705036	2					
ANR	705398	PrimaryExpression	"""entry.fini%i"""		705036	0					
ANR	705399	Argument	fini_i		705036	3					
ANR	705400	Identifier	fini_i		705036	0					
ANR	705401	ElseStatement	else		705036	0					
ANR	705402	IfStatement	if ( entry -> type == R_BIN_ENTRY_TYPE_PREINIT )		705036	0					
ANR	705403	Condition	entry -> type == R_BIN_ENTRY_TYPE_PREINIT	1207:14:34164:34202	705036	0	True				
ANR	705404	EqualityExpression	entry -> type == R_BIN_ENTRY_TYPE_PREINIT		705036	0		==			
ANR	705405	PtrMemberAccess	entry -> type		705036	0					
ANR	705406	Identifier	entry		705036	0					
ANR	705407	Identifier	type		705036	1					
ANR	705408	Identifier	R_BIN_ENTRY_TYPE_PREINIT		705036	1					
ANR	705409	CompoundStatement		56:55:1603:1603	705036	1					
ANR	705410	ExpressionStatement	"snprintf ( str , R_FLAG_NAME_SIZE , ""entry.preinit%i"" , preinit_i )"	1208:4:34211:34273	705036	0	True				
ANR	705411	CallExpression	"snprintf ( str , R_FLAG_NAME_SIZE , ""entry.preinit%i"" , preinit_i )"		705036	0					
ANR	705412	Callee	snprintf		705036	0					
ANR	705413	Identifier	snprintf		705036	0					
ANR	705414	ArgumentList	str		705036	1					
ANR	705415	Argument	str		705036	0					
ANR	705416	Identifier	str		705036	0					
ANR	705417	Argument	R_FLAG_NAME_SIZE		705036	1					
ANR	705418	Identifier	R_FLAG_NAME_SIZE		705036	0					
ANR	705419	Argument	"""entry.preinit%i"""		705036	2					
ANR	705420	PrimaryExpression	"""entry.preinit%i"""		705036	0					
ANR	705421	Argument	preinit_i		705036	3					
ANR	705422	Identifier	preinit_i		705036	0					
ANR	705423	ElseStatement	else		705036	0					
ANR	705424	CompoundStatement		58:10:1683:1683	705036	0					
ANR	705425	ExpressionStatement	"snprintf ( str , R_FLAG_NAME_SIZE , ""entry%i"" , i )"	1210:4:34291:34337	705036	0	True				
ANR	705426	CallExpression	"snprintf ( str , R_FLAG_NAME_SIZE , ""entry%i"" , i )"		705036	0					
ANR	705427	Callee	snprintf		705036	0					
ANR	705428	Identifier	snprintf		705036	0					
ANR	705429	ArgumentList	str		705036	1					
ANR	705430	Argument	str		705036	0					
ANR	705431	Identifier	str		705036	0					
ANR	705432	Argument	R_FLAG_NAME_SIZE		705036	1					
ANR	705433	Identifier	R_FLAG_NAME_SIZE		705036	0					
ANR	705434	Argument	"""entry%i"""		705036	2					
ANR	705435	PrimaryExpression	"""entry%i"""		705036	0					
ANR	705436	Argument	i		705036	3					
ANR	705437	Identifier	i		705036	0					
ANR	705438	ExpressionStatement	"r_flag_set ( r -> flags , str , at , 1 )"	1212:3:34347:34380	705036	2	True				
ANR	705439	CallExpression	"r_flag_set ( r -> flags , str , at , 1 )"		705036	0					
ANR	705440	Callee	r_flag_set		705036	0					
ANR	705441	Identifier	r_flag_set		705036	0					
ANR	705442	ArgumentList	r -> flags		705036	1					
ANR	705443	Argument	r -> flags		705036	0					
ANR	705444	PtrMemberAccess	r -> flags		705036	0					
ANR	705445	Identifier	r		705036	0					
ANR	705446	Identifier	flags		705036	1					
ANR	705447	Argument	str		705036	1					
ANR	705448	Identifier	str		705036	0					
ANR	705449	Argument	at		705036	2					
ANR	705450	Identifier	at		705036	0					
ANR	705451	Argument	1		705036	3					
ANR	705452	PrimaryExpression	1		705036	0					
ANR	705453	IfStatement	if ( is_initfini ( entry ) && hvaddr != UT64_MAX )		705036	3					
ANR	705454	Condition	is_initfini ( entry ) && hvaddr != UT64_MAX	1213:7:34389:34429	705036	0	True				
ANR	705455	AndExpression	is_initfini ( entry ) && hvaddr != UT64_MAX		705036	0		&&			
ANR	705456	CallExpression	is_initfini ( entry )		705036	0					
ANR	705457	Callee	is_initfini		705036	0					
ANR	705458	Identifier	is_initfini		705036	0					
ANR	705459	ArgumentList	entry		705036	1					
ANR	705460	Argument	entry		705036	0					
ANR	705461	Identifier	entry		705036	0					
ANR	705462	EqualityExpression	hvaddr != UT64_MAX		705036	1		!=			
ANR	705463	Identifier	hvaddr		705036	0					
ANR	705464	Identifier	UT64_MAX		705036	1					
ANR	705465	CompoundStatement		62:50:1830:1830	705036	1					
ANR	705466	ExpressionStatement	"r_meta_add ( r -> anal , R_META_TYPE_DATA , hvaddr , hvaddr + entry -> bits / 8 , NULL )"	1214:4:34438:34532	705036	0	True				
ANR	705467	CallExpression	"r_meta_add ( r -> anal , R_META_TYPE_DATA , hvaddr , hvaddr + entry -> bits / 8 , NULL )"		705036	0					
ANR	705468	Callee	r_meta_add		705036	0					
ANR	705469	Identifier	r_meta_add		705036	0					
ANR	705470	ArgumentList	r -> anal		705036	1					
ANR	705471	Argument	r -> anal		705036	0					
ANR	705472	PtrMemberAccess	r -> anal		705036	0					
ANR	705473	Identifier	r		705036	0					
ANR	705474	Identifier	anal		705036	1					
ANR	705475	Argument	R_META_TYPE_DATA		705036	1					
ANR	705476	Identifier	R_META_TYPE_DATA		705036	0					
ANR	705477	Argument	hvaddr		705036	2					
ANR	705478	Identifier	hvaddr		705036	0					
ANR	705479	Argument	hvaddr + entry -> bits / 8		705036	3					
ANR	705480	AdditiveExpression	hvaddr + entry -> bits / 8		705036	0		+			
ANR	705481	Identifier	hvaddr		705036	0					
ANR	705482	MultiplicativeExpression	entry -> bits / 8		705036	1		/			
ANR	705483	PtrMemberAccess	entry -> bits		705036	0					
ANR	705484	Identifier	entry		705036	0					
ANR	705485	Identifier	bits		705036	1					
ANR	705486	PrimaryExpression	8		705036	1					
ANR	705487	Argument	NULL		705036	4					
ANR	705488	Identifier	NULL		705036	0					
ANR	705489	ElseStatement	else		705036	0					
ANR	705490	IfStatement	if ( IS_MODE_SIMPLE ( mode ) )		705036	0					
ANR	705491	Condition	IS_MODE_SIMPLE ( mode )	1217:13:34552:34572	705036	0	True				
ANR	705492	CallExpression	IS_MODE_SIMPLE ( mode )		705036	0					
ANR	705493	Callee	IS_MODE_SIMPLE		705036	0					
ANR	705494	Identifier	IS_MODE_SIMPLE		705036	0					
ANR	705495	ArgumentList	mode		705036	1					
ANR	705496	Argument	mode		705036	0					
ANR	705497	Identifier	mode		705036	0					
ANR	705498	CompoundStatement		66:36:1973:1973	705036	1					
ANR	705499	Statement	r_cons_printf	1218:3:34580:34592	705036	0	True				
ANR	705500	Statement	(	1218:17:34594:34594	705036	1	True				
ANR	705501	Statement	"""0x%08"""	1218:18:34595:34601	705036	2	True				
ANR	705502	Statement	PFMT64x	1218:25:34602:34608	705036	3	True				
ANR	705503	Statement	"""\\n"""	1218:32:34609:34612	705036	4	True				
ANR	705504	Statement	","	1218:36:34613:34613	705036	5	True				
ANR	705505	Statement	at	1218:38:34615:34616	705036	6	True				
ANR	705506	Statement	)	1218:40:34617:34617	705036	7	True				
ANR	705507	ExpressionStatement		1218:41:34618:34618	705036	8	True				
ANR	705508	ElseStatement	else		705036	0					
ANR	705509	IfStatement	if ( IS_MODE_JSON ( mode ) )		705036	0					
ANR	705510	Condition	IS_MODE_JSON ( mode )	1219:13:34633:34651	705036	0	True				
ANR	705511	CallExpression	IS_MODE_JSON ( mode )		705036	0					
ANR	705512	Callee	IS_MODE_JSON		705036	0					
ANR	705513	Identifier	IS_MODE_JSON		705036	0					
ANR	705514	ArgumentList	mode		705036	1					
ANR	705515	Argument	mode		705036	0					
ANR	705516	Identifier	mode		705036	0					
ANR	705517	CompoundStatement		68:34:2052:2052	705036	1					
ANR	705518	Statement	r_cons_printf	1220:3:34659:34671	705036	0	True				
ANR	705519	Statement	(	1220:17:34673:34673	705036	1	True				
ANR	705520	Statement	"""%s{\\""vaddr\\"":%"""	1220:18:34674:34689	705036	2	True				
ANR	705521	Statement	PFMT64u	1220:35:34691:34697	705036	3	True				
ANR	705522	Statement	""","""	1220:43:34699:34701	705036	4	True				
ANR	705523	Statement	"""\\""paddr\\"":%"""	1221:4:34707:34719	705036	5	True				
ANR	705524	Statement	PFMT64u	1221:18:34721:34727	705036	6	True				
ANR	705525	Statement	""","""	1221:26:34729:34731	705036	7	True				
ANR	705526	Statement	"""\\""baddr\\"":%"""	1222:4:34737:34749	705036	8	True				
ANR	705527	Statement	PFMT64u	1222:18:34751:34757	705036	9	True				
ANR	705528	Statement	""","""	1222:26:34759:34761	705036	10	True				
ANR	705529	Statement	"""\\""laddr\\"":%"""	1223:4:34767:34779	705036	11	True				
ANR	705530	Statement	PFMT64u	1223:18:34781:34787	705036	12	True				
ANR	705531	Statement	""","""	1223:26:34789:34791	705036	13	True				
ANR	705532	Statement	","	1223:29:34792:34792	705036	14	True				
ANR	705533	Statement	last_processed	1224:4:34798:34811	705036	15	True				
ANR	705534	Statement	?	1224:19:34813:34813	705036	16	True				
ANR	705535	Statement	""","""	1224:21:34815:34817	705036	17	True				
ANR	705536	Statement	:	1224:25:34819:34819	705036	18	True				
ANR	705537	Statement	""""""	1224:27:34821:34822	705036	19	True				
ANR	705538	Statement	","	1224:29:34823:34823	705036	20	True				
ANR	705539	Statement	at	1224:31:34825:34826	705036	21	True				
ANR	705540	Statement	","	1224:33:34827:34827	705036	22	True				
ANR	705541	Statement	paddr	1224:35:34829:34833	705036	23	True				
ANR	705542	Statement	","	1224:40:34834:34834	705036	24	True				
ANR	705543	Statement	baddr	1224:42:34836:34840	705036	25	True				
ANR	705544	Statement	","	1224:47:34841:34841	705036	26	True				
ANR	705545	Statement	laddr	1224:49:34843:34847	705036	27	True				
ANR	705546	Statement	)	1224:54:34848:34848	705036	28	True				
ANR	705547	ExpressionStatement		1224:55:34849:34849	705036	29	True				
ANR	705548	IfStatement	if ( hvaddr != UT64_MAX )		705036	30					
ANR	705549	Condition	hvaddr != UT64_MAX	1225:7:34858:34875	705036	0	True				
ANR	705550	EqualityExpression	hvaddr != UT64_MAX		705036	0		!=			
ANR	705551	Identifier	hvaddr		705036	0					
ANR	705552	Identifier	UT64_MAX		705036	1					
ANR	705553	CompoundStatement		74:27:2276:2276	705036	1					
ANR	705554	Statement	r_cons_printf	1226:4:34884:34896	705036	0	True				
ANR	705555	Statement	(	1226:18:34898:34898	705036	1	True				
ANR	705556	Statement	"""\\""hvaddr\\"":%"""	1226:19:34899:34912	705036	2	True				
ANR	705557	Statement	PFMT64u	1226:34:34914:34920	705036	3	True				
ANR	705558	Statement	""","""	1226:42:34922:34924	705036	4	True				
ANR	705559	Statement	","	1226:45:34925:34925	705036	5	True				
ANR	705560	Statement	hvaddr	1226:47:34927:34932	705036	6	True				
ANR	705561	Statement	)	1226:53:34933:34933	705036	7	True				
ANR	705562	ExpressionStatement		1226:54:34934:34934	705036	8	True				
ANR	705563	Statement	r_cons_printf	1228:3:34944:34956	705036	31	True				
ANR	705564	Statement	(	1228:17:34958:34958	705036	32	True				
ANR	705565	Statement	"""\\""%s\\"":%"""	1228:18:34959:34968	705036	33	True				
ANR	705566	Statement	PFMT64u	1228:29:34970:34976	705036	34	True				
ANR	705567	Statement	""","""	1228:37:34978:34980	705036	35	True				
ANR	705568	Statement	"""\\""type\\"":\\""%s\\""}"""	1229:4:34986:35003	705036	36	True				
ANR	705569	Statement	","	1229:22:35004:35004	705036	37	True				
ANR	705570	Statement	hpaddr_key	1230:4:35010:35019	705036	38	True				
ANR	705571	Statement	","	1230:14:35020:35020	705036	39	True				
ANR	705572	Statement	hpaddr	1230:16:35022:35027	705036	40	True				
ANR	705573	Statement	","	1230:22:35028:35028	705036	41	True				
ANR	705574	Statement	type	1230:24:35030:35033	705036	42	True				
ANR	705575	Statement	)	1230:28:35034:35034	705036	43	True				
ANR	705576	ExpressionStatement		1230:29:35035:35035	705036	44	True				
ANR	705577	ElseStatement	else		705036	0					
ANR	705578	IfStatement	if ( IS_MODE_RAD ( mode ) )		705036	0					
ANR	705579	Condition	IS_MODE_RAD ( mode )	1231:13:35050:35067	705036	0	True				
ANR	705580	CallExpression	IS_MODE_RAD ( mode )		705036	0					
ANR	705581	Callee	IS_MODE_RAD		705036	0					
ANR	705582	Identifier	IS_MODE_RAD		705036	0					
ANR	705583	ArgumentList	mode		705036	1					
ANR	705584	Argument	mode		705036	0					
ANR	705585	Identifier	mode		705036	0					
ANR	705586	CompoundStatement		91:3:2858:2894	705036	1					
ANR	705587	IdentifierDeclStatement	char * name = NULL ;	1232:3:35075:35092	705036	0	True				
ANR	705588	IdentifierDecl	* name = NULL		705036	0					
ANR	705589	IdentifierDeclType	char *		705036	0					
ANR	705590	Identifier	name		705036	1					
ANR	705591	AssignmentExpression	* name = NULL		705036	2		=			
ANR	705592	Identifier	NULL		705036	0					
ANR	705593	Identifier	NULL		705036	1					
ANR	705594	IfStatement	if ( entry -> type == R_BIN_ENTRY_TYPE_INIT )		705036	1					
ANR	705595	Condition	entry -> type == R_BIN_ENTRY_TYPE_INIT	1233:7:35101:35136	705036	0	True				
ANR	705596	EqualityExpression	entry -> type == R_BIN_ENTRY_TYPE_INIT		705036	0		==			
ANR	705597	PtrMemberAccess	entry -> type		705036	0					
ANR	705598	Identifier	entry		705036	0					
ANR	705599	Identifier	type		705036	1					
ANR	705600	Identifier	R_BIN_ENTRY_TYPE_INIT		705036	1					
ANR	705601	CompoundStatement		82:45:2537:2537	705036	1					
ANR	705602	ExpressionStatement	"name = r_str_newf ( ""entry.init%i"" , init_i )"	1234:4:35145:35187	705036	0	True				
ANR	705603	AssignmentExpression	"name = r_str_newf ( ""entry.init%i"" , init_i )"		705036	0		=			
ANR	705604	Identifier	name		705036	0					
ANR	705605	CallExpression	"r_str_newf ( ""entry.init%i"" , init_i )"		705036	1					
ANR	705606	Callee	r_str_newf		705036	0					
ANR	705607	Identifier	r_str_newf		705036	0					
ANR	705608	ArgumentList	"""entry.init%i"""		705036	1					
ANR	705609	Argument	"""entry.init%i"""		705036	0					
ANR	705610	PrimaryExpression	"""entry.init%i"""		705036	0					
ANR	705611	Argument	init_i		705036	1					
ANR	705612	Identifier	init_i		705036	0					
ANR	705613	ElseStatement	else		705036	0					
ANR	705614	IfStatement	if ( entry -> type == R_BIN_ENTRY_TYPE_FINI )		705036	0					
ANR	705615	Condition	entry -> type == R_BIN_ENTRY_TYPE_FINI	1235:14:35203:35238	705036	0	True				
ANR	705616	EqualityExpression	entry -> type == R_BIN_ENTRY_TYPE_FINI		705036	0		==			
ANR	705617	PtrMemberAccess	entry -> type		705036	0					
ANR	705618	Identifier	entry		705036	0					
ANR	705619	Identifier	type		705036	1					
ANR	705620	Identifier	R_BIN_ENTRY_TYPE_FINI		705036	1					
ANR	705621	CompoundStatement		84:52:2639:2639	705036	1					
ANR	705622	ExpressionStatement	"name = r_str_newf ( ""entry.fini%i"" , fini_i )"	1236:4:35247:35289	705036	0	True				
ANR	705623	AssignmentExpression	"name = r_str_newf ( ""entry.fini%i"" , fini_i )"		705036	0		=			
ANR	705624	Identifier	name		705036	0					
ANR	705625	CallExpression	"r_str_newf ( ""entry.fini%i"" , fini_i )"		705036	1					
ANR	705626	Callee	r_str_newf		705036	0					
ANR	705627	Identifier	r_str_newf		705036	0					
ANR	705628	ArgumentList	"""entry.fini%i"""		705036	1					
ANR	705629	Argument	"""entry.fini%i"""		705036	0					
ANR	705630	PrimaryExpression	"""entry.fini%i"""		705036	0					
ANR	705631	Argument	fini_i		705036	1					
ANR	705632	Identifier	fini_i		705036	0					
ANR	705633	ElseStatement	else		705036	0					
ANR	705634	IfStatement	if ( entry -> type == R_BIN_ENTRY_TYPE_PREINIT )		705036	0					
ANR	705635	Condition	entry -> type == R_BIN_ENTRY_TYPE_PREINIT	1237:14:35305:35343	705036	0	True				
ANR	705636	EqualityExpression	entry -> type == R_BIN_ENTRY_TYPE_PREINIT		705036	0		==			
ANR	705637	PtrMemberAccess	entry -> type		705036	0					
ANR	705638	Identifier	entry		705036	0					
ANR	705639	Identifier	type		705036	1					
ANR	705640	Identifier	R_BIN_ENTRY_TYPE_PREINIT		705036	1					
ANR	705641	CompoundStatement		86:55:2744:2744	705036	1					
ANR	705642	ExpressionStatement	"name = r_str_newf ( ""entry.preinit%i"" , preinit_i )"	1238:4:35352:35400	705036	0	True				
ANR	705643	AssignmentExpression	"name = r_str_newf ( ""entry.preinit%i"" , preinit_i )"		705036	0		=			
ANR	705644	Identifier	name		705036	0					
ANR	705645	CallExpression	"r_str_newf ( ""entry.preinit%i"" , preinit_i )"		705036	1					
ANR	705646	Callee	r_str_newf		705036	0					
ANR	705647	Identifier	r_str_newf		705036	0					
ANR	705648	ArgumentList	"""entry.preinit%i"""		705036	1					
ANR	705649	Argument	"""entry.preinit%i"""		705036	0					
ANR	705650	PrimaryExpression	"""entry.preinit%i"""		705036	0					
ANR	705651	Argument	preinit_i		705036	1					
ANR	705652	Identifier	preinit_i		705036	0					
ANR	705653	ElseStatement	else		705036	0					
ANR	705654	CompoundStatement		88:10:2810:2810	705036	0					
ANR	705655	ExpressionStatement	"name = r_str_newf ( ""entry%i"" , i )"	1240:4:35418:35450	705036	0	True				
ANR	705656	AssignmentExpression	"name = r_str_newf ( ""entry%i"" , i )"		705036	0		=			
ANR	705657	Identifier	name		705036	0					
ANR	705658	CallExpression	"r_str_newf ( ""entry%i"" , i )"		705036	1					
ANR	705659	Callee	r_str_newf		705036	0					
ANR	705660	Identifier	r_str_newf		705036	0					
ANR	705661	ArgumentList	"""entry%i"""		705036	1					
ANR	705662	Argument	"""entry%i"""		705036	0					
ANR	705663	PrimaryExpression	"""entry%i"""		705036	0					
ANR	705664	Argument	i		705036	1					
ANR	705665	Identifier	i		705036	0					
ANR	705666	IdentifierDeclStatement	char * n = __filterQuotedShell ( name ) ;	1242:3:35460:35496	705036	2	True				
ANR	705667	IdentifierDecl	* n = __filterQuotedShell ( name )		705036	0					
ANR	705668	IdentifierDeclType	char *		705036	0					
ANR	705669	Identifier	n		705036	1					
ANR	705670	AssignmentExpression	* n = __filterQuotedShell ( name )		705036	2		=			
ANR	705671	Identifier	n		705036	0					
ANR	705672	CallExpression	__filterQuotedShell ( name )		705036	1					
ANR	705673	Callee	__filterQuotedShell		705036	0					
ANR	705674	Identifier	__filterQuotedShell		705036	0					
ANR	705675	ArgumentList	name		705036	1					
ANR	705676	Argument	name		705036	0					
ANR	705677	Identifier	name		705036	0					
ANR	705678	Statement	r_cons_printf	1243:3:35501:35513	705036	3	True				
ANR	705679	Statement	(	1243:17:35515:35515	705036	4	True				
ANR	705680	Statement	"""\\""f %s 1 0x%08"""	1243:18:35516:35531	705036	5	True				
ANR	705681	Statement	PFMT64x	1243:34:35532:35538	705036	6	True				
ANR	705682	Statement	"""\\""\\n"""	1243:41:35539:35544	705036	7	True				
ANR	705683	Statement	","	1243:47:35545:35545	705036	8	True				
ANR	705684	Statement	n	1243:49:35547:35547	705036	9	True				
ANR	705685	Statement	","	1243:50:35548:35548	705036	10	True				
ANR	705686	Statement	at	1243:52:35550:35551	705036	11	True				
ANR	705687	Statement	)	1243:54:35552:35552	705036	12	True				
ANR	705688	ExpressionStatement		1243:55:35553:35553	705036	13	True				
ANR	705689	Statement	r_cons_printf	1244:3:35558:35570	705036	14	True				
ANR	705690	Statement	(	1244:17:35572:35572	705036	15	True				
ANR	705691	Statement	"""\\""f %s_%s 1 0x%08"""	1244:18:35573:35591	705036	16	True				
ANR	705692	Statement	PFMT64x	1244:37:35592:35598	705036	17	True				
ANR	705693	Statement	"""\\""\\n"""	1244:44:35599:35604	705036	18	True				
ANR	705694	Statement	","	1244:50:35605:35605	705036	19	True				
ANR	705695	Statement	n	1244:52:35607:35607	705036	20	True				
ANR	705696	Statement	","	1244:53:35608:35608	705036	21	True				
ANR	705697	Statement	hpaddr_key	1244:55:35610:35619	705036	22	True				
ANR	705698	Statement	","	1244:65:35620:35620	705036	23	True				
ANR	705699	Statement	hpaddr	1244:67:35622:35627	705036	24	True				
ANR	705700	Statement	)	1244:73:35628:35628	705036	25	True				
ANR	705701	ExpressionStatement		1244:74:35629:35629	705036	26	True				
ANR	705702	ExpressionStatement	"r_cons_printf ( ""\\""s %s\\""\\n"" , n )"	1245:3:35634:35665	705036	27	True				
ANR	705703	CallExpression	"r_cons_printf ( ""\\""s %s\\""\\n"" , n )"		705036	0					
ANR	705704	Callee	r_cons_printf		705036	0					
ANR	705705	Identifier	r_cons_printf		705036	0					
ANR	705706	ArgumentList	"""\\""s %s\\""\\n"""		705036	1					
ANR	705707	Argument	"""\\""s %s\\""\\n"""		705036	0					
ANR	705708	PrimaryExpression	"""\\""s %s\\""\\n"""		705036	0					
ANR	705709	Argument	n		705036	1					
ANR	705710	Identifier	n		705036	0					
ANR	705711	ExpressionStatement	free ( n )	1246:3:35670:35678	705036	28	True				
ANR	705712	CallExpression	free ( n )		705036	0					
ANR	705713	Callee	free		705036	0					
ANR	705714	Identifier	free		705036	0					
ANR	705715	ArgumentList	n		705036	1					
ANR	705716	Argument	n		705036	0					
ANR	705717	Identifier	n		705036	0					
ANR	705718	ExpressionStatement	free ( name )	1247:3:35683:35694	705036	29	True				
ANR	705719	CallExpression	free ( name )		705036	0					
ANR	705720	Callee	free		705036	0					
ANR	705721	Identifier	free		705036	0					
ANR	705722	ArgumentList	name		705036	1					
ANR	705723	Argument	name		705036	0					
ANR	705724	Identifier	name		705036	0					
ANR	705725	ElseStatement	else		705036	0					
ANR	705726	CompoundStatement		97:9:3103:3103	705036	0					
ANR	705727	Statement	r_cons_printf	1249:3:35710:35722	705036	0	True				
ANR	705728	Statement	(	1249:17:35724:35724	705036	1	True				
ANR	705729	Statement	"""vaddr=0x%08"""	1249:18:35725:35737	705036	2	True				
ANR	705730	Statement	PFMT64x	1249:31:35738:35744	705036	3	True				
ANR	705731	Statement	""" paddr=0x%08"""	1249:38:35745:35758	705036	4	True				
ANR	705732	Statement	PFMT64x	1249:52:35759:35765	705036	5	True				
ANR	705733	Statement	","	1249:59:35766:35766	705036	6	True				
ANR	705734	Statement	at	1249:61:35768:35769	705036	7	True				
ANR	705735	Statement	","	1249:63:35770:35770	705036	8	True				
ANR	705736	Statement	paddr	1249:65:35772:35776	705036	9	True				
ANR	705737	Statement	)	1249:70:35777:35777	705036	10	True				
ANR	705738	ExpressionStatement		1249:71:35778:35778	705036	11	True				
ANR	705739	IfStatement	if ( is_initfini ( entry ) && hvaddr != UT64_MAX )		705036	12					
ANR	705740	Condition	is_initfini ( entry ) && hvaddr != UT64_MAX	1250:7:35787:35827	705036	0	True				
ANR	705741	AndExpression	is_initfini ( entry ) && hvaddr != UT64_MAX		705036	0		&&			
ANR	705742	CallExpression	is_initfini ( entry )		705036	0					
ANR	705743	Callee	is_initfini		705036	0					
ANR	705744	Identifier	is_initfini		705036	0					
ANR	705745	ArgumentList	entry		705036	1					
ANR	705746	Argument	entry		705036	0					
ANR	705747	Identifier	entry		705036	0					
ANR	705748	EqualityExpression	hvaddr != UT64_MAX		705036	1		!=			
ANR	705749	Identifier	hvaddr		705036	0					
ANR	705750	Identifier	UT64_MAX		705036	1					
ANR	705751	CompoundStatement		99:50:3228:3228	705036	1					
ANR	705752	Statement	r_cons_printf	1251:4:35836:35848	705036	0	True				
ANR	705753	Statement	(	1251:18:35850:35850	705036	1	True				
ANR	705754	Statement	""" hvaddr=0x%08"""	1251:19:35851:35865	705036	2	True				
ANR	705755	Statement	PFMT64x	1251:34:35866:35872	705036	3	True				
ANR	705756	Statement	","	1251:41:35873:35873	705036	4	True				
ANR	705757	Statement	hvaddr	1251:43:35875:35880	705036	5	True				
ANR	705758	Statement	)	1251:49:35881:35881	705036	6	True				
ANR	705759	ExpressionStatement		1251:50:35882:35882	705036	7	True				
ANR	705760	ExpressionStatement	"r_cons_printf ( "" %s="" , hpaddr_key )"	1253:3:35892:35926	705036	13	True				
ANR	705761	CallExpression	"r_cons_printf ( "" %s="" , hpaddr_key )"		705036	0					
ANR	705762	Callee	r_cons_printf		705036	0					
ANR	705763	Identifier	r_cons_printf		705036	0					
ANR	705764	ArgumentList	""" %s="""		705036	1					
ANR	705765	Argument	""" %s="""		705036	0					
ANR	705766	PrimaryExpression	""" %s="""		705036	0					
ANR	705767	Argument	hpaddr_key		705036	1					
ANR	705768	Identifier	hpaddr_key		705036	0					
ANR	705769	IfStatement	if ( hpaddr == UT64_MAX )		705036	14					
ANR	705770	Condition	hpaddr == UT64_MAX	1254:7:35935:35952	705036	0	True				
ANR	705771	EqualityExpression	hpaddr == UT64_MAX		705036	0		==			
ANR	705772	Identifier	hpaddr		705036	0					
ANR	705773	Identifier	UT64_MAX		705036	1					
ANR	705774	CompoundStatement		103:27:3353:3353	705036	1					
ANR	705775	Statement	r_cons_printf	1255:4:35961:35973	705036	0	True				
ANR	705776	Statement	(	1255:18:35975:35975	705036	1	True				
ANR	705777	Statement	"""%"""	1255:19:35976:35978	705036	2	True				
ANR	705778	Statement	PFMT64d	1255:22:35979:35985	705036	3	True				
ANR	705779	Statement	","	1255:29:35986:35986	705036	4	True				
ANR	705780	Statement	hpaddr	1255:31:35988:35993	705036	5	True				
ANR	705781	Statement	)	1255:37:35994:35994	705036	6	True				
ANR	705782	ExpressionStatement		1255:38:35995:35995	705036	7	True				
ANR	705783	ElseStatement	else		705036	0					
ANR	705784	CompoundStatement		105:10:3405:3405	705036	0					
ANR	705785	Statement	r_cons_printf	1257:4:36013:36025	705036	0	True				
ANR	705786	Statement	(	1257:18:36027:36027	705036	1	True				
ANR	705787	Statement	"""0x%08"""	1257:19:36028:36034	705036	2	True				
ANR	705788	Statement	PFMT64x	1257:26:36035:36041	705036	3	True				
ANR	705789	Statement	","	1257:33:36042:36042	705036	4	True				
ANR	705790	Statement	hpaddr	1257:35:36044:36049	705036	5	True				
ANR	705791	Statement	)	1257:41:36050:36050	705036	6	True				
ANR	705792	ExpressionStatement		1257:42:36051:36051	705036	7	True				
ANR	705793	IfStatement	if ( entry -> type == R_BIN_ENTRY_TYPE_PROGRAM && hvaddr != UT64_MAX )		705036	15					
ANR	705794	Condition	entry -> type == R_BIN_ENTRY_TYPE_PROGRAM && hvaddr != UT64_MAX	1259:7:36065:36125	705036	0	True				
ANR	705795	AndExpression	entry -> type == R_BIN_ENTRY_TYPE_PROGRAM && hvaddr != UT64_MAX		705036	0		&&			
ANR	705796	EqualityExpression	entry -> type == R_BIN_ENTRY_TYPE_PROGRAM		705036	0		==			
ANR	705797	PtrMemberAccess	entry -> type		705036	0					
ANR	705798	Identifier	entry		705036	0					
ANR	705799	Identifier	type		705036	1					
ANR	705800	Identifier	R_BIN_ENTRY_TYPE_PROGRAM		705036	1					
ANR	705801	EqualityExpression	hvaddr != UT64_MAX		705036	1		!=			
ANR	705802	Identifier	hvaddr		705036	0					
ANR	705803	Identifier	UT64_MAX		705036	1					
ANR	705804	CompoundStatement		108:70:3526:3526	705036	1					
ANR	705805	Statement	r_cons_printf	1260:4:36134:36146	705036	0	True				
ANR	705806	Statement	(	1260:18:36148:36148	705036	1	True				
ANR	705807	Statement	""" hvaddr=0x%08"""	1260:19:36149:36163	705036	2	True				
ANR	705808	Statement	PFMT64x	1260:34:36164:36170	705036	3	True				
ANR	705809	Statement	","	1260:41:36171:36171	705036	4	True				
ANR	705810	Statement	hvaddr	1260:43:36173:36178	705036	5	True				
ANR	705811	Statement	)	1260:49:36179:36179	705036	6	True				
ANR	705812	ExpressionStatement		1260:50:36180:36180	705036	7	True				
ANR	705813	ExpressionStatement	"r_cons_printf ( "" type=%s\\n"" , type )"	1262:3:36190:36224	705036	16	True				
ANR	705814	CallExpression	"r_cons_printf ( "" type=%s\\n"" , type )"		705036	0					
ANR	705815	Callee	r_cons_printf		705036	0					
ANR	705816	Identifier	r_cons_printf		705036	0					
ANR	705817	ArgumentList	""" type=%s\\n"""		705036	1					
ANR	705818	Argument	""" type=%s\\n"""		705036	0					
ANR	705819	PrimaryExpression	""" type=%s\\n"""		705036	0					
ANR	705820	Argument	type		705036	1					
ANR	705821	Identifier	type		705036	0					
ANR	705822	IfStatement	if ( entry -> type == R_BIN_ENTRY_TYPE_INIT )		705036	10					
ANR	705823	Condition	entry -> type == R_BIN_ENTRY_TYPE_INIT	1264:6:36236:36271	705036	0	True				
ANR	705824	EqualityExpression	entry -> type == R_BIN_ENTRY_TYPE_INIT		705036	0		==			
ANR	705825	PtrMemberAccess	entry -> type		705036	0					
ANR	705826	Identifier	entry		705036	0					
ANR	705827	Identifier	type		705036	1					
ANR	705828	Identifier	R_BIN_ENTRY_TYPE_INIT		705036	1					
ANR	705829	CompoundStatement		113:44:3672:3672	705036	1					
ANR	705830	ExpressionStatement	init_i ++	1265:3:36279:36287	705036	0	True				
ANR	705831	PostIncDecOperationExpression	init_i ++		705036	0					
ANR	705832	Identifier	init_i		705036	0					
ANR	705833	IncDec	++		705036	1					
ANR	705834	ElseStatement	else		705036	0					
ANR	705835	IfStatement	if ( entry -> type == R_BIN_ENTRY_TYPE_FINI )		705036	0					
ANR	705836	Condition	entry -> type == R_BIN_ENTRY_TYPE_FINI	1266:13:36302:36337	705036	0	True				
ANR	705837	EqualityExpression	entry -> type == R_BIN_ENTRY_TYPE_FINI		705036	0		==			
ANR	705838	PtrMemberAccess	entry -> type		705036	0					
ANR	705839	Identifier	entry		705036	0					
ANR	705840	Identifier	type		705036	1					
ANR	705841	Identifier	R_BIN_ENTRY_TYPE_FINI		705036	1					
ANR	705842	CompoundStatement		115:51:3738:3738	705036	1					
ANR	705843	ExpressionStatement	fini_i ++	1267:3:36345:36353	705036	0	True				
ANR	705844	PostIncDecOperationExpression	fini_i ++		705036	0					
ANR	705845	Identifier	fini_i		705036	0					
ANR	705846	IncDec	++		705036	1					
ANR	705847	ElseStatement	else		705036	0					
ANR	705848	IfStatement	if ( entry -> type == R_BIN_ENTRY_TYPE_PREINIT )		705036	0					
ANR	705849	Condition	entry -> type == R_BIN_ENTRY_TYPE_PREINIT	1268:13:36368:36406	705036	0	True				
ANR	705850	EqualityExpression	entry -> type == R_BIN_ENTRY_TYPE_PREINIT		705036	0		==			
ANR	705851	PtrMemberAccess	entry -> type		705036	0					
ANR	705852	Identifier	entry		705036	0					
ANR	705853	Identifier	type		705036	1					
ANR	705854	Identifier	R_BIN_ENTRY_TYPE_PREINIT		705036	1					
ANR	705855	CompoundStatement		117:54:3807:3807	705036	1					
ANR	705856	ExpressionStatement	preinit_i ++	1269:3:36414:36425	705036	0	True				
ANR	705857	PostIncDecOperationExpression	preinit_i ++		705036	0					
ANR	705858	Identifier	preinit_i		705036	0					
ANR	705859	IncDec	++		705036	1					
ANR	705860	ElseStatement	else		705036	0					
ANR	705861	CompoundStatement		119:9:3834:3834	705036	0					
ANR	705862	ExpressionStatement	i ++	1271:3:36441:36444	705036	0	True				
ANR	705863	PostIncDecOperationExpression	i ++		705036	0					
ANR	705864	Identifier	i		705036	0					
ANR	705865	IncDec	++		705036	1					
ANR	705866	ExpressionStatement	last_processed = iter	1273:2:36452:36473	705036	11	True				
ANR	705867	AssignmentExpression	last_processed = iter		705036	0		=			
ANR	705868	Identifier	last_processed		705036	0					
ANR	705869	Identifier	iter		705036	1					
ANR	705870	IfStatement	if ( IS_MODE_SET ( mode ) )		705036	17					
ANR	705871	Condition	IS_MODE_SET ( mode )	1275:5:36483:36500	705036	0	True				
ANR	705872	CallExpression	IS_MODE_SET ( mode )		705036	0					
ANR	705873	Callee	IS_MODE_SET		705036	0					
ANR	705874	Identifier	IS_MODE_SET		705036	0					
ANR	705875	ArgumentList	mode		705036	1					
ANR	705876	Argument	mode		705036	0					
ANR	705877	Identifier	mode		705036	0					
ANR	705878	CompoundStatement		124:25:3901:3901	705036	1					
ANR	705879	IfStatement	if ( entry )		705036	0					
ANR	705880	Condition	entry	1276:6:36511:36515	705036	0	True				
ANR	705881	Identifier	entry		705036	0					
ANR	705882	CompoundStatement		126:3:3921:3975	705036	1					
ANR	705883	IdentifierDeclStatement	"ut64 at = rva ( r -> bin , entry -> paddr , entry -> vaddr , va ) ;"	1277:3:36523:36577	705036	0	True				
ANR	705884	IdentifierDecl	"at = rva ( r -> bin , entry -> paddr , entry -> vaddr , va )"		705036	0					
ANR	705885	IdentifierDeclType	ut64		705036	0					
ANR	705886	Identifier	at		705036	1					
ANR	705887	AssignmentExpression	"at = rva ( r -> bin , entry -> paddr , entry -> vaddr , va )"		705036	2		=			
ANR	705888	Identifier	at		705036	0					
ANR	705889	CallExpression	"rva ( r -> bin , entry -> paddr , entry -> vaddr , va )"		705036	1					
ANR	705890	Callee	rva		705036	0					
ANR	705891	Identifier	rva		705036	0					
ANR	705892	ArgumentList	r -> bin		705036	1					
ANR	705893	Argument	r -> bin		705036	0					
ANR	705894	PtrMemberAccess	r -> bin		705036	0					
ANR	705895	Identifier	r		705036	0					
ANR	705896	Identifier	bin		705036	1					
ANR	705897	Argument	entry -> paddr		705036	1					
ANR	705898	PtrMemberAccess	entry -> paddr		705036	0					
ANR	705899	Identifier	entry		705036	0					
ANR	705900	Identifier	paddr		705036	1					
ANR	705901	Argument	entry -> vaddr		705036	2					
ANR	705902	PtrMemberAccess	entry -> vaddr		705036	0					
ANR	705903	Identifier	entry		705036	0					
ANR	705904	Identifier	vaddr		705036	1					
ANR	705905	Argument	va		705036	3					
ANR	705906	Identifier	va		705036	0					
ANR	705907	ExpressionStatement	"r_core_seek ( r , at , 0 )"	1278:3:36582:36604	705036	1	True				
ANR	705908	CallExpression	"r_core_seek ( r , at , 0 )"		705036	0					
ANR	705909	Callee	r_core_seek		705036	0					
ANR	705910	Identifier	r_core_seek		705036	0					
ANR	705911	ArgumentList	r		705036	1					
ANR	705912	Argument	r		705036	0					
ANR	705913	Identifier	r		705036	0					
ANR	705914	Argument	at		705036	1					
ANR	705915	Identifier	at		705036	0					
ANR	705916	Argument	0		705036	2					
ANR	705917	PrimaryExpression	0		705036	0					
ANR	705918	ElseStatement	else		705036	0					
ANR	705919	IfStatement	if ( IS_MODE_JSON ( mode ) )		705036	0					
ANR	705920	Condition	IS_MODE_JSON ( mode )	1280:12:36622:36640	705036	0	True				
ANR	705921	CallExpression	IS_MODE_JSON ( mode )		705036	0					
ANR	705922	Callee	IS_MODE_JSON		705036	0					
ANR	705923	Identifier	IS_MODE_JSON		705036	0					
ANR	705924	ArgumentList	mode		705036	1					
ANR	705925	Argument	mode		705036	0					
ANR	705926	Identifier	mode		705036	0					
ANR	705927	CompoundStatement		129:33:4041:4041	705036	1					
ANR	705928	ExpressionStatement	"r_cons_printf ( ""]"" )"	1281:2:36647:36666	705036	0	True				
ANR	705929	CallExpression	"r_cons_printf ( ""]"" )"		705036	0					
ANR	705930	Callee	r_cons_printf		705036	0					
ANR	705931	Identifier	r_cons_printf		705036	0					
ANR	705932	ArgumentList	"""]"""		705036	1					
ANR	705933	Argument	"""]"""		705036	0					
ANR	705934	PrimaryExpression	"""]"""		705036	0					
ANR	705935	ExpressionStatement	r_cons_newline ( )	1282:2:36670:36687	705036	1	True				
ANR	705936	CallExpression	r_cons_newline ( )		705036	0					
ANR	705937	Callee	r_cons_newline		705036	0					
ANR	705938	Identifier	r_cons_newline		705036	0					
ANR	705939	ArgumentList			705036	1					
ANR	705940	ElseStatement	else		705036	0					
ANR	705941	IfStatement	if ( IS_MODE_NORMAL ( mode ) )		705036	0					
ANR	705942	Condition	IS_MODE_NORMAL ( mode )	1283:12:36701:36721	705036	0	True				
ANR	705943	CallExpression	IS_MODE_NORMAL ( mode )		705036	0					
ANR	705944	Callee	IS_MODE_NORMAL		705036	0					
ANR	705945	Identifier	IS_MODE_NORMAL		705036	0					
ANR	705946	ArgumentList	mode		705036	1					
ANR	705947	Argument	mode		705036	0					
ANR	705948	Identifier	mode		705036	0					
ANR	705949	CompoundStatement		132:35:4122:4122	705036	1					
ANR	705950	ExpressionStatement	"r_cons_printf ( ""\\n%i entrypoints\\n"" , init_i + fini_i + preinit_i + i )"	1284:2:36728:36797	705036	0	True				
ANR	705951	CallExpression	"r_cons_printf ( ""\\n%i entrypoints\\n"" , init_i + fini_i + preinit_i + i )"		705036	0					
ANR	705952	Callee	r_cons_printf		705036	0					
ANR	705953	Identifier	r_cons_printf		705036	0					
ANR	705954	ArgumentList	"""\\n%i entrypoints\\n"""		705036	1					
ANR	705955	Argument	"""\\n%i entrypoints\\n"""		705036	0					
ANR	705956	PrimaryExpression	"""\\n%i entrypoints\\n"""		705036	0					
ANR	705957	Argument	init_i + fini_i + preinit_i + i		705036	1					
ANR	705958	AdditiveExpression	init_i + fini_i + preinit_i + i		705036	0		+			
ANR	705959	Identifier	init_i		705036	0					
ANR	705960	AdditiveExpression	fini_i + preinit_i + i		705036	1		+			
ANR	705961	Identifier	fini_i		705036	0					
ANR	705962	AdditiveExpression	preinit_i + i		705036	1		+			
ANR	705963	Identifier	preinit_i		705036	0					
ANR	705964	Identifier	i		705036	1					
ANR	705965	ReturnStatement	return true ;	1286:1:36803:36814	705036	18	True				
ANR	705966	Identifier	true		705036	0					
ANR	705967	ReturnType	static int		705036	1					
ANR	705968	Identifier	bin_entry		705036	2					
ANR	705969	ParameterList	"RCore * r , int mode , ut64 laddr , int va , bool inifin"		705036	3					
ANR	705970	Parameter	RCore * r	1152:21:32548:32555	705036	0	True				
ANR	705971	ParameterType	RCore *		705036	0					
ANR	705972	Identifier	r		705036	1					
ANR	705973	Parameter	int mode	1152:31:32558:32565	705036	1	True				
ANR	705974	ParameterType	int		705036	0					
ANR	705975	Identifier	mode		705036	1					
ANR	705976	Parameter	ut64 laddr	1152:41:32568:32577	705036	2	True				
ANR	705977	ParameterType	ut64		705036	0					
ANR	705978	Identifier	laddr		705036	1					
ANR	705979	Parameter	int va	1152:53:32580:32585	705036	3	True				
ANR	705980	ParameterType	int		705036	0					
ANR	705981	Identifier	va		705036	1					
ANR	705982	Parameter	bool inifin	1152:61:32588:32598	705036	4	True				
ANR	705983	ParameterType	bool		705036	0					
ANR	705984	Identifier	inifin		705036	1					
ANR	705985	CFGEntryNode	ENTRY		705036		True				
ANR	705986	CFGExitNode	EXIT		705036		True				
ANR	705987	CFGErrorNode	ERROR		705036		True				
ANR	705988	Symbol	entry -> type		705036						
ANR	705989	Symbol	r_bin_get_entries		705036						
ANR	705990	Symbol	hpaddr_key		705036						
ANR	705991	Symbol	R_BIN_ENTRY_TYPE_PROGRAM		705036						
ANR	705992	Symbol	r_bin_get_baddr		705036						
ANR	705993	Symbol	IS_MODE_SIMPLE		705036						
ANR	705994	Symbol	type		705036						
ANR	705995	Symbol	mode		705036						
ANR	705996	Symbol	entry -> paddr		705036						
ANR	705997	Symbol	init_i		705036						
ANR	705998	Symbol	rva		705036						
ANR	705999	Symbol	entry -> vaddr		705036						
ANR	706000	Symbol	fini_i		705036						
ANR	706001	Symbol	R_BIN_ENTRY_TYPE_INIT		705036						
ANR	706002	Symbol	NULL		705036						
ANR	706003	Symbol	preinit_i		705036						
ANR	706004	Symbol	iter		705036						
ANR	706005	Symbol	va		705036						
ANR	706006	Symbol	__filterQuotedShell		705036						
ANR	706007	Symbol	r -> anal		705036						
ANR	706008	Symbol	R_BIN_ENTRY_TYPE_FINI		705036						
ANR	706009	Symbol	IS_MODE_SET		705036						
ANR	706010	Symbol	str		705036						
ANR	706011	Symbol	entry		705036						
ANR	706012	Symbol	entries		705036						
ANR	706013	Symbol	at		705036						
ANR	706014	Symbol	paddr		705036						
ANR	706015	Symbol	hpaddr		705036						
ANR	706016	Symbol	name		705036						
ANR	706017	Symbol	true		705036						
ANR	706018	Symbol	r_bin_entry_type_string		705036						
ANR	706019	Symbol	entry -> hvaddr		705036						
ANR	706020	Symbol	last_processed		705036						
ANR	706021	Symbol	baddr		705036						
ANR	706022	Symbol	laddr		705036						
ANR	706023	Symbol	r -> flags		705036						
ANR	706024	Symbol	R_MODE_SET		705036						
ANR	706025	Symbol	IS_MODE_JSON		705036						
ANR	706026	Symbol	inifin		705036						
ANR	706027	Symbol	r_str_newf		705036						
ANR	706028	Symbol	R_BIN_ENTRY_TYPE_PREINIT		705036						
ANR	706029	Symbol	R_FLAG_NAME_SIZE		705036						
ANR	706030	Symbol	r -> bin		705036						
ANR	706031	Symbol	hvaddr		705036						
ANR	706032	Symbol	UT64_MAX		705036						
ANR	706033	Symbol	entry -> hpaddr		705036						
ANR	706034	Symbol	* entry		705036						
ANR	706035	Symbol	i		705036						
ANR	706036	Symbol	n		705036						
ANR	706037	Symbol	IS_MODE_NORMAL		705036						
ANR	706038	Symbol	r		705036						
ANR	706039	Symbol	R_FLAGS_FS_SYMBOLS		705036						
ANR	706040	Symbol	R_META_TYPE_DATA		705036						
ANR	706041	Symbol	entry -> bits		705036						
ANR	706042	Symbol	IS_MODE_RAD		705036						
ANR	706043	Symbol	is_initfini		705036						
ANR	706044	Symbol	* r		705036						
ANR	706045	Function	bin_reloc_type_name	1289:0:36819:37070							
ANR	706046	FunctionDef	bin_reloc_type_name (RBinReloc * reloc)		706045	0					
ANR	706047	CompoundStatement		1289:57:36876:37070	706045	0					
ANR	706048	Statement	define	1290:1:36879:36884	706045	0	True				
ANR	706049	Statement	CASE	1290:8:36886:36889	706045	1	True				
ANR	706050	Statement	(	1290:12:36890:36890	706045	2	True				
ANR	706051	Statement	T	1290:13:36891:36891	706045	3	True				
ANR	706052	Statement	)	1290:14:36892:36892	706045	4	True				
ANR	706053	Statement	case	1290:16:36894:36897	706045	5	True				
ANR	706054	Statement	R_BIN_RELOC_	1290:21:36899:36910	706045	6	True				
ANR	706055	Label	T :	1290:37:36915:36916	706045	7	True				
ANR	706056	Identifier	T		706045	0					
ANR	706057	Statement	return	1290:40:36918:36923	706045	8	True				
ANR	706058	Statement	reloc	1290:47:36925:36929	706045	9	True				
ANR	706059	Statement	->	1290:52:36930:36931	706045	10	True				
ANR	706060	Statement	additive	1290:54:36932:36939	706045	11	True				
ANR	706061	Statement	?	1290:63:36941:36941	706045	12	True				
ANR	706062	Statement	"""ADD_"""	1290:65:36943:36948	706045	13	True				
ANR	706063	Label	T :	1290:73:36951:36953	706045	14	True				
ANR	706064	Identifier	T		706045	0					
ANR	706065	Statement	"""SET_"""	1290:77:36955:36960	706045	15	True				
ANR	706066	Statement	T	1290:85:36963:36963	706045	16	True				
ANR	706067	SwitchStatement	switch ( reloc -> type )		706045	17					
ANR	706068	Condition	reloc -> type	1291:9:36974:36984	706045	0	True				
ANR	706069	PtrMemberAccess	reloc -> type		706045	0					
ANR	706070	Identifier	reloc		706045	0					
ANR	706071	Identifier	type		706045	1					
ANR	706072	CompoundStatement		3:22:110:110	706045	1					
ANR	706073	ExpressionStatement	CASE ( 8 )	1292:2:36991:36998	706045	0	True				
ANR	706074	CallExpression	CASE ( 8 )		706045	0					
ANR	706075	Callee	CASE		706045	0					
ANR	706076	Identifier	CASE		706045	0					
ANR	706077	ArgumentList	8		706045	1					
ANR	706078	Argument	8		706045	0					
ANR	706079	PrimaryExpression	8		706045	0					
ANR	706080	ExpressionStatement	CASE ( 16 )	1293:2:37002:37010	706045	1	True				
ANR	706081	CallExpression	CASE ( 16 )		706045	0					
ANR	706082	Callee	CASE		706045	0					
ANR	706083	Identifier	CASE		706045	0					
ANR	706084	ArgumentList	16		706045	1					
ANR	706085	Argument	16		706045	0					
ANR	706086	PrimaryExpression	16		706045	0					
ANR	706087	ExpressionStatement	CASE ( 32 )	1294:2:37014:37022	706045	2	True				
ANR	706088	CallExpression	CASE ( 32 )		706045	0					
ANR	706089	Callee	CASE		706045	0					
ANR	706090	Identifier	CASE		706045	0					
ANR	706091	ArgumentList	32		706045	1					
ANR	706092	Argument	32		706045	0					
ANR	706093	PrimaryExpression	32		706045	0					
ANR	706094	ExpressionStatement	CASE ( 64 )	1295:2:37026:37034	706045	3	True				
ANR	706095	CallExpression	CASE ( 64 )		706045	0					
ANR	706096	Callee	CASE		706045	0					
ANR	706097	Identifier	CASE		706045	0					
ANR	706098	ArgumentList	64		706045	1					
ANR	706099	Argument	64		706045	0					
ANR	706100	PrimaryExpression	64		706045	0					
ANR	706101	ReturnStatement	"return ""UNKNOWN"" ;"	1297:1:37040:37056	706045	18	True				
ANR	706102	PrimaryExpression	"""UNKNOWN"""		706045	0					
ANR	706103	Statement	undef	1298:1:37059:37063	706045	19	True				
ANR	706104	Statement	CASE	1298:7:37065:37068	706045	20	True				
ANR	706105	ReturnType	static const char *		706045	1					
ANR	706106	Identifier	bin_reloc_type_name		706045	2					
ANR	706107	ParameterList	RBinReloc * reloc		706045	3					
ANR	706108	Parameter	RBinReloc * reloc	1289:39:36858:36873	706045	0	True				
ANR	706109	ParameterType	RBinReloc *		706045	0					
ANR	706110	Identifier	reloc		706045	1					
ANR	706111	CFGEntryNode	ENTRY		706045		True				
ANR	706112	CFGExitNode	EXIT		706045		True				
ANR	706113	Symbol	* reloc		706045						
ANR	706114	Symbol	reloc		706045						
ANR	706115	Symbol	reloc -> type		706045						
ANR	706116	Function	bin_reloc_size	1301:0:37073:37271							
ANR	706117	FunctionDef	bin_reloc_size (RBinReloc * reloc)		706116	0					
ANR	706118	CompoundStatement		1301:44:37117:37271	706116	0					
ANR	706119	Statement	define	1302:1:37120:37125	706116	0	True				
ANR	706120	Statement	CASE	1302:8:37127:37130	706116	1	True				
ANR	706121	Statement	(	1302:12:37131:37131	706116	2	True				
ANR	706122	Statement	T	1302:13:37132:37132	706116	3	True				
ANR	706123	Statement	)	1302:14:37133:37133	706116	4	True				
ANR	706124	Statement	case	1302:16:37135:37138	706116	5	True				
ANR	706125	Statement	R_BIN_RELOC_	1302:21:37140:37151	706116	6	True				
ANR	706126	Label	T :	1302:37:37156:37157	706116	7	True				
ANR	706127	Identifier	T		706116	0					
ANR	706128	Statement	return	1302:40:37159:37164	706116	8	True				
ANR	706129	Statement	(	1302:47:37166:37166	706116	9	True				
ANR	706130	Statement	T	1302:48:37167:37167	706116	10	True				
ANR	706131	Statement	)	1302:49:37168:37168	706116	11	True				
ANR	706132	Statement	/	1302:51:37170:37170	706116	12	True				
ANR	706133	Statement	8	1302:53:37172:37172	706116	13	True				
ANR	706134	SwitchStatement	switch ( reloc -> type )		706116	14					
ANR	706135	Condition	reloc -> type	1303:9:37183:37193	706116	0	True				
ANR	706136	PtrMemberAccess	reloc -> type		706116	0					
ANR	706137	Identifier	reloc		706116	0					
ANR	706138	Identifier	type		706116	1					
ANR	706139	CompoundStatement		3:22:78:78	706116	1					
ANR	706140	ExpressionStatement	CASE ( 8 )	1304:2:37200:37207	706116	0	True				
ANR	706141	CallExpression	CASE ( 8 )		706116	0					
ANR	706142	Callee	CASE		706116	0					
ANR	706143	Identifier	CASE		706116	0					
ANR	706144	ArgumentList	8		706116	1					
ANR	706145	Argument	8		706116	0					
ANR	706146	PrimaryExpression	8		706116	0					
ANR	706147	ExpressionStatement	CASE ( 16 )	1305:2:37211:37219	706116	1	True				
ANR	706148	CallExpression	CASE ( 16 )		706116	0					
ANR	706149	Callee	CASE		706116	0					
ANR	706150	Identifier	CASE		706116	0					
ANR	706151	ArgumentList	16		706116	1					
ANR	706152	Argument	16		706116	0					
ANR	706153	PrimaryExpression	16		706116	0					
ANR	706154	ExpressionStatement	CASE ( 32 )	1306:2:37223:37231	706116	2	True				
ANR	706155	CallExpression	CASE ( 32 )		706116	0					
ANR	706156	Callee	CASE		706116	0					
ANR	706157	Identifier	CASE		706116	0					
ANR	706158	ArgumentList	32		706116	1					
ANR	706159	Argument	32		706116	0					
ANR	706160	PrimaryExpression	32		706116	0					
ANR	706161	ExpressionStatement	CASE ( 64 )	1307:2:37235:37243	706116	3	True				
ANR	706162	CallExpression	CASE ( 64 )		706116	0					
ANR	706163	Callee	CASE		706116	0					
ANR	706164	Identifier	CASE		706116	0					
ANR	706165	ArgumentList	64		706116	1					
ANR	706166	Argument	64		706116	0					
ANR	706167	PrimaryExpression	64		706116	0					
ANR	706168	ReturnStatement	return 0 ;	1309:1:37249:37257	706116	15	True				
ANR	706169	PrimaryExpression	0		706116	0					
ANR	706170	Statement	undef	1310:1:37260:37264	706116	16	True				
ANR	706171	Statement	CASE	1310:7:37266:37269	706116	17	True				
ANR	706172	ReturnType	static ut8		706116	1					
ANR	706173	Identifier	bin_reloc_size		706116	2					
ANR	706174	ParameterList	RBinReloc * reloc		706116	3					
ANR	706175	Parameter	RBinReloc * reloc	1301:26:37099:37114	706116	0	True				
ANR	706176	ParameterType	RBinReloc *		706116	0					
ANR	706177	Identifier	reloc		706116	1					
ANR	706178	CFGEntryNode	ENTRY		706116		True				
ANR	706179	CFGExitNode	EXIT		706116		True				
ANR	706180	Symbol	* reloc		706116						
ANR	706181	Symbol	reloc		706116						
ANR	706182	Symbol	reloc -> type		706116						
ANR	706183	Function	resolveModuleOrdinal	1313:0:37274:37460							
ANR	706184	FunctionDef	"resolveModuleOrdinal (Sdb * sdb , const char * module , int ordinal)"		706183	0					
ANR	706185	CompoundStatement		1313:77:37351:37460	706183	0					
ANR	706186	IdentifierDeclStatement	Sdb * db = sdb ;	1314:1:37354:37367	706183	0	True				
ANR	706187	IdentifierDecl	* db = sdb		706183	0					
ANR	706188	IdentifierDeclType	Sdb *		706183	0					
ANR	706189	Identifier	db		706183	1					
ANR	706190	AssignmentExpression	* db = sdb		706183	2		=			
ANR	706191	Identifier	sdb		706183	0					
ANR	706192	Identifier	sdb		706183	1					
ANR	706193	IdentifierDeclStatement	"char * foo = sdb_get ( db , sdb_fmt ( ""%d"" , ordinal ) , 0 ) ;"	1315:1:37370:37422	706183	1	True				
ANR	706194	IdentifierDecl	"* foo = sdb_get ( db , sdb_fmt ( ""%d"" , ordinal ) , 0 )"		706183	0					
ANR	706195	IdentifierDeclType	char *		706183	0					
ANR	706196	Identifier	foo		706183	1					
ANR	706197	AssignmentExpression	"* foo = sdb_get ( db , sdb_fmt ( ""%d"" , ordinal ) , 0 )"		706183	2		=			
ANR	706198	Identifier	foo		706183	0					
ANR	706199	CallExpression	"sdb_get ( db , sdb_fmt ( ""%d"" , ordinal ) , 0 )"		706183	1					
ANR	706200	Callee	sdb_get		706183	0					
ANR	706201	Identifier	sdb_get		706183	0					
ANR	706202	ArgumentList	db		706183	1					
ANR	706203	Argument	db		706183	0					
ANR	706204	Identifier	db		706183	0					
ANR	706205	Argument	"sdb_fmt ( ""%d"" , ordinal )"		706183	1					
ANR	706206	CallExpression	"sdb_fmt ( ""%d"" , ordinal )"		706183	0					
ANR	706207	Callee	sdb_fmt		706183	0					
ANR	706208	Identifier	sdb_fmt		706183	0					
ANR	706209	ArgumentList	"""%d"""		706183	1					
ANR	706210	Argument	"""%d"""		706183	0					
ANR	706211	PrimaryExpression	"""%d"""		706183	0					
ANR	706212	Argument	ordinal		706183	1					
ANR	706213	Identifier	ordinal		706183	0					
ANR	706214	Argument	0		706183	2					
ANR	706215	PrimaryExpression	0		706183	0					
ANR	706216	ReturnStatement	return ( foo && * foo ) ? foo : NULL ;	1316:1:37425:37458	706183	2	True				
ANR	706217	ConditionalExpression	( foo && * foo ) ? foo : NULL		706183	0					
ANR	706218	Condition	foo && * foo		706183	0					
ANR	706219	AndExpression	foo && * foo		706183	0		&&			
ANR	706220	Identifier	foo		706183	0					
ANR	706221	UnaryOperationExpression	* foo		706183	1					
ANR	706222	UnaryOperator	*		706183	0					
ANR	706223	Identifier	foo		706183	1					
ANR	706224	Identifier	foo		706183	1					
ANR	706225	Identifier	NULL		706183	2					
ANR	706226	ReturnType	static char *		706183	1					
ANR	706227	Identifier	resolveModuleOrdinal		706183	2					
ANR	706228	ParameterList	"Sdb * sdb , const char * module , int ordinal"		706183	3					
ANR	706229	Parameter	Sdb * sdb	1313:34:37308:37315	706183	0	True				
ANR	706230	ParameterType	Sdb *		706183	0					
ANR	706231	Identifier	sdb		706183	1					
ANR	706232	Parameter	const char * module	1313:44:37318:37335	706183	1	True				
ANR	706233	ParameterType	const char *		706183	0					
ANR	706234	Identifier	module		706183	1					
ANR	706235	Parameter	int ordinal	1313:64:37338:37348	706183	2	True				
ANR	706236	ParameterType	int		706183	0					
ANR	706237	Identifier	ordinal		706183	1					
ANR	706238	CFGEntryNode	ENTRY		706183		True				
ANR	706239	CFGExitNode	EXIT		706183		True				
ANR	706240	Symbol	sdb		706183						
ANR	706241	Symbol	NULL		706183						
ANR	706242	Symbol	module		706183						
ANR	706243	Symbol	foo		706183						
ANR	706244	Symbol	sdb_get		706183						
ANR	706245	Symbol	sdb_fmt		706183						
ANR	706246	Symbol	db		706183						
ANR	706247	Symbol	ordinal		706183						
ANR	706248	Symbol	* foo		706183						
ANR	706249	Function	get_reloc_name	1319:0:37463:38841							
ANR	706250	FunctionDef	"get_reloc_name (RCore * r , RBinReloc * reloc , ut64 addr)"		706249	0					
ANR	706251	CompoundStatement		1319:67:37530:38841	706249	0					
ANR	706252	IdentifierDeclStatement	char * reloc_name = NULL ;	1320:1:37533:37556	706249	0	True				
ANR	706253	IdentifierDecl	* reloc_name = NULL		706249	0					
ANR	706254	IdentifierDeclType	char *		706249	0					
ANR	706255	Identifier	reloc_name		706249	1					
ANR	706256	AssignmentExpression	* reloc_name = NULL		706249	2		=			
ANR	706257	Identifier	NULL		706249	0					
ANR	706258	Identifier	NULL		706249	1					
ANR	706259	IdentifierDeclStatement	char * demangled_name = NULL ;	1321:1:37559:37586	706249	1	True				
ANR	706260	IdentifierDecl	* demangled_name = NULL		706249	0					
ANR	706261	IdentifierDeclType	char *		706249	0					
ANR	706262	Identifier	demangled_name		706249	1					
ANR	706263	AssignmentExpression	* demangled_name = NULL		706249	2		=			
ANR	706264	Identifier	NULL		706249	0					
ANR	706265	Identifier	NULL		706249	1					
ANR	706266	IdentifierDeclStatement	"const char * lang = r_config_get ( r -> config , ""bin.lang"" ) ;"	1322:1:37589:37644	706249	2	True				
ANR	706267	IdentifierDecl	"* lang = r_config_get ( r -> config , ""bin.lang"" )"		706249	0					
ANR	706268	IdentifierDeclType	const char *		706249	0					
ANR	706269	Identifier	lang		706249	1					
ANR	706270	AssignmentExpression	"* lang = r_config_get ( r -> config , ""bin.lang"" )"		706249	2		=			
ANR	706271	Identifier	lang		706249	0					
ANR	706272	CallExpression	"r_config_get ( r -> config , ""bin.lang"" )"		706249	1					
ANR	706273	Callee	r_config_get		706249	0					
ANR	706274	Identifier	r_config_get		706249	0					
ANR	706275	ArgumentList	r -> config		706249	1					
ANR	706276	Argument	r -> config		706249	0					
ANR	706277	PtrMemberAccess	r -> config		706249	0					
ANR	706278	Identifier	r		706249	0					
ANR	706279	Identifier	config		706249	1					
ANR	706280	Argument	"""bin.lang"""		706249	1					
ANR	706281	PrimaryExpression	"""bin.lang"""		706249	0					
ANR	706282	IdentifierDeclStatement	"int bin_demangle = r_config_get_i ( r -> config , ""bin.demangle"" ) ;"	1323:1:37647:37708	706249	3	True				
ANR	706283	IdentifierDecl	"bin_demangle = r_config_get_i ( r -> config , ""bin.demangle"" )"		706249	0					
ANR	706284	IdentifierDeclType	int		706249	0					
ANR	706285	Identifier	bin_demangle		706249	1					
ANR	706286	AssignmentExpression	"bin_demangle = r_config_get_i ( r -> config , ""bin.demangle"" )"		706249	2		=			
ANR	706287	Identifier	bin_demangle		706249	0					
ANR	706288	CallExpression	"r_config_get_i ( r -> config , ""bin.demangle"" )"		706249	1					
ANR	706289	Callee	r_config_get_i		706249	0					
ANR	706290	Identifier	r_config_get_i		706249	0					
ANR	706291	ArgumentList	r -> config		706249	1					
ANR	706292	Argument	r -> config		706249	0					
ANR	706293	PtrMemberAccess	r -> config		706249	0					
ANR	706294	Identifier	r		706249	0					
ANR	706295	Identifier	config		706249	1					
ANR	706296	Argument	"""bin.demangle"""		706249	1					
ANR	706297	PrimaryExpression	"""bin.demangle"""		706249	0					
ANR	706298	IdentifierDeclStatement	"bool keep_lib = r_config_get_i ( r -> config , ""bin.demangle.libs"" ) ;"	1324:1:37711:37774	706249	4	True				
ANR	706299	IdentifierDecl	"keep_lib = r_config_get_i ( r -> config , ""bin.demangle.libs"" )"		706249	0					
ANR	706300	IdentifierDeclType	bool		706249	0					
ANR	706301	Identifier	keep_lib		706249	1					
ANR	706302	AssignmentExpression	"keep_lib = r_config_get_i ( r -> config , ""bin.demangle.libs"" )"		706249	2		=			
ANR	706303	Identifier	keep_lib		706249	0					
ANR	706304	CallExpression	"r_config_get_i ( r -> config , ""bin.demangle.libs"" )"		706249	1					
ANR	706305	Callee	r_config_get_i		706249	0					
ANR	706306	Identifier	r_config_get_i		706249	0					
ANR	706307	ArgumentList	r -> config		706249	1					
ANR	706308	Argument	r -> config		706249	0					
ANR	706309	PtrMemberAccess	r -> config		706249	0					
ANR	706310	Identifier	r		706249	0					
ANR	706311	Identifier	config		706249	1					
ANR	706312	Argument	"""bin.demangle.libs"""		706249	1					
ANR	706313	PrimaryExpression	"""bin.demangle.libs"""		706249	0					
ANR	706314	IfStatement	if ( reloc -> import && reloc -> import -> name )		706249	5					
ANR	706315	Condition	reloc -> import && reloc -> import -> name	1325:5:37781:37816	706249	0	True				
ANR	706316	AndExpression	reloc -> import && reloc -> import -> name		706249	0		&&			
ANR	706317	PtrMemberAccess	reloc -> import		706249	0					
ANR	706318	Identifier	reloc		706249	0					
ANR	706319	Identifier	import		706249	1					
ANR	706320	PtrMemberAccess	reloc -> import -> name		706249	1					
ANR	706321	PtrMemberAccess	reloc -> import		706249	0					
ANR	706322	Identifier	reloc		706249	0					
ANR	706323	Identifier	import		706249	1					
ANR	706324	Identifier	name		706249	1					
ANR	706325	CompoundStatement		7:43:288:288	706249	1					
ANR	706326	IfStatement	if ( bin_demangle )		706249	0					
ANR	706327	Condition	bin_demangle	1326:6:37827:37838	706249	0	True				
ANR	706328	Identifier	bin_demangle		706249	0					
ANR	706329	CompoundStatement		8:20:310:310	706249	1					
ANR	706330	ExpressionStatement	"demangled_name = r_bin_demangle ( r -> bin -> cur , lang , reloc -> import -> name , addr , keep_lib )"	1327:3:37846:37934	706249	0	True				
ANR	706331	AssignmentExpression	"demangled_name = r_bin_demangle ( r -> bin -> cur , lang , reloc -> import -> name , addr , keep_lib )"		706249	0		=			
ANR	706332	Identifier	demangled_name		706249	0					
ANR	706333	CallExpression	"r_bin_demangle ( r -> bin -> cur , lang , reloc -> import -> name , addr , keep_lib )"		706249	1					
ANR	706334	Callee	r_bin_demangle		706249	0					
ANR	706335	Identifier	r_bin_demangle		706249	0					
ANR	706336	ArgumentList	r -> bin -> cur		706249	1					
ANR	706337	Argument	r -> bin -> cur		706249	0					
ANR	706338	PtrMemberAccess	r -> bin -> cur		706249	0					
ANR	706339	PtrMemberAccess	r -> bin		706249	0					
ANR	706340	Identifier	r		706249	0					
ANR	706341	Identifier	bin		706249	1					
ANR	706342	Identifier	cur		706249	1					
ANR	706343	Argument	lang		706249	1					
ANR	706344	Identifier	lang		706249	0					
ANR	706345	Argument	reloc -> import -> name		706249	2					
ANR	706346	PtrMemberAccess	reloc -> import -> name		706249	0					
ANR	706347	PtrMemberAccess	reloc -> import		706249	0					
ANR	706348	Identifier	reloc		706249	0					
ANR	706349	Identifier	import		706249	1					
ANR	706350	Identifier	name		706249	1					
ANR	706351	Argument	addr		706249	3					
ANR	706352	Identifier	addr		706249	0					
ANR	706353	Argument	keep_lib		706249	4					
ANR	706354	Identifier	keep_lib		706249	0					
ANR	706355	ExpressionStatement	"reloc_name = sdb_fmt ( ""reloc.%s_%d"" , demangled_name ? demangled_name : reloc -> import -> name , ( int ) ( addr & 0xff ) )"	1329:2:37942:38063	706249	1	True				
ANR	706356	AssignmentExpression	"reloc_name = sdb_fmt ( ""reloc.%s_%d"" , demangled_name ? demangled_name : reloc -> import -> name , ( int ) ( addr & 0xff ) )"		706249	0		=			
ANR	706357	Identifier	reloc_name		706249	0					
ANR	706358	CallExpression	"sdb_fmt ( ""reloc.%s_%d"" , demangled_name ? demangled_name : reloc -> import -> name , ( int ) ( addr & 0xff ) )"		706249	1					
ANR	706359	Callee	sdb_fmt		706249	0					
ANR	706360	Identifier	sdb_fmt		706249	0					
ANR	706361	ArgumentList	"""reloc.%s_%d"""		706249	1					
ANR	706362	Argument	"""reloc.%s_%d"""		706249	0					
ANR	706363	PrimaryExpression	"""reloc.%s_%d"""		706249	0					
ANR	706364	Argument	demangled_name ? demangled_name : reloc -> import -> name		706249	1					
ANR	706365	ConditionalExpression	demangled_name ? demangled_name : reloc -> import -> name		706249	0					
ANR	706366	Condition	demangled_name		706249	0					
ANR	706367	Identifier	demangled_name		706249	0					
ANR	706368	Identifier	demangled_name		706249	1					
ANR	706369	PtrMemberAccess	reloc -> import -> name		706249	2					
ANR	706370	PtrMemberAccess	reloc -> import		706249	0					
ANR	706371	Identifier	reloc		706249	0					
ANR	706372	Identifier	import		706249	1					
ANR	706373	Identifier	name		706249	1					
ANR	706374	Argument	( int ) ( addr & 0xff )		706249	2					
ANR	706375	CastExpression	( int ) ( addr & 0xff )		706249	0					
ANR	706376	CastTarget	int		706249	0					
ANR	706377	BitAndExpression	addr & 0xff		706249	1		&			
ANR	706378	Identifier	addr		706249	0					
ANR	706379	PrimaryExpression	0xff		706249	1					
ANR	706380	IfStatement	if ( ! reloc_name )		706249	2					
ANR	706381	Condition	! reloc_name	1331:6:38071:38081	706249	0	True				
ANR	706382	UnaryOperationExpression	! reloc_name		706249	0					
ANR	706383	UnaryOperator	!		706249	0					
ANR	706384	Identifier	reloc_name		706249	1					
ANR	706385	CompoundStatement		13:19:553:553	706249	1					
ANR	706386	ExpressionStatement	free ( demangled_name )	1332:3:38089:38110	706249	0	True				
ANR	706387	CallExpression	free ( demangled_name )		706249	0					
ANR	706388	Callee	free		706249	0					
ANR	706389	Identifier	free		706249	0					
ANR	706390	ArgumentList	demangled_name		706249	1					
ANR	706391	Argument	demangled_name		706249	0					
ANR	706392	Identifier	demangled_name		706249	0					
ANR	706393	ReturnStatement	return NULL ;	1333:3:38115:38126	706249	1	True				
ANR	706394	Identifier	NULL		706249	0					
ANR	706395	ExpressionStatement	"r_str_replace_char ( reloc_name , '$' , '_' )"	1335:2:38134:38175	706249	3	True				
ANR	706396	CallExpression	"r_str_replace_char ( reloc_name , '$' , '_' )"		706249	0					
ANR	706397	Callee	r_str_replace_char		706249	0					
ANR	706398	Identifier	r_str_replace_char		706249	0					
ANR	706399	ArgumentList	reloc_name		706249	1					
ANR	706400	Argument	reloc_name		706249	0					
ANR	706401	Identifier	reloc_name		706249	0					
ANR	706402	Argument	'$'		706249	1					
ANR	706403	PrimaryExpression	'$'		706249	0					
ANR	706404	Argument	'_'		706249	2					
ANR	706405	PrimaryExpression	'_'		706249	0					
ANR	706406	ElseStatement	else		706249	0					
ANR	706407	IfStatement	if ( reloc -> symbol && reloc -> symbol -> name )		706249	0					
ANR	706408	Condition	reloc -> symbol && reloc -> symbol -> name	1336:12:38189:38224	706249	0	True				
ANR	706409	AndExpression	reloc -> symbol && reloc -> symbol -> name		706249	0		&&			
ANR	706410	PtrMemberAccess	reloc -> symbol		706249	0					
ANR	706411	Identifier	reloc		706249	0					
ANR	706412	Identifier	symbol		706249	1					
ANR	706413	PtrMemberAccess	reloc -> symbol -> name		706249	1					
ANR	706414	PtrMemberAccess	reloc -> symbol		706249	0					
ANR	706415	Identifier	reloc		706249	0					
ANR	706416	Identifier	symbol		706249	1					
ANR	706417	Identifier	name		706249	1					
ANR	706418	CompoundStatement		18:50:696:696	706249	1					
ANR	706419	IfStatement	if ( bin_demangle )		706249	0					
ANR	706420	Condition	bin_demangle	1337:6:38235:38246	706249	0	True				
ANR	706421	Identifier	bin_demangle		706249	0					
ANR	706422	CompoundStatement		19:20:718:718	706249	1					
ANR	706423	ExpressionStatement	"demangled_name = r_bin_demangle ( r -> bin -> cur , lang , reloc -> symbol -> name , addr , keep_lib )"	1338:3:38254:38342	706249	0	True				
ANR	706424	AssignmentExpression	"demangled_name = r_bin_demangle ( r -> bin -> cur , lang , reloc -> symbol -> name , addr , keep_lib )"		706249	0		=			
ANR	706425	Identifier	demangled_name		706249	0					
ANR	706426	CallExpression	"r_bin_demangle ( r -> bin -> cur , lang , reloc -> symbol -> name , addr , keep_lib )"		706249	1					
ANR	706427	Callee	r_bin_demangle		706249	0					
ANR	706428	Identifier	r_bin_demangle		706249	0					
ANR	706429	ArgumentList	r -> bin -> cur		706249	1					
ANR	706430	Argument	r -> bin -> cur		706249	0					
ANR	706431	PtrMemberAccess	r -> bin -> cur		706249	0					
ANR	706432	PtrMemberAccess	r -> bin		706249	0					
ANR	706433	Identifier	r		706249	0					
ANR	706434	Identifier	bin		706249	1					
ANR	706435	Identifier	cur		706249	1					
ANR	706436	Argument	lang		706249	1					
ANR	706437	Identifier	lang		706249	0					
ANR	706438	Argument	reloc -> symbol -> name		706249	2					
ANR	706439	PtrMemberAccess	reloc -> symbol -> name		706249	0					
ANR	706440	PtrMemberAccess	reloc -> symbol		706249	0					
ANR	706441	Identifier	reloc		706249	0					
ANR	706442	Identifier	symbol		706249	1					
ANR	706443	Identifier	name		706249	1					
ANR	706444	Argument	addr		706249	3					
ANR	706445	Identifier	addr		706249	0					
ANR	706446	Argument	keep_lib		706249	4					
ANR	706447	Identifier	keep_lib		706249	0					
ANR	706448	ExpressionStatement	"reloc_name = sdb_fmt ( ""reloc.%s_%d"" , demangled_name ? demangled_name : reloc -> symbol -> name , ( int ) ( addr & 0xff ) )"	1340:2:38350:38471	706249	1	True				
ANR	706449	AssignmentExpression	"reloc_name = sdb_fmt ( ""reloc.%s_%d"" , demangled_name ? demangled_name : reloc -> symbol -> name , ( int ) ( addr & 0xff ) )"		706249	0		=			
ANR	706450	Identifier	reloc_name		706249	0					
ANR	706451	CallExpression	"sdb_fmt ( ""reloc.%s_%d"" , demangled_name ? demangled_name : reloc -> symbol -> name , ( int ) ( addr & 0xff ) )"		706249	1					
ANR	706452	Callee	sdb_fmt		706249	0					
ANR	706453	Identifier	sdb_fmt		706249	0					
ANR	706454	ArgumentList	"""reloc.%s_%d"""		706249	1					
ANR	706455	Argument	"""reloc.%s_%d"""		706249	0					
ANR	706456	PrimaryExpression	"""reloc.%s_%d"""		706249	0					
ANR	706457	Argument	demangled_name ? demangled_name : reloc -> symbol -> name		706249	1					
ANR	706458	ConditionalExpression	demangled_name ? demangled_name : reloc -> symbol -> name		706249	0					
ANR	706459	Condition	demangled_name		706249	0					
ANR	706460	Identifier	demangled_name		706249	0					
ANR	706461	Identifier	demangled_name		706249	1					
ANR	706462	PtrMemberAccess	reloc -> symbol -> name		706249	2					
ANR	706463	PtrMemberAccess	reloc -> symbol		706249	0					
ANR	706464	Identifier	reloc		706249	0					
ANR	706465	Identifier	symbol		706249	1					
ANR	706466	Identifier	name		706249	1					
ANR	706467	Argument	( int ) ( addr & 0xff )		706249	2					
ANR	706468	CastExpression	( int ) ( addr & 0xff )		706249	0					
ANR	706469	CastTarget	int		706249	0					
ANR	706470	BitAndExpression	addr & 0xff		706249	1		&			
ANR	706471	Identifier	addr		706249	0					
ANR	706472	PrimaryExpression	0xff		706249	1					
ANR	706473	IfStatement	if ( ! reloc_name )		706249	2					
ANR	706474	Condition	! reloc_name	1342:6:38479:38489	706249	0	True				
ANR	706475	UnaryOperationExpression	! reloc_name		706249	0					
ANR	706476	UnaryOperator	!		706249	0					
ANR	706477	Identifier	reloc_name		706249	1					
ANR	706478	CompoundStatement		24:19:961:961	706249	1					
ANR	706479	ExpressionStatement	free ( demangled_name )	1343:3:38497:38518	706249	0	True				
ANR	706480	CallExpression	free ( demangled_name )		706249	0					
ANR	706481	Callee	free		706249	0					
ANR	706482	Identifier	free		706249	0					
ANR	706483	ArgumentList	demangled_name		706249	1					
ANR	706484	Argument	demangled_name		706249	0					
ANR	706485	Identifier	demangled_name		706249	0					
ANR	706486	ReturnStatement	return NULL ;	1344:3:38523:38534	706249	1	True				
ANR	706487	Identifier	NULL		706249	0					
ANR	706488	ExpressionStatement	"r_str_replace_char ( reloc_name , '$' , '_' )"	1346:2:38542:38583	706249	3	True				
ANR	706489	CallExpression	"r_str_replace_char ( reloc_name , '$' , '_' )"		706249	0					
ANR	706490	Callee	r_str_replace_char		706249	0					
ANR	706491	Identifier	r_str_replace_char		706249	0					
ANR	706492	ArgumentList	reloc_name		706249	1					
ANR	706493	Argument	reloc_name		706249	0					
ANR	706494	Identifier	reloc_name		706249	0					
ANR	706495	Argument	'$'		706249	1					
ANR	706496	PrimaryExpression	'$'		706249	0					
ANR	706497	Argument	'_'		706249	2					
ANR	706498	PrimaryExpression	'_'		706249	0					
ANR	706499	ElseStatement	else		706249	0					
ANR	706500	IfStatement	if ( reloc -> is_ifunc )		706249	0					
ANR	706501	Condition	reloc -> is_ifunc	1347:12:38597:38611	706249	0	True				
ANR	706502	PtrMemberAccess	reloc -> is_ifunc		706249	0					
ANR	706503	Identifier	reloc		706249	0					
ANR	706504	Identifier	is_ifunc		706249	1					
ANR	706505	CompoundStatement		29:29:1083:1083	706249	1					
ANR	706506	Statement	reloc_name	1349:2:38678:38687	706249	0	True				
ANR	706507	Statement	=	1349:13:38689:38689	706249	1	True				
ANR	706508	Statement	sdb_fmt	1349:15:38691:38697	706249	2	True				
ANR	706509	Statement	(	1349:23:38699:38699	706249	3	True				
ANR	706510	Statement	"""reloc.ifunc_%"""	1349:24:38700:38714	706249	4	True				
ANR	706511	Statement	PFMT64x	1349:39:38715:38721	706249	5	True				
ANR	706512	Statement	","	1349:46:38722:38722	706249	6	True				
ANR	706513	Statement	reloc	1349:48:38724:38728	706249	7	True				
ANR	706514	Statement	->	1349:53:38729:38730	706249	8	True				
ANR	706515	Statement	addend	1349:55:38731:38736	706249	9	True				
ANR	706516	Statement	)	1349:61:38737:38737	706249	10	True				
ANR	706517	ExpressionStatement		1349:62:38738:38738	706249	11	True				
ANR	706518	ElseStatement	else		706249	0					
ANR	706519	CompoundStatement		32:8:1217:1217	706249	0					
ANR	706520	ExpressionStatement	free ( demangled_name )	1353:1:38798:38819	706249	6	True				
ANR	706521	CallExpression	free ( demangled_name )		706249	0					
ANR	706522	Callee	free		706249	0					
ANR	706523	Identifier	free		706249	0					
ANR	706524	ArgumentList	demangled_name		706249	1					
ANR	706525	Argument	demangled_name		706249	0					
ANR	706526	Identifier	demangled_name		706249	0					
ANR	706527	ReturnStatement	return reloc_name ;	1354:1:38822:38839	706249	7	True				
ANR	706528	Identifier	reloc_name		706249	0					
ANR	706529	ReturnType	static char *		706249	1					
ANR	706530	Identifier	get_reloc_name		706249	2					
ANR	706531	ParameterList	"RCore * r , RBinReloc * reloc , ut64 addr"		706249	3					
ANR	706532	Parameter	RCore * r	1319:28:37491:37498	706249	0	True				
ANR	706533	ParameterType	RCore *		706249	0					
ANR	706534	Identifier	r		706249	1					
ANR	706535	Parameter	RBinReloc * reloc	1319:38:37501:37516	706249	1	True				
ANR	706536	ParameterType	RBinReloc *		706249	0					
ANR	706537	Identifier	reloc		706249	1					
ANR	706538	Parameter	ut64 addr	1319:56:37519:37527	706249	2	True				
ANR	706539	ParameterType	ut64		706249	0					
ANR	706540	Identifier	addr		706249	1					
ANR	706541	CFGEntryNode	ENTRY		706249		True				
ANR	706542	CFGExitNode	EXIT		706249		True				
ANR	706543	Symbol	reloc -> is_ifunc		706249						
ANR	706544	Symbol	r_config_get		706249						
ANR	706545	Symbol	reloc -> symbol -> name		706249						
ANR	706546	Symbol	demangled_name		706249						
ANR	706547	Symbol	* reloc -> symbol		706249						
ANR	706548	Symbol	r_bin_demangle		706249						
ANR	706549	Symbol	* r -> bin		706249						
ANR	706550	Symbol	r -> bin		706249						
ANR	706551	Symbol	* * r		706249						
ANR	706552	Symbol	reloc -> import		706249						
ANR	706553	Symbol	reloc		706249						
ANR	706554	Symbol	addr		706249						
ANR	706555	Symbol	lang		706249						
ANR	706556	Symbol	sdb_fmt		706249						
ANR	706557	Symbol	* reloc		706249						
ANR	706558	Symbol	NULL		706249						
ANR	706559	Symbol	r -> bin -> cur		706249						
ANR	706560	Symbol	bin_demangle		706249						
ANR	706561	Symbol	reloc -> symbol		706249						
ANR	706562	Symbol	keep_lib		706249						
ANR	706563	Symbol	r		706249						
ANR	706564	Symbol	r_config_get_i		706249						
ANR	706565	Symbol	* * reloc		706249						
ANR	706566	Symbol	reloc_name		706249						
ANR	706567	Symbol	* r		706249						
ANR	706568	Symbol	r -> config		706249						
ANR	706569	Symbol	* reloc -> import		706249						
ANR	706570	Symbol	reloc -> import -> name		706249						
ANR	706571	Function	set_bin_relocs	1357:0:38844:41857							
ANR	706572	FunctionDef	"set_bin_relocs (RCore * r , RBinReloc * reloc , ut64 addr , Sdb * * db , char * * sdb_module)"		706571	0					
ANR	706573	CompoundStatement		1357:95:38939:41857	706571	0					
ANR	706574	IdentifierDeclStatement	"int bin_demangle = r_config_get_i ( r -> config , ""bin.demangle"" ) ;"	1358:1:38942:39003	706571	0	True				
ANR	706575	IdentifierDecl	"bin_demangle = r_config_get_i ( r -> config , ""bin.demangle"" )"		706571	0					
ANR	706576	IdentifierDeclType	int		706571	0					
ANR	706577	Identifier	bin_demangle		706571	1					
ANR	706578	AssignmentExpression	"bin_demangle = r_config_get_i ( r -> config , ""bin.demangle"" )"		706571	2		=			
ANR	706579	Identifier	bin_demangle		706571	0					
ANR	706580	CallExpression	"r_config_get_i ( r -> config , ""bin.demangle"" )"		706571	1					
ANR	706581	Callee	r_config_get_i		706571	0					
ANR	706582	Identifier	r_config_get_i		706571	0					
ANR	706583	ArgumentList	r -> config		706571	1					
ANR	706584	Argument	r -> config		706571	0					
ANR	706585	PtrMemberAccess	r -> config		706571	0					
ANR	706586	Identifier	r		706571	0					
ANR	706587	Identifier	config		706571	1					
ANR	706588	Argument	"""bin.demangle"""		706571	1					
ANR	706589	PrimaryExpression	"""bin.demangle"""		706571	0					
ANR	706590	IdentifierDeclStatement	"bool keep_lib = r_config_get_i ( r -> config , ""bin.demangle.libs"" ) ;"	1359:1:39006:39069	706571	1	True				
ANR	706591	IdentifierDecl	"keep_lib = r_config_get_i ( r -> config , ""bin.demangle.libs"" )"		706571	0					
ANR	706592	IdentifierDeclType	bool		706571	0					
ANR	706593	Identifier	keep_lib		706571	1					
ANR	706594	AssignmentExpression	"keep_lib = r_config_get_i ( r -> config , ""bin.demangle.libs"" )"		706571	2		=			
ANR	706595	Identifier	keep_lib		706571	0					
ANR	706596	CallExpression	"r_config_get_i ( r -> config , ""bin.demangle.libs"" )"		706571	1					
ANR	706597	Callee	r_config_get_i		706571	0					
ANR	706598	Identifier	r_config_get_i		706571	0					
ANR	706599	ArgumentList	r -> config		706571	1					
ANR	706600	Argument	r -> config		706571	0					
ANR	706601	PtrMemberAccess	r -> config		706571	0					
ANR	706602	Identifier	r		706571	0					
ANR	706603	Identifier	config		706571	1					
ANR	706604	Argument	"""bin.demangle.libs"""		706571	1					
ANR	706605	PrimaryExpression	"""bin.demangle.libs"""		706571	0					
ANR	706606	IdentifierDeclStatement	"const char * lang = r_config_get ( r -> config , ""bin.lang"" ) ;"	1360:1:39072:39127	706571	2	True				
ANR	706607	IdentifierDecl	"* lang = r_config_get ( r -> config , ""bin.lang"" )"		706571	0					
ANR	706608	IdentifierDeclType	const char *		706571	0					
ANR	706609	Identifier	lang		706571	1					
ANR	706610	AssignmentExpression	"* lang = r_config_get ( r -> config , ""bin.lang"" )"		706571	2		=			
ANR	706611	Identifier	lang		706571	0					
ANR	706612	CallExpression	"r_config_get ( r -> config , ""bin.lang"" )"		706571	1					
ANR	706613	Callee	r_config_get		706571	0					
ANR	706614	Identifier	r_config_get		706571	0					
ANR	706615	ArgumentList	r -> config		706571	1					
ANR	706616	Argument	r -> config		706571	0					
ANR	706617	PtrMemberAccess	r -> config		706571	0					
ANR	706618	Identifier	r		706571	0					
ANR	706619	Identifier	config		706571	1					
ANR	706620	Argument	"""bin.lang"""		706571	1					
ANR	706621	PrimaryExpression	"""bin.lang"""		706571	0					
ANR	706622	IdentifierDeclStatement	"char * reloc_name , * demname = NULL ;"	1361:1:39130:39163	706571	3	True				
ANR	706623	IdentifierDecl	* reloc_name		706571	0					
ANR	706624	IdentifierDeclType	char *		706571	0					
ANR	706625	Identifier	reloc_name		706571	1					
ANR	706626	IdentifierDecl	* demname = NULL		706571	1					
ANR	706627	IdentifierDeclType	char *		706571	0					
ANR	706628	Identifier	demname		706571	1					
ANR	706629	AssignmentExpression	* demname = NULL		706571	2		=			
ANR	706630	Identifier	NULL		706571	0					
ANR	706631	Identifier	NULL		706571	1					
ANR	706632	IdentifierDeclStatement	bool is_pe = true ;	1362:1:39166:39183	706571	4	True				
ANR	706633	IdentifierDecl	is_pe = true		706571	0					
ANR	706634	IdentifierDeclType	bool		706571	0					
ANR	706635	Identifier	is_pe		706571	1					
ANR	706636	AssignmentExpression	is_pe = true		706571	2		=			
ANR	706637	Identifier	true		706571	0					
ANR	706638	Identifier	true		706571	1					
ANR	706639	IdentifierDeclStatement	int is_sandbox = r_sandbox_enable ( 0 ) ;	1363:1:39186:39223	706571	5	True				
ANR	706640	IdentifierDecl	is_sandbox = r_sandbox_enable ( 0 )		706571	0					
ANR	706641	IdentifierDeclType	int		706571	0					
ANR	706642	Identifier	is_sandbox		706571	1					
ANR	706643	AssignmentExpression	is_sandbox = r_sandbox_enable ( 0 )		706571	2		=			
ANR	706644	Identifier	is_sandbox		706571	0					
ANR	706645	CallExpression	r_sandbox_enable ( 0 )		706571	1					
ANR	706646	Callee	r_sandbox_enable		706571	0					
ANR	706647	Identifier	r_sandbox_enable		706571	0					
ANR	706648	ArgumentList	0		706571	1					
ANR	706649	Argument	0		706571	0					
ANR	706650	PrimaryExpression	0		706571	0					
ANR	706651	IfStatement	if ( reloc -> import && reloc -> import -> name [ 0 ] )		706571	6					
ANR	706652	Condition	reloc -> import && reloc -> import -> name [ 0 ]	1365:5:39231:39269	706571	0	True				
ANR	706653	AndExpression	reloc -> import && reloc -> import -> name [ 0 ]		706571	0		&&			
ANR	706654	PtrMemberAccess	reloc -> import		706571	0					
ANR	706655	Identifier	reloc		706571	0					
ANR	706656	Identifier	import		706571	1					
ANR	706657	ArrayIndexing	reloc -> import -> name [ 0 ]		706571	1					
ANR	706658	PtrMemberAccess	reloc -> import -> name		706571	0					
ANR	706659	PtrMemberAccess	reloc -> import		706571	0					
ANR	706660	Identifier	reloc		706571	0					
ANR	706661	Identifier	import		706571	1					
ANR	706662	Identifier	name		706571	1					
ANR	706663	PrimaryExpression	0		706571	1					
ANR	706664	CompoundStatement		11:2:366:379	706571	1					
ANR	706665	IdentifierDeclStatement	char str [ R_FLAG_NAME_SIZE ] ;	1366:2:39276:39302	706571	0	True				
ANR	706666	IdentifierDecl	str [ R_FLAG_NAME_SIZE ]		706571	0					
ANR	706667	IdentifierDeclType	char [ R_FLAG_NAME_SIZE ]		706571	0					
ANR	706668	Identifier	str		706571	1					
ANR	706669	Identifier	R_FLAG_NAME_SIZE		706571	2					
ANR	706670	IdentifierDeclStatement	RFlagItem * fi ;	1367:2:39306:39319	706571	1	True				
ANR	706671	IdentifierDecl	* fi		706571	0					
ANR	706672	IdentifierDeclType	RFlagItem *		706571	0					
ANR	706673	Identifier	fi		706571	1					
ANR	706674	IfStatement	"if ( is_pe && ! is_sandbox && strstr ( reloc -> import -> name , ""Ordinal"" ) )"		706571	2					
ANR	706675	Condition	"is_pe && ! is_sandbox && strstr ( reloc -> import -> name , ""Ordinal"" )"	1369:6:39328:39390	706571	0	True				
ANR	706676	AndExpression	"is_pe && ! is_sandbox && strstr ( reloc -> import -> name , ""Ordinal"" )"		706571	0		&&			
ANR	706677	Identifier	is_pe		706571	0					
ANR	706678	AndExpression	"! is_sandbox && strstr ( reloc -> import -> name , ""Ordinal"" )"		706571	1		&&			
ANR	706679	UnaryOperationExpression	! is_sandbox		706571	0					
ANR	706680	UnaryOperator	!		706571	0					
ANR	706681	Identifier	is_sandbox		706571	1					
ANR	706682	CallExpression	"strstr ( reloc -> import -> name , ""Ordinal"" )"		706571	1					
ANR	706683	Callee	strstr		706571	0					
ANR	706684	Identifier	strstr		706571	0					
ANR	706685	ArgumentList	reloc -> import -> name		706571	1					
ANR	706686	Argument	reloc -> import -> name		706571	0					
ANR	706687	PtrMemberAccess	reloc -> import -> name		706571	0					
ANR	706688	PtrMemberAccess	reloc -> import		706571	0					
ANR	706689	Identifier	reloc		706571	0					
ANR	706690	Identifier	import		706571	1					
ANR	706691	Identifier	name		706571	1					
ANR	706692	Argument	"""Ordinal"""		706571	1					
ANR	706693	PrimaryExpression	"""Ordinal"""		706571	0					
ANR	706694	CompoundStatement		16:3:546:583	706571	1					
ANR	706695	IdentifierDeclStatement	"const char * TOKEN = "".dll_Ordinal_"" ;"	1370:3:39398:39433	706571	0	True				
ANR	706696	IdentifierDecl	"* TOKEN = "".dll_Ordinal_"""		706571	0					
ANR	706697	IdentifierDeclType	const char *		706571	0					
ANR	706698	Identifier	TOKEN		706571	1					
ANR	706699	AssignmentExpression	"* TOKEN = "".dll_Ordinal_"""		706571	2		=			
ANR	706700	Identifier	TOKEN		706571	0					
ANR	706701	PrimaryExpression	""".dll_Ordinal_"""		706571	1					
ANR	706702	IdentifierDeclStatement	char * module = strdup ( reloc -> import -> name ) ;	1371:3:39438:39481	706571	1	True				
ANR	706703	IdentifierDecl	* module = strdup ( reloc -> import -> name )		706571	0					
ANR	706704	IdentifierDeclType	char *		706571	0					
ANR	706705	Identifier	module		706571	1					
ANR	706706	AssignmentExpression	* module = strdup ( reloc -> import -> name )		706571	2		=			
ANR	706707	Identifier	module		706571	0					
ANR	706708	CallExpression	strdup ( reloc -> import -> name )		706571	1					
ANR	706709	Callee	strdup		706571	0					
ANR	706710	Identifier	strdup		706571	0					
ANR	706711	ArgumentList	reloc -> import -> name		706571	1					
ANR	706712	Argument	reloc -> import -> name		706571	0					
ANR	706713	PtrMemberAccess	reloc -> import -> name		706571	0					
ANR	706714	PtrMemberAccess	reloc -> import		706571	0					
ANR	706715	Identifier	reloc		706571	0					
ANR	706716	Identifier	import		706571	1					
ANR	706717	Identifier	name		706571	1					
ANR	706718	IdentifierDeclStatement	"char * import = strstr ( module , TOKEN ) ;"	1372:3:39486:39523	706571	2	True				
ANR	706719	IdentifierDecl	"* import = strstr ( module , TOKEN )"		706571	0					
ANR	706720	IdentifierDeclType	char *		706571	0					
ANR	706721	Identifier	import		706571	1					
ANR	706722	AssignmentExpression	"* import = strstr ( module , TOKEN )"		706571	2		=			
ANR	706723	Identifier	import		706571	0					
ANR	706724	CallExpression	"strstr ( module , TOKEN )"		706571	1					
ANR	706725	Callee	strstr		706571	0					
ANR	706726	Identifier	strstr		706571	0					
ANR	706727	ArgumentList	module		706571	1					
ANR	706728	Argument	module		706571	0					
ANR	706729	Identifier	module		706571	0					
ANR	706730	Argument	TOKEN		706571	1					
ANR	706731	Identifier	TOKEN		706571	0					
ANR	706732	ExpressionStatement	"r_str_case ( module , false )"	1374:3:39529:39555	706571	3	True				
ANR	706733	CallExpression	"r_str_case ( module , false )"		706571	0					
ANR	706734	Callee	r_str_case		706571	0					
ANR	706735	Identifier	r_str_case		706571	0					
ANR	706736	ArgumentList	module		706571	1					
ANR	706737	Argument	module		706571	0					
ANR	706738	Identifier	module		706571	0					
ANR	706739	Argument	false		706571	1					
ANR	706740	Identifier	false		706571	0					
ANR	706741	IfStatement	if ( import )		706571	4					
ANR	706742	Condition	import	1375:7:39564:39569	706571	0	True				
ANR	706743	Identifier	import		706571	0					
ANR	706744	CompoundStatement		21:4:665:676	706571	1					
ANR	706745	IdentifierDeclStatement	char * filename = NULL ;	1376:4:39578:39599	706571	0	True				
ANR	706746	IdentifierDecl	* filename = NULL		706571	0					
ANR	706747	IdentifierDeclType	char *		706571	0					
ANR	706748	Identifier	filename		706571	1					
ANR	706749	AssignmentExpression	* filename = NULL		706571	2		=			
ANR	706750	Identifier	NULL		706571	0					
ANR	706751	Identifier	NULL		706571	1					
ANR	706752	IdentifierDeclStatement	int ordinal ;	1377:4:39605:39616	706571	1	True				
ANR	706753	IdentifierDecl	ordinal		706571	0					
ANR	706754	IdentifierDeclType	int		706571	0					
ANR	706755	Identifier	ordinal		706571	1					
ANR	706756	ExpressionStatement	* import = 0	1378:4:39622:39633	706571	2	True				
ANR	706757	AssignmentExpression	* import = 0		706571	0		=			
ANR	706758	UnaryOperationExpression	* import		706571	0					
ANR	706759	UnaryOperator	*		706571	0					
ANR	706760	Identifier	import		706571	1					
ANR	706761	PrimaryExpression	0		706571	1					
ANR	706762	ExpressionStatement	import += strlen ( TOKEN )	1379:4:39639:39663	706571	3	True				
ANR	706763	AssignmentExpression	import += strlen ( TOKEN )		706571	0		+=			
ANR	706764	Identifier	import		706571	0					
ANR	706765	CallExpression	strlen ( TOKEN )		706571	1					
ANR	706766	Callee	strlen		706571	0					
ANR	706767	Identifier	strlen		706571	0					
ANR	706768	ArgumentList	TOKEN		706571	1					
ANR	706769	Argument	TOKEN		706571	0					
ANR	706770	Identifier	TOKEN		706571	0					
ANR	706771	ExpressionStatement	ordinal = atoi ( import )	1380:4:39669:39692	706571	4	True				
ANR	706772	AssignmentExpression	ordinal = atoi ( import )		706571	0		=			
ANR	706773	Identifier	ordinal		706571	0					
ANR	706774	CallExpression	atoi ( import )		706571	1					
ANR	706775	Callee	atoi		706571	0					
ANR	706776	Identifier	atoi		706571	0					
ANR	706777	ArgumentList	import		706571	1					
ANR	706778	Argument	import		706571	0					
ANR	706779	Identifier	import		706571	0					
ANR	706780	IfStatement	"if ( ! * sdb_module || strcmp ( module , * sdb_module ) )"		706571	5					
ANR	706781	Condition	"! * sdb_module || strcmp ( module , * sdb_module )"	1381:8:39702:39745	706571	0	True				
ANR	706782	OrExpression	"! * sdb_module || strcmp ( module , * sdb_module )"		706571	0		||			
ANR	706783	UnaryOperationExpression	! * sdb_module		706571	0					
ANR	706784	UnaryOperator	!		706571	0					
ANR	706785	UnaryOperationExpression	* sdb_module		706571	1					
ANR	706786	UnaryOperator	*		706571	0					
ANR	706787	Identifier	sdb_module		706571	1					
ANR	706788	CallExpression	"strcmp ( module , * sdb_module )"		706571	1					
ANR	706789	Callee	strcmp		706571	0					
ANR	706790	Identifier	strcmp		706571	0					
ANR	706791	ArgumentList	module		706571	1					
ANR	706792	Argument	module		706571	0					
ANR	706793	Identifier	module		706571	0					
ANR	706794	Argument	* sdb_module		706571	1					
ANR	706795	UnaryOperationExpression	* sdb_module		706571	0					
ANR	706796	UnaryOperator	*		706571	0					
ANR	706797	Identifier	sdb_module		706571	1					
ANR	706798	CompoundStatement		25:54:808:808	706571	1					
ANR	706799	ExpressionStatement	sdb_free ( * db )	1382:5:39755:39769	706571	0	True				
ANR	706800	CallExpression	sdb_free ( * db )		706571	0					
ANR	706801	Callee	sdb_free		706571	0					
ANR	706802	Identifier	sdb_free		706571	0					
ANR	706803	ArgumentList	* db		706571	1					
ANR	706804	Argument	* db		706571	0					
ANR	706805	UnaryOperationExpression	* db		706571	0					
ANR	706806	UnaryOperator	*		706571	0					
ANR	706807	Identifier	db		706571	1					
ANR	706808	ExpressionStatement	* db = NULL	1383:5:39776:39786	706571	1	True				
ANR	706809	AssignmentExpression	* db = NULL		706571	0		=			
ANR	706810	UnaryOperationExpression	* db		706571	0					
ANR	706811	UnaryOperator	*		706571	0					
ANR	706812	Identifier	db		706571	1					
ANR	706813	Identifier	NULL		706571	1					
ANR	706814	ExpressionStatement	free ( * sdb_module )	1384:5:39793:39811	706571	2	True				
ANR	706815	CallExpression	free ( * sdb_module )		706571	0					
ANR	706816	Callee	free		706571	0					
ANR	706817	Identifier	free		706571	0					
ANR	706818	ArgumentList	* sdb_module		706571	1					
ANR	706819	Argument	* sdb_module		706571	0					
ANR	706820	UnaryOperationExpression	* sdb_module		706571	0					
ANR	706821	UnaryOperator	*		706571	0					
ANR	706822	Identifier	sdb_module		706571	1					
ANR	706823	ExpressionStatement	* sdb_module = strdup ( module )	1385:5:39818:39847	706571	3	True				
ANR	706824	AssignmentExpression	* sdb_module = strdup ( module )		706571	0		=			
ANR	706825	UnaryOperationExpression	* sdb_module		706571	0					
ANR	706826	UnaryOperator	*		706571	0					
ANR	706827	Identifier	sdb_module		706571	1					
ANR	706828	CallExpression	strdup ( module )		706571	1					
ANR	706829	Callee	strdup		706571	0					
ANR	706830	Identifier	strdup		706571	0					
ANR	706831	ArgumentList	module		706571	1					
ANR	706832	Argument	module		706571	0					
ANR	706833	Identifier	module		706571	0					
ANR	706834	ExpressionStatement	"filename = sdb_fmt ( ""%s.sdb"" , module )"	1387:5:39882:39919	706571	4	True				
ANR	706835	AssignmentExpression	"filename = sdb_fmt ( ""%s.sdb"" , module )"		706571	0		=			
ANR	706836	Identifier	filename		706571	0					
ANR	706837	CallExpression	"sdb_fmt ( ""%s.sdb"" , module )"		706571	1					
ANR	706838	Callee	sdb_fmt		706571	0					
ANR	706839	Identifier	sdb_fmt		706571	0					
ANR	706840	ArgumentList	"""%s.sdb"""		706571	1					
ANR	706841	Argument	"""%s.sdb"""		706571	0					
ANR	706842	PrimaryExpression	"""%s.sdb"""		706571	0					
ANR	706843	Argument	module		706571	1					
ANR	706844	Identifier	module		706571	0					
ANR	706845	ExpressionStatement	"r_str_case ( filename , false )"	1388:5:39926:39954	706571	5	True				
ANR	706846	CallExpression	"r_str_case ( filename , false )"		706571	0					
ANR	706847	Callee	r_str_case		706571	0					
ANR	706848	Identifier	r_str_case		706571	0					
ANR	706849	ArgumentList	filename		706571	1					
ANR	706850	Argument	filename		706571	0					
ANR	706851	Identifier	filename		706571	0					
ANR	706852	Argument	false		706571	1					
ANR	706853	Identifier	false		706571	0					
ANR	706854	IfStatement	if ( r_file_exists ( filename ) )		706571	6					
ANR	706855	Condition	r_file_exists ( filename )	1389:9:39965:39988	706571	0	True				
ANR	706856	CallExpression	r_file_exists ( filename )		706571	0					
ANR	706857	Callee	r_file_exists		706571	0					
ANR	706858	Identifier	r_file_exists		706571	0					
ANR	706859	ArgumentList	filename		706571	1					
ANR	706860	Argument	filename		706571	0					
ANR	706861	Identifier	filename		706571	0					
ANR	706862	CompoundStatement		33:35:1051:1051	706571	1					
ANR	706863	ExpressionStatement	"* db = sdb_new ( NULL , filename , 0 )"	1390:6:39999:40032	706571	0	True				
ANR	706864	AssignmentExpression	"* db = sdb_new ( NULL , filename , 0 )"		706571	0		=			
ANR	706865	UnaryOperationExpression	* db		706571	0					
ANR	706866	UnaryOperator	*		706571	0					
ANR	706867	Identifier	db		706571	1					
ANR	706868	CallExpression	"sdb_new ( NULL , filename , 0 )"		706571	1					
ANR	706869	Callee	sdb_new		706571	0					
ANR	706870	Identifier	sdb_new		706571	0					
ANR	706871	ArgumentList	NULL		706571	1					
ANR	706872	Argument	NULL		706571	0					
ANR	706873	Identifier	NULL		706571	0					
ANR	706874	Argument	filename		706571	1					
ANR	706875	Identifier	filename		706571	0					
ANR	706876	Argument	0		706571	2					
ANR	706877	PrimaryExpression	0		706571	0					
ANR	706878	ElseStatement	else		706571	0					
ANR	706879	CompoundStatement		36:6:1114:1157	706571	0					
ANR	706880	IdentifierDeclStatement	const char * dirPrefix = r_sys_prefix ( NULL ) ;	1392:6:40054:40097	706571	0	True				
ANR	706881	IdentifierDecl	* dirPrefix = r_sys_prefix ( NULL )		706571	0					
ANR	706882	IdentifierDeclType	const char *		706571	0					
ANR	706883	Identifier	dirPrefix		706571	1					
ANR	706884	AssignmentExpression	* dirPrefix = r_sys_prefix ( NULL )		706571	2		=			
ANR	706885	Identifier	dirPrefix		706571	0					
ANR	706886	CallExpression	r_sys_prefix ( NULL )		706571	1					
ANR	706887	Callee	r_sys_prefix		706571	0					
ANR	706888	Identifier	r_sys_prefix		706571	0					
ANR	706889	ArgumentList	NULL		706571	1					
ANR	706890	Argument	NULL		706571	0					
ANR	706891	Identifier	NULL		706571	0					
ANR	706892	ExpressionStatement	"filename = sdb_fmt ( R_JOIN_4_PATHS ( ""%s"" , R2_SDB_FORMAT , ""dll"" , ""%s.sdb"" ) , dirPrefix , module )"	1393:6:40105:40205	706571	1	True				
ANR	706893	AssignmentExpression	"filename = sdb_fmt ( R_JOIN_4_PATHS ( ""%s"" , R2_SDB_FORMAT , ""dll"" , ""%s.sdb"" ) , dirPrefix , module )"		706571	0		=			
ANR	706894	Identifier	filename		706571	0					
ANR	706895	CallExpression	"sdb_fmt ( R_JOIN_4_PATHS ( ""%s"" , R2_SDB_FORMAT , ""dll"" , ""%s.sdb"" ) , dirPrefix , module )"		706571	1					
ANR	706896	Callee	sdb_fmt		706571	0					
ANR	706897	Identifier	sdb_fmt		706571	0					
ANR	706898	ArgumentList	"R_JOIN_4_PATHS ( ""%s"" , R2_SDB_FORMAT , ""dll"" , ""%s.sdb"" )"		706571	1					
ANR	706899	Argument	"R_JOIN_4_PATHS ( ""%s"" , R2_SDB_FORMAT , ""dll"" , ""%s.sdb"" )"		706571	0					
ANR	706900	CallExpression	"R_JOIN_4_PATHS ( ""%s"" , R2_SDB_FORMAT , ""dll"" , ""%s.sdb"" )"		706571	0					
ANR	706901	Callee	R_JOIN_4_PATHS		706571	0					
ANR	706902	Identifier	R_JOIN_4_PATHS		706571	0					
ANR	706903	ArgumentList	"""%s"""		706571	1					
ANR	706904	Argument	"""%s"""		706571	0					
ANR	706905	PrimaryExpression	"""%s"""		706571	0					
ANR	706906	Argument	R2_SDB_FORMAT		706571	1					
ANR	706907	Identifier	R2_SDB_FORMAT		706571	0					
ANR	706908	Argument	"""dll"""		706571	2					
ANR	706909	PrimaryExpression	"""dll"""		706571	0					
ANR	706910	Argument	"""%s.sdb"""		706571	3					
ANR	706911	PrimaryExpression	"""%s.sdb"""		706571	0					
ANR	706912	Argument	dirPrefix		706571	1					
ANR	706913	Identifier	dirPrefix		706571	0					
ANR	706914	Argument	module		706571	2					
ANR	706915	Identifier	module		706571	0					
ANR	706916	IfStatement	if ( r_file_exists ( filename ) )		706571	2					
ANR	706917	Condition	r_file_exists ( filename )	1395:10:40217:40240	706571	0	True				
ANR	706918	CallExpression	r_file_exists ( filename )		706571	0					
ANR	706919	Callee	r_file_exists		706571	0					
ANR	706920	Identifier	r_file_exists		706571	0					
ANR	706921	ArgumentList	filename		706571	1					
ANR	706922	Argument	filename		706571	0					
ANR	706923	Identifier	filename		706571	0					
ANR	706924	CompoundStatement		39:36:1303:1303	706571	1					
ANR	706925	ExpressionStatement	"* db = sdb_new ( NULL , filename , 0 )"	1396:7:40252:40285	706571	0	True				
ANR	706926	AssignmentExpression	"* db = sdb_new ( NULL , filename , 0 )"		706571	0		=			
ANR	706927	UnaryOperationExpression	* db		706571	0					
ANR	706928	UnaryOperator	*		706571	0					
ANR	706929	Identifier	db		706571	1					
ANR	706930	CallExpression	"sdb_new ( NULL , filename , 0 )"		706571	1					
ANR	706931	Callee	sdb_new		706571	0					
ANR	706932	Identifier	sdb_new		706571	0					
ANR	706933	ArgumentList	NULL		706571	1					
ANR	706934	Argument	NULL		706571	0					
ANR	706935	Identifier	NULL		706571	0					
ANR	706936	Argument	filename		706571	1					
ANR	706937	Identifier	filename		706571	0					
ANR	706938	Argument	0		706571	2					
ANR	706939	PrimaryExpression	0		706571	0					
ANR	706940	IfStatement	if ( * db )		706571	6					
ANR	706941	Condition	* db	1400:8:40316:40318	706571	0	True				
ANR	706942	UnaryOperationExpression	* db		706571	0					
ANR	706943	UnaryOperator	*		706571	0					
ANR	706944	Identifier	db		706571	1					
ANR	706945	CompoundStatement		46:5:1441:1504	706571	1					
ANR	706946	IdentifierDeclStatement	"char * symname = resolveModuleOrdinal ( * db , module , ordinal - 1 ) ;"	1402:5:40381:40444	706571	0	True				
ANR	706947	IdentifierDecl	"* symname = resolveModuleOrdinal ( * db , module , ordinal - 1 )"		706571	0					
ANR	706948	IdentifierDeclType	char *		706571	0					
ANR	706949	Identifier	symname		706571	1					
ANR	706950	AssignmentExpression	"* symname = resolveModuleOrdinal ( * db , module , ordinal - 1 )"		706571	2		=			
ANR	706951	Identifier	symname		706571	0					
ANR	706952	CallExpression	"resolveModuleOrdinal ( * db , module , ordinal - 1 )"		706571	1					
ANR	706953	Callee	resolveModuleOrdinal		706571	0					
ANR	706954	Identifier	resolveModuleOrdinal		706571	0					
ANR	706955	ArgumentList	* db		706571	1					
ANR	706956	Argument	* db		706571	0					
ANR	706957	UnaryOperationExpression	* db		706571	0					
ANR	706958	UnaryOperator	*		706571	0					
ANR	706959	Identifier	db		706571	1					
ANR	706960	Argument	module		706571	1					
ANR	706961	Identifier	module		706571	0					
ANR	706962	Argument	ordinal - 1		706571	2					
ANR	706963	AdditiveExpression	ordinal - 1		706571	0		-			
ANR	706964	Identifier	ordinal		706571	0					
ANR	706965	PrimaryExpression	1		706571	1					
ANR	706966	IfStatement	if ( symname )		706571	1					
ANR	706967	Condition	symname	1403:9:40472:40478	706571	0	True				
ANR	706968	Identifier	symname		706571	0					
ANR	706969	CompoundStatement		47:18:1541:1541	706571	1					
ANR	706970	IfStatement	if ( r -> bin -> prefix )		706571	0					
ANR	706971	Condition	r -> bin -> prefix	1404:10:40493:40506	706571	0	True				
ANR	706972	PtrMemberAccess	r -> bin -> prefix		706571	0					
ANR	706973	PtrMemberAccess	r -> bin		706571	0					
ANR	706974	Identifier	r		706571	0					
ANR	706975	Identifier	bin		706571	1					
ANR	706976	Identifier	prefix		706571	1					
ANR	706977	CompoundStatement		48:26:1569:1569	706571	1					
ANR	706978	ExpressionStatement	"reloc -> import -> name = r_str_newf ( ""%s.%s.%s"" , r -> bin -> prefix , module , symname )"	1405:7:40518:40604	706571	0	True				
ANR	706979	AssignmentExpression	"reloc -> import -> name = r_str_newf ( ""%s.%s.%s"" , r -> bin -> prefix , module , symname )"		706571	0		=			
ANR	706980	PtrMemberAccess	reloc -> import -> name		706571	0					
ANR	706981	PtrMemberAccess	reloc -> import		706571	0					
ANR	706982	Identifier	reloc		706571	0					
ANR	706983	Identifier	import		706571	1					
ANR	706984	Identifier	name		706571	1					
ANR	706985	CallExpression	"r_str_newf ( ""%s.%s.%s"" , r -> bin -> prefix , module , symname )"		706571	1					
ANR	706986	Callee	r_str_newf		706571	0					
ANR	706987	Identifier	r_str_newf		706571	0					
ANR	706988	ArgumentList	"""%s.%s.%s"""		706571	1					
ANR	706989	Argument	"""%s.%s.%s"""		706571	0					
ANR	706990	PrimaryExpression	"""%s.%s.%s"""		706571	0					
ANR	706991	Argument	r -> bin -> prefix		706571	1					
ANR	706992	PtrMemberAccess	r -> bin -> prefix		706571	0					
ANR	706993	PtrMemberAccess	r -> bin		706571	0					
ANR	706994	Identifier	r		706571	0					
ANR	706995	Identifier	bin		706571	1					
ANR	706996	Identifier	prefix		706571	1					
ANR	706997	Argument	module		706571	2					
ANR	706998	Identifier	module		706571	0					
ANR	706999	Argument	symname		706571	3					
ANR	707000	Identifier	symname		706571	0					
ANR	707001	ElseStatement	else		706571	0					
ANR	707002	CompoundStatement		51:13:1679:1679	706571	0					
ANR	707003	ExpressionStatement	"reloc -> import -> name = r_str_newf ( ""%s.%s"" , module , symname )"	1408:7:40628:40695	706571	0	True				
ANR	707004	AssignmentExpression	"reloc -> import -> name = r_str_newf ( ""%s.%s"" , module , symname )"		706571	0		=			
ANR	707005	PtrMemberAccess	reloc -> import -> name		706571	0					
ANR	707006	PtrMemberAccess	reloc -> import		706571	0					
ANR	707007	Identifier	reloc		706571	0					
ANR	707008	Identifier	import		706571	1					
ANR	707009	Identifier	name		706571	1					
ANR	707010	CallExpression	"r_str_newf ( ""%s.%s"" , module , symname )"		706571	1					
ANR	707011	Callee	r_str_newf		706571	0					
ANR	707012	Identifier	r_str_newf		706571	0					
ANR	707013	ArgumentList	"""%s.%s"""		706571	1					
ANR	707014	Argument	"""%s.%s"""		706571	0					
ANR	707015	PrimaryExpression	"""%s.%s"""		706571	0					
ANR	707016	Argument	module		706571	1					
ANR	707017	Identifier	module		706571	0					
ANR	707018	Argument	symname		706571	2					
ANR	707019	Identifier	symname		706571	0					
ANR	707020	ExpressionStatement	R_FREE ( symname )	1411:6:40711:40727	706571	1	True				
ANR	707021	CallExpression	R_FREE ( symname )		706571	0					
ANR	707022	Callee	R_FREE		706571	0					
ANR	707023	Identifier	R_FREE		706571	0					
ANR	707024	ArgumentList	symname		706571	1					
ANR	707025	Argument	symname		706571	0					
ANR	707026	Identifier	symname		706571	0					
ANR	707027	ExpressionStatement	free ( module )	1415:3:40750:40763	706571	5	True				
ANR	707028	CallExpression	free ( module )		706571	0					
ANR	707029	Callee	free		706571	0					
ANR	707030	Identifier	free		706571	0					
ANR	707031	ArgumentList	module		706571	1					
ANR	707032	Argument	module		706571	0					
ANR	707033	Identifier	module		706571	0					
ANR	707034	ExpressionStatement	"r_anal_hint_set_size ( r -> anal , reloc -> vaddr , 4 )"	1416:3:40768:40815	706571	6	True				
ANR	707035	CallExpression	"r_anal_hint_set_size ( r -> anal , reloc -> vaddr , 4 )"		706571	0					
ANR	707036	Callee	r_anal_hint_set_size		706571	0					
ANR	707037	Identifier	r_anal_hint_set_size		706571	0					
ANR	707038	ArgumentList	r -> anal		706571	1					
ANR	707039	Argument	r -> anal		706571	0					
ANR	707040	PtrMemberAccess	r -> anal		706571	0					
ANR	707041	Identifier	r		706571	0					
ANR	707042	Identifier	anal		706571	1					
ANR	707043	Argument	reloc -> vaddr		706571	1					
ANR	707044	PtrMemberAccess	reloc -> vaddr		706571	0					
ANR	707045	Identifier	reloc		706571	0					
ANR	707046	Identifier	vaddr		706571	1					
ANR	707047	Argument	4		706571	2					
ANR	707048	PrimaryExpression	4		706571	0					
ANR	707049	ExpressionStatement	"r_meta_add ( r -> anal , R_META_TYPE_DATA , reloc -> vaddr , reloc -> vaddr + 4 , NULL )"	1417:3:40820:40894	706571	7	True				
ANR	707050	CallExpression	"r_meta_add ( r -> anal , R_META_TYPE_DATA , reloc -> vaddr , reloc -> vaddr + 4 , NULL )"		706571	0					
ANR	707051	Callee	r_meta_add		706571	0					
ANR	707052	Identifier	r_meta_add		706571	0					
ANR	707053	ArgumentList	r -> anal		706571	1					
ANR	707054	Argument	r -> anal		706571	0					
ANR	707055	PtrMemberAccess	r -> anal		706571	0					
ANR	707056	Identifier	r		706571	0					
ANR	707057	Identifier	anal		706571	1					
ANR	707058	Argument	R_META_TYPE_DATA		706571	1					
ANR	707059	Identifier	R_META_TYPE_DATA		706571	0					
ANR	707060	Argument	reloc -> vaddr		706571	2					
ANR	707061	PtrMemberAccess	reloc -> vaddr		706571	0					
ANR	707062	Identifier	reloc		706571	0					
ANR	707063	Identifier	vaddr		706571	1					
ANR	707064	Argument	reloc -> vaddr + 4		706571	3					
ANR	707065	AdditiveExpression	reloc -> vaddr + 4		706571	0		+			
ANR	707066	PtrMemberAccess	reloc -> vaddr		706571	0					
ANR	707067	Identifier	reloc		706571	0					
ANR	707068	Identifier	vaddr		706571	1					
ANR	707069	PrimaryExpression	4		706571	1					
ANR	707070	Argument	NULL		706571	4					
ANR	707071	Identifier	NULL		706571	0					
ANR	707072	ExpressionStatement	reloc_name = reloc -> import -> name	1419:2:40902:40934	706571	3	True				
ANR	707073	AssignmentExpression	reloc_name = reloc -> import -> name		706571	0		=			
ANR	707074	Identifier	reloc_name		706571	0					
ANR	707075	PtrMemberAccess	reloc -> import -> name		706571	1					
ANR	707076	PtrMemberAccess	reloc -> import		706571	0					
ANR	707077	Identifier	reloc		706571	0					
ANR	707078	Identifier	import		706571	1					
ANR	707079	Identifier	name		706571	1					
ANR	707080	IfStatement	if ( r -> bin -> prefix )		706571	4					
ANR	707081	Condition	r -> bin -> prefix	1420:6:40942:40955	706571	0	True				
ANR	707082	PtrMemberAccess	r -> bin -> prefix		706571	0					
ANR	707083	PtrMemberAccess	r -> bin		706571	0					
ANR	707084	Identifier	r		706571	0					
ANR	707085	Identifier	bin		706571	1					
ANR	707086	Identifier	prefix		706571	1					
ANR	707087	CompoundStatement		64:22:2018:2018	706571	1					
ANR	707088	ExpressionStatement	"snprintf ( str , R_FLAG_NAME_SIZE , ""%s.reloc.%s"" , r -> bin -> prefix , reloc_name )"	1421:3:40963:41038	706571	0	True				
ANR	707089	CallExpression	"snprintf ( str , R_FLAG_NAME_SIZE , ""%s.reloc.%s"" , r -> bin -> prefix , reloc_name )"		706571	0					
ANR	707090	Callee	snprintf		706571	0					
ANR	707091	Identifier	snprintf		706571	0					
ANR	707092	ArgumentList	str		706571	1					
ANR	707093	Argument	str		706571	0					
ANR	707094	Identifier	str		706571	0					
ANR	707095	Argument	R_FLAG_NAME_SIZE		706571	1					
ANR	707096	Identifier	R_FLAG_NAME_SIZE		706571	0					
ANR	707097	Argument	"""%s.reloc.%s"""		706571	2					
ANR	707098	PrimaryExpression	"""%s.reloc.%s"""		706571	0					
ANR	707099	Argument	r -> bin -> prefix		706571	3					
ANR	707100	PtrMemberAccess	r -> bin -> prefix		706571	0					
ANR	707101	PtrMemberAccess	r -> bin		706571	0					
ANR	707102	Identifier	r		706571	0					
ANR	707103	Identifier	bin		706571	1					
ANR	707104	Identifier	prefix		706571	1					
ANR	707105	Argument	reloc_name		706571	4					
ANR	707106	Identifier	reloc_name		706571	0					
ANR	707107	ElseStatement	else		706571	0					
ANR	707108	CompoundStatement		66:9:2109:2109	706571	0					
ANR	707109	ExpressionStatement	"snprintf ( str , R_FLAG_NAME_SIZE , ""reloc.%s"" , reloc_name )"	1423:3:41054:41110	706571	0	True				
ANR	707110	CallExpression	"snprintf ( str , R_FLAG_NAME_SIZE , ""reloc.%s"" , reloc_name )"		706571	0					
ANR	707111	Callee	snprintf		706571	0					
ANR	707112	Identifier	snprintf		706571	0					
ANR	707113	ArgumentList	str		706571	1					
ANR	707114	Argument	str		706571	0					
ANR	707115	Identifier	str		706571	0					
ANR	707116	Argument	R_FLAG_NAME_SIZE		706571	1					
ANR	707117	Identifier	R_FLAG_NAME_SIZE		706571	0					
ANR	707118	Argument	"""reloc.%s"""		706571	2					
ANR	707119	PrimaryExpression	"""reloc.%s"""		706571	0					
ANR	707120	Argument	reloc_name		706571	3					
ANR	707121	Identifier	reloc_name		706571	0					
ANR	707122	IfStatement	if ( bin_demangle )		706571	5					
ANR	707123	Condition	bin_demangle	1425:6:41122:41133	706571	0	True				
ANR	707124	Identifier	bin_demangle		706571	0					
ANR	707125	CompoundStatement		69:20:2196:2196	706571	1					
ANR	707126	ExpressionStatement	"demname = r_bin_demangle ( r -> bin -> cur , lang , str , addr , keep_lib )"	1426:3:41141:41206	706571	0	True				
ANR	707127	AssignmentExpression	"demname = r_bin_demangle ( r -> bin -> cur , lang , str , addr , keep_lib )"		706571	0		=			
ANR	707128	Identifier	demname		706571	0					
ANR	707129	CallExpression	"r_bin_demangle ( r -> bin -> cur , lang , str , addr , keep_lib )"		706571	1					
ANR	707130	Callee	r_bin_demangle		706571	0					
ANR	707131	Identifier	r_bin_demangle		706571	0					
ANR	707132	ArgumentList	r -> bin -> cur		706571	1					
ANR	707133	Argument	r -> bin -> cur		706571	0					
ANR	707134	PtrMemberAccess	r -> bin -> cur		706571	0					
ANR	707135	PtrMemberAccess	r -> bin		706571	0					
ANR	707136	Identifier	r		706571	0					
ANR	707137	Identifier	bin		706571	1					
ANR	707138	Identifier	cur		706571	1					
ANR	707139	Argument	lang		706571	1					
ANR	707140	Identifier	lang		706571	0					
ANR	707141	Argument	str		706571	2					
ANR	707142	Identifier	str		706571	0					
ANR	707143	Argument	addr		706571	3					
ANR	707144	Identifier	addr		706571	0					
ANR	707145	Argument	keep_lib		706571	4					
ANR	707146	Identifier	keep_lib		706571	0					
ANR	707147	IfStatement	if ( demname )		706571	1					
ANR	707148	Condition	demname	1427:7:41215:41221	706571	0	True				
ANR	707149	Identifier	demname		706571	0					
ANR	707150	CompoundStatement		71:16:2284:2284	706571	1					
ANR	707151	ExpressionStatement	"snprintf ( str , R_FLAG_NAME_SIZE , ""reloc.%s"" , demname )"	1428:4:41230:41283	706571	0	True				
ANR	707152	CallExpression	"snprintf ( str , R_FLAG_NAME_SIZE , ""reloc.%s"" , demname )"		706571	0					
ANR	707153	Callee	snprintf		706571	0					
ANR	707154	Identifier	snprintf		706571	0					
ANR	707155	ArgumentList	str		706571	1					
ANR	707156	Argument	str		706571	0					
ANR	707157	Identifier	str		706571	0					
ANR	707158	Argument	R_FLAG_NAME_SIZE		706571	1					
ANR	707159	Identifier	R_FLAG_NAME_SIZE		706571	0					
ANR	707160	Argument	"""reloc.%s"""		706571	2					
ANR	707161	PrimaryExpression	"""reloc.%s"""		706571	0					
ANR	707162	Argument	demname		706571	3					
ANR	707163	Identifier	demname		706571	0					
ANR	707164	ExpressionStatement	"r_name_filter ( str , 0 )"	1431:2:41296:41318	706571	6	True				
ANR	707165	CallExpression	"r_name_filter ( str , 0 )"		706571	0					
ANR	707166	Callee	r_name_filter		706571	0					
ANR	707167	Identifier	r_name_filter		706571	0					
ANR	707168	ArgumentList	str		706571	1					
ANR	707169	Argument	str		706571	0					
ANR	707170	Identifier	str		706571	0					
ANR	707171	Argument	0		706571	1					
ANR	707172	PrimaryExpression	0		706571	0					
ANR	707173	ExpressionStatement	"fi = r_flag_set ( r -> flags , str , addr , bin_reloc_size ( reloc ) )"	1432:2:41322:41383	706571	7	True				
ANR	707174	AssignmentExpression	"fi = r_flag_set ( r -> flags , str , addr , bin_reloc_size ( reloc ) )"		706571	0		=			
ANR	707175	Identifier	fi		706571	0					
ANR	707176	CallExpression	"r_flag_set ( r -> flags , str , addr , bin_reloc_size ( reloc ) )"		706571	1					
ANR	707177	Callee	r_flag_set		706571	0					
ANR	707178	Identifier	r_flag_set		706571	0					
ANR	707179	ArgumentList	r -> flags		706571	1					
ANR	707180	Argument	r -> flags		706571	0					
ANR	707181	PtrMemberAccess	r -> flags		706571	0					
ANR	707182	Identifier	r		706571	0					
ANR	707183	Identifier	flags		706571	1					
ANR	707184	Argument	str		706571	1					
ANR	707185	Identifier	str		706571	0					
ANR	707186	Argument	addr		706571	2					
ANR	707187	Identifier	addr		706571	0					
ANR	707188	Argument	bin_reloc_size ( reloc )		706571	3					
ANR	707189	CallExpression	bin_reloc_size ( reloc )		706571	0					
ANR	707190	Callee	bin_reloc_size		706571	0					
ANR	707191	Identifier	bin_reloc_size		706571	0					
ANR	707192	ArgumentList	reloc		706571	1					
ANR	707193	Argument	reloc		706571	0					
ANR	707194	Identifier	reloc		706571	0					
ANR	707195	IfStatement	if ( demname )		706571	8					
ANR	707196	Condition	demname	1433:6:41391:41397	706571	0	True				
ANR	707197	Identifier	demname		706571	0					
ANR	707198	CompoundStatement		78:3:2465:2479	706571	1					
ANR	707199	IdentifierDeclStatement	char * realname ;	1434:3:41405:41419	706571	0	True				
ANR	707200	IdentifierDecl	* realname		706571	0					
ANR	707201	IdentifierDeclType	char *		706571	0					
ANR	707202	Identifier	realname		706571	1					
ANR	707203	IfStatement	if ( r -> bin -> prefix )		706571	1					
ANR	707204	Condition	r -> bin -> prefix	1435:7:41428:41441	706571	0	True				
ANR	707205	PtrMemberAccess	r -> bin -> prefix		706571	0					
ANR	707206	PtrMemberAccess	r -> bin		706571	0					
ANR	707207	Identifier	r		706571	0					
ANR	707208	Identifier	bin		706571	1					
ANR	707209	Identifier	prefix		706571	1					
ANR	707210	CompoundStatement		79:23:2504:2504	706571	1					
ANR	707211	ExpressionStatement	"realname = sdb_fmt ( ""%s.reloc.%s"" , r -> bin -> prefix , demname )"	1436:4:41450:41509	706571	0	True				
ANR	707212	AssignmentExpression	"realname = sdb_fmt ( ""%s.reloc.%s"" , r -> bin -> prefix , demname )"		706571	0		=			
ANR	707213	Identifier	realname		706571	0					
ANR	707214	CallExpression	"sdb_fmt ( ""%s.reloc.%s"" , r -> bin -> prefix , demname )"		706571	1					
ANR	707215	Callee	sdb_fmt		706571	0					
ANR	707216	Identifier	sdb_fmt		706571	0					
ANR	707217	ArgumentList	"""%s.reloc.%s"""		706571	1					
ANR	707218	Argument	"""%s.reloc.%s"""		706571	0					
ANR	707219	PrimaryExpression	"""%s.reloc.%s"""		706571	0					
ANR	707220	Argument	r -> bin -> prefix		706571	1					
ANR	707221	PtrMemberAccess	r -> bin -> prefix		706571	0					
ANR	707222	PtrMemberAccess	r -> bin		706571	0					
ANR	707223	Identifier	r		706571	0					
ANR	707224	Identifier	bin		706571	1					
ANR	707225	Identifier	prefix		706571	1					
ANR	707226	Argument	demname		706571	2					
ANR	707227	Identifier	demname		706571	0					
ANR	707228	ElseStatement	else		706571	0					
ANR	707229	CompoundStatement		81:10:2581:2581	706571	0					
ANR	707230	ExpressionStatement	"realname = sdb_fmt ( ""reloc.%s"" , demname )"	1438:4:41527:41567	706571	0	True				
ANR	707231	AssignmentExpression	"realname = sdb_fmt ( ""reloc.%s"" , demname )"		706571	0		=			
ANR	707232	Identifier	realname		706571	0					
ANR	707233	CallExpression	"sdb_fmt ( ""reloc.%s"" , demname )"		706571	1					
ANR	707234	Callee	sdb_fmt		706571	0					
ANR	707235	Identifier	sdb_fmt		706571	0					
ANR	707236	ArgumentList	"""reloc.%s"""		706571	1					
ANR	707237	Argument	"""reloc.%s"""		706571	0					
ANR	707238	PrimaryExpression	"""reloc.%s"""		706571	0					
ANR	707239	Argument	demname		706571	1					
ANR	707240	Identifier	demname		706571	0					
ANR	707241	ExpressionStatement	"r_flag_item_set_realname ( fi , realname )"	1440:3:41577:41616	706571	2	True				
ANR	707242	CallExpression	"r_flag_item_set_realname ( fi , realname )"		706571	0					
ANR	707243	Callee	r_flag_item_set_realname		706571	0					
ANR	707244	Identifier	r_flag_item_set_realname		706571	0					
ANR	707245	ArgumentList	fi		706571	1					
ANR	707246	Argument	fi		706571	0					
ANR	707247	Identifier	fi		706571	0					
ANR	707248	Argument	realname		706571	1					
ANR	707249	Identifier	realname		706571	0					
ANR	707250	ElseStatement	else		706571	0					
ANR	707251	CompoundStatement		87:2:2694:2744	706571	0					
ANR	707252	IdentifierDeclStatement	"char * reloc_name = get_reloc_name ( r , reloc , addr ) ;"	1443:2:41634:41684	706571	0	True				
ANR	707253	IdentifierDecl	"* reloc_name = get_reloc_name ( r , reloc , addr )"		706571	0					
ANR	707254	IdentifierDeclType	char *		706571	0					
ANR	707255	Identifier	reloc_name		706571	1					
ANR	707256	AssignmentExpression	"* reloc_name = get_reloc_name ( r , reloc , addr )"		706571	2		=			
ANR	707257	Identifier	reloc_name		706571	0					
ANR	707258	CallExpression	"get_reloc_name ( r , reloc , addr )"		706571	1					
ANR	707259	Callee	get_reloc_name		706571	0					
ANR	707260	Identifier	get_reloc_name		706571	0					
ANR	707261	ArgumentList	r		706571	1					
ANR	707262	Argument	r		706571	0					
ANR	707263	Identifier	r		706571	0					
ANR	707264	Argument	reloc		706571	1					
ANR	707265	Identifier	reloc		706571	0					
ANR	707266	Argument	addr		706571	2					
ANR	707267	Identifier	addr		706571	0					
ANR	707268	IfStatement	if ( reloc_name )		706571	1					
ANR	707269	Condition	reloc_name	1444:6:41692:41701	706571	0	True				
ANR	707270	Identifier	reloc_name		706571	0					
ANR	707271	CompoundStatement		88:18:2764:2764	706571	1					
ANR	707272	ExpressionStatement	"r_flag_set ( r -> flags , reloc_name , addr , bin_reloc_size ( reloc ) )"	1445:3:41709:41772	706571	0	True				
ANR	707273	CallExpression	"r_flag_set ( r -> flags , reloc_name , addr , bin_reloc_size ( reloc ) )"		706571	0					
ANR	707274	Callee	r_flag_set		706571	0					
ANR	707275	Identifier	r_flag_set		706571	0					
ANR	707276	ArgumentList	r -> flags		706571	1					
ANR	707277	Argument	r -> flags		706571	0					
ANR	707278	PtrMemberAccess	r -> flags		706571	0					
ANR	707279	Identifier	r		706571	0					
ANR	707280	Identifier	flags		706571	1					
ANR	707281	Argument	reloc_name		706571	1					
ANR	707282	Identifier	reloc_name		706571	0					
ANR	707283	Argument	addr		706571	2					
ANR	707284	Identifier	addr		706571	0					
ANR	707285	Argument	bin_reloc_size ( reloc )		706571	3					
ANR	707286	CallExpression	bin_reloc_size ( reloc )		706571	0					
ANR	707287	Callee	bin_reloc_size		706571	0					
ANR	707288	Identifier	bin_reloc_size		706571	0					
ANR	707289	ArgumentList	reloc		706571	1					
ANR	707290	Argument	reloc		706571	0					
ANR	707291	Identifier	reloc		706571	0					
ANR	707292	ElseStatement	else		706571	0					
ANR	707293	CompoundStatement		90:9:2843:2843	706571	0					
ANR	707294	ReturnType	static void		706571	1					
ANR	707295	Identifier	set_bin_relocs		706571	2					
ANR	707296	ParameterList	"RCore * r , RBinReloc * reloc , ut64 addr , Sdb * * db , char * * sdb_module"		706571	3					
ANR	707297	Parameter	RCore * r	1357:27:38871:38878	706571	0	True				
ANR	707298	ParameterType	RCore *		706571	0					
ANR	707299	Identifier	r		706571	1					
ANR	707300	Parameter	RBinReloc * reloc	1357:37:38881:38896	706571	1	True				
ANR	707301	ParameterType	RBinReloc *		706571	0					
ANR	707302	Identifier	reloc		706571	1					
ANR	707303	Parameter	ut64 addr	1357:55:38899:38907	706571	2	True				
ANR	707304	ParameterType	ut64		706571	0					
ANR	707305	Identifier	addr		706571	1					
ANR	707306	Parameter	Sdb * * db	1357:66:38910:38917	706571	3	True				
ANR	707307	ParameterType	Sdb * *		706571	0					
ANR	707308	Identifier	db		706571	1					
ANR	707309	Parameter	char * * sdb_module	1357:76:38920:38936	706571	4	True				
ANR	707310	ParameterType	char * *		706571	0					
ANR	707311	Identifier	sdb_module		706571	1					
ANR	707312	CFGEntryNode	ENTRY		706571		True				
ANR	707313	CFGExitNode	EXIT		706571		True				
ANR	707314	Symbol	strlen		706571						
ANR	707315	Symbol	R2_SDB_FORMAT		706571						
ANR	707316	Symbol	* sdb_module		706571						
ANR	707317	Symbol	reloc -> import		706571						
ANR	707318	Symbol	sdb_module		706571						
ANR	707319	Symbol	TOKEN		706571						
ANR	707320	Symbol	strcmp		706571						
ANR	707321	Symbol	* * * reloc		706571						
ANR	707322	Symbol	NULL		706571						
ANR	707323	Symbol	resolveModuleOrdinal		706571						
ANR	707324	Symbol	r -> bin -> cur		706571						
ANR	707325	Symbol	module		706571						
ANR	707326	Symbol	* db		706571						
ANR	707327	Symbol	r -> anal		706571						
ANR	707328	Symbol	is_sandbox		706571						
ANR	707329	Symbol	str		706571						
ANR	707330	Symbol	sdb_new		706571						
ANR	707331	Symbol	filename		706571						
ANR	707332	Symbol	bin_reloc_size		706571						
ANR	707333	Symbol	strstr		706571						
ANR	707334	Symbol	r_config_get_i		706571						
ANR	707335	Symbol	true		706571						
ANR	707336	Symbol	reloc_name		706571						
ANR	707337	Symbol	* reloc -> import		706571						
ANR	707338	Symbol	reloc -> import -> name		706571						
ANR	707339	Symbol	* import		706571						
ANR	707340	Symbol	r -> flags		706571						
ANR	707341	Symbol	fi		706571						
ANR	707342	Symbol	import		706571						
ANR	707343	Symbol	r_sandbox_enable		706571						
ANR	707344	Symbol	r_config_get		706571						
ANR	707345	Symbol	symname		706571						
ANR	707346	Symbol	get_reloc_name		706571						
ANR	707347	Symbol	r_str_newf		706571						
ANR	707348	Symbol	r_sys_prefix		706571						
ANR	707349	Symbol	R_FLAG_NAME_SIZE		706571						
ANR	707350	Symbol	is_pe		706571						
ANR	707351	Symbol	r -> bin		706571						
ANR	707352	Symbol	* r -> bin		706571						
ANR	707353	Symbol	r_bin_demangle		706571						
ANR	707354	Symbol	* * r		706571						
ANR	707355	Symbol	reloc		706571						
ANR	707356	Symbol	addr		706571						
ANR	707357	Symbol	lang		706571						
ANR	707358	Symbol	sdb_fmt		706571						
ANR	707359	Symbol	r -> bin -> prefix		706571						
ANR	707360	Symbol	atoi		706571						
ANR	707361	Symbol	* reloc		706571						
ANR	707362	Symbol	R_JOIN_4_PATHS		706571						
ANR	707363	Symbol	bin_demangle		706571						
ANR	707364	Symbol	* reloc -> import -> name		706571						
ANR	707365	Symbol	keep_lib		706571						
ANR	707366	Symbol	false		706571						
ANR	707367	Symbol	dirPrefix		706571						
ANR	707368	Symbol	demname		706571						
ANR	707369	Symbol	r_flag_set		706571						
ANR	707370	Symbol	reloc -> vaddr		706571						
ANR	707371	Symbol	realname		706571						
ANR	707372	Symbol	r		706571						
ANR	707373	Symbol	* * reloc -> import		706571						
ANR	707374	Symbol	R_META_TYPE_DATA		706571						
ANR	707375	Symbol	* * reloc		706571						
ANR	707376	Symbol	strdup		706571						
ANR	707377	Symbol	* r		706571						
ANR	707378	Symbol	r_file_exists		706571						
ANR	707379	Symbol	db		706571						
ANR	707380	Symbol	r -> config		706571						
ANR	707381	Symbol	ordinal		706571						
ANR	707382	Function	add_metadata	1453:0:41941:42573							
ANR	707383	FunctionDef	"add_metadata (RCore * r , RBinReloc * reloc , ut64 addr , int mode)"		707382	0					
ANR	707384	CompoundStatement		1453:74:42015:42573	707382	0					
ANR	707385	IdentifierDeclStatement	RBinFile * binfile = r -> bin -> cur ;	1454:1:42018:42050	707382	0	True				
ANR	707386	IdentifierDecl	* binfile = r -> bin -> cur		707382	0					
ANR	707387	IdentifierDeclType	RBinFile *		707382	0					
ANR	707388	Identifier	binfile		707382	1					
ANR	707389	AssignmentExpression	* binfile = r -> bin -> cur		707382	2		=			
ANR	707390	Identifier	binfile		707382	0					
ANR	707391	PtrMemberAccess	r -> bin -> cur		707382	1					
ANR	707392	PtrMemberAccess	r -> bin		707382	0					
ANR	707393	Identifier	r		707382	0					
ANR	707394	Identifier	bin		707382	1					
ANR	707395	Identifier	cur		707382	1					
ANR	707396	IdentifierDeclStatement	RBinObject * binobj = binfile ? binfile -> o : NULL ;	1455:1:42053:42100	707382	1	True				
ANR	707397	IdentifierDecl	* binobj = binfile ? binfile -> o : NULL		707382	0					
ANR	707398	IdentifierDeclType	RBinObject *		707382	0					
ANR	707399	Identifier	binobj		707382	1					
ANR	707400	AssignmentExpression	* binobj = binfile ? binfile -> o : NULL		707382	2		=			
ANR	707401	Identifier	binobj		707382	0					
ANR	707402	ConditionalExpression	binfile ? binfile -> o : NULL		707382	1					
ANR	707403	Condition	binfile		707382	0					
ANR	707404	Identifier	binfile		707382	0					
ANR	707405	PtrMemberAccess	binfile -> o		707382	1					
ANR	707406	Identifier	binfile		707382	0					
ANR	707407	Identifier	o		707382	1					
ANR	707408	Identifier	NULL		707382	2					
ANR	707409	IdentifierDeclStatement	RBinInfo * info = binobj ? binobj -> info : NULL ;	1456:1:42103:42147	707382	2	True				
ANR	707410	IdentifierDecl	* info = binobj ? binobj -> info : NULL		707382	0					
ANR	707411	IdentifierDeclType	RBinInfo *		707382	0					
ANR	707412	Identifier	info		707382	1					
ANR	707413	AssignmentExpression	* info = binobj ? binobj -> info : NULL		707382	2		=			
ANR	707414	Identifier	info		707382	0					
ANR	707415	ConditionalExpression	binobj ? binobj -> info : NULL		707382	1					
ANR	707416	Condition	binobj		707382	0					
ANR	707417	Identifier	binobj		707382	0					
ANR	707418	PtrMemberAccess	binobj -> info		707382	1					
ANR	707419	Identifier	binobj		707382	0					
ANR	707420	Identifier	info		707382	1					
ANR	707421	Identifier	NULL		707382	2					
ANR	707422	IdentifierDeclStatement	int cdsz = info ? ( info -> bits == 64 ? 8 : info -> bits == 32 ? 4 : info -> bits == 16 ? 4 : 0 ) : 0 ;	1458:1:42151:42238	707382	3	True				
ANR	707423	IdentifierDecl	cdsz = info ? ( info -> bits == 64 ? 8 : info -> bits == 32 ? 4 : info -> bits == 16 ? 4 : 0 ) : 0		707382	0					
ANR	707424	IdentifierDeclType	int		707382	0					
ANR	707425	Identifier	cdsz		707382	1					
ANR	707426	AssignmentExpression	cdsz = info ? ( info -> bits == 64 ? 8 : info -> bits == 32 ? 4 : info -> bits == 16 ? 4 : 0 ) : 0		707382	2		=			
ANR	707427	Identifier	cdsz		707382	0					
ANR	707428	ConditionalExpression	info ? ( info -> bits == 64 ? 8 : info -> bits == 32 ? 4 : info -> bits == 16 ? 4 : 0 ) : 0		707382	1					
ANR	707429	Condition	info		707382	0					
ANR	707430	Identifier	info		707382	0					
ANR	707431	ConditionalExpression	info -> bits == 64 ? 8 : info -> bits == 32 ? 4 : info -> bits == 16 ? 4 : 0		707382	1					
ANR	707432	Condition	info -> bits == 64		707382	0					
ANR	707433	EqualityExpression	info -> bits == 64		707382	0		==			
ANR	707434	PtrMemberAccess	info -> bits		707382	0					
ANR	707435	Identifier	info		707382	0					
ANR	707436	Identifier	bits		707382	1					
ANR	707437	PrimaryExpression	64		707382	1					
ANR	707438	PrimaryExpression	8		707382	1					
ANR	707439	ConditionalExpression	info -> bits == 32 ? 4 : info -> bits == 16 ? 4 : 0		707382	2					
ANR	707440	Condition	info -> bits == 32		707382	0					
ANR	707441	EqualityExpression	info -> bits == 32		707382	0		==			
ANR	707442	PtrMemberAccess	info -> bits		707382	0					
ANR	707443	Identifier	info		707382	0					
ANR	707444	Identifier	bits		707382	1					
ANR	707445	PrimaryExpression	32		707382	1					
ANR	707446	PrimaryExpression	4		707382	1					
ANR	707447	ConditionalExpression	info -> bits == 16 ? 4 : 0		707382	2					
ANR	707448	Condition	info -> bits == 16		707382	0					
ANR	707449	EqualityExpression	info -> bits == 16		707382	0		==			
ANR	707450	PtrMemberAccess	info -> bits		707382	0					
ANR	707451	Identifier	info		707382	0					
ANR	707452	Identifier	bits		707382	1					
ANR	707453	PrimaryExpression	16		707382	1					
ANR	707454	PrimaryExpression	4		707382	1					
ANR	707455	PrimaryExpression	0		707382	2					
ANR	707456	PrimaryExpression	0		707382	2					
ANR	707457	IfStatement	if ( cdsz == 0 )		707382	4					
ANR	707458	Condition	cdsz == 0	1459:5:42245:42253	707382	0	True				
ANR	707459	EqualityExpression	cdsz == 0		707382	0		==			
ANR	707460	Identifier	cdsz		707382	0					
ANR	707461	PrimaryExpression	0		707382	1					
ANR	707462	CompoundStatement		7:16:240:240	707382	1					
ANR	707463	ReturnStatement	return ;	1460:2:42260:42266	707382	0	True				
ANR	707464	IdentifierDeclStatement	"RIOMap * map = r_io_map_get ( r -> io , addr ) ;"	1463:1:42273:42313	707382	5	True				
ANR	707465	IdentifierDecl	"* map = r_io_map_get ( r -> io , addr )"		707382	0					
ANR	707466	IdentifierDeclType	RIOMap *		707382	0					
ANR	707467	Identifier	map		707382	1					
ANR	707468	AssignmentExpression	"* map = r_io_map_get ( r -> io , addr )"		707382	2		=			
ANR	707469	Identifier	map		707382	0					
ANR	707470	CallExpression	"r_io_map_get ( r -> io , addr )"		707382	1					
ANR	707471	Callee	r_io_map_get		707382	0					
ANR	707472	Identifier	r_io_map_get		707382	0					
ANR	707473	ArgumentList	r -> io		707382	1					
ANR	707474	Argument	r -> io		707382	0					
ANR	707475	PtrMemberAccess	r -> io		707382	0					
ANR	707476	Identifier	r		707382	0					
ANR	707477	Identifier	io		707382	1					
ANR	707478	Argument	addr		707382	1					
ANR	707479	Identifier	addr		707382	0					
ANR	707480	IfStatement	if ( ! map || map -> perm & R_PERM_X )		707382	6					
ANR	707481	Condition	! map || map -> perm & R_PERM_X	1464:5:42320:42348	707382	0	True				
ANR	707482	OrExpression	! map || map -> perm & R_PERM_X		707382	0		||			
ANR	707483	UnaryOperationExpression	! map		707382	0					
ANR	707484	UnaryOperator	!		707382	0					
ANR	707485	Identifier	map		707382	1					
ANR	707486	BitAndExpression	map -> perm & R_PERM_X		707382	1		&			
ANR	707487	PtrMemberAccess	map -> perm		707382	0					
ANR	707488	Identifier	map		707382	0					
ANR	707489	Identifier	perm		707382	1					
ANR	707490	Identifier	R_PERM_X		707382	1					
ANR	707491	CompoundStatement		12:36:335:335	707382	1					
ANR	707492	ReturnStatement	return ;	1465:2:42355:42361	707382	0	True				
ANR	707493	IfStatement	if ( IS_MODE_SET ( mode ) )		707382	7					
ANR	707494	Condition	IS_MODE_SET ( mode )	1467:5:42371:42388	707382	0	True				
ANR	707495	CallExpression	IS_MODE_SET ( mode )		707382	0					
ANR	707496	Callee	IS_MODE_SET		707382	0					
ANR	707497	Identifier	IS_MODE_SET		707382	0					
ANR	707498	ArgumentList	mode		707382	1					
ANR	707499	Argument	mode		707382	0					
ANR	707500	Identifier	mode		707382	0					
ANR	707501	CompoundStatement		15:25:375:375	707382	1					
ANR	707502	ExpressionStatement	"r_meta_add ( r -> anal , R_META_TYPE_DATA , reloc -> vaddr , reloc -> vaddr + cdsz , NULL )"	1468:2:42395:42474	707382	0	True				
ANR	707503	CallExpression	"r_meta_add ( r -> anal , R_META_TYPE_DATA , reloc -> vaddr , reloc -> vaddr + cdsz , NULL )"		707382	0					
ANR	707504	Callee	r_meta_add		707382	0					
ANR	707505	Identifier	r_meta_add		707382	0					
ANR	707506	ArgumentList	r -> anal		707382	1					
ANR	707507	Argument	r -> anal		707382	0					
ANR	707508	PtrMemberAccess	r -> anal		707382	0					
ANR	707509	Identifier	r		707382	0					
ANR	707510	Identifier	anal		707382	1					
ANR	707511	Argument	R_META_TYPE_DATA		707382	1					
ANR	707512	Identifier	R_META_TYPE_DATA		707382	0					
ANR	707513	Argument	reloc -> vaddr		707382	2					
ANR	707514	PtrMemberAccess	reloc -> vaddr		707382	0					
ANR	707515	Identifier	reloc		707382	0					
ANR	707516	Identifier	vaddr		707382	1					
ANR	707517	Argument	reloc -> vaddr + cdsz		707382	3					
ANR	707518	AdditiveExpression	reloc -> vaddr + cdsz		707382	0		+			
ANR	707519	PtrMemberAccess	reloc -> vaddr		707382	0					
ANR	707520	Identifier	reloc		707382	0					
ANR	707521	Identifier	vaddr		707382	1					
ANR	707522	Identifier	cdsz		707382	1					
ANR	707523	Argument	NULL		707382	4					
ANR	707524	Identifier	NULL		707382	0					
ANR	707525	ElseStatement	else		707382	0					
ANR	707526	IfStatement	if ( IS_MODE_RAD ( mode ) )		707382	0					
ANR	707527	Condition	IS_MODE_RAD ( mode )	1469:12:42488:42505	707382	0	True				
ANR	707528	CallExpression	IS_MODE_RAD ( mode )		707382	0					
ANR	707529	Callee	IS_MODE_RAD		707382	0					
ANR	707530	Identifier	IS_MODE_RAD		707382	0					
ANR	707531	ArgumentList	mode		707382	1					
ANR	707532	Argument	mode		707382	0					
ANR	707533	Identifier	mode		707382	0					
ANR	707534	CompoundStatement		17:32:492:492	707382	1					
ANR	707535	Statement	r_cons_printf	1470:2:42512:42524	707382	0	True				
ANR	707536	Statement	(	1470:16:42526:42526	707382	1	True				
ANR	707537	Statement	"""Cd %d @ 0x%08"""	1470:17:42527:42541	707382	2	True				
ANR	707538	Statement	PFMT64x	1470:33:42543:42549	707382	3	True				
ANR	707539	Statement	"""\\n"""	1470:41:42551:42554	707382	4	True				
ANR	707540	Statement	","	1470:45:42555:42555	707382	5	True				
ANR	707541	Statement	cdsz	1470:47:42557:42560	707382	6	True				
ANR	707542	Statement	","	1470:51:42561:42561	707382	7	True				
ANR	707543	Statement	addr	1470:53:42563:42566	707382	8	True				
ANR	707544	Statement	)	1470:57:42567:42567	707382	9	True				
ANR	707545	ExpressionStatement		1470:58:42568:42568	707382	10	True				
ANR	707546	ReturnType	static void		707382	1					
ANR	707547	Identifier	add_metadata		707382	2					
ANR	707548	ParameterList	"RCore * r , RBinReloc * reloc , ut64 addr , int mode"		707382	3					
ANR	707549	Parameter	RCore * r	1453:25:41966:41973	707382	0	True				
ANR	707550	ParameterType	RCore *		707382	0					
ANR	707551	Identifier	r		707382	1					
ANR	707552	Parameter	RBinReloc * reloc	1453:35:41976:41991	707382	1	True				
ANR	707553	ParameterType	RBinReloc *		707382	0					
ANR	707554	Identifier	reloc		707382	1					
ANR	707555	Parameter	ut64 addr	1453:53:41994:42002	707382	2	True				
ANR	707556	ParameterType	ut64		707382	0					
ANR	707557	Identifier	addr		707382	1					
ANR	707558	Parameter	int mode	1453:64:42005:42012	707382	3	True				
ANR	707559	ParameterType	int		707382	0					
ANR	707560	Identifier	mode		707382	1					
ANR	707561	CFGEntryNode	ENTRY		707382		True				
ANR	707562	CFGExitNode	EXIT		707382		True				
ANR	707563	Symbol	* map		707382						
ANR	707564	Symbol	binfile		707382						
ANR	707565	Symbol	info -> bits		707382						
ANR	707566	Symbol	mode		707382						
ANR	707567	Symbol	R_PERM_X		707382						
ANR	707568	Symbol	r -> bin		707382						
ANR	707569	Symbol	* r -> bin		707382						
ANR	707570	Symbol	binobj -> info		707382						
ANR	707571	Symbol	* * r		707382						
ANR	707572	Symbol	reloc		707382						
ANR	707573	Symbol	addr		707382						
ANR	707574	Symbol	map		707382						
ANR	707575	Symbol	info		707382						
ANR	707576	Symbol	* binfile		707382						
ANR	707577	Symbol	* reloc		707382						
ANR	707578	Symbol	NULL		707382						
ANR	707579	Symbol	r -> bin -> cur		707382						
ANR	707580	Symbol	binobj		707382						
ANR	707581	Symbol	cdsz		707382						
ANR	707582	Symbol	* binobj		707382						
ANR	707583	Symbol	r -> anal		707382						
ANR	707584	Symbol	IS_MODE_SET		707382						
ANR	707585	Symbol	reloc -> vaddr		707382						
ANR	707586	Symbol	r		707382						
ANR	707587	Symbol	binfile -> o		707382						
ANR	707588	Symbol	R_META_TYPE_DATA		707382						
ANR	707589	Symbol	IS_MODE_RAD		707382						
ANR	707590	Symbol	* info		707382						
ANR	707591	Symbol	* r		707382						
ANR	707592	Symbol	map -> perm		707382						
ANR	707593	Symbol	r_io_map_get		707382						
ANR	707594	Symbol	r -> io		707382						
ANR	707595	Function	is_section_symbol	1474:0:42576:42777							
ANR	707596	FunctionDef	is_section_symbol (RBinSymbol * s)		707595	0					
ANR	707597	CompoundStatement		1474:45:42621:42777	707595	0					
ANR	707598	IfStatement	if ( ! s || * s -> name )		707595	0					
ANR	707599	Condition	! s || * s -> name	1476:5:42676:42689	707595	0	True				
ANR	707600	OrExpression	! s || * s -> name		707595	0		||			
ANR	707601	UnaryOperationExpression	! s		707595	0					
ANR	707602	UnaryOperator	!		707595	0					
ANR	707603	Identifier	s		707595	1					
ANR	707604	UnaryOperationExpression	* s -> name		707595	1					
ANR	707605	UnaryOperator	*		707595	0					
ANR	707606	PtrMemberAccess	s -> name		707595	1					
ANR	707607	Identifier	s		707595	0					
ANR	707608	Identifier	name		707595	1					
ANR	707609	CompoundStatement		3:21:70:70	707595	1					
ANR	707610	ReturnStatement	return false ;	1477:2:42696:42708	707595	0	True				
ANR	707611	Identifier	false		707595	0					
ANR	707612	ReturnStatement	"return ( s -> type && ! strcmp ( s -> type , R_BIN_TYPE_SECTION_STR ) ) ;"	1479:1:42714:42775	707595	1	True				
ANR	707613	AndExpression	"s -> type && ! strcmp ( s -> type , R_BIN_TYPE_SECTION_STR )"		707595	0		&&			
ANR	707614	PtrMemberAccess	s -> type		707595	0					
ANR	707615	Identifier	s		707595	0					
ANR	707616	Identifier	type		707595	1					
ANR	707617	UnaryOperationExpression	"! strcmp ( s -> type , R_BIN_TYPE_SECTION_STR )"		707595	1					
ANR	707618	UnaryOperator	!		707595	0					
ANR	707619	CallExpression	"strcmp ( s -> type , R_BIN_TYPE_SECTION_STR )"		707595	1					
ANR	707620	Callee	strcmp		707595	0					
ANR	707621	Identifier	strcmp		707595	0					
ANR	707622	ArgumentList	s -> type		707595	1					
ANR	707623	Argument	s -> type		707595	0					
ANR	707624	PtrMemberAccess	s -> type		707595	0					
ANR	707625	Identifier	s		707595	0					
ANR	707626	Identifier	type		707595	1					
ANR	707627	Argument	R_BIN_TYPE_SECTION_STR		707595	1					
ANR	707628	Identifier	R_BIN_TYPE_SECTION_STR		707595	0					
ANR	707629	ReturnType	static bool		707595	1					
ANR	707630	Identifier	is_section_symbol		707595	2					
ANR	707631	ParameterList	RBinSymbol * s		707595	3					
ANR	707632	Parameter	RBinSymbol * s	1474:30:42606:42618	707595	0	True				
ANR	707633	ParameterType	RBinSymbol *		707595	0					
ANR	707634	Identifier	s		707595	1					
ANR	707635	CFGEntryNode	ENTRY		707595		True				
ANR	707636	CFGExitNode	EXIT		707595		True				
ANR	707637	Symbol	strcmp		707595						
ANR	707638	Symbol	s		707595						
ANR	707639	Symbol	s -> name		707595						
ANR	707640	Symbol	* s -> name		707595						
ANR	707641	Symbol	* * s		707595						
ANR	707642	Symbol	false		707595						
ANR	707643	Symbol	R_BIN_TYPE_SECTION_STR		707595						
ANR	707644	Symbol	* s		707595						
ANR	707645	Symbol	s -> type		707595						
ANR	707646	Function	is_special_symbol	1482:0:42780:42893							
ANR	707647	FunctionDef	is_special_symbol (RBinSymbol * s)		707646	0					
ANR	707648	CompoundStatement		1482:45:42825:42893	707646	0					
ANR	707649	ReturnStatement	"return s -> type && ! strcmp ( s -> type , R_BIN_TYPE_SPECIAL_SYM_STR ) ;"	1483:1:42828:42891	707646	0	True				
ANR	707650	AndExpression	"s -> type && ! strcmp ( s -> type , R_BIN_TYPE_SPECIAL_SYM_STR )"		707646	0		&&			
ANR	707651	PtrMemberAccess	s -> type		707646	0					
ANR	707652	Identifier	s		707646	0					
ANR	707653	Identifier	type		707646	1					
ANR	707654	UnaryOperationExpression	"! strcmp ( s -> type , R_BIN_TYPE_SPECIAL_SYM_STR )"		707646	1					
ANR	707655	UnaryOperator	!		707646	0					
ANR	707656	CallExpression	"strcmp ( s -> type , R_BIN_TYPE_SPECIAL_SYM_STR )"		707646	1					
ANR	707657	Callee	strcmp		707646	0					
ANR	707658	Identifier	strcmp		707646	0					
ANR	707659	ArgumentList	s -> type		707646	1					
ANR	707660	Argument	s -> type		707646	0					
ANR	707661	PtrMemberAccess	s -> type		707646	0					
ANR	707662	Identifier	s		707646	0					
ANR	707663	Identifier	type		707646	1					
ANR	707664	Argument	R_BIN_TYPE_SPECIAL_SYM_STR		707646	1					
ANR	707665	Identifier	R_BIN_TYPE_SPECIAL_SYM_STR		707646	0					
ANR	707666	ReturnType	static bool		707646	1					
ANR	707667	Identifier	is_special_symbol		707646	2					
ANR	707668	ParameterList	RBinSymbol * s		707646	3					
ANR	707669	Parameter	RBinSymbol * s	1482:30:42810:42822	707646	0	True				
ANR	707670	ParameterType	RBinSymbol *		707646	0					
ANR	707671	Identifier	s		707646	1					
ANR	707672	CFGEntryNode	ENTRY		707646		True				
ANR	707673	CFGExitNode	EXIT		707646		True				
ANR	707674	Symbol	strcmp		707646						
ANR	707675	Symbol	s		707646						
ANR	707676	Symbol	R_BIN_TYPE_SPECIAL_SYM_STR		707646						
ANR	707677	Symbol	s -> type		707646						
ANR	707678	Symbol	* s		707646						
ANR	707679	Function	is_section_reloc	1486:0:42896:42980							
ANR	707680	FunctionDef	is_section_reloc (RBinReloc * r)		707679	0					
ANR	707681	CompoundStatement		1486:43:42939:42980	707679	0					
ANR	707682	ReturnStatement	return is_section_symbol ( r -> symbol ) ;	1487:1:42942:42978	707679	0	True				
ANR	707683	CallExpression	is_section_symbol ( r -> symbol )		707679	0					
ANR	707684	Callee	is_section_symbol		707679	0					
ANR	707685	Identifier	is_section_symbol		707679	0					
ANR	707686	ArgumentList	r -> symbol		707679	1					
ANR	707687	Argument	r -> symbol		707679	0					
ANR	707688	PtrMemberAccess	r -> symbol		707679	0					
ANR	707689	Identifier	r		707679	0					
ANR	707690	Identifier	symbol		707679	1					
ANR	707691	ReturnType	static bool		707679	1					
ANR	707692	Identifier	is_section_reloc		707679	2					
ANR	707693	ParameterList	RBinReloc * r		707679	3					
ANR	707694	Parameter	RBinReloc * r	1486:29:42925:42936	707679	0	True				
ANR	707695	ParameterType	RBinReloc *		707679	0					
ANR	707696	Identifier	r		707679	1					
ANR	707697	CFGEntryNode	ENTRY		707679		True				
ANR	707698	CFGExitNode	EXIT		707679		True				
ANR	707699	Symbol	r		707679						
ANR	707700	Symbol	is_section_symbol		707679						
ANR	707701	Symbol	* r		707679						
ANR	707702	Symbol	r -> symbol		707679						
ANR	707703	Function	is_file_symbol	1490:0:42983:43141							
ANR	707704	FunctionDef	is_file_symbol (RBinSymbol * s)		707703	0					
ANR	707705	CompoundStatement		1490:42:43025:43141	707703	0					
ANR	707706	ReturnStatement	"return ( s && s -> type && ! strcmp ( s -> type , R_BIN_TYPE_FILE_STR ) ) ;"	1492:1:43076:43139	707703	0	True				
ANR	707707	AndExpression	"s && s -> type && ! strcmp ( s -> type , R_BIN_TYPE_FILE_STR )"		707703	0		&&			
ANR	707708	Identifier	s		707703	0					
ANR	707709	AndExpression	"s -> type && ! strcmp ( s -> type , R_BIN_TYPE_FILE_STR )"		707703	1		&&			
ANR	707710	PtrMemberAccess	s -> type		707703	0					
ANR	707711	Identifier	s		707703	0					
ANR	707712	Identifier	type		707703	1					
ANR	707713	UnaryOperationExpression	"! strcmp ( s -> type , R_BIN_TYPE_FILE_STR )"		707703	1					
ANR	707714	UnaryOperator	!		707703	0					
ANR	707715	CallExpression	"strcmp ( s -> type , R_BIN_TYPE_FILE_STR )"		707703	1					
ANR	707716	Callee	strcmp		707703	0					
ANR	707717	Identifier	strcmp		707703	0					
ANR	707718	ArgumentList	s -> type		707703	1					
ANR	707719	Argument	s -> type		707703	0					
ANR	707720	PtrMemberAccess	s -> type		707703	0					
ANR	707721	Identifier	s		707703	0					
ANR	707722	Identifier	type		707703	1					
ANR	707723	Argument	R_BIN_TYPE_FILE_STR		707703	1					
ANR	707724	Identifier	R_BIN_TYPE_FILE_STR		707703	0					
ANR	707725	ReturnType	static bool		707703	1					
ANR	707726	Identifier	is_file_symbol		707703	2					
ANR	707727	ParameterList	RBinSymbol * s		707703	3					
ANR	707728	Parameter	RBinSymbol * s	1490:27:43010:43022	707703	0	True				
ANR	707729	ParameterType	RBinSymbol *		707703	0					
ANR	707730	Identifier	s		707703	1					
ANR	707731	CFGEntryNode	ENTRY		707703		True				
ANR	707732	CFGExitNode	EXIT		707703		True				
ANR	707733	Symbol	strcmp		707703						
ANR	707734	Symbol	s		707703						
ANR	707735	Symbol	R_BIN_TYPE_FILE_STR		707703						
ANR	707736	Symbol	s -> type		707703						
ANR	707737	Symbol	* s		707703						
ANR	707738	Function	is_file_reloc	1495:0:43144:43222							
ANR	707739	FunctionDef	is_file_reloc (RBinReloc * r)		707738	0					
ANR	707740	CompoundStatement		1495:40:43184:43222	707738	0					
ANR	707741	ReturnStatement	return is_file_symbol ( r -> symbol ) ;	1496:1:43187:43220	707738	0	True				
ANR	707742	CallExpression	is_file_symbol ( r -> symbol )		707738	0					
ANR	707743	Callee	is_file_symbol		707738	0					
ANR	707744	Identifier	is_file_symbol		707738	0					
ANR	707745	ArgumentList	r -> symbol		707738	1					
ANR	707746	Argument	r -> symbol		707738	0					
ANR	707747	PtrMemberAccess	r -> symbol		707738	0					
ANR	707748	Identifier	r		707738	0					
ANR	707749	Identifier	symbol		707738	1					
ANR	707750	ReturnType	static bool		707738	1					
ANR	707751	Identifier	is_file_reloc		707738	2					
ANR	707752	ParameterList	RBinReloc * r		707738	3					
ANR	707753	Parameter	RBinReloc * r	1495:26:43170:43181	707738	0	True				
ANR	707754	ParameterType	RBinReloc *		707738	0					
ANR	707755	Identifier	r		707738	1					
ANR	707756	CFGEntryNode	ENTRY		707738		True				
ANR	707757	CFGExitNode	EXIT		707738		True				
ANR	707758	Symbol	r		707738						
ANR	707759	Symbol	is_file_symbol		707738						
ANR	707760	Symbol	* r		707738						
ANR	707761	Symbol	r -> symbol		707738						
ANR	707762	Function	bin_relocs	1499:0:43225:47767							
ANR	707763	FunctionDef	"bin_relocs (RCore * r , int mode , int va)"		707762	0					
ANR	707764	CompoundStatement		1499:50:43275:47767	707762	0					
ANR	707765	IdentifierDeclStatement	"bool bin_demangle = r_config_get_i ( r -> config , ""bin.demangle"" ) ;"	1500:1:43278:43340	707762	0	True				
ANR	707766	IdentifierDecl	"bin_demangle = r_config_get_i ( r -> config , ""bin.demangle"" )"		707762	0					
ANR	707767	IdentifierDeclType	bool		707762	0					
ANR	707768	Identifier	bin_demangle		707762	1					
ANR	707769	AssignmentExpression	"bin_demangle = r_config_get_i ( r -> config , ""bin.demangle"" )"		707762	2		=			
ANR	707770	Identifier	bin_demangle		707762	0					
ANR	707771	CallExpression	"r_config_get_i ( r -> config , ""bin.demangle"" )"		707762	1					
ANR	707772	Callee	r_config_get_i		707762	0					
ANR	707773	Identifier	r_config_get_i		707762	0					
ANR	707774	ArgumentList	r -> config		707762	1					
ANR	707775	Argument	r -> config		707762	0					
ANR	707776	PtrMemberAccess	r -> config		707762	0					
ANR	707777	Identifier	r		707762	0					
ANR	707778	Identifier	config		707762	1					
ANR	707779	Argument	"""bin.demangle"""		707762	1					
ANR	707780	PrimaryExpression	"""bin.demangle"""		707762	0					
ANR	707781	IdentifierDeclStatement	"bool keep_lib = r_config_get_i ( r -> config , ""bin.demangle.libs"" ) ;"	1501:1:43343:43406	707762	1	True				
ANR	707782	IdentifierDecl	"keep_lib = r_config_get_i ( r -> config , ""bin.demangle.libs"" )"		707762	0					
ANR	707783	IdentifierDeclType	bool		707762	0					
ANR	707784	Identifier	keep_lib		707762	1					
ANR	707785	AssignmentExpression	"keep_lib = r_config_get_i ( r -> config , ""bin.demangle.libs"" )"		707762	2		=			
ANR	707786	Identifier	keep_lib		707762	0					
ANR	707787	CallExpression	"r_config_get_i ( r -> config , ""bin.demangle.libs"" )"		707762	1					
ANR	707788	Callee	r_config_get_i		707762	0					
ANR	707789	Identifier	r_config_get_i		707762	0					
ANR	707790	ArgumentList	r -> config		707762	1					
ANR	707791	Argument	r -> config		707762	0					
ANR	707792	PtrMemberAccess	r -> config		707762	0					
ANR	707793	Identifier	r		707762	0					
ANR	707794	Identifier	config		707762	1					
ANR	707795	Argument	"""bin.demangle.libs"""		707762	1					
ANR	707796	PrimaryExpression	"""bin.demangle.libs"""		707762	0					
ANR	707797	IdentifierDeclStatement	"const char * lang = r_config_get ( r -> config , ""bin.lang"" ) ;"	1502:1:43409:43464	707762	2	True				
ANR	707798	IdentifierDecl	"* lang = r_config_get ( r -> config , ""bin.lang"" )"		707762	0					
ANR	707799	IdentifierDeclType	const char *		707762	0					
ANR	707800	Identifier	lang		707762	1					
ANR	707801	AssignmentExpression	"* lang = r_config_get ( r -> config , ""bin.lang"" )"		707762	2		=			
ANR	707802	Identifier	lang		707762	0					
ANR	707803	CallExpression	"r_config_get ( r -> config , ""bin.lang"" )"		707762	1					
ANR	707804	Callee	r_config_get		707762	0					
ANR	707805	Identifier	r_config_get		707762	0					
ANR	707806	ArgumentList	r -> config		707762	1					
ANR	707807	Argument	r -> config		707762	0					
ANR	707808	PtrMemberAccess	r -> config		707762	0					
ANR	707809	Identifier	r		707762	0					
ANR	707810	Identifier	config		707762	1					
ANR	707811	Argument	"""bin.lang"""		707762	1					
ANR	707812	PrimaryExpression	"""bin.lang"""		707762	0					
ANR	707813	IdentifierDeclStatement	RBIter iter ;	1503:1:43467:43478	707762	3	True				
ANR	707814	IdentifierDecl	iter		707762	0					
ANR	707815	IdentifierDeclType	RBIter		707762	0					
ANR	707816	Identifier	iter		707762	1					
ANR	707817	IdentifierDeclStatement	RBinReloc * reloc = NULL ;	1504:1:43481:43504	707762	4	True				
ANR	707818	IdentifierDecl	* reloc = NULL		707762	0					
ANR	707819	IdentifierDeclType	RBinReloc *		707762	0					
ANR	707820	Identifier	reloc		707762	1					
ANR	707821	AssignmentExpression	* reloc = NULL		707762	2		=			
ANR	707822	Identifier	NULL		707762	0					
ANR	707823	Identifier	NULL		707762	1					
ANR	707824	IdentifierDeclStatement	Sdb * db = NULL ;	1505:1:43507:43521	707762	5	True				
ANR	707825	IdentifierDecl	* db = NULL		707762	0					
ANR	707826	IdentifierDeclType	Sdb *		707762	0					
ANR	707827	Identifier	db		707762	1					
ANR	707828	AssignmentExpression	* db = NULL		707762	2		=			
ANR	707829	Identifier	NULL		707762	0					
ANR	707830	Identifier	NULL		707762	1					
ANR	707831	IdentifierDeclStatement	PJ * pj = NULL ;	1506:1:43524:43537	707762	6	True				
ANR	707832	IdentifierDecl	* pj = NULL		707762	0					
ANR	707833	IdentifierDeclType	PJ *		707762	0					
ANR	707834	Identifier	pj		707762	1					
ANR	707835	AssignmentExpression	* pj = NULL		707762	2		=			
ANR	707836	Identifier	NULL		707762	0					
ANR	707837	Identifier	NULL		707762	1					
ANR	707838	IdentifierDeclStatement	char * sdb_module = NULL ;	1507:1:43540:43563	707762	7	True				
ANR	707839	IdentifierDecl	* sdb_module = NULL		707762	0					
ANR	707840	IdentifierDeclType	char *		707762	0					
ANR	707841	Identifier	sdb_module		707762	1					
ANR	707842	AssignmentExpression	* sdb_module = NULL		707762	2		=			
ANR	707843	Identifier	NULL		707762	0					
ANR	707844	Identifier	NULL		707762	1					
ANR	707845	IdentifierDeclStatement	int i = 0 ;	1508:1:43566:43575	707762	8	True				
ANR	707846	IdentifierDecl	i = 0		707762	0					
ANR	707847	IdentifierDeclType	int		707762	0					
ANR	707848	Identifier	i		707762	1					
ANR	707849	AssignmentExpression	i = 0		707762	2		=			
ANR	707850	Identifier	i		707762	0					
ANR	707851	PrimaryExpression	0		707762	1					
ANR	707852	ExpressionStatement	R_TIME_BEGIN	1510:1:43579:43591	707762	9	True				
ANR	707853	Identifier	R_TIME_BEGIN		707762	0					
ANR	707854	ExpressionStatement	va = VA_TRUE	1512:1:43595:43607	707762	10	True				
ANR	707855	AssignmentExpression	va = VA_TRUE		707762	0		=			
ANR	707856	Identifier	va		707762	0					
ANR	707857	Identifier	VA_TRUE		707762	1					
ANR	707858	IdentifierDeclStatement	RBNode * relocs = r_bin_patch_relocs ( r -> bin ) ;	1514:1:43686:43730	707762	11	True				
ANR	707859	IdentifierDecl	* relocs = r_bin_patch_relocs ( r -> bin )		707762	0					
ANR	707860	IdentifierDeclType	RBNode *		707762	0					
ANR	707861	Identifier	relocs		707762	1					
ANR	707862	AssignmentExpression	* relocs = r_bin_patch_relocs ( r -> bin )		707762	2		=			
ANR	707863	Identifier	relocs		707762	0					
ANR	707864	CallExpression	r_bin_patch_relocs ( r -> bin )		707762	1					
ANR	707865	Callee	r_bin_patch_relocs		707762	0					
ANR	707866	Identifier	r_bin_patch_relocs		707762	0					
ANR	707867	ArgumentList	r -> bin		707762	1					
ANR	707868	Argument	r -> bin		707762	0					
ANR	707869	PtrMemberAccess	r -> bin		707762	0					
ANR	707870	Identifier	r		707762	0					
ANR	707871	Identifier	bin		707762	1					
ANR	707872	IfStatement	if ( ! relocs )		707762	12					
ANR	707873	Condition	! relocs	1515:5:43737:43743	707762	0	True				
ANR	707874	UnaryOperationExpression	! relocs		707762	0					
ANR	707875	UnaryOperator	!		707762	0					
ANR	707876	Identifier	relocs		707762	1					
ANR	707877	CompoundStatement		17:14:470:470	707762	1					
ANR	707878	ExpressionStatement	relocs = r_bin_get_relocs ( r -> bin )	1516:2:43750:43784	707762	0	True				
ANR	707879	AssignmentExpression	relocs = r_bin_get_relocs ( r -> bin )		707762	0		=			
ANR	707880	Identifier	relocs		707762	0					
ANR	707881	CallExpression	r_bin_get_relocs ( r -> bin )		707762	1					
ANR	707882	Callee	r_bin_get_relocs		707762	0					
ANR	707883	Identifier	r_bin_get_relocs		707762	0					
ANR	707884	ArgumentList	r -> bin		707762	1					
ANR	707885	Argument	r -> bin		707762	0					
ANR	707886	PtrMemberAccess	r -> bin		707762	0					
ANR	707887	Identifier	r		707762	0					
ANR	707888	Identifier	bin		707762	1					
ANR	707889	IfStatement	if ( IS_MODE_RAD ( mode ) )		707762	13					
ANR	707890	Condition	IS_MODE_RAD ( mode )	1519:5:43795:43812	707762	0	True				
ANR	707891	CallExpression	IS_MODE_RAD ( mode )		707762	0					
ANR	707892	Callee	IS_MODE_RAD		707762	0					
ANR	707893	Identifier	IS_MODE_RAD		707762	0					
ANR	707894	ArgumentList	mode		707762	1					
ANR	707895	Argument	mode		707762	0					
ANR	707896	Identifier	mode		707762	0					
ANR	707897	CompoundStatement		21:25:539:539	707762	1					
ANR	707898	ExpressionStatement	"r_cons_println ( ""fs relocs"" )"	1520:2:43819:43847	707762	0	True				
ANR	707899	CallExpression	"r_cons_println ( ""fs relocs"" )"		707762	0					
ANR	707900	Callee	r_cons_println		707762	0					
ANR	707901	Identifier	r_cons_println		707762	0					
ANR	707902	ArgumentList	"""fs relocs"""		707762	1					
ANR	707903	Argument	"""fs relocs"""		707762	0					
ANR	707904	PrimaryExpression	"""fs relocs"""		707762	0					
ANR	707905	ElseStatement	else		707762	0					
ANR	707906	IfStatement	if ( IS_MODE_NORMAL ( mode ) )		707762	0					
ANR	707907	Condition	IS_MODE_NORMAL ( mode )	1521:12:43861:43881	707762	0	True				
ANR	707908	CallExpression	IS_MODE_NORMAL ( mode )		707762	0					
ANR	707909	Callee	IS_MODE_NORMAL		707762	0					
ANR	707910	Identifier	IS_MODE_NORMAL		707762	0					
ANR	707911	ArgumentList	mode		707762	1					
ANR	707912	Argument	mode		707762	0					
ANR	707913	Identifier	mode		707762	0					
ANR	707914	CompoundStatement		23:35:608:608	707762	1					
ANR	707915	ExpressionStatement	"r_cons_println ( ""[Relocations]"" )"	1522:2:43888:43920	707762	0	True				
ANR	707916	CallExpression	"r_cons_println ( ""[Relocations]"" )"		707762	0					
ANR	707917	Callee	r_cons_println		707762	0					
ANR	707918	Identifier	r_cons_println		707762	0					
ANR	707919	ArgumentList	"""[Relocations]"""		707762	1					
ANR	707920	Argument	"""[Relocations]"""		707762	0					
ANR	707921	PrimaryExpression	"""[Relocations]"""		707762	0					
ANR	707922	ElseStatement	else		707762	0					
ANR	707923	IfStatement	if ( IS_MODE_JSON ( mode ) )		707762	0					
ANR	707924	Condition	IS_MODE_JSON ( mode )	1523:12:43934:43952	707762	0	True				
ANR	707925	CallExpression	IS_MODE_JSON ( mode )		707762	0					
ANR	707926	Callee	IS_MODE_JSON		707762	0					
ANR	707927	Identifier	IS_MODE_JSON		707762	0					
ANR	707928	ArgumentList	mode		707762	1					
ANR	707929	Argument	mode		707762	0					
ANR	707930	Identifier	mode		707762	0					
ANR	707931	CompoundStatement		25:33:679:679	707762	1					
ANR	707932	ExpressionStatement	pj = pj_new ( )	1525:2:43988:44002	707762	0	True				
ANR	707933	AssignmentExpression	pj = pj_new ( )		707762	0		=			
ANR	707934	Identifier	pj		707762	0					
ANR	707935	CallExpression	pj_new ( )		707762	1					
ANR	707936	Callee	pj_new		707762	0					
ANR	707937	Identifier	pj_new		707762	0					
ANR	707938	ArgumentList			707762	1					
ANR	707939	IfStatement	if ( pj )		707762	1					
ANR	707940	Condition	pj	1526:6:44010:44011	707762	0	True				
ANR	707941	Identifier	pj		707762	0					
ANR	707942	CompoundStatement		28:10:738:738	707762	1					
ANR	707943	ExpressionStatement	pj_a ( pj )	1527:3:44019:44028	707762	0	True				
ANR	707944	CallExpression	pj_a ( pj )		707762	0					
ANR	707945	Callee	pj_a		707762	0					
ANR	707946	Identifier	pj_a		707762	0					
ANR	707947	ArgumentList	pj		707762	1					
ANR	707948	Argument	pj		707762	0					
ANR	707949	Identifier	pj		707762	0					
ANR	707950	ElseStatement	else		707762	0					
ANR	707951	IfStatement	if ( IS_MODE_SET ( mode ) )		707762	0					
ANR	707952	Condition	IS_MODE_SET ( mode )	1529:12:44046:44063	707762	0	True				
ANR	707953	CallExpression	IS_MODE_SET ( mode )		707762	0					
ANR	707954	Callee	IS_MODE_SET		707762	0					
ANR	707955	Identifier	IS_MODE_SET		707762	0					
ANR	707956	ArgumentList	mode		707762	1					
ANR	707957	Argument	mode		707762	0					
ANR	707958	Identifier	mode		707762	0					
ANR	707959	CompoundStatement		31:32:790:790	707762	1					
ANR	707960	ExpressionStatement	"r_flag_space_set ( r -> flags , R_FLAGS_FS_RELOCS )"	1530:2:44070:44116	707762	0	True				
ANR	707961	CallExpression	"r_flag_space_set ( r -> flags , R_FLAGS_FS_RELOCS )"		707762	0					
ANR	707962	Callee	r_flag_space_set		707762	0					
ANR	707963	Identifier	r_flag_space_set		707762	0					
ANR	707964	ArgumentList	r -> flags		707762	1					
ANR	707965	Argument	r -> flags		707762	0					
ANR	707966	PtrMemberAccess	r -> flags		707762	0					
ANR	707967	Identifier	r		707762	0					
ANR	707968	Identifier	flags		707762	1					
ANR	707969	Argument	R_FLAGS_FS_RELOCS		707762	1					
ANR	707970	Identifier	R_FLAGS_FS_RELOCS		707762	0					
ANR	707971	Statement	r_rbtree_foreach	1533:1:44123:44138	707762	14	True				
ANR	707972	Statement	(	1533:18:44140:44140	707762	15	True				
ANR	707973	Statement	relocs	1533:19:44141:44146	707762	16	True				
ANR	707974	Statement	","	1533:25:44147:44147	707762	17	True				
ANR	707975	Statement	iter	1533:27:44149:44152	707762	18	True				
ANR	707976	Statement	","	1533:31:44153:44153	707762	19	True				
ANR	707977	Statement	reloc	1533:33:44155:44159	707762	20	True				
ANR	707978	Statement	","	1533:38:44160:44160	707762	21	True				
ANR	707979	Statement	RBinReloc	1533:40:44162:44170	707762	22	True				
ANR	707980	Statement	","	1533:49:44171:44171	707762	23	True				
ANR	707981	Statement	vrb	1533:51:44173:44175	707762	24	True				
ANR	707982	Statement	)	1533:54:44176:44176	707762	25	True				
ANR	707983	CompoundStatement		36:2:906:962	707762	26					
ANR	707984	IdentifierDeclStatement	"ut64 addr = rva ( r -> bin , reloc -> paddr , reloc -> vaddr , va ) ;"	1534:2:44182:44238	707762	0	True				
ANR	707985	IdentifierDecl	"addr = rva ( r -> bin , reloc -> paddr , reloc -> vaddr , va )"		707762	0					
ANR	707986	IdentifierDeclType	ut64		707762	0					
ANR	707987	Identifier	addr		707762	1					
ANR	707988	AssignmentExpression	"addr = rva ( r -> bin , reloc -> paddr , reloc -> vaddr , va )"		707762	2		=			
ANR	707989	Identifier	addr		707762	0					
ANR	707990	CallExpression	"rva ( r -> bin , reloc -> paddr , reloc -> vaddr , va )"		707762	1					
ANR	707991	Callee	rva		707762	0					
ANR	707992	Identifier	rva		707762	0					
ANR	707993	ArgumentList	r -> bin		707762	1					
ANR	707994	Argument	r -> bin		707762	0					
ANR	707995	PtrMemberAccess	r -> bin		707762	0					
ANR	707996	Identifier	r		707762	0					
ANR	707997	Identifier	bin		707762	1					
ANR	707998	Argument	reloc -> paddr		707762	1					
ANR	707999	PtrMemberAccess	reloc -> paddr		707762	0					
ANR	708000	Identifier	reloc		707762	0					
ANR	708001	Identifier	paddr		707762	1					
ANR	708002	Argument	reloc -> vaddr		707762	2					
ANR	708003	PtrMemberAccess	reloc -> vaddr		707762	0					
ANR	708004	Identifier	reloc		707762	0					
ANR	708005	Identifier	vaddr		707762	1					
ANR	708006	Argument	va		707762	3					
ANR	708007	Identifier	va		707762	0					
ANR	708008	IfStatement	if ( IS_MODE_SET ( mode ) && ( is_section_reloc ( reloc ) || is_file_reloc ( reloc ) ) )		707762	1					
ANR	708009	Condition	IS_MODE_SET ( mode ) && ( is_section_reloc ( reloc ) || is_file_reloc ( reloc ) )	1535:6:44246:44318	707762	0	True				
ANR	708010	AndExpression	IS_MODE_SET ( mode ) && ( is_section_reloc ( reloc ) || is_file_reloc ( reloc ) )		707762	0		&&			
ANR	708011	CallExpression	IS_MODE_SET ( mode )		707762	0					
ANR	708012	Callee	IS_MODE_SET		707762	0					
ANR	708013	Identifier	IS_MODE_SET		707762	0					
ANR	708014	ArgumentList	mode		707762	1					
ANR	708015	Argument	mode		707762	0					
ANR	708016	Identifier	mode		707762	0					
ANR	708017	OrExpression	is_section_reloc ( reloc ) || is_file_reloc ( reloc )		707762	1		||			
ANR	708018	CallExpression	is_section_reloc ( reloc )		707762	0					
ANR	708019	Callee	is_section_reloc		707762	0					
ANR	708020	Identifier	is_section_reloc		707762	0					
ANR	708021	ArgumentList	reloc		707762	1					
ANR	708022	Argument	reloc		707762	0					
ANR	708023	Identifier	reloc		707762	0					
ANR	708024	CallExpression	is_file_reloc ( reloc )		707762	1					
ANR	708025	Callee	is_file_reloc		707762	0					
ANR	708026	Identifier	is_file_reloc		707762	0					
ANR	708027	ArgumentList	reloc		707762	1					
ANR	708028	Argument	reloc		707762	0					
ANR	708029	Identifier	reloc		707762	0					
ANR	708030	CompoundStatement		37:81:1045:1045	707762	1					
ANR	708031	ElseStatement	else		707762	0					
ANR	708032	IfStatement	if ( IS_MODE_SET ( mode ) )		707762	0					
ANR	708033	Condition	IS_MODE_SET ( mode )	1540:13:44468:44485	707762	0	True				
ANR	708034	CallExpression	IS_MODE_SET ( mode )		707762	0					
ANR	708035	Callee	IS_MODE_SET		707762	0					
ANR	708036	Identifier	IS_MODE_SET		707762	0					
ANR	708037	ArgumentList	mode		707762	1					
ANR	708038	Argument	mode		707762	0					
ANR	708039	Identifier	mode		707762	0					
ANR	708040	CompoundStatement		42:33:1212:1212	707762	1					
ANR	708041	ExpressionStatement	"set_bin_relocs ( r , reloc , addr , & db , & sdb_module )"	1541:3:44493:44542	707762	0	True				
ANR	708042	CallExpression	"set_bin_relocs ( r , reloc , addr , & db , & sdb_module )"		707762	0					
ANR	708043	Callee	set_bin_relocs		707762	0					
ANR	708044	Identifier	set_bin_relocs		707762	0					
ANR	708045	ArgumentList	r		707762	1					
ANR	708046	Argument	r		707762	0					
ANR	708047	Identifier	r		707762	0					
ANR	708048	Argument	reloc		707762	1					
ANR	708049	Identifier	reloc		707762	0					
ANR	708050	Argument	addr		707762	2					
ANR	708051	Identifier	addr		707762	0					
ANR	708052	Argument	& db		707762	3					
ANR	708053	UnaryOperationExpression	& db		707762	0					
ANR	708054	UnaryOperator	&		707762	0					
ANR	708055	Identifier	db		707762	1					
ANR	708056	Argument	& sdb_module		707762	4					
ANR	708057	UnaryOperationExpression	& sdb_module		707762	0					
ANR	708058	UnaryOperator	&		707762	0					
ANR	708059	Identifier	sdb_module		707762	1					
ANR	708060	ExpressionStatement	"add_metadata ( r , reloc , addr , mode )"	1542:3:44547:44582	707762	1	True				
ANR	708061	CallExpression	"add_metadata ( r , reloc , addr , mode )"		707762	0					
ANR	708062	Callee	add_metadata		707762	0					
ANR	708063	Identifier	add_metadata		707762	0					
ANR	708064	ArgumentList	r		707762	1					
ANR	708065	Argument	r		707762	0					
ANR	708066	Identifier	r		707762	0					
ANR	708067	Argument	reloc		707762	1					
ANR	708068	Identifier	reloc		707762	0					
ANR	708069	Argument	addr		707762	2					
ANR	708070	Identifier	addr		707762	0					
ANR	708071	Argument	mode		707762	3					
ANR	708072	Identifier	mode		707762	0					
ANR	708073	ElseStatement	else		707762	0					
ANR	708074	IfStatement	if ( IS_MODE_SIMPLE ( mode ) )		707762	0					
ANR	708075	Condition	IS_MODE_SIMPLE ( mode )	1543:13:44597:44617	707762	0	True				
ANR	708076	CallExpression	IS_MODE_SIMPLE ( mode )		707762	0					
ANR	708077	Callee	IS_MODE_SIMPLE		707762	0					
ANR	708078	Identifier	IS_MODE_SIMPLE		707762	0					
ANR	708079	ArgumentList	mode		707762	1					
ANR	708080	Argument	mode		707762	0					
ANR	708081	Identifier	mode		707762	0					
ANR	708082	CompoundStatement		45:36:1344:1344	707762	1					
ANR	708083	Statement	r_cons_printf	1544:3:44625:44637	707762	0	True				
ANR	708084	Statement	(	1544:17:44639:44639	707762	1	True				
ANR	708085	Statement	"""0x%08"""	1544:18:44640:44646	707762	2	True				
ANR	708086	Statement	PFMT64x	1544:25:44647:44653	707762	3	True				
ANR	708087	Statement	"""  %s\\n"""	1544:32:44654:44661	707762	4	True				
ANR	708088	Statement	","	1544:40:44662:44662	707762	5	True				
ANR	708089	Statement	addr	1544:42:44664:44667	707762	6	True				
ANR	708090	Statement	","	1544:46:44668:44668	707762	7	True				
ANR	708091	Statement	reloc	1544:48:44670:44674	707762	8	True				
ANR	708092	Statement	->	1544:53:44675:44676	707762	9	True				
ANR	708093	Statement	import	1544:55:44677:44682	707762	10	True				
ANR	708094	Statement	?	1544:62:44684:44684	707762	11	True				
ANR	708095	Statement	reloc	1544:64:44686:44690	707762	12	True				
ANR	708096	Statement	->	1544:69:44691:44692	707762	13	True				
ANR	708097	Statement	import	1544:71:44693:44698	707762	14	True				
ANR	708098	Statement	->	1544:77:44699:44700	707762	15	True				
ANR	708099	Label	name :	1544:79:44701:44706	707762	16	True				
ANR	708100	Identifier	name		707762	0					
ANR	708101	Statement	""""""	1544:86:44708:44709	707762	17	True				
ANR	708102	Statement	)	1544:88:44710:44710	707762	18	True				
ANR	708103	ExpressionStatement		1544:89:44711:44711	707762	19	True				
ANR	708104	ElseStatement	else		707762	0					
ANR	708105	IfStatement	if ( IS_MODE_RAD ( mode ) )		707762	0					
ANR	708106	Condition	IS_MODE_RAD ( mode )	1545:13:44726:44743	707762	0	True				
ANR	708107	CallExpression	IS_MODE_RAD ( mode )		707762	0					
ANR	708108	Callee	IS_MODE_RAD		707762	0					
ANR	708109	Identifier	IS_MODE_RAD		707762	0					
ANR	708110	ArgumentList	mode		707762	1					
ANR	708111	Argument	mode		707762	0					
ANR	708112	Identifier	mode		707762	0					
ANR	708113	CompoundStatement		48:3:1475:1596	707762	1					
ANR	708114	IdentifierDeclStatement	char * name = reloc -> import ? strdup ( reloc -> import -> name ) : ( reloc -> symbol ? strdup ( reloc -> symbol -> name ) : NULL ) ;	1546:3:44751:44872	707762	0	True				
ANR	708115	IdentifierDecl	* name = reloc -> import ? strdup ( reloc -> import -> name ) : ( reloc -> symbol ? strdup ( reloc -> symbol -> name ) : NULL )		707762	0					
ANR	708116	IdentifierDeclType	char *		707762	0					
ANR	708117	Identifier	name		707762	1					
ANR	708118	AssignmentExpression	* name = reloc -> import ? strdup ( reloc -> import -> name ) : ( reloc -> symbol ? strdup ( reloc -> symbol -> name ) : NULL )		707762	2		=			
ANR	708119	Identifier	name		707762	0					
ANR	708120	ConditionalExpression	reloc -> import ? strdup ( reloc -> import -> name ) : ( reloc -> symbol ? strdup ( reloc -> symbol -> name ) : NULL )		707762	1					
ANR	708121	Condition	reloc -> import		707762	0					
ANR	708122	PtrMemberAccess	reloc -> import		707762	0					
ANR	708123	Identifier	reloc		707762	0					
ANR	708124	Identifier	import		707762	1					
ANR	708125	CallExpression	strdup ( reloc -> import -> name )		707762	1					
ANR	708126	Callee	strdup		707762	0					
ANR	708127	Identifier	strdup		707762	0					
ANR	708128	ArgumentList	reloc -> import -> name		707762	1					
ANR	708129	Argument	reloc -> import -> name		707762	0					
ANR	708130	PtrMemberAccess	reloc -> import -> name		707762	0					
ANR	708131	PtrMemberAccess	reloc -> import		707762	0					
ANR	708132	Identifier	reloc		707762	0					
ANR	708133	Identifier	import		707762	1					
ANR	708134	Identifier	name		707762	1					
ANR	708135	ConditionalExpression	reloc -> symbol ? strdup ( reloc -> symbol -> name ) : NULL		707762	2					
ANR	708136	Condition	reloc -> symbol		707762	0					
ANR	708137	PtrMemberAccess	reloc -> symbol		707762	0					
ANR	708138	Identifier	reloc		707762	0					
ANR	708139	Identifier	symbol		707762	1					
ANR	708140	CallExpression	strdup ( reloc -> symbol -> name )		707762	1					
ANR	708141	Callee	strdup		707762	0					
ANR	708142	Identifier	strdup		707762	0					
ANR	708143	ArgumentList	reloc -> symbol -> name		707762	1					
ANR	708144	Argument	reloc -> symbol -> name		707762	0					
ANR	708145	PtrMemberAccess	reloc -> symbol -> name		707762	0					
ANR	708146	PtrMemberAccess	reloc -> symbol		707762	0					
ANR	708147	Identifier	reloc		707762	0					
ANR	708148	Identifier	symbol		707762	1					
ANR	708149	Identifier	name		707762	1					
ANR	708150	Identifier	NULL		707762	2					
ANR	708151	IfStatement	if ( name && bin_demangle )		707762	1					
ANR	708152	Condition	name && bin_demangle	1549:7:44881:44900	707762	0	True				
ANR	708153	AndExpression	name && bin_demangle		707762	0		&&			
ANR	708154	Identifier	name		707762	0					
ANR	708155	Identifier	bin_demangle		707762	1					
ANR	708156	CompoundStatement		52:4:1633:1700	707762	1					
ANR	708157	IdentifierDeclStatement	"char * mn = r_bin_demangle ( r -> bin -> cur , NULL , name , addr , keep_lib ) ;"	1550:4:44909:44976	707762	0	True				
ANR	708158	IdentifierDecl	"* mn = r_bin_demangle ( r -> bin -> cur , NULL , name , addr , keep_lib )"		707762	0					
ANR	708159	IdentifierDeclType	char *		707762	0					
ANR	708160	Identifier	mn		707762	1					
ANR	708161	AssignmentExpression	"* mn = r_bin_demangle ( r -> bin -> cur , NULL , name , addr , keep_lib )"		707762	2		=			
ANR	708162	Identifier	mn		707762	0					
ANR	708163	CallExpression	"r_bin_demangle ( r -> bin -> cur , NULL , name , addr , keep_lib )"		707762	1					
ANR	708164	Callee	r_bin_demangle		707762	0					
ANR	708165	Identifier	r_bin_demangle		707762	0					
ANR	708166	ArgumentList	r -> bin -> cur		707762	1					
ANR	708167	Argument	r -> bin -> cur		707762	0					
ANR	708168	PtrMemberAccess	r -> bin -> cur		707762	0					
ANR	708169	PtrMemberAccess	r -> bin		707762	0					
ANR	708170	Identifier	r		707762	0					
ANR	708171	Identifier	bin		707762	1					
ANR	708172	Identifier	cur		707762	1					
ANR	708173	Argument	NULL		707762	1					
ANR	708174	Identifier	NULL		707762	0					
ANR	708175	Argument	name		707762	2					
ANR	708176	Identifier	name		707762	0					
ANR	708177	Argument	addr		707762	3					
ANR	708178	Identifier	addr		707762	0					
ANR	708179	Argument	keep_lib		707762	4					
ANR	708180	Identifier	keep_lib		707762	0					
ANR	708181	IfStatement	if ( mn )		707762	1					
ANR	708182	Condition	mn	1551:8:44986:44987	707762	0	True				
ANR	708183	Identifier	mn		707762	0					
ANR	708184	CompoundStatement		53:12:1714:1714	707762	1					
ANR	708185	ExpressionStatement	free ( name )	1552:5:44997:45008	707762	0	True				
ANR	708186	CallExpression	free ( name )		707762	0					
ANR	708187	Callee	free		707762	0					
ANR	708188	Identifier	free		707762	0					
ANR	708189	ArgumentList	name		707762	1					
ANR	708190	Argument	name		707762	0					
ANR	708191	Identifier	name		707762	0					
ANR	708192	ExpressionStatement	name = mn	1553:5:45015:45024	707762	1	True				
ANR	708193	AssignmentExpression	name = mn		707762	0		=			
ANR	708194	Identifier	name		707762	0					
ANR	708195	Identifier	mn		707762	1					
ANR	708196	IfStatement	if ( name )		707762	2					
ANR	708197	Condition	name	1556:7:45044:45047	707762	0	True				
ANR	708198	Identifier	name		707762	0					
ANR	708199	CompoundStatement		60:4:1804:1840	707762	1					
ANR	708200	IdentifierDeclStatement	int reloc_size = 4 ;	1557:4:45056:45074	707762	0	True				
ANR	708201	IdentifierDecl	reloc_size = 4		707762	0					
ANR	708202	IdentifierDeclType	int		707762	0					
ANR	708203	Identifier	reloc_size		707762	1					
ANR	708204	AssignmentExpression	reloc_size = 4		707762	2		=			
ANR	708205	Identifier	reloc_size		707762	0					
ANR	708206	PrimaryExpression	4		707762	1					
ANR	708207	IdentifierDeclStatement	char * n = __filterQuotedShell ( name ) ;	1558:4:45080:45116	707762	1	True				
ANR	708208	IdentifierDecl	* n = __filterQuotedShell ( name )		707762	0					
ANR	708209	IdentifierDeclType	char *		707762	0					
ANR	708210	Identifier	n		707762	1					
ANR	708211	AssignmentExpression	* n = __filterQuotedShell ( name )		707762	2		=			
ANR	708212	Identifier	n		707762	0					
ANR	708213	CallExpression	__filterQuotedShell ( name )		707762	1					
ANR	708214	Callee	__filterQuotedShell		707762	0					
ANR	708215	Identifier	__filterQuotedShell		707762	0					
ANR	708216	ArgumentList	name		707762	1					
ANR	708217	Argument	name		707762	0					
ANR	708218	Identifier	name		707762	0					
ANR	708219	Statement	r_cons_printf	1559:4:45122:45134	707762	2	True				
ANR	708220	Statement	(	1559:18:45136:45136	707762	3	True				
ANR	708221	Statement	"""\\""f %s%s%s %d 0x%08"""	1559:19:45137:45157	707762	4	True				
ANR	708222	Statement	PFMT64x	1559:40:45158:45164	707762	5	True				
ANR	708223	Statement	"""\\""\\n"""	1559:47:45165:45170	707762	6	True				
ANR	708224	Statement	","	1559:53:45171:45171	707762	7	True				
ANR	708225	Statement	r	1560:5:45178:45178	707762	8	True				
ANR	708226	Statement	->	1560:6:45179:45180	707762	9	True				
ANR	708227	Statement	bin	1560:8:45181:45183	707762	10	True				
ANR	708228	Statement	->	1560:11:45184:45185	707762	11	True				
ANR	708229	Statement	prefix	1560:13:45186:45191	707762	12	True				
ANR	708230	Statement	?	1560:20:45193:45193	707762	13	True				
ANR	708231	Statement	r	1560:22:45195:45195	707762	14	True				
ANR	708232	Statement	->	1560:23:45196:45197	707762	15	True				
ANR	708233	Statement	bin	1560:25:45198:45200	707762	16	True				
ANR	708234	Statement	->	1560:28:45201:45202	707762	17	True				
ANR	708235	Label	prefix :	1560:30:45203:45210	707762	18	True				
ANR	708236	Identifier	prefix		707762	0					
ANR	708237	Statement	"""reloc."""	1560:39:45212:45219	707762	19	True				
ANR	708238	Statement	","	1560:47:45220:45220	707762	20	True				
ANR	708239	Statement	r	1561:5:45227:45227	707762	21	True				
ANR	708240	Statement	->	1561:6:45228:45229	707762	22	True				
ANR	708241	Statement	bin	1561:8:45230:45232	707762	23	True				
ANR	708242	Statement	->	1561:11:45233:45234	707762	24	True				
ANR	708243	Statement	prefix	1561:13:45235:45240	707762	25	True				
ANR	708244	Statement	?	1561:20:45242:45242	707762	26	True				
ANR	708245	Statement	"""."""	1561:22:45244:45246	707762	27	True				
ANR	708246	Statement	:	1561:26:45248:45248	707762	28	True				
ANR	708247	Statement	""""""	1561:28:45250:45251	707762	29	True				
ANR	708248	Statement	","	1561:30:45252:45252	707762	30	True				
ANR	708249	Statement	n	1561:32:45254:45254	707762	31	True				
ANR	708250	Statement	","	1561:33:45255:45255	707762	32	True				
ANR	708251	Statement	reloc_size	1561:35:45257:45266	707762	33	True				
ANR	708252	Statement	","	1561:45:45267:45267	707762	34	True				
ANR	708253	Statement	addr	1561:47:45269:45272	707762	35	True				
ANR	708254	Statement	)	1561:51:45273:45273	707762	36	True				
ANR	708255	ExpressionStatement		1561:52:45274:45274	707762	37	True				
ANR	708256	ExpressionStatement	"add_metadata ( r , reloc , addr , mode )"	1562:4:45280:45315	707762	38	True				
ANR	708257	CallExpression	"add_metadata ( r , reloc , addr , mode )"		707762	0					
ANR	708258	Callee	add_metadata		707762	0					
ANR	708259	Identifier	add_metadata		707762	0					
ANR	708260	ArgumentList	r		707762	1					
ANR	708261	Argument	r		707762	0					
ANR	708262	Identifier	r		707762	0					
ANR	708263	Argument	reloc		707762	1					
ANR	708264	Identifier	reloc		707762	0					
ANR	708265	Argument	addr		707762	2					
ANR	708266	Identifier	addr		707762	0					
ANR	708267	Argument	mode		707762	3					
ANR	708268	Identifier	mode		707762	0					
ANR	708269	ExpressionStatement	free ( n )	1563:4:45321:45329	707762	39	True				
ANR	708270	CallExpression	free ( n )		707762	0					
ANR	708271	Callee	free		707762	0					
ANR	708272	Identifier	free		707762	0					
ANR	708273	ArgumentList	n		707762	1					
ANR	708274	Argument	n		707762	0					
ANR	708275	Identifier	n		707762	0					
ANR	708276	ExpressionStatement	free ( name )	1564:4:45335:45346	707762	40	True				
ANR	708277	CallExpression	free ( name )		707762	0					
ANR	708278	Callee	free		707762	0					
ANR	708279	Identifier	free		707762	0					
ANR	708280	ArgumentList	name		707762	1					
ANR	708281	Argument	name		707762	0					
ANR	708282	Identifier	name		707762	0					
ANR	708283	ElseStatement	else		707762	0					
ANR	708284	IfStatement	if ( IS_MODE_JSON ( mode ) )		707762	0					
ANR	708285	Condition	IS_MODE_JSON ( mode )	1566:13:45366:45384	707762	0	True				
ANR	708286	CallExpression	IS_MODE_JSON ( mode )		707762	0					
ANR	708287	Callee	IS_MODE_JSON		707762	0					
ANR	708288	Identifier	IS_MODE_JSON		707762	0					
ANR	708289	ArgumentList	mode		707762	1					
ANR	708290	Argument	mode		707762	0					
ANR	708291	Identifier	mode		707762	0					
ANR	708292	CompoundStatement		68:34:2111:2111	707762	1					
ANR	708293	IfStatement	if ( pj )		707762	0					
ANR	708294	Condition	pj	1567:7:45396:45397	707762	0	True				
ANR	708295	Identifier	pj		707762	0					
ANR	708296	CompoundStatement		72:4:2166:2186	707762	1					
ANR	708297	ExpressionStatement	pj_o ( pj )	1568:4:45406:45415	707762	0	True				
ANR	708298	CallExpression	pj_o ( pj )		707762	0					
ANR	708299	Callee	pj_o		707762	0					
ANR	708300	Identifier	pj_o		707762	0					
ANR	708301	ArgumentList	pj		707762	1					
ANR	708302	Argument	pj		707762	0					
ANR	708303	Identifier	pj		707762	0					
ANR	708304	IdentifierDeclStatement	char * mn = NULL ;	1569:4:45421:45436	707762	1	True				
ANR	708305	IdentifierDecl	* mn = NULL		707762	0					
ANR	708306	IdentifierDeclType	char *		707762	0					
ANR	708307	Identifier	mn		707762	1					
ANR	708308	AssignmentExpression	* mn = NULL		707762	2		=			
ANR	708309	Identifier	NULL		707762	0					
ANR	708310	Identifier	NULL		707762	1					
ANR	708311	IdentifierDeclStatement	char * relname = NULL ;	1570:4:45442:45462	707762	2	True				
ANR	708312	IdentifierDecl	* relname = NULL		707762	0					
ANR	708313	IdentifierDeclType	char *		707762	0					
ANR	708314	Identifier	relname		707762	1					
ANR	708315	AssignmentExpression	* relname = NULL		707762	2		=			
ANR	708316	Identifier	NULL		707762	0					
ANR	708317	Identifier	NULL		707762	1					
ANR	708318	IfStatement	if ( reloc -> import )		707762	3					
ANR	708319	Condition	reloc -> import	1573:8:45549:45561	707762	0	True				
ANR	708320	PtrMemberAccess	reloc -> import		707762	0					
ANR	708321	Identifier	reloc		707762	0					
ANR	708322	Identifier	import		707762	1					
ANR	708323	CompoundStatement		75:23:2288:2288	707762	1					
ANR	708324	ExpressionStatement	"mn = r_bin_demangle ( r -> bin -> cur , lang , reloc -> import -> name , addr , keep_lib )"	1574:5:45571:45647	707762	0	True				
ANR	708325	AssignmentExpression	"mn = r_bin_demangle ( r -> bin -> cur , lang , reloc -> import -> name , addr , keep_lib )"		707762	0		=			
ANR	708326	Identifier	mn		707762	0					
ANR	708327	CallExpression	"r_bin_demangle ( r -> bin -> cur , lang , reloc -> import -> name , addr , keep_lib )"		707762	1					
ANR	708328	Callee	r_bin_demangle		707762	0					
ANR	708329	Identifier	r_bin_demangle		707762	0					
ANR	708330	ArgumentList	r -> bin -> cur		707762	1					
ANR	708331	Argument	r -> bin -> cur		707762	0					
ANR	708332	PtrMemberAccess	r -> bin -> cur		707762	0					
ANR	708333	PtrMemberAccess	r -> bin		707762	0					
ANR	708334	Identifier	r		707762	0					
ANR	708335	Identifier	bin		707762	1					
ANR	708336	Identifier	cur		707762	1					
ANR	708337	Argument	lang		707762	1					
ANR	708338	Identifier	lang		707762	0					
ANR	708339	Argument	reloc -> import -> name		707762	2					
ANR	708340	PtrMemberAccess	reloc -> import -> name		707762	0					
ANR	708341	PtrMemberAccess	reloc -> import		707762	0					
ANR	708342	Identifier	reloc		707762	0					
ANR	708343	Identifier	import		707762	1					
ANR	708344	Identifier	name		707762	1					
ANR	708345	Argument	addr		707762	3					
ANR	708346	Identifier	addr		707762	0					
ANR	708347	Argument	keep_lib		707762	4					
ANR	708348	Identifier	keep_lib		707762	0					
ANR	708349	ExpressionStatement	relname = strdup ( reloc -> import -> name )	1575:5:45654:45692	707762	1	True				
ANR	708350	AssignmentExpression	relname = strdup ( reloc -> import -> name )		707762	0		=			
ANR	708351	Identifier	relname		707762	0					
ANR	708352	CallExpression	strdup ( reloc -> import -> name )		707762	1					
ANR	708353	Callee	strdup		707762	0					
ANR	708354	Identifier	strdup		707762	0					
ANR	708355	ArgumentList	reloc -> import -> name		707762	1					
ANR	708356	Argument	reloc -> import -> name		707762	0					
ANR	708357	PtrMemberAccess	reloc -> import -> name		707762	0					
ANR	708358	PtrMemberAccess	reloc -> import		707762	0					
ANR	708359	Identifier	reloc		707762	0					
ANR	708360	Identifier	import		707762	1					
ANR	708361	Identifier	name		707762	1					
ANR	708362	ElseStatement	else		707762	0					
ANR	708363	IfStatement	if ( reloc -> symbol )		707762	0					
ANR	708364	Condition	reloc -> symbol	1576:15:45709:45721	707762	0	True				
ANR	708365	PtrMemberAccess	reloc -> symbol		707762	0					
ANR	708366	Identifier	reloc		707762	0					
ANR	708367	Identifier	symbol		707762	1					
ANR	708368	CompoundStatement		78:30:2448:2448	707762	1					
ANR	708369	ExpressionStatement	"mn = r_bin_demangle ( r -> bin -> cur , lang , reloc -> symbol -> name , addr , keep_lib )"	1577:5:45731:45807	707762	0	True				
ANR	708370	AssignmentExpression	"mn = r_bin_demangle ( r -> bin -> cur , lang , reloc -> symbol -> name , addr , keep_lib )"		707762	0		=			
ANR	708371	Identifier	mn		707762	0					
ANR	708372	CallExpression	"r_bin_demangle ( r -> bin -> cur , lang , reloc -> symbol -> name , addr , keep_lib )"		707762	1					
ANR	708373	Callee	r_bin_demangle		707762	0					
ANR	708374	Identifier	r_bin_demangle		707762	0					
ANR	708375	ArgumentList	r -> bin -> cur		707762	1					
ANR	708376	Argument	r -> bin -> cur		707762	0					
ANR	708377	PtrMemberAccess	r -> bin -> cur		707762	0					
ANR	708378	PtrMemberAccess	r -> bin		707762	0					
ANR	708379	Identifier	r		707762	0					
ANR	708380	Identifier	bin		707762	1					
ANR	708381	Identifier	cur		707762	1					
ANR	708382	Argument	lang		707762	1					
ANR	708383	Identifier	lang		707762	0					
ANR	708384	Argument	reloc -> symbol -> name		707762	2					
ANR	708385	PtrMemberAccess	reloc -> symbol -> name		707762	0					
ANR	708386	PtrMemberAccess	reloc -> symbol		707762	0					
ANR	708387	Identifier	reloc		707762	0					
ANR	708388	Identifier	symbol		707762	1					
ANR	708389	Identifier	name		707762	1					
ANR	708390	Argument	addr		707762	3					
ANR	708391	Identifier	addr		707762	0					
ANR	708392	Argument	keep_lib		707762	4					
ANR	708393	Identifier	keep_lib		707762	0					
ANR	708394	ExpressionStatement	relname = strdup ( reloc -> symbol -> name )	1578:5:45814:45852	707762	1	True				
ANR	708395	AssignmentExpression	relname = strdup ( reloc -> symbol -> name )		707762	0		=			
ANR	708396	Identifier	relname		707762	0					
ANR	708397	CallExpression	strdup ( reloc -> symbol -> name )		707762	1					
ANR	708398	Callee	strdup		707762	0					
ANR	708399	Identifier	strdup		707762	0					
ANR	708400	ArgumentList	reloc -> symbol -> name		707762	1					
ANR	708401	Argument	reloc -> symbol -> name		707762	0					
ANR	708402	PtrMemberAccess	reloc -> symbol -> name		707762	0					
ANR	708403	PtrMemberAccess	reloc -> symbol		707762	0					
ANR	708404	Identifier	reloc		707762	0					
ANR	708405	Identifier	symbol		707762	1					
ANR	708406	Identifier	name		707762	1					
ANR	708407	ExpressionStatement	"pj_ks ( pj , ""name"" , ( relname && strcmp ( relname , """" ) ) ? relname : ""N/A"" )"	1582:4:45899:45970	707762	4	True				
ANR	708408	CallExpression	"pj_ks ( pj , ""name"" , ( relname && strcmp ( relname , """" ) ) ? relname : ""N/A"" )"		707762	0					
ANR	708409	Callee	pj_ks		707762	0					
ANR	708410	Identifier	pj_ks		707762	0					
ANR	708411	ArgumentList	pj		707762	1					
ANR	708412	Argument	pj		707762	0					
ANR	708413	Identifier	pj		707762	0					
ANR	708414	Argument	"""name"""		707762	1					
ANR	708415	PrimaryExpression	"""name"""		707762	0					
ANR	708416	Argument	"( relname && strcmp ( relname , """" ) ) ? relname : ""N/A"""		707762	2					
ANR	708417	ConditionalExpression	"( relname && strcmp ( relname , """" ) ) ? relname : ""N/A"""		707762	0					
ANR	708418	Condition	"relname && strcmp ( relname , """" )"		707762	0					
ANR	708419	AndExpression	"relname && strcmp ( relname , """" )"		707762	0		&&			
ANR	708420	Identifier	relname		707762	0					
ANR	708421	CallExpression	"strcmp ( relname , """" )"		707762	1					
ANR	708422	Callee	strcmp		707762	0					
ANR	708423	Identifier	strcmp		707762	0					
ANR	708424	ArgumentList	relname		707762	1					
ANR	708425	Argument	relname		707762	0					
ANR	708426	Identifier	relname		707762	0					
ANR	708427	Argument	""""""		707762	1					
ANR	708428	PrimaryExpression	""""""		707762	0					
ANR	708429	Identifier	relname		707762	1					
ANR	708430	PrimaryExpression	"""N/A"""		707762	2					
ANR	708431	ExpressionStatement	"pj_ks ( pj , ""demname"" , mn ? mn : """" )"	1583:4:45976:46011	707762	5	True				
ANR	708432	CallExpression	"pj_ks ( pj , ""demname"" , mn ? mn : """" )"		707762	0					
ANR	708433	Callee	pj_ks		707762	0					
ANR	708434	Identifier	pj_ks		707762	0					
ANR	708435	ArgumentList	pj		707762	1					
ANR	708436	Argument	pj		707762	0					
ANR	708437	Identifier	pj		707762	0					
ANR	708438	Argument	"""demname"""		707762	1					
ANR	708439	PrimaryExpression	"""demname"""		707762	0					
ANR	708440	Argument	"mn ? mn : """""		707762	2					
ANR	708441	ConditionalExpression	"mn ? mn : """""		707762	0					
ANR	708442	Condition	mn		707762	0					
ANR	708443	Identifier	mn		707762	0					
ANR	708444	Identifier	mn		707762	1					
ANR	708445	PrimaryExpression	""""""		707762	2					
ANR	708446	ExpressionStatement	"pj_ks ( pj , ""type"" , bin_reloc_type_name ( reloc ) )"	1584:4:46017:46064	707762	6	True				
ANR	708447	CallExpression	"pj_ks ( pj , ""type"" , bin_reloc_type_name ( reloc ) )"		707762	0					
ANR	708448	Callee	pj_ks		707762	0					
ANR	708449	Identifier	pj_ks		707762	0					
ANR	708450	ArgumentList	pj		707762	1					
ANR	708451	Argument	pj		707762	0					
ANR	708452	Identifier	pj		707762	0					
ANR	708453	Argument	"""type"""		707762	1					
ANR	708454	PrimaryExpression	"""type"""		707762	0					
ANR	708455	Argument	bin_reloc_type_name ( reloc )		707762	2					
ANR	708456	CallExpression	bin_reloc_type_name ( reloc )		707762	0					
ANR	708457	Callee	bin_reloc_type_name		707762	0					
ANR	708458	Identifier	bin_reloc_type_name		707762	0					
ANR	708459	ArgumentList	reloc		707762	1					
ANR	708460	Argument	reloc		707762	0					
ANR	708461	Identifier	reloc		707762	0					
ANR	708462	ExpressionStatement	"pj_kn ( pj , ""vaddr"" , reloc -> vaddr )"	1585:4:46070:46103	707762	7	True				
ANR	708463	CallExpression	"pj_kn ( pj , ""vaddr"" , reloc -> vaddr )"		707762	0					
ANR	708464	Callee	pj_kn		707762	0					
ANR	708465	Identifier	pj_kn		707762	0					
ANR	708466	ArgumentList	pj		707762	1					
ANR	708467	Argument	pj		707762	0					
ANR	708468	Identifier	pj		707762	0					
ANR	708469	Argument	"""vaddr"""		707762	1					
ANR	708470	PrimaryExpression	"""vaddr"""		707762	0					
ANR	708471	Argument	reloc -> vaddr		707762	2					
ANR	708472	PtrMemberAccess	reloc -> vaddr		707762	0					
ANR	708473	Identifier	reloc		707762	0					
ANR	708474	Identifier	vaddr		707762	1					
ANR	708475	ExpressionStatement	"pj_kn ( pj , ""paddr"" , reloc -> paddr )"	1586:4:46109:46142	707762	8	True				
ANR	708476	CallExpression	"pj_kn ( pj , ""paddr"" , reloc -> paddr )"		707762	0					
ANR	708477	Callee	pj_kn		707762	0					
ANR	708478	Identifier	pj_kn		707762	0					
ANR	708479	ArgumentList	pj		707762	1					
ANR	708480	Argument	pj		707762	0					
ANR	708481	Identifier	pj		707762	0					
ANR	708482	Argument	"""paddr"""		707762	1					
ANR	708483	PrimaryExpression	"""paddr"""		707762	0					
ANR	708484	Argument	reloc -> paddr		707762	2					
ANR	708485	PtrMemberAccess	reloc -> paddr		707762	0					
ANR	708486	Identifier	reloc		707762	0					
ANR	708487	Identifier	paddr		707762	1					
ANR	708488	IfStatement	if ( reloc -> symbol )		707762	9					
ANR	708489	Condition	reloc -> symbol	1587:8:46152:46164	707762	0	True				
ANR	708490	PtrMemberAccess	reloc -> symbol		707762	0					
ANR	708491	Identifier	reloc		707762	0					
ANR	708492	Identifier	symbol		707762	1					
ANR	708493	CompoundStatement		89:23:2891:2891	707762	1					
ANR	708494	ExpressionStatement	"pj_kn ( pj , ""sym_va"" , reloc -> symbol -> vaddr )"	1588:5:46174:46216	707762	0	True				
ANR	708495	CallExpression	"pj_kn ( pj , ""sym_va"" , reloc -> symbol -> vaddr )"		707762	0					
ANR	708496	Callee	pj_kn		707762	0					
ANR	708497	Identifier	pj_kn		707762	0					
ANR	708498	ArgumentList	pj		707762	1					
ANR	708499	Argument	pj		707762	0					
ANR	708500	Identifier	pj		707762	0					
ANR	708501	Argument	"""sym_va"""		707762	1					
ANR	708502	PrimaryExpression	"""sym_va"""		707762	0					
ANR	708503	Argument	reloc -> symbol -> vaddr		707762	2					
ANR	708504	PtrMemberAccess	reloc -> symbol -> vaddr		707762	0					
ANR	708505	PtrMemberAccess	reloc -> symbol		707762	0					
ANR	708506	Identifier	reloc		707762	0					
ANR	708507	Identifier	symbol		707762	1					
ANR	708508	Identifier	vaddr		707762	1					
ANR	708509	ExpressionStatement	"pj_kb ( pj , ""is_ifunc"" , reloc -> is_ifunc )"	1590:4:46228:46267	707762	10	True				
ANR	708510	CallExpression	"pj_kb ( pj , ""is_ifunc"" , reloc -> is_ifunc )"		707762	0					
ANR	708511	Callee	pj_kb		707762	0					
ANR	708512	Identifier	pj_kb		707762	0					
ANR	708513	ArgumentList	pj		707762	1					
ANR	708514	Argument	pj		707762	0					
ANR	708515	Identifier	pj		707762	0					
ANR	708516	Argument	"""is_ifunc"""		707762	1					
ANR	708517	PrimaryExpression	"""is_ifunc"""		707762	0					
ANR	708518	Argument	reloc -> is_ifunc		707762	2					
ANR	708519	PtrMemberAccess	reloc -> is_ifunc		707762	0					
ANR	708520	Identifier	reloc		707762	0					
ANR	708521	Identifier	is_ifunc		707762	1					
ANR	708522	ExpressionStatement	pj_end ( pj )	1592:4:46295:46306	707762	11	True				
ANR	708523	CallExpression	pj_end ( pj )		707762	0					
ANR	708524	Callee	pj_end		707762	0					
ANR	708525	Identifier	pj_end		707762	0					
ANR	708526	ArgumentList	pj		707762	1					
ANR	708527	Argument	pj		707762	0					
ANR	708528	Identifier	pj		707762	0					
ANR	708529	ExpressionStatement	free ( mn )	1594:4:46313:46322	707762	12	True				
ANR	708530	CallExpression	free ( mn )		707762	0					
ANR	708531	Callee	free		707762	0					
ANR	708532	Identifier	free		707762	0					
ANR	708533	ArgumentList	mn		707762	1					
ANR	708534	Argument	mn		707762	0					
ANR	708535	Identifier	mn		707762	0					
ANR	708536	IfStatement	if ( relname )		707762	13					
ANR	708537	Condition	relname	1595:8:46332:46338	707762	0	True				
ANR	708538	Identifier	relname		707762	0					
ANR	708539	CompoundStatement		97:17:3065:3065	707762	1					
ANR	708540	ExpressionStatement	free ( relname )	1596:5:46348:46362	707762	0	True				
ANR	708541	CallExpression	free ( relname )		707762	0					
ANR	708542	Callee	free		707762	0					
ANR	708543	Identifier	free		707762	0					
ANR	708544	ArgumentList	relname		707762	1					
ANR	708545	Argument	relname		707762	0					
ANR	708546	Identifier	relname		707762	0					
ANR	708547	ElseStatement	else		707762	0					
ANR	708548	IfStatement	if ( IS_MODE_NORMAL ( mode ) )		707762	0					
ANR	708549	Condition	IS_MODE_NORMAL ( mode )	1599:13:46388:46408	707762	0	True				
ANR	708550	CallExpression	IS_MODE_NORMAL ( mode )		707762	0					
ANR	708551	Callee	IS_MODE_NORMAL		707762	0					
ANR	708552	Identifier	IS_MODE_NORMAL		707762	0					
ANR	708553	ArgumentList	mode		707762	1					
ANR	708554	Argument	mode		707762	0					
ANR	708555	Identifier	mode		707762	0					
ANR	708556	CompoundStatement		102:3:3140:3278	707762	1					
ANR	708557	IdentifierDeclStatement	"char * name = reloc -> import ? strdup ( reloc -> import -> name ) : reloc -> symbol ? strdup ( reloc -> symbol -> name ) : strdup ( ""null"" ) ;"	1600:3:46416:46554	707762	0	True				
ANR	708558	IdentifierDecl	"* name = reloc -> import ? strdup ( reloc -> import -> name ) : reloc -> symbol ? strdup ( reloc -> symbol -> name ) : strdup ( ""null"" )"		707762	0					
ANR	708559	IdentifierDeclType	char *		707762	0					
ANR	708560	Identifier	name		707762	1					
ANR	708561	AssignmentExpression	"* name = reloc -> import ? strdup ( reloc -> import -> name ) : reloc -> symbol ? strdup ( reloc -> symbol -> name ) : strdup ( ""null"" )"		707762	2		=			
ANR	708562	Identifier	name		707762	0					
ANR	708563	ConditionalExpression	"reloc -> import ? strdup ( reloc -> import -> name ) : reloc -> symbol ? strdup ( reloc -> symbol -> name ) : strdup ( ""null"" )"		707762	1					
ANR	708564	Condition	reloc -> import		707762	0					
ANR	708565	PtrMemberAccess	reloc -> import		707762	0					
ANR	708566	Identifier	reloc		707762	0					
ANR	708567	Identifier	import		707762	1					
ANR	708568	CallExpression	strdup ( reloc -> import -> name )		707762	1					
ANR	708569	Callee	strdup		707762	0					
ANR	708570	Identifier	strdup		707762	0					
ANR	708571	ArgumentList	reloc -> import -> name		707762	1					
ANR	708572	Argument	reloc -> import -> name		707762	0					
ANR	708573	PtrMemberAccess	reloc -> import -> name		707762	0					
ANR	708574	PtrMemberAccess	reloc -> import		707762	0					
ANR	708575	Identifier	reloc		707762	0					
ANR	708576	Identifier	import		707762	1					
ANR	708577	Identifier	name		707762	1					
ANR	708578	ConditionalExpression	"reloc -> symbol ? strdup ( reloc -> symbol -> name ) : strdup ( ""null"" )"		707762	2					
ANR	708579	Condition	reloc -> symbol		707762	0					
ANR	708580	PtrMemberAccess	reloc -> symbol		707762	0					
ANR	708581	Identifier	reloc		707762	0					
ANR	708582	Identifier	symbol		707762	1					
ANR	708583	CallExpression	strdup ( reloc -> symbol -> name )		707762	1					
ANR	708584	Callee	strdup		707762	0					
ANR	708585	Identifier	strdup		707762	0					
ANR	708586	ArgumentList	reloc -> symbol -> name		707762	1					
ANR	708587	Argument	reloc -> symbol -> name		707762	0					
ANR	708588	PtrMemberAccess	reloc -> symbol -> name		707762	0					
ANR	708589	PtrMemberAccess	reloc -> symbol		707762	0					
ANR	708590	Identifier	reloc		707762	0					
ANR	708591	Identifier	symbol		707762	1					
ANR	708592	Identifier	name		707762	1					
ANR	708593	CallExpression	"strdup ( ""null"" )"		707762	2					
ANR	708594	Callee	strdup		707762	0					
ANR	708595	Identifier	strdup		707762	0					
ANR	708596	ArgumentList	"""null"""		707762	1					
ANR	708597	Argument	"""null"""		707762	0					
ANR	708598	PrimaryExpression	"""null"""		707762	0					
ANR	708599	IfStatement	if ( bin_demangle )		707762	1					
ANR	708600	Condition	bin_demangle	1605:7:46563:46574	707762	0	True				
ANR	708601	Identifier	bin_demangle		707762	0					
ANR	708602	CompoundStatement		108:4:3307:3374	707762	1					
ANR	708603	IdentifierDeclStatement	"char * mn = r_bin_demangle ( r -> bin -> cur , NULL , name , addr , keep_lib ) ;"	1606:4:46583:46650	707762	0	True				
ANR	708604	IdentifierDecl	"* mn = r_bin_demangle ( r -> bin -> cur , NULL , name , addr , keep_lib )"		707762	0					
ANR	708605	IdentifierDeclType	char *		707762	0					
ANR	708606	Identifier	mn		707762	1					
ANR	708607	AssignmentExpression	"* mn = r_bin_demangle ( r -> bin -> cur , NULL , name , addr , keep_lib )"		707762	2		=			
ANR	708608	Identifier	mn		707762	0					
ANR	708609	CallExpression	"r_bin_demangle ( r -> bin -> cur , NULL , name , addr , keep_lib )"		707762	1					
ANR	708610	Callee	r_bin_demangle		707762	0					
ANR	708611	Identifier	r_bin_demangle		707762	0					
ANR	708612	ArgumentList	r -> bin -> cur		707762	1					
ANR	708613	Argument	r -> bin -> cur		707762	0					
ANR	708614	PtrMemberAccess	r -> bin -> cur		707762	0					
ANR	708615	PtrMemberAccess	r -> bin		707762	0					
ANR	708616	Identifier	r		707762	0					
ANR	708617	Identifier	bin		707762	1					
ANR	708618	Identifier	cur		707762	1					
ANR	708619	Argument	NULL		707762	1					
ANR	708620	Identifier	NULL		707762	0					
ANR	708621	Argument	name		707762	2					
ANR	708622	Identifier	name		707762	0					
ANR	708623	Argument	addr		707762	3					
ANR	708624	Identifier	addr		707762	0					
ANR	708625	Argument	keep_lib		707762	4					
ANR	708626	Identifier	keep_lib		707762	0					
ANR	708627	IfStatement	if ( mn && * mn )		707762	1					
ANR	708628	Condition	mn && * mn	1607:8:46660:46668	707762	0	True				
ANR	708629	AndExpression	mn && * mn		707762	0		&&			
ANR	708630	Identifier	mn		707762	0					
ANR	708631	UnaryOperationExpression	* mn		707762	1					
ANR	708632	UnaryOperator	*		707762	0					
ANR	708633	Identifier	mn		707762	1					
ANR	708634	CompoundStatement		109:19:3395:3395	707762	1					
ANR	708635	ExpressionStatement	free ( name )	1608:5:46678:46689	707762	0	True				
ANR	708636	CallExpression	free ( name )		707762	0					
ANR	708637	Callee	free		707762	0					
ANR	708638	Identifier	free		707762	0					
ANR	708639	ArgumentList	name		707762	1					
ANR	708640	Argument	name		707762	0					
ANR	708641	Identifier	name		707762	0					
ANR	708642	ExpressionStatement	name = mn	1609:5:46696:46705	707762	1	True				
ANR	708643	AssignmentExpression	name = mn		707762	0		=			
ANR	708644	Identifier	name		707762	0					
ANR	708645	Identifier	mn		707762	1					
ANR	708646	Statement	r_cons_printf	1612:3:46721:46733	707762	2	True				
ANR	708647	Statement	(	1612:17:46735:46735	707762	3	True				
ANR	708648	Statement	"""vaddr=0x%08"""	1612:18:46736:46748	707762	4	True				
ANR	708649	Statement	PFMT64x	1612:31:46749:46755	707762	5	True				
ANR	708650	Statement	""" paddr=0x%08"""	1612:38:46756:46769	707762	6	True				
ANR	708651	Statement	PFMT64x	1612:52:46770:46776	707762	7	True				
ANR	708652	Statement	""" type=%s"""	1612:59:46777:46786	707762	8	True				
ANR	708653	Statement	","	1612:69:46787:46787	707762	9	True				
ANR	708654	Statement	addr	1613:4:46793:46796	707762	10	True				
ANR	708655	Statement	","	1613:8:46797:46797	707762	11	True				
ANR	708656	Statement	reloc	1613:10:46799:46803	707762	12	True				
ANR	708657	Statement	->	1613:15:46804:46805	707762	13	True				
ANR	708658	Statement	paddr	1613:17:46806:46810	707762	14	True				
ANR	708659	Statement	","	1613:22:46811:46811	707762	15	True				
ANR	708660	Statement	bin_reloc_type_name	1613:24:46813:46831	707762	16	True				
ANR	708661	Statement	(	1613:44:46833:46833	707762	17	True				
ANR	708662	Statement	reloc	1613:45:46834:46838	707762	18	True				
ANR	708663	Statement	)	1613:50:46839:46839	707762	19	True				
ANR	708664	Statement	)	1613:51:46840:46840	707762	20	True				
ANR	708665	ExpressionStatement		1613:52:46841:46841	707762	21	True				
ANR	708666	IfStatement	if ( reloc -> import && reloc -> import -> name [ 0 ] )		707762	22					
ANR	708667	Condition	reloc -> import && reloc -> import -> name [ 0 ]	1614:7:46850:46888	707762	0	True				
ANR	708668	AndExpression	reloc -> import && reloc -> import -> name [ 0 ]		707762	0		&&			
ANR	708669	PtrMemberAccess	reloc -> import		707762	0					
ANR	708670	Identifier	reloc		707762	0					
ANR	708671	Identifier	import		707762	1					
ANR	708672	ArrayIndexing	reloc -> import -> name [ 0 ]		707762	1					
ANR	708673	PtrMemberAccess	reloc -> import -> name		707762	0					
ANR	708674	PtrMemberAccess	reloc -> import		707762	0					
ANR	708675	Identifier	reloc		707762	0					
ANR	708676	Identifier	import		707762	1					
ANR	708677	Identifier	name		707762	1					
ANR	708678	PrimaryExpression	0		707762	1					
ANR	708679	CompoundStatement		116:48:3615:3615	707762	1					
ANR	708680	ExpressionStatement	"r_cons_printf ( "" %s"" , name )"	1615:4:46897:46924	707762	0	True				
ANR	708681	CallExpression	"r_cons_printf ( "" %s"" , name )"		707762	0					
ANR	708682	Callee	r_cons_printf		707762	0					
ANR	708683	Identifier	r_cons_printf		707762	0					
ANR	708684	ArgumentList	""" %s"""		707762	1					
ANR	708685	Argument	""" %s"""		707762	0					
ANR	708686	PrimaryExpression	""" %s"""		707762	0					
ANR	708687	Argument	name		707762	1					
ANR	708688	Identifier	name		707762	0					
ANR	708689	ElseStatement	else		707762	0					
ANR	708690	IfStatement	if ( reloc -> symbol && name && name [ 0 ] )		707762	0					
ANR	708691	Condition	reloc -> symbol && name && name [ 0 ]	1616:14:46940:46971	707762	0	True				
ANR	708692	AndExpression	reloc -> symbol && name && name [ 0 ]		707762	0		&&			
ANR	708693	PtrMemberAccess	reloc -> symbol		707762	0					
ANR	708694	Identifier	reloc		707762	0					
ANR	708695	Identifier	symbol		707762	1					
ANR	708696	AndExpression	name && name [ 0 ]		707762	1		&&			
ANR	708697	Identifier	name		707762	0					
ANR	708698	ArrayIndexing	name [ 0 ]		707762	1					
ANR	708699	Identifier	name		707762	0					
ANR	708700	PrimaryExpression	0		707762	1					
ANR	708701	CompoundStatement		118:48:3698:3698	707762	1					
ANR	708702	ExpressionStatement	"r_cons_printf ( "" %s"" , name )"	1617:4:46980:47007	707762	0	True				
ANR	708703	CallExpression	"r_cons_printf ( "" %s"" , name )"		707762	0					
ANR	708704	Callee	r_cons_printf		707762	0					
ANR	708705	Identifier	r_cons_printf		707762	0					
ANR	708706	ArgumentList	""" %s"""		707762	1					
ANR	708707	Argument	""" %s"""		707762	0					
ANR	708708	PrimaryExpression	""" %s"""		707762	0					
ANR	708709	Argument	name		707762	1					
ANR	708710	Identifier	name		707762	0					
ANR	708711	ExpressionStatement	R_FREE ( name )	1619:3:47017:47030	707762	23	True				
ANR	708712	CallExpression	R_FREE ( name )		707762	0					
ANR	708713	Callee	R_FREE		707762	0					
ANR	708714	Identifier	R_FREE		707762	0					
ANR	708715	ArgumentList	name		707762	1					
ANR	708716	Argument	name		707762	0					
ANR	708717	Identifier	name		707762	0					
ANR	708718	IfStatement	if ( reloc -> addend )		707762	24					
ANR	708719	Condition	reloc -> addend	1620:7:47039:47051	707762	0	True				
ANR	708720	PtrMemberAccess	reloc -> addend		707762	0					
ANR	708721	Identifier	reloc		707762	0					
ANR	708722	Identifier	addend		707762	1					
ANR	708723	CompoundStatement		122:22:3778:3778	707762	1					
ANR	708724	IfStatement	if ( ( reloc -> import || ( reloc -> symbol && ! R_STR_ISEMPTY ( name ) ) ) && reloc -> addend > 0 )		707762	0					
ANR	708725	Condition	( reloc -> import || ( reloc -> symbol && ! R_STR_ISEMPTY ( name ) ) ) && reloc -> addend > 0	1621:8:47064:47143	707762	0	True				
ANR	708726	AndExpression	( reloc -> import || ( reloc -> symbol && ! R_STR_ISEMPTY ( name ) ) ) && reloc -> addend > 0		707762	0		&&			
ANR	708727	OrExpression	reloc -> import || ( reloc -> symbol && ! R_STR_ISEMPTY ( name ) )		707762	0		||			
ANR	708728	PtrMemberAccess	reloc -> import		707762	0					
ANR	708729	Identifier	reloc		707762	0					
ANR	708730	Identifier	import		707762	1					
ANR	708731	AndExpression	reloc -> symbol && ! R_STR_ISEMPTY ( name )		707762	1		&&			
ANR	708732	PtrMemberAccess	reloc -> symbol		707762	0					
ANR	708733	Identifier	reloc		707762	0					
ANR	708734	Identifier	symbol		707762	1					
ANR	708735	UnaryOperationExpression	! R_STR_ISEMPTY ( name )		707762	1					
ANR	708736	UnaryOperator	!		707762	0					
ANR	708737	CallExpression	R_STR_ISEMPTY ( name )		707762	1					
ANR	708738	Callee	R_STR_ISEMPTY		707762	0					
ANR	708739	Identifier	R_STR_ISEMPTY		707762	0					
ANR	708740	ArgumentList	name		707762	1					
ANR	708741	Argument	name		707762	0					
ANR	708742	Identifier	name		707762	0					
ANR	708743	RelationalExpression	reloc -> addend > 0		707762	1		>			
ANR	708744	PtrMemberAccess	reloc -> addend		707762	0					
ANR	708745	Identifier	reloc		707762	0					
ANR	708746	Identifier	addend		707762	1					
ANR	708747	PrimaryExpression	0		707762	1					
ANR	708748	CompoundStatement		123:90:3870:3870	707762	1					
ANR	708749	ExpressionStatement	"r_cons_printf ( "" +"" )"	1622:5:47153:47173	707762	0	True				
ANR	708750	CallExpression	"r_cons_printf ( "" +"" )"		707762	0					
ANR	708751	Callee	r_cons_printf		707762	0					
ANR	708752	Identifier	r_cons_printf		707762	0					
ANR	708753	ArgumentList	""" +"""		707762	1					
ANR	708754	Argument	""" +"""		707762	0					
ANR	708755	PrimaryExpression	""" +"""		707762	0					
ANR	708756	IfStatement	if ( reloc -> addend < 0 )		707762	1					
ANR	708757	Condition	reloc -> addend < 0	1624:8:47189:47205	707762	0	True				
ANR	708758	RelationalExpression	reloc -> addend < 0		707762	0		<			
ANR	708759	PtrMemberAccess	reloc -> addend		707762	0					
ANR	708760	Identifier	reloc		707762	0					
ANR	708761	Identifier	addend		707762	1					
ANR	708762	PrimaryExpression	0		707762	1					
ANR	708763	CompoundStatement		126:27:3932:3932	707762	1					
ANR	708764	Statement	r_cons_printf	1625:5:47215:47227	707762	0	True				
ANR	708765	Statement	(	1625:19:47229:47229	707762	1	True				
ANR	708766	Statement	""" - 0x%08"""	1625:20:47230:47239	707762	2	True				
ANR	708767	Statement	PFMT64x	1625:30:47240:47246	707762	3	True				
ANR	708768	Statement	","	1625:37:47247:47247	707762	4	True				
ANR	708769	Statement	-	1625:39:47249:47249	707762	5	True				
ANR	708770	Statement	reloc	1625:40:47250:47254	707762	6	True				
ANR	708771	Statement	->	1625:45:47255:47256	707762	7	True				
ANR	708772	Statement	addend	1625:47:47257:47262	707762	8	True				
ANR	708773	Statement	)	1625:53:47263:47263	707762	9	True				
ANR	708774	ExpressionStatement		1625:54:47264:47264	707762	10	True				
ANR	708775	ElseStatement	else		707762	0					
ANR	708776	CompoundStatement		128:11:4001:4001	707762	0					
ANR	708777	Statement	r_cons_printf	1627:5:47284:47296	707762	0	True				
ANR	708778	Statement	(	1627:19:47298:47298	707762	1	True				
ANR	708779	Statement	""" 0x%08"""	1627:20:47299:47306	707762	2	True				
ANR	708780	Statement	PFMT64x	1627:28:47307:47313	707762	3	True				
ANR	708781	Statement	","	1627:35:47314:47314	707762	4	True				
ANR	708782	Statement	reloc	1627:37:47316:47320	707762	5	True				
ANR	708783	Statement	->	1627:42:47321:47322	707762	6	True				
ANR	708784	Statement	addend	1627:44:47323:47328	707762	7	True				
ANR	708785	Statement	)	1627:50:47329:47329	707762	8	True				
ANR	708786	ExpressionStatement		1627:51:47330:47330	707762	9	True				
ANR	708787	IfStatement	if ( reloc -> is_ifunc )		707762	25					
ANR	708788	Condition	reloc -> is_ifunc	1630:7:47350:47364	707762	0	True				
ANR	708789	PtrMemberAccess	reloc -> is_ifunc		707762	0					
ANR	708790	Identifier	reloc		707762	0					
ANR	708791	Identifier	is_ifunc		707762	1					
ANR	708792	CompoundStatement		132:24:4091:4091	707762	1					
ANR	708793	ExpressionStatement	"r_cons_print ( "" (ifunc)"" )"	1631:4:47373:47398	707762	0	True				
ANR	708794	CallExpression	"r_cons_print ( "" (ifunc)"" )"		707762	0					
ANR	708795	Callee	r_cons_print		707762	0					
ANR	708796	Identifier	r_cons_print		707762	0					
ANR	708797	ArgumentList	""" (ifunc)"""		707762	1					
ANR	708798	Argument	""" (ifunc)"""		707762	0					
ANR	708799	PrimaryExpression	""" (ifunc)"""		707762	0					
ANR	708800	ExpressionStatement	r_cons_newline ( )	1633:3:47408:47425	707762	26	True				
ANR	708801	CallExpression	r_cons_newline ( )		707762	0					
ANR	708802	Callee	r_cons_newline		707762	0					
ANR	708803	Identifier	r_cons_newline		707762	0					
ANR	708804	ArgumentList			707762	1					
ANR	708805	ExpressionStatement	i ++	1635:2:47433:47436	707762	2	True				
ANR	708806	PostIncDecOperationExpression	i ++		707762	0					
ANR	708807	Identifier	i		707762	0					
ANR	708808	IncDec	++		707762	1					
ANR	708809	IfStatement	if ( IS_MODE_JSON ( mode ) )		707762	27					
ANR	708810	Condition	IS_MODE_JSON ( mode )	1637:5:47446:47464	707762	0	True				
ANR	708811	CallExpression	IS_MODE_JSON ( mode )		707762	0					
ANR	708812	Callee	IS_MODE_JSON		707762	0					
ANR	708813	Identifier	IS_MODE_JSON		707762	0					
ANR	708814	ArgumentList	mode		707762	1					
ANR	708815	Argument	mode		707762	0					
ANR	708816	Identifier	mode		707762	0					
ANR	708817	CompoundStatement		139:26:4191:4191	707762	1					
ANR	708818	ExpressionStatement	pj_end ( pj )	1639:2:47494:47505	707762	0	True				
ANR	708819	CallExpression	pj_end ( pj )		707762	0					
ANR	708820	Callee	pj_end		707762	0					
ANR	708821	Identifier	pj_end		707762	0					
ANR	708822	ArgumentList	pj		707762	1					
ANR	708823	Argument	pj		707762	0					
ANR	708824	Identifier	pj		707762	0					
ANR	708825	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	1640:2:47509:47540	707762	1	True				
ANR	708826	CallExpression	r_cons_println ( pj_string ( pj ) )		707762	0					
ANR	708827	Callee	r_cons_println		707762	0					
ANR	708828	Identifier	r_cons_println		707762	0					
ANR	708829	ArgumentList	pj_string ( pj )		707762	1					
ANR	708830	Argument	pj_string ( pj )		707762	0					
ANR	708831	CallExpression	pj_string ( pj )		707762	0					
ANR	708832	Callee	pj_string		707762	0					
ANR	708833	Identifier	pj_string		707762	0					
ANR	708834	ArgumentList	pj		707762	1					
ANR	708835	Argument	pj		707762	0					
ANR	708836	Identifier	pj		707762	0					
ANR	708837	IfStatement	if ( IS_MODE_NORMAL ( mode ) )		707762	28					
ANR	708838	Condition	IS_MODE_NORMAL ( mode )	1642:5:47550:47570	707762	0	True				
ANR	708839	CallExpression	IS_MODE_NORMAL ( mode )		707762	0					
ANR	708840	Callee	IS_MODE_NORMAL		707762	0					
ANR	708841	Identifier	IS_MODE_NORMAL		707762	0					
ANR	708842	ArgumentList	mode		707762	1					
ANR	708843	Argument	mode		707762	0					
ANR	708844	Identifier	mode		707762	0					
ANR	708845	CompoundStatement		144:28:4297:4297	707762	1					
ANR	708846	ExpressionStatement	"r_cons_printf ( ""\\n%i relocations\\n"" , i )"	1643:2:47577:47616	707762	0	True				
ANR	708847	CallExpression	"r_cons_printf ( ""\\n%i relocations\\n"" , i )"		707762	0					
ANR	708848	Callee	r_cons_printf		707762	0					
ANR	708849	Identifier	r_cons_printf		707762	0					
ANR	708850	ArgumentList	"""\\n%i relocations\\n"""		707762	1					
ANR	708851	Argument	"""\\n%i relocations\\n"""		707762	0					
ANR	708852	PrimaryExpression	"""\\n%i relocations\\n"""		707762	0					
ANR	708853	Argument	i		707762	1					
ANR	708854	Identifier	i		707762	0					
ANR	708855	IfStatement	if ( pj )		707762	29					
ANR	708856	Condition	pj	1647:5:47654:47655	707762	0	True				
ANR	708857	Identifier	pj		707762	0					
ANR	708858	CompoundStatement		149:9:4382:4382	707762	1					
ANR	708859	ExpressionStatement	pj_free ( pj )	1648:2:47662:47674	707762	0	True				
ANR	708860	CallExpression	pj_free ( pj )		707762	0					
ANR	708861	Callee	pj_free		707762	0					
ANR	708862	Identifier	pj_free		707762	0					
ANR	708863	ArgumentList	pj		707762	1					
ANR	708864	Argument	pj		707762	0					
ANR	708865	Identifier	pj		707762	0					
ANR	708866	ExpressionStatement	R_FREE ( sdb_module )	1650:1:47680:47699	707762	30	True				
ANR	708867	CallExpression	R_FREE ( sdb_module )		707762	0					
ANR	708868	Callee	R_FREE		707762	0					
ANR	708869	Identifier	R_FREE		707762	0					
ANR	708870	ArgumentList	sdb_module		707762	1					
ANR	708871	Argument	sdb_module		707762	0					
ANR	708872	Identifier	sdb_module		707762	0					
ANR	708873	ExpressionStatement	sdb_free ( db )	1651:1:47702:47715	707762	31	True				
ANR	708874	CallExpression	sdb_free ( db )		707762	0					
ANR	708875	Callee	sdb_free		707762	0					
ANR	708876	Identifier	sdb_free		707762	0					
ANR	708877	ArgumentList	db		707762	1					
ANR	708878	Argument	db		707762	0					
ANR	708879	Identifier	db		707762	0					
ANR	708880	ExpressionStatement	db = NULL	1652:1:47718:47727	707762	32	True				
ANR	708881	AssignmentExpression	db = NULL		707762	0		=			
ANR	708882	Identifier	db		707762	0					
ANR	708883	Identifier	NULL		707762	1					
ANR	708884	ExpressionStatement	R_TIME_END	1654:1:47731:47741	707762	33	True				
ANR	708885	Identifier	R_TIME_END		707762	0					
ANR	708886	ReturnStatement	return relocs != NULL ;	1655:1:47744:47765	707762	34	True				
ANR	708887	EqualityExpression	relocs != NULL		707762	0		!=			
ANR	708888	Identifier	relocs		707762	0					
ANR	708889	Identifier	NULL		707762	1					
ANR	708890	ReturnType	static int		707762	1					
ANR	708891	Identifier	bin_relocs		707762	2					
ANR	708892	ParameterList	"RCore * r , int mode , int va"		707762	3					
ANR	708893	Parameter	RCore * r	1499:22:43247:43254	707762	0	True				
ANR	708894	ParameterType	RCore *		707762	0					
ANR	708895	Identifier	r		707762	1					
ANR	708896	Parameter	int mode	1499:32:43257:43264	707762	1	True				
ANR	708897	ParameterType	int		707762	0					
ANR	708898	Identifier	mode		707762	1					
ANR	708899	Parameter	int va	1499:42:43267:43272	707762	2	True				
ANR	708900	ParameterType	int		707762	0					
ANR	708901	Identifier	va		707762	1					
ANR	708902	CFGEntryNode	ENTRY		707762		True				
ANR	708903	CFGExitNode	EXIT		707762		True				
ANR	708904	Symbol	R_FLAGS_FS_RELOCS		707762						
ANR	708905	Symbol	pj_string		707762						
ANR	708906	Symbol	reloc -> addend		707762						
ANR	708907	Symbol	VA_TRUE		707762						
ANR	708908	Symbol	reloc -> paddr		707762						
ANR	708909	Symbol	IS_MODE_SIMPLE		707762						
ANR	708910	Symbol	reloc -> symbol -> name		707762						
ANR	708911	Symbol	mode		707762						
ANR	708912	Symbol	* reloc -> symbol		707762						
ANR	708913	Symbol	reloc -> import		707762						
ANR	708914	Symbol	r_bin_get_relocs		707762						
ANR	708915	Symbol	rva		707762						
ANR	708916	Symbol	sdb_module		707762						
ANR	708917	Symbol	strcmp		707762						
ANR	708918	Symbol	mn		707762						
ANR	708919	Symbol	relname		707762						
ANR	708920	Symbol	* * * reloc		707762						
ANR	708921	Symbol	NULL		707762						
ANR	708922	Symbol	r -> bin -> cur		707762						
ANR	708923	Symbol	reloc -> symbol		707762						
ANR	708924	Symbol	iter		707762						
ANR	708925	Symbol	& db		707762						
ANR	708926	Symbol	va		707762						
ANR	708927	Symbol	__filterQuotedShell		707762						
ANR	708928	Symbol	relocs		707762						
ANR	708929	Symbol	IS_MODE_SET		707762						
ANR	708930	Symbol	reloc_size		707762						
ANR	708931	Symbol	r_bin_patch_relocs		707762						
ANR	708932	Symbol	r_config_get_i		707762						
ANR	708933	Symbol	name		707762						
ANR	708934	Symbol	* reloc -> import		707762						
ANR	708935	Symbol	reloc -> import -> name		707762						
ANR	708936	Symbol	r -> flags		707762						
ANR	708937	Symbol	* mn		707762						
ANR	708938	Symbol	reloc -> is_ifunc		707762						
ANR	708939	Symbol	r_config_get		707762						
ANR	708940	Symbol	IS_MODE_JSON		707762						
ANR	708941	Symbol	reloc -> symbol -> vaddr		707762						
ANR	708942	Symbol	r -> bin		707762						
ANR	708943	Symbol	r_bin_demangle		707762						
ANR	708944	Symbol	* r -> bin		707762						
ANR	708945	Symbol	* * r		707762						
ANR	708946	Symbol	reloc		707762						
ANR	708947	Symbol	lang		707762						
ANR	708948	Symbol	addr		707762						
ANR	708949	Symbol	* name		707762						
ANR	708950	Symbol	* reloc		707762						
ANR	708951	Symbol	bin_demangle		707762						
ANR	708952	Symbol	* reloc -> import -> name		707762						
ANR	708953	Symbol	keep_lib		707762						
ANR	708954	Symbol	& sdb_module		707762						
ANR	708955	Symbol	i		707762						
ANR	708956	Symbol	is_section_reloc		707762						
ANR	708957	Symbol	n		707762						
ANR	708958	Symbol	IS_MODE_NORMAL		707762						
ANR	708959	Symbol	reloc -> vaddr		707762						
ANR	708960	Symbol	R_STR_ISEMPTY		707762						
ANR	708961	Symbol	r		707762						
ANR	708962	Symbol	bin_reloc_type_name		707762						
ANR	708963	Symbol	* * reloc -> import		707762						
ANR	708964	Symbol	* * reloc		707762						
ANR	708965	Symbol	pj		707762						
ANR	708966	Symbol	IS_MODE_RAD		707762						
ANR	708967	Symbol	pj_new		707762						
ANR	708968	Symbol	is_file_reloc		707762						
ANR	708969	Symbol	strdup		707762						
ANR	708970	Symbol	* r		707762						
ANR	708971	Symbol	r -> config		707762						
ANR	708972	Symbol	db		707762						
ANR	708973	DeclStmt									
ANR	708974	Decl							Sdb	Sdb *	mydb
ANR	708975	DeclStmt									
ANR	708976	Decl							RList	RList *	osymbols
ANR	708977	Function	get_symbol	1664:0:47933:49096							
ANR	708978	FunctionDef	"get_symbol (RBin * bin , RList * symbols , const char * name , ut64 addr)"		708977	0					
ANR	708979	CompoundStatement		1664:86:48019:49096	708977	0					
ANR	708980	IdentifierDeclStatement	"RBinSymbol * symbol , * res = NULL ;"	1665:1:48022:48053	708977	0	True				
ANR	708981	IdentifierDecl	* symbol		708977	0					
ANR	708982	IdentifierDeclType	RBinSymbol *		708977	0					
ANR	708983	Identifier	symbol		708977	1					
ANR	708984	IdentifierDecl	* res = NULL		708977	1					
ANR	708985	IdentifierDeclType	RBinSymbol *		708977	0					
ANR	708986	Identifier	res		708977	1					
ANR	708987	AssignmentExpression	* res = NULL		708977	2		=			
ANR	708988	Identifier	NULL		708977	0					
ANR	708989	Identifier	NULL		708977	1					
ANR	708990	IdentifierDeclStatement	RListIter * iter ;	1666:1:48056:48071	708977	1	True				
ANR	708991	IdentifierDecl	* iter		708977	0					
ANR	708992	IdentifierDeclType	RListIter *		708977	0					
ANR	708993	Identifier	iter		708977	1					
ANR	708994	IfStatement	if ( mydb && symbols && symbols != osymbols )		708977	2					
ANR	708995	Condition	mydb && symbols && symbols != osymbols	1667:5:48078:48115	708977	0	True				
ANR	708996	AndExpression	mydb && symbols && symbols != osymbols		708977	0		&&			
ANR	708997	Identifier	mydb		708977	0					
ANR	708998	AndExpression	symbols && symbols != osymbols		708977	1		&&			
ANR	708999	Identifier	symbols		708977	0					
ANR	709000	EqualityExpression	symbols != osymbols		708977	1		!=			
ANR	709001	Identifier	symbols		708977	0					
ANR	709002	Identifier	osymbols		708977	1					
ANR	709003	CompoundStatement		4:45:98:98	708977	1					
ANR	709004	ExpressionStatement	sdb_free ( mydb )	1668:2:48122:48137	708977	0	True				
ANR	709005	CallExpression	sdb_free ( mydb )		708977	0					
ANR	709006	Callee	sdb_free		708977	0					
ANR	709007	Identifier	sdb_free		708977	0					
ANR	709008	ArgumentList	mydb		708977	1					
ANR	709009	Argument	mydb		708977	0					
ANR	709010	Identifier	mydb		708977	0					
ANR	709011	ExpressionStatement	mydb = NULL	1669:2:48141:48152	708977	1	True				
ANR	709012	AssignmentExpression	mydb = NULL		708977	0		=			
ANR	709013	Identifier	mydb		708977	0					
ANR	709014	Identifier	NULL		708977	1					
ANR	709015	ExpressionStatement	osymbols = symbols	1670:2:48156:48174	708977	2	True				
ANR	709016	AssignmentExpression	osymbols = symbols		708977	0		=			
ANR	709017	Identifier	osymbols		708977	0					
ANR	709018	Identifier	symbols		708977	1					
ANR	709019	IfStatement	if ( mydb )		708977	3					
ANR	709020	Condition	mydb	1672:5:48184:48187	708977	0	True				
ANR	709021	Identifier	mydb		708977	0					
ANR	709022	CompoundStatement		9:11:170:170	708977	1					
ANR	709023	IfStatement	if ( name )		708977	0					
ANR	709024	Condition	name	1673:6:48198:48201	708977	0	True				
ANR	709025	Identifier	name		708977	0					
ANR	709026	CompoundStatement		10:12:184:184	708977	1					
ANR	709027	ExpressionStatement	"res = ( RBinSymbol * ) ( void * ) ( size_t ) sdb_num_get ( mydb , sdb_fmt ( ""%x"" , sdb_hash ( name ) ) , NULL )"	1674:3:48209:48305	708977	0	True				
ANR	709028	AssignmentExpression	"res = ( RBinSymbol * ) ( void * ) ( size_t ) sdb_num_get ( mydb , sdb_fmt ( ""%x"" , sdb_hash ( name ) ) , NULL )"		708977	0		=			
ANR	709029	Identifier	res		708977	0					
ANR	709030	CastExpression	"( RBinSymbol * ) ( void * ) ( size_t ) sdb_num_get ( mydb , sdb_fmt ( ""%x"" , sdb_hash ( name ) ) , NULL )"		708977	1					
ANR	709031	CastTarget	RBinSymbol *		708977	0					
ANR	709032	CastExpression	"( void * ) ( size_t ) sdb_num_get ( mydb , sdb_fmt ( ""%x"" , sdb_hash ( name ) ) , NULL )"		708977	1					
ANR	709033	CastTarget	void *		708977	0					
ANR	709034	CastExpression	"( size_t ) sdb_num_get ( mydb , sdb_fmt ( ""%x"" , sdb_hash ( name ) ) , NULL )"		708977	1					
ANR	709035	CastTarget	size_t		708977	0					
ANR	709036	CallExpression	"sdb_num_get ( mydb , sdb_fmt ( ""%x"" , sdb_hash ( name ) ) , NULL )"		708977	1					
ANR	709037	Callee	sdb_num_get		708977	0					
ANR	709038	Identifier	sdb_num_get		708977	0					
ANR	709039	ArgumentList	mydb		708977	1					
ANR	709040	Argument	mydb		708977	0					
ANR	709041	Identifier	mydb		708977	0					
ANR	709042	Argument	"sdb_fmt ( ""%x"" , sdb_hash ( name ) )"		708977	1					
ANR	709043	CallExpression	"sdb_fmt ( ""%x"" , sdb_hash ( name ) )"		708977	0					
ANR	709044	Callee	sdb_fmt		708977	0					
ANR	709045	Identifier	sdb_fmt		708977	0					
ANR	709046	ArgumentList	"""%x"""		708977	1					
ANR	709047	Argument	"""%x"""		708977	0					
ANR	709048	PrimaryExpression	"""%x"""		708977	0					
ANR	709049	Argument	sdb_hash ( name )		708977	1					
ANR	709050	CallExpression	sdb_hash ( name )		708977	0					
ANR	709051	Callee	sdb_hash		708977	0					
ANR	709052	Identifier	sdb_hash		708977	0					
ANR	709053	ArgumentList	name		708977	1					
ANR	709054	Argument	name		708977	0					
ANR	709055	Identifier	name		708977	0					
ANR	709056	Argument	NULL		708977	2					
ANR	709057	Identifier	NULL		708977	0					
ANR	709058	ElseStatement	else		708977	0					
ANR	709059	CompoundStatement		13:9:296:296	708977	0					
ANR	709060	Statement	res	1677:3:48321:48323	708977	0	True				
ANR	709061	Statement	=	1677:7:48325:48325	708977	1	True				
ANR	709062	Statement	(	1677:9:48327:48327	708977	2	True				
ANR	709063	Statement	RBinSymbol	1677:10:48328:48337	708977	3	True				
ANR	709064	Statement	*	1677:20:48338:48338	708977	4	True				
ANR	709065	Statement	)	1677:21:48339:48339	708977	5	True				
ANR	709066	Statement	(	1677:22:48340:48340	708977	6	True				
ANR	709067	Statement	void	1677:23:48341:48344	708977	7	True				
ANR	709068	Statement	*	1677:27:48345:48345	708977	8	True				
ANR	709069	Statement	)	1677:28:48346:48346	708977	9	True				
ANR	709070	Statement	(	1677:29:48347:48347	708977	10	True				
ANR	709071	Statement	size_t	1677:30:48348:48353	708977	11	True				
ANR	709072	Statement	)	1677:36:48354:48354	708977	12	True				
ANR	709073	Statement	sdb_num_get	1678:4:48360:48370	708977	13	True				
ANR	709074	Statement	(	1678:16:48372:48372	708977	14	True				
ANR	709075	Statement	mydb	1678:17:48373:48376	708977	15	True				
ANR	709076	Statement	","	1678:21:48377:48377	708977	16	True				
ANR	709077	Statement	sdb_fmt	1678:23:48379:48385	708977	17	True				
ANR	709078	Statement	(	1678:31:48387:48387	708977	18	True				
ANR	709079	Statement	"""0x"""	1678:32:48388:48391	708977	19	True				
ANR	709080	Statement	PFMT64x	1678:36:48392:48398	708977	20	True				
ANR	709081	Statement	","	1678:43:48399:48399	708977	21	True				
ANR	709082	Statement	addr	1678:45:48401:48404	708977	22	True				
ANR	709083	Statement	)	1678:49:48405:48405	708977	23	True				
ANR	709084	Statement	","	1678:50:48406:48406	708977	24	True				
ANR	709085	Statement	NULL	1678:52:48408:48411	708977	25	True				
ANR	709086	Statement	)	1678:56:48412:48412	708977	26	True				
ANR	709087	ExpressionStatement		1678:57:48413:48413	708977	27	True				
ANR	709088	ElseStatement	else		708977	0					
ANR	709089	CompoundStatement		17:8:407:407	708977	0					
ANR	709090	ExpressionStatement	mydb = sdb_new0 ( )	1681:2:48431:48449	708977	0	True				
ANR	709091	AssignmentExpression	mydb = sdb_new0 ( )		708977	0		=			
ANR	709092	Identifier	mydb		708977	0					
ANR	709093	CallExpression	sdb_new0 ( )		708977	1					
ANR	709094	Callee	sdb_new0		708977	0					
ANR	709095	Identifier	sdb_new0		708977	0					
ANR	709096	ArgumentList			708977	1					
ANR	709097	Statement	r_list_foreach	1682:2:48453:48466	708977	1	True				
ANR	709098	Statement	(	1682:17:48468:48468	708977	2	True				
ANR	709099	Statement	symbols	1682:18:48469:48475	708977	3	True				
ANR	709100	Statement	","	1682:25:48476:48476	708977	4	True				
ANR	709101	Statement	iter	1682:27:48478:48481	708977	5	True				
ANR	709102	Statement	","	1682:31:48482:48482	708977	6	True				
ANR	709103	Statement	symbol	1682:33:48484:48489	708977	7	True				
ANR	709104	Statement	)	1682:39:48490:48490	708977	8	True				
ANR	709105	CompoundStatement		19:41:472:472	708977	9					
ANR	709106	IfStatement	if ( ! symbol -> name )		708977	0					
ANR	709107	Condition	! symbol -> name	1683:7:48501:48513	708977	0	True				
ANR	709108	UnaryOperationExpression	! symbol -> name		708977	0					
ANR	709109	UnaryOperator	!		708977	0					
ANR	709110	PtrMemberAccess	symbol -> name		708977	1					
ANR	709111	Identifier	symbol		708977	0					
ANR	709112	Identifier	name		708977	1					
ANR	709113	CompoundStatement		20:22:496:496	708977	1					
ANR	709114	ContinueStatement	continue ;	1684:4:48522:48530	708977	0	True				
ANR	709115	IfStatement	"if ( ! sdb_num_add ( mydb , sdb_fmt ( ""%x"" , sdb_hash ( symbol -> name ) ) , ( ut64 ) ( size_t ) symbol , 0 ) )"		708977	1					
ANR	709116	Condition	"! sdb_num_add ( mydb , sdb_fmt ( ""%x"" , sdb_hash ( symbol -> name ) ) , ( ut64 ) ( size_t ) symbol , 0 )"	1687:7:48576:48660	708977	0	True				
ANR	709117	UnaryOperationExpression	"! sdb_num_add ( mydb , sdb_fmt ( ""%x"" , sdb_hash ( symbol -> name ) ) , ( ut64 ) ( size_t ) symbol , 0 )"		708977	0					
ANR	709118	UnaryOperator	!		708977	0					
ANR	709119	CallExpression	"sdb_num_add ( mydb , sdb_fmt ( ""%x"" , sdb_hash ( symbol -> name ) ) , ( ut64 ) ( size_t ) symbol , 0 )"		708977	1					
ANR	709120	Callee	sdb_num_add		708977	0					
ANR	709121	Identifier	sdb_num_add		708977	0					
ANR	709122	ArgumentList	mydb		708977	1					
ANR	709123	Argument	mydb		708977	0					
ANR	709124	Identifier	mydb		708977	0					
ANR	709125	Argument	"sdb_fmt ( ""%x"" , sdb_hash ( symbol -> name ) )"		708977	1					
ANR	709126	CallExpression	"sdb_fmt ( ""%x"" , sdb_hash ( symbol -> name ) )"		708977	0					
ANR	709127	Callee	sdb_fmt		708977	0					
ANR	709128	Identifier	sdb_fmt		708977	0					
ANR	709129	ArgumentList	"""%x"""		708977	1					
ANR	709130	Argument	"""%x"""		708977	0					
ANR	709131	PrimaryExpression	"""%x"""		708977	0					
ANR	709132	Argument	sdb_hash ( symbol -> name )		708977	1					
ANR	709133	CallExpression	sdb_hash ( symbol -> name )		708977	0					
ANR	709134	Callee	sdb_hash		708977	0					
ANR	709135	Identifier	sdb_hash		708977	0					
ANR	709136	ArgumentList	symbol -> name		708977	1					
ANR	709137	Argument	symbol -> name		708977	0					
ANR	709138	PtrMemberAccess	symbol -> name		708977	0					
ANR	709139	Identifier	symbol		708977	0					
ANR	709140	Identifier	name		708977	1					
ANR	709141	Argument	( ut64 ) ( size_t ) symbol		708977	2					
ANR	709142	CastExpression	( ut64 ) ( size_t ) symbol		708977	0					
ANR	709143	CastTarget	ut64		708977	0					
ANR	709144	CastExpression	( size_t ) symbol		708977	1					
ANR	709145	CastTarget	size_t		708977	0					
ANR	709146	Identifier	symbol		708977	1					
ANR	709147	Argument	0		708977	3					
ANR	709148	PrimaryExpression	0		708977	0					
ANR	709149	CompoundStatement		24:94:643:643	708977	1					
ANR	709150	Statement	if	1691:3:48752:48753	708977	2	True				
ANR	709151	Statement	(	1691:6:48755:48755	708977	3	True				
ANR	709152	Statement	!	1691:7:48756:48756	708977	4	True				
ANR	709153	Statement	sdb_num_add	1691:8:48757:48767	708977	5	True				
ANR	709154	Statement	(	1691:20:48769:48769	708977	6	True				
ANR	709155	Statement	mydb	1691:21:48770:48773	708977	7	True				
ANR	709156	Statement	","	1691:25:48774:48774	708977	8	True				
ANR	709157	Statement	sdb_fmt	1691:27:48776:48782	708977	9	True				
ANR	709158	Statement	(	1691:35:48784:48784	708977	10	True				
ANR	709159	Statement	"""0x"""	1691:36:48785:48788	708977	11	True				
ANR	709160	Statement	PFMT64x	1691:40:48789:48795	708977	12	True				
ANR	709161	Statement	","	1691:47:48796:48796	708977	13	True				
ANR	709162	Statement	symbol	1691:49:48798:48803	708977	14	True				
ANR	709163	Statement	->	1691:55:48804:48805	708977	15	True				
ANR	709164	Statement	vaddr	1691:57:48806:48810	708977	16	True				
ANR	709165	Statement	)	1691:62:48811:48811	708977	17	True				
ANR	709166	Statement	","	1691:63:48812:48812	708977	18	True				
ANR	709167	Statement	(	1691:65:48814:48814	708977	19	True				
ANR	709168	Statement	ut64	1691:66:48815:48818	708977	20	True				
ANR	709169	Statement	)	1691:70:48819:48819	708977	21	True				
ANR	709170	Statement	(	1691:71:48820:48820	708977	22	True				
ANR	709171	Statement	size_t	1691:72:48821:48826	708977	23	True				
ANR	709172	Statement	)	1691:78:48827:48827	708977	24	True				
ANR	709173	Statement	symbol	1691:79:48828:48833	708977	25	True				
ANR	709174	Statement	","	1691:85:48834:48834	708977	26	True				
ANR	709175	Statement	0	1691:87:48836:48836	708977	27	True				
ANR	709176	Statement	)	1691:88:48837:48837	708977	28	True				
ANR	709177	Statement	)	1691:89:48838:48838	708977	29	True				
ANR	709178	CompoundStatement		28:91:820:820	708977	30					
ANR	709179	IfStatement	if ( name )		708977	31					
ANR	709180	Condition	name	1694:7:48898:48901	708977	0	True				
ANR	709181	Identifier	name		708977	0					
ANR	709182	CompoundStatement		31:13:884:884	708977	1					
ANR	709183	IfStatement	"if ( ! res && ! strcmp ( symbol -> name , name ) )"		708977	0					
ANR	709184	Condition	"! res && ! strcmp ( symbol -> name , name )"	1695:8:48914:48949	708977	0	True				
ANR	709185	AndExpression	"! res && ! strcmp ( symbol -> name , name )"		708977	0		&&			
ANR	709186	UnaryOperationExpression	! res		708977	0					
ANR	709187	UnaryOperator	!		708977	0					
ANR	709188	Identifier	res		708977	1					
ANR	709189	UnaryOperationExpression	"! strcmp ( symbol -> name , name )"		708977	1					
ANR	709190	UnaryOperator	!		708977	0					
ANR	709191	CallExpression	"strcmp ( symbol -> name , name )"		708977	1					
ANR	709192	Callee	strcmp		708977	0					
ANR	709193	Identifier	strcmp		708977	0					
ANR	709194	ArgumentList	symbol -> name		708977	1					
ANR	709195	Argument	symbol -> name		708977	0					
ANR	709196	PtrMemberAccess	symbol -> name		708977	0					
ANR	709197	Identifier	symbol		708977	0					
ANR	709198	Identifier	name		708977	1					
ANR	709199	Argument	name		708977	1					
ANR	709200	Identifier	name		708977	0					
ANR	709201	CompoundStatement		32:46:932:932	708977	1					
ANR	709202	ExpressionStatement	res = symbol	1696:5:48959:48971	708977	0	True				
ANR	709203	AssignmentExpression	res = symbol		708977	0		=			
ANR	709204	Identifier	res		708977	0					
ANR	709205	Identifier	symbol		708977	1					
ANR	709206	ElseStatement	else		708977	0					
ANR	709207	CompoundStatement		35:10:969:969	708977	0					
ANR	709208	IfStatement	if ( symbol -> vaddr == addr )		708977	0					
ANR	709209	Condition	symbol -> vaddr == addr	1699:8:48999:49019	708977	0	True				
ANR	709210	EqualityExpression	symbol -> vaddr == addr		708977	0		==			
ANR	709211	PtrMemberAccess	symbol -> vaddr		708977	0					
ANR	709212	Identifier	symbol		708977	0					
ANR	709213	Identifier	vaddr		708977	1					
ANR	709214	Identifier	addr		708977	1					
ANR	709215	CompoundStatement		36:31:1002:1002	708977	1					
ANR	709216	ExpressionStatement	res = symbol	1700:5:49029:49041	708977	0	True				
ANR	709217	AssignmentExpression	res = symbol		708977	0		=			
ANR	709218	Identifier	res		708977	0					
ANR	709219	Identifier	symbol		708977	1					
ANR	709220	ExpressionStatement	osymbols = symbols	1704:2:49060:49078	708977	10	True				
ANR	709221	AssignmentExpression	osymbols = symbols		708977	0		=			
ANR	709222	Identifier	osymbols		708977	0					
ANR	709223	Identifier	symbols		708977	1					
ANR	709224	ReturnStatement	return res ;	1706:1:49084:49094	708977	4	True				
ANR	709225	Identifier	res		708977	0					
ANR	709226	ReturnType	static RBinSymbol *		708977	1					
ANR	709227	Identifier	get_symbol		708977	2					
ANR	709228	ParameterList	"RBin * bin , RList * symbols , const char * name , ut64 addr"		708977	3					
ANR	709229	Parameter	RBin * bin	1664:30:47963:47971	708977	0	True				
ANR	709230	ParameterType	RBin *		708977	0					
ANR	709231	Identifier	bin		708977	1					
ANR	709232	Parameter	RList * symbols	1664:41:47974:47987	708977	1	True				
ANR	709233	ParameterType	RList *		708977	0					
ANR	709234	Identifier	symbols		708977	1					
ANR	709235	Parameter	const char * name	1664:57:47990:48005	708977	2	True				
ANR	709236	ParameterType	const char *		708977	0					
ANR	709237	Identifier	name		708977	1					
ANR	709238	Parameter	ut64 addr	1664:75:48008:48016	708977	3	True				
ANR	709239	ParameterType	ut64		708977	0					
ANR	709240	Identifier	addr		708977	1					
ANR	709241	CFGEntryNode	ENTRY		708977		True				
ANR	709242	CFGExitNode	EXIT		708977		True				
ANR	709243	CFGErrorNode	ERROR		708977		True				
ANR	709244	Symbol	sdb_num_get		708977						
ANR	709245	Symbol	sdb_hash		708977						
ANR	709246	Symbol	strcmp		708977						
ANR	709247	Symbol	symbol		708977						
ANR	709248	Symbol	res		708977						
ANR	709249	Symbol	sdb_new0		708977						
ANR	709250	Symbol	symbol -> vaddr		708977						
ANR	709251	Symbol	NULL		708977						
ANR	709252	Symbol	symbol -> name		708977						
ANR	709253	Symbol	bin		708977						
ANR	709254	Symbol	iter		708977						
ANR	709255	Symbol	symbols		708977						
ANR	709256	Symbol	sdb_num_add		708977						
ANR	709257	Symbol	name		708977						
ANR	709258	Symbol	mydb		708977						
ANR	709259	Symbol	osymbols		708977						
ANR	709260	Symbol	addr		708977						
ANR	709261	Symbol	* symbol		708977						
ANR	709262	Symbol	sdb_fmt		708977						
ANR	709263	DeclStmt									
ANR	709264	Decl							RList	RList *	osymbols
ANR	709265	Function	get_symbol	1710:0:49135:49515							
ANR	709266	FunctionDef	"get_symbol (RBin * bin , RList * symbols , const char * name , ut64 addr)"		709265	0					
ANR	709267	CompoundStatement		1710:86:49221:49515	709265	0					
ANR	709268	IdentifierDeclStatement	RBinSymbol * symbol ;	1711:1:49224:49242	709265	0	True				
ANR	709269	IdentifierDecl	* symbol		709265	0					
ANR	709270	IdentifierDeclType	RBinSymbol *		709265	0					
ANR	709271	Identifier	symbol		709265	1					
ANR	709272	IdentifierDeclStatement	RListIter * iter ;	1712:1:49245:49260	709265	1	True				
ANR	709273	IdentifierDecl	* iter		709265	0					
ANR	709274	IdentifierDeclType	RListIter *		709265	0					
ANR	709275	Identifier	iter		709265	1					
ANR	709276	Statement	r_list_foreach	1714:1:49316:49329	709265	2	True				
ANR	709277	Statement	(	1714:16:49331:49331	709265	3	True				
ANR	709278	Statement	symbols	1714:17:49332:49338	709265	4	True				
ANR	709279	Statement	","	1714:24:49339:49339	709265	5	True				
ANR	709280	Statement	iter	1714:26:49341:49344	709265	6	True				
ANR	709281	Statement	","	1714:30:49345:49345	709265	7	True				
ANR	709282	Statement	symbol	1714:32:49347:49352	709265	8	True				
ANR	709283	Statement	)	1714:38:49353:49353	709265	9	True				
ANR	709284	CompoundStatement		5:40:133:133	709265	10					
ANR	709285	IfStatement	if ( name )		709265	0					
ANR	709286	Condition	name	1715:6:49363:49366	709265	0	True				
ANR	709287	Identifier	name		709265	0					
ANR	709288	CompoundStatement		6:12:147:147	709265	1					
ANR	709289	IfStatement	"if ( ! strcmp ( symbol -> name , name ) )"		709265	0					
ANR	709290	Condition	"! strcmp ( symbol -> name , name )"	1716:7:49378:49405	709265	0	True				
ANR	709291	UnaryOperationExpression	"! strcmp ( symbol -> name , name )"		709265	0					
ANR	709292	UnaryOperator	!		709265	0					
ANR	709293	CallExpression	"strcmp ( symbol -> name , name )"		709265	1					
ANR	709294	Callee	strcmp		709265	0					
ANR	709295	Identifier	strcmp		709265	0					
ANR	709296	ArgumentList	symbol -> name		709265	1					
ANR	709297	Argument	symbol -> name		709265	0					
ANR	709298	PtrMemberAccess	symbol -> name		709265	0					
ANR	709299	Identifier	symbol		709265	0					
ANR	709300	Identifier	name		709265	1					
ANR	709301	Argument	name		709265	1					
ANR	709302	Identifier	name		709265	0					
ANR	709303	ReturnStatement	return symbol ;	1717:4:49412:49425	709265	1	True				
ANR	709304	Identifier	symbol		709265	0					
ANR	709305	ElseStatement	else		709265	0					
ANR	709306	CompoundStatement		9:9:214:214	709265	0					
ANR	709307	IfStatement	if ( symbol -> vaddr == addr )		709265	0					
ANR	709308	Condition	symbol -> vaddr == addr	1719:7:49445:49465	709265	0	True				
ANR	709309	EqualityExpression	symbol -> vaddr == addr		709265	0		==			
ANR	709310	PtrMemberAccess	symbol -> vaddr		709265	0					
ANR	709311	Identifier	symbol		709265	0					
ANR	709312	Identifier	vaddr		709265	1					
ANR	709313	Identifier	addr		709265	1					
ANR	709314	CompoundStatement		10:30:246:246	709265	1					
ANR	709315	ReturnStatement	return symbol ;	1720:4:49474:49487	709265	0	True				
ANR	709316	Identifier	symbol		709265	0					
ANR	709317	ReturnStatement	return NULL ;	1724:1:49502:49513	709265	11	True				
ANR	709318	Identifier	NULL		709265	0					
ANR	709319	ReturnType	static RBinSymbol *		709265	1					
ANR	709320	Identifier	get_symbol		709265	2					
ANR	709321	ParameterList	"RBin * bin , RList * symbols , const char * name , ut64 addr"		709265	3					
ANR	709322	Parameter	RBin * bin	1710:30:49165:49173	709265	0	True				
ANR	709323	ParameterType	RBin *		709265	0					
ANR	709324	Identifier	bin		709265	1					
ANR	709325	Parameter	RList * symbols	1710:41:49176:49189	709265	1	True				
ANR	709326	ParameterType	RList *		709265	0					
ANR	709327	Identifier	symbols		709265	1					
ANR	709328	Parameter	const char * name	1710:57:49192:49207	709265	2	True				
ANR	709329	ParameterType	const char *		709265	0					
ANR	709330	Identifier	name		709265	1					
ANR	709331	Parameter	ut64 addr	1710:75:49210:49218	709265	3	True				
ANR	709332	ParameterType	ut64		709265	0					
ANR	709333	Identifier	addr		709265	1					
ANR	709334	CFGEntryNode	ENTRY		709265		True				
ANR	709335	CFGExitNode	EXIT		709265		True				
ANR	709336	Symbol	strcmp		709265						
ANR	709337	Symbol	symbol		709265						
ANR	709338	Symbol	symbol -> vaddr		709265						
ANR	709339	Symbol	NULL		709265						
ANR	709340	Symbol	symbol -> name		709265						
ANR	709341	Symbol	bin		709265						
ANR	709342	Symbol	name		709265						
ANR	709343	Symbol	iter		709265						
ANR	709344	Symbol	addr		709265						
ANR	709345	Symbol	* symbol		709265						
ANR	709346	Symbol	symbols		709265						
ANR	709347	Function	r_core_bin_impaddr	1730:0:49651:50230							
ANR	709348	FunctionDef	"r_core_bin_impaddr (RBin * bin , int va , const char * name)"		709347	0					
ANR	709349	CompoundStatement		1730:67:49718:50230	709347	0					
ANR	709350	IdentifierDeclStatement	RList * symbols ;	1731:1:49721:49735	709347	0	True				
ANR	709351	IdentifierDecl	* symbols		709347	0					
ANR	709352	IdentifierDeclType	RList *		709347	0					
ANR	709353	Identifier	symbols		709347	1					
ANR	709354	IfStatement	if ( ! name || ! * name )		709347	1					
ANR	709355	Condition	! name || ! * name	1733:5:49743:49757	709347	0	True				
ANR	709356	OrExpression	! name || ! * name		709347	0		||			
ANR	709357	UnaryOperationExpression	! name		709347	0					
ANR	709358	UnaryOperator	!		709347	0					
ANR	709359	Identifier	name		709347	1					
ANR	709360	UnaryOperationExpression	! * name		709347	1					
ANR	709361	UnaryOperator	!		709347	0					
ANR	709362	UnaryOperationExpression	* name		709347	1					
ANR	709363	UnaryOperator	*		709347	0					
ANR	709364	Identifier	name		709347	1					
ANR	709365	CompoundStatement		4:22:41:41	709347	1					
ANR	709366	ReturnStatement	return false ;	1734:2:49764:49776	709347	0	True				
ANR	709367	Identifier	false		709347	0					
ANR	709368	IfStatement	if ( ! ( symbols = r_bin_get_symbols ( bin ) ) )		709347	2					
ANR	709369	Condition	! ( symbols = r_bin_get_symbols ( bin ) )	1736:5:49786:49821	709347	0	True				
ANR	709370	UnaryOperationExpression	! ( symbols = r_bin_get_symbols ( bin ) )		709347	0					
ANR	709371	UnaryOperator	!		709347	0					
ANR	709372	AssignmentExpression	symbols = r_bin_get_symbols ( bin )		709347	1		=			
ANR	709373	Identifier	symbols		709347	0					
ANR	709374	CallExpression	r_bin_get_symbols ( bin )		709347	1					
ANR	709375	Callee	r_bin_get_symbols		709347	0					
ANR	709376	Identifier	r_bin_get_symbols		709347	0					
ANR	709377	ArgumentList	bin		709347	1					
ANR	709378	Argument	bin		709347	0					
ANR	709379	Identifier	bin		709347	0					
ANR	709380	CompoundStatement		7:43:105:105	709347	1					
ANR	709381	ReturnStatement	return false ;	1737:2:49828:49840	709347	0	True				
ANR	709382	Identifier	false		709347	0					
ANR	709383	IdentifierDeclStatement	"char * impname = r_str_newf ( ""imp.%s"" , name ) ;"	1739:1:49846:49889	709347	3	True				
ANR	709384	IdentifierDecl	"* impname = r_str_newf ( ""imp.%s"" , name )"		709347	0					
ANR	709385	IdentifierDeclType	char *		709347	0					
ANR	709386	Identifier	impname		709347	1					
ANR	709387	AssignmentExpression	"* impname = r_str_newf ( ""imp.%s"" , name )"		709347	2		=			
ANR	709388	Identifier	impname		709347	0					
ANR	709389	CallExpression	"r_str_newf ( ""imp.%s"" , name )"		709347	1					
ANR	709390	Callee	r_str_newf		709347	0					
ANR	709391	Identifier	r_str_newf		709347	0					
ANR	709392	ArgumentList	"""imp.%s"""		709347	1					
ANR	709393	Argument	"""imp.%s"""		709347	0					
ANR	709394	PrimaryExpression	"""imp.%s"""		709347	0					
ANR	709395	Argument	name		709347	1					
ANR	709396	Identifier	name		709347	0					
ANR	709397	Statement	RBinSymbol	1740:1:49892:49901	709347	4	True				
ANR	709398	Statement	*	1740:12:49903:49903	709347	5	True				
ANR	709399	Statement	s	1740:13:49904:49904	709347	6	True				
ANR	709400	Statement	=	1740:15:49906:49906	709347	7	True				
ANR	709401	Statement	get_symbol	1740:17:49908:49917	709347	8	True				
ANR	709402	Statement	(	1740:28:49919:49919	709347	9	True				
ANR	709403	Statement	bin	1740:29:49920:49922	709347	10	True				
ANR	709404	Statement	","	1740:32:49923:49923	709347	11	True				
ANR	709405	Statement	symbols	1740:34:49925:49931	709347	12	True				
ANR	709406	Statement	","	1740:41:49932:49932	709347	13	True				
ANR	709407	Statement	impname	1740:43:49934:49940	709347	14	True				
ANR	709408	Statement	","	1740:50:49941:49941	709347	15	True				
ANR	709409	Statement	0L	1740:52:49943:49944	709347	16	True				
ANR	709410	Statement	L	1740:54:49945:49945	709347	17	True				
ANR	709411	Statement	)	1740:55:49946:49946	709347	18	True				
ANR	709412	ExpressionStatement		1740:56:49947:49947	709347	19	True				
ANR	709413	Statement	ut64	1742:1:49999:50002	709347	20	True				
ANR	709414	Statement	addr	1742:6:50004:50007	709347	21	True				
ANR	709415	Statement	=	1742:11:50009:50009	709347	22	True				
ANR	709416	Statement	0L	1742:13:50011:50012	709347	23	True				
ANR	709417	ExpressionStatement	L	1742:15:50013:50014	709347	24	True				
ANR	709418	Identifier	L		709347	0					
ANR	709419	IfStatement	if ( s )		709347	25					
ANR	709420	Condition	s	1743:5:50021:50021	709347	0	True				
ANR	709421	Identifier	s		709347	0					
ANR	709422	CompoundStatement		14:8:305:305	709347	1					
ANR	709423	IfStatement	if ( va )		709347	0					
ANR	709424	Condition	va	1744:6:50032:50033	709347	0	True				
ANR	709425	Identifier	va		709347	0					
ANR	709426	CompoundStatement		15:10:317:317	709347	1					
ANR	709427	IfStatement	if ( s -> paddr == UT64_MAX )		709347	0					
ANR	709428	Condition	s -> paddr == UT64_MAX	1745:7:50045:50064	709347	0	True				
ANR	709429	EqualityExpression	s -> paddr == UT64_MAX		709347	0		==			
ANR	709430	PtrMemberAccess	s -> paddr		709347	0					
ANR	709431	Identifier	s		709347	0					
ANR	709432	Identifier	paddr		709347	1					
ANR	709433	Identifier	UT64_MAX		709347	1					
ANR	709434	CompoundStatement		16:29:348:348	709347	1					
ANR	709435	ExpressionStatement	addr = s -> vaddr	1746:4:50073:50088	709347	0	True				
ANR	709436	AssignmentExpression	addr = s -> vaddr		709347	0		=			
ANR	709437	Identifier	addr		709347	0					
ANR	709438	PtrMemberAccess	s -> vaddr		709347	1					
ANR	709439	Identifier	s		709347	0					
ANR	709440	Identifier	vaddr		709347	1					
ANR	709441	ElseStatement	else		709347	0					
ANR	709442	CompoundStatement		18:10:381:381	709347	0					
ANR	709443	ExpressionStatement	"addr = r_bin_get_vaddr ( bin , s -> paddr , s -> vaddr )"	1748:4:50106:50154	709347	0	True				
ANR	709444	AssignmentExpression	"addr = r_bin_get_vaddr ( bin , s -> paddr , s -> vaddr )"		709347	0		=			
ANR	709445	Identifier	addr		709347	0					
ANR	709446	CallExpression	"r_bin_get_vaddr ( bin , s -> paddr , s -> vaddr )"		709347	1					
ANR	709447	Callee	r_bin_get_vaddr		709347	0					
ANR	709448	Identifier	r_bin_get_vaddr		709347	0					
ANR	709449	ArgumentList	bin		709347	1					
ANR	709450	Argument	bin		709347	0					
ANR	709451	Identifier	bin		709347	0					
ANR	709452	Argument	s -> paddr		709347	1					
ANR	709453	PtrMemberAccess	s -> paddr		709347	0					
ANR	709454	Identifier	s		709347	0					
ANR	709455	Identifier	paddr		709347	1					
ANR	709456	Argument	s -> vaddr		709347	2					
ANR	709457	PtrMemberAccess	s -> vaddr		709347	0					
ANR	709458	Identifier	s		709347	0					
ANR	709459	Identifier	vaddr		709347	1					
ANR	709460	ElseStatement	else		709347	0					
ANR	709461	CompoundStatement		21:9:451:451	709347	0					
ANR	709462	ExpressionStatement	addr = s -> paddr	1751:3:50175:50190	709347	0	True				
ANR	709463	AssignmentExpression	addr = s -> paddr		709347	0		=			
ANR	709464	Identifier	addr		709347	0					
ANR	709465	PtrMemberAccess	s -> paddr		709347	1					
ANR	709466	Identifier	s		709347	0					
ANR	709467	Identifier	paddr		709347	1					
ANR	709468	ExpressionStatement	free ( impname )	1754:1:50200:50214	709347	26	True				
ANR	709469	CallExpression	free ( impname )		709347	0					
ANR	709470	Callee	free		709347	0					
ANR	709471	Identifier	free		709347	0					
ANR	709472	ArgumentList	impname		709347	1					
ANR	709473	Argument	impname		709347	0					
ANR	709474	Identifier	impname		709347	0					
ANR	709475	ReturnStatement	return addr ;	1755:1:50217:50228	709347	27	True				
ANR	709476	Identifier	addr		709347	0					
ANR	709477	ReturnType	R_API ut64		709347	1					
ANR	709478	Identifier	r_core_bin_impaddr		709347	2					
ANR	709479	ParameterList	"RBin * bin , int va , const char * name"		709347	3					
ANR	709480	Parameter	RBin * bin	1730:30:49681:49689	709347	0	True				
ANR	709481	ParameterType	RBin *		709347	0					
ANR	709482	Identifier	bin		709347	1					
ANR	709483	Parameter	int va	1730:41:49692:49697	709347	1	True				
ANR	709484	ParameterType	int		709347	0					
ANR	709485	Identifier	va		709347	1					
ANR	709486	Parameter	const char * name	1730:49:49700:49715	709347	2	True				
ANR	709487	ParameterType	const char *		709347	0					
ANR	709488	Identifier	name		709347	1					
ANR	709489	CFGEntryNode	ENTRY		709347		True				
ANR	709490	CFGExitNode	EXIT		709347		True				
ANR	709491	Symbol	* name		709347						
ANR	709492	Symbol	bin		709347						
ANR	709493	Symbol	false		709347						
ANR	709494	Symbol	s -> paddr		709347						
ANR	709495	Symbol	va		709347						
ANR	709496	Symbol	r_str_newf		709347						
ANR	709497	Symbol	symbols		709347						
ANR	709498	Symbol	s -> vaddr		709347						
ANR	709499	Symbol	r_bin_get_vaddr		709347						
ANR	709500	Symbol	s		709347						
ANR	709501	Symbol	r_bin_get_symbols		709347						
ANR	709502	Symbol	name		709347						
ANR	709503	Symbol	impname		709347						
ANR	709504	Symbol	UT64_MAX		709347						
ANR	709505	Symbol	addr		709347						
ANR	709506	Symbol	* s		709347						
ANR	709507	Function	bin_imports	1758:0:50233:53809							
ANR	709508	FunctionDef	"bin_imports (RCore * r , int mode , int va , const char * name)"		709507	0					
ANR	709509	CompoundStatement		1758:69:50302:53809	709507	0					
ANR	709510	IdentifierDeclStatement	RBinInfo * info = r_bin_get_info ( r -> bin ) ;	1759:1:50305:50345	709507	0	True				
ANR	709511	IdentifierDecl	* info = r_bin_get_info ( r -> bin )		709507	0					
ANR	709512	IdentifierDeclType	RBinInfo *		709507	0					
ANR	709513	Identifier	info		709507	1					
ANR	709514	AssignmentExpression	* info = r_bin_get_info ( r -> bin )		709507	2		=			
ANR	709515	Identifier	info		709507	0					
ANR	709516	CallExpression	r_bin_get_info ( r -> bin )		709507	1					
ANR	709517	Callee	r_bin_get_info		709507	0					
ANR	709518	Identifier	r_bin_get_info		709507	0					
ANR	709519	ArgumentList	r -> bin		709507	1					
ANR	709520	Argument	r -> bin		709507	0					
ANR	709521	PtrMemberAccess	r -> bin		709507	0					
ANR	709522	Identifier	r		709507	0					
ANR	709523	Identifier	bin		709507	1					
ANR	709524	IdentifierDeclStatement	"int bin_demangle = r_config_get_i ( r -> config , ""bin.demangle"" ) ;"	1760:1:50348:50409	709507	1	True				
ANR	709525	IdentifierDecl	"bin_demangle = r_config_get_i ( r -> config , ""bin.demangle"" )"		709507	0					
ANR	709526	IdentifierDeclType	int		709507	0					
ANR	709527	Identifier	bin_demangle		709507	1					
ANR	709528	AssignmentExpression	"bin_demangle = r_config_get_i ( r -> config , ""bin.demangle"" )"		709507	2		=			
ANR	709529	Identifier	bin_demangle		709507	0					
ANR	709530	CallExpression	"r_config_get_i ( r -> config , ""bin.demangle"" )"		709507	1					
ANR	709531	Callee	r_config_get_i		709507	0					
ANR	709532	Identifier	r_config_get_i		709507	0					
ANR	709533	ArgumentList	r -> config		709507	1					
ANR	709534	Argument	r -> config		709507	0					
ANR	709535	PtrMemberAccess	r -> config		709507	0					
ANR	709536	Identifier	r		709507	0					
ANR	709537	Identifier	config		709507	1					
ANR	709538	Argument	"""bin.demangle"""		709507	1					
ANR	709539	PrimaryExpression	"""bin.demangle"""		709507	0					
ANR	709540	IdentifierDeclStatement	"bool keep_lib = r_config_get_i ( r -> config , ""bin.demangle.libs"" ) ;"	1761:1:50412:50475	709507	2	True				
ANR	709541	IdentifierDecl	"keep_lib = r_config_get_i ( r -> config , ""bin.demangle.libs"" )"		709507	0					
ANR	709542	IdentifierDeclType	bool		709507	0					
ANR	709543	Identifier	keep_lib		709507	1					
ANR	709544	AssignmentExpression	"keep_lib = r_config_get_i ( r -> config , ""bin.demangle.libs"" )"		709507	2		=			
ANR	709545	Identifier	keep_lib		709507	0					
ANR	709546	CallExpression	"r_config_get_i ( r -> config , ""bin.demangle.libs"" )"		709507	1					
ANR	709547	Callee	r_config_get_i		709507	0					
ANR	709548	Identifier	r_config_get_i		709507	0					
ANR	709549	ArgumentList	r -> config		709507	1					
ANR	709550	Argument	r -> config		709507	0					
ANR	709551	PtrMemberAccess	r -> config		709507	0					
ANR	709552	Identifier	r		709507	0					
ANR	709553	Identifier	config		709507	1					
ANR	709554	Argument	"""bin.demangle.libs"""		709507	1					
ANR	709555	PrimaryExpression	"""bin.demangle.libs"""		709507	0					
ANR	709556	IdentifierDeclStatement	RBinImport * import ;	1762:1:50478:50496	709507	3	True				
ANR	709557	IdentifierDecl	* import		709507	0					
ANR	709558	IdentifierDeclType	RBinImport *		709507	0					
ANR	709559	Identifier	import		709507	1					
ANR	709560	IdentifierDeclStatement	RListIter * iter ;	1763:1:50499:50514	709507	4	True				
ANR	709561	IdentifierDecl	* iter		709507	0					
ANR	709562	IdentifierDeclType	RListIter *		709507	0					
ANR	709563	Identifier	iter		709507	1					
ANR	709564	IdentifierDeclStatement	bool lit = info ? info -> has_lit : false ;	1764:1:50517:50555	709507	5	True				
ANR	709565	IdentifierDecl	lit = info ? info -> has_lit : false		709507	0					
ANR	709566	IdentifierDeclType	bool		709507	0					
ANR	709567	Identifier	lit		709507	1					
ANR	709568	AssignmentExpression	lit = info ? info -> has_lit : false		709507	2		=			
ANR	709569	Identifier	lit		709507	0					
ANR	709570	ConditionalExpression	info ? info -> has_lit : false		709507	1					
ANR	709571	Condition	info		709507	0					
ANR	709572	Identifier	info		709507	0					
ANR	709573	PtrMemberAccess	info -> has_lit		709507	1					
ANR	709574	Identifier	info		709507	0					
ANR	709575	Identifier	has_lit		709507	1					
ANR	709576	Identifier	false		709507	2					
ANR	709577	IdentifierDeclStatement	char * str ;	1765:1:50558:50567	709507	6	True				
ANR	709578	IdentifierDecl	* str		709507	0					
ANR	709579	IdentifierDeclType	char *		709507	0					
ANR	709580	Identifier	str		709507	1					
ANR	709581	IdentifierDeclStatement	int i = 0 ;	1766:1:50570:50579	709507	7	True				
ANR	709582	IdentifierDecl	i = 0		709507	0					
ANR	709583	IdentifierDeclType	int		709507	0					
ANR	709584	Identifier	i		709507	1					
ANR	709585	AssignmentExpression	i = 0		709507	2		=			
ANR	709586	Identifier	i		709507	0					
ANR	709587	PrimaryExpression	0		709507	1					
ANR	709588	IfStatement	if ( ! info )		709507	8					
ANR	709589	Condition	! info	1768:5:50587:50591	709507	0	True				
ANR	709590	UnaryOperationExpression	! info		709507	0					
ANR	709591	UnaryOperator	!		709507	0					
ANR	709592	Identifier	info		709507	1					
ANR	709593	CompoundStatement		11:12:291:291	709507	1					
ANR	709594	ReturnStatement	return false ;	1769:2:50598:50610	709507	0	True				
ANR	709595	Identifier	false		709507	0					
ANR	709596	IdentifierDeclStatement	RList * imports = r_bin_get_imports ( r -> bin ) ;	1772:1:50617:50660	709507	9	True				
ANR	709597	IdentifierDecl	* imports = r_bin_get_imports ( r -> bin )		709507	0					
ANR	709598	IdentifierDeclType	RList *		709507	0					
ANR	709599	Identifier	imports		709507	1					
ANR	709600	AssignmentExpression	* imports = r_bin_get_imports ( r -> bin )		709507	2		=			
ANR	709601	Identifier	imports		709507	0					
ANR	709602	CallExpression	r_bin_get_imports ( r -> bin )		709507	1					
ANR	709603	Callee	r_bin_get_imports		709507	0					
ANR	709604	Identifier	r_bin_get_imports		709507	0					
ANR	709605	ArgumentList	r -> bin		709507	1					
ANR	709606	Argument	r -> bin		709507	0					
ANR	709607	PtrMemberAccess	r -> bin		709507	0					
ANR	709608	Identifier	r		709507	0					
ANR	709609	Identifier	bin		709507	1					
ANR	709610	IdentifierDeclStatement	int cdsz = info ? ( info -> bits == 64 ? 8 : info -> bits == 32 ? 4 : info -> bits == 16 ? 4 : 0 ) : 0 ;	1773:1:50663:50750	709507	10	True				
ANR	709611	IdentifierDecl	cdsz = info ? ( info -> bits == 64 ? 8 : info -> bits == 32 ? 4 : info -> bits == 16 ? 4 : 0 ) : 0		709507	0					
ANR	709612	IdentifierDeclType	int		709507	0					
ANR	709613	Identifier	cdsz		709507	1					
ANR	709614	AssignmentExpression	cdsz = info ? ( info -> bits == 64 ? 8 : info -> bits == 32 ? 4 : info -> bits == 16 ? 4 : 0 ) : 0		709507	2		=			
ANR	709615	Identifier	cdsz		709507	0					
ANR	709616	ConditionalExpression	info ? ( info -> bits == 64 ? 8 : info -> bits == 32 ? 4 : info -> bits == 16 ? 4 : 0 ) : 0		709507	1					
ANR	709617	Condition	info		709507	0					
ANR	709618	Identifier	info		709507	0					
ANR	709619	ConditionalExpression	info -> bits == 64 ? 8 : info -> bits == 32 ? 4 : info -> bits == 16 ? 4 : 0		709507	1					
ANR	709620	Condition	info -> bits == 64		709507	0					
ANR	709621	EqualityExpression	info -> bits == 64		709507	0		==			
ANR	709622	PtrMemberAccess	info -> bits		709507	0					
ANR	709623	Identifier	info		709507	0					
ANR	709624	Identifier	bits		709507	1					
ANR	709625	PrimaryExpression	64		709507	1					
ANR	709626	PrimaryExpression	8		709507	1					
ANR	709627	ConditionalExpression	info -> bits == 32 ? 4 : info -> bits == 16 ? 4 : 0		709507	2					
ANR	709628	Condition	info -> bits == 32		709507	0					
ANR	709629	EqualityExpression	info -> bits == 32		709507	0		==			
ANR	709630	PtrMemberAccess	info -> bits		709507	0					
ANR	709631	Identifier	info		709507	0					
ANR	709632	Identifier	bits		709507	1					
ANR	709633	PrimaryExpression	32		709507	1					
ANR	709634	PrimaryExpression	4		709507	1					
ANR	709635	ConditionalExpression	info -> bits == 16 ? 4 : 0		709507	2					
ANR	709636	Condition	info -> bits == 16		709507	0					
ANR	709637	EqualityExpression	info -> bits == 16		709507	0		==			
ANR	709638	PtrMemberAccess	info -> bits		709507	0					
ANR	709639	Identifier	info		709507	0					
ANR	709640	Identifier	bits		709507	1					
ANR	709641	PrimaryExpression	16		709507	1					
ANR	709642	PrimaryExpression	4		709507	1					
ANR	709643	PrimaryExpression	0		709507	2					
ANR	709644	PrimaryExpression	0		709507	2					
ANR	709645	IfStatement	if ( IS_MODE_JSON ( mode ) )		709507	11					
ANR	709646	Condition	IS_MODE_JSON ( mode )	1774:5:50757:50775	709507	0	True				
ANR	709647	CallExpression	IS_MODE_JSON ( mode )		709507	0					
ANR	709648	Callee	IS_MODE_JSON		709507	0					
ANR	709649	Identifier	IS_MODE_JSON		709507	0					
ANR	709650	ArgumentList	mode		709507	1					
ANR	709651	Argument	mode		709507	0					
ANR	709652	Identifier	mode		709507	0					
ANR	709653	CompoundStatement		17:26:475:475	709507	1					
ANR	709654	ExpressionStatement	"r_cons_print ( ""["" )"	1775:2:50782:50800	709507	0	True				
ANR	709655	CallExpression	"r_cons_print ( ""["" )"		709507	0					
ANR	709656	Callee	r_cons_print		709507	0					
ANR	709657	Identifier	r_cons_print		709507	0					
ANR	709658	ArgumentList	"""["""		709507	1					
ANR	709659	Argument	"""["""		709507	0					
ANR	709660	PrimaryExpression	"""["""		709507	0					
ANR	709661	ElseStatement	else		709507	0					
ANR	709662	IfStatement	if ( IS_MODE_RAD ( mode ) )		709507	0					
ANR	709663	Condition	IS_MODE_RAD ( mode )	1776:12:50814:50831	709507	0	True				
ANR	709664	CallExpression	IS_MODE_RAD ( mode )		709507	0					
ANR	709665	Callee	IS_MODE_RAD		709507	0					
ANR	709666	Identifier	IS_MODE_RAD		709507	0					
ANR	709667	ArgumentList	mode		709507	1					
ANR	709668	Argument	mode		709507	0					
ANR	709669	Identifier	mode		709507	0					
ANR	709670	CompoundStatement		19:32:531:531	709507	1					
ANR	709671	ExpressionStatement	"r_cons_println ( ""fs imports"" )"	1777:2:50838:50867	709507	0	True				
ANR	709672	CallExpression	"r_cons_println ( ""fs imports"" )"		709507	0					
ANR	709673	Callee	r_cons_println		709507	0					
ANR	709674	Identifier	r_cons_println		709507	0					
ANR	709675	ArgumentList	"""fs imports"""		709507	1					
ANR	709676	Argument	"""fs imports"""		709507	0					
ANR	709677	PrimaryExpression	"""fs imports"""		709507	0					
ANR	709678	ElseStatement	else		709507	0					
ANR	709679	IfStatement	if ( IS_MODE_NORMAL ( mode ) )		709507	0					
ANR	709680	Condition	IS_MODE_NORMAL ( mode )	1778:12:50881:50901	709507	0	True				
ANR	709681	CallExpression	IS_MODE_NORMAL ( mode )		709507	0					
ANR	709682	Callee	IS_MODE_NORMAL		709507	0					
ANR	709683	Identifier	IS_MODE_NORMAL		709507	0					
ANR	709684	ArgumentList	mode		709507	1					
ANR	709685	Argument	mode		709507	0					
ANR	709686	Identifier	mode		709507	0					
ANR	709687	CompoundStatement		21:35:601:601	709507	1					
ANR	709688	ExpressionStatement	"r_cons_println ( ""[Imports]"" )"	1779:2:50908:50936	709507	0	True				
ANR	709689	CallExpression	"r_cons_println ( ""[Imports]"" )"		709507	0					
ANR	709690	Callee	r_cons_println		709507	0					
ANR	709691	Identifier	r_cons_println		709507	0					
ANR	709692	ArgumentList	"""[Imports]"""		709507	1					
ANR	709693	Argument	"""[Imports]"""		709507	0					
ANR	709694	PrimaryExpression	"""[Imports]"""		709507	0					
ANR	709695	ExpressionStatement	"r_cons_println ( ""Num  Vaddr       Bind      Type Name"" )"	1780:2:50940:50995	709507	1	True				
ANR	709696	CallExpression	"r_cons_println ( ""Num  Vaddr       Bind      Type Name"" )"		709507	0					
ANR	709697	Callee	r_cons_println		709507	0					
ANR	709698	Identifier	r_cons_println		709507	0					
ANR	709699	ArgumentList	"""Num  Vaddr       Bind      Type Name"""		709507	1					
ANR	709700	Argument	"""Num  Vaddr       Bind      Type Name"""		709507	0					
ANR	709701	PrimaryExpression	"""Num  Vaddr       Bind      Type Name"""		709507	0					
ANR	709702	Statement	r_list_foreach	1782:1:51001:51014	709507	12	True				
ANR	709703	Statement	(	1782:16:51016:51016	709507	13	True				
ANR	709704	Statement	imports	1782:17:51017:51023	709507	14	True				
ANR	709705	Statement	","	1782:24:51024:51024	709507	15	True				
ANR	709706	Statement	iter	1782:26:51026:51029	709507	16	True				
ANR	709707	Statement	","	1782:30:51030:51030	709507	17	True				
ANR	709708	Statement	import	1782:32:51032:51037	709507	18	True				
ANR	709709	Statement	)	1782:38:51038:51038	709507	19	True				
ANR	709710	CompoundStatement		30:2:844:905	709507	20					
ANR	709711	IfStatement	"if ( name && strcmp ( import -> name , name ) )"		709507	0					
ANR	709712	Condition	"name && strcmp ( import -> name , name )"	1783:6:51048:51082	709507	0	True				
ANR	709713	AndExpression	"name && strcmp ( import -> name , name )"		709507	0		&&			
ANR	709714	Identifier	name		709507	0					
ANR	709715	CallExpression	"strcmp ( import -> name , name )"		709507	1					
ANR	709716	Callee	strcmp		709507	0					
ANR	709717	Identifier	strcmp		709507	0					
ANR	709718	ArgumentList	import -> name		709507	1					
ANR	709719	Argument	import -> name		709507	0					
ANR	709720	PtrMemberAccess	import -> name		709507	0					
ANR	709721	Identifier	import		709507	0					
ANR	709722	Identifier	name		709507	1					
ANR	709723	Argument	name		709507	1					
ANR	709724	Identifier	name		709507	0					
ANR	709725	CompoundStatement		26:43:782:782	709507	1					
ANR	709726	ContinueStatement	continue ;	1784:3:51090:51098	709507	0	True				
ANR	709727	IdentifierDeclStatement	char * symname = strdup ( import -> name ) ;	1786:2:51106:51143	709507	1	True				
ANR	709728	IdentifierDecl	* symname = strdup ( import -> name )		709507	0					
ANR	709729	IdentifierDeclType	char *		709507	0					
ANR	709730	Identifier	symname		709507	1					
ANR	709731	AssignmentExpression	* symname = strdup ( import -> name )		709507	2		=			
ANR	709732	Identifier	symname		709507	0					
ANR	709733	CallExpression	strdup ( import -> name )		709507	1					
ANR	709734	Callee	strdup		709507	0					
ANR	709735	Identifier	strdup		709507	0					
ANR	709736	ArgumentList	import -> name		709507	1					
ANR	709737	Argument	import -> name		709507	0					
ANR	709738	PtrMemberAccess	import -> name		709507	0					
ANR	709739	Identifier	import		709507	0					
ANR	709740	Identifier	name		709507	1					
ANR	709741	IdentifierDeclStatement	"ut64 addr = lit ? r_core_bin_impaddr ( r -> bin , va , symname ) : 0 ;"	1787:2:51147:51208	709507	2	True				
ANR	709742	IdentifierDecl	"addr = lit ? r_core_bin_impaddr ( r -> bin , va , symname ) : 0"		709507	0					
ANR	709743	IdentifierDeclType	ut64		709507	0					
ANR	709744	Identifier	addr		709507	1					
ANR	709745	AssignmentExpression	"addr = lit ? r_core_bin_impaddr ( r -> bin , va , symname ) : 0"		709507	2		=			
ANR	709746	Identifier	addr		709507	0					
ANR	709747	ConditionalExpression	"lit ? r_core_bin_impaddr ( r -> bin , va , symname ) : 0"		709507	1					
ANR	709748	Condition	lit		709507	0					
ANR	709749	Identifier	lit		709507	0					
ANR	709750	CallExpression	"r_core_bin_impaddr ( r -> bin , va , symname )"		709507	1					
ANR	709751	Callee	r_core_bin_impaddr		709507	0					
ANR	709752	Identifier	r_core_bin_impaddr		709507	0					
ANR	709753	ArgumentList	r -> bin		709507	1					
ANR	709754	Argument	r -> bin		709507	0					
ANR	709755	PtrMemberAccess	r -> bin		709507	0					
ANR	709756	Identifier	r		709507	0					
ANR	709757	Identifier	bin		709507	1					
ANR	709758	Argument	va		709507	1					
ANR	709759	Identifier	va		709507	0					
ANR	709760	Argument	symname		709507	2					
ANR	709761	Identifier	symname		709507	0					
ANR	709762	PrimaryExpression	0		709507	2					
ANR	709763	IfStatement	if ( bin_demangle )		709507	3					
ANR	709764	Condition	bin_demangle	1788:6:51216:51227	709507	0	True				
ANR	709765	Identifier	bin_demangle		709507	0					
ANR	709766	CompoundStatement		32:3:932:1005	709507	1					
ANR	709767	IdentifierDeclStatement	"char * dname = r_bin_demangle ( r -> bin -> cur , NULL , symname , addr , keep_lib ) ;"	1789:3:51235:51308	709507	0	True				
ANR	709768	IdentifierDecl	"* dname = r_bin_demangle ( r -> bin -> cur , NULL , symname , addr , keep_lib )"		709507	0					
ANR	709769	IdentifierDeclType	char *		709507	0					
ANR	709770	Identifier	dname		709507	1					
ANR	709771	AssignmentExpression	"* dname = r_bin_demangle ( r -> bin -> cur , NULL , symname , addr , keep_lib )"		709507	2		=			
ANR	709772	Identifier	dname		709507	0					
ANR	709773	CallExpression	"r_bin_demangle ( r -> bin -> cur , NULL , symname , addr , keep_lib )"		709507	1					
ANR	709774	Callee	r_bin_demangle		709507	0					
ANR	709775	Identifier	r_bin_demangle		709507	0					
ANR	709776	ArgumentList	r -> bin -> cur		709507	1					
ANR	709777	Argument	r -> bin -> cur		709507	0					
ANR	709778	PtrMemberAccess	r -> bin -> cur		709507	0					
ANR	709779	PtrMemberAccess	r -> bin		709507	0					
ANR	709780	Identifier	r		709507	0					
ANR	709781	Identifier	bin		709507	1					
ANR	709782	Identifier	cur		709507	1					
ANR	709783	Argument	NULL		709507	1					
ANR	709784	Identifier	NULL		709507	0					
ANR	709785	Argument	symname		709507	2					
ANR	709786	Identifier	symname		709507	0					
ANR	709787	Argument	addr		709507	3					
ANR	709788	Identifier	addr		709507	0					
ANR	709789	Argument	keep_lib		709507	4					
ANR	709790	Identifier	keep_lib		709507	0					
ANR	709791	IfStatement	if ( dname )		709507	1					
ANR	709792	Condition	dname	1790:7:51317:51321	709507	0	True				
ANR	709793	Identifier	dname		709507	0					
ANR	709794	CompoundStatement		33:14:1021:1021	709507	1					
ANR	709795	ExpressionStatement	free ( symname )	1791:4:51330:51344	709507	0	True				
ANR	709796	CallExpression	free ( symname )		709507	0					
ANR	709797	Callee	free		709507	0					
ANR	709798	Identifier	free		709507	0					
ANR	709799	ArgumentList	symname		709507	1					
ANR	709800	Argument	symname		709507	0					
ANR	709801	Identifier	symname		709507	0					
ANR	709802	ExpressionStatement	"symname = r_str_newf ( ""sym.imp.%s"" , dname )"	1792:4:51350:51392	709507	1	True				
ANR	709803	AssignmentExpression	"symname = r_str_newf ( ""sym.imp.%s"" , dname )"		709507	0		=			
ANR	709804	Identifier	symname		709507	0					
ANR	709805	CallExpression	"r_str_newf ( ""sym.imp.%s"" , dname )"		709507	1					
ANR	709806	Callee	r_str_newf		709507	0					
ANR	709807	Identifier	r_str_newf		709507	0					
ANR	709808	ArgumentList	"""sym.imp.%s"""		709507	1					
ANR	709809	Argument	"""sym.imp.%s"""		709507	0					
ANR	709810	PrimaryExpression	"""sym.imp.%s"""		709507	0					
ANR	709811	Argument	dname		709507	1					
ANR	709812	Identifier	dname		709507	0					
ANR	709813	ExpressionStatement	free ( dname )	1793:4:51398:51410	709507	2	True				
ANR	709814	CallExpression	free ( dname )		709507	0					
ANR	709815	Callee	free		709507	0					
ANR	709816	Identifier	free		709507	0					
ANR	709817	ArgumentList	dname		709507	1					
ANR	709818	Argument	dname		709507	0					
ANR	709819	Identifier	dname		709507	0					
ANR	709820	IfStatement	if ( r -> bin -> prefix )		709507	4					
ANR	709821	Condition	r -> bin -> prefix	1796:6:51427:51440	709507	0	True				
ANR	709822	PtrMemberAccess	r -> bin -> prefix		709507	0					
ANR	709823	PtrMemberAccess	r -> bin		709507	0					
ANR	709824	Identifier	r		709507	0					
ANR	709825	Identifier	bin		709507	1					
ANR	709826	Identifier	prefix		709507	1					
ANR	709827	CompoundStatement		40:3:1145:1205	709507	1					
ANR	709828	IdentifierDeclStatement	"char * prname = r_str_newf ( ""%s.%s"" , r -> bin -> prefix , symname ) ;"	1797:3:51448:51508	709507	0	True				
ANR	709829	IdentifierDecl	"* prname = r_str_newf ( ""%s.%s"" , r -> bin -> prefix , symname )"		709507	0					
ANR	709830	IdentifierDeclType	char *		709507	0					
ANR	709831	Identifier	prname		709507	1					
ANR	709832	AssignmentExpression	"* prname = r_str_newf ( ""%s.%s"" , r -> bin -> prefix , symname )"		709507	2		=			
ANR	709833	Identifier	prname		709507	0					
ANR	709834	CallExpression	"r_str_newf ( ""%s.%s"" , r -> bin -> prefix , symname )"		709507	1					
ANR	709835	Callee	r_str_newf		709507	0					
ANR	709836	Identifier	r_str_newf		709507	0					
ANR	709837	ArgumentList	"""%s.%s"""		709507	1					
ANR	709838	Argument	"""%s.%s"""		709507	0					
ANR	709839	PrimaryExpression	"""%s.%s"""		709507	0					
ANR	709840	Argument	r -> bin -> prefix		709507	1					
ANR	709841	PtrMemberAccess	r -> bin -> prefix		709507	0					
ANR	709842	PtrMemberAccess	r -> bin		709507	0					
ANR	709843	Identifier	r		709507	0					
ANR	709844	Identifier	bin		709507	1					
ANR	709845	Identifier	prefix		709507	1					
ANR	709846	Argument	symname		709507	2					
ANR	709847	Identifier	symname		709507	0					
ANR	709848	ExpressionStatement	free ( symname )	1798:3:51513:51527	709507	1	True				
ANR	709849	CallExpression	free ( symname )		709507	0					
ANR	709850	Callee	free		709507	0					
ANR	709851	Identifier	free		709507	0					
ANR	709852	ArgumentList	symname		709507	1					
ANR	709853	Argument	symname		709507	0					
ANR	709854	Identifier	symname		709507	0					
ANR	709855	ExpressionStatement	symname = prname	1799:3:51532:51548	709507	2	True				
ANR	709856	AssignmentExpression	symname = prname		709507	0		=			
ANR	709857	Identifier	symname		709507	0					
ANR	709858	Identifier	prname		709507	1					
ANR	709859	IfStatement	if ( IS_MODE_SET ( mode ) )		709507	5					
ANR	709860	Condition	IS_MODE_SET ( mode )	1801:6:51560:51577	709507	0	True				
ANR	709861	CallExpression	IS_MODE_SET ( mode )		709507	0					
ANR	709862	Callee	IS_MODE_SET		709507	0					
ANR	709863	Identifier	IS_MODE_SET		709507	0					
ANR	709864	ArgumentList	mode		709507	1					
ANR	709865	Argument	mode		709507	0					
ANR	709866	Identifier	mode		709507	0					
ANR	709867	CompoundStatement		44:26:1277:1277	709507	1					
ANR	709868	IfStatement	"if ( strstr ( symname , "".dll_"" ) && cdsz )"		709507	0					
ANR	709869	Condition	"strstr ( symname , "".dll_"" ) && cdsz"	1804:7:51672:51704	709507	0	True				
ANR	709870	AndExpression	"strstr ( symname , "".dll_"" ) && cdsz"		709507	0		&&			
ANR	709871	CallExpression	"strstr ( symname , "".dll_"" )"		709507	0					
ANR	709872	Callee	strstr		709507	0					
ANR	709873	Identifier	strstr		709507	0					
ANR	709874	ArgumentList	symname		709507	1					
ANR	709875	Argument	symname		709507	0					
ANR	709876	Identifier	symname		709507	0					
ANR	709877	Argument	""".dll_"""		709507	1					
ANR	709878	PrimaryExpression	""".dll_"""		709507	0					
ANR	709879	Identifier	cdsz		709507	1					
ANR	709880	CompoundStatement		47:42:1404:1404	709507	1					
ANR	709881	ExpressionStatement	"r_meta_add ( r -> anal , R_META_TYPE_DATA , addr , addr + cdsz , NULL )"	1805:4:51713:51776	709507	0	True				
ANR	709882	CallExpression	"r_meta_add ( r -> anal , R_META_TYPE_DATA , addr , addr + cdsz , NULL )"		709507	0					
ANR	709883	Callee	r_meta_add		709507	0					
ANR	709884	Identifier	r_meta_add		709507	0					
ANR	709885	ArgumentList	r -> anal		709507	1					
ANR	709886	Argument	r -> anal		709507	0					
ANR	709887	PtrMemberAccess	r -> anal		709507	0					
ANR	709888	Identifier	r		709507	0					
ANR	709889	Identifier	anal		709507	1					
ANR	709890	Argument	R_META_TYPE_DATA		709507	1					
ANR	709891	Identifier	R_META_TYPE_DATA		709507	0					
ANR	709892	Argument	addr		709507	2					
ANR	709893	Identifier	addr		709507	0					
ANR	709894	Argument	addr + cdsz		709507	3					
ANR	709895	AdditiveExpression	addr + cdsz		709507	0		+			
ANR	709896	Identifier	addr		709507	0					
ANR	709897	Identifier	cdsz		709507	1					
ANR	709898	Argument	NULL		709507	4					
ANR	709899	Identifier	NULL		709507	0					
ANR	709900	ElseStatement	else		709507	0					
ANR	709901	IfStatement	if ( IS_MODE_SIMPLE ( mode ) || IS_MODE_SIMPLEST ( mode ) )		709507	0					
ANR	709902	Condition	IS_MODE_SIMPLE ( mode ) || IS_MODE_SIMPLEST ( mode )	1807:13:51796:51843	709507	0	True				
ANR	709903	OrExpression	IS_MODE_SIMPLE ( mode ) || IS_MODE_SIMPLEST ( mode )		709507	0		||			
ANR	709904	CallExpression	IS_MODE_SIMPLE ( mode )		709507	0					
ANR	709905	Callee	IS_MODE_SIMPLE		709507	0					
ANR	709906	Identifier	IS_MODE_SIMPLE		709507	0					
ANR	709907	ArgumentList	mode		709507	1					
ANR	709908	Argument	mode		709507	0					
ANR	709909	Identifier	mode		709507	0					
ANR	709910	CallExpression	IS_MODE_SIMPLEST ( mode )		709507	1					
ANR	709911	Callee	IS_MODE_SIMPLEST		709507	0					
ANR	709912	Identifier	IS_MODE_SIMPLEST		709507	0					
ANR	709913	ArgumentList	mode		709507	1					
ANR	709914	Argument	mode		709507	0					
ANR	709915	Identifier	mode		709507	0					
ANR	709916	CompoundStatement		50:63:1543:1543	709507	1					
ANR	709917	ExpressionStatement	r_cons_println ( symname )	1808:3:51851:51875	709507	0	True				
ANR	709918	CallExpression	r_cons_println ( symname )		709507	0					
ANR	709919	Callee	r_cons_println		709507	0					
ANR	709920	Identifier	r_cons_println		709507	0					
ANR	709921	ArgumentList	symname		709507	1					
ANR	709922	Argument	symname		709507	0					
ANR	709923	Identifier	symname		709507	0					
ANR	709924	ElseStatement	else		709507	0					
ANR	709925	IfStatement	if ( IS_MODE_JSON ( mode ) )		709507	0					
ANR	709926	Condition	IS_MODE_JSON ( mode )	1809:13:51890:51908	709507	0	True				
ANR	709927	CallExpression	IS_MODE_JSON ( mode )		709507	0					
ANR	709928	Callee	IS_MODE_JSON		709507	0					
ANR	709929	Identifier	IS_MODE_JSON		709507	0					
ANR	709930	ArgumentList	mode		709507	1					
ANR	709931	Argument	mode		709507	0					
ANR	709932	Identifier	mode		709507	0					
ANR	709933	CompoundStatement		52:34:1608:1608	709507	1					
ANR	709934	ExpressionStatement	"str = r_str_escape_utf8_for_json ( symname , - 1 )"	1810:3:51916:51962	709507	0	True				
ANR	709935	AssignmentExpression	"str = r_str_escape_utf8_for_json ( symname , - 1 )"		709507	0		=			
ANR	709936	Identifier	str		709507	0					
ANR	709937	CallExpression	"r_str_escape_utf8_for_json ( symname , - 1 )"		709507	1					
ANR	709938	Callee	r_str_escape_utf8_for_json		709507	0					
ANR	709939	Identifier	r_str_escape_utf8_for_json		709507	0					
ANR	709940	ArgumentList	symname		709507	1					
ANR	709941	Argument	symname		709507	0					
ANR	709942	Identifier	symname		709507	0					
ANR	709943	Argument	- 1		709507	1					
ANR	709944	UnaryOperationExpression	- 1		709507	0					
ANR	709945	UnaryOperator	-		709507	0					
ANR	709946	PrimaryExpression	1		709507	1					
ANR	709947	ExpressionStatement	"str = r_str_replace ( str , ""\\"""" , ""\\\\\\"""" , 1 )"	1811:3:51967:52009	709507	1	True				
ANR	709948	AssignmentExpression	"str = r_str_replace ( str , ""\\"""" , ""\\\\\\"""" , 1 )"		709507	0		=			
ANR	709949	Identifier	str		709507	0					
ANR	709950	CallExpression	"r_str_replace ( str , ""\\"""" , ""\\\\\\"""" , 1 )"		709507	1					
ANR	709951	Callee	r_str_replace		709507	0					
ANR	709952	Identifier	r_str_replace		709507	0					
ANR	709953	ArgumentList	str		709507	1					
ANR	709954	Argument	str		709507	0					
ANR	709955	Identifier	str		709507	0					
ANR	709956	Argument	"""\\"""""		709507	1					
ANR	709957	PrimaryExpression	"""\\"""""		709507	0					
ANR	709958	Argument	"""\\\\\\"""""		709507	2					
ANR	709959	PrimaryExpression	"""\\\\\\"""""		709507	0					
ANR	709960	Argument	1		709507	3					
ANR	709961	PrimaryExpression	1		709507	0					
ANR	709962	Statement	r_cons_printf	1812:3:52014:52026	709507	2	True				
ANR	709963	Statement	(	1812:17:52028:52028	709507	3	True				
ANR	709964	Statement	"""%s{\\""ordinal\\"":%d,"""	1812:18:52029:52048	709507	4	True				
ANR	709965	Statement	"""\\""bind\\"":\\""%s\\"","""	1813:4:52054:52071	709507	5	True				
ANR	709966	Statement	"""\\""type\\"":\\""%s\\"","""	1814:4:52077:52094	709507	6	True				
ANR	709967	Statement	","	1814:22:52095:52095	709507	7	True				
ANR	709968	Statement	iter	1815:4:52101:52104	709507	8	True				
ANR	709969	Statement	->	1815:8:52105:52106	709507	9	True				
ANR	709970	Statement	p	1815:10:52107:52107	709507	10	True				
ANR	709971	Statement	?	1815:12:52109:52109	709507	11	True				
ANR	709972	Statement	""","""	1815:14:52111:52113	709507	12	True				
ANR	709973	Statement	:	1815:18:52115:52115	709507	13	True				
ANR	709974	Statement	""""""	1815:20:52117:52118	709507	14	True				
ANR	709975	Statement	","	1815:22:52119:52119	709507	15	True				
ANR	709976	Statement	import	1816:4:52125:52130	709507	16	True				
ANR	709977	Statement	->	1816:10:52131:52132	709507	17	True				
ANR	709978	Statement	ordinal	1816:12:52133:52139	709507	18	True				
ANR	709979	Statement	","	1816:19:52140:52140	709507	19	True				
ANR	709980	Statement	import	1817:4:52146:52151	709507	20	True				
ANR	709981	Statement	->	1817:10:52152:52153	709507	21	True				
ANR	709982	Statement	bind	1817:12:52154:52157	709507	22	True				
ANR	709983	Statement	","	1817:16:52158:52158	709507	23	True				
ANR	709984	Statement	import	1818:4:52164:52169	709507	24	True				
ANR	709985	Statement	->	1818:10:52170:52171	709507	25	True				
ANR	709986	Statement	type	1818:12:52172:52175	709507	26	True				
ANR	709987	Statement	)	1818:16:52176:52176	709507	27	True				
ANR	709988	ExpressionStatement		1818:17:52177:52177	709507	28	True				
ANR	709989	IfStatement	if ( import -> classname && import -> classname [ 0 ] )		709507	29					
ANR	709990	Condition	import -> classname && import -> classname [ 0 ]	1819:7:52186:52226	709507	0	True				
ANR	709991	AndExpression	import -> classname && import -> classname [ 0 ]		709507	0		&&			
ANR	709992	PtrMemberAccess	import -> classname		709507	0					
ANR	709993	Identifier	import		709507	0					
ANR	709994	Identifier	classname		709507	1					
ANR	709995	ArrayIndexing	import -> classname [ 0 ]		709507	1					
ANR	709996	PtrMemberAccess	import -> classname		709507	0					
ANR	709997	Identifier	import		709507	0					
ANR	709998	Identifier	classname		709507	1					
ANR	709999	PrimaryExpression	0		709507	1					
ANR	710000	CompoundStatement		62:50:1926:1926	709507	1					
ANR	710001	Statement	r_cons_printf	1820:4:52235:52247	709507	0	True				
ANR	710002	Statement	(	1820:18:52249:52249	709507	1	True				
ANR	710003	Statement	"""\\""classname\\"":\\""%s\\"","""	1820:19:52250:52272	709507	2	True				
ANR	710004	Statement	"""\\""descriptor\\"":\\""%s\\"","""	1821:5:52279:52302	709507	3	True				
ANR	710005	Statement	","	1821:29:52303:52303	709507	4	True				
ANR	710006	Statement	import	1822:5:52310:52315	709507	5	True				
ANR	710007	Statement	->	1822:11:52316:52317	709507	6	True				
ANR	710008	Statement	classname	1822:13:52318:52326	709507	7	True				
ANR	710009	Statement	","	1822:22:52327:52327	709507	8	True				
ANR	710010	Statement	import	1823:5:52334:52339	709507	9	True				
ANR	710011	Statement	->	1823:11:52340:52341	709507	10	True				
ANR	710012	Statement	descriptor	1823:13:52342:52351	709507	11	True				
ANR	710013	Statement	)	1823:23:52352:52352	709507	12	True				
ANR	710014	ExpressionStatement		1823:24:52353:52353	709507	13	True				
ANR	710015	Statement	r_cons_printf	1825:3:52363:52375	709507	30	True				
ANR	710016	Statement	(	1825:17:52377:52377	709507	31	True				
ANR	710017	Statement	"""\\""name\\"":\\""%s\\"",\\""plt\\"":%"""	1825:18:52378:52404	709507	32	True				
ANR	710018	Statement	PFMT64d	1825:45:52405:52411	709507	33	True				
ANR	710019	Statement	"""}"""	1825:52:52412:52414	709507	34	True				
ANR	710020	Statement	","	1825:55:52415:52415	709507	35	True				
ANR	710021	Statement	str	1826:4:52421:52423	709507	36	True				
ANR	710022	Statement	","	1826:7:52424:52424	709507	37	True				
ANR	710023	Statement	addr	1826:9:52426:52429	709507	38	True				
ANR	710024	Statement	)	1826:13:52430:52430	709507	39	True				
ANR	710025	ExpressionStatement		1826:14:52431:52431	709507	40	True				
ANR	710026	ExpressionStatement	free ( str )	1827:3:52436:52446	709507	41	True				
ANR	710027	CallExpression	free ( str )		709507	0					
ANR	710028	Callee	free		709507	0					
ANR	710029	Identifier	free		709507	0					
ANR	710030	ArgumentList	str		709507	1					
ANR	710031	Argument	str		709507	0					
ANR	710032	Identifier	str		709507	0					
ANR	710033	ElseStatement	else		709507	0					
ANR	710034	IfStatement	if ( IS_MODE_RAD ( mode ) )		709507	0					
ANR	710035	Condition	IS_MODE_RAD ( mode )	1828:13:52461:52478	709507	0	True				
ANR	710036	CallExpression	IS_MODE_RAD ( mode )		709507	0					
ANR	710037	Callee	IS_MODE_RAD		709507	0					
ANR	710038	Identifier	IS_MODE_RAD		709507	0					
ANR	710039	ArgumentList	mode		709507	1					
ANR	710040	Argument	mode		709507	0					
ANR	710041	Identifier	mode		709507	0					
ANR	710042	CompoundStatement		71:33:2178:2178	709507	1					
ANR	710043	ElseStatement	else		709507	0					
ANR	710044	CompoundStatement		75:3:2286:2329	709507	0					
ANR	710045	IdentifierDeclStatement	const char * bind = r_str_get ( import -> bind ) ;	1831:3:52541:52584	709507	0	True				
ANR	710046	IdentifierDecl	* bind = r_str_get ( import -> bind )		709507	0					
ANR	710047	IdentifierDeclType	const char *		709507	0					
ANR	710048	Identifier	bind		709507	1					
ANR	710049	AssignmentExpression	* bind = r_str_get ( import -> bind )		709507	2		=			
ANR	710050	Identifier	bind		709507	0					
ANR	710051	CallExpression	r_str_get ( import -> bind )		709507	1					
ANR	710052	Callee	r_str_get		709507	0					
ANR	710053	Identifier	r_str_get		709507	0					
ANR	710054	ArgumentList	import -> bind		709507	1					
ANR	710055	Argument	import -> bind		709507	0					
ANR	710056	PtrMemberAccess	import -> bind		709507	0					
ANR	710057	Identifier	import		709507	0					
ANR	710058	Identifier	bind		709507	1					
ANR	710059	IdentifierDeclStatement	const char * type = r_str_get ( import -> type ) ;	1832:3:52589:52632	709507	1	True				
ANR	710060	IdentifierDecl	* type = r_str_get ( import -> type )		709507	0					
ANR	710061	IdentifierDeclType	const char *		709507	0					
ANR	710062	Identifier	type		709507	1					
ANR	710063	AssignmentExpression	* type = r_str_get ( import -> type )		709507	2		=			
ANR	710064	Identifier	type		709507	0					
ANR	710065	CallExpression	r_str_get ( import -> type )		709507	1					
ANR	710066	Callee	r_str_get		709507	0					
ANR	710067	Identifier	r_str_get		709507	0					
ANR	710068	ArgumentList	import -> type		709507	1					
ANR	710069	Argument	import -> type		709507	0					
ANR	710070	PtrMemberAccess	import -> type		709507	0					
ANR	710071	Identifier	import		709507	0					
ANR	710072	Identifier	type		709507	1					
ANR	710073	Statement	r_cons_printf	1834:3:52643:52655	709507	2	True				
ANR	710074	Statement	(	1834:17:52657:52657	709507	3	True				
ANR	710075	Statement	"""ordinal=%03d plt=0x%08"""	1834:18:52658:52681	709507	4	True				
ANR	710076	Statement	PFMT64x	1834:42:52682:52688	709507	5	True				
ANR	710077	Statement	""" bind=%s type=%s"""	1834:49:52689:52706	709507	6	True				
ANR	710078	Statement	","	1834:67:52707:52707	709507	7	True				
ANR	710079	Statement	import	1835:4:52713:52718	709507	8	True				
ANR	710080	Statement	->	1835:10:52719:52720	709507	9	True				
ANR	710081	Statement	ordinal	1835:12:52721:52727	709507	10	True				
ANR	710082	Statement	","	1835:19:52728:52728	709507	11	True				
ANR	710083	Statement	addr	1835:21:52730:52733	709507	12	True				
ANR	710084	Statement	","	1835:25:52734:52734	709507	13	True				
ANR	710085	Statement	bind	1835:27:52736:52739	709507	14	True				
ANR	710086	Statement	","	1835:31:52740:52740	709507	15	True				
ANR	710087	Statement	type	1835:33:52742:52745	709507	16	True				
ANR	710088	Statement	)	1835:37:52746:52746	709507	17	True				
ANR	710089	ExpressionStatement		1835:38:52747:52747	709507	18	True				
ANR	710090	IfStatement	if ( import -> classname && import -> classname [ 0 ] )		709507	19					
ANR	710091	Condition	import -> classname && import -> classname [ 0 ]	1836:7:52756:52796	709507	0	True				
ANR	710092	AndExpression	import -> classname && import -> classname [ 0 ]		709507	0		&&			
ANR	710093	PtrMemberAccess	import -> classname		709507	0					
ANR	710094	Identifier	import		709507	0					
ANR	710095	Identifier	classname		709507	1					
ANR	710096	ArrayIndexing	import -> classname [ 0 ]		709507	1					
ANR	710097	PtrMemberAccess	import -> classname		709507	0					
ANR	710098	Identifier	import		709507	0					
ANR	710099	Identifier	classname		709507	1					
ANR	710100	PrimaryExpression	0		709507	1					
ANR	710101	CompoundStatement		79:50:2496:2496	709507	1					
ANR	710102	ExpressionStatement	"r_cons_printf ( "" classname=%s"" , import -> classname )"	1837:4:52805:52855	709507	0	True				
ANR	710103	CallExpression	"r_cons_printf ( "" classname=%s"" , import -> classname )"		709507	0					
ANR	710104	Callee	r_cons_printf		709507	0					
ANR	710105	Identifier	r_cons_printf		709507	0					
ANR	710106	ArgumentList	""" classname=%s"""		709507	1					
ANR	710107	Argument	""" classname=%s"""		709507	0					
ANR	710108	PrimaryExpression	""" classname=%s"""		709507	0					
ANR	710109	Argument	import -> classname		709507	1					
ANR	710110	PtrMemberAccess	import -> classname		709507	0					
ANR	710111	Identifier	import		709507	0					
ANR	710112	Identifier	classname		709507	1					
ANR	710113	ExpressionStatement	"r_cons_printf ( "" name=%s"" , symname )"	1839:3:52865:52900	709507	20	True				
ANR	710114	CallExpression	"r_cons_printf ( "" name=%s"" , symname )"		709507	0					
ANR	710115	Callee	r_cons_printf		709507	0					
ANR	710116	Identifier	r_cons_printf		709507	0					
ANR	710117	ArgumentList	""" name=%s"""		709507	1					
ANR	710118	Argument	""" name=%s"""		709507	0					
ANR	710119	PrimaryExpression	""" name=%s"""		709507	0					
ANR	710120	Argument	symname		709507	1					
ANR	710121	Identifier	symname		709507	0					
ANR	710122	IfStatement	if ( import -> descriptor && import -> descriptor [ 0 ] )		709507	21					
ANR	710123	Condition	import -> descriptor && import -> descriptor [ 0 ]	1840:7:52909:52951	709507	0	True				
ANR	710124	AndExpression	import -> descriptor && import -> descriptor [ 0 ]		709507	0		&&			
ANR	710125	PtrMemberAccess	import -> descriptor		709507	0					
ANR	710126	Identifier	import		709507	0					
ANR	710127	Identifier	descriptor		709507	1					
ANR	710128	ArrayIndexing	import -> descriptor [ 0 ]		709507	1					
ANR	710129	PtrMemberAccess	import -> descriptor		709507	0					
ANR	710130	Identifier	import		709507	0					
ANR	710131	Identifier	descriptor		709507	1					
ANR	710132	PrimaryExpression	0		709507	1					
ANR	710133	CompoundStatement		83:52:2651:2651	709507	1					
ANR	710134	ExpressionStatement	"r_cons_printf ( "" descriptor=%s"" , import -> descriptor )"	1841:4:52960:53012	709507	0	True				
ANR	710135	CallExpression	"r_cons_printf ( "" descriptor=%s"" , import -> descriptor )"		709507	0					
ANR	710136	Callee	r_cons_printf		709507	0					
ANR	710137	Identifier	r_cons_printf		709507	0					
ANR	710138	ArgumentList	""" descriptor=%s"""		709507	1					
ANR	710139	Argument	""" descriptor=%s"""		709507	0					
ANR	710140	PrimaryExpression	""" descriptor=%s"""		709507	0					
ANR	710141	Argument	import -> descriptor		709507	1					
ANR	710142	PtrMemberAccess	import -> descriptor		709507	0					
ANR	710143	Identifier	import		709507	0					
ANR	710144	Identifier	descriptor		709507	1					
ANR	710145	ExpressionStatement	r_cons_newline ( )	1843:3:53022:53039	709507	22	True				
ANR	710146	CallExpression	r_cons_newline ( )		709507	0					
ANR	710147	Callee	r_cons_newline		709507	0					
ANR	710148	Identifier	r_cons_newline		709507	0					
ANR	710149	ArgumentList			709507	1					
ANR	710150	ExpressionStatement	R_FREE ( symname )	1858:2:53436:53452	709507	6	True				
ANR	710151	CallExpression	R_FREE ( symname )		709507	0					
ANR	710152	Callee	R_FREE		709507	0					
ANR	710153	Identifier	R_FREE		709507	0					
ANR	710154	ArgumentList	symname		709507	1					
ANR	710155	Argument	symname		709507	0					
ANR	710156	Identifier	symname		709507	0					
ANR	710157	ExpressionStatement	i ++	1859:2:53456:53459	709507	7	True				
ANR	710158	PostIncDecOperationExpression	i ++		709507	0					
ANR	710159	Identifier	i		709507	0					
ANR	710160	IncDec	++		709507	1					
ANR	710161	IfStatement	if ( IS_MODE_JSON ( mode ) )		709507	21					
ANR	710162	Condition	IS_MODE_JSON ( mode )	1861:5:53469:53487	709507	0	True				
ANR	710163	CallExpression	IS_MODE_JSON ( mode )		709507	0					
ANR	710164	Callee	IS_MODE_JSON		709507	0					
ANR	710165	Identifier	IS_MODE_JSON		709507	0					
ANR	710166	ArgumentList	mode		709507	1					
ANR	710167	Argument	mode		709507	0					
ANR	710168	Identifier	mode		709507	0					
ANR	710169	CompoundStatement		104:26:3187:3187	709507	1					
ANR	710170	ExpressionStatement	"r_cons_print ( ""]"" )"	1862:2:53494:53512	709507	0	True				
ANR	710171	CallExpression	"r_cons_print ( ""]"" )"		709507	0					
ANR	710172	Callee	r_cons_print		709507	0					
ANR	710173	Identifier	r_cons_print		709507	0					
ANR	710174	ArgumentList	"""]"""		709507	1					
ANR	710175	Argument	"""]"""		709507	0					
ANR	710176	PrimaryExpression	"""]"""		709507	0					
ANR	710177	ElseStatement	else		709507	0					
ANR	710178	IfStatement	if ( IS_MODE_NORMAL ( mode ) )		709507	0					
ANR	710179	Condition	IS_MODE_NORMAL ( mode )	1863:12:53526:53546	709507	0	True				
ANR	710180	CallExpression	IS_MODE_NORMAL ( mode )		709507	0					
ANR	710181	Callee	IS_MODE_NORMAL		709507	0					
ANR	710182	Identifier	IS_MODE_NORMAL		709507	0					
ANR	710183	ArgumentList	mode		709507	1					
ANR	710184	Argument	mode		709507	0					
ANR	710185	Identifier	mode		709507	0					
ANR	710186	CompoundStatement		106:35:3246:3246	709507	1					
ANR	710187	ExpressionStatement	osymbols = NULL	1869:1:53739:53754	709507	22	True				
ANR	710188	AssignmentExpression	osymbols = NULL		709507	0		=			
ANR	710189	Identifier	osymbols		709507	0					
ANR	710190	Identifier	NULL		709507	1					
ANR	710191	ExpressionStatement	sdb_free ( mydb )	1870:1:53757:53772	709507	23	True				
ANR	710192	CallExpression	sdb_free ( mydb )		709507	0					
ANR	710193	Callee	sdb_free		709507	0					
ANR	710194	Identifier	sdb_free		709507	0					
ANR	710195	ArgumentList	mydb		709507	1					
ANR	710196	Argument	mydb		709507	0					
ANR	710197	Identifier	mydb		709507	0					
ANR	710198	ExpressionStatement	mydb = NULL	1871:1:53775:53786	709507	24	True				
ANR	710199	AssignmentExpression	mydb = NULL		709507	0		=			
ANR	710200	Identifier	mydb		709507	0					
ANR	710201	Identifier	NULL		709507	1					
ANR	710202	ReturnStatement	return true ;	1873:1:53796:53807	709507	25	True				
ANR	710203	Identifier	true		709507	0					
ANR	710204	ReturnType	static int		709507	1					
ANR	710205	Identifier	bin_imports		709507	2					
ANR	710206	ParameterList	"RCore * r , int mode , int va , const char * name"		709507	3					
ANR	710207	Parameter	RCore * r	1758:23:50256:50263	709507	0	True				
ANR	710208	ParameterType	RCore *		709507	0					
ANR	710209	Identifier	r		709507	1					
ANR	710210	Parameter	int mode	1758:33:50266:50273	709507	1	True				
ANR	710211	ParameterType	int		709507	0					
ANR	710212	Identifier	mode		709507	1					
ANR	710213	Parameter	int va	1758:43:50276:50281	709507	2	True				
ANR	710214	ParameterType	int		709507	0					
ANR	710215	Identifier	va		709507	1					
ANR	710216	Parameter	const char * name	1758:51:50284:50299	709507	3	True				
ANR	710217	ParameterType	const char *		709507	0					
ANR	710218	Identifier	name		709507	1					
ANR	710219	CFGEntryNode	ENTRY		709507		True				
ANR	710220	CFGExitNode	EXIT		709507		True				
ANR	710221	CFGErrorNode	ERROR		709507		True				
ANR	710222	Symbol	import -> classname		709507						
ANR	710223	Symbol	import -> descriptor		709507						
ANR	710224	Symbol	IS_MODE_SIMPLE		709507						
ANR	710225	Symbol	type		709507						
ANR	710226	Symbol	mode		709507						
ANR	710227	Symbol	bind		709507						
ANR	710228	Symbol	prname		709507						
ANR	710229	Symbol	lit		709507						
ANR	710230	Symbol	IS_MODE_SIMPLEST		709507						
ANR	710231	Symbol	mydb		709507						
ANR	710232	Symbol	info		709507						
ANR	710233	Symbol	strcmp		709507						
ANR	710234	Symbol	r_str_get		709507						
ANR	710235	Symbol	* import -> descriptor		709507						
ANR	710236	Symbol	imports		709507						
ANR	710237	Symbol	NULL		709507						
ANR	710238	Symbol	import -> name		709507						
ANR	710239	Symbol	r -> bin -> cur		709507						
ANR	710240	Symbol	* * import		709507						
ANR	710241	Symbol	cdsz		709507						
ANR	710242	Symbol	iter		709507						
ANR	710243	Symbol	va		709507						
ANR	710244	Symbol	r -> anal		709507						
ANR	710245	Symbol	r_bin_get_info		709507						
ANR	710246	Symbol	IS_MODE_SET		709507						
ANR	710247	Symbol	str		709507						
ANR	710248	Symbol	strstr		709507						
ANR	710249	Symbol	r_config_get_i		709507						
ANR	710250	Symbol	name		709507						
ANR	710251	Symbol	true		709507						
ANR	710252	Symbol	osymbols		709507						
ANR	710253	Symbol	* import		709507						
ANR	710254	Symbol	* import -> classname		709507						
ANR	710255	Symbol	import		709507						
ANR	710256	Symbol	r_core_bin_impaddr		709507						
ANR	710257	Symbol	symname		709507						
ANR	710258	Symbol	IS_MODE_JSON		709507						
ANR	710259	Symbol	r_str_newf		709507						
ANR	710260	Symbol	info -> bits		709507						
ANR	710261	Symbol	r_bin_get_imports		709507						
ANR	710262	Symbol	r -> bin		709507						
ANR	710263	Symbol	r_bin_demangle		709507						
ANR	710264	Symbol	* r -> bin		709507						
ANR	710265	Symbol	r_str_replace		709507						
ANR	710266	Symbol	* * r		709507						
ANR	710267	Symbol	dname		709507						
ANR	710268	Symbol	addr		709507						
ANR	710269	Symbol	r -> bin -> prefix		709507						
ANR	710270	Symbol	import -> bind		709507						
ANR	710271	Symbol	bin_demangle		709507						
ANR	710272	Symbol	keep_lib		709507						
ANR	710273	Symbol	false		709507						
ANR	710274	Symbol	i		709507						
ANR	710275	Symbol	r_str_escape_utf8_for_json		709507						
ANR	710276	Symbol	IS_MODE_NORMAL		709507						
ANR	710277	Symbol	r		709507						
ANR	710278	Symbol	R_META_TYPE_DATA		709507						
ANR	710279	Symbol	import -> type		709507						
ANR	710280	Symbol	info -> has_lit		709507						
ANR	710281	Symbol	IS_MODE_RAD		709507						
ANR	710282	Symbol	* info		709507						
ANR	710283	Symbol	strdup		709507						
ANR	710284	Symbol	* r		709507						
ANR	710285	Symbol	r -> config		709507						
ANR	710286	Function	getPrefixFor	1876:0:53812:54043							
ANR	710287	FunctionDef	getPrefixFor (const char * s)		710286	0					
ANR	710288	CompoundStatement		1876:47:53859:54043	710286	0					
ANR	710289	IfStatement	if ( s )		710286	0					
ANR	710290	Condition	s	1877:5:53866:53866	710286	0	True				
ANR	710291	Identifier	s		710286	0					
ANR	710292	CompoundStatement		2:8:9:9	710286	1					
ANR	710293	IfStatement	"if ( ! strcmp ( s , R_BIN_TYPE_NOTYPE_STR ) )"		710286	0					
ANR	710294	Condition	"! strcmp ( s , R_BIN_TYPE_NOTYPE_STR )"	1879:6:53901:53934	710286	0	True				
ANR	710295	UnaryOperationExpression	"! strcmp ( s , R_BIN_TYPE_NOTYPE_STR )"		710286	0					
ANR	710296	UnaryOperator	!		710286	0					
ANR	710297	CallExpression	"strcmp ( s , R_BIN_TYPE_NOTYPE_STR )"		710286	1					
ANR	710298	Callee	strcmp		710286	0					
ANR	710299	Identifier	strcmp		710286	0					
ANR	710300	ArgumentList	s		710286	1					
ANR	710301	Argument	s		710286	0					
ANR	710302	Identifier	s		710286	0					
ANR	710303	Argument	R_BIN_TYPE_NOTYPE_STR		710286	1					
ANR	710304	Identifier	R_BIN_TYPE_NOTYPE_STR		710286	0					
ANR	710305	CompoundStatement		4:42:77:77	710286	1					
ANR	710306	ReturnStatement	"return ""loc"" ;"	1880:3:53942:53954	710286	0	True				
ANR	710307	PrimaryExpression	"""loc"""		710286	0					
ANR	710308	IfStatement	"if ( ! strcmp ( s , R_BIN_TYPE_OBJECT_STR ) )"		710286	1					
ANR	710309	Condition	"! strcmp ( s , R_BIN_TYPE_OBJECT_STR )"	1882:6:53966:53999	710286	0	True				
ANR	710310	UnaryOperationExpression	"! strcmp ( s , R_BIN_TYPE_OBJECT_STR )"		710286	0					
ANR	710311	UnaryOperator	!		710286	0					
ANR	710312	CallExpression	"strcmp ( s , R_BIN_TYPE_OBJECT_STR )"		710286	1					
ANR	710313	Callee	strcmp		710286	0					
ANR	710314	Identifier	strcmp		710286	0					
ANR	710315	ArgumentList	s		710286	1					
ANR	710316	Argument	s		710286	0					
ANR	710317	Identifier	s		710286	0					
ANR	710318	Argument	R_BIN_TYPE_OBJECT_STR		710286	1					
ANR	710319	Identifier	R_BIN_TYPE_OBJECT_STR		710286	0					
ANR	710320	CompoundStatement		7:42:142:142	710286	1					
ANR	710321	ReturnStatement	"return ""obj"" ;"	1883:3:54007:54019	710286	0	True				
ANR	710322	PrimaryExpression	"""obj"""		710286	0					
ANR	710323	ReturnStatement	"return ""sym"" ;"	1886:1:54029:54041	710286	1	True				
ANR	710324	PrimaryExpression	"""sym"""		710286	0					
ANR	710325	ReturnType	static const char *		710286	1					
ANR	710326	Identifier	getPrefixFor		710286	2					
ANR	710327	ParameterList	const char * s		710286	3					
ANR	710328	Parameter	const char * s	1876:32:53844:53856	710286	0	True				
ANR	710329	ParameterType	const char *		710286	0					
ANR	710330	Identifier	s		710286	1					
ANR	710331	CFGEntryNode	ENTRY		710286		True				
ANR	710332	CFGExitNode	EXIT		710286		True				
ANR	710333	Symbol	strcmp		710286						
ANR	710334	Symbol	s		710286						
ANR	710335	Symbol	R_BIN_TYPE_NOTYPE_STR		710286						
ANR	710336	Symbol	R_BIN_TYPE_OBJECT_STR		710286						
ANR	710337	Function	construct_symbol_flagname	1891:0:54079:54351							
ANR	710338	FunctionDef	"construct_symbol_flagname (const char * pfx , const char * symname , int len)"		710337	0					
ANR	710339	CompoundStatement		1891:86:54165:54351	710337	0					
ANR	710340	IdentifierDeclStatement	"char * r = r_str_newf ( ""%s.%s"" , pfx , symname ) ;"	1892:1:54168:54212	710337	0	True				
ANR	710341	IdentifierDecl	"* r = r_str_newf ( ""%s.%s"" , pfx , symname )"		710337	0					
ANR	710342	IdentifierDeclType	char *		710337	0					
ANR	710343	Identifier	r		710337	1					
ANR	710344	AssignmentExpression	"* r = r_str_newf ( ""%s.%s"" , pfx , symname )"		710337	2		=			
ANR	710345	Identifier	r		710337	0					
ANR	710346	CallExpression	"r_str_newf ( ""%s.%s"" , pfx , symname )"		710337	1					
ANR	710347	Callee	r_str_newf		710337	0					
ANR	710348	Identifier	r_str_newf		710337	0					
ANR	710349	ArgumentList	"""%s.%s"""		710337	1					
ANR	710350	Argument	"""%s.%s"""		710337	0					
ANR	710351	PrimaryExpression	"""%s.%s"""		710337	0					
ANR	710352	Argument	pfx		710337	1					
ANR	710353	Identifier	pfx		710337	0					
ANR	710354	Argument	symname		710337	2					
ANR	710355	Identifier	symname		710337	0					
ANR	710356	IfStatement	if ( r )		710337	1					
ANR	710357	Condition	r	1893:5:54219:54219	710337	0	True				
ANR	710358	Identifier	r		710337	0					
ANR	710359	CompoundStatement		5:2:109:142	710337	1					
ANR	710360	ExpressionStatement	"r_name_filter ( r , len )"	1894:2:54226:54248	710337	0	True				
ANR	710361	CallExpression	"r_name_filter ( r , len )"		710337	0					
ANR	710362	Callee	r_name_filter		710337	0					
ANR	710363	Identifier	r_name_filter		710337	0					
ANR	710364	ArgumentList	r		710337	1					
ANR	710365	Argument	r		710337	0					
ANR	710366	Identifier	r		710337	0					
ANR	710367	Argument	len		710337	1					
ANR	710368	Identifier	len		710337	0					
ANR	710369	IdentifierDeclStatement	char * R = __filterQuotedShell ( r ) ;	1895:2:54275:54308	710337	1	True				
ANR	710370	IdentifierDecl	* R = __filterQuotedShell ( r )		710337	0					
ANR	710371	IdentifierDeclType	char *		710337	0					
ANR	710372	Identifier	R		710337	1					
ANR	710373	AssignmentExpression	* R = __filterQuotedShell ( r )		710337	2		=			
ANR	710374	Identifier	R		710337	0					
ANR	710375	CallExpression	__filterQuotedShell ( r )		710337	1					
ANR	710376	Callee	__filterQuotedShell		710337	0					
ANR	710377	Identifier	__filterQuotedShell		710337	0					
ANR	710378	ArgumentList	r		710337	1					
ANR	710379	Argument	r		710337	0					
ANR	710380	Identifier	r		710337	0					
ANR	710381	ExpressionStatement	free ( r )	1896:2:54312:54320	710337	2	True				
ANR	710382	CallExpression	free ( r )		710337	0					
ANR	710383	Callee	free		710337	0					
ANR	710384	Identifier	free		710337	0					
ANR	710385	ArgumentList	r		710337	1					
ANR	710386	Argument	r		710337	0					
ANR	710387	Identifier	r		710337	0					
ANR	710388	ReturnStatement	return R ;	1897:2:54324:54332	710337	3	True				
ANR	710389	Identifier	R		710337	0					
ANR	710390	ReturnStatement	return NULL ;	1899:1:54338:54349	710337	2	True				
ANR	710391	Identifier	NULL		710337	0					
ANR	710392	ReturnType	static char *		710337	1					
ANR	710393	Identifier	construct_symbol_flagname		710337	2					
ANR	710394	ParameterList	"const char * pfx , const char * symname , int len"		710337	3					
ANR	710395	Parameter	const char * pfx	1891:39:54118:54132	710337	0	True				
ANR	710396	ParameterType	const char *		710337	0					
ANR	710397	Identifier	pfx		710337	1					
ANR	710398	Parameter	const char * symname	1891:56:54135:54153	710337	1	True				
ANR	710399	ParameterType	const char *		710337	0					
ANR	710400	Identifier	symname		710337	1					
ANR	710401	Parameter	int len	1891:77:54156:54162	710337	2	True				
ANR	710402	ParameterType	int		710337	0					
ANR	710403	Identifier	len		710337	1					
ANR	710404	CFGEntryNode	ENTRY		710337		True				
ANR	710405	CFGExitNode	EXIT		710337		True				
ANR	710406	Symbol	r		710337						
ANR	710407	Symbol	R		710337						
ANR	710408	Symbol	pfx		710337						
ANR	710409	Symbol	NULL		710337						
ANR	710410	Symbol	len		710337						
ANR	710411	Symbol	symname		710337						
ANR	710412	Symbol	r_str_newf		710337						
ANR	710413	Symbol	__filterQuotedShell		710337						
ANR	710414	ClassDef	<unnamed>	1902:8:54362:54769							
ANR	710415	DeclStmt									
ANR	710416	Decl							const char	const char *	pfx
ANR	710417	DeclStmt									
ANR	710418	Decl							char	char *	name
ANR	710419	DeclStmt									
ANR	710420	Decl							char	char *	nameflag
ANR	710421	DeclStmt									
ANR	710422	Decl							char	char *	demname
ANR	710423	DeclStmt									
ANR	710424	Decl							char	char *	demflag
ANR	710425	DeclStmt									
ANR	710426	Decl							char	char *	classname
ANR	710427	DeclStmt									
ANR	710428	Decl							char	char *	classflag
ANR	710429	DeclStmt									
ANR	710430	Decl							char	char *	methname
ANR	710431	DeclStmt									
ANR	710432	Decl							char	char *	methflag
ANR	710433	DeclStmt									
ANR	710434	Decl									SymName
ANR	710435	Function	snInit	1914:0:54772:55978							
ANR	710436	FunctionDef	"snInit (RCore * r , SymName * sn , RBinSymbol * sym , const char * lang)"		710435	0					
ANR	710437	CompoundStatement		1914:77:54849:55978	710435	0					
ANR	710438	IdentifierDeclStatement	int bin_demangle = lang != NULL ;	1915:1:54852:54883	710435	0	True				
ANR	710439	IdentifierDecl	bin_demangle = lang != NULL		710435	0					
ANR	710440	IdentifierDeclType	int		710435	0					
ANR	710441	Identifier	bin_demangle		710435	1					
ANR	710442	AssignmentExpression	bin_demangle = lang != NULL		710435	2		=			
ANR	710443	Identifier	bin_demangle		710435	0					
ANR	710444	EqualityExpression	lang != NULL		710435	1		!=			
ANR	710445	Identifier	lang		710435	0					
ANR	710446	Identifier	NULL		710435	1					
ANR	710447	IdentifierDeclStatement	"bool keep_lib = r_config_get_i ( r -> config , ""bin.demangle.libs"" ) ;"	1916:1:54886:54949	710435	1	True				
ANR	710448	IdentifierDecl	"keep_lib = r_config_get_i ( r -> config , ""bin.demangle.libs"" )"		710435	0					
ANR	710449	IdentifierDeclType	bool		710435	0					
ANR	710450	Identifier	keep_lib		710435	1					
ANR	710451	AssignmentExpression	"keep_lib = r_config_get_i ( r -> config , ""bin.demangle.libs"" )"		710435	2		=			
ANR	710452	Identifier	keep_lib		710435	0					
ANR	710453	CallExpression	"r_config_get_i ( r -> config , ""bin.demangle.libs"" )"		710435	1					
ANR	710454	Callee	r_config_get_i		710435	0					
ANR	710455	Identifier	r_config_get_i		710435	0					
ANR	710456	ArgumentList	r -> config		710435	1					
ANR	710457	Argument	r -> config		710435	0					
ANR	710458	PtrMemberAccess	r -> config		710435	0					
ANR	710459	Identifier	r		710435	0					
ANR	710460	Identifier	config		710435	1					
ANR	710461	Argument	"""bin.demangle.libs"""		710435	1					
ANR	710462	PrimaryExpression	"""bin.demangle.libs"""		710435	0					
ANR	710463	IfStatement	if ( ! r || ! sym || ! sym -> name )		710435	2					
ANR	710464	Condition	! r || ! sym || ! sym -> name	1917:5:54956:54979	710435	0	True				
ANR	710465	OrExpression	! r || ! sym || ! sym -> name		710435	0		||			
ANR	710466	UnaryOperationExpression	! r		710435	0					
ANR	710467	UnaryOperator	!		710435	0					
ANR	710468	Identifier	r		710435	1					
ANR	710469	OrExpression	! sym || ! sym -> name		710435	1		||			
ANR	710470	UnaryOperationExpression	! sym		710435	0					
ANR	710471	UnaryOperator	!		710435	0					
ANR	710472	Identifier	sym		710435	1					
ANR	710473	UnaryOperationExpression	! sym -> name		710435	1					
ANR	710474	UnaryOperator	!		710435	0					
ANR	710475	PtrMemberAccess	sym -> name		710435	1					
ANR	710476	Identifier	sym		710435	0					
ANR	710477	Identifier	name		710435	1					
ANR	710478	CompoundStatement		4:31:132:132	710435	1					
ANR	710479	ReturnStatement	return ;	1918:2:54986:54992	710435	0	True				
ANR	710480	ExpressionStatement	sn -> name = strdup ( sym -> name )	1920:1:54998:55027	710435	3	True				
ANR	710481	AssignmentExpression	sn -> name = strdup ( sym -> name )		710435	0		=			
ANR	710482	PtrMemberAccess	sn -> name		710435	0					
ANR	710483	Identifier	sn		710435	0					
ANR	710484	Identifier	name		710435	1					
ANR	710485	CallExpression	strdup ( sym -> name )		710435	1					
ANR	710486	Callee	strdup		710435	0					
ANR	710487	Identifier	strdup		710435	0					
ANR	710488	ArgumentList	sym -> name		710435	1					
ANR	710489	Argument	sym -> name		710435	0					
ANR	710490	PtrMemberAccess	sym -> name		710435	0					
ANR	710491	Identifier	sym		710435	0					
ANR	710492	Identifier	name		710435	1					
ANR	710493	IdentifierDeclStatement	const char * pfx = getPrefixFor ( sym -> type ) ;	1921:1:55030:55072	710435	4	True				
ANR	710494	IdentifierDecl	* pfx = getPrefixFor ( sym -> type )		710435	0					
ANR	710495	IdentifierDeclType	const char *		710435	0					
ANR	710496	Identifier	pfx		710435	1					
ANR	710497	AssignmentExpression	* pfx = getPrefixFor ( sym -> type )		710435	2		=			
ANR	710498	Identifier	pfx		710435	0					
ANR	710499	CallExpression	getPrefixFor ( sym -> type )		710435	1					
ANR	710500	Callee	getPrefixFor		710435	0					
ANR	710501	Identifier	getPrefixFor		710435	0					
ANR	710502	ArgumentList	sym -> type		710435	1					
ANR	710503	Argument	sym -> type		710435	0					
ANR	710504	PtrMemberAccess	sym -> type		710435	0					
ANR	710505	Identifier	sym		710435	0					
ANR	710506	Identifier	type		710435	1					
ANR	710507	ExpressionStatement	"sn -> nameflag = construct_symbol_flagname ( pfx , r_bin_symbol_name ( sym ) , MAXFLAG_LEN_DEFAULT )"	1922:1:55075:55167	710435	5	True				
ANR	710508	AssignmentExpression	"sn -> nameflag = construct_symbol_flagname ( pfx , r_bin_symbol_name ( sym ) , MAXFLAG_LEN_DEFAULT )"		710435	0		=			
ANR	710509	PtrMemberAccess	sn -> nameflag		710435	0					
ANR	710510	Identifier	sn		710435	0					
ANR	710511	Identifier	nameflag		710435	1					
ANR	710512	CallExpression	"construct_symbol_flagname ( pfx , r_bin_symbol_name ( sym ) , MAXFLAG_LEN_DEFAULT )"		710435	1					
ANR	710513	Callee	construct_symbol_flagname		710435	0					
ANR	710514	Identifier	construct_symbol_flagname		710435	0					
ANR	710515	ArgumentList	pfx		710435	1					
ANR	710516	Argument	pfx		710435	0					
ANR	710517	Identifier	pfx		710435	0					
ANR	710518	Argument	r_bin_symbol_name ( sym )		710435	1					
ANR	710519	CallExpression	r_bin_symbol_name ( sym )		710435	0					
ANR	710520	Callee	r_bin_symbol_name		710435	0					
ANR	710521	Identifier	r_bin_symbol_name		710435	0					
ANR	710522	ArgumentList	sym		710435	1					
ANR	710523	Argument	sym		710435	0					
ANR	710524	Identifier	sym		710435	0					
ANR	710525	Argument	MAXFLAG_LEN_DEFAULT		710435	2					
ANR	710526	Identifier	MAXFLAG_LEN_DEFAULT		710435	0					
ANR	710527	IfStatement	if ( sym -> classname && sym -> classname [ 0 ] )		710435	6					
ANR	710528	Condition	sym -> classname && sym -> classname [ 0 ]	1923:5:55174:55208	710435	0	True				
ANR	710529	AndExpression	sym -> classname && sym -> classname [ 0 ]		710435	0		&&			
ANR	710530	PtrMemberAccess	sym -> classname		710435	0					
ANR	710531	Identifier	sym		710435	0					
ANR	710532	Identifier	classname		710435	1					
ANR	710533	ArrayIndexing	sym -> classname [ 0 ]		710435	1					
ANR	710534	PtrMemberAccess	sym -> classname		710435	0					
ANR	710535	Identifier	sym		710435	0					
ANR	710536	Identifier	classname		710435	1					
ANR	710537	PrimaryExpression	0		710435	1					
ANR	710538	CompoundStatement		14:2:531:583	710435	1					
ANR	710539	ExpressionStatement	sn -> classname = strdup ( sym -> classname )	1924:2:55215:55254	710435	0	True				
ANR	710540	AssignmentExpression	sn -> classname = strdup ( sym -> classname )		710435	0		=			
ANR	710541	PtrMemberAccess	sn -> classname		710435	0					
ANR	710542	Identifier	sn		710435	0					
ANR	710543	Identifier	classname		710435	1					
ANR	710544	CallExpression	strdup ( sym -> classname )		710435	1					
ANR	710545	Callee	strdup		710435	0					
ANR	710546	Identifier	strdup		710435	0					
ANR	710547	ArgumentList	sym -> classname		710435	1					
ANR	710548	Argument	sym -> classname		710435	0					
ANR	710549	PtrMemberAccess	sym -> classname		710435	0					
ANR	710550	Identifier	sym		710435	0					
ANR	710551	Identifier	classname		710435	1					
ANR	710552	ExpressionStatement	"sn -> classflag = r_str_newf ( ""sym.%s.%s"" , sn -> classname , sn -> name )"	1925:2:55258:55323	710435	1	True				
ANR	710553	AssignmentExpression	"sn -> classflag = r_str_newf ( ""sym.%s.%s"" , sn -> classname , sn -> name )"		710435	0		=			
ANR	710554	PtrMemberAccess	sn -> classflag		710435	0					
ANR	710555	Identifier	sn		710435	0					
ANR	710556	Identifier	classflag		710435	1					
ANR	710557	CallExpression	"r_str_newf ( ""sym.%s.%s"" , sn -> classname , sn -> name )"		710435	1					
ANR	710558	Callee	r_str_newf		710435	0					
ANR	710559	Identifier	r_str_newf		710435	0					
ANR	710560	ArgumentList	"""sym.%s.%s"""		710435	1					
ANR	710561	Argument	"""sym.%s.%s"""		710435	0					
ANR	710562	PrimaryExpression	"""sym.%s.%s"""		710435	0					
ANR	710563	Argument	sn -> classname		710435	1					
ANR	710564	PtrMemberAccess	sn -> classname		710435	0					
ANR	710565	Identifier	sn		710435	0					
ANR	710566	Identifier	classname		710435	1					
ANR	710567	Argument	sn -> name		710435	2					
ANR	710568	PtrMemberAccess	sn -> name		710435	0					
ANR	710569	Identifier	sn		710435	0					
ANR	710570	Identifier	name		710435	1					
ANR	710571	ExpressionStatement	"r_name_filter ( sn -> classflag , MAXFLAG_LEN_DEFAULT )"	1926:2:55327:55377	710435	2	True				
ANR	710572	CallExpression	"r_name_filter ( sn -> classflag , MAXFLAG_LEN_DEFAULT )"		710435	0					
ANR	710573	Callee	r_name_filter		710435	0					
ANR	710574	Identifier	r_name_filter		710435	0					
ANR	710575	ArgumentList	sn -> classflag		710435	1					
ANR	710576	Argument	sn -> classflag		710435	0					
ANR	710577	PtrMemberAccess	sn -> classflag		710435	0					
ANR	710578	Identifier	sn		710435	0					
ANR	710579	Identifier	classflag		710435	1					
ANR	710580	Argument	MAXFLAG_LEN_DEFAULT		710435	1					
ANR	710581	Identifier	MAXFLAG_LEN_DEFAULT		710435	0					
ANR	710582	IdentifierDeclStatement	const char * name = sym -> dname ? sym -> dname : sym -> name ;	1927:2:55381:55433	710435	3	True				
ANR	710583	IdentifierDecl	* name = sym -> dname ? sym -> dname : sym -> name		710435	0					
ANR	710584	IdentifierDeclType	const char *		710435	0					
ANR	710585	Identifier	name		710435	1					
ANR	710586	AssignmentExpression	* name = sym -> dname ? sym -> dname : sym -> name		710435	2		=			
ANR	710587	Identifier	name		710435	0					
ANR	710588	ConditionalExpression	sym -> dname ? sym -> dname : sym -> name		710435	1					
ANR	710589	Condition	sym -> dname		710435	0					
ANR	710590	PtrMemberAccess	sym -> dname		710435	0					
ANR	710591	Identifier	sym		710435	0					
ANR	710592	Identifier	dname		710435	1					
ANR	710593	PtrMemberAccess	sym -> dname		710435	1					
ANR	710594	Identifier	sym		710435	0					
ANR	710595	Identifier	dname		710435	1					
ANR	710596	PtrMemberAccess	sym -> name		710435	2					
ANR	710597	Identifier	sym		710435	0					
ANR	710598	Identifier	name		710435	1					
ANR	710599	ExpressionStatement	"sn -> methname = r_str_newf ( ""%s::%s"" , sn -> classname , name )"	1928:2:55437:55494	710435	4	True				
ANR	710600	AssignmentExpression	"sn -> methname = r_str_newf ( ""%s::%s"" , sn -> classname , name )"		710435	0		=			
ANR	710601	PtrMemberAccess	sn -> methname		710435	0					
ANR	710602	Identifier	sn		710435	0					
ANR	710603	Identifier	methname		710435	1					
ANR	710604	CallExpression	"r_str_newf ( ""%s::%s"" , sn -> classname , name )"		710435	1					
ANR	710605	Callee	r_str_newf		710435	0					
ANR	710606	Identifier	r_str_newf		710435	0					
ANR	710607	ArgumentList	"""%s::%s"""		710435	1					
ANR	710608	Argument	"""%s::%s"""		710435	0					
ANR	710609	PrimaryExpression	"""%s::%s"""		710435	0					
ANR	710610	Argument	sn -> classname		710435	1					
ANR	710611	PtrMemberAccess	sn -> classname		710435	0					
ANR	710612	Identifier	sn		710435	0					
ANR	710613	Identifier	classname		710435	1					
ANR	710614	Argument	name		710435	2					
ANR	710615	Identifier	name		710435	0					
ANR	710616	ExpressionStatement	"sn -> methflag = r_str_newf ( ""sym.%s.%s"" , sn -> classname , name )"	1929:2:55498:55558	710435	5	True				
ANR	710617	AssignmentExpression	"sn -> methflag = r_str_newf ( ""sym.%s.%s"" , sn -> classname , name )"		710435	0		=			
ANR	710618	PtrMemberAccess	sn -> methflag		710435	0					
ANR	710619	Identifier	sn		710435	0					
ANR	710620	Identifier	methflag		710435	1					
ANR	710621	CallExpression	"r_str_newf ( ""sym.%s.%s"" , sn -> classname , name )"		710435	1					
ANR	710622	Callee	r_str_newf		710435	0					
ANR	710623	Identifier	r_str_newf		710435	0					
ANR	710624	ArgumentList	"""sym.%s.%s"""		710435	1					
ANR	710625	Argument	"""sym.%s.%s"""		710435	0					
ANR	710626	PrimaryExpression	"""sym.%s.%s"""		710435	0					
ANR	710627	Argument	sn -> classname		710435	1					
ANR	710628	PtrMemberAccess	sn -> classname		710435	0					
ANR	710629	Identifier	sn		710435	0					
ANR	710630	Identifier	classname		710435	1					
ANR	710631	Argument	name		710435	2					
ANR	710632	Identifier	name		710435	0					
ANR	710633	ExpressionStatement	"r_name_filter ( sn -> methflag , strlen ( sn -> methflag ) )"	1930:2:55562:55613	710435	6	True				
ANR	710634	CallExpression	"r_name_filter ( sn -> methflag , strlen ( sn -> methflag ) )"		710435	0					
ANR	710635	Callee	r_name_filter		710435	0					
ANR	710636	Identifier	r_name_filter		710435	0					
ANR	710637	ArgumentList	sn -> methflag		710435	1					
ANR	710638	Argument	sn -> methflag		710435	0					
ANR	710639	PtrMemberAccess	sn -> methflag		710435	0					
ANR	710640	Identifier	sn		710435	0					
ANR	710641	Identifier	methflag		710435	1					
ANR	710642	Argument	strlen ( sn -> methflag )		710435	1					
ANR	710643	CallExpression	strlen ( sn -> methflag )		710435	0					
ANR	710644	Callee	strlen		710435	0					
ANR	710645	Identifier	strlen		710435	0					
ANR	710646	ArgumentList	sn -> methflag		710435	1					
ANR	710647	Argument	sn -> methflag		710435	0					
ANR	710648	PtrMemberAccess	sn -> methflag		710435	0					
ANR	710649	Identifier	sn		710435	0					
ANR	710650	Identifier	methflag		710435	1					
ANR	710651	ElseStatement	else		710435	0					
ANR	710652	CompoundStatement		18:8:773:773	710435	0					
ANR	710653	ExpressionStatement	sn -> classname = NULL	1932:2:55627:55647	710435	0	True				
ANR	710654	AssignmentExpression	sn -> classname = NULL		710435	0		=			
ANR	710655	PtrMemberAccess	sn -> classname		710435	0					
ANR	710656	Identifier	sn		710435	0					
ANR	710657	Identifier	classname		710435	1					
ANR	710658	Identifier	NULL		710435	1					
ANR	710659	ExpressionStatement	sn -> classflag = NULL	1933:2:55651:55671	710435	1	True				
ANR	710660	AssignmentExpression	sn -> classflag = NULL		710435	0		=			
ANR	710661	PtrMemberAccess	sn -> classflag		710435	0					
ANR	710662	Identifier	sn		710435	0					
ANR	710663	Identifier	classflag		710435	1					
ANR	710664	Identifier	NULL		710435	1					
ANR	710665	ExpressionStatement	sn -> methname = NULL	1934:2:55675:55694	710435	2	True				
ANR	710666	AssignmentExpression	sn -> methname = NULL		710435	0		=			
ANR	710667	PtrMemberAccess	sn -> methname		710435	0					
ANR	710668	Identifier	sn		710435	0					
ANR	710669	Identifier	methname		710435	1					
ANR	710670	Identifier	NULL		710435	1					
ANR	710671	ExpressionStatement	sn -> methflag = NULL	1935:2:55698:55717	710435	3	True				
ANR	710672	AssignmentExpression	sn -> methflag = NULL		710435	0		=			
ANR	710673	PtrMemberAccess	sn -> methflag		710435	0					
ANR	710674	Identifier	sn		710435	0					
ANR	710675	Identifier	methflag		710435	1					
ANR	710676	Identifier	NULL		710435	1					
ANR	710677	ExpressionStatement	sn -> demname = NULL	1937:1:55723:55741	710435	7	True				
ANR	710678	AssignmentExpression	sn -> demname = NULL		710435	0		=			
ANR	710679	PtrMemberAccess	sn -> demname		710435	0					
ANR	710680	Identifier	sn		710435	0					
ANR	710681	Identifier	demname		710435	1					
ANR	710682	Identifier	NULL		710435	1					
ANR	710683	ExpressionStatement	sn -> demflag = NULL	1938:1:55744:55762	710435	8	True				
ANR	710684	AssignmentExpression	sn -> demflag = NULL		710435	0		=			
ANR	710685	PtrMemberAccess	sn -> demflag		710435	0					
ANR	710686	Identifier	sn		710435	0					
ANR	710687	Identifier	demflag		710435	1					
ANR	710688	Identifier	NULL		710435	1					
ANR	710689	IfStatement	if ( bin_demangle && sym -> paddr )		710435	9					
ANR	710690	Condition	bin_demangle && sym -> paddr	1939:5:55769:55794	710435	0	True				
ANR	710691	AndExpression	bin_demangle && sym -> paddr		710435	0		&&			
ANR	710692	Identifier	bin_demangle		710435	0					
ANR	710693	PtrMemberAccess	sym -> paddr		710435	1					
ANR	710694	Identifier	sym		710435	0					
ANR	710695	Identifier	paddr		710435	1					
ANR	710696	CompoundStatement		26:33:947:947	710435	1					
ANR	710697	ExpressionStatement	"sn -> demname = r_bin_demangle ( r -> bin -> cur , lang , sn -> name , sym -> vaddr , keep_lib )"	1940:2:55801:55881	710435	0	True				
ANR	710698	AssignmentExpression	"sn -> demname = r_bin_demangle ( r -> bin -> cur , lang , sn -> name , sym -> vaddr , keep_lib )"		710435	0		=			
ANR	710699	PtrMemberAccess	sn -> demname		710435	0					
ANR	710700	Identifier	sn		710435	0					
ANR	710701	Identifier	demname		710435	1					
ANR	710702	CallExpression	"r_bin_demangle ( r -> bin -> cur , lang , sn -> name , sym -> vaddr , keep_lib )"		710435	1					
ANR	710703	Callee	r_bin_demangle		710435	0					
ANR	710704	Identifier	r_bin_demangle		710435	0					
ANR	710705	ArgumentList	r -> bin -> cur		710435	1					
ANR	710706	Argument	r -> bin -> cur		710435	0					
ANR	710707	PtrMemberAccess	r -> bin -> cur		710435	0					
ANR	710708	PtrMemberAccess	r -> bin		710435	0					
ANR	710709	Identifier	r		710435	0					
ANR	710710	Identifier	bin		710435	1					
ANR	710711	Identifier	cur		710435	1					
ANR	710712	Argument	lang		710435	1					
ANR	710713	Identifier	lang		710435	0					
ANR	710714	Argument	sn -> name		710435	2					
ANR	710715	PtrMemberAccess	sn -> name		710435	0					
ANR	710716	Identifier	sn		710435	0					
ANR	710717	Identifier	name		710435	1					
ANR	710718	Argument	sym -> vaddr		710435	3					
ANR	710719	PtrMemberAccess	sym -> vaddr		710435	0					
ANR	710720	Identifier	sym		710435	0					
ANR	710721	Identifier	vaddr		710435	1					
ANR	710722	Argument	keep_lib		710435	4					
ANR	710723	Identifier	keep_lib		710435	0					
ANR	710724	IfStatement	if ( sn -> demname )		710435	1					
ANR	710725	Condition	sn -> demname	1941:6:55889:55899	710435	0	True				
ANR	710726	PtrMemberAccess	sn -> demname		710435	0					
ANR	710727	Identifier	sn		710435	0					
ANR	710728	Identifier	demname		710435	1					
ANR	710729	CompoundStatement		28:19:1052:1052	710435	1					
ANR	710730	ExpressionStatement	"sn -> demflag = construct_symbol_flagname ( pfx , sn -> demname , - 1 )"	1942:3:55907:55969	710435	0	True				
ANR	710731	AssignmentExpression	"sn -> demflag = construct_symbol_flagname ( pfx , sn -> demname , - 1 )"		710435	0		=			
ANR	710732	PtrMemberAccess	sn -> demflag		710435	0					
ANR	710733	Identifier	sn		710435	0					
ANR	710734	Identifier	demflag		710435	1					
ANR	710735	CallExpression	"construct_symbol_flagname ( pfx , sn -> demname , - 1 )"		710435	1					
ANR	710736	Callee	construct_symbol_flagname		710435	0					
ANR	710737	Identifier	construct_symbol_flagname		710435	0					
ANR	710738	ArgumentList	pfx		710435	1					
ANR	710739	Argument	pfx		710435	0					
ANR	710740	Identifier	pfx		710435	0					
ANR	710741	Argument	sn -> demname		710435	1					
ANR	710742	PtrMemberAccess	sn -> demname		710435	0					
ANR	710743	Identifier	sn		710435	0					
ANR	710744	Identifier	demname		710435	1					
ANR	710745	Argument	- 1		710435	2					
ANR	710746	UnaryOperationExpression	- 1		710435	0					
ANR	710747	UnaryOperator	-		710435	0					
ANR	710748	PrimaryExpression	1		710435	1					
ANR	710749	ReturnType	static void		710435	1					
ANR	710750	Identifier	snInit		710435	2					
ANR	710751	ParameterList	"RCore * r , SymName * sn , RBinSymbol * sym , const char * lang"		710435	3					
ANR	710752	Parameter	RCore * r	1914:19:54791:54798	710435	0	True				
ANR	710753	ParameterType	RCore *		710435	0					
ANR	710754	Identifier	r		710435	1					
ANR	710755	Parameter	SymName * sn	1914:29:54801:54811	710435	1	True				
ANR	710756	ParameterType	SymName *		710435	0					
ANR	710757	Identifier	sn		710435	1					
ANR	710758	Parameter	RBinSymbol * sym	1914:42:54814:54828	710435	2	True				
ANR	710759	ParameterType	RBinSymbol *		710435	0					
ANR	710760	Identifier	sym		710435	1					
ANR	710761	Parameter	const char * lang	1914:59:54831:54846	710435	3	True				
ANR	710762	ParameterType	const char *		710435	0					
ANR	710763	Identifier	lang		710435	1					
ANR	710764	CFGEntryNode	ENTRY		710435		True				
ANR	710765	CFGExitNode	EXIT		710435		True				
ANR	710766	Symbol	r_bin_symbol_name		710435						
ANR	710767	Symbol	* sn		710435						
ANR	710768	Symbol	pfx		710435						
ANR	710769	Symbol	sym -> classname		710435						
ANR	710770	Symbol	sym		710435						
ANR	710771	Symbol	MAXFLAG_LEN_DEFAULT		710435						
ANR	710772	Symbol	sym -> type		710435						
ANR	710773	Symbol	r_str_newf		710435						
ANR	710774	Symbol	sn -> demflag		710435						
ANR	710775	Symbol	strlen		710435						
ANR	710776	Symbol	sn -> name		710435						
ANR	710777	Symbol	r -> bin		710435						
ANR	710778	Symbol	r_bin_demangle		710435						
ANR	710779	Symbol	* r -> bin		710435						
ANR	710780	Symbol	* * r		710435						
ANR	710781	Symbol	sn		710435						
ANR	710782	Symbol	* * sym		710435						
ANR	710783	Symbol	lang		710435						
ANR	710784	Symbol	NULL		710435						
ANR	710785	Symbol	sn -> methname		710435						
ANR	710786	Symbol	r -> bin -> cur		710435						
ANR	710787	Symbol	sym -> dname		710435						
ANR	710788	Symbol	sym -> vaddr		710435						
ANR	710789	Symbol	bin_demangle		710435						
ANR	710790	Symbol	getPrefixFor		710435						
ANR	710791	Symbol	sn -> classflag		710435						
ANR	710792	Symbol	keep_lib		710435						
ANR	710793	Symbol	sym -> paddr		710435						
ANR	710794	Symbol	sn -> demname		710435						
ANR	710795	Symbol	sn -> nameflag		710435						
ANR	710796	Symbol	construct_symbol_flagname		710435						
ANR	710797	Symbol	* sym		710435						
ANR	710798	Symbol	r		710435						
ANR	710799	Symbol	r_config_get_i		710435						
ANR	710800	Symbol	sym -> name		710435						
ANR	710801	Symbol	sn -> classname		710435						
ANR	710802	Symbol	name		710435						
ANR	710803	Symbol	* sym -> classname		710435						
ANR	710804	Symbol	strdup		710435						
ANR	710805	Symbol	* r		710435						
ANR	710806	Symbol	sn -> methflag		710435						
ANR	710807	Symbol	r -> config		710435						
ANR	710808	Function	snFini	1947:0:55981:56203							
ANR	710809	FunctionDef	snFini (SymName * sn)		710808	0					
ANR	710810	CompoundStatement		1947:32:56013:56203	710808	0					
ANR	710811	ExpressionStatement	R_FREE ( sn -> name )	1948:1:56016:56033	710808	0	True				
ANR	710812	CallExpression	R_FREE ( sn -> name )		710808	0					
ANR	710813	Callee	R_FREE		710808	0					
ANR	710814	Identifier	R_FREE		710808	0					
ANR	710815	ArgumentList	sn -> name		710808	1					
ANR	710816	Argument	sn -> name		710808	0					
ANR	710817	PtrMemberAccess	sn -> name		710808	0					
ANR	710818	Identifier	sn		710808	0					
ANR	710819	Identifier	name		710808	1					
ANR	710820	ExpressionStatement	R_FREE ( sn -> nameflag )	1949:1:56036:56057	710808	1	True				
ANR	710821	CallExpression	R_FREE ( sn -> nameflag )		710808	0					
ANR	710822	Callee	R_FREE		710808	0					
ANR	710823	Identifier	R_FREE		710808	0					
ANR	710824	ArgumentList	sn -> nameflag		710808	1					
ANR	710825	Argument	sn -> nameflag		710808	0					
ANR	710826	PtrMemberAccess	sn -> nameflag		710808	0					
ANR	710827	Identifier	sn		710808	0					
ANR	710828	Identifier	nameflag		710808	1					
ANR	710829	ExpressionStatement	R_FREE ( sn -> demname )	1950:1:56060:56080	710808	2	True				
ANR	710830	CallExpression	R_FREE ( sn -> demname )		710808	0					
ANR	710831	Callee	R_FREE		710808	0					
ANR	710832	Identifier	R_FREE		710808	0					
ANR	710833	ArgumentList	sn -> demname		710808	1					
ANR	710834	Argument	sn -> demname		710808	0					
ANR	710835	PtrMemberAccess	sn -> demname		710808	0					
ANR	710836	Identifier	sn		710808	0					
ANR	710837	Identifier	demname		710808	1					
ANR	710838	ExpressionStatement	R_FREE ( sn -> demflag )	1951:1:56083:56103	710808	3	True				
ANR	710839	CallExpression	R_FREE ( sn -> demflag )		710808	0					
ANR	710840	Callee	R_FREE		710808	0					
ANR	710841	Identifier	R_FREE		710808	0					
ANR	710842	ArgumentList	sn -> demflag		710808	1					
ANR	710843	Argument	sn -> demflag		710808	0					
ANR	710844	PtrMemberAccess	sn -> demflag		710808	0					
ANR	710845	Identifier	sn		710808	0					
ANR	710846	Identifier	demflag		710808	1					
ANR	710847	ExpressionStatement	R_FREE ( sn -> classname )	1952:1:56106:56128	710808	4	True				
ANR	710848	CallExpression	R_FREE ( sn -> classname )		710808	0					
ANR	710849	Callee	R_FREE		710808	0					
ANR	710850	Identifier	R_FREE		710808	0					
ANR	710851	ArgumentList	sn -> classname		710808	1					
ANR	710852	Argument	sn -> classname		710808	0					
ANR	710853	PtrMemberAccess	sn -> classname		710808	0					
ANR	710854	Identifier	sn		710808	0					
ANR	710855	Identifier	classname		710808	1					
ANR	710856	ExpressionStatement	R_FREE ( sn -> classflag )	1953:1:56131:56153	710808	5	True				
ANR	710857	CallExpression	R_FREE ( sn -> classflag )		710808	0					
ANR	710858	Callee	R_FREE		710808	0					
ANR	710859	Identifier	R_FREE		710808	0					
ANR	710860	ArgumentList	sn -> classflag		710808	1					
ANR	710861	Argument	sn -> classflag		710808	0					
ANR	710862	PtrMemberAccess	sn -> classflag		710808	0					
ANR	710863	Identifier	sn		710808	0					
ANR	710864	Identifier	classflag		710808	1					
ANR	710865	ExpressionStatement	R_FREE ( sn -> methname )	1954:1:56156:56177	710808	6	True				
ANR	710866	CallExpression	R_FREE ( sn -> methname )		710808	0					
ANR	710867	Callee	R_FREE		710808	0					
ANR	710868	Identifier	R_FREE		710808	0					
ANR	710869	ArgumentList	sn -> methname		710808	1					
ANR	710870	Argument	sn -> methname		710808	0					
ANR	710871	PtrMemberAccess	sn -> methname		710808	0					
ANR	710872	Identifier	sn		710808	0					
ANR	710873	Identifier	methname		710808	1					
ANR	710874	ExpressionStatement	R_FREE ( sn -> methflag )	1955:1:56180:56201	710808	7	True				
ANR	710875	CallExpression	R_FREE ( sn -> methflag )		710808	0					
ANR	710876	Callee	R_FREE		710808	0					
ANR	710877	Identifier	R_FREE		710808	0					
ANR	710878	ArgumentList	sn -> methflag		710808	1					
ANR	710879	Argument	sn -> methflag		710808	0					
ANR	710880	PtrMemberAccess	sn -> methflag		710808	0					
ANR	710881	Identifier	sn		710808	0					
ANR	710882	Identifier	methflag		710808	1					
ANR	710883	ReturnType	static void		710808	1					
ANR	710884	Identifier	snFini		710808	2					
ANR	710885	ParameterList	SymName * sn		710808	3					
ANR	710886	Parameter	SymName * sn	1947:19:56000:56010	710808	0	True				
ANR	710887	ParameterType	SymName *		710808	0					
ANR	710888	Identifier	sn		710808	1					
ANR	710889	CFGEntryNode	ENTRY		710808		True				
ANR	710890	CFGExitNode	EXIT		710808		True				
ANR	710891	Symbol	* sn		710808						
ANR	710892	Symbol	sn -> name		710808						
ANR	710893	Symbol	sn -> methname		710808						
ANR	710894	Symbol	sn -> classflag		710808						
ANR	710895	Symbol	sn -> classname		710808						
ANR	710896	Symbol	sn -> demname		710808						
ANR	710897	Symbol	sn		710808						
ANR	710898	Symbol	sn -> nameflag		710808						
ANR	710899	Symbol	sn -> methflag		710808						
ANR	710900	Symbol	sn -> demflag		710808						
ANR	710901	Function	isAnExport	1958:0:56206:56403							
ANR	710902	FunctionDef	isAnExport (RBinSymbol * s)		710901	0					
ANR	710903	CompoundStatement		1958:38:56244:56403	710901	0					
ANR	710904	IfStatement	"if ( ! strncmp ( s -> name , ""imp."" , 4 ) )"		710901	0					
ANR	710905	Condition	"! strncmp ( s -> name , ""imp."" , 4 )"	1960:5:56288:56316	710901	0	True				
ANR	710906	UnaryOperationExpression	"! strncmp ( s -> name , ""imp."" , 4 )"		710901	0					
ANR	710907	UnaryOperator	!		710901	0					
ANR	710908	CallExpression	"strncmp ( s -> name , ""imp."" , 4 )"		710901	1					
ANR	710909	Callee	strncmp		710901	0					
ANR	710910	Identifier	strncmp		710901	0					
ANR	710911	ArgumentList	s -> name		710901	1					
ANR	710912	Argument	s -> name		710901	0					
ANR	710913	PtrMemberAccess	s -> name		710901	0					
ANR	710914	Identifier	s		710901	0					
ANR	710915	Identifier	name		710901	1					
ANR	710916	Argument	"""imp."""		710901	1					
ANR	710917	PrimaryExpression	"""imp."""		710901	0					
ANR	710918	Argument	4		710901	2					
ANR	710919	PrimaryExpression	4		710901	0					
ANR	710920	CompoundStatement		3:36:74:74	710901	1					
ANR	710921	ReturnStatement	return false ;	1961:2:56323:56335	710901	0	True				
ANR	710922	Identifier	false		710901	0					
ANR	710923	ReturnStatement	"return ( s -> bind && ! strcmp ( s -> bind , R_BIN_BIND_GLOBAL_STR ) ) ;"	1963:1:56341:56401	710901	1	True				
ANR	710924	AndExpression	"s -> bind && ! strcmp ( s -> bind , R_BIN_BIND_GLOBAL_STR )"		710901	0		&&			
ANR	710925	PtrMemberAccess	s -> bind		710901	0					
ANR	710926	Identifier	s		710901	0					
ANR	710927	Identifier	bind		710901	1					
ANR	710928	UnaryOperationExpression	"! strcmp ( s -> bind , R_BIN_BIND_GLOBAL_STR )"		710901	1					
ANR	710929	UnaryOperator	!		710901	0					
ANR	710930	CallExpression	"strcmp ( s -> bind , R_BIN_BIND_GLOBAL_STR )"		710901	1					
ANR	710931	Callee	strcmp		710901	0					
ANR	710932	Identifier	strcmp		710901	0					
ANR	710933	ArgumentList	s -> bind		710901	1					
ANR	710934	Argument	s -> bind		710901	0					
ANR	710935	PtrMemberAccess	s -> bind		710901	0					
ANR	710936	Identifier	s		710901	0					
ANR	710937	Identifier	bind		710901	1					
ANR	710938	Argument	R_BIN_BIND_GLOBAL_STR		710901	1					
ANR	710939	Identifier	R_BIN_BIND_GLOBAL_STR		710901	0					
ANR	710940	ReturnType	static bool		710901	1					
ANR	710941	Identifier	isAnExport		710901	2					
ANR	710942	ParameterList	RBinSymbol * s		710901	3					
ANR	710943	Parameter	RBinSymbol * s	1958:23:56229:56241	710901	0	True				
ANR	710944	ParameterType	RBinSymbol *		710901	0					
ANR	710945	Identifier	s		710901	1					
ANR	710946	CFGEntryNode	ENTRY		710901		True				
ANR	710947	CFGExitNode	EXIT		710901		True				
ANR	710948	Symbol	strcmp		710901						
ANR	710949	Symbol	strncmp		710901						
ANR	710950	Symbol	s		710901						
ANR	710951	Symbol	s -> name		710901						
ANR	710952	Symbol	s -> bind		710901						
ANR	710953	Symbol	false		710901						
ANR	710954	Symbol	R_BIN_BIND_GLOBAL_STR		710901						
ANR	710955	Symbol	* s		710901						
ANR	710956	Function	compute_addr	1966:0:56406:56539							
ANR	710957	FunctionDef	"compute_addr (RBin * bin , ut64 paddr , ut64 vaddr , int va)"		710956	0					
ANR	710958	CompoundStatement		1966:68:56474:56539	710956	0					
ANR	710959	ReturnStatement	"return paddr == UT64_MAX ? vaddr : rva ( bin , paddr , vaddr , va ) ;"	1967:1:56477:56537	710956	0	True				
ANR	710960	ConditionalExpression	"paddr == UT64_MAX ? vaddr : rva ( bin , paddr , vaddr , va )"		710956	0					
ANR	710961	Condition	paddr == UT64_MAX		710956	0					
ANR	710962	EqualityExpression	paddr == UT64_MAX		710956	0		==			
ANR	710963	Identifier	paddr		710956	0					
ANR	710964	Identifier	UT64_MAX		710956	1					
ANR	710965	Identifier	vaddr		710956	1					
ANR	710966	CallExpression	"rva ( bin , paddr , vaddr , va )"		710956	2					
ANR	710967	Callee	rva		710956	0					
ANR	710968	Identifier	rva		710956	0					
ANR	710969	ArgumentList	bin		710956	1					
ANR	710970	Argument	bin		710956	0					
ANR	710971	Identifier	bin		710956	0					
ANR	710972	Argument	paddr		710956	1					
ANR	710973	Identifier	paddr		710956	0					
ANR	710974	Argument	vaddr		710956	2					
ANR	710975	Identifier	vaddr		710956	0					
ANR	710976	Argument	va		710956	3					
ANR	710977	Identifier	va		710956	0					
ANR	710978	ReturnType	static ut64		710956	1					
ANR	710979	Identifier	compute_addr		710956	2					
ANR	710980	ParameterList	"RBin * bin , ut64 paddr , ut64 vaddr , int va"		710956	3					
ANR	710981	Parameter	RBin * bin	1966:25:56431:56439	710956	0	True				
ANR	710982	ParameterType	RBin *		710956	0					
ANR	710983	Identifier	bin		710956	1					
ANR	710984	Parameter	ut64 paddr	1966:36:56442:56451	710956	1	True				
ANR	710985	ParameterType	ut64		710956	0					
ANR	710986	Identifier	paddr		710956	1					
ANR	710987	Parameter	ut64 vaddr	1966:48:56454:56463	710956	2	True				
ANR	710988	ParameterType	ut64		710956	0					
ANR	710989	Identifier	vaddr		710956	1					
ANR	710990	Parameter	int va	1966:60:56466:56471	710956	3	True				
ANR	710991	ParameterType	int		710956	0					
ANR	710992	Identifier	va		710956	1					
ANR	710993	CFGEntryNode	ENTRY		710956		True				
ANR	710994	CFGExitNode	EXIT		710956		True				
ANR	710995	Symbol	bin		710956						
ANR	710996	Symbol	paddr		710956						
ANR	710997	Symbol	vaddr		710956						
ANR	710998	Symbol	va		710956						
ANR	710999	Symbol	UT64_MAX		710956						
ANR	711000	Symbol	rva		710956						
ANR	711001	Function	handle_arm_special_symbol	1970:0:56542:57138							
ANR	711002	FunctionDef	"handle_arm_special_symbol (RCore * core , RBinSymbol * symbol , int va)"		711001	0					
ANR	711003	CompoundStatement		1970:79:56621:57138	711001	0					
ANR	711004	IdentifierDeclStatement	"ut64 addr = compute_addr ( core -> bin , symbol -> paddr , symbol -> vaddr , va ) ;"	1971:1:56624:56694	711001	0	True				
ANR	711005	IdentifierDecl	"addr = compute_addr ( core -> bin , symbol -> paddr , symbol -> vaddr , va )"		711001	0					
ANR	711006	IdentifierDeclType	ut64		711001	0					
ANR	711007	Identifier	addr		711001	1					
ANR	711008	AssignmentExpression	"addr = compute_addr ( core -> bin , symbol -> paddr , symbol -> vaddr , va )"		711001	2		=			
ANR	711009	Identifier	addr		711001	0					
ANR	711010	CallExpression	"compute_addr ( core -> bin , symbol -> paddr , symbol -> vaddr , va )"		711001	1					
ANR	711011	Callee	compute_addr		711001	0					
ANR	711012	Identifier	compute_addr		711001	0					
ANR	711013	ArgumentList	core -> bin		711001	1					
ANR	711014	Argument	core -> bin		711001	0					
ANR	711015	PtrMemberAccess	core -> bin		711001	0					
ANR	711016	Identifier	core		711001	0					
ANR	711017	Identifier	bin		711001	1					
ANR	711018	Argument	symbol -> paddr		711001	1					
ANR	711019	PtrMemberAccess	symbol -> paddr		711001	0					
ANR	711020	Identifier	symbol		711001	0					
ANR	711021	Identifier	paddr		711001	1					
ANR	711022	Argument	symbol -> vaddr		711001	2					
ANR	711023	PtrMemberAccess	symbol -> vaddr		711001	0					
ANR	711024	Identifier	symbol		711001	0					
ANR	711025	Identifier	vaddr		711001	1					
ANR	711026	Argument	va		711001	3					
ANR	711027	Identifier	va		711001	0					
ANR	711028	IfStatement	"if ( ! strcmp ( symbol -> name , ""$a"" ) )"		711001	1					
ANR	711029	Condition	"! strcmp ( symbol -> name , ""$a"" )"	1972:5:56701:56728	711001	0	True				
ANR	711030	UnaryOperationExpression	"! strcmp ( symbol -> name , ""$a"" )"		711001	0					
ANR	711031	UnaryOperator	!		711001	0					
ANR	711032	CallExpression	"strcmp ( symbol -> name , ""$a"" )"		711001	1					
ANR	711033	Callee	strcmp		711001	0					
ANR	711034	Identifier	strcmp		711001	0					
ANR	711035	ArgumentList	symbol -> name		711001	1					
ANR	711036	Argument	symbol -> name		711001	0					
ANR	711037	PtrMemberAccess	symbol -> name		711001	0					
ANR	711038	Identifier	symbol		711001	0					
ANR	711039	Identifier	name		711001	1					
ANR	711040	Argument	"""$a"""		711001	1					
ANR	711041	PrimaryExpression	"""$a"""		711001	0					
ANR	711042	CompoundStatement		3:35:109:109	711001	1					
ANR	711043	ExpressionStatement	"r_anal_hint_set_bits ( core -> anal , addr , 32 )"	1973:2:56735:56778	711001	0	True				
ANR	711044	CallExpression	"r_anal_hint_set_bits ( core -> anal , addr , 32 )"		711001	0					
ANR	711045	Callee	r_anal_hint_set_bits		711001	0					
ANR	711046	Identifier	r_anal_hint_set_bits		711001	0					
ANR	711047	ArgumentList	core -> anal		711001	1					
ANR	711048	Argument	core -> anal		711001	0					
ANR	711049	PtrMemberAccess	core -> anal		711001	0					
ANR	711050	Identifier	core		711001	0					
ANR	711051	Identifier	anal		711001	1					
ANR	711052	Argument	addr		711001	1					
ANR	711053	Identifier	addr		711001	0					
ANR	711054	Argument	32		711001	2					
ANR	711055	PrimaryExpression	32		711001	0					
ANR	711056	ElseStatement	else		711001	0					
ANR	711057	IfStatement	"if ( ! strcmp ( symbol -> name , ""$t"" ) )"		711001	0					
ANR	711058	Condition	"! strcmp ( symbol -> name , ""$t"" )"	1974:12:56792:56819	711001	0	True				
ANR	711059	UnaryOperationExpression	"! strcmp ( symbol -> name , ""$t"" )"		711001	0					
ANR	711060	UnaryOperator	!		711001	0					
ANR	711061	CallExpression	"strcmp ( symbol -> name , ""$t"" )"		711001	1					
ANR	711062	Callee	strcmp		711001	0					
ANR	711063	Identifier	strcmp		711001	0					
ANR	711064	ArgumentList	symbol -> name		711001	1					
ANR	711065	Argument	symbol -> name		711001	0					
ANR	711066	PtrMemberAccess	symbol -> name		711001	0					
ANR	711067	Identifier	symbol		711001	0					
ANR	711068	Identifier	name		711001	1					
ANR	711069	Argument	"""$t"""		711001	1					
ANR	711070	PrimaryExpression	"""$t"""		711001	0					
ANR	711071	CompoundStatement		5:42:200:200	711001	1					
ANR	711072	ExpressionStatement	"r_anal_hint_set_bits ( core -> anal , addr , 16 )"	1975:2:56826:56869	711001	0	True				
ANR	711073	CallExpression	"r_anal_hint_set_bits ( core -> anal , addr , 16 )"		711001	0					
ANR	711074	Callee	r_anal_hint_set_bits		711001	0					
ANR	711075	Identifier	r_anal_hint_set_bits		711001	0					
ANR	711076	ArgumentList	core -> anal		711001	1					
ANR	711077	Argument	core -> anal		711001	0					
ANR	711078	PtrMemberAccess	core -> anal		711001	0					
ANR	711079	Identifier	core		711001	0					
ANR	711080	Identifier	anal		711001	1					
ANR	711081	Argument	addr		711001	1					
ANR	711082	Identifier	addr		711001	0					
ANR	711083	Argument	16		711001	2					
ANR	711084	PrimaryExpression	16		711001	0					
ANR	711085	ElseStatement	else		711001	0					
ANR	711086	IfStatement	"if ( ! strcmp ( symbol -> name , ""$d"" ) )"		711001	0					
ANR	711087	Condition	"! strcmp ( symbol -> name , ""$d"" )"	1976:12:56883:56910	711001	0	True				
ANR	711088	UnaryOperationExpression	"! strcmp ( symbol -> name , ""$d"" )"		711001	0					
ANR	711089	UnaryOperator	!		711001	0					
ANR	711090	CallExpression	"strcmp ( symbol -> name , ""$d"" )"		711001	1					
ANR	711091	Callee	strcmp		711001	0					
ANR	711092	Identifier	strcmp		711001	0					
ANR	711093	ArgumentList	symbol -> name		711001	1					
ANR	711094	Argument	symbol -> name		711001	0					
ANR	711095	PtrMemberAccess	symbol -> name		711001	0					
ANR	711096	Identifier	symbol		711001	0					
ANR	711097	Identifier	name		711001	1					
ANR	711098	Argument	"""$d"""		711001	1					
ANR	711099	PrimaryExpression	"""$d"""		711001	0					
ANR	711100	CompoundStatement		7:42:291:291	711001	1					
ANR	711101	ElseStatement	else		711001	0					
ANR	711102	CompoundStatement		11:8:447:447	711001	0					
ANR	711103	ExpressionStatement	"R_LOG_WARN ( ""Special symbol %s not handled\\n"" , symbol -> name )"	1981:2:57073:57133	711001	0	True				
ANR	711104	CallExpression	"R_LOG_WARN ( ""Special symbol %s not handled\\n"" , symbol -> name )"		711001	0					
ANR	711105	Callee	R_LOG_WARN		711001	0					
ANR	711106	Identifier	R_LOG_WARN		711001	0					
ANR	711107	ArgumentList	"""Special symbol %s not handled\\n"""		711001	1					
ANR	711108	Argument	"""Special symbol %s not handled\\n"""		711001	0					
ANR	711109	PrimaryExpression	"""Special symbol %s not handled\\n"""		711001	0					
ANR	711110	Argument	symbol -> name		711001	1					
ANR	711111	PtrMemberAccess	symbol -> name		711001	0					
ANR	711112	Identifier	symbol		711001	0					
ANR	711113	Identifier	name		711001	1					
ANR	711114	ReturnType	static void		711001	1					
ANR	711115	Identifier	handle_arm_special_symbol		711001	2					
ANR	711116	ParameterList	"RCore * core , RBinSymbol * symbol , int va"		711001	3					
ANR	711117	Parameter	RCore * core	1970:38:56580:56590	711001	0	True				
ANR	711118	ParameterType	RCore *		711001	0					
ANR	711119	Identifier	core		711001	1					
ANR	711120	Parameter	RBinSymbol * symbol	1970:51:56593:56610	711001	1	True				
ANR	711121	ParameterType	RBinSymbol *		711001	0					
ANR	711122	Identifier	symbol		711001	1					
ANR	711123	Parameter	int va	1970:71:56613:56618	711001	2	True				
ANR	711124	ParameterType	int		711001	0					
ANR	711125	Identifier	va		711001	1					
ANR	711126	CFGEntryNode	ENTRY		711001		True				
ANR	711127	CFGExitNode	EXIT		711001		True				
ANR	711128	Symbol	strcmp		711001						
ANR	711129	Symbol	symbol		711001						
ANR	711130	Symbol	symbol -> vaddr		711001						
ANR	711131	Symbol	symbol -> name		711001						
ANR	711132	Symbol	* core		711001						
ANR	711133	Symbol	compute_addr		711001						
ANR	711134	Symbol	va		711001						
ANR	711135	Symbol	core -> anal		711001						
ANR	711136	Symbol	core		711001						
ANR	711137	Symbol	symbol -> paddr		711001						
ANR	711138	Symbol	addr		711001						
ANR	711139	Symbol	* symbol		711001						
ANR	711140	Symbol	core -> bin		711001						
ANR	711141	Function	handle_arm_hint	1985:0:57141:57647							
ANR	711142	FunctionDef	"handle_arm_hint (RCore * core , RBinInfo * info , ut64 paddr , ut64 vaddr , int bits , int va)"		711141	0					
ANR	711143	CompoundStatement		1985:99:57240:57647	711141	0					
ANR	711144	IfStatement	if ( info -> bits > 32 )		711141	0					
ANR	711145	Condition	info -> bits > 32	1986:5:57247:57261	711141	0	True				
ANR	711146	RelationalExpression	info -> bits > 32		711141	0		>			
ANR	711147	PtrMemberAccess	info -> bits		711141	0					
ANR	711148	Identifier	info		711141	0					
ANR	711149	Identifier	bits		711141	1					
ANR	711150	PrimaryExpression	32		711141	1					
ANR	711151	CompoundStatement		2:22:23:23	711141	1					
ANR	711152	ReturnStatement	return ;	1987:2:57300:57306	711141	0	True				
ANR	711153	IdentifierDeclStatement	int force_bits = 0 ;	1990:1:57313:57331	711141	1	True				
ANR	711154	IdentifierDecl	force_bits = 0		711141	0					
ANR	711155	IdentifierDeclType	int		711141	0					
ANR	711156	Identifier	force_bits		711141	1					
ANR	711157	AssignmentExpression	force_bits = 0		711141	2		=			
ANR	711158	Identifier	force_bits		711141	0					
ANR	711159	PrimaryExpression	0		711141	1					
ANR	711160	IdentifierDeclStatement	"ut64 addr = compute_addr ( core -> bin , paddr , vaddr , va ) ;"	1991:1:57334:57388	711141	2	True				
ANR	711161	IdentifierDecl	"addr = compute_addr ( core -> bin , paddr , vaddr , va )"		711141	0					
ANR	711162	IdentifierDeclType	ut64		711141	0					
ANR	711163	Identifier	addr		711141	1					
ANR	711164	AssignmentExpression	"addr = compute_addr ( core -> bin , paddr , vaddr , va )"		711141	2		=			
ANR	711165	Identifier	addr		711141	0					
ANR	711166	CallExpression	"compute_addr ( core -> bin , paddr , vaddr , va )"		711141	1					
ANR	711167	Callee	compute_addr		711141	0					
ANR	711168	Identifier	compute_addr		711141	0					
ANR	711169	ArgumentList	core -> bin		711141	1					
ANR	711170	Argument	core -> bin		711141	0					
ANR	711171	PtrMemberAccess	core -> bin		711141	0					
ANR	711172	Identifier	core		711141	0					
ANR	711173	Identifier	bin		711141	1					
ANR	711174	Argument	paddr		711141	1					
ANR	711175	Identifier	paddr		711141	0					
ANR	711176	Argument	vaddr		711141	2					
ANR	711177	Identifier	vaddr		711141	0					
ANR	711178	Argument	va		711141	3					
ANR	711179	Identifier	va		711141	0					
ANR	711180	IfStatement	if ( paddr & 1 || bits == 16 )		711141	3					
ANR	711181	Condition	paddr & 1 || bits == 16	1992:5:57395:57417	711141	0	True				
ANR	711182	OrExpression	paddr & 1 || bits == 16		711141	0		||			
ANR	711183	BitAndExpression	paddr & 1		711141	0		&			
ANR	711184	Identifier	paddr		711141	0					
ANR	711185	PrimaryExpression	1		711141	1					
ANR	711186	EqualityExpression	bits == 16		711141	1		==			
ANR	711187	Identifier	bits		711141	0					
ANR	711188	PrimaryExpression	16		711141	1					
ANR	711189	CompoundStatement		8:30:179:179	711141	1					
ANR	711190	ExpressionStatement	force_bits = 16	1993:2:57424:57439	711141	0	True				
ANR	711191	AssignmentExpression	force_bits = 16		711141	0		=			
ANR	711192	Identifier	force_bits		711141	0					
ANR	711193	PrimaryExpression	16		711141	1					
ANR	711194	ElseStatement	else		711141	0					
ANR	711195	IfStatement	if ( info -> bits == 16 && bits == 32 )		711141	0					
ANR	711196	Condition	info -> bits == 16 && bits == 32	1994:12:57453:57482	711141	0	True				
ANR	711197	AndExpression	info -> bits == 16 && bits == 32		711141	0		&&			
ANR	711198	EqualityExpression	info -> bits == 16		711141	0		==			
ANR	711199	PtrMemberAccess	info -> bits		711141	0					
ANR	711200	Identifier	info		711141	0					
ANR	711201	Identifier	bits		711141	1					
ANR	711202	PrimaryExpression	16		711141	1					
ANR	711203	EqualityExpression	bits == 32		711141	1		==			
ANR	711204	Identifier	bits		711141	0					
ANR	711205	PrimaryExpression	32		711141	1					
ANR	711206	CompoundStatement		10:44:244:244	711141	1					
ANR	711207	ExpressionStatement	force_bits = 32	1995:2:57489:57504	711141	0	True				
ANR	711208	AssignmentExpression	force_bits = 32		711141	0		=			
ANR	711209	Identifier	force_bits		711141	0					
ANR	711210	PrimaryExpression	32		711141	1					
ANR	711211	ElseStatement	else		711141	0					
ANR	711212	IfStatement	if ( ! ( paddr & 1 ) && bits == 32 )		711141	0					
ANR	711213	Condition	! ( paddr & 1 ) && bits == 32	1996:12:57518:57543	711141	0	True				
ANR	711214	AndExpression	! ( paddr & 1 ) && bits == 32		711141	0		&&			
ANR	711215	UnaryOperationExpression	! ( paddr & 1 )		711141	0					
ANR	711216	UnaryOperator	!		711141	0					
ANR	711217	BitAndExpression	paddr & 1		711141	1		&			
ANR	711218	Identifier	paddr		711141	0					
ANR	711219	PrimaryExpression	1		711141	1					
ANR	711220	EqualityExpression	bits == 32		711141	1		==			
ANR	711221	Identifier	bits		711141	0					
ANR	711222	PrimaryExpression	32		711141	1					
ANR	711223	CompoundStatement		12:40:305:305	711141	1					
ANR	711224	ExpressionStatement	force_bits = 32	1997:2:57550:57565	711141	0	True				
ANR	711225	AssignmentExpression	force_bits = 32		711141	0		=			
ANR	711226	Identifier	force_bits		711141	0					
ANR	711227	PrimaryExpression	32		711141	1					
ANR	711228	IfStatement	if ( force_bits )		711141	4					
ANR	711229	Condition	force_bits	1999:5:57575:57584	711141	0	True				
ANR	711230	Identifier	force_bits		711141	0					
ANR	711231	CompoundStatement		15:17:346:346	711141	1					
ANR	711232	ExpressionStatement	"r_anal_hint_set_bits ( core -> anal , addr , force_bits )"	2000:2:57591:57642	711141	0	True				
ANR	711233	CallExpression	"r_anal_hint_set_bits ( core -> anal , addr , force_bits )"		711141	0					
ANR	711234	Callee	r_anal_hint_set_bits		711141	0					
ANR	711235	Identifier	r_anal_hint_set_bits		711141	0					
ANR	711236	ArgumentList	core -> anal		711141	1					
ANR	711237	Argument	core -> anal		711141	0					
ANR	711238	PtrMemberAccess	core -> anal		711141	0					
ANR	711239	Identifier	core		711141	0					
ANR	711240	Identifier	anal		711141	1					
ANR	711241	Argument	addr		711141	1					
ANR	711242	Identifier	addr		711141	0					
ANR	711243	Argument	force_bits		711141	2					
ANR	711244	Identifier	force_bits		711141	0					
ANR	711245	ReturnType	static void		711141	1					
ANR	711246	Identifier	handle_arm_hint		711141	2					
ANR	711247	ParameterList	"RCore * core , RBinInfo * info , ut64 paddr , ut64 vaddr , int bits , int va"		711141	3					
ANR	711248	Parameter	RCore * core	1985:28:57169:57179	711141	0	True				
ANR	711249	ParameterType	RCore *		711141	0					
ANR	711250	Identifier	core		711141	1					
ANR	711251	Parameter	RBinInfo * info	1985:41:57182:57195	711141	1	True				
ANR	711252	ParameterType	RBinInfo *		711141	0					
ANR	711253	Identifier	info		711141	1					
ANR	711254	Parameter	ut64 paddr	1985:57:57198:57207	711141	2	True				
ANR	711255	ParameterType	ut64		711141	0					
ANR	711256	Identifier	paddr		711141	1					
ANR	711257	Parameter	ut64 vaddr	1985:69:57210:57219	711141	3	True				
ANR	711258	ParameterType	ut64		711141	0					
ANR	711259	Identifier	vaddr		711141	1					
ANR	711260	Parameter	int bits	1985:81:57222:57229	711141	4	True				
ANR	711261	ParameterType	int		711141	0					
ANR	711262	Identifier	bits		711141	1					
ANR	711263	Parameter	int va	1985:91:57232:57237	711141	5	True				
ANR	711264	ParameterType	int		711141	0					
ANR	711265	Identifier	va		711141	1					
ANR	711266	CFGEntryNode	ENTRY		711141		True				
ANR	711267	CFGExitNode	EXIT		711141		True				
ANR	711268	Symbol	bits		711141						
ANR	711269	Symbol	* core		711141						
ANR	711270	Symbol	compute_addr		711141						
ANR	711271	Symbol	vaddr		711141						
ANR	711272	Symbol	va		711141						
ANR	711273	Symbol	core -> anal		711141						
ANR	711274	Symbol	info -> bits		711141						
ANR	711275	Symbol	core		711141						
ANR	711276	Symbol	paddr		711141						
ANR	711277	Symbol	force_bits		711141						
ANR	711278	Symbol	* info		711141						
ANR	711279	Symbol	addr		711141						
ANR	711280	Symbol	core -> bin		711141						
ANR	711281	Symbol	info		711141						
ANR	711282	Function	handle_arm_symbol	2004:0:57650:57825							
ANR	711283	FunctionDef	"handle_arm_symbol (RCore * core , RBinSymbol * symbol , RBinInfo * info , int va)"		711282	0					
ANR	711284	CompoundStatement		2004:87:57737:57825	711282	0					
ANR	711285	ReturnStatement	"return handle_arm_hint ( core , info , symbol -> paddr , symbol -> vaddr , symbol -> bits , va ) ;"	2005:1:57740:57823	711282	0	True				
ANR	711286	CallExpression	"handle_arm_hint ( core , info , symbol -> paddr , symbol -> vaddr , symbol -> bits , va )"		711282	0					
ANR	711287	Callee	handle_arm_hint		711282	0					
ANR	711288	Identifier	handle_arm_hint		711282	0					
ANR	711289	ArgumentList	core		711282	1					
ANR	711290	Argument	core		711282	0					
ANR	711291	Identifier	core		711282	0					
ANR	711292	Argument	info		711282	1					
ANR	711293	Identifier	info		711282	0					
ANR	711294	Argument	symbol -> paddr		711282	2					
ANR	711295	PtrMemberAccess	symbol -> paddr		711282	0					
ANR	711296	Identifier	symbol		711282	0					
ANR	711297	Identifier	paddr		711282	1					
ANR	711298	Argument	symbol -> vaddr		711282	3					
ANR	711299	PtrMemberAccess	symbol -> vaddr		711282	0					
ANR	711300	Identifier	symbol		711282	0					
ANR	711301	Identifier	vaddr		711282	1					
ANR	711302	Argument	symbol -> bits		711282	4					
ANR	711303	PtrMemberAccess	symbol -> bits		711282	0					
ANR	711304	Identifier	symbol		711282	0					
ANR	711305	Identifier	bits		711282	1					
ANR	711306	Argument	va		711282	5					
ANR	711307	Identifier	va		711282	0					
ANR	711308	ReturnType	static void		711282	1					
ANR	711309	Identifier	handle_arm_symbol		711282	2					
ANR	711310	ParameterList	"RCore * core , RBinSymbol * symbol , RBinInfo * info , int va"		711282	3					
ANR	711311	Parameter	RCore * core	2004:30:57680:57690	711282	0	True				
ANR	711312	ParameterType	RCore *		711282	0					
ANR	711313	Identifier	core		711282	1					
ANR	711314	Parameter	RBinSymbol * symbol	2004:43:57693:57710	711282	1	True				
ANR	711315	ParameterType	RBinSymbol *		711282	0					
ANR	711316	Identifier	symbol		711282	1					
ANR	711317	Parameter	RBinInfo * info	2004:63:57713:57726	711282	2	True				
ANR	711318	ParameterType	RBinInfo *		711282	0					
ANR	711319	Identifier	info		711282	1					
ANR	711320	Parameter	int va	2004:79:57729:57734	711282	3	True				
ANR	711321	ParameterType	int		711282	0					
ANR	711322	Identifier	va		711282	1					
ANR	711323	CFGEntryNode	ENTRY		711282		True				
ANR	711324	CFGExitNode	EXIT		711282		True				
ANR	711325	Symbol	core		711282						
ANR	711326	Symbol	symbol		711282						
ANR	711327	Symbol	symbol -> vaddr		711282						
ANR	711328	Symbol	symbol -> paddr		711282						
ANR	711329	Symbol	va		711282						
ANR	711330	Symbol	* symbol		711282						
ANR	711331	Symbol	symbol -> bits		711282						
ANR	711332	Symbol	handle_arm_hint		711282						
ANR	711333	Symbol	info		711282						
ANR	711334	Function	handle_arm_entry	2008:0:57828:57996							
ANR	711335	FunctionDef	"handle_arm_entry (RCore * core , RBinAddr * entry , RBinInfo * info , int va)"		711334	0					
ANR	711336	CompoundStatement		2008:83:57911:57996	711334	0					
ANR	711337	ReturnStatement	"return handle_arm_hint ( core , info , entry -> paddr , entry -> vaddr , entry -> bits , va ) ;"	2009:1:57914:57994	711334	0	True				
ANR	711338	CallExpression	"handle_arm_hint ( core , info , entry -> paddr , entry -> vaddr , entry -> bits , va )"		711334	0					
ANR	711339	Callee	handle_arm_hint		711334	0					
ANR	711340	Identifier	handle_arm_hint		711334	0					
ANR	711341	ArgumentList	core		711334	1					
ANR	711342	Argument	core		711334	0					
ANR	711343	Identifier	core		711334	0					
ANR	711344	Argument	info		711334	1					
ANR	711345	Identifier	info		711334	0					
ANR	711346	Argument	entry -> paddr		711334	2					
ANR	711347	PtrMemberAccess	entry -> paddr		711334	0					
ANR	711348	Identifier	entry		711334	0					
ANR	711349	Identifier	paddr		711334	1					
ANR	711350	Argument	entry -> vaddr		711334	3					
ANR	711351	PtrMemberAccess	entry -> vaddr		711334	0					
ANR	711352	Identifier	entry		711334	0					
ANR	711353	Identifier	vaddr		711334	1					
ANR	711354	Argument	entry -> bits		711334	4					
ANR	711355	PtrMemberAccess	entry -> bits		711334	0					
ANR	711356	Identifier	entry		711334	0					
ANR	711357	Identifier	bits		711334	1					
ANR	711358	Argument	va		711334	5					
ANR	711359	Identifier	va		711334	0					
ANR	711360	ReturnType	static void		711334	1					
ANR	711361	Identifier	handle_arm_entry		711334	2					
ANR	711362	ParameterList	"RCore * core , RBinAddr * entry , RBinInfo * info , int va"		711334	3					
ANR	711363	Parameter	RCore * core	2008:29:57857:57867	711334	0	True				
ANR	711364	ParameterType	RCore *		711334	0					
ANR	711365	Identifier	core		711334	1					
ANR	711366	Parameter	RBinAddr * entry	2008:42:57870:57884	711334	1	True				
ANR	711367	ParameterType	RBinAddr *		711334	0					
ANR	711368	Identifier	entry		711334	1					
ANR	711369	Parameter	RBinInfo * info	2008:59:57887:57900	711334	2	True				
ANR	711370	ParameterType	RBinInfo *		711334	0					
ANR	711371	Identifier	info		711334	1					
ANR	711372	Parameter	int va	2008:75:57903:57908	711334	3	True				
ANR	711373	ParameterType	int		711334	0					
ANR	711374	Identifier	va		711334	1					
ANR	711375	CFGEntryNode	ENTRY		711334		True				
ANR	711376	CFGExitNode	EXIT		711334		True				
ANR	711377	Symbol	entry -> vaddr		711334						
ANR	711378	Symbol	core		711334						
ANR	711379	Symbol	entry		711334						
ANR	711380	Symbol	entry -> paddr		711334						
ANR	711381	Symbol	entry -> bits		711334						
ANR	711382	Symbol	va		711334						
ANR	711383	Symbol	handle_arm_hint		711334						
ANR	711384	Symbol	info		711334						
ANR	711385	Symbol	* entry		711334						
ANR	711386	Function	select_flag_space	2012:0:57999:58372							
ANR	711387	FunctionDef	"select_flag_space (RCore * core , RBinSymbol * symbol)"		711386	0					
ANR	711388	CompoundStatement		2012:63:58062:58372	711386	0					
ANR	711389	IfStatement	"if ( ! strncmp ( symbol -> name , ""imp."" , 4 ) )"		711386	0					
ANR	711390	Condition	"! strncmp ( symbol -> name , ""imp."" , 4 )"	2013:5:58069:58102	711386	0	True				
ANR	711391	UnaryOperationExpression	"! strncmp ( symbol -> name , ""imp."" , 4 )"		711386	0					
ANR	711392	UnaryOperator	!		711386	0					
ANR	711393	CallExpression	"strncmp ( symbol -> name , ""imp."" , 4 )"		711386	1					
ANR	711394	Callee	strncmp		711386	0					
ANR	711395	Identifier	strncmp		711386	0					
ANR	711396	ArgumentList	symbol -> name		711386	1					
ANR	711397	Argument	symbol -> name		711386	0					
ANR	711398	PtrMemberAccess	symbol -> name		711386	0					
ANR	711399	Identifier	symbol		711386	0					
ANR	711400	Identifier	name		711386	1					
ANR	711401	Argument	"""imp."""		711386	1					
ANR	711402	PrimaryExpression	"""imp."""		711386	0					
ANR	711403	Argument	4		711386	2					
ANR	711404	PrimaryExpression	4		711386	0					
ANR	711405	CompoundStatement		2:41:42:42	711386	1					
ANR	711406	ExpressionStatement	"r_flag_space_push ( core -> flags , R_FLAGS_FS_IMPORTS )"	2014:2:58109:58160	711386	0	True				
ANR	711407	CallExpression	"r_flag_space_push ( core -> flags , R_FLAGS_FS_IMPORTS )"		711386	0					
ANR	711408	Callee	r_flag_space_push		711386	0					
ANR	711409	Identifier	r_flag_space_push		711386	0					
ANR	711410	ArgumentList	core -> flags		711386	1					
ANR	711411	Argument	core -> flags		711386	0					
ANR	711412	PtrMemberAccess	core -> flags		711386	0					
ANR	711413	Identifier	core		711386	0					
ANR	711414	Identifier	flags		711386	1					
ANR	711415	Argument	R_FLAGS_FS_IMPORTS		711386	1					
ANR	711416	Identifier	R_FLAGS_FS_IMPORTS		711386	0					
ANR	711417	ElseStatement	else		711386	0					
ANR	711418	IfStatement	"if ( symbol -> type && ! strcmp ( symbol -> type , R_BIN_TYPE_SECTION_STR ) )"		711386	0					
ANR	711419	Condition	"symbol -> type && ! strcmp ( symbol -> type , R_BIN_TYPE_SECTION_STR )"	2015:12:58174:58235	711386	0	True				
ANR	711420	AndExpression	"symbol -> type && ! strcmp ( symbol -> type , R_BIN_TYPE_SECTION_STR )"		711386	0		&&			
ANR	711421	PtrMemberAccess	symbol -> type		711386	0					
ANR	711422	Identifier	symbol		711386	0					
ANR	711423	Identifier	type		711386	1					
ANR	711424	UnaryOperationExpression	"! strcmp ( symbol -> type , R_BIN_TYPE_SECTION_STR )"		711386	1					
ANR	711425	UnaryOperator	!		711386	0					
ANR	711426	CallExpression	"strcmp ( symbol -> type , R_BIN_TYPE_SECTION_STR )"		711386	1					
ANR	711427	Callee	strcmp		711386	0					
ANR	711428	Identifier	strcmp		711386	0					
ANR	711429	ArgumentList	symbol -> type		711386	1					
ANR	711430	Argument	symbol -> type		711386	0					
ANR	711431	PtrMemberAccess	symbol -> type		711386	0					
ANR	711432	Identifier	symbol		711386	0					
ANR	711433	Identifier	type		711386	1					
ANR	711434	Argument	R_BIN_TYPE_SECTION_STR		711386	1					
ANR	711435	Identifier	R_BIN_TYPE_SECTION_STR		711386	0					
ANR	711436	CompoundStatement		4:76:175:175	711386	1					
ANR	711437	ExpressionStatement	"r_flag_space_push ( core -> flags , R_FLAGS_FS_SYMBOLS_SECTIONS )"	2016:2:58242:58302	711386	0	True				
ANR	711438	CallExpression	"r_flag_space_push ( core -> flags , R_FLAGS_FS_SYMBOLS_SECTIONS )"		711386	0					
ANR	711439	Callee	r_flag_space_push		711386	0					
ANR	711440	Identifier	r_flag_space_push		711386	0					
ANR	711441	ArgumentList	core -> flags		711386	1					
ANR	711442	Argument	core -> flags		711386	0					
ANR	711443	PtrMemberAccess	core -> flags		711386	0					
ANR	711444	Identifier	core		711386	0					
ANR	711445	Identifier	flags		711386	1					
ANR	711446	Argument	R_FLAGS_FS_SYMBOLS_SECTIONS		711386	1					
ANR	711447	Identifier	R_FLAGS_FS_SYMBOLS_SECTIONS		711386	0					
ANR	711448	ElseStatement	else		711386	0					
ANR	711449	CompoundStatement		6:8:249:249	711386	0					
ANR	711450	ExpressionStatement	"r_flag_space_push ( core -> flags , R_FLAGS_FS_SYMBOLS )"	2018:2:58316:58367	711386	0	True				
ANR	711451	CallExpression	"r_flag_space_push ( core -> flags , R_FLAGS_FS_SYMBOLS )"		711386	0					
ANR	711452	Callee	r_flag_space_push		711386	0					
ANR	711453	Identifier	r_flag_space_push		711386	0					
ANR	711454	ArgumentList	core -> flags		711386	1					
ANR	711455	Argument	core -> flags		711386	0					
ANR	711456	PtrMemberAccess	core -> flags		711386	0					
ANR	711457	Identifier	core		711386	0					
ANR	711458	Identifier	flags		711386	1					
ANR	711459	Argument	R_FLAGS_FS_SYMBOLS		711386	1					
ANR	711460	Identifier	R_FLAGS_FS_SYMBOLS		711386	0					
ANR	711461	ReturnType	static void		711386	1					
ANR	711462	Identifier	select_flag_space		711386	2					
ANR	711463	ParameterList	"RCore * core , RBinSymbol * symbol"		711386	3					
ANR	711464	Parameter	RCore * core	2012:30:58029:58039	711386	0	True				
ANR	711465	ParameterType	RCore *		711386	0					
ANR	711466	Identifier	core		711386	1					
ANR	711467	Parameter	RBinSymbol * symbol	2012:43:58042:58059	711386	1	True				
ANR	711468	ParameterType	RBinSymbol *		711386	0					
ANR	711469	Identifier	symbol		711386	1					
ANR	711470	CFGEntryNode	ENTRY		711386		True				
ANR	711471	CFGExitNode	EXIT		711386		True				
ANR	711472	Symbol	strcmp		711386						
ANR	711473	Symbol	symbol		711386						
ANR	711474	Symbol	symbol -> name		711386						
ANR	711475	Symbol	* core		711386						
ANR	711476	Symbol	R_BIN_TYPE_SECTION_STR		711386						
ANR	711477	Symbol	core -> flags		711386						
ANR	711478	Symbol	core		711386						
ANR	711479	Symbol	strncmp		711386						
ANR	711480	Symbol	R_FLAGS_FS_SYMBOLS_SECTIONS		711386						
ANR	711481	Symbol	R_FLAGS_FS_SYMBOLS		711386						
ANR	711482	Symbol	R_FLAGS_FS_IMPORTS		711386						
ANR	711483	Symbol	symbol -> type		711386						
ANR	711484	Symbol	* symbol		711386						
ANR	711485	Function	bin_symbols	2022:0:58375:66402							
ANR	711486	FunctionDef	"bin_symbols (RCore * r , int mode , ut64 laddr , int va , ut64 at , const char * name , bool exponly , const char * args)"		711485	0					
ANR	711487	CompoundStatement		2022:122:58497:66402	711485	0					
ANR	711488	IdentifierDeclStatement	RBinInfo * info = r_bin_get_info ( r -> bin ) ;	2023:1:58500:58540	711485	0	True				
ANR	711489	IdentifierDecl	* info = r_bin_get_info ( r -> bin )		711485	0					
ANR	711490	IdentifierDeclType	RBinInfo *		711485	0					
ANR	711491	Identifier	info		711485	1					
ANR	711492	AssignmentExpression	* info = r_bin_get_info ( r -> bin )		711485	2		=			
ANR	711493	Identifier	info		711485	0					
ANR	711494	CallExpression	r_bin_get_info ( r -> bin )		711485	1					
ANR	711495	Callee	r_bin_get_info		711485	0					
ANR	711496	Identifier	r_bin_get_info		711485	0					
ANR	711497	ArgumentList	r -> bin		711485	1					
ANR	711498	Argument	r -> bin		711485	0					
ANR	711499	PtrMemberAccess	r -> bin		711485	0					
ANR	711500	Identifier	r		711485	0					
ANR	711501	Identifier	bin		711485	1					
ANR	711502	IdentifierDeclStatement	RList * entries = r_bin_get_entries ( r -> bin ) ;	2024:1:58543:58586	711485	1	True				
ANR	711503	IdentifierDecl	* entries = r_bin_get_entries ( r -> bin )		711485	0					
ANR	711504	IdentifierDeclType	RList *		711485	0					
ANR	711505	Identifier	entries		711485	1					
ANR	711506	AssignmentExpression	* entries = r_bin_get_entries ( r -> bin )		711485	2		=			
ANR	711507	Identifier	entries		711485	0					
ANR	711508	CallExpression	r_bin_get_entries ( r -> bin )		711485	1					
ANR	711509	Callee	r_bin_get_entries		711485	0					
ANR	711510	Identifier	r_bin_get_entries		711485	0					
ANR	711511	ArgumentList	r -> bin		711485	1					
ANR	711512	Argument	r -> bin		711485	0					
ANR	711513	PtrMemberAccess	r -> bin		711485	0					
ANR	711514	Identifier	r		711485	0					
ANR	711515	Identifier	bin		711485	1					
ANR	711516	IdentifierDeclStatement	RBinSymbol * symbol ;	2025:1:58589:58607	711485	2	True				
ANR	711517	IdentifierDecl	* symbol		711485	0					
ANR	711518	IdentifierDeclType	RBinSymbol *		711485	0					
ANR	711519	Identifier	symbol		711485	1					
ANR	711520	IdentifierDeclStatement	RBinAddr * entry ;	2026:1:58610:58625	711485	3	True				
ANR	711521	IdentifierDecl	* entry		711485	0					
ANR	711522	IdentifierDeclType	RBinAddr *		711485	0					
ANR	711523	Identifier	entry		711485	1					
ANR	711524	IdentifierDeclStatement	RListIter * iter ;	2027:1:58628:58643	711485	4	True				
ANR	711525	IdentifierDecl	* iter		711485	0					
ANR	711526	IdentifierDeclType	RListIter *		711485	0					
ANR	711527	Identifier	iter		711485	1					
ANR	711528	IdentifierDeclStatement	bool firstexp = true ;	2028:1:58646:58666	711485	5	True				
ANR	711529	IdentifierDecl	firstexp = true		711485	0					
ANR	711530	IdentifierDeclType	bool		711485	0					
ANR	711531	Identifier	firstexp		711485	1					
ANR	711532	AssignmentExpression	firstexp = true		711485	2		=			
ANR	711533	Identifier	true		711485	0					
ANR	711534	Identifier	true		711485	1					
ANR	711535	IdentifierDeclStatement	bool printHere = false ;	2029:1:58669:58691	711485	6	True				
ANR	711536	IdentifierDecl	printHere = false		711485	0					
ANR	711537	IdentifierDeclType	bool		711485	0					
ANR	711538	Identifier	printHere		711485	1					
ANR	711539	AssignmentExpression	printHere = false		711485	2		=			
ANR	711540	Identifier	false		711485	0					
ANR	711541	Identifier	false		711485	1					
ANR	711542	IdentifierDeclStatement	"int i = 0 , lastfs = 's' ;"	2030:1:58694:58717	711485	7	True				
ANR	711543	IdentifierDecl	i = 0		711485	0					
ANR	711544	IdentifierDeclType	int		711485	0					
ANR	711545	Identifier	i		711485	1					
ANR	711546	AssignmentExpression	i = 0		711485	2		=			
ANR	711547	Identifier	i		711485	0					
ANR	711548	PrimaryExpression	0		711485	1					
ANR	711549	IdentifierDecl	lastfs = 's'		711485	1					
ANR	711550	IdentifierDeclType	int		711485	0					
ANR	711551	Identifier	lastfs		711485	1					
ANR	711552	AssignmentExpression	lastfs = 's'		711485	2		=			
ANR	711553	Identifier	lastfs		711485	0					
ANR	711554	PrimaryExpression	's'		711485	1					
ANR	711555	IdentifierDeclStatement	"bool bin_demangle = r_config_get_i ( r -> config , ""bin.demangle"" ) ;"	2031:1:58720:58782	711485	8	True				
ANR	711556	IdentifierDecl	"bin_demangle = r_config_get_i ( r -> config , ""bin.demangle"" )"		711485	0					
ANR	711557	IdentifierDeclType	bool		711485	0					
ANR	711558	Identifier	bin_demangle		711485	1					
ANR	711559	AssignmentExpression	"bin_demangle = r_config_get_i ( r -> config , ""bin.demangle"" )"		711485	2		=			
ANR	711560	Identifier	bin_demangle		711485	0					
ANR	711561	CallExpression	"r_config_get_i ( r -> config , ""bin.demangle"" )"		711485	1					
ANR	711562	Callee	r_config_get_i		711485	0					
ANR	711563	Identifier	r_config_get_i		711485	0					
ANR	711564	ArgumentList	r -> config		711485	1					
ANR	711565	Argument	r -> config		711485	0					
ANR	711566	PtrMemberAccess	r -> config		711485	0					
ANR	711567	Identifier	r		711485	0					
ANR	711568	Identifier	config		711485	1					
ANR	711569	Argument	"""bin.demangle"""		711485	1					
ANR	711570	PrimaryExpression	"""bin.demangle"""		711485	0					
ANR	711571	IfStatement	if ( ! info )		711485	9					
ANR	711572	Condition	! info	2032:5:58789:58793	711485	0	True				
ANR	711573	UnaryOperationExpression	! info		711485	0					
ANR	711574	UnaryOperator	!		711485	0					
ANR	711575	Identifier	info		711485	1					
ANR	711576	CompoundStatement		11:12:298:298	711485	1					
ANR	711577	ReturnStatement	return 0 ;	2033:2:58800:58808	711485	0	True				
ANR	711578	PrimaryExpression	0		711485	0					
ANR	711579	IfStatement	if ( args && * args == '.' )		711485	10					
ANR	711580	Condition	args && * args == '.'	2036:5:58819:58838	711485	0	True				
ANR	711581	AndExpression	args && * args == '.'		711485	0		&&			
ANR	711582	Identifier	args		711485	0					
ANR	711583	EqualityExpression	* args == '.'		711485	1		==			
ANR	711584	UnaryOperationExpression	* args		711485	0					
ANR	711585	UnaryOperator	*		711485	0					
ANR	711586	Identifier	args		711485	1					
ANR	711587	PrimaryExpression	'.'		711485	1					
ANR	711588	CompoundStatement		15:27:343:343	711485	1					
ANR	711589	ExpressionStatement	printHere = true	2037:2:58845:58861	711485	0	True				
ANR	711590	AssignmentExpression	printHere = true		711485	0		=			
ANR	711591	Identifier	printHere		711485	0					
ANR	711592	Identifier	true		711485	1					
ANR	711593	IdentifierDeclStatement	"bool is_arm = info && info -> arch && ! strncmp ( info -> arch , ""arm"" , 3 ) ;"	2040:1:58868:58935	711485	11	True				
ANR	711594	IdentifierDecl	"is_arm = info && info -> arch && ! strncmp ( info -> arch , ""arm"" , 3 )"		711485	0					
ANR	711595	IdentifierDeclType	bool		711485	0					
ANR	711596	Identifier	is_arm		711485	1					
ANR	711597	AssignmentExpression	"is_arm = info && info -> arch && ! strncmp ( info -> arch , ""arm"" , 3 )"		711485	2		=			
ANR	711598	Identifier	is_arm		711485	0					
ANR	711599	AndExpression	"info && info -> arch && ! strncmp ( info -> arch , ""arm"" , 3 )"		711485	1		&&			
ANR	711600	Identifier	info		711485	0					
ANR	711601	AndExpression	"info -> arch && ! strncmp ( info -> arch , ""arm"" , 3 )"		711485	1		&&			
ANR	711602	PtrMemberAccess	info -> arch		711485	0					
ANR	711603	Identifier	info		711485	0					
ANR	711604	Identifier	arch		711485	1					
ANR	711605	UnaryOperationExpression	"! strncmp ( info -> arch , ""arm"" , 3 )"		711485	1					
ANR	711606	UnaryOperator	!		711485	0					
ANR	711607	CallExpression	"strncmp ( info -> arch , ""arm"" , 3 )"		711485	1					
ANR	711608	Callee	strncmp		711485	0					
ANR	711609	Identifier	strncmp		711485	0					
ANR	711610	ArgumentList	info -> arch		711485	1					
ANR	711611	Argument	info -> arch		711485	0					
ANR	711612	PtrMemberAccess	info -> arch		711485	0					
ANR	711613	Identifier	info		711485	0					
ANR	711614	Identifier	arch		711485	1					
ANR	711615	Argument	"""arm"""		711485	1					
ANR	711616	PrimaryExpression	"""arm"""		711485	0					
ANR	711617	Argument	3		711485	2					
ANR	711618	PrimaryExpression	3		711485	0					
ANR	711619	IdentifierDeclStatement	"const char * lang = bin_demangle ? r_config_get ( r -> config , ""bin.lang"" ) : NULL ;"	2041:1:58938:59015	711485	12	True				
ANR	711620	IdentifierDecl	"* lang = bin_demangle ? r_config_get ( r -> config , ""bin.lang"" ) : NULL"		711485	0					
ANR	711621	IdentifierDeclType	const char *		711485	0					
ANR	711622	Identifier	lang		711485	1					
ANR	711623	AssignmentExpression	"* lang = bin_demangle ? r_config_get ( r -> config , ""bin.lang"" ) : NULL"		711485	2		=			
ANR	711624	Identifier	lang		711485	0					
ANR	711625	ConditionalExpression	"bin_demangle ? r_config_get ( r -> config , ""bin.lang"" ) : NULL"		711485	1					
ANR	711626	Condition	bin_demangle		711485	0					
ANR	711627	Identifier	bin_demangle		711485	0					
ANR	711628	CallExpression	"r_config_get ( r -> config , ""bin.lang"" )"		711485	1					
ANR	711629	Callee	r_config_get		711485	0					
ANR	711630	Identifier	r_config_get		711485	0					
ANR	711631	ArgumentList	r -> config		711485	1					
ANR	711632	Argument	r -> config		711485	0					
ANR	711633	PtrMemberAccess	r -> config		711485	0					
ANR	711634	Identifier	r		711485	0					
ANR	711635	Identifier	config		711485	1					
ANR	711636	Argument	"""bin.lang"""		711485	1					
ANR	711637	PrimaryExpression	"""bin.lang"""		711485	0					
ANR	711638	Identifier	NULL		711485	2					
ANR	711639	IdentifierDeclStatement	RList * symbols = r_bin_get_symbols ( r -> bin ) ;	2043:1:59019:59062	711485	13	True				
ANR	711640	IdentifierDecl	* symbols = r_bin_get_symbols ( r -> bin )		711485	0					
ANR	711641	IdentifierDeclType	RList *		711485	0					
ANR	711642	Identifier	symbols		711485	1					
ANR	711643	AssignmentExpression	* symbols = r_bin_get_symbols ( r -> bin )		711485	2		=			
ANR	711644	Identifier	symbols		711485	0					
ANR	711645	CallExpression	r_bin_get_symbols ( r -> bin )		711485	1					
ANR	711646	Callee	r_bin_get_symbols		711485	0					
ANR	711647	Identifier	r_bin_get_symbols		711485	0					
ANR	711648	ArgumentList	r -> bin		711485	1					
ANR	711649	Argument	r -> bin		711485	0					
ANR	711650	PtrMemberAccess	r -> bin		711485	0					
ANR	711651	Identifier	r		711485	0					
ANR	711652	Identifier	bin		711485	1					
ANR	711653	ExpressionStatement	"r_spaces_push ( & r -> anal -> meta_spaces , ""bin"" )"	2044:1:59065:59109	711485	14	True				
ANR	711654	CallExpression	"r_spaces_push ( & r -> anal -> meta_spaces , ""bin"" )"		711485	0					
ANR	711655	Callee	r_spaces_push		711485	0					
ANR	711656	Identifier	r_spaces_push		711485	0					
ANR	711657	ArgumentList	& r -> anal -> meta_spaces		711485	1					
ANR	711658	Argument	& r -> anal -> meta_spaces		711485	0					
ANR	711659	UnaryOperationExpression	& r -> anal -> meta_spaces		711485	0					
ANR	711660	UnaryOperator	&		711485	0					
ANR	711661	PtrMemberAccess	r -> anal -> meta_spaces		711485	1					
ANR	711662	PtrMemberAccess	r -> anal		711485	0					
ANR	711663	Identifier	r		711485	0					
ANR	711664	Identifier	anal		711485	1					
ANR	711665	Identifier	meta_spaces		711485	1					
ANR	711666	Argument	"""bin"""		711485	1					
ANR	711667	PrimaryExpression	"""bin"""		711485	0					
ANR	711668	IfStatement	if ( IS_MODE_JSON ( mode ) && ! printHere )		711485	15					
ANR	711669	Condition	IS_MODE_JSON ( mode ) && ! printHere	2046:5:59117:59149	711485	0	True				
ANR	711670	AndExpression	IS_MODE_JSON ( mode ) && ! printHere		711485	0		&&			
ANR	711671	CallExpression	IS_MODE_JSON ( mode )		711485	0					
ANR	711672	Callee	IS_MODE_JSON		711485	0					
ANR	711673	Identifier	IS_MODE_JSON		711485	0					
ANR	711674	ArgumentList	mode		711485	1					
ANR	711675	Argument	mode		711485	0					
ANR	711676	Identifier	mode		711485	0					
ANR	711677	UnaryOperationExpression	! printHere		711485	1					
ANR	711678	UnaryOperator	!		711485	0					
ANR	711679	Identifier	printHere		711485	1					
ANR	711680	CompoundStatement		25:40:654:654	711485	1					
ANR	711681	ExpressionStatement	"r_cons_printf ( ""["" )"	2047:2:59156:59175	711485	0	True				
ANR	711682	CallExpression	"r_cons_printf ( ""["" )"		711485	0					
ANR	711683	Callee	r_cons_printf		711485	0					
ANR	711684	Identifier	r_cons_printf		711485	0					
ANR	711685	ArgumentList	"""["""		711485	1					
ANR	711686	Argument	"""["""		711485	0					
ANR	711687	PrimaryExpression	"""["""		711485	0					
ANR	711688	ElseStatement	else		711485	0					
ANR	711689	IfStatement	if ( IS_MODE_SET ( mode ) )		711485	0					
ANR	711690	Condition	IS_MODE_SET ( mode )	2048:12:59189:59206	711485	0	True				
ANR	711691	CallExpression	IS_MODE_SET ( mode )		711485	0					
ANR	711692	Callee	IS_MODE_SET		711485	0					
ANR	711693	Identifier	IS_MODE_SET		711485	0					
ANR	711694	ArgumentList	mode		711485	1					
ANR	711695	Argument	mode		711485	0					
ANR	711696	Identifier	mode		711485	0					
ANR	711697	CompoundStatement		27:32:711:711	711485	1					
ANR	711698	ExpressionStatement	"r_flag_space_set ( r -> flags , R_FLAGS_FS_SYMBOLS )"	2049:2:59213:59260	711485	0	True				
ANR	711699	CallExpression	"r_flag_space_set ( r -> flags , R_FLAGS_FS_SYMBOLS )"		711485	0					
ANR	711700	Callee	r_flag_space_set		711485	0					
ANR	711701	Identifier	r_flag_space_set		711485	0					
ANR	711702	ArgumentList	r -> flags		711485	1					
ANR	711703	Argument	r -> flags		711485	0					
ANR	711704	PtrMemberAccess	r -> flags		711485	0					
ANR	711705	Identifier	r		711485	0					
ANR	711706	Identifier	flags		711485	1					
ANR	711707	Argument	R_FLAGS_FS_SYMBOLS		711485	1					
ANR	711708	Identifier	R_FLAGS_FS_SYMBOLS		711485	0					
ANR	711709	ElseStatement	else		711485	0					
ANR	711710	IfStatement	if ( ! at && exponly )		711485	0					
ANR	711711	Condition	! at && exponly	2050:12:59274:59287	711485	0	True				
ANR	711712	AndExpression	! at && exponly		711485	0		&&			
ANR	711713	UnaryOperationExpression	! at		711485	0					
ANR	711714	UnaryOperator	!		711485	0					
ANR	711715	Identifier	at		711485	1					
ANR	711716	Identifier	exponly		711485	1					
ANR	711717	CompoundStatement		29:28:792:792	711485	1					
ANR	711718	IfStatement	if ( IS_MODE_RAD ( mode ) )		711485	0					
ANR	711719	Condition	IS_MODE_RAD ( mode )	2051:6:59298:59315	711485	0	True				
ANR	711720	CallExpression	IS_MODE_RAD ( mode )		711485	0					
ANR	711721	Callee	IS_MODE_RAD		711485	0					
ANR	711722	Identifier	IS_MODE_RAD		711485	0					
ANR	711723	ArgumentList	mode		711485	1					
ANR	711724	Argument	mode		711485	0					
ANR	711725	Identifier	mode		711485	0					
ANR	711726	CompoundStatement		30:26:820:820	711485	1					
ANR	711727	ExpressionStatement	"r_cons_printf ( ""fs exports\\n"" )"	2052:3:59323:59353	711485	0	True				
ANR	711728	CallExpression	"r_cons_printf ( ""fs exports\\n"" )"		711485	0					
ANR	711729	Callee	r_cons_printf		711485	0					
ANR	711730	Identifier	r_cons_printf		711485	0					
ANR	711731	ArgumentList	"""fs exports\\n"""		711485	1					
ANR	711732	Argument	"""fs exports\\n"""		711485	0					
ANR	711733	PrimaryExpression	"""fs exports\\n"""		711485	0					
ANR	711734	ElseStatement	else		711485	0					
ANR	711735	IfStatement	if ( IS_MODE_NORMAL ( mode ) )		711485	0					
ANR	711736	Condition	IS_MODE_NORMAL ( mode )	2053:13:59368:59388	711485	0	True				
ANR	711737	CallExpression	IS_MODE_NORMAL ( mode )		711485	0					
ANR	711738	Callee	IS_MODE_NORMAL		711485	0					
ANR	711739	Identifier	IS_MODE_NORMAL		711485	0					
ANR	711740	ArgumentList	mode		711485	1					
ANR	711741	Argument	mode		711485	0					
ANR	711742	Identifier	mode		711485	0					
ANR	711743	CompoundStatement		32:36:893:893	711485	1					
ANR	711744	ExpressionStatement	"r_cons_printf ( printHere ? """" : ""[Exports]\\n"" )"	2054:3:59396:59442	711485	0	True				
ANR	711745	CallExpression	"r_cons_printf ( printHere ? """" : ""[Exports]\\n"" )"		711485	0					
ANR	711746	Callee	r_cons_printf		711485	0					
ANR	711747	Identifier	r_cons_printf		711485	0					
ANR	711748	ArgumentList	"printHere ? """" : ""[Exports]\\n"""		711485	1					
ANR	711749	Argument	"printHere ? """" : ""[Exports]\\n"""		711485	0					
ANR	711750	ConditionalExpression	"printHere ? """" : ""[Exports]\\n"""		711485	0					
ANR	711751	Condition	printHere		711485	0					
ANR	711752	Identifier	printHere		711485	0					
ANR	711753	PrimaryExpression	""""""		711485	1					
ANR	711754	PrimaryExpression	"""[Exports]\\n"""		711485	2					
ANR	711755	ElseStatement	else		711485	0					
ANR	711756	IfStatement	if ( ! at && ! exponly )		711485	0					
ANR	711757	Condition	! at && ! exponly	2056:12:59460:59474	711485	0	True				
ANR	711758	AndExpression	! at && ! exponly		711485	0		&&			
ANR	711759	UnaryOperationExpression	! at		711485	0					
ANR	711760	UnaryOperator	!		711485	0					
ANR	711761	Identifier	at		711485	1					
ANR	711762	UnaryOperationExpression	! exponly		711485	1					
ANR	711763	UnaryOperator	!		711485	0					
ANR	711764	Identifier	exponly		711485	1					
ANR	711765	CompoundStatement		35:29:979:979	711485	1					
ANR	711766	IfStatement	if ( IS_MODE_RAD ( mode ) )		711485	0					
ANR	711767	Condition	IS_MODE_RAD ( mode )	2057:6:59485:59502	711485	0	True				
ANR	711768	CallExpression	IS_MODE_RAD ( mode )		711485	0					
ANR	711769	Callee	IS_MODE_RAD		711485	0					
ANR	711770	Identifier	IS_MODE_RAD		711485	0					
ANR	711771	ArgumentList	mode		711485	1					
ANR	711772	Argument	mode		711485	0					
ANR	711773	Identifier	mode		711485	0					
ANR	711774	CompoundStatement		36:26:1007:1007	711485	1					
ANR	711775	ExpressionStatement	"r_cons_printf ( ""fs symbols\\n"" )"	2058:3:59510:59540	711485	0	True				
ANR	711776	CallExpression	"r_cons_printf ( ""fs symbols\\n"" )"		711485	0					
ANR	711777	Callee	r_cons_printf		711485	0					
ANR	711778	Identifier	r_cons_printf		711485	0					
ANR	711779	ArgumentList	"""fs symbols\\n"""		711485	1					
ANR	711780	Argument	"""fs symbols\\n"""		711485	0					
ANR	711781	PrimaryExpression	"""fs symbols\\n"""		711485	0					
ANR	711782	ElseStatement	else		711485	0					
ANR	711783	IfStatement	if ( IS_MODE_NORMAL ( mode ) )		711485	0					
ANR	711784	Condition	IS_MODE_NORMAL ( mode )	2059:13:59555:59575	711485	0	True				
ANR	711785	CallExpression	IS_MODE_NORMAL ( mode )		711485	0					
ANR	711786	Callee	IS_MODE_NORMAL		711485	0					
ANR	711787	Identifier	IS_MODE_NORMAL		711485	0					
ANR	711788	ArgumentList	mode		711485	1					
ANR	711789	Argument	mode		711485	0					
ANR	711790	Identifier	mode		711485	0					
ANR	711791	CompoundStatement		38:36:1080:1080	711485	1					
ANR	711792	ExpressionStatement	"r_cons_printf ( printHere ? """" : ""[Symbols]\\n"" )"	2060:3:59583:59629	711485	0	True				
ANR	711793	CallExpression	"r_cons_printf ( printHere ? """" : ""[Symbols]\\n"" )"		711485	0					
ANR	711794	Callee	r_cons_printf		711485	0					
ANR	711795	Identifier	r_cons_printf		711485	0					
ANR	711796	ArgumentList	"printHere ? """" : ""[Symbols]\\n"""		711485	1					
ANR	711797	Argument	"printHere ? """" : ""[Symbols]\\n"""		711485	0					
ANR	711798	ConditionalExpression	"printHere ? """" : ""[Symbols]\\n"""		711485	0					
ANR	711799	Condition	printHere		711485	0					
ANR	711800	Identifier	printHere		711485	0					
ANR	711801	PrimaryExpression	""""""		711485	1					
ANR	711802	PrimaryExpression	"""[Symbols]\\n"""		711485	2					
ANR	711803	IfStatement	if ( IS_MODE_NORMAL ( mode ) )		711485	16					
ANR	711804	Condition	IS_MODE_NORMAL ( mode )	2063:5:59643:59663	711485	0	True				
ANR	711805	CallExpression	IS_MODE_NORMAL ( mode )		711485	0					
ANR	711806	Callee	IS_MODE_NORMAL		711485	0					
ANR	711807	Identifier	IS_MODE_NORMAL		711485	0					
ANR	711808	ArgumentList	mode		711485	1					
ANR	711809	Argument	mode		711485	0					
ANR	711810	Identifier	mode		711485	0					
ANR	711811	CompoundStatement		42:28:1168:1168	711485	1					
ANR	711812	ExpressionStatement	"r_cons_printf ( ""Num Paddr      Vaddr      Bind     Type Size Name\\n"" )"	2064:2:59670:59739	711485	0	True				
ANR	711813	CallExpression	"r_cons_printf ( ""Num Paddr      Vaddr      Bind     Type Size Name\\n"" )"		711485	0					
ANR	711814	Callee	r_cons_printf		711485	0					
ANR	711815	Identifier	r_cons_printf		711485	0					
ANR	711816	ArgumentList	"""Num Paddr      Vaddr      Bind     Type Size Name\\n"""		711485	1					
ANR	711817	Argument	"""Num Paddr      Vaddr      Bind     Type Size Name\\n"""		711485	0					
ANR	711818	PrimaryExpression	"""Num Paddr      Vaddr      Bind     Type Size Name\\n"""		711485	0					
ANR	711819	IdentifierDeclStatement	size_t count = 0 ;	2068:1:59747:59763	711485	17	True				
ANR	711820	IdentifierDecl	count = 0		711485	0					
ANR	711821	IdentifierDeclType	size_t		711485	0					
ANR	711822	Identifier	count		711485	1					
ANR	711823	AssignmentExpression	count = 0		711485	2		=			
ANR	711824	Identifier	count		711485	0					
ANR	711825	PrimaryExpression	0		711485	1					
ANR	711826	Statement	r_list_foreach	2069:1:59766:59779	711485	18	True				
ANR	711827	Statement	(	2069:16:59781:59781	711485	19	True				
ANR	711828	Statement	symbols	2069:17:59782:59788	711485	20	True				
ANR	711829	Statement	","	2069:24:59789:59789	711485	21	True				
ANR	711830	Statement	iter	2069:26:59791:59794	711485	22	True				
ANR	711831	Statement	","	2069:30:59795:59795	711485	23	True				
ANR	711832	Statement	symbol	2069:32:59797:59802	711485	24	True				
ANR	711833	Statement	)	2069:38:59803:59803	711485	25	True				
ANR	711834	CompoundStatement		55:2:1539:1555	711485	26					
ANR	711835	IfStatement	if ( ! symbol -> name )		711485	0					
ANR	711836	Condition	! symbol -> name	2070:6:59813:59825	711485	0	True				
ANR	711837	UnaryOperationExpression	! symbol -> name		711485	0					
ANR	711838	UnaryOperator	!		711485	0					
ANR	711839	PtrMemberAccess	symbol -> name		711485	1					
ANR	711840	Identifier	symbol		711485	0					
ANR	711841	Identifier	name		711485	1					
ANR	711842	CompoundStatement		49:21:1330:1330	711485	1					
ANR	711843	ContinueStatement	continue ;	2071:3:59833:59841	711485	0	True				
ANR	711844	IdentifierDeclStatement	"char * r_symbol_name = r_str_escape_utf8 ( symbol -> name , false , true ) ;"	2073:2:59849:59916	711485	1	True				
ANR	711845	IdentifierDecl	"* r_symbol_name = r_str_escape_utf8 ( symbol -> name , false , true )"		711485	0					
ANR	711846	IdentifierDeclType	char *		711485	0					
ANR	711847	Identifier	r_symbol_name		711485	1					
ANR	711848	AssignmentExpression	"* r_symbol_name = r_str_escape_utf8 ( symbol -> name , false , true )"		711485	2		=			
ANR	711849	Identifier	r_symbol_name		711485	0					
ANR	711850	CallExpression	"r_str_escape_utf8 ( symbol -> name , false , true )"		711485	1					
ANR	711851	Callee	r_str_escape_utf8		711485	0					
ANR	711852	Identifier	r_str_escape_utf8		711485	0					
ANR	711853	ArgumentList	symbol -> name		711485	1					
ANR	711854	Argument	symbol -> name		711485	0					
ANR	711855	PtrMemberAccess	symbol -> name		711485	0					
ANR	711856	Identifier	symbol		711485	0					
ANR	711857	Identifier	name		711485	1					
ANR	711858	Argument	false		711485	1					
ANR	711859	Identifier	false		711485	0					
ANR	711860	Argument	true		711485	2					
ANR	711861	Identifier	true		711485	0					
ANR	711862	IdentifierDeclStatement	"ut64 addr = compute_addr ( r -> bin , symbol -> paddr , symbol -> vaddr , va ) ;"	2074:2:59920:59987	711485	2	True				
ANR	711863	IdentifierDecl	"addr = compute_addr ( r -> bin , symbol -> paddr , symbol -> vaddr , va )"		711485	0					
ANR	711864	IdentifierDeclType	ut64		711485	0					
ANR	711865	Identifier	addr		711485	1					
ANR	711866	AssignmentExpression	"addr = compute_addr ( r -> bin , symbol -> paddr , symbol -> vaddr , va )"		711485	2		=			
ANR	711867	Identifier	addr		711485	0					
ANR	711868	CallExpression	"compute_addr ( r -> bin , symbol -> paddr , symbol -> vaddr , va )"		711485	1					
ANR	711869	Callee	compute_addr		711485	0					
ANR	711870	Identifier	compute_addr		711485	0					
ANR	711871	ArgumentList	r -> bin		711485	1					
ANR	711872	Argument	r -> bin		711485	0					
ANR	711873	PtrMemberAccess	r -> bin		711485	0					
ANR	711874	Identifier	r		711485	0					
ANR	711875	Identifier	bin		711485	1					
ANR	711876	Argument	symbol -> paddr		711485	1					
ANR	711877	PtrMemberAccess	symbol -> paddr		711485	0					
ANR	711878	Identifier	symbol		711485	0					
ANR	711879	Identifier	paddr		711485	1					
ANR	711880	Argument	symbol -> vaddr		711485	2					
ANR	711881	PtrMemberAccess	symbol -> vaddr		711485	0					
ANR	711882	Identifier	symbol		711485	0					
ANR	711883	Identifier	vaddr		711485	1					
ANR	711884	Argument	va		711485	3					
ANR	711885	Identifier	va		711485	0					
ANR	711886	IdentifierDeclStatement	int len = symbol -> size ? symbol -> size : 32 ;	2075:2:59991:60033	711485	3	True				
ANR	711887	IdentifierDecl	len = symbol -> size ? symbol -> size : 32		711485	0					
ANR	711888	IdentifierDeclType	int		711485	0					
ANR	711889	Identifier	len		711485	1					
ANR	711890	AssignmentExpression	len = symbol -> size ? symbol -> size : 32		711485	2		=			
ANR	711891	Identifier	len		711485	0					
ANR	711892	ConditionalExpression	symbol -> size ? symbol -> size : 32		711485	1					
ANR	711893	Condition	symbol -> size		711485	0					
ANR	711894	PtrMemberAccess	symbol -> size		711485	0					
ANR	711895	Identifier	symbol		711485	0					
ANR	711896	Identifier	size		711485	1					
ANR	711897	PtrMemberAccess	symbol -> size		711485	1					
ANR	711898	Identifier	symbol		711485	0					
ANR	711899	Identifier	size		711485	1					
ANR	711900	PrimaryExpression	32		711485	2					
ANR	711901	IdentifierDeclStatement	SymName sn = { 0 } ;	2076:2:60037:60053	711485	4	True				
ANR	711902	IdentifierDecl	sn = { 0 }		711485	0					
ANR	711903	IdentifierDeclType	SymName		711485	0					
ANR	711904	Identifier	sn		711485	1					
ANR	711905	AssignmentExpression	sn = { 0 }		711485	2		=			
ANR	711906	Identifier	sn		711485	0					
ANR	711907	InitializerList	0		711485	1					
ANR	711908	PrimaryExpression	0		711485	0					
ANR	711909	IfStatement	if ( exponly && ! isAnExport ( symbol ) )		711485	5					
ANR	711910	Condition	exponly && ! isAnExport ( symbol )	2078:6:60062:60092	711485	0	True				
ANR	711911	AndExpression	exponly && ! isAnExport ( symbol )		711485	0		&&			
ANR	711912	Identifier	exponly		711485	0					
ANR	711913	UnaryOperationExpression	! isAnExport ( symbol )		711485	1					
ANR	711914	UnaryOperator	!		711485	0					
ANR	711915	CallExpression	isAnExport ( symbol )		711485	1					
ANR	711916	Callee	isAnExport		711485	0					
ANR	711917	Identifier	isAnExport		711485	0					
ANR	711918	ArgumentList	symbol		711485	1					
ANR	711919	Argument	symbol		711485	0					
ANR	711920	Identifier	symbol		711485	0					
ANR	711921	CompoundStatement		57:39:1597:1597	711485	1					
ANR	711922	ExpressionStatement	free ( r_symbol_name )	2079:3:60100:60120	711485	0	True				
ANR	711923	CallExpression	free ( r_symbol_name )		711485	0					
ANR	711924	Callee	free		711485	0					
ANR	711925	Identifier	free		711485	0					
ANR	711926	ArgumentList	r_symbol_name		711485	1					
ANR	711927	Argument	r_symbol_name		711485	0					
ANR	711928	Identifier	r_symbol_name		711485	0					
ANR	711929	ContinueStatement	continue ;	2080:3:60125:60133	711485	1	True				
ANR	711930	IfStatement	"if ( name && strcmp ( r_symbol_name , name ) )"		711485	6					
ANR	711931	Condition	"name && strcmp ( r_symbol_name , name )"	2082:6:60145:60180	711485	0	True				
ANR	711932	AndExpression	"name && strcmp ( r_symbol_name , name )"		711485	0		&&			
ANR	711933	Identifier	name		711485	0					
ANR	711934	CallExpression	"strcmp ( r_symbol_name , name )"		711485	1					
ANR	711935	Callee	strcmp		711485	0					
ANR	711936	Identifier	strcmp		711485	0					
ANR	711937	ArgumentList	r_symbol_name		711485	1					
ANR	711938	Argument	r_symbol_name		711485	0					
ANR	711939	Identifier	r_symbol_name		711485	0					
ANR	711940	Argument	name		711485	1					
ANR	711941	Identifier	name		711485	0					
ANR	711942	CompoundStatement		61:44:1685:1685	711485	1					
ANR	711943	ExpressionStatement	free ( r_symbol_name )	2083:3:60188:60208	711485	0	True				
ANR	711944	CallExpression	free ( r_symbol_name )		711485	0					
ANR	711945	Callee	free		711485	0					
ANR	711946	Identifier	free		711485	0					
ANR	711947	ArgumentList	r_symbol_name		711485	1					
ANR	711948	Argument	r_symbol_name		711485	0					
ANR	711949	Identifier	r_symbol_name		711485	0					
ANR	711950	ContinueStatement	continue ;	2084:3:60213:60221	711485	1	True				
ANR	711951	IfStatement	"if ( at && ( ! symbol -> size || ! is_in_range ( at , addr , symbol -> size ) ) )"		711485	7					
ANR	711952	Condition	"at && ( ! symbol -> size || ! is_in_range ( at , addr , symbol -> size ) )"	2086:6:60233:60294	711485	0	True				
ANR	711953	AndExpression	"at && ( ! symbol -> size || ! is_in_range ( at , addr , symbol -> size ) )"		711485	0		&&			
ANR	711954	Identifier	at		711485	0					
ANR	711955	OrExpression	"! symbol -> size || ! is_in_range ( at , addr , symbol -> size )"		711485	1		||			
ANR	711956	UnaryOperationExpression	! symbol -> size		711485	0					
ANR	711957	UnaryOperator	!		711485	0					
ANR	711958	PtrMemberAccess	symbol -> size		711485	1					
ANR	711959	Identifier	symbol		711485	0					
ANR	711960	Identifier	size		711485	1					
ANR	711961	UnaryOperationExpression	"! is_in_range ( at , addr , symbol -> size )"		711485	1					
ANR	711962	UnaryOperator	!		711485	0					
ANR	711963	CallExpression	"is_in_range ( at , addr , symbol -> size )"		711485	1					
ANR	711964	Callee	is_in_range		711485	0					
ANR	711965	Identifier	is_in_range		711485	0					
ANR	711966	ArgumentList	at		711485	1					
ANR	711967	Argument	at		711485	0					
ANR	711968	Identifier	at		711485	0					
ANR	711969	Argument	addr		711485	1					
ANR	711970	Identifier	addr		711485	0					
ANR	711971	Argument	symbol -> size		711485	2					
ANR	711972	PtrMemberAccess	symbol -> size		711485	0					
ANR	711973	Identifier	symbol		711485	0					
ANR	711974	Identifier	size		711485	1					
ANR	711975	CompoundStatement		65:70:1799:1799	711485	1					
ANR	711976	ExpressionStatement	free ( r_symbol_name )	2087:3:60302:60322	711485	0	True				
ANR	711977	CallExpression	free ( r_symbol_name )		711485	0					
ANR	711978	Callee	free		711485	0					
ANR	711979	Identifier	free		711485	0					
ANR	711980	ArgumentList	r_symbol_name		711485	1					
ANR	711981	Argument	r_symbol_name		711485	0					
ANR	711982	Identifier	r_symbol_name		711485	0					
ANR	711983	ContinueStatement	continue ;	2088:3:60327:60335	711485	1	True				
ANR	711984	IfStatement	"if ( ( printHere && ! is_in_range ( r -> offset , symbol -> paddr , len ) ) && ( printHere && ! is_in_range ( r -> offset , addr , len ) ) )"		711485	8					
ANR	711985	Condition	"( printHere && ! is_in_range ( r -> offset , symbol -> paddr , len ) ) && ( printHere && ! is_in_range ( r -> offset , addr , len ) )"	2090:6:60347:60463	711485	0	True				
ANR	711986	AndExpression	"( printHere && ! is_in_range ( r -> offset , symbol -> paddr , len ) ) && ( printHere && ! is_in_range ( r -> offset , addr , len ) )"		711485	0		&&			
ANR	711987	AndExpression	"printHere && ! is_in_range ( r -> offset , symbol -> paddr , len )"		711485	0		&&			
ANR	711988	Identifier	printHere		711485	0					
ANR	711989	UnaryOperationExpression	"! is_in_range ( r -> offset , symbol -> paddr , len )"		711485	1					
ANR	711990	UnaryOperator	!		711485	0					
ANR	711991	CallExpression	"is_in_range ( r -> offset , symbol -> paddr , len )"		711485	1					
ANR	711992	Callee	is_in_range		711485	0					
ANR	711993	Identifier	is_in_range		711485	0					
ANR	711994	ArgumentList	r -> offset		711485	1					
ANR	711995	Argument	r -> offset		711485	0					
ANR	711996	PtrMemberAccess	r -> offset		711485	0					
ANR	711997	Identifier	r		711485	0					
ANR	711998	Identifier	offset		711485	1					
ANR	711999	Argument	symbol -> paddr		711485	1					
ANR	712000	PtrMemberAccess	symbol -> paddr		711485	0					
ANR	712001	Identifier	symbol		711485	0					
ANR	712002	Identifier	paddr		711485	1					
ANR	712003	Argument	len		711485	2					
ANR	712004	Identifier	len		711485	0					
ANR	712005	AndExpression	"printHere && ! is_in_range ( r -> offset , addr , len )"		711485	1		&&			
ANR	712006	Identifier	printHere		711485	0					
ANR	712007	UnaryOperationExpression	"! is_in_range ( r -> offset , addr , len )"		711485	1					
ANR	712008	UnaryOperator	!		711485	0					
ANR	712009	CallExpression	"is_in_range ( r -> offset , addr , len )"		711485	1					
ANR	712010	Callee	is_in_range		711485	0					
ANR	712011	Identifier	is_in_range		711485	0					
ANR	712012	ArgumentList	r -> offset		711485	1					
ANR	712013	Argument	r -> offset		711485	0					
ANR	712014	PtrMemberAccess	r -> offset		711485	0					
ANR	712015	Identifier	r		711485	0					
ANR	712016	Identifier	offset		711485	1					
ANR	712017	Argument	addr		711485	1					
ANR	712018	Identifier	addr		711485	0					
ANR	712019	Argument	len		711485	2					
ANR	712020	Identifier	len		711485	0					
ANR	712021	CompoundStatement		70:59:1968:1968	711485	1					
ANR	712022	ExpressionStatement	free ( r_symbol_name )	2092:3:60471:60491	711485	0	True				
ANR	712023	CallExpression	free ( r_symbol_name )		711485	0					
ANR	712024	Callee	free		711485	0					
ANR	712025	Identifier	free		711485	0					
ANR	712026	ArgumentList	r_symbol_name		711485	1					
ANR	712027	Argument	r_symbol_name		711485	0					
ANR	712028	Identifier	r_symbol_name		711485	0					
ANR	712029	ContinueStatement	continue ;	2093:3:60496:60504	711485	1	True				
ANR	712030	ExpressionStatement	count ++	2095:2:60512:60520	711485	9	True				
ANR	712031	PostIncDecOperationExpression	count ++		711485	0					
ANR	712032	Identifier	count		711485	0					
ANR	712033	IncDec	++		711485	1					
ANR	712034	ExpressionStatement	"snInit ( r , & sn , symbol , lang )"	2096:2:60524:60553	711485	10	True				
ANR	712035	CallExpression	"snInit ( r , & sn , symbol , lang )"		711485	0					
ANR	712036	Callee	snInit		711485	0					
ANR	712037	Identifier	snInit		711485	0					
ANR	712038	ArgumentList	r		711485	1					
ANR	712039	Argument	r		711485	0					
ANR	712040	Identifier	r		711485	0					
ANR	712041	Argument	& sn		711485	1					
ANR	712042	UnaryOperationExpression	& sn		711485	0					
ANR	712043	UnaryOperator	&		711485	0					
ANR	712044	Identifier	sn		711485	1					
ANR	712045	Argument	symbol		711485	2					
ANR	712046	Identifier	symbol		711485	0					
ANR	712047	Argument	lang		711485	3					
ANR	712048	Identifier	lang		711485	0					
ANR	712049	IfStatement	if ( IS_MODE_SET ( mode ) && ( is_section_symbol ( symbol ) || is_file_symbol ( symbol ) ) )		711485	11					
ANR	712050	Condition	IS_MODE_SET ( mode ) && ( is_section_symbol ( symbol ) || is_file_symbol ( symbol ) )	2098:6:60562:60638	711485	0	True				
ANR	712051	AndExpression	IS_MODE_SET ( mode ) && ( is_section_symbol ( symbol ) || is_file_symbol ( symbol ) )		711485	0		&&			
ANR	712052	CallExpression	IS_MODE_SET ( mode )		711485	0					
ANR	712053	Callee	IS_MODE_SET		711485	0					
ANR	712054	Identifier	IS_MODE_SET		711485	0					
ANR	712055	ArgumentList	mode		711485	1					
ANR	712056	Argument	mode		711485	0					
ANR	712057	Identifier	mode		711485	0					
ANR	712058	OrExpression	is_section_symbol ( symbol ) || is_file_symbol ( symbol )		711485	1		||			
ANR	712059	CallExpression	is_section_symbol ( symbol )		711485	0					
ANR	712060	Callee	is_section_symbol		711485	0					
ANR	712061	Identifier	is_section_symbol		711485	0					
ANR	712062	ArgumentList	symbol		711485	1					
ANR	712063	Argument	symbol		711485	0					
ANR	712064	Identifier	symbol		711485	0					
ANR	712065	CallExpression	is_file_symbol ( symbol )		711485	1					
ANR	712066	Callee	is_file_symbol		711485	0					
ANR	712067	Identifier	is_file_symbol		711485	0					
ANR	712068	ArgumentList	symbol		711485	1					
ANR	712069	Argument	symbol		711485	0					
ANR	712070	Identifier	symbol		711485	0					
ANR	712071	CompoundStatement		77:85:2143:2143	711485	1					
ANR	712072	ElseStatement	else		711485	0					
ANR	712073	IfStatement	if ( IS_MODE_SET ( mode ) && is_special_symbol ( symbol ) )		711485	0					
ANR	712074	Condition	IS_MODE_SET ( mode ) && is_special_symbol ( symbol )	2103:13:60792:60839	711485	0	True				
ANR	712075	AndExpression	IS_MODE_SET ( mode ) && is_special_symbol ( symbol )		711485	0		&&			
ANR	712076	CallExpression	IS_MODE_SET ( mode )		711485	0					
ANR	712077	Callee	IS_MODE_SET		711485	0					
ANR	712078	Identifier	IS_MODE_SET		711485	0					
ANR	712079	ArgumentList	mode		711485	1					
ANR	712080	Argument	mode		711485	0					
ANR	712081	Identifier	mode		711485	0					
ANR	712082	CallExpression	is_special_symbol ( symbol )		711485	1					
ANR	712083	Callee	is_special_symbol		711485	0					
ANR	712084	Identifier	is_special_symbol		711485	0					
ANR	712085	ArgumentList	symbol		711485	1					
ANR	712086	Argument	symbol		711485	0					
ANR	712087	Identifier	symbol		711485	0					
ANR	712088	CompoundStatement		82:63:2344:2344	711485	1					
ANR	712089	IfStatement	if ( is_arm )		711485	0					
ANR	712090	Condition	is_arm	2104:7:60851:60856	711485	0	True				
ANR	712091	Identifier	is_arm		711485	0					
ANR	712092	CompoundStatement		83:15:2361:2361	711485	1					
ANR	712093	ExpressionStatement	"handle_arm_special_symbol ( r , symbol , va )"	2105:4:60865:60906	711485	0	True				
ANR	712094	CallExpression	"handle_arm_special_symbol ( r , symbol , va )"		711485	0					
ANR	712095	Callee	handle_arm_special_symbol		711485	0					
ANR	712096	Identifier	handle_arm_special_symbol		711485	0					
ANR	712097	ArgumentList	r		711485	1					
ANR	712098	Argument	r		711485	0					
ANR	712099	Identifier	r		711485	0					
ANR	712100	Argument	symbol		711485	1					
ANR	712101	Identifier	symbol		711485	0					
ANR	712102	Argument	va		711485	2					
ANR	712103	Identifier	va		711485	0					
ANR	712104	ElseStatement	else		711485	0					
ANR	712105	IfStatement	if ( IS_MODE_SET ( mode ) )		711485	0					
ANR	712106	Condition	IS_MODE_SET ( mode )	2107:13:60926:60943	711485	0	True				
ANR	712107	CallExpression	IS_MODE_SET ( mode )		711485	0					
ANR	712108	Callee	IS_MODE_SET		711485	0					
ANR	712109	Identifier	IS_MODE_SET		711485	0					
ANR	712110	ArgumentList	mode		711485	1					
ANR	712111	Argument	mode		711485	0					
ANR	712112	Identifier	mode		711485	0					
ANR	712113	CompoundStatement		86:33:2448:2448	711485	1					
ANR	712114	IfStatement	if ( is_arm )		711485	0					
ANR	712115	Condition	is_arm	2109:7:61044:61049	711485	0	True				
ANR	712116	Identifier	is_arm		711485	0					
ANR	712117	CompoundStatement		88:15:2554:2554	711485	1					
ANR	712118	ExpressionStatement	"handle_arm_symbol ( r , symbol , info , va )"	2110:4:61058:61097	711485	0	True				
ANR	712119	CallExpression	"handle_arm_symbol ( r , symbol , info , va )"		711485	0					
ANR	712120	Callee	handle_arm_symbol		711485	0					
ANR	712121	Identifier	handle_arm_symbol		711485	0					
ANR	712122	ArgumentList	r		711485	1					
ANR	712123	Argument	r		711485	0					
ANR	712124	Identifier	r		711485	0					
ANR	712125	Argument	symbol		711485	1					
ANR	712126	Identifier	symbol		711485	0					
ANR	712127	Argument	info		711485	2					
ANR	712128	Identifier	info		711485	0					
ANR	712129	Argument	va		711485	3					
ANR	712130	Identifier	va		711485	0					
ANR	712131	ExpressionStatement	"select_flag_space ( r , symbol )"	2112:3:61107:61136	711485	1	True				
ANR	712132	CallExpression	"select_flag_space ( r , symbol )"		711485	0					
ANR	712133	Callee	select_flag_space		711485	0					
ANR	712134	Identifier	select_flag_space		711485	0					
ANR	712135	ArgumentList	r		711485	1					
ANR	712136	Argument	r		711485	0					
ANR	712137	Identifier	r		711485	0					
ANR	712138	Argument	symbol		711485	1					
ANR	712139	Identifier	symbol		711485	0					
ANR	712140	IfStatement	if ( sn . classname )		711485	2					
ANR	712141	Condition	sn . classname	2114:7:61196:61207	711485	0	True				
ANR	712142	MemberAccess	sn . classname		711485	0					
ANR	712143	Identifier	sn		711485	0					
ANR	712144	Identifier	classname		711485	1					
ANR	712145	CompoundStatement		94:4:2718:2768	711485	1					
ANR	712146	IdentifierDeclStatement	"RFlagItem * fi = r_flag_get ( r -> flags , sn . methflag ) ;"	2115:4:61216:61266	711485	0	True				
ANR	712147	IdentifierDecl	"* fi = r_flag_get ( r -> flags , sn . methflag )"		711485	0					
ANR	712148	IdentifierDeclType	RFlagItem *		711485	0					
ANR	712149	Identifier	fi		711485	1					
ANR	712150	AssignmentExpression	"* fi = r_flag_get ( r -> flags , sn . methflag )"		711485	2		=			
ANR	712151	Identifier	fi		711485	0					
ANR	712152	CallExpression	"r_flag_get ( r -> flags , sn . methflag )"		711485	1					
ANR	712153	Callee	r_flag_get		711485	0					
ANR	712154	Identifier	r_flag_get		711485	0					
ANR	712155	ArgumentList	r -> flags		711485	1					
ANR	712156	Argument	r -> flags		711485	0					
ANR	712157	PtrMemberAccess	r -> flags		711485	0					
ANR	712158	Identifier	r		711485	0					
ANR	712159	Identifier	flags		711485	1					
ANR	712160	Argument	sn . methflag		711485	1					
ANR	712161	MemberAccess	sn . methflag		711485	0					
ANR	712162	Identifier	sn		711485	0					
ANR	712163	Identifier	methflag		711485	1					
ANR	712164	IfStatement	if ( r -> bin -> prefix )		711485	1					
ANR	712165	Condition	r -> bin -> prefix	2116:8:61276:61289	711485	0	True				
ANR	712166	PtrMemberAccess	r -> bin -> prefix		711485	0					
ANR	712167	PtrMemberAccess	r -> bin		711485	0					
ANR	712168	Identifier	r		711485	0					
ANR	712169	Identifier	bin		711485	1					
ANR	712170	Identifier	prefix		711485	1					
ANR	712171	CompoundStatement		96:5:2801:2865	711485	1					
ANR	712172	IdentifierDeclStatement	"char * prname = r_str_newf ( ""%s.%s"" , r -> bin -> prefix , sn . methflag ) ;"	2117:5:61299:61363	711485	0	True				
ANR	712173	IdentifierDecl	"* prname = r_str_newf ( ""%s.%s"" , r -> bin -> prefix , sn . methflag )"		711485	0					
ANR	712174	IdentifierDeclType	char *		711485	0					
ANR	712175	Identifier	prname		711485	1					
ANR	712176	AssignmentExpression	"* prname = r_str_newf ( ""%s.%s"" , r -> bin -> prefix , sn . methflag )"		711485	2		=			
ANR	712177	Identifier	prname		711485	0					
ANR	712178	CallExpression	"r_str_newf ( ""%s.%s"" , r -> bin -> prefix , sn . methflag )"		711485	1					
ANR	712179	Callee	r_str_newf		711485	0					
ANR	712180	Identifier	r_str_newf		711485	0					
ANR	712181	ArgumentList	"""%s.%s"""		711485	1					
ANR	712182	Argument	"""%s.%s"""		711485	0					
ANR	712183	PrimaryExpression	"""%s.%s"""		711485	0					
ANR	712184	Argument	r -> bin -> prefix		711485	1					
ANR	712185	PtrMemberAccess	r -> bin -> prefix		711485	0					
ANR	712186	PtrMemberAccess	r -> bin		711485	0					
ANR	712187	Identifier	r		711485	0					
ANR	712188	Identifier	bin		711485	1					
ANR	712189	Identifier	prefix		711485	1					
ANR	712190	Argument	sn . methflag		711485	2					
ANR	712191	MemberAccess	sn . methflag		711485	0					
ANR	712192	Identifier	sn		711485	0					
ANR	712193	Identifier	methflag		711485	1					
ANR	712194	ExpressionStatement	"r_name_filter ( sn . methflag , - 1 )"	2118:5:61370:61401	711485	1	True				
ANR	712195	CallExpression	"r_name_filter ( sn . methflag , - 1 )"		711485	0					
ANR	712196	Callee	r_name_filter		711485	0					
ANR	712197	Identifier	r_name_filter		711485	0					
ANR	712198	ArgumentList	sn . methflag		711485	1					
ANR	712199	Argument	sn . methflag		711485	0					
ANR	712200	MemberAccess	sn . methflag		711485	0					
ANR	712201	Identifier	sn		711485	0					
ANR	712202	Identifier	methflag		711485	1					
ANR	712203	Argument	- 1		711485	1					
ANR	712204	UnaryOperationExpression	- 1		711485	0					
ANR	712205	UnaryOperator	-		711485	0					
ANR	712206	PrimaryExpression	1		711485	1					
ANR	712207	ExpressionStatement	free ( sn . methflag )	2119:5:61408:61426	711485	2	True				
ANR	712208	CallExpression	free ( sn . methflag )		711485	0					
ANR	712209	Callee	free		711485	0					
ANR	712210	Identifier	free		711485	0					
ANR	712211	ArgumentList	sn . methflag		711485	1					
ANR	712212	Argument	sn . methflag		711485	0					
ANR	712213	MemberAccess	sn . methflag		711485	0					
ANR	712214	Identifier	sn		711485	0					
ANR	712215	Identifier	methflag		711485	1					
ANR	712216	ExpressionStatement	sn . methflag = prname	2120:5:61433:61453	711485	3	True				
ANR	712217	AssignmentExpression	sn . methflag = prname		711485	0		=			
ANR	712218	MemberAccess	sn . methflag		711485	0					
ANR	712219	Identifier	sn		711485	0					
ANR	712220	Identifier	methflag		711485	1					
ANR	712221	Identifier	prname		711485	1					
ANR	712222	IfStatement	if ( fi )		711485	2					
ANR	712223	Condition	fi	2122:8:61469:61470	711485	0	True				
ANR	712224	Identifier	fi		711485	0					
ANR	712225	CompoundStatement		101:12:2975:2975	711485	1					
ANR	712226	ExpressionStatement	"r_flag_item_set_realname ( fi , sn . methname )"	2123:5:61480:61522	711485	0	True				
ANR	712227	CallExpression	"r_flag_item_set_realname ( fi , sn . methname )"		711485	0					
ANR	712228	Callee	r_flag_item_set_realname		711485	0					
ANR	712229	Identifier	r_flag_item_set_realname		711485	0					
ANR	712230	ArgumentList	fi		711485	1					
ANR	712231	Argument	fi		711485	0					
ANR	712232	Identifier	fi		711485	0					
ANR	712233	Argument	sn . methname		711485	1					
ANR	712234	MemberAccess	sn . methname		711485	0					
ANR	712235	Identifier	sn		711485	0					
ANR	712236	Identifier	methname		711485	1					
ANR	712237	IfStatement	if ( ( fi -> offset - r -> flags -> base ) == addr )		711485	1					
ANR	712238	Condition	( fi -> offset - r -> flags -> base ) == addr	2124:9:61533:61569	711485	0	True				
ANR	712239	EqualityExpression	( fi -> offset - r -> flags -> base ) == addr		711485	0		==			
ANR	712240	AdditiveExpression	fi -> offset - r -> flags -> base		711485	0		-			
ANR	712241	PtrMemberAccess	fi -> offset		711485	0					
ANR	712242	Identifier	fi		711485	0					
ANR	712243	Identifier	offset		711485	1					
ANR	712244	PtrMemberAccess	r -> flags -> base		711485	1					
ANR	712245	PtrMemberAccess	r -> flags		711485	0					
ANR	712246	Identifier	r		711485	0					
ANR	712247	Identifier	flags		711485	1					
ANR	712248	Identifier	base		711485	1					
ANR	712249	Identifier	addr		711485	1					
ANR	712250	CompoundStatement		103:48:3074:3074	711485	1					
ANR	712251	ExpressionStatement	"r_flag_unset ( r -> flags , fi )"	2126:6:61647:61674	711485	0	True				
ANR	712252	CallExpression	"r_flag_unset ( r -> flags , fi )"		711485	0					
ANR	712253	Callee	r_flag_unset		711485	0					
ANR	712254	Identifier	r_flag_unset		711485	0					
ANR	712255	ArgumentList	r -> flags		711485	1					
ANR	712256	Argument	r -> flags		711485	0					
ANR	712257	PtrMemberAccess	r -> flags		711485	0					
ANR	712258	Identifier	r		711485	0					
ANR	712259	Identifier	flags		711485	1					
ANR	712260	Argument	fi		711485	1					
ANR	712261	Identifier	fi		711485	0					
ANR	712262	ElseStatement	else		711485	0					
ANR	712263	CompoundStatement		109:5:3269:3326	711485	0					
ANR	712264	ExpressionStatement	"fi = r_flag_set ( r -> flags , sn . methflag , addr , symbol -> size )"	2129:5:61701:61760	711485	0	True				
ANR	712265	AssignmentExpression	"fi = r_flag_set ( r -> flags , sn . methflag , addr , symbol -> size )"		711485	0		=			
ANR	712266	Identifier	fi		711485	0					
ANR	712267	CallExpression	"r_flag_set ( r -> flags , sn . methflag , addr , symbol -> size )"		711485	1					
ANR	712268	Callee	r_flag_set		711485	0					
ANR	712269	Identifier	r_flag_set		711485	0					
ANR	712270	ArgumentList	r -> flags		711485	1					
ANR	712271	Argument	r -> flags		711485	0					
ANR	712272	PtrMemberAccess	r -> flags		711485	0					
ANR	712273	Identifier	r		711485	0					
ANR	712274	Identifier	flags		711485	1					
ANR	712275	Argument	sn . methflag		711485	1					
ANR	712276	MemberAccess	sn . methflag		711485	0					
ANR	712277	Identifier	sn		711485	0					
ANR	712278	Identifier	methflag		711485	1					
ANR	712279	Argument	addr		711485	2					
ANR	712280	Identifier	addr		711485	0					
ANR	712281	Argument	symbol -> size		711485	3					
ANR	712282	PtrMemberAccess	symbol -> size		711485	0					
ANR	712283	Identifier	symbol		711485	0					
ANR	712284	Identifier	size		711485	1					
ANR	712285	IdentifierDeclStatement	char * comment = fi -> comment ? strdup ( fi -> comment ) : NULL ;	2130:5:61767:61824	711485	1	True				
ANR	712286	IdentifierDecl	* comment = fi -> comment ? strdup ( fi -> comment ) : NULL		711485	0					
ANR	712287	IdentifierDeclType	char *		711485	0					
ANR	712288	Identifier	comment		711485	1					
ANR	712289	AssignmentExpression	* comment = fi -> comment ? strdup ( fi -> comment ) : NULL		711485	2		=			
ANR	712290	Identifier	comment		711485	0					
ANR	712291	ConditionalExpression	fi -> comment ? strdup ( fi -> comment ) : NULL		711485	1					
ANR	712292	Condition	fi -> comment		711485	0					
ANR	712293	PtrMemberAccess	fi -> comment		711485	0					
ANR	712294	Identifier	fi		711485	0					
ANR	712295	Identifier	comment		711485	1					
ANR	712296	CallExpression	strdup ( fi -> comment )		711485	1					
ANR	712297	Callee	strdup		711485	0					
ANR	712298	Identifier	strdup		711485	0					
ANR	712299	ArgumentList	fi -> comment		711485	1					
ANR	712300	Argument	fi -> comment		711485	0					
ANR	712301	PtrMemberAccess	fi -> comment		711485	0					
ANR	712302	Identifier	fi		711485	0					
ANR	712303	Identifier	comment		711485	1					
ANR	712304	Identifier	NULL		711485	2					
ANR	712305	IfStatement	if ( comment )		711485	2					
ANR	712306	Condition	comment	2131:9:61835:61841	711485	0	True				
ANR	712307	Identifier	comment		711485	0					
ANR	712308	CompoundStatement		110:18:3346:3346	711485	1					
ANR	712309	ExpressionStatement	"r_flag_item_set_comment ( fi , comment )"	2132:6:61852:61889	711485	0	True				
ANR	712310	CallExpression	"r_flag_item_set_comment ( fi , comment )"		711485	0					
ANR	712311	Callee	r_flag_item_set_comment		711485	0					
ANR	712312	Identifier	r_flag_item_set_comment		711485	0					
ANR	712313	ArgumentList	fi		711485	1					
ANR	712314	Argument	fi		711485	0					
ANR	712315	Identifier	fi		711485	0					
ANR	712316	Argument	comment		711485	1					
ANR	712317	Identifier	comment		711485	0					
ANR	712318	ExpressionStatement	R_FREE ( comment )	2133:6:61897:61913	711485	1	True				
ANR	712319	CallExpression	R_FREE ( comment )		711485	0					
ANR	712320	Callee	R_FREE		711485	0					
ANR	712321	Identifier	R_FREE		711485	0					
ANR	712322	ArgumentList	comment		711485	1					
ANR	712323	Argument	comment		711485	0					
ANR	712324	Identifier	comment		711485	0					
ANR	712325	ElseStatement	else		711485	0					
ANR	712326	CompoundStatement		121:4:3661:3723	711485	0					
ANR	712327	IdentifierDeclStatement	const char * n = sn . demname ? sn . demname : sn . name ;	2137:4:61944:61993	711485	0	True				
ANR	712328	IdentifierDecl	* n = sn . demname ? sn . demname : sn . name		711485	0					
ANR	712329	IdentifierDeclType	const char *		711485	0					
ANR	712330	Identifier	n		711485	1					
ANR	712331	AssignmentExpression	* n = sn . demname ? sn . demname : sn . name		711485	2		=			
ANR	712332	Identifier	n		711485	0					
ANR	712333	ConditionalExpression	sn . demname ? sn . demname : sn . name		711485	1					
ANR	712334	Condition	sn . demname		711485	0					
ANR	712335	MemberAccess	sn . demname		711485	0					
ANR	712336	Identifier	sn		711485	0					
ANR	712337	Identifier	demname		711485	1					
ANR	712338	MemberAccess	sn . demname		711485	1					
ANR	712339	Identifier	sn		711485	0					
ANR	712340	Identifier	demname		711485	1					
ANR	712341	MemberAccess	sn . name		711485	2					
ANR	712342	Identifier	sn		711485	0					
ANR	712343	Identifier	name		711485	1					
ANR	712344	IdentifierDeclStatement	const char * fn = sn . demflag ? sn . demflag : sn . nameflag ;	2138:4:61999:62053	711485	1	True				
ANR	712345	IdentifierDecl	* fn = sn . demflag ? sn . demflag : sn . nameflag		711485	0					
ANR	712346	IdentifierDeclType	const char *		711485	0					
ANR	712347	Identifier	fn		711485	1					
ANR	712348	AssignmentExpression	* fn = sn . demflag ? sn . demflag : sn . nameflag		711485	2		=			
ANR	712349	Identifier	fn		711485	0					
ANR	712350	ConditionalExpression	sn . demflag ? sn . demflag : sn . nameflag		711485	1					
ANR	712351	Condition	sn . demflag		711485	0					
ANR	712352	MemberAccess	sn . demflag		711485	0					
ANR	712353	Identifier	sn		711485	0					
ANR	712354	Identifier	demflag		711485	1					
ANR	712355	MemberAccess	sn . demflag		711485	1					
ANR	712356	Identifier	sn		711485	0					
ANR	712357	Identifier	demflag		711485	1					
ANR	712358	MemberAccess	sn . nameflag		711485	2					
ANR	712359	Identifier	sn		711485	0					
ANR	712360	Identifier	nameflag		711485	1					
ANR	712361	IdentifierDeclStatement	"char * fnp = ( r -> bin -> prefix ) ? r_str_newf ( ""%s.%s"" , r -> bin -> prefix , fn ) : strdup ( fn ) ;"	2139:4:62059:62153	711485	2	True				
ANR	712362	IdentifierDecl	"* fnp = ( r -> bin -> prefix ) ? r_str_newf ( ""%s.%s"" , r -> bin -> prefix , fn ) : strdup ( fn )"		711485	0					
ANR	712363	IdentifierDeclType	char *		711485	0					
ANR	712364	Identifier	fnp		711485	1					
ANR	712365	AssignmentExpression	"* fnp = ( r -> bin -> prefix ) ? r_str_newf ( ""%s.%s"" , r -> bin -> prefix , fn ) : strdup ( fn )"		711485	2		=			
ANR	712366	Identifier	fnp		711485	0					
ANR	712367	ConditionalExpression	"( r -> bin -> prefix ) ? r_str_newf ( ""%s.%s"" , r -> bin -> prefix , fn ) : strdup ( fn )"		711485	1					
ANR	712368	Condition	r -> bin -> prefix		711485	0					
ANR	712369	PtrMemberAccess	r -> bin -> prefix		711485	0					
ANR	712370	PtrMemberAccess	r -> bin		711485	0					
ANR	712371	Identifier	r		711485	0					
ANR	712372	Identifier	bin		711485	1					
ANR	712373	Identifier	prefix		711485	1					
ANR	712374	CallExpression	"r_str_newf ( ""%s.%s"" , r -> bin -> prefix , fn )"		711485	1					
ANR	712375	Callee	r_str_newf		711485	0					
ANR	712376	Identifier	r_str_newf		711485	0					
ANR	712377	ArgumentList	"""%s.%s"""		711485	1					
ANR	712378	Argument	"""%s.%s"""		711485	0					
ANR	712379	PrimaryExpression	"""%s.%s"""		711485	0					
ANR	712380	Argument	r -> bin -> prefix		711485	1					
ANR	712381	PtrMemberAccess	r -> bin -> prefix		711485	0					
ANR	712382	PtrMemberAccess	r -> bin		711485	0					
ANR	712383	Identifier	r		711485	0					
ANR	712384	Identifier	bin		711485	1					
ANR	712385	Identifier	prefix		711485	1					
ANR	712386	Argument	fn		711485	2					
ANR	712387	Identifier	fn		711485	0					
ANR	712388	CallExpression	strdup ( fn )		711485	2					
ANR	712389	Callee	strdup		711485	0					
ANR	712390	Identifier	strdup		711485	0					
ANR	712391	ArgumentList	fn		711485	1					
ANR	712392	Argument	fn		711485	0					
ANR	712393	Identifier	fn		711485	0					
ANR	712394	IdentifierDeclStatement	"RFlagItem * fi = r_flag_set ( r -> flags , fnp , addr , symbol -> size ) ;"	2142:4:62159:62221	711485	3	True				
ANR	712395	IdentifierDecl	"* fi = r_flag_set ( r -> flags , fnp , addr , symbol -> size )"		711485	0					
ANR	712396	IdentifierDeclType	RFlagItem *		711485	0					
ANR	712397	Identifier	fi		711485	1					
ANR	712398	AssignmentExpression	"* fi = r_flag_set ( r -> flags , fnp , addr , symbol -> size )"		711485	2		=			
ANR	712399	Identifier	fi		711485	0					
ANR	712400	CallExpression	"r_flag_set ( r -> flags , fnp , addr , symbol -> size )"		711485	1					
ANR	712401	Callee	r_flag_set		711485	0					
ANR	712402	Identifier	r_flag_set		711485	0					
ANR	712403	ArgumentList	r -> flags		711485	1					
ANR	712404	Argument	r -> flags		711485	0					
ANR	712405	PtrMemberAccess	r -> flags		711485	0					
ANR	712406	Identifier	r		711485	0					
ANR	712407	Identifier	flags		711485	1					
ANR	712408	Argument	fnp		711485	1					
ANR	712409	Identifier	fnp		711485	0					
ANR	712410	Argument	addr		711485	2					
ANR	712411	Identifier	addr		711485	0					
ANR	712412	Argument	symbol -> size		711485	3					
ANR	712413	PtrMemberAccess	symbol -> size		711485	0					
ANR	712414	Identifier	symbol		711485	0					
ANR	712415	Identifier	size		711485	1					
ANR	712416	IfStatement	if ( fi )		711485	4					
ANR	712417	Condition	fi	2143:8:62231:62232	711485	0	True				
ANR	712418	Identifier	fi		711485	0					
ANR	712419	CompoundStatement		122:12:3737:3737	711485	1					
ANR	712420	ExpressionStatement	"r_flag_item_set_realname ( fi , n )"	2144:5:62242:62274	711485	0	True				
ANR	712421	CallExpression	"r_flag_item_set_realname ( fi , n )"		711485	0					
ANR	712422	Callee	r_flag_item_set_realname		711485	0					
ANR	712423	Identifier	r_flag_item_set_realname		711485	0					
ANR	712424	ArgumentList	fi		711485	1					
ANR	712425	Argument	fi		711485	0					
ANR	712426	Identifier	fi		711485	0					
ANR	712427	Argument	n		711485	1					
ANR	712428	Identifier	n		711485	0					
ANR	712429	ExpressionStatement	fi -> demangled = ( bool ) ( size_t ) sn . demname	2145:5:62281:62321	711485	1	True				
ANR	712430	AssignmentExpression	fi -> demangled = ( bool ) ( size_t ) sn . demname		711485	0		=			
ANR	712431	PtrMemberAccess	fi -> demangled		711485	0					
ANR	712432	Identifier	fi		711485	0					
ANR	712433	Identifier	demangled		711485	1					
ANR	712434	CastExpression	( bool ) ( size_t ) sn . demname		711485	1					
ANR	712435	CastTarget	bool		711485	0					
ANR	712436	CastExpression	( size_t ) sn . demname		711485	1					
ANR	712437	CastTarget	size_t		711485	0					
ANR	712438	MemberAccess	sn . demname		711485	1					
ANR	712439	Identifier	sn		711485	0					
ANR	712440	Identifier	demname		711485	1					
ANR	712441	ElseStatement	else		711485	0					
ANR	712442	CompoundStatement		125:11:3836:3836	711485	0					
ANR	712443	IfStatement	if ( fn )		711485	0					
ANR	712444	Condition	fn	2147:9:62345:62346	711485	0	True				
ANR	712445	Identifier	fn		711485	0					
ANR	712446	CompoundStatement		126:13:3851:3851	711485	1					
ANR	712447	ExpressionStatement	"eprintf ( ""[Warning] Can't find flag (%s)\\n"" , fn )"	2148:6:62357:62405	711485	0	True				
ANR	712448	CallExpression	"eprintf ( ""[Warning] Can't find flag (%s)\\n"" , fn )"		711485	0					
ANR	712449	Callee	eprintf		711485	0					
ANR	712450	Identifier	eprintf		711485	0					
ANR	712451	ArgumentList	"""[Warning] Can't find flag (%s)\\n"""		711485	1					
ANR	712452	Argument	"""[Warning] Can't find flag (%s)\\n"""		711485	0					
ANR	712453	PrimaryExpression	"""[Warning] Can't find flag (%s)\\n"""		711485	0					
ANR	712454	Argument	fn		711485	1					
ANR	712455	Identifier	fn		711485	0					
ANR	712456	ExpressionStatement	free ( fnp )	2151:4:62424:62434	711485	5	True				
ANR	712457	CallExpression	free ( fnp )		711485	0					
ANR	712458	Callee	free		711485	0					
ANR	712459	Identifier	free		711485	0					
ANR	712460	ArgumentList	fnp		711485	1					
ANR	712461	Argument	fnp		711485	0					
ANR	712462	Identifier	fnp		711485	0					
ANR	712463	IfStatement	if ( sn . demname )		711485	3					
ANR	712464	Condition	sn . demname	2153:7:62448:62457	711485	0	True				
ANR	712465	MemberAccess	sn . demname		711485	0					
ANR	712466	Identifier	sn		711485	0					
ANR	712467	Identifier	demname		711485	1					
ANR	712468	CompoundStatement		132:19:3962:3962	711485	1					
ANR	712469	ExpressionStatement	"r_meta_add ( r -> anal , R_META_TYPE_COMMENT , addr , symbol -> size , sn . demname )"	2154:4:62466:62544	711485	0	True				
ANR	712470	CallExpression	"r_meta_add ( r -> anal , R_META_TYPE_COMMENT , addr , symbol -> size , sn . demname )"		711485	0					
ANR	712471	Callee	r_meta_add		711485	0					
ANR	712472	Identifier	r_meta_add		711485	0					
ANR	712473	ArgumentList	r -> anal		711485	1					
ANR	712474	Argument	r -> anal		711485	0					
ANR	712475	PtrMemberAccess	r -> anal		711485	0					
ANR	712476	Identifier	r		711485	0					
ANR	712477	Identifier	anal		711485	1					
ANR	712478	Argument	R_META_TYPE_COMMENT		711485	1					
ANR	712479	Identifier	R_META_TYPE_COMMENT		711485	0					
ANR	712480	Argument	addr		711485	2					
ANR	712481	Identifier	addr		711485	0					
ANR	712482	Argument	symbol -> size		711485	3					
ANR	712483	PtrMemberAccess	symbol -> size		711485	0					
ANR	712484	Identifier	symbol		711485	0					
ANR	712485	Identifier	size		711485	1					
ANR	712486	Argument	sn . demname		711485	4					
ANR	712487	MemberAccess	sn . demname		711485	0					
ANR	712488	Identifier	sn		711485	0					
ANR	712489	Identifier	demname		711485	1					
ANR	712490	ExpressionStatement	r_flag_space_pop ( r -> flags )	2157:3:62554:62581	711485	4	True				
ANR	712491	CallExpression	r_flag_space_pop ( r -> flags )		711485	0					
ANR	712492	Callee	r_flag_space_pop		711485	0					
ANR	712493	Identifier	r_flag_space_pop		711485	0					
ANR	712494	ArgumentList	r -> flags		711485	1					
ANR	712495	Argument	r -> flags		711485	0					
ANR	712496	PtrMemberAccess	r -> flags		711485	0					
ANR	712497	Identifier	r		711485	0					
ANR	712498	Identifier	flags		711485	1					
ANR	712499	ElseStatement	else		711485	0					
ANR	712500	IfStatement	if ( IS_MODE_JSON ( mode ) )		711485	0					
ANR	712501	Condition	IS_MODE_JSON ( mode )	2158:13:62596:62614	711485	0	True				
ANR	712502	CallExpression	IS_MODE_JSON ( mode )		711485	0					
ANR	712503	Callee	IS_MODE_JSON		711485	0					
ANR	712504	Identifier	IS_MODE_JSON		711485	0					
ANR	712505	ArgumentList	mode		711485	1					
ANR	712506	Argument	mode		711485	0					
ANR	712507	Identifier	mode		711485	0					
ANR	712508	CompoundStatement		138:3:4124:4182	711485	1					
ANR	712509	IdentifierDeclStatement	"char * str = r_str_escape_utf8_for_json ( r_symbol_name , - 1 ) ;"	2159:3:62622:62680	711485	0	True				
ANR	712510	IdentifierDecl	"* str = r_str_escape_utf8_for_json ( r_symbol_name , - 1 )"		711485	0					
ANR	712511	IdentifierDeclType	char *		711485	0					
ANR	712512	Identifier	str		711485	1					
ANR	712513	AssignmentExpression	"* str = r_str_escape_utf8_for_json ( r_symbol_name , - 1 )"		711485	2		=			
ANR	712514	Identifier	str		711485	0					
ANR	712515	CallExpression	"r_str_escape_utf8_for_json ( r_symbol_name , - 1 )"		711485	1					
ANR	712516	Callee	r_str_escape_utf8_for_json		711485	0					
ANR	712517	Identifier	r_str_escape_utf8_for_json		711485	0					
ANR	712518	ArgumentList	r_symbol_name		711485	1					
ANR	712519	Argument	r_symbol_name		711485	0					
ANR	712520	Identifier	r_symbol_name		711485	0					
ANR	712521	Argument	- 1		711485	1					
ANR	712522	UnaryOperationExpression	- 1		711485	0					
ANR	712523	UnaryOperator	-		711485	0					
ANR	712524	PrimaryExpression	1		711485	1					
ANR	712525	Statement	r_cons_printf	2161:3:62735:62747	711485	1	True				
ANR	712526	Statement	(	2161:17:62749:62749	711485	2	True				
ANR	712527	Statement	"""%s{\\""name\\"":\\""%s\\"","""	2161:18:62750:62770	711485	3	True				
ANR	712528	Statement	"""\\""demname\\"":\\""%s\\"","""	2162:4:62776:62796	711485	4	True				
ANR	712529	Statement	"""\\""flagname\\"":\\""%s\\"","""	2163:4:62802:62823	711485	5	True				
ANR	712530	Statement	"""\\""ordinal\\"":%d,"""	2164:4:62829:62845	711485	6	True				
ANR	712531	Statement	"""\\""bind\\"":\\""%s\\"","""	2165:4:62851:62868	711485	7	True				
ANR	712532	Statement	"""\\""size\\"":%d,"""	2166:4:62874:62887	711485	8	True				
ANR	712533	Statement	"""\\""type\\"":\\""%s\\"","""	2167:4:62893:62910	711485	9	True				
ANR	712534	Statement	"""\\""vaddr\\"":%"""	2168:4:62916:62928	711485	10	True				
ANR	712535	Statement	PFMT64d	2168:17:62929:62935	711485	11	True				
ANR	712536	Statement	""","""	2168:24:62936:62938	711485	12	True				
ANR	712537	Statement	"""\\""paddr\\"":%"""	2169:4:62944:62956	711485	13	True				
ANR	712538	Statement	PFMT64d	2169:17:62957:62963	711485	14	True				
ANR	712539	Statement	"""}"""	2169:24:62964:62966	711485	15	True				
ANR	712540	Statement	","	2169:27:62967:62967	711485	16	True				
ANR	712541	Statement	(	2170:4:62973:62973	711485	17	True				
ANR	712542	Statement	(	2170:5:62974:62974	711485	18	True				
ANR	712543	Statement	exponly	2170:6:62975:62981	711485	19	True				
ANR	712544	Statement	&&	2170:14:62983:62984	711485	20	True				
ANR	712545	Statement	firstexp	2170:17:62986:62993	711485	21	True				
ANR	712546	Statement	)	2170:25:62994:62994	711485	22	True				
ANR	712547	Statement	||	2170:27:62996:62997	711485	23	True				
ANR	712548	Statement	printHere	2170:30:62999:63007	711485	24	True				
ANR	712549	Statement	)	2170:39:63008:63008	711485	25	True				
ANR	712550	Statement	?	2170:41:63010:63010	711485	26	True				
ANR	712551	Statement	""""""	2170:43:63012:63013	711485	27	True				
ANR	712552	Statement	:	2170:46:63015:63015	711485	28	True				
ANR	712553	Statement	(	2170:48:63017:63017	711485	29	True				
ANR	712554	Statement	iter	2170:49:63018:63021	711485	30	True				
ANR	712555	Statement	->	2170:53:63022:63023	711485	31	True				
ANR	712556	Statement	p	2170:55:63024:63024	711485	32	True				
ANR	712557	Statement	?	2170:57:63026:63026	711485	33	True				
ANR	712558	Statement	""","""	2170:59:63028:63030	711485	34	True				
ANR	712559	Statement	:	2170:63:63032:63032	711485	35	True				
ANR	712560	Statement	""""""	2170:65:63034:63035	711485	36	True				
ANR	712561	Statement	)	2170:67:63036:63036	711485	37	True				
ANR	712562	Statement	","	2170:68:63037:63037	711485	38	True				
ANR	712563	Statement	str	2171:4:63043:63045	711485	39	True				
ANR	712564	Statement	","	2171:7:63046:63046	711485	40	True				
ANR	712565	Statement	sn	2172:4:63052:63053	711485	41	True				
ANR	712566	Statement	.	2172:6:63054:63054	711485	42	True				
ANR	712567	Statement	demname	2172:7:63055:63061	711485	43	True				
ANR	712568	Statement	?	2172:14:63062:63062	711485	44	True				
ANR	712569	Statement	sn	2172:16:63064:63065	711485	45	True				
ANR	712570	Statement	.	2172:18:63066:63066	711485	46	True				
ANR	712571	Label	demname :	2172:19:63067:63074	711485	47	True				
ANR	712572	Identifier	demname		711485	0					
ANR	712573	Statement	""""""	2172:28:63076:63077	711485	48	True				
ANR	712574	Statement	","	2172:30:63078:63078	711485	49	True				
ANR	712575	Statement	sn	2173:4:63084:63085	711485	50	True				
ANR	712576	Statement	.	2173:6:63086:63086	711485	51	True				
ANR	712577	Statement	nameflag	2173:7:63087:63094	711485	52	True				
ANR	712578	Statement	","	2173:15:63095:63095	711485	53	True				
ANR	712579	Statement	symbol	2174:4:63101:63106	711485	54	True				
ANR	712580	Statement	->	2174:10:63107:63108	711485	55	True				
ANR	712581	Statement	ordinal	2174:12:63109:63115	711485	56	True				
ANR	712582	Statement	","	2174:19:63116:63116	711485	57	True				
ANR	712583	Statement	symbol	2175:4:63122:63127	711485	58	True				
ANR	712584	Statement	->	2175:10:63128:63129	711485	59	True				
ANR	712585	Statement	bind	2175:12:63130:63133	711485	60	True				
ANR	712586	Statement	","	2175:16:63134:63134	711485	61	True				
ANR	712587	Statement	(	2176:4:63140:63140	711485	62	True				
ANR	712588	Statement	int	2176:5:63141:63143	711485	63	True				
ANR	712589	Statement	)	2176:8:63144:63144	711485	64	True				
ANR	712590	Statement	symbol	2176:9:63145:63150	711485	65	True				
ANR	712591	Statement	->	2176:15:63151:63152	711485	66	True				
ANR	712592	Statement	size	2176:17:63153:63156	711485	67	True				
ANR	712593	Statement	","	2176:21:63157:63157	711485	68	True				
ANR	712594	Statement	symbol	2177:4:63163:63168	711485	69	True				
ANR	712595	Statement	->	2177:10:63169:63170	711485	70	True				
ANR	712596	Statement	type	2177:12:63171:63174	711485	71	True				
ANR	712597	Statement	","	2177:16:63175:63175	711485	72	True				
ANR	712598	Statement	(	2178:4:63181:63181	711485	73	True				
ANR	712599	Statement	ut64	2178:5:63182:63185	711485	74	True				
ANR	712600	Statement	)	2178:9:63186:63186	711485	75	True				
ANR	712601	Statement	addr	2178:10:63187:63190	711485	76	True				
ANR	712602	Statement	","	2178:14:63191:63191	711485	77	True				
ANR	712603	Statement	(	2178:16:63193:63193	711485	78	True				
ANR	712604	Statement	ut64	2178:17:63194:63197	711485	79	True				
ANR	712605	Statement	)	2178:21:63198:63198	711485	80	True				
ANR	712606	Statement	symbol	2178:22:63199:63204	711485	81	True				
ANR	712607	Statement	->	2178:28:63205:63206	711485	82	True				
ANR	712608	Statement	paddr	2178:30:63207:63211	711485	83	True				
ANR	712609	Statement	)	2178:35:63212:63212	711485	84	True				
ANR	712610	ExpressionStatement		2178:36:63213:63213	711485	85	True				
ANR	712611	ExpressionStatement	free ( str )	2179:3:63218:63228	711485	86	True				
ANR	712612	CallExpression	free ( str )		711485	0					
ANR	712613	Callee	free		711485	0					
ANR	712614	Identifier	free		711485	0					
ANR	712615	ArgumentList	str		711485	1					
ANR	712616	Argument	str		711485	0					
ANR	712617	Identifier	str		711485	0					
ANR	712618	ElseStatement	else		711485	0					
ANR	712619	IfStatement	if ( IS_MODE_SIMPLE ( mode ) )		711485	0					
ANR	712620	Condition	IS_MODE_SIMPLE ( mode )	2180:13:63243:63263	711485	0	True				
ANR	712621	CallExpression	IS_MODE_SIMPLE ( mode )		711485	0					
ANR	712622	Callee	IS_MODE_SIMPLE		711485	0					
ANR	712623	Identifier	IS_MODE_SIMPLE		711485	0					
ANR	712624	ArgumentList	mode		711485	1					
ANR	712625	Argument	mode		711485	0					
ANR	712626	Identifier	mode		711485	0					
ANR	712627	CompoundStatement		160:3:4773:4829	711485	1					
ANR	712628	IdentifierDeclStatement	const char * name = sn . demname ? sn . demname : r_symbol_name ;	2181:3:63271:63327	711485	0	True				
ANR	712629	IdentifierDecl	* name = sn . demname ? sn . demname : r_symbol_name		711485	0					
ANR	712630	IdentifierDeclType	const char *		711485	0					
ANR	712631	Identifier	name		711485	1					
ANR	712632	AssignmentExpression	* name = sn . demname ? sn . demname : r_symbol_name		711485	2		=			
ANR	712633	Identifier	name		711485	0					
ANR	712634	ConditionalExpression	sn . demname ? sn . demname : r_symbol_name		711485	1					
ANR	712635	Condition	sn . demname		711485	0					
ANR	712636	MemberAccess	sn . demname		711485	0					
ANR	712637	Identifier	sn		711485	0					
ANR	712638	Identifier	demname		711485	1					
ANR	712639	MemberAccess	sn . demname		711485	1					
ANR	712640	Identifier	sn		711485	0					
ANR	712641	Identifier	demname		711485	1					
ANR	712642	Identifier	r_symbol_name		711485	2					
ANR	712643	Statement	r_cons_printf	2182:3:63332:63344	711485	1	True				
ANR	712644	Statement	(	2182:17:63346:63346	711485	2	True				
ANR	712645	Statement	"""0x%08"""	2182:18:63347:63353	711485	3	True				
ANR	712646	Statement	PFMT64x	2182:25:63354:63360	711485	4	True				
ANR	712647	Statement	""" %d %s\\n"""	2182:32:63361:63370	711485	5	True				
ANR	712648	Statement	","	2182:42:63371:63371	711485	6	True				
ANR	712649	Statement	addr	2183:4:63377:63380	711485	7	True				
ANR	712650	Statement	","	2183:8:63381:63381	711485	8	True				
ANR	712651	Statement	(	2183:10:63383:63383	711485	9	True				
ANR	712652	Statement	int	2183:11:63384:63386	711485	10	True				
ANR	712653	Statement	)	2183:14:63387:63387	711485	11	True				
ANR	712654	Statement	symbol	2183:15:63388:63393	711485	12	True				
ANR	712655	Statement	->	2183:21:63394:63395	711485	13	True				
ANR	712656	Statement	size	2183:23:63396:63399	711485	14	True				
ANR	712657	Statement	","	2183:27:63400:63400	711485	15	True				
ANR	712658	Statement	name	2183:29:63402:63405	711485	16	True				
ANR	712659	Statement	)	2183:33:63406:63406	711485	17	True				
ANR	712660	ExpressionStatement		2183:34:63407:63407	711485	18	True				
ANR	712661	ElseStatement	else		711485	0					
ANR	712662	IfStatement	if ( IS_MODE_SIMPLEST ( mode ) )		711485	0					
ANR	712663	Condition	IS_MODE_SIMPLEST ( mode )	2184:13:63422:63444	711485	0	True				
ANR	712664	CallExpression	IS_MODE_SIMPLEST ( mode )		711485	0					
ANR	712665	Callee	IS_MODE_SIMPLEST		711485	0					
ANR	712666	Identifier	IS_MODE_SIMPLEST		711485	0					
ANR	712667	ArgumentList	mode		711485	1					
ANR	712668	Argument	mode		711485	0					
ANR	712669	Identifier	mode		711485	0					
ANR	712670	CompoundStatement		164:3:4954:5010	711485	1					
ANR	712671	IdentifierDeclStatement	const char * name = sn . demname ? sn . demname : r_symbol_name ;	2185:3:63452:63508	711485	0	True				
ANR	712672	IdentifierDecl	* name = sn . demname ? sn . demname : r_symbol_name		711485	0					
ANR	712673	IdentifierDeclType	const char *		711485	0					
ANR	712674	Identifier	name		711485	1					
ANR	712675	AssignmentExpression	* name = sn . demname ? sn . demname : r_symbol_name		711485	2		=			
ANR	712676	Identifier	name		711485	0					
ANR	712677	ConditionalExpression	sn . demname ? sn . demname : r_symbol_name		711485	1					
ANR	712678	Condition	sn . demname		711485	0					
ANR	712679	MemberAccess	sn . demname		711485	0					
ANR	712680	Identifier	sn		711485	0					
ANR	712681	Identifier	demname		711485	1					
ANR	712682	MemberAccess	sn . demname		711485	1					
ANR	712683	Identifier	sn		711485	0					
ANR	712684	Identifier	demname		711485	1					
ANR	712685	Identifier	r_symbol_name		711485	2					
ANR	712686	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , name )"	2186:3:63513:63541	711485	1	True				
ANR	712687	CallExpression	"r_cons_printf ( ""%s\\n"" , name )"		711485	0					
ANR	712688	Callee	r_cons_printf		711485	0					
ANR	712689	Identifier	r_cons_printf		711485	0					
ANR	712690	ArgumentList	"""%s\\n"""		711485	1					
ANR	712691	Argument	"""%s\\n"""		711485	0					
ANR	712692	PrimaryExpression	"""%s\\n"""		711485	0					
ANR	712693	Argument	name		711485	1					
ANR	712694	Identifier	name		711485	0					
ANR	712695	ElseStatement	else		711485	0					
ANR	712696	IfStatement	if ( IS_MODE_RAD ( mode ) )		711485	0					
ANR	712697	Condition	IS_MODE_RAD ( mode )	2187:13:63556:63573	711485	0	True				
ANR	712698	CallExpression	IS_MODE_RAD ( mode )		711485	0					
ANR	712699	Callee	IS_MODE_RAD		711485	0					
ANR	712700	Identifier	IS_MODE_RAD		711485	0					
ANR	712701	ArgumentList	mode		711485	1					
ANR	712702	Argument	mode		711485	0					
ANR	712703	Identifier	mode		711485	0					
ANR	712704	CompoundStatement		174:3:5304:5360	711485	1					
ANR	712705	IfStatement	if ( is_special_symbol ( symbol ) )		711485	0					
ANR	712706	Condition	is_special_symbol ( symbol )	2190:7:63704:63729	711485	0	True				
ANR	712707	CallExpression	is_special_symbol ( symbol )		711485	0					
ANR	712708	Callee	is_special_symbol		711485	0					
ANR	712709	Identifier	is_special_symbol		711485	0					
ANR	712710	ArgumentList	symbol		711485	1					
ANR	712711	Argument	symbol		711485	0					
ANR	712712	Identifier	symbol		711485	0					
ANR	712713	CompoundStatement		169:35:5234:5234	711485	1					
ANR	712714	GotoStatement	goto next ;	2191:4:63738:63747	711485	0	True				
ANR	712715	Identifier	next		711485	0					
ANR	712716	IdentifierDeclStatement	RBinFile * binfile ;	2193:3:63757:63774	711485	1	True				
ANR	712717	IdentifierDecl	* binfile		711485	0					
ANR	712718	IdentifierDeclType	RBinFile *		711485	0					
ANR	712719	Identifier	binfile		711485	1					
ANR	712720	IdentifierDeclStatement	RBinPlugin * plugin ;	2194:3:63779:63797	711485	2	True				
ANR	712721	IdentifierDecl	* plugin		711485	0					
ANR	712722	IdentifierDeclType	RBinPlugin *		711485	0					
ANR	712723	Identifier	plugin		711485	1					
ANR	712724	IdentifierDeclStatement	const char * name = sn . demname ? sn . demname : r_symbol_name ;	2195:3:63802:63858	711485	3	True				
ANR	712725	IdentifierDecl	* name = sn . demname ? sn . demname : r_symbol_name		711485	0					
ANR	712726	IdentifierDeclType	const char *		711485	0					
ANR	712727	Identifier	name		711485	1					
ANR	712728	AssignmentExpression	* name = sn . demname ? sn . demname : r_symbol_name		711485	2		=			
ANR	712729	Identifier	name		711485	0					
ANR	712730	ConditionalExpression	sn . demname ? sn . demname : r_symbol_name		711485	1					
ANR	712731	Condition	sn . demname		711485	0					
ANR	712732	MemberAccess	sn . demname		711485	0					
ANR	712733	Identifier	sn		711485	0					
ANR	712734	Identifier	demname		711485	1					
ANR	712735	MemberAccess	sn . demname		711485	1					
ANR	712736	Identifier	sn		711485	0					
ANR	712737	Identifier	demname		711485	1					
ANR	712738	Identifier	r_symbol_name		711485	2					
ANR	712739	IfStatement	if ( ! name )		711485	4					
ANR	712740	Condition	! name	2196:7:63867:63871	711485	0	True				
ANR	712741	UnaryOperationExpression	! name		711485	0					
ANR	712742	UnaryOperator	!		711485	0					
ANR	712743	Identifier	name		711485	1					
ANR	712744	CompoundStatement		175:14:5376:5376	711485	1					
ANR	712745	GotoStatement	goto next ;	2197:4:63880:63889	711485	0	True				
ANR	712746	Identifier	next		711485	0					
ANR	712747	IfStatement	"if ( ! strncmp ( name , ""imp."" , 4 ) )"		711485	5					
ANR	712748	Condition	"! strncmp ( name , ""imp."" , 4 )"	2199:7:63903:63928	711485	0	True				
ANR	712749	UnaryOperationExpression	"! strncmp ( name , ""imp."" , 4 )"		711485	0					
ANR	712750	UnaryOperator	!		711485	0					
ANR	712751	CallExpression	"strncmp ( name , ""imp."" , 4 )"		711485	1					
ANR	712752	Callee	strncmp		711485	0					
ANR	712753	Identifier	strncmp		711485	0					
ANR	712754	ArgumentList	name		711485	1					
ANR	712755	Argument	name		711485	0					
ANR	712756	Identifier	name		711485	0					
ANR	712757	Argument	"""imp."""		711485	1					
ANR	712758	PrimaryExpression	"""imp."""		711485	0					
ANR	712759	Argument	4		711485	2					
ANR	712760	PrimaryExpression	4		711485	0					
ANR	712761	CompoundStatement		178:35:5433:5433	711485	1					
ANR	712762	IfStatement	if ( lastfs != 'i' )		711485	0					
ANR	712763	Condition	lastfs != 'i'	2200:8:63941:63953	711485	0	True				
ANR	712764	EqualityExpression	lastfs != 'i'		711485	0		!=			
ANR	712765	Identifier	lastfs		711485	0					
ANR	712766	PrimaryExpression	'i'		711485	1					
ANR	712767	CompoundStatement		179:23:5458:5458	711485	1					
ANR	712768	ExpressionStatement	"r_cons_printf ( ""fs imports\\n"" )"	2201:5:63963:63993	711485	0	True				
ANR	712769	CallExpression	"r_cons_printf ( ""fs imports\\n"" )"		711485	0					
ANR	712770	Callee	r_cons_printf		711485	0					
ANR	712771	Identifier	r_cons_printf		711485	0					
ANR	712772	ArgumentList	"""fs imports\\n"""		711485	1					
ANR	712773	Argument	"""fs imports\\n"""		711485	0					
ANR	712774	PrimaryExpression	"""fs imports\\n"""		711485	0					
ANR	712775	ExpressionStatement	lastfs = 'i'	2203:4:64005:64017	711485	1	True				
ANR	712776	AssignmentExpression	lastfs = 'i'		711485	0		=			
ANR	712777	Identifier	lastfs		711485	0					
ANR	712778	PrimaryExpression	'i'		711485	1					
ANR	712779	ElseStatement	else		711485	0					
ANR	712780	CompoundStatement		183:10:5531:5531	711485	0					
ANR	712781	IfStatement	if ( lastfs != 's' )		711485	0					
ANR	712782	Condition	lastfs != 's'	2205:8:64039:64051	711485	0	True				
ANR	712783	EqualityExpression	lastfs != 's'		711485	0		!=			
ANR	712784	Identifier	lastfs		711485	0					
ANR	712785	PrimaryExpression	's'		711485	1					
ANR	712786	CompoundStatement		185:5:5563:5609	711485	1					
ANR	712787	IdentifierDeclStatement	"const char * fs = exponly ? ""exports"" : ""symbols"" ;"	2206:5:64061:64107	711485	0	True				
ANR	712788	IdentifierDecl	"* fs = exponly ? ""exports"" : ""symbols"""		711485	0					
ANR	712789	IdentifierDeclType	const char *		711485	0					
ANR	712790	Identifier	fs		711485	1					
ANR	712791	AssignmentExpression	"* fs = exponly ? ""exports"" : ""symbols"""		711485	2		=			
ANR	712792	Identifier	fs		711485	0					
ANR	712793	ConditionalExpression	"exponly ? ""exports"" : ""symbols"""		711485	1					
ANR	712794	Condition	exponly		711485	0					
ANR	712795	Identifier	exponly		711485	0					
ANR	712796	PrimaryExpression	"""exports"""		711485	1					
ANR	712797	PrimaryExpression	"""symbols"""		711485	2					
ANR	712798	ExpressionStatement	"r_cons_printf ( ""fs %s\\n"" , fs )"	2207:5:64114:64143	711485	1	True				
ANR	712799	CallExpression	"r_cons_printf ( ""fs %s\\n"" , fs )"		711485	0					
ANR	712800	Callee	r_cons_printf		711485	0					
ANR	712801	Identifier	r_cons_printf		711485	0					
ANR	712802	ArgumentList	"""fs %s\\n"""		711485	1					
ANR	712803	Argument	"""fs %s\\n"""		711485	0					
ANR	712804	PrimaryExpression	"""fs %s\\n"""		711485	0					
ANR	712805	Argument	fs		711485	1					
ANR	712806	Identifier	fs		711485	0					
ANR	712807	ExpressionStatement	lastfs = 's'	2209:4:64155:64167	711485	1	True				
ANR	712808	AssignmentExpression	lastfs = 's'		711485	0		=			
ANR	712809	Identifier	lastfs		711485	0					
ANR	712810	PrimaryExpression	's'		711485	1					
ANR	712811	IfStatement	if ( r -> bin -> prefix || * name )		711485	6					
ANR	712812	Condition	r -> bin -> prefix || * name	2211:7:64181:64203	711485	0	True				
ANR	712813	OrExpression	r -> bin -> prefix || * name		711485	0		||			
ANR	712814	PtrMemberAccess	r -> bin -> prefix		711485	0					
ANR	712815	PtrMemberAccess	r -> bin		711485	0					
ANR	712816	Identifier	r		711485	0					
ANR	712817	Identifier	bin		711485	1					
ANR	712818	Identifier	prefix		711485	1					
ANR	712819	UnaryOperationExpression	* name		711485	1					
ANR	712820	UnaryOperator	*		711485	0					
ANR	712821	Identifier	name		711485	1					
ANR	712822	CompoundStatement		191:4:5752:5829	711485	1					
ANR	712823	IdentifierDeclStatement	"char * flagname = construct_symbol_flagname ( ""sym"" , name , MAXFLAG_LEN_DEFAULT ) ;"	2212:4:64250:64327	711485	0	True				
ANR	712824	IdentifierDecl	"* flagname = construct_symbol_flagname ( ""sym"" , name , MAXFLAG_LEN_DEFAULT )"		711485	0					
ANR	712825	IdentifierDeclType	char *		711485	0					
ANR	712826	Identifier	flagname		711485	1					
ANR	712827	AssignmentExpression	"* flagname = construct_symbol_flagname ( ""sym"" , name , MAXFLAG_LEN_DEFAULT )"		711485	2		=			
ANR	712828	Identifier	flagname		711485	0					
ANR	712829	CallExpression	"construct_symbol_flagname ( ""sym"" , name , MAXFLAG_LEN_DEFAULT )"		711485	1					
ANR	712830	Callee	construct_symbol_flagname		711485	0					
ANR	712831	Identifier	construct_symbol_flagname		711485	0					
ANR	712832	ArgumentList	"""sym"""		711485	1					
ANR	712833	Argument	"""sym"""		711485	0					
ANR	712834	PrimaryExpression	"""sym"""		711485	0					
ANR	712835	Argument	name		711485	1					
ANR	712836	Identifier	name		711485	0					
ANR	712837	Argument	MAXFLAG_LEN_DEFAULT		711485	2					
ANR	712838	Identifier	MAXFLAG_LEN_DEFAULT		711485	0					
ANR	712839	IfStatement	if ( ! flagname )		711485	1					
ANR	712840	Condition	! flagname	2213:8:64337:64345	711485	0	True				
ANR	712841	UnaryOperationExpression	! flagname		711485	0					
ANR	712842	UnaryOperator	!		711485	0					
ANR	712843	Identifier	flagname		711485	1					
ANR	712844	CompoundStatement		192:19:5850:5850	711485	1					
ANR	712845	GotoStatement	goto next ;	2214:5:64355:64364	711485	0	True				
ANR	712846	Identifier	next		711485	0					
ANR	712847	Statement	r_cons_printf	2216:4:64376:64388	711485	2	True				
ANR	712848	Statement	(	2216:18:64390:64390	711485	3	True				
ANR	712849	Statement	"""\\""f %s%s%s %u 0x%08"""	2216:19:64391:64411	711485	4	True				
ANR	712850	Statement	PFMT64x	2216:41:64413:64419	711485	5	True				
ANR	712851	Statement	"""\\""\\n"""	2216:49:64421:64426	711485	6	True				
ANR	712852	Statement	","	2216:55:64427:64427	711485	7	True				
ANR	712853	Statement	r	2217:5:64434:64434	711485	8	True				
ANR	712854	Statement	->	2217:6:64435:64436	711485	9	True				
ANR	712855	Statement	bin	2217:8:64437:64439	711485	10	True				
ANR	712856	Statement	->	2217:11:64440:64441	711485	11	True				
ANR	712857	Statement	prefix	2217:13:64442:64447	711485	12	True				
ANR	712858	Statement	?	2217:20:64449:64449	711485	13	True				
ANR	712859	Statement	r	2217:22:64451:64451	711485	14	True				
ANR	712860	Statement	->	2217:23:64452:64453	711485	15	True				
ANR	712861	Statement	bin	2217:25:64454:64456	711485	16	True				
ANR	712862	Statement	->	2217:28:64457:64458	711485	17	True				
ANR	712863	Label	prefix :	2217:30:64459:64466	711485	18	True				
ANR	712864	Identifier	prefix		711485	0					
ANR	712865	Statement	""""""	2217:39:64468:64469	711485	19	True				
ANR	712866	Statement	","	2217:41:64470:64470	711485	20	True				
ANR	712867	Statement	r	2217:43:64472:64472	711485	21	True				
ANR	712868	Statement	->	2217:44:64473:64474	711485	22	True				
ANR	712869	Statement	bin	2217:46:64475:64477	711485	23	True				
ANR	712870	Statement	->	2217:49:64478:64479	711485	24	True				
ANR	712871	Statement	prefix	2217:51:64480:64485	711485	25	True				
ANR	712872	Statement	?	2217:58:64487:64487	711485	26	True				
ANR	712873	Statement	"""."""	2217:60:64489:64491	711485	27	True				
ANR	712874	Statement	:	2217:64:64493:64493	711485	28	True				
ANR	712875	Statement	""""""	2217:66:64495:64496	711485	29	True				
ANR	712876	Statement	","	2217:68:64497:64497	711485	30	True				
ANR	712877	Statement	flagname	2218:5:64504:64511	711485	31	True				
ANR	712878	Statement	","	2218:13:64512:64512	711485	32	True				
ANR	712879	Statement	symbol	2218:15:64514:64519	711485	33	True				
ANR	712880	Statement	->	2218:21:64520:64521	711485	34	True				
ANR	712881	Statement	size	2218:23:64522:64525	711485	35	True				
ANR	712882	Statement	","	2218:27:64526:64526	711485	36	True				
ANR	712883	Statement	addr	2218:29:64528:64531	711485	37	True				
ANR	712884	Statement	)	2218:33:64532:64532	711485	38	True				
ANR	712885	ExpressionStatement		2218:34:64533:64533	711485	39	True				
ANR	712886	ExpressionStatement	free ( flagname )	2219:4:64539:64554	711485	40	True				
ANR	712887	CallExpression	free ( flagname )		711485	0					
ANR	712888	Callee	free		711485	0					
ANR	712889	Identifier	free		711485	0					
ANR	712890	ArgumentList	flagname		711485	1					
ANR	712891	Argument	flagname		711485	0					
ANR	712892	Identifier	flagname		711485	0					
ANR	712893	ExpressionStatement	binfile = r_bin_cur ( r -> bin )	2221:3:64564:64592	711485	7	True				
ANR	712894	AssignmentExpression	binfile = r_bin_cur ( r -> bin )		711485	0		=			
ANR	712895	Identifier	binfile		711485	0					
ANR	712896	CallExpression	r_bin_cur ( r -> bin )		711485	1					
ANR	712897	Callee	r_bin_cur		711485	0					
ANR	712898	Identifier	r_bin_cur		711485	0					
ANR	712899	ArgumentList	r -> bin		711485	1					
ANR	712900	Argument	r -> bin		711485	0					
ANR	712901	PtrMemberAccess	r -> bin		711485	0					
ANR	712902	Identifier	r		711485	0					
ANR	712903	Identifier	bin		711485	1					
ANR	712904	ExpressionStatement	plugin = r_bin_file_cur_plugin ( binfile )	2222:3:64597:64637	711485	8	True				
ANR	712905	AssignmentExpression	plugin = r_bin_file_cur_plugin ( binfile )		711485	0		=			
ANR	712906	Identifier	plugin		711485	0					
ANR	712907	CallExpression	r_bin_file_cur_plugin ( binfile )		711485	1					
ANR	712908	Callee	r_bin_file_cur_plugin		711485	0					
ANR	712909	Identifier	r_bin_file_cur_plugin		711485	0					
ANR	712910	ArgumentList	binfile		711485	1					
ANR	712911	Argument	binfile		711485	0					
ANR	712912	Identifier	binfile		711485	0					
ANR	712913	IfStatement	if ( plugin && plugin -> name )		711485	9					
ANR	712914	Condition	plugin && plugin -> name	2223:7:64646:64667	711485	0	True				
ANR	712915	AndExpression	plugin && plugin -> name		711485	0		&&			
ANR	712916	Identifier	plugin		711485	0					
ANR	712917	PtrMemberAccess	plugin -> name		711485	1					
ANR	712918	Identifier	plugin		711485	0					
ANR	712919	Identifier	name		711485	1					
ANR	712920	CompoundStatement		202:31:6172:6172	711485	1					
ANR	712921	IfStatement	"if ( r_str_startswith ( plugin -> name , ""pe"" ) )"		711485	0					
ANR	712922	Condition	"r_str_startswith ( plugin -> name , ""pe"" )"	2224:8:64680:64716	711485	0	True				
ANR	712923	CallExpression	"r_str_startswith ( plugin -> name , ""pe"" )"		711485	0					
ANR	712924	Callee	r_str_startswith		711485	0					
ANR	712925	Identifier	r_str_startswith		711485	0					
ANR	712926	ArgumentList	plugin -> name		711485	1					
ANR	712927	Argument	plugin -> name		711485	0					
ANR	712928	PtrMemberAccess	plugin -> name		711485	0					
ANR	712929	Identifier	plugin		711485	0					
ANR	712930	Identifier	name		711485	1					
ANR	712931	Argument	"""pe"""		711485	1					
ANR	712932	PrimaryExpression	"""pe"""		711485	0					
ANR	712933	CompoundStatement		205:5:6272:6306	711485	1					
ANR	712934	IdentifierDeclStatement	char * module = strdup ( r_symbol_name ) ;	2225:5:64726:64763	711485	0	True				
ANR	712935	IdentifierDecl	* module = strdup ( r_symbol_name )		711485	0					
ANR	712936	IdentifierDeclType	char *		711485	0					
ANR	712937	Identifier	module		711485	1					
ANR	712938	AssignmentExpression	* module = strdup ( r_symbol_name )		711485	2		=			
ANR	712939	Identifier	module		711485	0					
ANR	712940	CallExpression	strdup ( r_symbol_name )		711485	1					
ANR	712941	Callee	strdup		711485	0					
ANR	712942	Identifier	strdup		711485	0					
ANR	712943	ArgumentList	r_symbol_name		711485	1					
ANR	712944	Argument	r_symbol_name		711485	0					
ANR	712945	Identifier	r_symbol_name		711485	0					
ANR	712946	IdentifierDeclStatement	"char * p = strstr ( module , "".dll_"" ) ;"	2226:5:64770:64804	711485	1	True				
ANR	712947	IdentifierDecl	"* p = strstr ( module , "".dll_"" )"		711485	0					
ANR	712948	IdentifierDeclType	char *		711485	0					
ANR	712949	Identifier	p		711485	1					
ANR	712950	AssignmentExpression	"* p = strstr ( module , "".dll_"" )"		711485	2		=			
ANR	712951	Identifier	p		711485	0					
ANR	712952	CallExpression	"strstr ( module , "".dll_"" )"		711485	1					
ANR	712953	Callee	strstr		711485	0					
ANR	712954	Identifier	strstr		711485	0					
ANR	712955	ArgumentList	module		711485	1					
ANR	712956	Argument	module		711485	0					
ANR	712957	Identifier	module		711485	0					
ANR	712958	Argument	""".dll_"""		711485	1					
ANR	712959	PrimaryExpression	""".dll_"""		711485	0					
ANR	712960	IfStatement	"if ( p && strstr ( module , ""imp."" ) )"		711485	2					
ANR	712961	Condition	"p && strstr ( module , ""imp."" )"	2227:9:64815:64842	711485	0	True				
ANR	712962	AndExpression	"p && strstr ( module , ""imp."" )"		711485	0		&&			
ANR	712963	Identifier	p		711485	0					
ANR	712964	CallExpression	"strstr ( module , ""imp."" )"		711485	1					
ANR	712965	Callee	strstr		711485	0					
ANR	712966	Identifier	strstr		711485	0					
ANR	712967	ArgumentList	module		711485	1					
ANR	712968	Argument	module		711485	0					
ANR	712969	Identifier	module		711485	0					
ANR	712970	Argument	"""imp."""		711485	1					
ANR	712971	PrimaryExpression	"""imp."""		711485	0					
ANR	712972	CompoundStatement		208:6:6400:6432	711485	1					
ANR	712973	IdentifierDeclStatement	char * symname = __filterShell ( p + 5 ) ;	2228:6:64853:64890	711485	0	True				
ANR	712974	IdentifierDecl	* symname = __filterShell ( p + 5 )		711485	0					
ANR	712975	IdentifierDeclType	char *		711485	0					
ANR	712976	Identifier	symname		711485	1					
ANR	712977	AssignmentExpression	* symname = __filterShell ( p + 5 )		711485	2		=			
ANR	712978	Identifier	symname		711485	0					
ANR	712979	CallExpression	__filterShell ( p + 5 )		711485	1					
ANR	712980	Callee	__filterShell		711485	0					
ANR	712981	Identifier	__filterShell		711485	0					
ANR	712982	ArgumentList	p + 5		711485	1					
ANR	712983	Argument	p + 5		711485	0					
ANR	712984	AdditiveExpression	p + 5		711485	0		+			
ANR	712985	Identifier	p		711485	0					
ANR	712986	PrimaryExpression	5		711485	1					
ANR	712987	IdentifierDeclStatement	char * m = __filterShell ( module ) ;	2229:6:64898:64930	711485	1	True				
ANR	712988	IdentifierDecl	* m = __filterShell ( module )		711485	0					
ANR	712989	IdentifierDeclType	char *		711485	0					
ANR	712990	Identifier	m		711485	1					
ANR	712991	AssignmentExpression	* m = __filterShell ( module )		711485	2		=			
ANR	712992	Identifier	m		711485	0					
ANR	712993	CallExpression	__filterShell ( module )		711485	1					
ANR	712994	Callee	__filterShell		711485	0					
ANR	712995	Identifier	__filterShell		711485	0					
ANR	712996	ArgumentList	module		711485	1					
ANR	712997	Argument	module		711485	0					
ANR	712998	Identifier	module		711485	0					
ANR	712999	ExpressionStatement	* p = 0	2230:6:64938:64944	711485	2	True				
ANR	713000	AssignmentExpression	* p = 0		711485	0		=			
ANR	713001	UnaryOperationExpression	* p		711485	0					
ANR	713002	UnaryOperator	*		711485	0					
ANR	713003	Identifier	p		711485	1					
ANR	713004	PrimaryExpression	0		711485	1					
ANR	713005	IfStatement	if ( r -> bin -> prefix )		711485	3					
ANR	713006	Condition	r -> bin -> prefix	2231:10:64956:64969	711485	0	True				
ANR	713007	PtrMemberAccess	r -> bin -> prefix		711485	0					
ANR	713008	PtrMemberAccess	r -> bin		711485	0					
ANR	713009	Identifier	r		711485	0					
ANR	713010	Identifier	bin		711485	1					
ANR	713011	Identifier	prefix		711485	1					
ANR	713012	CompoundStatement		210:26:6474:6474	711485	1					
ANR	713013	ExpressionStatement	"r_cons_printf ( ""\\""k bin/pe/%s/%d=%s.%s\\""\\n"" , module , symbol -> ordinal , r -> bin -> prefix , symname )"	2232:7:64981:65083	711485	0	True				
ANR	713014	CallExpression	"r_cons_printf ( ""\\""k bin/pe/%s/%d=%s.%s\\""\\n"" , module , symbol -> ordinal , r -> bin -> prefix , symname )"		711485	0					
ANR	713015	Callee	r_cons_printf		711485	0					
ANR	713016	Identifier	r_cons_printf		711485	0					
ANR	713017	ArgumentList	"""\\""k bin/pe/%s/%d=%s.%s\\""\\n"""		711485	1					
ANR	713018	Argument	"""\\""k bin/pe/%s/%d=%s.%s\\""\\n"""		711485	0					
ANR	713019	PrimaryExpression	"""\\""k bin/pe/%s/%d=%s.%s\\""\\n"""		711485	0					
ANR	713020	Argument	module		711485	1					
ANR	713021	Identifier	module		711485	0					
ANR	713022	Argument	symbol -> ordinal		711485	2					
ANR	713023	PtrMemberAccess	symbol -> ordinal		711485	0					
ANR	713024	Identifier	symbol		711485	0					
ANR	713025	Identifier	ordinal		711485	1					
ANR	713026	Argument	r -> bin -> prefix		711485	3					
ANR	713027	PtrMemberAccess	r -> bin -> prefix		711485	0					
ANR	713028	PtrMemberAccess	r -> bin		711485	0					
ANR	713029	Identifier	r		711485	0					
ANR	713030	Identifier	bin		711485	1					
ANR	713031	Identifier	prefix		711485	1					
ANR	713032	Argument	symname		711485	4					
ANR	713033	Identifier	symname		711485	0					
ANR	713034	ElseStatement	else		711485	0					
ANR	713035	CompoundStatement		213:13:6600:6600	711485	0					
ANR	713036	ExpressionStatement	"r_cons_printf ( ""\\""k bin/pe/%s/%d=%s\\""\\n"" , module , symbol -> ordinal , symname )"	2235:7:65107:65190	711485	0	True				
ANR	713037	CallExpression	"r_cons_printf ( ""\\""k bin/pe/%s/%d=%s\\""\\n"" , module , symbol -> ordinal , symname )"		711485	0					
ANR	713038	Callee	r_cons_printf		711485	0					
ANR	713039	Identifier	r_cons_printf		711485	0					
ANR	713040	ArgumentList	"""\\""k bin/pe/%s/%d=%s\\""\\n"""		711485	1					
ANR	713041	Argument	"""\\""k bin/pe/%s/%d=%s\\""\\n"""		711485	0					
ANR	713042	PrimaryExpression	"""\\""k bin/pe/%s/%d=%s\\""\\n"""		711485	0					
ANR	713043	Argument	module		711485	1					
ANR	713044	Identifier	module		711485	0					
ANR	713045	Argument	symbol -> ordinal		711485	2					
ANR	713046	PtrMemberAccess	symbol -> ordinal		711485	0					
ANR	713047	Identifier	symbol		711485	0					
ANR	713048	Identifier	ordinal		711485	1					
ANR	713049	Argument	symname		711485	3					
ANR	713050	Identifier	symname		711485	0					
ANR	713051	ExpressionStatement	free ( symname )	2238:6:65206:65220	711485	4	True				
ANR	713052	CallExpression	free ( symname )		711485	0					
ANR	713053	Callee	free		711485	0					
ANR	713054	Identifier	free		711485	0					
ANR	713055	ArgumentList	symname		711485	1					
ANR	713056	Argument	symname		711485	0					
ANR	713057	Identifier	symname		711485	0					
ANR	713058	ExpressionStatement	free ( m )	2239:6:65228:65236	711485	5	True				
ANR	713059	CallExpression	free ( m )		711485	0					
ANR	713060	Callee	free		711485	0					
ANR	713061	Identifier	free		711485	0					
ANR	713062	ArgumentList	m		711485	1					
ANR	713063	Argument	m		711485	0					
ANR	713064	Identifier	m		711485	0					
ANR	713065	ExpressionStatement	free ( module )	2241:5:65250:65263	711485	3	True				
ANR	713066	CallExpression	free ( module )		711485	0					
ANR	713067	Callee	free		711485	0					
ANR	713068	Identifier	free		711485	0					
ANR	713069	ArgumentList	module		711485	1					
ANR	713070	Argument	module		711485	0					
ANR	713071	Identifier	module		711485	0					
ANR	713072	ElseStatement	else		711485	0					
ANR	713073	CompoundStatement		226:3:6908:6976	711485	0					
ANR	713074	IdentifierDeclStatement	"const char * bind = symbol -> bind ? symbol -> bind : ""NONE"" ;"	2245:3:65290:65343	711485	0	True				
ANR	713075	IdentifierDecl	"* bind = symbol -> bind ? symbol -> bind : ""NONE"""		711485	0					
ANR	713076	IdentifierDeclType	const char *		711485	0					
ANR	713077	Identifier	bind		711485	1					
ANR	713078	AssignmentExpression	"* bind = symbol -> bind ? symbol -> bind : ""NONE"""		711485	2		=			
ANR	713079	Identifier	bind		711485	0					
ANR	713080	ConditionalExpression	"symbol -> bind ? symbol -> bind : ""NONE"""		711485	1					
ANR	713081	Condition	symbol -> bind		711485	0					
ANR	713082	PtrMemberAccess	symbol -> bind		711485	0					
ANR	713083	Identifier	symbol		711485	0					
ANR	713084	Identifier	bind		711485	1					
ANR	713085	PtrMemberAccess	symbol -> bind		711485	1					
ANR	713086	Identifier	symbol		711485	0					
ANR	713087	Identifier	bind		711485	1					
ANR	713088	PrimaryExpression	"""NONE"""		711485	2					
ANR	713089	IdentifierDeclStatement	"const char * type = symbol -> type ? symbol -> type : ""NONE"" ;"	2246:3:65348:65401	711485	1	True				
ANR	713090	IdentifierDecl	"* type = symbol -> type ? symbol -> type : ""NONE"""		711485	0					
ANR	713091	IdentifierDeclType	const char *		711485	0					
ANR	713092	Identifier	type		711485	1					
ANR	713093	AssignmentExpression	"* type = symbol -> type ? symbol -> type : ""NONE"""		711485	2		=			
ANR	713094	Identifier	type		711485	0					
ANR	713095	ConditionalExpression	"symbol -> type ? symbol -> type : ""NONE"""		711485	1					
ANR	713096	Condition	symbol -> type		711485	0					
ANR	713097	PtrMemberAccess	symbol -> type		711485	0					
ANR	713098	Identifier	symbol		711485	0					
ANR	713099	Identifier	type		711485	1					
ANR	713100	PtrMemberAccess	symbol -> type		711485	1					
ANR	713101	Identifier	symbol		711485	0					
ANR	713102	Identifier	type		711485	1					
ANR	713103	PrimaryExpression	"""NONE"""		711485	2					
ANR	713104	IdentifierDeclStatement	const char * name = r_str_get ( sn . demname ? sn . demname : r_symbol_name ) ;	2247:3:65406:65474	711485	2	True				
ANR	713105	IdentifierDecl	* name = r_str_get ( sn . demname ? sn . demname : r_symbol_name )		711485	0					
ANR	713106	IdentifierDeclType	const char *		711485	0					
ANR	713107	Identifier	name		711485	1					
ANR	713108	AssignmentExpression	* name = r_str_get ( sn . demname ? sn . demname : r_symbol_name )		711485	2		=			
ANR	713109	Identifier	name		711485	0					
ANR	713110	CallExpression	r_str_get ( sn . demname ? sn . demname : r_symbol_name )		711485	1					
ANR	713111	Callee	r_str_get		711485	0					
ANR	713112	Identifier	r_str_get		711485	0					
ANR	713113	ArgumentList	sn . demname ? sn . demname : r_symbol_name		711485	1					
ANR	713114	Argument	sn . demname ? sn . demname : r_symbol_name		711485	0					
ANR	713115	ConditionalExpression	sn . demname ? sn . demname : r_symbol_name		711485	0					
ANR	713116	Condition	sn . demname		711485	0					
ANR	713117	MemberAccess	sn . demname		711485	0					
ANR	713118	Identifier	sn		711485	0					
ANR	713119	Identifier	demname		711485	1					
ANR	713120	MemberAccess	sn . demname		711485	1					
ANR	713121	Identifier	sn		711485	0					
ANR	713122	Identifier	demname		711485	1					
ANR	713123	Identifier	r_symbol_name		711485	2					
ANR	713124	ExpressionStatement	"r_cons_printf ( ""%03u"" , symbol -> ordinal )"	2249:3:65534:65573	711485	3	True				
ANR	713125	CallExpression	"r_cons_printf ( ""%03u"" , symbol -> ordinal )"		711485	0					
ANR	713126	Callee	r_cons_printf		711485	0					
ANR	713127	Identifier	r_cons_printf		711485	0					
ANR	713128	ArgumentList	"""%03u"""		711485	1					
ANR	713129	Argument	"""%03u"""		711485	0					
ANR	713130	PrimaryExpression	"""%03u"""		711485	0					
ANR	713131	Argument	symbol -> ordinal		711485	1					
ANR	713132	PtrMemberAccess	symbol -> ordinal		711485	0					
ANR	713133	Identifier	symbol		711485	0					
ANR	713134	Identifier	ordinal		711485	1					
ANR	713135	IfStatement	if ( symbol -> paddr == UT64_MAX )		711485	4					
ANR	713136	Condition	symbol -> paddr == UT64_MAX	2250:7:65582:65606	711485	0	True				
ANR	713137	EqualityExpression	symbol -> paddr == UT64_MAX		711485	0		==			
ANR	713138	PtrMemberAccess	symbol -> paddr		711485	0					
ANR	713139	Identifier	symbol		711485	0					
ANR	713140	Identifier	paddr		711485	1					
ANR	713141	Identifier	UT64_MAX		711485	1					
ANR	713142	CompoundStatement		229:34:7111:7111	711485	1					
ANR	713143	ExpressionStatement	"r_cons_printf ( "" ----------"" )"	2251:4:65615:65644	711485	0	True				
ANR	713144	CallExpression	"r_cons_printf ( "" ----------"" )"		711485	0					
ANR	713145	Callee	r_cons_printf		711485	0					
ANR	713146	Identifier	r_cons_printf		711485	0					
ANR	713147	ArgumentList	""" ----------"""		711485	1					
ANR	713148	Argument	""" ----------"""		711485	0					
ANR	713149	PrimaryExpression	""" ----------"""		711485	0					
ANR	713150	ElseStatement	else		711485	0					
ANR	713151	CompoundStatement		231:10:7158:7158	711485	0					
ANR	713152	Statement	r_cons_printf	2253:4:65662:65674	711485	0	True				
ANR	713153	Statement	(	2253:18:65676:65676	711485	1	True				
ANR	713154	Statement	""" 0x%08"""	2253:19:65677:65684	711485	2	True				
ANR	713155	Statement	PFMT64x	2253:27:65685:65691	711485	3	True				
ANR	713156	Statement	","	2253:34:65692:65692	711485	4	True				
ANR	713157	Statement	symbol	2253:36:65694:65699	711485	5	True				
ANR	713158	Statement	->	2253:42:65700:65701	711485	6	True				
ANR	713159	Statement	paddr	2253:44:65702:65706	711485	7	True				
ANR	713160	Statement	)	2253:49:65707:65707	711485	8	True				
ANR	713161	ExpressionStatement		2253:50:65708:65708	711485	9	True				
ANR	713162	Statement	r_cons_printf	2255:3:65718:65730	711485	5	True				
ANR	713163	Statement	(	2255:17:65732:65732	711485	6	True				
ANR	713164	Statement	""" 0x%08"""	2255:18:65733:65740	711485	7	True				
ANR	713165	Statement	PFMT64x	2255:26:65741:65747	711485	8	True				
ANR	713166	Statement	""" %6s %6s %4d%s%s\\n"""	2255:33:65748:65767	711485	9	True				
ANR	713167	Statement	","	2255:53:65768:65768	711485	10	True				
ANR	713168	Statement	addr	2256:18:65788:65791	711485	11	True				
ANR	713169	Statement	","	2256:22:65792:65792	711485	12	True				
ANR	713170	Statement	bind	2256:24:65794:65797	711485	13	True				
ANR	713171	Statement	","	2256:28:65798:65798	711485	14	True				
ANR	713172	Statement	type	2256:30:65800:65803	711485	15	True				
ANR	713173	Statement	","	2256:34:65804:65804	711485	16	True				
ANR	713174	Statement	symbol	2256:36:65806:65811	711485	17	True				
ANR	713175	Statement	->	2256:42:65812:65813	711485	18	True				
ANR	713176	Statement	size	2256:44:65814:65817	711485	19	True				
ANR	713177	Statement	","	2256:48:65818:65818	711485	20	True				
ANR	713178	Statement	*	2256:50:65820:65820	711485	21	True				
ANR	713179	Statement	name	2256:51:65821:65824	711485	22	True				
ANR	713180	Statement	?	2256:55:65825:65825	711485	23	True				
ANR	713181	Statement	""" """	2256:57:65827:65829	711485	24	True				
ANR	713182	Statement	:	2256:60:65830:65830	711485	25	True				
ANR	713183	Statement	""""""	2256:62:65832:65833	711485	26	True				
ANR	713184	Statement	","	2256:64:65834:65834	711485	27	True				
ANR	713185	Statement	name	2256:66:65836:65839	711485	28	True				
ANR	713186	Statement	)	2256:70:65840:65840	711485	29	True				
ANR	713187	ExpressionStatement		2256:71:65841:65841	711485	30	True				
ANR	713188	Label	next :	2258:0:65847:65851	711485	12	True				
ANR	713189	Identifier	next		711485	0					
ANR	713190	ExpressionStatement	snFini ( & sn )	2259:2:65855:65867	711485	13	True				
ANR	713191	CallExpression	snFini ( & sn )		711485	0					
ANR	713192	Callee	snFini		711485	0					
ANR	713193	Identifier	snFini		711485	0					
ANR	713194	ArgumentList	& sn		711485	1					
ANR	713195	Argument	& sn		711485	0					
ANR	713196	UnaryOperationExpression	& sn		711485	0					
ANR	713197	UnaryOperator	&		711485	0					
ANR	713198	Identifier	sn		711485	1					
ANR	713199	ExpressionStatement	i ++	2260:2:65871:65874	711485	14	True				
ANR	713200	PostIncDecOperationExpression	i ++		711485	0					
ANR	713201	Identifier	i		711485	0					
ANR	713202	IncDec	++		711485	1					
ANR	713203	ExpressionStatement	free ( r_symbol_name )	2261:2:65878:65898	711485	15	True				
ANR	713204	CallExpression	free ( r_symbol_name )		711485	0					
ANR	713205	Callee	free		711485	0					
ANR	713206	Identifier	free		711485	0					
ANR	713207	ArgumentList	r_symbol_name		711485	1					
ANR	713208	Argument	r_symbol_name		711485	0					
ANR	713209	Identifier	r_symbol_name		711485	0					
ANR	713210	IfStatement	if ( exponly && firstexp )		711485	16					
ANR	713211	Condition	exponly && firstexp	2262:6:65906:65924	711485	0	True				
ANR	713212	AndExpression	exponly && firstexp		711485	0		&&			
ANR	713213	Identifier	exponly		711485	0					
ANR	713214	Identifier	firstexp		711485	1					
ANR	713215	CompoundStatement		241:27:7429:7429	711485	1					
ANR	713216	ExpressionStatement	firstexp = false	2263:3:65932:65948	711485	0	True				
ANR	713217	AssignmentExpression	firstexp = false		711485	0		=			
ANR	713218	Identifier	firstexp		711485	0					
ANR	713219	Identifier	false		711485	1					
ANR	713220	IfStatement	if ( printHere )		711485	17					
ANR	713221	Condition	printHere	2265:6:65960:65968	711485	0	True				
ANR	713222	Identifier	printHere		711485	0					
ANR	713223	CompoundStatement		244:17:7473:7473	711485	1					
ANR	713224	BreakStatement	break ;	2266:3:65976:65981	711485	0	True				
ANR	713225	IfStatement	if ( count == 0 && IS_MODE_JSON ( mode ) )		711485	27					
ANR	713226	Condition	count == 0 && IS_MODE_JSON ( mode )	2269:5:65995:66027	711485	0	True				
ANR	713227	AndExpression	count == 0 && IS_MODE_JSON ( mode )		711485	0		&&			
ANR	713228	EqualityExpression	count == 0		711485	0		==			
ANR	713229	Identifier	count		711485	0					
ANR	713230	PrimaryExpression	0		711485	1					
ANR	713231	CallExpression	IS_MODE_JSON ( mode )		711485	1					
ANR	713232	Callee	IS_MODE_JSON		711485	0					
ANR	713233	Identifier	IS_MODE_JSON		711485	0					
ANR	713234	ArgumentList	mode		711485	1					
ANR	713235	Argument	mode		711485	0					
ANR	713236	Identifier	mode		711485	0					
ANR	713237	CompoundStatement		248:40:7532:7532	711485	1					
ANR	713238	ExpressionStatement	"r_cons_printf ( ""{}"" )"	2270:2:66034:66054	711485	0	True				
ANR	713239	CallExpression	"r_cons_printf ( ""{}"" )"		711485	0					
ANR	713240	Callee	r_cons_printf		711485	0					
ANR	713241	Identifier	r_cons_printf		711485	0					
ANR	713242	ArgumentList	"""{}"""		711485	1					
ANR	713243	Argument	"""{}"""		711485	0					
ANR	713244	PrimaryExpression	"""{}"""		711485	0					
ANR	713245	IfStatement	if ( is_arm )		711485	28					
ANR	713246	Condition	is_arm	2275:5:66144:66149	711485	0	True				
ANR	713247	Identifier	is_arm		711485	0					
ANR	713248	CompoundStatement		254:13:7654:7654	711485	1					
ANR	713249	Statement	r_list_foreach	2276:2:66156:66169	711485	0	True				
ANR	713250	Statement	(	2276:17:66171:66171	711485	1	True				
ANR	713251	Statement	entries	2276:18:66172:66178	711485	2	True				
ANR	713252	Statement	","	2276:25:66179:66179	711485	3	True				
ANR	713253	Statement	iter	2276:27:66181:66184	711485	4	True				
ANR	713254	Statement	","	2276:31:66185:66185	711485	5	True				
ANR	713255	Statement	entry	2276:33:66187:66191	711485	6	True				
ANR	713256	Statement	)	2276:38:66192:66192	711485	7	True				
ANR	713257	CompoundStatement		255:40:7696:7696	711485	8					
ANR	713258	IfStatement	if ( IS_MODE_SET ( mode ) )		711485	0					
ANR	713259	Condition	IS_MODE_SET ( mode )	2277:7:66203:66220	711485	0	True				
ANR	713260	CallExpression	IS_MODE_SET ( mode )		711485	0					
ANR	713261	Callee	IS_MODE_SET		711485	0					
ANR	713262	Identifier	IS_MODE_SET		711485	0					
ANR	713263	ArgumentList	mode		711485	1					
ANR	713264	Argument	mode		711485	0					
ANR	713265	Identifier	mode		711485	0					
ANR	713266	CompoundStatement		256:27:7725:7725	711485	1					
ANR	713267	ExpressionStatement	"handle_arm_entry ( r , entry , info , va )"	2278:4:66229:66266	711485	0	True				
ANR	713268	CallExpression	"handle_arm_entry ( r , entry , info , va )"		711485	0					
ANR	713269	Callee	handle_arm_entry		711485	0					
ANR	713270	Identifier	handle_arm_entry		711485	0					
ANR	713271	ArgumentList	r		711485	1					
ANR	713272	Argument	r		711485	0					
ANR	713273	Identifier	r		711485	0					
ANR	713274	Argument	entry		711485	1					
ANR	713275	Identifier	entry		711485	0					
ANR	713276	Argument	info		711485	2					
ANR	713277	Identifier	info		711485	0					
ANR	713278	Argument	va		711485	3					
ANR	713279	Identifier	va		711485	0					
ANR	713280	IfStatement	if ( IS_MODE_JSON ( mode ) && ! printHere )		711485	29					
ANR	713281	Condition	IS_MODE_JSON ( mode ) && ! printHere	2282:5:66285:66317	711485	0	True				
ANR	713282	AndExpression	IS_MODE_JSON ( mode ) && ! printHere		711485	0		&&			
ANR	713283	CallExpression	IS_MODE_JSON ( mode )		711485	0					
ANR	713284	Callee	IS_MODE_JSON		711485	0					
ANR	713285	Identifier	IS_MODE_JSON		711485	0					
ANR	713286	ArgumentList	mode		711485	1					
ANR	713287	Argument	mode		711485	0					
ANR	713288	Identifier	mode		711485	0					
ANR	713289	UnaryOperationExpression	! printHere		711485	1					
ANR	713290	UnaryOperator	!		711485	0					
ANR	713291	Identifier	printHere		711485	1					
ANR	713292	CompoundStatement		261:40:7822:7822	711485	1					
ANR	713293	ExpressionStatement	"r_cons_printf ( ""]"" )"	2283:2:66324:66343	711485	0	True				
ANR	713294	CallExpression	"r_cons_printf ( ""]"" )"		711485	0					
ANR	713295	Callee	r_cons_printf		711485	0					
ANR	713296	Identifier	r_cons_printf		711485	0					
ANR	713297	ArgumentList	"""]"""		711485	1					
ANR	713298	Argument	"""]"""		711485	0					
ANR	713299	PrimaryExpression	"""]"""		711485	0					
ANR	713300	ExpressionStatement	r_spaces_pop ( & r -> anal -> meta_spaces )	2286:1:66350:66386	711485	30	True				
ANR	713301	CallExpression	r_spaces_pop ( & r -> anal -> meta_spaces )		711485	0					
ANR	713302	Callee	r_spaces_pop		711485	0					
ANR	713303	Identifier	r_spaces_pop		711485	0					
ANR	713304	ArgumentList	& r -> anal -> meta_spaces		711485	1					
ANR	713305	Argument	& r -> anal -> meta_spaces		711485	0					
ANR	713306	UnaryOperationExpression	& r -> anal -> meta_spaces		711485	0					
ANR	713307	UnaryOperator	&		711485	0					
ANR	713308	PtrMemberAccess	r -> anal -> meta_spaces		711485	1					
ANR	713309	PtrMemberAccess	r -> anal		711485	0					
ANR	713310	Identifier	r		711485	0					
ANR	713311	Identifier	anal		711485	1					
ANR	713312	Identifier	meta_spaces		711485	1					
ANR	713313	ReturnStatement	return true ;	2287:1:66389:66400	711485	31	True				
ANR	713314	Identifier	true		711485	0					
ANR	713315	ReturnType	static int		711485	1					
ANR	713316	Identifier	bin_symbols		711485	2					
ANR	713317	ParameterList	"RCore * r , int mode , ut64 laddr , int va , ut64 at , const char * name , bool exponly , const char * args"		711485	3					
ANR	713318	Parameter	RCore * r	2022:23:58398:58405	711485	0	True				
ANR	713319	ParameterType	RCore *		711485	0					
ANR	713320	Identifier	r		711485	1					
ANR	713321	Parameter	int mode	2022:33:58408:58415	711485	1	True				
ANR	713322	ParameterType	int		711485	0					
ANR	713323	Identifier	mode		711485	1					
ANR	713324	Parameter	ut64 laddr	2022:43:58418:58427	711485	2	True				
ANR	713325	ParameterType	ut64		711485	0					
ANR	713326	Identifier	laddr		711485	1					
ANR	713327	Parameter	int va	2022:55:58430:58435	711485	3	True				
ANR	713328	ParameterType	int		711485	0					
ANR	713329	Identifier	va		711485	1					
ANR	713330	Parameter	ut64 at	2022:63:58438:58444	711485	4	True				
ANR	713331	ParameterType	ut64		711485	0					
ANR	713332	Identifier	at		711485	1					
ANR	713333	Parameter	const char * name	2022:72:58447:58462	711485	5	True				
ANR	713334	ParameterType	const char *		711485	0					
ANR	713335	Identifier	name		711485	1					
ANR	713336	Parameter	bool exponly	2022:90:58465:58476	711485	6	True				
ANR	713337	ParameterType	bool		711485	0					
ANR	713338	Identifier	exponly		711485	1					
ANR	713339	Parameter	const char * args	2022:104:58479:58494	711485	7	True				
ANR	713340	ParameterType	const char *		711485	0					
ANR	713341	Identifier	args		711485	1					
ANR	713342	CFGEntryNode	ENTRY		711485		True				
ANR	713343	CFGExitNode	EXIT		711485		True				
ANR	713344	CFGErrorNode	ERROR		711485		True				
ANR	713345	Symbol	r_bin_get_entries		711485						
ANR	713346	Symbol	IS_MODE_SIMPLE		711485						
ANR	713347	Symbol	type		711485						
ANR	713348	Symbol	sn . demname		711485						
ANR	713349	Symbol	isAnExport		711485						
ANR	713350	Symbol	strncmp		711485						
ANR	713351	Symbol	is_in_range		711485						
ANR	713352	Symbol	bind		711485						
ANR	713353	Symbol	len		711485						
ANR	713354	Symbol	prname		711485						
ANR	713355	Symbol	symbol -> bind		711485						
ANR	713356	Symbol	symbol -> ordinal		711485						
ANR	713357	Symbol	sn . methflag		711485						
ANR	713358	Symbol	sn . name		711485						
ANR	713359	Symbol	is_file_symbol		711485						
ANR	713360	Symbol	symbol -> type		711485						
ANR	713361	Symbol	r_symbol_name		711485						
ANR	713362	Symbol	r -> offset		711485						
ANR	713363	Symbol	r -> flags -> base		711485						
ANR	713364	Symbol	is_special_symbol		711485						
ANR	713365	Symbol	module		711485						
ANR	713366	Symbol	iter		711485						
ANR	713367	Symbol	sn . demflag		711485						
ANR	713368	Symbol	r_bin_get_info		711485						
ANR	713369	Symbol	IS_MODE_SET		711485						
ANR	713370	Symbol	construct_symbol_flagname		711485						
ANR	713371	Symbol	str		711485						
ANR	713372	Symbol	sn . methname		711485						
ANR	713373	Symbol	at		711485						
ANR	713374	Symbol	r_str_escape_utf8		711485						
ANR	713375	Symbol	r_config_get_i		711485						
ANR	713376	Symbol	lastfs		711485						
ANR	713377	Symbol	symbol -> vaddr		711485						
ANR	713378	Symbol	laddr		711485						
ANR	713379	Symbol	r -> flags		711485						
ANR	713380	Symbol	* r -> flags		711485						
ANR	713381	Symbol	r_config_get		711485						
ANR	713382	Symbol	IS_MODE_JSON		711485						
ANR	713383	Symbol	sn . nameflag		711485						
ANR	713384	Symbol	symbol -> size		711485						
ANR	713385	Symbol	firstexp		711485						
ANR	713386	Symbol	* r -> bin		711485						
ANR	713387	Symbol	* * r		711485						
ANR	713388	Symbol	sn		711485						
ANR	713389	Symbol	r_flag_get		711485						
ANR	713390	Symbol	* name		711485						
ANR	713391	Symbol	r_str_startswith		711485						
ANR	713392	Symbol	fi -> demangled		711485						
ANR	713393	Symbol	bin_demangle		711485						
ANR	713394	Symbol	i		711485						
ANR	713395	Symbol	is_arm		711485						
ANR	713396	Symbol	__filterShell		711485						
ANR	713397	Symbol	* fi		711485						
ANR	713398	Symbol	r_str_escape_utf8_for_json		711485						
ANR	713399	Symbol	r_flag_set		711485						
ANR	713400	Symbol	m		711485						
ANR	713401	Symbol	n		711485						
ANR	713402	Symbol	IS_MODE_NORMAL		711485						
ANR	713403	Symbol	p		711485						
ANR	713404	Symbol	r		711485						
ANR	713405	Symbol	plugin		711485						
ANR	713406	Symbol	r_bin_get_symbols		711485						
ANR	713407	Symbol	* info		711485						
ANR	713408	Symbol	symbol		711485						
ANR	713409	Symbol	fi -> comment		711485						
ANR	713410	Symbol	& sn		711485						
ANR	713411	Symbol	MAXFLAG_LEN_DEFAULT		711485						
ANR	713412	Symbol	binfile		711485						
ANR	713413	Symbol	* args		711485						
ANR	713414	Symbol	mode		711485						
ANR	713415	Symbol	r_bin_file_cur_plugin		711485						
ANR	713416	Symbol	symbol -> paddr		711485						
ANR	713417	Symbol	fi -> offset		711485						
ANR	713418	Symbol	IS_MODE_SIMPLEST		711485						
ANR	713419	Symbol	* symbol		711485						
ANR	713420	Symbol	info		711485						
ANR	713421	Symbol	info -> arch		711485						
ANR	713422	Symbol	strcmp		711485						
ANR	713423	Symbol	r_str_get		711485						
ANR	713424	Symbol	NULL		711485						
ANR	713425	Symbol	count		711485						
ANR	713426	Symbol	r_bin_cur		711485						
ANR	713427	Symbol	fnp		711485						
ANR	713428	Symbol	va		711485						
ANR	713429	Symbol	sn . classname		711485						
ANR	713430	Symbol	r -> anal		711485						
ANR	713431	Symbol	exponly		711485						
ANR	713432	Symbol	entry		711485						
ANR	713433	Symbol	entries		711485						
ANR	713434	Symbol	strstr		711485						
ANR	713435	Symbol	name		711485						
ANR	713436	Symbol	true		711485						
ANR	713437	Symbol	is_section_symbol		711485						
ANR	713438	Symbol	fi		711485						
ANR	713439	Symbol	symbol -> name		711485						
ANR	713440	Symbol	plugin -> name		711485						
ANR	713441	Symbol	R_META_TYPE_COMMENT		711485						
ANR	713442	Symbol	fn		711485						
ANR	713443	Symbol	symname		711485						
ANR	713444	Symbol	flagname		711485						
ANR	713445	Symbol	r_str_newf		711485						
ANR	713446	Symbol	fs		711485						
ANR	713447	Symbol	symbols		711485						
ANR	713448	Symbol	& r -> anal -> meta_spaces		711485						
ANR	713449	Symbol	r -> bin		711485						
ANR	713450	Symbol	lang		711485						
ANR	713451	Symbol	addr		711485						
ANR	713452	Symbol	UT64_MAX		711485						
ANR	713453	Symbol	r -> bin -> prefix		711485						
ANR	713454	Symbol	printHere		711485						
ANR	713455	Symbol	false		711485						
ANR	713456	Symbol	compute_addr		711485						
ANR	713457	Symbol	* plugin		711485						
ANR	713458	Symbol	args		711485						
ANR	713459	Symbol	R_FLAGS_FS_SYMBOLS		711485						
ANR	713460	Symbol	IS_MODE_RAD		711485						
ANR	713461	Symbol	comment		711485						
ANR	713462	Symbol	* p		711485						
ANR	713463	Symbol	strdup		711485						
ANR	713464	Symbol	* r		711485						
ANR	713465	Symbol	r -> config		711485						
ANR	713466	Function	build_hash_string	2290:0:66405:67218							
ANR	713467	FunctionDef	"build_hash_string (int mode , const char * chksum , ut8 * data , ut32 datalen)"		713466	0					
ANR	713468	CompoundStatement		2290:86:66491:67218	713466	0					
ANR	713469	IdentifierDeclStatement	"char * chkstr = NULL , * aux , * ret = NULL ;"	2291:1:66494:66532	713466	0	True				
ANR	713470	IdentifierDecl	* chkstr = NULL		713466	0					
ANR	713471	IdentifierDeclType	char *		713466	0					
ANR	713472	Identifier	chkstr		713466	1					
ANR	713473	AssignmentExpression	* chkstr = NULL		713466	2		=			
ANR	713474	Identifier	NULL		713466	0					
ANR	713475	Identifier	NULL		713466	1					
ANR	713476	IdentifierDecl	* aux		713466	1					
ANR	713477	IdentifierDeclType	char *		713466	0					
ANR	713478	Identifier	aux		713466	1					
ANR	713479	IdentifierDecl	* ret = NULL		713466	2					
ANR	713480	IdentifierDeclType	char *		713466	0					
ANR	713481	Identifier	ret		713466	1					
ANR	713482	AssignmentExpression	* ret = NULL		713466	2		=			
ANR	713483	Identifier	NULL		713466	0					
ANR	713484	Identifier	NULL		713466	1					
ANR	713485	IdentifierDeclStatement	const char * ptr = chksum ;	2292:1:66535:66559	713466	1	True				
ANR	713486	IdentifierDecl	* ptr = chksum		713466	0					
ANR	713487	IdentifierDeclType	const char *		713466	0					
ANR	713488	Identifier	ptr		713466	1					
ANR	713489	AssignmentExpression	* ptr = chksum		713466	2		=			
ANR	713490	Identifier	chksum		713466	0					
ANR	713491	Identifier	chksum		713466	1					
ANR	713492	IdentifierDeclStatement	char tmp [ 128 ] ;	2293:1:66562:66575	713466	2	True				
ANR	713493	IdentifierDecl	tmp [ 128 ]		713466	0					
ANR	713494	IdentifierDeclType	char [ 128 ]		713466	0					
ANR	713495	Identifier	tmp		713466	1					
ANR	713496	PrimaryExpression	128		713466	2					
ANR	713497	IdentifierDeclStatement	int i ;	2294:1:66578:66583	713466	3	True				
ANR	713498	IdentifierDecl	i		713466	0					
ANR	713499	IdentifierDeclType	int		713466	0					
ANR	713500	Identifier	i		713466	1					
ANR	713501	DoStatement	do		713466	4					
ANR	713502	CompoundStatement		6:4:97:97	713466	0					
ANR	713503	ForStatement	"for ( i = 0 ; * ptr && * ptr != ',' && i < sizeof ( tmp ) - 1 ; i ++ )"		713466	0					
ANR	713504	ForInit	i = 0 ;	2296:7:66598:66603	713466	0	True				
ANR	713505	AssignmentExpression	i = 0		713466	0		=			
ANR	713506	Identifier	i		713466	0					
ANR	713507	PrimaryExpression	0		713466	1					
ANR	713508	Condition	"* ptr && * ptr != ',' && i < sizeof ( tmp ) - 1"	2296:14:66605:66646	713466	1	True				
ANR	713509	AndExpression	"* ptr && * ptr != ',' && i < sizeof ( tmp ) - 1"		713466	0		&&			
ANR	713510	UnaryOperationExpression	* ptr		713466	0					
ANR	713511	UnaryOperator	*		713466	0					
ANR	713512	Identifier	ptr		713466	1					
ANR	713513	AndExpression	"* ptr != ',' && i < sizeof ( tmp ) - 1"		713466	1		&&			
ANR	713514	EqualityExpression	"* ptr != ','"		713466	0		!=			
ANR	713515	UnaryOperationExpression	* ptr		713466	0					
ANR	713516	UnaryOperator	*		713466	0					
ANR	713517	Identifier	ptr		713466	1					
ANR	713518	PrimaryExpression	"','"		713466	1					
ANR	713519	RelationalExpression	i < sizeof ( tmp ) - 1		713466	1		<			
ANR	713520	Identifier	i		713466	0					
ANR	713521	AdditiveExpression	sizeof ( tmp ) - 1		713466	1		-			
ANR	713522	SizeofExpression	sizeof ( tmp )		713466	0					
ANR	713523	Sizeof	sizeof		713466	0					
ANR	713524	SizeofOperand	tmp		713466	1					
ANR	713525	PrimaryExpression	1		713466	1					
ANR	713526	PostIncDecOperationExpression	i ++	2296:58:66649:66651	713466	2	True				
ANR	713527	Identifier	i		713466	0					
ANR	713528	IncDec	++		713466	1					
ANR	713529	CompoundStatement		7:63:162:162	713466	3					
ANR	713530	ExpressionStatement	tmp [ i ] = * ptr ++	2297:3:66659:66674	713466	0	True				
ANR	713531	AssignmentExpression	tmp [ i ] = * ptr ++		713466	0		=			
ANR	713532	ArrayIndexing	tmp [ i ]		713466	0					
ANR	713533	Identifier	tmp		713466	0					
ANR	713534	Identifier	i		713466	1					
ANR	713535	UnaryOperationExpression	* ptr ++		713466	1					
ANR	713536	UnaryOperator	*		713466	0					
ANR	713537	PostIncDecOperationExpression	ptr ++		713466	1					
ANR	713538	Identifier	ptr		713466	0					
ANR	713539	IncDec	++		713466	1					
ANR	713540	ExpressionStatement	tmp [ i ] = '\\0'	2299:2:66682:66695	713466	1	True				
ANR	713541	AssignmentExpression	tmp [ i ] = '\\0'		713466	0		=			
ANR	713542	ArrayIndexing	tmp [ i ]		713466	0					
ANR	713543	Identifier	tmp		713466	0					
ANR	713544	Identifier	i		713466	1					
ANR	713545	PrimaryExpression	'\\0'		713466	1					
ANR	713546	ExpressionStatement	r_str_trim_head_tail ( tmp )	2300:2:66699:66725	713466	2	True				
ANR	713547	CallExpression	r_str_trim_head_tail ( tmp )		713466	0					
ANR	713548	Callee	r_str_trim_head_tail		713466	0					
ANR	713549	Identifier	r_str_trim_head_tail		713466	0					
ANR	713550	ArgumentList	tmp		713466	1					
ANR	713551	Argument	tmp		713466	0					
ANR	713552	Identifier	tmp		713466	0					
ANR	713553	ExpressionStatement	"chkstr = r_hash_to_string ( NULL , tmp , data , datalen )"	2301:2:66729:66781	713466	3	True				
ANR	713554	AssignmentExpression	"chkstr = r_hash_to_string ( NULL , tmp , data , datalen )"		713466	0		=			
ANR	713555	Identifier	chkstr		713466	0					
ANR	713556	CallExpression	"r_hash_to_string ( NULL , tmp , data , datalen )"		713466	1					
ANR	713557	Callee	r_hash_to_string		713466	0					
ANR	713558	Identifier	r_hash_to_string		713466	0					
ANR	713559	ArgumentList	NULL		713466	1					
ANR	713560	Argument	NULL		713466	0					
ANR	713561	Identifier	NULL		713466	0					
ANR	713562	Argument	tmp		713466	1					
ANR	713563	Identifier	tmp		713466	0					
ANR	713564	Argument	data		713466	2					
ANR	713565	Identifier	data		713466	0					
ANR	713566	Argument	datalen		713466	3					
ANR	713567	Identifier	datalen		713466	0					
ANR	713568	IfStatement	if ( ! chkstr )		713466	4					
ANR	713569	Condition	! chkstr	2302:6:66789:66795	713466	0	True				
ANR	713570	UnaryOperationExpression	! chkstr		713466	0					
ANR	713571	UnaryOperator	!		713466	0					
ANR	713572	Identifier	chkstr		713466	1					
ANR	713573	CompoundStatement		13:15:306:306	713466	1					
ANR	713574	IfStatement	"if ( * ptr && * ptr == ',' )"		713466	0					
ANR	713575	Condition	"* ptr && * ptr == ','"	2303:7:66807:66825	713466	0	True				
ANR	713576	AndExpression	"* ptr && * ptr == ','"		713466	0		&&			
ANR	713577	UnaryOperationExpression	* ptr		713466	0					
ANR	713578	UnaryOperator	*		713466	0					
ANR	713579	Identifier	ptr		713466	1					
ANR	713580	EqualityExpression	"* ptr == ','"		713466	1		==			
ANR	713581	UnaryOperationExpression	* ptr		713466	0					
ANR	713582	UnaryOperator	*		713466	0					
ANR	713583	Identifier	ptr		713466	1					
ANR	713584	PrimaryExpression	"','"		713466	1					
ANR	713585	CompoundStatement		14:28:336:336	713466	1					
ANR	713586	ExpressionStatement	ptr ++	2304:4:66834:66839	713466	0	True				
ANR	713587	PostIncDecOperationExpression	ptr ++		713466	0					
ANR	713588	Identifier	ptr		713466	0					
ANR	713589	IncDec	++		713466	1					
ANR	713590	ContinueStatement	continue ;	2306:3:66849:66857	713466	1	True				
ANR	713591	IfStatement	if ( IS_MODE_SIMPLE ( mode ) )		713466	5					
ANR	713592	Condition	IS_MODE_SIMPLE ( mode )	2308:6:66869:66889	713466	0	True				
ANR	713593	CallExpression	IS_MODE_SIMPLE ( mode )		713466	0					
ANR	713594	Callee	IS_MODE_SIMPLE		713466	0					
ANR	713595	Identifier	IS_MODE_SIMPLE		713466	0					
ANR	713596	ArgumentList	mode		713466	1					
ANR	713597	Argument	mode		713466	0					
ANR	713598	Identifier	mode		713466	0					
ANR	713599	CompoundStatement		19:29:400:400	713466	1					
ANR	713600	ExpressionStatement	"aux = r_str_newf ( ""%s "" , chkstr )"	2309:3:66897:66929	713466	0	True				
ANR	713601	AssignmentExpression	"aux = r_str_newf ( ""%s "" , chkstr )"		713466	0		=			
ANR	713602	Identifier	aux		713466	0					
ANR	713603	CallExpression	"r_str_newf ( ""%s "" , chkstr )"		713466	1					
ANR	713604	Callee	r_str_newf		713466	0					
ANR	713605	Identifier	r_str_newf		713466	0					
ANR	713606	ArgumentList	"""%s """		713466	1					
ANR	713607	Argument	"""%s """		713466	0					
ANR	713608	PrimaryExpression	"""%s """		713466	0					
ANR	713609	Argument	chkstr		713466	1					
ANR	713610	Identifier	chkstr		713466	0					
ANR	713611	ElseStatement	else		713466	0					
ANR	713612	IfStatement	if ( IS_MODE_JSON ( mode ) )		713466	0					
ANR	713613	Condition	IS_MODE_JSON ( mode )	2310:13:66944:66962	713466	0	True				
ANR	713614	CallExpression	IS_MODE_JSON ( mode )		713466	0					
ANR	713615	Callee	IS_MODE_JSON		713466	0					
ANR	713616	Identifier	IS_MODE_JSON		713466	0					
ANR	713617	ArgumentList	mode		713466	1					
ANR	713618	Argument	mode		713466	0					
ANR	713619	Identifier	mode		713466	0					
ANR	713620	CompoundStatement		21:34:473:473	713466	1					
ANR	713621	ExpressionStatement	"aux = r_str_newf ( ""\\""%s\\"":\\""%s\\"","" , tmp , chkstr )"	2311:3:66970:67018	713466	0	True				
ANR	713622	AssignmentExpression	"aux = r_str_newf ( ""\\""%s\\"":\\""%s\\"","" , tmp , chkstr )"		713466	0		=			
ANR	713623	Identifier	aux		713466	0					
ANR	713624	CallExpression	"r_str_newf ( ""\\""%s\\"":\\""%s\\"","" , tmp , chkstr )"		713466	1					
ANR	713625	Callee	r_str_newf		713466	0					
ANR	713626	Identifier	r_str_newf		713466	0					
ANR	713627	ArgumentList	"""\\""%s\\"":\\""%s\\"","""		713466	1					
ANR	713628	Argument	"""\\""%s\\"":\\""%s\\"","""		713466	0					
ANR	713629	PrimaryExpression	"""\\""%s\\"":\\""%s\\"","""		713466	0					
ANR	713630	Argument	tmp		713466	1					
ANR	713631	Identifier	tmp		713466	0					
ANR	713632	Argument	chkstr		713466	2					
ANR	713633	Identifier	chkstr		713466	0					
ANR	713634	ElseStatement	else		713466	0					
ANR	713635	CompoundStatement		23:9:537:537	713466	0					
ANR	713636	ExpressionStatement	"aux = r_str_newf ( ""%s=%s "" , tmp , chkstr )"	2313:3:67034:67074	713466	0	True				
ANR	713637	AssignmentExpression	"aux = r_str_newf ( ""%s=%s "" , tmp , chkstr )"		713466	0		=			
ANR	713638	Identifier	aux		713466	0					
ANR	713639	CallExpression	"r_str_newf ( ""%s=%s "" , tmp , chkstr )"		713466	1					
ANR	713640	Callee	r_str_newf		713466	0					
ANR	713641	Identifier	r_str_newf		713466	0					
ANR	713642	ArgumentList	"""%s=%s """		713466	1					
ANR	713643	Argument	"""%s=%s """		713466	0					
ANR	713644	PrimaryExpression	"""%s=%s """		713466	0					
ANR	713645	Argument	tmp		713466	1					
ANR	713646	Identifier	tmp		713466	0					
ANR	713647	Argument	chkstr		713466	2					
ANR	713648	Identifier	chkstr		713466	0					
ANR	713649	ExpressionStatement	"ret = r_str_append ( ret , aux )"	2315:2:67082:67111	713466	6	True				
ANR	713650	AssignmentExpression	"ret = r_str_append ( ret , aux )"		713466	0		=			
ANR	713651	Identifier	ret		713466	0					
ANR	713652	CallExpression	"r_str_append ( ret , aux )"		713466	1					
ANR	713653	Callee	r_str_append		713466	0					
ANR	713654	Identifier	r_str_append		713466	0					
ANR	713655	ArgumentList	ret		713466	1					
ANR	713656	Argument	ret		713466	0					
ANR	713657	Identifier	ret		713466	0					
ANR	713658	Argument	aux		713466	1					
ANR	713659	Identifier	aux		713466	0					
ANR	713660	ExpressionStatement	free ( chkstr )	2316:2:67115:67128	713466	7	True				
ANR	713661	CallExpression	free ( chkstr )		713466	0					
ANR	713662	Callee	free		713466	0					
ANR	713663	Identifier	free		713466	0					
ANR	713664	ArgumentList	chkstr		713466	1					
ANR	713665	Argument	chkstr		713466	0					
ANR	713666	Identifier	chkstr		713466	0					
ANR	713667	ExpressionStatement	free ( aux )	2317:2:67132:67142	713466	8	True				
ANR	713668	CallExpression	free ( aux )		713466	0					
ANR	713669	Callee	free		713466	0					
ANR	713670	Identifier	free		713466	0					
ANR	713671	ArgumentList	aux		713466	1					
ANR	713672	Argument	aux		713466	0					
ANR	713673	Identifier	aux		713466	0					
ANR	713674	IfStatement	"if ( * ptr && * ptr == ',' )"		713466	9					
ANR	713675	Condition	"* ptr && * ptr == ','"	2318:6:67150:67168	713466	0	True				
ANR	713676	AndExpression	"* ptr && * ptr == ','"		713466	0		&&			
ANR	713677	UnaryOperationExpression	* ptr		713466	0					
ANR	713678	UnaryOperator	*		713466	0					
ANR	713679	Identifier	ptr		713466	1					
ANR	713680	EqualityExpression	"* ptr == ','"		713466	1		==			
ANR	713681	UnaryOperationExpression	* ptr		713466	0					
ANR	713682	UnaryOperator	*		713466	0					
ANR	713683	Identifier	ptr		713466	1					
ANR	713684	PrimaryExpression	"','"		713466	1					
ANR	713685	CompoundStatement		29:27:679:679	713466	1					
ANR	713686	ExpressionStatement	ptr ++	2319:3:67176:67181	713466	0	True				
ANR	713687	PostIncDecOperationExpression	ptr ++		713466	0					
ANR	713688	Identifier	ptr		713466	0					
ANR	713689	IncDec	++		713466	1					
ANR	713690	Condition	* ptr	2321:10:67197:67200	713466	1	True				
ANR	713691	UnaryOperationExpression	* ptr		713466	0					
ANR	713692	UnaryOperator	*		713466	0					
ANR	713693	Identifier	ptr		713466	1					
ANR	713694	ReturnStatement	return ret ;	2323:1:67206:67216	713466	5	True				
ANR	713695	Identifier	ret		713466	0					
ANR	713696	ReturnType	static char *		713466	1					
ANR	713697	Identifier	build_hash_string		713466	2					
ANR	713698	ParameterList	"int mode , const char * chksum , ut8 * data , ut32 datalen"		713466	3					
ANR	713699	Parameter	int mode	2290:31:66436:66443	713466	0	True				
ANR	713700	ParameterType	int		713466	0					
ANR	713701	Identifier	mode		713466	1					
ANR	713702	Parameter	const char * chksum	2290:41:66446:66463	713466	1	True				
ANR	713703	ParameterType	const char *		713466	0					
ANR	713704	Identifier	chksum		713466	1					
ANR	713705	Parameter	ut8 * data	2290:61:66466:66474	713466	2	True				
ANR	713706	ParameterType	ut8 *		713466	0					
ANR	713707	Identifier	data		713466	1					
ANR	713708	Parameter	ut32 datalen	2290:72:66477:66488	713466	3	True				
ANR	713709	ParameterType	ut32		713466	0					
ANR	713710	Identifier	datalen		713466	1					
ANR	713711	CFGEntryNode	ENTRY		713466		True				
ANR	713712	CFGExitNode	EXIT		713466		True				
ANR	713713	Symbol	ret		713466						
ANR	713714	Symbol	* tmp		713466						
ANR	713715	Symbol	r_str_append		713466						
ANR	713716	Symbol	NULL		713466						
ANR	713717	Symbol	data		713466						
ANR	713718	Symbol	aux		713466						
ANR	713719	Symbol	* ptr ++		713466						
ANR	713720	Symbol	i		713466						
ANR	713721	Symbol	IS_MODE_SIMPLE		713466						
ANR	713722	Symbol	IS_MODE_JSON		713466						
ANR	713723	Symbol	r_str_newf		713466						
ANR	713724	Symbol	datalen		713466						
ANR	713725	Symbol	ptr		713466						
ANR	713726	Symbol	mode		713466						
ANR	713727	Symbol	chkstr		713466						
ANR	713728	Symbol	r_hash_to_string		713466						
ANR	713729	Symbol	* i		713466						
ANR	713730	Symbol	tmp		713466						
ANR	713731	Symbol	* ptr		713466						
ANR	713732	Symbol	chksum		713466						
ANR	713733	ClassDef	<unnamed>	2326:8:67229:67293							
ANR	713734	DeclStmt									
ANR	713735	Decl							const char	const char *	uri
ANR	713736	DeclStmt									
ANR	713737	Decl							int	int	perm
ANR	713738	DeclStmt									
ANR	713739	Decl							RIODesc	RIODesc *	desc
ANR	713740	DeclStmt									
ANR	713741	Decl									FindFile
ANR	713742	Function	findFile	2332:0:67296:67537							
ANR	713743	FunctionDef	"findFile (void * user , void * data , ut32 id)"		713742	0					
ANR	713744	CompoundStatement		2332:54:67350:67537	713742	0					
ANR	713745	IdentifierDeclStatement	FindFile * res = ( FindFile * ) user ;	2333:1:67353:67384	713742	0	True				
ANR	713746	IdentifierDecl	* res = ( FindFile * ) user		713742	0					
ANR	713747	IdentifierDeclType	FindFile *		713742	0					
ANR	713748	Identifier	res		713742	1					
ANR	713749	AssignmentExpression	* res = ( FindFile * ) user		713742	2		=			
ANR	713750	Identifier	res		713742	0					
ANR	713751	CastExpression	( FindFile * ) user		713742	1					
ANR	713752	CastTarget	FindFile *		713742	0					
ANR	713753	Identifier	user		713742	1					
ANR	713754	IdentifierDeclStatement	RIODesc * desc = ( RIODesc * ) data ;	2334:1:67387:67417	713742	1	True				
ANR	713755	IdentifierDecl	* desc = ( RIODesc * ) data		713742	0					
ANR	713756	IdentifierDeclType	RIODesc *		713742	0					
ANR	713757	Identifier	desc		713742	1					
ANR	713758	AssignmentExpression	* desc = ( RIODesc * ) data		713742	2		=			
ANR	713759	Identifier	desc		713742	0					
ANR	713760	CastExpression	( RIODesc * ) data		713742	1					
ANR	713761	CastTarget	RIODesc *		713742	0					
ANR	713762	Identifier	data		713742	1					
ANR	713763	IfStatement	"if ( desc -> perm && res -> perm && ! strcmp ( desc -> uri , res -> uri ) )"		713742	2					
ANR	713764	Condition	"desc -> perm && res -> perm && ! strcmp ( desc -> uri , res -> uri )"	2335:5:67424:67479	713742	0	True				
ANR	713765	AndExpression	"desc -> perm && res -> perm && ! strcmp ( desc -> uri , res -> uri )"		713742	0		&&			
ANR	713766	PtrMemberAccess	desc -> perm		713742	0					
ANR	713767	Identifier	desc		713742	0					
ANR	713768	Identifier	perm		713742	1					
ANR	713769	AndExpression	"res -> perm && ! strcmp ( desc -> uri , res -> uri )"		713742	1		&&			
ANR	713770	PtrMemberAccess	res -> perm		713742	0					
ANR	713771	Identifier	res		713742	0					
ANR	713772	Identifier	perm		713742	1					
ANR	713773	UnaryOperationExpression	"! strcmp ( desc -> uri , res -> uri )"		713742	1					
ANR	713774	UnaryOperator	!		713742	0					
ANR	713775	CallExpression	"strcmp ( desc -> uri , res -> uri )"		713742	1					
ANR	713776	Callee	strcmp		713742	0					
ANR	713777	Identifier	strcmp		713742	0					
ANR	713778	ArgumentList	desc -> uri		713742	1					
ANR	713779	Argument	desc -> uri		713742	0					
ANR	713780	PtrMemberAccess	desc -> uri		713742	0					
ANR	713781	Identifier	desc		713742	0					
ANR	713782	Identifier	uri		713742	1					
ANR	713783	Argument	res -> uri		713742	1					
ANR	713784	PtrMemberAccess	res -> uri		713742	0					
ANR	713785	Identifier	res		713742	0					
ANR	713786	Identifier	uri		713742	1					
ANR	713787	CompoundStatement		4:63:131:131	713742	1					
ANR	713788	ExpressionStatement	res -> desc = desc	2336:2:67486:67502	713742	0	True				
ANR	713789	AssignmentExpression	res -> desc = desc		713742	0		=			
ANR	713790	PtrMemberAccess	res -> desc		713742	0					
ANR	713791	Identifier	res		713742	0					
ANR	713792	Identifier	desc		713742	1					
ANR	713793	Identifier	desc		713742	1					
ANR	713794	ReturnStatement	return false ;	2337:2:67506:67518	713742	1	True				
ANR	713795	Identifier	false		713742	0					
ANR	713796	ReturnStatement	return true ;	2339:1:67524:67535	713742	3	True				
ANR	713797	Identifier	true		713742	0					
ANR	713798	ReturnType	static bool		713742	1					
ANR	713799	Identifier	findFile		713742	2					
ANR	713800	ParameterList	"void * user , void * data , ut32 id"		713742	3					
ANR	713801	Parameter	void * user	2332:21:67317:67326	713742	0	True				
ANR	713802	ParameterType	void *		713742	0					
ANR	713803	Identifier	user		713742	1					
ANR	713804	Parameter	void * data	2332:33:67329:67338	713742	1	True				
ANR	713805	ParameterType	void *		713742	0					
ANR	713806	Identifier	data		713742	1					
ANR	713807	Parameter	ut32 id	2332:45:67341:67347	713742	2	True				
ANR	713808	ParameterType	ut32		713742	0					
ANR	713809	Identifier	id		713742	1					
ANR	713810	CFGEntryNode	ENTRY		713742		True				
ANR	713811	CFGExitNode	EXIT		713742		True				
ANR	713812	Symbol	strcmp		713742						
ANR	713813	Symbol	res		713742						
ANR	713814	Symbol	desc -> uri		713742						
ANR	713815	Symbol	data		713742						
ANR	713816	Symbol	desc -> perm		713742						
ANR	713817	Symbol	false		713742						
ANR	713818	Symbol	* res		713742						
ANR	713819	Symbol	res -> desc		713742						
ANR	713820	Symbol	res -> perm		713742						
ANR	713821	Symbol	true		713742						
ANR	713822	Symbol	* desc		713742						
ANR	713823	Symbol	id		713742						
ANR	713824	Symbol	res -> uri		713742						
ANR	713825	Symbol	user		713742						
ANR	713826	Symbol	desc		713742						
ANR	713827	Function	findReusableFile	2342:0:67540:67748							
ANR	713828	FunctionDef	"findReusableFile (RIO * io , const char * uri , int perm)"		713827	0					
ANR	713829	CompoundStatement		2342:69:67609:67748	713827	0					
ANR	713830	Statement	FindFile	2343:1:67612:67619	713827	0	True				
ANR	713831	Statement	arg	2343:10:67621:67623	713827	1	True				
ANR	713832	Statement	=	2343:14:67625:67625	713827	2	True				
ANR	713833	CompoundStatement		2:16:17:17	713827	3					
ANR	713834	Statement	.	2344:2:67631:67631	713827	0	True				
ANR	713835	Statement	uri	2344:3:67632:67634	713827	1	True				
ANR	713836	Statement	=	2344:7:67636:67636	713827	2	True				
ANR	713837	Statement	uri	2344:9:67638:67640	713827	3	True				
ANR	713838	Statement	","	2344:12:67641:67641	713827	4	True				
ANR	713839	Statement	.	2345:2:67645:67645	713827	5	True				
ANR	713840	Statement	perm	2345:3:67646:67649	713827	6	True				
ANR	713841	Statement	=	2345:8:67651:67651	713827	7	True				
ANR	713842	Statement	perm	2345:10:67653:67656	713827	8	True				
ANR	713843	Statement	","	2345:14:67657:67657	713827	9	True				
ANR	713844	Statement	.	2346:2:67661:67661	713827	10	True				
ANR	713845	Statement	desc	2346:3:67662:67665	713827	11	True				
ANR	713846	Statement	=	2346:8:67667:67667	713827	12	True				
ANR	713847	Statement	NULL	2346:10:67669:67672	713827	13	True				
ANR	713848	Statement	","	2346:14:67673:67673	713827	14	True				
ANR	713849	ExpressionStatement		2347:2:67677:67677	713827	4	True				
ANR	713850	ExpressionStatement	"r_id_storage_foreach ( io -> files , findFile , & arg )"	2348:1:67680:67728	713827	5	True				
ANR	713851	CallExpression	"r_id_storage_foreach ( io -> files , findFile , & arg )"		713827	0					
ANR	713852	Callee	r_id_storage_foreach		713827	0					
ANR	713853	Identifier	r_id_storage_foreach		713827	0					
ANR	713854	ArgumentList	io -> files		713827	1					
ANR	713855	Argument	io -> files		713827	0					
ANR	713856	PtrMemberAccess	io -> files		713827	0					
ANR	713857	Identifier	io		713827	0					
ANR	713858	Identifier	files		713827	1					
ANR	713859	Argument	findFile		713827	1					
ANR	713860	Identifier	findFile		713827	0					
ANR	713861	Argument	& arg		713827	2					
ANR	713862	UnaryOperationExpression	& arg		713827	0					
ANR	713863	UnaryOperator	&		713827	0					
ANR	713864	Identifier	arg		713827	1					
ANR	713865	ReturnStatement	return arg . desc ;	2349:1:67731:67746	713827	6	True				
ANR	713866	MemberAccess	arg . desc		713827	0					
ANR	713867	Identifier	arg		713827	0					
ANR	713868	Identifier	desc		713827	1					
ANR	713869	ReturnType	static RIODesc *		713827	1					
ANR	713870	Identifier	findReusableFile		713827	2					
ANR	713871	ParameterList	"RIO * io , const char * uri , int perm"		713827	3					
ANR	713872	Parameter	RIO * io	2342:33:67573:67579	713827	0	True				
ANR	713873	ParameterType	RIO *		713827	0					
ANR	713874	Identifier	io		713827	1					
ANR	713875	Parameter	const char * uri	2342:42:67582:67596	713827	1	True				
ANR	713876	ParameterType	const char *		713827	0					
ANR	713877	Identifier	uri		713827	1					
ANR	713878	Parameter	int perm	2342:59:67599:67606	713827	2	True				
ANR	713879	ParameterType	int		713827	0					
ANR	713880	Identifier	perm		713827	1					
ANR	713881	CFGEntryNode	ENTRY		713827		True				
ANR	713882	CFGExitNode	EXIT		713827		True				
ANR	713883	Symbol	arg . desc		713827						
ANR	713884	Symbol	perm		713827						
ANR	713885	Symbol	io		713827						
ANR	713886	Symbol	io -> files		713827						
ANR	713887	Symbol	arg		713827						
ANR	713888	Symbol	findFile		713827						
ANR	713889	Symbol	& arg		713827						
ANR	713890	Symbol	uri		713827						
ANR	713891	Symbol	* io		713827						
ANR	713892	Function	io_create_mem_map	2352:0:67751:68623							
ANR	713893	FunctionDef	"io_create_mem_map (RIO * io , RBinSection * sec , ut64 at)"		713892	0					
ANR	713894	CompoundStatement		2352:66:67817:68623	713892	0					
ANR	713895	ExpressionStatement	"r_return_val_if_fail ( io && sec , false )"	2353:1:67820:67859	713892	0	True				
ANR	713896	CallExpression	"r_return_val_if_fail ( io && sec , false )"		713892	0					
ANR	713897	Callee	r_return_val_if_fail		713892	0					
ANR	713898	Identifier	r_return_val_if_fail		713892	0					
ANR	713899	ArgumentList	io && sec		713892	1					
ANR	713900	Argument	io && sec		713892	0					
ANR	713901	AndExpression	io && sec		713892	0		&&			
ANR	713902	Identifier	io		713892	0					
ANR	713903	Identifier	sec		713892	1					
ANR	713904	Argument	false		713892	1					
ANR	713905	Identifier	false		713892	0					
ANR	713906	IdentifierDeclStatement	bool reused = false ;	2355:1:67863:67882	713892	1	True				
ANR	713907	IdentifierDecl	reused = false		713892	0					
ANR	713908	IdentifierDeclType	bool		713892	0					
ANR	713909	Identifier	reused		713892	1					
ANR	713910	AssignmentExpression	reused = false		713892	2		=			
ANR	713911	Identifier	false		713892	0					
ANR	713912	Identifier	false		713892	1					
ANR	713913	IdentifierDeclStatement	ut64 gap = sec -> vsize - sec -> size ;	2356:1:67885:67918	713892	2	True				
ANR	713914	IdentifierDecl	gap = sec -> vsize - sec -> size		713892	0					
ANR	713915	IdentifierDeclType	ut64		713892	0					
ANR	713916	Identifier	gap		713892	1					
ANR	713917	AssignmentExpression	gap = sec -> vsize - sec -> size		713892	2		=			
ANR	713918	Identifier	gap		713892	0					
ANR	713919	AdditiveExpression	sec -> vsize - sec -> size		713892	1		-			
ANR	713920	PtrMemberAccess	sec -> vsize		713892	0					
ANR	713921	Identifier	sec		713892	0					
ANR	713922	Identifier	vsize		713892	1					
ANR	713923	PtrMemberAccess	sec -> size		713892	1					
ANR	713924	Identifier	sec		713892	0					
ANR	713925	Identifier	size		713892	1					
ANR	713926	Statement	char	2357:1:67921:67924	713892	3	True				
ANR	713927	Statement	*	2357:6:67926:67926	713892	4	True				
ANR	713928	Statement	uri	2357:7:67927:67929	713892	5	True				
ANR	713929	Statement	=	2357:11:67931:67931	713892	6	True				
ANR	713930	Statement	r_str_newf	2357:13:67933:67942	713892	7	True				
ANR	713931	Statement	(	2357:24:67944:67944	713892	8	True				
ANR	713932	Statement	"""null://%"""	2357:25:67945:67954	713892	9	True				
ANR	713933	Statement	PFMT64u	2357:35:67955:67961	713892	10	True				
ANR	713934	Statement	","	2357:42:67962:67962	713892	11	True				
ANR	713935	Statement	gap	2357:44:67964:67966	713892	12	True				
ANR	713936	Statement	)	2357:47:67967:67967	713892	13	True				
ANR	713937	ExpressionStatement		2357:48:67968:67968	713892	14	True				
ANR	713938	IdentifierDeclStatement	"RIODesc * desc = findReusableFile ( io , uri , sec -> perm ) ;"	2358:1:67971:68024	713892	15	True				
ANR	713939	IdentifierDecl	"* desc = findReusableFile ( io , uri , sec -> perm )"		713892	0					
ANR	713940	IdentifierDeclType	RIODesc *		713892	0					
ANR	713941	Identifier	desc		713892	1					
ANR	713942	AssignmentExpression	"* desc = findReusableFile ( io , uri , sec -> perm )"		713892	2		=			
ANR	713943	Identifier	desc		713892	0					
ANR	713944	CallExpression	"findReusableFile ( io , uri , sec -> perm )"		713892	1					
ANR	713945	Callee	findReusableFile		713892	0					
ANR	713946	Identifier	findReusableFile		713892	0					
ANR	713947	ArgumentList	io		713892	1					
ANR	713948	Argument	io		713892	0					
ANR	713949	Identifier	io		713892	0					
ANR	713950	Argument	uri		713892	1					
ANR	713951	Identifier	uri		713892	0					
ANR	713952	Argument	sec -> perm		713892	2					
ANR	713953	PtrMemberAccess	sec -> perm		713892	0					
ANR	713954	Identifier	sec		713892	0					
ANR	713955	Identifier	perm		713892	1					
ANR	713956	IfStatement	if ( desc )		713892	16					
ANR	713957	Condition	desc	2359:5:68031:68034	713892	0	True				
ANR	713958	Identifier	desc		713892	0					
ANR	713959	CompoundStatement		9:2:223:258	713892	1					
ANR	713960	IdentifierDeclStatement	"RIOMap * map = r_io_map_get ( io , at ) ;"	2360:2:68041:68076	713892	0	True				
ANR	713961	IdentifierDecl	"* map = r_io_map_get ( io , at )"		713892	0					
ANR	713962	IdentifierDeclType	RIOMap *		713892	0					
ANR	713963	Identifier	map		713892	1					
ANR	713964	AssignmentExpression	"* map = r_io_map_get ( io , at )"		713892	2		=			
ANR	713965	Identifier	map		713892	0					
ANR	713966	CallExpression	"r_io_map_get ( io , at )"		713892	1					
ANR	713967	Callee	r_io_map_get		713892	0					
ANR	713968	Identifier	r_io_map_get		713892	0					
ANR	713969	ArgumentList	io		713892	1					
ANR	713970	Argument	io		713892	0					
ANR	713971	Identifier	io		713892	0					
ANR	713972	Argument	at		713892	1					
ANR	713973	Identifier	at		713892	0					
ANR	713974	IfStatement	if ( ! map )		713892	1					
ANR	713975	Condition	! map	2361:6:68084:68087	713892	0	True				
ANR	713976	UnaryOperationExpression	! map		713892	0					
ANR	713977	UnaryOperator	!		713892	0					
ANR	713978	Identifier	map		713892	1					
ANR	713979	CompoundStatement		10:12:272:272	713892	1					
ANR	713980	Statement	r_io_map_add_batch	2362:3:68095:68112	713892	0	True				
ANR	713981	Statement	(	2362:22:68114:68114	713892	1	True				
ANR	713982	Statement	io	2362:23:68115:68116	713892	2	True				
ANR	713983	Statement	","	2362:25:68117:68117	713892	3	True				
ANR	713984	Statement	desc	2362:27:68119:68122	713892	4	True				
ANR	713985	Statement	->	2362:31:68123:68124	713892	5	True				
ANR	713986	Statement	fd	2362:33:68125:68126	713892	6	True				
ANR	713987	Statement	","	2362:35:68127:68127	713892	7	True				
ANR	713988	Statement	desc	2362:37:68129:68132	713892	8	True				
ANR	713989	Statement	->	2362:41:68133:68134	713892	9	True				
ANR	713990	Statement	perm	2362:43:68135:68138	713892	10	True				
ANR	713991	Statement	","	2362:47:68139:68139	713892	11	True				
ANR	713992	Statement	0L	2362:49:68141:68142	713892	12	True				
ANR	713993	Statement	L	2362:51:68143:68143	713892	13	True				
ANR	713994	Statement	","	2362:52:68144:68144	713892	14	True				
ANR	713995	Statement	at	2362:54:68146:68147	713892	15	True				
ANR	713996	Statement	","	2362:56:68148:68148	713892	16	True				
ANR	713997	Statement	gap	2362:58:68150:68152	713892	17	True				
ANR	713998	Statement	)	2362:61:68153:68153	713892	18	True				
ANR	713999	ExpressionStatement		2362:62:68154:68154	713892	19	True				
ANR	714000	ExpressionStatement	reused = true	2364:2:68162:68175	713892	2	True				
ANR	714001	AssignmentExpression	reused = true		713892	0		=			
ANR	714002	Identifier	reused		713892	0					
ANR	714003	Identifier	true		713892	1					
ANR	714004	IfStatement	if ( ! desc )		713892	17					
ANR	714005	Condition	! desc	2366:5:68185:68189	713892	0	True				
ANR	714006	UnaryOperationExpression	! desc		713892	0					
ANR	714007	UnaryOperator	!		713892	0					
ANR	714008	Identifier	desc		713892	1					
ANR	714009	CompoundStatement		15:12:374:374	713892	1					
ANR	714010	ExpressionStatement	"desc = r_io_open_at ( io , uri , sec -> perm , 0664 , at )"	2367:2:68196:68246	713892	0	True				
ANR	714011	AssignmentExpression	"desc = r_io_open_at ( io , uri , sec -> perm , 0664 , at )"		713892	0		=			
ANR	714012	Identifier	desc		713892	0					
ANR	714013	CallExpression	"r_io_open_at ( io , uri , sec -> perm , 0664 , at )"		713892	1					
ANR	714014	Callee	r_io_open_at		713892	0					
ANR	714015	Identifier	r_io_open_at		713892	0					
ANR	714016	ArgumentList	io		713892	1					
ANR	714017	Argument	io		713892	0					
ANR	714018	Identifier	io		713892	0					
ANR	714019	Argument	uri		713892	1					
ANR	714020	Identifier	uri		713892	0					
ANR	714021	Argument	sec -> perm		713892	2					
ANR	714022	PtrMemberAccess	sec -> perm		713892	0					
ANR	714023	Identifier	sec		713892	0					
ANR	714024	Identifier	perm		713892	1					
ANR	714025	Argument	0664		713892	3					
ANR	714026	PrimaryExpression	0664		713892	0					
ANR	714027	Argument	at		713892	4					
ANR	714028	Identifier	at		713892	0					
ANR	714029	ExpressionStatement	free ( uri )	2369:1:68252:68262	713892	18	True				
ANR	714030	CallExpression	free ( uri )		713892	0					
ANR	714031	Callee	free		713892	0					
ANR	714032	Identifier	free		713892	0					
ANR	714033	ArgumentList	uri		713892	1					
ANR	714034	Argument	uri		713892	0					
ANR	714035	Identifier	uri		713892	0					
ANR	714036	IfStatement	if ( ! desc )		713892	19					
ANR	714037	Condition	! desc	2370:5:68269:68273	713892	0	True				
ANR	714038	UnaryOperationExpression	! desc		713892	0					
ANR	714039	UnaryOperator	!		713892	0					
ANR	714040	Identifier	desc		713892	1					
ANR	714041	CompoundStatement		19:12:458:458	713892	1					
ANR	714042	ReturnStatement	return false ;	2371:2:68280:68292	713892	0	True				
ANR	714043	Identifier	false		713892	0					
ANR	714044	IdentifierDeclStatement	"RIOMap * map = r_io_map_get ( io , at ) ;"	2374:1:68358:68393	713892	20	True				
ANR	714045	IdentifierDecl	"* map = r_io_map_get ( io , at )"		713892	0					
ANR	714046	IdentifierDeclType	RIOMap *		713892	0					
ANR	714047	Identifier	map		713892	1					
ANR	714048	AssignmentExpression	"* map = r_io_map_get ( io , at )"		713892	2		=			
ANR	714049	Identifier	map		713892	0					
ANR	714050	CallExpression	"r_io_map_get ( io , at )"		713892	1					
ANR	714051	Callee	r_io_map_get		713892	0					
ANR	714052	Identifier	r_io_map_get		713892	0					
ANR	714053	ArgumentList	io		713892	1					
ANR	714054	Argument	io		713892	0					
ANR	714055	Identifier	io		713892	0					
ANR	714056	Argument	at		713892	1					
ANR	714057	Identifier	at		713892	0					
ANR	714058	IfStatement	if ( ! map )		713892	21					
ANR	714059	Condition	! map	2376:5:68432:68435	713892	0	True				
ANR	714060	UnaryOperationExpression	! map		713892	0					
ANR	714061	UnaryOperator	!		713892	0					
ANR	714062	Identifier	map		713892	1					
ANR	714063	CompoundStatement		25:11:620:620	713892	1					
ANR	714064	IfStatement	if ( ! reused )		713892	0					
ANR	714065	Condition	! reused	2377:6:68446:68452	713892	0	True				
ANR	714066	UnaryOperationExpression	! reused		713892	0					
ANR	714067	UnaryOperator	!		713892	0					
ANR	714068	Identifier	reused		713892	1					
ANR	714069	CompoundStatement		26:15:637:637	713892	1					
ANR	714070	ExpressionStatement	r_io_desc_close ( desc )	2378:3:68460:68482	713892	0	True				
ANR	714071	CallExpression	r_io_desc_close ( desc )		713892	0					
ANR	714072	Callee	r_io_desc_close		713892	0					
ANR	714073	Identifier	r_io_desc_close		713892	0					
ANR	714074	ArgumentList	desc		713892	1					
ANR	714075	Argument	desc		713892	0					
ANR	714076	Identifier	desc		713892	0					
ANR	714077	ReturnStatement	return false ;	2380:2:68490:68502	713892	1	True				
ANR	714078	Identifier	false		713892	0					
ANR	714079	ExpressionStatement	"map -> name = r_str_newf ( ""mmap.%s"" , sec -> name )"	2383:1:68562:68607	713892	22	True				
ANR	714080	AssignmentExpression	"map -> name = r_str_newf ( ""mmap.%s"" , sec -> name )"		713892	0		=			
ANR	714081	PtrMemberAccess	map -> name		713892	0					
ANR	714082	Identifier	map		713892	0					
ANR	714083	Identifier	name		713892	1					
ANR	714084	CallExpression	"r_str_newf ( ""mmap.%s"" , sec -> name )"		713892	1					
ANR	714085	Callee	r_str_newf		713892	0					
ANR	714086	Identifier	r_str_newf		713892	0					
ANR	714087	ArgumentList	"""mmap.%s"""		713892	1					
ANR	714088	Argument	"""mmap.%s"""		713892	0					
ANR	714089	PrimaryExpression	"""mmap.%s"""		713892	0					
ANR	714090	Argument	sec -> name		713892	1					
ANR	714091	PtrMemberAccess	sec -> name		713892	0					
ANR	714092	Identifier	sec		713892	0					
ANR	714093	Identifier	name		713892	1					
ANR	714094	ReturnStatement	return true ;	2384:1:68610:68621	713892	23	True				
ANR	714095	Identifier	true		713892	0					
ANR	714096	ReturnType	static bool		713892	1					
ANR	714097	Identifier	io_create_mem_map		713892	2					
ANR	714098	ParameterList	"RIO * io , RBinSection * sec , ut64 at"		713892	3					
ANR	714099	Parameter	RIO * io	2352:30:67781:67787	713892	0	True				
ANR	714100	ParameterType	RIO *		713892	0					
ANR	714101	Identifier	io		713892	1					
ANR	714102	Parameter	RBinSection * sec	2352:39:67790:67805	713892	1	True				
ANR	714103	ParameterType	RBinSection *		713892	0					
ANR	714104	Identifier	sec		713892	1					
ANR	714105	Parameter	ut64 at	2352:57:67808:67814	713892	2	True				
ANR	714106	ParameterType	ut64		713892	0					
ANR	714107	Identifier	at		713892	1					
ANR	714108	CFGEntryNode	ENTRY		713892		True				
ANR	714109	CFGExitNode	EXIT		713892		True				
ANR	714110	Symbol	io		713892						
ANR	714111	Symbol	* map		713892						
ANR	714112	Symbol	sec -> name		713892						
ANR	714113	Symbol	false		713892						
ANR	714114	Symbol	r_str_newf		713892						
ANR	714115	Symbol	uri		713892						
ANR	714116	Symbol	sec		713892						
ANR	714117	Symbol	sec -> size		713892						
ANR	714118	Symbol	at		713892						
ANR	714119	Symbol	map -> name		713892						
ANR	714120	Symbol	sec -> vsize		713892						
ANR	714121	Symbol	r_io_open_at		713892						
ANR	714122	Symbol	gap		713892						
ANR	714123	Symbol	findReusableFile		713892						
ANR	714124	Symbol	true		713892						
ANR	714125	Symbol	* sec		713892						
ANR	714126	Symbol	map		713892						
ANR	714127	Symbol	reused		713892						
ANR	714128	Symbol	sec -> perm		713892						
ANR	714129	Symbol	r_io_map_get		713892						
ANR	714130	Symbol	desc		713892						
ANR	714131	Function	add_section	2387:0:68626:69596							
ANR	714132	FunctionDef	"add_section (RCore * core , RBinSection * sec , ut64 addr , int fd)"		714131	0					
ANR	714133	CompoundStatement		2387:74:68700:69596	714131	0					
ANR	714134	IfStatement	"if ( ! r_io_desc_get ( core -> io , fd ) || UT64_ADD_OVFCHK ( sec -> size , sec -> paddr ) || UT64_ADD_OVFCHK ( sec -> size , addr ) || ! sec -> vsize )"		714131	0					
ANR	714135	Condition	"! r_io_desc_get ( core -> io , fd ) || UT64_ADD_OVFCHK ( sec -> size , sec -> paddr ) || UT64_ADD_OVFCHK ( sec -> size , addr ) || ! sec -> vsize"	2388:5:68707:68835	714131	0	True				
ANR	714136	OrExpression	"! r_io_desc_get ( core -> io , fd ) || UT64_ADD_OVFCHK ( sec -> size , sec -> paddr ) || UT64_ADD_OVFCHK ( sec -> size , addr ) || ! sec -> vsize"		714131	0		||			
ANR	714137	UnaryOperationExpression	"! r_io_desc_get ( core -> io , fd )"		714131	0					
ANR	714138	UnaryOperator	!		714131	0					
ANR	714139	CallExpression	"r_io_desc_get ( core -> io , fd )"		714131	1					
ANR	714140	Callee	r_io_desc_get		714131	0					
ANR	714141	Identifier	r_io_desc_get		714131	0					
ANR	714142	ArgumentList	core -> io		714131	1					
ANR	714143	Argument	core -> io		714131	0					
ANR	714144	PtrMemberAccess	core -> io		714131	0					
ANR	714145	Identifier	core		714131	0					
ANR	714146	Identifier	io		714131	1					
ANR	714147	Argument	fd		714131	1					
ANR	714148	Identifier	fd		714131	0					
ANR	714149	OrExpression	"UT64_ADD_OVFCHK ( sec -> size , sec -> paddr ) || UT64_ADD_OVFCHK ( sec -> size , addr ) || ! sec -> vsize"		714131	1		||			
ANR	714150	CallExpression	"UT64_ADD_OVFCHK ( sec -> size , sec -> paddr )"		714131	0					
ANR	714151	Callee	UT64_ADD_OVFCHK		714131	0					
ANR	714152	Identifier	UT64_ADD_OVFCHK		714131	0					
ANR	714153	ArgumentList	sec -> size		714131	1					
ANR	714154	Argument	sec -> size		714131	0					
ANR	714155	PtrMemberAccess	sec -> size		714131	0					
ANR	714156	Identifier	sec		714131	0					
ANR	714157	Identifier	size		714131	1					
ANR	714158	Argument	sec -> paddr		714131	1					
ANR	714159	PtrMemberAccess	sec -> paddr		714131	0					
ANR	714160	Identifier	sec		714131	0					
ANR	714161	Identifier	paddr		714131	1					
ANR	714162	OrExpression	"UT64_ADD_OVFCHK ( sec -> size , addr ) || ! sec -> vsize"		714131	1		||			
ANR	714163	CallExpression	"UT64_ADD_OVFCHK ( sec -> size , addr )"		714131	0					
ANR	714164	Callee	UT64_ADD_OVFCHK		714131	0					
ANR	714165	Identifier	UT64_ADD_OVFCHK		714131	0					
ANR	714166	ArgumentList	sec -> size		714131	1					
ANR	714167	Argument	sec -> size		714131	0					
ANR	714168	PtrMemberAccess	sec -> size		714131	0					
ANR	714169	Identifier	sec		714131	0					
ANR	714170	Identifier	size		714131	1					
ANR	714171	Argument	addr		714131	1					
ANR	714172	Identifier	addr		714131	0					
ANR	714173	UnaryOperationExpression	! sec -> vsize		714131	1					
ANR	714174	UnaryOperator	!		714131	0					
ANR	714175	PtrMemberAccess	sec -> vsize		714131	1					
ANR	714176	Identifier	sec		714131	0					
ANR	714177	Identifier	vsize		714131	1					
ANR	714178	CompoundStatement		3:55:137:137	714131	1					
ANR	714179	ReturnStatement	return ;	2390:2:68842:68848	714131	0	True				
ANR	714180	IdentifierDeclStatement	ut64 size = sec -> vsize ;	2393:1:68855:68877	714131	1	True				
ANR	714181	IdentifierDecl	size = sec -> vsize		714131	0					
ANR	714182	IdentifierDeclType	ut64		714131	0					
ANR	714183	Identifier	size		714131	1					
ANR	714184	AssignmentExpression	size = sec -> vsize		714131	2		=			
ANR	714185	Identifier	size		714131	0					
ANR	714186	PtrMemberAccess	sec -> vsize		714131	1					
ANR	714187	Identifier	sec		714131	0					
ANR	714188	Identifier	vsize		714131	1					
ANR	714189	IfStatement	if ( sec -> vsize > sec -> size )		714131	2					
ANR	714190	Condition	sec -> vsize > sec -> size	2396:5:69007:69028	714131	0	True				
ANR	714191	RelationalExpression	sec -> vsize > sec -> size		714131	0		>			
ANR	714192	PtrMemberAccess	sec -> vsize		714131	0					
ANR	714193	Identifier	sec		714131	0					
ANR	714194	Identifier	vsize		714131	1					
ANR	714195	PtrMemberAccess	sec -> size		714131	1					
ANR	714196	Identifier	sec		714131	0					
ANR	714197	Identifier	size		714131	1					
ANR	714198	CompoundStatement		10:29:330:330	714131	1					
ANR	714199	IfStatement	"if ( ! io_create_mem_map ( core -> io , sec , addr + sec -> size ) )"		714131	0					
ANR	714200	Condition	"! io_create_mem_map ( core -> io , sec , addr + sec -> size )"	2397:6:69039:69090	714131	0	True				
ANR	714201	UnaryOperationExpression	"! io_create_mem_map ( core -> io , sec , addr + sec -> size )"		714131	0					
ANR	714202	UnaryOperator	!		714131	0					
ANR	714203	CallExpression	"io_create_mem_map ( core -> io , sec , addr + sec -> size )"		714131	1					
ANR	714204	Callee	io_create_mem_map		714131	0					
ANR	714205	Identifier	io_create_mem_map		714131	0					
ANR	714206	ArgumentList	core -> io		714131	1					
ANR	714207	Argument	core -> io		714131	0					
ANR	714208	PtrMemberAccess	core -> io		714131	0					
ANR	714209	Identifier	core		714131	0					
ANR	714210	Identifier	io		714131	1					
ANR	714211	Argument	sec		714131	1					
ANR	714212	Identifier	sec		714131	0					
ANR	714213	Argument	addr + sec -> size		714131	2					
ANR	714214	AdditiveExpression	addr + sec -> size		714131	0		+			
ANR	714215	Identifier	addr		714131	0					
ANR	714216	PtrMemberAccess	sec -> size		714131	1					
ANR	714217	Identifier	sec		714131	0					
ANR	714218	Identifier	size		714131	1					
ANR	714219	CompoundStatement		11:60:392:392	714131	1					
ANR	714220	ReturnStatement	return ;	2398:3:69098:69104	714131	0	True				
ANR	714221	ExpressionStatement	size = sec -> size	2401:2:69113:69129	714131	1	True				
ANR	714222	AssignmentExpression	size = sec -> size		714131	0		=			
ANR	714223	Identifier	size		714131	0					
ANR	714224	PtrMemberAccess	sec -> size		714131	1					
ANR	714225	Identifier	sec		714131	0					
ANR	714226	Identifier	size		714131	1					
ANR	714227	IdentifierDeclStatement	"char * map_name = r_str_newf ( ""fmap.%s"" , sec -> name ) ;"	2405:1:69210:69260	714131	3	True				
ANR	714228	IdentifierDecl	"* map_name = r_str_newf ( ""fmap.%s"" , sec -> name )"		714131	0					
ANR	714229	IdentifierDeclType	char *		714131	0					
ANR	714230	Identifier	map_name		714131	1					
ANR	714231	AssignmentExpression	"* map_name = r_str_newf ( ""fmap.%s"" , sec -> name )"		714131	2		=			
ANR	714232	Identifier	map_name		714131	0					
ANR	714233	CallExpression	"r_str_newf ( ""fmap.%s"" , sec -> name )"		714131	1					
ANR	714234	Callee	r_str_newf		714131	0					
ANR	714235	Identifier	r_str_newf		714131	0					
ANR	714236	ArgumentList	"""fmap.%s"""		714131	1					
ANR	714237	Argument	"""fmap.%s"""		714131	0					
ANR	714238	PrimaryExpression	"""fmap.%s"""		714131	0					
ANR	714239	Argument	sec -> name		714131	1					
ANR	714240	PtrMemberAccess	sec -> name		714131	0					
ANR	714241	Identifier	sec		714131	0					
ANR	714242	Identifier	name		714131	1					
ANR	714243	IfStatement	if ( ! map_name )		714131	4					
ANR	714244	Condition	! map_name	2406:5:69267:69275	714131	0	True				
ANR	714245	UnaryOperationExpression	! map_name		714131	0					
ANR	714246	UnaryOperator	!		714131	0					
ANR	714247	Identifier	map_name		714131	1					
ANR	714248	CompoundStatement		20:16:577:577	714131	1					
ANR	714249	ReturnStatement	return ;	2407:2:69282:69288	714131	0	True				
ANR	714250	IdentifierDeclStatement	int perm = sec -> perm ;	2410:1:69295:69315	714131	5	True				
ANR	714251	IdentifierDecl	perm = sec -> perm		714131	0					
ANR	714252	IdentifierDeclType	int		714131	0					
ANR	714253	Identifier	perm		714131	1					
ANR	714254	AssignmentExpression	perm = sec -> perm		714131	2		=			
ANR	714255	Identifier	perm		714131	0					
ANR	714256	PtrMemberAccess	sec -> perm		714131	1					
ANR	714257	Identifier	sec		714131	0					
ANR	714258	Identifier	perm		714131	1					
ANR	714259	IfStatement	"if ( sec -> name && strstr ( sec -> name , ""text"" ) )"		714131	6					
ANR	714260	Condition	"sec -> name && strstr ( sec -> name , ""text"" )"	2412:5:69371:69410	714131	0	True				
ANR	714261	AndExpression	"sec -> name && strstr ( sec -> name , ""text"" )"		714131	0		&&			
ANR	714262	PtrMemberAccess	sec -> name		714131	0					
ANR	714263	Identifier	sec		714131	0					
ANR	714264	Identifier	name		714131	1					
ANR	714265	CallExpression	"strstr ( sec -> name , ""text"" )"		714131	1					
ANR	714266	Callee	strstr		714131	0					
ANR	714267	Identifier	strstr		714131	0					
ANR	714268	ArgumentList	sec -> name		714131	1					
ANR	714269	Argument	sec -> name		714131	0					
ANR	714270	PtrMemberAccess	sec -> name		714131	0					
ANR	714271	Identifier	sec		714131	0					
ANR	714272	Identifier	name		714131	1					
ANR	714273	Argument	"""text"""		714131	1					
ANR	714274	PrimaryExpression	"""text"""		714131	0					
ANR	714275	CompoundStatement		26:47:712:712	714131	1					
ANR	714276	ExpressionStatement	perm |= R_PERM_X	2413:2:69417:69433	714131	0	True				
ANR	714277	AssignmentExpression	perm |= R_PERM_X		714131	0		|=			
ANR	714278	Identifier	perm		714131	0					
ANR	714279	Identifier	R_PERM_X		714131	1					
ANR	714280	IdentifierDeclStatement	"RIOMap * map = r_io_map_add_batch ( core -> io , fd , perm , sec -> paddr , addr , size ) ;"	2416:1:69440:69517	714131	7	True				
ANR	714281	IdentifierDecl	"* map = r_io_map_add_batch ( core -> io , fd , perm , sec -> paddr , addr , size )"		714131	0					
ANR	714282	IdentifierDeclType	RIOMap *		714131	0					
ANR	714283	Identifier	map		714131	1					
ANR	714284	AssignmentExpression	"* map = r_io_map_add_batch ( core -> io , fd , perm , sec -> paddr , addr , size )"		714131	2		=			
ANR	714285	Identifier	map		714131	0					
ANR	714286	CallExpression	"r_io_map_add_batch ( core -> io , fd , perm , sec -> paddr , addr , size )"		714131	1					
ANR	714287	Callee	r_io_map_add_batch		714131	0					
ANR	714288	Identifier	r_io_map_add_batch		714131	0					
ANR	714289	ArgumentList	core -> io		714131	1					
ANR	714290	Argument	core -> io		714131	0					
ANR	714291	PtrMemberAccess	core -> io		714131	0					
ANR	714292	Identifier	core		714131	0					
ANR	714293	Identifier	io		714131	1					
ANR	714294	Argument	fd		714131	1					
ANR	714295	Identifier	fd		714131	0					
ANR	714296	Argument	perm		714131	2					
ANR	714297	Identifier	perm		714131	0					
ANR	714298	Argument	sec -> paddr		714131	3					
ANR	714299	PtrMemberAccess	sec -> paddr		714131	0					
ANR	714300	Identifier	sec		714131	0					
ANR	714301	Identifier	paddr		714131	1					
ANR	714302	Argument	addr		714131	4					
ANR	714303	Identifier	addr		714131	0					
ANR	714304	Argument	size		714131	5					
ANR	714305	Identifier	size		714131	0					
ANR	714306	IfStatement	if ( ! map )		714131	8					
ANR	714307	Condition	! map	2417:5:69524:69527	714131	0	True				
ANR	714308	UnaryOperationExpression	! map		714131	0					
ANR	714309	UnaryOperator	!		714131	0					
ANR	714310	Identifier	map		714131	1					
ANR	714311	CompoundStatement		31:11:829:829	714131	1					
ANR	714312	ExpressionStatement	free ( map_name )	2418:2:69534:69549	714131	0	True				
ANR	714313	CallExpression	free ( map_name )		714131	0					
ANR	714314	Callee	free		714131	0					
ANR	714315	Identifier	free		714131	0					
ANR	714316	ArgumentList	map_name		714131	1					
ANR	714317	Argument	map_name		714131	0					
ANR	714318	Identifier	map_name		714131	0					
ANR	714319	ReturnStatement	return ;	2419:2:69553:69559	714131	1	True				
ANR	714320	ExpressionStatement	map -> name = map_name	2421:1:69565:69585	714131	9	True				
ANR	714321	AssignmentExpression	map -> name = map_name		714131	0		=			
ANR	714322	PtrMemberAccess	map -> name		714131	0					
ANR	714323	Identifier	map		714131	0					
ANR	714324	Identifier	name		714131	1					
ANR	714325	Identifier	map_name		714131	1					
ANR	714326	ReturnStatement	return ;	2422:1:69588:69594	714131	10	True				
ANR	714327	ReturnType	static void		714131	1					
ANR	714328	Identifier	add_section		714131	2					
ANR	714329	ParameterList	"RCore * core , RBinSection * sec , ut64 addr , int fd"		714131	3					
ANR	714330	Parameter	RCore * core	2387:24:68650:68660	714131	0	True				
ANR	714331	ParameterType	RCore *		714131	0					
ANR	714332	Identifier	core		714131	1					
ANR	714333	Parameter	RBinSection * sec	2387:37:68663:68678	714131	1	True				
ANR	714334	ParameterType	RBinSection *		714131	0					
ANR	714335	Identifier	sec		714131	1					
ANR	714336	Parameter	ut64 addr	2387:55:68681:68689	714131	2	True				
ANR	714337	ParameterType	ut64		714131	0					
ANR	714338	Identifier	addr		714131	1					
ANR	714339	Parameter	int fd	2387:66:68692:68697	714131	3	True				
ANR	714340	ParameterType	int		714131	0					
ANR	714341	Identifier	fd		714131	1					
ANR	714342	CFGEntryNode	ENTRY		714131		True				
ANR	714343	CFGExitNode	EXIT		714131		True				
ANR	714344	Symbol	perm		714131						
ANR	714345	Symbol	sec -> name		714131						
ANR	714346	Symbol	* map		714131						
ANR	714347	Symbol	* core		714131						
ANR	714348	Symbol	r_str_newf		714131						
ANR	714349	Symbol	sec		714131						
ANR	714350	Symbol	R_PERM_X		714131						
ANR	714351	Symbol	sec -> size		714131						
ANR	714352	Symbol	map -> name		714131						
ANR	714353	Symbol	core -> io		714131						
ANR	714354	Symbol	sec -> vsize		714131						
ANR	714355	Symbol	addr		714131						
ANR	714356	Symbol	map		714131						
ANR	714357	Symbol	r_io_map_add_batch		714131						
ANR	714358	Symbol	r_io_desc_get		714131						
ANR	714359	Symbol	sec -> paddr		714131						
ANR	714360	Symbol	map_name		714131						
ANR	714361	Symbol	core		714131						
ANR	714362	Symbol	UT64_ADD_OVFCHK		714131						
ANR	714363	Symbol	size		714131						
ANR	714364	Symbol	strstr		714131						
ANR	714365	Symbol	* sec		714131						
ANR	714366	Symbol	fd		714131						
ANR	714367	Symbol	sec -> perm		714131						
ANR	714368	Symbol	io_create_mem_map		714131						
ANR	714369	ClassDef	io_bin_section_info_t	2425:0:69599:69670							
ANR	714370	DeclStmt									
ANR	714371	Decl							RBinSection	RBinSection *	sec
ANR	714372	DeclStmt									
ANR	714373	Decl							ut64	ut64	addr
ANR	714374	DeclStmt									
ANR	714375	Decl							int	int	fd
ANR	714376	Function	bin_sections	2431:0:69674:78498							
ANR	714377	FunctionDef	"bin_sections (RCore * r , int mode , ut64 laddr , int va , ut64 at , const char * name , const char * chksum , bool print_segments)"		714376	0					
ANR	714378	CompoundStatement		2431:132:69806:78498	714376	0					
ANR	714379	IdentifierDeclStatement	char * str = NULL ;	2432:1:69809:69825	714376	0	True				
ANR	714380	IdentifierDecl	* str = NULL		714376	0					
ANR	714381	IdentifierDeclType	char *		714376	0					
ANR	714382	Identifier	str		714376	1					
ANR	714383	AssignmentExpression	* str = NULL		714376	2		=			
ANR	714384	Identifier	NULL		714376	0					
ANR	714385	Identifier	NULL		714376	1					
ANR	714386	IdentifierDeclStatement	RBinSection * section ;	2433:1:69828:69848	714376	1	True				
ANR	714387	IdentifierDecl	* section		714376	0					
ANR	714388	IdentifierDeclType	RBinSection *		714376	0					
ANR	714389	Identifier	section		714376	1					
ANR	714390	IdentifierDeclStatement	RBinInfo * info = NULL ;	2434:1:69851:69872	714376	2	True				
ANR	714391	IdentifierDecl	* info = NULL		714376	0					
ANR	714392	IdentifierDeclType	RBinInfo *		714376	0					
ANR	714393	Identifier	info		714376	1					
ANR	714394	AssignmentExpression	* info = NULL		714376	2		=			
ANR	714395	Identifier	NULL		714376	0					
ANR	714396	Identifier	NULL		714376	1					
ANR	714397	IdentifierDeclStatement	RList * sections ;	2435:1:69875:69890	714376	3	True				
ANR	714398	IdentifierDecl	* sections		714376	0					
ANR	714399	IdentifierDeclType	RList *		714376	0					
ANR	714400	Identifier	sections		714376	1					
ANR	714401	IdentifierDeclStatement	RListIter * iter ;	2436:1:69893:69908	714376	4	True				
ANR	714402	IdentifierDecl	* iter		714376	0					
ANR	714403	IdentifierDeclType	RListIter *		714376	0					
ANR	714404	Identifier	iter		714376	1					
ANR	714405	IdentifierDeclStatement	RListIter * last_processed = NULL ;	2437:1:69911:69943	714376	5	True				
ANR	714406	IdentifierDecl	* last_processed = NULL		714376	0					
ANR	714407	IdentifierDeclType	RListIter *		714376	0					
ANR	714408	Identifier	last_processed		714376	1					
ANR	714409	AssignmentExpression	* last_processed = NULL		714376	2		=			
ANR	714410	Identifier	NULL		714376	0					
ANR	714411	Identifier	NULL		714376	1					
ANR	714412	IdentifierDeclStatement	int i = 0 ;	2438:1:69946:69955	714376	6	True				
ANR	714413	IdentifierDecl	i = 0		714376	0					
ANR	714414	IdentifierDeclType	int		714376	0					
ANR	714415	Identifier	i		714376	1					
ANR	714416	AssignmentExpression	i = 0		714376	2		=			
ANR	714417	Identifier	i		714376	0					
ANR	714418	PrimaryExpression	0		714376	1					
ANR	714419	IdentifierDeclStatement	int fd = - 1 ;	2439:1:69958:69969	714376	7	True				
ANR	714420	IdentifierDecl	fd = - 1		714376	0					
ANR	714421	IdentifierDeclType	int		714376	0					
ANR	714422	Identifier	fd		714376	1					
ANR	714423	AssignmentExpression	fd = - 1		714376	2		=			
ANR	714424	Identifier	fd		714376	0					
ANR	714425	UnaryOperationExpression	- 1		714376	1					
ANR	714426	UnaryOperator	-		714376	0					
ANR	714427	PrimaryExpression	1		714376	1					
ANR	714428	IdentifierDeclStatement	bool printHere = false ;	2440:1:69972:69994	714376	8	True				
ANR	714429	IdentifierDecl	printHere = false		714376	0					
ANR	714430	IdentifierDeclType	bool		714376	0					
ANR	714431	Identifier	printHere		714376	1					
ANR	714432	AssignmentExpression	printHere = false		714376	2		=			
ANR	714433	Identifier	false		714376	0					
ANR	714434	Identifier	false		714376	1					
ANR	714435	ExpressionStatement	sections = r_bin_get_sections ( r -> bin )	2441:1:69997:70035	714376	9	True				
ANR	714436	AssignmentExpression	sections = r_bin_get_sections ( r -> bin )		714376	0		=			
ANR	714437	Identifier	sections		714376	0					
ANR	714438	CallExpression	r_bin_get_sections ( r -> bin )		714376	1					
ANR	714439	Callee	r_bin_get_sections		714376	0					
ANR	714440	Identifier	r_bin_get_sections		714376	0					
ANR	714441	ArgumentList	r -> bin		714376	1					
ANR	714442	Argument	r -> bin		714376	0					
ANR	714443	PtrMemberAccess	r -> bin		714376	0					
ANR	714444	Identifier	r		714376	0					
ANR	714445	Identifier	bin		714376	1					
ANR	714446	IdentifierDeclStatement	"bool inDebugger = r_config_get_i ( r -> config , ""cfg.debug"" ) ;"	2443:1:70058:70115	714376	10	True				
ANR	714447	IdentifierDecl	"inDebugger = r_config_get_i ( r -> config , ""cfg.debug"" )"		714376	0					
ANR	714448	IdentifierDeclType	bool		714376	0					
ANR	714449	Identifier	inDebugger		714376	1					
ANR	714450	AssignmentExpression	"inDebugger = r_config_get_i ( r -> config , ""cfg.debug"" )"		714376	2		=			
ANR	714451	Identifier	inDebugger		714376	0					
ANR	714452	CallExpression	"r_config_get_i ( r -> config , ""cfg.debug"" )"		714376	1					
ANR	714453	Callee	r_config_get_i		714376	0					
ANR	714454	Identifier	r_config_get_i		714376	0					
ANR	714455	ArgumentList	r -> config		714376	1					
ANR	714456	Argument	r -> config		714376	0					
ANR	714457	PtrMemberAccess	r -> config		714376	0					
ANR	714458	Identifier	r		714376	0					
ANR	714459	Identifier	config		714376	1					
ANR	714460	Argument	"""cfg.debug"""		714376	1					
ANR	714461	PrimaryExpression	"""cfg.debug"""		714376	0					
ANR	714462	IdentifierDeclStatement	HtPP * dup_chk_ht = ht_pp_new0 ( ) ;	2445:1:70125:70157	714376	11	True				
ANR	714463	IdentifierDecl	* dup_chk_ht = ht_pp_new0 ( )		714376	0					
ANR	714464	IdentifierDeclType	HtPP *		714376	0					
ANR	714465	Identifier	dup_chk_ht		714376	1					
ANR	714466	AssignmentExpression	* dup_chk_ht = ht_pp_new0 ( )		714376	2		=			
ANR	714467	Identifier	dup_chk_ht		714376	0					
ANR	714468	CallExpression	ht_pp_new0 ( )		714376	1					
ANR	714469	Callee	ht_pp_new0		714376	0					
ANR	714470	Identifier	ht_pp_new0		714376	0					
ANR	714471	ArgumentList			714376	1					
ANR	714472	IdentifierDeclStatement	bool ret = false ;	2446:1:70160:70176	714376	12	True				
ANR	714473	IdentifierDecl	ret = false		714376	0					
ANR	714474	IdentifierDeclType	bool		714376	0					
ANR	714475	Identifier	ret		714376	1					
ANR	714476	AssignmentExpression	ret = false		714376	2		=			
ANR	714477	Identifier	false		714376	0					
ANR	714478	Identifier	false		714376	1					
ANR	714479	IdentifierDeclStatement	"const char * type = print_segments ? ""segment"" : ""section"" ;"	2447:1:70179:70236	714376	13	True				
ANR	714480	IdentifierDecl	"* type = print_segments ? ""segment"" : ""section"""		714376	0					
ANR	714481	IdentifierDeclType	const char *		714376	0					
ANR	714482	Identifier	type		714376	1					
ANR	714483	AssignmentExpression	"* type = print_segments ? ""segment"" : ""section"""		714376	2		=			
ANR	714484	Identifier	type		714376	0					
ANR	714485	ConditionalExpression	"print_segments ? ""segment"" : ""section"""		714376	1					
ANR	714486	Condition	print_segments		714376	0					
ANR	714487	Identifier	print_segments		714376	0					
ANR	714488	PrimaryExpression	"""segment"""		714376	1					
ANR	714489	PrimaryExpression	"""section"""		714376	2					
ANR	714490	IdentifierDeclStatement	bool segments_only = true ;	2448:1:70239:70264	714376	14	True				
ANR	714491	IdentifierDecl	segments_only = true		714376	0					
ANR	714492	IdentifierDeclType	bool		714376	0					
ANR	714493	Identifier	segments_only		714376	1					
ANR	714494	AssignmentExpression	segments_only = true		714376	2		=			
ANR	714495	Identifier	true		714376	0					
ANR	714496	Identifier	true		714376	1					
ANR	714497	IdentifierDeclStatement	RList * io_section_info = NULL ;	2449:1:70267:70296	714376	15	True				
ANR	714498	IdentifierDecl	* io_section_info = NULL		714376	0					
ANR	714499	IdentifierDeclType	RList *		714376	0					
ANR	714500	Identifier	io_section_info		714376	1					
ANR	714501	AssignmentExpression	* io_section_info = NULL		714376	2		=			
ANR	714502	Identifier	NULL		714376	0					
ANR	714503	Identifier	NULL		714376	1					
ANR	714504	IfStatement	if ( ! dup_chk_ht )		714376	16					
ANR	714505	Condition	! dup_chk_ht	2451:5:70304:70314	714376	0	True				
ANR	714506	UnaryOperationExpression	! dup_chk_ht		714376	0					
ANR	714507	UnaryOperator	!		714376	0					
ANR	714508	Identifier	dup_chk_ht		714376	1					
ANR	714509	CompoundStatement		21:18:510:510	714376	1					
ANR	714510	ReturnStatement	return false ;	2452:2:70321:70333	714376	0	True				
ANR	714511	Identifier	false		714376	0					
ANR	714512	IfStatement	if ( chksum && * chksum == '.' )		714376	17					
ANR	714513	Condition	chksum && * chksum == '.'	2455:5:70344:70367	714376	0	True				
ANR	714514	AndExpression	chksum && * chksum == '.'		714376	0		&&			
ANR	714515	Identifier	chksum		714376	0					
ANR	714516	EqualityExpression	* chksum == '.'		714376	1		==			
ANR	714517	UnaryOperationExpression	* chksum		714376	0					
ANR	714518	UnaryOperator	*		714376	0					
ANR	714519	Identifier	chksum		714376	1					
ANR	714520	PrimaryExpression	'.'		714376	1					
ANR	714521	CompoundStatement		25:31:563:563	714376	1					
ANR	714522	ExpressionStatement	printHere = true	2456:2:70374:70390	714376	0	True				
ANR	714523	AssignmentExpression	printHere = true		714376	0		=			
ANR	714524	Identifier	printHere		714376	0					
ANR	714525	Identifier	true		714376	1					
ANR	714526	IfStatement	if ( IS_MODE_EQUAL ( mode ) )		714376	18					
ANR	714527	Condition	IS_MODE_EQUAL ( mode )	2458:5:70400:70419	714376	0	True				
ANR	714528	CallExpression	IS_MODE_EQUAL ( mode )		714376	0					
ANR	714529	Callee	IS_MODE_EQUAL		714376	0					
ANR	714530	Identifier	IS_MODE_EQUAL		714376	0					
ANR	714531	ArgumentList	mode		714376	1					
ANR	714532	Argument	mode		714376	0					
ANR	714533	Identifier	mode		714376	0					
ANR	714534	CompoundStatement		34:2:751:765	714376	1					
ANR	714535	IdentifierDeclStatement	int cols = r_cons_get_size ( NULL ) ;	2459:2:70426:70459	714376	0	True				
ANR	714536	IdentifierDecl	cols = r_cons_get_size ( NULL )		714376	0					
ANR	714537	IdentifierDeclType	int		714376	0					
ANR	714538	Identifier	cols		714376	1					
ANR	714539	AssignmentExpression	cols = r_cons_get_size ( NULL )		714376	2		=			
ANR	714540	Identifier	cols		714376	0					
ANR	714541	CallExpression	r_cons_get_size ( NULL )		714376	1					
ANR	714542	Callee	r_cons_get_size		714376	0					
ANR	714543	Identifier	r_cons_get_size		714376	0					
ANR	714544	ArgumentList	NULL		714376	1					
ANR	714545	Argument	NULL		714376	0					
ANR	714546	Identifier	NULL		714376	0					
ANR	714547	IdentifierDeclStatement	RList * list = r_list_newf ( ( RListFree ) r_listinfo_free ) ;	2460:2:70463:70518	714376	1	True				
ANR	714548	IdentifierDecl	* list = r_list_newf ( ( RListFree ) r_listinfo_free )		714376	0					
ANR	714549	IdentifierDeclType	RList *		714376	0					
ANR	714550	Identifier	list		714376	1					
ANR	714551	AssignmentExpression	* list = r_list_newf ( ( RListFree ) r_listinfo_free )		714376	2		=			
ANR	714552	Identifier	list		714376	0					
ANR	714553	CallExpression	r_list_newf ( ( RListFree ) r_listinfo_free )		714376	1					
ANR	714554	Callee	r_list_newf		714376	0					
ANR	714555	Identifier	r_list_newf		714376	0					
ANR	714556	ArgumentList	( RListFree ) r_listinfo_free		714376	1					
ANR	714557	Argument	( RListFree ) r_listinfo_free		714376	0					
ANR	714558	CastExpression	( RListFree ) r_listinfo_free		714376	0					
ANR	714559	CastTarget	RListFree		714376	0					
ANR	714560	Identifier	r_listinfo_free		714376	1					
ANR	714561	IfStatement	if ( ! list )		714376	2					
ANR	714562	Condition	! list	2461:6:70526:70530	714376	0	True				
ANR	714563	UnaryOperationExpression	! list		714376	0					
ANR	714564	UnaryOperator	!		714376	0					
ANR	714565	Identifier	list		714376	1					
ANR	714566	CompoundStatement		31:13:726:726	714376	1					
ANR	714567	ReturnStatement	return false ;	2462:3:70538:70550	714376	0	True				
ANR	714568	Identifier	false		714376	0					
ANR	714569	IdentifierDeclStatement	RBinSection * s ;	2464:2:70558:70572	714376	3	True				
ANR	714570	IdentifierDecl	* s		714376	0					
ANR	714571	IdentifierDeclType	RBinSection *		714376	0					
ANR	714572	Identifier	s		714376	1					
ANR	714573	Statement	r_list_foreach	2465:2:70576:70589	714376	4	True				
ANR	714574	Statement	(	2465:17:70591:70591	714376	5	True				
ANR	714575	Statement	sections	2465:18:70592:70599	714376	6	True				
ANR	714576	Statement	","	2465:26:70600:70600	714376	7	True				
ANR	714577	Statement	iter	2465:28:70602:70605	714376	8	True				
ANR	714578	Statement	","	2465:32:70606:70606	714376	9	True				
ANR	714579	Statement	s	2465:34:70608:70608	714376	10	True				
ANR	714580	Statement	)	2465:35:70609:70609	714376	11	True				
ANR	714581	CompoundStatement		43:3:1048:1129	714376	12					
ANR	714582	IdentifierDeclStatement	char humansz [ 8 ] ;	2466:3:70616:70631	714376	0	True				
ANR	714583	IdentifierDecl	humansz [ 8 ]		714376	0					
ANR	714584	IdentifierDeclType	char [ 8 ]		714376	0					
ANR	714585	Identifier	humansz		714376	1					
ANR	714586	PrimaryExpression	8		714376	2					
ANR	714587	IfStatement	if ( print_segments != s -> is_segment )		714376	1					
ANR	714588	Condition	print_segments != s -> is_segment	2467:7:70640:70670	714376	0	True				
ANR	714589	EqualityExpression	print_segments != s -> is_segment		714376	0		!=			
ANR	714590	Identifier	print_segments		714376	0					
ANR	714591	PtrMemberAccess	s -> is_segment		714376	1					
ANR	714592	Identifier	s		714376	0					
ANR	714593	Identifier	is_segment		714376	1					
ANR	714594	CompoundStatement		37:40:866:866	714376	1					
ANR	714595	ContinueStatement	continue ;	2468:4:70679:70687	714376	0	True				
ANR	714596	Statement	RInterval	2470:3:70697:70705	714376	2	True				
ANR	714597	Statement	pitv	2470:13:70707:70710	714376	3	True				
ANR	714598	Statement	=	2470:18:70712:70712	714376	4	True				
ANR	714599	Statement	(	2470:20:70714:70714	714376	5	True				
ANR	714600	Statement	RInterval	2470:21:70715:70723	714376	6	True				
ANR	714601	Statement	)	2470:30:70724:70724	714376	7	True				
ANR	714602	CompoundStatement		40:31:918:918	714376	8					
ANR	714603	Statement	s	2470:32:70726:70726	714376	0	True				
ANR	714604	Statement	->	2470:33:70727:70728	714376	1	True				
ANR	714605	Statement	paddr	2470:35:70729:70733	714376	2	True				
ANR	714606	Statement	","	2470:40:70734:70734	714376	3	True				
ANR	714607	Statement	s	2470:42:70736:70736	714376	4	True				
ANR	714608	Statement	->	2470:43:70737:70738	714376	5	True				
ANR	714609	Statement	size	2470:45:70739:70742	714376	6	True				
ANR	714610	ExpressionStatement		2470:50:70744:70744	714376	9	True				
ANR	714611	Statement	RInterval	2471:3:70749:70757	714376	10	True				
ANR	714612	Statement	vitv	2471:13:70759:70762	714376	11	True				
ANR	714613	Statement	=	2471:18:70764:70764	714376	12	True				
ANR	714614	Statement	(	2471:20:70766:70766	714376	13	True				
ANR	714615	Statement	RInterval	2471:21:70767:70775	714376	14	True				
ANR	714616	Statement	)	2471:30:70776:70776	714376	15	True				
ANR	714617	CompoundStatement		41:31:970:970	714376	16					
ANR	714618	Statement	s	2471:32:70778:70778	714376	0	True				
ANR	714619	Statement	->	2471:33:70779:70780	714376	1	True				
ANR	714620	Statement	vaddr	2471:35:70781:70785	714376	2	True				
ANR	714621	Statement	","	2471:40:70786:70786	714376	3	True				
ANR	714622	Statement	s	2471:42:70788:70788	714376	4	True				
ANR	714623	Statement	->	2471:43:70789:70790	714376	5	True				
ANR	714624	Statement	vsize	2471:45:70791:70795	714376	6	True				
ANR	714625	ExpressionStatement		2471:51:70797:70797	714376	17	True				
ANR	714626	ExpressionStatement	"r_num_units ( humansz , sizeof ( humansz ) , s -> size )"	2472:3:70802:70850	714376	18	True				
ANR	714627	CallExpression	"r_num_units ( humansz , sizeof ( humansz ) , s -> size )"		714376	0					
ANR	714628	Callee	r_num_units		714376	0					
ANR	714629	Identifier	r_num_units		714376	0					
ANR	714630	ArgumentList	humansz		714376	1					
ANR	714631	Argument	humansz		714376	0					
ANR	714632	Identifier	humansz		714376	0					
ANR	714633	Argument	sizeof ( humansz )		714376	1					
ANR	714634	SizeofExpression	sizeof ( humansz )		714376	0					
ANR	714635	Sizeof	sizeof		714376	0					
ANR	714636	SizeofOperand	humansz		714376	1					
ANR	714637	Argument	s -> size		714376	2					
ANR	714638	PtrMemberAccess	s -> size		714376	0					
ANR	714639	Identifier	s		714376	0					
ANR	714640	Identifier	size		714376	1					
ANR	714641	IdentifierDeclStatement	"RListInfo * info = r_listinfo_new ( s -> name , pitv , vitv , s -> perm , strdup ( humansz ) ) ;"	2473:3:70855:70936	714376	19	True				
ANR	714642	IdentifierDecl	"* info = r_listinfo_new ( s -> name , pitv , vitv , s -> perm , strdup ( humansz ) )"		714376	0					
ANR	714643	IdentifierDeclType	RListInfo *		714376	0					
ANR	714644	Identifier	info		714376	1					
ANR	714645	AssignmentExpression	"* info = r_listinfo_new ( s -> name , pitv , vitv , s -> perm , strdup ( humansz ) )"		714376	2		=			
ANR	714646	Identifier	info		714376	0					
ANR	714647	CallExpression	"r_listinfo_new ( s -> name , pitv , vitv , s -> perm , strdup ( humansz ) )"		714376	1					
ANR	714648	Callee	r_listinfo_new		714376	0					
ANR	714649	Identifier	r_listinfo_new		714376	0					
ANR	714650	ArgumentList	s -> name		714376	1					
ANR	714651	Argument	s -> name		714376	0					
ANR	714652	PtrMemberAccess	s -> name		714376	0					
ANR	714653	Identifier	s		714376	0					
ANR	714654	Identifier	name		714376	1					
ANR	714655	Argument	pitv		714376	1					
ANR	714656	Identifier	pitv		714376	0					
ANR	714657	Argument	vitv		714376	2					
ANR	714658	Identifier	vitv		714376	0					
ANR	714659	Argument	s -> perm		714376	3					
ANR	714660	PtrMemberAccess	s -> perm		714376	0					
ANR	714661	Identifier	s		714376	0					
ANR	714662	Identifier	perm		714376	1					
ANR	714663	Argument	strdup ( humansz )		714376	4					
ANR	714664	CallExpression	strdup ( humansz )		714376	0					
ANR	714665	Callee	strdup		714376	0					
ANR	714666	Identifier	strdup		714376	0					
ANR	714667	ArgumentList	humansz		714376	1					
ANR	714668	Argument	humansz		714376	0					
ANR	714669	Identifier	humansz		714376	0					
ANR	714670	ExpressionStatement	"r_list_append ( list , info )"	2474:3:70941:70967	714376	20	True				
ANR	714671	CallExpression	"r_list_append ( list , info )"		714376	0					
ANR	714672	Callee	r_list_append		714376	0					
ANR	714673	Identifier	r_list_append		714376	0					
ANR	714674	ArgumentList	list		714376	1					
ANR	714675	Argument	list		714376	0					
ANR	714676	Identifier	list		714376	0					
ANR	714677	Argument	info		714376	1					
ANR	714678	Identifier	info		714376	0					
ANR	714679	ExpressionStatement	"r_core_visual_list ( r , list , r -> offset , - 1 , cols , r -> print -> flags & R_PRINT_FLAGS_COLOR )"	2476:2:70975:71063	714376	13	True				
ANR	714680	CallExpression	"r_core_visual_list ( r , list , r -> offset , - 1 , cols , r -> print -> flags & R_PRINT_FLAGS_COLOR )"		714376	0					
ANR	714681	Callee	r_core_visual_list		714376	0					
ANR	714682	Identifier	r_core_visual_list		714376	0					
ANR	714683	ArgumentList	r		714376	1					
ANR	714684	Argument	r		714376	0					
ANR	714685	Identifier	r		714376	0					
ANR	714686	Argument	list		714376	1					
ANR	714687	Identifier	list		714376	0					
ANR	714688	Argument	r -> offset		714376	2					
ANR	714689	PtrMemberAccess	r -> offset		714376	0					
ANR	714690	Identifier	r		714376	0					
ANR	714691	Identifier	offset		714376	1					
ANR	714692	Argument	- 1		714376	3					
ANR	714693	UnaryOperationExpression	- 1		714376	0					
ANR	714694	UnaryOperator	-		714376	0					
ANR	714695	PrimaryExpression	1		714376	1					
ANR	714696	Argument	cols		714376	4					
ANR	714697	Identifier	cols		714376	0					
ANR	714698	Argument	r -> print -> flags & R_PRINT_FLAGS_COLOR		714376	5					
ANR	714699	BitAndExpression	r -> print -> flags & R_PRINT_FLAGS_COLOR		714376	0		&			
ANR	714700	PtrMemberAccess	r -> print -> flags		714376	0					
ANR	714701	PtrMemberAccess	r -> print		714376	0					
ANR	714702	Identifier	r		714376	0					
ANR	714703	Identifier	print		714376	1					
ANR	714704	Identifier	flags		714376	1					
ANR	714705	Identifier	R_PRINT_FLAGS_COLOR		714376	1					
ANR	714706	ExpressionStatement	r_list_free ( list )	2477:2:71067:71085	714376	14	True				
ANR	714707	CallExpression	r_list_free ( list )		714376	0					
ANR	714708	Callee	r_list_free		714376	0					
ANR	714709	Identifier	r_list_free		714376	0					
ANR	714710	ArgumentList	list		714376	1					
ANR	714711	Argument	list		714376	0					
ANR	714712	Identifier	list		714376	0					
ANR	714713	GotoStatement	goto out ;	2478:2:71089:71097	714376	15	True				
ANR	714714	Identifier	out		714376	0					
ANR	714715	IfStatement	if ( IS_MODE_JSON ( mode ) && ! printHere )		714376	19					
ANR	714716	Condition	IS_MODE_JSON ( mode ) && ! printHere	2480:5:71107:71139	714376	0	True				
ANR	714717	AndExpression	IS_MODE_JSON ( mode ) && ! printHere		714376	0		&&			
ANR	714718	CallExpression	IS_MODE_JSON ( mode )		714376	0					
ANR	714719	Callee	IS_MODE_JSON		714376	0					
ANR	714720	Identifier	IS_MODE_JSON		714376	0					
ANR	714721	ArgumentList	mode		714376	1					
ANR	714722	Argument	mode		714376	0					
ANR	714723	Identifier	mode		714376	0					
ANR	714724	UnaryOperationExpression	! printHere		714376	1					
ANR	714725	UnaryOperator	!		714376	0					
ANR	714726	Identifier	printHere		714376	1					
ANR	714727	CompoundStatement		50:40:1335:1335	714376	1					
ANR	714728	ExpressionStatement	"r_cons_printf ( ""["" )"	2481:2:71146:71165	714376	0	True				
ANR	714729	CallExpression	"r_cons_printf ( ""["" )"		714376	0					
ANR	714730	Callee	r_cons_printf		714376	0					
ANR	714731	Identifier	r_cons_printf		714376	0					
ANR	714732	ArgumentList	"""["""		714376	1					
ANR	714733	Argument	"""["""		714376	0					
ANR	714734	PrimaryExpression	"""["""		714376	0					
ANR	714735	ElseStatement	else		714376	0					
ANR	714736	IfStatement	if ( IS_MODE_RAD ( mode ) && ! at )		714376	0					
ANR	714737	Condition	IS_MODE_RAD ( mode ) && ! at	2482:12:71179:71203	714376	0	True				
ANR	714738	AndExpression	IS_MODE_RAD ( mode ) && ! at		714376	0		&&			
ANR	714739	CallExpression	IS_MODE_RAD ( mode )		714376	0					
ANR	714740	Callee	IS_MODE_RAD		714376	0					
ANR	714741	Identifier	IS_MODE_RAD		714376	0					
ANR	714742	ArgumentList	mode		714376	1					
ANR	714743	Argument	mode		714376	0					
ANR	714744	Identifier	mode		714376	0					
ANR	714745	UnaryOperationExpression	! at		714376	1					
ANR	714746	UnaryOperator	!		714376	0					
ANR	714747	Identifier	at		714376	1					
ANR	714748	CompoundStatement		52:39:1399:1399	714376	1					
ANR	714749	ExpressionStatement	"r_cons_printf ( ""fs %ss\\n"" , type )"	2483:2:71210:71242	714376	0	True				
ANR	714750	CallExpression	"r_cons_printf ( ""fs %ss\\n"" , type )"		714376	0					
ANR	714751	Callee	r_cons_printf		714376	0					
ANR	714752	Identifier	r_cons_printf		714376	0					
ANR	714753	ArgumentList	"""fs %ss\\n"""		714376	1					
ANR	714754	Argument	"""fs %ss\\n"""		714376	0					
ANR	714755	PrimaryExpression	"""fs %ss\\n"""		714376	0					
ANR	714756	Argument	type		714376	1					
ANR	714757	Identifier	type		714376	0					
ANR	714758	ElseStatement	else		714376	0					
ANR	714759	IfStatement	if ( IS_MODE_NORMAL ( mode ) && ! at && ! printHere )		714376	0					
ANR	714760	Condition	IS_MODE_NORMAL ( mode ) && ! at && ! printHere	2484:12:71256:71297	714376	0	True				
ANR	714761	AndExpression	IS_MODE_NORMAL ( mode ) && ! at && ! printHere		714376	0		&&			
ANR	714762	CallExpression	IS_MODE_NORMAL ( mode )		714376	0					
ANR	714763	Callee	IS_MODE_NORMAL		714376	0					
ANR	714764	Identifier	IS_MODE_NORMAL		714376	0					
ANR	714765	ArgumentList	mode		714376	1					
ANR	714766	Argument	mode		714376	0					
ANR	714767	Identifier	mode		714376	0					
ANR	714768	AndExpression	! at && ! printHere		714376	1		&&			
ANR	714769	UnaryOperationExpression	! at		714376	0					
ANR	714770	UnaryOperator	!		714376	0					
ANR	714771	Identifier	at		714376	1					
ANR	714772	UnaryOperationExpression	! printHere		714376	1					
ANR	714773	UnaryOperator	!		714376	0					
ANR	714774	Identifier	printHere		714376	1					
ANR	714775	CompoundStatement		54:56:1493:1493	714376	1					
ANR	714776	ExpressionStatement	"r_cons_printf ( ""[%s]\\n"" , print_segments ? ""Segments"" : ""Sections"" )"	2485:2:71304:71370	714376	0	True				
ANR	714777	CallExpression	"r_cons_printf ( ""[%s]\\n"" , print_segments ? ""Segments"" : ""Sections"" )"		714376	0					
ANR	714778	Callee	r_cons_printf		714376	0					
ANR	714779	Identifier	r_cons_printf		714376	0					
ANR	714780	ArgumentList	"""[%s]\\n"""		714376	1					
ANR	714781	Argument	"""[%s]\\n"""		714376	0					
ANR	714782	PrimaryExpression	"""[%s]\\n"""		714376	0					
ANR	714783	Argument	"print_segments ? ""Segments"" : ""Sections"""		714376	1					
ANR	714784	ConditionalExpression	"print_segments ? ""Segments"" : ""Sections"""		714376	0					
ANR	714785	Condition	print_segments		714376	0					
ANR	714786	Identifier	print_segments		714376	0					
ANR	714787	PrimaryExpression	"""Segments"""		714376	1					
ANR	714788	PrimaryExpression	"""Sections"""		714376	2					
ANR	714789	ElseStatement	else		714376	0					
ANR	714790	IfStatement	if ( IS_MODE_NORMAL ( mode ) && printHere )		714376	0					
ANR	714791	Condition	IS_MODE_NORMAL ( mode ) && printHere	2486:12:71384:71417	714376	0	True				
ANR	714792	AndExpression	IS_MODE_NORMAL ( mode ) && printHere		714376	0		&&			
ANR	714793	CallExpression	IS_MODE_NORMAL ( mode )		714376	0					
ANR	714794	Callee	IS_MODE_NORMAL		714376	0					
ANR	714795	Identifier	IS_MODE_NORMAL		714376	0					
ANR	714796	ArgumentList	mode		714376	1					
ANR	714797	Argument	mode		714376	0					
ANR	714798	Identifier	mode		714376	0					
ANR	714799	Identifier	printHere		714376	1					
ANR	714800	CompoundStatement		56:48:1613:1613	714376	1					
ANR	714801	ExpressionStatement	"r_cons_printf ( ""Current section\\n"" )"	2487:2:71424:71459	714376	0	True				
ANR	714802	CallExpression	"r_cons_printf ( ""Current section\\n"" )"		714376	0					
ANR	714803	Callee	r_cons_printf		714376	0					
ANR	714804	Identifier	r_cons_printf		714376	0					
ANR	714805	ArgumentList	"""Current section\\n"""		714376	1					
ANR	714806	Argument	"""Current section\\n"""		714376	0					
ANR	714807	PrimaryExpression	"""Current section\\n"""		714376	0					
ANR	714808	ElseStatement	else		714376	0					
ANR	714809	IfStatement	if ( IS_MODE_SET ( mode ) )		714376	0					
ANR	714810	Condition	IS_MODE_SET ( mode )	2488:12:71473:71490	714376	0	True				
ANR	714811	CallExpression	IS_MODE_SET ( mode )		714376	0					
ANR	714812	Callee	IS_MODE_SET		714376	0					
ANR	714813	Identifier	IS_MODE_SET		714376	0					
ANR	714814	ArgumentList	mode		714376	1					
ANR	714815	Argument	mode		714376	0					
ANR	714816	Identifier	mode		714376	0					
ANR	714817	CompoundStatement		58:32:1686:1686	714376	1					
ANR	714818	ExpressionStatement	fd = r_core_file_cur_fd ( r )	2489:2:71497:71524	714376	0	True				
ANR	714819	AssignmentExpression	fd = r_core_file_cur_fd ( r )		714376	0		=			
ANR	714820	Identifier	fd		714376	0					
ANR	714821	CallExpression	r_core_file_cur_fd ( r )		714376	1					
ANR	714822	Callee	r_core_file_cur_fd		714376	0					
ANR	714823	Identifier	r_core_file_cur_fd		714376	0					
ANR	714824	ArgumentList	r		714376	1					
ANR	714825	Argument	r		714376	0					
ANR	714826	Identifier	r		714376	0					
ANR	714827	ExpressionStatement	"r_flag_space_set ( r -> flags , print_segments ? R_FLAGS_FS_SEGMENTS : R_FLAGS_FS_SECTIONS )"	2490:2:71528:71613	714376	1	True				
ANR	714828	CallExpression	"r_flag_space_set ( r -> flags , print_segments ? R_FLAGS_FS_SEGMENTS : R_FLAGS_FS_SECTIONS )"		714376	0					
ANR	714829	Callee	r_flag_space_set		714376	0					
ANR	714830	Identifier	r_flag_space_set		714376	0					
ANR	714831	ArgumentList	r -> flags		714376	1					
ANR	714832	Argument	r -> flags		714376	0					
ANR	714833	PtrMemberAccess	r -> flags		714376	0					
ANR	714834	Identifier	r		714376	0					
ANR	714835	Identifier	flags		714376	1					
ANR	714836	Argument	print_segments ? R_FLAGS_FS_SEGMENTS : R_FLAGS_FS_SECTIONS		714376	1					
ANR	714837	ConditionalExpression	print_segments ? R_FLAGS_FS_SEGMENTS : R_FLAGS_FS_SECTIONS		714376	0					
ANR	714838	Condition	print_segments		714376	0					
ANR	714839	Identifier	print_segments		714376	0					
ANR	714840	Identifier	R_FLAGS_FS_SEGMENTS		714376	1					
ANR	714841	Identifier	R_FLAGS_FS_SECTIONS		714376	2					
ANR	714842	IfStatement	if ( IS_MODE_NORMAL ( mode ) )		714376	20					
ANR	714843	Condition	IS_MODE_NORMAL ( mode )	2492:5:71623:71643	714376	0	True				
ANR	714844	CallExpression	IS_MODE_NORMAL ( mode )		714376	0					
ANR	714845	Callee	IS_MODE_NORMAL		714376	0					
ANR	714846	Identifier	IS_MODE_NORMAL		714376	0					
ANR	714847	ArgumentList	mode		714376	1					
ANR	714848	Argument	mode		714376	0					
ANR	714849	Identifier	mode		714376	0					
ANR	714850	CompoundStatement		62:28:1839:1839	714376	1					
ANR	714851	ExpressionStatement	"r_cons_printf ( ""Nm Paddr       Size Vaddr      Memsz Perms %sName\\n"" , chksum ? ""Checksum          "" : """" )"	2493:2:71650:71774	714376	0	True				
ANR	714852	CallExpression	"r_cons_printf ( ""Nm Paddr       Size Vaddr      Memsz Perms %sName\\n"" , chksum ? ""Checksum          "" : """" )"		714376	0					
ANR	714853	Callee	r_cons_printf		714376	0					
ANR	714854	Identifier	r_cons_printf		714376	0					
ANR	714855	ArgumentList	"""Nm Paddr       Size Vaddr      Memsz Perms %sName\\n"""		714376	1					
ANR	714856	Argument	"""Nm Paddr       Size Vaddr      Memsz Perms %sName\\n"""		714376	0					
ANR	714857	PrimaryExpression	"""Nm Paddr       Size Vaddr      Memsz Perms %sName\\n"""		714376	0					
ANR	714858	Argument	"chksum ? ""Checksum          "" : """""		714376	1					
ANR	714859	ConditionalExpression	"chksum ? ""Checksum          "" : """""		714376	0					
ANR	714860	Condition	chksum		714376	0					
ANR	714861	Identifier	chksum		714376	0					
ANR	714862	PrimaryExpression	"""Checksum          """		714376	1					
ANR	714863	PrimaryExpression	""""""		714376	2					
ANR	714864	IfStatement	if ( IS_MODE_SET ( mode ) )		714376	21					
ANR	714865	Condition	IS_MODE_SET ( mode )	2496:5:71784:71801	714376	0	True				
ANR	714866	CallExpression	IS_MODE_SET ( mode )		714376	0					
ANR	714867	Callee	IS_MODE_SET		714376	0					
ANR	714868	Identifier	IS_MODE_SET		714376	0					
ANR	714869	ArgumentList	mode		714376	1					
ANR	714870	Argument	mode		714376	0					
ANR	714871	Identifier	mode		714376	0					
ANR	714872	CompoundStatement		66:25:1997:1997	714376	1					
ANR	714873	Statement	r_list_foreach	2497:2:71808:71821	714376	0	True				
ANR	714874	Statement	(	2497:17:71823:71823	714376	1	True				
ANR	714875	Statement	sections	2497:18:71824:71831	714376	2	True				
ANR	714876	Statement	","	2497:26:71832:71832	714376	3	True				
ANR	714877	Statement	iter	2497:28:71834:71837	714376	4	True				
ANR	714878	Statement	","	2497:32:71838:71838	714376	5	True				
ANR	714879	Statement	section	2497:34:71840:71846	714376	6	True				
ANR	714880	Statement	)	2497:41:71847:71847	714376	7	True				
ANR	714881	CompoundStatement		67:43:2042:2042	714376	8					
ANR	714882	IfStatement	if ( ! section -> is_segment )		714376	0					
ANR	714883	Condition	! section -> is_segment	2498:7:71858:71877	714376	0	True				
ANR	714884	UnaryOperationExpression	! section -> is_segment		714376	0					
ANR	714885	UnaryOperator	!		714376	0					
ANR	714886	PtrMemberAccess	section -> is_segment		714376	1					
ANR	714887	Identifier	section		714376	0					
ANR	714888	Identifier	is_segment		714376	1					
ANR	714889	CompoundStatement		68:29:2073:2073	714376	1					
ANR	714890	ExpressionStatement	segments_only = false	2499:4:71886:71907	714376	0	True				
ANR	714891	AssignmentExpression	segments_only = false		714376	0		=			
ANR	714892	Identifier	segments_only		714376	0					
ANR	714893	Identifier	false		714376	1					
ANR	714894	BreakStatement	break ;	2500:4:71913:71918	714376	1	True				
ANR	714895	ExpressionStatement	io_section_info = r_list_newf ( ( RListFree ) free )	2504:2:71932:71979	714376	9	True				
ANR	714896	AssignmentExpression	io_section_info = r_list_newf ( ( RListFree ) free )		714376	0		=			
ANR	714897	Identifier	io_section_info		714376	0					
ANR	714898	CallExpression	r_list_newf ( ( RListFree ) free )		714376	1					
ANR	714899	Callee	r_list_newf		714376	0					
ANR	714900	Identifier	r_list_newf		714376	0					
ANR	714901	ArgumentList	( RListFree ) free		714376	1					
ANR	714902	Argument	( RListFree ) free		714376	0					
ANR	714903	CastExpression	( RListFree ) free		714376	0					
ANR	714904	CastTarget	RListFree		714376	0					
ANR	714905	Identifier	free		714376	1					
ANR	714906	Statement	r_list_foreach	2506:1:71985:71998	714376	22	True				
ANR	714907	Statement	(	2506:16:72000:72000	714376	23	True				
ANR	714908	Statement	sections	2506:17:72001:72008	714376	24	True				
ANR	714909	Statement	","	2506:25:72009:72009	714376	25	True				
ANR	714910	Statement	iter	2506:27:72011:72014	714376	26	True				
ANR	714911	Statement	","	2506:31:72015:72015	714376	27	True				
ANR	714912	Statement	section	2506:33:72017:72023	714376	28	True				
ANR	714913	Statement	)	2506:40:72024:72024	714376	29	True				
ANR	714914	CompoundStatement		117:2:3162:3174	714376	30					
ANR	714915	IdentifierDeclStatement	"char perms [ ] = ""----"" ;"	2507:2:72030:72051	714376	0	True				
ANR	714916	IdentifierDecl	"perms [ ] = ""----"""		714376	0					
ANR	714917	IdentifierDeclType	char [ ]		714376	0					
ANR	714918	Identifier	perms		714376	1					
ANR	714919	AssignmentExpression	"perms [ ] = ""----"""		714376	2		=			
ANR	714920	Identifier	perms		714376	0					
ANR	714921	PrimaryExpression	"""----"""		714376	1					
ANR	714922	IdentifierDeclStatement	int va_sect = va ;	2508:2:72055:72071	714376	1	True				
ANR	714923	IdentifierDecl	va_sect = va		714376	0					
ANR	714924	IdentifierDeclType	int		714376	0					
ANR	714925	Identifier	va_sect		714376	1					
ANR	714926	AssignmentExpression	va_sect = va		714376	2		=			
ANR	714927	Identifier	va		714376	0					
ANR	714928	Identifier	va		714376	1					
ANR	714929	IdentifierDeclStatement	ut64 addr ;	2509:2:72075:72084	714376	2	True				
ANR	714930	IdentifierDecl	addr		714376	0					
ANR	714931	IdentifierDeclType	ut64		714376	0					
ANR	714932	Identifier	addr		714376	1					
ANR	714933	IfStatement	if ( va && ! ( section -> perm & R_PERM_R ) )		714376	3					
ANR	714934	Condition	va && ! ( section -> perm & R_PERM_R )	2511:6:72093:72125	714376	0	True				
ANR	714935	AndExpression	va && ! ( section -> perm & R_PERM_R )		714376	0		&&			
ANR	714936	Identifier	va		714376	0					
ANR	714937	UnaryOperationExpression	! ( section -> perm & R_PERM_R )		714376	1					
ANR	714938	UnaryOperator	!		714376	0					
ANR	714939	BitAndExpression	section -> perm & R_PERM_R		714376	1		&			
ANR	714940	PtrMemberAccess	section -> perm		714376	0					
ANR	714941	Identifier	section		714376	0					
ANR	714942	Identifier	perm		714376	1					
ANR	714943	Identifier	R_PERM_R		714376	1					
ANR	714944	CompoundStatement		81:41:2321:2321	714376	1					
ANR	714945	ExpressionStatement	va_sect = VA_NOREBASE	2512:3:72133:72154	714376	0	True				
ANR	714946	AssignmentExpression	va_sect = VA_NOREBASE		714376	0		=			
ANR	714947	Identifier	va_sect		714376	0					
ANR	714948	Identifier	VA_NOREBASE		714376	1					
ANR	714949	ExpressionStatement	"addr = rva ( r -> bin , section -> paddr , section -> vaddr , va_sect )"	2514:2:72162:72222	714376	4	True				
ANR	714950	AssignmentExpression	"addr = rva ( r -> bin , section -> paddr , section -> vaddr , va_sect )"		714376	0		=			
ANR	714951	Identifier	addr		714376	0					
ANR	714952	CallExpression	"rva ( r -> bin , section -> paddr , section -> vaddr , va_sect )"		714376	1					
ANR	714953	Callee	rva		714376	0					
ANR	714954	Identifier	rva		714376	0					
ANR	714955	ArgumentList	r -> bin		714376	1					
ANR	714956	Argument	r -> bin		714376	0					
ANR	714957	PtrMemberAccess	r -> bin		714376	0					
ANR	714958	Identifier	r		714376	0					
ANR	714959	Identifier	bin		714376	1					
ANR	714960	Argument	section -> paddr		714376	1					
ANR	714961	PtrMemberAccess	section -> paddr		714376	0					
ANR	714962	Identifier	section		714376	0					
ANR	714963	Identifier	paddr		714376	1					
ANR	714964	Argument	section -> vaddr		714376	2					
ANR	714965	PtrMemberAccess	section -> vaddr		714376	0					
ANR	714966	Identifier	section		714376	0					
ANR	714967	Identifier	vaddr		714376	1					
ANR	714968	Argument	va_sect		714376	3					
ANR	714969	Identifier	va_sect		714376	0					
ANR	714970	IfStatement	"if ( name && strcmp ( section -> name , name ) )"		714376	5					
ANR	714971	Condition	"name && strcmp ( section -> name , name )"	2516:6:72231:72266	714376	0	True				
ANR	714972	AndExpression	"name && strcmp ( section -> name , name )"		714376	0		&&			
ANR	714973	Identifier	name		714376	0					
ANR	714974	CallExpression	"strcmp ( section -> name , name )"		714376	1					
ANR	714975	Callee	strcmp		714376	0					
ANR	714976	Identifier	strcmp		714376	0					
ANR	714977	ArgumentList	section -> name		714376	1					
ANR	714978	Argument	section -> name		714376	0					
ANR	714979	PtrMemberAccess	section -> name		714376	0					
ANR	714980	Identifier	section		714376	0					
ANR	714981	Identifier	name		714376	1					
ANR	714982	Argument	name		714376	1					
ANR	714983	Identifier	name		714376	0					
ANR	714984	CompoundStatement		86:44:2462:2462	714376	1					
ANR	714985	ContinueStatement	continue ;	2517:3:72274:72282	714376	0	True				
ANR	714986	IfStatement	if ( ( printHere && ! ( section -> paddr <= r -> offset && r -> offset < ( section -> paddr + section -> size ) ) ) && ( printHere && ! ( addr <= r -> offset && r -> offset < ( addr + section -> size ) ) ) )		714376	6					
ANR	714987	Condition	( printHere && ! ( section -> paddr <= r -> offset && r -> offset < ( section -> paddr + section -> size ) ) ) && ( printHere && ! ( addr <= r -> offset && r -> offset < ( addr + section -> size ) ) )	2520:6:72295:72468	714376	0	True				
ANR	714988	AndExpression	( printHere && ! ( section -> paddr <= r -> offset && r -> offset < ( section -> paddr + section -> size ) ) ) && ( printHere && ! ( addr <= r -> offset && r -> offset < ( addr + section -> size ) ) )		714376	0		&&			
ANR	714989	AndExpression	printHere && ! ( section -> paddr <= r -> offset && r -> offset < ( section -> paddr + section -> size ) )		714376	0		&&			
ANR	714990	Identifier	printHere		714376	0					
ANR	714991	UnaryOperationExpression	! ( section -> paddr <= r -> offset && r -> offset < ( section -> paddr + section -> size ) )		714376	1					
ANR	714992	UnaryOperator	!		714376	0					
ANR	714993	AndExpression	section -> paddr <= r -> offset && r -> offset < ( section -> paddr + section -> size )		714376	1		&&			
ANR	714994	RelationalExpression	section -> paddr <= r -> offset		714376	0		<=			
ANR	714995	PtrMemberAccess	section -> paddr		714376	0					
ANR	714996	Identifier	section		714376	0					
ANR	714997	Identifier	paddr		714376	1					
ANR	714998	PtrMemberAccess	r -> offset		714376	1					
ANR	714999	Identifier	r		714376	0					
ANR	715000	Identifier	offset		714376	1					
ANR	715001	RelationalExpression	r -> offset < ( section -> paddr + section -> size )		714376	1		<			
ANR	715002	PtrMemberAccess	r -> offset		714376	0					
ANR	715003	Identifier	r		714376	0					
ANR	715004	Identifier	offset		714376	1					
ANR	715005	AdditiveExpression	section -> paddr + section -> size		714376	1		+			
ANR	715006	PtrMemberAccess	section -> paddr		714376	0					
ANR	715007	Identifier	section		714376	0					
ANR	715008	Identifier	paddr		714376	1					
ANR	715009	PtrMemberAccess	section -> size		714376	1					
ANR	715010	Identifier	section		714376	0					
ANR	715011	Identifier	size		714376	1					
ANR	715012	AndExpression	printHere && ! ( addr <= r -> offset && r -> offset < ( addr + section -> size ) )		714376	1		&&			
ANR	715013	Identifier	printHere		714376	0					
ANR	715014	UnaryOperationExpression	! ( addr <= r -> offset && r -> offset < ( addr + section -> size ) )		714376	1					
ANR	715015	UnaryOperator	!		714376	0					
ANR	715016	AndExpression	addr <= r -> offset && r -> offset < ( addr + section -> size )		714376	1		&&			
ANR	715017	RelationalExpression	addr <= r -> offset		714376	0		<=			
ANR	715018	Identifier	addr		714376	0					
ANR	715019	PtrMemberAccess	r -> offset		714376	1					
ANR	715020	Identifier	r		714376	0					
ANR	715021	Identifier	offset		714376	1					
ANR	715022	RelationalExpression	r -> offset < ( addr + section -> size )		714376	1		<			
ANR	715023	PtrMemberAccess	r -> offset		714376	0					
ANR	715024	Identifier	r		714376	0					
ANR	715025	Identifier	offset		714376	1					
ANR	715026	AdditiveExpression	addr + section -> size		714376	1		+			
ANR	715027	Identifier	addr		714376	0					
ANR	715028	PtrMemberAccess	section -> size		714376	1					
ANR	715029	Identifier	section		714376	0					
ANR	715030	Identifier	size		714376	1					
ANR	715031	CompoundStatement		91:82:2664:2664	714376	1					
ANR	715032	ContinueStatement	continue ;	2522:3:72476:72484	714376	0	True				
ANR	715033	ExpressionStatement	"r_name_filter ( section -> name , strlen ( section -> name ) + 1 )"	2525:2:72493:72550	714376	7	True				
ANR	715034	CallExpression	"r_name_filter ( section -> name , strlen ( section -> name ) + 1 )"		714376	0					
ANR	715035	Callee	r_name_filter		714376	0					
ANR	715036	Identifier	r_name_filter		714376	0					
ANR	715037	ArgumentList	section -> name		714376	1					
ANR	715038	Argument	section -> name		714376	0					
ANR	715039	PtrMemberAccess	section -> name		714376	0					
ANR	715040	Identifier	section		714376	0					
ANR	715041	Identifier	name		714376	1					
ANR	715042	Argument	strlen ( section -> name ) + 1		714376	1					
ANR	715043	AdditiveExpression	strlen ( section -> name ) + 1		714376	0		+			
ANR	715044	CallExpression	strlen ( section -> name )		714376	0					
ANR	715045	Callee	strlen		714376	0					
ANR	715046	Identifier	strlen		714376	0					
ANR	715047	ArgumentList	section -> name		714376	1					
ANR	715048	Argument	section -> name		714376	0					
ANR	715049	PtrMemberAccess	section -> name		714376	0					
ANR	715050	Identifier	section		714376	0					
ANR	715051	Identifier	name		714376	1					
ANR	715052	PrimaryExpression	1		714376	1					
ANR	715053	IfStatement	"if ( at && ( ! section -> size || ! is_in_range ( at , addr , section -> size ) ) )"		714376	8					
ANR	715054	Condition	"at && ( ! section -> size || ! is_in_range ( at , addr , section -> size ) )"	2526:6:72558:72621	714376	0	True				
ANR	715055	AndExpression	"at && ( ! section -> size || ! is_in_range ( at , addr , section -> size ) )"		714376	0		&&			
ANR	715056	Identifier	at		714376	0					
ANR	715057	OrExpression	"! section -> size || ! is_in_range ( at , addr , section -> size )"		714376	1		||			
ANR	715058	UnaryOperationExpression	! section -> size		714376	0					
ANR	715059	UnaryOperator	!		714376	0					
ANR	715060	PtrMemberAccess	section -> size		714376	1					
ANR	715061	Identifier	section		714376	0					
ANR	715062	Identifier	size		714376	1					
ANR	715063	UnaryOperationExpression	"! is_in_range ( at , addr , section -> size )"		714376	1					
ANR	715064	UnaryOperator	!		714376	0					
ANR	715065	CallExpression	"is_in_range ( at , addr , section -> size )"		714376	1					
ANR	715066	Callee	is_in_range		714376	0					
ANR	715067	Identifier	is_in_range		714376	0					
ANR	715068	ArgumentList	at		714376	1					
ANR	715069	Argument	at		714376	0					
ANR	715070	Identifier	at		714376	0					
ANR	715071	Argument	addr		714376	1					
ANR	715072	Identifier	addr		714376	0					
ANR	715073	Argument	section -> size		714376	2					
ANR	715074	PtrMemberAccess	section -> size		714376	0					
ANR	715075	Identifier	section		714376	0					
ANR	715076	Identifier	size		714376	1					
ANR	715077	CompoundStatement		96:72:2817:2817	714376	1					
ANR	715078	ContinueStatement	continue ;	2527:3:72629:72637	714376	0	True				
ANR	715079	IfStatement	if ( section -> is_segment != print_segments )		714376	9					
ANR	715080	Condition	section -> is_segment != print_segments	2530:6:72650:72686	714376	0	True				
ANR	715081	EqualityExpression	section -> is_segment != print_segments		714376	0		!=			
ANR	715082	PtrMemberAccess	section -> is_segment		714376	0					
ANR	715083	Identifier	section		714376	0					
ANR	715084	Identifier	is_segment		714376	1					
ANR	715085	Identifier	print_segments		714376	1					
ANR	715086	CompoundStatement		100:45:2882:2882	714376	1					
ANR	715087	ContinueStatement	continue ;	2531:3:72694:72702	714376	0	True				
ANR	715088	IfStatement	if ( section -> perm & R_PERM_SHAR )		714376	10					
ANR	715089	Condition	section -> perm & R_PERM_SHAR	2534:6:72715:72741	714376	0	True				
ANR	715090	BitAndExpression	section -> perm & R_PERM_SHAR		714376	0		&			
ANR	715091	PtrMemberAccess	section -> perm		714376	0					
ANR	715092	Identifier	section		714376	0					
ANR	715093	Identifier	perm		714376	1					
ANR	715094	Identifier	R_PERM_SHAR		714376	1					
ANR	715095	CompoundStatement		104:35:2937:2937	714376	1					
ANR	715096	ExpressionStatement	perms [ 0 ] = 's'	2535:3:72749:72763	714376	0	True				
ANR	715097	AssignmentExpression	perms [ 0 ] = 's'		714376	0		=			
ANR	715098	ArrayIndexing	perms [ 0 ]		714376	0					
ANR	715099	Identifier	perms		714376	0					
ANR	715100	PrimaryExpression	0		714376	1					
ANR	715101	PrimaryExpression	's'		714376	1					
ANR	715102	IfStatement	if ( section -> perm & R_PERM_R )		714376	11					
ANR	715103	Condition	section -> perm & R_PERM_R	2537:6:72775:72798	714376	0	True				
ANR	715104	BitAndExpression	section -> perm & R_PERM_R		714376	0		&			
ANR	715105	PtrMemberAccess	section -> perm		714376	0					
ANR	715106	Identifier	section		714376	0					
ANR	715107	Identifier	perm		714376	1					
ANR	715108	Identifier	R_PERM_R		714376	1					
ANR	715109	CompoundStatement		107:32:2994:2994	714376	1					
ANR	715110	ExpressionStatement	perms [ 1 ] = 'r'	2538:3:72806:72820	714376	0	True				
ANR	715111	AssignmentExpression	perms [ 1 ] = 'r'		714376	0		=			
ANR	715112	ArrayIndexing	perms [ 1 ]		714376	0					
ANR	715113	Identifier	perms		714376	0					
ANR	715114	PrimaryExpression	1		714376	1					
ANR	715115	PrimaryExpression	'r'		714376	1					
ANR	715116	IfStatement	if ( section -> perm & R_PERM_W )		714376	12					
ANR	715117	Condition	section -> perm & R_PERM_W	2540:6:72832:72855	714376	0	True				
ANR	715118	BitAndExpression	section -> perm & R_PERM_W		714376	0		&			
ANR	715119	PtrMemberAccess	section -> perm		714376	0					
ANR	715120	Identifier	section		714376	0					
ANR	715121	Identifier	perm		714376	1					
ANR	715122	Identifier	R_PERM_W		714376	1					
ANR	715123	CompoundStatement		110:32:3051:3051	714376	1					
ANR	715124	ExpressionStatement	perms [ 2 ] = 'w'	2541:3:72863:72877	714376	0	True				
ANR	715125	AssignmentExpression	perms [ 2 ] = 'w'		714376	0		=			
ANR	715126	ArrayIndexing	perms [ 2 ]		714376	0					
ANR	715127	Identifier	perms		714376	0					
ANR	715128	PrimaryExpression	2		714376	1					
ANR	715129	PrimaryExpression	'w'		714376	1					
ANR	715130	IfStatement	if ( section -> perm & R_PERM_X )		714376	13					
ANR	715131	Condition	section -> perm & R_PERM_X	2543:6:72889:72912	714376	0	True				
ANR	715132	BitAndExpression	section -> perm & R_PERM_X		714376	0		&			
ANR	715133	PtrMemberAccess	section -> perm		714376	0					
ANR	715134	Identifier	section		714376	0					
ANR	715135	Identifier	perm		714376	1					
ANR	715136	Identifier	R_PERM_X		714376	1					
ANR	715137	CompoundStatement		113:32:3108:3108	714376	1					
ANR	715138	ExpressionStatement	perms [ 3 ] = 'x'	2544:3:72920:72934	714376	0	True				
ANR	715139	AssignmentExpression	perms [ 3 ] = 'x'		714376	0		=			
ANR	715140	ArrayIndexing	perms [ 3 ]		714376	0					
ANR	715141	Identifier	perms		714376	0					
ANR	715142	PrimaryExpression	3		714376	1					
ANR	715143	PrimaryExpression	'x'		714376	1					
ANR	715144	IdentifierDeclStatement	const char * arch = NULL ;	2546:2:72942:72965	714376	14	True				
ANR	715145	IdentifierDecl	* arch = NULL		714376	0					
ANR	715146	IdentifierDeclType	const char *		714376	0					
ANR	715147	Identifier	arch		714376	1					
ANR	715148	AssignmentExpression	* arch = NULL		714376	2		=			
ANR	715149	Identifier	NULL		714376	0					
ANR	715150	Identifier	NULL		714376	1					
ANR	715151	IdentifierDeclStatement	int bits = 0 ;	2547:2:72969:72981	714376	15	True				
ANR	715152	IdentifierDecl	bits = 0		714376	0					
ANR	715153	IdentifierDeclType	int		714376	0					
ANR	715154	Identifier	bits		714376	1					
ANR	715155	AssignmentExpression	bits = 0		714376	2		=			
ANR	715156	Identifier	bits		714376	0					
ANR	715157	PrimaryExpression	0		714376	1					
ANR	715158	IfStatement	if ( section -> arch || section -> bits )		714376	16					
ANR	715159	Condition	section -> arch || section -> bits	2548:6:72989:73018	714376	0	True				
ANR	715160	OrExpression	section -> arch || section -> bits		714376	0		||			
ANR	715161	PtrMemberAccess	section -> arch		714376	0					
ANR	715162	Identifier	section		714376	0					
ANR	715163	Identifier	arch		714376	1					
ANR	715164	PtrMemberAccess	section -> bits		714376	1					
ANR	715165	Identifier	section		714376	0					
ANR	715166	Identifier	bits		714376	1					
ANR	715167	CompoundStatement		118:38:3214:3214	714376	1					
ANR	715168	ExpressionStatement	arch = section -> arch	2549:3:73026:73046	714376	0	True				
ANR	715169	AssignmentExpression	arch = section -> arch		714376	0		=			
ANR	715170	Identifier	arch		714376	0					
ANR	715171	PtrMemberAccess	section -> arch		714376	1					
ANR	715172	Identifier	section		714376	0					
ANR	715173	Identifier	arch		714376	1					
ANR	715174	ExpressionStatement	bits = section -> bits	2550:3:73051:73071	714376	1	True				
ANR	715175	AssignmentExpression	bits = section -> bits		714376	0		=			
ANR	715176	Identifier	bits		714376	0					
ANR	715177	PtrMemberAccess	section -> bits		714376	1					
ANR	715178	Identifier	section		714376	0					
ANR	715179	Identifier	bits		714376	1					
ANR	715180	IfStatement	if ( info )		714376	17					
ANR	715181	Condition	info	2552:6:73083:73086	714376	0	True				
ANR	715182	Identifier	info		714376	0					
ANR	715183	CompoundStatement		122:12:3282:3282	714376	1					
ANR	715184	IfStatement	if ( ! arch )		714376	0					
ANR	715185	Condition	! arch	2553:7:73098:73102	714376	0	True				
ANR	715186	UnaryOperationExpression	! arch		714376	0					
ANR	715187	UnaryOperator	!		714376	0					
ANR	715188	Identifier	arch		714376	1					
ANR	715189	CompoundStatement		123:14:3298:3298	714376	1					
ANR	715190	ExpressionStatement	arch = info -> arch	2554:4:73111:73128	714376	0	True				
ANR	715191	AssignmentExpression	arch = info -> arch		714376	0		=			
ANR	715192	Identifier	arch		714376	0					
ANR	715193	PtrMemberAccess	info -> arch		714376	1					
ANR	715194	Identifier	info		714376	0					
ANR	715195	Identifier	arch		714376	1					
ANR	715196	IfStatement	if ( ! bits )		714376	1					
ANR	715197	Condition	! bits	2556:7:73142:73146	714376	0	True				
ANR	715198	UnaryOperationExpression	! bits		714376	0					
ANR	715199	UnaryOperator	!		714376	0					
ANR	715200	Identifier	bits		714376	1					
ANR	715201	CompoundStatement		126:14:3342:3342	714376	1					
ANR	715202	ExpressionStatement	bits = info -> bits	2557:4:73155:73172	714376	0	True				
ANR	715203	AssignmentExpression	bits = info -> bits		714376	0		=			
ANR	715204	Identifier	bits		714376	0					
ANR	715205	PtrMemberAccess	info -> bits		714376	1					
ANR	715206	Identifier	info		714376	0					
ANR	715207	Identifier	bits		714376	1					
ANR	715208	IfStatement	if ( ! arch )		714376	18					
ANR	715209	Condition	! arch	2560:6:73189:73193	714376	0	True				
ANR	715210	UnaryOperationExpression	! arch		714376	0					
ANR	715211	UnaryOperator	!		714376	0					
ANR	715212	Identifier	arch		714376	1					
ANR	715213	CompoundStatement		130:13:3389:3389	714376	1					
ANR	715214	ExpressionStatement	"arch = r_config_get ( r -> config , ""asm.arch"" )"	2561:3:73201:73244	714376	0	True				
ANR	715215	AssignmentExpression	"arch = r_config_get ( r -> config , ""asm.arch"" )"		714376	0		=			
ANR	715216	Identifier	arch		714376	0					
ANR	715217	CallExpression	"r_config_get ( r -> config , ""asm.arch"" )"		714376	1					
ANR	715218	Callee	r_config_get		714376	0					
ANR	715219	Identifier	r_config_get		714376	0					
ANR	715220	ArgumentList	r -> config		714376	1					
ANR	715221	Argument	r -> config		714376	0					
ANR	715222	PtrMemberAccess	r -> config		714376	0					
ANR	715223	Identifier	r		714376	0					
ANR	715224	Identifier	config		714376	1					
ANR	715225	Argument	"""asm.arch"""		714376	1					
ANR	715226	PrimaryExpression	"""asm.arch"""		714376	0					
ANR	715227	IfStatement	if ( ! bits )		714376	19					
ANR	715228	Condition	! bits	2563:6:73256:73260	714376	0	True				
ANR	715229	UnaryOperationExpression	! bits		714376	0					
ANR	715230	UnaryOperator	!		714376	0					
ANR	715231	Identifier	bits		714376	1					
ANR	715232	CompoundStatement		133:13:3456:3456	714376	1					
ANR	715233	ExpressionStatement	bits = R_SYS_BITS	2564:3:73268:73285	714376	0	True				
ANR	715234	AssignmentExpression	bits = R_SYS_BITS		714376	0		=			
ANR	715235	Identifier	bits		714376	0					
ANR	715236	Identifier	R_SYS_BITS		714376	1					
ANR	715237	IfStatement	if ( IS_MODE_RAD ( mode ) )		714376	20					
ANR	715238	Condition	IS_MODE_RAD ( mode )	2566:6:73297:73314	714376	0	True				
ANR	715239	CallExpression	IS_MODE_RAD ( mode )		714376	0					
ANR	715240	Callee	IS_MODE_RAD		714376	0					
ANR	715241	Identifier	IS_MODE_RAD		714376	0					
ANR	715242	ArgumentList	mode		714376	1					
ANR	715243	Argument	mode		714376	0					
ANR	715244	Identifier	mode		714376	0					
ANR	715245	CompoundStatement		137:3:3515:3560	714376	1					
ANR	715246	IdentifierDeclStatement	char * n = __filterQuotedShell ( section -> name ) ;	2567:3:73322:73367	714376	0	True				
ANR	715247	IdentifierDecl	* n = __filterQuotedShell ( section -> name )		714376	0					
ANR	715248	IdentifierDeclType	char *		714376	0					
ANR	715249	Identifier	n		714376	1					
ANR	715250	AssignmentExpression	* n = __filterQuotedShell ( section -> name )		714376	2		=			
ANR	715251	Identifier	n		714376	0					
ANR	715252	CallExpression	__filterQuotedShell ( section -> name )		714376	1					
ANR	715253	Callee	__filterQuotedShell		714376	0					
ANR	715254	Identifier	__filterQuotedShell		714376	0					
ANR	715255	ArgumentList	section -> name		714376	1					
ANR	715256	Argument	section -> name		714376	0					
ANR	715257	PtrMemberAccess	section -> name		714376	0					
ANR	715258	Identifier	section		714376	0					
ANR	715259	Identifier	name		714376	1					
ANR	715260	Statement	r_cons_printf	2568:3:73372:73384	714376	1	True				
ANR	715261	Statement	(	2568:17:73386:73386	714376	2	True				
ANR	715262	Statement	"""\\""f %s.%s 1 0x%08"""	2568:18:73387:73405	714376	3	True				
ANR	715263	Statement	PFMT64x	2568:37:73406:73412	714376	4	True				
ANR	715264	Statement	"""\\""\\n"""	2568:44:73413:73418	714376	5	True				
ANR	715265	Statement	","	2568:50:73419:73419	714376	6	True				
ANR	715266	Statement	type	2568:52:73421:73424	714376	7	True				
ANR	715267	Statement	","	2568:56:73425:73425	714376	8	True				
ANR	715268	Statement	n	2568:58:73427:73427	714376	9	True				
ANR	715269	Statement	","	2568:59:73428:73428	714376	10	True				
ANR	715270	Statement	section	2568:61:73430:73436	714376	11	True				
ANR	715271	Statement	->	2568:68:73437:73438	714376	12	True				
ANR	715272	Statement	vaddr	2568:70:73439:73443	714376	13	True				
ANR	715273	Statement	)	2568:75:73444:73444	714376	14	True				
ANR	715274	ExpressionStatement		2568:76:73445:73445	714376	15	True				
ANR	715275	ExpressionStatement	free ( n )	2569:3:73450:73458	714376	16	True				
ANR	715276	CallExpression	free ( n )		714376	0					
ANR	715277	Callee	free		714376	0					
ANR	715278	Identifier	free		714376	0					
ANR	715279	ArgumentList	n		714376	1					
ANR	715280	Argument	n		714376	0					
ANR	715281	Identifier	n		714376	0					
ANR	715282	ElseStatement	else		714376	0					
ANR	715283	IfStatement	if ( IS_MODE_SET ( mode ) )		714376	0					
ANR	715284	Condition	IS_MODE_SET ( mode )	2570:13:73473:73490	714376	0	True				
ANR	715285	CallExpression	IS_MODE_SET ( mode )		714376	0					
ANR	715286	Callee	IS_MODE_SET		714376	0					
ANR	715287	Identifier	IS_MODE_SET		714376	0					
ANR	715288	ArgumentList	mode		714376	1					
ANR	715289	Argument	mode		714376	0					
ANR	715290	Identifier	mode		714376	0					
ANR	715291	CompoundStatement		170:3:4478:4530	714376	1					
ANR	715292	IfStatement	"if ( ! strcmp ( section -> name , "".bss"" ) )"		714376	0					
ANR	715293	Condition	"! strcmp ( section -> name , "".bss"" )"	2572:7:73522:73552	714376	0	True				
ANR	715294	UnaryOperationExpression	"! strcmp ( section -> name , "".bss"" )"		714376	0					
ANR	715295	UnaryOperator	!		714376	0					
ANR	715296	CallExpression	"strcmp ( section -> name , "".bss"" )"		714376	1					
ANR	715297	Callee	strcmp		714376	0					
ANR	715298	Identifier	strcmp		714376	0					
ANR	715299	ArgumentList	section -> name		714376	1					
ANR	715300	Argument	section -> name		714376	0					
ANR	715301	PtrMemberAccess	section -> name		714376	0					
ANR	715302	Identifier	section		714376	0					
ANR	715303	Identifier	name		714376	1					
ANR	715304	Argument	""".bss"""		714376	1					
ANR	715305	PrimaryExpression	""".bss"""		714376	0					
ANR	715306	CompoundStatement		146:4:3847:3856	714376	1					
ANR	715307	IdentifierDeclStatement	int loaded = 0 ;	2574:4:73613:73627	714376	0	True				
ANR	715308	IdentifierDecl	loaded = 0		714376	0					
ANR	715309	IdentifierDeclType	int		714376	0					
ANR	715310	Identifier	loaded		714376	1					
ANR	715311	AssignmentExpression	loaded = 0		714376	2		=			
ANR	715312	Identifier	loaded		714376	0					
ANR	715313	PrimaryExpression	0		714376	1					
ANR	715314	IdentifierDeclStatement	RListIter * iter ;	2575:4:73633:73648	714376	1	True				
ANR	715315	IdentifierDecl	* iter		714376	0					
ANR	715316	IdentifierDeclType	RListIter *		714376	0					
ANR	715317	Identifier	iter		714376	1					
ANR	715318	IdentifierDeclStatement	RIOMap * m ;	2576:4:73654:73663	714376	2	True				
ANR	715319	IdentifierDecl	* m		714376	0					
ANR	715320	IdentifierDeclType	RIOMap *		714376	0					
ANR	715321	Identifier	m		714376	1					
ANR	715322	Statement	r_list_foreach	2577:4:73669:73682	714376	3	True				
ANR	715323	Statement	(	2577:19:73684:73684	714376	4	True				
ANR	715324	Statement	r	2577:20:73685:73685	714376	5	True				
ANR	715325	Statement	->	2577:21:73686:73687	714376	6	True				
ANR	715326	Statement	io	2577:23:73688:73689	714376	7	True				
ANR	715327	Statement	->	2577:25:73690:73691	714376	8	True				
ANR	715328	Statement	maps	2577:27:73692:73695	714376	9	True				
ANR	715329	Statement	","	2577:31:73696:73696	714376	10	True				
ANR	715330	Statement	iter	2577:33:73698:73701	714376	11	True				
ANR	715331	Statement	","	2577:37:73702:73702	714376	12	True				
ANR	715332	Statement	m	2577:39:73704:73704	714376	13	True				
ANR	715333	Statement	)	2577:40:73705:73705	714376	14	True				
ANR	715334	CompoundStatement		147:42:3900:3900	714376	15					
ANR	715335	IfStatement	if ( m -> from == addr )		714376	0					
ANR	715336	Condition	m -> from == addr	2578:9:73718:73732	714376	0	True				
ANR	715337	EqualityExpression	m -> from == addr		714376	0		==			
ANR	715338	PtrMemberAccess	m -> from		714376	0					
ANR	715339	Identifier	m		714376	0					
ANR	715340	Identifier	from		714376	1					
ANR	715341	Identifier	addr		714376	1					
ANR	715342	CompoundStatement		148:26:3928:3928	714376	1					
ANR	715343	ExpressionStatement	loaded = 1	2579:6:73743:73753	714376	0	True				
ANR	715344	AssignmentExpression	loaded = 1		714376	0		=			
ANR	715345	Identifier	loaded		714376	0					
ANR	715346	PrimaryExpression	1		714376	1					
ANR	715347	IfStatement	if ( ! loaded && ! inDebugger )		714376	16					
ANR	715348	Condition	! loaded && ! inDebugger	2582:8:73776:73797	714376	0	True				
ANR	715349	AndExpression	! loaded && ! inDebugger		714376	0		&&			
ANR	715350	UnaryOperationExpression	! loaded		714376	0					
ANR	715351	UnaryOperator	!		714376	0					
ANR	715352	Identifier	loaded		714376	1					
ANR	715353	UnaryOperationExpression	! inDebugger		714376	1					
ANR	715354	UnaryOperator	!		714376	0					
ANR	715355	Identifier	inDebugger		714376	1					
ANR	715356	CompoundStatement		152:32:3993:3993	714376	1					
ANR	715357	Statement	r_core_cmdf	2583:5:73807:73817	714376	0	True				
ANR	715358	Statement	(	2583:17:73819:73819	714376	1	True				
ANR	715359	Statement	r	2583:18:73820:73820	714376	2	True				
ANR	715360	Statement	","	2583:19:73821:73821	714376	3	True				
ANR	715361	Statement	"""on malloc://%d 0x%"""	2583:21:73823:73842	714376	4	True				
ANR	715362	Statement	PFMT64x	2583:41:73843:73849	714376	5	True				
ANR	715363	Statement	""" # bss\\n"""	2583:48:73850:73859	714376	6	True				
ANR	715364	Statement	","	2583:58:73860:73860	714376	7	True				
ANR	715365	Statement	section	2584:6:73868:73874	714376	8	True				
ANR	715366	Statement	->	2584:13:73875:73876	714376	9	True				
ANR	715367	Statement	vsize	2584:15:73877:73881	714376	10	True				
ANR	715368	Statement	","	2584:20:73882:73882	714376	11	True				
ANR	715369	Statement	addr	2584:22:73884:73887	714376	12	True				
ANR	715370	Statement	)	2584:26:73888:73888	714376	13	True				
ANR	715371	ExpressionStatement		2584:27:73889:73889	714376	14	True				
ANR	715372	IfStatement	if ( section -> format )		714376	1					
ANR	715373	Condition	section -> format	2588:7:73916:73930	714376	0	True				
ANR	715374	PtrMemberAccess	section -> format		714376	0					
ANR	715375	Identifier	section		714376	0					
ANR	715376	Identifier	format		714376	1					
ANR	715377	CompoundStatement		158:24:4126:4126	714376	1					
ANR	715378	IfStatement	if ( section -> vsize < 1024 * 1024 * 2 )		714376	0					
ANR	715379	Condition	section -> vsize < 1024 * 1024 * 2	2590:8:73993:74024	714376	0	True				
ANR	715380	RelationalExpression	section -> vsize < 1024 * 1024 * 2		714376	0		<			
ANR	715381	PtrMemberAccess	section -> vsize		714376	0					
ANR	715382	Identifier	section		714376	0					
ANR	715383	Identifier	vsize		714376	1					
ANR	715384	MultiplicativeExpression	1024 * 1024 * 2		714376	1		*			
ANR	715385	PrimaryExpression	1024		714376	0					
ANR	715386	MultiplicativeExpression	1024 * 2		714376	1		*			
ANR	715387	PrimaryExpression	1024		714376	0					
ANR	715388	PrimaryExpression	2		714376	1					
ANR	715389	CompoundStatement		160:42:4220:4220	714376	1					
ANR	715390	Statement	r_core_cmdf	2591:5:74034:74044	714376	0	True				
ANR	715391	Statement	(	2591:17:74046:74046	714376	1	True				
ANR	715392	Statement	r	2591:18:74047:74047	714376	2	True				
ANR	715393	Statement	","	2591:19:74048:74048	714376	3	True				
ANR	715394	Statement	"""%s @ 0x%"""	2591:21:74050:74059	714376	4	True				
ANR	715395	Statement	PFMT64x	2591:31:74060:74066	714376	5	True				
ANR	715396	Statement	","	2591:38:74067:74067	714376	6	True				
ANR	715397	Statement	section	2591:40:74069:74075	714376	7	True				
ANR	715398	Statement	->	2591:47:74076:74077	714376	8	True				
ANR	715399	Statement	format	2591:49:74078:74083	714376	9	True				
ANR	715400	Statement	","	2591:55:74084:74084	714376	10	True				
ANR	715401	Statement	section	2591:57:74086:74092	714376	11	True				
ANR	715402	Statement	->	2591:64:74093:74094	714376	12	True				
ANR	715403	Statement	vaddr	2591:66:74095:74099	714376	13	True				
ANR	715404	Statement	)	2591:71:74100:74100	714376	14	True				
ANR	715405	ExpressionStatement		2591:72:74101:74101	714376	15	True				
ANR	715406	IfStatement	if ( r -> bin -> prefix )		714376	2					
ANR	715407	Condition	r -> bin -> prefix	2594:7:74121:74134	714376	0	True				
ANR	715408	PtrMemberAccess	r -> bin -> prefix		714376	0					
ANR	715409	PtrMemberAccess	r -> bin		714376	0					
ANR	715410	Identifier	r		714376	0					
ANR	715411	Identifier	bin		714376	1					
ANR	715412	Identifier	prefix		714376	1					
ANR	715413	CompoundStatement		164:23:4330:4330	714376	1					
ANR	715414	ExpressionStatement	"str = r_str_newf ( ""%s.%s.%s"" , r -> bin -> prefix , type , section -> name )"	2595:4:74143:74209	714376	0	True				
ANR	715415	AssignmentExpression	"str = r_str_newf ( ""%s.%s.%s"" , r -> bin -> prefix , type , section -> name )"		714376	0		=			
ANR	715416	Identifier	str		714376	0					
ANR	715417	CallExpression	"r_str_newf ( ""%s.%s.%s"" , r -> bin -> prefix , type , section -> name )"		714376	1					
ANR	715418	Callee	r_str_newf		714376	0					
ANR	715419	Identifier	r_str_newf		714376	0					
ANR	715420	ArgumentList	"""%s.%s.%s"""		714376	1					
ANR	715421	Argument	"""%s.%s.%s"""		714376	0					
ANR	715422	PrimaryExpression	"""%s.%s.%s"""		714376	0					
ANR	715423	Argument	r -> bin -> prefix		714376	1					
ANR	715424	PtrMemberAccess	r -> bin -> prefix		714376	0					
ANR	715425	PtrMemberAccess	r -> bin		714376	0					
ANR	715426	Identifier	r		714376	0					
ANR	715427	Identifier	bin		714376	1					
ANR	715428	Identifier	prefix		714376	1					
ANR	715429	Argument	type		714376	2					
ANR	715430	Identifier	type		714376	0					
ANR	715431	Argument	section -> name		714376	3					
ANR	715432	PtrMemberAccess	section -> name		714376	0					
ANR	715433	Identifier	section		714376	0					
ANR	715434	Identifier	name		714376	1					
ANR	715435	ElseStatement	else		714376	0					
ANR	715436	CompoundStatement		166:10:4414:4414	714376	0					
ANR	715437	ExpressionStatement	"str = r_str_newf ( ""%s.%s"" , type , section -> name )"	2597:4:74227:74274	714376	0	True				
ANR	715438	AssignmentExpression	"str = r_str_newf ( ""%s.%s"" , type , section -> name )"		714376	0		=			
ANR	715439	Identifier	str		714376	0					
ANR	715440	CallExpression	"r_str_newf ( ""%s.%s"" , type , section -> name )"		714376	1					
ANR	715441	Callee	r_str_newf		714376	0					
ANR	715442	Identifier	r_str_newf		714376	0					
ANR	715443	ArgumentList	"""%s.%s"""		714376	1					
ANR	715444	Argument	"""%s.%s"""		714376	0					
ANR	715445	PrimaryExpression	"""%s.%s"""		714376	0					
ANR	715446	Argument	type		714376	1					
ANR	715447	Identifier	type		714376	0					
ANR	715448	Argument	section -> name		714376	2					
ANR	715449	PtrMemberAccess	section -> name		714376	0					
ANR	715450	Identifier	section		714376	0					
ANR	715451	Identifier	name		714376	1					
ANR	715452	IdentifierDeclStatement	ut64 size = r -> io -> va ? section -> vsize : section -> size ;	2600:3:74285:74337	714376	3	True				
ANR	715453	IdentifierDecl	size = r -> io -> va ? section -> vsize : section -> size		714376	0					
ANR	715454	IdentifierDeclType	ut64		714376	0					
ANR	715455	Identifier	size		714376	1					
ANR	715456	AssignmentExpression	size = r -> io -> va ? section -> vsize : section -> size		714376	2		=			
ANR	715457	Identifier	size		714376	0					
ANR	715458	ConditionalExpression	r -> io -> va ? section -> vsize : section -> size		714376	1					
ANR	715459	Condition	r -> io -> va		714376	0					
ANR	715460	PtrMemberAccess	r -> io -> va		714376	0					
ANR	715461	PtrMemberAccess	r -> io		714376	0					
ANR	715462	Identifier	r		714376	0					
ANR	715463	Identifier	io		714376	1					
ANR	715464	Identifier	va		714376	1					
ANR	715465	PtrMemberAccess	section -> vsize		714376	1					
ANR	715466	Identifier	section		714376	0					
ANR	715467	Identifier	vsize		714376	1					
ANR	715468	PtrMemberAccess	section -> size		714376	2					
ANR	715469	Identifier	section		714376	0					
ANR	715470	Identifier	size		714376	1					
ANR	715471	ExpressionStatement	"r_flag_set ( r -> flags , str , addr , size )"	2601:3:74342:74380	714376	4	True				
ANR	715472	CallExpression	"r_flag_set ( r -> flags , str , addr , size )"		714376	0					
ANR	715473	Callee	r_flag_set		714376	0					
ANR	715474	Identifier	r_flag_set		714376	0					
ANR	715475	ArgumentList	r -> flags		714376	1					
ANR	715476	Argument	r -> flags		714376	0					
ANR	715477	PtrMemberAccess	r -> flags		714376	0					
ANR	715478	Identifier	r		714376	0					
ANR	715479	Identifier	flags		714376	1					
ANR	715480	Argument	str		714376	1					
ANR	715481	Identifier	str		714376	0					
ANR	715482	Argument	addr		714376	2					
ANR	715483	Identifier	addr		714376	0					
ANR	715484	Argument	size		714376	3					
ANR	715485	Identifier	size		714376	0					
ANR	715486	ExpressionStatement	R_FREE ( str )	2602:3:74385:74397	714376	5	True				
ANR	715487	CallExpression	R_FREE ( str )		714376	0					
ANR	715488	Callee	R_FREE		714376	0					
ANR	715489	Identifier	R_FREE		714376	0					
ANR	715490	ArgumentList	str		714376	1					
ANR	715491	Argument	str		714376	0					
ANR	715492	Identifier	str		714376	0					
ANR	715493	IfStatement	if ( ! section -> is_segment || segments_only )		714376	6					
ANR	715494	Condition	! section -> is_segment || segments_only	2604:7:74407:74443	714376	0	True				
ANR	715495	OrExpression	! section -> is_segment || segments_only		714376	0		||			
ANR	715496	UnaryOperationExpression	! section -> is_segment		714376	0					
ANR	715497	UnaryOperator	!		714376	0					
ANR	715498	PtrMemberAccess	section -> is_segment		714376	1					
ANR	715499	Identifier	section		714376	0					
ANR	715500	Identifier	is_segment		714376	1					
ANR	715501	Identifier	segments_only		714376	1					
ANR	715502	CompoundStatement		175:4:4645:4671	714376	1					
ANR	715503	IdentifierDeclStatement	char * pfx = r -> bin -> prefix ;	2605:4:74452:74478	714376	0	True				
ANR	715504	IdentifierDecl	* pfx = r -> bin -> prefix		714376	0					
ANR	715505	IdentifierDeclType	char *		714376	0					
ANR	715506	Identifier	pfx		714376	1					
ANR	715507	AssignmentExpression	* pfx = r -> bin -> prefix		714376	2		=			
ANR	715508	Identifier	pfx		714376	0					
ANR	715509	PtrMemberAccess	r -> bin -> prefix		714376	1					
ANR	715510	PtrMemberAccess	r -> bin		714376	0					
ANR	715511	Identifier	r		714376	0					
ANR	715512	Identifier	bin		714376	1					
ANR	715513	Identifier	prefix		714376	1					
ANR	715514	Statement	str	2606:4:74484:74486	714376	1	True				
ANR	715515	Statement	=	2606:8:74488:74488	714376	2	True				
ANR	715516	Statement	r_str_newf	2606:10:74490:74499	714376	3	True				
ANR	715517	Statement	(	2606:21:74501:74501	714376	4	True				
ANR	715518	Statement	"""[%02d] %s %s size %"""	2606:22:74502:74522	714376	5	True				
ANR	715519	Statement	PFMT64d	2606:44:74524:74530	714376	6	True				
ANR	715520	Statement	""" named %s%s%s"""	2606:51:74531:74545	714376	7	True				
ANR	715521	Statement	","	2606:66:74546:74546	714376	8	True				
ANR	715522	Statement	i	2607:22:74570:74570	714376	9	True				
ANR	715523	Statement	","	2607:23:74571:74571	714376	10	True				
ANR	715524	Statement	perms	2607:25:74573:74577	714376	11	True				
ANR	715525	Statement	","	2607:30:74578:74578	714376	12	True				
ANR	715526	Statement	type	2607:32:74580:74583	714376	13	True				
ANR	715527	Statement	","	2607:36:74584:74584	714376	14	True				
ANR	715528	Statement	size	2607:38:74586:74589	714376	15	True				
ANR	715529	Statement	","	2607:42:74590:74590	714376	16	True				
ANR	715530	Statement	pfx	2608:22:74614:74616	714376	17	True				
ANR	715531	Statement	?	2608:25:74617:74617	714376	18	True				
ANR	715532	Label	pfx :	2608:27:74619:74622	714376	19	True				
ANR	715533	Identifier	pfx		714376	0					
ANR	715534	Statement	""""""	2608:32:74624:74625	714376	20	True				
ANR	715535	Statement	","	2608:34:74626:74626	714376	21	True				
ANR	715536	Statement	pfx	2608:36:74628:74630	714376	22	True				
ANR	715537	Statement	?	2608:39:74631:74631	714376	23	True				
ANR	715538	Statement	"""."""	2608:41:74633:74635	714376	24	True				
ANR	715539	Statement	:	2608:44:74636:74636	714376	25	True				
ANR	715540	Statement	""""""	2608:46:74638:74639	714376	26	True				
ANR	715541	Statement	","	2608:48:74640:74640	714376	27	True				
ANR	715542	Statement	section	2608:50:74642:74648	714376	28	True				
ANR	715543	Statement	->	2608:57:74649:74650	714376	29	True				
ANR	715544	Statement	name	2608:59:74651:74654	714376	30	True				
ANR	715545	Statement	)	2608:63:74655:74655	714376	31	True				
ANR	715546	ExpressionStatement		2608:64:74656:74656	714376	32	True				
ANR	715547	ExpressionStatement	"r_meta_add ( r -> anal , R_META_TYPE_COMMENT , addr , addr , str )"	2609:4:74662:74720	714376	33	True				
ANR	715548	CallExpression	"r_meta_add ( r -> anal , R_META_TYPE_COMMENT , addr , addr , str )"		714376	0					
ANR	715549	Callee	r_meta_add		714376	0					
ANR	715550	Identifier	r_meta_add		714376	0					
ANR	715551	ArgumentList	r -> anal		714376	1					
ANR	715552	Argument	r -> anal		714376	0					
ANR	715553	PtrMemberAccess	r -> anal		714376	0					
ANR	715554	Identifier	r		714376	0					
ANR	715555	Identifier	anal		714376	1					
ANR	715556	Argument	R_META_TYPE_COMMENT		714376	1					
ANR	715557	Identifier	R_META_TYPE_COMMENT		714376	0					
ANR	715558	Argument	addr		714376	2					
ANR	715559	Identifier	addr		714376	0					
ANR	715560	Argument	addr		714376	3					
ANR	715561	Identifier	addr		714376	0					
ANR	715562	Argument	str		714376	4					
ANR	715563	Identifier	str		714376	0					
ANR	715564	ExpressionStatement	R_FREE ( str )	2610:4:74726:74738	714376	34	True				
ANR	715565	CallExpression	R_FREE ( str )		714376	0					
ANR	715566	Callee	R_FREE		714376	0					
ANR	715567	Identifier	R_FREE		714376	0					
ANR	715568	ArgumentList	str		714376	1					
ANR	715569	Argument	str		714376	0					
ANR	715570	Identifier	str		714376	0					
ANR	715571	IfStatement	if ( section -> add )		714376	7					
ANR	715572	Condition	section -> add	2612:7:74752:74763	714376	0	True				
ANR	715573	PtrMemberAccess	section -> add		714376	0					
ANR	715574	Identifier	section		714376	0					
ANR	715575	Identifier	add		714376	1					
ANR	715576	CompoundStatement		183:4:4965:4975	714376	1					
ANR	715577	IdentifierDeclStatement	bool found ;	2613:4:74772:74782	714376	0	True				
ANR	715578	IdentifierDecl	found		714376	0					
ANR	715579	IdentifierDeclType	bool		714376	0					
ANR	715580	Identifier	found		714376	1					
ANR	715581	Statement	str	2614:4:74788:74790	714376	1	True				
ANR	715582	Statement	=	2614:8:74792:74792	714376	2	True				
ANR	715583	Statement	r_str_newf	2614:10:74794:74803	714376	3	True				
ANR	715584	Statement	(	2614:21:74805:74805	714376	4	True				
ANR	715585	Statement	"""%"""	2614:22:74806:74808	714376	5	True				
ANR	715586	Statement	PFMT64x	2614:25:74809:74815	714376	6	True				
ANR	715587	Statement	""".%"""	2614:32:74816:74819	714376	7	True				
ANR	715588	Statement	PFMT64x	2614:36:74820:74826	714376	8	True				
ANR	715589	Statement	""".%"""	2614:43:74827:74830	714376	9	True				
ANR	715590	Statement	PFMT64x	2614:47:74831:74837	714376	10	True				
ANR	715591	Statement	""".%"""	2614:54:74838:74841	714376	11	True				
ANR	715592	Statement	PFMT64x	2614:58:74842:74848	714376	12	True				
ANR	715593	Statement	""".%"""	2614:65:74849:74852	714376	13	True				
ANR	715594	Statement	PFMT32u	2614:69:74853:74859	714376	14	True				
ANR	715595	Statement	""".%s.%"""	2614:76:74860:74866	714376	15	True				
ANR	715596	Statement	PFMT32u	2614:83:74867:74873	714376	16	True				
ANR	715597	Statement	""".%d"""	2614:90:74874:74878	714376	17	True				
ANR	715598	Statement	","	2614:95:74879:74879	714376	18	True				
ANR	715599	Statement	section	2615:5:74886:74892	714376	19	True				
ANR	715600	Statement	->	2615:12:74893:74894	714376	20	True				
ANR	715601	Statement	paddr	2615:14:74895:74899	714376	21	True				
ANR	715602	Statement	","	2615:19:74900:74900	714376	22	True				
ANR	715603	Statement	addr	2615:21:74902:74905	714376	23	True				
ANR	715604	Statement	","	2615:25:74906:74906	714376	24	True				
ANR	715605	Statement	section	2615:27:74908:74914	714376	25	True				
ANR	715606	Statement	->	2615:34:74915:74916	714376	26	True				
ANR	715607	Statement	size	2615:36:74917:74920	714376	27	True				
ANR	715608	Statement	","	2615:40:74921:74921	714376	28	True				
ANR	715609	Statement	section	2615:42:74923:74929	714376	29	True				
ANR	715610	Statement	->	2615:49:74930:74931	714376	30	True				
ANR	715611	Statement	vsize	2615:51:74932:74936	714376	31	True				
ANR	715612	Statement	","	2615:56:74937:74937	714376	32	True				
ANR	715613	Statement	section	2615:58:74939:74945	714376	33	True				
ANR	715614	Statement	->	2615:65:74946:74947	714376	34	True				
ANR	715615	Statement	perm	2615:67:74948:74951	714376	35	True				
ANR	715616	Statement	","	2615:71:74952:74952	714376	36	True				
ANR	715617	Statement	section	2615:73:74954:74960	714376	37	True				
ANR	715618	Statement	->	2615:80:74961:74962	714376	38	True				
ANR	715619	Statement	name	2615:82:74963:74966	714376	39	True				
ANR	715620	Statement	","	2615:86:74967:74967	714376	40	True				
ANR	715621	Statement	r	2615:88:74969:74969	714376	41	True				
ANR	715622	Statement	->	2615:89:74970:74971	714376	42	True				
ANR	715623	Statement	bin	2615:91:74972:74974	714376	43	True				
ANR	715624	Statement	->	2615:94:74975:74976	714376	44	True				
ANR	715625	Statement	cur	2615:96:74977:74979	714376	45	True				
ANR	715626	Statement	->	2615:99:74980:74981	714376	46	True				
ANR	715627	Statement	id	2615:101:74982:74983	714376	47	True				
ANR	715628	Statement	","	2615:103:74984:74984	714376	48	True				
ANR	715629	Statement	fd	2615:105:74986:74987	714376	49	True				
ANR	715630	Statement	)	2615:107:74988:74988	714376	50	True				
ANR	715631	ExpressionStatement		2615:108:74989:74989	714376	51	True				
ANR	715632	ExpressionStatement	"ht_pp_find ( dup_chk_ht , str , & found )"	2616:4:74995:75031	714376	52	True				
ANR	715633	CallExpression	"ht_pp_find ( dup_chk_ht , str , & found )"		714376	0					
ANR	715634	Callee	ht_pp_find		714376	0					
ANR	715635	Identifier	ht_pp_find		714376	0					
ANR	715636	ArgumentList	dup_chk_ht		714376	1					
ANR	715637	Argument	dup_chk_ht		714376	0					
ANR	715638	Identifier	dup_chk_ht		714376	0					
ANR	715639	Argument	str		714376	1					
ANR	715640	Identifier	str		714376	0					
ANR	715641	Argument	& found		714376	2					
ANR	715642	UnaryOperationExpression	& found		714376	0					
ANR	715643	UnaryOperator	&		714376	0					
ANR	715644	Identifier	found		714376	1					
ANR	715645	IfStatement	if ( ! found )		714376	53					
ANR	715646	Condition	! found	2617:8:75041:75046	714376	0	True				
ANR	715647	UnaryOperationExpression	! found		714376	0					
ANR	715648	UnaryOperator	!		714376	0					
ANR	715649	Identifier	found		714376	1					
ANR	715650	CompoundStatement		187:16:5242:5242	714376	1					
ANR	715651	Statement	struct	2622:5:75214:75219	714376	0	True				
ANR	715652	Statement	io_bin_section_info_t	2622:12:75221:75241	714376	1	True				
ANR	715653	Statement	*	2622:34:75243:75243	714376	2	True				
ANR	715654	Statement	ibs	2622:35:75244:75246	714376	3	True				
ANR	715655	Statement	=	2622:39:75248:75248	714376	4	True				
ANR	715656	Statement	R_NEW	2622:41:75250:75254	714376	5	True				
ANR	715657	Statement	(	2622:47:75256:75256	714376	6	True				
ANR	715658	Statement	struct	2622:48:75257:75262	714376	7	True				
ANR	715659	Statement	io_bin_section_info_t	2622:55:75264:75284	714376	8	True				
ANR	715660	Statement	)	2622:76:75285:75285	714376	9	True				
ANR	715661	ExpressionStatement		2622:77:75286:75286	714376	10	True				
ANR	715662	IfStatement	if ( ! ibs )		714376	11					
ANR	715663	Condition	! ibs	2623:9:75297:75300	714376	0	True				
ANR	715664	UnaryOperationExpression	! ibs		714376	0					
ANR	715665	UnaryOperator	!		714376	0					
ANR	715666	Identifier	ibs		714376	1					
ANR	715667	CompoundStatement		193:15:5496:5496	714376	1					
ANR	715668	ExpressionStatement	"eprintf ( ""Could not allocate memory\\n"" )"	2624:6:75311:75350	714376	0	True				
ANR	715669	CallExpression	"eprintf ( ""Could not allocate memory\\n"" )"		714376	0					
ANR	715670	Callee	eprintf		714376	0					
ANR	715671	Identifier	eprintf		714376	0					
ANR	715672	ArgumentList	"""Could not allocate memory\\n"""		714376	1					
ANR	715673	Argument	"""Could not allocate memory\\n"""		714376	0					
ANR	715674	PrimaryExpression	"""Could not allocate memory\\n"""		714376	0					
ANR	715675	GotoStatement	goto out ;	2625:6:75358:75366	714376	1	True				
ANR	715676	Identifier	out		714376	0					
ANR	715677	ExpressionStatement	ibs -> sec = section	2628:5:75381:75399	714376	12	True				
ANR	715678	AssignmentExpression	ibs -> sec = section		714376	0		=			
ANR	715679	PtrMemberAccess	ibs -> sec		714376	0					
ANR	715680	Identifier	ibs		714376	0					
ANR	715681	Identifier	sec		714376	1					
ANR	715682	Identifier	section		714376	1					
ANR	715683	ExpressionStatement	ibs -> addr = addr	2629:5:75406:75422	714376	13	True				
ANR	715684	AssignmentExpression	ibs -> addr = addr		714376	0		=			
ANR	715685	PtrMemberAccess	ibs -> addr		714376	0					
ANR	715686	Identifier	ibs		714376	0					
ANR	715687	Identifier	addr		714376	1					
ANR	715688	Identifier	addr		714376	1					
ANR	715689	ExpressionStatement	ibs -> fd = fd	2630:5:75429:75441	714376	14	True				
ANR	715690	AssignmentExpression	ibs -> fd = fd		714376	0		=			
ANR	715691	PtrMemberAccess	ibs -> fd		714376	0					
ANR	715692	Identifier	ibs		714376	0					
ANR	715693	Identifier	fd		714376	1					
ANR	715694	Identifier	fd		714376	1					
ANR	715695	ExpressionStatement	"r_list_append ( io_section_info , ibs )"	2631:5:75448:75484	714376	15	True				
ANR	715696	CallExpression	"r_list_append ( io_section_info , ibs )"		714376	0					
ANR	715697	Callee	r_list_append		714376	0					
ANR	715698	Identifier	r_list_append		714376	0					
ANR	715699	ArgumentList	io_section_info		714376	1					
ANR	715700	Argument	io_section_info		714376	0					
ANR	715701	Identifier	io_section_info		714376	0					
ANR	715702	Argument	ibs		714376	1					
ANR	715703	Identifier	ibs		714376	0					
ANR	715704	ExpressionStatement	"ht_pp_insert ( dup_chk_ht , str , NULL )"	2632:5:75491:75527	714376	16	True				
ANR	715705	CallExpression	"ht_pp_insert ( dup_chk_ht , str , NULL )"		714376	0					
ANR	715706	Callee	ht_pp_insert		714376	0					
ANR	715707	Identifier	ht_pp_insert		714376	0					
ANR	715708	ArgumentList	dup_chk_ht		714376	1					
ANR	715709	Argument	dup_chk_ht		714376	0					
ANR	715710	Identifier	dup_chk_ht		714376	0					
ANR	715711	Argument	str		714376	1					
ANR	715712	Identifier	str		714376	0					
ANR	715713	Argument	NULL		714376	2					
ANR	715714	Identifier	NULL		714376	0					
ANR	715715	ExpressionStatement	R_FREE ( str )	2634:4:75539:75551	714376	54	True				
ANR	715716	CallExpression	R_FREE ( str )		714376	0					
ANR	715717	Callee	R_FREE		714376	0					
ANR	715718	Identifier	R_FREE		714376	0					
ANR	715719	ArgumentList	str		714376	1					
ANR	715720	Argument	str		714376	0					
ANR	715721	Identifier	str		714376	0					
ANR	715722	ElseStatement	else		714376	0					
ANR	715723	IfStatement	if ( IS_MODE_SIMPLE ( mode ) )		714376	0					
ANR	715724	Condition	IS_MODE_SIMPLE ( mode )	2636:13:75571:75591	714376	0	True				
ANR	715725	CallExpression	IS_MODE_SIMPLE ( mode )		714376	0					
ANR	715726	Callee	IS_MODE_SIMPLE		714376	0					
ANR	715727	Identifier	IS_MODE_SIMPLE		714376	0					
ANR	715728	ArgumentList	mode		714376	1					
ANR	715729	Argument	mode		714376	0					
ANR	715730	Identifier	mode		714376	0					
ANR	715731	CompoundStatement		207:3:5792:5812	714376	1					
ANR	715732	IdentifierDeclStatement	char * hashstr = NULL ;	2637:3:75599:75619	714376	0	True				
ANR	715733	IdentifierDecl	* hashstr = NULL		714376	0					
ANR	715734	IdentifierDeclType	char *		714376	0					
ANR	715735	Identifier	hashstr		714376	1					
ANR	715736	AssignmentExpression	* hashstr = NULL		714376	2		=			
ANR	715737	Identifier	NULL		714376	0					
ANR	715738	Identifier	NULL		714376	1					
ANR	715739	IfStatement	if ( chksum )		714376	1					
ANR	715740	Condition	chksum	2638:7:75628:75633	714376	0	True				
ANR	715741	Identifier	chksum		714376	0					
ANR	715742	CompoundStatement		213:4:5913:5941	714376	1					
ANR	715743	IdentifierDeclStatement	ut8 * data = malloc ( section -> size ) ;	2639:4:75642:75676	714376	0	True				
ANR	715744	IdentifierDecl	* data = malloc ( section -> size )		714376	0					
ANR	715745	IdentifierDeclType	ut8 *		714376	0					
ANR	715746	Identifier	data		714376	1					
ANR	715747	AssignmentExpression	* data = malloc ( section -> size )		714376	2		=			
ANR	715748	Identifier	data		714376	0					
ANR	715749	CallExpression	malloc ( section -> size )		714376	1					
ANR	715750	Callee	malloc		714376	0					
ANR	715751	Identifier	malloc		714376	0					
ANR	715752	ArgumentList	section -> size		714376	1					
ANR	715753	Argument	section -> size		714376	0					
ANR	715754	PtrMemberAccess	section -> size		714376	0					
ANR	715755	Identifier	section		714376	0					
ANR	715756	Identifier	size		714376	1					
ANR	715757	IfStatement	if ( ! data )		714376	1					
ANR	715758	Condition	! data	2640:8:75686:75690	714376	0	True				
ANR	715759	UnaryOperationExpression	! data		714376	0					
ANR	715760	UnaryOperator	!		714376	0					
ANR	715761	Identifier	data		714376	1					
ANR	715762	CompoundStatement		210:15:5886:5886	714376	1					
ANR	715763	GotoStatement	goto out ;	2641:5:75700:75708	714376	0	True				
ANR	715764	Identifier	out		714376	0					
ANR	715765	IdentifierDeclStatement	ut32 datalen = section -> size ;	2643:4:75720:75748	714376	2	True				
ANR	715766	IdentifierDecl	datalen = section -> size		714376	0					
ANR	715767	IdentifierDeclType	ut32		714376	0					
ANR	715768	Identifier	datalen		714376	1					
ANR	715769	AssignmentExpression	datalen = section -> size		714376	2		=			
ANR	715770	Identifier	datalen		714376	0					
ANR	715771	PtrMemberAccess	section -> size		714376	1					
ANR	715772	Identifier	section		714376	0					
ANR	715773	Identifier	size		714376	1					
ANR	715774	ExpressionStatement	"r_io_pread_at ( r -> io , section -> paddr , data , datalen )"	2644:4:75754:75806	714376	3	True				
ANR	715775	CallExpression	"r_io_pread_at ( r -> io , section -> paddr , data , datalen )"		714376	0					
ANR	715776	Callee	r_io_pread_at		714376	0					
ANR	715777	Identifier	r_io_pread_at		714376	0					
ANR	715778	ArgumentList	r -> io		714376	1					
ANR	715779	Argument	r -> io		714376	0					
ANR	715780	PtrMemberAccess	r -> io		714376	0					
ANR	715781	Identifier	r		714376	0					
ANR	715782	Identifier	io		714376	1					
ANR	715783	Argument	section -> paddr		714376	1					
ANR	715784	PtrMemberAccess	section -> paddr		714376	0					
ANR	715785	Identifier	section		714376	0					
ANR	715786	Identifier	paddr		714376	1					
ANR	715787	Argument	data		714376	2					
ANR	715788	Identifier	data		714376	0					
ANR	715789	Argument	datalen		714376	3					
ANR	715790	Identifier	datalen		714376	0					
ANR	715791	ExpressionStatement	"hashstr = build_hash_string ( mode , chksum , data , datalen )"	2645:4:75812:75876	714376	4	True				
ANR	715792	AssignmentExpression	"hashstr = build_hash_string ( mode , chksum , data , datalen )"		714376	0		=			
ANR	715793	Identifier	hashstr		714376	0					
ANR	715794	CallExpression	"build_hash_string ( mode , chksum , data , datalen )"		714376	1					
ANR	715795	Callee	build_hash_string		714376	0					
ANR	715796	Identifier	build_hash_string		714376	0					
ANR	715797	ArgumentList	mode		714376	1					
ANR	715798	Argument	mode		714376	0					
ANR	715799	Identifier	mode		714376	0					
ANR	715800	Argument	chksum		714376	1					
ANR	715801	Identifier	chksum		714376	0					
ANR	715802	Argument	data		714376	2					
ANR	715803	Identifier	data		714376	0					
ANR	715804	Argument	datalen		714376	3					
ANR	715805	Identifier	datalen		714376	0					
ANR	715806	ExpressionStatement	free ( data )	2647:4:75882:75893	714376	5	True				
ANR	715807	CallExpression	free ( data )		714376	0					
ANR	715808	Callee	free		714376	0					
ANR	715809	Identifier	free		714376	0					
ANR	715810	ArgumentList	data		714376	1					
ANR	715811	Argument	data		714376	0					
ANR	715812	Identifier	data		714376	0					
ANR	715813	Statement	r_cons_printf	2649:3:75903:75915	714376	2	True				
ANR	715814	Statement	(	2649:17:75917:75917	714376	3	True				
ANR	715815	Statement	"""0x%"""	2649:18:75918:75922	714376	4	True				
ANR	715816	Statement	PFMT64x	2649:23:75923:75929	714376	5	True				
ANR	715817	Statement	""" 0x%"""	2649:30:75930:75935	714376	6	True				
ANR	715818	Statement	PFMT64x	2649:36:75936:75942	714376	7	True				
ANR	715819	Statement	""" %s %s%s%s\\n"""	2649:43:75943:75956	714376	8	True				
ANR	715820	Statement	","	2649:57:75957:75957	714376	9	True				
ANR	715821	Statement	addr	2650:4:75963:75966	714376	10	True				
ANR	715822	Statement	","	2650:8:75967:75967	714376	11	True				
ANR	715823	Statement	addr	2650:10:75969:75972	714376	12	True				
ANR	715824	Statement	+	2650:15:75974:75974	714376	13	True				
ANR	715825	Statement	section	2650:17:75976:75982	714376	14	True				
ANR	715826	Statement	->	2650:24:75983:75984	714376	15	True				
ANR	715827	Statement	size	2650:26:75985:75988	714376	16	True				
ANR	715828	Statement	","	2650:30:75989:75989	714376	17	True				
ANR	715829	Statement	perms	2651:4:75995:75999	714376	18	True				
ANR	715830	Statement	","	2651:9:76000:76000	714376	19	True				
ANR	715831	Statement	hashstr	2652:4:76006:76012	714376	20	True				
ANR	715832	Statement	?	2652:12:76014:76014	714376	21	True				
ANR	715833	Label	hashstr :	2652:14:76016:76024	714376	22	True				
ANR	715834	Identifier	hashstr		714376	0					
ANR	715835	Statement	""""""	2652:24:76026:76027	714376	23	True				
ANR	715836	Statement	","	2652:26:76028:76028	714376	24	True				
ANR	715837	Statement	hashstr	2652:28:76030:76036	714376	25	True				
ANR	715838	Statement	?	2652:36:76038:76038	714376	26	True				
ANR	715839	Statement	""" """	2652:38:76040:76042	714376	27	True				
ANR	715840	Statement	:	2652:42:76044:76044	714376	28	True				
ANR	715841	Statement	""""""	2652:44:76046:76047	714376	29	True				
ANR	715842	Statement	","	2652:46:76048:76048	714376	30	True				
ANR	715843	Statement	section	2653:4:76054:76060	714376	31	True				
ANR	715844	Statement	->	2653:11:76061:76062	714376	32	True				
ANR	715845	Statement	name	2653:13:76063:76066	714376	33	True				
ANR	715846	Statement	)	2654:3:76071:76071	714376	34	True				
ANR	715847	ExpressionStatement		2654:4:76072:76072	714376	35	True				
ANR	715848	ExpressionStatement	free ( hashstr )	2655:3:76077:76091	714376	36	True				
ANR	715849	CallExpression	free ( hashstr )		714376	0					
ANR	715850	Callee	free		714376	0					
ANR	715851	Identifier	free		714376	0					
ANR	715852	ArgumentList	hashstr		714376	1					
ANR	715853	Argument	hashstr		714376	0					
ANR	715854	Identifier	hashstr		714376	0					
ANR	715855	ElseStatement	else		714376	0					
ANR	715856	IfStatement	if ( IS_MODE_JSON ( mode ) )		714376	0					
ANR	715857	Condition	IS_MODE_JSON ( mode )	2656:13:76106:76124	714376	0	True				
ANR	715858	CallExpression	IS_MODE_JSON ( mode )		714376	0					
ANR	715859	Callee	IS_MODE_JSON		714376	0					
ANR	715860	Identifier	IS_MODE_JSON		714376	0					
ANR	715861	ArgumentList	mode		714376	1					
ANR	715862	Argument	mode		714376	0					
ANR	715863	Identifier	mode		714376	0					
ANR	715864	CompoundStatement		227:3:6325:6345	714376	1					
ANR	715865	IdentifierDeclStatement	char * hashstr = NULL ;	2657:3:76132:76152	714376	0	True				
ANR	715866	IdentifierDecl	* hashstr = NULL		714376	0					
ANR	715867	IdentifierDeclType	char *		714376	0					
ANR	715868	Identifier	hashstr		714376	1					
ANR	715869	AssignmentExpression	* hashstr = NULL		714376	2		=			
ANR	715870	Identifier	NULL		714376	0					
ANR	715871	Identifier	NULL		714376	1					
ANR	715872	IfStatement	if ( chksum && section -> size > 0 )		714376	1					
ANR	715873	Condition	chksum && section -> size > 0	2658:7:76161:76187	714376	0	True				
ANR	715874	AndExpression	chksum && section -> size > 0		714376	0		&&			
ANR	715875	Identifier	chksum		714376	0					
ANR	715876	RelationalExpression	section -> size > 0		714376	1		>			
ANR	715877	PtrMemberAccess	section -> size		714376	0					
ANR	715878	Identifier	section		714376	0					
ANR	715879	Identifier	size		714376	1					
ANR	715880	PrimaryExpression	0		714376	1					
ANR	715881	CompoundStatement		233:4:6467:6495	714376	1					
ANR	715882	IdentifierDeclStatement	ut8 * data = malloc ( section -> size ) ;	2659:4:76196:76230	714376	0	True				
ANR	715883	IdentifierDecl	* data = malloc ( section -> size )		714376	0					
ANR	715884	IdentifierDeclType	ut8 *		714376	0					
ANR	715885	Identifier	data		714376	1					
ANR	715886	AssignmentExpression	* data = malloc ( section -> size )		714376	2		=			
ANR	715887	Identifier	data		714376	0					
ANR	715888	CallExpression	malloc ( section -> size )		714376	1					
ANR	715889	Callee	malloc		714376	0					
ANR	715890	Identifier	malloc		714376	0					
ANR	715891	ArgumentList	section -> size		714376	1					
ANR	715892	Argument	section -> size		714376	0					
ANR	715893	PtrMemberAccess	section -> size		714376	0					
ANR	715894	Identifier	section		714376	0					
ANR	715895	Identifier	size		714376	1					
ANR	715896	IfStatement	if ( ! data )		714376	1					
ANR	715897	Condition	! data	2660:8:76240:76244	714376	0	True				
ANR	715898	UnaryOperationExpression	! data		714376	0					
ANR	715899	UnaryOperator	!		714376	0					
ANR	715900	Identifier	data		714376	1					
ANR	715901	CompoundStatement		230:15:6440:6440	714376	1					
ANR	715902	GotoStatement	goto out ;	2661:5:76254:76262	714376	0	True				
ANR	715903	Identifier	out		714376	0					
ANR	715904	IdentifierDeclStatement	ut32 datalen = section -> size ;	2663:4:76274:76302	714376	2	True				
ANR	715905	IdentifierDecl	datalen = section -> size		714376	0					
ANR	715906	IdentifierDeclType	ut32		714376	0					
ANR	715907	Identifier	datalen		714376	1					
ANR	715908	AssignmentExpression	datalen = section -> size		714376	2		=			
ANR	715909	Identifier	datalen		714376	0					
ANR	715910	PtrMemberAccess	section -> size		714376	1					
ANR	715911	Identifier	section		714376	0					
ANR	715912	Identifier	size		714376	1					
ANR	715913	ExpressionStatement	"r_io_pread_at ( r -> io , section -> paddr , data , datalen )"	2664:4:76308:76360	714376	3	True				
ANR	715914	CallExpression	"r_io_pread_at ( r -> io , section -> paddr , data , datalen )"		714376	0					
ANR	715915	Callee	r_io_pread_at		714376	0					
ANR	715916	Identifier	r_io_pread_at		714376	0					
ANR	715917	ArgumentList	r -> io		714376	1					
ANR	715918	Argument	r -> io		714376	0					
ANR	715919	PtrMemberAccess	r -> io		714376	0					
ANR	715920	Identifier	r		714376	0					
ANR	715921	Identifier	io		714376	1					
ANR	715922	Argument	section -> paddr		714376	1					
ANR	715923	PtrMemberAccess	section -> paddr		714376	0					
ANR	715924	Identifier	section		714376	0					
ANR	715925	Identifier	paddr		714376	1					
ANR	715926	Argument	data		714376	2					
ANR	715927	Identifier	data		714376	0					
ANR	715928	Argument	datalen		714376	3					
ANR	715929	Identifier	datalen		714376	0					
ANR	715930	ExpressionStatement	"hashstr = build_hash_string ( mode , chksum , data , datalen )"	2665:4:76366:76430	714376	4	True				
ANR	715931	AssignmentExpression	"hashstr = build_hash_string ( mode , chksum , data , datalen )"		714376	0		=			
ANR	715932	Identifier	hashstr		714376	0					
ANR	715933	CallExpression	"build_hash_string ( mode , chksum , data , datalen )"		714376	1					
ANR	715934	Callee	build_hash_string		714376	0					
ANR	715935	Identifier	build_hash_string		714376	0					
ANR	715936	ArgumentList	mode		714376	1					
ANR	715937	Argument	mode		714376	0					
ANR	715938	Identifier	mode		714376	0					
ANR	715939	Argument	chksum		714376	1					
ANR	715940	Identifier	chksum		714376	0					
ANR	715941	Argument	data		714376	2					
ANR	715942	Identifier	data		714376	0					
ANR	715943	Argument	datalen		714376	3					
ANR	715944	Identifier	datalen		714376	0					
ANR	715945	ExpressionStatement	free ( data )	2667:4:76436:76447	714376	5	True				
ANR	715946	CallExpression	free ( data )		714376	0					
ANR	715947	Callee	free		714376	0					
ANR	715948	Identifier	free		714376	0					
ANR	715949	ArgumentList	data		714376	1					
ANR	715950	Argument	data		714376	0					
ANR	715951	Identifier	data		714376	0					
ANR	715952	Statement	r_cons_printf	2669:3:76457:76469	714376	2	True				
ANR	715953	Statement	(	2669:17:76471:76471	714376	3	True				
ANR	715954	Statement	"""%s{\\""name\\"":\\""%s\\"","""	2669:18:76472:76492	714376	4	True				
ANR	715955	Statement	"""\\""size\\"":%"""	2670:4:76498:76509	714376	5	True				
ANR	715956	Statement	PFMT64d	2670:16:76510:76516	714376	6	True				
ANR	715957	Statement	""","""	2670:23:76517:76519	714376	7	True				
ANR	715958	Statement	"""\\""vsize\\"":%"""	2671:4:76525:76537	714376	8	True				
ANR	715959	Statement	PFMT64d	2671:17:76538:76544	714376	9	True				
ANR	715960	Statement	""","""	2671:24:76545:76547	714376	10	True				
ANR	715961	Statement	"""\\""perm\\"":\\""%s\\"","""	2672:4:76553:76570	714376	11	True				
ANR	715962	Statement	"""%s"""	2673:4:76576:76579	714376	12	True				
ANR	715963	Statement	"""\\""paddr\\"":%"""	2674:4:76585:76597	714376	13	True				
ANR	715964	Statement	PFMT64d	2674:17:76598:76604	714376	14	True				
ANR	715965	Statement	""","""	2674:24:76605:76607	714376	15	True				
ANR	715966	Statement	"""\\""vaddr\\"":%"""	2675:4:76613:76625	714376	16	True				
ANR	715967	Statement	PFMT64d	2675:17:76626:76632	714376	17	True				
ANR	715968	Statement	"""}"""	2675:24:76633:76635	714376	18	True				
ANR	715969	Statement	","	2675:27:76636:76636	714376	19	True				
ANR	715970	Statement	(	2676:4:76642:76642	714376	20	True				
ANR	715971	Statement	last_processed	2676:5:76643:76656	714376	21	True				
ANR	715972	Statement	&&	2676:20:76658:76659	714376	22	True				
ANR	715973	Statement	!	2676:23:76661:76661	714376	23	True				
ANR	715974	Statement	printHere	2676:24:76662:76670	714376	24	True				
ANR	715975	Statement	)	2676:33:76671:76671	714376	25	True				
ANR	715976	Statement	?	2676:35:76673:76673	714376	26	True				
ANR	715977	Statement	""","""	2676:37:76675:76677	714376	27	True				
ANR	715978	Statement	:	2676:41:76679:76679	714376	28	True				
ANR	715979	Statement	""""""	2676:43:76681:76682	714376	29	True				
ANR	715980	Statement	","	2676:45:76683:76683	714376	30	True				
ANR	715981	Statement	section	2677:4:76689:76695	714376	31	True				
ANR	715982	Statement	->	2677:11:76696:76697	714376	32	True				
ANR	715983	Statement	name	2677:13:76698:76701	714376	33	True				
ANR	715984	Statement	","	2677:17:76702:76702	714376	34	True				
ANR	715985	Statement	section	2678:4:76708:76714	714376	35	True				
ANR	715986	Statement	->	2678:11:76715:76716	714376	36	True				
ANR	715987	Statement	size	2678:13:76717:76720	714376	37	True				
ANR	715988	Statement	","	2678:17:76721:76721	714376	38	True				
ANR	715989	Statement	section	2679:4:76727:76733	714376	39	True				
ANR	715990	Statement	->	2679:11:76734:76735	714376	40	True				
ANR	715991	Statement	vsize	2679:13:76736:76740	714376	41	True				
ANR	715992	Statement	","	2679:18:76741:76741	714376	42	True				
ANR	715993	Statement	perms	2680:4:76747:76751	714376	43	True				
ANR	715994	Statement	","	2680:9:76752:76752	714376	44	True				
ANR	715995	Statement	hashstr	2681:4:76758:76764	714376	45	True				
ANR	715996	Statement	?	2681:12:76766:76766	714376	46	True				
ANR	715997	Label	hashstr :	2681:14:76768:76776	714376	47	True				
ANR	715998	Identifier	hashstr		714376	0					
ANR	715999	Statement	""""""	2681:24:76778:76779	714376	48	True				
ANR	716000	Statement	","	2681:26:76780:76780	714376	49	True				
ANR	716001	Statement	section	2682:4:76786:76792	714376	50	True				
ANR	716002	Statement	->	2682:11:76793:76794	714376	51	True				
ANR	716003	Statement	paddr	2682:13:76795:76799	714376	52	True				
ANR	716004	Statement	","	2682:18:76800:76800	714376	53	True				
ANR	716005	Statement	addr	2683:4:76806:76809	714376	54	True				
ANR	716006	Statement	)	2683:8:76810:76810	714376	55	True				
ANR	716007	ExpressionStatement		2683:9:76811:76811	714376	56	True				
ANR	716008	ExpressionStatement	free ( hashstr )	2684:3:76816:76830	714376	57	True				
ANR	716009	CallExpression	free ( hashstr )		714376	0					
ANR	716010	Callee	free		714376	0					
ANR	716011	Identifier	free		714376	0					
ANR	716012	ArgumentList	hashstr		714376	1					
ANR	716013	Argument	hashstr		714376	0					
ANR	716014	Identifier	hashstr		714376	0					
ANR	716015	ElseStatement	else		714376	0					
ANR	716016	CompoundStatement		256:3:7039:7069	714376	0					
ANR	716017	IdentifierDeclStatement	"char * hashstr = NULL , str [ 128 ] ;"	2686:3:76846:76876	714376	0	True				
ANR	716018	IdentifierDecl	* hashstr = NULL		714376	0					
ANR	716019	IdentifierDeclType	char *		714376	0					
ANR	716020	Identifier	hashstr		714376	1					
ANR	716021	AssignmentExpression	* hashstr = NULL		714376	2		=			
ANR	716022	Identifier	NULL		714376	0					
ANR	716023	Identifier	NULL		714376	1					
ANR	716024	IdentifierDecl	str [ 128 ]		714376	1					
ANR	716025	IdentifierDeclType	char [ 128 ]		714376	0					
ANR	716026	Identifier	str		714376	1					
ANR	716027	PrimaryExpression	128		714376	2					
ANR	716028	IfStatement	if ( chksum )		714376	1					
ANR	716029	Condition	chksum	2687:7:76885:76890	714376	0	True				
ANR	716030	Identifier	chksum		714376	0					
ANR	716031	CompoundStatement		262:4:7170:7198	714376	1					
ANR	716032	IdentifierDeclStatement	ut8 * data = malloc ( section -> size ) ;	2688:4:76899:76933	714376	0	True				
ANR	716033	IdentifierDecl	* data = malloc ( section -> size )		714376	0					
ANR	716034	IdentifierDeclType	ut8 *		714376	0					
ANR	716035	Identifier	data		714376	1					
ANR	716036	AssignmentExpression	* data = malloc ( section -> size )		714376	2		=			
ANR	716037	Identifier	data		714376	0					
ANR	716038	CallExpression	malloc ( section -> size )		714376	1					
ANR	716039	Callee	malloc		714376	0					
ANR	716040	Identifier	malloc		714376	0					
ANR	716041	ArgumentList	section -> size		714376	1					
ANR	716042	Argument	section -> size		714376	0					
ANR	716043	PtrMemberAccess	section -> size		714376	0					
ANR	716044	Identifier	section		714376	0					
ANR	716045	Identifier	size		714376	1					
ANR	716046	IfStatement	if ( ! data )		714376	1					
ANR	716047	Condition	! data	2689:8:76943:76947	714376	0	True				
ANR	716048	UnaryOperationExpression	! data		714376	0					
ANR	716049	UnaryOperator	!		714376	0					
ANR	716050	Identifier	data		714376	1					
ANR	716051	CompoundStatement		259:15:7143:7143	714376	1					
ANR	716052	GotoStatement	goto out ;	2690:5:76957:76965	714376	0	True				
ANR	716053	Identifier	out		714376	0					
ANR	716054	IdentifierDeclStatement	ut32 datalen = section -> size ;	2692:4:76977:77005	714376	2	True				
ANR	716055	IdentifierDecl	datalen = section -> size		714376	0					
ANR	716056	IdentifierDeclType	ut32		714376	0					
ANR	716057	Identifier	datalen		714376	1					
ANR	716058	AssignmentExpression	datalen = section -> size		714376	2		=			
ANR	716059	Identifier	datalen		714376	0					
ANR	716060	PtrMemberAccess	section -> size		714376	1					
ANR	716061	Identifier	section		714376	0					
ANR	716062	Identifier	size		714376	1					
ANR	716063	IfStatement	if ( datalen > 0 )		714376	3					
ANR	716064	Condition	datalen > 0	2694:8:77041:77051	714376	0	True				
ANR	716065	RelationalExpression	datalen > 0		714376	0		>			
ANR	716066	Identifier	datalen		714376	0					
ANR	716067	PrimaryExpression	0		714376	1					
ANR	716068	CompoundStatement		264:21:7247:7247	714376	1					
ANR	716069	ExpressionStatement	"r_io_pread_at ( r -> io , section -> paddr , data , datalen )"	2695:5:77061:77113	714376	0	True				
ANR	716070	CallExpression	"r_io_pread_at ( r -> io , section -> paddr , data , datalen )"		714376	0					
ANR	716071	Callee	r_io_pread_at		714376	0					
ANR	716072	Identifier	r_io_pread_at		714376	0					
ANR	716073	ArgumentList	r -> io		714376	1					
ANR	716074	Argument	r -> io		714376	0					
ANR	716075	PtrMemberAccess	r -> io		714376	0					
ANR	716076	Identifier	r		714376	0					
ANR	716077	Identifier	io		714376	1					
ANR	716078	Argument	section -> paddr		714376	1					
ANR	716079	PtrMemberAccess	section -> paddr		714376	0					
ANR	716080	Identifier	section		714376	0					
ANR	716081	Identifier	paddr		714376	1					
ANR	716082	Argument	data		714376	2					
ANR	716083	Identifier	data		714376	0					
ANR	716084	Argument	datalen		714376	3					
ANR	716085	Identifier	datalen		714376	0					
ANR	716086	ExpressionStatement	"hashstr = build_hash_string ( mode , chksum , data , datalen )"	2697:4:77125:77182	714376	4	True				
ANR	716087	AssignmentExpression	"hashstr = build_hash_string ( mode , chksum , data , datalen )"		714376	0		=			
ANR	716088	Identifier	hashstr		714376	0					
ANR	716089	CallExpression	"build_hash_string ( mode , chksum , data , datalen )"		714376	1					
ANR	716090	Callee	build_hash_string		714376	0					
ANR	716091	Identifier	build_hash_string		714376	0					
ANR	716092	ArgumentList	mode		714376	1					
ANR	716093	Argument	mode		714376	0					
ANR	716094	Identifier	mode		714376	0					
ANR	716095	Argument	chksum		714376	1					
ANR	716096	Identifier	chksum		714376	0					
ANR	716097	Argument	data		714376	2					
ANR	716098	Identifier	data		714376	0					
ANR	716099	Argument	datalen		714376	3					
ANR	716100	Identifier	datalen		714376	0					
ANR	716101	ExpressionStatement	free ( data )	2698:4:77188:77199	714376	5	True				
ANR	716102	CallExpression	free ( data )		714376	0					
ANR	716103	Callee	free		714376	0					
ANR	716104	Identifier	free		714376	0					
ANR	716105	ArgumentList	data		714376	1					
ANR	716106	Argument	data		714376	0					
ANR	716107	Identifier	data		714376	0					
ANR	716108	IfStatement	if ( section -> arch || section -> bits )		714376	2					
ANR	716109	Condition	section -> arch || section -> bits	2700:7:77213:77242	714376	0	True				
ANR	716110	OrExpression	section -> arch || section -> bits		714376	0		||			
ANR	716111	PtrMemberAccess	section -> arch		714376	0					
ANR	716112	Identifier	section		714376	0					
ANR	716113	Identifier	arch		714376	1					
ANR	716114	PtrMemberAccess	section -> bits		714376	1					
ANR	716115	Identifier	section		714376	0					
ANR	716116	Identifier	bits		714376	1					
ANR	716117	CompoundStatement		270:39:7438:7438	714376	1					
ANR	716118	ExpressionStatement	"snprintf ( str , sizeof ( str ) , ""arch=%s bits=%d "" , r_str_get2 ( arch ) , bits )"	2701:4:77251:77329	714376	0	True				
ANR	716119	CallExpression	"snprintf ( str , sizeof ( str ) , ""arch=%s bits=%d "" , r_str_get2 ( arch ) , bits )"		714376	0					
ANR	716120	Callee	snprintf		714376	0					
ANR	716121	Identifier	snprintf		714376	0					
ANR	716122	ArgumentList	str		714376	1					
ANR	716123	Argument	str		714376	0					
ANR	716124	Identifier	str		714376	0					
ANR	716125	Argument	sizeof ( str )		714376	1					
ANR	716126	SizeofExpression	sizeof ( str )		714376	0					
ANR	716127	Sizeof	sizeof		714376	0					
ANR	716128	SizeofOperand	str		714376	1					
ANR	716129	Argument	"""arch=%s bits=%d """		714376	2					
ANR	716130	PrimaryExpression	"""arch=%s bits=%d """		714376	0					
ANR	716131	Argument	r_str_get2 ( arch )		714376	3					
ANR	716132	CallExpression	r_str_get2 ( arch )		714376	0					
ANR	716133	Callee	r_str_get2		714376	0					
ANR	716134	Identifier	r_str_get2		714376	0					
ANR	716135	ArgumentList	arch		714376	1					
ANR	716136	Argument	arch		714376	0					
ANR	716137	Identifier	arch		714376	0					
ANR	716138	Argument	bits		714376	4					
ANR	716139	Identifier	bits		714376	0					
ANR	716140	ElseStatement	else		714376	0					
ANR	716141	CompoundStatement		273:10:7534:7534	714376	0					
ANR	716142	ExpressionStatement	str [ 0 ] = 0	2704:4:77347:77357	714376	0	True				
ANR	716143	AssignmentExpression	str [ 0 ] = 0		714376	0		=			
ANR	716144	ArrayIndexing	str [ 0 ]		714376	0					
ANR	716145	Identifier	str		714376	0					
ANR	716146	PrimaryExpression	0		714376	1					
ANR	716147	PrimaryExpression	0		714376	1					
ANR	716148	IfStatement	if ( r -> bin -> prefix )		714376	3					
ANR	716149	Condition	r -> bin -> prefix	2706:7:77371:77384	714376	0	True				
ANR	716150	PtrMemberAccess	r -> bin -> prefix		714376	0					
ANR	716151	PtrMemberAccess	r -> bin		714376	0					
ANR	716152	Identifier	r		714376	0					
ANR	716153	Identifier	bin		714376	1					
ANR	716154	Identifier	prefix		714376	1					
ANR	716155	CompoundStatement		276:23:7580:7580	714376	1					
ANR	716156	Statement	r_cons_printf	2707:4:77393:77405	714376	0	True				
ANR	716157	Statement	(	2707:18:77407:77407	714376	1	True				
ANR	716158	Statement	"""%02i 0x%08"""	2707:19:77408:77419	714376	2	True				
ANR	716159	Statement	PFMT64x	2707:31:77420:77426	714376	3	True				
ANR	716160	Statement	""" %5"""	2707:38:77427:77431	714376	4	True				
ANR	716161	Statement	PFMT64d	2707:43:77432:77438	714376	5	True				
ANR	716162	Statement	""" 0x%08"""	2707:50:77439:77446	714376	6	True				
ANR	716163	Statement	PFMT64x	2707:58:77447:77453	714376	7	True				
ANR	716164	Statement	""" %5"""	2707:65:77454:77458	714376	8	True				
ANR	716165	Statement	PFMT64d	2707:70:77459:77465	714376	9	True				
ANR	716166	Statement	""" """	2707:77:77466:77468	714376	10	True				
ANR	716167	Statement	"""%s %s%s%s.%s\\n"""	2708:5:77475:77490	714376	11	True				
ANR	716168	Statement	","	2708:21:77491:77491	714376	12	True				
ANR	716169	Statement	i	2709:5:77498:77498	714376	13	True				
ANR	716170	Statement	","	2709:6:77499:77499	714376	14	True				
ANR	716171	Statement	section	2709:8:77501:77507	714376	15	True				
ANR	716172	Statement	->	2709:15:77508:77509	714376	16	True				
ANR	716173	Statement	paddr	2709:17:77510:77514	714376	17	True				
ANR	716174	Statement	","	2709:22:77515:77515	714376	18	True				
ANR	716175	Statement	section	2709:24:77517:77523	714376	19	True				
ANR	716176	Statement	->	2709:31:77524:77525	714376	20	True				
ANR	716177	Statement	size	2709:33:77526:77529	714376	21	True				
ANR	716178	Statement	","	2709:37:77530:77530	714376	22	True				
ANR	716179	Statement	addr	2709:39:77532:77535	714376	23	True				
ANR	716180	Statement	","	2709:43:77536:77536	714376	24	True				
ANR	716181	Statement	section	2709:45:77538:77544	714376	25	True				
ANR	716182	Statement	->	2709:52:77545:77546	714376	26	True				
ANR	716183	Statement	vsize	2709:54:77547:77551	714376	27	True				
ANR	716184	Statement	","	2709:59:77552:77552	714376	28	True				
ANR	716185	Statement	perms	2710:5:77559:77563	714376	29	True				
ANR	716186	Statement	","	2710:10:77564:77564	714376	30	True				
ANR	716187	Statement	str	2710:12:77566:77568	714376	31	True				
ANR	716188	Statement	","	2710:15:77569:77569	714376	32	True				
ANR	716189	Statement	hashstr	2710:17:77571:77577	714376	33	True				
ANR	716190	Statement	?	2710:25:77579:77579	714376	34	True				
ANR	716191	Label	hashstr :	2710:26:77580:77588	714376	35	True				
ANR	716192	Identifier	hashstr		714376	0					
ANR	716193	Statement	""""""	2710:36:77590:77591	714376	36	True				
ANR	716194	Statement	","	2710:38:77592:77592	714376	37	True				
ANR	716195	Statement	r	2710:40:77594:77594	714376	38	True				
ANR	716196	Statement	->	2710:41:77595:77596	714376	39	True				
ANR	716197	Statement	bin	2710:43:77597:77599	714376	40	True				
ANR	716198	Statement	->	2710:46:77600:77601	714376	41	True				
ANR	716199	Statement	prefix	2710:48:77602:77607	714376	42	True				
ANR	716200	Statement	","	2710:54:77608:77608	714376	43	True				
ANR	716201	Statement	section	2710:56:77610:77616	714376	44	True				
ANR	716202	Statement	->	2710:63:77617:77618	714376	45	True				
ANR	716203	Statement	name	2710:65:77619:77622	714376	46	True				
ANR	716204	Statement	)	2710:69:77623:77623	714376	47	True				
ANR	716205	ExpressionStatement		2710:70:77624:77624	714376	48	True				
ANR	716206	ElseStatement	else		714376	0					
ANR	716207	CompoundStatement		281:10:7829:7829	714376	0					
ANR	716208	Statement	r_cons_printf	2712:4:77642:77654	714376	0	True				
ANR	716209	Statement	(	2712:18:77656:77656	714376	1	True				
ANR	716210	Statement	"""%02i 0x%08"""	2712:19:77657:77668	714376	2	True				
ANR	716211	Statement	PFMT64x	2712:31:77669:77675	714376	3	True				
ANR	716212	Statement	""" %5"""	2712:38:77676:77680	714376	4	True				
ANR	716213	Statement	PFMT64d	2712:43:77681:77687	714376	5	True				
ANR	716214	Statement	""" 0x%08"""	2712:50:77688:77695	714376	6	True				
ANR	716215	Statement	PFMT64x	2712:58:77696:77702	714376	7	True				
ANR	716216	Statement	""" %5"""	2712:65:77703:77707	714376	8	True				
ANR	716217	Statement	PFMT64d	2712:70:77708:77714	714376	9	True				
ANR	716218	Statement	""" """	2712:77:77715:77717	714376	10	True				
ANR	716219	Statement	"""%s %s%s%s\\n"""	2713:5:77724:77736	714376	11	True				
ANR	716220	Statement	","	2713:18:77737:77737	714376	12	True				
ANR	716221	Statement	i	2714:5:77744:77744	714376	13	True				
ANR	716222	Statement	","	2714:6:77745:77745	714376	14	True				
ANR	716223	Statement	section	2714:8:77747:77753	714376	15	True				
ANR	716224	Statement	->	2714:15:77754:77755	714376	16	True				
ANR	716225	Statement	paddr	2714:17:77756:77760	714376	17	True				
ANR	716226	Statement	","	2714:22:77761:77761	714376	18	True				
ANR	716227	Statement	(	2714:24:77763:77763	714376	19	True				
ANR	716228	Statement	ut64	2714:25:77764:77767	714376	20	True				
ANR	716229	Statement	)	2714:29:77768:77768	714376	21	True				
ANR	716230	Statement	section	2714:30:77769:77775	714376	22	True				
ANR	716231	Statement	->	2714:37:77776:77777	714376	23	True				
ANR	716232	Statement	size	2714:39:77778:77781	714376	24	True				
ANR	716233	Statement	","	2714:43:77782:77782	714376	25	True				
ANR	716234	Statement	addr	2714:45:77784:77787	714376	26	True				
ANR	716235	Statement	","	2714:49:77788:77788	714376	27	True				
ANR	716236	Statement	(	2714:51:77790:77790	714376	28	True				
ANR	716237	Statement	ut64	2714:52:77791:77794	714376	29	True				
ANR	716238	Statement	)	2714:56:77795:77795	714376	30	True				
ANR	716239	Statement	section	2714:57:77796:77802	714376	31	True				
ANR	716240	Statement	->	2714:64:77803:77804	714376	32	True				
ANR	716241	Statement	vsize	2714:66:77805:77809	714376	33	True				
ANR	716242	Statement	","	2714:71:77810:77810	714376	34	True				
ANR	716243	Statement	perms	2715:5:77817:77821	714376	35	True				
ANR	716244	Statement	","	2715:10:77822:77822	714376	36	True				
ANR	716245	Statement	str	2715:12:77824:77826	714376	37	True				
ANR	716246	Statement	","	2715:15:77827:77827	714376	38	True				
ANR	716247	Statement	hashstr	2715:17:77829:77835	714376	39	True				
ANR	716248	Statement	?	2715:25:77837:77837	714376	40	True				
ANR	716249	Label	hashstr :	2715:26:77838:77846	714376	41	True				
ANR	716250	Identifier	hashstr		714376	0					
ANR	716251	Statement	""""""	2715:36:77848:77849	714376	42	True				
ANR	716252	Statement	","	2715:38:77850:77850	714376	43	True				
ANR	716253	Statement	section	2715:40:77852:77858	714376	44	True				
ANR	716254	Statement	->	2715:47:77859:77860	714376	45	True				
ANR	716255	Statement	name	2715:49:77861:77864	714376	46	True				
ANR	716256	Statement	)	2715:53:77865:77865	714376	47	True				
ANR	716257	ExpressionStatement		2715:54:77866:77866	714376	48	True				
ANR	716258	ExpressionStatement	free ( hashstr )	2717:3:77876:77890	714376	4	True				
ANR	716259	CallExpression	free ( hashstr )		714376	0					
ANR	716260	Callee	free		714376	0					
ANR	716261	Identifier	free		714376	0					
ANR	716262	ArgumentList	hashstr		714376	1					
ANR	716263	Argument	hashstr		714376	0					
ANR	716264	Identifier	hashstr		714376	0					
ANR	716265	ExpressionStatement	i ++	2719:2:77898:77901	714376	21	True				
ANR	716266	PostIncDecOperationExpression	i ++		714376	0					
ANR	716267	Identifier	i		714376	0					
ANR	716268	IncDec	++		714376	1					
ANR	716269	ExpressionStatement	last_processed = iter	2720:2:77905:77926	714376	22	True				
ANR	716270	AssignmentExpression	last_processed = iter		714376	0		=			
ANR	716271	Identifier	last_processed		714376	0					
ANR	716272	Identifier	iter		714376	1					
ANR	716273	IfStatement	if ( printHere )		714376	23					
ANR	716274	Condition	printHere	2721:6:77934:77942	714376	0	True				
ANR	716275	Identifier	printHere		714376	0					
ANR	716276	CompoundStatement		291:17:8138:8138	714376	1					
ANR	716277	BreakStatement	break ;	2722:3:77950:77955	714376	0	True				
ANR	716278	IfStatement	if ( IS_MODE_SET ( mode ) && ! r_io_desc_is_dbg ( r -> io -> desc ) )		714376	31					
ANR	716279	Condition	IS_MODE_SET ( mode ) && ! r_io_desc_is_dbg ( r -> io -> desc )	2725:5:77969:78021	714376	0	True				
ANR	716280	AndExpression	IS_MODE_SET ( mode ) && ! r_io_desc_is_dbg ( r -> io -> desc )		714376	0		&&			
ANR	716281	CallExpression	IS_MODE_SET ( mode )		714376	0					
ANR	716282	Callee	IS_MODE_SET		714376	0					
ANR	716283	Identifier	IS_MODE_SET		714376	0					
ANR	716284	ArgumentList	mode		714376	1					
ANR	716285	Argument	mode		714376	0					
ANR	716286	Identifier	mode		714376	0					
ANR	716287	UnaryOperationExpression	! r_io_desc_is_dbg ( r -> io -> desc )		714376	1					
ANR	716288	UnaryOperator	!		714376	0					
ANR	716289	CallExpression	r_io_desc_is_dbg ( r -> io -> desc )		714376	1					
ANR	716290	Callee	r_io_desc_is_dbg		714376	0					
ANR	716291	Identifier	r_io_desc_is_dbg		714376	0					
ANR	716292	ArgumentList	r -> io -> desc		714376	1					
ANR	716293	Argument	r -> io -> desc		714376	0					
ANR	716294	PtrMemberAccess	r -> io -> desc		714376	0					
ANR	716295	PtrMemberAccess	r -> io		714376	0					
ANR	716296	Identifier	r		714376	0					
ANR	716297	Identifier	io		714376	1					
ANR	716298	Identifier	desc		714376	1					
ANR	716299	CompoundStatement		297:2:8238:8271	714376	1					
ANR	716300	IdentifierDeclStatement	RListIter * it ;	2726:2:78028:78041	714376	0	True				
ANR	716301	IdentifierDecl	* it		714376	0					
ANR	716302	IdentifierDeclType	RListIter *		714376	0					
ANR	716303	Identifier	it		714376	1					
ANR	716304	IdentifierDeclStatement	struct io_bin_section_info_t * ibs ;	2727:2:78045:78078	714376	1	True				
ANR	716305	IdentifierDecl	* ibs		714376	0					
ANR	716306	IdentifierDeclType	struct io_bin_section_info_t *		714376	0					
ANR	716307	Identifier	ibs		714376	1					
ANR	716308	Statement	r_list_foreach_prev	2728:2:78082:78100	714376	2	True				
ANR	716309	Statement	(	2728:22:78102:78102	714376	3	True				
ANR	716310	Statement	io_section_info	2728:23:78103:78117	714376	4	True				
ANR	716311	Statement	","	2728:38:78118:78118	714376	5	True				
ANR	716312	Statement	it	2728:40:78120:78121	714376	6	True				
ANR	716313	Statement	","	2728:42:78122:78122	714376	7	True				
ANR	716314	Statement	ibs	2728:44:78124:78126	714376	8	True				
ANR	716315	Statement	)	2728:47:78127:78127	714376	9	True				
ANR	716316	CompoundStatement		298:49:8322:8322	714376	10					
ANR	716317	ExpressionStatement	"add_section ( r , ibs -> sec , ibs -> addr , ibs -> fd )"	2729:3:78134:78179	714376	0	True				
ANR	716318	CallExpression	"add_section ( r , ibs -> sec , ibs -> addr , ibs -> fd )"		714376	0					
ANR	716319	Callee	add_section		714376	0					
ANR	716320	Identifier	add_section		714376	0					
ANR	716321	ArgumentList	r		714376	1					
ANR	716322	Argument	r		714376	0					
ANR	716323	Identifier	r		714376	0					
ANR	716324	Argument	ibs -> sec		714376	1					
ANR	716325	PtrMemberAccess	ibs -> sec		714376	0					
ANR	716326	Identifier	ibs		714376	0					
ANR	716327	Identifier	sec		714376	1					
ANR	716328	Argument	ibs -> addr		714376	2					
ANR	716329	PtrMemberAccess	ibs -> addr		714376	0					
ANR	716330	Identifier	ibs		714376	0					
ANR	716331	Identifier	addr		714376	1					
ANR	716332	Argument	ibs -> fd		714376	3					
ANR	716333	PtrMemberAccess	ibs -> fd		714376	0					
ANR	716334	Identifier	ibs		714376	0					
ANR	716335	Identifier	fd		714376	1					
ANR	716336	ExpressionStatement	r_io_update ( r -> io )	2731:2:78187:78206	714376	11	True				
ANR	716337	CallExpression	r_io_update ( r -> io )		714376	0					
ANR	716338	Callee	r_io_update		714376	0					
ANR	716339	Identifier	r_io_update		714376	0					
ANR	716340	ArgumentList	r -> io		714376	1					
ANR	716341	Argument	r -> io		714376	0					
ANR	716342	PtrMemberAccess	r -> io		714376	0					
ANR	716343	Identifier	r		714376	0					
ANR	716344	Identifier	io		714376	1					
ANR	716345	ExpressionStatement	r_list_free ( io_section_info )	2732:2:78210:78239	714376	12	True				
ANR	716346	CallExpression	r_list_free ( io_section_info )		714376	0					
ANR	716347	Callee	r_list_free		714376	0					
ANR	716348	Identifier	r_list_free		714376	0					
ANR	716349	ArgumentList	io_section_info		714376	1					
ANR	716350	Argument	io_section_info		714376	0					
ANR	716351	Identifier	io_section_info		714376	0					
ANR	716352	ExpressionStatement	io_section_info = NULL	2733:2:78243:78265	714376	13	True				
ANR	716353	AssignmentExpression	io_section_info = NULL		714376	0		=			
ANR	716354	Identifier	io_section_info		714376	0					
ANR	716355	Identifier	NULL		714376	1					
ANR	716356	IfStatement	if ( IS_MODE_JSON ( mode ) && ! printHere )		714376	32					
ANR	716357	Condition	IS_MODE_JSON ( mode ) && ! printHere	2735:5:78275:78307	714376	0	True				
ANR	716358	AndExpression	IS_MODE_JSON ( mode ) && ! printHere		714376	0		&&			
ANR	716359	CallExpression	IS_MODE_JSON ( mode )		714376	0					
ANR	716360	Callee	IS_MODE_JSON		714376	0					
ANR	716361	Identifier	IS_MODE_JSON		714376	0					
ANR	716362	ArgumentList	mode		714376	1					
ANR	716363	Argument	mode		714376	0					
ANR	716364	Identifier	mode		714376	0					
ANR	716365	UnaryOperationExpression	! printHere		714376	1					
ANR	716366	UnaryOperator	!		714376	0					
ANR	716367	Identifier	printHere		714376	1					
ANR	716368	CompoundStatement		305:40:8503:8503	714376	1					
ANR	716369	ExpressionStatement	"r_cons_println ( ""]"" )"	2736:2:78314:78334	714376	0	True				
ANR	716370	CallExpression	"r_cons_println ( ""]"" )"		714376	0					
ANR	716371	Callee	r_cons_println		714376	0					
ANR	716372	Identifier	r_cons_println		714376	0					
ANR	716373	ArgumentList	"""]"""		714376	1					
ANR	716374	Argument	"""]"""		714376	0					
ANR	716375	PrimaryExpression	"""]"""		714376	0					
ANR	716376	ElseStatement	else		714376	0					
ANR	716377	IfStatement	if ( IS_MODE_NORMAL ( mode ) && ! at && ! printHere )		714376	0					
ANR	716378	Condition	IS_MODE_NORMAL ( mode ) && ! at && ! printHere	2737:12:78348:78389	714376	0	True				
ANR	716379	AndExpression	IS_MODE_NORMAL ( mode ) && ! at && ! printHere		714376	0		&&			
ANR	716380	CallExpression	IS_MODE_NORMAL ( mode )		714376	0					
ANR	716381	Callee	IS_MODE_NORMAL		714376	0					
ANR	716382	Identifier	IS_MODE_NORMAL		714376	0					
ANR	716383	ArgumentList	mode		714376	1					
ANR	716384	Argument	mode		714376	0					
ANR	716385	Identifier	mode		714376	0					
ANR	716386	AndExpression	! at && ! printHere		714376	1		&&			
ANR	716387	UnaryOperationExpression	! at		714376	0					
ANR	716388	UnaryOperator	!		714376	0					
ANR	716389	Identifier	at		714376	1					
ANR	716390	UnaryOperationExpression	! printHere		714376	1					
ANR	716391	UnaryOperator	!		714376	0					
ANR	716392	Identifier	printHere		714376	1					
ANR	716393	CompoundStatement		307:56:8585:8585	714376	1					
ANR	716394	ExpressionStatement	ret = true	2741:1:78442:78452	714376	33	True				
ANR	716395	AssignmentExpression	ret = true		714376	0		=			
ANR	716396	Identifier	ret		714376	0					
ANR	716397	Identifier	true		714376	1					
ANR	716398	Label	out :	2742:0:78454:78457	714376	34	True				
ANR	716399	Identifier	out		714376	0					
ANR	716400	ExpressionStatement	ht_pp_free ( dup_chk_ht )	2743:1:78460:78483	714376	35	True				
ANR	716401	CallExpression	ht_pp_free ( dup_chk_ht )		714376	0					
ANR	716402	Callee	ht_pp_free		714376	0					
ANR	716403	Identifier	ht_pp_free		714376	0					
ANR	716404	ArgumentList	dup_chk_ht		714376	1					
ANR	716405	Argument	dup_chk_ht		714376	0					
ANR	716406	Identifier	dup_chk_ht		714376	0					
ANR	716407	ReturnStatement	return ret ;	2744:1:78486:78496	714376	36	True				
ANR	716408	Identifier	ret		714376	0					
ANR	716409	ReturnType	static int		714376	1					
ANR	716410	Identifier	bin_sections		714376	2					
ANR	716411	ParameterList	"RCore * r , int mode , ut64 laddr , int va , ut64 at , const char * name , const char * chksum , bool print_segments"		714376	3					
ANR	716412	Parameter	RCore * r	2431:24:69698:69705	714376	0	True				
ANR	716413	ParameterType	RCore *		714376	0					
ANR	716414	Identifier	r		714376	1					
ANR	716415	Parameter	int mode	2431:34:69708:69715	714376	1	True				
ANR	716416	ParameterType	int		714376	0					
ANR	716417	Identifier	mode		714376	1					
ANR	716418	Parameter	ut64 laddr	2431:44:69718:69727	714376	2	True				
ANR	716419	ParameterType	ut64		714376	0					
ANR	716420	Identifier	laddr		714376	1					
ANR	716421	Parameter	int va	2431:56:69730:69735	714376	3	True				
ANR	716422	ParameterType	int		714376	0					
ANR	716423	Identifier	va		714376	1					
ANR	716424	Parameter	ut64 at	2431:64:69738:69744	714376	4	True				
ANR	716425	ParameterType	ut64		714376	0					
ANR	716426	Identifier	at		714376	1					
ANR	716427	Parameter	const char * name	2431:73:69747:69762	714376	5	True				
ANR	716428	ParameterType	const char *		714376	0					
ANR	716429	Identifier	name		714376	1					
ANR	716430	Parameter	const char * chksum	2431:91:69765:69782	714376	6	True				
ANR	716431	ParameterType	const char *		714376	0					
ANR	716432	Identifier	chksum		714376	1					
ANR	716433	Parameter	bool print_segments	2431:111:69785:69803	714376	7	True				
ANR	716434	ParameterType	bool		714376	0					
ANR	716435	Identifier	print_segments		714376	1					
ANR	716436	CFGEntryNode	ENTRY		714376		True				
ANR	716437	CFGExitNode	EXIT		714376		True				
ANR	716438	CFGErrorNode	ERROR		714376		True				
ANR	716439	Symbol	s -> is_segment		714376						
ANR	716440	Symbol	r_io_desc_is_dbg		714376						
ANR	716441	Symbol	humansz		714376						
ANR	716442	Symbol	IS_MODE_SIMPLE		714376						
ANR	716443	Symbol	type		714376						
ANR	716444	Symbol	* chksum		714376						
ANR	716445	Symbol	pitv		714376						
ANR	716446	Symbol	segments_only		714376						
ANR	716447	Symbol	is_in_range		714376						
ANR	716448	Symbol	r_listinfo_new		714376						
ANR	716449	Symbol	r -> offset		714376						
ANR	716450	Symbol	R_FLAGS_FS_SECTIONS		714376						
ANR	716451	Symbol	* section		714376						
ANR	716452	Symbol	r_list_newf		714376						
ANR	716453	Symbol	section -> vsize		714376						
ANR	716454	Symbol	R_FLAGS_FS_SEGMENTS		714376						
ANR	716455	Symbol	bits		714376						
ANR	716456	Symbol	iter		714376						
ANR	716457	Symbol	r_core_file_cur_fd		714376						
ANR	716458	Symbol	it		714376						
ANR	716459	Symbol	datalen		714376						
ANR	716460	Symbol	IS_MODE_SET		714376						
ANR	716461	Symbol	str		714376						
ANR	716462	Symbol	at		714376						
ANR	716463	Symbol	size		714376						
ANR	716464	Symbol	r_config_get_i		714376						
ANR	716465	Symbol	chksum		714376						
ANR	716466	Symbol	last_processed		714376						
ANR	716467	Symbol	dup_chk_ht		714376						
ANR	716468	Symbol	laddr		714376						
ANR	716469	Symbol	s -> size		714376						
ANR	716470	Symbol	vitv		714376						
ANR	716471	Symbol	r -> flags		714376						
ANR	716472	Symbol	va_sect		714376						
ANR	716473	Symbol	pfx		714376						
ANR	716474	Symbol	r_config_get		714376						
ANR	716475	Symbol	IS_MODE_JSON		714376						
ANR	716476	Symbol	ibs -> sec		714376						
ANR	716477	Symbol	s -> perm		714376						
ANR	716478	Symbol	R_PERM_X		714376						
ANR	716479	Symbol	R_PERM_W		714376						
ANR	716480	Symbol	found		714376						
ANR	716481	Symbol	R_PERM_R		714376						
ANR	716482	Symbol	R_SYS_BITS		714376						
ANR	716483	Symbol	* r -> bin		714376						
ANR	716484	Symbol	IS_MODE_EQUAL		714376						
ANR	716485	Symbol	R_PRINT_FLAGS_COLOR		714376						
ANR	716486	Symbol	* * r		714376						
ANR	716487	Symbol	ibs -> addr		714376						
ANR	716488	Symbol	* str		714376						
ANR	716489	Symbol	free		714376						
ANR	716490	Symbol	r -> print -> flags		714376						
ANR	716491	Symbol	malloc		714376						
ANR	716492	Symbol	i		714376						
ANR	716493	Symbol	* r -> print		714376						
ANR	716494	Symbol	m		714376						
ANR	716495	Symbol	inDebugger		714376						
ANR	716496	Symbol	section -> perm		714376						
ANR	716497	Symbol	n		714376						
ANR	716498	Symbol	IS_MODE_NORMAL		714376						
ANR	716499	Symbol	r		714376						
ANR	716500	Symbol	section -> add		714376						
ANR	716501	Symbol	s		714376						
ANR	716502	Symbol	section -> size		714376						
ANR	716503	Symbol	arch		714376						
ANR	716504	Symbol	* info		714376						
ANR	716505	Symbol	ibs		714376						
ANR	716506	Symbol	r -> io -> desc		714376						
ANR	716507	Symbol	section -> bits		714376						
ANR	716508	Symbol	r -> io		714376						
ANR	716509	Symbol	ibs -> fd		714376						
ANR	716510	Symbol	data		714376						
ANR	716511	Symbol	build_hash_string		714376						
ANR	716512	Symbol	m -> from		714376						
ANR	716513	Symbol	section		714376						
ANR	716514	Symbol	section -> arch		714376						
ANR	716515	Symbol	mode		714376						
ANR	716516	Symbol	loaded		714376						
ANR	716517	Symbol	r_str_get2		714376						
ANR	716518	Symbol	strlen		714376						
ANR	716519	Symbol	& found		714376						
ANR	716520	Symbol	ht_pp_new0		714376						
ANR	716521	Symbol	R_PERM_SHAR		714376						
ANR	716522	Symbol	r -> io -> va		714376						
ANR	716523	Symbol	rva		714376						
ANR	716524	Symbol	info		714376						
ANR	716525	Symbol	info -> arch		714376						
ANR	716526	Symbol	ret		714376						
ANR	716527	Symbol	strcmp		714376						
ANR	716528	Symbol	NULL		714376						
ANR	716529	Symbol	r_cons_get_size		714376						
ANR	716530	Symbol	section -> paddr		714376						
ANR	716531	Symbol	va		714376						
ANR	716532	Symbol	__filterQuotedShell		714376						
ANR	716533	Symbol	list		714376						
ANR	716534	Symbol	r -> anal		714376						
ANR	716535	Symbol	sections		714376						
ANR	716536	Symbol	* perms		714376						
ANR	716537	Symbol	name		714376						
ANR	716538	Symbol	true		714376						
ANR	716539	Symbol	fd		714376						
ANR	716540	Symbol	section -> is_segment		714376						
ANR	716541	Symbol	VA_NOREBASE		714376						
ANR	716542	Symbol	R_META_TYPE_COMMENT		714376						
ANR	716543	Symbol	io_section_info		714376						
ANR	716544	Symbol	* r -> io		714376						
ANR	716545	Symbol	r_str_newf		714376						
ANR	716546	Symbol	info -> bits		714376						
ANR	716547	Symbol	r -> bin		714376						
ANR	716548	Symbol	perms		714376						
ANR	716549	Symbol	* ibs		714376						
ANR	716550	Symbol	addr		714376						
ANR	716551	Symbol	cols		714376						
ANR	716552	Symbol	r -> bin -> prefix		714376						
ANR	716553	Symbol	printHere		714376						
ANR	716554	Symbol	false		714376						
ANR	716555	Symbol	section -> format		714376						
ANR	716556	Symbol	print_segments		714376						
ANR	716557	Symbol	section -> vaddr		714376						
ANR	716558	Symbol	hashstr		714376						
ANR	716559	Symbol	s -> name		714376						
ANR	716560	Symbol	section -> name		714376						
ANR	716561	Symbol	* m		714376						
ANR	716562	Symbol	r -> print		714376						
ANR	716563	Symbol	IS_MODE_RAD		714376						
ANR	716564	Symbol	strdup		714376						
ANR	716565	Symbol	* r		714376						
ANR	716566	Symbol	* s		714376						
ANR	716567	Symbol	r_bin_get_sections		714376						
ANR	716568	Symbol	r -> config		714376						
ANR	716569	Symbol	r_listinfo_free		714376						
ANR	716570	Function	bin_fields	2747:0:78501:80698							
ANR	716571	FunctionDef	"bin_fields (RCore * r , int mode , int va)"		716570	0					
ANR	716572	CompoundStatement		2747:50:78551:80698	716570	0					
ANR	716573	IdentifierDeclStatement	RList * fields ;	2748:1:78554:78567	716570	0	True				
ANR	716574	IdentifierDecl	* fields		716570	0					
ANR	716575	IdentifierDeclType	RList *		716570	0					
ANR	716576	Identifier	fields		716570	1					
ANR	716577	IdentifierDeclStatement	RListIter * iter ;	2749:1:78570:78585	716570	1	True				
ANR	716578	IdentifierDecl	* iter		716570	0					
ANR	716579	IdentifierDeclType	RListIter *		716570	0					
ANR	716580	Identifier	iter		716570	1					
ANR	716581	IdentifierDeclStatement	RBinField * field ;	2750:1:78588:78604	716570	2	True				
ANR	716582	IdentifierDecl	* field		716570	0					
ANR	716583	IdentifierDeclType	RBinField *		716570	0					
ANR	716584	Identifier	field		716570	1					
ANR	716585	IdentifierDeclStatement	int i = 0 ;	2751:1:78607:78616	716570	3	True				
ANR	716586	IdentifierDecl	i = 0		716570	0					
ANR	716587	IdentifierDeclType	int		716570	0					
ANR	716588	Identifier	i		716570	1					
ANR	716589	AssignmentExpression	i = 0		716570	2		=			
ANR	716590	Identifier	i		716570	0					
ANR	716591	PrimaryExpression	0		716570	1					
ANR	716592	IdentifierDeclStatement	RBin * bin = r -> bin ;	2752:1:78619:78637	716570	4	True				
ANR	716593	IdentifierDecl	* bin = r -> bin		716570	0					
ANR	716594	IdentifierDeclType	RBin *		716570	0					
ANR	716595	Identifier	bin		716570	1					
ANR	716596	AssignmentExpression	* bin = r -> bin		716570	2		=			
ANR	716597	Identifier	bin		716570	0					
ANR	716598	PtrMemberAccess	r -> bin		716570	1					
ANR	716599	Identifier	r		716570	0					
ANR	716600	Identifier	bin		716570	1					
ANR	716601	IfStatement	if ( ! ( fields = r_bin_get_fields ( bin ) ) )		716570	5					
ANR	716602	Condition	! ( fields = r_bin_get_fields ( bin ) )	2754:5:78645:78678	716570	0	True				
ANR	716603	UnaryOperationExpression	! ( fields = r_bin_get_fields ( bin ) )		716570	0					
ANR	716604	UnaryOperator	!		716570	0					
ANR	716605	AssignmentExpression	fields = r_bin_get_fields ( bin )		716570	1		=			
ANR	716606	Identifier	fields		716570	0					
ANR	716607	CallExpression	r_bin_get_fields ( bin )		716570	1					
ANR	716608	Callee	r_bin_get_fields		716570	0					
ANR	716609	Identifier	r_bin_get_fields		716570	0					
ANR	716610	ArgumentList	bin		716570	1					
ANR	716611	Argument	bin		716570	0					
ANR	716612	Identifier	bin		716570	0					
ANR	716613	CompoundStatement		8:41:129:129	716570	1					
ANR	716614	ReturnStatement	return false ;	2755:2:78685:78697	716570	0	True				
ANR	716615	Identifier	false		716570	0					
ANR	716616	IfStatement	if ( IS_MODE_JSON ( mode ) )		716570	6					
ANR	716617	Condition	IS_MODE_JSON ( mode )	2757:5:78707:78725	716570	0	True				
ANR	716618	CallExpression	IS_MODE_JSON ( mode )		716570	0					
ANR	716619	Callee	IS_MODE_JSON		716570	0					
ANR	716620	Identifier	IS_MODE_JSON		716570	0					
ANR	716621	ArgumentList	mode		716570	1					
ANR	716622	Argument	mode		716570	0					
ANR	716623	Identifier	mode		716570	0					
ANR	716624	CompoundStatement		11:26:176:176	716570	1					
ANR	716625	ExpressionStatement	"r_cons_print ( ""["" )"	2758:2:78732:78750	716570	0	True				
ANR	716626	CallExpression	"r_cons_print ( ""["" )"		716570	0					
ANR	716627	Callee	r_cons_print		716570	0					
ANR	716628	Identifier	r_cons_print		716570	0					
ANR	716629	ArgumentList	"""["""		716570	1					
ANR	716630	Argument	"""["""		716570	0					
ANR	716631	PrimaryExpression	"""["""		716570	0					
ANR	716632	ElseStatement	else		716570	0					
ANR	716633	IfStatement	if ( IS_MODE_RAD ( mode ) )		716570	0					
ANR	716634	Condition	IS_MODE_RAD ( mode )	2759:12:78764:78781	716570	0	True				
ANR	716635	CallExpression	IS_MODE_RAD ( mode )		716570	0					
ANR	716636	Callee	IS_MODE_RAD		716570	0					
ANR	716637	Identifier	IS_MODE_RAD		716570	0					
ANR	716638	ArgumentList	mode		716570	1					
ANR	716639	Argument	mode		716570	0					
ANR	716640	Identifier	mode		716570	0					
ANR	716641	CompoundStatement		13:32:232:232	716570	1					
ANR	716642	ExpressionStatement	"r_cons_println ( ""fs header"" )"	2760:2:78788:78816	716570	0	True				
ANR	716643	CallExpression	"r_cons_println ( ""fs header"" )"		716570	0					
ANR	716644	Callee	r_cons_println		716570	0					
ANR	716645	Identifier	r_cons_println		716570	0					
ANR	716646	ArgumentList	"""fs header"""		716570	1					
ANR	716647	Argument	"""fs header"""		716570	0					
ANR	716648	PrimaryExpression	"""fs header"""		716570	0					
ANR	716649	ElseStatement	else		716570	0					
ANR	716650	IfStatement	if ( IS_MODE_NORMAL ( mode ) )		716570	0					
ANR	716651	Condition	IS_MODE_NORMAL ( mode )	2761:12:78830:78850	716570	0	True				
ANR	716652	CallExpression	IS_MODE_NORMAL ( mode )		716570	0					
ANR	716653	Callee	IS_MODE_NORMAL		716570	0					
ANR	716654	Identifier	IS_MODE_NORMAL		716570	0					
ANR	716655	ArgumentList	mode		716570	1					
ANR	716656	Argument	mode		716570	0					
ANR	716657	Identifier	mode		716570	0					
ANR	716658	CompoundStatement		15:35:301:301	716570	1					
ANR	716659	ExpressionStatement	"r_cons_println ( ""[Header fields]"" )"	2762:2:78857:78891	716570	0	True				
ANR	716660	CallExpression	"r_cons_println ( ""[Header fields]"" )"		716570	0					
ANR	716661	Callee	r_cons_println		716570	0					
ANR	716662	Identifier	r_cons_println		716570	0					
ANR	716663	ArgumentList	"""[Header fields]"""		716570	1					
ANR	716664	Argument	"""[Header fields]"""		716570	0					
ANR	716665	PrimaryExpression	"""[Header fields]"""		716570	0					
ANR	716666	Statement	r_list_foreach	2764:1:78897:78910	716570	7	True				
ANR	716667	Statement	(	2764:16:78912:78912	716570	8	True				
ANR	716668	Statement	fields	2764:17:78913:78918	716570	9	True				
ANR	716669	Statement	","	2764:23:78919:78919	716570	10	True				
ANR	716670	Statement	iter	2764:25:78921:78924	716570	11	True				
ANR	716671	Statement	","	2764:29:78925:78925	716570	12	True				
ANR	716672	Statement	field	2764:31:78927:78931	716570	13	True				
ANR	716673	Statement	)	2764:36:78932:78932	716570	14	True				
ANR	716674	CompoundStatement		19:2:386:439	716570	15					
ANR	716675	IdentifierDeclStatement	"ut64 addr = rva ( bin , field -> paddr , field -> vaddr , va ) ;"	2765:2:78938:78991	716570	0	True				
ANR	716676	IdentifierDecl	"addr = rva ( bin , field -> paddr , field -> vaddr , va )"		716570	0					
ANR	716677	IdentifierDeclType	ut64		716570	0					
ANR	716678	Identifier	addr		716570	1					
ANR	716679	AssignmentExpression	"addr = rva ( bin , field -> paddr , field -> vaddr , va )"		716570	2		=			
ANR	716680	Identifier	addr		716570	0					
ANR	716681	CallExpression	"rva ( bin , field -> paddr , field -> vaddr , va )"		716570	1					
ANR	716682	Callee	rva		716570	0					
ANR	716683	Identifier	rva		716570	0					
ANR	716684	ArgumentList	bin		716570	1					
ANR	716685	Argument	bin		716570	0					
ANR	716686	Identifier	bin		716570	0					
ANR	716687	Argument	field -> paddr		716570	1					
ANR	716688	PtrMemberAccess	field -> paddr		716570	0					
ANR	716689	Identifier	field		716570	0					
ANR	716690	Identifier	paddr		716570	1					
ANR	716691	Argument	field -> vaddr		716570	2					
ANR	716692	PtrMemberAccess	field -> vaddr		716570	0					
ANR	716693	Identifier	field		716570	0					
ANR	716694	Identifier	vaddr		716570	1					
ANR	716695	Argument	va		716570	3					
ANR	716696	Identifier	va		716570	0					
ANR	716697	IfStatement	if ( IS_MODE_RAD ( mode ) )		716570	1					
ANR	716698	Condition	IS_MODE_RAD ( mode )	2767:6:79000:79017	716570	0	True				
ANR	716699	CallExpression	IS_MODE_RAD ( mode )		716570	0					
ANR	716700	Callee	IS_MODE_RAD		716570	0					
ANR	716701	Identifier	IS_MODE_RAD		716570	0					
ANR	716702	ArgumentList	mode		716570	1					
ANR	716703	Argument	mode		716570	0					
ANR	716704	Identifier	mode		716570	0					
ANR	716705	CompoundStatement		22:3:473:516	716570	1					
ANR	716706	IdentifierDeclStatement	char * n = __filterQuotedShell ( field -> name ) ;	2768:3:79025:79068	716570	0	True				
ANR	716707	IdentifierDecl	* n = __filterQuotedShell ( field -> name )		716570	0					
ANR	716708	IdentifierDeclType	char *		716570	0					
ANR	716709	Identifier	n		716570	1					
ANR	716710	AssignmentExpression	* n = __filterQuotedShell ( field -> name )		716570	2		=			
ANR	716711	Identifier	n		716570	0					
ANR	716712	CallExpression	__filterQuotedShell ( field -> name )		716570	1					
ANR	716713	Callee	__filterQuotedShell		716570	0					
ANR	716714	Identifier	__filterQuotedShell		716570	0					
ANR	716715	ArgumentList	field -> name		716570	1					
ANR	716716	Argument	field -> name		716570	0					
ANR	716717	PtrMemberAccess	field -> name		716570	0					
ANR	716718	Identifier	field		716570	0					
ANR	716719	Identifier	name		716570	1					
ANR	716720	ExpressionStatement	"r_name_filter ( n , - 1 )"	2769:3:79073:79094	716570	1	True				
ANR	716721	CallExpression	"r_name_filter ( n , - 1 )"		716570	0					
ANR	716722	Callee	r_name_filter		716570	0					
ANR	716723	Identifier	r_name_filter		716570	0					
ANR	716724	ArgumentList	n		716570	1					
ANR	716725	Argument	n		716570	0					
ANR	716726	Identifier	n		716570	0					
ANR	716727	Argument	- 1		716570	1					
ANR	716728	UnaryOperationExpression	- 1		716570	0					
ANR	716729	UnaryOperator	-		716570	0					
ANR	716730	PrimaryExpression	1		716570	1					
ANR	716731	Statement	r_cons_printf	2770:3:79099:79111	716570	2	True				
ANR	716732	Statement	(	2770:17:79113:79113	716570	3	True				
ANR	716733	Statement	"""\\""f header.%s 1 0x%08"""	2770:18:79114:79136	716570	4	True				
ANR	716734	Statement	PFMT64x	2770:41:79137:79143	716570	5	True				
ANR	716735	Statement	"""\\""\\n"""	2770:48:79144:79149	716570	6	True				
ANR	716736	Statement	","	2770:54:79150:79150	716570	7	True				
ANR	716737	Statement	n	2770:56:79152:79152	716570	8	True				
ANR	716738	Statement	","	2770:57:79153:79153	716570	9	True				
ANR	716739	Statement	addr	2770:59:79155:79158	716570	10	True				
ANR	716740	Statement	)	2770:63:79159:79159	716570	11	True				
ANR	716741	ExpressionStatement		2770:64:79160:79160	716570	12	True				
ANR	716742	IfStatement	if ( field -> comment && * field -> comment )		716570	13					
ANR	716743	Condition	field -> comment && * field -> comment	2771:7:79169:79201	716570	0	True				
ANR	716744	AndExpression	field -> comment && * field -> comment		716570	0		&&			
ANR	716745	PtrMemberAccess	field -> comment		716570	0					
ANR	716746	Identifier	field		716570	0					
ANR	716747	Identifier	comment		716570	1					
ANR	716748	UnaryOperationExpression	* field -> comment		716570	1					
ANR	716749	UnaryOperator	*		716570	0					
ANR	716750	PtrMemberAccess	field -> comment		716570	1					
ANR	716751	Identifier	field		716570	0					
ANR	716752	Identifier	comment		716570	1					
ANR	716753	CompoundStatement		29:4:787:826	716570	1					
ANR	716754	IdentifierDeclStatement	"char * e = sdb_encode ( ( const ut8 * ) field -> comment , - 1 ) ;"	2772:4:79210:79263	716570	0	True				
ANR	716755	IdentifierDecl	"* e = sdb_encode ( ( const ut8 * ) field -> comment , - 1 )"		716570	0					
ANR	716756	IdentifierDeclType	char *		716570	0					
ANR	716757	Identifier	e		716570	1					
ANR	716758	AssignmentExpression	"* e = sdb_encode ( ( const ut8 * ) field -> comment , - 1 )"		716570	2		=			
ANR	716759	Identifier	e		716570	0					
ANR	716760	CallExpression	"sdb_encode ( ( const ut8 * ) field -> comment , - 1 )"		716570	1					
ANR	716761	Callee	sdb_encode		716570	0					
ANR	716762	Identifier	sdb_encode		716570	0					
ANR	716763	ArgumentList	( const ut8 * ) field -> comment		716570	1					
ANR	716764	Argument	( const ut8 * ) field -> comment		716570	0					
ANR	716765	CastExpression	( const ut8 * ) field -> comment		716570	0					
ANR	716766	CastTarget	const ut8 *		716570	0					
ANR	716767	PtrMemberAccess	field -> comment		716570	1					
ANR	716768	Identifier	field		716570	0					
ANR	716769	Identifier	comment		716570	1					
ANR	716770	Argument	- 1		716570	1					
ANR	716771	UnaryOperationExpression	- 1		716570	0					
ANR	716772	UnaryOperator	-		716570	0					
ANR	716773	PrimaryExpression	1		716570	1					
ANR	716774	Statement	r_cons_printf	2773:4:79269:79281	716570	1	True				
ANR	716775	Statement	(	2773:18:79283:79283	716570	2	True				
ANR	716776	Statement	"""CCu %s @ 0x%"""	2773:19:79284:79297	716570	3	True				
ANR	716777	Statement	PFMT64x	2773:33:79298:79304	716570	4	True				
ANR	716778	Statement	"""\\n"""	2773:40:79305:79308	716570	5	True				
ANR	716779	Statement	","	2773:44:79309:79309	716570	6	True				
ANR	716780	Statement	e	2773:46:79311:79311	716570	7	True				
ANR	716781	Statement	","	2773:47:79312:79312	716570	8	True				
ANR	716782	Statement	addr	2773:49:79314:79317	716570	9	True				
ANR	716783	Statement	)	2773:53:79318:79318	716570	10	True				
ANR	716784	ExpressionStatement		2773:54:79319:79319	716570	11	True				
ANR	716785	ExpressionStatement	free ( e )	2774:4:79325:79333	716570	12	True				
ANR	716786	CallExpression	free ( e )		716570	0					
ANR	716787	Callee	free		716570	0					
ANR	716788	Identifier	free		716570	0					
ANR	716789	ArgumentList	e		716570	1					
ANR	716790	Argument	e		716570	0					
ANR	716791	Identifier	e		716570	0					
ANR	716792	IdentifierDeclStatement	char * f = __filterShell ( field -> format ) ;	2775:4:79339:79378	716570	13	True				
ANR	716793	IdentifierDecl	* f = __filterShell ( field -> format )		716570	0					
ANR	716794	IdentifierDeclType	char *		716570	0					
ANR	716795	Identifier	f		716570	1					
ANR	716796	AssignmentExpression	* f = __filterShell ( field -> format )		716570	2		=			
ANR	716797	Identifier	f		716570	0					
ANR	716798	CallExpression	__filterShell ( field -> format )		716570	1					
ANR	716799	Callee	__filterShell		716570	0					
ANR	716800	Identifier	__filterShell		716570	0					
ANR	716801	ArgumentList	field -> format		716570	1					
ANR	716802	Argument	field -> format		716570	0					
ANR	716803	PtrMemberAccess	field -> format		716570	0					
ANR	716804	Identifier	field		716570	0					
ANR	716805	Identifier	format		716570	1					
ANR	716806	Statement	r_cons_printf	2776:4:79384:79396	716570	14	True				
ANR	716807	Statement	(	2776:18:79398:79398	716570	15	True				
ANR	716808	Statement	"""Cf %d .%s @ 0x%"""	2776:19:79399:79415	716570	16	True				
ANR	716809	Statement	PFMT64x	2776:36:79416:79422	716570	17	True				
ANR	716810	Statement	"""\\n"""	2776:43:79423:79426	716570	18	True				
ANR	716811	Statement	","	2776:47:79427:79427	716570	19	True				
ANR	716812	Statement	field	2776:49:79429:79433	716570	20	True				
ANR	716813	Statement	->	2776:54:79434:79435	716570	21	True				
ANR	716814	Statement	size	2776:56:79436:79439	716570	22	True				
ANR	716815	Statement	","	2776:60:79440:79440	716570	23	True				
ANR	716816	Statement	f	2776:62:79442:79442	716570	24	True				
ANR	716817	Statement	","	2776:63:79443:79443	716570	25	True				
ANR	716818	Statement	addr	2776:65:79445:79448	716570	26	True				
ANR	716819	Statement	)	2776:69:79449:79449	716570	27	True				
ANR	716820	ExpressionStatement		2776:70:79450:79450	716570	28	True				
ANR	716821	ExpressionStatement	free ( f )	2777:4:79456:79464	716570	29	True				
ANR	716822	CallExpression	free ( f )		716570	0					
ANR	716823	Callee	free		716570	0					
ANR	716824	Identifier	free		716570	0					
ANR	716825	ArgumentList	f		716570	1					
ANR	716826	Argument	f		716570	0					
ANR	716827	Identifier	f		716570	0					
ANR	716828	IfStatement	if ( field -> format && * field -> format )		716570	14					
ANR	716829	Condition	field -> format && * field -> format	2779:7:79478:79508	716570	0	True				
ANR	716830	AndExpression	field -> format && * field -> format		716570	0		&&			
ANR	716831	PtrMemberAccess	field -> format		716570	0					
ANR	716832	Identifier	field		716570	0					
ANR	716833	Identifier	format		716570	1					
ANR	716834	UnaryOperationExpression	* field -> format		716570	1					
ANR	716835	UnaryOperator	*		716570	0					
ANR	716836	PtrMemberAccess	field -> format		716570	1					
ANR	716837	Identifier	field		716570	0					
ANR	716838	Identifier	format		716570	1					
ANR	716839	CompoundStatement		33:40:959:959	716570	1					
ANR	716840	ExpressionStatement	"r_cons_printf ( ""pf.%s %s\\n"" , n , field -> format )"	2780:4:79517:79563	716570	0	True				
ANR	716841	CallExpression	"r_cons_printf ( ""pf.%s %s\\n"" , n , field -> format )"		716570	0					
ANR	716842	Callee	r_cons_printf		716570	0					
ANR	716843	Identifier	r_cons_printf		716570	0					
ANR	716844	ArgumentList	"""pf.%s %s\\n"""		716570	1					
ANR	716845	Argument	"""pf.%s %s\\n"""		716570	0					
ANR	716846	PrimaryExpression	"""pf.%s %s\\n"""		716570	0					
ANR	716847	Argument	n		716570	1					
ANR	716848	Identifier	n		716570	0					
ANR	716849	Argument	field -> format		716570	2					
ANR	716850	PtrMemberAccess	field -> format		716570	0					
ANR	716851	Identifier	field		716570	0					
ANR	716852	Identifier	format		716570	1					
ANR	716853	ExpressionStatement	free ( n )	2782:3:79573:79581	716570	15	True				
ANR	716854	CallExpression	free ( n )		716570	0					
ANR	716855	Callee	free		716570	0					
ANR	716856	Identifier	free		716570	0					
ANR	716857	ArgumentList	n		716570	1					
ANR	716858	Argument	n		716570	0					
ANR	716859	Identifier	n		716570	0					
ANR	716860	ElseStatement	else		716570	0					
ANR	716861	IfStatement	if ( IS_MODE_JSON ( mode ) )		716570	0					
ANR	716862	Condition	IS_MODE_JSON ( mode )	2783:13:79596:79614	716570	0	True				
ANR	716863	CallExpression	IS_MODE_JSON ( mode )		716570	0					
ANR	716864	Callee	IS_MODE_JSON		716570	0					
ANR	716865	Identifier	IS_MODE_JSON		716570	0					
ANR	716866	ArgumentList	mode		716570	1					
ANR	716867	Argument	mode		716570	0					
ANR	716868	Identifier	mode		716570	0					
ANR	716869	CompoundStatement		37:34:1065:1065	716570	1					
ANR	716870	Statement	r_cons_printf	2784:3:79622:79634	716570	0	True				
ANR	716871	Statement	(	2784:17:79636:79636	716570	1	True				
ANR	716872	Statement	"""%s{\\""name\\"":\\""%s\\"","""	2784:18:79637:79657	716570	2	True				
ANR	716873	Statement	"""\\""vaddr\\"":%"""	2785:4:79663:79675	716570	3	True				
ANR	716874	Statement	PFMT64d	2785:17:79676:79682	716570	4	True				
ANR	716875	Statement	""","""	2785:24:79683:79685	716570	5	True				
ANR	716876	Statement	"""\\""paddr\\"":%"""	2786:4:79691:79703	716570	6	True				
ANR	716877	Statement	PFMT64d	2786:17:79704:79710	716570	7	True				
ANR	716878	Statement	","	2786:24:79711:79711	716570	8	True				
ANR	716879	Statement	iter	2787:4:79717:79720	716570	9	True				
ANR	716880	Statement	->	2787:8:79721:79722	716570	10	True				
ANR	716881	Statement	p	2787:10:79723:79723	716570	11	True				
ANR	716882	Statement	?	2787:11:79724:79724	716570	12	True				
ANR	716883	Statement	""","""	2787:13:79726:79728	716570	13	True				
ANR	716884	Statement	:	2787:16:79729:79729	716570	14	True				
ANR	716885	Statement	""""""	2787:18:79731:79732	716570	15	True				
ANR	716886	Statement	","	2787:20:79733:79733	716570	16	True				
ANR	716887	Statement	field	2788:4:79739:79743	716570	17	True				
ANR	716888	Statement	->	2788:9:79744:79745	716570	18	True				
ANR	716889	Statement	name	2788:11:79746:79749	716570	19	True				
ANR	716890	Statement	","	2788:15:79750:79750	716570	20	True				
ANR	716891	Statement	field	2789:4:79756:79760	716570	21	True				
ANR	716892	Statement	->	2789:9:79761:79762	716570	22	True				
ANR	716893	Statement	vaddr	2789:11:79763:79767	716570	23	True				
ANR	716894	Statement	","	2789:16:79768:79768	716570	24	True				
ANR	716895	Statement	field	2790:4:79774:79778	716570	25	True				
ANR	716896	Statement	->	2790:9:79779:79780	716570	26	True				
ANR	716897	Statement	paddr	2790:11:79781:79785	716570	27	True				
ANR	716898	Statement	)	2791:4:79791:79791	716570	28	True				
ANR	716899	ExpressionStatement		2791:5:79792:79792	716570	29	True				
ANR	716900	IfStatement	if ( field -> comment && * field -> comment )		716570	30					
ANR	716901	Condition	field -> comment && * field -> comment	2792:7:79801:79833	716570	0	True				
ANR	716902	AndExpression	field -> comment && * field -> comment		716570	0		&&			
ANR	716903	PtrMemberAccess	field -> comment		716570	0					
ANR	716904	Identifier	field		716570	0					
ANR	716905	Identifier	comment		716570	1					
ANR	716906	UnaryOperationExpression	* field -> comment		716570	1					
ANR	716907	UnaryOperator	*		716570	0					
ANR	716908	PtrMemberAccess	field -> comment		716570	1					
ANR	716909	Identifier	field		716570	0					
ANR	716910	Identifier	comment		716570	1					
ANR	716911	CompoundStatement		46:42:1284:1284	716570	1					
ANR	716912	ExpressionStatement	"r_cons_printf ( "",\\""comment\\"":\\""%s\\"""" , field -> comment )"	2794:4:79882:79935	716570	0	True				
ANR	716913	CallExpression	"r_cons_printf ( "",\\""comment\\"":\\""%s\\"""" , field -> comment )"		716570	0					
ANR	716914	Callee	r_cons_printf		716570	0					
ANR	716915	Identifier	r_cons_printf		716570	0					
ANR	716916	ArgumentList	""",\\""comment\\"":\\""%s\\"""""		716570	1					
ANR	716917	Argument	""",\\""comment\\"":\\""%s\\"""""		716570	0					
ANR	716918	PrimaryExpression	""",\\""comment\\"":\\""%s\\"""""		716570	0					
ANR	716919	Argument	field -> comment		716570	1					
ANR	716920	PtrMemberAccess	field -> comment		716570	0					
ANR	716921	Identifier	field		716570	0					
ANR	716922	Identifier	comment		716570	1					
ANR	716923	IfStatement	if ( field -> format && * field -> format )		716570	31					
ANR	716924	Condition	field -> format && * field -> format	2796:7:79949:79979	716570	0	True				
ANR	716925	AndExpression	field -> format && * field -> format		716570	0		&&			
ANR	716926	PtrMemberAccess	field -> format		716570	0					
ANR	716927	Identifier	field		716570	0					
ANR	716928	Identifier	format		716570	1					
ANR	716929	UnaryOperationExpression	* field -> format		716570	1					
ANR	716930	UnaryOperator	*		716570	0					
ANR	716931	PtrMemberAccess	field -> format		716570	1					
ANR	716932	Identifier	field		716570	0					
ANR	716933	Identifier	format		716570	1					
ANR	716934	CompoundStatement		50:40:1430:1430	716570	1					
ANR	716935	ExpressionStatement	"r_cons_printf ( "",\\""format\\"":\\""%s\\"""" , field -> format )"	2798:4:80028:80079	716570	0	True				
ANR	716936	CallExpression	"r_cons_printf ( "",\\""format\\"":\\""%s\\"""" , field -> format )"		716570	0					
ANR	716937	Callee	r_cons_printf		716570	0					
ANR	716938	Identifier	r_cons_printf		716570	0					
ANR	716939	ArgumentList	""",\\""format\\"":\\""%s\\"""""		716570	1					
ANR	716940	Argument	""",\\""format\\"":\\""%s\\"""""		716570	0					
ANR	716941	PrimaryExpression	""",\\""format\\"":\\""%s\\"""""		716570	0					
ANR	716942	Argument	field -> format		716570	1					
ANR	716943	PtrMemberAccess	field -> format		716570	0					
ANR	716944	Identifier	field		716570	0					
ANR	716945	Identifier	format		716570	1					
ANR	716946	Statement	char	2800:3:80089:80092	716570	32	True				
ANR	716947	Statement	*	2800:8:80094:80094	716570	33	True				
ANR	716948	Statement	o	2800:9:80095:80095	716570	34	True				
ANR	716949	Statement	=	2800:11:80097:80097	716570	35	True				
ANR	716950	Statement	r_core_cmd_strf	2800:13:80099:80113	716570	36	True				
ANR	716951	Statement	(	2800:29:80115:80115	716570	37	True				
ANR	716952	Statement	r	2800:30:80116:80116	716570	38	True				
ANR	716953	Statement	","	2800:31:80117:80117	716570	39	True				
ANR	716954	Statement	"""pfj.%s@0x%"""	2800:33:80119:80130	716570	40	True				
ANR	716955	Statement	PFMT64x	2800:45:80131:80137	716570	41	True				
ANR	716956	Statement	","	2800:52:80138:80138	716570	42	True				
ANR	716957	Statement	field	2800:54:80140:80144	716570	43	True				
ANR	716958	Statement	->	2800:59:80145:80146	716570	44	True				
ANR	716959	Statement	format	2800:61:80147:80152	716570	45	True				
ANR	716960	Statement	","	2800:67:80153:80153	716570	46	True				
ANR	716961	Statement	field	2800:69:80155:80159	716570	47	True				
ANR	716962	Statement	->	2800:74:80160:80161	716570	48	True				
ANR	716963	Statement	vaddr	2800:76:80162:80166	716570	49	True				
ANR	716964	Statement	)	2800:81:80167:80167	716570	50	True				
ANR	716965	ExpressionStatement		2800:82:80168:80168	716570	51	True				
ANR	716966	IfStatement	if ( o && * o )		716570	52					
ANR	716967	Condition	o && * o	2801:7:80177:80183	716570	0	True				
ANR	716968	AndExpression	o && * o		716570	0		&&			
ANR	716969	Identifier	o		716570	0					
ANR	716970	UnaryOperationExpression	* o		716570	1					
ANR	716971	UnaryOperator	*		716570	0					
ANR	716972	Identifier	o		716570	1					
ANR	716973	CompoundStatement		55:16:1634:1634	716570	1					
ANR	716974	ExpressionStatement	"r_cons_printf ( "",\\""pf\\"":%s"" , o )"	2802:4:80192:80223	716570	0	True				
ANR	716975	CallExpression	"r_cons_printf ( "",\\""pf\\"":%s"" , o )"		716570	0					
ANR	716976	Callee	r_cons_printf		716570	0					
ANR	716977	Identifier	r_cons_printf		716570	0					
ANR	716978	ArgumentList	""",\\""pf\\"":%s"""		716570	1					
ANR	716979	Argument	""",\\""pf\\"":%s"""		716570	0					
ANR	716980	PrimaryExpression	""",\\""pf\\"":%s"""		716570	0					
ANR	716981	Argument	o		716570	1					
ANR	716982	Identifier	o		716570	0					
ANR	716983	ExpressionStatement	free ( o )	2804:3:80233:80241	716570	53	True				
ANR	716984	CallExpression	free ( o )		716570	0					
ANR	716985	Callee	free		716570	0					
ANR	716986	Identifier	free		716570	0					
ANR	716987	ArgumentList	o		716570	1					
ANR	716988	Argument	o		716570	0					
ANR	716989	Identifier	o		716570	0					
ANR	716990	ExpressionStatement	"r_cons_printf ( ""}"" )"	2805:3:80246:80265	716570	54	True				
ANR	716991	CallExpression	"r_cons_printf ( ""}"" )"		716570	0					
ANR	716992	Callee	r_cons_printf		716570	0					
ANR	716993	Identifier	r_cons_printf		716570	0					
ANR	716994	ArgumentList	"""}"""		716570	1					
ANR	716995	Argument	"""}"""		716570	0					
ANR	716996	PrimaryExpression	"""}"""		716570	0					
ANR	716997	ElseStatement	else		716570	0					
ANR	716998	IfStatement	if ( IS_MODE_NORMAL ( mode ) )		716570	0					
ANR	716999	Condition	IS_MODE_NORMAL ( mode )	2806:13:80280:80300	716570	0	True				
ANR	717000	CallExpression	IS_MODE_NORMAL ( mode )		716570	0					
ANR	717001	Callee	IS_MODE_NORMAL		716570	0					
ANR	717002	Identifier	IS_MODE_NORMAL		716570	0					
ANR	717003	ArgumentList	mode		716570	1					
ANR	717004	Argument	mode		716570	0					
ANR	717005	Identifier	mode		716570	0					
ANR	717006	CompoundStatement		61:3:1756:1816	716570	1					
ANR	717007	IdentifierDeclStatement	const bool haveComment = ( field -> comment && * field -> comment ) ;	2807:3:80308:80368	716570	0	True				
ANR	717008	IdentifierDecl	haveComment = ( field -> comment && * field -> comment )		716570	0					
ANR	717009	IdentifierDeclType	const bool		716570	0					
ANR	717010	Identifier	haveComment		716570	1					
ANR	717011	AssignmentExpression	haveComment = ( field -> comment && * field -> comment )		716570	2		=			
ANR	717012	Identifier	haveComment		716570	0					
ANR	717013	AndExpression	field -> comment && * field -> comment		716570	1		&&			
ANR	717014	PtrMemberAccess	field -> comment		716570	0					
ANR	717015	Identifier	field		716570	0					
ANR	717016	Identifier	comment		716570	1					
ANR	717017	UnaryOperationExpression	* field -> comment		716570	1					
ANR	717018	UnaryOperator	*		716570	0					
ANR	717019	PtrMemberAccess	field -> comment		716570	1					
ANR	717020	Identifier	field		716570	0					
ANR	717021	Identifier	comment		716570	1					
ANR	717022	Statement	r_cons_printf	2808:3:80373:80385	716570	1	True				
ANR	717023	Statement	(	2808:17:80387:80387	716570	2	True				
ANR	717024	Statement	"""0x%08"""	2808:18:80388:80394	716570	3	True				
ANR	717025	Statement	PFMT64x	2808:25:80395:80401	716570	4	True				
ANR	717026	Statement	""" 0x%08"""	2808:32:80402:80409	716570	5	True				
ANR	717027	Statement	PFMT64x	2808:40:80410:80416	716570	6	True				
ANR	717028	Statement	""" %s%s%s\\n"""	2808:47:80417:80427	716570	7	True				
ANR	717029	Statement	","	2808:58:80428:80428	716570	8	True				
ANR	717030	Statement	field	2809:4:80434:80438	716570	9	True				
ANR	717031	Statement	->	2809:9:80439:80440	716570	10	True				
ANR	717032	Statement	vaddr	2809:11:80441:80445	716570	11	True				
ANR	717033	Statement	","	2809:16:80446:80446	716570	12	True				
ANR	717034	Statement	field	2809:18:80448:80452	716570	13	True				
ANR	717035	Statement	->	2809:23:80453:80454	716570	14	True				
ANR	717036	Statement	paddr	2809:25:80455:80459	716570	15	True				
ANR	717037	Statement	","	2809:30:80460:80460	716570	16	True				
ANR	717038	Statement	field	2809:32:80462:80466	716570	17	True				
ANR	717039	Statement	->	2809:37:80467:80468	716570	18	True				
ANR	717040	Statement	name	2809:39:80469:80472	716570	19	True				
ANR	717041	Statement	","	2809:43:80473:80473	716570	20	True				
ANR	717042	Statement	haveComment	2810:4:80479:80489	716570	21	True				
ANR	717043	Statement	?	2810:15:80490:80490	716570	22	True				
ANR	717044	Statement	"""; """	2810:17:80492:80495	716570	23	True				
ANR	717045	Statement	:	2810:21:80496:80496	716570	24	True				
ANR	717046	Statement	""""""	2810:23:80498:80499	716570	25	True				
ANR	717047	Statement	","	2810:25:80500:80500	716570	26	True				
ANR	717048	Statement	haveComment	2811:4:80506:80516	716570	27	True				
ANR	717049	Statement	?	2811:15:80517:80517	716570	28	True				
ANR	717050	Statement	field	2811:17:80519:80523	716570	29	True				
ANR	717051	Statement	->	2811:22:80524:80525	716570	30	True				
ANR	717052	Label	comment :	2811:24:80526:80533	716570	31	True				
ANR	717053	Identifier	comment		716570	0					
ANR	717054	Statement	""""""	2811:33:80535:80536	716570	32	True				
ANR	717055	Statement	)	2811:35:80537:80537	716570	33	True				
ANR	717056	ExpressionStatement		2811:36:80538:80538	716570	34	True				
ANR	717057	ExpressionStatement	i ++	2813:2:80546:80549	716570	2	True				
ANR	717058	PostIncDecOperationExpression	i ++		716570	0					
ANR	717059	Identifier	i		716570	0					
ANR	717060	IncDec	++		716570	1					
ANR	717061	IfStatement	if ( IS_MODE_JSON ( mode ) )		716570	16					
ANR	717062	Condition	IS_MODE_JSON ( mode )	2815:5:80559:80577	716570	0	True				
ANR	717063	CallExpression	IS_MODE_JSON ( mode )		716570	0					
ANR	717064	Callee	IS_MODE_JSON		716570	0					
ANR	717065	Identifier	IS_MODE_JSON		716570	0					
ANR	717066	ArgumentList	mode		716570	1					
ANR	717067	Argument	mode		716570	0					
ANR	717068	Identifier	mode		716570	0					
ANR	717069	CompoundStatement		69:26:2028:2028	716570	1					
ANR	717070	ExpressionStatement	"r_cons_printf ( ""]"" )"	2816:2:80584:80603	716570	0	True				
ANR	717071	CallExpression	"r_cons_printf ( ""]"" )"		716570	0					
ANR	717072	Callee	r_cons_printf		716570	0					
ANR	717073	Identifier	r_cons_printf		716570	0					
ANR	717074	ArgumentList	"""]"""		716570	1					
ANR	717075	Argument	"""]"""		716570	0					
ANR	717076	PrimaryExpression	"""]"""		716570	0					
ANR	717077	ElseStatement	else		716570	0					
ANR	717078	IfStatement	if ( IS_MODE_NORMAL ( mode ) )		716570	0					
ANR	717079	Condition	IS_MODE_NORMAL ( mode )	2817:12:80617:80637	716570	0	True				
ANR	717080	CallExpression	IS_MODE_NORMAL ( mode )		716570	0					
ANR	717081	Callee	IS_MODE_NORMAL		716570	0					
ANR	717082	Identifier	IS_MODE_NORMAL		716570	0					
ANR	717083	ArgumentList	mode		716570	1					
ANR	717084	Argument	mode		716570	0					
ANR	717085	Identifier	mode		716570	0					
ANR	717086	CompoundStatement		71:35:2088:2088	716570	1					
ANR	717087	ExpressionStatement	"r_cons_printf ( ""\\n%i fields\\n"" , i )"	2818:2:80644:80678	716570	0	True				
ANR	717088	CallExpression	"r_cons_printf ( ""\\n%i fields\\n"" , i )"		716570	0					
ANR	717089	Callee	r_cons_printf		716570	0					
ANR	717090	Identifier	r_cons_printf		716570	0					
ANR	717091	ArgumentList	"""\\n%i fields\\n"""		716570	1					
ANR	717092	Argument	"""\\n%i fields\\n"""		716570	0					
ANR	717093	PrimaryExpression	"""\\n%i fields\\n"""		716570	0					
ANR	717094	Argument	i		716570	1					
ANR	717095	Identifier	i		716570	0					
ANR	717096	ReturnStatement	return true ;	2821:1:80685:80696	716570	17	True				
ANR	717097	Identifier	true		716570	0					
ANR	717098	ReturnType	static int		716570	1					
ANR	717099	Identifier	bin_fields		716570	2					
ANR	717100	ParameterList	"RCore * r , int mode , int va"		716570	3					
ANR	717101	Parameter	RCore * r	2747:22:78523:78530	716570	0	True				
ANR	717102	ParameterType	RCore *		716570	0					
ANR	717103	Identifier	r		716570	1					
ANR	717104	Parameter	int mode	2747:32:78533:78540	716570	1	True				
ANR	717105	ParameterType	int		716570	0					
ANR	717106	Identifier	mode		716570	1					
ANR	717107	Parameter	int va	2747:42:78543:78548	716570	2	True				
ANR	717108	ParameterType	int		716570	0					
ANR	717109	Identifier	va		716570	1					
ANR	717110	CFGEntryNode	ENTRY		716570		True				
ANR	717111	CFGExitNode	EXIT		716570		True				
ANR	717112	Symbol	* * field		716570						
ANR	717113	Symbol	bin		716570						
ANR	717114	Symbol	IS_MODE_JSON		716570						
ANR	717115	Symbol	mode		716570						
ANR	717116	Symbol	field -> vaddr		716570						
ANR	717117	Symbol	sdb_encode		716570						
ANR	717118	Symbol	r -> bin		716570						
ANR	717119	Symbol	field -> name		716570						
ANR	717120	Symbol	rva		716570						
ANR	717121	Symbol	addr		716570						
ANR	717122	Symbol	* field -> comment		716570						
ANR	717123	Symbol	field -> format		716570						
ANR	717124	Symbol	r_bin_get_fields		716570						
ANR	717125	Symbol	e		716570						
ANR	717126	Symbol	f		716570						
ANR	717127	Symbol	false		716570						
ANR	717128	Symbol	iter		716570						
ANR	717129	Symbol	i		716570						
ANR	717130	Symbol	__filterShell		716570						
ANR	717131	Symbol	va		716570						
ANR	717132	Symbol	* field		716570						
ANR	717133	Symbol	__filterQuotedShell		716570						
ANR	717134	Symbol	haveComment		716570						
ANR	717135	Symbol	field -> paddr		716570						
ANR	717136	Symbol	n		716570						
ANR	717137	Symbol	IS_MODE_NORMAL		716570						
ANR	717138	Symbol	o		716570						
ANR	717139	Symbol	field -> comment		716570						
ANR	717140	Symbol	r		716570						
ANR	717141	Symbol	field		716570						
ANR	717142	Symbol	* field -> format		716570						
ANR	717143	Symbol	true		716570						
ANR	717144	Symbol	* o		716570						
ANR	717145	Symbol	IS_MODE_RAD		716570						
ANR	717146	Symbol	fields		716570						
ANR	717147	Symbol	* r		716570						
ANR	717148	Function	get_rp	2824:0:80701:81612							
ANR	717149	FunctionDef	get_rp (const char * rtype)		717148	0					
ANR	717150	CompoundStatement		2824:39:80740:81612	717148	0					
ANR	717151	IdentifierDeclStatement	char * rp = NULL ;	2825:1:80743:80758	717148	0	True				
ANR	717152	IdentifierDecl	* rp = NULL		717148	0					
ANR	717153	IdentifierDeclType	char *		717148	0					
ANR	717154	Identifier	rp		717148	1					
ANR	717155	AssignmentExpression	* rp = NULL		717148	2		=			
ANR	717156	Identifier	NULL		717148	0					
ANR	717157	Identifier	NULL		717148	1					
ANR	717158	SwitchStatement	switch ( rtype [ 0 ] )		717148	1					
ANR	717159	Condition	rtype [ 0 ]	2826:9:80769:80776	717148	0	True				
ANR	717160	ArrayIndexing	rtype [ 0 ]		717148	0					
ANR	717161	Identifier	rtype		717148	0					
ANR	717162	PrimaryExpression	0		717148	1					
ANR	717163	CompoundStatement		3:19:38:38	717148	1					
ANR	717164	Label	case 'v' :	2827:1:80782:80790	717148	0	True				
ANR	717165	ExpressionStatement	"rp = strdup ( ""void"" )"	2828:2:80794:80814	717148	1	True				
ANR	717166	AssignmentExpression	"rp = strdup ( ""void"" )"		717148	0		=			
ANR	717167	Identifier	rp		717148	0					
ANR	717168	CallExpression	"strdup ( ""void"" )"		717148	1					
ANR	717169	Callee	strdup		717148	0					
ANR	717170	Identifier	strdup		717148	0					
ANR	717171	ArgumentList	"""void"""		717148	1					
ANR	717172	Argument	"""void"""		717148	0					
ANR	717173	PrimaryExpression	"""void"""		717148	0					
ANR	717174	BreakStatement	break ;	2829:2:80818:80823	717148	2	True				
ANR	717175	Label	case 'c' :	2830:1:80826:80834	717148	3	True				
ANR	717176	ExpressionStatement	"rp = strdup ( ""char"" )"	2831:2:80838:80858	717148	4	True				
ANR	717177	AssignmentExpression	"rp = strdup ( ""char"" )"		717148	0		=			
ANR	717178	Identifier	rp		717148	0					
ANR	717179	CallExpression	"strdup ( ""char"" )"		717148	1					
ANR	717180	Callee	strdup		717148	0					
ANR	717181	Identifier	strdup		717148	0					
ANR	717182	ArgumentList	"""char"""		717148	1					
ANR	717183	Argument	"""char"""		717148	0					
ANR	717184	PrimaryExpression	"""char"""		717148	0					
ANR	717185	BreakStatement	break ;	2832:2:80862:80867	717148	5	True				
ANR	717186	Label	case 'i' :	2833:1:80870:80878	717148	6	True				
ANR	717187	ExpressionStatement	"rp = strdup ( ""int"" )"	2834:2:80882:80901	717148	7	True				
ANR	717188	AssignmentExpression	"rp = strdup ( ""int"" )"		717148	0		=			
ANR	717189	Identifier	rp		717148	0					
ANR	717190	CallExpression	"strdup ( ""int"" )"		717148	1					
ANR	717191	Callee	strdup		717148	0					
ANR	717192	Identifier	strdup		717148	0					
ANR	717193	ArgumentList	"""int"""		717148	1					
ANR	717194	Argument	"""int"""		717148	0					
ANR	717195	PrimaryExpression	"""int"""		717148	0					
ANR	717196	BreakStatement	break ;	2835:2:80905:80910	717148	8	True				
ANR	717197	Label	case 's' :	2836:1:80913:80921	717148	9	True				
ANR	717198	ExpressionStatement	"rp = strdup ( ""short"" )"	2837:2:80925:80946	717148	10	True				
ANR	717199	AssignmentExpression	"rp = strdup ( ""short"" )"		717148	0		=			
ANR	717200	Identifier	rp		717148	0					
ANR	717201	CallExpression	"strdup ( ""short"" )"		717148	1					
ANR	717202	Callee	strdup		717148	0					
ANR	717203	Identifier	strdup		717148	0					
ANR	717204	ArgumentList	"""short"""		717148	1					
ANR	717205	Argument	"""short"""		717148	0					
ANR	717206	PrimaryExpression	"""short"""		717148	0					
ANR	717207	BreakStatement	break ;	2838:2:80950:80955	717148	11	True				
ANR	717208	Label	case 'l' :	2839:1:80958:80966	717148	12	True				
ANR	717209	ExpressionStatement	"rp = strdup ( ""long"" )"	2840:2:80970:80990	717148	13	True				
ANR	717210	AssignmentExpression	"rp = strdup ( ""long"" )"		717148	0		=			
ANR	717211	Identifier	rp		717148	0					
ANR	717212	CallExpression	"strdup ( ""long"" )"		717148	1					
ANR	717213	Callee	strdup		717148	0					
ANR	717214	Identifier	strdup		717148	0					
ANR	717215	ArgumentList	"""long"""		717148	1					
ANR	717216	Argument	"""long"""		717148	0					
ANR	717217	PrimaryExpression	"""long"""		717148	0					
ANR	717218	BreakStatement	break ;	2841:2:80994:80999	717148	14	True				
ANR	717219	Label	case 'q' :	2842:1:81002:81010	717148	15	True				
ANR	717220	ExpressionStatement	"rp = strdup ( ""long long"" )"	2843:2:81014:81039	717148	16	True				
ANR	717221	AssignmentExpression	"rp = strdup ( ""long long"" )"		717148	0		=			
ANR	717222	Identifier	rp		717148	0					
ANR	717223	CallExpression	"strdup ( ""long long"" )"		717148	1					
ANR	717224	Callee	strdup		717148	0					
ANR	717225	Identifier	strdup		717148	0					
ANR	717226	ArgumentList	"""long long"""		717148	1					
ANR	717227	Argument	"""long long"""		717148	0					
ANR	717228	PrimaryExpression	"""long long"""		717148	0					
ANR	717229	BreakStatement	break ;	2844:2:81043:81048	717148	17	True				
ANR	717230	Label	case 'C' :	2845:1:81051:81059	717148	18	True				
ANR	717231	ExpressionStatement	"rp = strdup ( ""unsigned char"" )"	2846:2:81063:81092	717148	19	True				
ANR	717232	AssignmentExpression	"rp = strdup ( ""unsigned char"" )"		717148	0		=			
ANR	717233	Identifier	rp		717148	0					
ANR	717234	CallExpression	"strdup ( ""unsigned char"" )"		717148	1					
ANR	717235	Callee	strdup		717148	0					
ANR	717236	Identifier	strdup		717148	0					
ANR	717237	ArgumentList	"""unsigned char"""		717148	1					
ANR	717238	Argument	"""unsigned char"""		717148	0					
ANR	717239	PrimaryExpression	"""unsigned char"""		717148	0					
ANR	717240	BreakStatement	break ;	2847:2:81096:81101	717148	20	True				
ANR	717241	Label	case 'I' :	2848:1:81104:81112	717148	21	True				
ANR	717242	ExpressionStatement	"rp = strdup ( ""unsigned int"" )"	2849:2:81116:81144	717148	22	True				
ANR	717243	AssignmentExpression	"rp = strdup ( ""unsigned int"" )"		717148	0		=			
ANR	717244	Identifier	rp		717148	0					
ANR	717245	CallExpression	"strdup ( ""unsigned int"" )"		717148	1					
ANR	717246	Callee	strdup		717148	0					
ANR	717247	Identifier	strdup		717148	0					
ANR	717248	ArgumentList	"""unsigned int"""		717148	1					
ANR	717249	Argument	"""unsigned int"""		717148	0					
ANR	717250	PrimaryExpression	"""unsigned int"""		717148	0					
ANR	717251	BreakStatement	break ;	2850:2:81148:81153	717148	23	True				
ANR	717252	Label	case 'S' :	2851:1:81156:81164	717148	24	True				
ANR	717253	ExpressionStatement	"rp = strdup ( ""unsigned short"" )"	2852:2:81168:81198	717148	25	True				
ANR	717254	AssignmentExpression	"rp = strdup ( ""unsigned short"" )"		717148	0		=			
ANR	717255	Identifier	rp		717148	0					
ANR	717256	CallExpression	"strdup ( ""unsigned short"" )"		717148	1					
ANR	717257	Callee	strdup		717148	0					
ANR	717258	Identifier	strdup		717148	0					
ANR	717259	ArgumentList	"""unsigned short"""		717148	1					
ANR	717260	Argument	"""unsigned short"""		717148	0					
ANR	717261	PrimaryExpression	"""unsigned short"""		717148	0					
ANR	717262	BreakStatement	break ;	2853:2:81202:81207	717148	26	True				
ANR	717263	Label	case 'L' :	2854:1:81210:81218	717148	27	True				
ANR	717264	ExpressionStatement	"rp = strdup ( ""unsigned long"" )"	2855:2:81222:81251	717148	28	True				
ANR	717265	AssignmentExpression	"rp = strdup ( ""unsigned long"" )"		717148	0		=			
ANR	717266	Identifier	rp		717148	0					
ANR	717267	CallExpression	"strdup ( ""unsigned long"" )"		717148	1					
ANR	717268	Callee	strdup		717148	0					
ANR	717269	Identifier	strdup		717148	0					
ANR	717270	ArgumentList	"""unsigned long"""		717148	1					
ANR	717271	Argument	"""unsigned long"""		717148	0					
ANR	717272	PrimaryExpression	"""unsigned long"""		717148	0					
ANR	717273	BreakStatement	break ;	2856:2:81255:81260	717148	29	True				
ANR	717274	Label	case 'Q' :	2857:1:81263:81271	717148	30	True				
ANR	717275	ExpressionStatement	"rp = strdup ( ""unsigned long long"" )"	2858:2:81275:81309	717148	31	True				
ANR	717276	AssignmentExpression	"rp = strdup ( ""unsigned long long"" )"		717148	0		=			
ANR	717277	Identifier	rp		717148	0					
ANR	717278	CallExpression	"strdup ( ""unsigned long long"" )"		717148	1					
ANR	717279	Callee	strdup		717148	0					
ANR	717280	Identifier	strdup		717148	0					
ANR	717281	ArgumentList	"""unsigned long long"""		717148	1					
ANR	717282	Argument	"""unsigned long long"""		717148	0					
ANR	717283	PrimaryExpression	"""unsigned long long"""		717148	0					
ANR	717284	BreakStatement	break ;	2859:2:81313:81318	717148	32	True				
ANR	717285	Label	case 'f' :	2860:1:81321:81329	717148	33	True				
ANR	717286	ExpressionStatement	"rp = strdup ( ""float"" )"	2861:2:81333:81354	717148	34	True				
ANR	717287	AssignmentExpression	"rp = strdup ( ""float"" )"		717148	0		=			
ANR	717288	Identifier	rp		717148	0					
ANR	717289	CallExpression	"strdup ( ""float"" )"		717148	1					
ANR	717290	Callee	strdup		717148	0					
ANR	717291	Identifier	strdup		717148	0					
ANR	717292	ArgumentList	"""float"""		717148	1					
ANR	717293	Argument	"""float"""		717148	0					
ANR	717294	PrimaryExpression	"""float"""		717148	0					
ANR	717295	BreakStatement	break ;	2862:2:81358:81363	717148	35	True				
ANR	717296	Label	case 'd' :	2863:1:81366:81374	717148	36	True				
ANR	717297	ExpressionStatement	"rp = strdup ( ""double"" )"	2864:2:81378:81400	717148	37	True				
ANR	717298	AssignmentExpression	"rp = strdup ( ""double"" )"		717148	0		=			
ANR	717299	Identifier	rp		717148	0					
ANR	717300	CallExpression	"strdup ( ""double"" )"		717148	1					
ANR	717301	Callee	strdup		717148	0					
ANR	717302	Identifier	strdup		717148	0					
ANR	717303	ArgumentList	"""double"""		717148	1					
ANR	717304	Argument	"""double"""		717148	0					
ANR	717305	PrimaryExpression	"""double"""		717148	0					
ANR	717306	BreakStatement	break ;	2865:2:81404:81409	717148	38	True				
ANR	717307	Label	case 'D' :	2866:1:81412:81420	717148	39	True				
ANR	717308	ExpressionStatement	"rp = strdup ( ""long double"" )"	2867:2:81424:81451	717148	40	True				
ANR	717309	AssignmentExpression	"rp = strdup ( ""long double"" )"		717148	0		=			
ANR	717310	Identifier	rp		717148	0					
ANR	717311	CallExpression	"strdup ( ""long double"" )"		717148	1					
ANR	717312	Callee	strdup		717148	0					
ANR	717313	Identifier	strdup		717148	0					
ANR	717314	ArgumentList	"""long double"""		717148	1					
ANR	717315	Argument	"""long double"""		717148	0					
ANR	717316	PrimaryExpression	"""long double"""		717148	0					
ANR	717317	BreakStatement	break ;	2868:2:81455:81460	717148	41	True				
ANR	717318	Label	case 'B' :	2869:1:81463:81471	717148	42	True				
ANR	717319	ExpressionStatement	"rp = strdup ( ""bool"" )"	2870:2:81475:81495	717148	43	True				
ANR	717320	AssignmentExpression	"rp = strdup ( ""bool"" )"		717148	0		=			
ANR	717321	Identifier	rp		717148	0					
ANR	717322	CallExpression	"strdup ( ""bool"" )"		717148	1					
ANR	717323	Callee	strdup		717148	0					
ANR	717324	Identifier	strdup		717148	0					
ANR	717325	ArgumentList	"""bool"""		717148	1					
ANR	717326	Argument	"""bool"""		717148	0					
ANR	717327	PrimaryExpression	"""bool"""		717148	0					
ANR	717328	BreakStatement	break ;	2871:2:81499:81504	717148	44	True				
ANR	717329	Label	case '#' :	2872:1:81507:81515	717148	45	True				
ANR	717330	ExpressionStatement	"rp = strdup ( ""CLASS"" )"	2873:2:81519:81540	717148	46	True				
ANR	717331	AssignmentExpression	"rp = strdup ( ""CLASS"" )"		717148	0		=			
ANR	717332	Identifier	rp		717148	0					
ANR	717333	CallExpression	"strdup ( ""CLASS"" )"		717148	1					
ANR	717334	Callee	strdup		717148	0					
ANR	717335	Identifier	strdup		717148	0					
ANR	717336	ArgumentList	"""CLASS"""		717148	1					
ANR	717337	Argument	"""CLASS"""		717148	0					
ANR	717338	PrimaryExpression	"""CLASS"""		717148	0					
ANR	717339	BreakStatement	break ;	2874:2:81544:81549	717148	47	True				
ANR	717340	Label	default :	2875:1:81552:81559	717148	48	True				
ANR	717341	Identifier	default		717148	0					
ANR	717342	ExpressionStatement	"rp = strdup ( ""unknown"" )"	2876:2:81563:81586	717148	49	True				
ANR	717343	AssignmentExpression	"rp = strdup ( ""unknown"" )"		717148	0		=			
ANR	717344	Identifier	rp		717148	0					
ANR	717345	CallExpression	"strdup ( ""unknown"" )"		717148	1					
ANR	717346	Callee	strdup		717148	0					
ANR	717347	Identifier	strdup		717148	0					
ANR	717348	ArgumentList	"""unknown"""		717148	1					
ANR	717349	Argument	"""unknown"""		717148	0					
ANR	717350	PrimaryExpression	"""unknown"""		717148	0					
ANR	717351	BreakStatement	break ;	2877:2:81590:81595	717148	50	True				
ANR	717352	ReturnStatement	return rp ;	2879:1:81601:81610	717148	2	True				
ANR	717353	Identifier	rp		717148	0					
ANR	717354	ReturnType	static char *		717148	1					
ANR	717355	Identifier	get_rp		717148	2					
ANR	717356	ParameterList	const char * rtype		717148	3					
ANR	717357	Parameter	const char * rtype	2824:20:80721:80737	717148	0	True				
ANR	717358	ParameterType	const char *		717148	0					
ANR	717359	Identifier	rtype		717148	1					
ANR	717360	CFGEntryNode	ENTRY		717148		True				
ANR	717361	CFGExitNode	EXIT		717148		True				
ANR	717362	Symbol	rtype		717148						
ANR	717363	Symbol	NULL		717148						
ANR	717364	Symbol	* rtype		717148						
ANR	717365	Symbol	strdup		717148						
ANR	717366	Symbol	rp		717148						
ANR	717367	Function	bin_trycatch	2882:0:81615:82138							
ANR	717368	FunctionDef	"bin_trycatch (RCore * core , int mode)"		717367	0					
ANR	717369	CompoundStatement		2882:47:81662:82138	717367	0					
ANR	717370	IdentifierDeclStatement	RBinFile * bf = r_bin_cur ( core -> bin ) ;	2883:1:81665:81701	717367	0	True				
ANR	717371	IdentifierDecl	* bf = r_bin_cur ( core -> bin )		717367	0					
ANR	717372	IdentifierDeclType	RBinFile *		717367	0					
ANR	717373	Identifier	bf		717367	1					
ANR	717374	AssignmentExpression	* bf = r_bin_cur ( core -> bin )		717367	2		=			
ANR	717375	Identifier	bf		717367	0					
ANR	717376	CallExpression	r_bin_cur ( core -> bin )		717367	1					
ANR	717377	Callee	r_bin_cur		717367	0					
ANR	717378	Identifier	r_bin_cur		717367	0					
ANR	717379	ArgumentList	core -> bin		717367	1					
ANR	717380	Argument	core -> bin		717367	0					
ANR	717381	PtrMemberAccess	core -> bin		717367	0					
ANR	717382	Identifier	core		717367	0					
ANR	717383	Identifier	bin		717367	1					
ANR	717384	IdentifierDeclStatement	RListIter * iter ;	2884:1:81704:81719	717367	1	True				
ANR	717385	IdentifierDecl	* iter		717367	0					
ANR	717386	IdentifierDeclType	RListIter *		717367	0					
ANR	717387	Identifier	iter		717367	1					
ANR	717388	IdentifierDeclStatement	RBinTrycatch * tc ;	2885:1:81722:81738	717367	2	True				
ANR	717389	IdentifierDecl	* tc		717367	0					
ANR	717390	IdentifierDeclType	RBinTrycatch *		717367	0					
ANR	717391	Identifier	tc		717367	1					
ANR	717392	IdentifierDeclStatement	RList * trycatch = r_bin_file_get_trycatch ( bf ) ;	2886:1:81741:81787	717367	3	True				
ANR	717393	IdentifierDecl	* trycatch = r_bin_file_get_trycatch ( bf )		717367	0					
ANR	717394	IdentifierDeclType	RList *		717367	0					
ANR	717395	Identifier	trycatch		717367	1					
ANR	717396	AssignmentExpression	* trycatch = r_bin_file_get_trycatch ( bf )		717367	2		=			
ANR	717397	Identifier	trycatch		717367	0					
ANR	717398	CallExpression	r_bin_file_get_trycatch ( bf )		717367	1					
ANR	717399	Callee	r_bin_file_get_trycatch		717367	0					
ANR	717400	Identifier	r_bin_file_get_trycatch		717367	0					
ANR	717401	ArgumentList	bf		717367	1					
ANR	717402	Argument	bf		717367	0					
ANR	717403	Identifier	bf		717367	0					
ANR	717404	IdentifierDeclStatement	int idx = 0 ;	2887:1:81790:81801	717367	4	True				
ANR	717405	IdentifierDecl	idx = 0		717367	0					
ANR	717406	IdentifierDeclType	int		717367	0					
ANR	717407	Identifier	idx		717367	1					
ANR	717408	AssignmentExpression	idx = 0		717367	2		=			
ANR	717409	Identifier	idx		717367	0					
ANR	717410	PrimaryExpression	0		717367	1					
ANR	717411	Statement	r_list_foreach	2888:1:81804:81817	717367	5	True				
ANR	717412	Statement	(	2888:16:81819:81819	717367	6	True				
ANR	717413	Statement	trycatch	2888:17:81820:81827	717367	7	True				
ANR	717414	Statement	","	2888:25:81828:81828	717367	8	True				
ANR	717415	Statement	iter	2888:27:81830:81833	717367	9	True				
ANR	717416	Statement	","	2888:31:81834:81834	717367	10	True				
ANR	717417	Statement	tc	2888:33:81836:81837	717367	11	True				
ANR	717418	Statement	)	2888:35:81838:81838	717367	12	True				
ANR	717419	CompoundStatement		7:37:177:177	717367	13					
ANR	717420	Statement	r_cons_printf	2889:2:81844:81856	717367	0	True				
ANR	717421	Statement	(	2889:16:81858:81858	717367	1	True				
ANR	717422	Statement	"""f try.%d.%"""	2889:17:81859:81870	717367	2	True				
ANR	717423	Statement	PFMT64x	2889:29:81871:81877	717367	3	True				
ANR	717424	Statement	""".from=0x%08"""	2889:36:81878:81890	717367	4	True				
ANR	717425	Statement	PFMT64x	2889:49:81891:81897	717367	5	True				
ANR	717426	Statement	"""\\n"""	2889:56:81898:81901	717367	6	True				
ANR	717427	Statement	","	2889:60:81902:81902	717367	7	True				
ANR	717428	Statement	idx	2889:62:81904:81906	717367	8	True				
ANR	717429	Statement	","	2889:65:81907:81907	717367	9	True				
ANR	717430	Statement	tc	2889:67:81909:81910	717367	10	True				
ANR	717431	Statement	->	2889:69:81911:81912	717367	11	True				
ANR	717432	Statement	source	2889:71:81913:81918	717367	12	True				
ANR	717433	Statement	","	2889:77:81919:81919	717367	13	True				
ANR	717434	Statement	tc	2889:79:81921:81922	717367	14	True				
ANR	717435	Statement	->	2889:81:81923:81924	717367	15	True				
ANR	717436	Statement	from	2889:83:81925:81928	717367	16	True				
ANR	717437	Statement	)	2889:87:81929:81929	717367	17	True				
ANR	717438	ExpressionStatement		2889:88:81930:81930	717367	18	True				
ANR	717439	Statement	r_cons_printf	2890:2:81934:81946	717367	19	True				
ANR	717440	Statement	(	2890:16:81948:81948	717367	20	True				
ANR	717441	Statement	"""f try.%d.%"""	2890:17:81949:81960	717367	21	True				
ANR	717442	Statement	PFMT64x	2890:29:81961:81967	717367	22	True				
ANR	717443	Statement	""".to=0x%08"""	2890:36:81968:81978	717367	23	True				
ANR	717444	Statement	PFMT64x	2890:47:81979:81985	717367	24	True				
ANR	717445	Statement	"""\\n"""	2890:54:81986:81989	717367	25	True				
ANR	717446	Statement	","	2890:58:81990:81990	717367	26	True				
ANR	717447	Statement	idx	2890:60:81992:81994	717367	27	True				
ANR	717448	Statement	","	2890:63:81995:81995	717367	28	True				
ANR	717449	Statement	tc	2890:65:81997:81998	717367	29	True				
ANR	717450	Statement	->	2890:67:81999:82000	717367	30	True				
ANR	717451	Statement	source	2890:69:82001:82006	717367	31	True				
ANR	717452	Statement	","	2890:75:82007:82007	717367	32	True				
ANR	717453	Statement	tc	2890:77:82009:82010	717367	33	True				
ANR	717454	Statement	->	2890:79:82011:82012	717367	34	True				
ANR	717455	Statement	to	2890:81:82013:82014	717367	35	True				
ANR	717456	Statement	)	2890:83:82015:82015	717367	36	True				
ANR	717457	ExpressionStatement		2890:84:82016:82016	717367	37	True				
ANR	717458	Statement	r_cons_printf	2891:2:82020:82032	717367	38	True				
ANR	717459	Statement	(	2891:16:82034:82034	717367	39	True				
ANR	717460	Statement	"""f try.%d.%"""	2891:17:82035:82046	717367	40	True				
ANR	717461	Statement	PFMT64x	2891:29:82047:82053	717367	41	True				
ANR	717462	Statement	""".catch=0x%08"""	2891:36:82054:82067	717367	42	True				
ANR	717463	Statement	PFMT64x	2891:50:82068:82074	717367	43	True				
ANR	717464	Statement	"""\\n"""	2891:57:82075:82078	717367	44	True				
ANR	717465	Statement	","	2891:61:82079:82079	717367	45	True				
ANR	717466	Statement	idx	2891:63:82081:82083	717367	46	True				
ANR	717467	Statement	","	2891:66:82084:82084	717367	47	True				
ANR	717468	Statement	tc	2891:68:82086:82087	717367	48	True				
ANR	717469	Statement	->	2891:70:82088:82089	717367	49	True				
ANR	717470	Statement	source	2891:72:82090:82095	717367	50	True				
ANR	717471	Statement	","	2891:78:82096:82096	717367	51	True				
ANR	717472	Statement	tc	2891:80:82098:82099	717367	52	True				
ANR	717473	Statement	->	2891:82:82100:82101	717367	53	True				
ANR	717474	Statement	handler	2891:84:82102:82108	717367	54	True				
ANR	717475	Statement	)	2891:91:82109:82109	717367	55	True				
ANR	717476	ExpressionStatement		2891:92:82110:82110	717367	56	True				
ANR	717477	ExpressionStatement	idx ++	2892:2:82114:82119	717367	57	True				
ANR	717478	PostIncDecOperationExpression	idx ++		717367	0					
ANR	717479	Identifier	idx		717367	0					
ANR	717480	IncDec	++		717367	1					
ANR	717481	ReturnStatement	return true ;	2894:1:82125:82136	717367	14	True				
ANR	717482	Identifier	true		717367	0					
ANR	717483	ReturnType	static int		717367	1					
ANR	717484	Identifier	bin_trycatch		717367	2					
ANR	717485	ParameterList	"RCore * core , int mode"		717367	3					
ANR	717486	Parameter	RCore * core	2882:24:81639:81649	717367	0	True				
ANR	717487	ParameterType	RCore *		717367	0					
ANR	717488	Identifier	core		717367	1					
ANR	717489	Parameter	int mode	2882:37:81652:81659	717367	1	True				
ANR	717490	ParameterType	int		717367	0					
ANR	717491	Identifier	mode		717367	1					
ANR	717492	CFGEntryNode	ENTRY		717367		True				
ANR	717493	CFGExitNode	EXIT		717367		True				
ANR	717494	Symbol	mode		717367						
ANR	717495	Symbol	core		717367						
ANR	717496	Symbol	bf		717367						
ANR	717497	Symbol	* core		717367						
ANR	717498	Symbol	r_bin_cur		717367						
ANR	717499	Symbol	true		717367						
ANR	717500	Symbol	iter		717367						
ANR	717501	Symbol	trycatch		717367						
ANR	717502	Symbol	r_bin_file_get_trycatch		717367						
ANR	717503	Symbol	idx		717367						
ANR	717504	Symbol	core -> bin		717367						
ANR	717505	Symbol	tc		717367						
ANR	717506	Function	classdump_objc	2897:0:82141:83044							
ANR	717507	FunctionDef	"classdump_objc (RCore * r , RBinClass * c)"		717506	0					
ANR	717508	CompoundStatement		2897:51:82192:83044	717506	0					
ANR	717509	IfStatement	if ( c -> super )		717506	0					
ANR	717510	Condition	c -> super	2898:5:82199:82206	717506	0	True				
ANR	717511	PtrMemberAccess	c -> super		717506	0					
ANR	717512	Identifier	c		717506	0					
ANR	717513	Identifier	super		717506	1					
ANR	717514	CompoundStatement		2:15:16:16	717506	1					
ANR	717515	ExpressionStatement	"r_cons_printf ( ""@interface %s : %s\\n{\\n"" , c -> name , c -> super )"	2899:2:82213:82273	717506	0	True				
ANR	717516	CallExpression	"r_cons_printf ( ""@interface %s : %s\\n{\\n"" , c -> name , c -> super )"		717506	0					
ANR	717517	Callee	r_cons_printf		717506	0					
ANR	717518	Identifier	r_cons_printf		717506	0					
ANR	717519	ArgumentList	"""@interface %s : %s\\n{\\n"""		717506	1					
ANR	717520	Argument	"""@interface %s : %s\\n{\\n"""		717506	0					
ANR	717521	PrimaryExpression	"""@interface %s : %s\\n{\\n"""		717506	0					
ANR	717522	Argument	c -> name		717506	1					
ANR	717523	PtrMemberAccess	c -> name		717506	0					
ANR	717524	Identifier	c		717506	0					
ANR	717525	Identifier	name		717506	1					
ANR	717526	Argument	c -> super		717506	2					
ANR	717527	PtrMemberAccess	c -> super		717506	0					
ANR	717528	Identifier	c		717506	0					
ANR	717529	Identifier	super		717506	1					
ANR	717530	ElseStatement	else		717506	0					
ANR	717531	CompoundStatement		4:8:90:90	717506	0					
ANR	717532	ExpressionStatement	"r_cons_printf ( ""@interface %s\\n{\\n"" , c -> name )"	2901:2:82287:82332	717506	0	True				
ANR	717533	CallExpression	"r_cons_printf ( ""@interface %s\\n{\\n"" , c -> name )"		717506	0					
ANR	717534	Callee	r_cons_printf		717506	0					
ANR	717535	Identifier	r_cons_printf		717506	0					
ANR	717536	ArgumentList	"""@interface %s\\n{\\n"""		717506	1					
ANR	717537	Argument	"""@interface %s\\n{\\n"""		717506	0					
ANR	717538	PrimaryExpression	"""@interface %s\\n{\\n"""		717506	0					
ANR	717539	Argument	c -> name		717506	1					
ANR	717540	PtrMemberAccess	c -> name		717506	0					
ANR	717541	Identifier	c		717506	0					
ANR	717542	Identifier	name		717506	1					
ANR	717543	IdentifierDeclStatement	"RListIter * iter2 , * iter3 ;"	2903:1:82338:82362	717506	1	True				
ANR	717544	IdentifierDecl	* iter2		717506	0					
ANR	717545	IdentifierDeclType	RListIter *		717506	0					
ANR	717546	Identifier	iter2		717506	1					
ANR	717547	IdentifierDecl	* iter3		717506	1					
ANR	717548	IdentifierDeclType	RListIter *		717506	0					
ANR	717549	Identifier	iter3		717506	1					
ANR	717550	IdentifierDeclStatement	RBinField * f ;	2904:1:82365:82377	717506	2	True				
ANR	717551	IdentifierDecl	* f		717506	0					
ANR	717552	IdentifierDeclType	RBinField *		717506	0					
ANR	717553	Identifier	f		717506	1					
ANR	717554	IdentifierDeclStatement	RBinSymbol * sym ;	2905:1:82380:82395	717506	3	True				
ANR	717555	IdentifierDecl	* sym		717506	0					
ANR	717556	IdentifierDeclType	RBinSymbol *		717506	0					
ANR	717557	Identifier	sym		717506	1					
ANR	717558	Statement	r_list_foreach	2906:1:82398:82411	717506	4	True				
ANR	717559	Statement	(	2906:16:82413:82413	717506	5	True				
ANR	717560	Statement	c	2906:17:82414:82414	717506	6	True				
ANR	717561	Statement	->	2906:18:82415:82416	717506	7	True				
ANR	717562	Statement	fields	2906:20:82417:82422	717506	8	True				
ANR	717563	Statement	","	2906:26:82423:82423	717506	9	True				
ANR	717564	Statement	iter2	2906:28:82425:82429	717506	10	True				
ANR	717565	Statement	","	2906:33:82430:82430	717506	11	True				
ANR	717566	Statement	f	2906:35:82432:82432	717506	12	True				
ANR	717567	Statement	)	2906:36:82433:82433	717506	13	True				
ANR	717568	CompoundStatement		10:38:242:242	717506	14					
ANR	717569	IfStatement	"if ( f -> name && r_regex_match ( ""ivar"" , ""e"" , f -> name ) )"		717506	0					
ANR	717570	Condition	"f -> name && r_regex_match ( ""ivar"" , ""e"" , f -> name )"	2907:6:82443:82488	717506	0	True				
ANR	717571	AndExpression	"f -> name && r_regex_match ( ""ivar"" , ""e"" , f -> name )"		717506	0		&&			
ANR	717572	PtrMemberAccess	f -> name		717506	0					
ANR	717573	Identifier	f		717506	0					
ANR	717574	Identifier	name		717506	1					
ANR	717575	CallExpression	"r_regex_match ( ""ivar"" , ""e"" , f -> name )"		717506	1					
ANR	717576	Callee	r_regex_match		717506	0					
ANR	717577	Identifier	r_regex_match		717506	0					
ANR	717578	ArgumentList	"""ivar"""		717506	1					
ANR	717579	Argument	"""ivar"""		717506	0					
ANR	717580	PrimaryExpression	"""ivar"""		717506	0					
ANR	717581	Argument	"""e"""		717506	1					
ANR	717582	PrimaryExpression	"""e"""		717506	0					
ANR	717583	Argument	f -> name		717506	2					
ANR	717584	PtrMemberAccess	f -> name		717506	0					
ANR	717585	Identifier	f		717506	0					
ANR	717586	Identifier	name		717506	1					
ANR	717587	CompoundStatement		11:54:298:298	717506	1					
ANR	717588	ExpressionStatement	"r_cons_printf ( ""  %s %s\\n"" , f -> type , f -> name )"	2908:3:82496:82541	717506	0	True				
ANR	717589	CallExpression	"r_cons_printf ( ""  %s %s\\n"" , f -> type , f -> name )"		717506	0					
ANR	717590	Callee	r_cons_printf		717506	0					
ANR	717591	Identifier	r_cons_printf		717506	0					
ANR	717592	ArgumentList	"""  %s %s\\n"""		717506	1					
ANR	717593	Argument	"""  %s %s\\n"""		717506	0					
ANR	717594	PrimaryExpression	"""  %s %s\\n"""		717506	0					
ANR	717595	Argument	f -> type		717506	1					
ANR	717596	PtrMemberAccess	f -> type		717506	0					
ANR	717597	Identifier	f		717506	0					
ANR	717598	Identifier	type		717506	1					
ANR	717599	Argument	f -> name		717506	2					
ANR	717600	PtrMemberAccess	f -> name		717506	0					
ANR	717601	Identifier	f		717506	0					
ANR	717602	Identifier	name		717506	1					
ANR	717603	ExpressionStatement	"r_cons_printf ( ""}\\n"" )"	2911:1:82551:82572	717506	15	True				
ANR	717604	CallExpression	"r_cons_printf ( ""}\\n"" )"		717506	0					
ANR	717605	Callee	r_cons_printf		717506	0					
ANR	717606	Identifier	r_cons_printf		717506	0					
ANR	717607	ArgumentList	"""}\\n"""		717506	1					
ANR	717608	Argument	"""}\\n"""		717506	0					
ANR	717609	PrimaryExpression	"""}\\n"""		717506	0					
ANR	717610	Statement	r_list_foreach	2912:1:82575:82588	717506	16	True				
ANR	717611	Statement	(	2912:16:82590:82590	717506	17	True				
ANR	717612	Statement	c	2912:17:82591:82591	717506	18	True				
ANR	717613	Statement	->	2912:18:82592:82593	717506	19	True				
ANR	717614	Statement	methods	2912:20:82594:82600	717506	20	True				
ANR	717615	Statement	","	2912:27:82601:82601	717506	21	True				
ANR	717616	Statement	iter3	2912:29:82603:82607	717506	22	True				
ANR	717617	Statement	","	2912:34:82608:82608	717506	23	True				
ANR	717618	Statement	sym	2912:36:82610:82612	717506	24	True				
ANR	717619	Statement	)	2912:39:82613:82613	717506	25	True				
ANR	717620	CompoundStatement		16:41:422:422	717506	26					
ANR	717621	IfStatement	if ( sym -> rtype && sym -> rtype [ 0 ] != '@' )		717506	0					
ANR	717622	Condition	sym -> rtype && sym -> rtype [ 0 ] != '@'	2913:6:82623:82656	717506	0	True				
ANR	717623	AndExpression	sym -> rtype && sym -> rtype [ 0 ] != '@'		717506	0		&&			
ANR	717624	PtrMemberAccess	sym -> rtype		717506	0					
ANR	717625	Identifier	sym		717506	0					
ANR	717626	Identifier	rtype		717506	1					
ANR	717627	EqualityExpression	sym -> rtype [ 0 ] != '@'		717506	1		!=			
ANR	717628	ArrayIndexing	sym -> rtype [ 0 ]		717506	0					
ANR	717629	PtrMemberAccess	sym -> rtype		717506	0					
ANR	717630	Identifier	sym		717506	0					
ANR	717631	Identifier	rtype		717506	1					
ANR	717632	PrimaryExpression	0		717506	1					
ANR	717633	PrimaryExpression	'@'		717506	1					
ANR	717634	CompoundStatement		18:3:471:501	717506	1					
ANR	717635	IdentifierDeclStatement	char * rp = get_rp ( sym -> rtype ) ;	2914:3:82664:82694	717506	0	True				
ANR	717636	IdentifierDecl	* rp = get_rp ( sym -> rtype )		717506	0					
ANR	717637	IdentifierDeclType	char *		717506	0					
ANR	717638	Identifier	rp		717506	1					
ANR	717639	AssignmentExpression	* rp = get_rp ( sym -> rtype )		717506	2		=			
ANR	717640	Identifier	rp		717506	0					
ANR	717641	CallExpression	get_rp ( sym -> rtype )		717506	1					
ANR	717642	Callee	get_rp		717506	0					
ANR	717643	Identifier	get_rp		717506	0					
ANR	717644	ArgumentList	sym -> rtype		717506	1					
ANR	717645	Argument	sym -> rtype		717506	0					
ANR	717646	PtrMemberAccess	sym -> rtype		717506	0					
ANR	717647	Identifier	sym		717506	0					
ANR	717648	Identifier	rtype		717506	1					
ANR	717649	ExpressionStatement	"r_cons_printf ( ""%s (%s) %s\\n"" , strncmp ( sym -> type , R_BIN_TYPE_METH_STR , 4 ) ? ""+"" : ""-"" , rp , sym -> dname ? sym -> dname : sym -> name )"	2915:3:82699:82833	717506	1	True				
ANR	717650	CallExpression	"r_cons_printf ( ""%s (%s) %s\\n"" , strncmp ( sym -> type , R_BIN_TYPE_METH_STR , 4 ) ? ""+"" : ""-"" , rp , sym -> dname ? sym -> dname : sym -> name )"		717506	0					
ANR	717651	Callee	r_cons_printf		717506	0					
ANR	717652	Identifier	r_cons_printf		717506	0					
ANR	717653	ArgumentList	"""%s (%s) %s\\n"""		717506	1					
ANR	717654	Argument	"""%s (%s) %s\\n"""		717506	0					
ANR	717655	PrimaryExpression	"""%s (%s) %s\\n"""		717506	0					
ANR	717656	Argument	"strncmp ( sym -> type , R_BIN_TYPE_METH_STR , 4 ) ? ""+"" : ""-"""		717506	1					
ANR	717657	ConditionalExpression	"strncmp ( sym -> type , R_BIN_TYPE_METH_STR , 4 ) ? ""+"" : ""-"""		717506	0					
ANR	717658	Condition	"strncmp ( sym -> type , R_BIN_TYPE_METH_STR , 4 )"		717506	0					
ANR	717659	CallExpression	"strncmp ( sym -> type , R_BIN_TYPE_METH_STR , 4 )"		717506	0					
ANR	717660	Callee	strncmp		717506	0					
ANR	717661	Identifier	strncmp		717506	0					
ANR	717662	ArgumentList	sym -> type		717506	1					
ANR	717663	Argument	sym -> type		717506	0					
ANR	717664	PtrMemberAccess	sym -> type		717506	0					
ANR	717665	Identifier	sym		717506	0					
ANR	717666	Identifier	type		717506	1					
ANR	717667	Argument	R_BIN_TYPE_METH_STR		717506	1					
ANR	717668	Identifier	R_BIN_TYPE_METH_STR		717506	0					
ANR	717669	Argument	4		717506	2					
ANR	717670	PrimaryExpression	4		717506	0					
ANR	717671	PrimaryExpression	"""+"""		717506	1					
ANR	717672	PrimaryExpression	"""-"""		717506	2					
ANR	717673	Argument	rp		717506	2					
ANR	717674	Identifier	rp		717506	0					
ANR	717675	Argument	sym -> dname ? sym -> dname : sym -> name		717506	3					
ANR	717676	ConditionalExpression	sym -> dname ? sym -> dname : sym -> name		717506	0					
ANR	717677	Condition	sym -> dname		717506	0					
ANR	717678	PtrMemberAccess	sym -> dname		717506	0					
ANR	717679	Identifier	sym		717506	0					
ANR	717680	Identifier	dname		717506	1					
ANR	717681	PtrMemberAccess	sym -> dname		717506	1					
ANR	717682	Identifier	sym		717506	0					
ANR	717683	Identifier	dname		717506	1					
ANR	717684	PtrMemberAccess	sym -> name		717506	2					
ANR	717685	Identifier	sym		717506	0					
ANR	717686	Identifier	name		717506	1					
ANR	717687	ExpressionStatement	free ( rp )	2918:3:82838:82847	717506	2	True				
ANR	717688	CallExpression	free ( rp )		717506	0					
ANR	717689	Callee	free		717506	0					
ANR	717690	Identifier	free		717506	0					
ANR	717691	ArgumentList	rp		717506	1					
ANR	717692	Argument	rp		717506	0					
ANR	717693	Identifier	rp		717506	0					
ANR	717694	ElseStatement	else		717506	0					
ANR	717695	IfStatement	if ( sym -> type )		717506	0					
ANR	717696	Condition	sym -> type	2919:13:82862:82870	717506	0	True				
ANR	717697	PtrMemberAccess	sym -> type		717506	0					
ANR	717698	Identifier	sym		717506	0					
ANR	717699	Identifier	type		717506	1					
ANR	717700	CompoundStatement		23:24:680:680	717506	1					
ANR	717701	ExpressionStatement	"r_cons_printf ( ""%s (id) %s\\n"" , strncmp ( sym -> type , R_BIN_TYPE_METH_STR , 4 ) ? ""+"" : ""-"" , sym -> dname ? sym -> dname : sym -> name )"	2920:3:82878:83008	717506	0	True				
ANR	717702	CallExpression	"r_cons_printf ( ""%s (id) %s\\n"" , strncmp ( sym -> type , R_BIN_TYPE_METH_STR , 4 ) ? ""+"" : ""-"" , sym -> dname ? sym -> dname : sym -> name )"		717506	0					
ANR	717703	Callee	r_cons_printf		717506	0					
ANR	717704	Identifier	r_cons_printf		717506	0					
ANR	717705	ArgumentList	"""%s (id) %s\\n"""		717506	1					
ANR	717706	Argument	"""%s (id) %s\\n"""		717506	0					
ANR	717707	PrimaryExpression	"""%s (id) %s\\n"""		717506	0					
ANR	717708	Argument	"strncmp ( sym -> type , R_BIN_TYPE_METH_STR , 4 ) ? ""+"" : ""-"""		717506	1					
ANR	717709	ConditionalExpression	"strncmp ( sym -> type , R_BIN_TYPE_METH_STR , 4 ) ? ""+"" : ""-"""		717506	0					
ANR	717710	Condition	"strncmp ( sym -> type , R_BIN_TYPE_METH_STR , 4 )"		717506	0					
ANR	717711	CallExpression	"strncmp ( sym -> type , R_BIN_TYPE_METH_STR , 4 )"		717506	0					
ANR	717712	Callee	strncmp		717506	0					
ANR	717713	Identifier	strncmp		717506	0					
ANR	717714	ArgumentList	sym -> type		717506	1					
ANR	717715	Argument	sym -> type		717506	0					
ANR	717716	PtrMemberAccess	sym -> type		717506	0					
ANR	717717	Identifier	sym		717506	0					
ANR	717718	Identifier	type		717506	1					
ANR	717719	Argument	R_BIN_TYPE_METH_STR		717506	1					
ANR	717720	Identifier	R_BIN_TYPE_METH_STR		717506	0					
ANR	717721	Argument	4		717506	2					
ANR	717722	PrimaryExpression	4		717506	0					
ANR	717723	PrimaryExpression	"""+"""		717506	1					
ANR	717724	PrimaryExpression	"""-"""		717506	2					
ANR	717725	Argument	sym -> dname ? sym -> dname : sym -> name		717506	2					
ANR	717726	ConditionalExpression	sym -> dname ? sym -> dname : sym -> name		717506	0					
ANR	717727	Condition	sym -> dname		717506	0					
ANR	717728	PtrMemberAccess	sym -> dname		717506	0					
ANR	717729	Identifier	sym		717506	0					
ANR	717730	Identifier	dname		717506	1					
ANR	717731	PtrMemberAccess	sym -> dname		717506	1					
ANR	717732	Identifier	sym		717506	0					
ANR	717733	Identifier	dname		717506	1					
ANR	717734	PtrMemberAccess	sym -> name		717506	2					
ANR	717735	Identifier	sym		717506	0					
ANR	717736	Identifier	name		717506	1					
ANR	717737	ExpressionStatement	"r_cons_printf ( ""@end\\n"" )"	2925:1:83018:83042	717506	27	True				
ANR	717738	CallExpression	"r_cons_printf ( ""@end\\n"" )"		717506	0					
ANR	717739	Callee	r_cons_printf		717506	0					
ANR	717740	Identifier	r_cons_printf		717506	0					
ANR	717741	ArgumentList	"""@end\\n"""		717506	1					
ANR	717742	Argument	"""@end\\n"""		717506	0					
ANR	717743	PrimaryExpression	"""@end\\n"""		717506	0					
ANR	717744	ReturnType	static void		717506	1					
ANR	717745	Identifier	classdump_objc		717506	2					
ANR	717746	ParameterList	"RCore * r , RBinClass * c"		717506	3					
ANR	717747	Parameter	RCore * r	2897:27:82168:82175	717506	0	True				
ANR	717748	ParameterType	RCore *		717506	0					
ANR	717749	Identifier	r		717506	1					
ANR	717750	Parameter	RBinClass * c	2897:37:82178:82189	717506	1	True				
ANR	717751	ParameterType	RBinClass *		717506	0					
ANR	717752	Identifier	c		717506	1					
ANR	717753	CFGEntryNode	ENTRY		717506		True				
ANR	717754	CFGExitNode	EXIT		717506		True				
ANR	717755	Symbol	* sym -> rtype		717506						
ANR	717756	Symbol	c		717506						
ANR	717757	Symbol	f -> name		717506						
ANR	717758	Symbol	iter3		717506						
ANR	717759	Symbol	f		717506						
ANR	717760	Symbol	sym		717506						
ANR	717761	Symbol	sym -> dname		717506						
ANR	717762	Symbol	iter2		717506						
ANR	717763	Symbol	f -> type		717506						
ANR	717764	Symbol	c -> name		717506						
ANR	717765	Symbol	sym -> type		717506						
ANR	717766	Symbol	r_regex_match		717506						
ANR	717767	Symbol	* c		717506						
ANR	717768	Symbol	get_rp		717506						
ANR	717769	Symbol	* f		717506						
ANR	717770	Symbol	* sym		717506						
ANR	717771	Symbol	strncmp		717506						
ANR	717772	Symbol	r		717506						
ANR	717773	Symbol	R_BIN_TYPE_METH_STR		717506						
ANR	717774	Symbol	sym -> name		717506						
ANR	717775	Symbol	c -> super		717506						
ANR	717776	Symbol	* * sym		717506						
ANR	717777	Symbol	sym -> rtype		717506						
ANR	717778	Symbol	rp		717506						
ANR	717779	Function	classdump_java	2928:0:83047:83825							
ANR	717780	FunctionDef	"classdump_java (RCore * r , RBinClass * c)"		717779	0					
ANR	717781	CompoundStatement		2928:51:83098:83825	717779	0					
ANR	717782	IdentifierDeclStatement	RBinField * f ;	2929:1:83101:83113	717779	0	True				
ANR	717783	IdentifierDecl	* f		717779	0					
ANR	717784	IdentifierDeclType	RBinField *		717779	0					
ANR	717785	Identifier	f		717779	1					
ANR	717786	IdentifierDeclStatement	"RListIter * iter2 , * iter3 ;"	2930:1:83116:83140	717779	1	True				
ANR	717787	IdentifierDecl	* iter2		717779	0					
ANR	717788	IdentifierDeclType	RListIter *		717779	0					
ANR	717789	Identifier	iter2		717779	1					
ANR	717790	IdentifierDecl	* iter3		717779	1					
ANR	717791	IdentifierDeclType	RListIter *		717779	0					
ANR	717792	Identifier	iter3		717779	1					
ANR	717793	IdentifierDeclStatement	RBinSymbol * sym ;	2931:1:83143:83158	717779	2	True				
ANR	717794	IdentifierDecl	* sym		717779	0					
ANR	717795	IdentifierDeclType	RBinSymbol *		717779	0					
ANR	717796	Identifier	sym		717779	1					
ANR	717797	IdentifierDeclStatement	char * pn = strdup ( c -> name ) ;	2932:1:83161:83188	717779	3	True				
ANR	717798	IdentifierDecl	* pn = strdup ( c -> name )		717779	0					
ANR	717799	IdentifierDeclType	char *		717779	0					
ANR	717800	Identifier	pn		717779	1					
ANR	717801	AssignmentExpression	* pn = strdup ( c -> name )		717779	2		=			
ANR	717802	Identifier	pn		717779	0					
ANR	717803	CallExpression	strdup ( c -> name )		717779	1					
ANR	717804	Callee	strdup		717779	0					
ANR	717805	Identifier	strdup		717779	0					
ANR	717806	ArgumentList	c -> name		717779	1					
ANR	717807	Argument	c -> name		717779	0					
ANR	717808	PtrMemberAccess	c -> name		717779	0					
ANR	717809	Identifier	c		717779	0					
ANR	717810	Identifier	name		717779	1					
ANR	717811	IdentifierDeclStatement	"char * cn = ( char * ) r_str_rchr ( pn , NULL , '/' ) ;"	2933:1:83191:83236	717779	4	True				
ANR	717812	IdentifierDecl	"* cn = ( char * ) r_str_rchr ( pn , NULL , '/' )"		717779	0					
ANR	717813	IdentifierDeclType	char *		717779	0					
ANR	717814	Identifier	cn		717779	1					
ANR	717815	AssignmentExpression	"* cn = ( char * ) r_str_rchr ( pn , NULL , '/' )"		717779	2		=			
ANR	717816	Identifier	cn		717779	0					
ANR	717817	CastExpression	"( char * ) r_str_rchr ( pn , NULL , '/' )"		717779	1					
ANR	717818	CastTarget	char *		717779	0					
ANR	717819	CallExpression	"r_str_rchr ( pn , NULL , '/' )"		717779	1					
ANR	717820	Callee	r_str_rchr		717779	0					
ANR	717821	Identifier	r_str_rchr		717779	0					
ANR	717822	ArgumentList	pn		717779	1					
ANR	717823	Argument	pn		717779	0					
ANR	717824	Identifier	pn		717779	0					
ANR	717825	Argument	NULL		717779	1					
ANR	717826	Identifier	NULL		717779	0					
ANR	717827	Argument	'/'		717779	2					
ANR	717828	PrimaryExpression	'/'		717779	0					
ANR	717829	IfStatement	if ( cn )		717779	5					
ANR	717830	Condition	cn	2934:5:83243:83244	717779	0	True				
ANR	717831	Identifier	cn		717779	0					
ANR	717832	CompoundStatement		7:9:148:148	717779	1					
ANR	717833	ExpressionStatement	* cn = 0	2935:2:83251:83258	717779	0	True				
ANR	717834	AssignmentExpression	* cn = 0		717779	0		=			
ANR	717835	UnaryOperationExpression	* cn		717779	0					
ANR	717836	UnaryOperator	*		717779	0					
ANR	717837	Identifier	cn		717779	1					
ANR	717838	PrimaryExpression	0		717779	1					
ANR	717839	ExpressionStatement	cn ++	2936:2:83262:83266	717779	1	True				
ANR	717840	PostIncDecOperationExpression	cn ++		717779	0					
ANR	717841	Identifier	cn		717779	0					
ANR	717842	IncDec	++		717779	1					
ANR	717843	ExpressionStatement	"r_str_replace_char ( pn , '/' , '.' )"	2937:2:83270:83303	717779	2	True				
ANR	717844	CallExpression	"r_str_replace_char ( pn , '/' , '.' )"		717779	0					
ANR	717845	Callee	r_str_replace_char		717779	0					
ANR	717846	Identifier	r_str_replace_char		717779	0					
ANR	717847	ArgumentList	pn		717779	1					
ANR	717848	Argument	pn		717779	0					
ANR	717849	Identifier	pn		717779	0					
ANR	717850	Argument	'/'		717779	1					
ANR	717851	PrimaryExpression	'/'		717779	0					
ANR	717852	Argument	'.'		717779	2					
ANR	717853	PrimaryExpression	'.'		717779	0					
ANR	717854	ExpressionStatement	"r_cons_printf ( ""package %s;\\n\\n"" , pn )"	2939:1:83309:83346	717779	6	True				
ANR	717855	CallExpression	"r_cons_printf ( ""package %s;\\n\\n"" , pn )"		717779	0					
ANR	717856	Callee	r_cons_printf		717779	0					
ANR	717857	Identifier	r_cons_printf		717779	0					
ANR	717858	ArgumentList	"""package %s;\\n\\n"""		717779	1					
ANR	717859	Argument	"""package %s;\\n\\n"""		717779	0					
ANR	717860	PrimaryExpression	"""package %s;\\n\\n"""		717779	0					
ANR	717861	Argument	pn		717779	1					
ANR	717862	Identifier	pn		717779	0					
ANR	717863	ExpressionStatement	"r_cons_printf ( ""public class %s {\\n"" , cn )"	2940:1:83349:83390	717779	7	True				
ANR	717864	CallExpression	"r_cons_printf ( ""public class %s {\\n"" , cn )"		717779	0					
ANR	717865	Callee	r_cons_printf		717779	0					
ANR	717866	Identifier	r_cons_printf		717779	0					
ANR	717867	ArgumentList	"""public class %s {\\n"""		717779	1					
ANR	717868	Argument	"""public class %s {\\n"""		717779	0					
ANR	717869	PrimaryExpression	"""public class %s {\\n"""		717779	0					
ANR	717870	Argument	cn		717779	1					
ANR	717871	Identifier	cn		717779	0					
ANR	717872	ExpressionStatement	free ( pn )	2941:1:83393:83402	717779	8	True				
ANR	717873	CallExpression	free ( pn )		717779	0					
ANR	717874	Callee	free		717779	0					
ANR	717875	Identifier	free		717779	0					
ANR	717876	ArgumentList	pn		717779	1					
ANR	717877	Argument	pn		717779	0					
ANR	717878	Identifier	pn		717779	0					
ANR	717879	Statement	r_list_foreach	2942:1:83405:83418	717779	9	True				
ANR	717880	Statement	(	2942:16:83420:83420	717779	10	True				
ANR	717881	Statement	c	2942:17:83421:83421	717779	11	True				
ANR	717882	Statement	->	2942:18:83422:83423	717779	12	True				
ANR	717883	Statement	fields	2942:20:83424:83429	717779	13	True				
ANR	717884	Statement	","	2942:26:83430:83430	717779	14	True				
ANR	717885	Statement	iter2	2942:28:83432:83436	717779	15	True				
ANR	717886	Statement	","	2942:33:83437:83437	717779	16	True				
ANR	717887	Statement	f	2942:35:83439:83439	717779	17	True				
ANR	717888	Statement	)	2942:36:83440:83440	717779	18	True				
ANR	717889	CompoundStatement		15:38:343:343	717779	19					
ANR	717890	IfStatement	"if ( f -> name && r_regex_match ( ""ivar"" , ""e"" , f -> name ) )"		717779	0					
ANR	717891	Condition	"f -> name && r_regex_match ( ""ivar"" , ""e"" , f -> name )"	2943:6:83450:83495	717779	0	True				
ANR	717892	AndExpression	"f -> name && r_regex_match ( ""ivar"" , ""e"" , f -> name )"		717779	0		&&			
ANR	717893	PtrMemberAccess	f -> name		717779	0					
ANR	717894	Identifier	f		717779	0					
ANR	717895	Identifier	name		717779	1					
ANR	717896	CallExpression	"r_regex_match ( ""ivar"" , ""e"" , f -> name )"		717779	1					
ANR	717897	Callee	r_regex_match		717779	0					
ANR	717898	Identifier	r_regex_match		717779	0					
ANR	717899	ArgumentList	"""ivar"""		717779	1					
ANR	717900	Argument	"""ivar"""		717779	0					
ANR	717901	PrimaryExpression	"""ivar"""		717779	0					
ANR	717902	Argument	"""e"""		717779	1					
ANR	717903	PrimaryExpression	"""e"""		717779	0					
ANR	717904	Argument	f -> name		717779	2					
ANR	717905	PtrMemberAccess	f -> name		717779	0					
ANR	717906	Identifier	f		717779	0					
ANR	717907	Identifier	name		717779	1					
ANR	717908	CompoundStatement		16:54:399:399	717779	1					
ANR	717909	ExpressionStatement	"r_cons_printf ( ""  public %s %s\\n"" , f -> type , f -> name )"	2944:3:83503:83555	717779	0	True				
ANR	717910	CallExpression	"r_cons_printf ( ""  public %s %s\\n"" , f -> type , f -> name )"		717779	0					
ANR	717911	Callee	r_cons_printf		717779	0					
ANR	717912	Identifier	r_cons_printf		717779	0					
ANR	717913	ArgumentList	"""  public %s %s\\n"""		717779	1					
ANR	717914	Argument	"""  public %s %s\\n"""		717779	0					
ANR	717915	PrimaryExpression	"""  public %s %s\\n"""		717779	0					
ANR	717916	Argument	f -> type		717779	1					
ANR	717917	PtrMemberAccess	f -> type		717779	0					
ANR	717918	Identifier	f		717779	0					
ANR	717919	Identifier	type		717779	1					
ANR	717920	Argument	f -> name		717779	2					
ANR	717921	PtrMemberAccess	f -> name		717779	0					
ANR	717922	Identifier	f		717779	0					
ANR	717923	Identifier	name		717779	1					
ANR	717924	Statement	r_list_foreach	2947:1:83565:83578	717779	20	True				
ANR	717925	Statement	(	2947:16:83580:83580	717779	21	True				
ANR	717926	Statement	c	2947:17:83581:83581	717779	22	True				
ANR	717927	Statement	->	2947:18:83582:83583	717779	23	True				
ANR	717928	Statement	methods	2947:20:83584:83590	717779	24	True				
ANR	717929	Statement	","	2947:27:83591:83591	717779	25	True				
ANR	717930	Statement	iter3	2947:29:83593:83597	717779	26	True				
ANR	717931	Statement	","	2947:34:83598:83598	717779	27	True				
ANR	717932	Statement	sym	2947:36:83600:83602	717779	28	True				
ANR	717933	Statement	)	2947:39:83603:83603	717779	29	True				
ANR	717934	CompoundStatement		22:2:564:603	717779	30					
ANR	717935	IdentifierDeclStatement	const char * mn = sym -> dname ? sym -> dname : sym -> name ;	2948:2:83609:83659	717779	0	True				
ANR	717936	IdentifierDecl	* mn = sym -> dname ? sym -> dname : sym -> name		717779	0					
ANR	717937	IdentifierDeclType	const char *		717779	0					
ANR	717938	Identifier	mn		717779	1					
ANR	717939	AssignmentExpression	* mn = sym -> dname ? sym -> dname : sym -> name		717779	2		=			
ANR	717940	Identifier	mn		717779	0					
ANR	717941	ConditionalExpression	sym -> dname ? sym -> dname : sym -> name		717779	1					
ANR	717942	Condition	sym -> dname		717779	0					
ANR	717943	PtrMemberAccess	sym -> dname		717779	0					
ANR	717944	Identifier	sym		717779	0					
ANR	717945	Identifier	dname		717779	1					
ANR	717946	PtrMemberAccess	sym -> dname		717779	1					
ANR	717947	Identifier	sym		717779	0					
ANR	717948	Identifier	dname		717779	1					
ANR	717949	PtrMemberAccess	sym -> name		717779	2					
ANR	717950	Identifier	sym		717779	0					
ANR	717951	Identifier	name		717779	1					
ANR	717952	IdentifierDeclStatement	"const char * ms = strstr ( mn , ""method."" ) ;"	2949:2:83663:83702	717779	1	True				
ANR	717953	IdentifierDecl	"* ms = strstr ( mn , ""method."" )"		717779	0					
ANR	717954	IdentifierDeclType	const char *		717779	0					
ANR	717955	Identifier	ms		717779	1					
ANR	717956	AssignmentExpression	"* ms = strstr ( mn , ""method."" )"		717779	2		=			
ANR	717957	Identifier	ms		717779	0					
ANR	717958	CallExpression	"strstr ( mn , ""method."" )"		717779	1					
ANR	717959	Callee	strstr		717779	0					
ANR	717960	Identifier	strstr		717779	0					
ANR	717961	ArgumentList	mn		717779	1					
ANR	717962	Argument	mn		717779	0					
ANR	717963	Identifier	mn		717779	0					
ANR	717964	Argument	"""method."""		717779	1					
ANR	717965	PrimaryExpression	"""method."""		717779	0					
ANR	717966	IfStatement	if ( ms )		717779	2					
ANR	717967	Condition	ms	2950:6:83710:83711	717779	0	True				
ANR	717968	Identifier	ms		717779	0					
ANR	717969	CompoundStatement		23:10:615:615	717779	1					
ANR	717970	ExpressionStatement	"mn = ms + strlen ( ""method."" )"	2951:3:83719:83747	717779	0	True				
ANR	717971	AssignmentExpression	"mn = ms + strlen ( ""method."" )"		717779	0		=			
ANR	717972	Identifier	mn		717779	0					
ANR	717973	AdditiveExpression	"ms + strlen ( ""method."" )"		717779	1		+			
ANR	717974	Identifier	ms		717779	0					
ANR	717975	CallExpression	"strlen ( ""method."" )"		717779	1					
ANR	717976	Callee	strlen		717779	0					
ANR	717977	Identifier	strlen		717779	0					
ANR	717978	ArgumentList	"""method."""		717779	1					
ANR	717979	Argument	"""method."""		717779	0					
ANR	717980	PrimaryExpression	"""method."""		717779	0					
ANR	717981	ExpressionStatement	"r_cons_printf ( ""  public %s ();\\n"" , mn )"	2953:2:83755:83794	717779	3	True				
ANR	717982	CallExpression	"r_cons_printf ( ""  public %s ();\\n"" , mn )"		717779	0					
ANR	717983	Callee	r_cons_printf		717779	0					
ANR	717984	Identifier	r_cons_printf		717779	0					
ANR	717985	ArgumentList	"""  public %s ();\\n"""		717779	1					
ANR	717986	Argument	"""  public %s ();\\n"""		717779	0					
ANR	717987	PrimaryExpression	"""  public %s ();\\n"""		717779	0					
ANR	717988	Argument	mn		717779	1					
ANR	717989	Identifier	mn		717779	0					
ANR	717990	ExpressionStatement	"r_cons_printf ( ""}\\n\\n"" )"	2955:1:83800:83823	717779	31	True				
ANR	717991	CallExpression	"r_cons_printf ( ""}\\n\\n"" )"		717779	0					
ANR	717992	Callee	r_cons_printf		717779	0					
ANR	717993	Identifier	r_cons_printf		717779	0					
ANR	717994	ArgumentList	"""}\\n\\n"""		717779	1					
ANR	717995	Argument	"""}\\n\\n"""		717779	0					
ANR	717996	PrimaryExpression	"""}\\n\\n"""		717779	0					
ANR	717997	ReturnType	static void		717779	1					
ANR	717998	Identifier	classdump_java		717779	2					
ANR	717999	ParameterList	"RCore * r , RBinClass * c"		717779	3					
ANR	718000	Parameter	RCore * r	2928:27:83074:83081	717779	0	True				
ANR	718001	ParameterType	RCore *		717779	0					
ANR	718002	Identifier	r		717779	1					
ANR	718003	Parameter	RBinClass * c	2928:37:83084:83095	717779	1	True				
ANR	718004	ParameterType	RBinClass *		717779	0					
ANR	718005	Identifier	c		717779	1					
ANR	718006	CFGEntryNode	ENTRY		717779		True				
ANR	718007	CFGExitNode	EXIT		717779		True				
ANR	718008	Symbol	f -> name		717779						
ANR	718009	Symbol	sym		717779						
ANR	718010	Symbol	c -> name		717779						
ANR	718011	Symbol	strlen		717779						
ANR	718012	Symbol	mn		717779						
ANR	718013	Symbol	c		717779						
ANR	718014	Symbol	NULL		717779						
ANR	718015	Symbol	f		717779						
ANR	718016	Symbol	iter3		717779						
ANR	718017	Symbol	sym -> dname		717779						
ANR	718018	Symbol	ms		717779						
ANR	718019	Symbol	iter2		717779						
ANR	718020	Symbol	f -> type		717779						
ANR	718021	Symbol	cn		717779						
ANR	718022	Symbol	r_regex_match		717779						
ANR	718023	Symbol	* c		717779						
ANR	718024	Symbol	* f		717779						
ANR	718025	Symbol	* sym		717779						
ANR	718026	Symbol	r		717779						
ANR	718027	Symbol	* cn		717779						
ANR	718028	Symbol	strstr		717779						
ANR	718029	Symbol	sym -> name		717779						
ANR	718030	Symbol	r_str_rchr		717779						
ANR	718031	Symbol	strdup		717779						
ANR	718032	Symbol	pn		717779						
ANR	718033	Function	bin_classes	2958:0:83828:89153							
ANR	718034	FunctionDef	"bin_classes (RCore * r , int mode)"		718033	0					
ANR	718035	CompoundStatement		2958:43:83871:89153	718033	0					
ANR	718036	IdentifierDeclStatement	"RListIter * iter , * iter2 , * iter3 ;"	2959:1:83874:83905	718033	0	True				
ANR	718037	IdentifierDecl	* iter		718033	0					
ANR	718038	IdentifierDeclType	RListIter *		718033	0					
ANR	718039	Identifier	iter		718033	1					
ANR	718040	IdentifierDecl	* iter2		718033	1					
ANR	718041	IdentifierDeclType	RListIter *		718033	0					
ANR	718042	Identifier	iter2		718033	1					
ANR	718043	IdentifierDecl	* iter3		718033	2					
ANR	718044	IdentifierDeclType	RListIter *		718033	0					
ANR	718045	Identifier	iter3		718033	1					
ANR	718046	IdentifierDeclStatement	RBinSymbol * sym ;	2960:1:83908:83923	718033	1	True				
ANR	718047	IdentifierDecl	* sym		718033	0					
ANR	718048	IdentifierDeclType	RBinSymbol *		718033	0					
ANR	718049	Identifier	sym		718033	1					
ANR	718050	IdentifierDeclStatement	RBinClass * c ;	2961:1:83926:83938	718033	2	True				
ANR	718051	IdentifierDecl	* c		718033	0					
ANR	718052	IdentifierDeclType	RBinClass *		718033	0					
ANR	718053	Identifier	c		718033	1					
ANR	718054	IdentifierDeclStatement	RBinField * f ;	2962:1:83941:83953	718033	3	True				
ANR	718055	IdentifierDecl	* f		718033	0					
ANR	718056	IdentifierDeclType	RBinField *		718033	0					
ANR	718057	Identifier	f		718033	1					
ANR	718058	IdentifierDeclStatement	char * name ;	2963:1:83956:83966	718033	4	True				
ANR	718059	IdentifierDecl	* name		718033	0					
ANR	718060	IdentifierDeclType	char *		718033	0					
ANR	718061	Identifier	name		718033	1					
ANR	718062	IdentifierDeclStatement	RList * cs = r_bin_get_classes ( r -> bin ) ;	2964:1:83969:84007	718033	5	True				
ANR	718063	IdentifierDecl	* cs = r_bin_get_classes ( r -> bin )		718033	0					
ANR	718064	IdentifierDeclType	RList *		718033	0					
ANR	718065	Identifier	cs		718033	1					
ANR	718066	AssignmentExpression	* cs = r_bin_get_classes ( r -> bin )		718033	2		=			
ANR	718067	Identifier	cs		718033	0					
ANR	718068	CallExpression	r_bin_get_classes ( r -> bin )		718033	1					
ANR	718069	Callee	r_bin_get_classes		718033	0					
ANR	718070	Identifier	r_bin_get_classes		718033	0					
ANR	718071	ArgumentList	r -> bin		718033	1					
ANR	718072	Argument	r -> bin		718033	0					
ANR	718073	PtrMemberAccess	r -> bin		718033	0					
ANR	718074	Identifier	r		718033	0					
ANR	718075	Identifier	bin		718033	1					
ANR	718076	IfStatement	if ( ! cs )		718033	6					
ANR	718077	Condition	! cs	2965:5:84014:84016	718033	0	True				
ANR	718078	UnaryOperationExpression	! cs		718033	0					
ANR	718079	UnaryOperator	!		718033	0					
ANR	718080	Identifier	cs		718033	1					
ANR	718081	CompoundStatement		8:10:147:147	718033	1					
ANR	718082	IfStatement	if ( IS_MODE_JSON ( mode ) )		718033	0					
ANR	718083	Condition	IS_MODE_JSON ( mode )	2966:6:84027:84045	718033	0	True				
ANR	718084	CallExpression	IS_MODE_JSON ( mode )		718033	0					
ANR	718085	Callee	IS_MODE_JSON		718033	0					
ANR	718086	Identifier	IS_MODE_JSON		718033	0					
ANR	718087	ArgumentList	mode		718033	1					
ANR	718088	Argument	mode		718033	0					
ANR	718089	Identifier	mode		718033	0					
ANR	718090	CompoundStatement		9:27:176:176	718033	1					
ANR	718091	ExpressionStatement	"r_cons_print ( ""[]"" )"	2967:3:84053:84072	718033	0	True				
ANR	718092	CallExpression	"r_cons_print ( ""[]"" )"		718033	0					
ANR	718093	Callee	r_cons_print		718033	0					
ANR	718094	Identifier	r_cons_print		718033	0					
ANR	718095	ArgumentList	"""[]"""		718033	1					
ANR	718096	Argument	"""[]"""		718033	0					
ANR	718097	PrimaryExpression	"""[]"""		718033	0					
ANR	718098	ReturnStatement	return false ;	2969:2:84080:84092	718033	1	True				
ANR	718099	Identifier	false		718033	0					
ANR	718100	IfStatement	if ( IS_MODE_JSON ( mode ) )		718033	7					
ANR	718101	Condition	IS_MODE_JSON ( mode )	2972:5:84161:84179	718033	0	True				
ANR	718102	CallExpression	IS_MODE_JSON ( mode )		718033	0					
ANR	718103	Callee	IS_MODE_JSON		718033	0					
ANR	718104	Identifier	IS_MODE_JSON		718033	0					
ANR	718105	ArgumentList	mode		718033	1					
ANR	718106	Argument	mode		718033	0					
ANR	718107	Identifier	mode		718033	0					
ANR	718108	CompoundStatement		15:26:310:310	718033	1					
ANR	718109	ExpressionStatement	"r_cons_print ( ""["" )"	2973:2:84186:84204	718033	0	True				
ANR	718110	CallExpression	"r_cons_print ( ""["" )"		718033	0					
ANR	718111	Callee	r_cons_print		718033	0					
ANR	718112	Identifier	r_cons_print		718033	0					
ANR	718113	ArgumentList	"""["""		718033	1					
ANR	718114	Argument	"""["""		718033	0					
ANR	718115	PrimaryExpression	"""["""		718033	0					
ANR	718116	ElseStatement	else		718033	0					
ANR	718117	IfStatement	if ( IS_MODE_SET ( mode ) )		718033	0					
ANR	718118	Condition	IS_MODE_SET ( mode )	2974:12:84218:84235	718033	0	True				
ANR	718119	CallExpression	IS_MODE_SET ( mode )		718033	0					
ANR	718120	Callee	IS_MODE_SET		718033	0					
ANR	718121	Identifier	IS_MODE_SET		718033	0					
ANR	718122	ArgumentList	mode		718033	1					
ANR	718123	Argument	mode		718033	0					
ANR	718124	Identifier	mode		718033	0					
ANR	718125	CompoundStatement		17:32:366:366	718033	1					
ANR	718126	IfStatement	"if ( ! r_config_get_i ( r -> config , ""bin.classes"" ) )"		718033	0					
ANR	718127	Condition	"! r_config_get_i ( r -> config , ""bin.classes"" )"	2975:6:84246:84287	718033	0	True				
ANR	718128	UnaryOperationExpression	"! r_config_get_i ( r -> config , ""bin.classes"" )"		718033	0					
ANR	718129	UnaryOperator	!		718033	0					
ANR	718130	CallExpression	"r_config_get_i ( r -> config , ""bin.classes"" )"		718033	1					
ANR	718131	Callee	r_config_get_i		718033	0					
ANR	718132	Identifier	r_config_get_i		718033	0					
ANR	718133	ArgumentList	r -> config		718033	1					
ANR	718134	Argument	r -> config		718033	0					
ANR	718135	PtrMemberAccess	r -> config		718033	0					
ANR	718136	Identifier	r		718033	0					
ANR	718137	Identifier	config		718033	1					
ANR	718138	Argument	"""bin.classes"""		718033	1					
ANR	718139	PrimaryExpression	"""bin.classes"""		718033	0					
ANR	718140	CompoundStatement		18:50:418:418	718033	1					
ANR	718141	ReturnStatement	return false ;	2976:3:84295:84307	718033	0	True				
ANR	718142	Identifier	false		718033	0					
ANR	718143	ExpressionStatement	"r_flag_space_set ( r -> flags , R_FLAGS_FS_CLASSES )"	2978:2:84315:84362	718033	1	True				
ANR	718144	CallExpression	"r_flag_space_set ( r -> flags , R_FLAGS_FS_CLASSES )"		718033	0					
ANR	718145	Callee	r_flag_space_set		718033	0					
ANR	718146	Identifier	r_flag_space_set		718033	0					
ANR	718147	ArgumentList	r -> flags		718033	1					
ANR	718148	Argument	r -> flags		718033	0					
ANR	718149	PtrMemberAccess	r -> flags		718033	0					
ANR	718150	Identifier	r		718033	0					
ANR	718151	Identifier	flags		718033	1					
ANR	718152	Argument	R_FLAGS_FS_CLASSES		718033	1					
ANR	718153	Identifier	R_FLAGS_FS_CLASSES		718033	0					
ANR	718154	ElseStatement	else		718033	0					
ANR	718155	IfStatement	if ( IS_MODE_RAD ( mode ) )		718033	0					
ANR	718156	Condition	IS_MODE_RAD ( mode )	2979:12:84376:84393	718033	0	True				
ANR	718157	CallExpression	IS_MODE_RAD ( mode )		718033	0					
ANR	718158	Callee	IS_MODE_RAD		718033	0					
ANR	718159	Identifier	IS_MODE_RAD		718033	0					
ANR	718160	ArgumentList	mode		718033	1					
ANR	718161	Argument	mode		718033	0					
ANR	718162	Identifier	mode		718033	0					
ANR	718163	CompoundStatement		22:32:524:524	718033	1					
ANR	718164	ExpressionStatement	"r_cons_println ( ""fs classes"" )"	2980:2:84400:84429	718033	0	True				
ANR	718165	CallExpression	"r_cons_println ( ""fs classes"" )"		718033	0					
ANR	718166	Callee	r_cons_println		718033	0					
ANR	718167	Identifier	r_cons_println		718033	0					
ANR	718168	ArgumentList	"""fs classes"""		718033	1					
ANR	718169	Argument	"""fs classes"""		718033	0					
ANR	718170	PrimaryExpression	"""fs classes"""		718033	0					
ANR	718171	Statement	r_list_foreach	2983:1:84436:84449	718033	8	True				
ANR	718172	Statement	(	2983:16:84451:84451	718033	9	True				
ANR	718173	Statement	cs	2983:17:84452:84453	718033	10	True				
ANR	718174	Statement	","	2983:19:84454:84454	718033	11	True				
ANR	718175	Statement	iter	2983:21:84456:84459	718033	12	True				
ANR	718176	Statement	","	2983:25:84460:84460	718033	13	True				
ANR	718177	Statement	c	2983:27:84462:84462	718033	14	True				
ANR	718178	Statement	)	2983:28:84463:84463	718033	15	True				
ANR	718179	CompoundStatement		32:2:707:729	718033	16					
ANR	718180	IfStatement	if ( ! c || ! c -> name || ! c -> name [ 0 ] )		718033	0					
ANR	718181	Condition	! c || ! c -> name || ! c -> name [ 0 ]	2984:6:84473:84501	718033	0	True				
ANR	718182	OrExpression	! c || ! c -> name || ! c -> name [ 0 ]		718033	0		||			
ANR	718183	UnaryOperationExpression	! c		718033	0					
ANR	718184	UnaryOperator	!		718033	0					
ANR	718185	Identifier	c		718033	1					
ANR	718186	OrExpression	! c -> name || ! c -> name [ 0 ]		718033	1		||			
ANR	718187	UnaryOperationExpression	! c -> name		718033	0					
ANR	718188	UnaryOperator	!		718033	0					
ANR	718189	PtrMemberAccess	c -> name		718033	1					
ANR	718190	Identifier	c		718033	0					
ANR	718191	Identifier	name		718033	1					
ANR	718192	UnaryOperationExpression	! c -> name [ 0 ]		718033	1					
ANR	718193	UnaryOperator	!		718033	0					
ANR	718194	ArrayIndexing	c -> name [ 0 ]		718033	1					
ANR	718195	PtrMemberAccess	c -> name		718033	0					
ANR	718196	Identifier	c		718033	0					
ANR	718197	Identifier	name		718033	1					
ANR	718198	PrimaryExpression	0		718033	1					
ANR	718199	CompoundStatement		27:37:632:632	718033	1					
ANR	718200	ContinueStatement	continue ;	2985:3:84509:84517	718033	0	True				
ANR	718201	ExpressionStatement	name = strdup ( c -> name )	2987:2:84525:84548	718033	1	True				
ANR	718202	AssignmentExpression	name = strdup ( c -> name )		718033	0		=			
ANR	718203	Identifier	name		718033	0					
ANR	718204	CallExpression	strdup ( c -> name )		718033	1					
ANR	718205	Callee	strdup		718033	0					
ANR	718206	Identifier	strdup		718033	0					
ANR	718207	ArgumentList	c -> name		718033	1					
ANR	718208	Argument	c -> name		718033	0					
ANR	718209	PtrMemberAccess	c -> name		718033	0					
ANR	718210	Identifier	c		718033	0					
ANR	718211	Identifier	name		718033	1					
ANR	718212	ExpressionStatement	"r_name_filter ( name , 0 )"	2988:2:84552:84575	718033	2	True				
ANR	718213	CallExpression	"r_name_filter ( name , 0 )"		718033	0					
ANR	718214	Callee	r_name_filter		718033	0					
ANR	718215	Identifier	r_name_filter		718033	0					
ANR	718216	ArgumentList	name		718033	1					
ANR	718217	Argument	name		718033	0					
ANR	718218	Identifier	name		718033	0					
ANR	718219	Argument	0		718033	1					
ANR	718220	PrimaryExpression	0		718033	0					
ANR	718221	IdentifierDeclStatement	ut64 at_min = UT64_MAX ;	2989:2:84579:84601	718033	3	True				
ANR	718222	IdentifierDecl	at_min = UT64_MAX		718033	0					
ANR	718223	IdentifierDeclType	ut64		718033	0					
ANR	718224	Identifier	at_min		718033	1					
ANR	718225	AssignmentExpression	at_min = UT64_MAX		718033	2		=			
ANR	718226	Identifier	UT64_MAX		718033	0					
ANR	718227	Identifier	UT64_MAX		718033	1					
ANR	718228	Statement	ut64	2990:2:84605:84608	718033	4	True				
ANR	718229	Statement	at_max	2990:7:84610:84615	718033	5	True				
ANR	718230	Statement	=	2990:14:84617:84617	718033	6	True				
ANR	718231	Statement	0L	2990:16:84619:84620	718033	7	True				
ANR	718232	ExpressionStatement	L	2990:18:84621:84622	718033	8	True				
ANR	718233	Identifier	L		718033	0					
ANR	718234	Statement	r_list_foreach	2992:2:84627:84640	718033	9	True				
ANR	718235	Statement	(	2992:17:84642:84642	718033	10	True				
ANR	718236	Statement	c	2992:18:84643:84643	718033	11	True				
ANR	718237	Statement	->	2992:19:84644:84645	718033	12	True				
ANR	718238	Statement	methods	2992:21:84646:84652	718033	13	True				
ANR	718239	Statement	","	2992:28:84653:84653	718033	14	True				
ANR	718240	Statement	iter2	2992:30:84655:84659	718033	15	True				
ANR	718241	Statement	","	2992:35:84660:84660	718033	16	True				
ANR	718242	Statement	sym	2992:37:84662:84664	718033	17	True				
ANR	718243	Statement	)	2992:40:84665:84665	718033	18	True				
ANR	718244	CompoundStatement		35:42:795:795	718033	19					
ANR	718245	IfStatement	if ( sym -> vaddr )		718033	0					
ANR	718246	Condition	sym -> vaddr	2993:7:84676:84685	718033	0	True				
ANR	718247	PtrMemberAccess	sym -> vaddr		718033	0					
ANR	718248	Identifier	sym		718033	0					
ANR	718249	Identifier	vaddr		718033	1					
ANR	718250	CompoundStatement		36:19:816:816	718033	1					
ANR	718251	IfStatement	if ( sym -> vaddr < at_min )		718033	0					
ANR	718252	Condition	sym -> vaddr < at_min	2994:8:84698:84716	718033	0	True				
ANR	718253	RelationalExpression	sym -> vaddr < at_min		718033	0		<			
ANR	718254	PtrMemberAccess	sym -> vaddr		718033	0					
ANR	718255	Identifier	sym		718033	0					
ANR	718256	Identifier	vaddr		718033	1					
ANR	718257	Identifier	at_min		718033	1					
ANR	718258	CompoundStatement		37:29:847:847	718033	1					
ANR	718259	ExpressionStatement	at_min = sym -> vaddr	2995:5:84726:84745	718033	0	True				
ANR	718260	AssignmentExpression	at_min = sym -> vaddr		718033	0		=			
ANR	718261	Identifier	at_min		718033	0					
ANR	718262	PtrMemberAccess	sym -> vaddr		718033	1					
ANR	718263	Identifier	sym		718033	0					
ANR	718264	Identifier	vaddr		718033	1					
ANR	718265	IfStatement	if ( sym -> vaddr + sym -> size > at_max )		718033	1					
ANR	718266	Condition	sym -> vaddr + sym -> size > at_max	2997:8:84761:84791	718033	0	True				
ANR	718267	RelationalExpression	sym -> vaddr + sym -> size > at_max		718033	0		>			
ANR	718268	AdditiveExpression	sym -> vaddr + sym -> size		718033	0		+			
ANR	718269	PtrMemberAccess	sym -> vaddr		718033	0					
ANR	718270	Identifier	sym		718033	0					
ANR	718271	Identifier	vaddr		718033	1					
ANR	718272	PtrMemberAccess	sym -> size		718033	1					
ANR	718273	Identifier	sym		718033	0					
ANR	718274	Identifier	size		718033	1					
ANR	718275	Identifier	at_max		718033	1					
ANR	718276	CompoundStatement		40:41:922:922	718033	1					
ANR	718277	ExpressionStatement	at_max = sym -> vaddr + sym -> size	2998:5:84801:84832	718033	0	True				
ANR	718278	AssignmentExpression	at_max = sym -> vaddr + sym -> size		718033	0		=			
ANR	718279	Identifier	at_max		718033	0					
ANR	718280	AdditiveExpression	sym -> vaddr + sym -> size		718033	1		+			
ANR	718281	PtrMemberAccess	sym -> vaddr		718033	0					
ANR	718282	Identifier	sym		718033	0					
ANR	718283	Identifier	vaddr		718033	1					
ANR	718284	PtrMemberAccess	sym -> size		718033	1					
ANR	718285	Identifier	sym		718033	0					
ANR	718286	Identifier	size		718033	1					
ANR	718287	IfStatement	if ( at_min == UT64_MAX )		718033	20					
ANR	718288	Condition	at_min == UT64_MAX	3002:6:84855:84872	718033	0	True				
ANR	718289	EqualityExpression	at_min == UT64_MAX		718033	0		==			
ANR	718290	Identifier	at_min		718033	0					
ANR	718291	Identifier	UT64_MAX		718033	1					
ANR	718292	CompoundStatement		45:26:1003:1003	718033	1					
ANR	718293	ExpressionStatement	at_min = c -> addr	3003:3:84880:84896	718033	0	True				
ANR	718294	AssignmentExpression	at_min = c -> addr		718033	0		=			
ANR	718295	Identifier	at_min		718033	0					
ANR	718296	PtrMemberAccess	c -> addr		718033	1					
ANR	718297	Identifier	c		718033	0					
ANR	718298	Identifier	addr		718033	1					
ANR	718299	ExpressionStatement	at_max = c -> addr	3004:3:84901:84917	718033	1	True				
ANR	718300	AssignmentExpression	at_max = c -> addr		718033	0		=			
ANR	718301	Identifier	at_max		718033	0					
ANR	718302	PtrMemberAccess	c -> addr		718033	1					
ANR	718303	Identifier	c		718033	0					
ANR	718304	Identifier	addr		718033	1					
ANR	718305	IfStatement	if ( IS_MODE_SET ( mode ) )		718033	21					
ANR	718306	Condition	IS_MODE_SET ( mode )	3007:6:84945:84962	718033	0	True				
ANR	718307	CallExpression	IS_MODE_SET ( mode )		718033	0					
ANR	718308	Callee	IS_MODE_SET		718033	0					
ANR	718309	Identifier	IS_MODE_SET		718033	0					
ANR	718310	ArgumentList	mode		718033	1					
ANR	718311	Argument	mode		718033	0					
ANR	718312	Identifier	mode		718033	0					
ANR	718313	CompoundStatement		51:3:1098:1148	718033	1					
ANR	718314	IdentifierDeclStatement	"const char * classname = sdb_fmt ( ""class.%s"" , name ) ;"	3008:3:84970:85020	718033	0	True				
ANR	718315	IdentifierDecl	"* classname = sdb_fmt ( ""class.%s"" , name )"		718033	0					
ANR	718316	IdentifierDeclType	const char *		718033	0					
ANR	718317	Identifier	classname		718033	1					
ANR	718318	AssignmentExpression	"* classname = sdb_fmt ( ""class.%s"" , name )"		718033	2		=			
ANR	718319	Identifier	classname		718033	0					
ANR	718320	CallExpression	"sdb_fmt ( ""class.%s"" , name )"		718033	1					
ANR	718321	Callee	sdb_fmt		718033	0					
ANR	718322	Identifier	sdb_fmt		718033	0					
ANR	718323	ArgumentList	"""class.%s"""		718033	1					
ANR	718324	Argument	"""class.%s"""		718033	0					
ANR	718325	PrimaryExpression	"""class.%s"""		718033	0					
ANR	718326	Argument	name		718033	1					
ANR	718327	Identifier	name		718033	0					
ANR	718328	ExpressionStatement	"r_flag_set ( r -> flags , classname , c -> addr , 1 )"	3009:3:85025:85069	718033	1	True				
ANR	718329	CallExpression	"r_flag_set ( r -> flags , classname , c -> addr , 1 )"		718033	0					
ANR	718330	Callee	r_flag_set		718033	0					
ANR	718331	Identifier	r_flag_set		718033	0					
ANR	718332	ArgumentList	r -> flags		718033	1					
ANR	718333	Argument	r -> flags		718033	0					
ANR	718334	PtrMemberAccess	r -> flags		718033	0					
ANR	718335	Identifier	r		718033	0					
ANR	718336	Identifier	flags		718033	1					
ANR	718337	Argument	classname		718033	1					
ANR	718338	Identifier	classname		718033	0					
ANR	718339	Argument	c -> addr		718033	2					
ANR	718340	PtrMemberAccess	c -> addr		718033	0					
ANR	718341	Identifier	c		718033	0					
ANR	718342	Identifier	addr		718033	1					
ANR	718343	Argument	1		718033	3					
ANR	718344	PrimaryExpression	1		718033	0					
ANR	718345	Statement	r_list_foreach	3010:3:85074:85087	718033	2	True				
ANR	718346	Statement	(	3010:18:85089:85089	718033	3	True				
ANR	718347	Statement	c	3010:19:85090:85090	718033	4	True				
ANR	718348	Statement	->	3010:20:85091:85092	718033	5	True				
ANR	718349	Statement	methods	3010:22:85093:85099	718033	6	True				
ANR	718350	Statement	","	3010:29:85100:85100	718033	7	True				
ANR	718351	Statement	iter2	3010:31:85102:85106	718033	8	True				
ANR	718352	Statement	","	3010:36:85107:85107	718033	9	True				
ANR	718353	Statement	sym	3010:38:85109:85111	718033	10	True				
ANR	718354	Statement	)	3010:41:85112:85112	718033	11	True				
ANR	718355	CompoundStatement		55:4:1322:1396	718033	12					
ANR	718356	IdentifierDeclStatement	"char * mflags = r_core_bin_method_flags_str ( sym -> method_flags , mode ) ;"	3011:4:85120:85188	718033	0	True				
ANR	718357	IdentifierDecl	"* mflags = r_core_bin_method_flags_str ( sym -> method_flags , mode )"		718033	0					
ANR	718358	IdentifierDeclType	char *		718033	0					
ANR	718359	Identifier	mflags		718033	1					
ANR	718360	AssignmentExpression	"* mflags = r_core_bin_method_flags_str ( sym -> method_flags , mode )"		718033	2		=			
ANR	718361	Identifier	mflags		718033	0					
ANR	718362	CallExpression	"r_core_bin_method_flags_str ( sym -> method_flags , mode )"		718033	1					
ANR	718363	Callee	r_core_bin_method_flags_str		718033	0					
ANR	718364	Identifier	r_core_bin_method_flags_str		718033	0					
ANR	718365	ArgumentList	sym -> method_flags		718033	1					
ANR	718366	Argument	sym -> method_flags		718033	0					
ANR	718367	PtrMemberAccess	sym -> method_flags		718033	0					
ANR	718368	Identifier	sym		718033	0					
ANR	718369	Identifier	method_flags		718033	1					
ANR	718370	Argument	mode		718033	1					
ANR	718371	Identifier	mode		718033	0					
ANR	718372	IdentifierDeclStatement	"char * method = sdb_fmt ( ""method%s.%s.%s"" , mflags , c -> name , sym -> name ) ;"	3012:4:85194:85268	718033	1	True				
ANR	718373	IdentifierDecl	"* method = sdb_fmt ( ""method%s.%s.%s"" , mflags , c -> name , sym -> name )"		718033	0					
ANR	718374	IdentifierDeclType	char *		718033	0					
ANR	718375	Identifier	method		718033	1					
ANR	718376	AssignmentExpression	"* method = sdb_fmt ( ""method%s.%s.%s"" , mflags , c -> name , sym -> name )"		718033	2		=			
ANR	718377	Identifier	method		718033	0					
ANR	718378	CallExpression	"sdb_fmt ( ""method%s.%s.%s"" , mflags , c -> name , sym -> name )"		718033	1					
ANR	718379	Callee	sdb_fmt		718033	0					
ANR	718380	Identifier	sdb_fmt		718033	0					
ANR	718381	ArgumentList	"""method%s.%s.%s"""		718033	1					
ANR	718382	Argument	"""method%s.%s.%s"""		718033	0					
ANR	718383	PrimaryExpression	"""method%s.%s.%s"""		718033	0					
ANR	718384	Argument	mflags		718033	1					
ANR	718385	Identifier	mflags		718033	0					
ANR	718386	Argument	c -> name		718033	2					
ANR	718387	PtrMemberAccess	c -> name		718033	0					
ANR	718388	Identifier	c		718033	0					
ANR	718389	Identifier	name		718033	1					
ANR	718390	Argument	sym -> name		718033	3					
ANR	718391	PtrMemberAccess	sym -> name		718033	0					
ANR	718392	Identifier	sym		718033	0					
ANR	718393	Identifier	name		718033	1					
ANR	718394	ExpressionStatement	R_FREE ( mflags )	3014:4:85274:85289	718033	2	True				
ANR	718395	CallExpression	R_FREE ( mflags )		718033	0					
ANR	718396	Callee	R_FREE		718033	0					
ANR	718397	Identifier	R_FREE		718033	0					
ANR	718398	ArgumentList	mflags		718033	1					
ANR	718399	Argument	mflags		718033	0					
ANR	718400	Identifier	mflags		718033	0					
ANR	718401	ExpressionStatement	"r_name_filter ( method , - 1 )"	3015:4:85295:85321	718033	3	True				
ANR	718402	CallExpression	"r_name_filter ( method , - 1 )"		718033	0					
ANR	718403	Callee	r_name_filter		718033	0					
ANR	718404	Identifier	r_name_filter		718033	0					
ANR	718405	ArgumentList	method		718033	1					
ANR	718406	Argument	method		718033	0					
ANR	718407	Identifier	method		718033	0					
ANR	718408	Argument	- 1		718033	1					
ANR	718409	UnaryOperationExpression	- 1		718033	0					
ANR	718410	UnaryOperator	-		718033	0					
ANR	718411	PrimaryExpression	1		718033	1					
ANR	718412	ExpressionStatement	"r_flag_set ( r -> flags , method , sym -> vaddr , 1 )"	3016:4:85327:85371	718033	4	True				
ANR	718413	CallExpression	"r_flag_set ( r -> flags , method , sym -> vaddr , 1 )"		718033	0					
ANR	718414	Callee	r_flag_set		718033	0					
ANR	718415	Identifier	r_flag_set		718033	0					
ANR	718416	ArgumentList	r -> flags		718033	1					
ANR	718417	Argument	r -> flags		718033	0					
ANR	718418	PtrMemberAccess	r -> flags		718033	0					
ANR	718419	Identifier	r		718033	0					
ANR	718420	Identifier	flags		718033	1					
ANR	718421	Argument	method		718033	1					
ANR	718422	Identifier	method		718033	0					
ANR	718423	Argument	sym -> vaddr		718033	2					
ANR	718424	PtrMemberAccess	sym -> vaddr		718033	0					
ANR	718425	Identifier	sym		718033	0					
ANR	718426	Identifier	vaddr		718033	1					
ANR	718427	Argument	1		718033	3					
ANR	718428	PrimaryExpression	1		718033	0					
ANR	718429	ElseStatement	else		718033	0					
ANR	718430	IfStatement	if ( IS_MODE_SIMPLEST ( mode ) )		718033	0					
ANR	718431	Condition	IS_MODE_SIMPLEST ( mode )	3018:13:85391:85413	718033	0	True				
ANR	718432	CallExpression	IS_MODE_SIMPLEST ( mode )		718033	0					
ANR	718433	Callee	IS_MODE_SIMPLEST		718033	0					
ANR	718434	Identifier	IS_MODE_SIMPLEST		718033	0					
ANR	718435	ArgumentList	mode		718033	1					
ANR	718436	Argument	mode		718033	0					
ANR	718437	Identifier	mode		718033	0					
ANR	718438	CompoundStatement		61:38:1544:1544	718033	1					
ANR	718439	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , c -> name )"	3019:3:85421:85452	718033	0	True				
ANR	718440	CallExpression	"r_cons_printf ( ""%s\\n"" , c -> name )"		718033	0					
ANR	718441	Callee	r_cons_printf		718033	0					
ANR	718442	Identifier	r_cons_printf		718033	0					
ANR	718443	ArgumentList	"""%s\\n"""		718033	1					
ANR	718444	Argument	"""%s\\n"""		718033	0					
ANR	718445	PrimaryExpression	"""%s\\n"""		718033	0					
ANR	718446	Argument	c -> name		718033	1					
ANR	718447	PtrMemberAccess	c -> name		718033	0					
ANR	718448	Identifier	c		718033	0					
ANR	718449	Identifier	name		718033	1					
ANR	718450	ElseStatement	else		718033	0					
ANR	718451	IfStatement	if ( IS_MODE_SIMPLE ( mode ) )		718033	0					
ANR	718452	Condition	IS_MODE_SIMPLE ( mode )	3020:13:85467:85487	718033	0	True				
ANR	718453	CallExpression	IS_MODE_SIMPLE ( mode )		718033	0					
ANR	718454	Callee	IS_MODE_SIMPLE		718033	0					
ANR	718455	Identifier	IS_MODE_SIMPLE		718033	0					
ANR	718456	ArgumentList	mode		718033	1					
ANR	718457	Argument	mode		718033	0					
ANR	718458	Identifier	mode		718033	0					
ANR	718459	CompoundStatement		63:36:1618:1618	718033	1					
ANR	718460	Statement	r_cons_printf	3021:3:85495:85507	718033	0	True				
ANR	718461	Statement	(	3021:17:85509:85509	718033	1	True				
ANR	718462	Statement	"""0x%08"""	3021:18:85510:85516	718033	2	True				
ANR	718463	Statement	PFMT64x	3021:25:85517:85523	718033	3	True				
ANR	718464	Statement	""" [0x%08"""	3021:32:85524:85532	718033	4	True				
ANR	718465	Statement	PFMT64x	3021:41:85533:85539	718033	5	True				
ANR	718466	Statement	""" - 0x%08"""	3021:48:85540:85549	718033	6	True				
ANR	718467	Statement	PFMT64x	3021:58:85550:85556	718033	7	True				
ANR	718468	Statement	"""] %s%s%s\\n"""	3021:65:85557:85568	718033	8	True				
ANR	718469	Statement	","	3021:77:85569:85569	718033	9	True				
ANR	718470	Statement	c	3022:4:85575:85575	718033	10	True				
ANR	718471	Statement	->	3022:5:85576:85577	718033	11	True				
ANR	718472	Statement	addr	3022:7:85578:85581	718033	12	True				
ANR	718473	Statement	","	3022:11:85582:85582	718033	13	True				
ANR	718474	Statement	at_min	3022:13:85584:85589	718033	14	True				
ANR	718475	Statement	","	3022:19:85590:85590	718033	15	True				
ANR	718476	Statement	at_max	3022:21:85592:85597	718033	16	True				
ANR	718477	Statement	","	3022:27:85598:85598	718033	17	True				
ANR	718478	Statement	c	3022:29:85600:85600	718033	18	True				
ANR	718479	Statement	->	3022:30:85601:85602	718033	19	True				
ANR	718480	Statement	name	3022:32:85603:85606	718033	20	True				
ANR	718481	Statement	","	3022:36:85607:85607	718033	21	True				
ANR	718482	Statement	c	3022:38:85609:85609	718033	22	True				
ANR	718483	Statement	->	3022:39:85610:85611	718033	23	True				
ANR	718484	Statement	super	3022:41:85612:85616	718033	24	True				
ANR	718485	Statement	?	3022:47:85618:85618	718033	25	True				
ANR	718486	Statement	""" """	3022:49:85620:85622	718033	26	True				
ANR	718487	Statement	:	3022:53:85624:85624	718033	27	True				
ANR	718488	Statement	""""""	3022:55:85626:85627	718033	28	True				
ANR	718489	Statement	","	3022:57:85628:85628	718033	29	True				
ANR	718490	Statement	c	3023:4:85634:85634	718033	30	True				
ANR	718491	Statement	->	3023:5:85635:85636	718033	31	True				
ANR	718492	Statement	super	3023:7:85637:85641	718033	32	True				
ANR	718493	Statement	?	3023:13:85643:85643	718033	33	True				
ANR	718494	Statement	c	3023:15:85645:85645	718033	34	True				
ANR	718495	Statement	->	3023:16:85646:85647	718033	35	True				
ANR	718496	Label	super :	3023:18:85648:85654	718033	36	True				
ANR	718497	Identifier	super		718033	0					
ANR	718498	Statement	""""""	3023:26:85656:85657	718033	37	True				
ANR	718499	Statement	)	3023:28:85658:85658	718033	38	True				
ANR	718500	ExpressionStatement		3023:29:85659:85659	718033	39	True				
ANR	718501	ElseStatement	else		718033	0					
ANR	718502	IfStatement	if ( IS_MODE_RAD ( mode ) )		718033	0					
ANR	718503	Condition	IS_MODE_RAD ( mode )	3024:13:85674:85691	718033	0	True				
ANR	718504	CallExpression	IS_MODE_RAD ( mode )		718033	0					
ANR	718505	Callee	IS_MODE_RAD		718033	0					
ANR	718506	Identifier	IS_MODE_RAD		718033	0					
ANR	718507	ArgumentList	mode		718033	1					
ANR	718508	Argument	mode		718033	0					
ANR	718509	Identifier	mode		718033	0					
ANR	718510	CompoundStatement		68:3:1827:1857	718033	1					
ANR	718511	IdentifierDeclStatement	char * n = __filterShell ( name ) ;	3025:3:85699:85729	718033	0	True				
ANR	718512	IdentifierDecl	* n = __filterShell ( name )		718033	0					
ANR	718513	IdentifierDeclType	char *		718033	0					
ANR	718514	Identifier	n		718033	1					
ANR	718515	AssignmentExpression	* n = __filterShell ( name )		718033	2		=			
ANR	718516	Identifier	n		718033	0					
ANR	718517	CallExpression	__filterShell ( name )		718033	1					
ANR	718518	Callee	__filterShell		718033	0					
ANR	718519	Identifier	__filterShell		718033	0					
ANR	718520	ArgumentList	name		718033	1					
ANR	718521	Argument	name		718033	0					
ANR	718522	Identifier	name		718033	0					
ANR	718523	Statement	r_cons_printf	3026:3:85734:85746	718033	1	True				
ANR	718524	Statement	(	3026:17:85748:85748	718033	2	True				
ANR	718525	Statement	"""\\""f class.%s = 0x%"""	3026:18:85749:85768	718033	3	True				
ANR	718526	Statement	PFMT64x	3026:38:85769:85775	718033	4	True				
ANR	718527	Statement	"""\\""\\n"""	3026:45:85776:85781	718033	5	True				
ANR	718528	Statement	","	3026:51:85782:85782	718033	6	True				
ANR	718529	Statement	n	3026:53:85784:85784	718033	7	True				
ANR	718530	Statement	","	3026:54:85785:85785	718033	8	True				
ANR	718531	Statement	at_min	3026:56:85787:85792	718033	9	True				
ANR	718532	Statement	)	3026:62:85793:85793	718033	10	True				
ANR	718533	ExpressionStatement		3026:63:85794:85794	718033	11	True				
ANR	718534	ExpressionStatement	free ( n )	3027:3:85799:85807	718033	12	True				
ANR	718535	CallExpression	free ( n )		718033	0					
ANR	718536	Callee	free		718033	0					
ANR	718537	Identifier	free		718033	0					
ANR	718538	ArgumentList	n		718033	1					
ANR	718539	Argument	n		718033	0					
ANR	718540	Identifier	n		718033	0					
ANR	718541	IfStatement	if ( c -> super )		718033	13					
ANR	718542	Condition	c -> super	3028:7:85816:85823	718033	0	True				
ANR	718543	PtrMemberAccess	c -> super		718033	0					
ANR	718544	Identifier	c		718033	0					
ANR	718545	Identifier	super		718033	1					
ANR	718546	CompoundStatement		73:4:2012:2031	718033	1					
ANR	718547	IdentifierDeclStatement	char * cn = c -> name ;	3029:4:85832:85850	718033	0	True				
ANR	718548	IdentifierDecl	* cn = c -> name		718033	0					
ANR	718549	IdentifierDeclType	char *		718033	0					
ANR	718550	Identifier	cn		718033	1					
ANR	718551	AssignmentExpression	* cn = c -> name		718033	2		=			
ANR	718552	Identifier	cn		718033	0					
ANR	718553	PtrMemberAccess	c -> name		718033	1					
ANR	718554	Identifier	c		718033	0					
ANR	718555	Identifier	name		718033	1					
ANR	718556	IdentifierDeclStatement	char * su = c -> super ;	3030:4:85884:85903	718033	1	True				
ANR	718557	IdentifierDecl	* su = c -> super		718033	0					
ANR	718558	IdentifierDeclType	char *		718033	0					
ANR	718559	Identifier	su		718033	1					
ANR	718560	AssignmentExpression	* su = c -> super		718033	2		=			
ANR	718561	Identifier	su		718033	0					
ANR	718562	PtrMemberAccess	c -> super		718033	1					
ANR	718563	Identifier	c		718033	0					
ANR	718564	Identifier	super		718033	1					
ANR	718565	ExpressionStatement	"r_cons_printf ( ""\\""f super.%s.%s = %d\\""\\n"" , cn , su , c -> index )"	3031:4:85938:86004	718033	2	True				
ANR	718566	CallExpression	"r_cons_printf ( ""\\""f super.%s.%s = %d\\""\\n"" , cn , su , c -> index )"		718033	0					
ANR	718567	Callee	r_cons_printf		718033	0					
ANR	718568	Identifier	r_cons_printf		718033	0					
ANR	718569	ArgumentList	"""\\""f super.%s.%s = %d\\""\\n"""		718033	1					
ANR	718570	Argument	"""\\""f super.%s.%s = %d\\""\\n"""		718033	0					
ANR	718571	PrimaryExpression	"""\\""f super.%s.%s = %d\\""\\n"""		718033	0					
ANR	718572	Argument	cn		718033	1					
ANR	718573	Identifier	cn		718033	0					
ANR	718574	Argument	su		718033	2					
ANR	718575	Identifier	su		718033	0					
ANR	718576	Argument	c -> index		718033	3					
ANR	718577	PtrMemberAccess	c -> index		718033	0					
ANR	718578	Identifier	c		718033	0					
ANR	718579	Identifier	index		718033	1					
ANR	718580	Statement	r_list_foreach	3036:3:86050:86063	718033	14	True				
ANR	718581	Statement	(	3036:18:86065:86065	718033	15	True				
ANR	718582	Statement	c	3036:19:86066:86066	718033	16	True				
ANR	718583	Statement	->	3036:20:86067:86068	718033	17	True				
ANR	718584	Statement	methods	3036:22:86069:86075	718033	18	True				
ANR	718585	Statement	","	3036:29:86076:86076	718033	19	True				
ANR	718586	Statement	iter2	3036:31:86078:86082	718033	20	True				
ANR	718587	Statement	","	3036:36:86083:86083	718033	21	True				
ANR	718588	Statement	sym	3036:38:86085:86087	718033	22	True				
ANR	718589	Statement	)	3036:41:86088:86088	718033	23	True				
ANR	718590	CompoundStatement		82:4:2350:2370	718033	24					
ANR	718591	IdentifierDeclStatement	"char * mflags = r_core_bin_method_flags_str ( sym -> method_flags , mode ) ;"	3037:4:86096:86164	718033	0	True				
ANR	718592	IdentifierDecl	"* mflags = r_core_bin_method_flags_str ( sym -> method_flags , mode )"		718033	0					
ANR	718593	IdentifierDeclType	char *		718033	0					
ANR	718594	Identifier	mflags		718033	1					
ANR	718595	AssignmentExpression	"* mflags = r_core_bin_method_flags_str ( sym -> method_flags , mode )"		718033	2		=			
ANR	718596	Identifier	mflags		718033	0					
ANR	718597	CallExpression	"r_core_bin_method_flags_str ( sym -> method_flags , mode )"		718033	1					
ANR	718598	Callee	r_core_bin_method_flags_str		718033	0					
ANR	718599	Identifier	r_core_bin_method_flags_str		718033	0					
ANR	718600	ArgumentList	sym -> method_flags		718033	1					
ANR	718601	Argument	sym -> method_flags		718033	0					
ANR	718602	PtrMemberAccess	sym -> method_flags		718033	0					
ANR	718603	Identifier	sym		718033	0					
ANR	718604	Identifier	method_flags		718033	1					
ANR	718605	Argument	mode		718033	1					
ANR	718606	Identifier	mode		718033	0					
ANR	718607	IdentifierDeclStatement	char * n = c -> name ;	3038:4:86170:86187	718033	1	True				
ANR	718608	IdentifierDecl	* n = c -> name		718033	0					
ANR	718609	IdentifierDeclType	char *		718033	0					
ANR	718610	Identifier	n		718033	1					
ANR	718611	AssignmentExpression	* n = c -> name		718033	2		=			
ANR	718612	Identifier	n		718033	0					
ANR	718613	PtrMemberAccess	c -> name		718033	1					
ANR	718614	Identifier	c		718033	0					
ANR	718615	Identifier	name		718033	1					
ANR	718616	IdentifierDeclStatement	char * sn = sym -> name ;	3039:4:86222:86242	718033	2	True				
ANR	718617	IdentifierDecl	* sn = sym -> name		718033	0					
ANR	718618	IdentifierDeclType	char *		718033	0					
ANR	718619	Identifier	sn		718033	1					
ANR	718620	AssignmentExpression	* sn = sym -> name		718033	2		=			
ANR	718621	Identifier	sn		718033	0					
ANR	718622	PtrMemberAccess	sym -> name		718033	1					
ANR	718623	Identifier	sym		718033	0					
ANR	718624	Identifier	name		718033	1					
ANR	718625	Statement	char	3040:4:86277:86280	718033	3	True				
ANR	718626	Statement	*	3040:9:86282:86282	718033	4	True				
ANR	718627	Statement	cmd	3040:10:86283:86285	718033	5	True				
ANR	718628	Statement	=	3040:14:86287:86287	718033	6	True				
ANR	718629	Statement	r_str_newf	3040:16:86289:86298	718033	7	True				
ANR	718630	Statement	(	3040:27:86300:86300	718033	8	True				
ANR	718631	Statement	"""\\""f method%s.%s.%s = 0x%"""	3040:28:86301:86326	718033	9	True				
ANR	718632	Statement	PFMT64x	3040:54:86327:86333	718033	10	True				
ANR	718633	Statement	"""\\""\\n"""	3040:61:86334:86339	718033	11	True				
ANR	718634	Statement	","	3040:67:86340:86340	718033	12	True				
ANR	718635	Statement	mflags	3040:69:86342:86347	718033	13	True				
ANR	718636	Statement	","	3040:75:86348:86348	718033	14	True				
ANR	718637	Statement	n	3040:77:86350:86350	718033	15	True				
ANR	718638	Statement	","	3040:78:86351:86351	718033	16	True				
ANR	718639	Statement	sn	3040:80:86353:86354	718033	17	True				
ANR	718640	Statement	","	3040:82:86355:86355	718033	18	True				
ANR	718641	Statement	sym	3040:84:86357:86359	718033	19	True				
ANR	718642	Statement	->	3040:87:86360:86361	718033	20	True				
ANR	718643	Statement	vaddr	3040:89:86362:86366	718033	21	True				
ANR	718644	Statement	)	3040:94:86367:86367	718033	22	True				
ANR	718645	ExpressionStatement		3040:95:86368:86368	718033	23	True				
ANR	718646	IfStatement	if ( cmd )		718033	24					
ANR	718647	Condition	cmd	3043:8:86413:86415	718033	0	True				
ANR	718648	Identifier	cmd		718033	0					
ANR	718649	CompoundStatement		91:5:2650:2696	718033	1					
ANR	718650	ExpressionStatement	"r_str_replace_char ( cmd , ' ' , '_' )"	3044:5:86425:86459	718033	0	True				
ANR	718651	CallExpression	"r_str_replace_char ( cmd , ' ' , '_' )"		718033	0					
ANR	718652	Callee	r_str_replace_char		718033	0					
ANR	718653	Identifier	r_str_replace_char		718033	0					
ANR	718654	ArgumentList	cmd		718033	1					
ANR	718655	Argument	cmd		718033	0					
ANR	718656	Identifier	cmd		718033	0					
ANR	718657	Argument	' '		718033	1					
ANR	718658	PrimaryExpression	' '		718033	0					
ANR	718659	Argument	'_'		718033	2					
ANR	718660	PrimaryExpression	'_'		718033	0					
ANR	718661	IfStatement	if ( strlen ( cmd ) > 2 )		718033	1					
ANR	718662	Condition	strlen ( cmd ) > 2	3045:9:86470:86485	718033	0	True				
ANR	718663	RelationalExpression	strlen ( cmd ) > 2		718033	0		>			
ANR	718664	CallExpression	strlen ( cmd )		718033	0					
ANR	718665	Callee	strlen		718033	0					
ANR	718666	Identifier	strlen		718033	0					
ANR	718667	ArgumentList	cmd		718033	1					
ANR	718668	Argument	cmd		718033	0					
ANR	718669	Identifier	cmd		718033	0					
ANR	718670	PrimaryExpression	2		718033	1					
ANR	718671	CompoundStatement		88:27:2616:2616	718033	1					
ANR	718672	ExpressionStatement	cmd [ 2 ] = ' '	3046:6:86496:86508	718033	0	True				
ANR	718673	AssignmentExpression	cmd [ 2 ] = ' '		718033	0		=			
ANR	718674	ArrayIndexing	cmd [ 2 ]		718033	0					
ANR	718675	Identifier	cmd		718033	0					
ANR	718676	PrimaryExpression	2		718033	1					
ANR	718677	PrimaryExpression	' '		718033	1					
ANR	718678	IdentifierDeclStatement	"char * eq = ( char * ) r_str_rchr ( cmd , NULL , '=' ) ;"	3048:5:86522:86568	718033	2	True				
ANR	718679	IdentifierDecl	"* eq = ( char * ) r_str_rchr ( cmd , NULL , '=' )"		718033	0					
ANR	718680	IdentifierDeclType	char *		718033	0					
ANR	718681	Identifier	eq		718033	1					
ANR	718682	AssignmentExpression	"* eq = ( char * ) r_str_rchr ( cmd , NULL , '=' )"		718033	2		=			
ANR	718683	Identifier	eq		718033	0					
ANR	718684	CastExpression	"( char * ) r_str_rchr ( cmd , NULL , '=' )"		718033	1					
ANR	718685	CastTarget	char *		718033	0					
ANR	718686	CallExpression	"r_str_rchr ( cmd , NULL , '=' )"		718033	1					
ANR	718687	Callee	r_str_rchr		718033	0					
ANR	718688	Identifier	r_str_rchr		718033	0					
ANR	718689	ArgumentList	cmd		718033	1					
ANR	718690	Argument	cmd		718033	0					
ANR	718691	Identifier	cmd		718033	0					
ANR	718692	Argument	NULL		718033	1					
ANR	718693	Identifier	NULL		718033	0					
ANR	718694	Argument	'='		718033	2					
ANR	718695	PrimaryExpression	'='		718033	0					
ANR	718696	IfStatement	if ( eq && eq != cmd )		718033	3					
ANR	718697	Condition	eq && eq != cmd	3049:9:86579:86593	718033	0	True				
ANR	718698	AndExpression	eq && eq != cmd		718033	0		&&			
ANR	718699	Identifier	eq		718033	0					
ANR	718700	EqualityExpression	eq != cmd		718033	1		!=			
ANR	718701	Identifier	eq		718033	0					
ANR	718702	Identifier	cmd		718033	1					
ANR	718703	CompoundStatement		92:26:2724:2724	718033	1					
ANR	718704	ExpressionStatement	eq [ - 1 ] = eq [ 1 ] = ' '	3050:6:86604:86624	718033	0	True				
ANR	718705	AssignmentExpression	eq [ - 1 ] = eq [ 1 ] = ' '		718033	0		=			
ANR	718706	ArrayIndexing	eq [ - 1 ]		718033	0					
ANR	718707	Identifier	eq		718033	0					
ANR	718708	UnaryOperationExpression	- 1		718033	1					
ANR	718709	UnaryOperator	-		718033	0					
ANR	718710	PrimaryExpression	1		718033	1					
ANR	718711	AssignmentExpression	eq [ 1 ] = ' '		718033	1		=			
ANR	718712	ArrayIndexing	eq [ 1 ]		718033	0					
ANR	718713	Identifier	eq		718033	0					
ANR	718714	PrimaryExpression	1		718033	1					
ANR	718715	PrimaryExpression	' '		718033	1					
ANR	718716	ExpressionStatement	"r_str_replace_char ( cmd , '\\n' , 0 )"	3052:5:86638:86671	718033	4	True				
ANR	718717	CallExpression	"r_str_replace_char ( cmd , '\\n' , 0 )"		718033	0					
ANR	718718	Callee	r_str_replace_char		718033	0					
ANR	718719	Identifier	r_str_replace_char		718033	0					
ANR	718720	ArgumentList	cmd		718033	1					
ANR	718721	Argument	cmd		718033	0					
ANR	718722	Identifier	cmd		718033	0					
ANR	718723	Argument	'\\n'		718033	1					
ANR	718724	PrimaryExpression	'\\n'		718033	0					
ANR	718725	Argument	0		718033	2					
ANR	718726	PrimaryExpression	0		718033	0					
ANR	718727	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , cmd )"	3053:5:86678:86705	718033	5	True				
ANR	718728	CallExpression	"r_cons_printf ( ""%s\\n"" , cmd )"		718033	0					
ANR	718729	Callee	r_cons_printf		718033	0					
ANR	718730	Identifier	r_cons_printf		718033	0					
ANR	718731	ArgumentList	"""%s\\n"""		718033	1					
ANR	718732	Argument	"""%s\\n"""		718033	0					
ANR	718733	PrimaryExpression	"""%s\\n"""		718033	0					
ANR	718734	Argument	cmd		718033	1					
ANR	718735	Identifier	cmd		718033	0					
ANR	718736	ExpressionStatement	free ( cmd )	3054:5:86712:86722	718033	6	True				
ANR	718737	CallExpression	free ( cmd )		718033	0					
ANR	718738	Callee	free		718033	0					
ANR	718739	Identifier	free		718033	0					
ANR	718740	ArgumentList	cmd		718033	1					
ANR	718741	Argument	cmd		718033	0					
ANR	718742	Identifier	cmd		718033	0					
ANR	718743	ExpressionStatement	R_FREE ( mflags )	3056:4:86734:86749	718033	25	True				
ANR	718744	CallExpression	R_FREE ( mflags )		718033	0					
ANR	718745	Callee	R_FREE		718033	0					
ANR	718746	Identifier	R_FREE		718033	0					
ANR	718747	ArgumentList	mflags		718033	1					
ANR	718748	Argument	mflags		718033	0					
ANR	718749	Identifier	mflags		718033	0					
ANR	718750	ElseStatement	else		718033	0					
ANR	718751	IfStatement	if ( IS_MODE_JSON ( mode ) )		718033	0					
ANR	718752	Condition	IS_MODE_JSON ( mode )	3058:13:86769:86787	718033	0	True				
ANR	718753	CallExpression	IS_MODE_JSON ( mode )		718033	0					
ANR	718754	Callee	IS_MODE_JSON		718033	0					
ANR	718755	Identifier	IS_MODE_JSON		718033	0					
ANR	718756	ArgumentList	mode		718033	1					
ANR	718757	Argument	mode		718033	0					
ANR	718758	Identifier	mode		718033	0					
ANR	718759	CompoundStatement		101:34:2918:2918	718033	1					
ANR	718760	IfStatement	if ( c -> super )		718033	0					
ANR	718761	Condition	c -> super	3059:7:86799:86806	718033	0	True				
ANR	718762	PtrMemberAccess	c -> super		718033	0					
ANR	718763	Identifier	c		718033	0					
ANR	718764	Identifier	super		718033	1					
ANR	718765	CompoundStatement		102:17:2937:2937	718033	1					
ANR	718766	Statement	r_cons_printf	3060:4:86815:86827	718033	0	True				
ANR	718767	Statement	(	3060:18:86829:86829	718033	1	True				
ANR	718768	Statement	"""%s{\\""classname\\"":\\""%s\\"",\\""addr\\"":%"""	3060:19:86830:86865	718033	2	True				
ANR	718769	Statement	PFMT64d	3060:55:86866:86872	718033	3	True				
ANR	718770	Statement	""",\\""index\\"":%d,\\""visibility\\"":\\""%s\\"",\\""super\\"":\\""%s\\"",\\""methods\\"":["""	3060:62:86873:86940	718033	4	True				
ANR	718771	Statement	","	3060:130:86941:86941	718033	5	True				
ANR	718772	Statement	iter	3061:5:86948:86951	718033	6	True				
ANR	718773	Statement	->	3061:9:86952:86953	718033	7	True				
ANR	718774	Statement	p	3061:11:86954:86954	718033	8	True				
ANR	718775	Statement	?	3061:13:86956:86956	718033	9	True				
ANR	718776	Statement	""","""	3061:15:86958:86960	718033	10	True				
ANR	718777	Statement	:	3061:19:86962:86962	718033	11	True				
ANR	718778	Statement	""""""	3061:21:86964:86965	718033	12	True				
ANR	718779	Statement	","	3061:23:86966:86966	718033	13	True				
ANR	718780	Statement	c	3061:25:86968:86968	718033	14	True				
ANR	718781	Statement	->	3061:26:86969:86970	718033	15	True				
ANR	718782	Statement	name	3061:28:86971:86974	718033	16	True				
ANR	718783	Statement	","	3061:32:86975:86975	718033	17	True				
ANR	718784	Statement	c	3061:34:86977:86977	718033	18	True				
ANR	718785	Statement	->	3061:35:86978:86979	718033	19	True				
ANR	718786	Statement	addr	3061:37:86980:86983	718033	20	True				
ANR	718787	Statement	","	3061:41:86984:86984	718033	21	True				
ANR	718788	Statement	c	3062:5:86991:86991	718033	22	True				
ANR	718789	Statement	->	3062:6:86992:86993	718033	23	True				
ANR	718790	Statement	index	3062:8:86994:86998	718033	24	True				
ANR	718791	Statement	","	3062:13:86999:86999	718033	25	True				
ANR	718792	Statement	c	3062:15:87001:87001	718033	26	True				
ANR	718793	Statement	->	3062:16:87002:87003	718033	27	True				
ANR	718794	Statement	visibility_str	3062:18:87004:87017	718033	28	True				
ANR	718795	Statement	?	3062:32:87018:87018	718033	29	True				
ANR	718796	Statement	c	3062:34:87020:87020	718033	30	True				
ANR	718797	Statement	->	3062:35:87021:87022	718033	31	True				
ANR	718798	Label	visibility_str :	3062:37:87023:87037	718033	32	True				
ANR	718799	Identifier	visibility_str		718033	0					
ANR	718800	Statement	""""""	3062:53:87039:87040	718033	33	True				
ANR	718801	Statement	","	3062:55:87041:87041	718033	34	True				
ANR	718802	Statement	c	3062:57:87043:87043	718033	35	True				
ANR	718803	Statement	->	3062:58:87044:87045	718033	36	True				
ANR	718804	Statement	super	3062:60:87046:87050	718033	37	True				
ANR	718805	Statement	)	3062:65:87051:87051	718033	38	True				
ANR	718806	ExpressionStatement		3062:66:87052:87052	718033	39	True				
ANR	718807	ElseStatement	else		718033	0					
ANR	718808	CompoundStatement		106:10:3192:3192	718033	0					
ANR	718809	Statement	r_cons_printf	3064:4:87070:87082	718033	0	True				
ANR	718810	Statement	(	3064:18:87084:87084	718033	1	True				
ANR	718811	Statement	"""%s{\\""classname\\"":\\""%s\\"",\\""addr\\"":%"""	3064:19:87085:87120	718033	2	True				
ANR	718812	Statement	PFMT64d	3064:55:87121:87127	718033	3	True				
ANR	718813	Statement	""",\\""index\\"":%d,\\""methods\\"":["""	3064:62:87128:87156	718033	4	True				
ANR	718814	Statement	","	3064:91:87157:87157	718033	5	True				
ANR	718815	Statement	iter	3065:5:87164:87167	718033	6	True				
ANR	718816	Statement	->	3065:9:87168:87169	718033	7	True				
ANR	718817	Statement	p	3065:11:87170:87170	718033	8	True				
ANR	718818	Statement	?	3065:13:87172:87172	718033	9	True				
ANR	718819	Statement	""","""	3065:15:87174:87176	718033	10	True				
ANR	718820	Statement	:	3065:19:87178:87178	718033	11	True				
ANR	718821	Statement	""""""	3065:21:87180:87181	718033	12	True				
ANR	718822	Statement	","	3065:23:87182:87182	718033	13	True				
ANR	718823	Statement	c	3065:25:87184:87184	718033	14	True				
ANR	718824	Statement	->	3065:26:87185:87186	718033	15	True				
ANR	718825	Statement	name	3065:28:87187:87190	718033	16	True				
ANR	718826	Statement	","	3065:32:87191:87191	718033	17	True				
ANR	718827	Statement	c	3065:34:87193:87193	718033	18	True				
ANR	718828	Statement	->	3065:35:87194:87195	718033	19	True				
ANR	718829	Statement	addr	3065:37:87196:87199	718033	20	True				
ANR	718830	Statement	","	3065:41:87200:87200	718033	21	True				
ANR	718831	Statement	c	3066:5:87207:87207	718033	22	True				
ANR	718832	Statement	->	3066:6:87208:87209	718033	23	True				
ANR	718833	Statement	index	3066:8:87210:87214	718033	24	True				
ANR	718834	Statement	)	3066:13:87215:87215	718033	25	True				
ANR	718835	ExpressionStatement		3066:14:87216:87216	718033	26	True				
ANR	718836	Statement	r_list_foreach	3068:3:87226:87239	718033	1	True				
ANR	718837	Statement	(	3068:18:87241:87241	718033	2	True				
ANR	718838	Statement	c	3068:19:87242:87242	718033	3	True				
ANR	718839	Statement	->	3068:20:87243:87244	718033	4	True				
ANR	718840	Statement	methods	3068:22:87245:87251	718033	5	True				
ANR	718841	Statement	","	3068:29:87252:87252	718033	6	True				
ANR	718842	Statement	iter2	3068:31:87254:87258	718033	7	True				
ANR	718843	Statement	","	3068:36:87259:87259	718033	8	True				
ANR	718844	Statement	sym	3068:38:87261:87263	718033	9	True				
ANR	718845	Statement	)	3068:41:87264:87264	718033	10	True				
ANR	718846	CompoundStatement		111:43:3394:3394	718033	11					
ANR	718847	IfStatement	if ( sym -> method_flags )		718033	0					
ANR	718848	Condition	sym -> method_flags	3069:8:87276:87292	718033	0	True				
ANR	718849	PtrMemberAccess	sym -> method_flags		718033	0					
ANR	718850	Identifier	sym		718033	0					
ANR	718851	Identifier	method_flags		718033	1					
ANR	718852	CompoundStatement		113:5:3430:3498	718033	1					
ANR	718853	IdentifierDeclStatement	"char * mflags = r_core_bin_method_flags_str ( sym -> method_flags , mode ) ;"	3070:5:87302:87370	718033	0	True				
ANR	718854	IdentifierDecl	"* mflags = r_core_bin_method_flags_str ( sym -> method_flags , mode )"		718033	0					
ANR	718855	IdentifierDeclType	char *		718033	0					
ANR	718856	Identifier	mflags		718033	1					
ANR	718857	AssignmentExpression	"* mflags = r_core_bin_method_flags_str ( sym -> method_flags , mode )"		718033	2		=			
ANR	718858	Identifier	mflags		718033	0					
ANR	718859	CallExpression	"r_core_bin_method_flags_str ( sym -> method_flags , mode )"		718033	1					
ANR	718860	Callee	r_core_bin_method_flags_str		718033	0					
ANR	718861	Identifier	r_core_bin_method_flags_str		718033	0					
ANR	718862	ArgumentList	sym -> method_flags		718033	1					
ANR	718863	Argument	sym -> method_flags		718033	0					
ANR	718864	PtrMemberAccess	sym -> method_flags		718033	0					
ANR	718865	Identifier	sym		718033	0					
ANR	718866	Identifier	method_flags		718033	1					
ANR	718867	Argument	mode		718033	1					
ANR	718868	Identifier	mode		718033	0					
ANR	718869	Statement	r_cons_printf	3071:5:87377:87389	718033	1	True				
ANR	718870	Statement	(	3071:19:87391:87391	718033	2	True				
ANR	718871	Statement	"""%s{\\""name\\"":\\""%s\\"",\\""flags\\"":%s,\\""addr\\"":%"""	3071:20:87392:87435	718033	3	True				
ANR	718872	Statement	PFMT64d	3071:64:87436:87442	718033	4	True				
ANR	718873	Statement	"""}"""	3071:71:87443:87445	718033	5	True				
ANR	718874	Statement	","	3071:74:87446:87446	718033	6	True				
ANR	718875	Statement	iter2	3072:6:87454:87458	718033	7	True				
ANR	718876	Statement	->	3072:11:87459:87460	718033	8	True				
ANR	718877	Statement	p	3072:13:87461:87461	718033	9	True				
ANR	718878	Statement	?	3072:14:87462:87462	718033	10	True				
ANR	718879	Statement	""","""	3072:16:87464:87466	718033	11	True				
ANR	718880	Statement	:	3072:19:87467:87467	718033	12	True				
ANR	718881	Statement	""""""	3072:21:87469:87470	718033	13	True				
ANR	718882	Statement	","	3072:23:87471:87471	718033	14	True				
ANR	718883	Statement	sym	3072:25:87473:87475	718033	15	True				
ANR	718884	Statement	->	3072:28:87476:87477	718033	16	True				
ANR	718885	Statement	name	3072:30:87478:87481	718033	17	True				
ANR	718886	Statement	","	3072:34:87482:87482	718033	18	True				
ANR	718887	Statement	mflags	3072:36:87484:87489	718033	19	True				
ANR	718888	Statement	","	3072:42:87490:87490	718033	20	True				
ANR	718889	Statement	sym	3072:44:87492:87494	718033	21	True				
ANR	718890	Statement	->	3072:47:87495:87496	718033	22	True				
ANR	718891	Statement	vaddr	3072:49:87497:87501	718033	23	True				
ANR	718892	Statement	)	3072:54:87502:87502	718033	24	True				
ANR	718893	ExpressionStatement		3072:55:87503:87503	718033	25	True				
ANR	718894	ExpressionStatement	R_FREE ( mflags )	3073:5:87510:87525	718033	26	True				
ANR	718895	CallExpression	R_FREE ( mflags )		718033	0					
ANR	718896	Callee	R_FREE		718033	0					
ANR	718897	Identifier	R_FREE		718033	0					
ANR	718898	ArgumentList	mflags		718033	1					
ANR	718899	Argument	mflags		718033	0					
ANR	718900	Identifier	mflags		718033	0					
ANR	718901	ElseStatement	else		718033	0					
ANR	718902	CompoundStatement		117:11:3666:3666	718033	0					
ANR	718903	Statement	r_cons_printf	3075:5:87545:87557	718033	0	True				
ANR	718904	Statement	(	3075:19:87559:87559	718033	1	True				
ANR	718905	Statement	"""%s{\\""name\\"":\\""%s\\"",\\""addr\\"":%"""	3075:20:87560:87590	718033	2	True				
ANR	718906	Statement	PFMT64d	3075:51:87591:87597	718033	3	True				
ANR	718907	Statement	"""}"""	3075:58:87598:87600	718033	4	True				
ANR	718908	Statement	","	3075:61:87601:87601	718033	5	True				
ANR	718909	Statement	iter2	3076:6:87609:87613	718033	6	True				
ANR	718910	Statement	->	3076:11:87614:87615	718033	7	True				
ANR	718911	Statement	p	3076:13:87616:87616	718033	8	True				
ANR	718912	Statement	?	3076:14:87617:87617	718033	9	True				
ANR	718913	Statement	""","""	3076:16:87619:87621	718033	10	True				
ANR	718914	Statement	:	3076:19:87622:87622	718033	11	True				
ANR	718915	Statement	""""""	3076:21:87624:87625	718033	12	True				
ANR	718916	Statement	","	3076:23:87626:87626	718033	13	True				
ANR	718917	Statement	sym	3076:25:87628:87630	718033	14	True				
ANR	718918	Statement	->	3076:28:87631:87632	718033	15	True				
ANR	718919	Statement	name	3076:30:87633:87636	718033	16	True				
ANR	718920	Statement	","	3076:34:87637:87637	718033	17	True				
ANR	718921	Statement	sym	3076:36:87639:87641	718033	18	True				
ANR	718922	Statement	->	3076:39:87642:87643	718033	19	True				
ANR	718923	Statement	vaddr	3076:41:87644:87648	718033	20	True				
ANR	718924	Statement	)	3076:46:87649:87649	718033	21	True				
ANR	718925	ExpressionStatement		3076:47:87650:87650	718033	22	True				
ANR	718926	ExpressionStatement	"r_cons_printf ( ""], \\""fields\\"":["" )"	3079:3:87666:87699	718033	12	True				
ANR	718927	CallExpression	"r_cons_printf ( ""], \\""fields\\"":["" )"		718033	0					
ANR	718928	Callee	r_cons_printf		718033	0					
ANR	718929	Identifier	r_cons_printf		718033	0					
ANR	718930	ArgumentList	"""], \\""fields\\"":["""		718033	1					
ANR	718931	Argument	"""], \\""fields\\"":["""		718033	0					
ANR	718932	PrimaryExpression	"""], \\""fields\\"":["""		718033	0					
ANR	718933	Statement	r_list_foreach	3080:3:87704:87717	718033	13	True				
ANR	718934	Statement	(	3080:18:87719:87719	718033	14	True				
ANR	718935	Statement	c	3080:19:87720:87720	718033	15	True				
ANR	718936	Statement	->	3080:20:87721:87722	718033	16	True				
ANR	718937	Statement	fields	3080:22:87723:87728	718033	17	True				
ANR	718938	Statement	","	3080:28:87729:87729	718033	18	True				
ANR	718939	Statement	iter3	3080:30:87731:87735	718033	19	True				
ANR	718940	Statement	","	3080:35:87736:87736	718033	20	True				
ANR	718941	Statement	f	3080:37:87738:87738	718033	21	True				
ANR	718942	Statement	)	3080:38:87739:87739	718033	22	True				
ANR	718943	CompoundStatement		123:40:3869:3869	718033	23					
ANR	718944	IfStatement	if ( f -> flags )		718033	0					
ANR	718945	Condition	f -> flags	3081:8:87751:87758	718033	0	True				
ANR	718946	PtrMemberAccess	f -> flags		718033	0					
ANR	718947	Identifier	f		718033	0					
ANR	718948	Identifier	flags		718033	1					
ANR	718949	CompoundStatement		125:5:3896:3955	718033	1					
ANR	718950	IdentifierDeclStatement	"char * mflags = r_core_bin_method_flags_str ( f -> flags , mode ) ;"	3082:5:87768:87827	718033	0	True				
ANR	718951	IdentifierDecl	"* mflags = r_core_bin_method_flags_str ( f -> flags , mode )"		718033	0					
ANR	718952	IdentifierDeclType	char *		718033	0					
ANR	718953	Identifier	mflags		718033	1					
ANR	718954	AssignmentExpression	"* mflags = r_core_bin_method_flags_str ( f -> flags , mode )"		718033	2		=			
ANR	718955	Identifier	mflags		718033	0					
ANR	718956	CallExpression	"r_core_bin_method_flags_str ( f -> flags , mode )"		718033	1					
ANR	718957	Callee	r_core_bin_method_flags_str		718033	0					
ANR	718958	Identifier	r_core_bin_method_flags_str		718033	0					
ANR	718959	ArgumentList	f -> flags		718033	1					
ANR	718960	Argument	f -> flags		718033	0					
ANR	718961	PtrMemberAccess	f -> flags		718033	0					
ANR	718962	Identifier	f		718033	0					
ANR	718963	Identifier	flags		718033	1					
ANR	718964	Argument	mode		718033	1					
ANR	718965	Identifier	mode		718033	0					
ANR	718966	Statement	r_cons_printf	3083:5:87834:87846	718033	1	True				
ANR	718967	Statement	(	3083:19:87848:87848	718033	2	True				
ANR	718968	Statement	"""%s{\\""name\\"":\\""%s\\"",\\""flags\\"":%s,\\""addr\\"":%"""	3083:20:87849:87892	718033	3	True				
ANR	718969	Statement	PFMT64d	3083:64:87893:87899	718033	4	True				
ANR	718970	Statement	"""}"""	3083:71:87900:87902	718033	5	True				
ANR	718971	Statement	","	3083:74:87903:87903	718033	6	True				
ANR	718972	Statement	iter3	3084:6:87911:87915	718033	7	True				
ANR	718973	Statement	->	3084:11:87916:87917	718033	8	True				
ANR	718974	Statement	p	3084:13:87918:87918	718033	9	True				
ANR	718975	Statement	?	3084:14:87919:87919	718033	10	True				
ANR	718976	Statement	""","""	3084:16:87921:87923	718033	11	True				
ANR	718977	Statement	:	3084:19:87924:87924	718033	12	True				
ANR	718978	Statement	""""""	3084:21:87926:87927	718033	13	True				
ANR	718979	Statement	","	3084:23:87928:87928	718033	14	True				
ANR	718980	Statement	f	3084:25:87930:87930	718033	15	True				
ANR	718981	Statement	->	3084:26:87931:87932	718033	16	True				
ANR	718982	Statement	name	3084:28:87933:87936	718033	17	True				
ANR	718983	Statement	","	3084:32:87937:87937	718033	18	True				
ANR	718984	Statement	mflags	3084:34:87939:87944	718033	19	True				
ANR	718985	Statement	","	3084:40:87945:87945	718033	20	True				
ANR	718986	Statement	f	3084:42:87947:87947	718033	21	True				
ANR	718987	Statement	->	3084:43:87948:87949	718033	22	True				
ANR	718988	Statement	vaddr	3084:45:87950:87954	718033	23	True				
ANR	718989	Statement	)	3084:50:87955:87955	718033	24	True				
ANR	718990	ExpressionStatement		3084:51:87956:87956	718033	25	True				
ANR	718991	ExpressionStatement	R_FREE ( mflags )	3085:5:87963:87978	718033	26	True				
ANR	718992	CallExpression	R_FREE ( mflags )		718033	0					
ANR	718993	Callee	R_FREE		718033	0					
ANR	718994	Identifier	R_FREE		718033	0					
ANR	718995	ArgumentList	mflags		718033	1					
ANR	718996	Argument	mflags		718033	0					
ANR	718997	Identifier	mflags		718033	0					
ANR	718998	ElseStatement	else		718033	0					
ANR	718999	CompoundStatement		129:11:4119:4119	718033	0					
ANR	719000	Statement	r_cons_printf	3087:5:87998:88010	718033	0	True				
ANR	719001	Statement	(	3087:19:88012:88012	718033	1	True				
ANR	719002	Statement	"""%s{\\""name\\"":\\""%s\\"",\\""addr\\"":%"""	3087:20:88013:88043	718033	2	True				
ANR	719003	Statement	PFMT64d	3087:51:88044:88050	718033	3	True				
ANR	719004	Statement	"""}"""	3087:58:88051:88053	718033	4	True				
ANR	719005	Statement	","	3087:61:88054:88054	718033	5	True				
ANR	719006	Statement	iter3	3088:6:88062:88066	718033	6	True				
ANR	719007	Statement	->	3088:11:88067:88068	718033	7	True				
ANR	719008	Statement	p	3088:13:88069:88069	718033	8	True				
ANR	719009	Statement	?	3088:14:88070:88070	718033	9	True				
ANR	719010	Statement	""","""	3088:16:88072:88074	718033	10	True				
ANR	719011	Statement	:	3088:19:88075:88075	718033	11	True				
ANR	719012	Statement	""""""	3088:21:88077:88078	718033	12	True				
ANR	719013	Statement	","	3088:23:88079:88079	718033	13	True				
ANR	719014	Statement	f	3088:25:88081:88081	718033	14	True				
ANR	719015	Statement	->	3088:26:88082:88083	718033	15	True				
ANR	719016	Statement	name	3088:28:88084:88087	718033	16	True				
ANR	719017	Statement	","	3088:32:88088:88088	718033	17	True				
ANR	719018	Statement	f	3088:34:88090:88090	718033	18	True				
ANR	719019	Statement	->	3088:35:88091:88092	718033	19	True				
ANR	719020	Statement	vaddr	3088:37:88093:88097	718033	20	True				
ANR	719021	Statement	)	3088:42:88098:88098	718033	21	True				
ANR	719022	ExpressionStatement		3088:43:88099:88099	718033	22	True				
ANR	719023	ExpressionStatement	"r_cons_printf ( ""]}"" )"	3091:3:88115:88135	718033	24	True				
ANR	719024	CallExpression	"r_cons_printf ( ""]}"" )"		718033	0					
ANR	719025	Callee	r_cons_printf		718033	0					
ANR	719026	Identifier	r_cons_printf		718033	0					
ANR	719027	ArgumentList	"""]}"""		718033	1					
ANR	719028	Argument	"""]}"""		718033	0					
ANR	719029	PrimaryExpression	"""]}"""		718033	0					
ANR	719030	ElseStatement	else		718033	0					
ANR	719031	IfStatement	if ( IS_MODE_CLASSDUMP ( mode ) )		718033	0					
ANR	719032	Condition	IS_MODE_CLASSDUMP ( mode )	3092:13:88150:88173	718033	0	True				
ANR	719033	CallExpression	IS_MODE_CLASSDUMP ( mode )		718033	0					
ANR	719034	Callee	IS_MODE_CLASSDUMP		718033	0					
ANR	719035	Identifier	IS_MODE_CLASSDUMP		718033	0					
ANR	719036	ArgumentList	mode		718033	1					
ANR	719037	Argument	mode		718033	0					
ANR	719038	Identifier	mode		718033	0					
ANR	719039	CompoundStatement		135:39:4304:4304	718033	1					
ANR	719040	IfStatement	if ( c )		718033	0					
ANR	719041	Condition	c	3093:7:88185:88185	718033	0	True				
ANR	719042	Identifier	c		718033	0					
ANR	719043	CompoundStatement		137:4:4322:4355	718033	1					
ANR	719044	IdentifierDeclStatement	RBinFile * bf = r_bin_cur ( r -> bin ) ;	3094:4:88194:88227	718033	0	True				
ANR	719045	IdentifierDecl	* bf = r_bin_cur ( r -> bin )		718033	0					
ANR	719046	IdentifierDeclType	RBinFile *		718033	0					
ANR	719047	Identifier	bf		718033	1					
ANR	719048	AssignmentExpression	* bf = r_bin_cur ( r -> bin )		718033	2		=			
ANR	719049	Identifier	bf		718033	0					
ANR	719050	CallExpression	r_bin_cur ( r -> bin )		718033	1					
ANR	719051	Callee	r_bin_cur		718033	0					
ANR	719052	Identifier	r_bin_cur		718033	0					
ANR	719053	ArgumentList	r -> bin		718033	1					
ANR	719054	Argument	r -> bin		718033	0					
ANR	719055	PtrMemberAccess	r -> bin		718033	0					
ANR	719056	Identifier	r		718033	0					
ANR	719057	Identifier	bin		718033	1					
ANR	719058	IfStatement	if ( bf && bf -> o )		718033	1					
ANR	719059	Condition	bf && bf -> o	3095:8:88237:88247	718033	0	True				
ANR	719060	AndExpression	bf && bf -> o		718033	0		&&			
ANR	719061	Identifier	bf		718033	0					
ANR	719062	PtrMemberAccess	bf -> o		718033	1					
ANR	719063	Identifier	bf		718033	0					
ANR	719064	Identifier	o		718033	1					
ANR	719065	CompoundStatement		138:21:4378:4378	718033	1					
ANR	719066	IfStatement	"if ( bf -> o -> lang == R_BIN_NM_JAVA || ( bf -> o -> info && bf -> o -> info -> lang && strstr ( bf -> o -> info -> lang , ""dalvik"" ) ) )"		718033	0					
ANR	719067	Condition	"bf -> o -> lang == R_BIN_NM_JAVA || ( bf -> o -> info && bf -> o -> info -> lang && strstr ( bf -> o -> info -> lang , ""dalvik"" ) )"	3096:9:88261:88366	718033	0	True				
ANR	719068	OrExpression	"bf -> o -> lang == R_BIN_NM_JAVA || ( bf -> o -> info && bf -> o -> info -> lang && strstr ( bf -> o -> info -> lang , ""dalvik"" ) )"		718033	0		||			
ANR	719069	EqualityExpression	bf -> o -> lang == R_BIN_NM_JAVA		718033	0		==			
ANR	719070	PtrMemberAccess	bf -> o -> lang		718033	0					
ANR	719071	PtrMemberAccess	bf -> o		718033	0					
ANR	719072	Identifier	bf		718033	0					
ANR	719073	Identifier	o		718033	1					
ANR	719074	Identifier	lang		718033	1					
ANR	719075	Identifier	R_BIN_NM_JAVA		718033	1					
ANR	719076	AndExpression	"bf -> o -> info && bf -> o -> info -> lang && strstr ( bf -> o -> info -> lang , ""dalvik"" )"		718033	1		&&			
ANR	719077	PtrMemberAccess	bf -> o -> info		718033	0					
ANR	719078	PtrMemberAccess	bf -> o		718033	0					
ANR	719079	Identifier	bf		718033	0					
ANR	719080	Identifier	o		718033	1					
ANR	719081	Identifier	info		718033	1					
ANR	719082	AndExpression	"bf -> o -> info -> lang && strstr ( bf -> o -> info -> lang , ""dalvik"" )"		718033	1		&&			
ANR	719083	PtrMemberAccess	bf -> o -> info -> lang		718033	0					
ANR	719084	PtrMemberAccess	bf -> o -> info		718033	0					
ANR	719085	PtrMemberAccess	bf -> o		718033	0					
ANR	719086	Identifier	bf		718033	0					
ANR	719087	Identifier	o		718033	1					
ANR	719088	Identifier	info		718033	1					
ANR	719089	Identifier	lang		718033	1					
ANR	719090	CallExpression	"strstr ( bf -> o -> info -> lang , ""dalvik"" )"		718033	1					
ANR	719091	Callee	strstr		718033	0					
ANR	719092	Identifier	strstr		718033	0					
ANR	719093	ArgumentList	bf -> o -> info -> lang		718033	1					
ANR	719094	Argument	bf -> o -> info -> lang		718033	0					
ANR	719095	PtrMemberAccess	bf -> o -> info -> lang		718033	0					
ANR	719096	PtrMemberAccess	bf -> o -> info		718033	0					
ANR	719097	PtrMemberAccess	bf -> o		718033	0					
ANR	719098	Identifier	bf		718033	0					
ANR	719099	Identifier	o		718033	1					
ANR	719100	Identifier	info		718033	1					
ANR	719101	Identifier	lang		718033	1					
ANR	719102	Argument	"""dalvik"""		718033	1					
ANR	719103	PrimaryExpression	"""dalvik"""		718033	0					
ANR	719104	CompoundStatement		139:117:4497:4497	718033	1					
ANR	719105	ExpressionStatement	"classdump_java ( r , c )"	3097:6:88377:88398	718033	0	True				
ANR	719106	CallExpression	"classdump_java ( r , c )"		718033	0					
ANR	719107	Callee	classdump_java		718033	0					
ANR	719108	Identifier	classdump_java		718033	0					
ANR	719109	ArgumentList	r		718033	1					
ANR	719110	Argument	r		718033	0					
ANR	719111	Identifier	r		718033	0					
ANR	719112	Argument	c		718033	1					
ANR	719113	Identifier	c		718033	0					
ANR	719114	ElseStatement	else		718033	0					
ANR	719115	CompoundStatement		141:12:4540:4540	718033	0					
ANR	719116	ExpressionStatement	"classdump_objc ( r , c )"	3099:6:88420:88441	718033	0	True				
ANR	719117	CallExpression	"classdump_objc ( r , c )"		718033	0					
ANR	719118	Callee	classdump_objc		718033	0					
ANR	719119	Identifier	classdump_objc		718033	0					
ANR	719120	ArgumentList	r		718033	1					
ANR	719121	Argument	r		718033	0					
ANR	719122	Identifier	r		718033	0					
ANR	719123	Argument	c		718033	1					
ANR	719124	Identifier	c		718033	0					
ANR	719125	ElseStatement	else		718033	0					
ANR	719126	CompoundStatement		144:11:4589:4589	718033	0					
ANR	719127	ExpressionStatement	"classdump_objc ( r , c )"	3102:5:88468:88489	718033	0	True				
ANR	719128	CallExpression	"classdump_objc ( r , c )"		718033	0					
ANR	719129	Callee	classdump_objc		718033	0					
ANR	719130	Identifier	classdump_objc		718033	0					
ANR	719131	ArgumentList	r		718033	1					
ANR	719132	Argument	r		718033	0					
ANR	719133	Identifier	r		718033	0					
ANR	719134	Argument	c		718033	1					
ANR	719135	Identifier	c		718033	0					
ANR	719136	ElseStatement	else		718033	0					
ANR	719137	CompoundStatement		149:3:4644:4653	718033	0					
ANR	719138	IdentifierDeclStatement	int m = 0 ;	3106:3:88516:88525	718033	0	True				
ANR	719139	IdentifierDecl	m = 0		718033	0					
ANR	719140	IdentifierDeclType	int		718033	0					
ANR	719141	Identifier	m		718033	1					
ANR	719142	AssignmentExpression	m = 0		718033	2		=			
ANR	719143	Identifier	m		718033	0					
ANR	719144	PrimaryExpression	0		718033	1					
ANR	719145	Statement	r_cons_printf	3107:3:88530:88542	718033	1	True				
ANR	719146	Statement	(	3107:17:88544:88544	718033	2	True				
ANR	719147	Statement	"""0x%08"""	3107:18:88545:88551	718033	3	True				
ANR	719148	Statement	PFMT64x	3107:25:88552:88558	718033	4	True				
ANR	719149	Statement	""" [0x%08"""	3107:32:88559:88567	718033	5	True				
ANR	719150	Statement	PFMT64x	3107:41:88568:88574	718033	6	True				
ANR	719151	Statement	""" - 0x%08"""	3107:48:88575:88584	718033	7	True				
ANR	719152	Statement	PFMT64x	3107:58:88585:88591	718033	8	True				
ANR	719153	Statement	"""] %6"""	3107:65:88592:88597	718033	9	True				
ANR	719154	Statement	PFMT64d	3107:71:88598:88604	718033	10	True				
ANR	719155	Statement	""" class %d %s"""	3107:78:88605:88618	718033	11	True				
ANR	719156	Statement	","	3107:92:88619:88619	718033	12	True				
ANR	719157	Statement	c	3108:4:88625:88625	718033	13	True				
ANR	719158	Statement	->	3108:5:88626:88627	718033	14	True				
ANR	719159	Statement	addr	3108:7:88628:88631	718033	15	True				
ANR	719160	Statement	","	3108:11:88632:88632	718033	16	True				
ANR	719161	Statement	at_min	3108:13:88634:88639	718033	17	True				
ANR	719162	Statement	","	3108:19:88640:88640	718033	18	True				
ANR	719163	Statement	at_max	3108:21:88642:88647	718033	19	True				
ANR	719164	Statement	","	3108:27:88648:88648	718033	20	True				
ANR	719165	Statement	(	3108:29:88650:88650	718033	21	True				
ANR	719166	Statement	at_max	3108:30:88651:88656	718033	22	True				
ANR	719167	Statement	-	3108:37:88658:88658	718033	23	True				
ANR	719168	Statement	at_min	3108:39:88660:88665	718033	24	True				
ANR	719169	Statement	)	3108:45:88666:88666	718033	25	True				
ANR	719170	Statement	","	3108:46:88667:88667	718033	26	True				
ANR	719171	Statement	c	3108:48:88669:88669	718033	27	True				
ANR	719172	Statement	->	3108:49:88670:88671	718033	28	True				
ANR	719173	Statement	index	3108:51:88672:88676	718033	29	True				
ANR	719174	Statement	","	3108:56:88677:88677	718033	30	True				
ANR	719175	Statement	c	3108:58:88679:88679	718033	31	True				
ANR	719176	Statement	->	3108:59:88680:88681	718033	32	True				
ANR	719177	Statement	name	3108:61:88682:88685	718033	33	True				
ANR	719178	Statement	)	3108:65:88686:88686	718033	34	True				
ANR	719179	ExpressionStatement		3108:66:88687:88687	718033	35	True				
ANR	719180	IfStatement	if ( c -> super )		718033	36					
ANR	719181	Condition	c -> super	3109:7:88696:88703	718033	0	True				
ANR	719182	PtrMemberAccess	c -> super		718033	0					
ANR	719183	Identifier	c		718033	0					
ANR	719184	Identifier	super		718033	1					
ANR	719185	CompoundStatement		152:17:4834:4834	718033	1					
ANR	719186	ExpressionStatement	"r_cons_printf ( "" :: %s\\n"" , c -> super )"	3110:4:88712:88748	718033	0	True				
ANR	719187	CallExpression	"r_cons_printf ( "" :: %s\\n"" , c -> super )"		718033	0					
ANR	719188	Callee	r_cons_printf		718033	0					
ANR	719189	Identifier	r_cons_printf		718033	0					
ANR	719190	ArgumentList	""" :: %s\\n"""		718033	1					
ANR	719191	Argument	""" :: %s\\n"""		718033	0					
ANR	719192	PrimaryExpression	""" :: %s\\n"""		718033	0					
ANR	719193	Argument	c -> super		718033	1					
ANR	719194	PtrMemberAccess	c -> super		718033	0					
ANR	719195	Identifier	c		718033	0					
ANR	719196	Identifier	super		718033	1					
ANR	719197	ElseStatement	else		718033	0					
ANR	719198	CompoundStatement		154:10:4888:4888	718033	0					
ANR	719199	ExpressionStatement	r_cons_newline ( )	3112:4:88766:88783	718033	0	True				
ANR	719200	CallExpression	r_cons_newline ( )		718033	0					
ANR	719201	Callee	r_cons_newline		718033	0					
ANR	719202	Identifier	r_cons_newline		718033	0					
ANR	719203	ArgumentList			718033	1					
ANR	719204	Statement	r_list_foreach	3114:3:88793:88806	718033	37	True				
ANR	719205	Statement	(	3114:18:88808:88808	718033	38	True				
ANR	719206	Statement	c	3114:19:88809:88809	718033	39	True				
ANR	719207	Statement	->	3114:20:88810:88811	718033	40	True				
ANR	719208	Statement	methods	3114:22:88812:88818	718033	41	True				
ANR	719209	Statement	","	3114:29:88819:88819	718033	42	True				
ANR	719210	Statement	iter2	3114:31:88821:88825	718033	43	True				
ANR	719211	Statement	","	3114:36:88826:88826	718033	44	True				
ANR	719212	Statement	sym	3114:38:88828:88830	718033	45	True				
ANR	719213	Statement	)	3114:41:88831:88831	718033	46	True				
ANR	719214	CompoundStatement		158:4:4967:5035	718033	47					
ANR	719215	IdentifierDeclStatement	"char * mflags = r_core_bin_method_flags_str ( sym -> method_flags , mode ) ;"	3115:4:88839:88907	718033	0	True				
ANR	719216	IdentifierDecl	"* mflags = r_core_bin_method_flags_str ( sym -> method_flags , mode )"		718033	0					
ANR	719217	IdentifierDeclType	char *		718033	0					
ANR	719218	Identifier	mflags		718033	1					
ANR	719219	AssignmentExpression	"* mflags = r_core_bin_method_flags_str ( sym -> method_flags , mode )"		718033	2		=			
ANR	719220	Identifier	mflags		718033	0					
ANR	719221	CallExpression	"r_core_bin_method_flags_str ( sym -> method_flags , mode )"		718033	1					
ANR	719222	Callee	r_core_bin_method_flags_str		718033	0					
ANR	719223	Identifier	r_core_bin_method_flags_str		718033	0					
ANR	719224	ArgumentList	sym -> method_flags		718033	1					
ANR	719225	Argument	sym -> method_flags		718033	0					
ANR	719226	PtrMemberAccess	sym -> method_flags		718033	0					
ANR	719227	Identifier	sym		718033	0					
ANR	719228	Identifier	method_flags		718033	1					
ANR	719229	Argument	mode		718033	1					
ANR	719230	Identifier	mode		718033	0					
ANR	719231	Statement	r_cons_printf	3116:4:88913:88925	718033	1	True				
ANR	719232	Statement	(	3116:18:88927:88927	718033	2	True				
ANR	719233	Statement	"""0x%08"""	3116:19:88928:88934	718033	3	True				
ANR	719234	Statement	PFMT64x	3116:26:88935:88941	718033	4	True				
ANR	719235	Statement	""" method %d %s %s\\n"""	3116:33:88942:88961	718033	5	True				
ANR	719236	Statement	","	3116:53:88962:88962	718033	6	True				
ANR	719237	Statement	sym	3117:5:88969:88971	718033	7	True				
ANR	719238	Statement	->	3117:8:88972:88973	718033	8	True				
ANR	719239	Statement	vaddr	3117:10:88974:88978	718033	9	True				
ANR	719240	Statement	","	3117:15:88979:88979	718033	10	True				
ANR	719241	Statement	m	3117:17:88981:88981	718033	11	True				
ANR	719242	Statement	","	3117:18:88982:88982	718033	12	True				
ANR	719243	Statement	mflags	3117:20:88984:88989	718033	13	True				
ANR	719244	Statement	","	3117:26:88990:88990	718033	14	True				
ANR	719245	Statement	sym	3117:28:88992:88994	718033	15	True				
ANR	719246	Statement	->	3117:31:88995:88996	718033	16	True				
ANR	719247	Statement	dname	3117:33:88997:89001	718033	17	True				
ANR	719248	Statement	?	3117:38:89002:89002	718033	18	True				
ANR	719249	Statement	sym	3117:40:89004:89006	718033	19	True				
ANR	719250	Statement	->	3117:43:89007:89008	718033	20	True				
ANR	719251	Label	dname :	3117:45:89009:89014	718033	21	True				
ANR	719252	Identifier	dname		718033	0					
ANR	719253	Statement	sym	3117:52:89016:89018	718033	22	True				
ANR	719254	Statement	->	3117:55:89019:89020	718033	23	True				
ANR	719255	Statement	name	3117:57:89021:89024	718033	24	True				
ANR	719256	Statement	)	3117:61:89025:89025	718033	25	True				
ANR	719257	ExpressionStatement		3117:62:89026:89026	718033	26	True				
ANR	719258	ExpressionStatement	R_FREE ( mflags )	3118:4:89032:89047	718033	27	True				
ANR	719259	CallExpression	R_FREE ( mflags )		718033	0					
ANR	719260	Callee	R_FREE		718033	0					
ANR	719261	Identifier	R_FREE		718033	0					
ANR	719262	ArgumentList	mflags		718033	1					
ANR	719263	Argument	mflags		718033	0					
ANR	719264	Identifier	mflags		718033	0					
ANR	719265	ExpressionStatement	m ++	3119:4:89053:89056	718033	28	True				
ANR	719266	PostIncDecOperationExpression	m ++		718033	0					
ANR	719267	Identifier	m		718033	0					
ANR	719268	IncDec	++		718033	1					
ANR	719269	ExpressionStatement	free ( name )	3122:2:89069:89080	718033	22	True				
ANR	719270	CallExpression	free ( name )		718033	0					
ANR	719271	Callee	free		718033	0					
ANR	719272	Identifier	free		718033	0					
ANR	719273	ArgumentList	name		718033	1					
ANR	719274	Argument	name		718033	0					
ANR	719275	Identifier	name		718033	0					
ANR	719276	IfStatement	if ( IS_MODE_JSON ( mode ) )		718033	17					
ANR	719277	Condition	IS_MODE_JSON ( mode )	3124:5:89090:89108	718033	0	True				
ANR	719278	CallExpression	IS_MODE_JSON ( mode )		718033	0					
ANR	719279	Callee	IS_MODE_JSON		718033	0					
ANR	719280	Identifier	IS_MODE_JSON		718033	0					
ANR	719281	ArgumentList	mode		718033	1					
ANR	719282	Argument	mode		718033	0					
ANR	719283	Identifier	mode		718033	0					
ANR	719284	CompoundStatement		167:26:5239:5239	718033	1					
ANR	719285	ExpressionStatement	"r_cons_print ( ""]"" )"	3125:2:89115:89133	718033	0	True				
ANR	719286	CallExpression	"r_cons_print ( ""]"" )"		718033	0					
ANR	719287	Callee	r_cons_print		718033	0					
ANR	719288	Identifier	r_cons_print		718033	0					
ANR	719289	ArgumentList	"""]"""		718033	1					
ANR	719290	Argument	"""]"""		718033	0					
ANR	719291	PrimaryExpression	"""]"""		718033	0					
ANR	719292	ReturnStatement	return true ;	3128:1:89140:89151	718033	18	True				
ANR	719293	Identifier	true		718033	0					
ANR	719294	ReturnType	static int		718033	1					
ANR	719295	Identifier	bin_classes		718033	2					
ANR	719296	ParameterList	"RCore * r , int mode"		718033	3					
ANR	719297	Parameter	RCore * r	2958:23:83851:83858	718033	0	True				
ANR	719298	ParameterType	RCore *		718033	0					
ANR	719299	Identifier	r		718033	1					
ANR	719300	Parameter	int mode	2958:33:83861:83868	718033	1	True				
ANR	719301	ParameterType	int		718033	0					
ANR	719302	Identifier	mode		718033	1					
ANR	719303	CFGEntryNode	ENTRY		718033		True				
ANR	719304	CFGExitNode	EXIT		718033		True				
ANR	719305	CFGErrorNode	ERROR		718033		True				
ANR	719306	Symbol	IS_MODE_CLASSDUMP		718033						
ANR	719307	Symbol	c -> name		718033						
ANR	719308	Symbol	IS_MODE_SIMPLE		718033						
ANR	719309	Symbol	mode		718033						
ANR	719310	Symbol	strlen		718033						
ANR	719311	Symbol	c -> addr		718033						
ANR	719312	Symbol	bf -> o		718033						
ANR	719313	Symbol	IS_MODE_SIMPLEST		718033						
ANR	719314	Symbol	c -> super		718033						
ANR	719315	Symbol	* cmd		718033						
ANR	719316	Symbol	c -> index		718033						
ANR	719317	Symbol	NULL		718033						
ANR	719318	Symbol	method		718033						
ANR	719319	Symbol	sym -> vaddr		718033						
ANR	719320	Symbol	* * c		718033						
ANR	719321	Symbol	r_bin_cur		718033						
ANR	719322	Symbol	iter		718033						
ANR	719323	Symbol	eq		718033						
ANR	719324	Symbol	* * bf -> o		718033						
ANR	719325	Symbol	bf -> o -> info		718033						
ANR	719326	Symbol	IS_MODE_SET		718033						
ANR	719327	Symbol	* sym		718033						
ANR	719328	Symbol	* * bf		718033						
ANR	719329	Symbol	strstr		718033						
ANR	719330	Symbol	r_config_get_i		718033						
ANR	719331	Symbol	sym -> name		718033						
ANR	719332	Symbol	name		718033						
ANR	719333	Symbol	true		718033						
ANR	719334	Symbol	cmd		718033						
ANR	719335	Symbol	R_BIN_NM_JAVA		718033						
ANR	719336	Symbol	f -> flags		718033						
ANR	719337	Symbol	r -> flags		718033						
ANR	719338	Symbol	bf		718033						
ANR	719339	Symbol	bf -> o -> info -> lang		718033						
ANR	719340	Symbol	sym		718033						
ANR	719341	Symbol	IS_MODE_JSON		718033						
ANR	719342	Symbol	at_max		718033						
ANR	719343	Symbol	sym -> size		718033						
ANR	719344	Symbol	* bf -> o		718033						
ANR	719345	Symbol	R_FLAGS_FS_CLASSES		718033						
ANR	719346	Symbol	at_min		718033						
ANR	719347	Symbol	r -> bin		718033						
ANR	719348	Symbol	sn		718033						
ANR	719349	Symbol	UT64_MAX		718033						
ANR	719350	Symbol	* * * bf		718033						
ANR	719351	Symbol	sdb_fmt		718033						
ANR	719352	Symbol	r_bin_get_classes		718033						
ANR	719353	Symbol	su		718033						
ANR	719354	Symbol	c		718033						
ANR	719355	Symbol	iter3		718033						
ANR	719356	Symbol	f		718033						
ANR	719357	Symbol	iter2		718033						
ANR	719358	Symbol	false		718033						
ANR	719359	Symbol	__filterShell		718033						
ANR	719360	Symbol	* bf		718033						
ANR	719361	Symbol	mflags		718033						
ANR	719362	Symbol	r_core_bin_method_flags_str		718033						
ANR	719363	Symbol	cn		718033						
ANR	719364	Symbol	* c -> name		718033						
ANR	719365	Symbol	bf -> o -> lang		718033						
ANR	719366	Symbol	* c		718033						
ANR	719367	Symbol	* bf -> o -> info		718033						
ANR	719368	Symbol	m		718033						
ANR	719369	Symbol	n		718033						
ANR	719370	Symbol	cs		718033						
ANR	719371	Symbol	* f		718033						
ANR	719372	Symbol	* eq		718033						
ANR	719373	Symbol	r		718033						
ANR	719374	Symbol	classname		718033						
ANR	719375	Symbol	sym -> method_flags		718033						
ANR	719376	Symbol	IS_MODE_RAD		718033						
ANR	719377	Symbol	r_str_rchr		718033						
ANR	719378	Symbol	strdup		718033						
ANR	719379	Symbol	* r		718033						
ANR	719380	Symbol	r -> config		718033						
ANR	719381	Function	bin_size	3131:0:89156:89571							
ANR	719382	FunctionDef	"bin_size (RCore * r , int mode)"		719381	0					
ANR	719383	CompoundStatement		3131:40:89196:89571	719381	0					
ANR	719384	IdentifierDeclStatement	ut64 size = r_bin_get_size ( r -> bin ) ;	3132:1:89199:89234	719381	0	True				
ANR	719385	IdentifierDecl	size = r_bin_get_size ( r -> bin )		719381	0					
ANR	719386	IdentifierDeclType	ut64		719381	0					
ANR	719387	Identifier	size		719381	1					
ANR	719388	AssignmentExpression	size = r_bin_get_size ( r -> bin )		719381	2		=			
ANR	719389	Identifier	size		719381	0					
ANR	719390	CallExpression	r_bin_get_size ( r -> bin )		719381	1					
ANR	719391	Callee	r_bin_get_size		719381	0					
ANR	719392	Identifier	r_bin_get_size		719381	0					
ANR	719393	ArgumentList	r -> bin		719381	1					
ANR	719394	Argument	r -> bin		719381	0					
ANR	719395	PtrMemberAccess	r -> bin		719381	0					
ANR	719396	Identifier	r		719381	0					
ANR	719397	Identifier	bin		719381	1					
ANR	719398	IfStatement	if ( IS_MODE_SIMPLE ( mode ) || IS_MODE_JSON ( mode ) )		719381	1					
ANR	719399	Condition	IS_MODE_SIMPLE ( mode ) || IS_MODE_JSON ( mode )	3133:5:89241:89284	719381	0	True				
ANR	719400	OrExpression	IS_MODE_SIMPLE ( mode ) || IS_MODE_JSON ( mode )		719381	0		||			
ANR	719401	CallExpression	IS_MODE_SIMPLE ( mode )		719381	0					
ANR	719402	Callee	IS_MODE_SIMPLE		719381	0					
ANR	719403	Identifier	IS_MODE_SIMPLE		719381	0					
ANR	719404	ArgumentList	mode		719381	1					
ANR	719405	Argument	mode		719381	0					
ANR	719406	Identifier	mode		719381	0					
ANR	719407	CallExpression	IS_MODE_JSON ( mode )		719381	1					
ANR	719408	Callee	IS_MODE_JSON		719381	0					
ANR	719409	Identifier	IS_MODE_JSON		719381	0					
ANR	719410	ArgumentList	mode		719381	1					
ANR	719411	Argument	mode		719381	0					
ANR	719412	Identifier	mode		719381	0					
ANR	719413	CompoundStatement		3:51:90:90	719381	1					
ANR	719414	Statement	r_cons_printf	3134:2:89291:89303	719381	0	True				
ANR	719415	Statement	(	3134:16:89305:89305	719381	1	True				
ANR	719416	Statement	"""%"""	3134:17:89306:89308	719381	2	True				
ANR	719417	Statement	PFMT64u	3134:20:89309:89315	719381	3	True				
ANR	719418	Statement	"""\\n"""	3134:27:89316:89319	719381	4	True				
ANR	719419	Statement	","	3134:31:89320:89320	719381	5	True				
ANR	719420	Statement	size	3134:33:89322:89325	719381	6	True				
ANR	719421	Statement	)	3134:37:89326:89326	719381	7	True				
ANR	719422	ExpressionStatement		3134:38:89327:89327	719381	8	True				
ANR	719423	ElseStatement	else		719381	0					
ANR	719424	IfStatement	if ( IS_MODE_RAD ( mode ) )		719381	0					
ANR	719425	Condition	IS_MODE_RAD ( mode )	3135:12:89341:89358	719381	0	True				
ANR	719426	CallExpression	IS_MODE_RAD ( mode )		719381	0					
ANR	719427	Callee	IS_MODE_RAD		719381	0					
ANR	719428	Identifier	IS_MODE_RAD		719381	0					
ANR	719429	ArgumentList	mode		719381	1					
ANR	719430	Argument	mode		719381	0					
ANR	719431	Identifier	mode		719381	0					
ANR	719432	CompoundStatement		5:32:164:164	719381	1					
ANR	719433	Statement	r_cons_printf	3136:2:89365:89377	719381	0	True				
ANR	719434	Statement	(	3136:16:89379:89379	719381	1	True				
ANR	719435	Statement	"""f bin_size @ %"""	3136:17:89380:89395	719381	2	True				
ANR	719436	Statement	PFMT64u	3136:33:89396:89402	719381	3	True				
ANR	719437	Statement	"""\\n"""	3136:40:89403:89406	719381	4	True				
ANR	719438	Statement	","	3136:44:89407:89407	719381	5	True				
ANR	719439	Statement	size	3136:46:89409:89412	719381	6	True				
ANR	719440	Statement	)	3136:50:89413:89413	719381	7	True				
ANR	719441	ExpressionStatement		3136:51:89414:89414	719381	8	True				
ANR	719442	ElseStatement	else		719381	0					
ANR	719443	IfStatement	if ( IS_MODE_SET ( mode ) )		719381	0					
ANR	719444	Condition	IS_MODE_SET ( mode )	3137:12:89428:89445	719381	0	True				
ANR	719445	CallExpression	IS_MODE_SET ( mode )		719381	0					
ANR	719446	Callee	IS_MODE_SET		719381	0					
ANR	719447	Identifier	IS_MODE_SET		719381	0					
ANR	719448	ArgumentList	mode		719381	1					
ANR	719449	Argument	mode		719381	0					
ANR	719450	Identifier	mode		719381	0					
ANR	719451	CompoundStatement		7:32:251:251	719381	1					
ANR	719452	Statement	r_core_cmdf	3138:2:89452:89462	719381	0	True				
ANR	719453	Statement	(	3138:14:89464:89464	719381	1	True				
ANR	719454	Statement	r	3138:15:89465:89465	719381	2	True				
ANR	719455	Statement	","	3138:16:89466:89466	719381	3	True				
ANR	719456	Statement	"""f bin_size @ %"""	3138:18:89468:89483	719381	4	True				
ANR	719457	Statement	PFMT64u	3138:34:89484:89490	719381	5	True				
ANR	719458	Statement	"""\\n"""	3138:41:89491:89494	719381	6	True				
ANR	719459	Statement	","	3138:45:89495:89495	719381	7	True				
ANR	719460	Statement	size	3138:47:89497:89500	719381	8	True				
ANR	719461	Statement	)	3138:51:89501:89501	719381	9	True				
ANR	719462	ExpressionStatement		3138:52:89502:89502	719381	10	True				
ANR	719463	ElseStatement	else		719381	0					
ANR	719464	CompoundStatement		9:8:315:315	719381	0					
ANR	719465	Statement	r_cons_printf	3140:2:89516:89528	719381	0	True				
ANR	719466	Statement	(	3140:16:89530:89530	719381	1	True				
ANR	719467	Statement	"""%"""	3140:17:89531:89533	719381	2	True				
ANR	719468	Statement	PFMT64u	3140:20:89534:89540	719381	3	True				
ANR	719469	Statement	"""\\n"""	3140:27:89541:89544	719381	4	True				
ANR	719470	Statement	","	3140:31:89545:89545	719381	5	True				
ANR	719471	Statement	size	3140:33:89547:89550	719381	6	True				
ANR	719472	Statement	)	3140:37:89551:89551	719381	7	True				
ANR	719473	ExpressionStatement		3140:38:89552:89552	719381	8	True				
ANR	719474	ReturnStatement	return true ;	3142:1:89558:89569	719381	2	True				
ANR	719475	Identifier	true		719381	0					
ANR	719476	ReturnType	static int		719381	1					
ANR	719477	Identifier	bin_size		719381	2					
ANR	719478	ParameterList	"RCore * r , int mode"		719381	3					
ANR	719479	Parameter	RCore * r	3131:20:89176:89183	719381	0	True				
ANR	719480	ParameterType	RCore *		719381	0					
ANR	719481	Identifier	r		719381	1					
ANR	719482	Parameter	int mode	3131:30:89186:89193	719381	1	True				
ANR	719483	ParameterType	int		719381	0					
ANR	719484	Identifier	mode		719381	1					
ANR	719485	CFGEntryNode	ENTRY		719381		True				
ANR	719486	CFGExitNode	EXIT		719381		True				
ANR	719487	Symbol	mode		719381						
ANR	719488	Symbol	r		719381						
ANR	719489	Symbol	size		719381						
ANR	719490	Symbol	r -> bin		719381						
ANR	719491	Symbol	true		719381						
ANR	719492	Symbol	r_bin_get_size		719381						
ANR	719493	Symbol	IS_MODE_JSON		719381						
ANR	719494	Symbol	IS_MODE_SIMPLE		719381						
ANR	719495	Symbol	IS_MODE_RAD		719381						
ANR	719496	Symbol	* r		719381						
ANR	719497	Symbol	IS_MODE_SET		719381						
ANR	719498	Function	bin_libs	3145:0:89574:90467							
ANR	719499	FunctionDef	"bin_libs (RCore * r , int mode)"		719498	0					
ANR	719500	CompoundStatement		3145:40:89614:90467	719498	0					
ANR	719501	IdentifierDeclStatement	RList * libs ;	3146:1:89617:89628	719498	0	True				
ANR	719502	IdentifierDecl	* libs		719498	0					
ANR	719503	IdentifierDeclType	RList *		719498	0					
ANR	719504	Identifier	libs		719498	1					
ANR	719505	IdentifierDeclStatement	RListIter * iter ;	3147:1:89631:89646	719498	1	True				
ANR	719506	IdentifierDecl	* iter		719498	0					
ANR	719507	IdentifierDeclType	RListIter *		719498	0					
ANR	719508	Identifier	iter		719498	1					
ANR	719509	IdentifierDeclStatement	char * lib ;	3148:1:89649:89658	719498	2	True				
ANR	719510	IdentifierDecl	* lib		719498	0					
ANR	719511	IdentifierDeclType	char *		719498	0					
ANR	719512	Identifier	lib		719498	1					
ANR	719513	IdentifierDeclStatement	int i = 0 ;	3149:1:89661:89670	719498	3	True				
ANR	719514	IdentifierDecl	i = 0		719498	0					
ANR	719515	IdentifierDeclType	int		719498	0					
ANR	719516	Identifier	i		719498	1					
ANR	719517	AssignmentExpression	i = 0		719498	2		=			
ANR	719518	Identifier	i		719498	0					
ANR	719519	PrimaryExpression	0		719498	1					
ANR	719520	IfStatement	if ( ! ( libs = r_bin_get_libs ( r -> bin ) ) )		719498	4					
ANR	719521	Condition	! ( libs = r_bin_get_libs ( r -> bin ) )	3151:5:89678:89710	719498	0	True				
ANR	719522	UnaryOperationExpression	! ( libs = r_bin_get_libs ( r -> bin ) )		719498	0					
ANR	719523	UnaryOperator	!		719498	0					
ANR	719524	AssignmentExpression	libs = r_bin_get_libs ( r -> bin )		719498	1		=			
ANR	719525	Identifier	libs		719498	0					
ANR	719526	CallExpression	r_bin_get_libs ( r -> bin )		719498	1					
ANR	719527	Callee	r_bin_get_libs		719498	0					
ANR	719528	Identifier	r_bin_get_libs		719498	0					
ANR	719529	ArgumentList	r -> bin		719498	1					
ANR	719530	Argument	r -> bin		719498	0					
ANR	719531	PtrMemberAccess	r -> bin		719498	0					
ANR	719532	Identifier	r		719498	0					
ANR	719533	Identifier	bin		719498	1					
ANR	719534	CompoundStatement		7:40:98:98	719498	1					
ANR	719535	ReturnStatement	return false ;	3152:2:89717:89729	719498	0	True				
ANR	719536	Identifier	false		719498	0					
ANR	719537	IfStatement	if ( IS_MODE_JSON ( mode ) )		719498	5					
ANR	719538	Condition	IS_MODE_JSON ( mode )	3154:5:89739:89757	719498	0	True				
ANR	719539	CallExpression	IS_MODE_JSON ( mode )		719498	0					
ANR	719540	Callee	IS_MODE_JSON		719498	0					
ANR	719541	Identifier	IS_MODE_JSON		719498	0					
ANR	719542	ArgumentList	mode		719498	1					
ANR	719543	Argument	mode		719498	0					
ANR	719544	Identifier	mode		719498	0					
ANR	719545	CompoundStatement		10:26:145:145	719498	1					
ANR	719546	ExpressionStatement	"r_cons_print ( ""["" )"	3155:2:89764:89782	719498	0	True				
ANR	719547	CallExpression	"r_cons_print ( ""["" )"		719498	0					
ANR	719548	Callee	r_cons_print		719498	0					
ANR	719549	Identifier	r_cons_print		719498	0					
ANR	719550	ArgumentList	"""["""		719498	1					
ANR	719551	Argument	"""["""		719498	0					
ANR	719552	PrimaryExpression	"""["""		719498	0					
ANR	719553	ElseStatement	else		719498	0					
ANR	719554	IfStatement	if ( IS_MODE_NORMAL ( mode ) )		719498	0					
ANR	719555	Condition	IS_MODE_NORMAL ( mode )	3156:12:89796:89816	719498	0	True				
ANR	719556	CallExpression	IS_MODE_NORMAL ( mode )		719498	0					
ANR	719557	Callee	IS_MODE_NORMAL		719498	0					
ANR	719558	Identifier	IS_MODE_NORMAL		719498	0					
ANR	719559	ArgumentList	mode		719498	1					
ANR	719560	Argument	mode		719498	0					
ANR	719561	Identifier	mode		719498	0					
ANR	719562	CompoundStatement		12:35:204:204	719498	1					
ANR	719563	ExpressionStatement	"r_cons_println ( ""[Linked libraries]"" )"	3157:2:89823:89860	719498	0	True				
ANR	719564	CallExpression	"r_cons_println ( ""[Linked libraries]"" )"		719498	0					
ANR	719565	Callee	r_cons_println		719498	0					
ANR	719566	Identifier	r_cons_println		719498	0					
ANR	719567	ArgumentList	"""[Linked libraries]"""		719498	1					
ANR	719568	Argument	"""[Linked libraries]"""		719498	0					
ANR	719569	PrimaryExpression	"""[Linked libraries]"""		719498	0					
ANR	719570	Statement	r_list_foreach	3159:1:89866:89879	719498	6	True				
ANR	719571	Statement	(	3159:16:89881:89881	719498	7	True				
ANR	719572	Statement	libs	3159:17:89882:89885	719498	8	True				
ANR	719573	Statement	","	3159:21:89886:89886	719498	9	True				
ANR	719574	Statement	iter	3159:23:89888:89891	719498	10	True				
ANR	719575	Statement	","	3159:27:89892:89892	719498	11	True				
ANR	719576	Statement	lib	3159:29:89894:89896	719498	12	True				
ANR	719577	Statement	)	3159:32:89897:89897	719498	13	True				
ANR	719578	CompoundStatement		15:34:284:284	719498	14					
ANR	719579	IfStatement	if ( IS_MODE_SET ( mode ) )		719498	0					
ANR	719580	Condition	IS_MODE_SET ( mode )	3160:6:89907:89924	719498	0	True				
ANR	719581	CallExpression	IS_MODE_SET ( mode )		719498	0					
ANR	719582	Callee	IS_MODE_SET		719498	0					
ANR	719583	Identifier	IS_MODE_SET		719498	0					
ANR	719584	ArgumentList	mode		719498	1					
ANR	719585	Argument	mode		719498	0					
ANR	719586	Identifier	mode		719498	0					
ANR	719587	CompoundStatement		16:26:312:312	719498	1					
ANR	719588	ElseStatement	else		719498	0					
ANR	719589	IfStatement	if ( IS_MODE_RAD ( mode ) )		719498	0					
ANR	719590	Condition	IS_MODE_RAD ( mode )	3163:13:90004:90021	719498	0	True				
ANR	719591	CallExpression	IS_MODE_RAD ( mode )		719498	0					
ANR	719592	Callee	IS_MODE_RAD		719498	0					
ANR	719593	Identifier	IS_MODE_RAD		719498	0					
ANR	719594	ArgumentList	mode		719498	1					
ANR	719595	Argument	mode		719498	0					
ANR	719596	Identifier	mode		719498	0					
ANR	719597	CompoundStatement		19:33:409:409	719498	1					
ANR	719598	ExpressionStatement	"r_cons_printf ( ""\\""CCa entry0 %s\\""\\n"" , lib )"	3164:3:90029:90071	719498	0	True				
ANR	719599	CallExpression	"r_cons_printf ( ""\\""CCa entry0 %s\\""\\n"" , lib )"		719498	0					
ANR	719600	Callee	r_cons_printf		719498	0					
ANR	719601	Identifier	r_cons_printf		719498	0					
ANR	719602	ArgumentList	"""\\""CCa entry0 %s\\""\\n"""		719498	1					
ANR	719603	Argument	"""\\""CCa entry0 %s\\""\\n"""		719498	0					
ANR	719604	PrimaryExpression	"""\\""CCa entry0 %s\\""\\n"""		719498	0					
ANR	719605	Argument	lib		719498	1					
ANR	719606	Identifier	lib		719498	0					
ANR	719607	ElseStatement	else		719498	0					
ANR	719608	IfStatement	if ( IS_MODE_JSON ( mode ) )		719498	0					
ANR	719609	Condition	IS_MODE_JSON ( mode )	3165:13:90086:90104	719498	0	True				
ANR	719610	CallExpression	IS_MODE_JSON ( mode )		719498	0					
ANR	719611	Callee	IS_MODE_JSON		719498	0					
ANR	719612	Identifier	IS_MODE_JSON		719498	0					
ANR	719613	ArgumentList	mode		719498	1					
ANR	719614	Argument	mode		719498	0					
ANR	719615	Identifier	mode		719498	0					
ANR	719616	CompoundStatement		21:34:492:492	719498	1					
ANR	719617	ExpressionStatement	"r_cons_printf ( ""%s\\""%s\\"""" , iter -> p ? "","" : """" , lib )"	3166:3:90112:90163	719498	0	True				
ANR	719618	CallExpression	"r_cons_printf ( ""%s\\""%s\\"""" , iter -> p ? "","" : """" , lib )"		719498	0					
ANR	719619	Callee	r_cons_printf		719498	0					
ANR	719620	Identifier	r_cons_printf		719498	0					
ANR	719621	ArgumentList	"""%s\\""%s\\"""""		719498	1					
ANR	719622	Argument	"""%s\\""%s\\"""""		719498	0					
ANR	719623	PrimaryExpression	"""%s\\""%s\\"""""		719498	0					
ANR	719624	Argument	"iter -> p ? "","" : """""		719498	1					
ANR	719625	ConditionalExpression	"iter -> p ? "","" : """""		719498	0					
ANR	719626	Condition	iter -> p		719498	0					
ANR	719627	PtrMemberAccess	iter -> p		719498	0					
ANR	719628	Identifier	iter		719498	0					
ANR	719629	Identifier	p		719498	1					
ANR	719630	PrimaryExpression	""","""		719498	1					
ANR	719631	PrimaryExpression	""""""		719498	2					
ANR	719632	Argument	lib		719498	2					
ANR	719633	Identifier	lib		719498	0					
ANR	719634	ElseStatement	else		719498	0					
ANR	719635	CompoundStatement		23:9:559:559	719498	0					
ANR	719636	ExpressionStatement	r_cons_println ( lib )	3169:3:90214:90234	719498	0	True				
ANR	719637	CallExpression	r_cons_println ( lib )		719498	0					
ANR	719638	Callee	r_cons_println		719498	0					
ANR	719639	Identifier	r_cons_println		719498	0					
ANR	719640	ArgumentList	lib		719498	1					
ANR	719641	Argument	lib		719498	0					
ANR	719642	Identifier	lib		719498	0					
ANR	719643	ExpressionStatement	i ++	3171:2:90242:90245	719498	1	True				
ANR	719644	PostIncDecOperationExpression	i ++		719498	0					
ANR	719645	Identifier	i		719498	0					
ANR	719646	IncDec	++		719498	1					
ANR	719647	IfStatement	if ( IS_MODE_JSON ( mode ) )		719498	15					
ANR	719648	Condition	IS_MODE_JSON ( mode )	3173:5:90255:90273	719498	0	True				
ANR	719649	CallExpression	IS_MODE_JSON ( mode )		719498	0					
ANR	719650	Callee	IS_MODE_JSON		719498	0					
ANR	719651	Identifier	IS_MODE_JSON		719498	0					
ANR	719652	ArgumentList	mode		719498	1					
ANR	719653	Argument	mode		719498	0					
ANR	719654	Identifier	mode		719498	0					
ANR	719655	CompoundStatement		29:26:661:661	719498	1					
ANR	719656	ExpressionStatement	"r_cons_print ( ""]"" )"	3174:2:90280:90298	719498	0	True				
ANR	719657	CallExpression	"r_cons_print ( ""]"" )"		719498	0					
ANR	719658	Callee	r_cons_print		719498	0					
ANR	719659	Identifier	r_cons_print		719498	0					
ANR	719660	ArgumentList	"""]"""		719498	1					
ANR	719661	Argument	"""]"""		719498	0					
ANR	719662	PrimaryExpression	"""]"""		719498	0					
ANR	719663	ElseStatement	else		719498	0					
ANR	719664	IfStatement	if ( IS_MODE_NORMAL ( mode ) )		719498	0					
ANR	719665	Condition	IS_MODE_NORMAL ( mode )	3175:12:90312:90332	719498	0	True				
ANR	719666	CallExpression	IS_MODE_NORMAL ( mode )		719498	0					
ANR	719667	Callee	IS_MODE_NORMAL		719498	0					
ANR	719668	Identifier	IS_MODE_NORMAL		719498	0					
ANR	719669	ArgumentList	mode		719498	1					
ANR	719670	Argument	mode		719498	0					
ANR	719671	Identifier	mode		719498	0					
ANR	719672	CompoundStatement		31:35:720:720	719498	1					
ANR	719673	IfStatement	if ( i == 1 )		719498	0					
ANR	719674	Condition	i == 1	3176:6:90343:90348	719498	0	True				
ANR	719675	EqualityExpression	i == 1		719498	0		==			
ANR	719676	Identifier	i		719498	0					
ANR	719677	PrimaryExpression	1		719498	1					
ANR	719678	CompoundStatement		32:14:736:736	719498	1					
ANR	719679	ExpressionStatement	"r_cons_printf ( ""\\n%i library\\n"" , i )"	3177:3:90356:90391	719498	0	True				
ANR	719680	CallExpression	"r_cons_printf ( ""\\n%i library\\n"" , i )"		719498	0					
ANR	719681	Callee	r_cons_printf		719498	0					
ANR	719682	Identifier	r_cons_printf		719498	0					
ANR	719683	ArgumentList	"""\\n%i library\\n"""		719498	1					
ANR	719684	Argument	"""\\n%i library\\n"""		719498	0					
ANR	719685	PrimaryExpression	"""\\n%i library\\n"""		719498	0					
ANR	719686	Argument	i		719498	1					
ANR	719687	Identifier	i		719498	0					
ANR	719688	ElseStatement	else		719498	0					
ANR	719689	CompoundStatement		34:9:787:787	719498	0					
ANR	719690	ExpressionStatement	"r_cons_printf ( ""\\n%i libraries\\n"" , i )"	3179:3:90407:90444	719498	0	True				
ANR	719691	CallExpression	"r_cons_printf ( ""\\n%i libraries\\n"" , i )"		719498	0					
ANR	719692	Callee	r_cons_printf		719498	0					
ANR	719693	Identifier	r_cons_printf		719498	0					
ANR	719694	ArgumentList	"""\\n%i libraries\\n"""		719498	1					
ANR	719695	Argument	"""\\n%i libraries\\n"""		719498	0					
ANR	719696	PrimaryExpression	"""\\n%i libraries\\n"""		719498	0					
ANR	719697	Argument	i		719498	1					
ANR	719698	Identifier	i		719498	0					
ANR	719699	ReturnStatement	return true ;	3182:1:90454:90465	719498	16	True				
ANR	719700	Identifier	true		719498	0					
ANR	719701	ReturnType	static int		719498	1					
ANR	719702	Identifier	bin_libs		719498	2					
ANR	719703	ParameterList	"RCore * r , int mode"		719498	3					
ANR	719704	Parameter	RCore * r	3145:20:89594:89601	719498	0	True				
ANR	719705	ParameterType	RCore *		719498	0					
ANR	719706	Identifier	r		719498	1					
ANR	719707	Parameter	int mode	3145:30:89604:89611	719498	1	True				
ANR	719708	ParameterType	int		719498	0					
ANR	719709	Identifier	mode		719498	1					
ANR	719710	CFGEntryNode	ENTRY		719498		True				
ANR	719711	CFGExitNode	EXIT		719498		True				
ANR	719712	Symbol	lib		719498						
ANR	719713	Symbol	false		719498						
ANR	719714	Symbol	iter		719498						
ANR	719715	Symbol	i		719498						
ANR	719716	Symbol	IS_MODE_JSON		719498						
ANR	719717	Symbol	r_bin_get_libs		719498						
ANR	719718	Symbol	IS_MODE_NORMAL		719498						
ANR	719719	Symbol	IS_MODE_SET		719498						
ANR	719720	Symbol	mode		719498						
ANR	719721	Symbol	* iter		719498						
ANR	719722	Symbol	r		719498						
ANR	719723	Symbol	r -> bin		719498						
ANR	719724	Symbol	true		719498						
ANR	719725	Symbol	iter -> p		719498						
ANR	719726	Symbol	IS_MODE_RAD		719498						
ANR	719727	Symbol	libs		719498						
ANR	719728	Symbol	* r		719498						
ANR	719729	Function	bin_mem_print	3185:0:90470:91331							
ANR	719730	FunctionDef	"bin_mem_print (RList * mems , int perms , int depth , int mode)"		719729	0					
ANR	719731	CompoundStatement		3185:71:90541:91331	719729	0					
ANR	719732	IdentifierDeclStatement	RBinMem * mem ;	3186:1:90544:90556	719729	0	True				
ANR	719733	IdentifierDecl	* mem		719729	0					
ANR	719734	IdentifierDeclType	RBinMem *		719729	0					
ANR	719735	Identifier	mem		719729	1					
ANR	719736	IdentifierDeclStatement	RListIter * iter ;	3187:1:90559:90574	719729	1	True				
ANR	719737	IdentifierDecl	* iter		719729	0					
ANR	719738	IdentifierDeclType	RListIter *		719729	0					
ANR	719739	Identifier	iter		719729	1					
ANR	719740	IfStatement	if ( ! mems )		719729	2					
ANR	719741	Condition	! mems	3188:5:90581:90585	719729	0	True				
ANR	719742	UnaryOperationExpression	! mems		719729	0					
ANR	719743	UnaryOperator	!		719729	0					
ANR	719744	Identifier	mems		719729	1					
ANR	719745	CompoundStatement		4:12:46:46	719729	1					
ANR	719746	ReturnStatement	return ;	3189:2:90592:90598	719729	0	True				
ANR	719747	Statement	r_list_foreach	3191:1:90604:90617	719729	3	True				
ANR	719748	Statement	(	3191:16:90619:90619	719729	4	True				
ANR	719749	Statement	mems	3191:17:90620:90623	719729	5	True				
ANR	719750	Statement	","	3191:21:90624:90624	719729	6	True				
ANR	719751	Statement	iter	3191:23:90626:90629	719729	7	True				
ANR	719752	Statement	","	3191:27:90630:90630	719729	8	True				
ANR	719753	Statement	mem	3191:29:90632:90634	719729	9	True				
ANR	719754	Statement	)	3191:32:90635:90635	719729	10	True				
ANR	719755	CompoundStatement		7:34:95:95	719729	11					
ANR	719756	IfStatement	if ( IS_MODE_JSON ( mode ) )		719729	0					
ANR	719757	Condition	IS_MODE_JSON ( mode )	3192:6:90645:90663	719729	0	True				
ANR	719758	CallExpression	IS_MODE_JSON ( mode )		719729	0					
ANR	719759	Callee	IS_MODE_JSON		719729	0					
ANR	719760	Identifier	IS_MODE_JSON		719729	0					
ANR	719761	ArgumentList	mode		719729	1					
ANR	719762	Argument	mode		719729	0					
ANR	719763	Identifier	mode		719729	0					
ANR	719764	CompoundStatement		8:27:124:124	719729	1					
ANR	719765	Statement	r_cons_printf	3193:3:90671:90683	719729	0	True				
ANR	719766	Statement	(	3193:17:90685:90685	719729	1	True				
ANR	719767	Statement	"""{\\""name\\"":\\""%s\\"",\\""size\\"":%d,\\""address\\"":%d,"""	3193:18:90686:90731	719729	2	True				
ANR	719768	Statement	"""\\""flags\\"":\\""%s\\""}"""	3194:5:90738:90756	719729	3	True				
ANR	719769	Statement	","	3194:24:90757:90757	719729	4	True				
ANR	719770	Statement	mem	3194:26:90759:90761	719729	5	True				
ANR	719771	Statement	->	3194:29:90762:90763	719729	6	True				
ANR	719772	Statement	name	3194:31:90764:90767	719729	7	True				
ANR	719773	Statement	","	3194:35:90768:90768	719729	8	True				
ANR	719774	Statement	mem	3194:37:90770:90772	719729	9	True				
ANR	719775	Statement	->	3194:40:90773:90774	719729	10	True				
ANR	719776	Statement	size	3194:42:90775:90778	719729	11	True				
ANR	719777	Statement	","	3194:46:90779:90779	719729	12	True				
ANR	719778	Statement	mem	3195:5:90786:90788	719729	13	True				
ANR	719779	Statement	->	3195:8:90789:90790	719729	14	True				
ANR	719780	Statement	addr	3195:10:90791:90794	719729	15	True				
ANR	719781	Statement	","	3195:14:90795:90795	719729	16	True				
ANR	719782	Statement	r_str_rwx_i	3195:16:90797:90807	719729	17	True				
ANR	719783	Statement	(	3195:28:90809:90809	719729	18	True				
ANR	719784	Statement	mem	3195:29:90810:90812	719729	19	True				
ANR	719785	Statement	->	3195:32:90813:90814	719729	20	True				
ANR	719786	Statement	perms	3195:34:90815:90819	719729	21	True				
ANR	719787	Statement	&	3195:40:90821:90821	719729	22	True				
ANR	719788	Statement	perms	3195:42:90823:90827	719729	23	True				
ANR	719789	Statement	)	3195:47:90828:90828	719729	24	True				
ANR	719790	Statement	)	3195:48:90829:90829	719729	25	True				
ANR	719791	ExpressionStatement		3195:49:90830:90830	719729	26	True				
ANR	719792	ElseStatement	else		719729	0					
ANR	719793	IfStatement	if ( IS_MODE_SIMPLE ( mode ) )		719729	0					
ANR	719794	Condition	IS_MODE_SIMPLE ( mode )	3196:13:90845:90865	719729	0	True				
ANR	719795	CallExpression	IS_MODE_SIMPLE ( mode )		719729	0					
ANR	719796	Callee	IS_MODE_SIMPLE		719729	0					
ANR	719797	Identifier	IS_MODE_SIMPLE		719729	0					
ANR	719798	ArgumentList	mode		719729	1					
ANR	719799	Argument	mode		719729	0					
ANR	719800	Identifier	mode		719729	0					
ANR	719801	CompoundStatement		12:36:326:326	719729	1					
ANR	719802	Statement	r_cons_printf	3197:3:90873:90885	719729	0	True				
ANR	719803	Statement	(	3197:17:90887:90887	719729	1	True				
ANR	719804	Statement	"""0x%08"""	3197:18:90888:90894	719729	2	True				
ANR	719805	Statement	PFMT64x	3197:25:90895:90901	719729	3	True				
ANR	719806	Statement	"""\\n"""	3197:32:90902:90905	719729	4	True				
ANR	719807	Statement	","	3197:36:90906:90906	719729	5	True				
ANR	719808	Statement	mem	3197:38:90908:90910	719729	6	True				
ANR	719809	Statement	->	3197:41:90911:90912	719729	7	True				
ANR	719810	Statement	addr	3197:43:90913:90916	719729	8	True				
ANR	719811	Statement	)	3197:47:90917:90917	719729	9	True				
ANR	719812	ExpressionStatement		3197:48:90918:90918	719729	10	True				
ANR	719813	ElseStatement	else		719729	0					
ANR	719814	CompoundStatement		14:9:387:387	719729	0					
ANR	719815	Statement	r_cons_printf	3199:3:90934:90946	719729	0	True				
ANR	719816	Statement	(	3199:17:90948:90948	719729	1	True				
ANR	719817	Statement	"""0x%08"""	3199:18:90949:90955	719729	2	True				
ANR	719818	Statement	PFMT64x	3199:25:90956:90962	719729	3	True				
ANR	719819	Statement	""" +0x%04x %s %*s%-*s\\n"""	3199:32:90963:90985	719729	4	True				
ANR	719820	Statement	","	3199:55:90986:90986	719729	5	True				
ANR	719821	Statement	mem	3200:5:90993:90995	719729	6	True				
ANR	719822	Statement	->	3200:8:90996:90997	719729	7	True				
ANR	719823	Statement	addr	3200:10:90998:91001	719729	8	True				
ANR	719824	Statement	","	3200:14:91002:91002	719729	9	True				
ANR	719825	Statement	mem	3200:16:91004:91006	719729	10	True				
ANR	719826	Statement	->	3200:19:91007:91008	719729	11	True				
ANR	719827	Statement	size	3200:21:91009:91012	719729	12	True				
ANR	719828	Statement	","	3200:25:91013:91013	719729	13	True				
ANR	719829	Statement	r_str_rwx_i	3200:27:91015:91025	719729	14	True				
ANR	719830	Statement	(	3200:39:91027:91027	719729	15	True				
ANR	719831	Statement	mem	3200:40:91028:91030	719729	16	True				
ANR	719832	Statement	->	3200:43:91031:91032	719729	17	True				
ANR	719833	Statement	perms	3200:45:91033:91037	719729	18	True				
ANR	719834	Statement	&	3200:51:91039:91039	719729	19	True				
ANR	719835	Statement	perms	3200:53:91041:91045	719729	20	True				
ANR	719836	Statement	)	3200:58:91046:91046	719729	21	True				
ANR	719837	Statement	","	3200:59:91047:91047	719729	22	True				
ANR	719838	Statement	depth	3201:5:91054:91058	719729	23	True				
ANR	719839	Statement	","	3201:10:91059:91059	719729	24	True				
ANR	719840	Statement	""""""	3201:12:91061:91062	719729	25	True				
ANR	719841	Statement	","	3201:14:91063:91063	719729	26	True				
ANR	719842	Statement	20	3201:16:91065:91066	719729	27	True				
ANR	719843	Statement	-	3201:18:91067:91067	719729	28	True				
ANR	719844	Statement	depth	3201:19:91068:91072	719729	29	True				
ANR	719845	Statement	","	3201:24:91073:91073	719729	30	True				
ANR	719846	Statement	mem	3201:26:91075:91077	719729	31	True				
ANR	719847	Statement	->	3201:29:91078:91079	719729	32	True				
ANR	719848	Statement	name	3201:31:91080:91083	719729	33	True				
ANR	719849	Statement	)	3201:35:91084:91084	719729	34	True				
ANR	719850	ExpressionStatement		3201:36:91085:91085	719729	35	True				
ANR	719851	IfStatement	if ( mem -> mirrors )		719729	1					
ANR	719852	Condition	mem -> mirrors	3203:6:91097:91108	719729	0	True				
ANR	719853	PtrMemberAccess	mem -> mirrors		719729	0					
ANR	719854	Identifier	mem		719729	0					
ANR	719855	Identifier	mirrors		719729	1					
ANR	719856	CompoundStatement		19:20:569:569	719729	1					
ANR	719857	IfStatement	if ( IS_MODE_JSON ( mode ) )		719729	0					
ANR	719858	Condition	IS_MODE_JSON ( mode )	3204:7:91120:91138	719729	0	True				
ANR	719859	CallExpression	IS_MODE_JSON ( mode )		719729	0					
ANR	719860	Callee	IS_MODE_JSON		719729	0					
ANR	719861	Identifier	IS_MODE_JSON		719729	0					
ANR	719862	ArgumentList	mode		719729	1					
ANR	719863	Argument	mode		719729	0					
ANR	719864	Identifier	mode		719729	0					
ANR	719865	CompoundStatement		20:28:599:599	719729	1					
ANR	719866	ExpressionStatement	"r_cons_printf ( "","" )"	3205:4:91147:91166	719729	0	True				
ANR	719867	CallExpression	"r_cons_printf ( "","" )"		719729	0					
ANR	719868	Callee	r_cons_printf		719729	0					
ANR	719869	Identifier	r_cons_printf		719729	0					
ANR	719870	ArgumentList	""","""		719729	1					
ANR	719871	Argument	""","""		719729	0					
ANR	719872	PrimaryExpression	""","""		719729	0					
ANR	719873	ExpressionStatement	"bin_mem_print ( mem -> mirrors , mem -> perms & perms , depth + 1 , mode )"	3207:3:91176:91241	719729	1	True				
ANR	719874	CallExpression	"bin_mem_print ( mem -> mirrors , mem -> perms & perms , depth + 1 , mode )"		719729	0					
ANR	719875	Callee	bin_mem_print		719729	0					
ANR	719876	Identifier	bin_mem_print		719729	0					
ANR	719877	ArgumentList	mem -> mirrors		719729	1					
ANR	719878	Argument	mem -> mirrors		719729	0					
ANR	719879	PtrMemberAccess	mem -> mirrors		719729	0					
ANR	719880	Identifier	mem		719729	0					
ANR	719881	Identifier	mirrors		719729	1					
ANR	719882	Argument	mem -> perms & perms		719729	1					
ANR	719883	BitAndExpression	mem -> perms & perms		719729	0		&			
ANR	719884	PtrMemberAccess	mem -> perms		719729	0					
ANR	719885	Identifier	mem		719729	0					
ANR	719886	Identifier	perms		719729	1					
ANR	719887	Identifier	perms		719729	1					
ANR	719888	Argument	depth + 1		719729	2					
ANR	719889	AdditiveExpression	depth + 1		719729	0		+			
ANR	719890	Identifier	depth		719729	0					
ANR	719891	PrimaryExpression	1		719729	1					
ANR	719892	Argument	mode		719729	3					
ANR	719893	Identifier	mode		719729	0					
ANR	719894	IfStatement	if ( IS_MODE_JSON ( mode ) )		719729	2					
ANR	719895	Condition	IS_MODE_JSON ( mode )	3209:6:91253:91271	719729	0	True				
ANR	719896	CallExpression	IS_MODE_JSON ( mode )		719729	0					
ANR	719897	Callee	IS_MODE_JSON		719729	0					
ANR	719898	Identifier	IS_MODE_JSON		719729	0					
ANR	719899	ArgumentList	mode		719729	1					
ANR	719900	Argument	mode		719729	0					
ANR	719901	Identifier	mode		719729	0					
ANR	719902	CompoundStatement		25:27:732:732	719729	1					
ANR	719903	IfStatement	if ( iter -> n )		719729	0					
ANR	719904	Condition	iter -> n	3210:7:91283:91289	719729	0	True				
ANR	719905	PtrMemberAccess	iter -> n		719729	0					
ANR	719906	Identifier	iter		719729	0					
ANR	719907	Identifier	n		719729	1					
ANR	719908	CompoundStatement		26:16:750:750	719729	1					
ANR	719909	ExpressionStatement	"r_cons_printf ( "","" )"	3211:4:91298:91317	719729	0	True				
ANR	719910	CallExpression	"r_cons_printf ( "","" )"		719729	0					
ANR	719911	Callee	r_cons_printf		719729	0					
ANR	719912	Identifier	r_cons_printf		719729	0					
ANR	719913	ArgumentList	""","""		719729	1					
ANR	719914	Argument	""","""		719729	0					
ANR	719915	PrimaryExpression	""","""		719729	0					
ANR	719916	ReturnType	static void		719729	1					
ANR	719917	Identifier	bin_mem_print		719729	2					
ANR	719918	ParameterList	"RList * mems , int perms , int depth , int mode"		719729	3					
ANR	719919	Parameter	RList * mems	3185:26:90496:90506	719729	0	True				
ANR	719920	ParameterType	RList *		719729	0					
ANR	719921	Identifier	mems		719729	1					
ANR	719922	Parameter	int perms	3185:39:90509:90517	719729	1	True				
ANR	719923	ParameterType	int		719729	0					
ANR	719924	Identifier	perms		719729	1					
ANR	719925	Parameter	int depth	3185:50:90520:90528	719729	2	True				
ANR	719926	ParameterType	int		719729	0					
ANR	719927	Identifier	depth		719729	1					
ANR	719928	Parameter	int mode	3185:61:90531:90538	719729	3	True				
ANR	719929	ParameterType	int		719729	0					
ANR	719930	Identifier	mode		719729	1					
ANR	719931	CFGEntryNode	ENTRY		719729		True				
ANR	719932	CFGExitNode	EXIT		719729		True				
ANR	719933	Symbol	mem -> perms		719729						
ANR	719934	Symbol	iter		719729						
ANR	719935	Symbol	IS_MODE_JSON		719729						
ANR	719936	Symbol	IS_MODE_SIMPLE		719729						
ANR	719937	Symbol	mems		719729						
ANR	719938	Symbol	mode		719729						
ANR	719939	Symbol	* iter		719729						
ANR	719940	Symbol	depth		719729						
ANR	719941	Symbol	mem		719729						
ANR	719942	Symbol	iter -> n		719729						
ANR	719943	Symbol	perms		719729						
ANR	719944	Symbol	mem -> mirrors		719729						
ANR	719945	Symbol	* mem		719729						
ANR	719946	Function	bin_mem	3217:0:91334:91905							
ANR	719947	FunctionDef	"bin_mem (RCore * r , int mode)"		719946	0					
ANR	719948	CompoundStatement		3217:39:91373:91905	719946	0					
ANR	719949	IdentifierDeclStatement	RList * mem = NULL ;	3218:1:91376:91393	719946	0	True				
ANR	719950	IdentifierDecl	* mem = NULL		719946	0					
ANR	719951	IdentifierDeclType	RList *		719946	0					
ANR	719952	Identifier	mem		719946	1					
ANR	719953	AssignmentExpression	* mem = NULL		719946	2		=			
ANR	719954	Identifier	NULL		719946	0					
ANR	719955	Identifier	NULL		719946	1					
ANR	719956	IfStatement	if ( ! r )		719946	1					
ANR	719957	Condition	! r	3219:5:91400:91401	719946	0	True				
ANR	719958	UnaryOperationExpression	! r		719946	0					
ANR	719959	UnaryOperator	!		719946	0					
ANR	719960	Identifier	r		719946	1					
ANR	719961	CompoundStatement		3:9:30:30	719946	1					
ANR	719962	ReturnStatement	return false ;	3220:2:91408:91420	719946	0	True				
ANR	719963	Identifier	false		719946	0					
ANR	719964	IfStatement	if ( ! IS_MODE_JSON ( mode ) )		719946	2					
ANR	719965	Condition	! IS_MODE_JSON ( mode )	3222:5:91430:91449	719946	0	True				
ANR	719966	UnaryOperationExpression	! IS_MODE_JSON ( mode )		719946	0					
ANR	719967	UnaryOperator	!		719946	0					
ANR	719968	CallExpression	IS_MODE_JSON ( mode )		719946	1					
ANR	719969	Callee	IS_MODE_JSON		719946	0					
ANR	719970	Identifier	IS_MODE_JSON		719946	0					
ANR	719971	ArgumentList	mode		719946	1					
ANR	719972	Argument	mode		719946	0					
ANR	719973	Identifier	mode		719946	0					
ANR	719974	CompoundStatement		6:27:78:78	719946	1					
ANR	719975	IfStatement	if ( ! ( IS_MODE_RAD ( mode ) || IS_MODE_SET ( mode ) ) )		719946	0					
ANR	719976	Condition	! ( IS_MODE_RAD ( mode ) || IS_MODE_SET ( mode ) )	3223:6:91460:91502	719946	0	True				
ANR	719977	UnaryOperationExpression	! ( IS_MODE_RAD ( mode ) || IS_MODE_SET ( mode ) )		719946	0					
ANR	719978	UnaryOperator	!		719946	0					
ANR	719979	OrExpression	IS_MODE_RAD ( mode ) || IS_MODE_SET ( mode )		719946	1		||			
ANR	719980	CallExpression	IS_MODE_RAD ( mode )		719946	0					
ANR	719981	Callee	IS_MODE_RAD		719946	0					
ANR	719982	Identifier	IS_MODE_RAD		719946	0					
ANR	719983	ArgumentList	mode		719946	1					
ANR	719984	Argument	mode		719946	0					
ANR	719985	Identifier	mode		719946	0					
ANR	719986	CallExpression	IS_MODE_SET ( mode )		719946	1					
ANR	719987	Callee	IS_MODE_SET		719946	0					
ANR	719988	Identifier	IS_MODE_SET		719946	0					
ANR	719989	ArgumentList	mode		719946	1					
ANR	719990	Argument	mode		719946	0					
ANR	719991	Identifier	mode		719946	0					
ANR	719992	CompoundStatement		7:51:131:131	719946	1					
ANR	719993	ExpressionStatement	"r_cons_println ( ""[Memory]\\n"" )"	3224:3:91510:91539	719946	0	True				
ANR	719994	CallExpression	"r_cons_println ( ""[Memory]\\n"" )"		719946	0					
ANR	719995	Callee	r_cons_println		719946	0					
ANR	719996	Identifier	r_cons_println		719946	0					
ANR	719997	ArgumentList	"""[Memory]\\n"""		719946	1					
ANR	719998	Argument	"""[Memory]\\n"""		719946	0					
ANR	719999	PrimaryExpression	"""[Memory]\\n"""		719946	0					
ANR	720000	IfStatement	if ( ! ( mem = r_bin_get_mem ( r -> bin ) ) )		719946	3					
ANR	720001	Condition	! ( mem = r_bin_get_mem ( r -> bin ) )	3227:5:91553:91583	719946	0	True				
ANR	720002	UnaryOperationExpression	! ( mem = r_bin_get_mem ( r -> bin ) )		719946	0					
ANR	720003	UnaryOperator	!		719946	0					
ANR	720004	AssignmentExpression	mem = r_bin_get_mem ( r -> bin )		719946	1		=			
ANR	720005	Identifier	mem		719946	0					
ANR	720006	CallExpression	r_bin_get_mem ( r -> bin )		719946	1					
ANR	720007	Callee	r_bin_get_mem		719946	0					
ANR	720008	Identifier	r_bin_get_mem		719946	0					
ANR	720009	ArgumentList	r -> bin		719946	1					
ANR	720010	Argument	r -> bin		719946	0					
ANR	720011	PtrMemberAccess	r -> bin		719946	0					
ANR	720012	Identifier	r		719946	0					
ANR	720013	Identifier	bin		719946	1					
ANR	720014	CompoundStatement		11:38:212:212	719946	1					
ANR	720015	IfStatement	if ( IS_MODE_JSON ( mode ) )		719946	0					
ANR	720016	Condition	IS_MODE_JSON ( mode )	3228:6:91594:91612	719946	0	True				
ANR	720017	CallExpression	IS_MODE_JSON ( mode )		719946	0					
ANR	720018	Callee	IS_MODE_JSON		719946	0					
ANR	720019	Identifier	IS_MODE_JSON		719946	0					
ANR	720020	ArgumentList	mode		719946	1					
ANR	720021	Argument	mode		719946	0					
ANR	720022	Identifier	mode		719946	0					
ANR	720023	CompoundStatement		12:27:241:241	719946	1					
ANR	720024	ExpressionStatement	"r_cons_print ( ""[]"" )"	3229:3:91620:91638	719946	0	True				
ANR	720025	CallExpression	"r_cons_print ( ""[]"" )"		719946	0					
ANR	720026	Callee	r_cons_print		719946	0					
ANR	720027	Identifier	r_cons_print		719946	0					
ANR	720028	ArgumentList	"""[]"""		719946	1					
ANR	720029	Argument	"""[]"""		719946	0					
ANR	720030	PrimaryExpression	"""[]"""		719946	0					
ANR	720031	ReturnStatement	return false ;	3231:2:91646:91658	719946	1	True				
ANR	720032	Identifier	false		719946	0					
ANR	720033	IfStatement	if ( IS_MODE_JSON ( mode ) )		719946	4					
ANR	720034	Condition	IS_MODE_JSON ( mode )	3233:5:91668:91686	719946	0	True				
ANR	720035	CallExpression	IS_MODE_JSON ( mode )		719946	0					
ANR	720036	Callee	IS_MODE_JSON		719946	0					
ANR	720037	Identifier	IS_MODE_JSON		719946	0					
ANR	720038	ArgumentList	mode		719946	1					
ANR	720039	Argument	mode		719946	0					
ANR	720040	Identifier	mode		719946	0					
ANR	720041	CompoundStatement		17:26:315:315	719946	1					
ANR	720042	ExpressionStatement	"r_cons_print ( ""["" )"	3234:2:91693:91711	719946	0	True				
ANR	720043	CallExpression	"r_cons_print ( ""["" )"		719946	0					
ANR	720044	Callee	r_cons_print		719946	0					
ANR	720045	Identifier	r_cons_print		719946	0					
ANR	720046	ArgumentList	"""["""		719946	1					
ANR	720047	Argument	"""["""		719946	0					
ANR	720048	PrimaryExpression	"""["""		719946	0					
ANR	720049	ExpressionStatement	"bin_mem_print ( mem , 7 , 0 , R_MODE_JSON )"	3235:2:91715:91753	719946	1	True				
ANR	720050	CallExpression	"bin_mem_print ( mem , 7 , 0 , R_MODE_JSON )"		719946	0					
ANR	720051	Callee	bin_mem_print		719946	0					
ANR	720052	Identifier	bin_mem_print		719946	0					
ANR	720053	ArgumentList	mem		719946	1					
ANR	720054	Argument	mem		719946	0					
ANR	720055	Identifier	mem		719946	0					
ANR	720056	Argument	7		719946	1					
ANR	720057	PrimaryExpression	7		719946	0					
ANR	720058	Argument	0		719946	2					
ANR	720059	PrimaryExpression	0		719946	0					
ANR	720060	Argument	R_MODE_JSON		719946	3					
ANR	720061	Identifier	R_MODE_JSON		719946	0					
ANR	720062	ExpressionStatement	"r_cons_println ( ""]"" )"	3236:2:91757:91777	719946	2	True				
ANR	720063	CallExpression	"r_cons_println ( ""]"" )"		719946	0					
ANR	720064	Callee	r_cons_println		719946	0					
ANR	720065	Identifier	r_cons_println		719946	0					
ANR	720066	ArgumentList	"""]"""		719946	1					
ANR	720067	Argument	"""]"""		719946	0					
ANR	720068	PrimaryExpression	"""]"""		719946	0					
ANR	720069	ReturnStatement	return true ;	3237:2:91781:91792	719946	3	True				
ANR	720070	Identifier	true		719946	0					
ANR	720071	ElseStatement	else		719946	0					
ANR	720072	IfStatement	if ( ! ( IS_MODE_RAD ( mode ) || IS_MODE_SET ( mode ) ) )		719946	0					
ANR	720073	Condition	! ( IS_MODE_RAD ( mode ) || IS_MODE_SET ( mode ) )	3238:12:91806:91848	719946	0	True				
ANR	720074	UnaryOperationExpression	! ( IS_MODE_RAD ( mode ) || IS_MODE_SET ( mode ) )		719946	0					
ANR	720075	UnaryOperator	!		719946	0					
ANR	720076	OrExpression	IS_MODE_RAD ( mode ) || IS_MODE_SET ( mode )		719946	1		||			
ANR	720077	CallExpression	IS_MODE_RAD ( mode )		719946	0					
ANR	720078	Callee	IS_MODE_RAD		719946	0					
ANR	720079	Identifier	IS_MODE_RAD		719946	0					
ANR	720080	ArgumentList	mode		719946	1					
ANR	720081	Argument	mode		719946	0					
ANR	720082	Identifier	mode		719946	0					
ANR	720083	CallExpression	IS_MODE_SET ( mode )		719946	1					
ANR	720084	Callee	IS_MODE_SET		719946	0					
ANR	720085	Identifier	IS_MODE_SET		719946	0					
ANR	720086	ArgumentList	mode		719946	1					
ANR	720087	Argument	mode		719946	0					
ANR	720088	Identifier	mode		719946	0					
ANR	720089	CompoundStatement		22:57:477:477	719946	1					
ANR	720090	ExpressionStatement	"bin_mem_print ( mem , 7 , 0 , mode )"	3239:2:91855:91886	719946	0	True				
ANR	720091	CallExpression	"bin_mem_print ( mem , 7 , 0 , mode )"		719946	0					
ANR	720092	Callee	bin_mem_print		719946	0					
ANR	720093	Identifier	bin_mem_print		719946	0					
ANR	720094	ArgumentList	mem		719946	1					
ANR	720095	Argument	mem		719946	0					
ANR	720096	Identifier	mem		719946	0					
ANR	720097	Argument	7		719946	1					
ANR	720098	PrimaryExpression	7		719946	0					
ANR	720099	Argument	0		719946	2					
ANR	720100	PrimaryExpression	0		719946	0					
ANR	720101	Argument	mode		719946	3					
ANR	720102	Identifier	mode		719946	0					
ANR	720103	ReturnStatement	return true ;	3241:1:91892:91903	719946	5	True				
ANR	720104	Identifier	true		719946	0					
ANR	720105	ReturnType	static int		719946	1					
ANR	720106	Identifier	bin_mem		719946	2					
ANR	720107	ParameterList	"RCore * r , int mode"		719946	3					
ANR	720108	Parameter	RCore * r	3217:19:91353:91360	719946	0	True				
ANR	720109	ParameterType	RCore *		719946	0					
ANR	720110	Identifier	r		719946	1					
ANR	720111	Parameter	int mode	3217:29:91363:91370	719946	1	True				
ANR	720112	ParameterType	int		719946	0					
ANR	720113	Identifier	mode		719946	1					
ANR	720114	CFGEntryNode	ENTRY		719946		True				
ANR	720115	CFGExitNode	EXIT		719946		True				
ANR	720116	Symbol	NULL		719946						
ANR	720117	Symbol	false		719946						
ANR	720118	Symbol	IS_MODE_JSON		719946						
ANR	720119	Symbol	IS_MODE_SET		719946						
ANR	720120	Symbol	R_MODE_JSON		719946						
ANR	720121	Symbol	mode		719946						
ANR	720122	Symbol	r		719946						
ANR	720123	Symbol	mem		719946						
ANR	720124	Symbol	r_bin_get_mem		719946						
ANR	720125	Symbol	r -> bin		719946						
ANR	720126	Symbol	true		719946						
ANR	720127	Symbol	IS_MODE_RAD		719946						
ANR	720128	Symbol	* r		719946						
ANR	720129	Function	bin_pe_versioninfo	3244:0:91908:97402							
ANR	720130	FunctionDef	"bin_pe_versioninfo (RCore * r , int mode)"		720129	0					
ANR	720131	CompoundStatement		3244:51:91959:97402	720129	0					
ANR	720132	IdentifierDeclStatement	Sdb * sdb = NULL ;	3245:1:91962:91977	720129	0	True				
ANR	720133	IdentifierDecl	* sdb = NULL		720129	0					
ANR	720134	IdentifierDeclType	Sdb *		720129	0					
ANR	720135	Identifier	sdb		720129	1					
ANR	720136	AssignmentExpression	* sdb = NULL		720129	2		=			
ANR	720137	Identifier	NULL		720129	0					
ANR	720138	Identifier	NULL		720129	1					
ANR	720139	IdentifierDeclStatement	int num_version = 0 ;	3246:1:91980:91999	720129	1	True				
ANR	720140	IdentifierDecl	num_version = 0		720129	0					
ANR	720141	IdentifierDeclType	int		720129	0					
ANR	720142	Identifier	num_version		720129	1					
ANR	720143	AssignmentExpression	num_version = 0		720129	2		=			
ANR	720144	Identifier	num_version		720129	0					
ANR	720145	PrimaryExpression	0		720129	1					
ANR	720146	IdentifierDeclStatement	int num_stringtable = 0 ;	3247:1:92002:92025	720129	2	True				
ANR	720147	IdentifierDecl	num_stringtable = 0		720129	0					
ANR	720148	IdentifierDeclType	int		720129	0					
ANR	720149	Identifier	num_stringtable		720129	1					
ANR	720150	AssignmentExpression	num_stringtable = 0		720129	2		=			
ANR	720151	Identifier	num_stringtable		720129	0					
ANR	720152	PrimaryExpression	0		720129	1					
ANR	720153	IdentifierDeclStatement	int num_string = 0 ;	3248:1:92028:92046	720129	3	True				
ANR	720154	IdentifierDecl	num_string = 0		720129	0					
ANR	720155	IdentifierDeclType	int		720129	0					
ANR	720156	Identifier	num_string		720129	1					
ANR	720157	AssignmentExpression	num_string = 0		720129	2		=			
ANR	720158	Identifier	num_string		720129	0					
ANR	720159	PrimaryExpression	0		720129	1					
ANR	720160	IdentifierDeclStatement	"const char * format_version = ""bin/cur/info/vs_version_info/VS_VERSIONINFO%d"" ;"	3249:1:92049:92125	720129	4	True				
ANR	720161	IdentifierDecl	"* format_version = ""bin/cur/info/vs_version_info/VS_VERSIONINFO%d"""		720129	0					
ANR	720162	IdentifierDeclType	const char *		720129	0					
ANR	720163	Identifier	format_version		720129	1					
ANR	720164	AssignmentExpression	"* format_version = ""bin/cur/info/vs_version_info/VS_VERSIONINFO%d"""		720129	2		=			
ANR	720165	Identifier	format_version		720129	0					
ANR	720166	PrimaryExpression	"""bin/cur/info/vs_version_info/VS_VERSIONINFO%d"""		720129	1					
ANR	720167	IdentifierDeclStatement	"const char * format_stringtable = ""%s/string_file_info/stringtable%d"" ;"	3250:1:92128:92196	720129	5	True				
ANR	720168	IdentifierDecl	"* format_stringtable = ""%s/string_file_info/stringtable%d"""		720129	0					
ANR	720169	IdentifierDeclType	const char *		720129	0					
ANR	720170	Identifier	format_stringtable		720129	1					
ANR	720171	AssignmentExpression	"* format_stringtable = ""%s/string_file_info/stringtable%d"""		720129	2		=			
ANR	720172	Identifier	format_stringtable		720129	0					
ANR	720173	PrimaryExpression	"""%s/string_file_info/stringtable%d"""		720129	1					
ANR	720174	IdentifierDeclStatement	"const char * format_string = ""%s/string%d"" ;"	3251:1:92199:92240	720129	6	True				
ANR	720175	IdentifierDecl	"* format_string = ""%s/string%d"""		720129	0					
ANR	720176	IdentifierDeclType	const char *		720129	0					
ANR	720177	Identifier	format_string		720129	1					
ANR	720178	AssignmentExpression	"* format_string = ""%s/string%d"""		720129	2		=			
ANR	720179	Identifier	format_string		720129	0					
ANR	720180	PrimaryExpression	"""%s/string%d"""		720129	1					
ANR	720181	IfStatement	if ( ! IS_MODE_JSON ( mode ) )		720129	7					
ANR	720182	Condition	! IS_MODE_JSON ( mode )	3252:5:92247:92266	720129	0	True				
ANR	720183	UnaryOperationExpression	! IS_MODE_JSON ( mode )		720129	0					
ANR	720184	UnaryOperator	!		720129	0					
ANR	720185	CallExpression	IS_MODE_JSON ( mode )		720129	1					
ANR	720186	Callee	IS_MODE_JSON		720129	0					
ANR	720187	Identifier	IS_MODE_JSON		720129	0					
ANR	720188	ArgumentList	mode		720129	1					
ANR	720189	Argument	mode		720129	0					
ANR	720190	Identifier	mode		720129	0					
ANR	720191	CompoundStatement		9:27:309:309	720129	1					
ANR	720192	ExpressionStatement	"r_cons_printf ( ""=== VS_VERSIONINFO ===\\n\\n"" )"	3253:2:92273:92317	720129	0	True				
ANR	720193	CallExpression	"r_cons_printf ( ""=== VS_VERSIONINFO ===\\n\\n"" )"		720129	0					
ANR	720194	Callee	r_cons_printf		720129	0					
ANR	720195	Identifier	r_cons_printf		720129	0					
ANR	720196	ArgumentList	"""=== VS_VERSIONINFO ===\\n\\n"""		720129	1					
ANR	720197	Argument	"""=== VS_VERSIONINFO ===\\n\\n"""		720129	0					
ANR	720198	PrimaryExpression	"""=== VS_VERSIONINFO ===\\n\\n"""		720129	0					
ANR	720199	IdentifierDeclStatement	bool firstit_dowhile = true ;	3255:1:92323:92350	720129	8	True				
ANR	720200	IdentifierDecl	firstit_dowhile = true		720129	0					
ANR	720201	IdentifierDeclType	bool		720129	0					
ANR	720202	Identifier	firstit_dowhile		720129	1					
ANR	720203	AssignmentExpression	firstit_dowhile = true		720129	2		=			
ANR	720204	Identifier	true		720129	0					
ANR	720205	Identifier	true		720129	1					
ANR	720206	DoStatement	do		720129	9					
ANR	720207	CompoundStatement		26:2:744:821	720129	0					
ANR	720208	IdentifierDeclStatement	"char * path_version = sdb_fmt ( format_version , num_version ) ;"	3257:2:92360:92418	720129	0	True				
ANR	720209	IdentifierDecl	"* path_version = sdb_fmt ( format_version , num_version )"		720129	0					
ANR	720210	IdentifierDeclType	char *		720129	0					
ANR	720211	Identifier	path_version		720129	1					
ANR	720212	AssignmentExpression	"* path_version = sdb_fmt ( format_version , num_version )"		720129	2		=			
ANR	720213	Identifier	path_version		720129	0					
ANR	720214	CallExpression	"sdb_fmt ( format_version , num_version )"		720129	1					
ANR	720215	Callee	sdb_fmt		720129	0					
ANR	720216	Identifier	sdb_fmt		720129	0					
ANR	720217	ArgumentList	format_version		720129	1					
ANR	720218	Argument	format_version		720129	0					
ANR	720219	Identifier	format_version		720129	0					
ANR	720220	Argument	num_version		720129	1					
ANR	720221	Identifier	num_version		720129	0					
ANR	720222	IfStatement	"if ( ! ( sdb = sdb_ns_path ( r -> sdb , path_version , 0 ) ) )"		720129	1					
ANR	720223	Condition	"! ( sdb = sdb_ns_path ( r -> sdb , path_version , 0 ) )"	3258:6:92426:92471	720129	0	True				
ANR	720224	UnaryOperationExpression	"! ( sdb = sdb_ns_path ( r -> sdb , path_version , 0 ) )"		720129	0					
ANR	720225	UnaryOperator	!		720129	0					
ANR	720226	AssignmentExpression	"sdb = sdb_ns_path ( r -> sdb , path_version , 0 )"		720129	1		=			
ANR	720227	Identifier	sdb		720129	0					
ANR	720228	CallExpression	"sdb_ns_path ( r -> sdb , path_version , 0 )"		720129	1					
ANR	720229	Callee	sdb_ns_path		720129	0					
ANR	720230	Identifier	sdb_ns_path		720129	0					
ANR	720231	ArgumentList	r -> sdb		720129	1					
ANR	720232	Argument	r -> sdb		720129	0					
ANR	720233	PtrMemberAccess	r -> sdb		720129	0					
ANR	720234	Identifier	r		720129	0					
ANR	720235	Identifier	sdb		720129	1					
ANR	720236	Argument	path_version		720129	1					
ANR	720237	Identifier	path_version		720129	0					
ANR	720238	Argument	0		720129	2					
ANR	720239	PrimaryExpression	0		720129	0					
ANR	720240	CompoundStatement		15:54:514:514	720129	1					
ANR	720241	BreakStatement	break ;	3259:3:92479:92484	720129	0	True				
ANR	720242	IfStatement	if ( ! firstit_dowhile && IS_MODE_JSON ( mode ) )		720129	2					
ANR	720243	Condition	! firstit_dowhile && IS_MODE_JSON ( mode )	3261:6:92496:92534	720129	0	True				
ANR	720244	AndExpression	! firstit_dowhile && IS_MODE_JSON ( mode )		720129	0		&&			
ANR	720245	UnaryOperationExpression	! firstit_dowhile		720129	0					
ANR	720246	UnaryOperator	!		720129	0					
ANR	720247	Identifier	firstit_dowhile		720129	1					
ANR	720248	CallExpression	IS_MODE_JSON ( mode )		720129	1					
ANR	720249	Callee	IS_MODE_JSON		720129	0					
ANR	720250	Identifier	IS_MODE_JSON		720129	0					
ANR	720251	ArgumentList	mode		720129	1					
ANR	720252	Argument	mode		720129	0					
ANR	720253	Identifier	mode		720129	0					
ANR	720254	CompoundStatement		18:47:577:577	720129	1					
ANR	720255	ExpressionStatement	"r_cons_printf ( "","" )"	3262:3:92542:92561	720129	0	True				
ANR	720256	CallExpression	"r_cons_printf ( "","" )"		720129	0					
ANR	720257	Callee	r_cons_printf		720129	0					
ANR	720258	Identifier	r_cons_printf		720129	0					
ANR	720259	ArgumentList	""","""		720129	1					
ANR	720260	Argument	""","""		720129	0					
ANR	720261	PrimaryExpression	""","""		720129	0					
ANR	720262	IfStatement	if ( IS_MODE_JSON ( mode ) )		720129	3					
ANR	720263	Condition	IS_MODE_JSON ( mode )	3264:6:92573:92591	720129	0	True				
ANR	720264	CallExpression	IS_MODE_JSON ( mode )		720129	0					
ANR	720265	Callee	IS_MODE_JSON		720129	0					
ANR	720266	Identifier	IS_MODE_JSON		720129	0					
ANR	720267	ArgumentList	mode		720129	1					
ANR	720268	Argument	mode		720129	0					
ANR	720269	Identifier	mode		720129	0					
ANR	720270	CompoundStatement		21:27:634:634	720129	1					
ANR	720271	ExpressionStatement	"r_cons_printf ( ""{\\""VS_FIXEDFILEINFO\\"":{"" )"	3265:3:92599:92640	720129	0	True				
ANR	720272	CallExpression	"r_cons_printf ( ""{\\""VS_FIXEDFILEINFO\\"":{"" )"		720129	0					
ANR	720273	Callee	r_cons_printf		720129	0					
ANR	720274	Identifier	r_cons_printf		720129	0					
ANR	720275	ArgumentList	"""{\\""VS_FIXEDFILEINFO\\"":{"""		720129	1					
ANR	720276	Argument	"""{\\""VS_FIXEDFILEINFO\\"":{"""		720129	0					
ANR	720277	PrimaryExpression	"""{\\""VS_FIXEDFILEINFO\\"":{"""		720129	0					
ANR	720278	ElseStatement	else		720129	0					
ANR	720279	CompoundStatement		23:9:691:691	720129	0					
ANR	720280	ExpressionStatement	"r_cons_printf ( ""# VS_FIXEDFILEINFO\\n\\n"" )"	3267:3:92656:92696	720129	0	True				
ANR	720281	CallExpression	"r_cons_printf ( ""# VS_FIXEDFILEINFO\\n\\n"" )"		720129	0					
ANR	720282	Callee	r_cons_printf		720129	0					
ANR	720283	Identifier	r_cons_printf		720129	0					
ANR	720284	ArgumentList	"""# VS_FIXEDFILEINFO\\n\\n"""		720129	1					
ANR	720285	Argument	"""# VS_FIXEDFILEINFO\\n\\n"""		720129	0					
ANR	720286	PrimaryExpression	"""# VS_FIXEDFILEINFO\\n\\n"""		720129	0					
ANR	720287	IdentifierDeclStatement	"const char * path_fixedfileinfo = sdb_fmt ( ""%s/fixed_file_info"" , path_version ) ;"	3269:2:92704:92781	720129	4	True				
ANR	720288	IdentifierDecl	"* path_fixedfileinfo = sdb_fmt ( ""%s/fixed_file_info"" , path_version )"		720129	0					
ANR	720289	IdentifierDeclType	const char *		720129	0					
ANR	720290	Identifier	path_fixedfileinfo		720129	1					
ANR	720291	AssignmentExpression	"* path_fixedfileinfo = sdb_fmt ( ""%s/fixed_file_info"" , path_version )"		720129	2		=			
ANR	720292	Identifier	path_fixedfileinfo		720129	0					
ANR	720293	CallExpression	"sdb_fmt ( ""%s/fixed_file_info"" , path_version )"		720129	1					
ANR	720294	Callee	sdb_fmt		720129	0					
ANR	720295	Identifier	sdb_fmt		720129	0					
ANR	720296	ArgumentList	"""%s/fixed_file_info"""		720129	1					
ANR	720297	Argument	"""%s/fixed_file_info"""		720129	0					
ANR	720298	PrimaryExpression	"""%s/fixed_file_info"""		720129	0					
ANR	720299	Argument	path_version		720129	1					
ANR	720300	Identifier	path_version		720129	0					
ANR	720301	IfStatement	"if ( ! ( sdb = sdb_ns_path ( r -> sdb , path_fixedfileinfo , 0 ) ) )"		720129	5					
ANR	720302	Condition	"! ( sdb = sdb_ns_path ( r -> sdb , path_fixedfileinfo , 0 ) )"	3270:6:92789:92840	720129	0	True				
ANR	720303	UnaryOperationExpression	"! ( sdb = sdb_ns_path ( r -> sdb , path_fixedfileinfo , 0 ) )"		720129	0					
ANR	720304	UnaryOperator	!		720129	0					
ANR	720305	AssignmentExpression	"sdb = sdb_ns_path ( r -> sdb , path_fixedfileinfo , 0 )"		720129	1		=			
ANR	720306	Identifier	sdb		720129	0					
ANR	720307	CallExpression	"sdb_ns_path ( r -> sdb , path_fixedfileinfo , 0 )"		720129	1					
ANR	720308	Callee	sdb_ns_path		720129	0					
ANR	720309	Identifier	sdb_ns_path		720129	0					
ANR	720310	ArgumentList	r -> sdb		720129	1					
ANR	720311	Argument	r -> sdb		720129	0					
ANR	720312	PtrMemberAccess	r -> sdb		720129	0					
ANR	720313	Identifier	r		720129	0					
ANR	720314	Identifier	sdb		720129	1					
ANR	720315	Argument	path_fixedfileinfo		720129	1					
ANR	720316	Identifier	path_fixedfileinfo		720129	0					
ANR	720317	Argument	0		720129	2					
ANR	720318	PrimaryExpression	0		720129	0					
ANR	720319	CompoundStatement		27:60:883:883	720129	1					
ANR	720320	ExpressionStatement	"r_cons_printf ( ""}"" )"	3271:3:92848:92867	720129	0	True				
ANR	720321	CallExpression	"r_cons_printf ( ""}"" )"		720129	0					
ANR	720322	Callee	r_cons_printf		720129	0					
ANR	720323	Identifier	r_cons_printf		720129	0					
ANR	720324	ArgumentList	"""}"""		720129	1					
ANR	720325	Argument	"""}"""		720129	0					
ANR	720326	PrimaryExpression	"""}"""		720129	0					
ANR	720327	BreakStatement	break ;	3272:3:92872:92877	720129	1	True				
ANR	720328	IfStatement	if ( IS_MODE_JSON ( mode ) )		720129	6					
ANR	720329	Condition	IS_MODE_JSON ( mode )	3274:6:92889:92907	720129	0	True				
ANR	720330	CallExpression	IS_MODE_JSON ( mode )		720129	0					
ANR	720331	Callee	IS_MODE_JSON		720129	0					
ANR	720332	Identifier	IS_MODE_JSON		720129	0					
ANR	720333	ArgumentList	mode		720129	1					
ANR	720334	Argument	mode		720129	0					
ANR	720335	Identifier	mode		720129	0					
ANR	720336	CompoundStatement		31:27:950:950	720129	1					
ANR	720337	Statement	r_cons_printf	3275:3:92915:92927	720129	0	True				
ANR	720338	Statement	(	3275:17:92929:92929	720129	1	True				
ANR	720339	Statement	"""\\""Signature\\"":%"""	3275:18:92930:92946	720129	2	True				
ANR	720340	Statement	PFMT64u	3275:35:92947:92953	720129	3	True				
ANR	720341	Statement	""","""	3275:42:92954:92956	720129	4	True				
ANR	720342	Statement	","	3275:45:92957:92957	720129	5	True				
ANR	720343	Statement	sdb_num_get	3275:47:92959:92969	720129	6	True				
ANR	720344	Statement	(	3275:59:92971:92971	720129	7	True				
ANR	720345	Statement	sdb	3275:60:92972:92974	720129	8	True				
ANR	720346	Statement	","	3275:63:92975:92975	720129	9	True				
ANR	720347	Statement	"""Signature"""	3275:65:92977:92987	720129	10	True				
ANR	720348	Statement	","	3275:76:92988:92988	720129	11	True				
ANR	720349	Statement	0	3275:78:92990:92990	720129	12	True				
ANR	720350	Statement	)	3275:79:92991:92991	720129	13	True				
ANR	720351	Statement	)	3275:80:92992:92992	720129	14	True				
ANR	720352	ExpressionStatement		3275:81:92993:92993	720129	15	True				
ANR	720353	Statement	r_cons_printf	3276:3:92998:93010	720129	16	True				
ANR	720354	Statement	(	3276:17:93012:93012	720129	17	True				
ANR	720355	Statement	"""\\""StrucVersion\\"":%"""	3276:18:93013:93032	720129	18	True				
ANR	720356	Statement	PFMT64u	3276:38:93033:93039	720129	19	True				
ANR	720357	Statement	""","""	3276:45:93040:93042	720129	20	True				
ANR	720358	Statement	","	3276:48:93043:93043	720129	21	True				
ANR	720359	Statement	sdb_num_get	3276:50:93045:93055	720129	22	True				
ANR	720360	Statement	(	3276:62:93057:93057	720129	23	True				
ANR	720361	Statement	sdb	3276:63:93058:93060	720129	24	True				
ANR	720362	Statement	","	3276:66:93061:93061	720129	25	True				
ANR	720363	Statement	"""StrucVersion"""	3276:68:93063:93076	720129	26	True				
ANR	720364	Statement	","	3276:82:93077:93077	720129	27	True				
ANR	720365	Statement	0	3276:84:93079:93079	720129	28	True				
ANR	720366	Statement	)	3276:85:93080:93080	720129	29	True				
ANR	720367	Statement	)	3276:86:93081:93081	720129	30	True				
ANR	720368	ExpressionStatement		3276:87:93082:93082	720129	31	True				
ANR	720369	Statement	r_cons_printf	3277:3:93087:93099	720129	32	True				
ANR	720370	Statement	(	3277:17:93101:93101	720129	33	True				
ANR	720371	Statement	"""\\""FileVersion\\"":\\""%"""	3277:18:93102:93122	720129	34	True				
ANR	720372	Statement	PFMT64d	3277:39:93123:93129	720129	35	True				
ANR	720373	Statement	""".%"""	3277:46:93130:93133	720129	36	True				
ANR	720374	Statement	PFMT64d	3277:50:93134:93140	720129	37	True				
ANR	720375	Statement	""".%"""	3277:57:93141:93144	720129	38	True				
ANR	720376	Statement	PFMT64d	3277:61:93145:93151	720129	39	True				
ANR	720377	Statement	""".%"""	3277:68:93152:93155	720129	40	True				
ANR	720378	Statement	PFMT64d	3277:72:93156:93162	720129	41	True				
ANR	720379	Statement	"""\\"","""	3277:79:93163:93167	720129	42	True				
ANR	720380	Statement	","	3277:84:93168:93168	720129	43	True				
ANR	720381	Statement	sdb_num_get	3278:4:93174:93184	720129	44	True				
ANR	720382	Statement	(	3278:16:93186:93186	720129	45	True				
ANR	720383	Statement	sdb	3278:17:93187:93189	720129	46	True				
ANR	720384	Statement	","	3278:20:93190:93190	720129	47	True				
ANR	720385	Statement	"""FileVersionMS"""	3278:22:93192:93206	720129	48	True				
ANR	720386	Statement	","	3278:37:93207:93207	720129	49	True				
ANR	720387	Statement	0	3278:39:93209:93209	720129	50	True				
ANR	720388	Statement	)	3278:40:93210:93210	720129	51	True				
ANR	720389	Statement	>>	3278:42:93212:93213	720129	52	True				
ANR	720390	Statement	16	3278:45:93215:93216	720129	53	True				
ANR	720391	Statement	","	3278:47:93217:93217	720129	54	True				
ANR	720392	Statement	sdb_num_get	3279:4:93223:93233	720129	55	True				
ANR	720393	Statement	(	3279:16:93235:93235	720129	56	True				
ANR	720394	Statement	sdb	3279:17:93236:93238	720129	57	True				
ANR	720395	Statement	","	3279:20:93239:93239	720129	58	True				
ANR	720396	Statement	"""FileVersionMS"""	3279:22:93241:93255	720129	59	True				
ANR	720397	Statement	","	3279:37:93256:93256	720129	60	True				
ANR	720398	Statement	0	3279:39:93258:93258	720129	61	True				
ANR	720399	Statement	)	3279:40:93259:93259	720129	62	True				
ANR	720400	Statement	&	3279:42:93261:93261	720129	63	True				
ANR	720401	Statement	0xFFFF	3279:44:93263:93268	720129	64	True				
ANR	720402	Statement	","	3279:50:93269:93269	720129	65	True				
ANR	720403	Statement	sdb_num_get	3280:4:93275:93285	720129	66	True				
ANR	720404	Statement	(	3280:16:93287:93287	720129	67	True				
ANR	720405	Statement	sdb	3280:17:93288:93290	720129	68	True				
ANR	720406	Statement	","	3280:20:93291:93291	720129	69	True				
ANR	720407	Statement	"""FileVersionLS"""	3280:22:93293:93307	720129	70	True				
ANR	720408	Statement	","	3280:37:93308:93308	720129	71	True				
ANR	720409	Statement	0	3280:39:93310:93310	720129	72	True				
ANR	720410	Statement	)	3280:40:93311:93311	720129	73	True				
ANR	720411	Statement	>>	3280:42:93313:93314	720129	74	True				
ANR	720412	Statement	16	3280:45:93316:93317	720129	75	True				
ANR	720413	Statement	","	3280:47:93318:93318	720129	76	True				
ANR	720414	Statement	sdb_num_get	3281:4:93324:93334	720129	77	True				
ANR	720415	Statement	(	3281:16:93336:93336	720129	78	True				
ANR	720416	Statement	sdb	3281:17:93337:93339	720129	79	True				
ANR	720417	Statement	","	3281:20:93340:93340	720129	80	True				
ANR	720418	Statement	"""FileVersionLS"""	3281:22:93342:93356	720129	81	True				
ANR	720419	Statement	","	3281:37:93357:93357	720129	82	True				
ANR	720420	Statement	0	3281:39:93359:93359	720129	83	True				
ANR	720421	Statement	)	3281:40:93360:93360	720129	84	True				
ANR	720422	Statement	&	3281:42:93362:93362	720129	85	True				
ANR	720423	Statement	0xFFFF	3281:44:93364:93369	720129	86	True				
ANR	720424	Statement	)	3281:50:93370:93370	720129	87	True				
ANR	720425	ExpressionStatement		3281:51:93371:93371	720129	88	True				
ANR	720426	Statement	r_cons_printf	3282:3:93376:93388	720129	89	True				
ANR	720427	Statement	(	3282:17:93390:93390	720129	90	True				
ANR	720428	Statement	"""\\""ProductVersion\\"":\\""%"""	3282:18:93391:93414	720129	91	True				
ANR	720429	Statement	PFMT64d	3282:42:93415:93421	720129	92	True				
ANR	720430	Statement	""".%"""	3282:49:93422:93425	720129	93	True				
ANR	720431	Statement	PFMT64d	3282:53:93426:93432	720129	94	True				
ANR	720432	Statement	""".%"""	3282:60:93433:93436	720129	95	True				
ANR	720433	Statement	PFMT64d	3282:64:93437:93443	720129	96	True				
ANR	720434	Statement	""".%"""	3282:71:93444:93447	720129	97	True				
ANR	720435	Statement	PFMT64d	3282:75:93448:93454	720129	98	True				
ANR	720436	Statement	"""\\"","""	3282:82:93455:93459	720129	99	True				
ANR	720437	Statement	","	3282:87:93460:93460	720129	100	True				
ANR	720438	Statement	sdb_num_get	3283:4:93466:93476	720129	101	True				
ANR	720439	Statement	(	3283:16:93478:93478	720129	102	True				
ANR	720440	Statement	sdb	3283:17:93479:93481	720129	103	True				
ANR	720441	Statement	","	3283:20:93482:93482	720129	104	True				
ANR	720442	Statement	"""ProductVersionMS"""	3283:22:93484:93501	720129	105	True				
ANR	720443	Statement	","	3283:40:93502:93502	720129	106	True				
ANR	720444	Statement	0	3283:42:93504:93504	720129	107	True				
ANR	720445	Statement	)	3283:43:93505:93505	720129	108	True				
ANR	720446	Statement	>>	3283:45:93507:93508	720129	109	True				
ANR	720447	Statement	16	3283:48:93510:93511	720129	110	True				
ANR	720448	Statement	","	3283:50:93512:93512	720129	111	True				
ANR	720449	Statement	sdb_num_get	3284:4:93518:93528	720129	112	True				
ANR	720450	Statement	(	3284:16:93530:93530	720129	113	True				
ANR	720451	Statement	sdb	3284:17:93531:93533	720129	114	True				
ANR	720452	Statement	","	3284:20:93534:93534	720129	115	True				
ANR	720453	Statement	"""ProductVersionMS"""	3284:22:93536:93553	720129	116	True				
ANR	720454	Statement	","	3284:40:93554:93554	720129	117	True				
ANR	720455	Statement	0	3284:42:93556:93556	720129	118	True				
ANR	720456	Statement	)	3284:43:93557:93557	720129	119	True				
ANR	720457	Statement	&	3284:45:93559:93559	720129	120	True				
ANR	720458	Statement	0xFFFF	3284:47:93561:93566	720129	121	True				
ANR	720459	Statement	","	3284:53:93567:93567	720129	122	True				
ANR	720460	Statement	sdb_num_get	3285:4:93573:93583	720129	123	True				
ANR	720461	Statement	(	3285:16:93585:93585	720129	124	True				
ANR	720462	Statement	sdb	3285:17:93586:93588	720129	125	True				
ANR	720463	Statement	","	3285:20:93589:93589	720129	126	True				
ANR	720464	Statement	"""ProductVersionLS"""	3285:22:93591:93608	720129	127	True				
ANR	720465	Statement	","	3285:40:93609:93609	720129	128	True				
ANR	720466	Statement	0	3285:42:93611:93611	720129	129	True				
ANR	720467	Statement	)	3285:43:93612:93612	720129	130	True				
ANR	720468	Statement	>>	3285:45:93614:93615	720129	131	True				
ANR	720469	Statement	16	3285:48:93617:93618	720129	132	True				
ANR	720470	Statement	","	3285:50:93619:93619	720129	133	True				
ANR	720471	Statement	sdb_num_get	3286:4:93625:93635	720129	134	True				
ANR	720472	Statement	(	3286:16:93637:93637	720129	135	True				
ANR	720473	Statement	sdb	3286:17:93638:93640	720129	136	True				
ANR	720474	Statement	","	3286:20:93641:93641	720129	137	True				
ANR	720475	Statement	"""ProductVersionLS"""	3286:22:93643:93660	720129	138	True				
ANR	720476	Statement	","	3286:40:93661:93661	720129	139	True				
ANR	720477	Statement	0	3286:42:93663:93663	720129	140	True				
ANR	720478	Statement	)	3286:43:93664:93664	720129	141	True				
ANR	720479	Statement	&	3286:45:93666:93666	720129	142	True				
ANR	720480	Statement	0xFFFF	3286:47:93668:93673	720129	143	True				
ANR	720481	Statement	)	3286:53:93674:93674	720129	144	True				
ANR	720482	ExpressionStatement		3286:54:93675:93675	720129	145	True				
ANR	720483	Statement	r_cons_printf	3287:3:93680:93692	720129	146	True				
ANR	720484	Statement	(	3287:17:93694:93694	720129	147	True				
ANR	720485	Statement	"""\\""FileFlagsMask\\"":%"""	3287:18:93695:93715	720129	148	True				
ANR	720486	Statement	PFMT64u	3287:39:93716:93722	720129	149	True				
ANR	720487	Statement	""","""	3287:46:93723:93725	720129	150	True				
ANR	720488	Statement	","	3287:49:93726:93726	720129	151	True				
ANR	720489	Statement	sdb_num_get	3287:51:93728:93738	720129	152	True				
ANR	720490	Statement	(	3287:63:93740:93740	720129	153	True				
ANR	720491	Statement	sdb	3287:64:93741:93743	720129	154	True				
ANR	720492	Statement	","	3287:67:93744:93744	720129	155	True				
ANR	720493	Statement	"""FileFlagsMask"""	3287:69:93746:93760	720129	156	True				
ANR	720494	Statement	","	3287:84:93761:93761	720129	157	True				
ANR	720495	Statement	0	3287:86:93763:93763	720129	158	True				
ANR	720496	Statement	)	3287:87:93764:93764	720129	159	True				
ANR	720497	Statement	)	3287:88:93765:93765	720129	160	True				
ANR	720498	ExpressionStatement		3287:89:93766:93766	720129	161	True				
ANR	720499	Statement	r_cons_printf	3288:3:93771:93783	720129	162	True				
ANR	720500	Statement	(	3288:17:93785:93785	720129	163	True				
ANR	720501	Statement	"""\\""FileFlags\\"":%"""	3288:18:93786:93802	720129	164	True				
ANR	720502	Statement	PFMT64u	3288:35:93803:93809	720129	165	True				
ANR	720503	Statement	""","""	3288:42:93810:93812	720129	166	True				
ANR	720504	Statement	","	3288:45:93813:93813	720129	167	True				
ANR	720505	Statement	sdb_num_get	3288:47:93815:93825	720129	168	True				
ANR	720506	Statement	(	3288:59:93827:93827	720129	169	True				
ANR	720507	Statement	sdb	3288:60:93828:93830	720129	170	True				
ANR	720508	Statement	","	3288:63:93831:93831	720129	171	True				
ANR	720509	Statement	"""FileFlags"""	3288:65:93833:93843	720129	172	True				
ANR	720510	Statement	","	3288:76:93844:93844	720129	173	True				
ANR	720511	Statement	0	3288:78:93846:93846	720129	174	True				
ANR	720512	Statement	)	3288:79:93847:93847	720129	175	True				
ANR	720513	Statement	)	3288:80:93848:93848	720129	176	True				
ANR	720514	ExpressionStatement		3288:81:93849:93849	720129	177	True				
ANR	720515	Statement	r_cons_printf	3289:3:93854:93866	720129	178	True				
ANR	720516	Statement	(	3289:17:93868:93868	720129	179	True				
ANR	720517	Statement	"""\\""FileOS\\"":%"""	3289:18:93869:93882	720129	180	True				
ANR	720518	Statement	PFMT64u	3289:32:93883:93889	720129	181	True				
ANR	720519	Statement	""","""	3289:39:93890:93892	720129	182	True				
ANR	720520	Statement	","	3289:42:93893:93893	720129	183	True				
ANR	720521	Statement	sdb_num_get	3289:44:93895:93905	720129	184	True				
ANR	720522	Statement	(	3289:56:93907:93907	720129	185	True				
ANR	720523	Statement	sdb	3289:57:93908:93910	720129	186	True				
ANR	720524	Statement	","	3289:60:93911:93911	720129	187	True				
ANR	720525	Statement	"""FileOS"""	3289:62:93913:93920	720129	188	True				
ANR	720526	Statement	","	3289:70:93921:93921	720129	189	True				
ANR	720527	Statement	0	3289:72:93923:93923	720129	190	True				
ANR	720528	Statement	)	3289:73:93924:93924	720129	191	True				
ANR	720529	Statement	)	3289:74:93925:93925	720129	192	True				
ANR	720530	ExpressionStatement		3289:75:93926:93926	720129	193	True				
ANR	720531	Statement	r_cons_printf	3290:3:93931:93943	720129	194	True				
ANR	720532	Statement	(	3290:17:93945:93945	720129	195	True				
ANR	720533	Statement	"""\\""FileType\\"":%"""	3290:18:93946:93961	720129	196	True				
ANR	720534	Statement	PFMT64u	3290:34:93962:93968	720129	197	True				
ANR	720535	Statement	""","""	3290:41:93969:93971	720129	198	True				
ANR	720536	Statement	","	3290:44:93972:93972	720129	199	True				
ANR	720537	Statement	sdb_num_get	3290:46:93974:93984	720129	200	True				
ANR	720538	Statement	(	3290:58:93986:93986	720129	201	True				
ANR	720539	Statement	sdb	3290:59:93987:93989	720129	202	True				
ANR	720540	Statement	","	3290:62:93990:93990	720129	203	True				
ANR	720541	Statement	"""FileType"""	3290:64:93992:94001	720129	204	True				
ANR	720542	Statement	","	3290:74:94002:94002	720129	205	True				
ANR	720543	Statement	0	3290:76:94004:94004	720129	206	True				
ANR	720544	Statement	)	3290:77:94005:94005	720129	207	True				
ANR	720545	Statement	)	3290:78:94006:94006	720129	208	True				
ANR	720546	ExpressionStatement		3290:79:94007:94007	720129	209	True				
ANR	720547	Statement	r_cons_printf	3291:3:94012:94024	720129	210	True				
ANR	720548	Statement	(	3291:17:94026:94026	720129	211	True				
ANR	720549	Statement	"""\\""FileSubType\\"":%"""	3291:18:94027:94045	720129	212	True				
ANR	720550	Statement	PFMT64u	3291:37:94046:94052	720129	213	True				
ANR	720551	Statement	","	3291:44:94053:94053	720129	214	True				
ANR	720552	Statement	sdb_num_get	3291:46:94055:94065	720129	215	True				
ANR	720553	Statement	(	3291:58:94067:94067	720129	216	True				
ANR	720554	Statement	sdb	3291:59:94068:94070	720129	217	True				
ANR	720555	Statement	","	3291:62:94071:94071	720129	218	True				
ANR	720556	Statement	"""FileSubType"""	3291:64:94073:94085	720129	219	True				
ANR	720557	Statement	","	3291:77:94086:94086	720129	220	True				
ANR	720558	Statement	0	3291:79:94088:94088	720129	221	True				
ANR	720559	Statement	)	3291:80:94089:94089	720129	222	True				
ANR	720560	Statement	)	3291:81:94090:94090	720129	223	True				
ANR	720561	ExpressionStatement		3291:82:94091:94091	720129	224	True				
ANR	720562	ExpressionStatement	"r_cons_printf ( ""},"" )"	3292:3:94096:94116	720129	225	True				
ANR	720563	CallExpression	"r_cons_printf ( ""},"" )"		720129	0					
ANR	720564	Callee	r_cons_printf		720129	0					
ANR	720565	Identifier	r_cons_printf		720129	0					
ANR	720566	ArgumentList	"""},"""		720129	1					
ANR	720567	Argument	"""},"""		720129	0					
ANR	720568	PrimaryExpression	"""},"""		720129	0					
ANR	720569	ElseStatement	else		720129	0					
ANR	720570	CompoundStatement		50:9:2167:2167	720129	0					
ANR	720571	Statement	r_cons_printf	3294:3:94132:94144	720129	0	True				
ANR	720572	Statement	(	3294:17:94146:94146	720129	1	True				
ANR	720573	Statement	"""  Signature: 0x%"""	3294:18:94147:94164	720129	2	True				
ANR	720574	Statement	PFMT64x	3294:36:94165:94171	720129	3	True				
ANR	720575	Statement	"""\\n"""	3294:43:94172:94175	720129	4	True				
ANR	720576	Statement	","	3294:47:94176:94176	720129	5	True				
ANR	720577	Statement	sdb_num_get	3294:49:94178:94188	720129	6	True				
ANR	720578	Statement	(	3294:61:94190:94190	720129	7	True				
ANR	720579	Statement	sdb	3294:62:94191:94193	720129	8	True				
ANR	720580	Statement	","	3294:65:94194:94194	720129	9	True				
ANR	720581	Statement	"""Signature"""	3294:67:94196:94206	720129	10	True				
ANR	720582	Statement	","	3294:78:94207:94207	720129	11	True				
ANR	720583	Statement	0	3294:80:94209:94209	720129	12	True				
ANR	720584	Statement	)	3294:81:94210:94210	720129	13	True				
ANR	720585	Statement	)	3294:82:94211:94211	720129	14	True				
ANR	720586	ExpressionStatement		3294:83:94212:94212	720129	15	True				
ANR	720587	Statement	r_cons_printf	3295:3:94217:94229	720129	16	True				
ANR	720588	Statement	(	3295:17:94231:94231	720129	17	True				
ANR	720589	Statement	"""  StrucVersion: 0x%"""	3295:18:94232:94252	720129	18	True				
ANR	720590	Statement	PFMT64x	3295:39:94253:94259	720129	19	True				
ANR	720591	Statement	"""\\n"""	3295:46:94260:94263	720129	20	True				
ANR	720592	Statement	","	3295:50:94264:94264	720129	21	True				
ANR	720593	Statement	sdb_num_get	3295:52:94266:94276	720129	22	True				
ANR	720594	Statement	(	3295:64:94278:94278	720129	23	True				
ANR	720595	Statement	sdb	3295:65:94279:94281	720129	24	True				
ANR	720596	Statement	","	3295:68:94282:94282	720129	25	True				
ANR	720597	Statement	"""StrucVersion"""	3295:70:94284:94297	720129	26	True				
ANR	720598	Statement	","	3295:84:94298:94298	720129	27	True				
ANR	720599	Statement	0	3295:86:94300:94300	720129	28	True				
ANR	720600	Statement	)	3295:87:94301:94301	720129	29	True				
ANR	720601	Statement	)	3295:88:94302:94302	720129	30	True				
ANR	720602	ExpressionStatement		3295:89:94303:94303	720129	31	True				
ANR	720603	Statement	r_cons_printf	3296:3:94308:94320	720129	32	True				
ANR	720604	Statement	(	3296:17:94322:94322	720129	33	True				
ANR	720605	Statement	"""  FileVersion: %"""	3296:18:94323:94340	720129	34	True				
ANR	720606	Statement	PFMT64d	3296:36:94341:94347	720129	35	True				
ANR	720607	Statement	""".%"""	3296:43:94348:94351	720129	36	True				
ANR	720608	Statement	PFMT64d	3296:47:94352:94358	720129	37	True				
ANR	720609	Statement	""".%"""	3296:54:94359:94362	720129	38	True				
ANR	720610	Statement	PFMT64d	3296:58:94363:94369	720129	39	True				
ANR	720611	Statement	""".%"""	3296:65:94370:94373	720129	40	True				
ANR	720612	Statement	PFMT64d	3296:69:94374:94380	720129	41	True				
ANR	720613	Statement	"""\\n"""	3296:76:94381:94384	720129	42	True				
ANR	720614	Statement	","	3296:80:94385:94385	720129	43	True				
ANR	720615	Statement	sdb_num_get	3297:4:94391:94401	720129	44	True				
ANR	720616	Statement	(	3297:16:94403:94403	720129	45	True				
ANR	720617	Statement	sdb	3297:17:94404:94406	720129	46	True				
ANR	720618	Statement	","	3297:20:94407:94407	720129	47	True				
ANR	720619	Statement	"""FileVersionMS"""	3297:22:94409:94423	720129	48	True				
ANR	720620	Statement	","	3297:37:94424:94424	720129	49	True				
ANR	720621	Statement	0	3297:39:94426:94426	720129	50	True				
ANR	720622	Statement	)	3297:40:94427:94427	720129	51	True				
ANR	720623	Statement	>>	3297:42:94429:94430	720129	52	True				
ANR	720624	Statement	16	3297:45:94432:94433	720129	53	True				
ANR	720625	Statement	","	3297:47:94434:94434	720129	54	True				
ANR	720626	Statement	sdb_num_get	3298:4:94440:94450	720129	55	True				
ANR	720627	Statement	(	3298:16:94452:94452	720129	56	True				
ANR	720628	Statement	sdb	3298:17:94453:94455	720129	57	True				
ANR	720629	Statement	","	3298:20:94456:94456	720129	58	True				
ANR	720630	Statement	"""FileVersionMS"""	3298:22:94458:94472	720129	59	True				
ANR	720631	Statement	","	3298:37:94473:94473	720129	60	True				
ANR	720632	Statement	0	3298:39:94475:94475	720129	61	True				
ANR	720633	Statement	)	3298:40:94476:94476	720129	62	True				
ANR	720634	Statement	&	3298:42:94478:94478	720129	63	True				
ANR	720635	Statement	0xFFFF	3298:44:94480:94485	720129	64	True				
ANR	720636	Statement	","	3298:50:94486:94486	720129	65	True				
ANR	720637	Statement	sdb_num_get	3299:4:94492:94502	720129	66	True				
ANR	720638	Statement	(	3299:16:94504:94504	720129	67	True				
ANR	720639	Statement	sdb	3299:17:94505:94507	720129	68	True				
ANR	720640	Statement	","	3299:20:94508:94508	720129	69	True				
ANR	720641	Statement	"""FileVersionLS"""	3299:22:94510:94524	720129	70	True				
ANR	720642	Statement	","	3299:37:94525:94525	720129	71	True				
ANR	720643	Statement	0	3299:39:94527:94527	720129	72	True				
ANR	720644	Statement	)	3299:40:94528:94528	720129	73	True				
ANR	720645	Statement	>>	3299:42:94530:94531	720129	74	True				
ANR	720646	Statement	16	3299:45:94533:94534	720129	75	True				
ANR	720647	Statement	","	3299:47:94535:94535	720129	76	True				
ANR	720648	Statement	sdb_num_get	3300:4:94541:94551	720129	77	True				
ANR	720649	Statement	(	3300:16:94553:94553	720129	78	True				
ANR	720650	Statement	sdb	3300:17:94554:94556	720129	79	True				
ANR	720651	Statement	","	3300:20:94557:94557	720129	80	True				
ANR	720652	Statement	"""FileVersionLS"""	3300:22:94559:94573	720129	81	True				
ANR	720653	Statement	","	3300:37:94574:94574	720129	82	True				
ANR	720654	Statement	0	3300:39:94576:94576	720129	83	True				
ANR	720655	Statement	)	3300:40:94577:94577	720129	84	True				
ANR	720656	Statement	&	3300:42:94579:94579	720129	85	True				
ANR	720657	Statement	0xFFFF	3300:44:94581:94586	720129	86	True				
ANR	720658	Statement	)	3300:50:94587:94587	720129	87	True				
ANR	720659	ExpressionStatement		3300:51:94588:94588	720129	88	True				
ANR	720660	Statement	r_cons_printf	3301:3:94593:94605	720129	89	True				
ANR	720661	Statement	(	3301:17:94607:94607	720129	90	True				
ANR	720662	Statement	"""  ProductVersion: %"""	3301:18:94608:94628	720129	91	True				
ANR	720663	Statement	PFMT64d	3301:39:94629:94635	720129	92	True				
ANR	720664	Statement	""".%"""	3301:46:94636:94639	720129	93	True				
ANR	720665	Statement	PFMT64d	3301:50:94640:94646	720129	94	True				
ANR	720666	Statement	""".%"""	3301:57:94647:94650	720129	95	True				
ANR	720667	Statement	PFMT64d	3301:61:94651:94657	720129	96	True				
ANR	720668	Statement	""".%"""	3301:68:94658:94661	720129	97	True				
ANR	720669	Statement	PFMT64d	3301:72:94662:94668	720129	98	True				
ANR	720670	Statement	"""\\n"""	3301:79:94669:94672	720129	99	True				
ANR	720671	Statement	","	3301:83:94673:94673	720129	100	True				
ANR	720672	Statement	sdb_num_get	3302:4:94679:94689	720129	101	True				
ANR	720673	Statement	(	3302:16:94691:94691	720129	102	True				
ANR	720674	Statement	sdb	3302:17:94692:94694	720129	103	True				
ANR	720675	Statement	","	3302:20:94695:94695	720129	104	True				
ANR	720676	Statement	"""ProductVersionMS"""	3302:22:94697:94714	720129	105	True				
ANR	720677	Statement	","	3302:40:94715:94715	720129	106	True				
ANR	720678	Statement	0	3302:42:94717:94717	720129	107	True				
ANR	720679	Statement	)	3302:43:94718:94718	720129	108	True				
ANR	720680	Statement	>>	3302:45:94720:94721	720129	109	True				
ANR	720681	Statement	16	3302:48:94723:94724	720129	110	True				
ANR	720682	Statement	","	3302:50:94725:94725	720129	111	True				
ANR	720683	Statement	sdb_num_get	3303:4:94731:94741	720129	112	True				
ANR	720684	Statement	(	3303:16:94743:94743	720129	113	True				
ANR	720685	Statement	sdb	3303:17:94744:94746	720129	114	True				
ANR	720686	Statement	","	3303:20:94747:94747	720129	115	True				
ANR	720687	Statement	"""ProductVersionMS"""	3303:22:94749:94766	720129	116	True				
ANR	720688	Statement	","	3303:40:94767:94767	720129	117	True				
ANR	720689	Statement	0	3303:42:94769:94769	720129	118	True				
ANR	720690	Statement	)	3303:43:94770:94770	720129	119	True				
ANR	720691	Statement	&	3303:45:94772:94772	720129	120	True				
ANR	720692	Statement	0xFFFF	3303:47:94774:94779	720129	121	True				
ANR	720693	Statement	","	3303:53:94780:94780	720129	122	True				
ANR	720694	Statement	sdb_num_get	3304:4:94786:94796	720129	123	True				
ANR	720695	Statement	(	3304:16:94798:94798	720129	124	True				
ANR	720696	Statement	sdb	3304:17:94799:94801	720129	125	True				
ANR	720697	Statement	","	3304:20:94802:94802	720129	126	True				
ANR	720698	Statement	"""ProductVersionLS"""	3304:22:94804:94821	720129	127	True				
ANR	720699	Statement	","	3304:40:94822:94822	720129	128	True				
ANR	720700	Statement	0	3304:42:94824:94824	720129	129	True				
ANR	720701	Statement	)	3304:43:94825:94825	720129	130	True				
ANR	720702	Statement	>>	3304:45:94827:94828	720129	131	True				
ANR	720703	Statement	16	3304:48:94830:94831	720129	132	True				
ANR	720704	Statement	","	3304:50:94832:94832	720129	133	True				
ANR	720705	Statement	sdb_num_get	3305:4:94838:94848	720129	134	True				
ANR	720706	Statement	(	3305:16:94850:94850	720129	135	True				
ANR	720707	Statement	sdb	3305:17:94851:94853	720129	136	True				
ANR	720708	Statement	","	3305:20:94854:94854	720129	137	True				
ANR	720709	Statement	"""ProductVersionLS"""	3305:22:94856:94873	720129	138	True				
ANR	720710	Statement	","	3305:40:94874:94874	720129	139	True				
ANR	720711	Statement	0	3305:42:94876:94876	720129	140	True				
ANR	720712	Statement	)	3305:43:94877:94877	720129	141	True				
ANR	720713	Statement	&	3305:45:94879:94879	720129	142	True				
ANR	720714	Statement	0xFFFF	3305:47:94881:94886	720129	143	True				
ANR	720715	Statement	)	3305:53:94887:94887	720129	144	True				
ANR	720716	ExpressionStatement		3305:54:94888:94888	720129	145	True				
ANR	720717	Statement	r_cons_printf	3306:3:94893:94905	720129	146	True				
ANR	720718	Statement	(	3306:17:94907:94907	720129	147	True				
ANR	720719	Statement	"""  FileFlagsMask: 0x%"""	3306:18:94908:94929	720129	148	True				
ANR	720720	Statement	PFMT64x	3306:40:94930:94936	720129	149	True				
ANR	720721	Statement	"""\\n"""	3306:47:94937:94940	720129	150	True				
ANR	720722	Statement	","	3306:51:94941:94941	720129	151	True				
ANR	720723	Statement	sdb_num_get	3306:53:94943:94953	720129	152	True				
ANR	720724	Statement	(	3306:65:94955:94955	720129	153	True				
ANR	720725	Statement	sdb	3306:66:94956:94958	720129	154	True				
ANR	720726	Statement	","	3306:69:94959:94959	720129	155	True				
ANR	720727	Statement	"""FileFlagsMask"""	3306:71:94961:94975	720129	156	True				
ANR	720728	Statement	","	3306:86:94976:94976	720129	157	True				
ANR	720729	Statement	0	3306:88:94978:94978	720129	158	True				
ANR	720730	Statement	)	3306:89:94979:94979	720129	159	True				
ANR	720731	Statement	)	3306:90:94980:94980	720129	160	True				
ANR	720732	ExpressionStatement		3306:91:94981:94981	720129	161	True				
ANR	720733	Statement	r_cons_printf	3307:3:94986:94998	720129	162	True				
ANR	720734	Statement	(	3307:17:95000:95000	720129	163	True				
ANR	720735	Statement	"""  FileFlags: 0x%"""	3307:18:95001:95018	720129	164	True				
ANR	720736	Statement	PFMT64x	3307:36:95019:95025	720129	165	True				
ANR	720737	Statement	"""\\n"""	3307:43:95026:95029	720129	166	True				
ANR	720738	Statement	","	3307:47:95030:95030	720129	167	True				
ANR	720739	Statement	sdb_num_get	3307:49:95032:95042	720129	168	True				
ANR	720740	Statement	(	3307:61:95044:95044	720129	169	True				
ANR	720741	Statement	sdb	3307:62:95045:95047	720129	170	True				
ANR	720742	Statement	","	3307:65:95048:95048	720129	171	True				
ANR	720743	Statement	"""FileFlags"""	3307:67:95050:95060	720129	172	True				
ANR	720744	Statement	","	3307:78:95061:95061	720129	173	True				
ANR	720745	Statement	0	3307:80:95063:95063	720129	174	True				
ANR	720746	Statement	)	3307:81:95064:95064	720129	175	True				
ANR	720747	Statement	)	3307:82:95065:95065	720129	176	True				
ANR	720748	ExpressionStatement		3307:83:95066:95066	720129	177	True				
ANR	720749	Statement	r_cons_printf	3308:3:95071:95083	720129	178	True				
ANR	720750	Statement	(	3308:17:95085:95085	720129	179	True				
ANR	720751	Statement	"""  FileOS: 0x%"""	3308:18:95086:95100	720129	180	True				
ANR	720752	Statement	PFMT64x	3308:33:95101:95107	720129	181	True				
ANR	720753	Statement	"""\\n"""	3308:40:95108:95111	720129	182	True				
ANR	720754	Statement	","	3308:44:95112:95112	720129	183	True				
ANR	720755	Statement	sdb_num_get	3308:46:95114:95124	720129	184	True				
ANR	720756	Statement	(	3308:58:95126:95126	720129	185	True				
ANR	720757	Statement	sdb	3308:59:95127:95129	720129	186	True				
ANR	720758	Statement	","	3308:62:95130:95130	720129	187	True				
ANR	720759	Statement	"""FileOS"""	3308:64:95132:95139	720129	188	True				
ANR	720760	Statement	","	3308:72:95140:95140	720129	189	True				
ANR	720761	Statement	0	3308:74:95142:95142	720129	190	True				
ANR	720762	Statement	)	3308:75:95143:95143	720129	191	True				
ANR	720763	Statement	)	3308:76:95144:95144	720129	192	True				
ANR	720764	ExpressionStatement		3308:77:95145:95145	720129	193	True				
ANR	720765	Statement	r_cons_printf	3309:3:95150:95162	720129	194	True				
ANR	720766	Statement	(	3309:17:95164:95164	720129	195	True				
ANR	720767	Statement	"""  FileType: 0x%"""	3309:18:95165:95181	720129	196	True				
ANR	720768	Statement	PFMT64x	3309:35:95182:95188	720129	197	True				
ANR	720769	Statement	"""\\n"""	3309:42:95189:95192	720129	198	True				
ANR	720770	Statement	","	3309:46:95193:95193	720129	199	True				
ANR	720771	Statement	sdb_num_get	3309:48:95195:95205	720129	200	True				
ANR	720772	Statement	(	3309:60:95207:95207	720129	201	True				
ANR	720773	Statement	sdb	3309:61:95208:95210	720129	202	True				
ANR	720774	Statement	","	3309:64:95211:95211	720129	203	True				
ANR	720775	Statement	"""FileType"""	3309:66:95213:95222	720129	204	True				
ANR	720776	Statement	","	3309:76:95223:95223	720129	205	True				
ANR	720777	Statement	0	3309:78:95225:95225	720129	206	True				
ANR	720778	Statement	)	3309:79:95226:95226	720129	207	True				
ANR	720779	Statement	)	3309:80:95227:95227	720129	208	True				
ANR	720780	ExpressionStatement		3309:81:95228:95228	720129	209	True				
ANR	720781	Statement	r_cons_printf	3310:3:95233:95245	720129	210	True				
ANR	720782	Statement	(	3310:17:95247:95247	720129	211	True				
ANR	720783	Statement	"""  FileSubType: 0x%"""	3310:18:95248:95267	720129	212	True				
ANR	720784	Statement	PFMT64x	3310:38:95268:95274	720129	213	True				
ANR	720785	Statement	"""\\n"""	3310:45:95275:95278	720129	214	True				
ANR	720786	Statement	","	3310:49:95279:95279	720129	215	True				
ANR	720787	Statement	sdb_num_get	3310:51:95281:95291	720129	216	True				
ANR	720788	Statement	(	3310:63:95293:95293	720129	217	True				
ANR	720789	Statement	sdb	3310:64:95294:95296	720129	218	True				
ANR	720790	Statement	","	3310:67:95297:95297	720129	219	True				
ANR	720791	Statement	"""FileSubType"""	3310:69:95299:95311	720129	220	True				
ANR	720792	Statement	","	3310:82:95312:95312	720129	221	True				
ANR	720793	Statement	0	3310:84:95314:95314	720129	222	True				
ANR	720794	Statement	)	3310:85:95315:95315	720129	223	True				
ANR	720795	Statement	)	3310:86:95316:95316	720129	224	True				
ANR	720796	ExpressionStatement		3310:87:95317:95317	720129	225	True				
ANR	720797	ExpressionStatement	r_cons_newline ( )	3311:3:95322:95339	720129	226	True				
ANR	720798	CallExpression	r_cons_newline ( )		720129	0					
ANR	720799	Callee	r_cons_newline		720129	0					
ANR	720800	Identifier	r_cons_newline		720129	0					
ANR	720801	ArgumentList			720129	1					
ANR	720802	ExpressionStatement	"r_cons_printf ( ""  FileDate: %d.%d.%d.%d\\n"" , sdb_num_get ( sdb , ""FileDateMS"" , 0 ) >> 16 , sdb_num_get ( sdb , ""FileDateMS"" , 0 ) & 0xFFFF , sdb_num_get ( sdb , ""FileDateLS"" , 0 ) >> 16 , sdb_num_get ( sdb , ""FileDateLS"" , 0 ) & 0xFFFF )"	3314:2:95353:95582	720129	7	True				
ANR	720803	CallExpression	"r_cons_printf ( ""  FileDate: %d.%d.%d.%d\\n"" , sdb_num_get ( sdb , ""FileDateMS"" , 0 ) >> 16 , sdb_num_get ( sdb , ""FileDateMS"" , 0 ) & 0xFFFF , sdb_num_get ( sdb , ""FileDateLS"" , 0 ) >> 16 , sdb_num_get ( sdb , ""FileDateLS"" , 0 ) & 0xFFFF )"		720129	0					
ANR	720804	Callee	r_cons_printf		720129	0					
ANR	720805	Identifier	r_cons_printf		720129	0					
ANR	720806	ArgumentList	"""  FileDate: %d.%d.%d.%d\\n"""		720129	1					
ANR	720807	Argument	"""  FileDate: %d.%d.%d.%d\\n"""		720129	0					
ANR	720808	PrimaryExpression	"""  FileDate: %d.%d.%d.%d\\n"""		720129	0					
ANR	720809	Argument	"sdb_num_get ( sdb , ""FileDateMS"" , 0 ) >> 16"		720129	1					
ANR	720810	ShiftExpression	"sdb_num_get ( sdb , ""FileDateMS"" , 0 ) >> 16"		720129	0		>>			
ANR	720811	CallExpression	"sdb_num_get ( sdb , ""FileDateMS"" , 0 )"		720129	0					
ANR	720812	Callee	sdb_num_get		720129	0					
ANR	720813	Identifier	sdb_num_get		720129	0					
ANR	720814	ArgumentList	sdb		720129	1					
ANR	720815	Argument	sdb		720129	0					
ANR	720816	Identifier	sdb		720129	0					
ANR	720817	Argument	"""FileDateMS"""		720129	1					
ANR	720818	PrimaryExpression	"""FileDateMS"""		720129	0					
ANR	720819	Argument	0		720129	2					
ANR	720820	PrimaryExpression	0		720129	0					
ANR	720821	PrimaryExpression	16		720129	1					
ANR	720822	Argument	"sdb_num_get ( sdb , ""FileDateMS"" , 0 ) & 0xFFFF"		720129	2					
ANR	720823	BitAndExpression	"sdb_num_get ( sdb , ""FileDateMS"" , 0 ) & 0xFFFF"		720129	0		&			
ANR	720824	CallExpression	"sdb_num_get ( sdb , ""FileDateMS"" , 0 )"		720129	0					
ANR	720825	Callee	sdb_num_get		720129	0					
ANR	720826	Identifier	sdb_num_get		720129	0					
ANR	720827	ArgumentList	sdb		720129	1					
ANR	720828	Argument	sdb		720129	0					
ANR	720829	Identifier	sdb		720129	0					
ANR	720830	Argument	"""FileDateMS"""		720129	1					
ANR	720831	PrimaryExpression	"""FileDateMS"""		720129	0					
ANR	720832	Argument	0		720129	2					
ANR	720833	PrimaryExpression	0		720129	0					
ANR	720834	PrimaryExpression	0xFFFF		720129	1					
ANR	720835	Argument	"sdb_num_get ( sdb , ""FileDateLS"" , 0 ) >> 16"		720129	3					
ANR	720836	ShiftExpression	"sdb_num_get ( sdb , ""FileDateLS"" , 0 ) >> 16"		720129	0		>>			
ANR	720837	CallExpression	"sdb_num_get ( sdb , ""FileDateLS"" , 0 )"		720129	0					
ANR	720838	Callee	sdb_num_get		720129	0					
ANR	720839	Identifier	sdb_num_get		720129	0					
ANR	720840	ArgumentList	sdb		720129	1					
ANR	720841	Argument	sdb		720129	0					
ANR	720842	Identifier	sdb		720129	0					
ANR	720843	Argument	"""FileDateLS"""		720129	1					
ANR	720844	PrimaryExpression	"""FileDateLS"""		720129	0					
ANR	720845	Argument	0		720129	2					
ANR	720846	PrimaryExpression	0		720129	0					
ANR	720847	PrimaryExpression	16		720129	1					
ANR	720848	Argument	"sdb_num_get ( sdb , ""FileDateLS"" , 0 ) & 0xFFFF"		720129	4					
ANR	720849	BitAndExpression	"sdb_num_get ( sdb , ""FileDateLS"" , 0 ) & 0xFFFF"		720129	0		&			
ANR	720850	CallExpression	"sdb_num_get ( sdb , ""FileDateLS"" , 0 )"		720129	0					
ANR	720851	Callee	sdb_num_get		720129	0					
ANR	720852	Identifier	sdb_num_get		720129	0					
ANR	720853	ArgumentList	sdb		720129	1					
ANR	720854	Argument	sdb		720129	0					
ANR	720855	Identifier	sdb		720129	0					
ANR	720856	Argument	"""FileDateLS"""		720129	1					
ANR	720857	PrimaryExpression	"""FileDateLS"""		720129	0					
ANR	720858	Argument	0		720129	2					
ANR	720859	PrimaryExpression	0		720129	0					
ANR	720860	PrimaryExpression	0xFFFF		720129	1					
ANR	720861	IfStatement	if ( IS_MODE_JSON ( mode ) )		720129	8					
ANR	720862	Condition	IS_MODE_JSON ( mode )	3320:6:95597:95615	720129	0	True				
ANR	720863	CallExpression	IS_MODE_JSON ( mode )		720129	0					
ANR	720864	Callee	IS_MODE_JSON		720129	0					
ANR	720865	Identifier	IS_MODE_JSON		720129	0					
ANR	720866	ArgumentList	mode		720129	1					
ANR	720867	Argument	mode		720129	0					
ANR	720868	Identifier	mode		720129	0					
ANR	720869	CompoundStatement		77:27:3658:3658	720129	1					
ANR	720870	ExpressionStatement	"r_cons_printf ( ""\\""StringTable\\"":{"" )"	3321:3:95623:95658	720129	0	True				
ANR	720871	CallExpression	"r_cons_printf ( ""\\""StringTable\\"":{"" )"		720129	0					
ANR	720872	Callee	r_cons_printf		720129	0					
ANR	720873	Identifier	r_cons_printf		720129	0					
ANR	720874	ArgumentList	"""\\""StringTable\\"":{"""		720129	1					
ANR	720875	Argument	"""\\""StringTable\\"":{"""		720129	0					
ANR	720876	PrimaryExpression	"""\\""StringTable\\"":{"""		720129	0					
ANR	720877	ElseStatement	else		720129	0					
ANR	720878	CompoundStatement		79:9:3709:3709	720129	0					
ANR	720879	ExpressionStatement	"r_cons_printf ( ""# StringTable\\n\\n"" )"	3323:3:95674:95709	720129	0	True				
ANR	720880	CallExpression	"r_cons_printf ( ""# StringTable\\n\\n"" )"		720129	0					
ANR	720881	Callee	r_cons_printf		720129	0					
ANR	720882	Identifier	r_cons_printf		720129	0					
ANR	720883	ArgumentList	"""# StringTable\\n\\n"""		720129	1					
ANR	720884	Argument	"""# StringTable\\n\\n"""		720129	0					
ANR	720885	PrimaryExpression	"""# StringTable\\n\\n"""		720129	0					
ANR	720886	ForStatement	for ( num_stringtable = 0 ; sdb ; num_stringtable ++ )		720129	9					
ANR	720887	ForInit	num_stringtable = 0 ;	3325:7:95722:95741	720129	0	True				
ANR	720888	AssignmentExpression	num_stringtable = 0		720129	0		=			
ANR	720889	Identifier	num_stringtable		720129	0					
ANR	720890	PrimaryExpression	0		720129	1					
ANR	720891	Condition	sdb	3325:28:95743:95745	720129	1	True				
ANR	720892	Identifier	sdb		720129	0					
ANR	720893	PostIncDecOperationExpression	num_stringtable ++	3325:33:95748:95764	720129	2	True				
ANR	720894	Identifier	num_stringtable		720129	0					
ANR	720895	IncDec	++		720129	1					
ANR	720896	CompoundStatement		85:3:3956:3979	720129	3					
ANR	720897	IdentifierDeclStatement	"char * path_stringtable = r_str_newf ( format_stringtable , path_version , num_stringtable ) ;"	3326:3:95772:95859	720129	0	True				
ANR	720898	IdentifierDecl	"* path_stringtable = r_str_newf ( format_stringtable , path_version , num_stringtable )"		720129	0					
ANR	720899	IdentifierDeclType	char *		720129	0					
ANR	720900	Identifier	path_stringtable		720129	1					
ANR	720901	AssignmentExpression	"* path_stringtable = r_str_newf ( format_stringtable , path_version , num_stringtable )"		720129	2		=			
ANR	720902	Identifier	path_stringtable		720129	0					
ANR	720903	CallExpression	"r_str_newf ( format_stringtable , path_version , num_stringtable )"		720129	1					
ANR	720904	Callee	r_str_newf		720129	0					
ANR	720905	Identifier	r_str_newf		720129	0					
ANR	720906	ArgumentList	format_stringtable		720129	1					
ANR	720907	Argument	format_stringtable		720129	0					
ANR	720908	Identifier	format_stringtable		720129	0					
ANR	720909	Argument	path_version		720129	1					
ANR	720910	Identifier	path_version		720129	0					
ANR	720911	Argument	num_stringtable		720129	2					
ANR	720912	Identifier	num_stringtable		720129	0					
ANR	720913	ExpressionStatement	"sdb = sdb_ns_path ( r -> sdb , path_stringtable , 0 )"	3327:3:95864:95911	720129	1	True				
ANR	720914	AssignmentExpression	"sdb = sdb_ns_path ( r -> sdb , path_stringtable , 0 )"		720129	0		=			
ANR	720915	Identifier	sdb		720129	0					
ANR	720916	CallExpression	"sdb_ns_path ( r -> sdb , path_stringtable , 0 )"		720129	1					
ANR	720917	Callee	sdb_ns_path		720129	0					
ANR	720918	Identifier	sdb_ns_path		720129	0					
ANR	720919	ArgumentList	r -> sdb		720129	1					
ANR	720920	Argument	r -> sdb		720129	0					
ANR	720921	PtrMemberAccess	r -> sdb		720129	0					
ANR	720922	Identifier	r		720129	0					
ANR	720923	Identifier	sdb		720129	1					
ANR	720924	Argument	path_stringtable		720129	1					
ANR	720925	Identifier	path_stringtable		720129	0					
ANR	720926	Argument	0		720129	2					
ANR	720927	PrimaryExpression	0		720129	0					
ANR	720928	IdentifierDeclStatement	bool firstit_for = true ;	3328:3:95916:95939	720129	2	True				
ANR	720929	IdentifierDecl	firstit_for = true		720129	0					
ANR	720930	IdentifierDeclType	bool		720129	0					
ANR	720931	Identifier	firstit_for		720129	1					
ANR	720932	AssignmentExpression	firstit_for = true		720129	2		=			
ANR	720933	Identifier	true		720129	0					
ANR	720934	Identifier	true		720129	1					
ANR	720935	ForStatement	for ( num_string = 0 ; sdb ; num_string ++ )		720129	3					
ANR	720936	ForInit	num_string = 0 ;	3329:8:95949:95963	720129	0	True				
ANR	720937	AssignmentExpression	num_string = 0		720129	0		=			
ANR	720938	Identifier	num_string		720129	0					
ANR	720939	PrimaryExpression	0		720129	1					
ANR	720940	Condition	sdb	3329:24:95965:95967	720129	1	True				
ANR	720941	Identifier	sdb		720129	0					
ANR	720942	PostIncDecOperationExpression	num_string ++	3329:29:95970:95981	720129	2	True				
ANR	720943	Identifier	num_string		720129	0					
ANR	720944	IncDec	++		720129	1					
ANR	720945	CompoundStatement		87:4:4030:4106	720129	3					
ANR	720946	IdentifierDeclStatement	"char * path_string = r_str_newf ( format_string , path_stringtable , num_string ) ;"	3330:4:95990:96066	720129	0	True				
ANR	720947	IdentifierDecl	"* path_string = r_str_newf ( format_string , path_stringtable , num_string )"		720129	0					
ANR	720948	IdentifierDeclType	char *		720129	0					
ANR	720949	Identifier	path_string		720129	1					
ANR	720950	AssignmentExpression	"* path_string = r_str_newf ( format_string , path_stringtable , num_string )"		720129	2		=			
ANR	720951	Identifier	path_string		720129	0					
ANR	720952	CallExpression	"r_str_newf ( format_string , path_stringtable , num_string )"		720129	1					
ANR	720953	Callee	r_str_newf		720129	0					
ANR	720954	Identifier	r_str_newf		720129	0					
ANR	720955	ArgumentList	format_string		720129	1					
ANR	720956	Argument	format_string		720129	0					
ANR	720957	Identifier	format_string		720129	0					
ANR	720958	Argument	path_stringtable		720129	1					
ANR	720959	Identifier	path_stringtable		720129	0					
ANR	720960	Argument	num_string		720129	2					
ANR	720961	Identifier	num_string		720129	0					
ANR	720962	ExpressionStatement	"sdb = sdb_ns_path ( r -> sdb , path_string , 0 )"	3331:4:96072:96114	720129	1	True				
ANR	720963	AssignmentExpression	"sdb = sdb_ns_path ( r -> sdb , path_string , 0 )"		720129	0		=			
ANR	720964	Identifier	sdb		720129	0					
ANR	720965	CallExpression	"sdb_ns_path ( r -> sdb , path_string , 0 )"		720129	1					
ANR	720966	Callee	sdb_ns_path		720129	0					
ANR	720967	Identifier	sdb_ns_path		720129	0					
ANR	720968	ArgumentList	r -> sdb		720129	1					
ANR	720969	Argument	r -> sdb		720129	0					
ANR	720970	PtrMemberAccess	r -> sdb		720129	0					
ANR	720971	Identifier	r		720129	0					
ANR	720972	Identifier	sdb		720129	1					
ANR	720973	Argument	path_string		720129	1					
ANR	720974	Identifier	path_string		720129	0					
ANR	720975	Argument	0		720129	2					
ANR	720976	PrimaryExpression	0		720129	0					
ANR	720977	IfStatement	if ( sdb )		720129	2					
ANR	720978	Condition	sdb	3332:8:96124:96126	720129	0	True				
ANR	720979	Identifier	sdb		720129	0					
ANR	720980	CompoundStatement		96:5:4486:4524	720129	1					
ANR	720981	IfStatement	if ( ! firstit_for && IS_MODE_JSON ( mode ) )		720129	0					
ANR	720982	Condition	! firstit_for && IS_MODE_JSON ( mode )	3333:9:96140:96174	720129	0	True				
ANR	720983	AndExpression	! firstit_for && IS_MODE_JSON ( mode )		720129	0		&&			
ANR	720984	UnaryOperationExpression	! firstit_for		720129	0					
ANR	720985	UnaryOperator	!		720129	0					
ANR	720986	Identifier	firstit_for		720129	1					
ANR	720987	CallExpression	IS_MODE_JSON ( mode )		720129	1					
ANR	720988	Callee	IS_MODE_JSON		720129	0					
ANR	720989	Identifier	IS_MODE_JSON		720129	0					
ANR	720990	ArgumentList	mode		720129	1					
ANR	720991	Argument	mode		720129	0					
ANR	720992	Identifier	mode		720129	0					
ANR	720993	CompoundStatement		90:46:4217:4217	720129	1					
ANR	720994	ExpressionStatement	"r_cons_printf ( "","" )"	3333:48:96179:96198	720129	0	True				
ANR	720995	CallExpression	"r_cons_printf ( "","" )"		720129	0					
ANR	720996	Callee	r_cons_printf		720129	0					
ANR	720997	Identifier	r_cons_printf		720129	0					
ANR	720998	ArgumentList	""","""		720129	1					
ANR	720999	Argument	""","""		720129	0					
ANR	721000	PrimaryExpression	""","""		720129	0					
ANR	721001	IdentifierDeclStatement	int lenkey = 0 ;	3334:5:96207:96221	720129	1	True				
ANR	721002	IdentifierDecl	lenkey = 0		720129	0					
ANR	721003	IdentifierDeclType	int		720129	0					
ANR	721004	Identifier	lenkey		720129	1					
ANR	721005	AssignmentExpression	lenkey = 0		720129	2		=			
ANR	721006	Identifier	lenkey		720129	0					
ANR	721007	PrimaryExpression	0		720129	1					
ANR	721008	IdentifierDeclStatement	int lenval = 0 ;	3335:5:96228:96242	720129	2	True				
ANR	721009	IdentifierDecl	lenval = 0		720129	0					
ANR	721010	IdentifierDeclType	int		720129	0					
ANR	721011	Identifier	lenval		720129	1					
ANR	721012	AssignmentExpression	lenval = 0		720129	2		=			
ANR	721013	Identifier	lenval		720129	0					
ANR	721014	PrimaryExpression	0		720129	1					
ANR	721015	IdentifierDeclStatement	"ut8 * key_utf16 = sdb_decode ( sdb_const_get ( sdb , ""key"" , 0 ) , & lenkey ) ;"	3336:5:96249:96317	720129	3	True				
ANR	721016	IdentifierDecl	"* key_utf16 = sdb_decode ( sdb_const_get ( sdb , ""key"" , 0 ) , & lenkey )"		720129	0					
ANR	721017	IdentifierDeclType	ut8 *		720129	0					
ANR	721018	Identifier	key_utf16		720129	1					
ANR	721019	AssignmentExpression	"* key_utf16 = sdb_decode ( sdb_const_get ( sdb , ""key"" , 0 ) , & lenkey )"		720129	2		=			
ANR	721020	Identifier	key_utf16		720129	0					
ANR	721021	CallExpression	"sdb_decode ( sdb_const_get ( sdb , ""key"" , 0 ) , & lenkey )"		720129	1					
ANR	721022	Callee	sdb_decode		720129	0					
ANR	721023	Identifier	sdb_decode		720129	0					
ANR	721024	ArgumentList	"sdb_const_get ( sdb , ""key"" , 0 )"		720129	1					
ANR	721025	Argument	"sdb_const_get ( sdb , ""key"" , 0 )"		720129	0					
ANR	721026	CallExpression	"sdb_const_get ( sdb , ""key"" , 0 )"		720129	0					
ANR	721027	Callee	sdb_const_get		720129	0					
ANR	721028	Identifier	sdb_const_get		720129	0					
ANR	721029	ArgumentList	sdb		720129	1					
ANR	721030	Argument	sdb		720129	0					
ANR	721031	Identifier	sdb		720129	0					
ANR	721032	Argument	"""key"""		720129	1					
ANR	721033	PrimaryExpression	"""key"""		720129	0					
ANR	721034	Argument	0		720129	2					
ANR	721035	PrimaryExpression	0		720129	0					
ANR	721036	Argument	& lenkey		720129	1					
ANR	721037	UnaryOperationExpression	& lenkey		720129	0					
ANR	721038	UnaryOperator	&		720129	0					
ANR	721039	Identifier	lenkey		720129	1					
ANR	721040	IdentifierDeclStatement	"ut8 * val_utf16 = sdb_decode ( sdb_const_get ( sdb , ""value"" , 0 ) , & lenval ) ;"	3337:5:96324:96394	720129	4	True				
ANR	721041	IdentifierDecl	"* val_utf16 = sdb_decode ( sdb_const_get ( sdb , ""value"" , 0 ) , & lenval )"		720129	0					
ANR	721042	IdentifierDeclType	ut8 *		720129	0					
ANR	721043	Identifier	val_utf16		720129	1					
ANR	721044	AssignmentExpression	"* val_utf16 = sdb_decode ( sdb_const_get ( sdb , ""value"" , 0 ) , & lenval )"		720129	2		=			
ANR	721045	Identifier	val_utf16		720129	0					
ANR	721046	CallExpression	"sdb_decode ( sdb_const_get ( sdb , ""value"" , 0 ) , & lenval )"		720129	1					
ANR	721047	Callee	sdb_decode		720129	0					
ANR	721048	Identifier	sdb_decode		720129	0					
ANR	721049	ArgumentList	"sdb_const_get ( sdb , ""value"" , 0 )"		720129	1					
ANR	721050	Argument	"sdb_const_get ( sdb , ""value"" , 0 )"		720129	0					
ANR	721051	CallExpression	"sdb_const_get ( sdb , ""value"" , 0 )"		720129	0					
ANR	721052	Callee	sdb_const_get		720129	0					
ANR	721053	Identifier	sdb_const_get		720129	0					
ANR	721054	ArgumentList	sdb		720129	1					
ANR	721055	Argument	sdb		720129	0					
ANR	721056	Identifier	sdb		720129	0					
ANR	721057	Argument	"""value"""		720129	1					
ANR	721058	PrimaryExpression	"""value"""		720129	0					
ANR	721059	Argument	0		720129	2					
ANR	721060	PrimaryExpression	0		720129	0					
ANR	721061	Argument	& lenval		720129	1					
ANR	721062	UnaryOperationExpression	& lenval		720129	0					
ANR	721063	UnaryOperator	&		720129	0					
ANR	721064	Identifier	lenval		720129	1					
ANR	721065	IdentifierDeclStatement	"ut8 * key_utf8 = calloc ( lenkey * 2 , 1 ) ;"	3338:5:96401:96439	720129	5	True				
ANR	721066	IdentifierDecl	"* key_utf8 = calloc ( lenkey * 2 , 1 )"		720129	0					
ANR	721067	IdentifierDeclType	ut8 *		720129	0					
ANR	721068	Identifier	key_utf8		720129	1					
ANR	721069	AssignmentExpression	"* key_utf8 = calloc ( lenkey * 2 , 1 )"		720129	2		=			
ANR	721070	Identifier	key_utf8		720129	0					
ANR	721071	CallExpression	"calloc ( lenkey * 2 , 1 )"		720129	1					
ANR	721072	Callee	calloc		720129	0					
ANR	721073	Identifier	calloc		720129	0					
ANR	721074	ArgumentList	lenkey * 2		720129	1					
ANR	721075	Argument	lenkey * 2		720129	0					
ANR	721076	MultiplicativeExpression	lenkey * 2		720129	0		*			
ANR	721077	Identifier	lenkey		720129	0					
ANR	721078	PrimaryExpression	2		720129	1					
ANR	721079	Argument	1		720129	1					
ANR	721080	PrimaryExpression	1		720129	0					
ANR	721081	IdentifierDeclStatement	"ut8 * val_utf8 = calloc ( lenval * 2 , 1 ) ;"	3339:5:96446:96484	720129	6	True				
ANR	721082	IdentifierDecl	"* val_utf8 = calloc ( lenval * 2 , 1 )"		720129	0					
ANR	721083	IdentifierDeclType	ut8 *		720129	0					
ANR	721084	Identifier	val_utf8		720129	1					
ANR	721085	AssignmentExpression	"* val_utf8 = calloc ( lenval * 2 , 1 )"		720129	2		=			
ANR	721086	Identifier	val_utf8		720129	0					
ANR	721087	CallExpression	"calloc ( lenval * 2 , 1 )"		720129	1					
ANR	721088	Callee	calloc		720129	0					
ANR	721089	Identifier	calloc		720129	0					
ANR	721090	ArgumentList	lenval * 2		720129	1					
ANR	721091	Argument	lenval * 2		720129	0					
ANR	721092	MultiplicativeExpression	lenval * 2		720129	0		*			
ANR	721093	Identifier	lenval		720129	0					
ANR	721094	PrimaryExpression	2		720129	1					
ANR	721095	Argument	1		720129	1					
ANR	721096	PrimaryExpression	1		720129	0					
ANR	721097	IfStatement	"if ( r_str_utf16_to_utf8 ( key_utf8 , lenkey * 2 , key_utf16 , lenkey , true ) < 0 || r_str_utf16_to_utf8 ( val_utf8 , lenval * 2 , val_utf16 , lenval , true ) < 0 )"		720129	7					
ANR	721098	Condition	"r_str_utf16_to_utf8 ( key_utf8 , lenkey * 2 , key_utf16 , lenkey , true ) < 0 || r_str_utf16_to_utf8 ( val_utf8 , lenval * 2 , val_utf16 , lenval , true ) < 0"	3340:9:96495:96646	720129	0	True				
ANR	721099	OrExpression	"r_str_utf16_to_utf8 ( key_utf8 , lenkey * 2 , key_utf16 , lenkey , true ) < 0 || r_str_utf16_to_utf8 ( val_utf8 , lenval * 2 , val_utf16 , lenval , true ) < 0"		720129	0		||			
ANR	721100	RelationalExpression	"r_str_utf16_to_utf8 ( key_utf8 , lenkey * 2 , key_utf16 , lenkey , true ) < 0"		720129	0		<			
ANR	721101	CallExpression	"r_str_utf16_to_utf8 ( key_utf8 , lenkey * 2 , key_utf16 , lenkey , true )"		720129	0					
ANR	721102	Callee	r_str_utf16_to_utf8		720129	0					
ANR	721103	Identifier	r_str_utf16_to_utf8		720129	0					
ANR	721104	ArgumentList	key_utf8		720129	1					
ANR	721105	Argument	key_utf8		720129	0					
ANR	721106	Identifier	key_utf8		720129	0					
ANR	721107	Argument	lenkey * 2		720129	1					
ANR	721108	MultiplicativeExpression	lenkey * 2		720129	0		*			
ANR	721109	Identifier	lenkey		720129	0					
ANR	721110	PrimaryExpression	2		720129	1					
ANR	721111	Argument	key_utf16		720129	2					
ANR	721112	Identifier	key_utf16		720129	0					
ANR	721113	Argument	lenkey		720129	3					
ANR	721114	Identifier	lenkey		720129	0					
ANR	721115	Argument	true		720129	4					
ANR	721116	Identifier	true		720129	0					
ANR	721117	PrimaryExpression	0		720129	1					
ANR	721118	RelationalExpression	"r_str_utf16_to_utf8 ( val_utf8 , lenval * 2 , val_utf16 , lenval , true ) < 0"		720129	1		<			
ANR	721119	CallExpression	"r_str_utf16_to_utf8 ( val_utf8 , lenval * 2 , val_utf16 , lenval , true )"		720129	0					
ANR	721120	Callee	r_str_utf16_to_utf8		720129	0					
ANR	721121	Identifier	r_str_utf16_to_utf8		720129	0					
ANR	721122	ArgumentList	val_utf8		720129	1					
ANR	721123	Argument	val_utf8		720129	0					
ANR	721124	Identifier	val_utf8		720129	0					
ANR	721125	Argument	lenval * 2		720129	1					
ANR	721126	MultiplicativeExpression	lenval * 2		720129	0		*			
ANR	721127	Identifier	lenval		720129	0					
ANR	721128	PrimaryExpression	2		720129	1					
ANR	721129	Argument	val_utf16		720129	2					
ANR	721130	Identifier	val_utf16		720129	0					
ANR	721131	Argument	lenval		720129	3					
ANR	721132	Identifier	lenval		720129	0					
ANR	721133	Argument	true		720129	4					
ANR	721134	Identifier	true		720129	0					
ANR	721135	PrimaryExpression	0		720129	1					
ANR	721136	CompoundStatement		98:82:4689:4689	720129	1					
ANR	721137	ExpressionStatement	"eprintf ( ""Warning: Cannot decode utf16 to utf8\\n"" )"	3342:6:96657:96707	720129	0	True				
ANR	721138	CallExpression	"eprintf ( ""Warning: Cannot decode utf16 to utf8\\n"" )"		720129	0					
ANR	721139	Callee	eprintf		720129	0					
ANR	721140	Identifier	eprintf		720129	0					
ANR	721141	ArgumentList	"""Warning: Cannot decode utf16 to utf8\\n"""		720129	1					
ANR	721142	Argument	"""Warning: Cannot decode utf16 to utf8\\n"""		720129	0					
ANR	721143	PrimaryExpression	"""Warning: Cannot decode utf16 to utf8\\n"""		720129	0					
ANR	721144	ElseStatement	else		720129	0					
ANR	721145	IfStatement	if ( IS_MODE_JSON ( mode ) )		720129	0					
ANR	721146	Condition	IS_MODE_JSON ( mode )	3343:16:96725:96743	720129	0	True				
ANR	721147	CallExpression	IS_MODE_JSON ( mode )		720129	0					
ANR	721148	Callee	IS_MODE_JSON		720129	0					
ANR	721149	Identifier	IS_MODE_JSON		720129	0					
ANR	721150	ArgumentList	mode		720129	1					
ANR	721151	Argument	mode		720129	0					
ANR	721152	Identifier	mode		720129	0					
ANR	721153	CompoundStatement		102:6:4857:4912	720129	1					
ANR	721154	IdentifierDeclStatement	char * escaped_key_utf8 = r_str_escape ( ( char * ) key_utf8 ) ;	3344:6:96754:96809	720129	0	True				
ANR	721155	IdentifierDecl	* escaped_key_utf8 = r_str_escape ( ( char * ) key_utf8 )		720129	0					
ANR	721156	IdentifierDeclType	char *		720129	0					
ANR	721157	Identifier	escaped_key_utf8		720129	1					
ANR	721158	AssignmentExpression	* escaped_key_utf8 = r_str_escape ( ( char * ) key_utf8 )		720129	2		=			
ANR	721159	Identifier	escaped_key_utf8		720129	0					
ANR	721160	CallExpression	r_str_escape ( ( char * ) key_utf8 )		720129	1					
ANR	721161	Callee	r_str_escape		720129	0					
ANR	721162	Identifier	r_str_escape		720129	0					
ANR	721163	ArgumentList	( char * ) key_utf8		720129	1					
ANR	721164	Argument	( char * ) key_utf8		720129	0					
ANR	721165	CastExpression	( char * ) key_utf8		720129	0					
ANR	721166	CastTarget	char *		720129	0					
ANR	721167	Identifier	key_utf8		720129	1					
ANR	721168	IdentifierDeclStatement	char * escaped_val_utf8 = r_str_escape ( ( char * ) val_utf8 ) ;	3345:6:96817:96872	720129	1	True				
ANR	721169	IdentifierDecl	* escaped_val_utf8 = r_str_escape ( ( char * ) val_utf8 )		720129	0					
ANR	721170	IdentifierDeclType	char *		720129	0					
ANR	721171	Identifier	escaped_val_utf8		720129	1					
ANR	721172	AssignmentExpression	* escaped_val_utf8 = r_str_escape ( ( char * ) val_utf8 )		720129	2		=			
ANR	721173	Identifier	escaped_val_utf8		720129	0					
ANR	721174	CallExpression	r_str_escape ( ( char * ) val_utf8 )		720129	1					
ANR	721175	Callee	r_str_escape		720129	0					
ANR	721176	Identifier	r_str_escape		720129	0					
ANR	721177	ArgumentList	( char * ) val_utf8		720129	1					
ANR	721178	Argument	( char * ) val_utf8		720129	0					
ANR	721179	CastExpression	( char * ) val_utf8		720129	0					
ANR	721180	CastTarget	char *		720129	0					
ANR	721181	Identifier	val_utf8		720129	1					
ANR	721182	ExpressionStatement	"r_cons_printf ( ""\\""%s\\"":\\""%s\\"""" , escaped_key_utf8 , escaped_val_utf8 )"	3346:6:96880:96947	720129	2	True				
ANR	721183	CallExpression	"r_cons_printf ( ""\\""%s\\"":\\""%s\\"""" , escaped_key_utf8 , escaped_val_utf8 )"		720129	0					
ANR	721184	Callee	r_cons_printf		720129	0					
ANR	721185	Identifier	r_cons_printf		720129	0					
ANR	721186	ArgumentList	"""\\""%s\\"":\\""%s\\"""""		720129	1					
ANR	721187	Argument	"""\\""%s\\"":\\""%s\\"""""		720129	0					
ANR	721188	PrimaryExpression	"""\\""%s\\"":\\""%s\\"""""		720129	0					
ANR	721189	Argument	escaped_key_utf8		720129	1					
ANR	721190	Identifier	escaped_key_utf8		720129	0					
ANR	721191	Argument	escaped_val_utf8		720129	2					
ANR	721192	Identifier	escaped_val_utf8		720129	0					
ANR	721193	ExpressionStatement	free ( escaped_key_utf8 )	3347:6:96955:96978	720129	3	True				
ANR	721194	CallExpression	free ( escaped_key_utf8 )		720129	0					
ANR	721195	Callee	free		720129	0					
ANR	721196	Identifier	free		720129	0					
ANR	721197	ArgumentList	escaped_key_utf8		720129	1					
ANR	721198	Argument	escaped_key_utf8		720129	0					
ANR	721199	Identifier	escaped_key_utf8		720129	0					
ANR	721200	ExpressionStatement	free ( escaped_val_utf8 )	3348:6:96986:97009	720129	4	True				
ANR	721201	CallExpression	free ( escaped_val_utf8 )		720129	0					
ANR	721202	Callee	free		720129	0					
ANR	721203	Identifier	free		720129	0					
ANR	721204	ArgumentList	escaped_val_utf8		720129	1					
ANR	721205	Argument	escaped_val_utf8		720129	0					
ANR	721206	Identifier	escaped_val_utf8		720129	0					
ANR	721207	ElseStatement	else		720129	0					
ANR	721208	CompoundStatement		106:12:5063:5063	720129	0					
ANR	721209	ExpressionStatement	"r_cons_printf ( ""  %s: %s\\n"" , ( char * ) key_utf8 , ( char * ) val_utf8 )"	3350:6:97031:97093	720129	0	True				
ANR	721210	CallExpression	"r_cons_printf ( ""  %s: %s\\n"" , ( char * ) key_utf8 , ( char * ) val_utf8 )"		720129	0					
ANR	721211	Callee	r_cons_printf		720129	0					
ANR	721212	Identifier	r_cons_printf		720129	0					
ANR	721213	ArgumentList	"""  %s: %s\\n"""		720129	1					
ANR	721214	Argument	"""  %s: %s\\n"""		720129	0					
ANR	721215	PrimaryExpression	"""  %s: %s\\n"""		720129	0					
ANR	721216	Argument	( char * ) key_utf8		720129	1					
ANR	721217	CastExpression	( char * ) key_utf8		720129	0					
ANR	721218	CastTarget	char *		720129	0					
ANR	721219	Identifier	key_utf8		720129	1					
ANR	721220	Argument	( char * ) val_utf8		720129	2					
ANR	721221	CastExpression	( char * ) val_utf8		720129	0					
ANR	721222	CastTarget	char *		720129	0					
ANR	721223	Identifier	val_utf8		720129	1					
ANR	721224	ExpressionStatement	free ( key_utf8 )	3352:5:97107:97122	720129	8	True				
ANR	721225	CallExpression	free ( key_utf8 )		720129	0					
ANR	721226	Callee	free		720129	0					
ANR	721227	Identifier	free		720129	0					
ANR	721228	ArgumentList	key_utf8		720129	1					
ANR	721229	Argument	key_utf8		720129	0					
ANR	721230	Identifier	key_utf8		720129	0					
ANR	721231	ExpressionStatement	free ( val_utf8 )	3353:5:97129:97144	720129	9	True				
ANR	721232	CallExpression	free ( val_utf8 )		720129	0					
ANR	721233	Callee	free		720129	0					
ANR	721234	Identifier	free		720129	0					
ANR	721235	ArgumentList	val_utf8		720129	1					
ANR	721236	Argument	val_utf8		720129	0					
ANR	721237	Identifier	val_utf8		720129	0					
ANR	721238	ExpressionStatement	free ( key_utf16 )	3354:5:97151:97167	720129	10	True				
ANR	721239	CallExpression	free ( key_utf16 )		720129	0					
ANR	721240	Callee	free		720129	0					
ANR	721241	Identifier	free		720129	0					
ANR	721242	ArgumentList	key_utf16		720129	1					
ANR	721243	Argument	key_utf16		720129	0					
ANR	721244	Identifier	key_utf16		720129	0					
ANR	721245	ExpressionStatement	free ( val_utf16 )	3355:5:97174:97190	720129	11	True				
ANR	721246	CallExpression	free ( val_utf16 )		720129	0					
ANR	721247	Callee	free		720129	0					
ANR	721248	Identifier	free		720129	0					
ANR	721249	ArgumentList	val_utf16		720129	1					
ANR	721250	Argument	val_utf16		720129	0					
ANR	721251	Identifier	val_utf16		720129	0					
ANR	721252	ExpressionStatement	firstit_for = false	3357:4:97202:97221	720129	3	True				
ANR	721253	AssignmentExpression	firstit_for = false		720129	0		=			
ANR	721254	Identifier	firstit_for		720129	0					
ANR	721255	Identifier	false		720129	1					
ANR	721256	ExpressionStatement	free ( path_string )	3358:4:97227:97245	720129	4	True				
ANR	721257	CallExpression	free ( path_string )		720129	0					
ANR	721258	Callee	free		720129	0					
ANR	721259	Identifier	free		720129	0					
ANR	721260	ArgumentList	path_string		720129	1					
ANR	721261	Argument	path_string		720129	0					
ANR	721262	Identifier	path_string		720129	0					
ANR	721263	ExpressionStatement	free ( path_stringtable )	3360:3:97255:97278	720129	4	True				
ANR	721264	CallExpression	free ( path_stringtable )		720129	0					
ANR	721265	Callee	free		720129	0					
ANR	721266	Identifier	free		720129	0					
ANR	721267	ArgumentList	path_stringtable		720129	1					
ANR	721268	Argument	path_stringtable		720129	0					
ANR	721269	Identifier	path_stringtable		720129	0					
ANR	721270	IfStatement	if ( IS_MODE_JSON ( mode ) )		720129	10					
ANR	721271	Condition	IS_MODE_JSON ( mode )	3362:6:97290:97308	720129	0	True				
ANR	721272	CallExpression	IS_MODE_JSON ( mode )		720129	0					
ANR	721273	Callee	IS_MODE_JSON		720129	0					
ANR	721274	Identifier	IS_MODE_JSON		720129	0					
ANR	721275	ArgumentList	mode		720129	1					
ANR	721276	Argument	mode		720129	0					
ANR	721277	Identifier	mode		720129	0					
ANR	721278	CompoundStatement		119:27:5351:5351	720129	1					
ANR	721279	ExpressionStatement	"r_cons_printf ( ""}}"" )"	3363:3:97316:97336	720129	0	True				
ANR	721280	CallExpression	"r_cons_printf ( ""}}"" )"		720129	0					
ANR	721281	Callee	r_cons_printf		720129	0					
ANR	721282	Identifier	r_cons_printf		720129	0					
ANR	721283	ArgumentList	"""}}"""		720129	1					
ANR	721284	Argument	"""}}"""		720129	0					
ANR	721285	PrimaryExpression	"""}}"""		720129	0					
ANR	721286	ExpressionStatement	num_version ++	3365:2:97344:97357	720129	11	True				
ANR	721287	PostIncDecOperationExpression	num_version ++		720129	0					
ANR	721288	Identifier	num_version		720129	0					
ANR	721289	IncDec	++		720129	1					
ANR	721290	ExpressionStatement	firstit_dowhile = false	3366:2:97361:97384	720129	12	True				
ANR	721291	AssignmentExpression	firstit_dowhile = false		720129	0		=			
ANR	721292	Identifier	firstit_dowhile		720129	0					
ANR	721293	Identifier	false		720129	1					
ANR	721294	Condition	sdb	3367:10:97396:97398	720129	1	True				
ANR	721295	Identifier	sdb		720129	0					
ANR	721296	ReturnType	static void		720129	1					
ANR	721297	Identifier	bin_pe_versioninfo		720129	2					
ANR	721298	ParameterList	"RCore * r , int mode"		720129	3					
ANR	721299	Parameter	RCore * r	3244:31:91939:91946	720129	0	True				
ANR	721300	ParameterType	RCore *		720129	0					
ANR	721301	Identifier	r		720129	1					
ANR	721302	Parameter	int mode	3244:41:91949:91956	720129	1	True				
ANR	721303	ParameterType	int		720129	0					
ANR	721304	Identifier	mode		720129	1					
ANR	721305	CFGEntryNode	ENTRY		720129		True				
ANR	721306	CFGExitNode	EXIT		720129		True				
ANR	721307	Symbol	sdb_decode		720129						
ANR	721308	Symbol	format_stringtable		720129						
ANR	721309	Symbol	path_version		720129						
ANR	721310	Symbol	path_string		720129						
ANR	721311	Symbol	format_string		720129						
ANR	721312	Symbol	IS_MODE_JSON		720129						
ANR	721313	Symbol	r_str_newf		720129						
ANR	721314	Symbol	firstit_for		720129						
ANR	721315	Symbol	calloc		720129						
ANR	721316	Symbol	val_utf8		720129						
ANR	721317	Symbol	sdb_const_get		720129						
ANR	721318	Symbol	key_utf8		720129						
ANR	721319	Symbol	r_str_utf16_to_utf8		720129						
ANR	721320	Symbol	mode		720129						
ANR	721321	Symbol	num_stringtable		720129						
ANR	721322	Symbol	num_string		720129						
ANR	721323	Symbol	firstit_dowhile		720129						
ANR	721324	Symbol	format_version		720129						
ANR	721325	Symbol	sdb_ns_path		720129						
ANR	721326	Symbol	sdb_fmt		720129						
ANR	721327	Symbol	escaped_val_utf8		720129						
ANR	721328	Symbol	sdb_num_get		720129						
ANR	721329	Symbol	r -> sdb		720129						
ANR	721330	Symbol	num_version		720129						
ANR	721331	Symbol	path_fixedfileinfo		720129						
ANR	721332	Symbol	lenval		720129						
ANR	721333	Symbol	escaped_key_utf8		720129						
ANR	721334	Symbol	NULL		720129						
ANR	721335	Symbol	lenkey		720129						
ANR	721336	Symbol	& lenval		720129						
ANR	721337	Symbol	& lenkey		720129						
ANR	721338	Symbol	false		720129						
ANR	721339	Symbol	key_utf16		720129						
ANR	721340	Symbol	val_utf16		720129						
ANR	721341	Symbol	sdb		720129						
ANR	721342	Symbol	path_stringtable		720129						
ANR	721343	Symbol	r_str_escape		720129						
ANR	721344	Symbol	r		720129						
ANR	721345	Symbol	true		720129						
ANR	721346	Symbol	* r		720129						
ANR	721347	Function	bin_elf_versioninfo	3370:0:97405:103123							
ANR	721348	FunctionDef	"bin_elf_versioninfo (RCore * r , int mode)"		721347	0					
ANR	721349	CompoundStatement		3370:52:97457:103123	721347	0					
ANR	721350	IdentifierDeclStatement	"const char * format = ""bin/cur/info/versioninfo/%s%d"" ;"	3371:1:97460:97512	721347	0	True				
ANR	721351	IdentifierDecl	"* format = ""bin/cur/info/versioninfo/%s%d"""		721347	0					
ANR	721352	IdentifierDeclType	const char *		721347	0					
ANR	721353	Identifier	format		721347	1					
ANR	721354	AssignmentExpression	"* format = ""bin/cur/info/versioninfo/%s%d"""		721347	2		=			
ANR	721355	Identifier	format		721347	0					
ANR	721356	PrimaryExpression	"""bin/cur/info/versioninfo/%s%d"""		721347	1					
ANR	721357	IdentifierDeclStatement	int num_versym ;	3372:1:97515:97529	721347	1	True				
ANR	721358	IdentifierDecl	num_versym		721347	0					
ANR	721359	IdentifierDeclType	int		721347	0					
ANR	721360	Identifier	num_versym		721347	1					
ANR	721361	IdentifierDeclStatement	int num_verneed = 0 ;	3373:1:97532:97551	721347	2	True				
ANR	721362	IdentifierDecl	num_verneed = 0		721347	0					
ANR	721363	IdentifierDeclType	int		721347	0					
ANR	721364	Identifier	num_verneed		721347	1					
ANR	721365	AssignmentExpression	num_verneed = 0		721347	2		=			
ANR	721366	Identifier	num_verneed		721347	0					
ANR	721367	PrimaryExpression	0		721347	1					
ANR	721368	IdentifierDeclStatement	int num_version = 0 ;	3374:1:97554:97573	721347	3	True				
ANR	721369	IdentifierDecl	num_version = 0		721347	0					
ANR	721370	IdentifierDeclType	int		721347	0					
ANR	721371	Identifier	num_version		721347	1					
ANR	721372	AssignmentExpression	num_version = 0		721347	2		=			
ANR	721373	Identifier	num_version		721347	0					
ANR	721374	PrimaryExpression	0		721347	1					
ANR	721375	IdentifierDeclStatement	Sdb * sdb = NULL ;	3375:1:97576:97591	721347	4	True				
ANR	721376	IdentifierDecl	* sdb = NULL		721347	0					
ANR	721377	IdentifierDeclType	Sdb *		721347	0					
ANR	721378	Identifier	sdb		721347	1					
ANR	721379	AssignmentExpression	* sdb = NULL		721347	2		=			
ANR	721380	Identifier	NULL		721347	0					
ANR	721381	Identifier	NULL		721347	1					
ANR	721382	IdentifierDeclStatement	const char * oValue = NULL ;	3376:1:97594:97619	721347	5	True				
ANR	721383	IdentifierDecl	* oValue = NULL		721347	0					
ANR	721384	IdentifierDeclType	const char *		721347	0					
ANR	721385	Identifier	oValue		721347	1					
ANR	721386	AssignmentExpression	* oValue = NULL		721347	2		=			
ANR	721387	Identifier	NULL		721347	0					
ANR	721388	Identifier	NULL		721347	1					
ANR	721389	IdentifierDeclStatement	bool firstit_for_versym = true ;	3377:1:97622:97652	721347	6	True				
ANR	721390	IdentifierDecl	firstit_for_versym = true		721347	0					
ANR	721391	IdentifierDeclType	bool		721347	0					
ANR	721392	Identifier	firstit_for_versym		721347	1					
ANR	721393	AssignmentExpression	firstit_for_versym = true		721347	2		=			
ANR	721394	Identifier	true		721347	0					
ANR	721395	Identifier	true		721347	1					
ANR	721396	IfStatement	if ( IS_MODE_JSON ( mode ) )		721347	7					
ANR	721397	Condition	IS_MODE_JSON ( mode )	3378:5:97659:97677	721347	0	True				
ANR	721398	CallExpression	IS_MODE_JSON ( mode )		721347	0					
ANR	721399	Callee	IS_MODE_JSON		721347	0					
ANR	721400	Identifier	IS_MODE_JSON		721347	0					
ANR	721401	ArgumentList	mode		721347	1					
ANR	721402	Argument	mode		721347	0					
ANR	721403	Identifier	mode		721347	0					
ANR	721404	CompoundStatement		9:26:222:222	721347	1					
ANR	721405	ExpressionStatement	"r_cons_printf ( ""{\\""versym\\"":["" )"	3379:2:97684:97715	721347	0	True				
ANR	721406	CallExpression	"r_cons_printf ( ""{\\""versym\\"":["" )"		721347	0					
ANR	721407	Callee	r_cons_printf		721347	0					
ANR	721408	Identifier	r_cons_printf		721347	0					
ANR	721409	ArgumentList	"""{\\""versym\\"":["""		721347	1					
ANR	721410	Argument	"""{\\""versym\\"":["""		721347	0					
ANR	721411	PrimaryExpression	"""{\\""versym\\"":["""		721347	0					
ANR	721412	ForStatement	for ( num_versym = 0 ; ; num_versym ++ )		721347	8					
ANR	721413	ForInit	num_versym = 0 ;	3381:6:97726:97740	721347	0	True				
ANR	721414	AssignmentExpression	num_versym = 0		721347	0		=			
ANR	721415	Identifier	num_versym		721347	0					
ANR	721416	PrimaryExpression	0		721347	1					
ANR	721417	PostIncDecOperationExpression	num_versym ++	3381:23:97743:97754	721347	1	True				
ANR	721418	Identifier	num_versym		721347	0					
ANR	721419	IncDec	++		721347	1					
ANR	721420	CompoundStatement		35:2:1394:1399	721347	2					
ANR	721421	IdentifierDeclStatement	"const char * versym_path = sdb_fmt ( format , ""versym"" , num_versym ) ;"	3382:2:97761:97825	721347	0	True				
ANR	721422	IdentifierDecl	"* versym_path = sdb_fmt ( format , ""versym"" , num_versym )"		721347	0					
ANR	721423	IdentifierDeclType	const char *		721347	0					
ANR	721424	Identifier	versym_path		721347	1					
ANR	721425	AssignmentExpression	"* versym_path = sdb_fmt ( format , ""versym"" , num_versym )"		721347	2		=			
ANR	721426	Identifier	versym_path		721347	0					
ANR	721427	CallExpression	"sdb_fmt ( format , ""versym"" , num_versym )"		721347	1					
ANR	721428	Callee	sdb_fmt		721347	0					
ANR	721429	Identifier	sdb_fmt		721347	0					
ANR	721430	ArgumentList	format		721347	1					
ANR	721431	Argument	format		721347	0					
ANR	721432	Identifier	format		721347	0					
ANR	721433	Argument	"""versym"""		721347	1					
ANR	721434	PrimaryExpression	"""versym"""		721347	0					
ANR	721435	Argument	num_versym		721347	2					
ANR	721436	Identifier	num_versym		721347	0					
ANR	721437	IfStatement	"if ( ! ( sdb = sdb_ns_path ( r -> sdb , versym_path , 0 ) ) )"		721347	1					
ANR	721438	Condition	"! ( sdb = sdb_ns_path ( r -> sdb , versym_path , 0 ) )"	3383:6:97833:97877	721347	0	True				
ANR	721439	UnaryOperationExpression	"! ( sdb = sdb_ns_path ( r -> sdb , versym_path , 0 ) )"		721347	0					
ANR	721440	UnaryOperator	!		721347	0					
ANR	721441	AssignmentExpression	"sdb = sdb_ns_path ( r -> sdb , versym_path , 0 )"		721347	1		=			
ANR	721442	Identifier	sdb		721347	0					
ANR	721443	CallExpression	"sdb_ns_path ( r -> sdb , versym_path , 0 )"		721347	1					
ANR	721444	Callee	sdb_ns_path		721347	0					
ANR	721445	Identifier	sdb_ns_path		721347	0					
ANR	721446	ArgumentList	r -> sdb		721347	1					
ANR	721447	Argument	r -> sdb		721347	0					
ANR	721448	PtrMemberAccess	r -> sdb		721347	0					
ANR	721449	Identifier	r		721347	0					
ANR	721450	Identifier	sdb		721347	1					
ANR	721451	Argument	versym_path		721347	1					
ANR	721452	Identifier	versym_path		721347	0					
ANR	721453	Argument	0		721347	2					
ANR	721454	PrimaryExpression	0		721347	0					
ANR	721455	CompoundStatement		14:53:422:422	721347	1					
ANR	721456	BreakStatement	break ;	3384:3:97885:97890	721347	0	True				
ANR	721457	IdentifierDeclStatement	"ut64 addr = sdb_num_get ( sdb , ""addr"" , 0 ) ;"	3386:2:97898:97938	721347	2	True				
ANR	721458	IdentifierDecl	"addr = sdb_num_get ( sdb , ""addr"" , 0 )"		721347	0					
ANR	721459	IdentifierDeclType	ut64		721347	0					
ANR	721460	Identifier	addr		721347	1					
ANR	721461	AssignmentExpression	"addr = sdb_num_get ( sdb , ""addr"" , 0 )"		721347	2		=			
ANR	721462	Identifier	addr		721347	0					
ANR	721463	CallExpression	"sdb_num_get ( sdb , ""addr"" , 0 )"		721347	1					
ANR	721464	Callee	sdb_num_get		721347	0					
ANR	721465	Identifier	sdb_num_get		721347	0					
ANR	721466	ArgumentList	sdb		721347	1					
ANR	721467	Argument	sdb		721347	0					
ANR	721468	Identifier	sdb		721347	0					
ANR	721469	Argument	"""addr"""		721347	1					
ANR	721470	PrimaryExpression	"""addr"""		721347	0					
ANR	721471	Argument	0		721347	2					
ANR	721472	PrimaryExpression	0		721347	0					
ANR	721473	IdentifierDeclStatement	"ut64 offset = sdb_num_get ( sdb , ""offset"" , 0 ) ;"	3387:2:97942:97986	721347	3	True				
ANR	721474	IdentifierDecl	"offset = sdb_num_get ( sdb , ""offset"" , 0 )"		721347	0					
ANR	721475	IdentifierDeclType	ut64		721347	0					
ANR	721476	Identifier	offset		721347	1					
ANR	721477	AssignmentExpression	"offset = sdb_num_get ( sdb , ""offset"" , 0 )"		721347	2		=			
ANR	721478	Identifier	offset		721347	0					
ANR	721479	CallExpression	"sdb_num_get ( sdb , ""offset"" , 0 )"		721347	1					
ANR	721480	Callee	sdb_num_get		721347	0					
ANR	721481	Identifier	sdb_num_get		721347	0					
ANR	721482	ArgumentList	sdb		721347	1					
ANR	721483	Argument	sdb		721347	0					
ANR	721484	Identifier	sdb		721347	0					
ANR	721485	Argument	"""offset"""		721347	1					
ANR	721486	PrimaryExpression	"""offset"""		721347	0					
ANR	721487	Argument	0		721347	2					
ANR	721488	PrimaryExpression	0		721347	0					
ANR	721489	IdentifierDeclStatement	"ut64 link = sdb_num_get ( sdb , ""link"" , 0 ) ;"	3388:2:97990:98030	721347	4	True				
ANR	721490	IdentifierDecl	"link = sdb_num_get ( sdb , ""link"" , 0 )"		721347	0					
ANR	721491	IdentifierDeclType	ut64		721347	0					
ANR	721492	Identifier	link		721347	1					
ANR	721493	AssignmentExpression	"link = sdb_num_get ( sdb , ""link"" , 0 )"		721347	2		=			
ANR	721494	Identifier	link		721347	0					
ANR	721495	CallExpression	"sdb_num_get ( sdb , ""link"" , 0 )"		721347	1					
ANR	721496	Callee	sdb_num_get		721347	0					
ANR	721497	Identifier	sdb_num_get		721347	0					
ANR	721498	ArgumentList	sdb		721347	1					
ANR	721499	Argument	sdb		721347	0					
ANR	721500	Identifier	sdb		721347	0					
ANR	721501	Argument	"""link"""		721347	1					
ANR	721502	PrimaryExpression	"""link"""		721347	0					
ANR	721503	Argument	0		721347	2					
ANR	721504	PrimaryExpression	0		721347	0					
ANR	721505	IdentifierDeclStatement	"ut64 num_entries = sdb_num_get ( sdb , ""num_entries"" , 0 ) ;"	3389:2:98034:98088	721347	5	True				
ANR	721506	IdentifierDecl	"num_entries = sdb_num_get ( sdb , ""num_entries"" , 0 )"		721347	0					
ANR	721507	IdentifierDeclType	ut64		721347	0					
ANR	721508	Identifier	num_entries		721347	1					
ANR	721509	AssignmentExpression	"num_entries = sdb_num_get ( sdb , ""num_entries"" , 0 )"		721347	2		=			
ANR	721510	Identifier	num_entries		721347	0					
ANR	721511	CallExpression	"sdb_num_get ( sdb , ""num_entries"" , 0 )"		721347	1					
ANR	721512	Callee	sdb_num_get		721347	0					
ANR	721513	Identifier	sdb_num_get		721347	0					
ANR	721514	ArgumentList	sdb		721347	1					
ANR	721515	Argument	sdb		721347	0					
ANR	721516	Identifier	sdb		721347	0					
ANR	721517	Argument	"""num_entries"""		721347	1					
ANR	721518	PrimaryExpression	"""num_entries"""		721347	0					
ANR	721519	Argument	0		721347	2					
ANR	721520	PrimaryExpression	0		721347	0					
ANR	721521	IdentifierDeclStatement	"const char * section_name = sdb_const_get ( sdb , ""section_name"" , 0 ) ;"	3390:2:98092:98157	721347	6	True				
ANR	721522	IdentifierDecl	"* section_name = sdb_const_get ( sdb , ""section_name"" , 0 )"		721347	0					
ANR	721523	IdentifierDeclType	const char *		721347	0					
ANR	721524	Identifier	section_name		721347	1					
ANR	721525	AssignmentExpression	"* section_name = sdb_const_get ( sdb , ""section_name"" , 0 )"		721347	2		=			
ANR	721526	Identifier	section_name		721347	0					
ANR	721527	CallExpression	"sdb_const_get ( sdb , ""section_name"" , 0 )"		721347	1					
ANR	721528	Callee	sdb_const_get		721347	0					
ANR	721529	Identifier	sdb_const_get		721347	0					
ANR	721530	ArgumentList	sdb		721347	1					
ANR	721531	Argument	sdb		721347	0					
ANR	721532	Identifier	sdb		721347	0					
ANR	721533	Argument	"""section_name"""		721347	1					
ANR	721534	PrimaryExpression	"""section_name"""		721347	0					
ANR	721535	Argument	0		721347	2					
ANR	721536	PrimaryExpression	0		721347	0					
ANR	721537	IdentifierDeclStatement	"const char * link_section_name = sdb_const_get ( sdb , ""link_section_name"" , 0 ) ;"	3391:2:98161:98236	721347	7	True				
ANR	721538	IdentifierDecl	"* link_section_name = sdb_const_get ( sdb , ""link_section_name"" , 0 )"		721347	0					
ANR	721539	IdentifierDeclType	const char *		721347	0					
ANR	721540	Identifier	link_section_name		721347	1					
ANR	721541	AssignmentExpression	"* link_section_name = sdb_const_get ( sdb , ""link_section_name"" , 0 )"		721347	2		=			
ANR	721542	Identifier	link_section_name		721347	0					
ANR	721543	CallExpression	"sdb_const_get ( sdb , ""link_section_name"" , 0 )"		721347	1					
ANR	721544	Callee	sdb_const_get		721347	0					
ANR	721545	Identifier	sdb_const_get		721347	0					
ANR	721546	ArgumentList	sdb		721347	1					
ANR	721547	Argument	sdb		721347	0					
ANR	721548	Identifier	sdb		721347	0					
ANR	721549	Argument	"""link_section_name"""		721347	1					
ANR	721550	PrimaryExpression	"""link_section_name"""		721347	0					
ANR	721551	Argument	0		721347	2					
ANR	721552	PrimaryExpression	0		721347	0					
ANR	721553	IfStatement	if ( IS_MODE_JSON ( mode ) )		721347	8					
ANR	721554	Condition	IS_MODE_JSON ( mode )	3393:6:98245:98263	721347	0	True				
ANR	721555	CallExpression	IS_MODE_JSON ( mode )		721347	0					
ANR	721556	Callee	IS_MODE_JSON		721347	0					
ANR	721557	Identifier	IS_MODE_JSON		721347	0					
ANR	721558	ArgumentList	mode		721347	1					
ANR	721559	Argument	mode		721347	0					
ANR	721560	Identifier	mode		721347	0					
ANR	721561	CompoundStatement		24:27:808:808	721347	1					
ANR	721562	IfStatement	if ( ! firstit_for_versym )		721347	0					
ANR	721563	Condition	! firstit_for_versym	3394:7:98275:98293	721347	0	True				
ANR	721564	UnaryOperationExpression	! firstit_for_versym		721347	0					
ANR	721565	UnaryOperator	!		721347	0					
ANR	721566	Identifier	firstit_for_versym		721347	1					
ANR	721567	CompoundStatement		25:28:838:838	721347	1					
ANR	721568	ExpressionStatement	"r_cons_printf ( "","" )"	3394:30:98298:98317	721347	0	True				
ANR	721569	CallExpression	"r_cons_printf ( "","" )"		721347	0					
ANR	721570	Callee	r_cons_printf		721347	0					
ANR	721571	Identifier	r_cons_printf		721347	0					
ANR	721572	ArgumentList	""","""		721347	1					
ANR	721573	Argument	""","""		721347	0					
ANR	721574	PrimaryExpression	""","""		721347	0					
ANR	721575	Statement	r_cons_printf	3395:3:98324:98336	721347	1	True				
ANR	721576	Statement	(	3395:17:98338:98338	721347	2	True				
ANR	721577	Statement	"""{\\""section_name\\"":\\""%s\\"",\\""address\\"":%"""	3395:18:98339:98378	721347	3	True				
ANR	721578	Statement	PFMT64u	3395:58:98379:98385	721347	4	True				
ANR	721579	Statement	""",\\""offset\\"":%"""	3395:65:98386:98400	721347	5	True				
ANR	721580	Statement	PFMT64u	3395:80:98401:98407	721347	6	True				
ANR	721581	Statement	""","""	3395:87:98408:98410	721347	7	True				
ANR	721582	Statement	","	3395:90:98411:98411	721347	8	True				
ANR	721583	Statement	section_name	3396:5:98418:98429	721347	9	True				
ANR	721584	Statement	","	3396:17:98430:98430	721347	10	True				
ANR	721585	Statement	(	3396:19:98432:98432	721347	11	True				
ANR	721586	Statement	ut64	3396:20:98433:98436	721347	12	True				
ANR	721587	Statement	)	3396:24:98437:98437	721347	13	True				
ANR	721588	Statement	addr	3396:25:98438:98441	721347	14	True				
ANR	721589	Statement	","	3396:29:98442:98442	721347	15	True				
ANR	721590	Statement	(	3396:31:98444:98444	721347	16	True				
ANR	721591	Statement	ut64	3396:32:98445:98448	721347	17	True				
ANR	721592	Statement	)	3396:36:98449:98449	721347	18	True				
ANR	721593	Statement	offset	3396:37:98450:98455	721347	19	True				
ANR	721594	Statement	)	3396:43:98456:98456	721347	20	True				
ANR	721595	ExpressionStatement		3396:44:98457:98457	721347	21	True				
ANR	721596	Statement	r_cons_printf	3397:3:98462:98474	721347	22	True				
ANR	721597	Statement	(	3397:17:98476:98476	721347	23	True				
ANR	721598	Statement	"""\\""link\\"":%"""	3397:18:98477:98488	721347	24	True				
ANR	721599	Statement	PFMT64u	3397:30:98489:98495	721347	25	True				
ANR	721600	Statement	""",\\""link_section_name\\"":\\""%s\\"",\\""entries\\"":["""	3397:37:98496:98540	721347	26	True				
ANR	721601	Statement	","	3397:82:98541:98541	721347	27	True				
ANR	721602	Statement	(	3398:5:98548:98548	721347	28	True				
ANR	721603	Statement	ut32	3398:6:98549:98552	721347	29	True				
ANR	721604	Statement	)	3398:10:98553:98553	721347	30	True				
ANR	721605	Statement	link	3398:11:98554:98557	721347	31	True				
ANR	721606	Statement	","	3398:15:98558:98558	721347	32	True				
ANR	721607	Statement	link_section_name	3398:17:98560:98576	721347	33	True				
ANR	721608	Statement	)	3398:34:98577:98577	721347	34	True				
ANR	721609	ExpressionStatement		3398:35:98578:98578	721347	35	True				
ANR	721610	ElseStatement	else		721347	0					
ANR	721611	CompoundStatement		30:9:1131:1131	721347	0					
ANR	721612	Statement	r_cons_printf	3400:3:98594:98606	721347	0	True				
ANR	721613	Statement	(	3400:17:98608:98608	721347	1	True				
ANR	721614	Statement	"""Version symbols section '%s' contains %"""	3400:18:98609:98649	721347	2	True				
ANR	721615	Statement	PFMT64u	3400:59:98650:98656	721347	3	True				
ANR	721616	Statement	""" entries:\\n"""	3400:66:98657:98669	721347	4	True				
ANR	721617	Statement	","	3400:79:98670:98670	721347	5	True				
ANR	721618	Statement	section_name	3400:81:98672:98683	721347	6	True				
ANR	721619	Statement	","	3400:93:98684:98684	721347	7	True				
ANR	721620	Statement	num_entries	3400:95:98686:98696	721347	8	True				
ANR	721621	Statement	)	3400:106:98697:98697	721347	9	True				
ANR	721622	ExpressionStatement		3400:107:98698:98698	721347	10	True				
ANR	721623	Statement	r_cons_printf	3401:3:98703:98715	721347	11	True				
ANR	721624	Statement	(	3401:17:98717:98717	721347	12	True				
ANR	721625	Statement	""" Addr: 0x%08"""	3401:18:98718:98731	721347	13	True				
ANR	721626	Statement	PFMT64x	3401:32:98732:98738	721347	14	True				
ANR	721627	Statement	"""  Offset: 0x%08"""	3401:39:98739:98755	721347	15	True				
ANR	721628	Statement	PFMT64x	3401:56:98756:98762	721347	16	True				
ANR	721629	Statement	"""  Link: %x (%s)\\n"""	3401:63:98763:98781	721347	17	True				
ANR	721630	Statement	","	3401:82:98782:98782	721347	18	True				
ANR	721631	Statement	(	3402:4:98788:98788	721347	19	True				
ANR	721632	Statement	ut64	3402:5:98789:98792	721347	20	True				
ANR	721633	Statement	)	3402:9:98793:98793	721347	21	True				
ANR	721634	Statement	addr	3402:10:98794:98797	721347	22	True				
ANR	721635	Statement	","	3402:14:98798:98798	721347	23	True				
ANR	721636	Statement	(	3402:16:98800:98800	721347	24	True				
ANR	721637	Statement	ut64	3402:17:98801:98804	721347	25	True				
ANR	721638	Statement	)	3402:21:98805:98805	721347	26	True				
ANR	721639	Statement	offset	3402:22:98806:98811	721347	27	True				
ANR	721640	Statement	","	3402:28:98812:98812	721347	28	True				
ANR	721641	Statement	(	3402:30:98814:98814	721347	29	True				
ANR	721642	Statement	ut32	3402:31:98815:98818	721347	30	True				
ANR	721643	Statement	)	3402:35:98819:98819	721347	31	True				
ANR	721644	Statement	link	3402:36:98820:98823	721347	32	True				
ANR	721645	Statement	","	3402:40:98824:98824	721347	33	True				
ANR	721646	Statement	link_section_name	3402:42:98826:98842	721347	34	True				
ANR	721647	Statement	)	3402:59:98843:98843	721347	35	True				
ANR	721648	ExpressionStatement		3402:60:98844:98844	721347	36	True				
ANR	721649	IdentifierDeclStatement	int i ;	3404:2:98852:98857	721347	9	True				
ANR	721650	IdentifierDecl	i		721347	0					
ANR	721651	IdentifierDeclType	int		721347	0					
ANR	721652	Identifier	i		721347	1					
ANR	721653	ForStatement	for ( i = 0 ; i < num_entries ; i ++ )		721347	10					
ANR	721654	ForInit	i = 0 ;	3405:7:98866:98871	721347	0	True				
ANR	721655	AssignmentExpression	i = 0		721347	0		=			
ANR	721656	Identifier	i		721347	0					
ANR	721657	PrimaryExpression	0		721347	1					
ANR	721658	Condition	i < num_entries	3405:14:98873:98887	721347	1	True				
ANR	721659	RelationalExpression	i < num_entries		721347	0		<			
ANR	721660	Identifier	i		721347	0					
ANR	721661	Identifier	num_entries		721347	1					
ANR	721662	PostIncDecOperationExpression	i ++	3405:31:98890:98892	721347	2	True				
ANR	721663	Identifier	i		721347	0					
ANR	721664	IncDec	++		721347	1					
ANR	721665	CompoundStatement		38:3:1487:1534	721347	3					
ANR	721666	IdentifierDeclStatement	"const char * key = sdb_fmt ( ""entry%d"" , i ) ;"	3406:3:98900:98940	721347	0	True				
ANR	721667	IdentifierDecl	"* key = sdb_fmt ( ""entry%d"" , i )"		721347	0					
ANR	721668	IdentifierDeclType	const char *		721347	0					
ANR	721669	Identifier	key		721347	1					
ANR	721670	AssignmentExpression	"* key = sdb_fmt ( ""entry%d"" , i )"		721347	2		=			
ANR	721671	Identifier	key		721347	0					
ANR	721672	CallExpression	"sdb_fmt ( ""entry%d"" , i )"		721347	1					
ANR	721673	Callee	sdb_fmt		721347	0					
ANR	721674	Identifier	sdb_fmt		721347	0					
ANR	721675	ArgumentList	"""entry%d"""		721347	1					
ANR	721676	Argument	"""entry%d"""		721347	0					
ANR	721677	PrimaryExpression	"""entry%d"""		721347	0					
ANR	721678	Argument	i		721347	1					
ANR	721679	Identifier	i		721347	0					
ANR	721680	IdentifierDeclStatement	"const char * value = sdb_const_get ( sdb , key , 0 ) ;"	3407:3:98945:98992	721347	1	True				
ANR	721681	IdentifierDecl	"* value = sdb_const_get ( sdb , key , 0 )"		721347	0					
ANR	721682	IdentifierDeclType	const char *		721347	0					
ANR	721683	Identifier	value		721347	1					
ANR	721684	AssignmentExpression	"* value = sdb_const_get ( sdb , key , 0 )"		721347	2		=			
ANR	721685	Identifier	value		721347	0					
ANR	721686	CallExpression	"sdb_const_get ( sdb , key , 0 )"		721347	1					
ANR	721687	Callee	sdb_const_get		721347	0					
ANR	721688	Identifier	sdb_const_get		721347	0					
ANR	721689	ArgumentList	sdb		721347	1					
ANR	721690	Argument	sdb		721347	0					
ANR	721691	Identifier	sdb		721347	0					
ANR	721692	Argument	key		721347	1					
ANR	721693	Identifier	key		721347	0					
ANR	721694	Argument	0		721347	2					
ANR	721695	PrimaryExpression	0		721347	0					
ANR	721696	IfStatement	if ( value )		721347	2					
ANR	721697	Condition	value	3408:7:99001:99005	721347	0	True				
ANR	721698	Identifier	value		721347	0					
ANR	721699	CompoundStatement		39:14:1550:1550	721347	1					
ANR	721700	IfStatement	"if ( oValue && ! strcmp ( value , oValue ) )"		721347	0					
ANR	721701	Condition	"oValue && ! strcmp ( value , oValue )"	3409:8:99018:99050	721347	0	True				
ANR	721702	AndExpression	"oValue && ! strcmp ( value , oValue )"		721347	0		&&			
ANR	721703	Identifier	oValue		721347	0					
ANR	721704	UnaryOperationExpression	"! strcmp ( value , oValue )"		721347	1					
ANR	721705	UnaryOperator	!		721347	0					
ANR	721706	CallExpression	"strcmp ( value , oValue )"		721347	1					
ANR	721707	Callee	strcmp		721347	0					
ANR	721708	Identifier	strcmp		721347	0					
ANR	721709	ArgumentList	value		721347	1					
ANR	721710	Argument	value		721347	0					
ANR	721711	Identifier	value		721347	0					
ANR	721712	Argument	oValue		721347	1					
ANR	721713	Identifier	oValue		721347	0					
ANR	721714	CompoundStatement		40:43:1595:1595	721347	1					
ANR	721715	ContinueStatement	continue ;	3410:5:99060:99068	721347	0	True				
ANR	721716	IfStatement	if ( IS_MODE_JSON ( mode ) )		721347	1					
ANR	721717	Condition	IS_MODE_JSON ( mode )	3412:8:99084:99102	721347	0	True				
ANR	721718	CallExpression	IS_MODE_JSON ( mode )		721347	0					
ANR	721719	Callee	IS_MODE_JSON		721347	0					
ANR	721720	Identifier	IS_MODE_JSON		721347	0					
ANR	721721	ArgumentList	mode		721347	1					
ANR	721722	Argument	mode		721347	0					
ANR	721723	Identifier	mode		721347	0					
ANR	721724	CompoundStatement		45:5:1695:1737	721347	1					
ANR	721725	IfStatement	if ( i > 0 )		721347	0					
ANR	721726	Condition	i > 0	3413:9:99116:99120	721347	0	True				
ANR	721727	RelationalExpression	i > 0		721347	0		>			
ANR	721728	Identifier	i		721347	0					
ANR	721729	PrimaryExpression	0		721347	1					
ANR	721730	CompoundStatement		44:16:1665:1665	721347	1					
ANR	721731	ExpressionStatement	"r_cons_printf ( "","" )"	3413:18:99125:99144	721347	0	True				
ANR	721732	CallExpression	"r_cons_printf ( "","" )"		721347	0					
ANR	721733	Callee	r_cons_printf		721347	0					
ANR	721734	Identifier	r_cons_printf		721347	0					
ANR	721735	ArgumentList	""","""		721347	1					
ANR	721736	Argument	""","""		721347	0					
ANR	721737	PrimaryExpression	""","""		721347	0					
ANR	721738	IdentifierDeclStatement	char * escaped_value = r_str_escape ( value ) ;	3414:5:99153:99195	721347	1	True				
ANR	721739	IdentifierDecl	* escaped_value = r_str_escape ( value )		721347	0					
ANR	721740	IdentifierDeclType	char *		721347	0					
ANR	721741	Identifier	escaped_value		721347	1					
ANR	721742	AssignmentExpression	* escaped_value = r_str_escape ( value )		721347	2		=			
ANR	721743	Identifier	escaped_value		721347	0					
ANR	721744	CallExpression	r_str_escape ( value )		721347	1					
ANR	721745	Callee	r_str_escape		721347	0					
ANR	721746	Identifier	r_str_escape		721347	0					
ANR	721747	ArgumentList	value		721347	1					
ANR	721748	Argument	value		721347	0					
ANR	721749	Identifier	value		721347	0					
ANR	721750	Statement	r_cons_printf	3415:5:99202:99214	721347	2	True				
ANR	721751	Statement	(	3415:19:99216:99216	721347	3	True				
ANR	721752	Statement	"""{\\""idx\\"":%"""	3415:20:99217:99228	721347	4	True				
ANR	721753	Statement	PFMT64u	3415:32:99229:99235	721347	5	True				
ANR	721754	Statement	""",\\""value\\"":\\""%s\\""}"""	3415:39:99236:99255	721347	6	True				
ANR	721755	Statement	","	3415:59:99256:99256	721347	7	True				
ANR	721756	Statement	(	3416:7:99265:99265	721347	8	True				
ANR	721757	Statement	ut64	3416:8:99266:99269	721347	9	True				
ANR	721758	Statement	)	3416:12:99270:99270	721347	10	True				
ANR	721759	Statement	i	3416:14:99272:99272	721347	11	True				
ANR	721760	Statement	","	3416:15:99273:99273	721347	12	True				
ANR	721761	Statement	escaped_value	3416:17:99275:99287	721347	13	True				
ANR	721762	Statement	)	3416:30:99288:99288	721347	14	True				
ANR	721763	ExpressionStatement		3416:31:99289:99289	721347	15	True				
ANR	721764	ExpressionStatement	free ( escaped_value )	3417:5:99296:99316	721347	16	True				
ANR	721765	CallExpression	free ( escaped_value )		721347	0					
ANR	721766	Callee	free		721347	0					
ANR	721767	Identifier	free		721347	0					
ANR	721768	ArgumentList	escaped_value		721347	1					
ANR	721769	Argument	escaped_value		721347	0					
ANR	721770	Identifier	escaped_value		721347	0					
ANR	721771	ElseStatement	else		721347	0					
ANR	721772	CompoundStatement		49:11:1871:1871	721347	0					
ANR	721773	Statement	r_cons_printf	3419:5:99336:99348	721347	0	True				
ANR	721774	Statement	(	3419:19:99350:99350	721347	1	True				
ANR	721775	Statement	"""  0x%08"""	3419:20:99351:99359	721347	2	True				
ANR	721776	Statement	PFMT64x	3419:29:99360:99366	721347	3	True				
ANR	721777	Statement	""": """	3419:36:99367:99370	721347	4	True				
ANR	721778	Statement	","	3419:40:99371:99371	721347	5	True				
ANR	721779	Statement	(	3419:42:99373:99373	721347	6	True				
ANR	721780	Statement	ut64	3419:43:99374:99377	721347	7	True				
ANR	721781	Statement	)	3419:47:99378:99378	721347	8	True				
ANR	721782	Statement	i	3419:49:99380:99380	721347	9	True				
ANR	721783	Statement	)	3419:50:99381:99381	721347	10	True				
ANR	721784	ExpressionStatement		3419:51:99382:99382	721347	11	True				
ANR	721785	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , value )"	3420:5:99389:99418	721347	12	True				
ANR	721786	CallExpression	"r_cons_printf ( ""%s\\n"" , value )"		721347	0					
ANR	721787	Callee	r_cons_printf		721347	0					
ANR	721788	Identifier	r_cons_printf		721347	0					
ANR	721789	ArgumentList	"""%s\\n"""		721347	1					
ANR	721790	Argument	"""%s\\n"""		721347	0					
ANR	721791	PrimaryExpression	"""%s\\n"""		721347	0					
ANR	721792	Argument	value		721347	1					
ANR	721793	Identifier	value		721347	0					
ANR	721794	ExpressionStatement	oValue = value	3422:4:99430:99444	721347	2	True				
ANR	721795	AssignmentExpression	oValue = value		721347	0		=			
ANR	721796	Identifier	oValue		721347	0					
ANR	721797	Identifier	value		721347	1					
ANR	721798	IfStatement	if ( IS_MODE_JSON ( mode ) )		721347	11					
ANR	721799	Condition	IS_MODE_JSON ( mode )	3425:6:99461:99479	721347	0	True				
ANR	721800	CallExpression	IS_MODE_JSON ( mode )		721347	0					
ANR	721801	Callee	IS_MODE_JSON		721347	0					
ANR	721802	Identifier	IS_MODE_JSON		721347	0					
ANR	721803	ArgumentList	mode		721347	1					
ANR	721804	Argument	mode		721347	0					
ANR	721805	Identifier	mode		721347	0					
ANR	721806	CompoundStatement		56:27:2024:2024	721347	1					
ANR	721807	ExpressionStatement	"r_cons_printf ( ""]}"" )"	3426:3:99487:99507	721347	0	True				
ANR	721808	CallExpression	"r_cons_printf ( ""]}"" )"		721347	0					
ANR	721809	Callee	r_cons_printf		721347	0					
ANR	721810	Identifier	r_cons_printf		721347	0					
ANR	721811	ArgumentList	"""]}"""		721347	1					
ANR	721812	Argument	"""]}"""		721347	0					
ANR	721813	PrimaryExpression	"""]}"""		721347	0					
ANR	721814	ElseStatement	else		721347	0					
ANR	721815	CompoundStatement		58:9:2060:2060	721347	0					
ANR	721816	ExpressionStatement	"r_cons_printf ( ""\\n\\n"" )"	3428:3:99523:99545	721347	0	True				
ANR	721817	CallExpression	"r_cons_printf ( ""\\n\\n"" )"		721347	0					
ANR	721818	Callee	r_cons_printf		721347	0					
ANR	721819	Identifier	r_cons_printf		721347	0					
ANR	721820	ArgumentList	"""\\n\\n"""		721347	1					
ANR	721821	Argument	"""\\n\\n"""		721347	0					
ANR	721822	PrimaryExpression	"""\\n\\n"""		721347	0					
ANR	721823	ExpressionStatement	firstit_for_versym = false	3430:2:99553:99579	721347	12	True				
ANR	721824	AssignmentExpression	firstit_for_versym = false		721347	0		=			
ANR	721825	Identifier	firstit_for_versym		721347	0					
ANR	721826	Identifier	false		721347	1					
ANR	721827	IfStatement	if ( IS_MODE_JSON ( mode ) )		721347	9					
ANR	721828	Condition	IS_MODE_JSON ( mode )	3432:5:99589:99607	721347	0	True				
ANR	721829	CallExpression	IS_MODE_JSON ( mode )		721347	0					
ANR	721830	Callee	IS_MODE_JSON		721347	0					
ANR	721831	Identifier	IS_MODE_JSON		721347	0					
ANR	721832	ArgumentList	mode		721347	1					
ANR	721833	Argument	mode		721347	0					
ANR	721834	Identifier	mode		721347	0					
ANR	721835	CompoundStatement		63:26:2152:2152	721347	1					
ANR	721836	ExpressionStatement	"r_cons_printf ( ""],\\""verneed\\"":["" )"	3433:2:99614:99647	721347	0	True				
ANR	721837	CallExpression	"r_cons_printf ( ""],\\""verneed\\"":["" )"		721347	0					
ANR	721838	Callee	r_cons_printf		721347	0					
ANR	721839	Identifier	r_cons_printf		721347	0					
ANR	721840	ArgumentList	"""],\\""verneed\\"":["""		721347	1					
ANR	721841	Argument	"""],\\""verneed\\"":["""		721347	0					
ANR	721842	PrimaryExpression	"""],\\""verneed\\"":["""		721347	0					
ANR	721843	IdentifierDeclStatement	bool firstit_dowhile_verneed = true ;	3436:1:99654:99689	721347	10	True				
ANR	721844	IdentifierDecl	firstit_dowhile_verneed = true		721347	0					
ANR	721845	IdentifierDeclType	bool		721347	0					
ANR	721846	Identifier	firstit_dowhile_verneed		721347	1					
ANR	721847	AssignmentExpression	firstit_dowhile_verneed = true		721347	2		=			
ANR	721848	Identifier	true		721347	0					
ANR	721849	Identifier	true		721347	1					
ANR	721850	DoStatement	do		721347	11					
ANR	721851	CompoundStatement		91:2:3282:3313	721347	0					
ANR	721852	IdentifierDeclStatement	"char * verneed_path = r_str_newf ( format , ""verneed"" , num_verneed ++ ) ;"	3438:2:99699:99765	721347	0	True				
ANR	721853	IdentifierDecl	"* verneed_path = r_str_newf ( format , ""verneed"" , num_verneed ++ )"		721347	0					
ANR	721854	IdentifierDeclType	char *		721347	0					
ANR	721855	Identifier	verneed_path		721347	1					
ANR	721856	AssignmentExpression	"* verneed_path = r_str_newf ( format , ""verneed"" , num_verneed ++ )"		721347	2		=			
ANR	721857	Identifier	verneed_path		721347	0					
ANR	721858	CallExpression	"r_str_newf ( format , ""verneed"" , num_verneed ++ )"		721347	1					
ANR	721859	Callee	r_str_newf		721347	0					
ANR	721860	Identifier	r_str_newf		721347	0					
ANR	721861	ArgumentList	format		721347	1					
ANR	721862	Argument	format		721347	0					
ANR	721863	Identifier	format		721347	0					
ANR	721864	Argument	"""verneed"""		721347	1					
ANR	721865	PrimaryExpression	"""verneed"""		721347	0					
ANR	721866	Argument	num_verneed ++		721347	2					
ANR	721867	PostIncDecOperationExpression	num_verneed ++		721347	0					
ANR	721868	Identifier	num_verneed		721347	0					
ANR	721869	IncDec	++		721347	1					
ANR	721870	IfStatement	"if ( ! ( sdb = sdb_ns_path ( r -> sdb , verneed_path , 0 ) ) )"		721347	1					
ANR	721871	Condition	"! ( sdb = sdb_ns_path ( r -> sdb , verneed_path , 0 ) )"	3439:6:99773:99818	721347	0	True				
ANR	721872	UnaryOperationExpression	"! ( sdb = sdb_ns_path ( r -> sdb , verneed_path , 0 ) )"		721347	0					
ANR	721873	UnaryOperator	!		721347	0					
ANR	721874	AssignmentExpression	"sdb = sdb_ns_path ( r -> sdb , verneed_path , 0 )"		721347	1		=			
ANR	721875	Identifier	sdb		721347	0					
ANR	721876	CallExpression	"sdb_ns_path ( r -> sdb , verneed_path , 0 )"		721347	1					
ANR	721877	Callee	sdb_ns_path		721347	0					
ANR	721878	Identifier	sdb_ns_path		721347	0					
ANR	721879	ArgumentList	r -> sdb		721347	1					
ANR	721880	Argument	r -> sdb		721347	0					
ANR	721881	PtrMemberAccess	r -> sdb		721347	0					
ANR	721882	Identifier	r		721347	0					
ANR	721883	Identifier	sdb		721347	1					
ANR	721884	Argument	verneed_path		721347	1					
ANR	721885	Identifier	verneed_path		721347	0					
ANR	721886	Argument	0		721347	2					
ANR	721887	PrimaryExpression	0		721347	0					
ANR	721888	CompoundStatement		70:54:2363:2363	721347	1					
ANR	721889	BreakStatement	break ;	3440:3:99826:99831	721347	0	True				
ANR	721890	IfStatement	if ( IS_MODE_JSON ( mode ) )		721347	2					
ANR	721891	Condition	IS_MODE_JSON ( mode )	3442:6:99843:99861	721347	0	True				
ANR	721892	CallExpression	IS_MODE_JSON ( mode )		721347	0					
ANR	721893	Callee	IS_MODE_JSON		721347	0					
ANR	721894	Identifier	IS_MODE_JSON		721347	0					
ANR	721895	ArgumentList	mode		721347	1					
ANR	721896	Argument	mode		721347	0					
ANR	721897	Identifier	mode		721347	0					
ANR	721898	CompoundStatement		73:27:2406:2406	721347	1					
ANR	721899	IfStatement	if ( ! firstit_dowhile_verneed )		721347	0					
ANR	721900	Condition	! firstit_dowhile_verneed	3443:7:99873:99896	721347	0	True				
ANR	721901	UnaryOperationExpression	! firstit_dowhile_verneed		721347	0					
ANR	721902	UnaryOperator	!		721347	0					
ANR	721903	Identifier	firstit_dowhile_verneed		721347	1					
ANR	721904	CompoundStatement		74:33:2441:2441	721347	1					
ANR	721905	ExpressionStatement	"r_cons_printf ( "","" )"	3444:4:99905:99924	721347	0	True				
ANR	721906	CallExpression	"r_cons_printf ( "","" )"		721347	0					
ANR	721907	Callee	r_cons_printf		721347	0					
ANR	721908	Identifier	r_cons_printf		721347	0					
ANR	721909	ArgumentList	""","""		721347	1					
ANR	721910	Argument	""","""		721347	0					
ANR	721911	PrimaryExpression	""","""		721347	0					
ANR	721912	Statement	r_cons_printf	3446:3:99934:99946	721347	1	True				
ANR	721913	Statement	(	3446:17:99948:99948	721347	2	True				
ANR	721914	Statement	"""{\\""section_name\\"":\\""%s\\"",\\""address\\"":%"""	3446:18:99949:99988	721347	3	True				
ANR	721915	Statement	PFMT64u	3446:58:99989:99995	721347	4	True				
ANR	721916	Statement	""",\\""offset\\"":%"""	3446:65:99996:100010	721347	5	True				
ANR	721917	Statement	PFMT64u	3446:80:100011:100017	721347	6	True				
ANR	721918	Statement	""","""	3446:87:100018:100020	721347	7	True				
ANR	721919	Statement	","	3446:90:100021:100021	721347	8	True				
ANR	721920	Statement	sdb_const_get	3447:4:100027:100039	721347	9	True				
ANR	721921	Statement	(	3447:18:100041:100041	721347	10	True				
ANR	721922	Statement	sdb	3447:19:100042:100044	721347	11	True				
ANR	721923	Statement	","	3447:22:100045:100045	721347	12	True				
ANR	721924	Statement	"""section_name"""	3447:24:100047:100060	721347	13	True				
ANR	721925	Statement	","	3447:38:100061:100061	721347	14	True				
ANR	721926	Statement	0	3447:40:100063:100063	721347	15	True				
ANR	721927	Statement	)	3447:41:100064:100064	721347	16	True				
ANR	721928	Statement	","	3447:42:100065:100065	721347	17	True				
ANR	721929	Statement	sdb_num_get	3447:44:100067:100077	721347	18	True				
ANR	721930	Statement	(	3447:56:100079:100079	721347	19	True				
ANR	721931	Statement	sdb	3447:57:100080:100082	721347	20	True				
ANR	721932	Statement	","	3447:60:100083:100083	721347	21	True				
ANR	721933	Statement	"""addr"""	3447:62:100085:100090	721347	22	True				
ANR	721934	Statement	","	3447:68:100091:100091	721347	23	True				
ANR	721935	Statement	0	3447:70:100093:100093	721347	24	True				
ANR	721936	Statement	)	3447:71:100094:100094	721347	25	True				
ANR	721937	Statement	","	3447:72:100095:100095	721347	26	True				
ANR	721938	Statement	sdb_num_get	3447:74:100097:100107	721347	27	True				
ANR	721939	Statement	(	3447:86:100109:100109	721347	28	True				
ANR	721940	Statement	sdb	3447:87:100110:100112	721347	29	True				
ANR	721941	Statement	","	3447:90:100113:100113	721347	30	True				
ANR	721942	Statement	"""offset"""	3447:92:100115:100122	721347	31	True				
ANR	721943	Statement	","	3447:100:100123:100123	721347	32	True				
ANR	721944	Statement	0	3447:102:100125:100125	721347	33	True				
ANR	721945	Statement	)	3447:103:100126:100126	721347	34	True				
ANR	721946	Statement	)	3447:104:100127:100127	721347	35	True				
ANR	721947	ExpressionStatement		3447:105:100128:100128	721347	36	True				
ANR	721948	Statement	r_cons_printf	3448:3:100133:100145	721347	37	True				
ANR	721949	Statement	(	3448:17:100147:100147	721347	38	True				
ANR	721950	Statement	"""\\""link\\"":%"""	3448:18:100148:100159	721347	39	True				
ANR	721951	Statement	PFMT64u	3448:30:100160:100166	721347	40	True				
ANR	721952	Statement	""",\\""link_section_name\\"":\\""%s\\"",\\""entries\\"":["""	3448:37:100167:100211	721347	41	True				
ANR	721953	Statement	","	3448:82:100212:100212	721347	42	True				
ANR	721954	Statement	sdb_num_get	3449:4:100218:100228	721347	43	True				
ANR	721955	Statement	(	3449:16:100230:100230	721347	44	True				
ANR	721956	Statement	sdb	3449:17:100231:100233	721347	45	True				
ANR	721957	Statement	","	3449:20:100234:100234	721347	46	True				
ANR	721958	Statement	"""link"""	3449:22:100236:100241	721347	47	True				
ANR	721959	Statement	","	3449:28:100242:100242	721347	48	True				
ANR	721960	Statement	0	3449:30:100244:100244	721347	49	True				
ANR	721961	Statement	)	3449:31:100245:100245	721347	50	True				
ANR	721962	Statement	","	3449:32:100246:100246	721347	51	True				
ANR	721963	Statement	sdb_const_get	3449:34:100248:100260	721347	52	True				
ANR	721964	Statement	(	3449:48:100262:100262	721347	53	True				
ANR	721965	Statement	sdb	3449:49:100263:100265	721347	54	True				
ANR	721966	Statement	","	3449:52:100266:100266	721347	55	True				
ANR	721967	Statement	"""link_section_name"""	3449:54:100268:100286	721347	56	True				
ANR	721968	Statement	","	3449:73:100287:100287	721347	57	True				
ANR	721969	Statement	0	3449:75:100289:100289	721347	58	True				
ANR	721970	Statement	)	3449:76:100290:100290	721347	59	True				
ANR	721971	Statement	)	3449:77:100291:100291	721347	60	True				
ANR	721972	ExpressionStatement		3449:78:100292:100292	721347	61	True				
ANR	721973	ElseStatement	else		721347	0					
ANR	721974	CompoundStatement		81:9:2845:2845	721347	0					
ANR	721975	ExpressionStatement	"r_cons_printf ( ""Version need section '%s' contains %d entries:\\n"" , sdb_const_get ( sdb , ""section_name"" , 0 ) , ( int ) sdb_num_get ( sdb , ""num_entries"" , 0 ) )"	3451:3:100308:100460	721347	0	True				
ANR	721976	CallExpression	"r_cons_printf ( ""Version need section '%s' contains %d entries:\\n"" , sdb_const_get ( sdb , ""section_name"" , 0 ) , ( int ) sdb_num_get ( sdb , ""num_entries"" , 0 ) )"		721347	0					
ANR	721977	Callee	r_cons_printf		721347	0					
ANR	721978	Identifier	r_cons_printf		721347	0					
ANR	721979	ArgumentList	"""Version need section '%s' contains %d entries:\\n"""		721347	1					
ANR	721980	Argument	"""Version need section '%s' contains %d entries:\\n"""		721347	0					
ANR	721981	PrimaryExpression	"""Version need section '%s' contains %d entries:\\n"""		721347	0					
ANR	721982	Argument	"sdb_const_get ( sdb , ""section_name"" , 0 )"		721347	1					
ANR	721983	CallExpression	"sdb_const_get ( sdb , ""section_name"" , 0 )"		721347	0					
ANR	721984	Callee	sdb_const_get		721347	0					
ANR	721985	Identifier	sdb_const_get		721347	0					
ANR	721986	ArgumentList	sdb		721347	1					
ANR	721987	Argument	sdb		721347	0					
ANR	721988	Identifier	sdb		721347	0					
ANR	721989	Argument	"""section_name"""		721347	1					
ANR	721990	PrimaryExpression	"""section_name"""		721347	0					
ANR	721991	Argument	0		721347	2					
ANR	721992	PrimaryExpression	0		721347	0					
ANR	721993	Argument	"( int ) sdb_num_get ( sdb , ""num_entries"" , 0 )"		721347	2					
ANR	721994	CastExpression	"( int ) sdb_num_get ( sdb , ""num_entries"" , 0 )"		721347	0					
ANR	721995	CastTarget	int		721347	0					
ANR	721996	CallExpression	"sdb_num_get ( sdb , ""num_entries"" , 0 )"		721347	1					
ANR	721997	Callee	sdb_num_get		721347	0					
ANR	721998	Identifier	sdb_num_get		721347	0					
ANR	721999	ArgumentList	sdb		721347	1					
ANR	722000	Argument	sdb		721347	0					
ANR	722001	Identifier	sdb		721347	0					
ANR	722002	Argument	"""num_entries"""		721347	1					
ANR	722003	PrimaryExpression	"""num_entries"""		721347	0					
ANR	722004	Argument	0		721347	2					
ANR	722005	PrimaryExpression	0		721347	0					
ANR	722006	Statement	r_cons_printf	3454:3:100466:100478	721347	1	True				
ANR	722007	Statement	(	3454:17:100480:100480	721347	2	True				
ANR	722008	Statement	""" Addr: 0x%08"""	3454:18:100481:100494	721347	3	True				
ANR	722009	Statement	PFMT64x	3454:32:100495:100501	721347	4	True				
ANR	722010	Statement	","	3454:39:100502:100502	721347	5	True				
ANR	722011	Statement	sdb_num_get	3454:41:100504:100514	721347	6	True				
ANR	722012	Statement	(	3454:53:100516:100516	721347	7	True				
ANR	722013	Statement	sdb	3454:54:100517:100519	721347	8	True				
ANR	722014	Statement	","	3454:57:100520:100520	721347	9	True				
ANR	722015	Statement	"""addr"""	3454:59:100522:100527	721347	10	True				
ANR	722016	Statement	","	3454:65:100528:100528	721347	11	True				
ANR	722017	Statement	0	3454:67:100530:100530	721347	12	True				
ANR	722018	Statement	)	3454:68:100531:100531	721347	13	True				
ANR	722019	Statement	)	3454:69:100532:100532	721347	14	True				
ANR	722020	ExpressionStatement		3454:70:100533:100533	721347	15	True				
ANR	722021	Statement	r_cons_printf	3456:3:100539:100551	721347	16	True				
ANR	722022	Statement	(	3456:17:100553:100553	721347	17	True				
ANR	722023	Statement	"""  Offset: 0x%08"""	3456:18:100554:100570	721347	18	True				
ANR	722024	Statement	PFMT64x	3456:35:100571:100577	721347	19	True				
ANR	722025	Statement	"""  Link to section: %"""	3456:42:100578:100599	721347	20	True				
ANR	722026	Statement	PFMT64d	3456:64:100600:100606	721347	21	True				
ANR	722027	Statement	""" (%s)\\n"""	3456:71:100607:100615	721347	22	True				
ANR	722028	Statement	","	3456:80:100616:100616	721347	23	True				
ANR	722029	Statement	sdb_num_get	3457:4:100622:100632	721347	24	True				
ANR	722030	Statement	(	3457:16:100634:100634	721347	25	True				
ANR	722031	Statement	sdb	3457:17:100635:100637	721347	26	True				
ANR	722032	Statement	","	3457:20:100638:100638	721347	27	True				
ANR	722033	Statement	"""offset"""	3457:22:100640:100647	721347	28	True				
ANR	722034	Statement	","	3457:30:100648:100648	721347	29	True				
ANR	722035	Statement	0	3457:32:100650:100650	721347	30	True				
ANR	722036	Statement	)	3457:33:100651:100651	721347	31	True				
ANR	722037	Statement	","	3457:34:100652:100652	721347	32	True				
ANR	722038	Statement	sdb_num_get	3457:36:100654:100664	721347	33	True				
ANR	722039	Statement	(	3457:48:100666:100666	721347	34	True				
ANR	722040	Statement	sdb	3457:49:100667:100669	721347	35	True				
ANR	722041	Statement	","	3457:52:100670:100670	721347	36	True				
ANR	722042	Statement	"""link"""	3457:54:100672:100677	721347	37	True				
ANR	722043	Statement	","	3457:60:100678:100678	721347	38	True				
ANR	722044	Statement	0	3457:62:100680:100680	721347	39	True				
ANR	722045	Statement	)	3457:63:100681:100681	721347	40	True				
ANR	722046	Statement	","	3457:64:100682:100682	721347	41	True				
ANR	722047	Statement	sdb_const_get	3458:4:100688:100700	721347	42	True				
ANR	722048	Statement	(	3458:18:100702:100702	721347	43	True				
ANR	722049	Statement	sdb	3458:19:100703:100705	721347	44	True				
ANR	722050	Statement	","	3458:22:100706:100706	721347	45	True				
ANR	722051	Statement	"""link_section_name"""	3458:24:100708:100726	721347	46	True				
ANR	722052	Statement	","	3458:43:100727:100727	721347	47	True				
ANR	722053	Statement	0	3458:45:100729:100729	721347	48	True				
ANR	722054	Statement	)	3458:46:100730:100730	721347	49	True				
ANR	722055	Statement	)	3458:47:100731:100731	721347	50	True				
ANR	722056	ExpressionStatement		3458:48:100732:100732	721347	51	True				
ANR	722057	IdentifierDeclStatement	bool firstit_for_verneed = true ;	3460:2:100740:100771	721347	3	True				
ANR	722058	IdentifierDecl	firstit_for_verneed = true		721347	0					
ANR	722059	IdentifierDeclType	bool		721347	0					
ANR	722060	Identifier	firstit_for_verneed		721347	1					
ANR	722061	AssignmentExpression	firstit_for_verneed = true		721347	2		=			
ANR	722062	Identifier	true		721347	0					
ANR	722063	Identifier	true		721347	1					
ANR	722064	ForStatement	for ( num_version = 0 ; ; num_version ++ )		721347	4					
ANR	722065	ForInit	num_version = 0 ;	3461:7:100780:100795	721347	0	True				
ANR	722066	AssignmentExpression	num_version = 0		721347	0		=			
ANR	722067	Identifier	num_version		721347	0					
ANR	722068	PrimaryExpression	0		721347	1					
ANR	722069	PostIncDecOperationExpression	num_version ++	3461:25:100798:100810	721347	1	True				
ANR	722070	Identifier	num_version		721347	0					
ANR	722071	IncDec	++		721347	1					
ANR	722072	CompoundStatement		126:3:4500:4535	721347	2					
ANR	722073	IdentifierDeclStatement	const char * filename = NULL ;	3462:3:100818:100845	721347	0	True				
ANR	722074	IdentifierDecl	* filename = NULL		721347	0					
ANR	722075	IdentifierDeclType	const char *		721347	0					
ANR	722076	Identifier	filename		721347	1					
ANR	722077	AssignmentExpression	* filename = NULL		721347	2		=			
ANR	722078	Identifier	NULL		721347	0					
ANR	722079	Identifier	NULL		721347	1					
ANR	722080	IdentifierDeclStatement	int num_vernaux = 0 ;	3463:3:100850:100869	721347	1	True				
ANR	722081	IdentifierDecl	num_vernaux = 0		721347	0					
ANR	722082	IdentifierDeclType	int		721347	0					
ANR	722083	Identifier	num_vernaux		721347	1					
ANR	722084	AssignmentExpression	num_vernaux = 0		721347	2		=			
ANR	722085	Identifier	num_vernaux		721347	0					
ANR	722086	PrimaryExpression	0		721347	1					
ANR	722087	IdentifierDeclStatement	"char * path_version = sdb_fmt ( ""%s/version%d"" , verneed_path , num_version ) ;"	3465:3:100875:100947	721347	2	True				
ANR	722088	IdentifierDecl	"* path_version = sdb_fmt ( ""%s/version%d"" , verneed_path , num_version )"		721347	0					
ANR	722089	IdentifierDeclType	char *		721347	0					
ANR	722090	Identifier	path_version		721347	1					
ANR	722091	AssignmentExpression	"* path_version = sdb_fmt ( ""%s/version%d"" , verneed_path , num_version )"		721347	2		=			
ANR	722092	Identifier	path_version		721347	0					
ANR	722093	CallExpression	"sdb_fmt ( ""%s/version%d"" , verneed_path , num_version )"		721347	1					
ANR	722094	Callee	sdb_fmt		721347	0					
ANR	722095	Identifier	sdb_fmt		721347	0					
ANR	722096	ArgumentList	"""%s/version%d"""		721347	1					
ANR	722097	Argument	"""%s/version%d"""		721347	0					
ANR	722098	PrimaryExpression	"""%s/version%d"""		721347	0					
ANR	722099	Argument	verneed_path		721347	1					
ANR	722100	Identifier	verneed_path		721347	0					
ANR	722101	Argument	num_version		721347	2					
ANR	722102	Identifier	num_version		721347	0					
ANR	722103	IfStatement	"if ( ! ( sdb = sdb_ns_path ( r -> sdb , path_version , 0 ) ) )"		721347	3					
ANR	722104	Condition	"! ( sdb = sdb_ns_path ( r -> sdb , path_version , 0 ) )"	3466:7:100956:101001	721347	0	True				
ANR	722105	UnaryOperationExpression	"! ( sdb = sdb_ns_path ( r -> sdb , path_version , 0 ) )"		721347	0					
ANR	722106	UnaryOperator	!		721347	0					
ANR	722107	AssignmentExpression	"sdb = sdb_ns_path ( r -> sdb , path_version , 0 )"		721347	1		=			
ANR	722108	Identifier	sdb		721347	0					
ANR	722109	CallExpression	"sdb_ns_path ( r -> sdb , path_version , 0 )"		721347	1					
ANR	722110	Callee	sdb_ns_path		721347	0					
ANR	722111	Identifier	sdb_ns_path		721347	0					
ANR	722112	ArgumentList	r -> sdb		721347	1					
ANR	722113	Argument	r -> sdb		721347	0					
ANR	722114	PtrMemberAccess	r -> sdb		721347	0					
ANR	722115	Identifier	r		721347	0					
ANR	722116	Identifier	sdb		721347	1					
ANR	722117	Argument	path_version		721347	1					
ANR	722118	Identifier	path_version		721347	0					
ANR	722119	Argument	0		721347	2					
ANR	722120	PrimaryExpression	0		721347	0					
ANR	722121	CompoundStatement		97:55:3546:3546	721347	1					
ANR	722122	BreakStatement	break ;	3467:4:101010:101015	721347	0	True				
ANR	722123	IfStatement	if ( IS_MODE_JSON ( mode ) )		721347	4					
ANR	722124	Condition	IS_MODE_JSON ( mode )	3469:7:101029:101047	721347	0	True				
ANR	722125	CallExpression	IS_MODE_JSON ( mode )		721347	0					
ANR	722126	Callee	IS_MODE_JSON		721347	0					
ANR	722127	Identifier	IS_MODE_JSON		721347	0					
ANR	722128	ArgumentList	mode		721347	1					
ANR	722129	Argument	mode		721347	0					
ANR	722130	Identifier	mode		721347	0					
ANR	722131	CompoundStatement		100:28:3592:3592	721347	1					
ANR	722132	IfStatement	if ( ! firstit_for_verneed )		721347	0					
ANR	722133	Condition	! firstit_for_verneed	3470:8:101060:101079	721347	0	True				
ANR	722134	UnaryOperationExpression	! firstit_for_verneed		721347	0					
ANR	722135	UnaryOperator	!		721347	0					
ANR	722136	Identifier	firstit_for_verneed		721347	1					
ANR	722137	CompoundStatement		101:30:3624:3624	721347	1					
ANR	722138	ExpressionStatement	"r_cons_printf ( "","" )"	3470:32:101084:101103	721347	0	True				
ANR	722139	CallExpression	"r_cons_printf ( "","" )"		721347	0					
ANR	722140	Callee	r_cons_printf		721347	0					
ANR	722141	Identifier	r_cons_printf		721347	0					
ANR	722142	ArgumentList	""","""		721347	1					
ANR	722143	Argument	""","""		721347	0					
ANR	722144	PrimaryExpression	""","""		721347	0					
ANR	722145	Statement	r_cons_printf	3471:4:101111:101123	721347	1	True				
ANR	722146	Statement	(	3471:18:101125:101125	721347	2	True				
ANR	722147	Statement	"""{\\""idx\\"":%"""	3471:19:101126:101137	721347	3	True				
ANR	722148	Statement	PFMT64u	3471:31:101138:101144	721347	4	True				
ANR	722149	Statement	""",\\""vn_version\\"":%d,"""	3471:38:101145:101165	721347	5	True				
ANR	722150	Statement	","	3471:59:101166:101166	721347	6	True				
ANR	722151	Statement	sdb_num_get	3472:5:101173:101183	721347	7	True				
ANR	722152	Statement	(	3472:17:101185:101185	721347	8	True				
ANR	722153	Statement	sdb	3472:18:101186:101188	721347	9	True				
ANR	722154	Statement	","	3472:21:101189:101189	721347	10	True				
ANR	722155	Statement	"""idx"""	3472:23:101191:101195	721347	11	True				
ANR	722156	Statement	","	3472:28:101196:101196	721347	12	True				
ANR	722157	Statement	0	3472:30:101198:101198	721347	13	True				
ANR	722158	Statement	)	3472:31:101199:101199	721347	14	True				
ANR	722159	Statement	","	3472:32:101200:101200	721347	15	True				
ANR	722160	Statement	(	3472:34:101202:101202	721347	16	True				
ANR	722161	Statement	int	3472:35:101203:101205	721347	17	True				
ANR	722162	Statement	)	3472:38:101206:101206	721347	18	True				
ANR	722163	Statement	sdb_num_get	3472:39:101207:101217	721347	19	True				
ANR	722164	Statement	(	3472:51:101219:101219	721347	20	True				
ANR	722165	Statement	sdb	3472:52:101220:101222	721347	21	True				
ANR	722166	Statement	","	3472:55:101223:101223	721347	22	True				
ANR	722167	Statement	"""vn_version"""	3472:57:101225:101236	721347	23	True				
ANR	722168	Statement	","	3472:69:101237:101237	721347	24	True				
ANR	722169	Statement	0	3472:71:101239:101239	721347	25	True				
ANR	722170	Statement	)	3472:72:101240:101240	721347	26	True				
ANR	722171	Statement	)	3472:73:101241:101241	721347	27	True				
ANR	722172	ExpressionStatement		3472:74:101242:101242	721347	28	True				
ANR	722173	ElseStatement	else		721347	0					
ANR	722174	CompoundStatement		104:10:3796:3796	721347	0					
ANR	722175	Statement	r_cons_printf	3474:4:101260:101272	721347	0	True				
ANR	722176	Statement	(	3474:18:101274:101274	721347	1	True				
ANR	722177	Statement	"""  0x%08"""	3474:19:101275:101283	721347	2	True				
ANR	722178	Statement	PFMT64x	3474:28:101284:101290	721347	3	True				
ANR	722179	Statement	""": Version: %d"""	3474:35:101291:101305	721347	4	True				
ANR	722180	Statement	","	3474:50:101306:101306	721347	5	True				
ANR	722181	Statement	sdb_num_get	3475:5:101313:101323	721347	6	True				
ANR	722182	Statement	(	3475:17:101325:101325	721347	7	True				
ANR	722183	Statement	sdb	3475:18:101326:101328	721347	8	True				
ANR	722184	Statement	","	3475:21:101329:101329	721347	9	True				
ANR	722185	Statement	"""idx"""	3475:23:101331:101335	721347	10	True				
ANR	722186	Statement	","	3475:28:101336:101336	721347	11	True				
ANR	722187	Statement	0	3475:30:101338:101338	721347	12	True				
ANR	722188	Statement	)	3475:31:101339:101339	721347	13	True				
ANR	722189	Statement	","	3475:32:101340:101340	721347	14	True				
ANR	722190	Statement	(	3475:34:101342:101342	721347	15	True				
ANR	722191	Statement	int	3475:35:101343:101345	721347	16	True				
ANR	722192	Statement	)	3475:38:101346:101346	721347	17	True				
ANR	722193	Statement	sdb_num_get	3475:39:101347:101357	721347	18	True				
ANR	722194	Statement	(	3475:51:101359:101359	721347	19	True				
ANR	722195	Statement	sdb	3475:52:101360:101362	721347	20	True				
ANR	722196	Statement	","	3475:55:101363:101363	721347	21	True				
ANR	722197	Statement	"""vn_version"""	3475:57:101365:101376	721347	22	True				
ANR	722198	Statement	","	3475:69:101377:101377	721347	23	True				
ANR	722199	Statement	0	3475:71:101379:101379	721347	24	True				
ANR	722200	Statement	)	3475:72:101380:101380	721347	25	True				
ANR	722201	Statement	)	3475:73:101381:101381	721347	26	True				
ANR	722202	ExpressionStatement		3475:74:101382:101382	721347	27	True				
ANR	722203	IfStatement	"if ( ( filename = sdb_const_get ( sdb , ""file_name"" , 0 ) ) )"		721347	5					
ANR	722204	Condition	"filename = sdb_const_get ( sdb , ""file_name"" , 0 )"	3478:7:101397:101444	721347	0	True				
ANR	722205	AssignmentExpression	"filename = sdb_const_get ( sdb , ""file_name"" , 0 )"		721347	0		=			
ANR	722206	Identifier	filename		721347	0					
ANR	722207	CallExpression	"sdb_const_get ( sdb , ""file_name"" , 0 )"		721347	1					
ANR	722208	Callee	sdb_const_get		721347	0					
ANR	722209	Identifier	sdb_const_get		721347	0					
ANR	722210	ArgumentList	sdb		721347	1					
ANR	722211	Argument	sdb		721347	0					
ANR	722212	Identifier	sdb		721347	0					
ANR	722213	Argument	"""file_name"""		721347	1					
ANR	722214	PrimaryExpression	"""file_name"""		721347	0					
ANR	722215	Argument	0		721347	2					
ANR	722216	PrimaryExpression	0		721347	0					
ANR	722217	CompoundStatement		109:57:3989:3989	721347	1					
ANR	722218	IfStatement	if ( IS_MODE_JSON ( mode ) )		721347	0					
ANR	722219	Condition	IS_MODE_JSON ( mode )	3479:8:101457:101475	721347	0	True				
ANR	722220	CallExpression	IS_MODE_JSON ( mode )		721347	0					
ANR	722221	Callee	IS_MODE_JSON		721347	0					
ANR	722222	Identifier	IS_MODE_JSON		721347	0					
ANR	722223	ArgumentList	mode		721347	1					
ANR	722224	Argument	mode		721347	0					
ANR	722225	Identifier	mode		721347	0					
ANR	722226	CompoundStatement		111:5:4027:4075	721347	1					
ANR	722227	IdentifierDeclStatement	char * escaped_filename = r_str_escape ( filename ) ;	3480:5:101485:101533	721347	0	True				
ANR	722228	IdentifierDecl	* escaped_filename = r_str_escape ( filename )		721347	0					
ANR	722229	IdentifierDeclType	char *		721347	0					
ANR	722230	Identifier	escaped_filename		721347	1					
ANR	722231	AssignmentExpression	* escaped_filename = r_str_escape ( filename )		721347	2		=			
ANR	722232	Identifier	escaped_filename		721347	0					
ANR	722233	CallExpression	r_str_escape ( filename )		721347	1					
ANR	722234	Callee	r_str_escape		721347	0					
ANR	722235	Identifier	r_str_escape		721347	0					
ANR	722236	ArgumentList	filename		721347	1					
ANR	722237	Argument	filename		721347	0					
ANR	722238	Identifier	filename		721347	0					
ANR	722239	ExpressionStatement	"r_cons_printf ( ""\\""file_name\\"":\\""%s\\"","" , escaped_filename )"	3481:5:101540:101597	721347	1	True				
ANR	722240	CallExpression	"r_cons_printf ( ""\\""file_name\\"":\\""%s\\"","" , escaped_filename )"		721347	0					
ANR	722241	Callee	r_cons_printf		721347	0					
ANR	722242	Identifier	r_cons_printf		721347	0					
ANR	722243	ArgumentList	"""\\""file_name\\"":\\""%s\\"","""		721347	1					
ANR	722244	Argument	"""\\""file_name\\"":\\""%s\\"","""		721347	0					
ANR	722245	PrimaryExpression	"""\\""file_name\\"":\\""%s\\"","""		721347	0					
ANR	722246	Argument	escaped_filename		721347	1					
ANR	722247	Identifier	escaped_filename		721347	0					
ANR	722248	ExpressionStatement	free ( escaped_filename )	3482:5:101604:101627	721347	2	True				
ANR	722249	CallExpression	free ( escaped_filename )		721347	0					
ANR	722250	Callee	free		721347	0					
ANR	722251	Identifier	free		721347	0					
ANR	722252	ArgumentList	escaped_filename		721347	1					
ANR	722253	Argument	escaped_filename		721347	0					
ANR	722254	Identifier	escaped_filename		721347	0					
ANR	722255	ElseStatement	else		721347	0					
ANR	722256	CompoundStatement		114:11:4182:4182	721347	0					
ANR	722257	ExpressionStatement	"r_cons_printf ( ""  File: %s"" , filename )"	3484:5:101647:101685	721347	0	True				
ANR	722258	CallExpression	"r_cons_printf ( ""  File: %s"" , filename )"		721347	0					
ANR	722259	Callee	r_cons_printf		721347	0					
ANR	722260	Identifier	r_cons_printf		721347	0					
ANR	722261	ArgumentList	"""  File: %s"""		721347	1					
ANR	722262	Argument	"""  File: %s"""		721347	0					
ANR	722263	PrimaryExpression	"""  File: %s"""		721347	0					
ANR	722264	Argument	filename		721347	1					
ANR	722265	Identifier	filename		721347	0					
ANR	722266	IfStatement	if ( IS_MODE_JSON ( mode ) )		721347	6					
ANR	722267	Condition	IS_MODE_JSON ( mode )	3487:7:101705:101723	721347	0	True				
ANR	722268	CallExpression	IS_MODE_JSON ( mode )		721347	0					
ANR	722269	Callee	IS_MODE_JSON		721347	0					
ANR	722270	Identifier	IS_MODE_JSON		721347	0					
ANR	722271	ArgumentList	mode		721347	1					
ANR	722272	Argument	mode		721347	0					
ANR	722273	Identifier	mode		721347	0					
ANR	722274	CompoundStatement		118:28:4268:4268	721347	1					
ANR	722275	ExpressionStatement	"r_cons_printf ( ""\\""cnt\\"":%d,"" , ( int ) sdb_num_get ( sdb , ""cnt"" , 0 ) )"	3488:4:101732:101795	721347	0	True				
ANR	722276	CallExpression	"r_cons_printf ( ""\\""cnt\\"":%d,"" , ( int ) sdb_num_get ( sdb , ""cnt"" , 0 ) )"		721347	0					
ANR	722277	Callee	r_cons_printf		721347	0					
ANR	722278	Identifier	r_cons_printf		721347	0					
ANR	722279	ArgumentList	"""\\""cnt\\"":%d,"""		721347	1					
ANR	722280	Argument	"""\\""cnt\\"":%d,"""		721347	0					
ANR	722281	PrimaryExpression	"""\\""cnt\\"":%d,"""		721347	0					
ANR	722282	Argument	"( int ) sdb_num_get ( sdb , ""cnt"" , 0 )"		721347	1					
ANR	722283	CastExpression	"( int ) sdb_num_get ( sdb , ""cnt"" , 0 )"		721347	0					
ANR	722284	CastTarget	int		721347	0					
ANR	722285	CallExpression	"sdb_num_get ( sdb , ""cnt"" , 0 )"		721347	1					
ANR	722286	Callee	sdb_num_get		721347	0					
ANR	722287	Identifier	sdb_num_get		721347	0					
ANR	722288	ArgumentList	sdb		721347	1					
ANR	722289	Argument	sdb		721347	0					
ANR	722290	Identifier	sdb		721347	0					
ANR	722291	Argument	"""cnt"""		721347	1					
ANR	722292	PrimaryExpression	"""cnt"""		721347	0					
ANR	722293	Argument	0		721347	2					
ANR	722294	PrimaryExpression	0		721347	0					
ANR	722295	ElseStatement	else		721347	0					
ANR	722296	CompoundStatement		120:10:4349:4349	721347	0					
ANR	722297	ExpressionStatement	"r_cons_printf ( ""  Cnt: %d\\n"" , ( int ) sdb_num_get ( sdb , ""cnt"" , 0 ) )"	3490:4:101813:101876	721347	0	True				
ANR	722298	CallExpression	"r_cons_printf ( ""  Cnt: %d\\n"" , ( int ) sdb_num_get ( sdb , ""cnt"" , 0 ) )"		721347	0					
ANR	722299	Callee	r_cons_printf		721347	0					
ANR	722300	Identifier	r_cons_printf		721347	0					
ANR	722301	ArgumentList	"""  Cnt: %d\\n"""		721347	1					
ANR	722302	Argument	"""  Cnt: %d\\n"""		721347	0					
ANR	722303	PrimaryExpression	"""  Cnt: %d\\n"""		721347	0					
ANR	722304	Argument	"( int ) sdb_num_get ( sdb , ""cnt"" , 0 )"		721347	1					
ANR	722305	CastExpression	"( int ) sdb_num_get ( sdb , ""cnt"" , 0 )"		721347	0					
ANR	722306	CastTarget	int		721347	0					
ANR	722307	CallExpression	"sdb_num_get ( sdb , ""cnt"" , 0 )"		721347	1					
ANR	722308	Callee	sdb_num_get		721347	0					
ANR	722309	Identifier	sdb_num_get		721347	0					
ANR	722310	ArgumentList	sdb		721347	1					
ANR	722311	Argument	sdb		721347	0					
ANR	722312	Identifier	sdb		721347	0					
ANR	722313	Argument	"""cnt"""		721347	1					
ANR	722314	PrimaryExpression	"""cnt"""		721347	0					
ANR	722315	Argument	0		721347	2					
ANR	722316	PrimaryExpression	0		721347	0					
ANR	722317	IfStatement	if ( IS_MODE_JSON ( mode ) )		721347	7					
ANR	722318	Condition	IS_MODE_JSON ( mode )	3492:7:101890:101908	721347	0	True				
ANR	722319	CallExpression	IS_MODE_JSON ( mode )		721347	0					
ANR	722320	Callee	IS_MODE_JSON		721347	0					
ANR	722321	Identifier	IS_MODE_JSON		721347	0					
ANR	722322	ArgumentList	mode		721347	1					
ANR	722323	Argument	mode		721347	0					
ANR	722324	Identifier	mode		721347	0					
ANR	722325	CompoundStatement		123:28:4453:4453	721347	1					
ANR	722326	ExpressionStatement	"r_cons_printf ( ""\\""vernaux\\"":["" )"	3493:4:101917:101948	721347	0	True				
ANR	722327	CallExpression	"r_cons_printf ( ""\\""vernaux\\"":["" )"		721347	0					
ANR	722328	Callee	r_cons_printf		721347	0					
ANR	722329	Identifier	r_cons_printf		721347	0					
ANR	722330	ArgumentList	"""\\""vernaux\\"":["""		721347	1					
ANR	722331	Argument	"""\\""vernaux\\"":["""		721347	0					
ANR	722332	PrimaryExpression	"""\\""vernaux\\"":["""		721347	0					
ANR	722333	IdentifierDeclStatement	bool firstit_dowhile_vernaux = true ;	3495:3:101958:101993	721347	8	True				
ANR	722334	IdentifierDecl	firstit_dowhile_vernaux = true		721347	0					
ANR	722335	IdentifierDeclType	bool		721347	0					
ANR	722336	Identifier	firstit_dowhile_vernaux		721347	1					
ANR	722337	AssignmentExpression	firstit_dowhile_vernaux = true		721347	2		=			
ANR	722338	Identifier	true		721347	0					
ANR	722339	Identifier	true		721347	1					
ANR	722340	DoStatement	do		721347	9					
ANR	722341	CompoundStatement		128:4:4549:4629	721347	0					
ANR	722342	IdentifierDeclStatement	"const char * path_vernaux = sdb_fmt ( ""%s/vernaux%d"" , path_version , num_vernaux ++ ) ;"	3497:4:102007:102087	721347	0	True				
ANR	722343	IdentifierDecl	"* path_vernaux = sdb_fmt ( ""%s/vernaux%d"" , path_version , num_vernaux ++ )"		721347	0					
ANR	722344	IdentifierDeclType	const char *		721347	0					
ANR	722345	Identifier	path_vernaux		721347	1					
ANR	722346	AssignmentExpression	"* path_vernaux = sdb_fmt ( ""%s/vernaux%d"" , path_version , num_vernaux ++ )"		721347	2		=			
ANR	722347	Identifier	path_vernaux		721347	0					
ANR	722348	CallExpression	"sdb_fmt ( ""%s/vernaux%d"" , path_version , num_vernaux ++ )"		721347	1					
ANR	722349	Callee	sdb_fmt		721347	0					
ANR	722350	Identifier	sdb_fmt		721347	0					
ANR	722351	ArgumentList	"""%s/vernaux%d"""		721347	1					
ANR	722352	Argument	"""%s/vernaux%d"""		721347	0					
ANR	722353	PrimaryExpression	"""%s/vernaux%d"""		721347	0					
ANR	722354	Argument	path_version		721347	1					
ANR	722355	Identifier	path_version		721347	0					
ANR	722356	Argument	num_vernaux ++		721347	2					
ANR	722357	PostIncDecOperationExpression	num_vernaux ++		721347	0					
ANR	722358	Identifier	num_vernaux		721347	0					
ANR	722359	IncDec	++		721347	1					
ANR	722360	IfStatement	"if ( ! ( sdb = sdb_ns_path ( r -> sdb , path_vernaux , 0 ) ) )"		721347	1					
ANR	722361	Condition	"! ( sdb = sdb_ns_path ( r -> sdb , path_vernaux , 0 ) )"	3498:8:102097:102142	721347	0	True				
ANR	722362	UnaryOperationExpression	"! ( sdb = sdb_ns_path ( r -> sdb , path_vernaux , 0 ) )"		721347	0					
ANR	722363	UnaryOperator	!		721347	0					
ANR	722364	AssignmentExpression	"sdb = sdb_ns_path ( r -> sdb , path_vernaux , 0 )"		721347	1		=			
ANR	722365	Identifier	sdb		721347	0					
ANR	722366	CallExpression	"sdb_ns_path ( r -> sdb , path_vernaux , 0 )"		721347	1					
ANR	722367	Callee	sdb_ns_path		721347	0					
ANR	722368	Identifier	sdb_ns_path		721347	0					
ANR	722369	ArgumentList	r -> sdb		721347	1					
ANR	722370	Argument	r -> sdb		721347	0					
ANR	722371	PtrMemberAccess	r -> sdb		721347	0					
ANR	722372	Identifier	r		721347	0					
ANR	722373	Identifier	sdb		721347	1					
ANR	722374	Argument	path_vernaux		721347	1					
ANR	722375	Identifier	path_vernaux		721347	0					
ANR	722376	Argument	0		721347	2					
ANR	722377	PrimaryExpression	0		721347	0					
ANR	722378	CompoundStatement		129:56:4687:4687	721347	1					
ANR	722379	BreakStatement	break ;	3499:5:102152:102157	721347	0	True				
ANR	722380	IfStatement	if ( IS_MODE_JSON ( mode ) )		721347	2					
ANR	722381	Condition	IS_MODE_JSON ( mode )	3501:8:102173:102191	721347	0	True				
ANR	722382	CallExpression	IS_MODE_JSON ( mode )		721347	0					
ANR	722383	Callee	IS_MODE_JSON		721347	0					
ANR	722384	Identifier	IS_MODE_JSON		721347	0					
ANR	722385	ArgumentList	mode		721347	1					
ANR	722386	Argument	mode		721347	0					
ANR	722387	Identifier	mode		721347	0					
ANR	722388	CompoundStatement		132:29:4736:4736	721347	1					
ANR	722389	IfStatement	if ( ! firstit_dowhile_vernaux )		721347	0					
ANR	722390	Condition	! firstit_dowhile_vernaux	3502:9:102205:102228	721347	0	True				
ANR	722391	UnaryOperationExpression	! firstit_dowhile_vernaux		721347	0					
ANR	722392	UnaryOperator	!		721347	0					
ANR	722393	Identifier	firstit_dowhile_vernaux		721347	1					
ANR	722394	CompoundStatement		133:35:4773:4773	721347	1					
ANR	722395	ExpressionStatement	"r_cons_printf ( "","" )"	3502:37:102233:102252	721347	0	True				
ANR	722396	CallExpression	"r_cons_printf ( "","" )"		721347	0					
ANR	722397	Callee	r_cons_printf		721347	0					
ANR	722398	Identifier	r_cons_printf		721347	0					
ANR	722399	ArgumentList	""","""		721347	1					
ANR	722400	Argument	""","""		721347	0					
ANR	722401	PrimaryExpression	""","""		721347	0					
ANR	722402	Statement	r_cons_printf	3503:5:102261:102273	721347	1	True				
ANR	722403	Statement	(	3503:19:102275:102275	721347	2	True				
ANR	722404	Statement	"""{\\""idx\\"":%"""	3503:20:102276:102287	721347	3	True				
ANR	722405	Statement	PFMT64u	3503:32:102288:102294	721347	4	True				
ANR	722406	Statement	""",\\""name\\"":\\""%s\\"","""	3503:39:102295:102313	721347	5	True				
ANR	722407	Statement	","	3503:58:102314:102314	721347	6	True				
ANR	722408	Statement	sdb_num_get	3504:6:102322:102332	721347	7	True				
ANR	722409	Statement	(	3504:18:102334:102334	721347	8	True				
ANR	722410	Statement	sdb	3504:19:102335:102337	721347	9	True				
ANR	722411	Statement	","	3504:22:102338:102338	721347	10	True				
ANR	722412	Statement	"""idx"""	3504:24:102340:102344	721347	11	True				
ANR	722413	Statement	","	3504:29:102345:102345	721347	12	True				
ANR	722414	Statement	0	3504:31:102347:102347	721347	13	True				
ANR	722415	Statement	)	3504:32:102348:102348	721347	14	True				
ANR	722416	Statement	","	3504:33:102349:102349	721347	15	True				
ANR	722417	Statement	sdb_const_get	3504:35:102351:102363	721347	16	True				
ANR	722418	Statement	(	3504:49:102365:102365	721347	17	True				
ANR	722419	Statement	sdb	3504:50:102366:102368	721347	18	True				
ANR	722420	Statement	","	3504:53:102369:102369	721347	19	True				
ANR	722421	Statement	"""name"""	3504:55:102371:102376	721347	20	True				
ANR	722422	Statement	","	3504:61:102377:102377	721347	21	True				
ANR	722423	Statement	0	3504:63:102379:102379	721347	22	True				
ANR	722424	Statement	)	3504:64:102380:102380	721347	23	True				
ANR	722425	Statement	)	3504:65:102381:102381	721347	24	True				
ANR	722426	ExpressionStatement		3504:66:102382:102382	721347	25	True				
ANR	722427	ExpressionStatement	"r_cons_printf ( ""\\""flags\\"":\\""%s\\"",\\""version\\"":%d}"" , sdb_const_get ( sdb , ""flags"" , 0 ) , ( int ) sdb_num_get ( sdb , ""version"" , 0 ) )"	3505:5:102389:102516	721347	26	True				
ANR	722428	CallExpression	"r_cons_printf ( ""\\""flags\\"":\\""%s\\"",\\""version\\"":%d}"" , sdb_const_get ( sdb , ""flags"" , 0 ) , ( int ) sdb_num_get ( sdb , ""version"" , 0 ) )"		721347	0					
ANR	722429	Callee	r_cons_printf		721347	0					
ANR	722430	Identifier	r_cons_printf		721347	0					
ANR	722431	ArgumentList	"""\\""flags\\"":\\""%s\\"",\\""version\\"":%d}"""		721347	1					
ANR	722432	Argument	"""\\""flags\\"":\\""%s\\"",\\""version\\"":%d}"""		721347	0					
ANR	722433	PrimaryExpression	"""\\""flags\\"":\\""%s\\"",\\""version\\"":%d}"""		721347	0					
ANR	722434	Argument	"sdb_const_get ( sdb , ""flags"" , 0 )"		721347	1					
ANR	722435	CallExpression	"sdb_const_get ( sdb , ""flags"" , 0 )"		721347	0					
ANR	722436	Callee	sdb_const_get		721347	0					
ANR	722437	Identifier	sdb_const_get		721347	0					
ANR	722438	ArgumentList	sdb		721347	1					
ANR	722439	Argument	sdb		721347	0					
ANR	722440	Identifier	sdb		721347	0					
ANR	722441	Argument	"""flags"""		721347	1					
ANR	722442	PrimaryExpression	"""flags"""		721347	0					
ANR	722443	Argument	0		721347	2					
ANR	722444	PrimaryExpression	0		721347	0					
ANR	722445	Argument	"( int ) sdb_num_get ( sdb , ""version"" , 0 )"		721347	2					
ANR	722446	CastExpression	"( int ) sdb_num_get ( sdb , ""version"" , 0 )"		721347	0					
ANR	722447	CastTarget	int		721347	0					
ANR	722448	CallExpression	"sdb_num_get ( sdb , ""version"" , 0 )"		721347	1					
ANR	722449	Callee	sdb_num_get		721347	0					
ANR	722450	Identifier	sdb_num_get		721347	0					
ANR	722451	ArgumentList	sdb		721347	1					
ANR	722452	Argument	sdb		721347	0					
ANR	722453	Identifier	sdb		721347	0					
ANR	722454	Argument	"""version"""		721347	1					
ANR	722455	PrimaryExpression	"""version"""		721347	0					
ANR	722456	Argument	0		721347	2					
ANR	722457	PrimaryExpression	0		721347	0					
ANR	722458	ElseStatement	else		721347	0					
ANR	722459	CompoundStatement		138:11:5071:5071	721347	0					
ANR	722460	Statement	r_cons_printf	3508:5:102536:102548	721347	0	True				
ANR	722461	Statement	(	3508:19:102550:102550	721347	1	True				
ANR	722462	Statement	"""  0x%08"""	3508:20:102551:102559	721347	2	True				
ANR	722463	Statement	PFMT64x	3508:29:102560:102566	721347	3	True				
ANR	722464	Statement	""":   Name: %s"""	3508:36:102567:102580	721347	4	True				
ANR	722465	Statement	","	3508:50:102581:102581	721347	5	True				
ANR	722466	Statement	sdb_num_get	3509:6:102589:102599	721347	6	True				
ANR	722467	Statement	(	3509:18:102601:102601	721347	7	True				
ANR	722468	Statement	sdb	3509:19:102602:102604	721347	8	True				
ANR	722469	Statement	","	3509:22:102605:102605	721347	9	True				
ANR	722470	Statement	"""idx"""	3509:24:102607:102611	721347	10	True				
ANR	722471	Statement	","	3509:29:102612:102612	721347	11	True				
ANR	722472	Statement	0	3509:31:102614:102614	721347	12	True				
ANR	722473	Statement	)	3509:32:102615:102615	721347	13	True				
ANR	722474	Statement	","	3509:33:102616:102616	721347	14	True				
ANR	722475	Statement	sdb_const_get	3509:35:102618:102630	721347	15	True				
ANR	722476	Statement	(	3509:49:102632:102632	721347	16	True				
ANR	722477	Statement	sdb	3509:50:102633:102635	721347	17	True				
ANR	722478	Statement	","	3509:53:102636:102636	721347	18	True				
ANR	722479	Statement	"""name"""	3509:55:102638:102643	721347	19	True				
ANR	722480	Statement	","	3509:61:102644:102644	721347	20	True				
ANR	722481	Statement	0	3509:63:102646:102646	721347	21	True				
ANR	722482	Statement	)	3509:64:102647:102647	721347	22	True				
ANR	722483	Statement	)	3509:65:102648:102648	721347	23	True				
ANR	722484	ExpressionStatement		3509:66:102649:102649	721347	24	True				
ANR	722485	ExpressionStatement	"r_cons_printf ( ""  Flags: %s Version: %d\\n"" , sdb_const_get ( sdb , ""flags"" , 0 ) , ( int ) sdb_num_get ( sdb , ""version"" , 0 ) )"	3510:5:102656:102776	721347	25	True				
ANR	722486	CallExpression	"r_cons_printf ( ""  Flags: %s Version: %d\\n"" , sdb_const_get ( sdb , ""flags"" , 0 ) , ( int ) sdb_num_get ( sdb , ""version"" , 0 ) )"		721347	0					
ANR	722487	Callee	r_cons_printf		721347	0					
ANR	722488	Identifier	r_cons_printf		721347	0					
ANR	722489	ArgumentList	"""  Flags: %s Version: %d\\n"""		721347	1					
ANR	722490	Argument	"""  Flags: %s Version: %d\\n"""		721347	0					
ANR	722491	PrimaryExpression	"""  Flags: %s Version: %d\\n"""		721347	0					
ANR	722492	Argument	"sdb_const_get ( sdb , ""flags"" , 0 )"		721347	1					
ANR	722493	CallExpression	"sdb_const_get ( sdb , ""flags"" , 0 )"		721347	0					
ANR	722494	Callee	sdb_const_get		721347	0					
ANR	722495	Identifier	sdb_const_get		721347	0					
ANR	722496	ArgumentList	sdb		721347	1					
ANR	722497	Argument	sdb		721347	0					
ANR	722498	Identifier	sdb		721347	0					
ANR	722499	Argument	"""flags"""		721347	1					
ANR	722500	PrimaryExpression	"""flags"""		721347	0					
ANR	722501	Argument	0		721347	2					
ANR	722502	PrimaryExpression	0		721347	0					
ANR	722503	Argument	"( int ) sdb_num_get ( sdb , ""version"" , 0 )"		721347	2					
ANR	722504	CastExpression	"( int ) sdb_num_get ( sdb , ""version"" , 0 )"		721347	0					
ANR	722505	CastTarget	int		721347	0					
ANR	722506	CallExpression	"sdb_num_get ( sdb , ""version"" , 0 )"		721347	1					
ANR	722507	Callee	sdb_num_get		721347	0					
ANR	722508	Identifier	sdb_num_get		721347	0					
ANR	722509	ArgumentList	sdb		721347	1					
ANR	722510	Argument	sdb		721347	0					
ANR	722511	Identifier	sdb		721347	0					
ANR	722512	Argument	"""version"""		721347	1					
ANR	722513	PrimaryExpression	"""version"""		721347	0					
ANR	722514	Argument	0		721347	2					
ANR	722515	PrimaryExpression	0		721347	0					
ANR	722516	ExpressionStatement	firstit_dowhile_vernaux = false	3513:4:102788:102819	721347	3	True				
ANR	722517	AssignmentExpression	firstit_dowhile_vernaux = false		721347	0		=			
ANR	722518	Identifier	firstit_dowhile_vernaux		721347	0					
ANR	722519	Identifier	false		721347	1					
ANR	722520	Condition	sdb	3514:12:102833:102835	721347	1	True				
ANR	722521	Identifier	sdb		721347	0					
ANR	722522	IfStatement	if ( IS_MODE_JSON ( mode ) )		721347	10					
ANR	722523	Condition	IS_MODE_JSON ( mode )	3515:7:102846:102864	721347	0	True				
ANR	722524	CallExpression	IS_MODE_JSON ( mode )		721347	0					
ANR	722525	Callee	IS_MODE_JSON		721347	0					
ANR	722526	Identifier	IS_MODE_JSON		721347	0					
ANR	722527	ArgumentList	mode		721347	1					
ANR	722528	Argument	mode		721347	0					
ANR	722529	Identifier	mode		721347	0					
ANR	722530	CompoundStatement		146:28:5409:5409	721347	1					
ANR	722531	ExpressionStatement	"r_cons_printf ( ""]}"" )"	3516:4:102873:102893	721347	0	True				
ANR	722532	CallExpression	"r_cons_printf ( ""]}"" )"		721347	0					
ANR	722533	Callee	r_cons_printf		721347	0					
ANR	722534	Identifier	r_cons_printf		721347	0					
ANR	722535	ArgumentList	"""]}"""		721347	1					
ANR	722536	Argument	"""]}"""		721347	0					
ANR	722537	PrimaryExpression	"""]}"""		721347	0					
ANR	722538	ExpressionStatement	firstit_for_verneed = false	3518:3:102903:102930	721347	11	True				
ANR	722539	AssignmentExpression	firstit_for_verneed = false		721347	0		=			
ANR	722540	Identifier	firstit_for_verneed		721347	0					
ANR	722541	Identifier	false		721347	1					
ANR	722542	IfStatement	if ( IS_MODE_JSON ( mode ) )		721347	5					
ANR	722543	Condition	IS_MODE_JSON ( mode )	3520:6:102942:102960	721347	0	True				
ANR	722544	CallExpression	IS_MODE_JSON ( mode )		721347	0					
ANR	722545	Callee	IS_MODE_JSON		721347	0					
ANR	722546	Identifier	IS_MODE_JSON		721347	0					
ANR	722547	ArgumentList	mode		721347	1					
ANR	722548	Argument	mode		721347	0					
ANR	722549	Identifier	mode		721347	0					
ANR	722550	CompoundStatement		151:27:5505:5505	721347	1					
ANR	722551	ExpressionStatement	"r_cons_printf ( ""]}"" )"	3521:3:102968:102988	721347	0	True				
ANR	722552	CallExpression	"r_cons_printf ( ""]}"" )"		721347	0					
ANR	722553	Callee	r_cons_printf		721347	0					
ANR	722554	Identifier	r_cons_printf		721347	0					
ANR	722555	ArgumentList	"""]}"""		721347	1					
ANR	722556	Argument	"""]}"""		721347	0					
ANR	722557	PrimaryExpression	"""]}"""		721347	0					
ANR	722558	ExpressionStatement	firstit_dowhile_verneed = false	3523:2:102996:103027	721347	6	True				
ANR	722559	AssignmentExpression	firstit_dowhile_verneed = false		721347	0		=			
ANR	722560	Identifier	firstit_dowhile_verneed		721347	0					
ANR	722561	Identifier	false		721347	1					
ANR	722562	ExpressionStatement	free ( verneed_path )	3524:2:103031:103050	721347	7	True				
ANR	722563	CallExpression	free ( verneed_path )		721347	0					
ANR	722564	Callee	free		721347	0					
ANR	722565	Identifier	free		721347	0					
ANR	722566	ArgumentList	verneed_path		721347	1					
ANR	722567	Argument	verneed_path		721347	0					
ANR	722568	Identifier	verneed_path		721347	0					
ANR	722569	Condition	sdb	3525:10:103062:103064	721347	1	True				
ANR	722570	Identifier	sdb		721347	0					
ANR	722571	IfStatement	if ( IS_MODE_JSON ( mode ) )		721347	12					
ANR	722572	Condition	IS_MODE_JSON ( mode )	3526:5:103073:103091	721347	0	True				
ANR	722573	CallExpression	IS_MODE_JSON ( mode )		721347	0					
ANR	722574	Callee	IS_MODE_JSON		721347	0					
ANR	722575	Identifier	IS_MODE_JSON		721347	0					
ANR	722576	ArgumentList	mode		721347	1					
ANR	722577	Argument	mode		721347	0					
ANR	722578	Identifier	mode		721347	0					
ANR	722579	CompoundStatement		157:26:5636:5636	721347	1					
ANR	722580	ExpressionStatement	"r_cons_printf ( ""]}"" )"	3527:2:103098:103118	721347	0	True				
ANR	722581	CallExpression	"r_cons_printf ( ""]}"" )"		721347	0					
ANR	722582	Callee	r_cons_printf		721347	0					
ANR	722583	Identifier	r_cons_printf		721347	0					
ANR	722584	ArgumentList	"""]}"""		721347	1					
ANR	722585	Argument	"""]}"""		721347	0					
ANR	722586	PrimaryExpression	"""]}"""		721347	0					
ANR	722587	ReturnType	static void		721347	1					
ANR	722588	Identifier	bin_elf_versioninfo		721347	2					
ANR	722589	ParameterList	"RCore * r , int mode"		721347	3					
ANR	722590	Parameter	RCore * r	3370:32:97437:97444	721347	0	True				
ANR	722591	ParameterType	RCore *		721347	0					
ANR	722592	Identifier	r		721347	1					
ANR	722593	Parameter	int mode	3370:42:97447:97454	721347	1	True				
ANR	722594	ParameterType	int		721347	0					
ANR	722595	Identifier	mode		721347	1					
ANR	722596	CFGEntryNode	ENTRY		721347		True				
ANR	722597	CFGExitNode	EXIT		721347		True				
ANR	722598	InfiniteForNode	true		721347		True				
ANR	722599	InfiniteForNode	true		721347		True				
ANR	722600	Symbol	versym_path		721347						
ANR	722601	Symbol	path_version		721347						
ANR	722602	Symbol	escaped_filename		721347						
ANR	722603	Symbol	link		721347						
ANR	722604	Symbol	IS_MODE_JSON		721347						
ANR	722605	Symbol	r_str_newf		721347						
ANR	722606	Symbol	sdb_const_get		721347						
ANR	722607	Symbol	mode		721347						
ANR	722608	Symbol	oValue		721347						
ANR	722609	Symbol	link_section_name		721347						
ANR	722610	Symbol	firstit_dowhile_verneed		721347						
ANR	722611	Symbol	verneed_path		721347						
ANR	722612	Symbol	firstit_dowhile_vernaux		721347						
ANR	722613	Symbol	sdb_ns_path		721347						
ANR	722614	Symbol	firstit_for_verneed		721347						
ANR	722615	Symbol	num_versym		721347						
ANR	722616	Symbol	addr		721347						
ANR	722617	Symbol	sdb_fmt		721347						
ANR	722618	Symbol	value		721347						
ANR	722619	Symbol	key		721347						
ANR	722620	Symbol	sdb_num_get		721347						
ANR	722621	Symbol	strcmp		721347						
ANR	722622	Symbol	r -> sdb		721347						
ANR	722623	Symbol	num_version		721347						
ANR	722624	Symbol	NULL		721347						
ANR	722625	Symbol	offset		721347						
ANR	722626	Symbol	section_name		721347						
ANR	722627	Symbol	format		721347						
ANR	722628	Symbol	false		721347						
ANR	722629	Symbol	i		721347						
ANR	722630	Symbol	path_vernaux		721347						
ANR	722631	Symbol	firstit_for_versym		721347						
ANR	722632	Symbol	sdb		721347						
ANR	722633	Symbol	r_str_escape		721347						
ANR	722634	Symbol	r		721347						
ANR	722635	Symbol	filename		721347						
ANR	722636	Symbol	escaped_value		721347						
ANR	722637	Symbol	true		721347						
ANR	722638	Symbol	num_verneed		721347						
ANR	722639	Symbol	num_vernaux		721347						
ANR	722640	Symbol	* r		721347						
ANR	722641	Symbol	num_entries		721347						
ANR	722642	Function	bin_mach0_versioninfo	3531:0:103126:103184							
ANR	722643	FunctionDef	bin_mach0_versioninfo (RCore * r)		722642	0					
ANR	722644	CompoundStatement		3531:44:103170:103184	722642	0					
ANR	722645	ReturnType	static void		722642	1					
ANR	722646	Identifier	bin_mach0_versioninfo		722642	2					
ANR	722647	ParameterList	RCore * r		722642	3					
ANR	722648	Parameter	RCore * r	3531:34:103160:103167	722642	0	True				
ANR	722649	ParameterType	RCore *		722642	0					
ANR	722650	Identifier	r		722642	1					
ANR	722651	CFGEntryNode	ENTRY		722642		True				
ANR	722652	CFGExitNode	EXIT		722642		True				
ANR	722653	Symbol	r		722642						
ANR	722654	Function	bin_pe_resources	3535:0:103187:105500							
ANR	722655	FunctionDef	"bin_pe_resources (RCore * r , int mode)"		722654	0					
ANR	722656	CompoundStatement		3535:49:103236:105500	722654	0					
ANR	722657	IdentifierDeclStatement	Sdb * sdb = NULL ;	3536:1:103239:103254	722654	0	True				
ANR	722658	IdentifierDecl	* sdb = NULL		722654	0					
ANR	722659	IdentifierDeclType	Sdb *		722654	0					
ANR	722660	Identifier	sdb		722654	1					
ANR	722661	AssignmentExpression	* sdb = NULL		722654	2		=			
ANR	722662	Identifier	NULL		722654	0					
ANR	722663	Identifier	NULL		722654	1					
ANR	722664	IdentifierDeclStatement	int index = 0 ;	3537:1:103257:103270	722654	1	True				
ANR	722665	IdentifierDecl	index = 0		722654	0					
ANR	722666	IdentifierDeclType	int		722654	0					
ANR	722667	Identifier	index		722654	1					
ANR	722668	AssignmentExpression	index = 0		722654	2		=			
ANR	722669	Identifier	index		722654	0					
ANR	722670	PrimaryExpression	0		722654	1					
ANR	722671	IdentifierDeclStatement	PJ * pj = NULL ;	3538:1:103273:103286	722654	2	True				
ANR	722672	IdentifierDecl	* pj = NULL		722654	0					
ANR	722673	IdentifierDeclType	PJ *		722654	0					
ANR	722674	Identifier	pj		722654	1					
ANR	722675	AssignmentExpression	* pj = NULL		722654	2		=			
ANR	722676	Identifier	NULL		722654	0					
ANR	722677	Identifier	NULL		722654	1					
ANR	722678	IdentifierDeclStatement	"const char * pe_path = ""bin/cur/info/pe_resource"" ;"	3539:1:103289:103337	722654	3	True				
ANR	722679	IdentifierDecl	"* pe_path = ""bin/cur/info/pe_resource"""		722654	0					
ANR	722680	IdentifierDeclType	const char *		722654	0					
ANR	722681	Identifier	pe_path		722654	1					
ANR	722682	AssignmentExpression	"* pe_path = ""bin/cur/info/pe_resource"""		722654	2		=			
ANR	722683	Identifier	pe_path		722654	0					
ANR	722684	PrimaryExpression	"""bin/cur/info/pe_resource"""		722654	1					
ANR	722685	IfStatement	"if ( ! ( sdb = sdb_ns_path ( r -> sdb , pe_path , 0 ) ) )"		722654	4					
ANR	722686	Condition	"! ( sdb = sdb_ns_path ( r -> sdb , pe_path , 0 ) )"	3540:5:103344:103384	722654	0	True				
ANR	722687	UnaryOperationExpression	"! ( sdb = sdb_ns_path ( r -> sdb , pe_path , 0 ) )"		722654	0					
ANR	722688	UnaryOperator	!		722654	0					
ANR	722689	AssignmentExpression	"sdb = sdb_ns_path ( r -> sdb , pe_path , 0 )"		722654	1		=			
ANR	722690	Identifier	sdb		722654	0					
ANR	722691	CallExpression	"sdb_ns_path ( r -> sdb , pe_path , 0 )"		722654	1					
ANR	722692	Callee	sdb_ns_path		722654	0					
ANR	722693	Identifier	sdb_ns_path		722654	0					
ANR	722694	ArgumentList	r -> sdb		722654	1					
ANR	722695	Argument	r -> sdb		722654	0					
ANR	722696	PtrMemberAccess	r -> sdb		722654	0					
ANR	722697	Identifier	r		722654	0					
ANR	722698	Identifier	sdb		722654	1					
ANR	722699	Argument	pe_path		722654	1					
ANR	722700	Identifier	pe_path		722654	0					
ANR	722701	Argument	0		722654	2					
ANR	722702	PrimaryExpression	0		722654	0					
ANR	722703	CompoundStatement		6:48:150:150	722654	1					
ANR	722704	ReturnStatement	return ;	3541:2:103391:103397	722654	0	True				
ANR	722705	IfStatement	if ( IS_MODE_SET ( mode ) )		722654	5					
ANR	722706	Condition	IS_MODE_SET ( mode )	3543:5:103407:103424	722654	0	True				
ANR	722707	CallExpression	IS_MODE_SET ( mode )		722654	0					
ANR	722708	Callee	IS_MODE_SET		722654	0					
ANR	722709	Identifier	IS_MODE_SET		722654	0					
ANR	722710	ArgumentList	mode		722654	1					
ANR	722711	Argument	mode		722654	0					
ANR	722712	Identifier	mode		722654	0					
ANR	722713	CompoundStatement		9:25:190:190	722654	1					
ANR	722714	ExpressionStatement	"r_flag_space_set ( r -> flags , R_FLAGS_FS_RESOURCES )"	3544:2:103431:103480	722654	0	True				
ANR	722715	CallExpression	"r_flag_space_set ( r -> flags , R_FLAGS_FS_RESOURCES )"		722654	0					
ANR	722716	Callee	r_flag_space_set		722654	0					
ANR	722717	Identifier	r_flag_space_set		722654	0					
ANR	722718	ArgumentList	r -> flags		722654	1					
ANR	722719	Argument	r -> flags		722654	0					
ANR	722720	PtrMemberAccess	r -> flags		722654	0					
ANR	722721	Identifier	r		722654	0					
ANR	722722	Identifier	flags		722654	1					
ANR	722723	Argument	R_FLAGS_FS_RESOURCES		722654	1					
ANR	722724	Identifier	R_FLAGS_FS_RESOURCES		722654	0					
ANR	722725	ElseStatement	else		722654	0					
ANR	722726	IfStatement	if ( IS_MODE_RAD ( mode ) )		722654	0					
ANR	722727	Condition	IS_MODE_RAD ( mode )	3545:12:103494:103511	722654	0	True				
ANR	722728	CallExpression	IS_MODE_RAD ( mode )		722654	0					
ANR	722729	Callee	IS_MODE_RAD		722654	0					
ANR	722730	Identifier	IS_MODE_RAD		722654	0					
ANR	722731	ArgumentList	mode		722654	1					
ANR	722732	Argument	mode		722654	0					
ANR	722733	Identifier	mode		722654	0					
ANR	722734	CompoundStatement		11:32:277:277	722654	1					
ANR	722735	ExpressionStatement	"r_cons_printf ( ""fs resources\\n"" )"	3546:2:103518:103550	722654	0	True				
ANR	722736	CallExpression	"r_cons_printf ( ""fs resources\\n"" )"		722654	0					
ANR	722737	Callee	r_cons_printf		722654	0					
ANR	722738	Identifier	r_cons_printf		722654	0					
ANR	722739	ArgumentList	"""fs resources\\n"""		722654	1					
ANR	722740	Argument	"""fs resources\\n"""		722654	0					
ANR	722741	PrimaryExpression	"""fs resources\\n"""		722654	0					
ANR	722742	ElseStatement	else		722654	0					
ANR	722743	IfStatement	if ( IS_MODE_JSON ( mode ) )		722654	0					
ANR	722744	Condition	IS_MODE_JSON ( mode )	3547:12:103564:103582	722654	0	True				
ANR	722745	CallExpression	IS_MODE_JSON ( mode )		722654	0					
ANR	722746	Callee	IS_MODE_JSON		722654	0					
ANR	722747	Identifier	IS_MODE_JSON		722654	0					
ANR	722748	ArgumentList	mode		722654	1					
ANR	722749	Argument	mode		722654	0					
ANR	722750	Identifier	mode		722654	0					
ANR	722751	CompoundStatement		13:33:348:348	722654	1					
ANR	722752	ExpressionStatement	pj = pj_new ( )	3548:2:103589:103603	722654	0	True				
ANR	722753	AssignmentExpression	pj = pj_new ( )		722654	0		=			
ANR	722754	Identifier	pj		722654	0					
ANR	722755	CallExpression	pj_new ( )		722654	1					
ANR	722756	Callee	pj_new		722654	0					
ANR	722757	Identifier	pj_new		722654	0					
ANR	722758	ArgumentList			722654	1					
ANR	722759	ExpressionStatement	pj_a ( pj )	3549:2:103607:103616	722654	1	True				
ANR	722760	CallExpression	pj_a ( pj )		722654	0					
ANR	722761	Callee	pj_a		722654	0					
ANR	722762	Identifier	pj_a		722654	0					
ANR	722763	ArgumentList	pj		722654	1					
ANR	722764	Argument	pj		722654	0					
ANR	722765	Identifier	pj		722654	0					
ANR	722766	WhileStatement	while ( true )		722654	6					
ANR	722767	Condition	true	3551:8:103629:103632	722654	0	True				
ANR	722768	Identifier	true		722654	0					
ANR	722769	CompoundStatement		32:2:1046:1088	722654	1					
ANR	722770	IdentifierDeclStatement	"const char * timestrKey = sdb_fmt ( ""resource.%d.timestr"" , index ) ;"	3552:2:103639:103702	722654	0	True				
ANR	722771	IdentifierDecl	"* timestrKey = sdb_fmt ( ""resource.%d.timestr"" , index )"		722654	0					
ANR	722772	IdentifierDeclType	const char *		722654	0					
ANR	722773	Identifier	timestrKey		722654	1					
ANR	722774	AssignmentExpression	"* timestrKey = sdb_fmt ( ""resource.%d.timestr"" , index )"		722654	2		=			
ANR	722775	Identifier	timestrKey		722654	0					
ANR	722776	CallExpression	"sdb_fmt ( ""resource.%d.timestr"" , index )"		722654	1					
ANR	722777	Callee	sdb_fmt		722654	0					
ANR	722778	Identifier	sdb_fmt		722654	0					
ANR	722779	ArgumentList	"""resource.%d.timestr"""		722654	1					
ANR	722780	Argument	"""resource.%d.timestr"""		722654	0					
ANR	722781	PrimaryExpression	"""resource.%d.timestr"""		722654	0					
ANR	722782	Argument	index		722654	1					
ANR	722783	Identifier	index		722654	0					
ANR	722784	IdentifierDeclStatement	"const char * vaddrKey = sdb_fmt ( ""resource.%d.vaddr"" , index ) ;"	3553:2:103706:103765	722654	1	True				
ANR	722785	IdentifierDecl	"* vaddrKey = sdb_fmt ( ""resource.%d.vaddr"" , index )"		722654	0					
ANR	722786	IdentifierDeclType	const char *		722654	0					
ANR	722787	Identifier	vaddrKey		722654	1					
ANR	722788	AssignmentExpression	"* vaddrKey = sdb_fmt ( ""resource.%d.vaddr"" , index )"		722654	2		=			
ANR	722789	Identifier	vaddrKey		722654	0					
ANR	722790	CallExpression	"sdb_fmt ( ""resource.%d.vaddr"" , index )"		722654	1					
ANR	722791	Callee	sdb_fmt		722654	0					
ANR	722792	Identifier	sdb_fmt		722654	0					
ANR	722793	ArgumentList	"""resource.%d.vaddr"""		722654	1					
ANR	722794	Argument	"""resource.%d.vaddr"""		722654	0					
ANR	722795	PrimaryExpression	"""resource.%d.vaddr"""		722654	0					
ANR	722796	Argument	index		722654	1					
ANR	722797	Identifier	index		722654	0					
ANR	722798	IdentifierDeclStatement	"const char * sizeKey = sdb_fmt ( ""resource.%d.size"" , index ) ;"	3554:2:103769:103827	722654	2	True				
ANR	722799	IdentifierDecl	"* sizeKey = sdb_fmt ( ""resource.%d.size"" , index )"		722654	0					
ANR	722800	IdentifierDeclType	const char *		722654	0					
ANR	722801	Identifier	sizeKey		722654	1					
ANR	722802	AssignmentExpression	"* sizeKey = sdb_fmt ( ""resource.%d.size"" , index )"		722654	2		=			
ANR	722803	Identifier	sizeKey		722654	0					
ANR	722804	CallExpression	"sdb_fmt ( ""resource.%d.size"" , index )"		722654	1					
ANR	722805	Callee	sdb_fmt		722654	0					
ANR	722806	Identifier	sdb_fmt		722654	0					
ANR	722807	ArgumentList	"""resource.%d.size"""		722654	1					
ANR	722808	Argument	"""resource.%d.size"""		722654	0					
ANR	722809	PrimaryExpression	"""resource.%d.size"""		722654	0					
ANR	722810	Argument	index		722654	1					
ANR	722811	Identifier	index		722654	0					
ANR	722812	IdentifierDeclStatement	"const char * typeKey = sdb_fmt ( ""resource.%d.type"" , index ) ;"	3555:2:103831:103889	722654	3	True				
ANR	722813	IdentifierDecl	"* typeKey = sdb_fmt ( ""resource.%d.type"" , index )"		722654	0					
ANR	722814	IdentifierDeclType	const char *		722654	0					
ANR	722815	Identifier	typeKey		722654	1					
ANR	722816	AssignmentExpression	"* typeKey = sdb_fmt ( ""resource.%d.type"" , index )"		722654	2		=			
ANR	722817	Identifier	typeKey		722654	0					
ANR	722818	CallExpression	"sdb_fmt ( ""resource.%d.type"" , index )"		722654	1					
ANR	722819	Callee	sdb_fmt		722654	0					
ANR	722820	Identifier	sdb_fmt		722654	0					
ANR	722821	ArgumentList	"""resource.%d.type"""		722654	1					
ANR	722822	Argument	"""resource.%d.type"""		722654	0					
ANR	722823	PrimaryExpression	"""resource.%d.type"""		722654	0					
ANR	722824	Argument	index		722654	1					
ANR	722825	Identifier	index		722654	0					
ANR	722826	IdentifierDeclStatement	"const char * languageKey = sdb_fmt ( ""resource.%d.language"" , index ) ;"	3556:2:103893:103958	722654	4	True				
ANR	722827	IdentifierDecl	"* languageKey = sdb_fmt ( ""resource.%d.language"" , index )"		722654	0					
ANR	722828	IdentifierDeclType	const char *		722654	0					
ANR	722829	Identifier	languageKey		722654	1					
ANR	722830	AssignmentExpression	"* languageKey = sdb_fmt ( ""resource.%d.language"" , index )"		722654	2		=			
ANR	722831	Identifier	languageKey		722654	0					
ANR	722832	CallExpression	"sdb_fmt ( ""resource.%d.language"" , index )"		722654	1					
ANR	722833	Callee	sdb_fmt		722654	0					
ANR	722834	Identifier	sdb_fmt		722654	0					
ANR	722835	ArgumentList	"""resource.%d.language"""		722654	1					
ANR	722836	Argument	"""resource.%d.language"""		722654	0					
ANR	722837	PrimaryExpression	"""resource.%d.language"""		722654	0					
ANR	722838	Argument	index		722654	1					
ANR	722839	Identifier	index		722654	0					
ANR	722840	IdentifierDeclStatement	"const char * nameKey = sdb_fmt ( ""resource.%d.name"" , index ) ;"	3557:2:103962:104019	722654	5	True				
ANR	722841	IdentifierDecl	"* nameKey = sdb_fmt ( ""resource.%d.name"" , index )"		722654	0					
ANR	722842	IdentifierDeclType	const char *		722654	0					
ANR	722843	Identifier	nameKey		722654	1					
ANR	722844	AssignmentExpression	"* nameKey = sdb_fmt ( ""resource.%d.name"" , index )"		722654	2		=			
ANR	722845	Identifier	nameKey		722654	0					
ANR	722846	CallExpression	"sdb_fmt ( ""resource.%d.name"" , index )"		722654	1					
ANR	722847	Callee	sdb_fmt		722654	0					
ANR	722848	Identifier	sdb_fmt		722654	0					
ANR	722849	ArgumentList	"""resource.%d.name"""		722654	1					
ANR	722850	Argument	"""resource.%d.name"""		722654	0					
ANR	722851	PrimaryExpression	"""resource.%d.name"""		722654	0					
ANR	722852	Argument	index		722654	1					
ANR	722853	Identifier	index		722654	0					
ANR	722854	IdentifierDeclStatement	"char * timestr = sdb_get ( sdb , timestrKey , 0 ) ;"	3558:2:104023:104067	722654	6	True				
ANR	722855	IdentifierDecl	"* timestr = sdb_get ( sdb , timestrKey , 0 )"		722654	0					
ANR	722856	IdentifierDeclType	char *		722654	0					
ANR	722857	Identifier	timestr		722654	1					
ANR	722858	AssignmentExpression	"* timestr = sdb_get ( sdb , timestrKey , 0 )"		722654	2		=			
ANR	722859	Identifier	timestr		722654	0					
ANR	722860	CallExpression	"sdb_get ( sdb , timestrKey , 0 )"		722654	1					
ANR	722861	Callee	sdb_get		722654	0					
ANR	722862	Identifier	sdb_get		722654	0					
ANR	722863	ArgumentList	sdb		722654	1					
ANR	722864	Argument	sdb		722654	0					
ANR	722865	Identifier	sdb		722654	0					
ANR	722866	Argument	timestrKey		722654	1					
ANR	722867	Identifier	timestrKey		722654	0					
ANR	722868	Argument	0		722654	2					
ANR	722869	PrimaryExpression	0		722654	0					
ANR	722870	IfStatement	if ( ! timestr )		722654	7					
ANR	722871	Condition	! timestr	3559:6:104075:104082	722654	0	True				
ANR	722872	UnaryOperationExpression	! timestr		722654	0					
ANR	722873	UnaryOperator	!		722654	0					
ANR	722874	Identifier	timestr		722654	1					
ANR	722875	CompoundStatement		25:16:848:848	722654	1					
ANR	722876	BreakStatement	break ;	3560:3:104090:104095	722654	0	True				
ANR	722877	IdentifierDeclStatement	"ut64 vaddr = sdb_num_get ( sdb , vaddrKey , 0 ) ;"	3562:2:104103:104146	722654	8	True				
ANR	722878	IdentifierDecl	"vaddr = sdb_num_get ( sdb , vaddrKey , 0 )"		722654	0					
ANR	722879	IdentifierDeclType	ut64		722654	0					
ANR	722880	Identifier	vaddr		722654	1					
ANR	722881	AssignmentExpression	"vaddr = sdb_num_get ( sdb , vaddrKey , 0 )"		722654	2		=			
ANR	722882	Identifier	vaddr		722654	0					
ANR	722883	CallExpression	"sdb_num_get ( sdb , vaddrKey , 0 )"		722654	1					
ANR	722884	Callee	sdb_num_get		722654	0					
ANR	722885	Identifier	sdb_num_get		722654	0					
ANR	722886	ArgumentList	sdb		722654	1					
ANR	722887	Argument	sdb		722654	0					
ANR	722888	Identifier	sdb		722654	0					
ANR	722889	Argument	vaddrKey		722654	1					
ANR	722890	Identifier	vaddrKey		722654	0					
ANR	722891	Argument	0		722654	2					
ANR	722892	PrimaryExpression	0		722654	0					
ANR	722893	IdentifierDeclStatement	"int size = ( int ) sdb_num_get ( sdb , sizeKey , 0 ) ;"	3563:2:104150:104195	722654	9	True				
ANR	722894	IdentifierDecl	"size = ( int ) sdb_num_get ( sdb , sizeKey , 0 )"		722654	0					
ANR	722895	IdentifierDeclType	int		722654	0					
ANR	722896	Identifier	size		722654	1					
ANR	722897	AssignmentExpression	"size = ( int ) sdb_num_get ( sdb , sizeKey , 0 )"		722654	2		=			
ANR	722898	Identifier	size		722654	0					
ANR	722899	CastExpression	"( int ) sdb_num_get ( sdb , sizeKey , 0 )"		722654	1					
ANR	722900	CastTarget	int		722654	0					
ANR	722901	CallExpression	"sdb_num_get ( sdb , sizeKey , 0 )"		722654	1					
ANR	722902	Callee	sdb_num_get		722654	0					
ANR	722903	Identifier	sdb_num_get		722654	0					
ANR	722904	ArgumentList	sdb		722654	1					
ANR	722905	Argument	sdb		722654	0					
ANR	722906	Identifier	sdb		722654	0					
ANR	722907	Argument	sizeKey		722654	1					
ANR	722908	Identifier	sizeKey		722654	0					
ANR	722909	Argument	0		722654	2					
ANR	722910	PrimaryExpression	0		722654	0					
ANR	722911	IdentifierDeclStatement	"char * name = sdb_get ( sdb , nameKey , 0 ) ;"	3564:2:104199:104237	722654	10	True				
ANR	722912	IdentifierDecl	"* name = sdb_get ( sdb , nameKey , 0 )"		722654	0					
ANR	722913	IdentifierDeclType	char *		722654	0					
ANR	722914	Identifier	name		722654	1					
ANR	722915	AssignmentExpression	"* name = sdb_get ( sdb , nameKey , 0 )"		722654	2		=			
ANR	722916	Identifier	name		722654	0					
ANR	722917	CallExpression	"sdb_get ( sdb , nameKey , 0 )"		722654	1					
ANR	722918	Callee	sdb_get		722654	0					
ANR	722919	Identifier	sdb_get		722654	0					
ANR	722920	ArgumentList	sdb		722654	1					
ANR	722921	Argument	sdb		722654	0					
ANR	722922	Identifier	sdb		722654	0					
ANR	722923	Argument	nameKey		722654	1					
ANR	722924	Identifier	nameKey		722654	0					
ANR	722925	Argument	0		722654	2					
ANR	722926	PrimaryExpression	0		722654	0					
ANR	722927	IdentifierDeclStatement	"char * type = sdb_get ( sdb , typeKey , 0 ) ;"	3565:2:104241:104279	722654	11	True				
ANR	722928	IdentifierDecl	"* type = sdb_get ( sdb , typeKey , 0 )"		722654	0					
ANR	722929	IdentifierDeclType	char *		722654	0					
ANR	722930	Identifier	type		722654	1					
ANR	722931	AssignmentExpression	"* type = sdb_get ( sdb , typeKey , 0 )"		722654	2		=			
ANR	722932	Identifier	type		722654	0					
ANR	722933	CallExpression	"sdb_get ( sdb , typeKey , 0 )"		722654	1					
ANR	722934	Callee	sdb_get		722654	0					
ANR	722935	Identifier	sdb_get		722654	0					
ANR	722936	ArgumentList	sdb		722654	1					
ANR	722937	Argument	sdb		722654	0					
ANR	722938	Identifier	sdb		722654	0					
ANR	722939	Argument	typeKey		722654	1					
ANR	722940	Identifier	typeKey		722654	0					
ANR	722941	Argument	0		722654	2					
ANR	722942	PrimaryExpression	0		722654	0					
ANR	722943	IdentifierDeclStatement	"char * lang = sdb_get ( sdb , languageKey , 0 ) ;"	3566:2:104283:104325	722654	12	True				
ANR	722944	IdentifierDecl	"* lang = sdb_get ( sdb , languageKey , 0 )"		722654	0					
ANR	722945	IdentifierDeclType	char *		722654	0					
ANR	722946	Identifier	lang		722654	1					
ANR	722947	AssignmentExpression	"* lang = sdb_get ( sdb , languageKey , 0 )"		722654	2		=			
ANR	722948	Identifier	lang		722654	0					
ANR	722949	CallExpression	"sdb_get ( sdb , languageKey , 0 )"		722654	1					
ANR	722950	Callee	sdb_get		722654	0					
ANR	722951	Identifier	sdb_get		722654	0					
ANR	722952	ArgumentList	sdb		722654	1					
ANR	722953	Argument	sdb		722654	0					
ANR	722954	Identifier	sdb		722654	0					
ANR	722955	Argument	languageKey		722654	1					
ANR	722956	Identifier	languageKey		722654	0					
ANR	722957	Argument	0		722654	2					
ANR	722958	PrimaryExpression	0		722654	0					
ANR	722959	IfStatement	if ( IS_MODE_SET ( mode ) )		722654	13					
ANR	722960	Condition	IS_MODE_SET ( mode )	3568:6:104334:104351	722654	0	True				
ANR	722961	CallExpression	IS_MODE_SET ( mode )		722654	0					
ANR	722962	Callee	IS_MODE_SET		722654	0					
ANR	722963	Identifier	IS_MODE_SET		722654	0					
ANR	722964	ArgumentList	mode		722654	1					
ANR	722965	Argument	mode		722654	0					
ANR	722966	Identifier	mode		722654	0					
ANR	722967	CompoundStatement		35:3:1122:1171	722654	1					
ANR	722968	IdentifierDeclStatement	"const char * name = sdb_fmt ( ""resource.%d"" , index ) ;"	3569:3:104359:104408	722654	0	True				
ANR	722969	IdentifierDecl	"* name = sdb_fmt ( ""resource.%d"" , index )"		722654	0					
ANR	722970	IdentifierDeclType	const char *		722654	0					
ANR	722971	Identifier	name		722654	1					
ANR	722972	AssignmentExpression	"* name = sdb_fmt ( ""resource.%d"" , index )"		722654	2		=			
ANR	722973	Identifier	name		722654	0					
ANR	722974	CallExpression	"sdb_fmt ( ""resource.%d"" , index )"		722654	1					
ANR	722975	Callee	sdb_fmt		722654	0					
ANR	722976	Identifier	sdb_fmt		722654	0					
ANR	722977	ArgumentList	"""resource.%d"""		722654	1					
ANR	722978	Argument	"""resource.%d"""		722654	0					
ANR	722979	PrimaryExpression	"""resource.%d"""		722654	0					
ANR	722980	Argument	index		722654	1					
ANR	722981	Identifier	index		722654	0					
ANR	722982	ExpressionStatement	"r_flag_set ( r -> flags , name , vaddr , size )"	3570:3:104413:104453	722654	1	True				
ANR	722983	CallExpression	"r_flag_set ( r -> flags , name , vaddr , size )"		722654	0					
ANR	722984	Callee	r_flag_set		722654	0					
ANR	722985	Identifier	r_flag_set		722654	0					
ANR	722986	ArgumentList	r -> flags		722654	1					
ANR	722987	Argument	r -> flags		722654	0					
ANR	722988	PtrMemberAccess	r -> flags		722654	0					
ANR	722989	Identifier	r		722654	0					
ANR	722990	Identifier	flags		722654	1					
ANR	722991	Argument	name		722654	1					
ANR	722992	Identifier	name		722654	0					
ANR	722993	Argument	vaddr		722654	2					
ANR	722994	Identifier	vaddr		722654	0					
ANR	722995	Argument	size		722654	3					
ANR	722996	Identifier	size		722654	0					
ANR	722997	ElseStatement	else		722654	0					
ANR	722998	IfStatement	if ( IS_MODE_RAD ( mode ) )		722654	0					
ANR	722999	Condition	IS_MODE_RAD ( mode )	3571:13:104468:104485	722654	0	True				
ANR	723000	CallExpression	IS_MODE_RAD ( mode )		722654	0					
ANR	723001	Callee	IS_MODE_RAD		722654	0					
ANR	723002	Identifier	IS_MODE_RAD		722654	0					
ANR	723003	ArgumentList	mode		722654	1					
ANR	723004	Argument	mode		722654	0					
ANR	723005	Identifier	mode		722654	0					
ANR	723006	CompoundStatement		37:33:1251:1251	722654	1					
ANR	723007	Statement	r_cons_printf	3572:3:104493:104505	722654	0	True				
ANR	723008	Statement	(	3572:17:104507:104507	722654	1	True				
ANR	723009	Statement	"""f resource.%d %d 0x%08"""	3572:18:104508:104531	722654	2	True				
ANR	723010	Statement	PFMT32x	3572:42:104532:104538	722654	3	True				
ANR	723011	Statement	"""\\n"""	3572:49:104539:104542	722654	4	True				
ANR	723012	Statement	","	3572:53:104543:104543	722654	5	True				
ANR	723013	Statement	index	3572:55:104545:104549	722654	6	True				
ANR	723014	Statement	","	3572:60:104550:104550	722654	7	True				
ANR	723015	Statement	size	3572:62:104552:104555	722654	8	True				
ANR	723016	Statement	","	3572:66:104556:104556	722654	9	True				
ANR	723017	Statement	vaddr	3572:68:104558:104562	722654	10	True				
ANR	723018	Statement	)	3572:73:104563:104563	722654	11	True				
ANR	723019	ExpressionStatement		3572:74:104564:104564	722654	12	True				
ANR	723020	ElseStatement	else		722654	0					
ANR	723021	IfStatement	if ( IS_MODE_JSON ( mode ) )		722654	0					
ANR	723022	Condition	IS_MODE_JSON ( mode )	3573:13:104579:104597	722654	0	True				
ANR	723023	CallExpression	IS_MODE_JSON ( mode )		722654	0					
ANR	723024	Callee	IS_MODE_JSON		722654	0					
ANR	723025	Identifier	IS_MODE_JSON		722654	0					
ANR	723026	ArgumentList	mode		722654	1					
ANR	723027	Argument	mode		722654	0					
ANR	723028	Identifier	mode		722654	0					
ANR	723029	CompoundStatement		39:34:1363:1363	722654	1					
ANR	723030	ExpressionStatement	pj_o ( pj )	3574:3:104605:104614	722654	0	True				
ANR	723031	CallExpression	pj_o ( pj )		722654	0					
ANR	723032	Callee	pj_o		722654	0					
ANR	723033	Identifier	pj_o		722654	0					
ANR	723034	ArgumentList	pj		722654	1					
ANR	723035	Argument	pj		722654	0					
ANR	723036	Identifier	pj		722654	0					
ANR	723037	ExpressionStatement	"pj_ks ( pj , ""name"" , name )"	3575:3:104619:104643	722654	1	True				
ANR	723038	CallExpression	"pj_ks ( pj , ""name"" , name )"		722654	0					
ANR	723039	Callee	pj_ks		722654	0					
ANR	723040	Identifier	pj_ks		722654	0					
ANR	723041	ArgumentList	pj		722654	1					
ANR	723042	Argument	pj		722654	0					
ANR	723043	Identifier	pj		722654	0					
ANR	723044	Argument	"""name"""		722654	1					
ANR	723045	PrimaryExpression	"""name"""		722654	0					
ANR	723046	Argument	name		722654	2					
ANR	723047	Identifier	name		722654	0					
ANR	723048	ExpressionStatement	"pj_ki ( pj , ""index"" , index )"	3576:3:104648:104674	722654	2	True				
ANR	723049	CallExpression	"pj_ki ( pj , ""index"" , index )"		722654	0					
ANR	723050	Callee	pj_ki		722654	0					
ANR	723051	Identifier	pj_ki		722654	0					
ANR	723052	ArgumentList	pj		722654	1					
ANR	723053	Argument	pj		722654	0					
ANR	723054	Identifier	pj		722654	0					
ANR	723055	Argument	"""index"""		722654	1					
ANR	723056	PrimaryExpression	"""index"""		722654	0					
ANR	723057	Argument	index		722654	2					
ANR	723058	Identifier	index		722654	0					
ANR	723059	ExpressionStatement	"pj_ks ( pj , ""type"" , type )"	3577:3:104679:104703	722654	3	True				
ANR	723060	CallExpression	"pj_ks ( pj , ""type"" , type )"		722654	0					
ANR	723061	Callee	pj_ks		722654	0					
ANR	723062	Identifier	pj_ks		722654	0					
ANR	723063	ArgumentList	pj		722654	1					
ANR	723064	Argument	pj		722654	0					
ANR	723065	Identifier	pj		722654	0					
ANR	723066	Argument	"""type"""		722654	1					
ANR	723067	PrimaryExpression	"""type"""		722654	0					
ANR	723068	Argument	type		722654	2					
ANR	723069	Identifier	type		722654	0					
ANR	723070	ExpressionStatement	"pj_kn ( pj , ""vaddr"" , vaddr )"	3578:3:104708:104734	722654	4	True				
ANR	723071	CallExpression	"pj_kn ( pj , ""vaddr"" , vaddr )"		722654	0					
ANR	723072	Callee	pj_kn		722654	0					
ANR	723073	Identifier	pj_kn		722654	0					
ANR	723074	ArgumentList	pj		722654	1					
ANR	723075	Argument	pj		722654	0					
ANR	723076	Identifier	pj		722654	0					
ANR	723077	Argument	"""vaddr"""		722654	1					
ANR	723078	PrimaryExpression	"""vaddr"""		722654	0					
ANR	723079	Argument	vaddr		722654	2					
ANR	723080	Identifier	vaddr		722654	0					
ANR	723081	ExpressionStatement	"pj_ki ( pj , ""size"" , size )"	3579:3:104739:104763	722654	5	True				
ANR	723082	CallExpression	"pj_ki ( pj , ""size"" , size )"		722654	0					
ANR	723083	Callee	pj_ki		722654	0					
ANR	723084	Identifier	pj_ki		722654	0					
ANR	723085	ArgumentList	pj		722654	1					
ANR	723086	Argument	pj		722654	0					
ANR	723087	Identifier	pj		722654	0					
ANR	723088	Argument	"""size"""		722654	1					
ANR	723089	PrimaryExpression	"""size"""		722654	0					
ANR	723090	Argument	size		722654	2					
ANR	723091	Identifier	size		722654	0					
ANR	723092	ExpressionStatement	"pj_ks ( pj , ""lang"" , lang )"	3580:3:104768:104792	722654	6	True				
ANR	723093	CallExpression	"pj_ks ( pj , ""lang"" , lang )"		722654	0					
ANR	723094	Callee	pj_ks		722654	0					
ANR	723095	Identifier	pj_ks		722654	0					
ANR	723096	ArgumentList	pj		722654	1					
ANR	723097	Argument	pj		722654	0					
ANR	723098	Identifier	pj		722654	0					
ANR	723099	Argument	"""lang"""		722654	1					
ANR	723100	PrimaryExpression	"""lang"""		722654	0					
ANR	723101	Argument	lang		722654	2					
ANR	723102	Identifier	lang		722654	0					
ANR	723103	ExpressionStatement	"pj_ks ( pj , ""timestamp"" , timestr )"	3581:3:104797:104829	722654	7	True				
ANR	723104	CallExpression	"pj_ks ( pj , ""timestamp"" , timestr )"		722654	0					
ANR	723105	Callee	pj_ks		722654	0					
ANR	723106	Identifier	pj_ks		722654	0					
ANR	723107	ArgumentList	pj		722654	1					
ANR	723108	Argument	pj		722654	0					
ANR	723109	Identifier	pj		722654	0					
ANR	723110	Argument	"""timestamp"""		722654	1					
ANR	723111	PrimaryExpression	"""timestamp"""		722654	0					
ANR	723112	Argument	timestr		722654	2					
ANR	723113	Identifier	timestr		722654	0					
ANR	723114	ExpressionStatement	pj_end ( pj )	3582:3:104834:104845	722654	8	True				
ANR	723115	CallExpression	pj_end ( pj )		722654	0					
ANR	723116	Callee	pj_end		722654	0					
ANR	723117	Identifier	pj_end		722654	0					
ANR	723118	ArgumentList	pj		722654	1					
ANR	723119	Argument	pj		722654	0					
ANR	723120	Identifier	pj		722654	0					
ANR	723121	ElseStatement	else		722654	0					
ANR	723122	CompoundStatement		50:3:1624:1639	722654	0					
ANR	723123	IdentifierDeclStatement	char humansz [ 8 ] ;	3584:3:104861:104876	722654	0	True				
ANR	723124	IdentifierDecl	humansz [ 8 ]		722654	0					
ANR	723125	IdentifierDeclType	char [ 8 ]		722654	0					
ANR	723126	Identifier	humansz		722654	1					
ANR	723127	PrimaryExpression	8		722654	2					
ANR	723128	ExpressionStatement	"r_num_units ( humansz , sizeof ( humansz ) , size )"	3585:3:104881:104926	722654	1	True				
ANR	723129	CallExpression	"r_num_units ( humansz , sizeof ( humansz ) , size )"		722654	0					
ANR	723130	Callee	r_num_units		722654	0					
ANR	723131	Identifier	r_num_units		722654	0					
ANR	723132	ArgumentList	humansz		722654	1					
ANR	723133	Argument	humansz		722654	0					
ANR	723134	Identifier	humansz		722654	0					
ANR	723135	Argument	sizeof ( humansz )		722654	1					
ANR	723136	SizeofExpression	sizeof ( humansz )		722654	0					
ANR	723137	Sizeof	sizeof		722654	0					
ANR	723138	SizeofOperand	humansz		722654	1					
ANR	723139	Argument	size		722654	2					
ANR	723140	Identifier	size		722654	0					
ANR	723141	ExpressionStatement	"r_cons_printf ( ""Resource %d\\n"" , index )"	3586:3:104931:104969	722654	2	True				
ANR	723142	CallExpression	"r_cons_printf ( ""Resource %d\\n"" , index )"		722654	0					
ANR	723143	Callee	r_cons_printf		722654	0					
ANR	723144	Identifier	r_cons_printf		722654	0					
ANR	723145	ArgumentList	"""Resource %d\\n"""		722654	1					
ANR	723146	Argument	"""Resource %d\\n"""		722654	0					
ANR	723147	PrimaryExpression	"""Resource %d\\n"""		722654	0					
ANR	723148	Argument	index		722654	1					
ANR	723149	Identifier	index		722654	0					
ANR	723150	ExpressionStatement	"r_cons_printf ( ""  name: %s\\n"" , name )"	3587:3:104974:105010	722654	3	True				
ANR	723151	CallExpression	"r_cons_printf ( ""  name: %s\\n"" , name )"		722654	0					
ANR	723152	Callee	r_cons_printf		722654	0					
ANR	723153	Identifier	r_cons_printf		722654	0					
ANR	723154	ArgumentList	"""  name: %s\\n"""		722654	1					
ANR	723155	Argument	"""  name: %s\\n"""		722654	0					
ANR	723156	PrimaryExpression	"""  name: %s\\n"""		722654	0					
ANR	723157	Argument	name		722654	1					
ANR	723158	Identifier	name		722654	0					
ANR	723159	ExpressionStatement	"r_cons_printf ( ""  timestamp: %s\\n"" , timestr )"	3588:3:105015:105059	722654	4	True				
ANR	723160	CallExpression	"r_cons_printf ( ""  timestamp: %s\\n"" , timestr )"		722654	0					
ANR	723161	Callee	r_cons_printf		722654	0					
ANR	723162	Identifier	r_cons_printf		722654	0					
ANR	723163	ArgumentList	"""  timestamp: %s\\n"""		722654	1					
ANR	723164	Argument	"""  timestamp: %s\\n"""		722654	0					
ANR	723165	PrimaryExpression	"""  timestamp: %s\\n"""		722654	0					
ANR	723166	Argument	timestr		722654	1					
ANR	723167	Identifier	timestr		722654	0					
ANR	723168	Statement	r_cons_printf	3589:3:105064:105076	722654	5	True				
ANR	723169	Statement	(	3589:17:105078:105078	722654	6	True				
ANR	723170	Statement	"""  vaddr: 0x%08"""	3589:18:105079:105094	722654	7	True				
ANR	723171	Statement	PFMT64x	3589:34:105095:105101	722654	8	True				
ANR	723172	Statement	"""\\n"""	3589:41:105102:105105	722654	9	True				
ANR	723173	Statement	","	3589:45:105106:105106	722654	10	True				
ANR	723174	Statement	vaddr	3589:47:105108:105112	722654	11	True				
ANR	723175	Statement	)	3589:52:105113:105113	722654	12	True				
ANR	723176	ExpressionStatement		3589:53:105114:105114	722654	13	True				
ANR	723177	ExpressionStatement	"r_cons_printf ( ""  size: %s\\n"" , humansz )"	3590:3:105119:105158	722654	14	True				
ANR	723178	CallExpression	"r_cons_printf ( ""  size: %s\\n"" , humansz )"		722654	0					
ANR	723179	Callee	r_cons_printf		722654	0					
ANR	723180	Identifier	r_cons_printf		722654	0					
ANR	723181	ArgumentList	"""  size: %s\\n"""		722654	1					
ANR	723182	Argument	"""  size: %s\\n"""		722654	0					
ANR	723183	PrimaryExpression	"""  size: %s\\n"""		722654	0					
ANR	723184	Argument	humansz		722654	1					
ANR	723185	Identifier	humansz		722654	0					
ANR	723186	ExpressionStatement	"r_cons_printf ( ""  type: %s\\n"" , type )"	3591:3:105163:105199	722654	15	True				
ANR	723187	CallExpression	"r_cons_printf ( ""  type: %s\\n"" , type )"		722654	0					
ANR	723188	Callee	r_cons_printf		722654	0					
ANR	723189	Identifier	r_cons_printf		722654	0					
ANR	723190	ArgumentList	"""  type: %s\\n"""		722654	1					
ANR	723191	Argument	"""  type: %s\\n"""		722654	0					
ANR	723192	PrimaryExpression	"""  type: %s\\n"""		722654	0					
ANR	723193	Argument	type		722654	1					
ANR	723194	Identifier	type		722654	0					
ANR	723195	ExpressionStatement	"r_cons_printf ( ""  language: %s\\n"" , lang )"	3592:3:105204:105244	722654	16	True				
ANR	723196	CallExpression	"r_cons_printf ( ""  language: %s\\n"" , lang )"		722654	0					
ANR	723197	Callee	r_cons_printf		722654	0					
ANR	723198	Identifier	r_cons_printf		722654	0					
ANR	723199	ArgumentList	"""  language: %s\\n"""		722654	1					
ANR	723200	Argument	"""  language: %s\\n"""		722654	0					
ANR	723201	PrimaryExpression	"""  language: %s\\n"""		722654	0					
ANR	723202	Argument	lang		722654	1					
ANR	723203	Identifier	lang		722654	0					
ANR	723204	ExpressionStatement	R_FREE ( timestr )	3595:2:105253:105269	722654	14	True				
ANR	723205	CallExpression	R_FREE ( timestr )		722654	0					
ANR	723206	Callee	R_FREE		722654	0					
ANR	723207	Identifier	R_FREE		722654	0					
ANR	723208	ArgumentList	timestr		722654	1					
ANR	723209	Argument	timestr		722654	0					
ANR	723210	Identifier	timestr		722654	0					
ANR	723211	ExpressionStatement	R_FREE ( name )	3596:2:105273:105286	722654	15	True				
ANR	723212	CallExpression	R_FREE ( name )		722654	0					
ANR	723213	Callee	R_FREE		722654	0					
ANR	723214	Identifier	R_FREE		722654	0					
ANR	723215	ArgumentList	name		722654	1					
ANR	723216	Argument	name		722654	0					
ANR	723217	Identifier	name		722654	0					
ANR	723218	ExpressionStatement	R_FREE ( type )	3597:2:105290:105303	722654	16	True				
ANR	723219	CallExpression	R_FREE ( type )		722654	0					
ANR	723220	Callee	R_FREE		722654	0					
ANR	723221	Identifier	R_FREE		722654	0					
ANR	723222	ArgumentList	type		722654	1					
ANR	723223	Argument	type		722654	0					
ANR	723224	Identifier	type		722654	0					
ANR	723225	Statement	R_FREE	3598:2:105307:105312	722654	17	True				
ANR	723226	ExpressionStatement	( lang ) index ++	3598:9:105314:105331	722654	18	True				
ANR	723227	CastExpression	( lang ) index ++		722654	0					
ANR	723228	CastTarget	lang		722654	0					
ANR	723229	PostIncDecOperationExpression	index ++		722654	1					
ANR	723230	Identifier	index		722654	0					
ANR	723231	IncDec	++		722654	1					
ANR	723232	IfStatement	if ( IS_MODE_JSON ( mode ) )		722654	7					
ANR	723233	Condition	IS_MODE_JSON ( mode )	3602:5:105341:105359	722654	0	True				
ANR	723234	CallExpression	IS_MODE_JSON ( mode )		722654	0					
ANR	723235	Callee	IS_MODE_JSON		722654	0					
ANR	723236	Identifier	IS_MODE_JSON		722654	0					
ANR	723237	ArgumentList	mode		722654	1					
ANR	723238	Argument	mode		722654	0					
ANR	723239	Identifier	mode		722654	0					
ANR	723240	CompoundStatement		68:26:2125:2125	722654	1					
ANR	723241	ExpressionStatement	pj_end ( pj )	3603:2:105366:105377	722654	0	True				
ANR	723242	CallExpression	pj_end ( pj )		722654	0					
ANR	723243	Callee	pj_end		722654	0					
ANR	723244	Identifier	pj_end		722654	0					
ANR	723245	ArgumentList	pj		722654	1					
ANR	723246	Argument	pj		722654	0					
ANR	723247	Identifier	pj		722654	0					
ANR	723248	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	3604:2:105381:105419	722654	1	True				
ANR	723249	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		722654	0					
ANR	723250	Callee	r_cons_printf		722654	0					
ANR	723251	Identifier	r_cons_printf		722654	0					
ANR	723252	ArgumentList	"""%s\\n"""		722654	1					
ANR	723253	Argument	"""%s\\n"""		722654	0					
ANR	723254	PrimaryExpression	"""%s\\n"""		722654	0					
ANR	723255	Argument	pj_string ( pj )		722654	1					
ANR	723256	CallExpression	pj_string ( pj )		722654	0					
ANR	723257	Callee	pj_string		722654	0					
ANR	723258	Identifier	pj_string		722654	0					
ANR	723259	ArgumentList	pj		722654	1					
ANR	723260	Argument	pj		722654	0					
ANR	723261	Identifier	pj		722654	0					
ANR	723262	ExpressionStatement	pj_free ( pj )	3605:2:105423:105435	722654	2	True				
ANR	723263	CallExpression	pj_free ( pj )		722654	0					
ANR	723264	Callee	pj_free		722654	0					
ANR	723265	Identifier	pj_free		722654	0					
ANR	723266	ArgumentList	pj		722654	1					
ANR	723267	Argument	pj		722654	0					
ANR	723268	Identifier	pj		722654	0					
ANR	723269	ElseStatement	else		722654	0					
ANR	723270	IfStatement	if ( IS_MODE_RAD ( mode ) )		722654	0					
ANR	723271	Condition	IS_MODE_RAD ( mode )	3606:12:105449:105466	722654	0	True				
ANR	723272	CallExpression	IS_MODE_RAD ( mode )		722654	0					
ANR	723273	Callee	IS_MODE_RAD		722654	0					
ANR	723274	Identifier	IS_MODE_RAD		722654	0					
ANR	723275	ArgumentList	mode		722654	1					
ANR	723276	Argument	mode		722654	0					
ANR	723277	Identifier	mode		722654	0					
ANR	723278	CompoundStatement		72:32:2232:2232	722654	1					
ANR	723279	ExpressionStatement	"r_cons_printf ( ""fs *"" )"	3607:2:105473:105495	722654	0	True				
ANR	723280	CallExpression	"r_cons_printf ( ""fs *"" )"		722654	0					
ANR	723281	Callee	r_cons_printf		722654	0					
ANR	723282	Identifier	r_cons_printf		722654	0					
ANR	723283	ArgumentList	"""fs *"""		722654	1					
ANR	723284	Argument	"""fs *"""		722654	0					
ANR	723285	PrimaryExpression	"""fs *"""		722654	0					
ANR	723286	ReturnType	static void		722654	1					
ANR	723287	Identifier	bin_pe_resources		722654	2					
ANR	723288	ParameterList	"RCore * r , int mode"		722654	3					
ANR	723289	Parameter	RCore * r	3535:29:103216:103223	722654	0	True				
ANR	723290	ParameterType	RCore *		722654	0					
ANR	723291	Identifier	r		722654	1					
ANR	723292	Parameter	int mode	3535:39:103226:103233	722654	1	True				
ANR	723293	ParameterType	int		722654	0					
ANR	723294	Identifier	mode		722654	1					
ANR	723295	CFGEntryNode	ENTRY		722654		True				
ANR	723296	CFGExitNode	EXIT		722654		True				
ANR	723297	Symbol	r -> flags		722654						
ANR	723298	Symbol	pj_string		722654						
ANR	723299	Symbol	humansz		722654						
ANR	723300	Symbol	IS_MODE_JSON		722654						
ANR	723301	Symbol	vaddr		722654						
ANR	723302	Symbol	type		722654						
ANR	723303	Symbol	languageKey		722654						
ANR	723304	Symbol	mode		722654						
ANR	723305	Symbol	R_FLAGS_FS_RESOURCES		722654						
ANR	723306	Symbol	timestrKey		722654						
ANR	723307	Symbol	sdb_ns_path		722654						
ANR	723308	Symbol	vaddrKey		722654						
ANR	723309	Symbol	lang		722654						
ANR	723310	Symbol	sdb_fmt		722654						
ANR	723311	Symbol	sdb_num_get		722654						
ANR	723312	Symbol	r -> sdb		722654						
ANR	723313	Symbol	sizeKey		722654						
ANR	723314	Symbol	NULL		722654						
ANR	723315	Symbol	typeKey		722654						
ANR	723316	Symbol	index		722654						
ANR	723317	Symbol	sdb_get		722654						
ANR	723318	Symbol	timestr		722654						
ANR	723319	Symbol	pe_path		722654						
ANR	723320	Symbol	IS_MODE_SET		722654						
ANR	723321	Symbol	sdb		722654						
ANR	723322	Symbol	r		722654						
ANR	723323	Symbol	size		722654						
ANR	723324	Symbol	nameKey		722654						
ANR	723325	Symbol	true		722654						
ANR	723326	Symbol	name		722654						
ANR	723327	Symbol	pj		722654						
ANR	723328	Symbol	IS_MODE_RAD		722654						
ANR	723329	Symbol	pj_new		722654						
ANR	723330	Symbol	* r		722654						
ANR	723331	Function	bin_no_resources	3611:0:105503:105609							
ANR	723332	FunctionDef	"bin_no_resources (RCore * r , int mode)"		723331	0					
ANR	723333	CompoundStatement		3611:49:105552:105609	723331	0					
ANR	723334	IfStatement	if ( IS_MODE_JSON ( mode ) )		723331	0					
ANR	723335	Condition	IS_MODE_JSON ( mode )	3612:5:105559:105577	723331	0	True				
ANR	723336	CallExpression	IS_MODE_JSON ( mode )		723331	0					
ANR	723337	Callee	IS_MODE_JSON		723331	0					
ANR	723338	Identifier	IS_MODE_JSON		723331	0					
ANR	723339	ArgumentList	mode		723331	1					
ANR	723340	Argument	mode		723331	0					
ANR	723341	Identifier	mode		723331	0					
ANR	723342	CompoundStatement		2:26:27:27	723331	1					
ANR	723343	ExpressionStatement	"r_cons_printf ( ""[]"" )"	3613:2:105584:105604	723331	0	True				
ANR	723344	CallExpression	"r_cons_printf ( ""[]"" )"		723331	0					
ANR	723345	Callee	r_cons_printf		723331	0					
ANR	723346	Identifier	r_cons_printf		723331	0					
ANR	723347	ArgumentList	"""[]"""		723331	1					
ANR	723348	Argument	"""[]"""		723331	0					
ANR	723349	PrimaryExpression	"""[]"""		723331	0					
ANR	723350	ReturnType	static void		723331	1					
ANR	723351	Identifier	bin_no_resources		723331	2					
ANR	723352	ParameterList	"RCore * r , int mode"		723331	3					
ANR	723353	Parameter	RCore * r	3611:29:105532:105539	723331	0	True				
ANR	723354	ParameterType	RCore *		723331	0					
ANR	723355	Identifier	r		723331	1					
ANR	723356	Parameter	int mode	3611:39:105542:105549	723331	1	True				
ANR	723357	ParameterType	int		723331	0					
ANR	723358	Identifier	mode		723331	1					
ANR	723359	CFGEntryNode	ENTRY		723331		True				
ANR	723360	CFGExitNode	EXIT		723331		True				
ANR	723361	Symbol	mode		723331						
ANR	723362	Symbol	r		723331						
ANR	723363	Symbol	IS_MODE_JSON		723331						
ANR	723364	Function	bin_resources	3617:0:105612:105886							
ANR	723365	FunctionDef	"bin_resources (RCore * r , int mode)"		723364	0					
ANR	723366	CompoundStatement		3617:45:105657:105886	723364	0					
ANR	723367	IdentifierDeclStatement	const RBinInfo * info = r_bin_get_info ( r -> bin ) ;	3618:1:105660:105706	723364	0	True				
ANR	723368	IdentifierDecl	* info = r_bin_get_info ( r -> bin )		723364	0					
ANR	723369	IdentifierDeclType	const RBinInfo *		723364	0					
ANR	723370	Identifier	info		723364	1					
ANR	723371	AssignmentExpression	* info = r_bin_get_info ( r -> bin )		723364	2		=			
ANR	723372	Identifier	info		723364	0					
ANR	723373	CallExpression	r_bin_get_info ( r -> bin )		723364	1					
ANR	723374	Callee	r_bin_get_info		723364	0					
ANR	723375	Identifier	r_bin_get_info		723364	0					
ANR	723376	ArgumentList	r -> bin		723364	1					
ANR	723377	Argument	r -> bin		723364	0					
ANR	723378	PtrMemberAccess	r -> bin		723364	0					
ANR	723379	Identifier	r		723364	0					
ANR	723380	Identifier	bin		723364	1					
ANR	723381	IfStatement	if ( ! info || ! info -> rclass )		723364	1					
ANR	723382	Condition	! info || ! info -> rclass	3619:5:105713:105734	723364	0	True				
ANR	723383	OrExpression	! info || ! info -> rclass		723364	0		||			
ANR	723384	UnaryOperationExpression	! info		723364	0					
ANR	723385	UnaryOperator	!		723364	0					
ANR	723386	Identifier	info		723364	1					
ANR	723387	UnaryOperationExpression	! info -> rclass		723364	1					
ANR	723388	UnaryOperator	!		723364	0					
ANR	723389	PtrMemberAccess	info -> rclass		723364	1					
ANR	723390	Identifier	info		723364	0					
ANR	723391	Identifier	rclass		723364	1					
ANR	723392	CompoundStatement		3:29:79:79	723364	1					
ANR	723393	ReturnStatement	return false ;	3620:2:105741:105753	723364	0	True				
ANR	723394	Identifier	false		723364	0					
ANR	723395	IfStatement	"if ( ! strncmp ( ""pe"" , info -> rclass , 2 ) )"		723364	2					
ANR	723396	Condition	"! strncmp ( ""pe"" , info -> rclass , 2 )"	3622:5:105763:105794	723364	0	True				
ANR	723397	UnaryOperationExpression	"! strncmp ( ""pe"" , info -> rclass , 2 )"		723364	0					
ANR	723398	UnaryOperator	!		723364	0					
ANR	723399	CallExpression	"strncmp ( ""pe"" , info -> rclass , 2 )"		723364	1					
ANR	723400	Callee	strncmp		723364	0					
ANR	723401	Identifier	strncmp		723364	0					
ANR	723402	ArgumentList	"""pe"""		723364	1					
ANR	723403	Argument	"""pe"""		723364	0					
ANR	723404	PrimaryExpression	"""pe"""		723364	0					
ANR	723405	Argument	info -> rclass		723364	1					
ANR	723406	PtrMemberAccess	info -> rclass		723364	0					
ANR	723407	Identifier	info		723364	0					
ANR	723408	Identifier	rclass		723364	1					
ANR	723409	Argument	2		723364	2					
ANR	723410	PrimaryExpression	2		723364	0					
ANR	723411	CompoundStatement		6:39:139:139	723364	1					
ANR	723412	ExpressionStatement	"bin_pe_resources ( r , mode )"	3623:2:105801:105827	723364	0	True				
ANR	723413	CallExpression	"bin_pe_resources ( r , mode )"		723364	0					
ANR	723414	Callee	bin_pe_resources		723364	0					
ANR	723415	Identifier	bin_pe_resources		723364	0					
ANR	723416	ArgumentList	r		723364	1					
ANR	723417	Argument	r		723364	0					
ANR	723418	Identifier	r		723364	0					
ANR	723419	Argument	mode		723364	1					
ANR	723420	Identifier	mode		723364	0					
ANR	723421	ElseStatement	else		723364	0					
ANR	723422	CompoundStatement		8:8:179:179	723364	0					
ANR	723423	ExpressionStatement	"bin_no_resources ( r , mode )"	3625:2:105841:105867	723364	0	True				
ANR	723424	CallExpression	"bin_no_resources ( r , mode )"		723364	0					
ANR	723425	Callee	bin_no_resources		723364	0					
ANR	723426	Identifier	bin_no_resources		723364	0					
ANR	723427	ArgumentList	r		723364	1					
ANR	723428	Argument	r		723364	0					
ANR	723429	Identifier	r		723364	0					
ANR	723430	Argument	mode		723364	1					
ANR	723431	Identifier	mode		723364	0					
ANR	723432	ReturnStatement	return true ;	3627:1:105873:105884	723364	3	True				
ANR	723433	Identifier	true		723364	0					
ANR	723434	ReturnType	static int		723364	1					
ANR	723435	Identifier	bin_resources		723364	2					
ANR	723436	ParameterList	"RCore * r , int mode"		723364	3					
ANR	723437	Parameter	RCore * r	3617:25:105637:105644	723364	0	True				
ANR	723438	ParameterType	RCore *		723364	0					
ANR	723439	Identifier	r		723364	1					
ANR	723440	Parameter	int mode	3617:35:105647:105654	723364	1	True				
ANR	723441	ParameterType	int		723364	0					
ANR	723442	Identifier	mode		723364	1					
ANR	723443	CFGEntryNode	ENTRY		723364		True				
ANR	723444	CFGExitNode	EXIT		723364		True				
ANR	723445	Symbol	mode		723364						
ANR	723446	Symbol	strncmp		723364						
ANR	723447	Symbol	r		723364						
ANR	723448	Symbol	r -> bin		723364						
ANR	723449	Symbol	false		723364						
ANR	723450	Symbol	true		723364						
ANR	723451	Symbol	info -> rclass		723364						
ANR	723452	Symbol	* info		723364						
ANR	723453	Symbol	* r		723364						
ANR	723454	Symbol	r_bin_get_info		723364						
ANR	723455	Symbol	info		723364						
ANR	723456	Function	bin_versioninfo	3630:0:105889:106352							
ANR	723457	FunctionDef	"bin_versioninfo (RCore * r , int mode)"		723456	0					
ANR	723458	CompoundStatement		3630:47:105936:106352	723456	0					
ANR	723459	IdentifierDeclStatement	const RBinInfo * info = r_bin_get_info ( r -> bin ) ;	3631:1:105939:105985	723456	0	True				
ANR	723460	IdentifierDecl	* info = r_bin_get_info ( r -> bin )		723456	0					
ANR	723461	IdentifierDeclType	const RBinInfo *		723456	0					
ANR	723462	Identifier	info		723456	1					
ANR	723463	AssignmentExpression	* info = r_bin_get_info ( r -> bin )		723456	2		=			
ANR	723464	Identifier	info		723456	0					
ANR	723465	CallExpression	r_bin_get_info ( r -> bin )		723456	1					
ANR	723466	Callee	r_bin_get_info		723456	0					
ANR	723467	Identifier	r_bin_get_info		723456	0					
ANR	723468	ArgumentList	r -> bin		723456	1					
ANR	723469	Argument	r -> bin		723456	0					
ANR	723470	PtrMemberAccess	r -> bin		723456	0					
ANR	723471	Identifier	r		723456	0					
ANR	723472	Identifier	bin		723456	1					
ANR	723473	IfStatement	if ( ! info || ! info -> rclass )		723456	1					
ANR	723474	Condition	! info || ! info -> rclass	3632:5:105992:106013	723456	0	True				
ANR	723475	OrExpression	! info || ! info -> rclass		723456	0		||			
ANR	723476	UnaryOperationExpression	! info		723456	0					
ANR	723477	UnaryOperator	!		723456	0					
ANR	723478	Identifier	info		723456	1					
ANR	723479	UnaryOperationExpression	! info -> rclass		723456	1					
ANR	723480	UnaryOperator	!		723456	0					
ANR	723481	PtrMemberAccess	info -> rclass		723456	1					
ANR	723482	Identifier	info		723456	0					
ANR	723483	Identifier	rclass		723456	1					
ANR	723484	CompoundStatement		3:29:79:79	723456	1					
ANR	723485	ReturnStatement	return false ;	3633:2:106020:106032	723456	0	True				
ANR	723486	Identifier	false		723456	0					
ANR	723487	IfStatement	"if ( ! strncmp ( ""pe"" , info -> rclass , 2 ) )"		723456	2					
ANR	723488	Condition	"! strncmp ( ""pe"" , info -> rclass , 2 )"	3635:5:106042:106073	723456	0	True				
ANR	723489	UnaryOperationExpression	"! strncmp ( ""pe"" , info -> rclass , 2 )"		723456	0					
ANR	723490	UnaryOperator	!		723456	0					
ANR	723491	CallExpression	"strncmp ( ""pe"" , info -> rclass , 2 )"		723456	1					
ANR	723492	Callee	strncmp		723456	0					
ANR	723493	Identifier	strncmp		723456	0					
ANR	723494	ArgumentList	"""pe"""		723456	1					
ANR	723495	Argument	"""pe"""		723456	0					
ANR	723496	PrimaryExpression	"""pe"""		723456	0					
ANR	723497	Argument	info -> rclass		723456	1					
ANR	723498	PtrMemberAccess	info -> rclass		723456	0					
ANR	723499	Identifier	info		723456	0					
ANR	723500	Identifier	rclass		723456	1					
ANR	723501	Argument	2		723456	2					
ANR	723502	PrimaryExpression	2		723456	0					
ANR	723503	CompoundStatement		6:39:139:139	723456	1					
ANR	723504	ExpressionStatement	"bin_pe_versioninfo ( r , mode )"	3636:2:106080:106108	723456	0	True				
ANR	723505	CallExpression	"bin_pe_versioninfo ( r , mode )"		723456	0					
ANR	723506	Callee	bin_pe_versioninfo		723456	0					
ANR	723507	Identifier	bin_pe_versioninfo		723456	0					
ANR	723508	ArgumentList	r		723456	1					
ANR	723509	Argument	r		723456	0					
ANR	723510	Identifier	r		723456	0					
ANR	723511	Argument	mode		723456	1					
ANR	723512	Identifier	mode		723456	0					
ANR	723513	ElseStatement	else		723456	0					
ANR	723514	IfStatement	"if ( ! strncmp ( ""elf"" , info -> rclass , 3 ) )"		723456	0					
ANR	723515	Condition	"! strncmp ( ""elf"" , info -> rclass , 3 )"	3637:12:106122:106154	723456	0	True				
ANR	723516	UnaryOperationExpression	"! strncmp ( ""elf"" , info -> rclass , 3 )"		723456	0					
ANR	723517	UnaryOperator	!		723456	0					
ANR	723518	CallExpression	"strncmp ( ""elf"" , info -> rclass , 3 )"		723456	1					
ANR	723519	Callee	strncmp		723456	0					
ANR	723520	Identifier	strncmp		723456	0					
ANR	723521	ArgumentList	"""elf"""		723456	1					
ANR	723522	Argument	"""elf"""		723456	0					
ANR	723523	PrimaryExpression	"""elf"""		723456	0					
ANR	723524	Argument	info -> rclass		723456	1					
ANR	723525	PtrMemberAccess	info -> rclass		723456	0					
ANR	723526	Identifier	info		723456	0					
ANR	723527	Identifier	rclass		723456	1					
ANR	723528	Argument	3		723456	2					
ANR	723529	PrimaryExpression	3		723456	0					
ANR	723530	CompoundStatement		8:47:220:220	723456	1					
ANR	723531	ExpressionStatement	"bin_elf_versioninfo ( r , mode )"	3638:2:106161:106190	723456	0	True				
ANR	723532	CallExpression	"bin_elf_versioninfo ( r , mode )"		723456	0					
ANR	723533	Callee	bin_elf_versioninfo		723456	0					
ANR	723534	Identifier	bin_elf_versioninfo		723456	0					
ANR	723535	ArgumentList	r		723456	1					
ANR	723536	Argument	r		723456	0					
ANR	723537	Identifier	r		723456	0					
ANR	723538	Argument	mode		723456	1					
ANR	723539	Identifier	mode		723456	0					
ANR	723540	ElseStatement	else		723456	0					
ANR	723541	IfStatement	"if ( ! strncmp ( ""mach0"" , info -> rclass , 5 ) )"		723456	0					
ANR	723542	Condition	"! strncmp ( ""mach0"" , info -> rclass , 5 )"	3639:12:106204:106238	723456	0	True				
ANR	723543	UnaryOperationExpression	"! strncmp ( ""mach0"" , info -> rclass , 5 )"		723456	0					
ANR	723544	UnaryOperator	!		723456	0					
ANR	723545	CallExpression	"strncmp ( ""mach0"" , info -> rclass , 5 )"		723456	1					
ANR	723546	Callee	strncmp		723456	0					
ANR	723547	Identifier	strncmp		723456	0					
ANR	723548	ArgumentList	"""mach0"""		723456	1					
ANR	723549	Argument	"""mach0"""		723456	0					
ANR	723550	PrimaryExpression	"""mach0"""		723456	0					
ANR	723551	Argument	info -> rclass		723456	1					
ANR	723552	PtrMemberAccess	info -> rclass		723456	0					
ANR	723553	Identifier	info		723456	0					
ANR	723554	Identifier	rclass		723456	1					
ANR	723555	Argument	5		723456	2					
ANR	723556	PrimaryExpression	5		723456	0					
ANR	723557	CompoundStatement		10:49:304:304	723456	1					
ANR	723558	ExpressionStatement	bin_mach0_versioninfo ( r )	3640:2:106245:106270	723456	0	True				
ANR	723559	CallExpression	bin_mach0_versioninfo ( r )		723456	0					
ANR	723560	Callee	bin_mach0_versioninfo		723456	0					
ANR	723561	Identifier	bin_mach0_versioninfo		723456	0					
ANR	723562	ArgumentList	r		723456	1					
ANR	723563	Argument	r		723456	0					
ANR	723564	Identifier	r		723456	0					
ANR	723565	ElseStatement	else		723456	0					
ANR	723566	CompoundStatement		12:8:343:343	723456	0					
ANR	723567	ExpressionStatement	"r_cons_println ( ""Unknown format"" )"	3642:2:106284:106317	723456	0	True				
ANR	723568	CallExpression	"r_cons_println ( ""Unknown format"" )"		723456	0					
ANR	723569	Callee	r_cons_println		723456	0					
ANR	723570	Identifier	r_cons_println		723456	0					
ANR	723571	ArgumentList	"""Unknown format"""		723456	1					
ANR	723572	Argument	"""Unknown format"""		723456	0					
ANR	723573	PrimaryExpression	"""Unknown format"""		723456	0					
ANR	723574	ReturnStatement	return false ;	3643:2:106321:106333	723456	1	True				
ANR	723575	Identifier	false		723456	0					
ANR	723576	ReturnStatement	return true ;	3645:1:106339:106350	723456	3	True				
ANR	723577	Identifier	true		723456	0					
ANR	723578	ReturnType	static int		723456	1					
ANR	723579	Identifier	bin_versioninfo		723456	2					
ANR	723580	ParameterList	"RCore * r , int mode"		723456	3					
ANR	723581	Parameter	RCore * r	3630:27:105916:105923	723456	0	True				
ANR	723582	ParameterType	RCore *		723456	0					
ANR	723583	Identifier	r		723456	1					
ANR	723584	Parameter	int mode	3630:37:105926:105933	723456	1	True				
ANR	723585	ParameterType	int		723456	0					
ANR	723586	Identifier	mode		723456	1					
ANR	723587	CFGEntryNode	ENTRY		723456		True				
ANR	723588	CFGExitNode	EXIT		723456		True				
ANR	723589	Symbol	mode		723456						
ANR	723590	Symbol	strncmp		723456						
ANR	723591	Symbol	r		723456						
ANR	723592	Symbol	r -> bin		723456						
ANR	723593	Symbol	false		723456						
ANR	723594	Symbol	true		723456						
ANR	723595	Symbol	info -> rclass		723456						
ANR	723596	Symbol	* info		723456						
ANR	723597	Symbol	* r		723456						
ANR	723598	Symbol	r_bin_get_info		723456						
ANR	723599	Symbol	info		723456						
ANR	723600	Function	bin_signature	3648:0:106355:106677							
ANR	723601	FunctionDef	"bin_signature (RCore * r , int mode)"		723600	0					
ANR	723602	CompoundStatement		3648:45:106400:106677	723600	0					
ANR	723603	IdentifierDeclStatement	RBinFile * cur = r_bin_cur ( r -> bin ) ;	3649:1:106403:106437	723600	0	True				
ANR	723604	IdentifierDecl	* cur = r_bin_cur ( r -> bin )		723600	0					
ANR	723605	IdentifierDeclType	RBinFile *		723600	0					
ANR	723606	Identifier	cur		723600	1					
ANR	723607	AssignmentExpression	* cur = r_bin_cur ( r -> bin )		723600	2		=			
ANR	723608	Identifier	cur		723600	0					
ANR	723609	CallExpression	r_bin_cur ( r -> bin )		723600	1					
ANR	723610	Callee	r_bin_cur		723600	0					
ANR	723611	Identifier	r_bin_cur		723600	0					
ANR	723612	ArgumentList	r -> bin		723600	1					
ANR	723613	Argument	r -> bin		723600	0					
ANR	723614	PtrMemberAccess	r -> bin		723600	0					
ANR	723615	Identifier	r		723600	0					
ANR	723616	Identifier	bin		723600	1					
ANR	723617	IdentifierDeclStatement	RBinPlugin * plg = r_bin_file_cur_plugin ( cur ) ;	3650:1:106440:106485	723600	1	True				
ANR	723618	IdentifierDecl	* plg = r_bin_file_cur_plugin ( cur )		723600	0					
ANR	723619	IdentifierDeclType	RBinPlugin *		723600	0					
ANR	723620	Identifier	plg		723600	1					
ANR	723621	AssignmentExpression	* plg = r_bin_file_cur_plugin ( cur )		723600	2		=			
ANR	723622	Identifier	plg		723600	0					
ANR	723623	CallExpression	r_bin_file_cur_plugin ( cur )		723600	1					
ANR	723624	Callee	r_bin_file_cur_plugin		723600	0					
ANR	723625	Identifier	r_bin_file_cur_plugin		723600	0					
ANR	723626	ArgumentList	cur		723600	1					
ANR	723627	Argument	cur		723600	0					
ANR	723628	Identifier	cur		723600	0					
ANR	723629	IfStatement	if ( plg && plg -> signature )		723600	2					
ANR	723630	Condition	plg && plg -> signature	3651:5:106492:106512	723600	0	True				
ANR	723631	AndExpression	plg && plg -> signature		723600	0		&&			
ANR	723632	Identifier	plg		723600	0					
ANR	723633	PtrMemberAccess	plg -> signature		723600	1					
ANR	723634	Identifier	plg		723600	0					
ANR	723635	Identifier	signature		723600	1					
ANR	723636	CompoundStatement		5:2:118:183	723600	1					
ANR	723637	IdentifierDeclStatement	"const char * signature = plg -> signature ( cur , IS_MODE_JSON ( mode ) ) ;"	3652:2:106519:106584	723600	0	True				
ANR	723638	IdentifierDecl	"* signature = plg -> signature ( cur , IS_MODE_JSON ( mode ) )"		723600	0					
ANR	723639	IdentifierDeclType	const char *		723600	0					
ANR	723640	Identifier	signature		723600	1					
ANR	723641	AssignmentExpression	"* signature = plg -> signature ( cur , IS_MODE_JSON ( mode ) )"		723600	2		=			
ANR	723642	Identifier	signature		723600	0					
ANR	723643	CallExpression	"plg -> signature ( cur , IS_MODE_JSON ( mode ) )"		723600	1					
ANR	723644	Callee	plg -> signature		723600	0					
ANR	723645	PtrMemberAccess	plg -> signature		723600	0					
ANR	723646	Identifier	plg		723600	0					
ANR	723647	Identifier	signature		723600	1					
ANR	723648	ArgumentList	cur		723600	1					
ANR	723649	Argument	cur		723600	0					
ANR	723650	Identifier	cur		723600	0					
ANR	723651	Argument	IS_MODE_JSON ( mode )		723600	1					
ANR	723652	CallExpression	IS_MODE_JSON ( mode )		723600	0					
ANR	723653	Callee	IS_MODE_JSON		723600	0					
ANR	723654	Identifier	IS_MODE_JSON		723600	0					
ANR	723655	ArgumentList	mode		723600	1					
ANR	723656	Argument	mode		723600	0					
ANR	723657	Identifier	mode		723600	0					
ANR	723658	ExpressionStatement	r_cons_println ( signature )	3653:2:106588:106614	723600	1	True				
ANR	723659	CallExpression	r_cons_println ( signature )		723600	0					
ANR	723660	Callee	r_cons_println		723600	0					
ANR	723661	Identifier	r_cons_println		723600	0					
ANR	723662	ArgumentList	signature		723600	1					
ANR	723663	Argument	signature		723600	0					
ANR	723664	Identifier	signature		723600	0					
ANR	723665	ExpressionStatement	free ( ( char * ) signature )	3654:2:106618:106642	723600	2	True				
ANR	723666	CallExpression	free ( ( char * ) signature )		723600	0					
ANR	723667	Callee	free		723600	0					
ANR	723668	Identifier	free		723600	0					
ANR	723669	ArgumentList	( char * ) signature		723600	1					
ANR	723670	Argument	( char * ) signature		723600	0					
ANR	723671	CastExpression	( char * ) signature		723600	0					
ANR	723672	CastTarget	char *		723600	0					
ANR	723673	Identifier	signature		723600	1					
ANR	723674	ReturnStatement	return true ;	3655:2:106646:106657	723600	3	True				
ANR	723675	Identifier	true		723600	0					
ANR	723676	ReturnStatement	return false ;	3657:1:106663:106675	723600	3	True				
ANR	723677	Identifier	false		723600	0					
ANR	723678	ReturnType	static int		723600	1					
ANR	723679	Identifier	bin_signature		723600	2					
ANR	723680	ParameterList	"RCore * r , int mode"		723600	3					
ANR	723681	Parameter	RCore * r	3648:25:106380:106387	723600	0	True				
ANR	723682	ParameterType	RCore *		723600	0					
ANR	723683	Identifier	r		723600	1					
ANR	723684	Parameter	int mode	3648:35:106390:106397	723600	1	True				
ANR	723685	ParameterType	int		723600	0					
ANR	723686	Identifier	mode		723600	1					
ANR	723687	CFGEntryNode	ENTRY		723600		True				
ANR	723688	CFGExitNode	EXIT		723600		True				
ANR	723689	Symbol	cur		723600						
ANR	723690	Symbol	signature		723600						
ANR	723691	Symbol	r_bin_cur		723600						
ANR	723692	Symbol	false		723600						
ANR	723693	Symbol	plg		723600						
ANR	723694	Symbol	IS_MODE_JSON		723600						
ANR	723695	Symbol	mode		723600						
ANR	723696	Symbol	r		723600						
ANR	723697	Symbol	r_bin_file_cur_plugin		723600						
ANR	723698	Symbol	* plg		723600						
ANR	723699	Symbol	r -> bin		723600						
ANR	723700	Symbol	true		723600						
ANR	723701	Symbol	plg -> signature		723600						
ANR	723702	Symbol	* r		723600						
ANR	723703	Function	r_core_bin_export_info_rad	3660:0:106680:108556							
ANR	723704	FunctionDef	r_core_bin_export_info_rad (RCore * core)		723703	0					
ANR	723705	CompoundStatement		3660:51:106731:108556	723703	0					
ANR	723706	IdentifierDeclStatement	Sdb * db = NULL ;	3661:1:106734:106748	723703	0	True				
ANR	723707	IdentifierDecl	* db = NULL		723703	0					
ANR	723708	IdentifierDeclType	Sdb *		723703	0					
ANR	723709	Identifier	db		723703	1					
ANR	723710	AssignmentExpression	* db = NULL		723703	2		=			
ANR	723711	Identifier	NULL		723703	0					
ANR	723712	Identifier	NULL		723703	1					
ANR	723713	IdentifierDeclStatement	"char * flagname = NULL , * offset = NULL ;"	3662:1:106751:106788	723703	1	True				
ANR	723714	IdentifierDecl	* flagname = NULL		723703	0					
ANR	723715	IdentifierDeclType	char *		723703	0					
ANR	723716	Identifier	flagname		723703	1					
ANR	723717	AssignmentExpression	* flagname = NULL		723703	2		=			
ANR	723718	Identifier	NULL		723703	0					
ANR	723719	Identifier	NULL		723703	1					
ANR	723720	IdentifierDecl	* offset = NULL		723703	1					
ANR	723721	IdentifierDeclType	char *		723703	0					
ANR	723722	Identifier	offset		723703	1					
ANR	723723	AssignmentExpression	* offset = NULL		723703	2		=			
ANR	723724	Identifier	NULL		723703	0					
ANR	723725	Identifier	NULL		723703	1					
ANR	723726	IdentifierDeclStatement	RBinFile * bf = r_bin_cur ( core -> bin ) ;	3663:1:106791:106827	723703	2	True				
ANR	723727	IdentifierDecl	* bf = r_bin_cur ( core -> bin )		723703	0					
ANR	723728	IdentifierDeclType	RBinFile *		723703	0					
ANR	723729	Identifier	bf		723703	1					
ANR	723730	AssignmentExpression	* bf = r_bin_cur ( core -> bin )		723703	2		=			
ANR	723731	Identifier	bf		723703	0					
ANR	723732	CallExpression	r_bin_cur ( core -> bin )		723703	1					
ANR	723733	Callee	r_bin_cur		723703	0					
ANR	723734	Identifier	r_bin_cur		723703	0					
ANR	723735	ArgumentList	core -> bin		723703	1					
ANR	723736	Argument	core -> bin		723703	0					
ANR	723737	PtrMemberAccess	core -> bin		723703	0					
ANR	723738	Identifier	core		723703	0					
ANR	723739	Identifier	bin		723703	1					
ANR	723740	IfStatement	if ( ! bf )		723703	3					
ANR	723741	Condition	! bf	3664:5:106834:106836	723703	0	True				
ANR	723742	UnaryOperationExpression	! bf		723703	0					
ANR	723743	UnaryOperator	!		723703	0					
ANR	723744	Identifier	bf		723703	1					
ANR	723745	CompoundStatement		5:10:107:107	723703	1					
ANR	723746	ReturnStatement	return ;	3665:2:106843:106849	723703	0	True				
ANR	723747	ExpressionStatement	"db = sdb_ns ( bf -> sdb , ""info"" , 0 )"	3667:1:106855:106887	723703	4	True				
ANR	723748	AssignmentExpression	"db = sdb_ns ( bf -> sdb , ""info"" , 0 )"		723703	0		=			
ANR	723749	Identifier	db		723703	0					
ANR	723750	CallExpression	"sdb_ns ( bf -> sdb , ""info"" , 0 )"		723703	1					
ANR	723751	Callee	sdb_ns		723703	0					
ANR	723752	Identifier	sdb_ns		723703	0					
ANR	723753	ArgumentList	bf -> sdb		723703	1					
ANR	723754	Argument	bf -> sdb		723703	0					
ANR	723755	PtrMemberAccess	bf -> sdb		723703	0					
ANR	723756	Identifier	bf		723703	0					
ANR	723757	Identifier	sdb		723703	1					
ANR	723758	Argument	"""info"""		723703	1					
ANR	723759	PrimaryExpression	"""info"""		723703	0					
ANR	723760	Argument	0		723703	2					
ANR	723761	PrimaryExpression	0		723703	0					
ANR	723762	ExpressionStatement		3667:34:106888:106888	723703	5	True				
ANR	723763	IfStatement	if ( db )		723703	6					
ANR	723764	Condition	db	3668:5:106895:106896	723703	0	True				
ANR	723765	Identifier	db		723703	0					
ANR	723766	CompoundStatement		14:2:265:307	723703	1					
ANR	723767	IdentifierDeclStatement	SdbListIter * iter ;	3669:2:106903:106920	723703	0	True				
ANR	723768	IdentifierDecl	* iter		723703	0					
ANR	723769	IdentifierDeclType	SdbListIter *		723703	0					
ANR	723770	Identifier	iter		723703	1					
ANR	723771	IdentifierDeclStatement	SdbKv * kv ;	3670:2:106924:106933	723703	1	True				
ANR	723772	IdentifierDecl	* kv		723703	0					
ANR	723773	IdentifierDeclType	SdbKv *		723703	0					
ANR	723774	Identifier	kv		723703	1					
ANR	723775	ExpressionStatement	"r_cons_printf ( ""fs format\\n"" )"	3671:2:106937:106966	723703	2	True				
ANR	723776	CallExpression	"r_cons_printf ( ""fs format\\n"" )"		723703	0					
ANR	723777	Callee	r_cons_printf		723703	0					
ANR	723778	Identifier	r_cons_printf		723703	0					
ANR	723779	ArgumentList	"""fs format\\n"""		723703	1					
ANR	723780	Argument	"""fs format\\n"""		723703	0					
ANR	723781	PrimaryExpression	"""fs format\\n"""		723703	0					
ANR	723782	IdentifierDeclStatement	"SdbList * ls = sdb_foreach_list ( db , false ) ;"	3673:2:106997:107039	723703	3	True				
ANR	723783	IdentifierDecl	"* ls = sdb_foreach_list ( db , false )"		723703	0					
ANR	723784	IdentifierDeclType	SdbList *		723703	0					
ANR	723785	Identifier	ls		723703	1					
ANR	723786	AssignmentExpression	"* ls = sdb_foreach_list ( db , false )"		723703	2		=			
ANR	723787	Identifier	ls		723703	0					
ANR	723788	CallExpression	"sdb_foreach_list ( db , false )"		723703	1					
ANR	723789	Callee	sdb_foreach_list		723703	0					
ANR	723790	Identifier	sdb_foreach_list		723703	0					
ANR	723791	ArgumentList	db		723703	1					
ANR	723792	Argument	db		723703	0					
ANR	723793	Identifier	db		723703	0					
ANR	723794	Argument	false		723703	1					
ANR	723795	Identifier	false		723703	0					
ANR	723796	Statement	ls_foreach	3674:2:107043:107052	723703	4	True				
ANR	723797	Statement	(	3674:13:107054:107054	723703	5	True				
ANR	723798	Statement	ls	3674:14:107055:107056	723703	6	True				
ANR	723799	Statement	","	3674:16:107057:107057	723703	7	True				
ANR	723800	Statement	iter	3674:18:107059:107062	723703	8	True				
ANR	723801	Statement	","	3674:22:107063:107063	723703	9	True				
ANR	723802	Statement	kv	3674:24:107065:107066	723703	10	True				
ANR	723803	Statement	)	3674:26:107067:107067	723703	11	True				
ANR	723804	CompoundStatement		18:3:402:424	723703	12					
ANR	723805	IdentifierDeclStatement	char * k = sdbkv_key ( kv ) ;	3675:3:107074:107098	723703	0	True				
ANR	723806	IdentifierDecl	* k = sdbkv_key ( kv )		723703	0					
ANR	723807	IdentifierDeclType	char *		723703	0					
ANR	723808	Identifier	k		723703	1					
ANR	723809	AssignmentExpression	* k = sdbkv_key ( kv )		723703	2		=			
ANR	723810	Identifier	k		723703	0					
ANR	723811	CallExpression	sdbkv_key ( kv )		723703	1					
ANR	723812	Callee	sdbkv_key		723703	0					
ANR	723813	Identifier	sdbkv_key		723703	0					
ANR	723814	ArgumentList	kv		723703	1					
ANR	723815	Argument	kv		723703	0					
ANR	723816	Identifier	kv		723703	0					
ANR	723817	IdentifierDeclStatement	char * v = sdbkv_value ( kv ) ;	3676:3:107103:107129	723703	1	True				
ANR	723818	IdentifierDecl	* v = sdbkv_value ( kv )		723703	0					
ANR	723819	IdentifierDeclType	char *		723703	0					
ANR	723820	Identifier	v		723703	1					
ANR	723821	AssignmentExpression	* v = sdbkv_value ( kv )		723703	2		=			
ANR	723822	Identifier	v		723703	0					
ANR	723823	CallExpression	sdbkv_value ( kv )		723703	1					
ANR	723824	Callee	sdbkv_value		723703	0					
ANR	723825	Identifier	sdbkv_value		723703	0					
ANR	723826	ArgumentList	kv		723703	1					
ANR	723827	Argument	kv		723703	0					
ANR	723828	Identifier	kv		723703	0					
ANR	723829	IdentifierDeclStatement	char * dup = strdup ( k ) ;	3677:3:107134:107156	723703	2	True				
ANR	723830	IdentifierDecl	* dup = strdup ( k )		723703	0					
ANR	723831	IdentifierDeclType	char *		723703	0					
ANR	723832	Identifier	dup		723703	1					
ANR	723833	AssignmentExpression	* dup = strdup ( k )		723703	2		=			
ANR	723834	Identifier	dup		723703	0					
ANR	723835	CallExpression	strdup ( k )		723703	1					
ANR	723836	Callee	strdup		723703	0					
ANR	723837	Identifier	strdup		723703	0					
ANR	723838	ArgumentList	k		723703	1					
ANR	723839	Argument	k		723703	0					
ANR	723840	Identifier	k		723703	0					
ANR	723841	IfStatement	"if ( ( flagname = strstr ( dup , "".offset"" ) ) )"		723703	3					
ANR	723842	Condition	"flagname = strstr ( dup , "".offset"" )"	3679:7:107203:107238	723703	0	True				
ANR	723843	AssignmentExpression	"flagname = strstr ( dup , "".offset"" )"		723703	0		=			
ANR	723844	Identifier	flagname		723703	0					
ANR	723845	CallExpression	"strstr ( dup , "".offset"" )"		723703	1					
ANR	723846	Callee	strstr		723703	0					
ANR	723847	Identifier	strstr		723703	0					
ANR	723848	ArgumentList	dup		723703	1					
ANR	723849	Argument	dup		723703	0					
ANR	723850	Identifier	dup		723703	0					
ANR	723851	Argument	""".offset"""		723703	1					
ANR	723852	PrimaryExpression	""".offset"""		723703	0					
ANR	723853	CompoundStatement		20:45:509:509	723703	1					
ANR	723854	ExpressionStatement	* flagname = 0	3680:4:107247:107260	723703	0	True				
ANR	723855	AssignmentExpression	* flagname = 0		723703	0		=			
ANR	723856	UnaryOperationExpression	* flagname		723703	0					
ANR	723857	UnaryOperator	*		723703	0					
ANR	723858	Identifier	flagname		723703	1					
ANR	723859	PrimaryExpression	0		723703	1					
ANR	723860	ExpressionStatement	flagname = dup	3681:4:107266:107280	723703	1	True				
ANR	723861	AssignmentExpression	flagname = dup		723703	0		=			
ANR	723862	Identifier	flagname		723703	0					
ANR	723863	Identifier	dup		723703	1					
ANR	723864	ExpressionStatement	"r_cons_printf ( ""f %s @ %s\\n"" , flagname , v )"	3682:4:107286:107328	723703	2	True				
ANR	723865	CallExpression	"r_cons_printf ( ""f %s @ %s\\n"" , flagname , v )"		723703	0					
ANR	723866	Callee	r_cons_printf		723703	0					
ANR	723867	Identifier	r_cons_printf		723703	0					
ANR	723868	ArgumentList	"""f %s @ %s\\n"""		723703	1					
ANR	723869	Argument	"""f %s @ %s\\n"""		723703	0					
ANR	723870	PrimaryExpression	"""f %s @ %s\\n"""		723703	0					
ANR	723871	Argument	flagname		723703	1					
ANR	723872	Identifier	flagname		723703	0					
ANR	723873	Argument	v		723703	2					
ANR	723874	Identifier	v		723703	0					
ANR	723875	ExpressionStatement	free ( offset )	3683:4:107334:107347	723703	3	True				
ANR	723876	CallExpression	free ( offset )		723703	0					
ANR	723877	Callee	free		723703	0					
ANR	723878	Identifier	free		723703	0					
ANR	723879	ArgumentList	offset		723703	1					
ANR	723880	Argument	offset		723703	0					
ANR	723881	Identifier	offset		723703	0					
ANR	723882	ExpressionStatement	offset = strdup ( v )	3684:4:107353:107372	723703	4	True				
ANR	723883	AssignmentExpression	offset = strdup ( v )		723703	0		=			
ANR	723884	Identifier	offset		723703	0					
ANR	723885	CallExpression	strdup ( v )		723703	1					
ANR	723886	Callee	strdup		723703	0					
ANR	723887	Identifier	strdup		723703	0					
ANR	723888	ArgumentList	v		723703	1					
ANR	723889	Argument	v		723703	0					
ANR	723890	Identifier	v		723703	0					
ANR	723891	IfStatement	"if ( ( flagname = strstr ( dup , "".cparse"" ) ) )"		723703	4					
ANR	723892	Condition	"flagname = strstr ( dup , "".cparse"" )"	3686:7:107386:107421	723703	0	True				
ANR	723893	AssignmentExpression	"flagname = strstr ( dup , "".cparse"" )"		723703	0		=			
ANR	723894	Identifier	flagname		723703	0					
ANR	723895	CallExpression	"strstr ( dup , "".cparse"" )"		723703	1					
ANR	723896	Callee	strstr		723703	0					
ANR	723897	Identifier	strstr		723703	0					
ANR	723898	ArgumentList	dup		723703	1					
ANR	723899	Argument	dup		723703	0					
ANR	723900	Identifier	dup		723703	0					
ANR	723901	Argument	""".cparse"""		723703	1					
ANR	723902	PrimaryExpression	""".cparse"""		723703	0					
ANR	723903	CompoundStatement		27:45:692:692	723703	1					
ANR	723904	ExpressionStatement	"r_cons_printf ( ""\\""td %s\\""\\n"" , v )"	3687:4:107430:107462	723703	0	True				
ANR	723905	CallExpression	"r_cons_printf ( ""\\""td %s\\""\\n"" , v )"		723703	0					
ANR	723906	Callee	r_cons_printf		723703	0					
ANR	723907	Identifier	r_cons_printf		723703	0					
ANR	723908	ArgumentList	"""\\""td %s\\""\\n"""		723703	1					
ANR	723909	Argument	"""\\""td %s\\""\\n"""		723703	0					
ANR	723910	PrimaryExpression	"""\\""td %s\\""\\n"""		723703	0					
ANR	723911	Argument	v		723703	1					
ANR	723912	Identifier	v		723703	0					
ANR	723913	ExpressionStatement	free ( dup )	3689:3:107472:107482	723703	5	True				
ANR	723914	CallExpression	free ( dup )		723703	0					
ANR	723915	Callee	free		723703	0					
ANR	723916	Identifier	free		723703	0					
ANR	723917	ArgumentList	dup		723703	1					
ANR	723918	Argument	dup		723703	0					
ANR	723919	Identifier	dup		723703	0					
ANR	723920	ExpressionStatement	R_FREE ( offset )	3691:2:107490:107505	723703	13	True				
ANR	723921	CallExpression	R_FREE ( offset )		723703	0					
ANR	723922	Callee	R_FREE		723703	0					
ANR	723923	Identifier	R_FREE		723703	0					
ANR	723924	ArgumentList	offset		723703	1					
ANR	723925	Argument	offset		723703	0					
ANR	723926	Identifier	offset		723703	0					
ANR	723927	Statement	ls_foreach	3692:2:107509:107518	723703	14	True				
ANR	723928	Statement	(	3692:13:107520:107520	723703	15	True				
ANR	723929	Statement	ls	3692:14:107521:107522	723703	16	True				
ANR	723930	Statement	","	3692:16:107523:107523	723703	17	True				
ANR	723931	Statement	iter	3692:18:107525:107528	723703	18	True				
ANR	723932	Statement	","	3692:22:107529:107529	723703	19	True				
ANR	723933	Statement	kv	3692:24:107531:107532	723703	20	True				
ANR	723934	Statement	)	3692:26:107533:107533	723703	21	True				
ANR	723935	CompoundStatement		36:3:868:890	723703	22					
ANR	723936	IdentifierDeclStatement	char * k = sdbkv_key ( kv ) ;	3693:3:107540:107564	723703	0	True				
ANR	723937	IdentifierDecl	* k = sdbkv_key ( kv )		723703	0					
ANR	723938	IdentifierDeclType	char *		723703	0					
ANR	723939	Identifier	k		723703	1					
ANR	723940	AssignmentExpression	* k = sdbkv_key ( kv )		723703	2		=			
ANR	723941	Identifier	k		723703	0					
ANR	723942	CallExpression	sdbkv_key ( kv )		723703	1					
ANR	723943	Callee	sdbkv_key		723703	0					
ANR	723944	Identifier	sdbkv_key		723703	0					
ANR	723945	ArgumentList	kv		723703	1					
ANR	723946	Argument	kv		723703	0					
ANR	723947	Identifier	kv		723703	0					
ANR	723948	IdentifierDeclStatement	char * v = sdbkv_value ( kv ) ;	3694:3:107569:107595	723703	1	True				
ANR	723949	IdentifierDecl	* v = sdbkv_value ( kv )		723703	0					
ANR	723950	IdentifierDeclType	char *		723703	0					
ANR	723951	Identifier	v		723703	1					
ANR	723952	AssignmentExpression	* v = sdbkv_value ( kv )		723703	2		=			
ANR	723953	Identifier	v		723703	0					
ANR	723954	CallExpression	sdbkv_value ( kv )		723703	1					
ANR	723955	Callee	sdbkv_value		723703	0					
ANR	723956	Identifier	sdbkv_value		723703	0					
ANR	723957	ArgumentList	kv		723703	1					
ANR	723958	Argument	kv		723703	0					
ANR	723959	Identifier	kv		723703	0					
ANR	723960	IdentifierDeclStatement	char * dup = strdup ( k ) ;	3695:3:107600:107622	723703	2	True				
ANR	723961	IdentifierDecl	* dup = strdup ( k )		723703	0					
ANR	723962	IdentifierDeclType	char *		723703	0					
ANR	723963	Identifier	dup		723703	1					
ANR	723964	AssignmentExpression	* dup = strdup ( k )		723703	2		=			
ANR	723965	Identifier	dup		723703	0					
ANR	723966	CallExpression	strdup ( k )		723703	1					
ANR	723967	Callee	strdup		723703	0					
ANR	723968	Identifier	strdup		723703	0					
ANR	723969	ArgumentList	k		723703	1					
ANR	723970	Argument	k		723703	0					
ANR	723971	Identifier	k		723703	0					
ANR	723972	IfStatement	"if ( ( flagname = strstr ( dup , "".format"" ) ) )"		723703	3					
ANR	723973	Condition	"flagname = strstr ( dup , "".format"" )"	3696:7:107631:107666	723703	0	True				
ANR	723974	AssignmentExpression	"flagname = strstr ( dup , "".format"" )"		723703	0		=			
ANR	723975	Identifier	flagname		723703	0					
ANR	723976	CallExpression	"strstr ( dup , "".format"" )"		723703	1					
ANR	723977	Callee	strstr		723703	0					
ANR	723978	Identifier	strstr		723703	0					
ANR	723979	ArgumentList	dup		723703	1					
ANR	723980	Argument	dup		723703	0					
ANR	723981	Identifier	dup		723703	0					
ANR	723982	Argument	""".format"""		723703	1					
ANR	723983	PrimaryExpression	""".format"""		723703	0					
ANR	723984	CompoundStatement		37:45:937:937	723703	1					
ANR	723985	ExpressionStatement	* flagname = 0	3697:4:107675:107688	723703	0	True				
ANR	723986	AssignmentExpression	* flagname = 0		723703	0		=			
ANR	723987	UnaryOperationExpression	* flagname		723703	0					
ANR	723988	UnaryOperator	*		723703	0					
ANR	723989	Identifier	flagname		723703	1					
ANR	723990	PrimaryExpression	0		723703	1					
ANR	723991	IfStatement	if ( ! offset )		723703	1					
ANR	723992	Condition	! offset	3698:8:107698:107704	723703	0	True				
ANR	723993	UnaryOperationExpression	! offset		723703	0					
ANR	723994	UnaryOperator	!		723703	0					
ANR	723995	Identifier	offset		723703	1					
ANR	723996	CompoundStatement		39:17:975:975	723703	1					
ANR	723997	ExpressionStatement	"offset = strdup ( ""0"" )"	3699:5:107714:107735	723703	0	True				
ANR	723998	AssignmentExpression	"offset = strdup ( ""0"" )"		723703	0		=			
ANR	723999	Identifier	offset		723703	0					
ANR	724000	CallExpression	"strdup ( ""0"" )"		723703	1					
ANR	724001	Callee	strdup		723703	0					
ANR	724002	Identifier	strdup		723703	0					
ANR	724003	ArgumentList	"""0"""		723703	1					
ANR	724004	Argument	"""0"""		723703	0					
ANR	724005	PrimaryExpression	"""0"""		723703	0					
ANR	724006	ExpressionStatement	flagname = dup	3701:4:107747:107761	723703	2	True				
ANR	724007	AssignmentExpression	flagname = dup		723703	0		=			
ANR	724008	Identifier	flagname		723703	0					
ANR	724009	Identifier	dup		723703	1					
ANR	724010	ExpressionStatement	"r_cons_printf ( ""pf.%s %s\\n"" , flagname , v )"	3702:4:107767:107808	723703	3	True				
ANR	724011	CallExpression	"r_cons_printf ( ""pf.%s %s\\n"" , flagname , v )"		723703	0					
ANR	724012	Callee	r_cons_printf		723703	0					
ANR	724013	Identifier	r_cons_printf		723703	0					
ANR	724014	ArgumentList	"""pf.%s %s\\n"""		723703	1					
ANR	724015	Argument	"""pf.%s %s\\n"""		723703	0					
ANR	724016	PrimaryExpression	"""pf.%s %s\\n"""		723703	0					
ANR	724017	Argument	flagname		723703	1					
ANR	724018	Identifier	flagname		723703	0					
ANR	724019	Argument	v		723703	2					
ANR	724020	Identifier	v		723703	0					
ANR	724021	ExpressionStatement	free ( dup )	3704:3:107818:107828	723703	4	True				
ANR	724022	CallExpression	free ( dup )		723703	0					
ANR	724023	Callee	free		723703	0					
ANR	724024	Identifier	free		723703	0					
ANR	724025	ArgumentList	dup		723703	1					
ANR	724026	Argument	dup		723703	0					
ANR	724027	Identifier	dup		723703	0					
ANR	724028	Statement	ls_foreach	3706:2:107836:107845	723703	23	True				
ANR	724029	Statement	(	3706:13:107847:107847	723703	24	True				
ANR	724030	Statement	ls	3706:14:107848:107849	723703	25	True				
ANR	724031	Statement	","	3706:16:107850:107850	723703	26	True				
ANR	724032	Statement	iter	3706:18:107852:107855	723703	27	True				
ANR	724033	Statement	","	3706:22:107856:107856	723703	28	True				
ANR	724034	Statement	kv	3706:24:107858:107859	723703	29	True				
ANR	724035	Statement	)	3706:26:107860:107860	723703	30	True				
ANR	724036	CompoundStatement		50:3:1195:1217	723703	31					
ANR	724037	IdentifierDeclStatement	char * k = sdbkv_key ( kv ) ;	3707:3:107867:107891	723703	0	True				
ANR	724038	IdentifierDecl	* k = sdbkv_key ( kv )		723703	0					
ANR	724039	IdentifierDeclType	char *		723703	0					
ANR	724040	Identifier	k		723703	1					
ANR	724041	AssignmentExpression	* k = sdbkv_key ( kv )		723703	2		=			
ANR	724042	Identifier	k		723703	0					
ANR	724043	CallExpression	sdbkv_key ( kv )		723703	1					
ANR	724044	Callee	sdbkv_key		723703	0					
ANR	724045	Identifier	sdbkv_key		723703	0					
ANR	724046	ArgumentList	kv		723703	1					
ANR	724047	Argument	kv		723703	0					
ANR	724048	Identifier	kv		723703	0					
ANR	724049	IdentifierDeclStatement	char * v = sdbkv_value ( kv ) ;	3708:3:107896:107922	723703	1	True				
ANR	724050	IdentifierDecl	* v = sdbkv_value ( kv )		723703	0					
ANR	724051	IdentifierDeclType	char *		723703	0					
ANR	724052	Identifier	v		723703	1					
ANR	724053	AssignmentExpression	* v = sdbkv_value ( kv )		723703	2		=			
ANR	724054	Identifier	v		723703	0					
ANR	724055	CallExpression	sdbkv_value ( kv )		723703	1					
ANR	724056	Callee	sdbkv_value		723703	0					
ANR	724057	Identifier	sdbkv_value		723703	0					
ANR	724058	ArgumentList	kv		723703	1					
ANR	724059	Argument	kv		723703	0					
ANR	724060	Identifier	kv		723703	0					
ANR	724061	IdentifierDeclStatement	char * dup = strdup ( k ) ;	3709:3:107927:107949	723703	2	True				
ANR	724062	IdentifierDecl	* dup = strdup ( k )		723703	0					
ANR	724063	IdentifierDeclType	char *		723703	0					
ANR	724064	Identifier	dup		723703	1					
ANR	724065	AssignmentExpression	* dup = strdup ( k )		723703	2		=			
ANR	724066	Identifier	dup		723703	0					
ANR	724067	CallExpression	strdup ( k )		723703	1					
ANR	724068	Callee	strdup		723703	0					
ANR	724069	Identifier	strdup		723703	0					
ANR	724070	ArgumentList	k		723703	1					
ANR	724071	Argument	k		723703	0					
ANR	724072	Identifier	k		723703	0					
ANR	724073	IfStatement	"if ( ( flagname = strstr ( dup , "".format"" ) ) )"		723703	3					
ANR	724074	Condition	"flagname = strstr ( dup , "".format"" )"	3710:7:107958:107993	723703	0	True				
ANR	724075	AssignmentExpression	"flagname = strstr ( dup , "".format"" )"		723703	0		=			
ANR	724076	Identifier	flagname		723703	0					
ANR	724077	CallExpression	"strstr ( dup , "".format"" )"		723703	1					
ANR	724078	Callee	strstr		723703	0					
ANR	724079	Identifier	strstr		723703	0					
ANR	724080	ArgumentList	dup		723703	1					
ANR	724081	Argument	dup		723703	0					
ANR	724082	Identifier	dup		723703	0					
ANR	724083	Argument	""".format"""		723703	1					
ANR	724084	PrimaryExpression	""".format"""		723703	0					
ANR	724085	CompoundStatement		59:4:1490:1541	723703	1					
ANR	724086	ExpressionStatement	* flagname = 0	3711:4:108002:108015	723703	0	True				
ANR	724087	AssignmentExpression	* flagname = 0		723703	0		=			
ANR	724088	UnaryOperationExpression	* flagname		723703	0					
ANR	724089	UnaryOperator	*		723703	0					
ANR	724090	Identifier	flagname		723703	1					
ANR	724091	PrimaryExpression	0		723703	1					
ANR	724092	IfStatement	if ( ! offset )		723703	1					
ANR	724093	Condition	! offset	3712:8:108025:108031	723703	0	True				
ANR	724094	UnaryOperationExpression	! offset		723703	0					
ANR	724095	UnaryOperator	!		723703	0					
ANR	724096	Identifier	offset		723703	1					
ANR	724097	CompoundStatement		53:17:1302:1302	723703	1					
ANR	724098	ExpressionStatement	"offset = strdup ( ""0"" )"	3713:5:108041:108062	723703	0	True				
ANR	724099	AssignmentExpression	"offset = strdup ( ""0"" )"		723703	0		=			
ANR	724100	Identifier	offset		723703	0					
ANR	724101	CallExpression	"strdup ( ""0"" )"		723703	1					
ANR	724102	Callee	strdup		723703	0					
ANR	724103	Identifier	strdup		723703	0					
ANR	724104	ArgumentList	"""0"""		723703	1					
ANR	724105	Argument	"""0"""		723703	0					
ANR	724106	PrimaryExpression	"""0"""		723703	0					
ANR	724107	ExpressionStatement	flagname = dup	3715:4:108074:108088	723703	2	True				
ANR	724108	AssignmentExpression	flagname = dup		723703	0		=			
ANR	724109	Identifier	flagname		723703	0					
ANR	724110	Identifier	dup		723703	1					
ANR	724111	IdentifierDeclStatement	"int fmtsize = r_print_format_struct_size ( core -> print , v , 0 , 0 ) ;"	3716:4:108094:108157	723703	3	True				
ANR	724112	IdentifierDecl	"fmtsize = r_print_format_struct_size ( core -> print , v , 0 , 0 )"		723703	0					
ANR	724113	IdentifierDeclType	int		723703	0					
ANR	724114	Identifier	fmtsize		723703	1					
ANR	724115	AssignmentExpression	"fmtsize = r_print_format_struct_size ( core -> print , v , 0 , 0 )"		723703	2		=			
ANR	724116	Identifier	fmtsize		723703	0					
ANR	724117	CallExpression	"r_print_format_struct_size ( core -> print , v , 0 , 0 )"		723703	1					
ANR	724118	Callee	r_print_format_struct_size		723703	0					
ANR	724119	Identifier	r_print_format_struct_size		723703	0					
ANR	724120	ArgumentList	core -> print		723703	1					
ANR	724121	Argument	core -> print		723703	0					
ANR	724122	PtrMemberAccess	core -> print		723703	0					
ANR	724123	Identifier	core		723703	0					
ANR	724124	Identifier	print		723703	1					
ANR	724125	Argument	v		723703	1					
ANR	724126	Identifier	v		723703	0					
ANR	724127	Argument	0		723703	2					
ANR	724128	PrimaryExpression	0		723703	0					
ANR	724129	Argument	0		723703	3					
ANR	724130	PrimaryExpression	0		723703	0					
ANR	724131	IdentifierDeclStatement	"char * offset_key = r_str_newf ( ""%s.offset"" , flagname ) ;"	3717:4:108163:108216	723703	4	True				
ANR	724132	IdentifierDecl	"* offset_key = r_str_newf ( ""%s.offset"" , flagname )"		723703	0					
ANR	724133	IdentifierDeclType	char *		723703	0					
ANR	724134	Identifier	offset_key		723703	1					
ANR	724135	AssignmentExpression	"* offset_key = r_str_newf ( ""%s.offset"" , flagname )"		723703	2		=			
ANR	724136	Identifier	offset_key		723703	0					
ANR	724137	CallExpression	"r_str_newf ( ""%s.offset"" , flagname )"		723703	1					
ANR	724138	Callee	r_str_newf		723703	0					
ANR	724139	Identifier	r_str_newf		723703	0					
ANR	724140	ArgumentList	"""%s.offset"""		723703	1					
ANR	724141	Argument	"""%s.offset"""		723703	0					
ANR	724142	PrimaryExpression	"""%s.offset"""		723703	0					
ANR	724143	Argument	flagname		723703	1					
ANR	724144	Identifier	flagname		723703	0					
ANR	724145	IdentifierDeclStatement	"const char * off = sdb_const_get ( db , offset_key , 0 ) ;"	3718:4:108222:108273	723703	5	True				
ANR	724146	IdentifierDecl	"* off = sdb_const_get ( db , offset_key , 0 )"		723703	0					
ANR	724147	IdentifierDeclType	const char *		723703	0					
ANR	724148	Identifier	off		723703	1					
ANR	724149	AssignmentExpression	"* off = sdb_const_get ( db , offset_key , 0 )"		723703	2		=			
ANR	724150	Identifier	off		723703	0					
ANR	724151	CallExpression	"sdb_const_get ( db , offset_key , 0 )"		723703	1					
ANR	724152	Callee	sdb_const_get		723703	0					
ANR	724153	Identifier	sdb_const_get		723703	0					
ANR	724154	ArgumentList	db		723703	1					
ANR	724155	Argument	db		723703	0					
ANR	724156	Identifier	db		723703	0					
ANR	724157	Argument	offset_key		723703	1					
ANR	724158	Identifier	offset_key		723703	0					
ANR	724159	Argument	0		723703	2					
ANR	724160	PrimaryExpression	0		723703	0					
ANR	724161	ExpressionStatement	free ( offset_key )	3719:4:108279:108296	723703	6	True				
ANR	724162	CallExpression	free ( offset_key )		723703	0					
ANR	724163	Callee	free		723703	0					
ANR	724164	Identifier	free		723703	0					
ANR	724165	ArgumentList	offset_key		723703	1					
ANR	724166	Argument	offset_key		723703	0					
ANR	724167	Identifier	offset_key		723703	0					
ANR	724168	IfStatement	if ( off )		723703	7					
ANR	724169	Condition	off	3720:8:108306:108308	723703	0	True				
ANR	724170	Identifier	off		723703	0					
ANR	724171	CompoundStatement		61:13:1579:1579	723703	1					
ANR	724172	ExpressionStatement	"r_cons_printf ( ""Cf %d %s @ %s\\n"" , fmtsize , v , off )"	3721:5:108318:108368	723703	0	True				
ANR	724173	CallExpression	"r_cons_printf ( ""Cf %d %s @ %s\\n"" , fmtsize , v , off )"		723703	0					
ANR	724174	Callee	r_cons_printf		723703	0					
ANR	724175	Identifier	r_cons_printf		723703	0					
ANR	724176	ArgumentList	"""Cf %d %s @ %s\\n"""		723703	1					
ANR	724177	Argument	"""Cf %d %s @ %s\\n"""		723703	0					
ANR	724178	PrimaryExpression	"""Cf %d %s @ %s\\n"""		723703	0					
ANR	724179	Argument	fmtsize		723703	1					
ANR	724180	Identifier	fmtsize		723703	0					
ANR	724181	Argument	v		723703	2					
ANR	724182	Identifier	v		723703	0					
ANR	724183	Argument	off		723703	3					
ANR	724184	Identifier	off		723703	0					
ANR	724185	IfStatement	"if ( ( flagname = strstr ( dup , "".size"" ) ) )"		723703	4					
ANR	724186	Condition	"flagname = strstr ( dup , "".size"" )"	3724:7:108388:108421	723703	0	True				
ANR	724187	AssignmentExpression	"flagname = strstr ( dup , "".size"" )"		723703	0		=			
ANR	724188	Identifier	flagname		723703	0					
ANR	724189	CallExpression	"strstr ( dup , "".size"" )"		723703	1					
ANR	724190	Callee	strstr		723703	0					
ANR	724191	Identifier	strstr		723703	0					
ANR	724192	ArgumentList	dup		723703	1					
ANR	724193	Argument	dup		723703	0					
ANR	724194	Identifier	dup		723703	0					
ANR	724195	Argument	""".size"""		723703	1					
ANR	724196	PrimaryExpression	""".size"""		723703	0					
ANR	724197	CompoundStatement		65:43:1692:1692	723703	1					
ANR	724198	ExpressionStatement	* flagname = 0	3725:4:108430:108443	723703	0	True				
ANR	724199	AssignmentExpression	* flagname = 0		723703	0		=			
ANR	724200	UnaryOperationExpression	* flagname		723703	0					
ANR	724201	UnaryOperator	*		723703	0					
ANR	724202	Identifier	flagname		723703	1					
ANR	724203	PrimaryExpression	0		723703	1					
ANR	724204	ExpressionStatement	flagname = dup	3726:4:108449:108463	723703	1	True				
ANR	724205	AssignmentExpression	flagname = dup		723703	0		=			
ANR	724206	Identifier	flagname		723703	0					
ANR	724207	Identifier	dup		723703	1					
ANR	724208	ExpressionStatement	"r_cons_printf ( ""fl %s %s\\n"" , flagname , v )"	3727:4:108469:108510	723703	2	True				
ANR	724209	CallExpression	"r_cons_printf ( ""fl %s %s\\n"" , flagname , v )"		723703	0					
ANR	724210	Callee	r_cons_printf		723703	0					
ANR	724211	Identifier	r_cons_printf		723703	0					
ANR	724212	ArgumentList	"""fl %s %s\\n"""		723703	1					
ANR	724213	Argument	"""fl %s %s\\n"""		723703	0					
ANR	724214	PrimaryExpression	"""fl %s %s\\n"""		723703	0					
ANR	724215	Argument	flagname		723703	1					
ANR	724216	Identifier	flagname		723703	0					
ANR	724217	Argument	v		723703	2					
ANR	724218	Identifier	v		723703	0					
ANR	724219	ExpressionStatement	free ( dup )	3729:3:108520:108530	723703	5	True				
ANR	724220	CallExpression	free ( dup )		723703	0					
ANR	724221	Callee	free		723703	0					
ANR	724222	Identifier	free		723703	0					
ANR	724223	ArgumentList	dup		723703	1					
ANR	724224	Argument	dup		723703	0					
ANR	724225	Identifier	dup		723703	0					
ANR	724226	ExpressionStatement	free ( offset )	3731:2:108538:108551	723703	32	True				
ANR	724227	CallExpression	free ( offset )		723703	0					
ANR	724228	Callee	free		723703	0					
ANR	724229	Identifier	free		723703	0					
ANR	724230	ArgumentList	offset		723703	1					
ANR	724231	Argument	offset		723703	0					
ANR	724232	Identifier	offset		723703	0					
ANR	724233	ReturnType	R_API void		723703	1					
ANR	724234	Identifier	r_core_bin_export_info_rad		723703	2					
ANR	724235	ParameterList	RCore * core		723703	3					
ANR	724236	Parameter	RCore * core	3660:38:106718:106728	723703	0	True				
ANR	724237	ParameterType	RCore *		723703	0					
ANR	724238	Identifier	core		723703	1					
ANR	724239	CFGEntryNode	ENTRY		723703		True				
ANR	724240	CFGExitNode	EXIT		723703		True				
ANR	724241	Symbol	bf		723703						
ANR	724242	Symbol	ls		723703						
ANR	724243	Symbol	* core		723703						
ANR	724244	Symbol	r_print_format_struct_size		723703						
ANR	724245	Symbol	flagname		723703						
ANR	724246	Symbol	r_str_newf		723703						
ANR	724247	Symbol	sdb_const_get		723703						
ANR	724248	Symbol	fmtsize		723703						
ANR	724249	Symbol	offset_key		723703						
ANR	724250	Symbol	core -> bin		723703						
ANR	724251	Symbol	NULL		723703						
ANR	724252	Symbol	offset		723703						
ANR	724253	Symbol	sdbkv_key		723703						
ANR	724254	Symbol	r_bin_cur		723703						
ANR	724255	Symbol	false		723703						
ANR	724256	Symbol	* bf		723703						
ANR	724257	Symbol	iter		723703						
ANR	724258	Symbol	sdb_foreach_list		723703						
ANR	724259	Symbol	bf -> sdb		723703						
ANR	724260	Symbol	kv		723703						
ANR	724261	Symbol	k		723703						
ANR	724262	Symbol	sdbkv_value		723703						
ANR	724263	Symbol	off		723703						
ANR	724264	Symbol	core		723703						
ANR	724265	Symbol	strstr		723703						
ANR	724266	Symbol	* flagname		723703						
ANR	724267	Symbol	v		723703						
ANR	724268	Symbol	strdup		723703						
ANR	724269	Symbol	core -> print		723703						
ANR	724270	Symbol	db		723703						
ANR	724271	Symbol	dup		723703						
ANR	724272	Symbol	sdb_ns		723703						
ANR	724273	Function	bin_header	3735:0:108559:108769							
ANR	724274	FunctionDef	"bin_header (RCore * r , int mode)"		724273	0					
ANR	724275	CompoundStatement		3735:42:108601:108769	724273	0					
ANR	724276	IdentifierDeclStatement	RBinFile * cur = r_bin_cur ( r -> bin ) ;	3736:1:108604:108638	724273	0	True				
ANR	724277	IdentifierDecl	* cur = r_bin_cur ( r -> bin )		724273	0					
ANR	724278	IdentifierDeclType	RBinFile *		724273	0					
ANR	724279	Identifier	cur		724273	1					
ANR	724280	AssignmentExpression	* cur = r_bin_cur ( r -> bin )		724273	2		=			
ANR	724281	Identifier	cur		724273	0					
ANR	724282	CallExpression	r_bin_cur ( r -> bin )		724273	1					
ANR	724283	Callee	r_bin_cur		724273	0					
ANR	724284	Identifier	r_bin_cur		724273	0					
ANR	724285	ArgumentList	r -> bin		724273	1					
ANR	724286	Argument	r -> bin		724273	0					
ANR	724287	PtrMemberAccess	r -> bin		724273	0					
ANR	724288	Identifier	r		724273	0					
ANR	724289	Identifier	bin		724273	1					
ANR	724290	IdentifierDeclStatement	RBinPlugin * plg = r_bin_file_cur_plugin ( cur ) ;	3737:1:108641:108686	724273	1	True				
ANR	724291	IdentifierDecl	* plg = r_bin_file_cur_plugin ( cur )		724273	0					
ANR	724292	IdentifierDeclType	RBinPlugin *		724273	0					
ANR	724293	Identifier	plg		724273	1					
ANR	724294	AssignmentExpression	* plg = r_bin_file_cur_plugin ( cur )		724273	2		=			
ANR	724295	Identifier	plg		724273	0					
ANR	724296	CallExpression	r_bin_file_cur_plugin ( cur )		724273	1					
ANR	724297	Callee	r_bin_file_cur_plugin		724273	0					
ANR	724298	Identifier	r_bin_file_cur_plugin		724273	0					
ANR	724299	ArgumentList	cur		724273	1					
ANR	724300	Argument	cur		724273	0					
ANR	724301	Identifier	cur		724273	0					
ANR	724302	IfStatement	if ( plg && plg -> header )		724273	2					
ANR	724303	Condition	plg && plg -> header	3738:5:108693:108710	724273	0	True				
ANR	724304	AndExpression	plg && plg -> header		724273	0		&&			
ANR	724305	Identifier	plg		724273	0					
ANR	724306	PtrMemberAccess	plg -> header		724273	1					
ANR	724307	Identifier	plg		724273	0					
ANR	724308	Identifier	header		724273	1					
ANR	724309	CompoundStatement		4:25:111:111	724273	1					
ANR	724310	ExpressionStatement	plg -> header ( cur )	3739:2:108717:108734	724273	0	True				
ANR	724311	CallExpression	plg -> header ( cur )		724273	0					
ANR	724312	Callee	plg -> header		724273	0					
ANR	724313	PtrMemberAccess	plg -> header		724273	0					
ANR	724314	Identifier	plg		724273	0					
ANR	724315	Identifier	header		724273	1					
ANR	724316	ArgumentList	cur		724273	1					
ANR	724317	Argument	cur		724273	0					
ANR	724318	Identifier	cur		724273	0					
ANR	724319	ReturnStatement	return true ;	3740:2:108738:108749	724273	1	True				
ANR	724320	Identifier	true		724273	0					
ANR	724321	ReturnStatement	return false ;	3742:1:108755:108767	724273	3	True				
ANR	724322	Identifier	false		724273	0					
ANR	724323	ReturnType	static int		724273	1					
ANR	724324	Identifier	bin_header		724273	2					
ANR	724325	ParameterList	"RCore * r , int mode"		724273	3					
ANR	724326	Parameter	RCore * r	3735:22:108581:108588	724273	0	True				
ANR	724327	ParameterType	RCore *		724273	0					
ANR	724328	Identifier	r		724273	1					
ANR	724329	Parameter	int mode	3735:32:108591:108598	724273	1	True				
ANR	724330	ParameterType	int		724273	0					
ANR	724331	Identifier	mode		724273	1					
ANR	724332	CFGEntryNode	ENTRY		724273		True				
ANR	724333	CFGExitNode	EXIT		724273		True				
ANR	724334	Symbol	mode		724273						
ANR	724335	Symbol	cur		724273						
ANR	724336	Symbol	r		724273						
ANR	724337	Symbol	r_bin_file_cur_plugin		724273						
ANR	724338	Symbol	plg -> header		724273						
ANR	724339	Symbol	* plg		724273						
ANR	724340	Symbol	r -> bin		724273						
ANR	724341	Symbol	r_bin_cur		724273						
ANR	724342	Symbol	true		724273						
ANR	724343	Symbol	false		724273						
ANR	724344	Symbol	plg		724273						
ANR	724345	Symbol	* r		724273						
ANR	724346	Function	r_core_bin_info	3745:0:108772:111874							
ANR	724347	FunctionDef	"r_core_bin_info (RCore * core , int action , int mode , int va , RCoreBinFilter * filter , const char * chksum)"		724346	0					
ANR	724348	CompoundStatement		3745:113:108885:111874	724346	0					
ANR	724349	IdentifierDeclStatement	int ret = true ;	3746:1:108888:108902	724346	0	True				
ANR	724350	IdentifierDecl	ret = true		724346	0					
ANR	724351	IdentifierDeclType	int		724346	0					
ANR	724352	Identifier	ret		724346	1					
ANR	724353	AssignmentExpression	ret = true		724346	2		=			
ANR	724354	Identifier	true		724346	0					
ANR	724355	Identifier	true		724346	1					
ANR	724356	IdentifierDeclStatement	const char * name = NULL ;	3747:1:108905:108928	724346	1	True				
ANR	724357	IdentifierDecl	* name = NULL		724346	0					
ANR	724358	IdentifierDeclType	const char *		724346	0					
ANR	724359	Identifier	name		724346	1					
ANR	724360	AssignmentExpression	* name = NULL		724346	2		=			
ANR	724361	Identifier	NULL		724346	0					
ANR	724362	Identifier	NULL		724346	1					
ANR	724363	IdentifierDeclStatement	"ut64 at = 0 , loadaddr = r_bin_get_laddr ( core -> bin ) ;"	3748:1:108931:108982	724346	2	True				
ANR	724364	IdentifierDecl	at = 0		724346	0					
ANR	724365	IdentifierDeclType	ut64		724346	0					
ANR	724366	Identifier	at		724346	1					
ANR	724367	AssignmentExpression	at = 0		724346	2		=			
ANR	724368	Identifier	at		724346	0					
ANR	724369	PrimaryExpression	0		724346	1					
ANR	724370	IdentifierDecl	loadaddr = r_bin_get_laddr ( core -> bin )		724346	1					
ANR	724371	IdentifierDeclType	ut64		724346	0					
ANR	724372	Identifier	loadaddr		724346	1					
ANR	724373	AssignmentExpression	loadaddr = r_bin_get_laddr ( core -> bin )		724346	2		=			
ANR	724374	Identifier	loadaddr		724346	0					
ANR	724375	CallExpression	r_bin_get_laddr ( core -> bin )		724346	1					
ANR	724376	Callee	r_bin_get_laddr		724346	0					
ANR	724377	Identifier	r_bin_get_laddr		724346	0					
ANR	724378	ArgumentList	core -> bin		724346	1					
ANR	724379	Argument	core -> bin		724346	0					
ANR	724380	PtrMemberAccess	core -> bin		724346	0					
ANR	724381	Identifier	core		724346	0					
ANR	724382	Identifier	bin		724346	1					
ANR	724383	IfStatement	if ( filter && filter -> offset )		724346	3					
ANR	724384	Condition	filter && filter -> offset	3749:5:108989:109012	724346	0	True				
ANR	724385	AndExpression	filter && filter -> offset		724346	0		&&			
ANR	724386	Identifier	filter		724346	0					
ANR	724387	PtrMemberAccess	filter -> offset		724346	1					
ANR	724388	Identifier	filter		724346	0					
ANR	724389	Identifier	offset		724346	1					
ANR	724390	CompoundStatement		5:31:129:129	724346	1					
ANR	724391	ExpressionStatement	at = filter -> offset	3750:2:109019:109038	724346	0	True				
ANR	724392	AssignmentExpression	at = filter -> offset		724346	0		=			
ANR	724393	Identifier	at		724346	0					
ANR	724394	PtrMemberAccess	filter -> offset		724346	1					
ANR	724395	Identifier	filter		724346	0					
ANR	724396	Identifier	offset		724346	1					
ANR	724397	IfStatement	if ( filter && filter -> name )		724346	4					
ANR	724398	Condition	filter && filter -> name	3752:5:109048:109069	724346	0	True				
ANR	724399	AndExpression	filter && filter -> name		724346	0		&&			
ANR	724400	Identifier	filter		724346	0					
ANR	724401	PtrMemberAccess	filter -> name		724346	1					
ANR	724402	Identifier	filter		724346	0					
ANR	724403	Identifier	name		724346	1					
ANR	724404	CompoundStatement		8:29:186:186	724346	1					
ANR	724405	ExpressionStatement	name = filter -> name	3753:2:109076:109095	724346	0	True				
ANR	724406	AssignmentExpression	name = filter -> name		724346	0		=			
ANR	724407	Identifier	name		724346	0					
ANR	724408	PtrMemberAccess	filter -> name		724346	1					
ANR	724409	Identifier	filter		724346	0					
ANR	724410	Identifier	name		724346	1					
ANR	724411	ExpressionStatement	va = va ? VA_TRUE : VA_FALSE	3757:1:109137:109165	724346	5	True				
ANR	724412	AssignmentExpression	va = va ? VA_TRUE : VA_FALSE		724346	0		=			
ANR	724413	Identifier	va		724346	0					
ANR	724414	ConditionalExpression	va ? VA_TRUE : VA_FALSE		724346	1					
ANR	724415	Condition	va		724346	0					
ANR	724416	Identifier	va		724346	0					
ANR	724417	Identifier	VA_TRUE		724346	1					
ANR	724418	Identifier	VA_FALSE		724346	2					
ANR	724419	IfStatement	"if ( r_config_get_i ( core -> config , ""anal.strings"" ) )"		724346	6					
ANR	724420	Condition	"r_config_get_i ( core -> config , ""anal.strings"" )"	3759:5:109178:109222	724346	0	True				
ANR	724421	CallExpression	"r_config_get_i ( core -> config , ""anal.strings"" )"		724346	0					
ANR	724422	Callee	r_config_get_i		724346	0					
ANR	724423	Identifier	r_config_get_i		724346	0					
ANR	724424	ArgumentList	core -> config		724346	1					
ANR	724425	Argument	core -> config		724346	0					
ANR	724426	PtrMemberAccess	core -> config		724346	0					
ANR	724427	Identifier	core		724346	0					
ANR	724428	Identifier	config		724346	1					
ANR	724429	Argument	"""anal.strings"""		724346	1					
ANR	724430	PrimaryExpression	"""anal.strings"""		724346	0					
ANR	724431	CompoundStatement		15:52:339:339	724346	1					
ANR	724432	ExpressionStatement	"r_core_cmd0 ( core , ""aar"" )"	3760:2:109229:109254	724346	0	True				
ANR	724433	CallExpression	"r_core_cmd0 ( core , ""aar"" )"		724346	0					
ANR	724434	Callee	r_core_cmd0		724346	0					
ANR	724435	Identifier	r_core_cmd0		724346	0					
ANR	724436	ArgumentList	core		724346	1					
ANR	724437	Argument	core		724346	0					
ANR	724438	Identifier	core		724346	0					
ANR	724439	Argument	"""aar"""		724346	1					
ANR	724440	PrimaryExpression	"""aar"""		724346	0					
ANR	724441	IfStatement	if ( ( action & R_CORE_BIN_ACC_STRINGS ) )		724346	7					
ANR	724442	Condition	action & R_CORE_BIN_ACC_STRINGS	3763:5:109271:109303	724346	0	True				
ANR	724443	BitAndExpression	action & R_CORE_BIN_ACC_STRINGS		724346	0		&			
ANR	724444	Identifier	action		724346	0					
ANR	724445	Identifier	R_CORE_BIN_ACC_STRINGS		724346	1					
ANR	724446	CompoundStatement		19:40:420:420	724346	1					
ANR	724447	ExpressionStatement	"ret &= bin_strings ( core , mode , va )"	3764:2:109310:109345	724346	0	True				
ANR	724448	AssignmentExpression	"ret &= bin_strings ( core , mode , va )"		724346	0		&=			
ANR	724449	Identifier	ret		724346	0					
ANR	724450	CallExpression	"bin_strings ( core , mode , va )"		724346	1					
ANR	724451	Callee	bin_strings		724346	0					
ANR	724452	Identifier	bin_strings		724346	0					
ANR	724453	ArgumentList	core		724346	1					
ANR	724454	Argument	core		724346	0					
ANR	724455	Identifier	core		724346	0					
ANR	724456	Argument	mode		724346	1					
ANR	724457	Identifier	mode		724346	0					
ANR	724458	Argument	va		724346	2					
ANR	724459	Identifier	va		724346	0					
ANR	724460	IfStatement	if ( ( action & R_CORE_BIN_ACC_RAW_STRINGS ) )		724346	8					
ANR	724461	Condition	action & R_CORE_BIN_ACC_RAW_STRINGS	3766:5:109355:109391	724346	0	True				
ANR	724462	BitAndExpression	action & R_CORE_BIN_ACC_RAW_STRINGS		724346	0		&			
ANR	724463	Identifier	action		724346	0					
ANR	724464	Identifier	R_CORE_BIN_ACC_RAW_STRINGS		724346	1					
ANR	724465	CompoundStatement		22:44:508:508	724346	1					
ANR	724466	ExpressionStatement	"ret &= bin_raw_strings ( core , mode , va )"	3767:2:109398:109437	724346	0	True				
ANR	724467	AssignmentExpression	"ret &= bin_raw_strings ( core , mode , va )"		724346	0		&=			
ANR	724468	Identifier	ret		724346	0					
ANR	724469	CallExpression	"bin_raw_strings ( core , mode , va )"		724346	1					
ANR	724470	Callee	bin_raw_strings		724346	0					
ANR	724471	Identifier	bin_raw_strings		724346	0					
ANR	724472	ArgumentList	core		724346	1					
ANR	724473	Argument	core		724346	0					
ANR	724474	Identifier	core		724346	0					
ANR	724475	Argument	mode		724346	1					
ANR	724476	Identifier	mode		724346	0					
ANR	724477	Argument	va		724346	2					
ANR	724478	Identifier	va		724346	0					
ANR	724479	IfStatement	if ( ( action & R_CORE_BIN_ACC_INFO ) )		724346	9					
ANR	724480	Condition	action & R_CORE_BIN_ACC_INFO	3769:5:109447:109476	724346	0	True				
ANR	724481	BitAndExpression	action & R_CORE_BIN_ACC_INFO		724346	0		&			
ANR	724482	Identifier	action		724346	0					
ANR	724483	Identifier	R_CORE_BIN_ACC_INFO		724346	1					
ANR	724484	CompoundStatement		25:37:593:593	724346	1					
ANR	724485	ExpressionStatement	"ret &= bin_info ( core , mode , loadaddr )"	3770:2:109483:109521	724346	0	True				
ANR	724486	AssignmentExpression	"ret &= bin_info ( core , mode , loadaddr )"		724346	0		&=			
ANR	724487	Identifier	ret		724346	0					
ANR	724488	CallExpression	"bin_info ( core , mode , loadaddr )"		724346	1					
ANR	724489	Callee	bin_info		724346	0					
ANR	724490	Identifier	bin_info		724346	0					
ANR	724491	ArgumentList	core		724346	1					
ANR	724492	Argument	core		724346	0					
ANR	724493	Identifier	core		724346	0					
ANR	724494	Argument	mode		724346	1					
ANR	724495	Identifier	mode		724346	0					
ANR	724496	Argument	loadaddr		724346	2					
ANR	724497	Identifier	loadaddr		724346	0					
ANR	724498	IfStatement	if ( ( action & R_CORE_BIN_ACC_MAIN ) )		724346	10					
ANR	724499	Condition	action & R_CORE_BIN_ACC_MAIN	3772:5:109531:109560	724346	0	True				
ANR	724500	BitAndExpression	action & R_CORE_BIN_ACC_MAIN		724346	0		&			
ANR	724501	Identifier	action		724346	0					
ANR	724502	Identifier	R_CORE_BIN_ACC_MAIN		724346	1					
ANR	724503	CompoundStatement		28:37:677:677	724346	1					
ANR	724504	ExpressionStatement	"ret &= bin_main ( core , mode , va )"	3773:2:109567:109599	724346	0	True				
ANR	724505	AssignmentExpression	"ret &= bin_main ( core , mode , va )"		724346	0		&=			
ANR	724506	Identifier	ret		724346	0					
ANR	724507	CallExpression	"bin_main ( core , mode , va )"		724346	1					
ANR	724508	Callee	bin_main		724346	0					
ANR	724509	Identifier	bin_main		724346	0					
ANR	724510	ArgumentList	core		724346	1					
ANR	724511	Argument	core		724346	0					
ANR	724512	Identifier	core		724346	0					
ANR	724513	Argument	mode		724346	1					
ANR	724514	Identifier	mode		724346	0					
ANR	724515	Argument	va		724346	2					
ANR	724516	Identifier	va		724346	0					
ANR	724517	IfStatement	if ( ( action & R_CORE_BIN_ACC_DWARF ) )		724346	11					
ANR	724518	Condition	action & R_CORE_BIN_ACC_DWARF	3775:5:109609:109639	724346	0	True				
ANR	724519	BitAndExpression	action & R_CORE_BIN_ACC_DWARF		724346	0		&			
ANR	724520	Identifier	action		724346	0					
ANR	724521	Identifier	R_CORE_BIN_ACC_DWARF		724346	1					
ANR	724522	CompoundStatement		31:38:756:756	724346	1					
ANR	724523	ExpressionStatement	"ret &= bin_dwarf ( core , mode )"	3776:2:109646:109675	724346	0	True				
ANR	724524	AssignmentExpression	"ret &= bin_dwarf ( core , mode )"		724346	0		&=			
ANR	724525	Identifier	ret		724346	0					
ANR	724526	CallExpression	"bin_dwarf ( core , mode )"		724346	1					
ANR	724527	Callee	bin_dwarf		724346	0					
ANR	724528	Identifier	bin_dwarf		724346	0					
ANR	724529	ArgumentList	core		724346	1					
ANR	724530	Argument	core		724346	0					
ANR	724531	Identifier	core		724346	0					
ANR	724532	Argument	mode		724346	1					
ANR	724533	Identifier	mode		724346	0					
ANR	724534	IfStatement	if ( ( action & R_CORE_BIN_ACC_PDB ) )		724346	12					
ANR	724535	Condition	action & R_CORE_BIN_ACC_PDB	3778:5:109685:109713	724346	0	True				
ANR	724536	BitAndExpression	action & R_CORE_BIN_ACC_PDB		724346	0		&			
ANR	724537	Identifier	action		724346	0					
ANR	724538	Identifier	R_CORE_BIN_ACC_PDB		724346	1					
ANR	724539	CompoundStatement		34:36:830:830	724346	1					
ANR	724540	ExpressionStatement	"ret &= bin_pdb ( core , mode )"	3779:2:109720:109747	724346	0	True				
ANR	724541	AssignmentExpression	"ret &= bin_pdb ( core , mode )"		724346	0		&=			
ANR	724542	Identifier	ret		724346	0					
ANR	724543	CallExpression	"bin_pdb ( core , mode )"		724346	1					
ANR	724544	Callee	bin_pdb		724346	0					
ANR	724545	Identifier	bin_pdb		724346	0					
ANR	724546	ArgumentList	core		724346	1					
ANR	724547	Argument	core		724346	0					
ANR	724548	Identifier	core		724346	0					
ANR	724549	Argument	mode		724346	1					
ANR	724550	Identifier	mode		724346	0					
ANR	724551	IfStatement	if ( ( action & R_CORE_BIN_ACC_SOURCE ) )		724346	13					
ANR	724552	Condition	action & R_CORE_BIN_ACC_SOURCE	3781:5:109757:109788	724346	0	True				
ANR	724553	BitAndExpression	action & R_CORE_BIN_ACC_SOURCE		724346	0		&			
ANR	724554	Identifier	action		724346	0					
ANR	724555	Identifier	R_CORE_BIN_ACC_SOURCE		724346	1					
ANR	724556	CompoundStatement		37:39:905:905	724346	1					
ANR	724557	ExpressionStatement	"ret &= bin_source ( core , mode )"	3782:2:109795:109825	724346	0	True				
ANR	724558	AssignmentExpression	"ret &= bin_source ( core , mode )"		724346	0		&=			
ANR	724559	Identifier	ret		724346	0					
ANR	724560	CallExpression	"bin_source ( core , mode )"		724346	1					
ANR	724561	Callee	bin_source		724346	0					
ANR	724562	Identifier	bin_source		724346	0					
ANR	724563	ArgumentList	core		724346	1					
ANR	724564	Argument	core		724346	0					
ANR	724565	Identifier	core		724346	0					
ANR	724566	Argument	mode		724346	1					
ANR	724567	Identifier	mode		724346	0					
ANR	724568	IfStatement	if ( ( action & R_CORE_BIN_ACC_ENTRIES ) )		724346	14					
ANR	724569	Condition	action & R_CORE_BIN_ACC_ENTRIES	3784:5:109835:109867	724346	0	True				
ANR	724570	BitAndExpression	action & R_CORE_BIN_ACC_ENTRIES		724346	0		&			
ANR	724571	Identifier	action		724346	0					
ANR	724572	Identifier	R_CORE_BIN_ACC_ENTRIES		724346	1					
ANR	724573	CompoundStatement		40:40:984:984	724346	1					
ANR	724574	ExpressionStatement	"ret &= bin_entry ( core , mode , loadaddr , va , false )"	3785:2:109874:109924	724346	0	True				
ANR	724575	AssignmentExpression	"ret &= bin_entry ( core , mode , loadaddr , va , false )"		724346	0		&=			
ANR	724576	Identifier	ret		724346	0					
ANR	724577	CallExpression	"bin_entry ( core , mode , loadaddr , va , false )"		724346	1					
ANR	724578	Callee	bin_entry		724346	0					
ANR	724579	Identifier	bin_entry		724346	0					
ANR	724580	ArgumentList	core		724346	1					
ANR	724581	Argument	core		724346	0					
ANR	724582	Identifier	core		724346	0					
ANR	724583	Argument	mode		724346	1					
ANR	724584	Identifier	mode		724346	0					
ANR	724585	Argument	loadaddr		724346	2					
ANR	724586	Identifier	loadaddr		724346	0					
ANR	724587	Argument	va		724346	3					
ANR	724588	Identifier	va		724346	0					
ANR	724589	Argument	false		724346	4					
ANR	724590	Identifier	false		724346	0					
ANR	724591	IfStatement	if ( ( action & R_CORE_BIN_ACC_INITFINI ) )		724346	15					
ANR	724592	Condition	action & R_CORE_BIN_ACC_INITFINI	3787:5:109934:109967	724346	0	True				
ANR	724593	BitAndExpression	action & R_CORE_BIN_ACC_INITFINI		724346	0		&			
ANR	724594	Identifier	action		724346	0					
ANR	724595	Identifier	R_CORE_BIN_ACC_INITFINI		724346	1					
ANR	724596	CompoundStatement		43:41:1084:1084	724346	1					
ANR	724597	ExpressionStatement	"ret &= bin_entry ( core , mode , loadaddr , va , true )"	3788:2:109974:110023	724346	0	True				
ANR	724598	AssignmentExpression	"ret &= bin_entry ( core , mode , loadaddr , va , true )"		724346	0		&=			
ANR	724599	Identifier	ret		724346	0					
ANR	724600	CallExpression	"bin_entry ( core , mode , loadaddr , va , true )"		724346	1					
ANR	724601	Callee	bin_entry		724346	0					
ANR	724602	Identifier	bin_entry		724346	0					
ANR	724603	ArgumentList	core		724346	1					
ANR	724604	Argument	core		724346	0					
ANR	724605	Identifier	core		724346	0					
ANR	724606	Argument	mode		724346	1					
ANR	724607	Identifier	mode		724346	0					
ANR	724608	Argument	loadaddr		724346	2					
ANR	724609	Identifier	loadaddr		724346	0					
ANR	724610	Argument	va		724346	3					
ANR	724611	Identifier	va		724346	0					
ANR	724612	Argument	true		724346	4					
ANR	724613	Identifier	true		724346	0					
ANR	724614	IfStatement	if ( ( action & R_CORE_BIN_ACC_SECTIONS ) )		724346	16					
ANR	724615	Condition	action & R_CORE_BIN_ACC_SECTIONS	3790:5:110033:110066	724346	0	True				
ANR	724616	BitAndExpression	action & R_CORE_BIN_ACC_SECTIONS		724346	0		&			
ANR	724617	Identifier	action		724346	0					
ANR	724618	Identifier	R_CORE_BIN_ACC_SECTIONS		724346	1					
ANR	724619	CompoundStatement		46:41:1183:1183	724346	1					
ANR	724620	ExpressionStatement	"ret &= bin_sections ( core , mode , loadaddr , va , at , name , chksum , false )"	3791:2:110073:110144	724346	0	True				
ANR	724621	AssignmentExpression	"ret &= bin_sections ( core , mode , loadaddr , va , at , name , chksum , false )"		724346	0		&=			
ANR	724622	Identifier	ret		724346	0					
ANR	724623	CallExpression	"bin_sections ( core , mode , loadaddr , va , at , name , chksum , false )"		724346	1					
ANR	724624	Callee	bin_sections		724346	0					
ANR	724625	Identifier	bin_sections		724346	0					
ANR	724626	ArgumentList	core		724346	1					
ANR	724627	Argument	core		724346	0					
ANR	724628	Identifier	core		724346	0					
ANR	724629	Argument	mode		724346	1					
ANR	724630	Identifier	mode		724346	0					
ANR	724631	Argument	loadaddr		724346	2					
ANR	724632	Identifier	loadaddr		724346	0					
ANR	724633	Argument	va		724346	3					
ANR	724634	Identifier	va		724346	0					
ANR	724635	Argument	at		724346	4					
ANR	724636	Identifier	at		724346	0					
ANR	724637	Argument	name		724346	5					
ANR	724638	Identifier	name		724346	0					
ANR	724639	Argument	chksum		724346	6					
ANR	724640	Identifier	chksum		724346	0					
ANR	724641	Argument	false		724346	7					
ANR	724642	Identifier	false		724346	0					
ANR	724643	IfStatement	if ( ( action & R_CORE_BIN_ACC_SEGMENTS ) )		724346	17					
ANR	724644	Condition	action & R_CORE_BIN_ACC_SEGMENTS	3793:5:110154:110187	724346	0	True				
ANR	724645	BitAndExpression	action & R_CORE_BIN_ACC_SEGMENTS		724346	0		&			
ANR	724646	Identifier	action		724346	0					
ANR	724647	Identifier	R_CORE_BIN_ACC_SEGMENTS		724346	1					
ANR	724648	CompoundStatement		49:41:1304:1304	724346	1					
ANR	724649	ExpressionStatement	"ret &= bin_sections ( core , mode , loadaddr , va , at , name , chksum , true )"	3794:2:110194:110264	724346	0	True				
ANR	724650	AssignmentExpression	"ret &= bin_sections ( core , mode , loadaddr , va , at , name , chksum , true )"		724346	0		&=			
ANR	724651	Identifier	ret		724346	0					
ANR	724652	CallExpression	"bin_sections ( core , mode , loadaddr , va , at , name , chksum , true )"		724346	1					
ANR	724653	Callee	bin_sections		724346	0					
ANR	724654	Identifier	bin_sections		724346	0					
ANR	724655	ArgumentList	core		724346	1					
ANR	724656	Argument	core		724346	0					
ANR	724657	Identifier	core		724346	0					
ANR	724658	Argument	mode		724346	1					
ANR	724659	Identifier	mode		724346	0					
ANR	724660	Argument	loadaddr		724346	2					
ANR	724661	Identifier	loadaddr		724346	0					
ANR	724662	Argument	va		724346	3					
ANR	724663	Identifier	va		724346	0					
ANR	724664	Argument	at		724346	4					
ANR	724665	Identifier	at		724346	0					
ANR	724666	Argument	name		724346	5					
ANR	724667	Identifier	name		724346	0					
ANR	724668	Argument	chksum		724346	6					
ANR	724669	Identifier	chksum		724346	0					
ANR	724670	Argument	true		724346	7					
ANR	724671	Identifier	true		724346	0					
ANR	724672	IfStatement	"if ( r_config_get_i ( core -> config , ""bin.relocs"" ) )"		724346	18					
ANR	724673	Condition	"r_config_get_i ( core -> config , ""bin.relocs"" )"	3796:5:110274:110316	724346	0	True				
ANR	724674	CallExpression	"r_config_get_i ( core -> config , ""bin.relocs"" )"		724346	0					
ANR	724675	Callee	r_config_get_i		724346	0					
ANR	724676	Identifier	r_config_get_i		724346	0					
ANR	724677	ArgumentList	core -> config		724346	1					
ANR	724678	Argument	core -> config		724346	0					
ANR	724679	PtrMemberAccess	core -> config		724346	0					
ANR	724680	Identifier	core		724346	0					
ANR	724681	Identifier	config		724346	1					
ANR	724682	Argument	"""bin.relocs"""		724346	1					
ANR	724683	PrimaryExpression	"""bin.relocs"""		724346	0					
ANR	724684	CompoundStatement		52:50:1433:1433	724346	1					
ANR	724685	IfStatement	if ( ( action & R_CORE_BIN_ACC_RELOCS ) )		724346	0					
ANR	724686	Condition	action & R_CORE_BIN_ACC_RELOCS	3797:6:110327:110358	724346	0	True				
ANR	724687	BitAndExpression	action & R_CORE_BIN_ACC_RELOCS		724346	0		&			
ANR	724688	Identifier	action		724346	0					
ANR	724689	Identifier	R_CORE_BIN_ACC_RELOCS		724346	1					
ANR	724690	CompoundStatement		53:40:1475:1475	724346	1					
ANR	724691	ExpressionStatement	"ret &= bin_relocs ( core , mode , va )"	3798:3:110366:110400	724346	0	True				
ANR	724692	AssignmentExpression	"ret &= bin_relocs ( core , mode , va )"		724346	0		&=			
ANR	724693	Identifier	ret		724346	0					
ANR	724694	CallExpression	"bin_relocs ( core , mode , va )"		724346	1					
ANR	724695	Callee	bin_relocs		724346	0					
ANR	724696	Identifier	bin_relocs		724346	0					
ANR	724697	ArgumentList	core		724346	1					
ANR	724698	Argument	core		724346	0					
ANR	724699	Identifier	core		724346	0					
ANR	724700	Argument	mode		724346	1					
ANR	724701	Identifier	mode		724346	0					
ANR	724702	Argument	va		724346	2					
ANR	724703	Identifier	va		724346	0					
ANR	724704	IfStatement	if ( ( action & R_CORE_BIN_ACC_LIBS ) )		724346	19					
ANR	724705	Condition	action & R_CORE_BIN_ACC_LIBS	3801:5:110414:110443	724346	0	True				
ANR	724706	BitAndExpression	action & R_CORE_BIN_ACC_LIBS		724346	0		&			
ANR	724707	Identifier	action		724346	0					
ANR	724708	Identifier	R_CORE_BIN_ACC_LIBS		724346	1					
ANR	724709	CompoundStatement		57:37:1560:1560	724346	1					
ANR	724710	ExpressionStatement	"ret &= bin_libs ( core , mode )"	3802:2:110450:110478	724346	0	True				
ANR	724711	AssignmentExpression	"ret &= bin_libs ( core , mode )"		724346	0		&=			
ANR	724712	Identifier	ret		724346	0					
ANR	724713	CallExpression	"bin_libs ( core , mode )"		724346	1					
ANR	724714	Callee	bin_libs		724346	0					
ANR	724715	Identifier	bin_libs		724346	0					
ANR	724716	ArgumentList	core		724346	1					
ANR	724717	Argument	core		724346	0					
ANR	724718	Identifier	core		724346	0					
ANR	724719	Argument	mode		724346	1					
ANR	724720	Identifier	mode		724346	0					
ANR	724721	IfStatement	if ( ( action & R_CORE_BIN_ACC_IMPORTS ) )		724346	20					
ANR	724722	Condition	action & R_CORE_BIN_ACC_IMPORTS	3804:5:110488:110520	724346	0	True				
ANR	724723	BitAndExpression	action & R_CORE_BIN_ACC_IMPORTS		724346	0		&			
ANR	724724	Identifier	action		724346	0					
ANR	724725	Identifier	R_CORE_BIN_ACC_IMPORTS		724346	1					
ANR	724726	CompoundStatement		60:40:1637:1637	724346	1					
ANR	724727	ExpressionStatement	"ret &= bin_imports ( core , mode , va , name )"	3805:2:110533:110574	724346	0	True				
ANR	724728	AssignmentExpression	"ret &= bin_imports ( core , mode , va , name )"		724346	0		&=			
ANR	724729	Identifier	ret		724346	0					
ANR	724730	CallExpression	"bin_imports ( core , mode , va , name )"		724346	1					
ANR	724731	Callee	bin_imports		724346	0					
ANR	724732	Identifier	bin_imports		724346	0					
ANR	724733	ArgumentList	core		724346	1					
ANR	724734	Argument	core		724346	0					
ANR	724735	Identifier	core		724346	0					
ANR	724736	Argument	mode		724346	1					
ANR	724737	Identifier	mode		724346	0					
ANR	724738	Argument	va		724346	2					
ANR	724739	Identifier	va		724346	0					
ANR	724740	Argument	name		724346	3					
ANR	724741	Identifier	name		724346	0					
ANR	724742	IfStatement	if ( ( action & R_CORE_BIN_ACC_EXPORTS ) )		724346	21					
ANR	724743	Condition	action & R_CORE_BIN_ACC_EXPORTS	3807:5:110584:110616	724346	0	True				
ANR	724744	BitAndExpression	action & R_CORE_BIN_ACC_EXPORTS		724346	0		&			
ANR	724745	Identifier	action		724346	0					
ANR	724746	Identifier	R_CORE_BIN_ACC_EXPORTS		724346	1					
ANR	724747	CompoundStatement		63:40:1733:1733	724346	1					
ANR	724748	ExpressionStatement	"ret &= bin_symbols ( core , mode , loadaddr , va , at , name , true , chksum )"	3808:2:110623:110692	724346	0	True				
ANR	724749	AssignmentExpression	"ret &= bin_symbols ( core , mode , loadaddr , va , at , name , true , chksum )"		724346	0		&=			
ANR	724750	Identifier	ret		724346	0					
ANR	724751	CallExpression	"bin_symbols ( core , mode , loadaddr , va , at , name , true , chksum )"		724346	1					
ANR	724752	Callee	bin_symbols		724346	0					
ANR	724753	Identifier	bin_symbols		724346	0					
ANR	724754	ArgumentList	core		724346	1					
ANR	724755	Argument	core		724346	0					
ANR	724756	Identifier	core		724346	0					
ANR	724757	Argument	mode		724346	1					
ANR	724758	Identifier	mode		724346	0					
ANR	724759	Argument	loadaddr		724346	2					
ANR	724760	Identifier	loadaddr		724346	0					
ANR	724761	Argument	va		724346	3					
ANR	724762	Identifier	va		724346	0					
ANR	724763	Argument	at		724346	4					
ANR	724764	Identifier	at		724346	0					
ANR	724765	Argument	name		724346	5					
ANR	724766	Identifier	name		724346	0					
ANR	724767	Argument	true		724346	6					
ANR	724768	Identifier	true		724346	0					
ANR	724769	Argument	chksum		724346	7					
ANR	724770	Identifier	chksum		724346	0					
ANR	724771	IfStatement	if ( ( action & R_CORE_BIN_ACC_SYMBOLS ) )		724346	22					
ANR	724772	Condition	action & R_CORE_BIN_ACC_SYMBOLS	3810:5:110702:110734	724346	0	True				
ANR	724773	BitAndExpression	action & R_CORE_BIN_ACC_SYMBOLS		724346	0		&			
ANR	724774	Identifier	action		724346	0					
ANR	724775	Identifier	R_CORE_BIN_ACC_SYMBOLS		724346	1					
ANR	724776	CompoundStatement		66:40:1851:1851	724346	1					
ANR	724777	ExpressionStatement	"ret &= bin_symbols ( core , mode , loadaddr , va , at , name , false , chksum )"	3811:2:110747:110817	724346	0	True				
ANR	724778	AssignmentExpression	"ret &= bin_symbols ( core , mode , loadaddr , va , at , name , false , chksum )"		724346	0		&=			
ANR	724779	Identifier	ret		724346	0					
ANR	724780	CallExpression	"bin_symbols ( core , mode , loadaddr , va , at , name , false , chksum )"		724346	1					
ANR	724781	Callee	bin_symbols		724346	0					
ANR	724782	Identifier	bin_symbols		724346	0					
ANR	724783	ArgumentList	core		724346	1					
ANR	724784	Argument	core		724346	0					
ANR	724785	Identifier	core		724346	0					
ANR	724786	Argument	mode		724346	1					
ANR	724787	Identifier	mode		724346	0					
ANR	724788	Argument	loadaddr		724346	2					
ANR	724789	Identifier	loadaddr		724346	0					
ANR	724790	Argument	va		724346	3					
ANR	724791	Identifier	va		724346	0					
ANR	724792	Argument	at		724346	4					
ANR	724793	Identifier	at		724346	0					
ANR	724794	Argument	name		724346	5					
ANR	724795	Identifier	name		724346	0					
ANR	724796	Argument	false		724346	6					
ANR	724797	Identifier	false		724346	0					
ANR	724798	Argument	chksum		724346	7					
ANR	724799	Identifier	chksum		724346	0					
ANR	724800	IfStatement	if ( ( action & R_CORE_BIN_ACC_CLASSES ) )		724346	23					
ANR	724801	Condition	action & R_CORE_BIN_ACC_CLASSES	3813:5:110827:110859	724346	0	True				
ANR	724802	BitAndExpression	action & R_CORE_BIN_ACC_CLASSES		724346	0		&			
ANR	724803	Identifier	action		724346	0					
ANR	724804	Identifier	R_CORE_BIN_ACC_CLASSES		724346	1					
ANR	724805	CompoundStatement		69:40:1976:1976	724346	1					
ANR	724806	ExpressionStatement	"ret &= bin_classes ( core , mode )"	3814:2:110872:110903	724346	0	True				
ANR	724807	AssignmentExpression	"ret &= bin_classes ( core , mode )"		724346	0		&=			
ANR	724808	Identifier	ret		724346	0					
ANR	724809	CallExpression	"bin_classes ( core , mode )"		724346	1					
ANR	724810	Callee	bin_classes		724346	0					
ANR	724811	Identifier	bin_classes		724346	0					
ANR	724812	ArgumentList	core		724346	1					
ANR	724813	Argument	core		724346	0					
ANR	724814	Identifier	core		724346	0					
ANR	724815	Argument	mode		724346	1					
ANR	724816	Identifier	mode		724346	0					
ANR	724817	IfStatement	if ( ( action & R_CORE_BIN_ACC_TRYCATCH ) )		724346	24					
ANR	724818	Condition	action & R_CORE_BIN_ACC_TRYCATCH	3816:5:110913:110946	724346	0	True				
ANR	724819	BitAndExpression	action & R_CORE_BIN_ACC_TRYCATCH		724346	0		&			
ANR	724820	Identifier	action		724346	0					
ANR	724821	Identifier	R_CORE_BIN_ACC_TRYCATCH		724346	1					
ANR	724822	CompoundStatement		72:41:2063:2063	724346	1					
ANR	724823	ExpressionStatement	"ret &= bin_trycatch ( core , mode )"	3817:2:110953:110985	724346	0	True				
ANR	724824	AssignmentExpression	"ret &= bin_trycatch ( core , mode )"		724346	0		&=			
ANR	724825	Identifier	ret		724346	0					
ANR	724826	CallExpression	"bin_trycatch ( core , mode )"		724346	1					
ANR	724827	Callee	bin_trycatch		724346	0					
ANR	724828	Identifier	bin_trycatch		724346	0					
ANR	724829	ArgumentList	core		724346	1					
ANR	724830	Argument	core		724346	0					
ANR	724831	Identifier	core		724346	0					
ANR	724832	Argument	mode		724346	1					
ANR	724833	Identifier	mode		724346	0					
ANR	724834	IfStatement	if ( ( action & R_CORE_BIN_ACC_SIZE ) )		724346	25					
ANR	724835	Condition	action & R_CORE_BIN_ACC_SIZE	3819:5:110995:111024	724346	0	True				
ANR	724836	BitAndExpression	action & R_CORE_BIN_ACC_SIZE		724346	0		&			
ANR	724837	Identifier	action		724346	0					
ANR	724838	Identifier	R_CORE_BIN_ACC_SIZE		724346	1					
ANR	724839	CompoundStatement		75:37:2141:2141	724346	1					
ANR	724840	ExpressionStatement	"ret &= bin_size ( core , mode )"	3820:2:111031:111059	724346	0	True				
ANR	724841	AssignmentExpression	"ret &= bin_size ( core , mode )"		724346	0		&=			
ANR	724842	Identifier	ret		724346	0					
ANR	724843	CallExpression	"bin_size ( core , mode )"		724346	1					
ANR	724844	Callee	bin_size		724346	0					
ANR	724845	Identifier	bin_size		724346	0					
ANR	724846	ArgumentList	core		724346	1					
ANR	724847	Argument	core		724346	0					
ANR	724848	Identifier	core		724346	0					
ANR	724849	Argument	mode		724346	1					
ANR	724850	Identifier	mode		724346	0					
ANR	724851	IfStatement	if ( ( action & R_CORE_BIN_ACC_MEM ) )		724346	26					
ANR	724852	Condition	action & R_CORE_BIN_ACC_MEM	3822:5:111069:111097	724346	0	True				
ANR	724853	BitAndExpression	action & R_CORE_BIN_ACC_MEM		724346	0		&			
ANR	724854	Identifier	action		724346	0					
ANR	724855	Identifier	R_CORE_BIN_ACC_MEM		724346	1					
ANR	724856	CompoundStatement		78:36:2214:2214	724346	1					
ANR	724857	ExpressionStatement	"ret &= bin_mem ( core , mode )"	3823:2:111104:111131	724346	0	True				
ANR	724858	AssignmentExpression	"ret &= bin_mem ( core , mode )"		724346	0		&=			
ANR	724859	Identifier	ret		724346	0					
ANR	724860	CallExpression	"bin_mem ( core , mode )"		724346	1					
ANR	724861	Callee	bin_mem		724346	0					
ANR	724862	Identifier	bin_mem		724346	0					
ANR	724863	ArgumentList	core		724346	1					
ANR	724864	Argument	core		724346	0					
ANR	724865	Identifier	core		724346	0					
ANR	724866	Argument	mode		724346	1					
ANR	724867	Identifier	mode		724346	0					
ANR	724868	IfStatement	if ( ( action & R_CORE_BIN_ACC_VERSIONINFO ) )		724346	27					
ANR	724869	Condition	action & R_CORE_BIN_ACC_VERSIONINFO	3825:5:111141:111177	724346	0	True				
ANR	724870	BitAndExpression	action & R_CORE_BIN_ACC_VERSIONINFO		724346	0		&			
ANR	724871	Identifier	action		724346	0					
ANR	724872	Identifier	R_CORE_BIN_ACC_VERSIONINFO		724346	1					
ANR	724873	CompoundStatement		81:44:2294:2294	724346	1					
ANR	724874	ExpressionStatement	"ret &= bin_versioninfo ( core , mode )"	3826:2:111184:111219	724346	0	True				
ANR	724875	AssignmentExpression	"ret &= bin_versioninfo ( core , mode )"		724346	0		&=			
ANR	724876	Identifier	ret		724346	0					
ANR	724877	CallExpression	"bin_versioninfo ( core , mode )"		724346	1					
ANR	724878	Callee	bin_versioninfo		724346	0					
ANR	724879	Identifier	bin_versioninfo		724346	0					
ANR	724880	ArgumentList	core		724346	1					
ANR	724881	Argument	core		724346	0					
ANR	724882	Identifier	core		724346	0					
ANR	724883	Argument	mode		724346	1					
ANR	724884	Identifier	mode		724346	0					
ANR	724885	IfStatement	if ( ( action & R_CORE_BIN_ACC_RESOURCES ) )		724346	28					
ANR	724886	Condition	action & R_CORE_BIN_ACC_RESOURCES	3828:5:111229:111263	724346	0	True				
ANR	724887	BitAndExpression	action & R_CORE_BIN_ACC_RESOURCES		724346	0		&			
ANR	724888	Identifier	action		724346	0					
ANR	724889	Identifier	R_CORE_BIN_ACC_RESOURCES		724346	1					
ANR	724890	CompoundStatement		84:42:2380:2380	724346	1					
ANR	724891	ExpressionStatement	"ret &= bin_resources ( core , mode )"	3829:2:111270:111303	724346	0	True				
ANR	724892	AssignmentExpression	"ret &= bin_resources ( core , mode )"		724346	0		&=			
ANR	724893	Identifier	ret		724346	0					
ANR	724894	CallExpression	"bin_resources ( core , mode )"		724346	1					
ANR	724895	Callee	bin_resources		724346	0					
ANR	724896	Identifier	bin_resources		724346	0					
ANR	724897	ArgumentList	core		724346	1					
ANR	724898	Argument	core		724346	0					
ANR	724899	Identifier	core		724346	0					
ANR	724900	Argument	mode		724346	1					
ANR	724901	Identifier	mode		724346	0					
ANR	724902	IfStatement	if ( ( action & R_CORE_BIN_ACC_SIGNATURE ) )		724346	29					
ANR	724903	Condition	action & R_CORE_BIN_ACC_SIGNATURE	3831:5:111313:111347	724346	0	True				
ANR	724904	BitAndExpression	action & R_CORE_BIN_ACC_SIGNATURE		724346	0		&			
ANR	724905	Identifier	action		724346	0					
ANR	724906	Identifier	R_CORE_BIN_ACC_SIGNATURE		724346	1					
ANR	724907	CompoundStatement		87:42:2464:2464	724346	1					
ANR	724908	ExpressionStatement	"ret &= bin_signature ( core , mode )"	3832:2:111354:111387	724346	0	True				
ANR	724909	AssignmentExpression	"ret &= bin_signature ( core , mode )"		724346	0		&=			
ANR	724910	Identifier	ret		724346	0					
ANR	724911	CallExpression	"bin_signature ( core , mode )"		724346	1					
ANR	724912	Callee	bin_signature		724346	0					
ANR	724913	Identifier	bin_signature		724346	0					
ANR	724914	ArgumentList	core		724346	1					
ANR	724915	Argument	core		724346	0					
ANR	724916	Identifier	core		724346	0					
ANR	724917	Argument	mode		724346	1					
ANR	724918	Identifier	mode		724346	0					
ANR	724919	IfStatement	if ( ( action & R_CORE_BIN_ACC_FIELDS ) )		724346	30					
ANR	724920	Condition	action & R_CORE_BIN_ACC_FIELDS	3834:5:111397:111428	724346	0	True				
ANR	724921	BitAndExpression	action & R_CORE_BIN_ACC_FIELDS		724346	0		&			
ANR	724922	Identifier	action		724346	0					
ANR	724923	Identifier	R_CORE_BIN_ACC_FIELDS		724346	1					
ANR	724924	CompoundStatement		90:39:2545:2545	724346	1					
ANR	724925	IfStatement	if ( IS_MODE_SIMPLE ( mode ) )		724346	0					
ANR	724926	Condition	IS_MODE_SIMPLE ( mode )	3835:6:111439:111459	724346	0	True				
ANR	724927	CallExpression	IS_MODE_SIMPLE ( mode )		724346	0					
ANR	724928	Callee	IS_MODE_SIMPLE		724346	0					
ANR	724929	Identifier	IS_MODE_SIMPLE		724346	0					
ANR	724930	ArgumentList	mode		724346	1					
ANR	724931	Argument	mode		724346	0					
ANR	724932	Identifier	mode		724346	0					
ANR	724933	CompoundStatement		91:29:2576:2576	724346	1					
ANR	724934	IfStatement	if ( ( action & R_CORE_BIN_ACC_HEADER ) || action & R_CORE_BIN_ACC_FIELDS )		724346	0					
ANR	724935	Condition	( action & R_CORE_BIN_ACC_HEADER ) || action & R_CORE_BIN_ACC_FIELDS	3836:7:111471:111536	724346	0	True				
ANR	724936	OrExpression	( action & R_CORE_BIN_ACC_HEADER ) || action & R_CORE_BIN_ACC_FIELDS		724346	0		||			
ANR	724937	BitAndExpression	action & R_CORE_BIN_ACC_HEADER		724346	0		&			
ANR	724938	Identifier	action		724346	0					
ANR	724939	Identifier	R_CORE_BIN_ACC_HEADER		724346	1					
ANR	724940	BitAndExpression	action & R_CORE_BIN_ACC_FIELDS		724346	1		&			
ANR	724941	Identifier	action		724346	0					
ANR	724942	Identifier	R_CORE_BIN_ACC_FIELDS		724346	1					
ANR	724943	CompoundStatement		92:75:2653:2653	724346	1					
ANR	724944	ExpressionStatement	"ret &= bin_fields ( core , 0 , va )"	3838:4:111595:111626	724346	0	True				
ANR	724945	AssignmentExpression	"ret &= bin_fields ( core , 0 , va )"		724346	0		&=			
ANR	724946	Identifier	ret		724346	0					
ANR	724947	CallExpression	"bin_fields ( core , 0 , va )"		724346	1					
ANR	724948	Callee	bin_fields		724346	0					
ANR	724949	Identifier	bin_fields		724346	0					
ANR	724950	ArgumentList	core		724346	1					
ANR	724951	Argument	core		724346	0					
ANR	724952	Identifier	core		724346	0					
ANR	724953	Argument	0		724346	1					
ANR	724954	PrimaryExpression	0		724346	0					
ANR	724955	Argument	va		724346	2					
ANR	724956	Identifier	va		724346	0					
ANR	724957	ElseStatement	else		724346	0					
ANR	724958	CompoundStatement		96:9:2756:2756	724346	0					
ANR	724959	IfStatement	if ( IS_MODE_NORMAL ( mode ) )		724346	0					
ANR	724960	Condition	IS_MODE_NORMAL ( mode )	3841:7:111651:111671	724346	0	True				
ANR	724961	CallExpression	IS_MODE_NORMAL ( mode )		724346	0					
ANR	724962	Callee	IS_MODE_NORMAL		724346	0					
ANR	724963	Identifier	IS_MODE_NORMAL		724346	0					
ANR	724964	ArgumentList	mode		724346	1					
ANR	724965	Argument	mode		724346	0					
ANR	724966	Identifier	mode		724346	0					
ANR	724967	CompoundStatement		97:30:2788:2788	724346	1					
ANR	724968	ExpressionStatement	"ret &= bin_header ( core , mode )"	3842:4:111680:111710	724346	0	True				
ANR	724969	AssignmentExpression	"ret &= bin_header ( core , mode )"		724346	0		&=			
ANR	724970	Identifier	ret		724346	0					
ANR	724971	CallExpression	"bin_header ( core , mode )"		724346	1					
ANR	724972	Callee	bin_header		724346	0					
ANR	724973	Identifier	bin_header		724346	0					
ANR	724974	ArgumentList	core		724346	1					
ANR	724975	Argument	core		724346	0					
ANR	724976	Identifier	core		724346	0					
ANR	724977	Argument	mode		724346	1					
ANR	724978	Identifier	mode		724346	0					
ANR	724979	ElseStatement	else		724346	0					
ANR	724980	CompoundStatement		99:10:2836:2836	724346	0					
ANR	724981	IfStatement	if ( ( action & R_CORE_BIN_ACC_HEADER ) || action & R_CORE_BIN_ACC_FIELDS )		724346	0					
ANR	724982	Condition	( action & R_CORE_BIN_ACC_HEADER ) || action & R_CORE_BIN_ACC_FIELDS	3844:8:111732:111797	724346	0	True				
ANR	724983	OrExpression	( action & R_CORE_BIN_ACC_HEADER ) || action & R_CORE_BIN_ACC_FIELDS		724346	0		||			
ANR	724984	BitAndExpression	action & R_CORE_BIN_ACC_HEADER		724346	0		&			
ANR	724985	Identifier	action		724346	0					
ANR	724986	Identifier	R_CORE_BIN_ACC_HEADER		724346	1					
ANR	724987	BitAndExpression	action & R_CORE_BIN_ACC_FIELDS		724346	1		&			
ANR	724988	Identifier	action		724346	0					
ANR	724989	Identifier	R_CORE_BIN_ACC_FIELDS		724346	1					
ANR	724990	CompoundStatement		100:76:2914:2914	724346	1					
ANR	724991	ExpressionStatement	"ret &= bin_fields ( core , mode , va )"	3845:5:111807:111841	724346	0	True				
ANR	724992	AssignmentExpression	"ret &= bin_fields ( core , mode , va )"		724346	0		&=			
ANR	724993	Identifier	ret		724346	0					
ANR	724994	CallExpression	"bin_fields ( core , mode , va )"		724346	1					
ANR	724995	Callee	bin_fields		724346	0					
ANR	724996	Identifier	bin_fields		724346	0					
ANR	724997	ArgumentList	core		724346	1					
ANR	724998	Argument	core		724346	0					
ANR	724999	Identifier	core		724346	0					
ANR	725000	Argument	mode		724346	1					
ANR	725001	Identifier	mode		724346	0					
ANR	725002	Argument	va		724346	2					
ANR	725003	Identifier	va		724346	0					
ANR	725004	ReturnStatement	return ret ;	3850:1:111862:111872	724346	31	True				
ANR	725005	Identifier	ret		724346	0					
ANR	725006	ReturnType	R_API int		724346	1					
ANR	725007	Identifier	r_core_bin_info		724346	2					
ANR	725008	ParameterList	"RCore * core , int action , int mode , int va , RCoreBinFilter * filter , const char * chksum"		724346	3					
ANR	725009	Parameter	RCore * core	3745:26:108798:108808	724346	0	True				
ANR	725010	ParameterType	RCore *		724346	0					
ANR	725011	Identifier	core		724346	1					
ANR	725012	Parameter	int action	3745:39:108811:108820	724346	1	True				
ANR	725013	ParameterType	int		724346	0					
ANR	725014	Identifier	action		724346	1					
ANR	725015	Parameter	int mode	3745:51:108823:108830	724346	2	True				
ANR	725016	ParameterType	int		724346	0					
ANR	725017	Identifier	mode		724346	1					
ANR	725018	Parameter	int va	3745:61:108833:108838	724346	3	True				
ANR	725019	ParameterType	int		724346	0					
ANR	725020	Identifier	va		724346	1					
ANR	725021	Parameter	RCoreBinFilter * filter	3745:69:108841:108862	724346	4	True				
ANR	725022	ParameterType	RCoreBinFilter *		724346	0					
ANR	725023	Identifier	filter		724346	1					
ANR	725024	Parameter	const char * chksum	3745:93:108865:108882	724346	5	True				
ANR	725025	ParameterType	const char *		724346	0					
ANR	725026	Identifier	chksum		724346	1					
ANR	725027	CFGEntryNode	ENTRY		724346		True				
ANR	725028	CFGExitNode	EXIT		724346		True				
ANR	725029	Symbol	filter -> offset		724346						
ANR	725030	Symbol	bin_libs		724346						
ANR	725031	Symbol	bin_versioninfo		724346						
ANR	725032	Symbol	VA_TRUE		724346						
ANR	725033	Symbol	bin_signature		724346						
ANR	725034	Symbol	IS_MODE_SIMPLE		724346						
ANR	725035	Symbol	mode		724346						
ANR	725036	Symbol	r_bin_get_laddr		724346						
ANR	725037	Symbol	R_CORE_BIN_ACC_SECTIONS		724346						
ANR	725038	Symbol	bin_fields		724346						
ANR	725039	Symbol	bin_mem		724346						
ANR	725040	Symbol	action		724346						
ANR	725041	Symbol	bin_symbols		724346						
ANR	725042	Symbol	core -> bin		724346						
ANR	725043	Symbol	ret		724346						
ANR	725044	Symbol	R_CORE_BIN_ACC_PDB		724346						
ANR	725045	Symbol	R_CORE_BIN_ACC_SIZE		724346						
ANR	725046	Symbol	NULL		724346						
ANR	725047	Symbol	bin_raw_strings		724346						
ANR	725048	Symbol	bin_source		724346						
ANR	725049	Symbol	bin_info		724346						
ANR	725050	Symbol	bin_sections		724346						
ANR	725051	Symbol	va		724346						
ANR	725052	Symbol	R_CORE_BIN_ACC_RELOCS		724346						
ANR	725053	Symbol	R_CORE_BIN_ACC_SOURCE		724346						
ANR	725054	Symbol	R_CORE_BIN_ACC_LIBS		724346						
ANR	725055	Symbol	core		724346						
ANR	725056	Symbol	R_CORE_BIN_ACC_DWARF		724346						
ANR	725057	Symbol	at		724346						
ANR	725058	Symbol	bin_strings		724346						
ANR	725059	Symbol	bin_relocs		724346						
ANR	725060	Symbol	bin_main		724346						
ANR	725061	Symbol	r_config_get_i		724346						
ANR	725062	Symbol	true		724346						
ANR	725063	Symbol	name		724346						
ANR	725064	Symbol	R_CORE_BIN_ACC_HEADER		724346						
ANR	725065	Symbol	R_CORE_BIN_ACC_RAW_STRINGS		724346						
ANR	725066	Symbol	R_CORE_BIN_ACC_CLASSES		724346						
ANR	725067	Symbol	bin_resources		724346						
ANR	725068	Symbol	R_CORE_BIN_ACC_INITFINI		724346						
ANR	725069	Symbol	bin_pdb		724346						
ANR	725070	Symbol	R_CORE_BIN_ACC_FIELDS		724346						
ANR	725071	Symbol	chksum		724346						
ANR	725072	Symbol	VA_FALSE		724346						
ANR	725073	Symbol	bin_imports		724346						
ANR	725074	Symbol	* core		724346						
ANR	725075	Symbol	R_CORE_BIN_ACC_MEM		724346						
ANR	725076	Symbol	R_CORE_BIN_ACC_EXPORTS		724346						
ANR	725077	Symbol	R_CORE_BIN_ACC_SYMBOLS		724346						
ANR	725078	Symbol	R_CORE_BIN_ACC_SIGNATURE		724346						
ANR	725079	Symbol	loadaddr		724346						
ANR	725080	Symbol	R_CORE_BIN_ACC_INFO		724346						
ANR	725081	Symbol	bin_header		724346						
ANR	725082	Symbol	core -> config		724346						
ANR	725083	Symbol	R_CORE_BIN_ACC_STRINGS		724346						
ANR	725084	Symbol	bin_entry		724346						
ANR	725085	Symbol	R_CORE_BIN_ACC_ENTRIES		724346						
ANR	725086	Symbol	R_CORE_BIN_ACC_TRYCATCH		724346						
ANR	725087	Symbol	false		724346						
ANR	725088	Symbol	R_CORE_BIN_ACC_MAIN		724346						
ANR	725089	Symbol	bin_classes		724346						
ANR	725090	Symbol	R_CORE_BIN_ACC_RESOURCES		724346						
ANR	725091	Symbol	R_CORE_BIN_ACC_VERSIONINFO		724346						
ANR	725092	Symbol	* filter		724346						
ANR	725093	Symbol	IS_MODE_NORMAL		724346						
ANR	725094	Symbol	filter		724346						
ANR	725095	Symbol	filter -> name		724346						
ANR	725096	Symbol	bin_trycatch		724346						
ANR	725097	Symbol	R_CORE_BIN_ACC_IMPORTS		724346						
ANR	725098	Symbol	bin_dwarf		724346						
ANR	725099	Symbol	R_CORE_BIN_ACC_SEGMENTS		724346						
ANR	725100	Symbol	bin_size		724346						
ANR	725101	Function	r_core_bin_set_arch_bits	3853:0:111877:112744							
ANR	725102	FunctionDef	"r_core_bin_set_arch_bits (RCore * r , const char * name , const char * arch , ut16 bits)"		725101	0					
ANR	725103	CompoundStatement		3853:93:111970:112744	725101	0					
ANR	725104	IdentifierDeclStatement	int fd = r_io_fd_get_current ( r -> io ) ;	3854:1:111973:112009	725101	0	True				
ANR	725105	IdentifierDecl	fd = r_io_fd_get_current ( r -> io )		725101	0					
ANR	725106	IdentifierDeclType	int		725101	0					
ANR	725107	Identifier	fd		725101	1					
ANR	725108	AssignmentExpression	fd = r_io_fd_get_current ( r -> io )		725101	2		=			
ANR	725109	Identifier	fd		725101	0					
ANR	725110	CallExpression	r_io_fd_get_current ( r -> io )		725101	1					
ANR	725111	Callee	r_io_fd_get_current		725101	0					
ANR	725112	Identifier	r_io_fd_get_current		725101	0					
ANR	725113	ArgumentList	r -> io		725101	1					
ANR	725114	Argument	r -> io		725101	0					
ANR	725115	PtrMemberAccess	r -> io		725101	0					
ANR	725116	Identifier	r		725101	0					
ANR	725117	Identifier	io		725101	1					
ANR	725118	IdentifierDeclStatement	"RIODesc * desc = r_io_desc_get ( r -> io , fd ) ;"	3855:1:112012:112053	725101	1	True				
ANR	725119	IdentifierDecl	"* desc = r_io_desc_get ( r -> io , fd )"		725101	0					
ANR	725120	IdentifierDeclType	RIODesc *		725101	0					
ANR	725121	Identifier	desc		725101	1					
ANR	725122	AssignmentExpression	"* desc = r_io_desc_get ( r -> io , fd )"		725101	2		=			
ANR	725123	Identifier	desc		725101	0					
ANR	725124	CallExpression	"r_io_desc_get ( r -> io , fd )"		725101	1					
ANR	725125	Callee	r_io_desc_get		725101	0					
ANR	725126	Identifier	r_io_desc_get		725101	0					
ANR	725127	ArgumentList	r -> io		725101	1					
ANR	725128	Argument	r -> io		725101	0					
ANR	725129	PtrMemberAccess	r -> io		725101	0					
ANR	725130	Identifier	r		725101	0					
ANR	725131	Identifier	io		725101	1					
ANR	725132	Argument	fd		725101	1					
ANR	725133	Identifier	fd		725101	0					
ANR	725134	IdentifierDeclStatement	"RBinFile * curfile , * binfile = NULL ;"	3856:1:112056:112090	725101	2	True				
ANR	725135	IdentifierDecl	* curfile		725101	0					
ANR	725136	IdentifierDeclType	RBinFile *		725101	0					
ANR	725137	Identifier	curfile		725101	1					
ANR	725138	IdentifierDecl	* binfile = NULL		725101	1					
ANR	725139	IdentifierDeclType	RBinFile *		725101	0					
ANR	725140	Identifier	binfile		725101	1					
ANR	725141	AssignmentExpression	* binfile = NULL		725101	2		=			
ANR	725142	Identifier	NULL		725101	0					
ANR	725143	Identifier	NULL		725101	1					
ANR	725144	IfStatement	if ( ! name )		725101	3					
ANR	725145	Condition	! name	3857:5:112097:112101	725101	0	True				
ANR	725146	UnaryOperationExpression	! name		725101	0					
ANR	725147	UnaryOperator	!		725101	0					
ANR	725148	Identifier	name		725101	1					
ANR	725149	CompoundStatement		5:12:133:133	725101	1					
ANR	725150	IfStatement	if ( ! desc || ! desc -> name )		725101	0					
ANR	725151	Condition	! desc || ! desc -> name	3858:6:112112:112131	725101	0	True				
ANR	725152	OrExpression	! desc || ! desc -> name		725101	0		||			
ANR	725153	UnaryOperationExpression	! desc		725101	0					
ANR	725154	UnaryOperator	!		725101	0					
ANR	725155	Identifier	desc		725101	1					
ANR	725156	UnaryOperationExpression	! desc -> name		725101	1					
ANR	725157	UnaryOperator	!		725101	0					
ANR	725158	PtrMemberAccess	desc -> name		725101	1					
ANR	725159	Identifier	desc		725101	0					
ANR	725160	Identifier	name		725101	1					
ANR	725161	CompoundStatement		6:28:163:163	725101	1					
ANR	725162	ReturnStatement	return false ;	3859:3:112139:112151	725101	0	True				
ANR	725163	Identifier	false		725101	0					
ANR	725164	ExpressionStatement	name = desc -> name	3861:2:112159:112176	725101	1	True				
ANR	725165	AssignmentExpression	name = desc -> name		725101	0		=			
ANR	725166	Identifier	name		725101	0					
ANR	725167	PtrMemberAccess	desc -> name		725101	1					
ANR	725168	Identifier	desc		725101	0					
ANR	725169	Identifier	name		725101	1					
ANR	725170	IfStatement	"if ( ! r_asm_is_valid ( r -> assembler , arch ) )"		725101	4					
ANR	725171	Condition	"! r_asm_is_valid ( r -> assembler , arch )"	3864:5:112232:112267	725101	0	True				
ANR	725172	UnaryOperationExpression	"! r_asm_is_valid ( r -> assembler , arch )"		725101	0					
ANR	725173	UnaryOperator	!		725101	0					
ANR	725174	CallExpression	"r_asm_is_valid ( r -> assembler , arch )"		725101	1					
ANR	725175	Callee	r_asm_is_valid		725101	0					
ANR	725176	Identifier	r_asm_is_valid		725101	0					
ANR	725177	ArgumentList	r -> assembler		725101	1					
ANR	725178	Argument	r -> assembler		725101	0					
ANR	725179	PtrMemberAccess	r -> assembler		725101	0					
ANR	725180	Identifier	r		725101	0					
ANR	725181	Identifier	assembler		725101	1					
ANR	725182	Argument	arch		725101	1					
ANR	725183	Identifier	arch		725101	0					
ANR	725184	CompoundStatement		12:43:299:299	725101	1					
ANR	725185	ReturnStatement	return false ;	3865:2:112274:112286	725101	0	True				
ANR	725186	Identifier	false		725101	0					
ANR	725187	ExpressionStatement	"binfile = r_bin_file_find_by_arch_bits ( r -> bin , arch , bits )"	3868:1:112345:112404	725101	5	True				
ANR	725188	AssignmentExpression	"binfile = r_bin_file_find_by_arch_bits ( r -> bin , arch , bits )"		725101	0		=			
ANR	725189	Identifier	binfile		725101	0					
ANR	725190	CallExpression	"r_bin_file_find_by_arch_bits ( r -> bin , arch , bits )"		725101	1					
ANR	725191	Callee	r_bin_file_find_by_arch_bits		725101	0					
ANR	725192	Identifier	r_bin_file_find_by_arch_bits		725101	0					
ANR	725193	ArgumentList	r -> bin		725101	1					
ANR	725194	Argument	r -> bin		725101	0					
ANR	725195	PtrMemberAccess	r -> bin		725101	0					
ANR	725196	Identifier	r		725101	0					
ANR	725197	Identifier	bin		725101	1					
ANR	725198	Argument	arch		725101	1					
ANR	725199	Identifier	arch		725101	0					
ANR	725200	Argument	bits		725101	2					
ANR	725201	Identifier	bits		725101	0					
ANR	725202	IfStatement	if ( ! binfile )		725101	6					
ANR	725203	Condition	! binfile	3869:5:112411:112418	725101	0	True				
ANR	725204	UnaryOperationExpression	! binfile		725101	0					
ANR	725205	UnaryOperator	!		725101	0					
ANR	725206	Identifier	binfile		725101	1					
ANR	725207	CompoundStatement		17:15:450:450	725101	1					
ANR	725208	ReturnStatement	return false ;	3870:2:112425:112437	725101	0	True				
ANR	725209	Identifier	false		725101	0					
ANR	725210	IfStatement	"if ( ! r_bin_use_arch ( r -> bin , arch , bits , name ) )"		725101	7					
ANR	725211	Condition	"! r_bin_use_arch ( r -> bin , arch , bits , name )"	3872:5:112447:112488	725101	0	True				
ANR	725212	UnaryOperationExpression	"! r_bin_use_arch ( r -> bin , arch , bits , name )"		725101	0					
ANR	725213	UnaryOperator	!		725101	0					
ANR	725214	CallExpression	"r_bin_use_arch ( r -> bin , arch , bits , name )"		725101	1					
ANR	725215	Callee	r_bin_use_arch		725101	0					
ANR	725216	Identifier	r_bin_use_arch		725101	0					
ANR	725217	ArgumentList	r -> bin		725101	1					
ANR	725218	Argument	r -> bin		725101	0					
ANR	725219	PtrMemberAccess	r -> bin		725101	0					
ANR	725220	Identifier	r		725101	0					
ANR	725221	Identifier	bin		725101	1					
ANR	725222	Argument	arch		725101	1					
ANR	725223	Identifier	arch		725101	0					
ANR	725224	Argument	bits		725101	2					
ANR	725225	Identifier	bits		725101	0					
ANR	725226	Argument	name		725101	3					
ANR	725227	Identifier	name		725101	0					
ANR	725228	CompoundStatement		20:49:520:520	725101	1					
ANR	725229	ReturnStatement	return false ;	3873:2:112495:112507	725101	0	True				
ANR	725230	Identifier	false		725101	0					
ANR	725231	ExpressionStatement	curfile = r_bin_cur ( r -> bin )	3875:1:112513:112541	725101	8	True				
ANR	725232	AssignmentExpression	curfile = r_bin_cur ( r -> bin )		725101	0		=			
ANR	725233	Identifier	curfile		725101	0					
ANR	725234	CallExpression	r_bin_cur ( r -> bin )		725101	1					
ANR	725235	Callee	r_bin_cur		725101	0					
ANR	725236	Identifier	r_bin_cur		725101	0					
ANR	725237	ArgumentList	r -> bin		725101	1					
ANR	725238	Argument	r -> bin		725101	0					
ANR	725239	PtrMemberAccess	r -> bin		725101	0					
ANR	725240	Identifier	r		725101	0					
ANR	725241	Identifier	bin		725101	1					
ANR	725242	IfStatement	if ( curfile != binfile || binfile -> curxtr )		725101	9					
ANR	725243	Condition	curfile != binfile || binfile -> curxtr	3877:5:112609:112645	725101	0	True				
ANR	725244	OrExpression	curfile != binfile || binfile -> curxtr		725101	0		||			
ANR	725245	EqualityExpression	curfile != binfile		725101	0		!=			
ANR	725246	Identifier	curfile		725101	0					
ANR	725247	Identifier	binfile		725101	1					
ANR	725248	PtrMemberAccess	binfile -> curxtr		725101	1					
ANR	725249	Identifier	binfile		725101	0					
ANR	725250	Identifier	curxtr		725101	1					
ANR	725251	CompoundStatement		25:44:677:677	725101	1					
ANR	725252	ExpressionStatement	"r_core_bin_set_cur ( r , binfile )"	3878:2:112652:112683	725101	0	True				
ANR	725253	CallExpression	"r_core_bin_set_cur ( r , binfile )"		725101	0					
ANR	725254	Callee	r_core_bin_set_cur		725101	0					
ANR	725255	Identifier	r_core_bin_set_cur		725101	0					
ANR	725256	ArgumentList	r		725101	1					
ANR	725257	Argument	r		725101	0					
ANR	725258	Identifier	r		725101	0					
ANR	725259	Argument	binfile		725101	1					
ANR	725260	Identifier	binfile		725101	0					
ANR	725261	ReturnStatement	"return r_core_bin_set_env ( r , binfile ) ;"	3879:2:112687:112725	725101	1	True				
ANR	725262	CallExpression	"r_core_bin_set_env ( r , binfile )"		725101	0					
ANR	725263	Callee	r_core_bin_set_env		725101	0					
ANR	725264	Identifier	r_core_bin_set_env		725101	0					
ANR	725265	ArgumentList	r		725101	1					
ANR	725266	Argument	r		725101	0					
ANR	725267	Identifier	r		725101	0					
ANR	725268	Argument	binfile		725101	1					
ANR	725269	Identifier	binfile		725101	0					
ANR	725270	ReturnStatement	return true ;	3881:1:112731:112742	725101	10	True				
ANR	725271	Identifier	true		725101	0					
ANR	725272	ReturnType	R_API int		725101	1					
ANR	725273	Identifier	r_core_bin_set_arch_bits		725101	2					
ANR	725274	ParameterList	"RCore * r , const char * name , const char * arch , ut16 bits"		725101	3					
ANR	725275	Parameter	RCore * r	3853:35:111912:111919	725101	0	True				
ANR	725276	ParameterType	RCore *		725101	0					
ANR	725277	Identifier	r		725101	1					
ANR	725278	Parameter	const char * name	3853:45:111922:111937	725101	1	True				
ANR	725279	ParameterType	const char *		725101	0					
ANR	725280	Identifier	name		725101	1					
ANR	725281	Parameter	const char * arch	3853:63:111940:111956	725101	2	True				
ANR	725282	ParameterType	const char *		725101	0					
ANR	725283	Identifier	arch		725101	1					
ANR	725284	Parameter	ut16 bits	3853:82:111959:111967	725101	3	True				
ANR	725285	ParameterType	ut16		725101	0					
ANR	725286	Identifier	bits		725101	1					
ANR	725287	CFGEntryNode	ENTRY		725101		True				
ANR	725288	CFGExitNode	EXIT		725101		True				
ANR	725289	Symbol	r_core_bin_set_env		725101						
ANR	725290	Symbol	binfile		725101						
ANR	725291	Symbol	r_bin_use_arch		725101						
ANR	725292	Symbol	r -> bin		725101						
ANR	725293	Symbol	curfile		725101						
ANR	725294	Symbol	* desc		725101						
ANR	725295	Symbol	* binfile		725101						
ANR	725296	Symbol	r_io_desc_get		725101						
ANR	725297	Symbol	NULL		725101						
ANR	725298	Symbol	r_bin_file_find_by_arch_bits		725101						
ANR	725299	Symbol	r -> assembler		725101						
ANR	725300	Symbol	bits		725101						
ANR	725301	Symbol	false		725101						
ANR	725302	Symbol	r_bin_cur		725101						
ANR	725303	Symbol	binfile -> curxtr		725101						
ANR	725304	Symbol	r		725101						
ANR	725305	Symbol	r_asm_is_valid		725101						
ANR	725306	Symbol	r_io_fd_get_current		725101						
ANR	725307	Symbol	name		725101						
ANR	725308	Symbol	true		725101						
ANR	725309	Symbol	arch		725101						
ANR	725310	Symbol	* r		725101						
ANR	725311	Symbol	fd		725101						
ANR	725312	Symbol	r -> io		725101						
ANR	725313	Symbol	desc		725101						
ANR	725314	Symbol	desc -> name		725101						
ANR	725315	Function	r_core_bin_update_arch_bits	3884:0:112747:113224							
ANR	725316	FunctionDef	r_core_bin_update_arch_bits (RCore * r)		725315	0					
ANR	725317	CompoundStatement		3884:48:112795:113224	725315	0					
ANR	725318	IdentifierDeclStatement	RBinFile * binfile = NULL ;	3885:1:112798:112822	725315	0	True				
ANR	725319	IdentifierDecl	* binfile = NULL		725315	0					
ANR	725320	IdentifierDeclType	RBinFile *		725315	0					
ANR	725321	Identifier	binfile		725315	1					
ANR	725322	AssignmentExpression	* binfile = NULL		725315	2		=			
ANR	725323	Identifier	NULL		725315	0					
ANR	725324	Identifier	NULL		725315	1					
ANR	725325	IdentifierDeclStatement	"const char * name = NULL , * arch = NULL ;"	3886:1:112825:112862	725315	1	True				
ANR	725326	IdentifierDecl	* name = NULL		725315	0					
ANR	725327	IdentifierDeclType	const char *		725315	0					
ANR	725328	Identifier	name		725315	1					
ANR	725329	AssignmentExpression	* name = NULL		725315	2		=			
ANR	725330	Identifier	NULL		725315	0					
ANR	725331	Identifier	NULL		725315	1					
ANR	725332	IdentifierDecl	* arch = NULL		725315	1					
ANR	725333	IdentifierDeclType	const char *		725315	0					
ANR	725334	Identifier	arch		725315	1					
ANR	725335	AssignmentExpression	* arch = NULL		725315	2		=			
ANR	725336	Identifier	NULL		725315	0					
ANR	725337	Identifier	NULL		725315	1					
ANR	725338	IdentifierDeclStatement	ut16 bits = 0 ;	3887:1:112865:112878	725315	2	True				
ANR	725339	IdentifierDecl	bits = 0		725315	0					
ANR	725340	IdentifierDeclType	ut16		725315	0					
ANR	725341	Identifier	bits		725315	1					
ANR	725342	AssignmentExpression	bits = 0		725315	2		=			
ANR	725343	Identifier	bits		725315	0					
ANR	725344	PrimaryExpression	0		725315	1					
ANR	725345	IfStatement	if ( ! r )		725315	3					
ANR	725346	Condition	! r	3888:5:112885:112886	725315	0	True				
ANR	725347	UnaryOperationExpression	! r		725315	0					
ANR	725348	UnaryOperator	!		725315	0					
ANR	725349	Identifier	r		725315	1					
ANR	725350	CompoundStatement		5:9:93:93	725315	1					
ANR	725351	ReturnStatement	return 0 ;	3889:2:112893:112901	725315	0	True				
ANR	725352	PrimaryExpression	0		725315	0					
ANR	725353	IfStatement	if ( r -> assembler )		725315	4					
ANR	725354	Condition	r -> assembler	3891:5:112911:112922	725315	0	True				
ANR	725355	PtrMemberAccess	r -> assembler		725315	0					
ANR	725356	Identifier	r		725315	0					
ANR	725357	Identifier	assembler		725315	1					
ANR	725358	CompoundStatement		8:19:129:129	725315	1					
ANR	725359	ExpressionStatement	bits = r -> assembler -> bits	3892:2:112929:112954	725315	0	True				
ANR	725360	AssignmentExpression	bits = r -> assembler -> bits		725315	0		=			
ANR	725361	Identifier	bits		725315	0					
ANR	725362	PtrMemberAccess	r -> assembler -> bits		725315	1					
ANR	725363	PtrMemberAccess	r -> assembler		725315	0					
ANR	725364	Identifier	r		725315	0					
ANR	725365	Identifier	assembler		725315	1					
ANR	725366	Identifier	bits		725315	1					
ANR	725367	IfStatement	if ( r -> assembler -> cur )		725315	1					
ANR	725368	Condition	r -> assembler -> cur	3893:9:112965:112981	725315	0	True				
ANR	725369	PtrMemberAccess	r -> assembler -> cur		725315	0					
ANR	725370	PtrMemberAccess	r -> assembler		725315	0					
ANR	725371	Identifier	r		725315	0					
ANR	725372	Identifier	assembler		725315	1					
ANR	725373	Identifier	cur		725315	1					
ANR	725374	CompoundStatement		10:28:188:188	725315	1					
ANR	725375	ExpressionStatement	arch = r -> assembler -> cur -> arch	3894:3:112989:113019	725315	0	True				
ANR	725376	AssignmentExpression	arch = r -> assembler -> cur -> arch		725315	0		=			
ANR	725377	Identifier	arch		725315	0					
ANR	725378	PtrMemberAccess	r -> assembler -> cur -> arch		725315	1					
ANR	725379	PtrMemberAccess	r -> assembler -> cur		725315	0					
ANR	725380	PtrMemberAccess	r -> assembler		725315	0					
ANR	725381	Identifier	r		725315	0					
ANR	725382	Identifier	assembler		725315	1					
ANR	725383	Identifier	cur		725315	1					
ANR	725384	Identifier	arch		725315	1					
ANR	725385	ExpressionStatement	binfile = r_bin_cur ( r -> bin )	3897:1:113029:113057	725315	5	True				
ANR	725386	AssignmentExpression	binfile = r_bin_cur ( r -> bin )		725315	0		=			
ANR	725387	Identifier	binfile		725315	0					
ANR	725388	CallExpression	r_bin_cur ( r -> bin )		725315	1					
ANR	725389	Callee	r_bin_cur		725315	0					
ANR	725390	Identifier	r_bin_cur		725315	0					
ANR	725391	ArgumentList	r -> bin		725315	1					
ANR	725392	Argument	r -> bin		725315	0					
ANR	725393	PtrMemberAccess	r -> bin		725315	0					
ANR	725394	Identifier	r		725315	0					
ANR	725395	Identifier	bin		725315	1					
ANR	725396	ExpressionStatement	name = binfile ? binfile -> file : NULL	3898:1:113060:113097	725315	6	True				
ANR	725397	AssignmentExpression	name = binfile ? binfile -> file : NULL		725315	0		=			
ANR	725398	Identifier	name		725315	0					
ANR	725399	ConditionalExpression	binfile ? binfile -> file : NULL		725315	1					
ANR	725400	Condition	binfile		725315	0					
ANR	725401	Identifier	binfile		725315	0					
ANR	725402	PtrMemberAccess	binfile -> file		725315	1					
ANR	725403	Identifier	binfile		725315	0					
ANR	725404	Identifier	file		725315	1					
ANR	725405	Identifier	NULL		725315	2					
ANR	725406	IfStatement	if ( binfile && binfile -> curxtr )		725315	7					
ANR	725407	Condition	binfile && binfile -> curxtr	3899:5:113104:113129	725315	0	True				
ANR	725408	AndExpression	binfile && binfile -> curxtr		725315	0		&&			
ANR	725409	Identifier	binfile		725315	0					
ANR	725410	PtrMemberAccess	binfile -> curxtr		725315	1					
ANR	725411	Identifier	binfile		725315	0					
ANR	725412	Identifier	curxtr		725315	1					
ANR	725413	CompoundStatement		16:33:336:336	725315	1					
ANR	725414	ExpressionStatement	r_anal_hint_clear ( r -> anal )	3900:2:113136:113163	725315	0	True				
ANR	725415	CallExpression	r_anal_hint_clear ( r -> anal )		725315	0					
ANR	725416	Callee	r_anal_hint_clear		725315	0					
ANR	725417	Identifier	r_anal_hint_clear		725315	0					
ANR	725418	ArgumentList	r -> anal		725315	1					
ANR	725419	Argument	r -> anal		725315	0					
ANR	725420	PtrMemberAccess	r -> anal		725315	0					
ANR	725421	Identifier	r		725315	0					
ANR	725422	Identifier	anal		725315	1					
ANR	725423	ReturnStatement	"return r_core_bin_set_arch_bits ( r , name , arch , bits ) ;"	3902:1:113169:113222	725315	8	True				
ANR	725424	CallExpression	"r_core_bin_set_arch_bits ( r , name , arch , bits )"		725315	0					
ANR	725425	Callee	r_core_bin_set_arch_bits		725315	0					
ANR	725426	Identifier	r_core_bin_set_arch_bits		725315	0					
ANR	725427	ArgumentList	r		725315	1					
ANR	725428	Argument	r		725315	0					
ANR	725429	Identifier	r		725315	0					
ANR	725430	Argument	name		725315	1					
ANR	725431	Identifier	name		725315	0					
ANR	725432	Argument	arch		725315	2					
ANR	725433	Identifier	arch		725315	0					
ANR	725434	Argument	bits		725315	3					
ANR	725435	Identifier	bits		725315	0					
ANR	725436	ReturnType	R_API int		725315	1					
ANR	725437	Identifier	r_core_bin_update_arch_bits		725315	2					
ANR	725438	ParameterList	RCore * r		725315	3					
ANR	725439	Parameter	RCore * r	3884:38:112785:112792	725315	0	True				
ANR	725440	ParameterType	RCore *		725315	0					
ANR	725441	Identifier	r		725315	1					
ANR	725442	CFGEntryNode	ENTRY		725315		True				
ANR	725443	CFGExitNode	EXIT		725315		True				
ANR	725444	Symbol	* r -> assembler		725315						
ANR	725445	Symbol	* binfile		725315						
ANR	725446	Symbol	NULL		725315						
ANR	725447	Symbol	r -> assembler		725315						
ANR	725448	Symbol	* r -> assembler -> cur		725315						
ANR	725449	Symbol	bits		725315						
ANR	725450	Symbol	r_bin_cur		725315						
ANR	725451	Symbol	* * r -> assembler		725315						
ANR	725452	Symbol	r -> anal		725315						
ANR	725453	Symbol	binfile		725315						
ANR	725454	Symbol	* * * r		725315						
ANR	725455	Symbol	binfile -> curxtr		725315						
ANR	725456	Symbol	r		725315						
ANR	725457	Symbol	r -> assembler -> cur		725315						
ANR	725458	Symbol	r_core_bin_set_arch_bits		725315						
ANR	725459	Symbol	r -> assembler -> cur -> arch		725315						
ANR	725460	Symbol	r -> bin		725315						
ANR	725461	Symbol	name		725315						
ANR	725462	Symbol	* * r		725315						
ANR	725463	Symbol	arch		725315						
ANR	725464	Symbol	* r		725315						
ANR	725465	Symbol	r -> assembler -> bits		725315						
ANR	725466	Symbol	binfile -> file		725315						
ANR	725467	Function	r_core_bin_raise	3905:0:113227:113593							
ANR	725468	FunctionDef	"r_core_bin_raise (RCore * core , ut32 bfid)"		725467	0					
ANR	725469	CompoundStatement		3905:52:113279:113593	725467	0					
ANR	725470	IfStatement	"if ( ! r_bin_select_bfid ( core -> bin , bfid ) )"		725467	0					
ANR	725471	Condition	"! r_bin_select_bfid ( core -> bin , bfid )"	3906:5:113286:113321	725467	0	True				
ANR	725472	UnaryOperationExpression	"! r_bin_select_bfid ( core -> bin , bfid )"		725467	0					
ANR	725473	UnaryOperator	!		725467	0					
ANR	725474	CallExpression	"r_bin_select_bfid ( core -> bin , bfid )"		725467	1					
ANR	725475	Callee	r_bin_select_bfid		725467	0					
ANR	725476	Identifier	r_bin_select_bfid		725467	0					
ANR	725477	ArgumentList	core -> bin		725467	1					
ANR	725478	Argument	core -> bin		725467	0					
ANR	725479	PtrMemberAccess	core -> bin		725467	0					
ANR	725480	Identifier	core		725467	0					
ANR	725481	Identifier	bin		725467	1					
ANR	725482	Argument	bfid		725467	1					
ANR	725483	Identifier	bfid		725467	0					
ANR	725484	CompoundStatement		2:43:44:44	725467	1					
ANR	725485	ReturnStatement	return false ;	3907:2:113328:113340	725467	0	True				
ANR	725486	Identifier	false		725467	0					
ANR	725487	IdentifierDeclStatement	RBinFile * bf = r_bin_cur ( core -> bin ) ;	3909:1:113346:113382	725467	1	True				
ANR	725488	IdentifierDecl	* bf = r_bin_cur ( core -> bin )		725467	0					
ANR	725489	IdentifierDeclType	RBinFile *		725467	0					
ANR	725490	Identifier	bf		725467	1					
ANR	725491	AssignmentExpression	* bf = r_bin_cur ( core -> bin )		725467	2		=			
ANR	725492	Identifier	bf		725467	0					
ANR	725493	CallExpression	r_bin_cur ( core -> bin )		725467	1					
ANR	725494	Callee	r_bin_cur		725467	0					
ANR	725495	Identifier	r_bin_cur		725467	0					
ANR	725496	ArgumentList	core -> bin		725467	1					
ANR	725497	Argument	core -> bin		725467	0					
ANR	725498	PtrMemberAccess	core -> bin		725467	0					
ANR	725499	Identifier	core		725467	0					
ANR	725500	Identifier	bin		725467	1					
ANR	725501	IfStatement	if ( bf )		725467	2					
ANR	725502	Condition	bf	3910:5:113389:113390	725467	0	True				
ANR	725503	Identifier	bf		725467	0					
ANR	725504	CompoundStatement		6:9:113:113	725467	1					
ANR	725505	ExpressionStatement	"r_io_use_fd ( core -> io , bf -> fd )"	3911:2:113397:113427	725467	0	True				
ANR	725506	CallExpression	"r_io_use_fd ( core -> io , bf -> fd )"		725467	0					
ANR	725507	Callee	r_io_use_fd		725467	0					
ANR	725508	Identifier	r_io_use_fd		725467	0					
ANR	725509	ArgumentList	core -> io		725467	1					
ANR	725510	Argument	core -> io		725467	0					
ANR	725511	PtrMemberAccess	core -> io		725467	0					
ANR	725512	Identifier	core		725467	0					
ANR	725513	Identifier	io		725467	1					
ANR	725514	Argument	bf -> fd		725467	1					
ANR	725515	PtrMemberAccess	bf -> fd		725467	0					
ANR	725516	Identifier	bf		725467	0					
ANR	725517	Identifier	fd		725467	1					
ANR	725518	ExpressionStatement	core -> switch_file_view = 0	3914:1:113492:113518	725467	3	True				
ANR	725519	AssignmentExpression	core -> switch_file_view = 0		725467	0		=			
ANR	725520	PtrMemberAccess	core -> switch_file_view		725467	0					
ANR	725521	Identifier	core		725467	0					
ANR	725522	Identifier	switch_file_view		725467	1					
ANR	725523	PrimaryExpression	0		725467	1					
ANR	725524	ReturnStatement	"return bf && r_core_bin_set_env ( core , bf ) && r_core_block_read ( core ) ;"	3915:1:113521:113591	725467	4	True				
ANR	725525	AndExpression	"bf && r_core_bin_set_env ( core , bf ) && r_core_block_read ( core )"		725467	0		&&			
ANR	725526	Identifier	bf		725467	0					
ANR	725527	AndExpression	"r_core_bin_set_env ( core , bf ) && r_core_block_read ( core )"		725467	1		&&			
ANR	725528	CallExpression	"r_core_bin_set_env ( core , bf )"		725467	0					
ANR	725529	Callee	r_core_bin_set_env		725467	0					
ANR	725530	Identifier	r_core_bin_set_env		725467	0					
ANR	725531	ArgumentList	core		725467	1					
ANR	725532	Argument	core		725467	0					
ANR	725533	Identifier	core		725467	0					
ANR	725534	Argument	bf		725467	1					
ANR	725535	Identifier	bf		725467	0					
ANR	725536	CallExpression	r_core_block_read ( core )		725467	1					
ANR	725537	Callee	r_core_block_read		725467	0					
ANR	725538	Identifier	r_core_block_read		725467	0					
ANR	725539	ArgumentList	core		725467	1					
ANR	725540	Argument	core		725467	0					
ANR	725541	Identifier	core		725467	0					
ANR	725542	ReturnType	R_API bool		725467	1					
ANR	725543	Identifier	r_core_bin_raise		725467	2					
ANR	725544	ParameterList	"RCore * core , ut32 bfid"		725467	3					
ANR	725545	Parameter	RCore * core	3905:28:113255:113265	725467	0	True				
ANR	725546	ParameterType	RCore *		725467	0					
ANR	725547	Identifier	core		725467	1					
ANR	725548	Parameter	ut32 bfid	3905:41:113268:113276	725467	1	True				
ANR	725549	ParameterType	ut32		725467	0					
ANR	725550	Identifier	bfid		725467	1					
ANR	725551	CFGEntryNode	ENTRY		725467		True				
ANR	725552	CFGExitNode	EXIT		725467		True				
ANR	725553	Symbol	r_core_bin_set_env		725467						
ANR	725554	Symbol	bf		725467						
ANR	725555	Symbol	* core		725467						
ANR	725556	Symbol	false		725467						
ANR	725557	Symbol	r_bin_cur		725467						
ANR	725558	Symbol	* bf		725467						
ANR	725559	Symbol	core -> switch_file_view		725467						
ANR	725560	Symbol	core		725467						
ANR	725561	Symbol	bfid		725467						
ANR	725562	Symbol	bf -> fd		725467						
ANR	725563	Symbol	core -> io		725467						
ANR	725564	Symbol	r_bin_select_bfid		725467						
ANR	725565	Symbol	core -> bin		725467						
ANR	725566	Symbol	r_core_block_read		725467						
ANR	725567	Function	r_core_bin_delete	3918:0:113596:114132							
ANR	725568	FunctionDef	"r_core_bin_delete (RCore * core , ut32 bf_id)"		725567	0					
ANR	725569	CompoundStatement		3918:54:113650:114132	725567	0					
ANR	725570	IfStatement	if ( bf_id == UT32_MAX )		725567	0					
ANR	725571	Condition	bf_id == UT32_MAX	3919:5:113657:113673	725567	0	True				
ANR	725572	EqualityExpression	bf_id == UT32_MAX		725567	0		==			
ANR	725573	Identifier	bf_id		725567	0					
ANR	725574	Identifier	UT32_MAX		725567	1					
ANR	725575	CompoundStatement		2:24:25:25	725567	1					
ANR	725576	ReturnStatement	return false ;	3920:2:113680:113692	725567	0	True				
ANR	725577	Identifier	false		725567	0					
ANR	725578	IfStatement	"if ( ! r_bin_object_delete ( core -> bin , bf_id ) )"		725567	1					
ANR	725579	Condition	"! r_bin_object_delete ( core -> bin , bf_id )"	3923:5:113708:113746	725567	0	True				
ANR	725580	UnaryOperationExpression	"! r_bin_object_delete ( core -> bin , bf_id )"		725567	0					
ANR	725581	UnaryOperator	!		725567	0					
ANR	725582	CallExpression	"r_bin_object_delete ( core -> bin , bf_id )"		725567	1					
ANR	725583	Callee	r_bin_object_delete		725567	0					
ANR	725584	Identifier	r_bin_object_delete		725567	0					
ANR	725585	ArgumentList	core -> bin		725567	1					
ANR	725586	Argument	core -> bin		725567	0					
ANR	725587	PtrMemberAccess	core -> bin		725567	0					
ANR	725588	Identifier	core		725567	0					
ANR	725589	Identifier	bin		725567	1					
ANR	725590	Argument	bf_id		725567	1					
ANR	725591	Identifier	bf_id		725567	0					
ANR	725592	CompoundStatement		6:46:98:98	725567	1					
ANR	725593	ReturnStatement	return false ;	3924:2:113753:113765	725567	0	True				
ANR	725594	Identifier	false		725567	0					
ANR	725595	IdentifierDeclStatement	RBinFile * bf = r_bin_cur ( core -> bin ) ;	3927:1:113793:113829	725567	2	True				
ANR	725596	IdentifierDecl	* bf = r_bin_cur ( core -> bin )		725567	0					
ANR	725597	IdentifierDeclType	RBinFile *		725567	0					
ANR	725598	Identifier	bf		725567	1					
ANR	725599	AssignmentExpression	* bf = r_bin_cur ( core -> bin )		725567	2		=			
ANR	725600	Identifier	bf		725567	0					
ANR	725601	CallExpression	r_bin_cur ( core -> bin )		725567	1					
ANR	725602	Callee	r_bin_cur		725567	0					
ANR	725603	Identifier	r_bin_cur		725567	0					
ANR	725604	ArgumentList	core -> bin		725567	1					
ANR	725605	Argument	core -> bin		725567	0					
ANR	725606	PtrMemberAccess	core -> bin		725567	0					
ANR	725607	Identifier	core		725567	0					
ANR	725608	Identifier	bin		725567	1					
ANR	725609	IfStatement	if ( bf )		725567	3					
ANR	725610	Condition	bf	3928:5:113836:113837	725567	0	True				
ANR	725611	Identifier	bf		725567	0					
ANR	725612	CompoundStatement		11:9:189:189	725567	1					
ANR	725613	ExpressionStatement	"r_io_use_fd ( core -> io , bf -> fd )"	3929:2:113844:113874	725567	0	True				
ANR	725614	CallExpression	"r_io_use_fd ( core -> io , bf -> fd )"		725567	0					
ANR	725615	Callee	r_io_use_fd		725567	0					
ANR	725616	Identifier	r_io_use_fd		725567	0					
ANR	725617	ArgumentList	core -> io		725567	1					
ANR	725618	Argument	core -> io		725567	0					
ANR	725619	PtrMemberAccess	core -> io		725567	0					
ANR	725620	Identifier	core		725567	0					
ANR	725621	Identifier	io		725567	1					
ANR	725622	Argument	bf -> fd		725567	1					
ANR	725623	PtrMemberAccess	bf -> fd		725567	0					
ANR	725624	Identifier	bf		725567	0					
ANR	725625	Identifier	fd		725567	1					
ANR	725626	ExpressionStatement	"r_bin_file_delete ( core -> bin , bf_id )"	3932:1:113887:113923	725567	4	True				
ANR	725627	CallExpression	"r_bin_file_delete ( core -> bin , bf_id )"		725567	0					
ANR	725628	Callee	r_bin_file_delete		725567	0					
ANR	725629	Identifier	r_bin_file_delete		725567	0					
ANR	725630	ArgumentList	core -> bin		725567	1					
ANR	725631	Argument	core -> bin		725567	0					
ANR	725632	PtrMemberAccess	core -> bin		725567	0					
ANR	725633	Identifier	core		725567	0					
ANR	725634	Identifier	bin		725567	1					
ANR	725635	Argument	bf_id		725567	1					
ANR	725636	Identifier	bf_id		725567	0					
ANR	725637	IdentifierDeclStatement	"RBinFile * bf = r_bin_file_at ( core -> bin , core -> offset ) ;"	3933:1:113926:113980	725567	5	True				
ANR	725638	IdentifierDecl	"* bf = r_bin_file_at ( core -> bin , core -> offset )"		725567	0					
ANR	725639	IdentifierDeclType	RBinFile *		725567	0					
ANR	725640	Identifier	bf		725567	1					
ANR	725641	AssignmentExpression	"* bf = r_bin_file_at ( core -> bin , core -> offset )"		725567	2		=			
ANR	725642	Identifier	bf		725567	0					
ANR	725643	CallExpression	"r_bin_file_at ( core -> bin , core -> offset )"		725567	1					
ANR	725644	Callee	r_bin_file_at		725567	0					
ANR	725645	Identifier	r_bin_file_at		725567	0					
ANR	725646	ArgumentList	core -> bin		725567	1					
ANR	725647	Argument	core -> bin		725567	0					
ANR	725648	PtrMemberAccess	core -> bin		725567	0					
ANR	725649	Identifier	core		725567	0					
ANR	725650	Identifier	bin		725567	1					
ANR	725651	Argument	core -> offset		725567	1					
ANR	725652	PtrMemberAccess	core -> offset		725567	0					
ANR	725653	Identifier	core		725567	0					
ANR	725654	Identifier	offset		725567	1					
ANR	725655	IfStatement	if ( bf )		725567	6					
ANR	725656	Condition	bf	3934:5:113987:113988	725567	0	True				
ANR	725657	Identifier	bf		725567	0					
ANR	725658	CompoundStatement		17:9:340:340	725567	1					
ANR	725659	ExpressionStatement	"r_io_use_fd ( core -> io , bf -> fd )"	3935:2:113995:114025	725567	0	True				
ANR	725660	CallExpression	"r_io_use_fd ( core -> io , bf -> fd )"		725567	0					
ANR	725661	Callee	r_io_use_fd		725567	0					
ANR	725662	Identifier	r_io_use_fd		725567	0					
ANR	725663	ArgumentList	core -> io		725567	1					
ANR	725664	Argument	core -> io		725567	0					
ANR	725665	PtrMemberAccess	core -> io		725567	0					
ANR	725666	Identifier	core		725567	0					
ANR	725667	Identifier	io		725567	1					
ANR	725668	Argument	bf -> fd		725567	1					
ANR	725669	PtrMemberAccess	bf -> fd		725567	0					
ANR	725670	Identifier	bf		725567	0					
ANR	725671	Identifier	fd		725567	1					
ANR	725672	ExpressionStatement	core -> switch_file_view = 0	3937:1:114031:114057	725567	7	True				
ANR	725673	AssignmentExpression	core -> switch_file_view = 0		725567	0		=			
ANR	725674	PtrMemberAccess	core -> switch_file_view		725567	0					
ANR	725675	Identifier	core		725567	0					
ANR	725676	Identifier	switch_file_view		725567	1					
ANR	725677	PrimaryExpression	0		725567	1					
ANR	725678	ReturnStatement	"return bf && r_core_bin_set_env ( core , bf ) && r_core_block_read ( core ) ;"	3938:1:114060:114130	725567	8	True				
ANR	725679	AndExpression	"bf && r_core_bin_set_env ( core , bf ) && r_core_block_read ( core )"		725567	0		&&			
ANR	725680	Identifier	bf		725567	0					
ANR	725681	AndExpression	"r_core_bin_set_env ( core , bf ) && r_core_block_read ( core )"		725567	1		&&			
ANR	725682	CallExpression	"r_core_bin_set_env ( core , bf )"		725567	0					
ANR	725683	Callee	r_core_bin_set_env		725567	0					
ANR	725684	Identifier	r_core_bin_set_env		725567	0					
ANR	725685	ArgumentList	core		725567	1					
ANR	725686	Argument	core		725567	0					
ANR	725687	Identifier	core		725567	0					
ANR	725688	Argument	bf		725567	1					
ANR	725689	Identifier	bf		725567	0					
ANR	725690	CallExpression	r_core_block_read ( core )		725567	1					
ANR	725691	Callee	r_core_block_read		725567	0					
ANR	725692	Identifier	r_core_block_read		725567	0					
ANR	725693	ArgumentList	core		725567	1					
ANR	725694	Argument	core		725567	0					
ANR	725695	Identifier	core		725567	0					
ANR	725696	ReturnType	R_API bool		725567	1					
ANR	725697	Identifier	r_core_bin_delete		725567	2					
ANR	725698	ParameterList	"RCore * core , ut32 bf_id"		725567	3					
ANR	725699	Parameter	RCore * core	3918:29:113625:113635	725567	0	True				
ANR	725700	ParameterType	RCore *		725567	0					
ANR	725701	Identifier	core		725567	1					
ANR	725702	Parameter	ut32 bf_id	3918:42:113638:113647	725567	1	True				
ANR	725703	ParameterType	ut32		725567	0					
ANR	725704	Identifier	bf_id		725567	1					
ANR	725705	CFGEntryNode	ENTRY		725567		True				
ANR	725706	CFGExitNode	EXIT		725567		True				
ANR	725707	Symbol	UT32_MAX		725567						
ANR	725708	Symbol	bf_id		725567						
ANR	725709	Symbol	r_bin_object_delete		725567						
ANR	725710	Symbol	r_bin_file_at		725567						
ANR	725711	Symbol	r_core_bin_set_env		725567						
ANR	725712	Symbol	bf		725567						
ANR	725713	Symbol	false		725567						
ANR	725714	Symbol	* core		725567						
ANR	725715	Symbol	r_bin_cur		725567						
ANR	725716	Symbol	* bf		725567						
ANR	725717	Symbol	core -> offset		725567						
ANR	725718	Symbol	core -> switch_file_view		725567						
ANR	725719	Symbol	core		725567						
ANR	725720	Symbol	bf -> fd		725567						
ANR	725721	Symbol	core -> io		725567						
ANR	725722	Symbol	core -> bin		725567						
ANR	725723	Symbol	r_core_block_read		725567						
ANR	725724	Function	r_core_bin_file_print	3941:0:114135:115759							
ANR	725725	FunctionDef	"r_core_bin_file_print (RCore * core , RBinFile * bf , int mode)"		725724	0					
ANR	725726	CompoundStatement		3941:71:114206:115759	725724	0					
ANR	725727	ExpressionStatement	"r_return_val_if_fail ( core && bf && bf -> o , NULL )"	3942:1:114209:114257	725724	0	True				
ANR	725728	CallExpression	"r_return_val_if_fail ( core && bf && bf -> o , NULL )"		725724	0					
ANR	725729	Callee	r_return_val_if_fail		725724	0					
ANR	725730	Identifier	r_return_val_if_fail		725724	0					
ANR	725731	ArgumentList	core && bf && bf -> o		725724	1					
ANR	725732	Argument	core && bf && bf -> o		725724	0					
ANR	725733	AndExpression	core && bf && bf -> o		725724	0		&&			
ANR	725734	Identifier	core		725724	0					
ANR	725735	AndExpression	bf && bf -> o		725724	1		&&			
ANR	725736	Identifier	bf		725724	0					
ANR	725737	PtrMemberAccess	bf -> o		725724	1					
ANR	725738	Identifier	bf		725724	0					
ANR	725739	Identifier	o		725724	1					
ANR	725740	Argument	NULL		725724	1					
ANR	725741	Identifier	NULL		725724	0					
ANR	725742	IdentifierDeclStatement	const char * name = bf ? bf -> file : NULL ;	3943:1:114260:114299	725724	1	True				
ANR	725743	IdentifierDecl	* name = bf ? bf -> file : NULL		725724	0					
ANR	725744	IdentifierDeclType	const char *		725724	0					
ANR	725745	Identifier	name		725724	1					
ANR	725746	AssignmentExpression	* name = bf ? bf -> file : NULL		725724	2		=			
ANR	725747	Identifier	name		725724	0					
ANR	725748	ConditionalExpression	bf ? bf -> file : NULL		725724	1					
ANR	725749	Condition	bf		725724	0					
ANR	725750	Identifier	bf		725724	0					
ANR	725751	PtrMemberAccess	bf -> file		725724	1					
ANR	725752	Identifier	bf		725724	0					
ANR	725753	Identifier	file		725724	1					
ANR	725754	Identifier	NULL		725724	2					
ANR	725755	ExpressionStatement	( void ) r_bin_get_info ( core -> bin )	3944:1:114302:114334	725724	2	True				
ANR	725756	CastExpression	( void ) r_bin_get_info ( core -> bin )		725724	0					
ANR	725757	CastTarget	void		725724	0					
ANR	725758	CallExpression	r_bin_get_info ( core -> bin )		725724	1					
ANR	725759	Callee	r_bin_get_info		725724	0					
ANR	725760	Identifier	r_bin_get_info		725724	0					
ANR	725761	ArgumentList	core -> bin		725724	1					
ANR	725762	Argument	core -> bin		725724	0					
ANR	725763	PtrMemberAccess	core -> bin		725724	0					
ANR	725764	Identifier	core		725724	0					
ANR	725765	Identifier	bin		725724	1					
ANR	725766	IdentifierDeclStatement	ut32 bin_sz = bf ? bf -> size : 0 ;	3945:1:114388:114419	725724	3	True				
ANR	725767	IdentifierDecl	bin_sz = bf ? bf -> size : 0		725724	0					
ANR	725768	IdentifierDeclType	ut32		725724	0					
ANR	725769	Identifier	bin_sz		725724	1					
ANR	725770	AssignmentExpression	bin_sz = bf ? bf -> size : 0		725724	2		=			
ANR	725771	Identifier	bin_sz		725724	0					
ANR	725772	ConditionalExpression	bf ? bf -> size : 0		725724	1					
ANR	725773	Condition	bf		725724	0					
ANR	725774	Identifier	bf		725724	0					
ANR	725775	PtrMemberAccess	bf -> size		725724	1					
ANR	725776	Identifier	bf		725724	0					
ANR	725777	Identifier	size		725724	1					
ANR	725778	PrimaryExpression	0		725724	2					
ANR	725779	SwitchStatement	switch ( mode )		725724	4					
ANR	725780	Condition	mode	3948:9:114486:114489	725724	0	True				
ANR	725781	Identifier	mode		725724	0					
ANR	725782	CompoundStatement		8:15:285:285	725724	1					
ANR	725783	Label	case '*' :	3949:1:114495:114503	725724	0	True				
ANR	725784	CompoundStatement		11:3:305:335	725724	1					
ANR	725785	IdentifierDeclStatement	char * n = __filterShell ( name ) ;	3951:3:114512:114542	725724	0	True				
ANR	725786	IdentifierDecl	* n = __filterShell ( name )		725724	0					
ANR	725787	IdentifierDeclType	char *		725724	0					
ANR	725788	Identifier	n		725724	1					
ANR	725789	AssignmentExpression	* n = __filterShell ( name )		725724	2		=			
ANR	725790	Identifier	n		725724	0					
ANR	725791	CallExpression	__filterShell ( name )		725724	1					
ANR	725792	Callee	__filterShell		725724	0					
ANR	725793	Identifier	__filterShell		725724	0					
ANR	725794	ArgumentList	name		725724	1					
ANR	725795	Argument	name		725724	0					
ANR	725796	Identifier	name		725724	0					
ANR	725797	Statement	r_cons_printf	3952:3:114547:114559	725724	1	True				
ANR	725798	Statement	(	3952:17:114561:114561	725724	2	True				
ANR	725799	Statement	"""oba 0x%08"""	3952:18:114562:114572	725724	3	True				
ANR	725800	Statement	PFMT64x	3952:29:114573:114579	725724	4	True				
ANR	725801	Statement	""" %s # %d\\n"""	3952:36:114580:114591	725724	5	True				
ANR	725802	Statement	","	3952:48:114592:114592	725724	6	True				
ANR	725803	Statement	bf	3952:50:114594:114595	725724	7	True				
ANR	725804	Statement	->	3952:52:114596:114597	725724	8	True				
ANR	725805	Statement	o	3952:54:114598:114598	725724	9	True				
ANR	725806	Statement	->	3952:55:114599:114600	725724	10	True				
ANR	725807	Statement	boffset	3952:57:114601:114607	725724	11	True				
ANR	725808	Statement	","	3952:64:114608:114608	725724	12	True				
ANR	725809	Statement	n	3952:66:114610:114610	725724	13	True				
ANR	725810	Statement	","	3952:67:114611:114611	725724	14	True				
ANR	725811	Statement	bf	3952:69:114613:114614	725724	15	True				
ANR	725812	Statement	->	3952:71:114615:114616	725724	16	True				
ANR	725813	Statement	id	3952:73:114617:114618	725724	17	True				
ANR	725814	Statement	)	3952:75:114619:114619	725724	18	True				
ANR	725815	ExpressionStatement		3952:76:114620:114620	725724	19	True				
ANR	725816	ExpressionStatement	free ( n )	3953:3:114625:114633	725724	20	True				
ANR	725817	CallExpression	free ( n )		725724	0					
ANR	725818	Callee	free		725724	0					
ANR	725819	Identifier	free		725724	0					
ANR	725820	ArgumentList	n		725724	1					
ANR	725821	Argument	n		725724	0					
ANR	725822	Identifier	n		725724	0					
ANR	725823	BreakStatement	break ;	3955:2:114641:114646	725724	2	True				
ANR	725824	Label	case 'q' :	3956:1:114649:114657	725724	3	True				
ANR	725825	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , bf -> id )"	3957:2:114661:114691	725724	4	True				
ANR	725826	CallExpression	"r_cons_printf ( ""%d\\n"" , bf -> id )"		725724	0					
ANR	725827	Callee	r_cons_printf		725724	0					
ANR	725828	Identifier	r_cons_printf		725724	0					
ANR	725829	ArgumentList	"""%d\\n"""		725724	1					
ANR	725830	Argument	"""%d\\n"""		725724	0					
ANR	725831	PrimaryExpression	"""%d\\n"""		725724	0					
ANR	725832	Argument	bf -> id		725724	1					
ANR	725833	PtrMemberAccess	bf -> id		725724	0					
ANR	725834	Identifier	bf		725724	0					
ANR	725835	Identifier	id		725724	1					
ANR	725836	BreakStatement	break ;	3958:2:114695:114700	725724	5	True				
ANR	725837	Label	case 'j' :	3959:1:114703:114711	725724	6	True				
ANR	725838	ExpressionStatement	"r_cons_printf ( ""{\\""name\\"":\\""%s\\"",\\""iofd\\"":%d,\\""bfid\\"":%d,\\""size\\"":%d,\\""objs\\"":["" , name ? name : """" , bf -> fd , bf -> id , bin_sz )"	3962:2:114814:114938	725724	7	True				
ANR	725839	CallExpression	"r_cons_printf ( ""{\\""name\\"":\\""%s\\"",\\""iofd\\"":%d,\\""bfid\\"":%d,\\""size\\"":%d,\\""objs\\"":["" , name ? name : """" , bf -> fd , bf -> id , bin_sz )"		725724	0					
ANR	725840	Callee	r_cons_printf		725724	0					
ANR	725841	Identifier	r_cons_printf		725724	0					
ANR	725842	ArgumentList	"""{\\""name\\"":\\""%s\\"",\\""iofd\\"":%d,\\""bfid\\"":%d,\\""size\\"":%d,\\""objs\\"":["""		725724	1					
ANR	725843	Argument	"""{\\""name\\"":\\""%s\\"",\\""iofd\\"":%d,\\""bfid\\"":%d,\\""size\\"":%d,\\""objs\\"":["""		725724	0					
ANR	725844	PrimaryExpression	"""{\\""name\\"":\\""%s\\"",\\""iofd\\"":%d,\\""bfid\\"":%d,\\""size\\"":%d,\\""objs\\"":["""		725724	0					
ANR	725845	Argument	"name ? name : """""		725724	1					
ANR	725846	ConditionalExpression	"name ? name : """""		725724	0					
ANR	725847	Condition	name		725724	0					
ANR	725848	Identifier	name		725724	0					
ANR	725849	Identifier	name		725724	1					
ANR	725850	PrimaryExpression	""""""		725724	2					
ANR	725851	Argument	bf -> fd		725724	2					
ANR	725852	PtrMemberAccess	bf -> fd		725724	0					
ANR	725853	Identifier	bf		725724	0					
ANR	725854	Identifier	fd		725724	1					
ANR	725855	Argument	bf -> id		725724	3					
ANR	725856	PtrMemberAccess	bf -> id		725724	0					
ANR	725857	Identifier	bf		725724	0					
ANR	725858	Identifier	id		725724	1					
ANR	725859	Argument	bin_sz		725724	4					
ANR	725860	Identifier	bin_sz		725724	0					
ANR	725861	CompoundStatement		29:3:902:972	725724	8					
ANR	725862	IdentifierDeclStatement	RBinObject * obj = bf -> o ;	3965:3:114947:114970	725724	0	True				
ANR	725863	IdentifierDecl	* obj = bf -> o		725724	0					
ANR	725864	IdentifierDeclType	RBinObject *		725724	0					
ANR	725865	Identifier	obj		725724	1					
ANR	725866	AssignmentExpression	* obj = bf -> o		725724	2		=			
ANR	725867	Identifier	obj		725724	0					
ANR	725868	PtrMemberAccess	bf -> o		725724	1					
ANR	725869	Identifier	bf		725724	0					
ANR	725870	Identifier	o		725724	1					
ANR	725871	IdentifierDeclStatement	RBinInfo * info = obj -> info ;	3966:3:114975:115001	725724	1	True				
ANR	725872	IdentifierDecl	* info = obj -> info		725724	0					
ANR	725873	IdentifierDeclType	RBinInfo *		725724	0					
ANR	725874	Identifier	info		725724	1					
ANR	725875	AssignmentExpression	* info = obj -> info		725724	2		=			
ANR	725876	Identifier	info		725724	0					
ANR	725877	PtrMemberAccess	obj -> info		725724	1					
ANR	725878	Identifier	obj		725724	0					
ANR	725879	Identifier	info		725724	1					
ANR	725880	IdentifierDeclStatement	ut8 bits = info ? info -> bits : 0 ;	3967:3:115006:115038	725724	2	True				
ANR	725881	IdentifierDecl	bits = info ? info -> bits : 0		725724	0					
ANR	725882	IdentifierDeclType	ut8		725724	0					
ANR	725883	Identifier	bits		725724	1					
ANR	725884	AssignmentExpression	bits = info ? info -> bits : 0		725724	2		=			
ANR	725885	Identifier	bits		725724	0					
ANR	725886	ConditionalExpression	info ? info -> bits : 0		725724	1					
ANR	725887	Condition	info		725724	0					
ANR	725888	Identifier	info		725724	0					
ANR	725889	PtrMemberAccess	info -> bits		725724	1					
ANR	725890	Identifier	info		725724	0					
ANR	725891	Identifier	bits		725724	1					
ANR	725892	PrimaryExpression	0		725724	2					
ANR	725893	IdentifierDeclStatement	"const char * asmarch = r_config_get ( core -> config , ""asm.arch"" ) ;"	3968:3:115043:115104	725724	3	True				
ANR	725894	IdentifierDecl	"* asmarch = r_config_get ( core -> config , ""asm.arch"" )"		725724	0					
ANR	725895	IdentifierDeclType	const char *		725724	0					
ANR	725896	Identifier	asmarch		725724	1					
ANR	725897	AssignmentExpression	"* asmarch = r_config_get ( core -> config , ""asm.arch"" )"		725724	2		=			
ANR	725898	Identifier	asmarch		725724	0					
ANR	725899	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		725724	1					
ANR	725900	Callee	r_config_get		725724	0					
ANR	725901	Identifier	r_config_get		725724	0					
ANR	725902	ArgumentList	core -> config		725724	1					
ANR	725903	Argument	core -> config		725724	0					
ANR	725904	PtrMemberAccess	core -> config		725724	0					
ANR	725905	Identifier	core		725724	0					
ANR	725906	Identifier	config		725724	1					
ANR	725907	Argument	"""asm.arch"""		725724	1					
ANR	725908	PrimaryExpression	"""asm.arch"""		725724	0					
ANR	725909	IdentifierDeclStatement	"const char * arch = info ? info -> arch ? info -> arch : asmarch : ""unknown"" ;"	3969:3:115109:115179	725724	4	True				
ANR	725910	IdentifierDecl	"* arch = info ? info -> arch ? info -> arch : asmarch : ""unknown"""		725724	0					
ANR	725911	IdentifierDeclType	const char *		725724	0					
ANR	725912	Identifier	arch		725724	1					
ANR	725913	AssignmentExpression	"* arch = info ? info -> arch ? info -> arch : asmarch : ""unknown"""		725724	2		=			
ANR	725914	Identifier	arch		725724	0					
ANR	725915	ConditionalExpression	"info ? info -> arch ? info -> arch : asmarch : ""unknown"""		725724	1					
ANR	725916	Condition	info		725724	0					
ANR	725917	Identifier	info		725724	0					
ANR	725918	ConditionalExpression	info -> arch ? info -> arch : asmarch		725724	1					
ANR	725919	Condition	info -> arch		725724	0					
ANR	725920	PtrMemberAccess	info -> arch		725724	0					
ANR	725921	Identifier	info		725724	0					
ANR	725922	Identifier	arch		725724	1					
ANR	725923	PtrMemberAccess	info -> arch		725724	1					
ANR	725924	Identifier	info		725724	0					
ANR	725925	Identifier	arch		725724	1					
ANR	725926	Identifier	asmarch		725724	2					
ANR	725927	PrimaryExpression	"""unknown"""		725724	2					
ANR	725928	Statement	r_cons_printf	3970:3:115184:115196	725724	5	True				
ANR	725929	Statement	(	3970:17:115198:115198	725724	6	True				
ANR	725930	Statement	"""{\\""arch\\"":\\""%s\\"",\\""bits\\"":%d,\\""binoffset\\"":%"""	3970:18:115199:115244	725724	7	True				
ANR	725931	Statement	PFMT64d	3971:5:115251:115257	725724	8	True				
ANR	725932	Statement	""",\\""objsize\\"":%"""	3971:12:115258:115273	725724	9	True				
ANR	725933	Statement	PFMT64d	3971:28:115274:115280	725724	10	True				
ANR	725934	Statement	"""}"""	3971:35:115281:115283	725724	11	True				
ANR	725935	Statement	","	3971:38:115284:115284	725724	12	True				
ANR	725936	Statement	arch	3972:5:115291:115294	725724	13	True				
ANR	725937	Statement	","	3972:9:115295:115295	725724	14	True				
ANR	725938	Statement	bits	3972:11:115297:115300	725724	15	True				
ANR	725939	Statement	","	3972:15:115301:115301	725724	16	True				
ANR	725940	Statement	obj	3972:17:115303:115305	725724	17	True				
ANR	725941	Statement	->	3972:20:115306:115307	725724	18	True				
ANR	725942	Statement	boffset	3972:22:115308:115314	725724	19	True				
ANR	725943	Statement	","	3972:29:115315:115315	725724	20	True				
ANR	725944	Statement	obj	3972:31:115317:115319	725724	21	True				
ANR	725945	Statement	->	3972:34:115320:115321	725724	22	True				
ANR	725946	Statement	obj_size	3972:36:115322:115329	725724	23	True				
ANR	725947	Statement	)	3972:44:115330:115330	725724	24	True				
ANR	725948	ExpressionStatement		3972:45:115331:115331	725724	25	True				
ANR	725949	ExpressionStatement	"r_cons_print ( ""]}"" )"	3974:2:115339:115358	725724	9	True				
ANR	725950	CallExpression	"r_cons_print ( ""]}"" )"		725724	0					
ANR	725951	Callee	r_cons_print		725724	0					
ANR	725952	Identifier	r_cons_print		725724	0					
ANR	725953	ArgumentList	"""]}"""		725724	1					
ANR	725954	Argument	"""]}"""		725724	0					
ANR	725955	PrimaryExpression	"""]}"""		725724	0					
ANR	725956	BreakStatement	break ;	3975:2:115362:115367	725724	10	True				
ANR	725957	Label	default :	3976:1:115370:115377	725724	11	True				
ANR	725958	Identifier	default		725724	0					
ANR	725959	CompoundStatement		41:3:1315:1384	725724	12					
ANR	725960	IdentifierDeclStatement	RBinInfo * info = bf -> o -> info ;	3978:3:115386:115414	725724	0	True				
ANR	725961	IdentifierDecl	* info = bf -> o -> info		725724	0					
ANR	725962	IdentifierDeclType	RBinInfo *		725724	0					
ANR	725963	Identifier	info		725724	1					
ANR	725964	AssignmentExpression	* info = bf -> o -> info		725724	2		=			
ANR	725965	Identifier	info		725724	0					
ANR	725966	PtrMemberAccess	bf -> o -> info		725724	1					
ANR	725967	PtrMemberAccess	bf -> o		725724	0					
ANR	725968	Identifier	bf		725724	0					
ANR	725969	Identifier	o		725724	1					
ANR	725970	Identifier	info		725724	1					
ANR	725971	IdentifierDeclStatement	ut8 bits = info ? info -> bits : 0 ;	3979:3:115419:115451	725724	1	True				
ANR	725972	IdentifierDecl	bits = info ? info -> bits : 0		725724	0					
ANR	725973	IdentifierDeclType	ut8		725724	0					
ANR	725974	Identifier	bits		725724	1					
ANR	725975	AssignmentExpression	bits = info ? info -> bits : 0		725724	2		=			
ANR	725976	Identifier	bits		725724	0					
ANR	725977	ConditionalExpression	info ? info -> bits : 0		725724	1					
ANR	725978	Condition	info		725724	0					
ANR	725979	Identifier	info		725724	0					
ANR	725980	PtrMemberAccess	info -> bits		725724	1					
ANR	725981	Identifier	info		725724	0					
ANR	725982	Identifier	bits		725724	1					
ANR	725983	PrimaryExpression	0		725724	2					
ANR	725984	IdentifierDeclStatement	"const char * asmarch = r_config_get ( core -> config , ""asm.arch"" ) ;"	3980:3:115456:115517	725724	2	True				
ANR	725985	IdentifierDecl	"* asmarch = r_config_get ( core -> config , ""asm.arch"" )"		725724	0					
ANR	725986	IdentifierDeclType	const char *		725724	0					
ANR	725987	Identifier	asmarch		725724	1					
ANR	725988	AssignmentExpression	"* asmarch = r_config_get ( core -> config , ""asm.arch"" )"		725724	2		=			
ANR	725989	Identifier	asmarch		725724	0					
ANR	725990	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		725724	1					
ANR	725991	Callee	r_config_get		725724	0					
ANR	725992	Identifier	r_config_get		725724	0					
ANR	725993	ArgumentList	core -> config		725724	1					
ANR	725994	Argument	core -> config		725724	0					
ANR	725995	PtrMemberAccess	core -> config		725724	0					
ANR	725996	Identifier	core		725724	0					
ANR	725997	Identifier	config		725724	1					
ANR	725998	Argument	"""asm.arch"""		725724	1					
ANR	725999	PrimaryExpression	"""asm.arch"""		725724	0					
ANR	726000	IdentifierDeclStatement	"const char * arch = info ? info -> arch ? info -> arch : asmarch : ""unknown"" ;"	3981:3:115522:115591	725724	3	True				
ANR	726001	IdentifierDecl	"* arch = info ? info -> arch ? info -> arch : asmarch : ""unknown"""		725724	0					
ANR	726002	IdentifierDeclType	const char *		725724	0					
ANR	726003	Identifier	arch		725724	1					
ANR	726004	AssignmentExpression	"* arch = info ? info -> arch ? info -> arch : asmarch : ""unknown"""		725724	2		=			
ANR	726005	Identifier	arch		725724	0					
ANR	726006	ConditionalExpression	"info ? info -> arch ? info -> arch : asmarch : ""unknown"""		725724	1					
ANR	726007	Condition	info		725724	0					
ANR	726008	Identifier	info		725724	0					
ANR	726009	ConditionalExpression	info -> arch ? info -> arch : asmarch		725724	1					
ANR	726010	Condition	info -> arch		725724	0					
ANR	726011	PtrMemberAccess	info -> arch		725724	0					
ANR	726012	Identifier	info		725724	0					
ANR	726013	Identifier	arch		725724	1					
ANR	726014	PtrMemberAccess	info -> arch		725724	1					
ANR	726015	Identifier	info		725724	0					
ANR	726016	Identifier	arch		725724	1					
ANR	726017	Identifier	asmarch		725724	2					
ANR	726018	PrimaryExpression	"""unknown"""		725724	2					
ANR	726019	Statement	r_cons_printf	3982:3:115596:115608	725724	4	True				
ANR	726020	Statement	(	3982:17:115610:115610	725724	5	True				
ANR	726021	Statement	"""%d %d %s-%d ba:0x%08"""	3982:18:115611:115632	725724	6	True				
ANR	726022	Statement	PFMT64x	3982:40:115633:115639	725724	7	True				
ANR	726023	Statement	""" sz:%"""	3982:47:115640:115646	725724	8	True				
ANR	726024	Statement	PFMT64d	3982:54:115647:115653	725724	9	True				
ANR	726025	Statement	""" %s\\n"""	3982:61:115654:115660	725724	10	True				
ANR	726026	Statement	","	3982:68:115661:115661	725724	11	True				
ANR	726027	Statement	bf	3983:4:115667:115668	725724	12	True				
ANR	726028	Statement	->	3983:6:115669:115670	725724	13	True				
ANR	726029	Statement	id	3983:8:115671:115672	725724	14	True				
ANR	726030	Statement	","	3983:10:115673:115673	725724	15	True				
ANR	726031	Statement	bf	3983:12:115675:115676	725724	16	True				
ANR	726032	Statement	->	3983:14:115677:115678	725724	17	True				
ANR	726033	Statement	fd	3983:16:115679:115680	725724	18	True				
ANR	726034	Statement	","	3983:18:115681:115681	725724	19	True				
ANR	726035	Statement	arch	3983:20:115683:115686	725724	20	True				
ANR	726036	Statement	","	3983:24:115687:115687	725724	21	True				
ANR	726037	Statement	bits	3983:26:115689:115692	725724	22	True				
ANR	726038	Statement	","	3983:30:115693:115693	725724	23	True				
ANR	726039	Statement	bf	3983:32:115695:115696	725724	24	True				
ANR	726040	Statement	->	3983:34:115697:115698	725724	25	True				
ANR	726041	Statement	o	3983:36:115699:115699	725724	26	True				
ANR	726042	Statement	->	3983:37:115700:115701	725724	27	True				
ANR	726043	Statement	baddr	3983:39:115702:115706	725724	28	True				
ANR	726044	Statement	","	3983:44:115707:115707	725724	29	True				
ANR	726045	Statement	bf	3983:46:115709:115710	725724	30	True				
ANR	726046	Statement	->	3983:48:115711:115712	725724	31	True				
ANR	726047	Statement	o	3983:50:115713:115713	725724	32	True				
ANR	726048	Statement	->	3983:51:115714:115715	725724	33	True				
ANR	726049	Statement	size	3983:53:115716:115719	725724	34	True				
ANR	726050	Statement	","	3983:57:115720:115720	725724	35	True				
ANR	726051	Statement	name	3983:59:115722:115725	725724	36	True				
ANR	726052	Statement	)	3983:63:115726:115726	725724	37	True				
ANR	726053	ExpressionStatement		3983:64:115727:115727	725724	38	True				
ANR	726054	BreakStatement	break ;	3985:2:115735:115740	725724	13	True				
ANR	726055	ReturnStatement	return true ;	3987:1:115746:115757	725724	5	True				
ANR	726056	Identifier	true		725724	0					
ANR	726057	ReturnType	static bool		725724	1					
ANR	726058	Identifier	r_core_bin_file_print		725724	2					
ANR	726059	ParameterList	"RCore * core , RBinFile * bf , int mode"		725724	3					
ANR	726060	Parameter	RCore * core	3941:34:114169:114179	725724	0	True				
ANR	726061	ParameterType	RCore *		725724	0					
ANR	726062	Identifier	core		725724	1					
ANR	726063	Parameter	RBinFile * bf	3941:47:114182:114193	725724	1	True				
ANR	726064	ParameterType	RBinFile *		725724	0					
ANR	726065	Identifier	bf		725724	1					
ANR	726066	Parameter	int mode	3941:61:114196:114203	725724	2	True				
ANR	726067	ParameterType	int		725724	0					
ANR	726068	Identifier	mode		725724	1					
ANR	726069	CFGEntryNode	ENTRY		725724		True				
ANR	726070	CFGExitNode	EXIT		725724		True				
ANR	726071	Symbol	bf		725724						
ANR	726072	Symbol	* core		725724						
ANR	726073	Symbol	r_config_get		725724						
ANR	726074	Symbol	info -> bits		725724						
ANR	726075	Symbol	* bf -> o		725724						
ANR	726076	Symbol	mode		725724						
ANR	726077	Symbol	bf -> file		725724						
ANR	726078	Symbol	bf -> fd		725724						
ANR	726079	Symbol	bf -> o		725724						
ANR	726080	Symbol	core -> bin		725724						
ANR	726081	Symbol	info		725724						
ANR	726082	Symbol	info -> arch		725724						
ANR	726083	Symbol	core -> config		725724						
ANR	726084	Symbol	* obj		725724						
ANR	726085	Symbol	NULL		725724						
ANR	726086	Symbol	bits		725724						
ANR	726087	Symbol	* bf		725724						
ANR	726088	Symbol	bin_sz		725724						
ANR	726089	Symbol	__filterShell		725724						
ANR	726090	Symbol	bf -> o -> info		725724						
ANR	726091	Symbol	n		725724						
ANR	726092	Symbol	bf -> id		725724						
ANR	726093	Symbol	obj -> info		725724						
ANR	726094	Symbol	bf -> size		725724						
ANR	726095	Symbol	core		725724						
ANR	726096	Symbol	* * bf		725724						
ANR	726097	Symbol	obj		725724						
ANR	726098	Symbol	asmarch		725724						
ANR	726099	Symbol	name		725724						
ANR	726100	Symbol	true		725724						
ANR	726101	Symbol	* info		725724						
ANR	726102	Symbol	arch		725724						
ANR	726103	Function	r_core_bin_list	3990:0:115762:116341							
ANR	726104	FunctionDef	"r_core_bin_list (RCore * core , int mode)"		726103	0					
ANR	726105	CompoundStatement		3990:49:115811:116341	726103	0					
ANR	726106	IdentifierDeclStatement	int count = 0 ;	3992:1:115870:115883	726103	0	True				
ANR	726107	IdentifierDecl	count = 0		726103	0					
ANR	726108	IdentifierDeclType	int		726103	0					
ANR	726109	Identifier	count		726103	1					
ANR	726110	AssignmentExpression	count = 0		726103	2		=			
ANR	726111	Identifier	count		726103	0					
ANR	726112	PrimaryExpression	0		726103	1					
ANR	726113	IdentifierDeclStatement	RListIter * iter ;	3993:1:115886:115901	726103	1	True				
ANR	726114	IdentifierDecl	* iter		726103	0					
ANR	726115	IdentifierDeclType	RListIter *		726103	0					
ANR	726116	Identifier	iter		726103	1					
ANR	726117	IdentifierDeclStatement	RBinFile * binfile = NULL ;	3994:1:115904:115928	726103	2	True				
ANR	726118	IdentifierDecl	* binfile = NULL		726103	0					
ANR	726119	IdentifierDeclType	RBinFile *		726103	0					
ANR	726120	Identifier	binfile		726103	1					
ANR	726121	AssignmentExpression	* binfile = NULL		726103	2		=			
ANR	726122	Identifier	NULL		726103	0					
ANR	726123	Identifier	NULL		726103	1					
ANR	726124	IdentifierDeclStatement	RBin * bin = core -> bin ;	3995:1:115969:115990	726103	3	True				
ANR	726125	IdentifierDecl	* bin = core -> bin		726103	0					
ANR	726126	IdentifierDeclType	RBin *		726103	0					
ANR	726127	Identifier	bin		726103	1					
ANR	726128	AssignmentExpression	* bin = core -> bin		726103	2		=			
ANR	726129	Identifier	bin		726103	0					
ANR	726130	PtrMemberAccess	core -> bin		726103	1					
ANR	726131	Identifier	core		726103	0					
ANR	726132	Identifier	bin		726103	1					
ANR	726133	IdentifierDeclStatement	const RList * binfiles = bin ? bin -> binfiles : NULL ;	3996:1:115993:116042	726103	4	True				
ANR	726134	IdentifierDecl	* binfiles = bin ? bin -> binfiles : NULL		726103	0					
ANR	726135	IdentifierDeclType	const RList *		726103	0					
ANR	726136	Identifier	binfiles		726103	1					
ANR	726137	AssignmentExpression	* binfiles = bin ? bin -> binfiles : NULL		726103	2		=			
ANR	726138	Identifier	binfiles		726103	0					
ANR	726139	ConditionalExpression	bin ? bin -> binfiles : NULL		726103	1					
ANR	726140	Condition	bin		726103	0					
ANR	726141	Identifier	bin		726103	0					
ANR	726142	PtrMemberAccess	bin -> binfiles		726103	1					
ANR	726143	Identifier	bin		726103	0					
ANR	726144	Identifier	binfiles		726103	1					
ANR	726145	Identifier	NULL		726103	2					
ANR	726146	IfStatement	if ( ! binfiles )		726103	5					
ANR	726147	Condition	! binfiles	3997:5:116049:116057	726103	0	True				
ANR	726148	UnaryOperationExpression	! binfiles		726103	0					
ANR	726149	UnaryOperator	!		726103	0					
ANR	726150	Identifier	binfiles		726103	1					
ANR	726151	CompoundStatement		8:16:248:248	726103	1					
ANR	726152	ReturnStatement	return false ;	3998:2:116064:116076	726103	0	True				
ANR	726153	Identifier	false		726103	0					
ANR	726154	IfStatement	if ( mode == 'j' )		726103	6					
ANR	726155	Condition	mode == 'j'	4000:5:116086:116096	726103	0	True				
ANR	726156	EqualityExpression	mode == 'j'		726103	0		==			
ANR	726157	Identifier	mode		726103	0					
ANR	726158	PrimaryExpression	'j'		726103	1					
ANR	726159	CompoundStatement		11:18:287:287	726103	1					
ANR	726160	ExpressionStatement	"r_cons_print ( ""["" )"	4001:2:116103:116121	726103	0	True				
ANR	726161	CallExpression	"r_cons_print ( ""["" )"		726103	0					
ANR	726162	Callee	r_cons_print		726103	0					
ANR	726163	Identifier	r_cons_print		726103	0					
ANR	726164	ArgumentList	"""["""		726103	1					
ANR	726165	Argument	"""["""		726103	0					
ANR	726166	PrimaryExpression	"""["""		726103	0					
ANR	726167	Statement	r_list_foreach	4003:1:116127:116140	726103	7	True				
ANR	726168	Statement	(	4003:16:116142:116142	726103	8	True				
ANR	726169	Statement	binfiles	4003:17:116143:116150	726103	9	True				
ANR	726170	Statement	","	4003:25:116151:116151	726103	10	True				
ANR	726171	Statement	iter	4003:27:116153:116156	726103	11	True				
ANR	726172	Statement	","	4003:31:116157:116157	726103	12	True				
ANR	726173	Statement	binfile	4003:33:116159:116165	726103	13	True				
ANR	726174	Statement	)	4003:40:116166:116166	726103	14	True				
ANR	726175	CompoundStatement		14:42:356:356	726103	15					
ANR	726176	ExpressionStatement	"r_core_bin_file_print ( core , binfile , mode )"	4004:2:116172:116215	726103	0	True				
ANR	726177	CallExpression	"r_core_bin_file_print ( core , binfile , mode )"		726103	0					
ANR	726178	Callee	r_core_bin_file_print		726103	0					
ANR	726179	Identifier	r_core_bin_file_print		726103	0					
ANR	726180	ArgumentList	core		726103	1					
ANR	726181	Argument	core		726103	0					
ANR	726182	Identifier	core		726103	0					
ANR	726183	Argument	binfile		726103	1					
ANR	726184	Identifier	binfile		726103	0					
ANR	726185	Argument	mode		726103	2					
ANR	726186	Identifier	mode		726103	0					
ANR	726187	IfStatement	if ( iter -> n && mode == 'j' )		726103	1					
ANR	726188	Condition	iter -> n && mode == 'j'	4005:6:116223:116244	726103	0	True				
ANR	726189	AndExpression	iter -> n && mode == 'j'		726103	0		&&			
ANR	726190	PtrMemberAccess	iter -> n		726103	0					
ANR	726191	Identifier	iter		726103	0					
ANR	726192	Identifier	n		726103	1					
ANR	726193	EqualityExpression	mode == 'j'		726103	1		==			
ANR	726194	Identifier	mode		726103	0					
ANR	726195	PrimaryExpression	'j'		726103	1					
ANR	726196	CompoundStatement		16:30:435:435	726103	1					
ANR	726197	ExpressionStatement	"r_cons_print ( "","" )"	4006:3:116252:116270	726103	0	True				
ANR	726198	CallExpression	"r_cons_print ( "","" )"		726103	0					
ANR	726199	Callee	r_cons_print		726103	0					
ANR	726200	Identifier	r_cons_print		726103	0					
ANR	726201	ArgumentList	""","""		726103	1					
ANR	726202	Argument	""","""		726103	0					
ANR	726203	PrimaryExpression	""","""		726103	0					
ANR	726204	IfStatement	if ( mode == 'j' )		726103	16					
ANR	726205	Condition	mode == 'j'	4009:5:116284:116294	726103	0	True				
ANR	726206	EqualityExpression	mode == 'j'		726103	0		==			
ANR	726207	Identifier	mode		726103	0					
ANR	726208	PrimaryExpression	'j'		726103	1					
ANR	726209	CompoundStatement		20:18:485:485	726103	1					
ANR	726210	ExpressionStatement	"r_cons_println ( ""]"" )"	4010:2:116301:116321	726103	0	True				
ANR	726211	CallExpression	"r_cons_println ( ""]"" )"		726103	0					
ANR	726212	Callee	r_cons_println		726103	0					
ANR	726213	Identifier	r_cons_println		726103	0					
ANR	726214	ArgumentList	"""]"""		726103	1					
ANR	726215	Argument	"""]"""		726103	0					
ANR	726216	PrimaryExpression	"""]"""		726103	0					
ANR	726217	ReturnStatement	return count ;	4012:1:116327:116339	726103	17	True				
ANR	726218	Identifier	count		726103	0					
ANR	726219	ReturnType	R_API int		726103	1					
ANR	726220	Identifier	r_core_bin_list		726103	2					
ANR	726221	ParameterList	"RCore * core , int mode"		726103	3					
ANR	726222	Parameter	RCore * core	3990:26:115788:115798	726103	0	True				
ANR	726223	ParameterType	RCore *		726103	0					
ANR	726224	Identifier	core		726103	1					
ANR	726225	Parameter	int mode	3990:39:115801:115808	726103	1	True				
ANR	726226	ParameterType	int		726103	0					
ANR	726227	Identifier	mode		726103	1					
ANR	726228	CFGEntryNode	ENTRY		726103		True				
ANR	726229	CFGExitNode	EXIT		726103		True				
ANR	726230	Symbol	bin -> binfiles		726103						
ANR	726231	Symbol	NULL		726103						
ANR	726232	Symbol	bin		726103						
ANR	726233	Symbol	count		726103						
ANR	726234	Symbol	* core		726103						
ANR	726235	Symbol	false		726103						
ANR	726236	Symbol	iter		726103						
ANR	726237	Symbol	binfile		726103						
ANR	726238	Symbol	* bin		726103						
ANR	726239	Symbol	mode		726103						
ANR	726240	Symbol	core		726103						
ANR	726241	Symbol	* iter		726103						
ANR	726242	Symbol	binfiles		726103						
ANR	726243	Symbol	iter -> n		726103						
ANR	726244	Symbol	core -> bin		726103						
ANR	726245	Function	r_core_bin_method_flags_str	4015:0:116344:117832							
ANR	726246	FunctionDef	"r_core_bin_method_flags_str (ut64 flags , int mode)"		726245	0					
ANR	726247	CompoundStatement		4015:62:116406:117832	726245	0					
ANR	726248	IdentifierDeclStatement	"int i , len = 0 ;"	4016:1:116409:116423	726245	0	True				
ANR	726249	IdentifierDecl	i		726245	0					
ANR	726250	IdentifierDeclType	int		726245	0					
ANR	726251	Identifier	i		726245	1					
ANR	726252	IdentifierDecl	len = 0		726245	1					
ANR	726253	IdentifierDeclType	int		726245	0					
ANR	726254	Identifier	len		726245	1					
ANR	726255	AssignmentExpression	len = 0		726245	2		=			
ANR	726256	Identifier	len		726245	0					
ANR	726257	PrimaryExpression	0		726245	1					
ANR	726258	IdentifierDeclStatement	"RStrBuf * buf = r_strbuf_new ( """" ) ;"	4018:1:116427:116459	726245	1	True				
ANR	726259	IdentifierDecl	"* buf = r_strbuf_new ( """" )"		726245	0					
ANR	726260	IdentifierDeclType	RStrBuf *		726245	0					
ANR	726261	Identifier	buf		726245	1					
ANR	726262	AssignmentExpression	"* buf = r_strbuf_new ( """" )"		726245	2		=			
ANR	726263	Identifier	buf		726245	0					
ANR	726264	CallExpression	"r_strbuf_new ( """" )"		726245	1					
ANR	726265	Callee	r_strbuf_new		726245	0					
ANR	726266	Identifier	r_strbuf_new		726245	0					
ANR	726267	ArgumentList	""""""		726245	1					
ANR	726268	Argument	""""""		726245	0					
ANR	726269	PrimaryExpression	""""""		726245	0					
ANR	726270	IfStatement	if ( IS_MODE_SET ( mode ) || IS_MODE_RAD ( mode ) )		726245	2					
ANR	726271	Condition	IS_MODE_SET ( mode ) || IS_MODE_RAD ( mode )	4019:5:116466:116505	726245	0	True				
ANR	726272	OrExpression	IS_MODE_SET ( mode ) || IS_MODE_RAD ( mode )		726245	0		||			
ANR	726273	CallExpression	IS_MODE_SET ( mode )		726245	0					
ANR	726274	Callee	IS_MODE_SET		726245	0					
ANR	726275	Identifier	IS_MODE_SET		726245	0					
ANR	726276	ArgumentList	mode		726245	1					
ANR	726277	Argument	mode		726245	0					
ANR	726278	Identifier	mode		726245	0					
ANR	726279	CallExpression	IS_MODE_RAD ( mode )		726245	1					
ANR	726280	Callee	IS_MODE_RAD		726245	0					
ANR	726281	Identifier	IS_MODE_RAD		726245	0					
ANR	726282	ArgumentList	mode		726245	1					
ANR	726283	Argument	mode		726245	0					
ANR	726284	Identifier	mode		726245	0					
ANR	726285	CompoundStatement		5:47:101:101	726245	1					
ANR	726286	IfStatement	if ( ! flags )		726245	0					
ANR	726287	Condition	! flags	4020:6:116516:116521	726245	0	True				
ANR	726288	UnaryOperationExpression	! flags		726245	0					
ANR	726289	UnaryOperator	!		726245	0					
ANR	726290	Identifier	flags		726245	1					
ANR	726291	CompoundStatement		6:14:117:117	726245	1					
ANR	726292	GotoStatement	goto out ;	4021:3:116529:116537	726245	0	True				
ANR	726293	Identifier	out		726245	0					
ANR	726294	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		726245	1					
ANR	726295	ForInit	i = 0 ;	4024:7:116551:116556	726245	0	True				
ANR	726296	AssignmentExpression	i = 0		726245	0		=			
ANR	726297	Identifier	i		726245	0					
ANR	726298	PrimaryExpression	0		726245	1					
ANR	726299	Condition	i < 64	4024:14:116558:116563	726245	1	True				
ANR	726300	RelationalExpression	i < 64		726245	0		<			
ANR	726301	Identifier	i		726245	0					
ANR	726302	PrimaryExpression	64		726245	1					
ANR	726303	PostIncDecOperationExpression	i ++	4024:22:116566:116568	726245	2	True				
ANR	726304	Identifier	i		726245	0					
ANR	726305	IncDec	++		726245	1					
ANR	726306	CompoundStatement		10:27:164:164	726245	3					
ANR	726307	Statement	ut64	4025:3:116576:116579	726245	0	True				
ANR	726308	Statement	flag	4025:8:116581:116584	726245	1	True				
ANR	726309	Statement	=	4025:13:116586:116586	726245	2	True				
ANR	726310	Statement	flags	4025:15:116588:116592	726245	3	True				
ANR	726311	Statement	&	4025:21:116594:116594	726245	4	True				
ANR	726312	Statement	(	4025:23:116596:116596	726245	5	True				
ANR	726313	Statement	1UL	4025:24:116597:116599	726245	6	True				
ANR	726314	Statement	L	4025:27:116600:116600	726245	7	True				
ANR	726315	Statement	<<	4025:29:116602:116603	726245	8	True				
ANR	726316	Statement	i	4025:32:116605:116605	726245	9	True				
ANR	726317	Statement	)	4025:33:116606:116606	726245	10	True				
ANR	726318	ExpressionStatement		4025:34:116607:116607	726245	11	True				
ANR	726319	IfStatement	if ( flag )		726245	12					
ANR	726320	Condition	flag	4026:7:116616:116619	726245	0	True				
ANR	726321	Identifier	flag		726245	0					
ANR	726322	CompoundStatement		13:4:221:287	726245	1					
ANR	726323	IdentifierDeclStatement	"const char * flag_string = r_bin_get_meth_flag_string ( flag , false ) ;"	4027:4:116628:116694	726245	0	True				
ANR	726324	IdentifierDecl	"* flag_string = r_bin_get_meth_flag_string ( flag , false )"		726245	0					
ANR	726325	IdentifierDeclType	const char *		726245	0					
ANR	726326	Identifier	flag_string		726245	1					
ANR	726327	AssignmentExpression	"* flag_string = r_bin_get_meth_flag_string ( flag , false )"		726245	2		=			
ANR	726328	Identifier	flag_string		726245	0					
ANR	726329	CallExpression	"r_bin_get_meth_flag_string ( flag , false )"		726245	1					
ANR	726330	Callee	r_bin_get_meth_flag_string		726245	0					
ANR	726331	Identifier	r_bin_get_meth_flag_string		726245	0					
ANR	726332	ArgumentList	flag		726245	1					
ANR	726333	Argument	flag		726245	0					
ANR	726334	Identifier	flag		726245	0					
ANR	726335	Argument	false		726245	1					
ANR	726336	Identifier	false		726245	0					
ANR	726337	IfStatement	if ( flag_string )		726245	1					
ANR	726338	Condition	flag_string	4028:8:116704:116714	726245	0	True				
ANR	726339	Identifier	flag_string		726245	0					
ANR	726340	CompoundStatement		14:21:310:310	726245	1					
ANR	726341	ExpressionStatement	"r_strbuf_appendf ( buf , "".%s"" , flag_string )"	4029:5:116724:116766	726245	0	True				
ANR	726342	CallExpression	"r_strbuf_appendf ( buf , "".%s"" , flag_string )"		726245	0					
ANR	726343	Callee	r_strbuf_appendf		726245	0					
ANR	726344	Identifier	r_strbuf_appendf		726245	0					
ANR	726345	ArgumentList	buf		726245	1					
ANR	726346	Argument	buf		726245	0					
ANR	726347	Identifier	buf		726245	0					
ANR	726348	Argument	""".%s"""		726245	1					
ANR	726349	PrimaryExpression	""".%s"""		726245	0					
ANR	726350	Argument	flag_string		726245	2					
ANR	726351	Identifier	flag_string		726245	0					
ANR	726352	ElseStatement	else		726245	0					
ANR	726353	IfStatement	if ( IS_MODE_JSON ( mode ) )		726245	0					
ANR	726354	Condition	IS_MODE_JSON ( mode )	4033:12:116795:116813	726245	0	True				
ANR	726355	CallExpression	IS_MODE_JSON ( mode )		726245	0					
ANR	726356	Callee	IS_MODE_JSON		726245	0					
ANR	726357	Identifier	IS_MODE_JSON		726245	0					
ANR	726358	ArgumentList	mode		726245	1					
ANR	726359	Argument	mode		726245	0					
ANR	726360	Identifier	mode		726245	0					
ANR	726361	CompoundStatement		19:33:409:409	726245	1					
ANR	726362	IfStatement	if ( ! flags )		726245	0					
ANR	726363	Condition	! flags	4034:6:116824:116829	726245	0	True				
ANR	726364	UnaryOperationExpression	! flags		726245	0					
ANR	726365	UnaryOperator	!		726245	0					
ANR	726366	Identifier	flags		726245	1					
ANR	726367	CompoundStatement		20:14:425:425	726245	1					
ANR	726368	ExpressionStatement	"r_strbuf_append ( buf , ""[]"" )"	4035:3:116837:116864	726245	0	True				
ANR	726369	CallExpression	"r_strbuf_append ( buf , ""[]"" )"		726245	0					
ANR	726370	Callee	r_strbuf_append		726245	0					
ANR	726371	Identifier	r_strbuf_append		726245	0					
ANR	726372	ArgumentList	buf		726245	1					
ANR	726373	Argument	buf		726245	0					
ANR	726374	Identifier	buf		726245	0					
ANR	726375	Argument	"""[]"""		726245	1					
ANR	726376	PrimaryExpression	"""[]"""		726245	0					
ANR	726377	GotoStatement	goto out ;	4036:3:116869:116877	726245	1	True				
ANR	726378	Identifier	out		726245	0					
ANR	726379	ExpressionStatement	"r_strbuf_append ( buf , ""["" )"	4039:2:116886:116912	726245	1	True				
ANR	726380	CallExpression	"r_strbuf_append ( buf , ""["" )"		726245	0					
ANR	726381	Callee	r_strbuf_append		726245	0					
ANR	726382	Identifier	r_strbuf_append		726245	0					
ANR	726383	ArgumentList	buf		726245	1					
ANR	726384	Argument	buf		726245	0					
ANR	726385	Identifier	buf		726245	0					
ANR	726386	Argument	"""["""		726245	1					
ANR	726387	PrimaryExpression	"""["""		726245	0					
ANR	726388	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		726245	2					
ANR	726389	ForInit	i = 0 ;	4041:7:116922:116927	726245	0	True				
ANR	726390	AssignmentExpression	i = 0		726245	0		=			
ANR	726391	Identifier	i		726245	0					
ANR	726392	PrimaryExpression	0		726245	1					
ANR	726393	Condition	i < 64	4041:14:116929:116934	726245	1	True				
ANR	726394	RelationalExpression	i < 64		726245	0		<			
ANR	726395	Identifier	i		726245	0					
ANR	726396	PrimaryExpression	64		726245	1					
ANR	726397	PostIncDecOperationExpression	i ++	4041:22:116937:116939	726245	2	True				
ANR	726398	Identifier	i		726245	0					
ANR	726399	IncDec	++		726245	1					
ANR	726400	CompoundStatement		27:27:535:535	726245	3					
ANR	726401	Statement	ut64	4042:3:116947:116950	726245	0	True				
ANR	726402	Statement	flag	4042:8:116952:116955	726245	1	True				
ANR	726403	Statement	=	4042:13:116957:116957	726245	2	True				
ANR	726404	Statement	flags	4042:15:116959:116963	726245	3	True				
ANR	726405	Statement	&	4042:21:116965:116965	726245	4	True				
ANR	726406	Statement	(	4042:23:116967:116967	726245	5	True				
ANR	726407	Statement	1UL	4042:24:116968:116970	726245	6	True				
ANR	726408	Statement	L	4042:27:116971:116971	726245	7	True				
ANR	726409	Statement	<<	4042:29:116973:116974	726245	8	True				
ANR	726410	Statement	i	4042:32:116976:116976	726245	9	True				
ANR	726411	Statement	)	4042:33:116977:116977	726245	10	True				
ANR	726412	ExpressionStatement		4042:34:116978:116978	726245	11	True				
ANR	726413	IfStatement	if ( flag )		726245	12					
ANR	726414	Condition	flag	4043:7:116987:116990	726245	0	True				
ANR	726415	Identifier	flag		726245	0					
ANR	726416	CompoundStatement		30:4:592:658	726245	1					
ANR	726417	IdentifierDeclStatement	"const char * flag_string = r_bin_get_meth_flag_string ( flag , false ) ;"	4044:4:116999:117065	726245	0	True				
ANR	726418	IdentifierDecl	"* flag_string = r_bin_get_meth_flag_string ( flag , false )"		726245	0					
ANR	726419	IdentifierDeclType	const char *		726245	0					
ANR	726420	Identifier	flag_string		726245	1					
ANR	726421	AssignmentExpression	"* flag_string = r_bin_get_meth_flag_string ( flag , false )"		726245	2		=			
ANR	726422	Identifier	flag_string		726245	0					
ANR	726423	CallExpression	"r_bin_get_meth_flag_string ( flag , false )"		726245	1					
ANR	726424	Callee	r_bin_get_meth_flag_string		726245	0					
ANR	726425	Identifier	r_bin_get_meth_flag_string		726245	0					
ANR	726426	ArgumentList	flag		726245	1					
ANR	726427	Argument	flag		726245	0					
ANR	726428	Identifier	flag		726245	0					
ANR	726429	Argument	false		726245	1					
ANR	726430	Identifier	false		726245	0					
ANR	726431	IfStatement	if ( len != 0 )		726245	1					
ANR	726432	Condition	len != 0	4045:8:117075:117082	726245	0	True				
ANR	726433	EqualityExpression	len != 0		726245	0		!=			
ANR	726434	Identifier	len		726245	0					
ANR	726435	PrimaryExpression	0		726245	1					
ANR	726436	CompoundStatement		31:18:678:678	726245	1					
ANR	726437	ExpressionStatement	"r_strbuf_append ( buf , "","" )"	4046:5:117092:117118	726245	0	True				
ANR	726438	CallExpression	"r_strbuf_append ( buf , "","" )"		726245	0					
ANR	726439	Callee	r_strbuf_append		726245	0					
ANR	726440	Identifier	r_strbuf_append		726245	0					
ANR	726441	ArgumentList	buf		726245	1					
ANR	726442	Argument	buf		726245	0					
ANR	726443	Identifier	buf		726245	0					
ANR	726444	Argument	""","""		726245	1					
ANR	726445	PrimaryExpression	""","""		726245	0					
ANR	726446	IfStatement	if ( flag_string )		726245	2					
ANR	726447	Condition	flag_string	4048:8:117134:117144	726245	0	True				
ANR	726448	Identifier	flag_string		726245	0					
ANR	726449	CompoundStatement		34:21:740:740	726245	1					
ANR	726450	ExpressionStatement	"r_strbuf_appendf ( buf , ""\\""%s\\"""" , flag_string )"	4049:5:117154:117199	726245	0	True				
ANR	726451	CallExpression	"r_strbuf_appendf ( buf , ""\\""%s\\"""" , flag_string )"		726245	0					
ANR	726452	Callee	r_strbuf_appendf		726245	0					
ANR	726453	Identifier	r_strbuf_appendf		726245	0					
ANR	726454	ArgumentList	buf		726245	1					
ANR	726455	Argument	buf		726245	0					
ANR	726456	Identifier	buf		726245	0					
ANR	726457	Argument	"""\\""%s\\"""""		726245	1					
ANR	726458	PrimaryExpression	"""\\""%s\\"""""		726245	0					
ANR	726459	Argument	flag_string		726245	2					
ANR	726460	Identifier	flag_string		726245	0					
ANR	726461	ElseStatement	else		726245	0					
ANR	726462	CompoundStatement		36:11:805:805	726245	0					
ANR	726463	Statement	r_strbuf_appendf	4051:5:117219:117234	726245	0	True				
ANR	726464	Statement	(	4051:22:117236:117236	726245	1	True				
ANR	726465	Statement	buf	4051:23:117237:117239	726245	2	True				
ANR	726466	Statement	","	4051:26:117240:117240	726245	3	True				
ANR	726467	Statement	"""\\""0x%08"""	4051:28:117242:117250	726245	4	True				
ANR	726468	Statement	PFMT64x	4051:37:117251:117257	726245	5	True				
ANR	726469	Statement	"""\\"""""	4051:44:117258:117261	726245	6	True				
ANR	726470	Statement	","	4051:48:117262:117262	726245	7	True				
ANR	726471	Statement	flag	4051:50:117264:117267	726245	8	True				
ANR	726472	Statement	)	4051:54:117268:117268	726245	9	True				
ANR	726473	ExpressionStatement		4051:55:117269:117269	726245	10	True				
ANR	726474	ExpressionStatement	len ++	4053:4:117281:117286	726245	3	True				
ANR	726475	PostIncDecOperationExpression	len ++		726245	0					
ANR	726476	Identifier	len		726245	0					
ANR	726477	IncDec	++		726245	1					
ANR	726478	ExpressionStatement	"r_strbuf_append ( buf , ""]"" )"	4057:2:117300:117326	726245	3	True				
ANR	726479	CallExpression	"r_strbuf_append ( buf , ""]"" )"		726245	0					
ANR	726480	Callee	r_strbuf_append		726245	0					
ANR	726481	Identifier	r_strbuf_append		726245	0					
ANR	726482	ArgumentList	buf		726245	1					
ANR	726483	Argument	buf		726245	0					
ANR	726484	Identifier	buf		726245	0					
ANR	726485	Argument	"""]"""		726245	1					
ANR	726486	PrimaryExpression	"""]"""		726245	0					
ANR	726487	ElseStatement	else		726245	0					
ANR	726488	CompoundStatement		45:2:933:948	726245	0					
ANR	726489	IdentifierDeclStatement	int pad_len = 4 ;	4059:2:117340:117355	726245	0	True				
ANR	726490	IdentifierDecl	pad_len = 4		726245	0					
ANR	726491	IdentifierDeclType	int		726245	0					
ANR	726492	Identifier	pad_len		726245	1					
ANR	726493	AssignmentExpression	pad_len = 4		726245	2		=			
ANR	726494	Identifier	pad_len		726245	0					
ANR	726495	PrimaryExpression	4		726245	1					
ANR	726496	IfStatement	if ( ! flags )		726245	1					
ANR	726497	Condition	! flags	4061:6:117398:117403	726245	0	True				
ANR	726498	UnaryOperationExpression	! flags		726245	0					
ANR	726499	UnaryOperator	!		726245	0					
ANR	726500	Identifier	flags		726245	1					
ANR	726501	CompoundStatement		47:14:999:999	726245	1					
ANR	726502	GotoStatement	goto padding ;	4062:3:117411:117423	726245	0	True				
ANR	726503	Identifier	padding		726245	0					
ANR	726504	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		726245	2					
ANR	726505	ForInit	i = 0 ;	4064:7:117436:117441	726245	0	True				
ANR	726506	AssignmentExpression	i = 0		726245	0		=			
ANR	726507	Identifier	i		726245	0					
ANR	726508	PrimaryExpression	0		726245	1					
ANR	726509	Condition	i < 64	4064:14:117443:117448	726245	1	True				
ANR	726510	RelationalExpression	i < 64		726245	0		<			
ANR	726511	Identifier	i		726245	0					
ANR	726512	PrimaryExpression	64		726245	1					
ANR	726513	PostIncDecOperationExpression	i ++	4064:22:117451:117453	726245	2	True				
ANR	726514	Identifier	i		726245	0					
ANR	726515	IncDec	++		726245	1					
ANR	726516	CompoundStatement		50:27:1049:1049	726245	3					
ANR	726517	Statement	ut64	4065:3:117461:117464	726245	0	True				
ANR	726518	Statement	flag	4065:8:117466:117469	726245	1	True				
ANR	726519	Statement	=	4065:13:117471:117471	726245	2	True				
ANR	726520	Statement	flags	4065:15:117473:117477	726245	3	True				
ANR	726521	Statement	&	4065:21:117479:117479	726245	4	True				
ANR	726522	Statement	(	4065:23:117481:117481	726245	5	True				
ANR	726523	Statement	1UL	4065:24:117482:117484	726245	6	True				
ANR	726524	Statement	L	4065:27:117485:117485	726245	7	True				
ANR	726525	Statement	<<	4065:29:117487:117488	726245	8	True				
ANR	726526	Statement	i	4065:32:117490:117490	726245	9	True				
ANR	726527	Statement	)	4065:33:117491:117491	726245	10	True				
ANR	726528	ExpressionStatement		4065:34:117492:117492	726245	11	True				
ANR	726529	IfStatement	if ( flag )		726245	12					
ANR	726530	Condition	flag	4066:7:117501:117504	726245	0	True				
ANR	726531	Identifier	flag		726245	0					
ANR	726532	CompoundStatement		53:4:1106:1171	726245	1					
ANR	726533	IdentifierDeclStatement	"const char * flag_string = r_bin_get_meth_flag_string ( flag , true ) ;"	4067:4:117513:117578	726245	0	True				
ANR	726534	IdentifierDecl	"* flag_string = r_bin_get_meth_flag_string ( flag , true )"		726245	0					
ANR	726535	IdentifierDeclType	const char *		726245	0					
ANR	726536	Identifier	flag_string		726245	1					
ANR	726537	AssignmentExpression	"* flag_string = r_bin_get_meth_flag_string ( flag , true )"		726245	2		=			
ANR	726538	Identifier	flag_string		726245	0					
ANR	726539	CallExpression	"r_bin_get_meth_flag_string ( flag , true )"		726245	1					
ANR	726540	Callee	r_bin_get_meth_flag_string		726245	0					
ANR	726541	Identifier	r_bin_get_meth_flag_string		726245	0					
ANR	726542	ArgumentList	flag		726245	1					
ANR	726543	Argument	flag		726245	0					
ANR	726544	Identifier	flag		726245	0					
ANR	726545	Argument	true		726245	1					
ANR	726546	Identifier	true		726245	0					
ANR	726547	IfStatement	if ( flag_string )		726245	1					
ANR	726548	Condition	flag_string	4068:8:117588:117598	726245	0	True				
ANR	726549	Identifier	flag_string		726245	0					
ANR	726550	CompoundStatement		54:21:1194:1194	726245	1					
ANR	726551	ExpressionStatement	"r_strbuf_append ( buf , flag_string )"	4069:5:117608:117642	726245	0	True				
ANR	726552	CallExpression	"r_strbuf_append ( buf , flag_string )"		726245	0					
ANR	726553	Callee	r_strbuf_append		726245	0					
ANR	726554	Identifier	r_strbuf_append		726245	0					
ANR	726555	ArgumentList	buf		726245	1					
ANR	726556	Argument	buf		726245	0					
ANR	726557	Identifier	buf		726245	0					
ANR	726558	Argument	flag_string		726245	1					
ANR	726559	Identifier	flag_string		726245	0					
ANR	726560	ElseStatement	else		726245	0					
ANR	726561	CompoundStatement		56:11:1248:1248	726245	0					
ANR	726562	ExpressionStatement	"r_strbuf_append ( buf , ""?"" )"	4071:5:117662:117688	726245	0	True				
ANR	726563	CallExpression	"r_strbuf_append ( buf , ""?"" )"		726245	0					
ANR	726564	Callee	r_strbuf_append		726245	0					
ANR	726565	Identifier	r_strbuf_append		726245	0					
ANR	726566	ArgumentList	buf		726245	1					
ANR	726567	Argument	buf		726245	0					
ANR	726568	Identifier	buf		726245	0					
ANR	726569	Argument	"""?"""		726245	1					
ANR	726570	PrimaryExpression	"""?"""		726245	0					
ANR	726571	ExpressionStatement	len ++	4073:4:117700:117705	726245	2	True				
ANR	726572	PostIncDecOperationExpression	len ++		726245	0					
ANR	726573	Identifier	len		726245	0					
ANR	726574	IncDec	++		726245	1					
ANR	726575	Label	padding :	4076:0:117716:117723	726245	3	True				
ANR	726576	Identifier	padding		726245	0					
ANR	726577	ForStatement	for ( ; len < pad_len ; len ++ )		726245	4					
ANR	726578	Condition	len < pad_len	4077:10:117735:117747	726245	0	True				
ANR	726579	RelationalExpression	len < pad_len		726245	0		<			
ANR	726580	Identifier	len		726245	0					
ANR	726581	Identifier	pad_len		726245	1					
ANR	726582	PostIncDecOperationExpression	len ++	4077:25:117750:117754	726245	1	True				
ANR	726583	Identifier	len		726245	0					
ANR	726584	IncDec	++		726245	1					
ANR	726585	CompoundStatement		63:32:1350:1350	726245	2					
ANR	726586	ExpressionStatement	"r_strbuf_append ( buf , "" "" )"	4078:3:117762:117788	726245	0	True				
ANR	726587	CallExpression	"r_strbuf_append ( buf , "" "" )"		726245	0					
ANR	726588	Callee	r_strbuf_append		726245	0					
ANR	726589	Identifier	r_strbuf_append		726245	0					
ANR	726590	ArgumentList	buf		726245	1					
ANR	726591	Argument	buf		726245	0					
ANR	726592	Identifier	buf		726245	0					
ANR	726593	Argument	""" """		726245	1					
ANR	726594	PrimaryExpression	""" """		726245	0					
ANR	726595	Label	out :	4081:0:117797:117800	726245	3	True				
ANR	726596	Identifier	out		726245	0					
ANR	726597	ReturnStatement	return r_strbuf_drain ( buf ) ;	4082:1:117803:117830	726245	4	True				
ANR	726598	CallExpression	r_strbuf_drain ( buf )		726245	0					
ANR	726599	Callee	r_strbuf_drain		726245	0					
ANR	726600	Identifier	r_strbuf_drain		726245	0					
ANR	726601	ArgumentList	buf		726245	1					
ANR	726602	Argument	buf		726245	0					
ANR	726603	Identifier	buf		726245	0					
ANR	726604	ReturnType	R_API char *		726245	1					
ANR	726605	Identifier	r_core_bin_method_flags_str		726245	2					
ANR	726606	ParameterList	"ut64 flags , int mode"		726245	3					
ANR	726607	Parameter	ut64 flags	4015:40:116384:116393	726245	0	True				
ANR	726608	ParameterType	ut64		726245	0					
ANR	726609	Identifier	flags		726245	1					
ANR	726610	Parameter	int mode	4015:52:116396:116403	726245	1	True				
ANR	726611	ParameterType	int		726245	0					
ANR	726612	Identifier	mode		726245	1					
ANR	726613	CFGEntryNode	ENTRY		726245		True				
ANR	726614	CFGExitNode	EXIT		726245		True				
ANR	726615	Symbol	r_strbuf_new		726245						
ANR	726616	Symbol	flag		726245						
ANR	726617	Symbol	flag_string		726245						
ANR	726618	Symbol	pad_len		726245						
ANR	726619	Symbol	flags		726245						
ANR	726620	Symbol	false		726245						
ANR	726621	Symbol	i		726245						
ANR	726622	Symbol	IS_MODE_JSON		726245						
ANR	726623	Symbol	r_bin_get_meth_flag_string		726245						
ANR	726624	Symbol	IS_MODE_SET		726245						
ANR	726625	Symbol	mode		726245						
ANR	726626	Symbol	buf		726245						
ANR	726627	Symbol	len		726245						
ANR	726628	Symbol	true		726245						
ANR	726629	Symbol	r_strbuf_drain		726245						
ANR	726630	Symbol	IS_MODE_RAD		726245						
