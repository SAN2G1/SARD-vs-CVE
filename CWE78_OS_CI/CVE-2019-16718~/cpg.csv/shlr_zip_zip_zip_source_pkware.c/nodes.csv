command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6186009	File	data/converged/CVE-2019-16718~_radare2/shlr_zip_zip_zip_source_pkware.c								
ANR	6186010	ClassDef	trad_pkware	41:0:1709:1770							
ANR	6186011	DeclStmt									
ANR	6186012	Decl							int	int [ 2 ]	e
ANR	6186013	DeclStmt									
ANR	6186014	Decl							zip_uint32_t	zip_uint32_t [ 3 ]	key
ANR	6186015	DeclStmt									
ANR	6186016	Decl							void	"void ( struct trad_pkware * , zip_uint8_t * , const zip_uint8_t * , zip_uint64_t , int )"	decrypt
ANR	6186017	DeclStmt									
ANR	6186018	Decl							int	"int ( struct zip_source * , struct trad_pkware * )"	decrypt_header
ANR	6186019	DeclStmt									
ANR	6186020	Decl							zip_int64_t	"zip_int64_t ( struct zip_source * , void * , void * , zip_uint64_t , enum zip_source_cmd )"	pkware_decrypt
ANR	6186021	DeclStmt									
ANR	6186022	Decl							void	void ( struct trad_pkware * )	pkware_free
ANR	6186023	Function	zip_source_pkware	63:0:2209:3091							
ANR	6186024	FunctionDef	"zip_source_pkware (struct zip * za , struct zip_source * src , zip_uint16_t em , int flags , const char * password)"		6186023	0					
ANR	6186025	CompoundStatement		66:0:2341:3091	6186023	0					
ANR	6186026	IdentifierDeclStatement	struct trad_pkware * ctx ;	67:4:2347:2370	6186023	0	True				
ANR	6186027	IdentifierDecl	* ctx		6186023	0					
ANR	6186028	IdentifierDeclType	struct trad_pkware *		6186023	0					
ANR	6186029	Identifier	ctx		6186023	1					
ANR	6186030	IdentifierDeclStatement	struct zip_source * s2 ;	68:4:2376:2397	6186023	1	True				
ANR	6186031	IdentifierDecl	* s2		6186023	0					
ANR	6186032	IdentifierDeclType	struct zip_source *		6186023	0					
ANR	6186033	Identifier	s2		6186023	1					
ANR	6186034	IfStatement	if ( password == NULL || src == NULL || em != ZIP_EM_TRAD_PKWARE )		6186023	2					
ANR	6186035	Condition	password == NULL || src == NULL || em != ZIP_EM_TRAD_PKWARE	70:8:2408:2466	6186023	0	True				
ANR	6186036	OrExpression	password == NULL || src == NULL || em != ZIP_EM_TRAD_PKWARE		6186023	0		||			
ANR	6186037	EqualityExpression	password == NULL		6186023	0		==			
ANR	6186038	Identifier	password		6186023	0					
ANR	6186039	Identifier	NULL		6186023	1					
ANR	6186040	OrExpression	src == NULL || em != ZIP_EM_TRAD_PKWARE		6186023	1		||			
ANR	6186041	EqualityExpression	src == NULL		6186023	0		==			
ANR	6186042	Identifier	src		6186023	0					
ANR	6186043	Identifier	NULL		6186023	1					
ANR	6186044	EqualityExpression	em != ZIP_EM_TRAD_PKWARE		6186023	1		!=			
ANR	6186045	Identifier	em		6186023	0					
ANR	6186046	Identifier	ZIP_EM_TRAD_PKWARE		6186023	1					
ANR	6186047	CompoundStatement		5:69:127:127	6186023	1					
ANR	6186048	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_INVAL , 0 )"	71:1:2472:2515	6186023	0	True				
ANR	6186049	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_INVAL , 0 )"		6186023	0					
ANR	6186050	Callee	_zip_error_set		6186023	0					
ANR	6186051	Identifier	_zip_error_set		6186023	0					
ANR	6186052	ArgumentList	& za -> error		6186023	1					
ANR	6186053	Argument	& za -> error		6186023	0					
ANR	6186054	UnaryOperationExpression	& za -> error		6186023	0					
ANR	6186055	UnaryOperator	&		6186023	0					
ANR	6186056	PtrMemberAccess	za -> error		6186023	1					
ANR	6186057	Identifier	za		6186023	0					
ANR	6186058	Identifier	error		6186023	1					
ANR	6186059	Argument	ZIP_ER_INVAL		6186023	1					
ANR	6186060	Identifier	ZIP_ER_INVAL		6186023	0					
ANR	6186061	Argument	0		6186023	2					
ANR	6186062	PrimaryExpression	0		6186023	0					
ANR	6186063	ReturnStatement	return NULL ;	72:1:2518:2529	6186023	1	True				
ANR	6186064	Identifier	NULL		6186023	0					
ANR	6186065	IfStatement	if ( flags & ZIP_CODEC_ENCODE )		6186023	3					
ANR	6186066	Condition	flags & ZIP_CODEC_ENCODE	74:8:2545:2568	6186023	0	True				
ANR	6186067	BitAndExpression	flags & ZIP_CODEC_ENCODE		6186023	0		&			
ANR	6186068	Identifier	flags		6186023	0					
ANR	6186069	Identifier	ZIP_CODEC_ENCODE		6186023	1					
ANR	6186070	CompoundStatement		9:34:229:229	6186023	1					
ANR	6186071	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_ENCRNOTSUPP , 0 )"	75:1:2574:2623	6186023	0	True				
ANR	6186072	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_ENCRNOTSUPP , 0 )"		6186023	0					
ANR	6186073	Callee	_zip_error_set		6186023	0					
ANR	6186074	Identifier	_zip_error_set		6186023	0					
ANR	6186075	ArgumentList	& za -> error		6186023	1					
ANR	6186076	Argument	& za -> error		6186023	0					
ANR	6186077	UnaryOperationExpression	& za -> error		6186023	0					
ANR	6186078	UnaryOperator	&		6186023	0					
ANR	6186079	PtrMemberAccess	za -> error		6186023	1					
ANR	6186080	Identifier	za		6186023	0					
ANR	6186081	Identifier	error		6186023	1					
ANR	6186082	Argument	ZIP_ER_ENCRNOTSUPP		6186023	1					
ANR	6186083	Identifier	ZIP_ER_ENCRNOTSUPP		6186023	0					
ANR	6186084	Argument	0		6186023	2					
ANR	6186085	PrimaryExpression	0		6186023	0					
ANR	6186086	ReturnStatement	return NULL ;	76:1:2626:2637	6186023	1	True				
ANR	6186087	Identifier	NULL		6186023	0					
ANR	6186088	IfStatement	if ( ( ctx = ( struct trad_pkware * ) malloc ( sizeof ( * ctx ) ) ) == NULL )		6186023	4					
ANR	6186089	Condition	( ctx = ( struct trad_pkware * ) malloc ( sizeof ( * ctx ) ) ) == NULL	79:8:2654:2709	6186023	0	True				
ANR	6186090	EqualityExpression	( ctx = ( struct trad_pkware * ) malloc ( sizeof ( * ctx ) ) ) == NULL		6186023	0		==			
ANR	6186091	AssignmentExpression	ctx = ( struct trad_pkware * ) malloc ( sizeof ( * ctx ) )		6186023	0		=			
ANR	6186092	Identifier	ctx		6186023	0					
ANR	6186093	CastExpression	( struct trad_pkware * ) malloc ( sizeof ( * ctx ) )		6186023	1					
ANR	6186094	CastTarget	struct trad_pkware *		6186023	0					
ANR	6186095	CallExpression	malloc ( sizeof ( * ctx ) )		6186023	1					
ANR	6186096	Callee	malloc		6186023	0					
ANR	6186097	Identifier	malloc		6186023	0					
ANR	6186098	ArgumentList	sizeof ( * ctx )		6186023	1					
ANR	6186099	Argument	sizeof ( * ctx )		6186023	0					
ANR	6186100	SizeofExpression	sizeof ( * ctx )		6186023	0					
ANR	6186101	Sizeof	sizeof		6186023	0					
ANR	6186102	UnaryOperationExpression	* ctx		6186023	1					
ANR	6186103	UnaryOperator	*		6186023	0					
ANR	6186104	Identifier	ctx		6186023	1					
ANR	6186105	Identifier	NULL		6186023	1					
ANR	6186106	CompoundStatement		14:66:370:370	6186023	1					
ANR	6186107	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"	80:1:2715:2759	6186023	0	True				
ANR	6186108	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"		6186023	0					
ANR	6186109	Callee	_zip_error_set		6186023	0					
ANR	6186110	Identifier	_zip_error_set		6186023	0					
ANR	6186111	ArgumentList	& za -> error		6186023	1					
ANR	6186112	Argument	& za -> error		6186023	0					
ANR	6186113	UnaryOperationExpression	& za -> error		6186023	0					
ANR	6186114	UnaryOperator	&		6186023	0					
ANR	6186115	PtrMemberAccess	za -> error		6186023	1					
ANR	6186116	Identifier	za		6186023	0					
ANR	6186117	Identifier	error		6186023	1					
ANR	6186118	Argument	ZIP_ER_MEMORY		6186023	1					
ANR	6186119	Identifier	ZIP_ER_MEMORY		6186023	0					
ANR	6186120	Argument	0		6186023	2					
ANR	6186121	PrimaryExpression	0		6186023	0					
ANR	6186122	ReturnStatement	return NULL ;	81:1:2762:2773	6186023	1	True				
ANR	6186123	Identifier	NULL		6186023	0					
ANR	6186124	ExpressionStatement	ctx -> e [ 0 ] = ctx -> e [ 1 ] = 0	84:4:2786:2811	6186023	5	True				
ANR	6186125	AssignmentExpression	ctx -> e [ 0 ] = ctx -> e [ 1 ] = 0		6186023	0		=			
ANR	6186126	ArrayIndexing	ctx -> e [ 0 ]		6186023	0					
ANR	6186127	PtrMemberAccess	ctx -> e		6186023	0					
ANR	6186128	Identifier	ctx		6186023	0					
ANR	6186129	Identifier	e		6186023	1					
ANR	6186130	PrimaryExpression	0		6186023	1					
ANR	6186131	AssignmentExpression	ctx -> e [ 1 ] = 0		6186023	1		=			
ANR	6186132	ArrayIndexing	ctx -> e [ 1 ]		6186023	0					
ANR	6186133	PtrMemberAccess	ctx -> e		6186023	0					
ANR	6186134	Identifier	ctx		6186023	0					
ANR	6186135	Identifier	e		6186023	1					
ANR	6186136	PrimaryExpression	1		6186023	1					
ANR	6186137	PrimaryExpression	0		6186023	1					
ANR	6186138	ExpressionStatement	ctx -> key [ 0 ] = KEY0	86:4:2818:2836	6186023	6	True				
ANR	6186139	AssignmentExpression	ctx -> key [ 0 ] = KEY0		6186023	0		=			
ANR	6186140	ArrayIndexing	ctx -> key [ 0 ]		6186023	0					
ANR	6186141	PtrMemberAccess	ctx -> key		6186023	0					
ANR	6186142	Identifier	ctx		6186023	0					
ANR	6186143	Identifier	key		6186023	1					
ANR	6186144	PrimaryExpression	0		6186023	1					
ANR	6186145	Identifier	KEY0		6186023	1					
ANR	6186146	ExpressionStatement	ctx -> key [ 1 ] = KEY1	87:4:2842:2860	6186023	7	True				
ANR	6186147	AssignmentExpression	ctx -> key [ 1 ] = KEY1		6186023	0		=			
ANR	6186148	ArrayIndexing	ctx -> key [ 1 ]		6186023	0					
ANR	6186149	PtrMemberAccess	ctx -> key		6186023	0					
ANR	6186150	Identifier	ctx		6186023	0					
ANR	6186151	Identifier	key		6186023	1					
ANR	6186152	PrimaryExpression	1		6186023	1					
ANR	6186153	Identifier	KEY1		6186023	1					
ANR	6186154	ExpressionStatement	ctx -> key [ 2 ] = KEY2	88:4:2866:2884	6186023	8	True				
ANR	6186155	AssignmentExpression	ctx -> key [ 2 ] = KEY2		6186023	0		=			
ANR	6186156	ArrayIndexing	ctx -> key [ 2 ]		6186023	0					
ANR	6186157	PtrMemberAccess	ctx -> key		6186023	0					
ANR	6186158	Identifier	ctx		6186023	0					
ANR	6186159	Identifier	key		6186023	1					
ANR	6186160	PrimaryExpression	2		6186023	1					
ANR	6186161	Identifier	KEY2		6186023	1					
ANR	6186162	ExpressionStatement	"decrypt ( ctx , NULL , ( const zip_uint8_t * ) password , strlen ( password ) , 1 )"	89:4:2890:2960	6186023	9	True				
ANR	6186163	CallExpression	"decrypt ( ctx , NULL , ( const zip_uint8_t * ) password , strlen ( password ) , 1 )"		6186023	0					
ANR	6186164	Callee	decrypt		6186023	0					
ANR	6186165	Identifier	decrypt		6186023	0					
ANR	6186166	ArgumentList	ctx		6186023	1					
ANR	6186167	Argument	ctx		6186023	0					
ANR	6186168	Identifier	ctx		6186023	0					
ANR	6186169	Argument	NULL		6186023	1					
ANR	6186170	Identifier	NULL		6186023	0					
ANR	6186171	Argument	( const zip_uint8_t * ) password		6186023	2					
ANR	6186172	CastExpression	( const zip_uint8_t * ) password		6186023	0					
ANR	6186173	CastTarget	const zip_uint8_t *		6186023	0					
ANR	6186174	Identifier	password		6186023	1					
ANR	6186175	Argument	strlen ( password )		6186023	3					
ANR	6186176	CallExpression	strlen ( password )		6186023	0					
ANR	6186177	Callee	strlen		6186023	0					
ANR	6186178	Identifier	strlen		6186023	0					
ANR	6186179	ArgumentList	password		6186023	1					
ANR	6186180	Argument	password		6186023	0					
ANR	6186181	Identifier	password		6186023	0					
ANR	6186182	Argument	1		6186023	4					
ANR	6186183	PrimaryExpression	1		6186023	0					
ANR	6186184	IfStatement	"if ( ( s2 = zip_source_layered ( za , src , pkware_decrypt , ctx ) ) == NULL )"		6186023	10					
ANR	6186185	Condition	"( s2 = zip_source_layered ( za , src , pkware_decrypt , ctx ) ) == NULL"	91:8:2971:3031	6186023	0	True				
ANR	6186186	EqualityExpression	"( s2 = zip_source_layered ( za , src , pkware_decrypt , ctx ) ) == NULL"		6186023	0		==			
ANR	6186187	AssignmentExpression	"s2 = zip_source_layered ( za , src , pkware_decrypt , ctx )"		6186023	0		=			
ANR	6186188	Identifier	s2		6186023	0					
ANR	6186189	CallExpression	"zip_source_layered ( za , src , pkware_decrypt , ctx )"		6186023	1					
ANR	6186190	Callee	zip_source_layered		6186023	0					
ANR	6186191	Identifier	zip_source_layered		6186023	0					
ANR	6186192	ArgumentList	za		6186023	1					
ANR	6186193	Argument	za		6186023	0					
ANR	6186194	Identifier	za		6186023	0					
ANR	6186195	Argument	src		6186023	1					
ANR	6186196	Identifier	src		6186023	0					
ANR	6186197	Argument	pkware_decrypt		6186023	2					
ANR	6186198	Identifier	pkware_decrypt		6186023	0					
ANR	6186199	Argument	ctx		6186023	3					
ANR	6186200	Identifier	ctx		6186023	0					
ANR	6186201	Identifier	NULL		6186023	1					
ANR	6186202	CompoundStatement		26:71:692:692	6186023	1					
ANR	6186203	ExpressionStatement	pkware_free ( ctx )	92:1:3037:3053	6186023	0	True				
ANR	6186204	CallExpression	pkware_free ( ctx )		6186023	0					
ANR	6186205	Callee	pkware_free		6186023	0					
ANR	6186206	Identifier	pkware_free		6186023	0					
ANR	6186207	ArgumentList	ctx		6186023	1					
ANR	6186208	Argument	ctx		6186023	0					
ANR	6186209	Identifier	ctx		6186023	0					
ANR	6186210	ReturnStatement	return NULL ;	93:1:3056:3067	6186023	1	True				
ANR	6186211	Identifier	NULL		6186023	0					
ANR	6186212	ReturnStatement	return s2 ;	96:4:3080:3089	6186023	11	True				
ANR	6186213	Identifier	s2		6186023	0					
ANR	6186214	ReturnType	struct zip_source *		6186023	1					
ANR	6186215	Identifier	zip_source_pkware		6186023	2					
ANR	6186216	ParameterList	"struct zip * za , struct zip_source * src , zip_uint16_t em , int flags , const char * password"		6186023	3					
ANR	6186217	Parameter	struct zip * za	64:18:2247:2260	6186023	0	True				
ANR	6186218	ParameterType	struct zip *		6186023	0					
ANR	6186219	Identifier	za		6186023	1					
ANR	6186220	Parameter	struct zip_source * src	64:34:2263:2284	6186023	1	True				
ANR	6186221	ParameterType	struct zip_source *		6186023	0					
ANR	6186222	Identifier	src		6186023	1					
ANR	6186223	Parameter	zip_uint16_t em	65:4:2291:2305	6186023	2	True				
ANR	6186224	ParameterType	zip_uint16_t		6186023	0					
ANR	6186225	Identifier	em		6186023	1					
ANR	6186226	Parameter	int flags	65:21:2308:2316	6186023	3	True				
ANR	6186227	ParameterType	int		6186023	0					
ANR	6186228	Identifier	flags		6186023	1					
ANR	6186229	Parameter	const char * password	65:32:2319:2338	6186023	4	True				
ANR	6186230	ParameterType	const char *		6186023	0					
ANR	6186231	Identifier	password		6186023	1					
ANR	6186232	CFGEntryNode	ENTRY		6186023		True				
ANR	6186233	CFGExitNode	EXIT		6186023		True				
ANR	6186234	Symbol	* ctx -> key		6186023						
ANR	6186235	Symbol	& za -> error		6186023						
ANR	6186236	Symbol	flags		6186023						
ANR	6186237	Symbol	ctx -> key		6186023						
ANR	6186238	Symbol	ctx -> e		6186023						
ANR	6186239	Symbol	ZIP_ER_INVAL		6186023						
ANR	6186240	Symbol	strlen		6186023						
ANR	6186241	Symbol	password		6186023						
ANR	6186242	Symbol	ZIP_ER_ENCRNOTSUPP		6186023						
ANR	6186243	Symbol	* ctx -> e		6186023						
ANR	6186244	Symbol	ZIP_ER_MEMORY		6186023						
ANR	6186245	Symbol	s2		6186023						
ANR	6186246	Symbol	malloc		6186023						
ANR	6186247	Symbol	NULL		6186023						
ANR	6186248	Symbol	src		6186023						
ANR	6186249	Symbol	ctx		6186023						
ANR	6186250	Symbol	za		6186023						
ANR	6186251	Symbol	em		6186023						
ANR	6186252	Symbol	ZIP_CODEC_ENCODE		6186023						
ANR	6186253	Symbol	ZIP_EM_TRAD_PKWARE		6186023						
ANR	6186254	Symbol	* ctx		6186023						
ANR	6186255	Symbol	KEY2		6186023						
ANR	6186256	Symbol	KEY1		6186023						
ANR	6186257	Symbol	KEY0		6186023						
ANR	6186258	Symbol	zip_source_layered		6186023						
ANR	6186259	Symbol	pkware_decrypt		6186023						
ANR	6186260	Symbol	* * ctx		6186023						
ANR	6186261	Function	decrypt	101:0:3097:3807							
ANR	6186262	FunctionDef	"decrypt (struct trad_pkware * ctx , zip_uint8_t * out , const zip_uint8_t * in , zip_uint64_t len , int update_only)"		6186261	0					
ANR	6186263	CompoundStatement		104:0:3219:3807	6186261	0					
ANR	6186264	IdentifierDeclStatement	zip_uint16_t tmp ;	105:4:3225:3241	6186261	0	True				
ANR	6186265	IdentifierDecl	tmp		6186261	0					
ANR	6186266	IdentifierDeclType	zip_uint16_t		6186261	0					
ANR	6186267	Identifier	tmp		6186261	1					
ANR	6186268	IdentifierDeclStatement	zip_uint64_t i ;	106:4:3247:3261	6186261	1	True				
ANR	6186269	IdentifierDecl	i		6186261	0					
ANR	6186270	IdentifierDeclType	zip_uint64_t		6186261	0					
ANR	6186271	Identifier	i		6186261	1					
ANR	6186272	IdentifierDeclStatement	Bytef b ;	107:4:3267:3274	6186261	2	True				
ANR	6186273	IdentifierDecl	b		6186261	0					
ANR	6186274	IdentifierDeclType	Bytef		6186261	0					
ANR	6186275	Identifier	b		6186261	1					
ANR	6186276	ForStatement	for ( i = 0 ; i < len ; i ++ )		6186261	3					
ANR	6186277	ForInit	i = 0 ;	109:9:3286:3289	6186261	0	True				
ANR	6186278	AssignmentExpression	i = 0		6186261	0		=			
ANR	6186279	Identifier	i		6186261	0					
ANR	6186280	PrimaryExpression	0		6186261	1					
ANR	6186281	Condition	i < len	109:14:3291:3295	6186261	1	True				
ANR	6186282	RelationalExpression	i < len		6186261	0		<			
ANR	6186283	Identifier	i		6186261	0					
ANR	6186284	Identifier	len		6186261	1					
ANR	6186285	PostIncDecOperationExpression	i ++	109:21:3298:3300	6186261	2	True				
ANR	6186286	Identifier	i		6186261	0					
ANR	6186287	IncDec	++		6186261	1					
ANR	6186288	CompoundStatement		6:26:83:83	6186261	3					
ANR	6186289	ExpressionStatement	b = in [ i ]	110:1:3306:3315	6186261	0	True				
ANR	6186290	AssignmentExpression	b = in [ i ]		6186261	0		=			
ANR	6186291	Identifier	b		6186261	0					
ANR	6186292	ArrayIndexing	in [ i ]		6186261	1					
ANR	6186293	Identifier	in		6186261	0					
ANR	6186294	Identifier	i		6186261	1					
ANR	6186295	IfStatement	if ( ! update_only )		6186261	1					
ANR	6186296	Condition	! update_only	112:5:3323:3334	6186261	0	True				
ANR	6186297	UnaryOperationExpression	! update_only		6186261	0					
ANR	6186298	UnaryOperator	!		6186261	0					
ANR	6186299	Identifier	update_only		6186261	1					
ANR	6186300	CompoundStatement		9:19:117:117	6186261	1					
ANR	6186301	ExpressionStatement	tmp = ( zip_uint16_t ) ( ctx -> key [ 2 ] | 2 )	114:5:3373:3410	6186261	0	True				
ANR	6186302	AssignmentExpression	tmp = ( zip_uint16_t ) ( ctx -> key [ 2 ] | 2 )		6186261	0		=			
ANR	6186303	Identifier	tmp		6186261	0					
ANR	6186304	CastExpression	( zip_uint16_t ) ( ctx -> key [ 2 ] | 2 )		6186261	1					
ANR	6186305	CastTarget	zip_uint16_t		6186261	0					
ANR	6186306	InclusiveOrExpression	ctx -> key [ 2 ] | 2		6186261	1		|			
ANR	6186307	ArrayIndexing	ctx -> key [ 2 ]		6186261	0					
ANR	6186308	PtrMemberAccess	ctx -> key		6186261	0					
ANR	6186309	Identifier	ctx		6186261	0					
ANR	6186310	Identifier	key		6186261	1					
ANR	6186311	PrimaryExpression	2		6186261	1					
ANR	6186312	PrimaryExpression	2		6186261	1					
ANR	6186313	ExpressionStatement	tmp = ( tmp * ( tmp ^ 1 ) ) >> 8	115:5:3417:3445	6186261	1	True				
ANR	6186314	AssignmentExpression	tmp = ( tmp * ( tmp ^ 1 ) ) >> 8		6186261	0		=			
ANR	6186315	Identifier	tmp		6186261	0					
ANR	6186316	ShiftExpression	( tmp * ( tmp ^ 1 ) ) >> 8		6186261	1		>>			
ANR	6186317	MultiplicativeExpression	tmp * ( tmp ^ 1 )		6186261	0		*			
ANR	6186318	Identifier	tmp		6186261	0					
ANR	6186319	ExclusiveOrExpression	tmp ^ 1		6186261	1		^			
ANR	6186320	Identifier	tmp		6186261	0					
ANR	6186321	PrimaryExpression	1		6186261	1					
ANR	6186322	PrimaryExpression	8		6186261	1					
ANR	6186323	ExpressionStatement	b ^= tmp	116:5:3452:3460	6186261	2	True				
ANR	6186324	AssignmentExpression	b ^= tmp		6186261	0		^=			
ANR	6186325	Identifier	b		6186261	0					
ANR	6186326	Identifier	tmp		6186261	1					
ANR	6186327	IfStatement	if ( out )		6186261	2					
ANR	6186328	Condition	out	120:5:3494:3496	6186261	0	True				
ANR	6186329	Identifier	out		6186261	0					
ANR	6186330	ExpressionStatement	out [ i ] = b	121:5:3504:3514	6186261	1	True				
ANR	6186331	AssignmentExpression	out [ i ] = b		6186261	0		=			
ANR	6186332	ArrayIndexing	out [ i ]		6186261	0					
ANR	6186333	Identifier	out		6186261	0					
ANR	6186334	Identifier	i		6186261	1					
ANR	6186335	Identifier	b		6186261	1					
ANR	6186336	ExpressionStatement	"ctx -> key [ 0 ] = ( zip_uint32_t ) crc32 ( ctx -> key [ 0 ] ^ 0xffffffffUL , & b , 1 ) ^ 0xffffffffUL"	124:1:3537:3620	6186261	3	True				
ANR	6186337	AssignmentExpression	"ctx -> key [ 0 ] = ( zip_uint32_t ) crc32 ( ctx -> key [ 0 ] ^ 0xffffffffUL , & b , 1 ) ^ 0xffffffffUL"		6186261	0		=			
ANR	6186338	ArrayIndexing	ctx -> key [ 0 ]		6186261	0					
ANR	6186339	PtrMemberAccess	ctx -> key		6186261	0					
ANR	6186340	Identifier	ctx		6186261	0					
ANR	6186341	Identifier	key		6186261	1					
ANR	6186342	PrimaryExpression	0		6186261	1					
ANR	6186343	ExclusiveOrExpression	"( zip_uint32_t ) crc32 ( ctx -> key [ 0 ] ^ 0xffffffffUL , & b , 1 ) ^ 0xffffffffUL"		6186261	1		^			
ANR	6186344	CastExpression	"( zip_uint32_t ) crc32 ( ctx -> key [ 0 ] ^ 0xffffffffUL , & b , 1 )"		6186261	0					
ANR	6186345	CastTarget	zip_uint32_t		6186261	0					
ANR	6186346	CallExpression	"crc32 ( ctx -> key [ 0 ] ^ 0xffffffffUL , & b , 1 )"		6186261	1					
ANR	6186347	Callee	crc32		6186261	0					
ANR	6186348	Identifier	crc32		6186261	0					
ANR	6186349	ArgumentList	ctx -> key [ 0 ] ^ 0xffffffffUL		6186261	1					
ANR	6186350	Argument	ctx -> key [ 0 ] ^ 0xffffffffUL		6186261	0					
ANR	6186351	ExclusiveOrExpression	ctx -> key [ 0 ] ^ 0xffffffffUL		6186261	0		^			
ANR	6186352	ArrayIndexing	ctx -> key [ 0 ]		6186261	0					
ANR	6186353	PtrMemberAccess	ctx -> key		6186261	0					
ANR	6186354	Identifier	ctx		6186261	0					
ANR	6186355	Identifier	key		6186261	1					
ANR	6186356	PrimaryExpression	0		6186261	1					
ANR	6186357	PrimaryExpression	0xffffffffUL		6186261	1					
ANR	6186358	Argument	& b		6186261	1					
ANR	6186359	UnaryOperationExpression	& b		6186261	0					
ANR	6186360	UnaryOperator	&		6186261	0					
ANR	6186361	Identifier	b		6186261	1					
ANR	6186362	Argument	1		6186261	2					
ANR	6186363	PrimaryExpression	1		6186261	0					
ANR	6186364	PrimaryExpression	0xffffffffUL		6186261	1					
ANR	6186365	ExpressionStatement	ctx -> key [ 1 ] = ( ctx -> key [ 1 ] + ( ctx -> key [ 0 ] & 0xff ) ) * 134775813 + 1	125:1:3623:3689	6186261	4	True				
ANR	6186366	AssignmentExpression	ctx -> key [ 1 ] = ( ctx -> key [ 1 ] + ( ctx -> key [ 0 ] & 0xff ) ) * 134775813 + 1		6186261	0		=			
ANR	6186367	ArrayIndexing	ctx -> key [ 1 ]		6186261	0					
ANR	6186368	PtrMemberAccess	ctx -> key		6186261	0					
ANR	6186369	Identifier	ctx		6186261	0					
ANR	6186370	Identifier	key		6186261	1					
ANR	6186371	PrimaryExpression	1		6186261	1					
ANR	6186372	AdditiveExpression	( ctx -> key [ 1 ] + ( ctx -> key [ 0 ] & 0xff ) ) * 134775813 + 1		6186261	1		+			
ANR	6186373	MultiplicativeExpression	( ctx -> key [ 1 ] + ( ctx -> key [ 0 ] & 0xff ) ) * 134775813		6186261	0		*			
ANR	6186374	AdditiveExpression	ctx -> key [ 1 ] + ( ctx -> key [ 0 ] & 0xff )		6186261	0		+			
ANR	6186375	ArrayIndexing	ctx -> key [ 1 ]		6186261	0					
ANR	6186376	PtrMemberAccess	ctx -> key		6186261	0					
ANR	6186377	Identifier	ctx		6186261	0					
ANR	6186378	Identifier	key		6186261	1					
ANR	6186379	PrimaryExpression	1		6186261	1					
ANR	6186380	BitAndExpression	ctx -> key [ 0 ] & 0xff		6186261	1		&			
ANR	6186381	ArrayIndexing	ctx -> key [ 0 ]		6186261	0					
ANR	6186382	PtrMemberAccess	ctx -> key		6186261	0					
ANR	6186383	Identifier	ctx		6186261	0					
ANR	6186384	Identifier	key		6186261	1					
ANR	6186385	PrimaryExpression	0		6186261	1					
ANR	6186386	PrimaryExpression	0xff		6186261	1					
ANR	6186387	PrimaryExpression	134775813		6186261	1					
ANR	6186388	PrimaryExpression	1		6186261	1					
ANR	6186389	ExpressionStatement	b = ctx -> key [ 1 ] >> 24	126:1:3692:3713	6186261	5	True				
ANR	6186390	AssignmentExpression	b = ctx -> key [ 1 ] >> 24		6186261	0		=			
ANR	6186391	Identifier	b		6186261	0					
ANR	6186392	ShiftExpression	ctx -> key [ 1 ] >> 24		6186261	1		>>			
ANR	6186393	ArrayIndexing	ctx -> key [ 1 ]		6186261	0					
ANR	6186394	PtrMemberAccess	ctx -> key		6186261	0					
ANR	6186395	Identifier	ctx		6186261	0					
ANR	6186396	Identifier	key		6186261	1					
ANR	6186397	PrimaryExpression	1		6186261	1					
ANR	6186398	PrimaryExpression	24		6186261	1					
ANR	6186399	ExpressionStatement	"ctx -> key [ 2 ] = ( zip_uint32_t ) crc32 ( ctx -> key [ 2 ] ^ 0xffffffffUL , & b , 1 ) ^ 0xffffffffUL"	127:1:3716:3799	6186261	6	True				
ANR	6186400	AssignmentExpression	"ctx -> key [ 2 ] = ( zip_uint32_t ) crc32 ( ctx -> key [ 2 ] ^ 0xffffffffUL , & b , 1 ) ^ 0xffffffffUL"		6186261	0		=			
ANR	6186401	ArrayIndexing	ctx -> key [ 2 ]		6186261	0					
ANR	6186402	PtrMemberAccess	ctx -> key		6186261	0					
ANR	6186403	Identifier	ctx		6186261	0					
ANR	6186404	Identifier	key		6186261	1					
ANR	6186405	PrimaryExpression	2		6186261	1					
ANR	6186406	ExclusiveOrExpression	"( zip_uint32_t ) crc32 ( ctx -> key [ 2 ] ^ 0xffffffffUL , & b , 1 ) ^ 0xffffffffUL"		6186261	1		^			
ANR	6186407	CastExpression	"( zip_uint32_t ) crc32 ( ctx -> key [ 2 ] ^ 0xffffffffUL , & b , 1 )"		6186261	0					
ANR	6186408	CastTarget	zip_uint32_t		6186261	0					
ANR	6186409	CallExpression	"crc32 ( ctx -> key [ 2 ] ^ 0xffffffffUL , & b , 1 )"		6186261	1					
ANR	6186410	Callee	crc32		6186261	0					
ANR	6186411	Identifier	crc32		6186261	0					
ANR	6186412	ArgumentList	ctx -> key [ 2 ] ^ 0xffffffffUL		6186261	1					
ANR	6186413	Argument	ctx -> key [ 2 ] ^ 0xffffffffUL		6186261	0					
ANR	6186414	ExclusiveOrExpression	ctx -> key [ 2 ] ^ 0xffffffffUL		6186261	0		^			
ANR	6186415	ArrayIndexing	ctx -> key [ 2 ]		6186261	0					
ANR	6186416	PtrMemberAccess	ctx -> key		6186261	0					
ANR	6186417	Identifier	ctx		6186261	0					
ANR	6186418	Identifier	key		6186261	1					
ANR	6186419	PrimaryExpression	2		6186261	1					
ANR	6186420	PrimaryExpression	0xffffffffUL		6186261	1					
ANR	6186421	Argument	& b		6186261	1					
ANR	6186422	UnaryOperationExpression	& b		6186261	0					
ANR	6186423	UnaryOperator	&		6186261	0					
ANR	6186424	Identifier	b		6186261	1					
ANR	6186425	Argument	1		6186261	2					
ANR	6186426	PrimaryExpression	1		6186261	0					
ANR	6186427	PrimaryExpression	0xffffffffUL		6186261	1					
ANR	6186428	ReturnType	static void		6186261	1					
ANR	6186429	Identifier	decrypt		6186261	2					
ANR	6186430	ParameterList	"struct trad_pkware * ctx , zip_uint8_t * out , const zip_uint8_t * in , zip_uint64_t len , int update_only"		6186261	3					
ANR	6186431	Parameter	struct trad_pkware * ctx	102:8:3117:3139	6186261	0	True				
ANR	6186432	ParameterType	struct trad_pkware *		6186261	0					
ANR	6186433	Identifier	ctx		6186261	1					
ANR	6186434	Parameter	zip_uint8_t * out	102:33:3142:3157	6186261	1	True				
ANR	6186435	ParameterType	zip_uint8_t *		6186261	0					
ANR	6186436	Identifier	out		6186261	1					
ANR	6186437	Parameter	const zip_uint8_t * in	102:51:3160:3180	6186261	2	True				
ANR	6186438	ParameterType	const zip_uint8_t *		6186261	0					
ANR	6186439	Identifier	in		6186261	1					
ANR	6186440	Parameter	zip_uint64_t len	103:1:3184:3199	6186261	3	True				
ANR	6186441	ParameterType	zip_uint64_t		6186261	0					
ANR	6186442	Identifier	len		6186261	1					
ANR	6186443	Parameter	int update_only	103:19:3202:3216	6186261	4	True				
ANR	6186444	ParameterType	int		6186261	0					
ANR	6186445	Identifier	update_only		6186261	1					
ANR	6186446	CFGEntryNode	ENTRY		6186261		True				
ANR	6186447	CFGExitNode	EXIT		6186261		True				
ANR	6186448	Symbol	b		6186261						
ANR	6186449	Symbol	* ctx -> key		6186261						
ANR	6186450	Symbol	in		6186261						
ANR	6186451	Symbol	ctx		6186261						
ANR	6186452	Symbol	* in		6186261						
ANR	6186453	Symbol	ctx -> key		6186261						
ANR	6186454	Symbol	& b		6186261						
ANR	6186455	Symbol	i		6186261						
ANR	6186456	Symbol	update_only		6186261						
ANR	6186457	Symbol	* ctx		6186261						
ANR	6186458	Symbol	out		6186261						
ANR	6186459	Symbol	* i		6186261						
ANR	6186460	Symbol	len		6186261						
ANR	6186461	Symbol	tmp		6186261						
ANR	6186462	Symbol	* out		6186261						
ANR	6186463	Symbol	* * ctx		6186261						
ANR	6186464	Symbol	crc32		6186261						
ANR	6186465	Function	decrypt_header	133:0:3813:4584							
ANR	6186466	FunctionDef	"decrypt_header (struct zip_source * src , struct trad_pkware * ctx)"		6186465	0					
ANR	6186467	CompoundStatement		135:0:3888:4584	6186465	0					
ANR	6186468	IdentifierDeclStatement	zip_uint8_t header [ HEADERLEN ] ;	136:4:3894:3923	6186465	0	True				
ANR	6186469	IdentifierDecl	header [ HEADERLEN ]		6186465	0					
ANR	6186470	IdentifierDeclType	zip_uint8_t [ HEADERLEN ]		6186465	0					
ANR	6186471	Identifier	header		6186465	1					
ANR	6186472	Identifier	HEADERLEN		6186465	2					
ANR	6186473	IdentifierDeclStatement	struct zip_stat st ;	137:4:3929:3947	6186465	1	True				
ANR	6186474	IdentifierDecl	st		6186465	0					
ANR	6186475	IdentifierDeclType	struct zip_stat		6186465	0					
ANR	6186476	Identifier	st		6186465	1					
ANR	6186477	IdentifierDeclStatement	zip_int64_t n ;	138:4:3953:3966	6186465	2	True				
ANR	6186478	IdentifierDecl	n		6186465	0					
ANR	6186479	IdentifierDeclType	zip_int64_t		6186465	0					
ANR	6186480	Identifier	n		6186465	1					
ANR	6186481	IdentifierDeclStatement	"unsigned short dostime , dosdate ;"	139:4:3972:4003	6186465	3	True				
ANR	6186482	IdentifierDecl	dostime		6186465	0					
ANR	6186483	IdentifierDeclType	unsigned short		6186465	0					
ANR	6186484	Identifier	dostime		6186465	1					
ANR	6186485	IdentifierDecl	dosdate		6186465	1					
ANR	6186486	IdentifierDeclType	unsigned short		6186465	0					
ANR	6186487	Identifier	dosdate		6186465	1					
ANR	6186488	IfStatement	"if ( ( n = zip_source_read ( src , header , HEADERLEN ) ) < 0 )"		6186465	4					
ANR	6186489	Condition	"( n = zip_source_read ( src , header , HEADERLEN ) ) < 0"	141:8:4014:4060	6186465	0	True				
ANR	6186490	RelationalExpression	"( n = zip_source_read ( src , header , HEADERLEN ) ) < 0"		6186465	0		<			
ANR	6186491	AssignmentExpression	"n = zip_source_read ( src , header , HEADERLEN )"		6186465	0		=			
ANR	6186492	Identifier	n		6186465	0					
ANR	6186493	CallExpression	"zip_source_read ( src , header , HEADERLEN )"		6186465	1					
ANR	6186494	Callee	zip_source_read		6186465	0					
ANR	6186495	Identifier	zip_source_read		6186465	0					
ANR	6186496	ArgumentList	src		6186465	1					
ANR	6186497	Argument	src		6186465	0					
ANR	6186498	Identifier	src		6186465	0					
ANR	6186499	Argument	header		6186465	1					
ANR	6186500	Identifier	header		6186465	0					
ANR	6186501	Argument	HEADERLEN		6186465	2					
ANR	6186502	Identifier	HEADERLEN		6186465	0					
ANR	6186503	PrimaryExpression	0		6186465	1					
ANR	6186504	CompoundStatement		7:57:174:174	6186465	1					
ANR	6186505	ExpressionStatement	"zip_source_error ( src , ctx -> e , ctx -> e + 1 )"	142:1:4066:4105	6186465	0	True				
ANR	6186506	CallExpression	"zip_source_error ( src , ctx -> e , ctx -> e + 1 )"		6186465	0					
ANR	6186507	Callee	zip_source_error		6186465	0					
ANR	6186508	Identifier	zip_source_error		6186465	0					
ANR	6186509	ArgumentList	src		6186465	1					
ANR	6186510	Argument	src		6186465	0					
ANR	6186511	Identifier	src		6186465	0					
ANR	6186512	Argument	ctx -> e		6186465	1					
ANR	6186513	PtrMemberAccess	ctx -> e		6186465	0					
ANR	6186514	Identifier	ctx		6186465	0					
ANR	6186515	Identifier	e		6186465	1					
ANR	6186516	Argument	ctx -> e + 1		6186465	2					
ANR	6186517	AdditiveExpression	ctx -> e + 1		6186465	0		+			
ANR	6186518	PtrMemberAccess	ctx -> e		6186465	0					
ANR	6186519	Identifier	ctx		6186465	0					
ANR	6186520	Identifier	e		6186465	1					
ANR	6186521	PrimaryExpression	1		6186465	1					
ANR	6186522	ReturnStatement	return - 1 ;	143:1:4108:4117	6186465	1	True				
ANR	6186523	UnaryOperationExpression	- 1		6186465	0					
ANR	6186524	UnaryOperator	-		6186465	0					
ANR	6186525	PrimaryExpression	1		6186465	1					
ANR	6186526	IfStatement	if ( n != HEADERLEN )		6186465	5					
ANR	6186527	Condition	n != HEADERLEN	146:8:4138:4151	6186465	0	True				
ANR	6186528	EqualityExpression	n != HEADERLEN		6186465	0		!=			
ANR	6186529	Identifier	n		6186465	0					
ANR	6186530	Identifier	HEADERLEN		6186465	1					
ANR	6186531	CompoundStatement		12:24:265:265	6186465	1					
ANR	6186532	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_EOF	147:1:4157:4179	6186465	0	True				
ANR	6186533	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_EOF		6186465	0		=			
ANR	6186534	ArrayIndexing	ctx -> e [ 0 ]		6186465	0					
ANR	6186535	PtrMemberAccess	ctx -> e		6186465	0					
ANR	6186536	Identifier	ctx		6186465	0					
ANR	6186537	Identifier	e		6186465	1					
ANR	6186538	PrimaryExpression	0		6186465	1					
ANR	6186539	Identifier	ZIP_ER_EOF		6186465	1					
ANR	6186540	ExpressionStatement	ctx -> e [ 1 ] = 0	148:1:4182:4195	6186465	1	True				
ANR	6186541	AssignmentExpression	ctx -> e [ 1 ] = 0		6186465	0		=			
ANR	6186542	ArrayIndexing	ctx -> e [ 1 ]		6186465	0					
ANR	6186543	PtrMemberAccess	ctx -> e		6186465	0					
ANR	6186544	Identifier	ctx		6186465	0					
ANR	6186545	Identifier	e		6186465	1					
ANR	6186546	PrimaryExpression	1		6186465	1					
ANR	6186547	PrimaryExpression	0		6186465	1					
ANR	6186548	ReturnStatement	return - 1 ;	149:1:4198:4207	6186465	2	True				
ANR	6186549	UnaryOperationExpression	- 1		6186465	0					
ANR	6186550	UnaryOperator	-		6186465	0					
ANR	6186551	PrimaryExpression	1		6186465	1					
ANR	6186552	ExpressionStatement	"decrypt ( ctx , header , header , HEADERLEN , 0 )"	152:4:4220:4262	6186465	6	True				
ANR	6186553	CallExpression	"decrypt ( ctx , header , header , HEADERLEN , 0 )"		6186465	0					
ANR	6186554	Callee	decrypt		6186465	0					
ANR	6186555	Identifier	decrypt		6186465	0					
ANR	6186556	ArgumentList	ctx		6186465	1					
ANR	6186557	Argument	ctx		6186465	0					
ANR	6186558	Identifier	ctx		6186465	0					
ANR	6186559	Argument	header		6186465	1					
ANR	6186560	Identifier	header		6186465	0					
ANR	6186561	Argument	header		6186465	2					
ANR	6186562	Identifier	header		6186465	0					
ANR	6186563	Argument	HEADERLEN		6186465	3					
ANR	6186564	Identifier	HEADERLEN		6186465	0					
ANR	6186565	Argument	0		6186465	4					
ANR	6186566	PrimaryExpression	0		6186465	0					
ANR	6186567	IfStatement	"if ( zip_source_stat ( src , & st ) < 0 )"		6186465	7					
ANR	6186568	Condition	"zip_source_stat ( src , & st ) < 0"	154:8:4273:4301	6186465	0	True				
ANR	6186569	RelationalExpression	"zip_source_stat ( src , & st ) < 0"		6186465	0		<			
ANR	6186570	CallExpression	"zip_source_stat ( src , & st )"		6186465	0					
ANR	6186571	Callee	zip_source_stat		6186465	0					
ANR	6186572	Identifier	zip_source_stat		6186465	0					
ANR	6186573	ArgumentList	src		6186465	1					
ANR	6186574	Argument	src		6186465	0					
ANR	6186575	Identifier	src		6186465	0					
ANR	6186576	Argument	& st		6186465	1					
ANR	6186577	UnaryOperationExpression	& st		6186465	0					
ANR	6186578	UnaryOperator	&		6186465	0					
ANR	6186579	Identifier	st		6186465	1					
ANR	6186580	PrimaryExpression	0		6186465	1					
ANR	6186581	CompoundStatement		20:39:415:415	6186465	1					
ANR	6186582	ReturnStatement	return 0 ;	156:1:4352:4360	6186465	0	True				
ANR	6186583	PrimaryExpression	0		6186465	0					
ANR	6186584	ExpressionStatement	"_zip_u2d_time ( st . mtime , & dostime , & dosdate )"	159:4:4373:4416	6186465	8	True				
ANR	6186585	CallExpression	"_zip_u2d_time ( st . mtime , & dostime , & dosdate )"		6186465	0					
ANR	6186586	Callee	_zip_u2d_time		6186465	0					
ANR	6186587	Identifier	_zip_u2d_time		6186465	0					
ANR	6186588	ArgumentList	st . mtime		6186465	1					
ANR	6186589	Argument	st . mtime		6186465	0					
ANR	6186590	MemberAccess	st . mtime		6186465	0					
ANR	6186591	Identifier	st		6186465	0					
ANR	6186592	Identifier	mtime		6186465	1					
ANR	6186593	Argument	& dostime		6186465	1					
ANR	6186594	UnaryOperationExpression	& dostime		6186465	0					
ANR	6186595	UnaryOperator	&		6186465	0					
ANR	6186596	Identifier	dostime		6186465	1					
ANR	6186597	Argument	& dosdate		6186465	2					
ANR	6186598	UnaryOperationExpression	& dosdate		6186465	0					
ANR	6186599	UnaryOperator	&		6186465	0					
ANR	6186600	Identifier	dosdate		6186465	1					
ANR	6186601	IfStatement	if ( header [ HEADERLEN - 1 ] != st . crc >> 24 && header [ HEADERLEN - 1 ] != dostime >> 8 )		6186465	9					
ANR	6186602	Condition	header [ HEADERLEN - 1 ] != st . crc >> 24 && header [ HEADERLEN - 1 ] != dostime >> 8	161:8:4427:4497	6186465	0	True				
ANR	6186603	AndExpression	header [ HEADERLEN - 1 ] != st . crc >> 24 && header [ HEADERLEN - 1 ] != dostime >> 8		6186465	0		&&			
ANR	6186604	EqualityExpression	header [ HEADERLEN - 1 ] != st . crc >> 24		6186465	0		!=			
ANR	6186605	ArrayIndexing	header [ HEADERLEN - 1 ]		6186465	0					
ANR	6186606	Identifier	header		6186465	0					
ANR	6186607	AdditiveExpression	HEADERLEN - 1		6186465	1		-			
ANR	6186608	Identifier	HEADERLEN		6186465	0					
ANR	6186609	PrimaryExpression	1		6186465	1					
ANR	6186610	ShiftExpression	st . crc >> 24		6186465	1		>>			
ANR	6186611	MemberAccess	st . crc		6186465	0					
ANR	6186612	Identifier	st		6186465	0					
ANR	6186613	Identifier	crc		6186465	1					
ANR	6186614	PrimaryExpression	24		6186465	1					
ANR	6186615	EqualityExpression	header [ HEADERLEN - 1 ] != dostime >> 8		6186465	1		!=			
ANR	6186616	ArrayIndexing	header [ HEADERLEN - 1 ]		6186465	0					
ANR	6186617	Identifier	header		6186465	0					
ANR	6186618	AdditiveExpression	HEADERLEN - 1		6186465	1		-			
ANR	6186619	Identifier	HEADERLEN		6186465	0					
ANR	6186620	PrimaryExpression	1		6186465	1					
ANR	6186621	ShiftExpression	dostime >> 8		6186465	1		>>			
ANR	6186622	Identifier	dostime		6186465	0					
ANR	6186623	PrimaryExpression	8		6186465	1					
ANR	6186624	CompoundStatement		28:39:611:611	6186465	1					
ANR	6186625	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_WRONGPASSWD	163:1:4503:4533	6186465	0	True				
ANR	6186626	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_WRONGPASSWD		6186465	0		=			
ANR	6186627	ArrayIndexing	ctx -> e [ 0 ]		6186465	0					
ANR	6186628	PtrMemberAccess	ctx -> e		6186465	0					
ANR	6186629	Identifier	ctx		6186465	0					
ANR	6186630	Identifier	e		6186465	1					
ANR	6186631	PrimaryExpression	0		6186465	1					
ANR	6186632	Identifier	ZIP_ER_WRONGPASSWD		6186465	1					
ANR	6186633	ExpressionStatement	ctx -> e [ 1 ] = 0	164:1:4536:4549	6186465	1	True				
ANR	6186634	AssignmentExpression	ctx -> e [ 1 ] = 0		6186465	0		=			
ANR	6186635	ArrayIndexing	ctx -> e [ 1 ]		6186465	0					
ANR	6186636	PtrMemberAccess	ctx -> e		6186465	0					
ANR	6186637	Identifier	ctx		6186465	0					
ANR	6186638	Identifier	e		6186465	1					
ANR	6186639	PrimaryExpression	1		6186465	1					
ANR	6186640	PrimaryExpression	0		6186465	1					
ANR	6186641	ReturnStatement	return - 1 ;	165:1:4552:4561	6186465	2	True				
ANR	6186642	UnaryOperationExpression	- 1		6186465	0					
ANR	6186643	UnaryOperator	-		6186465	0					
ANR	6186644	PrimaryExpression	1		6186465	1					
ANR	6186645	ReturnStatement	return 0 ;	168:4:4574:4582	6186465	10	True				
ANR	6186646	PrimaryExpression	0		6186465	0					
ANR	6186647	ReturnType	static int		6186465	1					
ANR	6186648	Identifier	decrypt_header		6186465	2					
ANR	6186649	ParameterList	"struct zip_source * src , struct trad_pkware * ctx"		6186465	3					
ANR	6186650	Parameter	struct zip_source * src	134:15:3839:3860	6186465	0	True				
ANR	6186651	ParameterType	struct zip_source *		6186465	0					
ANR	6186652	Identifier	src		6186465	1					
ANR	6186653	Parameter	struct trad_pkware * ctx	134:39:3863:3885	6186465	1	True				
ANR	6186654	ParameterType	struct trad_pkware *		6186465	0					
ANR	6186655	Identifier	ctx		6186465	1					
ANR	6186656	CFGEntryNode	ENTRY		6186465		True				
ANR	6186657	CFGExitNode	EXIT		6186465		True				
ANR	6186658	Symbol	st		6186465						
ANR	6186659	Symbol	zip_source_stat		6186465						
ANR	6186660	Symbol	src		6186465						
ANR	6186661	Symbol	ctx		6186465						
ANR	6186662	Symbol	zip_source_read		6186465						
ANR	6186663	Symbol	* HEADERLEN		6186465						
ANR	6186664	Symbol	HEADERLEN		6186465						
ANR	6186665	Symbol	& dostime		6186465						
ANR	6186666	Symbol	dosdate		6186465						
ANR	6186667	Symbol	ctx -> e		6186465						
ANR	6186668	Symbol	& st		6186465						
ANR	6186669	Symbol	n		6186465						
ANR	6186670	Symbol	* ctx		6186465						
ANR	6186671	Symbol	* header		6186465						
ANR	6186672	Symbol	st . crc		6186465						
ANR	6186673	Symbol	ZIP_ER_WRONGPASSWD		6186465						
ANR	6186674	Symbol	dostime		6186465						
ANR	6186675	Symbol	& dosdate		6186465						
ANR	6186676	Symbol	header		6186465						
ANR	6186677	Symbol	ZIP_ER_EOF		6186465						
ANR	6186678	Symbol	* ctx -> e		6186465						
ANR	6186679	Symbol	* * ctx		6186465						
ANR	6186680	Symbol	st . mtime		6186465						
ANR	6186681	Function	pkware_decrypt	173:0:4590:5721							
ANR	6186682	FunctionDef	"pkware_decrypt (struct zip_source * src , void * ud , void * data , zip_uint64_t len , enum zip_source_cmd cmd)"		6186681	0					
ANR	6186683	CompoundStatement		176:0:4721:5721	6186681	0					
ANR	6186684	IdentifierDeclStatement	struct trad_pkware * ctx ;	177:4:4727:4750	6186681	0	True				
ANR	6186685	IdentifierDecl	* ctx		6186681	0					
ANR	6186686	IdentifierDeclType	struct trad_pkware *		6186681	0					
ANR	6186687	Identifier	ctx		6186681	1					
ANR	6186688	IdentifierDeclStatement	zip_int64_t n ;	178:4:4756:4769	6186681	1	True				
ANR	6186689	IdentifierDecl	n		6186681	0					
ANR	6186690	IdentifierDeclType	zip_int64_t		6186681	0					
ANR	6186691	Identifier	n		6186681	1					
ANR	6186692	ExpressionStatement	ctx = ( struct trad_pkware * ) ud	180:4:4776:4806	6186681	2	True				
ANR	6186693	AssignmentExpression	ctx = ( struct trad_pkware * ) ud		6186681	0		=			
ANR	6186694	Identifier	ctx		6186681	0					
ANR	6186695	CastExpression	( struct trad_pkware * ) ud		6186681	1					
ANR	6186696	CastTarget	struct trad_pkware *		6186681	0					
ANR	6186697	Identifier	ud		6186681	1					
ANR	6186698	SwitchStatement	switch ( cmd )		6186681	3					
ANR	6186699	Condition	cmd	182:12:4821:4823	6186681	0	True				
ANR	6186700	Identifier	cmd		6186681	0					
ANR	6186701	CompoundStatement		7:17:104:104	6186681	1					
ANR	6186702	Label	case ZIP_SOURCE_OPEN :	183:4:4832:4852	6186681	0	True				
ANR	6186703	Identifier	ZIP_SOURCE_OPEN		6186681	0					
ANR	6186704	IfStatement	"if ( decrypt_header ( src , ctx ) < 0 )"		6186681	1					
ANR	6186705	Condition	"decrypt_header ( src , ctx ) < 0"	184:5:4859:4886	6186681	0	True				
ANR	6186706	RelationalExpression	"decrypt_header ( src , ctx ) < 0"		6186681	0		<			
ANR	6186707	CallExpression	"decrypt_header ( src , ctx )"		6186681	0					
ANR	6186708	Callee	decrypt_header		6186681	0					
ANR	6186709	Identifier	decrypt_header		6186681	0					
ANR	6186710	ArgumentList	src		6186681	1					
ANR	6186711	Argument	src		6186681	0					
ANR	6186712	Identifier	src		6186681	0					
ANR	6186713	Argument	ctx		6186681	1					
ANR	6186714	Identifier	ctx		6186681	0					
ANR	6186715	PrimaryExpression	0		6186681	1					
ANR	6186716	ReturnStatement	return - 1 ;	185:5:4894:4903	6186681	1	True				
ANR	6186717	UnaryOperationExpression	- 1		6186681	0					
ANR	6186718	UnaryOperator	-		6186681	0					
ANR	6186719	PrimaryExpression	1		6186681	1					
ANR	6186720	ReturnStatement	return 0 ;	186:1:4906:4914	6186681	2	True				
ANR	6186721	PrimaryExpression	0		6186681	0					
ANR	6186722	Label	case ZIP_SOURCE_READ :	188:4:4921:4941	6186681	3	True				
ANR	6186723	Identifier	ZIP_SOURCE_READ		6186681	0					
ANR	6186724	IfStatement	"if ( ( n = zip_source_read ( src , data , len ) ) < 0 )"		6186681	4					
ANR	6186725	Condition	"( n = zip_source_read ( src , data , len ) ) < 0"	189:5:4948:4986	6186681	0	True				
ANR	6186726	RelationalExpression	"( n = zip_source_read ( src , data , len ) ) < 0"		6186681	0		<			
ANR	6186727	AssignmentExpression	"n = zip_source_read ( src , data , len )"		6186681	0		=			
ANR	6186728	Identifier	n		6186681	0					
ANR	6186729	CallExpression	"zip_source_read ( src , data , len )"		6186681	1					
ANR	6186730	Callee	zip_source_read		6186681	0					
ANR	6186731	Identifier	zip_source_read		6186681	0					
ANR	6186732	ArgumentList	src		6186681	1					
ANR	6186733	Argument	src		6186681	0					
ANR	6186734	Identifier	src		6186681	0					
ANR	6186735	Argument	data		6186681	1					
ANR	6186736	Identifier	data		6186681	0					
ANR	6186737	Argument	len		6186681	2					
ANR	6186738	Identifier	len		6186681	0					
ANR	6186739	PrimaryExpression	0		6186681	1					
ANR	6186740	ReturnStatement	return ZIP_SOURCE_ERR_LOWER ;	190:5:4994:5021	6186681	1	True				
ANR	6186741	Identifier	ZIP_SOURCE_ERR_LOWER		6186681	0					
ANR	6186742	ExpressionStatement	"decrypt ( ( struct trad_pkware * ) ud , ( zip_uint8_t * ) data , ( zip_uint8_t * ) data , ( zip_uint64_t ) n , 0 )"	192:1:5025:5122	6186681	5	True				
ANR	6186743	CallExpression	"decrypt ( ( struct trad_pkware * ) ud , ( zip_uint8_t * ) data , ( zip_uint8_t * ) data , ( zip_uint64_t ) n , 0 )"		6186681	0					
ANR	6186744	Callee	decrypt		6186681	0					
ANR	6186745	Identifier	decrypt		6186681	0					
ANR	6186746	ArgumentList	( struct trad_pkware * ) ud		6186681	1					
ANR	6186747	Argument	( struct trad_pkware * ) ud		6186681	0					
ANR	6186748	CastExpression	( struct trad_pkware * ) ud		6186681	0					
ANR	6186749	CastTarget	struct trad_pkware *		6186681	0					
ANR	6186750	Identifier	ud		6186681	1					
ANR	6186751	Argument	( zip_uint8_t * ) data		6186681	1					
ANR	6186752	CastExpression	( zip_uint8_t * ) data		6186681	0					
ANR	6186753	CastTarget	zip_uint8_t *		6186681	0					
ANR	6186754	Identifier	data		6186681	1					
ANR	6186755	Argument	( zip_uint8_t * ) data		6186681	2					
ANR	6186756	CastExpression	( zip_uint8_t * ) data		6186681	0					
ANR	6186757	CastTarget	zip_uint8_t *		6186681	0					
ANR	6186758	Identifier	data		6186681	1					
ANR	6186759	Argument	( zip_uint64_t ) n		6186681	3					
ANR	6186760	CastExpression	( zip_uint64_t ) n		6186681	0					
ANR	6186761	CastTarget	zip_uint64_t		6186681	0					
ANR	6186762	Identifier	n		6186681	1					
ANR	6186763	Argument	0		6186681	4					
ANR	6186764	PrimaryExpression	0		6186681	0					
ANR	6186765	ReturnStatement	return n ;	194:1:5125:5133	6186681	6	True				
ANR	6186766	Identifier	n		6186681	0					
ANR	6186767	Label	case ZIP_SOURCE_CLOSE :	196:4:5140:5161	6186681	7	True				
ANR	6186768	Identifier	ZIP_SOURCE_CLOSE		6186681	0					
ANR	6186769	ReturnStatement	return 0 ;	197:1:5164:5172	6186681	8	True				
ANR	6186770	PrimaryExpression	0		6186681	0					
ANR	6186771	Label	case ZIP_SOURCE_STAT :	199:4:5179:5199	6186681	9	True				
ANR	6186772	Identifier	ZIP_SOURCE_STAT		6186681	0					
ANR	6186773	CompoundStatement		26:5:487:506	6186681	10					
ANR	6186774	IdentifierDeclStatement	struct zip_stat * st ;	201:5:5209:5228	6186681	0	True				
ANR	6186775	IdentifierDecl	* st		6186681	0					
ANR	6186776	IdentifierDeclType	struct zip_stat *		6186681	0					
ANR	6186777	Identifier	st		6186681	1					
ANR	6186778	ExpressionStatement	st = ( struct zip_stat * ) data	203:5:5236:5264	6186681	1	True				
ANR	6186779	AssignmentExpression	st = ( struct zip_stat * ) data		6186681	0		=			
ANR	6186780	Identifier	st		6186681	0					
ANR	6186781	CastExpression	( struct zip_stat * ) data		6186681	1					
ANR	6186782	CastTarget	struct zip_stat *		6186681	0					
ANR	6186783	Identifier	data		6186681	1					
ANR	6186784	ExpressionStatement	st -> encryption_method = ZIP_EM_NONE	205:5:5272:5307	6186681	2	True				
ANR	6186785	AssignmentExpression	st -> encryption_method = ZIP_EM_NONE		6186681	0		=			
ANR	6186786	PtrMemberAccess	st -> encryption_method		6186681	0					
ANR	6186787	Identifier	st		6186681	0					
ANR	6186788	Identifier	encryption_method		6186681	1					
ANR	6186789	Identifier	ZIP_EM_NONE		6186681	1					
ANR	6186790	ExpressionStatement	st -> valid |= ZIP_STAT_ENCRYPTION_METHOD	206:5:5314:5353	6186681	3	True				
ANR	6186791	AssignmentExpression	st -> valid |= ZIP_STAT_ENCRYPTION_METHOD		6186681	0		|=			
ANR	6186792	PtrMemberAccess	st -> valid		6186681	0					
ANR	6186793	Identifier	st		6186681	0					
ANR	6186794	Identifier	valid		6186681	1					
ANR	6186795	Identifier	ZIP_STAT_ENCRYPTION_METHOD		6186681	1					
ANR	6186796	IfStatement	if ( st -> valid & ZIP_STAT_COMP_SIZE )		6186681	4					
ANR	6186797	Condition	st -> valid & ZIP_STAT_COMP_SIZE	208:9:5424:5453	6186681	0	True				
ANR	6186798	BitAndExpression	st -> valid & ZIP_STAT_COMP_SIZE		6186681	0		&			
ANR	6186799	PtrMemberAccess	st -> valid		6186681	0					
ANR	6186800	Identifier	st		6186681	0					
ANR	6186801	Identifier	valid		6186681	1					
ANR	6186802	Identifier	ZIP_STAT_COMP_SIZE		6186681	1					
ANR	6186803	ExpressionStatement	st -> comp_size -= HEADERLEN	209:2:5458:5484	6186681	1	True				
ANR	6186804	AssignmentExpression	st -> comp_size -= HEADERLEN		6186681	0		-=			
ANR	6186805	PtrMemberAccess	st -> comp_size		6186681	0					
ANR	6186806	Identifier	st		6186681	0					
ANR	6186807	Identifier	comp_size		6186681	1					
ANR	6186808	Identifier	HEADERLEN		6186681	1					
ANR	6186809	ReturnStatement	return 0 ;	211:1:5490:5498	6186681	11	True				
ANR	6186810	PrimaryExpression	0		6186681	0					
ANR	6186811	Label	case ZIP_SOURCE_ERROR :	213:4:5505:5526	6186681	12	True				
ANR	6186812	Identifier	ZIP_SOURCE_ERROR		6186681	0					
ANR	6186813	ExpressionStatement	"memcpy ( data , ctx -> e , sizeof ( int ) * 2 )"	214:1:5529:5564	6186681	13	True				
ANR	6186814	CallExpression	"memcpy ( data , ctx -> e , sizeof ( int ) * 2 )"		6186681	0					
ANR	6186815	Callee	memcpy		6186681	0					
ANR	6186816	Identifier	memcpy		6186681	0					
ANR	6186817	ArgumentList	data		6186681	1					
ANR	6186818	Argument	data		6186681	0					
ANR	6186819	Identifier	data		6186681	0					
ANR	6186820	Argument	ctx -> e		6186681	1					
ANR	6186821	PtrMemberAccess	ctx -> e		6186681	0					
ANR	6186822	Identifier	ctx		6186681	0					
ANR	6186823	Identifier	e		6186681	1					
ANR	6186824	Argument	sizeof ( int ) * 2		6186681	2					
ANR	6186825	MultiplicativeExpression	sizeof ( int ) * 2		6186681	0		*			
ANR	6186826	SizeofExpression	sizeof ( int )		6186681	0					
ANR	6186827	Sizeof	sizeof		6186681	0					
ANR	6186828	SizeofOperand	int		6186681	1					
ANR	6186829	PrimaryExpression	2		6186681	1					
ANR	6186830	ReturnStatement	return sizeof ( int ) * 2 ;	215:1:5567:5587	6186681	14	True				
ANR	6186831	MultiplicativeExpression	sizeof ( int ) * 2		6186681	0		*			
ANR	6186832	SizeofExpression	sizeof ( int )		6186681	0					
ANR	6186833	Sizeof	sizeof		6186681	0					
ANR	6186834	SizeofOperand	int		6186681	1					
ANR	6186835	PrimaryExpression	2		6186681	1					
ANR	6186836	Label	case ZIP_SOURCE_FREE :	217:4:5594:5614	6186681	15	True				
ANR	6186837	Identifier	ZIP_SOURCE_FREE		6186681	0					
ANR	6186838	ExpressionStatement	pkware_free ( ctx )	218:1:5617:5633	6186681	16	True				
ANR	6186839	CallExpression	pkware_free ( ctx )		6186681	0					
ANR	6186840	Callee	pkware_free		6186681	0					
ANR	6186841	Identifier	pkware_free		6186681	0					
ANR	6186842	ArgumentList	ctx		6186681	1					
ANR	6186843	Argument	ctx		6186681	0					
ANR	6186844	Identifier	ctx		6186681	0					
ANR	6186845	ReturnStatement	return 0 ;	219:1:5636:5644	6186681	17	True				
ANR	6186846	PrimaryExpression	0		6186681	0					
ANR	6186847	Label	default :	221:4:5651:5658	6186681	18	True				
ANR	6186848	Identifier	default		6186681	0					
ANR	6186849	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_INVAL	222:1:5661:5685	6186681	19	True				
ANR	6186850	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_INVAL		6186681	0		=			
ANR	6186851	ArrayIndexing	ctx -> e [ 0 ]		6186681	0					
ANR	6186852	PtrMemberAccess	ctx -> e		6186681	0					
ANR	6186853	Identifier	ctx		6186681	0					
ANR	6186854	Identifier	e		6186681	1					
ANR	6186855	PrimaryExpression	0		6186681	1					
ANR	6186856	Identifier	ZIP_ER_INVAL		6186681	1					
ANR	6186857	ExpressionStatement	ctx -> e [ 1 ] = 0	223:1:5688:5701	6186681	20	True				
ANR	6186858	AssignmentExpression	ctx -> e [ 1 ] = 0		6186681	0		=			
ANR	6186859	ArrayIndexing	ctx -> e [ 1 ]		6186681	0					
ANR	6186860	PtrMemberAccess	ctx -> e		6186681	0					
ANR	6186861	Identifier	ctx		6186681	0					
ANR	6186862	Identifier	e		6186681	1					
ANR	6186863	PrimaryExpression	1		6186681	1					
ANR	6186864	PrimaryExpression	0		6186681	1					
ANR	6186865	ReturnStatement	return - 1 ;	224:1:5704:5713	6186681	21	True				
ANR	6186866	UnaryOperationExpression	- 1		6186681	0					
ANR	6186867	UnaryOperator	-		6186681	0					
ANR	6186868	PrimaryExpression	1		6186681	1					
ANR	6186869	ReturnType	static zip_int64_t		6186681	1					
ANR	6186870	Identifier	pkware_decrypt		6186681	2					
ANR	6186871	ParameterList	"struct zip_source * src , void * ud , void * data , zip_uint64_t len , enum zip_source_cmd cmd"		6186681	3					
ANR	6186872	Parameter	struct zip_source * src	174:15:4624:4645	6186681	0	True				
ANR	6186873	ParameterType	struct zip_source *		6186681	0					
ANR	6186874	Identifier	src		6186681	1					
ANR	6186875	Parameter	void * ud	174:39:4648:4655	6186681	1	True				
ANR	6186876	ParameterType	void *		6186681	0					
ANR	6186877	Identifier	ud		6186681	1					
ANR	6186878	Parameter	void * data	174:49:4658:4667	6186681	2	True				
ANR	6186879	ParameterType	void *		6186681	0					
ANR	6186880	Identifier	data		6186681	1					
ANR	6186881	Parameter	zip_uint64_t len	175:8:4678:4693	6186681	3	True				
ANR	6186882	ParameterType	zip_uint64_t		6186681	0					
ANR	6186883	Identifier	len		6186681	1					
ANR	6186884	Parameter	enum zip_source_cmd cmd	175:26:4696:4718	6186681	4	True				
ANR	6186885	ParameterType	enum zip_source_cmd		6186681	0					
ANR	6186886	Identifier	cmd		6186681	1					
ANR	6186887	CFGEntryNode	ENTRY		6186681		True				
ANR	6186888	CFGExitNode	EXIT		6186681		True				
ANR	6186889	Symbol	st		6186681						
ANR	6186890	Symbol	data		6186681						
ANR	6186891	Symbol	* st		6186681						
ANR	6186892	Symbol	src		6186681						
ANR	6186893	Symbol	ctx		6186681						
ANR	6186894	Symbol	st -> encryption_method		6186681						
ANR	6186895	Symbol	zip_source_read		6186681						
ANR	6186896	Symbol	HEADERLEN		6186681						
ANR	6186897	Symbol	ctx -> e		6186681						
ANR	6186898	Symbol	decrypt_header		6186681						
ANR	6186899	Symbol	ZIP_EM_NONE		6186681						
ANR	6186900	Symbol	st -> comp_size		6186681						
ANR	6186901	Symbol	n		6186681						
ANR	6186902	Symbol	* ctx		6186681						
ANR	6186903	Symbol	ud		6186681						
ANR	6186904	Symbol	ZIP_STAT_ENCRYPTION_METHOD		6186681						
ANR	6186905	Symbol	ZIP_ER_INVAL		6186681						
ANR	6186906	Symbol	len		6186681						
ANR	6186907	Symbol	ZIP_STAT_COMP_SIZE		6186681						
ANR	6186908	Symbol	* ctx -> e		6186681						
ANR	6186909	Symbol	cmd		6186681						
ANR	6186910	Symbol	* * ctx		6186681						
ANR	6186911	Symbol	ZIP_SOURCE_ERR_LOWER		6186681						
ANR	6186912	Symbol	st -> valid		6186681						
ANR	6186913	Function	pkware_free	230:0:5727:5793							
ANR	6186914	FunctionDef	pkware_free (struct trad_pkware * ctx)		6186913	0					
ANR	6186915	CompoundStatement		232:0:5776:5793	6186913	0					
ANR	6186916	ExpressionStatement	free ( ctx )	233:4:5782:5791	6186913	0	True				
ANR	6186917	CallExpression	free ( ctx )		6186913	0					
ANR	6186918	Callee	free		6186913	0					
ANR	6186919	Identifier	free		6186913	0					
ANR	6186920	ArgumentList	ctx		6186913	1					
ANR	6186921	Argument	ctx		6186913	0					
ANR	6186922	Identifier	ctx		6186913	0					
ANR	6186923	ReturnType	static void		6186913	1					
ANR	6186924	Identifier	pkware_free		6186913	2					
ANR	6186925	ParameterList	struct trad_pkware * ctx		6186913	3					
ANR	6186926	Parameter	struct trad_pkware * ctx	231:12:5751:5773	6186913	0	True				
ANR	6186927	ParameterType	struct trad_pkware *		6186913	0					
ANR	6186928	Identifier	ctx		6186913	1					
ANR	6186929	CFGEntryNode	ENTRY		6186913		True				
ANR	6186930	CFGExitNode	EXIT		6186913		True				
ANR	6186931	Symbol	ctx		6186913						
