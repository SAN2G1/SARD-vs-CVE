command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4467395	File	data/converged/CVE-2019-16718~_radare2/libr_core_hack.c								
ANR	4467396	Function	r_core_hack_help	10:0:241:1080							
ANR	4467397	FunctionDef	r_core_hack_help (const RCore * core)		4467396	0					
ANR	4467398	CompoundStatement		10:41:282:1080	4467396	0					
ANR	4467399	IdentifierDeclStatement	"const char * help_msg [ ] = { ""wao"" , "" [op]"" , ""performs a modification on current opcode"" , ""wao"" , "" nop"" , ""nop current opcode"" , ""wao"" , "" jinf"" , ""assemble an infinite loop"" , ""wao"" , "" jz"" , ""make current opcode conditional (zero)"" , ""wao"" , "" jnz"" , ""make current opcode conditional (not zero)"" , ""wao"" , "" ret1"" , ""make the current opcode return 1"" , ""wao"" , "" ret0"" , ""make the current opcode return 0"" , ""wao"" , "" retn"" , ""make the current opcode return -1"" , ""wao"" , "" nocj"" , ""remove conditional operation from branch (make it unconditional)"" , ""wao"" , "" trap"" , ""make the current opcode a trap"" , ""wao"" , "" recj"" , ""reverse (swap) conditional branch instruction"" , ""WIP:"" , """" , ""not all archs are supported and not all commands work on all archs"" , NULL } ;"	11:1:285:1043	4467396	0	True				
ANR	4467400	IdentifierDecl	"* help_msg [ ] = { ""wao"" , "" [op]"" , ""performs a modification on current opcode"" , ""wao"" , "" nop"" , ""nop current opcode"" , ""wao"" , "" jinf"" , ""assemble an infinite loop"" , ""wao"" , "" jz"" , ""make current opcode conditional (zero)"" , ""wao"" , "" jnz"" , ""make current opcode conditional (not zero)"" , ""wao"" , "" ret1"" , ""make the current opcode return 1"" , ""wao"" , "" ret0"" , ""make the current opcode return 0"" , ""wao"" , "" retn"" , ""make the current opcode return -1"" , ""wao"" , "" nocj"" , ""remove conditional operation from branch (make it unconditional)"" , ""wao"" , "" trap"" , ""make the current opcode a trap"" , ""wao"" , "" recj"" , ""reverse (swap) conditional branch instruction"" , ""WIP:"" , """" , ""not all archs are supported and not all commands work on all archs"" , NULL }"		4467396	0					
ANR	4467401	IdentifierDeclType	const char * [ ]		4467396	0					
ANR	4467402	Identifier	help_msg		4467396	1					
ANR	4467403	AssignmentExpression	"* help_msg [ ] = { ""wao"" , "" [op]"" , ""performs a modification on current opcode"" , ""wao"" , "" nop"" , ""nop current opcode"" , ""wao"" , "" jinf"" , ""assemble an infinite loop"" , ""wao"" , "" jz"" , ""make current opcode conditional (zero)"" , ""wao"" , "" jnz"" , ""make current opcode conditional (not zero)"" , ""wao"" , "" ret1"" , ""make the current opcode return 1"" , ""wao"" , "" ret0"" , ""make the current opcode return 0"" , ""wao"" , "" retn"" , ""make the current opcode return -1"" , ""wao"" , "" nocj"" , ""remove conditional operation from branch (make it unconditional)"" , ""wao"" , "" trap"" , ""make the current opcode a trap"" , ""wao"" , "" recj"" , ""reverse (swap) conditional branch instruction"" , ""WIP:"" , """" , ""not all archs are supported and not all commands work on all archs"" , NULL }"		4467396	2		=			
ANR	4467404	Identifier	help_msg		4467396	0					
ANR	4467405	InitializerList	"""wao"""		4467396	1					
ANR	4467406	PrimaryExpression	"""wao"""		4467396	0					
ANR	4467407	PrimaryExpression	""" [op]"""		4467396	1					
ANR	4467408	PrimaryExpression	"""performs a modification on current opcode"""		4467396	2					
ANR	4467409	PrimaryExpression	"""wao"""		4467396	3					
ANR	4467410	PrimaryExpression	""" nop"""		4467396	4					
ANR	4467411	PrimaryExpression	"""nop current opcode"""		4467396	5					
ANR	4467412	PrimaryExpression	"""wao"""		4467396	6					
ANR	4467413	PrimaryExpression	""" jinf"""		4467396	7					
ANR	4467414	PrimaryExpression	"""assemble an infinite loop"""		4467396	8					
ANR	4467415	PrimaryExpression	"""wao"""		4467396	9					
ANR	4467416	PrimaryExpression	""" jz"""		4467396	10					
ANR	4467417	PrimaryExpression	"""make current opcode conditional (zero)"""		4467396	11					
ANR	4467418	PrimaryExpression	"""wao"""		4467396	12					
ANR	4467419	PrimaryExpression	""" jnz"""		4467396	13					
ANR	4467420	PrimaryExpression	"""make current opcode conditional (not zero)"""		4467396	14					
ANR	4467421	PrimaryExpression	"""wao"""		4467396	15					
ANR	4467422	PrimaryExpression	""" ret1"""		4467396	16					
ANR	4467423	PrimaryExpression	"""make the current opcode return 1"""		4467396	17					
ANR	4467424	PrimaryExpression	"""wao"""		4467396	18					
ANR	4467425	PrimaryExpression	""" ret0"""		4467396	19					
ANR	4467426	PrimaryExpression	"""make the current opcode return 0"""		4467396	20					
ANR	4467427	PrimaryExpression	"""wao"""		4467396	21					
ANR	4467428	PrimaryExpression	""" retn"""		4467396	22					
ANR	4467429	PrimaryExpression	"""make the current opcode return -1"""		4467396	23					
ANR	4467430	PrimaryExpression	"""wao"""		4467396	24					
ANR	4467431	PrimaryExpression	""" nocj"""		4467396	25					
ANR	4467432	PrimaryExpression	"""remove conditional operation from branch (make it unconditional)"""		4467396	26					
ANR	4467433	PrimaryExpression	"""wao"""		4467396	27					
ANR	4467434	PrimaryExpression	""" trap"""		4467396	28					
ANR	4467435	PrimaryExpression	"""make the current opcode a trap"""		4467396	29					
ANR	4467436	PrimaryExpression	"""wao"""		4467396	30					
ANR	4467437	PrimaryExpression	""" recj"""		4467396	31					
ANR	4467438	PrimaryExpression	"""reverse (swap) conditional branch instruction"""		4467396	32					
ANR	4467439	PrimaryExpression	"""WIP:"""		4467396	33					
ANR	4467440	PrimaryExpression	""""""		4467396	34					
ANR	4467441	PrimaryExpression	"""not all archs are supported and not all commands work on all archs"""		4467396	35					
ANR	4467442	Identifier	NULL		4467396	36					
ANR	4467443	ExpressionStatement	"r_core_cmd_help ( core , help_msg )"	26:1:1046:1078	4467396	1	True				
ANR	4467444	CallExpression	"r_core_cmd_help ( core , help_msg )"		4467396	0					
ANR	4467445	Callee	r_core_cmd_help		4467396	0					
ANR	4467446	Identifier	r_core_cmd_help		4467396	0					
ANR	4467447	ArgumentList	core		4467396	1					
ANR	4467448	Argument	core		4467396	0					
ANR	4467449	Identifier	core		4467396	0					
ANR	4467450	Argument	help_msg		4467396	1					
ANR	4467451	Identifier	help_msg		4467396	0					
ANR	4467452	ReturnType	void		4467396	1					
ANR	4467453	Identifier	r_core_hack_help		4467396	2					
ANR	4467454	ParameterList	const RCore * core		4467396	3					
ANR	4467455	Parameter	const RCore * core	10:22:263:279	4467396	0	True				
ANR	4467456	ParameterType	const RCore *		4467396	0					
ANR	4467457	Identifier	core		4467396	1					
ANR	4467458	CFGEntryNode	ENTRY		4467396		True				
ANR	4467459	CFGExitNode	EXIT		4467396		True				
ANR	4467460	Symbol	core		4467396						
ANR	4467461	Symbol	help_msg		4467396						
ANR	4467462	Symbol	NULL		4467396						
ANR	4467463	Function	r_core_hack_dalvik	29:0:1083:1598							
ANR	4467464	FunctionDef	"r_core_hack_dalvik (RCore * core , const char * op , const RAnalOp * analop)"		4467463	0					
ANR	4467465	CompoundStatement		29:82:1165:1598	4467463	0					
ANR	4467466	IfStatement	"if ( ! strcmp ( op , ""nop"" ) )"		4467463	0					
ANR	4467467	Condition	"! strcmp ( op , ""nop"" )"	30:5:1172:1190	4467463	0	True				
ANR	4467468	UnaryOperationExpression	"! strcmp ( op , ""nop"" )"		4467463	0					
ANR	4467469	UnaryOperator	!		4467463	0					
ANR	4467470	CallExpression	"strcmp ( op , ""nop"" )"		4467463	1					
ANR	4467471	Callee	strcmp		4467463	0					
ANR	4467472	Identifier	strcmp		4467463	0					
ANR	4467473	ArgumentList	op		4467463	1					
ANR	4467474	Argument	op		4467463	0					
ANR	4467475	Identifier	op		4467463	0					
ANR	4467476	Argument	"""nop"""		4467463	1					
ANR	4467477	PrimaryExpression	"""nop"""		4467463	0					
ANR	4467478	CompoundStatement		2:26:27:27	4467463	1					
ANR	4467479	ExpressionStatement	"r_core_cmdf ( core , ""wx 0000"" )"	31:2:1197:1226	4467463	0	True				
ANR	4467480	CallExpression	"r_core_cmdf ( core , ""wx 0000"" )"		4467463	0					
ANR	4467481	Callee	r_core_cmdf		4467463	0					
ANR	4467482	Identifier	r_core_cmdf		4467463	0					
ANR	4467483	ArgumentList	core		4467463	1					
ANR	4467484	Argument	core		4467463	0					
ANR	4467485	Identifier	core		4467463	0					
ANR	4467486	Argument	"""wx 0000"""		4467463	1					
ANR	4467487	PrimaryExpression	"""wx 0000"""		4467463	0					
ANR	4467488	ElseStatement	else		4467463	0					
ANR	4467489	IfStatement	"if ( ! strcmp ( op , ""ret2"" ) )"		4467463	0					
ANR	4467490	Condition	"! strcmp ( op , ""ret2"" )"	32:12:1240:1259	4467463	0	True				
ANR	4467491	UnaryOperationExpression	"! strcmp ( op , ""ret2"" )"		4467463	0					
ANR	4467492	UnaryOperator	!		4467463	0					
ANR	4467493	CallExpression	"strcmp ( op , ""ret2"" )"		4467463	1					
ANR	4467494	Callee	strcmp		4467463	0					
ANR	4467495	Identifier	strcmp		4467463	0					
ANR	4467496	ArgumentList	op		4467463	1					
ANR	4467497	Argument	op		4467463	0					
ANR	4467498	Identifier	op		4467463	0					
ANR	4467499	Argument	"""ret2"""		4467463	1					
ANR	4467500	PrimaryExpression	"""ret2"""		4467463	0					
ANR	4467501	CompoundStatement		4:34:96:96	4467463	1					
ANR	4467502	ExpressionStatement	"r_core_cmdf ( core , ""wx 12200f00"" )"	33:2:1266:1299	4467463	0	True				
ANR	4467503	CallExpression	"r_core_cmdf ( core , ""wx 12200f00"" )"		4467463	0					
ANR	4467504	Callee	r_core_cmdf		4467463	0					
ANR	4467505	Identifier	r_core_cmdf		4467463	0					
ANR	4467506	ArgumentList	core		4467463	1					
ANR	4467507	Argument	core		4467463	0					
ANR	4467508	Identifier	core		4467463	0					
ANR	4467509	Argument	"""wx 12200f00"""		4467463	1					
ANR	4467510	PrimaryExpression	"""wx 12200f00"""		4467463	0					
ANR	4467511	ElseStatement	else		4467463	0					
ANR	4467512	IfStatement	"if ( ! strcmp ( op , ""ret1"" ) )"		4467463	0					
ANR	4467513	Condition	"! strcmp ( op , ""ret1"" )"	34:12:1333:1352	4467463	0	True				
ANR	4467514	UnaryOperationExpression	"! strcmp ( op , ""ret1"" )"		4467463	0					
ANR	4467515	UnaryOperator	!		4467463	0					
ANR	4467516	CallExpression	"strcmp ( op , ""ret1"" )"		4467463	1					
ANR	4467517	Callee	strcmp		4467463	0					
ANR	4467518	Identifier	strcmp		4467463	0					
ANR	4467519	ArgumentList	op		4467463	1					
ANR	4467520	Argument	op		4467463	0					
ANR	4467521	Identifier	op		4467463	0					
ANR	4467522	Argument	"""ret1"""		4467463	1					
ANR	4467523	PrimaryExpression	"""ret1"""		4467463	0					
ANR	4467524	CompoundStatement		6:34:189:189	4467463	1					
ANR	4467525	ExpressionStatement	"r_core_cmdf ( core , ""wx 12100f00"" )"	35:2:1359:1392	4467463	0	True				
ANR	4467526	CallExpression	"r_core_cmdf ( core , ""wx 12100f00"" )"		4467463	0					
ANR	4467527	Callee	r_core_cmdf		4467463	0					
ANR	4467528	Identifier	r_core_cmdf		4467463	0					
ANR	4467529	ArgumentList	core		4467463	1					
ANR	4467530	Argument	core		4467463	0					
ANR	4467531	Identifier	core		4467463	0					
ANR	4467532	Argument	"""wx 12100f00"""		4467463	1					
ANR	4467533	PrimaryExpression	"""wx 12100f00"""		4467463	0					
ANR	4467534	ElseStatement	else		4467463	0					
ANR	4467535	IfStatement	"if ( ! strcmp ( op , ""ret0"" ) )"		4467463	0					
ANR	4467536	Condition	"! strcmp ( op , ""ret0"" )"	36:12:1426:1445	4467463	0	True				
ANR	4467537	UnaryOperationExpression	"! strcmp ( op , ""ret0"" )"		4467463	0					
ANR	4467538	UnaryOperator	!		4467463	0					
ANR	4467539	CallExpression	"strcmp ( op , ""ret0"" )"		4467463	1					
ANR	4467540	Callee	strcmp		4467463	0					
ANR	4467541	Identifier	strcmp		4467463	0					
ANR	4467542	ArgumentList	op		4467463	1					
ANR	4467543	Argument	op		4467463	0					
ANR	4467544	Identifier	op		4467463	0					
ANR	4467545	Argument	"""ret0"""		4467463	1					
ANR	4467546	PrimaryExpression	"""ret0"""		4467463	0					
ANR	4467547	CompoundStatement		8:34:282:282	4467463	1					
ANR	4467548	ExpressionStatement	"r_core_cmdf ( core , ""wx 12000f00"" )"	37:2:1452:1485	4467463	0	True				
ANR	4467549	CallExpression	"r_core_cmdf ( core , ""wx 12000f00"" )"		4467463	0					
ANR	4467550	Callee	r_core_cmdf		4467463	0					
ANR	4467551	Identifier	r_core_cmdf		4467463	0					
ANR	4467552	ArgumentList	core		4467463	1					
ANR	4467553	Argument	core		4467463	0					
ANR	4467554	Identifier	core		4467463	0					
ANR	4467555	Argument	"""wx 12000f00"""		4467463	1					
ANR	4467556	PrimaryExpression	"""wx 12000f00"""		4467463	0					
ANR	4467557	ElseStatement	else		4467463	0					
ANR	4467558	CompoundStatement		10:8:349:349	4467463	0					
ANR	4467559	ExpressionStatement	"eprintf ( ""Unsupported operation '%s'\\n"" , op )"	39:2:1519:1563	4467463	0	True				
ANR	4467560	CallExpression	"eprintf ( ""Unsupported operation '%s'\\n"" , op )"		4467463	0					
ANR	4467561	Callee	eprintf		4467463	0					
ANR	4467562	Identifier	eprintf		4467463	0					
ANR	4467563	ArgumentList	"""Unsupported operation '%s'\\n"""		4467463	1					
ANR	4467564	Argument	"""Unsupported operation '%s'\\n"""		4467463	0					
ANR	4467565	PrimaryExpression	"""Unsupported operation '%s'\\n"""		4467463	0					
ANR	4467566	Argument	op		4467463	1					
ANR	4467567	Identifier	op		4467463	0					
ANR	4467568	ReturnStatement	return false ;	40:2:1567:1579	4467463	1	True				
ANR	4467569	Identifier	false		4467463	0					
ANR	4467570	ReturnStatement	return true ;	42:1:1585:1596	4467463	1	True				
ANR	4467571	Identifier	true		4467463	0					
ANR	4467572	ReturnType	R_API bool		4467463	1					
ANR	4467573	Identifier	r_core_hack_dalvik		4467463	2					
ANR	4467574	ParameterList	"RCore * core , const char * op , const RAnalOp * analop"		4467463	3					
ANR	4467575	Parameter	RCore * core	29:30:1113:1123	4467463	0	True				
ANR	4467576	ParameterType	RCore *		4467463	0					
ANR	4467577	Identifier	core		4467463	1					
ANR	4467578	Parameter	const char * op	29:43:1126:1139	4467463	1	True				
ANR	4467579	ParameterType	const char *		4467463	0					
ANR	4467580	Identifier	op		4467463	1					
ANR	4467581	Parameter	const RAnalOp * analop	29:59:1142:1162	4467463	2	True				
ANR	4467582	ParameterType	const RAnalOp *		4467463	0					
ANR	4467583	Identifier	analop		4467463	1					
ANR	4467584	CFGEntryNode	ENTRY		4467463		True				
ANR	4467585	CFGExitNode	EXIT		4467463		True				
ANR	4467586	Symbol	strcmp		4467463						
ANR	4467587	Symbol	core		4467463						
ANR	4467588	Symbol	op		4467463						
ANR	4467589	Symbol	analop		4467463						
ANR	4467590	Symbol	false		4467463						
ANR	4467591	Symbol	true		4467463						
ANR	4467592	Function	r_core_hack_arm64	45:0:1601:2666							
ANR	4467593	FunctionDef	"r_core_hack_arm64 (RCore * core , const char * op , const RAnalOp * analop)"		4467592	0					
ANR	4467594	CompoundStatement		45:81:1682:2666	4467592	0					
ANR	4467595	IfStatement	"if ( ! strcmp ( op , ""nop"" ) )"		4467592	0					
ANR	4467596	Condition	"! strcmp ( op , ""nop"" )"	46:5:1689:1707	4467592	0	True				
ANR	4467597	UnaryOperationExpression	"! strcmp ( op , ""nop"" )"		4467592	0					
ANR	4467598	UnaryOperator	!		4467592	0					
ANR	4467599	CallExpression	"strcmp ( op , ""nop"" )"		4467592	1					
ANR	4467600	Callee	strcmp		4467592	0					
ANR	4467601	Identifier	strcmp		4467592	0					
ANR	4467602	ArgumentList	op		4467592	1					
ANR	4467603	Argument	op		4467592	0					
ANR	4467604	Identifier	op		4467592	0					
ANR	4467605	Argument	"""nop"""		4467592	1					
ANR	4467606	PrimaryExpression	"""nop"""		4467592	0					
ANR	4467607	CompoundStatement		2:26:27:27	4467592	1					
ANR	4467608	ExpressionStatement	"r_core_cmdf ( core , ""wx 1f2003d5"" )"	47:2:1714:1747	4467592	0	True				
ANR	4467609	CallExpression	"r_core_cmdf ( core , ""wx 1f2003d5"" )"		4467592	0					
ANR	4467610	Callee	r_core_cmdf		4467592	0					
ANR	4467611	Identifier	r_core_cmdf		4467592	0					
ANR	4467612	ArgumentList	core		4467592	1					
ANR	4467613	Argument	core		4467592	0					
ANR	4467614	Identifier	core		4467592	0					
ANR	4467615	Argument	"""wx 1f2003d5"""		4467592	1					
ANR	4467616	PrimaryExpression	"""wx 1f2003d5"""		4467592	0					
ANR	4467617	ElseStatement	else		4467592	0					
ANR	4467618	IfStatement	"if ( ! strcmp ( op , ""ret"" ) )"		4467592	0					
ANR	4467619	Condition	"! strcmp ( op , ""ret"" )"	48:12:1761:1779	4467592	0	True				
ANR	4467620	UnaryOperationExpression	"! strcmp ( op , ""ret"" )"		4467592	0					
ANR	4467621	UnaryOperator	!		4467592	0					
ANR	4467622	CallExpression	"strcmp ( op , ""ret"" )"		4467592	1					
ANR	4467623	Callee	strcmp		4467592	0					
ANR	4467624	Identifier	strcmp		4467592	0					
ANR	4467625	ArgumentList	op		4467592	1					
ANR	4467626	Argument	op		4467592	0					
ANR	4467627	Identifier	op		4467592	0					
ANR	4467628	Argument	"""ret"""		4467592	1					
ANR	4467629	PrimaryExpression	"""ret"""		4467592	0					
ANR	4467630	CompoundStatement		4:33:99:99	4467592	1					
ANR	4467631	ExpressionStatement	"r_core_cmdf ( core , ""wx c0035fd6t"" )"	49:2:1786:1820	4467592	0	True				
ANR	4467632	CallExpression	"r_core_cmdf ( core , ""wx c0035fd6t"" )"		4467592	0					
ANR	4467633	Callee	r_core_cmdf		4467592	0					
ANR	4467634	Identifier	r_core_cmdf		4467592	0					
ANR	4467635	ArgumentList	core		4467592	1					
ANR	4467636	Argument	core		4467592	0					
ANR	4467637	Identifier	core		4467592	0					
ANR	4467638	Argument	"""wx c0035fd6t"""		4467592	1					
ANR	4467639	PrimaryExpression	"""wx c0035fd6t"""		4467592	0					
ANR	4467640	ElseStatement	else		4467592	0					
ANR	4467641	IfStatement	"if ( ! strcmp ( op , ""trap"" ) )"		4467592	0					
ANR	4467642	Condition	"! strcmp ( op , ""trap"" )"	50:12:1834:1853	4467592	0	True				
ANR	4467643	UnaryOperationExpression	"! strcmp ( op , ""trap"" )"		4467592	0					
ANR	4467644	UnaryOperator	!		4467592	0					
ANR	4467645	CallExpression	"strcmp ( op , ""trap"" )"		4467592	1					
ANR	4467646	Callee	strcmp		4467592	0					
ANR	4467647	Identifier	strcmp		4467592	0					
ANR	4467648	ArgumentList	op		4467592	1					
ANR	4467649	Argument	op		4467592	0					
ANR	4467650	Identifier	op		4467592	0					
ANR	4467651	Argument	"""trap"""		4467592	1					
ANR	4467652	PrimaryExpression	"""trap"""		4467592	0					
ANR	4467653	CompoundStatement		6:34:173:173	4467592	1					
ANR	4467654	ExpressionStatement	"r_core_cmdf ( core , ""wx 000020d4"" )"	51:2:1860:1893	4467592	0	True				
ANR	4467655	CallExpression	"r_core_cmdf ( core , ""wx 000020d4"" )"		4467592	0					
ANR	4467656	Callee	r_core_cmdf		4467592	0					
ANR	4467657	Identifier	r_core_cmdf		4467592	0					
ANR	4467658	ArgumentList	core		4467592	1					
ANR	4467659	Argument	core		4467592	0					
ANR	4467660	Identifier	core		4467592	0					
ANR	4467661	Argument	"""wx 000020d4"""		4467592	1					
ANR	4467662	PrimaryExpression	"""wx 000020d4"""		4467592	0					
ANR	4467663	ElseStatement	else		4467592	0					
ANR	4467664	IfStatement	"if ( ! strcmp ( op , ""jz"" ) )"		4467592	0					
ANR	4467665	Condition	"! strcmp ( op , ""jz"" )"	52:12:1907:1924	4467592	0	True				
ANR	4467666	UnaryOperationExpression	"! strcmp ( op , ""jz"" )"		4467592	0					
ANR	4467667	UnaryOperator	!		4467592	0					
ANR	4467668	CallExpression	"strcmp ( op , ""jz"" )"		4467592	1					
ANR	4467669	Callee	strcmp		4467592	0					
ANR	4467670	Identifier	strcmp		4467592	0					
ANR	4467671	ArgumentList	op		4467592	1					
ANR	4467672	Argument	op		4467592	0					
ANR	4467673	Identifier	op		4467592	0					
ANR	4467674	Argument	"""jz"""		4467592	1					
ANR	4467675	PrimaryExpression	"""jz"""		4467592	0					
ANR	4467676	CompoundStatement		8:32:244:244	4467592	1					
ANR	4467677	ExpressionStatement	"eprintf ( ""ARM jz hack not supported\\n"" )"	53:2:1931:1970	4467592	0	True				
ANR	4467678	CallExpression	"eprintf ( ""ARM jz hack not supported\\n"" )"		4467592	0					
ANR	4467679	Callee	eprintf		4467592	0					
ANR	4467680	Identifier	eprintf		4467592	0					
ANR	4467681	ArgumentList	"""ARM jz hack not supported\\n"""		4467592	1					
ANR	4467682	Argument	"""ARM jz hack not supported\\n"""		4467592	0					
ANR	4467683	PrimaryExpression	"""ARM jz hack not supported\\n"""		4467592	0					
ANR	4467684	ReturnStatement	return false ;	54:2:1974:1986	4467592	1	True				
ANR	4467685	Identifier	false		4467592	0					
ANR	4467686	ElseStatement	else		4467592	0					
ANR	4467687	IfStatement	"if ( ! strcmp ( op , ""jinf"" ) )"		4467592	0					
ANR	4467688	Condition	"! strcmp ( op , ""jinf"" )"	55:12:2000:2019	4467592	0	True				
ANR	4467689	UnaryOperationExpression	"! strcmp ( op , ""jinf"" )"		4467592	0					
ANR	4467690	UnaryOperator	!		4467592	0					
ANR	4467691	CallExpression	"strcmp ( op , ""jinf"" )"		4467592	1					
ANR	4467692	Callee	strcmp		4467592	0					
ANR	4467693	Identifier	strcmp		4467592	0					
ANR	4467694	ArgumentList	op		4467592	1					
ANR	4467695	Argument	op		4467592	0					
ANR	4467696	Identifier	op		4467592	0					
ANR	4467697	Argument	"""jinf"""		4467592	1					
ANR	4467698	PrimaryExpression	"""jinf"""		4467592	0					
ANR	4467699	CompoundStatement		11:34:339:339	4467592	1					
ANR	4467700	ExpressionStatement	"r_core_cmdf ( core , ""wx 00000014"" )"	56:2:2026:2059	4467592	0	True				
ANR	4467701	CallExpression	"r_core_cmdf ( core , ""wx 00000014"" )"		4467592	0					
ANR	4467702	Callee	r_core_cmdf		4467592	0					
ANR	4467703	Identifier	r_core_cmdf		4467592	0					
ANR	4467704	ArgumentList	core		4467592	1					
ANR	4467705	Argument	core		4467592	0					
ANR	4467706	Identifier	core		4467592	0					
ANR	4467707	Argument	"""wx 00000014"""		4467592	1					
ANR	4467708	PrimaryExpression	"""wx 00000014"""		4467592	0					
ANR	4467709	ElseStatement	else		4467592	0					
ANR	4467710	IfStatement	"if ( ! strcmp ( op , ""jnz"" ) )"		4467592	0					
ANR	4467711	Condition	"! strcmp ( op , ""jnz"" )"	57:12:2073:2091	4467592	0	True				
ANR	4467712	UnaryOperationExpression	"! strcmp ( op , ""jnz"" )"		4467592	0					
ANR	4467713	UnaryOperator	!		4467592	0					
ANR	4467714	CallExpression	"strcmp ( op , ""jnz"" )"		4467592	1					
ANR	4467715	Callee	strcmp		4467592	0					
ANR	4467716	Identifier	strcmp		4467592	0					
ANR	4467717	ArgumentList	op		4467592	1					
ANR	4467718	Argument	op		4467592	0					
ANR	4467719	Identifier	op		4467592	0					
ANR	4467720	Argument	"""jnz"""		4467592	1					
ANR	4467721	PrimaryExpression	"""jnz"""		4467592	0					
ANR	4467722	CompoundStatement		13:33:411:411	4467592	1					
ANR	4467723	ExpressionStatement	"eprintf ( ""ARM jnz hack not supported\\n"" )"	58:2:2098:2138	4467592	0	True				
ANR	4467724	CallExpression	"eprintf ( ""ARM jnz hack not supported\\n"" )"		4467592	0					
ANR	4467725	Callee	eprintf		4467592	0					
ANR	4467726	Identifier	eprintf		4467592	0					
ANR	4467727	ArgumentList	"""ARM jnz hack not supported\\n"""		4467592	1					
ANR	4467728	Argument	"""ARM jnz hack not supported\\n"""		4467592	0					
ANR	4467729	PrimaryExpression	"""ARM jnz hack not supported\\n"""		4467592	0					
ANR	4467730	ReturnStatement	return false ;	59:2:2142:2154	4467592	1	True				
ANR	4467731	Identifier	false		4467592	0					
ANR	4467732	ElseStatement	else		4467592	0					
ANR	4467733	IfStatement	"if ( ! strcmp ( op , ""nocj"" ) )"		4467592	0					
ANR	4467734	Condition	"! strcmp ( op , ""nocj"" )"	60:12:2168:2187	4467592	0	True				
ANR	4467735	UnaryOperationExpression	"! strcmp ( op , ""nocj"" )"		4467592	0					
ANR	4467736	UnaryOperator	!		4467592	0					
ANR	4467737	CallExpression	"strcmp ( op , ""nocj"" )"		4467592	1					
ANR	4467738	Callee	strcmp		4467592	0					
ANR	4467739	Identifier	strcmp		4467592	0					
ANR	4467740	ArgumentList	op		4467592	1					
ANR	4467741	Argument	op		4467592	0					
ANR	4467742	Identifier	op		4467592	0					
ANR	4467743	Argument	"""nocj"""		4467592	1					
ANR	4467744	PrimaryExpression	"""nocj"""		4467592	0					
ANR	4467745	CompoundStatement		16:34:507:507	4467592	1					
ANR	4467746	ExpressionStatement	"eprintf ( ""ARM jnz hack not supported\\n"" )"	61:2:2194:2234	4467592	0	True				
ANR	4467747	CallExpression	"eprintf ( ""ARM jnz hack not supported\\n"" )"		4467592	0					
ANR	4467748	Callee	eprintf		4467592	0					
ANR	4467749	Identifier	eprintf		4467592	0					
ANR	4467750	ArgumentList	"""ARM jnz hack not supported\\n"""		4467592	1					
ANR	4467751	Argument	"""ARM jnz hack not supported\\n"""		4467592	0					
ANR	4467752	PrimaryExpression	"""ARM jnz hack not supported\\n"""		4467592	0					
ANR	4467753	ReturnStatement	return false ;	62:2:2238:2250	4467592	1	True				
ANR	4467754	Identifier	false		4467592	0					
ANR	4467755	ElseStatement	else		4467592	0					
ANR	4467756	IfStatement	"if ( ! strcmp ( op , ""recj"" ) )"		4467592	0					
ANR	4467757	Condition	"! strcmp ( op , ""recj"" )"	63:12:2264:2283	4467592	0	True				
ANR	4467758	UnaryOperationExpression	"! strcmp ( op , ""recj"" )"		4467592	0					
ANR	4467759	UnaryOperator	!		4467592	0					
ANR	4467760	CallExpression	"strcmp ( op , ""recj"" )"		4467592	1					
ANR	4467761	Callee	strcmp		4467592	0					
ANR	4467762	Identifier	strcmp		4467592	0					
ANR	4467763	ArgumentList	op		4467592	1					
ANR	4467764	Argument	op		4467592	0					
ANR	4467765	Identifier	op		4467592	0					
ANR	4467766	Argument	"""recj"""		4467592	1					
ANR	4467767	PrimaryExpression	"""recj"""		4467592	0					
ANR	4467768	CompoundStatement		19:34:603:603	4467592	1					
ANR	4467769	ExpressionStatement	"eprintf ( ""TODO: use jnz or jz\\n"" )"	64:2:2290:2323	4467592	0	True				
ANR	4467770	CallExpression	"eprintf ( ""TODO: use jnz or jz\\n"" )"		4467592	0					
ANR	4467771	Callee	eprintf		4467592	0					
ANR	4467772	Identifier	eprintf		4467592	0					
ANR	4467773	ArgumentList	"""TODO: use jnz or jz\\n"""		4467592	1					
ANR	4467774	Argument	"""TODO: use jnz or jz\\n"""		4467592	0					
ANR	4467775	PrimaryExpression	"""TODO: use jnz or jz\\n"""		4467592	0					
ANR	4467776	ReturnStatement	return false ;	65:2:2327:2339	4467592	1	True				
ANR	4467777	Identifier	false		4467592	0					
ANR	4467778	ElseStatement	else		4467592	0					
ANR	4467779	IfStatement	"if ( ! strcmp ( op , ""ret1"" ) )"		4467592	0					
ANR	4467780	Condition	"! strcmp ( op , ""ret1"" )"	66:12:2353:2372	4467592	0	True				
ANR	4467781	UnaryOperationExpression	"! strcmp ( op , ""ret1"" )"		4467592	0					
ANR	4467782	UnaryOperator	!		4467592	0					
ANR	4467783	CallExpression	"strcmp ( op , ""ret1"" )"		4467592	1					
ANR	4467784	Callee	strcmp		4467592	0					
ANR	4467785	Identifier	strcmp		4467592	0					
ANR	4467786	ArgumentList	op		4467592	1					
ANR	4467787	Argument	op		4467592	0					
ANR	4467788	Identifier	op		4467592	0					
ANR	4467789	Argument	"""ret1"""		4467592	1					
ANR	4467790	PrimaryExpression	"""ret1"""		4467592	0					
ANR	4467791	CompoundStatement		22:34:692:692	4467592	1					
ANR	4467792	ExpressionStatement	"r_core_cmdf ( core , ""wa mov x0, 1,,ret"" )"	67:2:2379:2418	4467592	0	True				
ANR	4467793	CallExpression	"r_core_cmdf ( core , ""wa mov x0, 1,,ret"" )"		4467592	0					
ANR	4467794	Callee	r_core_cmdf		4467592	0					
ANR	4467795	Identifier	r_core_cmdf		4467592	0					
ANR	4467796	ArgumentList	core		4467592	1					
ANR	4467797	Argument	core		4467592	0					
ANR	4467798	Identifier	core		4467592	0					
ANR	4467799	Argument	"""wa mov x0, 1,,ret"""		4467592	1					
ANR	4467800	PrimaryExpression	"""wa mov x0, 1,,ret"""		4467592	0					
ANR	4467801	ElseStatement	else		4467592	0					
ANR	4467802	IfStatement	"if ( ! strcmp ( op , ""ret0"" ) )"		4467592	0					
ANR	4467803	Condition	"! strcmp ( op , ""ret0"" )"	68:12:2432:2451	4467592	0	True				
ANR	4467804	UnaryOperationExpression	"! strcmp ( op , ""ret0"" )"		4467592	0					
ANR	4467805	UnaryOperator	!		4467592	0					
ANR	4467806	CallExpression	"strcmp ( op , ""ret0"" )"		4467592	1					
ANR	4467807	Callee	strcmp		4467592	0					
ANR	4467808	Identifier	strcmp		4467592	0					
ANR	4467809	ArgumentList	op		4467592	1					
ANR	4467810	Argument	op		4467592	0					
ANR	4467811	Identifier	op		4467592	0					
ANR	4467812	Argument	"""ret0"""		4467592	1					
ANR	4467813	PrimaryExpression	"""ret0"""		4467592	0					
ANR	4467814	CompoundStatement		24:34:771:771	4467592	1					
ANR	4467815	ExpressionStatement	"r_core_cmdf ( core , ""wa mov x0, 0,,ret"" )"	69:2:2458:2497	4467592	0	True				
ANR	4467816	CallExpression	"r_core_cmdf ( core , ""wa mov x0, 0,,ret"" )"		4467592	0					
ANR	4467817	Callee	r_core_cmdf		4467592	0					
ANR	4467818	Identifier	r_core_cmdf		4467592	0					
ANR	4467819	ArgumentList	core		4467592	1					
ANR	4467820	Argument	core		4467592	0					
ANR	4467821	Identifier	core		4467592	0					
ANR	4467822	Argument	"""wa mov x0, 0,,ret"""		4467592	1					
ANR	4467823	PrimaryExpression	"""wa mov x0, 0,,ret"""		4467592	0					
ANR	4467824	ElseStatement	else		4467592	0					
ANR	4467825	IfStatement	"if ( ! strcmp ( op , ""retn"" ) )"		4467592	0					
ANR	4467826	Condition	"! strcmp ( op , ""retn"" )"	70:12:2511:2530	4467592	0	True				
ANR	4467827	UnaryOperationExpression	"! strcmp ( op , ""retn"" )"		4467592	0					
ANR	4467828	UnaryOperator	!		4467592	0					
ANR	4467829	CallExpression	"strcmp ( op , ""retn"" )"		4467592	1					
ANR	4467830	Callee	strcmp		4467592	0					
ANR	4467831	Identifier	strcmp		4467592	0					
ANR	4467832	ArgumentList	op		4467592	1					
ANR	4467833	Argument	op		4467592	0					
ANR	4467834	Identifier	op		4467592	0					
ANR	4467835	Argument	"""retn"""		4467592	1					
ANR	4467836	PrimaryExpression	"""retn"""		4467592	0					
ANR	4467837	CompoundStatement		26:34:850:850	4467592	1					
ANR	4467838	ExpressionStatement	"r_core_cmdf ( core , ""wa mov x0, -1,,ret"" )"	71:2:2537:2577	4467592	0	True				
ANR	4467839	CallExpression	"r_core_cmdf ( core , ""wa mov x0, -1,,ret"" )"		4467592	0					
ANR	4467840	Callee	r_core_cmdf		4467592	0					
ANR	4467841	Identifier	r_core_cmdf		4467592	0					
ANR	4467842	ArgumentList	core		4467592	1					
ANR	4467843	Argument	core		4467592	0					
ANR	4467844	Identifier	core		4467592	0					
ANR	4467845	Argument	"""wa mov x0, -1,,ret"""		4467592	1					
ANR	4467846	PrimaryExpression	"""wa mov x0, -1,,ret"""		4467592	0					
ANR	4467847	ElseStatement	else		4467592	0					
ANR	4467848	CompoundStatement		28:8:904:904	4467592	0					
ANR	4467849	ExpressionStatement	"eprintf ( ""Invalid operation '%s'\\n"" , op )"	73:2:2591:2631	4467592	0	True				
ANR	4467850	CallExpression	"eprintf ( ""Invalid operation '%s'\\n"" , op )"		4467592	0					
ANR	4467851	Callee	eprintf		4467592	0					
ANR	4467852	Identifier	eprintf		4467592	0					
ANR	4467853	ArgumentList	"""Invalid operation '%s'\\n"""		4467592	1					
ANR	4467854	Argument	"""Invalid operation '%s'\\n"""		4467592	0					
ANR	4467855	PrimaryExpression	"""Invalid operation '%s'\\n"""		4467592	0					
ANR	4467856	Argument	op		4467592	1					
ANR	4467857	Identifier	op		4467592	0					
ANR	4467858	ReturnStatement	return false ;	74:2:2635:2647	4467592	1	True				
ANR	4467859	Identifier	false		4467592	0					
ANR	4467860	ReturnStatement	return true ;	76:1:2653:2664	4467592	1	True				
ANR	4467861	Identifier	true		4467592	0					
ANR	4467862	ReturnType	R_API bool		4467592	1					
ANR	4467863	Identifier	r_core_hack_arm64		4467592	2					
ANR	4467864	ParameterList	"RCore * core , const char * op , const RAnalOp * analop"		4467592	3					
ANR	4467865	Parameter	RCore * core	45:29:1630:1640	4467592	0	True				
ANR	4467866	ParameterType	RCore *		4467592	0					
ANR	4467867	Identifier	core		4467592	1					
ANR	4467868	Parameter	const char * op	45:42:1643:1656	4467592	1	True				
ANR	4467869	ParameterType	const char *		4467592	0					
ANR	4467870	Identifier	op		4467592	1					
ANR	4467871	Parameter	const RAnalOp * analop	45:58:1659:1679	4467592	2	True				
ANR	4467872	ParameterType	const RAnalOp *		4467592	0					
ANR	4467873	Identifier	analop		4467592	1					
ANR	4467874	CFGEntryNode	ENTRY		4467592		True				
ANR	4467875	CFGExitNode	EXIT		4467592		True				
ANR	4467876	Symbol	strcmp		4467592						
ANR	4467877	Symbol	core		4467592						
ANR	4467878	Symbol	op		4467592						
ANR	4467879	Symbol	analop		4467592						
ANR	4467880	Symbol	false		4467592						
ANR	4467881	Symbol	true		4467592						
ANR	4467882	Function	r_core_hack_arm	78:0:2668:5808							
ANR	4467883	FunctionDef	"r_core_hack_arm (RCore * core , const char * op , const RAnalOp * analop)"		4467882	0					
ANR	4467884	CompoundStatement		78:79:2747:5808	4467882	0					
ANR	4467885	IdentifierDeclStatement	const int bits = core -> assembler -> bits ;	79:1:2750:2788	4467882	0	True				
ANR	4467886	IdentifierDecl	bits = core -> assembler -> bits		4467882	0					
ANR	4467887	IdentifierDeclType	const int		4467882	0					
ANR	4467888	Identifier	bits		4467882	1					
ANR	4467889	AssignmentExpression	bits = core -> assembler -> bits		4467882	2		=			
ANR	4467890	Identifier	bits		4467882	0					
ANR	4467891	PtrMemberAccess	core -> assembler -> bits		4467882	1					
ANR	4467892	PtrMemberAccess	core -> assembler		4467882	0					
ANR	4467893	Identifier	core		4467882	0					
ANR	4467894	Identifier	assembler		4467882	1					
ANR	4467895	Identifier	bits		4467882	1					
ANR	4467896	IdentifierDeclStatement	const ut8 * b = core -> block ;	80:1:2791:2817	4467882	1	True				
ANR	4467897	IdentifierDecl	* b = core -> block		4467882	0					
ANR	4467898	IdentifierDeclType	const ut8 *		4467882	0					
ANR	4467899	Identifier	b		4467882	1					
ANR	4467900	AssignmentExpression	* b = core -> block		4467882	2		=			
ANR	4467901	Identifier	b		4467882	0					
ANR	4467902	PtrMemberAccess	core -> block		4467882	1					
ANR	4467903	Identifier	core		4467882	0					
ANR	4467904	Identifier	block		4467882	1					
ANR	4467905	IfStatement	"if ( ! strcmp ( op , ""nop"" ) )"		4467882	2					
ANR	4467906	Condition	"! strcmp ( op , ""nop"" )"	82:5:2825:2843	4467882	0	True				
ANR	4467907	UnaryOperationExpression	"! strcmp ( op , ""nop"" )"		4467882	0					
ANR	4467908	UnaryOperator	!		4467882	0					
ANR	4467909	CallExpression	"strcmp ( op , ""nop"" )"		4467882	1					
ANR	4467910	Callee	strcmp		4467882	0					
ANR	4467911	Identifier	strcmp		4467882	0					
ANR	4467912	ArgumentList	op		4467882	1					
ANR	4467913	Argument	op		4467882	0					
ANR	4467914	Identifier	op		4467882	0					
ANR	4467915	Argument	"""nop"""		4467882	1					
ANR	4467916	PrimaryExpression	"""nop"""		4467882	0					
ANR	4467917	CompoundStatement		10:2:242:247	4467882	1					
ANR	4467918	IdentifierDeclStatement	const int nopsize = ( bits == 16 ) ? 2 : 4 ;	83:2:2850:2886	4467882	0	True				
ANR	4467919	IdentifierDecl	nopsize = ( bits == 16 ) ? 2 : 4		4467882	0					
ANR	4467920	IdentifierDeclType	const int		4467882	0					
ANR	4467921	Identifier	nopsize		4467882	1					
ANR	4467922	AssignmentExpression	nopsize = ( bits == 16 ) ? 2 : 4		4467882	2		=			
ANR	4467923	Identifier	nopsize		4467882	0					
ANR	4467924	ConditionalExpression	( bits == 16 ) ? 2 : 4		4467882	1					
ANR	4467925	Condition	bits == 16		4467882	0					
ANR	4467926	EqualityExpression	bits == 16		4467882	0		==			
ANR	4467927	Identifier	bits		4467882	0					
ANR	4467928	PrimaryExpression	16		4467882	1					
ANR	4467929	PrimaryExpression	2		4467882	1					
ANR	4467930	PrimaryExpression	4		4467882	2					
ANR	4467931	IdentifierDeclStatement	"const char * nopcode = ( bits == 16 ) ? ""00bf"" : ""0000a0e1"" ;"	84:2:2890:2941	4467882	1	True				
ANR	4467932	IdentifierDecl	"* nopcode = ( bits == 16 ) ? ""00bf"" : ""0000a0e1"""		4467882	0					
ANR	4467933	IdentifierDeclType	const char *		4467882	0					
ANR	4467934	Identifier	nopcode		4467882	1					
ANR	4467935	AssignmentExpression	"* nopcode = ( bits == 16 ) ? ""00bf"" : ""0000a0e1"""		4467882	2		=			
ANR	4467936	Identifier	nopcode		4467882	0					
ANR	4467937	ConditionalExpression	"( bits == 16 ) ? ""00bf"" : ""0000a0e1"""		4467882	1					
ANR	4467938	Condition	bits == 16		4467882	0					
ANR	4467939	EqualityExpression	bits == 16		4467882	0		==			
ANR	4467940	Identifier	bits		4467882	0					
ANR	4467941	PrimaryExpression	16		4467882	1					
ANR	4467942	PrimaryExpression	"""00bf"""		4467882	1					
ANR	4467943	PrimaryExpression	"""0000a0e1"""		4467882	2					
ANR	4467944	IdentifierDeclStatement	const int len = analop -> size ;	85:2:2945:2973	4467882	2	True				
ANR	4467945	IdentifierDecl	len = analop -> size		4467882	0					
ANR	4467946	IdentifierDeclType	const int		4467882	0					
ANR	4467947	Identifier	len		4467882	1					
ANR	4467948	AssignmentExpression	len = analop -> size		4467882	2		=			
ANR	4467949	Identifier	len		4467882	0					
ANR	4467950	PtrMemberAccess	analop -> size		4467882	1					
ANR	4467951	Identifier	analop		4467882	0					
ANR	4467952	Identifier	size		4467882	1					
ANR	4467953	IdentifierDeclStatement	char * str ;	86:2:2977:2986	4467882	3	True				
ANR	4467954	IdentifierDecl	* str		4467882	0					
ANR	4467955	IdentifierDeclType	char *		4467882	0					
ANR	4467956	Identifier	str		4467882	1					
ANR	4467957	IdentifierDeclStatement	int i ;	87:2:2990:2995	4467882	4	True				
ANR	4467958	IdentifierDecl	i		4467882	0					
ANR	4467959	IdentifierDeclType	int		4467882	0					
ANR	4467960	Identifier	i		4467882	1					
ANR	4467961	IfStatement	if ( len % nopsize )		4467882	5					
ANR	4467962	Condition	len % nopsize	89:6:3004:3016	4467882	0	True				
ANR	4467963	MultiplicativeExpression	len % nopsize		4467882	0		%			
ANR	4467964	Identifier	len		4467882	0					
ANR	4467965	Identifier	nopsize		4467882	1					
ANR	4467966	CompoundStatement		12:21:271:271	4467882	1					
ANR	4467967	ExpressionStatement	"eprintf ( ""Invalid nopcode size\\n"" )"	90:3:3024:3058	4467882	0	True				
ANR	4467968	CallExpression	"eprintf ( ""Invalid nopcode size\\n"" )"		4467882	0					
ANR	4467969	Callee	eprintf		4467882	0					
ANR	4467970	Identifier	eprintf		4467882	0					
ANR	4467971	ArgumentList	"""Invalid nopcode size\\n"""		4467882	1					
ANR	4467972	Argument	"""Invalid nopcode size\\n"""		4467882	0					
ANR	4467973	PrimaryExpression	"""Invalid nopcode size\\n"""		4467882	0					
ANR	4467974	ReturnStatement	return false ;	91:3:3063:3075	4467882	1	True				
ANR	4467975	Identifier	false		4467882	0					
ANR	4467976	ExpressionStatement	"str = calloc ( len + 1 , 2 )"	94:2:3084:3109	4467882	6	True				
ANR	4467977	AssignmentExpression	"str = calloc ( len + 1 , 2 )"		4467882	0		=			
ANR	4467978	Identifier	str		4467882	0					
ANR	4467979	CallExpression	"calloc ( len + 1 , 2 )"		4467882	1					
ANR	4467980	Callee	calloc		4467882	0					
ANR	4467981	Identifier	calloc		4467882	0					
ANR	4467982	ArgumentList	len + 1		4467882	1					
ANR	4467983	Argument	len + 1		4467882	0					
ANR	4467984	AdditiveExpression	len + 1		4467882	0		+			
ANR	4467985	Identifier	len		4467882	0					
ANR	4467986	PrimaryExpression	1		4467882	1					
ANR	4467987	Argument	2		4467882	1					
ANR	4467988	PrimaryExpression	2		4467882	0					
ANR	4467989	IfStatement	if ( ! str )		4467882	7					
ANR	4467990	Condition	! str	95:6:3117:3120	4467882	0	True				
ANR	4467991	UnaryOperationExpression	! str		4467882	0					
ANR	4467992	UnaryOperator	!		4467882	0					
ANR	4467993	Identifier	str		4467882	1					
ANR	4467994	CompoundStatement		18:12:375:375	4467882	1					
ANR	4467995	ReturnStatement	return false ;	96:3:3128:3140	4467882	0	True				
ANR	4467996	Identifier	false		4467882	0					
ANR	4467997	ForStatement	for ( i = 0 ; i < len ; i += nopsize )		4467882	8					
ANR	4467998	ForInit	i = 0 ;	98:7:3153:3156	4467882	0	True				
ANR	4467999	AssignmentExpression	i = 0		4467882	0		=			
ANR	4468000	Identifier	i		4467882	0					
ANR	4468001	PrimaryExpression	0		4467882	1					
ANR	4468002	Condition	i < len	98:12:3158:3164	4467882	1	True				
ANR	4468003	RelationalExpression	i < len		4467882	0		<			
ANR	4468004	Identifier	i		4467882	0					
ANR	4468005	Identifier	len		4467882	1					
ANR	4468006	AssignmentExpression	i += nopsize	98:21:3167:3176	4467882	2	True	+=			
ANR	4468007	Identifier	i		4467882	0					
ANR	4468008	Identifier	nopsize		4467882	1					
ANR	4468009	CompoundStatement		21:33:431:431	4467882	3					
ANR	4468010	ExpressionStatement	"memcpy ( str + i * 2 , nopcode , nopsize * 2 )"	99:3:3184:3224	4467882	0	True				
ANR	4468011	CallExpression	"memcpy ( str + i * 2 , nopcode , nopsize * 2 )"		4467882	0					
ANR	4468012	Callee	memcpy		4467882	0					
ANR	4468013	Identifier	memcpy		4467882	0					
ANR	4468014	ArgumentList	str + i * 2		4467882	1					
ANR	4468015	Argument	str + i * 2		4467882	0					
ANR	4468016	AdditiveExpression	str + i * 2		4467882	0		+			
ANR	4468017	Identifier	str		4467882	0					
ANR	4468018	MultiplicativeExpression	i * 2		4467882	1		*			
ANR	4468019	Identifier	i		4467882	0					
ANR	4468020	PrimaryExpression	2		4467882	1					
ANR	4468021	Argument	nopcode		4467882	1					
ANR	4468022	Identifier	nopcode		4467882	0					
ANR	4468023	Argument	nopsize * 2		4467882	2					
ANR	4468024	MultiplicativeExpression	nopsize * 2		4467882	0		*			
ANR	4468025	Identifier	nopsize		4467882	0					
ANR	4468026	PrimaryExpression	2		4467882	1					
ANR	4468027	ExpressionStatement	str [ len * 2 ] = '\\0'	101:2:3232:3249	4467882	9	True				
ANR	4468028	AssignmentExpression	str [ len * 2 ] = '\\0'		4467882	0		=			
ANR	4468029	ArrayIndexing	str [ len * 2 ]		4467882	0					
ANR	4468030	Identifier	str		4467882	0					
ANR	4468031	MultiplicativeExpression	len * 2		4467882	1		*			
ANR	4468032	Identifier	len		4467882	0					
ANR	4468033	PrimaryExpression	2		4467882	1					
ANR	4468034	PrimaryExpression	'\\0'		4467882	1					
ANR	4468035	ExpressionStatement	"r_core_cmdf ( core , ""wx %s\\n"" , str )"	102:2:3253:3287	4467882	10	True				
ANR	4468036	CallExpression	"r_core_cmdf ( core , ""wx %s\\n"" , str )"		4467882	0					
ANR	4468037	Callee	r_core_cmdf		4467882	0					
ANR	4468038	Identifier	r_core_cmdf		4467882	0					
ANR	4468039	ArgumentList	core		4467882	1					
ANR	4468040	Argument	core		4467882	0					
ANR	4468041	Identifier	core		4467882	0					
ANR	4468042	Argument	"""wx %s\\n"""		4467882	1					
ANR	4468043	PrimaryExpression	"""wx %s\\n"""		4467882	0					
ANR	4468044	Argument	str		4467882	2					
ANR	4468045	Identifier	str		4467882	0					
ANR	4468046	ExpressionStatement	free ( str )	103:2:3291:3301	4467882	11	True				
ANR	4468047	CallExpression	free ( str )		4467882	0					
ANR	4468048	Callee	free		4467882	0					
ANR	4468049	Identifier	free		4467882	0					
ANR	4468050	ArgumentList	str		4467882	1					
ANR	4468051	Argument	str		4467882	0					
ANR	4468052	Identifier	str		4467882	0					
ANR	4468053	ElseStatement	else		4467882	0					
ANR	4468054	IfStatement	"if ( ! strcmp ( op , ""jinf"" ) )"		4467882	0					
ANR	4468055	Condition	"! strcmp ( op , ""jinf"" )"	104:12:3315:3334	4467882	0	True				
ANR	4468056	UnaryOperationExpression	"! strcmp ( op , ""jinf"" )"		4467882	0					
ANR	4468057	UnaryOperator	!		4467882	0					
ANR	4468058	CallExpression	"strcmp ( op , ""jinf"" )"		4467882	1					
ANR	4468059	Callee	strcmp		4467882	0					
ANR	4468060	Identifier	strcmp		4467882	0					
ANR	4468061	ArgumentList	op		4467882	1					
ANR	4468062	Argument	op		4467882	0					
ANR	4468063	Identifier	op		4467882	0					
ANR	4468064	Argument	"""jinf"""		4467882	1					
ANR	4468065	PrimaryExpression	"""jinf"""		4467882	0					
ANR	4468066	CompoundStatement		27:34:589:589	4467882	1					
ANR	4468067	ExpressionStatement	"r_core_cmdf ( core , ""wx %s\\n"" , ( bits == 16 ) ? ""fee7"" : ""feffffea"" )"	105:2:3341:3402	4467882	0	True				
ANR	4468068	CallExpression	"r_core_cmdf ( core , ""wx %s\\n"" , ( bits == 16 ) ? ""fee7"" : ""feffffea"" )"		4467882	0					
ANR	4468069	Callee	r_core_cmdf		4467882	0					
ANR	4468070	Identifier	r_core_cmdf		4467882	0					
ANR	4468071	ArgumentList	core		4467882	1					
ANR	4468072	Argument	core		4467882	0					
ANR	4468073	Identifier	core		4467882	0					
ANR	4468074	Argument	"""wx %s\\n"""		4467882	1					
ANR	4468075	PrimaryExpression	"""wx %s\\n"""		4467882	0					
ANR	4468076	Argument	"( bits == 16 ) ? ""fee7"" : ""feffffea"""		4467882	2					
ANR	4468077	ConditionalExpression	"( bits == 16 ) ? ""fee7"" : ""feffffea"""		4467882	0					
ANR	4468078	Condition	bits == 16		4467882	0					
ANR	4468079	EqualityExpression	bits == 16		4467882	0		==			
ANR	4468080	Identifier	bits		4467882	0					
ANR	4468081	PrimaryExpression	16		4467882	1					
ANR	4468082	PrimaryExpression	"""fee7"""		4467882	1					
ANR	4468083	PrimaryExpression	"""feffffea"""		4467882	2					
ANR	4468084	ElseStatement	else		4467882	0					
ANR	4468085	IfStatement	"if ( ! strcmp ( op , ""trap"" ) )"		4467882	0					
ANR	4468086	Condition	"! strcmp ( op , ""trap"" )"	106:12:3416:3435	4467882	0	True				
ANR	4468087	UnaryOperationExpression	"! strcmp ( op , ""trap"" )"		4467882	0					
ANR	4468088	UnaryOperator	!		4467882	0					
ANR	4468089	CallExpression	"strcmp ( op , ""trap"" )"		4467882	1					
ANR	4468090	Callee	strcmp		4467882	0					
ANR	4468091	Identifier	strcmp		4467882	0					
ANR	4468092	ArgumentList	op		4467882	1					
ANR	4468093	Argument	op		4467882	0					
ANR	4468094	Identifier	op		4467882	0					
ANR	4468095	Argument	"""trap"""		4467882	1					
ANR	4468096	PrimaryExpression	"""trap"""		4467882	0					
ANR	4468097	CompoundStatement		30:2:694:747	4467882	1					
ANR	4468098	IdentifierDeclStatement	"const char * trapcode = ( bits == 16 ) ? ""bebe"" : ""fedeffe7"" ;"	107:2:3442:3495	4467882	0	True				
ANR	4468099	IdentifierDecl	"* trapcode = ( bits == 16 ) ? ""bebe"" : ""fedeffe7"""		4467882	0					
ANR	4468100	IdentifierDeclType	const char *		4467882	0					
ANR	4468101	Identifier	trapcode		4467882	1					
ANR	4468102	AssignmentExpression	"* trapcode = ( bits == 16 ) ? ""bebe"" : ""fedeffe7"""		4467882	2		=			
ANR	4468103	Identifier	trapcode		4467882	0					
ANR	4468104	ConditionalExpression	"( bits == 16 ) ? ""bebe"" : ""fedeffe7"""		4467882	1					
ANR	4468105	Condition	bits == 16		4467882	0					
ANR	4468106	EqualityExpression	bits == 16		4467882	0		==			
ANR	4468107	Identifier	bits		4467882	0					
ANR	4468108	PrimaryExpression	16		4467882	1					
ANR	4468109	PrimaryExpression	"""bebe"""		4467882	1					
ANR	4468110	PrimaryExpression	"""fedeffe7"""		4467882	2					
ANR	4468111	ExpressionStatement	"r_core_cmdf ( core , ""wx %s\\n"" , trapcode )"	108:2:3499:3538	4467882	1	True				
ANR	4468112	CallExpression	"r_core_cmdf ( core , ""wx %s\\n"" , trapcode )"		4467882	0					
ANR	4468113	Callee	r_core_cmdf		4467882	0					
ANR	4468114	Identifier	r_core_cmdf		4467882	0					
ANR	4468115	ArgumentList	core		4467882	1					
ANR	4468116	Argument	core		4467882	0					
ANR	4468117	Identifier	core		4467882	0					
ANR	4468118	Argument	"""wx %s\\n"""		4467882	1					
ANR	4468119	PrimaryExpression	"""wx %s\\n"""		4467882	0					
ANR	4468120	Argument	trapcode		4467882	2					
ANR	4468121	Identifier	trapcode		4467882	0					
ANR	4468122	ElseStatement	else		4467882	0					
ANR	4468123	IfStatement	"if ( ! strcmp ( op , ""jz"" ) )"		4467882	0					
ANR	4468124	Condition	"! strcmp ( op , ""jz"" )"	109:12:3552:3569	4467882	0	True				
ANR	4468125	UnaryOperationExpression	"! strcmp ( op , ""jz"" )"		4467882	0					
ANR	4468126	UnaryOperator	!		4467882	0					
ANR	4468127	CallExpression	"strcmp ( op , ""jz"" )"		4467882	1					
ANR	4468128	Callee	strcmp		4467882	0					
ANR	4468129	Identifier	strcmp		4467882	0					
ANR	4468130	ArgumentList	op		4467882	1					
ANR	4468131	Argument	op		4467882	0					
ANR	4468132	Identifier	op		4467882	0					
ANR	4468133	Argument	"""jz"""		4467882	1					
ANR	4468134	PrimaryExpression	"""jz"""		4467882	0					
ANR	4468135	CompoundStatement		32:32:824:824	4467882	1					
ANR	4468136	IfStatement	if ( bits == 16 )		4467882	0					
ANR	4468137	Condition	bits == 16	110:6:3580:3589	4467882	0	True				
ANR	4468138	EqualityExpression	bits == 16		4467882	0		==			
ANR	4468139	Identifier	bits		4467882	0					
ANR	4468140	PrimaryExpression	16		4467882	1					
ANR	4468141	CompoundStatement		33:18:844:844	4467882	1					
ANR	4468142	SwitchStatement	switch ( b [ 1 ] )		4467882	0					
ANR	4468143	Condition	b [ 1 ]	111:11:3605:3608	4467882	0	True				
ANR	4468144	ArrayIndexing	b [ 1 ]		4467882	0					
ANR	4468145	Identifier	b		4467882	0					
ANR	4468146	PrimaryExpression	1		4467882	1					
ANR	4468147	CompoundStatement		34:17:863:863	4467882	1					
ANR	4468148	Label	case 0xb9 :	112:3:3616:3625	4467882	0	True				
ANR	4468149	ExpressionStatement	"r_core_cmd0 ( core , ""wx b1 @@ $$+1\\n"" )"	113:4:3639:3676	4467882	1	True				
ANR	4468150	CallExpression	"r_core_cmd0 ( core , ""wx b1 @@ $$+1\\n"" )"		4467882	0					
ANR	4468151	Callee	r_core_cmd0		4467882	0					
ANR	4468152	Identifier	r_core_cmd0		4467882	0					
ANR	4468153	ArgumentList	core		4467882	1					
ANR	4468154	Argument	core		4467882	0					
ANR	4468155	Identifier	core		4467882	0					
ANR	4468156	Argument	"""wx b1 @@ $$+1\\n"""		4467882	1					
ANR	4468157	PrimaryExpression	"""wx b1 @@ $$+1\\n"""		4467882	0					
ANR	4468158	BreakStatement	break ;	114:4:3688:3693	4467882	2	True				
ANR	4468159	Label	case 0xbb :	115:3:3698:3707	4467882	3	True				
ANR	4468160	ExpressionStatement	"r_core_cmd0 ( core , ""wx b3 @@ $$+1\\n"" )"	116:4:3721:3758	4467882	4	True				
ANR	4468161	CallExpression	"r_core_cmd0 ( core , ""wx b3 @@ $$+1\\n"" )"		4467882	0					
ANR	4468162	Callee	r_core_cmd0		4467882	0					
ANR	4468163	Identifier	r_core_cmd0		4467882	0					
ANR	4468164	ArgumentList	core		4467882	1					
ANR	4468165	Argument	core		4467882	0					
ANR	4468166	Identifier	core		4467882	0					
ANR	4468167	Argument	"""wx b3 @@ $$+1\\n"""		4467882	1					
ANR	4468168	PrimaryExpression	"""wx b3 @@ $$+1\\n"""		4467882	0					
ANR	4468169	BreakStatement	break ;	117:4:3770:3775	4467882	5	True				
ANR	4468170	Label	case 0xd1 :	118:3:3780:3789	4467882	6	True				
ANR	4468171	ExpressionStatement	"r_core_cmd0 ( core , ""wx d0 @@ $$+1\\n"" )"	119:4:3802:3839	4467882	7	True				
ANR	4468172	CallExpression	"r_core_cmd0 ( core , ""wx d0 @@ $$+1\\n"" )"		4467882	0					
ANR	4468173	Callee	r_core_cmd0		4467882	0					
ANR	4468174	Identifier	r_core_cmd0		4467882	0					
ANR	4468175	ArgumentList	core		4467882	1					
ANR	4468176	Argument	core		4467882	0					
ANR	4468177	Identifier	core		4467882	0					
ANR	4468178	Argument	"""wx d0 @@ $$+1\\n"""		4467882	1					
ANR	4468179	PrimaryExpression	"""wx d0 @@ $$+1\\n"""		4467882	0					
ANR	4468180	BreakStatement	break ;	120:4:3851:3856	4467882	8	True				
ANR	4468181	Label	default :	121:3:3861:3868	4467882	9	True				
ANR	4468182	Identifier	default		4467882	0					
ANR	4468183	ExpressionStatement	"eprintf ( ""Current opcode is not conditional\\n"" )"	122:4:3874:3921	4467882	10	True				
ANR	4468184	CallExpression	"eprintf ( ""Current opcode is not conditional\\n"" )"		4467882	0					
ANR	4468185	Callee	eprintf		4467882	0					
ANR	4468186	Identifier	eprintf		4467882	0					
ANR	4468187	ArgumentList	"""Current opcode is not conditional\\n"""		4467882	1					
ANR	4468188	Argument	"""Current opcode is not conditional\\n"""		4467882	0					
ANR	4468189	PrimaryExpression	"""Current opcode is not conditional\\n"""		4467882	0					
ANR	4468190	ReturnStatement	return false ;	123:4:3927:3939	4467882	11	True				
ANR	4468191	Identifier	false		4467882	0					
ANR	4468192	ElseStatement	else		4467882	0					
ANR	4468193	CompoundStatement		48:9:1207:1207	4467882	0					
ANR	4468194	ExpressionStatement	"eprintf ( ""ARM jz hack not supported\\n"" )"	126:3:3960:3999	4467882	0	True				
ANR	4468195	CallExpression	"eprintf ( ""ARM jz hack not supported\\n"" )"		4467882	0					
ANR	4468196	Callee	eprintf		4467882	0					
ANR	4468197	Identifier	eprintf		4467882	0					
ANR	4468198	ArgumentList	"""ARM jz hack not supported\\n"""		4467882	1					
ANR	4468199	Argument	"""ARM jz hack not supported\\n"""		4467882	0					
ANR	4468200	PrimaryExpression	"""ARM jz hack not supported\\n"""		4467882	0					
ANR	4468201	ReturnStatement	return false ;	127:3:4004:4016	4467882	1	True				
ANR	4468202	Identifier	false		4467882	0					
ANR	4468203	ElseStatement	else		4467882	0					
ANR	4468204	IfStatement	"if ( ! strcmp ( op , ""jnz"" ) )"		4467882	0					
ANR	4468205	Condition	"! strcmp ( op , ""jnz"" )"	129:12:4034:4052	4467882	0	True				
ANR	4468206	UnaryOperationExpression	"! strcmp ( op , ""jnz"" )"		4467882	0					
ANR	4468207	UnaryOperator	!		4467882	0					
ANR	4468208	CallExpression	"strcmp ( op , ""jnz"" )"		4467882	1					
ANR	4468209	Callee	strcmp		4467882	0					
ANR	4468210	Identifier	strcmp		4467882	0					
ANR	4468211	ArgumentList	op		4467882	1					
ANR	4468212	Argument	op		4467882	0					
ANR	4468213	Identifier	op		4467882	0					
ANR	4468214	Argument	"""jnz"""		4467882	1					
ANR	4468215	PrimaryExpression	"""jnz"""		4467882	0					
ANR	4468216	CompoundStatement		52:33:1307:1307	4467882	1					
ANR	4468217	IfStatement	if ( bits == 16 )		4467882	0					
ANR	4468218	Condition	bits == 16	130:6:4063:4072	4467882	0	True				
ANR	4468219	EqualityExpression	bits == 16		4467882	0		==			
ANR	4468220	Identifier	bits		4467882	0					
ANR	4468221	PrimaryExpression	16		4467882	1					
ANR	4468222	CompoundStatement		53:18:1327:1327	4467882	1					
ANR	4468223	SwitchStatement	switch ( b [ 1 ] )		4467882	0					
ANR	4468224	Condition	b [ 1 ]	131:11:4088:4091	4467882	0	True				
ANR	4468225	ArrayIndexing	b [ 1 ]		4467882	0					
ANR	4468226	Identifier	b		4467882	0					
ANR	4468227	PrimaryExpression	1		4467882	1					
ANR	4468228	CompoundStatement		54:17:1346:1346	4467882	1					
ANR	4468229	Label	case 0xb1 :	132:3:4099:4108	4467882	0	True				
ANR	4468230	ExpressionStatement	"r_core_cmd0 ( core , ""wx b9 @@ $$+1\\n"" )"	133:4:4121:4158	4467882	1	True				
ANR	4468231	CallExpression	"r_core_cmd0 ( core , ""wx b9 @@ $$+1\\n"" )"		4467882	0					
ANR	4468232	Callee	r_core_cmd0		4467882	0					
ANR	4468233	Identifier	r_core_cmd0		4467882	0					
ANR	4468234	ArgumentList	core		4467882	1					
ANR	4468235	Argument	core		4467882	0					
ANR	4468236	Identifier	core		4467882	0					
ANR	4468237	Argument	"""wx b9 @@ $$+1\\n"""		4467882	1					
ANR	4468238	PrimaryExpression	"""wx b9 @@ $$+1\\n"""		4467882	0					
ANR	4468239	BreakStatement	break ;	134:4:4171:4176	4467882	2	True				
ANR	4468240	Label	case 0xb3 :	135:3:4181:4190	4467882	3	True				
ANR	4468241	ExpressionStatement	"r_core_cmd0 ( core , ""wx bb @@ $$+1\\n"" )"	136:4:4203:4240	4467882	4	True				
ANR	4468242	CallExpression	"r_core_cmd0 ( core , ""wx bb @@ $$+1\\n"" )"		4467882	0					
ANR	4468243	Callee	r_core_cmd0		4467882	0					
ANR	4468244	Identifier	r_core_cmd0		4467882	0					
ANR	4468245	ArgumentList	core		4467882	1					
ANR	4468246	Argument	core		4467882	0					
ANR	4468247	Identifier	core		4467882	0					
ANR	4468248	Argument	"""wx bb @@ $$+1\\n"""		4467882	1					
ANR	4468249	PrimaryExpression	"""wx bb @@ $$+1\\n"""		4467882	0					
ANR	4468250	BreakStatement	break ;	137:4:4253:4258	4467882	5	True				
ANR	4468251	Label	case 0xd0 :	138:3:4263:4272	4467882	6	True				
ANR	4468252	ExpressionStatement	"r_core_cmd0 ( core , ""wx d1 @@ $$+1\\n"" )"	139:4:4285:4322	4467882	7	True				
ANR	4468253	CallExpression	"r_core_cmd0 ( core , ""wx d1 @@ $$+1\\n"" )"		4467882	0					
ANR	4468254	Callee	r_core_cmd0		4467882	0					
ANR	4468255	Identifier	r_core_cmd0		4467882	0					
ANR	4468256	ArgumentList	core		4467882	1					
ANR	4468257	Argument	core		4467882	0					
ANR	4468258	Identifier	core		4467882	0					
ANR	4468259	Argument	"""wx d1 @@ $$+1\\n"""		4467882	1					
ANR	4468260	PrimaryExpression	"""wx d1 @@ $$+1\\n"""		4467882	0					
ANR	4468261	BreakStatement	break ;	140:4:4334:4339	4467882	8	True				
ANR	4468262	Label	default :	141:3:4344:4351	4467882	9	True				
ANR	4468263	Identifier	default		4467882	0					
ANR	4468264	ExpressionStatement	"eprintf ( ""Current opcode is not conditional\\n"" )"	142:4:4357:4404	4467882	10	True				
ANR	4468265	CallExpression	"eprintf ( ""Current opcode is not conditional\\n"" )"		4467882	0					
ANR	4468266	Callee	eprintf		4467882	0					
ANR	4468267	Identifier	eprintf		4467882	0					
ANR	4468268	ArgumentList	"""Current opcode is not conditional\\n"""		4467882	1					
ANR	4468269	Argument	"""Current opcode is not conditional\\n"""		4467882	0					
ANR	4468270	PrimaryExpression	"""Current opcode is not conditional\\n"""		4467882	0					
ANR	4468271	ReturnStatement	return false ;	143:4:4410:4422	4467882	11	True				
ANR	4468272	Identifier	false		4467882	0					
ANR	4468273	ElseStatement	else		4467882	0					
ANR	4468274	CompoundStatement		68:9:1690:1690	4467882	0					
ANR	4468275	ExpressionStatement	"eprintf ( ""ARM jnz hack not supported\\n"" )"	146:3:4443:4483	4467882	0	True				
ANR	4468276	CallExpression	"eprintf ( ""ARM jnz hack not supported\\n"" )"		4467882	0					
ANR	4468277	Callee	eprintf		4467882	0					
ANR	4468278	Identifier	eprintf		4467882	0					
ANR	4468279	ArgumentList	"""ARM jnz hack not supported\\n"""		4467882	1					
ANR	4468280	Argument	"""ARM jnz hack not supported\\n"""		4467882	0					
ANR	4468281	PrimaryExpression	"""ARM jnz hack not supported\\n"""		4467882	0					
ANR	4468282	ReturnStatement	return false ;	147:3:4488:4500	4467882	1	True				
ANR	4468283	Identifier	false		4467882	0					
ANR	4468284	ElseStatement	else		4467882	0					
ANR	4468285	IfStatement	"if ( ! strcmp ( op , ""nocj"" ) )"		4467882	0					
ANR	4468286	Condition	"! strcmp ( op , ""nocj"" )"	149:12:4518:4537	4467882	0	True				
ANR	4468287	UnaryOperationExpression	"! strcmp ( op , ""nocj"" )"		4467882	0					
ANR	4468288	UnaryOperator	!		4467882	0					
ANR	4468289	CallExpression	"strcmp ( op , ""nocj"" )"		4467882	1					
ANR	4468290	Callee	strcmp		4467882	0					
ANR	4468291	Identifier	strcmp		4467882	0					
ANR	4468292	ArgumentList	op		4467882	1					
ANR	4468293	Argument	op		4467882	0					
ANR	4468294	Identifier	op		4467882	0					
ANR	4468295	Argument	"""nocj"""		4467882	1					
ANR	4468296	PrimaryExpression	"""nocj"""		4467882	0					
ANR	4468297	CompoundStatement		72:34:1792:1792	4467882	1					
ANR	4468298	IfStatement	if ( bits == 16 )		4467882	0					
ANR	4468299	Condition	bits == 16	151:6:4601:4610	4467882	0	True				
ANR	4468300	EqualityExpression	bits == 16		4467882	0		==			
ANR	4468301	Identifier	bits		4467882	0					
ANR	4468302	PrimaryExpression	16		4467882	1					
ANR	4468303	CompoundStatement		74:18:1865:1865	4467882	1					
ANR	4468304	SwitchStatement	switch ( b [ 1 ] )		4467882	0					
ANR	4468305	Condition	b [ 1 ]	152:11:4626:4629	4467882	0	True				
ANR	4468306	ArrayIndexing	b [ 1 ]		4467882	0					
ANR	4468307	Identifier	b		4467882	0					
ANR	4468308	PrimaryExpression	1		4467882	1					
ANR	4468309	CompoundStatement		75:17:1884:1884	4467882	1					
ANR	4468310	Label	case 0xb1 :	153:3:4637:4646	4467882	0	True				
ANR	4468311	Label	case 0xb3 :	154:3:4658:4667	4467882	1	True				
ANR	4468312	Label	case 0xd0 :	155:3:4679:4688	4467882	2	True				
ANR	4468313	Label	case 0xb9 :	156:3:4700:4709	4467882	3	True				
ANR	4468314	Label	case 0xbb :	157:3:4722:4731	4467882	4	True				
ANR	4468315	Label	case 0xd1 :	158:3:4744:4753	4467882	5	True				
ANR	4468316	ExpressionStatement	"r_core_cmd0 ( core , ""wx e0 @@ $$+1\\n"" )"	159:4:4766:4803	4467882	6	True				
ANR	4468317	CallExpression	"r_core_cmd0 ( core , ""wx e0 @@ $$+1\\n"" )"		4467882	0					
ANR	4468318	Callee	r_core_cmd0		4467882	0					
ANR	4468319	Identifier	r_core_cmd0		4467882	0					
ANR	4468320	ArgumentList	core		4467882	1					
ANR	4468321	Argument	core		4467882	0					
ANR	4468322	Identifier	core		4467882	0					
ANR	4468323	Argument	"""wx e0 @@ $$+1\\n"""		4467882	1					
ANR	4468324	PrimaryExpression	"""wx e0 @@ $$+1\\n"""		4467882	0					
ANR	4468325	BreakStatement	break ;	160:4:4815:4820	4467882	7	True				
ANR	4468326	Label	default :	161:3:4825:4832	4467882	8	True				
ANR	4468327	Identifier	default		4467882	0					
ANR	4468328	ExpressionStatement	"eprintf ( ""Current opcode is not conditional\\n"" )"	162:4:4838:4885	4467882	9	True				
ANR	4468329	CallExpression	"eprintf ( ""Current opcode is not conditional\\n"" )"		4467882	0					
ANR	4468330	Callee	eprintf		4467882	0					
ANR	4468331	Identifier	eprintf		4467882	0					
ANR	4468332	ArgumentList	"""Current opcode is not conditional\\n"""		4467882	1					
ANR	4468333	Argument	"""Current opcode is not conditional\\n"""		4467882	0					
ANR	4468334	PrimaryExpression	"""Current opcode is not conditional\\n"""		4467882	0					
ANR	4468335	ReturnStatement	return false ;	163:4:4891:4903	4467882	10	True				
ANR	4468336	Identifier	false		4467882	0					
ANR	4468337	ElseStatement	else		4467882	0					
ANR	4468338	CompoundStatement		88:9:2171:2171	4467882	0					
ANR	4468339	ExpressionStatement	"eprintf ( ""ARM un-cjmp hack not supported\\n"" )"	166:3:4924:4968	4467882	0	True				
ANR	4468340	CallExpression	"eprintf ( ""ARM un-cjmp hack not supported\\n"" )"		4467882	0					
ANR	4468341	Callee	eprintf		4467882	0					
ANR	4468342	Identifier	eprintf		4467882	0					
ANR	4468343	ArgumentList	"""ARM un-cjmp hack not supported\\n"""		4467882	1					
ANR	4468344	Argument	"""ARM un-cjmp hack not supported\\n"""		4467882	0					
ANR	4468345	PrimaryExpression	"""ARM un-cjmp hack not supported\\n"""		4467882	0					
ANR	4468346	ReturnStatement	return false ;	167:3:4973:4985	4467882	1	True				
ANR	4468347	Identifier	false		4467882	0					
ANR	4468348	ElseStatement	else		4467882	0					
ANR	4468349	IfStatement	"if ( ! strcmp ( op , ""recj"" ) )"		4467882	0					
ANR	4468350	Condition	"! strcmp ( op , ""recj"" )"	169:12:5003:5022	4467882	0	True				
ANR	4468351	UnaryOperationExpression	"! strcmp ( op , ""recj"" )"		4467882	0					
ANR	4468352	UnaryOperator	!		4467882	0					
ANR	4468353	CallExpression	"strcmp ( op , ""recj"" )"		4467882	1					
ANR	4468354	Callee	strcmp		4467882	0					
ANR	4468355	Identifier	strcmp		4467882	0					
ANR	4468356	ArgumentList	op		4467882	1					
ANR	4468357	Argument	op		4467882	0					
ANR	4468358	Identifier	op		4467882	0					
ANR	4468359	Argument	"""recj"""		4467882	1					
ANR	4468360	PrimaryExpression	"""recj"""		4467882	0					
ANR	4468361	CompoundStatement		92:34:2277:2277	4467882	1					
ANR	4468362	ExpressionStatement	"eprintf ( ""TODO: use jnz or jz\\n"" )"	170:2:5029:5062	4467882	0	True				
ANR	4468363	CallExpression	"eprintf ( ""TODO: use jnz or jz\\n"" )"		4467882	0					
ANR	4468364	Callee	eprintf		4467882	0					
ANR	4468365	Identifier	eprintf		4467882	0					
ANR	4468366	ArgumentList	"""TODO: use jnz or jz\\n"""		4467882	1					
ANR	4468367	Argument	"""TODO: use jnz or jz\\n"""		4467882	0					
ANR	4468368	PrimaryExpression	"""TODO: use jnz or jz\\n"""		4467882	0					
ANR	4468369	ReturnStatement	return false ;	171:2:5066:5078	4467882	1	True				
ANR	4468370	Identifier	false		4467882	0					
ANR	4468371	ElseStatement	else		4467882	0					
ANR	4468372	IfStatement	"if ( ! strcmp ( op , ""ret1"" ) )"		4467882	0					
ANR	4468373	Condition	"! strcmp ( op , ""ret1"" )"	172:12:5092:5111	4467882	0	True				
ANR	4468374	UnaryOperationExpression	"! strcmp ( op , ""ret1"" )"		4467882	0					
ANR	4468375	UnaryOperator	!		4467882	0					
ANR	4468376	CallExpression	"strcmp ( op , ""ret1"" )"		4467882	1					
ANR	4468377	Callee	strcmp		4467882	0					
ANR	4468378	Identifier	strcmp		4467882	0					
ANR	4468379	ArgumentList	op		4467882	1					
ANR	4468380	Argument	op		4467882	0					
ANR	4468381	Identifier	op		4467882	0					
ANR	4468382	Argument	"""ret1"""		4467882	1					
ANR	4468383	PrimaryExpression	"""ret1"""		4467882	0					
ANR	4468384	CompoundStatement		95:34:2366:2366	4467882	1					
ANR	4468385	IfStatement	if ( bits == 16 )		4467882	0					
ANR	4468386	Condition	bits == 16	173:6:5122:5131	4467882	0	True				
ANR	4468387	EqualityExpression	bits == 16		4467882	0		==			
ANR	4468388	Identifier	bits		4467882	0					
ANR	4468389	PrimaryExpression	16		4467882	1					
ANR	4468390	CompoundStatement		96:18:2386:2386	4467882	1					
ANR	4468391	ExpressionStatement	"r_core_cmd0 ( core , ""wx 01207047 @@ $$+1\\n"" )"	174:3:5139:5182	4467882	0	True				
ANR	4468392	CallExpression	"r_core_cmd0 ( core , ""wx 01207047 @@ $$+1\\n"" )"		4467882	0					
ANR	4468393	Callee	r_core_cmd0		4467882	0					
ANR	4468394	Identifier	r_core_cmd0		4467882	0					
ANR	4468395	ArgumentList	core		4467882	1					
ANR	4468396	Argument	core		4467882	0					
ANR	4468397	Identifier	core		4467882	0					
ANR	4468398	Argument	"""wx 01207047 @@ $$+1\\n"""		4467882	1					
ANR	4468399	PrimaryExpression	"""wx 01207047 @@ $$+1\\n"""		4467882	0					
ANR	4468400	ElseStatement	else		4467882	0					
ANR	4468401	CompoundStatement		98:9:2465:2465	4467882	0					
ANR	4468402	ExpressionStatement	"r_core_cmd0 ( core , ""wx 0100b0e31eff2fe1 @@ $$+1\\n"" )"	176:3:5218:5269	4467882	0	True				
ANR	4468403	CallExpression	"r_core_cmd0 ( core , ""wx 0100b0e31eff2fe1 @@ $$+1\\n"" )"		4467882	0					
ANR	4468404	Callee	r_core_cmd0		4467882	0					
ANR	4468405	Identifier	r_core_cmd0		4467882	0					
ANR	4468406	ArgumentList	core		4467882	1					
ANR	4468407	Argument	core		4467882	0					
ANR	4468408	Identifier	core		4467882	0					
ANR	4468409	Argument	"""wx 0100b0e31eff2fe1 @@ $$+1\\n"""		4467882	1					
ANR	4468410	PrimaryExpression	"""wx 0100b0e31eff2fe1 @@ $$+1\\n"""		4467882	0					
ANR	4468411	ElseStatement	else		4467882	0					
ANR	4468412	IfStatement	"if ( ! strcmp ( op , ""ret0"" ) )"		4467882	0					
ANR	4468413	Condition	"! strcmp ( op , ""ret0"" )"	178:12:5308:5327	4467882	0	True				
ANR	4468414	UnaryOperationExpression	"! strcmp ( op , ""ret0"" )"		4467882	0					
ANR	4468415	UnaryOperator	!		4467882	0					
ANR	4468416	CallExpression	"strcmp ( op , ""ret0"" )"		4467882	1					
ANR	4468417	Callee	strcmp		4467882	0					
ANR	4468418	Identifier	strcmp		4467882	0					
ANR	4468419	ArgumentList	op		4467882	1					
ANR	4468420	Argument	op		4467882	0					
ANR	4468421	Identifier	op		4467882	0					
ANR	4468422	Argument	"""ret0"""		4467882	1					
ANR	4468423	PrimaryExpression	"""ret0"""		4467882	0					
ANR	4468424	CompoundStatement		101:34:2582:2582	4467882	1					
ANR	4468425	IfStatement	if ( bits == 16 )		4467882	0					
ANR	4468426	Condition	bits == 16	179:6:5338:5347	4467882	0	True				
ANR	4468427	EqualityExpression	bits == 16		4467882	0		==			
ANR	4468428	Identifier	bits		4467882	0					
ANR	4468429	PrimaryExpression	16		4467882	1					
ANR	4468430	CompoundStatement		102:18:2602:2602	4467882	1					
ANR	4468431	ExpressionStatement	"r_core_cmd0 ( core , ""wx 00207047 @@ $$+1\\n"" )"	180:3:5355:5398	4467882	0	True				
ANR	4468432	CallExpression	"r_core_cmd0 ( core , ""wx 00207047 @@ $$+1\\n"" )"		4467882	0					
ANR	4468433	Callee	r_core_cmd0		4467882	0					
ANR	4468434	Identifier	r_core_cmd0		4467882	0					
ANR	4468435	ArgumentList	core		4467882	1					
ANR	4468436	Argument	core		4467882	0					
ANR	4468437	Identifier	core		4467882	0					
ANR	4468438	Argument	"""wx 00207047 @@ $$+1\\n"""		4467882	1					
ANR	4468439	PrimaryExpression	"""wx 00207047 @@ $$+1\\n"""		4467882	0					
ANR	4468440	ElseStatement	else		4467882	0					
ANR	4468441	CompoundStatement		104:9:2681:2681	4467882	0					
ANR	4468442	ExpressionStatement	"r_core_cmd0 ( core , ""wx 0000a0e31eff2fe1 @@ $$+1\\n"" )"	182:3:5434:5485	4467882	0	True				
ANR	4468443	CallExpression	"r_core_cmd0 ( core , ""wx 0000a0e31eff2fe1 @@ $$+1\\n"" )"		4467882	0					
ANR	4468444	Callee	r_core_cmd0		4467882	0					
ANR	4468445	Identifier	r_core_cmd0		4467882	0					
ANR	4468446	ArgumentList	core		4467882	1					
ANR	4468447	Argument	core		4467882	0					
ANR	4468448	Identifier	core		4467882	0					
ANR	4468449	Argument	"""wx 0000a0e31eff2fe1 @@ $$+1\\n"""		4467882	1					
ANR	4468450	PrimaryExpression	"""wx 0000a0e31eff2fe1 @@ $$+1\\n"""		4467882	0					
ANR	4468451	ElseStatement	else		4467882	0					
ANR	4468452	IfStatement	"if ( ! strcmp ( op , ""retn"" ) )"		4467882	0					
ANR	4468453	Condition	"! strcmp ( op , ""retn"" )"	184:12:5524:5543	4467882	0	True				
ANR	4468454	UnaryOperationExpression	"! strcmp ( op , ""retn"" )"		4467882	0					
ANR	4468455	UnaryOperator	!		4467882	0					
ANR	4468456	CallExpression	"strcmp ( op , ""retn"" )"		4467882	1					
ANR	4468457	Callee	strcmp		4467882	0					
ANR	4468458	Identifier	strcmp		4467882	0					
ANR	4468459	ArgumentList	op		4467882	1					
ANR	4468460	Argument	op		4467882	0					
ANR	4468461	Identifier	op		4467882	0					
ANR	4468462	Argument	"""retn"""		4467882	1					
ANR	4468463	PrimaryExpression	"""retn"""		4467882	0					
ANR	4468464	CompoundStatement		107:34:2798:2798	4467882	1					
ANR	4468465	IfStatement	if ( bits == 16 )		4467882	0					
ANR	4468466	Condition	bits == 16	185:6:5554:5563	4467882	0	True				
ANR	4468467	EqualityExpression	bits == 16		4467882	0		==			
ANR	4468468	Identifier	bits		4467882	0					
ANR	4468469	PrimaryExpression	16		4467882	1					
ANR	4468470	CompoundStatement		108:18:2818:2818	4467882	1					
ANR	4468471	ExpressionStatement	"r_core_cmd0 ( core , ""wx ff207047 @@ $$+1\\n"" )"	186:3:5571:5614	4467882	0	True				
ANR	4468472	CallExpression	"r_core_cmd0 ( core , ""wx ff207047 @@ $$+1\\n"" )"		4467882	0					
ANR	4468473	Callee	r_core_cmd0		4467882	0					
ANR	4468474	Identifier	r_core_cmd0		4467882	0					
ANR	4468475	ArgumentList	core		4467882	1					
ANR	4468476	Argument	core		4467882	0					
ANR	4468477	Identifier	core		4467882	0					
ANR	4468478	Argument	"""wx ff207047 @@ $$+1\\n"""		4467882	1					
ANR	4468479	PrimaryExpression	"""wx ff207047 @@ $$+1\\n"""		4467882	0					
ANR	4468480	ElseStatement	else		4467882	0					
ANR	4468481	CompoundStatement		110:9:2898:2898	4467882	0					
ANR	4468482	ExpressionStatement	"r_core_cmd0 ( core , ""wx ff00a0e31eff2fe1 @@ $$+1\\n"" )"	188:3:5651:5702	4467882	0	True				
ANR	4468483	CallExpression	"r_core_cmd0 ( core , ""wx ff00a0e31eff2fe1 @@ $$+1\\n"" )"		4467882	0					
ANR	4468484	Callee	r_core_cmd0		4467882	0					
ANR	4468485	Identifier	r_core_cmd0		4467882	0					
ANR	4468486	ArgumentList	core		4467882	1					
ANR	4468487	Argument	core		4467882	0					
ANR	4468488	Identifier	core		4467882	0					
ANR	4468489	Argument	"""wx ff00a0e31eff2fe1 @@ $$+1\\n"""		4467882	1					
ANR	4468490	PrimaryExpression	"""wx ff00a0e31eff2fe1 @@ $$+1\\n"""		4467882	0					
ANR	4468491	ElseStatement	else		4467882	0					
ANR	4468492	CompoundStatement		113:8:2990:2990	4467882	0					
ANR	4468493	ExpressionStatement	"eprintf ( ""Invalid operation\\n"" )"	191:2:5742:5773	4467882	0	True				
ANR	4468494	CallExpression	"eprintf ( ""Invalid operation\\n"" )"		4467882	0					
ANR	4468495	Callee	eprintf		4467882	0					
ANR	4468496	Identifier	eprintf		4467882	0					
ANR	4468497	ArgumentList	"""Invalid operation\\n"""		4467882	1					
ANR	4468498	Argument	"""Invalid operation\\n"""		4467882	0					
ANR	4468499	PrimaryExpression	"""Invalid operation\\n"""		4467882	0					
ANR	4468500	ReturnStatement	return false ;	192:2:5777:5789	4467882	1	True				
ANR	4468501	Identifier	false		4467882	0					
ANR	4468502	ReturnStatement	return true ;	194:1:5795:5806	4467882	3	True				
ANR	4468503	Identifier	true		4467882	0					
ANR	4468504	ReturnType	R_API bool		4467882	1					
ANR	4468505	Identifier	r_core_hack_arm		4467882	2					
ANR	4468506	ParameterList	"RCore * core , const char * op , const RAnalOp * analop"		4467882	3					
ANR	4468507	Parameter	RCore * core	78:27:2695:2705	4467882	0	True				
ANR	4468508	ParameterType	RCore *		4467882	0					
ANR	4468509	Identifier	core		4467882	1					
ANR	4468510	Parameter	const char * op	78:40:2708:2721	4467882	1	True				
ANR	4468511	ParameterType	const char *		4467882	0					
ANR	4468512	Identifier	op		4467882	1					
ANR	4468513	Parameter	const RAnalOp * analop	78:56:2724:2744	4467882	2	True				
ANR	4468514	ParameterType	const RAnalOp *		4467882	0					
ANR	4468515	Identifier	analop		4467882	1					
ANR	4468516	CFGEntryNode	ENTRY		4467882		True				
ANR	4468517	CFGExitNode	EXIT		4467882		True				
ANR	4468518	Symbol	* core		4467882						
ANR	4468519	Symbol	core -> assembler -> bits		4467882						
ANR	4468520	Symbol	core -> assembler		4467882						
ANR	4468521	Symbol	calloc		4467882						
ANR	4468522	Symbol	nopcode		4467882						
ANR	4468523	Symbol	* core -> assembler		4467882						
ANR	4468524	Symbol	len		4467882						
ANR	4468525	Symbol	* analop		4467882						
ANR	4468526	Symbol	* str		4467882						
ANR	4468527	Symbol	* * core		4467882						
ANR	4468528	Symbol	strcmp		4467882						
ANR	4468529	Symbol	op		4467882						
ANR	4468530	Symbol	b		4467882						
ANR	4468531	Symbol	core -> block		4467882						
ANR	4468532	Symbol	analop -> size		4467882						
ANR	4468533	Symbol	nopsize		4467882						
ANR	4468534	Symbol	bits		4467882						
ANR	4468535	Symbol	false		4467882						
ANR	4468536	Symbol	i		4467882						
ANR	4468537	Symbol	* b		4467882						
ANR	4468538	Symbol	str		4467882						
ANR	4468539	Symbol	core		4467882						
ANR	4468540	Symbol	trapcode		4467882						
ANR	4468541	Symbol	analop		4467882						
ANR	4468542	Symbol	true		4467882						
ANR	4468543	Symbol	* len		4467882						
ANR	4468544	Function	r_core_hack_x86	197:0:5811:7778							
ANR	4468545	FunctionDef	"r_core_hack_x86 (RCore * core , const char * op , const RAnalOp * analop)"		4468544	0					
ANR	4468546	CompoundStatement		197:79:5890:7778	4468544	0					
ANR	4468547	IdentifierDeclStatement	const ut8 * b = core -> block ;	198:1:5893:5919	4468544	0	True				
ANR	4468548	IdentifierDecl	* b = core -> block		4468544	0					
ANR	4468549	IdentifierDeclType	const ut8 *		4468544	0					
ANR	4468550	Identifier	b		4468544	1					
ANR	4468551	AssignmentExpression	* b = core -> block		4468544	2		=			
ANR	4468552	Identifier	b		4468544	0					
ANR	4468553	PtrMemberAccess	core -> block		4468544	1					
ANR	4468554	Identifier	core		4468544	0					
ANR	4468555	Identifier	block		4468544	1					
ANR	4468556	IdentifierDeclStatement	"int i , size = analop -> size ;"	199:1:5922:5948	4468544	1	True				
ANR	4468557	IdentifierDecl	i		4468544	0					
ANR	4468558	IdentifierDeclType	int		4468544	0					
ANR	4468559	Identifier	i		4468544	1					
ANR	4468560	IdentifierDecl	size = analop -> size		4468544	1					
ANR	4468561	IdentifierDeclType	int		4468544	0					
ANR	4468562	Identifier	size		4468544	1					
ANR	4468563	AssignmentExpression	size = analop -> size		4468544	2		=			
ANR	4468564	Identifier	size		4468544	0					
ANR	4468565	PtrMemberAccess	analop -> size		4468544	1					
ANR	4468566	Identifier	analop		4468544	0					
ANR	4468567	Identifier	size		4468544	1					
ANR	4468568	IfStatement	"if ( ! strcmp ( op , ""nop"" ) )"		4468544	2					
ANR	4468569	Condition	"! strcmp ( op , ""nop"" )"	200:5:5955:5973	4468544	0	True				
ANR	4468570	UnaryOperationExpression	"! strcmp ( op , ""nop"" )"		4468544	0					
ANR	4468571	UnaryOperator	!		4468544	0					
ANR	4468572	CallExpression	"strcmp ( op , ""nop"" )"		4468544	1					
ANR	4468573	Callee	strcmp		4468544	0					
ANR	4468574	Identifier	strcmp		4468544	0					
ANR	4468575	ArgumentList	op		4468544	1					
ANR	4468576	Argument	op		4468544	0					
ANR	4468577	Identifier	op		4468544	0					
ANR	4468578	Argument	"""nop"""		4468544	1					
ANR	4468579	PrimaryExpression	"""nop"""		4468544	0					
ANR	4468580	CompoundStatement		8:2:139:172	4468544	1					
ANR	4468581	IfStatement	if ( size * 2 + 1 < size )		4468544	0					
ANR	4468582	Condition	size * 2 + 1 < size	201:6:5984:6002	4468544	0	True				
ANR	4468583	RelationalExpression	size * 2 + 1 < size		4468544	0		<			
ANR	4468584	AdditiveExpression	size * 2 + 1		4468544	0		+			
ANR	4468585	MultiplicativeExpression	size * 2		4468544	0		*			
ANR	4468586	Identifier	size		4468544	0					
ANR	4468587	PrimaryExpression	2		4468544	1					
ANR	4468588	PrimaryExpression	1		4468544	1					
ANR	4468589	Identifier	size		4468544	1					
ANR	4468590	CompoundStatement		5:27:114:114	4468544	1					
ANR	4468591	ReturnStatement	return false ;	202:3:6010:6022	4468544	0	True				
ANR	4468592	Identifier	false		4468544	0					
ANR	4468593	IdentifierDeclStatement	char * str = malloc ( size * 2 + 1 ) ;	204:2:6030:6063	4468544	1	True				
ANR	4468594	IdentifierDecl	* str = malloc ( size * 2 + 1 )		4468544	0					
ANR	4468595	IdentifierDeclType	char *		4468544	0					
ANR	4468596	Identifier	str		4468544	1					
ANR	4468597	AssignmentExpression	* str = malloc ( size * 2 + 1 )		4468544	2		=			
ANR	4468598	Identifier	str		4468544	0					
ANR	4468599	CallExpression	malloc ( size * 2 + 1 )		4468544	1					
ANR	4468600	Callee	malloc		4468544	0					
ANR	4468601	Identifier	malloc		4468544	0					
ANR	4468602	ArgumentList	size * 2 + 1		4468544	1					
ANR	4468603	Argument	size * 2 + 1		4468544	0					
ANR	4468604	AdditiveExpression	size * 2 + 1		4468544	0		+			
ANR	4468605	MultiplicativeExpression	size * 2		4468544	0		*			
ANR	4468606	Identifier	size		4468544	0					
ANR	4468607	PrimaryExpression	2		4468544	1					
ANR	4468608	PrimaryExpression	1		4468544	1					
ANR	4468609	IfStatement	if ( ! str )		4468544	2					
ANR	4468610	Condition	! str	205:6:6071:6074	4468544	0	True				
ANR	4468611	UnaryOperationExpression	! str		4468544	0					
ANR	4468612	UnaryOperator	!		4468544	0					
ANR	4468613	Identifier	str		4468544	1					
ANR	4468614	CompoundStatement		9:12:186:186	4468544	1					
ANR	4468615	ReturnStatement	return false ;	206:3:6082:6094	4468544	0	True				
ANR	4468616	Identifier	false		4468544	0					
ANR	4468617	ForStatement	for ( i = 0 ; i < size ; i ++ )		4468544	3					
ANR	4468618	ForInit	i = 0 ;	208:7:6107:6112	4468544	0	True				
ANR	4468619	AssignmentExpression	i = 0		4468544	0		=			
ANR	4468620	Identifier	i		4468544	0					
ANR	4468621	PrimaryExpression	0		4468544	1					
ANR	4468622	Condition	i < size	208:14:6114:6121	4468544	1	True				
ANR	4468623	RelationalExpression	i < size		4468544	0		<			
ANR	4468624	Identifier	i		4468544	0					
ANR	4468625	Identifier	size		4468544	1					
ANR	4468626	PostIncDecOperationExpression	i ++	208:24:6124:6126	4468544	2	True				
ANR	4468627	Identifier	i		4468544	0					
ANR	4468628	IncDec	++		4468544	1					
ANR	4468629	CompoundStatement		12:29:238:238	4468544	3					
ANR	4468630	ExpressionStatement	"memcpy ( str + ( i * 2 ) , ""90"" , 2 )"	209:3:6134:6165	4468544	0	True				
ANR	4468631	CallExpression	"memcpy ( str + ( i * 2 ) , ""90"" , 2 )"		4468544	0					
ANR	4468632	Callee	memcpy		4468544	0					
ANR	4468633	Identifier	memcpy		4468544	0					
ANR	4468634	ArgumentList	str + ( i * 2 )		4468544	1					
ANR	4468635	Argument	str + ( i * 2 )		4468544	0					
ANR	4468636	AdditiveExpression	str + ( i * 2 )		4468544	0		+			
ANR	4468637	Identifier	str		4468544	0					
ANR	4468638	MultiplicativeExpression	i * 2		4468544	1		*			
ANR	4468639	Identifier	i		4468544	0					
ANR	4468640	PrimaryExpression	2		4468544	1					
ANR	4468641	Argument	"""90"""		4468544	1					
ANR	4468642	PrimaryExpression	"""90"""		4468544	0					
ANR	4468643	Argument	2		4468544	2					
ANR	4468644	PrimaryExpression	2		4468544	0					
ANR	4468645	ExpressionStatement	str [ size * 2 ] = '\\0'	211:2:6173:6191	4468544	4	True				
ANR	4468646	AssignmentExpression	str [ size * 2 ] = '\\0'		4468544	0		=			
ANR	4468647	ArrayIndexing	str [ size * 2 ]		4468544	0					
ANR	4468648	Identifier	str		4468544	0					
ANR	4468649	MultiplicativeExpression	size * 2		4468544	1		*			
ANR	4468650	Identifier	size		4468544	0					
ANR	4468651	PrimaryExpression	2		4468544	1					
ANR	4468652	PrimaryExpression	'\\0'		4468544	1					
ANR	4468653	ExpressionStatement	"r_core_cmdf ( core , ""wx %s\\n"" , str )"	212:2:6195:6229	4468544	5	True				
ANR	4468654	CallExpression	"r_core_cmdf ( core , ""wx %s\\n"" , str )"		4468544	0					
ANR	4468655	Callee	r_core_cmdf		4468544	0					
ANR	4468656	Identifier	r_core_cmdf		4468544	0					
ANR	4468657	ArgumentList	core		4468544	1					
ANR	4468658	Argument	core		4468544	0					
ANR	4468659	Identifier	core		4468544	0					
ANR	4468660	Argument	"""wx %s\\n"""		4468544	1					
ANR	4468661	PrimaryExpression	"""wx %s\\n"""		4468544	0					
ANR	4468662	Argument	str		4468544	2					
ANR	4468663	Identifier	str		4468544	0					
ANR	4468664	ExpressionStatement	free ( str )	213:2:6233:6243	4468544	6	True				
ANR	4468665	CallExpression	free ( str )		4468544	0					
ANR	4468666	Callee	free		4468544	0					
ANR	4468667	Identifier	free		4468544	0					
ANR	4468668	ArgumentList	str		4468544	1					
ANR	4468669	Argument	str		4468544	0					
ANR	4468670	Identifier	str		4468544	0					
ANR	4468671	ElseStatement	else		4468544	0					
ANR	4468672	IfStatement	"if ( ! strcmp ( op , ""trap"" ) )"		4468544	0					
ANR	4468673	Condition	"! strcmp ( op , ""trap"" )"	214:12:6257:6276	4468544	0	True				
ANR	4468674	UnaryOperationExpression	"! strcmp ( op , ""trap"" )"		4468544	0					
ANR	4468675	UnaryOperator	!		4468544	0					
ANR	4468676	CallExpression	"strcmp ( op , ""trap"" )"		4468544	1					
ANR	4468677	Callee	strcmp		4468544	0					
ANR	4468678	Identifier	strcmp		4468544	0					
ANR	4468679	ArgumentList	op		4468544	1					
ANR	4468680	Argument	op		4468544	0					
ANR	4468681	Identifier	op		4468544	0					
ANR	4468682	Argument	"""trap"""		4468544	1					
ANR	4468683	PrimaryExpression	"""trap"""		4468544	0					
ANR	4468684	CompoundStatement		18:34:388:388	4468544	1					
ANR	4468685	ExpressionStatement	"r_core_cmd0 ( core , ""wx cc\\n"" )"	215:2:6283:6312	4468544	0	True				
ANR	4468686	CallExpression	"r_core_cmd0 ( core , ""wx cc\\n"" )"		4468544	0					
ANR	4468687	Callee	r_core_cmd0		4468544	0					
ANR	4468688	Identifier	r_core_cmd0		4468544	0					
ANR	4468689	ArgumentList	core		4468544	1					
ANR	4468690	Argument	core		4468544	0					
ANR	4468691	Identifier	core		4468544	0					
ANR	4468692	Argument	"""wx cc\\n"""		4468544	1					
ANR	4468693	PrimaryExpression	"""wx cc\\n"""		4468544	0					
ANR	4468694	ElseStatement	else		4468544	0					
ANR	4468695	IfStatement	"if ( ! strcmp ( op , ""jz"" ) )"		4468544	0					
ANR	4468696	Condition	"! strcmp ( op , ""jz"" )"	216:12:6326:6343	4468544	0	True				
ANR	4468697	UnaryOperationExpression	"! strcmp ( op , ""jz"" )"		4468544	0					
ANR	4468698	UnaryOperator	!		4468544	0					
ANR	4468699	CallExpression	"strcmp ( op , ""jz"" )"		4468544	1					
ANR	4468700	Callee	strcmp		4468544	0					
ANR	4468701	Identifier	strcmp		4468544	0					
ANR	4468702	ArgumentList	op		4468544	1					
ANR	4468703	Argument	op		4468544	0					
ANR	4468704	Identifier	op		4468544	0					
ANR	4468705	Argument	"""jz"""		4468544	1					
ANR	4468706	PrimaryExpression	"""jz"""		4468544	0					
ANR	4468707	CompoundStatement		20:32:455:455	4468544	1					
ANR	4468708	IfStatement	if ( b [ 0 ] == 0x75 )		4468544	0					
ANR	4468709	Condition	b [ 0 ] == 0x75	217:6:6354:6365	4468544	0	True				
ANR	4468710	EqualityExpression	b [ 0 ] == 0x75		4468544	0		==			
ANR	4468711	ArrayIndexing	b [ 0 ]		4468544	0					
ANR	4468712	Identifier	b		4468544	0					
ANR	4468713	PrimaryExpression	0		4468544	1					
ANR	4468714	PrimaryExpression	0x75		4468544	1					
ANR	4468715	CompoundStatement		21:20:477:477	4468544	1					
ANR	4468716	ExpressionStatement	"r_core_cmd0 ( core , ""wx 74\\n"" )"	218:3:6373:6402	4468544	0	True				
ANR	4468717	CallExpression	"r_core_cmd0 ( core , ""wx 74\\n"" )"		4468544	0					
ANR	4468718	Callee	r_core_cmd0		4468544	0					
ANR	4468719	Identifier	r_core_cmd0		4468544	0					
ANR	4468720	ArgumentList	core		4468544	1					
ANR	4468721	Argument	core		4468544	0					
ANR	4468722	Identifier	core		4468544	0					
ANR	4468723	Argument	"""wx 74\\n"""		4468544	1					
ANR	4468724	PrimaryExpression	"""wx 74\\n"""		4468544	0					
ANR	4468725	ElseStatement	else		4468544	0					
ANR	4468726	CompoundStatement		23:9:522:522	4468544	0					
ANR	4468727	ExpressionStatement	"eprintf ( ""Current opcode is not conditional\\n"" )"	220:3:6418:6465	4468544	0	True				
ANR	4468728	CallExpression	"eprintf ( ""Current opcode is not conditional\\n"" )"		4468544	0					
ANR	4468729	Callee	eprintf		4468544	0					
ANR	4468730	Identifier	eprintf		4468544	0					
ANR	4468731	ArgumentList	"""Current opcode is not conditional\\n"""		4468544	1					
ANR	4468732	Argument	"""Current opcode is not conditional\\n"""		4468544	0					
ANR	4468733	PrimaryExpression	"""Current opcode is not conditional\\n"""		4468544	0					
ANR	4468734	ReturnStatement	return false ;	221:3:6470:6482	4468544	1	True				
ANR	4468735	Identifier	false		4468544	0					
ANR	4468736	ElseStatement	else		4468544	0					
ANR	4468737	IfStatement	"if ( ! strcmp ( op , ""jinf"" ) )"		4468544	0					
ANR	4468738	Condition	"! strcmp ( op , ""jinf"" )"	223:12:6500:6519	4468544	0	True				
ANR	4468739	UnaryOperationExpression	"! strcmp ( op , ""jinf"" )"		4468544	0					
ANR	4468740	UnaryOperator	!		4468544	0					
ANR	4468741	CallExpression	"strcmp ( op , ""jinf"" )"		4468544	1					
ANR	4468742	Callee	strcmp		4468544	0					
ANR	4468743	Identifier	strcmp		4468544	0					
ANR	4468744	ArgumentList	op		4468544	1					
ANR	4468745	Argument	op		4468544	0					
ANR	4468746	Identifier	op		4468544	0					
ANR	4468747	Argument	"""jinf"""		4468544	1					
ANR	4468748	PrimaryExpression	"""jinf"""		4468544	0					
ANR	4468749	CompoundStatement		27:34:631:631	4468544	1					
ANR	4468750	ExpressionStatement	"r_core_cmd0 ( core , ""wx ebfe\\n"" )"	224:2:6526:6557	4468544	0	True				
ANR	4468751	CallExpression	"r_core_cmd0 ( core , ""wx ebfe\\n"" )"		4468544	0					
ANR	4468752	Callee	r_core_cmd0		4468544	0					
ANR	4468753	Identifier	r_core_cmd0		4468544	0					
ANR	4468754	ArgumentList	core		4468544	1					
ANR	4468755	Argument	core		4468544	0					
ANR	4468756	Identifier	core		4468544	0					
ANR	4468757	Argument	"""wx ebfe\\n"""		4468544	1					
ANR	4468758	PrimaryExpression	"""wx ebfe\\n"""		4468544	0					
ANR	4468759	ElseStatement	else		4468544	0					
ANR	4468760	IfStatement	"if ( ! strcmp ( op , ""jnz"" ) )"		4468544	0					
ANR	4468761	Condition	"! strcmp ( op , ""jnz"" )"	225:12:6571:6589	4468544	0	True				
ANR	4468762	UnaryOperationExpression	"! strcmp ( op , ""jnz"" )"		4468544	0					
ANR	4468763	UnaryOperator	!		4468544	0					
ANR	4468764	CallExpression	"strcmp ( op , ""jnz"" )"		4468544	1					
ANR	4468765	Callee	strcmp		4468544	0					
ANR	4468766	Identifier	strcmp		4468544	0					
ANR	4468767	ArgumentList	op		4468544	1					
ANR	4468768	Argument	op		4468544	0					
ANR	4468769	Identifier	op		4468544	0					
ANR	4468770	Argument	"""jnz"""		4468544	1					
ANR	4468771	PrimaryExpression	"""jnz"""		4468544	0					
ANR	4468772	CompoundStatement		29:33:701:701	4468544	1					
ANR	4468773	IfStatement	if ( b [ 0 ] == 0x74 )		4468544	0					
ANR	4468774	Condition	b [ 0 ] == 0x74	226:6:6600:6611	4468544	0	True				
ANR	4468775	EqualityExpression	b [ 0 ] == 0x74		4468544	0		==			
ANR	4468776	ArrayIndexing	b [ 0 ]		4468544	0					
ANR	4468777	Identifier	b		4468544	0					
ANR	4468778	PrimaryExpression	0		4468544	1					
ANR	4468779	PrimaryExpression	0x74		4468544	1					
ANR	4468780	CompoundStatement		30:20:723:723	4468544	1					
ANR	4468781	ExpressionStatement	"r_core_cmd0 ( core , ""wx 75\\n"" )"	227:3:6619:6648	4468544	0	True				
ANR	4468782	CallExpression	"r_core_cmd0 ( core , ""wx 75\\n"" )"		4468544	0					
ANR	4468783	Callee	r_core_cmd0		4468544	0					
ANR	4468784	Identifier	r_core_cmd0		4468544	0					
ANR	4468785	ArgumentList	core		4468544	1					
ANR	4468786	Argument	core		4468544	0					
ANR	4468787	Identifier	core		4468544	0					
ANR	4468788	Argument	"""wx 75\\n"""		4468544	1					
ANR	4468789	PrimaryExpression	"""wx 75\\n"""		4468544	0					
ANR	4468790	ElseStatement	else		4468544	0					
ANR	4468791	CompoundStatement		32:9:768:768	4468544	0					
ANR	4468792	ExpressionStatement	"eprintf ( ""Current opcode is not conditional\\n"" )"	229:3:6664:6711	4468544	0	True				
ANR	4468793	CallExpression	"eprintf ( ""Current opcode is not conditional\\n"" )"		4468544	0					
ANR	4468794	Callee	eprintf		4468544	0					
ANR	4468795	Identifier	eprintf		4468544	0					
ANR	4468796	ArgumentList	"""Current opcode is not conditional\\n"""		4468544	1					
ANR	4468797	Argument	"""Current opcode is not conditional\\n"""		4468544	0					
ANR	4468798	PrimaryExpression	"""Current opcode is not conditional\\n"""		4468544	0					
ANR	4468799	ReturnStatement	return false ;	230:3:6716:6728	4468544	1	True				
ANR	4468800	Identifier	false		4468544	0					
ANR	4468801	ElseStatement	else		4468544	0					
ANR	4468802	IfStatement	"if ( ! strcmp ( op , ""nocj"" ) )"		4468544	0					
ANR	4468803	Condition	"! strcmp ( op , ""nocj"" )"	232:12:6746:6765	4468544	0	True				
ANR	4468804	UnaryOperationExpression	"! strcmp ( op , ""nocj"" )"		4468544	0					
ANR	4468805	UnaryOperator	!		4468544	0					
ANR	4468806	CallExpression	"strcmp ( op , ""nocj"" )"		4468544	1					
ANR	4468807	Callee	strcmp		4468544	0					
ANR	4468808	Identifier	strcmp		4468544	0					
ANR	4468809	ArgumentList	op		4468544	1					
ANR	4468810	Argument	op		4468544	0					
ANR	4468811	Identifier	op		4468544	0					
ANR	4468812	Argument	"""nocj"""		4468544	1					
ANR	4468813	PrimaryExpression	"""nocj"""		4468544	0					
ANR	4468814	CompoundStatement		36:34:877:877	4468544	1					
ANR	4468815	IfStatement	if ( * b == 0xf )		4468544	0					
ANR	4468816	Condition	* b == 0xf	233:6:6776:6784	4468544	0	True				
ANR	4468817	EqualityExpression	* b == 0xf		4468544	0		==			
ANR	4468818	UnaryOperationExpression	* b		4468544	0					
ANR	4468819	UnaryOperator	*		4468544	0					
ANR	4468820	Identifier	b		4468544	1					
ANR	4468821	PrimaryExpression	0xf		4468544	1					
ANR	4468822	CompoundStatement		37:17:896:896	4468544	1					
ANR	4468823	ExpressionStatement	"r_core_cmd0 ( core , ""wx 90e9"" )"	234:3:6792:6821	4468544	0	True				
ANR	4468824	CallExpression	"r_core_cmd0 ( core , ""wx 90e9"" )"		4468544	0					
ANR	4468825	Callee	r_core_cmd0		4468544	0					
ANR	4468826	Identifier	r_core_cmd0		4468544	0					
ANR	4468827	ArgumentList	core		4468544	1					
ANR	4468828	Argument	core		4468544	0					
ANR	4468829	Identifier	core		4468544	0					
ANR	4468830	Argument	"""wx 90e9"""		4468544	1					
ANR	4468831	PrimaryExpression	"""wx 90e9"""		4468544	0					
ANR	4468832	ElseStatement	else		4468544	0					
ANR	4468833	IfStatement	if ( b [ 0 ] >= 0x70 && b [ 0 ] <= 0x7f )		4468544	0					
ANR	4468834	Condition	b [ 0 ] >= 0x70 && b [ 0 ] <= 0x7f	235:13:6836:6863	4468544	0	True				
ANR	4468835	AndExpression	b [ 0 ] >= 0x70 && b [ 0 ] <= 0x7f		4468544	0		&&			
ANR	4468836	RelationalExpression	b [ 0 ] >= 0x70		4468544	0		>=			
ANR	4468837	ArrayIndexing	b [ 0 ]		4468544	0					
ANR	4468838	Identifier	b		4468544	0					
ANR	4468839	PrimaryExpression	0		4468544	1					
ANR	4468840	PrimaryExpression	0x70		4468544	1					
ANR	4468841	RelationalExpression	b [ 0 ] <= 0x7f		4468544	1		<=			
ANR	4468842	ArrayIndexing	b [ 0 ]		4468544	0					
ANR	4468843	Identifier	b		4468544	0					
ANR	4468844	PrimaryExpression	0		4468544	1					
ANR	4468845	PrimaryExpression	0x7f		4468544	1					
ANR	4468846	CompoundStatement		39:43:975:975	4468544	1					
ANR	4468847	ExpressionStatement	"r_core_cmd0 ( core , ""wx eb"" )"	236:3:6871:6898	4468544	0	True				
ANR	4468848	CallExpression	"r_core_cmd0 ( core , ""wx eb"" )"		4468544	0					
ANR	4468849	Callee	r_core_cmd0		4468544	0					
ANR	4468850	Identifier	r_core_cmd0		4468544	0					
ANR	4468851	ArgumentList	core		4468544	1					
ANR	4468852	Argument	core		4468544	0					
ANR	4468853	Identifier	core		4468544	0					
ANR	4468854	Argument	"""wx eb"""		4468544	1					
ANR	4468855	PrimaryExpression	"""wx eb"""		4468544	0					
ANR	4468856	ElseStatement	else		4468544	0					
ANR	4468857	CompoundStatement		41:9:1018:1018	4468544	0					
ANR	4468858	ExpressionStatement	"eprintf ( ""Current opcode is not conditional\\n"" )"	238:3:6914:6961	4468544	0	True				
ANR	4468859	CallExpression	"eprintf ( ""Current opcode is not conditional\\n"" )"		4468544	0					
ANR	4468860	Callee	eprintf		4468544	0					
ANR	4468861	Identifier	eprintf		4468544	0					
ANR	4468862	ArgumentList	"""Current opcode is not conditional\\n"""		4468544	1					
ANR	4468863	Argument	"""Current opcode is not conditional\\n"""		4468544	0					
ANR	4468864	PrimaryExpression	"""Current opcode is not conditional\\n"""		4468544	0					
ANR	4468865	ReturnStatement	return false ;	239:3:6966:6978	4468544	1	True				
ANR	4468866	Identifier	false		4468544	0					
ANR	4468867	ElseStatement	else		4468544	0					
ANR	4468868	IfStatement	"if ( ! strcmp ( op , ""recj"" ) )"		4468544	0					
ANR	4468869	Condition	"! strcmp ( op , ""recj"" )"	241:12:6996:7015	4468544	0	True				
ANR	4468870	UnaryOperationExpression	"! strcmp ( op , ""recj"" )"		4468544	0					
ANR	4468871	UnaryOperator	!		4468544	0					
ANR	4468872	CallExpression	"strcmp ( op , ""recj"" )"		4468544	1					
ANR	4468873	Callee	strcmp		4468544	0					
ANR	4468874	Identifier	strcmp		4468544	0					
ANR	4468875	ArgumentList	op		4468544	1					
ANR	4468876	Argument	op		4468544	0					
ANR	4468877	Identifier	op		4468544	0					
ANR	4468878	Argument	"""recj"""		4468544	1					
ANR	4468879	PrimaryExpression	"""recj"""		4468544	0					
ANR	4468880	CompoundStatement		46:2:1131:1156	4468544	1					
ANR	4468881	IdentifierDeclStatement	int is_near = ( * b == 0xf ) ;	242:2:7022:7047	4468544	0	True				
ANR	4468882	IdentifierDecl	is_near = ( * b == 0xf )		4468544	0					
ANR	4468883	IdentifierDeclType	int		4468544	0					
ANR	4468884	Identifier	is_near		4468544	1					
ANR	4468885	AssignmentExpression	is_near = ( * b == 0xf )		4468544	2		=			
ANR	4468886	Identifier	is_near		4468544	0					
ANR	4468887	EqualityExpression	* b == 0xf		4468544	1		==			
ANR	4468888	UnaryOperationExpression	* b		4468544	0					
ANR	4468889	UnaryOperator	*		4468544	0					
ANR	4468890	Identifier	b		4468544	1					
ANR	4468891	PrimaryExpression	0xf		4468544	1					
ANR	4468892	IfStatement	if ( b [ 0 ] < 0x80 && b [ 0 ] >= 0x70 )		4468544	1					
ANR	4468893	Condition	b [ 0 ] < 0x80 && b [ 0 ] >= 0x70	243:6:7055:7081	4468544	0	True				
ANR	4468894	AndExpression	b [ 0 ] < 0x80 && b [ 0 ] >= 0x70		4468544	0		&&			
ANR	4468895	RelationalExpression	b [ 0 ] < 0x80		4468544	0		<			
ANR	4468896	ArrayIndexing	b [ 0 ]		4468544	0					
ANR	4468897	Identifier	b		4468544	0					
ANR	4468898	PrimaryExpression	0		4468544	1					
ANR	4468899	PrimaryExpression	0x80		4468544	1					
ANR	4468900	RelationalExpression	b [ 0 ] >= 0x70		4468544	1		>=			
ANR	4468901	ArrayIndexing	b [ 0 ]		4468544	0					
ANR	4468902	Identifier	b		4468544	0					
ANR	4468903	PrimaryExpression	0		4468544	1					
ANR	4468904	PrimaryExpression	0x70		4468544	1					
ANR	4468905	CompoundStatement		47:35:1193:1193	4468544	1					
ANR	4468906	ExpressionStatement	"r_core_cmdf ( core , ""wx %x\\n"" , ( b [ 0 ] % 2 ) ? b [ 0 ] - 1 : b [ 0 ] + 1 )"	244:4:7149:7208	4468544	0	True				
ANR	4468907	CallExpression	"r_core_cmdf ( core , ""wx %x\\n"" , ( b [ 0 ] % 2 ) ? b [ 0 ] - 1 : b [ 0 ] + 1 )"		4468544	0					
ANR	4468908	Callee	r_core_cmdf		4468544	0					
ANR	4468909	Identifier	r_core_cmdf		4468544	0					
ANR	4468910	ArgumentList	core		4468544	1					
ANR	4468911	Argument	core		4468544	0					
ANR	4468912	Identifier	core		4468544	0					
ANR	4468913	Argument	"""wx %x\\n"""		4468544	1					
ANR	4468914	PrimaryExpression	"""wx %x\\n"""		4468544	0					
ANR	4468915	Argument	( b [ 0 ] % 2 ) ? b [ 0 ] - 1 : b [ 0 ] + 1		4468544	2					
ANR	4468916	ConditionalExpression	( b [ 0 ] % 2 ) ? b [ 0 ] - 1 : b [ 0 ] + 1		4468544	0					
ANR	4468917	Condition	b [ 0 ] % 2		4468544	0					
ANR	4468918	MultiplicativeExpression	b [ 0 ] % 2		4468544	0		%			
ANR	4468919	ArrayIndexing	b [ 0 ]		4468544	0					
ANR	4468920	Identifier	b		4468544	0					
ANR	4468921	PrimaryExpression	0		4468544	1					
ANR	4468922	PrimaryExpression	2		4468544	1					
ANR	4468923	AdditiveExpression	b [ 0 ] - 1		4468544	1		-			
ANR	4468924	ArrayIndexing	b [ 0 ]		4468544	0					
ANR	4468925	Identifier	b		4468544	0					
ANR	4468926	PrimaryExpression	0		4468544	1					
ANR	4468927	PrimaryExpression	1		4468544	1					
ANR	4468928	AdditiveExpression	b [ 0 ] + 1		4468544	2		+			
ANR	4468929	ArrayIndexing	b [ 0 ]		4468544	0					
ANR	4468930	Identifier	b		4468544	0					
ANR	4468931	PrimaryExpression	0		4468544	1					
ANR	4468932	PrimaryExpression	1		4468544	1					
ANR	4468933	ElseStatement	else		4468544	0					
ANR	4468934	IfStatement	if ( is_near && b [ 1 ] < 0x90 && b [ 1 ] >= 0x80 )		4468544	0					
ANR	4468935	Condition	is_near && b [ 1 ] < 0x90 && b [ 1 ] >= 0x80	245:13:7223:7260	4468544	0	True				
ANR	4468936	AndExpression	is_near && b [ 1 ] < 0x90 && b [ 1 ] >= 0x80		4468544	0		&&			
ANR	4468937	Identifier	is_near		4468544	0					
ANR	4468938	AndExpression	b [ 1 ] < 0x90 && b [ 1 ] >= 0x80		4468544	1		&&			
ANR	4468939	RelationalExpression	b [ 1 ] < 0x90		4468544	0		<			
ANR	4468940	ArrayIndexing	b [ 1 ]		4468544	0					
ANR	4468941	Identifier	b		4468544	0					
ANR	4468942	PrimaryExpression	1		4468544	1					
ANR	4468943	PrimaryExpression	0x90		4468544	1					
ANR	4468944	RelationalExpression	b [ 1 ] >= 0x80		4468544	1		>=			
ANR	4468945	ArrayIndexing	b [ 1 ]		4468544	0					
ANR	4468946	Identifier	b		4468544	0					
ANR	4468947	PrimaryExpression	1		4468544	1					
ANR	4468948	PrimaryExpression	0x80		4468544	1					
ANR	4468949	CompoundStatement		49:53:1372:1372	4468544	1					
ANR	4468950	ExpressionStatement	"r_core_cmdf ( core , ""wx 0f%x\\n"" , ( b [ 1 ] % 2 ) ? b [ 1 ] - 1 : b [ 1 ] + 1 )"	246:4:7327:7388	4468544	0	True				
ANR	4468951	CallExpression	"r_core_cmdf ( core , ""wx 0f%x\\n"" , ( b [ 1 ] % 2 ) ? b [ 1 ] - 1 : b [ 1 ] + 1 )"		4468544	0					
ANR	4468952	Callee	r_core_cmdf		4468544	0					
ANR	4468953	Identifier	r_core_cmdf		4468544	0					
ANR	4468954	ArgumentList	core		4468544	1					
ANR	4468955	Argument	core		4468544	0					
ANR	4468956	Identifier	core		4468544	0					
ANR	4468957	Argument	"""wx 0f%x\\n"""		4468544	1					
ANR	4468958	PrimaryExpression	"""wx 0f%x\\n"""		4468544	0					
ANR	4468959	Argument	( b [ 1 ] % 2 ) ? b [ 1 ] - 1 : b [ 1 ] + 1		4468544	2					
ANR	4468960	ConditionalExpression	( b [ 1 ] % 2 ) ? b [ 1 ] - 1 : b [ 1 ] + 1		4468544	0					
ANR	4468961	Condition	b [ 1 ] % 2		4468544	0					
ANR	4468962	MultiplicativeExpression	b [ 1 ] % 2		4468544	0		%			
ANR	4468963	ArrayIndexing	b [ 1 ]		4468544	0					
ANR	4468964	Identifier	b		4468544	0					
ANR	4468965	PrimaryExpression	1		4468544	1					
ANR	4468966	PrimaryExpression	2		4468544	1					
ANR	4468967	AdditiveExpression	b [ 1 ] - 1		4468544	1		-			
ANR	4468968	ArrayIndexing	b [ 1 ]		4468544	0					
ANR	4468969	Identifier	b		4468544	0					
ANR	4468970	PrimaryExpression	1		4468544	1					
ANR	4468971	PrimaryExpression	1		4468544	1					
ANR	4468972	AdditiveExpression	b [ 1 ] + 1		4468544	2		+			
ANR	4468973	ArrayIndexing	b [ 1 ]		4468544	0					
ANR	4468974	Identifier	b		4468544	0					
ANR	4468975	PrimaryExpression	1		4468544	1					
ANR	4468976	PrimaryExpression	1		4468544	1					
ANR	4468977	ElseStatement	else		4468544	0					
ANR	4468978	CompoundStatement		51:9:1508:1508	4468544	0					
ANR	4468979	ExpressionStatement	"eprintf ( ""Invalid conditional jump opcode\\n"" )"	248:3:7404:7449	4468544	0	True				
ANR	4468980	CallExpression	"eprintf ( ""Invalid conditional jump opcode\\n"" )"		4468544	0					
ANR	4468981	Callee	eprintf		4468544	0					
ANR	4468982	Identifier	eprintf		4468544	0					
ANR	4468983	ArgumentList	"""Invalid conditional jump opcode\\n"""		4468544	1					
ANR	4468984	Argument	"""Invalid conditional jump opcode\\n"""		4468544	0					
ANR	4468985	PrimaryExpression	"""Invalid conditional jump opcode\\n"""		4468544	0					
ANR	4468986	ReturnStatement	return false ;	249:3:7454:7466	4468544	1	True				
ANR	4468987	Identifier	false		4468544	0					
ANR	4468988	ElseStatement	else		4468544	0					
ANR	4468989	IfStatement	"if ( ! strcmp ( op , ""ret1"" ) )"		4468544	0					
ANR	4468990	Condition	"! strcmp ( op , ""ret1"" )"	251:12:7484:7503	4468544	0	True				
ANR	4468991	UnaryOperationExpression	"! strcmp ( op , ""ret1"" )"		4468544	0					
ANR	4468992	UnaryOperator	!		4468544	0					
ANR	4468993	CallExpression	"strcmp ( op , ""ret1"" )"		4468544	1					
ANR	4468994	Callee	strcmp		4468544	0					
ANR	4468995	Identifier	strcmp		4468544	0					
ANR	4468996	ArgumentList	op		4468544	1					
ANR	4468997	Argument	op		4468544	0					
ANR	4468998	Identifier	op		4468544	0					
ANR	4468999	Argument	"""ret1"""		4468544	1					
ANR	4469000	PrimaryExpression	"""ret1"""		4468544	0					
ANR	4469001	CompoundStatement		55:34:1615:1615	4468544	1					
ANR	4469002	ExpressionStatement	"r_core_cmd0 ( core , ""wx c20100\\n"" )"	252:2:7510:7543	4468544	0	True				
ANR	4469003	CallExpression	"r_core_cmd0 ( core , ""wx c20100\\n"" )"		4468544	0					
ANR	4469004	Callee	r_core_cmd0		4468544	0					
ANR	4469005	Identifier	r_core_cmd0		4468544	0					
ANR	4469006	ArgumentList	core		4468544	1					
ANR	4469007	Argument	core		4468544	0					
ANR	4469008	Identifier	core		4468544	0					
ANR	4469009	Argument	"""wx c20100\\n"""		4468544	1					
ANR	4469010	PrimaryExpression	"""wx c20100\\n"""		4468544	0					
ANR	4469011	ElseStatement	else		4468544	0					
ANR	4469012	IfStatement	"if ( ! strcmp ( op , ""ret0"" ) )"		4468544	0					
ANR	4469013	Condition	"! strcmp ( op , ""ret0"" )"	253:12:7557:7576	4468544	0	True				
ANR	4469014	UnaryOperationExpression	"! strcmp ( op , ""ret0"" )"		4468544	0					
ANR	4469015	UnaryOperator	!		4468544	0					
ANR	4469016	CallExpression	"strcmp ( op , ""ret0"" )"		4468544	1					
ANR	4469017	Callee	strcmp		4468544	0					
ANR	4469018	Identifier	strcmp		4468544	0					
ANR	4469019	ArgumentList	op		4468544	1					
ANR	4469020	Argument	op		4468544	0					
ANR	4469021	Identifier	op		4468544	0					
ANR	4469022	Argument	"""ret0"""		4468544	1					
ANR	4469023	PrimaryExpression	"""ret0"""		4468544	0					
ANR	4469024	CompoundStatement		57:34:1688:1688	4468544	1					
ANR	4469025	ExpressionStatement	"r_core_cmd0 ( core , ""wx c20000\\n"" )"	254:2:7583:7616	4468544	0	True				
ANR	4469026	CallExpression	"r_core_cmd0 ( core , ""wx c20000\\n"" )"		4468544	0					
ANR	4469027	Callee	r_core_cmd0		4468544	0					
ANR	4469028	Identifier	r_core_cmd0		4468544	0					
ANR	4469029	ArgumentList	core		4468544	1					
ANR	4469030	Argument	core		4468544	0					
ANR	4469031	Identifier	core		4468544	0					
ANR	4469032	Argument	"""wx c20000\\n"""		4468544	1					
ANR	4469033	PrimaryExpression	"""wx c20000\\n"""		4468544	0					
ANR	4469034	ElseStatement	else		4468544	0					
ANR	4469035	IfStatement	"if ( ! strcmp ( op , ""retn"" ) )"		4468544	0					
ANR	4469036	Condition	"! strcmp ( op , ""retn"" )"	255:12:7630:7649	4468544	0	True				
ANR	4469037	UnaryOperationExpression	"! strcmp ( op , ""retn"" )"		4468544	0					
ANR	4469038	UnaryOperator	!		4468544	0					
ANR	4469039	CallExpression	"strcmp ( op , ""retn"" )"		4468544	1					
ANR	4469040	Callee	strcmp		4468544	0					
ANR	4469041	Identifier	strcmp		4468544	0					
ANR	4469042	ArgumentList	op		4468544	1					
ANR	4469043	Argument	op		4468544	0					
ANR	4469044	Identifier	op		4468544	0					
ANR	4469045	Argument	"""retn"""		4468544	1					
ANR	4469046	PrimaryExpression	"""retn"""		4468544	0					
ANR	4469047	CompoundStatement		59:34:1761:1761	4468544	1					
ANR	4469048	ExpressionStatement	"r_core_cmd0 ( core , ""wx c2ffff\\n"" )"	256:2:7656:7689	4468544	0	True				
ANR	4469049	CallExpression	"r_core_cmd0 ( core , ""wx c2ffff\\n"" )"		4468544	0					
ANR	4469050	Callee	r_core_cmd0		4468544	0					
ANR	4469051	Identifier	r_core_cmd0		4468544	0					
ANR	4469052	ArgumentList	core		4468544	1					
ANR	4469053	Argument	core		4468544	0					
ANR	4469054	Identifier	core		4468544	0					
ANR	4469055	Argument	"""wx c2ffff\\n"""		4468544	1					
ANR	4469056	PrimaryExpression	"""wx c2ffff\\n"""		4468544	0					
ANR	4469057	ElseStatement	else		4468544	0					
ANR	4469058	CompoundStatement		61:8:1808:1808	4468544	0					
ANR	4469059	ExpressionStatement	"eprintf ( ""Invalid operation '%s'\\n"" , op )"	258:2:7703:7743	4468544	0	True				
ANR	4469060	CallExpression	"eprintf ( ""Invalid operation '%s'\\n"" , op )"		4468544	0					
ANR	4469061	Callee	eprintf		4468544	0					
ANR	4469062	Identifier	eprintf		4468544	0					
ANR	4469063	ArgumentList	"""Invalid operation '%s'\\n"""		4468544	1					
ANR	4469064	Argument	"""Invalid operation '%s'\\n"""		4468544	0					
ANR	4469065	PrimaryExpression	"""Invalid operation '%s'\\n"""		4468544	0					
ANR	4469066	Argument	op		4468544	1					
ANR	4469067	Identifier	op		4468544	0					
ANR	4469068	ReturnStatement	return false ;	259:2:7747:7759	4468544	1	True				
ANR	4469069	Identifier	false		4468544	0					
ANR	4469070	ReturnStatement	return true ;	261:1:7765:7776	4468544	3	True				
ANR	4469071	Identifier	true		4468544	0					
ANR	4469072	ReturnType	R_API bool		4468544	1					
ANR	4469073	Identifier	r_core_hack_x86		4468544	2					
ANR	4469074	ParameterList	"RCore * core , const char * op , const RAnalOp * analop"		4468544	3					
ANR	4469075	Parameter	RCore * core	197:27:5838:5848	4468544	0	True				
ANR	4469076	ParameterType	RCore *		4468544	0					
ANR	4469077	Identifier	core		4468544	1					
ANR	4469078	Parameter	const char * op	197:40:5851:5864	4468544	1	True				
ANR	4469079	ParameterType	const char *		4468544	0					
ANR	4469080	Identifier	op		4468544	1					
ANR	4469081	Parameter	const RAnalOp * analop	197:56:5867:5887	4468544	2	True				
ANR	4469082	ParameterType	const RAnalOp *		4468544	0					
ANR	4469083	Identifier	analop		4468544	1					
ANR	4469084	CFGEntryNode	ENTRY		4468544		True				
ANR	4469085	CFGExitNode	EXIT		4468544		True				
ANR	4469086	Symbol	strcmp		4468544						
ANR	4469087	Symbol	op		4468544						
ANR	4469088	Symbol	malloc		4468544						
ANR	4469089	Symbol	b		4468544						
ANR	4469090	Symbol	core -> block		4468544						
ANR	4469091	Symbol	analop -> size		4468544						
ANR	4469092	Symbol	is_near		4468544						
ANR	4469093	Symbol	* core		4468544						
ANR	4469094	Symbol	false		4468544						
ANR	4469095	Symbol	i		4468544						
ANR	4469096	Symbol	* b		4468544						
ANR	4469097	Symbol	str		4468544						
ANR	4469098	Symbol	core		4468544						
ANR	4469099	Symbol	* size		4468544						
ANR	4469100	Symbol	size		4468544						
ANR	4469101	Symbol	* analop		4468544						
ANR	4469102	Symbol	analop		4468544						
ANR	4469103	Symbol	true		4468544						
ANR	4469104	Symbol	* str		4468544						
ANR	4469105	Function	r_core_hack	264:0:7781:8624							
ANR	4469106	FunctionDef	"r_core_hack (RCore * core , const char * op)"		4469105	0					
ANR	4469107	CompoundStatement		264:51:7832:8624	4469105	0					
ANR	4469108	IdentifierDeclStatement	"bool ( * hack ) ( RCore * core , const char * op , const RAnalOp * analop ) = NULL ;"	265:1:7835:7906	4469105	0	True				
ANR	4469109	IdentifierDecl	"( * hack ) ( RCore * core , const char * op , const RAnalOp * analop ) = NULL"		4469105	0					
ANR	4469110	IdentifierDeclType	"bool ( * ) ( RCore * core , const char * op , const RAnalOp * analop )"		4469105	0					
ANR	4469111	Identifier	hack		4469105	1					
ANR	4469112	Identifier	core		4469105	2					
ANR	4469113	Identifier	op		4469105	3					
ANR	4469114	Identifier	analop		4469105	4					
ANR	4469115	AssignmentExpression	"( * hack ) ( RCore * core , const char * op , const RAnalOp * analop ) = NULL"		4469105	5		=			
ANR	4469116	Identifier	NULL		4469105	0					
ANR	4469117	Identifier	NULL		4469105	1					
ANR	4469118	IdentifierDeclStatement	"const char * asmarch = r_config_get ( core -> config , ""asm.arch"" ) ;"	266:1:7909:7970	4469105	1	True				
ANR	4469119	IdentifierDecl	"* asmarch = r_config_get ( core -> config , ""asm.arch"" )"		4469105	0					
ANR	4469120	IdentifierDeclType	const char *		4469105	0					
ANR	4469121	Identifier	asmarch		4469105	1					
ANR	4469122	AssignmentExpression	"* asmarch = r_config_get ( core -> config , ""asm.arch"" )"		4469105	2		=			
ANR	4469123	Identifier	asmarch		4469105	0					
ANR	4469124	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		4469105	1					
ANR	4469125	Callee	r_config_get		4469105	0					
ANR	4469126	Identifier	r_config_get		4469105	0					
ANR	4469127	ArgumentList	core -> config		4469105	1					
ANR	4469128	Argument	core -> config		4469105	0					
ANR	4469129	PtrMemberAccess	core -> config		4469105	0					
ANR	4469130	Identifier	core		4469105	0					
ANR	4469131	Identifier	config		4469105	1					
ANR	4469132	Argument	"""asm.arch"""		4469105	1					
ANR	4469133	PrimaryExpression	"""asm.arch"""		4469105	0					
ANR	4469134	IdentifierDeclStatement	const int asmbits = core -> assembler -> bits ;	267:1:7973:8014	4469105	2	True				
ANR	4469135	IdentifierDecl	asmbits = core -> assembler -> bits		4469105	0					
ANR	4469136	IdentifierDeclType	const int		4469105	0					
ANR	4469137	Identifier	asmbits		4469105	1					
ANR	4469138	AssignmentExpression	asmbits = core -> assembler -> bits		4469105	2		=			
ANR	4469139	Identifier	asmbits		4469105	0					
ANR	4469140	PtrMemberAccess	core -> assembler -> bits		4469105	1					
ANR	4469141	PtrMemberAccess	core -> assembler		4469105	0					
ANR	4469142	Identifier	core		4469105	0					
ANR	4469143	Identifier	assembler		4469105	1					
ANR	4469144	Identifier	bits		4469105	1					
ANR	4469145	IfStatement	if ( ! asmarch )		4469105	3					
ANR	4469146	Condition	! asmarch	269:5:8022:8029	4469105	0	True				
ANR	4469147	UnaryOperationExpression	! asmarch		4469105	0					
ANR	4469148	UnaryOperator	!		4469105	0					
ANR	4469149	Identifier	asmarch		4469105	1					
ANR	4469150	CompoundStatement		6:15:199:199	4469105	1					
ANR	4469151	ReturnStatement	return false ;	270:2:8036:8048	4469105	0	True				
ANR	4469152	Identifier	false		4469105	0					
ANR	4469153	IfStatement	"if ( strstr ( asmarch , ""x86"" ) )"		4469105	4					
ANR	4469154	Condition	"strstr ( asmarch , ""x86"" )"	272:5:8058:8080	4469105	0	True				
ANR	4469155	CallExpression	"strstr ( asmarch , ""x86"" )"		4469105	0					
ANR	4469156	Callee	strstr		4469105	0					
ANR	4469157	Identifier	strstr		4469105	0					
ANR	4469158	ArgumentList	asmarch		4469105	1					
ANR	4469159	Argument	asmarch		4469105	0					
ANR	4469160	Identifier	asmarch		4469105	0					
ANR	4469161	Argument	"""x86"""		4469105	1					
ANR	4469162	PrimaryExpression	"""x86"""		4469105	0					
ANR	4469163	CompoundStatement		9:30:250:250	4469105	1					
ANR	4469164	ExpressionStatement	hack = r_core_hack_x86	273:2:8087:8109	4469105	0	True				
ANR	4469165	AssignmentExpression	hack = r_core_hack_x86		4469105	0		=			
ANR	4469166	Identifier	hack		4469105	0					
ANR	4469167	Identifier	r_core_hack_x86		4469105	1					
ANR	4469168	ElseStatement	else		4469105	0					
ANR	4469169	IfStatement	"if ( strstr ( asmarch , ""dalvik"" ) )"		4469105	0					
ANR	4469170	Condition	"strstr ( asmarch , ""dalvik"" )"	274:12:8123:8148	4469105	0	True				
ANR	4469171	CallExpression	"strstr ( asmarch , ""dalvik"" )"		4469105	0					
ANR	4469172	Callee	strstr		4469105	0					
ANR	4469173	Identifier	strstr		4469105	0					
ANR	4469174	ArgumentList	asmarch		4469105	1					
ANR	4469175	Argument	asmarch		4469105	0					
ANR	4469176	Identifier	asmarch		4469105	0					
ANR	4469177	Argument	"""dalvik"""		4469105	1					
ANR	4469178	PrimaryExpression	"""dalvik"""		4469105	0					
ANR	4469179	CompoundStatement		11:40:318:318	4469105	1					
ANR	4469180	ExpressionStatement	hack = r_core_hack_dalvik	275:2:8155:8180	4469105	0	True				
ANR	4469181	AssignmentExpression	hack = r_core_hack_dalvik		4469105	0		=			
ANR	4469182	Identifier	hack		4469105	0					
ANR	4469183	Identifier	r_core_hack_dalvik		4469105	1					
ANR	4469184	ElseStatement	else		4469105	0					
ANR	4469185	IfStatement	"if ( strstr ( asmarch , ""arm"" ) )"		4469105	0					
ANR	4469186	Condition	"strstr ( asmarch , ""arm"" )"	276:12:8194:8216	4469105	0	True				
ANR	4469187	CallExpression	"strstr ( asmarch , ""arm"" )"		4469105	0					
ANR	4469188	Callee	strstr		4469105	0					
ANR	4469189	Identifier	strstr		4469105	0					
ANR	4469190	ArgumentList	asmarch		4469105	1					
ANR	4469191	Argument	asmarch		4469105	0					
ANR	4469192	Identifier	asmarch		4469105	0					
ANR	4469193	Argument	"""arm"""		4469105	1					
ANR	4469194	PrimaryExpression	"""arm"""		4469105	0					
ANR	4469195	CompoundStatement		13:37:386:386	4469105	1					
ANR	4469196	IfStatement	if ( asmbits == 64 )		4469105	0					
ANR	4469197	Condition	asmbits == 64	277:6:8227:8239	4469105	0	True				
ANR	4469198	EqualityExpression	asmbits == 64		4469105	0		==			
ANR	4469199	Identifier	asmbits		4469105	0					
ANR	4469200	PrimaryExpression	64		4469105	1					
ANR	4469201	CompoundStatement		14:21:409:409	4469105	1					
ANR	4469202	ExpressionStatement	hack = r_core_hack_arm64	278:3:8247:8271	4469105	0	True				
ANR	4469203	AssignmentExpression	hack = r_core_hack_arm64		4469105	0		=			
ANR	4469204	Identifier	hack		4469105	0					
ANR	4469205	Identifier	r_core_hack_arm64		4469105	1					
ANR	4469206	ElseStatement	else		4469105	0					
ANR	4469207	CompoundStatement		16:9:449:449	4469105	0					
ANR	4469208	ExpressionStatement	hack = r_core_hack_arm	280:3:8287:8309	4469105	0	True				
ANR	4469209	AssignmentExpression	hack = r_core_hack_arm		4469105	0		=			
ANR	4469210	Identifier	hack		4469105	0					
ANR	4469211	Identifier	r_core_hack_arm		4469105	1					
ANR	4469212	ElseStatement	else		4469105	0					
ANR	4469213	CompoundStatement		19:8:490:490	4469105	0					
ANR	4469214	ExpressionStatement	"eprintf ( ""TODO: write hacks are only for x86\\n"" )"	283:2:8327:8375	4469105	0	True				
ANR	4469215	CallExpression	"eprintf ( ""TODO: write hacks are only for x86\\n"" )"		4469105	0					
ANR	4469216	Callee	eprintf		4469105	0					
ANR	4469217	Identifier	eprintf		4469105	0					
ANR	4469218	ArgumentList	"""TODO: write hacks are only for x86\\n"""		4469105	1					
ANR	4469219	Argument	"""TODO: write hacks are only for x86\\n"""		4469105	0					
ANR	4469220	PrimaryExpression	"""TODO: write hacks are only for x86\\n"""		4469105	0					
ANR	4469221	IfStatement	if ( hack )		4469105	5					
ANR	4469222	Condition	hack	285:5:8385:8388	4469105	0	True				
ANR	4469223	Identifier	hack		4469105	0					
ANR	4469224	CompoundStatement		23:2:562:576	4469105	1					
ANR	4469225	IdentifierDeclStatement	RAnalOp analop ;	286:2:8395:8409	4469105	0	True				
ANR	4469226	IdentifierDecl	analop		4469105	0					
ANR	4469227	IdentifierDeclType	RAnalOp		4469105	0					
ANR	4469228	Identifier	analop		4469105	1					
ANR	4469229	IfStatement	"if ( ! r_anal_op ( core -> anal , & analop , core -> offset , core -> block , core -> blocksize , R_ANAL_OP_MASK_BASIC ) )"		4469105	1					
ANR	4469230	Condition	"! r_anal_op ( core -> anal , & analop , core -> offset , core -> block , core -> blocksize , R_ANAL_OP_MASK_BASIC )"	287:6:8417:8514	4469105	0	True				
ANR	4469231	UnaryOperationExpression	"! r_anal_op ( core -> anal , & analop , core -> offset , core -> block , core -> blocksize , R_ANAL_OP_MASK_BASIC )"		4469105	0					
ANR	4469232	UnaryOperator	!		4469105	0					
ANR	4469233	CallExpression	"r_anal_op ( core -> anal , & analop , core -> offset , core -> block , core -> blocksize , R_ANAL_OP_MASK_BASIC )"		4469105	1					
ANR	4469234	Callee	r_anal_op		4469105	0					
ANR	4469235	Identifier	r_anal_op		4469105	0					
ANR	4469236	ArgumentList	core -> anal		4469105	1					
ANR	4469237	Argument	core -> anal		4469105	0					
ANR	4469238	PtrMemberAccess	core -> anal		4469105	0					
ANR	4469239	Identifier	core		4469105	0					
ANR	4469240	Identifier	anal		4469105	1					
ANR	4469241	Argument	& analop		4469105	1					
ANR	4469242	UnaryOperationExpression	& analop		4469105	0					
ANR	4469243	UnaryOperator	&		4469105	0					
ANR	4469244	Identifier	analop		4469105	1					
ANR	4469245	Argument	core -> offset		4469105	2					
ANR	4469246	PtrMemberAccess	core -> offset		4469105	0					
ANR	4469247	Identifier	core		4469105	0					
ANR	4469248	Identifier	offset		4469105	1					
ANR	4469249	Argument	core -> block		4469105	3					
ANR	4469250	PtrMemberAccess	core -> block		4469105	0					
ANR	4469251	Identifier	core		4469105	0					
ANR	4469252	Identifier	block		4469105	1					
ANR	4469253	Argument	core -> blocksize		4469105	4					
ANR	4469254	PtrMemberAccess	core -> blocksize		4469105	0					
ANR	4469255	Identifier	core		4469105	0					
ANR	4469256	Identifier	blocksize		4469105	1					
ANR	4469257	Argument	R_ANAL_OP_MASK_BASIC		4469105	5					
ANR	4469258	Identifier	R_ANAL_OP_MASK_BASIC		4469105	0					
ANR	4469259	CompoundStatement		24:106:684:684	4469105	1					
ANR	4469260	ExpressionStatement	"eprintf ( ""anal op fail\\n"" )"	288:3:8522:8548	4469105	0	True				
ANR	4469261	CallExpression	"eprintf ( ""anal op fail\\n"" )"		4469105	0					
ANR	4469262	Callee	eprintf		4469105	0					
ANR	4469263	Identifier	eprintf		4469105	0					
ANR	4469264	ArgumentList	"""anal op fail\\n"""		4469105	1					
ANR	4469265	Argument	"""anal op fail\\n"""		4469105	0					
ANR	4469266	PrimaryExpression	"""anal op fail\\n"""		4469105	0					
ANR	4469267	ReturnStatement	return false ;	289:3:8553:8565	4469105	1	True				
ANR	4469268	Identifier	false		4469105	0					
ANR	4469269	ReturnStatement	"return hack ( core , op , & analop ) ;"	291:2:8573:8604	4469105	2	True				
ANR	4469270	CallExpression	"hack ( core , op , & analop )"		4469105	0					
ANR	4469271	Callee	hack		4469105	0					
ANR	4469272	Identifier	hack		4469105	0					
ANR	4469273	ArgumentList	core		4469105	1					
ANR	4469274	Argument	core		4469105	0					
ANR	4469275	Identifier	core		4469105	0					
ANR	4469276	Argument	op		4469105	1					
ANR	4469277	Identifier	op		4469105	0					
ANR	4469278	Argument	& analop		4469105	2					
ANR	4469279	UnaryOperationExpression	& analop		4469105	0					
ANR	4469280	UnaryOperator	&		4469105	0					
ANR	4469281	Identifier	analop		4469105	1					
ANR	4469282	ReturnStatement	return false ;	293:1:8610:8622	4469105	6	True				
ANR	4469283	Identifier	false		4469105	0					
ANR	4469284	ReturnType	R_API int		4469105	1					
ANR	4469285	Identifier	r_core_hack		4469105	2					
ANR	4469286	ParameterList	"RCore * core , const char * op"		4469105	3					
ANR	4469287	Parameter	RCore * core	264:22:7803:7813	4469105	0	True				
ANR	4469288	ParameterType	RCore *		4469105	0					
ANR	4469289	Identifier	core		4469105	1					
ANR	4469290	Parameter	const char * op	264:35:7816:7829	4469105	1	True				
ANR	4469291	ParameterType	const char *		4469105	0					
ANR	4469292	Identifier	op		4469105	1					
ANR	4469293	CFGEntryNode	ENTRY		4469105		True				
ANR	4469294	CFGExitNode	EXIT		4469105		True				
ANR	4469295	Symbol	& analop		4469105						
ANR	4469296	Symbol	* core		4469105						
ANR	4469297	Symbol	r_config_get		4469105						
ANR	4469298	Symbol	core -> assembler -> bits		4469105						
ANR	4469299	Symbol	r_core_hack_x86		4469105						
ANR	4469300	Symbol	core -> assembler		4469105						
ANR	4469301	Symbol	r_core_hack_dalvik		4469105						
ANR	4469302	Symbol	core -> offset		4469105						
ANR	4469303	Symbol	R_ANAL_OP_MASK_BASIC		4469105						
ANR	4469304	Symbol	core -> anal		4469105						
ANR	4469305	Symbol	* core -> assembler		4469105						
ANR	4469306	Symbol	hack		4469105						
ANR	4469307	Symbol	r_core_hack_arm64		4469105						
ANR	4469308	Symbol	* * core		4469105						
ANR	4469309	Symbol	r_anal_op		4469105						
ANR	4469310	Symbol	core -> config		4469105						
ANR	4469311	Symbol	core -> blocksize		4469105						
ANR	4469312	Symbol	op		4469105						
ANR	4469313	Symbol	NULL		4469105						
ANR	4469314	Symbol	core -> block		4469105						
ANR	4469315	Symbol	asmbits		4469105						
ANR	4469316	Symbol	false		4469105						
ANR	4469317	Symbol	core		4469105						
ANR	4469318	Symbol	r_core_hack_arm		4469105						
ANR	4469319	Symbol	strstr		4469105						
ANR	4469320	Symbol	asmarch		4469105						
ANR	4469321	Symbol	analop		4469105						
