command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4889486	File	data/converged/CVE-2019-16718~_radare2/libr_io_p_io_ihex.c								
ANR	4889487	ClassDef	<unnamed>	37:8:1410:1451							
ANR	4889488	DeclStmt									
ANR	4889489	Decl							int	int	fd
ANR	4889490	DeclStmt									
ANR	4889491	Decl							RBuffer	RBuffer *	rbuf
ANR	4889492	DeclStmt									
ANR	4889493	Decl									Rihex
ANR	4889494	DeclStmt									
ANR	4889495	Decl							int	"int ( FILE * fd , ut16 eaddr )"	fw04b
ANR	4889496	DeclStmt									
ANR	4889497	Decl							int	"int ( FILE * fd , ut8 * b , ut32 start_addr , ut16 size )"	fwblock
ANR	4889498	Function	__write	45:0:1561:3425							
ANR	4889499	FunctionDef	"__write (RIO * io , RIODesc * fd , const ut8 * buf , int count)"		4889498	0					
ANR	4889500	CompoundStatement		45:68:1629:3425	4889498	0					
ANR	4889501	IdentifierDeclStatement	const char * pathname ;	46:1:1632:1652	4889498	0	True				
ANR	4889502	IdentifierDecl	* pathname		4889498	0					
ANR	4889503	IdentifierDeclType	const char *		4889498	0					
ANR	4889504	Identifier	pathname		4889498	1					
ANR	4889505	IdentifierDeclStatement	FILE * out ;	47:1:1655:1664	4889498	1	True				
ANR	4889506	IdentifierDecl	* out		4889498	0					
ANR	4889507	IdentifierDeclType	FILE *		4889498	0					
ANR	4889508	Identifier	out		4889498	1					
ANR	4889509	IdentifierDeclStatement	Rihex * rih ;	48:1:1667:1677	4889498	2	True				
ANR	4889510	IdentifierDecl	* rih		4889498	0					
ANR	4889511	IdentifierDeclType	Rihex *		4889498	0					
ANR	4889512	Identifier	rih		4889498	1					
ANR	4889513	IdentifierDeclStatement	RBufferSparse * rbs ;	49:1:1680:1698	4889498	3	True				
ANR	4889514	IdentifierDecl	* rbs		4889498	0					
ANR	4889515	IdentifierDeclType	RBufferSparse *		4889498	0					
ANR	4889516	Identifier	rbs		4889498	1					
ANR	4889517	IdentifierDeclStatement	RListIter * iter ;	50:1:1701:1716	4889498	4	True				
ANR	4889518	IdentifierDecl	* iter		4889498	0					
ANR	4889519	IdentifierDeclType	RListIter *		4889498	0					
ANR	4889520	Identifier	iter		4889498	1					
ANR	4889521	IfStatement	if ( ! fd || ! fd -> data || ( fd -> perm & R_PERM_W ) == 0 || count <= 0 )		4889498	5					
ANR	4889522	Condition	! fd || ! fd -> data || ( fd -> perm & R_PERM_W ) == 0 || count <= 0	52:5:1724:1783	4889498	0	True				
ANR	4889523	OrExpression	! fd || ! fd -> data || ( fd -> perm & R_PERM_W ) == 0 || count <= 0		4889498	0		||			
ANR	4889524	UnaryOperationExpression	! fd		4889498	0					
ANR	4889525	UnaryOperator	!		4889498	0					
ANR	4889526	Identifier	fd		4889498	1					
ANR	4889527	OrExpression	! fd -> data || ( fd -> perm & R_PERM_W ) == 0 || count <= 0		4889498	1		||			
ANR	4889528	UnaryOperationExpression	! fd -> data		4889498	0					
ANR	4889529	UnaryOperator	!		4889498	0					
ANR	4889530	PtrMemberAccess	fd -> data		4889498	1					
ANR	4889531	Identifier	fd		4889498	0					
ANR	4889532	Identifier	data		4889498	1					
ANR	4889533	OrExpression	( fd -> perm & R_PERM_W ) == 0 || count <= 0		4889498	1		||			
ANR	4889534	EqualityExpression	( fd -> perm & R_PERM_W ) == 0		4889498	0		==			
ANR	4889535	BitAndExpression	fd -> perm & R_PERM_W		4889498	0		&			
ANR	4889536	PtrMemberAccess	fd -> perm		4889498	0					
ANR	4889537	Identifier	fd		4889498	0					
ANR	4889538	Identifier	perm		4889498	1					
ANR	4889539	Identifier	R_PERM_W		4889498	1					
ANR	4889540	PrimaryExpression	0		4889498	1					
ANR	4889541	RelationalExpression	count <= 0		4889498	1		<=			
ANR	4889542	Identifier	count		4889498	0					
ANR	4889543	PrimaryExpression	0		4889498	1					
ANR	4889544	CompoundStatement		8:67:156:156	4889498	1					
ANR	4889545	ReturnStatement	return - 1 ;	53:2:1790:1799	4889498	0	True				
ANR	4889546	UnaryOperationExpression	- 1		4889498	0					
ANR	4889547	UnaryOperator	-		4889498	0					
ANR	4889548	PrimaryExpression	1		4889498	1					
ANR	4889549	ExpressionStatement	rih = fd -> data	55:1:1805:1819	4889498	6	True				
ANR	4889550	AssignmentExpression	rih = fd -> data		4889498	0		=			
ANR	4889551	Identifier	rih		4889498	0					
ANR	4889552	PtrMemberAccess	fd -> data		4889498	1					
ANR	4889553	Identifier	fd		4889498	0					
ANR	4889554	Identifier	data		4889498	1					
ANR	4889555	ExpressionStatement	pathname = fd -> name + 7	56:1:1822:1845	4889498	7	True				
ANR	4889556	AssignmentExpression	pathname = fd -> name + 7		4889498	0		=			
ANR	4889557	Identifier	pathname		4889498	0					
ANR	4889558	AdditiveExpression	fd -> name + 7		4889498	1		+			
ANR	4889559	PtrMemberAccess	fd -> name		4889498	0					
ANR	4889560	Identifier	fd		4889498	0					
ANR	4889561	Identifier	name		4889498	1					
ANR	4889562	PrimaryExpression	7		4889498	1					
ANR	4889563	ExpressionStatement	"out = r_sandbox_fopen ( pathname , ""w"" )"	57:1:1848:1885	4889498	8	True				
ANR	4889564	AssignmentExpression	"out = r_sandbox_fopen ( pathname , ""w"" )"		4889498	0		=			
ANR	4889565	Identifier	out		4889498	0					
ANR	4889566	CallExpression	"r_sandbox_fopen ( pathname , ""w"" )"		4889498	1					
ANR	4889567	Callee	r_sandbox_fopen		4889498	0					
ANR	4889568	Identifier	r_sandbox_fopen		4889498	0					
ANR	4889569	ArgumentList	pathname		4889498	1					
ANR	4889570	Argument	pathname		4889498	0					
ANR	4889571	Identifier	pathname		4889498	0					
ANR	4889572	Argument	"""w"""		4889498	1					
ANR	4889573	PrimaryExpression	"""w"""		4889498	0					
ANR	4889574	IfStatement	if ( ! out )		4889498	9					
ANR	4889575	Condition	! out	58:5:1892:1895	4889498	0	True				
ANR	4889576	UnaryOperationExpression	! out		4889498	0					
ANR	4889577	UnaryOperator	!		4889498	0					
ANR	4889578	Identifier	out		4889498	1					
ANR	4889579	CompoundStatement		14:11:268:268	4889498	1					
ANR	4889580	ExpressionStatement	"eprintf ( ""Cannot open '%s' for writing\\n"" , pathname )"	59:2:1902:1954	4889498	0	True				
ANR	4889581	CallExpression	"eprintf ( ""Cannot open '%s' for writing\\n"" , pathname )"		4889498	0					
ANR	4889582	Callee	eprintf		4889498	0					
ANR	4889583	Identifier	eprintf		4889498	0					
ANR	4889584	ArgumentList	"""Cannot open '%s' for writing\\n"""		4889498	1					
ANR	4889585	Argument	"""Cannot open '%s' for writing\\n"""		4889498	0					
ANR	4889586	PrimaryExpression	"""Cannot open '%s' for writing\\n"""		4889498	0					
ANR	4889587	Argument	pathname		4889498	1					
ANR	4889588	Identifier	pathname		4889498	0					
ANR	4889589	ReturnStatement	return - 1 ;	60:2:1958:1967	4889498	1	True				
ANR	4889590	UnaryOperationExpression	- 1		4889498	0					
ANR	4889591	UnaryOperator	-		4889498	0					
ANR	4889592	PrimaryExpression	1		4889498	1					
ANR	4889593	IfStatement	"if ( r_buf_write_at ( rih -> rbuf , io -> off , buf , count ) != count )"		4889498	10					
ANR	4889594	Condition	"r_buf_write_at ( rih -> rbuf , io -> off , buf , count ) != count"	63:5:1994:2049	4889498	0	True				
ANR	4889595	EqualityExpression	"r_buf_write_at ( rih -> rbuf , io -> off , buf , count ) != count"		4889498	0		!=			
ANR	4889596	CallExpression	"r_buf_write_at ( rih -> rbuf , io -> off , buf , count )"		4889498	0					
ANR	4889597	Callee	r_buf_write_at		4889498	0					
ANR	4889598	Identifier	r_buf_write_at		4889498	0					
ANR	4889599	ArgumentList	rih -> rbuf		4889498	1					
ANR	4889600	Argument	rih -> rbuf		4889498	0					
ANR	4889601	PtrMemberAccess	rih -> rbuf		4889498	0					
ANR	4889602	Identifier	rih		4889498	0					
ANR	4889603	Identifier	rbuf		4889498	1					
ANR	4889604	Argument	io -> off		4889498	1					
ANR	4889605	PtrMemberAccess	io -> off		4889498	0					
ANR	4889606	Identifier	io		4889498	0					
ANR	4889607	Identifier	off		4889498	1					
ANR	4889608	Argument	buf		4889498	2					
ANR	4889609	Identifier	buf		4889498	0					
ANR	4889610	Argument	count		4889498	3					
ANR	4889611	Identifier	count		4889498	0					
ANR	4889612	Identifier	count		4889498	1					
ANR	4889613	CompoundStatement		19:63:422:422	4889498	1					
ANR	4889614	ExpressionStatement	"eprintf ( ""ihex:write(): sparse write failed\\n"" )"	64:2:2056:2103	4889498	0	True				
ANR	4889615	CallExpression	"eprintf ( ""ihex:write(): sparse write failed\\n"" )"		4889498	0					
ANR	4889616	Callee	eprintf		4889498	0					
ANR	4889617	Identifier	eprintf		4889498	0					
ANR	4889618	ArgumentList	"""ihex:write(): sparse write failed\\n"""		4889498	1					
ANR	4889619	Argument	"""ihex:write(): sparse write failed\\n"""		4889498	0					
ANR	4889620	PrimaryExpression	"""ihex:write(): sparse write failed\\n"""		4889498	0					
ANR	4889621	ExpressionStatement	fclose ( out )	65:2:2107:2119	4889498	1	True				
ANR	4889622	CallExpression	fclose ( out )		4889498	0					
ANR	4889623	Callee	fclose		4889498	0					
ANR	4889624	Identifier	fclose		4889498	0					
ANR	4889625	ArgumentList	out		4889498	1					
ANR	4889626	Argument	out		4889498	0					
ANR	4889627	Identifier	out		4889498	0					
ANR	4889628	ReturnStatement	return - 1 ;	66:2:2123:2132	4889498	2	True				
ANR	4889629	UnaryOperationExpression	- 1		4889498	0					
ANR	4889630	UnaryOperator	-		4889498	0					
ANR	4889631	PrimaryExpression	1		4889498	1					
ANR	4889632	IdentifierDeclStatement	RList * nonempty = r_buf_nonempty_list ( rih -> rbuf ) ;	71:1:2227:2276	4889498	11	True				
ANR	4889633	IdentifierDecl	* nonempty = r_buf_nonempty_list ( rih -> rbuf )		4889498	0					
ANR	4889634	IdentifierDeclType	RList *		4889498	0					
ANR	4889635	Identifier	nonempty		4889498	1					
ANR	4889636	AssignmentExpression	* nonempty = r_buf_nonempty_list ( rih -> rbuf )		4889498	2		=			
ANR	4889637	Identifier	nonempty		4889498	0					
ANR	4889638	CallExpression	r_buf_nonempty_list ( rih -> rbuf )		4889498	1					
ANR	4889639	Callee	r_buf_nonempty_list		4889498	0					
ANR	4889640	Identifier	r_buf_nonempty_list		4889498	0					
ANR	4889641	ArgumentList	rih -> rbuf		4889498	1					
ANR	4889642	Argument	rih -> rbuf		4889498	0					
ANR	4889643	PtrMemberAccess	rih -> rbuf		4889498	0					
ANR	4889644	Identifier	rih		4889498	0					
ANR	4889645	Identifier	rbuf		4889498	1					
ANR	4889646	Statement	r_list_foreach	72:1:2279:2292	4889498	12	True				
ANR	4889647	Statement	(	72:16:2294:2294	4889498	13	True				
ANR	4889648	Statement	nonempty	72:17:2295:2302	4889498	14	True				
ANR	4889649	Statement	","	72:25:2303:2303	4889498	15	True				
ANR	4889650	Statement	iter	72:27:2305:2308	4889498	16	True				
ANR	4889651	Statement	","	72:31:2309:2309	4889498	17	True				
ANR	4889652	Statement	rbs	72:33:2311:2313	4889498	18	True				
ANR	4889653	Statement	)	72:36:2314:2314	4889498	19	True				
ANR	4889654	CompoundStatement		32:2:787:799	4889498	20					
ANR	4889655	IdentifierDeclStatement	ut16 addl0 = rbs -> from & 0xffff ;	73:2:2320:2351	4889498	0	True				
ANR	4889656	IdentifierDecl	addl0 = rbs -> from & 0xffff		4889498	0					
ANR	4889657	IdentifierDeclType	ut16		4889498	0					
ANR	4889658	Identifier	addl0		4889498	1					
ANR	4889659	AssignmentExpression	addl0 = rbs -> from & 0xffff		4889498	2		=			
ANR	4889660	Identifier	addl0		4889498	0					
ANR	4889661	BitAndExpression	rbs -> from & 0xffff		4889498	1		&			
ANR	4889662	PtrMemberAccess	rbs -> from		4889498	0					
ANR	4889663	Identifier	rbs		4889498	0					
ANR	4889664	Identifier	from		4889498	1					
ANR	4889665	PrimaryExpression	0xffff		4889498	1					
ANR	4889666	IdentifierDeclStatement	ut16 addh0 = rbs -> from >> 16 ;	74:2:2355:2383	4889498	1	True				
ANR	4889667	IdentifierDecl	addh0 = rbs -> from >> 16		4889498	0					
ANR	4889668	IdentifierDeclType	ut16		4889498	0					
ANR	4889669	Identifier	addh0		4889498	1					
ANR	4889670	AssignmentExpression	addh0 = rbs -> from >> 16		4889498	2		=			
ANR	4889671	Identifier	addh0		4889498	0					
ANR	4889672	ShiftExpression	rbs -> from >> 16		4889498	1		>>			
ANR	4889673	PtrMemberAccess	rbs -> from		4889498	0					
ANR	4889674	Identifier	rbs		4889498	0					
ANR	4889675	Identifier	from		4889498	1					
ANR	4889676	PrimaryExpression	16		4889498	1					
ANR	4889677	IdentifierDeclStatement	ut16 addh1 = rbs -> to >> 16 ;	75:2:2387:2413	4889498	2	True				
ANR	4889678	IdentifierDecl	addh1 = rbs -> to >> 16		4889498	0					
ANR	4889679	IdentifierDeclType	ut16		4889498	0					
ANR	4889680	Identifier	addh1		4889498	1					
ANR	4889681	AssignmentExpression	addh1 = rbs -> to >> 16		4889498	2		=			
ANR	4889682	Identifier	addh1		4889498	0					
ANR	4889683	ShiftExpression	rbs -> to >> 16		4889498	1		>>			
ANR	4889684	PtrMemberAccess	rbs -> to		4889498	0					
ANR	4889685	Identifier	rbs		4889498	0					
ANR	4889686	Identifier	to		4889498	1					
ANR	4889687	PrimaryExpression	16		4889498	1					
ANR	4889688	IdentifierDeclStatement	ut16 tsiz = 0 ;	76:2:2417:2429	4889498	3	True				
ANR	4889689	IdentifierDecl	tsiz = 0		4889498	0					
ANR	4889690	IdentifierDeclType	ut16		4889498	0					
ANR	4889691	Identifier	tsiz		4889498	1					
ANR	4889692	AssignmentExpression	tsiz = 0		4889498	2		=			
ANR	4889693	Identifier	tsiz		4889498	0					
ANR	4889694	PrimaryExpression	0		4889498	1					
ANR	4889695	IfStatement	if ( rbs -> size == 0 )		4889498	4					
ANR	4889696	Condition	rbs -> size == 0	77:6:2437:2450	4889498	0	True				
ANR	4889697	EqualityExpression	rbs -> size == 0		4889498	0		==			
ANR	4889698	PtrMemberAccess	rbs -> size		4889498	0					
ANR	4889699	Identifier	rbs		4889498	0					
ANR	4889700	Identifier	size		4889498	1					
ANR	4889701	PrimaryExpression	0		4889498	1					
ANR	4889702	CompoundStatement		33:22:823:823	4889498	1					
ANR	4889703	ContinueStatement	continue ;	78:3:2458:2466	4889498	0	True				
ANR	4889704	IfStatement	if ( addh0 != addh1 )		4889498	5					
ANR	4889705	Condition	addh0 != addh1	81:6:2479:2492	4889498	0	True				
ANR	4889706	EqualityExpression	addh0 != addh1		4889498	0		!=			
ANR	4889707	Identifier	addh0		4889498	0					
ANR	4889708	Identifier	addh1		4889498	1					
ANR	4889709	CompoundStatement		37:22:865:865	4889498	1					
ANR	4889710	IfStatement	"if ( fw04b ( out , addh0 ) < 0 )"		4889498	0					
ANR	4889711	Condition	"fw04b ( out , addh0 ) < 0"	84:7:2585:2606	4889498	0	True				
ANR	4889712	RelationalExpression	"fw04b ( out , addh0 ) < 0"		4889498	0		<			
ANR	4889713	CallExpression	"fw04b ( out , addh0 )"		4889498	0					
ANR	4889714	Callee	fw04b		4889498	0					
ANR	4889715	Identifier	fw04b		4889498	0					
ANR	4889716	ArgumentList	out		4889498	1					
ANR	4889717	Argument	out		4889498	0					
ANR	4889718	Identifier	out		4889498	0					
ANR	4889719	Argument	addh0		4889498	1					
ANR	4889720	Identifier	addh0		4889498	0					
ANR	4889721	PrimaryExpression	0		4889498	1					
ANR	4889722	CompoundStatement		40:31:979:979	4889498	1					
ANR	4889723	ExpressionStatement	"eprintf ( ""ihex:write: file error\\n"" )"	85:4:2615:2650	4889498	0	True				
ANR	4889724	CallExpression	"eprintf ( ""ihex:write: file error\\n"" )"		4889498	0					
ANR	4889725	Callee	eprintf		4889498	0					
ANR	4889726	Identifier	eprintf		4889498	0					
ANR	4889727	ArgumentList	"""ihex:write: file error\\n"""		4889498	1					
ANR	4889728	Argument	"""ihex:write: file error\\n"""		4889498	0					
ANR	4889729	PrimaryExpression	"""ihex:write: file error\\n"""		4889498	0					
ANR	4889730	ExpressionStatement	r_list_free ( nonempty )	86:4:2656:2678	4889498	1	True				
ANR	4889731	CallExpression	r_list_free ( nonempty )		4889498	0					
ANR	4889732	Callee	r_list_free		4889498	0					
ANR	4889733	Identifier	r_list_free		4889498	0					
ANR	4889734	ArgumentList	nonempty		4889498	1					
ANR	4889735	Argument	nonempty		4889498	0					
ANR	4889736	Identifier	nonempty		4889498	0					
ANR	4889737	ExpressionStatement	fclose ( out )	87:4:2684:2696	4889498	2	True				
ANR	4889738	CallExpression	fclose ( out )		4889498	0					
ANR	4889739	Callee	fclose		4889498	0					
ANR	4889740	Identifier	fclose		4889498	0					
ANR	4889741	ArgumentList	out		4889498	1					
ANR	4889742	Argument	out		4889498	0					
ANR	4889743	Identifier	out		4889498	0					
ANR	4889744	ReturnStatement	return - 1 ;	88:4:2702:2711	4889498	3	True				
ANR	4889745	UnaryOperationExpression	- 1		4889498	0					
ANR	4889746	UnaryOperator	-		4889498	0					
ANR	4889747	PrimaryExpression	1		4889498	1					
ANR	4889748	ExpressionStatement	tsiz = - addl0	91:3:2744:2757	4889498	1	True				
ANR	4889749	AssignmentExpression	tsiz = - addl0		4889498	0		=			
ANR	4889750	Identifier	tsiz		4889498	0					
ANR	4889751	UnaryOperationExpression	- addl0		4889498	1					
ANR	4889752	UnaryOperator	-		4889498	0					
ANR	4889753	Identifier	addl0		4889498	1					
ANR	4889754	ExpressionStatement	addl0 = 0	92:3:2762:2771	4889498	2	True				
ANR	4889755	AssignmentExpression	addl0 = 0		4889498	0		=			
ANR	4889756	Identifier	addl0		4889498	0					
ANR	4889757	PrimaryExpression	0		4889498	1					
ANR	4889758	IfStatement	"if ( fwblock ( out , rbs -> data , rbs -> from , tsiz ) )"		4889498	3					
ANR	4889759	Condition	"fwblock ( out , rbs -> data , rbs -> from , tsiz )"	93:7:2780:2820	4889498	0	True				
ANR	4889760	CallExpression	"fwblock ( out , rbs -> data , rbs -> from , tsiz )"		4889498	0					
ANR	4889761	Callee	fwblock		4889498	0					
ANR	4889762	Identifier	fwblock		4889498	0					
ANR	4889763	ArgumentList	out		4889498	1					
ANR	4889764	Argument	out		4889498	0					
ANR	4889765	Identifier	out		4889498	0					
ANR	4889766	Argument	rbs -> data		4889498	1					
ANR	4889767	PtrMemberAccess	rbs -> data		4889498	0					
ANR	4889768	Identifier	rbs		4889498	0					
ANR	4889769	Identifier	data		4889498	1					
ANR	4889770	Argument	rbs -> from		4889498	2					
ANR	4889771	PtrMemberAccess	rbs -> from		4889498	0					
ANR	4889772	Identifier	rbs		4889498	0					
ANR	4889773	Identifier	from		4889498	1					
ANR	4889774	Argument	tsiz		4889498	3					
ANR	4889775	Identifier	tsiz		4889498	0					
ANR	4889776	CompoundStatement		49:50:1193:1193	4889498	1					
ANR	4889777	ExpressionStatement	"eprintf ( ""ihex:fwblock error\\n"" )"	94:4:2829:2861	4889498	0	True				
ANR	4889778	CallExpression	"eprintf ( ""ihex:fwblock error\\n"" )"		4889498	0					
ANR	4889779	Callee	eprintf		4889498	0					
ANR	4889780	Identifier	eprintf		4889498	0					
ANR	4889781	ArgumentList	"""ihex:fwblock error\\n"""		4889498	1					
ANR	4889782	Argument	"""ihex:fwblock error\\n"""		4889498	0					
ANR	4889783	PrimaryExpression	"""ihex:fwblock error\\n"""		4889498	0					
ANR	4889784	ExpressionStatement	r_list_free ( nonempty )	95:4:2867:2889	4889498	1	True				
ANR	4889785	CallExpression	r_list_free ( nonempty )		4889498	0					
ANR	4889786	Callee	r_list_free		4889498	0					
ANR	4889787	Identifier	r_list_free		4889498	0					
ANR	4889788	ArgumentList	nonempty		4889498	1					
ANR	4889789	Argument	nonempty		4889498	0					
ANR	4889790	Identifier	nonempty		4889498	0					
ANR	4889791	ExpressionStatement	fclose ( out )	96:4:2895:2907	4889498	2	True				
ANR	4889792	CallExpression	fclose ( out )		4889498	0					
ANR	4889793	Callee	fclose		4889498	0					
ANR	4889794	Identifier	fclose		4889498	0					
ANR	4889795	ArgumentList	out		4889498	1					
ANR	4889796	Argument	out		4889498	0					
ANR	4889797	Identifier	out		4889498	0					
ANR	4889798	ReturnStatement	return - 1 ;	97:4:2913:2922	4889498	3	True				
ANR	4889799	UnaryOperationExpression	- 1		4889498	0					
ANR	4889800	UnaryOperator	-		4889498	0					
ANR	4889801	PrimaryExpression	1		4889498	1					
ANR	4889802	IfStatement	"if ( fw04b ( out , addh1 ) < 0 )"		4889498	6					
ANR	4889803	Condition	"fw04b ( out , addh1 ) < 0"	101:6:2967:2988	4889498	0	True				
ANR	4889804	RelationalExpression	"fw04b ( out , addh1 ) < 0"		4889498	0		<			
ANR	4889805	CallExpression	"fw04b ( out , addh1 )"		4889498	0					
ANR	4889806	Callee	fw04b		4889498	0					
ANR	4889807	Identifier	fw04b		4889498	0					
ANR	4889808	ArgumentList	out		4889498	1					
ANR	4889809	Argument	out		4889498	0					
ANR	4889810	Identifier	out		4889498	0					
ANR	4889811	Argument	addh1		4889498	1					
ANR	4889812	Identifier	addh1		4889498	0					
ANR	4889813	PrimaryExpression	0		4889498	1					
ANR	4889814	CompoundStatement		57:30:1361:1361	4889498	1					
ANR	4889815	ExpressionStatement	"eprintf ( ""ihex:write: file error\\n"" )"	102:3:2996:3032	4889498	0	True				
ANR	4889816	CallExpression	"eprintf ( ""ihex:write: file error\\n"" )"		4889498	0					
ANR	4889817	Callee	eprintf		4889498	0					
ANR	4889818	Identifier	eprintf		4889498	0					
ANR	4889819	ArgumentList	"""ihex:write: file error\\n"""		4889498	1					
ANR	4889820	Argument	"""ihex:write: file error\\n"""		4889498	0					
ANR	4889821	PrimaryExpression	"""ihex:write: file error\\n"""		4889498	0					
ANR	4889822	ExpressionStatement	r_list_free ( nonempty )	103:3:3037:3059	4889498	1	True				
ANR	4889823	CallExpression	r_list_free ( nonempty )		4889498	0					
ANR	4889824	Callee	r_list_free		4889498	0					
ANR	4889825	Identifier	r_list_free		4889498	0					
ANR	4889826	ArgumentList	nonempty		4889498	1					
ANR	4889827	Argument	nonempty		4889498	0					
ANR	4889828	Identifier	nonempty		4889498	0					
ANR	4889829	ExpressionStatement	fclose ( out )	104:3:3064:3076	4889498	2	True				
ANR	4889830	CallExpression	fclose ( out )		4889498	0					
ANR	4889831	Callee	fclose		4889498	0					
ANR	4889832	Identifier	fclose		4889498	0					
ANR	4889833	ArgumentList	out		4889498	1					
ANR	4889834	Argument	out		4889498	0					
ANR	4889835	Identifier	out		4889498	0					
ANR	4889836	ReturnStatement	return - 1 ;	105:3:3081:3090	4889498	3	True				
ANR	4889837	UnaryOperationExpression	- 1		4889498	0					
ANR	4889838	UnaryOperator	-		4889498	0					
ANR	4889839	PrimaryExpression	1		4889498	1					
ANR	4889840	IfStatement	"if ( fwblock ( out , rbs -> data + tsiz , ( addh1 << 16 ) | addl0 , rbs -> size - tsiz ) )"		4889498	7					
ANR	4889841	Condition	"fwblock ( out , rbs -> data + tsiz , ( addh1 << 16 ) | addl0 , rbs -> size - tsiz )"	108:6:3134:3205	4889498	0	True				
ANR	4889842	CallExpression	"fwblock ( out , rbs -> data + tsiz , ( addh1 << 16 ) | addl0 , rbs -> size - tsiz )"		4889498	0					
ANR	4889843	Callee	fwblock		4889498	0					
ANR	4889844	Identifier	fwblock		4889498	0					
ANR	4889845	ArgumentList	out		4889498	1					
ANR	4889846	Argument	out		4889498	0					
ANR	4889847	Identifier	out		4889498	0					
ANR	4889848	Argument	rbs -> data + tsiz		4889498	1					
ANR	4889849	AdditiveExpression	rbs -> data + tsiz		4889498	0		+			
ANR	4889850	PtrMemberAccess	rbs -> data		4889498	0					
ANR	4889851	Identifier	rbs		4889498	0					
ANR	4889852	Identifier	data		4889498	1					
ANR	4889853	Identifier	tsiz		4889498	1					
ANR	4889854	Argument	( addh1 << 16 ) | addl0		4889498	2					
ANR	4889855	InclusiveOrExpression	( addh1 << 16 ) | addl0		4889498	0		|			
ANR	4889856	ShiftExpression	addh1 << 16		4889498	0		<<			
ANR	4889857	Identifier	addh1		4889498	0					
ANR	4889858	PrimaryExpression	16		4889498	1					
ANR	4889859	Identifier	addl0		4889498	1					
ANR	4889860	Argument	rbs -> size - tsiz		4889498	3					
ANR	4889861	AdditiveExpression	rbs -> size - tsiz		4889498	0		-			
ANR	4889862	PtrMemberAccess	rbs -> size		4889498	0					
ANR	4889863	Identifier	rbs		4889498	0					
ANR	4889864	Identifier	size		4889498	1					
ANR	4889865	Identifier	tsiz		4889498	1					
ANR	4889866	CompoundStatement		64:80:1578:1578	4889498	1					
ANR	4889867	ExpressionStatement	"eprintf ( ""ihex:fwblock error\\n"" )"	109:3:3213:3245	4889498	0	True				
ANR	4889868	CallExpression	"eprintf ( ""ihex:fwblock error\\n"" )"		4889498	0					
ANR	4889869	Callee	eprintf		4889498	0					
ANR	4889870	Identifier	eprintf		4889498	0					
ANR	4889871	ArgumentList	"""ihex:fwblock error\\n"""		4889498	1					
ANR	4889872	Argument	"""ihex:fwblock error\\n"""		4889498	0					
ANR	4889873	PrimaryExpression	"""ihex:fwblock error\\n"""		4889498	0					
ANR	4889874	ExpressionStatement	r_list_free ( nonempty )	110:3:3250:3272	4889498	1	True				
ANR	4889875	CallExpression	r_list_free ( nonempty )		4889498	0					
ANR	4889876	Callee	r_list_free		4889498	0					
ANR	4889877	Identifier	r_list_free		4889498	0					
ANR	4889878	ArgumentList	nonempty		4889498	1					
ANR	4889879	Argument	nonempty		4889498	0					
ANR	4889880	Identifier	nonempty		4889498	0					
ANR	4889881	ExpressionStatement	fclose ( out )	111:3:3277:3289	4889498	2	True				
ANR	4889882	CallExpression	fclose ( out )		4889498	0					
ANR	4889883	Callee	fclose		4889498	0					
ANR	4889884	Identifier	fclose		4889498	0					
ANR	4889885	ArgumentList	out		4889498	1					
ANR	4889886	Argument	out		4889498	0					
ANR	4889887	Identifier	out		4889498	0					
ANR	4889888	ReturnStatement	return - 1 ;	112:3:3294:3303	4889498	3	True				
ANR	4889889	UnaryOperationExpression	- 1		4889498	0					
ANR	4889890	UnaryOperator	-		4889498	0					
ANR	4889891	PrimaryExpression	1		4889498	1					
ANR	4889892	ExpressionStatement	r_list_free ( nonempty )	116:1:3329:3351	4889498	21	True				
ANR	4889893	CallExpression	r_list_free ( nonempty )		4889498	0					
ANR	4889894	Callee	r_list_free		4889498	0					
ANR	4889895	Identifier	r_list_free		4889498	0					
ANR	4889896	ArgumentList	nonempty		4889498	1					
ANR	4889897	Argument	nonempty		4889498	0					
ANR	4889898	Identifier	nonempty		4889498	0					
ANR	4889899	ExpressionStatement	"fprintf ( out , "":00000001FF\\n"" )"	117:1:3354:3384	4889498	22	True				
ANR	4889900	CallExpression	"fprintf ( out , "":00000001FF\\n"" )"		4889498	0					
ANR	4889901	Callee	fprintf		4889498	0					
ANR	4889902	Identifier	fprintf		4889498	0					
ANR	4889903	ArgumentList	out		4889498	1					
ANR	4889904	Argument	out		4889498	0					
ANR	4889905	Identifier	out		4889498	0					
ANR	4889906	Argument	""":00000001FF\\n"""		4889498	1					
ANR	4889907	PrimaryExpression	""":00000001FF\\n"""		4889498	0					
ANR	4889908	ExpressionStatement	fclose ( out )	118:1:3387:3399	4889498	23	True				
ANR	4889909	CallExpression	fclose ( out )		4889498	0					
ANR	4889910	Callee	fclose		4889498	0					
ANR	4889911	Identifier	fclose		4889498	0					
ANR	4889912	ArgumentList	out		4889498	1					
ANR	4889913	Argument	out		4889498	0					
ANR	4889914	Identifier	out		4889498	0					
ANR	4889915	ExpressionStatement	out = NULL	119:1:3402:3412	4889498	24	True				
ANR	4889916	AssignmentExpression	out = NULL		4889498	0		=			
ANR	4889917	Identifier	out		4889498	0					
ANR	4889918	Identifier	NULL		4889498	1					
ANR	4889919	ReturnStatement	return 0 ;	120:1:3415:3423	4889498	25	True				
ANR	4889920	PrimaryExpression	0		4889498	0					
ANR	4889921	ReturnType	static int		4889498	1					
ANR	4889922	Identifier	__write		4889498	2					
ANR	4889923	ParameterList	"RIO * io , RIODesc * fd , const ut8 * buf , int count"		4889498	3					
ANR	4889924	Parameter	RIO * io	45:19:1580:1586	4889498	0	True				
ANR	4889925	ParameterType	RIO *		4889498	0					
ANR	4889926	Identifier	io		4889498	1					
ANR	4889927	Parameter	RIODesc * fd	45:28:1589:1599	4889498	1	True				
ANR	4889928	ParameterType	RIODesc *		4889498	0					
ANR	4889929	Identifier	fd		4889498	1					
ANR	4889930	Parameter	const ut8 * buf	45:41:1602:1615	4889498	2	True				
ANR	4889931	ParameterType	const ut8 *		4889498	0					
ANR	4889932	Identifier	buf		4889498	1					
ANR	4889933	Parameter	int count	45:57:1618:1626	4889498	3	True				
ANR	4889934	ParameterType	int		4889498	0					
ANR	4889935	Identifier	count		4889498	1					
ANR	4889936	CFGEntryNode	ENTRY		4889498		True				
ANR	4889937	CFGExitNode	EXIT		4889498		True				
ANR	4889938	CFGErrorNode	ERROR		4889498		True				
ANR	4889939	Symbol	rbs		4889498						
ANR	4889940	Symbol	io -> off		4889498						
ANR	4889941	Symbol	tsiz		4889498						
ANR	4889942	Symbol	rbs -> from		4889498						
ANR	4889943	Symbol	fd -> data		4889498						
ANR	4889944	Symbol	out		4889498						
ANR	4889945	Symbol	* io		4889498						
ANR	4889946	Symbol	r_buf_write_at		4889498						
ANR	4889947	Symbol	rih		4889498						
ANR	4889948	Symbol	R_PERM_W		4889498						
ANR	4889949	Symbol	rbs -> data		4889498						
ANR	4889950	Symbol	addl0		4889498						
ANR	4889951	Symbol	NULL		4889498						
ANR	4889952	Symbol	r_buf_nonempty_list		4889498						
ANR	4889953	Symbol	rbs -> size		4889498						
ANR	4889954	Symbol	io		4889498						
ANR	4889955	Symbol	rbs -> to		4889498						
ANR	4889956	Symbol	* fd		4889498						
ANR	4889957	Symbol	fd -> name		4889498						
ANR	4889958	Symbol	rih -> rbuf		4889498						
ANR	4889959	Symbol	count		4889498						
ANR	4889960	Symbol	iter		4889498						
ANR	4889961	Symbol	nonempty		4889498						
ANR	4889962	Symbol	addh0		4889498						
ANR	4889963	Symbol	* rbs		4889498						
ANR	4889964	Symbol	pathname		4889498						
ANR	4889965	Symbol	addh1		4889498						
ANR	4889966	Symbol	buf		4889498						
ANR	4889967	Symbol	fwblock		4889498						
ANR	4889968	Symbol	r_sandbox_fopen		4889498						
ANR	4889969	Symbol	fw04b		4889498						
ANR	4889970	Symbol	* rih		4889498						
ANR	4889971	Symbol	fd -> perm		4889498						
ANR	4889972	Symbol	fd		4889498						
ANR	4889973	Function	fwblock	125:0:3537:4739							
ANR	4889974	FunctionDef	"fwblock (FILE * fd , ut8 * b , ut32 start_addr , ut16 size)"		4889973	0					
ANR	4889975	CompoundStatement		125:65:3602:4739	4889973	0					
ANR	4889976	IdentifierDeclStatement	ut8 cks ;	126:1:3605:3612	4889973	0	True				
ANR	4889977	IdentifierDecl	cks		4889973	0					
ANR	4889978	IdentifierDeclType	ut8		4889973	0					
ANR	4889979	Identifier	cks		4889973	1					
ANR	4889980	IdentifierDeclStatement	char linebuf [ 80 ] ;	127:1:3615:3631	4889973	1	True				
ANR	4889981	IdentifierDecl	linebuf [ 80 ]		4889973	0					
ANR	4889982	IdentifierDeclType	char [ 80 ]		4889973	0					
ANR	4889983	Identifier	linebuf		4889973	1					
ANR	4889984	PrimaryExpression	80		4889973	2					
ANR	4889985	IdentifierDeclStatement	ut16 last_addr ;	128:1:3634:3648	4889973	2	True				
ANR	4889986	IdentifierDecl	last_addr		4889973	0					
ANR	4889987	IdentifierDeclType	ut16		4889973	0					
ANR	4889988	Identifier	last_addr		4889973	1					
ANR	4889989	IdentifierDeclStatement	int j ;	129:1:3651:3656	4889973	3	True				
ANR	4889990	IdentifierDecl	j		4889973	0					
ANR	4889991	IdentifierDeclType	int		4889973	0					
ANR	4889992	Identifier	j		4889973	1					
ANR	4889993	IdentifierDeclStatement	ut32 i ;	130:1:3659:3665	4889973	4	True				
ANR	4889994	IdentifierDecl	i		4889973	0					
ANR	4889995	IdentifierDeclType	ut32		4889973	0					
ANR	4889996	Identifier	i		4889973	1					
ANR	4889997	IfStatement	if ( size < 1 || ! fd || ! b )		4889973	5					
ANR	4889998	Condition	size < 1 || ! fd || ! b	132:5:3704:3724	4889973	0	True				
ANR	4889999	OrExpression	size < 1 || ! fd || ! b		4889973	0		||			
ANR	4890000	RelationalExpression	size < 1		4889973	0		<			
ANR	4890001	Identifier	size		4889973	0					
ANR	4890002	PrimaryExpression	1		4889973	1					
ANR	4890003	OrExpression	! fd || ! b		4889973	1		||			
ANR	4890004	UnaryOperationExpression	! fd		4889973	0					
ANR	4890005	UnaryOperator	!		4889973	0					
ANR	4890006	Identifier	fd		4889973	1					
ANR	4890007	UnaryOperationExpression	! b		4889973	1					
ANR	4890008	UnaryOperator	!		4889973	0					
ANR	4890009	Identifier	b		4889973	1					
ANR	4890010	CompoundStatement		8:28:124:124	4889973	1					
ANR	4890011	ReturnStatement	return - 1 ;	133:2:3731:3740	4889973	0	True				
ANR	4890012	UnaryOperationExpression	- 1		4889973	0					
ANR	4890013	UnaryOperator	-		4889973	0					
ANR	4890014	PrimaryExpression	1		4889973	1					
ANR	4890015	ForStatement	for ( i = 0 ; ( i + 0x10 ) < size ; i += 0x10 )		4889973	6					
ANR	4890016	ForInit	i = 0 ;	136:6:3752:3757	4889973	0	True				
ANR	4890017	AssignmentExpression	i = 0		4889973	0		=			
ANR	4890018	Identifier	i		4889973	0					
ANR	4890019	PrimaryExpression	0		4889973	1					
ANR	4890020	Condition	( i + 0x10 ) < size	136:13:3759:3775	4889973	1	True				
ANR	4890021	RelationalExpression	( i + 0x10 ) < size		4889973	0		<			
ANR	4890022	AdditiveExpression	i + 0x10		4889973	0		+			
ANR	4890023	Identifier	i		4889973	0					
ANR	4890024	PrimaryExpression	0x10		4889973	1					
ANR	4890025	Identifier	size		4889973	1					
ANR	4890026	AssignmentExpression	i += 0x10	136:32:3778:3786	4889973	2	True	+=			
ANR	4890027	Identifier	i		4889973	0					
ANR	4890028	PrimaryExpression	0x10		4889973	1					
ANR	4890029	CompoundStatement		12:43:186:186	4889973	3					
ANR	4890030	ExpressionStatement	cks = 0x10	137:2:3793:3803	4889973	0	True				
ANR	4890031	AssignmentExpression	cks = 0x10		4889973	0		=			
ANR	4890032	Identifier	cks		4889973	0					
ANR	4890033	PrimaryExpression	0x10		4889973	1					
ANR	4890034	ExpressionStatement	cks += ( i + start_addr ) >> 8	138:2:3807:3835	4889973	1	True				
ANR	4890035	AssignmentExpression	cks += ( i + start_addr ) >> 8		4889973	0		+=			
ANR	4890036	Identifier	cks		4889973	0					
ANR	4890037	ShiftExpression	( i + start_addr ) >> 8		4889973	1		>>			
ANR	4890038	AdditiveExpression	i + start_addr		4889973	0		+			
ANR	4890039	Identifier	i		4889973	0					
ANR	4890040	Identifier	start_addr		4889973	1					
ANR	4890041	PrimaryExpression	8		4889973	1					
ANR	4890042	ExpressionStatement	cks += ( i + start_addr )	139:2:3839:3862	4889973	2	True				
ANR	4890043	AssignmentExpression	cks += ( i + start_addr )		4889973	0		+=			
ANR	4890044	Identifier	cks		4889973	0					
ANR	4890045	AdditiveExpression	i + start_addr		4889973	1		+			
ANR	4890046	Identifier	i		4889973	0					
ANR	4890047	Identifier	start_addr		4889973	1					
ANR	4890048	ForStatement	for ( j = 0 ; j < 0x10 ; j ++ )		4889973	3					
ANR	4890049	ForInit	j = 0 ;	140:7:3871:3876	4889973	0	True				
ANR	4890050	AssignmentExpression	j = 0		4889973	0		=			
ANR	4890051	Identifier	j		4889973	0					
ANR	4890052	PrimaryExpression	0		4889973	1					
ANR	4890053	Condition	j < 0x10	140:14:3878:3885	4889973	1	True				
ANR	4890054	RelationalExpression	j < 0x10		4889973	0		<			
ANR	4890055	Identifier	j		4889973	0					
ANR	4890056	PrimaryExpression	0x10		4889973	1					
ANR	4890057	PostIncDecOperationExpression	j ++	140:24:3888:3890	4889973	2	True				
ANR	4890058	Identifier	j		4889973	0					
ANR	4890059	IncDec	++		4889973	1					
ANR	4890060	CompoundStatement		16:29:290:290	4889973	3					
ANR	4890061	ExpressionStatement	cks += b [ j ]	141:3:3898:3909	4889973	0	True				
ANR	4890062	AssignmentExpression	cks += b [ j ]		4889973	0		+=			
ANR	4890063	Identifier	cks		4889973	0					
ANR	4890064	ArrayIndexing	b [ j ]		4889973	1					
ANR	4890065	Identifier	b		4889973	0					
ANR	4890066	Identifier	j		4889973	1					
ANR	4890067	ExpressionStatement	cks = 0 - cks	143:2:3917:3930	4889973	4	True				
ANR	4890068	AssignmentExpression	cks = 0 - cks		4889973	0		=			
ANR	4890069	Identifier	cks		4889973	0					
ANR	4890070	AdditiveExpression	0 - cks		4889973	1		-			
ANR	4890071	PrimaryExpression	0		4889973	0					
ANR	4890072	Identifier	cks		4889973	1					
ANR	4890073	Statement	if	144:2:3934:3935	4889973	5	True				
ANR	4890074	Statement	(	144:5:3937:3937	4889973	6	True				
ANR	4890075	Statement	fprintf	144:6:3938:3944	4889973	7	True				
ANR	4890076	Statement	(	144:14:3946:3946	4889973	8	True				
ANR	4890077	Statement	fd	144:15:3947:3948	4889973	9	True				
ANR	4890078	Statement	","	144:17:3949:3949	4889973	10	True				
ANR	4890079	Statement	""":10%04x00%02x%02x%02x%02x%02x%02x%02x"""	144:19:3951:3989	4889973	11	True				
ANR	4890080	Statement	"""%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x\\n"""	145:5:3996:4039	4889973	12	True				
ANR	4890081	Statement	","	145:49:4040:4040	4889973	13	True				
ANR	4890082	Statement	(	146:7:4049:4049	4889973	14	True				
ANR	4890083	Statement	i	146:8:4050:4050	4889973	15	True				
ANR	4890084	Statement	+	146:10:4052:4052	4889973	16	True				
ANR	4890085	Statement	start_addr	146:12:4054:4063	4889973	17	True				
ANR	4890086	Statement	)	146:22:4064:4064	4889973	18	True				
ANR	4890087	Statement	&	146:24:4066:4066	4889973	19	True				
ANR	4890088	Statement	0xffff	146:26:4068:4073	4889973	20	True				
ANR	4890089	Statement	","	146:32:4074:4074	4889973	21	True				
ANR	4890090	Statement	b	146:34:4076:4076	4889973	22	True				
ANR	4890091	Statement	[	146:35:4077:4077	4889973	23	True				
ANR	4890092	Statement	0	146:36:4078:4078	4889973	24	True				
ANR	4890093	Statement	]	146:37:4079:4079	4889973	25	True				
ANR	4890094	Statement	","	146:38:4080:4080	4889973	26	True				
ANR	4890095	Statement	b	146:40:4082:4082	4889973	27	True				
ANR	4890096	Statement	[	146:41:4083:4083	4889973	28	True				
ANR	4890097	Statement	1	146:42:4084:4084	4889973	29	True				
ANR	4890098	Statement	]	146:43:4085:4085	4889973	30	True				
ANR	4890099	Statement	","	146:44:4086:4086	4889973	31	True				
ANR	4890100	Statement	b	146:46:4088:4088	4889973	32	True				
ANR	4890101	Statement	[	146:47:4089:4089	4889973	33	True				
ANR	4890102	Statement	2	146:48:4090:4090	4889973	34	True				
ANR	4890103	Statement	]	146:49:4091:4091	4889973	35	True				
ANR	4890104	Statement	","	146:50:4092:4092	4889973	36	True				
ANR	4890105	Statement	b	146:52:4094:4094	4889973	37	True				
ANR	4890106	Statement	[	146:53:4095:4095	4889973	38	True				
ANR	4890107	Statement	3	146:54:4096:4096	4889973	39	True				
ANR	4890108	Statement	]	146:55:4097:4097	4889973	40	True				
ANR	4890109	Statement	","	146:56:4098:4098	4889973	41	True				
ANR	4890110	Statement	b	146:58:4100:4100	4889973	42	True				
ANR	4890111	Statement	[	146:59:4101:4101	4889973	43	True				
ANR	4890112	Statement	4	146:60:4102:4102	4889973	44	True				
ANR	4890113	Statement	]	146:61:4103:4103	4889973	45	True				
ANR	4890114	Statement	","	146:62:4104:4104	4889973	46	True				
ANR	4890115	Statement	b	146:64:4106:4106	4889973	47	True				
ANR	4890116	Statement	[	146:65:4107:4107	4889973	48	True				
ANR	4890117	Statement	5	146:66:4108:4108	4889973	49	True				
ANR	4890118	Statement	]	146:67:4109:4109	4889973	50	True				
ANR	4890119	Statement	","	146:68:4110:4110	4889973	51	True				
ANR	4890120	Statement	b	146:70:4112:4112	4889973	52	True				
ANR	4890121	Statement	[	146:71:4113:4113	4889973	53	True				
ANR	4890122	Statement	6	146:72:4114:4114	4889973	54	True				
ANR	4890123	Statement	]	146:73:4115:4115	4889973	55	True				
ANR	4890124	Statement	","	146:74:4116:4116	4889973	56	True				
ANR	4890125	Statement	b	147:7:4125:4125	4889973	57	True				
ANR	4890126	Statement	[	147:8:4126:4126	4889973	58	True				
ANR	4890127	Statement	7	147:9:4127:4127	4889973	59	True				
ANR	4890128	Statement	]	147:10:4128:4128	4889973	60	True				
ANR	4890129	Statement	","	147:11:4129:4129	4889973	61	True				
ANR	4890130	Statement	b	147:13:4131:4131	4889973	62	True				
ANR	4890131	Statement	[	147:14:4132:4132	4889973	63	True				
ANR	4890132	Statement	8	147:15:4133:4133	4889973	64	True				
ANR	4890133	Statement	]	147:16:4134:4134	4889973	65	True				
ANR	4890134	Statement	","	147:17:4135:4135	4889973	66	True				
ANR	4890135	Statement	b	147:19:4137:4137	4889973	67	True				
ANR	4890136	Statement	[	147:20:4138:4138	4889973	68	True				
ANR	4890137	Statement	9	147:21:4139:4139	4889973	69	True				
ANR	4890138	Statement	]	147:22:4140:4140	4889973	70	True				
ANR	4890139	Statement	","	147:23:4141:4141	4889973	71	True				
ANR	4890140	Statement	b	147:25:4143:4143	4889973	72	True				
ANR	4890141	Statement	[	147:26:4144:4144	4889973	73	True				
ANR	4890142	Statement	10	147:27:4145:4146	4889973	74	True				
ANR	4890143	Statement	]	147:29:4147:4147	4889973	75	True				
ANR	4890144	Statement	","	147:30:4148:4148	4889973	76	True				
ANR	4890145	Statement	b	147:32:4150:4150	4889973	77	True				
ANR	4890146	Statement	[	147:33:4151:4151	4889973	78	True				
ANR	4890147	Statement	11	147:34:4152:4153	4889973	79	True				
ANR	4890148	Statement	]	147:36:4154:4154	4889973	80	True				
ANR	4890149	Statement	","	147:37:4155:4155	4889973	81	True				
ANR	4890150	Statement	b	147:39:4157:4157	4889973	82	True				
ANR	4890151	Statement	[	147:40:4158:4158	4889973	83	True				
ANR	4890152	Statement	12	147:41:4159:4160	4889973	84	True				
ANR	4890153	Statement	]	147:43:4161:4161	4889973	85	True				
ANR	4890154	Statement	","	147:44:4162:4162	4889973	86	True				
ANR	4890155	Statement	b	147:46:4164:4164	4889973	87	True				
ANR	4890156	Statement	[	147:47:4165:4165	4889973	88	True				
ANR	4890157	Statement	13	147:48:4166:4167	4889973	89	True				
ANR	4890158	Statement	]	147:50:4168:4168	4889973	90	True				
ANR	4890159	Statement	","	147:51:4169:4169	4889973	91	True				
ANR	4890160	Statement	b	148:7:4178:4178	4889973	92	True				
ANR	4890161	Statement	[	148:8:4179:4179	4889973	93	True				
ANR	4890162	Statement	14	148:9:4180:4181	4889973	94	True				
ANR	4890163	Statement	]	148:11:4182:4182	4889973	95	True				
ANR	4890164	Statement	","	148:12:4183:4183	4889973	96	True				
ANR	4890165	Statement	b	148:14:4185:4185	4889973	97	True				
ANR	4890166	Statement	[	148:15:4186:4186	4889973	98	True				
ANR	4890167	Statement	15	148:16:4187:4188	4889973	99	True				
ANR	4890168	Statement	]	148:18:4189:4189	4889973	100	True				
ANR	4890169	Statement	","	148:19:4190:4190	4889973	101	True				
ANR	4890170	Statement	cks	148:21:4192:4194	4889973	102	True				
ANR	4890171	Statement	)	148:24:4195:4195	4889973	103	True				
ANR	4890172	Statement	<	148:26:4197:4197	4889973	104	True				
ANR	4890173	Statement	0	148:28:4199:4199	4889973	105	True				
ANR	4890174	Statement	)	148:29:4200:4200	4889973	106	True				
ANR	4890175	CompoundStatement		24:31:599:599	4889973	107					
ANR	4890176	ReturnStatement	return - 1 ;	149:3:4207:4216	4889973	0	True				
ANR	4890177	UnaryOperationExpression	- 1		4889973	0					
ANR	4890178	UnaryOperator	-		4889973	0					
ANR	4890179	PrimaryExpression	1		4889973	1					
ANR	4890180	ExpressionStatement	start_addr += 0x10	151:2:4224:4242	4889973	108	True				
ANR	4890181	AssignmentExpression	start_addr += 0x10		4889973	0		+=			
ANR	4890182	Identifier	start_addr		4889973	0					
ANR	4890183	PrimaryExpression	0x10		4889973	1					
ANR	4890184	ExpressionStatement	b += 0x10	152:2:4246:4255	4889973	109	True				
ANR	4890185	AssignmentExpression	b += 0x10		4889973	0		+=			
ANR	4890186	Identifier	b		4889973	0					
ANR	4890187	PrimaryExpression	0x10		4889973	1					
ANR	4890188	IfStatement	if ( ( start_addr & 0xffff ) < 0x10 )		4889973	110					
ANR	4890189	Condition	( start_addr & 0xffff ) < 0x10	153:6:4263:4290	4889973	0	True				
ANR	4890190	RelationalExpression	( start_addr & 0xffff ) < 0x10		4889973	0		<			
ANR	4890191	BitAndExpression	start_addr & 0xffff		4889973	0		&			
ANR	4890192	Identifier	start_addr		4889973	0					
ANR	4890193	PrimaryExpression	0xffff		4889973	1					
ANR	4890194	PrimaryExpression	0x10		4889973	1					
ANR	4890195	CompoundStatement		29:36:690:690	4889973	1					
ANR	4890196	IfStatement	"if ( fw04b ( fd , start_addr >> 16 ) < 0 )"		4889973	0					
ANR	4890197	Condition	"fw04b ( fd , start_addr >> 16 ) < 0"	155:7:4347:4378	4889973	0	True				
ANR	4890198	RelationalExpression	"fw04b ( fd , start_addr >> 16 ) < 0"		4889973	0		<			
ANR	4890199	CallExpression	"fw04b ( fd , start_addr >> 16 )"		4889973	0					
ANR	4890200	Callee	fw04b		4889973	0					
ANR	4890201	Identifier	fw04b		4889973	0					
ANR	4890202	ArgumentList	fd		4889973	1					
ANR	4890203	Argument	fd		4889973	0					
ANR	4890204	Identifier	fd		4889973	0					
ANR	4890205	Argument	start_addr >> 16		4889973	1					
ANR	4890206	ShiftExpression	start_addr >> 16		4889973	0		>>			
ANR	4890207	Identifier	start_addr		4889973	0					
ANR	4890208	PrimaryExpression	16		4889973	1					
ANR	4890209	PrimaryExpression	0		4889973	1					
ANR	4890210	CompoundStatement		31:41:778:778	4889973	1					
ANR	4890211	ReturnStatement	return - 1 ;	156:4:4387:4396	4889973	0	True				
ANR	4890212	UnaryOperationExpression	- 1		4889973	0					
ANR	4890213	UnaryOperator	-		4889973	0					
ANR	4890214	PrimaryExpression	1		4889973	1					
ANR	4890215	IfStatement	if ( i == size )		4889973	7					
ANR	4890216	Condition	i == size	160:5:4415:4423	4889973	0	True				
ANR	4890217	EqualityExpression	i == size		4889973	0		==			
ANR	4890218	Identifier	i		4889973	0					
ANR	4890219	Identifier	size		4889973	1					
ANR	4890220	CompoundStatement		36:16:823:823	4889973	1					
ANR	4890221	ReturnStatement	return 0 ;	161:2:4430:4438	4889973	0	True				
ANR	4890222	PrimaryExpression	0		4889973	0					
ANR	4890223	ExpressionStatement	last_addr = i + start_addr	164:1:4460:4484	4889973	8	True				
ANR	4890224	AssignmentExpression	last_addr = i + start_addr		4889973	0		=			
ANR	4890225	Identifier	last_addr		4889973	0					
ANR	4890226	AdditiveExpression	i + start_addr		4889973	1		+			
ANR	4890227	Identifier	i		4889973	0					
ANR	4890228	Identifier	start_addr		4889973	1					
ANR	4890229	ExpressionStatement	cks = - last_addr	165:1:4487:4503	4889973	9	True				
ANR	4890230	AssignmentExpression	cks = - last_addr		4889973	0		=			
ANR	4890231	Identifier	cks		4889973	0					
ANR	4890232	UnaryOperationExpression	- last_addr		4889973	1					
ANR	4890233	UnaryOperator	-		4889973	0					
ANR	4890234	Identifier	last_addr		4889973	1					
ANR	4890235	ExpressionStatement	cks -= last_addr >> 8	166:1:4506:4525	4889973	10	True				
ANR	4890236	AssignmentExpression	cks -= last_addr >> 8		4889973	0		-=			
ANR	4890237	Identifier	cks		4889973	0					
ANR	4890238	ShiftExpression	last_addr >> 8		4889973	1		>>			
ANR	4890239	Identifier	last_addr		4889973	0					
ANR	4890240	PrimaryExpression	8		4889973	1					
ANR	4890241	ForStatement	"for ( j = 0 ; i < size ; i ++ , j ++ )"		4889973	11					
ANR	4890242	ForInit	j = 0 ;	167:6:4533:4536	4889973	0	True				
ANR	4890243	AssignmentExpression	j = 0		4889973	0		=			
ANR	4890244	Identifier	j		4889973	0					
ANR	4890245	PrimaryExpression	0		4889973	1					
ANR	4890246	Condition	i < size	167:10:4537:4542	4889973	1	True				
ANR	4890247	RelationalExpression	i < size		4889973	0		<			
ANR	4890248	Identifier	i		4889973	0					
ANR	4890249	Identifier	size		4889973	1					
ANR	4890250	Expression	"i ++ , j ++"	167:18:4545:4552	4889973	2	True				
ANR	4890251	PostIncDecOperationExpression	i ++		4889973	0					
ANR	4890252	Identifier	i		4889973	0					
ANR	4890253	IncDec	++		4889973	1					
ANR	4890254	PostIncDecOperationExpression	j ++		4889973	1					
ANR	4890255	Identifier	j		4889973	0					
ANR	4890256	IncDec	++		4889973	1					
ANR	4890257	CompoundStatement		43:28:952:952	4889973	3					
ANR	4890258	ExpressionStatement	cks -= b [ j ]	168:2:4559:4570	4889973	0	True				
ANR	4890259	AssignmentExpression	cks -= b [ j ]		4889973	0		-=			
ANR	4890260	Identifier	cks		4889973	0					
ANR	4890261	ArrayIndexing	b [ j ]		4889973	1					
ANR	4890262	Identifier	b		4889973	0					
ANR	4890263	Identifier	j		4889973	1					
ANR	4890264	ExpressionStatement	"sprintf ( linebuf + ( 2 * j ) , ""%02X"" , b [ j ] )"	169:2:4574:4610	4889973	1	True				
ANR	4890265	CallExpression	"sprintf ( linebuf + ( 2 * j ) , ""%02X"" , b [ j ] )"		4889973	0					
ANR	4890266	Callee	sprintf		4889973	0					
ANR	4890267	Identifier	sprintf		4889973	0					
ANR	4890268	ArgumentList	linebuf + ( 2 * j )		4889973	1					
ANR	4890269	Argument	linebuf + ( 2 * j )		4889973	0					
ANR	4890270	AdditiveExpression	linebuf + ( 2 * j )		4889973	0		+			
ANR	4890271	Identifier	linebuf		4889973	0					
ANR	4890272	MultiplicativeExpression	2 * j		4889973	1		*			
ANR	4890273	PrimaryExpression	2		4889973	0					
ANR	4890274	Identifier	j		4889973	1					
ANR	4890275	Argument	"""%02X"""		4889973	1					
ANR	4890276	PrimaryExpression	"""%02X"""		4889973	0					
ANR	4890277	Argument	b [ j ]		4889973	2					
ANR	4890278	ArrayIndexing	b [ j ]		4889973	0					
ANR	4890279	Identifier	b		4889973	0					
ANR	4890280	Identifier	j		4889973	1					
ANR	4890281	ExpressionStatement	cks -= j	171:1:4616:4624	4889973	12	True				
ANR	4890282	AssignmentExpression	cks -= j		4889973	0		-=			
ANR	4890283	Identifier	cks		4889973	0					
ANR	4890284	Identifier	j		4889973	1					
ANR	4890285	IfStatement	"if ( fprintf ( fd , "":%02X%04X00%.*s%02X\\n"" , j , last_addr , 2 * j , linebuf , cks ) < 0 )"		4889973	13					
ANR	4890286	Condition	"fprintf ( fd , "":%02X%04X00%.*s%02X\\n"" , j , last_addr , 2 * j , linebuf , cks ) < 0"	173:5:4632:4707	4889973	0	True				
ANR	4890287	RelationalExpression	"fprintf ( fd , "":%02X%04X00%.*s%02X\\n"" , j , last_addr , 2 * j , linebuf , cks ) < 0"		4889973	0		<			
ANR	4890288	CallExpression	"fprintf ( fd , "":%02X%04X00%.*s%02X\\n"" , j , last_addr , 2 * j , linebuf , cks )"		4889973	0					
ANR	4890289	Callee	fprintf		4889973	0					
ANR	4890290	Identifier	fprintf		4889973	0					
ANR	4890291	ArgumentList	fd		4889973	1					
ANR	4890292	Argument	fd		4889973	0					
ANR	4890293	Identifier	fd		4889973	0					
ANR	4890294	Argument	""":%02X%04X00%.*s%02X\\n"""		4889973	1					
ANR	4890295	PrimaryExpression	""":%02X%04X00%.*s%02X\\n"""		4889973	0					
ANR	4890296	Argument	j		4889973	2					
ANR	4890297	Identifier	j		4889973	0					
ANR	4890298	Argument	last_addr		4889973	3					
ANR	4890299	Identifier	last_addr		4889973	0					
ANR	4890300	Argument	2 * j		4889973	4					
ANR	4890301	MultiplicativeExpression	2 * j		4889973	0		*			
ANR	4890302	PrimaryExpression	2		4889973	0					
ANR	4890303	Identifier	j		4889973	1					
ANR	4890304	Argument	linebuf		4889973	5					
ANR	4890305	Identifier	linebuf		4889973	0					
ANR	4890306	Argument	cks		4889973	6					
ANR	4890307	Identifier	cks		4889973	0					
ANR	4890308	PrimaryExpression	0		4889973	1					
ANR	4890309	CompoundStatement		49:83:1107:1107	4889973	1					
ANR	4890310	ReturnStatement	return - 1 ;	174:2:4714:4723	4889973	0	True				
ANR	4890311	UnaryOperationExpression	- 1		4889973	0					
ANR	4890312	UnaryOperator	-		4889973	0					
ANR	4890313	PrimaryExpression	1		4889973	1					
ANR	4890314	ReturnStatement	return 0 ;	176:1:4729:4737	4889973	14	True				
ANR	4890315	PrimaryExpression	0		4889973	0					
ANR	4890316	ReturnType	static int		4889973	1					
ANR	4890317	Identifier	fwblock		4889973	2					
ANR	4890318	ParameterList	"FILE * fd , ut8 * b , ut32 start_addr , ut16 size"		4889973	3					
ANR	4890319	Parameter	FILE * fd	125:19:3556:3563	4889973	0	True				
ANR	4890320	ParameterType	FILE *		4889973	0					
ANR	4890321	Identifier	fd		4889973	1					
ANR	4890322	Parameter	ut8 * b	125:29:3566:3571	4889973	1	True				
ANR	4890323	ParameterType	ut8 *		4889973	0					
ANR	4890324	Identifier	b		4889973	1					
ANR	4890325	Parameter	ut32 start_addr	125:37:3574:3588	4889973	2	True				
ANR	4890326	ParameterType	ut32		4889973	0					
ANR	4890327	Identifier	start_addr		4889973	1					
ANR	4890328	Parameter	ut16 size	125:54:3591:3599	4889973	3	True				
ANR	4890329	ParameterType	ut16		4889973	0					
ANR	4890330	Identifier	size		4889973	1					
ANR	4890331	CFGEntryNode	ENTRY		4889973		True				
ANR	4890332	CFGExitNode	EXIT		4889973		True				
ANR	4890333	Symbol	b		4889973						
ANR	4890334	Symbol	i		4889973						
ANR	4890335	Symbol	cks		4889973						
ANR	4890336	Symbol	j		4889973						
ANR	4890337	Symbol	* b		4889973						
ANR	4890338	Symbol	last_addr		4889973						
ANR	4890339	Symbol	fprintf		4889973						
ANR	4890340	Symbol	size		4889973						
ANR	4890341	Symbol	linebuf		4889973						
ANR	4890342	Symbol	* j		4889973						
ANR	4890343	Symbol	fw04b		4889973						
ANR	4890344	Symbol	start_addr		4889973						
ANR	4890345	Symbol	fd		4889973						
ANR	4890346	Function	fw04b	180:0:4804:4955							
ANR	4890347	FunctionDef	"fw04b (FILE * fd , ut16 eaddr)"		4890346	0					
ANR	4890348	CompoundStatement		180:39:4843:4955	4890346	0					
ANR	4890349	IdentifierDeclStatement	ut8 cks = 0 - ( 6 + ( eaddr >> 8 ) + ( eaddr & 0xff ) ) ;	181:1:4846:4895	4890346	0	True				
ANR	4890350	IdentifierDecl	cks = 0 - ( 6 + ( eaddr >> 8 ) + ( eaddr & 0xff ) )		4890346	0					
ANR	4890351	IdentifierDeclType	ut8		4890346	0					
ANR	4890352	Identifier	cks		4890346	1					
ANR	4890353	AssignmentExpression	cks = 0 - ( 6 + ( eaddr >> 8 ) + ( eaddr & 0xff ) )		4890346	2		=			
ANR	4890354	Identifier	cks		4890346	0					
ANR	4890355	AdditiveExpression	0 - ( 6 + ( eaddr >> 8 ) + ( eaddr & 0xff ) )		4890346	1		-			
ANR	4890356	PrimaryExpression	0		4890346	0					
ANR	4890357	AdditiveExpression	6 + ( eaddr >> 8 ) + ( eaddr & 0xff )		4890346	1		+			
ANR	4890358	PrimaryExpression	6		4890346	0					
ANR	4890359	AdditiveExpression	( eaddr >> 8 ) + ( eaddr & 0xff )		4890346	1		+			
ANR	4890360	ShiftExpression	eaddr >> 8		4890346	0		>>			
ANR	4890361	Identifier	eaddr		4890346	0					
ANR	4890362	PrimaryExpression	8		4890346	1					
ANR	4890363	BitAndExpression	eaddr & 0xff		4890346	1		&			
ANR	4890364	Identifier	eaddr		4890346	0					
ANR	4890365	PrimaryExpression	0xff		4890346	1					
ANR	4890366	ReturnStatement	"return fprintf ( fd , "":02000004%04X%02X\\n"" , eaddr , cks ) ;"	182:1:4898:4952	4890346	1	True				
ANR	4890367	CallExpression	"fprintf ( fd , "":02000004%04X%02X\\n"" , eaddr , cks )"		4890346	0					
ANR	4890368	Callee	fprintf		4890346	0					
ANR	4890369	Identifier	fprintf		4890346	0					
ANR	4890370	ArgumentList	fd		4890346	1					
ANR	4890371	Argument	fd		4890346	0					
ANR	4890372	Identifier	fd		4890346	0					
ANR	4890373	Argument	""":02000004%04X%02X\\n"""		4890346	1					
ANR	4890374	PrimaryExpression	""":02000004%04X%02X\\n"""		4890346	0					
ANR	4890375	Argument	eaddr		4890346	2					
ANR	4890376	Identifier	eaddr		4890346	0					
ANR	4890377	Argument	cks		4890346	3					
ANR	4890378	Identifier	cks		4890346	0					
ANR	4890379	ReturnType	static int		4890346	1					
ANR	4890380	Identifier	fw04b		4890346	2					
ANR	4890381	ParameterList	"FILE * fd , ut16 eaddr"		4890346	3					
ANR	4890382	Parameter	FILE * fd	180:17:4821:4828	4890346	0	True				
ANR	4890383	ParameterType	FILE *		4890346	0					
ANR	4890384	Identifier	fd		4890346	1					
ANR	4890385	Parameter	ut16 eaddr	180:27:4831:4840	4890346	1	True				
ANR	4890386	ParameterType	ut16		4890346	0					
ANR	4890387	Identifier	eaddr		4890346	1					
ANR	4890388	CFGEntryNode	ENTRY		4890346		True				
ANR	4890389	CFGExitNode	EXIT		4890346		True				
ANR	4890390	Symbol	eaddr		4890346						
ANR	4890391	Symbol	cks		4890346						
ANR	4890392	Symbol	fprintf		4890346						
ANR	4890393	Symbol	fd		4890346						
ANR	4890394	Function	__read	186:0:4958:5190							
ANR	4890395	FunctionDef	"__read (RIO * io , RIODesc * fd , ut8 * buf , int count)"		4890394	0					
ANR	4890396	CompoundStatement		186:61:5019:5190	4890394	0					
ANR	4890397	IfStatement	if ( ! fd || ! fd -> data || ( count <= 0 ) )		4890394	0					
ANR	4890398	Condition	! fd || ! fd -> data || ( count <= 0 )	187:5:5026:5057	4890394	0	True				
ANR	4890399	OrExpression	! fd || ! fd -> data || ( count <= 0 )		4890394	0		||			
ANR	4890400	UnaryOperationExpression	! fd		4890394	0					
ANR	4890401	UnaryOperator	!		4890394	0					
ANR	4890402	Identifier	fd		4890394	1					
ANR	4890403	OrExpression	! fd -> data || ( count <= 0 )		4890394	1		||			
ANR	4890404	UnaryOperationExpression	! fd -> data		4890394	0					
ANR	4890405	UnaryOperator	!		4890394	0					
ANR	4890406	PtrMemberAccess	fd -> data		4890394	1					
ANR	4890407	Identifier	fd		4890394	0					
ANR	4890408	Identifier	data		4890394	1					
ANR	4890409	RelationalExpression	count <= 0		4890394	1		<=			
ANR	4890410	Identifier	count		4890394	0					
ANR	4890411	PrimaryExpression	0		4890394	1					
ANR	4890412	CompoundStatement		2:39:40:40	4890394	1					
ANR	4890413	ReturnStatement	return - 1 ;	188:2:5064:5073	4890394	0	True				
ANR	4890414	UnaryOperationExpression	- 1		4890394	0					
ANR	4890415	UnaryOperator	-		4890394	0					
ANR	4890416	PrimaryExpression	1		4890394	1					
ANR	4890417	IdentifierDeclStatement	Rihex * rih = fd -> data ;	190:1:5079:5100	4890394	1	True				
ANR	4890418	IdentifierDecl	* rih = fd -> data		4890394	0					
ANR	4890419	IdentifierDeclType	Rihex *		4890394	0					
ANR	4890420	Identifier	rih		4890394	1					
ANR	4890421	AssignmentExpression	* rih = fd -> data		4890394	2		=			
ANR	4890422	Identifier	rih		4890394	0					
ANR	4890423	PtrMemberAccess	fd -> data		4890394	1					
ANR	4890424	Identifier	fd		4890394	0					
ANR	4890425	Identifier	data		4890394	1					
ANR	4890426	ExpressionStatement	"memset ( buf , io -> Oxff , count )"	191:1:5103:5132	4890394	2	True				
ANR	4890427	CallExpression	"memset ( buf , io -> Oxff , count )"		4890394	0					
ANR	4890428	Callee	memset		4890394	0					
ANR	4890429	Identifier	memset		4890394	0					
ANR	4890430	ArgumentList	buf		4890394	1					
ANR	4890431	Argument	buf		4890394	0					
ANR	4890432	Identifier	buf		4890394	0					
ANR	4890433	Argument	io -> Oxff		4890394	1					
ANR	4890434	PtrMemberAccess	io -> Oxff		4890394	0					
ANR	4890435	Identifier	io		4890394	0					
ANR	4890436	Identifier	Oxff		4890394	1					
ANR	4890437	Argument	count		4890394	2					
ANR	4890438	Identifier	count		4890394	0					
ANR	4890439	ReturnStatement	"return r_buf_read_at ( rih -> rbuf , io -> off , buf , count ) ;"	192:1:5135:5188	4890394	3	True				
ANR	4890440	CallExpression	"r_buf_read_at ( rih -> rbuf , io -> off , buf , count )"		4890394	0					
ANR	4890441	Callee	r_buf_read_at		4890394	0					
ANR	4890442	Identifier	r_buf_read_at		4890394	0					
ANR	4890443	ArgumentList	rih -> rbuf		4890394	1					
ANR	4890444	Argument	rih -> rbuf		4890394	0					
ANR	4890445	PtrMemberAccess	rih -> rbuf		4890394	0					
ANR	4890446	Identifier	rih		4890394	0					
ANR	4890447	Identifier	rbuf		4890394	1					
ANR	4890448	Argument	io -> off		4890394	1					
ANR	4890449	PtrMemberAccess	io -> off		4890394	0					
ANR	4890450	Identifier	io		4890394	0					
ANR	4890451	Identifier	off		4890394	1					
ANR	4890452	Argument	buf		4890394	2					
ANR	4890453	Identifier	buf		4890394	0					
ANR	4890454	Argument	count		4890394	3					
ANR	4890455	Identifier	count		4890394	0					
ANR	4890456	ReturnType	static int		4890394	1					
ANR	4890457	Identifier	__read		4890394	2					
ANR	4890458	ParameterList	"RIO * io , RIODesc * fd , ut8 * buf , int count"		4890394	3					
ANR	4890459	Parameter	RIO * io	186:18:4976:4982	4890394	0	True				
ANR	4890460	ParameterType	RIO *		4890394	0					
ANR	4890461	Identifier	io		4890394	1					
ANR	4890462	Parameter	RIODesc * fd	186:27:4985:4995	4890394	1	True				
ANR	4890463	ParameterType	RIODesc *		4890394	0					
ANR	4890464	Identifier	fd		4890394	1					
ANR	4890465	Parameter	ut8 * buf	186:40:4998:5005	4890394	2	True				
ANR	4890466	ParameterType	ut8 *		4890394	0					
ANR	4890467	Identifier	buf		4890394	1					
ANR	4890468	Parameter	int count	186:50:5008:5016	4890394	3	True				
ANR	4890469	ParameterType	int		4890394	0					
ANR	4890470	Identifier	count		4890394	1					
ANR	4890471	CFGEntryNode	ENTRY		4890394		True				
ANR	4890472	CFGExitNode	EXIT		4890394		True				
ANR	4890473	Symbol	io -> Oxff		4890394						
ANR	4890474	Symbol	io -> off		4890394						
ANR	4890475	Symbol	io		4890394						
ANR	4890476	Symbol	* fd		4890394						
ANR	4890477	Symbol	rih -> rbuf		4890394						
ANR	4890478	Symbol	count		4890394						
ANR	4890479	Symbol	fd -> data		4890394						
ANR	4890480	Symbol	* io		4890394						
ANR	4890481	Symbol	rih		4890394						
ANR	4890482	Symbol	buf		4890394						
ANR	4890483	Symbol	r_buf_read_at		4890394						
ANR	4890484	Symbol	* rih		4890394						
ANR	4890485	Symbol	fd		4890394						
ANR	4890486	Function	__close	195:0:5193:5359							
ANR	4890487	FunctionDef	__close (RIODesc * fd)		4890486	0					
ANR	4890488	CompoundStatement		195:32:5225:5359	4890486	0					
ANR	4890489	IfStatement	if ( ! fd || ! fd -> data )		4890486	0					
ANR	4890490	Condition	! fd || ! fd -> data	196:5:5232:5247	4890486	0	True				
ANR	4890491	OrExpression	! fd || ! fd -> data		4890486	0		||			
ANR	4890492	UnaryOperationExpression	! fd		4890486	0					
ANR	4890493	UnaryOperator	!		4890486	0					
ANR	4890494	Identifier	fd		4890486	1					
ANR	4890495	UnaryOperationExpression	! fd -> data		4890486	1					
ANR	4890496	UnaryOperator	!		4890486	0					
ANR	4890497	PtrMemberAccess	fd -> data		4890486	1					
ANR	4890498	Identifier	fd		4890486	0					
ANR	4890499	Identifier	data		4890486	1					
ANR	4890500	CompoundStatement		2:23:24:24	4890486	1					
ANR	4890501	ReturnStatement	return - 1 ;	197:2:5254:5263	4890486	0	True				
ANR	4890502	UnaryOperationExpression	- 1		4890486	0					
ANR	4890503	UnaryOperator	-		4890486	0					
ANR	4890504	PrimaryExpression	1		4890486	1					
ANR	4890505	IdentifierDeclStatement	Rihex * rih = fd -> data ;	199:1:5269:5290	4890486	1	True				
ANR	4890506	IdentifierDecl	* rih = fd -> data		4890486	0					
ANR	4890507	IdentifierDeclType	Rihex *		4890486	0					
ANR	4890508	Identifier	rih		4890486	1					
ANR	4890509	AssignmentExpression	* rih = fd -> data		4890486	2		=			
ANR	4890510	Identifier	rih		4890486	0					
ANR	4890511	PtrMemberAccess	fd -> data		4890486	1					
ANR	4890512	Identifier	fd		4890486	0					
ANR	4890513	Identifier	data		4890486	1					
ANR	4890514	ExpressionStatement	r_buf_free ( rih -> rbuf )	200:1:5293:5315	4890486	2	True				
ANR	4890515	CallExpression	r_buf_free ( rih -> rbuf )		4890486	0					
ANR	4890516	Callee	r_buf_free		4890486	0					
ANR	4890517	Identifier	r_buf_free		4890486	0					
ANR	4890518	ArgumentList	rih -> rbuf		4890486	1					
ANR	4890519	Argument	rih -> rbuf		4890486	0					
ANR	4890520	PtrMemberAccess	rih -> rbuf		4890486	0					
ANR	4890521	Identifier	rih		4890486	0					
ANR	4890522	Identifier	rbuf		4890486	1					
ANR	4890523	ExpressionStatement	free ( rih )	201:1:5318:5328	4890486	3	True				
ANR	4890524	CallExpression	free ( rih )		4890486	0					
ANR	4890525	Callee	free		4890486	0					
ANR	4890526	Identifier	free		4890486	0					
ANR	4890527	ArgumentList	rih		4890486	1					
ANR	4890528	Argument	rih		4890486	0					
ANR	4890529	Identifier	rih		4890486	0					
ANR	4890530	ExpressionStatement	fd -> data = NULL	202:1:5331:5346	4890486	4	True				
ANR	4890531	AssignmentExpression	fd -> data = NULL		4890486	0		=			
ANR	4890532	PtrMemberAccess	fd -> data		4890486	0					
ANR	4890533	Identifier	fd		4890486	0					
ANR	4890534	Identifier	data		4890486	1					
ANR	4890535	Identifier	NULL		4890486	1					
ANR	4890536	ReturnStatement	return 0 ;	203:1:5349:5357	4890486	5	True				
ANR	4890537	PrimaryExpression	0		4890486	0					
ANR	4890538	ReturnType	static int		4890486	1					
ANR	4890539	Identifier	__close		4890486	2					
ANR	4890540	ParameterList	RIODesc * fd		4890486	3					
ANR	4890541	Parameter	RIODesc * fd	195:19:5212:5222	4890486	0	True				
ANR	4890542	ParameterType	RIODesc *		4890486	0					
ANR	4890543	Identifier	fd		4890486	1					
ANR	4890544	CFGEntryNode	ENTRY		4890486		True				
ANR	4890545	CFGExitNode	EXIT		4890486		True				
ANR	4890546	Symbol	rih		4890486						
ANR	4890547	Symbol	NULL		4890486						
ANR	4890548	Symbol	* fd		4890486						
ANR	4890549	Symbol	rih -> rbuf		4890486						
ANR	4890550	Symbol	* rih		4890486						
ANR	4890551	Symbol	fd -> data		4890486						
ANR	4890552	Symbol	fd		4890486						
ANR	4890553	Function	__lseek	206:0:5362:5580							
ANR	4890554	FunctionDef	"__lseek (struct r_io_t * io , RIODesc * fd , ut64 offset , int whence)"		4890553	0					
ANR	4890555	CompoundStatement		206:77:5439:5580	4890553	0					
ANR	4890556	IdentifierDeclStatement	Rihex * rih ;	207:1:5442:5452	4890553	0	True				
ANR	4890557	IdentifierDecl	* rih		4890553	0					
ANR	4890558	IdentifierDeclType	Rihex *		4890553	0					
ANR	4890559	Identifier	rih		4890553	1					
ANR	4890560	IfStatement	if ( ! fd || ! fd -> data )		4890553	1					
ANR	4890561	Condition	! fd || ! fd -> data	208:5:5459:5474	4890553	0	True				
ANR	4890562	OrExpression	! fd || ! fd -> data		4890553	0		||			
ANR	4890563	UnaryOperationExpression	! fd		4890553	0					
ANR	4890564	UnaryOperator	!		4890553	0					
ANR	4890565	Identifier	fd		4890553	1					
ANR	4890566	UnaryOperationExpression	! fd -> data		4890553	1					
ANR	4890567	UnaryOperator	!		4890553	0					
ANR	4890568	PtrMemberAccess	fd -> data		4890553	1					
ANR	4890569	Identifier	fd		4890553	0					
ANR	4890570	Identifier	data		4890553	1					
ANR	4890571	CompoundStatement		3:23:37:37	4890553	1					
ANR	4890572	ReturnStatement	return - 1 ;	209:2:5481:5490	4890553	0	True				
ANR	4890573	UnaryOperationExpression	- 1		4890553	0					
ANR	4890574	UnaryOperator	-		4890553	0					
ANR	4890575	PrimaryExpression	1		4890553	1					
ANR	4890576	ExpressionStatement	rih = fd -> data	211:1:5496:5510	4890553	2	True				
ANR	4890577	AssignmentExpression	rih = fd -> data		4890553	0		=			
ANR	4890578	Identifier	rih		4890553	0					
ANR	4890579	PtrMemberAccess	fd -> data		4890553	1					
ANR	4890580	Identifier	fd		4890553	0					
ANR	4890581	Identifier	data		4890553	1					
ANR	4890582	ExpressionStatement	"io -> off = r_buf_seek ( rih -> rbuf , offset , whence )"	212:1:5513:5561	4890553	3	True				
ANR	4890583	AssignmentExpression	"io -> off = r_buf_seek ( rih -> rbuf , offset , whence )"		4890553	0		=			
ANR	4890584	PtrMemberAccess	io -> off		4890553	0					
ANR	4890585	Identifier	io		4890553	0					
ANR	4890586	Identifier	off		4890553	1					
ANR	4890587	CallExpression	"r_buf_seek ( rih -> rbuf , offset , whence )"		4890553	1					
ANR	4890588	Callee	r_buf_seek		4890553	0					
ANR	4890589	Identifier	r_buf_seek		4890553	0					
ANR	4890590	ArgumentList	rih -> rbuf		4890553	1					
ANR	4890591	Argument	rih -> rbuf		4890553	0					
ANR	4890592	PtrMemberAccess	rih -> rbuf		4890553	0					
ANR	4890593	Identifier	rih		4890553	0					
ANR	4890594	Identifier	rbuf		4890553	1					
ANR	4890595	Argument	offset		4890553	1					
ANR	4890596	Identifier	offset		4890553	0					
ANR	4890597	Argument	whence		4890553	2					
ANR	4890598	Identifier	whence		4890553	0					
ANR	4890599	ReturnStatement	return io -> off ;	213:1:5564:5578	4890553	4	True				
ANR	4890600	PtrMemberAccess	io -> off		4890553	0					
ANR	4890601	Identifier	io		4890553	0					
ANR	4890602	Identifier	off		4890553	1					
ANR	4890603	ReturnType	static ut64		4890553	1					
ANR	4890604	Identifier	__lseek		4890553	2					
ANR	4890605	ParameterList	"struct r_io_t * io , RIODesc * fd , ut64 offset , int whence"		4890553	3					
ANR	4890606	Parameter	struct r_io_t * io	206:20:5382:5398	4890553	0	True				
ANR	4890607	ParameterType	struct r_io_t *		4890553	0					
ANR	4890608	Identifier	io		4890553	1					
ANR	4890609	Parameter	RIODesc * fd	206:39:5401:5411	4890553	1	True				
ANR	4890610	ParameterType	RIODesc *		4890553	0					
ANR	4890611	Identifier	fd		4890553	1					
ANR	4890612	Parameter	ut64 offset	206:52:5414:5424	4890553	2	True				
ANR	4890613	ParameterType	ut64		4890553	0					
ANR	4890614	Identifier	offset		4890553	1					
ANR	4890615	Parameter	int whence	206:65:5427:5436	4890553	3	True				
ANR	4890616	ParameterType	int		4890553	0					
ANR	4890617	Identifier	whence		4890553	1					
ANR	4890618	CFGEntryNode	ENTRY		4890553		True				
ANR	4890619	CFGExitNode	EXIT		4890553		True				
ANR	4890620	Symbol	rih		4890553						
ANR	4890621	Symbol	offset		4890553						
ANR	4890622	Symbol	whence		4890553						
ANR	4890623	Symbol	r_buf_seek		4890553						
ANR	4890624	Symbol	io -> off		4890553						
ANR	4890625	Symbol	io		4890553						
ANR	4890626	Symbol	* fd		4890553						
ANR	4890627	Symbol	rih -> rbuf		4890553						
ANR	4890628	Symbol	* rih		4890553						
ANR	4890629	Symbol	fd -> data		4890553						
ANR	4890630	Symbol	fd		4890553						
ANR	4890631	Symbol	* io		4890553						
ANR	4890632	Function	__plugin_open	216:0:5583:5698							
ANR	4890633	FunctionDef	"__plugin_open (RIO * io , const char * pathname , bool many)"		4890632	0					
ANR	4890634	CompoundStatement		216:68:5651:5698	4890632	0					
ANR	4890635	ReturnStatement	"return ( ! strncmp ( pathname , ""ihex://"" , 7 ) ) ;"	217:1:5654:5696	4890632	0	True				
ANR	4890636	UnaryOperationExpression	"! strncmp ( pathname , ""ihex://"" , 7 )"		4890632	0					
ANR	4890637	UnaryOperator	!		4890632	0					
ANR	4890638	CallExpression	"strncmp ( pathname , ""ihex://"" , 7 )"		4890632	1					
ANR	4890639	Callee	strncmp		4890632	0					
ANR	4890640	Identifier	strncmp		4890632	0					
ANR	4890641	ArgumentList	pathname		4890632	1					
ANR	4890642	Argument	pathname		4890632	0					
ANR	4890643	Identifier	pathname		4890632	0					
ANR	4890644	Argument	"""ihex://"""		4890632	1					
ANR	4890645	PrimaryExpression	"""ihex://"""		4890632	0					
ANR	4890646	Argument	7		4890632	2					
ANR	4890647	PrimaryExpression	7		4890632	0					
ANR	4890648	ReturnType	static bool		4890632	1					
ANR	4890649	Identifier	__plugin_open		4890632	2					
ANR	4890650	ParameterList	"RIO * io , const char * pathname , bool many"		4890632	3					
ANR	4890651	Parameter	RIO * io	216:26:5609:5615	4890632	0	True				
ANR	4890652	ParameterType	RIO *		4890632	0					
ANR	4890653	Identifier	io		4890632	1					
ANR	4890654	Parameter	const char * pathname	216:35:5618:5637	4890632	1	True				
ANR	4890655	ParameterType	const char *		4890632	0					
ANR	4890656	Identifier	pathname		4890632	1					
ANR	4890657	Parameter	bool many	216:57:5640:5648	4890632	2	True				
ANR	4890658	ParameterType	bool		4890632	0					
ANR	4890659	Identifier	many		4890632	1					
ANR	4890660	CFGEntryNode	ENTRY		4890632		True				
ANR	4890661	CFGExitNode	EXIT		4890632		True				
ANR	4890662	Symbol	strncmp		4890632						
ANR	4890663	Symbol	io		4890632						
ANR	4890664	Symbol	many		4890632						
ANR	4890665	Symbol	pathname		4890632						
ANR	4890666	Function	ihex_parse	223:0:5827:9951							
ANR	4890667	FunctionDef	"ihex_parse (RBuffer * rbuf , char * str)"		4890666	0					
ANR	4890668	CompoundStatement		223:49:5876:9951	4890666	0					
ANR	4890669	IdentifierDeclStatement	ut8 * sec_tmp ;	224:1:5879:5891	4890666	0	True				
ANR	4890670	IdentifierDecl	* sec_tmp		4890666	0					
ANR	4890671	IdentifierDeclType	ut8 *		4890666	0					
ANR	4890672	Identifier	sec_tmp		4890666	1					
ANR	4890673	IdentifierDeclStatement	ut32 sec_start = 0 ;	225:1:5894:5912	4890666	1	True				
ANR	4890674	IdentifierDecl	sec_start = 0		4890666	0					
ANR	4890675	IdentifierDeclType	ut32		4890666	0					
ANR	4890676	Identifier	sec_start		4890666	1					
ANR	4890677	AssignmentExpression	sec_start = 0		4890666	2		=			
ANR	4890678	Identifier	sec_start		4890666	0					
ANR	4890679	PrimaryExpression	0		4890666	1					
ANR	4890680	IdentifierDeclStatement	ut32 segreg = 0 ;	226:1:5945:5960	4890666	2	True				
ANR	4890681	IdentifierDecl	segreg = 0		4890666	0					
ANR	4890682	IdentifierDeclType	ut32		4890666	0					
ANR	4890683	Identifier	segreg		4890666	1					
ANR	4890684	AssignmentExpression	segreg = 0		4890666	2		=			
ANR	4890685	Identifier	segreg		4890666	0					
ANR	4890686	PrimaryExpression	0		4890666	1					
ANR	4890687	IdentifierDeclStatement	ut32 addr_tmp = 0 ;	227:1:5987:6004	4890666	3	True				
ANR	4890688	IdentifierDecl	addr_tmp = 0		4890666	0					
ANR	4890689	IdentifierDeclType	ut32		4890666	0					
ANR	4890690	Identifier	addr_tmp		4890666	1					
ANR	4890691	AssignmentExpression	addr_tmp = 0		4890666	2		=			
ANR	4890692	Identifier	addr_tmp		4890666	0					
ANR	4890693	PrimaryExpression	0		4890666	1					
ANR	4890694	IdentifierDeclStatement	ut16 next_addr = 0 ;	228:1:6025:6043	4890666	4	True				
ANR	4890695	IdentifierDecl	next_addr = 0		4890666	0					
ANR	4890696	IdentifierDeclType	ut16		4890666	0					
ANR	4890697	Identifier	next_addr		4890666	1					
ANR	4890698	AssignmentExpression	next_addr = 0		4890666	2		=			
ANR	4890699	Identifier	next_addr		4890666	0					
ANR	4890700	PrimaryExpression	0		4890666	1					
ANR	4890701	IdentifierDeclStatement	char * eol ;	229:1:6087:6096	4890666	5	True				
ANR	4890702	IdentifierDecl	* eol		4890666	0					
ANR	4890703	IdentifierDeclType	char *		4890666	0					
ANR	4890704	Identifier	eol		4890666	1					
ANR	4890705	IdentifierDeclStatement	ut8 cksum ;	230:1:6099:6108	4890666	6	True				
ANR	4890706	IdentifierDecl	cksum		4890666	0					
ANR	4890707	IdentifierDeclType	ut8		4890666	0					
ANR	4890708	Identifier	cksum		4890666	1					
ANR	4890709	IdentifierDeclStatement	"int extH , extL ;"	231:1:6111:6125	4890666	7	True				
ANR	4890710	IdentifierDecl	extH		4890666	0					
ANR	4890711	IdentifierDeclType	int		4890666	0					
ANR	4890712	Identifier	extH		4890666	1					
ANR	4890713	IdentifierDecl	extL		4890666	1					
ANR	4890714	IdentifierDeclType	int		4890666	0					
ANR	4890715	Identifier	extL		4890666	1					
ANR	4890716	IdentifierDeclStatement	"int bc = 0 , type , byte , i , l ;"	232:1:6128:6156	4890666	8	True				
ANR	4890717	IdentifierDecl	bc = 0		4890666	0					
ANR	4890718	IdentifierDeclType	int		4890666	0					
ANR	4890719	Identifier	bc		4890666	1					
ANR	4890720	AssignmentExpression	bc = 0		4890666	2		=			
ANR	4890721	Identifier	bc		4890666	0					
ANR	4890722	PrimaryExpression	0		4890666	1					
ANR	4890723	IdentifierDecl	type		4890666	1					
ANR	4890724	IdentifierDeclType	int		4890666	0					
ANR	4890725	Identifier	type		4890666	1					
ANR	4890726	IdentifierDecl	byte		4890666	2					
ANR	4890727	IdentifierDeclType	int		4890666	0					
ANR	4890728	Identifier	byte		4890666	1					
ANR	4890729	IdentifierDecl	i		4890666	3					
ANR	4890730	IdentifierDeclType	int		4890666	0					
ANR	4890731	Identifier	i		4890666	1					
ANR	4890732	IdentifierDecl	l		4890666	4					
ANR	4890733	IdentifierDeclType	int		4890666	0					
ANR	4890734	Identifier	l		4890666	1					
ANR	4890735	Statement	define	234:1:6221:6226	4890666	9	True				
ANR	4890736	Statement	SEC_MAX	234:8:6228:6234	4890666	10	True				
ANR	4890737	Statement	(	234:16:6236:6236	4890666	11	True				
ANR	4890738	Statement	sec_size	234:17:6237:6244	4890666	12	True				
ANR	4890739	Statement	<	234:26:6246:6246	4890666	13	True				
ANR	4890740	Statement	INT_MAX	234:28:6248:6254	4890666	14	True				
ANR	4890741	Statement	)	234:35:6255:6255	4890666	15	True				
ANR	4890742	Statement	?	234:36:6256:6256	4890666	16	True				
ANR	4890743	Label	sec_size :	234:38:6258:6266	4890666	17	True				
ANR	4890744	Identifier	sec_size		4890666	0					
ANR	4890745	IdentifierDeclStatement	INT_MAX ut32 sec_size = 0 ;	234:48:6268:6294	4890666	18	True				
ANR	4890746	IdentifierDecl	sec_size = 0		4890666	0					
ANR	4890747	IdentifierDeclType	INT_MAX ut32		4890666	0					
ANR	4890748	Identifier	sec_size		4890666	1					
ANR	4890749	AssignmentExpression	sec_size = 0		4890666	2		=			
ANR	4890750	Identifier	sec_size		4890666	0					
ANR	4890751	PrimaryExpression	0		4890666	1					
ANR	4890752	IdentifierDeclStatement	const int sec_count = UT16_MAX ;	236:1:6297:6327	4890666	19	True				
ANR	4890753	IdentifierDecl	sec_count = UT16_MAX		4890666	0					
ANR	4890754	IdentifierDeclType	const int		4890666	0					
ANR	4890755	Identifier	sec_count		4890666	1					
ANR	4890756	AssignmentExpression	sec_count = UT16_MAX		4890666	2		=			
ANR	4890757	Identifier	UT16_MAX		4890666	0					
ANR	4890758	Identifier	UT16_MAX		4890666	1					
ANR	4890759	ExpressionStatement	"sec_tmp = calloc ( 1 , sec_count )"	237:1:6330:6361	4890666	20	True				
ANR	4890760	AssignmentExpression	"sec_tmp = calloc ( 1 , sec_count )"		4890666	0		=			
ANR	4890761	Identifier	sec_tmp		4890666	0					
ANR	4890762	CallExpression	"calloc ( 1 , sec_count )"		4890666	1					
ANR	4890763	Callee	calloc		4890666	0					
ANR	4890764	Identifier	calloc		4890666	0					
ANR	4890765	ArgumentList	1		4890666	1					
ANR	4890766	Argument	1		4890666	0					
ANR	4890767	PrimaryExpression	1		4890666	0					
ANR	4890768	Argument	sec_count		4890666	1					
ANR	4890769	Identifier	sec_count		4890666	0					
ANR	4890770	IfStatement	if ( ! sec_tmp )		4890666	21					
ANR	4890771	Condition	! sec_tmp	238:5:6368:6375	4890666	0	True				
ANR	4890772	UnaryOperationExpression	! sec_tmp		4890666	0					
ANR	4890773	UnaryOperator	!		4890666	0					
ANR	4890774	Identifier	sec_tmp		4890666	1					
ANR	4890775	CompoundStatement		16:15:501:501	4890666	1					
ANR	4890776	GotoStatement	goto fail ;	239:2:6382:6391	4890666	0	True				
ANR	4890777	Identifier	fail		4890666	0					
ANR	4890778	DoStatement	do		4890666	22					
ANR	4890779	CompoundStatement		19:4:523:523	4890666	0					
ANR	4890780	ExpressionStatement	"l = sscanf ( str , "":%02x%04x%02x"" , & bc , & addr_tmp , & type )"	242:2:6404:6460	4890666	0	True				
ANR	4890781	AssignmentExpression	"l = sscanf ( str , "":%02x%04x%02x"" , & bc , & addr_tmp , & type )"		4890666	0		=			
ANR	4890782	Identifier	l		4890666	0					
ANR	4890783	CallExpression	"sscanf ( str , "":%02x%04x%02x"" , & bc , & addr_tmp , & type )"		4890666	1					
ANR	4890784	Callee	sscanf		4890666	0					
ANR	4890785	Identifier	sscanf		4890666	0					
ANR	4890786	ArgumentList	str		4890666	1					
ANR	4890787	Argument	str		4890666	0					
ANR	4890788	Identifier	str		4890666	0					
ANR	4890789	Argument	""":%02x%04x%02x"""		4890666	1					
ANR	4890790	PrimaryExpression	""":%02x%04x%02x"""		4890666	0					
ANR	4890791	Argument	& bc		4890666	2					
ANR	4890792	UnaryOperationExpression	& bc		4890666	0					
ANR	4890793	UnaryOperator	&		4890666	0					
ANR	4890794	Identifier	bc		4890666	1					
ANR	4890795	Argument	& addr_tmp		4890666	3					
ANR	4890796	UnaryOperationExpression	& addr_tmp		4890666	0					
ANR	4890797	UnaryOperator	&		4890666	0					
ANR	4890798	Identifier	addr_tmp		4890666	1					
ANR	4890799	Argument	& type		4890666	4					
ANR	4890800	UnaryOperationExpression	& type		4890666	0					
ANR	4890801	UnaryOperator	&		4890666	0					
ANR	4890802	Identifier	type		4890666	1					
ANR	4890803	IfStatement	if ( l != 3 )		4890666	1					
ANR	4890804	Condition	l != 3	243:6:6468:6473	4890666	0	True				
ANR	4890805	EqualityExpression	l != 3		4890666	0		!=			
ANR	4890806	Identifier	l		4890666	0					
ANR	4890807	PrimaryExpression	3		4890666	1					
ANR	4890808	CompoundStatement		21:14:599:599	4890666	1					
ANR	4890809	ExpressionStatement	"eprintf ( ""Invalid data in ihex file (%.*s)\\n"" , 80 , str )"	244:3:6481:6536	4890666	0	True				
ANR	4890810	CallExpression	"eprintf ( ""Invalid data in ihex file (%.*s)\\n"" , 80 , str )"		4890666	0					
ANR	4890811	Callee	eprintf		4890666	0					
ANR	4890812	Identifier	eprintf		4890666	0					
ANR	4890813	ArgumentList	"""Invalid data in ihex file (%.*s)\\n"""		4890666	1					
ANR	4890814	Argument	"""Invalid data in ihex file (%.*s)\\n"""		4890666	0					
ANR	4890815	PrimaryExpression	"""Invalid data in ihex file (%.*s)\\n"""		4890666	0					
ANR	4890816	Argument	80		4890666	1					
ANR	4890817	PrimaryExpression	80		4890666	0					
ANR	4890818	Argument	str		4890666	2					
ANR	4890819	Identifier	str		4890666	0					
ANR	4890820	GotoStatement	goto fail ;	245:3:6541:6550	4890666	1	True				
ANR	4890821	Identifier	fail		4890666	0					
ANR	4890822	ExpressionStatement	bc &= 0xff	247:2:6558:6568	4890666	2	True				
ANR	4890823	AssignmentExpression	bc &= 0xff		4890666	0		&=			
ANR	4890824	Identifier	bc		4890666	0					
ANR	4890825	PrimaryExpression	0xff		4890666	1					
ANR	4890826	ExpressionStatement	addr_tmp &= 0xffff	248:2:6572:6590	4890666	3	True				
ANR	4890827	AssignmentExpression	addr_tmp &= 0xffff		4890666	0		&=			
ANR	4890828	Identifier	addr_tmp		4890666	0					
ANR	4890829	PrimaryExpression	0xffff		4890666	1					
ANR	4890830	ExpressionStatement	type &= 0xff	249:2:6594:6606	4890666	4	True				
ANR	4890831	AssignmentExpression	type &= 0xff		4890666	0		&=			
ANR	4890832	Identifier	type		4890666	0					
ANR	4890833	PrimaryExpression	0xff		4890666	1					
ANR	4890834	SwitchStatement	switch ( type )		4890666	5					
ANR	4890835	Condition	type	251:10:6619:6622	4890666	0	True				
ANR	4890836	Identifier	type		4890666	0					
ANR	4890837	CompoundStatement		29:16:748:748	4890666	1					
ANR	4890838	Label	case 0 :	252:2:6629:6635	4890666	0	True				
ANR	4890839	ExpressionStatement	"eol = strchr ( str + 1 , ':' )"	253:3:6648:6675	4890666	1	True				
ANR	4890840	AssignmentExpression	"eol = strchr ( str + 1 , ':' )"		4890666	0		=			
ANR	4890841	Identifier	eol		4890666	0					
ANR	4890842	CallExpression	"strchr ( str + 1 , ':' )"		4890666	1					
ANR	4890843	Callee	strchr		4890666	0					
ANR	4890844	Identifier	strchr		4890666	0					
ANR	4890845	ArgumentList	str + 1		4890666	1					
ANR	4890846	Argument	str + 1		4890666	0					
ANR	4890847	AdditiveExpression	str + 1		4890666	0		+			
ANR	4890848	Identifier	str		4890666	0					
ANR	4890849	PrimaryExpression	1		4890666	1					
ANR	4890850	Argument	':'		4890666	1					
ANR	4890851	PrimaryExpression	':'		4890666	0					
ANR	4890852	IfStatement	if ( eol )		4890666	2					
ANR	4890853	Condition	eol	254:7:6684:6686	4890666	0	True				
ANR	4890854	Identifier	eol		4890666	0					
ANR	4890855	CompoundStatement		32:12:812:812	4890666	1					
ANR	4890856	ExpressionStatement	* eol = 0	255:4:6695:6703	4890666	0	True				
ANR	4890857	AssignmentExpression	* eol = 0		4890666	0		=			
ANR	4890858	UnaryOperationExpression	* eol		4890666	0					
ANR	4890859	UnaryOperator	*		4890666	0					
ANR	4890860	Identifier	eol		4890666	1					
ANR	4890861	PrimaryExpression	0		4890666	1					
ANR	4890862	ExpressionStatement	cksum = bc	257:3:6713:6723	4890666	3	True				
ANR	4890863	AssignmentExpression	cksum = bc		4890666	0		=			
ANR	4890864	Identifier	cksum		4890666	0					
ANR	4890865	Identifier	bc		4890666	1					
ANR	4890866	ExpressionStatement	cksum += addr_tmp >> 8	258:3:6728:6748	4890666	4	True				
ANR	4890867	AssignmentExpression	cksum += addr_tmp >> 8		4890666	0		+=			
ANR	4890868	Identifier	cksum		4890666	0					
ANR	4890869	ShiftExpression	addr_tmp >> 8		4890666	1		>>			
ANR	4890870	Identifier	addr_tmp		4890666	0					
ANR	4890871	PrimaryExpression	8		4890666	1					
ANR	4890872	ExpressionStatement	cksum += addr_tmp	259:3:6753:6770	4890666	5	True				
ANR	4890873	AssignmentExpression	cksum += addr_tmp		4890666	0		+=			
ANR	4890874	Identifier	cksum		4890666	0					
ANR	4890875	Identifier	addr_tmp		4890666	1					
ANR	4890876	ExpressionStatement	cksum += type	260:3:6775:6788	4890666	6	True				
ANR	4890877	AssignmentExpression	cksum += type		4890666	0		+=			
ANR	4890878	Identifier	cksum		4890666	0					
ANR	4890879	Identifier	type		4890666	1					
ANR	4890880	IfStatement	if ( ( next_addr != addr_tmp ) || ( ( sec_size + bc ) > SEC_MAX ) )		4890666	7					
ANR	4890881	Condition	( next_addr != addr_tmp ) || ( ( sec_size + bc ) > SEC_MAX )	262:7:6798:6851	4890666	0	True				
ANR	4890882	OrExpression	( next_addr != addr_tmp ) || ( ( sec_size + bc ) > SEC_MAX )		4890666	0		||			
ANR	4890883	EqualityExpression	next_addr != addr_tmp		4890666	0		!=			
ANR	4890884	Identifier	next_addr		4890666	0					
ANR	4890885	Identifier	addr_tmp		4890666	1					
ANR	4890886	RelationalExpression	( sec_size + bc ) > SEC_MAX		4890666	1		>			
ANR	4890887	AdditiveExpression	sec_size + bc		4890666	0		+			
ANR	4890888	Identifier	sec_size		4890666	0					
ANR	4890889	Identifier	bc		4890666	1					
ANR	4890890	Identifier	SEC_MAX		4890666	1					
ANR	4890891	CompoundStatement		40:63:977:977	4890666	1					
ANR	4890892	IfStatement	if ( sec_size && sec_size < UT16_MAX )		4890666	0					
ANR	4890893	Condition	sec_size && sec_size < UT16_MAX	265:8:6960:6990	4890666	0	True				
ANR	4890894	AndExpression	sec_size && sec_size < UT16_MAX		4890666	0		&&			
ANR	4890895	Identifier	sec_size		4890666	0					
ANR	4890896	RelationalExpression	sec_size < UT16_MAX		4890666	1		<			
ANR	4890897	Identifier	sec_size		4890666	0					
ANR	4890898	Identifier	UT16_MAX		4890666	1					
ANR	4890899	CompoundStatement		43:41:1116:1116	4890666	1					
ANR	4890900	IfStatement	"if ( r_buf_write_at ( rbuf , sec_start , sec_tmp , ( int ) sec_size ) != sec_size )"		4890666	0					
ANR	4890901	Condition	"r_buf_write_at ( rbuf , sec_start , sec_tmp , ( int ) sec_size ) != sec_size"	266:9:7004:7072	4890666	0	True				
ANR	4890902	EqualityExpression	"r_buf_write_at ( rbuf , sec_start , sec_tmp , ( int ) sec_size ) != sec_size"		4890666	0		!=			
ANR	4890903	CallExpression	"r_buf_write_at ( rbuf , sec_start , sec_tmp , ( int ) sec_size )"		4890666	0					
ANR	4890904	Callee	r_buf_write_at		4890666	0					
ANR	4890905	Identifier	r_buf_write_at		4890666	0					
ANR	4890906	ArgumentList	rbuf		4890666	1					
ANR	4890907	Argument	rbuf		4890666	0					
ANR	4890908	Identifier	rbuf		4890666	0					
ANR	4890909	Argument	sec_start		4890666	1					
ANR	4890910	Identifier	sec_start		4890666	0					
ANR	4890911	Argument	sec_tmp		4890666	2					
ANR	4890912	Identifier	sec_tmp		4890666	0					
ANR	4890913	Argument	( int ) sec_size		4890666	3					
ANR	4890914	CastExpression	( int ) sec_size		4890666	0					
ANR	4890915	CastTarget	int		4890666	0					
ANR	4890916	Identifier	sec_size		4890666	1					
ANR	4890917	Identifier	sec_size		4890666	1					
ANR	4890918	CompoundStatement		44:80:1198:1198	4890666	1					
ANR	4890919	ExpressionStatement	"eprintf ( ""sparse buffer problem, giving up\\n"" )"	267:6:7083:7129	4890666	0	True				
ANR	4890920	CallExpression	"eprintf ( ""sparse buffer problem, giving up\\n"" )"		4890666	0					
ANR	4890921	Callee	eprintf		4890666	0					
ANR	4890922	Identifier	eprintf		4890666	0					
ANR	4890923	ArgumentList	"""sparse buffer problem, giving up\\n"""		4890666	1					
ANR	4890924	Argument	"""sparse buffer problem, giving up\\n"""		4890666	0					
ANR	4890925	PrimaryExpression	"""sparse buffer problem, giving up\\n"""		4890666	0					
ANR	4890926	GotoStatement	goto fail ;	268:6:7137:7146	4890666	1	True				
ANR	4890927	Identifier	fail		4890666	0					
ANR	4890928	ExpressionStatement	sec_start = segreg + addr_tmp	272:4:7201:7230	4890666	1	True				
ANR	4890929	AssignmentExpression	sec_start = segreg + addr_tmp		4890666	0		=			
ANR	4890930	Identifier	sec_start		4890666	0					
ANR	4890931	AdditiveExpression	segreg + addr_tmp		4890666	1		+			
ANR	4890932	Identifier	segreg		4890666	0					
ANR	4890933	Identifier	addr_tmp		4890666	1					
ANR	4890934	ExpressionStatement	next_addr = addr_tmp	273:4:7236:7256	4890666	2	True				
ANR	4890935	AssignmentExpression	next_addr = addr_tmp		4890666	0		=			
ANR	4890936	Identifier	next_addr		4890666	0					
ANR	4890937	Identifier	addr_tmp		4890666	1					
ANR	4890938	ExpressionStatement	sec_size = 0	274:4:7262:7274	4890666	3	True				
ANR	4890939	AssignmentExpression	sec_size = 0		4890666	0		=			
ANR	4890940	Identifier	sec_size		4890666	0					
ANR	4890941	PrimaryExpression	0		4890666	1					
ANR	4890942	ForStatement	for ( i = 0 ; i < bc ; i ++ )		4890666	8					
ANR	4890943	ForInit	i = 0 ;	277:8:7290:7295	4890666	0	True				
ANR	4890944	AssignmentExpression	i = 0		4890666	0		=			
ANR	4890945	Identifier	i		4890666	0					
ANR	4890946	PrimaryExpression	0		4890666	1					
ANR	4890947	Condition	i < bc	277:15:7297:7302	4890666	1	True				
ANR	4890948	RelationalExpression	i < bc		4890666	0		<			
ANR	4890949	Identifier	i		4890666	0					
ANR	4890950	Identifier	bc		4890666	1					
ANR	4890951	PostIncDecOperationExpression	i ++	277:23:7305:7307	4890666	2	True				
ANR	4890952	Identifier	i		4890666	0					
ANR	4890953	IncDec	++		4890666	1					
ANR	4890954	CompoundStatement		55:28:1433:1433	4890666	3					
ANR	4890955	IfStatement	"if ( sscanf ( str + 9 + ( i * 2 ) , ""%02x"" , & byte ) != 1 )"		4890666	0					
ANR	4890956	Condition	"sscanf ( str + 9 + ( i * 2 ) , ""%02x"" , & byte ) != 1"	278:8:7320:7361	4890666	0	True				
ANR	4890957	EqualityExpression	"sscanf ( str + 9 + ( i * 2 ) , ""%02x"" , & byte ) != 1"		4890666	0		!=			
ANR	4890958	CallExpression	"sscanf ( str + 9 + ( i * 2 ) , ""%02x"" , & byte )"		4890666	0					
ANR	4890959	Callee	sscanf		4890666	0					
ANR	4890960	Identifier	sscanf		4890666	0					
ANR	4890961	ArgumentList	str + 9 + ( i * 2 )		4890666	1					
ANR	4890962	Argument	str + 9 + ( i * 2 )		4890666	0					
ANR	4890963	AdditiveExpression	str + 9 + ( i * 2 )		4890666	0		+			
ANR	4890964	Identifier	str		4890666	0					
ANR	4890965	AdditiveExpression	9 + ( i * 2 )		4890666	1		+			
ANR	4890966	PrimaryExpression	9		4890666	0					
ANR	4890967	MultiplicativeExpression	i * 2		4890666	1		*			
ANR	4890968	Identifier	i		4890666	0					
ANR	4890969	PrimaryExpression	2		4890666	1					
ANR	4890970	Argument	"""%02x"""		4890666	1					
ANR	4890971	PrimaryExpression	"""%02x"""		4890666	0					
ANR	4890972	Argument	& byte		4890666	2					
ANR	4890973	UnaryOperationExpression	& byte		4890666	0					
ANR	4890974	UnaryOperator	&		4890666	0					
ANR	4890975	Identifier	byte		4890666	1					
ANR	4890976	PrimaryExpression	1		4890666	1					
ANR	4890977	CompoundStatement		56:52:1487:1487	4890666	1					
ANR	4890978	ExpressionStatement	"eprintf ( ""unparsable data !\\n"" )"	279:5:7371:7402	4890666	0	True				
ANR	4890979	CallExpression	"eprintf ( ""unparsable data !\\n"" )"		4890666	0					
ANR	4890980	Callee	eprintf		4890666	0					
ANR	4890981	Identifier	eprintf		4890666	0					
ANR	4890982	ArgumentList	"""unparsable data !\\n"""		4890666	1					
ANR	4890983	Argument	"""unparsable data !\\n"""		4890666	0					
ANR	4890984	PrimaryExpression	"""unparsable data !\\n"""		4890666	0					
ANR	4890985	GotoStatement	goto fail ;	280:5:7409:7418	4890666	1	True				
ANR	4890986	Identifier	fail		4890666	0					
ANR	4890987	IfStatement	if ( sec_size + i < sec_count )		4890666	1					
ANR	4890988	Condition	sec_size + i < sec_count	282:8:7434:7457	4890666	0	True				
ANR	4890989	RelationalExpression	sec_size + i < sec_count		4890666	0		<			
ANR	4890990	AdditiveExpression	sec_size + i		4890666	0		+			
ANR	4890991	Identifier	sec_size		4890666	0					
ANR	4890992	Identifier	i		4890666	1					
ANR	4890993	Identifier	sec_count		4890666	1					
ANR	4890994	CompoundStatement		60:34:1583:1583	4890666	1					
ANR	4890995	ExpressionStatement	sec_tmp [ sec_size + i ] = ( ut8 ) byte & 0xff	283:5:7467:7508	4890666	0	True				
ANR	4890996	AssignmentExpression	sec_tmp [ sec_size + i ] = ( ut8 ) byte & 0xff		4890666	0		=			
ANR	4890997	ArrayIndexing	sec_tmp [ sec_size + i ]		4890666	0					
ANR	4890998	Identifier	sec_tmp		4890666	0					
ANR	4890999	AdditiveExpression	sec_size + i		4890666	1		+			
ANR	4891000	Identifier	sec_size		4890666	0					
ANR	4891001	Identifier	i		4890666	1					
ANR	4891002	BitAndExpression	( ut8 ) byte & 0xff		4890666	1		&			
ANR	4891003	CastExpression	( ut8 ) byte		4890666	0					
ANR	4891004	CastTarget	ut8		4890666	0					
ANR	4891005	Identifier	byte		4890666	1					
ANR	4891006	PrimaryExpression	0xff		4890666	1					
ANR	4891007	ExpressionStatement	cksum += byte	285:4:7520:7533	4890666	2	True				
ANR	4891008	AssignmentExpression	cksum += byte		4890666	0		+=			
ANR	4891009	Identifier	cksum		4890666	0					
ANR	4891010	Identifier	byte		4890666	1					
ANR	4891011	ExpressionStatement	sec_size += bc	287:3:7543:7557	4890666	9	True				
ANR	4891012	AssignmentExpression	sec_size += bc		4890666	0		+=			
ANR	4891013	Identifier	sec_size		4890666	0					
ANR	4891014	Identifier	bc		4890666	1					
ANR	4891015	ExpressionStatement	next_addr += bc	288:3:7562:7577	4890666	10	True				
ANR	4891016	AssignmentExpression	next_addr += bc		4890666	0		+=			
ANR	4891017	Identifier	next_addr		4890666	0					
ANR	4891018	Identifier	bc		4890666	1					
ANR	4891019	IfStatement	if ( eol )		4890666	11					
ANR	4891020	Condition	eol	289:7:7586:7588	4890666	0	True				
ANR	4891021	Identifier	eol		4890666	0					
ANR	4891022	CompoundStatement		67:12:1714:1714	4890666	1					
ANR	4891023	IfStatement	"if ( sscanf ( str + 9 + ( i * 2 ) , ""%02x"" , & byte ) != 1 )"		4890666	0					
ANR	4891024	Condition	"sscanf ( str + 9 + ( i * 2 ) , ""%02x"" , & byte ) != 1"	291:8:7617:7654	4890666	0	True				
ANR	4891025	EqualityExpression	"sscanf ( str + 9 + ( i * 2 ) , ""%02x"" , & byte ) != 1"		4890666	0		!=			
ANR	4891026	CallExpression	"sscanf ( str + 9 + ( i * 2 ) , ""%02x"" , & byte )"		4890666	0					
ANR	4891027	Callee	sscanf		4890666	0					
ANR	4891028	Identifier	sscanf		4890666	0					
ANR	4891029	ArgumentList	str + 9 + ( i * 2 )		4890666	1					
ANR	4891030	Argument	str + 9 + ( i * 2 )		4890666	0					
ANR	4891031	AdditiveExpression	str + 9 + ( i * 2 )		4890666	0		+			
ANR	4891032	Identifier	str		4890666	0					
ANR	4891033	AdditiveExpression	9 + ( i * 2 )		4890666	1		+			
ANR	4891034	PrimaryExpression	9		4890666	0					
ANR	4891035	MultiplicativeExpression	i * 2		4890666	1		*			
ANR	4891036	Identifier	i		4890666	0					
ANR	4891037	PrimaryExpression	2		4890666	1					
ANR	4891038	Argument	"""%02x"""		4890666	1					
ANR	4891039	PrimaryExpression	"""%02x"""		4890666	0					
ANR	4891040	Argument	& byte		4890666	2					
ANR	4891041	UnaryOperationExpression	& byte		4890666	0					
ANR	4891042	UnaryOperator	&		4890666	0					
ANR	4891043	Identifier	byte		4890666	1					
ANR	4891044	PrimaryExpression	1		4890666	1					
ANR	4891045	CompoundStatement		69:48:1780:1780	4890666	1					
ANR	4891046	ExpressionStatement	"eprintf ( ""unparsable data !\\n"" )"	292:5:7664:7694	4890666	0	True				
ANR	4891047	CallExpression	"eprintf ( ""unparsable data !\\n"" )"		4890666	0					
ANR	4891048	Callee	eprintf		4890666	0					
ANR	4891049	Identifier	eprintf		4890666	0					
ANR	4891050	ArgumentList	"""unparsable data !\\n"""		4890666	1					
ANR	4891051	Argument	"""unparsable data !\\n"""		4890666	0					
ANR	4891052	PrimaryExpression	"""unparsable data !\\n"""		4890666	0					
ANR	4891053	GotoStatement	goto fail ;	293:5:7701:7710	4890666	1	True				
ANR	4891054	Identifier	fail		4890666	0					
ANR	4891055	ExpressionStatement	cksum += byte	295:4:7722:7735	4890666	1	True				
ANR	4891056	AssignmentExpression	cksum += byte		4890666	0		+=			
ANR	4891057	Identifier	cksum		4890666	0					
ANR	4891058	Identifier	byte		4890666	1					
ANR	4891059	IfStatement	if ( cksum != 0 )		4890666	2					
ANR	4891060	Condition	cksum != 0	296:8:7745:7754	4890666	0	True				
ANR	4891061	EqualityExpression	cksum != 0		4890666	0		!=			
ANR	4891062	Identifier	cksum		4890666	0					
ANR	4891063	PrimaryExpression	0		4890666	1					
ANR	4891064	CompoundStatement		75:5:1887:1918	4890666	1					
ANR	4891065	IdentifierDeclStatement	ut8 fixedcksum = 0 - ( cksum - byte ) ;	297:5:7764:7795	4890666	0	True				
ANR	4891066	IdentifierDecl	fixedcksum = 0 - ( cksum - byte )		4890666	0					
ANR	4891067	IdentifierDeclType	ut8		4890666	0					
ANR	4891068	Identifier	fixedcksum		4890666	1					
ANR	4891069	AssignmentExpression	fixedcksum = 0 - ( cksum - byte )		4890666	2		=			
ANR	4891070	Identifier	fixedcksum		4890666	0					
ANR	4891071	AdditiveExpression	0 - ( cksum - byte )		4890666	1		-			
ANR	4891072	PrimaryExpression	0		4890666	0					
ANR	4891073	AdditiveExpression	cksum - byte		4890666	1		-			
ANR	4891074	Identifier	cksum		4890666	0					
ANR	4891075	Identifier	byte		4890666	1					
ANR	4891076	ExpressionStatement	"eprintf ( ""Checksum failed %02x (got %02x expected %02x)\\n"" , cksum , byte , fixedcksum )"	298:5:7802:7892	4890666	1	True				
ANR	4891077	CallExpression	"eprintf ( ""Checksum failed %02x (got %02x expected %02x)\\n"" , cksum , byte , fixedcksum )"		4890666	0					
ANR	4891078	Callee	eprintf		4890666	0					
ANR	4891079	Identifier	eprintf		4890666	0					
ANR	4891080	ArgumentList	"""Checksum failed %02x (got %02x expected %02x)\\n"""		4890666	1					
ANR	4891081	Argument	"""Checksum failed %02x (got %02x expected %02x)\\n"""		4890666	0					
ANR	4891082	PrimaryExpression	"""Checksum failed %02x (got %02x expected %02x)\\n"""		4890666	0					
ANR	4891083	Argument	cksum		4890666	1					
ANR	4891084	Identifier	cksum		4890666	0					
ANR	4891085	Argument	byte		4890666	2					
ANR	4891086	Identifier	byte		4890666	0					
ANR	4891087	Argument	fixedcksum		4890666	3					
ANR	4891088	Identifier	fixedcksum		4890666	0					
ANR	4891089	GotoStatement	goto fail ;	300:5:7899:7908	4890666	2	True				
ANR	4891090	Identifier	fail		4890666	0					
ANR	4891091	ExpressionStatement	* eol = ':'	302:4:7920:7930	4890666	3	True				
ANR	4891092	AssignmentExpression	* eol = ':'		4890666	0		=			
ANR	4891093	UnaryOperationExpression	* eol		4890666	0					
ANR	4891094	UnaryOperator	*		4890666	0					
ANR	4891095	Identifier	eol		4890666	1					
ANR	4891096	PrimaryExpression	':'		4890666	1					
ANR	4891097	ExpressionStatement	str = eol	304:3:7940:7949	4890666	12	True				
ANR	4891098	AssignmentExpression	str = eol		4890666	0		=			
ANR	4891099	Identifier	str		4890666	0					
ANR	4891100	Identifier	eol		4890666	1					
ANR	4891101	BreakStatement	break ;	305:3:7954:7959	4890666	13	True				
ANR	4891102	Label	case 1 :	306:2:7963:7969	4890666	14	True				
ANR	4891103	IfStatement	if ( sec_size )		4890666	15					
ANR	4891104	Condition	sec_size	307:7:8018:8025	4890666	0	True				
ANR	4891105	Identifier	sec_size		4890666	0					
ANR	4891106	CompoundStatement		85:17:2151:2151	4890666	1					
ANR	4891107	IfStatement	"if ( r_buf_write_at ( rbuf , sec_start , sec_tmp , sec_size ) != sec_size )"		4890666	0					
ANR	4891108	Condition	"r_buf_write_at ( rbuf , sec_start , sec_tmp , sec_size ) != sec_size"	308:8:8038:8099	4890666	0	True				
ANR	4891109	EqualityExpression	"r_buf_write_at ( rbuf , sec_start , sec_tmp , sec_size ) != sec_size"		4890666	0		!=			
ANR	4891110	CallExpression	"r_buf_write_at ( rbuf , sec_start , sec_tmp , sec_size )"		4890666	0					
ANR	4891111	Callee	r_buf_write_at		4890666	0					
ANR	4891112	Identifier	r_buf_write_at		4890666	0					
ANR	4891113	ArgumentList	rbuf		4890666	1					
ANR	4891114	Argument	rbuf		4890666	0					
ANR	4891115	Identifier	rbuf		4890666	0					
ANR	4891116	Argument	sec_start		4890666	1					
ANR	4891117	Identifier	sec_start		4890666	0					
ANR	4891118	Argument	sec_tmp		4890666	2					
ANR	4891119	Identifier	sec_tmp		4890666	0					
ANR	4891120	Argument	sec_size		4890666	3					
ANR	4891121	Identifier	sec_size		4890666	0					
ANR	4891122	Identifier	sec_size		4890666	1					
ANR	4891123	CompoundStatement		86:72:2225:2225	4890666	1					
ANR	4891124	ExpressionStatement	"eprintf ( ""sparse buffer problem, giving up. ssiz=%X, sstart=%X\\n"" , sec_size , sec_start )"	309:5:8109:8196	4890666	0	True				
ANR	4891125	CallExpression	"eprintf ( ""sparse buffer problem, giving up. ssiz=%X, sstart=%X\\n"" , sec_size , sec_start )"		4890666	0					
ANR	4891126	Callee	eprintf		4890666	0					
ANR	4891127	Identifier	eprintf		4890666	0					
ANR	4891128	ArgumentList	"""sparse buffer problem, giving up. ssiz=%X, sstart=%X\\n"""		4890666	1					
ANR	4891129	Argument	"""sparse buffer problem, giving up. ssiz=%X, sstart=%X\\n"""		4890666	0					
ANR	4891130	PrimaryExpression	"""sparse buffer problem, giving up. ssiz=%X, sstart=%X\\n"""		4890666	0					
ANR	4891131	Argument	sec_size		4890666	1					
ANR	4891132	Identifier	sec_size		4890666	0					
ANR	4891133	Argument	sec_start		4890666	2					
ANR	4891134	Identifier	sec_start		4890666	0					
ANR	4891135	GotoStatement	goto fail ;	310:5:8203:8212	4890666	1	True				
ANR	4891136	Identifier	fail		4890666	0					
ANR	4891137	ExpressionStatement	str = NULL	313:3:8228:8238	4890666	16	True				
ANR	4891138	AssignmentExpression	str = NULL		4890666	0		=			
ANR	4891139	Identifier	str		4890666	0					
ANR	4891140	Identifier	NULL		4890666	1					
ANR	4891141	BreakStatement	break ;	314:3:8243:8248	4890666	17	True				
ANR	4891142	Label	case 2 :	315:2:8252:8258	4890666	18	True				
ANR	4891143	Label	case 4 :	316:2:8288:8294	4890666	19	True				
ANR	4891144	IfStatement	if ( sec_size )		4890666	20					
ANR	4891145	Condition	sec_size	320:7:8496:8503	4890666	0	True				
ANR	4891146	Identifier	sec_size		4890666	0					
ANR	4891147	CompoundStatement		98:17:2629:2629	4890666	1					
ANR	4891148	IfStatement	"if ( r_buf_write_at ( rbuf , sec_start , sec_tmp , sec_size ) != sec_size )"		4890666	0					
ANR	4891149	Condition	"r_buf_write_at ( rbuf , sec_start , sec_tmp , sec_size ) != sec_size"	321:8:8516:8577	4890666	0	True				
ANR	4891150	EqualityExpression	"r_buf_write_at ( rbuf , sec_start , sec_tmp , sec_size ) != sec_size"		4890666	0		!=			
ANR	4891151	CallExpression	"r_buf_write_at ( rbuf , sec_start , sec_tmp , sec_size )"		4890666	0					
ANR	4891152	Callee	r_buf_write_at		4890666	0					
ANR	4891153	Identifier	r_buf_write_at		4890666	0					
ANR	4891154	ArgumentList	rbuf		4890666	1					
ANR	4891155	Argument	rbuf		4890666	0					
ANR	4891156	Identifier	rbuf		4890666	0					
ANR	4891157	Argument	sec_start		4890666	1					
ANR	4891158	Identifier	sec_start		4890666	0					
ANR	4891159	Argument	sec_tmp		4890666	2					
ANR	4891160	Identifier	sec_tmp		4890666	0					
ANR	4891161	Argument	sec_size		4890666	3					
ANR	4891162	Identifier	sec_size		4890666	0					
ANR	4891163	Identifier	sec_size		4890666	1					
ANR	4891164	CompoundStatement		99:72:2703:2703	4890666	1					
ANR	4891165	ExpressionStatement	"eprintf ( ""sparse buffer problem, giving up\\n"" )"	322:5:8587:8632	4890666	0	True				
ANR	4891166	CallExpression	"eprintf ( ""sparse buffer problem, giving up\\n"" )"		4890666	0					
ANR	4891167	Callee	eprintf		4890666	0					
ANR	4891168	Identifier	eprintf		4890666	0					
ANR	4891169	ArgumentList	"""sparse buffer problem, giving up\\n"""		4890666	1					
ANR	4891170	Argument	"""sparse buffer problem, giving up\\n"""		4890666	0					
ANR	4891171	PrimaryExpression	"""sparse buffer problem, giving up\\n"""		4890666	0					
ANR	4891172	GotoStatement	goto fail ;	323:5:8639:8648	4890666	1	True				
ANR	4891173	Identifier	fail		4890666	0					
ANR	4891174	ExpressionStatement	sec_size = 0	326:3:8664:8676	4890666	21	True				
ANR	4891175	AssignmentExpression	sec_size = 0		4890666	0		=			
ANR	4891176	Identifier	sec_size		4890666	0					
ANR	4891177	PrimaryExpression	0		4890666	1					
ANR	4891178	ExpressionStatement	"eol = strchr ( str + 1 , ':' )"	328:3:8682:8709	4890666	22	True				
ANR	4891179	AssignmentExpression	"eol = strchr ( str + 1 , ':' )"		4890666	0		=			
ANR	4891180	Identifier	eol		4890666	0					
ANR	4891181	CallExpression	"strchr ( str + 1 , ':' )"		4890666	1					
ANR	4891182	Callee	strchr		4890666	0					
ANR	4891183	Identifier	strchr		4890666	0					
ANR	4891184	ArgumentList	str + 1		4890666	1					
ANR	4891185	Argument	str + 1		4890666	0					
ANR	4891186	AdditiveExpression	str + 1		4890666	0		+			
ANR	4891187	Identifier	str		4890666	0					
ANR	4891188	PrimaryExpression	1		4890666	1					
ANR	4891189	Argument	':'		4890666	1					
ANR	4891190	PrimaryExpression	':'		4890666	0					
ANR	4891191	IfStatement	if ( eol )		4890666	23					
ANR	4891192	Condition	eol	329:7:8718:8720	4890666	0	True				
ANR	4891193	Identifier	eol		4890666	0					
ANR	4891194	CompoundStatement		107:12:2846:2846	4890666	1					
ANR	4891195	ExpressionStatement	* eol = 0	330:4:8729:8737	4890666	0	True				
ANR	4891196	AssignmentExpression	* eol = 0		4890666	0		=			
ANR	4891197	UnaryOperationExpression	* eol		4890666	0					
ANR	4891198	UnaryOperator	*		4890666	0					
ANR	4891199	Identifier	eol		4890666	1					
ANR	4891200	PrimaryExpression	0		4890666	1					
ANR	4891201	ExpressionStatement	cksum = bc	332:3:8747:8757	4890666	24	True				
ANR	4891202	AssignmentExpression	cksum = bc		4890666	0		=			
ANR	4891203	Identifier	cksum		4890666	0					
ANR	4891204	Identifier	bc		4890666	1					
ANR	4891205	ExpressionStatement	cksum += addr_tmp >> 8	333:3:8762:8782	4890666	25	True				
ANR	4891206	AssignmentExpression	cksum += addr_tmp >> 8		4890666	0		+=			
ANR	4891207	Identifier	cksum		4890666	0					
ANR	4891208	ShiftExpression	addr_tmp >> 8		4890666	1		>>			
ANR	4891209	Identifier	addr_tmp		4890666	0					
ANR	4891210	PrimaryExpression	8		4890666	1					
ANR	4891211	ExpressionStatement	cksum += addr_tmp	334:3:8787:8804	4890666	26	True				
ANR	4891212	AssignmentExpression	cksum += addr_tmp		4890666	0		+=			
ANR	4891213	Identifier	cksum		4890666	0					
ANR	4891214	Identifier	addr_tmp		4890666	1					
ANR	4891215	ExpressionStatement	cksum += type	335:3:8809:8822	4890666	27	True				
ANR	4891216	AssignmentExpression	cksum += type		4890666	0		+=			
ANR	4891217	Identifier	cksum		4890666	0					
ANR	4891218	Identifier	type		4890666	1					
ANR	4891219	IfStatement	if ( ( bc != 2 ) || ( addr_tmp != 0 ) )		4890666	28					
ANR	4891220	Condition	( bc != 2 ) || ( addr_tmp != 0 )	336:7:8831:8858	4890666	0	True				
ANR	4891221	OrExpression	( bc != 2 ) || ( addr_tmp != 0 )		4890666	0		||			
ANR	4891222	EqualityExpression	bc != 2		4890666	0		!=			
ANR	4891223	Identifier	bc		4890666	0					
ANR	4891224	PrimaryExpression	2		4890666	1					
ANR	4891225	EqualityExpression	addr_tmp != 0		4890666	1		!=			
ANR	4891226	Identifier	addr_tmp		4890666	0					
ANR	4891227	PrimaryExpression	0		4890666	1					
ANR	4891228	CompoundStatement		114:37:2984:2984	4890666	1					
ANR	4891229	ExpressionStatement	"eprintf ( ""invalid type 02/04 record!\\n"" )"	337:4:8867:8907	4890666	0	True				
ANR	4891230	CallExpression	"eprintf ( ""invalid type 02/04 record!\\n"" )"		4890666	0					
ANR	4891231	Callee	eprintf		4890666	0					
ANR	4891232	Identifier	eprintf		4890666	0					
ANR	4891233	ArgumentList	"""invalid type 02/04 record!\\n"""		4890666	1					
ANR	4891234	Argument	"""invalid type 02/04 record!\\n"""		4890666	0					
ANR	4891235	PrimaryExpression	"""invalid type 02/04 record!\\n"""		4890666	0					
ANR	4891236	GotoStatement	goto fail ;	338:4:8913:8922	4890666	1	True				
ANR	4891237	Identifier	fail		4890666	0					
ANR	4891238	IfStatement	"if ( ( sscanf ( str + 9 + 0 , ""%02x"" , & extH ) != 1 ) || ( sscanf ( str + 9 + 2 , ""%02x"" , & extL ) != 1 ) )"		4890666	29					
ANR	4891239	Condition	"( sscanf ( str + 9 + 0 , ""%02x"" , & extH ) != 1 ) || ( sscanf ( str + 9 + 2 , ""%02x"" , & extL ) != 1 )"	340:7:8936:9025	4890666	0	True				
ANR	4891240	OrExpression	"( sscanf ( str + 9 + 0 , ""%02x"" , & extH ) != 1 ) || ( sscanf ( str + 9 + 2 , ""%02x"" , & extL ) != 1 )"		4890666	0		||			
ANR	4891241	EqualityExpression	"sscanf ( str + 9 + 0 , ""%02x"" , & extH ) != 1"		4890666	0		!=			
ANR	4891242	CallExpression	"sscanf ( str + 9 + 0 , ""%02x"" , & extH )"		4890666	0					
ANR	4891243	Callee	sscanf		4890666	0					
ANR	4891244	Identifier	sscanf		4890666	0					
ANR	4891245	ArgumentList	str + 9 + 0		4890666	1					
ANR	4891246	Argument	str + 9 + 0		4890666	0					
ANR	4891247	AdditiveExpression	str + 9 + 0		4890666	0		+			
ANR	4891248	Identifier	str		4890666	0					
ANR	4891249	AdditiveExpression	9 + 0		4890666	1		+			
ANR	4891250	PrimaryExpression	9		4890666	0					
ANR	4891251	PrimaryExpression	0		4890666	1					
ANR	4891252	Argument	"""%02x"""		4890666	1					
ANR	4891253	PrimaryExpression	"""%02x"""		4890666	0					
ANR	4891254	Argument	& extH		4890666	2					
ANR	4891255	UnaryOperationExpression	& extH		4890666	0					
ANR	4891256	UnaryOperator	&		4890666	0					
ANR	4891257	Identifier	extH		4890666	1					
ANR	4891258	PrimaryExpression	1		4890666	1					
ANR	4891259	EqualityExpression	"sscanf ( str + 9 + 2 , ""%02x"" , & extL ) != 1"		4890666	1		!=			
ANR	4891260	CallExpression	"sscanf ( str + 9 + 2 , ""%02x"" , & extL )"		4890666	0					
ANR	4891261	Callee	sscanf		4890666	0					
ANR	4891262	Identifier	sscanf		4890666	0					
ANR	4891263	ArgumentList	str + 9 + 2		4890666	1					
ANR	4891264	Argument	str + 9 + 2		4890666	0					
ANR	4891265	AdditiveExpression	str + 9 + 2		4890666	0		+			
ANR	4891266	Identifier	str		4890666	0					
ANR	4891267	AdditiveExpression	9 + 2		4890666	1		+			
ANR	4891268	PrimaryExpression	9		4890666	0					
ANR	4891269	PrimaryExpression	2		4890666	1					
ANR	4891270	Argument	"""%02x"""		4890666	1					
ANR	4891271	PrimaryExpression	"""%02x"""		4890666	0					
ANR	4891272	Argument	& extL		4890666	2					
ANR	4891273	UnaryOperationExpression	& extL		4890666	0					
ANR	4891274	UnaryOperator	&		4890666	0					
ANR	4891275	Identifier	extL		4890666	1					
ANR	4891276	PrimaryExpression	1		4890666	1					
ANR	4891277	CompoundStatement		119:47:3151:3151	4890666	1					
ANR	4891278	ExpressionStatement	"eprintf ( ""unparsable data !\\n"" )"	342:4:9034:9065	4890666	0	True				
ANR	4891279	CallExpression	"eprintf ( ""unparsable data !\\n"" )"		4890666	0					
ANR	4891280	Callee	eprintf		4890666	0					
ANR	4891281	Identifier	eprintf		4890666	0					
ANR	4891282	ArgumentList	"""unparsable data !\\n"""		4890666	1					
ANR	4891283	Argument	"""unparsable data !\\n"""		4890666	0					
ANR	4891284	PrimaryExpression	"""unparsable data !\\n"""		4890666	0					
ANR	4891285	GotoStatement	goto fail ;	343:4:9071:9080	4890666	1	True				
ANR	4891286	Identifier	fail		4890666	0					
ANR	4891287	ExpressionStatement	extH &= 0xff	345:3:9090:9102	4890666	30	True				
ANR	4891288	AssignmentExpression	extH &= 0xff		4890666	0		&=			
ANR	4891289	Identifier	extH		4890666	0					
ANR	4891290	PrimaryExpression	0xff		4890666	1					
ANR	4891291	ExpressionStatement	extL &= 0xff	346:3:9107:9119	4890666	31	True				
ANR	4891292	AssignmentExpression	extL &= 0xff		4890666	0		&=			
ANR	4891293	Identifier	extL		4890666	0					
ANR	4891294	PrimaryExpression	0xff		4890666	1					
ANR	4891295	ExpressionStatement	cksum += extH + extL	347:3:9124:9144	4890666	32	True				
ANR	4891296	AssignmentExpression	cksum += extH + extL		4890666	0		+=			
ANR	4891297	Identifier	cksum		4890666	0					
ANR	4891298	AdditiveExpression	extH + extL		4890666	1		+			
ANR	4891299	Identifier	extH		4890666	0					
ANR	4891300	Identifier	extL		4890666	1					
ANR	4891301	ExpressionStatement	segreg = extH << 8 | extL	349:3:9150:9174	4890666	33	True				
ANR	4891302	AssignmentExpression	segreg = extH << 8 | extL		4890666	0		=			
ANR	4891303	Identifier	segreg		4890666	0					
ANR	4891304	InclusiveOrExpression	extH << 8 | extL		4890666	1		|			
ANR	4891305	ShiftExpression	extH << 8		4890666	0		<<			
ANR	4891306	Identifier	extH		4890666	0					
ANR	4891307	PrimaryExpression	8		4890666	1					
ANR	4891308	Identifier	extL		4890666	1					
ANR	4891309	ExpressionStatement	segreg = segreg << ( ( type == 2 ) ? 4 : 16 )	352:3:9249:9286	4890666	34	True				
ANR	4891310	AssignmentExpression	segreg = segreg << ( ( type == 2 ) ? 4 : 16 )		4890666	0		=			
ANR	4891311	Identifier	segreg		4890666	0					
ANR	4891312	ShiftExpression	segreg << ( ( type == 2 ) ? 4 : 16 )		4890666	1		<<			
ANR	4891313	Identifier	segreg		4890666	0					
ANR	4891314	ConditionalExpression	( type == 2 ) ? 4 : 16		4890666	1					
ANR	4891315	Condition	type == 2		4890666	0					
ANR	4891316	EqualityExpression	type == 2		4890666	0		==			
ANR	4891317	Identifier	type		4890666	0					
ANR	4891318	PrimaryExpression	2		4890666	1					
ANR	4891319	PrimaryExpression	4		4890666	1					
ANR	4891320	PrimaryExpression	16		4890666	2					
ANR	4891321	ExpressionStatement	next_addr = 0	353:3:9291:9304	4890666	35	True				
ANR	4891322	AssignmentExpression	next_addr = 0		4890666	0		=			
ANR	4891323	Identifier	next_addr		4890666	0					
ANR	4891324	PrimaryExpression	0		4890666	1					
ANR	4891325	ExpressionStatement	sec_start = segreg	354:3:9309:9327	4890666	36	True				
ANR	4891326	AssignmentExpression	sec_start = segreg		4890666	0		=			
ANR	4891327	Identifier	sec_start		4890666	0					
ANR	4891328	Identifier	segreg		4890666	1					
ANR	4891329	IfStatement	if ( eol )		4890666	37					
ANR	4891330	Condition	eol	356:7:9337:9339	4890666	0	True				
ANR	4891331	Identifier	eol		4890666	0					
ANR	4891332	CompoundStatement		134:12:3465:3465	4890666	1					
ANR	4891333	ExpressionStatement	byte = 0	358:4:9364:9370	4890666	0	True				
ANR	4891334	AssignmentExpression	byte = 0		4890666	0		=			
ANR	4891335	Identifier	byte		4890666	0					
ANR	4891336	PrimaryExpression	0		4890666	1					
ANR	4891337	IfStatement	"if ( sscanf ( str + 9 + 4 , ""%02x"" , & byte ) != 1 )"		4890666	1					
ANR	4891338	Condition	"sscanf ( str + 9 + 4 , ""%02x"" , & byte ) != 1"	359:8:9414:9453	4890666	0	True				
ANR	4891339	EqualityExpression	"sscanf ( str + 9 + 4 , ""%02x"" , & byte ) != 1"		4890666	0		!=			
ANR	4891340	CallExpression	"sscanf ( str + 9 + 4 , ""%02x"" , & byte )"		4890666	0					
ANR	4891341	Callee	sscanf		4890666	0					
ANR	4891342	Identifier	sscanf		4890666	0					
ANR	4891343	ArgumentList	str + 9 + 4		4890666	1					
ANR	4891344	Argument	str + 9 + 4		4890666	0					
ANR	4891345	AdditiveExpression	str + 9 + 4		4890666	0		+			
ANR	4891346	Identifier	str		4890666	0					
ANR	4891347	AdditiveExpression	9 + 4		4890666	1		+			
ANR	4891348	PrimaryExpression	9		4890666	0					
ANR	4891349	PrimaryExpression	4		4890666	1					
ANR	4891350	Argument	"""%02x"""		4890666	1					
ANR	4891351	PrimaryExpression	"""%02x"""		4890666	0					
ANR	4891352	Argument	& byte		4890666	2					
ANR	4891353	UnaryOperationExpression	& byte		4890666	0					
ANR	4891354	UnaryOperator	&		4890666	0					
ANR	4891355	Identifier	byte		4890666	1					
ANR	4891356	PrimaryExpression	1		4890666	1					
ANR	4891357	CompoundStatement		137:50:3579:3579	4890666	1					
ANR	4891358	ExpressionStatement	cksum = 1	360:5:9463:9472	4890666	0	True				
ANR	4891359	AssignmentExpression	cksum = 1		4890666	0		=			
ANR	4891360	Identifier	cksum		4890666	0					
ANR	4891361	PrimaryExpression	1		4890666	1					
ANR	4891362	ExpressionStatement	cksum += byte	362:4:9484:9497	4890666	2	True				
ANR	4891363	AssignmentExpression	cksum += byte		4890666	0		+=			
ANR	4891364	Identifier	cksum		4890666	0					
ANR	4891365	Identifier	byte		4890666	1					
ANR	4891366	IfStatement	if ( cksum != 0 )		4890666	3					
ANR	4891367	Condition	cksum != 0	363:8:9507:9516	4890666	0	True				
ANR	4891368	EqualityExpression	cksum != 0		4890666	0		!=			
ANR	4891369	Identifier	cksum		4890666	0					
ANR	4891370	PrimaryExpression	0		4890666	1					
ANR	4891371	CompoundStatement		142:5:3649:3680	4890666	1					
ANR	4891372	IdentifierDeclStatement	ut8 fixedcksum = 0 - ( cksum - byte ) ;	364:5:9526:9557	4890666	0	True				
ANR	4891373	IdentifierDecl	fixedcksum = 0 - ( cksum - byte )		4890666	0					
ANR	4891374	IdentifierDeclType	ut8		4890666	0					
ANR	4891375	Identifier	fixedcksum		4890666	1					
ANR	4891376	AssignmentExpression	fixedcksum = 0 - ( cksum - byte )		4890666	2		=			
ANR	4891377	Identifier	fixedcksum		4890666	0					
ANR	4891378	AdditiveExpression	0 - ( cksum - byte )		4890666	1		-			
ANR	4891379	PrimaryExpression	0		4890666	0					
ANR	4891380	AdditiveExpression	cksum - byte		4890666	1		-			
ANR	4891381	Identifier	cksum		4890666	0					
ANR	4891382	Identifier	byte		4890666	1					
ANR	4891383	ExpressionStatement	"eprintf ( ""Checksum failed %02x (got %02x expected %02x)\\n"" , cksum , byte , fixedcksum )"	365:5:9564:9654	4890666	1	True				
ANR	4891384	CallExpression	"eprintf ( ""Checksum failed %02x (got %02x expected %02x)\\n"" , cksum , byte , fixedcksum )"		4890666	0					
ANR	4891385	Callee	eprintf		4890666	0					
ANR	4891386	Identifier	eprintf		4890666	0					
ANR	4891387	ArgumentList	"""Checksum failed %02x (got %02x expected %02x)\\n"""		4890666	1					
ANR	4891388	Argument	"""Checksum failed %02x (got %02x expected %02x)\\n"""		4890666	0					
ANR	4891389	PrimaryExpression	"""Checksum failed %02x (got %02x expected %02x)\\n"""		4890666	0					
ANR	4891390	Argument	cksum		4890666	1					
ANR	4891391	Identifier	cksum		4890666	0					
ANR	4891392	Argument	byte		4890666	2					
ANR	4891393	Identifier	byte		4890666	0					
ANR	4891394	Argument	fixedcksum		4890666	3					
ANR	4891395	Identifier	fixedcksum		4890666	0					
ANR	4891396	GotoStatement	goto fail ;	367:5:9661:9670	4890666	2	True				
ANR	4891397	Identifier	fail		4890666	0					
ANR	4891398	ExpressionStatement	* eol = ':'	369:4:9682:9692	4890666	4	True				
ANR	4891399	AssignmentExpression	* eol = ':'		4890666	0		=			
ANR	4891400	UnaryOperationExpression	* eol		4890666	0					
ANR	4891401	UnaryOperator	*		4890666	0					
ANR	4891402	Identifier	eol		4890666	1					
ANR	4891403	PrimaryExpression	':'		4890666	1					
ANR	4891404	ExpressionStatement	str = eol	371:3:9702:9711	4890666	38	True				
ANR	4891405	AssignmentExpression	str = eol		4890666	0		=			
ANR	4891406	Identifier	str		4890666	0					
ANR	4891407	Identifier	eol		4890666	1					
ANR	4891408	BreakStatement	break ;	372:3:9716:9721	4890666	39	True				
ANR	4891409	Label	case 3 :	373:2:9725:9731	4890666	40	True				
ANR	4891410	Label	case 5 :	374:2:9763:9769	4890666	41	True				
ANR	4891411	ExpressionStatement	"str = strchr ( str + 1 , ':' )"	375:3:9823:9850	4890666	42	True				
ANR	4891412	AssignmentExpression	"str = strchr ( str + 1 , ':' )"		4890666	0		=			
ANR	4891413	Identifier	str		4890666	0					
ANR	4891414	CallExpression	"strchr ( str + 1 , ':' )"		4890666	1					
ANR	4891415	Callee	strchr		4890666	0					
ANR	4891416	Identifier	strchr		4890666	0					
ANR	4891417	ArgumentList	str + 1		4890666	1					
ANR	4891418	Argument	str + 1		4890666	0					
ANR	4891419	AdditiveExpression	str + 1		4890666	0		+			
ANR	4891420	Identifier	str		4890666	0					
ANR	4891421	PrimaryExpression	1		4890666	1					
ANR	4891422	Argument	':'		4890666	1					
ANR	4891423	PrimaryExpression	':'		4890666	0					
ANR	4891424	BreakStatement	break ;	376:3:9855:9860	4890666	43	True				
ANR	4891425	Condition	str	378:10:9876:9878	4890666	1	True				
ANR	4891426	Identifier	str		4890666	0					
ANR	4891427	ExpressionStatement	free ( sec_tmp )	379:1:9883:9897	4890666	23	True				
ANR	4891428	CallExpression	free ( sec_tmp )		4890666	0					
ANR	4891429	Callee	free		4890666	0					
ANR	4891430	Identifier	free		4890666	0					
ANR	4891431	ArgumentList	sec_tmp		4890666	1					
ANR	4891432	Argument	sec_tmp		4890666	0					
ANR	4891433	Identifier	sec_tmp		4890666	0					
ANR	4891434	ReturnStatement	return true ;	380:1:9900:9911	4890666	24	True				
ANR	4891435	Identifier	true		4890666	0					
ANR	4891436	Label	fail :	381:0:9913:9917	4890666	25	True				
ANR	4891437	Identifier	fail		4890666	0					
ANR	4891438	ExpressionStatement	free ( sec_tmp )	382:1:9920:9934	4890666	26	True				
ANR	4891439	CallExpression	free ( sec_tmp )		4890666	0					
ANR	4891440	Callee	free		4890666	0					
ANR	4891441	Identifier	free		4890666	0					
ANR	4891442	ArgumentList	sec_tmp		4890666	1					
ANR	4891443	Argument	sec_tmp		4890666	0					
ANR	4891444	Identifier	sec_tmp		4890666	0					
ANR	4891445	ReturnStatement	return false ;	383:1:9937:9949	4890666	27	True				
ANR	4891446	Identifier	false		4890666	0					
ANR	4891447	ReturnType	static bool		4890666	1					
ANR	4891448	Identifier	ihex_parse		4890666	2					
ANR	4891449	ParameterList	"RBuffer * rbuf , char * str"		4890666	3					
ANR	4891450	Parameter	RBuffer * rbuf	223:23:5850:5862	4890666	0	True				
ANR	4891451	ParameterType	RBuffer *		4890666	0					
ANR	4891452	Identifier	rbuf		4890666	1					
ANR	4891453	Parameter	char * str	223:38:5865:5873	4890666	1	True				
ANR	4891454	ParameterType	char *		4890666	0					
ANR	4891455	Identifier	str		4890666	1					
ANR	4891456	CFGEntryNode	ENTRY		4890666		True				
ANR	4891457	CFGExitNode	EXIT		4890666		True				
ANR	4891458	Symbol	sec_count		4890666						
ANR	4891459	Symbol	bc		4890666						
ANR	4891460	Symbol	eol		4890666						
ANR	4891461	Symbol	cksum		4890666						
ANR	4891462	Symbol	strchr		4890666						
ANR	4891463	Symbol	calloc		4890666						
ANR	4891464	Symbol	& byte		4890666						
ANR	4891465	Symbol	& extH		4890666						
ANR	4891466	Symbol	type		4890666						
ANR	4891467	Symbol	& addr_tmp		4890666						
ANR	4891468	Symbol	sec_tmp		4890666						
ANR	4891469	Symbol	r_buf_write_at		4890666						
ANR	4891470	Symbol	& extL		4890666						
ANR	4891471	Symbol	addr_tmp		4890666						
ANR	4891472	Symbol	* sec_size		4890666						
ANR	4891473	Symbol	* eol		4890666						
ANR	4891474	Symbol	UT16_MAX		4890666						
ANR	4891475	Symbol	segreg		4890666						
ANR	4891476	Symbol	NULL		4890666						
ANR	4891477	Symbol	extL		4890666						
ANR	4891478	Symbol	& type		4890666						
ANR	4891479	Symbol	byte		4890666						
ANR	4891480	Symbol	extH		4890666						
ANR	4891481	Symbol	false		4890666						
ANR	4891482	Symbol	i		4890666						
ANR	4891483	Symbol	& bc		4890666						
ANR	4891484	Symbol	l		4890666						
ANR	4891485	Symbol	fixedcksum		4890666						
ANR	4891486	Symbol	str		4890666						
ANR	4891487	Symbol	sec_start		4890666						
ANR	4891488	Symbol	sec_size		4890666						
ANR	4891489	Symbol	* i		4890666						
ANR	4891490	Symbol	rbuf		4890666						
ANR	4891491	Symbol	sscanf		4890666						
ANR	4891492	Symbol	SEC_MAX		4890666						
ANR	4891493	Symbol	* sec_tmp		4890666						
ANR	4891494	Symbol	true		4890666						
ANR	4891495	Symbol	next_addr		4890666						
ANR	4891496	Function	__open	386:0:9954:10637							
ANR	4891497	FunctionDef	"__open (RIO * io , const char * pathname , int rw , int mode)"		4891496	0					
ANR	4891498	CompoundStatement		386:72:10026:10637	4891496	0					
ANR	4891499	IdentifierDeclStatement	Rihex * mal = NULL ;	387:1:10029:10046	4891496	0	True				
ANR	4891500	IdentifierDecl	* mal = NULL		4891496	0					
ANR	4891501	IdentifierDeclType	Rihex *		4891496	0					
ANR	4891502	Identifier	mal		4891496	1					
ANR	4891503	AssignmentExpression	* mal = NULL		4891496	2		=			
ANR	4891504	Identifier	NULL		4891496	0					
ANR	4891505	Identifier	NULL		4891496	1					
ANR	4891506	IdentifierDeclStatement	char * str = NULL ;	388:1:10049:10065	4891496	1	True				
ANR	4891507	IdentifierDecl	* str = NULL		4891496	0					
ANR	4891508	IdentifierDeclType	char *		4891496	0					
ANR	4891509	Identifier	str		4891496	1					
ANR	4891510	AssignmentExpression	* str = NULL		4891496	2		=			
ANR	4891511	Identifier	NULL		4891496	0					
ANR	4891512	Identifier	NULL		4891496	1					
ANR	4891513	IfStatement	"if ( __plugin_open ( io , pathname , 0 ) )"		4891496	2					
ANR	4891514	Condition	"__plugin_open ( io , pathname , 0 )"	389:5:10072:10102	4891496	0	True				
ANR	4891515	CallExpression	"__plugin_open ( io , pathname , 0 )"		4891496	0					
ANR	4891516	Callee	__plugin_open		4891496	0					
ANR	4891517	Identifier	__plugin_open		4891496	0					
ANR	4891518	ArgumentList	io		4891496	1					
ANR	4891519	Argument	io		4891496	0					
ANR	4891520	Identifier	io		4891496	0					
ANR	4891521	Argument	pathname		4891496	1					
ANR	4891522	Identifier	pathname		4891496	0					
ANR	4891523	Argument	0		4891496	2					
ANR	4891524	PrimaryExpression	0		4891496	0					
ANR	4891525	CompoundStatement		4:38:78:78	4891496	1					
ANR	4891526	ExpressionStatement	"str = r_file_slurp ( pathname + 7 , NULL )"	390:2:10109:10148	4891496	0	True				
ANR	4891527	AssignmentExpression	"str = r_file_slurp ( pathname + 7 , NULL )"		4891496	0		=			
ANR	4891528	Identifier	str		4891496	0					
ANR	4891529	CallExpression	"r_file_slurp ( pathname + 7 , NULL )"		4891496	1					
ANR	4891530	Callee	r_file_slurp		4891496	0					
ANR	4891531	Identifier	r_file_slurp		4891496	0					
ANR	4891532	ArgumentList	pathname + 7		4891496	1					
ANR	4891533	Argument	pathname + 7		4891496	0					
ANR	4891534	AdditiveExpression	pathname + 7		4891496	0		+			
ANR	4891535	Identifier	pathname		4891496	0					
ANR	4891536	PrimaryExpression	7		4891496	1					
ANR	4891537	Argument	NULL		4891496	1					
ANR	4891538	Identifier	NULL		4891496	0					
ANR	4891539	IfStatement	if ( ! str )		4891496	1					
ANR	4891540	Condition	! str	391:6:10156:10159	4891496	0	True				
ANR	4891541	UnaryOperationExpression	! str		4891496	0					
ANR	4891542	UnaryOperator	!		4891496	0					
ANR	4891543	Identifier	str		4891496	1					
ANR	4891544	CompoundStatement		6:12:135:135	4891496	1					
ANR	4891545	ReturnStatement	return NULL ;	392:3:10167:10178	4891496	0	True				
ANR	4891546	Identifier	NULL		4891496	0					
ANR	4891547	ExpressionStatement	mal = R_NEW0 ( Rihex )	394:2:10186:10206	4891496	2	True				
ANR	4891548	AssignmentExpression	mal = R_NEW0 ( Rihex )		4891496	0		=			
ANR	4891549	Identifier	mal		4891496	0					
ANR	4891550	CallExpression	R_NEW0 ( Rihex )		4891496	1					
ANR	4891551	Callee	R_NEW0		4891496	0					
ANR	4891552	Identifier	R_NEW0		4891496	0					
ANR	4891553	ArgumentList	Rihex		4891496	1					
ANR	4891554	Argument	Rihex		4891496	0					
ANR	4891555	Identifier	Rihex		4891496	0					
ANR	4891556	IfStatement	if ( ! mal )		4891496	3					
ANR	4891557	Condition	! mal	395:6:10214:10217	4891496	0	True				
ANR	4891558	UnaryOperationExpression	! mal		4891496	0					
ANR	4891559	UnaryOperator	!		4891496	0					
ANR	4891560	Identifier	mal		4891496	1					
ANR	4891561	CompoundStatement		10:12:193:193	4891496	1					
ANR	4891562	ExpressionStatement	free ( str )	396:3:10225:10235	4891496	0	True				
ANR	4891563	CallExpression	free ( str )		4891496	0					
ANR	4891564	Callee	free		4891496	0					
ANR	4891565	Identifier	free		4891496	0					
ANR	4891566	ArgumentList	str		4891496	1					
ANR	4891567	Argument	str		4891496	0					
ANR	4891568	Identifier	str		4891496	0					
ANR	4891569	ReturnStatement	return NULL ;	397:3:10240:10251	4891496	1	True				
ANR	4891570	Identifier	NULL		4891496	0					
ANR	4891571	ExpressionStatement	mal -> rbuf = r_buf_new_sparse ( io -> Oxff )	399:2:10259:10298	4891496	4	True				
ANR	4891572	AssignmentExpression	mal -> rbuf = r_buf_new_sparse ( io -> Oxff )		4891496	0		=			
ANR	4891573	PtrMemberAccess	mal -> rbuf		4891496	0					
ANR	4891574	Identifier	mal		4891496	0					
ANR	4891575	Identifier	rbuf		4891496	1					
ANR	4891576	CallExpression	r_buf_new_sparse ( io -> Oxff )		4891496	1					
ANR	4891577	Callee	r_buf_new_sparse		4891496	0					
ANR	4891578	Identifier	r_buf_new_sparse		4891496	0					
ANR	4891579	ArgumentList	io -> Oxff		4891496	1					
ANR	4891580	Argument	io -> Oxff		4891496	0					
ANR	4891581	PtrMemberAccess	io -> Oxff		4891496	0					
ANR	4891582	Identifier	io		4891496	0					
ANR	4891583	Identifier	Oxff		4891496	1					
ANR	4891584	IfStatement	if ( ! mal -> rbuf )		4891496	5					
ANR	4891585	Condition	! mal -> rbuf	400:6:10306:10315	4891496	0	True				
ANR	4891586	UnaryOperationExpression	! mal -> rbuf		4891496	0					
ANR	4891587	UnaryOperator	!		4891496	0					
ANR	4891588	PtrMemberAccess	mal -> rbuf		4891496	1					
ANR	4891589	Identifier	mal		4891496	0					
ANR	4891590	Identifier	rbuf		4891496	1					
ANR	4891591	CompoundStatement		15:18:291:291	4891496	1					
ANR	4891592	ExpressionStatement	free ( str )	401:3:10323:10333	4891496	0	True				
ANR	4891593	CallExpression	free ( str )		4891496	0					
ANR	4891594	Callee	free		4891496	0					
ANR	4891595	Identifier	free		4891496	0					
ANR	4891596	ArgumentList	str		4891496	1					
ANR	4891597	Argument	str		4891496	0					
ANR	4891598	Identifier	str		4891496	0					
ANR	4891599	ExpressionStatement	free ( mal )	402:3:10338:10348	4891496	1	True				
ANR	4891600	CallExpression	free ( mal )		4891496	0					
ANR	4891601	Callee	free		4891496	0					
ANR	4891602	Identifier	free		4891496	0					
ANR	4891603	ArgumentList	mal		4891496	1					
ANR	4891604	Argument	mal		4891496	0					
ANR	4891605	Identifier	mal		4891496	0					
ANR	4891606	ReturnStatement	return NULL ;	403:3:10353:10364	4891496	2	True				
ANR	4891607	Identifier	NULL		4891496	0					
ANR	4891608	IfStatement	"if ( ! ihex_parse ( mal -> rbuf , str ) )"		4891496	6					
ANR	4891609	Condition	"! ihex_parse ( mal -> rbuf , str )"	405:6:10376:10403	4891496	0	True				
ANR	4891610	UnaryOperationExpression	"! ihex_parse ( mal -> rbuf , str )"		4891496	0					
ANR	4891611	UnaryOperator	!		4891496	0					
ANR	4891612	CallExpression	"ihex_parse ( mal -> rbuf , str )"		4891496	1					
ANR	4891613	Callee	ihex_parse		4891496	0					
ANR	4891614	Identifier	ihex_parse		4891496	0					
ANR	4891615	ArgumentList	mal -> rbuf		4891496	1					
ANR	4891616	Argument	mal -> rbuf		4891496	0					
ANR	4891617	PtrMemberAccess	mal -> rbuf		4891496	0					
ANR	4891618	Identifier	mal		4891496	0					
ANR	4891619	Identifier	rbuf		4891496	1					
ANR	4891620	Argument	str		4891496	1					
ANR	4891621	Identifier	str		4891496	0					
ANR	4891622	CompoundStatement		20:36:379:379	4891496	1					
ANR	4891623	ExpressionStatement	"eprintf ( ""ihex: failed to parse file\\n"" )"	406:3:10411:10451	4891496	0	True				
ANR	4891624	CallExpression	"eprintf ( ""ihex: failed to parse file\\n"" )"		4891496	0					
ANR	4891625	Callee	eprintf		4891496	0					
ANR	4891626	Identifier	eprintf		4891496	0					
ANR	4891627	ArgumentList	"""ihex: failed to parse file\\n"""		4891496	1					
ANR	4891628	Argument	"""ihex: failed to parse file\\n"""		4891496	0					
ANR	4891629	PrimaryExpression	"""ihex: failed to parse file\\n"""		4891496	0					
ANR	4891630	ExpressionStatement	free ( str )	407:3:10456:10466	4891496	1	True				
ANR	4891631	CallExpression	free ( str )		4891496	0					
ANR	4891632	Callee	free		4891496	0					
ANR	4891633	Identifier	free		4891496	0					
ANR	4891634	ArgumentList	str		4891496	1					
ANR	4891635	Argument	str		4891496	0					
ANR	4891636	Identifier	str		4891496	0					
ANR	4891637	ExpressionStatement	r_buf_free ( mal -> rbuf )	408:3:10471:10493	4891496	2	True				
ANR	4891638	CallExpression	r_buf_free ( mal -> rbuf )		4891496	0					
ANR	4891639	Callee	r_buf_free		4891496	0					
ANR	4891640	Identifier	r_buf_free		4891496	0					
ANR	4891641	ArgumentList	mal -> rbuf		4891496	1					
ANR	4891642	Argument	mal -> rbuf		4891496	0					
ANR	4891643	PtrMemberAccess	mal -> rbuf		4891496	0					
ANR	4891644	Identifier	mal		4891496	0					
ANR	4891645	Identifier	rbuf		4891496	1					
ANR	4891646	ExpressionStatement	free ( mal )	409:3:10498:10508	4891496	3	True				
ANR	4891647	CallExpression	free ( mal )		4891496	0					
ANR	4891648	Callee	free		4891496	0					
ANR	4891649	Identifier	free		4891496	0					
ANR	4891650	ArgumentList	mal		4891496	1					
ANR	4891651	Argument	mal		4891496	0					
ANR	4891652	Identifier	mal		4891496	0					
ANR	4891653	ReturnStatement	return NULL ;	410:3:10513:10524	4891496	4	True				
ANR	4891654	Identifier	NULL		4891496	0					
ANR	4891655	ExpressionStatement	free ( str )	412:2:10532:10542	4891496	7	True				
ANR	4891656	CallExpression	free ( str )		4891496	0					
ANR	4891657	Callee	free		4891496	0					
ANR	4891658	Identifier	free		4891496	0					
ANR	4891659	ArgumentList	str		4891496	1					
ANR	4891660	Argument	str		4891496	0					
ANR	4891661	Identifier	str		4891496	0					
ANR	4891662	ReturnStatement	"return r_io_desc_new ( io , & r_io_plugin_ihex , pathname , rw , mode , mal ) ;"	413:2:10546:10618	4891496	8	True				
ANR	4891663	CallExpression	"r_io_desc_new ( io , & r_io_plugin_ihex , pathname , rw , mode , mal )"		4891496	0					
ANR	4891664	Callee	r_io_desc_new		4891496	0					
ANR	4891665	Identifier	r_io_desc_new		4891496	0					
ANR	4891666	ArgumentList	io		4891496	1					
ANR	4891667	Argument	io		4891496	0					
ANR	4891668	Identifier	io		4891496	0					
ANR	4891669	Argument	& r_io_plugin_ihex		4891496	1					
ANR	4891670	UnaryOperationExpression	& r_io_plugin_ihex		4891496	0					
ANR	4891671	UnaryOperator	&		4891496	0					
ANR	4891672	Identifier	r_io_plugin_ihex		4891496	1					
ANR	4891673	Argument	pathname		4891496	2					
ANR	4891674	Identifier	pathname		4891496	0					
ANR	4891675	Argument	rw		4891496	3					
ANR	4891676	Identifier	rw		4891496	0					
ANR	4891677	Argument	mode		4891496	4					
ANR	4891678	Identifier	mode		4891496	0					
ANR	4891679	Argument	mal		4891496	5					
ANR	4891680	Identifier	mal		4891496	0					
ANR	4891681	ReturnStatement	return NULL ;	416:1:10624:10635	4891496	3	True				
ANR	4891682	Identifier	NULL		4891496	0					
ANR	4891683	ReturnType	static RIODesc *		4891496	1					
ANR	4891684	Identifier	__open		4891496	2					
ANR	4891685	ParameterList	"RIO * io , const char * pathname , int rw , int mode"		4891496	3					
ANR	4891686	Parameter	RIO * io	386:23:9977:9983	4891496	0	True				
ANR	4891687	ParameterType	RIO *		4891496	0					
ANR	4891688	Identifier	io		4891496	1					
ANR	4891689	Parameter	const char * pathname	386:32:9986:10005	4891496	1	True				
ANR	4891690	ParameterType	const char *		4891496	0					
ANR	4891691	Identifier	pathname		4891496	1					
ANR	4891692	Parameter	int rw	386:54:10008:10013	4891496	2	True				
ANR	4891693	ParameterType	int		4891496	0					
ANR	4891694	Identifier	rw		4891496	1					
ANR	4891695	Parameter	int mode	386:62:10016:10023	4891496	3	True				
ANR	4891696	ParameterType	int		4891496	0					
ANR	4891697	Identifier	mode		4891496	1					
ANR	4891698	CFGEntryNode	ENTRY		4891496		True				
ANR	4891699	CFGExitNode	EXIT		4891496		True				
ANR	4891700	Symbol	io -> Oxff		4891496						
ANR	4891701	Symbol	r_file_slurp		4891496						
ANR	4891702	Symbol	* mal		4891496						
ANR	4891703	Symbol	NULL		4891496						
ANR	4891704	Symbol	rw		4891496						
ANR	4891705	Symbol	ihex_parse		4891496						
ANR	4891706	Symbol	io		4891496						
ANR	4891707	Symbol	r_buf_new_sparse		4891496						
ANR	4891708	Symbol	r_io_desc_new		4891496						
ANR	4891709	Symbol	pathname		4891496						
ANR	4891710	Symbol	* io		4891496						
ANR	4891711	Symbol	mode		4891496						
ANR	4891712	Symbol	str		4891496						
ANR	4891713	Symbol	Rihex		4891496						
ANR	4891714	Symbol	__plugin_open		4891496						
ANR	4891715	Symbol	R_NEW0		4891496						
ANR	4891716	Symbol	mal		4891496						
ANR	4891717	Symbol	mal -> rbuf		4891496						
ANR	4891718	Symbol	& r_io_plugin_ihex		4891496						
ANR	4891719	Function	__resize	419:0:10640:10822							
ANR	4891720	FunctionDef	"__resize (RIO * io , RIODesc * fd , ut64 size)"		4891719	0					
ANR	4891721	CompoundStatement		419:54:10694:10822	4891719	0					
ANR	4891722	IfStatement	if ( ! fd )		4891719	0					
ANR	4891723	Condition	! fd	420:5:10701:10703	4891719	0	True				
ANR	4891724	UnaryOperationExpression	! fd		4891719	0					
ANR	4891725	UnaryOperator	!		4891719	0					
ANR	4891726	Identifier	fd		4891719	1					
ANR	4891727	CompoundStatement		2:10:11:11	4891719	1					
ANR	4891728	ReturnStatement	return false ;	421:2:10710:10722	4891719	0	True				
ANR	4891729	Identifier	false		4891719	0					
ANR	4891730	IdentifierDeclStatement	Rihex * rih = fd -> data ;	423:1:10728:10749	4891719	1	True				
ANR	4891731	IdentifierDecl	* rih = fd -> data		4891719	0					
ANR	4891732	IdentifierDeclType	Rihex *		4891719	0					
ANR	4891733	Identifier	rih		4891719	1					
ANR	4891734	AssignmentExpression	* rih = fd -> data		4891719	2		=			
ANR	4891735	Identifier	rih		4891719	0					
ANR	4891736	PtrMemberAccess	fd -> data		4891719	1					
ANR	4891737	Identifier	fd		4891719	0					
ANR	4891738	Identifier	data		4891719	1					
ANR	4891739	IfStatement	if ( rih )		4891719	2					
ANR	4891740	Condition	rih	424:5:10756:10758	4891719	0	True				
ANR	4891741	Identifier	rih		4891719	0					
ANR	4891742	CompoundStatement		6:10:66:66	4891719	1					
ANR	4891743	ReturnStatement	"return r_buf_resize ( rih -> rbuf , size ) ;"	425:2:10765:10802	4891719	0	True				
ANR	4891744	CallExpression	"r_buf_resize ( rih -> rbuf , size )"		4891719	0					
ANR	4891745	Callee	r_buf_resize		4891719	0					
ANR	4891746	Identifier	r_buf_resize		4891719	0					
ANR	4891747	ArgumentList	rih -> rbuf		4891719	1					
ANR	4891748	Argument	rih -> rbuf		4891719	0					
ANR	4891749	PtrMemberAccess	rih -> rbuf		4891719	0					
ANR	4891750	Identifier	rih		4891719	0					
ANR	4891751	Identifier	rbuf		4891719	1					
ANR	4891752	Argument	size		4891719	1					
ANR	4891753	Identifier	size		4891719	0					
ANR	4891754	ReturnStatement	return false ;	427:1:10808:10820	4891719	3	True				
ANR	4891755	Identifier	false		4891719	0					
ANR	4891756	ReturnType	static bool		4891719	1					
ANR	4891757	Identifier	__resize		4891719	2					
ANR	4891758	ParameterList	"RIO * io , RIODesc * fd , ut64 size"		4891719	3					
ANR	4891759	Parameter	RIO * io	419:21:10661:10667	4891719	0	True				
ANR	4891760	ParameterType	RIO *		4891719	0					
ANR	4891761	Identifier	io		4891719	1					
ANR	4891762	Parameter	RIODesc * fd	419:30:10670:10680	4891719	1	True				
ANR	4891763	ParameterType	RIODesc *		4891719	0					
ANR	4891764	Identifier	fd		4891719	1					
ANR	4891765	Parameter	ut64 size	419:43:10683:10691	4891719	2	True				
ANR	4891766	ParameterType	ut64		4891719	0					
ANR	4891767	Identifier	size		4891719	1					
ANR	4891768	CFGEntryNode	ENTRY		4891719		True				
ANR	4891769	CFGExitNode	EXIT		4891719		True				
ANR	4891770	Symbol	rih		4891719						
ANR	4891771	Symbol	size		4891719						
ANR	4891772	Symbol	io		4891719						
ANR	4891773	Symbol	* fd		4891719						
ANR	4891774	Symbol	rih -> rbuf		4891719						
ANR	4891775	Symbol	false		4891719						
ANR	4891776	Symbol	* rih		4891719						
ANR	4891777	Symbol	fd -> data		4891719						
ANR	4891778	Symbol	fd		4891719						
ANR	4891779	Symbol	r_buf_resize		4891719						
ANR	4891780	DeclStmt									
ANR	4891781	Decl							RIOPlugin	RIOPlugin	r_io_plugin_ihex
ANR	4891782	DeclStmt									
ANR	4891783	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
