command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6641147	File	data/converged/CVE-2019-16718~_radare2/zip_source_crc.c								
ANR	6641148	ClassDef	crc_context	41:0:1715:1826							
ANR	6641149	DeclStmt									
ANR	6641150	Decl							int	int	eof
ANR	6641151	DeclStmt									
ANR	6641152	Decl							int	int	validate
ANR	6641153	DeclStmt									
ANR	6641154	Decl							int	int [ 2 ]	e
ANR	6641155	DeclStmt									
ANR	6641156	Decl							zip_uint64_t	zip_uint64_t	size
ANR	6641157	DeclStmt									
ANR	6641158	Decl							zip_uint32_t	zip_uint32_t	crc
ANR	6641159	DeclStmt									
ANR	6641160	Decl							zip_int64_t	"zip_int64_t ( struct zip_source * , void * , void * , zip_uint64_t , enum zip_source_cmd )"	crc_read
ANR	6641161	Function	zip_source_crc	54:0:1943:2466							
ANR	6641162	FunctionDef	"zip_source_crc (struct zip * za , struct zip_source * src , int validate)"		6641161	0					
ANR	6641163	CompoundStatement		56:0:2032:2466	6641161	0					
ANR	6641164	IdentifierDeclStatement	struct crc_context * ctx ;	57:4:2038:2061	6641161	0	True				
ANR	6641165	IdentifierDecl	* ctx		6641161	0					
ANR	6641166	IdentifierDeclType	struct crc_context *		6641161	0					
ANR	6641167	Identifier	ctx		6641161	1					
ANR	6641168	IfStatement	if ( src == NULL )		6641161	1					
ANR	6641169	Condition	src == NULL	59:8:2072:2082	6641161	0	True				
ANR	6641170	EqualityExpression	src == NULL		6641161	0		==			
ANR	6641171	Identifier	src		6641161	0					
ANR	6641172	Identifier	NULL		6641161	1					
ANR	6641173	CompoundStatement		4:21:52:52	6641161	1					
ANR	6641174	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_INVAL , 0 )"	60:1:2088:2131	6641161	0	True				
ANR	6641175	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_INVAL , 0 )"		6641161	0					
ANR	6641176	Callee	_zip_error_set		6641161	0					
ANR	6641177	Identifier	_zip_error_set		6641161	0					
ANR	6641178	ArgumentList	& za -> error		6641161	1					
ANR	6641179	Argument	& za -> error		6641161	0					
ANR	6641180	UnaryOperationExpression	& za -> error		6641161	0					
ANR	6641181	UnaryOperator	&		6641161	0					
ANR	6641182	PtrMemberAccess	za -> error		6641161	1					
ANR	6641183	Identifier	za		6641161	0					
ANR	6641184	Identifier	error		6641161	1					
ANR	6641185	Argument	ZIP_ER_INVAL		6641161	1					
ANR	6641186	Identifier	ZIP_ER_INVAL		6641161	0					
ANR	6641187	Argument	0		6641161	2					
ANR	6641188	PrimaryExpression	0		6641161	0					
ANR	6641189	ReturnStatement	return NULL ;	61:1:2134:2145	6641161	1	True				
ANR	6641190	Identifier	NULL		6641161	0					
ANR	6641191	IfStatement	if ( ( ctx = ( struct crc_context * ) malloc ( sizeof ( * ctx ) ) ) == NULL )		6641161	2					
ANR	6641192	Condition	( ctx = ( struct crc_context * ) malloc ( sizeof ( * ctx ) ) ) == NULL	64:8:2162:2217	6641161	0	True				
ANR	6641193	EqualityExpression	( ctx = ( struct crc_context * ) malloc ( sizeof ( * ctx ) ) ) == NULL		6641161	0		==			
ANR	6641194	AssignmentExpression	ctx = ( struct crc_context * ) malloc ( sizeof ( * ctx ) )		6641161	0		=			
ANR	6641195	Identifier	ctx		6641161	0					
ANR	6641196	CastExpression	( struct crc_context * ) malloc ( sizeof ( * ctx ) )		6641161	1					
ANR	6641197	CastTarget	struct crc_context *		6641161	0					
ANR	6641198	CallExpression	malloc ( sizeof ( * ctx ) )		6641161	1					
ANR	6641199	Callee	malloc		6641161	0					
ANR	6641200	Identifier	malloc		6641161	0					
ANR	6641201	ArgumentList	sizeof ( * ctx )		6641161	1					
ANR	6641202	Argument	sizeof ( * ctx )		6641161	0					
ANR	6641203	SizeofExpression	sizeof ( * ctx )		6641161	0					
ANR	6641204	Sizeof	sizeof		6641161	0					
ANR	6641205	UnaryOperationExpression	* ctx		6641161	1					
ANR	6641206	UnaryOperator	*		6641161	0					
ANR	6641207	Identifier	ctx		6641161	1					
ANR	6641208	Identifier	NULL		6641161	1					
ANR	6641209	CompoundStatement		9:66:187:187	6641161	1					
ANR	6641210	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"	65:1:2223:2267	6641161	0	True				
ANR	6641211	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"		6641161	0					
ANR	6641212	Callee	_zip_error_set		6641161	0					
ANR	6641213	Identifier	_zip_error_set		6641161	0					
ANR	6641214	ArgumentList	& za -> error		6641161	1					
ANR	6641215	Argument	& za -> error		6641161	0					
ANR	6641216	UnaryOperationExpression	& za -> error		6641161	0					
ANR	6641217	UnaryOperator	&		6641161	0					
ANR	6641218	PtrMemberAccess	za -> error		6641161	1					
ANR	6641219	Identifier	za		6641161	0					
ANR	6641220	Identifier	error		6641161	1					
ANR	6641221	Argument	ZIP_ER_MEMORY		6641161	1					
ANR	6641222	Identifier	ZIP_ER_MEMORY		6641161	0					
ANR	6641223	Argument	0		6641161	2					
ANR	6641224	PrimaryExpression	0		6641161	0					
ANR	6641225	ReturnStatement	return NULL ;	66:1:2270:2281	6641161	1	True				
ANR	6641226	Identifier	NULL		6641161	0					
ANR	6641227	ExpressionStatement	ctx -> eof = 0	69:4:2294:2306	6641161	3	True				
ANR	6641228	AssignmentExpression	ctx -> eof = 0		6641161	0		=			
ANR	6641229	PtrMemberAccess	ctx -> eof		6641161	0					
ANR	6641230	Identifier	ctx		6641161	0					
ANR	6641231	Identifier	eof		6641161	1					
ANR	6641232	PrimaryExpression	0		6641161	1					
ANR	6641233	ExpressionStatement	ctx -> validate = validate	70:4:2312:2336	6641161	4	True				
ANR	6641234	AssignmentExpression	ctx -> validate = validate		6641161	0		=			
ANR	6641235	PtrMemberAccess	ctx -> validate		6641161	0					
ANR	6641236	Identifier	ctx		6641161	0					
ANR	6641237	Identifier	validate		6641161	1					
ANR	6641238	Identifier	validate		6641161	1					
ANR	6641239	ExpressionStatement	ctx -> e [ 0 ] = ctx -> e [ 1 ] = 0	71:4:2342:2367	6641161	5	True				
ANR	6641240	AssignmentExpression	ctx -> e [ 0 ] = ctx -> e [ 1 ] = 0		6641161	0		=			
ANR	6641241	ArrayIndexing	ctx -> e [ 0 ]		6641161	0					
ANR	6641242	PtrMemberAccess	ctx -> e		6641161	0					
ANR	6641243	Identifier	ctx		6641161	0					
ANR	6641244	Identifier	e		6641161	1					
ANR	6641245	PrimaryExpression	0		6641161	1					
ANR	6641246	AssignmentExpression	ctx -> e [ 1 ] = 0		6641161	1		=			
ANR	6641247	ArrayIndexing	ctx -> e [ 1 ]		6641161	0					
ANR	6641248	PtrMemberAccess	ctx -> e		6641161	0					
ANR	6641249	Identifier	ctx		6641161	0					
ANR	6641250	Identifier	e		6641161	1					
ANR	6641251	PrimaryExpression	1		6641161	1					
ANR	6641252	PrimaryExpression	0		6641161	1					
ANR	6641253	ExpressionStatement	ctx -> size = 0	72:4:2373:2386	6641161	6	True				
ANR	6641254	AssignmentExpression	ctx -> size = 0		6641161	0		=			
ANR	6641255	PtrMemberAccess	ctx -> size		6641161	0					
ANR	6641256	Identifier	ctx		6641161	0					
ANR	6641257	Identifier	size		6641161	1					
ANR	6641258	PrimaryExpression	0		6641161	1					
ANR	6641259	ExpressionStatement	ctx -> crc = 0	73:4:2392:2404	6641161	7	True				
ANR	6641260	AssignmentExpression	ctx -> crc = 0		6641161	0		=			
ANR	6641261	PtrMemberAccess	ctx -> crc		6641161	0					
ANR	6641262	Identifier	ctx		6641161	0					
ANR	6641263	Identifier	crc		6641161	1					
ANR	6641264	PrimaryExpression	0		6641161	1					
ANR	6641265	ReturnStatement	"return zip_source_layered ( za , src , crc_read , ctx ) ;"	75:4:2415:2464	6641161	8	True				
ANR	6641266	CallExpression	"zip_source_layered ( za , src , crc_read , ctx )"		6641161	0					
ANR	6641267	Callee	zip_source_layered		6641161	0					
ANR	6641268	Identifier	zip_source_layered		6641161	0					
ANR	6641269	ArgumentList	za		6641161	1					
ANR	6641270	Argument	za		6641161	0					
ANR	6641271	Identifier	za		6641161	0					
ANR	6641272	Argument	src		6641161	1					
ANR	6641273	Identifier	src		6641161	0					
ANR	6641274	Argument	crc_read		6641161	2					
ANR	6641275	Identifier	crc_read		6641161	0					
ANR	6641276	Argument	ctx		6641161	3					
ANR	6641277	Identifier	ctx		6641161	0					
ANR	6641278	ReturnType	struct zip_source *		6641161	1					
ANR	6641279	Identifier	zip_source_crc		6641161	2					
ANR	6641280	ParameterList	"struct zip * za , struct zip_source * src , int validate"		6641161	3					
ANR	6641281	Parameter	struct zip * za	55:15:1978:1991	6641161	0	True				
ANR	6641282	ParameterType	struct zip *		6641161	0					
ANR	6641283	Identifier	za		6641161	1					
ANR	6641284	Parameter	struct zip_source * src	55:31:1994:2015	6641161	1	True				
ANR	6641285	ParameterType	struct zip_source *		6641161	0					
ANR	6641286	Identifier	src		6641161	1					
ANR	6641287	Parameter	int validate	55:55:2018:2029	6641161	2	True				
ANR	6641288	ParameterType	int		6641161	0					
ANR	6641289	Identifier	validate		6641161	1					
ANR	6641290	CFGEntryNode	ENTRY		6641161		True				
ANR	6641291	CFGExitNode	EXIT		6641161		True				
ANR	6641292	Symbol	ctx -> validate		6641161						
ANR	6641293	Symbol	malloc		6641161						
ANR	6641294	Symbol	NULL		6641161						
ANR	6641295	Symbol	src		6641161						
ANR	6641296	Symbol	& za -> error		6641161						
ANR	6641297	Symbol	ctx		6641161						
ANR	6641298	Symbol	za		6641161						
ANR	6641299	Symbol	ctx -> eof		6641161						
ANR	6641300	Symbol	ctx -> e		6641161						
ANR	6641301	Symbol	* ctx		6641161						
ANR	6641302	Symbol	ZIP_ER_INVAL		6641161						
ANR	6641303	Symbol	zip_source_layered		6641161						
ANR	6641304	Symbol	ctx -> size		6641161						
ANR	6641305	Symbol	* ctx -> e		6641161						
ANR	6641306	Symbol	* * ctx		6641161						
ANR	6641307	Symbol	crc_read		6641161						
ANR	6641308	Symbol	ZIP_ER_MEMORY		6641161						
ANR	6641309	Symbol	validate		6641161						
ANR	6641310	Symbol	ctx -> crc		6641161						
ANR	6641311	Function	crc_read	80:0:2472:4328							
ANR	6641312	FunctionDef	"crc_read (struct zip_source * src , void * _ctx , void * data , zip_uint64_t len , enum zip_source_cmd cmd)"		6641311	0					
ANR	6641313	CompoundStatement		83:0:2593:4328	6641311	0					
ANR	6641314	IdentifierDeclStatement	struct crc_context * ctx ;	84:4:2599:2622	6641311	0	True				
ANR	6641315	IdentifierDecl	* ctx		6641311	0					
ANR	6641316	IdentifierDeclType	struct crc_context *		6641311	0					
ANR	6641317	Identifier	ctx		6641311	1					
ANR	6641318	IdentifierDeclStatement	zip_int64_t n ;	85:4:2628:2641	6641311	1	True				
ANR	6641319	IdentifierDecl	n		6641311	0					
ANR	6641320	IdentifierDeclType	zip_int64_t		6641311	0					
ANR	6641321	Identifier	n		6641311	1					
ANR	6641322	ExpressionStatement	ctx = ( struct crc_context * ) _ctx	87:4:2648:2680	6641311	2	True				
ANR	6641323	AssignmentExpression	ctx = ( struct crc_context * ) _ctx		6641311	0		=			
ANR	6641324	Identifier	ctx		6641311	0					
ANR	6641325	CastExpression	( struct crc_context * ) _ctx		6641311	1					
ANR	6641326	CastTarget	struct crc_context *		6641311	0					
ANR	6641327	Identifier	_ctx		6641311	1					
ANR	6641328	SwitchStatement	switch ( cmd )		6641311	3					
ANR	6641329	Condition	cmd	89:12:2695:2697	6641311	0	True				
ANR	6641330	Identifier	cmd		6641311	0					
ANR	6641331	CompoundStatement		7:17:106:106	6641311	1					
ANR	6641332	Label	case ZIP_SOURCE_OPEN :	90:4:2706:2726	6641311	0	True				
ANR	6641333	Identifier	ZIP_SOURCE_OPEN		6641311	0					
ANR	6641334	ExpressionStatement	ctx -> eof = 0	91:1:2729:2741	6641311	1	True				
ANR	6641335	AssignmentExpression	ctx -> eof = 0		6641311	0		=			
ANR	6641336	PtrMemberAccess	ctx -> eof		6641311	0					
ANR	6641337	Identifier	ctx		6641311	0					
ANR	6641338	Identifier	eof		6641311	1					
ANR	6641339	PrimaryExpression	0		6641311	1					
ANR	6641340	ExpressionStatement	"ctx -> crc = ( zip_uint32_t ) crc32 ( 0 , NULL , 0 )"	92:1:2744:2786	6641311	2	True				
ANR	6641341	AssignmentExpression	"ctx -> crc = ( zip_uint32_t ) crc32 ( 0 , NULL , 0 )"		6641311	0		=			
ANR	6641342	PtrMemberAccess	ctx -> crc		6641311	0					
ANR	6641343	Identifier	ctx		6641311	0					
ANR	6641344	Identifier	crc		6641311	1					
ANR	6641345	CastExpression	"( zip_uint32_t ) crc32 ( 0 , NULL , 0 )"		6641311	1					
ANR	6641346	CastTarget	zip_uint32_t		6641311	0					
ANR	6641347	CallExpression	"crc32 ( 0 , NULL , 0 )"		6641311	1					
ANR	6641348	Callee	crc32		6641311	0					
ANR	6641349	Identifier	crc32		6641311	0					
ANR	6641350	ArgumentList	0		6641311	1					
ANR	6641351	Argument	0		6641311	0					
ANR	6641352	PrimaryExpression	0		6641311	0					
ANR	6641353	Argument	NULL		6641311	1					
ANR	6641354	Identifier	NULL		6641311	0					
ANR	6641355	Argument	0		6641311	2					
ANR	6641356	PrimaryExpression	0		6641311	0					
ANR	6641357	ExpressionStatement	ctx -> size = 0	93:1:2789:2802	6641311	3	True				
ANR	6641358	AssignmentExpression	ctx -> size = 0		6641311	0		=			
ANR	6641359	PtrMemberAccess	ctx -> size		6641311	0					
ANR	6641360	Identifier	ctx		6641311	0					
ANR	6641361	Identifier	size		6641311	1					
ANR	6641362	PrimaryExpression	0		6641311	1					
ANR	6641363	ReturnStatement	return 0 ;	95:1:2806:2814	6641311	4	True				
ANR	6641364	PrimaryExpression	0		6641311	0					
ANR	6641365	Label	case ZIP_SOURCE_READ :	97:4:2821:2841	6641311	5	True				
ANR	6641366	Identifier	ZIP_SOURCE_READ		6641311	0					
ANR	6641367	IfStatement	if ( ctx -> eof || len == 0 )		6641311	6					
ANR	6641368	Condition	ctx -> eof || len == 0	98:5:2848:2867	6641311	0	True				
ANR	6641369	OrExpression	ctx -> eof || len == 0		6641311	0		||			
ANR	6641370	PtrMemberAccess	ctx -> eof		6641311	0					
ANR	6641371	Identifier	ctx		6641311	0					
ANR	6641372	Identifier	eof		6641311	1					
ANR	6641373	EqualityExpression	len == 0		6641311	1		==			
ANR	6641374	Identifier	len		6641311	0					
ANR	6641375	PrimaryExpression	0		6641311	1					
ANR	6641376	ReturnStatement	return 0 ;	99:5:2875:2883	6641311	1	True				
ANR	6641377	PrimaryExpression	0		6641311	0					
ANR	6641378	IfStatement	"if ( ( n = zip_source_read ( src , data , len ) ) < 0 )"		6641311	7					
ANR	6641379	Condition	"( n = zip_source_read ( src , data , len ) ) < 0"	101:5:2891:2929	6641311	0	True				
ANR	6641380	RelationalExpression	"( n = zip_source_read ( src , data , len ) ) < 0"		6641311	0		<			
ANR	6641381	AssignmentExpression	"n = zip_source_read ( src , data , len )"		6641311	0		=			
ANR	6641382	Identifier	n		6641311	0					
ANR	6641383	CallExpression	"zip_source_read ( src , data , len )"		6641311	1					
ANR	6641384	Callee	zip_source_read		6641311	0					
ANR	6641385	Identifier	zip_source_read		6641311	0					
ANR	6641386	ArgumentList	src		6641311	1					
ANR	6641387	Argument	src		6641311	0					
ANR	6641388	Identifier	src		6641311	0					
ANR	6641389	Argument	data		6641311	1					
ANR	6641390	Identifier	data		6641311	0					
ANR	6641391	Argument	len		6641311	2					
ANR	6641392	Identifier	len		6641311	0					
ANR	6641393	PrimaryExpression	0		6641311	1					
ANR	6641394	ReturnStatement	return ZIP_SOURCE_ERR_LOWER ;	102:5:2937:2964	6641311	1	True				
ANR	6641395	Identifier	ZIP_SOURCE_ERR_LOWER		6641311	0					
ANR	6641396	IfStatement	if ( n == 0 )		6641311	8					
ANR	6641397	Condition	n == 0	104:5:2972:2977	6641311	0	True				
ANR	6641398	EqualityExpression	n == 0		6641311	0		==			
ANR	6641399	Identifier	n		6641311	0					
ANR	6641400	PrimaryExpression	0		6641311	1					
ANR	6641401	CompoundStatement		22:13:386:386	6641311	1					
ANR	6641402	ExpressionStatement	ctx -> eof = 1	105:5:2987:2999	6641311	0	True				
ANR	6641403	AssignmentExpression	ctx -> eof = 1		6641311	0		=			
ANR	6641404	PtrMemberAccess	ctx -> eof		6641311	0					
ANR	6641405	Identifier	ctx		6641311	0					
ANR	6641406	Identifier	eof		6641311	1					
ANR	6641407	PrimaryExpression	1		6641311	1					
ANR	6641408	IfStatement	if ( ctx -> validate )		6641311	1					
ANR	6641409	Condition	ctx -> validate	106:9:3010:3022	6641311	0	True				
ANR	6641410	PtrMemberAccess	ctx -> validate		6641311	0					
ANR	6641411	Identifier	ctx		6641311	0					
ANR	6641412	Identifier	validate		6641311	1					
ANR	6641413	CompoundStatement		25:2:435:453	6641311	1					
ANR	6641414	IdentifierDeclStatement	struct zip_stat st ;	107:2:3029:3047	6641311	0	True				
ANR	6641415	IdentifierDecl	st		6641311	0					
ANR	6641416	IdentifierDeclType	struct zip_stat		6641311	0					
ANR	6641417	Identifier	st		6641311	1					
ANR	6641418	IfStatement	"if ( zip_source_stat ( src , & st ) < 0 )"		6641311	1					
ANR	6641419	Condition	"zip_source_stat ( src , & st ) < 0"	109:6:3056:3084	6641311	0	True				
ANR	6641420	RelationalExpression	"zip_source_stat ( src , & st ) < 0"		6641311	0		<			
ANR	6641421	CallExpression	"zip_source_stat ( src , & st )"		6641311	0					
ANR	6641422	Callee	zip_source_stat		6641311	0					
ANR	6641423	Identifier	zip_source_stat		6641311	0					
ANR	6641424	ArgumentList	src		6641311	1					
ANR	6641425	Argument	src		6641311	0					
ANR	6641426	Identifier	src		6641311	0					
ANR	6641427	Argument	& st		6641311	1					
ANR	6641428	UnaryOperationExpression	& st		6641311	0					
ANR	6641429	UnaryOperator	&		6641311	0					
ANR	6641430	Identifier	st		6641311	1					
ANR	6641431	PrimaryExpression	0		6641311	1					
ANR	6641432	ReturnStatement	return ZIP_SOURCE_ERR_LOWER ;	110:6:3093:3120	6641311	1	True				
ANR	6641433	Identifier	ZIP_SOURCE_ERR_LOWER		6641311	0					
ANR	6641434	IfStatement	if ( ( st . valid & ZIP_STAT_CRC ) && st . crc != ctx -> crc )		6641311	2					
ANR	6641435	Condition	( st . valid & ZIP_STAT_CRC ) && st . crc != ctx -> crc	112:6:3129:3175	6641311	0	True				
ANR	6641436	AndExpression	( st . valid & ZIP_STAT_CRC ) && st . crc != ctx -> crc		6641311	0		&&			
ANR	6641437	BitAndExpression	st . valid & ZIP_STAT_CRC		6641311	0		&			
ANR	6641438	MemberAccess	st . valid		6641311	0					
ANR	6641439	Identifier	st		6641311	0					
ANR	6641440	Identifier	valid		6641311	1					
ANR	6641441	Identifier	ZIP_STAT_CRC		6641311	1					
ANR	6641442	EqualityExpression	st . crc != ctx -> crc		6641311	1		!=			
ANR	6641443	MemberAccess	st . crc		6641311	0					
ANR	6641444	Identifier	st		6641311	0					
ANR	6641445	Identifier	crc		6641311	1					
ANR	6641446	PtrMemberAccess	ctx -> crc		6641311	1					
ANR	6641447	Identifier	ctx		6641311	0					
ANR	6641448	Identifier	crc		6641311	1					
ANR	6641449	CompoundStatement		30:55:584:584	6641311	1					
ANR	6641450	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_CRC	113:6:3186:3208	6641311	0	True				
ANR	6641451	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_CRC		6641311	0		=			
ANR	6641452	ArrayIndexing	ctx -> e [ 0 ]		6641311	0					
ANR	6641453	PtrMemberAccess	ctx -> e		6641311	0					
ANR	6641454	Identifier	ctx		6641311	0					
ANR	6641455	Identifier	e		6641311	1					
ANR	6641456	PrimaryExpression	0		6641311	1					
ANR	6641457	Identifier	ZIP_ER_CRC		6641311	1					
ANR	6641458	ExpressionStatement	ctx -> e [ 1 ] = 0	114:6:3216:3229	6641311	1	True				
ANR	6641459	AssignmentExpression	ctx -> e [ 1 ] = 0		6641311	0		=			
ANR	6641460	ArrayIndexing	ctx -> e [ 1 ]		6641311	0					
ANR	6641461	PtrMemberAccess	ctx -> e		6641311	0					
ANR	6641462	Identifier	ctx		6641311	0					
ANR	6641463	Identifier	e		6641311	1					
ANR	6641464	PrimaryExpression	1		6641311	1					
ANR	6641465	PrimaryExpression	0		6641311	1					
ANR	6641466	ReturnStatement	return - 1 ;	116:6:3244:3253	6641311	2	True				
ANR	6641467	UnaryOperationExpression	- 1		6641311	0					
ANR	6641468	UnaryOperator	-		6641311	0					
ANR	6641469	PrimaryExpression	1		6641311	1					
ANR	6641470	IfStatement	if ( ( st . valid & ZIP_STAT_SIZE ) && st . size != ctx -> size )		6641311	3					
ANR	6641471	Condition	( st . valid & ZIP_STAT_SIZE ) && st . size != ctx -> size	118:6:3265:3314	6641311	0	True				
ANR	6641472	AndExpression	( st . valid & ZIP_STAT_SIZE ) && st . size != ctx -> size		6641311	0		&&			
ANR	6641473	BitAndExpression	st . valid & ZIP_STAT_SIZE		6641311	0		&			
ANR	6641474	MemberAccess	st . valid		6641311	0					
ANR	6641475	Identifier	st		6641311	0					
ANR	6641476	Identifier	valid		6641311	1					
ANR	6641477	Identifier	ZIP_STAT_SIZE		6641311	1					
ANR	6641478	EqualityExpression	st . size != ctx -> size		6641311	1		!=			
ANR	6641479	MemberAccess	st . size		6641311	0					
ANR	6641480	Identifier	st		6641311	0					
ANR	6641481	Identifier	size		6641311	1					
ANR	6641482	PtrMemberAccess	ctx -> size		6641311	1					
ANR	6641483	Identifier	ctx		6641311	0					
ANR	6641484	Identifier	size		6641311	1					
ANR	6641485	CompoundStatement		36:58:723:723	6641311	1					
ANR	6641486	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_INCONS	119:6:3325:3350	6641311	0	True				
ANR	6641487	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_INCONS		6641311	0		=			
ANR	6641488	ArrayIndexing	ctx -> e [ 0 ]		6641311	0					
ANR	6641489	PtrMemberAccess	ctx -> e		6641311	0					
ANR	6641490	Identifier	ctx		6641311	0					
ANR	6641491	Identifier	e		6641311	1					
ANR	6641492	PrimaryExpression	0		6641311	1					
ANR	6641493	Identifier	ZIP_ER_INCONS		6641311	1					
ANR	6641494	ExpressionStatement	ctx -> e [ 1 ] = 0	120:6:3358:3371	6641311	1	True				
ANR	6641495	AssignmentExpression	ctx -> e [ 1 ] = 0		6641311	0		=			
ANR	6641496	ArrayIndexing	ctx -> e [ 1 ]		6641311	0					
ANR	6641497	PtrMemberAccess	ctx -> e		6641311	0					
ANR	6641498	Identifier	ctx		6641311	0					
ANR	6641499	Identifier	e		6641311	1					
ANR	6641500	PrimaryExpression	1		6641311	1					
ANR	6641501	PrimaryExpression	0		6641311	1					
ANR	6641502	ReturnStatement	return - 1 ;	122:6:3386:3395	6641311	2	True				
ANR	6641503	UnaryOperationExpression	- 1		6641311	0					
ANR	6641504	UnaryOperator	-		6641311	0					
ANR	6641505	PrimaryExpression	1		6641311	1					
ANR	6641506	ElseStatement	else		6641311	0					
ANR	6641507	CompoundStatement		44:6:823:823	6641311	0					
ANR	6641508	ExpressionStatement	ctx -> size += ( zip_uint64_t ) n	127:5:3424:3452	6641311	0	True				
ANR	6641509	AssignmentExpression	ctx -> size += ( zip_uint64_t ) n		6641311	0		+=			
ANR	6641510	PtrMemberAccess	ctx -> size		6641311	0					
ANR	6641511	Identifier	ctx		6641311	0					
ANR	6641512	Identifier	size		6641311	1					
ANR	6641513	CastExpression	( zip_uint64_t ) n		6641311	1					
ANR	6641514	CastTarget	zip_uint64_t		6641311	0					
ANR	6641515	Identifier	n		6641311	1					
ANR	6641516	ExpressionStatement	"ctx -> crc = ( zip_uint32_t ) crc32 ( ctx -> crc , ( const Bytef * ) data , ( uInt ) n )"	128:5:3459:3529	6641311	1	True				
ANR	6641517	AssignmentExpression	"ctx -> crc = ( zip_uint32_t ) crc32 ( ctx -> crc , ( const Bytef * ) data , ( uInt ) n )"		6641311	0		=			
ANR	6641518	PtrMemberAccess	ctx -> crc		6641311	0					
ANR	6641519	Identifier	ctx		6641311	0					
ANR	6641520	Identifier	crc		6641311	1					
ANR	6641521	CastExpression	"( zip_uint32_t ) crc32 ( ctx -> crc , ( const Bytef * ) data , ( uInt ) n )"		6641311	1					
ANR	6641522	CastTarget	zip_uint32_t		6641311	0					
ANR	6641523	CallExpression	"crc32 ( ctx -> crc , ( const Bytef * ) data , ( uInt ) n )"		6641311	1					
ANR	6641524	Callee	crc32		6641311	0					
ANR	6641525	Identifier	crc32		6641311	0					
ANR	6641526	ArgumentList	ctx -> crc		6641311	1					
ANR	6641527	Argument	ctx -> crc		6641311	0					
ANR	6641528	PtrMemberAccess	ctx -> crc		6641311	0					
ANR	6641529	Identifier	ctx		6641311	0					
ANR	6641530	Identifier	crc		6641311	1					
ANR	6641531	Argument	( const Bytef * ) data		6641311	1					
ANR	6641532	CastExpression	( const Bytef * ) data		6641311	0					
ANR	6641533	CastTarget	const Bytef *		6641311	0					
ANR	6641534	Identifier	data		6641311	1					
ANR	6641535	Argument	( uInt ) n		6641311	2					
ANR	6641536	CastExpression	( uInt ) n		6641311	0					
ANR	6641537	CastTarget	uInt		6641311	0					
ANR	6641538	Identifier	n		6641311	1					
ANR	6641539	ReturnStatement	return n ;	130:1:3599:3607	6641311	9	True				
ANR	6641540	Identifier	n		6641311	0					
ANR	6641541	Label	case ZIP_SOURCE_CLOSE :	132:4:3614:3635	6641311	10	True				
ANR	6641542	Identifier	ZIP_SOURCE_CLOSE		6641311	0					
ANR	6641543	ReturnStatement	return 0 ;	133:1:3638:3646	6641311	11	True				
ANR	6641544	PrimaryExpression	0		6641311	0					
ANR	6641545	Label	case ZIP_SOURCE_STAT :	135:4:3653:3673	6641311	12	True				
ANR	6641546	Identifier	ZIP_SOURCE_STAT		6641311	0					
ANR	6641547	CompoundStatement		55:5:1089:1108	6641311	13					
ANR	6641548	IdentifierDeclStatement	struct zip_stat * st ;	137:5:3683:3702	6641311	0	True				
ANR	6641549	IdentifierDecl	* st		6641311	0					
ANR	6641550	IdentifierDeclType	struct zip_stat *		6641311	0					
ANR	6641551	Identifier	st		6641311	1					
ANR	6641552	ExpressionStatement	st = ( struct zip_stat * ) data	139:5:3710:3738	6641311	1	True				
ANR	6641553	AssignmentExpression	st = ( struct zip_stat * ) data		6641311	0		=			
ANR	6641554	Identifier	st		6641311	0					
ANR	6641555	CastExpression	( struct zip_stat * ) data		6641311	1					
ANR	6641556	CastTarget	struct zip_stat *		6641311	0					
ANR	6641557	Identifier	data		6641311	1					
ANR	6641558	IfStatement	if ( ctx -> eof )		6641311	2					
ANR	6641559	Condition	ctx -> eof	141:9:3750:3757	6641311	0	True				
ANR	6641560	PtrMemberAccess	ctx -> eof		6641311	0					
ANR	6641561	Identifier	ctx		6641311	0					
ANR	6641562	Identifier	eof		6641311	1					
ANR	6641563	CompoundStatement		59:19:1166:1166	6641311	1					
ANR	6641564	ExpressionStatement	st -> size = ctx -> size	144:2:3884:3904	6641311	0	True				
ANR	6641565	AssignmentExpression	st -> size = ctx -> size		6641311	0		=			
ANR	6641566	PtrMemberAccess	st -> size		6641311	0					
ANR	6641567	Identifier	st		6641311	0					
ANR	6641568	Identifier	size		6641311	1					
ANR	6641569	PtrMemberAccess	ctx -> size		6641311	1					
ANR	6641570	Identifier	ctx		6641311	0					
ANR	6641571	Identifier	size		6641311	1					
ANR	6641572	ExpressionStatement	st -> crc = ctx -> crc	145:2:3908:3926	6641311	1	True				
ANR	6641573	AssignmentExpression	st -> crc = ctx -> crc		6641311	0		=			
ANR	6641574	PtrMemberAccess	st -> crc		6641311	0					
ANR	6641575	Identifier	st		6641311	0					
ANR	6641576	Identifier	crc		6641311	1					
ANR	6641577	PtrMemberAccess	ctx -> crc		6641311	1					
ANR	6641578	Identifier	ctx		6641311	0					
ANR	6641579	Identifier	crc		6641311	1					
ANR	6641580	ExpressionStatement	st -> comp_size = ctx -> size	146:2:3930:3955	6641311	2	True				
ANR	6641581	AssignmentExpression	st -> comp_size = ctx -> size		6641311	0		=			
ANR	6641582	PtrMemberAccess	st -> comp_size		6641311	0					
ANR	6641583	Identifier	st		6641311	0					
ANR	6641584	Identifier	comp_size		6641311	1					
ANR	6641585	PtrMemberAccess	ctx -> size		6641311	1					
ANR	6641586	Identifier	ctx		6641311	0					
ANR	6641587	Identifier	size		6641311	1					
ANR	6641588	ExpressionStatement	st -> comp_method = ZIP_CM_STORE	147:2:3959:3989	6641311	3	True				
ANR	6641589	AssignmentExpression	st -> comp_method = ZIP_CM_STORE		6641311	0		=			
ANR	6641590	PtrMemberAccess	st -> comp_method		6641311	0					
ANR	6641591	Identifier	st		6641311	0					
ANR	6641592	Identifier	comp_method		6641311	1					
ANR	6641593	Identifier	ZIP_CM_STORE		6641311	1					
ANR	6641594	ExpressionStatement	st -> encryption_method = ZIP_EM_NONE	148:2:3993:4028	6641311	4	True				
ANR	6641595	AssignmentExpression	st -> encryption_method = ZIP_EM_NONE		6641311	0		=			
ANR	6641596	PtrMemberAccess	st -> encryption_method		6641311	0					
ANR	6641597	Identifier	st		6641311	0					
ANR	6641598	Identifier	encryption_method		6641311	1					
ANR	6641599	Identifier	ZIP_EM_NONE		6641311	1					
ANR	6641600	ExpressionStatement	st -> valid |= ZIP_STAT_SIZE | ZIP_STAT_CRC | ZIP_STAT_COMP_SIZE | ZIP_STAT_COMP_METHOD | ZIP_STAT_ENCRYPTION_METHOD	149:2:4032:4138	6641311	5	True				
ANR	6641601	AssignmentExpression	st -> valid |= ZIP_STAT_SIZE | ZIP_STAT_CRC | ZIP_STAT_COMP_SIZE | ZIP_STAT_COMP_METHOD | ZIP_STAT_ENCRYPTION_METHOD		6641311	0		|=			
ANR	6641602	PtrMemberAccess	st -> valid		6641311	0					
ANR	6641603	Identifier	st		6641311	0					
ANR	6641604	Identifier	valid		6641311	1					
ANR	6641605	InclusiveOrExpression	ZIP_STAT_SIZE | ZIP_STAT_CRC | ZIP_STAT_COMP_SIZE | ZIP_STAT_COMP_METHOD | ZIP_STAT_ENCRYPTION_METHOD		6641311	1		|			
ANR	6641606	Identifier	ZIP_STAT_SIZE		6641311	0					
ANR	6641607	InclusiveOrExpression	ZIP_STAT_CRC | ZIP_STAT_COMP_SIZE | ZIP_STAT_COMP_METHOD | ZIP_STAT_ENCRYPTION_METHOD		6641311	1		|			
ANR	6641608	Identifier	ZIP_STAT_CRC		6641311	0					
ANR	6641609	InclusiveOrExpression	ZIP_STAT_COMP_SIZE | ZIP_STAT_COMP_METHOD | ZIP_STAT_ENCRYPTION_METHOD		6641311	1		|			
ANR	6641610	Identifier	ZIP_STAT_COMP_SIZE		6641311	0					
ANR	6641611	InclusiveOrExpression	ZIP_STAT_COMP_METHOD | ZIP_STAT_ENCRYPTION_METHOD		6641311	1		|			
ANR	6641612	Identifier	ZIP_STAT_COMP_METHOD		6641311	0					
ANR	6641613	Identifier	ZIP_STAT_ENCRYPTION_METHOD		6641311	1					
ANR	6641614	ExpressionStatement		149:109:4139:4139	6641311	6	True				
ANR	6641615	ReturnStatement	return 0 ;	152:1:4152:4160	6641311	14	True				
ANR	6641616	PrimaryExpression	0		6641311	0					
ANR	6641617	Label	case ZIP_SOURCE_ERROR :	154:4:4168:4189	6641311	15	True				
ANR	6641618	Identifier	ZIP_SOURCE_ERROR		6641311	0					
ANR	6641619	ExpressionStatement	"memcpy ( data , ctx -> e , sizeof ( ctx -> e ) )"	155:1:4192:4228	6641311	16	True				
ANR	6641620	CallExpression	"memcpy ( data , ctx -> e , sizeof ( ctx -> e ) )"		6641311	0					
ANR	6641621	Callee	memcpy		6641311	0					
ANR	6641622	Identifier	memcpy		6641311	0					
ANR	6641623	ArgumentList	data		6641311	1					
ANR	6641624	Argument	data		6641311	0					
ANR	6641625	Identifier	data		6641311	0					
ANR	6641626	Argument	ctx -> e		6641311	1					
ANR	6641627	PtrMemberAccess	ctx -> e		6641311	0					
ANR	6641628	Identifier	ctx		6641311	0					
ANR	6641629	Identifier	e		6641311	1					
ANR	6641630	Argument	sizeof ( ctx -> e )		6641311	2					
ANR	6641631	SizeofExpression	sizeof ( ctx -> e )		6641311	0					
ANR	6641632	Sizeof	sizeof		6641311	0					
ANR	6641633	PtrMemberAccess	ctx -> e		6641311	1					
ANR	6641634	Identifier	ctx		6641311	0					
ANR	6641635	Identifier	e		6641311	1					
ANR	6641636	ReturnStatement	return 0 ;	156:1:4231:4239	6641311	17	True				
ANR	6641637	PrimaryExpression	0		6641311	0					
ANR	6641638	Label	case ZIP_SOURCE_FREE :	158:4:4246:4266	6641311	18	True				
ANR	6641639	Identifier	ZIP_SOURCE_FREE		6641311	0					
ANR	6641640	ExpressionStatement	free ( ctx )	159:1:4269:4278	6641311	19	True				
ANR	6641641	CallExpression	free ( ctx )		6641311	0					
ANR	6641642	Callee	free		6641311	0					
ANR	6641643	Identifier	free		6641311	0					
ANR	6641644	ArgumentList	ctx		6641311	1					
ANR	6641645	Argument	ctx		6641311	0					
ANR	6641646	Identifier	ctx		6641311	0					
ANR	6641647	ReturnStatement	return 0 ;	160:1:4281:4289	6641311	20	True				
ANR	6641648	PrimaryExpression	0		6641311	0					
ANR	6641649	Label	default :	162:4:4296:4303	6641311	21	True				
ANR	6641650	Identifier	default		6641311	0					
ANR	6641651	ReturnStatement	return - 1 ;	163:1:4306:4315	6641311	22	True				
ANR	6641652	UnaryOperationExpression	- 1		6641311	0					
ANR	6641653	UnaryOperator	-		6641311	0					
ANR	6641654	PrimaryExpression	1		6641311	1					
ANR	6641655	ReturnType	static zip_int64_t		6641311	1					
ANR	6641656	Identifier	crc_read		6641311	2					
ANR	6641657	ParameterList	"struct zip_source * src , void * _ctx , void * data , zip_uint64_t len , enum zip_source_cmd cmd"		6641311	3					
ANR	6641658	Parameter	struct zip_source * src	81:9:2500:2521	6641311	0	True				
ANR	6641659	ParameterType	struct zip_source *		6641311	0					
ANR	6641660	Identifier	src		6641311	1					
ANR	6641661	Parameter	void * _ctx	81:33:2524:2533	6641311	1	True				
ANR	6641662	ParameterType	void *		6641311	0					
ANR	6641663	Identifier	_ctx		6641311	1					
ANR	6641664	Parameter	void * data	81:45:2536:2545	6641311	2	True				
ANR	6641665	ParameterType	void *		6641311	0					
ANR	6641666	Identifier	data		6641311	1					
ANR	6641667	Parameter	zip_uint64_t len	82:2:2550:2565	6641311	3	True				
ANR	6641668	ParameterType	zip_uint64_t		6641311	0					
ANR	6641669	Identifier	len		6641311	1					
ANR	6641670	Parameter	enum zip_source_cmd cmd	82:20:2568:2590	6641311	4	True				
ANR	6641671	ParameterType	enum zip_source_cmd		6641311	0					
ANR	6641672	Identifier	cmd		6641311	1					
ANR	6641673	CFGEntryNode	ENTRY		6641311		True				
ANR	6641674	CFGExitNode	EXIT		6641311		True				
ANR	6641675	Symbol	ZIP_STAT_CRC		6641311						
ANR	6641676	Symbol	_ctx		6641311						
ANR	6641677	Symbol	data		6641311						
ANR	6641678	Symbol	* st		6641311						
ANR	6641679	Symbol	ZIP_STAT_COMP_METHOD		6641311						
ANR	6641680	Symbol	st -> encryption_method		6641311						
ANR	6641681	Symbol	st . valid		6641311						
ANR	6641682	Symbol	& st		6641311						
ANR	6641683	Symbol	ctx -> e		6641311						
ANR	6641684	Symbol	st -> comp_size		6641311						
ANR	6641685	Symbol	st . crc		6641311						
ANR	6641686	Symbol	len		6641311						
ANR	6641687	Symbol	st -> crc		6641311						
ANR	6641688	Symbol	st . size		6641311						
ANR	6641689	Symbol	ZIP_STAT_COMP_SIZE		6641311						
ANR	6641690	Symbol	* ctx -> e		6641311						
ANR	6641691	Symbol	ZIP_ER_INCONS		6641311						
ANR	6641692	Symbol	crc32		6641311						
ANR	6641693	Symbol	ZIP_SOURCE_ERR_LOWER		6641311						
ANR	6641694	Symbol	st -> valid		6641311						
ANR	6641695	Symbol	ctx -> validate		6641311						
ANR	6641696	Symbol	st		6641311						
ANR	6641697	Symbol	zip_source_stat		6641311						
ANR	6641698	Symbol	NULL		6641311						
ANR	6641699	Symbol	src		6641311						
ANR	6641700	Symbol	ctx		6641311						
ANR	6641701	Symbol	st -> comp_method		6641311						
ANR	6641702	Symbol	ctx -> eof		6641311						
ANR	6641703	Symbol	zip_source_read		6641311						
ANR	6641704	Symbol	ZIP_CM_STORE		6641311						
ANR	6641705	Symbol	ZIP_EM_NONE		6641311						
ANR	6641706	Symbol	n		6641311						
ANR	6641707	Symbol	* ctx		6641311						
ANR	6641708	Symbol	ZIP_ER_CRC		6641311						
ANR	6641709	Symbol	ZIP_STAT_ENCRYPTION_METHOD		6641311						
ANR	6641710	Symbol	st -> size		6641311						
ANR	6641711	Symbol	ctx -> size		6641311						
ANR	6641712	Symbol	cmd		6641311						
ANR	6641713	Symbol	* * ctx		6641311						
ANR	6641714	Symbol	ctx -> crc		6641311						
ANR	6641715	Symbol	ZIP_STAT_SIZE		6641311						
