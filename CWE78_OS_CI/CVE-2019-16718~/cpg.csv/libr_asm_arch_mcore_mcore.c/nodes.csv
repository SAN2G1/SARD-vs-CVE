command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3277937	File	data/converged/CVE-2019-16718~_radare2/libr_asm_arch_mcore_mcore.c								
ANR	3277938	DeclStmt									
ANR	3277939	Decl							const char	const char * [ ]	mcore_ctrl_registers
ANR	3277940	ClassDef	mcore_mask	73:8:1948:2019							
ANR	3277941	DeclStmt									
ANR	3277942	Decl							ut16	ut16	mask
ANR	3277943	DeclStmt									
ANR	3277944	Decl							ut16	ut16	shift
ANR	3277945	DeclStmt									
ANR	3277946	Decl							ut16	ut16	type
ANR	3277947	DeclStmt									
ANR	3277948	Decl							mcore_mask	mcore_mask	mcore_mask_t
ANR	3277949	ClassDef	mcore_ops	79:8:2030:2161							
ANR	3277950	DeclStmt									
ANR	3277951	Decl							const char	const char *	name
ANR	3277952	DeclStmt									
ANR	3277953	Decl							ut16	ut16	cpu
ANR	3277954	DeclStmt									
ANR	3277955	Decl							ut16	ut16	mask
ANR	3277956	DeclStmt									
ANR	3277957	Decl							ut64	ut64	type
ANR	3277958	DeclStmt									
ANR	3277959	Decl							ut16	ut16	n_args
ANR	3277960	DeclStmt									
ANR	3277961	Decl							mcore_mask_t	mcore_mask_t [ ARGS_SIZE ]	args
ANR	3277962	DeclStmt									
ANR	3277963	Decl							mcore_ops	mcore_ops	mcore_ops_t
ANR	3277964	DeclStmt									
ANR	3277965	Decl							ut16	ut16 [ 4 ]	load_shift
ANR	3277966	DeclStmt									
ANR	3277967	Decl							mcore_ops_t	mcore_ops_t [ MCORE_INSTRS ]	mcore_instructions
ANR	3277968	Function	find_instruction	358:0:22579:23728							
ANR	3277969	FunctionDef	find_instruction (const ut8 * buffer)		3277968	0					
ANR	3277970	CompoundStatement		358:52:22631:23728	3277968	0					
ANR	3277971	IdentifierDeclStatement	ut32 i = 0 ;	359:1:22634:22644	3277968	0	True				
ANR	3277972	IdentifierDecl	i = 0		3277968	0					
ANR	3277973	IdentifierDeclType	ut32		3277968	0					
ANR	3277974	Identifier	i		3277968	1					
ANR	3277975	AssignmentExpression	i = 0		3277968	2		=			
ANR	3277976	Identifier	i		3277968	0					
ANR	3277977	PrimaryExpression	0		3277968	1					
ANR	3277978	IdentifierDeclStatement	mcore_ops_t * op_ptr = NULL ;	360:1:22647:22673	3277968	1	True				
ANR	3277979	IdentifierDecl	* op_ptr = NULL		3277968	0					
ANR	3277980	IdentifierDeclType	mcore_ops_t *		3277968	0					
ANR	3277981	Identifier	op_ptr		3277968	1					
ANR	3277982	AssignmentExpression	* op_ptr = NULL		3277968	2		=			
ANR	3277983	Identifier	NULL		3277968	0					
ANR	3277984	Identifier	NULL		3277968	1					
ANR	3277985	IdentifierDeclStatement	mcore_t * op = NULL ;	361:1:22676:22694	3277968	2	True				
ANR	3277986	IdentifierDecl	* op = NULL		3277968	0					
ANR	3277987	IdentifierDeclType	mcore_t *		3277968	0					
ANR	3277988	Identifier	op		3277968	1					
ANR	3277989	AssignmentExpression	* op = NULL		3277968	2		=			
ANR	3277990	Identifier	NULL		3277968	0					
ANR	3277991	Identifier	NULL		3277968	1					
ANR	3277992	IfStatement	if ( ! buffer || ! ( op = malloc ( sizeof ( mcore_t ) ) ) )		3277968	3					
ANR	3277993	Condition	! buffer || ! ( op = malloc ( sizeof ( mcore_t ) ) )	362:5:22701:22744	3277968	0	True				
ANR	3277994	OrExpression	! buffer || ! ( op = malloc ( sizeof ( mcore_t ) ) )		3277968	0		||			
ANR	3277995	UnaryOperationExpression	! buffer		3277968	0					
ANR	3277996	UnaryOperator	!		3277968	0					
ANR	3277997	Identifier	buffer		3277968	1					
ANR	3277998	UnaryOperationExpression	! ( op = malloc ( sizeof ( mcore_t ) ) )		3277968	1					
ANR	3277999	UnaryOperator	!		3277968	0					
ANR	3278000	AssignmentExpression	op = malloc ( sizeof ( mcore_t ) )		3277968	1		=			
ANR	3278001	Identifier	op		3277968	0					
ANR	3278002	CallExpression	malloc ( sizeof ( mcore_t ) )		3277968	1					
ANR	3278003	Callee	malloc		3277968	0					
ANR	3278004	Identifier	malloc		3277968	0					
ANR	3278005	ArgumentList	sizeof ( mcore_t )		3277968	1					
ANR	3278006	Argument	sizeof ( mcore_t )		3277968	0					
ANR	3278007	SizeofExpression	sizeof ( mcore_t )		3277968	0					
ANR	3278008	Sizeof	sizeof		3277968	0					
ANR	3278009	SizeofOperand	mcore_t		3277968	1					
ANR	3278010	CompoundStatement		5:51:115:115	3277968	1					
ANR	3278011	ReturnStatement	return NULL ;	363:2:22751:22762	3277968	0	True				
ANR	3278012	Identifier	NULL		3277968	0					
ANR	3278013	ExpressionStatement	"memset ( op , 0 , sizeof ( mcore_t ) )"	365:1:22768:22800	3277968	4	True				
ANR	3278014	CallExpression	"memset ( op , 0 , sizeof ( mcore_t ) )"		3277968	0					
ANR	3278015	Callee	memset		3277968	0					
ANR	3278016	Identifier	memset		3277968	0					
ANR	3278017	ArgumentList	op		3277968	1					
ANR	3278018	Argument	op		3277968	0					
ANR	3278019	Identifier	op		3277968	0					
ANR	3278020	Argument	0		3277968	1					
ANR	3278021	PrimaryExpression	0		3277968	0					
ANR	3278022	Argument	sizeof ( mcore_t )		3277968	2					
ANR	3278023	SizeofExpression	sizeof ( mcore_t )		3277968	0					
ANR	3278024	Sizeof	sizeof		3277968	0					
ANR	3278025	SizeofOperand	mcore_t		3277968	1					
ANR	3278026	IdentifierDeclStatement	ut32 count = sizeof ( mcore_instructions ) / sizeof ( mcore_ops_t ) ;	366:1:22803:22866	3277968	5	True				
ANR	3278027	IdentifierDecl	count = sizeof ( mcore_instructions ) / sizeof ( mcore_ops_t )		3277968	0					
ANR	3278028	IdentifierDeclType	ut32		3277968	0					
ANR	3278029	Identifier	count		3277968	1					
ANR	3278030	AssignmentExpression	count = sizeof ( mcore_instructions ) / sizeof ( mcore_ops_t )		3277968	2		=			
ANR	3278031	Identifier	count		3277968	0					
ANR	3278032	MultiplicativeExpression	sizeof ( mcore_instructions ) / sizeof ( mcore_ops_t )		3277968	1		/			
ANR	3278033	SizeofExpression	sizeof ( mcore_instructions )		3277968	0					
ANR	3278034	Sizeof	sizeof		3277968	0					
ANR	3278035	SizeofOperand	mcore_instructions		3277968	1					
ANR	3278036	SizeofExpression	sizeof ( mcore_ops_t )		3277968	1					
ANR	3278037	Sizeof	sizeof		3277968	0					
ANR	3278038	SizeofOperand	mcore_ops_t		3277968	1					
ANR	3278039	IdentifierDeclStatement	ut16 data = buffer [ 1 ] << 8 ;	367:1:22869:22895	3277968	6	True				
ANR	3278040	IdentifierDecl	data = buffer [ 1 ] << 8		3277968	0					
ANR	3278041	IdentifierDeclType	ut16		3277968	0					
ANR	3278042	Identifier	data		3277968	1					
ANR	3278043	AssignmentExpression	data = buffer [ 1 ] << 8		3277968	2		=			
ANR	3278044	Identifier	data		3277968	0					
ANR	3278045	ShiftExpression	buffer [ 1 ] << 8		3277968	1		<<			
ANR	3278046	ArrayIndexing	buffer [ 1 ]		3277968	0					
ANR	3278047	Identifier	buffer		3277968	0					
ANR	3278048	PrimaryExpression	1		3277968	1					
ANR	3278049	PrimaryExpression	8		3277968	1					
ANR	3278050	ExpressionStatement	data |= buffer [ 0 ]	368:1:22898:22915	3277968	7	True				
ANR	3278051	AssignmentExpression	data |= buffer [ 0 ]		3277968	0		|=			
ANR	3278052	Identifier	data		3277968	0					
ANR	3278053	ArrayIndexing	buffer [ 0 ]		3277968	1					
ANR	3278054	Identifier	buffer		3277968	0					
ANR	3278055	PrimaryExpression	0		3277968	1					
ANR	3278056	ExpressionStatement	op -> bytes = data	369:1:22918:22934	3277968	8	True				
ANR	3278057	AssignmentExpression	op -> bytes = data		3277968	0		=			
ANR	3278058	PtrMemberAccess	op -> bytes		3277968	0					
ANR	3278059	Identifier	op		3277968	0					
ANR	3278060	Identifier	bytes		3277968	1					
ANR	3278061	Identifier	data		3277968	1					
ANR	3278062	ExpressionStatement	op -> size = MCORE_INSTR_ALIGN	370:1:22937:22965	3277968	9	True				
ANR	3278063	AssignmentExpression	op -> size = MCORE_INSTR_ALIGN		3277968	0		=			
ANR	3278064	PtrMemberAccess	op -> size		3277968	0					
ANR	3278065	Identifier	op		3277968	0					
ANR	3278066	Identifier	size		3277968	1					
ANR	3278067	Identifier	MCORE_INSTR_ALIGN		3277968	1					
ANR	3278068	IfStatement	if ( data == 0 )		3277968	10					
ANR	3278069	Condition	data == 0	371:5:22972:22980	3277968	0	True				
ANR	3278070	EqualityExpression	data == 0		3277968	0		==			
ANR	3278071	Identifier	data		3277968	0					
ANR	3278072	PrimaryExpression	0		3277968	1					
ANR	3278073	CompoundStatement		14:16:351:351	3277968	1					
ANR	3278074	ExpressionStatement	op_ptr = & mcore_instructions [ 0 ]	372:2:22987:23018	3277968	0	True				
ANR	3278075	AssignmentExpression	op_ptr = & mcore_instructions [ 0 ]		3277968	0		=			
ANR	3278076	Identifier	op_ptr		3277968	0					
ANR	3278077	UnaryOperationExpression	& mcore_instructions [ 0 ]		3277968	1					
ANR	3278078	UnaryOperator	&		3277968	0					
ANR	3278079	ArrayIndexing	mcore_instructions [ 0 ]		3277968	1					
ANR	3278080	Identifier	mcore_instructions		3277968	0					
ANR	3278081	PrimaryExpression	0		3277968	1					
ANR	3278082	ElseStatement	else		3277968	0					
ANR	3278083	CompoundStatement		16:8:396:396	3277968	0					
ANR	3278084	ForStatement	for ( i = 1 ; i < count ; i ++ )		3277968	0					
ANR	3278085	ForInit	i = 1 ;	374:7:23037:23042	3277968	0	True				
ANR	3278086	AssignmentExpression	i = 1		3277968	0		=			
ANR	3278087	Identifier	i		3277968	0					
ANR	3278088	PrimaryExpression	1		3277968	1					
ANR	3278089	Condition	i < count	374:14:23044:23052	3277968	1	True				
ANR	3278090	RelationalExpression	i < count		3277968	0		<			
ANR	3278091	Identifier	i		3277968	0					
ANR	3278092	Identifier	count		3277968	1					
ANR	3278093	PostIncDecOperationExpression	i ++	374:25:23055:23057	3277968	2	True				
ANR	3278094	Identifier	i		3277968	0					
ANR	3278095	IncDec	++		3277968	1					
ANR	3278096	CompoundStatement		19:3:469:502	3277968	3					
ANR	3278097	ExpressionStatement	op_ptr = & mcore_instructions [ i ]	375:3:23065:23096	3277968	0	True				
ANR	3278098	AssignmentExpression	op_ptr = & mcore_instructions [ i ]		3277968	0		=			
ANR	3278099	Identifier	op_ptr		3277968	0					
ANR	3278100	UnaryOperationExpression	& mcore_instructions [ i ]		3277968	1					
ANR	3278101	UnaryOperator	&		3277968	0					
ANR	3278102	ArrayIndexing	mcore_instructions [ i ]		3277968	1					
ANR	3278103	Identifier	mcore_instructions		3277968	0					
ANR	3278104	Identifier	i		3277968	1					
ANR	3278105	IdentifierDeclStatement	ut16 masked = data & op_ptr -> mask ;	376:3:23101:23134	3277968	1	True				
ANR	3278106	IdentifierDecl	masked = data & op_ptr -> mask		3277968	0					
ANR	3278107	IdentifierDeclType	ut16		3277968	0					
ANR	3278108	Identifier	masked		3277968	1					
ANR	3278109	AssignmentExpression	masked = data & op_ptr -> mask		3277968	2		=			
ANR	3278110	Identifier	masked		3277968	0					
ANR	3278111	BitAndExpression	data & op_ptr -> mask		3277968	1		&			
ANR	3278112	Identifier	data		3277968	0					
ANR	3278113	PtrMemberAccess	op_ptr -> mask		3277968	1					
ANR	3278114	Identifier	op_ptr		3277968	0					
ANR	3278115	Identifier	mask		3277968	1					
ANR	3278116	IfStatement	if ( masked == data )		3277968	2					
ANR	3278117	Condition	masked == data	378:7:23184:23197	3277968	0	True				
ANR	3278118	EqualityExpression	masked == data		3277968	0		==			
ANR	3278119	Identifier	masked		3277968	0					
ANR	3278120	Identifier	data		3277968	1					
ANR	3278121	CompoundStatement		21:23:568:568	3277968	1					
ANR	3278122	BreakStatement	break ;	379:4:23206:23211	3277968	0	True				
ANR	3278123	IfStatement	if ( i >= count )		3277968	1					
ANR	3278124	Condition	i >= count	382:6:23228:23237	3277968	0	True				
ANR	3278125	RelationalExpression	i >= count		3277968	0		>=			
ANR	3278126	Identifier	i		3277968	0					
ANR	3278127	Identifier	count		3277968	1					
ANR	3278128	CompoundStatement		25:18:608:608	3277968	1					
ANR	3278129	ExpressionStatement	"op -> name = ""illegal"""	383:3:23245:23265	3277968	0	True				
ANR	3278130	AssignmentExpression	"op -> name = ""illegal"""		3277968	0		=			
ANR	3278131	PtrMemberAccess	op -> name		3277968	0					
ANR	3278132	Identifier	op		3277968	0					
ANR	3278133	Identifier	name		3277968	1					
ANR	3278134	PrimaryExpression	"""illegal"""		3277968	1					
ANR	3278135	ReturnStatement	return op ;	384:3:23270:23279	3277968	1	True				
ANR	3278136	Identifier	op		3277968	0					
ANR	3278137	Statement	if	388:1:23290:23291	3277968	11	True				
ANR	3278138	Statement	(	388:4:23293:23293	3277968	12	True				
ANR	3278139	Statement	!	388:5:23294:23294	3277968	13	True				
ANR	3278140	Statement	strncmp	388:6:23295:23301	3277968	14	True				
ANR	3278141	Statement	(	388:14:23303:23303	3277968	15	True				
ANR	3278142	Statement	op_ptr	388:15:23304:23309	3277968	16	True				
ANR	3278143	Statement	->	388:21:23310:23311	3277968	17	True				
ANR	3278144	Statement	name	388:23:23312:23315	3277968	18	True				
ANR	3278145	Statement	","	388:27:23316:23316	3277968	19	True				
ANR	3278146	Statement	"""lrw"""	388:29:23318:23322	3277968	20	True				
ANR	3278147	Statement	","	388:34:23323:23323	3277968	21	True				
ANR	3278148	Statement	3	388:36:23325:23325	3277968	22	True				
ANR	3278149	Statement	)	388:37:23326:23326	3277968	23	True				
ANR	3278150	Statement	&&	388:39:23328:23329	3277968	24	True				
ANR	3278151	Statement	(	388:42:23331:23331	3277968	25	True				
ANR	3278152	Statement	data	388:43:23332:23335	3277968	26	True				
ANR	3278153	Statement	&	388:48:23337:23337	3277968	27	True				
ANR	3278154	Statement	0	388:50:23339:23339	3277968	28	True				
ANR	3278155	Statement	b111100000000	388:51:23340:23352	3277968	29	True				
ANR	3278156	Statement	)	388:64:23353:23353	3277968	30	True				
ANR	3278157	Statement	==	388:66:23355:23356	3277968	31	True				
ANR	3278158	Statement	0	388:69:23358:23358	3277968	32	True				
ANR	3278159	Statement	b111100000000	388:70:23359:23371	3277968	33	True				
ANR	3278160	Statement	)	388:83:23372:23372	3277968	34	True				
ANR	3278161	CompoundStatement		31:85:742:742	3277968	35					
ANR	3278162	IfStatement	if ( i > 0 && i < MCORE_INSTRS )		3277968	0					
ANR	3278163	Condition	i > 0 && i < MCORE_INSTRS	390:6:23395:23418	3277968	0	True				
ANR	3278164	AndExpression	i > 0 && i < MCORE_INSTRS		3277968	0		&&			
ANR	3278165	RelationalExpression	i > 0		3277968	0		>			
ANR	3278166	Identifier	i		3277968	0					
ANR	3278167	PrimaryExpression	0		3277968	1					
ANR	3278168	RelationalExpression	i < MCORE_INSTRS		3277968	1		<			
ANR	3278169	Identifier	i		3277968	0					
ANR	3278170	Identifier	MCORE_INSTRS		3277968	1					
ANR	3278171	CompoundStatement		33:32:789:789	3277968	1					
ANR	3278172	ExpressionStatement	op_ptr = & mcore_instructions [ i + 1 ]	391:3:23426:23461	3277968	0	True				
ANR	3278173	AssignmentExpression	op_ptr = & mcore_instructions [ i + 1 ]		3277968	0		=			
ANR	3278174	Identifier	op_ptr		3277968	0					
ANR	3278175	UnaryOperationExpression	& mcore_instructions [ i + 1 ]		3277968	1					
ANR	3278176	UnaryOperator	&		3277968	0					
ANR	3278177	ArrayIndexing	mcore_instructions [ i + 1 ]		3277968	1					
ANR	3278178	Identifier	mcore_instructions		3277968	0					
ANR	3278179	AdditiveExpression	i + 1		3277968	1		+			
ANR	3278180	Identifier	i		3277968	0					
ANR	3278181	PrimaryExpression	1		3277968	1					
ANR	3278182	ExpressionStatement	op -> type = op_ptr -> type	394:1:23471:23494	3277968	36	True				
ANR	3278183	AssignmentExpression	op -> type = op_ptr -> type		3277968	0		=			
ANR	3278184	PtrMemberAccess	op -> type		3277968	0					
ANR	3278185	Identifier	op		3277968	0					
ANR	3278186	Identifier	type		3277968	1					
ANR	3278187	PtrMemberAccess	op_ptr -> type		3277968	1					
ANR	3278188	Identifier	op_ptr		3277968	0					
ANR	3278189	Identifier	type		3277968	1					
ANR	3278190	ExpressionStatement	op -> name = op_ptr -> name	395:1:23497:23520	3277968	37	True				
ANR	3278191	AssignmentExpression	op -> name = op_ptr -> name		3277968	0		=			
ANR	3278192	PtrMemberAccess	op -> name		3277968	0					
ANR	3278193	Identifier	op		3277968	0					
ANR	3278194	Identifier	name		3277968	1					
ANR	3278195	PtrMemberAccess	op_ptr -> name		3277968	1					
ANR	3278196	Identifier	op_ptr		3277968	0					
ANR	3278197	Identifier	name		3277968	1					
ANR	3278198	ExpressionStatement	op -> n_args = op_ptr -> n_args	396:1:23523:23550	3277968	38	True				
ANR	3278199	AssignmentExpression	op -> n_args = op_ptr -> n_args		3277968	0		=			
ANR	3278200	PtrMemberAccess	op -> n_args		3277968	0					
ANR	3278201	Identifier	op		3277968	0					
ANR	3278202	Identifier	n_args		3277968	1					
ANR	3278203	PtrMemberAccess	op_ptr -> n_args		3277968	1					
ANR	3278204	Identifier	op_ptr		3277968	0					
ANR	3278205	Identifier	n_args		3277968	1					
ANR	3278206	ForStatement	for ( i = 0 ; i < op_ptr -> n_args ; ++ i )		3277968	39					
ANR	3278207	ForInit	i = 0 ;	397:6:23558:23563	3277968	0	True				
ANR	3278208	AssignmentExpression	i = 0		3277968	0		=			
ANR	3278209	Identifier	i		3277968	0					
ANR	3278210	PrimaryExpression	0		3277968	1					
ANR	3278211	Condition	i < op_ptr -> n_args	397:13:23565:23582	3277968	1	True				
ANR	3278212	RelationalExpression	i < op_ptr -> n_args		3277968	0		<			
ANR	3278213	Identifier	i		3277968	0					
ANR	3278214	PtrMemberAccess	op_ptr -> n_args		3277968	1					
ANR	3278215	Identifier	op_ptr		3277968	0					
ANR	3278216	Identifier	n_args		3277968	1					
ANR	3278217	UnaryExpression	++ i	397:33:23585:23587	3277968	2	True				
ANR	3278218	IncDec	++		3277968	0					
ANR	3278219	Identifier	i		3277968	1					
ANR	3278220	CompoundStatement		40:38:958:958	3277968	3					
ANR	3278221	ExpressionStatement	op -> args [ i ] . value = ( data & op_ptr -> args [ i ] . mask ) >> op_ptr -> args [ i ] . shift	398:2:23594:23668	3277968	0	True				
ANR	3278222	AssignmentExpression	op -> args [ i ] . value = ( data & op_ptr -> args [ i ] . mask ) >> op_ptr -> args [ i ] . shift		3277968	0		=			
ANR	3278223	MemberAccess	op -> args [ i ] . value		3277968	0					
ANR	3278224	ArrayIndexing	op -> args [ i ]		3277968	0					
ANR	3278225	PtrMemberAccess	op -> args		3277968	0					
ANR	3278226	Identifier	op		3277968	0					
ANR	3278227	Identifier	args		3277968	1					
ANR	3278228	Identifier	i		3277968	1					
ANR	3278229	Identifier	value		3277968	1					
ANR	3278230	ShiftExpression	( data & op_ptr -> args [ i ] . mask ) >> op_ptr -> args [ i ] . shift		3277968	1		>>			
ANR	3278231	BitAndExpression	data & op_ptr -> args [ i ] . mask		3277968	0		&			
ANR	3278232	Identifier	data		3277968	0					
ANR	3278233	MemberAccess	op_ptr -> args [ i ] . mask		3277968	1					
ANR	3278234	ArrayIndexing	op_ptr -> args [ i ]		3277968	0					
ANR	3278235	PtrMemberAccess	op_ptr -> args		3277968	0					
ANR	3278236	Identifier	op_ptr		3277968	0					
ANR	3278237	Identifier	args		3277968	1					
ANR	3278238	Identifier	i		3277968	1					
ANR	3278239	Identifier	mask		3277968	1					
ANR	3278240	MemberAccess	op_ptr -> args [ i ] . shift		3277968	1					
ANR	3278241	ArrayIndexing	op_ptr -> args [ i ]		3277968	0					
ANR	3278242	PtrMemberAccess	op_ptr -> args		3277968	0					
ANR	3278243	Identifier	op_ptr		3277968	0					
ANR	3278244	Identifier	args		3277968	1					
ANR	3278245	Identifier	i		3277968	1					
ANR	3278246	Identifier	shift		3277968	1					
ANR	3278247	ExpressionStatement	op -> args [ i ] . type = op_ptr -> args [ i ] . type	399:2:23672:23711	3277968	1	True				
ANR	3278248	AssignmentExpression	op -> args [ i ] . type = op_ptr -> args [ i ] . type		3277968	0		=			
ANR	3278249	MemberAccess	op -> args [ i ] . type		3277968	0					
ANR	3278250	ArrayIndexing	op -> args [ i ]		3277968	0					
ANR	3278251	PtrMemberAccess	op -> args		3277968	0					
ANR	3278252	Identifier	op		3277968	0					
ANR	3278253	Identifier	args		3277968	1					
ANR	3278254	Identifier	i		3277968	1					
ANR	3278255	Identifier	type		3277968	1					
ANR	3278256	MemberAccess	op_ptr -> args [ i ] . type		3277968	1					
ANR	3278257	ArrayIndexing	op_ptr -> args [ i ]		3277968	0					
ANR	3278258	PtrMemberAccess	op_ptr -> args		3277968	0					
ANR	3278259	Identifier	op_ptr		3277968	0					
ANR	3278260	Identifier	args		3277968	1					
ANR	3278261	Identifier	i		3277968	1					
ANR	3278262	Identifier	type		3277968	1					
ANR	3278263	ReturnStatement	return op ;	401:1:23717:23726	3277968	40	True				
ANR	3278264	Identifier	op		3277968	0					
ANR	3278265	ReturnType	static mcore_t *		3277968	1					
ANR	3278266	Identifier	find_instruction		3277968	2					
ANR	3278267	ParameterList	const ut8 * buffer		3277968	3					
ANR	3278268	Parameter	const ut8 * buffer	358:33:22612:22628	3277968	0	True				
ANR	3278269	ParameterType	const ut8 *		3277968	0					
ANR	3278270	Identifier	buffer		3277968	1					
ANR	3278271	CFGEntryNode	ENTRY		3277968		True				
ANR	3278272	CFGExitNode	EXIT		3277968		True				
ANR	3278273	Symbol	data		3277968						
ANR	3278274	Symbol	* op		3277968						
ANR	3278275	Symbol	masked		3277968						
ANR	3278276	Symbol	op -> args [ i ] . value		3277968						
ANR	3278277	Symbol	op -> args		3277968						
ANR	3278278	Symbol	op_ptr -> args		3277968						
ANR	3278279	Symbol	* * op		3277968						
ANR	3278280	Symbol	op_ptr -> args [ i ] . type		3277968						
ANR	3278281	Symbol	op_ptr		3277968						
ANR	3278282	Symbol	op_ptr -> name		3277968						
ANR	3278283	Symbol	op_ptr -> n_args		3277968						
ANR	3278284	Symbol	buffer		3277968						
ANR	3278285	Symbol	MCORE_INSTR_ALIGN		3277968						
ANR	3278286	Symbol	op		3277968						
ANR	3278287	Symbol	malloc		3277968						
ANR	3278288	Symbol	* buffer		3277968						
ANR	3278289	Symbol	NULL		3277968						
ANR	3278290	Symbol	op_ptr -> args [ i ] . shift		3277968						
ANR	3278291	Symbol	op_ptr -> type		3277968						
ANR	3278292	Symbol	op -> type		3277968						
ANR	3278293	Symbol	op -> n_args		3277968						
ANR	3278294	Symbol	count		3277968						
ANR	3278295	Symbol	* * op_ptr		3277968						
ANR	3278296	Symbol	i		3277968						
ANR	3278297	Symbol	op -> name		3277968						
ANR	3278298	Symbol	op -> bytes		3277968						
ANR	3278299	Symbol	op_ptr -> mask		3277968						
ANR	3278300	Symbol	* i		3277968						
ANR	3278301	Symbol	op -> args [ i ] . type		3277968						
ANR	3278302	Symbol	op -> size		3277968						
ANR	3278303	Symbol	* op -> args		3277968						
ANR	3278304	Symbol	* op_ptr -> args		3277968						
ANR	3278305	Symbol	op_ptr -> args [ i ] . mask		3277968						
ANR	3278306	Symbol	MCORE_INSTRS		3277968						
ANR	3278307	Symbol	mcore_instructions		3277968						
ANR	3278308	Symbol	* op_ptr		3277968						
ANR	3278309	Function	mcore_init	404:0:23731:23924							
ANR	3278310	FunctionDef	"mcore_init (mcore_handle * handle , const ut8 * buffer , const ut32 size)"		3278309	0					
ANR	3278311	CompoundStatement		404:73:23804:23924	3278309	0					
ANR	3278312	IfStatement	if ( ! handle || ! buffer || size < 2 )		3278309	0					
ANR	3278313	Condition	! handle || ! buffer || size < 2	405:5:23811:23840	3278309	0	True				
ANR	3278314	OrExpression	! handle || ! buffer || size < 2		3278309	0		||			
ANR	3278315	UnaryOperationExpression	! handle		3278309	0					
ANR	3278316	UnaryOperator	!		3278309	0					
ANR	3278317	Identifier	handle		3278309	1					
ANR	3278318	OrExpression	! buffer || size < 2		3278309	1		||			
ANR	3278319	UnaryOperationExpression	! buffer		3278309	0					
ANR	3278320	UnaryOperator	!		3278309	0					
ANR	3278321	Identifier	buffer		3278309	1					
ANR	3278322	RelationalExpression	size < 2		3278309	1		<			
ANR	3278323	Identifier	size		3278309	0					
ANR	3278324	PrimaryExpression	2		3278309	1					
ANR	3278325	CompoundStatement		2:37:38:38	3278309	1					
ANR	3278326	ReturnStatement	return 1 ;	406:2:23847:23855	3278309	0	True				
ANR	3278327	PrimaryExpression	1		3278309	0					
ANR	3278328	ExpressionStatement	handle -> pos = buffer	408:1:23861:23881	3278309	1	True				
ANR	3278329	AssignmentExpression	handle -> pos = buffer		3278309	0		=			
ANR	3278330	PtrMemberAccess	handle -> pos		3278309	0					
ANR	3278331	Identifier	handle		3278309	0					
ANR	3278332	Identifier	pos		3278309	1					
ANR	3278333	Identifier	buffer		3278309	1					
ANR	3278334	ExpressionStatement	handle -> end = buffer + size	409:1:23884:23911	3278309	2	True				
ANR	3278335	AssignmentExpression	handle -> end = buffer + size		3278309	0		=			
ANR	3278336	PtrMemberAccess	handle -> end		3278309	0					
ANR	3278337	Identifier	handle		3278309	0					
ANR	3278338	Identifier	end		3278309	1					
ANR	3278339	AdditiveExpression	buffer + size		3278309	1		+			
ANR	3278340	Identifier	buffer		3278309	0					
ANR	3278341	Identifier	size		3278309	1					
ANR	3278342	ReturnStatement	return 0 ;	410:1:23914:23922	3278309	3	True				
ANR	3278343	PrimaryExpression	0		3278309	0					
ANR	3278344	ReturnType	int		3278309	1					
ANR	3278345	Identifier	mcore_init		3278309	2					
ANR	3278346	ParameterList	"mcore_handle * handle , const ut8 * buffer , const ut32 size"		3278309	3					
ANR	3278347	Parameter	mcore_handle * handle	404:15:23746:23765	3278309	0	True				
ANR	3278348	ParameterType	mcore_handle *		3278309	0					
ANR	3278349	Identifier	handle		3278309	1					
ANR	3278350	Parameter	const ut8 * buffer	404:37:23768:23784	3278309	1	True				
ANR	3278351	ParameterType	const ut8 *		3278309	0					
ANR	3278352	Identifier	buffer		3278309	1					
ANR	3278353	Parameter	const ut32 size	404:56:23787:23801	3278309	2	True				
ANR	3278354	ParameterType	const ut32		3278309	0					
ANR	3278355	Identifier	size		3278309	1					
ANR	3278356	CFGEntryNode	ENTRY		3278309		True				
ANR	3278357	CFGExitNode	EXIT		3278309		True				
ANR	3278358	Symbol	size		3278309						
ANR	3278359	Symbol	handle -> end		3278309						
ANR	3278360	Symbol	* handle		3278309						
ANR	3278361	Symbol	handle		3278309						
ANR	3278362	Symbol	buffer		3278309						
ANR	3278363	Symbol	handle -> pos		3278309						
ANR	3278364	Function	mcore_next	413:0:23927:24213							
ANR	3278365	FunctionDef	mcore_next (mcore_handle * handle)		3278364	0					
ANR	3278366	CompoundStatement		413:42:23969:24213	3278364	0					
ANR	3278367	IdentifierDeclStatement	mcore_t * op = NULL ;	414:1:23972:23990	3278364	0	True				
ANR	3278368	IdentifierDecl	* op = NULL		3278364	0					
ANR	3278369	IdentifierDeclType	mcore_t *		3278364	0					
ANR	3278370	Identifier	op		3278364	1					
ANR	3278371	AssignmentExpression	* op = NULL		3278364	2		=			
ANR	3278372	Identifier	NULL		3278364	0					
ANR	3278373	Identifier	NULL		3278364	1					
ANR	3278374	IfStatement	if ( ! handle || handle -> pos + MCORE_INSTR_ALIGN > handle -> end )		3278364	1					
ANR	3278375	Condition	! handle || handle -> pos + MCORE_INSTR_ALIGN > handle -> end	415:5:23997:24052	3278364	0	True				
ANR	3278376	OrExpression	! handle || handle -> pos + MCORE_INSTR_ALIGN > handle -> end		3278364	0		||			
ANR	3278377	UnaryOperationExpression	! handle		3278364	0					
ANR	3278378	UnaryOperator	!		3278364	0					
ANR	3278379	Identifier	handle		3278364	1					
ANR	3278380	RelationalExpression	handle -> pos + MCORE_INSTR_ALIGN > handle -> end		3278364	1		>			
ANR	3278381	AdditiveExpression	handle -> pos + MCORE_INSTR_ALIGN		3278364	0		+			
ANR	3278382	PtrMemberAccess	handle -> pos		3278364	0					
ANR	3278383	Identifier	handle		3278364	0					
ANR	3278384	Identifier	pos		3278364	1					
ANR	3278385	Identifier	MCORE_INSTR_ALIGN		3278364	1					
ANR	3278386	PtrMemberAccess	handle -> end		3278364	1					
ANR	3278387	Identifier	handle		3278364	0					
ANR	3278388	Identifier	end		3278364	1					
ANR	3278389	CompoundStatement		3:63:85:85	3278364	1					
ANR	3278390	ReturnStatement	return NULL ;	416:2:24059:24070	3278364	0	True				
ANR	3278391	Identifier	NULL		3278364	0					
ANR	3278392	IfStatement	if ( ! op && handle -> pos + 2 <= handle -> end )		3278364	2					
ANR	3278393	Condition	! op && handle -> pos + 2 <= handle -> end	419:5:24081:24117	3278364	0	True				
ANR	3278394	AndExpression	! op && handle -> pos + 2 <= handle -> end		3278364	0		&&			
ANR	3278395	UnaryOperationExpression	! op		3278364	0					
ANR	3278396	UnaryOperator	!		3278364	0					
ANR	3278397	Identifier	op		3278364	1					
ANR	3278398	RelationalExpression	handle -> pos + 2 <= handle -> end		3278364	1		<=			
ANR	3278399	AdditiveExpression	handle -> pos + 2		3278364	0		+			
ANR	3278400	PtrMemberAccess	handle -> pos		3278364	0					
ANR	3278401	Identifier	handle		3278364	0					
ANR	3278402	Identifier	pos		3278364	1					
ANR	3278403	PrimaryExpression	2		3278364	1					
ANR	3278404	PtrMemberAccess	handle -> end		3278364	1					
ANR	3278405	Identifier	handle		3278364	0					
ANR	3278406	Identifier	end		3278364	1					
ANR	3278407	CompoundStatement		7:44:150:150	3278364	1					
ANR	3278408	ExpressionStatement	op = find_instruction ( handle -> pos )	420:2:24124:24159	3278364	0	True				
ANR	3278409	AssignmentExpression	op = find_instruction ( handle -> pos )		3278364	0		=			
ANR	3278410	Identifier	op		3278364	0					
ANR	3278411	CallExpression	find_instruction ( handle -> pos )		3278364	1					
ANR	3278412	Callee	find_instruction		3278364	0					
ANR	3278413	Identifier	find_instruction		3278364	0					
ANR	3278414	ArgumentList	handle -> pos		3278364	1					
ANR	3278415	Argument	handle -> pos		3278364	0					
ANR	3278416	PtrMemberAccess	handle -> pos		3278364	0					
ANR	3278417	Identifier	handle		3278364	0					
ANR	3278418	Identifier	pos		3278364	1					
ANR	3278419	ExpressionStatement	handle -> pos += MCORE_INSTR_ALIGN	422:1:24165:24197	3278364	3	True				
ANR	3278420	AssignmentExpression	handle -> pos += MCORE_INSTR_ALIGN		3278364	0		+=			
ANR	3278421	PtrMemberAccess	handle -> pos		3278364	0					
ANR	3278422	Identifier	handle		3278364	0					
ANR	3278423	Identifier	pos		3278364	1					
ANR	3278424	Identifier	MCORE_INSTR_ALIGN		3278364	1					
ANR	3278425	ReturnStatement	return op ;	424:1:24202:24211	3278364	4	True				
ANR	3278426	Identifier	op		3278364	0					
ANR	3278427	ReturnType	mcore_t *		3278364	1					
ANR	3278428	Identifier	mcore_next		3278364	2					
ANR	3278429	ParameterList	mcore_handle * handle		3278364	3					
ANR	3278430	Parameter	mcore_handle * handle	413:20:23947:23966	3278364	0	True				
ANR	3278431	ParameterType	mcore_handle *		3278364	0					
ANR	3278432	Identifier	handle		3278364	1					
ANR	3278433	CFGEntryNode	ENTRY		3278364		True				
ANR	3278434	CFGExitNode	EXIT		3278364		True				
ANR	3278435	Symbol	MCORE_INSTR_ALIGN		3278364						
ANR	3278436	Symbol	op		3278364						
ANR	3278437	Symbol	NULL		3278364						
ANR	3278438	Symbol	handle -> end		3278364						
ANR	3278439	Symbol	* handle		3278364						
ANR	3278440	Symbol	find_instruction		3278364						
ANR	3278441	Symbol	handle		3278364						
ANR	3278442	Symbol	handle -> pos		3278364						
ANR	3278443	Function	mcore_free	427:0:24216:24265							
ANR	3278444	FunctionDef	mcore_free (mcore_t * instr)		3278443	0					
ANR	3278445	CompoundStatement		427:32:24248:24265	3278443	0					
ANR	3278446	ExpressionStatement	free ( instr )	428:1:24251:24263	3278443	0	True				
ANR	3278447	CallExpression	free ( instr )		3278443	0					
ANR	3278448	Callee	free		3278443	0					
ANR	3278449	Identifier	free		3278443	0					
ANR	3278450	ArgumentList	instr		3278443	1					
ANR	3278451	Argument	instr		3278443	0					
ANR	3278452	Identifier	instr		3278443	0					
ANR	3278453	ReturnType	void		3278443	1					
ANR	3278454	Identifier	mcore_free		3278443	2					
ANR	3278455	ParameterList	mcore_t * instr		3278443	3					
ANR	3278456	Parameter	mcore_t * instr	427:16:24232:24245	3278443	0	True				
ANR	3278457	ParameterType	mcore_t *		3278443	0					
ANR	3278458	Identifier	instr		3278443	1					
ANR	3278459	CFGEntryNode	ENTRY		3278443		True				
ANR	3278460	CFGExitNode	EXIT		3278443		True				
ANR	3278461	Symbol	instr		3278443						
ANR	3278462	Function	print_loop	431:0:24268:25544							
ANR	3278463	FunctionDef	"print_loop (char * str , int size , ut64 addr , mcore_t * instr)"		3278462	0					
ANR	3278464	CompoundStatement		431:64:24332:25544	3278462	0					
ANR	3278465	IdentifierDeclStatement	ut32 i ;	432:1:24335:24341	3278462	0	True				
ANR	3278466	IdentifierDecl	i		3278462	0					
ANR	3278467	IdentifierDeclType	ut32		3278462	0					
ANR	3278468	Identifier	i		3278462	1					
ANR	3278469	IdentifierDeclStatement	int bufsize = size ;	433:1:24344:24362	3278462	1	True				
ANR	3278470	IdentifierDecl	bufsize = size		3278462	0					
ANR	3278471	IdentifierDeclType	int		3278462	0					
ANR	3278472	Identifier	bufsize		3278462	1					
ANR	3278473	AssignmentExpression	bufsize = size		3278462	2		=			
ANR	3278474	Identifier	size		3278462	0					
ANR	3278475	Identifier	size		3278462	1					
ANR	3278476	IdentifierDeclStatement	"int add = snprintf ( str , bufsize , ""%s"" , instr -> name ) ;"	434:1:24365:24417	3278462	2	True				
ANR	3278477	IdentifierDecl	"add = snprintf ( str , bufsize , ""%s"" , instr -> name )"		3278462	0					
ANR	3278478	IdentifierDeclType	int		3278462	0					
ANR	3278479	Identifier	add		3278462	1					
ANR	3278480	AssignmentExpression	"add = snprintf ( str , bufsize , ""%s"" , instr -> name )"		3278462	2		=			
ANR	3278481	Identifier	add		3278462	0					
ANR	3278482	CallExpression	"snprintf ( str , bufsize , ""%s"" , instr -> name )"		3278462	1					
ANR	3278483	Callee	snprintf		3278462	0					
ANR	3278484	Identifier	snprintf		3278462	0					
ANR	3278485	ArgumentList	str		3278462	1					
ANR	3278486	Argument	str		3278462	0					
ANR	3278487	Identifier	str		3278462	0					
ANR	3278488	Argument	bufsize		3278462	1					
ANR	3278489	Identifier	bufsize		3278462	0					
ANR	3278490	Argument	"""%s"""		3278462	2					
ANR	3278491	PrimaryExpression	"""%s"""		3278462	0					
ANR	3278492	Argument	instr -> name		3278462	3					
ANR	3278493	PtrMemberAccess	instr -> name		3278462	0					
ANR	3278494	Identifier	instr		3278462	0					
ANR	3278495	Identifier	name		3278462	1					
ANR	3278496	ForStatement	for ( i = 0 ; add > 0 && i < instr -> n_args && add < bufsize ; ++ i )		3278462	3					
ANR	3278497	ForInit	i = 0 ;	435:6:24425:24430	3278462	0	True				
ANR	3278498	AssignmentExpression	i = 0		3278462	0		=			
ANR	3278499	Identifier	i		3278462	0					
ANR	3278500	PrimaryExpression	0		3278462	1					
ANR	3278501	Condition	add > 0 && i < instr -> n_args && add < bufsize	435:13:24432:24476	3278462	1	True				
ANR	3278502	AndExpression	add > 0 && i < instr -> n_args && add < bufsize		3278462	0		&&			
ANR	3278503	RelationalExpression	add > 0		3278462	0		>			
ANR	3278504	Identifier	add		3278462	0					
ANR	3278505	PrimaryExpression	0		3278462	1					
ANR	3278506	AndExpression	i < instr -> n_args && add < bufsize		3278462	1		&&			
ANR	3278507	RelationalExpression	i < instr -> n_args		3278462	0		<			
ANR	3278508	Identifier	i		3278462	0					
ANR	3278509	PtrMemberAccess	instr -> n_args		3278462	1					
ANR	3278510	Identifier	instr		3278462	0					
ANR	3278511	Identifier	n_args		3278462	1					
ANR	3278512	RelationalExpression	add < bufsize		3278462	1		<			
ANR	3278513	Identifier	add		3278462	0					
ANR	3278514	Identifier	bufsize		3278462	1					
ANR	3278515	UnaryExpression	++ i	435:60:24479:24481	3278462	2	True				
ANR	3278516	IncDec	++		3278462	0					
ANR	3278517	Identifier	i		3278462	1					
ANR	3278518	CompoundStatement		5:65:151:151	3278462	3					
ANR	3278519	IfStatement	if ( instr -> args [ i ] . type == TYPE_REG )		3278462	0					
ANR	3278520	Condition	instr -> args [ i ] . type == TYPE_REG	436:6:24492:24522	3278462	0	True				
ANR	3278521	EqualityExpression	instr -> args [ i ] . type == TYPE_REG		3278462	0		==			
ANR	3278522	MemberAccess	instr -> args [ i ] . type		3278462	0					
ANR	3278523	ArrayIndexing	instr -> args [ i ]		3278462	0					
ANR	3278524	PtrMemberAccess	instr -> args		3278462	0					
ANR	3278525	Identifier	instr		3278462	0					
ANR	3278526	Identifier	args		3278462	1					
ANR	3278527	Identifier	i		3278462	1					
ANR	3278528	Identifier	type		3278462	1					
ANR	3278529	Identifier	TYPE_REG		3278462	1					
ANR	3278530	CompoundStatement		6:39:192:192	3278462	1					
ANR	3278531	ExpressionStatement	"add += snprintf ( str + add , bufsize - add , "" r%u,"" , instr -> args [ i ] . value )"	437:3:24530:24603	3278462	0	True				
ANR	3278532	AssignmentExpression	"add += snprintf ( str + add , bufsize - add , "" r%u,"" , instr -> args [ i ] . value )"		3278462	0		+=			
ANR	3278533	Identifier	add		3278462	0					
ANR	3278534	CallExpression	"snprintf ( str + add , bufsize - add , "" r%u,"" , instr -> args [ i ] . value )"		3278462	1					
ANR	3278535	Callee	snprintf		3278462	0					
ANR	3278536	Identifier	snprintf		3278462	0					
ANR	3278537	ArgumentList	str + add		3278462	1					
ANR	3278538	Argument	str + add		3278462	0					
ANR	3278539	AdditiveExpression	str + add		3278462	0		+			
ANR	3278540	Identifier	str		3278462	0					
ANR	3278541	Identifier	add		3278462	1					
ANR	3278542	Argument	bufsize - add		3278462	1					
ANR	3278543	AdditiveExpression	bufsize - add		3278462	0		-			
ANR	3278544	Identifier	bufsize		3278462	0					
ANR	3278545	Identifier	add		3278462	1					
ANR	3278546	Argument	""" r%u,"""		3278462	2					
ANR	3278547	PrimaryExpression	""" r%u,"""		3278462	0					
ANR	3278548	Argument	instr -> args [ i ] . value		3278462	3					
ANR	3278549	MemberAccess	instr -> args [ i ] . value		3278462	0					
ANR	3278550	ArrayIndexing	instr -> args [ i ]		3278462	0					
ANR	3278551	PtrMemberAccess	instr -> args		3278462	0					
ANR	3278552	Identifier	instr		3278462	0					
ANR	3278553	Identifier	args		3278462	1					
ANR	3278554	Identifier	i		3278462	1					
ANR	3278555	Identifier	value		3278462	1					
ANR	3278556	ElseStatement	else		3278462	0					
ANR	3278557	IfStatement	if ( instr -> args [ i ] . type == TYPE_IMM )		3278462	0					
ANR	3278558	Condition	instr -> args [ i ] . type == TYPE_IMM	438:13:24618:24648	3278462	0	True				
ANR	3278559	EqualityExpression	instr -> args [ i ] . type == TYPE_IMM		3278462	0		==			
ANR	3278560	MemberAccess	instr -> args [ i ] . type		3278462	0					
ANR	3278561	ArrayIndexing	instr -> args [ i ]		3278462	0					
ANR	3278562	PtrMemberAccess	instr -> args		3278462	0					
ANR	3278563	Identifier	instr		3278462	0					
ANR	3278564	Identifier	args		3278462	1					
ANR	3278565	Identifier	i		3278462	1					
ANR	3278566	Identifier	type		3278462	1					
ANR	3278567	Identifier	TYPE_IMM		3278462	1					
ANR	3278568	CompoundStatement		8:46:318:318	3278462	1					
ANR	3278569	ExpressionStatement	"add += snprintf ( str + add , bufsize - add , "" 0x%x,"" , instr -> args [ i ] . value )"	439:3:24656:24730	3278462	0	True				
ANR	3278570	AssignmentExpression	"add += snprintf ( str + add , bufsize - add , "" 0x%x,"" , instr -> args [ i ] . value )"		3278462	0		+=			
ANR	3278571	Identifier	add		3278462	0					
ANR	3278572	CallExpression	"snprintf ( str + add , bufsize - add , "" 0x%x,"" , instr -> args [ i ] . value )"		3278462	1					
ANR	3278573	Callee	snprintf		3278462	0					
ANR	3278574	Identifier	snprintf		3278462	0					
ANR	3278575	ArgumentList	str + add		3278462	1					
ANR	3278576	Argument	str + add		3278462	0					
ANR	3278577	AdditiveExpression	str + add		3278462	0		+			
ANR	3278578	Identifier	str		3278462	0					
ANR	3278579	Identifier	add		3278462	1					
ANR	3278580	Argument	bufsize - add		3278462	1					
ANR	3278581	AdditiveExpression	bufsize - add		3278462	0		-			
ANR	3278582	Identifier	bufsize		3278462	0					
ANR	3278583	Identifier	add		3278462	1					
ANR	3278584	Argument	""" 0x%x,"""		3278462	2					
ANR	3278585	PrimaryExpression	""" 0x%x,"""		3278462	0					
ANR	3278586	Argument	instr -> args [ i ] . value		3278462	3					
ANR	3278587	MemberAccess	instr -> args [ i ] . value		3278462	0					
ANR	3278588	ArrayIndexing	instr -> args [ i ]		3278462	0					
ANR	3278589	PtrMemberAccess	instr -> args		3278462	0					
ANR	3278590	Identifier	instr		3278462	0					
ANR	3278591	Identifier	args		3278462	1					
ANR	3278592	Identifier	i		3278462	1					
ANR	3278593	Identifier	value		3278462	1					
ANR	3278594	ElseStatement	else		3278462	0					
ANR	3278595	IfStatement	if ( instr -> args [ i ] . type == TYPE_MEM )		3278462	0					
ANR	3278596	Condition	instr -> args [ i ] . type == TYPE_MEM	440:13:24745:24775	3278462	0	True				
ANR	3278597	EqualityExpression	instr -> args [ i ] . type == TYPE_MEM		3278462	0		==			
ANR	3278598	MemberAccess	instr -> args [ i ] . type		3278462	0					
ANR	3278599	ArrayIndexing	instr -> args [ i ]		3278462	0					
ANR	3278600	PtrMemberAccess	instr -> args		3278462	0					
ANR	3278601	Identifier	instr		3278462	0					
ANR	3278602	Identifier	args		3278462	1					
ANR	3278603	Identifier	i		3278462	1					
ANR	3278604	Identifier	type		3278462	1					
ANR	3278605	Identifier	TYPE_MEM		3278462	1					
ANR	3278606	CompoundStatement		10:46:445:445	3278462	1					
ANR	3278607	ExpressionStatement	"add += snprintf ( str + add , bufsize - add , "" 0x%x(r%d),"" , instr -> args [ i + 1 ] . value , instr -> args [ i ] . value )"	441:3:24783:24892	3278462	0	True				
ANR	3278608	AssignmentExpression	"add += snprintf ( str + add , bufsize - add , "" 0x%x(r%d),"" , instr -> args [ i + 1 ] . value , instr -> args [ i ] . value )"		3278462	0		+=			
ANR	3278609	Identifier	add		3278462	0					
ANR	3278610	CallExpression	"snprintf ( str + add , bufsize - add , "" 0x%x(r%d),"" , instr -> args [ i + 1 ] . value , instr -> args [ i ] . value )"		3278462	1					
ANR	3278611	Callee	snprintf		3278462	0					
ANR	3278612	Identifier	snprintf		3278462	0					
ANR	3278613	ArgumentList	str + add		3278462	1					
ANR	3278614	Argument	str + add		3278462	0					
ANR	3278615	AdditiveExpression	str + add		3278462	0		+			
ANR	3278616	Identifier	str		3278462	0					
ANR	3278617	Identifier	add		3278462	1					
ANR	3278618	Argument	bufsize - add		3278462	1					
ANR	3278619	AdditiveExpression	bufsize - add		3278462	0		-			
ANR	3278620	Identifier	bufsize		3278462	0					
ANR	3278621	Identifier	add		3278462	1					
ANR	3278622	Argument	""" 0x%x(r%d),"""		3278462	2					
ANR	3278623	PrimaryExpression	""" 0x%x(r%d),"""		3278462	0					
ANR	3278624	Argument	instr -> args [ i + 1 ] . value		3278462	3					
ANR	3278625	MemberAccess	instr -> args [ i + 1 ] . value		3278462	0					
ANR	3278626	ArrayIndexing	instr -> args [ i + 1 ]		3278462	0					
ANR	3278627	PtrMemberAccess	instr -> args		3278462	0					
ANR	3278628	Identifier	instr		3278462	0					
ANR	3278629	Identifier	args		3278462	1					
ANR	3278630	AdditiveExpression	i + 1		3278462	1		+			
ANR	3278631	Identifier	i		3278462	0					
ANR	3278632	PrimaryExpression	1		3278462	1					
ANR	3278633	Identifier	value		3278462	1					
ANR	3278634	Argument	instr -> args [ i ] . value		3278462	4					
ANR	3278635	MemberAccess	instr -> args [ i ] . value		3278462	0					
ANR	3278636	ArrayIndexing	instr -> args [ i ]		3278462	0					
ANR	3278637	PtrMemberAccess	instr -> args		3278462	0					
ANR	3278638	Identifier	instr		3278462	0					
ANR	3278639	Identifier	args		3278462	1					
ANR	3278640	Identifier	i		3278462	1					
ANR	3278641	Identifier	value		3278462	1					
ANR	3278642	ExpressionStatement	i ++	443:3:24897:24900	3278462	1	True				
ANR	3278643	PostIncDecOperationExpression	i ++		3278462	0					
ANR	3278644	Identifier	i		3278462	0					
ANR	3278645	IncDec	++		3278462	1					
ANR	3278646	ElseStatement	else		3278462	0					
ANR	3278647	IfStatement	if ( instr -> args [ i ] . type == TYPE_JMPI )		3278462	0					
ANR	3278648	Condition	instr -> args [ i ] . type == TYPE_JMPI	444:13:24915:24946	3278462	0	True				
ANR	3278649	EqualityExpression	instr -> args [ i ] . type == TYPE_JMPI		3278462	0		==			
ANR	3278650	MemberAccess	instr -> args [ i ] . type		3278462	0					
ANR	3278651	ArrayIndexing	instr -> args [ i ]		3278462	0					
ANR	3278652	PtrMemberAccess	instr -> args		3278462	0					
ANR	3278653	Identifier	instr		3278462	0					
ANR	3278654	Identifier	args		3278462	1					
ANR	3278655	Identifier	i		3278462	1					
ANR	3278656	Identifier	type		3278462	1					
ANR	3278657	Identifier	TYPE_JMPI		3278462	1					
ANR	3278658	CompoundStatement		15:3:621:682	3278462	1					
ANR	3278659	IdentifierDeclStatement	ut64 jump = addr + ( ( instr -> args [ i ] . value << 2 ) & 0xfffffffc ) ;	445:3:24954:25015	3278462	0	True				
ANR	3278660	IdentifierDecl	jump = addr + ( ( instr -> args [ i ] . value << 2 ) & 0xfffffffc )		3278462	0					
ANR	3278661	IdentifierDeclType	ut64		3278462	0					
ANR	3278662	Identifier	jump		3278462	1					
ANR	3278663	AssignmentExpression	jump = addr + ( ( instr -> args [ i ] . value << 2 ) & 0xfffffffc )		3278462	2		=			
ANR	3278664	Identifier	jump		3278462	0					
ANR	3278665	AdditiveExpression	addr + ( ( instr -> args [ i ] . value << 2 ) & 0xfffffffc )		3278462	1		+			
ANR	3278666	Identifier	addr		3278462	0					
ANR	3278667	BitAndExpression	( instr -> args [ i ] . value << 2 ) & 0xfffffffc		3278462	1		&			
ANR	3278668	ShiftExpression	instr -> args [ i ] . value << 2		3278462	0		<<			
ANR	3278669	MemberAccess	instr -> args [ i ] . value		3278462	0					
ANR	3278670	ArrayIndexing	instr -> args [ i ]		3278462	0					
ANR	3278671	PtrMemberAccess	instr -> args		3278462	0					
ANR	3278672	Identifier	instr		3278462	0					
ANR	3278673	Identifier	args		3278462	1					
ANR	3278674	Identifier	i		3278462	1					
ANR	3278675	Identifier	value		3278462	1					
ANR	3278676	PrimaryExpression	2		3278462	1					
ANR	3278677	PrimaryExpression	0xfffffffc		3278462	1					
ANR	3278678	Statement	add	446:3:25020:25022	3278462	1	True				
ANR	3278679	Statement	+=	446:7:25024:25025	3278462	2	True				
ANR	3278680	Statement	snprintf	446:10:25027:25034	3278462	3	True				
ANR	3278681	Statement	(	446:19:25036:25036	3278462	4	True				
ANR	3278682	Statement	str	446:20:25037:25039	3278462	5	True				
ANR	3278683	Statement	+	446:24:25041:25041	3278462	6	True				
ANR	3278684	Statement	add	446:26:25043:25045	3278462	7	True				
ANR	3278685	Statement	","	446:29:25046:25046	3278462	8	True				
ANR	3278686	Statement	bufsize	446:31:25048:25054	3278462	9	True				
ANR	3278687	Statement	-	446:39:25056:25056	3278462	10	True				
ANR	3278688	Statement	add	446:41:25058:25060	3278462	11	True				
ANR	3278689	Statement	","	446:44:25061:25061	3278462	12	True				
ANR	3278690	Statement	""" [0x%"""	446:46:25063:25069	3278462	13	True				
ANR	3278691	Statement	PFMT64x	446:54:25071:25077	3278462	14	True				
ANR	3278692	Statement	"""],"""	446:61:25078:25081	3278462	15	True				
ANR	3278693	Statement	","	446:65:25082:25082	3278462	16	True				
ANR	3278694	Statement	jump	446:67:25084:25087	3278462	17	True				
ANR	3278695	Statement	)	446:71:25088:25088	3278462	18	True				
ANR	3278696	ExpressionStatement		446:72:25089:25089	3278462	19	True				
ANR	3278697	ElseStatement	else		3278462	0					
ANR	3278698	IfStatement	if ( instr -> args [ i ] . type == TYPE_JMP )		3278462	0					
ANR	3278699	Condition	instr -> args [ i ] . type == TYPE_JMP	447:13:25104:25134	3278462	0	True				
ANR	3278700	EqualityExpression	instr -> args [ i ] . type == TYPE_JMP		3278462	0		==			
ANR	3278701	MemberAccess	instr -> args [ i ] . type		3278462	0					
ANR	3278702	ArrayIndexing	instr -> args [ i ]		3278462	0					
ANR	3278703	PtrMemberAccess	instr -> args		3278462	0					
ANR	3278704	Identifier	instr		3278462	0					
ANR	3278705	Identifier	args		3278462	1					
ANR	3278706	Identifier	i		3278462	1					
ANR	3278707	Identifier	type		3278462	1					
ANR	3278708	Identifier	TYPE_JMP		3278462	1					
ANR	3278709	CompoundStatement		18:3:809:852	3278462	1					
ANR	3278710	IdentifierDeclStatement	ut64 jump = addr + instr -> args [ i ] . value + 1 ;	448:3:25142:25185	3278462	0	True				
ANR	3278711	IdentifierDecl	jump = addr + instr -> args [ i ] . value + 1		3278462	0					
ANR	3278712	IdentifierDeclType	ut64		3278462	0					
ANR	3278713	Identifier	jump		3278462	1					
ANR	3278714	AssignmentExpression	jump = addr + instr -> args [ i ] . value + 1		3278462	2		=			
ANR	3278715	Identifier	jump		3278462	0					
ANR	3278716	AdditiveExpression	addr + instr -> args [ i ] . value + 1		3278462	1		+			
ANR	3278717	Identifier	addr		3278462	0					
ANR	3278718	AdditiveExpression	instr -> args [ i ] . value + 1		3278462	1		+			
ANR	3278719	MemberAccess	instr -> args [ i ] . value		3278462	0					
ANR	3278720	ArrayIndexing	instr -> args [ i ]		3278462	0					
ANR	3278721	PtrMemberAccess	instr -> args		3278462	0					
ANR	3278722	Identifier	instr		3278462	0					
ANR	3278723	Identifier	args		3278462	1					
ANR	3278724	Identifier	i		3278462	1					
ANR	3278725	Identifier	value		3278462	1					
ANR	3278726	PrimaryExpression	1		3278462	1					
ANR	3278727	Statement	add	449:3:25190:25192	3278462	1	True				
ANR	3278728	Statement	+=	449:7:25194:25195	3278462	2	True				
ANR	3278729	Statement	snprintf	449:10:25197:25204	3278462	3	True				
ANR	3278730	Statement	(	449:19:25206:25206	3278462	4	True				
ANR	3278731	Statement	str	449:20:25207:25209	3278462	5	True				
ANR	3278732	Statement	+	449:24:25211:25211	3278462	6	True				
ANR	3278733	Statement	add	449:26:25213:25215	3278462	7	True				
ANR	3278734	Statement	","	449:29:25216:25216	3278462	8	True				
ANR	3278735	Statement	bufsize	449:31:25218:25224	3278462	9	True				
ANR	3278736	Statement	-	449:39:25226:25226	3278462	10	True				
ANR	3278737	Statement	add	449:41:25228:25230	3278462	11	True				
ANR	3278738	Statement	","	449:44:25231:25231	3278462	12	True				
ANR	3278739	Statement	""" 0x%"""	449:46:25233:25238	3278462	13	True				
ANR	3278740	Statement	PFMT64x	449:53:25240:25246	3278462	14	True				
ANR	3278741	Statement	""","""	449:61:25248:25250	3278462	15	True				
ANR	3278742	Statement	","	449:64:25251:25251	3278462	16	True				
ANR	3278743	Statement	jump	449:66:25253:25256	3278462	17	True				
ANR	3278744	Statement	)	449:70:25257:25257	3278462	18	True				
ANR	3278745	ExpressionStatement		449:71:25258:25258	3278462	19	True				
ANR	3278746	ElseStatement	else		3278462	0					
ANR	3278747	IfStatement	if ( instr -> args [ i ] . type == TYPE_CTRL )		3278462	0					
ANR	3278748	Condition	instr -> args [ i ] . type == TYPE_CTRL	450:13:25273:25304	3278462	0	True				
ANR	3278749	EqualityExpression	instr -> args [ i ] . type == TYPE_CTRL		3278462	0		==			
ANR	3278750	MemberAccess	instr -> args [ i ] . type		3278462	0					
ANR	3278751	ArrayIndexing	instr -> args [ i ]		3278462	0					
ANR	3278752	PtrMemberAccess	instr -> args		3278462	0					
ANR	3278753	Identifier	instr		3278462	0					
ANR	3278754	Identifier	args		3278462	1					
ANR	3278755	Identifier	i		3278462	1					
ANR	3278756	Identifier	type		3278462	1					
ANR	3278757	Identifier	TYPE_CTRL		3278462	1					
ANR	3278758	CompoundStatement		21:3:979:1010	3278462	1					
ANR	3278759	IdentifierDeclStatement	ut32 pos = instr -> args [ i ] . value ;	451:3:25312:25343	3278462	0	True				
ANR	3278760	IdentifierDecl	pos = instr -> args [ i ] . value		3278462	0					
ANR	3278761	IdentifierDeclType	ut32		3278462	0					
ANR	3278762	Identifier	pos		3278462	1					
ANR	3278763	AssignmentExpression	pos = instr -> args [ i ] . value		3278462	2		=			
ANR	3278764	Identifier	pos		3278462	0					
ANR	3278765	MemberAccess	instr -> args [ i ] . value		3278462	1					
ANR	3278766	ArrayIndexing	instr -> args [ i ]		3278462	0					
ANR	3278767	PtrMemberAccess	instr -> args		3278462	0					
ANR	3278768	Identifier	instr		3278462	0					
ANR	3278769	Identifier	args		3278462	1					
ANR	3278770	Identifier	i		3278462	1					
ANR	3278771	Identifier	value		3278462	1					
ANR	3278772	IfStatement	if ( pos >= 32 )		3278462	1					
ANR	3278773	Condition	pos >= 32	452:7:25352:25360	3278462	0	True				
ANR	3278774	RelationalExpression	pos >= 32		3278462	0		>=			
ANR	3278775	Identifier	pos		3278462	0					
ANR	3278776	PrimaryExpression	32		3278462	1					
ANR	3278777	CompoundStatement		22:18:1030:1030	3278462	1					
ANR	3278778	ExpressionStatement	pos = 32	453:4:25369:25377	3278462	0	True				
ANR	3278779	AssignmentExpression	pos = 32		3278462	0		=			
ANR	3278780	Identifier	pos		3278462	0					
ANR	3278781	PrimaryExpression	32		3278462	1					
ANR	3278782	ExpressionStatement	"add += snprintf ( str + add , bufsize - add , "" %s,"" , mcore_ctrl_registers [ pos ] )"	455:3:25387:25464	3278462	2	True				
ANR	3278783	AssignmentExpression	"add += snprintf ( str + add , bufsize - add , "" %s,"" , mcore_ctrl_registers [ pos ] )"		3278462	0		+=			
ANR	3278784	Identifier	add		3278462	0					
ANR	3278785	CallExpression	"snprintf ( str + add , bufsize - add , "" %s,"" , mcore_ctrl_registers [ pos ] )"		3278462	1					
ANR	3278786	Callee	snprintf		3278462	0					
ANR	3278787	Identifier	snprintf		3278462	0					
ANR	3278788	ArgumentList	str + add		3278462	1					
ANR	3278789	Argument	str + add		3278462	0					
ANR	3278790	AdditiveExpression	str + add		3278462	0		+			
ANR	3278791	Identifier	str		3278462	0					
ANR	3278792	Identifier	add		3278462	1					
ANR	3278793	Argument	bufsize - add		3278462	1					
ANR	3278794	AdditiveExpression	bufsize - add		3278462	0		-			
ANR	3278795	Identifier	bufsize		3278462	0					
ANR	3278796	Identifier	add		3278462	1					
ANR	3278797	Argument	""" %s,"""		3278462	2					
ANR	3278798	PrimaryExpression	""" %s,"""		3278462	0					
ANR	3278799	Argument	mcore_ctrl_registers [ pos ]		3278462	3					
ANR	3278800	ArrayIndexing	mcore_ctrl_registers [ pos ]		3278462	0					
ANR	3278801	Identifier	mcore_ctrl_registers		3278462	0					
ANR	3278802	Identifier	pos		3278462	1					
ANR	3278803	IfStatement	if ( instr -> n_args )		3278462	4					
ANR	3278804	Condition	instr -> n_args	458:5:25478:25490	3278462	0	True				
ANR	3278805	PtrMemberAccess	instr -> n_args		3278462	0					
ANR	3278806	Identifier	instr		3278462	0					
ANR	3278807	Identifier	n_args		3278462	1					
ANR	3278808	CompoundStatement		28:20:1160:1160	3278462	1					
ANR	3278809	ExpressionStatement	* ( str + add - 1 ) = 0	460:2:25519:25539	3278462	0	True				
ANR	3278810	AssignmentExpression	* ( str + add - 1 ) = 0		3278462	0		=			
ANR	3278811	UnaryOperationExpression	* ( str + add - 1 )		3278462	0					
ANR	3278812	UnaryOperator	*		3278462	0					
ANR	3278813	AdditiveExpression	str + add - 1		3278462	1		+			
ANR	3278814	Identifier	str		3278462	0					
ANR	3278815	AdditiveExpression	add - 1		3278462	1		-			
ANR	3278816	Identifier	add		3278462	0					
ANR	3278817	PrimaryExpression	1		3278462	1					
ANR	3278818	PrimaryExpression	0		3278462	1					
ANR	3278819	ReturnType	void		3278462	1					
ANR	3278820	Identifier	print_loop		3278462	2					
ANR	3278821	ParameterList	"char * str , int size , ut64 addr , mcore_t * instr"		3278462	3					
ANR	3278822	Parameter	char * str	431:16:24284:24292	3278462	0	True				
ANR	3278823	ParameterType	char *		3278462	0					
ANR	3278824	Identifier	str		3278462	1					
ANR	3278825	Parameter	int size	431:27:24295:24302	3278462	1	True				
ANR	3278826	ParameterType	int		3278462	0					
ANR	3278827	Identifier	size		3278462	1					
ANR	3278828	Parameter	ut64 addr	431:37:24305:24313	3278462	2	True				
ANR	3278829	ParameterType	ut64		3278462	0					
ANR	3278830	Identifier	addr		3278462	1					
ANR	3278831	Parameter	mcore_t * instr	431:48:24316:24329	3278462	3	True				
ANR	3278832	ParameterType	mcore_t *		3278462	0					
ANR	3278833	Identifier	instr		3278462	1					
ANR	3278834	CFGEntryNode	ENTRY		3278462		True				
ANR	3278835	CFGExitNode	EXIT		3278462		True				
ANR	3278836	Symbol	TYPE_JMP		3278462						
ANR	3278837	Symbol	instr -> args [ i + 1 ] . value		3278462						
ANR	3278838	Symbol	TYPE_REG		3278462						
ANR	3278839	Symbol	instr -> n_args		3278462						
ANR	3278840	Symbol	TYPE_IMM		3278462						
ANR	3278841	Symbol	instr -> args [ i ] . value		3278462						
ANR	3278842	Symbol	instr -> args		3278462						
ANR	3278843	Symbol	pos		3278462						
ANR	3278844	Symbol	* ( str + add - 1 )		3278462						
ANR	3278845	Symbol	instr -> name		3278462						
ANR	3278846	Symbol	instr		3278462						
ANR	3278847	Symbol	TYPE_CTRL		3278462						
ANR	3278848	Symbol	TYPE_MEM		3278462						
ANR	3278849	Symbol	* str		3278462						
ANR	3278850	Symbol	addr		3278462						
ANR	3278851	Symbol	snprintf		3278462						
ANR	3278852	Symbol	jump		3278462						
ANR	3278853	Symbol	add		3278462						
ANR	3278854	Symbol	* instr -> args		3278462						
ANR	3278855	Symbol	bufsize		3278462						
ANR	3278856	Symbol	i		3278462						
ANR	3278857	Symbol	* instr		3278462						
ANR	3278858	Symbol	TYPE_JMPI		3278462						
ANR	3278859	Symbol	str		3278462						
ANR	3278860	Symbol	instr -> args [ i ] . type		3278462						
ANR	3278861	Symbol	* i		3278462						
ANR	3278862	Symbol	size		3278462						
ANR	3278863	Symbol	* add		3278462						
ANR	3278864	Symbol	* mcore_ctrl_registers		3278462						
ANR	3278865	Symbol	* * instr		3278462						
ANR	3278866	Symbol	* pos		3278462						
ANR	3278867	Symbol	mcore_ctrl_registers		3278462						
ANR	3278868	Function	mcore_snprint	464:0:25547:25990							
ANR	3278869	FunctionDef	"mcore_snprint (char * str , int size , ut64 addr , mcore_t * instr)"		3278868	0					
ANR	3278870	CompoundStatement		464:67:25614:25990	3278868	0					
ANR	3278871	IdentifierDeclStatement	ut32 imm ;	465:1:25617:25625	3278868	0	True				
ANR	3278872	IdentifierDecl	imm		3278868	0					
ANR	3278873	IdentifierDeclType	ut32		3278868	0					
ANR	3278874	Identifier	imm		3278868	1					
ANR	3278875	IfStatement	if ( ! instr || ! str )		3278868	1					
ANR	3278876	Condition	! instr || ! str	466:5:25632:25645	3278868	0	True				
ANR	3278877	OrExpression	! instr || ! str		3278868	0		||			
ANR	3278878	UnaryOperationExpression	! instr		3278868	0					
ANR	3278879	UnaryOperator	!		3278868	0					
ANR	3278880	Identifier	instr		3278868	1					
ANR	3278881	UnaryOperationExpression	! str		3278868	1					
ANR	3278882	UnaryOperator	!		3278868	0					
ANR	3278883	Identifier	str		3278868	1					
ANR	3278884	CompoundStatement		3:21:33:33	3278868	1					
ANR	3278885	ReturnStatement	return ;	467:2:25652:25658	3278868	0	True				
ANR	3278886	SwitchStatement	switch ( instr -> type )		3278868	2					
ANR	3278887	Condition	instr -> type	469:9:25672:25682	3278868	0	True				
ANR	3278888	PtrMemberAccess	instr -> type		3278868	0					
ANR	3278889	Identifier	instr		3278868	0					
ANR	3278890	Identifier	type		3278868	1					
ANR	3278891	CompoundStatement		6:22:70:70	3278868	1					
ANR	3278892	Label	case R_ANAL_OP_TYPE_LOAD :	470:1:25688:25712	3278868	0	True				
ANR	3278893	Identifier	R_ANAL_OP_TYPE_LOAD		3278868	0					
ANR	3278894	Label	case R_ANAL_OP_TYPE_STORE :	471:1:25715:25740	3278868	1	True				
ANR	3278895	Identifier	R_ANAL_OP_TYPE_STORE		3278868	0					
ANR	3278896	ExpressionStatement	imm = instr -> args [ 1 ] . value << load_shift [ instr -> args [ 3 ] . value ]	472:2:25744:25806	3278868	2	True				
ANR	3278897	AssignmentExpression	imm = instr -> args [ 1 ] . value << load_shift [ instr -> args [ 3 ] . value ]		3278868	0		=			
ANR	3278898	Identifier	imm		3278868	0					
ANR	3278899	ShiftExpression	instr -> args [ 1 ] . value << load_shift [ instr -> args [ 3 ] . value ]		3278868	1		<<			
ANR	3278900	MemberAccess	instr -> args [ 1 ] . value		3278868	0					
ANR	3278901	ArrayIndexing	instr -> args [ 1 ]		3278868	0					
ANR	3278902	PtrMemberAccess	instr -> args		3278868	0					
ANR	3278903	Identifier	instr		3278868	0					
ANR	3278904	Identifier	args		3278868	1					
ANR	3278905	PrimaryExpression	1		3278868	1					
ANR	3278906	Identifier	value		3278868	1					
ANR	3278907	ArrayIndexing	load_shift [ instr -> args [ 3 ] . value ]		3278868	1					
ANR	3278908	Identifier	load_shift		3278868	0					
ANR	3278909	MemberAccess	instr -> args [ 3 ] . value		3278868	1					
ANR	3278910	ArrayIndexing	instr -> args [ 3 ]		3278868	0					
ANR	3278911	PtrMemberAccess	instr -> args		3278868	0					
ANR	3278912	Identifier	instr		3278868	0					
ANR	3278913	Identifier	args		3278868	1					
ANR	3278914	PrimaryExpression	3		3278868	1					
ANR	3278915	Identifier	value		3278868	1					
ANR	3278916	ExpressionStatement	"snprintf ( str , size , ""%s r%u, (r%u, 0x%x)"" , instr -> name , instr -> args [ 2 ] . value , instr -> args [ 0 ] . value , imm )"	473:2:25810:25918	3278868	3	True				
ANR	3278917	CallExpression	"snprintf ( str , size , ""%s r%u, (r%u, 0x%x)"" , instr -> name , instr -> args [ 2 ] . value , instr -> args [ 0 ] . value , imm )"		3278868	0					
ANR	3278918	Callee	snprintf		3278868	0					
ANR	3278919	Identifier	snprintf		3278868	0					
ANR	3278920	ArgumentList	str		3278868	1					
ANR	3278921	Argument	str		3278868	0					
ANR	3278922	Identifier	str		3278868	0					
ANR	3278923	Argument	size		3278868	1					
ANR	3278924	Identifier	size		3278868	0					
ANR	3278925	Argument	"""%s r%u, (r%u, 0x%x)"""		3278868	2					
ANR	3278926	PrimaryExpression	"""%s r%u, (r%u, 0x%x)"""		3278868	0					
ANR	3278927	Argument	instr -> name		3278868	3					
ANR	3278928	PtrMemberAccess	instr -> name		3278868	0					
ANR	3278929	Identifier	instr		3278868	0					
ANR	3278930	Identifier	name		3278868	1					
ANR	3278931	Argument	instr -> args [ 2 ] . value		3278868	4					
ANR	3278932	MemberAccess	instr -> args [ 2 ] . value		3278868	0					
ANR	3278933	ArrayIndexing	instr -> args [ 2 ]		3278868	0					
ANR	3278934	PtrMemberAccess	instr -> args		3278868	0					
ANR	3278935	Identifier	instr		3278868	0					
ANR	3278936	Identifier	args		3278868	1					
ANR	3278937	PrimaryExpression	2		3278868	1					
ANR	3278938	Identifier	value		3278868	1					
ANR	3278939	Argument	instr -> args [ 0 ] . value		3278868	5					
ANR	3278940	MemberAccess	instr -> args [ 0 ] . value		3278868	0					
ANR	3278941	ArrayIndexing	instr -> args [ 0 ]		3278868	0					
ANR	3278942	PtrMemberAccess	instr -> args		3278868	0					
ANR	3278943	Identifier	instr		3278868	0					
ANR	3278944	Identifier	args		3278868	1					
ANR	3278945	PrimaryExpression	0		3278868	1					
ANR	3278946	Identifier	value		3278868	1					
ANR	3278947	Argument	imm		3278868	6					
ANR	3278948	Identifier	imm		3278868	0					
ANR	3278949	BreakStatement	break ;	475:2:25922:25927	3278868	4	True				
ANR	3278950	Label	default :	476:1:25930:25937	3278868	5	True				
ANR	3278951	Identifier	default		3278868	0					
ANR	3278952	ExpressionStatement	"print_loop ( str , size , addr , instr )"	477:2:25941:25976	3278868	6	True				
ANR	3278953	CallExpression	"print_loop ( str , size , addr , instr )"		3278868	0					
ANR	3278954	Callee	print_loop		3278868	0					
ANR	3278955	Identifier	print_loop		3278868	0					
ANR	3278956	ArgumentList	str		3278868	1					
ANR	3278957	Argument	str		3278868	0					
ANR	3278958	Identifier	str		3278868	0					
ANR	3278959	Argument	size		3278868	1					
ANR	3278960	Identifier	size		3278868	0					
ANR	3278961	Argument	addr		3278868	2					
ANR	3278962	Identifier	addr		3278868	0					
ANR	3278963	Argument	instr		3278868	3					
ANR	3278964	Identifier	instr		3278868	0					
ANR	3278965	BreakStatement	break ;	478:2:25980:25985	3278868	7	True				
ANR	3278966	ReturnType	void		3278868	1					
ANR	3278967	Identifier	mcore_snprint		3278868	2					
ANR	3278968	ParameterList	"char * str , int size , ut64 addr , mcore_t * instr"		3278868	3					
ANR	3278969	Parameter	char * str	464:19:25566:25574	3278868	0	True				
ANR	3278970	ParameterType	char *		3278868	0					
ANR	3278971	Identifier	str		3278868	1					
ANR	3278972	Parameter	int size	464:30:25577:25584	3278868	1	True				
ANR	3278973	ParameterType	int		3278868	0					
ANR	3278974	Identifier	size		3278868	1					
ANR	3278975	Parameter	ut64 addr	464:40:25587:25595	3278868	2	True				
ANR	3278976	ParameterType	ut64		3278868	0					
ANR	3278977	Identifier	addr		3278868	1					
ANR	3278978	Parameter	mcore_t * instr	464:51:25598:25611	3278868	3	True				
ANR	3278979	ParameterType	mcore_t *		3278868	0					
ANR	3278980	Identifier	instr		3278868	1					
ANR	3278981	CFGEntryNode	ENTRY		3278868		True				
ANR	3278982	CFGExitNode	EXIT		3278868		True				
ANR	3278983	Symbol	* instr -> args		3278868						
ANR	3278984	Symbol	instr -> args [ 1 ] . value		3278868						
ANR	3278985	Symbol	instr -> args [ 0 ] . value		3278868						
ANR	3278986	Symbol	load_shift		3278868						
ANR	3278987	Symbol	* * * instr		3278868						
ANR	3278988	Symbol	instr -> type		3278868						
ANR	3278989	Symbol	instr -> args [ 2 ] . value		3278868						
ANR	3278990	Symbol	imm		3278868						
ANR	3278991	Symbol	instr -> args [ 3 ] . value		3278868						
ANR	3278992	Symbol	* instr		3278868						
ANR	3278993	Symbol	* instr -> args [ 3 ] . value		3278868						
ANR	3278994	Symbol	str		3278868						
ANR	3278995	Symbol	* * instr -> args		3278868						
ANR	3278996	Symbol	instr -> args		3278868						
ANR	3278997	Symbol	size		3278868						
ANR	3278998	Symbol	instr -> name		3278868						
ANR	3278999	Symbol	instr		3278868						
ANR	3279000	Symbol	* load_shift		3278868						
ANR	3279001	Symbol	addr		3278868						
ANR	3279002	Symbol	* * instr		3278868						
