command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4358258	File	data/converged/CVE-2019-16718~_radare2/libr_core_cmd_type.c								
ANR	4358259	DeclStmt									
ANR	4358260	Decl							const char	const char * [ ]	help_msg_t
ANR	4358261	DeclStmt									
ANR	4358262	Decl							const char	const char * [ ]	help_msg_tcc
ANR	4358263	DeclStmt									
ANR	4358264	Decl							const char	const char * [ ]	help_msg_t_minus
ANR	4358265	DeclStmt									
ANR	4358266	Decl							const char	const char * [ ]	help_msg_ta
ANR	4358267	DeclStmt									
ANR	4358268	Decl							const char	const char * [ ]	help_msg_tf
ANR	4358269	DeclStmt									
ANR	4358270	Decl							const char	const char * [ ]	help_msg_to
ANR	4358271	DeclStmt									
ANR	4358272	Decl							const char	const char * [ ]	help_msg_tc
ANR	4358273	DeclStmt									
ANR	4358274	Decl							const char	const char * [ ]	help_msg_td
ANR	4358275	DeclStmt									
ANR	4358276	Decl							const char	const char * [ ]	help_msg_te
ANR	4358277	DeclStmt									
ANR	4358278	Decl							const char	const char * [ ]	help_msg_tt
ANR	4358279	DeclStmt									
ANR	4358280	Decl							const char	const char * [ ]	help_msg_tl
ANR	4358281	DeclStmt									
ANR	4358282	Decl							const char	const char * [ ]	help_msg_tn
ANR	4358283	DeclStmt									
ANR	4358284	Decl							const char	const char * [ ]	help_msg_ts
ANR	4358285	DeclStmt									
ANR	4358286	Decl							const char	const char * [ ]	help_msg_tu
ANR	4358287	Function	cmd_type_init	176:0:6628:7070							
ANR	4358288	FunctionDef	cmd_type_init (RCore * core)		4358287	0					
ANR	4358289	CompoundStatement		176:39:6667:7070	4358287	0					
ANR	4358290	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , t )"	177:1:6670:6701	4358287	0	True				
ANR	4358291	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , t )"		4358287	0					
ANR	4358292	Callee	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358293	Identifier	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358294	ArgumentList	core		4358287	1					
ANR	4358295	Argument	core		4358287	0					
ANR	4358296	Identifier	core		4358287	0					
ANR	4358297	Argument	t		4358287	1					
ANR	4358298	Identifier	t		4358287	0					
ANR	4358299	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	178:1:6704:6732	4358287	1	True				
ANR	4358300	Statement	(	178:31:6734:6734	4358287	2	True				
ANR	4358301	Statement	core	178:32:6735:6738	4358287	3	True				
ANR	4358302	Statement	","	178:36:6739:6739	4358287	4	True				
ANR	4358303	Statement	t	178:38:6741:6741	4358287	5	True				
ANR	4358304	Statement	-	178:39:6742:6742	4358287	6	True				
ANR	4358305	Statement	","	178:40:6743:6743	4358287	7	True				
ANR	4358306	Statement	t_minus	178:42:6745:6751	4358287	8	True				
ANR	4358307	Statement	)	178:49:6752:6752	4358287	9	True				
ANR	4358308	ExpressionStatement		178:50:6753:6753	4358287	10	True				
ANR	4358309	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ta )"	179:1:6756:6788	4358287	11	True				
ANR	4358310	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ta )"		4358287	0					
ANR	4358311	Callee	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358312	Identifier	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358313	ArgumentList	core		4358287	1					
ANR	4358314	Argument	core		4358287	0					
ANR	4358315	Identifier	core		4358287	0					
ANR	4358316	Argument	ta		4358287	1					
ANR	4358317	Identifier	ta		4358287	0					
ANR	4358318	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , tc )"	180:1:6791:6823	4358287	12	True				
ANR	4358319	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , tc )"		4358287	0					
ANR	4358320	Callee	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358321	Identifier	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358322	ArgumentList	core		4358287	1					
ANR	4358323	Argument	core		4358287	0					
ANR	4358324	Identifier	core		4358287	0					
ANR	4358325	Argument	tc		4358287	1					
ANR	4358326	Identifier	tc		4358287	0					
ANR	4358327	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , td )"	181:1:6826:6858	4358287	13	True				
ANR	4358328	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , td )"		4358287	0					
ANR	4358329	Callee	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358330	Identifier	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358331	ArgumentList	core		4358287	1					
ANR	4358332	Argument	core		4358287	0					
ANR	4358333	Identifier	core		4358287	0					
ANR	4358334	Argument	td		4358287	1					
ANR	4358335	Identifier	td		4358287	0					
ANR	4358336	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , te )"	182:1:6861:6893	4358287	14	True				
ANR	4358337	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , te )"		4358287	0					
ANR	4358338	Callee	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358339	Identifier	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358340	ArgumentList	core		4358287	1					
ANR	4358341	Argument	core		4358287	0					
ANR	4358342	Identifier	core		4358287	0					
ANR	4358343	Argument	te		4358287	1					
ANR	4358344	Identifier	te		4358287	0					
ANR	4358345	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , tl )"	183:1:6896:6928	4358287	15	True				
ANR	4358346	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , tl )"		4358287	0					
ANR	4358347	Callee	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358348	Identifier	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358349	ArgumentList	core		4358287	1					
ANR	4358350	Argument	core		4358287	0					
ANR	4358351	Identifier	core		4358287	0					
ANR	4358352	Argument	tl		4358287	1					
ANR	4358353	Identifier	tl		4358287	0					
ANR	4358354	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , tn )"	184:1:6931:6963	4358287	16	True				
ANR	4358355	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , tn )"		4358287	0					
ANR	4358356	Callee	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358357	Identifier	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358358	ArgumentList	core		4358287	1					
ANR	4358359	Argument	core		4358287	0					
ANR	4358360	Identifier	core		4358287	0					
ANR	4358361	Argument	tn		4358287	1					
ANR	4358362	Identifier	tn		4358287	0					
ANR	4358363	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ts )"	185:1:6966:6998	4358287	17	True				
ANR	4358364	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ts )"		4358287	0					
ANR	4358365	Callee	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358366	Identifier	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358367	ArgumentList	core		4358287	1					
ANR	4358368	Argument	core		4358287	0					
ANR	4358369	Identifier	core		4358287	0					
ANR	4358370	Argument	ts		4358287	1					
ANR	4358371	Identifier	ts		4358287	0					
ANR	4358372	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , tu )"	186:1:7001:7033	4358287	18	True				
ANR	4358373	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , tu )"		4358287	0					
ANR	4358374	Callee	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358375	Identifier	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358376	ArgumentList	core		4358287	1					
ANR	4358377	Argument	core		4358287	0					
ANR	4358378	Identifier	core		4358287	0					
ANR	4358379	Argument	tu		4358287	1					
ANR	4358380	Identifier	tu		4358287	0					
ANR	4358381	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , tt )"	187:1:7036:7068	4358287	19	True				
ANR	4358382	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , tt )"		4358287	0					
ANR	4358383	Callee	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358384	Identifier	DEFINE_CMD_DESCRIPTOR		4358287	0					
ANR	4358385	ArgumentList	core		4358287	1					
ANR	4358386	Argument	core		4358287	0					
ANR	4358387	Identifier	core		4358287	0					
ANR	4358388	Argument	tt		4358287	1					
ANR	4358389	Identifier	tt		4358287	0					
ANR	4358390	ReturnType	static void		4358287	1					
ANR	4358391	Identifier	cmd_type_init		4358287	2					
ANR	4358392	ParameterList	RCore * core		4358287	3					
ANR	4358393	Parameter	RCore * core	176:26:6654:6664	4358287	0	True				
ANR	4358394	ParameterType	RCore *		4358287	0					
ANR	4358395	Identifier	core		4358287	1					
ANR	4358396	CFGEntryNode	ENTRY		4358287		True				
ANR	4358397	CFGExitNode	EXIT		4358287		True				
ANR	4358398	Symbol	td		4358287						
ANR	4358399	Symbol	tt		4358287						
ANR	4358400	Symbol	core		4358287						
ANR	4358401	Symbol	te		4358287						
ANR	4358402	Symbol	tu		4358287						
ANR	4358403	Symbol	t		4358287						
ANR	4358404	Symbol	tl		4358287						
ANR	4358405	Symbol	tn		4358287						
ANR	4358406	Symbol	ta		4358287						
ANR	4358407	Symbol	tc		4358287						
ANR	4358408	Symbol	ts		4358287						
ANR	4358409	Function	show_help	190:0:7073:7147							
ANR	4358410	FunctionDef	show_help (RCore * core)		4358409	0					
ANR	4358411	CompoundStatement		190:35:7108:7147	4358409	0					
ANR	4358412	ExpressionStatement	"r_core_cmd_help ( core , help_msg_t )"	191:1:7111:7145	4358409	0	True				
ANR	4358413	CallExpression	"r_core_cmd_help ( core , help_msg_t )"		4358409	0					
ANR	4358414	Callee	r_core_cmd_help		4358409	0					
ANR	4358415	Identifier	r_core_cmd_help		4358409	0					
ANR	4358416	ArgumentList	core		4358409	1					
ANR	4358417	Argument	core		4358409	0					
ANR	4358418	Identifier	core		4358409	0					
ANR	4358419	Argument	help_msg_t		4358409	1					
ANR	4358420	Identifier	help_msg_t		4358409	0					
ANR	4358421	ReturnType	static void		4358409	1					
ANR	4358422	Identifier	show_help		4358409	2					
ANR	4358423	ParameterList	RCore * core		4358409	3					
ANR	4358424	Parameter	RCore * core	190:22:7095:7105	4358409	0	True				
ANR	4358425	ParameterType	RCore *		4358409	0					
ANR	4358426	Identifier	core		4358409	1					
ANR	4358427	CFGEntryNode	ENTRY		4358409		True				
ANR	4358428	CFGExitNode	EXIT		4358409		True				
ANR	4358429	Symbol	core		4358409						
ANR	4358430	Symbol	help_msg_t		4358409						
ANR	4358431	Function	__core_cmd_tcc	194:0:7150:8914							
ANR	4358432	FunctionDef	"__core_cmd_tcc (RCore * core , const char * input)"		4358431	0					
ANR	4358433	CompoundStatement		194:59:7209:8914	4358431	0					
ANR	4358434	SwitchStatement	switch ( * input )		4358431	0					
ANR	4358435	Condition	* input	195:9:7220:7225	4358431	0	True				
ANR	4358436	UnaryOperationExpression	* input		4358431	0					
ANR	4358437	UnaryOperator	*		4358431	0					
ANR	4358438	Identifier	input		4358431	1					
ANR	4358439	CompoundStatement		2:17:18:18	4358431	1					
ANR	4358440	Label	case '?' :	196:1:7231:7239	4358431	0	True				
ANR	4358441	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tcc )"	197:2:7243:7279	4358431	1	True				
ANR	4358442	CallExpression	"r_core_cmd_help ( core , help_msg_tcc )"		4358431	0					
ANR	4358443	Callee	r_core_cmd_help		4358431	0					
ANR	4358444	Identifier	r_core_cmd_help		4358431	0					
ANR	4358445	ArgumentList	core		4358431	1					
ANR	4358446	Argument	core		4358431	0					
ANR	4358447	Identifier	core		4358431	0					
ANR	4358448	Argument	help_msg_tcc		4358431	1					
ANR	4358449	Identifier	help_msg_tcc		4358431	0					
ANR	4358450	BreakStatement	break ;	198:2:7283:7288	4358431	2	True				
ANR	4358451	Label	case '-' :	199:1:7291:7299	4358431	3	True				
ANR	4358452	ExpressionStatement	"r_anal_cc_del ( core -> anal , r_str_trim_ro ( input + 1 ) )"	200:2:7303:7356	4358431	4	True				
ANR	4358453	CallExpression	"r_anal_cc_del ( core -> anal , r_str_trim_ro ( input + 1 ) )"		4358431	0					
ANR	4358454	Callee	r_anal_cc_del		4358431	0					
ANR	4358455	Identifier	r_anal_cc_del		4358431	0					
ANR	4358456	ArgumentList	core -> anal		4358431	1					
ANR	4358457	Argument	core -> anal		4358431	0					
ANR	4358458	PtrMemberAccess	core -> anal		4358431	0					
ANR	4358459	Identifier	core		4358431	0					
ANR	4358460	Identifier	anal		4358431	1					
ANR	4358461	Argument	r_str_trim_ro ( input + 1 )		4358431	1					
ANR	4358462	CallExpression	r_str_trim_ro ( input + 1 )		4358431	0					
ANR	4358463	Callee	r_str_trim_ro		4358431	0					
ANR	4358464	Identifier	r_str_trim_ro		4358431	0					
ANR	4358465	ArgumentList	input + 1		4358431	1					
ANR	4358466	Argument	input + 1		4358431	0					
ANR	4358467	AdditiveExpression	input + 1		4358431	0		+			
ANR	4358468	Identifier	input		4358431	0					
ANR	4358469	PrimaryExpression	1		4358431	1					
ANR	4358470	BreakStatement	break ;	201:2:7360:7365	4358431	5	True				
ANR	4358471	Label	case 0 :	202:1:7368:7374	4358431	6	True				
ANR	4358472	ExpressionStatement	"r_core_cmd0 ( core , ""afcl"" )"	203:2:7378:7404	4358431	7	True				
ANR	4358473	CallExpression	"r_core_cmd0 ( core , ""afcl"" )"		4358431	0					
ANR	4358474	Callee	r_core_cmd0		4358431	0					
ANR	4358475	Identifier	r_core_cmd0		4358431	0					
ANR	4358476	ArgumentList	core		4358431	1					
ANR	4358477	Argument	core		4358431	0					
ANR	4358478	Identifier	core		4358431	0					
ANR	4358479	Argument	"""afcl"""		4358431	1					
ANR	4358480	PrimaryExpression	"""afcl"""		4358431	0					
ANR	4358481	BreakStatement	break ;	204:2:7408:7413	4358431	8	True				
ANR	4358482	Label	case 'j' :	205:1:7416:7424	4358431	9	True				
ANR	4358483	CompoundStatement		18:3:359:377	4358431	10					
ANR	4358484	IdentifierDeclStatement	"char * ccs = r_core_cmd_strf ( core , ""afcl"" ) ;"	207:3:7433:7475	4358431	0	True				
ANR	4358485	IdentifierDecl	"* ccs = r_core_cmd_strf ( core , ""afcl"" )"		4358431	0					
ANR	4358486	IdentifierDeclType	char *		4358431	0					
ANR	4358487	Identifier	ccs		4358431	1					
ANR	4358488	AssignmentExpression	"* ccs = r_core_cmd_strf ( core , ""afcl"" )"		4358431	2		=			
ANR	4358489	Identifier	ccs		4358431	0					
ANR	4358490	CallExpression	"r_core_cmd_strf ( core , ""afcl"" )"		4358431	1					
ANR	4358491	Callee	r_core_cmd_strf		4358431	0					
ANR	4358492	Identifier	r_core_cmd_strf		4358431	0					
ANR	4358493	ArgumentList	core		4358431	1					
ANR	4358494	Argument	core		4358431	0					
ANR	4358495	Identifier	core		4358431	0					
ANR	4358496	Argument	"""afcl"""		4358431	1					
ANR	4358497	PrimaryExpression	"""afcl"""		4358431	0					
ANR	4358498	IdentifierDeclStatement	"RList * list = r_str_split_list ( ccs , ""\\n"" , 0 ) ;"	208:3:7480:7525	4358431	1	True				
ANR	4358499	IdentifierDecl	"* list = r_str_split_list ( ccs , ""\\n"" , 0 )"		4358431	0					
ANR	4358500	IdentifierDeclType	RList *		4358431	0					
ANR	4358501	Identifier	list		4358431	1					
ANR	4358502	AssignmentExpression	"* list = r_str_split_list ( ccs , ""\\n"" , 0 )"		4358431	2		=			
ANR	4358503	Identifier	list		4358431	0					
ANR	4358504	CallExpression	"r_str_split_list ( ccs , ""\\n"" , 0 )"		4358431	1					
ANR	4358505	Callee	r_str_split_list		4358431	0					
ANR	4358506	Identifier	r_str_split_list		4358431	0					
ANR	4358507	ArgumentList	ccs		4358431	1					
ANR	4358508	Argument	ccs		4358431	0					
ANR	4358509	Identifier	ccs		4358431	0					
ANR	4358510	Argument	"""\\n"""		4358431	1					
ANR	4358511	PrimaryExpression	"""\\n"""		4358431	0					
ANR	4358512	Argument	0		4358431	2					
ANR	4358513	PrimaryExpression	0		4358431	0					
ANR	4358514	IdentifierDeclStatement	RListIter * iter ;	209:3:7530:7545	4358431	2	True				
ANR	4358515	IdentifierDecl	* iter		4358431	0					
ANR	4358516	IdentifierDeclType	RListIter *		4358431	0					
ANR	4358517	Identifier	iter		4358431	1					
ANR	4358518	IdentifierDeclStatement	const char * cc ;	210:3:7550:7564	4358431	3	True				
ANR	4358519	IdentifierDecl	* cc		4358431	0					
ANR	4358520	IdentifierDeclType	const char *		4358431	0					
ANR	4358521	Identifier	cc		4358431	1					
ANR	4358522	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	211:3:7569:7587	4358431	4	True				
ANR	4358523	IdentifierDecl	* pj = pj_new ( )		4358431	0					
ANR	4358524	IdentifierDeclType	PJ *		4358431	0					
ANR	4358525	Identifier	pj		4358431	1					
ANR	4358526	AssignmentExpression	* pj = pj_new ( )		4358431	2		=			
ANR	4358527	Identifier	pj		4358431	0					
ANR	4358528	CallExpression	pj_new ( )		4358431	1					
ANR	4358529	Callee	pj_new		4358431	0					
ANR	4358530	Identifier	pj_new		4358431	0					
ANR	4358531	ArgumentList			4358431	1					
ANR	4358532	ExpressionStatement	pj_a ( pj )	212:3:7592:7601	4358431	5	True				
ANR	4358533	CallExpression	pj_a ( pj )		4358431	0					
ANR	4358534	Callee	pj_a		4358431	0					
ANR	4358535	Identifier	pj_a		4358431	0					
ANR	4358536	ArgumentList	pj		4358431	1					
ANR	4358537	Argument	pj		4358431	0					
ANR	4358538	Identifier	pj		4358431	0					
ANR	4358539	Statement	r_list_foreach	213:3:7606:7619	4358431	6	True				
ANR	4358540	Statement	(	213:18:7621:7621	4358431	7	True				
ANR	4358541	Statement	list	213:19:7622:7625	4358431	8	True				
ANR	4358542	Statement	","	213:23:7626:7626	4358431	9	True				
ANR	4358543	Statement	iter	213:25:7628:7631	4358431	10	True				
ANR	4358544	Statement	","	213:29:7632:7632	4358431	11	True				
ANR	4358545	Statement	cc	213:31:7634:7635	4358431	12	True				
ANR	4358546	Statement	)	213:33:7636:7636	4358431	13	True				
ANR	4358547	CompoundStatement		21:4:434:479	4358431	14					
ANR	4358548	IdentifierDeclStatement	"char * ccexpr = r_anal_cc_get ( core -> anal , cc ) ;"	214:4:7644:7689	4358431	0	True				
ANR	4358549	IdentifierDecl	"* ccexpr = r_anal_cc_get ( core -> anal , cc )"		4358431	0					
ANR	4358550	IdentifierDeclType	char *		4358431	0					
ANR	4358551	Identifier	ccexpr		4358431	1					
ANR	4358552	AssignmentExpression	"* ccexpr = r_anal_cc_get ( core -> anal , cc )"		4358431	2		=			
ANR	4358553	Identifier	ccexpr		4358431	0					
ANR	4358554	CallExpression	"r_anal_cc_get ( core -> anal , cc )"		4358431	1					
ANR	4358555	Callee	r_anal_cc_get		4358431	0					
ANR	4358556	Identifier	r_anal_cc_get		4358431	0					
ANR	4358557	ArgumentList	core -> anal		4358431	1					
ANR	4358558	Argument	core -> anal		4358431	0					
ANR	4358559	PtrMemberAccess	core -> anal		4358431	0					
ANR	4358560	Identifier	core		4358431	0					
ANR	4358561	Identifier	anal		4358431	1					
ANR	4358562	Argument	cc		4358431	1					
ANR	4358563	Identifier	cc		4358431	0					
ANR	4358564	ExpressionStatement	"pj_s ( pj , ccexpr )"	216:4:7763:7780	4358431	1	True				
ANR	4358565	CallExpression	"pj_s ( pj , ccexpr )"		4358431	0					
ANR	4358566	Callee	pj_s		4358431	0					
ANR	4358567	Identifier	pj_s		4358431	0					
ANR	4358568	ArgumentList	pj		4358431	1					
ANR	4358569	Argument	pj		4358431	0					
ANR	4358570	Identifier	pj		4358431	0					
ANR	4358571	Argument	ccexpr		4358431	1					
ANR	4358572	Identifier	ccexpr		4358431	0					
ANR	4358573	ExpressionStatement	free ( ccexpr )	217:4:7786:7799	4358431	2	True				
ANR	4358574	CallExpression	free ( ccexpr )		4358431	0					
ANR	4358575	Callee	free		4358431	0					
ANR	4358576	Identifier	free		4358431	0					
ANR	4358577	ArgumentList	ccexpr		4358431	1					
ANR	4358578	Argument	ccexpr		4358431	0					
ANR	4358579	Identifier	ccexpr		4358431	0					
ANR	4358580	ExpressionStatement	pj_end ( pj )	219:3:7809:7820	4358431	15	True				
ANR	4358581	CallExpression	pj_end ( pj )		4358431	0					
ANR	4358582	Callee	pj_end		4358431	0					
ANR	4358583	Identifier	pj_end		4358431	0					
ANR	4358584	ArgumentList	pj		4358431	1					
ANR	4358585	Argument	pj		4358431	0					
ANR	4358586	Identifier	pj		4358431	0					
ANR	4358587	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	220:3:7825:7863	4358431	16	True				
ANR	4358588	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		4358431	0					
ANR	4358589	Callee	r_cons_printf		4358431	0					
ANR	4358590	Identifier	r_cons_printf		4358431	0					
ANR	4358591	ArgumentList	"""%s\\n"""		4358431	1					
ANR	4358592	Argument	"""%s\\n"""		4358431	0					
ANR	4358593	PrimaryExpression	"""%s\\n"""		4358431	0					
ANR	4358594	Argument	pj_string ( pj )		4358431	1					
ANR	4358595	CallExpression	pj_string ( pj )		4358431	0					
ANR	4358596	Callee	pj_string		4358431	0					
ANR	4358597	Identifier	pj_string		4358431	0					
ANR	4358598	ArgumentList	pj		4358431	1					
ANR	4358599	Argument	pj		4358431	0					
ANR	4358600	Identifier	pj		4358431	0					
ANR	4358601	ExpressionStatement	pj_free ( pj )	221:3:7868:7880	4358431	17	True				
ANR	4358602	CallExpression	pj_free ( pj )		4358431	0					
ANR	4358603	Callee	pj_free		4358431	0					
ANR	4358604	Identifier	pj_free		4358431	0					
ANR	4358605	ArgumentList	pj		4358431	1					
ANR	4358606	Argument	pj		4358431	0					
ANR	4358607	Identifier	pj		4358431	0					
ANR	4358608	ExpressionStatement	r_list_free ( list )	222:3:7885:7903	4358431	18	True				
ANR	4358609	CallExpression	r_list_free ( list )		4358431	0					
ANR	4358610	Callee	r_list_free		4358431	0					
ANR	4358611	Identifier	r_list_free		4358431	0					
ANR	4358612	ArgumentList	list		4358431	1					
ANR	4358613	Argument	list		4358431	0					
ANR	4358614	Identifier	list		4358431	0					
ANR	4358615	ExpressionStatement	free ( ccs )	223:3:7908:7918	4358431	19	True				
ANR	4358616	CallExpression	free ( ccs )		4358431	0					
ANR	4358617	Callee	free		4358431	0					
ANR	4358618	Identifier	free		4358431	0					
ANR	4358619	ArgumentList	ccs		4358431	1					
ANR	4358620	Argument	ccs		4358431	0					
ANR	4358621	Identifier	ccs		4358431	0					
ANR	4358622	BreakStatement	break ;	225:2:7926:7931	4358431	11	True				
ANR	4358623	Label	case 'l' :	226:1:7934:7942	4358431	12	True				
ANR	4358624	CompoundStatement		38:3:858:872	4358431	13					
ANR	4358625	IdentifierDeclStatement	"char * ccs = r_core_cmd_strf ( core , ""afcl"" ) ;"	228:3:7951:7993	4358431	0	True				
ANR	4358626	IdentifierDecl	"* ccs = r_core_cmd_strf ( core , ""afcl"" )"		4358431	0					
ANR	4358627	IdentifierDeclType	char *		4358431	0					
ANR	4358628	Identifier	ccs		4358431	1					
ANR	4358629	AssignmentExpression	"* ccs = r_core_cmd_strf ( core , ""afcl"" )"		4358431	2		=			
ANR	4358630	Identifier	ccs		4358431	0					
ANR	4358631	CallExpression	"r_core_cmd_strf ( core , ""afcl"" )"		4358431	1					
ANR	4358632	Callee	r_core_cmd_strf		4358431	0					
ANR	4358633	Identifier	r_core_cmd_strf		4358431	0					
ANR	4358634	ArgumentList	core		4358431	1					
ANR	4358635	Argument	core		4358431	0					
ANR	4358636	Identifier	core		4358431	0					
ANR	4358637	Argument	"""afcl"""		4358431	1					
ANR	4358638	PrimaryExpression	"""afcl"""		4358431	0					
ANR	4358639	IdentifierDeclStatement	"RList * list = r_str_split_list ( ccs , ""\\n"" , 0 ) ;"	229:3:7998:8043	4358431	1	True				
ANR	4358640	IdentifierDecl	"* list = r_str_split_list ( ccs , ""\\n"" , 0 )"		4358431	0					
ANR	4358641	IdentifierDeclType	RList *		4358431	0					
ANR	4358642	Identifier	list		4358431	1					
ANR	4358643	AssignmentExpression	"* list = r_str_split_list ( ccs , ""\\n"" , 0 )"		4358431	2		=			
ANR	4358644	Identifier	list		4358431	0					
ANR	4358645	CallExpression	"r_str_split_list ( ccs , ""\\n"" , 0 )"		4358431	1					
ANR	4358646	Callee	r_str_split_list		4358431	0					
ANR	4358647	Identifier	r_str_split_list		4358431	0					
ANR	4358648	ArgumentList	ccs		4358431	1					
ANR	4358649	Argument	ccs		4358431	0					
ANR	4358650	Identifier	ccs		4358431	0					
ANR	4358651	Argument	"""\\n"""		4358431	1					
ANR	4358652	PrimaryExpression	"""\\n"""		4358431	0					
ANR	4358653	Argument	0		4358431	2					
ANR	4358654	PrimaryExpression	0		4358431	0					
ANR	4358655	IdentifierDeclStatement	RListIter * iter ;	230:3:8048:8063	4358431	2	True				
ANR	4358656	IdentifierDecl	* iter		4358431	0					
ANR	4358657	IdentifierDeclType	RListIter *		4358431	0					
ANR	4358658	Identifier	iter		4358431	1					
ANR	4358659	IdentifierDeclStatement	const char * cc ;	231:3:8068:8082	4358431	3	True				
ANR	4358660	IdentifierDecl	* cc		4358431	0					
ANR	4358661	IdentifierDeclType	const char *		4358431	0					
ANR	4358662	Identifier	cc		4358431	1					
ANR	4358663	Statement	r_list_foreach	232:3:8087:8100	4358431	4	True				
ANR	4358664	Statement	(	232:18:8102:8102	4358431	5	True				
ANR	4358665	Statement	list	232:19:8103:8106	4358431	6	True				
ANR	4358666	Statement	","	232:23:8107:8107	4358431	7	True				
ANR	4358667	Statement	iter	232:25:8109:8112	4358431	8	True				
ANR	4358668	Statement	","	232:29:8113:8113	4358431	9	True				
ANR	4358669	Statement	cc	232:31:8115:8116	4358431	10	True				
ANR	4358670	Statement	)	232:33:8117:8117	4358431	11	True				
ANR	4358671	CompoundStatement		40:4:915:960	4358431	12					
ANR	4358672	IdentifierDeclStatement	"char * ccexpr = r_anal_cc_get ( core -> anal , cc ) ;"	233:4:8125:8170	4358431	0	True				
ANR	4358673	IdentifierDecl	"* ccexpr = r_anal_cc_get ( core -> anal , cc )"		4358431	0					
ANR	4358674	IdentifierDeclType	char *		4358431	0					
ANR	4358675	Identifier	ccexpr		4358431	1					
ANR	4358676	AssignmentExpression	"* ccexpr = r_anal_cc_get ( core -> anal , cc )"		4358431	2		=			
ANR	4358677	Identifier	ccexpr		4358431	0					
ANR	4358678	CallExpression	"r_anal_cc_get ( core -> anal , cc )"		4358431	1					
ANR	4358679	Callee	r_anal_cc_get		4358431	0					
ANR	4358680	Identifier	r_anal_cc_get		4358431	0					
ANR	4358681	ArgumentList	core -> anal		4358431	1					
ANR	4358682	Argument	core -> anal		4358431	0					
ANR	4358683	PtrMemberAccess	core -> anal		4358431	0					
ANR	4358684	Identifier	core		4358431	0					
ANR	4358685	Identifier	anal		4358431	1					
ANR	4358686	Argument	cc		4358431	1					
ANR	4358687	Identifier	cc		4358431	0					
ANR	4358688	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , ccexpr )"	234:4:8176:8206	4358431	1	True				
ANR	4358689	CallExpression	"r_cons_printf ( ""%s\\n"" , ccexpr )"		4358431	0					
ANR	4358690	Callee	r_cons_printf		4358431	0					
ANR	4358691	Identifier	r_cons_printf		4358431	0					
ANR	4358692	ArgumentList	"""%s\\n"""		4358431	1					
ANR	4358693	Argument	"""%s\\n"""		4358431	0					
ANR	4358694	PrimaryExpression	"""%s\\n"""		4358431	0					
ANR	4358695	Argument	ccexpr		4358431	1					
ANR	4358696	Identifier	ccexpr		4358431	0					
ANR	4358697	ExpressionStatement	free ( ccexpr )	235:4:8212:8225	4358431	2	True				
ANR	4358698	CallExpression	free ( ccexpr )		4358431	0					
ANR	4358699	Callee	free		4358431	0					
ANR	4358700	Identifier	free		4358431	0					
ANR	4358701	ArgumentList	ccexpr		4358431	1					
ANR	4358702	Argument	ccexpr		4358431	0					
ANR	4358703	Identifier	ccexpr		4358431	0					
ANR	4358704	ExpressionStatement	r_list_free ( list )	237:3:8235:8253	4358431	13	True				
ANR	4358705	CallExpression	r_list_free ( list )		4358431	0					
ANR	4358706	Callee	r_list_free		4358431	0					
ANR	4358707	Identifier	r_list_free		4358431	0					
ANR	4358708	ArgumentList	list		4358431	1					
ANR	4358709	Argument	list		4358431	0					
ANR	4358710	Identifier	list		4358431	0					
ANR	4358711	ExpressionStatement	free ( ccs )	238:3:8258:8268	4358431	14	True				
ANR	4358712	CallExpression	free ( ccs )		4358431	0					
ANR	4358713	Callee	free		4358431	0					
ANR	4358714	Identifier	free		4358431	0					
ANR	4358715	ArgumentList	ccs		4358431	1					
ANR	4358716	Argument	ccs		4358431	0					
ANR	4358717	Identifier	ccs		4358431	0					
ANR	4358718	BreakStatement	break ;	240:2:8276:8281	4358431	14	True				
ANR	4358719	Label	case '*' :	241:1:8284:8292	4358431	15	True				
ANR	4358720	CompoundStatement		53:3:1208:1222	4358431	16					
ANR	4358721	IdentifierDeclStatement	"char * ccs = r_core_cmd_strf ( core , ""afcl"" ) ;"	243:3:8301:8343	4358431	0	True				
ANR	4358722	IdentifierDecl	"* ccs = r_core_cmd_strf ( core , ""afcl"" )"		4358431	0					
ANR	4358723	IdentifierDeclType	char *		4358431	0					
ANR	4358724	Identifier	ccs		4358431	1					
ANR	4358725	AssignmentExpression	"* ccs = r_core_cmd_strf ( core , ""afcl"" )"		4358431	2		=			
ANR	4358726	Identifier	ccs		4358431	0					
ANR	4358727	CallExpression	"r_core_cmd_strf ( core , ""afcl"" )"		4358431	1					
ANR	4358728	Callee	r_core_cmd_strf		4358431	0					
ANR	4358729	Identifier	r_core_cmd_strf		4358431	0					
ANR	4358730	ArgumentList	core		4358431	1					
ANR	4358731	Argument	core		4358431	0					
ANR	4358732	Identifier	core		4358431	0					
ANR	4358733	Argument	"""afcl"""		4358431	1					
ANR	4358734	PrimaryExpression	"""afcl"""		4358431	0					
ANR	4358735	IdentifierDeclStatement	"RList * list = r_str_split_list ( ccs , ""\\n"" , 0 ) ;"	244:3:8348:8393	4358431	1	True				
ANR	4358736	IdentifierDecl	"* list = r_str_split_list ( ccs , ""\\n"" , 0 )"		4358431	0					
ANR	4358737	IdentifierDeclType	RList *		4358431	0					
ANR	4358738	Identifier	list		4358431	1					
ANR	4358739	AssignmentExpression	"* list = r_str_split_list ( ccs , ""\\n"" , 0 )"		4358431	2		=			
ANR	4358740	Identifier	list		4358431	0					
ANR	4358741	CallExpression	"r_str_split_list ( ccs , ""\\n"" , 0 )"		4358431	1					
ANR	4358742	Callee	r_str_split_list		4358431	0					
ANR	4358743	Identifier	r_str_split_list		4358431	0					
ANR	4358744	ArgumentList	ccs		4358431	1					
ANR	4358745	Argument	ccs		4358431	0					
ANR	4358746	Identifier	ccs		4358431	0					
ANR	4358747	Argument	"""\\n"""		4358431	1					
ANR	4358748	PrimaryExpression	"""\\n"""		4358431	0					
ANR	4358749	Argument	0		4358431	2					
ANR	4358750	PrimaryExpression	0		4358431	0					
ANR	4358751	IdentifierDeclStatement	RListIter * iter ;	245:3:8398:8413	4358431	2	True				
ANR	4358752	IdentifierDecl	* iter		4358431	0					
ANR	4358753	IdentifierDeclType	RListIter *		4358431	0					
ANR	4358754	Identifier	iter		4358431	1					
ANR	4358755	IdentifierDeclStatement	const char * cc ;	246:3:8418:8432	4358431	3	True				
ANR	4358756	IdentifierDecl	* cc		4358431	0					
ANR	4358757	IdentifierDeclType	const char *		4358431	0					
ANR	4358758	Identifier	cc		4358431	1					
ANR	4358759	Statement	r_list_foreach	247:3:8437:8450	4358431	4	True				
ANR	4358760	Statement	(	247:18:8452:8452	4358431	5	True				
ANR	4358761	Statement	list	247:19:8453:8456	4358431	6	True				
ANR	4358762	Statement	","	247:23:8457:8457	4358431	7	True				
ANR	4358763	Statement	iter	247:25:8459:8462	4358431	8	True				
ANR	4358764	Statement	","	247:29:8463:8463	4358431	9	True				
ANR	4358765	Statement	cc	247:31:8465:8466	4358431	10	True				
ANR	4358766	Statement	)	247:33:8467:8467	4358431	11	True				
ANR	4358767	CompoundStatement		55:4:1265:1310	4358431	12					
ANR	4358768	IdentifierDeclStatement	"char * ccexpr = r_anal_cc_get ( core -> anal , cc ) ;"	248:4:8475:8520	4358431	0	True				
ANR	4358769	IdentifierDecl	"* ccexpr = r_anal_cc_get ( core -> anal , cc )"		4358431	0					
ANR	4358770	IdentifierDeclType	char *		4358431	0					
ANR	4358771	Identifier	ccexpr		4358431	1					
ANR	4358772	AssignmentExpression	"* ccexpr = r_anal_cc_get ( core -> anal , cc )"		4358431	2		=			
ANR	4358773	Identifier	ccexpr		4358431	0					
ANR	4358774	CallExpression	"r_anal_cc_get ( core -> anal , cc )"		4358431	1					
ANR	4358775	Callee	r_anal_cc_get		4358431	0					
ANR	4358776	Identifier	r_anal_cc_get		4358431	0					
ANR	4358777	ArgumentList	core -> anal		4358431	1					
ANR	4358778	Argument	core -> anal		4358431	0					
ANR	4358779	PtrMemberAccess	core -> anal		4358431	0					
ANR	4358780	Identifier	core		4358431	0					
ANR	4358781	Identifier	anal		4358431	1					
ANR	4358782	Argument	cc		4358431	1					
ANR	4358783	Identifier	cc		4358431	0					
ANR	4358784	ExpressionStatement	"r_cons_printf ( ""tfc %s\\n"" , ccexpr )"	249:4:8526:8560	4358431	1	True				
ANR	4358785	CallExpression	"r_cons_printf ( ""tfc %s\\n"" , ccexpr )"		4358431	0					
ANR	4358786	Callee	r_cons_printf		4358431	0					
ANR	4358787	Identifier	r_cons_printf		4358431	0					
ANR	4358788	ArgumentList	"""tfc %s\\n"""		4358431	1					
ANR	4358789	Argument	"""tfc %s\\n"""		4358431	0					
ANR	4358790	PrimaryExpression	"""tfc %s\\n"""		4358431	0					
ANR	4358791	Argument	ccexpr		4358431	1					
ANR	4358792	Identifier	ccexpr		4358431	0					
ANR	4358793	ExpressionStatement	free ( ccexpr )	250:4:8566:8579	4358431	2	True				
ANR	4358794	CallExpression	free ( ccexpr )		4358431	0					
ANR	4358795	Callee	free		4358431	0					
ANR	4358796	Identifier	free		4358431	0					
ANR	4358797	ArgumentList	ccexpr		4358431	1					
ANR	4358798	Argument	ccexpr		4358431	0					
ANR	4358799	Identifier	ccexpr		4358431	0					
ANR	4358800	ExpressionStatement	r_list_free ( list )	252:3:8589:8607	4358431	13	True				
ANR	4358801	CallExpression	r_list_free ( list )		4358431	0					
ANR	4358802	Callee	r_list_free		4358431	0					
ANR	4358803	Identifier	r_list_free		4358431	0					
ANR	4358804	ArgumentList	list		4358431	1					
ANR	4358805	Argument	list		4358431	0					
ANR	4358806	Identifier	list		4358431	0					
ANR	4358807	ExpressionStatement	free ( ccs )	253:3:8612:8622	4358431	14	True				
ANR	4358808	CallExpression	free ( ccs )		4358431	0					
ANR	4358809	Callee	free		4358431	0					
ANR	4358810	Identifier	free		4358431	0					
ANR	4358811	ArgumentList	ccs		4358431	1					
ANR	4358812	Argument	ccs		4358431	0					
ANR	4358813	Identifier	ccs		4358431	0					
ANR	4358814	BreakStatement	break ;	255:2:8630:8635	4358431	17	True				
ANR	4358815	Label	case 'k' :	256:1:8638:8646	4358431	18	True				
ANR	4358816	ExpressionStatement	"r_core_cmd0 ( core , ""afck"" )"	257:2:8650:8676	4358431	19	True				
ANR	4358817	CallExpression	"r_core_cmd0 ( core , ""afck"" )"		4358431	0					
ANR	4358818	Callee	r_core_cmd0		4358431	0					
ANR	4358819	Identifier	r_core_cmd0		4358431	0					
ANR	4358820	ArgumentList	core		4358431	1					
ANR	4358821	Argument	core		4358431	0					
ANR	4358822	Identifier	core		4358431	0					
ANR	4358823	Argument	"""afck"""		4358431	1					
ANR	4358824	PrimaryExpression	"""afck"""		4358431	0					
ANR	4358825	BreakStatement	break ;	258:2:8680:8685	4358431	20	True				
ANR	4358826	Label	case ' ' :	259:1:8688:8696	4358431	21	True				
ANR	4358827	IfStatement	"if ( strchr ( input , '(' ) )"		4358431	22					
ANR	4358828	Condition	"strchr ( input , '(' )"	260:6:8704:8722	4358431	0	True				
ANR	4358829	CallExpression	"strchr ( input , '(' )"		4358431	0					
ANR	4358830	Callee	strchr		4358431	0					
ANR	4358831	Identifier	strchr		4358431	0					
ANR	4358832	ArgumentList	input		4358431	1					
ANR	4358833	Argument	input		4358431	0					
ANR	4358834	Identifier	input		4358431	0					
ANR	4358835	Argument	'('		4358431	1					
ANR	4358836	PrimaryExpression	'('		4358431	0					
ANR	4358837	CompoundStatement		67:27:1515:1515	4358431	1					
ANR	4358838	ExpressionStatement	"r_anal_cc_set ( core -> anal , input + 1 )"	261:3:8730:8767	4358431	0	True				
ANR	4358839	CallExpression	"r_anal_cc_set ( core -> anal , input + 1 )"		4358431	0					
ANR	4358840	Callee	r_anal_cc_set		4358431	0					
ANR	4358841	Identifier	r_anal_cc_set		4358431	0					
ANR	4358842	ArgumentList	core -> anal		4358431	1					
ANR	4358843	Argument	core -> anal		4358431	0					
ANR	4358844	PtrMemberAccess	core -> anal		4358431	0					
ANR	4358845	Identifier	core		4358431	0					
ANR	4358846	Identifier	anal		4358431	1					
ANR	4358847	Argument	input + 1		4358431	1					
ANR	4358848	AdditiveExpression	input + 1		4358431	0		+			
ANR	4358849	Identifier	input		4358431	0					
ANR	4358850	PrimaryExpression	1		4358431	1					
ANR	4358851	ElseStatement	else		4358431	0					
ANR	4358852	CompoundStatement		70:3:1573:1621	4358431	0					
ANR	4358853	IdentifierDeclStatement	"char * cc = r_anal_cc_get ( core -> anal , input + 1 ) ;"	263:3:8783:8831	4358431	0	True				
ANR	4358854	IdentifierDecl	"* cc = r_anal_cc_get ( core -> anal , input + 1 )"		4358431	0					
ANR	4358855	IdentifierDeclType	char *		4358431	0					
ANR	4358856	Identifier	cc		4358431	1					
ANR	4358857	AssignmentExpression	"* cc = r_anal_cc_get ( core -> anal , input + 1 )"		4358431	2		=			
ANR	4358858	Identifier	cc		4358431	0					
ANR	4358859	CallExpression	"r_anal_cc_get ( core -> anal , input + 1 )"		4358431	1					
ANR	4358860	Callee	r_anal_cc_get		4358431	0					
ANR	4358861	Identifier	r_anal_cc_get		4358431	0					
ANR	4358862	ArgumentList	core -> anal		4358431	1					
ANR	4358863	Argument	core -> anal		4358431	0					
ANR	4358864	PtrMemberAccess	core -> anal		4358431	0					
ANR	4358865	Identifier	core		4358431	0					
ANR	4358866	Identifier	anal		4358431	1					
ANR	4358867	Argument	input + 1		4358431	1					
ANR	4358868	AdditiveExpression	input + 1		4358431	0		+			
ANR	4358869	Identifier	input		4358431	0					
ANR	4358870	PrimaryExpression	1		4358431	1					
ANR	4358871	IfStatement	if ( cc )		4358431	1					
ANR	4358872	Condition	cc	264:7:8840:8841	4358431	0	True				
ANR	4358873	Identifier	cc		4358431	0					
ANR	4358874	CompoundStatement		71:11:1634:1634	4358431	1					
ANR	4358875	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , cc )"	265:4:8850:8876	4358431	0	True				
ANR	4358876	CallExpression	"r_cons_printf ( ""%s\\n"" , cc )"		4358431	0					
ANR	4358877	Callee	r_cons_printf		4358431	0					
ANR	4358878	Identifier	r_cons_printf		4358431	0					
ANR	4358879	ArgumentList	"""%s\\n"""		4358431	1					
ANR	4358880	Argument	"""%s\\n"""		4358431	0					
ANR	4358881	PrimaryExpression	"""%s\\n"""		4358431	0					
ANR	4358882	Argument	cc		4358431	1					
ANR	4358883	Identifier	cc		4358431	0					
ANR	4358884	ExpressionStatement	free ( cc )	266:4:8882:8891	4358431	1	True				
ANR	4358885	CallExpression	free ( cc )		4358431	0					
ANR	4358886	Callee	free		4358431	0					
ANR	4358887	Identifier	free		4358431	0					
ANR	4358888	ArgumentList	cc		4358431	1					
ANR	4358889	Argument	cc		4358431	0					
ANR	4358890	Identifier	cc		4358431	0					
ANR	4358891	BreakStatement	break ;	269:2:8904:8909	4358431	23	True				
ANR	4358892	ReturnType	static void		4358431	1					
ANR	4358893	Identifier	__core_cmd_tcc		4358431	2					
ANR	4358894	ParameterList	"RCore * core , const char * input"		4358431	3					
ANR	4358895	Parameter	RCore * core	194:27:7177:7187	4358431	0	True				
ANR	4358896	ParameterType	RCore *		4358431	0					
ANR	4358897	Identifier	core		4358431	1					
ANR	4358898	Parameter	const char * input	194:40:7190:7206	4358431	1	True				
ANR	4358899	ParameterType	const char *		4358431	0					
ANR	4358900	Identifier	input		4358431	1					
ANR	4358901	CFGEntryNode	ENTRY		4358431		True				
ANR	4358902	CFGExitNode	EXIT		4358431		True				
ANR	4358903	Symbol	cc		4358431						
ANR	4358904	Symbol	pj_string		4358431						
ANR	4358905	Symbol	help_msg_tcc		4358431						
ANR	4358906	Symbol	ccexpr		4358431						
ANR	4358907	Symbol	* input		4358431						
ANR	4358908	Symbol	* core		4358431						
ANR	4358909	Symbol	r_str_split_list		4358431						
ANR	4358910	Symbol	iter		4358431						
ANR	4358911	Symbol	strchr		4358431						
ANR	4358912	Symbol	list		4358431						
ANR	4358913	Symbol	core -> anal		4358431						
ANR	4358914	Symbol	core		4358431						
ANR	4358915	Symbol	input		4358431						
ANR	4358916	Symbol	r_core_cmd_strf		4358431						
ANR	4358917	Symbol	ccs		4358431						
ANR	4358918	Symbol	r_str_trim_ro		4358431						
ANR	4358919	Symbol	r_anal_cc_get		4358431						
ANR	4358920	Symbol	pj		4358431						
ANR	4358921	Symbol	pj_new		4358431						
ANR	4358922	Function	showFormat	273:0:8917:9671							
ANR	4358923	FunctionDef	"showFormat (RCore * core , const char * name , int mode)"		4358922	0					
ANR	4358924	CompoundStatement		273:64:8981:9671	4358922	0					
ANR	4358925	IdentifierDeclStatement	"const char * isenum = sdb_const_get ( core -> anal -> sdb_types , name , 0 ) ;"	274:1:8984:9051	4358922	0	True				
ANR	4358926	IdentifierDecl	"* isenum = sdb_const_get ( core -> anal -> sdb_types , name , 0 )"		4358922	0					
ANR	4358927	IdentifierDeclType	const char *		4358922	0					
ANR	4358928	Identifier	isenum		4358922	1					
ANR	4358929	AssignmentExpression	"* isenum = sdb_const_get ( core -> anal -> sdb_types , name , 0 )"		4358922	2		=			
ANR	4358930	Identifier	isenum		4358922	0					
ANR	4358931	CallExpression	"sdb_const_get ( core -> anal -> sdb_types , name , 0 )"		4358922	1					
ANR	4358932	Callee	sdb_const_get		4358922	0					
ANR	4358933	Identifier	sdb_const_get		4358922	0					
ANR	4358934	ArgumentList	core -> anal -> sdb_types		4358922	1					
ANR	4358935	Argument	core -> anal -> sdb_types		4358922	0					
ANR	4358936	PtrMemberAccess	core -> anal -> sdb_types		4358922	0					
ANR	4358937	PtrMemberAccess	core -> anal		4358922	0					
ANR	4358938	Identifier	core		4358922	0					
ANR	4358939	Identifier	anal		4358922	1					
ANR	4358940	Identifier	sdb_types		4358922	1					
ANR	4358941	Argument	name		4358922	1					
ANR	4358942	Identifier	name		4358922	0					
ANR	4358943	Argument	0		4358922	2					
ANR	4358944	PrimaryExpression	0		4358922	0					
ANR	4358945	IfStatement	"if ( isenum && ! strcmp ( isenum , ""enum"" ) )"		4358922	1					
ANR	4358946	Condition	"isenum && ! strcmp ( isenum , ""enum"" )"	275:5:9058:9091	4358922	0	True				
ANR	4358947	AndExpression	"isenum && ! strcmp ( isenum , ""enum"" )"		4358922	0		&&			
ANR	4358948	Identifier	isenum		4358922	0					
ANR	4358949	UnaryOperationExpression	"! strcmp ( isenum , ""enum"" )"		4358922	1					
ANR	4358950	UnaryOperator	!		4358922	0					
ANR	4358951	CallExpression	"strcmp ( isenum , ""enum"" )"		4358922	1					
ANR	4358952	Callee	strcmp		4358922	0					
ANR	4358953	Identifier	strcmp		4358922	0					
ANR	4358954	ArgumentList	isenum		4358922	1					
ANR	4358955	Argument	isenum		4358922	0					
ANR	4358956	Identifier	isenum		4358922	0					
ANR	4358957	Argument	"""enum"""		4358922	1					
ANR	4358958	PrimaryExpression	"""enum"""		4358922	0					
ANR	4358959	CompoundStatement		3:41:112:112	4358922	1					
ANR	4358960	ExpressionStatement	"eprintf ( ""IS ENUM\\n"" )"	276:2:9098:9119	4358922	0	True				
ANR	4358961	CallExpression	"eprintf ( ""IS ENUM\\n"" )"		4358922	0					
ANR	4358962	Callee	eprintf		4358922	0					
ANR	4358963	Identifier	eprintf		4358922	0					
ANR	4358964	ArgumentList	"""IS ENUM\\n"""		4358922	1					
ANR	4358965	Argument	"""IS ENUM\\n"""		4358922	0					
ANR	4358966	PrimaryExpression	"""IS ENUM\\n"""		4358922	0					
ANR	4358967	ElseStatement	else		4358922	0					
ANR	4358968	CompoundStatement		6:2:151:206	4358922	0					
ANR	4358969	IdentifierDeclStatement	"char * fmt = r_type_format ( core -> anal -> sdb_types , name ) ;"	278:2:9133:9188	4358922	0	True				
ANR	4358970	IdentifierDecl	"* fmt = r_type_format ( core -> anal -> sdb_types , name )"		4358922	0					
ANR	4358971	IdentifierDeclType	char *		4358922	0					
ANR	4358972	Identifier	fmt		4358922	1					
ANR	4358973	AssignmentExpression	"* fmt = r_type_format ( core -> anal -> sdb_types , name )"		4358922	2		=			
ANR	4358974	Identifier	fmt		4358922	0					
ANR	4358975	CallExpression	"r_type_format ( core -> anal -> sdb_types , name )"		4358922	1					
ANR	4358976	Callee	r_type_format		4358922	0					
ANR	4358977	Identifier	r_type_format		4358922	0					
ANR	4358978	ArgumentList	core -> anal -> sdb_types		4358922	1					
ANR	4358979	Argument	core -> anal -> sdb_types		4358922	0					
ANR	4358980	PtrMemberAccess	core -> anal -> sdb_types		4358922	0					
ANR	4358981	PtrMemberAccess	core -> anal		4358922	0					
ANR	4358982	Identifier	core		4358922	0					
ANR	4358983	Identifier	anal		4358922	1					
ANR	4358984	Identifier	sdb_types		4358922	1					
ANR	4358985	Argument	name		4358922	1					
ANR	4358986	Identifier	name		4358922	0					
ANR	4358987	IfStatement	if ( fmt )		4358922	1					
ANR	4358988	Condition	fmt	279:6:9196:9198	4358922	0	True				
ANR	4358989	Identifier	fmt		4358922	0					
ANR	4358990	CompoundStatement		7:11:219:219	4358922	1					
ANR	4358991	ExpressionStatement	r_str_trim ( fmt )	280:3:9206:9222	4358922	0	True				
ANR	4358992	CallExpression	r_str_trim ( fmt )		4358922	0					
ANR	4358993	Callee	r_str_trim		4358922	0					
ANR	4358994	Identifier	r_str_trim		4358922	0					
ANR	4358995	ArgumentList	fmt		4358922	1					
ANR	4358996	Argument	fmt		4358922	0					
ANR	4358997	Identifier	fmt		4358922	0					
ANR	4358998	IfStatement	if ( mode == 'j' )		4358922	1					
ANR	4358999	Condition	mode == 'j'	281:7:9231:9241	4358922	0	True				
ANR	4359000	EqualityExpression	mode == 'j'		4358922	0		==			
ANR	4359001	Identifier	mode		4358922	0					
ANR	4359002	PrimaryExpression	'j'		4358922	1					
ANR	4359003	CompoundStatement		10:4:268:286	4358922	1					
ANR	4359004	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	282:4:9250:9268	4358922	0	True				
ANR	4359005	IdentifierDecl	* pj = pj_new ( )		4358922	0					
ANR	4359006	IdentifierDeclType	PJ *		4358922	0					
ANR	4359007	Identifier	pj		4358922	1					
ANR	4359008	AssignmentExpression	* pj = pj_new ( )		4358922	2		=			
ANR	4359009	Identifier	pj		4358922	0					
ANR	4359010	CallExpression	pj_new ( )		4358922	1					
ANR	4359011	Callee	pj_new		4358922	0					
ANR	4359012	Identifier	pj_new		4358922	0					
ANR	4359013	ArgumentList			4358922	1					
ANR	4359014	IfStatement	if ( ! pj )		4358922	1					
ANR	4359015	Condition	! pj	283:8:9278:9280	4358922	0	True				
ANR	4359016	UnaryOperationExpression	! pj		4358922	0					
ANR	4359017	UnaryOperator	!		4358922	0					
ANR	4359018	Identifier	pj		4358922	1					
ANR	4359019	CompoundStatement		11:13:301:301	4358922	1					
ANR	4359020	ReturnStatement	return ;	284:5:9290:9296	4358922	0	True				
ANR	4359021	ExpressionStatement	pj_o ( pj )	286:4:9308:9317	4358922	2	True				
ANR	4359022	CallExpression	pj_o ( pj )		4358922	0					
ANR	4359023	Callee	pj_o		4358922	0					
ANR	4359024	Identifier	pj_o		4358922	0					
ANR	4359025	ArgumentList	pj		4358922	1					
ANR	4359026	Argument	pj		4358922	0					
ANR	4359027	Identifier	pj		4358922	0					
ANR	4359028	ExpressionStatement	"pj_ks ( pj , ""name"" , name )"	287:4:9323:9347	4358922	3	True				
ANR	4359029	CallExpression	"pj_ks ( pj , ""name"" , name )"		4358922	0					
ANR	4359030	Callee	pj_ks		4358922	0					
ANR	4359031	Identifier	pj_ks		4358922	0					
ANR	4359032	ArgumentList	pj		4358922	1					
ANR	4359033	Argument	pj		4358922	0					
ANR	4359034	Identifier	pj		4358922	0					
ANR	4359035	Argument	"""name"""		4358922	1					
ANR	4359036	PrimaryExpression	"""name"""		4358922	0					
ANR	4359037	Argument	name		4358922	2					
ANR	4359038	Identifier	name		4358922	0					
ANR	4359039	ExpressionStatement	"pj_ks ( pj , ""format"" , fmt )"	288:4:9353:9378	4358922	4	True				
ANR	4359040	CallExpression	"pj_ks ( pj , ""format"" , fmt )"		4358922	0					
ANR	4359041	Callee	pj_ks		4358922	0					
ANR	4359042	Identifier	pj_ks		4358922	0					
ANR	4359043	ArgumentList	pj		4358922	1					
ANR	4359044	Argument	pj		4358922	0					
ANR	4359045	Identifier	pj		4358922	0					
ANR	4359046	Argument	"""format"""		4358922	1					
ANR	4359047	PrimaryExpression	"""format"""		4358922	0					
ANR	4359048	Argument	fmt		4358922	2					
ANR	4359049	Identifier	fmt		4358922	0					
ANR	4359050	ExpressionStatement	pj_end ( pj )	289:4:9384:9395	4358922	5	True				
ANR	4359051	CallExpression	pj_end ( pj )		4358922	0					
ANR	4359052	Callee	pj_end		4358922	0					
ANR	4359053	Identifier	pj_end		4358922	0					
ANR	4359054	ArgumentList	pj		4358922	1					
ANR	4359055	Argument	pj		4358922	0					
ANR	4359056	Identifier	pj		4358922	0					
ANR	4359057	ExpressionStatement	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"	290:4:9401:9437	4358922	6	True				
ANR	4359058	CallExpression	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"		4358922	0					
ANR	4359059	Callee	r_cons_printf		4358922	0					
ANR	4359060	Identifier	r_cons_printf		4358922	0					
ANR	4359061	ArgumentList	"""%s"""		4358922	1					
ANR	4359062	Argument	"""%s"""		4358922	0					
ANR	4359063	PrimaryExpression	"""%s"""		4358922	0					
ANR	4359064	Argument	pj_string ( pj )		4358922	1					
ANR	4359065	CallExpression	pj_string ( pj )		4358922	0					
ANR	4359066	Callee	pj_string		4358922	0					
ANR	4359067	Identifier	pj_string		4358922	0					
ANR	4359068	ArgumentList	pj		4358922	1					
ANR	4359069	Argument	pj		4358922	0					
ANR	4359070	Identifier	pj		4358922	0					
ANR	4359071	ExpressionStatement	pj_free ( pj )	291:4:9443:9455	4358922	7	True				
ANR	4359072	CallExpression	pj_free ( pj )		4358922	0					
ANR	4359073	Callee	pj_free		4358922	0					
ANR	4359074	Identifier	pj_free		4358922	0					
ANR	4359075	ArgumentList	pj		4358922	1					
ANR	4359076	Argument	pj		4358922	0					
ANR	4359077	Identifier	pj		4358922	0					
ANR	4359078	ElseStatement	else		4358922	0					
ANR	4359079	CompoundStatement		20:10:485:485	4358922	0					
ANR	4359080	IfStatement	if ( mode )		4358922	0					
ANR	4359081	Condition	mode	293:8:9477:9480	4358922	0	True				
ANR	4359082	Identifier	mode		4358922	0					
ANR	4359083	CompoundStatement		21:14:501:501	4358922	1					
ANR	4359084	ExpressionStatement	"r_cons_printf ( ""pf.%s %s\\n"" , name , fmt )"	294:5:9490:9529	4358922	0	True				
ANR	4359085	CallExpression	"r_cons_printf ( ""pf.%s %s\\n"" , name , fmt )"		4358922	0					
ANR	4359086	Callee	r_cons_printf		4358922	0					
ANR	4359087	Identifier	r_cons_printf		4358922	0					
ANR	4359088	ArgumentList	"""pf.%s %s\\n"""		4358922	1					
ANR	4359089	Argument	"""pf.%s %s\\n"""		4358922	0					
ANR	4359090	PrimaryExpression	"""pf.%s %s\\n"""		4358922	0					
ANR	4359091	Argument	name		4358922	1					
ANR	4359092	Identifier	name		4358922	0					
ANR	4359093	Argument	fmt		4358922	2					
ANR	4359094	Identifier	fmt		4358922	0					
ANR	4359095	ElseStatement	else		4358922	0					
ANR	4359096	CompoundStatement		23:11:560:560	4358922	0					
ANR	4359097	ExpressionStatement	"r_cons_printf ( ""pf %s\\n"" , fmt )"	296:5:9549:9579	4358922	0	True				
ANR	4359098	CallExpression	"r_cons_printf ( ""pf %s\\n"" , fmt )"		4358922	0					
ANR	4359099	Callee	r_cons_printf		4358922	0					
ANR	4359100	Identifier	r_cons_printf		4358922	0					
ANR	4359101	ArgumentList	"""pf %s\\n"""		4358922	1					
ANR	4359102	Argument	"""pf %s\\n"""		4358922	0					
ANR	4359103	PrimaryExpression	"""pf %s\\n"""		4358922	0					
ANR	4359104	Argument	fmt		4358922	1					
ANR	4359105	Identifier	fmt		4358922	0					
ANR	4359106	ExpressionStatement	free ( fmt )	299:3:9595:9605	4358922	2	True				
ANR	4359107	CallExpression	free ( fmt )		4358922	0					
ANR	4359108	Callee	free		4358922	0					
ANR	4359109	Identifier	free		4358922	0					
ANR	4359110	ArgumentList	fmt		4358922	1					
ANR	4359111	Argument	fmt		4358922	0					
ANR	4359112	Identifier	fmt		4358922	0					
ANR	4359113	ElseStatement	else		4358922	0					
ANR	4359114	CompoundStatement		28:9:634:634	4358922	0					
ANR	4359115	ExpressionStatement	"eprintf ( ""Cannot find '%s' type\\n"" , name )"	301:3:9621:9662	4358922	0	True				
ANR	4359116	CallExpression	"eprintf ( ""Cannot find '%s' type\\n"" , name )"		4358922	0					
ANR	4359117	Callee	eprintf		4358922	0					
ANR	4359118	Identifier	eprintf		4358922	0					
ANR	4359119	ArgumentList	"""Cannot find '%s' type\\n"""		4358922	1					
ANR	4359120	Argument	"""Cannot find '%s' type\\n"""		4358922	0					
ANR	4359121	PrimaryExpression	"""Cannot find '%s' type\\n"""		4358922	0					
ANR	4359122	Argument	name		4358922	1					
ANR	4359123	Identifier	name		4358922	0					
ANR	4359124	ReturnType	static void		4358922	1					
ANR	4359125	Identifier	showFormat		4358922	2					
ANR	4359126	ParameterList	"RCore * core , const char * name , int mode"		4358922	3					
ANR	4359127	Parameter	RCore * core	273:23:8940:8950	4358922	0	True				
ANR	4359128	ParameterType	RCore *		4358922	0					
ANR	4359129	Identifier	core		4358922	1					
ANR	4359130	Parameter	const char * name	273:36:8953:8968	4358922	1	True				
ANR	4359131	ParameterType	const char *		4358922	0					
ANR	4359132	Identifier	name		4358922	1					
ANR	4359133	Parameter	int mode	273:54:8971:8978	4358922	2	True				
ANR	4359134	ParameterType	int		4358922	0					
ANR	4359135	Identifier	mode		4358922	1					
ANR	4359136	CFGEntryNode	ENTRY		4358922		True				
ANR	4359137	CFGExitNode	EXIT		4358922		True				
ANR	4359138	Symbol	strcmp		4358922						
ANR	4359139	Symbol	pj_string		4358922						
ANR	4359140	Symbol	* core		4358922						
ANR	4359141	Symbol	core -> anal -> sdb_types		4358922						
ANR	4359142	Symbol	fmt		4358922						
ANR	4359143	Symbol	core -> anal		4358922						
ANR	4359144	Symbol	sdb_const_get		4358922						
ANR	4359145	Symbol	mode		4358922						
ANR	4359146	Symbol	core		4358922						
ANR	4359147	Symbol	* core -> anal		4358922						
ANR	4359148	Symbol	name		4358922						
ANR	4359149	Symbol	pj		4358922						
ANR	4359150	Symbol	pj_new		4358922						
ANR	4359151	Symbol	isenum		4358922						
ANR	4359152	Symbol	r_type_format		4358922						
ANR	4359153	Symbol	* * core		4358922						
ANR	4359154	Function	cmd_tail	306:0:9674:10529							
ANR	4359155	FunctionDef	"cmd_tail (void * data , const char * _input)"		4359154	0					
ANR	4359156	CompoundStatement		306:52:9726:10529	4359154	0					
ANR	4359157	IdentifierDeclStatement	char * input = strdup ( _input ) ;	307:1:9739:9768	4359154	0	True				
ANR	4359158	IdentifierDecl	* input = strdup ( _input )		4359154	0					
ANR	4359159	IdentifierDeclType	char *		4359154	0					
ANR	4359160	Identifier	input		4359154	1					
ANR	4359161	AssignmentExpression	* input = strdup ( _input )		4359154	2		=			
ANR	4359162	Identifier	input		4359154	0					
ANR	4359163	CallExpression	strdup ( _input )		4359154	1					
ANR	4359164	Callee	strdup		4359154	0					
ANR	4359165	Identifier	strdup		4359154	0					
ANR	4359166	ArgumentList	_input		4359154	1					
ANR	4359167	Argument	_input		4359154	0					
ANR	4359168	Identifier	_input		4359154	0					
ANR	4359169	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	308:1:9771:9798	4359154	1	True				
ANR	4359170	IdentifierDecl	* core = ( RCore * ) data		4359154	0					
ANR	4359171	IdentifierDeclType	RCore *		4359154	0					
ANR	4359172	Identifier	core		4359154	1					
ANR	4359173	AssignmentExpression	* core = ( RCore * ) data		4359154	2		=			
ANR	4359174	Identifier	core		4359154	0					
ANR	4359175	CastExpression	( RCore * ) data		4359154	1					
ANR	4359176	CastTarget	RCore *		4359154	0					
ANR	4359177	Identifier	data		4359154	1					
ANR	4359178	IdentifierDeclStatement	int lines = 5 ;	309:1:9801:9814	4359154	2	True				
ANR	4359179	IdentifierDecl	lines = 5		4359154	0					
ANR	4359180	IdentifierDeclType	int		4359154	0					
ANR	4359181	Identifier	lines		4359154	1					
ANR	4359182	AssignmentExpression	lines = 5		4359154	2		=			
ANR	4359183	Identifier	lines		4359154	0					
ANR	4359184	PrimaryExpression	5		4359154	1					
ANR	4359185	IdentifierDeclStatement	"char * arg = strchr ( input , ' ' ) ;"	310:1:9817:9848	4359154	3	True				
ANR	4359186	IdentifierDecl	"* arg = strchr ( input , ' ' )"		4359154	0					
ANR	4359187	IdentifierDeclType	char *		4359154	0					
ANR	4359188	Identifier	arg		4359154	1					
ANR	4359189	AssignmentExpression	"* arg = strchr ( input , ' ' )"		4359154	2		=			
ANR	4359190	Identifier	arg		4359154	0					
ANR	4359191	CallExpression	"strchr ( input , ' ' )"		4359154	1					
ANR	4359192	Callee	strchr		4359154	0					
ANR	4359193	Identifier	strchr		4359154	0					
ANR	4359194	ArgumentList	input		4359154	1					
ANR	4359195	Argument	input		4359154	0					
ANR	4359196	Identifier	input		4359154	0					
ANR	4359197	Argument	' '		4359154	1					
ANR	4359198	PrimaryExpression	' '		4359154	0					
ANR	4359199	IdentifierDeclStatement	"char * tmp , * count ;"	311:1:9851:9868	4359154	4	True				
ANR	4359200	IdentifierDecl	* tmp		4359154	0					
ANR	4359201	IdentifierDeclType	char *		4359154	0					
ANR	4359202	Identifier	tmp		4359154	1					
ANR	4359203	IdentifierDecl	* count		4359154	1					
ANR	4359204	IdentifierDeclType	char *		4359154	0					
ANR	4359205	Identifier	count		4359154	1					
ANR	4359206	IfStatement	if ( arg )		4359154	5					
ANR	4359207	Condition	arg	312:5:9875:9877	4359154	0	True				
ANR	4359208	Identifier	arg		4359154	0					
ANR	4359209	CompoundStatement		7:10:153:153	4359154	1					
ANR	4359210	ExpressionStatement	arg = ( char * ) r_str_trim_ro ( arg + 1 )	313:2:9884:9921	4359154	0	True				
ANR	4359211	AssignmentExpression	arg = ( char * ) r_str_trim_ro ( arg + 1 )		4359154	0		=			
ANR	4359212	Identifier	arg		4359154	0					
ANR	4359213	CastExpression	( char * ) r_str_trim_ro ( arg + 1 )		4359154	1					
ANR	4359214	CastTarget	char *		4359154	0					
ANR	4359215	CallExpression	r_str_trim_ro ( arg + 1 )		4359154	1					
ANR	4359216	Callee	r_str_trim_ro		4359154	0					
ANR	4359217	Identifier	r_str_trim_ro		4359154	0					
ANR	4359218	ArgumentList	arg + 1		4359154	1					
ANR	4359219	Argument	arg + 1		4359154	0					
ANR	4359220	AdditiveExpression	arg + 1		4359154	0		+			
ANR	4359221	Identifier	arg		4359154	0					
ANR	4359222	PrimaryExpression	1		4359154	1					
ANR	4359223	ExpressionStatement	"count = strchr ( arg , ' ' )"	314:2:9955:9980	4359154	1	True				
ANR	4359224	AssignmentExpression	"count = strchr ( arg , ' ' )"		4359154	0		=			
ANR	4359225	Identifier	count		4359154	0					
ANR	4359226	CallExpression	"strchr ( arg , ' ' )"		4359154	1					
ANR	4359227	Callee	strchr		4359154	0					
ANR	4359228	Identifier	strchr		4359154	0					
ANR	4359229	ArgumentList	arg		4359154	1					
ANR	4359230	Argument	arg		4359154	0					
ANR	4359231	Identifier	arg		4359154	0					
ANR	4359232	Argument	' '		4359154	1					
ANR	4359233	PrimaryExpression	' '		4359154	0					
ANR	4359234	IfStatement	if ( count )		4359154	2					
ANR	4359235	Condition	count	315:6:9988:9992	4359154	0	True				
ANR	4359236	Identifier	count		4359154	0					
ANR	4359237	CompoundStatement		10:13:268:268	4359154	1					
ANR	4359238	ExpressionStatement	* count = 0	316:3:10000:10010	4359154	0	True				
ANR	4359239	AssignmentExpression	* count = 0		4359154	0		=			
ANR	4359240	UnaryOperationExpression	* count		4359154	0					
ANR	4359241	UnaryOperator	*		4359154	0					
ANR	4359242	Identifier	count		4359154	1					
ANR	4359243	PrimaryExpression	0		4359154	1					
ANR	4359244	ExpressionStatement	tmp = ( char * ) r_str_trim_ro ( count + 1 )	317:3:10048:10087	4359154	1	True				
ANR	4359245	AssignmentExpression	tmp = ( char * ) r_str_trim_ro ( count + 1 )		4359154	0		=			
ANR	4359246	Identifier	tmp		4359154	0					
ANR	4359247	CastExpression	( char * ) r_str_trim_ro ( count + 1 )		4359154	1					
ANR	4359248	CastTarget	char *		4359154	0					
ANR	4359249	CallExpression	r_str_trim_ro ( count + 1 )		4359154	1					
ANR	4359250	Callee	r_str_trim_ro		4359154	0					
ANR	4359251	Identifier	r_str_trim_ro		4359154	0					
ANR	4359252	ArgumentList	count + 1		4359154	1					
ANR	4359253	Argument	count + 1		4359154	0					
ANR	4359254	AdditiveExpression	count + 1		4359154	0		+			
ANR	4359255	Identifier	count		4359154	0					
ANR	4359256	PrimaryExpression	1		4359154	1					
ANR	4359257	ExpressionStatement	lines = atoi ( arg )	318:3:10092:10110	4359154	2	True				
ANR	4359258	AssignmentExpression	lines = atoi ( arg )		4359154	0		=			
ANR	4359259	Identifier	lines		4359154	0					
ANR	4359260	CallExpression	atoi ( arg )		4359154	1					
ANR	4359261	Callee	atoi		4359154	0					
ANR	4359262	Identifier	atoi		4359154	0					
ANR	4359263	ArgumentList	arg		4359154	1					
ANR	4359264	Argument	arg		4359154	0					
ANR	4359265	Identifier	arg		4359154	0					
ANR	4359266	ExpressionStatement	arg = tmp	319:3:10115:10124	4359154	3	True				
ANR	4359267	AssignmentExpression	arg = tmp		4359154	0		=			
ANR	4359268	Identifier	arg		4359154	0					
ANR	4359269	Identifier	tmp		4359154	1					
ANR	4359270	SwitchStatement	switch ( * input )		4359154	6					
ANR	4359271	Condition	* input	322:9:10142:10147	4359154	0	True				
ANR	4359272	UnaryOperationExpression	* input		4359154	0					
ANR	4359273	UnaryOperator	*		4359154	0					
ANR	4359274	Identifier	input		4359154	1					
ANR	4359275	CompoundStatement		17:17:423:423	4359154	1					
ANR	4359276	Label	case '?' :	323:1:10153:10161	4359154	0	True				
ANR	4359277	ExpressionStatement	"eprintf ( ""Usage: tail [file] # to list last n lines in file\\n"" )"	324:2:10176:10239	4359154	1	True				
ANR	4359278	CallExpression	"eprintf ( ""Usage: tail [file] # to list last n lines in file\\n"" )"		4359154	0					
ANR	4359279	Callee	eprintf		4359154	0					
ANR	4359280	Identifier	eprintf		4359154	0					
ANR	4359281	ArgumentList	"""Usage: tail [file] # to list last n lines in file\\n"""		4359154	1					
ANR	4359282	Argument	"""Usage: tail [file] # to list last n lines in file\\n"""		4359154	0					
ANR	4359283	PrimaryExpression	"""Usage: tail [file] # to list last n lines in file\\n"""		4359154	0					
ANR	4359284	BreakStatement	break ;	325:2:10243:10248	4359154	2	True				
ANR	4359285	Label	default :	326:1:10251:10258	4359154	3	True				
ANR	4359286	Identifier	default		4359154	0					
ANR	4359287	IfStatement	if ( ! arg )		4359154	4					
ANR	4359288	Condition	! arg	327:6:10276:10279	4359154	0	True				
ANR	4359289	UnaryOperationExpression	! arg		4359154	0					
ANR	4359290	UnaryOperator	!		4359154	0					
ANR	4359291	Identifier	arg		4359154	1					
ANR	4359292	CompoundStatement		22:12:555:555	4359154	1					
ANR	4359293	ExpressionStatement	"arg = """""	328:3:10287:10295	4359154	0	True				
ANR	4359294	AssignmentExpression	"arg = """""		4359154	0		=			
ANR	4359295	Identifier	arg		4359154	0					
ANR	4359296	PrimaryExpression	""""""		4359154	1					
ANR	4359297	IfStatement	"if ( r_fs_check ( core -> fs , arg ) )"		4359154	5					
ANR	4359298	Condition	"r_fs_check ( core -> fs , arg )"	330:6:10307:10332	4359154	0	True				
ANR	4359299	CallExpression	"r_fs_check ( core -> fs , arg )"		4359154	0					
ANR	4359300	Callee	r_fs_check		4359154	0					
ANR	4359301	Identifier	r_fs_check		4359154	0					
ANR	4359302	ArgumentList	core -> fs		4359154	1					
ANR	4359303	Argument	core -> fs		4359154	0					
ANR	4359304	PtrMemberAccess	core -> fs		4359154	0					
ANR	4359305	Identifier	core		4359154	0					
ANR	4359306	Identifier	fs		4359154	1					
ANR	4359307	Argument	arg		4359154	1					
ANR	4359308	Identifier	arg		4359154	0					
ANR	4359309	CompoundStatement		25:34:608:608	4359154	1					
ANR	4359310	ExpressionStatement	"r_core_cmdf ( core , ""md %s"" , arg )"	331:3:10340:10372	4359154	0	True				
ANR	4359311	CallExpression	"r_core_cmdf ( core , ""md %s"" , arg )"		4359154	0					
ANR	4359312	Callee	r_core_cmdf		4359154	0					
ANR	4359313	Identifier	r_core_cmdf		4359154	0					
ANR	4359314	ArgumentList	core		4359154	1					
ANR	4359315	Argument	core		4359154	0					
ANR	4359316	Identifier	core		4359154	0					
ANR	4359317	Argument	"""md %s"""		4359154	1					
ANR	4359318	PrimaryExpression	"""md %s"""		4359154	0					
ANR	4359319	Argument	arg		4359154	2					
ANR	4359320	Identifier	arg		4359154	0					
ANR	4359321	ElseStatement	else		4359154	0					
ANR	4359322	CompoundStatement		28:3:661:699	4359154	0					
ANR	4359323	IdentifierDeclStatement	"char * res = r_syscmd_tail ( arg , lines ) ;"	333:3:10388:10426	4359154	0	True				
ANR	4359324	IdentifierDecl	"* res = r_syscmd_tail ( arg , lines )"		4359154	0					
ANR	4359325	IdentifierDeclType	char *		4359154	0					
ANR	4359326	Identifier	res		4359154	1					
ANR	4359327	AssignmentExpression	"* res = r_syscmd_tail ( arg , lines )"		4359154	2		=			
ANR	4359328	Identifier	res		4359154	0					
ANR	4359329	CallExpression	"r_syscmd_tail ( arg , lines )"		4359154	1					
ANR	4359330	Callee	r_syscmd_tail		4359154	0					
ANR	4359331	Identifier	r_syscmd_tail		4359154	0					
ANR	4359332	ArgumentList	arg		4359154	1					
ANR	4359333	Argument	arg		4359154	0					
ANR	4359334	Identifier	arg		4359154	0					
ANR	4359335	Argument	lines		4359154	1					
ANR	4359336	Identifier	lines		4359154	0					
ANR	4359337	IfStatement	if ( res )		4359154	1					
ANR	4359338	Condition	res	334:7:10435:10437	4359154	0	True				
ANR	4359339	Identifier	res		4359154	0					
ANR	4359340	CompoundStatement		29:12:713:713	4359154	1					
ANR	4359341	ExpressionStatement	r_cons_print ( res )	335:4:10446:10464	4359154	0	True				
ANR	4359342	CallExpression	r_cons_print ( res )		4359154	0					
ANR	4359343	Callee	r_cons_print		4359154	0					
ANR	4359344	Identifier	r_cons_print		4359154	0					
ANR	4359345	ArgumentList	res		4359154	1					
ANR	4359346	Argument	res		4359154	0					
ANR	4359347	Identifier	res		4359154	0					
ANR	4359348	ExpressionStatement	free ( res )	336:4:10470:10480	4359154	1	True				
ANR	4359349	CallExpression	free ( res )		4359154	0					
ANR	4359350	Callee	free		4359154	0					
ANR	4359351	Identifier	free		4359154	0					
ANR	4359352	ArgumentList	res		4359154	1					
ANR	4359353	Argument	res		4359154	0					
ANR	4359354	Identifier	res		4359154	0					
ANR	4359355	BreakStatement	break ;	339:2:10493:10498	4359154	6	True				
ANR	4359356	ExpressionStatement	free ( input )	341:1:10504:10516	4359154	7	True				
ANR	4359357	CallExpression	free ( input )		4359154	0					
ANR	4359358	Callee	free		4359154	0					
ANR	4359359	Identifier	free		4359154	0					
ANR	4359360	ArgumentList	input		4359154	1					
ANR	4359361	Argument	input		4359154	0					
ANR	4359362	Identifier	input		4359154	0					
ANR	4359363	ReturnStatement	return 0 ;	342:1:10519:10527	4359154	8	True				
ANR	4359364	PrimaryExpression	0		4359154	0					
ANR	4359365	ReturnType	static int		4359154	1					
ANR	4359366	Identifier	cmd_tail		4359154	2					
ANR	4359367	ParameterList	"void * data , const char * _input"		4359154	3					
ANR	4359368	Parameter	void * data	306:20:9694:9703	4359154	0	True				
ANR	4359369	ParameterType	void *		4359154	0					
ANR	4359370	Identifier	data		4359154	1					
ANR	4359371	Parameter	const char * _input	306:32:9706:9723	4359154	1	True				
ANR	4359372	ParameterType	const char *		4359154	0					
ANR	4359373	Identifier	_input		4359154	1					
ANR	4359374	CFGEntryNode	ENTRY		4359154		True				
ANR	4359375	CFGExitNode	EXIT		4359154		True				
ANR	4359376	Symbol	atoi		4359154						
ANR	4359377	Symbol	res		4359154						
ANR	4359378	Symbol	data		4359154						
ANR	4359379	Symbol	count		4359154						
ANR	4359380	Symbol	* input		4359154						
ANR	4359381	Symbol	* core		4359154						
ANR	4359382	Symbol	strchr		4359154						
ANR	4359383	Symbol	input		4359154						
ANR	4359384	Symbol	core		4359154						
ANR	4359385	Symbol	* count		4359154						
ANR	4359386	Symbol	r_syscmd_tail		4359154						
ANR	4359387	Symbol	tmp		4359154						
ANR	4359388	Symbol	arg		4359154						
ANR	4359389	Symbol	r_str_trim_ro		4359154						
ANR	4359390	Symbol	strdup		4359154						
ANR	4359391	Symbol	core -> fs		4359154						
ANR	4359392	Symbol	_input		4359154						
ANR	4359393	Symbol	lines		4359154						
ANR	4359394	Symbol	r_fs_check		4359154						
ANR	4359395	Function	cmd_type_noreturn	345:0:10532:11834							
ANR	4359396	FunctionDef	"cmd_type_noreturn (RCore * core , const char * input)"		4359395	0					
ANR	4359397	CompoundStatement		345:62:10594:11834	4359395	0					
ANR	4359398	SwitchStatement	switch ( input [ 0 ] )		4359395	0					
ANR	4359399	Condition	input [ 0 ]	346:9:10605:10612	4359395	0	True				
ANR	4359400	ArrayIndexing	input [ 0 ]		4359395	0					
ANR	4359401	Identifier	input		4359395	0					
ANR	4359402	PrimaryExpression	0		4359395	1					
ANR	4359403	CompoundStatement		2:19:20:20	4359395	1					
ANR	4359404	Label	case '-' :	347:1:10618:10626	4359395	0	True				
ANR	4359405	IfStatement	if ( input [ 1 ] == '*' )		4359395	1					
ANR	4359406	Condition	input [ 1 ] == '*'	348:6:10643:10657	4359395	0	True				
ANR	4359407	EqualityExpression	input [ 1 ] == '*'		4359395	0		==			
ANR	4359408	ArrayIndexing	input [ 1 ]		4359395	0					
ANR	4359409	Identifier	input		4359395	0					
ANR	4359410	PrimaryExpression	1		4359395	1					
ANR	4359411	PrimaryExpression	'*'		4359395	1					
ANR	4359412	CompoundStatement		4:23:65:65	4359395	1					
ANR	4359413	ExpressionStatement	"r_core_cmd0 ( core , ""tn-`tn`"" )"	349:3:10665:10694	4359395	0	True				
ANR	4359414	CallExpression	"r_core_cmd0 ( core , ""tn-`tn`"" )"		4359395	0					
ANR	4359415	Callee	r_core_cmd0		4359395	0					
ANR	4359416	Identifier	r_core_cmd0		4359395	0					
ANR	4359417	ArgumentList	core		4359395	1					
ANR	4359418	Argument	core		4359395	0					
ANR	4359419	Identifier	core		4359395	0					
ANR	4359420	Argument	"""tn-`tn`"""		4359395	1					
ANR	4359421	PrimaryExpression	"""tn-`tn`"""		4359395	0					
ANR	4359422	ElseStatement	else		4359395	0					
ANR	4359423	CompoundStatement		10:3:196:238	4359395	0					
ANR	4359424	IdentifierDeclStatement	char * s = strdup ( r_str_trim_ro ( input + 1 ) ) ;	351:3:10710:10754	4359395	0	True				
ANR	4359425	IdentifierDecl	* s = strdup ( r_str_trim_ro ( input + 1 ) )		4359395	0					
ANR	4359426	IdentifierDeclType	char *		4359395	0					
ANR	4359427	Identifier	s		4359395	1					
ANR	4359428	AssignmentExpression	* s = strdup ( r_str_trim_ro ( input + 1 ) )		4359395	2		=			
ANR	4359429	Identifier	s		4359395	0					
ANR	4359430	CallExpression	strdup ( r_str_trim_ro ( input + 1 ) )		4359395	1					
ANR	4359431	Callee	strdup		4359395	0					
ANR	4359432	Identifier	strdup		4359395	0					
ANR	4359433	ArgumentList	r_str_trim_ro ( input + 1 )		4359395	1					
ANR	4359434	Argument	r_str_trim_ro ( input + 1 )		4359395	0					
ANR	4359435	CallExpression	r_str_trim_ro ( input + 1 )		4359395	0					
ANR	4359436	Callee	r_str_trim_ro		4359395	0					
ANR	4359437	Identifier	r_str_trim_ro		4359395	0					
ANR	4359438	ArgumentList	input + 1		4359395	1					
ANR	4359439	Argument	input + 1		4359395	0					
ANR	4359440	AdditiveExpression	input + 1		4359395	0		+			
ANR	4359441	Identifier	input		4359395	0					
ANR	4359442	PrimaryExpression	1		4359395	1					
ANR	4359443	IdentifierDeclStatement	RListIter * iter ;	352:3:10759:10774	4359395	1	True				
ANR	4359444	IdentifierDecl	* iter		4359395	0					
ANR	4359445	IdentifierDeclType	RListIter *		4359395	0					
ANR	4359446	Identifier	iter		4359395	1					
ANR	4359447	IdentifierDeclStatement	char * k ;	353:3:10779:10786	4359395	2	True				
ANR	4359448	IdentifierDecl	* k		4359395	0					
ANR	4359449	IdentifierDeclType	char *		4359395	0					
ANR	4359450	Identifier	k		4359395	1					
ANR	4359451	IdentifierDeclStatement	"RList * list = r_str_split_list ( s , "" "" , 0 ) ;"	354:3:10791:10833	4359395	3	True				
ANR	4359452	IdentifierDecl	"* list = r_str_split_list ( s , "" "" , 0 )"		4359395	0					
ANR	4359453	IdentifierDeclType	RList *		4359395	0					
ANR	4359454	Identifier	list		4359395	1					
ANR	4359455	AssignmentExpression	"* list = r_str_split_list ( s , "" "" , 0 )"		4359395	2		=			
ANR	4359456	Identifier	list		4359395	0					
ANR	4359457	CallExpression	"r_str_split_list ( s , "" "" , 0 )"		4359395	1					
ANR	4359458	Callee	r_str_split_list		4359395	0					
ANR	4359459	Identifier	r_str_split_list		4359395	0					
ANR	4359460	ArgumentList	s		4359395	1					
ANR	4359461	Argument	s		4359395	0					
ANR	4359462	Identifier	s		4359395	0					
ANR	4359463	Argument	""" """		4359395	1					
ANR	4359464	PrimaryExpression	""" """		4359395	0					
ANR	4359465	Argument	0		4359395	2					
ANR	4359466	PrimaryExpression	0		4359395	0					
ANR	4359467	Statement	r_list_foreach	355:3:10838:10851	4359395	4	True				
ANR	4359468	Statement	(	355:18:10853:10853	4359395	5	True				
ANR	4359469	Statement	list	355:19:10854:10857	4359395	6	True				
ANR	4359470	Statement	","	355:23:10858:10858	4359395	7	True				
ANR	4359471	Statement	iter	355:25:10860:10863	4359395	8	True				
ANR	4359472	Statement	","	355:29:10864:10864	4359395	9	True				
ANR	4359473	Statement	k	355:31:10866:10866	4359395	10	True				
ANR	4359474	Statement	)	355:32:10867:10867	4359395	11	True				
ANR	4359475	CompoundStatement		11:34:274:274	4359395	12					
ANR	4359476	ExpressionStatement	"r_anal_noreturn_drop ( core -> anal , k )"	356:4:10875:10911	4359395	0	True				
ANR	4359477	CallExpression	"r_anal_noreturn_drop ( core -> anal , k )"		4359395	0					
ANR	4359478	Callee	r_anal_noreturn_drop		4359395	0					
ANR	4359479	Identifier	r_anal_noreturn_drop		4359395	0					
ANR	4359480	ArgumentList	core -> anal		4359395	1					
ANR	4359481	Argument	core -> anal		4359395	0					
ANR	4359482	PtrMemberAccess	core -> anal		4359395	0					
ANR	4359483	Identifier	core		4359395	0					
ANR	4359484	Identifier	anal		4359395	1					
ANR	4359485	Argument	k		4359395	1					
ANR	4359486	Identifier	k		4359395	0					
ANR	4359487	ExpressionStatement	r_list_free ( list )	358:3:10921:10939	4359395	13	True				
ANR	4359488	CallExpression	r_list_free ( list )		4359395	0					
ANR	4359489	Callee	r_list_free		4359395	0					
ANR	4359490	Identifier	r_list_free		4359395	0					
ANR	4359491	ArgumentList	list		4359395	1					
ANR	4359492	Argument	list		4359395	0					
ANR	4359493	Identifier	list		4359395	0					
ANR	4359494	ExpressionStatement	free ( s )	359:3:10944:10952	4359395	14	True				
ANR	4359495	CallExpression	free ( s )		4359395	0					
ANR	4359496	Callee	free		4359395	0					
ANR	4359497	Identifier	free		4359395	0					
ANR	4359498	ArgumentList	s		4359395	1					
ANR	4359499	Argument	s		4359395	0					
ANR	4359500	Identifier	s		4359395	0					
ANR	4359501	BreakStatement	break ;	361:2:10960:10965	4359395	2	True				
ANR	4359502	Label	case ' ' :	362:1:10968:10976	4359395	3	True				
ANR	4359503	CompoundStatement		21:3:446:482	4359395	4					
ANR	4359504	IdentifierDeclStatement	const char * arg = r_str_trim_ro ( input + 1 ) ;	364:3:10993:11036	4359395	0	True				
ANR	4359505	IdentifierDecl	* arg = r_str_trim_ro ( input + 1 )		4359395	0					
ANR	4359506	IdentifierDeclType	const char *		4359395	0					
ANR	4359507	Identifier	arg		4359395	1					
ANR	4359508	AssignmentExpression	* arg = r_str_trim_ro ( input + 1 )		4359395	2		=			
ANR	4359509	Identifier	arg		4359395	0					
ANR	4359510	CallExpression	r_str_trim_ro ( input + 1 )		4359395	1					
ANR	4359511	Callee	r_str_trim_ro		4359395	0					
ANR	4359512	Identifier	r_str_trim_ro		4359395	0					
ANR	4359513	ArgumentList	input + 1		4359395	1					
ANR	4359514	Argument	input + 1		4359395	0					
ANR	4359515	AdditiveExpression	input + 1		4359395	0		+			
ANR	4359516	Identifier	input		4359395	0					
ANR	4359517	PrimaryExpression	1		4359395	1					
ANR	4359518	IdentifierDeclStatement	"ut64 n = r_num_math ( core -> num , arg ) ;"	365:3:11041:11077	4359395	1	True				
ANR	4359519	IdentifierDecl	"n = r_num_math ( core -> num , arg )"		4359395	0					
ANR	4359520	IdentifierDeclType	ut64		4359395	0					
ANR	4359521	Identifier	n		4359395	1					
ANR	4359522	AssignmentExpression	"n = r_num_math ( core -> num , arg )"		4359395	2		=			
ANR	4359523	Identifier	n		4359395	0					
ANR	4359524	CallExpression	"r_num_math ( core -> num , arg )"		4359395	1					
ANR	4359525	Callee	r_num_math		4359395	0					
ANR	4359526	Identifier	r_num_math		4359395	0					
ANR	4359527	ArgumentList	core -> num		4359395	1					
ANR	4359528	Argument	core -> num		4359395	0					
ANR	4359529	PtrMemberAccess	core -> num		4359395	0					
ANR	4359530	Identifier	core		4359395	0					
ANR	4359531	Identifier	num		4359395	1					
ANR	4359532	Argument	arg		4359395	1					
ANR	4359533	Identifier	arg		4359395	0					
ANR	4359534	IfStatement	if ( n )		4359395	2					
ANR	4359535	Condition	n	366:7:11086:11086	4359395	0	True				
ANR	4359536	Identifier	n		4359395	0					
ANR	4359537	CompoundStatement		22:10:494:494	4359395	1					
ANR	4359538	ExpressionStatement	"r_anal_noreturn_add ( core -> anal , arg , n )"	367:4:11095:11135	4359395	0	True				
ANR	4359539	CallExpression	"r_anal_noreturn_add ( core -> anal , arg , n )"		4359395	0					
ANR	4359540	Callee	r_anal_noreturn_add		4359395	0					
ANR	4359541	Identifier	r_anal_noreturn_add		4359395	0					
ANR	4359542	ArgumentList	core -> anal		4359395	1					
ANR	4359543	Argument	core -> anal		4359395	0					
ANR	4359544	PtrMemberAccess	core -> anal		4359395	0					
ANR	4359545	Identifier	core		4359395	0					
ANR	4359546	Identifier	anal		4359395	1					
ANR	4359547	Argument	arg		4359395	1					
ANR	4359548	Identifier	arg		4359395	0					
ANR	4359549	Argument	n		4359395	2					
ANR	4359550	Identifier	n		4359395	0					
ANR	4359551	ElseStatement	else		4359395	0					
ANR	4359552	CompoundStatement		24:10:552:552	4359395	0					
ANR	4359553	ExpressionStatement	"r_anal_noreturn_add ( core -> anal , arg , UT64_MAX )"	369:4:11153:11200	4359395	0	True				
ANR	4359554	CallExpression	"r_anal_noreturn_add ( core -> anal , arg , UT64_MAX )"		4359395	0					
ANR	4359555	Callee	r_anal_noreturn_add		4359395	0					
ANR	4359556	Identifier	r_anal_noreturn_add		4359395	0					
ANR	4359557	ArgumentList	core -> anal		4359395	1					
ANR	4359558	Argument	core -> anal		4359395	0					
ANR	4359559	PtrMemberAccess	core -> anal		4359395	0					
ANR	4359560	Identifier	core		4359395	0					
ANR	4359561	Identifier	anal		4359395	1					
ANR	4359562	Argument	arg		4359395	1					
ANR	4359563	Identifier	arg		4359395	0					
ANR	4359564	Argument	UT64_MAX		4359395	2					
ANR	4359565	Identifier	UT64_MAX		4359395	0					
ANR	4359566	BreakStatement	break ;	372:2:11213:11218	4359395	5	True				
ANR	4359567	Label	case 'a' :	373:1:11221:11229	4359395	6	True				
ANR	4359568	IfStatement	if ( input [ 1 ] == ' ' )		4359395	7					
ANR	4359569	Condition	input [ 1 ] == ' '	374:6:11246:11260	4359395	0	True				
ANR	4359570	EqualityExpression	input [ 1 ] == ' '		4359395	0		==			
ANR	4359571	ArrayIndexing	input [ 1 ]		4359395	0					
ANR	4359572	Identifier	input		4359395	0					
ANR	4359573	PrimaryExpression	1		4359395	1					
ANR	4359574	PrimaryExpression	' '		4359395	1					
ANR	4359575	CompoundStatement		30:23:668:668	4359395	1					
ANR	4359576	ExpressionStatement	"r_anal_noreturn_add ( core -> anal , NULL , r_num_math ( core -> num , input + 1 ) )"	375:3:11268:11346	4359395	0	True				
ANR	4359577	CallExpression	"r_anal_noreturn_add ( core -> anal , NULL , r_num_math ( core -> num , input + 1 ) )"		4359395	0					
ANR	4359578	Callee	r_anal_noreturn_add		4359395	0					
ANR	4359579	Identifier	r_anal_noreturn_add		4359395	0					
ANR	4359580	ArgumentList	core -> anal		4359395	1					
ANR	4359581	Argument	core -> anal		4359395	0					
ANR	4359582	PtrMemberAccess	core -> anal		4359395	0					
ANR	4359583	Identifier	core		4359395	0					
ANR	4359584	Identifier	anal		4359395	1					
ANR	4359585	Argument	NULL		4359395	1					
ANR	4359586	Identifier	NULL		4359395	0					
ANR	4359587	Argument	"r_num_math ( core -> num , input + 1 )"		4359395	2					
ANR	4359588	CallExpression	"r_num_math ( core -> num , input + 1 )"		4359395	0					
ANR	4359589	Callee	r_num_math		4359395	0					
ANR	4359590	Identifier	r_num_math		4359395	0					
ANR	4359591	ArgumentList	core -> num		4359395	1					
ANR	4359592	Argument	core -> num		4359395	0					
ANR	4359593	PtrMemberAccess	core -> num		4359395	0					
ANR	4359594	Identifier	core		4359395	0					
ANR	4359595	Identifier	num		4359395	1					
ANR	4359596	Argument	input + 1		4359395	1					
ANR	4359597	AdditiveExpression	input + 1		4359395	0		+			
ANR	4359598	Identifier	input		4359395	0					
ANR	4359599	PrimaryExpression	1		4359395	1					
ANR	4359600	ElseStatement	else		4359395	0					
ANR	4359601	CompoundStatement		33:9:762:762	4359395	0					
ANR	4359602	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tn )"	378:3:11362:11397	4359395	0	True				
ANR	4359603	CallExpression	"r_core_cmd_help ( core , help_msg_tn )"		4359395	0					
ANR	4359604	Callee	r_core_cmd_help		4359395	0					
ANR	4359605	Identifier	r_core_cmd_help		4359395	0					
ANR	4359606	ArgumentList	core		4359395	1					
ANR	4359607	Argument	core		4359395	0					
ANR	4359608	Identifier	core		4359395	0					
ANR	4359609	Argument	help_msg_tn		4359395	1					
ANR	4359610	Identifier	help_msg_tn		4359395	0					
ANR	4359611	BreakStatement	break ;	380:2:11405:11410	4359395	8	True				
ANR	4359612	Label	case 'n' :	381:1:11413:11421	4359395	9	True				
ANR	4359613	IfStatement	if ( input [ 1 ] == ' ' )		4359395	10					
ANR	4359614	Condition	input [ 1 ] == ' '	382:6:11438:11452	4359395	0	True				
ANR	4359615	EqualityExpression	input [ 1 ] == ' '		4359395	0		==			
ANR	4359616	ArrayIndexing	input [ 1 ]		4359395	0					
ANR	4359617	Identifier	input		4359395	0					
ANR	4359618	PrimaryExpression	1		4359395	1					
ANR	4359619	PrimaryExpression	' '		4359395	1					
ANR	4359620	CompoundStatement		38:23:860:860	4359395	1					
ANR	4359621	ExpressionStatement	"r_anal_noreturn_add ( core -> anal , r_str_trim_ro ( input + 2 ) , UT64_MAX )"	384:3:11481:11550	4359395	0	True				
ANR	4359622	CallExpression	"r_anal_noreturn_add ( core -> anal , r_str_trim_ro ( input + 2 ) , UT64_MAX )"		4359395	0					
ANR	4359623	Callee	r_anal_noreturn_add		4359395	0					
ANR	4359624	Identifier	r_anal_noreturn_add		4359395	0					
ANR	4359625	ArgumentList	core -> anal		4359395	1					
ANR	4359626	Argument	core -> anal		4359395	0					
ANR	4359627	PtrMemberAccess	core -> anal		4359395	0					
ANR	4359628	Identifier	core		4359395	0					
ANR	4359629	Identifier	anal		4359395	1					
ANR	4359630	Argument	r_str_trim_ro ( input + 2 )		4359395	1					
ANR	4359631	CallExpression	r_str_trim_ro ( input + 2 )		4359395	0					
ANR	4359632	Callee	r_str_trim_ro		4359395	0					
ANR	4359633	Identifier	r_str_trim_ro		4359395	0					
ANR	4359634	ArgumentList	input + 2		4359395	1					
ANR	4359635	Argument	input + 2		4359395	0					
ANR	4359636	AdditiveExpression	input + 2		4359395	0		+			
ANR	4359637	Identifier	input		4359395	0					
ANR	4359638	PrimaryExpression	2		4359395	1					
ANR	4359639	Argument	UT64_MAX		4359395	2					
ANR	4359640	Identifier	UT64_MAX		4359395	0					
ANR	4359641	ElseStatement	else		4359395	0					
ANR	4359642	CompoundStatement		41:9:966:966	4359395	0					
ANR	4359643	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tn )"	386:3:11566:11601	4359395	0	True				
ANR	4359644	CallExpression	"r_core_cmd_help ( core , help_msg_tn )"		4359395	0					
ANR	4359645	Callee	r_core_cmd_help		4359395	0					
ANR	4359646	Identifier	r_core_cmd_help		4359395	0					
ANR	4359647	ArgumentList	core		4359395	1					
ANR	4359648	Argument	core		4359395	0					
ANR	4359649	Identifier	core		4359395	0					
ANR	4359650	Argument	help_msg_tn		4359395	1					
ANR	4359651	Identifier	help_msg_tn		4359395	0					
ANR	4359652	BreakStatement	break ;	388:2:11609:11614	4359395	11	True				
ANR	4359653	Label	case '*' :	389:1:11617:11625	4359395	12	True				
ANR	4359654	Label	case 'r' :	390:1:11628:11636	4359395	13	True				
ANR	4359655	ExpressionStatement	"r_anal_noreturn_list ( core -> anal , 1 )"	391:2:11649:11685	4359395	14	True				
ANR	4359656	CallExpression	"r_anal_noreturn_list ( core -> anal , 1 )"		4359395	0					
ANR	4359657	Callee	r_anal_noreturn_list		4359395	0					
ANR	4359658	Identifier	r_anal_noreturn_list		4359395	0					
ANR	4359659	ArgumentList	core -> anal		4359395	1					
ANR	4359660	Argument	core -> anal		4359395	0					
ANR	4359661	PtrMemberAccess	core -> anal		4359395	0					
ANR	4359662	Identifier	core		4359395	0					
ANR	4359663	Identifier	anal		4359395	1					
ANR	4359664	Argument	1		4359395	1					
ANR	4359665	PrimaryExpression	1		4359395	0					
ANR	4359666	BreakStatement	break ;	392:2:11689:11694	4359395	15	True				
ANR	4359667	Label	case 0 :	393:1:11697:11703	4359395	16	True				
ANR	4359668	ExpressionStatement	"r_anal_noreturn_list ( core -> anal , 0 )"	394:2:11715:11751	4359395	17	True				
ANR	4359669	CallExpression	"r_anal_noreturn_list ( core -> anal , 0 )"		4359395	0					
ANR	4359670	Callee	r_anal_noreturn_list		4359395	0					
ANR	4359671	Identifier	r_anal_noreturn_list		4359395	0					
ANR	4359672	ArgumentList	core -> anal		4359395	1					
ANR	4359673	Argument	core -> anal		4359395	0					
ANR	4359674	PtrMemberAccess	core -> anal		4359395	0					
ANR	4359675	Identifier	core		4359395	0					
ANR	4359676	Identifier	anal		4359395	1					
ANR	4359677	Argument	0		4359395	1					
ANR	4359678	PrimaryExpression	0		4359395	0					
ANR	4359679	BreakStatement	break ;	395:2:11755:11760	4359395	18	True				
ANR	4359680	Label	default :	396:1:11763:11770	4359395	19	True				
ANR	4359681	Identifier	default		4359395	0					
ANR	4359682	Label	case '?' :	397:1:11773:11781	4359395	20	True				
ANR	4359683	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tn )"	398:2:11785:11820	4359395	21	True				
ANR	4359684	CallExpression	"r_core_cmd_help ( core , help_msg_tn )"		4359395	0					
ANR	4359685	Callee	r_core_cmd_help		4359395	0					
ANR	4359686	Identifier	r_core_cmd_help		4359395	0					
ANR	4359687	ArgumentList	core		4359395	1					
ANR	4359688	Argument	core		4359395	0					
ANR	4359689	Identifier	core		4359395	0					
ANR	4359690	Argument	help_msg_tn		4359395	1					
ANR	4359691	Identifier	help_msg_tn		4359395	0					
ANR	4359692	BreakStatement	break ;	399:2:11824:11829	4359395	22	True				
ANR	4359693	ReturnType	static void		4359395	1					
ANR	4359694	Identifier	cmd_type_noreturn		4359395	2					
ANR	4359695	ParameterList	"RCore * core , const char * input"		4359395	3					
ANR	4359696	Parameter	RCore * core	345:30:10562:10572	4359395	0	True				
ANR	4359697	ParameterType	RCore *		4359395	0					
ANR	4359698	Identifier	core		4359395	1					
ANR	4359699	Parameter	const char * input	345:43:10575:10591	4359395	1	True				
ANR	4359700	ParameterType	const char *		4359395	0					
ANR	4359701	Identifier	input		4359395	1					
ANR	4359702	CFGEntryNode	ENTRY		4359395		True				
ANR	4359703	CFGExitNode	EXIT		4359395		True				
ANR	4359704	Symbol	NULL		4359395						
ANR	4359705	Symbol	* input		4359395						
ANR	4359706	Symbol	r_str_split_list		4359395						
ANR	4359707	Symbol	* core		4359395						
ANR	4359708	Symbol	iter		4359395						
ANR	4359709	Symbol	k		4359395						
ANR	4359710	Symbol	list		4359395						
ANR	4359711	Symbol	core -> anal		4359395						
ANR	4359712	Symbol	n		4359395						
ANR	4359713	Symbol	r_num_math		4359395						
ANR	4359714	Symbol	help_msg_tn		4359395						
ANR	4359715	Symbol	core		4359395						
ANR	4359716	Symbol	input		4359395						
ANR	4359717	Symbol	s		4359395						
ANR	4359718	Symbol	arg		4359395						
ANR	4359719	Symbol	r_str_trim_ro		4359395						
ANR	4359720	Symbol	strdup		4359395						
ANR	4359721	Symbol	core -> num		4359395						
ANR	4359722	Symbol	UT64_MAX		4359395						
ANR	4359723	DeclStmt									
ANR	4359724	Decl							Sdb	Sdb *	TDB_
ANR	4359725	Function	stdifstruct	405:0:11871:12261							
ANR	4359726	FunctionDef	"stdifstruct (void * user , const char * k , const char * v)"		4359725	0					
ANR	4359727	CompoundStatement		405:65:11936:12261	4359725	0					
ANR	4359728	ExpressionStatement	"r_return_val_if_fail ( TDB_ , false )"	406:1:11939:11973	4359725	0	True				
ANR	4359729	CallExpression	"r_return_val_if_fail ( TDB_ , false )"		4359725	0					
ANR	4359730	Callee	r_return_val_if_fail		4359725	0					
ANR	4359731	Identifier	r_return_val_if_fail		4359725	0					
ANR	4359732	ArgumentList	TDB_		4359725	1					
ANR	4359733	Argument	TDB_		4359725	0					
ANR	4359734	Identifier	TDB_		4359725	0					
ANR	4359735	Argument	false		4359725	1					
ANR	4359736	Identifier	false		4359725	0					
ANR	4359737	IfStatement	"if ( ! strcmp ( v , ""struct"" ) )"		4359725	1					
ANR	4359738	Condition	"! strcmp ( v , ""struct"" )"	407:5:11980:12000	4359725	0	True				
ANR	4359739	UnaryOperationExpression	"! strcmp ( v , ""struct"" )"		4359725	0					
ANR	4359740	UnaryOperator	!		4359725	0					
ANR	4359741	CallExpression	"strcmp ( v , ""struct"" )"		4359725	1					
ANR	4359742	Callee	strcmp		4359725	0					
ANR	4359743	Identifier	strcmp		4359725	0					
ANR	4359744	ArgumentList	v		4359725	1					
ANR	4359745	Argument	v		4359725	0					
ANR	4359746	Identifier	v		4359725	0					
ANR	4359747	Argument	"""struct"""		4359725	1					
ANR	4359748	PrimaryExpression	"""struct"""		4359725	0					
ANR	4359749	CompoundStatement		3:28:66:66	4359725	1					
ANR	4359750	ReturnStatement	return true ;	408:2:12007:12018	4359725	0	True				
ANR	4359751	Identifier	true		4359725	0					
ANR	4359752	IfStatement	"if ( ! strcmp ( v , ""typedef"" ) )"		4359725	2					
ANR	4359753	Condition	"! strcmp ( v , ""typedef"" )"	410:5:12028:12049	4359725	0	True				
ANR	4359754	UnaryOperationExpression	"! strcmp ( v , ""typedef"" )"		4359725	0					
ANR	4359755	UnaryOperator	!		4359725	0					
ANR	4359756	CallExpression	"strcmp ( v , ""typedef"" )"		4359725	1					
ANR	4359757	Callee	strcmp		4359725	0					
ANR	4359758	Identifier	strcmp		4359725	0					
ANR	4359759	ArgumentList	v		4359725	1					
ANR	4359760	Argument	v		4359725	0					
ANR	4359761	Identifier	v		4359725	0					
ANR	4359762	Argument	"""typedef"""		4359725	1					
ANR	4359763	PrimaryExpression	"""typedef"""		4359725	0					
ANR	4359764	CompoundStatement		8:2:174:232	4359725	1					
ANR	4359765	IdentifierDeclStatement	"const char * typedef_key = sdb_fmt ( ""typedef.%s"" , k ) ;"	411:2:12056:12107	4359725	0	True				
ANR	4359766	IdentifierDecl	"* typedef_key = sdb_fmt ( ""typedef.%s"" , k )"		4359725	0					
ANR	4359767	IdentifierDeclType	const char *		4359725	0					
ANR	4359768	Identifier	typedef_key		4359725	1					
ANR	4359769	AssignmentExpression	"* typedef_key = sdb_fmt ( ""typedef.%s"" , k )"		4359725	2		=			
ANR	4359770	Identifier	typedef_key		4359725	0					
ANR	4359771	CallExpression	"sdb_fmt ( ""typedef.%s"" , k )"		4359725	1					
ANR	4359772	Callee	sdb_fmt		4359725	0					
ANR	4359773	Identifier	sdb_fmt		4359725	0					
ANR	4359774	ArgumentList	"""typedef.%s"""		4359725	1					
ANR	4359775	Argument	"""typedef.%s"""		4359725	0					
ANR	4359776	PrimaryExpression	"""typedef.%s"""		4359725	0					
ANR	4359777	Argument	k		4359725	1					
ANR	4359778	Identifier	k		4359725	0					
ANR	4359779	IdentifierDeclStatement	"const char * type = sdb_const_get ( TDB_ , typedef_key , NULL ) ;"	412:2:12111:12169	4359725	1	True				
ANR	4359780	IdentifierDecl	"* type = sdb_const_get ( TDB_ , typedef_key , NULL )"		4359725	0					
ANR	4359781	IdentifierDeclType	const char *		4359725	0					
ANR	4359782	Identifier	type		4359725	1					
ANR	4359783	AssignmentExpression	"* type = sdb_const_get ( TDB_ , typedef_key , NULL )"		4359725	2		=			
ANR	4359784	Identifier	type		4359725	0					
ANR	4359785	CallExpression	"sdb_const_get ( TDB_ , typedef_key , NULL )"		4359725	1					
ANR	4359786	Callee	sdb_const_get		4359725	0					
ANR	4359787	Identifier	sdb_const_get		4359725	0					
ANR	4359788	ArgumentList	TDB_		4359725	1					
ANR	4359789	Argument	TDB_		4359725	0					
ANR	4359790	Identifier	TDB_		4359725	0					
ANR	4359791	Argument	typedef_key		4359725	1					
ANR	4359792	Identifier	typedef_key		4359725	0					
ANR	4359793	Argument	NULL		4359725	2					
ANR	4359794	Identifier	NULL		4359725	0					
ANR	4359795	IfStatement	"if ( type && r_str_startswith ( type , ""struct "" ) )"		4359725	2					
ANR	4359796	Condition	"type && r_str_startswith ( type , ""struct "" )"	413:6:12177:12218	4359725	0	True				
ANR	4359797	AndExpression	"type && r_str_startswith ( type , ""struct "" )"		4359725	0		&&			
ANR	4359798	Identifier	type		4359725	0					
ANR	4359799	CallExpression	"r_str_startswith ( type , ""struct "" )"		4359725	1					
ANR	4359800	Callee	r_str_startswith		4359725	0					
ANR	4359801	Identifier	r_str_startswith		4359725	0					
ANR	4359802	ArgumentList	type		4359725	1					
ANR	4359803	Argument	type		4359725	0					
ANR	4359804	Identifier	type		4359725	0					
ANR	4359805	Argument	"""struct """		4359725	1					
ANR	4359806	PrimaryExpression	"""struct """		4359725	0					
ANR	4359807	CompoundStatement		9:50:284:284	4359725	1					
ANR	4359808	ReturnStatement	return true ;	414:3:12226:12237	4359725	0	True				
ANR	4359809	Identifier	true		4359725	0					
ANR	4359810	ReturnStatement	return false ;	417:1:12247:12259	4359725	3	True				
ANR	4359811	Identifier	false		4359725	0					
ANR	4359812	ReturnType	static int		4359725	1					
ANR	4359813	Identifier	stdifstruct		4359725	2					
ANR	4359814	ParameterList	"void * user , const char * k , const char * v"		4359725	3					
ANR	4359815	Parameter	void * user	405:23:11894:11903	4359725	0	True				
ANR	4359816	ParameterType	void *		4359725	0					
ANR	4359817	Identifier	user		4359725	1					
ANR	4359818	Parameter	const char * k	405:35:11906:11918	4359725	1	True				
ANR	4359819	ParameterType	const char *		4359725	0					
ANR	4359820	Identifier	k		4359725	1					
ANR	4359821	Parameter	const char * v	405:50:11921:11933	4359725	2	True				
ANR	4359822	ParameterType	const char *		4359725	0					
ANR	4359823	Identifier	v		4359725	1					
ANR	4359824	CFGEntryNode	ENTRY		4359725		True				
ANR	4359825	CFGExitNode	EXIT		4359725		True				
ANR	4359826	Symbol	strcmp		4359725						
ANR	4359827	Symbol	r_str_startswith		4359725						
ANR	4359828	Symbol	NULL		4359725						
ANR	4359829	Symbol	false		4359725						
ANR	4359830	Symbol	TDB_		4359725						
ANR	4359831	Symbol	k		4359725						
ANR	4359832	Symbol	type		4359725						
ANR	4359833	Symbol	sdb_const_get		4359725						
ANR	4359834	Symbol	v		4359725						
ANR	4359835	Symbol	true		4359725						
ANR	4359836	Symbol	typedef_key		4359725						
ANR	4359837	Symbol	user		4359725						
ANR	4359838	Symbol	sdb_fmt		4359725						
ANR	4359839	Function	print_struct_union_list_json	426:0:12462:13267							
ANR	4359840	FunctionDef	"print_struct_union_list_json (Sdb * TDB , SdbForeachCallback filter)"		4359839	0					
ANR	4359841	CompoundStatement		426:77:12539:13267	4359839	0					
ANR	4359842	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	427:1:12542:12560	4359839	0	True				
ANR	4359843	IdentifierDecl	* pj = pj_new ( )		4359839	0					
ANR	4359844	IdentifierDeclType	PJ *		4359839	0					
ANR	4359845	Identifier	pj		4359839	1					
ANR	4359846	AssignmentExpression	* pj = pj_new ( )		4359839	2		=			
ANR	4359847	Identifier	pj		4359839	0					
ANR	4359848	CallExpression	pj_new ( )		4359839	1					
ANR	4359849	Callee	pj_new		4359839	0					
ANR	4359850	Identifier	pj_new		4359839	0					
ANR	4359851	ArgumentList			4359839	1					
ANR	4359852	IfStatement	if ( ! pj )		4359839	1					
ANR	4359853	Condition	! pj	428:5:12567:12569	4359839	0	True				
ANR	4359854	UnaryOperationExpression	! pj		4359839	0					
ANR	4359855	UnaryOperator	!		4359839	0					
ANR	4359856	Identifier	pj		4359839	1					
ANR	4359857	CompoundStatement		3:10:32:32	4359839	1					
ANR	4359858	ReturnStatement	return 0 ;	429:2:12576:12584	4359839	0	True				
ANR	4359859	PrimaryExpression	0		4359839	0					
ANR	4359860	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list_filter ( TDB , filter , true ) ;"	431:1:12590:12646	4359839	2	True				
ANR	4359861	IdentifierDecl	"* l = sdb_foreach_list_filter ( TDB , filter , true )"		4359839	0					
ANR	4359862	IdentifierDeclType	SdbList *		4359839	0					
ANR	4359863	Identifier	l		4359839	1					
ANR	4359864	AssignmentExpression	"* l = sdb_foreach_list_filter ( TDB , filter , true )"		4359839	2		=			
ANR	4359865	Identifier	l		4359839	0					
ANR	4359866	CallExpression	"sdb_foreach_list_filter ( TDB , filter , true )"		4359839	1					
ANR	4359867	Callee	sdb_foreach_list_filter		4359839	0					
ANR	4359868	Identifier	sdb_foreach_list_filter		4359839	0					
ANR	4359869	ArgumentList	TDB		4359839	1					
ANR	4359870	Argument	TDB		4359839	0					
ANR	4359871	Identifier	TDB		4359839	0					
ANR	4359872	Argument	filter		4359839	1					
ANR	4359873	Identifier	filter		4359839	0					
ANR	4359874	Argument	true		4359839	2					
ANR	4359875	Identifier	true		4359839	0					
ANR	4359876	IdentifierDeclStatement	SdbListIter * it ;	432:1:12649:12664	4359839	3	True				
ANR	4359877	IdentifierDecl	* it		4359839	0					
ANR	4359878	IdentifierDeclType	SdbListIter *		4359839	0					
ANR	4359879	Identifier	it		4359839	1					
ANR	4359880	IdentifierDeclStatement	SdbKv * kv ;	433:1:12667:12676	4359839	4	True				
ANR	4359881	IdentifierDecl	* kv		4359839	0					
ANR	4359882	IdentifierDeclType	SdbKv *		4359839	0					
ANR	4359883	Identifier	kv		4359839	1					
ANR	4359884	ExpressionStatement	pj_a ( pj )	435:1:12680:12689	4359839	5	True				
ANR	4359885	CallExpression	pj_a ( pj )		4359839	0					
ANR	4359886	Callee	pj_a		4359839	0					
ANR	4359887	Identifier	pj_a		4359839	0					
ANR	4359888	ArgumentList	pj		4359839	1					
ANR	4359889	Argument	pj		4359839	0					
ANR	4359890	Identifier	pj		4359839	0					
ANR	4359891	Statement	ls_foreach	436:1:12697:12706	4359839	6	True				
ANR	4359892	Statement	(	436:12:12708:12708	4359839	7	True				
ANR	4359893	Statement	l	436:13:12709:12709	4359839	8	True				
ANR	4359894	Statement	","	436:14:12710:12710	4359839	9	True				
ANR	4359895	Statement	it	436:16:12712:12713	4359839	10	True				
ANR	4359896	Statement	","	436:18:12714:12714	4359839	11	True				
ANR	4359897	Statement	kv	436:20:12716:12717	4359839	12	True				
ANR	4359898	Statement	)	436:22:12718:12718	4359839	13	True				
ANR	4359899	CompoundStatement		22:2:372:422	4359839	14					
ANR	4359900	IdentifierDeclStatement	const char * k = sdbkv_key ( kv ) ;	437:2:12724:12754	4359839	0	True				
ANR	4359901	IdentifierDecl	* k = sdbkv_key ( kv )		4359839	0					
ANR	4359902	IdentifierDeclType	const char *		4359839	0					
ANR	4359903	Identifier	k		4359839	1					
ANR	4359904	AssignmentExpression	* k = sdbkv_key ( kv )		4359839	2		=			
ANR	4359905	Identifier	k		4359839	0					
ANR	4359906	CallExpression	sdbkv_key ( kv )		4359839	1					
ANR	4359907	Callee	sdbkv_key		4359839	0					
ANR	4359908	Identifier	sdbkv_key		4359839	0					
ANR	4359909	ArgumentList	kv		4359839	1					
ANR	4359910	Argument	kv		4359839	0					
ANR	4359911	Identifier	kv		4359839	0					
ANR	4359912	IfStatement	if ( ! k || ! * k )		4359839	1					
ANR	4359913	Condition	! k || ! * k	438:6:12762:12770	4359839	0	True				
ANR	4359914	OrExpression	! k || ! * k		4359839	0		||			
ANR	4359915	UnaryOperationExpression	! k		4359839	0					
ANR	4359916	UnaryOperator	!		4359839	0					
ANR	4359917	Identifier	k		4359839	1					
ANR	4359918	UnaryOperationExpression	! * k		4359839	1					
ANR	4359919	UnaryOperator	!		4359839	0					
ANR	4359920	UnaryOperationExpression	* k		4359839	1					
ANR	4359921	UnaryOperator	*		4359839	0					
ANR	4359922	Identifier	k		4359839	1					
ANR	4359923	CompoundStatement		13:17:233:233	4359839	1					
ANR	4359924	ContinueStatement	continue ;	439:3:12778:12786	4359839	0	True				
ANR	4359925	ExpressionStatement	pj_o ( pj )	442:2:12795:12804	4359839	2	True				
ANR	4359926	CallExpression	pj_o ( pj )		4359839	0					
ANR	4359927	Callee	pj_o		4359839	0					
ANR	4359928	Identifier	pj_o		4359839	0					
ANR	4359929	ArgumentList	pj		4359839	1					
ANR	4359930	Argument	pj		4359839	0					
ANR	4359931	Identifier	pj		4359839	0					
ANR	4359932	IdentifierDeclStatement	"char * sizecmd = r_str_newf ( ""%s.%s.!size"" , sdbkv_value ( kv ) , k ) ;"	443:2:12813:12876	4359839	3	True				
ANR	4359933	IdentifierDecl	"* sizecmd = r_str_newf ( ""%s.%s.!size"" , sdbkv_value ( kv ) , k )"		4359839	0					
ANR	4359934	IdentifierDeclType	char *		4359839	0					
ANR	4359935	Identifier	sizecmd		4359839	1					
ANR	4359936	AssignmentExpression	"* sizecmd = r_str_newf ( ""%s.%s.!size"" , sdbkv_value ( kv ) , k )"		4359839	2		=			
ANR	4359937	Identifier	sizecmd		4359839	0					
ANR	4359938	CallExpression	"r_str_newf ( ""%s.%s.!size"" , sdbkv_value ( kv ) , k )"		4359839	1					
ANR	4359939	Callee	r_str_newf		4359839	0					
ANR	4359940	Identifier	r_str_newf		4359839	0					
ANR	4359941	ArgumentList	"""%s.%s.!size"""		4359839	1					
ANR	4359942	Argument	"""%s.%s.!size"""		4359839	0					
ANR	4359943	PrimaryExpression	"""%s.%s.!size"""		4359839	0					
ANR	4359944	Argument	sdbkv_value ( kv )		4359839	1					
ANR	4359945	CallExpression	sdbkv_value ( kv )		4359839	0					
ANR	4359946	Callee	sdbkv_value		4359839	0					
ANR	4359947	Identifier	sdbkv_value		4359839	0					
ANR	4359948	ArgumentList	kv		4359839	1					
ANR	4359949	Argument	kv		4359839	0					
ANR	4359950	Identifier	kv		4359839	0					
ANR	4359951	Argument	k		4359839	2					
ANR	4359952	Identifier	k		4359839	0					
ANR	4359953	IfStatement	if ( ! sizecmd )		4359839	4					
ANR	4359954	Condition	! sizecmd	444:6:12884:12891	4359839	0	True				
ANR	4359955	UnaryOperationExpression	! sizecmd		4359839	0					
ANR	4359956	UnaryOperator	!		4359839	0					
ANR	4359957	Identifier	sizecmd		4359839	1					
ANR	4359958	CompoundStatement		19:16:354:354	4359839	1					
ANR	4359959	BreakStatement	break ;	445:3:12899:12904	4359839	0	True				
ANR	4359960	IdentifierDeclStatement	"char * size_s = sdb_querys ( TDB , NULL , - 1 , sizecmd ) ;"	447:2:12912:12962	4359839	5	True				
ANR	4359961	IdentifierDecl	"* size_s = sdb_querys ( TDB , NULL , - 1 , sizecmd )"		4359839	0					
ANR	4359962	IdentifierDeclType	char *		4359839	0					
ANR	4359963	Identifier	size_s		4359839	1					
ANR	4359964	AssignmentExpression	"* size_s = sdb_querys ( TDB , NULL , - 1 , sizecmd )"		4359839	2		=			
ANR	4359965	Identifier	size_s		4359839	0					
ANR	4359966	CallExpression	"sdb_querys ( TDB , NULL , - 1 , sizecmd )"		4359839	1					
ANR	4359967	Callee	sdb_querys		4359839	0					
ANR	4359968	Identifier	sdb_querys		4359839	0					
ANR	4359969	ArgumentList	TDB		4359839	1					
ANR	4359970	Argument	TDB		4359839	0					
ANR	4359971	Identifier	TDB		4359839	0					
ANR	4359972	Argument	NULL		4359839	1					
ANR	4359973	Identifier	NULL		4359839	0					
ANR	4359974	Argument	- 1		4359839	2					
ANR	4359975	UnaryOperationExpression	- 1		4359839	0					
ANR	4359976	UnaryOperator	-		4359839	0					
ANR	4359977	PrimaryExpression	1		4359839	1					
ANR	4359978	Argument	sizecmd		4359839	3					
ANR	4359979	Identifier	sizecmd		4359839	0					
ANR	4359980	ExpressionStatement	"pj_ks ( pj , ""type"" , k )"	448:2:12966:12987	4359839	6	True				
ANR	4359981	CallExpression	"pj_ks ( pj , ""type"" , k )"		4359839	0					
ANR	4359982	Callee	pj_ks		4359839	0					
ANR	4359983	Identifier	pj_ks		4359839	0					
ANR	4359984	ArgumentList	pj		4359839	1					
ANR	4359985	Argument	pj		4359839	0					
ANR	4359986	Identifier	pj		4359839	0					
ANR	4359987	Argument	"""type"""		4359839	1					
ANR	4359988	PrimaryExpression	"""type"""		4359839	0					
ANR	4359989	Argument	k		4359839	2					
ANR	4359990	Identifier	k		4359839	0					
ANR	4359991	ExpressionStatement	"pj_ki ( pj , ""size"" , size_s ? atoi ( size_s ) : 0 )"	449:2:13030:13076	4359839	7	True				
ANR	4359992	CallExpression	"pj_ki ( pj , ""size"" , size_s ? atoi ( size_s ) : 0 )"		4359839	0					
ANR	4359993	Callee	pj_ki		4359839	0					
ANR	4359994	Identifier	pj_ki		4359839	0					
ANR	4359995	ArgumentList	pj		4359839	1					
ANR	4359996	Argument	pj		4359839	0					
ANR	4359997	Identifier	pj		4359839	0					
ANR	4359998	Argument	"""size"""		4359839	1					
ANR	4359999	PrimaryExpression	"""size"""		4359839	0					
ANR	4360000	Argument	size_s ? atoi ( size_s ) : 0		4359839	2					
ANR	4360001	ConditionalExpression	size_s ? atoi ( size_s ) : 0		4359839	0					
ANR	4360002	Condition	size_s		4359839	0					
ANR	4360003	Identifier	size_s		4359839	0					
ANR	4360004	CallExpression	atoi ( size_s )		4359839	1					
ANR	4360005	Callee	atoi		4359839	0					
ANR	4360006	Identifier	atoi		4359839	0					
ANR	4360007	ArgumentList	size_s		4359839	1					
ANR	4360008	Argument	size_s		4359839	0					
ANR	4360009	Identifier	size_s		4359839	0					
ANR	4360010	PrimaryExpression	0		4359839	2					
ANR	4360011	ExpressionStatement	pj_end ( pj )	450:2:13116:13127	4359839	8	True				
ANR	4360012	CallExpression	pj_end ( pj )		4359839	0					
ANR	4360013	Callee	pj_end		4359839	0					
ANR	4360014	Identifier	pj_end		4359839	0					
ANR	4360015	ArgumentList	pj		4359839	1					
ANR	4360016	Argument	pj		4359839	0					
ANR	4360017	Identifier	pj		4359839	0					
ANR	4360018	ExpressionStatement	free ( sizecmd )	452:2:13137:13151	4359839	9	True				
ANR	4360019	CallExpression	free ( sizecmd )		4359839	0					
ANR	4360020	Callee	free		4359839	0					
ANR	4360021	Identifier	free		4359839	0					
ANR	4360022	ArgumentList	sizecmd		4359839	1					
ANR	4360023	Argument	sizecmd		4359839	0					
ANR	4360024	Identifier	sizecmd		4359839	0					
ANR	4360025	ExpressionStatement	free ( size_s )	453:2:13155:13168	4359839	10	True				
ANR	4360026	CallExpression	free ( size_s )		4359839	0					
ANR	4360027	Callee	free		4359839	0					
ANR	4360028	Identifier	free		4359839	0					
ANR	4360029	ArgumentList	size_s		4359839	1					
ANR	4360030	Argument	size_s		4359839	0					
ANR	4360031	Identifier	size_s		4359839	0					
ANR	4360032	ExpressionStatement	pj_end ( pj )	455:1:13174:13185	4359839	15	True				
ANR	4360033	CallExpression	pj_end ( pj )		4359839	0					
ANR	4360034	Callee	pj_end		4359839	0					
ANR	4360035	Identifier	pj_end		4359839	0					
ANR	4360036	ArgumentList	pj		4359839	1					
ANR	4360037	Argument	pj		4359839	0					
ANR	4360038	Identifier	pj		4359839	0					
ANR	4360039	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	457:1:13194:13225	4359839	16	True				
ANR	4360040	CallExpression	r_cons_println ( pj_string ( pj ) )		4359839	0					
ANR	4360041	Callee	r_cons_println		4359839	0					
ANR	4360042	Identifier	r_cons_println		4359839	0					
ANR	4360043	ArgumentList	pj_string ( pj )		4359839	1					
ANR	4360044	Argument	pj_string ( pj )		4359839	0					
ANR	4360045	CallExpression	pj_string ( pj )		4359839	0					
ANR	4360046	Callee	pj_string		4359839	0					
ANR	4360047	Identifier	pj_string		4359839	0					
ANR	4360048	ArgumentList	pj		4359839	1					
ANR	4360049	Argument	pj		4359839	0					
ANR	4360050	Identifier	pj		4359839	0					
ANR	4360051	ExpressionStatement	pj_free ( pj )	458:1:13228:13240	4359839	17	True				
ANR	4360052	CallExpression	pj_free ( pj )		4359839	0					
ANR	4360053	Callee	pj_free		4359839	0					
ANR	4360054	Identifier	pj_free		4359839	0					
ANR	4360055	ArgumentList	pj		4359839	1					
ANR	4360056	Argument	pj		4359839	0					
ANR	4360057	Identifier	pj		4359839	0					
ANR	4360058	ExpressionStatement	ls_free ( l )	459:1:13243:13254	4359839	18	True				
ANR	4360059	CallExpression	ls_free ( l )		4359839	0					
ANR	4360060	Callee	ls_free		4359839	0					
ANR	4360061	Identifier	ls_free		4359839	0					
ANR	4360062	ArgumentList	l		4359839	1					
ANR	4360063	Argument	l		4359839	0					
ANR	4360064	Identifier	l		4359839	0					
ANR	4360065	ReturnStatement	return 1 ;	460:1:13257:13265	4359839	19	True				
ANR	4360066	PrimaryExpression	1		4359839	0					
ANR	4360067	ReturnType	static int		4359839	1					
ANR	4360068	Identifier	print_struct_union_list_json		4359839	2					
ANR	4360069	ParameterList	"Sdb * TDB , SdbForeachCallback filter"		4359839	3					
ANR	4360070	Parameter	Sdb * TDB	426:40:12502:12509	4359839	0	True				
ANR	4360071	ParameterType	Sdb *		4359839	0					
ANR	4360072	Identifier	TDB		4359839	1					
ANR	4360073	Parameter	SdbForeachCallback filter	426:50:12512:12536	4359839	1	True				
ANR	4360074	ParameterType	SdbForeachCallback		4359839	0					
ANR	4360075	Identifier	filter		4359839	1					
ANR	4360076	CFGEntryNode	ENTRY		4359839		True				
ANR	4360077	CFGExitNode	EXIT		4359839		True				
ANR	4360078	CFGErrorNode	ERROR		4359839		True				
ANR	4360079	Symbol	atoi		4359839						
ANR	4360080	Symbol	NULL		4359839						
ANR	4360081	Symbol	sdbkv_key		4359839						
ANR	4360082	Symbol	pj_string		4359839						
ANR	4360083	Symbol	size_s		4359839						
ANR	4360084	Symbol	sdb_foreach_list_filter		4359839						
ANR	4360085	Symbol	sdb_querys		4359839						
ANR	4360086	Symbol	it		4359839						
ANR	4360087	Symbol	kv		4359839						
ANR	4360088	Symbol	k		4359839						
ANR	4360089	Symbol	sdbkv_value		4359839						
ANR	4360090	Symbol	r_str_newf		4359839						
ANR	4360091	Symbol	l		4359839						
ANR	4360092	Symbol	filter		4359839						
ANR	4360093	Symbol	TDB		4359839						
ANR	4360094	Symbol	* k		4359839						
ANR	4360095	Symbol	true		4359839						
ANR	4360096	Symbol	sizecmd		4359839						
ANR	4360097	Symbol	pj_new		4359839						
ANR	4360098	Symbol	pj		4359839						
ANR	4360099	Function	print_struct_union_in_c_format	463:0:13270:14615							
ANR	4360100	FunctionDef	"print_struct_union_in_c_format (Sdb * TDB , SdbForeachCallback filter , const char * arg , bool multiline)"		4360099	0					
ANR	4360101	CompoundStatement		463:113:13383:14615	4360099	0					
ANR	4360102	IdentifierDeclStatement	char * name = NULL ;	464:1:13386:13403	4360099	0	True				
ANR	4360103	IdentifierDecl	* name = NULL		4360099	0					
ANR	4360104	IdentifierDeclType	char *		4360099	0					
ANR	4360105	Identifier	name		4360099	1					
ANR	4360106	AssignmentExpression	* name = NULL		4360099	2		=			
ANR	4360107	Identifier	NULL		4360099	0					
ANR	4360108	Identifier	NULL		4360099	1					
ANR	4360109	IdentifierDeclStatement	SdbKv * kv ;	465:1:13406:13415	4360099	1	True				
ANR	4360110	IdentifierDecl	* kv		4360099	0					
ANR	4360111	IdentifierDeclType	SdbKv *		4360099	0					
ANR	4360112	Identifier	kv		4360099	1					
ANR	4360113	IdentifierDeclStatement	SdbListIter * iter ;	466:1:13418:13435	4360099	2	True				
ANR	4360114	IdentifierDecl	* iter		4360099	0					
ANR	4360115	IdentifierDeclType	SdbListIter *		4360099	0					
ANR	4360116	Identifier	iter		4360099	1					
ANR	4360117	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list_filter ( TDB , filter , true ) ;"	467:1:13438:13494	4360099	3	True				
ANR	4360118	IdentifierDecl	"* l = sdb_foreach_list_filter ( TDB , filter , true )"		4360099	0					
ANR	4360119	IdentifierDeclType	SdbList *		4360099	0					
ANR	4360120	Identifier	l		4360099	1					
ANR	4360121	AssignmentExpression	"* l = sdb_foreach_list_filter ( TDB , filter , true )"		4360099	2		=			
ANR	4360122	Identifier	l		4360099	0					
ANR	4360123	CallExpression	"sdb_foreach_list_filter ( TDB , filter , true )"		4360099	1					
ANR	4360124	Callee	sdb_foreach_list_filter		4360099	0					
ANR	4360125	Identifier	sdb_foreach_list_filter		4360099	0					
ANR	4360126	ArgumentList	TDB		4360099	1					
ANR	4360127	Argument	TDB		4360099	0					
ANR	4360128	Identifier	TDB		4360099	0					
ANR	4360129	Argument	filter		4360099	1					
ANR	4360130	Identifier	filter		4360099	0					
ANR	4360131	Argument	true		4360099	2					
ANR	4360132	Identifier	true		4360099	0					
ANR	4360133	IdentifierDeclStatement	"const char * space = """" ;"	468:1:13497:13519	4360099	4	True				
ANR	4360134	IdentifierDecl	"* space = """""		4360099	0					
ANR	4360135	IdentifierDeclType	const char *		4360099	0					
ANR	4360136	Identifier	space		4360099	1					
ANR	4360137	AssignmentExpression	"* space = """""		4360099	2		=			
ANR	4360138	Identifier	space		4360099	0					
ANR	4360139	PrimaryExpression	""""""		4360099	1					
ANR	4360140	IdentifierDeclStatement	bool match = false ;	469:1:13522:13540	4360099	5	True				
ANR	4360141	IdentifierDecl	match = false		4360099	0					
ANR	4360142	IdentifierDeclType	bool		4360099	0					
ANR	4360143	Identifier	match		4360099	1					
ANR	4360144	AssignmentExpression	match = false		4360099	2		=			
ANR	4360145	Identifier	false		4360099	0					
ANR	4360146	Identifier	false		4360099	1					
ANR	4360147	Statement	ls_foreach	471:1:13544:13553	4360099	6	True				
ANR	4360148	Statement	(	471:12:13555:13555	4360099	7	True				
ANR	4360149	Statement	l	471:13:13556:13556	4360099	8	True				
ANR	4360150	Statement	","	471:14:13557:13557	4360099	9	True				
ANR	4360151	Statement	iter	471:16:13559:13562	4360099	10	True				
ANR	4360152	Statement	","	471:20:13563:13563	4360099	11	True				
ANR	4360153	Statement	kv	471:22:13565:13566	4360099	12	True				
ANR	4360154	Statement	)	471:24:13567:13567	4360099	13	True				
ANR	4360155	CompoundStatement		24:2:504:564	4360099	14					
ANR	4360156	IfStatement	"if ( name && ! strcmp ( sdbkv_value ( kv ) , name ) )"		4360099	0					
ANR	4360157	Condition	"name && ! strcmp ( sdbkv_value ( kv ) , name )"	472:6:13577:13616	4360099	0	True				
ANR	4360158	AndExpression	"name && ! strcmp ( sdbkv_value ( kv ) , name )"		4360099	0		&&			
ANR	4360159	Identifier	name		4360099	0					
ANR	4360160	UnaryOperationExpression	"! strcmp ( sdbkv_value ( kv ) , name )"		4360099	1					
ANR	4360161	UnaryOperator	!		4360099	0					
ANR	4360162	CallExpression	"strcmp ( sdbkv_value ( kv ) , name )"		4360099	1					
ANR	4360163	Callee	strcmp		4360099	0					
ANR	4360164	Identifier	strcmp		4360099	0					
ANR	4360165	ArgumentList	sdbkv_value ( kv )		4360099	1					
ANR	4360166	Argument	sdbkv_value ( kv )		4360099	0					
ANR	4360167	CallExpression	sdbkv_value ( kv )		4360099	0					
ANR	4360168	Callee	sdbkv_value		4360099	0					
ANR	4360169	Identifier	sdbkv_value		4360099	0					
ANR	4360170	ArgumentList	kv		4360099	1					
ANR	4360171	Argument	kv		4360099	0					
ANR	4360172	Identifier	kv		4360099	0					
ANR	4360173	Argument	name		4360099	1					
ANR	4360174	Identifier	name		4360099	0					
ANR	4360175	CompoundStatement		10:48:235:235	4360099	1					
ANR	4360176	ContinueStatement	continue ;	473:3:13624:13632	4360099	0	True				
ANR	4360177	ExpressionStatement	free ( name )	475:2:13640:13651	4360099	1	True				
ANR	4360178	CallExpression	free ( name )		4360099	0					
ANR	4360179	Callee	free		4360099	0					
ANR	4360180	Identifier	free		4360099	0					
ANR	4360181	ArgumentList	name		4360099	1					
ANR	4360182	Argument	name		4360099	0					
ANR	4360183	Identifier	name		4360099	0					
ANR	4360184	IdentifierDeclStatement	int n ;	476:2:13655:13660	4360099	2	True				
ANR	4360185	IdentifierDecl	n		4360099	0					
ANR	4360186	IdentifierDeclType	int		4360099	0					
ANR	4360187	Identifier	n		4360099	1					
ANR	4360188	ExpressionStatement	name = strdup ( sdbkv_key ( kv ) )	477:2:13664:13694	4360099	3	True				
ANR	4360189	AssignmentExpression	name = strdup ( sdbkv_key ( kv ) )		4360099	0		=			
ANR	4360190	Identifier	name		4360099	0					
ANR	4360191	CallExpression	strdup ( sdbkv_key ( kv ) )		4360099	1					
ANR	4360192	Callee	strdup		4360099	0					
ANR	4360193	Identifier	strdup		4360099	0					
ANR	4360194	ArgumentList	sdbkv_key ( kv )		4360099	1					
ANR	4360195	Argument	sdbkv_key ( kv )		4360099	0					
ANR	4360196	CallExpression	sdbkv_key ( kv )		4360099	0					
ANR	4360197	Callee	sdbkv_key		4360099	0					
ANR	4360198	Identifier	sdbkv_key		4360099	0					
ANR	4360199	ArgumentList	kv		4360099	1					
ANR	4360200	Argument	kv		4360099	0					
ANR	4360201	Identifier	kv		4360099	0					
ANR	4360202	IfStatement	if ( name && ( arg && * arg ) )		4360099	4					
ANR	4360203	Condition	name && ( arg && * arg )	478:6:13702:13722	4360099	0	True				
ANR	4360204	AndExpression	name && ( arg && * arg )		4360099	0		&&			
ANR	4360205	Identifier	name		4360099	0					
ANR	4360206	AndExpression	arg && * arg		4360099	1		&&			
ANR	4360207	Identifier	arg		4360099	0					
ANR	4360208	UnaryOperationExpression	* arg		4360099	1					
ANR	4360209	UnaryOperator	*		4360099	0					
ANR	4360210	Identifier	arg		4360099	1					
ANR	4360211	CompoundStatement		16:29:341:341	4360099	1					
ANR	4360212	IfStatement	"if ( ! strcmp ( arg , name ) )"		4360099	0					
ANR	4360213	Condition	"! strcmp ( arg , name )"	479:7:13734:13752	4360099	0	True				
ANR	4360214	UnaryOperationExpression	"! strcmp ( arg , name )"		4360099	0					
ANR	4360215	UnaryOperator	!		4360099	0					
ANR	4360216	CallExpression	"strcmp ( arg , name )"		4360099	1					
ANR	4360217	Callee	strcmp		4360099	0					
ANR	4360218	Identifier	strcmp		4360099	0					
ANR	4360219	ArgumentList	arg		4360099	1					
ANR	4360220	Argument	arg		4360099	0					
ANR	4360221	Identifier	arg		4360099	0					
ANR	4360222	Argument	name		4360099	1					
ANR	4360223	Identifier	name		4360099	0					
ANR	4360224	CompoundStatement		17:28:371:371	4360099	1					
ANR	4360225	ExpressionStatement	match = true	480:4:13761:13773	4360099	0	True				
ANR	4360226	AssignmentExpression	match = true		4360099	0		=			
ANR	4360227	Identifier	match		4360099	0					
ANR	4360228	Identifier	true		4360099	1					
ANR	4360229	ElseStatement	else		4360099	0					
ANR	4360230	CompoundStatement		19:10:401:401	4360099	0					
ANR	4360231	ContinueStatement	continue ;	482:4:13791:13799	4360099	0	True				
ANR	4360232	ExpressionStatement	"r_cons_printf ( ""%s %s {%s"" , sdbkv_value ( kv ) , name , multiline ? ""\\n"" : """" )"	485:2:13812:13884	4360099	5	True				
ANR	4360233	CallExpression	"r_cons_printf ( ""%s %s {%s"" , sdbkv_value ( kv ) , name , multiline ? ""\\n"" : """" )"		4360099	0					
ANR	4360234	Callee	r_cons_printf		4360099	0					
ANR	4360235	Identifier	r_cons_printf		4360099	0					
ANR	4360236	ArgumentList	"""%s %s {%s"""		4360099	1					
ANR	4360237	Argument	"""%s %s {%s"""		4360099	0					
ANR	4360238	PrimaryExpression	"""%s %s {%s"""		4360099	0					
ANR	4360239	Argument	sdbkv_value ( kv )		4360099	1					
ANR	4360240	CallExpression	sdbkv_value ( kv )		4360099	0					
ANR	4360241	Callee	sdbkv_value		4360099	0					
ANR	4360242	Identifier	sdbkv_value		4360099	0					
ANR	4360243	ArgumentList	kv		4360099	1					
ANR	4360244	Argument	kv		4360099	0					
ANR	4360245	Identifier	kv		4360099	0					
ANR	4360246	Argument	name		4360099	2					
ANR	4360247	Identifier	name		4360099	0					
ANR	4360248	Argument	"multiline ? ""\\n"" : """""		4360099	3					
ANR	4360249	ConditionalExpression	"multiline ? ""\\n"" : """""		4360099	0					
ANR	4360250	Condition	multiline		4360099	0					
ANR	4360251	Identifier	multiline		4360099	0					
ANR	4360252	PrimaryExpression	"""\\n"""		4360099	1					
ANR	4360253	PrimaryExpression	""""""		4360099	2					
ANR	4360254	IdentifierDeclStatement	"char * p , * var = r_str_newf ( ""%s.%s"" , sdbkv_value ( kv ) , name ) ;"	486:2:13888:13948	4360099	6	True				
ANR	4360255	IdentifierDecl	* p		4360099	0					
ANR	4360256	IdentifierDeclType	char *		4360099	0					
ANR	4360257	Identifier	p		4360099	1					
ANR	4360258	IdentifierDecl	"* var = r_str_newf ( ""%s.%s"" , sdbkv_value ( kv ) , name )"		4360099	1					
ANR	4360259	IdentifierDeclType	char *		4360099	0					
ANR	4360260	Identifier	var		4360099	1					
ANR	4360261	AssignmentExpression	"* var = r_str_newf ( ""%s.%s"" , sdbkv_value ( kv ) , name )"		4360099	2		=			
ANR	4360262	Identifier	var		4360099	0					
ANR	4360263	CallExpression	"r_str_newf ( ""%s.%s"" , sdbkv_value ( kv ) , name )"		4360099	1					
ANR	4360264	Callee	r_str_newf		4360099	0					
ANR	4360265	Identifier	r_str_newf		4360099	0					
ANR	4360266	ArgumentList	"""%s.%s"""		4360099	1					
ANR	4360267	Argument	"""%s.%s"""		4360099	0					
ANR	4360268	PrimaryExpression	"""%s.%s"""		4360099	0					
ANR	4360269	Argument	sdbkv_value ( kv )		4360099	1					
ANR	4360270	CallExpression	sdbkv_value ( kv )		4360099	0					
ANR	4360271	Callee	sdbkv_value		4360099	0					
ANR	4360272	Identifier	sdbkv_value		4360099	0					
ANR	4360273	ArgumentList	kv		4360099	1					
ANR	4360274	Argument	kv		4360099	0					
ANR	4360275	Identifier	kv		4360099	0					
ANR	4360276	Argument	name		4360099	2					
ANR	4360277	Identifier	name		4360099	0					
ANR	4360278	ForStatement	"for ( n = 0 ; ( p = sdb_array_get ( TDB , var , n , NULL ) ) ; n ++ )"		4360099	7					
ANR	4360279	ForInit	n = 0 ;	487:7:13957:13962	4360099	0	True				
ANR	4360280	AssignmentExpression	n = 0		4360099	0		=			
ANR	4360281	Identifier	n		4360099	0					
ANR	4360282	PrimaryExpression	0		4360099	1					
ANR	4360283	Condition	"p = sdb_array_get ( TDB , var , n , NULL )"	487:14:13964:14002	4360099	1	True				
ANR	4360284	AssignmentExpression	"p = sdb_array_get ( TDB , var , n , NULL )"		4360099	0		=			
ANR	4360285	Identifier	p		4360099	0					
ANR	4360286	CallExpression	"sdb_array_get ( TDB , var , n , NULL )"		4360099	1					
ANR	4360287	Callee	sdb_array_get		4360099	0					
ANR	4360288	Identifier	sdb_array_get		4360099	0					
ANR	4360289	ArgumentList	TDB		4360099	1					
ANR	4360290	Argument	TDB		4360099	0					
ANR	4360291	Identifier	TDB		4360099	0					
ANR	4360292	Argument	var		4360099	1					
ANR	4360293	Identifier	var		4360099	0					
ANR	4360294	Argument	n		4360099	2					
ANR	4360295	Identifier	n		4360099	0					
ANR	4360296	Argument	NULL		4360099	3					
ANR	4360297	Identifier	NULL		4360099	0					
ANR	4360298	PostIncDecOperationExpression	n ++	487:55:14005:14007	4360099	2	True				
ANR	4360299	Identifier	n		4360099	0					
ANR	4360300	IncDec	++		4360099	1					
ANR	4360301	CompoundStatement		26:3:631:672	4360099	3					
ANR	4360302	IdentifierDeclStatement	"char * var2 = r_str_newf ( ""%s.%s"" , var , p ) ;"	488:3:14015:14056	4360099	0	True				
ANR	4360303	IdentifierDecl	"* var2 = r_str_newf ( ""%s.%s"" , var , p )"		4360099	0					
ANR	4360304	IdentifierDeclType	char *		4360099	0					
ANR	4360305	Identifier	var2		4360099	1					
ANR	4360306	AssignmentExpression	"* var2 = r_str_newf ( ""%s.%s"" , var , p )"		4360099	2		=			
ANR	4360307	Identifier	var2		4360099	0					
ANR	4360308	CallExpression	"r_str_newf ( ""%s.%s"" , var , p )"		4360099	1					
ANR	4360309	Callee	r_str_newf		4360099	0					
ANR	4360310	Identifier	r_str_newf		4360099	0					
ANR	4360311	ArgumentList	"""%s.%s"""		4360099	1					
ANR	4360312	Argument	"""%s.%s"""		4360099	0					
ANR	4360313	PrimaryExpression	"""%s.%s"""		4360099	0					
ANR	4360314	Argument	var		4360099	1					
ANR	4360315	Identifier	var		4360099	0					
ANR	4360316	Argument	p		4360099	2					
ANR	4360317	Identifier	p		4360099	0					
ANR	4360318	IfStatement	if ( var2 )		4360099	1					
ANR	4360319	Condition	var2	489:7:14065:14068	4360099	0	True				
ANR	4360320	Identifier	var2		4360099	0					
ANR	4360321	CompoundStatement		28:4:693:739	4360099	1					
ANR	4360322	IdentifierDeclStatement	"char * val = sdb_array_get ( TDB , var2 , 0 , NULL ) ;"	490:4:14077:14123	4360099	0	True				
ANR	4360323	IdentifierDecl	"* val = sdb_array_get ( TDB , var2 , 0 , NULL )"		4360099	0					
ANR	4360324	IdentifierDeclType	char *		4360099	0					
ANR	4360325	Identifier	val		4360099	1					
ANR	4360326	AssignmentExpression	"* val = sdb_array_get ( TDB , var2 , 0 , NULL )"		4360099	2		=			
ANR	4360327	Identifier	val		4360099	0					
ANR	4360328	CallExpression	"sdb_array_get ( TDB , var2 , 0 , NULL )"		4360099	1					
ANR	4360329	Callee	sdb_array_get		4360099	0					
ANR	4360330	Identifier	sdb_array_get		4360099	0					
ANR	4360331	ArgumentList	TDB		4360099	1					
ANR	4360332	Argument	TDB		4360099	0					
ANR	4360333	Identifier	TDB		4360099	0					
ANR	4360334	Argument	var2		4360099	1					
ANR	4360335	Identifier	var2		4360099	0					
ANR	4360336	Argument	0		4360099	2					
ANR	4360337	PrimaryExpression	0		4360099	0					
ANR	4360338	Argument	NULL		4360099	3					
ANR	4360339	Identifier	NULL		4360099	0					
ANR	4360340	IfStatement	if ( val )		4360099	1					
ANR	4360341	Condition	val	491:8:14133:14135	4360099	0	True				
ANR	4360342	Identifier	val		4360099	0					
ANR	4360343	CompoundStatement		29:13:754:754	4360099	1					
ANR	4360344	IfStatement	if ( multiline )		4360099	0					
ANR	4360345	Condition	multiline	492:9:14149:14157	4360099	0	True				
ANR	4360346	Identifier	multiline		4360099	0					
ANR	4360347	CompoundStatement		30:20:776:776	4360099	1					
ANR	4360348	ExpressionStatement	"r_cons_printf ( ""\\t%s"" , val )"	493:6:14168:14195	4360099	0	True				
ANR	4360349	CallExpression	"r_cons_printf ( ""\\t%s"" , val )"		4360099	0					
ANR	4360350	Callee	r_cons_printf		4360099	0					
ANR	4360351	Identifier	r_cons_printf		4360099	0					
ANR	4360352	ArgumentList	"""\\t%s"""		4360099	1					
ANR	4360353	Argument	"""\\t%s"""		4360099	0					
ANR	4360354	PrimaryExpression	"""\\t%s"""		4360099	0					
ANR	4360355	Argument	val		4360099	1					
ANR	4360356	Identifier	val		4360099	0					
ANR	4360357	IfStatement	if ( p && p [ 0 ] != '\\0' )		4360099	1					
ANR	4360358	Condition	p && p [ 0 ] != '\\0'	494:10:14207:14223	4360099	0	True				
ANR	4360359	AndExpression	p && p [ 0 ] != '\\0'		4360099	0		&&			
ANR	4360360	Identifier	p		4360099	0					
ANR	4360361	EqualityExpression	p [ 0 ] != '\\0'		4360099	1		!=			
ANR	4360362	ArrayIndexing	p [ 0 ]		4360099	0					
ANR	4360363	Identifier	p		4360099	0					
ANR	4360364	PrimaryExpression	0		4360099	1					
ANR	4360365	PrimaryExpression	'\\0'		4360099	1					
ANR	4360366	CompoundStatement		32:29:842:842	4360099	1					
ANR	4360367	ExpressionStatement	"r_cons_printf ( ""%s%s"" , strstr ( val , "" *"" ) ? """" : "" "" , p )"	495:7:14235:14289	4360099	0	True				
ANR	4360368	CallExpression	"r_cons_printf ( ""%s%s"" , strstr ( val , "" *"" ) ? """" : "" "" , p )"		4360099	0					
ANR	4360369	Callee	r_cons_printf		4360099	0					
ANR	4360370	Identifier	r_cons_printf		4360099	0					
ANR	4360371	ArgumentList	"""%s%s"""		4360099	1					
ANR	4360372	Argument	"""%s%s"""		4360099	0					
ANR	4360373	PrimaryExpression	"""%s%s"""		4360099	0					
ANR	4360374	Argument	"strstr ( val , "" *"" ) ? """" : "" """		4360099	1					
ANR	4360375	ConditionalExpression	"strstr ( val , "" *"" ) ? """" : "" """		4360099	0					
ANR	4360376	Condition	"strstr ( val , "" *"" )"		4360099	0					
ANR	4360377	CallExpression	"strstr ( val , "" *"" )"		4360099	0					
ANR	4360378	Callee	strstr		4360099	0					
ANR	4360379	Identifier	strstr		4360099	0					
ANR	4360380	ArgumentList	val		4360099	1					
ANR	4360381	Argument	val		4360099	0					
ANR	4360382	Identifier	val		4360099	0					
ANR	4360383	Argument	""" *"""		4360099	1					
ANR	4360384	PrimaryExpression	""" *"""		4360099	0					
ANR	4360385	PrimaryExpression	""""""		4360099	1					
ANR	4360386	PrimaryExpression	""" """		4360099	2					
ANR	4360387	Argument	p		4360099	2					
ANR	4360388	Identifier	p		4360099	0					
ANR	4360389	ElseStatement	else		4360099	0					
ANR	4360390	CompoundStatement		35:12:927:927	4360099	0					
ANR	4360391	ExpressionStatement	"r_cons_printf ( ""%s%s %s;"" , space , val , p )"	498:6:14319:14360	4360099	0	True				
ANR	4360392	CallExpression	"r_cons_printf ( ""%s%s %s;"" , space , val , p )"		4360099	0					
ANR	4360393	Callee	r_cons_printf		4360099	0					
ANR	4360394	Identifier	r_cons_printf		4360099	0					
ANR	4360395	ArgumentList	"""%s%s %s;"""		4360099	1					
ANR	4360396	Argument	"""%s%s %s;"""		4360099	0					
ANR	4360397	PrimaryExpression	"""%s%s %s;"""		4360099	0					
ANR	4360398	Argument	space		4360099	1					
ANR	4360399	Identifier	space		4360099	0					
ANR	4360400	Argument	val		4360099	2					
ANR	4360401	Identifier	val		4360099	0					
ANR	4360402	Argument	p		4360099	3					
ANR	4360403	Identifier	p		4360099	0					
ANR	4360404	ExpressionStatement	"space = "" """	499:6:14368:14379	4360099	1	True				
ANR	4360405	AssignmentExpression	"space = "" """		4360099	0		=			
ANR	4360406	Identifier	space		4360099	0					
ANR	4360407	PrimaryExpression	""" """		4360099	1					
ANR	4360408	IfStatement	if ( multiline )		4360099	2					
ANR	4360409	Condition	multiline	502:8:14402:14410	4360099	0	True				
ANR	4360410	Identifier	multiline		4360099	0					
ANR	4360411	CompoundStatement		40:19:1029:1029	4360099	1					
ANR	4360412	ExpressionStatement	"r_cons_println ( "";"" )"	503:5:14420:14440	4360099	0	True				
ANR	4360413	CallExpression	"r_cons_println ( "";"" )"		4360099	0					
ANR	4360414	Callee	r_cons_println		4360099	0					
ANR	4360415	Identifier	r_cons_println		4360099	0					
ANR	4360416	ArgumentList	""";"""		4360099	1					
ANR	4360417	Argument	""";"""		4360099	0					
ANR	4360418	PrimaryExpression	""";"""		4360099	0					
ANR	4360419	ExpressionStatement	free ( val )	505:4:14452:14462	4360099	3	True				
ANR	4360420	CallExpression	free ( val )		4360099	0					
ANR	4360421	Callee	free		4360099	0					
ANR	4360422	Identifier	free		4360099	0					
ANR	4360423	ArgumentList	val		4360099	1					
ANR	4360424	Argument	val		4360099	0					
ANR	4360425	Identifier	val		4360099	0					
ANR	4360426	ExpressionStatement	free ( var2 )	507:3:14472:14483	4360099	2	True				
ANR	4360427	CallExpression	free ( var2 )		4360099	0					
ANR	4360428	Callee	free		4360099	0					
ANR	4360429	Identifier	free		4360099	0					
ANR	4360430	ArgumentList	var2		4360099	1					
ANR	4360431	Argument	var2		4360099	0					
ANR	4360432	Identifier	var2		4360099	0					
ANR	4360433	ExpressionStatement	free ( p )	508:3:14488:14496	4360099	3	True				
ANR	4360434	CallExpression	free ( p )		4360099	0					
ANR	4360435	Callee	free		4360099	0					
ANR	4360436	Identifier	free		4360099	0					
ANR	4360437	ArgumentList	p		4360099	1					
ANR	4360438	Argument	p		4360099	0					
ANR	4360439	Identifier	p		4360099	0					
ANR	4360440	ExpressionStatement	free ( var )	510:2:14504:14514	4360099	8	True				
ANR	4360441	CallExpression	free ( var )		4360099	0					
ANR	4360442	Callee	free		4360099	0					
ANR	4360443	Identifier	free		4360099	0					
ANR	4360444	ArgumentList	var		4360099	1					
ANR	4360445	Argument	var		4360099	0					
ANR	4360446	Identifier	var		4360099	0					
ANR	4360447	ExpressionStatement	"r_cons_println ( ""};"" )"	511:2:14518:14539	4360099	9	True				
ANR	4360448	CallExpression	"r_cons_println ( ""};"" )"		4360099	0					
ANR	4360449	Callee	r_cons_println		4360099	0					
ANR	4360450	Identifier	r_cons_println		4360099	0					
ANR	4360451	ArgumentList	"""};"""		4360099	1					
ANR	4360452	Argument	"""};"""		4360099	0					
ANR	4360453	PrimaryExpression	"""};"""		4360099	0					
ANR	4360454	ExpressionStatement	"space = """""	512:2:14543:14553	4360099	10	True				
ANR	4360455	AssignmentExpression	"space = """""		4360099	0		=			
ANR	4360456	Identifier	space		4360099	0					
ANR	4360457	PrimaryExpression	""""""		4360099	1					
ANR	4360458	IfStatement	if ( match )		4360099	11					
ANR	4360459	Condition	match	513:6:14561:14565	4360099	0	True				
ANR	4360460	Identifier	match		4360099	0					
ANR	4360461	CompoundStatement		51:13:1184:1184	4360099	1					
ANR	4360462	BreakStatement	break ;	514:3:14573:14578	4360099	0	True				
ANR	4360463	ExpressionStatement	free ( name )	517:1:14588:14599	4360099	15	True				
ANR	4360464	CallExpression	free ( name )		4360099	0					
ANR	4360465	Callee	free		4360099	0					
ANR	4360466	Identifier	free		4360099	0					
ANR	4360467	ArgumentList	name		4360099	1					
ANR	4360468	Argument	name		4360099	0					
ANR	4360469	Identifier	name		4360099	0					
ANR	4360470	ExpressionStatement	ls_free ( l )	518:1:14602:14613	4360099	16	True				
ANR	4360471	CallExpression	ls_free ( l )		4360099	0					
ANR	4360472	Callee	ls_free		4360099	0					
ANR	4360473	Identifier	ls_free		4360099	0					
ANR	4360474	ArgumentList	l		4360099	1					
ANR	4360475	Argument	l		4360099	0					
ANR	4360476	Identifier	l		4360099	0					
ANR	4360477	ReturnType	static void		4360099	1					
ANR	4360478	Identifier	print_struct_union_in_c_format		4360099	2					
ANR	4360479	ParameterList	"Sdb * TDB , SdbForeachCallback filter , const char * arg , bool multiline"		4360099	3					
ANR	4360480	Parameter	Sdb * TDB	463:43:13313:13320	4360099	0	True				
ANR	4360481	ParameterType	Sdb *		4360099	0					
ANR	4360482	Identifier	TDB		4360099	1					
ANR	4360483	Parameter	SdbForeachCallback filter	463:53:13323:13347	4360099	1	True				
ANR	4360484	ParameterType	SdbForeachCallback		4360099	0					
ANR	4360485	Identifier	filter		4360099	1					
ANR	4360486	Parameter	const char * arg	463:80:13350:13364	4360099	2	True				
ANR	4360487	ParameterType	const char *		4360099	0					
ANR	4360488	Identifier	arg		4360099	1					
ANR	4360489	Parameter	bool multiline	463:97:13367:13380	4360099	3	True				
ANR	4360490	ParameterType	bool		4360099	0					
ANR	4360491	Identifier	multiline		4360099	1					
ANR	4360492	CFGEntryNode	ENTRY		4360099		True				
ANR	4360493	CFGExitNode	EXIT		4360099		True				
ANR	4360494	CFGErrorNode	ERROR		4360099		True				
ANR	4360495	Symbol	sdb_array_get		4360099						
ANR	4360496	Symbol	r_str_newf		4360099						
ANR	4360497	Symbol	space		4360099						
ANR	4360498	Symbol	TDB		4360099						
ANR	4360499	Symbol	arg		4360099						
ANR	4360500	Symbol	var2		4360099						
ANR	4360501	Symbol	strcmp		4360099						
ANR	4360502	Symbol	val		4360099						
ANR	4360503	Symbol	NULL		4360099						
ANR	4360504	Symbol	sdbkv_key		4360099						
ANR	4360505	Symbol	var		4360099						
ANR	4360506	Symbol	false		4360099						
ANR	4360507	Symbol	match		4360099						
ANR	4360508	Symbol	iter		4360099						
ANR	4360509	Symbol	sdb_foreach_list_filter		4360099						
ANR	4360510	Symbol	kv		4360099						
ANR	4360511	Symbol	sdbkv_value		4360099						
ANR	4360512	Symbol	l		4360099						
ANR	4360513	Symbol	n		4360099						
ANR	4360514	Symbol	filter		4360099						
ANR	4360515	Symbol	p		4360099						
ANR	4360516	Symbol	strstr		4360099						
ANR	4360517	Symbol	multiline		4360099						
ANR	4360518	Symbol	name		4360099						
ANR	4360519	Symbol	true		4360099						
ANR	4360520	Symbol	* p		4360099						
ANR	4360521	Symbol	strdup		4360099						
ANR	4360522	Symbol	* arg		4360099						
ANR	4360523	Function	print_enum_in_c_format	521:0:14618:15757							
ANR	4360524	FunctionDef	"print_enum_in_c_format (Sdb * TDB , const char * arg , bool multiline)"		4360523	0					
ANR	4360525	CompoundStatement		521:78:14696:15757	4360523	0					
ANR	4360526	IdentifierDeclStatement	char * name = NULL ;	522:1:14699:14716	4360523	0	True				
ANR	4360527	IdentifierDecl	* name = NULL		4360523	0					
ANR	4360528	IdentifierDeclType	char *		4360523	0					
ANR	4360529	Identifier	name		4360523	1					
ANR	4360530	AssignmentExpression	* name = NULL		4360523	2		=			
ANR	4360531	Identifier	NULL		4360523	0					
ANR	4360532	Identifier	NULL		4360523	1					
ANR	4360533	IdentifierDeclStatement	SdbKv * kv ;	523:1:14719:14728	4360523	1	True				
ANR	4360534	IdentifierDecl	* kv		4360523	0					
ANR	4360535	IdentifierDeclType	SdbKv *		4360523	0					
ANR	4360536	Identifier	kv		4360523	1					
ANR	4360537	IdentifierDeclStatement	SdbListIter * iter ;	524:1:14731:14748	4360523	2	True				
ANR	4360538	IdentifierDecl	* iter		4360523	0					
ANR	4360539	IdentifierDeclType	SdbListIter *		4360523	0					
ANR	4360540	Identifier	iter		4360523	1					
ANR	4360541	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list ( TDB , true ) ;"	525:1:14751:14792	4360523	3	True				
ANR	4360542	IdentifierDecl	"* l = sdb_foreach_list ( TDB , true )"		4360523	0					
ANR	4360543	IdentifierDeclType	SdbList *		4360523	0					
ANR	4360544	Identifier	l		4360523	1					
ANR	4360545	AssignmentExpression	"* l = sdb_foreach_list ( TDB , true )"		4360523	2		=			
ANR	4360546	Identifier	l		4360523	0					
ANR	4360547	CallExpression	"sdb_foreach_list ( TDB , true )"		4360523	1					
ANR	4360548	Callee	sdb_foreach_list		4360523	0					
ANR	4360549	Identifier	sdb_foreach_list		4360523	0					
ANR	4360550	ArgumentList	TDB		4360523	1					
ANR	4360551	Argument	TDB		4360523	0					
ANR	4360552	Identifier	TDB		4360523	0					
ANR	4360553	Argument	true		4360523	1					
ANR	4360554	Identifier	true		4360523	0					
ANR	4360555	IdentifierDeclStatement	"const char * separator = """" ;"	526:1:14795:14821	4360523	4	True				
ANR	4360556	IdentifierDecl	"* separator = """""		4360523	0					
ANR	4360557	IdentifierDeclType	const char *		4360523	0					
ANR	4360558	Identifier	separator		4360523	1					
ANR	4360559	AssignmentExpression	"* separator = """""		4360523	2		=			
ANR	4360560	Identifier	separator		4360523	0					
ANR	4360561	PrimaryExpression	""""""		4360523	1					
ANR	4360562	IdentifierDeclStatement	bool match = false ;	527:1:14824:14842	4360523	5	True				
ANR	4360563	IdentifierDecl	match = false		4360523	0					
ANR	4360564	IdentifierDeclType	bool		4360523	0					
ANR	4360565	Identifier	match		4360523	1					
ANR	4360566	AssignmentExpression	match = false		4360523	2		=			
ANR	4360567	Identifier	false		4360523	0					
ANR	4360568	Identifier	false		4360523	1					
ANR	4360569	Statement	ls_foreach	528:1:14845:14854	4360523	6	True				
ANR	4360570	Statement	(	528:12:14856:14856	4360523	7	True				
ANR	4360571	Statement	l	528:13:14857:14857	4360523	8	True				
ANR	4360572	Statement	","	528:14:14858:14858	4360523	9	True				
ANR	4360573	Statement	iter	528:16:14860:14863	4360523	10	True				
ANR	4360574	Statement	","	528:20:14864:14864	4360523	11	True				
ANR	4360575	Statement	kv	528:22:14866:14867	4360523	12	True				
ANR	4360576	Statement	)	528:24:14868:14868	4360523	13	True				
ANR	4360577	CompoundStatement		8:26:173:173	4360523	14					
ANR	4360578	IfStatement	"if ( ! strcmp ( sdbkv_value ( kv ) , ""enum"" ) )"		4360523	0					
ANR	4360579	Condition	"! strcmp ( sdbkv_value ( kv ) , ""enum"" )"	529:6:14878:14911	4360523	0	True				
ANR	4360580	UnaryOperationExpression	"! strcmp ( sdbkv_value ( kv ) , ""enum"" )"		4360523	0					
ANR	4360581	UnaryOperator	!		4360523	0					
ANR	4360582	CallExpression	"strcmp ( sdbkv_value ( kv ) , ""enum"" )"		4360523	1					
ANR	4360583	Callee	strcmp		4360523	0					
ANR	4360584	Identifier	strcmp		4360523	0					
ANR	4360585	ArgumentList	sdbkv_value ( kv )		4360523	1					
ANR	4360586	Argument	sdbkv_value ( kv )		4360523	0					
ANR	4360587	CallExpression	sdbkv_value ( kv )		4360523	0					
ANR	4360588	Callee	sdbkv_value		4360523	0					
ANR	4360589	Identifier	sdbkv_value		4360523	0					
ANR	4360590	ArgumentList	kv		4360523	1					
ANR	4360591	Argument	kv		4360523	0					
ANR	4360592	Identifier	kv		4360523	0					
ANR	4360593	Argument	"""enum"""		4360523	1					
ANR	4360594	PrimaryExpression	"""enum"""		4360523	0					
ANR	4360595	CompoundStatement		9:42:217:217	4360523	1					
ANR	4360596	IfStatement	"if ( ! name || strcmp ( sdbkv_value ( kv ) , name ) )"		4360523	0					
ANR	4360597	Condition	"! name || strcmp ( sdbkv_value ( kv ) , name )"	530:7:14923:14962	4360523	0	True				
ANR	4360598	OrExpression	"! name || strcmp ( sdbkv_value ( kv ) , name )"		4360523	0		||			
ANR	4360599	UnaryOperationExpression	! name		4360523	0					
ANR	4360600	UnaryOperator	!		4360523	0					
ANR	4360601	Identifier	name		4360523	1					
ANR	4360602	CallExpression	"strcmp ( sdbkv_value ( kv ) , name )"		4360523	1					
ANR	4360603	Callee	strcmp		4360523	0					
ANR	4360604	Identifier	strcmp		4360523	0					
ANR	4360605	ArgumentList	sdbkv_value ( kv )		4360523	1					
ANR	4360606	Argument	sdbkv_value ( kv )		4360523	0					
ANR	4360607	CallExpression	sdbkv_value ( kv )		4360523	0					
ANR	4360608	Callee	sdbkv_value		4360523	0					
ANR	4360609	Identifier	sdbkv_value		4360523	0					
ANR	4360610	ArgumentList	kv		4360523	1					
ANR	4360611	Argument	kv		4360523	0					
ANR	4360612	Identifier	kv		4360523	0					
ANR	4360613	Argument	name		4360523	1					
ANR	4360614	Identifier	name		4360523	0					
ANR	4360615	CompoundStatement		10:49:268:268	4360523	1					
ANR	4360616	ExpressionStatement	free ( name )	531:4:14971:14982	4360523	0	True				
ANR	4360617	CallExpression	free ( name )		4360523	0					
ANR	4360618	Callee	free		4360523	0					
ANR	4360619	Identifier	free		4360523	0					
ANR	4360620	ArgumentList	name		4360523	1					
ANR	4360621	Argument	name		4360523	0					
ANR	4360622	Identifier	name		4360523	0					
ANR	4360623	ExpressionStatement	name = strdup ( sdbkv_key ( kv ) )	532:4:14988:15018	4360523	1	True				
ANR	4360624	AssignmentExpression	name = strdup ( sdbkv_key ( kv ) )		4360523	0		=			
ANR	4360625	Identifier	name		4360523	0					
ANR	4360626	CallExpression	strdup ( sdbkv_key ( kv ) )		4360523	1					
ANR	4360627	Callee	strdup		4360523	0					
ANR	4360628	Identifier	strdup		4360523	0					
ANR	4360629	ArgumentList	sdbkv_key ( kv )		4360523	1					
ANR	4360630	Argument	sdbkv_key ( kv )		4360523	0					
ANR	4360631	CallExpression	sdbkv_key ( kv )		4360523	0					
ANR	4360632	Callee	sdbkv_key		4360523	0					
ANR	4360633	Identifier	sdbkv_key		4360523	0					
ANR	4360634	ArgumentList	kv		4360523	1					
ANR	4360635	Argument	kv		4360523	0					
ANR	4360636	Identifier	kv		4360523	0					
ANR	4360637	IfStatement	if ( name && ( arg && * arg ) )		4360523	2					
ANR	4360638	Condition	name && ( arg && * arg )	533:8:15028:15048	4360523	0	True				
ANR	4360639	AndExpression	name && ( arg && * arg )		4360523	0		&&			
ANR	4360640	Identifier	name		4360523	0					
ANR	4360641	AndExpression	arg && * arg		4360523	1		&&			
ANR	4360642	Identifier	arg		4360523	0					
ANR	4360643	UnaryOperationExpression	* arg		4360523	1					
ANR	4360644	UnaryOperator	*		4360523	0					
ANR	4360645	Identifier	arg		4360523	1					
ANR	4360646	CompoundStatement		13:31:354:354	4360523	1					
ANR	4360647	IfStatement	"if ( ! strcmp ( arg , name ) )"		4360523	0					
ANR	4360648	Condition	"! strcmp ( arg , name )"	534:9:15062:15080	4360523	0	True				
ANR	4360649	UnaryOperationExpression	"! strcmp ( arg , name )"		4360523	0					
ANR	4360650	UnaryOperator	!		4360523	0					
ANR	4360651	CallExpression	"strcmp ( arg , name )"		4360523	1					
ANR	4360652	Callee	strcmp		4360523	0					
ANR	4360653	Identifier	strcmp		4360523	0					
ANR	4360654	ArgumentList	arg		4360523	1					
ANR	4360655	Argument	arg		4360523	0					
ANR	4360656	Identifier	arg		4360523	0					
ANR	4360657	Argument	name		4360523	1					
ANR	4360658	Identifier	name		4360523	0					
ANR	4360659	CompoundStatement		14:30:386:386	4360523	1					
ANR	4360660	ExpressionStatement	match = true	535:6:15091:15103	4360523	0	True				
ANR	4360661	AssignmentExpression	match = true		4360523	0		=			
ANR	4360662	Identifier	match		4360523	0					
ANR	4360663	Identifier	true		4360523	1					
ANR	4360664	ElseStatement	else		4360523	0					
ANR	4360665	CompoundStatement		16:12:420:420	4360523	0					
ANR	4360666	ContinueStatement	continue ;	537:6:15125:15133	4360523	0	True				
ANR	4360667	ExpressionStatement	"r_cons_printf ( ""%s %s {%s"" , sdbkv_value ( kv ) , name , multiline ? ""\\n"" : """" )"	540:4:15152:15224	4360523	3	True				
ANR	4360668	CallExpression	"r_cons_printf ( ""%s %s {%s"" , sdbkv_value ( kv ) , name , multiline ? ""\\n"" : """" )"		4360523	0					
ANR	4360669	Callee	r_cons_printf		4360523	0					
ANR	4360670	Identifier	r_cons_printf		4360523	0					
ANR	4360671	ArgumentList	"""%s %s {%s"""		4360523	1					
ANR	4360672	Argument	"""%s %s {%s"""		4360523	0					
ANR	4360673	PrimaryExpression	"""%s %s {%s"""		4360523	0					
ANR	4360674	Argument	sdbkv_value ( kv )		4360523	1					
ANR	4360675	CallExpression	sdbkv_value ( kv )		4360523	0					
ANR	4360676	Callee	sdbkv_value		4360523	0					
ANR	4360677	Identifier	sdbkv_value		4360523	0					
ANR	4360678	ArgumentList	kv		4360523	1					
ANR	4360679	Argument	kv		4360523	0					
ANR	4360680	Identifier	kv		4360523	0					
ANR	4360681	Argument	name		4360523	2					
ANR	4360682	Identifier	name		4360523	0					
ANR	4360683	Argument	"multiline ? ""\\n"" : """""		4360523	3					
ANR	4360684	ConditionalExpression	"multiline ? ""\\n"" : """""		4360523	0					
ANR	4360685	Condition	multiline		4360523	0					
ANR	4360686	Identifier	multiline		4360523	0					
ANR	4360687	PrimaryExpression	"""\\n"""		4360523	1					
ANR	4360688	PrimaryExpression	""""""		4360523	2					
ANR	4360689	CompoundStatement		22:5:540:581	4360523	4					
ANR	4360690	IdentifierDeclStatement	"RList * list = r_type_get_enum ( TDB , name ) ;"	542:5:15237:15278	4360523	0	True				
ANR	4360691	IdentifierDecl	"* list = r_type_get_enum ( TDB , name )"		4360523	0					
ANR	4360692	IdentifierDeclType	RList *		4360523	0					
ANR	4360693	Identifier	list		4360523	1					
ANR	4360694	AssignmentExpression	"* list = r_type_get_enum ( TDB , name )"		4360523	2		=			
ANR	4360695	Identifier	list		4360523	0					
ANR	4360696	CallExpression	"r_type_get_enum ( TDB , name )"		4360523	1					
ANR	4360697	Callee	r_type_get_enum		4360523	0					
ANR	4360698	Identifier	r_type_get_enum		4360523	0					
ANR	4360699	ArgumentList	TDB		4360523	1					
ANR	4360700	Argument	TDB		4360523	0					
ANR	4360701	Identifier	TDB		4360523	0					
ANR	4360702	Argument	name		4360523	1					
ANR	4360703	Identifier	name		4360523	0					
ANR	4360704	IfStatement	if ( list && ! r_list_empty ( list ) )		4360523	1					
ANR	4360705	Condition	list && ! r_list_empty ( list )	543:9:15289:15316	4360523	0	True				
ANR	4360706	AndExpression	list && ! r_list_empty ( list )		4360523	0		&&			
ANR	4360707	Identifier	list		4360523	0					
ANR	4360708	UnaryOperationExpression	! r_list_empty ( list )		4360523	1					
ANR	4360709	UnaryOperator	!		4360523	0					
ANR	4360710	CallExpression	r_list_empty ( list )		4360523	1					
ANR	4360711	Callee	r_list_empty		4360523	0					
ANR	4360712	Identifier	r_list_empty		4360523	0					
ANR	4360713	ArgumentList	list		4360523	1					
ANR	4360714	Argument	list		4360523	0					
ANR	4360715	Identifier	list		4360523	0					
ANR	4360716	CompoundStatement		25:6:653:670	4360523	1					
ANR	4360717	IdentifierDeclStatement	RListIter * iter ;	544:6:15327:15342	4360523	0	True				
ANR	4360718	IdentifierDecl	* iter		4360523	0					
ANR	4360719	IdentifierDeclType	RListIter *		4360523	0					
ANR	4360720	Identifier	iter		4360523	1					
ANR	4360721	IdentifierDeclStatement	RTypeEnum * member ;	545:6:15350:15367	4360523	1	True				
ANR	4360722	IdentifierDecl	* member		4360523	0					
ANR	4360723	IdentifierDeclType	RTypeEnum *		4360523	0					
ANR	4360724	Identifier	member		4360523	1					
ANR	4360725	ExpressionStatement	"separator = multiline ? ""\\t"" : """""	546:6:15375:15406	4360523	2	True				
ANR	4360726	AssignmentExpression	"separator = multiline ? ""\\t"" : """""		4360523	0		=			
ANR	4360727	Identifier	separator		4360523	0					
ANR	4360728	ConditionalExpression	"multiline ? ""\\t"" : """""		4360523	1					
ANR	4360729	Condition	multiline		4360523	0					
ANR	4360730	Identifier	multiline		4360523	0					
ANR	4360731	PrimaryExpression	"""\\t"""		4360523	1					
ANR	4360732	PrimaryExpression	""""""		4360523	2					
ANR	4360733	Statement	r_list_foreach	547:6:15414:15427	4360523	3	True				
ANR	4360734	Statement	(	547:21:15429:15429	4360523	4	True				
ANR	4360735	Statement	list	547:22:15430:15433	4360523	5	True				
ANR	4360736	Statement	","	547:26:15434:15434	4360523	6	True				
ANR	4360737	Statement	iter	547:28:15436:15439	4360523	7	True				
ANR	4360738	Statement	","	547:32:15440:15440	4360523	8	True				
ANR	4360739	Statement	member	547:34:15442:15447	4360523	9	True				
ANR	4360740	Statement	)	547:40:15448:15448	4360523	10	True				
ANR	4360741	CompoundStatement		27:42:753:753	4360523	11					
ANR	4360742	ExpressionStatement	"r_cons_printf ( ""%s%s = %d"" , separator , member -> name , r_num_math ( NULL , member -> val ) )"	548:7:15459:15543	4360523	0	True				
ANR	4360743	CallExpression	"r_cons_printf ( ""%s%s = %d"" , separator , member -> name , r_num_math ( NULL , member -> val ) )"		4360523	0					
ANR	4360744	Callee	r_cons_printf		4360523	0					
ANR	4360745	Identifier	r_cons_printf		4360523	0					
ANR	4360746	ArgumentList	"""%s%s = %d"""		4360523	1					
ANR	4360747	Argument	"""%s%s = %d"""		4360523	0					
ANR	4360748	PrimaryExpression	"""%s%s = %d"""		4360523	0					
ANR	4360749	Argument	separator		4360523	1					
ANR	4360750	Identifier	separator		4360523	0					
ANR	4360751	Argument	member -> name		4360523	2					
ANR	4360752	PtrMemberAccess	member -> name		4360523	0					
ANR	4360753	Identifier	member		4360523	0					
ANR	4360754	Identifier	name		4360523	1					
ANR	4360755	Argument	"r_num_math ( NULL , member -> val )"		4360523	3					
ANR	4360756	CallExpression	"r_num_math ( NULL , member -> val )"		4360523	0					
ANR	4360757	Callee	r_num_math		4360523	0					
ANR	4360758	Identifier	r_num_math		4360523	0					
ANR	4360759	ArgumentList	NULL		4360523	1					
ANR	4360760	Argument	NULL		4360523	0					
ANR	4360761	Identifier	NULL		4360523	0					
ANR	4360762	Argument	member -> val		4360523	1					
ANR	4360763	PtrMemberAccess	member -> val		4360523	0					
ANR	4360764	Identifier	member		4360523	0					
ANR	4360765	Identifier	val		4360523	1					
ANR	4360766	ExpressionStatement	"separator = multiline ? "",\\n\\t"" : "", """	549:7:15552:15588	4360523	1	True				
ANR	4360767	AssignmentExpression	"separator = multiline ? "",\\n\\t"" : "", """		4360523	0		=			
ANR	4360768	Identifier	separator		4360523	0					
ANR	4360769	ConditionalExpression	"multiline ? "",\\n\\t"" : "", """		4360523	1					
ANR	4360770	Condition	multiline		4360523	0					
ANR	4360771	Identifier	multiline		4360523	0					
ANR	4360772	PrimaryExpression	""",\\n\\t"""		4360523	1					
ANR	4360773	PrimaryExpression	""", """		4360523	2					
ANR	4360774	ExpressionStatement	r_list_free ( list )	552:5:15610:15628	4360523	2	True				
ANR	4360775	CallExpression	r_list_free ( list )		4360523	0					
ANR	4360776	Callee	r_list_free		4360523	0					
ANR	4360777	Identifier	r_list_free		4360523	0					
ANR	4360778	ArgumentList	list		4360523	1					
ANR	4360779	Argument	list		4360523	0					
ANR	4360780	Identifier	list		4360523	0					
ANR	4360781	ExpressionStatement	"r_cons_println ( multiline ? ""\\n};"" : ""};"" )"	554:4:15640:15680	4360523	5	True				
ANR	4360782	CallExpression	"r_cons_println ( multiline ? ""\\n};"" : ""};"" )"		4360523	0					
ANR	4360783	Callee	r_cons_println		4360523	0					
ANR	4360784	Identifier	r_cons_println		4360523	0					
ANR	4360785	ArgumentList	"multiline ? ""\\n};"" : ""};"""		4360523	1					
ANR	4360786	Argument	"multiline ? ""\\n};"" : ""};"""		4360523	0					
ANR	4360787	ConditionalExpression	"multiline ? ""\\n};"" : ""};"""		4360523	0					
ANR	4360788	Condition	multiline		4360523	0					
ANR	4360789	Identifier	multiline		4360523	0					
ANR	4360790	PrimaryExpression	"""\\n};"""		4360523	1					
ANR	4360791	PrimaryExpression	"""};"""		4360523	2					
ANR	4360792	IfStatement	if ( match )		4360523	6					
ANR	4360793	Condition	match	555:8:15690:15694	4360523	0	True				
ANR	4360794	Identifier	match		4360523	0					
ANR	4360795	CompoundStatement		35:15:1000:1000	4360523	1					
ANR	4360796	BreakStatement	break ;	556:5:15704:15709	4360523	0	True				
ANR	4360797	ExpressionStatement	free ( name )	561:1:15730:15741	4360523	15	True				
ANR	4360798	CallExpression	free ( name )		4360523	0					
ANR	4360799	Callee	free		4360523	0					
ANR	4360800	Identifier	free		4360523	0					
ANR	4360801	ArgumentList	name		4360523	1					
ANR	4360802	Argument	name		4360523	0					
ANR	4360803	Identifier	name		4360523	0					
ANR	4360804	ExpressionStatement	ls_free ( l )	562:1:15744:15755	4360523	16	True				
ANR	4360805	CallExpression	ls_free ( l )		4360523	0					
ANR	4360806	Callee	ls_free		4360523	0					
ANR	4360807	Identifier	ls_free		4360523	0					
ANR	4360808	ArgumentList	l		4360523	1					
ANR	4360809	Argument	l		4360523	0					
ANR	4360810	Identifier	l		4360523	0					
ANR	4360811	ReturnType	static void		4360523	1					
ANR	4360812	Identifier	print_enum_in_c_format		4360523	2					
ANR	4360813	ParameterList	"Sdb * TDB , const char * arg , bool multiline"		4360523	3					
ANR	4360814	Parameter	Sdb * TDB	521:35:14653:14660	4360523	0	True				
ANR	4360815	ParameterType	Sdb *		4360523	0					
ANR	4360816	Identifier	TDB		4360523	1					
ANR	4360817	Parameter	const char * arg	521:45:14663:14677	4360523	1	True				
ANR	4360818	ParameterType	const char *		4360523	0					
ANR	4360819	Identifier	arg		4360523	1					
ANR	4360820	Parameter	bool multiline	521:62:14680:14693	4360523	2	True				
ANR	4360821	ParameterType	bool		4360523	0					
ANR	4360822	Identifier	multiline		4360523	1					
ANR	4360823	CFGEntryNode	ENTRY		4360523		True				
ANR	4360824	CFGExitNode	EXIT		4360523		True				
ANR	4360825	CFGErrorNode	ERROR		4360523		True				
ANR	4360826	Symbol	r_num_math		4360523						
ANR	4360827	Symbol	TDB		4360523						
ANR	4360828	Symbol	member -> val		4360523						
ANR	4360829	Symbol	arg		4360523						
ANR	4360830	Symbol	member		4360523						
ANR	4360831	Symbol	strcmp		4360523						
ANR	4360832	Symbol	NULL		4360523						
ANR	4360833	Symbol	sdbkv_key		4360523						
ANR	4360834	Symbol	false		4360523						
ANR	4360835	Symbol	match		4360523						
ANR	4360836	Symbol	iter		4360523						
ANR	4360837	Symbol	sdb_foreach_list		4360523						
ANR	4360838	Symbol	kv		4360523						
ANR	4360839	Symbol	sdbkv_value		4360523						
ANR	4360840	Symbol	* member		4360523						
ANR	4360841	Symbol	l		4360523						
ANR	4360842	Symbol	list		4360523						
ANR	4360843	Symbol	separator		4360523						
ANR	4360844	Symbol	member -> name		4360523						
ANR	4360845	Symbol	r_type_get_enum		4360523						
ANR	4360846	Symbol	multiline		4360523						
ANR	4360847	Symbol	name		4360523						
ANR	4360848	Symbol	true		4360523						
ANR	4360849	Symbol	r_list_empty		4360523						
ANR	4360850	Symbol	strdup		4360523						
ANR	4360851	Symbol	* arg		4360523						
ANR	4360852	Function	printkey_cb	565:0:15760:15859							
ANR	4360853	FunctionDef	"printkey_cb (void * user , const char * k , const char * v)"		4360852	0					
ANR	4360854	CompoundStatement		565:65:15825:15859	4360852	0					
ANR	4360855	ExpressionStatement	r_cons_println ( k )	566:1:15828:15846	4360852	0	True				
ANR	4360856	CallExpression	r_cons_println ( k )		4360852	0					
ANR	4360857	Callee	r_cons_println		4360852	0					
ANR	4360858	Identifier	r_cons_println		4360852	0					
ANR	4360859	ArgumentList	k		4360852	1					
ANR	4360860	Argument	k		4360852	0					
ANR	4360861	Identifier	k		4360852	0					
ANR	4360862	ReturnStatement	return 1 ;	567:1:15849:15857	4360852	1	True				
ANR	4360863	PrimaryExpression	1		4360852	0					
ANR	4360864	ReturnType	static int		4360852	1					
ANR	4360865	Identifier	printkey_cb		4360852	2					
ANR	4360866	ParameterList	"void * user , const char * k , const char * v"		4360852	3					
ANR	4360867	Parameter	void * user	565:23:15783:15792	4360852	0	True				
ANR	4360868	ParameterType	void *		4360852	0					
ANR	4360869	Identifier	user		4360852	1					
ANR	4360870	Parameter	const char * k	565:35:15795:15807	4360852	1	True				
ANR	4360871	ParameterType	const char *		4360852	0					
ANR	4360872	Identifier	k		4360852	1					
ANR	4360873	Parameter	const char * v	565:50:15810:15822	4360852	2	True				
ANR	4360874	ParameterType	const char *		4360852	0					
ANR	4360875	Identifier	v		4360852	1					
ANR	4360876	CFGEntryNode	ENTRY		4360852		True				
ANR	4360877	CFGExitNode	EXIT		4360852		True				
ANR	4360878	Symbol	v		4360852						
ANR	4360879	Symbol	k		4360852						
ANR	4360880	Symbol	user		4360852						
ANR	4360881	Function	printFunctionTypeC	571:0:15931:16670							
ANR	4360882	FunctionDef	"printFunctionTypeC (RCore * core , const char * input)"		4360881	0					
ANR	4360883	CompoundStatement		571:63:15994:16670	4360881	0					
ANR	4360884	IdentifierDeclStatement	Sdb * TDB = core -> anal -> sdb_types ;	572:1:15997:16029	4360881	0	True				
ANR	4360885	IdentifierDecl	* TDB = core -> anal -> sdb_types		4360881	0					
ANR	4360886	IdentifierDeclType	Sdb *		4360881	0					
ANR	4360887	Identifier	TDB		4360881	1					
ANR	4360888	AssignmentExpression	* TDB = core -> anal -> sdb_types		4360881	2		=			
ANR	4360889	Identifier	TDB		4360881	0					
ANR	4360890	PtrMemberAccess	core -> anal -> sdb_types		4360881	1					
ANR	4360891	PtrMemberAccess	core -> anal		4360881	0					
ANR	4360892	Identifier	core		4360881	0					
ANR	4360893	Identifier	anal		4360881	1					
ANR	4360894	Identifier	sdb_types		4360881	1					
ANR	4360895	IdentifierDeclStatement	"char * res = sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""func.%s.args"" , input ) ) ;"	573:1:16032:16103	4360881	1	True				
ANR	4360896	IdentifierDecl	"* res = sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""func.%s.args"" , input ) )"		4360881	0					
ANR	4360897	IdentifierDeclType	char *		4360881	0					
ANR	4360898	Identifier	res		4360881	1					
ANR	4360899	AssignmentExpression	"* res = sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""func.%s.args"" , input ) )"		4360881	2		=			
ANR	4360900	Identifier	res		4360881	0					
ANR	4360901	CallExpression	"sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""func.%s.args"" , input ) )"		4360881	1					
ANR	4360902	Callee	sdb_querys		4360881	0					
ANR	4360903	Identifier	sdb_querys		4360881	0					
ANR	4360904	ArgumentList	TDB		4360881	1					
ANR	4360905	Argument	TDB		4360881	0					
ANR	4360906	Identifier	TDB		4360881	0					
ANR	4360907	Argument	NULL		4360881	1					
ANR	4360908	Identifier	NULL		4360881	0					
ANR	4360909	Argument	- 1		4360881	2					
ANR	4360910	UnaryOperationExpression	- 1		4360881	0					
ANR	4360911	UnaryOperator	-		4360881	0					
ANR	4360912	PrimaryExpression	1		4360881	1					
ANR	4360913	Argument	"sdb_fmt ( ""func.%s.args"" , input )"		4360881	3					
ANR	4360914	CallExpression	"sdb_fmt ( ""func.%s.args"" , input )"		4360881	0					
ANR	4360915	Callee	sdb_fmt		4360881	0					
ANR	4360916	Identifier	sdb_fmt		4360881	0					
ANR	4360917	ArgumentList	"""func.%s.args"""		4360881	1					
ANR	4360918	Argument	"""func.%s.args"""		4360881	0					
ANR	4360919	PrimaryExpression	"""func.%s.args"""		4360881	0					
ANR	4360920	Argument	input		4360881	1					
ANR	4360921	Identifier	input		4360881	0					
ANR	4360922	IdentifierDeclStatement	const char * name = r_str_trim_ro ( input ) ;	574:1:16106:16146	4360881	2	True				
ANR	4360923	IdentifierDecl	* name = r_str_trim_ro ( input )		4360881	0					
ANR	4360924	IdentifierDeclType	const char *		4360881	0					
ANR	4360925	Identifier	name		4360881	1					
ANR	4360926	AssignmentExpression	* name = r_str_trim_ro ( input )		4360881	2		=			
ANR	4360927	Identifier	name		4360881	0					
ANR	4360928	CallExpression	r_str_trim_ro ( input )		4360881	1					
ANR	4360929	Callee	r_str_trim_ro		4360881	0					
ANR	4360930	Identifier	r_str_trim_ro		4360881	0					
ANR	4360931	ArgumentList	input		4360881	1					
ANR	4360932	Argument	input		4360881	0					
ANR	4360933	Identifier	input		4360881	0					
ANR	4360934	IdentifierDeclStatement	"int i , args = sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 ) ;"	575:1:16149:16215	4360881	3	True				
ANR	4360935	IdentifierDecl	i		4360881	0					
ANR	4360936	IdentifierDeclType	int		4360881	0					
ANR	4360937	Identifier	i		4360881	1					
ANR	4360938	IdentifierDecl	"args = sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 )"		4360881	1					
ANR	4360939	IdentifierDeclType	int		4360881	0					
ANR	4360940	Identifier	args		4360881	1					
ANR	4360941	AssignmentExpression	"args = sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 )"		4360881	2		=			
ANR	4360942	Identifier	args		4360881	0					
ANR	4360943	CallExpression	"sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 )"		4360881	1					
ANR	4360944	Callee	sdb_num_get		4360881	0					
ANR	4360945	Identifier	sdb_num_get		4360881	0					
ANR	4360946	ArgumentList	TDB		4360881	1					
ANR	4360947	Argument	TDB		4360881	0					
ANR	4360948	Identifier	TDB		4360881	0					
ANR	4360949	Argument	"sdb_fmt ( ""func.%s.args"" , name )"		4360881	1					
ANR	4360950	CallExpression	"sdb_fmt ( ""func.%s.args"" , name )"		4360881	0					
ANR	4360951	Callee	sdb_fmt		4360881	0					
ANR	4360952	Identifier	sdb_fmt		4360881	0					
ANR	4360953	ArgumentList	"""func.%s.args"""		4360881	1					
ANR	4360954	Argument	"""func.%s.args"""		4360881	0					
ANR	4360955	PrimaryExpression	"""func.%s.args"""		4360881	0					
ANR	4360956	Argument	name		4360881	1					
ANR	4360957	Identifier	name		4360881	0					
ANR	4360958	Argument	0		4360881	2					
ANR	4360959	PrimaryExpression	0		4360881	0					
ANR	4360960	IdentifierDeclStatement	"const char * ret = sdb_const_get ( TDB , sdb_fmt ( ""func.%s.ret"" , name ) , 0 ) ;"	576:1:16218:16289	4360881	4	True				
ANR	4360961	IdentifierDecl	"* ret = sdb_const_get ( TDB , sdb_fmt ( ""func.%s.ret"" , name ) , 0 )"		4360881	0					
ANR	4360962	IdentifierDeclType	const char *		4360881	0					
ANR	4360963	Identifier	ret		4360881	1					
ANR	4360964	AssignmentExpression	"* ret = sdb_const_get ( TDB , sdb_fmt ( ""func.%s.ret"" , name ) , 0 )"		4360881	2		=			
ANR	4360965	Identifier	ret		4360881	0					
ANR	4360966	CallExpression	"sdb_const_get ( TDB , sdb_fmt ( ""func.%s.ret"" , name ) , 0 )"		4360881	1					
ANR	4360967	Callee	sdb_const_get		4360881	0					
ANR	4360968	Identifier	sdb_const_get		4360881	0					
ANR	4360969	ArgumentList	TDB		4360881	1					
ANR	4360970	Argument	TDB		4360881	0					
ANR	4360971	Identifier	TDB		4360881	0					
ANR	4360972	Argument	"sdb_fmt ( ""func.%s.ret"" , name )"		4360881	1					
ANR	4360973	CallExpression	"sdb_fmt ( ""func.%s.ret"" , name )"		4360881	0					
ANR	4360974	Callee	sdb_fmt		4360881	0					
ANR	4360975	Identifier	sdb_fmt		4360881	0					
ANR	4360976	ArgumentList	"""func.%s.ret"""		4360881	1					
ANR	4360977	Argument	"""func.%s.ret"""		4360881	0					
ANR	4360978	PrimaryExpression	"""func.%s.ret"""		4360881	0					
ANR	4360979	Argument	name		4360881	1					
ANR	4360980	Identifier	name		4360881	0					
ANR	4360981	Argument	0		4360881	2					
ANR	4360982	PrimaryExpression	0		4360881	0					
ANR	4360983	IfStatement	if ( ! ret || ! name )		4360881	5					
ANR	4360984	Condition	! ret || ! name	577:5:16296:16308	4360881	0	True				
ANR	4360985	OrExpression	! ret || ! name		4360881	0		||			
ANR	4360986	UnaryOperationExpression	! ret		4360881	0					
ANR	4360987	UnaryOperator	!		4360881	0					
ANR	4360988	Identifier	ret		4360881	1					
ANR	4360989	UnaryOperationExpression	! name		4360881	1					
ANR	4360990	UnaryOperator	!		4360881	0					
ANR	4360991	Identifier	name		4360881	1					
ANR	4360992	CompoundStatement		7:20:316:316	4360881	1					
ANR	4360993	ReturnStatement	return ;	579:2:16352:16358	4360881	0	True				
ANR	4360994	ExpressionStatement	"r_cons_printf ( ""%s %s ("" , ret , name )"	582:1:16365:16401	4360881	6	True				
ANR	4360995	CallExpression	"r_cons_printf ( ""%s %s ("" , ret , name )"		4360881	0					
ANR	4360996	Callee	r_cons_printf		4360881	0					
ANR	4360997	Identifier	r_cons_printf		4360881	0					
ANR	4360998	ArgumentList	"""%s %s ("""		4360881	1					
ANR	4360999	Argument	"""%s %s ("""		4360881	0					
ANR	4361000	PrimaryExpression	"""%s %s ("""		4360881	0					
ANR	4361001	Argument	ret		4360881	1					
ANR	4361002	Identifier	ret		4360881	0					
ANR	4361003	Argument	name		4360881	2					
ANR	4361004	Identifier	name		4360881	0					
ANR	4361005	ForStatement	for ( i = 0 ; i < args ; i ++ )		4360881	7					
ANR	4361006	ForInit	i = 0 ;	583:6:16409:16414	4360881	0	True				
ANR	4361007	AssignmentExpression	i = 0		4360881	0		=			
ANR	4361008	Identifier	i		4360881	0					
ANR	4361009	PrimaryExpression	0		4360881	1					
ANR	4361010	Condition	i < args	583:13:16416:16423	4360881	1	True				
ANR	4361011	RelationalExpression	i < args		4360881	0		<			
ANR	4361012	Identifier	i		4360881	0					
ANR	4361013	Identifier	args		4360881	1					
ANR	4361014	PostIncDecOperationExpression	i ++	583:23:16426:16428	4360881	2	True				
ANR	4361015	Identifier	i		4360881	0					
ANR	4361016	IncDec	++		4360881	1					
ANR	4361017	CompoundStatement		15:2:510:541	4360881	3					
ANR	4361018	IdentifierDeclStatement	"char * type = sdb_get ( TDB , sdb_fmt ( ""func.%s.arg.%d"" , name , i ) , 0 ) ;"	584:2:16435:16501	4360881	0	True				
ANR	4361019	IdentifierDecl	"* type = sdb_get ( TDB , sdb_fmt ( ""func.%s.arg.%d"" , name , i ) , 0 )"		4360881	0					
ANR	4361020	IdentifierDeclType	char *		4360881	0					
ANR	4361021	Identifier	type		4360881	1					
ANR	4361022	AssignmentExpression	"* type = sdb_get ( TDB , sdb_fmt ( ""func.%s.arg.%d"" , name , i ) , 0 )"		4360881	2		=			
ANR	4361023	Identifier	type		4360881	0					
ANR	4361024	CallExpression	"sdb_get ( TDB , sdb_fmt ( ""func.%s.arg.%d"" , name , i ) , 0 )"		4360881	1					
ANR	4361025	Callee	sdb_get		4360881	0					
ANR	4361026	Identifier	sdb_get		4360881	0					
ANR	4361027	ArgumentList	TDB		4360881	1					
ANR	4361028	Argument	TDB		4360881	0					
ANR	4361029	Identifier	TDB		4360881	0					
ANR	4361030	Argument	"sdb_fmt ( ""func.%s.arg.%d"" , name , i )"		4360881	1					
ANR	4361031	CallExpression	"sdb_fmt ( ""func.%s.arg.%d"" , name , i )"		4360881	0					
ANR	4361032	Callee	sdb_fmt		4360881	0					
ANR	4361033	Identifier	sdb_fmt		4360881	0					
ANR	4361034	ArgumentList	"""func.%s.arg.%d"""		4360881	1					
ANR	4361035	Argument	"""func.%s.arg.%d"""		4360881	0					
ANR	4361036	PrimaryExpression	"""func.%s.arg.%d"""		4360881	0					
ANR	4361037	Argument	name		4360881	1					
ANR	4361038	Identifier	name		4360881	0					
ANR	4361039	Argument	i		4360881	2					
ANR	4361040	Identifier	i		4360881	0					
ANR	4361041	Argument	0		4360881	2					
ANR	4361042	PrimaryExpression	0		4360881	0					
ANR	4361043	IdentifierDeclStatement	"char * name = strchr ( type , ',' ) ;"	585:2:16505:16536	4360881	1	True				
ANR	4361044	IdentifierDecl	"* name = strchr ( type , ',' )"		4360881	0					
ANR	4361045	IdentifierDeclType	char *		4360881	0					
ANR	4361046	Identifier	name		4360881	1					
ANR	4361047	AssignmentExpression	"* name = strchr ( type , ',' )"		4360881	2		=			
ANR	4361048	Identifier	name		4360881	0					
ANR	4361049	CallExpression	"strchr ( type , ',' )"		4360881	1					
ANR	4361050	Callee	strchr		4360881	0					
ANR	4361051	Identifier	strchr		4360881	0					
ANR	4361052	ArgumentList	type		4360881	1					
ANR	4361053	Argument	type		4360881	0					
ANR	4361054	Identifier	type		4360881	0					
ANR	4361055	Argument	"','"		4360881	1					
ANR	4361056	PrimaryExpression	"','"		4360881	0					
ANR	4361057	IfStatement	if ( name )		4360881	2					
ANR	4361058	Condition	name	586:6:16544:16547	4360881	0	True				
ANR	4361059	Identifier	name		4360881	0					
ANR	4361060	CompoundStatement		16:12:555:555	4360881	1					
ANR	4361061	ExpressionStatement	* name ++ = 0	587:3:16555:16566	4360881	0	True				
ANR	4361062	AssignmentExpression	* name ++ = 0		4360881	0		=			
ANR	4361063	UnaryOperationExpression	* name ++		4360881	0					
ANR	4361064	UnaryOperator	*		4360881	0					
ANR	4361065	PostIncDecOperationExpression	name ++		4360881	1					
ANR	4361066	Identifier	name		4360881	0					
ANR	4361067	IncDec	++		4360881	1					
ANR	4361068	PrimaryExpression	0		4360881	1					
ANR	4361069	ExpressionStatement	"r_cons_printf ( ""%s%s %s"" , i == 0 ? """" : "", "" , type , name )"	589:2:16574:16627	4360881	3	True				
ANR	4361070	CallExpression	"r_cons_printf ( ""%s%s %s"" , i == 0 ? """" : "", "" , type , name )"		4360881	0					
ANR	4361071	Callee	r_cons_printf		4360881	0					
ANR	4361072	Identifier	r_cons_printf		4360881	0					
ANR	4361073	ArgumentList	"""%s%s %s"""		4360881	1					
ANR	4361074	Argument	"""%s%s %s"""		4360881	0					
ANR	4361075	PrimaryExpression	"""%s%s %s"""		4360881	0					
ANR	4361076	Argument	"i == 0 ? """" : "", """		4360881	1					
ANR	4361077	ConditionalExpression	"i == 0 ? """" : "", """		4360881	0					
ANR	4361078	Condition	i == 0		4360881	0					
ANR	4361079	EqualityExpression	i == 0		4360881	0		==			
ANR	4361080	Identifier	i		4360881	0					
ANR	4361081	PrimaryExpression	0		4360881	1					
ANR	4361082	PrimaryExpression	""""""		4360881	1					
ANR	4361083	PrimaryExpression	""", """		4360881	2					
ANR	4361084	Argument	type		4360881	2					
ANR	4361085	Identifier	type		4360881	0					
ANR	4361086	Argument	name		4360881	3					
ANR	4361087	Identifier	name		4360881	0					
ANR	4361088	ExpressionStatement	"r_cons_printf ( "");\\n"" )"	591:1:16633:16655	4360881	8	True				
ANR	4361089	CallExpression	"r_cons_printf ( "");\\n"" )"		4360881	0					
ANR	4361090	Callee	r_cons_printf		4360881	0					
ANR	4361091	Identifier	r_cons_printf		4360881	0					
ANR	4361092	ArgumentList	""");\\n"""		4360881	1					
ANR	4361093	Argument	""");\\n"""		4360881	0					
ANR	4361094	PrimaryExpression	""");\\n"""		4360881	0					
ANR	4361095	ExpressionStatement	free ( res )	592:1:16658:16668	4360881	9	True				
ANR	4361096	CallExpression	free ( res )		4360881	0					
ANR	4361097	Callee	free		4360881	0					
ANR	4361098	Identifier	free		4360881	0					
ANR	4361099	ArgumentList	res		4360881	1					
ANR	4361100	Argument	res		4360881	0					
ANR	4361101	Identifier	res		4360881	0					
ANR	4361102	ReturnType	static void		4360881	1					
ANR	4361103	Identifier	printFunctionTypeC		4360881	2					
ANR	4361104	ParameterList	"RCore * core , const char * input"		4360881	3					
ANR	4361105	Parameter	RCore * core	571:31:15962:15972	4360881	0	True				
ANR	4361106	ParameterType	RCore *		4360881	0					
ANR	4361107	Identifier	core		4360881	1					
ANR	4361108	Parameter	const char * input	571:44:15975:15991	4360881	1	True				
ANR	4361109	ParameterType	const char *		4360881	0					
ANR	4361110	Identifier	input		4360881	1					
ANR	4361111	CFGEntryNode	ENTRY		4360881		True				
ANR	4361112	CFGExitNode	EXIT		4360881		True				
ANR	4361113	Symbol	sdb_num_get		4360881						
ANR	4361114	Symbol	ret		4360881						
ANR	4361115	Symbol	res		4360881						
ANR	4361116	Symbol	NULL		4360881						
ANR	4361117	Symbol	* core		4360881						
ANR	4361118	Symbol	sdb_querys		4360881						
ANR	4361119	Symbol	i		4360881						
ANR	4361120	Symbol	strchr		4360881						
ANR	4361121	Symbol	sdb_get		4360881						
ANR	4361122	Symbol	core -> anal -> sdb_types		4360881						
ANR	4361123	Symbol	type		4360881						
ANR	4361124	Symbol	core -> anal		4360881						
ANR	4361125	Symbol	sdb_const_get		4360881						
ANR	4361126	Symbol	args		4360881						
ANR	4361127	Symbol	core		4360881						
ANR	4361128	Symbol	input		4360881						
ANR	4361129	Symbol	TDB		4360881						
ANR	4361130	Symbol	* core -> anal		4360881						
ANR	4361131	Symbol	r_str_trim_ro		4360881						
ANR	4361132	Symbol	name		4360881						
ANR	4361133	Symbol	sdb_fmt		4360881						
ANR	4361134	Symbol	* * core		4360881						
ANR	4361135	Symbol	* name ++		4360881						
ANR	4361136	Function	printFunctionType	595:0:16673:17596							
ANR	4361137	FunctionDef	"printFunctionType (RCore * core , const char * input)"		4361136	0					
ANR	4361138	CompoundStatement		595:62:16735:17596	4361136	0					
ANR	4361139	IdentifierDeclStatement	Sdb * TDB = core -> anal -> sdb_types ;	596:1:16738:16770	4361136	0	True				
ANR	4361140	IdentifierDecl	* TDB = core -> anal -> sdb_types		4361136	0					
ANR	4361141	IdentifierDeclType	Sdb *		4361136	0					
ANR	4361142	Identifier	TDB		4361136	1					
ANR	4361143	AssignmentExpression	* TDB = core -> anal -> sdb_types		4361136	2		=			
ANR	4361144	Identifier	TDB		4361136	0					
ANR	4361145	PtrMemberAccess	core -> anal -> sdb_types		4361136	1					
ANR	4361146	PtrMemberAccess	core -> anal		4361136	0					
ANR	4361147	Identifier	core		4361136	0					
ANR	4361148	Identifier	anal		4361136	1					
ANR	4361149	Identifier	sdb_types		4361136	1					
ANR	4361150	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	597:1:16773:16791	4361136	1	True				
ANR	4361151	IdentifierDecl	* pj = pj_new ( )		4361136	0					
ANR	4361152	IdentifierDeclType	PJ *		4361136	0					
ANR	4361153	Identifier	pj		4361136	1					
ANR	4361154	AssignmentExpression	* pj = pj_new ( )		4361136	2		=			
ANR	4361155	Identifier	pj		4361136	0					
ANR	4361156	CallExpression	pj_new ( )		4361136	1					
ANR	4361157	Callee	pj_new		4361136	0					
ANR	4361158	Identifier	pj_new		4361136	0					
ANR	4361159	ArgumentList			4361136	1					
ANR	4361160	IfStatement	if ( ! pj )		4361136	2					
ANR	4361161	Condition	! pj	598:5:16798:16800	4361136	0	True				
ANR	4361162	UnaryOperationExpression	! pj		4361136	0					
ANR	4361163	UnaryOperator	!		4361136	0					
ANR	4361164	Identifier	pj		4361136	1					
ANR	4361165	CompoundStatement		4:10:67:67	4361136	1					
ANR	4361166	ReturnStatement	return ;	599:2:16807:16813	4361136	0	True				
ANR	4361167	ExpressionStatement	pj_o ( pj )	601:1:16819:16828	4361136	3	True				
ANR	4361168	CallExpression	pj_o ( pj )		4361136	0					
ANR	4361169	Callee	pj_o		4361136	0					
ANR	4361170	Identifier	pj_o		4361136	0					
ANR	4361171	ArgumentList	pj		4361136	1					
ANR	4361172	Argument	pj		4361136	0					
ANR	4361173	Identifier	pj		4361136	0					
ANR	4361174	IdentifierDeclStatement	"char * res = sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""func.%s.args"" , input ) ) ;"	602:1:16831:16902	4361136	4	True				
ANR	4361175	IdentifierDecl	"* res = sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""func.%s.args"" , input ) )"		4361136	0					
ANR	4361176	IdentifierDeclType	char *		4361136	0					
ANR	4361177	Identifier	res		4361136	1					
ANR	4361178	AssignmentExpression	"* res = sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""func.%s.args"" , input ) )"		4361136	2		=			
ANR	4361179	Identifier	res		4361136	0					
ANR	4361180	CallExpression	"sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""func.%s.args"" , input ) )"		4361136	1					
ANR	4361181	Callee	sdb_querys		4361136	0					
ANR	4361182	Identifier	sdb_querys		4361136	0					
ANR	4361183	ArgumentList	TDB		4361136	1					
ANR	4361184	Argument	TDB		4361136	0					
ANR	4361185	Identifier	TDB		4361136	0					
ANR	4361186	Argument	NULL		4361136	1					
ANR	4361187	Identifier	NULL		4361136	0					
ANR	4361188	Argument	- 1		4361136	2					
ANR	4361189	UnaryOperationExpression	- 1		4361136	0					
ANR	4361190	UnaryOperator	-		4361136	0					
ANR	4361191	PrimaryExpression	1		4361136	1					
ANR	4361192	Argument	"sdb_fmt ( ""func.%s.args"" , input )"		4361136	3					
ANR	4361193	CallExpression	"sdb_fmt ( ""func.%s.args"" , input )"		4361136	0					
ANR	4361194	Callee	sdb_fmt		4361136	0					
ANR	4361195	Identifier	sdb_fmt		4361136	0					
ANR	4361196	ArgumentList	"""func.%s.args"""		4361136	1					
ANR	4361197	Argument	"""func.%s.args"""		4361136	0					
ANR	4361198	PrimaryExpression	"""func.%s.args"""		4361136	0					
ANR	4361199	Argument	input		4361136	1					
ANR	4361200	Identifier	input		4361136	0					
ANR	4361201	IdentifierDeclStatement	const char * name = r_str_trim_ro ( input ) ;	603:1:16905:16945	4361136	5	True				
ANR	4361202	IdentifierDecl	* name = r_str_trim_ro ( input )		4361136	0					
ANR	4361203	IdentifierDeclType	const char *		4361136	0					
ANR	4361204	Identifier	name		4361136	1					
ANR	4361205	AssignmentExpression	* name = r_str_trim_ro ( input )		4361136	2		=			
ANR	4361206	Identifier	name		4361136	0					
ANR	4361207	CallExpression	r_str_trim_ro ( input )		4361136	1					
ANR	4361208	Callee	r_str_trim_ro		4361136	0					
ANR	4361209	Identifier	r_str_trim_ro		4361136	0					
ANR	4361210	ArgumentList	input		4361136	1					
ANR	4361211	Argument	input		4361136	0					
ANR	4361212	Identifier	input		4361136	0					
ANR	4361213	IdentifierDeclStatement	"int i , args = sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 ) ;"	604:1:16948:17014	4361136	6	True				
ANR	4361214	IdentifierDecl	i		4361136	0					
ANR	4361215	IdentifierDeclType	int		4361136	0					
ANR	4361216	Identifier	i		4361136	1					
ANR	4361217	IdentifierDecl	"args = sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 )"		4361136	1					
ANR	4361218	IdentifierDeclType	int		4361136	0					
ANR	4361219	Identifier	args		4361136	1					
ANR	4361220	AssignmentExpression	"args = sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 )"		4361136	2		=			
ANR	4361221	Identifier	args		4361136	0					
ANR	4361222	CallExpression	"sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 )"		4361136	1					
ANR	4361223	Callee	sdb_num_get		4361136	0					
ANR	4361224	Identifier	sdb_num_get		4361136	0					
ANR	4361225	ArgumentList	TDB		4361136	1					
ANR	4361226	Argument	TDB		4361136	0					
ANR	4361227	Identifier	TDB		4361136	0					
ANR	4361228	Argument	"sdb_fmt ( ""func.%s.args"" , name )"		4361136	1					
ANR	4361229	CallExpression	"sdb_fmt ( ""func.%s.args"" , name )"		4361136	0					
ANR	4361230	Callee	sdb_fmt		4361136	0					
ANR	4361231	Identifier	sdb_fmt		4361136	0					
ANR	4361232	ArgumentList	"""func.%s.args"""		4361136	1					
ANR	4361233	Argument	"""func.%s.args"""		4361136	0					
ANR	4361234	PrimaryExpression	"""func.%s.args"""		4361136	0					
ANR	4361235	Argument	name		4361136	1					
ANR	4361236	Identifier	name		4361136	0					
ANR	4361237	Argument	0		4361136	2					
ANR	4361238	PrimaryExpression	0		4361136	0					
ANR	4361239	ExpressionStatement	"pj_ks ( pj , ""name"" , name )"	605:1:17017:17041	4361136	7	True				
ANR	4361240	CallExpression	"pj_ks ( pj , ""name"" , name )"		4361136	0					
ANR	4361241	Callee	pj_ks		4361136	0					
ANR	4361242	Identifier	pj_ks		4361136	0					
ANR	4361243	ArgumentList	pj		4361136	1					
ANR	4361244	Argument	pj		4361136	0					
ANR	4361245	Identifier	pj		4361136	0					
ANR	4361246	Argument	"""name"""		4361136	1					
ANR	4361247	PrimaryExpression	"""name"""		4361136	0					
ANR	4361248	Argument	name		4361136	2					
ANR	4361249	Identifier	name		4361136	0					
ANR	4361250	ExpressionStatement	"pj_ks ( pj , ""ret"" , sdb_const_get ( TDB , sdb_fmt ( ""func.%s.ret"" , name ) , 0 ) )"	606:1:17044:17116	4361136	8	True				
ANR	4361251	CallExpression	"pj_ks ( pj , ""ret"" , sdb_const_get ( TDB , sdb_fmt ( ""func.%s.ret"" , name ) , 0 ) )"		4361136	0					
ANR	4361252	Callee	pj_ks		4361136	0					
ANR	4361253	Identifier	pj_ks		4361136	0					
ANR	4361254	ArgumentList	pj		4361136	1					
ANR	4361255	Argument	pj		4361136	0					
ANR	4361256	Identifier	pj		4361136	0					
ANR	4361257	Argument	"""ret"""		4361136	1					
ANR	4361258	PrimaryExpression	"""ret"""		4361136	0					
ANR	4361259	Argument	"sdb_const_get ( TDB , sdb_fmt ( ""func.%s.ret"" , name ) , 0 )"		4361136	2					
ANR	4361260	CallExpression	"sdb_const_get ( TDB , sdb_fmt ( ""func.%s.ret"" , name ) , 0 )"		4361136	0					
ANR	4361261	Callee	sdb_const_get		4361136	0					
ANR	4361262	Identifier	sdb_const_get		4361136	0					
ANR	4361263	ArgumentList	TDB		4361136	1					
ANR	4361264	Argument	TDB		4361136	0					
ANR	4361265	Identifier	TDB		4361136	0					
ANR	4361266	Argument	"sdb_fmt ( ""func.%s.ret"" , name )"		4361136	1					
ANR	4361267	CallExpression	"sdb_fmt ( ""func.%s.ret"" , name )"		4361136	0					
ANR	4361268	Callee	sdb_fmt		4361136	0					
ANR	4361269	Identifier	sdb_fmt		4361136	0					
ANR	4361270	ArgumentList	"""func.%s.ret"""		4361136	1					
ANR	4361271	Argument	"""func.%s.ret"""		4361136	0					
ANR	4361272	PrimaryExpression	"""func.%s.ret"""		4361136	0					
ANR	4361273	Argument	name		4361136	1					
ANR	4361274	Identifier	name		4361136	0					
ANR	4361275	Argument	0		4361136	2					
ANR	4361276	PrimaryExpression	0		4361136	0					
ANR	4361277	ExpressionStatement	"pj_k ( pj , ""args"" )"	607:1:17119:17136	4361136	9	True				
ANR	4361278	CallExpression	"pj_k ( pj , ""args"" )"		4361136	0					
ANR	4361279	Callee	pj_k		4361136	0					
ANR	4361280	Identifier	pj_k		4361136	0					
ANR	4361281	ArgumentList	pj		4361136	1					
ANR	4361282	Argument	pj		4361136	0					
ANR	4361283	Identifier	pj		4361136	0					
ANR	4361284	Argument	"""args"""		4361136	1					
ANR	4361285	PrimaryExpression	"""args"""		4361136	0					
ANR	4361286	ExpressionStatement	pj_a ( pj )	608:1:17139:17148	4361136	10	True				
ANR	4361287	CallExpression	pj_a ( pj )		4361136	0					
ANR	4361288	Callee	pj_a		4361136	0					
ANR	4361289	Identifier	pj_a		4361136	0					
ANR	4361290	ArgumentList	pj		4361136	1					
ANR	4361291	Argument	pj		4361136	0					
ANR	4361292	Identifier	pj		4361136	0					
ANR	4361293	ForStatement	for ( i = 0 ; i < args ; i ++ )		4361136	11					
ANR	4361294	ForInit	i = 0 ;	609:6:17156:17161	4361136	0	True				
ANR	4361295	AssignmentExpression	i = 0		4361136	0		=			
ANR	4361296	Identifier	i		4361136	0					
ANR	4361297	PrimaryExpression	0		4361136	1					
ANR	4361298	Condition	i < args	609:13:17163:17170	4361136	1	True				
ANR	4361299	RelationalExpression	i < args		4361136	0		<			
ANR	4361300	Identifier	i		4361136	0					
ANR	4361301	Identifier	args		4361136	1					
ANR	4361302	PostIncDecOperationExpression	i ++	609:23:17173:17175	4361136	2	True				
ANR	4361303	Identifier	i		4361136	0					
ANR	4361304	IncDec	++		4361136	1					
ANR	4361305	CompoundStatement		20:2:548:579	4361136	3					
ANR	4361306	IdentifierDeclStatement	"char * type = sdb_get ( TDB , sdb_fmt ( ""func.%s.arg.%d"" , name , i ) , 0 ) ;"	610:2:17182:17248	4361136	0	True				
ANR	4361307	IdentifierDecl	"* type = sdb_get ( TDB , sdb_fmt ( ""func.%s.arg.%d"" , name , i ) , 0 )"		4361136	0					
ANR	4361308	IdentifierDeclType	char *		4361136	0					
ANR	4361309	Identifier	type		4361136	1					
ANR	4361310	AssignmentExpression	"* type = sdb_get ( TDB , sdb_fmt ( ""func.%s.arg.%d"" , name , i ) , 0 )"		4361136	2		=			
ANR	4361311	Identifier	type		4361136	0					
ANR	4361312	CallExpression	"sdb_get ( TDB , sdb_fmt ( ""func.%s.arg.%d"" , name , i ) , 0 )"		4361136	1					
ANR	4361313	Callee	sdb_get		4361136	0					
ANR	4361314	Identifier	sdb_get		4361136	0					
ANR	4361315	ArgumentList	TDB		4361136	1					
ANR	4361316	Argument	TDB		4361136	0					
ANR	4361317	Identifier	TDB		4361136	0					
ANR	4361318	Argument	"sdb_fmt ( ""func.%s.arg.%d"" , name , i )"		4361136	1					
ANR	4361319	CallExpression	"sdb_fmt ( ""func.%s.arg.%d"" , name , i )"		4361136	0					
ANR	4361320	Callee	sdb_fmt		4361136	0					
ANR	4361321	Identifier	sdb_fmt		4361136	0					
ANR	4361322	ArgumentList	"""func.%s.arg.%d"""		4361136	1					
ANR	4361323	Argument	"""func.%s.arg.%d"""		4361136	0					
ANR	4361324	PrimaryExpression	"""func.%s.arg.%d"""		4361136	0					
ANR	4361325	Argument	name		4361136	1					
ANR	4361326	Identifier	name		4361136	0					
ANR	4361327	Argument	i		4361136	2					
ANR	4361328	Identifier	i		4361136	0					
ANR	4361329	Argument	0		4361136	2					
ANR	4361330	PrimaryExpression	0		4361136	0					
ANR	4361331	IfStatement	if ( ! type )		4361136	1					
ANR	4361332	Condition	! type	611:6:17256:17260	4361136	0	True				
ANR	4361333	UnaryOperationExpression	! type		4361136	0					
ANR	4361334	UnaryOperator	!		4361136	0					
ANR	4361335	Identifier	type		4361136	1					
ANR	4361336	CompoundStatement		17:13:527:527	4361136	1					
ANR	4361337	ContinueStatement	continue ;	612:3:17268:17276	4361136	0	True				
ANR	4361338	IdentifierDeclStatement	"char * name = strchr ( type , ',' ) ;"	614:2:17284:17315	4361136	2	True				
ANR	4361339	IdentifierDecl	"* name = strchr ( type , ',' )"		4361136	0					
ANR	4361340	IdentifierDeclType	char *		4361136	0					
ANR	4361341	Identifier	name		4361136	1					
ANR	4361342	AssignmentExpression	"* name = strchr ( type , ',' )"		4361136	2		=			
ANR	4361343	Identifier	name		4361136	0					
ANR	4361344	CallExpression	"strchr ( type , ',' )"		4361136	1					
ANR	4361345	Callee	strchr		4361136	0					
ANR	4361346	Identifier	strchr		4361136	0					
ANR	4361347	ArgumentList	type		4361136	1					
ANR	4361348	Argument	type		4361136	0					
ANR	4361349	Identifier	type		4361136	0					
ANR	4361350	Argument	"','"		4361136	1					
ANR	4361351	PrimaryExpression	"','"		4361136	0					
ANR	4361352	IfStatement	if ( name )		4361136	3					
ANR	4361353	Condition	name	615:6:17323:17326	4361136	0	True				
ANR	4361354	Identifier	name		4361136	0					
ANR	4361355	CompoundStatement		21:12:593:593	4361136	1					
ANR	4361356	ExpressionStatement	* name ++ = 0	616:3:17334:17345	4361136	0	True				
ANR	4361357	AssignmentExpression	* name ++ = 0		4361136	0		=			
ANR	4361358	UnaryOperationExpression	* name ++		4361136	0					
ANR	4361359	UnaryOperator	*		4361136	0					
ANR	4361360	PostIncDecOperationExpression	name ++		4361136	1					
ANR	4361361	Identifier	name		4361136	0					
ANR	4361362	IncDec	++		4361136	1					
ANR	4361363	PrimaryExpression	0		4361136	1					
ANR	4361364	ExpressionStatement	pj_o ( pj )	618:2:17353:17362	4361136	4	True				
ANR	4361365	CallExpression	pj_o ( pj )		4361136	0					
ANR	4361366	Callee	pj_o		4361136	0					
ANR	4361367	Identifier	pj_o		4361136	0					
ANR	4361368	ArgumentList	pj		4361136	1					
ANR	4361369	Argument	pj		4361136	0					
ANR	4361370	Identifier	pj		4361136	0					
ANR	4361371	ExpressionStatement	"pj_ks ( pj , ""type"" , type )"	619:2:17366:17390	4361136	5	True				
ANR	4361372	CallExpression	"pj_ks ( pj , ""type"" , type )"		4361136	0					
ANR	4361373	Callee	pj_ks		4361136	0					
ANR	4361374	Identifier	pj_ks		4361136	0					
ANR	4361375	ArgumentList	pj		4361136	1					
ANR	4361376	Argument	pj		4361136	0					
ANR	4361377	Identifier	pj		4361136	0					
ANR	4361378	Argument	"""type"""		4361136	1					
ANR	4361379	PrimaryExpression	"""type"""		4361136	0					
ANR	4361380	Argument	type		4361136	2					
ANR	4361381	Identifier	type		4361136	0					
ANR	4361382	IfStatement	if ( name )		4361136	6					
ANR	4361383	Condition	name	620:6:17398:17401	4361136	0	True				
ANR	4361384	Identifier	name		4361136	0					
ANR	4361385	CompoundStatement		26:12:668:668	4361136	1					
ANR	4361386	ExpressionStatement	"pj_ks ( pj , ""name"" , name )"	621:3:17409:17433	4361136	0	True				
ANR	4361387	CallExpression	"pj_ks ( pj , ""name"" , name )"		4361136	0					
ANR	4361388	Callee	pj_ks		4361136	0					
ANR	4361389	Identifier	pj_ks		4361136	0					
ANR	4361390	ArgumentList	pj		4361136	1					
ANR	4361391	Argument	pj		4361136	0					
ANR	4361392	Identifier	pj		4361136	0					
ANR	4361393	Argument	"""name"""		4361136	1					
ANR	4361394	PrimaryExpression	"""name"""		4361136	0					
ANR	4361395	Argument	name		4361136	2					
ANR	4361396	Identifier	name		4361136	0					
ANR	4361397	ElseStatement	else		4361136	0					
ANR	4361398	CompoundStatement		28:9:708:708	4361136	0					
ANR	4361399	ExpressionStatement	"pj_ks ( pj , ""name"" , ""(null)"" )"	623:3:17449:17477	4361136	0	True				
ANR	4361400	CallExpression	"pj_ks ( pj , ""name"" , ""(null)"" )"		4361136	0					
ANR	4361401	Callee	pj_ks		4361136	0					
ANR	4361402	Identifier	pj_ks		4361136	0					
ANR	4361403	ArgumentList	pj		4361136	1					
ANR	4361404	Argument	pj		4361136	0					
ANR	4361405	Identifier	pj		4361136	0					
ANR	4361406	Argument	"""name"""		4361136	1					
ANR	4361407	PrimaryExpression	"""name"""		4361136	0					
ANR	4361408	Argument	"""(null)"""		4361136	2					
ANR	4361409	PrimaryExpression	"""(null)"""		4361136	0					
ANR	4361410	ExpressionStatement	pj_end ( pj )	625:2:17485:17496	4361136	7	True				
ANR	4361411	CallExpression	pj_end ( pj )		4361136	0					
ANR	4361412	Callee	pj_end		4361136	0					
ANR	4361413	Identifier	pj_end		4361136	0					
ANR	4361414	ArgumentList	pj		4361136	1					
ANR	4361415	Argument	pj		4361136	0					
ANR	4361416	Identifier	pj		4361136	0					
ANR	4361417	ExpressionStatement	pj_end ( pj )	627:1:17502:17513	4361136	12	True				
ANR	4361418	CallExpression	pj_end ( pj )		4361136	0					
ANR	4361419	Callee	pj_end		4361136	0					
ANR	4361420	Identifier	pj_end		4361136	0					
ANR	4361421	ArgumentList	pj		4361136	1					
ANR	4361422	Argument	pj		4361136	0					
ANR	4361423	Identifier	pj		4361136	0					
ANR	4361424	ExpressionStatement	pj_end ( pj )	628:1:17516:17527	4361136	13	True				
ANR	4361425	CallExpression	pj_end ( pj )		4361136	0					
ANR	4361426	Callee	pj_end		4361136	0					
ANR	4361427	Identifier	pj_end		4361136	0					
ANR	4361428	ArgumentList	pj		4361136	1					
ANR	4361429	Argument	pj		4361136	0					
ANR	4361430	Identifier	pj		4361136	0					
ANR	4361431	ExpressionStatement	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"	629:1:17530:17566	4361136	14	True				
ANR	4361432	CallExpression	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"		4361136	0					
ANR	4361433	Callee	r_cons_printf		4361136	0					
ANR	4361434	Identifier	r_cons_printf		4361136	0					
ANR	4361435	ArgumentList	"""%s"""		4361136	1					
ANR	4361436	Argument	"""%s"""		4361136	0					
ANR	4361437	PrimaryExpression	"""%s"""		4361136	0					
ANR	4361438	Argument	pj_string ( pj )		4361136	1					
ANR	4361439	CallExpression	pj_string ( pj )		4361136	0					
ANR	4361440	Callee	pj_string		4361136	0					
ANR	4361441	Identifier	pj_string		4361136	0					
ANR	4361442	ArgumentList	pj		4361136	1					
ANR	4361443	Argument	pj		4361136	0					
ANR	4361444	Identifier	pj		4361136	0					
ANR	4361445	ExpressionStatement	pj_free ( pj )	630:1:17569:17581	4361136	15	True				
ANR	4361446	CallExpression	pj_free ( pj )		4361136	0					
ANR	4361447	Callee	pj_free		4361136	0					
ANR	4361448	Identifier	pj_free		4361136	0					
ANR	4361449	ArgumentList	pj		4361136	1					
ANR	4361450	Argument	pj		4361136	0					
ANR	4361451	Identifier	pj		4361136	0					
ANR	4361452	ExpressionStatement	free ( res )	631:1:17584:17594	4361136	16	True				
ANR	4361453	CallExpression	free ( res )		4361136	0					
ANR	4361454	Callee	free		4361136	0					
ANR	4361455	Identifier	free		4361136	0					
ANR	4361456	ArgumentList	res		4361136	1					
ANR	4361457	Argument	res		4361136	0					
ANR	4361458	Identifier	res		4361136	0					
ANR	4361459	ReturnType	static void		4361136	1					
ANR	4361460	Identifier	printFunctionType		4361136	2					
ANR	4361461	ParameterList	"RCore * core , const char * input"		4361136	3					
ANR	4361462	Parameter	RCore * core	595:30:16703:16713	4361136	0	True				
ANR	4361463	ParameterType	RCore *		4361136	0					
ANR	4361464	Identifier	core		4361136	1					
ANR	4361465	Parameter	const char * input	595:43:16716:16732	4361136	1	True				
ANR	4361466	ParameterType	const char *		4361136	0					
ANR	4361467	Identifier	input		4361136	1					
ANR	4361468	CFGEntryNode	ENTRY		4361136		True				
ANR	4361469	CFGExitNode	EXIT		4361136		True				
ANR	4361470	Symbol	pj_string		4361136						
ANR	4361471	Symbol	* core		4361136						
ANR	4361472	Symbol	strchr		4361136						
ANR	4361473	Symbol	core -> anal -> sdb_types		4361136						
ANR	4361474	Symbol	type		4361136						
ANR	4361475	Symbol	core -> anal		4361136						
ANR	4361476	Symbol	sdb_const_get		4361136						
ANR	4361477	Symbol	TDB		4361136						
ANR	4361478	Symbol	sdb_fmt		4361136						
ANR	4361479	Symbol	* * core		4361136						
ANR	4361480	Symbol	* name ++		4361136						
ANR	4361481	Symbol	sdb_num_get		4361136						
ANR	4361482	Symbol	res		4361136						
ANR	4361483	Symbol	NULL		4361136						
ANR	4361484	Symbol	sdb_querys		4361136						
ANR	4361485	Symbol	i		4361136						
ANR	4361486	Symbol	sdb_get		4361136						
ANR	4361487	Symbol	args		4361136						
ANR	4361488	Symbol	core		4361136						
ANR	4361489	Symbol	input		4361136						
ANR	4361490	Symbol	* core -> anal		4361136						
ANR	4361491	Symbol	name		4361136						
ANR	4361492	Symbol	r_str_trim_ro		4361136						
ANR	4361493	Symbol	pj		4361136						
ANR	4361494	Symbol	pj_new		4361136						
ANR	4361495	Function	printfunc_json_cb	634:0:17599:17722							
ANR	4361496	FunctionDef	"printfunc_json_cb (void * user , const char * k , const char * v)"		4361495	0					
ANR	4361497	CompoundStatement		634:71:17670:17722	4361495	0					
ANR	4361498	ExpressionStatement	"printFunctionType ( ( RCore * ) user , k )"	635:1:17673:17709	4361495	0	True				
ANR	4361499	CallExpression	"printFunctionType ( ( RCore * ) user , k )"		4361495	0					
ANR	4361500	Callee	printFunctionType		4361495	0					
ANR	4361501	Identifier	printFunctionType		4361495	0					
ANR	4361502	ArgumentList	( RCore * ) user		4361495	1					
ANR	4361503	Argument	( RCore * ) user		4361495	0					
ANR	4361504	CastExpression	( RCore * ) user		4361495	0					
ANR	4361505	CastTarget	RCore *		4361495	0					
ANR	4361506	Identifier	user		4361495	1					
ANR	4361507	Argument	k		4361495	1					
ANR	4361508	Identifier	k		4361495	0					
ANR	4361509	ReturnStatement	return 1 ;	636:1:17712:17720	4361495	1	True				
ANR	4361510	PrimaryExpression	1		4361495	0					
ANR	4361511	ReturnType	static int		4361495	1					
ANR	4361512	Identifier	printfunc_json_cb		4361495	2					
ANR	4361513	ParameterList	"void * user , const char * k , const char * v"		4361495	3					
ANR	4361514	Parameter	void * user	634:29:17628:17637	4361495	0	True				
ANR	4361515	ParameterType	void *		4361495	0					
ANR	4361516	Identifier	user		4361495	1					
ANR	4361517	Parameter	const char * k	634:41:17640:17652	4361495	1	True				
ANR	4361518	ParameterType	const char *		4361495	0					
ANR	4361519	Identifier	k		4361495	1					
ANR	4361520	Parameter	const char * v	634:56:17655:17667	4361495	2	True				
ANR	4361521	ParameterType	const char *		4361495	0					
ANR	4361522	Identifier	v		4361495	1					
ANR	4361523	CFGEntryNode	ENTRY		4361495		True				
ANR	4361524	CFGExitNode	EXIT		4361495		True				
ANR	4361525	Symbol	v		4361495						
ANR	4361526	Symbol	k		4361495						
ANR	4361527	Symbol	user		4361495						
ANR	4361528	Function	stdiffunc	639:0:17725:17838							
ANR	4361529	FunctionDef	"stdiffunc (void * p , const char * k , const char * v)"		4361528	0					
ANR	4361530	CompoundStatement		639:60:17785:17838	4361528	0					
ANR	4361531	ReturnStatement	"return ! strncmp ( v , ""func"" , strlen ( ""func"" ) + 1 ) ;"	640:1:17788:17836	4361528	0	True				
ANR	4361532	UnaryOperationExpression	"! strncmp ( v , ""func"" , strlen ( ""func"" ) + 1 )"		4361528	0					
ANR	4361533	UnaryOperator	!		4361528	0					
ANR	4361534	CallExpression	"strncmp ( v , ""func"" , strlen ( ""func"" ) + 1 )"		4361528	1					
ANR	4361535	Callee	strncmp		4361528	0					
ANR	4361536	Identifier	strncmp		4361528	0					
ANR	4361537	ArgumentList	v		4361528	1					
ANR	4361538	Argument	v		4361528	0					
ANR	4361539	Identifier	v		4361528	0					
ANR	4361540	Argument	"""func"""		4361528	1					
ANR	4361541	PrimaryExpression	"""func"""		4361528	0					
ANR	4361542	Argument	"strlen ( ""func"" ) + 1"		4361528	2					
ANR	4361543	AdditiveExpression	"strlen ( ""func"" ) + 1"		4361528	0		+			
ANR	4361544	CallExpression	"strlen ( ""func"" )"		4361528	0					
ANR	4361545	Callee	strlen		4361528	0					
ANR	4361546	Identifier	strlen		4361528	0					
ANR	4361547	ArgumentList	"""func"""		4361528	1					
ANR	4361548	Argument	"""func"""		4361528	0					
ANR	4361549	PrimaryExpression	"""func"""		4361528	0					
ANR	4361550	PrimaryExpression	1		4361528	1					
ANR	4361551	ReturnType	static int		4361528	1					
ANR	4361552	Identifier	stdiffunc		4361528	2					
ANR	4361553	ParameterList	"void * p , const char * k , const char * v"		4361528	3					
ANR	4361554	Parameter	void * p	639:21:17746:17752	4361528	0	True				
ANR	4361555	ParameterType	void *		4361528	0					
ANR	4361556	Identifier	p		4361528	1					
ANR	4361557	Parameter	const char * k	639:30:17755:17767	4361528	1	True				
ANR	4361558	ParameterType	const char *		4361528	0					
ANR	4361559	Identifier	k		4361528	1					
ANR	4361560	Parameter	const char * v	639:45:17770:17782	4361528	2	True				
ANR	4361561	ParameterType	const char *		4361528	0					
ANR	4361562	Identifier	v		4361528	1					
ANR	4361563	CFGEntryNode	ENTRY		4361528		True				
ANR	4361564	CFGExitNode	EXIT		4361528		True				
ANR	4361565	Symbol	p		4361528						
ANR	4361566	Symbol	strncmp		4361528						
ANR	4361567	Symbol	strlen		4361528						
ANR	4361568	Symbol	v		4361528						
ANR	4361569	Symbol	k		4361528						
ANR	4361570	Function	stdifunion	643:0:17841:17957							
ANR	4361571	FunctionDef	"stdifunion (void * p , const char * k , const char * v)"		4361570	0					
ANR	4361572	CompoundStatement		643:61:17902:17957	4361570	0					
ANR	4361573	ReturnStatement	"return ! strncmp ( v , ""union"" , strlen ( ""union"" ) + 1 ) ;"	644:1:17905:17955	4361570	0	True				
ANR	4361574	UnaryOperationExpression	"! strncmp ( v , ""union"" , strlen ( ""union"" ) + 1 )"		4361570	0					
ANR	4361575	UnaryOperator	!		4361570	0					
ANR	4361576	CallExpression	"strncmp ( v , ""union"" , strlen ( ""union"" ) + 1 )"		4361570	1					
ANR	4361577	Callee	strncmp		4361570	0					
ANR	4361578	Identifier	strncmp		4361570	0					
ANR	4361579	ArgumentList	v		4361570	1					
ANR	4361580	Argument	v		4361570	0					
ANR	4361581	Identifier	v		4361570	0					
ANR	4361582	Argument	"""union"""		4361570	1					
ANR	4361583	PrimaryExpression	"""union"""		4361570	0					
ANR	4361584	Argument	"strlen ( ""union"" ) + 1"		4361570	2					
ANR	4361585	AdditiveExpression	"strlen ( ""union"" ) + 1"		4361570	0		+			
ANR	4361586	CallExpression	"strlen ( ""union"" )"		4361570	0					
ANR	4361587	Callee	strlen		4361570	0					
ANR	4361588	Identifier	strlen		4361570	0					
ANR	4361589	ArgumentList	"""union"""		4361570	1					
ANR	4361590	Argument	"""union"""		4361570	0					
ANR	4361591	PrimaryExpression	"""union"""		4361570	0					
ANR	4361592	PrimaryExpression	1		4361570	1					
ANR	4361593	ReturnType	static int		4361570	1					
ANR	4361594	Identifier	stdifunion		4361570	2					
ANR	4361595	ParameterList	"void * p , const char * k , const char * v"		4361570	3					
ANR	4361596	Parameter	void * p	643:22:17863:17869	4361570	0	True				
ANR	4361597	ParameterType	void *		4361570	0					
ANR	4361598	Identifier	p		4361570	1					
ANR	4361599	Parameter	const char * k	643:31:17872:17884	4361570	1	True				
ANR	4361600	ParameterType	const char *		4361570	0					
ANR	4361601	Identifier	k		4361570	1					
ANR	4361602	Parameter	const char * v	643:46:17887:17899	4361570	2	True				
ANR	4361603	ParameterType	const char *		4361570	0					
ANR	4361604	Identifier	v		4361570	1					
ANR	4361605	CFGEntryNode	ENTRY		4361570		True				
ANR	4361606	CFGExitNode	EXIT		4361570		True				
ANR	4361607	Symbol	p		4361570						
ANR	4361608	Symbol	strncmp		4361570						
ANR	4361609	Symbol	strlen		4361570						
ANR	4361610	Symbol	v		4361570						
ANR	4361611	Symbol	k		4361570						
ANR	4361612	Function	sdbdeletelink	647:0:17960:18156							
ANR	4361613	FunctionDef	"sdbdeletelink (void * p , const char * k , const char * v)"		4361612	0					
ANR	4361614	CompoundStatement		647:64:18024:18156	4361612	0					
ANR	4361615	IdentifierDeclStatement	RCore * core = ( RCore * ) p ;	648:1:18027:18051	4361612	0	True				
ANR	4361616	IdentifierDecl	* core = ( RCore * ) p		4361612	0					
ANR	4361617	IdentifierDeclType	RCore *		4361612	0					
ANR	4361618	Identifier	core		4361612	1					
ANR	4361619	AssignmentExpression	* core = ( RCore * ) p		4361612	2		=			
ANR	4361620	Identifier	core		4361612	0					
ANR	4361621	CastExpression	( RCore * ) p		4361612	1					
ANR	4361622	CastTarget	RCore *		4361612	0					
ANR	4361623	Identifier	p		4361612	1					
ANR	4361624	IfStatement	"if ( ! strncmp ( k , ""link."" , strlen ( ""link."" ) ) )"		4361612	1					
ANR	4361625	Condition	"! strncmp ( k , ""link."" , strlen ( ""link."" ) )"	649:5:18058:18096	4361612	0	True				
ANR	4361626	UnaryOperationExpression	"! strncmp ( k , ""link."" , strlen ( ""link."" ) )"		4361612	0					
ANR	4361627	UnaryOperator	!		4361612	0					
ANR	4361628	CallExpression	"strncmp ( k , ""link."" , strlen ( ""link."" ) )"		4361612	1					
ANR	4361629	Callee	strncmp		4361612	0					
ANR	4361630	Identifier	strncmp		4361612	0					
ANR	4361631	ArgumentList	k		4361612	1					
ANR	4361632	Argument	k		4361612	0					
ANR	4361633	Identifier	k		4361612	0					
ANR	4361634	Argument	"""link."""		4361612	1					
ANR	4361635	PrimaryExpression	"""link."""		4361612	0					
ANR	4361636	Argument	"strlen ( ""link."" )"		4361612	2					
ANR	4361637	CallExpression	"strlen ( ""link."" )"		4361612	0					
ANR	4361638	Callee	strlen		4361612	0					
ANR	4361639	Identifier	strlen		4361612	0					
ANR	4361640	ArgumentList	"""link."""		4361612	1					
ANR	4361641	Argument	"""link."""		4361612	0					
ANR	4361642	PrimaryExpression	"""link."""		4361612	0					
ANR	4361643	CompoundStatement		3:46:74:74	4361612	1					
ANR	4361644	ExpressionStatement	"r_type_del ( core -> anal -> sdb_types , k )"	650:2:18103:18140	4361612	0	True				
ANR	4361645	CallExpression	"r_type_del ( core -> anal -> sdb_types , k )"		4361612	0					
ANR	4361646	Callee	r_type_del		4361612	0					
ANR	4361647	Identifier	r_type_del		4361612	0					
ANR	4361648	ArgumentList	core -> anal -> sdb_types		4361612	1					
ANR	4361649	Argument	core -> anal -> sdb_types		4361612	0					
ANR	4361650	PtrMemberAccess	core -> anal -> sdb_types		4361612	0					
ANR	4361651	PtrMemberAccess	core -> anal		4361612	0					
ANR	4361652	Identifier	core		4361612	0					
ANR	4361653	Identifier	anal		4361612	1					
ANR	4361654	Identifier	sdb_types		4361612	1					
ANR	4361655	Argument	k		4361612	1					
ANR	4361656	Identifier	k		4361612	0					
ANR	4361657	ReturnStatement	return 1 ;	652:1:18146:18154	4361612	2	True				
ANR	4361658	PrimaryExpression	1		4361612	0					
ANR	4361659	ReturnType	static int		4361612	1					
ANR	4361660	Identifier	sdbdeletelink		4361612	2					
ANR	4361661	ParameterList	"void * p , const char * k , const char * v"		4361612	3					
ANR	4361662	Parameter	void * p	647:25:17985:17991	4361612	0	True				
ANR	4361663	ParameterType	void *		4361612	0					
ANR	4361664	Identifier	p		4361612	1					
ANR	4361665	Parameter	const char * k	647:34:17994:18006	4361612	1	True				
ANR	4361666	ParameterType	const char *		4361612	0					
ANR	4361667	Identifier	k		4361612	1					
ANR	4361668	Parameter	const char * v	647:49:18009:18021	4361612	2	True				
ANR	4361669	ParameterType	const char *		4361612	0					
ANR	4361670	Identifier	v		4361612	1					
ANR	4361671	CFGEntryNode	ENTRY		4361612		True				
ANR	4361672	CFGExitNode	EXIT		4361612		True				
ANR	4361673	Symbol	p		4361612						
ANR	4361674	Symbol	core		4361612						
ANR	4361675	Symbol	strlen		4361612						
ANR	4361676	Symbol	strncmp		4361612						
ANR	4361677	Symbol	* core -> anal		4361612						
ANR	4361678	Symbol	v		4361612						
ANR	4361679	Symbol	* core		4361612						
ANR	4361680	Symbol	k		4361612						
ANR	4361681	Symbol	core -> anal -> sdb_types		4361612						
ANR	4361682	Symbol	core -> anal		4361612						
ANR	4361683	Symbol	* * core		4361612						
ANR	4361684	Function	stdiflink	655:0:18159:18270							
ANR	4361685	FunctionDef	"stdiflink (void * p , const char * k , const char * v)"		4361684	0					
ANR	4361686	CompoundStatement		655:60:18219:18270	4361684	0					
ANR	4361687	ReturnStatement	"return ! strncmp ( k , ""link."" , strlen ( ""link."" ) ) ;"	656:1:18222:18268	4361684	0	True				
ANR	4361688	UnaryOperationExpression	"! strncmp ( k , ""link."" , strlen ( ""link."" ) )"		4361684	0					
ANR	4361689	UnaryOperator	!		4361684	0					
ANR	4361690	CallExpression	"strncmp ( k , ""link."" , strlen ( ""link."" ) )"		4361684	1					
ANR	4361691	Callee	strncmp		4361684	0					
ANR	4361692	Identifier	strncmp		4361684	0					
ANR	4361693	ArgumentList	k		4361684	1					
ANR	4361694	Argument	k		4361684	0					
ANR	4361695	Identifier	k		4361684	0					
ANR	4361696	Argument	"""link."""		4361684	1					
ANR	4361697	PrimaryExpression	"""link."""		4361684	0					
ANR	4361698	Argument	"strlen ( ""link."" )"		4361684	2					
ANR	4361699	CallExpression	"strlen ( ""link."" )"		4361684	0					
ANR	4361700	Callee	strlen		4361684	0					
ANR	4361701	Identifier	strlen		4361684	0					
ANR	4361702	ArgumentList	"""link."""		4361684	1					
ANR	4361703	Argument	"""link."""		4361684	0					
ANR	4361704	PrimaryExpression	"""link."""		4361684	0					
ANR	4361705	ReturnType	static int		4361684	1					
ANR	4361706	Identifier	stdiflink		4361684	2					
ANR	4361707	ParameterList	"void * p , const char * k , const char * v"		4361684	3					
ANR	4361708	Parameter	void * p	655:21:18180:18186	4361684	0	True				
ANR	4361709	ParameterType	void *		4361684	0					
ANR	4361710	Identifier	p		4361684	1					
ANR	4361711	Parameter	const char * k	655:30:18189:18201	4361684	1	True				
ANR	4361712	ParameterType	const char *		4361684	0					
ANR	4361713	Identifier	k		4361684	1					
ANR	4361714	Parameter	const char * v	655:45:18204:18216	4361684	2	True				
ANR	4361715	ParameterType	const char *		4361684	0					
ANR	4361716	Identifier	v		4361684	1					
ANR	4361717	CFGEntryNode	ENTRY		4361684		True				
ANR	4361718	CFGExitNode	EXIT		4361684		True				
ANR	4361719	Symbol	p		4361684						
ANR	4361720	Symbol	strncmp		4361684						
ANR	4361721	Symbol	strlen		4361684						
ANR	4361722	Symbol	v		4361684						
ANR	4361723	Symbol	k		4361684						
ANR	4361724	Function	print_link_cb	659:0:18273:18407							
ANR	4361725	FunctionDef	"print_link_cb (void * p , const char * k , const char * v)"		4361724	0					
ANR	4361726	CompoundStatement		659:64:18337:18407	4361724	0					
ANR	4361727	ExpressionStatement	"r_cons_printf ( ""0x%s = %s\\n"" , k + strlen ( ""link."" ) , v )"	660:1:18340:18394	4361724	0	True				
ANR	4361728	CallExpression	"r_cons_printf ( ""0x%s = %s\\n"" , k + strlen ( ""link."" ) , v )"		4361724	0					
ANR	4361729	Callee	r_cons_printf		4361724	0					
ANR	4361730	Identifier	r_cons_printf		4361724	0					
ANR	4361731	ArgumentList	"""0x%s = %s\\n"""		4361724	1					
ANR	4361732	Argument	"""0x%s = %s\\n"""		4361724	0					
ANR	4361733	PrimaryExpression	"""0x%s = %s\\n"""		4361724	0					
ANR	4361734	Argument	"k + strlen ( ""link."" )"		4361724	1					
ANR	4361735	AdditiveExpression	"k + strlen ( ""link."" )"		4361724	0		+			
ANR	4361736	Identifier	k		4361724	0					
ANR	4361737	CallExpression	"strlen ( ""link."" )"		4361724	1					
ANR	4361738	Callee	strlen		4361724	0					
ANR	4361739	Identifier	strlen		4361724	0					
ANR	4361740	ArgumentList	"""link."""		4361724	1					
ANR	4361741	Argument	"""link."""		4361724	0					
ANR	4361742	PrimaryExpression	"""link."""		4361724	0					
ANR	4361743	Argument	v		4361724	2					
ANR	4361744	Identifier	v		4361724	0					
ANR	4361745	ReturnStatement	return 1 ;	661:1:18397:18405	4361724	1	True				
ANR	4361746	PrimaryExpression	1		4361724	0					
ANR	4361747	ReturnType	static int		4361724	1					
ANR	4361748	Identifier	print_link_cb		4361724	2					
ANR	4361749	ParameterList	"void * p , const char * k , const char * v"		4361724	3					
ANR	4361750	Parameter	void * p	659:25:18298:18304	4361724	0	True				
ANR	4361751	ParameterType	void *		4361724	0					
ANR	4361752	Identifier	p		4361724	1					
ANR	4361753	Parameter	const char * k	659:34:18307:18319	4361724	1	True				
ANR	4361754	ParameterType	const char *		4361724	0					
ANR	4361755	Identifier	k		4361724	1					
ANR	4361756	Parameter	const char * v	659:49:18322:18334	4361724	2	True				
ANR	4361757	ParameterType	const char *		4361724	0					
ANR	4361758	Identifier	v		4361724	1					
ANR	4361759	CFGEntryNode	ENTRY		4361724		True				
ANR	4361760	CFGExitNode	EXIT		4361724		True				
ANR	4361761	Symbol	p		4361724						
ANR	4361762	Symbol	strlen		4361724						
ANR	4361763	Symbol	v		4361724						
ANR	4361764	Symbol	k		4361724						
ANR	4361765	Function	print_link_json_cb	664:0:18410:18555							
ANR	4361766	FunctionDef	"print_link_json_cb (void * p , const char * k , const char * v)"		4361765	0					
ANR	4361767	CompoundStatement		664:69:18479:18555	4361765	0					
ANR	4361768	ExpressionStatement	"r_cons_printf ( ""{\\""0x%s\\"":\\""%s\\""}"" , k + strlen ( ""link."" ) , v )"	665:1:18482:18542	4361765	0	True				
ANR	4361769	CallExpression	"r_cons_printf ( ""{\\""0x%s\\"":\\""%s\\""}"" , k + strlen ( ""link."" ) , v )"		4361765	0					
ANR	4361770	Callee	r_cons_printf		4361765	0					
ANR	4361771	Identifier	r_cons_printf		4361765	0					
ANR	4361772	ArgumentList	"""{\\""0x%s\\"":\\""%s\\""}"""		4361765	1					
ANR	4361773	Argument	"""{\\""0x%s\\"":\\""%s\\""}"""		4361765	0					
ANR	4361774	PrimaryExpression	"""{\\""0x%s\\"":\\""%s\\""}"""		4361765	0					
ANR	4361775	Argument	"k + strlen ( ""link."" )"		4361765	1					
ANR	4361776	AdditiveExpression	"k + strlen ( ""link."" )"		4361765	0		+			
ANR	4361777	Identifier	k		4361765	0					
ANR	4361778	CallExpression	"strlen ( ""link."" )"		4361765	1					
ANR	4361779	Callee	strlen		4361765	0					
ANR	4361780	Identifier	strlen		4361765	0					
ANR	4361781	ArgumentList	"""link."""		4361765	1					
ANR	4361782	Argument	"""link."""		4361765	0					
ANR	4361783	PrimaryExpression	"""link."""		4361765	0					
ANR	4361784	Argument	v		4361765	2					
ANR	4361785	Identifier	v		4361765	0					
ANR	4361786	ReturnStatement	return 1 ;	666:1:18545:18553	4361765	1	True				
ANR	4361787	PrimaryExpression	1		4361765	0					
ANR	4361788	ReturnType	static int		4361765	1					
ANR	4361789	Identifier	print_link_json_cb		4361765	2					
ANR	4361790	ParameterList	"void * p , const char * k , const char * v"		4361765	3					
ANR	4361791	Parameter	void * p	664:30:18440:18446	4361765	0	True				
ANR	4361792	ParameterType	void *		4361765	0					
ANR	4361793	Identifier	p		4361765	1					
ANR	4361794	Parameter	const char * k	664:39:18449:18461	4361765	1	True				
ANR	4361795	ParameterType	const char *		4361765	0					
ANR	4361796	Identifier	k		4361765	1					
ANR	4361797	Parameter	const char * v	664:54:18464:18476	4361765	2	True				
ANR	4361798	ParameterType	const char *		4361765	0					
ANR	4361799	Identifier	v		4361765	1					
ANR	4361800	CFGEntryNode	ENTRY		4361765		True				
ANR	4361801	CFGExitNode	EXIT		4361765		True				
ANR	4361802	Symbol	p		4361765						
ANR	4361803	Symbol	strlen		4361765						
ANR	4361804	Symbol	v		4361765						
ANR	4361805	Symbol	k		4361765						
ANR	4361806	Function	print_link_r_cb	669:0:18558:18697							
ANR	4361807	FunctionDef	"print_link_r_cb (void * p , const char * k , const char * v)"		4361806	0					
ANR	4361808	CompoundStatement		669:66:18624:18697	4361806	0					
ANR	4361809	ExpressionStatement	"r_cons_printf ( ""tl %s = 0x%s\\n"" , v , k + strlen ( ""link."" ) )"	670:1:18627:18684	4361806	0	True				
ANR	4361810	CallExpression	"r_cons_printf ( ""tl %s = 0x%s\\n"" , v , k + strlen ( ""link."" ) )"		4361806	0					
ANR	4361811	Callee	r_cons_printf		4361806	0					
ANR	4361812	Identifier	r_cons_printf		4361806	0					
ANR	4361813	ArgumentList	"""tl %s = 0x%s\\n"""		4361806	1					
ANR	4361814	Argument	"""tl %s = 0x%s\\n"""		4361806	0					
ANR	4361815	PrimaryExpression	"""tl %s = 0x%s\\n"""		4361806	0					
ANR	4361816	Argument	v		4361806	1					
ANR	4361817	Identifier	v		4361806	0					
ANR	4361818	Argument	"k + strlen ( ""link."" )"		4361806	2					
ANR	4361819	AdditiveExpression	"k + strlen ( ""link."" )"		4361806	0		+			
ANR	4361820	Identifier	k		4361806	0					
ANR	4361821	CallExpression	"strlen ( ""link."" )"		4361806	1					
ANR	4361822	Callee	strlen		4361806	0					
ANR	4361823	Identifier	strlen		4361806	0					
ANR	4361824	ArgumentList	"""link."""		4361806	1					
ANR	4361825	Argument	"""link."""		4361806	0					
ANR	4361826	PrimaryExpression	"""link."""		4361806	0					
ANR	4361827	ReturnStatement	return 1 ;	671:1:18687:18695	4361806	1	True				
ANR	4361828	PrimaryExpression	1		4361806	0					
ANR	4361829	ReturnType	static int		4361806	1					
ANR	4361830	Identifier	print_link_r_cb		4361806	2					
ANR	4361831	ParameterList	"void * p , const char * k , const char * v"		4361806	3					
ANR	4361832	Parameter	void * p	669:27:18585:18591	4361806	0	True				
ANR	4361833	ParameterType	void *		4361806	0					
ANR	4361834	Identifier	p		4361806	1					
ANR	4361835	Parameter	const char * k	669:36:18594:18606	4361806	1	True				
ANR	4361836	ParameterType	const char *		4361806	0					
ANR	4361837	Identifier	k		4361806	1					
ANR	4361838	Parameter	const char * v	669:51:18609:18621	4361806	2	True				
ANR	4361839	ParameterType	const char *		4361806	0					
ANR	4361840	Identifier	v		4361806	1					
ANR	4361841	CFGEntryNode	ENTRY		4361806		True				
ANR	4361842	CFGExitNode	EXIT		4361806		True				
ANR	4361843	Symbol	p		4361806						
ANR	4361844	Symbol	strlen		4361806						
ANR	4361845	Symbol	v		4361806						
ANR	4361846	Symbol	k		4361806						
ANR	4361847	Function	print_link_readable_cb	674:0:18700:19029							
ANR	4361848	FunctionDef	"print_link_readable_cb (void * p , const char * k , const char * v)"		4361847	0					
ANR	4361849	CompoundStatement		674:73:18773:19029	4361847	0					
ANR	4361850	IdentifierDeclStatement	RCore * core = ( RCore * ) p ;	675:1:18776:18800	4361847	0	True				
ANR	4361851	IdentifierDecl	* core = ( RCore * ) p		4361847	0					
ANR	4361852	IdentifierDeclType	RCore *		4361847	0					
ANR	4361853	Identifier	core		4361847	1					
ANR	4361854	AssignmentExpression	* core = ( RCore * ) p		4361847	2		=			
ANR	4361855	Identifier	core		4361847	0					
ANR	4361856	CastExpression	( RCore * ) p		4361847	1					
ANR	4361857	CastTarget	RCore *		4361847	0					
ANR	4361858	Identifier	p		4361847	1					
ANR	4361859	IdentifierDeclStatement	"char * fmt = r_type_format ( core -> anal -> sdb_types , v ) ;"	676:1:18803:18855	4361847	1	True				
ANR	4361860	IdentifierDecl	"* fmt = r_type_format ( core -> anal -> sdb_types , v )"		4361847	0					
ANR	4361861	IdentifierDeclType	char *		4361847	0					
ANR	4361862	Identifier	fmt		4361847	1					
ANR	4361863	AssignmentExpression	"* fmt = r_type_format ( core -> anal -> sdb_types , v )"		4361847	2		=			
ANR	4361864	Identifier	fmt		4361847	0					
ANR	4361865	CallExpression	"r_type_format ( core -> anal -> sdb_types , v )"		4361847	1					
ANR	4361866	Callee	r_type_format		4361847	0					
ANR	4361867	Identifier	r_type_format		4361847	0					
ANR	4361868	ArgumentList	core -> anal -> sdb_types		4361847	1					
ANR	4361869	Argument	core -> anal -> sdb_types		4361847	0					
ANR	4361870	PtrMemberAccess	core -> anal -> sdb_types		4361847	0					
ANR	4361871	PtrMemberAccess	core -> anal		4361847	0					
ANR	4361872	Identifier	core		4361847	0					
ANR	4361873	Identifier	anal		4361847	1					
ANR	4361874	Identifier	sdb_types		4361847	1					
ANR	4361875	Argument	v		4361847	1					
ANR	4361876	Identifier	v		4361847	0					
ANR	4361877	IfStatement	if ( ! fmt )		4361847	2					
ANR	4361878	Condition	! fmt	677:5:18862:18865	4361847	0	True				
ANR	4361879	UnaryOperationExpression	! fmt		4361847	0					
ANR	4361880	UnaryOperator	!		4361847	0					
ANR	4361881	Identifier	fmt		4361847	1					
ANR	4361882	CompoundStatement		4:11:94:94	4361847	1					
ANR	4361883	ExpressionStatement	"eprintf ( ""Can't fint type %s"" , v )"	678:2:18872:18905	4361847	0	True				
ANR	4361884	CallExpression	"eprintf ( ""Can't fint type %s"" , v )"		4361847	0					
ANR	4361885	Callee	eprintf		4361847	0					
ANR	4361886	Identifier	eprintf		4361847	0					
ANR	4361887	ArgumentList	"""Can't fint type %s"""		4361847	1					
ANR	4361888	Argument	"""Can't fint type %s"""		4361847	0					
ANR	4361889	PrimaryExpression	"""Can't fint type %s"""		4361847	0					
ANR	4361890	Argument	v		4361847	1					
ANR	4361891	Identifier	v		4361847	0					
ANR	4361892	ReturnStatement	return 1 ;	679:2:18909:18917	4361847	1	True				
ANR	4361893	PrimaryExpression	1		4361847	0					
ANR	4361894	ExpressionStatement	"r_cons_printf ( ""(%s)\\n"" , v )"	681:1:18923:18950	4361847	3	True				
ANR	4361895	CallExpression	"r_cons_printf ( ""(%s)\\n"" , v )"		4361847	0					
ANR	4361896	Callee	r_cons_printf		4361847	0					
ANR	4361897	Identifier	r_cons_printf		4361847	0					
ANR	4361898	ArgumentList	"""(%s)\\n"""		4361847	1					
ANR	4361899	Argument	"""(%s)\\n"""		4361847	0					
ANR	4361900	PrimaryExpression	"""(%s)\\n"""		4361847	0					
ANR	4361901	Argument	v		4361847	1					
ANR	4361902	Identifier	v		4361847	0					
ANR	4361903	ExpressionStatement	"r_core_cmdf ( core , ""pf %s @ 0x%s\\n"" , fmt , k + strlen ( ""link."" ) )"	682:1:18953:19016	4361847	4	True				
ANR	4361904	CallExpression	"r_core_cmdf ( core , ""pf %s @ 0x%s\\n"" , fmt , k + strlen ( ""link."" ) )"		4361847	0					
ANR	4361905	Callee	r_core_cmdf		4361847	0					
ANR	4361906	Identifier	r_core_cmdf		4361847	0					
ANR	4361907	ArgumentList	core		4361847	1					
ANR	4361908	Argument	core		4361847	0					
ANR	4361909	Identifier	core		4361847	0					
ANR	4361910	Argument	"""pf %s @ 0x%s\\n"""		4361847	1					
ANR	4361911	PrimaryExpression	"""pf %s @ 0x%s\\n"""		4361847	0					
ANR	4361912	Argument	fmt		4361847	2					
ANR	4361913	Identifier	fmt		4361847	0					
ANR	4361914	Argument	"k + strlen ( ""link."" )"		4361847	3					
ANR	4361915	AdditiveExpression	"k + strlen ( ""link."" )"		4361847	0		+			
ANR	4361916	Identifier	k		4361847	0					
ANR	4361917	CallExpression	"strlen ( ""link."" )"		4361847	1					
ANR	4361918	Callee	strlen		4361847	0					
ANR	4361919	Identifier	strlen		4361847	0					
ANR	4361920	ArgumentList	"""link."""		4361847	1					
ANR	4361921	Argument	"""link."""		4361847	0					
ANR	4361922	PrimaryExpression	"""link."""		4361847	0					
ANR	4361923	ReturnStatement	return 1 ;	683:1:19019:19027	4361847	5	True				
ANR	4361924	PrimaryExpression	1		4361847	0					
ANR	4361925	ReturnType	static int		4361847	1					
ANR	4361926	Identifier	print_link_readable_cb		4361847	2					
ANR	4361927	ParameterList	"void * p , const char * k , const char * v"		4361847	3					
ANR	4361928	Parameter	void * p	674:34:18734:18740	4361847	0	True				
ANR	4361929	ParameterType	void *		4361847	0					
ANR	4361930	Identifier	p		4361847	1					
ANR	4361931	Parameter	const char * k	674:43:18743:18755	4361847	1	True				
ANR	4361932	ParameterType	const char *		4361847	0					
ANR	4361933	Identifier	k		4361847	1					
ANR	4361934	Parameter	const char * v	674:58:18758:18770	4361847	2	True				
ANR	4361935	ParameterType	const char *		4361847	0					
ANR	4361936	Identifier	v		4361847	1					
ANR	4361937	CFGEntryNode	ENTRY		4361847		True				
ANR	4361938	CFGExitNode	EXIT		4361847		True				
ANR	4361939	Symbol	p		4361847						
ANR	4361940	Symbol	core		4361847						
ANR	4361941	Symbol	strlen		4361847						
ANR	4361942	Symbol	* core -> anal		4361847						
ANR	4361943	Symbol	v		4361847						
ANR	4361944	Symbol	* core		4361847						
ANR	4361945	Symbol	k		4361847						
ANR	4361946	Symbol	core -> anal -> sdb_types		4361847						
ANR	4361947	Symbol	r_type_format		4361847						
ANR	4361948	Symbol	fmt		4361847						
ANR	4361949	Symbol	core -> anal		4361847						
ANR	4361950	Symbol	* * core		4361847						
ANR	4361951	Function	print_link_readable_json_cb	686:0:19032:19391							
ANR	4361952	FunctionDef	"print_link_readable_json_cb (void * p , const char * k , const char * v)"		4361951	0					
ANR	4361953	CompoundStatement		686:78:19110:19391	4361951	0					
ANR	4361954	IdentifierDeclStatement	RCore * core = ( RCore * ) p ;	687:1:19113:19137	4361951	0	True				
ANR	4361955	IdentifierDecl	* core = ( RCore * ) p		4361951	0					
ANR	4361956	IdentifierDeclType	RCore *		4361951	0					
ANR	4361957	Identifier	core		4361951	1					
ANR	4361958	AssignmentExpression	* core = ( RCore * ) p		4361951	2		=			
ANR	4361959	Identifier	core		4361951	0					
ANR	4361960	CastExpression	( RCore * ) p		4361951	1					
ANR	4361961	CastTarget	RCore *		4361951	0					
ANR	4361962	Identifier	p		4361951	1					
ANR	4361963	IdentifierDeclStatement	"char * fmt = r_type_format ( core -> anal -> sdb_types , v ) ;"	688:1:19140:19192	4361951	1	True				
ANR	4361964	IdentifierDecl	"* fmt = r_type_format ( core -> anal -> sdb_types , v )"		4361951	0					
ANR	4361965	IdentifierDeclType	char *		4361951	0					
ANR	4361966	Identifier	fmt		4361951	1					
ANR	4361967	AssignmentExpression	"* fmt = r_type_format ( core -> anal -> sdb_types , v )"		4361951	2		=			
ANR	4361968	Identifier	fmt		4361951	0					
ANR	4361969	CallExpression	"r_type_format ( core -> anal -> sdb_types , v )"		4361951	1					
ANR	4361970	Callee	r_type_format		4361951	0					
ANR	4361971	Identifier	r_type_format		4361951	0					
ANR	4361972	ArgumentList	core -> anal -> sdb_types		4361951	1					
ANR	4361973	Argument	core -> anal -> sdb_types		4361951	0					
ANR	4361974	PtrMemberAccess	core -> anal -> sdb_types		4361951	0					
ANR	4361975	PtrMemberAccess	core -> anal		4361951	0					
ANR	4361976	Identifier	core		4361951	0					
ANR	4361977	Identifier	anal		4361951	1					
ANR	4361978	Identifier	sdb_types		4361951	1					
ANR	4361979	Argument	v		4361951	1					
ANR	4361980	Identifier	v		4361951	0					
ANR	4361981	IfStatement	if ( ! fmt )		4361951	2					
ANR	4361982	Condition	! fmt	689:5:19199:19202	4361951	0	True				
ANR	4361983	UnaryOperationExpression	! fmt		4361951	0					
ANR	4361984	UnaryOperator	!		4361951	0					
ANR	4361985	Identifier	fmt		4361951	1					
ANR	4361986	CompoundStatement		4:11:94:94	4361951	1					
ANR	4361987	ExpressionStatement	"eprintf ( ""Can't fint type %s"" , v )"	690:2:19209:19242	4361951	0	True				
ANR	4361988	CallExpression	"eprintf ( ""Can't fint type %s"" , v )"		4361951	0					
ANR	4361989	Callee	eprintf		4361951	0					
ANR	4361990	Identifier	eprintf		4361951	0					
ANR	4361991	ArgumentList	"""Can't fint type %s"""		4361951	1					
ANR	4361992	Argument	"""Can't fint type %s"""		4361951	0					
ANR	4361993	PrimaryExpression	"""Can't fint type %s"""		4361951	0					
ANR	4361994	Argument	v		4361951	1					
ANR	4361995	Identifier	v		4361951	0					
ANR	4361996	ReturnStatement	return 1 ;	691:2:19246:19254	4361951	1	True				
ANR	4361997	PrimaryExpression	1		4361951	0					
ANR	4361998	ExpressionStatement	"r_cons_printf ( ""{\\""%s\\"":"" , v )"	693:1:19260:19289	4361951	3	True				
ANR	4361999	CallExpression	"r_cons_printf ( ""{\\""%s\\"":"" , v )"		4361951	0					
ANR	4362000	Callee	r_cons_printf		4361951	0					
ANR	4362001	Identifier	r_cons_printf		4361951	0					
ANR	4362002	ArgumentList	"""{\\""%s\\"":"""		4361951	1					
ANR	4362003	Argument	"""{\\""%s\\"":"""		4361951	0					
ANR	4362004	PrimaryExpression	"""{\\""%s\\"":"""		4361951	0					
ANR	4362005	Argument	v		4361951	1					
ANR	4362006	Identifier	v		4361951	0					
ANR	4362007	ExpressionStatement	"r_core_cmdf ( core , ""pfj %s @ 0x%s\\n"" , fmt , k + strlen ( ""link."" ) )"	694:1:19292:19356	4361951	4	True				
ANR	4362008	CallExpression	"r_core_cmdf ( core , ""pfj %s @ 0x%s\\n"" , fmt , k + strlen ( ""link."" ) )"		4361951	0					
ANR	4362009	Callee	r_core_cmdf		4361951	0					
ANR	4362010	Identifier	r_core_cmdf		4361951	0					
ANR	4362011	ArgumentList	core		4361951	1					
ANR	4362012	Argument	core		4361951	0					
ANR	4362013	Identifier	core		4361951	0					
ANR	4362014	Argument	"""pfj %s @ 0x%s\\n"""		4361951	1					
ANR	4362015	PrimaryExpression	"""pfj %s @ 0x%s\\n"""		4361951	0					
ANR	4362016	Argument	fmt		4361951	2					
ANR	4362017	Identifier	fmt		4361951	0					
ANR	4362018	Argument	"k + strlen ( ""link."" )"		4361951	3					
ANR	4362019	AdditiveExpression	"k + strlen ( ""link."" )"		4361951	0		+			
ANR	4362020	Identifier	k		4361951	0					
ANR	4362021	CallExpression	"strlen ( ""link."" )"		4361951	1					
ANR	4362022	Callee	strlen		4361951	0					
ANR	4362023	Identifier	strlen		4361951	0					
ANR	4362024	ArgumentList	"""link."""		4361951	1					
ANR	4362025	Argument	"""link."""		4361951	0					
ANR	4362026	PrimaryExpression	"""link."""		4361951	0					
ANR	4362027	ExpressionStatement	"r_cons_printf ( ""}"" )"	695:1:19359:19378	4361951	5	True				
ANR	4362028	CallExpression	"r_cons_printf ( ""}"" )"		4361951	0					
ANR	4362029	Callee	r_cons_printf		4361951	0					
ANR	4362030	Identifier	r_cons_printf		4361951	0					
ANR	4362031	ArgumentList	"""}"""		4361951	1					
ANR	4362032	Argument	"""}"""		4361951	0					
ANR	4362033	PrimaryExpression	"""}"""		4361951	0					
ANR	4362034	ReturnStatement	return 1 ;	696:1:19381:19389	4361951	6	True				
ANR	4362035	PrimaryExpression	1		4361951	0					
ANR	4362036	ReturnType	static int		4361951	1					
ANR	4362037	Identifier	print_link_readable_json_cb		4361951	2					
ANR	4362038	ParameterList	"void * p , const char * k , const char * v"		4361951	3					
ANR	4362039	Parameter	void * p	686:39:19071:19077	4361951	0	True				
ANR	4362040	ParameterType	void *		4361951	0					
ANR	4362041	Identifier	p		4361951	1					
ANR	4362042	Parameter	const char * k	686:48:19080:19092	4361951	1	True				
ANR	4362043	ParameterType	const char *		4361951	0					
ANR	4362044	Identifier	k		4361951	1					
ANR	4362045	Parameter	const char * v	686:63:19095:19107	4361951	2	True				
ANR	4362046	ParameterType	const char *		4361951	0					
ANR	4362047	Identifier	v		4361951	1					
ANR	4362048	CFGEntryNode	ENTRY		4361951		True				
ANR	4362049	CFGExitNode	EXIT		4361951		True				
ANR	4362050	Symbol	p		4361951						
ANR	4362051	Symbol	core		4361951						
ANR	4362052	Symbol	strlen		4361951						
ANR	4362053	Symbol	* core -> anal		4361951						
ANR	4362054	Symbol	v		4361951						
ANR	4362055	Symbol	* core		4361951						
ANR	4362056	Symbol	k		4361951						
ANR	4362057	Symbol	core -> anal -> sdb_types		4361951						
ANR	4362058	Symbol	fmt		4361951						
ANR	4362059	Symbol	r_type_format		4361951						
ANR	4362060	Symbol	core -> anal		4361951						
ANR	4362061	Symbol	* * core		4361951						
ANR	4362062	Function	stdiftype	699:0:19394:19507							
ANR	4362063	FunctionDef	"stdiftype (void * p , const char * k , const char * v)"		4362062	0					
ANR	4362064	CompoundStatement		699:60:19454:19507	4362062	0					
ANR	4362065	ReturnStatement	"return ! strncmp ( v , ""type"" , strlen ( ""type"" ) + 1 ) ;"	700:1:19457:19505	4362062	0	True				
ANR	4362066	UnaryOperationExpression	"! strncmp ( v , ""type"" , strlen ( ""type"" ) + 1 )"		4362062	0					
ANR	4362067	UnaryOperator	!		4362062	0					
ANR	4362068	CallExpression	"strncmp ( v , ""type"" , strlen ( ""type"" ) + 1 )"		4362062	1					
ANR	4362069	Callee	strncmp		4362062	0					
ANR	4362070	Identifier	strncmp		4362062	0					
ANR	4362071	ArgumentList	v		4362062	1					
ANR	4362072	Argument	v		4362062	0					
ANR	4362073	Identifier	v		4362062	0					
ANR	4362074	Argument	"""type"""		4362062	1					
ANR	4362075	PrimaryExpression	"""type"""		4362062	0					
ANR	4362076	Argument	"strlen ( ""type"" ) + 1"		4362062	2					
ANR	4362077	AdditiveExpression	"strlen ( ""type"" ) + 1"		4362062	0		+			
ANR	4362078	CallExpression	"strlen ( ""type"" )"		4362062	0					
ANR	4362079	Callee	strlen		4362062	0					
ANR	4362080	Identifier	strlen		4362062	0					
ANR	4362081	ArgumentList	"""type"""		4362062	1					
ANR	4362082	Argument	"""type"""		4362062	0					
ANR	4362083	PrimaryExpression	"""type"""		4362062	0					
ANR	4362084	PrimaryExpression	1		4362062	1					
ANR	4362085	ReturnType	static int		4362062	1					
ANR	4362086	Identifier	stdiftype		4362062	2					
ANR	4362087	ParameterList	"void * p , const char * k , const char * v"		4362062	3					
ANR	4362088	Parameter	void * p	699:21:19415:19421	4362062	0	True				
ANR	4362089	ParameterType	void *		4362062	0					
ANR	4362090	Identifier	p		4362062	1					
ANR	4362091	Parameter	const char * k	699:30:19424:19436	4362062	1	True				
ANR	4362092	ParameterType	const char *		4362062	0					
ANR	4362093	Identifier	k		4362062	1					
ANR	4362094	Parameter	const char * v	699:45:19439:19451	4362062	2	True				
ANR	4362095	ParameterType	const char *		4362062	0					
ANR	4362096	Identifier	v		4362062	1					
ANR	4362097	CFGEntryNode	ENTRY		4362062		True				
ANR	4362098	CFGExitNode	EXIT		4362062		True				
ANR	4362099	Symbol	p		4362062						
ANR	4362100	Symbol	strlen		4362062						
ANR	4362101	Symbol	strncmp		4362062						
ANR	4362102	Symbol	v		4362062						
ANR	4362103	Symbol	k		4362062						
ANR	4362104	Function	print_typelist_r_cb	703:0:19510:19630							
ANR	4362105	FunctionDef	"print_typelist_r_cb (void * p , const char * k , const char * v)"		4362104	0					
ANR	4362106	CompoundStatement		703:70:19580:19630	4362104	0					
ANR	4362107	ExpressionStatement	"r_cons_printf ( ""tk %s=%s\\n"" , k , v )"	704:1:19583:19617	4362104	0	True				
ANR	4362108	CallExpression	"r_cons_printf ( ""tk %s=%s\\n"" , k , v )"		4362104	0					
ANR	4362109	Callee	r_cons_printf		4362104	0					
ANR	4362110	Identifier	r_cons_printf		4362104	0					
ANR	4362111	ArgumentList	"""tk %s=%s\\n"""		4362104	1					
ANR	4362112	Argument	"""tk %s=%s\\n"""		4362104	0					
ANR	4362113	PrimaryExpression	"""tk %s=%s\\n"""		4362104	0					
ANR	4362114	Argument	k		4362104	1					
ANR	4362115	Identifier	k		4362104	0					
ANR	4362116	Argument	v		4362104	2					
ANR	4362117	Identifier	v		4362104	0					
ANR	4362118	ReturnStatement	return 1 ;	705:1:19620:19628	4362104	1	True				
ANR	4362119	PrimaryExpression	1		4362104	0					
ANR	4362120	ReturnType	static int		4362104	1					
ANR	4362121	Identifier	print_typelist_r_cb		4362104	2					
ANR	4362122	ParameterList	"void * p , const char * k , const char * v"		4362104	3					
ANR	4362123	Parameter	void * p	703:31:19541:19547	4362104	0	True				
ANR	4362124	ParameterType	void *		4362104	0					
ANR	4362125	Identifier	p		4362104	1					
ANR	4362126	Parameter	const char * k	703:40:19550:19562	4362104	1	True				
ANR	4362127	ParameterType	const char *		4362104	0					
ANR	4362128	Identifier	k		4362104	1					
ANR	4362129	Parameter	const char * v	703:55:19565:19577	4362104	2	True				
ANR	4362130	ParameterType	const char *		4362104	0					
ANR	4362131	Identifier	v		4362104	1					
ANR	4362132	CFGEntryNode	ENTRY		4362104		True				
ANR	4362133	CFGExitNode	EXIT		4362104		True				
ANR	4362134	Symbol	p		4362104						
ANR	4362135	Symbol	v		4362104						
ANR	4362136	Symbol	k		4362104						
ANR	4362137	Function	print_typelist_json_cb	708:0:19633:20288							
ANR	4362138	FunctionDef	"print_typelist_json_cb (void * p , const char * k , const char * v)"		4362137	0					
ANR	4362139	CompoundStatement		708:73:19706:20288	4362137	0					
ANR	4362140	IdentifierDeclStatement	RCore * core = ( RCore * ) p ;	709:1:19709:19733	4362137	0	True				
ANR	4362141	IdentifierDecl	* core = ( RCore * ) p		4362137	0					
ANR	4362142	IdentifierDeclType	RCore *		4362137	0					
ANR	4362143	Identifier	core		4362137	1					
ANR	4362144	AssignmentExpression	* core = ( RCore * ) p		4362137	2		=			
ANR	4362145	Identifier	core		4362137	0					
ANR	4362146	CastExpression	( RCore * ) p		4362137	1					
ANR	4362147	CastTarget	RCore *		4362137	0					
ANR	4362148	Identifier	p		4362137	1					
ANR	4362149	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	710:1:19736:19754	4362137	1	True				
ANR	4362150	IdentifierDecl	* pj = pj_new ( )		4362137	0					
ANR	4362151	IdentifierDeclType	PJ *		4362137	0					
ANR	4362152	Identifier	pj		4362137	1					
ANR	4362153	AssignmentExpression	* pj = pj_new ( )		4362137	2		=			
ANR	4362154	Identifier	pj		4362137	0					
ANR	4362155	CallExpression	pj_new ( )		4362137	1					
ANR	4362156	Callee	pj_new		4362137	0					
ANR	4362157	Identifier	pj_new		4362137	0					
ANR	4362158	ArgumentList			4362137	1					
ANR	4362159	ExpressionStatement	pj_o ( pj )	711:1:19757:19766	4362137	2	True				
ANR	4362160	CallExpression	pj_o ( pj )		4362137	0					
ANR	4362161	Callee	pj_o		4362137	0					
ANR	4362162	Identifier	pj_o		4362137	0					
ANR	4362163	ArgumentList	pj		4362137	1					
ANR	4362164	Argument	pj		4362137	0					
ANR	4362165	Identifier	pj		4362137	0					
ANR	4362166	IdentifierDeclStatement	Sdb * sdb = core -> anal -> sdb_types ;	712:1:19769:19801	4362137	3	True				
ANR	4362167	IdentifierDecl	* sdb = core -> anal -> sdb_types		4362137	0					
ANR	4362168	IdentifierDeclType	Sdb *		4362137	0					
ANR	4362169	Identifier	sdb		4362137	1					
ANR	4362170	AssignmentExpression	* sdb = core -> anal -> sdb_types		4362137	2		=			
ANR	4362171	Identifier	sdb		4362137	0					
ANR	4362172	PtrMemberAccess	core -> anal -> sdb_types		4362137	1					
ANR	4362173	PtrMemberAccess	core -> anal		4362137	0					
ANR	4362174	Identifier	core		4362137	0					
ANR	4362175	Identifier	anal		4362137	1					
ANR	4362176	Identifier	sdb_types		4362137	1					
ANR	4362177	IdentifierDeclStatement	"char * sizecmd = r_str_newf ( ""type.%s.size"" , k ) ;"	713:1:19804:19850	4362137	4	True				
ANR	4362178	IdentifierDecl	"* sizecmd = r_str_newf ( ""type.%s.size"" , k )"		4362137	0					
ANR	4362179	IdentifierDeclType	char *		4362137	0					
ANR	4362180	Identifier	sizecmd		4362137	1					
ANR	4362181	AssignmentExpression	"* sizecmd = r_str_newf ( ""type.%s.size"" , k )"		4362137	2		=			
ANR	4362182	Identifier	sizecmd		4362137	0					
ANR	4362183	CallExpression	"r_str_newf ( ""type.%s.size"" , k )"		4362137	1					
ANR	4362184	Callee	r_str_newf		4362137	0					
ANR	4362185	Identifier	r_str_newf		4362137	0					
ANR	4362186	ArgumentList	"""type.%s.size"""		4362137	1					
ANR	4362187	Argument	"""type.%s.size"""		4362137	0					
ANR	4362188	PrimaryExpression	"""type.%s.size"""		4362137	0					
ANR	4362189	Argument	k		4362137	1					
ANR	4362190	Identifier	k		4362137	0					
ANR	4362191	IdentifierDeclStatement	"char * size_s = sdb_querys ( sdb , NULL , - 1 , sizecmd ) ;"	714:1:19853:19903	4362137	5	True				
ANR	4362192	IdentifierDecl	"* size_s = sdb_querys ( sdb , NULL , - 1 , sizecmd )"		4362137	0					
ANR	4362193	IdentifierDeclType	char *		4362137	0					
ANR	4362194	Identifier	size_s		4362137	1					
ANR	4362195	AssignmentExpression	"* size_s = sdb_querys ( sdb , NULL , - 1 , sizecmd )"		4362137	2		=			
ANR	4362196	Identifier	size_s		4362137	0					
ANR	4362197	CallExpression	"sdb_querys ( sdb , NULL , - 1 , sizecmd )"		4362137	1					
ANR	4362198	Callee	sdb_querys		4362137	0					
ANR	4362199	Identifier	sdb_querys		4362137	0					
ANR	4362200	ArgumentList	sdb		4362137	1					
ANR	4362201	Argument	sdb		4362137	0					
ANR	4362202	Identifier	sdb		4362137	0					
ANR	4362203	Argument	NULL		4362137	1					
ANR	4362204	Identifier	NULL		4362137	0					
ANR	4362205	Argument	- 1		4362137	2					
ANR	4362206	UnaryOperationExpression	- 1		4362137	0					
ANR	4362207	UnaryOperator	-		4362137	0					
ANR	4362208	PrimaryExpression	1		4362137	1					
ANR	4362209	Argument	sizecmd		4362137	3					
ANR	4362210	Identifier	sizecmd		4362137	0					
ANR	4362211	IdentifierDeclStatement	"char * formatcmd = r_str_newf ( ""type.%s"" , k ) ;"	715:1:19906:19949	4362137	6	True				
ANR	4362212	IdentifierDecl	"* formatcmd = r_str_newf ( ""type.%s"" , k )"		4362137	0					
ANR	4362213	IdentifierDeclType	char *		4362137	0					
ANR	4362214	Identifier	formatcmd		4362137	1					
ANR	4362215	AssignmentExpression	"* formatcmd = r_str_newf ( ""type.%s"" , k )"		4362137	2		=			
ANR	4362216	Identifier	formatcmd		4362137	0					
ANR	4362217	CallExpression	"r_str_newf ( ""type.%s"" , k )"		4362137	1					
ANR	4362218	Callee	r_str_newf		4362137	0					
ANR	4362219	Identifier	r_str_newf		4362137	0					
ANR	4362220	ArgumentList	"""type.%s"""		4362137	1					
ANR	4362221	Argument	"""type.%s"""		4362137	0					
ANR	4362222	PrimaryExpression	"""type.%s"""		4362137	0					
ANR	4362223	Argument	k		4362137	1					
ANR	4362224	Identifier	k		4362137	0					
ANR	4362225	IdentifierDeclStatement	"char * format_s = sdb_querys ( sdb , NULL , - 1 , formatcmd ) ;"	716:1:19952:20006	4362137	7	True				
ANR	4362226	IdentifierDecl	"* format_s = sdb_querys ( sdb , NULL , - 1 , formatcmd )"		4362137	0					
ANR	4362227	IdentifierDeclType	char *		4362137	0					
ANR	4362228	Identifier	format_s		4362137	1					
ANR	4362229	AssignmentExpression	"* format_s = sdb_querys ( sdb , NULL , - 1 , formatcmd )"		4362137	2		=			
ANR	4362230	Identifier	format_s		4362137	0					
ANR	4362231	CallExpression	"sdb_querys ( sdb , NULL , - 1 , formatcmd )"		4362137	1					
ANR	4362232	Callee	sdb_querys		4362137	0					
ANR	4362233	Identifier	sdb_querys		4362137	0					
ANR	4362234	ArgumentList	sdb		4362137	1					
ANR	4362235	Argument	sdb		4362137	0					
ANR	4362236	Identifier	sdb		4362137	0					
ANR	4362237	Argument	NULL		4362137	1					
ANR	4362238	Identifier	NULL		4362137	0					
ANR	4362239	Argument	- 1		4362137	2					
ANR	4362240	UnaryOperationExpression	- 1		4362137	0					
ANR	4362241	UnaryOperator	-		4362137	0					
ANR	4362242	PrimaryExpression	1		4362137	1					
ANR	4362243	Argument	formatcmd		4362137	3					
ANR	4362244	Identifier	formatcmd		4362137	0					
ANR	4362245	ExpressionStatement	r_str_trim ( format_s )	717:1:20009:20030	4362137	8	True				
ANR	4362246	CallExpression	r_str_trim ( format_s )		4362137	0					
ANR	4362247	Callee	r_str_trim		4362137	0					
ANR	4362248	Identifier	r_str_trim		4362137	0					
ANR	4362249	ArgumentList	format_s		4362137	1					
ANR	4362250	Argument	format_s		4362137	0					
ANR	4362251	Identifier	format_s		4362137	0					
ANR	4362252	ExpressionStatement	"pj_ks ( pj , ""type"" , k )"	718:1:20033:20054	4362137	9	True				
ANR	4362253	CallExpression	"pj_ks ( pj , ""type"" , k )"		4362137	0					
ANR	4362254	Callee	pj_ks		4362137	0					
ANR	4362255	Identifier	pj_ks		4362137	0					
ANR	4362256	ArgumentList	pj		4362137	1					
ANR	4362257	Argument	pj		4362137	0					
ANR	4362258	Identifier	pj		4362137	0					
ANR	4362259	Argument	"""type"""		4362137	1					
ANR	4362260	PrimaryExpression	"""type"""		4362137	0					
ANR	4362261	Argument	k		4362137	2					
ANR	4362262	Identifier	k		4362137	0					
ANR	4362263	ExpressionStatement	"pj_ki ( pj , ""size"" , size_s ? atoi ( size_s ) : - 1 )"	719:1:20057:20104	4362137	10	True				
ANR	4362264	CallExpression	"pj_ki ( pj , ""size"" , size_s ? atoi ( size_s ) : - 1 )"		4362137	0					
ANR	4362265	Callee	pj_ki		4362137	0					
ANR	4362266	Identifier	pj_ki		4362137	0					
ANR	4362267	ArgumentList	pj		4362137	1					
ANR	4362268	Argument	pj		4362137	0					
ANR	4362269	Identifier	pj		4362137	0					
ANR	4362270	Argument	"""size"""		4362137	1					
ANR	4362271	PrimaryExpression	"""size"""		4362137	0					
ANR	4362272	Argument	size_s ? atoi ( size_s ) : - 1		4362137	2					
ANR	4362273	ConditionalExpression	size_s ? atoi ( size_s ) : - 1		4362137	0					
ANR	4362274	Condition	size_s		4362137	0					
ANR	4362275	Identifier	size_s		4362137	0					
ANR	4362276	CallExpression	atoi ( size_s )		4362137	1					
ANR	4362277	Callee	atoi		4362137	0					
ANR	4362278	Identifier	atoi		4362137	0					
ANR	4362279	ArgumentList	size_s		4362137	1					
ANR	4362280	Argument	size_s		4362137	0					
ANR	4362281	Identifier	size_s		4362137	0					
ANR	4362282	UnaryOperationExpression	- 1		4362137	2					
ANR	4362283	UnaryOperator	-		4362137	0					
ANR	4362284	PrimaryExpression	1		4362137	1					
ANR	4362285	ExpressionStatement	"pj_ks ( pj , ""format"" , format_s )"	720:1:20107:20137	4362137	11	True				
ANR	4362286	CallExpression	"pj_ks ( pj , ""format"" , format_s )"		4362137	0					
ANR	4362287	Callee	pj_ks		4362137	0					
ANR	4362288	Identifier	pj_ks		4362137	0					
ANR	4362289	ArgumentList	pj		4362137	1					
ANR	4362290	Argument	pj		4362137	0					
ANR	4362291	Identifier	pj		4362137	0					
ANR	4362292	Argument	"""format"""		4362137	1					
ANR	4362293	PrimaryExpression	"""format"""		4362137	0					
ANR	4362294	Argument	format_s		4362137	2					
ANR	4362295	Identifier	format_s		4362137	0					
ANR	4362296	ExpressionStatement	pj_end ( pj )	721:1:20140:20151	4362137	12	True				
ANR	4362297	CallExpression	pj_end ( pj )		4362137	0					
ANR	4362298	Callee	pj_end		4362137	0					
ANR	4362299	Identifier	pj_end		4362137	0					
ANR	4362300	ArgumentList	pj		4362137	1					
ANR	4362301	Argument	pj		4362137	0					
ANR	4362302	Identifier	pj		4362137	0					
ANR	4362303	ExpressionStatement	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"	722:1:20154:20190	4362137	13	True				
ANR	4362304	CallExpression	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"		4362137	0					
ANR	4362305	Callee	r_cons_printf		4362137	0					
ANR	4362306	Identifier	r_cons_printf		4362137	0					
ANR	4362307	ArgumentList	"""%s"""		4362137	1					
ANR	4362308	Argument	"""%s"""		4362137	0					
ANR	4362309	PrimaryExpression	"""%s"""		4362137	0					
ANR	4362310	Argument	pj_string ( pj )		4362137	1					
ANR	4362311	CallExpression	pj_string ( pj )		4362137	0					
ANR	4362312	Callee	pj_string		4362137	0					
ANR	4362313	Identifier	pj_string		4362137	0					
ANR	4362314	ArgumentList	pj		4362137	1					
ANR	4362315	Argument	pj		4362137	0					
ANR	4362316	Identifier	pj		4362137	0					
ANR	4362317	ExpressionStatement	pj_free ( pj )	723:1:20193:20205	4362137	14	True				
ANR	4362318	CallExpression	pj_free ( pj )		4362137	0					
ANR	4362319	Callee	pj_free		4362137	0					
ANR	4362320	Identifier	pj_free		4362137	0					
ANR	4362321	ArgumentList	pj		4362137	1					
ANR	4362322	Argument	pj		4362137	0					
ANR	4362323	Identifier	pj		4362137	0					
ANR	4362324	ExpressionStatement	free ( size_s )	724:1:20208:20221	4362137	15	True				
ANR	4362325	CallExpression	free ( size_s )		4362137	0					
ANR	4362326	Callee	free		4362137	0					
ANR	4362327	Identifier	free		4362137	0					
ANR	4362328	ArgumentList	size_s		4362137	1					
ANR	4362329	Argument	size_s		4362137	0					
ANR	4362330	Identifier	size_s		4362137	0					
ANR	4362331	ExpressionStatement	free ( format_s )	725:1:20224:20239	4362137	16	True				
ANR	4362332	CallExpression	free ( format_s )		4362137	0					
ANR	4362333	Callee	free		4362137	0					
ANR	4362334	Identifier	free		4362137	0					
ANR	4362335	ArgumentList	format_s		4362137	1					
ANR	4362336	Argument	format_s		4362137	0					
ANR	4362337	Identifier	format_s		4362137	0					
ANR	4362338	ExpressionStatement	free ( sizecmd )	726:1:20242:20256	4362137	17	True				
ANR	4362339	CallExpression	free ( sizecmd )		4362137	0					
ANR	4362340	Callee	free		4362137	0					
ANR	4362341	Identifier	free		4362137	0					
ANR	4362342	ArgumentList	sizecmd		4362137	1					
ANR	4362343	Argument	sizecmd		4362137	0					
ANR	4362344	Identifier	sizecmd		4362137	0					
ANR	4362345	ExpressionStatement	free ( formatcmd )	727:1:20259:20275	4362137	18	True				
ANR	4362346	CallExpression	free ( formatcmd )		4362137	0					
ANR	4362347	Callee	free		4362137	0					
ANR	4362348	Identifier	free		4362137	0					
ANR	4362349	ArgumentList	formatcmd		4362137	1					
ANR	4362350	Argument	formatcmd		4362137	0					
ANR	4362351	Identifier	formatcmd		4362137	0					
ANR	4362352	ReturnStatement	return 1 ;	728:1:20278:20286	4362137	19	True				
ANR	4362353	PrimaryExpression	1		4362137	0					
ANR	4362354	ReturnType	static int		4362137	1					
ANR	4362355	Identifier	print_typelist_json_cb		4362137	2					
ANR	4362356	ParameterList	"void * p , const char * k , const char * v"		4362137	3					
ANR	4362357	Parameter	void * p	708:34:19667:19673	4362137	0	True				
ANR	4362358	ParameterType	void *		4362137	0					
ANR	4362359	Identifier	p		4362137	1					
ANR	4362360	Parameter	const char * k	708:43:19676:19688	4362137	1	True				
ANR	4362361	ParameterType	const char *		4362137	0					
ANR	4362362	Identifier	k		4362137	1					
ANR	4362363	Parameter	const char * v	708:58:19691:19703	4362137	2	True				
ANR	4362364	ParameterType	const char *		4362137	0					
ANR	4362365	Identifier	v		4362137	1					
ANR	4362366	CFGEntryNode	ENTRY		4362137		True				
ANR	4362367	CFGExitNode	EXIT		4362137		True				
ANR	4362368	Symbol	atoi		4362137						
ANR	4362369	Symbol	NULL		4362137						
ANR	4362370	Symbol	pj_string		4362137						
ANR	4362371	Symbol	* core		4362137						
ANR	4362372	Symbol	size_s		4362137						
ANR	4362373	Symbol	sdb_querys		4362137						
ANR	4362374	Symbol	format_s		4362137						
ANR	4362375	Symbol	k		4362137						
ANR	4362376	Symbol	core -> anal -> sdb_types		4362137						
ANR	4362377	Symbol	r_str_newf		4362137						
ANR	4362378	Symbol	core -> anal		4362137						
ANR	4362379	Symbol	p		4362137						
ANR	4362380	Symbol	sdb		4362137						
ANR	4362381	Symbol	core		4362137						
ANR	4362382	Symbol	* core -> anal		4362137						
ANR	4362383	Symbol	v		4362137						
ANR	4362384	Symbol	sizecmd		4362137						
ANR	4362385	Symbol	formatcmd		4362137						
ANR	4362386	Symbol	pj_new		4362137						
ANR	4362387	Symbol	pj		4362137						
ANR	4362388	Symbol	* * core		4362137						
ANR	4362389	Function	print_keys	731:0:20291:20837							
ANR	4362390	FunctionDef	"print_keys (Sdb * TDB , RCore * core , SdbForeachCallback filter , SdbForeachCallback printfn_cb , bool json)"		4362389	0					
ANR	4362391	CompoundStatement		731:115:20406:20837	4362389	0					
ANR	4362392	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list_filter ( TDB , filter , true ) ;"	732:1:20409:20465	4362389	0	True				
ANR	4362393	IdentifierDecl	"* l = sdb_foreach_list_filter ( TDB , filter , true )"		4362389	0					
ANR	4362394	IdentifierDeclType	SdbList *		4362389	0					
ANR	4362395	Identifier	l		4362389	1					
ANR	4362396	AssignmentExpression	"* l = sdb_foreach_list_filter ( TDB , filter , true )"		4362389	2		=			
ANR	4362397	Identifier	l		4362389	0					
ANR	4362398	CallExpression	"sdb_foreach_list_filter ( TDB , filter , true )"		4362389	1					
ANR	4362399	Callee	sdb_foreach_list_filter		4362389	0					
ANR	4362400	Identifier	sdb_foreach_list_filter		4362389	0					
ANR	4362401	ArgumentList	TDB		4362389	1					
ANR	4362402	Argument	TDB		4362389	0					
ANR	4362403	Identifier	TDB		4362389	0					
ANR	4362404	Argument	filter		4362389	1					
ANR	4362405	Identifier	filter		4362389	0					
ANR	4362406	Argument	true		4362389	2					
ANR	4362407	Identifier	true		4362389	0					
ANR	4362408	IdentifierDeclStatement	SdbListIter * it ;	733:1:20468:20483	4362389	1	True				
ANR	4362409	IdentifierDecl	* it		4362389	0					
ANR	4362410	IdentifierDeclType	SdbListIter *		4362389	0					
ANR	4362411	Identifier	it		4362389	1					
ANR	4362412	IdentifierDeclStatement	SdbKv * kv ;	734:1:20486:20495	4362389	2	True				
ANR	4362413	IdentifierDecl	* kv		4362389	0					
ANR	4362414	IdentifierDeclType	SdbKv *		4362389	0					
ANR	4362415	Identifier	kv		4362389	1					
ANR	4362416	IdentifierDeclStatement	"const char * comma = """" ;"	735:1:20498:20520	4362389	3	True				
ANR	4362417	IdentifierDecl	"* comma = """""		4362389	0					
ANR	4362418	IdentifierDeclType	const char *		4362389	0					
ANR	4362419	Identifier	comma		4362389	1					
ANR	4362420	AssignmentExpression	"* comma = """""		4362389	2		=			
ANR	4362421	Identifier	comma		4362389	0					
ANR	4362422	PrimaryExpression	""""""		4362389	1					
ANR	4362423	IfStatement	if ( json )		4362389	4					
ANR	4362424	Condition	json	737:5:20528:20531	4362389	0	True				
ANR	4362425	Identifier	json		4362389	0					
ANR	4362426	CompoundStatement		7:11:127:127	4362389	1					
ANR	4362427	ExpressionStatement	"r_cons_printf ( ""["" )"	738:2:20538:20557	4362389	0	True				
ANR	4362428	CallExpression	"r_cons_printf ( ""["" )"		4362389	0					
ANR	4362429	Callee	r_cons_printf		4362389	0					
ANR	4362430	Identifier	r_cons_printf		4362389	0					
ANR	4362431	ArgumentList	"""["""		4362389	1					
ANR	4362432	Argument	"""["""		4362389	0					
ANR	4362433	PrimaryExpression	"""["""		4362389	0					
ANR	4362434	Statement	ls_foreach	740:1:20563:20572	4362389	5	True				
ANR	4362435	Statement	(	740:12:20574:20574	4362389	6	True				
ANR	4362436	Statement	l	740:13:20575:20575	4362389	7	True				
ANR	4362437	Statement	","	740:14:20576:20576	4362389	8	True				
ANR	4362438	Statement	it	740:16:20578:20579	4362389	9	True				
ANR	4362439	Statement	","	740:18:20580:20580	4362389	10	True				
ANR	4362440	Statement	kv	740:20:20582:20583	4362389	11	True				
ANR	4362441	Statement	)	740:22:20584:20584	4362389	12	True				
ANR	4362442	CompoundStatement		11:2:183:213	4362389	13					
ANR	4362443	IdentifierDeclStatement	const char * k = sdbkv_key ( kv ) ;	741:2:20590:20620	4362389	0	True				
ANR	4362444	IdentifierDecl	* k = sdbkv_key ( kv )		4362389	0					
ANR	4362445	IdentifierDeclType	const char *		4362389	0					
ANR	4362446	Identifier	k		4362389	1					
ANR	4362447	AssignmentExpression	* k = sdbkv_key ( kv )		4362389	2		=			
ANR	4362448	Identifier	k		4362389	0					
ANR	4362449	CallExpression	sdbkv_key ( kv )		4362389	1					
ANR	4362450	Callee	sdbkv_key		4362389	0					
ANR	4362451	Identifier	sdbkv_key		4362389	0					
ANR	4362452	ArgumentList	kv		4362389	1					
ANR	4362453	Argument	kv		4362389	0					
ANR	4362454	Identifier	kv		4362389	0					
ANR	4362455	IfStatement	if ( ! k || ! * k )		4362389	1					
ANR	4362456	Condition	! k || ! * k	742:6:20628:20636	4362389	0	True				
ANR	4362457	OrExpression	! k || ! * k		4362389	0		||			
ANR	4362458	UnaryOperationExpression	! k		4362389	0					
ANR	4362459	UnaryOperator	!		4362389	0					
ANR	4362460	Identifier	k		4362389	1					
ANR	4362461	UnaryOperationExpression	! * k		4362389	1					
ANR	4362462	UnaryOperator	!		4362389	0					
ANR	4362463	UnaryOperationExpression	* k		4362389	1					
ANR	4362464	UnaryOperator	*		4362389	0					
ANR	4362465	Identifier	k		4362389	1					
ANR	4362466	CompoundStatement		12:17:232:232	4362389	1					
ANR	4362467	ContinueStatement	continue ;	743:3:20644:20652	4362389	0	True				
ANR	4362468	IfStatement	if ( json )		4362389	2					
ANR	4362469	Condition	json	745:6:20664:20667	4362389	0	True				
ANR	4362470	Identifier	json		4362389	0					
ANR	4362471	CompoundStatement		15:12:263:263	4362389	1					
ANR	4362472	ExpressionStatement	"r_cons_printf ( ""%s"" , comma )"	746:3:20675:20702	4362389	0	True				
ANR	4362473	CallExpression	"r_cons_printf ( ""%s"" , comma )"		4362389	0					
ANR	4362474	Callee	r_cons_printf		4362389	0					
ANR	4362475	Identifier	r_cons_printf		4362389	0					
ANR	4362476	ArgumentList	"""%s"""		4362389	1					
ANR	4362477	Argument	"""%s"""		4362389	0					
ANR	4362478	PrimaryExpression	"""%s"""		4362389	0					
ANR	4362479	Argument	comma		4362389	1					
ANR	4362480	Identifier	comma		4362389	0					
ANR	4362481	ExpressionStatement	"comma = "","""	747:3:20707:20718	4362389	1	True				
ANR	4362482	AssignmentExpression	"comma = "","""		4362389	0		=			
ANR	4362483	Identifier	comma		4362389	0					
ANR	4362484	PrimaryExpression	""","""		4362389	1					
ANR	4362485	ExpressionStatement	"printfn_cb ( core , sdbkv_key ( kv ) , sdbkv_value ( kv ) )"	749:2:20726:20777	4362389	3	True				
ANR	4362486	CallExpression	"printfn_cb ( core , sdbkv_key ( kv ) , sdbkv_value ( kv ) )"		4362389	0					
ANR	4362487	Callee	printfn_cb		4362389	0					
ANR	4362488	Identifier	printfn_cb		4362389	0					
ANR	4362489	ArgumentList	core		4362389	1					
ANR	4362490	Argument	core		4362389	0					
ANR	4362491	Identifier	core		4362389	0					
ANR	4362492	Argument	sdbkv_key ( kv )		4362389	1					
ANR	4362493	CallExpression	sdbkv_key ( kv )		4362389	0					
ANR	4362494	Callee	sdbkv_key		4362389	0					
ANR	4362495	Identifier	sdbkv_key		4362389	0					
ANR	4362496	ArgumentList	kv		4362389	1					
ANR	4362497	Argument	kv		4362389	0					
ANR	4362498	Identifier	kv		4362389	0					
ANR	4362499	Argument	sdbkv_value ( kv )		4362389	2					
ANR	4362500	CallExpression	sdbkv_value ( kv )		4362389	0					
ANR	4362501	Callee	sdbkv_value		4362389	0					
ANR	4362502	Identifier	sdbkv_value		4362389	0					
ANR	4362503	ArgumentList	kv		4362389	1					
ANR	4362504	Argument	kv		4362389	0					
ANR	4362505	Identifier	kv		4362389	0					
ANR	4362506	IfStatement	if ( json )		4362389	14					
ANR	4362507	Condition	json	751:5:20787:20790	4362389	0	True				
ANR	4362508	Identifier	json		4362389	0					
ANR	4362509	CompoundStatement		21:11:386:386	4362389	1					
ANR	4362510	ExpressionStatement	"r_cons_printf ( ""]\\n"" )"	752:2:20797:20818	4362389	0	True				
ANR	4362511	CallExpression	"r_cons_printf ( ""]\\n"" )"		4362389	0					
ANR	4362512	Callee	r_cons_printf		4362389	0					
ANR	4362513	Identifier	r_cons_printf		4362389	0					
ANR	4362514	ArgumentList	"""]\\n"""		4362389	1					
ANR	4362515	Argument	"""]\\n"""		4362389	0					
ANR	4362516	PrimaryExpression	"""]\\n"""		4362389	0					
ANR	4362517	ExpressionStatement	ls_free ( l )	754:1:20824:20835	4362389	15	True				
ANR	4362518	CallExpression	ls_free ( l )		4362389	0					
ANR	4362519	Callee	ls_free		4362389	0					
ANR	4362520	Identifier	ls_free		4362389	0					
ANR	4362521	ArgumentList	l		4362389	1					
ANR	4362522	Argument	l		4362389	0					
ANR	4362523	Identifier	l		4362389	0					
ANR	4362524	ReturnType	static void		4362389	1					
ANR	4362525	Identifier	print_keys		4362389	2					
ANR	4362526	ParameterList	"Sdb * TDB , RCore * core , SdbForeachCallback filter , SdbForeachCallback printfn_cb , bool json"		4362389	3					
ANR	4362527	Parameter	Sdb * TDB	731:23:20314:20321	4362389	0	True				
ANR	4362528	ParameterType	Sdb *		4362389	0					
ANR	4362529	Identifier	TDB		4362389	1					
ANR	4362530	Parameter	RCore * core	731:33:20324:20334	4362389	1	True				
ANR	4362531	ParameterType	RCore *		4362389	0					
ANR	4362532	Identifier	core		4362389	1					
ANR	4362533	Parameter	SdbForeachCallback filter	731:46:20337:20361	4362389	2	True				
ANR	4362534	ParameterType	SdbForeachCallback		4362389	0					
ANR	4362535	Identifier	filter		4362389	1					
ANR	4362536	Parameter	SdbForeachCallback printfn_cb	731:73:20364:20392	4362389	3	True				
ANR	4362537	ParameterType	SdbForeachCallback		4362389	0					
ANR	4362538	Identifier	printfn_cb		4362389	1					
ANR	4362539	Parameter	bool json	731:104:20395:20403	4362389	4	True				
ANR	4362540	ParameterType	bool		4362389	0					
ANR	4362541	Identifier	json		4362389	1					
ANR	4362542	CFGEntryNode	ENTRY		4362389		True				
ANR	4362543	CFGExitNode	EXIT		4362389		True				
ANR	4362544	CFGErrorNode	ERROR		4362389		True				
ANR	4362545	Symbol	sdbkv_key		4362389						
ANR	4362546	Symbol	sdb_foreach_list_filter		4362389						
ANR	4362547	Symbol	it		4362389						
ANR	4362548	Symbol	kv		4362389						
ANR	4362549	Symbol	k		4362389						
ANR	4362550	Symbol	sdbkv_value		4362389						
ANR	4362551	Symbol	l		4362389						
ANR	4362552	Symbol	printfn_cb		4362389						
ANR	4362553	Symbol	filter		4362389						
ANR	4362554	Symbol	core		4362389						
ANR	4362555	Symbol	comma		4362389						
ANR	4362556	Symbol	TDB		4362389						
ANR	4362557	Symbol	* k		4362389						
ANR	4362558	Symbol	true		4362389						
ANR	4362559	Symbol	json		4362389						
ANR	4362560	Function	typesList	757:0:20840:21213							
ANR	4362561	FunctionDef	"typesList (RCore * core , int mode)"		4362560	0					
ANR	4362562	CompoundStatement		757:45:20885:21213	4362560	0					
ANR	4362563	SwitchStatement	switch ( mode )		4362560	0					
ANR	4362564	Condition	mode	758:9:20896:20899	4362560	0	True				
ANR	4362565	Identifier	mode		4362560	0					
ANR	4362566	CompoundStatement		2:15:16:16	4362560	1					
ANR	4362567	Label	case 1 :	759:1:20905:20911	4362560	0	True				
ANR	4362568	Label	case '*' :	760:1:20914:20922	4362560	1	True				
ANR	4362569	ExpressionStatement	"print_keys ( core -> anal -> sdb_types , core , NULL , print_typelist_r_cb , false )"	761:2:20926:21000	4362560	2	True				
ANR	4362570	CallExpression	"print_keys ( core -> anal -> sdb_types , core , NULL , print_typelist_r_cb , false )"		4362560	0					
ANR	4362571	Callee	print_keys		4362560	0					
ANR	4362572	Identifier	print_keys		4362560	0					
ANR	4362573	ArgumentList	core -> anal -> sdb_types		4362560	1					
ANR	4362574	Argument	core -> anal -> sdb_types		4362560	0					
ANR	4362575	PtrMemberAccess	core -> anal -> sdb_types		4362560	0					
ANR	4362576	PtrMemberAccess	core -> anal		4362560	0					
ANR	4362577	Identifier	core		4362560	0					
ANR	4362578	Identifier	anal		4362560	1					
ANR	4362579	Identifier	sdb_types		4362560	1					
ANR	4362580	Argument	core		4362560	1					
ANR	4362581	Identifier	core		4362560	0					
ANR	4362582	Argument	NULL		4362560	2					
ANR	4362583	Identifier	NULL		4362560	0					
ANR	4362584	Argument	print_typelist_r_cb		4362560	3					
ANR	4362585	Identifier	print_typelist_r_cb		4362560	0					
ANR	4362586	Argument	false		4362560	4					
ANR	4362587	Identifier	false		4362560	0					
ANR	4362588	BreakStatement	break ;	762:2:21004:21009	4362560	3	True				
ANR	4362589	Label	case 'j' :	763:1:21012:21020	4362560	4	True				
ANR	4362590	ExpressionStatement	"print_keys ( core -> anal -> sdb_types , core , stdiftype , print_typelist_json_cb , true )"	764:2:21024:21105	4362560	5	True				
ANR	4362591	CallExpression	"print_keys ( core -> anal -> sdb_types , core , stdiftype , print_typelist_json_cb , true )"		4362560	0					
ANR	4362592	Callee	print_keys		4362560	0					
ANR	4362593	Identifier	print_keys		4362560	0					
ANR	4362594	ArgumentList	core -> anal -> sdb_types		4362560	1					
ANR	4362595	Argument	core -> anal -> sdb_types		4362560	0					
ANR	4362596	PtrMemberAccess	core -> anal -> sdb_types		4362560	0					
ANR	4362597	PtrMemberAccess	core -> anal		4362560	0					
ANR	4362598	Identifier	core		4362560	0					
ANR	4362599	Identifier	anal		4362560	1					
ANR	4362600	Identifier	sdb_types		4362560	1					
ANR	4362601	Argument	core		4362560	1					
ANR	4362602	Identifier	core		4362560	0					
ANR	4362603	Argument	stdiftype		4362560	2					
ANR	4362604	Identifier	stdiftype		4362560	0					
ANR	4362605	Argument	print_typelist_json_cb		4362560	3					
ANR	4362606	Identifier	print_typelist_json_cb		4362560	0					
ANR	4362607	Argument	true		4362560	4					
ANR	4362608	Identifier	true		4362560	0					
ANR	4362609	BreakStatement	break ;	765:2:21109:21114	4362560	6	True				
ANR	4362610	Label	default :	766:1:21117:21124	4362560	7	True				
ANR	4362611	Identifier	default		4362560	0					
ANR	4362612	ExpressionStatement	"print_keys ( core -> anal -> sdb_types , core , stdiftype , printkey_cb , false )"	767:2:21128:21199	4362560	8	True				
ANR	4362613	CallExpression	"print_keys ( core -> anal -> sdb_types , core , stdiftype , printkey_cb , false )"		4362560	0					
ANR	4362614	Callee	print_keys		4362560	0					
ANR	4362615	Identifier	print_keys		4362560	0					
ANR	4362616	ArgumentList	core -> anal -> sdb_types		4362560	1					
ANR	4362617	Argument	core -> anal -> sdb_types		4362560	0					
ANR	4362618	PtrMemberAccess	core -> anal -> sdb_types		4362560	0					
ANR	4362619	PtrMemberAccess	core -> anal		4362560	0					
ANR	4362620	Identifier	core		4362560	0					
ANR	4362621	Identifier	anal		4362560	1					
ANR	4362622	Identifier	sdb_types		4362560	1					
ANR	4362623	Argument	core		4362560	1					
ANR	4362624	Identifier	core		4362560	0					
ANR	4362625	Argument	stdiftype		4362560	2					
ANR	4362626	Identifier	stdiftype		4362560	0					
ANR	4362627	Argument	printkey_cb		4362560	3					
ANR	4362628	Identifier	printkey_cb		4362560	0					
ANR	4362629	Argument	false		4362560	4					
ANR	4362630	Identifier	false		4362560	0					
ANR	4362631	BreakStatement	break ;	768:2:21203:21208	4362560	9	True				
ANR	4362632	ReturnType	static void		4362560	1					
ANR	4362633	Identifier	typesList		4362560	2					
ANR	4362634	ParameterList	"RCore * core , int mode"		4362560	3					
ANR	4362635	Parameter	RCore * core	757:22:20862:20872	4362560	0	True				
ANR	4362636	ParameterType	RCore *		4362560	0					
ANR	4362637	Identifier	core		4362560	1					
ANR	4362638	Parameter	int mode	757:35:20875:20882	4362560	1	True				
ANR	4362639	ParameterType	int		4362560	0					
ANR	4362640	Identifier	mode		4362560	1					
ANR	4362641	CFGEntryNode	ENTRY		4362560		True				
ANR	4362642	CFGExitNode	EXIT		4362560		True				
ANR	4362643	Symbol	NULL		4362560						
ANR	4362644	Symbol	false		4362560						
ANR	4362645	Symbol	* core		4362560						
ANR	4362646	Symbol	printkey_cb		4362560						
ANR	4362647	Symbol	core -> anal -> sdb_types		4362560						
ANR	4362648	Symbol	stdiftype		4362560						
ANR	4362649	Symbol	core -> anal		4362560						
ANR	4362650	Symbol	mode		4362560						
ANR	4362651	Symbol	print_typelist_json_cb		4362560						
ANR	4362652	Symbol	core		4362560						
ANR	4362653	Symbol	* core -> anal		4362560						
ANR	4362654	Symbol	true		4362560						
ANR	4362655	Symbol	print_typelist_r_cb		4362560						
ANR	4362656	Symbol	* * core		4362560						
ANR	4362657	Function	set_offset_hint	772:0:21216:21796							
ANR	4362658	FunctionDef	"set_offset_hint (RCore * core , RAnalOp op , const char * type , ut64 laddr , ut64 at , int offimm)"		4362657	0					
ANR	4362659	CompoundStatement		772:104:21320:21796	4362657	0					
ANR	4362660	IdentifierDeclStatement	"char * res = r_type_get_struct_memb ( core -> anal -> sdb_types , type , offimm ) ;"	773:1:21323:21395	4362657	0	True				
ANR	4362661	IdentifierDecl	"* res = r_type_get_struct_memb ( core -> anal -> sdb_types , type , offimm )"		4362657	0					
ANR	4362662	IdentifierDeclType	char *		4362657	0					
ANR	4362663	Identifier	res		4362657	1					
ANR	4362664	AssignmentExpression	"* res = r_type_get_struct_memb ( core -> anal -> sdb_types , type , offimm )"		4362657	2		=			
ANR	4362665	Identifier	res		4362657	0					
ANR	4362666	CallExpression	"r_type_get_struct_memb ( core -> anal -> sdb_types , type , offimm )"		4362657	1					
ANR	4362667	Callee	r_type_get_struct_memb		4362657	0					
ANR	4362668	Identifier	r_type_get_struct_memb		4362657	0					
ANR	4362669	ArgumentList	core -> anal -> sdb_types		4362657	1					
ANR	4362670	Argument	core -> anal -> sdb_types		4362657	0					
ANR	4362671	PtrMemberAccess	core -> anal -> sdb_types		4362657	0					
ANR	4362672	PtrMemberAccess	core -> anal		4362657	0					
ANR	4362673	Identifier	core		4362657	0					
ANR	4362674	Identifier	anal		4362657	1					
ANR	4362675	Identifier	sdb_types		4362657	1					
ANR	4362676	Argument	type		4362657	1					
ANR	4362677	Identifier	type		4362657	0					
ANR	4362678	Argument	offimm		4362657	2					
ANR	4362679	Identifier	offimm		4362657	0					
ANR	4362680	IdentifierDeclStatement	const char * cmt = ( ( offimm == 0 ) && res ) ? res : type ;	774:1:21398:21449	4362657	1	True				
ANR	4362681	IdentifierDecl	* cmt = ( ( offimm == 0 ) && res ) ? res : type		4362657	0					
ANR	4362682	IdentifierDeclType	const char *		4362657	0					
ANR	4362683	Identifier	cmt		4362657	1					
ANR	4362684	AssignmentExpression	* cmt = ( ( offimm == 0 ) && res ) ? res : type		4362657	2		=			
ANR	4362685	Identifier	cmt		4362657	0					
ANR	4362686	ConditionalExpression	( ( offimm == 0 ) && res ) ? res : type		4362657	1					
ANR	4362687	Condition	( offimm == 0 ) && res		4362657	0					
ANR	4362688	AndExpression	( offimm == 0 ) && res		4362657	0		&&			
ANR	4362689	EqualityExpression	offimm == 0		4362657	0		==			
ANR	4362690	Identifier	offimm		4362657	0					
ANR	4362691	PrimaryExpression	0		4362657	1					
ANR	4362692	Identifier	res		4362657	1					
ANR	4362693	Identifier	res		4362657	1					
ANR	4362694	Identifier	type		4362657	2					
ANR	4362695	IfStatement	if ( offimm > 0 )		4362657	2					
ANR	4362696	Condition	offimm > 0	775:5:21456:21465	4362657	0	True				
ANR	4362697	RelationalExpression	offimm > 0		4362657	0		>			
ANR	4362698	Identifier	offimm		4362657	0					
ANR	4362699	PrimaryExpression	0		4362657	1					
ANR	4362700	CompoundStatement		4:17:147:147	4362657	1					
ANR	4362701	Statement	char	777:2:21510:21513	4362657	0	True				
ANR	4362702	Statement	*	777:6:21514:21514	4362657	1	True				
ANR	4362703	Statement	query	777:8:21516:21520	4362657	2	True				
ANR	4362704	Statement	=	777:14:21522:21522	4362657	3	True				
ANR	4362705	Statement	sdb_fmt	777:16:21524:21530	4362657	4	True				
ANR	4362706	Statement	(	777:24:21532:21532	4362657	5	True				
ANR	4362707	Statement	"""link.%08"""	777:25:21533:21542	4362657	6	True				
ANR	4362708	Statement	PFMT64x	777:35:21543:21549	4362657	7	True				
ANR	4362709	Statement	","	777:42:21550:21550	4362657	8	True				
ANR	4362710	Statement	laddr	777:44:21552:21556	4362657	9	True				
ANR	4362711	Statement	)	777:49:21557:21557	4362657	10	True				
ANR	4362712	ExpressionStatement		777:50:21558:21558	4362657	11	True				
ANR	4362713	IfStatement	"if ( res && sdb_const_get ( core -> anal -> sdb_types , query , 0 ) )"		4362657	12					
ANR	4362714	Condition	"res && sdb_const_get ( core -> anal -> sdb_types , query , 0 )"	778:6:21566:21619	4362657	0	True				
ANR	4362715	AndExpression	"res && sdb_const_get ( core -> anal -> sdb_types , query , 0 )"		4362657	0		&&			
ANR	4362716	Identifier	res		4362657	0					
ANR	4362717	CallExpression	"sdb_const_get ( core -> anal -> sdb_types , query , 0 )"		4362657	1					
ANR	4362718	Callee	sdb_const_get		4362657	0					
ANR	4362719	Identifier	sdb_const_get		4362657	0					
ANR	4362720	ArgumentList	core -> anal -> sdb_types		4362657	1					
ANR	4362721	Argument	core -> anal -> sdb_types		4362657	0					
ANR	4362722	PtrMemberAccess	core -> anal -> sdb_types		4362657	0					
ANR	4362723	PtrMemberAccess	core -> anal		4362657	0					
ANR	4362724	Identifier	core		4362657	0					
ANR	4362725	Identifier	anal		4362657	1					
ANR	4362726	Identifier	sdb_types		4362657	1					
ANR	4362727	Argument	query		4362657	1					
ANR	4362728	Identifier	query		4362657	0					
ANR	4362729	Argument	0		4362657	2					
ANR	4362730	PrimaryExpression	0		4362657	0					
ANR	4362731	CompoundStatement		7:62:301:301	4362657	1					
ANR	4362732	ExpressionStatement	"r_anal_hint_set_offset ( core -> anal , at , res )"	779:3:21627:21671	4362657	0	True				
ANR	4362733	CallExpression	"r_anal_hint_set_offset ( core -> anal , at , res )"		4362657	0					
ANR	4362734	Callee	r_anal_hint_set_offset		4362657	0					
ANR	4362735	Identifier	r_anal_hint_set_offset		4362657	0					
ANR	4362736	ArgumentList	core -> anal		4362657	1					
ANR	4362737	Argument	core -> anal		4362657	0					
ANR	4362738	PtrMemberAccess	core -> anal		4362657	0					
ANR	4362739	Identifier	core		4362657	0					
ANR	4362740	Identifier	anal		4362657	1					
ANR	4362741	Argument	at		4362657	1					
ANR	4362742	Identifier	at		4362657	0					
ANR	4362743	Argument	res		4362657	2					
ANR	4362744	Identifier	res		4362657	0					
ANR	4362745	ElseStatement	else		4362657	0					
ANR	4362746	IfStatement	if ( cmt && r_anal_op_ismemref ( op . type ) )		4362657	0					
ANR	4362747	Condition	cmt && r_anal_op_ismemref ( op . type )	781:12:21689:21723	4362657	0	True				
ANR	4362748	AndExpression	cmt && r_anal_op_ismemref ( op . type )		4362657	0		&&			
ANR	4362749	Identifier	cmt		4362657	0					
ANR	4362750	CallExpression	r_anal_op_ismemref ( op . type )		4362657	1					
ANR	4362751	Callee	r_anal_op_ismemref		4362657	0					
ANR	4362752	Identifier	r_anal_op_ismemref		4362657	0					
ANR	4362753	ArgumentList	op . type		4362657	1					
ANR	4362754	Argument	op . type		4362657	0					
ANR	4362755	MemberAccess	op . type		4362657	0					
ANR	4362756	Identifier	op		4362657	0					
ANR	4362757	Identifier	type		4362657	1					
ANR	4362758	CompoundStatement		10:49:405:405	4362657	1					
ANR	4362759	ExpressionStatement	"r_meta_set_string ( core -> anal , R_META_TYPE_VARTYPE , at , cmt )"	782:3:21731:21791	4362657	0	True				
ANR	4362760	CallExpression	"r_meta_set_string ( core -> anal , R_META_TYPE_VARTYPE , at , cmt )"		4362657	0					
ANR	4362761	Callee	r_meta_set_string		4362657	0					
ANR	4362762	Identifier	r_meta_set_string		4362657	0					
ANR	4362763	ArgumentList	core -> anal		4362657	1					
ANR	4362764	Argument	core -> anal		4362657	0					
ANR	4362765	PtrMemberAccess	core -> anal		4362657	0					
ANR	4362766	Identifier	core		4362657	0					
ANR	4362767	Identifier	anal		4362657	1					
ANR	4362768	Argument	R_META_TYPE_VARTYPE		4362657	1					
ANR	4362769	Identifier	R_META_TYPE_VARTYPE		4362657	0					
ANR	4362770	Argument	at		4362657	2					
ANR	4362771	Identifier	at		4362657	0					
ANR	4362772	Argument	cmt		4362657	3					
ANR	4362773	Identifier	cmt		4362657	0					
ANR	4362774	ReturnType	static void		4362657	1					
ANR	4362775	Identifier	set_offset_hint		4362657	2					
ANR	4362776	ParameterList	"RCore * core , RAnalOp op , const char * type , ut64 laddr , ut64 at , int offimm"		4362657	3					
ANR	4362777	Parameter	RCore * core	772:28:21244:21254	4362657	0	True				
ANR	4362778	ParameterType	RCore *		4362657	0					
ANR	4362779	Identifier	core		4362657	1					
ANR	4362780	Parameter	RAnalOp op	772:41:21257:21266	4362657	1	True				
ANR	4362781	ParameterType	RAnalOp		4362657	0					
ANR	4362782	Identifier	op		4362657	1					
ANR	4362783	Parameter	const char * type	772:53:21269:21284	4362657	2	True				
ANR	4362784	ParameterType	const char *		4362657	0					
ANR	4362785	Identifier	type		4362657	1					
ANR	4362786	Parameter	ut64 laddr	772:71:21287:21296	4362657	3	True				
ANR	4362787	ParameterType	ut64		4362657	0					
ANR	4362788	Identifier	laddr		4362657	1					
ANR	4362789	Parameter	ut64 at	772:83:21299:21305	4362657	4	True				
ANR	4362790	ParameterType	ut64		4362657	0					
ANR	4362791	Identifier	at		4362657	1					
ANR	4362792	Parameter	int offimm	772:92:21308:21317	4362657	5	True				
ANR	4362793	ParameterType	int		4362657	0					
ANR	4362794	Identifier	offimm		4362657	1					
ANR	4362795	CFGEntryNode	ENTRY		4362657		True				
ANR	4362796	CFGExitNode	EXIT		4362657		True				
ANR	4362797	Symbol	op		4362657						
ANR	4362798	Symbol	res		4362657						
ANR	4362799	Symbol	laddr		4362657						
ANR	4362800	Symbol	op . type		4362657						
ANR	4362801	Symbol	query		4362657						
ANR	4362802	Symbol	* core		4362657						
ANR	4362803	Symbol	r_anal_op_ismemref		4362657						
ANR	4362804	Symbol	core -> anal -> sdb_types		4362657						
ANR	4362805	Symbol	cmt		4362657						
ANR	4362806	Symbol	type		4362657						
ANR	4362807	Symbol	offimm		4362657						
ANR	4362808	Symbol	core -> anal		4362657						
ANR	4362809	Symbol	sdb_const_get		4362657						
ANR	4362810	Symbol	core		4362657						
ANR	4362811	Symbol	at		4362657						
ANR	4362812	Symbol	* core -> anal		4362657						
ANR	4362813	Symbol	R_META_TYPE_VARTYPE		4362657						
ANR	4362814	Symbol	* * core		4362657						
ANR	4362815	Symbol	r_type_get_struct_memb		4362657						
ANR	4362816	Function	r_core_get_stacksz	786:0:21799:22446							
ANR	4362817	FunctionDef	"r_core_get_stacksz (RCore * core , ut64 from , ut64 to)"		4362816	0					
ANR	4362818	CompoundStatement		786:63:21862:22446	4362816	0					
ANR	4362819	IdentifierDeclStatement	"int stack = 0 , maxstack = 0 ;"	787:1:21865:21892	4362816	0	True				
ANR	4362820	IdentifierDecl	stack = 0		4362816	0					
ANR	4362821	IdentifierDeclType	int		4362816	0					
ANR	4362822	Identifier	stack		4362816	1					
ANR	4362823	AssignmentExpression	stack = 0		4362816	2		=			
ANR	4362824	Identifier	stack		4362816	0					
ANR	4362825	PrimaryExpression	0		4362816	1					
ANR	4362826	IdentifierDecl	maxstack = 0		4362816	1					
ANR	4362827	IdentifierDeclType	int		4362816	0					
ANR	4362828	Identifier	maxstack		4362816	1					
ANR	4362829	AssignmentExpression	maxstack = 0		4362816	2		=			
ANR	4362830	Identifier	maxstack		4362816	0					
ANR	4362831	PrimaryExpression	0		4362816	1					
ANR	4362832	IdentifierDeclStatement	ut64 at = from ;	788:1:21895:21909	4362816	1	True				
ANR	4362833	IdentifierDecl	at = from		4362816	0					
ANR	4362834	IdentifierDeclType	ut64		4362816	0					
ANR	4362835	Identifier	at		4362816	1					
ANR	4362836	AssignmentExpression	at = from		4362816	2		=			
ANR	4362837	Identifier	from		4362816	0					
ANR	4362838	Identifier	from		4362816	1					
ANR	4362839	IfStatement	if ( from >= to )		4362816	2					
ANR	4362840	Condition	from >= to	790:5:21917:21926	4362816	0	True				
ANR	4362841	RelationalExpression	from >= to		4362816	0		>=			
ANR	4362842	Identifier	from		4362816	0					
ANR	4362843	Identifier	to		4362816	1					
ANR	4362844	CompoundStatement		5:17:66:66	4362816	1					
ANR	4362845	ReturnStatement	return 0 ;	791:2:21933:21941	4362816	0	True				
ANR	4362846	PrimaryExpression	0		4362816	0					
ANR	4362847	IdentifierDeclStatement	"const int mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE ) ;"	793:1:21947:22027	4362816	3	True				
ANR	4362848	IdentifierDecl	"mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		4362816	0					
ANR	4362849	IdentifierDeclType	const int		4362816	0					
ANR	4362850	Identifier	mininstrsz		4362816	1					
ANR	4362851	AssignmentExpression	"mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		4362816	2		=			
ANR	4362852	Identifier	mininstrsz		4362816	0					
ANR	4362853	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		4362816	1					
ANR	4362854	Callee	r_anal_archinfo		4362816	0					
ANR	4362855	Identifier	r_anal_archinfo		4362816	0					
ANR	4362856	ArgumentList	core -> anal		4362816	1					
ANR	4362857	Argument	core -> anal		4362816	0					
ANR	4362858	PtrMemberAccess	core -> anal		4362816	0					
ANR	4362859	Identifier	core		4362816	0					
ANR	4362860	Identifier	anal		4362816	1					
ANR	4362861	Argument	R_ANAL_ARCHINFO_MIN_OP_SIZE		4362816	1					
ANR	4362862	Identifier	R_ANAL_ARCHINFO_MIN_OP_SIZE		4362816	0					
ANR	4362863	IdentifierDeclStatement	"const int minopcode = R_MAX ( 1 , mininstrsz ) ;"	794:1:22030:22073	4362816	4	True				
ANR	4362864	IdentifierDecl	"minopcode = R_MAX ( 1 , mininstrsz )"		4362816	0					
ANR	4362865	IdentifierDeclType	const int		4362816	0					
ANR	4362866	Identifier	minopcode		4362816	1					
ANR	4362867	AssignmentExpression	"minopcode = R_MAX ( 1 , mininstrsz )"		4362816	2		=			
ANR	4362868	Identifier	minopcode		4362816	0					
ANR	4362869	CallExpression	"R_MAX ( 1 , mininstrsz )"		4362816	1					
ANR	4362870	Callee	R_MAX		4362816	0					
ANR	4362871	Identifier	R_MAX		4362816	0					
ANR	4362872	ArgumentList	1		4362816	1					
ANR	4362873	Argument	1		4362816	0					
ANR	4362874	PrimaryExpression	1		4362816	0					
ANR	4362875	Argument	mininstrsz		4362816	1					
ANR	4362876	Identifier	mininstrsz		4362816	0					
ANR	4362877	WhileStatement	while ( at < to )		4362816	5					
ANR	4362878	Condition	at < to	795:8:22083:22089	4362816	0	True				
ANR	4362879	RelationalExpression	at < to		4362816	0		<			
ANR	4362880	Identifier	at		4362816	0					
ANR	4362881	Identifier	to		4362816	1					
ANR	4362882	CompoundStatement		11:2:233:294	4362816	1					
ANR	4362883	IdentifierDeclStatement	"RAnalOp * op = r_core_anal_op ( core , at , R_ANAL_OP_MASK_BASIC ) ;"	796:2:22096:22157	4362816	0	True				
ANR	4362884	IdentifierDecl	"* op = r_core_anal_op ( core , at , R_ANAL_OP_MASK_BASIC )"		4362816	0					
ANR	4362885	IdentifierDeclType	RAnalOp *		4362816	0					
ANR	4362886	Identifier	op		4362816	1					
ANR	4362887	AssignmentExpression	"* op = r_core_anal_op ( core , at , R_ANAL_OP_MASK_BASIC )"		4362816	2		=			
ANR	4362888	Identifier	op		4362816	0					
ANR	4362889	CallExpression	"r_core_anal_op ( core , at , R_ANAL_OP_MASK_BASIC )"		4362816	1					
ANR	4362890	Callee	r_core_anal_op		4362816	0					
ANR	4362891	Identifier	r_core_anal_op		4362816	0					
ANR	4362892	ArgumentList	core		4362816	1					
ANR	4362893	Argument	core		4362816	0					
ANR	4362894	Identifier	core		4362816	0					
ANR	4362895	Argument	at		4362816	1					
ANR	4362896	Identifier	at		4362816	0					
ANR	4362897	Argument	R_ANAL_OP_MASK_BASIC		4362816	2					
ANR	4362898	Identifier	R_ANAL_OP_MASK_BASIC		4362816	0					
ANR	4362899	IfStatement	if ( ! op || op -> size <= 0 )		4362816	1					
ANR	4362900	Condition	! op || op -> size <= 0	797:6:22165:22184	4362816	0	True				
ANR	4362901	OrExpression	! op || op -> size <= 0		4362816	0		||			
ANR	4362902	UnaryOperationExpression	! op		4362816	0					
ANR	4362903	UnaryOperator	!		4362816	0					
ANR	4362904	Identifier	op		4362816	1					
ANR	4362905	RelationalExpression	op -> size <= 0		4362816	1		<=			
ANR	4362906	PtrMemberAccess	op -> size		4362816	0					
ANR	4362907	Identifier	op		4362816	0					
ANR	4362908	Identifier	size		4362816	1					
ANR	4362909	PrimaryExpression	0		4362816	1					
ANR	4362910	CompoundStatement		12:28:324:324	4362816	1					
ANR	4362911	ExpressionStatement	at += minopcode	798:3:22192:22207	4362816	0	True				
ANR	4362912	AssignmentExpression	at += minopcode		4362816	0		+=			
ANR	4362913	Identifier	at		4362816	0					
ANR	4362914	Identifier	minopcode		4362816	1					
ANR	4362915	ContinueStatement	continue ;	799:3:22212:22220	4362816	1	True				
ANR	4362916	IfStatement	if ( ( op -> stackop == R_ANAL_STACK_INC ) && R_ABS ( op -> stackptr ) < 8096 )		4362816	2					
ANR	4362917	Condition	( op -> stackop == R_ANAL_STACK_INC ) && R_ABS ( op -> stackptr ) < 8096	801:6:22232:22295	4362816	0	True				
ANR	4362918	AndExpression	( op -> stackop == R_ANAL_STACK_INC ) && R_ABS ( op -> stackptr ) < 8096		4362816	0		&&			
ANR	4362919	EqualityExpression	op -> stackop == R_ANAL_STACK_INC		4362816	0		==			
ANR	4362920	PtrMemberAccess	op -> stackop		4362816	0					
ANR	4362921	Identifier	op		4362816	0					
ANR	4362922	Identifier	stackop		4362816	1					
ANR	4362923	Identifier	R_ANAL_STACK_INC		4362816	1					
ANR	4362924	RelationalExpression	R_ABS ( op -> stackptr ) < 8096		4362816	1		<			
ANR	4362925	CallExpression	R_ABS ( op -> stackptr )		4362816	0					
ANR	4362926	Callee	R_ABS		4362816	0					
ANR	4362927	Identifier	R_ABS		4362816	0					
ANR	4362928	ArgumentList	op -> stackptr		4362816	1					
ANR	4362929	Argument	op -> stackptr		4362816	0					
ANR	4362930	PtrMemberAccess	op -> stackptr		4362816	0					
ANR	4362931	Identifier	op		4362816	0					
ANR	4362932	Identifier	stackptr		4362816	1					
ANR	4362933	PrimaryExpression	8096		4362816	1					
ANR	4362934	CompoundStatement		16:72:435:435	4362816	1					
ANR	4362935	ExpressionStatement	stack += op -> stackptr	802:3:22303:22324	4362816	0	True				
ANR	4362936	AssignmentExpression	stack += op -> stackptr		4362816	0		+=			
ANR	4362937	Identifier	stack		4362816	0					
ANR	4362938	PtrMemberAccess	op -> stackptr		4362816	1					
ANR	4362939	Identifier	op		4362816	0					
ANR	4362940	Identifier	stackptr		4362816	1					
ANR	4362941	IfStatement	if ( stack > maxstack )		4362816	1					
ANR	4362942	Condition	stack > maxstack	803:7:22333:22348	4362816	0	True				
ANR	4362943	RelationalExpression	stack > maxstack		4362816	0		>			
ANR	4362944	Identifier	stack		4362816	0					
ANR	4362945	Identifier	maxstack		4362816	1					
ANR	4362946	CompoundStatement		18:25:488:488	4362816	1					
ANR	4362947	ExpressionStatement	maxstack = stack	804:4:22357:22373	4362816	0	True				
ANR	4362948	AssignmentExpression	maxstack = stack		4362816	0		=			
ANR	4362949	Identifier	maxstack		4362816	0					
ANR	4362950	Identifier	stack		4362816	1					
ANR	4362951	ExpressionStatement	at += op -> size	807:2:22386:22400	4362816	3	True				
ANR	4362952	AssignmentExpression	at += op -> size		4362816	0		+=			
ANR	4362953	Identifier	at		4362816	0					
ANR	4362954	PtrMemberAccess	op -> size		4362816	1					
ANR	4362955	Identifier	op		4362816	0					
ANR	4362956	Identifier	size		4362816	1					
ANR	4362957	ExpressionStatement	r_anal_op_free ( op )	808:2:22404:22423	4362816	4	True				
ANR	4362958	CallExpression	r_anal_op_free ( op )		4362816	0					
ANR	4362959	Callee	r_anal_op_free		4362816	0					
ANR	4362960	Identifier	r_anal_op_free		4362816	0					
ANR	4362961	ArgumentList	op		4362816	1					
ANR	4362962	Argument	op		4362816	0					
ANR	4362963	Identifier	op		4362816	0					
ANR	4362964	ReturnStatement	return maxstack ;	810:1:22429:22444	4362816	6	True				
ANR	4362965	Identifier	maxstack		4362816	0					
ANR	4362966	ReturnType	R_API int		4362816	1					
ANR	4362967	Identifier	r_core_get_stacksz		4362816	2					
ANR	4362968	ParameterList	"RCore * core , ut64 from , ut64 to"		4362816	3					
ANR	4362969	Parameter	RCore * core	786:30:21829:21839	4362816	0	True				
ANR	4362970	ParameterType	RCore *		4362816	0					
ANR	4362971	Identifier	core		4362816	1					
ANR	4362972	Parameter	ut64 from	786:43:21842:21850	4362816	1	True				
ANR	4362973	ParameterType	ut64		4362816	0					
ANR	4362974	Identifier	from		4362816	1					
ANR	4362975	Parameter	ut64 to	786:54:21853:21859	4362816	2	True				
ANR	4362976	ParameterType	ut64		4362816	0					
ANR	4362977	Identifier	to		4362816	1					
ANR	4362978	CFGEntryNode	ENTRY		4362816		True				
ANR	4362979	CFGExitNode	EXIT		4362816		True				
ANR	4362980	Symbol	R_ANAL_ARCHINFO_MIN_OP_SIZE		4362816						
ANR	4362981	Symbol	op		4362816						
ANR	4362982	Symbol	R_ANAL_STACK_INC		4362816						
ANR	4362983	Symbol	stack		4362816						
ANR	4362984	Symbol	* op		4362816						
ANR	4362985	Symbol	r_anal_archinfo		4362816						
ANR	4362986	Symbol	mininstrsz		4362816						
ANR	4362987	Symbol	maxstack		4362816						
ANR	4362988	Symbol	* core		4362816						
ANR	4362989	Symbol	R_ABS		4362816						
ANR	4362990	Symbol	r_core_anal_op		4362816						
ANR	4362991	Symbol	core -> anal		4362816						
ANR	4362992	Symbol	R_ANAL_OP_MASK_BASIC		4362816						
ANR	4362993	Symbol	minopcode		4362816						
ANR	4362994	Symbol	core		4362816						
ANR	4362995	Symbol	at		4362816						
ANR	4362996	Symbol	op -> stackptr		4362816						
ANR	4362997	Symbol	R_MAX		4362816						
ANR	4362998	Symbol	from		4362816						
ANR	4362999	Symbol	op -> size		4362816						
ANR	4363000	Symbol	to		4362816						
ANR	4363001	Symbol	op -> stackop		4362816						
ANR	4363002	Function	set_retval	813:0:22449:23014							
ANR	4363003	FunctionDef	"set_retval (RCore * core , ut64 at)"		4363002	0					
ANR	4363004	CompoundStatement		813:46:22495:23014	4363002	0					
ANR	4363005	IdentifierDeclStatement	RAnal * anal = core -> anal ;	814:1:22498:22522	4363002	0	True				
ANR	4363006	IdentifierDecl	* anal = core -> anal		4363002	0					
ANR	4363007	IdentifierDeclType	RAnal *		4363002	0					
ANR	4363008	Identifier	anal		4363002	1					
ANR	4363009	AssignmentExpression	* anal = core -> anal		4363002	2		=			
ANR	4363010	Identifier	anal		4363002	0					
ANR	4363011	PtrMemberAccess	core -> anal		4363002	1					
ANR	4363012	Identifier	core		4363002	0					
ANR	4363013	Identifier	anal		4363002	1					
ANR	4363014	IdentifierDeclStatement	"RAnalHint * hint = r_anal_hint_get ( anal , at ) ;"	815:1:22525:22569	4363002	1	True				
ANR	4363015	IdentifierDecl	"* hint = r_anal_hint_get ( anal , at )"		4363002	0					
ANR	4363016	IdentifierDeclType	RAnalHint *		4363002	0					
ANR	4363017	Identifier	hint		4363002	1					
ANR	4363018	AssignmentExpression	"* hint = r_anal_hint_get ( anal , at )"		4363002	2		=			
ANR	4363019	Identifier	hint		4363002	0					
ANR	4363020	CallExpression	"r_anal_hint_get ( anal , at )"		4363002	1					
ANR	4363021	Callee	r_anal_hint_get		4363002	0					
ANR	4363022	Identifier	r_anal_hint_get		4363002	0					
ANR	4363023	ArgumentList	anal		4363002	1					
ANR	4363024	Argument	anal		4363002	0					
ANR	4363025	Identifier	anal		4363002	0					
ANR	4363026	Argument	at		4363002	1					
ANR	4363027	Identifier	at		4363002	0					
ANR	4363028	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( anal , at , 0 ) ;"	816:1:22572:22624	4363002	2	True				
ANR	4363029	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( anal , at , 0 )"		4363002	0					
ANR	4363030	IdentifierDeclType	RAnalFunction *		4363002	0					
ANR	4363031	Identifier	fcn		4363002	1					
ANR	4363032	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( anal , at , 0 )"		4363002	2		=			
ANR	4363033	Identifier	fcn		4363002	0					
ANR	4363034	CallExpression	"r_anal_get_fcn_in ( anal , at , 0 )"		4363002	1					
ANR	4363035	Callee	r_anal_get_fcn_in		4363002	0					
ANR	4363036	Identifier	r_anal_get_fcn_in		4363002	0					
ANR	4363037	ArgumentList	anal		4363002	1					
ANR	4363038	Argument	anal		4363002	0					
ANR	4363039	Identifier	anal		4363002	0					
ANR	4363040	Argument	at		4363002	1					
ANR	4363041	Identifier	at		4363002	0					
ANR	4363042	Argument	0		4363002	2					
ANR	4363043	PrimaryExpression	0		4363002	0					
ANR	4363044	IfStatement	if ( ! hint || ! fcn || ! fcn -> name )		4363002	3					
ANR	4363045	Condition	! hint || ! fcn || ! fcn -> name	818:5:22632:22658	4363002	0	True				
ANR	4363046	OrExpression	! hint || ! fcn || ! fcn -> name		4363002	0		||			
ANR	4363047	UnaryOperationExpression	! hint		4363002	0					
ANR	4363048	UnaryOperator	!		4363002	0					
ANR	4363049	Identifier	hint		4363002	1					
ANR	4363050	OrExpression	! fcn || ! fcn -> name		4363002	1		||			
ANR	4363051	UnaryOperationExpression	! fcn		4363002	0					
ANR	4363052	UnaryOperator	!		4363002	0					
ANR	4363053	Identifier	fcn		4363002	1					
ANR	4363054	UnaryOperationExpression	! fcn -> name		4363002	1					
ANR	4363055	UnaryOperator	!		4363002	0					
ANR	4363056	PtrMemberAccess	fcn -> name		4363002	1					
ANR	4363057	Identifier	fcn		4363002	0					
ANR	4363058	Identifier	name		4363002	1					
ANR	4363059	CompoundStatement		6:34:165:165	4363002	1					
ANR	4363060	GotoStatement	goto beach ;	819:2:22665:22675	4363002	0	True				
ANR	4363061	Identifier	beach		4363002	0					
ANR	4363062	IfStatement	if ( hint -> ret == UT64_MAX )		4363002	4					
ANR	4363063	Condition	hint -> ret == UT64_MAX	821:5:22685:22705	4363002	0	True				
ANR	4363064	EqualityExpression	hint -> ret == UT64_MAX		4363002	0		==			
ANR	4363065	PtrMemberAccess	hint -> ret		4363002	0					
ANR	4363066	Identifier	hint		4363002	0					
ANR	4363067	Identifier	ret		4363002	1					
ANR	4363068	Identifier	UT64_MAX		4363002	1					
ANR	4363069	CompoundStatement		9:28:212:212	4363002	1					
ANR	4363070	GotoStatement	goto beach ;	822:2:22712:22722	4363002	0	True				
ANR	4363071	Identifier	beach		4363002	0					
ANR	4363072	IdentifierDeclStatement	"const char * cc = r_anal_cc_func ( core -> anal , fcn -> name ) ;"	824:1:22728:22783	4363002	5	True				
ANR	4363073	IdentifierDecl	"* cc = r_anal_cc_func ( core -> anal , fcn -> name )"		4363002	0					
ANR	4363074	IdentifierDeclType	const char *		4363002	0					
ANR	4363075	Identifier	cc		4363002	1					
ANR	4363076	AssignmentExpression	"* cc = r_anal_cc_func ( core -> anal , fcn -> name )"		4363002	2		=			
ANR	4363077	Identifier	cc		4363002	0					
ANR	4363078	CallExpression	"r_anal_cc_func ( core -> anal , fcn -> name )"		4363002	1					
ANR	4363079	Callee	r_anal_cc_func		4363002	0					
ANR	4363080	Identifier	r_anal_cc_func		4363002	0					
ANR	4363081	ArgumentList	core -> anal		4363002	1					
ANR	4363082	Argument	core -> anal		4363002	0					
ANR	4363083	PtrMemberAccess	core -> anal		4363002	0					
ANR	4363084	Identifier	core		4363002	0					
ANR	4363085	Identifier	anal		4363002	1					
ANR	4363086	Argument	fcn -> name		4363002	1					
ANR	4363087	PtrMemberAccess	fcn -> name		4363002	0					
ANR	4363088	Identifier	fcn		4363002	0					
ANR	4363089	Identifier	name		4363002	1					
ANR	4363090	IdentifierDeclStatement	"const char * regname = r_anal_cc_ret ( anal , cc ) ;"	825:1:22786:22832	4363002	6	True				
ANR	4363091	IdentifierDecl	"* regname = r_anal_cc_ret ( anal , cc )"		4363002	0					
ANR	4363092	IdentifierDeclType	const char *		4363002	0					
ANR	4363093	Identifier	regname		4363002	1					
ANR	4363094	AssignmentExpression	"* regname = r_anal_cc_ret ( anal , cc )"		4363002	2		=			
ANR	4363095	Identifier	regname		4363002	0					
ANR	4363096	CallExpression	"r_anal_cc_ret ( anal , cc )"		4363002	1					
ANR	4363097	Callee	r_anal_cc_ret		4363002	0					
ANR	4363098	Identifier	r_anal_cc_ret		4363002	0					
ANR	4363099	ArgumentList	anal		4363002	1					
ANR	4363100	Argument	anal		4363002	0					
ANR	4363101	Identifier	anal		4363002	0					
ANR	4363102	Argument	cc		4363002	1					
ANR	4363103	Identifier	cc		4363002	0					
ANR	4363104	IfStatement	if ( regname )		4363002	7					
ANR	4363105	Condition	regname	826:5:22839:22845	4363002	0	True				
ANR	4363106	Identifier	regname		4363002	0					
ANR	4363107	CompoundStatement		15:2:356:406	4363002	1					
ANR	4363108	IdentifierDeclStatement	"RRegItem * reg = r_reg_get ( anal -> reg , regname , - 1 ) ;"	827:2:22852:22902	4363002	0	True				
ANR	4363109	IdentifierDecl	"* reg = r_reg_get ( anal -> reg , regname , - 1 )"		4363002	0					
ANR	4363110	IdentifierDeclType	RRegItem *		4363002	0					
ANR	4363111	Identifier	reg		4363002	1					
ANR	4363112	AssignmentExpression	"* reg = r_reg_get ( anal -> reg , regname , - 1 )"		4363002	2		=			
ANR	4363113	Identifier	reg		4363002	0					
ANR	4363114	CallExpression	"r_reg_get ( anal -> reg , regname , - 1 )"		4363002	1					
ANR	4363115	Callee	r_reg_get		4363002	0					
ANR	4363116	Identifier	r_reg_get		4363002	0					
ANR	4363117	ArgumentList	anal -> reg		4363002	1					
ANR	4363118	Argument	anal -> reg		4363002	0					
ANR	4363119	PtrMemberAccess	anal -> reg		4363002	0					
ANR	4363120	Identifier	anal		4363002	0					
ANR	4363121	Identifier	reg		4363002	1					
ANR	4363122	Argument	regname		4363002	1					
ANR	4363123	Identifier	regname		4363002	0					
ANR	4363124	Argument	- 1		4363002	2					
ANR	4363125	UnaryOperationExpression	- 1		4363002	0					
ANR	4363126	UnaryOperator	-		4363002	0					
ANR	4363127	PrimaryExpression	1		4363002	1					
ANR	4363128	IfStatement	if ( reg )		4363002	1					
ANR	4363129	Condition	reg	828:6:22910:22912	4363002	0	True				
ANR	4363130	Identifier	reg		4363002	0					
ANR	4363131	CompoundStatement		16:11:419:419	4363002	1					
ANR	4363132	ExpressionStatement	"r_reg_set_value ( anal -> reg , reg , hint -> ret )"	829:3:22920:22963	4363002	0	True				
ANR	4363133	CallExpression	"r_reg_set_value ( anal -> reg , reg , hint -> ret )"		4363002	0					
ANR	4363134	Callee	r_reg_set_value		4363002	0					
ANR	4363135	Identifier	r_reg_set_value		4363002	0					
ANR	4363136	ArgumentList	anal -> reg		4363002	1					
ANR	4363137	Argument	anal -> reg		4363002	0					
ANR	4363138	PtrMemberAccess	anal -> reg		4363002	0					
ANR	4363139	Identifier	anal		4363002	0					
ANR	4363140	Identifier	reg		4363002	1					
ANR	4363141	Argument	reg		4363002	1					
ANR	4363142	Identifier	reg		4363002	0					
ANR	4363143	Argument	hint -> ret		4363002	2					
ANR	4363144	PtrMemberAccess	hint -> ret		4363002	0					
ANR	4363145	Identifier	hint		4363002	0					
ANR	4363146	Identifier	ret		4363002	1					
ANR	4363147	Label	beach :	832:0:22972:22977	4363002	8	True				
ANR	4363148	Identifier	beach		4363002	0					
ANR	4363149	ExpressionStatement	r_anal_hint_free ( hint )	833:1:22980:23003	4363002	9	True				
ANR	4363150	CallExpression	r_anal_hint_free ( hint )		4363002	0					
ANR	4363151	Callee	r_anal_hint_free		4363002	0					
ANR	4363152	Identifier	r_anal_hint_free		4363002	0					
ANR	4363153	ArgumentList	hint		4363002	1					
ANR	4363154	Argument	hint		4363002	0					
ANR	4363155	Identifier	hint		4363002	0					
ANR	4363156	ReturnStatement	return ;	834:1:23006:23012	4363002	10	True				
ANR	4363157	ReturnType	static void		4363002	1					
ANR	4363158	Identifier	set_retval		4363002	2					
ANR	4363159	ParameterList	"RCore * core , ut64 at"		4363002	3					
ANR	4363160	Parameter	RCore * core	813:24:22473:22483	4363002	0	True				
ANR	4363161	ParameterType	RCore *		4363002	0					
ANR	4363162	Identifier	core		4363002	1					
ANR	4363163	Parameter	ut64 at	813:37:22486:22492	4363002	1	True				
ANR	4363164	ParameterType	ut64		4363002	0					
ANR	4363165	Identifier	at		4363002	1					
ANR	4363166	CFGEntryNode	ENTRY		4363002		True				
ANR	4363167	CFGExitNode	EXIT		4363002		True				
ANR	4363168	Symbol	cc		4363002						
ANR	4363169	Symbol	regname		4363002						
ANR	4363170	Symbol	* hint		4363002						
ANR	4363171	Symbol	anal -> reg		4363002						
ANR	4363172	Symbol	* fcn		4363002						
ANR	4363173	Symbol	fcn -> name		4363002						
ANR	4363174	Symbol	* core		4363002						
ANR	4363175	Symbol	hint -> ret		4363002						
ANR	4363176	Symbol	r_anal_hint_get		4363002						
ANR	4363177	Symbol	core -> anal		4363002						
ANR	4363178	Symbol	fcn		4363002						
ANR	4363179	Symbol	core		4363002						
ANR	4363180	Symbol	* anal		4363002						
ANR	4363181	Symbol	at		4363002						
ANR	4363182	Symbol	r_anal_get_fcn_in		4363002						
ANR	4363183	Symbol	r_anal_cc_func		4363002						
ANR	4363184	Symbol	r_anal_cc_ret		4363002						
ANR	4363185	Symbol	anal		4363002						
ANR	4363186	Symbol	reg		4363002						
ANR	4363187	Symbol	hint		4363002						
ANR	4363188	Symbol	UT64_MAX		4363002						
ANR	4363189	Symbol	r_reg_get		4363002						
ANR	4363190	Function	link_struct_offset	837:0:23017:27839							
ANR	4363191	FunctionDef	"link_struct_offset (RCore * core , RAnalFunction * fcn)"		4363190	0					
ANR	4363192	CompoundStatement		837:64:23081:27839	4363190	0					
ANR	4363193	IdentifierDeclStatement	RAnalBlock * bb ;	838:1:23084:23098	4363190	0	True				
ANR	4363194	IdentifierDecl	* bb		4363190	0					
ANR	4363195	IdentifierDeclType	RAnalBlock *		4363190	0					
ANR	4363196	Identifier	bb		4363190	1					
ANR	4363197	IdentifierDeclStatement	RListIter * it ;	839:1:23101:23114	4363190	1	True				
ANR	4363198	IdentifierDecl	* it		4363190	0					
ANR	4363199	IdentifierDeclType	RListIter *		4363190	0					
ANR	4363200	Identifier	it		4363190	1					
ANR	4363201	IdentifierDeclStatement	RAnalOp aop = { 0 } ;	840:1:23117:23134	4363190	2	True				
ANR	4363202	IdentifierDecl	aop = { 0 }		4363190	0					
ANR	4363203	IdentifierDeclType	RAnalOp		4363190	0					
ANR	4363204	Identifier	aop		4363190	1					
ANR	4363205	AssignmentExpression	aop = { 0 }		4363190	2		=			
ANR	4363206	Identifier	aop		4363190	0					
ANR	4363207	InitializerList	0		4363190	1					
ANR	4363208	PrimaryExpression	0		4363190	0					
ANR	4363209	IdentifierDeclStatement	"bool ioCache = r_config_get_i ( core -> config , ""io.cache"" ) ;"	841:1:23137:23193	4363190	3	True				
ANR	4363210	IdentifierDecl	"ioCache = r_config_get_i ( core -> config , ""io.cache"" )"		4363190	0					
ANR	4363211	IdentifierDeclType	bool		4363190	0					
ANR	4363212	Identifier	ioCache		4363190	1					
ANR	4363213	AssignmentExpression	"ioCache = r_config_get_i ( core -> config , ""io.cache"" )"		4363190	2		=			
ANR	4363214	Identifier	ioCache		4363190	0					
ANR	4363215	CallExpression	"r_config_get_i ( core -> config , ""io.cache"" )"		4363190	1					
ANR	4363216	Callee	r_config_get_i		4363190	0					
ANR	4363217	Identifier	r_config_get_i		4363190	0					
ANR	4363218	ArgumentList	core -> config		4363190	1					
ANR	4363219	Argument	core -> config		4363190	0					
ANR	4363220	PtrMemberAccess	core -> config		4363190	0					
ANR	4363221	Identifier	core		4363190	0					
ANR	4363222	Identifier	config		4363190	1					
ANR	4363223	Argument	"""io.cache"""		4363190	1					
ANR	4363224	PrimaryExpression	"""io.cache"""		4363190	0					
ANR	4363225	IdentifierDeclStatement	bool stack_set = false ;	842:1:23196:23218	4363190	4	True				
ANR	4363226	IdentifierDecl	stack_set = false		4363190	0					
ANR	4363227	IdentifierDeclType	bool		4363190	0					
ANR	4363228	Identifier	stack_set		4363190	1					
ANR	4363229	AssignmentExpression	stack_set = false		4363190	2		=			
ANR	4363230	Identifier	false		4363190	0					
ANR	4363231	Identifier	false		4363190	1					
ANR	4363232	IdentifierDeclStatement	bool resolved = false ;	843:1:23221:23242	4363190	5	True				
ANR	4363233	IdentifierDecl	resolved = false		4363190	0					
ANR	4363234	IdentifierDeclType	bool		4363190	0					
ANR	4363235	Identifier	resolved		4363190	1					
ANR	4363236	AssignmentExpression	resolved = false		4363190	2		=			
ANR	4363237	Identifier	false		4363190	0					
ANR	4363238	Identifier	false		4363190	1					
ANR	4363239	IdentifierDeclStatement	const char * varpfx ;	844:1:23245:23263	4363190	6	True				
ANR	4363240	IdentifierDecl	* varpfx		4363190	0					
ANR	4363241	IdentifierDeclType	const char *		4363190	0					
ANR	4363242	Identifier	varpfx		4363190	1					
ANR	4363243	IdentifierDeclStatement	"int dbg_follow = r_config_get_i ( core -> config , ""dbg.follow"" ) ;"	845:1:23266:23326	4363190	7	True				
ANR	4363244	IdentifierDecl	"dbg_follow = r_config_get_i ( core -> config , ""dbg.follow"" )"		4363190	0					
ANR	4363245	IdentifierDeclType	int		4363190	0					
ANR	4363246	Identifier	dbg_follow		4363190	1					
ANR	4363247	AssignmentExpression	"dbg_follow = r_config_get_i ( core -> config , ""dbg.follow"" )"		4363190	2		=			
ANR	4363248	Identifier	dbg_follow		4363190	0					
ANR	4363249	CallExpression	"r_config_get_i ( core -> config , ""dbg.follow"" )"		4363190	1					
ANR	4363250	Callee	r_config_get_i		4363190	0					
ANR	4363251	Identifier	r_config_get_i		4363190	0					
ANR	4363252	ArgumentList	core -> config		4363190	1					
ANR	4363253	Argument	core -> config		4363190	0					
ANR	4363254	PtrMemberAccess	core -> config		4363190	0					
ANR	4363255	Identifier	core		4363190	0					
ANR	4363256	Identifier	config		4363190	1					
ANR	4363257	Argument	"""dbg.follow"""		4363190	1					
ANR	4363258	PrimaryExpression	"""dbg.follow"""		4363190	0					
ANR	4363259	IdentifierDeclStatement	Sdb * TDB = core -> anal -> sdb_types ;	846:1:23329:23361	4363190	8	True				
ANR	4363260	IdentifierDecl	* TDB = core -> anal -> sdb_types		4363190	0					
ANR	4363261	IdentifierDeclType	Sdb *		4363190	0					
ANR	4363262	Identifier	TDB		4363190	1					
ANR	4363263	AssignmentExpression	* TDB = core -> anal -> sdb_types		4363190	2		=			
ANR	4363264	Identifier	TDB		4363190	0					
ANR	4363265	PtrMemberAccess	core -> anal -> sdb_types		4363190	1					
ANR	4363266	PtrMemberAccess	core -> anal		4363190	0					
ANR	4363267	Identifier	core		4363190	0					
ANR	4363268	Identifier	anal		4363190	1					
ANR	4363269	Identifier	sdb_types		4363190	1					
ANR	4363270	IdentifierDeclStatement	RAnalEsil * esil ;	847:1:23364:23379	4363190	9	True				
ANR	4363271	IdentifierDecl	* esil		4363190	0					
ANR	4363272	IdentifierDeclType	RAnalEsil *		4363190	0					
ANR	4363273	Identifier	esil		4363190	1					
ANR	4363274	IdentifierDeclStatement	"int iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" ) ;"	848:1:23382:23439	4363190	10	True				
ANR	4363275	IdentifierDecl	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		4363190	0					
ANR	4363276	IdentifierDeclType	int		4363190	0					
ANR	4363277	Identifier	iotrap		4363190	1					
ANR	4363278	AssignmentExpression	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		4363190	2		=			
ANR	4363279	Identifier	iotrap		4363190	0					
ANR	4363280	CallExpression	"r_config_get_i ( core -> config , ""esil.iotrap"" )"		4363190	1					
ANR	4363281	Callee	r_config_get_i		4363190	0					
ANR	4363282	Identifier	r_config_get_i		4363190	0					
ANR	4363283	ArgumentList	core -> config		4363190	1					
ANR	4363284	Argument	core -> config		4363190	0					
ANR	4363285	PtrMemberAccess	core -> config		4363190	0					
ANR	4363286	Identifier	core		4363190	0					
ANR	4363287	Identifier	config		4363190	1					
ANR	4363288	Argument	"""esil.iotrap"""		4363190	1					
ANR	4363289	PrimaryExpression	"""esil.iotrap"""		4363190	0					
ANR	4363290	IdentifierDeclStatement	"int stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" ) ;"	849:1:23442:23507	4363190	11	True				
ANR	4363291	IdentifierDecl	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		4363190	0					
ANR	4363292	IdentifierDeclType	int		4363190	0					
ANR	4363293	Identifier	stacksize		4363190	1					
ANR	4363294	AssignmentExpression	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		4363190	2		=			
ANR	4363295	Identifier	stacksize		4363190	0					
ANR	4363296	CallExpression	"r_config_get_i ( core -> config , ""esil.stack.depth"" )"		4363190	1					
ANR	4363297	Callee	r_config_get_i		4363190	0					
ANR	4363298	Identifier	r_config_get_i		4363190	0					
ANR	4363299	ArgumentList	core -> config		4363190	1					
ANR	4363300	Argument	core -> config		4363190	0					
ANR	4363301	PtrMemberAccess	core -> config		4363190	0					
ANR	4363302	Identifier	core		4363190	0					
ANR	4363303	Identifier	config		4363190	1					
ANR	4363304	Argument	"""esil.stack.depth"""		4363190	1					
ANR	4363305	PrimaryExpression	"""esil.stack.depth"""		4363190	0					
ANR	4363306	IdentifierDeclStatement	"unsigned int addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" ) ;"	850:1:23510:23581	4363190	12	True				
ANR	4363307	IdentifierDecl	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		4363190	0					
ANR	4363308	IdentifierDeclType	unsigned int		4363190	0					
ANR	4363309	Identifier	addrsize		4363190	1					
ANR	4363310	AssignmentExpression	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		4363190	2		=			
ANR	4363311	Identifier	addrsize		4363190	0					
ANR	4363312	CallExpression	"r_config_get_i ( core -> config , ""esil.addr.size"" )"		4363190	1					
ANR	4363313	Callee	r_config_get_i		4363190	0					
ANR	4363314	Identifier	r_config_get_i		4363190	0					
ANR	4363315	ArgumentList	core -> config		4363190	1					
ANR	4363316	Argument	core -> config		4363190	0					
ANR	4363317	PtrMemberAccess	core -> config		4363190	0					
ANR	4363318	Identifier	core		4363190	0					
ANR	4363319	Identifier	config		4363190	1					
ANR	4363320	Argument	"""esil.addr.size"""		4363190	1					
ANR	4363321	PrimaryExpression	"""esil.addr.size"""		4363190	0					
ANR	4363322	IdentifierDeclStatement	"const char * pc_name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) ;"	851:1:23584:23653	4363190	13	True				
ANR	4363323	IdentifierDecl	"* pc_name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		4363190	0					
ANR	4363324	IdentifierDeclType	const char *		4363190	0					
ANR	4363325	Identifier	pc_name		4363190	1					
ANR	4363326	AssignmentExpression	"* pc_name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		4363190	2		=			
ANR	4363327	Identifier	pc_name		4363190	0					
ANR	4363328	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		4363190	1					
ANR	4363329	Callee	r_reg_get_name		4363190	0					
ANR	4363330	Identifier	r_reg_get_name		4363190	0					
ANR	4363331	ArgumentList	core -> anal -> reg		4363190	1					
ANR	4363332	Argument	core -> anal -> reg		4363190	0					
ANR	4363333	PtrMemberAccess	core -> anal -> reg		4363190	0					
ANR	4363334	PtrMemberAccess	core -> anal		4363190	0					
ANR	4363335	Identifier	core		4363190	0					
ANR	4363336	Identifier	anal		4363190	1					
ANR	4363337	Identifier	reg		4363190	1					
ANR	4363338	Argument	R_REG_NAME_PC		4363190	1					
ANR	4363339	Identifier	R_REG_NAME_PC		4363190	0					
ANR	4363340	IdentifierDeclStatement	"const char * sp_name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP ) ;"	852:1:23656:23725	4363190	14	True				
ANR	4363341	IdentifierDecl	"* sp_name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		4363190	0					
ANR	4363342	IdentifierDeclType	const char *		4363190	0					
ANR	4363343	Identifier	sp_name		4363190	1					
ANR	4363344	AssignmentExpression	"* sp_name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		4363190	2		=			
ANR	4363345	Identifier	sp_name		4363190	0					
ANR	4363346	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		4363190	1					
ANR	4363347	Callee	r_reg_get_name		4363190	0					
ANR	4363348	Identifier	r_reg_get_name		4363190	0					
ANR	4363349	ArgumentList	core -> anal -> reg		4363190	1					
ANR	4363350	Argument	core -> anal -> reg		4363190	0					
ANR	4363351	PtrMemberAccess	core -> anal -> reg		4363190	0					
ANR	4363352	PtrMemberAccess	core -> anal		4363190	0					
ANR	4363353	Identifier	core		4363190	0					
ANR	4363354	Identifier	anal		4363190	1					
ANR	4363355	Identifier	reg		4363190	1					
ANR	4363356	Argument	R_REG_NAME_SP		4363190	1					
ANR	4363357	Identifier	R_REG_NAME_SP		4363190	0					
ANR	4363358	IdentifierDeclStatement	"RRegItem * pc = r_reg_get ( core -> anal -> reg , pc_name , - 1 ) ;"	853:1:23728:23783	4363190	15	True				
ANR	4363359	IdentifierDecl	"* pc = r_reg_get ( core -> anal -> reg , pc_name , - 1 )"		4363190	0					
ANR	4363360	IdentifierDeclType	RRegItem *		4363190	0					
ANR	4363361	Identifier	pc		4363190	1					
ANR	4363362	AssignmentExpression	"* pc = r_reg_get ( core -> anal -> reg , pc_name , - 1 )"		4363190	2		=			
ANR	4363363	Identifier	pc		4363190	0					
ANR	4363364	CallExpression	"r_reg_get ( core -> anal -> reg , pc_name , - 1 )"		4363190	1					
ANR	4363365	Callee	r_reg_get		4363190	0					
ANR	4363366	Identifier	r_reg_get		4363190	0					
ANR	4363367	ArgumentList	core -> anal -> reg		4363190	1					
ANR	4363368	Argument	core -> anal -> reg		4363190	0					
ANR	4363369	PtrMemberAccess	core -> anal -> reg		4363190	0					
ANR	4363370	PtrMemberAccess	core -> anal		4363190	0					
ANR	4363371	Identifier	core		4363190	0					
ANR	4363372	Identifier	anal		4363190	1					
ANR	4363373	Identifier	reg		4363190	1					
ANR	4363374	Argument	pc_name		4363190	1					
ANR	4363375	Identifier	pc_name		4363190	0					
ANR	4363376	Argument	- 1		4363190	2					
ANR	4363377	UnaryOperationExpression	- 1		4363190	0					
ANR	4363378	UnaryOperator	-		4363190	0					
ANR	4363379	PrimaryExpression	1		4363190	1					
ANR	4363380	IfStatement	if ( ! fcn )		4363190	16					
ANR	4363381	Condition	! fcn	855:5:23791:23794	4363190	0	True				
ANR	4363382	UnaryOperationExpression	! fcn		4363190	0					
ANR	4363383	UnaryOperator	!		4363190	0					
ANR	4363384	Identifier	fcn		4363190	1					
ANR	4363385	CompoundStatement		19:11:715:715	4363190	1					
ANR	4363386	ReturnStatement	return ;	856:2:23801:23807	4363190	0	True				
ANR	4363387	IfStatement	"if ( ! ( esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) ) )"		4363190	17					
ANR	4363388	Condition	"! ( esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"	858:5:23817:23871	4363190	0	True				
ANR	4363389	UnaryOperationExpression	"! ( esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"		4363190	0					
ANR	4363390	UnaryOperator	!		4363190	0					
ANR	4363391	AssignmentExpression	"esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"		4363190	1		=			
ANR	4363392	Identifier	esil		4363190	0					
ANR	4363393	CallExpression	"r_anal_esil_new ( stacksize , iotrap , addrsize )"		4363190	1					
ANR	4363394	Callee	r_anal_esil_new		4363190	0					
ANR	4363395	Identifier	r_anal_esil_new		4363190	0					
ANR	4363396	ArgumentList	stacksize		4363190	1					
ANR	4363397	Argument	stacksize		4363190	0					
ANR	4363398	Identifier	stacksize		4363190	0					
ANR	4363399	Argument	iotrap		4363190	1					
ANR	4363400	Identifier	iotrap		4363190	0					
ANR	4363401	Argument	addrsize		4363190	2					
ANR	4363402	Identifier	addrsize		4363190	0					
ANR	4363403	CompoundStatement		22:62:792:792	4363190	1					
ANR	4363404	ReturnStatement	return ;	859:2:23878:23884	4363190	0	True				
ANR	4363405	ExpressionStatement	"r_anal_esil_setup ( esil , core -> anal , 0 , 0 , 0 )"	861:1:23890:23935	4363190	18	True				
ANR	4363406	CallExpression	"r_anal_esil_setup ( esil , core -> anal , 0 , 0 , 0 )"		4363190	0					
ANR	4363407	Callee	r_anal_esil_setup		4363190	0					
ANR	4363408	Identifier	r_anal_esil_setup		4363190	0					
ANR	4363409	ArgumentList	esil		4363190	1					
ANR	4363410	Argument	esil		4363190	0					
ANR	4363411	Identifier	esil		4363190	0					
ANR	4363412	Argument	core -> anal		4363190	1					
ANR	4363413	PtrMemberAccess	core -> anal		4363190	0					
ANR	4363414	Identifier	core		4363190	0					
ANR	4363415	Identifier	anal		4363190	1					
ANR	4363416	Argument	0		4363190	2					
ANR	4363417	PrimaryExpression	0		4363190	0					
ANR	4363418	Argument	0		4363190	3					
ANR	4363419	PrimaryExpression	0		4363190	0					
ANR	4363420	Argument	0		4363190	4					
ANR	4363421	PrimaryExpression	0		4363190	0					
ANR	4363422	IdentifierDeclStatement	"int i , ret , bsize = R_MAX ( 64 , core -> blocksize ) ;"	862:1:23938:23985	4363190	19	True				
ANR	4363423	IdentifierDecl	i		4363190	0					
ANR	4363424	IdentifierDeclType	int		4363190	0					
ANR	4363425	Identifier	i		4363190	1					
ANR	4363426	IdentifierDecl	ret		4363190	1					
ANR	4363427	IdentifierDeclType	int		4363190	0					
ANR	4363428	Identifier	ret		4363190	1					
ANR	4363429	IdentifierDecl	"bsize = R_MAX ( 64 , core -> blocksize )"		4363190	2					
ANR	4363430	IdentifierDeclType	int		4363190	0					
ANR	4363431	Identifier	bsize		4363190	1					
ANR	4363432	AssignmentExpression	"bsize = R_MAX ( 64 , core -> blocksize )"		4363190	2		=			
ANR	4363433	Identifier	bsize		4363190	0					
ANR	4363434	CallExpression	"R_MAX ( 64 , core -> blocksize )"		4363190	1					
ANR	4363435	Callee	R_MAX		4363190	0					
ANR	4363436	Identifier	R_MAX		4363190	0					
ANR	4363437	ArgumentList	64		4363190	1					
ANR	4363438	Argument	64		4363190	0					
ANR	4363439	PrimaryExpression	64		4363190	0					
ANR	4363440	Argument	core -> blocksize		4363190	1					
ANR	4363441	PtrMemberAccess	core -> blocksize		4363190	0					
ANR	4363442	Identifier	core		4363190	0					
ANR	4363443	Identifier	blocksize		4363190	1					
ANR	4363444	IdentifierDeclStatement	"const int mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE ) ;"	863:1:23988:24068	4363190	20	True				
ANR	4363445	IdentifierDecl	"mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		4363190	0					
ANR	4363446	IdentifierDeclType	const int		4363190	0					
ANR	4363447	Identifier	mininstrsz		4363190	1					
ANR	4363448	AssignmentExpression	"mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		4363190	2		=			
ANR	4363449	Identifier	mininstrsz		4363190	0					
ANR	4363450	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		4363190	1					
ANR	4363451	Callee	r_anal_archinfo		4363190	0					
ANR	4363452	Identifier	r_anal_archinfo		4363190	0					
ANR	4363453	ArgumentList	core -> anal		4363190	1					
ANR	4363454	Argument	core -> anal		4363190	0					
ANR	4363455	PtrMemberAccess	core -> anal		4363190	0					
ANR	4363456	Identifier	core		4363190	0					
ANR	4363457	Identifier	anal		4363190	1					
ANR	4363458	Argument	R_ANAL_ARCHINFO_MIN_OP_SIZE		4363190	1					
ANR	4363459	Identifier	R_ANAL_ARCHINFO_MIN_OP_SIZE		4363190	0					
ANR	4363460	IdentifierDeclStatement	"const int minopcode = R_MAX ( 1 , mininstrsz ) ;"	864:1:24071:24114	4363190	21	True				
ANR	4363461	IdentifierDecl	"minopcode = R_MAX ( 1 , mininstrsz )"		4363190	0					
ANR	4363462	IdentifierDeclType	const int		4363190	0					
ANR	4363463	Identifier	minopcode		4363190	1					
ANR	4363464	AssignmentExpression	"minopcode = R_MAX ( 1 , mininstrsz )"		4363190	2		=			
ANR	4363465	Identifier	minopcode		4363190	0					
ANR	4363466	CallExpression	"R_MAX ( 1 , mininstrsz )"		4363190	1					
ANR	4363467	Callee	R_MAX		4363190	0					
ANR	4363468	Identifier	R_MAX		4363190	0					
ANR	4363469	ArgumentList	1		4363190	1					
ANR	4363470	Argument	1		4363190	0					
ANR	4363471	PrimaryExpression	1		4363190	0					
ANR	4363472	Argument	mininstrsz		4363190	1					
ANR	4363473	Identifier	mininstrsz		4363190	0					
ANR	4363474	IdentifierDeclStatement	ut8 * buf = malloc ( bsize ) ;	865:1:24117:24142	4363190	22	True				
ANR	4363475	IdentifierDecl	* buf = malloc ( bsize )		4363190	0					
ANR	4363476	IdentifierDeclType	ut8 *		4363190	0					
ANR	4363477	Identifier	buf		4363190	1					
ANR	4363478	AssignmentExpression	* buf = malloc ( bsize )		4363190	2		=			
ANR	4363479	Identifier	buf		4363190	0					
ANR	4363480	CallExpression	malloc ( bsize )		4363190	1					
ANR	4363481	Callee	malloc		4363190	0					
ANR	4363482	Identifier	malloc		4363190	0					
ANR	4363483	ArgumentList	bsize		4363190	1					
ANR	4363484	Argument	bsize		4363190	0					
ANR	4363485	Identifier	bsize		4363190	0					
ANR	4363486	IfStatement	if ( ! buf )		4363190	23					
ANR	4363487	Condition	! buf	866:5:24149:24152	4363190	0	True				
ANR	4363488	UnaryOperationExpression	! buf		4363190	0					
ANR	4363489	UnaryOperator	!		4363190	0					
ANR	4363490	Identifier	buf		4363190	1					
ANR	4363491	CompoundStatement		30:11:1073:1073	4363190	1					
ANR	4363492	ExpressionStatement	free ( buf )	867:2:24159:24169	4363190	0	True				
ANR	4363493	CallExpression	free ( buf )		4363190	0					
ANR	4363494	Callee	free		4363190	0					
ANR	4363495	Identifier	free		4363190	0					
ANR	4363496	ArgumentList	buf		4363190	1					
ANR	4363497	Argument	buf		4363190	0					
ANR	4363498	Identifier	buf		4363190	0					
ANR	4363499	ExpressionStatement	r_anal_esil_free ( esil )	868:2:24173:24196	4363190	1	True				
ANR	4363500	CallExpression	r_anal_esil_free ( esil )		4363190	0					
ANR	4363501	Callee	r_anal_esil_free		4363190	0					
ANR	4363502	Identifier	r_anal_esil_free		4363190	0					
ANR	4363503	ArgumentList	esil		4363190	1					
ANR	4363504	Argument	esil		4363190	0					
ANR	4363505	Identifier	esil		4363190	0					
ANR	4363506	ReturnStatement	return ;	869:2:24200:24206	4363190	2	True				
ANR	4363507	ExpressionStatement	r_reg_arena_push ( core -> anal -> reg )	871:1:24212:24246	4363190	24	True				
ANR	4363508	CallExpression	r_reg_arena_push ( core -> anal -> reg )		4363190	0					
ANR	4363509	Callee	r_reg_arena_push		4363190	0					
ANR	4363510	Identifier	r_reg_arena_push		4363190	0					
ANR	4363511	ArgumentList	core -> anal -> reg		4363190	1					
ANR	4363512	Argument	core -> anal -> reg		4363190	0					
ANR	4363513	PtrMemberAccess	core -> anal -> reg		4363190	0					
ANR	4363514	PtrMemberAccess	core -> anal		4363190	0					
ANR	4363515	Identifier	core		4363190	0					
ANR	4363516	Identifier	anal		4363190	1					
ANR	4363517	Identifier	reg		4363190	1					
ANR	4363518	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , true )"	872:1:24249:24299	4363190	25	True				
ANR	4363519	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , true )"		4363190	0					
ANR	4363520	Callee	r_debug_reg_sync		4363190	0					
ANR	4363521	Identifier	r_debug_reg_sync		4363190	0					
ANR	4363522	ArgumentList	core -> dbg		4363190	1					
ANR	4363523	Argument	core -> dbg		4363190	0					
ANR	4363524	PtrMemberAccess	core -> dbg		4363190	0					
ANR	4363525	Identifier	core		4363190	0					
ANR	4363526	Identifier	dbg		4363190	1					
ANR	4363527	Argument	R_REG_TYPE_ALL		4363190	1					
ANR	4363528	Identifier	R_REG_TYPE_ALL		4363190	0					
ANR	4363529	Argument	true		4363190	2					
ANR	4363530	Identifier	true		4363190	0					
ANR	4363531	IdentifierDeclStatement	"ut64 spval = r_reg_getv ( esil -> anal -> reg , sp_name ) ;"	873:1:24302:24352	4363190	26	True				
ANR	4363532	IdentifierDecl	"spval = r_reg_getv ( esil -> anal -> reg , sp_name )"		4363190	0					
ANR	4363533	IdentifierDeclType	ut64		4363190	0					
ANR	4363534	Identifier	spval		4363190	1					
ANR	4363535	AssignmentExpression	"spval = r_reg_getv ( esil -> anal -> reg , sp_name )"		4363190	2		=			
ANR	4363536	Identifier	spval		4363190	0					
ANR	4363537	CallExpression	"r_reg_getv ( esil -> anal -> reg , sp_name )"		4363190	1					
ANR	4363538	Callee	r_reg_getv		4363190	0					
ANR	4363539	Identifier	r_reg_getv		4363190	0					
ANR	4363540	ArgumentList	esil -> anal -> reg		4363190	1					
ANR	4363541	Argument	esil -> anal -> reg		4363190	0					
ANR	4363542	PtrMemberAccess	esil -> anal -> reg		4363190	0					
ANR	4363543	PtrMemberAccess	esil -> anal		4363190	0					
ANR	4363544	Identifier	esil		4363190	0					
ANR	4363545	Identifier	anal		4363190	1					
ANR	4363546	Identifier	reg		4363190	1					
ANR	4363547	Argument	sp_name		4363190	1					
ANR	4363548	Identifier	sp_name		4363190	0					
ANR	4363549	IfStatement	if ( spval )		4363190	27					
ANR	4363550	Condition	spval	874:5:24359:24363	4363190	0	True				
ANR	4363551	Identifier	spval		4363190	0					
ANR	4363552	CompoundStatement		42:2:1443:1500	4363190	1					
ANR	4363553	IdentifierDeclStatement	"RRegItem * sp = r_reg_get ( esil -> anal -> reg , sp_name , - 1 ) ;"	876:2:24412:24467	4363190	0	True				
ANR	4363554	IdentifierDecl	"* sp = r_reg_get ( esil -> anal -> reg , sp_name , - 1 )"		4363190	0					
ANR	4363555	IdentifierDeclType	RRegItem *		4363190	0					
ANR	4363556	Identifier	sp		4363190	1					
ANR	4363557	AssignmentExpression	"* sp = r_reg_get ( esil -> anal -> reg , sp_name , - 1 )"		4363190	2		=			
ANR	4363558	Identifier	sp		4363190	0					
ANR	4363559	CallExpression	"r_reg_get ( esil -> anal -> reg , sp_name , - 1 )"		4363190	1					
ANR	4363560	Callee	r_reg_get		4363190	0					
ANR	4363561	Identifier	r_reg_get		4363190	0					
ANR	4363562	ArgumentList	esil -> anal -> reg		4363190	1					
ANR	4363563	Argument	esil -> anal -> reg		4363190	0					
ANR	4363564	PtrMemberAccess	esil -> anal -> reg		4363190	0					
ANR	4363565	PtrMemberAccess	esil -> anal		4363190	0					
ANR	4363566	Identifier	esil		4363190	0					
ANR	4363567	Identifier	anal		4363190	1					
ANR	4363568	Identifier	reg		4363190	1					
ANR	4363569	Argument	sp_name		4363190	1					
ANR	4363570	Identifier	sp_name		4363190	0					
ANR	4363571	Argument	- 1		4363190	2					
ANR	4363572	UnaryOperationExpression	- 1		4363190	0					
ANR	4363573	UnaryOperator	-		4363190	0					
ANR	4363574	PrimaryExpression	1		4363190	1					
ANR	4363575	IdentifierDeclStatement	"ut64 curpc = r_reg_getv ( esil -> anal -> reg , pc_name ) ;"	877:2:24471:24521	4363190	1	True				
ANR	4363576	IdentifierDecl	"curpc = r_reg_getv ( esil -> anal -> reg , pc_name )"		4363190	0					
ANR	4363577	IdentifierDeclType	ut64		4363190	0					
ANR	4363578	Identifier	curpc		4363190	1					
ANR	4363579	AssignmentExpression	"curpc = r_reg_getv ( esil -> anal -> reg , pc_name )"		4363190	2		=			
ANR	4363580	Identifier	curpc		4363190	0					
ANR	4363581	CallExpression	"r_reg_getv ( esil -> anal -> reg , pc_name )"		4363190	1					
ANR	4363582	Callee	r_reg_getv		4363190	0					
ANR	4363583	Identifier	r_reg_getv		4363190	0					
ANR	4363584	ArgumentList	esil -> anal -> reg		4363190	1					
ANR	4363585	Argument	esil -> anal -> reg		4363190	0					
ANR	4363586	PtrMemberAccess	esil -> anal -> reg		4363190	0					
ANR	4363587	PtrMemberAccess	esil -> anal		4363190	0					
ANR	4363588	Identifier	esil		4363190	0					
ANR	4363589	Identifier	anal		4363190	1					
ANR	4363590	Identifier	reg		4363190	1					
ANR	4363591	Argument	pc_name		4363190	1					
ANR	4363592	Identifier	pc_name		4363190	0					
ANR	4363593	IdentifierDeclStatement	"int stacksz = r_core_get_stacksz ( core , fcn -> addr , curpc ) ;"	878:2:24525:24582	4363190	2	True				
ANR	4363594	IdentifierDecl	"stacksz = r_core_get_stacksz ( core , fcn -> addr , curpc )"		4363190	0					
ANR	4363595	IdentifierDeclType	int		4363190	0					
ANR	4363596	Identifier	stacksz		4363190	1					
ANR	4363597	AssignmentExpression	"stacksz = r_core_get_stacksz ( core , fcn -> addr , curpc )"		4363190	2		=			
ANR	4363598	Identifier	stacksz		4363190	0					
ANR	4363599	CallExpression	"r_core_get_stacksz ( core , fcn -> addr , curpc )"		4363190	1					
ANR	4363600	Callee	r_core_get_stacksz		4363190	0					
ANR	4363601	Identifier	r_core_get_stacksz		4363190	0					
ANR	4363602	ArgumentList	core		4363190	1					
ANR	4363603	Argument	core		4363190	0					
ANR	4363604	Identifier	core		4363190	0					
ANR	4363605	Argument	fcn -> addr		4363190	1					
ANR	4363606	PtrMemberAccess	fcn -> addr		4363190	0					
ANR	4363607	Identifier	fcn		4363190	0					
ANR	4363608	Identifier	addr		4363190	1					
ANR	4363609	Argument	curpc		4363190	2					
ANR	4363610	Identifier	curpc		4363190	0					
ANR	4363611	IfStatement	if ( stacksz > 0 )		4363190	3					
ANR	4363612	Condition	stacksz > 0	879:6:24590:24600	4363190	0	True				
ANR	4363613	RelationalExpression	stacksz > 0		4363190	0		>			
ANR	4363614	Identifier	stacksz		4363190	0					
ANR	4363615	PrimaryExpression	0		4363190	1					
ANR	4363616	CompoundStatement		43:19:1521:1521	4363190	1					
ANR	4363617	ExpressionStatement	r_reg_arena_zero ( esil -> anal -> reg )	880:3:24608:24642	4363190	0	True				
ANR	4363618	CallExpression	r_reg_arena_zero ( esil -> anal -> reg )		4363190	0					
ANR	4363619	Callee	r_reg_arena_zero		4363190	0					
ANR	4363620	Identifier	r_reg_arena_zero		4363190	0					
ANR	4363621	ArgumentList	esil -> anal -> reg		4363190	1					
ANR	4363622	Argument	esil -> anal -> reg		4363190	0					
ANR	4363623	PtrMemberAccess	esil -> anal -> reg		4363190	0					
ANR	4363624	PtrMemberAccess	esil -> anal		4363190	0					
ANR	4363625	Identifier	esil		4363190	0					
ANR	4363626	Identifier	anal		4363190	1					
ANR	4363627	Identifier	reg		4363190	1					
ANR	4363628	ExpressionStatement	"r_reg_set_value ( esil -> anal -> reg , sp , spval + stacksz )"	881:3:24672:24726	4363190	1	True				
ANR	4363629	CallExpression	"r_reg_set_value ( esil -> anal -> reg , sp , spval + stacksz )"		4363190	0					
ANR	4363630	Callee	r_reg_set_value		4363190	0					
ANR	4363631	Identifier	r_reg_set_value		4363190	0					
ANR	4363632	ArgumentList	esil -> anal -> reg		4363190	1					
ANR	4363633	Argument	esil -> anal -> reg		4363190	0					
ANR	4363634	PtrMemberAccess	esil -> anal -> reg		4363190	0					
ANR	4363635	PtrMemberAccess	esil -> anal		4363190	0					
ANR	4363636	Identifier	esil		4363190	0					
ANR	4363637	Identifier	anal		4363190	1					
ANR	4363638	Identifier	reg		4363190	1					
ANR	4363639	Argument	sp		4363190	1					
ANR	4363640	Identifier	sp		4363190	0					
ANR	4363641	Argument	spval + stacksz		4363190	2					
ANR	4363642	AdditiveExpression	spval + stacksz		4363190	0		+			
ANR	4363643	Identifier	spval		4363190	0					
ANR	4363644	Identifier	stacksz		4363190	1					
ANR	4363645	ElseStatement	else		4363190	0					
ANR	4363646	CompoundStatement		47:8:1658:1658	4363190	0					
ANR	4363647	ExpressionStatement	"r_core_cmd0 ( core , ""aeim"" )"	885:2:24766:24792	4363190	0	True				
ANR	4363648	CallExpression	"r_core_cmd0 ( core , ""aeim"" )"		4363190	0					
ANR	4363649	Callee	r_core_cmd0		4363190	0					
ANR	4363650	Identifier	r_core_cmd0		4363190	0					
ANR	4363651	ArgumentList	core		4363190	1					
ANR	4363652	Argument	core		4363190	0					
ANR	4363653	Identifier	core		4363190	0					
ANR	4363654	Argument	"""aeim"""		4363190	1					
ANR	4363655	PrimaryExpression	"""aeim"""		4363190	0					
ANR	4363656	ExpressionStatement	stack_set = true	886:2:24796:24812	4363190	1	True				
ANR	4363657	AssignmentExpression	stack_set = true		4363190	0		=			
ANR	4363658	Identifier	stack_set		4363190	0					
ANR	4363659	Identifier	true		4363190	1					
ANR	4363660	ExpressionStatement	"r_config_set_i ( core -> config , ""io.cache"" , 1 )"	888:1:24818:24862	4363190	28	True				
ANR	4363661	CallExpression	"r_config_set_i ( core -> config , ""io.cache"" , 1 )"		4363190	0					
ANR	4363662	Callee	r_config_set_i		4363190	0					
ANR	4363663	Identifier	r_config_set_i		4363190	0					
ANR	4363664	ArgumentList	core -> config		4363190	1					
ANR	4363665	Argument	core -> config		4363190	0					
ANR	4363666	PtrMemberAccess	core -> config		4363190	0					
ANR	4363667	Identifier	core		4363190	0					
ANR	4363668	Identifier	config		4363190	1					
ANR	4363669	Argument	"""io.cache"""		4363190	1					
ANR	4363670	PrimaryExpression	"""io.cache"""		4363190	0					
ANR	4363671	Argument	1		4363190	2					
ANR	4363672	PrimaryExpression	1		4363190	0					
ANR	4363673	ExpressionStatement	"r_config_set_i ( core -> config , ""dbg.follow"" , 0 )"	889:1:24865:24911	4363190	29	True				
ANR	4363674	CallExpression	"r_config_set_i ( core -> config , ""dbg.follow"" , 0 )"		4363190	0					
ANR	4363675	Callee	r_config_set_i		4363190	0					
ANR	4363676	Identifier	r_config_set_i		4363190	0					
ANR	4363677	ArgumentList	core -> config		4363190	1					
ANR	4363678	Argument	core -> config		4363190	0					
ANR	4363679	PtrMemberAccess	core -> config		4363190	0					
ANR	4363680	Identifier	core		4363190	0					
ANR	4363681	Identifier	config		4363190	1					
ANR	4363682	Argument	"""dbg.follow"""		4363190	1					
ANR	4363683	PrimaryExpression	"""dbg.follow"""		4363190	0					
ANR	4363684	Argument	0		4363190	2					
ANR	4363685	PrimaryExpression	0		4363190	0					
ANR	4363686	IdentifierDeclStatement	ut64 oldoff = core -> offset ;	890:1:24914:24940	4363190	30	True				
ANR	4363687	IdentifierDecl	oldoff = core -> offset		4363190	0					
ANR	4363688	IdentifierDeclType	ut64		4363190	0					
ANR	4363689	Identifier	oldoff		4363190	1					
ANR	4363690	AssignmentExpression	oldoff = core -> offset		4363190	2		=			
ANR	4363691	Identifier	oldoff		4363190	0					
ANR	4363692	PtrMemberAccess	core -> offset		4363190	1					
ANR	4363693	Identifier	core		4363190	0					
ANR	4363694	Identifier	offset		4363190	1					
ANR	4363695	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	891:1:24943:24973	4363190	31	True				
ANR	4363696	CallExpression	"r_cons_break_push ( NULL , NULL )"		4363190	0					
ANR	4363697	Callee	r_cons_break_push		4363190	0					
ANR	4363698	Identifier	r_cons_break_push		4363190	0					
ANR	4363699	ArgumentList	NULL		4363190	1					
ANR	4363700	Argument	NULL		4363190	0					
ANR	4363701	Identifier	NULL		4363190	0					
ANR	4363702	Argument	NULL		4363190	1					
ANR	4363703	Identifier	NULL		4363190	0					
ANR	4363704	Statement	r_list_foreach	892:1:24976:24989	4363190	32	True				
ANR	4363705	Statement	(	892:16:24991:24991	4363190	33	True				
ANR	4363706	Statement	fcn	892:17:24992:24994	4363190	34	True				
ANR	4363707	Statement	->	892:20:24995:24996	4363190	35	True				
ANR	4363708	Statement	bbs	892:22:24997:24999	4363190	36	True				
ANR	4363709	Statement	","	892:25:25000:25000	4363190	37	True				
ANR	4363710	Statement	it	892:27:25002:25003	4363190	38	True				
ANR	4363711	Statement	","	892:29:25004:25004	4363190	39	True				
ANR	4363712	Statement	bb	892:31:25006:25007	4363190	40	True				
ANR	4363713	Statement	)	892:33:25008:25008	4363190	41	True				
ANR	4363714	CompoundStatement		58:2:1954:1983	4363190	42					
ANR	4363715	IdentifierDeclStatement	ut64 at = bb -> addr ;	893:2:25014:25032	4363190	0	True				
ANR	4363716	IdentifierDecl	at = bb -> addr		4363190	0					
ANR	4363717	IdentifierDeclType	ut64		4363190	0					
ANR	4363718	Identifier	at		4363190	1					
ANR	4363719	AssignmentExpression	at = bb -> addr		4363190	2		=			
ANR	4363720	Identifier	at		4363190	0					
ANR	4363721	PtrMemberAccess	bb -> addr		4363190	1					
ANR	4363722	Identifier	bb		4363190	0					
ANR	4363723	Identifier	addr		4363190	1					
ANR	4363724	IdentifierDeclStatement	ut64 to = bb -> addr + bb -> size ;	894:2:25036:25065	4363190	1	True				
ANR	4363725	IdentifierDecl	to = bb -> addr + bb -> size		4363190	0					
ANR	4363726	IdentifierDeclType	ut64		4363190	0					
ANR	4363727	Identifier	to		4363190	1					
ANR	4363728	AssignmentExpression	to = bb -> addr + bb -> size		4363190	2		=			
ANR	4363729	Identifier	to		4363190	0					
ANR	4363730	AdditiveExpression	bb -> addr + bb -> size		4363190	1		+			
ANR	4363731	PtrMemberAccess	bb -> addr		4363190	0					
ANR	4363732	Identifier	bb		4363190	0					
ANR	4363733	Identifier	addr		4363190	1					
ANR	4363734	PtrMemberAccess	bb -> size		4363190	1					
ANR	4363735	Identifier	bb		4363190	0					
ANR	4363736	Identifier	size		4363190	1					
ANR	4363737	ExpressionStatement	"r_reg_set_value ( esil -> anal -> reg , pc , at )"	895:2:25069:25110	4363190	2	True				
ANR	4363738	CallExpression	"r_reg_set_value ( esil -> anal -> reg , pc , at )"		4363190	0					
ANR	4363739	Callee	r_reg_set_value		4363190	0					
ANR	4363740	Identifier	r_reg_set_value		4363190	0					
ANR	4363741	ArgumentList	esil -> anal -> reg		4363190	1					
ANR	4363742	Argument	esil -> anal -> reg		4363190	0					
ANR	4363743	PtrMemberAccess	esil -> anal -> reg		4363190	0					
ANR	4363744	PtrMemberAccess	esil -> anal		4363190	0					
ANR	4363745	Identifier	esil		4363190	0					
ANR	4363746	Identifier	anal		4363190	1					
ANR	4363747	Identifier	reg		4363190	1					
ANR	4363748	Argument	pc		4363190	1					
ANR	4363749	Identifier	pc		4363190	0					
ANR	4363750	Argument	at		4363190	2					
ANR	4363751	Identifier	at		4363190	0					
ANR	4363752	ForStatement	for ( i = 0 ; at < to ; i ++ )		4363190	3					
ANR	4363753	ForInit	i = 0 ;	896:7:25119:25124	4363190	0	True				
ANR	4363754	AssignmentExpression	i = 0		4363190	0		=			
ANR	4363755	Identifier	i		4363190	0					
ANR	4363756	PrimaryExpression	0		4363190	1					
ANR	4363757	Condition	at < to	896:14:25126:25132	4363190	1	True				
ANR	4363758	RelationalExpression	at < to		4363190	0		<			
ANR	4363759	Identifier	at		4363190	0					
ANR	4363760	Identifier	to		4363190	1					
ANR	4363761	PostIncDecOperationExpression	i ++	896:23:25135:25137	4363190	2	True				
ANR	4363762	Identifier	i		4363190	0					
ANR	4363763	IncDec	++		4363190	1					
ANR	4363764	CompoundStatement		102:3:3201:3245	4363190	3					
ANR	4363765	IfStatement	if ( r_cons_is_breaked ( ) )		4363190	0					
ANR	4363766	Condition	r_cons_is_breaked ( )	897:7:25149:25168	4363190	0	True				
ANR	4363767	CallExpression	r_cons_is_breaked ( )		4363190	0					
ANR	4363768	Callee	r_cons_is_breaked		4363190	0					
ANR	4363769	Identifier	r_cons_is_breaked		4363190	0					
ANR	4363770	ArgumentList			4363190	1					
ANR	4363771	CompoundStatement		61:29:2089:2089	4363190	1					
ANR	4363772	GotoStatement	goto beach ;	898:4:25177:25187	4363190	0	True				
ANR	4363773	Identifier	beach		4363190	0					
ANR	4363774	IfStatement	if ( at < bb -> addr )		4363190	1					
ANR	4363775	Condition	at < bb -> addr	900:7:25201:25213	4363190	0	True				
ANR	4363776	RelationalExpression	at < bb -> addr		4363190	0		<			
ANR	4363777	Identifier	at		4363190	0					
ANR	4363778	PtrMemberAccess	bb -> addr		4363190	1					
ANR	4363779	Identifier	bb		4363190	0					
ANR	4363780	Identifier	addr		4363190	1					
ANR	4363781	CompoundStatement		64:22:2134:2134	4363190	1					
ANR	4363782	BreakStatement	break ;	901:4:25222:25227	4363190	0	True				
ANR	4363783	IfStatement	if ( i >= ( bsize - 32 ) )		4363190	2					
ANR	4363784	Condition	i >= ( bsize - 32 )	903:7:25241:25257	4363190	0	True				
ANR	4363785	RelationalExpression	i >= ( bsize - 32 )		4363190	0		>=			
ANR	4363786	Identifier	i		4363190	0					
ANR	4363787	AdditiveExpression	bsize - 32		4363190	1		-			
ANR	4363788	Identifier	bsize		4363190	0					
ANR	4363789	PrimaryExpression	32		4363190	1					
ANR	4363790	CompoundStatement		67:26:2178:2178	4363190	1					
ANR	4363791	ExpressionStatement	i = 0	904:4:25266:25271	4363190	0	True				
ANR	4363792	AssignmentExpression	i = 0		4363190	0		=			
ANR	4363793	Identifier	i		4363190	0					
ANR	4363794	PrimaryExpression	0		4363190	1					
ANR	4363795	IfStatement	if ( ! i )		4363190	3					
ANR	4363796	Condition	! i	906:7:25285:25286	4363190	0	True				
ANR	4363797	UnaryOperationExpression	! i		4363190	0					
ANR	4363798	UnaryOperator	!		4363190	0					
ANR	4363799	Identifier	i		4363190	1					
ANR	4363800	CompoundStatement		70:11:2207:2207	4363190	1					
ANR	4363801	ExpressionStatement	"r_io_read_at ( core -> io , at , buf , bsize )"	907:4:25295:25334	4363190	0	True				
ANR	4363802	CallExpression	"r_io_read_at ( core -> io , at , buf , bsize )"		4363190	0					
ANR	4363803	Callee	r_io_read_at		4363190	0					
ANR	4363804	Identifier	r_io_read_at		4363190	0					
ANR	4363805	ArgumentList	core -> io		4363190	1					
ANR	4363806	Argument	core -> io		4363190	0					
ANR	4363807	PtrMemberAccess	core -> io		4363190	0					
ANR	4363808	Identifier	core		4363190	0					
ANR	4363809	Identifier	io		4363190	1					
ANR	4363810	Argument	at		4363190	1					
ANR	4363811	Identifier	at		4363190	0					
ANR	4363812	Argument	buf		4363190	2					
ANR	4363813	Identifier	buf		4363190	0					
ANR	4363814	Argument	bsize		4363190	3					
ANR	4363815	Identifier	bsize		4363190	0					
ANR	4363816	ExpressionStatement	"ret = r_anal_op ( core -> anal , & aop , at , buf + i , bsize - i , R_ANAL_OP_MASK_VAL )"	909:3:25344:25422	4363190	4	True				
ANR	4363817	AssignmentExpression	"ret = r_anal_op ( core -> anal , & aop , at , buf + i , bsize - i , R_ANAL_OP_MASK_VAL )"		4363190	0		=			
ANR	4363818	Identifier	ret		4363190	0					
ANR	4363819	CallExpression	"r_anal_op ( core -> anal , & aop , at , buf + i , bsize - i , R_ANAL_OP_MASK_VAL )"		4363190	1					
ANR	4363820	Callee	r_anal_op		4363190	0					
ANR	4363821	Identifier	r_anal_op		4363190	0					
ANR	4363822	ArgumentList	core -> anal		4363190	1					
ANR	4363823	Argument	core -> anal		4363190	0					
ANR	4363824	PtrMemberAccess	core -> anal		4363190	0					
ANR	4363825	Identifier	core		4363190	0					
ANR	4363826	Identifier	anal		4363190	1					
ANR	4363827	Argument	& aop		4363190	1					
ANR	4363828	UnaryOperationExpression	& aop		4363190	0					
ANR	4363829	UnaryOperator	&		4363190	0					
ANR	4363830	Identifier	aop		4363190	1					
ANR	4363831	Argument	at		4363190	2					
ANR	4363832	Identifier	at		4363190	0					
ANR	4363833	Argument	buf + i		4363190	3					
ANR	4363834	AdditiveExpression	buf + i		4363190	0		+			
ANR	4363835	Identifier	buf		4363190	0					
ANR	4363836	Identifier	i		4363190	1					
ANR	4363837	Argument	bsize - i		4363190	4					
ANR	4363838	AdditiveExpression	bsize - i		4363190	0		-			
ANR	4363839	Identifier	bsize		4363190	0					
ANR	4363840	Identifier	i		4363190	1					
ANR	4363841	Argument	R_ANAL_OP_MASK_VAL		4363190	5					
ANR	4363842	Identifier	R_ANAL_OP_MASK_VAL		4363190	0					
ANR	4363843	IfStatement	if ( ret <= 0 )		4363190	5					
ANR	4363844	Condition	ret <= 0	910:7:25431:25438	4363190	0	True				
ANR	4363845	RelationalExpression	ret <= 0		4363190	0		<=			
ANR	4363846	Identifier	ret		4363190	0					
ANR	4363847	PrimaryExpression	0		4363190	1					
ANR	4363848	CompoundStatement		74:17:2359:2359	4363190	1					
ANR	4363849	ExpressionStatement	i += minopcode	911:4:25447:25461	4363190	0	True				
ANR	4363850	AssignmentExpression	i += minopcode		4363190	0		+=			
ANR	4363851	Identifier	i		4363190	0					
ANR	4363852	Identifier	minopcode		4363190	1					
ANR	4363853	ExpressionStatement	at += minopcode	912:4:25467:25482	4363190	1	True				
ANR	4363854	AssignmentExpression	at += minopcode		4363190	0		+=			
ANR	4363855	Identifier	at		4363190	0					
ANR	4363856	Identifier	minopcode		4363190	1					
ANR	4363857	ExpressionStatement	r_anal_op_fini ( & aop )	913:4:25488:25509	4363190	2	True				
ANR	4363858	CallExpression	r_anal_op_fini ( & aop )		4363190	0					
ANR	4363859	Callee	r_anal_op_fini		4363190	0					
ANR	4363860	Identifier	r_anal_op_fini		4363190	0					
ANR	4363861	ArgumentList	& aop		4363190	1					
ANR	4363862	Argument	& aop		4363190	0					
ANR	4363863	UnaryOperationExpression	& aop		4363190	0					
ANR	4363864	UnaryOperator	&		4363190	0					
ANR	4363865	Identifier	aop		4363190	1					
ANR	4363866	ContinueStatement	continue ;	914:4:25515:25523	4363190	3	True				
ANR	4363867	ExpressionStatement	i += ret - 1	916:3:25533:25545	4363190	6	True				
ANR	4363868	AssignmentExpression	i += ret - 1		4363190	0		+=			
ANR	4363869	Identifier	i		4363190	0					
ANR	4363870	AdditiveExpression	ret - 1		4363190	1		-			
ANR	4363871	Identifier	ret		4363190	0					
ANR	4363872	PrimaryExpression	1		4363190	1					
ANR	4363873	ExpressionStatement	at += ret	917:3:25550:25559	4363190	7	True				
ANR	4363874	AssignmentExpression	at += ret		4363190	0		+=			
ANR	4363875	Identifier	at		4363190	0					
ANR	4363876	Identifier	ret		4363190	1					
ANR	4363877	IdentifierDeclStatement	int index = 0 ;	918:3:25564:25577	4363190	8	True				
ANR	4363878	IdentifierDecl	index = 0		4363190	0					
ANR	4363879	IdentifierDeclType	int		4363190	0					
ANR	4363880	Identifier	index		4363190	1					
ANR	4363881	AssignmentExpression	index = 0		4363190	2		=			
ANR	4363882	Identifier	index		4363190	0					
ANR	4363883	PrimaryExpression	0		4363190	1					
ANR	4363884	IfStatement	if ( aop . ireg )		4363190	9					
ANR	4363885	Condition	aop . ireg	919:7:25586:25593	4363190	0	True				
ANR	4363886	MemberAccess	aop . ireg		4363190	0					
ANR	4363887	Identifier	aop		4363190	0					
ANR	4363888	Identifier	ireg		4363190	1					
ANR	4363889	CompoundStatement		83:17:2514:2514	4363190	1					
ANR	4363890	ExpressionStatement	"index = r_reg_getv ( esil -> anal -> reg , aop . ireg ) * aop . scale"	920:4:25602:25660	4363190	0	True				
ANR	4363891	AssignmentExpression	"index = r_reg_getv ( esil -> anal -> reg , aop . ireg ) * aop . scale"		4363190	0		=			
ANR	4363892	Identifier	index		4363190	0					
ANR	4363893	MultiplicativeExpression	"r_reg_getv ( esil -> anal -> reg , aop . ireg ) * aop . scale"		4363190	1		*			
ANR	4363894	CallExpression	"r_reg_getv ( esil -> anal -> reg , aop . ireg )"		4363190	0					
ANR	4363895	Callee	r_reg_getv		4363190	0					
ANR	4363896	Identifier	r_reg_getv		4363190	0					
ANR	4363897	ArgumentList	esil -> anal -> reg		4363190	1					
ANR	4363898	Argument	esil -> anal -> reg		4363190	0					
ANR	4363899	PtrMemberAccess	esil -> anal -> reg		4363190	0					
ANR	4363900	PtrMemberAccess	esil -> anal		4363190	0					
ANR	4363901	Identifier	esil		4363190	0					
ANR	4363902	Identifier	anal		4363190	1					
ANR	4363903	Identifier	reg		4363190	1					
ANR	4363904	Argument	aop . ireg		4363190	1					
ANR	4363905	MemberAccess	aop . ireg		4363190	0					
ANR	4363906	Identifier	aop		4363190	0					
ANR	4363907	Identifier	ireg		4363190	1					
ANR	4363908	MemberAccess	aop . scale		4363190	1					
ANR	4363909	Identifier	aop		4363190	0					
ANR	4363910	Identifier	scale		4363190	1					
ANR	4363911	IdentifierDeclStatement	"int j , src_imm = - 1 , dst_imm = - 1 ;"	922:3:25670:25703	4363190	10	True				
ANR	4363912	IdentifierDecl	j		4363190	0					
ANR	4363913	IdentifierDeclType	int		4363190	0					
ANR	4363914	Identifier	j		4363190	1					
ANR	4363915	IdentifierDecl	src_imm = - 1		4363190	1					
ANR	4363916	IdentifierDeclType	int		4363190	0					
ANR	4363917	Identifier	src_imm		4363190	1					
ANR	4363918	AssignmentExpression	src_imm = - 1		4363190	2		=			
ANR	4363919	Identifier	src_imm		4363190	0					
ANR	4363920	UnaryOperationExpression	- 1		4363190	1					
ANR	4363921	UnaryOperator	-		4363190	0					
ANR	4363922	PrimaryExpression	1		4363190	1					
ANR	4363923	IdentifierDecl	dst_imm = - 1		4363190	2					
ANR	4363924	IdentifierDeclType	int		4363190	0					
ANR	4363925	Identifier	dst_imm		4363190	1					
ANR	4363926	AssignmentExpression	dst_imm = - 1		4363190	2		=			
ANR	4363927	Identifier	dst_imm		4363190	0					
ANR	4363928	UnaryOperationExpression	- 1		4363190	1					
ANR	4363929	UnaryOperator	-		4363190	0					
ANR	4363930	PrimaryExpression	1		4363190	1					
ANR	4363931	IdentifierDeclStatement	ut64 src_addr = UT64_MAX ;	923:3:25708:25732	4363190	11	True				
ANR	4363932	IdentifierDecl	src_addr = UT64_MAX		4363190	0					
ANR	4363933	IdentifierDeclType	ut64		4363190	0					
ANR	4363934	Identifier	src_addr		4363190	1					
ANR	4363935	AssignmentExpression	src_addr = UT64_MAX		4363190	2		=			
ANR	4363936	Identifier	UT64_MAX		4363190	0					
ANR	4363937	Identifier	UT64_MAX		4363190	1					
ANR	4363938	IdentifierDeclStatement	ut64 dst_addr = UT64_MAX ;	924:3:25737:25761	4363190	12	True				
ANR	4363939	IdentifierDecl	dst_addr = UT64_MAX		4363190	0					
ANR	4363940	IdentifierDeclType	ut64		4363190	0					
ANR	4363941	Identifier	dst_addr		4363190	1					
ANR	4363942	AssignmentExpression	dst_addr = UT64_MAX		4363190	2		=			
ANR	4363943	Identifier	UT64_MAX		4363190	0					
ANR	4363944	Identifier	UT64_MAX		4363190	1					
ANR	4363945	ForStatement	for ( j = 0 ; j < 3 ; j ++ )		4363190	13					
ANR	4363946	ForInit	j = 0 ;	925:8:25771:25776	4363190	0	True				
ANR	4363947	AssignmentExpression	j = 0		4363190	0		=			
ANR	4363948	Identifier	j		4363190	0					
ANR	4363949	PrimaryExpression	0		4363190	1					
ANR	4363950	Condition	j < 3	925:15:25778:25782	4363190	1	True				
ANR	4363951	RelationalExpression	j < 3		4363190	0		<			
ANR	4363952	Identifier	j		4363190	0					
ANR	4363953	PrimaryExpression	3		4363190	1					
ANR	4363954	PostIncDecOperationExpression	j ++	925:22:25785:25787	4363190	2	True				
ANR	4363955	Identifier	j		4363190	0					
ANR	4363956	IncDec	++		4363190	1					
ANR	4363957	CompoundStatement		89:27:2708:2708	4363190	3					
ANR	4363958	IfStatement	if ( aop . src [ j ] && aop . src [ j ] -> reg && aop . src [ j ] -> reg -> name )		4363190	0					
ANR	4363959	Condition	aop . src [ j ] && aop . src [ j ] -> reg && aop . src [ j ] -> reg -> name	926:8:25800:25853	4363190	0	True				
ANR	4363960	AndExpression	aop . src [ j ] && aop . src [ j ] -> reg && aop . src [ j ] -> reg -> name		4363190	0		&&			
ANR	4363961	ArrayIndexing	aop . src [ j ]		4363190	0					
ANR	4363962	MemberAccess	aop . src		4363190	0					
ANR	4363963	Identifier	aop		4363190	0					
ANR	4363964	Identifier	src		4363190	1					
ANR	4363965	Identifier	j		4363190	1					
ANR	4363966	AndExpression	aop . src [ j ] -> reg && aop . src [ j ] -> reg -> name		4363190	1		&&			
ANR	4363967	PtrMemberAccess	aop . src [ j ] -> reg		4363190	0					
ANR	4363968	ArrayIndexing	aop . src [ j ]		4363190	0					
ANR	4363969	MemberAccess	aop . src		4363190	0					
ANR	4363970	Identifier	aop		4363190	0					
ANR	4363971	Identifier	src		4363190	1					
ANR	4363972	Identifier	j		4363190	1					
ANR	4363973	Identifier	reg		4363190	1					
ANR	4363974	PtrMemberAccess	aop . src [ j ] -> reg -> name		4363190	1					
ANR	4363975	PtrMemberAccess	aop . src [ j ] -> reg		4363190	0					
ANR	4363976	ArrayIndexing	aop . src [ j ]		4363190	0					
ANR	4363977	MemberAccess	aop . src		4363190	0					
ANR	4363978	Identifier	aop		4363190	0					
ANR	4363979	Identifier	src		4363190	1					
ANR	4363980	Identifier	j		4363190	1					
ANR	4363981	Identifier	reg		4363190	1					
ANR	4363982	Identifier	name		4363190	1					
ANR	4363983	CompoundStatement		90:64:2774:2774	4363190	1					
ANR	4363984	ExpressionStatement	"src_addr = r_reg_getv ( esil -> anal -> reg , aop . src [ j ] -> reg -> name ) + index"	927:5:25863:25933	4363190	0	True				
ANR	4363985	AssignmentExpression	"src_addr = r_reg_getv ( esil -> anal -> reg , aop . src [ j ] -> reg -> name ) + index"		4363190	0		=			
ANR	4363986	Identifier	src_addr		4363190	0					
ANR	4363987	AdditiveExpression	"r_reg_getv ( esil -> anal -> reg , aop . src [ j ] -> reg -> name ) + index"		4363190	1		+			
ANR	4363988	CallExpression	"r_reg_getv ( esil -> anal -> reg , aop . src [ j ] -> reg -> name )"		4363190	0					
ANR	4363989	Callee	r_reg_getv		4363190	0					
ANR	4363990	Identifier	r_reg_getv		4363190	0					
ANR	4363991	ArgumentList	esil -> anal -> reg		4363190	1					
ANR	4363992	Argument	esil -> anal -> reg		4363190	0					
ANR	4363993	PtrMemberAccess	esil -> anal -> reg		4363190	0					
ANR	4363994	PtrMemberAccess	esil -> anal		4363190	0					
ANR	4363995	Identifier	esil		4363190	0					
ANR	4363996	Identifier	anal		4363190	1					
ANR	4363997	Identifier	reg		4363190	1					
ANR	4363998	Argument	aop . src [ j ] -> reg -> name		4363190	1					
ANR	4363999	PtrMemberAccess	aop . src [ j ] -> reg -> name		4363190	0					
ANR	4364000	PtrMemberAccess	aop . src [ j ] -> reg		4363190	0					
ANR	4364001	ArrayIndexing	aop . src [ j ]		4363190	0					
ANR	4364002	MemberAccess	aop . src		4363190	0					
ANR	4364003	Identifier	aop		4363190	0					
ANR	4364004	Identifier	src		4363190	1					
ANR	4364005	Identifier	j		4363190	1					
ANR	4364006	Identifier	reg		4363190	1					
ANR	4364007	Identifier	name		4363190	1					
ANR	4364008	Identifier	index		4363190	1					
ANR	4364009	ExpressionStatement	src_imm = aop . src [ j ] -> delta	928:5:25940:25967	4363190	1	True				
ANR	4364010	AssignmentExpression	src_imm = aop . src [ j ] -> delta		4363190	0		=			
ANR	4364011	Identifier	src_imm		4363190	0					
ANR	4364012	PtrMemberAccess	aop . src [ j ] -> delta		4363190	1					
ANR	4364013	ArrayIndexing	aop . src [ j ]		4363190	0					
ANR	4364014	MemberAccess	aop . src		4363190	0					
ANR	4364015	Identifier	aop		4363190	0					
ANR	4364016	Identifier	src		4363190	1					
ANR	4364017	Identifier	j		4363190	1					
ANR	4364018	Identifier	delta		4363190	1					
ANR	4364019	IfStatement	if ( aop . dst && aop . dst -> reg && aop . dst -> reg -> name )		4363190	14					
ANR	4364020	Condition	aop . dst && aop . dst -> reg && aop . dst -> reg -> name	931:7:25987:26031	4363190	0	True				
ANR	4364021	AndExpression	aop . dst && aop . dst -> reg && aop . dst -> reg -> name		4363190	0		&&			
ANR	4364022	MemberAccess	aop . dst		4363190	0					
ANR	4364023	Identifier	aop		4363190	0					
ANR	4364024	Identifier	dst		4363190	1					
ANR	4364025	AndExpression	aop . dst -> reg && aop . dst -> reg -> name		4363190	1		&&			
ANR	4364026	PtrMemberAccess	aop . dst -> reg		4363190	0					
ANR	4364027	MemberAccess	aop . dst		4363190	0					
ANR	4364028	Identifier	aop		4363190	0					
ANR	4364029	Identifier	dst		4363190	1					
ANR	4364030	Identifier	reg		4363190	1					
ANR	4364031	PtrMemberAccess	aop . dst -> reg -> name		4363190	1					
ANR	4364032	PtrMemberAccess	aop . dst -> reg		4363190	0					
ANR	4364033	MemberAccess	aop . dst		4363190	0					
ANR	4364034	Identifier	aop		4363190	0					
ANR	4364035	Identifier	dst		4363190	1					
ANR	4364036	Identifier	reg		4363190	1					
ANR	4364037	Identifier	name		4363190	1					
ANR	4364038	CompoundStatement		95:54:2952:2952	4363190	1					
ANR	4364039	ExpressionStatement	"dst_addr = r_reg_getv ( esil -> anal -> reg , aop . dst -> reg -> name ) + index"	932:4:26040:26107	4363190	0	True				
ANR	4364040	AssignmentExpression	"dst_addr = r_reg_getv ( esil -> anal -> reg , aop . dst -> reg -> name ) + index"		4363190	0		=			
ANR	4364041	Identifier	dst_addr		4363190	0					
ANR	4364042	AdditiveExpression	"r_reg_getv ( esil -> anal -> reg , aop . dst -> reg -> name ) + index"		4363190	1		+			
ANR	4364043	CallExpression	"r_reg_getv ( esil -> anal -> reg , aop . dst -> reg -> name )"		4363190	0					
ANR	4364044	Callee	r_reg_getv		4363190	0					
ANR	4364045	Identifier	r_reg_getv		4363190	0					
ANR	4364046	ArgumentList	esil -> anal -> reg		4363190	1					
ANR	4364047	Argument	esil -> anal -> reg		4363190	0					
ANR	4364048	PtrMemberAccess	esil -> anal -> reg		4363190	0					
ANR	4364049	PtrMemberAccess	esil -> anal		4363190	0					
ANR	4364050	Identifier	esil		4363190	0					
ANR	4364051	Identifier	anal		4363190	1					
ANR	4364052	Identifier	reg		4363190	1					
ANR	4364053	Argument	aop . dst -> reg -> name		4363190	1					
ANR	4364054	PtrMemberAccess	aop . dst -> reg -> name		4363190	0					
ANR	4364055	PtrMemberAccess	aop . dst -> reg		4363190	0					
ANR	4364056	MemberAccess	aop . dst		4363190	0					
ANR	4364057	Identifier	aop		4363190	0					
ANR	4364058	Identifier	dst		4363190	1					
ANR	4364059	Identifier	reg		4363190	1					
ANR	4364060	Identifier	name		4363190	1					
ANR	4364061	Identifier	index		4363190	1					
ANR	4364062	ExpressionStatement	dst_imm = aop . dst -> delta	933:4:26113:26137	4363190	1	True				
ANR	4364063	AssignmentExpression	dst_imm = aop . dst -> delta		4363190	0		=			
ANR	4364064	Identifier	dst_imm		4363190	0					
ANR	4364065	PtrMemberAccess	aop . dst -> delta		4363190	1					
ANR	4364066	MemberAccess	aop . dst		4363190	0					
ANR	4364067	Identifier	aop		4363190	0					
ANR	4364068	Identifier	dst		4363190	1					
ANR	4364069	Identifier	delta		4363190	1					
ANR	4364070	IdentifierDeclStatement	RAnalVar * var = aop . var ;	935:3:26147:26170	4363190	15	True				
ANR	4364071	IdentifierDecl	* var = aop . var		4363190	0					
ANR	4364072	IdentifierDeclType	RAnalVar *		4363190	0					
ANR	4364073	Identifier	var		4363190	1					
ANR	4364074	AssignmentExpression	* var = aop . var		4363190	2		=			
ANR	4364075	Identifier	var		4363190	0					
ANR	4364076	MemberAccess	aop . var		4363190	1					
ANR	4364077	Identifier	aop		4363190	0					
ANR	4364078	Identifier	var		4363190	1					
ANR	4364079	IdentifierDeclStatement	"char * slink = r_type_link_at ( TDB , src_addr ) ;"	936:3:26175:26219	4363190	16	True				
ANR	4364080	IdentifierDecl	"* slink = r_type_link_at ( TDB , src_addr )"		4363190	0					
ANR	4364081	IdentifierDeclType	char *		4363190	0					
ANR	4364082	Identifier	slink		4363190	1					
ANR	4364083	AssignmentExpression	"* slink = r_type_link_at ( TDB , src_addr )"		4363190	2		=			
ANR	4364084	Identifier	slink		4363190	0					
ANR	4364085	CallExpression	"r_type_link_at ( TDB , src_addr )"		4363190	1					
ANR	4364086	Callee	r_type_link_at		4363190	0					
ANR	4364087	Identifier	r_type_link_at		4363190	0					
ANR	4364088	ArgumentList	TDB		4363190	1					
ANR	4364089	Argument	TDB		4363190	0					
ANR	4364090	Identifier	TDB		4363190	0					
ANR	4364091	Argument	src_addr		4363190	1					
ANR	4364092	Identifier	src_addr		4363190	0					
ANR	4364093	IdentifierDeclStatement	"char * vlink = r_type_link_at ( TDB , src_addr + src_imm ) ;"	937:3:26224:26278	4363190	17	True				
ANR	4364094	IdentifierDecl	"* vlink = r_type_link_at ( TDB , src_addr + src_imm )"		4363190	0					
ANR	4364095	IdentifierDeclType	char *		4363190	0					
ANR	4364096	Identifier	vlink		4363190	1					
ANR	4364097	AssignmentExpression	"* vlink = r_type_link_at ( TDB , src_addr + src_imm )"		4363190	2		=			
ANR	4364098	Identifier	vlink		4363190	0					
ANR	4364099	CallExpression	"r_type_link_at ( TDB , src_addr + src_imm )"		4363190	1					
ANR	4364100	Callee	r_type_link_at		4363190	0					
ANR	4364101	Identifier	r_type_link_at		4363190	0					
ANR	4364102	ArgumentList	TDB		4363190	1					
ANR	4364103	Argument	TDB		4363190	0					
ANR	4364104	Identifier	TDB		4363190	0					
ANR	4364105	Argument	src_addr + src_imm		4363190	1					
ANR	4364106	AdditiveExpression	src_addr + src_imm		4363190	0		+			
ANR	4364107	Identifier	src_addr		4363190	0					
ANR	4364108	Identifier	src_imm		4363190	1					
ANR	4364109	IdentifierDeclStatement	"char * dlink = r_type_link_at ( TDB , dst_addr ) ;"	938:3:26283:26327	4363190	18	True				
ANR	4364110	IdentifierDecl	"* dlink = r_type_link_at ( TDB , dst_addr )"		4363190	0					
ANR	4364111	IdentifierDeclType	char *		4363190	0					
ANR	4364112	Identifier	dlink		4363190	1					
ANR	4364113	AssignmentExpression	"* dlink = r_type_link_at ( TDB , dst_addr )"		4363190	2		=			
ANR	4364114	Identifier	dlink		4363190	0					
ANR	4364115	CallExpression	"r_type_link_at ( TDB , dst_addr )"		4363190	1					
ANR	4364116	Callee	r_type_link_at		4363190	0					
ANR	4364117	Identifier	r_type_link_at		4363190	0					
ANR	4364118	ArgumentList	TDB		4363190	1					
ANR	4364119	Argument	TDB		4363190	0					
ANR	4364120	Identifier	TDB		4363190	0					
ANR	4364121	Argument	dst_addr		4363190	1					
ANR	4364122	Identifier	dst_addr		4363190	0					
ANR	4364123	IfStatement	if ( vlink && var && var -> kind != 'r' )		4363190	19					
ANR	4364124	Condition	vlink && var && var -> kind != 'r'	940:7:26402:26433	4363190	0	True				
ANR	4364125	AndExpression	vlink && var && var -> kind != 'r'		4363190	0		&&			
ANR	4364126	Identifier	vlink		4363190	0					
ANR	4364127	AndExpression	var && var -> kind != 'r'		4363190	1		&&			
ANR	4364128	Identifier	var		4363190	0					
ANR	4364129	EqualityExpression	var -> kind != 'r'		4363190	1		!=			
ANR	4364130	PtrMemberAccess	var -> kind		4363190	0					
ANR	4364131	Identifier	var		4363190	0					
ANR	4364132	Identifier	kind		4363190	1					
ANR	4364133	PrimaryExpression	'r'		4363190	1					
ANR	4364134	CompoundStatement		104:41:3354:3354	4363190	1					
ANR	4364135	IfStatement	"if ( r_type_kind ( TDB , vlink ) == R_TYPE_UNION )"		4363190	0					
ANR	4364136	Condition	"r_type_kind ( TDB , vlink ) == R_TYPE_UNION"	941:8:26446:26485	4363190	0	True				
ANR	4364137	EqualityExpression	"r_type_kind ( TDB , vlink ) == R_TYPE_UNION"		4363190	0		==			
ANR	4364138	CallExpression	"r_type_kind ( TDB , vlink )"		4363190	0					
ANR	4364139	Callee	r_type_kind		4363190	0					
ANR	4364140	Identifier	r_type_kind		4363190	0					
ANR	4364141	ArgumentList	TDB		4363190	1					
ANR	4364142	Argument	TDB		4363190	0					
ANR	4364143	Identifier	TDB		4363190	0					
ANR	4364144	Argument	vlink		4363190	1					
ANR	4364145	Identifier	vlink		4363190	0					
ANR	4364146	Identifier	R_TYPE_UNION		4363190	1					
ANR	4364147	CompoundStatement		105:50:3406:3406	4363190	1					
ANR	4364148	ExpressionStatement	"varpfx = ""union"""	942:5:26495:26511	4363190	0	True				
ANR	4364149	AssignmentExpression	"varpfx = ""union"""		4363190	0		=			
ANR	4364150	Identifier	varpfx		4363190	0					
ANR	4364151	PrimaryExpression	"""union"""		4363190	1					
ANR	4364152	ElseStatement	else		4363190	0					
ANR	4364153	CompoundStatement		107:11:3442:3442	4363190	0					
ANR	4364154	ExpressionStatement	"varpfx = ""struct"""	944:5:26531:26548	4363190	0	True				
ANR	4364155	AssignmentExpression	"varpfx = ""struct"""		4363190	0		=			
ANR	4364156	Identifier	varpfx		4363190	0					
ANR	4364157	PrimaryExpression	"""struct"""		4363190	1					
ANR	4364158	IfStatement	"if ( strcmp ( var -> name , vlink ) && ! resolved )"		4363190	1					
ANR	4364159	Condition	"strcmp ( var -> name , vlink ) && ! resolved"	948:8:26677:26715	4363190	0	True				
ANR	4364160	AndExpression	"strcmp ( var -> name , vlink ) && ! resolved"		4363190	0		&&			
ANR	4364161	CallExpression	"strcmp ( var -> name , vlink )"		4363190	0					
ANR	4364162	Callee	strcmp		4363190	0					
ANR	4364163	Identifier	strcmp		4363190	0					
ANR	4364164	ArgumentList	var -> name		4363190	1					
ANR	4364165	Argument	var -> name		4363190	0					
ANR	4364166	PtrMemberAccess	var -> name		4363190	0					
ANR	4364167	Identifier	var		4363190	0					
ANR	4364168	Identifier	name		4363190	1					
ANR	4364169	Argument	vlink		4363190	1					
ANR	4364170	Identifier	vlink		4363190	0					
ANR	4364171	UnaryOperationExpression	! resolved		4363190	1					
ANR	4364172	UnaryOperator	!		4363190	0					
ANR	4364173	Identifier	resolved		4363190	1					
ANR	4364174	CompoundStatement		112:49:3636:3636	4363190	1					
ANR	4364175	ExpressionStatement	resolved = true	949:5:26725:26740	4363190	0	True				
ANR	4364176	AssignmentExpression	resolved = true		4363190	0		=			
ANR	4364177	Identifier	resolved		4363190	0					
ANR	4364178	Identifier	true		4363190	1					
ANR	4364179	ExpressionStatement	"r_anal_var_retype ( core -> anal , fcn -> addr , R_ANAL_VAR_SCOPE_LOCAL , - 1 , var -> kind , varpfx , - 1 , var -> isarg , var -> name )"	950:5:26747:26869	4363190	1	True				
ANR	4364180	CallExpression	"r_anal_var_retype ( core -> anal , fcn -> addr , R_ANAL_VAR_SCOPE_LOCAL , - 1 , var -> kind , varpfx , - 1 , var -> isarg , var -> name )"		4363190	0					
ANR	4364181	Callee	r_anal_var_retype		4363190	0					
ANR	4364182	Identifier	r_anal_var_retype		4363190	0					
ANR	4364183	ArgumentList	core -> anal		4363190	1					
ANR	4364184	Argument	core -> anal		4363190	0					
ANR	4364185	PtrMemberAccess	core -> anal		4363190	0					
ANR	4364186	Identifier	core		4363190	0					
ANR	4364187	Identifier	anal		4363190	1					
ANR	4364188	Argument	fcn -> addr		4363190	1					
ANR	4364189	PtrMemberAccess	fcn -> addr		4363190	0					
ANR	4364190	Identifier	fcn		4363190	0					
ANR	4364191	Identifier	addr		4363190	1					
ANR	4364192	Argument	R_ANAL_VAR_SCOPE_LOCAL		4363190	2					
ANR	4364193	Identifier	R_ANAL_VAR_SCOPE_LOCAL		4363190	0					
ANR	4364194	Argument	- 1		4363190	3					
ANR	4364195	UnaryOperationExpression	- 1		4363190	0					
ANR	4364196	UnaryOperator	-		4363190	0					
ANR	4364197	PrimaryExpression	1		4363190	1					
ANR	4364198	Argument	var -> kind		4363190	4					
ANR	4364199	PtrMemberAccess	var -> kind		4363190	0					
ANR	4364200	Identifier	var		4363190	0					
ANR	4364201	Identifier	kind		4363190	1					
ANR	4364202	Argument	varpfx		4363190	5					
ANR	4364203	Identifier	varpfx		4363190	0					
ANR	4364204	Argument	- 1		4363190	6					
ANR	4364205	UnaryOperationExpression	- 1		4363190	0					
ANR	4364206	UnaryOperator	-		4363190	0					
ANR	4364207	PrimaryExpression	1		4363190	1					
ANR	4364208	Argument	var -> isarg		4363190	7					
ANR	4364209	PtrMemberAccess	var -> isarg		4363190	0					
ANR	4364210	Identifier	var		4363190	0					
ANR	4364211	Identifier	isarg		4363190	1					
ANR	4364212	Argument	var -> name		4363190	8					
ANR	4364213	PtrMemberAccess	var -> name		4363190	0					
ANR	4364214	Identifier	var		4363190	0					
ANR	4364215	Identifier	name		4363190	1					
ANR	4364216	ExpressionStatement	"r_anal_var_rename ( core -> anal , fcn -> addr , R_ANAL_VAR_SCOPE_LOCAL , var -> kind , var -> name , vlink , false )"	952:5:26876:26984	4363190	2	True				
ANR	4364217	CallExpression	"r_anal_var_rename ( core -> anal , fcn -> addr , R_ANAL_VAR_SCOPE_LOCAL , var -> kind , var -> name , vlink , false )"		4363190	0					
ANR	4364218	Callee	r_anal_var_rename		4363190	0					
ANR	4364219	Identifier	r_anal_var_rename		4363190	0					
ANR	4364220	ArgumentList	core -> anal		4363190	1					
ANR	4364221	Argument	core -> anal		4363190	0					
ANR	4364222	PtrMemberAccess	core -> anal		4363190	0					
ANR	4364223	Identifier	core		4363190	0					
ANR	4364224	Identifier	anal		4363190	1					
ANR	4364225	Argument	fcn -> addr		4363190	1					
ANR	4364226	PtrMemberAccess	fcn -> addr		4363190	0					
ANR	4364227	Identifier	fcn		4363190	0					
ANR	4364228	Identifier	addr		4363190	1					
ANR	4364229	Argument	R_ANAL_VAR_SCOPE_LOCAL		4363190	2					
ANR	4364230	Identifier	R_ANAL_VAR_SCOPE_LOCAL		4363190	0					
ANR	4364231	Argument	var -> kind		4363190	3					
ANR	4364232	PtrMemberAccess	var -> kind		4363190	0					
ANR	4364233	Identifier	var		4363190	0					
ANR	4364234	Identifier	kind		4363190	1					
ANR	4364235	Argument	var -> name		4363190	4					
ANR	4364236	PtrMemberAccess	var -> name		4363190	0					
ANR	4364237	Identifier	var		4363190	0					
ANR	4364238	Identifier	name		4363190	1					
ANR	4364239	Argument	vlink		4363190	5					
ANR	4364240	Identifier	vlink		4363190	0					
ANR	4364241	Argument	false		4363190	6					
ANR	4364242	Identifier	false		4363190	0					
ANR	4364243	ElseStatement	else		4363190	0					
ANR	4364244	IfStatement	if ( slink )		4363190	0					
ANR	4364245	Condition	slink	955:14:27006:27010	4363190	0	True				
ANR	4364246	Identifier	slink		4363190	0					
ANR	4364247	CompoundStatement		119:21:3931:3931	4363190	1					
ANR	4364248	ExpressionStatement	"set_offset_hint ( core , aop , slink , src_addr , at - ret , src_imm )"	956:4:27019:27082	4363190	0	True				
ANR	4364249	CallExpression	"set_offset_hint ( core , aop , slink , src_addr , at - ret , src_imm )"		4363190	0					
ANR	4364250	Callee	set_offset_hint		4363190	0					
ANR	4364251	Identifier	set_offset_hint		4363190	0					
ANR	4364252	ArgumentList	core		4363190	1					
ANR	4364253	Argument	core		4363190	0					
ANR	4364254	Identifier	core		4363190	0					
ANR	4364255	Argument	aop		4363190	1					
ANR	4364256	Identifier	aop		4363190	0					
ANR	4364257	Argument	slink		4363190	2					
ANR	4364258	Identifier	slink		4363190	0					
ANR	4364259	Argument	src_addr		4363190	3					
ANR	4364260	Identifier	src_addr		4363190	0					
ANR	4364261	Argument	at - ret		4363190	4					
ANR	4364262	AdditiveExpression	at - ret		4363190	0		-			
ANR	4364263	Identifier	at		4363190	0					
ANR	4364264	Identifier	ret		4363190	1					
ANR	4364265	Argument	src_imm		4363190	5					
ANR	4364266	Identifier	src_imm		4363190	0					
ANR	4364267	ElseStatement	else		4363190	0					
ANR	4364268	IfStatement	if ( dlink )		4363190	0					
ANR	4364269	Condition	dlink	957:14:27098:27102	4363190	0	True				
ANR	4364270	Identifier	dlink		4363190	0					
ANR	4364271	CompoundStatement		121:21:4023:4023	4363190	1					
ANR	4364272	ExpressionStatement	"set_offset_hint ( core , aop , dlink , dst_addr , at - ret , dst_imm )"	958:4:27111:27174	4363190	0	True				
ANR	4364273	CallExpression	"set_offset_hint ( core , aop , dlink , dst_addr , at - ret , dst_imm )"		4363190	0					
ANR	4364274	Callee	set_offset_hint		4363190	0					
ANR	4364275	Identifier	set_offset_hint		4363190	0					
ANR	4364276	ArgumentList	core		4363190	1					
ANR	4364277	Argument	core		4363190	0					
ANR	4364278	Identifier	core		4363190	0					
ANR	4364279	Argument	aop		4363190	1					
ANR	4364280	Identifier	aop		4363190	0					
ANR	4364281	Argument	dlink		4363190	2					
ANR	4364282	Identifier	dlink		4363190	0					
ANR	4364283	Argument	dst_addr		4363190	3					
ANR	4364284	Identifier	dst_addr		4363190	0					
ANR	4364285	Argument	at - ret		4363190	4					
ANR	4364286	AdditiveExpression	at - ret		4363190	0		-			
ANR	4364287	Identifier	at		4363190	0					
ANR	4364288	Identifier	ret		4363190	1					
ANR	4364289	Argument	dst_imm		4363190	5					
ANR	4364290	Identifier	dst_imm		4363190	0					
ANR	4364291	IfStatement	if ( r_anal_op_nonlinear ( aop . type ) )		4363190	20					
ANR	4364292	Condition	r_anal_op_nonlinear ( aop . type )	960:7:27188:27217	4363190	0	True				
ANR	4364293	CallExpression	r_anal_op_nonlinear ( aop . type )		4363190	0					
ANR	4364294	Callee	r_anal_op_nonlinear		4363190	0					
ANR	4364295	Identifier	r_anal_op_nonlinear		4363190	0					
ANR	4364296	ArgumentList	aop . type		4363190	1					
ANR	4364297	Argument	aop . type		4363190	0					
ANR	4364298	MemberAccess	aop . type		4363190	0					
ANR	4364299	Identifier	aop		4363190	0					
ANR	4364300	Identifier	type		4363190	1					
ANR	4364301	CompoundStatement		124:39:4138:4138	4363190	1					
ANR	4364302	ExpressionStatement	"r_reg_set_value ( esil -> anal -> reg , pc , at )"	961:4:27226:27267	4363190	0	True				
ANR	4364303	CallExpression	"r_reg_set_value ( esil -> anal -> reg , pc , at )"		4363190	0					
ANR	4364304	Callee	r_reg_set_value		4363190	0					
ANR	4364305	Identifier	r_reg_set_value		4363190	0					
ANR	4364306	ArgumentList	esil -> anal -> reg		4363190	1					
ANR	4364307	Argument	esil -> anal -> reg		4363190	0					
ANR	4364308	PtrMemberAccess	esil -> anal -> reg		4363190	0					
ANR	4364309	PtrMemberAccess	esil -> anal		4363190	0					
ANR	4364310	Identifier	esil		4363190	0					
ANR	4364311	Identifier	anal		4363190	1					
ANR	4364312	Identifier	reg		4363190	1					
ANR	4364313	Argument	pc		4363190	1					
ANR	4364314	Identifier	pc		4363190	0					
ANR	4364315	Argument	at		4363190	2					
ANR	4364316	Identifier	at		4363190	0					
ANR	4364317	ExpressionStatement	"set_retval ( core , at - ret )"	962:4:27273:27300	4363190	1	True				
ANR	4364318	CallExpression	"set_retval ( core , at - ret )"		4363190	0					
ANR	4364319	Callee	set_retval		4363190	0					
ANR	4364320	Identifier	set_retval		4363190	0					
ANR	4364321	ArgumentList	core		4363190	1					
ANR	4364322	Argument	core		4363190	0					
ANR	4364323	Identifier	core		4363190	0					
ANR	4364324	Argument	at - ret		4363190	1					
ANR	4364325	AdditiveExpression	at - ret		4363190	0		-			
ANR	4364326	Identifier	at		4363190	0					
ANR	4364327	Identifier	ret		4363190	1					
ANR	4364328	ElseStatement	else		4363190	0					
ANR	4364329	CompoundStatement		127:10:4230:4230	4363190	0					
ANR	4364330	ExpressionStatement	"r_core_esil_step ( core , UT64_MAX , NULL , NULL , false )"	964:4:27318:27370	4363190	0	True				
ANR	4364331	CallExpression	"r_core_esil_step ( core , UT64_MAX , NULL , NULL , false )"		4363190	0					
ANR	4364332	Callee	r_core_esil_step		4363190	0					
ANR	4364333	Identifier	r_core_esil_step		4363190	0					
ANR	4364334	ArgumentList	core		4363190	1					
ANR	4364335	Argument	core		4363190	0					
ANR	4364336	Identifier	core		4363190	0					
ANR	4364337	Argument	UT64_MAX		4363190	1					
ANR	4364338	Identifier	UT64_MAX		4363190	0					
ANR	4364339	Argument	NULL		4363190	2					
ANR	4364340	Identifier	NULL		4363190	0					
ANR	4364341	Argument	NULL		4363190	3					
ANR	4364342	Identifier	NULL		4363190	0					
ANR	4364343	Argument	false		4363190	4					
ANR	4364344	Identifier	false		4363190	0					
ANR	4364345	ExpressionStatement	free ( dlink )	966:3:27380:27392	4363190	21	True				
ANR	4364346	CallExpression	free ( dlink )		4363190	0					
ANR	4364347	Callee	free		4363190	0					
ANR	4364348	Identifier	free		4363190	0					
ANR	4364349	ArgumentList	dlink		4363190	1					
ANR	4364350	Argument	dlink		4363190	0					
ANR	4364351	Identifier	dlink		4363190	0					
ANR	4364352	ExpressionStatement	free ( vlink )	967:3:27397:27409	4363190	22	True				
ANR	4364353	CallExpression	free ( vlink )		4363190	0					
ANR	4364354	Callee	free		4363190	0					
ANR	4364355	Identifier	free		4363190	0					
ANR	4364356	ArgumentList	vlink		4363190	1					
ANR	4364357	Argument	vlink		4363190	0					
ANR	4364358	Identifier	vlink		4363190	0					
ANR	4364359	ExpressionStatement	free ( slink )	968:3:27414:27426	4363190	23	True				
ANR	4364360	CallExpression	free ( slink )		4363190	0					
ANR	4364361	Callee	free		4363190	0					
ANR	4364362	Identifier	free		4363190	0					
ANR	4364363	ArgumentList	slink		4363190	1					
ANR	4364364	Argument	slink		4363190	0					
ANR	4364365	Identifier	slink		4363190	0					
ANR	4364366	ExpressionStatement	r_anal_op_fini ( & aop )	969:3:27431:27452	4363190	24	True				
ANR	4364367	CallExpression	r_anal_op_fini ( & aop )		4363190	0					
ANR	4364368	Callee	r_anal_op_fini		4363190	0					
ANR	4364369	Identifier	r_anal_op_fini		4363190	0					
ANR	4364370	ArgumentList	& aop		4363190	1					
ANR	4364371	Argument	& aop		4363190	0					
ANR	4364372	UnaryOperationExpression	& aop		4363190	0					
ANR	4364373	UnaryOperator	&		4363190	0					
ANR	4364374	Identifier	aop		4363190	1					
ANR	4364375	Label	beach :	972:0:27461:27466	4363190	43	True				
ANR	4364376	Identifier	beach		4363190	0					
ANR	4364377	ExpressionStatement	"r_core_cmd0 ( core , ""wc-*"" )"	973:1:27469:27495	4363190	44	True				
ANR	4364378	CallExpression	"r_core_cmd0 ( core , ""wc-*"" )"		4363190	0					
ANR	4364379	Callee	r_core_cmd0		4363190	0					
ANR	4364380	Identifier	r_core_cmd0		4363190	0					
ANR	4364381	ArgumentList	core		4363190	1					
ANR	4364382	Argument	core		4363190	0					
ANR	4364383	Identifier	core		4363190	0					
ANR	4364384	Argument	"""wc-*"""		4363190	1					
ANR	4364385	PrimaryExpression	"""wc-*"""		4363190	0					
ANR	4364386	ExpressionStatement	"r_config_set_i ( core -> config , ""io.cache"" , ioCache )"	974:1:27519:27569	4363190	45	True				
ANR	4364387	CallExpression	"r_config_set_i ( core -> config , ""io.cache"" , ioCache )"		4363190	0					
ANR	4364388	Callee	r_config_set_i		4363190	0					
ANR	4364389	Identifier	r_config_set_i		4363190	0					
ANR	4364390	ArgumentList	core -> config		4363190	1					
ANR	4364391	Argument	core -> config		4363190	0					
ANR	4364392	PtrMemberAccess	core -> config		4363190	0					
ANR	4364393	Identifier	core		4363190	0					
ANR	4364394	Identifier	config		4363190	1					
ANR	4364395	Argument	"""io.cache"""		4363190	1					
ANR	4364396	PrimaryExpression	"""io.cache"""		4363190	0					
ANR	4364397	Argument	ioCache		4363190	2					
ANR	4364398	Identifier	ioCache		4363190	0					
ANR	4364399	ExpressionStatement	"r_config_set_i ( core -> config , ""dbg.follow"" , dbg_follow )"	975:1:27572:27627	4363190	46	True				
ANR	4364400	CallExpression	"r_config_set_i ( core -> config , ""dbg.follow"" , dbg_follow )"		4363190	0					
ANR	4364401	Callee	r_config_set_i		4363190	0					
ANR	4364402	Identifier	r_config_set_i		4363190	0					
ANR	4364403	ArgumentList	core -> config		4363190	1					
ANR	4364404	Argument	core -> config		4363190	0					
ANR	4364405	PtrMemberAccess	core -> config		4363190	0					
ANR	4364406	Identifier	core		4363190	0					
ANR	4364407	Identifier	config		4363190	1					
ANR	4364408	Argument	"""dbg.follow"""		4363190	1					
ANR	4364409	PrimaryExpression	"""dbg.follow"""		4363190	0					
ANR	4364410	Argument	dbg_follow		4363190	2					
ANR	4364411	Identifier	dbg_follow		4363190	0					
ANR	4364412	IfStatement	if ( stack_set )		4363190	47					
ANR	4364413	Condition	stack_set	976:5:27634:27642	4363190	0	True				
ANR	4364414	Identifier	stack_set		4363190	0					
ANR	4364415	CompoundStatement		140:16:4563:4563	4363190	1					
ANR	4364416	ExpressionStatement	"r_core_cmd0 ( core , ""aeim-"" )"	977:2:27649:27676	4363190	0	True				
ANR	4364417	CallExpression	"r_core_cmd0 ( core , ""aeim-"" )"		4363190	0					
ANR	4364418	Callee	r_core_cmd0		4363190	0					
ANR	4364419	Identifier	r_core_cmd0		4363190	0					
ANR	4364420	ArgumentList	core		4363190	1					
ANR	4364421	Argument	core		4363190	0					
ANR	4364422	Identifier	core		4363190	0					
ANR	4364423	Argument	"""aeim-"""		4363190	1					
ANR	4364424	PrimaryExpression	"""aeim-"""		4363190	0					
ANR	4364425	ExpressionStatement	"r_core_seek ( core , oldoff , 1 )"	979:1:27682:27711	4363190	48	True				
ANR	4364426	CallExpression	"r_core_seek ( core , oldoff , 1 )"		4363190	0					
ANR	4364427	Callee	r_core_seek		4363190	0					
ANR	4364428	Identifier	r_core_seek		4363190	0					
ANR	4364429	ArgumentList	core		4363190	1					
ANR	4364430	Argument	core		4363190	0					
ANR	4364431	Identifier	core		4363190	0					
ANR	4364432	Argument	oldoff		4363190	1					
ANR	4364433	Identifier	oldoff		4363190	0					
ANR	4364434	Argument	1		4363190	2					
ANR	4364435	PrimaryExpression	1		4363190	0					
ANR	4364436	ExpressionStatement	r_anal_esil_free ( esil )	980:1:27714:27737	4363190	49	True				
ANR	4364437	CallExpression	r_anal_esil_free ( esil )		4363190	0					
ANR	4364438	Callee	r_anal_esil_free		4363190	0					
ANR	4364439	Identifier	r_anal_esil_free		4363190	0					
ANR	4364440	ArgumentList	esil		4363190	1					
ANR	4364441	Argument	esil		4363190	0					
ANR	4364442	Identifier	esil		4363190	0					
ANR	4364443	ExpressionStatement	r_reg_arena_pop ( core -> anal -> reg )	981:1:27740:27773	4363190	50	True				
ANR	4364444	CallExpression	r_reg_arena_pop ( core -> anal -> reg )		4363190	0					
ANR	4364445	Callee	r_reg_arena_pop		4363190	0					
ANR	4364446	Identifier	r_reg_arena_pop		4363190	0					
ANR	4364447	ArgumentList	core -> anal -> reg		4363190	1					
ANR	4364448	Argument	core -> anal -> reg		4363190	0					
ANR	4364449	PtrMemberAccess	core -> anal -> reg		4363190	0					
ANR	4364450	PtrMemberAccess	core -> anal		4363190	0					
ANR	4364451	Identifier	core		4363190	0					
ANR	4364452	Identifier	anal		4363190	1					
ANR	4364453	Identifier	reg		4363190	1					
ANR	4364454	ExpressionStatement	"r_core_cmd0 ( core , "".ar*"" )"	982:1:27776:27802	4363190	51	True				
ANR	4364455	CallExpression	"r_core_cmd0 ( core , "".ar*"" )"		4363190	0					
ANR	4364456	Callee	r_core_cmd0		4363190	0					
ANR	4364457	Identifier	r_core_cmd0		4363190	0					
ANR	4364458	ArgumentList	core		4363190	1					
ANR	4364459	Argument	core		4363190	0					
ANR	4364460	Identifier	core		4363190	0					
ANR	4364461	Argument	""".ar*"""		4363190	1					
ANR	4364462	PrimaryExpression	""".ar*"""		4363190	0					
ANR	4364463	ExpressionStatement	r_cons_break_pop ( )	983:1:27805:27824	4363190	52	True				
ANR	4364464	CallExpression	r_cons_break_pop ( )		4363190	0					
ANR	4364465	Callee	r_cons_break_pop		4363190	0					
ANR	4364466	Identifier	r_cons_break_pop		4363190	0					
ANR	4364467	ArgumentList			4363190	1					
ANR	4364468	ExpressionStatement	free ( buf )	984:1:27827:27837	4363190	53	True				
ANR	4364469	CallExpression	free ( buf )		4363190	0					
ANR	4364470	Callee	free		4363190	0					
ANR	4364471	Identifier	free		4363190	0					
ANR	4364472	ArgumentList	buf		4363190	1					
ANR	4364473	Argument	buf		4363190	0					
ANR	4364474	Identifier	buf		4363190	0					
ANR	4364475	ReturnType	static void		4363190	1					
ANR	4364476	Identifier	link_struct_offset		4363190	2					
ANR	4364477	ParameterList	"RCore * core , RAnalFunction * fcn"		4363190	3					
ANR	4364478	Parameter	RCore * core	837:31:23048:23058	4363190	0	True				
ANR	4364479	ParameterType	RCore *		4363190	0					
ANR	4364480	Identifier	core		4363190	1					
ANR	4364481	Parameter	RAnalFunction * fcn	837:44:23061:23078	4363190	1	True				
ANR	4364482	ParameterType	RAnalFunction *		4363190	0					
ANR	4364483	Identifier	fcn		4363190	1					
ANR	4364484	CFGEntryNode	ENTRY		4363190		True				
ANR	4364485	CFGExitNode	EXIT		4363190		True				
ANR	4364486	Symbol	aop		4363190						
ANR	4364487	Symbol	* fcn		4363190						
ANR	4364488	Symbol	R_REG_NAME_PC		4363190						
ANR	4364489	Symbol	mininstrsz		4363190						
ANR	4364490	Symbol	core -> offset		4363190						
ANR	4364491	Symbol	stacksz		4363190						
ANR	4364492	Symbol	aop . src [ j ] -> delta		4363190						
ANR	4364493	Symbol	* * aop . src		4363190						
ANR	4364494	Symbol	minopcode		4363190						
ANR	4364495	Symbol	addrsize		4363190						
ANR	4364496	Symbol	esil -> anal -> reg		4363190						
ANR	4364497	Symbol	aop . dst -> delta		4363190						
ANR	4364498	Symbol	* esil		4363190						
ANR	4364499	Symbol	r_anal_op		4363190						
ANR	4364500	Symbol	core -> blocksize		4363190						
ANR	4364501	Symbol	aop . ireg		4363190						
ANR	4364502	Symbol	aop . dst -> reg		4363190						
ANR	4364503	Symbol	var		4363190						
ANR	4364504	Symbol	stack_set		4363190						
ANR	4364505	Symbol	index		4363190						
ANR	4364506	Symbol	aop . src		4363190						
ANR	4364507	Symbol	it		4363190						
ANR	4364508	Symbol	iotrap		4363190						
ANR	4364509	Symbol	* * aop . dst		4363190						
ANR	4364510	Symbol	spval		4363190						
ANR	4364511	Symbol	var -> isarg		4363190						
ANR	4364512	Symbol	& aop		4363190						
ANR	4364513	Symbol	at		4363190						
ANR	4364514	Symbol	r_config_get_i		4363190						
ANR	4364515	Symbol	* * * j		4363190						
ANR	4364516	Symbol	bb		4363190						
ANR	4364517	Symbol	pc_name		4363190						
ANR	4364518	Symbol	* core		4363190						
ANR	4364519	Symbol	aop . dst		4363190						
ANR	4364520	Symbol	ioCache		4363190						
ANR	4364521	Symbol	* aop . src [ j ] -> reg		4363190						
ANR	4364522	Symbol	core -> anal		4363190						
ANR	4364523	Symbol	dbg_follow		4363190						
ANR	4364524	Symbol	fcn		4363190						
ANR	4364525	Symbol	* var		4363190						
ANR	4364526	Symbol	r_cons_is_breaked		4363190						
ANR	4364527	Symbol	varpfx		4363190						
ANR	4364528	Symbol	* aop		4363190						
ANR	4364529	Symbol	core -> io		4363190						
ANR	4364530	Symbol	R_REG_TYPE_ALL		4363190						
ANR	4364531	Symbol	* * aop		4363190						
ANR	4364532	Symbol	sp		4363190						
ANR	4364533	Symbol	resolved		4363190						
ANR	4364534	Symbol	R_ANAL_ARCHINFO_MIN_OP_SIZE		4363190						
ANR	4364535	Symbol	malloc		4363190						
ANR	4364536	Symbol	* esil -> anal		4363190						
ANR	4364537	Symbol	oldoff		4363190						
ANR	4364538	Symbol	i		4363190						
ANR	4364539	Symbol	src_addr		4363190						
ANR	4364540	Symbol	j		4363190						
ANR	4364541	Symbol	slink		4363190						
ANR	4364542	Symbol	* * esil		4363190						
ANR	4364543	Symbol	buf		4363190						
ANR	4364544	Symbol	* core -> anal		4363190						
ANR	4364545	Symbol	esil -> anal		4363190						
ANR	4364546	Symbol	R_TYPE_UNION		4363190						
ANR	4364547	Symbol	R_MAX		4363190						
ANR	4364548	Symbol	r_anal_esil_new		4363190						
ANR	4364549	Symbol	fcn -> addr		4363190						
ANR	4364550	Symbol	r_type_link_at		4363190						
ANR	4364551	Symbol	src_imm		4363190						
ANR	4364552	Symbol	r_anal_op_nonlinear		4363190						
ANR	4364553	Symbol	to		4363190						
ANR	4364554	Symbol	esil		4363190						
ANR	4364555	Symbol	* * * aop		4363190						
ANR	4364556	Symbol	core -> anal -> reg		4363190						
ANR	4364557	Symbol	bb -> size		4363190						
ANR	4364558	Symbol	stacksize		4363190						
ANR	4364559	Symbol	r_anal_archinfo		4363190						
ANR	4364560	Symbol	aop . type		4363190						
ANR	4364561	Symbol	bb -> addr		4363190						
ANR	4364562	Symbol	aop . src [ j ] -> reg -> name		4363190						
ANR	4364563	Symbol	* aop . dst		4363190						
ANR	4364564	Symbol	dst_addr		4363190						
ANR	4364565	Symbol	aop . src [ j ] -> reg		4363190						
ANR	4364566	Symbol	curpc		4363190						
ANR	4364567	Symbol	R_ANAL_VAR_SCOPE_LOCAL		4363190						
ANR	4364568	Symbol	r_reg_get		4363190						
ANR	4364569	Symbol	ret		4363190						
ANR	4364570	Symbol	strcmp		4363190						
ANR	4364571	Symbol	* * j		4363190						
ANR	4364572	Symbol	NULL		4363190						
ANR	4364573	Symbol	R_ANAL_OP_MASK_VAL		4363190						
ANR	4364574	Symbol	aop . scale		4363190						
ANR	4364575	Symbol	core		4363190						
ANR	4364576	Symbol	R_REG_NAME_SP		4363190						
ANR	4364577	Symbol	r_reg_get_name		4363190						
ANR	4364578	Symbol	true		4363190						
ANR	4364579	Symbol	var -> name		4363190						
ANR	4364580	Symbol	r_reg_getv		4363190						
ANR	4364581	Symbol	var -> kind		4363190						
ANR	4364582	Symbol	vlink		4363190						
ANR	4364583	Symbol	core -> anal -> sdb_types		4363190						
ANR	4364584	Symbol	TDB		4363190						
ANR	4364585	Symbol	sp_name		4363190						
ANR	4364586	Symbol	* aop . dst -> reg		4363190						
ANR	4364587	Symbol	UT64_MAX		4363190						
ANR	4364588	Symbol	* * core		4363190						
ANR	4364589	Symbol	core -> config		4363190						
ANR	4364590	Symbol	* bb		4363190						
ANR	4364591	Symbol	r_type_kind		4363190						
ANR	4364592	Symbol	false		4363190						
ANR	4364593	Symbol	aop . var		4363190						
ANR	4364594	Symbol	dlink		4363190						
ANR	4364595	Symbol	* aop . src		4363190						
ANR	4364596	Symbol	* * * aop . src		4363190						
ANR	4364597	Symbol	r_core_get_stacksz		4363190						
ANR	4364598	Symbol	pc		4363190						
ANR	4364599	Symbol	dst_imm		4363190						
ANR	4364600	Symbol	* j		4363190						
ANR	4364601	Symbol	aop . dst -> reg -> name		4363190						
ANR	4364602	Symbol	bsize		4363190						
ANR	4364603	Symbol	core -> dbg		4363190						
ANR	4364604	Function	typecmp	987:0:27842:27979							
ANR	4364605	FunctionDef	"typecmp (const void * a , const void * b)"		4364604	0					
ANR	4364606	CompoundStatement		987:49:27891:27979	4364604	0					
ANR	4364607	IdentifierDeclStatement	char * type1 = ( char * ) a ;	988:1:27894:27918	4364604	0	True				
ANR	4364608	IdentifierDecl	* type1 = ( char * ) a		4364604	0					
ANR	4364609	IdentifierDeclType	char *		4364604	0					
ANR	4364610	Identifier	type1		4364604	1					
ANR	4364611	AssignmentExpression	* type1 = ( char * ) a		4364604	2		=			
ANR	4364612	Identifier	type1		4364604	0					
ANR	4364613	CastExpression	( char * ) a		4364604	1					
ANR	4364614	CastTarget	char *		4364604	0					
ANR	4364615	Identifier	a		4364604	1					
ANR	4364616	IdentifierDeclStatement	char * type2 = ( char * ) b ;	989:1:27921:27945	4364604	1	True				
ANR	4364617	IdentifierDecl	* type2 = ( char * ) b		4364604	0					
ANR	4364618	IdentifierDeclType	char *		4364604	0					
ANR	4364619	Identifier	type2		4364604	1					
ANR	4364620	AssignmentExpression	* type2 = ( char * ) b		4364604	2		=			
ANR	4364621	Identifier	type2		4364604	0					
ANR	4364622	CastExpression	( char * ) b		4364604	1					
ANR	4364623	CastTarget	char *		4364604	0					
ANR	4364624	Identifier	b		4364604	1					
ANR	4364625	ReturnStatement	"return strcmp ( type1 , type2 ) ;"	990:1:27948:27977	4364604	2	True				
ANR	4364626	CallExpression	"strcmp ( type1 , type2 )"		4364604	0					
ANR	4364627	Callee	strcmp		4364604	0					
ANR	4364628	Identifier	strcmp		4364604	0					
ANR	4364629	ArgumentList	type1		4364604	1					
ANR	4364630	Argument	type1		4364604	0					
ANR	4364631	Identifier	type1		4364604	0					
ANR	4364632	Argument	type2		4364604	1					
ANR	4364633	Identifier	type2		4364604	0					
ANR	4364634	ReturnType	static int		4364604	1					
ANR	4364635	Identifier	typecmp		4364604	2					
ANR	4364636	ParameterList	"const void * a , const void * b"		4364604	3					
ANR	4364637	Parameter	const void * a	987:19:27861:27873	4364604	0	True				
ANR	4364638	ParameterType	const void *		4364604	0					
ANR	4364639	Identifier	a		4364604	1					
ANR	4364640	Parameter	const void * b	987:34:27876:27888	4364604	1	True				
ANR	4364641	ParameterType	const void *		4364604	0					
ANR	4364642	Identifier	b		4364604	1					
ANR	4364643	CFGEntryNode	ENTRY		4364604		True				
ANR	4364644	CFGExitNode	EXIT		4364604		True				
ANR	4364645	Symbol	strcmp		4364604						
ANR	4364646	Symbol	a		4364604						
ANR	4364647	Symbol	b		4364604						
ANR	4364648	Symbol	type2		4364604						
ANR	4364649	Symbol	type1		4364604						
ANR	4364650	Function	get_uniq_type	993:0:27982:28359							
ANR	4364651	FunctionDef	"get_uniq_type (RCore * core , RAnalFunction * fcn)"		4364650	0					
ANR	4364652	CompoundStatement		993:61:28043:28359	4364650	0					
ANR	4364653	IdentifierDeclStatement	RListIter * iter ;	994:1:28046:28061	4364650	0	True				
ANR	4364654	IdentifierDecl	* iter		4364650	0					
ANR	4364655	IdentifierDeclType	RListIter *		4364650	0					
ANR	4364656	Identifier	iter		4364650	1					
ANR	4364657	IdentifierDeclStatement	RAnalVar * var ;	995:1:28064:28077	4364650	1	True				
ANR	4364658	IdentifierDecl	* var		4364650	0					
ANR	4364659	IdentifierDeclType	RAnalVar *		4364650	0					
ANR	4364660	Identifier	var		4364650	1					
ANR	4364661	IdentifierDeclStatement	"RList * list = r_anal_var_all_list ( core -> anal , fcn ) ;"	996:1:28080:28131	4364650	2	True				
ANR	4364662	IdentifierDecl	"* list = r_anal_var_all_list ( core -> anal , fcn )"		4364650	0					
ANR	4364663	IdentifierDeclType	RList *		4364650	0					
ANR	4364664	Identifier	list		4364650	1					
ANR	4364665	AssignmentExpression	"* list = r_anal_var_all_list ( core -> anal , fcn )"		4364650	2		=			
ANR	4364666	Identifier	list		4364650	0					
ANR	4364667	CallExpression	"r_anal_var_all_list ( core -> anal , fcn )"		4364650	1					
ANR	4364668	Callee	r_anal_var_all_list		4364650	0					
ANR	4364669	Identifier	r_anal_var_all_list		4364650	0					
ANR	4364670	ArgumentList	core -> anal		4364650	1					
ANR	4364671	Argument	core -> anal		4364650	0					
ANR	4364672	PtrMemberAccess	core -> anal		4364650	0					
ANR	4364673	Identifier	core		4364650	0					
ANR	4364674	Identifier	anal		4364650	1					
ANR	4364675	Argument	fcn		4364650	1					
ANR	4364676	Identifier	fcn		4364650	0					
ANR	4364677	IdentifierDeclStatement	RList * type_used = r_list_new ( ) ;	997:8:28141:28173	4364650	3	True				
ANR	4364678	IdentifierDecl	* type_used = r_list_new ( )		4364650	0					
ANR	4364679	IdentifierDeclType	RList *		4364650	0					
ANR	4364680	Identifier	type_used		4364650	1					
ANR	4364681	AssignmentExpression	* type_used = r_list_new ( )		4364650	2		=			
ANR	4364682	Identifier	type_used		4364650	0					
ANR	4364683	CallExpression	r_list_new ( )		4364650	1					
ANR	4364684	Callee	r_list_new		4364650	0					
ANR	4364685	Identifier	r_list_new		4364650	0					
ANR	4364686	ArgumentList			4364650	1					
ANR	4364687	Statement	r_list_foreach	998:8:28183:28196	4364650	4	True				
ANR	4364688	Statement	(	998:23:28198:28198	4364650	5	True				
ANR	4364689	Statement	list	998:24:28199:28202	4364650	6	True				
ANR	4364690	Statement	","	998:28:28203:28203	4364650	7	True				
ANR	4364691	Statement	iter	998:30:28205:28208	4364650	8	True				
ANR	4364692	Statement	","	998:34:28209:28209	4364650	9	True				
ANR	4364693	Statement	var	998:36:28211:28213	4364650	10	True				
ANR	4364694	Statement	)	998:39:28214:28214	4364650	11	True				
ANR	4364695	CompoundStatement		6:41:172:172	4364650	12					
ANR	4364696	ExpressionStatement	"r_list_append ( type_used , var -> type )"	999:2:28220:28257	4364650	0	True				
ANR	4364697	CallExpression	"r_list_append ( type_used , var -> type )"		4364650	0					
ANR	4364698	Callee	r_list_append		4364650	0					
ANR	4364699	Identifier	r_list_append		4364650	0					
ANR	4364700	ArgumentList	type_used		4364650	1					
ANR	4364701	Argument	type_used		4364650	0					
ANR	4364702	Identifier	type_used		4364650	0					
ANR	4364703	Argument	var -> type		4364650	1					
ANR	4364704	PtrMemberAccess	var -> type		4364650	0					
ANR	4364705	Identifier	var		4364650	0					
ANR	4364706	Identifier	type		4364650	1					
ANR	4364707	IdentifierDeclStatement	"RList * uniq = r_list_uniq ( type_used , typecmp ) ;"	1001:1:28270:28317	4364650	13	True				
ANR	4364708	IdentifierDecl	"* uniq = r_list_uniq ( type_used , typecmp )"		4364650	0					
ANR	4364709	IdentifierDeclType	RList *		4364650	0					
ANR	4364710	Identifier	uniq		4364650	1					
ANR	4364711	AssignmentExpression	"* uniq = r_list_uniq ( type_used , typecmp )"		4364650	2		=			
ANR	4364712	Identifier	uniq		4364650	0					
ANR	4364713	CallExpression	"r_list_uniq ( type_used , typecmp )"		4364650	1					
ANR	4364714	Callee	r_list_uniq		4364650	0					
ANR	4364715	Identifier	r_list_uniq		4364650	0					
ANR	4364716	ArgumentList	type_used		4364650	1					
ANR	4364717	Argument	type_used		4364650	0					
ANR	4364718	Identifier	type_used		4364650	0					
ANR	4364719	Argument	typecmp		4364650	1					
ANR	4364720	Identifier	typecmp		4364650	0					
ANR	4364721	ExpressionStatement	r_list_free ( type_used )	1002:1:28320:28343	4364650	14	True				
ANR	4364722	CallExpression	r_list_free ( type_used )		4364650	0					
ANR	4364723	Callee	r_list_free		4364650	0					
ANR	4364724	Identifier	r_list_free		4364650	0					
ANR	4364725	ArgumentList	type_used		4364650	1					
ANR	4364726	Argument	type_used		4364650	0					
ANR	4364727	Identifier	type_used		4364650	0					
ANR	4364728	ReturnStatement	return uniq ;	1003:1:28346:28357	4364650	15	True				
ANR	4364729	Identifier	uniq		4364650	0					
ANR	4364730	ReturnType	static RList *		4364650	1					
ANR	4364731	Identifier	get_uniq_type		4364650	2					
ANR	4364732	ParameterList	"RCore * core , RAnalFunction * fcn"		4364650	3					
ANR	4364733	Parameter	RCore * core	993:28:28010:28020	4364650	0	True				
ANR	4364734	ParameterType	RCore *		4364650	0					
ANR	4364735	Identifier	core		4364650	1					
ANR	4364736	Parameter	RAnalFunction * fcn	993:41:28023:28040	4364650	1	True				
ANR	4364737	ParameterType	RAnalFunction *		4364650	0					
ANR	4364738	Identifier	fcn		4364650	1					
ANR	4364739	CFGEntryNode	ENTRY		4364650		True				
ANR	4364740	CFGExitNode	EXIT		4364650		True				
ANR	4364741	Symbol	r_anal_var_all_list		4364650						
ANR	4364742	Symbol	var		4364650						
ANR	4364743	Symbol	* core		4364650						
ANR	4364744	Symbol	iter		4364650						
ANR	4364745	Symbol	typecmp		4364650						
ANR	4364746	Symbol	var -> type		4364650						
ANR	4364747	Symbol	list		4364650						
ANR	4364748	Symbol	core -> anal		4364650						
ANR	4364749	Symbol	fcn		4364650						
ANR	4364750	Symbol	core		4364650						
ANR	4364751	Symbol	* var		4364650						
ANR	4364752	Symbol	r_list_uniq		4364650						
ANR	4364753	Symbol	type_used		4364650						
ANR	4364754	Symbol	uniq		4364650						
ANR	4364755	Symbol	r_list_new		4364650						
ANR	4364756	Function	cmd_type	1006:0:28362:50716							
ANR	4364757	FunctionDef	"cmd_type (void * data , const char * input)"		4364756	0					
ANR	4364758	CompoundStatement		1006:51:28413:50716	4364756	0					
ANR	4364759	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1007:1:28416:28443	4364756	0	True				
ANR	4364760	IdentifierDecl	* core = ( RCore * ) data		4364756	0					
ANR	4364761	IdentifierDeclType	RCore *		4364756	0					
ANR	4364762	Identifier	core		4364756	1					
ANR	4364763	AssignmentExpression	* core = ( RCore * ) data		4364756	2		=			
ANR	4364764	Identifier	core		4364756	0					
ANR	4364765	CastExpression	( RCore * ) data		4364756	1					
ANR	4364766	CastTarget	RCore *		4364756	0					
ANR	4364767	Identifier	data		4364756	1					
ANR	4364768	IdentifierDeclStatement	Sdb * TDB = core -> anal -> sdb_types ;	1008:1:28446:28478	4364756	1	True				
ANR	4364769	IdentifierDecl	* TDB = core -> anal -> sdb_types		4364756	0					
ANR	4364770	IdentifierDeclType	Sdb *		4364756	0					
ANR	4364771	Identifier	TDB		4364756	1					
ANR	4364772	AssignmentExpression	* TDB = core -> anal -> sdb_types		4364756	2		=			
ANR	4364773	Identifier	TDB		4364756	0					
ANR	4364774	PtrMemberAccess	core -> anal -> sdb_types		4364756	1					
ANR	4364775	PtrMemberAccess	core -> anal		4364756	0					
ANR	4364776	Identifier	core		4364756	0					
ANR	4364777	Identifier	anal		4364756	1					
ANR	4364778	Identifier	sdb_types		4364756	1					
ANR	4364779	IdentifierDeclStatement	char * res ;	1009:1:28481:28490	4364756	2	True				
ANR	4364780	IdentifierDecl	* res		4364756	0					
ANR	4364781	IdentifierDeclType	char *		4364756	0					
ANR	4364782	Identifier	res		4364756	1					
ANR	4364783	ExpressionStatement	TDB_ = TDB	1010:1:28493:28503	4364756	3	True				
ANR	4364784	AssignmentExpression	TDB_ = TDB		4364756	0		=			
ANR	4364785	Identifier	TDB_		4364756	0					
ANR	4364786	Identifier	TDB		4364756	1					
ANR	4364787	SwitchStatement	switch ( input [ 0 ] )		4364756	4					
ANR	4364788	Condition	input [ 0 ]	1012:9:28523:28530	4364756	0	True				
ANR	4364789	ArrayIndexing	input [ 0 ]		4364756	0					
ANR	4364790	Identifier	input		4364756	0					
ANR	4364791	PrimaryExpression	0		4364756	1					
ANR	4364792	CompoundStatement		7:19:119:119	4364756	1					
ANR	4364793	Label	case 'n' :	1013:1:28536:28544	4364756	0	True				
ANR	4364794	ExpressionStatement	"cmd_type_noreturn ( core , input + 1 )"	1014:2:28556:28591	4364756	1	True				
ANR	4364795	CallExpression	"cmd_type_noreturn ( core , input + 1 )"		4364756	0					
ANR	4364796	Callee	cmd_type_noreturn		4364756	0					
ANR	4364797	Identifier	cmd_type_noreturn		4364756	0					
ANR	4364798	ArgumentList	core		4364756	1					
ANR	4364799	Argument	core		4364756	0					
ANR	4364800	Identifier	core		4364756	0					
ANR	4364801	Argument	input + 1		4364756	1					
ANR	4364802	AdditiveExpression	input + 1		4364756	0		+			
ANR	4364803	Identifier	input		4364756	0					
ANR	4364804	PrimaryExpression	1		4364756	1					
ANR	4364805	BreakStatement	break ;	1015:2:28595:28600	4364756	2	True				
ANR	4364806	Label	case 'u' :	1017:1:28650:28658	4364756	3	True				
ANR	4364807	CompoundStatement		12:11:246:246	4364756	4					
ANR	4364808	SwitchStatement	switch ( input [ 1 ] )		4364756	0					
ANR	4364809	Condition	input [ 1 ]	1018:10:28680:28687	4364756	0	True				
ANR	4364810	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4364811	Identifier	input		4364756	0					
ANR	4364812	PrimaryExpression	1		4364756	1					
ANR	4364813	CompoundStatement		13:20:276:276	4364756	1					
ANR	4364814	Label	case '?' :	1019:2:28694:28702	4364756	0	True				
ANR	4364815	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tu )"	1020:3:28707:28742	4364756	1	True				
ANR	4364816	CallExpression	"r_core_cmd_help ( core , help_msg_tu )"		4364756	0					
ANR	4364817	Callee	r_core_cmd_help		4364756	0					
ANR	4364818	Identifier	r_core_cmd_help		4364756	0					
ANR	4364819	ArgumentList	core		4364756	1					
ANR	4364820	Argument	core		4364756	0					
ANR	4364821	Identifier	core		4364756	0					
ANR	4364822	Argument	help_msg_tu		4364756	1					
ANR	4364823	Identifier	help_msg_tu		4364756	0					
ANR	4364824	BreakStatement	break ;	1021:3:28747:28752	4364756	2	True				
ANR	4364825	Label	case '*' :	1022:2:28756:28764	4364756	3	True				
ANR	4364826	IfStatement	if ( input [ 2 ] == ' ' )		4364756	4					
ANR	4364827	Condition	input [ 2 ] == ' '	1023:7:28773:28787	4364756	0	True				
ANR	4364828	EqualityExpression	input [ 2 ] == ' '		4364756	0		==			
ANR	4364829	ArrayIndexing	input [ 2 ]		4364756	0					
ANR	4364830	Identifier	input		4364756	0					
ANR	4364831	PrimaryExpression	2		4364756	1					
ANR	4364832	PrimaryExpression	' '		4364756	1					
ANR	4364833	CompoundStatement		18:24:376:376	4364756	1					
ANR	4364834	ExpressionStatement	"showFormat ( core , r_str_trim_ro ( input + 2 ) , 1 )"	1024:4:28796:28843	4364756	0	True				
ANR	4364835	CallExpression	"showFormat ( core , r_str_trim_ro ( input + 2 ) , 1 )"		4364756	0					
ANR	4364836	Callee	showFormat		4364756	0					
ANR	4364837	Identifier	showFormat		4364756	0					
ANR	4364838	ArgumentList	core		4364756	1					
ANR	4364839	Argument	core		4364756	0					
ANR	4364840	Identifier	core		4364756	0					
ANR	4364841	Argument	r_str_trim_ro ( input + 2 )		4364756	1					
ANR	4364842	CallExpression	r_str_trim_ro ( input + 2 )		4364756	0					
ANR	4364843	Callee	r_str_trim_ro		4364756	0					
ANR	4364844	Identifier	r_str_trim_ro		4364756	0					
ANR	4364845	ArgumentList	input + 2		4364756	1					
ANR	4364846	Argument	input + 2		4364756	0					
ANR	4364847	AdditiveExpression	input + 2		4364756	0		+			
ANR	4364848	Identifier	input		4364756	0					
ANR	4364849	PrimaryExpression	2		4364756	1					
ANR	4364850	Argument	1		4364756	2					
ANR	4364851	PrimaryExpression	1		4364756	0					
ANR	4364852	ElseStatement	else		4364756	0					
ANR	4364853	CompoundStatement		23:4:534:543	4364756	0					
ANR	4364854	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list_filter ( TDB , stdifunion , true ) ;"	1026:4:28861:28921	4364756	0	True				
ANR	4364855	IdentifierDecl	"* l = sdb_foreach_list_filter ( TDB , stdifunion , true )"		4364756	0					
ANR	4364856	IdentifierDeclType	SdbList *		4364756	0					
ANR	4364857	Identifier	l		4364756	1					
ANR	4364858	AssignmentExpression	"* l = sdb_foreach_list_filter ( TDB , stdifunion , true )"		4364756	2		=			
ANR	4364859	Identifier	l		4364756	0					
ANR	4364860	CallExpression	"sdb_foreach_list_filter ( TDB , stdifunion , true )"		4364756	1					
ANR	4364861	Callee	sdb_foreach_list_filter		4364756	0					
ANR	4364862	Identifier	sdb_foreach_list_filter		4364756	0					
ANR	4364863	ArgumentList	TDB		4364756	1					
ANR	4364864	Argument	TDB		4364756	0					
ANR	4364865	Identifier	TDB		4364756	0					
ANR	4364866	Argument	stdifunion		4364756	1					
ANR	4364867	Identifier	stdifunion		4364756	0					
ANR	4364868	Argument	true		4364756	2					
ANR	4364869	Identifier	true		4364756	0					
ANR	4364870	IdentifierDeclStatement	SdbListIter * it ;	1027:4:28927:28942	4364756	1	True				
ANR	4364871	IdentifierDecl	* it		4364756	0					
ANR	4364872	IdentifierDeclType	SdbListIter *		4364756	0					
ANR	4364873	Identifier	it		4364756	1					
ANR	4364874	IdentifierDeclStatement	SdbKv * kv ;	1028:4:28948:28957	4364756	2	True				
ANR	4364875	IdentifierDecl	* kv		4364756	0					
ANR	4364876	IdentifierDeclType	SdbKv *		4364756	0					
ANR	4364877	Identifier	kv		4364756	1					
ANR	4364878	Statement	ls_foreach	1029:4:28963:28972	4364756	3	True				
ANR	4364879	Statement	(	1029:15:28974:28974	4364756	4	True				
ANR	4364880	Statement	l	1029:16:28975:28975	4364756	5	True				
ANR	4364881	Statement	","	1029:17:28976:28976	4364756	6	True				
ANR	4364882	Statement	it	1029:19:28978:28979	4364756	7	True				
ANR	4364883	Statement	","	1029:21:28980:28980	4364756	8	True				
ANR	4364884	Statement	kv	1029:23:28982:28983	4364756	9	True				
ANR	4364885	Statement	)	1029:25:28984:28984	4364756	10	True				
ANR	4364886	CompoundStatement		24:27:572:572	4364756	11					
ANR	4364887	ExpressionStatement	"showFormat ( core , sdbkv_key ( kv ) , 1 )"	1030:5:28993:29029	4364756	0	True				
ANR	4364888	CallExpression	"showFormat ( core , sdbkv_key ( kv ) , 1 )"		4364756	0					
ANR	4364889	Callee	showFormat		4364756	0					
ANR	4364890	Identifier	showFormat		4364756	0					
ANR	4364891	ArgumentList	core		4364756	1					
ANR	4364892	Argument	core		4364756	0					
ANR	4364893	Identifier	core		4364756	0					
ANR	4364894	Argument	sdbkv_key ( kv )		4364756	1					
ANR	4364895	CallExpression	sdbkv_key ( kv )		4364756	0					
ANR	4364896	Callee	sdbkv_key		4364756	0					
ANR	4364897	Identifier	sdbkv_key		4364756	0					
ANR	4364898	ArgumentList	kv		4364756	1					
ANR	4364899	Argument	kv		4364756	0					
ANR	4364900	Identifier	kv		4364756	0					
ANR	4364901	Argument	1		4364756	2					
ANR	4364902	PrimaryExpression	1		4364756	0					
ANR	4364903	ExpressionStatement	ls_free ( l )	1032:4:29041:29052	4364756	12	True				
ANR	4364904	CallExpression	ls_free ( l )		4364756	0					
ANR	4364905	Callee	ls_free		4364756	0					
ANR	4364906	Identifier	ls_free		4364756	0					
ANR	4364907	ArgumentList	l		4364756	1					
ANR	4364908	Argument	l		4364756	0					
ANR	4364909	Identifier	l		4364756	0					
ANR	4364910	BreakStatement	break ;	1034:3:29062:29067	4364756	5	True				
ANR	4364911	Label	case 'j' :	1035:2:29071:29079	4364756	6	True				
ANR	4364912	IfStatement	if ( input [ 2 ] )		4364756	7					
ANR	4364913	Condition	input [ 2 ]	1036:7:29097:29104	4364756	0	True				
ANR	4364914	ArrayIndexing	input [ 2 ]		4364756	0					
ANR	4364915	Identifier	input		4364756	0					
ANR	4364916	PrimaryExpression	2		4364756	1					
ANR	4364917	CompoundStatement		31:17:693:693	4364756	1					
ANR	4364918	ExpressionStatement	"showFormat ( core , r_str_trim_ro ( input + 2 ) , 'j' )"	1037:4:29113:29162	4364756	0	True				
ANR	4364919	CallExpression	"showFormat ( core , r_str_trim_ro ( input + 2 ) , 'j' )"		4364756	0					
ANR	4364920	Callee	showFormat		4364756	0					
ANR	4364921	Identifier	showFormat		4364756	0					
ANR	4364922	ArgumentList	core		4364756	1					
ANR	4364923	Argument	core		4364756	0					
ANR	4364924	Identifier	core		4364756	0					
ANR	4364925	Argument	r_str_trim_ro ( input + 2 )		4364756	1					
ANR	4364926	CallExpression	r_str_trim_ro ( input + 2 )		4364756	0					
ANR	4364927	Callee	r_str_trim_ro		4364756	0					
ANR	4364928	Identifier	r_str_trim_ro		4364756	0					
ANR	4364929	ArgumentList	input + 2		4364756	1					
ANR	4364930	Argument	input + 2		4364756	0					
ANR	4364931	AdditiveExpression	input + 2		4364756	0		+			
ANR	4364932	Identifier	input		4364756	0					
ANR	4364933	PrimaryExpression	2		4364756	1					
ANR	4364934	Argument	'j'		4364756	2					
ANR	4364935	PrimaryExpression	'j'		4364756	0					
ANR	4364936	ExpressionStatement	r_cons_newline ( )	1038:4:29168:29185	4364756	1	True				
ANR	4364937	CallExpression	r_cons_newline ( )		4364756	0					
ANR	4364938	Callee	r_cons_newline		4364756	0					
ANR	4364939	Identifier	r_cons_newline		4364756	0					
ANR	4364940	ArgumentList			4364756	1					
ANR	4364941	ElseStatement	else		4364756	0					
ANR	4364942	CompoundStatement		34:10:783:783	4364756	0					
ANR	4364943	ExpressionStatement	"print_struct_union_list_json ( TDB , stdifunion )"	1040:4:29203:29249	4364756	0	True				
ANR	4364944	CallExpression	"print_struct_union_list_json ( TDB , stdifunion )"		4364756	0					
ANR	4364945	Callee	print_struct_union_list_json		4364756	0					
ANR	4364946	Identifier	print_struct_union_list_json		4364756	0					
ANR	4364947	ArgumentList	TDB		4364756	1					
ANR	4364948	Argument	TDB		4364756	0					
ANR	4364949	Identifier	TDB		4364756	0					
ANR	4364950	Argument	stdifunion		4364756	1					
ANR	4364951	Identifier	stdifunion		4364756	0					
ANR	4364952	BreakStatement	break ;	1042:3:29259:29264	4364756	8	True				
ANR	4364953	Label	case 'c' :	1043:2:29268:29276	4364756	9	True				
ANR	4364954	ExpressionStatement	"print_struct_union_in_c_format ( TDB , stdifunion , r_str_trim_ro ( input + 2 ) , true )"	1044:3:29281:29362	4364756	10	True				
ANR	4364955	CallExpression	"print_struct_union_in_c_format ( TDB , stdifunion , r_str_trim_ro ( input + 2 ) , true )"		4364756	0					
ANR	4364956	Callee	print_struct_union_in_c_format		4364756	0					
ANR	4364957	Identifier	print_struct_union_in_c_format		4364756	0					
ANR	4364958	ArgumentList	TDB		4364756	1					
ANR	4364959	Argument	TDB		4364756	0					
ANR	4364960	Identifier	TDB		4364756	0					
ANR	4364961	Argument	stdifunion		4364756	1					
ANR	4364962	Identifier	stdifunion		4364756	0					
ANR	4364963	Argument	r_str_trim_ro ( input + 2 )		4364756	2					
ANR	4364964	CallExpression	r_str_trim_ro ( input + 2 )		4364756	0					
ANR	4364965	Callee	r_str_trim_ro		4364756	0					
ANR	4364966	Identifier	r_str_trim_ro		4364756	0					
ANR	4364967	ArgumentList	input + 2		4364756	1					
ANR	4364968	Argument	input + 2		4364756	0					
ANR	4364969	AdditiveExpression	input + 2		4364756	0		+			
ANR	4364970	Identifier	input		4364756	0					
ANR	4364971	PrimaryExpression	2		4364756	1					
ANR	4364972	Argument	true		4364756	3					
ANR	4364973	Identifier	true		4364756	0					
ANR	4364974	BreakStatement	break ;	1045:3:29367:29372	4364756	11	True				
ANR	4364975	Label	case 'd' :	1046:2:29376:29384	4364756	12	True				
ANR	4364976	ExpressionStatement	"print_struct_union_in_c_format ( TDB , stdifunion , r_str_trim_ro ( input + 2 ) , false )"	1047:3:29389:29471	4364756	13	True				
ANR	4364977	CallExpression	"print_struct_union_in_c_format ( TDB , stdifunion , r_str_trim_ro ( input + 2 ) , false )"		4364756	0					
ANR	4364978	Callee	print_struct_union_in_c_format		4364756	0					
ANR	4364979	Identifier	print_struct_union_in_c_format		4364756	0					
ANR	4364980	ArgumentList	TDB		4364756	1					
ANR	4364981	Argument	TDB		4364756	0					
ANR	4364982	Identifier	TDB		4364756	0					
ANR	4364983	Argument	stdifunion		4364756	1					
ANR	4364984	Identifier	stdifunion		4364756	0					
ANR	4364985	Argument	r_str_trim_ro ( input + 2 )		4364756	2					
ANR	4364986	CallExpression	r_str_trim_ro ( input + 2 )		4364756	0					
ANR	4364987	Callee	r_str_trim_ro		4364756	0					
ANR	4364988	Identifier	r_str_trim_ro		4364756	0					
ANR	4364989	ArgumentList	input + 2		4364756	1					
ANR	4364990	Argument	input + 2		4364756	0					
ANR	4364991	AdditiveExpression	input + 2		4364756	0		+			
ANR	4364992	Identifier	input		4364756	0					
ANR	4364993	PrimaryExpression	2		4364756	1					
ANR	4364994	Argument	false		4364756	3					
ANR	4364995	Identifier	false		4364756	0					
ANR	4364996	BreakStatement	break ;	1048:3:29476:29481	4364756	14	True				
ANR	4364997	Label	case ' ' :	1049:2:29486:29494	4364756	15	True				
ANR	4364998	ExpressionStatement	"showFormat ( core , r_str_trim_ro ( input + 1 ) , 0 )"	1050:3:29499:29546	4364756	16	True				
ANR	4364999	CallExpression	"showFormat ( core , r_str_trim_ro ( input + 1 ) , 0 )"		4364756	0					
ANR	4365000	Callee	showFormat		4364756	0					
ANR	4365001	Identifier	showFormat		4364756	0					
ANR	4365002	ArgumentList	core		4364756	1					
ANR	4365003	Argument	core		4364756	0					
ANR	4365004	Identifier	core		4364756	0					
ANR	4365005	Argument	r_str_trim_ro ( input + 1 )		4364756	1					
ANR	4365006	CallExpression	r_str_trim_ro ( input + 1 )		4364756	0					
ANR	4365007	Callee	r_str_trim_ro		4364756	0					
ANR	4365008	Identifier	r_str_trim_ro		4364756	0					
ANR	4365009	ArgumentList	input + 1		4364756	1					
ANR	4365010	Argument	input + 1		4364756	0					
ANR	4365011	AdditiveExpression	input + 1		4364756	0		+			
ANR	4365012	Identifier	input		4364756	0					
ANR	4365013	PrimaryExpression	1		4364756	1					
ANR	4365014	Argument	0		4364756	2					
ANR	4365015	PrimaryExpression	0		4364756	0					
ANR	4365016	BreakStatement	break ;	1051:3:29551:29556	4364756	17	True				
ANR	4365017	Label	case 0 :	1052:2:29560:29566	4364756	18	True				
ANR	4365018	ExpressionStatement	"print_keys ( TDB , core , stdifunion , printkey_cb , false )"	1053:3:29571:29625	4364756	19	True				
ANR	4365019	CallExpression	"print_keys ( TDB , core , stdifunion , printkey_cb , false )"		4364756	0					
ANR	4365020	Callee	print_keys		4364756	0					
ANR	4365021	Identifier	print_keys		4364756	0					
ANR	4365022	ArgumentList	TDB		4364756	1					
ANR	4365023	Argument	TDB		4364756	0					
ANR	4365024	Identifier	TDB		4364756	0					
ANR	4365025	Argument	core		4364756	1					
ANR	4365026	Identifier	core		4364756	0					
ANR	4365027	Argument	stdifunion		4364756	2					
ANR	4365028	Identifier	stdifunion		4364756	0					
ANR	4365029	Argument	printkey_cb		4364756	3					
ANR	4365030	Identifier	printkey_cb		4364756	0					
ANR	4365031	Argument	false		4364756	4					
ANR	4365032	Identifier	false		4364756	0					
ANR	4365033	BreakStatement	break ;	1054:3:29630:29635	4364756	20	True				
ANR	4365034	BreakStatement	break ;	1056:3:29644:29649	4364756	5	True				
ANR	4365035	Label	case 'k' :	1057:1:29652:29660	4364756	6	True				
ANR	4365036	ExpressionStatement	"res = ( input [ 1 ] == ' ' ) ? sdb_querys ( TDB , NULL , - 1 , input + 2 ) : sdb_querys ( TDB , NULL , - 1 , ""*"" )"	1058:2:29672:29775	4364756	7	True				
ANR	4365037	AssignmentExpression	"res = ( input [ 1 ] == ' ' ) ? sdb_querys ( TDB , NULL , - 1 , input + 2 ) : sdb_querys ( TDB , NULL , - 1 , ""*"" )"		4364756	0		=			
ANR	4365038	Identifier	res		4364756	0					
ANR	4365039	ConditionalExpression	"( input [ 1 ] == ' ' ) ? sdb_querys ( TDB , NULL , - 1 , input + 2 ) : sdb_querys ( TDB , NULL , - 1 , ""*"" )"		4364756	1					
ANR	4365040	Condition	input [ 1 ] == ' '		4364756	0					
ANR	4365041	EqualityExpression	input [ 1 ] == ' '		4364756	0		==			
ANR	4365042	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4365043	Identifier	input		4364756	0					
ANR	4365044	PrimaryExpression	1		4364756	1					
ANR	4365045	PrimaryExpression	' '		4364756	1					
ANR	4365046	CallExpression	"sdb_querys ( TDB , NULL , - 1 , input + 2 )"		4364756	1					
ANR	4365047	Callee	sdb_querys		4364756	0					
ANR	4365048	Identifier	sdb_querys		4364756	0					
ANR	4365049	ArgumentList	TDB		4364756	1					
ANR	4365050	Argument	TDB		4364756	0					
ANR	4365051	Identifier	TDB		4364756	0					
ANR	4365052	Argument	NULL		4364756	1					
ANR	4365053	Identifier	NULL		4364756	0					
ANR	4365054	Argument	- 1		4364756	2					
ANR	4365055	UnaryOperationExpression	- 1		4364756	0					
ANR	4365056	UnaryOperator	-		4364756	0					
ANR	4365057	PrimaryExpression	1		4364756	1					
ANR	4365058	Argument	input + 2		4364756	3					
ANR	4365059	AdditiveExpression	input + 2		4364756	0		+			
ANR	4365060	Identifier	input		4364756	0					
ANR	4365061	PrimaryExpression	2		4364756	1					
ANR	4365062	CallExpression	"sdb_querys ( TDB , NULL , - 1 , ""*"" )"		4364756	2					
ANR	4365063	Callee	sdb_querys		4364756	0					
ANR	4365064	Identifier	sdb_querys		4364756	0					
ANR	4365065	ArgumentList	TDB		4364756	1					
ANR	4365066	Argument	TDB		4364756	0					
ANR	4365067	Identifier	TDB		4364756	0					
ANR	4365068	Argument	NULL		4364756	1					
ANR	4365069	Identifier	NULL		4364756	0					
ANR	4365070	Argument	- 1		4364756	2					
ANR	4365071	UnaryOperationExpression	- 1		4364756	0					
ANR	4365072	UnaryOperator	-		4364756	0					
ANR	4365073	PrimaryExpression	1		4364756	1					
ANR	4365074	Argument	"""*"""		4364756	3					
ANR	4365075	PrimaryExpression	"""*"""		4364756	0					
ANR	4365076	IfStatement	if ( res )		4364756	8					
ANR	4365077	Condition	res	1061:6:29783:29785	4364756	0	True				
ANR	4365078	Identifier	res		4364756	0					
ANR	4365079	CompoundStatement		56:11:1374:1374	4364756	1					
ANR	4365080	ExpressionStatement	r_cons_print ( res )	1062:3:29793:29811	4364756	0	True				
ANR	4365081	CallExpression	r_cons_print ( res )		4364756	0					
ANR	4365082	Callee	r_cons_print		4364756	0					
ANR	4365083	Identifier	r_cons_print		4364756	0					
ANR	4365084	ArgumentList	res		4364756	1					
ANR	4365085	Argument	res		4364756	0					
ANR	4365086	Identifier	res		4364756	0					
ANR	4365087	ExpressionStatement	free ( res )	1063:3:29816:29826	4364756	1	True				
ANR	4365088	CallExpression	free ( res )		4364756	0					
ANR	4365089	Callee	free		4364756	0					
ANR	4365090	Identifier	free		4364756	0					
ANR	4365091	ArgumentList	res		4364756	1					
ANR	4365092	Argument	res		4364756	0					
ANR	4365093	Identifier	res		4364756	0					
ANR	4365094	BreakStatement	break ;	1065:2:29834:29839	4364756	9	True				
ANR	4365095	Label	case 'c' :	1066:1:29842:29850	4364756	10	True				
ANR	4365096	SwitchStatement	switch ( input [ 1 ] )		4364756	11					
ANR	4365097	Condition	input [ 1 ]	1067:10:29870:29877	4364756	0	True				
ANR	4365098	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4365099	Identifier	input		4364756	0					
ANR	4365100	PrimaryExpression	1		4364756	1					
ANR	4365101	CompoundStatement		62:20:1466:1466	4364756	1					
ANR	4365102	Label	case 'c' :	1068:2:29884:29892	4364756	0	True				
ANR	4365103	ExpressionStatement	"__core_cmd_tcc ( core , input + 2 )"	1069:3:29929:29961	4364756	1	True				
ANR	4365104	CallExpression	"__core_cmd_tcc ( core , input + 2 )"		4364756	0					
ANR	4365105	Callee	__core_cmd_tcc		4364756	0					
ANR	4365106	Identifier	__core_cmd_tcc		4364756	0					
ANR	4365107	ArgumentList	core		4364756	1					
ANR	4365108	Argument	core		4364756	0					
ANR	4365109	Identifier	core		4364756	0					
ANR	4365110	Argument	input + 2		4364756	1					
ANR	4365111	AdditiveExpression	input + 2		4364756	0		+			
ANR	4365112	Identifier	input		4364756	0					
ANR	4365113	PrimaryExpression	2		4364756	1					
ANR	4365114	BreakStatement	break ;	1070:3:29966:29971	4364756	2	True				
ANR	4365115	Label	case '?' :	1071:2:29975:29983	4364756	3	True				
ANR	4365116	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tc )"	1072:3:29996:30031	4364756	4	True				
ANR	4365117	CallExpression	"r_core_cmd_help ( core , help_msg_tc )"		4364756	0					
ANR	4365118	Callee	r_core_cmd_help		4364756	0					
ANR	4365119	Identifier	r_core_cmd_help		4364756	0					
ANR	4365120	ArgumentList	core		4364756	1					
ANR	4365121	Argument	core		4364756	0					
ANR	4365122	Identifier	core		4364756	0					
ANR	4365123	Argument	help_msg_tc		4364756	1					
ANR	4365124	Identifier	help_msg_tc		4364756	0					
ANR	4365125	BreakStatement	break ;	1073:3:30036:30041	4364756	5	True				
ANR	4365126	Label	case ' ' :	1074:2:30045:30053	4364756	6	True				
ANR	4365127	CompoundStatement		71:3:1695:1749	4364756	7					
ANR	4365128	IdentifierDeclStatement	const char * type = r_str_trim_ro ( input + 1 ) ;	1075:3:30060:30104	4364756	0	True				
ANR	4365129	IdentifierDecl	* type = r_str_trim_ro ( input + 1 )		4364756	0					
ANR	4365130	IdentifierDeclType	const char *		4364756	0					
ANR	4365131	Identifier	type		4364756	1					
ANR	4365132	AssignmentExpression	* type = r_str_trim_ro ( input + 1 )		4364756	2		=			
ANR	4365133	Identifier	type		4364756	0					
ANR	4365134	CallExpression	r_str_trim_ro ( input + 1 )		4364756	1					
ANR	4365135	Callee	r_str_trim_ro		4364756	0					
ANR	4365136	Identifier	r_str_trim_ro		4364756	0					
ANR	4365137	ArgumentList	input + 1		4364756	1					
ANR	4365138	Argument	input + 1		4364756	0					
ANR	4365139	AdditiveExpression	input + 1		4364756	0		+			
ANR	4365140	Identifier	input		4364756	0					
ANR	4365141	PrimaryExpression	1		4364756	1					
ANR	4365142	IdentifierDeclStatement	"const char * name = type ? strchr ( type , '.' ) + 1 : NULL ;"	1076:3:30109:30163	4364756	1	True				
ANR	4365143	IdentifierDecl	"* name = type ? strchr ( type , '.' ) + 1 : NULL"		4364756	0					
ANR	4365144	IdentifierDeclType	const char *		4364756	0					
ANR	4365145	Identifier	name		4364756	1					
ANR	4365146	AssignmentExpression	"* name = type ? strchr ( type , '.' ) + 1 : NULL"		4364756	2		=			
ANR	4365147	Identifier	name		4364756	0					
ANR	4365148	ConditionalExpression	"type ? strchr ( type , '.' ) + 1 : NULL"		4364756	1					
ANR	4365149	Condition	type		4364756	0					
ANR	4365150	Identifier	type		4364756	0					
ANR	4365151	AdditiveExpression	"strchr ( type , '.' ) + 1"		4364756	1		+			
ANR	4365152	CallExpression	"strchr ( type , '.' )"		4364756	0					
ANR	4365153	Callee	strchr		4364756	0					
ANR	4365154	Identifier	strchr		4364756	0					
ANR	4365155	ArgumentList	type		4364756	1					
ANR	4365156	Argument	type		4364756	0					
ANR	4365157	Identifier	type		4364756	0					
ANR	4365158	Argument	'.'		4364756	1					
ANR	4365159	PrimaryExpression	'.'		4364756	0					
ANR	4365160	PrimaryExpression	1		4364756	1					
ANR	4365161	Identifier	NULL		4364756	2					
ANR	4365162	IfStatement	if ( name && type )		4364756	2					
ANR	4365163	Condition	name && type	1077:7:30172:30183	4364756	0	True				
ANR	4365164	AndExpression	name && type		4364756	0		&&			
ANR	4365165	Identifier	name		4364756	0					
ANR	4365166	Identifier	type		4364756	1					
ANR	4365167	CompoundStatement		72:21:1772:1772	4364756	1					
ANR	4365168	IfStatement	"if ( r_str_startswith ( type , ""struct"" ) )"		4364756	0					
ANR	4365169	Condition	"r_str_startswith ( type , ""struct"" )"	1078:8:30196:30228	4364756	0	True				
ANR	4365170	CallExpression	"r_str_startswith ( type , ""struct"" )"		4364756	0					
ANR	4365171	Callee	r_str_startswith		4364756	0					
ANR	4365172	Identifier	r_str_startswith		4364756	0					
ANR	4365173	ArgumentList	type		4364756	1					
ANR	4365174	Argument	type		4364756	0					
ANR	4365175	Identifier	type		4364756	0					
ANR	4365176	Argument	"""struct"""		4364756	1					
ANR	4365177	PrimaryExpression	"""struct"""		4364756	0					
ANR	4365178	CompoundStatement		73:43:1817:1817	4364756	1					
ANR	4365179	ExpressionStatement	"r_core_cmdf ( core , ""tsc %s"" , name )"	1079:5:30238:30272	4364756	0	True				
ANR	4365180	CallExpression	"r_core_cmdf ( core , ""tsc %s"" , name )"		4364756	0					
ANR	4365181	Callee	r_core_cmdf		4364756	0					
ANR	4365182	Identifier	r_core_cmdf		4364756	0					
ANR	4365183	ArgumentList	core		4364756	1					
ANR	4365184	Argument	core		4364756	0					
ANR	4365185	Identifier	core		4364756	0					
ANR	4365186	Argument	"""tsc %s"""		4364756	1					
ANR	4365187	PrimaryExpression	"""tsc %s"""		4364756	0					
ANR	4365188	Argument	name		4364756	2					
ANR	4365189	Identifier	name		4364756	0					
ANR	4365190	ElseStatement	else		4364756	0					
ANR	4365191	IfStatement	"if ( r_str_startswith ( type , ""union"" ) )"		4364756	0					
ANR	4365192	Condition	"r_str_startswith ( type , ""union"" )"	1080:15:30289:30320	4364756	0	True				
ANR	4365193	CallExpression	"r_str_startswith ( type , ""union"" )"		4364756	0					
ANR	4365194	Callee	r_str_startswith		4364756	0					
ANR	4365195	Identifier	r_str_startswith		4364756	0					
ANR	4365196	ArgumentList	type		4364756	1					
ANR	4365197	Argument	type		4364756	0					
ANR	4365198	Identifier	type		4364756	0					
ANR	4365199	Argument	"""union"""		4364756	1					
ANR	4365200	PrimaryExpression	"""union"""		4364756	0					
ANR	4365201	CompoundStatement		75:49:1909:1909	4364756	1					
ANR	4365202	ExpressionStatement	"r_core_cmdf ( core , ""tuc %s"" , name )"	1081:5:30330:30364	4364756	0	True				
ANR	4365203	CallExpression	"r_core_cmdf ( core , ""tuc %s"" , name )"		4364756	0					
ANR	4365204	Callee	r_core_cmdf		4364756	0					
ANR	4365205	Identifier	r_core_cmdf		4364756	0					
ANR	4365206	ArgumentList	core		4364756	1					
ANR	4365207	Argument	core		4364756	0					
ANR	4365208	Identifier	core		4364756	0					
ANR	4365209	Argument	"""tuc %s"""		4364756	1					
ANR	4365210	PrimaryExpression	"""tuc %s"""		4364756	0					
ANR	4365211	Argument	name		4364756	2					
ANR	4365212	Identifier	name		4364756	0					
ANR	4365213	ElseStatement	else		4364756	0					
ANR	4365214	IfStatement	"if ( r_str_startswith ( type , ""enum"" ) )"		4364756	0					
ANR	4365215	Condition	"r_str_startswith ( type , ""enum"" )"	1082:15:30381:30411	4364756	0	True				
ANR	4365216	CallExpression	"r_str_startswith ( type , ""enum"" )"		4364756	0					
ANR	4365217	Callee	r_str_startswith		4364756	0					
ANR	4365218	Identifier	r_str_startswith		4364756	0					
ANR	4365219	ArgumentList	type		4364756	1					
ANR	4365220	Argument	type		4364756	0					
ANR	4365221	Identifier	type		4364756	0					
ANR	4365222	Argument	"""enum"""		4364756	1					
ANR	4365223	PrimaryExpression	"""enum"""		4364756	0					
ANR	4365224	CompoundStatement		77:48:2000:2000	4364756	1					
ANR	4365225	ExpressionStatement	"r_core_cmdf ( core , ""tec %s"" , name )"	1083:5:30421:30455	4364756	0	True				
ANR	4365226	CallExpression	"r_core_cmdf ( core , ""tec %s"" , name )"		4364756	0					
ANR	4365227	Callee	r_core_cmdf		4364756	0					
ANR	4365228	Identifier	r_core_cmdf		4364756	0					
ANR	4365229	ArgumentList	core		4364756	1					
ANR	4365230	Argument	core		4364756	0					
ANR	4365231	Identifier	core		4364756	0					
ANR	4365232	Argument	"""tec %s"""		4364756	1					
ANR	4365233	PrimaryExpression	"""tec %s"""		4364756	0					
ANR	4365234	Argument	name		4364756	2					
ANR	4365235	Identifier	name		4364756	0					
ANR	4365236	ElseStatement	else		4364756	0					
ANR	4365237	IfStatement	"if ( r_str_startswith ( type , ""typedef"" ) )"		4364756	0					
ANR	4365238	Condition	"r_str_startswith ( type , ""typedef"" )"	1084:15:30472:30505	4364756	0	True				
ANR	4365239	CallExpression	"r_str_startswith ( type , ""typedef"" )"		4364756	0					
ANR	4365240	Callee	r_str_startswith		4364756	0					
ANR	4365241	Identifier	r_str_startswith		4364756	0					
ANR	4365242	ArgumentList	type		4364756	1					
ANR	4365243	Argument	type		4364756	0					
ANR	4365244	Identifier	type		4364756	0					
ANR	4365245	Argument	"""typedef"""		4364756	1					
ANR	4365246	PrimaryExpression	"""typedef"""		4364756	0					
ANR	4365247	CompoundStatement		79:51:2094:2094	4364756	1					
ANR	4365248	ExpressionStatement	"r_core_cmdf ( core , ""ttc %s"" , name )"	1085:5:30515:30549	4364756	0	True				
ANR	4365249	CallExpression	"r_core_cmdf ( core , ""ttc %s"" , name )"		4364756	0					
ANR	4365250	Callee	r_core_cmdf		4364756	0					
ANR	4365251	Identifier	r_core_cmdf		4364756	0					
ANR	4365252	ArgumentList	core		4364756	1					
ANR	4365253	Argument	core		4364756	0					
ANR	4365254	Identifier	core		4364756	0					
ANR	4365255	Argument	"""ttc %s"""		4364756	1					
ANR	4365256	PrimaryExpression	"""ttc %s"""		4364756	0					
ANR	4365257	Argument	name		4364756	2					
ANR	4365258	Identifier	name		4364756	0					
ANR	4365259	ElseStatement	else		4364756	0					
ANR	4365260	IfStatement	"if ( r_str_startswith ( type , ""func"" ) )"		4364756	0					
ANR	4365261	Condition	"r_str_startswith ( type , ""func"" )"	1086:15:30566:30596	4364756	0	True				
ANR	4365262	CallExpression	"r_str_startswith ( type , ""func"" )"		4364756	0					
ANR	4365263	Callee	r_str_startswith		4364756	0					
ANR	4365264	Identifier	r_str_startswith		4364756	0					
ANR	4365265	ArgumentList	type		4364756	1					
ANR	4365266	Argument	type		4364756	0					
ANR	4365267	Identifier	type		4364756	0					
ANR	4365268	Argument	"""func"""		4364756	1					
ANR	4365269	PrimaryExpression	"""func"""		4364756	0					
ANR	4365270	CompoundStatement		81:48:2185:2185	4364756	1					
ANR	4365271	ExpressionStatement	"r_core_cmdf ( core , ""tfc %s"" , name )"	1087:5:30606:30640	4364756	0	True				
ANR	4365272	CallExpression	"r_core_cmdf ( core , ""tfc %s"" , name )"		4364756	0					
ANR	4365273	Callee	r_core_cmdf		4364756	0					
ANR	4365274	Identifier	r_core_cmdf		4364756	0					
ANR	4365275	ArgumentList	core		4364756	1					
ANR	4365276	Argument	core		4364756	0					
ANR	4365277	Identifier	core		4364756	0					
ANR	4365278	Argument	"""tfc %s"""		4364756	1					
ANR	4365279	PrimaryExpression	"""tfc %s"""		4364756	0					
ANR	4365280	Argument	name		4364756	2					
ANR	4365281	Identifier	name		4364756	0					
ANR	4365282	BreakStatement	break ;	1090:3:30656:30661	4364756	3	True				
ANR	4365283	Label	case 0 :	1092:2:30669:30675	4364756	8	True				
ANR	4365284	ExpressionStatement	"r_core_cmd0 ( core , ""tfc;tuc;tsc;ttc;tec"" )"	1093:3:30680:30721	4364756	9	True				
ANR	4365285	CallExpression	"r_core_cmd0 ( core , ""tfc;tuc;tsc;ttc;tec"" )"		4364756	0					
ANR	4365286	Callee	r_core_cmd0		4364756	0					
ANR	4365287	Identifier	r_core_cmd0		4364756	0					
ANR	4365288	ArgumentList	core		4364756	1					
ANR	4365289	Argument	core		4364756	0					
ANR	4365290	Identifier	core		4364756	0					
ANR	4365291	Argument	"""tfc;tuc;tsc;ttc;tec"""		4364756	1					
ANR	4365292	PrimaryExpression	"""tfc;tuc;tsc;ttc;tec"""		4364756	0					
ANR	4365293	BreakStatement	break ;	1094:3:30726:30731	4364756	10	True				
ANR	4365294	Label	case 'd' :	1095:2:30735:30743	4364756	11	True				
ANR	4365295	ExpressionStatement	"r_core_cmd0 ( core , ""tud;tsd;ttc;ted"" )"	1096:3:30748:30785	4364756	12	True				
ANR	4365296	CallExpression	"r_core_cmd0 ( core , ""tud;tsd;ttc;ted"" )"		4364756	0					
ANR	4365297	Callee	r_core_cmd0		4364756	0					
ANR	4365298	Identifier	r_core_cmd0		4364756	0					
ANR	4365299	ArgumentList	core		4364756	1					
ANR	4365300	Argument	core		4364756	0					
ANR	4365301	Identifier	core		4364756	0					
ANR	4365302	Argument	"""tud;tsd;ttc;ted"""		4364756	1					
ANR	4365303	PrimaryExpression	"""tud;tsd;ttc;ted"""		4364756	0					
ANR	4365304	BreakStatement	break ;	1097:3:30790:30795	4364756	13	True				
ANR	4365305	Label	default :	1098:2:30799:30806	4364756	14	True				
ANR	4365306	Identifier	default		4364756	0					
ANR	4365307	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tc )"	1099:3:30811:30846	4364756	15	True				
ANR	4365308	CallExpression	"r_core_cmd_help ( core , help_msg_tc )"		4364756	0					
ANR	4365309	Callee	r_core_cmd_help		4364756	0					
ANR	4365310	Identifier	r_core_cmd_help		4364756	0					
ANR	4365311	ArgumentList	core		4364756	1					
ANR	4365312	Argument	core		4364756	0					
ANR	4365313	Identifier	core		4364756	0					
ANR	4365314	Argument	help_msg_tc		4364756	1					
ANR	4365315	Identifier	help_msg_tc		4364756	0					
ANR	4365316	BreakStatement	break ;	1100:3:30851:30856	4364756	16	True				
ANR	4365317	BreakStatement	break ;	1102:2:30864:30869	4364756	12	True				
ANR	4365318	Label	case 's' :	1103:1:30872:30880	4364756	13	True				
ANR	4365319	CompoundStatement		98:11:2468:2468	4364756	14					
ANR	4365320	SwitchStatement	switch ( input [ 1 ] )		4364756	0					
ANR	4365321	Condition	input [ 1 ]	1104:10:30902:30909	4364756	0	True				
ANR	4365322	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4365323	Identifier	input		4364756	0					
ANR	4365324	PrimaryExpression	1		4364756	1					
ANR	4365325	CompoundStatement		99:20:2498:2498	4364756	1					
ANR	4365326	Label	case '?' :	1105:2:30916:30924	4364756	0	True				
ANR	4365327	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ts )"	1106:3:30929:30964	4364756	1	True				
ANR	4365328	CallExpression	"r_core_cmd_help ( core , help_msg_ts )"		4364756	0					
ANR	4365329	Callee	r_core_cmd_help		4364756	0					
ANR	4365330	Identifier	r_core_cmd_help		4364756	0					
ANR	4365331	ArgumentList	core		4364756	1					
ANR	4365332	Argument	core		4364756	0					
ANR	4365333	Identifier	core		4364756	0					
ANR	4365334	Argument	help_msg_ts		4364756	1					
ANR	4365335	Identifier	help_msg_ts		4364756	0					
ANR	4365336	BreakStatement	break ;	1107:3:30969:30974	4364756	2	True				
ANR	4365337	Label	case '*' :	1108:2:30978:30986	4364756	3	True				
ANR	4365338	IfStatement	if ( input [ 2 ] == ' ' )		4364756	4					
ANR	4365339	Condition	input [ 2 ] == ' '	1109:7:30995:31009	4364756	0	True				
ANR	4365340	EqualityExpression	input [ 2 ] == ' '		4364756	0		==			
ANR	4365341	ArrayIndexing	input [ 2 ]		4364756	0					
ANR	4365342	Identifier	input		4364756	0					
ANR	4365343	PrimaryExpression	2		4364756	1					
ANR	4365344	PrimaryExpression	' '		4364756	1					
ANR	4365345	CompoundStatement		104:24:2598:2598	4364756	1					
ANR	4365346	ExpressionStatement	"showFormat ( core , r_str_trim_ro ( input + 2 ) , 1 )"	1110:4:31018:31065	4364756	0	True				
ANR	4365347	CallExpression	"showFormat ( core , r_str_trim_ro ( input + 2 ) , 1 )"		4364756	0					
ANR	4365348	Callee	showFormat		4364756	0					
ANR	4365349	Identifier	showFormat		4364756	0					
ANR	4365350	ArgumentList	core		4364756	1					
ANR	4365351	Argument	core		4364756	0					
ANR	4365352	Identifier	core		4364756	0					
ANR	4365353	Argument	r_str_trim_ro ( input + 2 )		4364756	1					
ANR	4365354	CallExpression	r_str_trim_ro ( input + 2 )		4364756	0					
ANR	4365355	Callee	r_str_trim_ro		4364756	0					
ANR	4365356	Identifier	r_str_trim_ro		4364756	0					
ANR	4365357	ArgumentList	input + 2		4364756	1					
ANR	4365358	Argument	input + 2		4364756	0					
ANR	4365359	AdditiveExpression	input + 2		4364756	0		+			
ANR	4365360	Identifier	input		4364756	0					
ANR	4365361	PrimaryExpression	2		4364756	1					
ANR	4365362	Argument	1		4364756	2					
ANR	4365363	PrimaryExpression	1		4364756	0					
ANR	4365364	ElseStatement	else		4364756	0					
ANR	4365365	CompoundStatement		109:4:2757:2766	4364756	0					
ANR	4365366	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list_filter ( TDB , stdifstruct , true ) ;"	1112:4:31083:31144	4364756	0	True				
ANR	4365367	IdentifierDecl	"* l = sdb_foreach_list_filter ( TDB , stdifstruct , true )"		4364756	0					
ANR	4365368	IdentifierDeclType	SdbList *		4364756	0					
ANR	4365369	Identifier	l		4364756	1					
ANR	4365370	AssignmentExpression	"* l = sdb_foreach_list_filter ( TDB , stdifstruct , true )"		4364756	2		=			
ANR	4365371	Identifier	l		4364756	0					
ANR	4365372	CallExpression	"sdb_foreach_list_filter ( TDB , stdifstruct , true )"		4364756	1					
ANR	4365373	Callee	sdb_foreach_list_filter		4364756	0					
ANR	4365374	Identifier	sdb_foreach_list_filter		4364756	0					
ANR	4365375	ArgumentList	TDB		4364756	1					
ANR	4365376	Argument	TDB		4364756	0					
ANR	4365377	Identifier	TDB		4364756	0					
ANR	4365378	Argument	stdifstruct		4364756	1					
ANR	4365379	Identifier	stdifstruct		4364756	0					
ANR	4365380	Argument	true		4364756	2					
ANR	4365381	Identifier	true		4364756	0					
ANR	4365382	IdentifierDeclStatement	SdbListIter * it ;	1113:4:31150:31165	4364756	1	True				
ANR	4365383	IdentifierDecl	* it		4364756	0					
ANR	4365384	IdentifierDeclType	SdbListIter *		4364756	0					
ANR	4365385	Identifier	it		4364756	1					
ANR	4365386	IdentifierDeclStatement	SdbKv * kv ;	1114:4:31171:31180	4364756	2	True				
ANR	4365387	IdentifierDecl	* kv		4364756	0					
ANR	4365388	IdentifierDeclType	SdbKv *		4364756	0					
ANR	4365389	Identifier	kv		4364756	1					
ANR	4365390	Statement	ls_foreach	1116:4:31187:31196	4364756	3	True				
ANR	4365391	Statement	(	1116:15:31198:31198	4364756	4	True				
ANR	4365392	Statement	l	1116:16:31199:31199	4364756	5	True				
ANR	4365393	Statement	","	1116:17:31200:31200	4364756	6	True				
ANR	4365394	Statement	it	1116:19:31202:31203	4364756	7	True				
ANR	4365395	Statement	","	1116:21:31204:31204	4364756	8	True				
ANR	4365396	Statement	kv	1116:23:31206:31207	4364756	9	True				
ANR	4365397	Statement	)	1116:25:31208:31208	4364756	10	True				
ANR	4365398	CompoundStatement		111:27:2796:2796	4364756	11					
ANR	4365399	ExpressionStatement	"showFormat ( core , sdbkv_key ( kv ) , 1 )"	1117:5:31217:31253	4364756	0	True				
ANR	4365400	CallExpression	"showFormat ( core , sdbkv_key ( kv ) , 1 )"		4364756	0					
ANR	4365401	Callee	showFormat		4364756	0					
ANR	4365402	Identifier	showFormat		4364756	0					
ANR	4365403	ArgumentList	core		4364756	1					
ANR	4365404	Argument	core		4364756	0					
ANR	4365405	Identifier	core		4364756	0					
ANR	4365406	Argument	sdbkv_key ( kv )		4364756	1					
ANR	4365407	CallExpression	sdbkv_key ( kv )		4364756	0					
ANR	4365408	Callee	sdbkv_key		4364756	0					
ANR	4365409	Identifier	sdbkv_key		4364756	0					
ANR	4365410	ArgumentList	kv		4364756	1					
ANR	4365411	Argument	kv		4364756	0					
ANR	4365412	Identifier	kv		4364756	0					
ANR	4365413	Argument	1		4364756	2					
ANR	4365414	PrimaryExpression	1		4364756	0					
ANR	4365415	ExpressionStatement	ls_free ( l )	1119:4:31265:31276	4364756	12	True				
ANR	4365416	CallExpression	ls_free ( l )		4364756	0					
ANR	4365417	Callee	ls_free		4364756	0					
ANR	4365418	Identifier	ls_free		4364756	0					
ANR	4365419	ArgumentList	l		4364756	1					
ANR	4365420	Argument	l		4364756	0					
ANR	4365421	Identifier	l		4364756	0					
ANR	4365422	BreakStatement	break ;	1121:3:31286:31291	4364756	5	True				
ANR	4365423	Label	case ' ' :	1122:2:31295:31303	4364756	6	True				
ANR	4365424	ExpressionStatement	"showFormat ( core , r_str_trim_ro ( input + 1 ) , 0 )"	1123:3:31308:31355	4364756	7	True				
ANR	4365425	CallExpression	"showFormat ( core , r_str_trim_ro ( input + 1 ) , 0 )"		4364756	0					
ANR	4365426	Callee	showFormat		4364756	0					
ANR	4365427	Identifier	showFormat		4364756	0					
ANR	4365428	ArgumentList	core		4364756	1					
ANR	4365429	Argument	core		4364756	0					
ANR	4365430	Identifier	core		4364756	0					
ANR	4365431	Argument	r_str_trim_ro ( input + 1 )		4364756	1					
ANR	4365432	CallExpression	r_str_trim_ro ( input + 1 )		4364756	0					
ANR	4365433	Callee	r_str_trim_ro		4364756	0					
ANR	4365434	Identifier	r_str_trim_ro		4364756	0					
ANR	4365435	ArgumentList	input + 1		4364756	1					
ANR	4365436	Argument	input + 1		4364756	0					
ANR	4365437	AdditiveExpression	input + 1		4364756	0		+			
ANR	4365438	Identifier	input		4364756	0					
ANR	4365439	PrimaryExpression	1		4364756	1					
ANR	4365440	Argument	0		4364756	2					
ANR	4365441	PrimaryExpression	0		4364756	0					
ANR	4365442	BreakStatement	break ;	1124:3:31360:31365	4364756	8	True				
ANR	4365443	Label	case 's' :	1125:2:31369:31377	4364756	9	True				
ANR	4365444	IfStatement	if ( input [ 2 ] == ' ' )		4364756	10					
ANR	4365445	Condition	input [ 2 ] == ' '	1126:7:31386:31400	4364756	0	True				
ANR	4365446	EqualityExpression	input [ 2 ] == ' '		4364756	0		==			
ANR	4365447	ArrayIndexing	input [ 2 ]		4364756	0					
ANR	4365448	Identifier	input		4364756	0					
ANR	4365449	PrimaryExpression	2		4364756	1					
ANR	4365450	PrimaryExpression	' '		4364756	1					
ANR	4365451	CompoundStatement		121:24:2989:2989	4364756	1					
ANR	4365452	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , ( r_type_get_bitsize ( TDB , input + 3 ) / 8 ) )"	1127:4:31409:31474	4364756	0	True				
ANR	4365453	CallExpression	"r_cons_printf ( ""%d\\n"" , ( r_type_get_bitsize ( TDB , input + 3 ) / 8 ) )"		4364756	0					
ANR	4365454	Callee	r_cons_printf		4364756	0					
ANR	4365455	Identifier	r_cons_printf		4364756	0					
ANR	4365456	ArgumentList	"""%d\\n"""		4364756	1					
ANR	4365457	Argument	"""%d\\n"""		4364756	0					
ANR	4365458	PrimaryExpression	"""%d\\n"""		4364756	0					
ANR	4365459	Argument	"r_type_get_bitsize ( TDB , input + 3 ) / 8"		4364756	1					
ANR	4365460	MultiplicativeExpression	"r_type_get_bitsize ( TDB , input + 3 ) / 8"		4364756	0		/			
ANR	4365461	CallExpression	"r_type_get_bitsize ( TDB , input + 3 )"		4364756	0					
ANR	4365462	Callee	r_type_get_bitsize		4364756	0					
ANR	4365463	Identifier	r_type_get_bitsize		4364756	0					
ANR	4365464	ArgumentList	TDB		4364756	1					
ANR	4365465	Argument	TDB		4364756	0					
ANR	4365466	Identifier	TDB		4364756	0					
ANR	4365467	Argument	input + 3		4364756	1					
ANR	4365468	AdditiveExpression	input + 3		4364756	0		+			
ANR	4365469	Identifier	input		4364756	0					
ANR	4365470	PrimaryExpression	3		4364756	1					
ANR	4365471	PrimaryExpression	8		4364756	1					
ANR	4365472	ElseStatement	else		4364756	0					
ANR	4365473	CompoundStatement		123:10:3072:3072	4364756	0					
ANR	4365474	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ts )"	1129:4:31492:31527	4364756	0	True				
ANR	4365475	CallExpression	"r_core_cmd_help ( core , help_msg_ts )"		4364756	0					
ANR	4365476	Callee	r_core_cmd_help		4364756	0					
ANR	4365477	Identifier	r_core_cmd_help		4364756	0					
ANR	4365478	ArgumentList	core		4364756	1					
ANR	4365479	Argument	core		4364756	0					
ANR	4365480	Identifier	core		4364756	0					
ANR	4365481	Argument	help_msg_ts		4364756	1					
ANR	4365482	Identifier	help_msg_ts		4364756	0					
ANR	4365483	BreakStatement	break ;	1131:3:31537:31542	4364756	11	True				
ANR	4365484	Label	case 0 :	1132:2:31546:31552	4364756	12	True				
ANR	4365485	ExpressionStatement	"print_keys ( TDB , core , stdifstruct , printkey_cb , false )"	1133:3:31557:31612	4364756	13	True				
ANR	4365486	CallExpression	"print_keys ( TDB , core , stdifstruct , printkey_cb , false )"		4364756	0					
ANR	4365487	Callee	print_keys		4364756	0					
ANR	4365488	Identifier	print_keys		4364756	0					
ANR	4365489	ArgumentList	TDB		4364756	1					
ANR	4365490	Argument	TDB		4364756	0					
ANR	4365491	Identifier	TDB		4364756	0					
ANR	4365492	Argument	core		4364756	1					
ANR	4365493	Identifier	core		4364756	0					
ANR	4365494	Argument	stdifstruct		4364756	2					
ANR	4365495	Identifier	stdifstruct		4364756	0					
ANR	4365496	Argument	printkey_cb		4364756	3					
ANR	4365497	Identifier	printkey_cb		4364756	0					
ANR	4365498	Argument	false		4364756	4					
ANR	4365499	Identifier	false		4364756	0					
ANR	4365500	BreakStatement	break ;	1134:3:31617:31622	4364756	14	True				
ANR	4365501	Label	case 'c' :	1135:2:31626:31634	4364756	15	True				
ANR	4365502	ExpressionStatement	"print_struct_union_in_c_format ( TDB , stdifstruct , r_str_trim_ro ( input + 2 ) , true )"	1136:3:31639:31721	4364756	16	True				
ANR	4365503	CallExpression	"print_struct_union_in_c_format ( TDB , stdifstruct , r_str_trim_ro ( input + 2 ) , true )"		4364756	0					
ANR	4365504	Callee	print_struct_union_in_c_format		4364756	0					
ANR	4365505	Identifier	print_struct_union_in_c_format		4364756	0					
ANR	4365506	ArgumentList	TDB		4364756	1					
ANR	4365507	Argument	TDB		4364756	0					
ANR	4365508	Identifier	TDB		4364756	0					
ANR	4365509	Argument	stdifstruct		4364756	1					
ANR	4365510	Identifier	stdifstruct		4364756	0					
ANR	4365511	Argument	r_str_trim_ro ( input + 2 )		4364756	2					
ANR	4365512	CallExpression	r_str_trim_ro ( input + 2 )		4364756	0					
ANR	4365513	Callee	r_str_trim_ro		4364756	0					
ANR	4365514	Identifier	r_str_trim_ro		4364756	0					
ANR	4365515	ArgumentList	input + 2		4364756	1					
ANR	4365516	Argument	input + 2		4364756	0					
ANR	4365517	AdditiveExpression	input + 2		4364756	0		+			
ANR	4365518	Identifier	input		4364756	0					
ANR	4365519	PrimaryExpression	2		4364756	1					
ANR	4365520	Argument	true		4364756	3					
ANR	4365521	Identifier	true		4364756	0					
ANR	4365522	BreakStatement	break ;	1137:3:31726:31731	4364756	17	True				
ANR	4365523	Label	case 'd' :	1138:2:31735:31743	4364756	18	True				
ANR	4365524	ExpressionStatement	"print_struct_union_in_c_format ( TDB , stdifstruct , r_str_trim_ro ( input + 2 ) , false )"	1139:3:31748:31831	4364756	19	True				
ANR	4365525	CallExpression	"print_struct_union_in_c_format ( TDB , stdifstruct , r_str_trim_ro ( input + 2 ) , false )"		4364756	0					
ANR	4365526	Callee	print_struct_union_in_c_format		4364756	0					
ANR	4365527	Identifier	print_struct_union_in_c_format		4364756	0					
ANR	4365528	ArgumentList	TDB		4364756	1					
ANR	4365529	Argument	TDB		4364756	0					
ANR	4365530	Identifier	TDB		4364756	0					
ANR	4365531	Argument	stdifstruct		4364756	1					
ANR	4365532	Identifier	stdifstruct		4364756	0					
ANR	4365533	Argument	r_str_trim_ro ( input + 2 )		4364756	2					
ANR	4365534	CallExpression	r_str_trim_ro ( input + 2 )		4364756	0					
ANR	4365535	Callee	r_str_trim_ro		4364756	0					
ANR	4365536	Identifier	r_str_trim_ro		4364756	0					
ANR	4365537	ArgumentList	input + 2		4364756	1					
ANR	4365538	Argument	input + 2		4364756	0					
ANR	4365539	AdditiveExpression	input + 2		4364756	0		+			
ANR	4365540	Identifier	input		4364756	0					
ANR	4365541	PrimaryExpression	2		4364756	1					
ANR	4365542	Argument	false		4364756	3					
ANR	4365543	Identifier	false		4364756	0					
ANR	4365544	BreakStatement	break ;	1140:3:31836:31841	4364756	20	True				
ANR	4365545	Label	case 'j' :	1141:2:31845:31853	4364756	21	True				
ANR	4365546	IfStatement	if ( input [ 2 ] )		4364756	22					
ANR	4365547	Condition	input [ 2 ]	1143:7:31937:31944	4364756	0	True				
ANR	4365548	ArrayIndexing	input [ 2 ]		4364756	0					
ANR	4365549	Identifier	input		4364756	0					
ANR	4365550	PrimaryExpression	2		4364756	1					
ANR	4365551	CompoundStatement		138:17:3533:3533	4364756	1					
ANR	4365552	ExpressionStatement	"showFormat ( core , r_str_trim_ro ( input + 2 ) , 'j' )"	1144:4:31953:32002	4364756	0	True				
ANR	4365553	CallExpression	"showFormat ( core , r_str_trim_ro ( input + 2 ) , 'j' )"		4364756	0					
ANR	4365554	Callee	showFormat		4364756	0					
ANR	4365555	Identifier	showFormat		4364756	0					
ANR	4365556	ArgumentList	core		4364756	1					
ANR	4365557	Argument	core		4364756	0					
ANR	4365558	Identifier	core		4364756	0					
ANR	4365559	Argument	r_str_trim_ro ( input + 2 )		4364756	1					
ANR	4365560	CallExpression	r_str_trim_ro ( input + 2 )		4364756	0					
ANR	4365561	Callee	r_str_trim_ro		4364756	0					
ANR	4365562	Identifier	r_str_trim_ro		4364756	0					
ANR	4365563	ArgumentList	input + 2		4364756	1					
ANR	4365564	Argument	input + 2		4364756	0					
ANR	4365565	AdditiveExpression	input + 2		4364756	0		+			
ANR	4365566	Identifier	input		4364756	0					
ANR	4365567	PrimaryExpression	2		4364756	1					
ANR	4365568	Argument	'j'		4364756	2					
ANR	4365569	PrimaryExpression	'j'		4364756	0					
ANR	4365570	ExpressionStatement	r_cons_newline ( )	1145:4:32008:32025	4364756	1	True				
ANR	4365571	CallExpression	r_cons_newline ( )		4364756	0					
ANR	4365572	Callee	r_cons_newline		4364756	0					
ANR	4365573	Identifier	r_cons_newline		4364756	0					
ANR	4365574	ArgumentList			4364756	1					
ANR	4365575	ElseStatement	else		4364756	0					
ANR	4365576	CompoundStatement		141:10:3623:3623	4364756	0					
ANR	4365577	ExpressionStatement	"print_struct_union_list_json ( TDB , stdifstruct )"	1147:4:32043:32090	4364756	0	True				
ANR	4365578	CallExpression	"print_struct_union_list_json ( TDB , stdifstruct )"		4364756	0					
ANR	4365579	Callee	print_struct_union_list_json		4364756	0					
ANR	4365580	Identifier	print_struct_union_list_json		4364756	0					
ANR	4365581	ArgumentList	TDB		4364756	1					
ANR	4365582	Argument	TDB		4364756	0					
ANR	4365583	Identifier	TDB		4364756	0					
ANR	4365584	Argument	stdifstruct		4364756	1					
ANR	4365585	Identifier	stdifstruct		4364756	0					
ANR	4365586	BreakStatement	break ;	1149:3:32100:32105	4364756	23	True				
ANR	4365587	BreakStatement	break ;	1151:3:32114:32119	4364756	15	True				
ANR	4365588	Label	case 'e' :	1152:1:32122:32130	4364756	16	True				
ANR	4365589	CompoundStatement		151:2:3862:3913	4364756	17					
ANR	4365590	IdentifierDeclStatement	"char * res = NULL , * temp = strchr ( input , ' ' ) ;"	1153:2:32144:32189	4364756	0	True				
ANR	4365591	IdentifierDecl	* res = NULL		4364756	0					
ANR	4365592	IdentifierDeclType	char *		4364756	0					
ANR	4365593	Identifier	res		4364756	1					
ANR	4365594	AssignmentExpression	* res = NULL		4364756	2		=			
ANR	4365595	Identifier	NULL		4364756	0					
ANR	4365596	Identifier	NULL		4364756	1					
ANR	4365597	IdentifierDecl	"* temp = strchr ( input , ' ' )"		4364756	1					
ANR	4365598	IdentifierDeclType	char *		4364756	0					
ANR	4365599	Identifier	temp		4364756	1					
ANR	4365600	AssignmentExpression	"* temp = strchr ( input , ' ' )"		4364756	2		=			
ANR	4365601	Identifier	temp		4364756	0					
ANR	4365602	CallExpression	"strchr ( input , ' ' )"		4364756	1					
ANR	4365603	Callee	strchr		4364756	0					
ANR	4365604	Identifier	strchr		4364756	0					
ANR	4365605	ArgumentList	input		4364756	1					
ANR	4365606	Argument	input		4364756	0					
ANR	4365607	Identifier	input		4364756	0					
ANR	4365608	Argument	' '		4364756	1					
ANR	4365609	PrimaryExpression	' '		4364756	0					
ANR	4365610	IdentifierDeclStatement	Sdb * TDB = core -> anal -> sdb_types ;	1154:2:32193:32225	4364756	1	True				
ANR	4365611	IdentifierDecl	* TDB = core -> anal -> sdb_types		4364756	0					
ANR	4365612	IdentifierDeclType	Sdb *		4364756	0					
ANR	4365613	Identifier	TDB		4364756	1					
ANR	4365614	AssignmentExpression	* TDB = core -> anal -> sdb_types		4364756	2		=			
ANR	4365615	Identifier	TDB		4364756	0					
ANR	4365616	PtrMemberAccess	core -> anal -> sdb_types		4364756	1					
ANR	4365617	PtrMemberAccess	core -> anal		4364756	0					
ANR	4365618	Identifier	core		4364756	0					
ANR	4365619	Identifier	anal		4364756	1					
ANR	4365620	Identifier	sdb_types		4364756	1					
ANR	4365621	IdentifierDeclStatement	char * name = temp ? strdup ( temp + 1 ) : NULL ;	1155:2:32229:32272	4364756	2	True				
ANR	4365622	IdentifierDecl	* name = temp ? strdup ( temp + 1 ) : NULL		4364756	0					
ANR	4365623	IdentifierDeclType	char *		4364756	0					
ANR	4365624	Identifier	name		4364756	1					
ANR	4365625	AssignmentExpression	* name = temp ? strdup ( temp + 1 ) : NULL		4364756	2		=			
ANR	4365626	Identifier	name		4364756	0					
ANR	4365627	ConditionalExpression	temp ? strdup ( temp + 1 ) : NULL		4364756	1					
ANR	4365628	Condition	temp		4364756	0					
ANR	4365629	Identifier	temp		4364756	0					
ANR	4365630	CallExpression	strdup ( temp + 1 )		4364756	1					
ANR	4365631	Callee	strdup		4364756	0					
ANR	4365632	Identifier	strdup		4364756	0					
ANR	4365633	ArgumentList	temp + 1		4364756	1					
ANR	4365634	Argument	temp + 1		4364756	0					
ANR	4365635	AdditiveExpression	temp + 1		4364756	0		+			
ANR	4365636	Identifier	temp		4364756	0					
ANR	4365637	PrimaryExpression	1		4364756	1					
ANR	4365638	Identifier	NULL		4364756	2					
ANR	4365639	IdentifierDeclStatement	"char * member_name = name ? strchr ( name , ' ' ) : NULL ;"	1156:2:32276:32327	4364756	3	True				
ANR	4365640	IdentifierDecl	"* member_name = name ? strchr ( name , ' ' ) : NULL"		4364756	0					
ANR	4365641	IdentifierDeclType	char *		4364756	0					
ANR	4365642	Identifier	member_name		4364756	1					
ANR	4365643	AssignmentExpression	"* member_name = name ? strchr ( name , ' ' ) : NULL"		4364756	2		=			
ANR	4365644	Identifier	member_name		4364756	0					
ANR	4365645	ConditionalExpression	"name ? strchr ( name , ' ' ) : NULL"		4364756	1					
ANR	4365646	Condition	name		4364756	0					
ANR	4365647	Identifier	name		4364756	0					
ANR	4365648	CallExpression	"strchr ( name , ' ' )"		4364756	1					
ANR	4365649	Callee	strchr		4364756	0					
ANR	4365650	Identifier	strchr		4364756	0					
ANR	4365651	ArgumentList	name		4364756	1					
ANR	4365652	Argument	name		4364756	0					
ANR	4365653	Identifier	name		4364756	0					
ANR	4365654	Argument	' '		4364756	1					
ANR	4365655	PrimaryExpression	' '		4364756	0					
ANR	4365656	Identifier	NULL		4364756	2					
ANR	4365657	IfStatement	if ( member_name )		4364756	4					
ANR	4365658	Condition	member_name	1158:6:32336:32346	4364756	0	True				
ANR	4365659	Identifier	member_name		4364756	0					
ANR	4365660	CompoundStatement		153:19:3935:3935	4364756	1					
ANR	4365661	ExpressionStatement	* member_name ++ = 0	1159:3:32354:32372	4364756	0	True				
ANR	4365662	AssignmentExpression	* member_name ++ = 0		4364756	0		=			
ANR	4365663	UnaryOperationExpression	* member_name ++		4364756	0					
ANR	4365664	UnaryOperator	*		4364756	0					
ANR	4365665	PostIncDecOperationExpression	member_name ++		4364756	1					
ANR	4365666	Identifier	member_name		4364756	0					
ANR	4365667	IncDec	++		4364756	1					
ANR	4365668	PrimaryExpression	0		4364756	1					
ANR	4365669	IfStatement	"if ( name && ( r_type_kind ( TDB , name ) != R_TYPE_ENUM ) )"		4364756	5					
ANR	4365670	Condition	"name && ( r_type_kind ( TDB , name ) != R_TYPE_ENUM )"	1161:6:32384:32431	4364756	0	True				
ANR	4365671	AndExpression	"name && ( r_type_kind ( TDB , name ) != R_TYPE_ENUM )"		4364756	0		&&			
ANR	4365672	Identifier	name		4364756	0					
ANR	4365673	EqualityExpression	"r_type_kind ( TDB , name ) != R_TYPE_ENUM"		4364756	1		!=			
ANR	4365674	CallExpression	"r_type_kind ( TDB , name )"		4364756	0					
ANR	4365675	Callee	r_type_kind		4364756	0					
ANR	4365676	Identifier	r_type_kind		4364756	0					
ANR	4365677	ArgumentList	TDB		4364756	1					
ANR	4365678	Argument	TDB		4364756	0					
ANR	4365679	Identifier	TDB		4364756	0					
ANR	4365680	Argument	name		4364756	1					
ANR	4365681	Identifier	name		4364756	0					
ANR	4365682	Identifier	R_TYPE_ENUM		4364756	1					
ANR	4365683	CompoundStatement		156:56:4020:4020	4364756	1					
ANR	4365684	ExpressionStatement	"eprintf ( ""%s is not an enum\\n"" , name )"	1162:3:32439:32476	4364756	0	True				
ANR	4365685	CallExpression	"eprintf ( ""%s is not an enum\\n"" , name )"		4364756	0					
ANR	4365686	Callee	eprintf		4364756	0					
ANR	4365687	Identifier	eprintf		4364756	0					
ANR	4365688	ArgumentList	"""%s is not an enum\\n"""		4364756	1					
ANR	4365689	Argument	"""%s is not an enum\\n"""		4364756	0					
ANR	4365690	PrimaryExpression	"""%s is not an enum\\n"""		4364756	0					
ANR	4365691	Argument	name		4364756	1					
ANR	4365692	Identifier	name		4364756	0					
ANR	4365693	ExpressionStatement	free ( name )	1163:3:32481:32492	4364756	1	True				
ANR	4365694	CallExpression	free ( name )		4364756	0					
ANR	4365695	Callee	free		4364756	0					
ANR	4365696	Identifier	free		4364756	0					
ANR	4365697	ArgumentList	name		4364756	1					
ANR	4365698	Argument	name		4364756	0					
ANR	4365699	Identifier	name		4364756	0					
ANR	4365700	BreakStatement	break ;	1164:3:32497:32502	4364756	2	True				
ANR	4365701	SwitchStatement	switch ( input [ 1 ] )		4364756	6					
ANR	4365702	Condition	input [ 1 ]	1166:10:32518:32525	4364756	0	True				
ANR	4365703	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4365704	Identifier	input		4364756	0					
ANR	4365705	PrimaryExpression	1		4364756	1					
ANR	4365706	CompoundStatement		161:20:4114:4114	4364756	1					
ANR	4365707	Label	case '?' :	1167:2:32532:32540	4364756	0	True				
ANR	4365708	ExpressionStatement	"r_core_cmd_help ( core , help_msg_te )"	1168:3:32545:32580	4364756	1	True				
ANR	4365709	CallExpression	"r_core_cmd_help ( core , help_msg_te )"		4364756	0					
ANR	4365710	Callee	r_core_cmd_help		4364756	0					
ANR	4365711	Identifier	r_core_cmd_help		4364756	0					
ANR	4365712	ArgumentList	core		4364756	1					
ANR	4365713	Argument	core		4364756	0					
ANR	4365714	Identifier	core		4364756	0					
ANR	4365715	Argument	help_msg_te		4364756	1					
ANR	4365716	Identifier	help_msg_te		4364756	0					
ANR	4365717	BreakStatement	break ;	1169:3:32585:32590	4364756	2	True				
ANR	4365718	Label	case 'j' :	1170:2:32594:32602	4364756	3	True				
ANR	4365719	IfStatement	if ( input [ 2 ] == 0 )		4364756	4					
ANR	4365720	Condition	input [ 2 ] == 0	1171:7:32620:32632	4364756	0	True				
ANR	4365721	EqualityExpression	input [ 2 ] == 0		4364756	0		==			
ANR	4365722	ArrayIndexing	input [ 2 ]		4364756	0					
ANR	4365723	Identifier	input		4364756	0					
ANR	4365724	PrimaryExpression	2		4364756	1					
ANR	4365725	PrimaryExpression	0		4364756	1					
ANR	4365726	CompoundStatement		171:4:4344:4362	4364756	1					
ANR	4365727	IdentifierDeclStatement	char * name = NULL ;	1172:4:32650:32667	4364756	0	True				
ANR	4365728	IdentifierDecl	* name = NULL		4364756	0					
ANR	4365729	IdentifierDeclType	char *		4364756	0					
ANR	4365730	Identifier	name		4364756	1					
ANR	4365731	AssignmentExpression	* name = NULL		4364756	2		=			
ANR	4365732	Identifier	NULL		4364756	0					
ANR	4365733	Identifier	NULL		4364756	1					
ANR	4365734	IdentifierDeclStatement	SdbKv * kv ;	1173:4:32673:32682	4364756	1	True				
ANR	4365735	IdentifierDecl	* kv		4364756	0					
ANR	4365736	IdentifierDeclType	SdbKv *		4364756	0					
ANR	4365737	Identifier	kv		4364756	1					
ANR	4365738	IdentifierDeclStatement	SdbListIter * iter ;	1174:4:32688:32705	4364756	2	True				
ANR	4365739	IdentifierDecl	* iter		4364756	0					
ANR	4365740	IdentifierDeclType	SdbListIter *		4364756	0					
ANR	4365741	Identifier	iter		4364756	1					
ANR	4365742	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list ( TDB , true ) ;"	1175:4:32711:32752	4364756	3	True				
ANR	4365743	IdentifierDecl	"* l = sdb_foreach_list ( TDB , true )"		4364756	0					
ANR	4365744	IdentifierDeclType	SdbList *		4364756	0					
ANR	4365745	Identifier	l		4364756	1					
ANR	4365746	AssignmentExpression	"* l = sdb_foreach_list ( TDB , true )"		4364756	2		=			
ANR	4365747	Identifier	l		4364756	0					
ANR	4365748	CallExpression	"sdb_foreach_list ( TDB , true )"		4364756	1					
ANR	4365749	Callee	sdb_foreach_list		4364756	0					
ANR	4365750	Identifier	sdb_foreach_list		4364756	0					
ANR	4365751	ArgumentList	TDB		4364756	1					
ANR	4365752	Argument	TDB		4364756	0					
ANR	4365753	Identifier	TDB		4364756	0					
ANR	4365754	Argument	true		4364756	1					
ANR	4365755	Identifier	true		4364756	0					
ANR	4365756	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	1176:4:32758:32776	4364756	4	True				
ANR	4365757	IdentifierDecl	* pj = pj_new ( )		4364756	0					
ANR	4365758	IdentifierDeclType	PJ *		4364756	0					
ANR	4365759	Identifier	pj		4364756	1					
ANR	4365760	AssignmentExpression	* pj = pj_new ( )		4364756	2		=			
ANR	4365761	Identifier	pj		4364756	0					
ANR	4365762	CallExpression	pj_new ( )		4364756	1					
ANR	4365763	Callee	pj_new		4364756	0					
ANR	4365764	Identifier	pj_new		4364756	0					
ANR	4365765	ArgumentList			4364756	1					
ANR	4365766	ExpressionStatement	pj_o ( pj )	1177:4:32782:32791	4364756	5	True				
ANR	4365767	CallExpression	pj_o ( pj )		4364756	0					
ANR	4365768	Callee	pj_o		4364756	0					
ANR	4365769	Identifier	pj_o		4364756	0					
ANR	4365770	ArgumentList	pj		4364756	1					
ANR	4365771	Argument	pj		4364756	0					
ANR	4365772	Identifier	pj		4364756	0					
ANR	4365773	Statement	ls_foreach	1178:4:32797:32806	4364756	6	True				
ANR	4365774	Statement	(	1178:15:32808:32808	4364756	7	True				
ANR	4365775	Statement	l	1178:16:32809:32809	4364756	8	True				
ANR	4365776	Statement	","	1178:17:32810:32810	4364756	9	True				
ANR	4365777	Statement	iter	1178:19:32812:32815	4364756	10	True				
ANR	4365778	Statement	","	1178:23:32816:32816	4364756	11	True				
ANR	4365779	Statement	kv	1178:25:32818:32819	4364756	12	True				
ANR	4365780	Statement	)	1178:27:32820:32820	4364756	13	True				
ANR	4365781	CompoundStatement		173:29:4408:4408	4364756	14					
ANR	4365782	IfStatement	"if ( ! strcmp ( sdbkv_value ( kv ) , ""enum"" ) )"		4364756	0					
ANR	4365783	Condition	"! strcmp ( sdbkv_value ( kv ) , ""enum"" )"	1179:9:32833:32866	4364756	0	True				
ANR	4365784	UnaryOperationExpression	"! strcmp ( sdbkv_value ( kv ) , ""enum"" )"		4364756	0					
ANR	4365785	UnaryOperator	!		4364756	0					
ANR	4365786	CallExpression	"strcmp ( sdbkv_value ( kv ) , ""enum"" )"		4364756	1					
ANR	4365787	Callee	strcmp		4364756	0					
ANR	4365788	Identifier	strcmp		4364756	0					
ANR	4365789	ArgumentList	sdbkv_value ( kv )		4364756	1					
ANR	4365790	Argument	sdbkv_value ( kv )		4364756	0					
ANR	4365791	CallExpression	sdbkv_value ( kv )		4364756	0					
ANR	4365792	Callee	sdbkv_value		4364756	0					
ANR	4365793	Identifier	sdbkv_value		4364756	0					
ANR	4365794	ArgumentList	kv		4364756	1					
ANR	4365795	Argument	kv		4364756	0					
ANR	4365796	Identifier	kv		4364756	0					
ANR	4365797	Argument	"""enum"""		4364756	1					
ANR	4365798	PrimaryExpression	"""enum"""		4364756	0					
ANR	4365799	CompoundStatement		174:45:4455:4455	4364756	1					
ANR	4365800	IfStatement	"if ( ! name || strcmp ( sdbkv_value ( kv ) , name ) )"		4364756	0					
ANR	4365801	Condition	"! name || strcmp ( sdbkv_value ( kv ) , name )"	1180:10:32881:32920	4364756	0	True				
ANR	4365802	OrExpression	"! name || strcmp ( sdbkv_value ( kv ) , name )"		4364756	0		||			
ANR	4365803	UnaryOperationExpression	! name		4364756	0					
ANR	4365804	UnaryOperator	!		4364756	0					
ANR	4365805	Identifier	name		4364756	1					
ANR	4365806	CallExpression	"strcmp ( sdbkv_value ( kv ) , name )"		4364756	1					
ANR	4365807	Callee	strcmp		4364756	0					
ANR	4365808	Identifier	strcmp		4364756	0					
ANR	4365809	ArgumentList	sdbkv_value ( kv )		4364756	1					
ANR	4365810	Argument	sdbkv_value ( kv )		4364756	0					
ANR	4365811	CallExpression	sdbkv_value ( kv )		4364756	0					
ANR	4365812	Callee	sdbkv_value		4364756	0					
ANR	4365813	Identifier	sdbkv_value		4364756	0					
ANR	4365814	ArgumentList	kv		4364756	1					
ANR	4365815	Argument	kv		4364756	0					
ANR	4365816	Identifier	kv		4364756	0					
ANR	4365817	Argument	name		4364756	1					
ANR	4365818	Identifier	name		4364756	0					
ANR	4365819	CompoundStatement		175:52:4509:4509	4364756	1					
ANR	4365820	ExpressionStatement	free ( name )	1181:7:32932:32943	4364756	0	True				
ANR	4365821	CallExpression	free ( name )		4364756	0					
ANR	4365822	Callee	free		4364756	0					
ANR	4365823	Identifier	free		4364756	0					
ANR	4365824	ArgumentList	name		4364756	1					
ANR	4365825	Argument	name		4364756	0					
ANR	4365826	Identifier	name		4364756	0					
ANR	4365827	ExpressionStatement	name = strdup ( sdbkv_key ( kv ) )	1182:7:32952:32982	4364756	1	True				
ANR	4365828	AssignmentExpression	name = strdup ( sdbkv_key ( kv ) )		4364756	0		=			
ANR	4365829	Identifier	name		4364756	0					
ANR	4365830	CallExpression	strdup ( sdbkv_key ( kv ) )		4364756	1					
ANR	4365831	Callee	strdup		4364756	0					
ANR	4365832	Identifier	strdup		4364756	0					
ANR	4365833	ArgumentList	sdbkv_key ( kv )		4364756	1					
ANR	4365834	Argument	sdbkv_key ( kv )		4364756	0					
ANR	4365835	CallExpression	sdbkv_key ( kv )		4364756	0					
ANR	4365836	Callee	sdbkv_key		4364756	0					
ANR	4365837	Identifier	sdbkv_key		4364756	0					
ANR	4365838	ArgumentList	kv		4364756	1					
ANR	4365839	Argument	kv		4364756	0					
ANR	4365840	Identifier	kv		4364756	0					
ANR	4365841	ExpressionStatement	"pj_k ( pj , name )"	1183:7:32991:33006	4364756	2	True				
ANR	4365842	CallExpression	"pj_k ( pj , name )"		4364756	0					
ANR	4365843	Callee	pj_k		4364756	0					
ANR	4365844	Identifier	pj_k		4364756	0					
ANR	4365845	ArgumentList	pj		4364756	1					
ANR	4365846	Argument	pj		4364756	0					
ANR	4365847	Identifier	pj		4364756	0					
ANR	4365848	Argument	name		4364756	1					
ANR	4365849	Identifier	name		4364756	0					
ANR	4365850	CompoundStatement		180:8:4611:4652	4364756	3					
ANR	4365851	IdentifierDeclStatement	"RList * list = r_type_get_enum ( TDB , name ) ;"	1185:8:33025:33066	4364756	0	True				
ANR	4365852	IdentifierDecl	"* list = r_type_get_enum ( TDB , name )"		4364756	0					
ANR	4365853	IdentifierDeclType	RList *		4364756	0					
ANR	4365854	Identifier	list		4364756	1					
ANR	4365855	AssignmentExpression	"* list = r_type_get_enum ( TDB , name )"		4364756	2		=			
ANR	4365856	Identifier	list		4364756	0					
ANR	4365857	CallExpression	"r_type_get_enum ( TDB , name )"		4364756	1					
ANR	4365858	Callee	r_type_get_enum		4364756	0					
ANR	4365859	Identifier	r_type_get_enum		4364756	0					
ANR	4365860	ArgumentList	TDB		4364756	1					
ANR	4365861	Argument	TDB		4364756	0					
ANR	4365862	Identifier	TDB		4364756	0					
ANR	4365863	Argument	name		4364756	1					
ANR	4365864	Identifier	name		4364756	0					
ANR	4365865	IfStatement	if ( list && ! r_list_empty ( list ) )		4364756	1					
ANR	4365866	Condition	list && ! r_list_empty ( list )	1186:12:33080:33107	4364756	0	True				
ANR	4365867	AndExpression	list && ! r_list_empty ( list )		4364756	0		&&			
ANR	4365868	Identifier	list		4364756	0					
ANR	4365869	UnaryOperationExpression	! r_list_empty ( list )		4364756	1					
ANR	4365870	UnaryOperator	!		4364756	0					
ANR	4365871	CallExpression	r_list_empty ( list )		4364756	1					
ANR	4365872	Callee	r_list_empty		4364756	0					
ANR	4365873	Identifier	r_list_empty		4364756	0					
ANR	4365874	ArgumentList	list		4364756	1					
ANR	4365875	Argument	list		4364756	0					
ANR	4365876	Identifier	list		4364756	0					
ANR	4365877	CompoundStatement		184:9:4753:4770	4364756	1					
ANR	4365878	ExpressionStatement	pj_o ( pj )	1187:9:33121:33130	4364756	0	True				
ANR	4365879	CallExpression	pj_o ( pj )		4364756	0					
ANR	4365880	Callee	pj_o		4364756	0					
ANR	4365881	Identifier	pj_o		4364756	0					
ANR	4365882	ArgumentList	pj		4364756	1					
ANR	4365883	Argument	pj		4364756	0					
ANR	4365884	Identifier	pj		4364756	0					
ANR	4365885	IdentifierDeclStatement	RListIter * iter ;	1188:9:33141:33156	4364756	1	True				
ANR	4365886	IdentifierDecl	* iter		4364756	0					
ANR	4365887	IdentifierDeclType	RListIter *		4364756	0					
ANR	4365888	Identifier	iter		4364756	1					
ANR	4365889	IdentifierDeclStatement	RTypeEnum * member ;	1189:9:33167:33184	4364756	2	True				
ANR	4365890	IdentifierDecl	* member		4364756	0					
ANR	4365891	IdentifierDeclType	RTypeEnum *		4364756	0					
ANR	4365892	Identifier	member		4364756	1					
ANR	4365893	Statement	r_list_foreach	1190:9:33195:33208	4364756	3	True				
ANR	4365894	Statement	(	1190:24:33210:33210	4364756	4	True				
ANR	4365895	Statement	list	1190:25:33211:33214	4364756	5	True				
ANR	4365896	Statement	","	1190:29:33215:33215	4364756	6	True				
ANR	4365897	Statement	iter	1190:31:33217:33220	4364756	7	True				
ANR	4365898	Statement	","	1190:35:33221:33221	4364756	8	True				
ANR	4365899	Statement	member	1190:37:33223:33228	4364756	9	True				
ANR	4365900	Statement	)	1190:43:33229:33229	4364756	10	True				
ANR	4365901	CompoundStatement		185:45:4817:4817	4364756	11					
ANR	4365902	ExpressionStatement	"pj_kn ( pj , member -> name , r_num_math ( NULL , member -> val ) )"	1191:10:33243:33299	4364756	0	True				
ANR	4365903	CallExpression	"pj_kn ( pj , member -> name , r_num_math ( NULL , member -> val ) )"		4364756	0					
ANR	4365904	Callee	pj_kn		4364756	0					
ANR	4365905	Identifier	pj_kn		4364756	0					
ANR	4365906	ArgumentList	pj		4364756	1					
ANR	4365907	Argument	pj		4364756	0					
ANR	4365908	Identifier	pj		4364756	0					
ANR	4365909	Argument	member -> name		4364756	1					
ANR	4365910	PtrMemberAccess	member -> name		4364756	0					
ANR	4365911	Identifier	member		4364756	0					
ANR	4365912	Identifier	name		4364756	1					
ANR	4365913	Argument	"r_num_math ( NULL , member -> val )"		4364756	2					
ANR	4365914	CallExpression	"r_num_math ( NULL , member -> val )"		4364756	0					
ANR	4365915	Callee	r_num_math		4364756	0					
ANR	4365916	Identifier	r_num_math		4364756	0					
ANR	4365917	ArgumentList	NULL		4364756	1					
ANR	4365918	Argument	NULL		4364756	0					
ANR	4365919	Identifier	NULL		4364756	0					
ANR	4365920	Argument	member -> val		4364756	1					
ANR	4365921	PtrMemberAccess	member -> val		4364756	0					
ANR	4365922	Identifier	member		4364756	0					
ANR	4365923	Identifier	val		4364756	1					
ANR	4365924	ExpressionStatement	pj_end ( pj )	1193:9:33321:33332	4364756	12	True				
ANR	4365925	CallExpression	pj_end ( pj )		4364756	0					
ANR	4365926	Callee	pj_end		4364756	0					
ANR	4365927	Identifier	pj_end		4364756	0					
ANR	4365928	ArgumentList	pj		4364756	1					
ANR	4365929	Argument	pj		4364756	0					
ANR	4365930	Identifier	pj		4364756	0					
ANR	4365931	ExpressionStatement	r_list_free ( list )	1195:8:33352:33370	4364756	2	True				
ANR	4365932	CallExpression	r_list_free ( list )		4364756	0					
ANR	4365933	Callee	r_list_free		4364756	0					
ANR	4365934	Identifier	r_list_free		4364756	0					
ANR	4365935	ArgumentList	list		4364756	1					
ANR	4365936	Argument	list		4364756	0					
ANR	4365937	Identifier	list		4364756	0					
ANR	4365938	ExpressionStatement	pj_end ( pj )	1200:4:33406:33417	4364756	15	True				
ANR	4365939	CallExpression	pj_end ( pj )		4364756	0					
ANR	4365940	Callee	pj_end		4364756	0					
ANR	4365941	Identifier	pj_end		4364756	0					
ANR	4365942	ArgumentList	pj		4364756	1					
ANR	4365943	Argument	pj		4364756	0					
ANR	4365944	Identifier	pj		4364756	0					
ANR	4365945	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	1201:4:33423:33461	4364756	16	True				
ANR	4365946	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		4364756	0					
ANR	4365947	Callee	r_cons_printf		4364756	0					
ANR	4365948	Identifier	r_cons_printf		4364756	0					
ANR	4365949	ArgumentList	"""%s\\n"""		4364756	1					
ANR	4365950	Argument	"""%s\\n"""		4364756	0					
ANR	4365951	PrimaryExpression	"""%s\\n"""		4364756	0					
ANR	4365952	Argument	pj_string ( pj )		4364756	1					
ANR	4365953	CallExpression	pj_string ( pj )		4364756	0					
ANR	4365954	Callee	pj_string		4364756	0					
ANR	4365955	Identifier	pj_string		4364756	0					
ANR	4365956	ArgumentList	pj		4364756	1					
ANR	4365957	Argument	pj		4364756	0					
ANR	4365958	Identifier	pj		4364756	0					
ANR	4365959	ExpressionStatement	pj_free ( pj )	1202:4:33467:33479	4364756	17	True				
ANR	4365960	CallExpression	pj_free ( pj )		4364756	0					
ANR	4365961	Callee	pj_free		4364756	0					
ANR	4365962	Identifier	pj_free		4364756	0					
ANR	4365963	ArgumentList	pj		4364756	1					
ANR	4365964	Argument	pj		4364756	0					
ANR	4365965	Identifier	pj		4364756	0					
ANR	4365966	ExpressionStatement	free ( name )	1203:4:33485:33496	4364756	18	True				
ANR	4365967	CallExpression	free ( name )		4364756	0					
ANR	4365968	Callee	free		4364756	0					
ANR	4365969	Identifier	free		4364756	0					
ANR	4365970	ArgumentList	name		4364756	1					
ANR	4365971	Argument	name		4364756	0					
ANR	4365972	Identifier	name		4364756	0					
ANR	4365973	ExpressionStatement	ls_free ( l )	1204:4:33502:33513	4364756	19	True				
ANR	4365974	CallExpression	ls_free ( l )		4364756	0					
ANR	4365975	Callee	ls_free		4364756	0					
ANR	4365976	Identifier	ls_free		4364756	0					
ANR	4365977	ArgumentList	l		4364756	1					
ANR	4365978	Argument	l		4364756	0					
ANR	4365979	Identifier	l		4364756	0					
ANR	4365980	ElseStatement	else		4364756	0					
ANR	4365981	CompoundStatement		203:4:5176:5193	4364756	0					
ANR	4365982	IdentifierDeclStatement	RListIter * iter ;	1206:4:33545:33560	4364756	0	True				
ANR	4365983	IdentifierDecl	* iter		4364756	0					
ANR	4365984	IdentifierDeclType	RListIter *		4364756	0					
ANR	4365985	Identifier	iter		4364756	1					
ANR	4365986	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	1207:4:33566:33584	4364756	1	True				
ANR	4365987	IdentifierDecl	* pj = pj_new ( )		4364756	0					
ANR	4365988	IdentifierDeclType	PJ *		4364756	0					
ANR	4365989	Identifier	pj		4364756	1					
ANR	4365990	AssignmentExpression	* pj = pj_new ( )		4364756	2		=			
ANR	4365991	Identifier	pj		4364756	0					
ANR	4365992	CallExpression	pj_new ( )		4364756	1					
ANR	4365993	Callee	pj_new		4364756	0					
ANR	4365994	Identifier	pj_new		4364756	0					
ANR	4365995	ArgumentList			4364756	1					
ANR	4365996	IdentifierDeclStatement	RTypeEnum * member ;	1208:4:33590:33607	4364756	2	True				
ANR	4365997	IdentifierDecl	* member		4364756	0					
ANR	4365998	IdentifierDeclType	RTypeEnum *		4364756	0					
ANR	4365999	Identifier	member		4364756	1					
ANR	4366000	ExpressionStatement	pj_o ( pj )	1209:4:33613:33622	4364756	3	True				
ANR	4366001	CallExpression	pj_o ( pj )		4364756	0					
ANR	4366002	Callee	pj_o		4364756	0					
ANR	4366003	Identifier	pj_o		4364756	0					
ANR	4366004	ArgumentList	pj		4364756	1					
ANR	4366005	Argument	pj		4364756	0					
ANR	4366006	Identifier	pj		4364756	0					
ANR	4366007	IfStatement	if ( member_name )		4364756	4					
ANR	4366008	Condition	member_name	1210:8:33632:33642	4364756	0	True				
ANR	4366009	Identifier	member_name		4364756	0					
ANR	4366010	CompoundStatement		205:21:5231:5231	4364756	1					
ANR	4366011	ExpressionStatement	"res = r_type_enum_member ( TDB , name , NULL , r_num_math ( core -> num , member_name ) )"	1211:5:33652:33731	4364756	0	True				
ANR	4366012	AssignmentExpression	"res = r_type_enum_member ( TDB , name , NULL , r_num_math ( core -> num , member_name ) )"		4364756	0		=			
ANR	4366013	Identifier	res		4364756	0					
ANR	4366014	CallExpression	"r_type_enum_member ( TDB , name , NULL , r_num_math ( core -> num , member_name ) )"		4364756	1					
ANR	4366015	Callee	r_type_enum_member		4364756	0					
ANR	4366016	Identifier	r_type_enum_member		4364756	0					
ANR	4366017	ArgumentList	TDB		4364756	1					
ANR	4366018	Argument	TDB		4364756	0					
ANR	4366019	Identifier	TDB		4364756	0					
ANR	4366020	Argument	name		4364756	1					
ANR	4366021	Identifier	name		4364756	0					
ANR	4366022	Argument	NULL		4364756	2					
ANR	4366023	Identifier	NULL		4364756	0					
ANR	4366024	Argument	"r_num_math ( core -> num , member_name )"		4364756	3					
ANR	4366025	CallExpression	"r_num_math ( core -> num , member_name )"		4364756	0					
ANR	4366026	Callee	r_num_math		4364756	0					
ANR	4366027	Identifier	r_num_math		4364756	0					
ANR	4366028	ArgumentList	core -> num		4364756	1					
ANR	4366029	Argument	core -> num		4364756	0					
ANR	4366030	PtrMemberAccess	core -> num		4364756	0					
ANR	4366031	Identifier	core		4364756	0					
ANR	4366032	Identifier	num		4364756	1					
ANR	4366033	Argument	member_name		4364756	1					
ANR	4366034	Identifier	member_name		4364756	0					
ANR	4366035	ElseStatement	else		4364756	0					
ANR	4366036	CompoundStatement		209:5:5359:5400	4364756	0					
ANR	4366037	IdentifierDeclStatement	"RList * list = r_type_get_enum ( TDB , name ) ;"	1214:5:33773:33814	4364756	0	True				
ANR	4366038	IdentifierDecl	"* list = r_type_get_enum ( TDB , name )"		4364756	0					
ANR	4366039	IdentifierDeclType	RList *		4364756	0					
ANR	4366040	Identifier	list		4364756	1					
ANR	4366041	AssignmentExpression	"* list = r_type_get_enum ( TDB , name )"		4364756	2		=			
ANR	4366042	Identifier	list		4364756	0					
ANR	4366043	CallExpression	"r_type_get_enum ( TDB , name )"		4364756	1					
ANR	4366044	Callee	r_type_get_enum		4364756	0					
ANR	4366045	Identifier	r_type_get_enum		4364756	0					
ANR	4366046	ArgumentList	TDB		4364756	1					
ANR	4366047	Argument	TDB		4364756	0					
ANR	4366048	Identifier	TDB		4364756	0					
ANR	4366049	Argument	name		4364756	1					
ANR	4366050	Identifier	name		4364756	0					
ANR	4366051	IfStatement	if ( list && ! r_list_empty ( list ) )		4364756	1					
ANR	4366052	Condition	list && ! r_list_empty ( list )	1215:9:33825:33852	4364756	0	True				
ANR	4366053	AndExpression	list && ! r_list_empty ( list )		4364756	0		&&			
ANR	4366054	Identifier	list		4364756	0					
ANR	4366055	UnaryOperationExpression	! r_list_empty ( list )		4364756	1					
ANR	4366056	UnaryOperator	!		4364756	0					
ANR	4366057	CallExpression	r_list_empty ( list )		4364756	1					
ANR	4366058	Callee	r_list_empty		4364756	0					
ANR	4366059	Identifier	r_list_empty		4364756	0					
ANR	4366060	ArgumentList	list		4364756	1					
ANR	4366061	Argument	list		4364756	0					
ANR	4366062	Identifier	list		4364756	0					
ANR	4366063	CompoundStatement		210:39:5441:5441	4364756	1					
ANR	4366064	ExpressionStatement	"pj_ks ( pj , ""name"" , name )"	1216:6:33863:33887	4364756	0	True				
ANR	4366065	CallExpression	"pj_ks ( pj , ""name"" , name )"		4364756	0					
ANR	4366066	Callee	pj_ks		4364756	0					
ANR	4366067	Identifier	pj_ks		4364756	0					
ANR	4366068	ArgumentList	pj		4364756	1					
ANR	4366069	Argument	pj		4364756	0					
ANR	4366070	Identifier	pj		4364756	0					
ANR	4366071	Argument	"""name"""		4364756	1					
ANR	4366072	PrimaryExpression	"""name"""		4364756	0					
ANR	4366073	Argument	name		4364756	2					
ANR	4366074	Identifier	name		4364756	0					
ANR	4366075	ExpressionStatement	"pj_k ( pj , ""values"" )"	1217:6:33895:33914	4364756	1	True				
ANR	4366076	CallExpression	"pj_k ( pj , ""values"" )"		4364756	0					
ANR	4366077	Callee	pj_k		4364756	0					
ANR	4366078	Identifier	pj_k		4364756	0					
ANR	4366079	ArgumentList	pj		4364756	1					
ANR	4366080	Argument	pj		4364756	0					
ANR	4366081	Identifier	pj		4364756	0					
ANR	4366082	Argument	"""values"""		4364756	1					
ANR	4366083	PrimaryExpression	"""values"""		4364756	0					
ANR	4366084	ExpressionStatement	pj_o ( pj )	1218:6:33922:33931	4364756	2	True				
ANR	4366085	CallExpression	pj_o ( pj )		4364756	0					
ANR	4366086	Callee	pj_o		4364756	0					
ANR	4366087	Identifier	pj_o		4364756	0					
ANR	4366088	ArgumentList	pj		4364756	1					
ANR	4366089	Argument	pj		4364756	0					
ANR	4366090	Identifier	pj		4364756	0					
ANR	4366091	Statement	r_list_foreach	1219:6:33939:33952	4364756	3	True				
ANR	4366092	Statement	(	1219:21:33954:33954	4364756	4	True				
ANR	4366093	Statement	list	1219:22:33955:33958	4364756	5	True				
ANR	4366094	Statement	","	1219:26:33959:33959	4364756	6	True				
ANR	4366095	Statement	iter	1219:28:33961:33964	4364756	7	True				
ANR	4366096	Statement	","	1219:32:33965:33965	4364756	8	True				
ANR	4366097	Statement	member	1219:34:33967:33972	4364756	9	True				
ANR	4366098	Statement	)	1219:40:33973:33973	4364756	10	True				
ANR	4366099	CompoundStatement		214:42:5561:5561	4364756	11					
ANR	4366100	ExpressionStatement	"pj_kn ( pj , member -> name , r_num_math ( NULL , member -> val ) )"	1220:7:33984:34040	4364756	0	True				
ANR	4366101	CallExpression	"pj_kn ( pj , member -> name , r_num_math ( NULL , member -> val ) )"		4364756	0					
ANR	4366102	Callee	pj_kn		4364756	0					
ANR	4366103	Identifier	pj_kn		4364756	0					
ANR	4366104	ArgumentList	pj		4364756	1					
ANR	4366105	Argument	pj		4364756	0					
ANR	4366106	Identifier	pj		4364756	0					
ANR	4366107	Argument	member -> name		4364756	1					
ANR	4366108	PtrMemberAccess	member -> name		4364756	0					
ANR	4366109	Identifier	member		4364756	0					
ANR	4366110	Identifier	name		4364756	1					
ANR	4366111	Argument	"r_num_math ( NULL , member -> val )"		4364756	2					
ANR	4366112	CallExpression	"r_num_math ( NULL , member -> val )"		4364756	0					
ANR	4366113	Callee	r_num_math		4364756	0					
ANR	4366114	Identifier	r_num_math		4364756	0					
ANR	4366115	ArgumentList	NULL		4364756	1					
ANR	4366116	Argument	NULL		4364756	0					
ANR	4366117	Identifier	NULL		4364756	0					
ANR	4366118	Argument	member -> val		4364756	1					
ANR	4366119	PtrMemberAccess	member -> val		4364756	0					
ANR	4366120	Identifier	member		4364756	0					
ANR	4366121	Identifier	val		4364756	1					
ANR	4366122	ExpressionStatement	pj_end ( pj )	1222:6:34056:34067	4364756	12	True				
ANR	4366123	CallExpression	pj_end ( pj )		4364756	0					
ANR	4366124	Callee	pj_end		4364756	0					
ANR	4366125	Identifier	pj_end		4364756	0					
ANR	4366126	ArgumentList	pj		4364756	1					
ANR	4366127	Argument	pj		4364756	0					
ANR	4366128	Identifier	pj		4364756	0					
ANR	4366129	ExpressionStatement	pj_end ( pj )	1223:6:34075:34086	4364756	13	True				
ANR	4366130	CallExpression	pj_end ( pj )		4364756	0					
ANR	4366131	Callee	pj_end		4364756	0					
ANR	4366132	Identifier	pj_end		4364756	0					
ANR	4366133	ArgumentList	pj		4364756	1					
ANR	4366134	Argument	pj		4364756	0					
ANR	4366135	Identifier	pj		4364756	0					
ANR	4366136	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	1225:5:34100:34138	4364756	2	True				
ANR	4366137	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		4364756	0					
ANR	4366138	Callee	r_cons_printf		4364756	0					
ANR	4366139	Identifier	r_cons_printf		4364756	0					
ANR	4366140	ArgumentList	"""%s\\n"""		4364756	1					
ANR	4366141	Argument	"""%s\\n"""		4364756	0					
ANR	4366142	PrimaryExpression	"""%s\\n"""		4364756	0					
ANR	4366143	Argument	pj_string ( pj )		4364756	1					
ANR	4366144	CallExpression	pj_string ( pj )		4364756	0					
ANR	4366145	Callee	pj_string		4364756	0					
ANR	4366146	Identifier	pj_string		4364756	0					
ANR	4366147	ArgumentList	pj		4364756	1					
ANR	4366148	Argument	pj		4364756	0					
ANR	4366149	Identifier	pj		4364756	0					
ANR	4366150	ExpressionStatement	pj_free ( pj )	1226:5:34145:34157	4364756	3	True				
ANR	4366151	CallExpression	pj_free ( pj )		4364756	0					
ANR	4366152	Callee	pj_free		4364756	0					
ANR	4366153	Identifier	pj_free		4364756	0					
ANR	4366154	ArgumentList	pj		4364756	1					
ANR	4366155	Argument	pj		4364756	0					
ANR	4366156	Identifier	pj		4364756	0					
ANR	4366157	ExpressionStatement	r_list_free ( list )	1227:5:34164:34182	4364756	4	True				
ANR	4366158	CallExpression	r_list_free ( list )		4364756	0					
ANR	4366159	Callee	r_list_free		4364756	0					
ANR	4366160	Identifier	r_list_free		4364756	0					
ANR	4366161	ArgumentList	list		4364756	1					
ANR	4366162	Argument	list		4364756	0					
ANR	4366163	Identifier	list		4364756	0					
ANR	4366164	BreakStatement	break ;	1230:3:34198:34203	4364756	5	True				
ANR	4366165	Label	case 'b' :	1231:2:34207:34215	4364756	6	True				
ANR	4366166	ExpressionStatement	"res = r_type_enum_member ( TDB , name , member_name , 0 )"	1232:3:34229:34281	4364756	7	True				
ANR	4366167	AssignmentExpression	"res = r_type_enum_member ( TDB , name , member_name , 0 )"		4364756	0		=			
ANR	4366168	Identifier	res		4364756	0					
ANR	4366169	CallExpression	"r_type_enum_member ( TDB , name , member_name , 0 )"		4364756	1					
ANR	4366170	Callee	r_type_enum_member		4364756	0					
ANR	4366171	Identifier	r_type_enum_member		4364756	0					
ANR	4366172	ArgumentList	TDB		4364756	1					
ANR	4366173	Argument	TDB		4364756	0					
ANR	4366174	Identifier	TDB		4364756	0					
ANR	4366175	Argument	name		4364756	1					
ANR	4366176	Identifier	name		4364756	0					
ANR	4366177	Argument	member_name		4364756	2					
ANR	4366178	Identifier	member_name		4364756	0					
ANR	4366179	Argument	0		4364756	3					
ANR	4366180	PrimaryExpression	0		4364756	0					
ANR	4366181	BreakStatement	break ;	1233:3:34286:34291	4364756	8	True				
ANR	4366182	Label	case 'c' :	1234:2:34295:34303	4364756	9	True				
ANR	4366183	ExpressionStatement	"print_enum_in_c_format ( TDB , r_str_trim_ro ( input + 2 ) , true )"	1235:3:34317:34377	4364756	10	True				
ANR	4366184	CallExpression	"print_enum_in_c_format ( TDB , r_str_trim_ro ( input + 2 ) , true )"		4364756	0					
ANR	4366185	Callee	print_enum_in_c_format		4364756	0					
ANR	4366186	Identifier	print_enum_in_c_format		4364756	0					
ANR	4366187	ArgumentList	TDB		4364756	1					
ANR	4366188	Argument	TDB		4364756	0					
ANR	4366189	Identifier	TDB		4364756	0					
ANR	4366190	Argument	r_str_trim_ro ( input + 2 )		4364756	1					
ANR	4366191	CallExpression	r_str_trim_ro ( input + 2 )		4364756	0					
ANR	4366192	Callee	r_str_trim_ro		4364756	0					
ANR	4366193	Identifier	r_str_trim_ro		4364756	0					
ANR	4366194	ArgumentList	input + 2		4364756	1					
ANR	4366195	Argument	input + 2		4364756	0					
ANR	4366196	AdditiveExpression	input + 2		4364756	0		+			
ANR	4366197	Identifier	input		4364756	0					
ANR	4366198	PrimaryExpression	2		4364756	1					
ANR	4366199	Argument	true		4364756	2					
ANR	4366200	Identifier	true		4364756	0					
ANR	4366201	BreakStatement	break ;	1236:3:34382:34387	4364756	11	True				
ANR	4366202	Label	case 'd' :	1237:2:34391:34399	4364756	12	True				
ANR	4366203	ExpressionStatement	"print_enum_in_c_format ( TDB , r_str_trim_ro ( input + 2 ) , false )"	1238:3:34404:34465	4364756	13	True				
ANR	4366204	CallExpression	"print_enum_in_c_format ( TDB , r_str_trim_ro ( input + 2 ) , false )"		4364756	0					
ANR	4366205	Callee	print_enum_in_c_format		4364756	0					
ANR	4366206	Identifier	print_enum_in_c_format		4364756	0					
ANR	4366207	ArgumentList	TDB		4364756	1					
ANR	4366208	Argument	TDB		4364756	0					
ANR	4366209	Identifier	TDB		4364756	0					
ANR	4366210	Argument	r_str_trim_ro ( input + 2 )		4364756	1					
ANR	4366211	CallExpression	r_str_trim_ro ( input + 2 )		4364756	0					
ANR	4366212	Callee	r_str_trim_ro		4364756	0					
ANR	4366213	Identifier	r_str_trim_ro		4364756	0					
ANR	4366214	ArgumentList	input + 2		4364756	1					
ANR	4366215	Argument	input + 2		4364756	0					
ANR	4366216	AdditiveExpression	input + 2		4364756	0		+			
ANR	4366217	Identifier	input		4364756	0					
ANR	4366218	PrimaryExpression	2		4364756	1					
ANR	4366219	Argument	false		4364756	2					
ANR	4366220	Identifier	false		4364756	0					
ANR	4366221	BreakStatement	break ;	1239:3:34470:34475	4364756	14	True				
ANR	4366222	Label	case ' ' :	1240:2:34479:34487	4364756	15	True				
ANR	4366223	IfStatement	if ( member_name )		4364756	16					
ANR	4366224	Condition	member_name	1241:7:34496:34506	4364756	0	True				
ANR	4366225	Identifier	member_name		4364756	0					
ANR	4366226	CompoundStatement		236:20:6095:6095	4364756	1					
ANR	4366227	ExpressionStatement	"res = r_type_enum_member ( TDB , name , NULL , r_num_math ( core -> num , member_name ) )"	1242:4:34515:34594	4364756	0	True				
ANR	4366228	AssignmentExpression	"res = r_type_enum_member ( TDB , name , NULL , r_num_math ( core -> num , member_name ) )"		4364756	0		=			
ANR	4366229	Identifier	res		4364756	0					
ANR	4366230	CallExpression	"r_type_enum_member ( TDB , name , NULL , r_num_math ( core -> num , member_name ) )"		4364756	1					
ANR	4366231	Callee	r_type_enum_member		4364756	0					
ANR	4366232	Identifier	r_type_enum_member		4364756	0					
ANR	4366233	ArgumentList	TDB		4364756	1					
ANR	4366234	Argument	TDB		4364756	0					
ANR	4366235	Identifier	TDB		4364756	0					
ANR	4366236	Argument	name		4364756	1					
ANR	4366237	Identifier	name		4364756	0					
ANR	4366238	Argument	NULL		4364756	2					
ANR	4366239	Identifier	NULL		4364756	0					
ANR	4366240	Argument	"r_num_math ( core -> num , member_name )"		4364756	3					
ANR	4366241	CallExpression	"r_num_math ( core -> num , member_name )"		4364756	0					
ANR	4366242	Callee	r_num_math		4364756	0					
ANR	4366243	Identifier	r_num_math		4364756	0					
ANR	4366244	ArgumentList	core -> num		4364756	1					
ANR	4366245	Argument	core -> num		4364756	0					
ANR	4366246	PtrMemberAccess	core -> num		4364756	0					
ANR	4366247	Identifier	core		4364756	0					
ANR	4366248	Identifier	num		4364756	1					
ANR	4366249	Argument	member_name		4364756	1					
ANR	4366250	Identifier	member_name		4364756	0					
ANR	4366251	ElseStatement	else		4364756	0					
ANR	4366252	CompoundStatement		241:4:6266:6283	4364756	0					
ANR	4366253	IdentifierDeclStatement	"RList * list = r_type_get_enum ( TDB , name ) ;"	1244:4:34612:34653	4364756	0	True				
ANR	4366254	IdentifierDecl	"* list = r_type_get_enum ( TDB , name )"		4364756	0					
ANR	4366255	IdentifierDeclType	RList *		4364756	0					
ANR	4366256	Identifier	list		4364756	1					
ANR	4366257	AssignmentExpression	"* list = r_type_get_enum ( TDB , name )"		4364756	2		=			
ANR	4366258	Identifier	list		4364756	0					
ANR	4366259	CallExpression	"r_type_get_enum ( TDB , name )"		4364756	1					
ANR	4366260	Callee	r_type_get_enum		4364756	0					
ANR	4366261	Identifier	r_type_get_enum		4364756	0					
ANR	4366262	ArgumentList	TDB		4364756	1					
ANR	4366263	Argument	TDB		4364756	0					
ANR	4366264	Identifier	TDB		4364756	0					
ANR	4366265	Argument	name		4364756	1					
ANR	4366266	Identifier	name		4364756	0					
ANR	4366267	IdentifierDeclStatement	RListIter * iter ;	1245:4:34659:34674	4364756	1	True				
ANR	4366268	IdentifierDecl	* iter		4364756	0					
ANR	4366269	IdentifierDeclType	RListIter *		4364756	0					
ANR	4366270	Identifier	iter		4364756	1					
ANR	4366271	IdentifierDeclStatement	RTypeEnum * member ;	1246:4:34680:34697	4364756	2	True				
ANR	4366272	IdentifierDecl	* member		4364756	0					
ANR	4366273	IdentifierDeclType	RTypeEnum *		4364756	0					
ANR	4366274	Identifier	member		4364756	1					
ANR	4366275	Statement	r_list_foreach	1247:4:34703:34716	4364756	3	True				
ANR	4366276	Statement	(	1247:19:34718:34718	4364756	4	True				
ANR	4366277	Statement	list	1247:20:34719:34722	4364756	5	True				
ANR	4366278	Statement	","	1247:24:34723:34723	4364756	6	True				
ANR	4366279	Statement	iter	1247:26:34725:34728	4364756	7	True				
ANR	4366280	Statement	","	1247:30:34729:34729	4364756	8	True				
ANR	4366281	Statement	member	1247:32:34731:34736	4364756	9	True				
ANR	4366282	Statement	)	1247:38:34737:34737	4364756	10	True				
ANR	4366283	CompoundStatement		242:40:6325:6325	4364756	11					
ANR	4366284	ExpressionStatement	"r_cons_printf ( ""%s = %s\\n"" , member -> name , member -> val )"	1248:5:34746:34800	4364756	0	True				
ANR	4366285	CallExpression	"r_cons_printf ( ""%s = %s\\n"" , member -> name , member -> val )"		4364756	0					
ANR	4366286	Callee	r_cons_printf		4364756	0					
ANR	4366287	Identifier	r_cons_printf		4364756	0					
ANR	4366288	ArgumentList	"""%s = %s\\n"""		4364756	1					
ANR	4366289	Argument	"""%s = %s\\n"""		4364756	0					
ANR	4366290	PrimaryExpression	"""%s = %s\\n"""		4364756	0					
ANR	4366291	Argument	member -> name		4364756	1					
ANR	4366292	PtrMemberAccess	member -> name		4364756	0					
ANR	4366293	Identifier	member		4364756	0					
ANR	4366294	Identifier	name		4364756	1					
ANR	4366295	Argument	member -> val		4364756	2					
ANR	4366296	PtrMemberAccess	member -> val		4364756	0					
ANR	4366297	Identifier	member		4364756	0					
ANR	4366298	Identifier	val		4364756	1					
ANR	4366299	ExpressionStatement	r_list_free ( list )	1250:4:34812:34830	4364756	12	True				
ANR	4366300	CallExpression	r_list_free ( list )		4364756	0					
ANR	4366301	Callee	r_list_free		4364756	0					
ANR	4366302	Identifier	r_list_free		4364756	0					
ANR	4366303	ArgumentList	list		4364756	1					
ANR	4366304	Argument	list		4364756	0					
ANR	4366305	Identifier	list		4364756	0					
ANR	4366306	BreakStatement	break ;	1252:3:34840:34845	4364756	17	True				
ANR	4366307	Label	case '\\0' :	1253:2:34849:34858	4364756	18	True				
ANR	4366308	CompoundStatement		252:3:6509:6550	4364756	19					
ANR	4366309	IdentifierDeclStatement	char * name = NULL ;	1254:3:34865:34882	4364756	0	True				
ANR	4366310	IdentifierDecl	* name = NULL		4364756	0					
ANR	4366311	IdentifierDeclType	char *		4364756	0					
ANR	4366312	Identifier	name		4364756	1					
ANR	4366313	AssignmentExpression	* name = NULL		4364756	2		=			
ANR	4366314	Identifier	NULL		4364756	0					
ANR	4366315	Identifier	NULL		4364756	1					
ANR	4366316	IdentifierDeclStatement	SdbKv * kv ;	1255:3:34887:34896	4364756	1	True				
ANR	4366317	IdentifierDecl	* kv		4364756	0					
ANR	4366318	IdentifierDeclType	SdbKv *		4364756	0					
ANR	4366319	Identifier	kv		4364756	1					
ANR	4366320	IdentifierDeclStatement	SdbListIter * iter ;	1256:3:34901:34918	4364756	2	True				
ANR	4366321	IdentifierDecl	* iter		4364756	0					
ANR	4366322	IdentifierDeclType	SdbListIter *		4364756	0					
ANR	4366323	Identifier	iter		4364756	1					
ANR	4366324	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list ( TDB , true ) ;"	1257:3:34923:34964	4364756	3	True				
ANR	4366325	IdentifierDecl	"* l = sdb_foreach_list ( TDB , true )"		4364756	0					
ANR	4366326	IdentifierDeclType	SdbList *		4364756	0					
ANR	4366327	Identifier	l		4364756	1					
ANR	4366328	AssignmentExpression	"* l = sdb_foreach_list ( TDB , true )"		4364756	2		=			
ANR	4366329	Identifier	l		4364756	0					
ANR	4366330	CallExpression	"sdb_foreach_list ( TDB , true )"		4364756	1					
ANR	4366331	Callee	sdb_foreach_list		4364756	0					
ANR	4366332	Identifier	sdb_foreach_list		4364756	0					
ANR	4366333	ArgumentList	TDB		4364756	1					
ANR	4366334	Argument	TDB		4364756	0					
ANR	4366335	Identifier	TDB		4364756	0					
ANR	4366336	Argument	true		4364756	1					
ANR	4366337	Identifier	true		4364756	0					
ANR	4366338	Statement	ls_foreach	1258:3:34969:34978	4364756	4	True				
ANR	4366339	Statement	(	1258:14:34980:34980	4364756	5	True				
ANR	4366340	Statement	l	1258:15:34981:34981	4364756	6	True				
ANR	4366341	Statement	","	1258:16:34982:34982	4364756	7	True				
ANR	4366342	Statement	iter	1258:18:34984:34987	4364756	8	True				
ANR	4366343	Statement	","	1258:22:34988:34988	4364756	9	True				
ANR	4366344	Statement	kv	1258:24:34990:34991	4364756	10	True				
ANR	4366345	Statement	)	1258:26:34992:34992	4364756	11	True				
ANR	4366346	CompoundStatement		253:28:6580:6580	4364756	12					
ANR	4366347	IfStatement	"if ( ! strcmp ( sdbkv_value ( kv ) , ""enum"" ) )"		4364756	0					
ANR	4366348	Condition	"! strcmp ( sdbkv_value ( kv ) , ""enum"" )"	1259:8:35004:35037	4364756	0	True				
ANR	4366349	UnaryOperationExpression	"! strcmp ( sdbkv_value ( kv ) , ""enum"" )"		4364756	0					
ANR	4366350	UnaryOperator	!		4364756	0					
ANR	4366351	CallExpression	"strcmp ( sdbkv_value ( kv ) , ""enum"" )"		4364756	1					
ANR	4366352	Callee	strcmp		4364756	0					
ANR	4366353	Identifier	strcmp		4364756	0					
ANR	4366354	ArgumentList	sdbkv_value ( kv )		4364756	1					
ANR	4366355	Argument	sdbkv_value ( kv )		4364756	0					
ANR	4366356	CallExpression	sdbkv_value ( kv )		4364756	0					
ANR	4366357	Callee	sdbkv_value		4364756	0					
ANR	4366358	Identifier	sdbkv_value		4364756	0					
ANR	4366359	ArgumentList	kv		4364756	1					
ANR	4366360	Argument	kv		4364756	0					
ANR	4366361	Identifier	kv		4364756	0					
ANR	4366362	Argument	"""enum"""		4364756	1					
ANR	4366363	PrimaryExpression	"""enum"""		4364756	0					
ANR	4366364	CompoundStatement		254:44:6626:6626	4364756	1					
ANR	4366365	IfStatement	"if ( ! name || strcmp ( sdbkv_value ( kv ) , name ) )"		4364756	0					
ANR	4366366	Condition	"! name || strcmp ( sdbkv_value ( kv ) , name )"	1260:9:35051:35090	4364756	0	True				
ANR	4366367	OrExpression	"! name || strcmp ( sdbkv_value ( kv ) , name )"		4364756	0		||			
ANR	4366368	UnaryOperationExpression	! name		4364756	0					
ANR	4366369	UnaryOperator	!		4364756	0					
ANR	4366370	Identifier	name		4364756	1					
ANR	4366371	CallExpression	"strcmp ( sdbkv_value ( kv ) , name )"		4364756	1					
ANR	4366372	Callee	strcmp		4364756	0					
ANR	4366373	Identifier	strcmp		4364756	0					
ANR	4366374	ArgumentList	sdbkv_value ( kv )		4364756	1					
ANR	4366375	Argument	sdbkv_value ( kv )		4364756	0					
ANR	4366376	CallExpression	sdbkv_value ( kv )		4364756	0					
ANR	4366377	Callee	sdbkv_value		4364756	0					
ANR	4366378	Identifier	sdbkv_value		4364756	0					
ANR	4366379	ArgumentList	kv		4364756	1					
ANR	4366380	Argument	kv		4364756	0					
ANR	4366381	Identifier	kv		4364756	0					
ANR	4366382	Argument	name		4364756	1					
ANR	4366383	Identifier	name		4364756	0					
ANR	4366384	CompoundStatement		255:51:6679:6679	4364756	1					
ANR	4366385	ExpressionStatement	free ( name )	1261:6:35101:35112	4364756	0	True				
ANR	4366386	CallExpression	free ( name )		4364756	0					
ANR	4366387	Callee	free		4364756	0					
ANR	4366388	Identifier	free		4364756	0					
ANR	4366389	ArgumentList	name		4364756	1					
ANR	4366390	Argument	name		4364756	0					
ANR	4366391	Identifier	name		4364756	0					
ANR	4366392	ExpressionStatement	name = strdup ( sdbkv_key ( kv ) )	1262:6:35120:35150	4364756	1	True				
ANR	4366393	AssignmentExpression	name = strdup ( sdbkv_key ( kv ) )		4364756	0		=			
ANR	4366394	Identifier	name		4364756	0					
ANR	4366395	CallExpression	strdup ( sdbkv_key ( kv ) )		4364756	1					
ANR	4366396	Callee	strdup		4364756	0					
ANR	4366397	Identifier	strdup		4364756	0					
ANR	4366398	ArgumentList	sdbkv_key ( kv )		4364756	1					
ANR	4366399	Argument	sdbkv_key ( kv )		4364756	0					
ANR	4366400	CallExpression	sdbkv_key ( kv )		4364756	0					
ANR	4366401	Callee	sdbkv_key		4364756	0					
ANR	4366402	Identifier	sdbkv_key		4364756	0					
ANR	4366403	ArgumentList	kv		4364756	1					
ANR	4366404	Argument	kv		4364756	0					
ANR	4366405	Identifier	kv		4364756	0					
ANR	4366406	ExpressionStatement	r_cons_println ( name )	1263:6:35158:35179	4364756	2	True				
ANR	4366407	CallExpression	r_cons_println ( name )		4364756	0					
ANR	4366408	Callee	r_cons_println		4364756	0					
ANR	4366409	Identifier	r_cons_println		4364756	0					
ANR	4366410	ArgumentList	name		4364756	1					
ANR	4366411	Argument	name		4364756	0					
ANR	4366412	Identifier	name		4364756	0					
ANR	4366413	ExpressionStatement	free ( name )	1267:3:35202:35213	4364756	13	True				
ANR	4366414	CallExpression	free ( name )		4364756	0					
ANR	4366415	Callee	free		4364756	0					
ANR	4366416	Identifier	free		4364756	0					
ANR	4366417	ArgumentList	name		4364756	1					
ANR	4366418	Argument	name		4364756	0					
ANR	4366419	Identifier	name		4364756	0					
ANR	4366420	ExpressionStatement	ls_free ( l )	1268:3:35218:35229	4364756	14	True				
ANR	4366421	CallExpression	ls_free ( l )		4364756	0					
ANR	4366422	Callee	ls_free		4364756	0					
ANR	4366423	Identifier	ls_free		4364756	0					
ANR	4366424	ArgumentList	l		4364756	1					
ANR	4366425	Argument	l		4364756	0					
ANR	4366426	Identifier	l		4364756	0					
ANR	4366427	BreakStatement	break ;	1269:4:35235:35240	4364756	20	True				
ANR	4366428	ExpressionStatement	free ( name )	1271:2:35248:35259	4364756	7	True				
ANR	4366429	CallExpression	free ( name )		4364756	0					
ANR	4366430	Callee	free		4364756	0					
ANR	4366431	Identifier	free		4364756	0					
ANR	4366432	ArgumentList	name		4364756	1					
ANR	4366433	Argument	name		4364756	0					
ANR	4366434	Identifier	name		4364756	0					
ANR	4366435	IfStatement	if ( res )		4364756	8					
ANR	4366436	Condition	res	1272:6:35267:35269	4364756	0	True				
ANR	4366437	Identifier	res		4364756	0					
ANR	4366438	CompoundStatement		267:11:6858:6858	4364756	1					
ANR	4366439	ExpressionStatement	r_cons_println ( res )	1273:3:35277:35297	4364756	0	True				
ANR	4366440	CallExpression	r_cons_println ( res )		4364756	0					
ANR	4366441	Callee	r_cons_println		4364756	0					
ANR	4366442	Identifier	r_cons_println		4364756	0					
ANR	4366443	ArgumentList	res		4364756	1					
ANR	4366444	Argument	res		4364756	0					
ANR	4366445	Identifier	res		4364756	0					
ANR	4366446	ElseStatement	else		4364756	0					
ANR	4366447	IfStatement	if ( member_name )		4364756	0					
ANR	4366448	Condition	member_name	1274:13:35312:35322	4364756	0	True				
ANR	4366449	Identifier	member_name		4364756	0					
ANR	4366450	CompoundStatement		269:26:6911:6911	4364756	1					
ANR	4366451	ExpressionStatement	"eprintf ( ""Invalid enum member\\n"" )"	1275:3:35330:35363	4364756	0	True				
ANR	4366452	CallExpression	"eprintf ( ""Invalid enum member\\n"" )"		4364756	0					
ANR	4366453	Callee	eprintf		4364756	0					
ANR	4366454	Identifier	eprintf		4364756	0					
ANR	4366455	ArgumentList	"""Invalid enum member\\n"""		4364756	1					
ANR	4366456	Argument	"""Invalid enum member\\n"""		4364756	0					
ANR	4366457	PrimaryExpression	"""Invalid enum member\\n"""		4364756	0					
ANR	4366458	BreakStatement	break ;	1277:3:35372:35377	4364756	18	True				
ANR	4366459	Label	case ' ' :	1278:1:35380:35388	4364756	19	True				
ANR	4366460	ExpressionStatement	"showFormat ( core , input + 1 , 0 )"	1279:2:35392:35423	4364756	20	True				
ANR	4366461	CallExpression	"showFormat ( core , input + 1 , 0 )"		4364756	0					
ANR	4366462	Callee	showFormat		4364756	0					
ANR	4366463	Identifier	showFormat		4364756	0					
ANR	4366464	ArgumentList	core		4364756	1					
ANR	4366465	Argument	core		4364756	0					
ANR	4366466	Identifier	core		4364756	0					
ANR	4366467	Argument	input + 1		4364756	1					
ANR	4366468	AdditiveExpression	input + 1		4364756	0		+			
ANR	4366469	Identifier	input		4364756	0					
ANR	4366470	PrimaryExpression	1		4364756	1					
ANR	4366471	Argument	0		4364756	2					
ANR	4366472	PrimaryExpression	0		4364756	0					
ANR	4366473	BreakStatement	break ;	1280:2:35427:35432	4364756	21	True				
ANR	4366474	Label	case 'j' :	1282:1:35474:35482	4364756	22	True				
ANR	4366475	Label	case '*' :	1283:1:35493:35501	4364756	23	True				
ANR	4366476	Label	case 0 :	1284:1:35512:35518	4364756	24	True				
ANR	4366477	ExpressionStatement	"typesList ( core , input [ 0 ] )"	1285:2:35529:35555	4364756	25	True				
ANR	4366478	CallExpression	"typesList ( core , input [ 0 ] )"		4364756	0					
ANR	4366479	Callee	typesList		4364756	0					
ANR	4366480	Identifier	typesList		4364756	0					
ANR	4366481	ArgumentList	core		4364756	1					
ANR	4366482	Argument	core		4364756	0					
ANR	4366483	Identifier	core		4364756	0					
ANR	4366484	Argument	input [ 0 ]		4364756	1					
ANR	4366485	ArrayIndexing	input [ 0 ]		4364756	0					
ANR	4366486	Identifier	input		4364756	0					
ANR	4366487	PrimaryExpression	0		4364756	1					
ANR	4366488	BreakStatement	break ;	1286:2:35559:35564	4364756	26	True				
ANR	4366489	Label	case 'o' :	1287:1:35567:35575	4364756	27	True				
ANR	4366490	IfStatement	if ( input [ 1 ] == '?' )		4364756	28					
ANR	4366491	Condition	input [ 1 ] == '?'	1288:6:35591:35605	4364756	0	True				
ANR	4366492	EqualityExpression	input [ 1 ] == '?'		4364756	0		==			
ANR	4366493	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4366494	Identifier	input		4364756	0					
ANR	4366495	PrimaryExpression	1		4364756	1					
ANR	4366496	PrimaryExpression	'?'		4364756	1					
ANR	4366497	CompoundStatement		283:23:7194:7194	4364756	1					
ANR	4366498	ExpressionStatement	"r_core_cmd_help ( core , help_msg_to )"	1289:3:35613:35648	4364756	0	True				
ANR	4366499	CallExpression	"r_core_cmd_help ( core , help_msg_to )"		4364756	0					
ANR	4366500	Callee	r_core_cmd_help		4364756	0					
ANR	4366501	Identifier	r_core_cmd_help		4364756	0					
ANR	4366502	ArgumentList	core		4364756	1					
ANR	4366503	Argument	core		4364756	0					
ANR	4366504	Identifier	core		4364756	0					
ANR	4366505	Argument	help_msg_to		4364756	1					
ANR	4366506	Identifier	help_msg_to		4364756	0					
ANR	4366507	ElseStatement	else		4364756	0					
ANR	4366508	IfStatement	if ( ! r_sandbox_enable ( 0 ) )		4364756	0					
ANR	4366509	Condition	! r_sandbox_enable ( 0 )	1290:13:35663:35683	4364756	0	True				
ANR	4366510	UnaryOperationExpression	! r_sandbox_enable ( 0 )		4364756	0					
ANR	4366511	UnaryOperator	!		4364756	0					
ANR	4366512	CallExpression	r_sandbox_enable ( 0 )		4364756	1					
ANR	4366513	Callee	r_sandbox_enable		4364756	0					
ANR	4366514	Identifier	r_sandbox_enable		4364756	0					
ANR	4366515	ArgumentList	0		4364756	1					
ANR	4366516	Argument	0		4364756	0					
ANR	4366517	PrimaryExpression	0		4364756	0					
ANR	4366518	CompoundStatement		285:36:7272:7272	4364756	1					
ANR	4366519	IfStatement	if ( input [ 1 ] == ' ' )		4364756	0					
ANR	4366520	Condition	input [ 1 ] == ' '	1291:7:35695:35709	4364756	0	True				
ANR	4366521	EqualityExpression	input [ 1 ] == ' '		4364756	0		==			
ANR	4366522	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4366523	Identifier	input		4364756	0					
ANR	4366524	PrimaryExpression	1		4364756	1					
ANR	4366525	PrimaryExpression	' '		4364756	1					
ANR	4366526	CompoundStatement		289:4:7406:7427	4364756	1					
ANR	4366527	IdentifierDeclStatement	"const char * dir = r_config_get ( core -> config , ""dir.types"" ) ;"	1292:4:35718:35776	4364756	0	True				
ANR	4366528	IdentifierDecl	"* dir = r_config_get ( core -> config , ""dir.types"" )"		4364756	0					
ANR	4366529	IdentifierDeclType	const char *		4364756	0					
ANR	4366530	Identifier	dir		4364756	1					
ANR	4366531	AssignmentExpression	"* dir = r_config_get ( core -> config , ""dir.types"" )"		4364756	2		=			
ANR	4366532	Identifier	dir		4364756	0					
ANR	4366533	CallExpression	"r_config_get ( core -> config , ""dir.types"" )"		4364756	1					
ANR	4366534	Callee	r_config_get		4364756	0					
ANR	4366535	Identifier	r_config_get		4364756	0					
ANR	4366536	ArgumentList	core -> config		4364756	1					
ANR	4366537	Argument	core -> config		4364756	0					
ANR	4366538	PtrMemberAccess	core -> config		4364756	0					
ANR	4366539	Identifier	core		4364756	0					
ANR	4366540	Identifier	config		4364756	1					
ANR	4366541	Argument	"""dir.types"""		4364756	1					
ANR	4366542	PrimaryExpression	"""dir.types"""		4364756	0					
ANR	4366543	IdentifierDeclStatement	const char * filename = input + 2 ;	1293:4:35782:35814	4364756	1	True				
ANR	4366544	IdentifierDecl	* filename = input + 2		4364756	0					
ANR	4366545	IdentifierDeclType	const char *		4364756	0					
ANR	4366546	Identifier	filename		4364756	1					
ANR	4366547	AssignmentExpression	* filename = input + 2		4364756	2		=			
ANR	4366548	Identifier	filename		4364756	0					
ANR	4366549	AdditiveExpression	input + 2		4364756	1		+			
ANR	4366550	Identifier	input		4364756	0					
ANR	4366551	PrimaryExpression	2		4364756	1					
ANR	4366552	IdentifierDeclStatement	char * homefile = NULL ;	1294:4:35820:35841	4364756	2	True				
ANR	4366553	IdentifierDecl	* homefile = NULL		4364756	0					
ANR	4366554	IdentifierDeclType	char *		4364756	0					
ANR	4366555	Identifier	homefile		4364756	1					
ANR	4366556	AssignmentExpression	* homefile = NULL		4364756	2		=			
ANR	4366557	Identifier	NULL		4364756	0					
ANR	4366558	Identifier	NULL		4364756	1					
ANR	4366559	IfStatement	if ( * filename == '~' )		4364756	3					
ANR	4366560	Condition	* filename == '~'	1295:8:35851:35866	4364756	0	True				
ANR	4366561	EqualityExpression	* filename == '~'		4364756	0		==			
ANR	4366562	UnaryOperationExpression	* filename		4364756	0					
ANR	4366563	UnaryOperator	*		4364756	0					
ANR	4366564	Identifier	filename		4364756	1					
ANR	4366565	PrimaryExpression	'~'		4364756	1					
ANR	4366566	CompoundStatement		290:26:7455:7455	4364756	1					
ANR	4366567	IfStatement	if ( filename [ 1 ] && filename [ 2 ] )		4364756	0					
ANR	4366568	Condition	filename [ 1 ] && filename [ 2 ]	1296:9:35880:35905	4364756	0	True				
ANR	4366569	AndExpression	filename [ 1 ] && filename [ 2 ]		4364756	0		&&			
ANR	4366570	ArrayIndexing	filename [ 1 ]		4364756	0					
ANR	4366571	Identifier	filename		4364756	0					
ANR	4366572	PrimaryExpression	1		4364756	1					
ANR	4366573	ArrayIndexing	filename [ 2 ]		4364756	1					
ANR	4366574	Identifier	filename		4364756	0					
ANR	4366575	PrimaryExpression	2		4364756	1					
ANR	4366576	CompoundStatement		291:37:7494:7494	4364756	1					
ANR	4366577	ExpressionStatement	homefile = r_str_home ( filename + 2 )	1297:6:35916:35952	4364756	0	True				
ANR	4366578	AssignmentExpression	homefile = r_str_home ( filename + 2 )		4364756	0		=			
ANR	4366579	Identifier	homefile		4364756	0					
ANR	4366580	CallExpression	r_str_home ( filename + 2 )		4364756	1					
ANR	4366581	Callee	r_str_home		4364756	0					
ANR	4366582	Identifier	r_str_home		4364756	0					
ANR	4366583	ArgumentList	filename + 2		4364756	1					
ANR	4366584	Argument	filename + 2		4364756	0					
ANR	4366585	AdditiveExpression	filename + 2		4364756	0		+			
ANR	4366586	Identifier	filename		4364756	0					
ANR	4366587	PrimaryExpression	2		4364756	1					
ANR	4366588	ExpressionStatement	filename = homefile	1298:6:35960:35979	4364756	1	True				
ANR	4366589	AssignmentExpression	filename = homefile		4364756	0		=			
ANR	4366590	Identifier	filename		4364756	0					
ANR	4366591	Identifier	homefile		4364756	1					
ANR	4366592	IfStatement	"if ( ! strcmp ( filename , ""-"" ) )"		4364756	4					
ANR	4366593	Condition	"! strcmp ( filename , ""-"" )"	1301:8:36002:36024	4364756	0	True				
ANR	4366594	UnaryOperationExpression	"! strcmp ( filename , ""-"" )"		4364756	0					
ANR	4366595	UnaryOperator	!		4364756	0					
ANR	4366596	CallExpression	"strcmp ( filename , ""-"" )"		4364756	1					
ANR	4366597	Callee	strcmp		4364756	0					
ANR	4366598	Identifier	strcmp		4364756	0					
ANR	4366599	ArgumentList	filename		4364756	1					
ANR	4366600	Argument	filename		4364756	0					
ANR	4366601	Identifier	filename		4364756	0					
ANR	4366602	Argument	"""-"""		4364756	1					
ANR	4366603	PrimaryExpression	"""-"""		4364756	0					
ANR	4366604	CompoundStatement		297:5:7620:7663	4364756	1					
ANR	4366605	IdentifierDeclStatement	"char * tmp = r_core_editor ( core , ""*.h"" , """" ) ;"	1302:5:36034:36077	4364756	0	True				
ANR	4366606	IdentifierDecl	"* tmp = r_core_editor ( core , ""*.h"" , """" )"		4364756	0					
ANR	4366607	IdentifierDeclType	char *		4364756	0					
ANR	4366608	Identifier	tmp		4364756	1					
ANR	4366609	AssignmentExpression	"* tmp = r_core_editor ( core , ""*.h"" , """" )"		4364756	2		=			
ANR	4366610	Identifier	tmp		4364756	0					
ANR	4366611	CallExpression	"r_core_editor ( core , ""*.h"" , """" )"		4364756	1					
ANR	4366612	Callee	r_core_editor		4364756	0					
ANR	4366613	Identifier	r_core_editor		4364756	0					
ANR	4366614	ArgumentList	core		4364756	1					
ANR	4366615	Argument	core		4364756	0					
ANR	4366616	Identifier	core		4364756	0					
ANR	4366617	Argument	"""*.h"""		4364756	1					
ANR	4366618	PrimaryExpression	"""*.h"""		4364756	0					
ANR	4366619	Argument	""""""		4364756	2					
ANR	4366620	PrimaryExpression	""""""		4364756	0					
ANR	4366621	IfStatement	if ( tmp )		4364756	1					
ANR	4366622	Condition	tmp	1303:9:36088:36090	4364756	0	True				
ANR	4366623	Identifier	tmp		4364756	0					
ANR	4366624	CompoundStatement		300:6:7717:7775	4364756	1					
ANR	4366625	IdentifierDeclStatement	char * error_msg = NULL ;	1304:6:36101:36123	4364756	0	True				
ANR	4366626	IdentifierDecl	* error_msg = NULL		4364756	0					
ANR	4366627	IdentifierDeclType	char *		4364756	0					
ANR	4366628	Identifier	error_msg		4364756	1					
ANR	4366629	AssignmentExpression	* error_msg = NULL		4364756	2		=			
ANR	4366630	Identifier	NULL		4364756	0					
ANR	4366631	Identifier	NULL		4364756	1					
ANR	4366632	IdentifierDeclStatement	"char * out = r_parse_c_string ( core -> anal , tmp , & error_msg ) ;"	1305:6:36131:36189	4364756	1	True				
ANR	4366633	IdentifierDecl	"* out = r_parse_c_string ( core -> anal , tmp , & error_msg )"		4364756	0					
ANR	4366634	IdentifierDeclType	char *		4364756	0					
ANR	4366635	Identifier	out		4364756	1					
ANR	4366636	AssignmentExpression	"* out = r_parse_c_string ( core -> anal , tmp , & error_msg )"		4364756	2		=			
ANR	4366637	Identifier	out		4364756	0					
ANR	4366638	CallExpression	"r_parse_c_string ( core -> anal , tmp , & error_msg )"		4364756	1					
ANR	4366639	Callee	r_parse_c_string		4364756	0					
ANR	4366640	Identifier	r_parse_c_string		4364756	0					
ANR	4366641	ArgumentList	core -> anal		4364756	1					
ANR	4366642	Argument	core -> anal		4364756	0					
ANR	4366643	PtrMemberAccess	core -> anal		4364756	0					
ANR	4366644	Identifier	core		4364756	0					
ANR	4366645	Identifier	anal		4364756	1					
ANR	4366646	Argument	tmp		4364756	1					
ANR	4366647	Identifier	tmp		4364756	0					
ANR	4366648	Argument	& error_msg		4364756	2					
ANR	4366649	UnaryOperationExpression	& error_msg		4364756	0					
ANR	4366650	UnaryOperator	&		4364756	0					
ANR	4366651	Identifier	error_msg		4364756	1					
ANR	4366652	IfStatement	if ( out )		4364756	2					
ANR	4366653	Condition	out	1306:10:36201:36203	4364756	0	True				
ANR	4366654	Identifier	out		4364756	0					
ANR	4366655	CompoundStatement		301:15:7792:7792	4364756	1					
ANR	4366656	ExpressionStatement	"r_anal_save_parsed_type ( core -> anal , out )"	1308:7:36247:36288	4364756	0	True				
ANR	4366657	CallExpression	"r_anal_save_parsed_type ( core -> anal , out )"		4364756	0					
ANR	4366658	Callee	r_anal_save_parsed_type		4364756	0					
ANR	4366659	Identifier	r_anal_save_parsed_type		4364756	0					
ANR	4366660	ArgumentList	core -> anal		4364756	1					
ANR	4366661	Argument	core -> anal		4364756	0					
ANR	4366662	PtrMemberAccess	core -> anal		4364756	0					
ANR	4366663	Identifier	core		4364756	0					
ANR	4366664	Identifier	anal		4364756	1					
ANR	4366665	Argument	out		4364756	1					
ANR	4366666	Identifier	out		4364756	0					
ANR	4366667	ExpressionStatement	free ( out )	1309:7:36297:36307	4364756	1	True				
ANR	4366668	CallExpression	free ( out )		4364756	0					
ANR	4366669	Callee	free		4364756	0					
ANR	4366670	Identifier	free		4364756	0					
ANR	4366671	ArgumentList	out		4364756	1					
ANR	4366672	Argument	out		4364756	0					
ANR	4366673	Identifier	out		4364756	0					
ANR	4366674	IfStatement	if ( error_msg )		4364756	3					
ANR	4366675	Condition	error_msg	1311:10:36327:36335	4364756	0	True				
ANR	4366676	Identifier	error_msg		4364756	0					
ANR	4366677	CompoundStatement		306:21:7924:7924	4364756	1					
ANR	4366678	ExpressionStatement	"fprintf ( stderr , ""%s"" , error_msg )"	1312:7:36347:36380	4364756	0	True				
ANR	4366679	CallExpression	"fprintf ( stderr , ""%s"" , error_msg )"		4364756	0					
ANR	4366680	Callee	fprintf		4364756	0					
ANR	4366681	Identifier	fprintf		4364756	0					
ANR	4366682	ArgumentList	stderr		4364756	1					
ANR	4366683	Argument	stderr		4364756	0					
ANR	4366684	Identifier	stderr		4364756	0					
ANR	4366685	Argument	"""%s"""		4364756	1					
ANR	4366686	PrimaryExpression	"""%s"""		4364756	0					
ANR	4366687	Argument	error_msg		4364756	2					
ANR	4366688	Identifier	error_msg		4364756	0					
ANR	4366689	ExpressionStatement	free ( error_msg )	1313:7:36389:36405	4364756	1	True				
ANR	4366690	CallExpression	free ( error_msg )		4364756	0					
ANR	4366691	Callee	free		4364756	0					
ANR	4366692	Identifier	free		4364756	0					
ANR	4366693	ArgumentList	error_msg		4364756	1					
ANR	4366694	Argument	error_msg		4364756	0					
ANR	4366695	Identifier	error_msg		4364756	0					
ANR	4366696	ExpressionStatement	free ( tmp )	1315:6:36421:36431	4364756	4	True				
ANR	4366697	CallExpression	free ( tmp )		4364756	0					
ANR	4366698	Callee	free		4364756	0					
ANR	4366699	Identifier	free		4364756	0					
ANR	4366700	ArgumentList	tmp		4364756	1					
ANR	4366701	Argument	tmp		4364756	0					
ANR	4366702	Identifier	tmp		4364756	0					
ANR	4366703	ElseStatement	else		4364756	0					
ANR	4366704	CompoundStatement		314:5:8073:8139	4364756	0					
ANR	4366705	IdentifierDeclStatement	char * error_msg = NULL ;	1318:5:36458:36480	4364756	0	True				
ANR	4366706	IdentifierDecl	* error_msg = NULL		4364756	0					
ANR	4366707	IdentifierDeclType	char *		4364756	0					
ANR	4366708	Identifier	error_msg		4364756	1					
ANR	4366709	AssignmentExpression	* error_msg = NULL		4364756	2		=			
ANR	4366710	Identifier	NULL		4364756	0					
ANR	4366711	Identifier	NULL		4364756	1					
ANR	4366712	IdentifierDeclStatement	"char * out = r_parse_c_file ( core -> anal , filename , dir , & error_msg ) ;"	1319:5:36487:36553	4364756	1	True				
ANR	4366713	IdentifierDecl	"* out = r_parse_c_file ( core -> anal , filename , dir , & error_msg )"		4364756	0					
ANR	4366714	IdentifierDeclType	char *		4364756	0					
ANR	4366715	Identifier	out		4364756	1					
ANR	4366716	AssignmentExpression	"* out = r_parse_c_file ( core -> anal , filename , dir , & error_msg )"		4364756	2		=			
ANR	4366717	Identifier	out		4364756	0					
ANR	4366718	CallExpression	"r_parse_c_file ( core -> anal , filename , dir , & error_msg )"		4364756	1					
ANR	4366719	Callee	r_parse_c_file		4364756	0					
ANR	4366720	Identifier	r_parse_c_file		4364756	0					
ANR	4366721	ArgumentList	core -> anal		4364756	1					
ANR	4366722	Argument	core -> anal		4364756	0					
ANR	4366723	PtrMemberAccess	core -> anal		4364756	0					
ANR	4366724	Identifier	core		4364756	0					
ANR	4366725	Identifier	anal		4364756	1					
ANR	4366726	Argument	filename		4364756	1					
ANR	4366727	Identifier	filename		4364756	0					
ANR	4366728	Argument	dir		4364756	2					
ANR	4366729	Identifier	dir		4364756	0					
ANR	4366730	Argument	& error_msg		4364756	3					
ANR	4366731	UnaryOperationExpression	& error_msg		4364756	0					
ANR	4366732	UnaryOperator	&		4364756	0					
ANR	4366733	Identifier	error_msg		4364756	1					
ANR	4366734	IfStatement	if ( out )		4364756	2					
ANR	4366735	Condition	out	1320:9:36564:36566	4364756	0	True				
ANR	4366736	Identifier	out		4364756	0					
ANR	4366737	CompoundStatement		315:14:8155:8155	4364756	1					
ANR	4366738	ExpressionStatement	"r_anal_save_parsed_type ( core -> anal , out )"	1322:6:36606:36647	4364756	0	True				
ANR	4366739	CallExpression	"r_anal_save_parsed_type ( core -> anal , out )"		4364756	0					
ANR	4366740	Callee	r_anal_save_parsed_type		4364756	0					
ANR	4366741	Identifier	r_anal_save_parsed_type		4364756	0					
ANR	4366742	ArgumentList	core -> anal		4364756	1					
ANR	4366743	Argument	core -> anal		4364756	0					
ANR	4366744	PtrMemberAccess	core -> anal		4364756	0					
ANR	4366745	Identifier	core		4364756	0					
ANR	4366746	Identifier	anal		4364756	1					
ANR	4366747	Argument	out		4364756	1					
ANR	4366748	Identifier	out		4364756	0					
ANR	4366749	ExpressionStatement	free ( out )	1323:6:36655:36665	4364756	1	True				
ANR	4366750	CallExpression	free ( out )		4364756	0					
ANR	4366751	Callee	free		4364756	0					
ANR	4366752	Identifier	free		4364756	0					
ANR	4366753	ArgumentList	out		4364756	1					
ANR	4366754	Argument	out		4364756	0					
ANR	4366755	Identifier	out		4364756	0					
ANR	4366756	IfStatement	if ( error_msg )		4364756	3					
ANR	4366757	Condition	error_msg	1325:9:36683:36691	4364756	0	True				
ANR	4366758	Identifier	error_msg		4364756	0					
ANR	4366759	CompoundStatement		320:20:8280:8280	4364756	1					
ANR	4366760	ExpressionStatement	"fprintf ( stderr , ""%s"" , error_msg )"	1326:6:36702:36735	4364756	0	True				
ANR	4366761	CallExpression	"fprintf ( stderr , ""%s"" , error_msg )"		4364756	0					
ANR	4366762	Callee	fprintf		4364756	0					
ANR	4366763	Identifier	fprintf		4364756	0					
ANR	4366764	ArgumentList	stderr		4364756	1					
ANR	4366765	Argument	stderr		4364756	0					
ANR	4366766	Identifier	stderr		4364756	0					
ANR	4366767	Argument	"""%s"""		4364756	1					
ANR	4366768	PrimaryExpression	"""%s"""		4364756	0					
ANR	4366769	Argument	error_msg		4364756	2					
ANR	4366770	Identifier	error_msg		4364756	0					
ANR	4366771	ExpressionStatement	free ( error_msg )	1327:6:36743:36759	4364756	1	True				
ANR	4366772	CallExpression	free ( error_msg )		4364756	0					
ANR	4366773	Callee	free		4364756	0					
ANR	4366774	Identifier	free		4364756	0					
ANR	4366775	ArgumentList	error_msg		4364756	1					
ANR	4366776	Argument	error_msg		4364756	0					
ANR	4366777	Identifier	error_msg		4364756	0					
ANR	4366778	ExpressionStatement	free ( homefile )	1330:4:36778:36793	4364756	5	True				
ANR	4366779	CallExpression	free ( homefile )		4364756	0					
ANR	4366780	Callee	free		4364756	0					
ANR	4366781	Identifier	free		4364756	0					
ANR	4366782	ArgumentList	homefile		4364756	1					
ANR	4366783	Argument	homefile		4364756	0					
ANR	4366784	Identifier	homefile		4364756	0					
ANR	4366785	ElseStatement	else		4364756	0					
ANR	4366786	IfStatement	if ( input [ 1 ] == 's' )		4364756	0					
ANR	4366787	Condition	input [ 1 ] == 's'	1331:14:36809:36823	4364756	0	True				
ANR	4366788	EqualityExpression	input [ 1 ] == 's'		4364756	0		==			
ANR	4366789	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4366790	Identifier	input		4364756	0					
ANR	4366791	PrimaryExpression	1		4364756	1					
ANR	4366792	PrimaryExpression	's'		4364756	1					
ANR	4366793	CompoundStatement		327:4:8418:8448	4364756	1					
ANR	4366794	IdentifierDeclStatement	const char * dbpath = input + 3 ;	1332:4:36832:36862	4364756	0	True				
ANR	4366795	IdentifierDecl	* dbpath = input + 3		4364756	0					
ANR	4366796	IdentifierDeclType	const char *		4364756	0					
ANR	4366797	Identifier	dbpath		4364756	1					
ANR	4366798	AssignmentExpression	* dbpath = input + 3		4364756	2		=			
ANR	4366799	Identifier	dbpath		4364756	0					
ANR	4366800	AdditiveExpression	input + 3		4364756	1		+			
ANR	4366801	Identifier	input		4364756	0					
ANR	4366802	PrimaryExpression	3		4364756	1					
ANR	4366803	IfStatement	if ( r_file_exists ( dbpath ) )		4364756	1					
ANR	4366804	Condition	r_file_exists ( dbpath )	1333:8:36872:36893	4364756	0	True				
ANR	4366805	CallExpression	r_file_exists ( dbpath )		4364756	0					
ANR	4366806	Callee	r_file_exists		4364756	0					
ANR	4366807	Identifier	r_file_exists		4364756	0					
ANR	4366808	ArgumentList	dbpath		4364756	1					
ANR	4366809	Argument	dbpath		4364756	0					
ANR	4366810	Identifier	dbpath		4364756	0					
ANR	4366811	CompoundStatement		329:5:8489:8525	4364756	1					
ANR	4366812	IdentifierDeclStatement	"Sdb * db_tmp = sdb_new ( 0 , dbpath , 0 ) ;"	1334:5:36903:36939	4364756	0	True				
ANR	4366813	IdentifierDecl	"* db_tmp = sdb_new ( 0 , dbpath , 0 )"		4364756	0					
ANR	4366814	IdentifierDeclType	Sdb *		4364756	0					
ANR	4366815	Identifier	db_tmp		4364756	1					
ANR	4366816	AssignmentExpression	"* db_tmp = sdb_new ( 0 , dbpath , 0 )"		4364756	2		=			
ANR	4366817	Identifier	db_tmp		4364756	0					
ANR	4366818	CallExpression	"sdb_new ( 0 , dbpath , 0 )"		4364756	1					
ANR	4366819	Callee	sdb_new		4364756	0					
ANR	4366820	Identifier	sdb_new		4364756	0					
ANR	4366821	ArgumentList	0		4364756	1					
ANR	4366822	Argument	0		4364756	0					
ANR	4366823	PrimaryExpression	0		4364756	0					
ANR	4366824	Argument	dbpath		4364756	1					
ANR	4366825	Identifier	dbpath		4364756	0					
ANR	4366826	Argument	0		4364756	2					
ANR	4366827	PrimaryExpression	0		4364756	0					
ANR	4366828	ExpressionStatement	"sdb_merge ( TDB , db_tmp )"	1335:5:36946:36969	4364756	1	True				
ANR	4366829	CallExpression	"sdb_merge ( TDB , db_tmp )"		4364756	0					
ANR	4366830	Callee	sdb_merge		4364756	0					
ANR	4366831	Identifier	sdb_merge		4364756	0					
ANR	4366832	ArgumentList	TDB		4364756	1					
ANR	4366833	Argument	TDB		4364756	0					
ANR	4366834	Identifier	TDB		4364756	0					
ANR	4366835	Argument	db_tmp		4364756	1					
ANR	4366836	Identifier	db_tmp		4364756	0					
ANR	4366837	ExpressionStatement	sdb_close ( db_tmp )	1336:5:36976:36994	4364756	2	True				
ANR	4366838	CallExpression	sdb_close ( db_tmp )		4364756	0					
ANR	4366839	Callee	sdb_close		4364756	0					
ANR	4366840	Identifier	sdb_close		4364756	0					
ANR	4366841	ArgumentList	db_tmp		4364756	1					
ANR	4366842	Argument	db_tmp		4364756	0					
ANR	4366843	Identifier	db_tmp		4364756	0					
ANR	4366844	ExpressionStatement	sdb_free ( db_tmp )	1337:5:37001:37018	4364756	3	True				
ANR	4366845	CallExpression	sdb_free ( db_tmp )		4364756	0					
ANR	4366846	Callee	sdb_free		4364756	0					
ANR	4366847	Identifier	sdb_free		4364756	0					
ANR	4366848	ArgumentList	db_tmp		4364756	1					
ANR	4366849	Argument	db_tmp		4364756	0					
ANR	4366850	Identifier	db_tmp		4364756	0					
ANR	4366851	ElseStatement	else		4364756	0					
ANR	4366852	IfStatement	if ( input [ 1 ] == 'e' )		4364756	0					
ANR	4366853	Condition	input [ 1 ] == 'e'	1339:15:37041:37055	4364756	0	True				
ANR	4366854	EqualityExpression	input [ 1 ] == 'e'		4364756	0		==			
ANR	4366855	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4366856	Identifier	input		4364756	0					
ANR	4366857	PrimaryExpression	1		4364756	1					
ANR	4366858	PrimaryExpression	'e'		4364756	1					
ANR	4366859	CompoundStatement		336:4:8720:8764	4364756	1					
ANR	4366860	IdentifierDeclStatement	"char * str = r_core_cmd_strf ( core , ""tc %s"" , input + 2 ) ;"	1340:4:37073:37128	4364756	0	True				
ANR	4366861	IdentifierDecl	"* str = r_core_cmd_strf ( core , ""tc %s"" , input + 2 )"		4364756	0					
ANR	4366862	IdentifierDeclType	char *		4364756	0					
ANR	4366863	Identifier	str		4364756	1					
ANR	4366864	AssignmentExpression	"* str = r_core_cmd_strf ( core , ""tc %s"" , input + 2 )"		4364756	2		=			
ANR	4366865	Identifier	str		4364756	0					
ANR	4366866	CallExpression	"r_core_cmd_strf ( core , ""tc %s"" , input + 2 )"		4364756	1					
ANR	4366867	Callee	r_core_cmd_strf		4364756	0					
ANR	4366868	Identifier	r_core_cmd_strf		4364756	0					
ANR	4366869	ArgumentList	core		4364756	1					
ANR	4366870	Argument	core		4364756	0					
ANR	4366871	Identifier	core		4364756	0					
ANR	4366872	Argument	"""tc %s"""		4364756	1					
ANR	4366873	PrimaryExpression	"""tc %s"""		4364756	0					
ANR	4366874	Argument	input + 2		4364756	2					
ANR	4366875	AdditiveExpression	input + 2		4364756	0		+			
ANR	4366876	Identifier	input		4364756	0					
ANR	4366877	PrimaryExpression	2		4364756	1					
ANR	4366878	IdentifierDeclStatement	"char * tmp = r_core_editor ( core , ""*.h"" , str ) ;"	1341:4:37134:37178	4364756	1	True				
ANR	4366879	IdentifierDecl	"* tmp = r_core_editor ( core , ""*.h"" , str )"		4364756	0					
ANR	4366880	IdentifierDeclType	char *		4364756	0					
ANR	4366881	Identifier	tmp		4364756	1					
ANR	4366882	AssignmentExpression	"* tmp = r_core_editor ( core , ""*.h"" , str )"		4364756	2		=			
ANR	4366883	Identifier	tmp		4364756	0					
ANR	4366884	CallExpression	"r_core_editor ( core , ""*.h"" , str )"		4364756	1					
ANR	4366885	Callee	r_core_editor		4364756	0					
ANR	4366886	Identifier	r_core_editor		4364756	0					
ANR	4366887	ArgumentList	core		4364756	1					
ANR	4366888	Argument	core		4364756	0					
ANR	4366889	Identifier	core		4364756	0					
ANR	4366890	Argument	"""*.h"""		4364756	1					
ANR	4366891	PrimaryExpression	"""*.h"""		4364756	0					
ANR	4366892	Argument	str		4364756	2					
ANR	4366893	Identifier	str		4364756	0					
ANR	4366894	IfStatement	if ( tmp )		4364756	2					
ANR	4366895	Condition	tmp	1342:8:37188:37190	4364756	0	True				
ANR	4366896	Identifier	tmp		4364756	0					
ANR	4366897	CompoundStatement		339:5:8815:8873	4364756	1					
ANR	4366898	IdentifierDeclStatement	char * error_msg = NULL ;	1343:5:37200:37222	4364756	0	True				
ANR	4366899	IdentifierDecl	* error_msg = NULL		4364756	0					
ANR	4366900	IdentifierDeclType	char *		4364756	0					
ANR	4366901	Identifier	error_msg		4364756	1					
ANR	4366902	AssignmentExpression	* error_msg = NULL		4364756	2		=			
ANR	4366903	Identifier	NULL		4364756	0					
ANR	4366904	Identifier	NULL		4364756	1					
ANR	4366905	IdentifierDeclStatement	"char * out = r_parse_c_string ( core -> anal , tmp , & error_msg ) ;"	1344:5:37229:37287	4364756	1	True				
ANR	4366906	IdentifierDecl	"* out = r_parse_c_string ( core -> anal , tmp , & error_msg )"		4364756	0					
ANR	4366907	IdentifierDeclType	char *		4364756	0					
ANR	4366908	Identifier	out		4364756	1					
ANR	4366909	AssignmentExpression	"* out = r_parse_c_string ( core -> anal , tmp , & error_msg )"		4364756	2		=			
ANR	4366910	Identifier	out		4364756	0					
ANR	4366911	CallExpression	"r_parse_c_string ( core -> anal , tmp , & error_msg )"		4364756	1					
ANR	4366912	Callee	r_parse_c_string		4364756	0					
ANR	4366913	Identifier	r_parse_c_string		4364756	0					
ANR	4366914	ArgumentList	core -> anal		4364756	1					
ANR	4366915	Argument	core -> anal		4364756	0					
ANR	4366916	PtrMemberAccess	core -> anal		4364756	0					
ANR	4366917	Identifier	core		4364756	0					
ANR	4366918	Identifier	anal		4364756	1					
ANR	4366919	Argument	tmp		4364756	1					
ANR	4366920	Identifier	tmp		4364756	0					
ANR	4366921	Argument	& error_msg		4364756	2					
ANR	4366922	UnaryOperationExpression	& error_msg		4364756	0					
ANR	4366923	UnaryOperator	&		4364756	0					
ANR	4366924	Identifier	error_msg		4364756	1					
ANR	4366925	IfStatement	if ( out )		4364756	2					
ANR	4366926	Condition	out	1345:9:37298:37300	4364756	0	True				
ANR	4366927	Identifier	out		4364756	0					
ANR	4366928	CompoundStatement		340:14:8889:8889	4364756	1					
ANR	4366929	ExpressionStatement	sdb_reset ( TDB )	1347:6:37368:37383	4364756	0	True				
ANR	4366930	CallExpression	sdb_reset ( TDB )		4364756	0					
ANR	4366931	Callee	sdb_reset		4364756	0					
ANR	4366932	Identifier	sdb_reset		4364756	0					
ANR	4366933	ArgumentList	TDB		4364756	1					
ANR	4366934	Argument	TDB		4364756	0					
ANR	4366935	Identifier	TDB		4364756	0					
ANR	4366936	ExpressionStatement	r_parse_c_reset ( core -> parser )	1348:6:37391:37421	4364756	1	True				
ANR	4366937	CallExpression	r_parse_c_reset ( core -> parser )		4364756	0					
ANR	4366938	Callee	r_parse_c_reset		4364756	0					
ANR	4366939	Identifier	r_parse_c_reset		4364756	0					
ANR	4366940	ArgumentList	core -> parser		4364756	1					
ANR	4366941	Argument	core -> parser		4364756	0					
ANR	4366942	PtrMemberAccess	core -> parser		4364756	0					
ANR	4366943	Identifier	core		4364756	0					
ANR	4366944	Identifier	parser		4364756	1					
ANR	4366945	ExpressionStatement	"r_anal_save_parsed_type ( core -> anal , out )"	1349:6:37429:37470	4364756	2	True				
ANR	4366946	CallExpression	"r_anal_save_parsed_type ( core -> anal , out )"		4364756	0					
ANR	4366947	Callee	r_anal_save_parsed_type		4364756	0					
ANR	4366948	Identifier	r_anal_save_parsed_type		4364756	0					
ANR	4366949	ArgumentList	core -> anal		4364756	1					
ANR	4366950	Argument	core -> anal		4364756	0					
ANR	4366951	PtrMemberAccess	core -> anal		4364756	0					
ANR	4366952	Identifier	core		4364756	0					
ANR	4366953	Identifier	anal		4364756	1					
ANR	4366954	Argument	out		4364756	1					
ANR	4366955	Identifier	out		4364756	0					
ANR	4366956	ExpressionStatement	free ( out )	1350:6:37478:37488	4364756	3	True				
ANR	4366957	CallExpression	free ( out )		4364756	0					
ANR	4366958	Callee	free		4364756	0					
ANR	4366959	Identifier	free		4364756	0					
ANR	4366960	ArgumentList	out		4364756	1					
ANR	4366961	Argument	out		4364756	0					
ANR	4366962	Identifier	out		4364756	0					
ANR	4366963	IfStatement	if ( error_msg )		4364756	3					
ANR	4366964	Condition	error_msg	1352:9:37506:37514	4364756	0	True				
ANR	4366965	Identifier	error_msg		4364756	0					
ANR	4366966	CompoundStatement		347:20:9103:9103	4364756	1					
ANR	4366967	ExpressionStatement	"eprintf ( ""%s\\n"" , error_msg )"	1353:6:37525:37552	4364756	0	True				
ANR	4366968	CallExpression	"eprintf ( ""%s\\n"" , error_msg )"		4364756	0					
ANR	4366969	Callee	eprintf		4364756	0					
ANR	4366970	Identifier	eprintf		4364756	0					
ANR	4366971	ArgumentList	"""%s\\n"""		4364756	1					
ANR	4366972	Argument	"""%s\\n"""		4364756	0					
ANR	4366973	PrimaryExpression	"""%s\\n"""		4364756	0					
ANR	4366974	Argument	error_msg		4364756	1					
ANR	4366975	Identifier	error_msg		4364756	0					
ANR	4366976	ExpressionStatement	free ( error_msg )	1354:6:37560:37576	4364756	1	True				
ANR	4366977	CallExpression	free ( error_msg )		4364756	0					
ANR	4366978	Callee	free		4364756	0					
ANR	4366979	Identifier	free		4364756	0					
ANR	4366980	ArgumentList	error_msg		4364756	1					
ANR	4366981	Argument	error_msg		4364756	0					
ANR	4366982	Identifier	error_msg		4364756	0					
ANR	4366983	ExpressionStatement	free ( tmp )	1356:5:37590:37600	4364756	4	True				
ANR	4366984	CallExpression	free ( tmp )		4364756	0					
ANR	4366985	Callee	free		4364756	0					
ANR	4366986	Identifier	free		4364756	0					
ANR	4366987	ArgumentList	tmp		4364756	1					
ANR	4366988	Argument	tmp		4364756	0					
ANR	4366989	Identifier	tmp		4364756	0					
ANR	4366990	ExpressionStatement	free ( str )	1358:4:37612:37622	4364756	3	True				
ANR	4366991	CallExpression	free ( str )		4364756	0					
ANR	4366992	Callee	free		4364756	0					
ANR	4366993	Identifier	free		4364756	0					
ANR	4366994	ArgumentList	str		4364756	1					
ANR	4366995	Argument	str		4364756	0					
ANR	4366996	Identifier	str		4364756	0					
ANR	4366997	ElseStatement	else		4364756	0					
ANR	4366998	CompoundStatement		355:9:9224:9224	4364756	0					
ANR	4366999	ExpressionStatement	"eprintf ( ""Sandbox: system call disabled\\n"" )"	1361:3:37643:37686	4364756	0	True				
ANR	4367000	CallExpression	"eprintf ( ""Sandbox: system call disabled\\n"" )"		4364756	0					
ANR	4367001	Callee	eprintf		4364756	0					
ANR	4367002	Identifier	eprintf		4364756	0					
ANR	4367003	ArgumentList	"""Sandbox: system call disabled\\n"""		4364756	1					
ANR	4367004	Argument	"""Sandbox: system call disabled\\n"""		4364756	0					
ANR	4367005	PrimaryExpression	"""Sandbox: system call disabled\\n"""		4364756	0					
ANR	4367006	BreakStatement	break ;	1363:2:37694:37699	4364756	29	True				
ANR	4367007	Label	case 'd' :	1365:1:37766:37774	4364756	30	True				
ANR	4367008	IfStatement	if ( input [ 1 ] == '?' )		4364756	31					
ANR	4367009	Condition	input [ 1 ] == '?'	1366:6:37790:37804	4364756	0	True				
ANR	4367010	EqualityExpression	input [ 1 ] == '?'		4364756	0		==			
ANR	4367011	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4367012	Identifier	input		4364756	0					
ANR	4367013	PrimaryExpression	1		4364756	1					
ANR	4367014	PrimaryExpression	'?'		4364756	1					
ANR	4367015	CompoundStatement		361:23:9393:9393	4364756	1					
ANR	4367016	ExpressionStatement	"r_core_cmd_help ( core , help_msg_td )"	1368:3:37859:37894	4364756	0	True				
ANR	4367017	CallExpression	"r_core_cmd_help ( core , help_msg_td )"		4364756	0					
ANR	4367018	Callee	r_core_cmd_help		4364756	0					
ANR	4367019	Identifier	r_core_cmd_help		4364756	0					
ANR	4367020	ArgumentList	core		4364756	1					
ANR	4367021	Argument	core		4364756	0					
ANR	4367022	Identifier	core		4364756	0					
ANR	4367023	Argument	help_msg_td		4364756	1					
ANR	4367024	Identifier	help_msg_td		4364756	0					
ANR	4367025	Statement	r_cons_printf	1369:3:37899:37911	4364756	1	True				
ANR	4367026	Statement	(	1369:17:37913:37913	4364756	2	True				
ANR	4367027	Statement	"""Note: The td command should be put between double quotes\\n"""	1369:18:37914:37973	4364756	3	True				
ANR	4367028	Statement	"""Example: \\""td struct foo {int bar;int cow;};\\"""""	1370:4:37979:38026	4364756	4	True				
ANR	4367029	Statement	"""\\nt"""	1371:4:38032:38036	4364756	5	True				
ANR	4367030	Statement	)	1371:9:38037:38037	4364756	6	True				
ANR	4367031	ExpressionStatement		1371:10:38038:38038	4364756	7	True				
ANR	4367032	ElseStatement	else		4364756	0					
ANR	4367033	IfStatement	if ( input [ 1 ] == ' ' )		4364756	0					
ANR	4367034	Condition	input [ 1 ] == ' '	1373:13:38054:38068	4364756	0	True				
ANR	4367035	EqualityExpression	input [ 1 ] == ' '		4364756	0		==			
ANR	4367036	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4367037	Identifier	input		4364756	0					
ANR	4367038	PrimaryExpression	1		4364756	1					
ANR	4367039	PrimaryExpression	' '		4364756	1					
ANR	4367040	CompoundStatement		374:3:9766:9824	4364756	1					
ANR	4367041	IdentifierDeclStatement	"char * tmp = r_str_newf ( ""%s;"" , input + 2 ) ;"	1374:3:38076:38117	4364756	0	True				
ANR	4367042	IdentifierDecl	"* tmp = r_str_newf ( ""%s;"" , input + 2 )"		4364756	0					
ANR	4367043	IdentifierDeclType	char *		4364756	0					
ANR	4367044	Identifier	tmp		4364756	1					
ANR	4367045	AssignmentExpression	"* tmp = r_str_newf ( ""%s;"" , input + 2 )"		4364756	2		=			
ANR	4367046	Identifier	tmp		4364756	0					
ANR	4367047	CallExpression	"r_str_newf ( ""%s;"" , input + 2 )"		4364756	1					
ANR	4367048	Callee	r_str_newf		4364756	0					
ANR	4367049	Identifier	r_str_newf		4364756	0					
ANR	4367050	ArgumentList	"""%s;"""		4364756	1					
ANR	4367051	Argument	"""%s;"""		4364756	0					
ANR	4367052	PrimaryExpression	"""%s;"""		4364756	0					
ANR	4367053	Argument	input + 2		4364756	1					
ANR	4367054	AdditiveExpression	input + 2		4364756	0		+			
ANR	4367055	Identifier	input		4364756	0					
ANR	4367056	PrimaryExpression	2		4364756	1					
ANR	4367057	IfStatement	if ( ! tmp )		4364756	1					
ANR	4367058	Condition	! tmp	1375:7:38126:38129	4364756	0	True				
ANR	4367059	UnaryOperationExpression	! tmp		4364756	0					
ANR	4367060	UnaryOperator	!		4364756	0					
ANR	4367061	Identifier	tmp		4364756	1					
ANR	4367062	CompoundStatement		370:13:9718:9718	4364756	1					
ANR	4367063	BreakStatement	break ;	1376:4:38138:38143	4364756	0	True				
ANR	4367064	IdentifierDeclStatement	char * error_msg = NULL ;	1378:3:38153:38175	4364756	2	True				
ANR	4367065	IdentifierDecl	* error_msg = NULL		4364756	0					
ANR	4367066	IdentifierDeclType	char *		4364756	0					
ANR	4367067	Identifier	error_msg		4364756	1					
ANR	4367068	AssignmentExpression	* error_msg = NULL		4364756	2		=			
ANR	4367069	Identifier	NULL		4364756	0					
ANR	4367070	Identifier	NULL		4364756	1					
ANR	4367071	IdentifierDeclStatement	"char * out = r_parse_c_string ( core -> anal , tmp , & error_msg ) ;"	1379:3:38180:38238	4364756	3	True				
ANR	4367072	IdentifierDecl	"* out = r_parse_c_string ( core -> anal , tmp , & error_msg )"		4364756	0					
ANR	4367073	IdentifierDeclType	char *		4364756	0					
ANR	4367074	Identifier	out		4364756	1					
ANR	4367075	AssignmentExpression	"* out = r_parse_c_string ( core -> anal , tmp , & error_msg )"		4364756	2		=			
ANR	4367076	Identifier	out		4364756	0					
ANR	4367077	CallExpression	"r_parse_c_string ( core -> anal , tmp , & error_msg )"		4364756	1					
ANR	4367078	Callee	r_parse_c_string		4364756	0					
ANR	4367079	Identifier	r_parse_c_string		4364756	0					
ANR	4367080	ArgumentList	core -> anal		4364756	1					
ANR	4367081	Argument	core -> anal		4364756	0					
ANR	4367082	PtrMemberAccess	core -> anal		4364756	0					
ANR	4367083	Identifier	core		4364756	0					
ANR	4367084	Identifier	anal		4364756	1					
ANR	4367085	Argument	tmp		4364756	1					
ANR	4367086	Identifier	tmp		4364756	0					
ANR	4367087	Argument	& error_msg		4364756	2					
ANR	4367088	UnaryOperationExpression	& error_msg		4364756	0					
ANR	4367089	UnaryOperator	&		4364756	0					
ANR	4367090	Identifier	error_msg		4364756	1					
ANR	4367091	ExpressionStatement	free ( tmp )	1380:3:38243:38253	4364756	4	True				
ANR	4367092	CallExpression	free ( tmp )		4364756	0					
ANR	4367093	Callee	free		4364756	0					
ANR	4367094	Identifier	free		4364756	0					
ANR	4367095	ArgumentList	tmp		4364756	1					
ANR	4367096	Argument	tmp		4364756	0					
ANR	4367097	Identifier	tmp		4364756	0					
ANR	4367098	IfStatement	if ( out )		4364756	5					
ANR	4367099	Condition	out	1381:7:38262:38264	4364756	0	True				
ANR	4367100	Identifier	out		4364756	0					
ANR	4367101	CompoundStatement		376:12:9853:9853	4364756	1					
ANR	4367102	ExpressionStatement	"r_anal_save_parsed_type ( core -> anal , out )"	1382:4:38273:38314	4364756	0	True				
ANR	4367103	CallExpression	"r_anal_save_parsed_type ( core -> anal , out )"		4364756	0					
ANR	4367104	Callee	r_anal_save_parsed_type		4364756	0					
ANR	4367105	Identifier	r_anal_save_parsed_type		4364756	0					
ANR	4367106	ArgumentList	core -> anal		4364756	1					
ANR	4367107	Argument	core -> anal		4364756	0					
ANR	4367108	PtrMemberAccess	core -> anal		4364756	0					
ANR	4367109	Identifier	core		4364756	0					
ANR	4367110	Identifier	anal		4364756	1					
ANR	4367111	Argument	out		4364756	1					
ANR	4367112	Identifier	out		4364756	0					
ANR	4367113	ExpressionStatement	free ( out )	1383:4:38320:38330	4364756	1	True				
ANR	4367114	CallExpression	free ( out )		4364756	0					
ANR	4367115	Callee	free		4364756	0					
ANR	4367116	Identifier	free		4364756	0					
ANR	4367117	ArgumentList	out		4364756	1					
ANR	4367118	Argument	out		4364756	0					
ANR	4367119	Identifier	out		4364756	0					
ANR	4367120	IfStatement	if ( error_msg )		4364756	6					
ANR	4367121	Condition	error_msg	1385:7:38344:38352	4364756	0	True				
ANR	4367122	Identifier	error_msg		4364756	0					
ANR	4367123	CompoundStatement		380:18:9941:9941	4364756	1					
ANR	4367124	ExpressionStatement	"fprintf ( stderr , ""%s"" , error_msg )"	1386:4:38361:38394	4364756	0	True				
ANR	4367125	CallExpression	"fprintf ( stderr , ""%s"" , error_msg )"		4364756	0					
ANR	4367126	Callee	fprintf		4364756	0					
ANR	4367127	Identifier	fprintf		4364756	0					
ANR	4367128	ArgumentList	stderr		4364756	1					
ANR	4367129	Argument	stderr		4364756	0					
ANR	4367130	Identifier	stderr		4364756	0					
ANR	4367131	Argument	"""%s"""		4364756	1					
ANR	4367132	PrimaryExpression	"""%s"""		4364756	0					
ANR	4367133	Argument	error_msg		4364756	2					
ANR	4367134	Identifier	error_msg		4364756	0					
ANR	4367135	ExpressionStatement	free ( error_msg )	1387:4:38400:38416	4364756	1	True				
ANR	4367136	CallExpression	free ( error_msg )		4364756	0					
ANR	4367137	Callee	free		4364756	0					
ANR	4367138	Identifier	free		4364756	0					
ANR	4367139	ArgumentList	error_msg		4364756	1					
ANR	4367140	Argument	error_msg		4364756	0					
ANR	4367141	Identifier	error_msg		4364756	0					
ANR	4367142	ElseStatement	else		4364756	0					
ANR	4367143	CompoundStatement		384:9:10018:10018	4364756	0					
ANR	4367144	ExpressionStatement	"eprintf ( ""Invalid use of td. See td? for help\\n"" )"	1390:3:38437:38486	4364756	0	True				
ANR	4367145	CallExpression	"eprintf ( ""Invalid use of td. See td? for help\\n"" )"		4364756	0					
ANR	4367146	Callee	eprintf		4364756	0					
ANR	4367147	Identifier	eprintf		4364756	0					
ANR	4367148	ArgumentList	"""Invalid use of td. See td? for help\\n"""		4364756	1					
ANR	4367149	Argument	"""Invalid use of td. See td? for help\\n"""		4364756	0					
ANR	4367150	PrimaryExpression	"""Invalid use of td. See td? for help\\n"""		4364756	0					
ANR	4367151	BreakStatement	break ;	1392:2:38494:38499	4364756	32	True				
ANR	4367152	Label	case 'x' :	1393:1:38502:38510	4364756	33	True				
ANR	4367153	CompoundStatement		391:4:10155:10173	4364756	34					
ANR	4367154	IdentifierDeclStatement	"char * type , * type2 ;"	1394:4:38518:38536	4364756	0	True				
ANR	4367155	IdentifierDecl	* type		4364756	0					
ANR	4367156	IdentifierDeclType	char *		4364756	0					
ANR	4367157	Identifier	type		4364756	1					
ANR	4367158	IdentifierDecl	* type2		4364756	1					
ANR	4367159	IdentifierDeclType	char *		4364756	0					
ANR	4367160	Identifier	type2		4364756	1					
ANR	4367161	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	1395:2:38540:38563	4364756	1	True				
ANR	4367162	IdentifierDecl	* iter		4364756	0					
ANR	4367163	IdentifierDeclType	RListIter *		4364756	0					
ANR	4367164	Identifier	iter		4364756	1					
ANR	4367165	IdentifierDecl	* iter2		4364756	1					
ANR	4367166	IdentifierDeclType	RListIter *		4364756	0					
ANR	4367167	Identifier	iter2		4364756	1					
ANR	4367168	IdentifierDeclStatement	RAnalFunction * fcn ;	1396:4:38569:38587	4364756	2	True				
ANR	4367169	IdentifierDecl	* fcn		4364756	0					
ANR	4367170	IdentifierDeclType	RAnalFunction *		4364756	0					
ANR	4367171	Identifier	fcn		4364756	1					
ANR	4367172	SwitchStatement	switch ( input [ 1 ] )		4364756	3					
ANR	4367173	Condition	input [ 1 ]	1397:10:38599:38606	4364756	0	True				
ANR	4367174	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4367175	Identifier	input		4364756	0					
ANR	4367176	PrimaryExpression	1		4364756	1					
ANR	4367177	CompoundStatement		392:20:10195:10195	4364756	1					
ANR	4367178	Label	case '.' :	1398:2:38613:38621	4364756	0	True				
ANR	4367179	Label	case 'f' :	1399:2:38646:38654	4364756	1	True				
ANR	4367180	ExpressionStatement	"fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"	1400:3:38680:38734	4364756	2	True				
ANR	4367181	AssignmentExpression	"fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		4364756	0		=			
ANR	4367182	Identifier	fcn		4364756	0					
ANR	4367183	CallExpression	"r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		4364756	1					
ANR	4367184	Callee	r_anal_get_fcn_at		4364756	0					
ANR	4367185	Identifier	r_anal_get_fcn_at		4364756	0					
ANR	4367186	ArgumentList	core -> anal		4364756	1					
ANR	4367187	Argument	core -> anal		4364756	0					
ANR	4367188	PtrMemberAccess	core -> anal		4364756	0					
ANR	4367189	Identifier	core		4364756	0					
ANR	4367190	Identifier	anal		4364756	1					
ANR	4367191	Argument	core -> offset		4364756	1					
ANR	4367192	PtrMemberAccess	core -> offset		4364756	0					
ANR	4367193	Identifier	core		4364756	0					
ANR	4367194	Identifier	offset		4364756	1					
ANR	4367195	Argument	0		4364756	2					
ANR	4367196	PrimaryExpression	0		4364756	0					
ANR	4367197	IfStatement	if ( fcn )		4364756	3					
ANR	4367198	Condition	fcn	1401:7:38743:38745	4364756	0	True				
ANR	4367199	Identifier	fcn		4364756	0					
ANR	4367200	CompoundStatement		397:4:10340:10379	4364756	1					
ANR	4367201	IdentifierDeclStatement	"RList * uniq = get_uniq_type ( core , fcn ) ;"	1402:4:38754:38793	4364756	0	True				
ANR	4367202	IdentifierDecl	"* uniq = get_uniq_type ( core , fcn )"		4364756	0					
ANR	4367203	IdentifierDeclType	RList *		4364756	0					
ANR	4367204	Identifier	uniq		4364756	1					
ANR	4367205	AssignmentExpression	"* uniq = get_uniq_type ( core , fcn )"		4364756	2		=			
ANR	4367206	Identifier	uniq		4364756	0					
ANR	4367207	CallExpression	"get_uniq_type ( core , fcn )"		4364756	1					
ANR	4367208	Callee	get_uniq_type		4364756	0					
ANR	4367209	Identifier	get_uniq_type		4364756	0					
ANR	4367210	ArgumentList	core		4364756	1					
ANR	4367211	Argument	core		4364756	0					
ANR	4367212	Identifier	core		4364756	0					
ANR	4367213	Argument	fcn		4364756	1					
ANR	4367214	Identifier	fcn		4364756	0					
ANR	4367215	Statement	r_list_foreach	1403:4:38799:38812	4364756	1	True				
ANR	4367216	Statement	(	1403:19:38814:38814	4364756	2	True				
ANR	4367217	Statement	uniq	1403:20:38815:38818	4364756	3	True				
ANR	4367218	Statement	","	1403:25:38820:38820	4364756	4	True				
ANR	4367219	Statement	iter	1403:27:38822:38825	4364756	5	True				
ANR	4367220	Statement	","	1403:32:38827:38827	4364756	6	True				
ANR	4367221	Statement	type	1403:34:38829:38832	4364756	7	True				
ANR	4367222	Statement	)	1403:38:38833:38833	4364756	8	True				
ANR	4367223	CompoundStatement		398:40:10421:10421	4364756	9					
ANR	4367224	ExpressionStatement	r_cons_println ( type )	1404:5:38842:38863	4364756	0	True				
ANR	4367225	CallExpression	r_cons_println ( type )		4364756	0					
ANR	4367226	Callee	r_cons_println		4364756	0					
ANR	4367227	Identifier	r_cons_println		4364756	0					
ANR	4367228	ArgumentList	type		4364756	1					
ANR	4367229	Argument	type		4364756	0					
ANR	4367230	Identifier	type		4364756	0					
ANR	4367231	ExpressionStatement	r_list_free ( uniq )	1406:4:38875:38893	4364756	10	True				
ANR	4367232	CallExpression	r_list_free ( uniq )		4364756	0					
ANR	4367233	Callee	r_list_free		4364756	0					
ANR	4367234	Identifier	r_list_free		4364756	0					
ANR	4367235	ArgumentList	uniq		4364756	1					
ANR	4367236	Argument	uniq		4364756	0					
ANR	4367237	Identifier	uniq		4364756	0					
ANR	4367238	ElseStatement	else		4364756	0					
ANR	4367239	CompoundStatement		402:10:10491:10491	4364756	0					
ANR	4367240	Statement	eprintf	1408:4:38911:38917	4364756	0	True				
ANR	4367241	Statement	(	1408:12:38919:38919	4364756	1	True				
ANR	4367242	Statement	"""cannot find function at 0x%08"""	1408:13:38920:38950	4364756	2	True				
ANR	4367243	Statement	PFMT64x	1408:44:38951:38957	4364756	3	True				
ANR	4367244	Statement	"""\\n"""	1408:51:38958:38961	4364756	4	True				
ANR	4367245	Statement	","	1408:55:38962:38962	4364756	5	True				
ANR	4367246	Statement	core	1408:57:38964:38967	4364756	6	True				
ANR	4367247	Statement	->	1408:61:38968:38969	4364756	7	True				
ANR	4367248	Statement	offset	1408:63:38970:38975	4364756	8	True				
ANR	4367249	Statement	)	1408:69:38976:38976	4364756	9	True				
ANR	4367250	ExpressionStatement		1408:70:38977:38977	4364756	10	True				
ANR	4367251	BreakStatement	break ;	1410:3:38987:38992	4364756	4	True				
ANR	4367252	Label	case 0 :	1411:2:38996:39002	4364756	5	True				
ANR	4367253	Statement	r_list_foreach	1412:3:39015:39028	4364756	6	True				
ANR	4367254	Statement	(	1412:18:39030:39030	4364756	7	True				
ANR	4367255	Statement	core	1412:19:39031:39034	4364756	8	True				
ANR	4367256	Statement	->	1412:23:39035:39036	4364756	9	True				
ANR	4367257	Statement	anal	1412:25:39037:39040	4364756	10	True				
ANR	4367258	Statement	->	1412:29:39041:39042	4364756	11	True				
ANR	4367259	Statement	fcns	1412:31:39043:39046	4364756	12	True				
ANR	4367260	Statement	","	1412:35:39047:39047	4364756	13	True				
ANR	4367261	Statement	iter	1412:37:39049:39052	4364756	14	True				
ANR	4367262	Statement	","	1412:41:39053:39053	4364756	15	True				
ANR	4367263	Statement	fcn	1412:43:39055:39057	4364756	16	True				
ANR	4367264	Statement	)	1412:46:39058:39058	4364756	17	True				
ANR	4367265	CompoundStatement		408:4:10652:10691	4364756	18					
ANR	4367266	IdentifierDeclStatement	"RList * uniq = get_uniq_type ( core , fcn ) ;"	1413:4:39066:39105	4364756	0	True				
ANR	4367267	IdentifierDecl	"* uniq = get_uniq_type ( core , fcn )"		4364756	0					
ANR	4367268	IdentifierDeclType	RList *		4364756	0					
ANR	4367269	Identifier	uniq		4364756	1					
ANR	4367270	AssignmentExpression	"* uniq = get_uniq_type ( core , fcn )"		4364756	2		=			
ANR	4367271	Identifier	uniq		4364756	0					
ANR	4367272	CallExpression	"get_uniq_type ( core , fcn )"		4364756	1					
ANR	4367273	Callee	get_uniq_type		4364756	0					
ANR	4367274	Identifier	get_uniq_type		4364756	0					
ANR	4367275	ArgumentList	core		4364756	1					
ANR	4367276	Argument	core		4364756	0					
ANR	4367277	Identifier	core		4364756	0					
ANR	4367278	Argument	fcn		4364756	1					
ANR	4367279	Identifier	fcn		4364756	0					
ANR	4367280	IfStatement	if ( r_list_length ( uniq ) )		4364756	1					
ANR	4367281	Condition	r_list_length ( uniq )	1414:8:39115:39134	4364756	0	True				
ANR	4367282	CallExpression	r_list_length ( uniq )		4364756	0					
ANR	4367283	Callee	r_list_length		4364756	0					
ANR	4367284	Identifier	r_list_length		4364756	0					
ANR	4367285	ArgumentList	uniq		4364756	1					
ANR	4367286	Argument	uniq		4364756	0					
ANR	4367287	Identifier	uniq		4364756	0					
ANR	4367288	CompoundStatement		409:30:10723:10723	4364756	1					
ANR	4367289	ExpressionStatement	"r_cons_printf ( ""%s: "" , fcn -> name )"	1415:5:39144:39177	4364756	0	True				
ANR	4367290	CallExpression	"r_cons_printf ( ""%s: "" , fcn -> name )"		4364756	0					
ANR	4367291	Callee	r_cons_printf		4364756	0					
ANR	4367292	Identifier	r_cons_printf		4364756	0					
ANR	4367293	ArgumentList	"""%s: """		4364756	1					
ANR	4367294	Argument	"""%s: """		4364756	0					
ANR	4367295	PrimaryExpression	"""%s: """		4364756	0					
ANR	4367296	Argument	fcn -> name		4364756	1					
ANR	4367297	PtrMemberAccess	fcn -> name		4364756	0					
ANR	4367298	Identifier	fcn		4364756	0					
ANR	4367299	Identifier	name		4364756	1					
ANR	4367300	Statement	r_list_foreach	1417:4:39189:39202	4364756	2	True				
ANR	4367301	Statement	(	1417:19:39204:39204	4364756	3	True				
ANR	4367302	Statement	uniq	1417:20:39205:39208	4364756	4	True				
ANR	4367303	Statement	","	1417:25:39210:39210	4364756	5	True				
ANR	4367304	Statement	iter2	1417:27:39212:39216	4364756	6	True				
ANR	4367305	Statement	","	1417:32:39217:39217	4364756	7	True				
ANR	4367306	Statement	type	1417:34:39219:39222	4364756	8	True				
ANR	4367307	Statement	)	1417:38:39223:39223	4364756	9	True				
ANR	4367308	CompoundStatement		412:40:10811:10811	4364756	10					
ANR	4367309	ExpressionStatement	"r_cons_printf ( ""%s%s"" , type , iter2 -> n ? "","" : ""\\n"" )"	1418:5:39232:39281	4364756	0	True				
ANR	4367310	CallExpression	"r_cons_printf ( ""%s%s"" , type , iter2 -> n ? "","" : ""\\n"" )"		4364756	0					
ANR	4367311	Callee	r_cons_printf		4364756	0					
ANR	4367312	Identifier	r_cons_printf		4364756	0					
ANR	4367313	ArgumentList	"""%s%s"""		4364756	1					
ANR	4367314	Argument	"""%s%s"""		4364756	0					
ANR	4367315	PrimaryExpression	"""%s%s"""		4364756	0					
ANR	4367316	Argument	type		4364756	1					
ANR	4367317	Identifier	type		4364756	0					
ANR	4367318	Argument	"iter2 -> n ? "","" : ""\\n"""		4364756	2					
ANR	4367319	ConditionalExpression	"iter2 -> n ? "","" : ""\\n"""		4364756	0					
ANR	4367320	Condition	iter2 -> n		4364756	0					
ANR	4367321	PtrMemberAccess	iter2 -> n		4364756	0					
ANR	4367322	Identifier	iter2		4364756	0					
ANR	4367323	Identifier	n		4364756	1					
ANR	4367324	PrimaryExpression	""","""		4364756	1					
ANR	4367325	PrimaryExpression	"""\\n"""		4364756	2					
ANR	4367326	BreakStatement	break ;	1421:3:39297:39302	4364756	19	True				
ANR	4367327	Label	case 'g' :	1422:2:39306:39314	4364756	20	True				
ANR	4367328	CompoundStatement		418:3:10914:10914	4364756	21					
ANR	4367329	Statement	r_list_foreach	1424:4:39334:39347	4364756	0	True				
ANR	4367330	Statement	(	1424:19:39349:39349	4364756	1	True				
ANR	4367331	Statement	core	1424:20:39350:39353	4364756	2	True				
ANR	4367332	Statement	->	1424:24:39354:39355	4364756	3	True				
ANR	4367333	Statement	anal	1424:26:39356:39359	4364756	4	True				
ANR	4367334	Statement	->	1424:30:39360:39361	4364756	5	True				
ANR	4367335	Statement	fcns	1424:32:39362:39365	4364756	6	True				
ANR	4367336	Statement	","	1424:36:39366:39366	4364756	7	True				
ANR	4367337	Statement	iter	1424:38:39368:39371	4364756	8	True				
ANR	4367338	Statement	","	1424:42:39372:39372	4364756	9	True				
ANR	4367339	Statement	fcn	1424:44:39374:39376	4364756	10	True				
ANR	4367340	Statement	)	1424:47:39377:39377	4364756	11	True				
ANR	4367341	CompoundStatement		420:5:10972:11011	4364756	12					
ANR	4367342	IdentifierDeclStatement	"RList * uniq = get_uniq_type ( core , fcn ) ;"	1425:5:39386:39425	4364756	0	True				
ANR	4367343	IdentifierDecl	"* uniq = get_uniq_type ( core , fcn )"		4364756	0					
ANR	4367344	IdentifierDeclType	RList *		4364756	0					
ANR	4367345	Identifier	uniq		4364756	1					
ANR	4367346	AssignmentExpression	"* uniq = get_uniq_type ( core , fcn )"		4364756	2		=			
ANR	4367347	Identifier	uniq		4364756	0					
ANR	4367348	CallExpression	"get_uniq_type ( core , fcn )"		4364756	1					
ANR	4367349	Callee	get_uniq_type		4364756	0					
ANR	4367350	Identifier	get_uniq_type		4364756	0					
ANR	4367351	ArgumentList	core		4364756	1					
ANR	4367352	Argument	core		4364756	0					
ANR	4367353	Identifier	core		4364756	0					
ANR	4367354	Argument	fcn		4364756	1					
ANR	4367355	Identifier	fcn		4364756	0					
ANR	4367356	IfStatement	if ( r_list_length ( uniq ) )		4364756	1					
ANR	4367357	Condition	r_list_length ( uniq )	1426:9:39436:39455	4364756	0	True				
ANR	4367358	CallExpression	r_list_length ( uniq )		4364756	0					
ANR	4367359	Callee	r_list_length		4364756	0					
ANR	4367360	Identifier	r_list_length		4364756	0					
ANR	4367361	ArgumentList	uniq		4364756	1					
ANR	4367362	Argument	uniq		4364756	0					
ANR	4367363	Identifier	uniq		4364756	0					
ANR	4367364	CompoundStatement		421:31:11044:11044	4364756	1					
ANR	4367365	ExpressionStatement	"r_cons_printf ( ""agn %s\\n"" , fcn -> name )"	1427:6:39466:39503	4364756	0	True				
ANR	4367366	CallExpression	"r_cons_printf ( ""agn %s\\n"" , fcn -> name )"		4364756	0					
ANR	4367367	Callee	r_cons_printf		4364756	0					
ANR	4367368	Identifier	r_cons_printf		4364756	0					
ANR	4367369	ArgumentList	"""agn %s\\n"""		4364756	1					
ANR	4367370	Argument	"""agn %s\\n"""		4364756	0					
ANR	4367371	PrimaryExpression	"""agn %s\\n"""		4364756	0					
ANR	4367372	Argument	fcn -> name		4364756	1					
ANR	4367373	PtrMemberAccess	fcn -> name		4364756	0					
ANR	4367374	Identifier	fcn		4364756	0					
ANR	4367375	Identifier	name		4364756	1					
ANR	4367376	Statement	r_list_foreach	1429:5:39517:39530	4364756	2	True				
ANR	4367377	Statement	(	1429:20:39532:39532	4364756	3	True				
ANR	4367378	Statement	uniq	1429:21:39533:39536	4364756	4	True				
ANR	4367379	Statement	","	1429:26:39538:39538	4364756	5	True				
ANR	4367380	Statement	iter2	1429:28:39540:39544	4364756	6	True				
ANR	4367381	Statement	","	1429:33:39545:39545	4364756	7	True				
ANR	4367382	Statement	type	1429:35:39547:39550	4364756	8	True				
ANR	4367383	Statement	)	1429:39:39551:39551	4364756	9	True				
ANR	4367384	CompoundStatement		425:6:11147:11175	4364756	10					
ANR	4367385	IdentifierDeclStatement	char * myType = strdup ( type ) ;	1430:6:39561:39589	4364756	0	True				
ANR	4367386	IdentifierDecl	* myType = strdup ( type )		4364756	0					
ANR	4367387	IdentifierDeclType	char *		4364756	0					
ANR	4367388	Identifier	myType		4364756	1					
ANR	4367389	AssignmentExpression	* myType = strdup ( type )		4364756	2		=			
ANR	4367390	Identifier	myType		4364756	0					
ANR	4367391	CallExpression	strdup ( type )		4364756	1					
ANR	4367392	Callee	strdup		4364756	0					
ANR	4367393	Identifier	strdup		4364756	0					
ANR	4367394	ArgumentList	type		4364756	1					
ANR	4367395	Argument	type		4364756	0					
ANR	4367396	Identifier	type		4364756	0					
ANR	4367397	ExpressionStatement	"r_str_replace_ch ( myType , ' ' , '_' , true )"	1431:6:39597:39638	4364756	1	True				
ANR	4367398	CallExpression	"r_str_replace_ch ( myType , ' ' , '_' , true )"		4364756	0					
ANR	4367399	Callee	r_str_replace_ch		4364756	0					
ANR	4367400	Identifier	r_str_replace_ch		4364756	0					
ANR	4367401	ArgumentList	myType		4364756	1					
ANR	4367402	Argument	myType		4364756	0					
ANR	4367403	Identifier	myType		4364756	0					
ANR	4367404	Argument	' '		4364756	1					
ANR	4367405	PrimaryExpression	' '		4364756	0					
ANR	4367406	Argument	'_'		4364756	2					
ANR	4367407	PrimaryExpression	'_'		4364756	0					
ANR	4367408	Argument	true		4364756	3					
ANR	4367409	Identifier	true		4364756	0					
ANR	4367410	ExpressionStatement	"r_cons_printf ( ""agn %s\\n"" , myType )"	1432:6:39646:39680	4364756	2	True				
ANR	4367411	CallExpression	"r_cons_printf ( ""agn %s\\n"" , myType )"		4364756	0					
ANR	4367412	Callee	r_cons_printf		4364756	0					
ANR	4367413	Identifier	r_cons_printf		4364756	0					
ANR	4367414	ArgumentList	"""agn %s\\n"""		4364756	1					
ANR	4367415	Argument	"""agn %s\\n"""		4364756	0					
ANR	4367416	PrimaryExpression	"""agn %s\\n"""		4364756	0					
ANR	4367417	Argument	myType		4364756	1					
ANR	4367418	Identifier	myType		4364756	0					
ANR	4367419	ExpressionStatement	"r_cons_printf ( ""age %s %s\\n"" , myType , fcn -> name )"	1433:6:39688:39736	4364756	3	True				
ANR	4367420	CallExpression	"r_cons_printf ( ""age %s %s\\n"" , myType , fcn -> name )"		4364756	0					
ANR	4367421	Callee	r_cons_printf		4364756	0					
ANR	4367422	Identifier	r_cons_printf		4364756	0					
ANR	4367423	ArgumentList	"""age %s %s\\n"""		4364756	1					
ANR	4367424	Argument	"""age %s %s\\n"""		4364756	0					
ANR	4367425	PrimaryExpression	"""age %s %s\\n"""		4364756	0					
ANR	4367426	Argument	myType		4364756	1					
ANR	4367427	Identifier	myType		4364756	0					
ANR	4367428	Argument	fcn -> name		4364756	2					
ANR	4367429	PtrMemberAccess	fcn -> name		4364756	0					
ANR	4367430	Identifier	fcn		4364756	0					
ANR	4367431	Identifier	name		4364756	1					
ANR	4367432	ExpressionStatement	free ( myType )	1434:6:39744:39757	4364756	4	True				
ANR	4367433	CallExpression	free ( myType )		4364756	0					
ANR	4367434	Callee	free		4364756	0					
ANR	4367435	Identifier	free		4364756	0					
ANR	4367436	ArgumentList	myType		4364756	1					
ANR	4367437	Argument	myType		4364756	0					
ANR	4367438	Identifier	myType		4364756	0					
ANR	4367439	BreakStatement	break ;	1438:3:39780:39785	4364756	22	True				
ANR	4367440	Label	case 'l' :	1439:2:39789:39797	4364756	23	True				
ANR	4367441	CompoundStatement		436:4:11403:11439	4364756	24					
ANR	4367442	IdentifierDeclStatement	RList * uniqList = r_list_newf ( free ) ;	1441:4:39817:39853	4364756	0	True				
ANR	4367443	IdentifierDecl	* uniqList = r_list_newf ( free )		4364756	0					
ANR	4367444	IdentifierDeclType	RList *		4364756	0					
ANR	4367445	Identifier	uniqList		4364756	1					
ANR	4367446	AssignmentExpression	* uniqList = r_list_newf ( free )		4364756	2		=			
ANR	4367447	Identifier	uniqList		4364756	0					
ANR	4367448	CallExpression	r_list_newf ( free )		4364756	1					
ANR	4367449	Callee	r_list_newf		4364756	0					
ANR	4367450	Identifier	r_list_newf		4364756	0					
ANR	4367451	ArgumentList	free		4364756	1					
ANR	4367452	Argument	free		4364756	0					
ANR	4367453	Identifier	free		4364756	0					
ANR	4367454	Statement	r_list_foreach	1442:4:39859:39872	4364756	1	True				
ANR	4367455	Statement	(	1442:19:39874:39874	4364756	2	True				
ANR	4367456	Statement	core	1442:20:39875:39878	4364756	3	True				
ANR	4367457	Statement	->	1442:24:39879:39880	4364756	4	True				
ANR	4367458	Statement	anal	1442:26:39881:39884	4364756	5	True				
ANR	4367459	Statement	->	1442:30:39885:39886	4364756	6	True				
ANR	4367460	Statement	fcns	1442:32:39887:39890	4364756	7	True				
ANR	4367461	Statement	","	1442:36:39891:39891	4364756	8	True				
ANR	4367462	Statement	iter	1442:38:39893:39896	4364756	9	True				
ANR	4367463	Statement	","	1442:42:39897:39897	4364756	10	True				
ANR	4367464	Statement	fcn	1442:44:39899:39901	4364756	11	True				
ANR	4367465	Statement	)	1442:47:39902:39902	4364756	12	True				
ANR	4367466	CompoundStatement		438:5:11497:11536	4364756	13					
ANR	4367467	IdentifierDeclStatement	"RList * uniq = get_uniq_type ( core , fcn ) ;"	1443:5:39911:39950	4364756	0	True				
ANR	4367468	IdentifierDecl	"* uniq = get_uniq_type ( core , fcn )"		4364756	0					
ANR	4367469	IdentifierDeclType	RList *		4364756	0					
ANR	4367470	Identifier	uniq		4364756	1					
ANR	4367471	AssignmentExpression	"* uniq = get_uniq_type ( core , fcn )"		4364756	2		=			
ANR	4367472	Identifier	uniq		4364756	0					
ANR	4367473	CallExpression	"get_uniq_type ( core , fcn )"		4364756	1					
ANR	4367474	Callee	get_uniq_type		4364756	0					
ANR	4367475	Identifier	get_uniq_type		4364756	0					
ANR	4367476	ArgumentList	core		4364756	1					
ANR	4367477	Argument	core		4364756	0					
ANR	4367478	Identifier	core		4364756	0					
ANR	4367479	Argument	fcn		4364756	1					
ANR	4367480	Identifier	fcn		4364756	0					
ANR	4367481	Statement	r_list_foreach	1444:5:39957:39970	4364756	1	True				
ANR	4367482	Statement	(	1444:20:39972:39972	4364756	2	True				
ANR	4367483	Statement	uniq	1444:21:39973:39976	4364756	3	True				
ANR	4367484	Statement	","	1444:26:39978:39978	4364756	4	True				
ANR	4367485	Statement	iter2	1444:28:39980:39984	4364756	5	True				
ANR	4367486	Statement	","	1444:33:39985:39985	4364756	6	True				
ANR	4367487	Statement	type	1444:35:39987:39990	4364756	7	True				
ANR	4367488	Statement	)	1444:39:39991:39991	4364756	8	True				
ANR	4367489	CompoundStatement		439:41:11579:11579	4364756	9					
ANR	4367490	IfStatement	"if ( ! r_list_find ( uniqList , type , ( RListComparator ) strcmp ) )"		4364756	0					
ANR	4367491	Condition	"! r_list_find ( uniqList , type , ( RListComparator ) strcmp )"	1445:10:40005:40058	4364756	0	True				
ANR	4367492	UnaryOperationExpression	"! r_list_find ( uniqList , type , ( RListComparator ) strcmp )"		4364756	0					
ANR	4367493	UnaryOperator	!		4364756	0					
ANR	4367494	CallExpression	"r_list_find ( uniqList , type , ( RListComparator ) strcmp )"		4364756	1					
ANR	4367495	Callee	r_list_find		4364756	0					
ANR	4367496	Identifier	r_list_find		4364756	0					
ANR	4367497	ArgumentList	uniqList		4364756	1					
ANR	4367498	Argument	uniqList		4364756	0					
ANR	4367499	Identifier	uniqList		4364756	0					
ANR	4367500	Argument	type		4364756	1					
ANR	4367501	Identifier	type		4364756	0					
ANR	4367502	Argument	( RListComparator ) strcmp		4364756	2					
ANR	4367503	CastExpression	( RListComparator ) strcmp		4364756	0					
ANR	4367504	CastTarget	RListComparator		4364756	0					
ANR	4367505	Identifier	strcmp		4364756	1					
ANR	4367506	CompoundStatement		440:66:11647:11647	4364756	1					
ANR	4367507	ExpressionStatement	"r_list_push ( uniqList , strdup ( type ) )"	1446:7:40070:40107	4364756	0	True				
ANR	4367508	CallExpression	"r_list_push ( uniqList , strdup ( type ) )"		4364756	0					
ANR	4367509	Callee	r_list_push		4364756	0					
ANR	4367510	Identifier	r_list_push		4364756	0					
ANR	4367511	ArgumentList	uniqList		4364756	1					
ANR	4367512	Argument	uniqList		4364756	0					
ANR	4367513	Identifier	uniqList		4364756	0					
ANR	4367514	Argument	strdup ( type )		4364756	1					
ANR	4367515	CallExpression	strdup ( type )		4364756	0					
ANR	4367516	Callee	strdup		4364756	0					
ANR	4367517	Identifier	strdup		4364756	0					
ANR	4367518	ArgumentList	type		4364756	1					
ANR	4367519	Argument	type		4364756	0					
ANR	4367520	Identifier	type		4364756	0					
ANR	4367521	ExpressionStatement	"r_list_sort ( uniqList , ( RListComparator ) strcmp )"	1450:4:40134:40181	4364756	14	True				
ANR	4367522	CallExpression	"r_list_sort ( uniqList , ( RListComparator ) strcmp )"		4364756	0					
ANR	4367523	Callee	r_list_sort		4364756	0					
ANR	4367524	Identifier	r_list_sort		4364756	0					
ANR	4367525	ArgumentList	uniqList		4364756	1					
ANR	4367526	Argument	uniqList		4364756	0					
ANR	4367527	Identifier	uniqList		4364756	0					
ANR	4367528	Argument	( RListComparator ) strcmp		4364756	1					
ANR	4367529	CastExpression	( RListComparator ) strcmp		4364756	0					
ANR	4367530	CastTarget	RListComparator		4364756	0					
ANR	4367531	Identifier	strcmp		4364756	1					
ANR	4367532	Statement	r_list_foreach	1451:4:40187:40200	4364756	15	True				
ANR	4367533	Statement	(	1451:19:40202:40202	4364756	16	True				
ANR	4367534	Statement	uniqList	1451:20:40203:40210	4364756	17	True				
ANR	4367535	Statement	","	1451:28:40211:40211	4364756	18	True				
ANR	4367536	Statement	iter	1451:30:40213:40216	4364756	19	True				
ANR	4367537	Statement	","	1451:34:40217:40217	4364756	20	True				
ANR	4367538	Statement	type	1451:36:40219:40222	4364756	21	True				
ANR	4367539	Statement	)	1451:40:40223:40223	4364756	22	True				
ANR	4367540	CompoundStatement		446:42:11811:11811	4364756	23					
ANR	4367541	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , type )"	1452:5:40232:40260	4364756	0	True				
ANR	4367542	CallExpression	"r_cons_printf ( ""%s\\n"" , type )"		4364756	0					
ANR	4367543	Callee	r_cons_printf		4364756	0					
ANR	4367544	Identifier	r_cons_printf		4364756	0					
ANR	4367545	ArgumentList	"""%s\\n"""		4364756	1					
ANR	4367546	Argument	"""%s\\n"""		4364756	0					
ANR	4367547	PrimaryExpression	"""%s\\n"""		4364756	0					
ANR	4367548	Argument	type		4364756	1					
ANR	4367549	Identifier	type		4364756	0					
ANR	4367550	ExpressionStatement	r_list_free ( uniqList )	1454:4:40272:40294	4364756	24	True				
ANR	4367551	CallExpression	r_list_free ( uniqList )		4364756	0					
ANR	4367552	Callee	r_list_free		4364756	0					
ANR	4367553	Identifier	r_list_free		4364756	0					
ANR	4367554	ArgumentList	uniqList		4364756	1					
ANR	4367555	Argument	uniqList		4364756	0					
ANR	4367556	Identifier	uniqList		4364756	0					
ANR	4367557	BreakStatement	break ;	1456:3:40304:40309	4364756	25	True				
ANR	4367558	Label	case ' ' :	1457:2:40313:40321	4364756	26	True				
ANR	4367559	ExpressionStatement	type = ( char * ) r_str_trim_ro ( input + 2 )	1458:3:40373:40413	4364756	27	True				
ANR	4367560	AssignmentExpression	type = ( char * ) r_str_trim_ro ( input + 2 )		4364756	0		=			
ANR	4367561	Identifier	type		4364756	0					
ANR	4367562	CastExpression	( char * ) r_str_trim_ro ( input + 2 )		4364756	1					
ANR	4367563	CastTarget	char *		4364756	0					
ANR	4367564	CallExpression	r_str_trim_ro ( input + 2 )		4364756	1					
ANR	4367565	Callee	r_str_trim_ro		4364756	0					
ANR	4367566	Identifier	r_str_trim_ro		4364756	0					
ANR	4367567	ArgumentList	input + 2		4364756	1					
ANR	4367568	Argument	input + 2		4364756	0					
ANR	4367569	AdditiveExpression	input + 2		4364756	0		+			
ANR	4367570	Identifier	input		4364756	0					
ANR	4367571	PrimaryExpression	2		4364756	1					
ANR	4367572	Statement	r_list_foreach	1459:3:40418:40431	4364756	28	True				
ANR	4367573	Statement	(	1459:18:40433:40433	4364756	29	True				
ANR	4367574	Statement	core	1459:19:40434:40437	4364756	30	True				
ANR	4367575	Statement	->	1459:23:40438:40439	4364756	31	True				
ANR	4367576	Statement	anal	1459:25:40440:40443	4364756	32	True				
ANR	4367577	Statement	->	1459:29:40444:40445	4364756	33	True				
ANR	4367578	Statement	fcns	1459:31:40446:40449	4364756	34	True				
ANR	4367579	Statement	","	1459:35:40450:40450	4364756	35	True				
ANR	4367580	Statement	iter	1459:37:40452:40455	4364756	36	True				
ANR	4367581	Statement	","	1459:41:40456:40456	4364756	37	True				
ANR	4367582	Statement	fcn	1459:43:40458:40460	4364756	38	True				
ANR	4367583	Statement	)	1459:46:40461:40461	4364756	39	True				
ANR	4367584	CompoundStatement		455:4:12055:12094	4364756	40					
ANR	4367585	IdentifierDeclStatement	"RList * uniq = get_uniq_type ( core , fcn ) ;"	1460:4:40469:40508	4364756	0	True				
ANR	4367586	IdentifierDecl	"* uniq = get_uniq_type ( core , fcn )"		4364756	0					
ANR	4367587	IdentifierDeclType	RList *		4364756	0					
ANR	4367588	Identifier	uniq		4364756	1					
ANR	4367589	AssignmentExpression	"* uniq = get_uniq_type ( core , fcn )"		4364756	2		=			
ANR	4367590	Identifier	uniq		4364756	0					
ANR	4367591	CallExpression	"get_uniq_type ( core , fcn )"		4364756	1					
ANR	4367592	Callee	get_uniq_type		4364756	0					
ANR	4367593	Identifier	get_uniq_type		4364756	0					
ANR	4367594	ArgumentList	core		4364756	1					
ANR	4367595	Argument	core		4364756	0					
ANR	4367596	Identifier	core		4364756	0					
ANR	4367597	Argument	fcn		4364756	1					
ANR	4367598	Identifier	fcn		4364756	0					
ANR	4367599	Statement	r_list_foreach	1461:4:40514:40527	4364756	1	True				
ANR	4367600	Statement	(	1461:19:40529:40529	4364756	2	True				
ANR	4367601	Statement	uniq	1461:20:40530:40533	4364756	3	True				
ANR	4367602	Statement	","	1461:25:40535:40535	4364756	4	True				
ANR	4367603	Statement	iter2	1461:27:40537:40541	4364756	5	True				
ANR	4367604	Statement	","	1461:32:40542:40542	4364756	6	True				
ANR	4367605	Statement	type2	1461:34:40544:40548	4364756	7	True				
ANR	4367606	Statement	)	1461:39:40549:40549	4364756	8	True				
ANR	4367607	CompoundStatement		456:41:12137:12137	4364756	9					
ANR	4367608	IfStatement	"if ( ! strcmp ( type2 , type ) )"		4364756	0					
ANR	4367609	Condition	"! strcmp ( type2 , type )"	1462:9:40562:40582	4364756	0	True				
ANR	4367610	UnaryOperationExpression	"! strcmp ( type2 , type )"		4364756	0					
ANR	4367611	UnaryOperator	!		4364756	0					
ANR	4367612	CallExpression	"strcmp ( type2 , type )"		4364756	1					
ANR	4367613	Callee	strcmp		4364756	0					
ANR	4367614	Identifier	strcmp		4364756	0					
ANR	4367615	ArgumentList	type2		4364756	1					
ANR	4367616	Argument	type2		4364756	0					
ANR	4367617	Identifier	type2		4364756	0					
ANR	4367618	Argument	type		4364756	1					
ANR	4367619	Identifier	type		4364756	0					
ANR	4367620	CompoundStatement		457:32:12171:12171	4364756	1					
ANR	4367621	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , fcn -> name )"	1463:6:40593:40626	4364756	0	True				
ANR	4367622	CallExpression	"r_cons_printf ( ""%s\\n"" , fcn -> name )"		4364756	0					
ANR	4367623	Callee	r_cons_printf		4364756	0					
ANR	4367624	Identifier	r_cons_printf		4364756	0					
ANR	4367625	ArgumentList	"""%s\\n"""		4364756	1					
ANR	4367626	Argument	"""%s\\n"""		4364756	0					
ANR	4367627	PrimaryExpression	"""%s\\n"""		4364756	0					
ANR	4367628	Argument	fcn -> name		4364756	1					
ANR	4367629	PtrMemberAccess	fcn -> name		4364756	0					
ANR	4367630	Identifier	fcn		4364756	0					
ANR	4367631	Identifier	name		4364756	1					
ANR	4367632	BreakStatement	break ;	1464:6:40634:40639	4364756	1	True				
ANR	4367633	BreakStatement	break ;	1468:3:40662:40667	4364756	41	True				
ANR	4367634	Label	default :	1469:2:40671:40678	4364756	42	True				
ANR	4367635	Identifier	default		4364756	0					
ANR	4367636	ExpressionStatement	"eprintf ( ""Usage: tx[flg] [...]\\n"" )"	1470:3:40683:40717	4364756	43	True				
ANR	4367637	CallExpression	"eprintf ( ""Usage: tx[flg] [...]\\n"" )"		4364756	0					
ANR	4367638	Callee	eprintf		4364756	0					
ANR	4367639	Identifier	eprintf		4364756	0					
ANR	4367640	ArgumentList	"""Usage: tx[flg] [...]\\n"""		4364756	1					
ANR	4367641	Argument	"""Usage: tx[flg] [...]\\n"""		4364756	0					
ANR	4367642	PrimaryExpression	"""Usage: tx[flg] [...]\\n"""		4364756	0					
ANR	4367643	ExpressionStatement	"eprintf ( "" txf | tx.      list all types used in this function\\n"" )"	1471:3:40722:40788	4364756	44	True				
ANR	4367644	CallExpression	"eprintf ( "" txf | tx.      list all types used in this function\\n"" )"		4364756	0					
ANR	4367645	Callee	eprintf		4364756	0					
ANR	4367646	Identifier	eprintf		4364756	0					
ANR	4367647	ArgumentList	""" txf | tx.      list all types used in this function\\n"""		4364756	1					
ANR	4367648	Argument	""" txf | tx.      list all types used in this function\\n"""		4364756	0					
ANR	4367649	PrimaryExpression	""" txf | tx.      list all types used in this function\\n"""		4364756	0					
ANR	4367650	ExpressionStatement	"eprintf ( "" txl            list all types used by any function\\n"" )"	1472:3:40793:40858	4364756	45	True				
ANR	4367651	CallExpression	"eprintf ( "" txl            list all types used by any function\\n"" )"		4364756	0					
ANR	4367652	Callee	eprintf		4364756	0					
ANR	4367653	Identifier	eprintf		4364756	0					
ANR	4367654	ArgumentList	""" txl            list all types used by any function\\n"""		4364756	1					
ANR	4367655	Argument	""" txl            list all types used by any function\\n"""		4364756	0					
ANR	4367656	PrimaryExpression	""" txl            list all types used by any function\\n"""		4364756	0					
ANR	4367657	ExpressionStatement	"eprintf ( "" txg            render the type xrefs graph\\n"" )"	1473:3:40863:40920	4364756	46	True				
ANR	4367658	CallExpression	"eprintf ( "" txg            render the type xrefs graph\\n"" )"		4364756	0					
ANR	4367659	Callee	eprintf		4364756	0					
ANR	4367660	Identifier	eprintf		4364756	0					
ANR	4367661	ArgumentList	""" txg            render the type xrefs graph\\n"""		4364756	1					
ANR	4367662	Argument	""" txg            render the type xrefs graph\\n"""		4364756	0					
ANR	4367663	PrimaryExpression	""" txg            render the type xrefs graph\\n"""		4364756	0					
ANR	4367664	ExpressionStatement	"eprintf ( "" tx  int32_t    list functions names using this type\\n"" )"	1474:3:40925:40991	4364756	47	True				
ANR	4367665	CallExpression	"eprintf ( "" tx  int32_t    list functions names using this type\\n"" )"		4364756	0					
ANR	4367666	Callee	eprintf		4364756	0					
ANR	4367667	Identifier	eprintf		4364756	0					
ANR	4367668	ArgumentList	""" tx  int32_t    list functions names using this type\\n"""		4364756	1					
ANR	4367669	Argument	""" tx  int32_t    list functions names using this type\\n"""		4364756	0					
ANR	4367670	PrimaryExpression	""" tx  int32_t    list functions names using this type\\n"""		4364756	0					
ANR	4367671	ExpressionStatement	"eprintf ( "" tx             list functions and the types they use\\n"" )"	1475:3:40996:41063	4364756	48	True				
ANR	4367672	CallExpression	"eprintf ( "" tx             list functions and the types they use\\n"" )"		4364756	0					
ANR	4367673	Callee	eprintf		4364756	0					
ANR	4367674	Identifier	eprintf		4364756	0					
ANR	4367675	ArgumentList	""" tx             list functions and the types they use\\n"""		4364756	1					
ANR	4367676	Argument	""" tx             list functions and the types they use\\n"""		4364756	0					
ANR	4367677	PrimaryExpression	""" tx             list functions and the types they use\\n"""		4364756	0					
ANR	4367678	BreakStatement	break ;	1476:3:41068:41073	4364756	49	True				
ANR	4367679	BreakStatement	break ;	1478:3:41082:41087	4364756	35	True				
ANR	4367680	Label	case 'a' :	1480:1:41140:41148	4364756	36	True				
ANR	4367681	SwitchStatement	switch ( input [ 1 ] )		4364756	37					
ANR	4367682	Condition	input [ 1 ]	1481:10:41168:41175	4364756	0	True				
ANR	4367683	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4367684	Identifier	input		4364756	0					
ANR	4367685	PrimaryExpression	1		4364756	1					
ANR	4367686	CompoundStatement		476:20:12764:12764	4364756	1					
ANR	4367687	Label	case 's' :	1482:2:41182:41190	4364756	0	True				
ANR	4367688	CompoundStatement		480:3:12848:12881	4364756	1					
ANR	4367689	IdentifierDeclStatement	char * off = strdup ( input + 2 ) ;	1483:3:41206:41236	4364756	0	True				
ANR	4367690	IdentifierDecl	* off = strdup ( input + 2 )		4364756	0					
ANR	4367691	IdentifierDeclType	char *		4364756	0					
ANR	4367692	Identifier	off		4364756	1					
ANR	4367693	AssignmentExpression	* off = strdup ( input + 2 )		4364756	2		=			
ANR	4367694	Identifier	off		4364756	0					
ANR	4367695	CallExpression	strdup ( input + 2 )		4364756	1					
ANR	4367696	Callee	strdup		4364756	0					
ANR	4367697	Identifier	strdup		4364756	0					
ANR	4367698	ArgumentList	input + 2		4364756	1					
ANR	4367699	Argument	input + 2		4364756	0					
ANR	4367700	AdditiveExpression	input + 2		4364756	0		+			
ANR	4367701	Identifier	input		4364756	0					
ANR	4367702	PrimaryExpression	2		4364756	1					
ANR	4367703	ExpressionStatement	r_str_trim ( off )	1484:3:41241:41257	4364756	1	True				
ANR	4367704	CallExpression	r_str_trim ( off )		4364756	0					
ANR	4367705	Callee	r_str_trim		4364756	0					
ANR	4367706	Identifier	r_str_trim		4364756	0					
ANR	4367707	ArgumentList	off		4364756	1					
ANR	4367708	Argument	off		4364756	0					
ANR	4367709	Identifier	off		4364756	0					
ANR	4367710	IdentifierDeclStatement	"int toff = r_num_math ( NULL , off ) ;"	1485:3:41262:41295	4364756	2	True				
ANR	4367711	IdentifierDecl	"toff = r_num_math ( NULL , off )"		4364756	0					
ANR	4367712	IdentifierDeclType	int		4364756	0					
ANR	4367713	Identifier	toff		4364756	1					
ANR	4367714	AssignmentExpression	"toff = r_num_math ( NULL , off )"		4364756	2		=			
ANR	4367715	Identifier	toff		4364756	0					
ANR	4367716	CallExpression	"r_num_math ( NULL , off )"		4364756	1					
ANR	4367717	Callee	r_num_math		4364756	0					
ANR	4367718	Identifier	r_num_math		4364756	0					
ANR	4367719	ArgumentList	NULL		4364756	1					
ANR	4367720	Argument	NULL		4364756	0					
ANR	4367721	Identifier	NULL		4364756	0					
ANR	4367722	Argument	off		4364756	1					
ANR	4367723	Identifier	off		4364756	0					
ANR	4367724	IfStatement	if ( toff )		4364756	3					
ANR	4367725	Condition	toff	1486:7:41304:41307	4364756	0	True				
ANR	4367726	Identifier	toff		4364756	0					
ANR	4367727	CompoundStatement		484:4:12979:12987	4364756	1					
ANR	4367728	IdentifierDeclStatement	"RList * typeoffs = r_type_get_by_offset ( TDB , toff ) ;"	1487:4:41316:41366	4364756	0	True				
ANR	4367729	IdentifierDecl	"* typeoffs = r_type_get_by_offset ( TDB , toff )"		4364756	0					
ANR	4367730	IdentifierDeclType	RList *		4364756	0					
ANR	4367731	Identifier	typeoffs		4364756	1					
ANR	4367732	AssignmentExpression	"* typeoffs = r_type_get_by_offset ( TDB , toff )"		4364756	2		=			
ANR	4367733	Identifier	typeoffs		4364756	0					
ANR	4367734	CallExpression	"r_type_get_by_offset ( TDB , toff )"		4364756	1					
ANR	4367735	Callee	r_type_get_by_offset		4364756	0					
ANR	4367736	Identifier	r_type_get_by_offset		4364756	0					
ANR	4367737	ArgumentList	TDB		4364756	1					
ANR	4367738	Argument	TDB		4364756	0					
ANR	4367739	Identifier	TDB		4364756	0					
ANR	4367740	Argument	toff		4364756	1					
ANR	4367741	Identifier	toff		4364756	0					
ANR	4367742	IdentifierDeclStatement	RListIter * iter ;	1488:4:41372:41387	4364756	1	True				
ANR	4367743	IdentifierDecl	* iter		4364756	0					
ANR	4367744	IdentifierDeclType	RListIter *		4364756	0					
ANR	4367745	Identifier	iter		4364756	1					
ANR	4367746	IdentifierDeclStatement	char * ty ;	1489:4:41393:41401	4364756	2	True				
ANR	4367747	IdentifierDecl	* ty		4364756	0					
ANR	4367748	IdentifierDeclType	char *		4364756	0					
ANR	4367749	Identifier	ty		4364756	1					
ANR	4367750	Statement	r_list_foreach	1490:4:41407:41420	4364756	3	True				
ANR	4367751	Statement	(	1490:19:41422:41422	4364756	4	True				
ANR	4367752	Statement	typeoffs	1490:20:41423:41430	4364756	5	True				
ANR	4367753	Statement	","	1490:28:41431:41431	4364756	6	True				
ANR	4367754	Statement	iter	1490:30:41433:41436	4364756	7	True				
ANR	4367755	Statement	","	1490:34:41437:41437	4364756	8	True				
ANR	4367756	Statement	ty	1490:36:41439:41440	4364756	9	True				
ANR	4367757	Statement	)	1490:38:41441:41441	4364756	10	True				
ANR	4367758	CompoundStatement		485:40:13029:13029	4364756	11					
ANR	4367759	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , ty )"	1491:5:41450:41476	4364756	0	True				
ANR	4367760	CallExpression	"r_cons_printf ( ""%s\\n"" , ty )"		4364756	0					
ANR	4367761	Callee	r_cons_printf		4364756	0					
ANR	4367762	Identifier	r_cons_printf		4364756	0					
ANR	4367763	ArgumentList	"""%s\\n"""		4364756	1					
ANR	4367764	Argument	"""%s\\n"""		4364756	0					
ANR	4367765	PrimaryExpression	"""%s\\n"""		4364756	0					
ANR	4367766	Argument	ty		4364756	1					
ANR	4367767	Identifier	ty		4364756	0					
ANR	4367768	ExpressionStatement	r_list_free ( typeoffs )	1493:4:41488:41510	4364756	12	True				
ANR	4367769	CallExpression	r_list_free ( typeoffs )		4364756	0					
ANR	4367770	Callee	r_list_free		4364756	0					
ANR	4367771	Identifier	r_list_free		4364756	0					
ANR	4367772	ArgumentList	typeoffs		4364756	1					
ANR	4367773	Argument	typeoffs		4364756	0					
ANR	4367774	Identifier	typeoffs		4364756	0					
ANR	4367775	ExpressionStatement	free ( off )	1495:3:41520:41530	4364756	4	True				
ANR	4367776	CallExpression	free ( off )		4364756	0					
ANR	4367777	Callee	free		4364756	0					
ANR	4367778	Identifier	free		4364756	0					
ANR	4367779	ArgumentList	off		4364756	1					
ANR	4367780	Argument	off		4364756	0					
ANR	4367781	Identifier	off		4364756	0					
ANR	4367782	BreakStatement	break ;	1496:3:41535:41540	4364756	5	True				
ANR	4367783	Label	case 'i' :	1498:2:41548:41556	4364756	2	True				
ANR	4367784	CompoundStatement		493:12:13144:13144	4364756	3					
ANR	4367785	IfStatement	if ( input [ 2 ] == 'l' )		4364756	0					
ANR	4367786	Condition	input [ 2 ] == 'l'	1499:7:41576:41590	4364756	0	True				
ANR	4367787	EqualityExpression	input [ 2 ] == 'l'		4364756	0		==			
ANR	4367788	ArrayIndexing	input [ 2 ]		4364756	0					
ANR	4367789	Identifier	input		4364756	0					
ANR	4367790	PrimaryExpression	2		4364756	1					
ANR	4367791	PrimaryExpression	'l'		4364756	1					
ANR	4367792	CompoundStatement		494:24:13179:13179	4364756	1					
ANR	4367793	ExpressionStatement	"cmd_tail ( core , input )"	1500:4:41599:41621	4364756	0	True				
ANR	4367794	CallExpression	"cmd_tail ( core , input )"		4364756	0					
ANR	4367795	Callee	cmd_tail		4364756	0					
ANR	4367796	Identifier	cmd_tail		4364756	0					
ANR	4367797	ArgumentList	core		4364756	1					
ANR	4367798	Argument	core		4364756	0					
ANR	4367799	Identifier	core		4364756	0					
ANR	4367800	Argument	input		4364756	1					
ANR	4367801	Identifier	input		4364756	0					
ANR	4367802	BreakStatement	break ;	1502:3:41631:41636	4364756	1	True				
ANR	4367803	Label	case 'a' :	1504:2:41644:41652	4364756	4	True				
ANR	4367804	CompoundStatement		502:3:13320:13333	4364756	5					
ANR	4367805	IdentifierDeclStatement	char * off = r_str_trim_dup ( input + 2 ) ;	1505:3:41668:41706	4364756	0	True				
ANR	4367806	IdentifierDecl	* off = r_str_trim_dup ( input + 2 )		4364756	0					
ANR	4367807	IdentifierDeclType	char *		4364756	0					
ANR	4367808	Identifier	off		4364756	1					
ANR	4367809	AssignmentExpression	* off = r_str_trim_dup ( input + 2 )		4364756	2		=			
ANR	4367810	Identifier	off		4364756	0					
ANR	4367811	CallExpression	r_str_trim_dup ( input + 2 )		4364756	1					
ANR	4367812	Callee	r_str_trim_dup		4364756	0					
ANR	4367813	Identifier	r_str_trim_dup		4364756	0					
ANR	4367814	ArgumentList	input + 2		4364756	1					
ANR	4367815	Argument	input + 2		4364756	0					
ANR	4367816	AdditiveExpression	input + 2		4364756	0		+			
ANR	4367817	Identifier	input		4364756	0					
ANR	4367818	PrimaryExpression	2		4364756	1					
ANR	4367819	IdentifierDeclStatement	RAnalFunction * fcn ;	1506:3:41711:41729	4364756	1	True				
ANR	4367820	IdentifierDecl	* fcn		4364756	0					
ANR	4367821	IdentifierDeclType	RAnalFunction *		4364756	0					
ANR	4367822	Identifier	fcn		4364756	1					
ANR	4367823	IdentifierDeclStatement	RListIter * it ;	1507:3:41734:41747	4364756	2	True				
ANR	4367824	IdentifierDecl	* it		4364756	0					
ANR	4367825	IdentifierDeclType	RListIter *		4364756	0					
ANR	4367826	Identifier	it		4364756	1					
ANR	4367827	IfStatement	if ( off && * off )		4364756	3					
ANR	4367828	Condition	off && * off	1508:7:41756:41766	4364756	0	True				
ANR	4367829	AndExpression	off && * off		4364756	0		&&			
ANR	4367830	Identifier	off		4364756	0					
ANR	4367831	UnaryOperationExpression	* off		4364756	1					
ANR	4367832	UnaryOperator	*		4364756	0					
ANR	4367833	Identifier	off		4364756	1					
ANR	4367834	CompoundStatement		504:4:13361:13395	4364756	1					
ANR	4367835	IdentifierDeclStatement	"ut64 addr = r_num_math ( NULL , off ) ;"	1509:4:41775:41809	4364756	0	True				
ANR	4367836	IdentifierDecl	"addr = r_num_math ( NULL , off )"		4364756	0					
ANR	4367837	IdentifierDeclType	ut64		4364756	0					
ANR	4367838	Identifier	addr		4364756	1					
ANR	4367839	AssignmentExpression	"addr = r_num_math ( NULL , off )"		4364756	2		=			
ANR	4367840	Identifier	addr		4364756	0					
ANR	4367841	CallExpression	"r_num_math ( NULL , off )"		4364756	1					
ANR	4367842	Callee	r_num_math		4364756	0					
ANR	4367843	Identifier	r_num_math		4364756	0					
ANR	4367844	ArgumentList	NULL		4364756	1					
ANR	4367845	Argument	NULL		4364756	0					
ANR	4367846	Identifier	NULL		4364756	0					
ANR	4367847	Argument	off		4364756	1					
ANR	4367848	Identifier	off		4364756	0					
ANR	4367849	ExpressionStatement	"fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"	1510:4:41815:41868	4364756	1	True				
ANR	4367850	AssignmentExpression	"fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		4364756	0		=			
ANR	4367851	Identifier	fcn		4364756	0					
ANR	4367852	CallExpression	"r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		4364756	1					
ANR	4367853	Callee	r_anal_get_fcn_at		4364756	0					
ANR	4367854	Identifier	r_anal_get_fcn_at		4364756	0					
ANR	4367855	ArgumentList	core -> anal		4364756	1					
ANR	4367856	Argument	core -> anal		4364756	0					
ANR	4367857	PtrMemberAccess	core -> anal		4364756	0					
ANR	4367858	Identifier	core		4364756	0					
ANR	4367859	Identifier	anal		4364756	1					
ANR	4367860	Argument	core -> offset		4364756	1					
ANR	4367861	PtrMemberAccess	core -> offset		4364756	0					
ANR	4367862	Identifier	core		4364756	0					
ANR	4367863	Identifier	offset		4364756	1					
ANR	4367864	Argument	0		4364756	2					
ANR	4367865	PrimaryExpression	0		4364756	0					
ANR	4367866	IfStatement	if ( fcn )		4364756	2					
ANR	4367867	Condition	fcn	1511:8:41878:41880	4364756	0	True				
ANR	4367868	Identifier	fcn		4364756	0					
ANR	4367869	CompoundStatement		506:13:13469:13469	4364756	1					
ANR	4367870	ExpressionStatement	"link_struct_offset ( core , fcn )"	1512:5:41890:41920	4364756	0	True				
ANR	4367871	CallExpression	"link_struct_offset ( core , fcn )"		4364756	0					
ANR	4367872	Callee	link_struct_offset		4364756	0					
ANR	4367873	Identifier	link_struct_offset		4364756	0					
ANR	4367874	ArgumentList	core		4364756	1					
ANR	4367875	Argument	core		4364756	0					
ANR	4367876	Identifier	core		4364756	0					
ANR	4367877	Argument	fcn		4364756	1					
ANR	4367878	Identifier	fcn		4364756	0					
ANR	4367879	ElseStatement	else		4364756	0					
ANR	4367880	CompoundStatement		508:11:13519:13519	4364756	0					
ANR	4367881	Statement	eprintf	1514:5:41940:41946	4364756	0	True				
ANR	4367882	Statement	(	1514:13:41948:41948	4364756	1	True				
ANR	4367883	Statement	"""cannot find function at %08"""	1514:14:41949:41977	4364756	2	True				
ANR	4367884	Statement	PFMT64x	1514:43:41978:41984	4364756	3	True				
ANR	4367885	Statement	"""\\n"""	1514:50:41985:41988	4364756	4	True				
ANR	4367886	Statement	","	1514:54:41989:41989	4364756	5	True				
ANR	4367887	Statement	addr	1514:56:41991:41994	4364756	6	True				
ANR	4367888	Statement	)	1514:60:41995:41995	4364756	7	True				
ANR	4367889	ExpressionStatement		1514:61:41996:41996	4364756	8	True				
ANR	4367890	ElseStatement	else		4364756	0					
ANR	4367891	CompoundStatement		511:10:13600:13600	4364756	0					
ANR	4367892	IfStatement	if ( r_list_length ( core -> anal -> fcns ) == 0 )		4364756	0					
ANR	4367893	Condition	r_list_length ( core -> anal -> fcns ) == 0	1517:8:42024:42060	4364756	0	True				
ANR	4367894	EqualityExpression	r_list_length ( core -> anal -> fcns ) == 0		4364756	0		==			
ANR	4367895	CallExpression	r_list_length ( core -> anal -> fcns )		4364756	0					
ANR	4367896	Callee	r_list_length		4364756	0					
ANR	4367897	Identifier	r_list_length		4364756	0					
ANR	4367898	ArgumentList	core -> anal -> fcns		4364756	1					
ANR	4367899	Argument	core -> anal -> fcns		4364756	0					
ANR	4367900	PtrMemberAccess	core -> anal -> fcns		4364756	0					
ANR	4367901	PtrMemberAccess	core -> anal		4364756	0					
ANR	4367902	Identifier	core		4364756	0					
ANR	4367903	Identifier	anal		4364756	1					
ANR	4367904	Identifier	fcns		4364756	1					
ANR	4367905	PrimaryExpression	0		4364756	1					
ANR	4367906	CompoundStatement		512:47:13649:13649	4364756	1					
ANR	4367907	ExpressionStatement	"eprintf ( ""couldn't find any functions\\n"" )"	1518:5:42070:42111	4364756	0	True				
ANR	4367908	CallExpression	"eprintf ( ""couldn't find any functions\\n"" )"		4364756	0					
ANR	4367909	Callee	eprintf		4364756	0					
ANR	4367910	Identifier	eprintf		4364756	0					
ANR	4367911	ArgumentList	"""couldn't find any functions\\n"""		4364756	1					
ANR	4367912	Argument	"""couldn't find any functions\\n"""		4364756	0					
ANR	4367913	PrimaryExpression	"""couldn't find any functions\\n"""		4364756	0					
ANR	4367914	BreakStatement	break ;	1519:5:42118:42123	4364756	1	True				
ANR	4367915	Statement	r_list_foreach	1521:4:42135:42148	4364756	1	True				
ANR	4367916	Statement	(	1521:19:42150:42150	4364756	2	True				
ANR	4367917	Statement	core	1521:20:42151:42154	4364756	3	True				
ANR	4367918	Statement	->	1521:24:42155:42156	4364756	4	True				
ANR	4367919	Statement	anal	1521:26:42157:42160	4364756	5	True				
ANR	4367920	Statement	->	1521:30:42161:42162	4364756	6	True				
ANR	4367921	Statement	fcns	1521:32:42163:42166	4364756	7	True				
ANR	4367922	Statement	","	1521:36:42167:42167	4364756	8	True				
ANR	4367923	Statement	it	1521:38:42169:42170	4364756	9	True				
ANR	4367924	Statement	","	1521:40:42171:42171	4364756	10	True				
ANR	4367925	Statement	fcn	1521:42:42173:42175	4364756	11	True				
ANR	4367926	Statement	)	1521:45:42176:42176	4364756	12	True				
ANR	4367927	CompoundStatement		516:47:13764:13764	4364756	13					
ANR	4367928	IfStatement	if ( r_cons_is_breaked ( ) )		4364756	0					
ANR	4367929	Condition	r_cons_is_breaked ( )	1522:9:42189:42208	4364756	0	True				
ANR	4367930	CallExpression	r_cons_is_breaked ( )		4364756	0					
ANR	4367931	Callee	r_cons_is_breaked		4364756	0					
ANR	4367932	Identifier	r_cons_is_breaked		4364756	0					
ANR	4367933	ArgumentList			4364756	1					
ANR	4367934	CompoundStatement		517:31:13797:13797	4364756	1					
ANR	4367935	BreakStatement	break ;	1523:6:42219:42224	4364756	0	True				
ANR	4367936	ExpressionStatement	"link_struct_offset ( core , fcn )"	1525:5:42238:42268	4364756	1	True				
ANR	4367937	CallExpression	"link_struct_offset ( core , fcn )"		4364756	0					
ANR	4367938	Callee	link_struct_offset		4364756	0					
ANR	4367939	Identifier	link_struct_offset		4364756	0					
ANR	4367940	ArgumentList	core		4364756	1					
ANR	4367941	Argument	core		4364756	0					
ANR	4367942	Identifier	core		4364756	0					
ANR	4367943	Argument	fcn		4364756	1					
ANR	4367944	Identifier	fcn		4364756	0					
ANR	4367945	ExpressionStatement	free ( off )	1528:3:42284:42294	4364756	4	True				
ANR	4367946	CallExpression	free ( off )		4364756	0					
ANR	4367947	Callee	free		4364756	0					
ANR	4367948	Identifier	free		4364756	0					
ANR	4367949	ArgumentList	off		4364756	1					
ANR	4367950	Argument	off		4364756	0					
ANR	4367951	Identifier	off		4364756	0					
ANR	4367952	BreakStatement	break ;	1529:4:42300:42305	4364756	6	True				
ANR	4367953	Label	case ' ' :	1530:2:42309:42317	4364756	7	True				
ANR	4367954	CompoundStatement		558:3:14679:14773	4364756	8					
ANR	4367955	IdentifierDeclStatement	const char * off = NULL ;	1531:3:42324:42346	4364756	0	True				
ANR	4367956	IdentifierDecl	* off = NULL		4364756	0					
ANR	4367957	IdentifierDeclType	const char *		4364756	0					
ANR	4367958	Identifier	off		4364756	1					
ANR	4367959	AssignmentExpression	* off = NULL		4364756	2		=			
ANR	4367960	Identifier	NULL		4364756	0					
ANR	4367961	Identifier	NULL		4364756	1					
ANR	4367962	IdentifierDeclStatement	char * type = strdup ( r_str_trim_ro ( input + 2 ) ) ;	1532:3:42351:42398	4364756	1	True				
ANR	4367963	IdentifierDecl	* type = strdup ( r_str_trim_ro ( input + 2 ) )		4364756	0					
ANR	4367964	IdentifierDeclType	char *		4364756	0					
ANR	4367965	Identifier	type		4364756	1					
ANR	4367966	AssignmentExpression	* type = strdup ( r_str_trim_ro ( input + 2 ) )		4364756	2		=			
ANR	4367967	Identifier	type		4364756	0					
ANR	4367968	CallExpression	strdup ( r_str_trim_ro ( input + 2 ) )		4364756	1					
ANR	4367969	Callee	strdup		4364756	0					
ANR	4367970	Identifier	strdup		4364756	0					
ANR	4367971	ArgumentList	r_str_trim_ro ( input + 2 )		4364756	1					
ANR	4367972	Argument	r_str_trim_ro ( input + 2 )		4364756	0					
ANR	4367973	CallExpression	r_str_trim_ro ( input + 2 )		4364756	0					
ANR	4367974	Callee	r_str_trim_ro		4364756	0					
ANR	4367975	Identifier	r_str_trim_ro		4364756	0					
ANR	4367976	ArgumentList	input + 2		4364756	1					
ANR	4367977	Argument	input + 2		4364756	0					
ANR	4367978	AdditiveExpression	input + 2		4364756	0		+			
ANR	4367979	Identifier	input		4364756	0					
ANR	4367980	PrimaryExpression	2		4364756	1					
ANR	4367981	IdentifierDeclStatement	"char * idx = strchr ( type , ' ' ) ;"	1533:3:42403:42433	4364756	2	True				
ANR	4367982	IdentifierDecl	"* idx = strchr ( type , ' ' )"		4364756	0					
ANR	4367983	IdentifierDeclType	char *		4364756	0					
ANR	4367984	Identifier	idx		4364756	1					
ANR	4367985	AssignmentExpression	"* idx = strchr ( type , ' ' )"		4364756	2		=			
ANR	4367986	Identifier	idx		4364756	0					
ANR	4367987	CallExpression	"strchr ( type , ' ' )"		4364756	1					
ANR	4367988	Callee	strchr		4364756	0					
ANR	4367989	Identifier	strchr		4364756	0					
ANR	4367990	ArgumentList	type		4364756	1					
ANR	4367991	Argument	type		4364756	0					
ANR	4367992	Identifier	type		4364756	0					
ANR	4367993	Argument	' '		4364756	1					
ANR	4367994	PrimaryExpression	' '		4364756	0					
ANR	4367995	IfStatement	if ( idx )		4364756	3					
ANR	4367996	Condition	idx	1534:7:42442:42444	4364756	0	True				
ANR	4367997	Identifier	idx		4364756	0					
ANR	4367998	CompoundStatement		529:12:14033:14033	4364756	1					
ANR	4367999	ExpressionStatement	* idx ++ = 0	1535:4:42453:42463	4364756	0	True				
ANR	4368000	AssignmentExpression	* idx ++ = 0		4364756	0		=			
ANR	4368001	UnaryOperationExpression	* idx ++		4364756	0					
ANR	4368002	UnaryOperator	*		4364756	0					
ANR	4368003	PostIncDecOperationExpression	idx ++		4364756	1					
ANR	4368004	Identifier	idx		4364756	0					
ANR	4368005	IncDec	++		4364756	1					
ANR	4368006	PrimaryExpression	0		4364756	1					
ANR	4368007	ExpressionStatement	off = idx	1536:4:42469:42478	4364756	1	True				
ANR	4368008	AssignmentExpression	off = idx		4364756	0		=			
ANR	4368009	Identifier	off		4364756	0					
ANR	4368010	Identifier	idx		4364756	1					
ANR	4368011	IdentifierDeclStatement	"char * ptr = strchr ( type , '=' ) ;"	1538:3:42488:42518	4364756	4	True				
ANR	4368012	IdentifierDecl	"* ptr = strchr ( type , '=' )"		4364756	0					
ANR	4368013	IdentifierDeclType	char *		4364756	0					
ANR	4368014	Identifier	ptr		4364756	1					
ANR	4368015	AssignmentExpression	"* ptr = strchr ( type , '=' )"		4364756	2		=			
ANR	4368016	Identifier	ptr		4364756	0					
ANR	4368017	CallExpression	"strchr ( type , '=' )"		4364756	1					
ANR	4368018	Callee	strchr		4364756	0					
ANR	4368019	Identifier	strchr		4364756	0					
ANR	4368020	ArgumentList	type		4364756	1					
ANR	4368021	Argument	type		4364756	0					
ANR	4368022	Identifier	type		4364756	0					
ANR	4368023	Argument	'='		4364756	1					
ANR	4368024	PrimaryExpression	'='		4364756	0					
ANR	4368025	IdentifierDeclStatement	ut64 offimm = 0 ;	1539:3:42523:42538	4364756	5	True				
ANR	4368026	IdentifierDecl	offimm = 0		4364756	0					
ANR	4368027	IdentifierDeclType	ut64		4364756	0					
ANR	4368028	Identifier	offimm		4364756	1					
ANR	4368029	AssignmentExpression	offimm = 0		4364756	2		=			
ANR	4368030	Identifier	offimm		4364756	0					
ANR	4368031	PrimaryExpression	0		4364756	1					
ANR	4368032	IdentifierDeclStatement	int i = 0 ;	1540:3:42543:42552	4364756	6	True				
ANR	4368033	IdentifierDecl	i = 0		4364756	0					
ANR	4368034	IdentifierDeclType	int		4364756	0					
ANR	4368035	Identifier	i		4364756	1					
ANR	4368036	AssignmentExpression	i = 0		4364756	2		=			
ANR	4368037	Identifier	i		4364756	0					
ANR	4368038	PrimaryExpression	0		4364756	1					
ANR	4368039	IdentifierDeclStatement	ut64 addr ;	1541:3:42557:42566	4364756	7	True				
ANR	4368040	IdentifierDecl	addr		4364756	0					
ANR	4368041	IdentifierDeclType	ut64		4364756	0					
ANR	4368042	Identifier	addr		4364756	1					
ANR	4368043	IfStatement	if ( ptr )		4364756	8					
ANR	4368044	Condition	ptr	1543:7:42576:42578	4364756	0	True				
ANR	4368045	Identifier	ptr		4364756	0					
ANR	4368046	CompoundStatement		538:12:14167:14167	4364756	1					
ANR	4368047	ExpressionStatement	* ptr ++ = 0	1544:4:42587:42597	4364756	0	True				
ANR	4368048	AssignmentExpression	* ptr ++ = 0		4364756	0		=			
ANR	4368049	UnaryOperationExpression	* ptr ++		4364756	0					
ANR	4368050	UnaryOperator	*		4364756	0					
ANR	4368051	PostIncDecOperationExpression	ptr ++		4364756	1					
ANR	4368052	Identifier	ptr		4364756	0					
ANR	4368053	IncDec	++		4364756	1					
ANR	4368054	PrimaryExpression	0		4364756	1					
ANR	4368055	ExpressionStatement	r_str_trim ( ptr )	1545:4:42603:42619	4364756	1	True				
ANR	4368056	CallExpression	r_str_trim ( ptr )		4364756	0					
ANR	4368057	Callee	r_str_trim		4364756	0					
ANR	4368058	Identifier	r_str_trim		4364756	0					
ANR	4368059	ArgumentList	ptr		4364756	1					
ANR	4368060	Argument	ptr		4364756	0					
ANR	4368061	Identifier	ptr		4364756	0					
ANR	4368062	IfStatement	if ( ptr && * ptr )		4364756	2					
ANR	4368063	Condition	ptr && * ptr	1546:8:42629:42639	4364756	0	True				
ANR	4368064	AndExpression	ptr && * ptr		4364756	0		&&			
ANR	4368065	Identifier	ptr		4364756	0					
ANR	4368066	UnaryOperationExpression	* ptr		4364756	1					
ANR	4368067	UnaryOperator	*		4364756	0					
ANR	4368068	Identifier	ptr		4364756	1					
ANR	4368069	CompoundStatement		541:21:14228:14228	4364756	1					
ANR	4368070	ExpressionStatement	"addr = r_num_math ( core -> num , ptr )"	1547:5:42649:42683	4364756	0	True				
ANR	4368071	AssignmentExpression	"addr = r_num_math ( core -> num , ptr )"		4364756	0		=			
ANR	4368072	Identifier	addr		4364756	0					
ANR	4368073	CallExpression	"r_num_math ( core -> num , ptr )"		4364756	1					
ANR	4368074	Callee	r_num_math		4364756	0					
ANR	4368075	Identifier	r_num_math		4364756	0					
ANR	4368076	ArgumentList	core -> num		4364756	1					
ANR	4368077	Argument	core -> num		4364756	0					
ANR	4368078	PtrMemberAccess	core -> num		4364756	0					
ANR	4368079	Identifier	core		4364756	0					
ANR	4368080	Identifier	num		4364756	1					
ANR	4368081	Argument	ptr		4364756	1					
ANR	4368082	Identifier	ptr		4364756	0					
ANR	4368083	ElseStatement	else		4364756	0					
ANR	4368084	CompoundStatement		543:11:14282:14282	4364756	0					
ANR	4368085	ExpressionStatement	"eprintf ( ""address is unvalid\\n"" )"	1549:5:42703:42735	4364756	0	True				
ANR	4368086	CallExpression	"eprintf ( ""address is unvalid\\n"" )"		4364756	0					
ANR	4368087	Callee	eprintf		4364756	0					
ANR	4368088	Identifier	eprintf		4364756	0					
ANR	4368089	ArgumentList	"""address is unvalid\\n"""		4364756	1					
ANR	4368090	Argument	"""address is unvalid\\n"""		4364756	0					
ANR	4368091	PrimaryExpression	"""address is unvalid\\n"""		4364756	0					
ANR	4368092	ExpressionStatement	free ( type )	1550:5:42742:42753	4364756	1	True				
ANR	4368093	CallExpression	free ( type )		4364756	0					
ANR	4368094	Callee	free		4364756	0					
ANR	4368095	Identifier	free		4364756	0					
ANR	4368096	ArgumentList	type		4364756	1					
ANR	4368097	Argument	type		4364756	0					
ANR	4368098	Identifier	type		4364756	0					
ANR	4368099	BreakStatement	break ;	1551:5:42760:42765	4364756	2	True				
ANR	4368100	ElseStatement	else		4364756	0					
ANR	4368101	CompoundStatement		548:10:14369:14369	4364756	0					
ANR	4368102	ExpressionStatement	addr = core -> offset	1554:4:42789:42808	4364756	0	True				
ANR	4368103	AssignmentExpression	addr = core -> offset		4364756	0		=			
ANR	4368104	Identifier	addr		4364756	0					
ANR	4368105	PtrMemberAccess	core -> offset		4364756	1					
ANR	4368106	Identifier	core		4364756	0					
ANR	4368107	Identifier	offset		4364756	1					
ANR	4368108	ExpressionStatement	r_str_trim ( type )	1556:3:42818:42835	4364756	9	True				
ANR	4368109	CallExpression	r_str_trim ( type )		4364756	0					
ANR	4368110	Callee	r_str_trim		4364756	0					
ANR	4368111	Identifier	r_str_trim		4364756	0					
ANR	4368112	ArgumentList	type		4364756	1					
ANR	4368113	Argument	type		4364756	0					
ANR	4368114	Identifier	type		4364756	0					
ANR	4368115	IdentifierDeclStatement	RAsmOp asmop ;	1557:3:42840:42852	4364756	10	True				
ANR	4368116	IdentifierDecl	asmop		4364756	0					
ANR	4368117	IdentifierDeclType	RAsmOp		4364756	0					
ANR	4368118	Identifier	asmop		4364756	1					
ANR	4368119	IdentifierDeclStatement	RAnalOp op = { 0 } ;	1558:3:42857:42875	4364756	11	True				
ANR	4368120	IdentifierDecl	op = { 0 }		4364756	0					
ANR	4368121	IdentifierDeclType	RAnalOp		4364756	0					
ANR	4368122	Identifier	op		4364756	1					
ANR	4368123	AssignmentExpression	op = { 0 }		4364756	2		=			
ANR	4368124	Identifier	op		4364756	0					
ANR	4368125	InitializerList	0		4364756	1					
ANR	4368126	PrimaryExpression	0		4364756	0					
ANR	4368127	IdentifierDeclStatement	ut8 code [ 128 ] = { 0 } ;	1559:3:42880:42901	4364756	12	True				
ANR	4368128	IdentifierDecl	code [ 128 ] = { 0 }		4364756	0					
ANR	4368129	IdentifierDeclType	ut8 [ 128 ]		4364756	0					
ANR	4368130	Identifier	code		4364756	1					
ANR	4368131	PrimaryExpression	128		4364756	2					
ANR	4368132	AssignmentExpression	code [ 128 ] = { 0 }		4364756	3		=			
ANR	4368133	Identifier	code		4364756	0					
ANR	4368134	InitializerList	0		4364756	1					
ANR	4368135	PrimaryExpression	0		4364756	0					
ANR	4368136	ExpressionStatement	"( void ) r_io_read_at ( core -> io , core -> offset , code , sizeof ( code ) )"	1560:3:42906:42970	4364756	13	True				
ANR	4368137	CastExpression	"( void ) r_io_read_at ( core -> io , core -> offset , code , sizeof ( code ) )"		4364756	0					
ANR	4368138	CastTarget	void		4364756	0					
ANR	4368139	CallExpression	"r_io_read_at ( core -> io , core -> offset , code , sizeof ( code ) )"		4364756	1					
ANR	4368140	Callee	r_io_read_at		4364756	0					
ANR	4368141	Identifier	r_io_read_at		4364756	0					
ANR	4368142	ArgumentList	core -> io		4364756	1					
ANR	4368143	Argument	core -> io		4364756	0					
ANR	4368144	PtrMemberAccess	core -> io		4364756	0					
ANR	4368145	Identifier	core		4364756	0					
ANR	4368146	Identifier	io		4364756	1					
ANR	4368147	Argument	core -> offset		4364756	1					
ANR	4368148	PtrMemberAccess	core -> offset		4364756	0					
ANR	4368149	Identifier	core		4364756	0					
ANR	4368150	Identifier	offset		4364756	1					
ANR	4368151	Argument	code		4364756	2					
ANR	4368152	Identifier	code		4364756	0					
ANR	4368153	Argument	sizeof ( code )		4364756	3					
ANR	4368154	SizeofExpression	sizeof ( code )		4364756	0					
ANR	4368155	Sizeof	sizeof		4364756	0					
ANR	4368156	SizeofOperand	code		4364756	1					
ANR	4368157	ExpressionStatement	"r_asm_set_pc ( core -> assembler , addr )"	1561:3:42975:43011	4364756	14	True				
ANR	4368158	CallExpression	"r_asm_set_pc ( core -> assembler , addr )"		4364756	0					
ANR	4368159	Callee	r_asm_set_pc		4364756	0					
ANR	4368160	Identifier	r_asm_set_pc		4364756	0					
ANR	4368161	ArgumentList	core -> assembler		4364756	1					
ANR	4368162	Argument	core -> assembler		4364756	0					
ANR	4368163	PtrMemberAccess	core -> assembler		4364756	0					
ANR	4368164	Identifier	core		4364756	0					
ANR	4368165	Identifier	assembler		4364756	1					
ANR	4368166	Argument	addr		4364756	1					
ANR	4368167	Identifier	addr		4364756	0					
ANR	4368168	ExpressionStatement	"( void ) r_asm_disassemble ( core -> assembler , & asmop , code , core -> blocksize )"	1562:3:43016:43088	4364756	15	True				
ANR	4368169	CastExpression	"( void ) r_asm_disassemble ( core -> assembler , & asmop , code , core -> blocksize )"		4364756	0					
ANR	4368170	CastTarget	void		4364756	0					
ANR	4368171	CallExpression	"r_asm_disassemble ( core -> assembler , & asmop , code , core -> blocksize )"		4364756	1					
ANR	4368172	Callee	r_asm_disassemble		4364756	0					
ANR	4368173	Identifier	r_asm_disassemble		4364756	0					
ANR	4368174	ArgumentList	core -> assembler		4364756	1					
ANR	4368175	Argument	core -> assembler		4364756	0					
ANR	4368176	PtrMemberAccess	core -> assembler		4364756	0					
ANR	4368177	Identifier	core		4364756	0					
ANR	4368178	Identifier	assembler		4364756	1					
ANR	4368179	Argument	& asmop		4364756	1					
ANR	4368180	UnaryOperationExpression	& asmop		4364756	0					
ANR	4368181	UnaryOperator	&		4364756	0					
ANR	4368182	Identifier	asmop		4364756	1					
ANR	4368183	Argument	code		4364756	2					
ANR	4368184	Identifier	code		4364756	0					
ANR	4368185	Argument	core -> blocksize		4364756	3					
ANR	4368186	PtrMemberAccess	core -> blocksize		4364756	0					
ANR	4368187	Identifier	core		4364756	0					
ANR	4368188	Identifier	blocksize		4364756	1					
ANR	4368189	IdentifierDeclStatement	"int ret = r_anal_op ( core -> anal , & op , core -> offset , code , core -> blocksize , R_ANAL_OP_MASK_VAL ) ;"	1563:3:43093:43187	4364756	16	True				
ANR	4368190	IdentifierDecl	"ret = r_anal_op ( core -> anal , & op , core -> offset , code , core -> blocksize , R_ANAL_OP_MASK_VAL )"		4364756	0					
ANR	4368191	IdentifierDeclType	int		4364756	0					
ANR	4368192	Identifier	ret		4364756	1					
ANR	4368193	AssignmentExpression	"ret = r_anal_op ( core -> anal , & op , core -> offset , code , core -> blocksize , R_ANAL_OP_MASK_VAL )"		4364756	2		=			
ANR	4368194	Identifier	ret		4364756	0					
ANR	4368195	CallExpression	"r_anal_op ( core -> anal , & op , core -> offset , code , core -> blocksize , R_ANAL_OP_MASK_VAL )"		4364756	1					
ANR	4368196	Callee	r_anal_op		4364756	0					
ANR	4368197	Identifier	r_anal_op		4364756	0					
ANR	4368198	ArgumentList	core -> anal		4364756	1					
ANR	4368199	Argument	core -> anal		4364756	0					
ANR	4368200	PtrMemberAccess	core -> anal		4364756	0					
ANR	4368201	Identifier	core		4364756	0					
ANR	4368202	Identifier	anal		4364756	1					
ANR	4368203	Argument	& op		4364756	1					
ANR	4368204	UnaryOperationExpression	& op		4364756	0					
ANR	4368205	UnaryOperator	&		4364756	0					
ANR	4368206	Identifier	op		4364756	1					
ANR	4368207	Argument	core -> offset		4364756	2					
ANR	4368208	PtrMemberAccess	core -> offset		4364756	0					
ANR	4368209	Identifier	core		4364756	0					
ANR	4368210	Identifier	offset		4364756	1					
ANR	4368211	Argument	code		4364756	3					
ANR	4368212	Identifier	code		4364756	0					
ANR	4368213	Argument	core -> blocksize		4364756	4					
ANR	4368214	PtrMemberAccess	core -> blocksize		4364756	0					
ANR	4368215	Identifier	core		4364756	0					
ANR	4368216	Identifier	blocksize		4364756	1					
ANR	4368217	Argument	R_ANAL_OP_MASK_VAL		4364756	5					
ANR	4368218	Identifier	R_ANAL_OP_MASK_VAL		4364756	0					
ANR	4368219	IfStatement	if ( ret >= 0 )		4364756	17					
ANR	4368220	Condition	ret >= 0	1564:7:43196:43203	4364756	0	True				
ANR	4368221	RelationalExpression	ret >= 0		4364756	0		>=			
ANR	4368222	Identifier	ret		4364756	0					
ANR	4368223	PrimaryExpression	0		4364756	1					
ANR	4368224	CompoundStatement		559:17:14792:14792	4364756	1					
ANR	4368225	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		4364756	0					
ANR	4368226	ForInit	i = 0 ;	1566:9:43267:43272	4364756	0	True				
ANR	4368227	AssignmentExpression	i = 0		4364756	0		=			
ANR	4368228	Identifier	i		4364756	0					
ANR	4368229	PrimaryExpression	0		4364756	1					
ANR	4368230	Condition	i < 3	1566:16:43274:43278	4364756	1	True				
ANR	4368231	RelationalExpression	i < 3		4364756	0		<			
ANR	4368232	Identifier	i		4364756	0					
ANR	4368233	PrimaryExpression	3		4364756	1					
ANR	4368234	PostIncDecOperationExpression	i ++	1566:23:43281:43283	4364756	2	True				
ANR	4368235	Identifier	i		4364756	0					
ANR	4368236	IncDec	++		4364756	1					
ANR	4368237	CompoundStatement		561:28:14872:14872	4364756	3					
ANR	4368238	IfStatement	if ( op . src [ i ] )		4364756	0					
ANR	4368239	Condition	op . src [ i ]	1567:9:43297:43305	4364756	0	True				
ANR	4368240	ArrayIndexing	op . src [ i ]		4364756	0					
ANR	4368241	MemberAccess	op . src		4364756	0					
ANR	4368242	Identifier	op		4364756	0					
ANR	4368243	Identifier	src		4364756	1					
ANR	4368244	Identifier	i		4364756	1					
ANR	4368245	CompoundStatement		562:20:14894:14894	4364756	1					
ANR	4368246	IfStatement	if ( op . src [ i ] -> imm )		4364756	0					
ANR	4368247	Condition	op . src [ i ] -> imm	1568:10:43320:43333	4364756	0	True				
ANR	4368248	PtrMemberAccess	op . src [ i ] -> imm		4364756	0					
ANR	4368249	ArrayIndexing	op . src [ i ]		4364756	0					
ANR	4368250	MemberAccess	op . src		4364756	0					
ANR	4368251	Identifier	op		4364756	0					
ANR	4368252	Identifier	src		4364756	1					
ANR	4368253	Identifier	i		4364756	1					
ANR	4368254	Identifier	imm		4364756	1					
ANR	4368255	CompoundStatement		563:26:14922:14922	4364756	1					
ANR	4368256	ExpressionStatement	offimm = op . src [ i ] -> imm	1569:7:43345:43368	4364756	0	True				
ANR	4368257	AssignmentExpression	offimm = op . src [ i ] -> imm		4364756	0		=			
ANR	4368258	Identifier	offimm		4364756	0					
ANR	4368259	PtrMemberAccess	op . src [ i ] -> imm		4364756	1					
ANR	4368260	ArrayIndexing	op . src [ i ]		4364756	0					
ANR	4368261	MemberAccess	op . src		4364756	0					
ANR	4368262	Identifier	op		4364756	0					
ANR	4368263	Identifier	src		4364756	1					
ANR	4368264	Identifier	i		4364756	1					
ANR	4368265	Identifier	imm		4364756	1					
ANR	4368266	ElseStatement	else		4364756	0					
ANR	4368267	IfStatement	if ( op . src [ i ] -> delta )		4364756	0					
ANR	4368268	Condition	op . src [ i ] -> delta	1570:17:43387:43402	4364756	0	True				
ANR	4368269	PtrMemberAccess	op . src [ i ] -> delta		4364756	0					
ANR	4368270	ArrayIndexing	op . src [ i ]		4364756	0					
ANR	4368271	MemberAccess	op . src		4364756	0					
ANR	4368272	Identifier	op		4364756	0					
ANR	4368273	Identifier	src		4364756	1					
ANR	4368274	Identifier	i		4364756	1					
ANR	4368275	Identifier	delta		4364756	1					
ANR	4368276	CompoundStatement		565:35:14991:14991	4364756	1					
ANR	4368277	ExpressionStatement	offimm = op . src [ i ] -> delta	1571:7:43414:43439	4364756	0	True				
ANR	4368278	AssignmentExpression	offimm = op . src [ i ] -> delta		4364756	0		=			
ANR	4368279	Identifier	offimm		4364756	0					
ANR	4368280	PtrMemberAccess	op . src [ i ] -> delta		4364756	1					
ANR	4368281	ArrayIndexing	op . src [ i ]		4364756	0					
ANR	4368282	MemberAccess	op . src		4364756	0					
ANR	4368283	Identifier	op		4364756	0					
ANR	4368284	Identifier	src		4364756	1					
ANR	4368285	Identifier	i		4364756	1					
ANR	4368286	Identifier	delta		4364756	1					
ANR	4368287	IfStatement	if ( ! offimm && op . dst )		4364756	1					
ANR	4368288	Condition	! offimm && op . dst	1575:8:43470:43486	4364756	0	True				
ANR	4368289	AndExpression	! offimm && op . dst		4364756	0		&&			
ANR	4368290	UnaryOperationExpression	! offimm		4364756	0					
ANR	4368291	UnaryOperator	!		4364756	0					
ANR	4368292	Identifier	offimm		4364756	1					
ANR	4368293	MemberAccess	op . dst		4364756	1					
ANR	4368294	Identifier	op		4364756	0					
ANR	4368295	Identifier	dst		4364756	1					
ANR	4368296	CompoundStatement		570:27:15075:15075	4364756	1					
ANR	4368297	IfStatement	if ( op . dst -> imm )		4364756	0					
ANR	4368298	Condition	op . dst -> imm	1576:9:43500:43510	4364756	0	True				
ANR	4368299	PtrMemberAccess	op . dst -> imm		4364756	0					
ANR	4368300	MemberAccess	op . dst		4364756	0					
ANR	4368301	Identifier	op		4364756	0					
ANR	4368302	Identifier	dst		4364756	1					
ANR	4368303	Identifier	imm		4364756	1					
ANR	4368304	CompoundStatement		571:22:15099:15099	4364756	1					
ANR	4368305	ExpressionStatement	offimm = op . dst -> imm	1577:6:43521:43541	4364756	0	True				
ANR	4368306	AssignmentExpression	offimm = op . dst -> imm		4364756	0		=			
ANR	4368307	Identifier	offimm		4364756	0					
ANR	4368308	PtrMemberAccess	op . dst -> imm		4364756	1					
ANR	4368309	MemberAccess	op . dst		4364756	0					
ANR	4368310	Identifier	op		4364756	0					
ANR	4368311	Identifier	dst		4364756	1					
ANR	4368312	Identifier	imm		4364756	1					
ANR	4368313	ElseStatement	else		4364756	0					
ANR	4368314	IfStatement	if ( op . dst -> delta )		4364756	0					
ANR	4368315	Condition	op . dst -> delta	1578:16:43559:43571	4364756	0	True				
ANR	4368316	PtrMemberAccess	op . dst -> delta		4364756	0					
ANR	4368317	MemberAccess	op . dst		4364756	0					
ANR	4368318	Identifier	op		4364756	0					
ANR	4368319	Identifier	dst		4364756	1					
ANR	4368320	Identifier	delta		4364756	1					
ANR	4368321	CompoundStatement		573:31:15160:15160	4364756	1					
ANR	4368322	ExpressionStatement	offimm = op . dst -> delta	1579:6:43582:43604	4364756	0	True				
ANR	4368323	AssignmentExpression	offimm = op . dst -> delta		4364756	0		=			
ANR	4368324	Identifier	offimm		4364756	0					
ANR	4368325	PtrMemberAccess	op . dst -> delta		4364756	1					
ANR	4368326	MemberAccess	op . dst		4364756	0					
ANR	4368327	Identifier	op		4364756	0					
ANR	4368328	Identifier	dst		4364756	1					
ANR	4368329	Identifier	delta		4364756	1					
ANR	4368330	IfStatement	if ( offimm != 0 )		4364756	2					
ANR	4368331	Condition	offimm != 0	1582:8:43627:43637	4364756	0	True				
ANR	4368332	EqualityExpression	offimm != 0		4364756	0		!=			
ANR	4368333	Identifier	offimm		4364756	0					
ANR	4368334	PrimaryExpression	0		4364756	1					
ANR	4368335	CompoundStatement		584:5:15427:15445	4364756	1					
ANR	4368336	IfStatement	if ( off )		4364756	0					
ANR	4368337	Condition	off	1583:9:43651:43653	4364756	0	True				
ANR	4368338	Identifier	off		4364756	0					
ANR	4368339	CompoundStatement		578:14:15242:15242	4364756	1					
ANR	4368340	ExpressionStatement	"offimm += r_num_math ( NULL , off )"	1584:6:43664:43696	4364756	0	True				
ANR	4368341	AssignmentExpression	"offimm += r_num_math ( NULL , off )"		4364756	0		+=			
ANR	4368342	Identifier	offimm		4364756	0					
ANR	4368343	CallExpression	"r_num_math ( NULL , off )"		4364756	1					
ANR	4368344	Callee	r_num_math		4364756	0					
ANR	4368345	Identifier	r_num_math		4364756	0					
ANR	4368346	ArgumentList	NULL		4364756	1					
ANR	4368347	Argument	NULL		4364756	0					
ANR	4368348	Identifier	NULL		4364756	0					
ANR	4368349	Argument	off		4364756	1					
ANR	4368350	Identifier	off		4364756	0					
ANR	4368351	IdentifierDeclStatement	"RList * otypes = r_type_get_by_offset ( TDB , offimm ) ;"	1587:5:43762:43812	4364756	1	True				
ANR	4368352	IdentifierDecl	"* otypes = r_type_get_by_offset ( TDB , offimm )"		4364756	0					
ANR	4368353	IdentifierDeclType	RList *		4364756	0					
ANR	4368354	Identifier	otypes		4364756	1					
ANR	4368355	AssignmentExpression	"* otypes = r_type_get_by_offset ( TDB , offimm )"		4364756	2		=			
ANR	4368356	Identifier	otypes		4364756	0					
ANR	4368357	CallExpression	"r_type_get_by_offset ( TDB , offimm )"		4364756	1					
ANR	4368358	Callee	r_type_get_by_offset		4364756	0					
ANR	4368359	Identifier	r_type_get_by_offset		4364756	0					
ANR	4368360	ArgumentList	TDB		4364756	1					
ANR	4368361	Argument	TDB		4364756	0					
ANR	4368362	Identifier	TDB		4364756	0					
ANR	4368363	Argument	offimm		4364756	1					
ANR	4368364	Identifier	offimm		4364756	0					
ANR	4368365	IdentifierDeclStatement	RListIter * iter ;	1588:5:43819:43834	4364756	2	True				
ANR	4368366	IdentifierDecl	* iter		4364756	0					
ANR	4368367	IdentifierDeclType	RListIter *		4364756	0					
ANR	4368368	Identifier	iter		4364756	1					
ANR	4368369	IdentifierDeclStatement	char * otype = NULL ;	1589:5:43841:43859	4364756	3	True				
ANR	4368370	IdentifierDecl	* otype = NULL		4364756	0					
ANR	4368371	IdentifierDeclType	char *		4364756	0					
ANR	4368372	Identifier	otype		4364756	1					
ANR	4368373	AssignmentExpression	* otype = NULL		4364756	2		=			
ANR	4368374	Identifier	NULL		4364756	0					
ANR	4368375	Identifier	NULL		4364756	1					
ANR	4368376	Statement	r_list_foreach	1590:5:43866:43879	4364756	4	True				
ANR	4368377	Statement	(	1590:20:43881:43881	4364756	5	True				
ANR	4368378	Statement	otypes	1590:21:43882:43887	4364756	6	True				
ANR	4368379	Statement	","	1590:27:43888:43888	4364756	7	True				
ANR	4368380	Statement	iter	1590:29:43890:43893	4364756	8	True				
ANR	4368381	Statement	","	1590:33:43894:43894	4364756	9	True				
ANR	4368382	Statement	otype	1590:35:43896:43900	4364756	10	True				
ANR	4368383	Statement	)	1590:40:43901:43901	4364756	11	True				
ANR	4368384	CompoundStatement		585:42:15489:15489	4364756	12					
ANR	4368385	IfStatement	"if ( ! strcmp ( type , otype ) )"		4364756	0					
ANR	4368386	Condition	"! strcmp ( type , otype )"	1592:10:43986:44006	4364756	0	True				
ANR	4368387	UnaryOperationExpression	"! strcmp ( type , otype )"		4364756	0					
ANR	4368388	UnaryOperator	!		4364756	0					
ANR	4368389	CallExpression	"strcmp ( type , otype )"		4364756	1					
ANR	4368390	Callee	strcmp		4364756	0					
ANR	4368391	Identifier	strcmp		4364756	0					
ANR	4368392	ArgumentList	type		4364756	1					
ANR	4368393	Argument	type		4364756	0					
ANR	4368394	Identifier	type		4364756	0					
ANR	4368395	Argument	otype		4364756	1					
ANR	4368396	Identifier	otype		4364756	0					
ANR	4368397	CompoundStatement		587:33:15595:15595	4364756	1					
ANR	4368398	ExpressionStatement	"r_type_link_offset ( TDB , type , addr )"	1594:7:44070:44106	4364756	0	True				
ANR	4368399	CallExpression	"r_type_link_offset ( TDB , type , addr )"		4364756	0					
ANR	4368400	Callee	r_type_link_offset		4364756	0					
ANR	4368401	Identifier	r_type_link_offset		4364756	0					
ANR	4368402	ArgumentList	TDB		4364756	1					
ANR	4368403	Argument	TDB		4364756	0					
ANR	4368404	Identifier	TDB		4364756	0					
ANR	4368405	Argument	type		4364756	1					
ANR	4368406	Identifier	type		4364756	0					
ANR	4368407	Argument	addr		4364756	2					
ANR	4368408	Identifier	addr		4364756	0					
ANR	4368409	ExpressionStatement	"r_anal_hint_set_offset ( core -> anal , addr , otype )"	1595:7:44115:44163	4364756	1	True				
ANR	4368410	CallExpression	"r_anal_hint_set_offset ( core -> anal , addr , otype )"		4364756	0					
ANR	4368411	Callee	r_anal_hint_set_offset		4364756	0					
ANR	4368412	Identifier	r_anal_hint_set_offset		4364756	0					
ANR	4368413	ArgumentList	core -> anal		4364756	1					
ANR	4368414	Argument	core -> anal		4364756	0					
ANR	4368415	PtrMemberAccess	core -> anal		4364756	0					
ANR	4368416	Identifier	core		4364756	0					
ANR	4368417	Identifier	anal		4364756	1					
ANR	4368418	Argument	addr		4364756	1					
ANR	4368419	Identifier	addr		4364756	0					
ANR	4368420	Argument	otype		4364756	2					
ANR	4368421	Identifier	otype		4364756	0					
ANR	4368422	BreakStatement	break ;	1596:7:44172:44177	4364756	2	True				
ANR	4368423	IfStatement	if ( ! otype )		4364756	13					
ANR	4368424	Condition	! otype	1599:9:44203:44208	4364756	0	True				
ANR	4368425	UnaryOperationExpression	! otype		4364756	0					
ANR	4368426	UnaryOperator	!		4364756	0					
ANR	4368427	Identifier	otype		4364756	1					
ANR	4368428	CompoundStatement		594:17:15797:15797	4364756	1					
ANR	4368429	ExpressionStatement	"eprintf ( ""wrong type for opcode offset\\n"" )"	1600:6:44219:44261	4364756	0	True				
ANR	4368430	CallExpression	"eprintf ( ""wrong type for opcode offset\\n"" )"		4364756	0					
ANR	4368431	Callee	eprintf		4364756	0					
ANR	4368432	Identifier	eprintf		4364756	0					
ANR	4368433	ArgumentList	"""wrong type for opcode offset\\n"""		4364756	1					
ANR	4368434	Argument	"""wrong type for opcode offset\\n"""		4364756	0					
ANR	4368435	PrimaryExpression	"""wrong type for opcode offset\\n"""		4364756	0					
ANR	4368436	ExpressionStatement	r_list_free ( otypes )	1602:5:44275:44295	4364756	14	True				
ANR	4368437	CallExpression	r_list_free ( otypes )		4364756	0					
ANR	4368438	Callee	r_list_free		4364756	0					
ANR	4368439	Identifier	r_list_free		4364756	0					
ANR	4368440	ArgumentList	otypes		4364756	1					
ANR	4368441	Argument	otypes		4364756	0					
ANR	4368442	Identifier	otypes		4364756	0					
ANR	4368443	ExpressionStatement	r_anal_op_fini ( & op )	1605:3:44311:44331	4364756	18	True				
ANR	4368444	CallExpression	r_anal_op_fini ( & op )		4364756	0					
ANR	4368445	Callee	r_anal_op_fini		4364756	0					
ANR	4368446	Identifier	r_anal_op_fini		4364756	0					
ANR	4368447	ArgumentList	& op		4364756	1					
ANR	4368448	Argument	& op		4364756	0					
ANR	4368449	UnaryOperationExpression	& op		4364756	0					
ANR	4368450	UnaryOperator	&		4364756	0					
ANR	4368451	Identifier	op		4364756	1					
ANR	4368452	ExpressionStatement	free ( type )	1606:3:44336:44347	4364756	19	True				
ANR	4368453	CallExpression	free ( type )		4364756	0					
ANR	4368454	Callee	free		4364756	0					
ANR	4368455	Identifier	free		4364756	0					
ANR	4368456	ArgumentList	type		4364756	1					
ANR	4368457	Argument	type		4364756	0					
ANR	4368458	Identifier	type		4364756	0					
ANR	4368459	BreakStatement	break ;	1608:2:44355:44360	4364756	9	True				
ANR	4368460	Label	case '?' :	1609:2:44364:44372	4364756	10	True				
ANR	4368461	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ta )"	1610:3:44377:44412	4364756	11	True				
ANR	4368462	CallExpression	"r_core_cmd_help ( core , help_msg_ta )"		4364756	0					
ANR	4368463	Callee	r_core_cmd_help		4364756	0					
ANR	4368464	Identifier	r_core_cmd_help		4364756	0					
ANR	4368465	ArgumentList	core		4364756	1					
ANR	4368466	Argument	core		4364756	0					
ANR	4368467	Identifier	core		4364756	0					
ANR	4368468	Argument	help_msg_ta		4364756	1					
ANR	4368469	Identifier	help_msg_ta		4364756	0					
ANR	4368470	BreakStatement	break ;	1611:3:44417:44422	4364756	12	True				
ANR	4368471	BreakStatement	break ;	1613:2:44430:44435	4364756	38	True				
ANR	4368472	Label	case 'l' :	1615:1:44473:44481	4364756	39	True				
ANR	4368473	SwitchStatement	switch ( input [ 1 ] )		4364756	40					
ANR	4368474	Condition	input [ 1 ]	1616:10:44501:44508	4364756	0	True				
ANR	4368475	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4368476	Identifier	input		4364756	0					
ANR	4368477	PrimaryExpression	1		4364756	1					
ANR	4368478	CompoundStatement		611:20:16097:16097	4364756	1					
ANR	4368479	Label	case '?' :	1617:2:44515:44523	4364756	0	True				
ANR	4368480	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tl )"	1618:3:44528:44563	4364756	1	True				
ANR	4368481	CallExpression	"r_core_cmd_help ( core , help_msg_tl )"		4364756	0					
ANR	4368482	Callee	r_core_cmd_help		4364756	0					
ANR	4368483	Identifier	r_core_cmd_help		4364756	0					
ANR	4368484	ArgumentList	core		4364756	1					
ANR	4368485	Argument	core		4364756	0					
ANR	4368486	Identifier	core		4364756	0					
ANR	4368487	Argument	help_msg_tl		4364756	1					
ANR	4368488	Identifier	help_msg_tl		4364756	0					
ANR	4368489	BreakStatement	break ;	1619:3:44568:44573	4364756	2	True				
ANR	4368490	Label	case ' ' :	1620:2:44577:44585	4364756	3	True				
ANR	4368491	CompoundStatement		634:3:16532:16566	4364756	4					
ANR	4368492	IdentifierDeclStatement	char * type = strdup ( input + 2 ) ;	1621:3:44592:44623	4364756	0	True				
ANR	4368493	IdentifierDecl	* type = strdup ( input + 2 )		4364756	0					
ANR	4368494	IdentifierDeclType	char *		4364756	0					
ANR	4368495	Identifier	type		4364756	1					
ANR	4368496	AssignmentExpression	* type = strdup ( input + 2 )		4364756	2		=			
ANR	4368497	Identifier	type		4364756	0					
ANR	4368498	CallExpression	strdup ( input + 2 )		4364756	1					
ANR	4368499	Callee	strdup		4364756	0					
ANR	4368500	Identifier	strdup		4364756	0					
ANR	4368501	ArgumentList	input + 2		4364756	1					
ANR	4368502	Argument	input + 2		4364756	0					
ANR	4368503	AdditiveExpression	input + 2		4364756	0		+			
ANR	4368504	Identifier	input		4364756	0					
ANR	4368505	PrimaryExpression	2		4364756	1					
ANR	4368506	IdentifierDeclStatement	"char * ptr = strchr ( type , '=' ) ;"	1622:3:44628:44658	4364756	1	True				
ANR	4368507	IdentifierDecl	"* ptr = strchr ( type , '=' )"		4364756	0					
ANR	4368508	IdentifierDeclType	char *		4364756	0					
ANR	4368509	Identifier	ptr		4364756	1					
ANR	4368510	AssignmentExpression	"* ptr = strchr ( type , '=' )"		4364756	2		=			
ANR	4368511	Identifier	ptr		4364756	0					
ANR	4368512	CallExpression	"strchr ( type , '=' )"		4364756	1					
ANR	4368513	Callee	strchr		4364756	0					
ANR	4368514	Identifier	strchr		4364756	0					
ANR	4368515	ArgumentList	type		4364756	1					
ANR	4368516	Argument	type		4364756	0					
ANR	4368517	Identifier	type		4364756	0					
ANR	4368518	Argument	'='		4364756	1					
ANR	4368519	PrimaryExpression	'='		4364756	0					
ANR	4368520	IdentifierDeclStatement	ut64 addr ;	1623:3:44663:44672	4364756	2	True				
ANR	4368521	IdentifierDecl	addr		4364756	0					
ANR	4368522	IdentifierDeclType	ut64		4364756	0					
ANR	4368523	Identifier	addr		4364756	1					
ANR	4368524	IfStatement	if ( ptr )		4364756	3					
ANR	4368525	Condition	ptr	1625:7:44682:44684	4364756	0	True				
ANR	4368526	Identifier	ptr		4364756	0					
ANR	4368527	CompoundStatement		620:12:16273:16273	4364756	1					
ANR	4368528	ExpressionStatement	* ptr ++ = 0	1626:4:44693:44703	4364756	0	True				
ANR	4368529	AssignmentExpression	* ptr ++ = 0		4364756	0		=			
ANR	4368530	UnaryOperationExpression	* ptr ++		4364756	0					
ANR	4368531	UnaryOperator	*		4364756	0					
ANR	4368532	PostIncDecOperationExpression	ptr ++		4364756	1					
ANR	4368533	Identifier	ptr		4364756	0					
ANR	4368534	IncDec	++		4364756	1					
ANR	4368535	PrimaryExpression	0		4364756	1					
ANR	4368536	ExpressionStatement	r_str_trim ( ptr )	1627:4:44709:44725	4364756	1	True				
ANR	4368537	CallExpression	r_str_trim ( ptr )		4364756	0					
ANR	4368538	Callee	r_str_trim		4364756	0					
ANR	4368539	Identifier	r_str_trim		4364756	0					
ANR	4368540	ArgumentList	ptr		4364756	1					
ANR	4368541	Argument	ptr		4364756	0					
ANR	4368542	Identifier	ptr		4364756	0					
ANR	4368543	IfStatement	if ( ptr && * ptr )		4364756	2					
ANR	4368544	Condition	ptr && * ptr	1628:8:44735:44745	4364756	0	True				
ANR	4368545	AndExpression	ptr && * ptr		4364756	0		&&			
ANR	4368546	Identifier	ptr		4364756	0					
ANR	4368547	UnaryOperationExpression	* ptr		4364756	1					
ANR	4368548	UnaryOperator	*		4364756	0					
ANR	4368549	Identifier	ptr		4364756	1					
ANR	4368550	CompoundStatement		623:21:16334:16334	4364756	1					
ANR	4368551	ExpressionStatement	"addr = r_num_math ( core -> num , ptr )"	1629:5:44755:44789	4364756	0	True				
ANR	4368552	AssignmentExpression	"addr = r_num_math ( core -> num , ptr )"		4364756	0		=			
ANR	4368553	Identifier	addr		4364756	0					
ANR	4368554	CallExpression	"r_num_math ( core -> num , ptr )"		4364756	1					
ANR	4368555	Callee	r_num_math		4364756	0					
ANR	4368556	Identifier	r_num_math		4364756	0					
ANR	4368557	ArgumentList	core -> num		4364756	1					
ANR	4368558	Argument	core -> num		4364756	0					
ANR	4368559	PtrMemberAccess	core -> num		4364756	0					
ANR	4368560	Identifier	core		4364756	0					
ANR	4368561	Identifier	num		4364756	1					
ANR	4368562	Argument	ptr		4364756	1					
ANR	4368563	Identifier	ptr		4364756	0					
ANR	4368564	ElseStatement	else		4364756	0					
ANR	4368565	CompoundStatement		625:11:16388:16388	4364756	0					
ANR	4368566	ExpressionStatement	"eprintf ( ""address is unvalid\\n"" )"	1631:5:44809:44841	4364756	0	True				
ANR	4368567	CallExpression	"eprintf ( ""address is unvalid\\n"" )"		4364756	0					
ANR	4368568	Callee	eprintf		4364756	0					
ANR	4368569	Identifier	eprintf		4364756	0					
ANR	4368570	ArgumentList	"""address is unvalid\\n"""		4364756	1					
ANR	4368571	Argument	"""address is unvalid\\n"""		4364756	0					
ANR	4368572	PrimaryExpression	"""address is unvalid\\n"""		4364756	0					
ANR	4368573	ExpressionStatement	free ( type )	1632:5:44848:44859	4364756	1	True				
ANR	4368574	CallExpression	free ( type )		4364756	0					
ANR	4368575	Callee	free		4364756	0					
ANR	4368576	Identifier	free		4364756	0					
ANR	4368577	ArgumentList	type		4364756	1					
ANR	4368578	Argument	type		4364756	0					
ANR	4368579	Identifier	type		4364756	0					
ANR	4368580	BreakStatement	break ;	1633:5:44866:44871	4364756	2	True				
ANR	4368581	ElseStatement	else		4364756	0					
ANR	4368582	CompoundStatement		630:10:16475:16475	4364756	0					
ANR	4368583	ExpressionStatement	addr = core -> offset	1636:4:44895:44914	4364756	0	True				
ANR	4368584	AssignmentExpression	addr = core -> offset		4364756	0		=			
ANR	4368585	Identifier	addr		4364756	0					
ANR	4368586	PtrMemberAccess	core -> offset		4364756	1					
ANR	4368587	Identifier	core		4364756	0					
ANR	4368588	Identifier	offset		4364756	1					
ANR	4368589	ExpressionStatement	r_str_trim ( type )	1638:3:44924:44941	4364756	4	True				
ANR	4368590	CallExpression	r_str_trim ( type )		4364756	0					
ANR	4368591	Callee	r_str_trim		4364756	0					
ANR	4368592	Identifier	r_str_trim		4364756	0					
ANR	4368593	ArgumentList	type		4364756	1					
ANR	4368594	Argument	type		4364756	0					
ANR	4368595	Identifier	type		4364756	0					
ANR	4368596	IdentifierDeclStatement	"char * tmp = sdb_get ( TDB , type , 0 ) ;"	1639:3:44946:44980	4364756	5	True				
ANR	4368597	IdentifierDecl	"* tmp = sdb_get ( TDB , type , 0 )"		4364756	0					
ANR	4368598	IdentifierDeclType	char *		4364756	0					
ANR	4368599	Identifier	tmp		4364756	1					
ANR	4368600	AssignmentExpression	"* tmp = sdb_get ( TDB , type , 0 )"		4364756	2		=			
ANR	4368601	Identifier	tmp		4364756	0					
ANR	4368602	CallExpression	"sdb_get ( TDB , type , 0 )"		4364756	1					
ANR	4368603	Callee	sdb_get		4364756	0					
ANR	4368604	Identifier	sdb_get		4364756	0					
ANR	4368605	ArgumentList	TDB		4364756	1					
ANR	4368606	Argument	TDB		4364756	0					
ANR	4368607	Identifier	TDB		4364756	0					
ANR	4368608	Argument	type		4364756	1					
ANR	4368609	Identifier	type		4364756	0					
ANR	4368610	Argument	0		4364756	2					
ANR	4368611	PrimaryExpression	0		4364756	0					
ANR	4368612	IfStatement	if ( tmp && * tmp )		4364756	6					
ANR	4368613	Condition	tmp && * tmp	1640:7:44989:44999	4364756	0	True				
ANR	4368614	AndExpression	tmp && * tmp		4364756	0		&&			
ANR	4368615	Identifier	tmp		4364756	0					
ANR	4368616	UnaryOperationExpression	* tmp		4364756	1					
ANR	4368617	UnaryOperator	*		4364756	0					
ANR	4368618	Identifier	tmp		4364756	1					
ANR	4368619	CompoundStatement		637:4:16633:16701	4364756	1					
ANR	4368620	ExpressionStatement	"r_type_set_link ( TDB , type , addr )"	1641:4:45008:45041	4364756	0	True				
ANR	4368621	CallExpression	"r_type_set_link ( TDB , type , addr )"		4364756	0					
ANR	4368622	Callee	r_type_set_link		4364756	0					
ANR	4368623	Identifier	r_type_set_link		4364756	0					
ANR	4368624	ArgumentList	TDB		4364756	1					
ANR	4368625	Argument	TDB		4364756	0					
ANR	4368626	Identifier	TDB		4364756	0					
ANR	4368627	Argument	type		4364756	1					
ANR	4368628	Identifier	type		4364756	0					
ANR	4368629	Argument	addr		4364756	2					
ANR	4368630	Identifier	addr		4364756	0					
ANR	4368631	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 ) ;"	1642:4:45047:45115	4364756	1	True				
ANR	4368632	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		4364756	0					
ANR	4368633	IdentifierDeclType	RAnalFunction *		4364756	0					
ANR	4368634	Identifier	fcn		4364756	1					
ANR	4368635	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		4364756	2		=			
ANR	4368636	Identifier	fcn		4364756	0					
ANR	4368637	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		4364756	1					
ANR	4368638	Callee	r_anal_get_fcn_in		4364756	0					
ANR	4368639	Identifier	r_anal_get_fcn_in		4364756	0					
ANR	4368640	ArgumentList	core -> anal		4364756	1					
ANR	4368641	Argument	core -> anal		4364756	0					
ANR	4368642	PtrMemberAccess	core -> anal		4364756	0					
ANR	4368643	Identifier	core		4364756	0					
ANR	4368644	Identifier	anal		4364756	1					
ANR	4368645	Argument	core -> offset		4364756	1					
ANR	4368646	PtrMemberAccess	core -> offset		4364756	0					
ANR	4368647	Identifier	core		4364756	0					
ANR	4368648	Identifier	offset		4364756	1					
ANR	4368649	Argument	0		4364756	2					
ANR	4368650	PrimaryExpression	0		4364756	0					
ANR	4368651	IfStatement	if ( fcn )		4364756	2					
ANR	4368652	Condition	fcn	1643:8:45125:45127	4364756	0	True				
ANR	4368653	Identifier	fcn		4364756	0					
ANR	4368654	CompoundStatement		638:13:16716:16716	4364756	1					
ANR	4368655	ExpressionStatement	"link_struct_offset ( core , fcn )"	1644:5:45137:45167	4364756	0	True				
ANR	4368656	CallExpression	"link_struct_offset ( core , fcn )"		4364756	0					
ANR	4368657	Callee	link_struct_offset		4364756	0					
ANR	4368658	Identifier	link_struct_offset		4364756	0					
ANR	4368659	ArgumentList	core		4364756	1					
ANR	4368660	Argument	core		4364756	0					
ANR	4368661	Identifier	core		4364756	0					
ANR	4368662	Argument	fcn		4364756	1					
ANR	4368663	Identifier	fcn		4364756	0					
ANR	4368664	ExpressionStatement	free ( tmp )	1646:4:45179:45189	4364756	3	True				
ANR	4368665	CallExpression	free ( tmp )		4364756	0					
ANR	4368666	Callee	free		4364756	0					
ANR	4368667	Identifier	free		4364756	0					
ANR	4368668	ArgumentList	tmp		4364756	1					
ANR	4368669	Argument	tmp		4364756	0					
ANR	4368670	Identifier	tmp		4364756	0					
ANR	4368671	ElseStatement	else		4364756	0					
ANR	4368672	CompoundStatement		642:10:16787:16787	4364756	0					
ANR	4368673	ExpressionStatement	"eprintf ( ""unknown type %s\\n"" , type )"	1648:4:45207:45242	4364756	0	True				
ANR	4368674	CallExpression	"eprintf ( ""unknown type %s\\n"" , type )"		4364756	0					
ANR	4368675	Callee	eprintf		4364756	0					
ANR	4368676	Identifier	eprintf		4364756	0					
ANR	4368677	ArgumentList	"""unknown type %s\\n"""		4364756	1					
ANR	4368678	Argument	"""unknown type %s\\n"""		4364756	0					
ANR	4368679	PrimaryExpression	"""unknown type %s\\n"""		4364756	0					
ANR	4368680	Argument	type		4364756	1					
ANR	4368681	Identifier	type		4364756	0					
ANR	4368682	ExpressionStatement	free ( type )	1650:3:45252:45263	4364756	7	True				
ANR	4368683	CallExpression	free ( type )		4364756	0					
ANR	4368684	Callee	free		4364756	0					
ANR	4368685	Identifier	free		4364756	0					
ANR	4368686	ArgumentList	type		4364756	1					
ANR	4368687	Argument	type		4364756	0					
ANR	4368688	Identifier	type		4364756	0					
ANR	4368689	BreakStatement	break ;	1651:3:45268:45273	4364756	8	True				
ANR	4368690	Label	case 's' :	1653:2:45281:45289	4364756	5	True				
ANR	4368691	CompoundStatement		652:3:17023:17071	4364756	6					
ANR	4368692	IdentifierDeclStatement	char * ptr = r_str_trim_dup ( input + 2 ) ;	1654:3:45296:45334	4364756	0	True				
ANR	4368693	IdentifierDecl	* ptr = r_str_trim_dup ( input + 2 )		4364756	0					
ANR	4368694	IdentifierDeclType	char *		4364756	0					
ANR	4368695	Identifier	ptr		4364756	1					
ANR	4368696	AssignmentExpression	* ptr = r_str_trim_dup ( input + 2 )		4364756	2		=			
ANR	4368697	Identifier	ptr		4364756	0					
ANR	4368698	CallExpression	r_str_trim_dup ( input + 2 )		4364756	1					
ANR	4368699	Callee	r_str_trim_dup		4364756	0					
ANR	4368700	Identifier	r_str_trim_dup		4364756	0					
ANR	4368701	ArgumentList	input + 2		4364756	1					
ANR	4368702	Argument	input + 2		4364756	0					
ANR	4368703	AdditiveExpression	input + 2		4364756	0		+			
ANR	4368704	Identifier	input		4364756	0					
ANR	4368705	PrimaryExpression	2		4364756	1					
ANR	4368706	IdentifierDeclStatement	"ut64 addr = r_num_math ( NULL , ptr ) ;"	1655:3:45339:45373	4364756	1	True				
ANR	4368707	IdentifierDecl	"addr = r_num_math ( NULL , ptr )"		4364756	0					
ANR	4368708	IdentifierDeclType	ut64		4364756	0					
ANR	4368709	Identifier	addr		4364756	1					
ANR	4368710	AssignmentExpression	"addr = r_num_math ( NULL , ptr )"		4364756	2		=			
ANR	4368711	Identifier	addr		4364756	0					
ANR	4368712	CallExpression	"r_num_math ( NULL , ptr )"		4364756	1					
ANR	4368713	Callee	r_num_math		4364756	0					
ANR	4368714	Identifier	r_num_math		4364756	0					
ANR	4368715	ArgumentList	NULL		4364756	1					
ANR	4368716	Argument	NULL		4364756	0					
ANR	4368717	Identifier	NULL		4364756	0					
ANR	4368718	Argument	ptr		4364756	1					
ANR	4368719	Identifier	ptr		4364756	0					
ANR	4368720	Statement	const	1656:3:45378:45382	4364756	2	True				
ANR	4368721	Statement	char	1656:9:45384:45387	4364756	3	True				
ANR	4368722	Statement	*	1656:14:45389:45389	4364756	4	True				
ANR	4368723	Statement	query	1656:15:45390:45394	4364756	5	True				
ANR	4368724	Statement	=	1656:21:45396:45396	4364756	6	True				
ANR	4368725	Statement	sdb_fmt	1656:23:45398:45404	4364756	7	True				
ANR	4368726	Statement	(	1656:31:45406:45406	4364756	8	True				
ANR	4368727	Statement	"""link.%08"""	1656:32:45407:45416	4364756	9	True				
ANR	4368728	Statement	PFMT64x	1656:43:45418:45424	4364756	10	True				
ANR	4368729	Statement	","	1656:50:45425:45425	4364756	11	True				
ANR	4368730	Statement	addr	1656:52:45427:45430	4364756	12	True				
ANR	4368731	Statement	)	1656:56:45431:45431	4364756	13	True				
ANR	4368732	ExpressionStatement		1656:57:45432:45432	4364756	14	True				
ANR	4368733	IdentifierDeclStatement	"const char * link = sdb_const_get ( TDB , query , 0 ) ;"	1657:3:45437:45485	4364756	15	True				
ANR	4368734	IdentifierDecl	"* link = sdb_const_get ( TDB , query , 0 )"		4364756	0					
ANR	4368735	IdentifierDeclType	const char *		4364756	0					
ANR	4368736	Identifier	link		4364756	1					
ANR	4368737	AssignmentExpression	"* link = sdb_const_get ( TDB , query , 0 )"		4364756	2		=			
ANR	4368738	Identifier	link		4364756	0					
ANR	4368739	CallExpression	"sdb_const_get ( TDB , query , 0 )"		4364756	1					
ANR	4368740	Callee	sdb_const_get		4364756	0					
ANR	4368741	Identifier	sdb_const_get		4364756	0					
ANR	4368742	ArgumentList	TDB		4364756	1					
ANR	4368743	Argument	TDB		4364756	0					
ANR	4368744	Identifier	TDB		4364756	0					
ANR	4368745	Argument	query		4364756	1					
ANR	4368746	Identifier	query		4364756	0					
ANR	4368747	Argument	0		4364756	2					
ANR	4368748	PrimaryExpression	0		4364756	0					
ANR	4368749	IfStatement	if ( link )		4364756	16					
ANR	4368750	Condition	link	1658:7:45494:45497	4364756	0	True				
ANR	4368751	Identifier	link		4364756	0					
ANR	4368752	CompoundStatement		653:13:17086:17086	4364756	1					
ANR	4368753	ExpressionStatement	"print_link_readable_cb ( core , query , link )"	1659:4:45506:45548	4364756	0	True				
ANR	4368754	CallExpression	"print_link_readable_cb ( core , query , link )"		4364756	0					
ANR	4368755	Callee	print_link_readable_cb		4364756	0					
ANR	4368756	Identifier	print_link_readable_cb		4364756	0					
ANR	4368757	ArgumentList	core		4364756	1					
ANR	4368758	Argument	core		4364756	0					
ANR	4368759	Identifier	core		4364756	0					
ANR	4368760	Argument	query		4364756	1					
ANR	4368761	Identifier	query		4364756	0					
ANR	4368762	Argument	link		4364756	2					
ANR	4368763	Identifier	link		4364756	0					
ANR	4368764	ExpressionStatement	free ( ptr )	1661:3:45558:45568	4364756	17	True				
ANR	4368765	CallExpression	free ( ptr )		4364756	0					
ANR	4368766	Callee	free		4364756	0					
ANR	4368767	Identifier	free		4364756	0					
ANR	4368768	ArgumentList	ptr		4364756	1					
ANR	4368769	Argument	ptr		4364756	0					
ANR	4368770	Identifier	ptr		4364756	0					
ANR	4368771	BreakStatement	break ;	1662:3:45573:45578	4364756	18	True				
ANR	4368772	Label	case '-' :	1664:2:45586:45594	4364756	7	True				
ANR	4368773	SwitchStatement	switch ( input [ 2 ] )		4364756	8					
ANR	4368774	Condition	input [ 2 ]	1665:11:45607:45614	4364756	0	True				
ANR	4368775	ArrayIndexing	input [ 2 ]		4364756	0					
ANR	4368776	Identifier	input		4364756	0					
ANR	4368777	PrimaryExpression	2		4364756	1					
ANR	4368778	CompoundStatement		660:21:17203:17203	4364756	1					
ANR	4368779	Label	case '*' :	1666:3:45622:45630	4364756	0	True				
ANR	4368780	ExpressionStatement	"sdb_foreach ( TDB , sdbdeletelink , core )"	1667:4:45636:45674	4364756	1	True				
ANR	4368781	CallExpression	"sdb_foreach ( TDB , sdbdeletelink , core )"		4364756	0					
ANR	4368782	Callee	sdb_foreach		4364756	0					
ANR	4368783	Identifier	sdb_foreach		4364756	0					
ANR	4368784	ArgumentList	TDB		4364756	1					
ANR	4368785	Argument	TDB		4364756	0					
ANR	4368786	Identifier	TDB		4364756	0					
ANR	4368787	Argument	sdbdeletelink		4364756	1					
ANR	4368788	Identifier	sdbdeletelink		4364756	0					
ANR	4368789	Argument	core		4364756	2					
ANR	4368790	Identifier	core		4364756	0					
ANR	4368791	BreakStatement	break ;	1668:4:45680:45685	4364756	2	True				
ANR	4368792	Label	case ' ' :	1669:3:45690:45698	4364756	3	True				
ANR	4368793	CompoundStatement		666:4:17325:17364	4364756	4					
ANR	4368794	IdentifierDeclStatement	const char * ptr = input + 3 ;	1670:4:45706:45733	4364756	0	True				
ANR	4368795	IdentifierDecl	* ptr = input + 3		4364756	0					
ANR	4368796	IdentifierDeclType	const char *		4364756	0					
ANR	4368797	Identifier	ptr		4364756	1					
ANR	4368798	AssignmentExpression	* ptr = input + 3		4364756	2		=			
ANR	4368799	Identifier	ptr		4364756	0					
ANR	4368800	AdditiveExpression	input + 3		4364756	1		+			
ANR	4368801	Identifier	input		4364756	0					
ANR	4368802	PrimaryExpression	3		4364756	1					
ANR	4368803	IdentifierDeclStatement	"ut64 addr = r_num_math ( core -> num , ptr ) ;"	1671:4:45739:45778	4364756	1	True				
ANR	4368804	IdentifierDecl	"addr = r_num_math ( core -> num , ptr )"		4364756	0					
ANR	4368805	IdentifierDeclType	ut64		4364756	0					
ANR	4368806	Identifier	addr		4364756	1					
ANR	4368807	AssignmentExpression	"addr = r_num_math ( core -> num , ptr )"		4364756	2		=			
ANR	4368808	Identifier	addr		4364756	0					
ANR	4368809	CallExpression	"r_num_math ( core -> num , ptr )"		4364756	1					
ANR	4368810	Callee	r_num_math		4364756	0					
ANR	4368811	Identifier	r_num_math		4364756	0					
ANR	4368812	ArgumentList	core -> num		4364756	1					
ANR	4368813	Argument	core -> num		4364756	0					
ANR	4368814	PtrMemberAccess	core -> num		4364756	0					
ANR	4368815	Identifier	core		4364756	0					
ANR	4368816	Identifier	num		4364756	1					
ANR	4368817	Argument	ptr		4364756	1					
ANR	4368818	Identifier	ptr		4364756	0					
ANR	4368819	ExpressionStatement	"r_type_unlink ( TDB , addr )"	1672:4:45784:45809	4364756	2	True				
ANR	4368820	CallExpression	"r_type_unlink ( TDB , addr )"		4364756	0					
ANR	4368821	Callee	r_type_unlink		4364756	0					
ANR	4368822	Identifier	r_type_unlink		4364756	0					
ANR	4368823	ArgumentList	TDB		4364756	1					
ANR	4368824	Argument	TDB		4364756	0					
ANR	4368825	Identifier	TDB		4364756	0					
ANR	4368826	Argument	addr		4364756	1					
ANR	4368827	Identifier	addr		4364756	0					
ANR	4368828	BreakStatement	break ;	1673:4:45815:45820	4364756	3	True				
ANR	4368829	BreakStatement	break ;	1676:3:45835:45840	4364756	9	True				
ANR	4368830	Label	case '*' :	1677:2:45844:45852	4364756	10	True				
ANR	4368831	ExpressionStatement	"print_keys ( TDB , core , stdiflink , print_link_r_cb , false )"	1678:3:45857:45914	4364756	11	True				
ANR	4368832	CallExpression	"print_keys ( TDB , core , stdiflink , print_link_r_cb , false )"		4364756	0					
ANR	4368833	Callee	print_keys		4364756	0					
ANR	4368834	Identifier	print_keys		4364756	0					
ANR	4368835	ArgumentList	TDB		4364756	1					
ANR	4368836	Argument	TDB		4364756	0					
ANR	4368837	Identifier	TDB		4364756	0					
ANR	4368838	Argument	core		4364756	1					
ANR	4368839	Identifier	core		4364756	0					
ANR	4368840	Argument	stdiflink		4364756	2					
ANR	4368841	Identifier	stdiflink		4364756	0					
ANR	4368842	Argument	print_link_r_cb		4364756	3					
ANR	4368843	Identifier	print_link_r_cb		4364756	0					
ANR	4368844	Argument	false		4364756	4					
ANR	4368845	Identifier	false		4364756	0					
ANR	4368846	BreakStatement	break ;	1679:3:45919:45924	4364756	12	True				
ANR	4368847	Label	case 'l' :	1680:2:45928:45936	4364756	13	True				
ANR	4368848	SwitchStatement	switch ( input [ 2 ] )		4364756	14					
ANR	4368849	Condition	input [ 2 ]	1681:11:45949:45956	4364756	0	True				
ANR	4368850	ArrayIndexing	input [ 2 ]		4364756	0					
ANR	4368851	Identifier	input		4364756	0					
ANR	4368852	PrimaryExpression	2		4364756	1					
ANR	4368853	CompoundStatement		676:21:17545:17545	4364756	1					
ANR	4368854	Label	case 'j' :	1682:3:45964:45972	4364756	0	True				
ANR	4368855	ExpressionStatement	"print_keys ( TDB , core , stdiflink , print_link_readable_json_cb , true )"	1683:4:45978:46046	4364756	1	True				
ANR	4368856	CallExpression	"print_keys ( TDB , core , stdiflink , print_link_readable_json_cb , true )"		4364756	0					
ANR	4368857	Callee	print_keys		4364756	0					
ANR	4368858	Identifier	print_keys		4364756	0					
ANR	4368859	ArgumentList	TDB		4364756	1					
ANR	4368860	Argument	TDB		4364756	0					
ANR	4368861	Identifier	TDB		4364756	0					
ANR	4368862	Argument	core		4364756	1					
ANR	4368863	Identifier	core		4364756	0					
ANR	4368864	Argument	stdiflink		4364756	2					
ANR	4368865	Identifier	stdiflink		4364756	0					
ANR	4368866	Argument	print_link_readable_json_cb		4364756	3					
ANR	4368867	Identifier	print_link_readable_json_cb		4364756	0					
ANR	4368868	Argument	true		4364756	4					
ANR	4368869	Identifier	true		4364756	0					
ANR	4368870	BreakStatement	break ;	1684:4:46052:46057	4364756	2	True				
ANR	4368871	Label	default :	1685:3:46062:46069	4364756	3	True				
ANR	4368872	Identifier	default		4364756	0					
ANR	4368873	ExpressionStatement	"print_keys ( TDB , core , stdiflink , print_link_readable_cb , false )"	1686:4:46075:46139	4364756	4	True				
ANR	4368874	CallExpression	"print_keys ( TDB , core , stdiflink , print_link_readable_cb , false )"		4364756	0					
ANR	4368875	Callee	print_keys		4364756	0					
ANR	4368876	Identifier	print_keys		4364756	0					
ANR	4368877	ArgumentList	TDB		4364756	1					
ANR	4368878	Argument	TDB		4364756	0					
ANR	4368879	Identifier	TDB		4364756	0					
ANR	4368880	Argument	core		4364756	1					
ANR	4368881	Identifier	core		4364756	0					
ANR	4368882	Argument	stdiflink		4364756	2					
ANR	4368883	Identifier	stdiflink		4364756	0					
ANR	4368884	Argument	print_link_readable_cb		4364756	3					
ANR	4368885	Identifier	print_link_readable_cb		4364756	0					
ANR	4368886	Argument	false		4364756	4					
ANR	4368887	Identifier	false		4364756	0					
ANR	4368888	BreakStatement	break ;	1687:4:46145:46150	4364756	5	True				
ANR	4368889	BreakStatement	break ;	1689:3:46160:46165	4364756	15	True				
ANR	4368890	Label	case 'j' :	1690:2:46169:46177	4364756	16	True				
ANR	4368891	ExpressionStatement	"print_keys ( TDB , core , stdiflink , print_link_json_cb , true )"	1691:3:46182:46241	4364756	17	True				
ANR	4368892	CallExpression	"print_keys ( TDB , core , stdiflink , print_link_json_cb , true )"		4364756	0					
ANR	4368893	Callee	print_keys		4364756	0					
ANR	4368894	Identifier	print_keys		4364756	0					
ANR	4368895	ArgumentList	TDB		4364756	1					
ANR	4368896	Argument	TDB		4364756	0					
ANR	4368897	Identifier	TDB		4364756	0					
ANR	4368898	Argument	core		4364756	1					
ANR	4368899	Identifier	core		4364756	0					
ANR	4368900	Argument	stdiflink		4364756	2					
ANR	4368901	Identifier	stdiflink		4364756	0					
ANR	4368902	Argument	print_link_json_cb		4364756	3					
ANR	4368903	Identifier	print_link_json_cb		4364756	0					
ANR	4368904	Argument	true		4364756	4					
ANR	4368905	Identifier	true		4364756	0					
ANR	4368906	BreakStatement	break ;	1692:3:46246:46251	4364756	18	True				
ANR	4368907	Label	case '\\0' :	1693:2:46255:46264	4364756	19	True				
ANR	4368908	ExpressionStatement	"print_keys ( TDB , core , stdiflink , print_link_cb , false )"	1694:3:46269:46324	4364756	20	True				
ANR	4368909	CallExpression	"print_keys ( TDB , core , stdiflink , print_link_cb , false )"		4364756	0					
ANR	4368910	Callee	print_keys		4364756	0					
ANR	4368911	Identifier	print_keys		4364756	0					
ANR	4368912	ArgumentList	TDB		4364756	1					
ANR	4368913	Argument	TDB		4364756	0					
ANR	4368914	Identifier	TDB		4364756	0					
ANR	4368915	Argument	core		4364756	1					
ANR	4368916	Identifier	core		4364756	0					
ANR	4368917	Argument	stdiflink		4364756	2					
ANR	4368918	Identifier	stdiflink		4364756	0					
ANR	4368919	Argument	print_link_cb		4364756	3					
ANR	4368920	Identifier	print_link_cb		4364756	0					
ANR	4368921	Argument	false		4364756	4					
ANR	4368922	Identifier	false		4364756	0					
ANR	4368923	BreakStatement	break ;	1695:3:46329:46334	4364756	21	True				
ANR	4368924	BreakStatement	break ;	1697:2:46342:46347	4364756	41	True				
ANR	4368925	Label	case 'p' :	1698:1:46350:46358	4364756	42	True				
ANR	4368926	IfStatement	if ( input [ 1 ] == '?' )		4364756	43					
ANR	4368927	Condition	input [ 1 ] == '?'	1699:6:46375:46389	4364756	0	True				
ANR	4368928	EqualityExpression	input [ 1 ] == '?'		4364756	0		==			
ANR	4368929	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4368930	Identifier	input		4364756	0					
ANR	4368931	PrimaryExpression	1		4364756	1					
ANR	4368932	PrimaryExpression	'?'		4364756	1					
ANR	4368933	CompoundStatement		694:23:17978:17978	4364756	1					
ANR	4368934	ExpressionStatement	"r_core_cmd0 ( core , ""t?~tp\\n"" )"	1700:3:46406:46435	4364756	0	True				
ANR	4368935	CallExpression	"r_core_cmd0 ( core , ""t?~tp\\n"" )"		4364756	0					
ANR	4368936	Callee	r_core_cmd0		4364756	0					
ANR	4368937	Identifier	r_core_cmd0		4364756	0					
ANR	4368938	ArgumentList	core		4364756	1					
ANR	4368939	Argument	core		4364756	0					
ANR	4368940	Identifier	core		4364756	0					
ANR	4368941	Argument	"""t?~tp\\n"""		4364756	1					
ANR	4368942	PrimaryExpression	"""t?~tp\\n"""		4364756	0					
ANR	4368943	ElseStatement	else		4364756	0					
ANR	4368944	CompoundStatement		703:3:18162:18195	4364756	0					
ANR	4368945	IdentifierDeclStatement	char * tmp = strdup ( input ) ;	1702:3:46459:46485	4364756	0	True				
ANR	4368946	IdentifierDecl	* tmp = strdup ( input )		4364756	0					
ANR	4368947	IdentifierDeclType	char *		4364756	0					
ANR	4368948	Identifier	tmp		4364756	1					
ANR	4368949	AssignmentExpression	* tmp = strdup ( input )		4364756	2		=			
ANR	4368950	Identifier	tmp		4364756	0					
ANR	4368951	CallExpression	strdup ( input )		4364756	1					
ANR	4368952	Callee	strdup		4364756	0					
ANR	4368953	Identifier	strdup		4364756	0					
ANR	4368954	ArgumentList	input		4364756	1					
ANR	4368955	Argument	input		4364756	0					
ANR	4368956	Identifier	input		4364756	0					
ANR	4368957	IdentifierDeclStatement	"char * ptr = strchr ( tmp , ' ' ) ;"	1703:3:46490:46519	4364756	1	True				
ANR	4368958	IdentifierDecl	"* ptr = strchr ( tmp , ' ' )"		4364756	0					
ANR	4368959	IdentifierDeclType	char *		4364756	0					
ANR	4368960	Identifier	ptr		4364756	1					
ANR	4368961	AssignmentExpression	"* ptr = strchr ( tmp , ' ' )"		4364756	2		=			
ANR	4368962	Identifier	ptr		4364756	0					
ANR	4368963	CallExpression	"strchr ( tmp , ' ' )"		4364756	1					
ANR	4368964	Callee	strchr		4364756	0					
ANR	4368965	Identifier	strchr		4364756	0					
ANR	4368966	ArgumentList	tmp		4364756	1					
ANR	4368967	Argument	tmp		4364756	0					
ANR	4368968	Identifier	tmp		4364756	0					
ANR	4368969	Argument	' '		4364756	1					
ANR	4368970	PrimaryExpression	' '		4364756	0					
ANR	4368971	IfStatement	if ( ! ptr )		4364756	2					
ANR	4368972	Condition	! ptr	1704:7:46528:46531	4364756	0	True				
ANR	4368973	UnaryOperationExpression	! ptr		4364756	0					
ANR	4368974	UnaryOperator	!		4364756	0					
ANR	4368975	Identifier	ptr		4364756	1					
ANR	4368976	CompoundStatement		699:13:18120:18120	4364756	1					
ANR	4368977	BreakStatement	break ;	1705:4:46540:46545	4364756	0	True				
ANR	4368978	ExpressionStatement	r_str_trim ( ptr )	1707:3:46555:46571	4364756	3	True				
ANR	4368979	CallExpression	r_str_trim ( ptr )		4364756	0					
ANR	4368980	Callee	r_str_trim		4364756	0					
ANR	4368981	Identifier	r_str_trim		4364756	0					
ANR	4368982	ArgumentList	ptr		4364756	1					
ANR	4368983	Argument	ptr		4364756	0					
ANR	4368984	Identifier	ptr		4364756	0					
ANR	4368985	IdentifierDeclStatement	int nargs = r_str_word_set0 ( ptr ) ;	1708:3:46576:46609	4364756	4	True				
ANR	4368986	IdentifierDecl	nargs = r_str_word_set0 ( ptr )		4364756	0					
ANR	4368987	IdentifierDeclType	int		4364756	0					
ANR	4368988	Identifier	nargs		4364756	1					
ANR	4368989	AssignmentExpression	nargs = r_str_word_set0 ( ptr )		4364756	2		=			
ANR	4368990	Identifier	nargs		4364756	0					
ANR	4368991	CallExpression	r_str_word_set0 ( ptr )		4364756	1					
ANR	4368992	Callee	r_str_word_set0		4364756	0					
ANR	4368993	Identifier	r_str_word_set0		4364756	0					
ANR	4368994	ArgumentList	ptr		4364756	1					
ANR	4368995	Argument	ptr		4364756	0					
ANR	4368996	Identifier	ptr		4364756	0					
ANR	4368997	IfStatement	if ( nargs > 0 )		4364756	5					
ANR	4368998	Condition	nargs > 0	1709:7:46618:46626	4364756	0	True				
ANR	4368999	RelationalExpression	nargs > 0		4364756	0		>			
ANR	4369000	Identifier	nargs		4364756	0					
ANR	4369001	PrimaryExpression	0		4364756	1					
ANR	4369002	CompoundStatement		707:4:18337:18374	4364756	1					
ANR	4369003	IdentifierDeclStatement	"const char * type = r_str_word_get0 ( ptr , 0 ) ;"	1710:4:46635:46678	4364756	0	True				
ANR	4369004	IdentifierDecl	"* type = r_str_word_get0 ( ptr , 0 )"		4364756	0					
ANR	4369005	IdentifierDeclType	const char *		4364756	0					
ANR	4369006	Identifier	type		4364756	1					
ANR	4369007	AssignmentExpression	"* type = r_str_word_get0 ( ptr , 0 )"		4364756	2		=			
ANR	4369008	Identifier	type		4364756	0					
ANR	4369009	CallExpression	"r_str_word_get0 ( ptr , 0 )"		4364756	1					
ANR	4369010	Callee	r_str_word_get0		4364756	0					
ANR	4369011	Identifier	r_str_word_get0		4364756	0					
ANR	4369012	ArgumentList	ptr		4364756	1					
ANR	4369013	Argument	ptr		4364756	0					
ANR	4369014	Identifier	ptr		4364756	0					
ANR	4369015	Argument	0		4364756	1					
ANR	4369016	PrimaryExpression	0		4364756	0					
ANR	4369017	IdentifierDeclStatement	"const char * arg = ( nargs > 1 ) ? r_str_word_get0 ( ptr , 1 ) : NULL ;"	1711:4:46684:46745	4364756	1	True				
ANR	4369018	IdentifierDecl	"* arg = ( nargs > 1 ) ? r_str_word_get0 ( ptr , 1 ) : NULL"		4364756	0					
ANR	4369019	IdentifierDeclType	const char *		4364756	0					
ANR	4369020	Identifier	arg		4364756	1					
ANR	4369021	AssignmentExpression	"* arg = ( nargs > 1 ) ? r_str_word_get0 ( ptr , 1 ) : NULL"		4364756	2		=			
ANR	4369022	Identifier	arg		4364756	0					
ANR	4369023	ConditionalExpression	"( nargs > 1 ) ? r_str_word_get0 ( ptr , 1 ) : NULL"		4364756	1					
ANR	4369024	Condition	nargs > 1		4364756	0					
ANR	4369025	RelationalExpression	nargs > 1		4364756	0		>			
ANR	4369026	Identifier	nargs		4364756	0					
ANR	4369027	PrimaryExpression	1		4364756	1					
ANR	4369028	CallExpression	"r_str_word_get0 ( ptr , 1 )"		4364756	1					
ANR	4369029	Callee	r_str_word_get0		4364756	0					
ANR	4369030	Identifier	r_str_word_get0		4364756	0					
ANR	4369031	ArgumentList	ptr		4364756	1					
ANR	4369032	Argument	ptr		4364756	0					
ANR	4369033	Identifier	ptr		4364756	0					
ANR	4369034	Argument	1		4364756	1					
ANR	4369035	PrimaryExpression	1		4364756	0					
ANR	4369036	Identifier	NULL		4364756	2					
ANR	4369037	IdentifierDeclStatement	"char * fmt = r_type_format ( TDB , type ) ;"	1712:4:46751:46788	4364756	2	True				
ANR	4369038	IdentifierDecl	"* fmt = r_type_format ( TDB , type )"		4364756	0					
ANR	4369039	IdentifierDeclType	char *		4364756	0					
ANR	4369040	Identifier	fmt		4364756	1					
ANR	4369041	AssignmentExpression	"* fmt = r_type_format ( TDB , type )"		4364756	2		=			
ANR	4369042	Identifier	fmt		4364756	0					
ANR	4369043	CallExpression	"r_type_format ( TDB , type )"		4364756	1					
ANR	4369044	Callee	r_type_format		4364756	0					
ANR	4369045	Identifier	r_type_format		4364756	0					
ANR	4369046	ArgumentList	TDB		4364756	1					
ANR	4369047	Argument	TDB		4364756	0					
ANR	4369048	Identifier	TDB		4364756	0					
ANR	4369049	Argument	type		4364756	1					
ANR	4369050	Identifier	type		4364756	0					
ANR	4369051	IfStatement	if ( ! fmt )		4364756	3					
ANR	4369052	Condition	! fmt	1713:8:46798:46801	4364756	0	True				
ANR	4369053	UnaryOperationExpression	! fmt		4364756	0					
ANR	4369054	UnaryOperator	!		4364756	0					
ANR	4369055	Identifier	fmt		4364756	1					
ANR	4369056	CompoundStatement		708:14:18390:18390	4364756	1					
ANR	4369057	ExpressionStatement	"eprintf ( ""Cannot find '%s' type\\n"" , type )"	1714:5:46811:46852	4364756	0	True				
ANR	4369058	CallExpression	"eprintf ( ""Cannot find '%s' type\\n"" , type )"		4364756	0					
ANR	4369059	Callee	eprintf		4364756	0					
ANR	4369060	Identifier	eprintf		4364756	0					
ANR	4369061	ArgumentList	"""Cannot find '%s' type\\n"""		4364756	1					
ANR	4369062	Argument	"""Cannot find '%s' type\\n"""		4364756	0					
ANR	4369063	PrimaryExpression	"""Cannot find '%s' type\\n"""		4364756	0					
ANR	4369064	Argument	type		4364756	1					
ANR	4369065	Identifier	type		4364756	0					
ANR	4369066	BreakStatement	break ;	1715:5:46859:46864	4364756	1	True				
ANR	4369067	IfStatement	if ( input [ 1 ] == 'x' && arg )		4364756	4					
ANR	4369068	Condition	input [ 1 ] == 'x' && arg	1717:8:46880:46901	4364756	0	True				
ANR	4369069	AndExpression	input [ 1 ] == 'x' && arg		4364756	0		&&			
ANR	4369070	EqualityExpression	input [ 1 ] == 'x'		4364756	0		==			
ANR	4369071	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4369072	Identifier	input		4364756	0					
ANR	4369073	PrimaryExpression	1		4364756	1					
ANR	4369074	PrimaryExpression	'x'		4364756	1					
ANR	4369075	Identifier	arg		4364756	1					
ANR	4369076	CompoundStatement		712:32:18490:18490	4364756	1					
ANR	4369077	ExpressionStatement	"r_core_cmdf ( core , ""pf %s @x:%s"" , fmt , arg )"	1718:5:46920:46963	4364756	0	True				
ANR	4369078	CallExpression	"r_core_cmdf ( core , ""pf %s @x:%s"" , fmt , arg )"		4364756	0					
ANR	4369079	Callee	r_core_cmdf		4364756	0					
ANR	4369080	Identifier	r_core_cmdf		4364756	0					
ANR	4369081	ArgumentList	core		4364756	1					
ANR	4369082	Argument	core		4364756	0					
ANR	4369083	Identifier	core		4364756	0					
ANR	4369084	Argument	"""pf %s @x:%s"""		4364756	1					
ANR	4369085	PrimaryExpression	"""pf %s @x:%s"""		4364756	0					
ANR	4369086	Argument	fmt		4364756	2					
ANR	4369087	Identifier	fmt		4364756	0					
ANR	4369088	Argument	arg		4364756	3					
ANR	4369089	Identifier	arg		4364756	0					
ANR	4369090	ExpressionStatement	"eprintf ( ""pf %s @x:%s"" , fmt , arg )"	1719:5:46970:47003	4364756	1	True				
ANR	4369091	CallExpression	"eprintf ( ""pf %s @x:%s"" , fmt , arg )"		4364756	0					
ANR	4369092	Callee	eprintf		4364756	0					
ANR	4369093	Identifier	eprintf		4364756	0					
ANR	4369094	ArgumentList	"""pf %s @x:%s"""		4364756	1					
ANR	4369095	Argument	"""pf %s @x:%s"""		4364756	0					
ANR	4369096	PrimaryExpression	"""pf %s @x:%s"""		4364756	0					
ANR	4369097	Argument	fmt		4364756	1					
ANR	4369098	Identifier	fmt		4364756	0					
ANR	4369099	Argument	arg		4364756	2					
ANR	4369100	Identifier	arg		4364756	0					
ANR	4369101	ElseStatement	else		4364756	0					
ANR	4369102	CompoundStatement		716:5:18609:18668	4364756	0					
ANR	4369103	IdentifierDeclStatement	"ut64 addr = arg ? r_num_math ( core -> num , arg ) : core -> offset ;"	1721:5:47023:47082	4364756	0	True				
ANR	4369104	IdentifierDecl	"addr = arg ? r_num_math ( core -> num , arg ) : core -> offset"		4364756	0					
ANR	4369105	IdentifierDeclType	ut64		4364756	0					
ANR	4369106	Identifier	addr		4364756	1					
ANR	4369107	AssignmentExpression	"addr = arg ? r_num_math ( core -> num , arg ) : core -> offset"		4364756	2		=			
ANR	4369108	Identifier	addr		4364756	0					
ANR	4369109	ConditionalExpression	"arg ? r_num_math ( core -> num , arg ) : core -> offset"		4364756	1					
ANR	4369110	Condition	arg		4364756	0					
ANR	4369111	Identifier	arg		4364756	0					
ANR	4369112	CallExpression	"r_num_math ( core -> num , arg )"		4364756	1					
ANR	4369113	Callee	r_num_math		4364756	0					
ANR	4369114	Identifier	r_num_math		4364756	0					
ANR	4369115	ArgumentList	core -> num		4364756	1					
ANR	4369116	Argument	core -> num		4364756	0					
ANR	4369117	PtrMemberAccess	core -> num		4364756	0					
ANR	4369118	Identifier	core		4364756	0					
ANR	4369119	Identifier	num		4364756	1					
ANR	4369120	Argument	arg		4364756	1					
ANR	4369121	Identifier	arg		4364756	0					
ANR	4369122	PtrMemberAccess	core -> offset		4364756	2					
ANR	4369123	Identifier	core		4364756	0					
ANR	4369124	Identifier	offset		4364756	1					
ANR	4369125	IfStatement	if ( ! addr && arg )		4364756	1					
ANR	4369126	Condition	! addr && arg	1722:9:47093:47104	4364756	0	True				
ANR	4369127	AndExpression	! addr && arg		4364756	0		&&			
ANR	4369128	UnaryOperationExpression	! addr		4364756	0					
ANR	4369129	UnaryOperator	!		4364756	0					
ANR	4369130	Identifier	addr		4364756	1					
ANR	4369131	Identifier	arg		4364756	1					
ANR	4369132	CompoundStatement		718:6:18701:18770	4364756	1					
ANR	4369133	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 ) ;"	1723:6:47115:47184	4364756	0	True				
ANR	4369134	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		4364756	0					
ANR	4369135	IdentifierDeclType	RAnalFunction *		4364756	0					
ANR	4369136	Identifier	fcn		4364756	1					
ANR	4369137	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		4364756	2		=			
ANR	4369138	Identifier	fcn		4364756	0					
ANR	4369139	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		4364756	1					
ANR	4369140	Callee	r_anal_get_fcn_in		4364756	0					
ANR	4369141	Identifier	r_anal_get_fcn_in		4364756	0					
ANR	4369142	ArgumentList	core -> anal		4364756	1					
ANR	4369143	Argument	core -> anal		4364756	0					
ANR	4369144	PtrMemberAccess	core -> anal		4364756	0					
ANR	4369145	Identifier	core		4364756	0					
ANR	4369146	Identifier	anal		4364756	1					
ANR	4369147	Argument	core -> offset		4364756	1					
ANR	4369148	PtrMemberAccess	core -> offset		4364756	0					
ANR	4369149	Identifier	core		4364756	0					
ANR	4369150	Identifier	offset		4364756	1					
ANR	4369151	Argument	- 1		4364756	2					
ANR	4369152	UnaryOperationExpression	- 1		4364756	0					
ANR	4369153	UnaryOperator	-		4364756	0					
ANR	4369154	PrimaryExpression	1		4364756	1					
ANR	4369155	ExpressionStatement	"addr = r_anal_var_addr ( core -> anal , fcn , arg )"	1724:6:47192:47237	4364756	1	True				
ANR	4369156	AssignmentExpression	"addr = r_anal_var_addr ( core -> anal , fcn , arg )"		4364756	0		=			
ANR	4369157	Identifier	addr		4364756	0					
ANR	4369158	CallExpression	"r_anal_var_addr ( core -> anal , fcn , arg )"		4364756	1					
ANR	4369159	Callee	r_anal_var_addr		4364756	0					
ANR	4369160	Identifier	r_anal_var_addr		4364756	0					
ANR	4369161	ArgumentList	core -> anal		4364756	1					
ANR	4369162	Argument	core -> anal		4364756	0					
ANR	4369163	PtrMemberAccess	core -> anal		4364756	0					
ANR	4369164	Identifier	core		4364756	0					
ANR	4369165	Identifier	anal		4364756	1					
ANR	4369166	Argument	fcn		4364756	1					
ANR	4369167	Identifier	fcn		4364756	0					
ANR	4369168	Argument	arg		4364756	2					
ANR	4369169	Identifier	arg		4364756	0					
ANR	4369170	IfStatement	if ( addr != UT64_MAX )		4364756	2					
ANR	4369171	Condition	addr != UT64_MAX	1726:9:47255:47270	4364756	0	True				
ANR	4369172	EqualityExpression	addr != UT64_MAX		4364756	0		!=			
ANR	4369173	Identifier	addr		4364756	0					
ANR	4369174	Identifier	UT64_MAX		4364756	1					
ANR	4369175	CompoundStatement		721:27:18859:18859	4364756	1					
ANR	4369176	Statement	r_core_cmdf	1727:6:47281:47291	4364756	0	True				
ANR	4369177	Statement	(	1727:18:47293:47293	4364756	1	True				
ANR	4369178	Statement	core	1727:19:47294:47297	4364756	2	True				
ANR	4369179	Statement	","	1727:23:47298:47298	4364756	3	True				
ANR	4369180	Statement	"""pf %s @ 0x%08"""	1727:25:47300:47314	4364756	4	True				
ANR	4369181	Statement	PFMT64x	1727:41:47316:47322	4364756	5	True				
ANR	4369182	Statement	"""\\n"""	1727:49:47324:47327	4364756	6	True				
ANR	4369183	Statement	","	1727:53:47328:47328	4364756	7	True				
ANR	4369184	Statement	fmt	1727:55:47330:47332	4364756	8	True				
ANR	4369185	Statement	","	1727:58:47333:47333	4364756	9	True				
ANR	4369186	Statement	addr	1727:60:47335:47338	4364756	10	True				
ANR	4369187	Statement	)	1727:64:47339:47339	4364756	11	True				
ANR	4369188	ExpressionStatement		1727:65:47340:47340	4364756	12	True				
ANR	4369189	ExpressionStatement	free ( fmt )	1730:4:47359:47369	4364756	5	True				
ANR	4369190	CallExpression	free ( fmt )		4364756	0					
ANR	4369191	Callee	free		4364756	0					
ANR	4369192	Identifier	free		4364756	0					
ANR	4369193	ArgumentList	fmt		4364756	1					
ANR	4369194	Argument	fmt		4364756	0					
ANR	4369195	Identifier	fmt		4364756	0					
ANR	4369196	ElseStatement	else		4364756	0					
ANR	4369197	CompoundStatement		726:10:18967:18967	4364756	0					
ANR	4369198	ExpressionStatement	"eprintf ( ""see t?\\n"" )"	1732:4:47387:47407	4364756	0	True				
ANR	4369199	CallExpression	"eprintf ( ""see t?\\n"" )"		4364756	0					
ANR	4369200	Callee	eprintf		4364756	0					
ANR	4369201	Identifier	eprintf		4364756	0					
ANR	4369202	ArgumentList	"""see t?\\n"""		4364756	1					
ANR	4369203	Argument	"""see t?\\n"""		4364756	0					
ANR	4369204	PrimaryExpression	"""see t?\\n"""		4364756	0					
ANR	4369205	BreakStatement	break ;	1733:4:47413:47418	4364756	1	True				
ANR	4369206	ExpressionStatement	free ( tmp )	1735:3:47428:47438	4364756	6	True				
ANR	4369207	CallExpression	free ( tmp )		4364756	0					
ANR	4369208	Callee	free		4364756	0					
ANR	4369209	Identifier	free		4364756	0					
ANR	4369210	ArgumentList	tmp		4364756	1					
ANR	4369211	Argument	tmp		4364756	0					
ANR	4369212	Identifier	tmp		4364756	0					
ANR	4369213	BreakStatement	break ;	1737:2:47446:47451	4364756	44	True				
ANR	4369214	Label	case '-' :	1738:1:47454:47462	4364756	45	True				
ANR	4369215	IfStatement	if ( input [ 1 ] == '?' )		4364756	46					
ANR	4369216	Condition	input [ 1 ] == '?'	1739:6:47478:47492	4364756	0	True				
ANR	4369217	EqualityExpression	input [ 1 ] == '?'		4364756	0		==			
ANR	4369218	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4369219	Identifier	input		4364756	0					
ANR	4369220	PrimaryExpression	1		4364756	1					
ANR	4369221	PrimaryExpression	'?'		4364756	1					
ANR	4369222	CompoundStatement		734:23:19081:19081	4364756	1					
ANR	4369223	ExpressionStatement	"r_core_cmd_help ( core , help_msg_t_minus )"	1740:3:47500:47540	4364756	0	True				
ANR	4369224	CallExpression	"r_core_cmd_help ( core , help_msg_t_minus )"		4364756	0					
ANR	4369225	Callee	r_core_cmd_help		4364756	0					
ANR	4369226	Identifier	r_core_cmd_help		4364756	0					
ANR	4369227	ArgumentList	core		4364756	1					
ANR	4369228	Argument	core		4364756	0					
ANR	4369229	Identifier	core		4364756	0					
ANR	4369230	Argument	help_msg_t_minus		4364756	1					
ANR	4369231	Identifier	help_msg_t_minus		4364756	0					
ANR	4369232	ElseStatement	else		4364756	0					
ANR	4369233	IfStatement	if ( input [ 1 ] == '*' )		4364756	0					
ANR	4369234	Condition	input [ 1 ] == '*'	1741:13:47555:47569	4364756	0	True				
ANR	4369235	EqualityExpression	input [ 1 ] == '*'		4364756	0		==			
ANR	4369236	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4369237	Identifier	input		4364756	0					
ANR	4369238	PrimaryExpression	1		4364756	1					
ANR	4369239	PrimaryExpression	'*'		4364756	1					
ANR	4369240	CompoundStatement		736:30:19158:19158	4364756	1					
ANR	4369241	ExpressionStatement	sdb_reset ( TDB )	1742:3:47577:47592	4364756	0	True				
ANR	4369242	CallExpression	sdb_reset ( TDB )		4364756	0					
ANR	4369243	Callee	sdb_reset		4364756	0					
ANR	4369244	Identifier	sdb_reset		4364756	0					
ANR	4369245	ArgumentList	TDB		4364756	1					
ANR	4369246	Argument	TDB		4364756	0					
ANR	4369247	Identifier	TDB		4364756	0					
ANR	4369248	ExpressionStatement	r_parse_c_reset ( core -> parser )	1743:3:47597:47627	4364756	1	True				
ANR	4369249	CallExpression	r_parse_c_reset ( core -> parser )		4364756	0					
ANR	4369250	Callee	r_parse_c_reset		4364756	0					
ANR	4369251	Identifier	r_parse_c_reset		4364756	0					
ANR	4369252	ArgumentList	core -> parser		4364756	1					
ANR	4369253	Argument	core -> parser		4364756	0					
ANR	4369254	PtrMemberAccess	core -> parser		4364756	0					
ANR	4369255	Identifier	core		4364756	0					
ANR	4369256	Identifier	parser		4364756	1					
ANR	4369257	ElseStatement	else		4364756	0					
ANR	4369258	CompoundStatement		740:3:19229:19257	4364756	0					
ANR	4369259	IdentifierDeclStatement	const char * name = input + 1 ;	1745:3:47643:47671	4364756	0	True				
ANR	4369260	IdentifierDecl	* name = input + 1		4364756	0					
ANR	4369261	IdentifierDeclType	const char *		4364756	0					
ANR	4369262	Identifier	name		4364756	1					
ANR	4369263	AssignmentExpression	* name = input + 1		4364756	2		=			
ANR	4369264	Identifier	name		4364756	0					
ANR	4369265	AdditiveExpression	input + 1		4364756	1		+			
ANR	4369266	Identifier	input		4364756	0					
ANR	4369267	PrimaryExpression	1		4364756	1					
ANR	4369268	WhileStatement	while ( IS_WHITESPACE ( * name ) )		4364756	1					
ANR	4369269	Condition	IS_WHITESPACE ( * name )	1746:10:47683:47703	4364756	0	True				
ANR	4369270	CallExpression	IS_WHITESPACE ( * name )		4364756	0					
ANR	4369271	Callee	IS_WHITESPACE		4364756	0					
ANR	4369272	Identifier	IS_WHITESPACE		4364756	0					
ANR	4369273	ArgumentList	* name		4364756	1					
ANR	4369274	Argument	* name		4364756	0					
ANR	4369275	UnaryOperationExpression	* name		4364756	0					
ANR	4369276	UnaryOperator	*		4364756	0					
ANR	4369277	Identifier	name		4364756	1					
ANR	4369278	ExpressionStatement	name ++	1746:33:47706:47712	4364756	1	True				
ANR	4369279	PostIncDecOperationExpression	name ++		4364756	0					
ANR	4369280	Identifier	name		4364756	0					
ANR	4369281	IncDec	++		4364756	1					
ANR	4369282	IfStatement	if ( * name )		4364756	2					
ANR	4369283	Condition	* name	1747:7:47721:47725	4364756	0	True				
ANR	4369284	UnaryOperationExpression	* name		4364756	0					
ANR	4369285	UnaryOperator	*		4364756	0					
ANR	4369286	Identifier	name		4364756	1					
ANR	4369287	CompoundStatement		742:14:19314:19314	4364756	1					
ANR	4369288	ExpressionStatement	"r_anal_remove_parsed_type ( core -> anal , name )"	1748:4:47734:47778	4364756	0	True				
ANR	4369289	CallExpression	"r_anal_remove_parsed_type ( core -> anal , name )"		4364756	0					
ANR	4369290	Callee	r_anal_remove_parsed_type		4364756	0					
ANR	4369291	Identifier	r_anal_remove_parsed_type		4364756	0					
ANR	4369292	ArgumentList	core -> anal		4364756	1					
ANR	4369293	Argument	core -> anal		4364756	0					
ANR	4369294	PtrMemberAccess	core -> anal		4364756	0					
ANR	4369295	Identifier	core		4364756	0					
ANR	4369296	Identifier	anal		4364756	1					
ANR	4369297	Argument	name		4364756	1					
ANR	4369298	Identifier	name		4364756	0					
ANR	4369299	ElseStatement	else		4364756	0					
ANR	4369300	CompoundStatement		744:10:19376:19376	4364756	0					
ANR	4369301	ExpressionStatement	"eprintf ( ""Invalid use of t- . See t-? for help.\\n"" )"	1750:4:47796:47847	4364756	0	True				
ANR	4369302	CallExpression	"eprintf ( ""Invalid use of t- . See t-? for help.\\n"" )"		4364756	0					
ANR	4369303	Callee	eprintf		4364756	0					
ANR	4369304	Identifier	eprintf		4364756	0					
ANR	4369305	ArgumentList	"""Invalid use of t- . See t-? for help.\\n"""		4364756	1					
ANR	4369306	Argument	"""Invalid use of t- . See t-? for help.\\n"""		4364756	0					
ANR	4369307	PrimaryExpression	"""Invalid use of t- . See t-? for help.\\n"""		4364756	0					
ANR	4369308	BreakStatement	break ;	1753:2:47860:47865	4364756	47	True				
ANR	4369309	Label	case 'f' :	1755:1:47922:47930	4364756	48	True				
ANR	4369310	SwitchStatement	switch ( input [ 1 ] )		4364756	49					
ANR	4369311	Condition	input [ 1 ]	1756:10:47950:47957	4364756	0	True				
ANR	4369312	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4369313	Identifier	input		4364756	0					
ANR	4369314	PrimaryExpression	1		4364756	1					
ANR	4369315	CompoundStatement		751:20:19546:19546	4364756	1					
ANR	4369316	Label	case 0 :	1757:2:47964:47970	4364756	0	True				
ANR	4369317	ExpressionStatement	"print_keys ( TDB , core , stdiffunc , printkey_cb , false )"	1758:3:47975:48028	4364756	1	True				
ANR	4369318	CallExpression	"print_keys ( TDB , core , stdiffunc , printkey_cb , false )"		4364756	0					
ANR	4369319	Callee	print_keys		4364756	0					
ANR	4369320	Identifier	print_keys		4364756	0					
ANR	4369321	ArgumentList	TDB		4364756	1					
ANR	4369322	Argument	TDB		4364756	0					
ANR	4369323	Identifier	TDB		4364756	0					
ANR	4369324	Argument	core		4364756	1					
ANR	4369325	Identifier	core		4364756	0					
ANR	4369326	Argument	stdiffunc		4364756	2					
ANR	4369327	Identifier	stdiffunc		4364756	0					
ANR	4369328	Argument	printkey_cb		4364756	3					
ANR	4369329	Identifier	printkey_cb		4364756	0					
ANR	4369330	Argument	false		4364756	4					
ANR	4369331	Identifier	false		4364756	0					
ANR	4369332	BreakStatement	break ;	1759:3:48033:48038	4364756	2	True				
ANR	4369333	Label	case 'c' :	1760:2:48042:48050	4364756	3	True				
ANR	4369334	ExpressionStatement	"printFunctionTypeC ( core , input + 2 )"	1761:3:48064:48100	4364756	4	True				
ANR	4369335	CallExpression	"printFunctionTypeC ( core , input + 2 )"		4364756	0					
ANR	4369336	Callee	printFunctionTypeC		4364756	0					
ANR	4369337	Identifier	printFunctionTypeC		4364756	0					
ANR	4369338	ArgumentList	core		4364756	1					
ANR	4369339	Argument	core		4364756	0					
ANR	4369340	Identifier	core		4364756	0					
ANR	4369341	Argument	input + 2		4364756	1					
ANR	4369342	AdditiveExpression	input + 2		4364756	0		+			
ANR	4369343	Identifier	input		4364756	0					
ANR	4369344	PrimaryExpression	2		4364756	1					
ANR	4369345	BreakStatement	break ;	1762:3:48105:48110	4364756	5	True				
ANR	4369346	Label	case 'j' :	1763:2:48114:48122	4364756	6	True				
ANR	4369347	IfStatement	if ( input [ 2 ] == ' ' )		4364756	7					
ANR	4369348	Condition	input [ 2 ] == ' '	1764:7:48131:48145	4364756	0	True				
ANR	4369349	EqualityExpression	input [ 2 ] == ' '		4364756	0		==			
ANR	4369350	ArrayIndexing	input [ 2 ]		4364756	0					
ANR	4369351	Identifier	input		4364756	0					
ANR	4369352	PrimaryExpression	2		4364756	1					
ANR	4369353	PrimaryExpression	' '		4364756	1					
ANR	4369354	CompoundStatement		759:24:19734:19734	4364756	1					
ANR	4369355	ExpressionStatement	"printFunctionType ( core , input + 2 )"	1765:4:48154:48189	4364756	0	True				
ANR	4369356	CallExpression	"printFunctionType ( core , input + 2 )"		4364756	0					
ANR	4369357	Callee	printFunctionType		4364756	0					
ANR	4369358	Identifier	printFunctionType		4364756	0					
ANR	4369359	ArgumentList	core		4364756	1					
ANR	4369360	Argument	core		4364756	0					
ANR	4369361	Identifier	core		4364756	0					
ANR	4369362	Argument	input + 2		4364756	1					
ANR	4369363	AdditiveExpression	input + 2		4364756	0		+			
ANR	4369364	Identifier	input		4364756	0					
ANR	4369365	PrimaryExpression	2		4364756	1					
ANR	4369366	ExpressionStatement	"r_cons_printf ( ""\\n"" )"	1766:4:48195:48215	4364756	1	True				
ANR	4369367	CallExpression	"r_cons_printf ( ""\\n"" )"		4364756	0					
ANR	4369368	Callee	r_cons_printf		4364756	0					
ANR	4369369	Identifier	r_cons_printf		4364756	0					
ANR	4369370	ArgumentList	"""\\n"""		4364756	1					
ANR	4369371	Argument	"""\\n"""		4364756	0					
ANR	4369372	PrimaryExpression	"""\\n"""		4364756	0					
ANR	4369373	ElseStatement	else		4364756	0					
ANR	4369374	CompoundStatement		762:10:19813:19813	4364756	0					
ANR	4369375	ExpressionStatement	"print_keys ( TDB , core , stdiffunc , printfunc_json_cb , true )"	1768:4:48233:48291	4364756	0	True				
ANR	4369376	CallExpression	"print_keys ( TDB , core , stdiffunc , printfunc_json_cb , true )"		4364756	0					
ANR	4369377	Callee	print_keys		4364756	0					
ANR	4369378	Identifier	print_keys		4364756	0					
ANR	4369379	ArgumentList	TDB		4364756	1					
ANR	4369380	Argument	TDB		4364756	0					
ANR	4369381	Identifier	TDB		4364756	0					
ANR	4369382	Argument	core		4364756	1					
ANR	4369383	Identifier	core		4364756	0					
ANR	4369384	Argument	stdiffunc		4364756	2					
ANR	4369385	Identifier	stdiffunc		4364756	0					
ANR	4369386	Argument	printfunc_json_cb		4364756	3					
ANR	4369387	Identifier	printfunc_json_cb		4364756	0					
ANR	4369388	Argument	true		4364756	4					
ANR	4369389	Identifier	true		4364756	0					
ANR	4369390	BreakStatement	break ;	1770:3:48301:48306	4364756	8	True				
ANR	4369391	Label	case ' ' :	1771:2:48310:48318	4364756	9	True				
ANR	4369392	CompoundStatement		767:3:19911:19983	4364756	10					
ANR	4369393	IdentifierDeclStatement	"char * res = sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""~~func.%s"" , input + 2 ) ) ;"	1772:3:48325:48397	4364756	0	True				
ANR	4369394	IdentifierDecl	"* res = sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""~~func.%s"" , input + 2 ) )"		4364756	0					
ANR	4369395	IdentifierDeclType	char *		4364756	0					
ANR	4369396	Identifier	res		4364756	1					
ANR	4369397	AssignmentExpression	"* res = sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""~~func.%s"" , input + 2 ) )"		4364756	2		=			
ANR	4369398	Identifier	res		4364756	0					
ANR	4369399	CallExpression	"sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""~~func.%s"" , input + 2 ) )"		4364756	1					
ANR	4369400	Callee	sdb_querys		4364756	0					
ANR	4369401	Identifier	sdb_querys		4364756	0					
ANR	4369402	ArgumentList	TDB		4364756	1					
ANR	4369403	Argument	TDB		4364756	0					
ANR	4369404	Identifier	TDB		4364756	0					
ANR	4369405	Argument	NULL		4364756	1					
ANR	4369406	Identifier	NULL		4364756	0					
ANR	4369407	Argument	- 1		4364756	2					
ANR	4369408	UnaryOperationExpression	- 1		4364756	0					
ANR	4369409	UnaryOperator	-		4364756	0					
ANR	4369410	PrimaryExpression	1		4364756	1					
ANR	4369411	Argument	"sdb_fmt ( ""~~func.%s"" , input + 2 )"		4364756	3					
ANR	4369412	CallExpression	"sdb_fmt ( ""~~func.%s"" , input + 2 )"		4364756	0					
ANR	4369413	Callee	sdb_fmt		4364756	0					
ANR	4369414	Identifier	sdb_fmt		4364756	0					
ANR	4369415	ArgumentList	"""~~func.%s"""		4364756	1					
ANR	4369416	Argument	"""~~func.%s"""		4364756	0					
ANR	4369417	PrimaryExpression	"""~~func.%s"""		4364756	0					
ANR	4369418	Argument	input + 2		4364756	1					
ANR	4369419	AdditiveExpression	input + 2		4364756	0		+			
ANR	4369420	Identifier	input		4364756	0					
ANR	4369421	PrimaryExpression	2		4364756	1					
ANR	4369422	IfStatement	if ( res )		4364756	1					
ANR	4369423	Condition	res	1773:7:48406:48408	4364756	0	True				
ANR	4369424	Identifier	res		4364756	0					
ANR	4369425	CompoundStatement		768:12:19997:19997	4364756	1					
ANR	4369426	ExpressionStatement	"r_cons_printf ( ""%s"" , res )"	1774:4:48417:48442	4364756	0	True				
ANR	4369427	CallExpression	"r_cons_printf ( ""%s"" , res )"		4364756	0					
ANR	4369428	Callee	r_cons_printf		4364756	0					
ANR	4369429	Identifier	r_cons_printf		4364756	0					
ANR	4369430	ArgumentList	"""%s"""		4364756	1					
ANR	4369431	Argument	"""%s"""		4364756	0					
ANR	4369432	PrimaryExpression	"""%s"""		4364756	0					
ANR	4369433	Argument	res		4364756	1					
ANR	4369434	Identifier	res		4364756	0					
ANR	4369435	ExpressionStatement	free ( res )	1775:4:48448:48458	4364756	1	True				
ANR	4369436	CallExpression	free ( res )		4364756	0					
ANR	4369437	Callee	free		4364756	0					
ANR	4369438	Identifier	free		4364756	0					
ANR	4369439	ArgumentList	res		4364756	1					
ANR	4369440	Argument	res		4364756	0					
ANR	4369441	Identifier	res		4364756	0					
ANR	4369442	BreakStatement	break ;	1777:3:48468:48473	4364756	2	True				
ANR	4369443	Label	default :	1779:2:48481:48488	4364756	11	True				
ANR	4369444	Identifier	default		4364756	0					
ANR	4369445	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tf )"	1780:3:48493:48528	4364756	12	True				
ANR	4369446	CallExpression	"r_core_cmd_help ( core , help_msg_tf )"		4364756	0					
ANR	4369447	Callee	r_core_cmd_help		4364756	0					
ANR	4369448	Identifier	r_core_cmd_help		4364756	0					
ANR	4369449	ArgumentList	core		4364756	1					
ANR	4369450	Argument	core		4364756	0					
ANR	4369451	Identifier	core		4364756	0					
ANR	4369452	Argument	help_msg_tf		4364756	1					
ANR	4369453	Identifier	help_msg_tf		4364756	0					
ANR	4369454	BreakStatement	break ;	1781:3:48533:48538	4364756	13	True				
ANR	4369455	BreakStatement	break ;	1783:2:48546:48551	4364756	50	True				
ANR	4369456	Label	case 't' :	1784:1:48554:48562	4364756	51	True				
ANR	4369457	CompoundStatement		855:2:21914:21935	4364756	52					
ANR	4369458	IfStatement	if ( ! input [ 1 ] || input [ 1 ] == 'j' )		4364756	0					
ANR	4369459	Condition	! input [ 1 ] || input [ 1 ] == 'j'	1785:6:48572:48599	4364756	0	True				
ANR	4369460	OrExpression	! input [ 1 ] || input [ 1 ] == 'j'		4364756	0		||			
ANR	4369461	UnaryOperationExpression	! input [ 1 ]		4364756	0					
ANR	4369462	UnaryOperator	!		4364756	0					
ANR	4369463	ArrayIndexing	input [ 1 ]		4364756	1					
ANR	4369464	Identifier	input		4364756	0					
ANR	4369465	PrimaryExpression	1		4364756	1					
ANR	4369466	EqualityExpression	input [ 1 ] == 'j'		4364756	1		==			
ANR	4369467	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4369468	Identifier	input		4364756	0					
ANR	4369469	PrimaryExpression	1		4364756	1					
ANR	4369470	PrimaryExpression	'j'		4364756	1					
ANR	4369471	CompoundStatement		789:3:20335:20376	4364756	1					
ANR	4369472	IdentifierDeclStatement	PJ * pj = NULL ;	1786:3:48607:48620	4364756	0	True				
ANR	4369473	IdentifierDecl	* pj = NULL		4364756	0					
ANR	4369474	IdentifierDeclType	PJ *		4364756	0					
ANR	4369475	Identifier	pj		4364756	1					
ANR	4369476	AssignmentExpression	* pj = NULL		4364756	2		=			
ANR	4369477	Identifier	NULL		4364756	0					
ANR	4369478	Identifier	NULL		4364756	1					
ANR	4369479	IfStatement	if ( input [ 1 ] == 'j' )		4364756	1					
ANR	4369480	Condition	input [ 1 ] == 'j'	1787:7:48629:48643	4364756	0	True				
ANR	4369481	EqualityExpression	input [ 1 ] == 'j'		4364756	0		==			
ANR	4369482	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4369483	Identifier	input		4364756	0					
ANR	4369484	PrimaryExpression	1		4364756	1					
ANR	4369485	PrimaryExpression	'j'		4364756	1					
ANR	4369486	CompoundStatement		782:24:20232:20232	4364756	1					
ANR	4369487	ExpressionStatement	pj = pj_new ( )	1788:4:48652:48666	4364756	0	True				
ANR	4369488	AssignmentExpression	pj = pj_new ( )		4364756	0		=			
ANR	4369489	Identifier	pj		4364756	0					
ANR	4369490	CallExpression	pj_new ( )		4364756	1					
ANR	4369491	Callee	pj_new		4364756	0					
ANR	4369492	Identifier	pj_new		4364756	0					
ANR	4369493	ArgumentList			4364756	1					
ANR	4369494	ExpressionStatement	pj_o ( pj )	1789:4:48672:48681	4364756	1	True				
ANR	4369495	CallExpression	pj_o ( pj )		4364756	0					
ANR	4369496	Callee	pj_o		4364756	0					
ANR	4369497	Identifier	pj_o		4364756	0					
ANR	4369498	ArgumentList	pj		4364756	1					
ANR	4369499	Argument	pj		4364756	0					
ANR	4369500	Identifier	pj		4364756	0					
ANR	4369501	IdentifierDeclStatement	char * name = NULL ;	1791:3:48691:48708	4364756	2	True				
ANR	4369502	IdentifierDecl	* name = NULL		4364756	0					
ANR	4369503	IdentifierDeclType	char *		4364756	0					
ANR	4369504	Identifier	name		4364756	1					
ANR	4369505	AssignmentExpression	* name = NULL		4364756	2		=			
ANR	4369506	Identifier	NULL		4364756	0					
ANR	4369507	Identifier	NULL		4364756	1					
ANR	4369508	IdentifierDeclStatement	SdbKv * kv ;	1792:3:48713:48722	4364756	3	True				
ANR	4369509	IdentifierDecl	* kv		4364756	0					
ANR	4369510	IdentifierDeclType	SdbKv *		4364756	0					
ANR	4369511	Identifier	kv		4364756	1					
ANR	4369512	IdentifierDeclStatement	SdbListIter * iter ;	1793:3:48727:48744	4364756	4	True				
ANR	4369513	IdentifierDecl	* iter		4364756	0					
ANR	4369514	IdentifierDeclType	SdbListIter *		4364756	0					
ANR	4369515	Identifier	iter		4364756	1					
ANR	4369516	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list ( TDB , true ) ;"	1794:3:48749:48790	4364756	5	True				
ANR	4369517	IdentifierDecl	"* l = sdb_foreach_list ( TDB , true )"		4364756	0					
ANR	4369518	IdentifierDeclType	SdbList *		4364756	0					
ANR	4369519	Identifier	l		4364756	1					
ANR	4369520	AssignmentExpression	"* l = sdb_foreach_list ( TDB , true )"		4364756	2		=			
ANR	4369521	Identifier	l		4364756	0					
ANR	4369522	CallExpression	"sdb_foreach_list ( TDB , true )"		4364756	1					
ANR	4369523	Callee	sdb_foreach_list		4364756	0					
ANR	4369524	Identifier	sdb_foreach_list		4364756	0					
ANR	4369525	ArgumentList	TDB		4364756	1					
ANR	4369526	Argument	TDB		4364756	0					
ANR	4369527	Identifier	TDB		4364756	0					
ANR	4369528	Argument	true		4364756	1					
ANR	4369529	Identifier	true		4364756	0					
ANR	4369530	Statement	ls_foreach	1795:3:48795:48804	4364756	6	True				
ANR	4369531	Statement	(	1795:14:48806:48806	4364756	7	True				
ANR	4369532	Statement	l	1795:15:48807:48807	4364756	8	True				
ANR	4369533	Statement	","	1795:16:48808:48808	4364756	9	True				
ANR	4369534	Statement	iter	1795:18:48810:48813	4364756	10	True				
ANR	4369535	Statement	","	1795:22:48814:48814	4364756	11	True				
ANR	4369536	Statement	kv	1795:24:48816:48817	4364756	12	True				
ANR	4369537	Statement	)	1795:26:48818:48818	4364756	13	True				
ANR	4369538	CompoundStatement		790:28:20406:20406	4364756	14					
ANR	4369539	IfStatement	"if ( ! strcmp ( sdbkv_value ( kv ) , ""typedef"" ) )"		4364756	0					
ANR	4369540	Condition	"! strcmp ( sdbkv_value ( kv ) , ""typedef"" )"	1796:8:48830:48866	4364756	0	True				
ANR	4369541	UnaryOperationExpression	"! strcmp ( sdbkv_value ( kv ) , ""typedef"" )"		4364756	0					
ANR	4369542	UnaryOperator	!		4364756	0					
ANR	4369543	CallExpression	"strcmp ( sdbkv_value ( kv ) , ""typedef"" )"		4364756	1					
ANR	4369544	Callee	strcmp		4364756	0					
ANR	4369545	Identifier	strcmp		4364756	0					
ANR	4369546	ArgumentList	sdbkv_value ( kv )		4364756	1					
ANR	4369547	Argument	sdbkv_value ( kv )		4364756	0					
ANR	4369548	CallExpression	sdbkv_value ( kv )		4364756	0					
ANR	4369549	Callee	sdbkv_value		4364756	0					
ANR	4369550	Identifier	sdbkv_value		4364756	0					
ANR	4369551	ArgumentList	kv		4364756	1					
ANR	4369552	Argument	kv		4364756	0					
ANR	4369553	Identifier	kv		4364756	0					
ANR	4369554	Argument	"""typedef"""		4364756	1					
ANR	4369555	PrimaryExpression	"""typedef"""		4364756	0					
ANR	4369556	CompoundStatement		791:47:20455:20455	4364756	1					
ANR	4369557	IfStatement	"if ( ! name || strcmp ( sdbkv_value ( kv ) , name ) )"		4364756	0					
ANR	4369558	Condition	"! name || strcmp ( sdbkv_value ( kv ) , name )"	1797:9:48880:48919	4364756	0	True				
ANR	4369559	OrExpression	"! name || strcmp ( sdbkv_value ( kv ) , name )"		4364756	0		||			
ANR	4369560	UnaryOperationExpression	! name		4364756	0					
ANR	4369561	UnaryOperator	!		4364756	0					
ANR	4369562	Identifier	name		4364756	1					
ANR	4369563	CallExpression	"strcmp ( sdbkv_value ( kv ) , name )"		4364756	1					
ANR	4369564	Callee	strcmp		4364756	0					
ANR	4369565	Identifier	strcmp		4364756	0					
ANR	4369566	ArgumentList	sdbkv_value ( kv )		4364756	1					
ANR	4369567	Argument	sdbkv_value ( kv )		4364756	0					
ANR	4369568	CallExpression	sdbkv_value ( kv )		4364756	0					
ANR	4369569	Callee	sdbkv_value		4364756	0					
ANR	4369570	Identifier	sdbkv_value		4364756	0					
ANR	4369571	ArgumentList	kv		4364756	1					
ANR	4369572	Argument	kv		4364756	0					
ANR	4369573	Identifier	kv		4364756	0					
ANR	4369574	Argument	name		4364756	1					
ANR	4369575	Identifier	name		4364756	0					
ANR	4369576	CompoundStatement		792:51:20508:20508	4364756	1					
ANR	4369577	ExpressionStatement	free ( name )	1798:6:48930:48941	4364756	0	True				
ANR	4369578	CallExpression	free ( name )		4364756	0					
ANR	4369579	Callee	free		4364756	0					
ANR	4369580	Identifier	free		4364756	0					
ANR	4369581	ArgumentList	name		4364756	1					
ANR	4369582	Argument	name		4364756	0					
ANR	4369583	Identifier	name		4364756	0					
ANR	4369584	ExpressionStatement	name = strdup ( sdbkv_key ( kv ) )	1799:6:48949:48979	4364756	1	True				
ANR	4369585	AssignmentExpression	name = strdup ( sdbkv_key ( kv ) )		4364756	0		=			
ANR	4369586	Identifier	name		4364756	0					
ANR	4369587	CallExpression	strdup ( sdbkv_key ( kv ) )		4364756	1					
ANR	4369588	Callee	strdup		4364756	0					
ANR	4369589	Identifier	strdup		4364756	0					
ANR	4369590	ArgumentList	sdbkv_key ( kv )		4364756	1					
ANR	4369591	Argument	sdbkv_key ( kv )		4364756	0					
ANR	4369592	CallExpression	sdbkv_key ( kv )		4364756	0					
ANR	4369593	Callee	sdbkv_key		4364756	0					
ANR	4369594	Identifier	sdbkv_key		4364756	0					
ANR	4369595	ArgumentList	kv		4364756	1					
ANR	4369596	Argument	kv		4364756	0					
ANR	4369597	Identifier	kv		4364756	0					
ANR	4369598	IfStatement	if ( ! input [ 1 ] )		4364756	2					
ANR	4369599	Condition	! input [ 1 ]	1800:10:48991:48999	4364756	0	True				
ANR	4369600	UnaryOperationExpression	! input [ 1 ]		4364756	0					
ANR	4369601	UnaryOperator	!		4364756	0					
ANR	4369602	ArrayIndexing	input [ 1 ]		4364756	1					
ANR	4369603	Identifier	input		4364756	0					
ANR	4369604	PrimaryExpression	1		4364756	1					
ANR	4369605	CompoundStatement		795:21:20588:20588	4364756	1					
ANR	4369606	ExpressionStatement	r_cons_println ( name )	1801:7:49011:49032	4364756	0	True				
ANR	4369607	CallExpression	r_cons_println ( name )		4364756	0					
ANR	4369608	Callee	r_cons_println		4364756	0					
ANR	4369609	Identifier	r_cons_println		4364756	0					
ANR	4369610	ArgumentList	name		4364756	1					
ANR	4369611	Argument	name		4364756	0					
ANR	4369612	Identifier	name		4364756	0					
ANR	4369613	ElseStatement	else		4364756	0					
ANR	4369614	CompoundStatement		799:7:20695:20738	4364756	0					
ANR	4369615	IdentifierDeclStatement	"const char * q = sdb_fmt ( ""typedef.%s"" , name ) ;"	1803:7:49056:49100	4364756	0	True				
ANR	4369616	IdentifierDecl	"* q = sdb_fmt ( ""typedef.%s"" , name )"		4364756	0					
ANR	4369617	IdentifierDeclType	const char *		4364756	0					
ANR	4369618	Identifier	q		4364756	1					
ANR	4369619	AssignmentExpression	"* q = sdb_fmt ( ""typedef.%s"" , name )"		4364756	2		=			
ANR	4369620	Identifier	q		4364756	0					
ANR	4369621	CallExpression	"sdb_fmt ( ""typedef.%s"" , name )"		4364756	1					
ANR	4369622	Callee	sdb_fmt		4364756	0					
ANR	4369623	Identifier	sdb_fmt		4364756	0					
ANR	4369624	ArgumentList	"""typedef.%s"""		4364756	1					
ANR	4369625	Argument	"""typedef.%s"""		4364756	0					
ANR	4369626	PrimaryExpression	"""typedef.%s"""		4364756	0					
ANR	4369627	Argument	name		4364756	1					
ANR	4369628	Identifier	name		4364756	0					
ANR	4369629	IdentifierDeclStatement	"const char * res = sdb_const_get ( TDB , q , 0 ) ;"	1804:7:49109:49152	4364756	1	True				
ANR	4369630	IdentifierDecl	"* res = sdb_const_get ( TDB , q , 0 )"		4364756	0					
ANR	4369631	IdentifierDeclType	const char *		4364756	0					
ANR	4369632	Identifier	res		4364756	1					
ANR	4369633	AssignmentExpression	"* res = sdb_const_get ( TDB , q , 0 )"		4364756	2		=			
ANR	4369634	Identifier	res		4364756	0					
ANR	4369635	CallExpression	"sdb_const_get ( TDB , q , 0 )"		4364756	1					
ANR	4369636	Callee	sdb_const_get		4364756	0					
ANR	4369637	Identifier	sdb_const_get		4364756	0					
ANR	4369638	ArgumentList	TDB		4364756	1					
ANR	4369639	Argument	TDB		4364756	0					
ANR	4369640	Identifier	TDB		4364756	0					
ANR	4369641	Argument	q		4364756	1					
ANR	4369642	Identifier	q		4364756	0					
ANR	4369643	Argument	0		4364756	2					
ANR	4369644	PrimaryExpression	0		4364756	0					
ANR	4369645	ExpressionStatement	"pj_ks ( pj , name , res )"	1805:7:49161:49182	4364756	2	True				
ANR	4369646	CallExpression	"pj_ks ( pj , name , res )"		4364756	0					
ANR	4369647	Callee	pj_ks		4364756	0					
ANR	4369648	Identifier	pj_ks		4364756	0					
ANR	4369649	ArgumentList	pj		4364756	1					
ANR	4369650	Argument	pj		4364756	0					
ANR	4369651	Identifier	pj		4364756	0					
ANR	4369652	Argument	name		4364756	1					
ANR	4369653	Identifier	name		4364756	0					
ANR	4369654	Argument	res		4364756	2					
ANR	4369655	Identifier	res		4364756	0					
ANR	4369656	IfStatement	if ( input [ 1 ] == 'j' )		4364756	15					
ANR	4369657	Condition	input [ 1 ] == 'j'	1810:7:49217:49231	4364756	0	True				
ANR	4369658	EqualityExpression	input [ 1 ] == 'j'		4364756	0		==			
ANR	4369659	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4369660	Identifier	input		4364756	0					
ANR	4369661	PrimaryExpression	1		4364756	1					
ANR	4369662	PrimaryExpression	'j'		4364756	1					
ANR	4369663	CompoundStatement		805:24:20820:20820	4364756	1					
ANR	4369664	ExpressionStatement	pj_end ( pj )	1811:4:49240:49251	4364756	0	True				
ANR	4369665	CallExpression	pj_end ( pj )		4364756	0					
ANR	4369666	Callee	pj_end		4364756	0					
ANR	4369667	Identifier	pj_end		4364756	0					
ANR	4369668	ArgumentList	pj		4364756	1					
ANR	4369669	Argument	pj		4364756	0					
ANR	4369670	Identifier	pj		4364756	0					
ANR	4369671	IfStatement	if ( pj )		4364756	16					
ANR	4369672	Condition	pj	1813:7:49265:49266	4364756	0	True				
ANR	4369673	Identifier	pj		4364756	0					
ANR	4369674	CompoundStatement		808:11:20855:20855	4364756	1					
ANR	4369675	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	1814:4:49275:49313	4364756	0	True				
ANR	4369676	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		4364756	0					
ANR	4369677	Callee	r_cons_printf		4364756	0					
ANR	4369678	Identifier	r_cons_printf		4364756	0					
ANR	4369679	ArgumentList	"""%s\\n"""		4364756	1					
ANR	4369680	Argument	"""%s\\n"""		4364756	0					
ANR	4369681	PrimaryExpression	"""%s\\n"""		4364756	0					
ANR	4369682	Argument	pj_string ( pj )		4364756	1					
ANR	4369683	CallExpression	pj_string ( pj )		4364756	0					
ANR	4369684	Callee	pj_string		4364756	0					
ANR	4369685	Identifier	pj_string		4364756	0					
ANR	4369686	ArgumentList	pj		4364756	1					
ANR	4369687	Argument	pj		4364756	0					
ANR	4369688	Identifier	pj		4364756	0					
ANR	4369689	ExpressionStatement	pj_free ( pj )	1815:4:49319:49331	4364756	1	True				
ANR	4369690	CallExpression	pj_free ( pj )		4364756	0					
ANR	4369691	Callee	pj_free		4364756	0					
ANR	4369692	Identifier	pj_free		4364756	0					
ANR	4369693	ArgumentList	pj		4364756	1					
ANR	4369694	Argument	pj		4364756	0					
ANR	4369695	Identifier	pj		4364756	0					
ANR	4369696	ExpressionStatement	free ( name )	1817:3:49341:49352	4364756	17	True				
ANR	4369697	CallExpression	free ( name )		4364756	0					
ANR	4369698	Callee	free		4364756	0					
ANR	4369699	Identifier	free		4364756	0					
ANR	4369700	ArgumentList	name		4364756	1					
ANR	4369701	Argument	name		4364756	0					
ANR	4369702	Identifier	name		4364756	0					
ANR	4369703	ExpressionStatement	ls_free ( l )	1818:3:49357:49368	4364756	18	True				
ANR	4369704	CallExpression	ls_free ( l )		4364756	0					
ANR	4369705	Callee	ls_free		4364756	0					
ANR	4369706	Identifier	ls_free		4364756	0					
ANR	4369707	ArgumentList	l		4364756	1					
ANR	4369708	Argument	l		4364756	0					
ANR	4369709	Identifier	l		4364756	0					
ANR	4369710	BreakStatement	break ;	1819:3:49373:49378	4364756	19	True				
ANR	4369711	IfStatement	if ( input [ 1 ] == 'c' )		4364756	1					
ANR	4369712	Condition	input [ 1 ] == 'c'	1821:6:49390:49404	4364756	0	True				
ANR	4369713	EqualityExpression	input [ 1 ] == 'c'		4364756	0		==			
ANR	4369714	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4369715	Identifier	input		4364756	0					
ANR	4369716	PrimaryExpression	1		4364756	1					
ANR	4369717	PrimaryExpression	'c'		4364756	1					
ANR	4369718	CompoundStatement		822:3:21150:21168	4364756	1					
ANR	4369719	IdentifierDeclStatement	char * name = NULL ;	1822:3:49412:49429	4364756	0	True				
ANR	4369720	IdentifierDecl	* name = NULL		4364756	0					
ANR	4369721	IdentifierDeclType	char *		4364756	0					
ANR	4369722	Identifier	name		4364756	1					
ANR	4369723	AssignmentExpression	* name = NULL		4364756	2		=			
ANR	4369724	Identifier	NULL		4364756	0					
ANR	4369725	Identifier	NULL		4364756	1					
ANR	4369726	IdentifierDeclStatement	SdbKv * kv ;	1823:3:49434:49443	4364756	1	True				
ANR	4369727	IdentifierDecl	* kv		4364756	0					
ANR	4369728	IdentifierDeclType	SdbKv *		4364756	0					
ANR	4369729	Identifier	kv		4364756	1					
ANR	4369730	IdentifierDeclStatement	SdbListIter * iter ;	1824:3:49448:49465	4364756	2	True				
ANR	4369731	IdentifierDecl	* iter		4364756	0					
ANR	4369732	IdentifierDeclType	SdbListIter *		4364756	0					
ANR	4369733	Identifier	iter		4364756	1					
ANR	4369734	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list ( TDB , true ) ;"	1825:3:49470:49511	4364756	3	True				
ANR	4369735	IdentifierDecl	"* l = sdb_foreach_list ( TDB , true )"		4364756	0					
ANR	4369736	IdentifierDeclType	SdbList *		4364756	0					
ANR	4369737	Identifier	l		4364756	1					
ANR	4369738	AssignmentExpression	"* l = sdb_foreach_list ( TDB , true )"		4364756	2		=			
ANR	4369739	Identifier	l		4364756	0					
ANR	4369740	CallExpression	"sdb_foreach_list ( TDB , true )"		4364756	1					
ANR	4369741	Callee	sdb_foreach_list		4364756	0					
ANR	4369742	Identifier	sdb_foreach_list		4364756	0					
ANR	4369743	ArgumentList	TDB		4364756	1					
ANR	4369744	Argument	TDB		4364756	0					
ANR	4369745	Identifier	TDB		4364756	0					
ANR	4369746	Argument	true		4364756	1					
ANR	4369747	Identifier	true		4364756	0					
ANR	4369748	IdentifierDeclStatement	const char * arg = r_str_trim_ro ( input + 2 ) ;	1826:3:49516:49559	4364756	4	True				
ANR	4369749	IdentifierDecl	* arg = r_str_trim_ro ( input + 2 )		4364756	0					
ANR	4369750	IdentifierDeclType	const char *		4364756	0					
ANR	4369751	Identifier	arg		4364756	1					
ANR	4369752	AssignmentExpression	* arg = r_str_trim_ro ( input + 2 )		4364756	2		=			
ANR	4369753	Identifier	arg		4364756	0					
ANR	4369754	CallExpression	r_str_trim_ro ( input + 2 )		4364756	1					
ANR	4369755	Callee	r_str_trim_ro		4364756	0					
ANR	4369756	Identifier	r_str_trim_ro		4364756	0					
ANR	4369757	ArgumentList	input + 2		4364756	1					
ANR	4369758	Argument	input + 2		4364756	0					
ANR	4369759	AdditiveExpression	input + 2		4364756	0		+			
ANR	4369760	Identifier	input		4364756	0					
ANR	4369761	PrimaryExpression	2		4364756	1					
ANR	4369762	IdentifierDeclStatement	bool match = false ;	1827:3:49564:49582	4364756	5	True				
ANR	4369763	IdentifierDecl	match = false		4364756	0					
ANR	4369764	IdentifierDeclType	bool		4364756	0					
ANR	4369765	Identifier	match		4364756	1					
ANR	4369766	AssignmentExpression	match = false		4364756	2		=			
ANR	4369767	Identifier	false		4364756	0					
ANR	4369768	Identifier	false		4364756	1					
ANR	4369769	Statement	ls_foreach	1828:3:49587:49596	4364756	6	True				
ANR	4369770	Statement	(	1828:14:49598:49598	4364756	7	True				
ANR	4369771	Statement	l	1828:15:49599:49599	4364756	8	True				
ANR	4369772	Statement	","	1828:16:49600:49600	4364756	9	True				
ANR	4369773	Statement	iter	1828:18:49602:49605	4364756	10	True				
ANR	4369774	Statement	","	1828:22:49606:49606	4364756	11	True				
ANR	4369775	Statement	kv	1828:24:49608:49609	4364756	12	True				
ANR	4369776	Statement	)	1828:26:49610:49610	4364756	13	True				
ANR	4369777	CompoundStatement		823:28:21198:21198	4364756	14					
ANR	4369778	IfStatement	"if ( ! strcmp ( sdbkv_value ( kv ) , ""typedef"" ) )"		4364756	0					
ANR	4369779	Condition	"! strcmp ( sdbkv_value ( kv ) , ""typedef"" )"	1829:8:49622:49658	4364756	0	True				
ANR	4369780	UnaryOperationExpression	"! strcmp ( sdbkv_value ( kv ) , ""typedef"" )"		4364756	0					
ANR	4369781	UnaryOperator	!		4364756	0					
ANR	4369782	CallExpression	"strcmp ( sdbkv_value ( kv ) , ""typedef"" )"		4364756	1					
ANR	4369783	Callee	strcmp		4364756	0					
ANR	4369784	Identifier	strcmp		4364756	0					
ANR	4369785	ArgumentList	sdbkv_value ( kv )		4364756	1					
ANR	4369786	Argument	sdbkv_value ( kv )		4364756	0					
ANR	4369787	CallExpression	sdbkv_value ( kv )		4364756	0					
ANR	4369788	Callee	sdbkv_value		4364756	0					
ANR	4369789	Identifier	sdbkv_value		4364756	0					
ANR	4369790	ArgumentList	kv		4364756	1					
ANR	4369791	Argument	kv		4364756	0					
ANR	4369792	Identifier	kv		4364756	0					
ANR	4369793	Argument	"""typedef"""		4364756	1					
ANR	4369794	PrimaryExpression	"""typedef"""		4364756	0					
ANR	4369795	CompoundStatement		824:47:21247:21247	4364756	1					
ANR	4369796	IfStatement	"if ( ! name || strcmp ( sdbkv_value ( kv ) , name ) )"		4364756	0					
ANR	4369797	Condition	"! name || strcmp ( sdbkv_value ( kv ) , name )"	1830:9:49672:49711	4364756	0	True				
ANR	4369798	OrExpression	"! name || strcmp ( sdbkv_value ( kv ) , name )"		4364756	0		||			
ANR	4369799	UnaryOperationExpression	! name		4364756	0					
ANR	4369800	UnaryOperator	!		4364756	0					
ANR	4369801	Identifier	name		4364756	1					
ANR	4369802	CallExpression	"strcmp ( sdbkv_value ( kv ) , name )"		4364756	1					
ANR	4369803	Callee	strcmp		4364756	0					
ANR	4369804	Identifier	strcmp		4364756	0					
ANR	4369805	ArgumentList	sdbkv_value ( kv )		4364756	1					
ANR	4369806	Argument	sdbkv_value ( kv )		4364756	0					
ANR	4369807	CallExpression	sdbkv_value ( kv )		4364756	0					
ANR	4369808	Callee	sdbkv_value		4364756	0					
ANR	4369809	Identifier	sdbkv_value		4364756	0					
ANR	4369810	ArgumentList	kv		4364756	1					
ANR	4369811	Argument	kv		4364756	0					
ANR	4369812	Identifier	kv		4364756	0					
ANR	4369813	Argument	name		4364756	1					
ANR	4369814	Identifier	name		4364756	0					
ANR	4369815	CompoundStatement		836:6:21559:21602	4364756	1					
ANR	4369816	ExpressionStatement	free ( name )	1831:6:49722:49733	4364756	0	True				
ANR	4369817	CallExpression	free ( name )		4364756	0					
ANR	4369818	Callee	free		4364756	0					
ANR	4369819	Identifier	free		4364756	0					
ANR	4369820	ArgumentList	name		4364756	1					
ANR	4369821	Argument	name		4364756	0					
ANR	4369822	Identifier	name		4364756	0					
ANR	4369823	ExpressionStatement	name = strdup ( sdbkv_key ( kv ) )	1832:6:49741:49771	4364756	1	True				
ANR	4369824	AssignmentExpression	name = strdup ( sdbkv_key ( kv ) )		4364756	0		=			
ANR	4369825	Identifier	name		4364756	0					
ANR	4369826	CallExpression	strdup ( sdbkv_key ( kv ) )		4364756	1					
ANR	4369827	Callee	strdup		4364756	0					
ANR	4369828	Identifier	strdup		4364756	0					
ANR	4369829	ArgumentList	sdbkv_key ( kv )		4364756	1					
ANR	4369830	Argument	sdbkv_key ( kv )		4364756	0					
ANR	4369831	CallExpression	sdbkv_key ( kv )		4364756	0					
ANR	4369832	Callee	sdbkv_key		4364756	0					
ANR	4369833	Identifier	sdbkv_key		4364756	0					
ANR	4369834	ArgumentList	kv		4364756	1					
ANR	4369835	Argument	kv		4364756	0					
ANR	4369836	Identifier	kv		4364756	0					
ANR	4369837	IfStatement	if ( name && ( arg && * arg ) )		4364756	2					
ANR	4369838	Condition	name && ( arg && * arg )	1833:10:49783:49803	4364756	0	True				
ANR	4369839	AndExpression	name && ( arg && * arg )		4364756	0		&&			
ANR	4369840	Identifier	name		4364756	0					
ANR	4369841	AndExpression	arg && * arg		4364756	1		&&			
ANR	4369842	Identifier	arg		4364756	0					
ANR	4369843	UnaryOperationExpression	* arg		4364756	1					
ANR	4369844	UnaryOperator	*		4364756	0					
ANR	4369845	Identifier	arg		4364756	1					
ANR	4369846	CompoundStatement		828:33:21392:21392	4364756	1					
ANR	4369847	IfStatement	"if ( ! strcmp ( arg , name ) )"		4364756	0					
ANR	4369848	Condition	"! strcmp ( arg , name )"	1834:11:49819:49837	4364756	0	True				
ANR	4369849	UnaryOperationExpression	"! strcmp ( arg , name )"		4364756	0					
ANR	4369850	UnaryOperator	!		4364756	0					
ANR	4369851	CallExpression	"strcmp ( arg , name )"		4364756	1					
ANR	4369852	Callee	strcmp		4364756	0					
ANR	4369853	Identifier	strcmp		4364756	0					
ANR	4369854	ArgumentList	arg		4364756	1					
ANR	4369855	Argument	arg		4364756	0					
ANR	4369856	Identifier	arg		4364756	0					
ANR	4369857	Argument	name		4364756	1					
ANR	4369858	Identifier	name		4364756	0					
ANR	4369859	CompoundStatement		829:32:21426:21426	4364756	1					
ANR	4369860	ExpressionStatement	match = true	1835:8:49850:49862	4364756	0	True				
ANR	4369861	AssignmentExpression	match = true		4364756	0		=			
ANR	4369862	Identifier	match		4364756	0					
ANR	4369863	Identifier	true		4364756	1					
ANR	4369864	ElseStatement	else		4364756	0					
ANR	4369865	CompoundStatement		831:14:21464:21464	4364756	0					
ANR	4369866	ContinueStatement	continue ;	1837:8:49888:49896	4364756	0	True				
ANR	4369867	IdentifierDeclStatement	"const char * q = sdb_fmt ( ""typedef.%s"" , name ) ;"	1840:6:49921:49965	4364756	3	True				
ANR	4369868	IdentifierDecl	"* q = sdb_fmt ( ""typedef.%s"" , name )"		4364756	0					
ANR	4369869	IdentifierDeclType	const char *		4364756	0					
ANR	4369870	Identifier	q		4364756	1					
ANR	4369871	AssignmentExpression	"* q = sdb_fmt ( ""typedef.%s"" , name )"		4364756	2		=			
ANR	4369872	Identifier	q		4364756	0					
ANR	4369873	CallExpression	"sdb_fmt ( ""typedef.%s"" , name )"		4364756	1					
ANR	4369874	Callee	sdb_fmt		4364756	0					
ANR	4369875	Identifier	sdb_fmt		4364756	0					
ANR	4369876	ArgumentList	"""typedef.%s"""		4364756	1					
ANR	4369877	Argument	"""typedef.%s"""		4364756	0					
ANR	4369878	PrimaryExpression	"""typedef.%s"""		4364756	0					
ANR	4369879	Argument	name		4364756	1					
ANR	4369880	Identifier	name		4364756	0					
ANR	4369881	IdentifierDeclStatement	"const char * res = sdb_const_get ( TDB , q , 0 ) ;"	1841:6:49973:50016	4364756	4	True				
ANR	4369882	IdentifierDecl	"* res = sdb_const_get ( TDB , q , 0 )"		4364756	0					
ANR	4369883	IdentifierDeclType	const char *		4364756	0					
ANR	4369884	Identifier	res		4364756	1					
ANR	4369885	AssignmentExpression	"* res = sdb_const_get ( TDB , q , 0 )"		4364756	2		=			
ANR	4369886	Identifier	res		4364756	0					
ANR	4369887	CallExpression	"sdb_const_get ( TDB , q , 0 )"		4364756	1					
ANR	4369888	Callee	sdb_const_get		4364756	0					
ANR	4369889	Identifier	sdb_const_get		4364756	0					
ANR	4369890	ArgumentList	TDB		4364756	1					
ANR	4369891	Argument	TDB		4364756	0					
ANR	4369892	Identifier	TDB		4364756	0					
ANR	4369893	Argument	q		4364756	1					
ANR	4369894	Identifier	q		4364756	0					
ANR	4369895	Argument	0		4364756	2					
ANR	4369896	PrimaryExpression	0		4364756	0					
ANR	4369897	IfStatement	if ( res )		4364756	5					
ANR	4369898	Condition	res	1842:10:50028:50030	4364756	0	True				
ANR	4369899	Identifier	res		4364756	0					
ANR	4369900	CompoundStatement		837:15:21619:21619	4364756	1					
ANR	4369901	ExpressionStatement	"r_cons_printf ( ""%s %s %s;\\n"" , sdbkv_value ( kv ) , res , name )"	1843:7:50042:50100	4364756	0	True				
ANR	4369902	CallExpression	"r_cons_printf ( ""%s %s %s;\\n"" , sdbkv_value ( kv ) , res , name )"		4364756	0					
ANR	4369903	Callee	r_cons_printf		4364756	0					
ANR	4369904	Identifier	r_cons_printf		4364756	0					
ANR	4369905	ArgumentList	"""%s %s %s;\\n"""		4364756	1					
ANR	4369906	Argument	"""%s %s %s;\\n"""		4364756	0					
ANR	4369907	PrimaryExpression	"""%s %s %s;\\n"""		4364756	0					
ANR	4369908	Argument	sdbkv_value ( kv )		4364756	1					
ANR	4369909	CallExpression	sdbkv_value ( kv )		4364756	0					
ANR	4369910	Callee	sdbkv_value		4364756	0					
ANR	4369911	Identifier	sdbkv_value		4364756	0					
ANR	4369912	ArgumentList	kv		4364756	1					
ANR	4369913	Argument	kv		4364756	0					
ANR	4369914	Identifier	kv		4364756	0					
ANR	4369915	Argument	res		4364756	2					
ANR	4369916	Identifier	res		4364756	0					
ANR	4369917	Argument	name		4364756	3					
ANR	4369918	Identifier	name		4364756	0					
ANR	4369919	IfStatement	if ( match )		4364756	6					
ANR	4369920	Condition	match	1845:10:50120:50124	4364756	0	True				
ANR	4369921	Identifier	match		4364756	0					
ANR	4369922	CompoundStatement		840:17:21713:21713	4364756	1					
ANR	4369923	BreakStatement	break ;	1846:7:50136:50141	4364756	0	True				
ANR	4369924	ExpressionStatement	free ( name )	1851:3:50172:50183	4364756	15	True				
ANR	4369925	CallExpression	free ( name )		4364756	0					
ANR	4369926	Callee	free		4364756	0					
ANR	4369927	Identifier	free		4364756	0					
ANR	4369928	ArgumentList	name		4364756	1					
ANR	4369929	Argument	name		4364756	0					
ANR	4369930	Identifier	name		4364756	0					
ANR	4369931	ExpressionStatement	ls_free ( l )	1852:3:50188:50199	4364756	16	True				
ANR	4369932	CallExpression	ls_free ( l )		4364756	0					
ANR	4369933	Callee	ls_free		4364756	0					
ANR	4369934	Identifier	ls_free		4364756	0					
ANR	4369935	ArgumentList	l		4364756	1					
ANR	4369936	Argument	l		4364756	0					
ANR	4369937	Identifier	l		4364756	0					
ANR	4369938	BreakStatement	break ;	1853:3:50204:50209	4364756	17	True				
ANR	4369939	IfStatement	if ( input [ 1 ] == '?' )		4364756	2					
ANR	4369940	Condition	input [ 1 ] == '?'	1855:6:50221:50235	4364756	0	True				
ANR	4369941	EqualityExpression	input [ 1 ] == '?'		4364756	0		==			
ANR	4369942	ArrayIndexing	input [ 1 ]		4364756	0					
ANR	4369943	Identifier	input		4364756	0					
ANR	4369944	PrimaryExpression	1		4364756	1					
ANR	4369945	PrimaryExpression	'?'		4364756	1					
ANR	4369946	CompoundStatement		850:23:21824:21824	4364756	1					
ANR	4369947	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tt )"	1856:3:50243:50278	4364756	0	True				
ANR	4369948	CallExpression	"r_core_cmd_help ( core , help_msg_tt )"		4364756	0					
ANR	4369949	Callee	r_core_cmd_help		4364756	0					
ANR	4369950	Identifier	r_core_cmd_help		4364756	0					
ANR	4369951	ArgumentList	core		4364756	1					
ANR	4369952	Argument	core		4364756	0					
ANR	4369953	Identifier	core		4364756	0					
ANR	4369954	Argument	help_msg_tt		4364756	1					
ANR	4369955	Identifier	help_msg_tt		4364756	0					
ANR	4369956	BreakStatement	break ;	1857:3:50283:50288	4364756	1	True				
ANR	4369957	IdentifierDeclStatement	char * s = strdup ( input + 2 ) ;	1859:2:50296:50324	4364756	3	True				
ANR	4369958	IdentifierDecl	* s = strdup ( input + 2 )		4364756	0					
ANR	4369959	IdentifierDeclType	char *		4364756	0					
ANR	4369960	Identifier	s		4364756	1					
ANR	4369961	AssignmentExpression	* s = strdup ( input + 2 )		4364756	2		=			
ANR	4369962	Identifier	s		4364756	0					
ANR	4369963	CallExpression	strdup ( input + 2 )		4364756	1					
ANR	4369964	Callee	strdup		4364756	0					
ANR	4369965	Identifier	strdup		4364756	0					
ANR	4369966	ArgumentList	input + 2		4364756	1					
ANR	4369967	Argument	input + 2		4364756	0					
ANR	4369968	AdditiveExpression	input + 2		4364756	0		+			
ANR	4369969	Identifier	input		4364756	0					
ANR	4369970	PrimaryExpression	2		4364756	1					
ANR	4369971	IdentifierDeclStatement	const char * istypedef ;	1860:2:50328:50349	4364756	4	True				
ANR	4369972	IdentifierDecl	* istypedef		4364756	0					
ANR	4369973	IdentifierDeclType	const char *		4364756	0					
ANR	4369974	Identifier	istypedef		4364756	1					
ANR	4369975	ExpressionStatement	"istypedef = sdb_const_get ( TDB , s , 0 )"	1861:2:50353:50390	4364756	5	True				
ANR	4369976	AssignmentExpression	"istypedef = sdb_const_get ( TDB , s , 0 )"		4364756	0		=			
ANR	4369977	Identifier	istypedef		4364756	0					
ANR	4369978	CallExpression	"sdb_const_get ( TDB , s , 0 )"		4364756	1					
ANR	4369979	Callee	sdb_const_get		4364756	0					
ANR	4369980	Identifier	sdb_const_get		4364756	0					
ANR	4369981	ArgumentList	TDB		4364756	1					
ANR	4369982	Argument	TDB		4364756	0					
ANR	4369983	Identifier	TDB		4364756	0					
ANR	4369984	Argument	s		4364756	1					
ANR	4369985	Identifier	s		4364756	0					
ANR	4369986	Argument	0		4364756	2					
ANR	4369987	PrimaryExpression	0		4364756	0					
ANR	4369988	IfStatement	"if ( istypedef && ! strncmp ( istypedef , ""typedef"" , 7 ) )"		4364756	6					
ANR	4369989	Condition	"istypedef && ! strncmp ( istypedef , ""typedef"" , 7 )"	1862:6:50398:50444	4364756	0	True				
ANR	4369990	AndExpression	"istypedef && ! strncmp ( istypedef , ""typedef"" , 7 )"		4364756	0		&&			
ANR	4369991	Identifier	istypedef		4364756	0					
ANR	4369992	UnaryOperationExpression	"! strncmp ( istypedef , ""typedef"" , 7 )"		4364756	1					
ANR	4369993	UnaryOperator	!		4364756	0					
ANR	4369994	CallExpression	"strncmp ( istypedef , ""typedef"" , 7 )"		4364756	1					
ANR	4369995	Callee	strncmp		4364756	0					
ANR	4369996	Identifier	strncmp		4364756	0					
ANR	4369997	ArgumentList	istypedef		4364756	1					
ANR	4369998	Argument	istypedef		4364756	0					
ANR	4369999	Identifier	istypedef		4364756	0					
ANR	4370000	Argument	"""typedef"""		4364756	1					
ANR	4370001	PrimaryExpression	"""typedef"""		4364756	0					
ANR	4370002	Argument	7		4364756	2					
ANR	4370003	PrimaryExpression	7		4364756	0					
ANR	4370004	CompoundStatement		859:3:22084:22127	4364756	1					
ANR	4370005	IdentifierDeclStatement	"const char * q = sdb_fmt ( ""typedef.%s"" , s ) ;"	1863:3:50452:50493	4364756	0	True				
ANR	4370006	IdentifierDecl	"* q = sdb_fmt ( ""typedef.%s"" , s )"		4364756	0					
ANR	4370007	IdentifierDeclType	const char *		4364756	0					
ANR	4370008	Identifier	q		4364756	1					
ANR	4370009	AssignmentExpression	"* q = sdb_fmt ( ""typedef.%s"" , s )"		4364756	2		=			
ANR	4370010	Identifier	q		4364756	0					
ANR	4370011	CallExpression	"sdb_fmt ( ""typedef.%s"" , s )"		4364756	1					
ANR	4370012	Callee	sdb_fmt		4364756	0					
ANR	4370013	Identifier	sdb_fmt		4364756	0					
ANR	4370014	ArgumentList	"""typedef.%s"""		4364756	1					
ANR	4370015	Argument	"""typedef.%s"""		4364756	0					
ANR	4370016	PrimaryExpression	"""typedef.%s"""		4364756	0					
ANR	4370017	Argument	s		4364756	1					
ANR	4370018	Identifier	s		4364756	0					
ANR	4370019	IdentifierDeclStatement	"const char * res = sdb_const_get ( TDB , q , 0 ) ;"	1864:3:50498:50541	4364756	1	True				
ANR	4370020	IdentifierDecl	"* res = sdb_const_get ( TDB , q , 0 )"		4364756	0					
ANR	4370021	IdentifierDeclType	const char *		4364756	0					
ANR	4370022	Identifier	res		4364756	1					
ANR	4370023	AssignmentExpression	"* res = sdb_const_get ( TDB , q , 0 )"		4364756	2		=			
ANR	4370024	Identifier	res		4364756	0					
ANR	4370025	CallExpression	"sdb_const_get ( TDB , q , 0 )"		4364756	1					
ANR	4370026	Callee	sdb_const_get		4364756	0					
ANR	4370027	Identifier	sdb_const_get		4364756	0					
ANR	4370028	ArgumentList	TDB		4364756	1					
ANR	4370029	Argument	TDB		4364756	0					
ANR	4370030	Identifier	TDB		4364756	0					
ANR	4370031	Argument	q		4364756	1					
ANR	4370032	Identifier	q		4364756	0					
ANR	4370033	Argument	0		4364756	2					
ANR	4370034	PrimaryExpression	0		4364756	0					
ANR	4370035	IfStatement	if ( res )		4364756	2					
ANR	4370036	Condition	res	1865:7:50550:50552	4364756	0	True				
ANR	4370037	Identifier	res		4364756	0					
ANR	4370038	ExpressionStatement	r_cons_println ( res )	1866:4:50559:50579	4364756	1	True				
ANR	4370039	CallExpression	r_cons_println ( res )		4364756	0					
ANR	4370040	Callee	r_cons_println		4364756	0					
ANR	4370041	Identifier	r_cons_println		4364756	0					
ANR	4370042	ArgumentList	res		4364756	1					
ANR	4370043	Argument	res		4364756	0					
ANR	4370044	Identifier	res		4364756	0					
ANR	4370045	ElseStatement	else		4364756	0					
ANR	4370046	CompoundStatement		862:9:22176:22176	4364756	0					
ANR	4370047	ExpressionStatement	"eprintf ( ""This is not an typedef\\n"" )"	1868:3:50595:50631	4364756	0	True				
ANR	4370048	CallExpression	"eprintf ( ""This is not an typedef\\n"" )"		4364756	0					
ANR	4370049	Callee	eprintf		4364756	0					
ANR	4370050	Identifier	eprintf		4364756	0					
ANR	4370051	ArgumentList	"""This is not an typedef\\n"""		4364756	1					
ANR	4370052	Argument	"""This is not an typedef\\n"""		4364756	0					
ANR	4370053	PrimaryExpression	"""This is not an typedef\\n"""		4364756	0					
ANR	4370054	ExpressionStatement	free ( s )	1870:2:50639:50647	4364756	7	True				
ANR	4370055	CallExpression	free ( s )		4364756	0					
ANR	4370056	Callee	free		4364756	0					
ANR	4370057	Identifier	free		4364756	0					
ANR	4370058	ArgumentList	s		4364756	1					
ANR	4370059	Argument	s		4364756	0					
ANR	4370060	Identifier	s		4364756	0					
ANR	4370061	BreakStatement	break ;	1871:3:50652:50657	4364756	53	True				
ANR	4370062	Label	case '?' :	1872:1:50660:50668	4364756	54	True				
ANR	4370063	ExpressionStatement	show_help ( core )	1873:2:50672:50688	4364756	55	True				
ANR	4370064	CallExpression	show_help ( core )		4364756	0					
ANR	4370065	Callee	show_help		4364756	0					
ANR	4370066	Identifier	show_help		4364756	0					
ANR	4370067	ArgumentList	core		4364756	1					
ANR	4370068	Argument	core		4364756	0					
ANR	4370069	Identifier	core		4364756	0					
ANR	4370070	BreakStatement	break ;	1874:2:50692:50697	4364756	56	True				
ANR	4370071	ReturnStatement	return true ;	1876:1:50703:50714	4364756	5	True				
ANR	4370072	Identifier	true		4364756	0					
ANR	4370073	ReturnType	static int		4364756	1					
ANR	4370074	Identifier	cmd_type		4364756	2					
ANR	4370075	ParameterList	"void * data , const char * input"		4364756	3					
ANR	4370076	Parameter	void * data	1006:20:28382:28391	4364756	0	True				
ANR	4370077	ParameterType	void *		4364756	0					
ANR	4370078	Identifier	data		4364756	1					
ANR	4370079	Parameter	const char * input	1006:32:28394:28410	4364756	1	True				
ANR	4370080	ParameterType	const char *		4364756	0					
ANR	4370081	Identifier	input		4364756	1					
ANR	4370082	CFGEntryNode	ENTRY		4364756		True				
ANR	4370083	CFGExitNode	EXIT		4364756		True				
ANR	4370084	CFGErrorNode	ERROR		4364756		True				
ANR	4370085	Symbol	* op . src		4364756						
ANR	4370086	Symbol	* fcn		4364756						
ANR	4370087	Symbol	* input		4364756						
ANR	4370088	Symbol	strchr		4364756						
ANR	4370089	Symbol	core -> offset		4364756						
ANR	4370090	Symbol	& op		4364756						
ANR	4370091	Symbol	type		4364756						
ANR	4370092	Symbol	r_str_word_set0		4364756						
ANR	4370093	Symbol	sdb_const_get		4364756						
ANR	4370094	Symbol	asmop		4364756						
ANR	4370095	Symbol	strncmp		4364756						
ANR	4370096	Symbol	sdbdeletelink		4364756						
ANR	4370097	Symbol	tmp		4364756						
ANR	4370098	Symbol	* off		4364756						
ANR	4370099	Symbol	r_anal_op		4364756						
ANR	4370100	Symbol	core -> blocksize		4364756						
ANR	4370101	Symbol	* op . dst		4364756						
ANR	4370102	Symbol	r_list_newf		4364756						
ANR	4370103	Symbol	print_link_json_cb		4364756						
ANR	4370104	Symbol	iter		4364756						
ANR	4370105	Symbol	op . dst -> imm		4364756						
ANR	4370106	Symbol	it		4364756						
ANR	4370107	Symbol	* member		4364756						
ANR	4370108	Symbol	core -> anal -> fcns		4364756						
ANR	4370109	Symbol	r_type_get_by_offset		4364756						
ANR	4370110	Symbol	member -> name		4364756						
ANR	4370111	Symbol	str		4364756						
ANR	4370112	Symbol	input		4364756						
ANR	4370113	Symbol	sdb_new		4364756						
ANR	4370114	Symbol	core -> parser		4364756						
ANR	4370115	Symbol	r_list_find		4364756						
ANR	4370116	Symbol	r_type_get_enum		4364756						
ANR	4370117	Symbol	filename		4364756						
ANR	4370118	Symbol	r_str_trim_ro		4364756						
ANR	4370119	Symbol	r_list_empty		4364756						
ANR	4370120	Symbol	* * op . src		4364756						
ANR	4370121	Symbol	* arg		4364756						
ANR	4370122	Symbol	* tmp		4364756						
ANR	4370123	Symbol	op . src [ i ] -> imm		4364756						
ANR	4370124	Symbol	r_parse_c_file		4364756						
ANR	4370125	Symbol	* core		4364756						
ANR	4370126	Symbol	r_config_get		4364756						
ANR	4370127	Symbol	core -> assembler		4364756						
ANR	4370128	Symbol	core -> anal		4364756						
ANR	4370129	Symbol	toff		4364756						
ANR	4370130	Symbol	out		4364756						
ANR	4370131	Symbol	* * op		4364756						
ANR	4370132	Symbol	fcn		4364756						
ANR	4370133	Symbol	r_cons_is_breaked		4364756						
ANR	4370134	Symbol	core -> io		4364756						
ANR	4370135	Symbol	arg		4364756						
ANR	4370136	Symbol	member		4364756						
ANR	4370137	Symbol	stdifunion		4364756						
ANR	4370138	Symbol	op . dst		4364756						
ANR	4370139	Symbol	free		4364756						
ANR	4370140	Symbol	r_str_startswith		4364756						
ANR	4370141	Symbol	* name		4364756						
ANR	4370142	Symbol	error_msg		4364756						
ANR	4370143	Symbol	sdb_foreach_list		4364756						
ANR	4370144	Symbol	i		4364756						
ANR	4370145	Symbol	printkey_cb		4364756						
ANR	4370146	Symbol	r_str_word_get0		4364756						
ANR	4370147	Symbol	kv		4364756						
ANR	4370148	Symbol	sdbkv_value		4364756						
ANR	4370149	Symbol	l		4364756						
ANR	4370150	Symbol	member_name		4364756						
ANR	4370151	Symbol	off		4364756						
ANR	4370152	Symbol	otypes		4364756						
ANR	4370153	Symbol	nargs		4364756						
ANR	4370154	Symbol	q		4364756						
ANR	4370155	Symbol	R_TYPE_ENUM		4364756						
ANR	4370156	Symbol	* core -> anal		4364756						
ANR	4370157	Symbol	s		4364756						
ANR	4370158	Symbol	* member_name ++		4364756						
ANR	4370159	Symbol	& asmop		4364756						
ANR	4370160	Symbol	r_parse_c_string		4364756						
ANR	4370161	Symbol	op . src [ i ] -> delta		4364756						
ANR	4370162	Symbol	otype		4364756						
ANR	4370163	Symbol	op . src		4364756						
ANR	4370164	Symbol	r_type_format		4364756						
ANR	4370165	Symbol	printfunc_json_cb		4364756						
ANR	4370166	Symbol	r_list_length		4364756						
ANR	4370167	Symbol	istypedef		4364756						
ANR	4370168	Symbol	help_msg_ts		4364756						
ANR	4370169	Symbol	data		4364756						
ANR	4370170	Symbol	help_msg_tu		4364756						
ANR	4370171	Symbol	pj_string		4364756						
ANR	4370172	Symbol	* op		4364756						
ANR	4370173	Symbol	fcn -> name		4364756						
ANR	4370174	Symbol	ty		4364756						
ANR	4370175	Symbol	help_msg_tt		4364756						
ANR	4370176	Symbol	dir		4364756						
ANR	4370177	Symbol	fmt		4364756						
ANR	4370178	Symbol	help_msg_tl		4364756						
ANR	4370179	Symbol	IS_WHITESPACE		4364756						
ANR	4370180	Symbol	help_msg_to		4364756						
ANR	4370181	Symbol	r_str_trim_dup		4364756						
ANR	4370182	Symbol	help_msg_ta		4364756						
ANR	4370183	Symbol	help_msg_tc		4364756						
ANR	4370184	Symbol	help_msg_t_minus		4364756						
ANR	4370185	Symbol	help_msg_te		4364756						
ANR	4370186	Symbol	help_msg_td		4364756						
ANR	4370187	Symbol	help_msg_tf		4364756						
ANR	4370188	Symbol	* ptr		4364756						
ANR	4370189	Symbol	r_core_editor		4364756						
ANR	4370190	Symbol	& error_msg		4364756						
ANR	4370191	Symbol	core -> num		4364756						
ANR	4370192	Symbol	dbpath		4364756						
ANR	4370193	Symbol	strcmp		4364756						
ANR	4370194	Symbol	ret		4364756						
ANR	4370195	Symbol	print_link_readable_json_cb		4364756						
ANR	4370196	Symbol	res		4364756						
ANR	4370197	Symbol	typeoffs		4364756						
ANR	4370198	Symbol	* * i		4364756						
ANR	4370199	Symbol	NULL		4364756						
ANR	4370200	Symbol	type2		4364756						
ANR	4370201	Symbol	r_type_get_bitsize		4364756						
ANR	4370202	Symbol	R_ANAL_OP_MASK_VAL		4364756						
ANR	4370203	Symbol	query		4364756						
ANR	4370204	Symbol	sdb_querys		4364756						
ANR	4370205	Symbol	list		4364756						
ANR	4370206	Symbol	stderr		4364756						
ANR	4370207	Symbol	iter2 -> n		4364756						
ANR	4370208	Symbol	core		4364756						
ANR	4370209	Symbol	uniq		4364756						
ANR	4370210	Symbol	print_link_readable_cb		4364756						
ANR	4370211	Symbol	true		4364756						
ANR	4370212	Symbol	name		4364756						
ANR	4370213	Symbol	print_link_r_cb		4364756						
ANR	4370214	Symbol	idx		4364756						
ANR	4370215	Symbol	r_anal_var_addr		4364756						
ANR	4370216	Symbol	r_anal_get_fcn_at		4364756						
ANR	4370217	Symbol	code		4364756						
ANR	4370218	Symbol	* idx ++		4364756						
ANR	4370219	Symbol	r_sandbox_enable		4364756						
ANR	4370220	Symbol	link		4364756						
ANR	4370221	Symbol	stdiflink		4364756						
ANR	4370222	Symbol	core -> anal -> sdb_types		4364756						
ANR	4370223	Symbol	r_str_newf		4364756						
ANR	4370224	Symbol	offimm		4364756						
ANR	4370225	Symbol	r_num_math		4364756						
ANR	4370226	Symbol	r_core_cmd_strf		4364756						
ANR	4370227	Symbol	TDB		4364756						
ANR	4370228	Symbol	member -> val		4364756						
ANR	4370229	Symbol	r_type_enum_member		4364756						
ANR	4370230	Symbol	homefile		4364756						
ANR	4370231	Symbol	myType		4364756						
ANR	4370232	Symbol	print_link_cb		4364756						
ANR	4370233	Symbol	addr		4364756						
ANR	4370234	Symbol	UT64_MAX		4364756						
ANR	4370235	Symbol	r_str_home		4364756						
ANR	4370236	Symbol	sdb_fmt		4364756						
ANR	4370237	Symbol	* * core		4364756						
ANR	4370238	Symbol	uniqList		4364756						
ANR	4370239	Symbol	core -> config		4364756						
ANR	4370240	Symbol	db_tmp		4364756						
ANR	4370241	Symbol	op		4364756						
ANR	4370242	Symbol	temp		4364756						
ANR	4370243	Symbol	sdbkv_key		4364756						
ANR	4370244	Symbol	get_uniq_type		4364756						
ANR	4370245	Symbol	r_type_kind		4364756						
ANR	4370246	Symbol	* ptr ++		4364756						
ANR	4370247	Symbol	iter2		4364756						
ANR	4370248	Symbol	false		4364756						
ANR	4370249	Symbol	match		4364756						
ANR	4370250	Symbol	sdb_foreach_list_filter		4364756						
ANR	4370251	Symbol	TDB_		4364756						
ANR	4370252	Symbol	sdb_get		4364756						
ANR	4370253	Symbol	stdiffunc		4364756						
ANR	4370254	Symbol	op . dst -> delta		4364756						
ANR	4370255	Symbol	ptr		4364756						
ANR	4370256	Symbol	* filename		4364756						
ANR	4370257	Symbol	* i		4364756						
ANR	4370258	Symbol	r_anal_get_fcn_in		4364756						
ANR	4370259	Symbol	pj_new		4364756						
ANR	4370260	Symbol	pj		4364756						
ANR	4370261	Symbol	* iter2		4364756						
ANR	4370262	Symbol	strdup		4364756						
ANR	4370263	Symbol	r_file_exists		4364756						
ANR	4370264	Symbol	stdifstruct		4364756						
