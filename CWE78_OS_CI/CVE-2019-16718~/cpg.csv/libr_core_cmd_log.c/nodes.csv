command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4255121	File	data/converged/CVE-2019-16718~_radare2/libr_core_cmd_log.c								
ANR	4255122	DeclStmt									
ANR	4255123	Decl							const char	const char * [ ]	help_msg_L
ANR	4255124	DeclStmt									
ANR	4255125	Decl							const char	const char * [ ]	help_msg_T
ANR	4255126	Function	cmd_log_init	47:0:1626:1734							
ANR	4255127	FunctionDef	cmd_log_init (RCore * core)		4255126	0					
ANR	4255128	CompoundStatement		47:38:1664:1734	4255126	0					
ANR	4255129	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , L )"	48:1:1667:1698	4255126	0	True				
ANR	4255130	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , L )"		4255126	0					
ANR	4255131	Callee	DEFINE_CMD_DESCRIPTOR		4255126	0					
ANR	4255132	Identifier	DEFINE_CMD_DESCRIPTOR		4255126	0					
ANR	4255133	ArgumentList	core		4255126	1					
ANR	4255134	Argument	core		4255126	0					
ANR	4255135	Identifier	core		4255126	0					
ANR	4255136	Argument	L		4255126	1					
ANR	4255137	Identifier	L		4255126	0					
ANR	4255138	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , T )"	49:1:1701:1732	4255126	1	True				
ANR	4255139	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , T )"		4255126	0					
ANR	4255140	Callee	DEFINE_CMD_DESCRIPTOR		4255126	0					
ANR	4255141	Identifier	DEFINE_CMD_DESCRIPTOR		4255126	0					
ANR	4255142	ArgumentList	core		4255126	1					
ANR	4255143	Argument	core		4255126	0					
ANR	4255144	Identifier	core		4255126	0					
ANR	4255145	Argument	T		4255126	1					
ANR	4255146	Identifier	T		4255126	0					
ANR	4255147	ReturnType	static void		4255126	1					
ANR	4255148	Identifier	cmd_log_init		4255126	2					
ANR	4255149	ParameterList	RCore * core		4255126	3					
ANR	4255150	Parameter	RCore * core	47:25:1651:1661	4255126	0	True				
ANR	4255151	ParameterType	RCore *		4255126	0					
ANR	4255152	Identifier	core		4255126	1					
ANR	4255153	CFGEntryNode	ENTRY		4255126		True				
ANR	4255154	CFGExitNode	EXIT		4255126		True				
ANR	4255155	Symbol	core		4255126						
ANR	4255156	Symbol	T		4255126						
ANR	4255157	Symbol	L		4255126						
ANR	4255158	Function	screenlock	52:0:1737:2890							
ANR	4255159	FunctionDef	screenlock (RCore * core)		4255158	0					
ANR	4255160	CompoundStatement		52:36:1773:2890	4255158	0					
ANR	4255161	Statement	char	54:1:1833:1836	4255158	0	True				
ANR	4255162	Statement	*	54:6:1838:1838	4255158	1	True				
ANR	4255163	Statement	pass	54:7:1839:1842	4255158	2	True				
ANR	4255164	Statement	=	54:12:1844:1844	4255158	3	True				
ANR	4255165	Statement	r_cons_password	54:14:1846:1860	4255158	4	True				
ANR	4255166	Statement	(	54:30:1862:1862	4255158	5	True				
ANR	4255167	Statement	Color_INVERT	54:31:1863:1874	4255158	6	True				
ANR	4255168	Statement	"""Enter new password:"""	54:44:1876:1896	4255158	7	True				
ANR	4255169	Statement	Color_INVERT_RESET	54:65:1897:1914	4255158	8	True				
ANR	4255170	Statement	)	54:83:1915:1915	4255158	9	True				
ANR	4255171	ExpressionStatement		54:84:1916:1916	4255158	10	True				
ANR	4255172	IfStatement	if ( ! pass || ! * pass )		4255158	11					
ANR	4255173	Condition	! pass || ! * pass	55:5:1923:1937	4255158	0	True				
ANR	4255174	OrExpression	! pass || ! * pass		4255158	0		||			
ANR	4255175	UnaryOperationExpression	! pass		4255158	0					
ANR	4255176	UnaryOperator	!		4255158	0					
ANR	4255177	Identifier	pass		4255158	1					
ANR	4255178	UnaryOperationExpression	! * pass		4255158	1					
ANR	4255179	UnaryOperator	!		4255158	0					
ANR	4255180	UnaryOperationExpression	* pass		4255158	1					
ANR	4255181	UnaryOperator	*		4255158	0					
ANR	4255182	Identifier	pass		4255158	1					
ANR	4255183	CompoundStatement		4:22:166:166	4255158	1					
ANR	4255184	ReturnStatement	return ;	56:2:1944:1950	4255158	0	True				
ANR	4255185	Statement	char	58:1:1956:1959	4255158	12	True				
ANR	4255186	Statement	*	58:6:1961:1961	4255158	13	True				
ANR	4255187	Statement	again	58:7:1962:1966	4255158	14	True				
ANR	4255188	Statement	=	58:13:1968:1968	4255158	15	True				
ANR	4255189	Statement	r_cons_password	58:15:1970:1984	4255158	16	True				
ANR	4255190	Statement	(	58:31:1986:1986	4255158	17	True				
ANR	4255191	Statement	Color_INVERT	58:32:1987:1998	4255158	18	True				
ANR	4255192	Statement	"""Type it again:"""	58:45:2000:2015	4255158	19	True				
ANR	4255193	Statement	Color_INVERT_RESET	58:61:2016:2033	4255158	20	True				
ANR	4255194	Statement	)	58:79:2034:2034	4255158	21	True				
ANR	4255195	ExpressionStatement		58:80:2035:2035	4255158	22	True				
ANR	4255196	IfStatement	if ( ! again || ! * again )		4255158	23					
ANR	4255197	Condition	! again || ! * again	59:5:2042:2058	4255158	0	True				
ANR	4255198	OrExpression	! again || ! * again		4255158	0		||			
ANR	4255199	UnaryOperationExpression	! again		4255158	0					
ANR	4255200	UnaryOperator	!		4255158	0					
ANR	4255201	Identifier	again		4255158	1					
ANR	4255202	UnaryOperationExpression	! * again		4255158	1					
ANR	4255203	UnaryOperator	!		4255158	0					
ANR	4255204	UnaryOperationExpression	* again		4255158	1					
ANR	4255205	UnaryOperator	*		4255158	0					
ANR	4255206	Identifier	again		4255158	1					
ANR	4255207	CompoundStatement		8:24:287:287	4255158	1					
ANR	4255208	ReturnStatement	return ;	60:2:2065:2071	4255158	0	True				
ANR	4255209	IfStatement	"if ( strcmp ( pass , again ) )"		4255158	24					
ANR	4255210	Condition	"strcmp ( pass , again )"	62:5:2081:2100	4255158	0	True				
ANR	4255211	CallExpression	"strcmp ( pass , again )"		4255158	0					
ANR	4255212	Callee	strcmp		4255158	0					
ANR	4255213	Identifier	strcmp		4255158	0					
ANR	4255214	ArgumentList	pass		4255158	1					
ANR	4255215	Argument	pass		4255158	0					
ANR	4255216	Identifier	pass		4255158	0					
ANR	4255217	Argument	again		4255158	1					
ANR	4255218	Identifier	again		4255158	0					
ANR	4255219	CompoundStatement		11:27:329:329	4255158	1					
ANR	4255220	ExpressionStatement	"eprintf ( ""Password mismatch!\\n"" )"	63:2:2107:2139	4255158	0	True				
ANR	4255221	CallExpression	"eprintf ( ""Password mismatch!\\n"" )"		4255158	0					
ANR	4255222	Callee	eprintf		4255158	0					
ANR	4255223	Identifier	eprintf		4255158	0					
ANR	4255224	ArgumentList	"""Password mismatch!\\n"""		4255158	1					
ANR	4255225	Argument	"""Password mismatch!\\n"""		4255158	0					
ANR	4255226	PrimaryExpression	"""Password mismatch!\\n"""		4255158	0					
ANR	4255227	ReturnStatement	return ;	64:2:2143:2149	4255158	1	True				
ANR	4255228	IdentifierDeclStatement	bool running = true ;	66:1:2155:2174	4255158	25	True				
ANR	4255229	IdentifierDecl	running = true		4255158	0					
ANR	4255230	IdentifierDeclType	bool		4255158	0					
ANR	4255231	Identifier	running		4255158	1					
ANR	4255232	AssignmentExpression	running = true		4255158	2		=			
ANR	4255233	Identifier	true		4255158	0					
ANR	4255234	Identifier	true		4255158	1					
ANR	4255235	ExpressionStatement	r_cons_clear_buffer ( )	67:1:2177:2199	4255158	26	True				
ANR	4255236	CallExpression	r_cons_clear_buffer ( )		4255158	0					
ANR	4255237	Callee	r_cons_clear_buffer		4255158	0					
ANR	4255238	Identifier	r_cons_clear_buffer		4255158	0					
ANR	4255239	ArgumentList			4255158	1					
ANR	4255240	IdentifierDeclStatement	ut64 begin = r_sys_now ( ) ;	68:1:2202:2227	4255158	27	True				
ANR	4255241	IdentifierDecl	begin = r_sys_now ( )		4255158	0					
ANR	4255242	IdentifierDeclType	ut64		4255158	0					
ANR	4255243	Identifier	begin		4255158	1					
ANR	4255244	AssignmentExpression	begin = r_sys_now ( )		4255158	2		=			
ANR	4255245	Identifier	begin		4255158	0					
ANR	4255246	CallExpression	r_sys_now ( )		4255158	1					
ANR	4255247	Callee	r_sys_now		4255158	0					
ANR	4255248	Identifier	r_sys_now		4255158	0					
ANR	4255249	ArgumentList			4255158	1					
ANR	4255250	IdentifierDeclStatement	ut64 last = UT64_MAX ;	69:1:2230:2250	4255158	28	True				
ANR	4255251	IdentifierDecl	last = UT64_MAX		4255158	0					
ANR	4255252	IdentifierDeclType	ut64		4255158	0					
ANR	4255253	Identifier	last		4255158	1					
ANR	4255254	AssignmentExpression	last = UT64_MAX		4255158	2		=			
ANR	4255255	Identifier	UT64_MAX		4255158	0					
ANR	4255256	Identifier	UT64_MAX		4255158	1					
ANR	4255257	IdentifierDeclStatement	ut64 tries = 0 ;	70:1:2253:2267	4255158	29	True				
ANR	4255258	IdentifierDecl	tries = 0		4255158	0					
ANR	4255259	IdentifierDeclType	ut64		4255158	0					
ANR	4255260	Identifier	tries		4255158	1					
ANR	4255261	AssignmentExpression	tries = 0		4255158	2		=			
ANR	4255262	Identifier	tries		4255158	0					
ANR	4255263	PrimaryExpression	0		4255158	1					
ANR	4255264	DoStatement	do		4255158	30					
ANR	4255265	CompoundStatement		38:2:974:1001	4255158	0					
ANR	4255266	ExpressionStatement	r_cons_clear00 ( )	72:2:2277:2294	4255158	0	True				
ANR	4255267	CallExpression	r_cons_clear00 ( )		4255158	0					
ANR	4255268	Callee	r_cons_clear00		4255158	0					
ANR	4255269	Identifier	r_cons_clear00		4255158	0					
ANR	4255270	ArgumentList			4255158	1					
ANR	4255271	ExpressionStatement	"r_cons_printf ( ""Retries: %d\\n"" , tries )"	73:2:2298:2336	4255158	1	True				
ANR	4255272	CallExpression	"r_cons_printf ( ""Retries: %d\\n"" , tries )"		4255158	0					
ANR	4255273	Callee	r_cons_printf		4255158	0					
ANR	4255274	Identifier	r_cons_printf		4255158	0					
ANR	4255275	ArgumentList	"""Retries: %d\\n"""		4255158	1					
ANR	4255276	Argument	"""Retries: %d\\n"""		4255158	0					
ANR	4255277	PrimaryExpression	"""Retries: %d\\n"""		4255158	0					
ANR	4255278	Argument	tries		4255158	1					
ANR	4255279	Identifier	tries		4255158	0					
ANR	4255280	ExpressionStatement	"r_cons_printf ( ""Locked ts: %s\\n"" , r_time_to_string ( begin ) )"	74:2:2340:2399	4255158	2	True				
ANR	4255281	CallExpression	"r_cons_printf ( ""Locked ts: %s\\n"" , r_time_to_string ( begin ) )"		4255158	0					
ANR	4255282	Callee	r_cons_printf		4255158	0					
ANR	4255283	Identifier	r_cons_printf		4255158	0					
ANR	4255284	ArgumentList	"""Locked ts: %s\\n"""		4255158	1					
ANR	4255285	Argument	"""Locked ts: %s\\n"""		4255158	0					
ANR	4255286	PrimaryExpression	"""Locked ts: %s\\n"""		4255158	0					
ANR	4255287	Argument	r_time_to_string ( begin )		4255158	1					
ANR	4255288	CallExpression	r_time_to_string ( begin )		4255158	0					
ANR	4255289	Callee	r_time_to_string		4255158	0					
ANR	4255290	Identifier	r_time_to_string		4255158	0					
ANR	4255291	ArgumentList	begin		4255158	1					
ANR	4255292	Argument	begin		4255158	0					
ANR	4255293	Identifier	begin		4255158	0					
ANR	4255294	IfStatement	if ( last != UT64_MAX )		4255158	3					
ANR	4255295	Condition	last != UT64_MAX	75:6:2407:2422	4255158	0	True				
ANR	4255296	EqualityExpression	last != UT64_MAX		4255158	0		!=			
ANR	4255297	Identifier	last		4255158	0					
ANR	4255298	Identifier	UT64_MAX		4255158	1					
ANR	4255299	CompoundStatement		24:24:651:651	4255158	1					
ANR	4255300	ExpressionStatement	"r_cons_printf ( ""Last try: %s\\n"" , r_time_to_string ( last ) )"	76:3:2430:2487	4255158	0	True				
ANR	4255301	CallExpression	"r_cons_printf ( ""Last try: %s\\n"" , r_time_to_string ( last ) )"		4255158	0					
ANR	4255302	Callee	r_cons_printf		4255158	0					
ANR	4255303	Identifier	r_cons_printf		4255158	0					
ANR	4255304	ArgumentList	"""Last try: %s\\n"""		4255158	1					
ANR	4255305	Argument	"""Last try: %s\\n"""		4255158	0					
ANR	4255306	PrimaryExpression	"""Last try: %s\\n"""		4255158	0					
ANR	4255307	Argument	r_time_to_string ( last )		4255158	1					
ANR	4255308	CallExpression	r_time_to_string ( last )		4255158	0					
ANR	4255309	Callee	r_time_to_string		4255158	0					
ANR	4255310	Identifier	r_time_to_string		4255158	0					
ANR	4255311	ArgumentList	last		4255158	1					
ANR	4255312	Argument	last		4255158	0					
ANR	4255313	Identifier	last		4255158	0					
ANR	4255314	ExpressionStatement	r_cons_newline ( )	78:2:2495:2512	4255158	4	True				
ANR	4255315	CallExpression	r_cons_newline ( )		4255158	0					
ANR	4255316	Callee	r_cons_newline		4255158	0					
ANR	4255317	Identifier	r_cons_newline		4255158	0					
ANR	4255318	ArgumentList			4255158	1					
ANR	4255319	ExpressionStatement	r_cons_flush ( )	79:2:2516:2531	4255158	5	True				
ANR	4255320	CallExpression	r_cons_flush ( )		4255158	0					
ANR	4255321	Callee	r_cons_flush		4255158	0					
ANR	4255322	Identifier	r_cons_flush		4255158	0					
ANR	4255323	ArgumentList			4255158	1					
ANR	4255324	IdentifierDeclStatement	"char * msg = r_cons_password ( ""radare2 password: "" ) ;"	80:2:2535:2585	4255158	6	True				
ANR	4255325	IdentifierDecl	"* msg = r_cons_password ( ""radare2 password: "" )"		4255158	0					
ANR	4255326	IdentifierDeclType	char *		4255158	0					
ANR	4255327	Identifier	msg		4255158	1					
ANR	4255328	AssignmentExpression	"* msg = r_cons_password ( ""radare2 password: "" )"		4255158	2		=			
ANR	4255329	Identifier	msg		4255158	0					
ANR	4255330	CallExpression	"r_cons_password ( ""radare2 password: "" )"		4255158	1					
ANR	4255331	Callee	r_cons_password		4255158	0					
ANR	4255332	Identifier	r_cons_password		4255158	0					
ANR	4255333	ArgumentList	"""radare2 password: """		4255158	1					
ANR	4255334	Argument	"""radare2 password: """		4255158	0					
ANR	4255335	PrimaryExpression	"""radare2 password: """		4255158	0					
ANR	4255336	IfStatement	"if ( msg && ! strcmp ( msg , pass ) )"		4255158	7					
ANR	4255337	Condition	"msg && ! strcmp ( msg , pass )"	81:6:2593:2618	4255158	0	True				
ANR	4255338	AndExpression	"msg && ! strcmp ( msg , pass )"		4255158	0		&&			
ANR	4255339	Identifier	msg		4255158	0					
ANR	4255340	UnaryOperationExpression	"! strcmp ( msg , pass )"		4255158	1					
ANR	4255341	UnaryOperator	!		4255158	0					
ANR	4255342	CallExpression	"strcmp ( msg , pass )"		4255158	1					
ANR	4255343	Callee	strcmp		4255158	0					
ANR	4255344	Identifier	strcmp		4255158	0					
ANR	4255345	ArgumentList	msg		4255158	1					
ANR	4255346	Argument	msg		4255158	0					
ANR	4255347	Identifier	msg		4255158	0					
ANR	4255348	Argument	pass		4255158	1					
ANR	4255349	Identifier	pass		4255158	0					
ANR	4255350	CompoundStatement		30:34:847:847	4255158	1					
ANR	4255351	ExpressionStatement	running = false	82:3:2626:2641	4255158	0	True				
ANR	4255352	AssignmentExpression	running = false		4255158	0		=			
ANR	4255353	Identifier	running		4255158	0					
ANR	4255354	Identifier	false		4255158	1					
ANR	4255355	ElseStatement	else		4255158	0					
ANR	4255356	CompoundStatement		32:9:878:878	4255158	0					
ANR	4255357	ExpressionStatement	"eprintf ( ""\\nInvalid password.\\n"" )"	84:3:2657:2690	4255158	0	True				
ANR	4255358	CallExpression	"eprintf ( ""\\nInvalid password.\\n"" )"		4255158	0					
ANR	4255359	Callee	eprintf		4255158	0					
ANR	4255360	Identifier	eprintf		4255158	0					
ANR	4255361	ArgumentList	"""\\nInvalid password.\\n"""		4255158	1					
ANR	4255362	Argument	"""\\nInvalid password.\\n"""		4255158	0					
ANR	4255363	PrimaryExpression	"""\\nInvalid password.\\n"""		4255158	0					
ANR	4255364	ExpressionStatement	last = r_sys_now ( )	85:3:2695:2714	4255158	1	True				
ANR	4255365	AssignmentExpression	last = r_sys_now ( )		4255158	0		=			
ANR	4255366	Identifier	last		4255158	0					
ANR	4255367	CallExpression	r_sys_now ( )		4255158	1					
ANR	4255368	Callee	r_sys_now		4255158	0					
ANR	4255369	Identifier	r_sys_now		4255158	0					
ANR	4255370	ArgumentList			4255158	1					
ANR	4255371	ExpressionStatement	tries ++	86:3:2719:2726	4255158	2	True				
ANR	4255372	PostIncDecOperationExpression	tries ++		4255158	0					
ANR	4255373	Identifier	tries		4255158	0					
ANR	4255374	IncDec	++		4255158	1					
ANR	4255375	ExpressionStatement	free ( msg )	88:2:2734:2744	4255158	8	True				
ANR	4255376	CallExpression	free ( msg )		4255158	0					
ANR	4255377	Callee	free		4255158	0					
ANR	4255378	Identifier	free		4255158	0					
ANR	4255379	ArgumentList	msg		4255158	1					
ANR	4255380	Argument	msg		4255158	0					
ANR	4255381	Identifier	msg		4255158	0					
ANR	4255382	IdentifierDeclStatement	int n = r_num_rand ( 10 ) + 1 ;	89:2:2748:2775	4255158	9	True				
ANR	4255383	IdentifierDecl	n = r_num_rand ( 10 ) + 1		4255158	0					
ANR	4255384	IdentifierDeclType	int		4255158	0					
ANR	4255385	Identifier	n		4255158	1					
ANR	4255386	AssignmentExpression	n = r_num_rand ( 10 ) + 1		4255158	2		=			
ANR	4255387	Identifier	n		4255158	0					
ANR	4255388	AdditiveExpression	r_num_rand ( 10 ) + 1		4255158	1		+			
ANR	4255389	CallExpression	r_num_rand ( 10 )		4255158	0					
ANR	4255390	Callee	r_num_rand		4255158	0					
ANR	4255391	Identifier	r_num_rand		4255158	0					
ANR	4255392	ArgumentList	10		4255158	1					
ANR	4255393	Argument	10		4255158	0					
ANR	4255394	PrimaryExpression	10		4255158	0					
ANR	4255395	PrimaryExpression	1		4255158	1					
ANR	4255396	ExpressionStatement	r_sys_usleep ( n * 100000 )	90:2:2779:2804	4255158	10	True				
ANR	4255397	CallExpression	r_sys_usleep ( n * 100000 )		4255158	0					
ANR	4255398	Callee	r_sys_usleep		4255158	0					
ANR	4255399	Identifier	r_sys_usleep		4255158	0					
ANR	4255400	ArgumentList	n * 100000		4255158	1					
ANR	4255401	Argument	n * 100000		4255158	0					
ANR	4255402	MultiplicativeExpression	n * 100000		4255158	0		*			
ANR	4255403	Identifier	n		4255158	0					
ANR	4255404	PrimaryExpression	100000		4255158	1					
ANR	4255405	Condition	running	91:10:2816:2822	4255158	1	True				
ANR	4255406	Identifier	running		4255158	0					
ANR	4255407	ExpressionStatement	r_cons_set_cup ( true )	92:1:2827:2848	4255158	31	True				
ANR	4255408	CallExpression	r_cons_set_cup ( true )		4255158	0					
ANR	4255409	Callee	r_cons_set_cup		4255158	0					
ANR	4255410	Identifier	r_cons_set_cup		4255158	0					
ANR	4255411	ArgumentList	true		4255158	1					
ANR	4255412	Argument	true		4255158	0					
ANR	4255413	Identifier	true		4255158	0					
ANR	4255414	ExpressionStatement	free ( pass )	93:1:2851:2862	4255158	32	True				
ANR	4255415	CallExpression	free ( pass )		4255158	0					
ANR	4255416	Callee	free		4255158	0					
ANR	4255417	Identifier	free		4255158	0					
ANR	4255418	ArgumentList	pass		4255158	1					
ANR	4255419	Argument	pass		4255158	0					
ANR	4255420	Identifier	pass		4255158	0					
ANR	4255421	ExpressionStatement	"eprintf ( ""Unlocked!\\n"" )"	94:1:2865:2888	4255158	33	True				
ANR	4255422	CallExpression	"eprintf ( ""Unlocked!\\n"" )"		4255158	0					
ANR	4255423	Callee	eprintf		4255158	0					
ANR	4255424	Identifier	eprintf		4255158	0					
ANR	4255425	ArgumentList	"""Unlocked!\\n"""		4255158	1					
ANR	4255426	Argument	"""Unlocked!\\n"""		4255158	0					
ANR	4255427	PrimaryExpression	"""Unlocked!\\n"""		4255158	0					
ANR	4255428	ReturnType	static void		4255158	1					
ANR	4255429	Identifier	screenlock		4255158	2					
ANR	4255430	ParameterList	RCore * core		4255158	3					
ANR	4255431	Parameter	RCore * core	52:23:1760:1770	4255158	0	True				
ANR	4255432	ParameterType	RCore *		4255158	0					
ANR	4255433	Identifier	core		4255158	1					
ANR	4255434	CFGEntryNode	ENTRY		4255158		True				
ANR	4255435	CFGExitNode	EXIT		4255158		True				
ANR	4255436	Symbol	strcmp		4255158						
ANR	4255437	Symbol	msg		4255158						
ANR	4255438	Symbol	tries		4255158						
ANR	4255439	Symbol	last		4255158						
ANR	4255440	Symbol	pass		4255158						
ANR	4255441	Symbol	* pass		4255158						
ANR	4255442	Symbol	r_sys_now		4255158						
ANR	4255443	Symbol	again		4255158						
ANR	4255444	Symbol	false		4255158						
ANR	4255445	Symbol	* again		4255158						
ANR	4255446	Symbol	n		4255158						
ANR	4255447	Symbol	r_num_rand		4255158						
ANR	4255448	Symbol	running		4255158						
ANR	4255449	Symbol	core		4255158						
ANR	4255450	Symbol	r_time_to_string		4255158						
ANR	4255451	Symbol	true		4255158						
ANR	4255452	Symbol	r_cons_password		4255158						
ANR	4255453	Symbol	UT64_MAX		4255158						
ANR	4255454	Symbol	begin		4255158						
ANR	4255455	Function	textlog_chat	97:0:2893:4426							
ANR	4255456	FunctionDef	textlog_chat (RCore * core)		4255455	0					
ANR	4255457	CompoundStatement		97:37:2930:4426	4255455	0					
ANR	4255458	IdentifierDeclStatement	char prompt [ 64 ] ;	98:1:2933:2948	4255455	0	True				
ANR	4255459	IdentifierDecl	prompt [ 64 ]		4255455	0					
ANR	4255460	IdentifierDeclType	char [ 64 ]		4255455	0					
ANR	4255461	Identifier	prompt		4255455	1					
ANR	4255462	PrimaryExpression	64		4255455	2					
ANR	4255463	IdentifierDeclStatement	char buf [ 1024 ] ;	99:1:2951:2965	4255455	1	True				
ANR	4255464	IdentifierDecl	buf [ 1024 ]		4255455	0					
ANR	4255465	IdentifierDeclType	char [ 1024 ]		4255455	0					
ANR	4255466	Identifier	buf		4255455	1					
ANR	4255467	PrimaryExpression	1024		4255455	2					
ANR	4255468	IdentifierDeclStatement	int lastmsg = 0 ;	100:1:2968:2983	4255455	2	True				
ANR	4255469	IdentifierDecl	lastmsg = 0		4255455	0					
ANR	4255470	IdentifierDeclType	int		4255455	0					
ANR	4255471	Identifier	lastmsg		4255455	1					
ANR	4255472	AssignmentExpression	lastmsg = 0		4255455	2		=			
ANR	4255473	Identifier	lastmsg		4255455	0					
ANR	4255474	PrimaryExpression	0		4255455	1					
ANR	4255475	IdentifierDeclStatement	"const char * me = r_config_get ( core -> config , ""cfg.user"" ) ;"	101:1:2986:3042	4255455	3	True				
ANR	4255476	IdentifierDecl	"* me = r_config_get ( core -> config , ""cfg.user"" )"		4255455	0					
ANR	4255477	IdentifierDeclType	const char *		4255455	0					
ANR	4255478	Identifier	me		4255455	1					
ANR	4255479	AssignmentExpression	"* me = r_config_get ( core -> config , ""cfg.user"" )"		4255455	2		=			
ANR	4255480	Identifier	me		4255455	0					
ANR	4255481	CallExpression	"r_config_get ( core -> config , ""cfg.user"" )"		4255455	1					
ANR	4255482	Callee	r_config_get		4255455	0					
ANR	4255483	Identifier	r_config_get		4255455	0					
ANR	4255484	ArgumentList	core -> config		4255455	1					
ANR	4255485	Argument	core -> config		4255455	0					
ANR	4255486	PtrMemberAccess	core -> config		4255455	0					
ANR	4255487	Identifier	core		4255455	0					
ANR	4255488	Identifier	config		4255455	1					
ANR	4255489	Argument	"""cfg.user"""		4255455	1					
ANR	4255490	PrimaryExpression	"""cfg.user"""		4255455	0					
ANR	4255491	IdentifierDeclStatement	char msg [ 2048 ] ;	102:1:3045:3059	4255455	4	True				
ANR	4255492	IdentifierDecl	msg [ 2048 ]		4255455	0					
ANR	4255493	IdentifierDeclType	char [ 2048 ]		4255455	0					
ANR	4255494	Identifier	msg		4255455	1					
ANR	4255495	PrimaryExpression	2048		4255455	2					
ANR	4255496	ExpressionStatement	"eprintf ( ""Type '/help' for commands:\\n"" )"	104:1:3063:3103	4255455	5	True				
ANR	4255497	CallExpression	"eprintf ( ""Type '/help' for commands:\\n"" )"		4255455	0					
ANR	4255498	Callee	eprintf		4255455	0					
ANR	4255499	Identifier	eprintf		4255455	0					
ANR	4255500	ArgumentList	"""Type '/help' for commands:\\n"""		4255455	1					
ANR	4255501	Argument	"""Type '/help' for commands:\\n"""		4255455	0					
ANR	4255502	PrimaryExpression	"""Type '/help' for commands:\\n"""		4255455	0					
ANR	4255503	ExpressionStatement	"snprintf ( prompt , sizeof ( prompt ) - 1 , ""[%s]> "" , me )"	105:1:3106:3158	4255455	6	True				
ANR	4255504	CallExpression	"snprintf ( prompt , sizeof ( prompt ) - 1 , ""[%s]> "" , me )"		4255455	0					
ANR	4255505	Callee	snprintf		4255455	0					
ANR	4255506	Identifier	snprintf		4255455	0					
ANR	4255507	ArgumentList	prompt		4255455	1					
ANR	4255508	Argument	prompt		4255455	0					
ANR	4255509	Identifier	prompt		4255455	0					
ANR	4255510	Argument	sizeof ( prompt ) - 1		4255455	1					
ANR	4255511	AdditiveExpression	sizeof ( prompt ) - 1		4255455	0		-			
ANR	4255512	SizeofExpression	sizeof ( prompt )		4255455	0					
ANR	4255513	Sizeof	sizeof		4255455	0					
ANR	4255514	SizeofOperand	prompt		4255455	1					
ANR	4255515	PrimaryExpression	1		4255455	1					
ANR	4255516	Argument	"""[%s]> """		4255455	2					
ANR	4255517	PrimaryExpression	"""[%s]> """		4255455	0					
ANR	4255518	Argument	me		4255455	3					
ANR	4255519	Identifier	me		4255455	0					
ANR	4255520	ExpressionStatement	r_line_set_prompt ( prompt )	106:1:3161:3187	4255455	7	True				
ANR	4255521	CallExpression	r_line_set_prompt ( prompt )		4255455	0					
ANR	4255522	Callee	r_line_set_prompt		4255455	0					
ANR	4255523	Identifier	r_line_set_prompt		4255455	0					
ANR	4255524	ArgumentList	prompt		4255455	1					
ANR	4255525	Argument	prompt		4255455	0					
ANR	4255526	Identifier	prompt		4255455	0					
ANR	4255527	ForStatement	for ( ; ; )		4255455	8					
ANR	4255528	CompoundStatement		11:10:268:268	4255455	0					
ANR	4255529	ExpressionStatement	"r_core_log_list ( core , lastmsg , 0 , 0 )"	108:2:3203:3240	4255455	0	True				
ANR	4255530	CallExpression	"r_core_log_list ( core , lastmsg , 0 , 0 )"		4255455	0					
ANR	4255531	Callee	r_core_log_list		4255455	0					
ANR	4255532	Identifier	r_core_log_list		4255455	0					
ANR	4255533	ArgumentList	core		4255455	1					
ANR	4255534	Argument	core		4255455	0					
ANR	4255535	Identifier	core		4255455	0					
ANR	4255536	Argument	lastmsg		4255455	1					
ANR	4255537	Identifier	lastmsg		4255455	0					
ANR	4255538	Argument	0		4255455	2					
ANR	4255539	PrimaryExpression	0		4255455	0					
ANR	4255540	Argument	0		4255455	3					
ANR	4255541	PrimaryExpression	0		4255455	0					
ANR	4255542	ExpressionStatement	lastmsg = core -> log -> last	109:2:3244:3269	4255455	1	True				
ANR	4255543	AssignmentExpression	lastmsg = core -> log -> last		4255455	0		=			
ANR	4255544	Identifier	lastmsg		4255455	0					
ANR	4255545	PtrMemberAccess	core -> log -> last		4255455	1					
ANR	4255546	PtrMemberAccess	core -> log		4255455	0					
ANR	4255547	Identifier	core		4255455	0					
ANR	4255548	Identifier	log		4255455	1					
ANR	4255549	Identifier	last		4255455	1					
ANR	4255550	IfStatement	"if ( r_cons_fgets ( buf , sizeof ( buf ) - 1 , 0 , NULL ) < 0 )"		4255455	2					
ANR	4255551	Condition	"r_cons_fgets ( buf , sizeof ( buf ) - 1 , 0 , NULL ) < 0"	110:6:3277:3325	4255455	0	True				
ANR	4255552	RelationalExpression	"r_cons_fgets ( buf , sizeof ( buf ) - 1 , 0 , NULL ) < 0"		4255455	0		<			
ANR	4255553	CallExpression	"r_cons_fgets ( buf , sizeof ( buf ) - 1 , 0 , NULL )"		4255455	0					
ANR	4255554	Callee	r_cons_fgets		4255455	0					
ANR	4255555	Identifier	r_cons_fgets		4255455	0					
ANR	4255556	ArgumentList	buf		4255455	1					
ANR	4255557	Argument	buf		4255455	0					
ANR	4255558	Identifier	buf		4255455	0					
ANR	4255559	Argument	sizeof ( buf ) - 1		4255455	1					
ANR	4255560	AdditiveExpression	sizeof ( buf ) - 1		4255455	0		-			
ANR	4255561	SizeofExpression	sizeof ( buf )		4255455	0					
ANR	4255562	Sizeof	sizeof		4255455	0					
ANR	4255563	SizeofOperand	buf		4255455	1					
ANR	4255564	PrimaryExpression	1		4255455	1					
ANR	4255565	Argument	0		4255455	2					
ANR	4255566	PrimaryExpression	0		4255455	0					
ANR	4255567	Argument	NULL		4255455	3					
ANR	4255568	Identifier	NULL		4255455	0					
ANR	4255569	PrimaryExpression	0		4255455	1					
ANR	4255570	CompoundStatement		14:57:397:397	4255455	1					
ANR	4255571	ReturnStatement	return 1 ;	111:3:3333:3341	4255455	0	True				
ANR	4255572	PrimaryExpression	1		4255455	0					
ANR	4255573	IfStatement	if ( ! * buf )		4255455	3					
ANR	4255574	Condition	! * buf	113:6:3353:3357	4255455	0	True				
ANR	4255575	UnaryOperationExpression	! * buf		4255455	0					
ANR	4255576	UnaryOperator	!		4255455	0					
ANR	4255577	UnaryOperationExpression	* buf		4255455	1					
ANR	4255578	UnaryOperator	*		4255455	0					
ANR	4255579	Identifier	buf		4255455	1					
ANR	4255580	CompoundStatement		17:13:429:429	4255455	1					
ANR	4255581	ContinueStatement	continue ;	114:3:3365:3373	4255455	0	True				
ANR	4255582	IfStatement	"if ( ! strcmp ( buf , ""/help"" ) )"		4255455	4					
ANR	4255583	Condition	"! strcmp ( buf , ""/help"" )"	116:6:3385:3406	4255455	0	True				
ANR	4255584	UnaryOperationExpression	"! strcmp ( buf , ""/help"" )"		4255455	0					
ANR	4255585	UnaryOperator	!		4255455	0					
ANR	4255586	CallExpression	"strcmp ( buf , ""/help"" )"		4255455	1					
ANR	4255587	Callee	strcmp		4255455	0					
ANR	4255588	Identifier	strcmp		4255455	0					
ANR	4255589	ArgumentList	buf		4255455	1					
ANR	4255590	Argument	buf		4255455	0					
ANR	4255591	Identifier	buf		4255455	0					
ANR	4255592	Argument	"""/help"""		4255455	1					
ANR	4255593	PrimaryExpression	"""/help"""		4255455	0					
ANR	4255594	CompoundStatement		20:30:478:478	4255455	1					
ANR	4255595	ExpressionStatement	"eprintf ( ""/quit           quit the chat (same as ^D)\\n"" )"	117:3:3414:3470	4255455	0	True				
ANR	4255596	CallExpression	"eprintf ( ""/quit           quit the chat (same as ^D)\\n"" )"		4255455	0					
ANR	4255597	Callee	eprintf		4255455	0					
ANR	4255598	Identifier	eprintf		4255455	0					
ANR	4255599	ArgumentList	"""/quit           quit the chat (same as ^D)\\n"""		4255455	1					
ANR	4255600	Argument	"""/quit           quit the chat (same as ^D)\\n"""		4255455	0					
ANR	4255601	PrimaryExpression	"""/quit           quit the chat (same as ^D)\\n"""		4255455	0					
ANR	4255602	ExpressionStatement	"eprintf ( ""/name <nick>    set cfg.user name\\n"" )"	118:3:3475:3522	4255455	1	True				
ANR	4255603	CallExpression	"eprintf ( ""/name <nick>    set cfg.user name\\n"" )"		4255455	0					
ANR	4255604	Callee	eprintf		4255455	0					
ANR	4255605	Identifier	eprintf		4255455	0					
ANR	4255606	ArgumentList	"""/name <nick>    set cfg.user name\\n"""		4255455	1					
ANR	4255607	Argument	"""/name <nick>    set cfg.user name\\n"""		4255455	0					
ANR	4255608	PrimaryExpression	"""/name <nick>    set cfg.user name\\n"""		4255455	0					
ANR	4255609	ExpressionStatement	"eprintf ( ""/log            show full log\\n"" )"	119:3:3527:3570	4255455	2	True				
ANR	4255610	CallExpression	"eprintf ( ""/log            show full log\\n"" )"		4255455	0					
ANR	4255611	Callee	eprintf		4255455	0					
ANR	4255612	Identifier	eprintf		4255455	0					
ANR	4255613	ArgumentList	"""/log            show full log\\n"""		4255455	1					
ANR	4255614	Argument	"""/log            show full log\\n"""		4255455	0					
ANR	4255615	PrimaryExpression	"""/log            show full log\\n"""		4255455	0					
ANR	4255616	ExpressionStatement	"eprintf ( ""/clear          clear text log messages\\n"" )"	120:3:3575:3628	4255455	3	True				
ANR	4255617	CallExpression	"eprintf ( ""/clear          clear text log messages\\n"" )"		4255455	0					
ANR	4255618	Callee	eprintf		4255455	0					
ANR	4255619	Identifier	eprintf		4255455	0					
ANR	4255620	ArgumentList	"""/clear          clear text log messages\\n"""		4255455	1					
ANR	4255621	Argument	"""/clear          clear text log messages\\n"""		4255455	0					
ANR	4255622	PrimaryExpression	"""/clear          clear text log messages\\n"""		4255455	0					
ANR	4255623	ElseStatement	else		4255455	0					
ANR	4255624	IfStatement	"if ( ! strncmp ( buf , ""/name "" , 6 ) )"		4255455	0					
ANR	4255625	Condition	"! strncmp ( buf , ""/name "" , 6 )"	121:13:3643:3669	4255455	0	True				
ANR	4255626	UnaryOperationExpression	"! strncmp ( buf , ""/name "" , 6 )"		4255455	0					
ANR	4255627	UnaryOperator	!		4255455	0					
ANR	4255628	CallExpression	"strncmp ( buf , ""/name "" , 6 )"		4255455	1					
ANR	4255629	Callee	strncmp		4255455	0					
ANR	4255630	Identifier	strncmp		4255455	0					
ANR	4255631	ArgumentList	buf		4255455	1					
ANR	4255632	Argument	buf		4255455	0					
ANR	4255633	Identifier	buf		4255455	0					
ANR	4255634	Argument	"""/name """		4255455	1					
ANR	4255635	PrimaryExpression	"""/name """		4255455	0					
ANR	4255636	Argument	6		4255455	2					
ANR	4255637	PrimaryExpression	6		4255455	0					
ANR	4255638	CompoundStatement		25:42:741:741	4255455	1					
ANR	4255639	ExpressionStatement	"snprintf ( msg , sizeof ( msg ) - 1 , ""* '%s' is now known as '%s'"" , me , buf + 6 )"	122:3:3677:3753	4255455	0	True				
ANR	4255640	CallExpression	"snprintf ( msg , sizeof ( msg ) - 1 , ""* '%s' is now known as '%s'"" , me , buf + 6 )"		4255455	0					
ANR	4255641	Callee	snprintf		4255455	0					
ANR	4255642	Identifier	snprintf		4255455	0					
ANR	4255643	ArgumentList	msg		4255455	1					
ANR	4255644	Argument	msg		4255455	0					
ANR	4255645	Identifier	msg		4255455	0					
ANR	4255646	Argument	sizeof ( msg ) - 1		4255455	1					
ANR	4255647	AdditiveExpression	sizeof ( msg ) - 1		4255455	0		-			
ANR	4255648	SizeofExpression	sizeof ( msg )		4255455	0					
ANR	4255649	Sizeof	sizeof		4255455	0					
ANR	4255650	SizeofOperand	msg		4255455	1					
ANR	4255651	PrimaryExpression	1		4255455	1					
ANR	4255652	Argument	"""* '%s' is now known as '%s'"""		4255455	2					
ANR	4255653	PrimaryExpression	"""* '%s' is now known as '%s'"""		4255455	0					
ANR	4255654	Argument	me		4255455	3					
ANR	4255655	Identifier	me		4255455	0					
ANR	4255656	Argument	buf + 6		4255455	4					
ANR	4255657	AdditiveExpression	buf + 6		4255455	0		+			
ANR	4255658	Identifier	buf		4255455	0					
ANR	4255659	PrimaryExpression	6		4255455	1					
ANR	4255660	ExpressionStatement	"r_core_log_add ( core , msg )"	123:3:3758:3784	4255455	1	True				
ANR	4255661	CallExpression	"r_core_log_add ( core , msg )"		4255455	0					
ANR	4255662	Callee	r_core_log_add		4255455	0					
ANR	4255663	Identifier	r_core_log_add		4255455	0					
ANR	4255664	ArgumentList	core		4255455	1					
ANR	4255665	Argument	core		4255455	0					
ANR	4255666	Identifier	core		4255455	0					
ANR	4255667	Argument	msg		4255455	1					
ANR	4255668	Identifier	msg		4255455	0					
ANR	4255669	ExpressionStatement	"r_config_set ( core -> config , ""cfg.user"" , buf + 6 )"	124:3:3789:3837	4255455	2	True				
ANR	4255670	CallExpression	"r_config_set ( core -> config , ""cfg.user"" , buf + 6 )"		4255455	0					
ANR	4255671	Callee	r_config_set		4255455	0					
ANR	4255672	Identifier	r_config_set		4255455	0					
ANR	4255673	ArgumentList	core -> config		4255455	1					
ANR	4255674	Argument	core -> config		4255455	0					
ANR	4255675	PtrMemberAccess	core -> config		4255455	0					
ANR	4255676	Identifier	core		4255455	0					
ANR	4255677	Identifier	config		4255455	1					
ANR	4255678	Argument	"""cfg.user"""		4255455	1					
ANR	4255679	PrimaryExpression	"""cfg.user"""		4255455	0					
ANR	4255680	Argument	buf + 6		4255455	2					
ANR	4255681	AdditiveExpression	buf + 6		4255455	0		+			
ANR	4255682	Identifier	buf		4255455	0					
ANR	4255683	PrimaryExpression	6		4255455	1					
ANR	4255684	ExpressionStatement	"me = r_config_get ( core -> config , ""cfg.user"" )"	125:3:3842:3886	4255455	3	True				
ANR	4255685	AssignmentExpression	"me = r_config_get ( core -> config , ""cfg.user"" )"		4255455	0		=			
ANR	4255686	Identifier	me		4255455	0					
ANR	4255687	CallExpression	"r_config_get ( core -> config , ""cfg.user"" )"		4255455	1					
ANR	4255688	Callee	r_config_get		4255455	0					
ANR	4255689	Identifier	r_config_get		4255455	0					
ANR	4255690	ArgumentList	core -> config		4255455	1					
ANR	4255691	Argument	core -> config		4255455	0					
ANR	4255692	PtrMemberAccess	core -> config		4255455	0					
ANR	4255693	Identifier	core		4255455	0					
ANR	4255694	Identifier	config		4255455	1					
ANR	4255695	Argument	"""cfg.user"""		4255455	1					
ANR	4255696	PrimaryExpression	"""cfg.user"""		4255455	0					
ANR	4255697	ExpressionStatement	"snprintf ( prompt , sizeof ( prompt ) - 1 , ""[%s]> "" , me )"	126:3:3891:3943	4255455	4	True				
ANR	4255698	CallExpression	"snprintf ( prompt , sizeof ( prompt ) - 1 , ""[%s]> "" , me )"		4255455	0					
ANR	4255699	Callee	snprintf		4255455	0					
ANR	4255700	Identifier	snprintf		4255455	0					
ANR	4255701	ArgumentList	prompt		4255455	1					
ANR	4255702	Argument	prompt		4255455	0					
ANR	4255703	Identifier	prompt		4255455	0					
ANR	4255704	Argument	sizeof ( prompt ) - 1		4255455	1					
ANR	4255705	AdditiveExpression	sizeof ( prompt ) - 1		4255455	0		-			
ANR	4255706	SizeofExpression	sizeof ( prompt )		4255455	0					
ANR	4255707	Sizeof	sizeof		4255455	0					
ANR	4255708	SizeofOperand	prompt		4255455	1					
ANR	4255709	PrimaryExpression	1		4255455	1					
ANR	4255710	Argument	"""[%s]> """		4255455	2					
ANR	4255711	PrimaryExpression	"""[%s]> """		4255455	0					
ANR	4255712	Argument	me		4255455	3					
ANR	4255713	Identifier	me		4255455	0					
ANR	4255714	ExpressionStatement	r_line_set_prompt ( prompt )	127:3:3948:3974	4255455	5	True				
ANR	4255715	CallExpression	r_line_set_prompt ( prompt )		4255455	0					
ANR	4255716	Callee	r_line_set_prompt		4255455	0					
ANR	4255717	Identifier	r_line_set_prompt		4255455	0					
ANR	4255718	ArgumentList	prompt		4255455	1					
ANR	4255719	Argument	prompt		4255455	0					
ANR	4255720	Identifier	prompt		4255455	0					
ANR	4255721	ReturnStatement	return 0 ;	128:3:3979:3987	4255455	6	True				
ANR	4255722	PrimaryExpression	0		4255455	0					
ANR	4255723	ElseStatement	else		4255455	0					
ANR	4255724	IfStatement	"if ( ! strcmp ( buf , ""/log"" ) )"		4255455	0					
ANR	4255725	Condition	"! strcmp ( buf , ""/log"" )"	129:13:4002:4022	4255455	0	True				
ANR	4255726	UnaryOperationExpression	"! strcmp ( buf , ""/log"" )"		4255455	0					
ANR	4255727	UnaryOperator	!		4255455	0					
ANR	4255728	CallExpression	"strcmp ( buf , ""/log"" )"		4255455	1					
ANR	4255729	Callee	strcmp		4255455	0					
ANR	4255730	Identifier	strcmp		4255455	0					
ANR	4255731	ArgumentList	buf		4255455	1					
ANR	4255732	Argument	buf		4255455	0					
ANR	4255733	Identifier	buf		4255455	0					
ANR	4255734	Argument	"""/log"""		4255455	1					
ANR	4255735	PrimaryExpression	"""/log"""		4255455	0					
ANR	4255736	CompoundStatement		33:36:1094:1094	4255455	1					
ANR	4255737	ExpressionStatement	"r_core_log_list ( core , 0 , 0 , 0 )"	130:3:4030:4061	4255455	0	True				
ANR	4255738	CallExpression	"r_core_log_list ( core , 0 , 0 , 0 )"		4255455	0					
ANR	4255739	Callee	r_core_log_list		4255455	0					
ANR	4255740	Identifier	r_core_log_list		4255455	0					
ANR	4255741	ArgumentList	core		4255455	1					
ANR	4255742	Argument	core		4255455	0					
ANR	4255743	Identifier	core		4255455	0					
ANR	4255744	Argument	0		4255455	1					
ANR	4255745	PrimaryExpression	0		4255455	0					
ANR	4255746	Argument	0		4255455	2					
ANR	4255747	PrimaryExpression	0		4255455	0					
ANR	4255748	Argument	0		4255455	3					
ANR	4255749	PrimaryExpression	0		4255455	0					
ANR	4255750	ReturnStatement	return 0 ;	131:3:4066:4074	4255455	1	True				
ANR	4255751	PrimaryExpression	0		4255455	0					
ANR	4255752	ElseStatement	else		4255455	0					
ANR	4255753	IfStatement	"if ( ! strcmp ( buf , ""/clear"" ) )"		4255455	0					
ANR	4255754	Condition	"! strcmp ( buf , ""/clear"" )"	132:13:4089:4111	4255455	0	True				
ANR	4255755	UnaryOperationExpression	"! strcmp ( buf , ""/clear"" )"		4255455	0					
ANR	4255756	UnaryOperator	!		4255455	0					
ANR	4255757	CallExpression	"strcmp ( buf , ""/clear"" )"		4255455	1					
ANR	4255758	Callee	strcmp		4255455	0					
ANR	4255759	Identifier	strcmp		4255455	0					
ANR	4255760	ArgumentList	buf		4255455	1					
ANR	4255761	Argument	buf		4255455	0					
ANR	4255762	Identifier	buf		4255455	0					
ANR	4255763	Argument	"""/clear"""		4255455	1					
ANR	4255764	PrimaryExpression	"""/clear"""		4255455	0					
ANR	4255765	CompoundStatement		36:38:1183:1183	4255455	1					
ANR	4255766	ExpressionStatement	"r_core_cmd0 ( core , ""T-"" )"	134:3:4151:4175	4255455	0	True				
ANR	4255767	CallExpression	"r_core_cmd0 ( core , ""T-"" )"		4255455	0					
ANR	4255768	Callee	r_core_cmd0		4255455	0					
ANR	4255769	Identifier	r_core_cmd0		4255455	0					
ANR	4255770	ArgumentList	core		4255455	1					
ANR	4255771	Argument	core		4255455	0					
ANR	4255772	Identifier	core		4255455	0					
ANR	4255773	Argument	"""T-"""		4255455	1					
ANR	4255774	PrimaryExpression	"""T-"""		4255455	0					
ANR	4255775	ReturnStatement	return 0 ;	135:3:4180:4188	4255455	1	True				
ANR	4255776	PrimaryExpression	0		4255455	0					
ANR	4255777	ElseStatement	else		4255455	0					
ANR	4255778	IfStatement	"if ( ! strcmp ( buf , ""/quit"" ) )"		4255455	0					
ANR	4255779	Condition	"! strcmp ( buf , ""/quit"" )"	136:13:4203:4224	4255455	0	True				
ANR	4255780	UnaryOperationExpression	"! strcmp ( buf , ""/quit"" )"		4255455	0					
ANR	4255781	UnaryOperator	!		4255455	0					
ANR	4255782	CallExpression	"strcmp ( buf , ""/quit"" )"		4255455	1					
ANR	4255783	Callee	strcmp		4255455	0					
ANR	4255784	Identifier	strcmp		4255455	0					
ANR	4255785	ArgumentList	buf		4255455	1					
ANR	4255786	Argument	buf		4255455	0					
ANR	4255787	Identifier	buf		4255455	0					
ANR	4255788	Argument	"""/quit"""		4255455	1					
ANR	4255789	PrimaryExpression	"""/quit"""		4255455	0					
ANR	4255790	CompoundStatement		40:37:1296:1296	4255455	1					
ANR	4255791	ReturnStatement	return 0 ;	137:3:4232:4240	4255455	0	True				
ANR	4255792	PrimaryExpression	0		4255455	0					
ANR	4255793	ElseStatement	else		4255455	0					
ANR	4255794	IfStatement	if ( * buf == '/' )		4255455	0					
ANR	4255795	Condition	* buf == '/'	138:13:4255:4265	4255455	0	True				
ANR	4255796	EqualityExpression	* buf == '/'		4255455	0		==			
ANR	4255797	UnaryOperationExpression	* buf		4255455	0					
ANR	4255798	UnaryOperator	*		4255455	0					
ANR	4255799	Identifier	buf		4255455	1					
ANR	4255800	PrimaryExpression	'/'		4255455	1					
ANR	4255801	CompoundStatement		42:26:1337:1337	4255455	1					
ANR	4255802	ExpressionStatement	"eprintf ( ""Unknown command: %s\\n"" , buf )"	139:3:4273:4311	4255455	0	True				
ANR	4255803	CallExpression	"eprintf ( ""Unknown command: %s\\n"" , buf )"		4255455	0					
ANR	4255804	Callee	eprintf		4255455	0					
ANR	4255805	Identifier	eprintf		4255455	0					
ANR	4255806	ArgumentList	"""Unknown command: %s\\n"""		4255455	1					
ANR	4255807	Argument	"""Unknown command: %s\\n"""		4255455	0					
ANR	4255808	PrimaryExpression	"""Unknown command: %s\\n"""		4255455	0					
ANR	4255809	Argument	buf		4255455	1					
ANR	4255810	Identifier	buf		4255455	0					
ANR	4255811	ElseStatement	else		4255455	0					
ANR	4255812	CompoundStatement		44:9:1391:1391	4255455	0					
ANR	4255813	ExpressionStatement	"snprintf ( msg , sizeof ( msg ) , ""[%s] %s"" , me , buf )"	141:3:4327:4375	4255455	0	True				
ANR	4255814	CallExpression	"snprintf ( msg , sizeof ( msg ) , ""[%s] %s"" , me , buf )"		4255455	0					
ANR	4255815	Callee	snprintf		4255455	0					
ANR	4255816	Identifier	snprintf		4255455	0					
ANR	4255817	ArgumentList	msg		4255455	1					
ANR	4255818	Argument	msg		4255455	0					
ANR	4255819	Identifier	msg		4255455	0					
ANR	4255820	Argument	sizeof ( msg )		4255455	1					
ANR	4255821	SizeofExpression	sizeof ( msg )		4255455	0					
ANR	4255822	Sizeof	sizeof		4255455	0					
ANR	4255823	SizeofOperand	msg		4255455	1					
ANR	4255824	Argument	"""[%s] %s"""		4255455	2					
ANR	4255825	PrimaryExpression	"""[%s] %s"""		4255455	0					
ANR	4255826	Argument	me		4255455	3					
ANR	4255827	Identifier	me		4255455	0					
ANR	4255828	Argument	buf		4255455	4					
ANR	4255829	Identifier	buf		4255455	0					
ANR	4255830	ExpressionStatement	"r_core_log_add ( core , msg )"	142:3:4380:4406	4255455	1	True				
ANR	4255831	CallExpression	"r_core_log_add ( core , msg )"		4255455	0					
ANR	4255832	Callee	r_core_log_add		4255455	0					
ANR	4255833	Identifier	r_core_log_add		4255455	0					
ANR	4255834	ArgumentList	core		4255455	1					
ANR	4255835	Argument	core		4255455	0					
ANR	4255836	Identifier	core		4255455	0					
ANR	4255837	Argument	msg		4255455	1					
ANR	4255838	Identifier	msg		4255455	0					
ANR	4255839	ReturnStatement	return 1 ;	145:1:4416:4424	4255455	9	True				
ANR	4255840	PrimaryExpression	1		4255455	0					
ANR	4255841	ReturnType	static int		4255455	1					
ANR	4255842	Identifier	textlog_chat		4255455	2					
ANR	4255843	ParameterList	RCore * core		4255455	3					
ANR	4255844	Parameter	RCore * core	97:24:2917:2927	4255455	0	True				
ANR	4255845	ParameterType	RCore *		4255455	0					
ANR	4255846	Identifier	core		4255455	1					
ANR	4255847	CFGEntryNode	ENTRY		4255455		True				
ANR	4255848	CFGExitNode	EXIT		4255455		True				
ANR	4255849	InfiniteForNode	true		4255455		True				
ANR	4255850	Symbol	core -> config		4255455						
ANR	4255851	Symbol	msg		4255455						
ANR	4255852	Symbol	strcmp		4255455						
ANR	4255853	Symbol	* buf		4255455						
ANR	4255854	Symbol	NULL		4255455						
ANR	4255855	Symbol	r_cons_fgets		4255455						
ANR	4255856	Symbol	r_config_get		4255455						
ANR	4255857	Symbol	* core		4255455						
ANR	4255858	Symbol	core		4255455						
ANR	4255859	Symbol	strncmp		4255455						
ANR	4255860	Symbol	buf		4255455						
ANR	4255861	Symbol	core -> log		4255455						
ANR	4255862	Symbol	core -> log -> last		4255455						
ANR	4255863	Symbol	me		4255455						
ANR	4255864	Symbol	* core -> log		4255455						
ANR	4255865	Symbol	lastmsg		4255455						
ANR	4255866	Symbol	prompt		4255455						
ANR	4255867	Symbol	* * core		4255455						
ANR	4255868	Function	getIndexFromLogString	148:0:4429:4724							
ANR	4255869	FunctionDef	getIndexFromLogString (const char * s)		4255868	0					
ANR	4255870	CompoundStatement		148:48:4477:4724	4255868	0					
ANR	4255871	IdentifierDeclStatement	int len = strlen ( s ) ;	149:1:4480:4500	4255868	0	True				
ANR	4255872	IdentifierDecl	len = strlen ( s )		4255868	0					
ANR	4255873	IdentifierDeclType	int		4255868	0					
ANR	4255874	Identifier	len		4255868	1					
ANR	4255875	AssignmentExpression	len = strlen ( s )		4255868	2		=			
ANR	4255876	Identifier	len		4255868	0					
ANR	4255877	CallExpression	strlen ( s )		4255868	1					
ANR	4255878	Callee	strlen		4255868	0					
ANR	4255879	Identifier	strlen		4255868	0					
ANR	4255880	ArgumentList	s		4255868	1					
ANR	4255881	Argument	s		4255868	0					
ANR	4255882	Identifier	s		4255868	0					
ANR	4255883	IdentifierDeclStatement	const char * m = s + len ;	150:1:4503:4526	4255868	1	True				
ANR	4255884	IdentifierDecl	* m = s + len		4255868	0					
ANR	4255885	IdentifierDeclType	const char *		4255868	0					
ANR	4255886	Identifier	m		4255868	1					
ANR	4255887	AssignmentExpression	* m = s + len		4255868	2		=			
ANR	4255888	Identifier	m		4255868	0					
ANR	4255889	AdditiveExpression	s + len		4255868	1		+			
ANR	4255890	Identifier	s		4255868	0					
ANR	4255891	Identifier	len		4255868	1					
ANR	4255892	IdentifierDeclStatement	int nlctr = 2 ;	151:1:4529:4542	4255868	2	True				
ANR	4255893	IdentifierDecl	nlctr = 2		4255868	0					
ANR	4255894	IdentifierDeclType	int		4255868	0					
ANR	4255895	Identifier	nlctr		4255868	1					
ANR	4255896	AssignmentExpression	nlctr = 2		4255868	2		=			
ANR	4255897	Identifier	nlctr		4255868	0					
ANR	4255898	PrimaryExpression	2		4255868	1					
ANR	4255899	IdentifierDeclStatement	const char * nl = NULL ;	152:1:4545:4566	4255868	3	True				
ANR	4255900	IdentifierDecl	* nl = NULL		4255868	0					
ANR	4255901	IdentifierDeclType	const char *		4255868	0					
ANR	4255902	Identifier	nl		4255868	1					
ANR	4255903	AssignmentExpression	* nl = NULL		4255868	2		=			
ANR	4255904	Identifier	NULL		4255868	0					
ANR	4255905	Identifier	NULL		4255868	1					
ANR	4255906	WhileStatement	while ( m > s )		4255868	4					
ANR	4255907	Condition	m > s	153:8:4576:4580	4255868	0	True				
ANR	4255908	RelationalExpression	m > s		4255868	0		>			
ANR	4255909	Identifier	m		4255868	0					
ANR	4255910	Identifier	s		4255868	1					
ANR	4255911	CompoundStatement		6:15:105:105	4255868	1					
ANR	4255912	IfStatement	if ( * m == '\\n' )		4255868	0					
ANR	4255913	Condition	* m == '\\n'	154:6:4591:4600	4255868	0	True				
ANR	4255914	EqualityExpression	* m == '\\n'		4255868	0		==			
ANR	4255915	UnaryOperationExpression	* m		4255868	0					
ANR	4255916	UnaryOperator	*		4255868	0					
ANR	4255917	Identifier	m		4255868	1					
ANR	4255918	PrimaryExpression	'\\n'		4255868	1					
ANR	4255919	CompoundStatement		7:18:125:125	4255868	1					
ANR	4255920	ExpressionStatement	nl = m	155:3:4608:4614	4255868	0	True				
ANR	4255921	AssignmentExpression	nl = m		4255868	0		=			
ANR	4255922	Identifier	nl		4255868	0					
ANR	4255923	Identifier	m		4255868	1					
ANR	4255924	IfStatement	if ( -- nlctr < 1 )		4255868	1					
ANR	4255925	Condition	-- nlctr < 1	156:7:4623:4633	4255868	0	True				
ANR	4255926	RelationalExpression	-- nlctr < 1		4255868	0		<			
ANR	4255927	UnaryExpression	-- nlctr		4255868	0					
ANR	4255928	IncDec	--		4255868	0					
ANR	4255929	Identifier	nlctr		4255868	1					
ANR	4255930	PrimaryExpression	1		4255868	1					
ANR	4255931	CompoundStatement		9:20:158:158	4255868	1					
ANR	4255932	ReturnStatement	return atoi ( m + 1 ) ;	157:4:4642:4661	4255868	0	True				
ANR	4255933	CallExpression	atoi ( m + 1 )		4255868	0					
ANR	4255934	Callee	atoi		4255868	0					
ANR	4255935	Identifier	atoi		4255868	0					
ANR	4255936	ArgumentList	m + 1		4255868	1					
ANR	4255937	Argument	m + 1		4255868	0					
ANR	4255938	AdditiveExpression	m + 1		4255868	0		+			
ANR	4255939	Identifier	m		4255868	0					
ANR	4255940	PrimaryExpression	1		4255868	1					
ANR	4255941	ExpressionStatement	m --	160:2:4674:4677	4255868	1	True				
ANR	4255942	PostIncDecOperationExpression	m --		4255868	0					
ANR	4255943	Identifier	m		4255868	0					
ANR	4255944	IncDec	--		4255868	1					
ANR	4255945	ReturnStatement	return atoi ( nl ? nl + 1 : s ) ;	162:2:4684:4710	4255868	5	True				
ANR	4255946	CallExpression	atoi ( nl ? nl + 1 : s )		4255868	0					
ANR	4255947	Callee	atoi		4255868	0					
ANR	4255948	Identifier	atoi		4255868	0					
ANR	4255949	ArgumentList	nl ? nl + 1 : s		4255868	1					
ANR	4255950	Argument	nl ? nl + 1 : s		4255868	0					
ANR	4255951	ConditionalExpression	nl ? nl + 1 : s		4255868	0					
ANR	4255952	Condition	nl		4255868	0					
ANR	4255953	Identifier	nl		4255868	0					
ANR	4255954	AdditiveExpression	nl + 1		4255868	1		+			
ANR	4255955	Identifier	nl		4255868	0					
ANR	4255956	PrimaryExpression	1		4255868	1					
ANR	4255957	Identifier	s		4255868	2					
ANR	4255958	ReturnStatement	return - 1 ;	163:1:4713:4722	4255868	6	True				
ANR	4255959	UnaryOperationExpression	- 1		4255868	0					
ANR	4255960	UnaryOperator	-		4255868	0					
ANR	4255961	PrimaryExpression	1		4255868	1					
ANR	4255962	ReturnType	static int		4255868	1					
ANR	4255963	Identifier	getIndexFromLogString		4255868	2					
ANR	4255964	ParameterList	const char * s		4255868	3					
ANR	4255965	Parameter	const char * s	148:33:4462:4474	4255868	0	True				
ANR	4255966	ParameterType	const char *		4255868	0					
ANR	4255967	Identifier	s		4255868	1					
ANR	4255968	CFGEntryNode	ENTRY		4255868		True				
ANR	4255969	CFGExitNode	EXIT		4255868		True				
ANR	4255970	Symbol	atoi		4255868						
ANR	4255971	Symbol	strlen		4255868						
ANR	4255972	Symbol	s		4255868						
ANR	4255973	Symbol	nlctr		4255868						
ANR	4255974	Symbol	NULL		4255868						
ANR	4255975	Symbol	len		4255868						
ANR	4255976	Symbol	* m		4255868						
ANR	4255977	Symbol	m		4255868						
ANR	4255978	Symbol	nl		4255868						
ANR	4255979	Function	expr2cmd	166:0:4727:5331							
ANR	4255980	FunctionDef	"expr2cmd (RCoreLog * log , const char * line)"		4255979	0					
ANR	4255981	CompoundStatement		166:56:4783:5331	4255979	0					
ANR	4255982	IfStatement	if ( ! line || ! * line )		4255979	0					
ANR	4255983	Condition	! line || ! * line	167:5:4790:4804	4255979	0	True				
ANR	4255984	OrExpression	! line || ! * line		4255979	0		||			
ANR	4255985	UnaryOperationExpression	! line		4255979	0					
ANR	4255986	UnaryOperator	!		4255979	0					
ANR	4255987	Identifier	line		4255979	1					
ANR	4255988	UnaryOperationExpression	! * line		4255979	1					
ANR	4255989	UnaryOperator	!		4255979	0					
ANR	4255990	UnaryOperationExpression	* line		4255979	1					
ANR	4255991	UnaryOperator	*		4255979	0					
ANR	4255992	Identifier	line		4255979	1					
ANR	4255993	CompoundStatement		2:22:23:23	4255979	1					
ANR	4255994	ReturnStatement	return NULL ;	168:2:4811:4822	4255979	0	True				
ANR	4255995	Identifier	NULL		4255979	0					
ANR	4255996	ExpressionStatement	line ++	170:1:4828:4834	4255979	1	True				
ANR	4255997	PostIncDecOperationExpression	line ++		4255979	0					
ANR	4255998	Identifier	line		4255979	0					
ANR	4255999	IncDec	++		4255979	1					
ANR	4256000	IfStatement	"if ( ! strncmp ( line , ""add-comment"" , 11 ) )"		4255979	2					
ANR	4256001	Condition	"! strncmp ( line , ""add-comment"" , 11 )"	171:5:4841:4874	4255979	0	True				
ANR	4256002	UnaryOperationExpression	"! strncmp ( line , ""add-comment"" , 11 )"		4255979	0					
ANR	4256003	UnaryOperator	!		4255979	0					
ANR	4256004	CallExpression	"strncmp ( line , ""add-comment"" , 11 )"		4255979	1					
ANR	4256005	Callee	strncmp		4255979	0					
ANR	4256006	Identifier	strncmp		4255979	0					
ANR	4256007	ArgumentList	line		4255979	1					
ANR	4256008	Argument	line		4255979	0					
ANR	4256009	Identifier	line		4255979	0					
ANR	4256010	Argument	"""add-comment"""		4255979	1					
ANR	4256011	PrimaryExpression	"""add-comment"""		4255979	0					
ANR	4256012	Argument	11		4255979	2					
ANR	4256013	PrimaryExpression	11		4255979	0					
ANR	4256014	CompoundStatement		6:41:93:93	4255979	1					
ANR	4256015	ExpressionStatement	line += 11	172:2:4881:4891	4255979	0	True				
ANR	4256016	AssignmentExpression	line += 11		4255979	0		+=			
ANR	4256017	Identifier	line		4255979	0					
ANR	4256018	PrimaryExpression	11		4255979	1					
ANR	4256019	IfStatement	if ( * line == ' ' )		4255979	1					
ANR	4256020	Condition	* line == ' '	173:6:4899:4910	4255979	0	True				
ANR	4256021	EqualityExpression	* line == ' '		4255979	0		==			
ANR	4256022	UnaryOperationExpression	* line		4255979	0					
ANR	4256023	UnaryOperator	*		4255979	0					
ANR	4256024	Identifier	line		4255979	1					
ANR	4256025	PrimaryExpression	' '		4255979	1					
ANR	4256026	CompoundStatement		9:3:134:167	4255979	1					
ANR	4256027	IdentifierDeclStatement	"char * sp = strchr ( line + 1 , ' ' ) ;"	174:3:4918:4951	4255979	0	True				
ANR	4256028	IdentifierDecl	"* sp = strchr ( line + 1 , ' ' )"		4255979	0					
ANR	4256029	IdentifierDeclType	char *		4255979	0					
ANR	4256030	Identifier	sp		4255979	1					
ANR	4256031	AssignmentExpression	"* sp = strchr ( line + 1 , ' ' )"		4255979	2		=			
ANR	4256032	Identifier	sp		4255979	0					
ANR	4256033	CallExpression	"strchr ( line + 1 , ' ' )"		4255979	1					
ANR	4256034	Callee	strchr		4255979	0					
ANR	4256035	Identifier	strchr		4255979	0					
ANR	4256036	ArgumentList	line + 1		4255979	1					
ANR	4256037	Argument	line + 1		4255979	0					
ANR	4256038	AdditiveExpression	line + 1		4255979	0		+			
ANR	4256039	Identifier	line		4255979	0					
ANR	4256040	PrimaryExpression	1		4255979	1					
ANR	4256041	Argument	' '		4255979	1					
ANR	4256042	PrimaryExpression	' '		4255979	0					
ANR	4256043	IfStatement	if ( sp )		4255979	1					
ANR	4256044	Condition	sp	175:7:4960:4961	4255979	0	True				
ANR	4256045	Identifier	sp		4255979	0					
ANR	4256046	CompoundStatement		12:4:210:244	4255979	1					
ANR	4256047	IdentifierDeclStatement	char * msg = sp + 1 ;	176:4:4970:4988	4255979	0	True				
ANR	4256048	IdentifierDecl	* msg = sp + 1		4255979	0					
ANR	4256049	IdentifierDeclType	char *		4255979	0					
ANR	4256050	Identifier	msg		4255979	1					
ANR	4256051	AssignmentExpression	* msg = sp + 1		4255979	2		=			
ANR	4256052	Identifier	msg		4255979	0					
ANR	4256053	AdditiveExpression	sp + 1		4255979	1		+			
ANR	4256054	Identifier	sp		4255979	0					
ANR	4256055	PrimaryExpression	1		4255979	1					
ANR	4256056	IdentifierDeclStatement	"ut64 addr = r_num_get ( NULL , line ) ;"	177:4:4994:5028	4255979	1	True				
ANR	4256057	IdentifierDecl	"addr = r_num_get ( NULL , line )"		4255979	0					
ANR	4256058	IdentifierDeclType	ut64		4255979	0					
ANR	4256059	Identifier	addr		4255979	1					
ANR	4256060	AssignmentExpression	"addr = r_num_get ( NULL , line )"		4255979	2		=			
ANR	4256061	Identifier	addr		4255979	0					
ANR	4256062	CallExpression	"r_num_get ( NULL , line )"		4255979	1					
ANR	4256063	Callee	r_num_get		4255979	0					
ANR	4256064	Identifier	r_num_get		4255979	0					
ANR	4256065	ArgumentList	NULL		4255979	1					
ANR	4256066	Argument	NULL		4255979	0					
ANR	4256067	Identifier	NULL		4255979	0					
ANR	4256068	Argument	line		4255979	1					
ANR	4256069	Identifier	line		4255979	0					
ANR	4256070	Statement	return	178:4:5034:5039	4255979	2	True				
ANR	4256071	Statement	r_str_newf	178:11:5041:5050	4255979	3	True				
ANR	4256072	Statement	(	178:22:5052:5052	4255979	4	True				
ANR	4256073	Statement	"""CCu base64:%s @ 0x%"""	178:23:5053:5073	4255979	5	True				
ANR	4256074	Statement	PFMT64x	178:44:5074:5080	4255979	6	True				
ANR	4256075	Statement	"""\\n"""	178:51:5081:5084	4255979	7	True				
ANR	4256076	Statement	","	178:55:5085:5085	4255979	8	True				
ANR	4256077	Statement	msg	178:57:5087:5089	4255979	9	True				
ANR	4256078	Statement	","	178:60:5090:5090	4255979	10	True				
ANR	4256079	Statement	addr	178:62:5092:5095	4255979	11	True				
ANR	4256080	Statement	)	178:66:5096:5096	4255979	12	True				
ANR	4256081	ExpressionStatement		178:67:5097:5097	4255979	13	True				
ANR	4256082	ExpressionStatement	"eprintf ( ""add-comment parsing error\\n"" )"	181:2:5110:5149	4255979	2	True				
ANR	4256083	CallExpression	"eprintf ( ""add-comment parsing error\\n"" )"		4255979	0					
ANR	4256084	Callee	eprintf		4255979	0					
ANR	4256085	Identifier	eprintf		4255979	0					
ANR	4256086	ArgumentList	"""add-comment parsing error\\n"""		4255979	1					
ANR	4256087	Argument	"""add-comment parsing error\\n"""		4255979	0					
ANR	4256088	PrimaryExpression	"""add-comment parsing error\\n"""		4255979	0					
ANR	4256089	IfStatement	"if ( ! strncmp ( line , ""del-comment"" , 11 ) )"		4255979	3					
ANR	4256090	Condition	"! strncmp ( line , ""del-comment"" , 11 )"	183:5:5159:5192	4255979	0	True				
ANR	4256091	UnaryOperationExpression	"! strncmp ( line , ""del-comment"" , 11 )"		4255979	0					
ANR	4256092	UnaryOperator	!		4255979	0					
ANR	4256093	CallExpression	"strncmp ( line , ""del-comment"" , 11 )"		4255979	1					
ANR	4256094	Callee	strncmp		4255979	0					
ANR	4256095	Identifier	strncmp		4255979	0					
ANR	4256096	ArgumentList	line		4255979	1					
ANR	4256097	Argument	line		4255979	0					
ANR	4256098	Identifier	line		4255979	0					
ANR	4256099	Argument	"""del-comment"""		4255979	1					
ANR	4256100	PrimaryExpression	"""del-comment"""		4255979	0					
ANR	4256101	Argument	11		4255979	2					
ANR	4256102	PrimaryExpression	11		4255979	0					
ANR	4256103	CompoundStatement		18:41:411:411	4255979	1					
ANR	4256104	IfStatement	if ( line [ 11 ] == ' ' )		4255979	0					
ANR	4256105	Condition	line [ 11 ] == ' '	184:6:5203:5217	4255979	0	True				
ANR	4256106	EqualityExpression	line [ 11 ] == ' '		4255979	0		==			
ANR	4256107	ArrayIndexing	line [ 11 ]		4255979	0					
ANR	4256108	Identifier	line		4255979	0					
ANR	4256109	PrimaryExpression	11		4255979	1					
ANR	4256110	PrimaryExpression	' '		4255979	1					
ANR	4256111	CompoundStatement		19:23:436:436	4255979	1					
ANR	4256112	ReturnStatement	"return r_str_newf ( ""CC-%s\\n"" , line + 12 ) ;"	185:3:5225:5265	4255979	0	True				
ANR	4256113	CallExpression	"r_str_newf ( ""CC-%s\\n"" , line + 12 )"		4255979	0					
ANR	4256114	Callee	r_str_newf		4255979	0					
ANR	4256115	Identifier	r_str_newf		4255979	0					
ANR	4256116	ArgumentList	"""CC-%s\\n"""		4255979	1					
ANR	4256117	Argument	"""CC-%s\\n"""		4255979	0					
ANR	4256118	PrimaryExpression	"""CC-%s\\n"""		4255979	0					
ANR	4256119	Argument	line + 12		4255979	1					
ANR	4256120	AdditiveExpression	line + 12		4255979	0		+			
ANR	4256121	Identifier	line		4255979	0					
ANR	4256122	PrimaryExpression	12		4255979	1					
ANR	4256123	ExpressionStatement	"eprintf ( ""add-comment parsing error\\n"" )"	187:2:5273:5312	4255979	1	True				
ANR	4256124	CallExpression	"eprintf ( ""add-comment parsing error\\n"" )"		4255979	0					
ANR	4256125	Callee	eprintf		4255979	0					
ANR	4256126	Identifier	eprintf		4255979	0					
ANR	4256127	ArgumentList	"""add-comment parsing error\\n"""		4255979	1					
ANR	4256128	Argument	"""add-comment parsing error\\n"""		4255979	0					
ANR	4256129	PrimaryExpression	"""add-comment parsing error\\n"""		4255979	0					
ANR	4256130	ReturnStatement	return NULL ;	189:1:5318:5329	4255979	4	True				
ANR	4256131	Identifier	NULL		4255979	0					
ANR	4256132	ReturnType	static char *		4255979	1					
ANR	4256133	Identifier	expr2cmd		4255979	2					
ANR	4256134	ParameterList	"RCoreLog * log , const char * line"		4255979	3					
ANR	4256135	Parameter	RCoreLog * log	166:23:4750:4762	4255979	0	True				
ANR	4256136	ParameterType	RCoreLog *		4255979	0					
ANR	4256137	Identifier	log		4255979	1					
ANR	4256138	Parameter	const char * line	166:38:4765:4780	4255979	1	True				
ANR	4256139	ParameterType	const char *		4255979	0					
ANR	4256140	Identifier	line		4255979	1					
ANR	4256141	CFGEntryNode	ENTRY		4255979		True				
ANR	4256142	CFGExitNode	EXIT		4255979		True				
ANR	4256143	Symbol	msg		4255979						
ANR	4256144	Symbol	strncmp		4255979						
ANR	4256145	Symbol	NULL		4255979						
ANR	4256146	Symbol	log		4255979						
ANR	4256147	Symbol	line		4255979						
ANR	4256148	Symbol	strchr		4255979						
ANR	4256149	Symbol	r_num_get		4255979						
ANR	4256150	Symbol	* line		4255979						
ANR	4256151	Symbol	r_str_newf		4255979						
ANR	4256152	Symbol	addr		4255979						
ANR	4256153	Symbol	sp		4255979						
ANR	4256154	Function	log_callback_r2	192:0:5334:5577							
ANR	4256155	FunctionDef	"log_callback_r2 (RCore * core , int count , const char * line)"		4256154	0					
ANR	4256156	CompoundStatement		192:70:5404:5577	4256154	0					
ANR	4256157	IfStatement	if ( * line == ':' )		4256154	0					
ANR	4256158	Condition	* line == ':'	193:5:5411:5422	4256154	0	True				
ANR	4256159	EqualityExpression	* line == ':'		4256154	0		==			
ANR	4256160	UnaryOperationExpression	* line		4256154	0					
ANR	4256161	UnaryOperator	*		4256154	0					
ANR	4256162	Identifier	line		4256154	1					
ANR	4256163	PrimaryExpression	':'		4256154	1					
ANR	4256164	CompoundStatement		3:2:24:62	4256154	1					
ANR	4256165	IdentifierDeclStatement	"char * cmd = expr2cmd ( core -> log , line ) ;"	194:2:5429:5467	4256154	0	True				
ANR	4256166	IdentifierDecl	"* cmd = expr2cmd ( core -> log , line )"		4256154	0					
ANR	4256167	IdentifierDeclType	char *		4256154	0					
ANR	4256168	Identifier	cmd		4256154	1					
ANR	4256169	AssignmentExpression	"* cmd = expr2cmd ( core -> log , line )"		4256154	2		=			
ANR	4256170	Identifier	cmd		4256154	0					
ANR	4256171	CallExpression	"expr2cmd ( core -> log , line )"		4256154	1					
ANR	4256172	Callee	expr2cmd		4256154	0					
ANR	4256173	Identifier	expr2cmd		4256154	0					
ANR	4256174	ArgumentList	core -> log		4256154	1					
ANR	4256175	Argument	core -> log		4256154	0					
ANR	4256176	PtrMemberAccess	core -> log		4256154	0					
ANR	4256177	Identifier	core		4256154	0					
ANR	4256178	Identifier	log		4256154	1					
ANR	4256179	Argument	line		4256154	1					
ANR	4256180	Identifier	line		4256154	0					
ANR	4256181	IfStatement	if ( cmd )		4256154	1					
ANR	4256182	Condition	cmd	195:6:5475:5477	4256154	0	True				
ANR	4256183	Identifier	cmd		4256154	0					
ANR	4256184	CompoundStatement		4:11:75:75	4256154	1					
ANR	4256185	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , cmd )"	196:3:5485:5512	4256154	0	True				
ANR	4256186	CallExpression	"r_cons_printf ( ""%s\\n"" , cmd )"		4256154	0					
ANR	4256187	Callee	r_cons_printf		4256154	0					
ANR	4256188	Identifier	r_cons_printf		4256154	0					
ANR	4256189	ArgumentList	"""%s\\n"""		4256154	1					
ANR	4256190	Argument	"""%s\\n"""		4256154	0					
ANR	4256191	PrimaryExpression	"""%s\\n"""		4256154	0					
ANR	4256192	Argument	cmd		4256154	1					
ANR	4256193	Identifier	cmd		4256154	0					
ANR	4256194	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	197:3:5517:5542	4256154	1	True				
ANR	4256195	CallExpression	"r_core_cmd ( core , cmd , 0 )"		4256154	0					
ANR	4256196	Callee	r_core_cmd		4256154	0					
ANR	4256197	Identifier	r_core_cmd		4256154	0					
ANR	4256198	ArgumentList	core		4256154	1					
ANR	4256199	Argument	core		4256154	0					
ANR	4256200	Identifier	core		4256154	0					
ANR	4256201	Argument	cmd		4256154	1					
ANR	4256202	Identifier	cmd		4256154	0					
ANR	4256203	Argument	0		4256154	2					
ANR	4256204	PrimaryExpression	0		4256154	0					
ANR	4256205	ExpressionStatement	free ( cmd )	198:3:5547:5557	4256154	2	True				
ANR	4256206	CallExpression	free ( cmd )		4256154	0					
ANR	4256207	Callee	free		4256154	0					
ANR	4256208	Identifier	free		4256154	0					
ANR	4256209	ArgumentList	cmd		4256154	1					
ANR	4256210	Argument	cmd		4256154	0					
ANR	4256211	Identifier	cmd		4256154	0					
ANR	4256212	ReturnStatement	return 0 ;	201:1:5567:5575	4256154	1	True				
ANR	4256213	PrimaryExpression	0		4256154	0					
ANR	4256214	ReturnType	static int		4256154	1					
ANR	4256215	Identifier	log_callback_r2		4256154	2					
ANR	4256216	ParameterList	"RCore * core , int count , const char * line"		4256154	3					
ANR	4256217	Parameter	RCore * core	192:28:5362:5372	4256154	0	True				
ANR	4256218	ParameterType	RCore *		4256154	0					
ANR	4256219	Identifier	core		4256154	1					
ANR	4256220	Parameter	int count	192:41:5375:5383	4256154	1	True				
ANR	4256221	ParameterType	int		4256154	0					
ANR	4256222	Identifier	count		4256154	1					
ANR	4256223	Parameter	const char * line	192:52:5386:5401	4256154	2	True				
ANR	4256224	ParameterType	const char *		4256154	0					
ANR	4256225	Identifier	line		4256154	1					
ANR	4256226	CFGEntryNode	ENTRY		4256154		True				
ANR	4256227	CFGExitNode	EXIT		4256154		True				
ANR	4256228	Symbol	core		4256154						
ANR	4256229	Symbol	core -> log		4256154						
ANR	4256230	Symbol	expr2cmd		4256154						
ANR	4256231	Symbol	line		4256154						
ANR	4256232	Symbol	count		4256154						
ANR	4256233	Symbol	* core		4256154						
ANR	4256234	Symbol	* line		4256154						
ANR	4256235	Symbol	cmd		4256154						
ANR	4256236	Function	log_callback_all	204:0:5580:5704							
ANR	4256237	FunctionDef	"log_callback_all (RCore * log , int count , const char * line)"		4256236	0					
ANR	4256238	CompoundStatement		204:70:5650:5704	4256236	0					
ANR	4256239	ExpressionStatement	"r_cons_printf ( ""%d %s\\n"" , count , line )"	205:1:5653:5691	4256236	0	True				
ANR	4256240	CallExpression	"r_cons_printf ( ""%d %s\\n"" , count , line )"		4256236	0					
ANR	4256241	Callee	r_cons_printf		4256236	0					
ANR	4256242	Identifier	r_cons_printf		4256236	0					
ANR	4256243	ArgumentList	"""%d %s\\n"""		4256236	1					
ANR	4256244	Argument	"""%d %s\\n"""		4256236	0					
ANR	4256245	PrimaryExpression	"""%d %s\\n"""		4256236	0					
ANR	4256246	Argument	count		4256236	1					
ANR	4256247	Identifier	count		4256236	0					
ANR	4256248	Argument	line		4256236	2					
ANR	4256249	Identifier	line		4256236	0					
ANR	4256250	ReturnStatement	return 0 ;	206:1:5694:5702	4256236	1	True				
ANR	4256251	PrimaryExpression	0		4256236	0					
ANR	4256252	ReturnType	static int		4256236	1					
ANR	4256253	Identifier	log_callback_all		4256236	2					
ANR	4256254	ParameterList	"RCore * log , int count , const char * line"		4256236	3					
ANR	4256255	Parameter	RCore * log	204:29:5609:5618	4256236	0	True				
ANR	4256256	ParameterType	RCore *		4256236	0					
ANR	4256257	Identifier	log		4256236	1					
ANR	4256258	Parameter	int count	204:41:5621:5629	4256236	1	True				
ANR	4256259	ParameterType	int		4256236	0					
ANR	4256260	Identifier	count		4256236	1					
ANR	4256261	Parameter	const char * line	204:52:5632:5647	4256236	2	True				
ANR	4256262	ParameterType	const char *		4256236	0					
ANR	4256263	Identifier	line		4256236	1					
ANR	4256264	CFGEntryNode	ENTRY		4256236		True				
ANR	4256265	CFGExitNode	EXIT		4256236		True				
ANR	4256266	Symbol	log		4256236						
ANR	4256267	Symbol	line		4256236						
ANR	4256268	Symbol	count		4256236						
ANR	4256269	Function	cmd_log	209:0:5707:8186							
ANR	4256270	FunctionDef	"cmd_log (void * data , const char * input)"		4256269	0					
ANR	4256271	CompoundStatement		209:50:5757:8186	4256269	0					
ANR	4256272	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	210:1:5760:5788	4256269	0	True				
ANR	4256273	IdentifierDecl	* core = ( RCore * ) data		4256269	0					
ANR	4256274	IdentifierDeclType	RCore *		4256269	0					
ANR	4256275	Identifier	core		4256269	1					
ANR	4256276	AssignmentExpression	* core = ( RCore * ) data		4256269	2		=			
ANR	4256277	Identifier	core		4256269	0					
ANR	4256278	CastExpression	( RCore * ) data		4256269	1					
ANR	4256279	CastTarget	RCore *		4256269	0					
ANR	4256280	Identifier	data		4256269	1					
ANR	4256281	IdentifierDeclStatement	"const char * arg , * input2 ;"	211:1:5791:5815	4256269	1	True				
ANR	4256282	IdentifierDecl	* arg		4256269	0					
ANR	4256283	IdentifierDeclType	const char *		4256269	0					
ANR	4256284	Identifier	arg		4256269	1					
ANR	4256285	IdentifierDecl	* input2		4256269	1					
ANR	4256286	IdentifierDeclType	const char *		4256269	0					
ANR	4256287	Identifier	input2		4256269	1					
ANR	4256288	IdentifierDeclStatement	"int n , n2 ;"	212:1:5818:5827	4256269	2	True				
ANR	4256289	IdentifierDecl	n		4256269	0					
ANR	4256290	IdentifierDeclType	int		4256269	0					
ANR	4256291	Identifier	n		4256269	1					
ANR	4256292	IdentifierDecl	n2		4256269	1					
ANR	4256293	IdentifierDeclType	int		4256269	0					
ANR	4256294	Identifier	n2		4256269	1					
ANR	4256295	IfStatement	if ( ! input )		4256269	3					
ANR	4256296	Condition	! input	214:5:5835:5840	4256269	0	True				
ANR	4256297	UnaryOperationExpression	! input		4256269	0					
ANR	4256298	UnaryOperator	!		4256269	0					
ANR	4256299	Identifier	input		4256269	1					
ANR	4256300	CompoundStatement		6:13:85:85	4256269	1					
ANR	4256301	ReturnStatement	return 1 ;	215:2:5847:5855	4256269	0	True				
ANR	4256302	PrimaryExpression	1		4256269	0					
ANR	4256303	ExpressionStatement	"input2 = ( input && * input ) ? input + 1 : """""	218:1:5862:5903	4256269	4	True				
ANR	4256304	AssignmentExpression	"input2 = ( input && * input ) ? input + 1 : """""		4256269	0		=			
ANR	4256305	Identifier	input2		4256269	0					
ANR	4256306	ConditionalExpression	"( input && * input ) ? input + 1 : """""		4256269	1					
ANR	4256307	Condition	input && * input		4256269	0					
ANR	4256308	AndExpression	input && * input		4256269	0		&&			
ANR	4256309	Identifier	input		4256269	0					
ANR	4256310	UnaryOperationExpression	* input		4256269	1					
ANR	4256311	UnaryOperator	*		4256269	0					
ANR	4256312	Identifier	input		4256269	1					
ANR	4256313	AdditiveExpression	input + 1		4256269	1		+			
ANR	4256314	Identifier	input		4256269	0					
ANR	4256315	PrimaryExpression	1		4256269	1					
ANR	4256316	PrimaryExpression	""""""		4256269	2					
ANR	4256317	ExpressionStatement	"arg = strchr ( input2 , ' ' )"	219:1:5906:5932	4256269	5	True				
ANR	4256318	AssignmentExpression	"arg = strchr ( input2 , ' ' )"		4256269	0		=			
ANR	4256319	Identifier	arg		4256269	0					
ANR	4256320	CallExpression	"strchr ( input2 , ' ' )"		4256269	1					
ANR	4256321	Callee	strchr		4256269	0					
ANR	4256322	Identifier	strchr		4256269	0					
ANR	4256323	ArgumentList	input2		4256269	1					
ANR	4256324	Argument	input2		4256269	0					
ANR	4256325	Identifier	input2		4256269	0					
ANR	4256326	Argument	' '		4256269	1					
ANR	4256327	PrimaryExpression	' '		4256269	0					
ANR	4256328	ExpressionStatement	n = atoi ( input2 )	220:1:5935:5952	4256269	6	True				
ANR	4256329	AssignmentExpression	n = atoi ( input2 )		4256269	0		=			
ANR	4256330	Identifier	n		4256269	0					
ANR	4256331	CallExpression	atoi ( input2 )		4256269	1					
ANR	4256332	Callee	atoi		4256269	0					
ANR	4256333	Identifier	atoi		4256269	0					
ANR	4256334	ArgumentList	input2		4256269	1					
ANR	4256335	Argument	input2		4256269	0					
ANR	4256336	Identifier	input2		4256269	0					
ANR	4256337	ExpressionStatement	n2 = arg ? atoi ( arg + 1 ) : 0	221:1:5955:5982	4256269	7	True				
ANR	4256338	AssignmentExpression	n2 = arg ? atoi ( arg + 1 ) : 0		4256269	0		=			
ANR	4256339	Identifier	n2		4256269	0					
ANR	4256340	ConditionalExpression	arg ? atoi ( arg + 1 ) : 0		4256269	1					
ANR	4256341	Condition	arg		4256269	0					
ANR	4256342	Identifier	arg		4256269	0					
ANR	4256343	CallExpression	atoi ( arg + 1 )		4256269	1					
ANR	4256344	Callee	atoi		4256269	0					
ANR	4256345	Identifier	atoi		4256269	0					
ANR	4256346	ArgumentList	arg + 1		4256269	1					
ANR	4256347	Argument	arg + 1		4256269	0					
ANR	4256348	AdditiveExpression	arg + 1		4256269	0		+			
ANR	4256349	Identifier	arg		4256269	0					
ANR	4256350	PrimaryExpression	1		4256269	1					
ANR	4256351	PrimaryExpression	0		4256269	2					
ANR	4256352	SwitchStatement	switch ( * input )		4256269	8					
ANR	4256353	Condition	* input	223:9:5994:5999	4256269	0	True				
ANR	4256354	UnaryOperationExpression	* input		4256269	0					
ANR	4256355	UnaryOperator	*		4256269	0					
ANR	4256356	Identifier	input		4256269	1					
ANR	4256357	CompoundStatement		15:17:244:244	4256269	1					
ANR	4256358	Label	case 'e' :	224:1:6005:6013	4256269	0	True				
ANR	4256359	CompoundStatement		18:3:284:313	4256269	1					
ANR	4256360	IdentifierDeclStatement	"char * p = strchr ( input , ' ' ) ;"	226:3:6042:6071	4256269	0	True				
ANR	4256361	IdentifierDecl	"* p = strchr ( input , ' ' )"		4256269	0					
ANR	4256362	IdentifierDeclType	char *		4256269	0					
ANR	4256363	Identifier	p		4256269	1					
ANR	4256364	AssignmentExpression	"* p = strchr ( input , ' ' )"		4256269	2		=			
ANR	4256365	Identifier	p		4256269	0					
ANR	4256366	CallExpression	"strchr ( input , ' ' )"		4256269	1					
ANR	4256367	Callee	strchr		4256269	0					
ANR	4256368	Identifier	strchr		4256269	0					
ANR	4256369	ArgumentList	input		4256269	1					
ANR	4256370	Argument	input		4256269	0					
ANR	4256371	Identifier	input		4256269	0					
ANR	4256372	Argument	' '		4256269	1					
ANR	4256373	PrimaryExpression	' '		4256269	0					
ANR	4256374	IfStatement	if ( p )		4256269	1					
ANR	4256375	Condition	p	227:7:6080:6080	4256269	0	True				
ANR	4256376	Identifier	p		4256269	0					
ANR	4256377	CompoundStatement		20:4:331:367	4256269	1					
ANR	4256378	IdentifierDeclStatement	"char * b = r_file_slurp ( p + 1 , NULL ) ;"	228:4:6089:6125	4256269	0	True				
ANR	4256379	IdentifierDecl	"* b = r_file_slurp ( p + 1 , NULL )"		4256269	0					
ANR	4256380	IdentifierDeclType	char *		4256269	0					
ANR	4256381	Identifier	b		4256269	1					
ANR	4256382	AssignmentExpression	"* b = r_file_slurp ( p + 1 , NULL )"		4256269	2		=			
ANR	4256383	Identifier	b		4256269	0					
ANR	4256384	CallExpression	"r_file_slurp ( p + 1 , NULL )"		4256269	1					
ANR	4256385	Callee	r_file_slurp		4256269	0					
ANR	4256386	Identifier	r_file_slurp		4256269	0					
ANR	4256387	ArgumentList	p + 1		4256269	1					
ANR	4256388	Argument	p + 1		4256269	0					
ANR	4256389	AdditiveExpression	p + 1		4256269	0		+			
ANR	4256390	Identifier	p		4256269	0					
ANR	4256391	PrimaryExpression	1		4256269	1					
ANR	4256392	Argument	NULL		4256269	1					
ANR	4256393	Identifier	NULL		4256269	0					
ANR	4256394	IfStatement	if ( b )		4256269	1					
ANR	4256395	Condition	b	229:8:6135:6135	4256269	0	True				
ANR	4256396	Identifier	b		4256269	0					
ANR	4256397	CompoundStatement		21:11:380:380	4256269	1					
ANR	4256398	ExpressionStatement	"r_cons_less_str ( b , NULL )"	230:5:6145:6170	4256269	0	True				
ANR	4256399	CallExpression	"r_cons_less_str ( b , NULL )"		4256269	0					
ANR	4256400	Callee	r_cons_less_str		4256269	0					
ANR	4256401	Identifier	r_cons_less_str		4256269	0					
ANR	4256402	ArgumentList	b		4256269	1					
ANR	4256403	Argument	b		4256269	0					
ANR	4256404	Identifier	b		4256269	0					
ANR	4256405	Argument	NULL		4256269	1					
ANR	4256406	Identifier	NULL		4256269	0					
ANR	4256407	ExpressionStatement	free ( b )	231:5:6177:6185	4256269	1	True				
ANR	4256408	CallExpression	free ( b )		4256269	0					
ANR	4256409	Callee	free		4256269	0					
ANR	4256410	Identifier	free		4256269	0					
ANR	4256411	ArgumentList	b		4256269	1					
ANR	4256412	Argument	b		4256269	0					
ANR	4256413	Identifier	b		4256269	0					
ANR	4256414	ElseStatement	else		4256269	0					
ANR	4256415	CompoundStatement		24:11:440:440	4256269	0					
ANR	4256416	ExpressionStatement	"eprintf ( ""File not found\\n"" )"	233:5:6205:6233	4256269	0	True				
ANR	4256417	CallExpression	"eprintf ( ""File not found\\n"" )"		4256269	0					
ANR	4256418	Callee	eprintf		4256269	0					
ANR	4256419	Identifier	eprintf		4256269	0					
ANR	4256420	ArgumentList	"""File not found\\n"""		4256269	1					
ANR	4256421	Argument	"""File not found\\n"""		4256269	0					
ANR	4256422	PrimaryExpression	"""File not found\\n"""		4256269	0					
ANR	4256423	ElseStatement	else		4256269	0					
ANR	4256424	CompoundStatement		27:10:493:493	4256269	0					
ANR	4256425	ExpressionStatement	"eprintf ( ""Usage: less [filename]\\n"" )"	236:4:6257:6293	4256269	0	True				
ANR	4256426	CallExpression	"eprintf ( ""Usage: less [filename]\\n"" )"		4256269	0					
ANR	4256427	Callee	eprintf		4256269	0					
ANR	4256428	Identifier	eprintf		4256269	0					
ANR	4256429	ArgumentList	"""Usage: less [filename]\\n"""		4256269	1					
ANR	4256430	Argument	"""Usage: less [filename]\\n"""		4256269	0					
ANR	4256431	PrimaryExpression	"""Usage: less [filename]\\n"""		4256269	0					
ANR	4256432	BreakStatement	break ;	239:2:6306:6311	4256269	2	True				
ANR	4256433	Label	case 'l' :	240:1:6314:6322	4256269	3	True				
ANR	4256434	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , core -> log -> last - 1 )"	241:2:6334:6377	4256269	4	True				
ANR	4256435	CallExpression	"r_cons_printf ( ""%d\\n"" , core -> log -> last - 1 )"		4256269	0					
ANR	4256436	Callee	r_cons_printf		4256269	0					
ANR	4256437	Identifier	r_cons_printf		4256269	0					
ANR	4256438	ArgumentList	"""%d\\n"""		4256269	1					
ANR	4256439	Argument	"""%d\\n"""		4256269	0					
ANR	4256440	PrimaryExpression	"""%d\\n"""		4256269	0					
ANR	4256441	Argument	core -> log -> last - 1		4256269	1					
ANR	4256442	AdditiveExpression	core -> log -> last - 1		4256269	0		-			
ANR	4256443	PtrMemberAccess	core -> log -> last		4256269	0					
ANR	4256444	PtrMemberAccess	core -> log		4256269	0					
ANR	4256445	Identifier	core		4256269	0					
ANR	4256446	Identifier	log		4256269	1					
ANR	4256447	Identifier	last		4256269	1					
ANR	4256448	PrimaryExpression	1		4256269	1					
ANR	4256449	BreakStatement	break ;	242:2:6381:6386	4256269	5	True				
ANR	4256450	Label	case '-' :	243:1:6389:6397	4256269	6	True				
ANR	4256451	ExpressionStatement	"r_core_log_del ( core , n )"	244:2:6410:6434	4256269	7	True				
ANR	4256452	CallExpression	"r_core_log_del ( core , n )"		4256269	0					
ANR	4256453	Callee	r_core_log_del		4256269	0					
ANR	4256454	Identifier	r_core_log_del		4256269	0					
ANR	4256455	ArgumentList	core		4256269	1					
ANR	4256456	Argument	core		4256269	0					
ANR	4256457	Identifier	core		4256269	0					
ANR	4256458	Argument	n		4256269	1					
ANR	4256459	Identifier	n		4256269	0					
ANR	4256460	BreakStatement	break ;	245:2:6438:6443	4256269	8	True				
ANR	4256461	Label	case '?' :	246:1:6446:6454	4256269	9	True				
ANR	4256462	ExpressionStatement	"r_core_cmd_help ( core , help_msg_T )"	247:2:6466:6500	4256269	10	True				
ANR	4256463	CallExpression	"r_core_cmd_help ( core , help_msg_T )"		4256269	0					
ANR	4256464	Callee	r_core_cmd_help		4256269	0					
ANR	4256465	Identifier	r_core_cmd_help		4256269	0					
ANR	4256466	ArgumentList	core		4256269	1					
ANR	4256467	Argument	core		4256269	0					
ANR	4256468	Identifier	core		4256269	0					
ANR	4256469	Argument	help_msg_T		4256269	1					
ANR	4256470	Identifier	help_msg_T		4256269	0					
ANR	4256471	BreakStatement	break ;	248:2:6504:6509	4256269	11	True				
ANR	4256472	Label	case 'T' :	249:1:6512:6520	4256269	12	True				
ANR	4256473	IfStatement	if ( r_cons_is_interactive ( ) )		4256269	13					
ANR	4256474	Condition	r_cons_is_interactive ( )	250:6:6548:6571	4256269	0	True				
ANR	4256475	CallExpression	r_cons_is_interactive ( )		4256269	0					
ANR	4256476	Callee	r_cons_is_interactive		4256269	0					
ANR	4256477	Identifier	r_cons_is_interactive		4256269	0					
ANR	4256478	ArgumentList			4256269	1					
ANR	4256479	CompoundStatement		42:32:816:816	4256269	1					
ANR	4256480	ExpressionStatement	textlog_chat ( core )	251:3:6579:6598	4256269	0	True				
ANR	4256481	CallExpression	textlog_chat ( core )		4256269	0					
ANR	4256482	Callee	textlog_chat		4256269	0					
ANR	4256483	Identifier	textlog_chat		4256269	0					
ANR	4256484	ArgumentList	core		4256269	1					
ANR	4256485	Argument	core		4256269	0					
ANR	4256486	Identifier	core		4256269	0					
ANR	4256487	ElseStatement	else		4256269	0					
ANR	4256488	CompoundStatement		44:9:851:851	4256269	0					
ANR	4256489	ExpressionStatement	"eprintf ( ""Only available when the screen is interactive\\n"" )"	253:3:6614:6673	4256269	0	True				
ANR	4256490	CallExpression	"eprintf ( ""Only available when the screen is interactive\\n"" )"		4256269	0					
ANR	4256491	Callee	eprintf		4256269	0					
ANR	4256492	Identifier	eprintf		4256269	0					
ANR	4256493	ArgumentList	"""Only available when the screen is interactive\\n"""		4256269	1					
ANR	4256494	Argument	"""Only available when the screen is interactive\\n"""		4256269	0					
ANR	4256495	PrimaryExpression	"""Only available when the screen is interactive\\n"""		4256269	0					
ANR	4256496	BreakStatement	break ;	255:2:6681:6686	4256269	14	True				
ANR	4256497	Label	case '=' :	256:1:6689:6697	4256269	15	True				
ANR	4256498	IfStatement	if ( input [ 1 ] == '&' )		4256269	16					
ANR	4256499	Condition	input [ 1 ] == '&'	257:6:6713:6727	4256269	0	True				
ANR	4256500	EqualityExpression	input [ 1 ] == '&'		4256269	0		==			
ANR	4256501	ArrayIndexing	input [ 1 ]		4256269	0					
ANR	4256502	Identifier	input		4256269	0					
ANR	4256503	PrimaryExpression	1		4256269	1					
ANR	4256504	PrimaryExpression	'&'		4256269	1					
ANR	4256505	CompoundStatement		49:23:972:972	4256269	1					
ANR	4256506	IfStatement	if ( input [ 2 ] == '&' )		4256269	0					
ANR	4256507	Condition	input [ 2 ] == '&'	258:7:6749:6763	4256269	0	True				
ANR	4256508	EqualityExpression	input [ 2 ] == '&'		4256269	0		==			
ANR	4256509	ArrayIndexing	input [ 2 ]		4256269	0					
ANR	4256510	Identifier	input		4256269	0					
ANR	4256511	PrimaryExpression	2		4256269	1					
ANR	4256512	PrimaryExpression	'&'		4256269	1					
ANR	4256513	CompoundStatement		50:24:1008:1008	4256269	1					
ANR	4256514	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	259:4:6782:6812	4256269	0	True				
ANR	4256515	CallExpression	"r_cons_break_push ( NULL , NULL )"		4256269	0					
ANR	4256516	Callee	r_cons_break_push		4256269	0					
ANR	4256517	Identifier	r_cons_break_push		4256269	0					
ANR	4256518	ArgumentList	NULL		4256269	1					
ANR	4256519	Argument	NULL		4256269	0					
ANR	4256520	Identifier	NULL		4256269	0					
ANR	4256521	Argument	NULL		4256269	1					
ANR	4256522	Identifier	NULL		4256269	0					
ANR	4256523	WhileStatement	while ( ! r_cons_is_breaked ( ) )		4256269	1					
ANR	4256524	Condition	! r_cons_is_breaked ( )	260:11:6825:6845	4256269	0	True				
ANR	4256525	UnaryOperationExpression	! r_cons_is_breaked ( )		4256269	0					
ANR	4256526	UnaryOperator	!		4256269	0					
ANR	4256527	CallExpression	r_cons_is_breaked ( )		4256269	1					
ANR	4256528	Callee	r_cons_is_breaked		4256269	0					
ANR	4256529	Identifier	r_cons_is_breaked		4256269	0					
ANR	4256530	ArgumentList			4256269	1					
ANR	4256531	CompoundStatement		54:5:1128:1160	4256269	1					
ANR	4256532	ExpressionStatement	"r_core_cmd0 ( core , ""T="" )"	261:5:6855:6879	4256269	0	True				
ANR	4256533	CallExpression	"r_core_cmd0 ( core , ""T="" )"		4256269	0					
ANR	4256534	Callee	r_core_cmd0		4256269	0					
ANR	4256535	Identifier	r_core_cmd0		4256269	0					
ANR	4256536	ArgumentList	core		4256269	1					
ANR	4256537	Argument	core		4256269	0					
ANR	4256538	Identifier	core		4256269	0					
ANR	4256539	Argument	"""T="""		4256269	1					
ANR	4256540	PrimaryExpression	"""T="""		4256269	0					
ANR	4256541	IdentifierDeclStatement	void * bed = r_cons_sleep_begin ( ) ;	262:5:6886:6918	4256269	1	True				
ANR	4256542	IdentifierDecl	* bed = r_cons_sleep_begin ( )		4256269	0					
ANR	4256543	IdentifierDeclType	void *		4256269	0					
ANR	4256544	Identifier	bed		4256269	1					
ANR	4256545	AssignmentExpression	* bed = r_cons_sleep_begin ( )		4256269	2		=			
ANR	4256546	Identifier	bed		4256269	0					
ANR	4256547	CallExpression	r_cons_sleep_begin ( )		4256269	1					
ANR	4256548	Callee	r_cons_sleep_begin		4256269	0					
ANR	4256549	Identifier	r_cons_sleep_begin		4256269	0					
ANR	4256550	ArgumentList			4256269	1					
ANR	4256551	ExpressionStatement	r_sys_sleep ( 1 )	263:5:6925:6940	4256269	2	True				
ANR	4256552	CallExpression	r_sys_sleep ( 1 )		4256269	0					
ANR	4256553	Callee	r_sys_sleep		4256269	0					
ANR	4256554	Identifier	r_sys_sleep		4256269	0					
ANR	4256555	ArgumentList	1		4256269	1					
ANR	4256556	Argument	1		4256269	0					
ANR	4256557	PrimaryExpression	1		4256269	0					
ANR	4256558	ExpressionStatement	r_cons_sleep_end ( bed )	264:5:6947:6969	4256269	3	True				
ANR	4256559	CallExpression	r_cons_sleep_end ( bed )		4256269	0					
ANR	4256560	Callee	r_cons_sleep_end		4256269	0					
ANR	4256561	Identifier	r_cons_sleep_end		4256269	0					
ANR	4256562	ArgumentList	bed		4256269	1					
ANR	4256563	Argument	bed		4256269	0					
ANR	4256564	Identifier	bed		4256269	0					
ANR	4256565	ExpressionStatement	r_cons_break_pop ( )	266:4:6981:7000	4256269	2	True				
ANR	4256566	CallExpression	r_cons_break_pop ( )		4256269	0					
ANR	4256567	Callee	r_cons_break_pop		4256269	0					
ANR	4256568	Identifier	r_cons_break_pop		4256269	0					
ANR	4256569	ArgumentList			4256269	1					
ANR	4256570	ElseStatement	else		4256269	0					
ANR	4256571	CompoundStatement		62:4:1395:1461	4256269	0					
ANR	4256572	ExpressionStatement	"eprintf ( ""Background thread syncing with http.sync started.\\n"" )"	269:4:7084:7147	4256269	0	True				
ANR	4256573	CallExpression	"eprintf ( ""Background thread syncing with http.sync started.\\n"" )"		4256269	0					
ANR	4256574	Callee	eprintf		4256269	0					
ANR	4256575	Identifier	eprintf		4256269	0					
ANR	4256576	ArgumentList	"""Background thread syncing with http.sync started.\\n"""		4256269	1					
ANR	4256577	Argument	"""Background thread syncing with http.sync started.\\n"""		4256269	0					
ANR	4256578	PrimaryExpression	"""Background thread syncing with http.sync started.\\n"""		4256269	0					
ANR	4256579	IdentifierDeclStatement	"RCoreTask * task = r_core_task_new ( core , true , ""T=&&"" , NULL , core ) ;"	270:4:7153:7219	4256269	1	True				
ANR	4256580	IdentifierDecl	"* task = r_core_task_new ( core , true , ""T=&&"" , NULL , core )"		4256269	0					
ANR	4256581	IdentifierDeclType	RCoreTask *		4256269	0					
ANR	4256582	Identifier	task		4256269	1					
ANR	4256583	AssignmentExpression	"* task = r_core_task_new ( core , true , ""T=&&"" , NULL , core )"		4256269	2		=			
ANR	4256584	Identifier	task		4256269	0					
ANR	4256585	CallExpression	"r_core_task_new ( core , true , ""T=&&"" , NULL , core )"		4256269	1					
ANR	4256586	Callee	r_core_task_new		4256269	0					
ANR	4256587	Identifier	r_core_task_new		4256269	0					
ANR	4256588	ArgumentList	core		4256269	1					
ANR	4256589	Argument	core		4256269	0					
ANR	4256590	Identifier	core		4256269	0					
ANR	4256591	Argument	true		4256269	1					
ANR	4256592	Identifier	true		4256269	0					
ANR	4256593	Argument	"""T=&&"""		4256269	2					
ANR	4256594	PrimaryExpression	"""T=&&"""		4256269	0					
ANR	4256595	Argument	NULL		4256269	3					
ANR	4256596	Identifier	NULL		4256269	0					
ANR	4256597	Argument	core		4256269	4					
ANR	4256598	Identifier	core		4256269	0					
ANR	4256599	ExpressionStatement	"r_core_task_enqueue ( core , task )"	271:4:7225:7257	4256269	2	True				
ANR	4256600	CallExpression	"r_core_task_enqueue ( core , task )"		4256269	0					
ANR	4256601	Callee	r_core_task_enqueue		4256269	0					
ANR	4256602	Identifier	r_core_task_enqueue		4256269	0					
ANR	4256603	ArgumentList	core		4256269	1					
ANR	4256604	Argument	core		4256269	0					
ANR	4256605	Identifier	core		4256269	0					
ANR	4256606	Argument	task		4256269	1					
ANR	4256607	Identifier	task		4256269	0					
ANR	4256608	ElseStatement	else		4256269	0					
ANR	4256609	CompoundStatement		65:9:1515:1515	4256269	0					
ANR	4256610	IfStatement	if ( atoi ( input + 1 ) > 0 || ( input [ 1 ] == '0' ) )		4256269	0					
ANR	4256611	Condition	atoi ( input + 1 ) > 0 || ( input [ 1 ] == '0' )	274:7:7282:7322	4256269	0	True				
ANR	4256612	OrExpression	atoi ( input + 1 ) > 0 || ( input [ 1 ] == '0' )		4256269	0		||			
ANR	4256613	RelationalExpression	atoi ( input + 1 ) > 0		4256269	0		>			
ANR	4256614	CallExpression	atoi ( input + 1 )		4256269	0					
ANR	4256615	Callee	atoi		4256269	0					
ANR	4256616	Identifier	atoi		4256269	0					
ANR	4256617	ArgumentList	input + 1		4256269	1					
ANR	4256618	Argument	input + 1		4256269	0					
ANR	4256619	AdditiveExpression	input + 1		4256269	0		+			
ANR	4256620	Identifier	input		4256269	0					
ANR	4256621	PrimaryExpression	1		4256269	1					
ANR	4256622	PrimaryExpression	0		4256269	1					
ANR	4256623	EqualityExpression	input [ 1 ] == '0'		4256269	1		==			
ANR	4256624	ArrayIndexing	input [ 1 ]		4256269	0					
ANR	4256625	Identifier	input		4256269	0					
ANR	4256626	PrimaryExpression	1		4256269	1					
ANR	4256627	PrimaryExpression	'0'		4256269	1					
ANR	4256628	CompoundStatement		66:50:1567:1567	4256269	1					
ANR	4256629	ExpressionStatement	core -> sync_index = 0	275:4:7331:7351	4256269	0	True				
ANR	4256630	AssignmentExpression	core -> sync_index = 0		4256269	0		=			
ANR	4256631	PtrMemberAccess	core -> sync_index		4256269	0					
ANR	4256632	Identifier	core		4256269	0					
ANR	4256633	Identifier	sync_index		4256269	1					
ANR	4256634	PrimaryExpression	0		4256269	1					
ANR	4256635	ElseStatement	else		4256269	0					
ANR	4256636	CompoundStatement		71:4:1707:1758	4256269	0					
ANR	4256637	IdentifierDeclStatement	RCoreLogCallback log_callback = ( input [ 1 ] == '*' ) ? log_callback_all : log_callback_r2 ;	277:4:7369:7459	4256269	0	True				
ANR	4256638	IdentifierDecl	log_callback = ( input [ 1 ] == '*' ) ? log_callback_all : log_callback_r2		4256269	0					
ANR	4256639	IdentifierDeclType	RCoreLogCallback		4256269	0					
ANR	4256640	Identifier	log_callback		4256269	1					
ANR	4256641	AssignmentExpression	log_callback = ( input [ 1 ] == '*' ) ? log_callback_all : log_callback_r2		4256269	2		=			
ANR	4256642	Identifier	log_callback		4256269	0					
ANR	4256643	ConditionalExpression	( input [ 1 ] == '*' ) ? log_callback_all : log_callback_r2		4256269	1					
ANR	4256644	Condition	input [ 1 ] == '*'		4256269	0					
ANR	4256645	EqualityExpression	input [ 1 ] == '*'		4256269	0		==			
ANR	4256646	ArrayIndexing	input [ 1 ]		4256269	0					
ANR	4256647	Identifier	input		4256269	0					
ANR	4256648	PrimaryExpression	1		4256269	1					
ANR	4256649	PrimaryExpression	'*'		4256269	1					
ANR	4256650	Identifier	log_callback_all		4256269	1					
ANR	4256651	Identifier	log_callback_r2		4256269	2					
ANR	4256652	IdentifierDeclStatement	"char * res = r_core_log_get ( core , core -> sync_index ) ;"	279:4:7465:7516	4256269	1	True				
ANR	4256653	IdentifierDecl	"* res = r_core_log_get ( core , core -> sync_index )"		4256269	0					
ANR	4256654	IdentifierDeclType	char *		4256269	0					
ANR	4256655	Identifier	res		4256269	1					
ANR	4256656	AssignmentExpression	"* res = r_core_log_get ( core , core -> sync_index )"		4256269	2		=			
ANR	4256657	Identifier	res		4256269	0					
ANR	4256658	CallExpression	"r_core_log_get ( core , core -> sync_index )"		4256269	1					
ANR	4256659	Callee	r_core_log_get		4256269	0					
ANR	4256660	Identifier	r_core_log_get		4256269	0					
ANR	4256661	ArgumentList	core		4256269	1					
ANR	4256662	Argument	core		4256269	0					
ANR	4256663	Identifier	core		4256269	0					
ANR	4256664	Argument	core -> sync_index		4256269	1					
ANR	4256665	PtrMemberAccess	core -> sync_index		4256269	0					
ANR	4256666	Identifier	core		4256269	0					
ANR	4256667	Identifier	sync_index		4256269	1					
ANR	4256668	IfStatement	if ( res )		4256269	2					
ANR	4256669	Condition	res	280:8:7526:7528	4256269	0	True				
ANR	4256670	Identifier	res		4256269	0					
ANR	4256671	CompoundStatement		73:5:1780:1817	4256269	1					
ANR	4256672	IdentifierDeclStatement	int idx = getIndexFromLogString ( res ) ;	281:5:7538:7575	4256269	0	True				
ANR	4256673	IdentifierDecl	idx = getIndexFromLogString ( res )		4256269	0					
ANR	4256674	IdentifierDeclType	int		4256269	0					
ANR	4256675	Identifier	idx		4256269	1					
ANR	4256676	AssignmentExpression	idx = getIndexFromLogString ( res )		4256269	2		=			
ANR	4256677	Identifier	idx		4256269	0					
ANR	4256678	CallExpression	getIndexFromLogString ( res )		4256269	1					
ANR	4256679	Callee	getIndexFromLogString		4256269	0					
ANR	4256680	Identifier	getIndexFromLogString		4256269	0					
ANR	4256681	ArgumentList	res		4256269	1					
ANR	4256682	Argument	res		4256269	0					
ANR	4256683	Identifier	res		4256269	0					
ANR	4256684	IfStatement	if ( idx != - 1 )		4256269	1					
ANR	4256685	Condition	idx != - 1	282:9:7586:7594	4256269	0	True				
ANR	4256686	EqualityExpression	idx != - 1		4256269	0		!=			
ANR	4256687	Identifier	idx		4256269	0					
ANR	4256688	UnaryOperationExpression	- 1		4256269	1					
ANR	4256689	UnaryOperator	-		4256269	0					
ANR	4256690	PrimaryExpression	1		4256269	1					
ANR	4256691	CompoundStatement		74:20:1839:1839	4256269	1					
ANR	4256692	ExpressionStatement	core -> sync_index = idx + 1	283:6:7605:7631	4256269	0	True				
ANR	4256693	AssignmentExpression	core -> sync_index = idx + 1		4256269	0		=			
ANR	4256694	PtrMemberAccess	core -> sync_index		4256269	0					
ANR	4256695	Identifier	core		4256269	0					
ANR	4256696	Identifier	sync_index		4256269	1					
ANR	4256697	AdditiveExpression	idx + 1		4256269	1		+			
ANR	4256698	Identifier	idx		4256269	0					
ANR	4256699	PrimaryExpression	1		4256269	1					
ANR	4256700	ExpressionStatement	"r_core_log_run ( core , res , log_callback )"	285:5:7645:7685	4256269	2	True				
ANR	4256701	CallExpression	"r_core_log_run ( core , res , log_callback )"		4256269	0					
ANR	4256702	Callee	r_core_log_run		4256269	0					
ANR	4256703	Identifier	r_core_log_run		4256269	0					
ANR	4256704	ArgumentList	core		4256269	1					
ANR	4256705	Argument	core		4256269	0					
ANR	4256706	Identifier	core		4256269	0					
ANR	4256707	Argument	res		4256269	1					
ANR	4256708	Identifier	res		4256269	0					
ANR	4256709	Argument	log_callback		4256269	2					
ANR	4256710	Identifier	log_callback		4256269	0					
ANR	4256711	ExpressionStatement	free ( res )	286:5:7692:7702	4256269	3	True				
ANR	4256712	CallExpression	free ( res )		4256269	0					
ANR	4256713	Callee	free		4256269	0					
ANR	4256714	Identifier	free		4256269	0					
ANR	4256715	ArgumentList	res		4256269	1					
ANR	4256716	Argument	res		4256269	0					
ANR	4256717	Identifier	res		4256269	0					
ANR	4256718	ElseStatement	else		4256269	0					
ANR	4256719	CompoundStatement		79:11:1957:1957	4256269	0					
ANR	4256720	ExpressionStatement	"r_cons_printf ( ""Please check e http.sync\\n"" )"	288:5:7722:7766	4256269	0	True				
ANR	4256721	CallExpression	"r_cons_printf ( ""Please check e http.sync\\n"" )"		4256269	0					
ANR	4256722	Callee	r_cons_printf		4256269	0					
ANR	4256723	Identifier	r_cons_printf		4256269	0					
ANR	4256724	ArgumentList	"""Please check e http.sync\\n"""		4256269	1					
ANR	4256725	Argument	"""Please check e http.sync\\n"""		4256269	0					
ANR	4256726	PrimaryExpression	"""Please check e http.sync\\n"""		4256269	0					
ANR	4256727	BreakStatement	break ;	292:2:7785:7790	4256269	17	True				
ANR	4256728	Label	case ' ' :	293:1:7793:7801	4256269	18	True				
ANR	4256729	IfStatement	if ( n > 0 || * input == '0' )		4256269	19					
ANR	4256730	Condition	n > 0 || * input == '0'	294:6:7817:7838	4256269	0	True				
ANR	4256731	OrExpression	n > 0 || * input == '0'		4256269	0		||			
ANR	4256732	RelationalExpression	n > 0		4256269	0		>			
ANR	4256733	Identifier	n		4256269	0					
ANR	4256734	PrimaryExpression	0		4256269	1					
ANR	4256735	EqualityExpression	* input == '0'		4256269	1		==			
ANR	4256736	UnaryOperationExpression	* input		4256269	0					
ANR	4256737	UnaryOperator	*		4256269	0					
ANR	4256738	Identifier	input		4256269	1					
ANR	4256739	PrimaryExpression	'0'		4256269	1					
ANR	4256740	CompoundStatement		86:30:2083:2083	4256269	1					
ANR	4256741	ExpressionStatement	"r_core_log_list ( core , n , n2 , * input )"	295:3:7846:7883	4256269	0	True				
ANR	4256742	CallExpression	"r_core_log_list ( core , n , n2 , * input )"		4256269	0					
ANR	4256743	Callee	r_core_log_list		4256269	0					
ANR	4256744	Identifier	r_core_log_list		4256269	0					
ANR	4256745	ArgumentList	core		4256269	1					
ANR	4256746	Argument	core		4256269	0					
ANR	4256747	Identifier	core		4256269	0					
ANR	4256748	Argument	n		4256269	1					
ANR	4256749	Identifier	n		4256269	0					
ANR	4256750	Argument	n2		4256269	2					
ANR	4256751	Identifier	n2		4256269	0					
ANR	4256752	Argument	* input		4256269	3					
ANR	4256753	UnaryOperationExpression	* input		4256269	0					
ANR	4256754	UnaryOperator	*		4256269	0					
ANR	4256755	Identifier	input		4256269	1					
ANR	4256756	ElseStatement	else		4256269	0					
ANR	4256757	CompoundStatement		88:9:2136:2136	4256269	0					
ANR	4256758	ExpressionStatement	"r_core_log_add ( core , input + 1 )"	297:3:7899:7931	4256269	0	True				
ANR	4256759	CallExpression	"r_core_log_add ( core , input + 1 )"		4256269	0					
ANR	4256760	Callee	r_core_log_add		4256269	0					
ANR	4256761	Identifier	r_core_log_add		4256269	0					
ANR	4256762	ArgumentList	core		4256269	1					
ANR	4256763	Argument	core		4256269	0					
ANR	4256764	Identifier	core		4256269	0					
ANR	4256765	Argument	input + 1		4256269	1					
ANR	4256766	AdditiveExpression	input + 1		4256269	0		+			
ANR	4256767	Identifier	input		4256269	0					
ANR	4256768	PrimaryExpression	1		4256269	1					
ANR	4256769	BreakStatement	break ;	299:2:7939:7944	4256269	20	True				
ANR	4256770	Label	case 'm' :	300:1:7947:7955	4256269	21	True				
ANR	4256771	IfStatement	if ( n > 0 )		4256269	22					
ANR	4256772	Condition	n > 0	301:6:7971:7975	4256269	0	True				
ANR	4256773	RelationalExpression	n > 0		4256269	0		>			
ANR	4256774	Identifier	n		4256269	0					
ANR	4256775	PrimaryExpression	0		4256269	1					
ANR	4256776	CompoundStatement		93:13:2220:2220	4256269	1					
ANR	4256777	ExpressionStatement	"r_core_log_list ( core , n , 1 , 't' )"	302:3:7983:8016	4256269	0	True				
ANR	4256778	CallExpression	"r_core_log_list ( core , n , 1 , 't' )"		4256269	0					
ANR	4256779	Callee	r_core_log_list		4256269	0					
ANR	4256780	Identifier	r_core_log_list		4256269	0					
ANR	4256781	ArgumentList	core		4256269	1					
ANR	4256782	Argument	core		4256269	0					
ANR	4256783	Identifier	core		4256269	0					
ANR	4256784	Argument	n		4256269	1					
ANR	4256785	Identifier	n		4256269	0					
ANR	4256786	Argument	1		4256269	2					
ANR	4256787	PrimaryExpression	1		4256269	0					
ANR	4256788	Argument	't'		4256269	3					
ANR	4256789	PrimaryExpression	't'		4256269	0					
ANR	4256790	ElseStatement	else		4256269	0					
ANR	4256791	CompoundStatement		95:9:2269:2269	4256269	0					
ANR	4256792	ExpressionStatement	"r_core_log_list ( core , n , 0 , 't' )"	304:3:8032:8065	4256269	0	True				
ANR	4256793	CallExpression	"r_core_log_list ( core , n , 0 , 't' )"		4256269	0					
ANR	4256794	Callee	r_core_log_list		4256269	0					
ANR	4256795	Identifier	r_core_log_list		4256269	0					
ANR	4256796	ArgumentList	core		4256269	1					
ANR	4256797	Argument	core		4256269	0					
ANR	4256798	Identifier	core		4256269	0					
ANR	4256799	Argument	n		4256269	1					
ANR	4256800	Identifier	n		4256269	0					
ANR	4256801	Argument	0		4256269	2					
ANR	4256802	PrimaryExpression	0		4256269	0					
ANR	4256803	Argument	't'		4256269	3					
ANR	4256804	PrimaryExpression	't'		4256269	0					
ANR	4256805	BreakStatement	break ;	306:2:8073:8078	4256269	23	True				
ANR	4256806	Label	case 'j' :	307:1:8081:8089	4256269	24	True				
ANR	4256807	Label	case '*' :	308:1:8100:8108	4256269	25	True				
ANR	4256808	Label	case '\\0' :	309:1:8111:8120	4256269	26	True				
ANR	4256809	ExpressionStatement	"r_core_log_list ( core , n , n2 , * input )"	310:2:8124:8161	4256269	27	True				
ANR	4256810	CallExpression	"r_core_log_list ( core , n , n2 , * input )"		4256269	0					
ANR	4256811	Callee	r_core_log_list		4256269	0					
ANR	4256812	Identifier	r_core_log_list		4256269	0					
ANR	4256813	ArgumentList	core		4256269	1					
ANR	4256814	Argument	core		4256269	0					
ANR	4256815	Identifier	core		4256269	0					
ANR	4256816	Argument	n		4256269	1					
ANR	4256817	Identifier	n		4256269	0					
ANR	4256818	Argument	n2		4256269	2					
ANR	4256819	Identifier	n2		4256269	0					
ANR	4256820	Argument	* input		4256269	3					
ANR	4256821	UnaryOperationExpression	* input		4256269	0					
ANR	4256822	UnaryOperator	*		4256269	0					
ANR	4256823	Identifier	input		4256269	1					
ANR	4256824	BreakStatement	break ;	311:2:8165:8170	4256269	28	True				
ANR	4256825	ReturnStatement	return 0 ;	313:1:8176:8184	4256269	9	True				
ANR	4256826	PrimaryExpression	0		4256269	0					
ANR	4256827	ReturnType	static int		4256269	1					
ANR	4256828	Identifier	cmd_log		4256269	2					
ANR	4256829	ParameterList	"void * data , const char * input"		4256269	3					
ANR	4256830	Parameter	void * data	209:19:5726:5735	4256269	0	True				
ANR	4256831	ParameterType	void *		4256269	0					
ANR	4256832	Identifier	data		4256269	1					
ANR	4256833	Parameter	const char * input	209:31:5738:5754	4256269	1	True				
ANR	4256834	ParameterType	const char *		4256269	0					
ANR	4256835	Identifier	input		4256269	1					
ANR	4256836	CFGEntryNode	ENTRY		4256269		True				
ANR	4256837	CFGExitNode	EXIT		4256269		True				
ANR	4256838	Symbol	bed		4256269						
ANR	4256839	Symbol	data		4256269						
ANR	4256840	Symbol	n2		4256269						
ANR	4256841	Symbol	input2		4256269						
ANR	4256842	Symbol	r_core_task_new		4256269						
ANR	4256843	Symbol	* input		4256269						
ANR	4256844	Symbol	* core		4256269						
ANR	4256845	Symbol	strchr		4256269						
ANR	4256846	Symbol	r_core_log_get		4256269						
ANR	4256847	Symbol	core -> sync_index		4256269						
ANR	4256848	Symbol	core -> log		4256269						
ANR	4256849	Symbol	r_cons_is_breaked		4256269						
ANR	4256850	Symbol	arg		4256269						
ANR	4256851	Symbol	core -> log -> last		4256269						
ANR	4256852	Symbol	* core -> log		4256269						
ANR	4256853	Symbol	* * core		4256269						
ANR	4256854	Symbol	atoi		4256269						
ANR	4256855	Symbol	res		4256269						
ANR	4256856	Symbol	b		4256269						
ANR	4256857	Symbol	r_file_slurp		4256269						
ANR	4256858	Symbol	r_cons_is_interactive		4256269						
ANR	4256859	Symbol	NULL		4256269						
ANR	4256860	Symbol	log_callback		4256269						
ANR	4256861	Symbol	n		4256269						
ANR	4256862	Symbol	log_callback_all		4256269						
ANR	4256863	Symbol	p		4256269						
ANR	4256864	Symbol	log_callback_r2		4256269						
ANR	4256865	Symbol	getIndexFromLogString		4256269						
ANR	4256866	Symbol	input		4256269						
ANR	4256867	Symbol	core		4256269						
ANR	4256868	Symbol	task		4256269						
ANR	4256869	Symbol	help_msg_T		4256269						
ANR	4256870	Symbol	true		4256269						
ANR	4256871	Symbol	r_cons_sleep_begin		4256269						
ANR	4256872	Symbol	idx		4256269						
ANR	4256873	Function	cmd_plugins	316:0:8189:9876							
ANR	4256874	FunctionDef	"cmd_plugins (void * data , const char * input)"		4256873	0					
ANR	4256875	CompoundStatement		316:54:8243:9876	4256873	0					
ANR	4256876	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	317:1:8246:8274	4256873	0	True				
ANR	4256877	IdentifierDecl	* core = ( RCore * ) data		4256873	0					
ANR	4256878	IdentifierDeclType	RCore *		4256873	0					
ANR	4256879	Identifier	core		4256873	1					
ANR	4256880	AssignmentExpression	* core = ( RCore * ) data		4256873	2		=			
ANR	4256881	Identifier	core		4256873	0					
ANR	4256882	CastExpression	( RCore * ) data		4256873	1					
ANR	4256883	CastTarget	RCore *		4256873	0					
ANR	4256884	Identifier	data		4256873	1					
ANR	4256885	SwitchStatement	switch ( input [ 0 ] )		4256873	1					
ANR	4256886	Condition	input [ 0 ]	318:9:8285:8292	4256873	0	True				
ANR	4256887	ArrayIndexing	input [ 0 ]		4256873	0					
ANR	4256888	Identifier	input		4256873	0					
ANR	4256889	PrimaryExpression	0		4256873	1					
ANR	4256890	CompoundStatement		3:19:51:51	4256873	1					
ANR	4256891	Label	case 0 :	319:1:8298:8304	4256873	0	True				
ANR	4256892	ExpressionStatement	"r_core_cmd_help ( core , help_msg_L )"	320:2:8308:8342	4256873	1	True				
ANR	4256893	CallExpression	"r_core_cmd_help ( core , help_msg_L )"		4256873	0					
ANR	4256894	Callee	r_core_cmd_help		4256873	0					
ANR	4256895	Identifier	r_core_cmd_help		4256873	0					
ANR	4256896	ArgumentList	core		4256873	1					
ANR	4256897	Argument	core		4256873	0					
ANR	4256898	Identifier	core		4256873	0					
ANR	4256899	Argument	help_msg_L		4256873	1					
ANR	4256900	Identifier	help_msg_L		4256873	0					
ANR	4256901	BreakStatement	break ;	322:2:8384:8389	4256873	2	True				
ANR	4256902	Label	case '-' :	323:1:8392:8400	4256873	3	True				
ANR	4256903	ExpressionStatement	"r_lib_close ( core -> lib , r_str_trim_ro ( input + 1 ) )"	324:2:8404:8454	4256873	4	True				
ANR	4256904	CallExpression	"r_lib_close ( core -> lib , r_str_trim_ro ( input + 1 ) )"		4256873	0					
ANR	4256905	Callee	r_lib_close		4256873	0					
ANR	4256906	Identifier	r_lib_close		4256873	0					
ANR	4256907	ArgumentList	core -> lib		4256873	1					
ANR	4256908	Argument	core -> lib		4256873	0					
ANR	4256909	PtrMemberAccess	core -> lib		4256873	0					
ANR	4256910	Identifier	core		4256873	0					
ANR	4256911	Identifier	lib		4256873	1					
ANR	4256912	Argument	r_str_trim_ro ( input + 1 )		4256873	1					
ANR	4256913	CallExpression	r_str_trim_ro ( input + 1 )		4256873	0					
ANR	4256914	Callee	r_str_trim_ro		4256873	0					
ANR	4256915	Identifier	r_str_trim_ro		4256873	0					
ANR	4256916	ArgumentList	input + 1		4256873	1					
ANR	4256917	Argument	input + 1		4256873	0					
ANR	4256918	AdditiveExpression	input + 1		4256873	0		+			
ANR	4256919	Identifier	input		4256873	0					
ANR	4256920	PrimaryExpression	1		4256873	1					
ANR	4256921	BreakStatement	break ;	325:2:8458:8463	4256873	5	True				
ANR	4256922	Label	case ' ' :	326:1:8466:8474	4256873	6	True				
ANR	4256923	ExpressionStatement	"r_lib_open ( core -> lib , r_str_trim_ro ( input + 1 ) )"	327:2:8478:8527	4256873	7	True				
ANR	4256924	CallExpression	"r_lib_open ( core -> lib , r_str_trim_ro ( input + 1 ) )"		4256873	0					
ANR	4256925	Callee	r_lib_open		4256873	0					
ANR	4256926	Identifier	r_lib_open		4256873	0					
ANR	4256927	ArgumentList	core -> lib		4256873	1					
ANR	4256928	Argument	core -> lib		4256873	0					
ANR	4256929	PtrMemberAccess	core -> lib		4256873	0					
ANR	4256930	Identifier	core		4256873	0					
ANR	4256931	Identifier	lib		4256873	1					
ANR	4256932	Argument	r_str_trim_ro ( input + 1 )		4256873	1					
ANR	4256933	CallExpression	r_str_trim_ro ( input + 1 )		4256873	0					
ANR	4256934	Callee	r_str_trim_ro		4256873	0					
ANR	4256935	Identifier	r_str_trim_ro		4256873	0					
ANR	4256936	ArgumentList	input + 1		4256873	1					
ANR	4256937	Argument	input + 1		4256873	0					
ANR	4256938	AdditiveExpression	input + 1		4256873	0		+			
ANR	4256939	Identifier	input		4256873	0					
ANR	4256940	PrimaryExpression	1		4256873	1					
ANR	4256941	BreakStatement	break ;	328:2:8531:8536	4256873	8	True				
ANR	4256942	Label	case '?' :	329:1:8539:8547	4256873	9	True				
ANR	4256943	ExpressionStatement	"r_core_cmd_help ( core , help_msg_L )"	330:2:8551:8585	4256873	10	True				
ANR	4256944	CallExpression	"r_core_cmd_help ( core , help_msg_L )"		4256873	0					
ANR	4256945	Callee	r_core_cmd_help		4256873	0					
ANR	4256946	Identifier	r_core_cmd_help		4256873	0					
ANR	4256947	ArgumentList	core		4256873	1					
ANR	4256948	Argument	core		4256873	0					
ANR	4256949	Identifier	core		4256873	0					
ANR	4256950	Argument	help_msg_L		4256873	1					
ANR	4256951	Identifier	help_msg_L		4256873	0					
ANR	4256952	BreakStatement	break ;	331:2:8589:8594	4256873	11	True				
ANR	4256953	Label	case 'm' :	332:1:8597:8605	4256873	12	True				
ANR	4256954	ExpressionStatement	"r_core_cmdf ( core , ""mL%s"" , input + 1 )"	333:2:8617:8654	4256873	13	True				
ANR	4256955	CallExpression	"r_core_cmdf ( core , ""mL%s"" , input + 1 )"		4256873	0					
ANR	4256956	Callee	r_core_cmdf		4256873	0					
ANR	4256957	Identifier	r_core_cmdf		4256873	0					
ANR	4256958	ArgumentList	core		4256873	1					
ANR	4256959	Argument	core		4256873	0					
ANR	4256960	Identifier	core		4256873	0					
ANR	4256961	Argument	"""mL%s"""		4256873	1					
ANR	4256962	PrimaryExpression	"""mL%s"""		4256873	0					
ANR	4256963	Argument	input + 1		4256873	2					
ANR	4256964	AdditiveExpression	input + 1		4256873	0		+			
ANR	4256965	Identifier	input		4256873	0					
ANR	4256966	PrimaryExpression	1		4256873	1					
ANR	4256967	BreakStatement	break ;	334:2:8658:8663	4256873	14	True				
ANR	4256968	Label	case 'd' :	335:1:8666:8674	4256873	15	True				
ANR	4256969	ExpressionStatement	"r_core_cmdf ( core , ""dL%s"" , input + 1 )"	336:2:8686:8723	4256873	16	True				
ANR	4256970	CallExpression	"r_core_cmdf ( core , ""dL%s"" , input + 1 )"		4256873	0					
ANR	4256971	Callee	r_core_cmdf		4256873	0					
ANR	4256972	Identifier	r_core_cmdf		4256873	0					
ANR	4256973	ArgumentList	core		4256873	1					
ANR	4256974	Argument	core		4256873	0					
ANR	4256975	Identifier	core		4256873	0					
ANR	4256976	Argument	"""dL%s"""		4256873	1					
ANR	4256977	PrimaryExpression	"""dL%s"""		4256873	0					
ANR	4256978	Argument	input + 1		4256873	2					
ANR	4256979	AdditiveExpression	input + 1		4256873	0		+			
ANR	4256980	Identifier	input		4256873	0					
ANR	4256981	PrimaryExpression	1		4256873	1					
ANR	4256982	BreakStatement	break ;	337:2:8727:8732	4256873	17	True				
ANR	4256983	Label	case 'h' :	338:1:8735:8743	4256873	18	True				
ANR	4256984	ExpressionStatement	"r_core_cmd0 ( core , ""ph"" )"	339:2:8755:8779	4256873	19	True				
ANR	4256985	CallExpression	"r_core_cmd0 ( core , ""ph"" )"		4256873	0					
ANR	4256986	Callee	r_core_cmd0		4256873	0					
ANR	4256987	Identifier	r_core_cmd0		4256873	0					
ANR	4256988	ArgumentList	core		4256873	1					
ANR	4256989	Argument	core		4256873	0					
ANR	4256990	Identifier	core		4256873	0					
ANR	4256991	Argument	"""ph"""		4256873	1					
ANR	4256992	PrimaryExpression	"""ph"""		4256873	0					
ANR	4256993	BreakStatement	break ;	340:2:8813:8818	4256873	20	True				
ANR	4256994	Label	case 'a' :	341:1:8821:8829	4256873	21	True				
ANR	4256995	ExpressionStatement	"r_core_cmd0 ( core , ""e asm.arch=??"" )"	342:2:8841:8876	4256873	22	True				
ANR	4256996	CallExpression	"r_core_cmd0 ( core , ""e asm.arch=??"" )"		4256873	0					
ANR	4256997	Callee	r_core_cmd0		4256873	0					
ANR	4256998	Identifier	r_core_cmd0		4256873	0					
ANR	4256999	ArgumentList	core		4256873	1					
ANR	4257000	Argument	core		4256873	0					
ANR	4257001	Identifier	core		4256873	0					
ANR	4257002	Argument	"""e asm.arch=??"""		4256873	1					
ANR	4257003	PrimaryExpression	"""e asm.arch=??"""		4256873	0					
ANR	4257004	BreakStatement	break ;	343:2:8880:8885	4256873	23	True				
ANR	4257005	Label	case 'D' :	344:1:8888:8896	4256873	24	True				
ANR	4257006	IfStatement	if ( input [ 1 ] == ' ' )		4256873	25					
ANR	4257007	Condition	input [ 1 ] == ' '	345:6:8912:8926	4256873	0	True				
ANR	4257008	EqualityExpression	input [ 1 ] == ' '		4256873	0		==			
ANR	4257009	ArrayIndexing	input [ 1 ]		4256873	0					
ANR	4257010	Identifier	input		4256873	0					
ANR	4257011	PrimaryExpression	1		4256873	1					
ANR	4257012	PrimaryExpression	' '		4256873	1					
ANR	4257013	CompoundStatement		30:23:685:685	4256873	1					
ANR	4257014	ExpressionStatement	"r_core_cmdf ( core , ""e cmd.pdc=%s"" , r_str_trim_ro ( input + 2 ) )"	346:3:8934:8995	4256873	0	True				
ANR	4257015	CallExpression	"r_core_cmdf ( core , ""e cmd.pdc=%s"" , r_str_trim_ro ( input + 2 ) )"		4256873	0					
ANR	4257016	Callee	r_core_cmdf		4256873	0					
ANR	4257017	Identifier	r_core_cmdf		4256873	0					
ANR	4257018	ArgumentList	core		4256873	1					
ANR	4257019	Argument	core		4256873	0					
ANR	4257020	Identifier	core		4256873	0					
ANR	4257021	Argument	"""e cmd.pdc=%s"""		4256873	1					
ANR	4257022	PrimaryExpression	"""e cmd.pdc=%s"""		4256873	0					
ANR	4257023	Argument	r_str_trim_ro ( input + 2 )		4256873	2					
ANR	4257024	CallExpression	r_str_trim_ro ( input + 2 )		4256873	0					
ANR	4257025	Callee	r_str_trim_ro		4256873	0					
ANR	4257026	Identifier	r_str_trim_ro		4256873	0					
ANR	4257027	ArgumentList	input + 2		4256873	1					
ANR	4257028	Argument	input + 2		4256873	0					
ANR	4257029	AdditiveExpression	input + 2		4256873	0		+			
ANR	4257030	Identifier	input		4256873	0					
ANR	4257031	PrimaryExpression	2		4256873	1					
ANR	4257032	ElseStatement	else		4256873	0					
ANR	4257033	CompoundStatement		32:9:762:762	4256873	0					
ANR	4257034	ExpressionStatement	"r_core_cmd0 ( core , ""e cmd.pdc=?"" )"	348:3:9011:9044	4256873	0	True				
ANR	4257035	CallExpression	"r_core_cmd0 ( core , ""e cmd.pdc=?"" )"		4256873	0					
ANR	4257036	Callee	r_core_cmd0		4256873	0					
ANR	4257037	Identifier	r_core_cmd0		4256873	0					
ANR	4257038	ArgumentList	core		4256873	1					
ANR	4257039	Argument	core		4256873	0					
ANR	4257040	Identifier	core		4256873	0					
ANR	4257041	Argument	"""e cmd.pdc=?"""		4256873	1					
ANR	4257042	PrimaryExpression	"""e cmd.pdc=?"""		4256873	0					
ANR	4257043	BreakStatement	break ;	350:2:9052:9057	4256873	26	True				
ANR	4257044	Label	case 'l' :	351:1:9060:9068	4256873	27	True				
ANR	4257045	ExpressionStatement	"r_core_cmd0 ( core , ""#!"" )"	352:2:9080:9104	4256873	28	True				
ANR	4257046	CallExpression	"r_core_cmd0 ( core , ""#!"" )"		4256873	0					
ANR	4257047	Callee	r_core_cmd0		4256873	0					
ANR	4257048	Identifier	r_core_cmd0		4256873	0					
ANR	4257049	ArgumentList	core		4256873	1					
ANR	4257050	Argument	core		4256873	0					
ANR	4257051	Identifier	core		4256873	0					
ANR	4257052	Argument	"""#!"""		4256873	1					
ANR	4257053	PrimaryExpression	"""#!"""		4256873	0					
ANR	4257054	BreakStatement	break ;	353:2:9108:9113	4256873	29	True				
ANR	4257055	Label	case 'L' :	354:1:9116:9124	4256873	30	True				
ANR	4257056	ExpressionStatement	screenlock ( core )	355:2:9136:9153	4256873	31	True				
ANR	4257057	CallExpression	screenlock ( core )		4256873	0					
ANR	4257058	Callee	screenlock		4256873	0					
ANR	4257059	Identifier	screenlock		4256873	0					
ANR	4257060	ArgumentList	core		4256873	1					
ANR	4257061	Argument	core		4256873	0					
ANR	4257062	Identifier	core		4256873	0					
ANR	4257063	BreakStatement	break ;	356:2:9157:9162	4256873	32	True				
ANR	4257064	Label	case 'o' :	357:1:9165:9173	4256873	33	True				
ANR	4257065	Label	case 'i' :	358:1:9184:9192	4256873	34	True				
ANR	4257066	ExpressionStatement	"r_core_cmdf ( core , ""%cL"" , input [ 0 ] )"	359:2:9204:9239	4256873	35	True				
ANR	4257067	CallExpression	"r_core_cmdf ( core , ""%cL"" , input [ 0 ] )"		4256873	0					
ANR	4257068	Callee	r_core_cmdf		4256873	0					
ANR	4257069	Identifier	r_core_cmdf		4256873	0					
ANR	4257070	ArgumentList	core		4256873	1					
ANR	4257071	Argument	core		4256873	0					
ANR	4257072	Identifier	core		4256873	0					
ANR	4257073	Argument	"""%cL"""		4256873	1					
ANR	4257074	PrimaryExpression	"""%cL"""		4256873	0					
ANR	4257075	Argument	input [ 0 ]		4256873	2					
ANR	4257076	ArrayIndexing	input [ 0 ]		4256873	0					
ANR	4257077	Identifier	input		4256873	0					
ANR	4257078	PrimaryExpression	0		4256873	1					
ANR	4257079	BreakStatement	break ;	360:2:9243:9248	4256873	36	True				
ANR	4257080	Label	case 'c' :	361:1:9251:9259	4256873	37	True				
ANR	4257081	CompoundStatement		48:2:1048:1063	4256873	38					
ANR	4257082	IdentifierDeclStatement	RListIter * iter ;	362:2:9273:9288	4256873	0	True				
ANR	4257083	IdentifierDecl	* iter		4256873	0					
ANR	4257084	IdentifierDeclType	RListIter *		4256873	0					
ANR	4257085	Identifier	iter		4256873	1					
ANR	4257086	IdentifierDeclStatement	RCorePlugin * cp ;	363:2:9292:9307	4256873	1	True				
ANR	4257087	IdentifierDecl	* cp		4256873	0					
ANR	4257088	IdentifierDeclType	RCorePlugin *		4256873	0					
ANR	4257089	Identifier	cp		4256873	1					
ANR	4257090	SwitchStatement	switch ( input [ 1 ] )		4256873	2					
ANR	4257091	Condition	input [ 1 ]	364:10:9319:9326	4256873	0	True				
ANR	4257092	ArrayIndexing	input [ 1 ]		4256873	0					
ANR	4257093	Identifier	input		4256873	0					
ANR	4257094	PrimaryExpression	1		4256873	1					
ANR	4257095	CompoundStatement		49:20:1085:1085	4256873	1					
ANR	4257096	Label	case 'j' :	365:2:9333:9341	4256873	0	True				
ANR	4257097	CompoundStatement		52:3:1128:1156	4256873	1					
ANR	4257098	ExpressionStatement	"r_cons_printf ( ""["" )"	366:3:9348:9367	4256873	0	True				
ANR	4257099	CallExpression	"r_cons_printf ( ""["" )"		4256873	0					
ANR	4257100	Callee	r_cons_printf		4256873	0					
ANR	4257101	Identifier	r_cons_printf		4256873	0					
ANR	4257102	ArgumentList	"""["""		4256873	1					
ANR	4257103	Argument	"""["""		4256873	0					
ANR	4257104	PrimaryExpression	"""["""		4256873	0					
ANR	4257105	IdentifierDeclStatement	bool is_first_element = true ;	367:3:9372:9400	4256873	1	True				
ANR	4257106	IdentifierDecl	is_first_element = true		4256873	0					
ANR	4257107	IdentifierDeclType	bool		4256873	0					
ANR	4257108	Identifier	is_first_element		4256873	1					
ANR	4257109	AssignmentExpression	is_first_element = true		4256873	2		=			
ANR	4257110	Identifier	true		4256873	0					
ANR	4257111	Identifier	true		4256873	1					
ANR	4257112	Statement	r_list_foreach	368:3:9405:9418	4256873	2	True				
ANR	4257113	Statement	(	368:18:9420:9420	4256873	3	True				
ANR	4257114	Statement	core	368:19:9421:9424	4256873	4	True				
ANR	4257115	Statement	->	368:23:9425:9426	4256873	5	True				
ANR	4257116	Statement	rcmd	368:25:9427:9430	4256873	6	True				
ANR	4257117	Statement	->	368:29:9431:9432	4256873	7	True				
ANR	4257118	Statement	plist	368:31:9433:9437	4256873	8	True				
ANR	4257119	Statement	","	368:36:9438:9438	4256873	9	True				
ANR	4257120	Statement	iter	368:38:9440:9443	4256873	10	True				
ANR	4257121	Statement	","	368:42:9444:9444	4256873	11	True				
ANR	4257122	Statement	cp	368:44:9446:9447	4256873	12	True				
ANR	4257123	Statement	)	368:46:9448:9448	4256873	13	True				
ANR	4257124	CompoundStatement		53:48:1206:1206	4256873	14					
ANR	4257125	ExpressionStatement	"r_cons_printf ( ""%s{\\""Name\\"":\\""%s\\"",\\""Description\\"":\\""%s\\""}"" , is_first_element ? """" : "","" , cp -> name , cp -> desc )"	369:4:9456:9569	4256873	0	True				
ANR	4257126	CallExpression	"r_cons_printf ( ""%s{\\""Name\\"":\\""%s\\"",\\""Description\\"":\\""%s\\""}"" , is_first_element ? """" : "","" , cp -> name , cp -> desc )"		4256873	0					
ANR	4257127	Callee	r_cons_printf		4256873	0					
ANR	4257128	Identifier	r_cons_printf		4256873	0					
ANR	4257129	ArgumentList	"""%s{\\""Name\\"":\\""%s\\"",\\""Description\\"":\\""%s\\""}"""		4256873	1					
ANR	4257130	Argument	"""%s{\\""Name\\"":\\""%s\\"",\\""Description\\"":\\""%s\\""}"""		4256873	0					
ANR	4257131	PrimaryExpression	"""%s{\\""Name\\"":\\""%s\\"",\\""Description\\"":\\""%s\\""}"""		4256873	0					
ANR	4257132	Argument	"is_first_element ? """" : "","""		4256873	1					
ANR	4257133	ConditionalExpression	"is_first_element ? """" : "","""		4256873	0					
ANR	4257134	Condition	is_first_element		4256873	0					
ANR	4257135	Identifier	is_first_element		4256873	0					
ANR	4257136	PrimaryExpression	""""""		4256873	1					
ANR	4257137	PrimaryExpression	""","""		4256873	2					
ANR	4257138	Argument	cp -> name		4256873	2					
ANR	4257139	PtrMemberAccess	cp -> name		4256873	0					
ANR	4257140	Identifier	cp		4256873	0					
ANR	4257141	Identifier	name		4256873	1					
ANR	4257142	Argument	cp -> desc		4256873	3					
ANR	4257143	PtrMemberAccess	cp -> desc		4256873	0					
ANR	4257144	Identifier	cp		4256873	0					
ANR	4257145	Identifier	desc		4256873	1					
ANR	4257146	ExpressionStatement	is_first_element = false	371:4:9575:9599	4256873	1	True				
ANR	4257147	AssignmentExpression	is_first_element = false		4256873	0		=			
ANR	4257148	Identifier	is_first_element		4256873	0					
ANR	4257149	Identifier	false		4256873	1					
ANR	4257150	ExpressionStatement	"r_cons_printf ( ""]\\n"" )"	373:3:9609:9630	4256873	15	True				
ANR	4257151	CallExpression	"r_cons_printf ( ""]\\n"" )"		4256873	0					
ANR	4257152	Callee	r_cons_printf		4256873	0					
ANR	4257153	Identifier	r_cons_printf		4256873	0					
ANR	4257154	ArgumentList	"""]\\n"""		4256873	1					
ANR	4257155	Argument	"""]\\n"""		4256873	0					
ANR	4257156	PrimaryExpression	"""]\\n"""		4256873	0					
ANR	4257157	BreakStatement	break ;	374:3:9635:9640	4256873	16	True				
ANR	4257158	Label	case 0 :	376:2:9649:9655	4256873	2	True				
ANR	4257159	ExpressionStatement	r_lib_list ( core -> lib )	377:3:9660:9682	4256873	3	True				
ANR	4257160	CallExpression	r_lib_list ( core -> lib )		4256873	0					
ANR	4257161	Callee	r_lib_list		4256873	0					
ANR	4257162	Identifier	r_lib_list		4256873	0					
ANR	4257163	ArgumentList	core -> lib		4256873	1					
ANR	4257164	Argument	core -> lib		4256873	0					
ANR	4257165	PtrMemberAccess	core -> lib		4256873	0					
ANR	4257166	Identifier	core		4256873	0					
ANR	4257167	Identifier	lib		4256873	1					
ANR	4257168	Statement	r_list_foreach	378:3:9687:9700	4256873	4	True				
ANR	4257169	Statement	(	378:18:9702:9702	4256873	5	True				
ANR	4257170	Statement	core	378:19:9703:9706	4256873	6	True				
ANR	4257171	Statement	->	378:23:9707:9708	4256873	7	True				
ANR	4257172	Statement	rcmd	378:25:9709:9712	4256873	8	True				
ANR	4257173	Statement	->	378:29:9713:9714	4256873	9	True				
ANR	4257174	Statement	plist	378:31:9715:9719	4256873	10	True				
ANR	4257175	Statement	","	378:36:9720:9720	4256873	11	True				
ANR	4257176	Statement	iter	378:38:9722:9725	4256873	12	True				
ANR	4257177	Statement	","	378:42:9726:9726	4256873	13	True				
ANR	4257178	Statement	cp	378:44:9728:9729	4256873	14	True				
ANR	4257179	Statement	)	378:46:9730:9730	4256873	15	True				
ANR	4257180	CompoundStatement		63:48:1488:1488	4256873	16					
ANR	4257181	ExpressionStatement	"r_cons_printf ( ""%s: %s\\n"" , cp -> name , cp -> desc )"	379:4:9738:9784	4256873	0	True				
ANR	4257182	CallExpression	"r_cons_printf ( ""%s: %s\\n"" , cp -> name , cp -> desc )"		4256873	0					
ANR	4257183	Callee	r_cons_printf		4256873	0					
ANR	4257184	Identifier	r_cons_printf		4256873	0					
ANR	4257185	ArgumentList	"""%s: %s\\n"""		4256873	1					
ANR	4257186	Argument	"""%s: %s\\n"""		4256873	0					
ANR	4257187	PrimaryExpression	"""%s: %s\\n"""		4256873	0					
ANR	4257188	Argument	cp -> name		4256873	1					
ANR	4257189	PtrMemberAccess	cp -> name		4256873	0					
ANR	4257190	Identifier	cp		4256873	0					
ANR	4257191	Identifier	name		4256873	1					
ANR	4257192	Argument	cp -> desc		4256873	2					
ANR	4257193	PtrMemberAccess	cp -> desc		4256873	0					
ANR	4257194	Identifier	cp		4256873	0					
ANR	4257195	Identifier	desc		4256873	1					
ANR	4257196	BreakStatement	break ;	381:3:9794:9799	4256873	17	True				
ANR	4257197	Label	default :	382:2:9803:9810	4256873	18	True				
ANR	4257198	Identifier	default		4256873	0					
ANR	4257199	ExpressionStatement	"eprintf ( ""oops\\n"" )"	383:3:9815:9833	4256873	19	True				
ANR	4257200	CallExpression	"eprintf ( ""oops\\n"" )"		4256873	0					
ANR	4257201	Callee	eprintf		4256873	0					
ANR	4257202	Identifier	eprintf		4256873	0					
ANR	4257203	ArgumentList	"""oops\\n"""		4256873	1					
ANR	4257204	Argument	"""oops\\n"""		4256873	0					
ANR	4257205	PrimaryExpression	"""oops\\n"""		4256873	0					
ANR	4257206	BreakStatement	break ;	384:3:9838:9843	4256873	20	True				
ANR	4257207	BreakStatement	break ;	387:2:9855:9860	4256873	39	True				
ANR	4257208	ReturnStatement	return 0 ;	389:1:9866:9874	4256873	2	True				
ANR	4257209	PrimaryExpression	0		4256873	0					
ANR	4257210	ReturnType	static int		4256873	1					
ANR	4257211	Identifier	cmd_plugins		4256873	2					
ANR	4257212	ParameterList	"void * data , const char * input"		4256873	3					
ANR	4257213	Parameter	void * data	316:23:8212:8221	4256873	0	True				
ANR	4257214	ParameterType	void *		4256873	0					
ANR	4257215	Identifier	data		4256873	1					
ANR	4257216	Parameter	const char * input	316:35:8224:8240	4256873	1	True				
ANR	4257217	ParameterType	const char *		4256873	0					
ANR	4257218	Identifier	input		4256873	1					
ANR	4257219	CFGEntryNode	ENTRY		4256873		True				
ANR	4257220	CFGExitNode	EXIT		4256873		True				
ANR	4257221	Symbol	data		4256873						
ANR	4257222	Symbol	* input		4256873						
ANR	4257223	Symbol	* core		4256873						
ANR	4257224	Symbol	false		4256873						
ANR	4257225	Symbol	iter		4256873						
ANR	4257226	Symbol	cp		4256873						
ANR	4257227	Symbol	help_msg_L		4256873						
ANR	4257228	Symbol	* cp		4256873						
ANR	4257229	Symbol	input		4256873						
ANR	4257230	Symbol	core		4256873						
ANR	4257231	Symbol	core -> lib		4256873						
ANR	4257232	Symbol	is_first_element		4256873						
ANR	4257233	Symbol	r_str_trim_ro		4256873						
ANR	4257234	Symbol	true		4256873						
ANR	4257235	Symbol	cp -> desc		4256873						
ANR	4257236	Symbol	cp -> name		4256873						
