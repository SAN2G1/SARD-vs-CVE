command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3299731	File	data/converged/CVE-2019-16718~_radare2/libr_asm_arch_ppc_libps_libps.c								
ANR	3299732	DeclStmt									
ANR	3299733	Decl							ps_operand_t	ps_operand_t [ ]	ps_operands_array
ANR	3299734	DeclStmt									
ANR	3299735	Decl							ps_opcode_t	ps_opcode_t [ ]	ps_opcodes_array
ANR	3299736	Function	libps_decode	97:0:7684:9516							
ANR	3299737	FunctionDef	"libps_decode (ut32 data , ppcps_t * ps)"		3299736	0					
ANR	3299738	CompoundStatement		97:42:7726:9516	3299736	0					
ANR	3299739	IdentifierDeclStatement	ut32 op = ( data & OP_MASK ) ;	98:1:7729:7755	3299736	0	True				
ANR	3299740	IdentifierDecl	op = ( data & OP_MASK )		3299736	0					
ANR	3299741	IdentifierDeclType	ut32		3299736	0					
ANR	3299742	Identifier	op		3299736	1					
ANR	3299743	AssignmentExpression	op = ( data & OP_MASK )		3299736	2		=			
ANR	3299744	Identifier	op		3299736	0					
ANR	3299745	BitAndExpression	data & OP_MASK		3299736	1		&			
ANR	3299746	Identifier	data		3299736	0					
ANR	3299747	Identifier	OP_MASK		3299736	1					
ANR	3299748	IfStatement	if ( ( op == OP ( 4 ) ) || ( op == OP ( 56 ) ) || ( op == OP ( 57 ) ) || ( op == OP ( 60 ) ) || ( op == OP ( 61 ) ) )		3299736	1					
ANR	3299749	Condition	( op == OP ( 4 ) ) || ( op == OP ( 56 ) ) || ( op == OP ( 57 ) ) || ( op == OP ( 60 ) ) || ( op == OP ( 61 ) )	100:5:7763:7856	3299736	0	True				
ANR	3299750	OrExpression	( op == OP ( 4 ) ) || ( op == OP ( 56 ) ) || ( op == OP ( 57 ) ) || ( op == OP ( 60 ) ) || ( op == OP ( 61 ) )		3299736	0		||			
ANR	3299751	EqualityExpression	op == OP ( 4 )		3299736	0		==			
ANR	3299752	Identifier	op		3299736	0					
ANR	3299753	CallExpression	OP ( 4 )		3299736	1					
ANR	3299754	Callee	OP		3299736	0					
ANR	3299755	Identifier	OP		3299736	0					
ANR	3299756	ArgumentList	4		3299736	1					
ANR	3299757	Argument	4		3299736	0					
ANR	3299758	PrimaryExpression	4		3299736	0					
ANR	3299759	OrExpression	( op == OP ( 56 ) ) || ( op == OP ( 57 ) ) || ( op == OP ( 60 ) ) || ( op == OP ( 61 ) )		3299736	1		||			
ANR	3299760	EqualityExpression	op == OP ( 56 )		3299736	0		==			
ANR	3299761	Identifier	op		3299736	0					
ANR	3299762	CallExpression	OP ( 56 )		3299736	1					
ANR	3299763	Callee	OP		3299736	0					
ANR	3299764	Identifier	OP		3299736	0					
ANR	3299765	ArgumentList	56		3299736	1					
ANR	3299766	Argument	56		3299736	0					
ANR	3299767	PrimaryExpression	56		3299736	0					
ANR	3299768	OrExpression	( op == OP ( 57 ) ) || ( op == OP ( 60 ) ) || ( op == OP ( 61 ) )		3299736	1		||			
ANR	3299769	EqualityExpression	op == OP ( 57 )		3299736	0		==			
ANR	3299770	Identifier	op		3299736	0					
ANR	3299771	CallExpression	OP ( 57 )		3299736	1					
ANR	3299772	Callee	OP		3299736	0					
ANR	3299773	Identifier	OP		3299736	0					
ANR	3299774	ArgumentList	57		3299736	1					
ANR	3299775	Argument	57		3299736	0					
ANR	3299776	PrimaryExpression	57		3299736	0					
ANR	3299777	OrExpression	( op == OP ( 60 ) ) || ( op == OP ( 61 ) )		3299736	1		||			
ANR	3299778	EqualityExpression	op == OP ( 60 )		3299736	0		==			
ANR	3299779	Identifier	op		3299736	0					
ANR	3299780	CallExpression	OP ( 60 )		3299736	1					
ANR	3299781	Callee	OP		3299736	0					
ANR	3299782	Identifier	OP		3299736	0					
ANR	3299783	ArgumentList	60		3299736	1					
ANR	3299784	Argument	60		3299736	0					
ANR	3299785	PrimaryExpression	60		3299736	0					
ANR	3299786	EqualityExpression	op == OP ( 61 )		3299736	1		==			
ANR	3299787	Identifier	op		3299736	0					
ANR	3299788	CallExpression	OP ( 61 )		3299736	1					
ANR	3299789	Callee	OP		3299736	0					
ANR	3299790	Identifier	OP		3299736	0					
ANR	3299791	ArgumentList	61		3299736	1					
ANR	3299792	Argument	61		3299736	0					
ANR	3299793	PrimaryExpression	61		3299736	0					
ANR	3299794	CompoundStatement		10:2:248:257	3299736	1					
ANR	3299795	IdentifierDeclStatement	ut32 size = sizeof ( ps_opcodes_array ) / sizeof ( ps_opcode_t ) ;	103:2:7863:7923	3299736	0	True				
ANR	3299796	IdentifierDecl	size = sizeof ( ps_opcodes_array ) / sizeof ( ps_opcode_t )		3299736	0					
ANR	3299797	IdentifierDeclType	ut32		3299736	0					
ANR	3299798	Identifier	size		3299736	1					
ANR	3299799	AssignmentExpression	size = sizeof ( ps_opcodes_array ) / sizeof ( ps_opcode_t )		3299736	2		=			
ANR	3299800	Identifier	size		3299736	0					
ANR	3299801	MultiplicativeExpression	sizeof ( ps_opcodes_array ) / sizeof ( ps_opcode_t )		3299736	1		/			
ANR	3299802	SizeofExpression	sizeof ( ps_opcodes_array )		3299736	0					
ANR	3299803	Sizeof	sizeof		3299736	0					
ANR	3299804	SizeofOperand	ps_opcodes_array		3299736	1					
ANR	3299805	SizeofExpression	sizeof ( ps_opcode_t )		3299736	1					
ANR	3299806	Sizeof	sizeof		3299736	0					
ANR	3299807	SizeofOperand	ps_opcode_t		3299736	1					
ANR	3299808	IdentifierDeclStatement	ps_opcode_t * instruction = ps_opcodes_array ;	104:2:7927:7970	3299736	1	True				
ANR	3299809	IdentifierDecl	* instruction = ps_opcodes_array		3299736	0					
ANR	3299810	IdentifierDeclType	ps_opcode_t *		3299736	0					
ANR	3299811	Identifier	instruction		3299736	1					
ANR	3299812	AssignmentExpression	* instruction = ps_opcodes_array		3299736	2		=			
ANR	3299813	Identifier	ps_opcodes_array		3299736	0					
ANR	3299814	Identifier	ps_opcodes_array		3299736	1					
ANR	3299815	IdentifierDeclStatement	"ut32 l , j ;"	106:2:7975:7984	3299736	2	True				
ANR	3299816	IdentifierDecl	l		3299736	0					
ANR	3299817	IdentifierDeclType	ut32		3299736	0					
ANR	3299818	Identifier	l		3299736	1					
ANR	3299819	IdentifierDecl	j		3299736	1					
ANR	3299820	IdentifierDeclType	ut32		3299736	0					
ANR	3299821	Identifier	j		3299736	1					
ANR	3299822	ForStatement	for ( l = 0 ; l < size ; l ++ )		3299736	3					
ANR	3299823	ForInit	l = 0 ;	107:7:7993:7998	3299736	0	True				
ANR	3299824	AssignmentExpression	l = 0		3299736	0		=			
ANR	3299825	Identifier	l		3299736	0					
ANR	3299826	PrimaryExpression	0		3299736	1					
ANR	3299827	Condition	l < size	107:14:8000:8007	3299736	1	True				
ANR	3299828	RelationalExpression	l < size		3299736	0		<			
ANR	3299829	Identifier	l		3299736	0					
ANR	3299830	Identifier	size		3299736	1					
ANR	3299831	PostIncDecOperationExpression	l ++	107:24:8010:8012	3299736	2	True				
ANR	3299832	Identifier	l		3299736	0					
ANR	3299833	IncDec	++		3299736	1					
ANR	3299834	CompoundStatement		11:29:288:288	3299736	3					
ANR	3299835	IfStatement	if ( ( data & instruction -> mask ) == instruction -> opcode )		3299736	0					
ANR	3299836	Condition	( data & instruction -> mask ) == instruction -> opcode	108:7:8024:8072	3299736	0	True				
ANR	3299837	EqualityExpression	( data & instruction -> mask ) == instruction -> opcode		3299736	0		==			
ANR	3299838	BitAndExpression	data & instruction -> mask		3299736	0		&			
ANR	3299839	Identifier	data		3299736	0					
ANR	3299840	PtrMemberAccess	instruction -> mask		3299736	1					
ANR	3299841	Identifier	instruction		3299736	0					
ANR	3299842	Identifier	mask		3299736	1					
ANR	3299843	PtrMemberAccess	instruction -> opcode		3299736	1					
ANR	3299844	Identifier	instruction		3299736	0					
ANR	3299845	Identifier	opcode		3299736	1					
ANR	3299846	CompoundStatement		12:58:348:348	3299736	1					
ANR	3299847	ExpressionStatement	j = 0	109:4:8081:8086	3299736	0	True				
ANR	3299848	AssignmentExpression	j = 0		3299736	0		=			
ANR	3299849	Identifier	j		3299736	0					
ANR	3299850	PrimaryExpression	0		3299736	1					
ANR	3299851	ForStatement	for ( ; j < 6 && instruction -> operands [ j ] != 0 ; j ++ )		3299736	1					
ANR	3299852	Condition	j < 6 && instruction -> operands [ j ] != 0	110:10:8098:8135	3299736	0	True				
ANR	3299853	AndExpression	j < 6 && instruction -> operands [ j ] != 0		3299736	0		&&			
ANR	3299854	RelationalExpression	j < 6		3299736	0		<			
ANR	3299855	Identifier	j		3299736	0					
ANR	3299856	PrimaryExpression	6		3299736	1					
ANR	3299857	EqualityExpression	instruction -> operands [ j ] != 0		3299736	1		!=			
ANR	3299858	ArrayIndexing	instruction -> operands [ j ]		3299736	0					
ANR	3299859	PtrMemberAccess	instruction -> operands		3299736	0					
ANR	3299860	Identifier	instruction		3299736	0					
ANR	3299861	Identifier	operands		3299736	1					
ANR	3299862	Identifier	j		3299736	1					
ANR	3299863	PrimaryExpression	0		3299736	1					
ANR	3299864	PostIncDecOperationExpression	j ++	110:50:8138:8140	3299736	1	True				
ANR	3299865	Identifier	j		3299736	0					
ANR	3299866	IncDec	++		3299736	1					
ANR	3299867	CompoundStatement		18:5:548:618	3299736	2					
ANR	3299868	IdentifierDeclStatement	ppcps_field_t * field = & ps -> operands [ j ] ;	111:5:8150:8189	3299736	0	True				
ANR	3299869	IdentifierDecl	* field = & ps -> operands [ j ]		3299736	0					
ANR	3299870	IdentifierDeclType	ppcps_field_t *		3299736	0					
ANR	3299871	Identifier	field		3299736	1					
ANR	3299872	AssignmentExpression	* field = & ps -> operands [ j ]		3299736	2		=			
ANR	3299873	Identifier	field		3299736	0					
ANR	3299874	UnaryOperationExpression	& ps -> operands [ j ]		3299736	1					
ANR	3299875	UnaryOperator	&		3299736	0					
ANR	3299876	ArrayIndexing	ps -> operands [ j ]		3299736	1					
ANR	3299877	PtrMemberAccess	ps -> operands		3299736	0					
ANR	3299878	Identifier	ps		3299736	0					
ANR	3299879	Identifier	operands		3299736	1					
ANR	3299880	Identifier	j		3299736	1					
ANR	3299881	IdentifierDeclStatement	ps_operand_t * ps_operand = & ps_operands_array [ instruction -> operands [ j ] ] ;	112:5:8196:8267	3299736	1	True				
ANR	3299882	IdentifierDecl	* ps_operand = & ps_operands_array [ instruction -> operands [ j ] ]		3299736	0					
ANR	3299883	IdentifierDeclType	ps_operand_t *		3299736	0					
ANR	3299884	Identifier	ps_operand		3299736	1					
ANR	3299885	AssignmentExpression	* ps_operand = & ps_operands_array [ instruction -> operands [ j ] ]		3299736	2		=			
ANR	3299886	Identifier	ps_operand		3299736	0					
ANR	3299887	UnaryOperationExpression	& ps_operands_array [ instruction -> operands [ j ] ]		3299736	1					
ANR	3299888	UnaryOperator	&		3299736	0					
ANR	3299889	ArrayIndexing	ps_operands_array [ instruction -> operands [ j ] ]		3299736	1					
ANR	3299890	Identifier	ps_operands_array		3299736	0					
ANR	3299891	ArrayIndexing	instruction -> operands [ j ]		3299736	1					
ANR	3299892	PtrMemberAccess	instruction -> operands		3299736	0					
ANR	3299893	Identifier	instruction		3299736	0					
ANR	3299894	Identifier	operands		3299736	1					
ANR	3299895	Identifier	j		3299736	1					
ANR	3299896	IdentifierDeclStatement	int bits = ( data >> ps_operand -> shift ) & ( ( 1 << ps_operand -> bits ) - 1 ) ;	114:5:8275:8345	3299736	2	True				
ANR	3299897	IdentifierDecl	bits = ( data >> ps_operand -> shift ) & ( ( 1 << ps_operand -> bits ) - 1 )		3299736	0					
ANR	3299898	IdentifierDeclType	int		3299736	0					
ANR	3299899	Identifier	bits		3299736	1					
ANR	3299900	AssignmentExpression	bits = ( data >> ps_operand -> shift ) & ( ( 1 << ps_operand -> bits ) - 1 )		3299736	2		=			
ANR	3299901	Identifier	bits		3299736	0					
ANR	3299902	BitAndExpression	( data >> ps_operand -> shift ) & ( ( 1 << ps_operand -> bits ) - 1 )		3299736	1		&			
ANR	3299903	ShiftExpression	data >> ps_operand -> shift		3299736	0		>>			
ANR	3299904	Identifier	data		3299736	0					
ANR	3299905	PtrMemberAccess	ps_operand -> shift		3299736	1					
ANR	3299906	Identifier	ps_operand		3299736	0					
ANR	3299907	Identifier	shift		3299736	1					
ANR	3299908	AdditiveExpression	( 1 << ps_operand -> bits ) - 1		3299736	1		-			
ANR	3299909	ShiftExpression	1 << ps_operand -> bits		3299736	0		<<			
ANR	3299910	PrimaryExpression	1		3299736	0					
ANR	3299911	PtrMemberAccess	ps_operand -> bits		3299736	1					
ANR	3299912	Identifier	ps_operand		3299736	0					
ANR	3299913	Identifier	bits		3299736	1					
ANR	3299914	PrimaryExpression	1		3299736	1					
ANR	3299915	SwitchStatement	switch ( instruction -> operands [ j ] )		3299736	3					
ANR	3299916	Condition	instruction -> operands [ j ]	117:13:8445:8468	3299736	0	True				
ANR	3299917	ArrayIndexing	instruction -> operands [ j ]		3299736	0					
ANR	3299918	PtrMemberAccess	instruction -> operands		3299736	0					
ANR	3299919	Identifier	instruction		3299736	0					
ANR	3299920	Identifier	operands		3299736	1					
ANR	3299921	Identifier	j		3299736	1					
ANR	3299922	CompoundStatement		21:39:744:744	3299736	1					
ANR	3299923	Label	case OP_FA :	118:5:8478:8488	3299736	0	True				
ANR	3299924	Identifier	OP_FA		3299736	0					
ANR	3299925	Label	case OP_FB :	119:5:8495:8505	3299736	1	True				
ANR	3299926	Identifier	OP_FB		3299736	0					
ANR	3299927	Label	case OP_FC :	120:5:8512:8522	3299736	2	True				
ANR	3299928	Identifier	OP_FC		3299736	0					
ANR	3299929	Label	case OP_FD :	121:5:8529:8539	3299736	3	True				
ANR	3299930	Identifier	OP_FD		3299736	0					
ANR	3299931	CompoundStatement		26:5:819:819	3299736	4					
ANR	3299932	ExpressionStatement	field -> type = TYPE_REG	123:6:8554:8576	3299736	0	True				
ANR	3299933	AssignmentExpression	field -> type = TYPE_REG		3299736	0		=			
ANR	3299934	PtrMemberAccess	field -> type		3299736	0					
ANR	3299935	Identifier	field		3299736	0					
ANR	3299936	Identifier	type		3299736	1					
ANR	3299937	Identifier	TYPE_REG		3299736	1					
ANR	3299938	ExpressionStatement	field -> value = bits	124:6:8584:8603	3299736	1	True				
ANR	3299939	AssignmentExpression	field -> value = bits		3299736	0		=			
ANR	3299940	PtrMemberAccess	field -> value		3299736	0					
ANR	3299941	Identifier	field		3299736	0					
ANR	3299942	Identifier	value		3299736	1					
ANR	3299943	Identifier	bits		3299736	1					
ANR	3299944	BreakStatement	break ;	125:6:8611:8616	3299736	2	True				
ANR	3299945	Label	case OP_RA :	128:5:8631:8641	3299736	5	True				
ANR	3299946	Identifier	OP_RA		3299736	0					
ANR	3299947	Label	case OP_RB :	129:5:8648:8658	3299736	6	True				
ANR	3299948	Identifier	OP_RB		3299736	0					
ANR	3299949	CompoundStatement		34:5:938:938	3299736	7					
ANR	3299950	ExpressionStatement	field -> type = TYPE_REG	131:6:8673:8695	3299736	0	True				
ANR	3299951	AssignmentExpression	field -> type = TYPE_REG		3299736	0		=			
ANR	3299952	PtrMemberAccess	field -> type		3299736	0					
ANR	3299953	Identifier	field		3299736	0					
ANR	3299954	Identifier	type		3299736	1					
ANR	3299955	Identifier	TYPE_REG		3299736	1					
ANR	3299956	ExpressionStatement	field -> value = bits	132:6:8703:8722	3299736	1	True				
ANR	3299957	AssignmentExpression	field -> value = bits		3299736	0		=			
ANR	3299958	PtrMemberAccess	field -> value		3299736	0					
ANR	3299959	Identifier	field		3299736	0					
ANR	3299960	Identifier	value		3299736	1					
ANR	3299961	Identifier	bits		3299736	1					
ANR	3299962	BreakStatement	break ;	133:6:8730:8735	3299736	2	True				
ANR	3299963	Label	case OP_crfD :	136:5:8750:8762	3299736	8	True				
ANR	3299964	Identifier	OP_crfD		3299736	0					
ANR	3299965	CompoundStatement		41:5:1042:1042	3299736	9					
ANR	3299966	ExpressionStatement	field -> type = TYPE_CR	138:6:8777:8798	3299736	0	True				
ANR	3299967	AssignmentExpression	field -> type = TYPE_CR		3299736	0		=			
ANR	3299968	PtrMemberAccess	field -> type		3299736	0					
ANR	3299969	Identifier	field		3299736	0					
ANR	3299970	Identifier	type		3299736	1					
ANR	3299971	Identifier	TYPE_CR		3299736	1					
ANR	3299972	ExpressionStatement	field -> value = bits	139:6:8806:8825	3299736	1	True				
ANR	3299973	AssignmentExpression	field -> value = bits		3299736	0		=			
ANR	3299974	PtrMemberAccess	field -> value		3299736	0					
ANR	3299975	Identifier	field		3299736	0					
ANR	3299976	Identifier	value		3299736	1					
ANR	3299977	Identifier	bits		3299736	1					
ANR	3299978	BreakStatement	break ;	140:6:8833:8838	3299736	2	True				
ANR	3299979	Label	case OP_WB :	142:5:8852:8862	3299736	10	True				
ANR	3299980	Identifier	OP_WB		3299736	0					
ANR	3299981	Label	case OP_IB :	143:5:8869:8879	3299736	11	True				
ANR	3299982	Identifier	OP_IB		3299736	0					
ANR	3299983	Label	case OP_WC :	144:5:8886:8896	3299736	12	True				
ANR	3299984	Identifier	OP_WC		3299736	0					
ANR	3299985	Label	case OP_IC :	145:5:8903:8913	3299736	13	True				
ANR	3299986	Identifier	OP_IC		3299736	0					
ANR	3299987	CompoundStatement		50:5:1193:1193	3299736	14					
ANR	3299988	ExpressionStatement	field -> type = TYPE_IMM	147:6:8928:8950	3299736	0	True				
ANR	3299989	AssignmentExpression	field -> type = TYPE_IMM		3299736	0		=			
ANR	3299990	PtrMemberAccess	field -> type		3299736	0					
ANR	3299991	Identifier	field		3299736	0					
ANR	3299992	Identifier	type		3299736	1					
ANR	3299993	Identifier	TYPE_IMM		3299736	1					
ANR	3299994	ExpressionStatement	field -> value = bits	148:6:8958:8977	3299736	1	True				
ANR	3299995	AssignmentExpression	field -> value = bits		3299736	0		=			
ANR	3299996	PtrMemberAccess	field -> value		3299736	0					
ANR	3299997	Identifier	field		3299736	0					
ANR	3299998	Identifier	value		3299736	1					
ANR	3299999	Identifier	bits		3299736	1					
ANR	3300000	BreakStatement	break ;	149:6:8985:8990	3299736	2	True				
ANR	3300001	Label	case OP_DRA :	152:5:9005:9016	3299736	15	True				
ANR	3300002	Identifier	OP_DRA		3299736	0					
ANR	3300003	CompoundStatement		60:6:1385:1406	3299736	16					
ANR	3300004	IdentifierDeclStatement	ut16 imm = ( ut16 ) ( data & 0x7FF ) ;	154:6:9031:9063	3299736	0	True				
ANR	3300005	IdentifierDecl	imm = ( ut16 ) ( data & 0x7FF )		3299736	0					
ANR	3300006	IdentifierDeclType	ut16		3299736	0					
ANR	3300007	Identifier	imm		3299736	1					
ANR	3300008	AssignmentExpression	imm = ( ut16 ) ( data & 0x7FF )		3299736	2		=			
ANR	3300009	Identifier	imm		3299736	0					
ANR	3300010	CastExpression	( ut16 ) ( data & 0x7FF )		3299736	1					
ANR	3300011	CastTarget	ut16		3299736	0					
ANR	3300012	BitAndExpression	data & 0x7FF		3299736	1		&			
ANR	3300013	Identifier	data		3299736	0					
ANR	3300014	PrimaryExpression	0x7FF		3299736	1					
ANR	3300015	IdentifierDeclStatement	ut16 sign = ( ut16 ) ( data & 0x800 ) ;	155:6:9071:9104	3299736	1	True				
ANR	3300016	IdentifierDecl	sign = ( ut16 ) ( data & 0x800 )		3299736	0					
ANR	3300017	IdentifierDeclType	ut16		3299736	0					
ANR	3300018	Identifier	sign		3299736	1					
ANR	3300019	AssignmentExpression	sign = ( ut16 ) ( data & 0x800 )		3299736	2		=			
ANR	3300020	Identifier	sign		3299736	0					
ANR	3300021	CastExpression	( ut16 ) ( data & 0x800 )		3299736	1					
ANR	3300022	CastTarget	ut16		3299736	0					
ANR	3300023	BitAndExpression	data & 0x800		3299736	1		&			
ANR	3300024	Identifier	data		3299736	0					
ANR	3300025	PrimaryExpression	0x800		3299736	1					
ANR	3300026	IdentifierDeclStatement	st16 displacement = 0 ;	156:6:9112:9133	3299736	2	True				
ANR	3300027	IdentifierDecl	displacement = 0		3299736	0					
ANR	3300028	IdentifierDeclType	st16		3299736	0					
ANR	3300029	Identifier	displacement		3299736	1					
ANR	3300030	AssignmentExpression	displacement = 0		3299736	2		=			
ANR	3300031	Identifier	displacement		3299736	0					
ANR	3300032	PrimaryExpression	0		3299736	1					
ANR	3300033	IfStatement	if ( sign == 0 )		3299736	3					
ANR	3300034	Condition	sign == 0	157:10:9145:9153	3299736	0	True				
ANR	3300035	EqualityExpression	sign == 0		3299736	0		==			
ANR	3300036	Identifier	sign		3299736	0					
ANR	3300037	PrimaryExpression	0		3299736	1					
ANR	3300038	CompoundStatement		61:21:1429:1429	3299736	1					
ANR	3300039	ExpressionStatement	displacement = imm	158:7:9165:9183	3299736	0	True				
ANR	3300040	AssignmentExpression	displacement = imm		3299736	0		=			
ANR	3300041	Identifier	displacement		3299736	0					
ANR	3300042	Identifier	imm		3299736	1					
ANR	3300043	ElseStatement	else		3299736	0					
ANR	3300044	CompoundStatement		63:13:1471:1471	3299736	0					
ANR	3300045	ExpressionStatement	displacement = - 1 * imm	160:7:9207:9230	3299736	0	True				
ANR	3300046	AssignmentExpression	displacement = - 1 * imm		3299736	0		=			
ANR	3300047	Identifier	displacement		3299736	0					
ANR	3300048	MultiplicativeExpression	- 1 * imm		3299736	1		*			
ANR	3300049	UnaryOperationExpression	- 1		3299736	0					
ANR	3300050	UnaryOperator	-		3299736	0					
ANR	3300051	PrimaryExpression	1		3299736	1					
ANR	3300052	Identifier	imm		3299736	1					
ANR	3300053	ExpressionStatement	field -> type = TYPE_MEM	162:6:9246:9268	3299736	4	True				
ANR	3300054	AssignmentExpression	field -> type = TYPE_MEM		3299736	0		=			
ANR	3300055	PtrMemberAccess	field -> type		3299736	0					
ANR	3300056	Identifier	field		3299736	0					
ANR	3300057	Identifier	type		3299736	1					
ANR	3300058	Identifier	TYPE_MEM		3299736	1					
ANR	3300059	ExpressionStatement	field -> value = bits + displacement	163:6:9276:9310	3299736	5	True				
ANR	3300060	AssignmentExpression	field -> value = bits + displacement		3299736	0		=			
ANR	3300061	PtrMemberAccess	field -> value		3299736	0					
ANR	3300062	Identifier	field		3299736	0					
ANR	3300063	Identifier	value		3299736	1					
ANR	3300064	AdditiveExpression	bits + displacement		3299736	1		+			
ANR	3300065	Identifier	bits		3299736	0					
ANR	3300066	Identifier	displacement		3299736	1					
ANR	3300067	BreakStatement	break ;	164:6:9318:9323	3299736	6	True				
ANR	3300068	Label	default :	167:5:9338:9345	3299736	17	True				
ANR	3300069	Identifier	default		3299736	0					
ANR	3300070	BreakStatement	break ;	168:6:9353:9358	3299736	18	True				
ANR	3300071	ExpressionStatement	ps -> n = j	171:4:9377:9386	3299736	2	True				
ANR	3300072	AssignmentExpression	ps -> n = j		3299736	0		=			
ANR	3300073	PtrMemberAccess	ps -> n		3299736	0					
ANR	3300074	Identifier	ps		3299736	0					
ANR	3300075	Identifier	n		3299736	1					
ANR	3300076	Identifier	j		3299736	1					
ANR	3300077	ExpressionStatement	ps -> name = instruction -> name	172:4:9392:9420	3299736	3	True				
ANR	3300078	AssignmentExpression	ps -> name = instruction -> name		3299736	0		=			
ANR	3300079	PtrMemberAccess	ps -> name		3299736	0					
ANR	3300080	Identifier	ps		3299736	0					
ANR	3300081	Identifier	name		3299736	1					
ANR	3300082	PtrMemberAccess	instruction -> name		3299736	1					
ANR	3300083	Identifier	instruction		3299736	0					
ANR	3300084	Identifier	name		3299736	1					
ANR	3300085	ExpressionStatement	ps -> op = instruction -> insn	173:4:9426:9452	3299736	4	True				
ANR	3300086	AssignmentExpression	ps -> op = instruction -> insn		3299736	0		=			
ANR	3300087	PtrMemberAccess	ps -> op		3299736	0					
ANR	3300088	Identifier	ps		3299736	0					
ANR	3300089	Identifier	op		3299736	1					
ANR	3300090	PtrMemberAccess	instruction -> insn		3299736	1					
ANR	3300091	Identifier	instruction		3299736	0					
ANR	3300092	Identifier	insn		3299736	1					
ANR	3300093	ReturnStatement	return true ;	174:4:9458:9469	3299736	5	True				
ANR	3300094	Identifier	true		3299736	0					
ANR	3300095	ExpressionStatement	instruction ++	176:3:9479:9492	3299736	1	True				
ANR	3300096	PostIncDecOperationExpression	instruction ++		3299736	0					
ANR	3300097	Identifier	instruction		3299736	0					
ANR	3300098	IncDec	++		3299736	1					
ANR	3300099	ReturnStatement	return false ;	179:1:9502:9514	3299736	2	True				
ANR	3300100	Identifier	false		3299736	0					
ANR	3300101	ReturnType	bool		3299736	1					
ANR	3300102	Identifier	libps_decode		3299736	2					
ANR	3300103	ParameterList	"ut32 data , ppcps_t * ps"		3299736	3					
ANR	3300104	Parameter	ut32 data	97:18:7702:7710	3299736	0	True				
ANR	3300105	ParameterType	ut32		3299736	0					
ANR	3300106	Identifier	data		3299736	1					
ANR	3300107	Parameter	ppcps_t * ps	97:29:7713:7723	3299736	1	True				
ANR	3300108	ParameterType	ppcps_t *		3299736	0					
ANR	3300109	Identifier	ps		3299736	1					
ANR	3300110	CFGEntryNode	ENTRY		3299736		True				
ANR	3300111	CFGExitNode	EXIT		3299736		True				
ANR	3300112	Symbol	ps		3299736						
ANR	3300113	Symbol	data		3299736						
ANR	3300114	Symbol	field -> type		3299736						
ANR	3300115	Symbol	TYPE_REG		3299736						
ANR	3300116	Symbol	* * instruction		3299736						
ANR	3300117	Symbol	imm		3299736						
ANR	3300118	Symbol	sign		3299736						
ANR	3300119	Symbol	instruction -> operands		3299736						
ANR	3300120	Symbol	ps_operand -> bits		3299736						
ANR	3300121	Symbol	instruction -> mask		3299736						
ANR	3300122	Symbol	TYPE_IMM		3299736						
ANR	3300123	Symbol	ps_operands_array		3299736						
ANR	3300124	Symbol	TYPE_MEM		3299736						
ANR	3300125	Symbol	displacement		3299736						
ANR	3300126	Symbol	instruction -> insn		3299736						
ANR	3300127	Symbol	op		3299736						
ANR	3300128	Symbol	OP		3299736						
ANR	3300129	Symbol	* ps_operand		3299736						
ANR	3300130	Symbol	field -> value		3299736						
ANR	3300131	Symbol	OP_MASK		3299736						
ANR	3300132	Symbol	TYPE_CR		3299736						
ANR	3300133	Symbol	bits		3299736						
ANR	3300134	Symbol	false		3299736						
ANR	3300135	Symbol	j		3299736						
ANR	3300136	Symbol	* ps		3299736						
ANR	3300137	Symbol	ps_opcodes_array		3299736						
ANR	3300138	Symbol	ps_operand		3299736						
ANR	3300139	Symbol	* field		3299736						
ANR	3300140	Symbol	instruction -> name		3299736						
ANR	3300141	Symbol	l		3299736						
ANR	3300142	Symbol	instruction -> opcode		3299736						
ANR	3300143	Symbol	ps -> operands		3299736						
ANR	3300144	Symbol	ps -> op		3299736						
ANR	3300145	Symbol	ps -> n		3299736						
ANR	3300146	Symbol	size		3299736						
ANR	3300147	Symbol	* instruction		3299736						
ANR	3300148	Symbol	* j		3299736						
ANR	3300149	Symbol	field		3299736						
ANR	3300150	Symbol	instruction		3299736						
ANR	3300151	Symbol	ps_operand -> shift		3299736						
ANR	3300152	Symbol	true		3299736						
ANR	3300153	Symbol	* instruction -> operands		3299736						
ANR	3300154	Symbol	ps -> name		3299736						
ANR	3300155	Function	libps_snprint	182:0:9519:10318							
ANR	3300156	FunctionDef	"libps_snprint (char * str , int size , ut64 addr , ppcps_t * instr)"		3300155	0					
ANR	3300157	CompoundStatement		182:67:9586:10318	3300155	0					
ANR	3300158	IdentifierDeclStatement	ut32 i ;	183:1:9589:9595	3300155	0	True				
ANR	3300159	IdentifierDecl	i		3300155	0					
ANR	3300160	IdentifierDeclType	ut32		3300155	0					
ANR	3300161	Identifier	i		3300155	1					
ANR	3300162	IdentifierDeclStatement	"int bufsize = size , add = 0 ;"	184:1:9598:9625	3300155	1	True				
ANR	3300163	IdentifierDecl	bufsize = size		3300155	0					
ANR	3300164	IdentifierDeclType	int		3300155	0					
ANR	3300165	Identifier	bufsize		3300155	1					
ANR	3300166	AssignmentExpression	bufsize = size		3300155	2		=			
ANR	3300167	Identifier	size		3300155	0					
ANR	3300168	Identifier	size		3300155	1					
ANR	3300169	IdentifierDecl	add = 0		3300155	1					
ANR	3300170	IdentifierDeclType	int		3300155	0					
ANR	3300171	Identifier	add		3300155	1					
ANR	3300172	AssignmentExpression	add = 0		3300155	2		=			
ANR	3300173	Identifier	add		3300155	0					
ANR	3300174	PrimaryExpression	0		3300155	1					
ANR	3300175	ExpressionStatement	"add = snprintf ( str , bufsize , ""%s"" , instr -> name )"	185:1:9628:9676	3300155	2	True				
ANR	3300176	AssignmentExpression	"add = snprintf ( str , bufsize , ""%s"" , instr -> name )"		3300155	0		=			
ANR	3300177	Identifier	add		3300155	0					
ANR	3300178	CallExpression	"snprintf ( str , bufsize , ""%s"" , instr -> name )"		3300155	1					
ANR	3300179	Callee	snprintf		3300155	0					
ANR	3300180	Identifier	snprintf		3300155	0					
ANR	3300181	ArgumentList	str		3300155	1					
ANR	3300182	Argument	str		3300155	0					
ANR	3300183	Identifier	str		3300155	0					
ANR	3300184	Argument	bufsize		3300155	1					
ANR	3300185	Identifier	bufsize		3300155	0					
ANR	3300186	Argument	"""%s"""		3300155	2					
ANR	3300187	PrimaryExpression	"""%s"""		3300155	0					
ANR	3300188	Argument	instr -> name		3300155	3					
ANR	3300189	PtrMemberAccess	instr -> name		3300155	0					
ANR	3300190	Identifier	instr		3300155	0					
ANR	3300191	Identifier	name		3300155	1					
ANR	3300192	ForStatement	for ( i = 0 ; add > 0 && i < instr -> n && add < bufsize ; ++ i )		3300155	3					
ANR	3300193	ForInit	i = 0 ;	186:6:9684:9689	3300155	0	True				
ANR	3300194	AssignmentExpression	i = 0		3300155	0		=			
ANR	3300195	Identifier	i		3300155	0					
ANR	3300196	PrimaryExpression	0		3300155	1					
ANR	3300197	Condition	add > 0 && i < instr -> n && add < bufsize	186:13:9691:9730	3300155	1	True				
ANR	3300198	AndExpression	add > 0 && i < instr -> n && add < bufsize		3300155	0		&&			
ANR	3300199	RelationalExpression	add > 0		3300155	0		>			
ANR	3300200	Identifier	add		3300155	0					
ANR	3300201	PrimaryExpression	0		3300155	1					
ANR	3300202	AndExpression	i < instr -> n && add < bufsize		3300155	1		&&			
ANR	3300203	RelationalExpression	i < instr -> n		3300155	0		<			
ANR	3300204	Identifier	i		3300155	0					
ANR	3300205	PtrMemberAccess	instr -> n		3300155	1					
ANR	3300206	Identifier	instr		3300155	0					
ANR	3300207	Identifier	n		3300155	1					
ANR	3300208	RelationalExpression	add < bufsize		3300155	1		<			
ANR	3300209	Identifier	add		3300155	0					
ANR	3300210	Identifier	bufsize		3300155	1					
ANR	3300211	UnaryExpression	++ i	186:55:9733:9735	3300155	2	True				
ANR	3300212	IncDec	++		3300155	0					
ANR	3300213	Identifier	i		3300155	1					
ANR	3300214	CompoundStatement		5:60:151:151	3300155	3					
ANR	3300215	IfStatement	if ( instr -> operands [ i ] . type == TYPE_REG )		3300155	0					
ANR	3300216	Condition	instr -> operands [ i ] . type == TYPE_REG	187:6:9746:9780	3300155	0	True				
ANR	3300217	EqualityExpression	instr -> operands [ i ] . type == TYPE_REG		3300155	0		==			
ANR	3300218	MemberAccess	instr -> operands [ i ] . type		3300155	0					
ANR	3300219	ArrayIndexing	instr -> operands [ i ]		3300155	0					
ANR	3300220	PtrMemberAccess	instr -> operands		3300155	0					
ANR	3300221	Identifier	instr		3300155	0					
ANR	3300222	Identifier	operands		3300155	1					
ANR	3300223	Identifier	i		3300155	1					
ANR	3300224	Identifier	type		3300155	1					
ANR	3300225	Identifier	TYPE_REG		3300155	1					
ANR	3300226	CompoundStatement		6:43:196:196	3300155	1					
ANR	3300227	ExpressionStatement	"add += snprintf ( str + add , bufsize - add , "" fr%u"" , instr -> operands [ i ] . value )"	188:3:9788:9865	3300155	0	True				
ANR	3300228	AssignmentExpression	"add += snprintf ( str + add , bufsize - add , "" fr%u"" , instr -> operands [ i ] . value )"		3300155	0		+=			
ANR	3300229	Identifier	add		3300155	0					
ANR	3300230	CallExpression	"snprintf ( str + add , bufsize - add , "" fr%u"" , instr -> operands [ i ] . value )"		3300155	1					
ANR	3300231	Callee	snprintf		3300155	0					
ANR	3300232	Identifier	snprintf		3300155	0					
ANR	3300233	ArgumentList	str + add		3300155	1					
ANR	3300234	Argument	str + add		3300155	0					
ANR	3300235	AdditiveExpression	str + add		3300155	0		+			
ANR	3300236	Identifier	str		3300155	0					
ANR	3300237	Identifier	add		3300155	1					
ANR	3300238	Argument	bufsize - add		3300155	1					
ANR	3300239	AdditiveExpression	bufsize - add		3300155	0		-			
ANR	3300240	Identifier	bufsize		3300155	0					
ANR	3300241	Identifier	add		3300155	1					
ANR	3300242	Argument	""" fr%u"""		3300155	2					
ANR	3300243	PrimaryExpression	""" fr%u"""		3300155	0					
ANR	3300244	Argument	instr -> operands [ i ] . value		3300155	3					
ANR	3300245	MemberAccess	instr -> operands [ i ] . value		3300155	0					
ANR	3300246	ArrayIndexing	instr -> operands [ i ]		3300155	0					
ANR	3300247	PtrMemberAccess	instr -> operands		3300155	0					
ANR	3300248	Identifier	instr		3300155	0					
ANR	3300249	Identifier	operands		3300155	1					
ANR	3300250	Identifier	i		3300155	1					
ANR	3300251	Identifier	value		3300155	1					
ANR	3300252	ElseStatement	else		3300155	0					
ANR	3300253	IfStatement	if ( instr -> operands [ i ] . type == TYPE_IMM )		3300155	0					
ANR	3300254	Condition	instr -> operands [ i ] . type == TYPE_IMM	189:13:9880:9914	3300155	0	True				
ANR	3300255	EqualityExpression	instr -> operands [ i ] . type == TYPE_IMM		3300155	0		==			
ANR	3300256	MemberAccess	instr -> operands [ i ] . type		3300155	0					
ANR	3300257	ArrayIndexing	instr -> operands [ i ]		3300155	0					
ANR	3300258	PtrMemberAccess	instr -> operands		3300155	0					
ANR	3300259	Identifier	instr		3300155	0					
ANR	3300260	Identifier	operands		3300155	1					
ANR	3300261	Identifier	i		3300155	1					
ANR	3300262	Identifier	type		3300155	1					
ANR	3300263	Identifier	TYPE_IMM		3300155	1					
ANR	3300264	CompoundStatement		8:50:330:330	3300155	1					
ANR	3300265	ExpressionStatement	"add += snprintf ( str + add , bufsize - add , "" 0x%x"" , instr -> operands [ i ] . value )"	190:3:9922:9999	3300155	0	True				
ANR	3300266	AssignmentExpression	"add += snprintf ( str + add , bufsize - add , "" 0x%x"" , instr -> operands [ i ] . value )"		3300155	0		+=			
ANR	3300267	Identifier	add		3300155	0					
ANR	3300268	CallExpression	"snprintf ( str + add , bufsize - add , "" 0x%x"" , instr -> operands [ i ] . value )"		3300155	1					
ANR	3300269	Callee	snprintf		3300155	0					
ANR	3300270	Identifier	snprintf		3300155	0					
ANR	3300271	ArgumentList	str + add		3300155	1					
ANR	3300272	Argument	str + add		3300155	0					
ANR	3300273	AdditiveExpression	str + add		3300155	0		+			
ANR	3300274	Identifier	str		3300155	0					
ANR	3300275	Identifier	add		3300155	1					
ANR	3300276	Argument	bufsize - add		3300155	1					
ANR	3300277	AdditiveExpression	bufsize - add		3300155	0		-			
ANR	3300278	Identifier	bufsize		3300155	0					
ANR	3300279	Identifier	add		3300155	1					
ANR	3300280	Argument	""" 0x%x"""		3300155	2					
ANR	3300281	PrimaryExpression	""" 0x%x"""		3300155	0					
ANR	3300282	Argument	instr -> operands [ i ] . value		3300155	3					
ANR	3300283	MemberAccess	instr -> operands [ i ] . value		3300155	0					
ANR	3300284	ArrayIndexing	instr -> operands [ i ]		3300155	0					
ANR	3300285	PtrMemberAccess	instr -> operands		3300155	0					
ANR	3300286	Identifier	instr		3300155	0					
ANR	3300287	Identifier	operands		3300155	1					
ANR	3300288	Identifier	i		3300155	1					
ANR	3300289	Identifier	value		3300155	1					
ANR	3300290	ElseStatement	else		3300155	0					
ANR	3300291	IfStatement	if ( instr -> operands [ i ] . type == TYPE_MEM )		3300155	0					
ANR	3300292	Condition	instr -> operands [ i ] . type == TYPE_MEM	191:13:10014:10048	3300155	0	True				
ANR	3300293	EqualityExpression	instr -> operands [ i ] . type == TYPE_MEM		3300155	0		==			
ANR	3300294	MemberAccess	instr -> operands [ i ] . type		3300155	0					
ANR	3300295	ArrayIndexing	instr -> operands [ i ]		3300155	0					
ANR	3300296	PtrMemberAccess	instr -> operands		3300155	0					
ANR	3300297	Identifier	instr		3300155	0					
ANR	3300298	Identifier	operands		3300155	1					
ANR	3300299	Identifier	i		3300155	1					
ANR	3300300	Identifier	type		3300155	1					
ANR	3300301	Identifier	TYPE_MEM		3300155	1					
ANR	3300302	CompoundStatement		10:50:464:464	3300155	1					
ANR	3300303	ExpressionStatement	"add += snprintf ( str + add , bufsize - add , "" 0x%x(r%d)"" , instr -> operands [ i ] . value , instr -> operands [ i + 1 ] . value )"	192:3:10056:10168	3300155	0	True				
ANR	3300304	AssignmentExpression	"add += snprintf ( str + add , bufsize - add , "" 0x%x(r%d)"" , instr -> operands [ i ] . value , instr -> operands [ i + 1 ] . value )"		3300155	0		+=			
ANR	3300305	Identifier	add		3300155	0					
ANR	3300306	CallExpression	"snprintf ( str + add , bufsize - add , "" 0x%x(r%d)"" , instr -> operands [ i ] . value , instr -> operands [ i + 1 ] . value )"		3300155	1					
ANR	3300307	Callee	snprintf		3300155	0					
ANR	3300308	Identifier	snprintf		3300155	0					
ANR	3300309	ArgumentList	str + add		3300155	1					
ANR	3300310	Argument	str + add		3300155	0					
ANR	3300311	AdditiveExpression	str + add		3300155	0		+			
ANR	3300312	Identifier	str		3300155	0					
ANR	3300313	Identifier	add		3300155	1					
ANR	3300314	Argument	bufsize - add		3300155	1					
ANR	3300315	AdditiveExpression	bufsize - add		3300155	0		-			
ANR	3300316	Identifier	bufsize		3300155	0					
ANR	3300317	Identifier	add		3300155	1					
ANR	3300318	Argument	""" 0x%x(r%d)"""		3300155	2					
ANR	3300319	PrimaryExpression	""" 0x%x(r%d)"""		3300155	0					
ANR	3300320	Argument	instr -> operands [ i ] . value		3300155	3					
ANR	3300321	MemberAccess	instr -> operands [ i ] . value		3300155	0					
ANR	3300322	ArrayIndexing	instr -> operands [ i ]		3300155	0					
ANR	3300323	PtrMemberAccess	instr -> operands		3300155	0					
ANR	3300324	Identifier	instr		3300155	0					
ANR	3300325	Identifier	operands		3300155	1					
ANR	3300326	Identifier	i		3300155	1					
ANR	3300327	Identifier	value		3300155	1					
ANR	3300328	Argument	instr -> operands [ i + 1 ] . value		3300155	4					
ANR	3300329	MemberAccess	instr -> operands [ i + 1 ] . value		3300155	0					
ANR	3300330	ArrayIndexing	instr -> operands [ i + 1 ]		3300155	0					
ANR	3300331	PtrMemberAccess	instr -> operands		3300155	0					
ANR	3300332	Identifier	instr		3300155	0					
ANR	3300333	Identifier	operands		3300155	1					
ANR	3300334	AdditiveExpression	i + 1		3300155	1		+			
ANR	3300335	Identifier	i		3300155	0					
ANR	3300336	PrimaryExpression	1		3300155	1					
ANR	3300337	Identifier	value		3300155	1					
ANR	3300338	ExpressionStatement	i ++	193:3:10173:10176	3300155	1	True				
ANR	3300339	PostIncDecOperationExpression	i ++		3300155	0					
ANR	3300340	Identifier	i		3300155	0					
ANR	3300341	IncDec	++		3300155	1					
ANR	3300342	ElseStatement	else		3300155	0					
ANR	3300343	IfStatement	if ( instr -> operands [ i ] . type == TYPE_CR )		3300155	0					
ANR	3300344	Condition	instr -> operands [ i ] . type == TYPE_CR	194:13:10191:10224	3300155	0	True				
ANR	3300345	EqualityExpression	instr -> operands [ i ] . type == TYPE_CR		3300155	0		==			
ANR	3300346	MemberAccess	instr -> operands [ i ] . type		3300155	0					
ANR	3300347	ArrayIndexing	instr -> operands [ i ]		3300155	0					
ANR	3300348	PtrMemberAccess	instr -> operands		3300155	0					
ANR	3300349	Identifier	instr		3300155	0					
ANR	3300350	Identifier	operands		3300155	1					
ANR	3300351	Identifier	i		3300155	1					
ANR	3300352	Identifier	type		3300155	1					
ANR	3300353	Identifier	TYPE_CR		3300155	1					
ANR	3300354	CompoundStatement		13:49:640:640	3300155	1					
ANR	3300355	ExpressionStatement	"add += snprintf ( str + add , bufsize - add , "" cr%u"" , instr -> operands [ i ] . value )"	195:3:10232:10309	3300155	0	True				
ANR	3300356	AssignmentExpression	"add += snprintf ( str + add , bufsize - add , "" cr%u"" , instr -> operands [ i ] . value )"		3300155	0		+=			
ANR	3300357	Identifier	add		3300155	0					
ANR	3300358	CallExpression	"snprintf ( str + add , bufsize - add , "" cr%u"" , instr -> operands [ i ] . value )"		3300155	1					
ANR	3300359	Callee	snprintf		3300155	0					
ANR	3300360	Identifier	snprintf		3300155	0					
ANR	3300361	ArgumentList	str + add		3300155	1					
ANR	3300362	Argument	str + add		3300155	0					
ANR	3300363	AdditiveExpression	str + add		3300155	0		+			
ANR	3300364	Identifier	str		3300155	0					
ANR	3300365	Identifier	add		3300155	1					
ANR	3300366	Argument	bufsize - add		3300155	1					
ANR	3300367	AdditiveExpression	bufsize - add		3300155	0		-			
ANR	3300368	Identifier	bufsize		3300155	0					
ANR	3300369	Identifier	add		3300155	1					
ANR	3300370	Argument	""" cr%u"""		3300155	2					
ANR	3300371	PrimaryExpression	""" cr%u"""		3300155	0					
ANR	3300372	Argument	instr -> operands [ i ] . value		3300155	3					
ANR	3300373	MemberAccess	instr -> operands [ i ] . value		3300155	0					
ANR	3300374	ArrayIndexing	instr -> operands [ i ]		3300155	0					
ANR	3300375	PtrMemberAccess	instr -> operands		3300155	0					
ANR	3300376	Identifier	instr		3300155	0					
ANR	3300377	Identifier	operands		3300155	1					
ANR	3300378	Identifier	i		3300155	1					
ANR	3300379	Identifier	value		3300155	1					
ANR	3300380	ReturnType	void		3300155	1					
ANR	3300381	Identifier	libps_snprint		3300155	2					
ANR	3300382	ParameterList	"char * str , int size , ut64 addr , ppcps_t * instr"		3300155	3					
ANR	3300383	Parameter	char * str	182:19:9538:9546	3300155	0	True				
ANR	3300384	ParameterType	char *		3300155	0					
ANR	3300385	Identifier	str		3300155	1					
ANR	3300386	Parameter	int size	182:30:9549:9556	3300155	1	True				
ANR	3300387	ParameterType	int		3300155	0					
ANR	3300388	Identifier	size		3300155	1					
ANR	3300389	Parameter	ut64 addr	182:40:9559:9567	3300155	2	True				
ANR	3300390	ParameterType	ut64		3300155	0					
ANR	3300391	Identifier	addr		3300155	1					
ANR	3300392	Parameter	ppcps_t * instr	182:51:9570:9583	3300155	3	True				
ANR	3300393	ParameterType	ppcps_t *		3300155	0					
ANR	3300394	Identifier	instr		3300155	1					
ANR	3300395	CFGEntryNode	ENTRY		3300155		True				
ANR	3300396	CFGExitNode	EXIT		3300155		True				
ANR	3300397	Symbol	add		3300155						
ANR	3300398	Symbol	instr -> operands [ i ] . type		3300155						
ANR	3300399	Symbol	TYPE_REG		3300155						
ANR	3300400	Symbol	TYPE_CR		3300155						
ANR	3300401	Symbol	bufsize		3300155						
ANR	3300402	Symbol	i		3300155						
ANR	3300403	Symbol	* instr		3300155						
ANR	3300404	Symbol	TYPE_IMM		3300155						
ANR	3300405	Symbol	instr -> operands		3300155						
ANR	3300406	Symbol	str		3300155						
ANR	3300407	Symbol	instr -> n		3300155						
ANR	3300408	Symbol	* instr -> operands		3300155						
ANR	3300409	Symbol	* i		3300155						
ANR	3300410	Symbol	size		3300155						
ANR	3300411	Symbol	instr -> operands [ i ] . value		3300155						
ANR	3300412	Symbol	instr -> name		3300155						
ANR	3300413	Symbol	instr		3300155						
ANR	3300414	Symbol	TYPE_MEM		3300155						
ANR	3300415	Symbol	instr -> operands [ i + 1 ] . value		3300155						
ANR	3300416	Symbol	addr		3300155						
ANR	3300417	Symbol	* * instr		3300155						
ANR	3300418	Symbol	snprintf		3300155						
