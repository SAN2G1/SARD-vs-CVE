command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6134155	File	data/converged/CVE-2019-16718~_radare2/shlr_tcc_tccpp.c								
ANR	6134156	DeclStmt									
ANR	6134157	Decl							ST_DATA int	ST_DATA int	tok_flags
ANR	6134158	DeclStmt									
ANR	6134159	Decl							ST_DATA int	ST_DATA int	parse_flags
ANR	6134160	DeclStmt									
ANR	6134161	Decl							struct BufferedFile	struct BufferedFile *	file
ANR	6134162	DeclStmt									
ANR	6134163	Decl							ST_DATA int	ST_DATA int	ch
ANR	6134164	Decl							ST_DATA int	ST_DATA int	tok
ANR	6134165	DeclStmt									
ANR	6134166	Decl							ST_DATA CValue	ST_DATA CValue	tokc
ANR	6134167	DeclStmt									
ANR	6134168	Decl							const int	const int *	macro_ptr
ANR	6134169	DeclStmt									
ANR	6134170	Decl							ST_DATA CString	ST_DATA CString	tokcstr
ANR	6134171	DeclStmt									
ANR	6134172	Decl							ST_DATA int	ST_DATA int	total_lines
ANR	6134173	DeclStmt									
ANR	6134174	Decl							ST_DATA int	ST_DATA int	total_bytes
ANR	6134175	DeclStmt									
ANR	6134176	Decl							ST_DATA int	ST_DATA int	tok_ident
ANR	6134177	DeclStmt									
ANR	6134178	Decl							ST_DATA TokenSym	ST_DATA TokenSym * *	table_ident
ANR	6134179	DeclStmt									
ANR	6134180	Decl							int	int *	macro_ptr_allocated
ANR	6134181	DeclStmt									
ANR	6134182	Decl							const int	const int *	unget_saved_macro_ptr
ANR	6134183	DeclStmt									
ANR	6134184	Decl							int	int [ TOK_MAX_SIZE + 1 ]	unget_saved_buffer
ANR	6134185	DeclStmt									
ANR	6134186	Decl							int	int	unget_buffer_enabled
ANR	6134187	DeclStmt									
ANR	6134188	Decl							TokenSym	TokenSym * [ TOK_HASH_SIZE ]	hash_ident
ANR	6134189	DeclStmt									
ANR	6134190	Decl							char	char [ STRING_MAX_SIZE + 1 ]	token_buf
ANR	6134191	DeclStmt									
ANR	6134192	Decl							unsigned char	unsigned char [ 256 - CH_EOF ]	isidnum_table
ANR	6134193	DeclStmt									
ANR	6134194	Decl							const char	const char [ ]	tcc_keywords
ANR	6134195	DeclStmt									
ANR	6134196	Decl							const unsigned char	const unsigned char [ ]	tok_two_chars
ANR	6134197	ClassDef	macro_level	76:0:2755:2818							
ANR	6134198	DeclStmt									
ANR	6134199	Decl							struct macro_level	struct macro_level *	prev
ANR	6134200	DeclStmt									
ANR	6134201	Decl							const int	const int *	p
ANR	6134202	DeclStmt									
ANR	6134203	Decl							void	void ( void )	next_nomacro_spc
ANR	6134204	DeclStmt									
ANR	6134205	Decl							void	"void ( TokenString * tok_str , Sym * * nested_list , const int * macro_str , struct macro_level * * can_read_stream )"	macro_subst
ANR	6134206	Function	skip	89:0:2991:3121							
ANR	6134207	FunctionDef	skip (int c)		6134206	0					
ANR	6134208	CompoundStatement		90:0:3016:3121	6134206	0					
ANR	6134209	IfStatement	if ( tok != c )		6134206	0					
ANR	6134210	Condition	tok != c	91:5:3023:3030	6134206	0	True				
ANR	6134211	EqualityExpression	tok != c		6134206	0		!=			
ANR	6134212	Identifier	tok		6134206	0					
ANR	6134213	Identifier	c		6134206	1					
ANR	6134214	CompoundStatement		2:15:16:16	6134206	1					
ANR	6134215	ExpressionStatement	"tcc_error ( ""'%c' expected (got \\""%s\\"")"" , c , get_tok_str ( tok , & tokc ) )"	92:2:3037:3106	6134206	0	True				
ANR	6134216	CallExpression	"tcc_error ( ""'%c' expected (got \\""%s\\"")"" , c , get_tok_str ( tok , & tokc ) )"		6134206	0					
ANR	6134217	Callee	tcc_error		6134206	0					
ANR	6134218	Identifier	tcc_error		6134206	0					
ANR	6134219	ArgumentList	"""'%c' expected (got \\""%s\\"")"""		6134206	1					
ANR	6134220	Argument	"""'%c' expected (got \\""%s\\"")"""		6134206	0					
ANR	6134221	PrimaryExpression	"""'%c' expected (got \\""%s\\"")"""		6134206	0					
ANR	6134222	Argument	c		6134206	1					
ANR	6134223	Identifier	c		6134206	0					
ANR	6134224	Argument	"get_tok_str ( tok , & tokc )"		6134206	2					
ANR	6134225	CallExpression	"get_tok_str ( tok , & tokc )"		6134206	0					
ANR	6134226	Callee	get_tok_str		6134206	0					
ANR	6134227	Identifier	get_tok_str		6134206	0					
ANR	6134228	ArgumentList	tok		6134206	1					
ANR	6134229	Argument	tok		6134206	0					
ANR	6134230	Identifier	tok		6134206	0					
ANR	6134231	Argument	& tokc		6134206	1					
ANR	6134232	UnaryOperationExpression	& tokc		6134206	0					
ANR	6134233	UnaryOperator	&		6134206	0					
ANR	6134234	Identifier	tokc		6134206	1					
ANR	6134235	ExpressionStatement	next ( )	94:1:3112:3119	6134206	1	True				
ANR	6134236	CallExpression	next ( )		6134206	0					
ANR	6134237	Callee	next		6134206	0					
ANR	6134238	Identifier	next		6134206	0					
ANR	6134239	ArgumentList			6134206	1					
ANR	6134240	ReturnType	ST_FUNC void		6134206	1					
ANR	6134241	Identifier	skip		6134206	2					
ANR	6134242	ParameterList	int c		6134206	3					
ANR	6134243	Parameter	int c	89:18:3009:3013	6134206	0	True				
ANR	6134244	ParameterType	int		6134206	0					
ANR	6134245	Identifier	c		6134206	1					
ANR	6134246	CFGEntryNode	ENTRY		6134206		True				
ANR	6134247	CFGExitNode	EXIT		6134206		True				
ANR	6134248	Symbol	tok		6134206						
ANR	6134249	Symbol	c		6134206						
ANR	6134250	Symbol	get_tok_str		6134206						
ANR	6134251	Symbol	& tokc		6134206						
ANR	6134252	Function	expect	97:0:3124:3196							
ANR	6134253	FunctionDef	expect (const char * msg)		6134252	0					
ANR	6134254	CompoundStatement		98:0:3161:3196	6134252	0					
ANR	6134255	ExpressionStatement	"tcc_error ( ""%s expected"" , msg )"	99:1:3164:3194	6134252	0	True				
ANR	6134256	CallExpression	"tcc_error ( ""%s expected"" , msg )"		6134252	0					
ANR	6134257	Callee	tcc_error		6134252	0					
ANR	6134258	Identifier	tcc_error		6134252	0					
ANR	6134259	ArgumentList	"""%s expected"""		6134252	1					
ANR	6134260	Argument	"""%s expected"""		6134252	0					
ANR	6134261	PrimaryExpression	"""%s expected"""		6134252	0					
ANR	6134262	Argument	msg		6134252	1					
ANR	6134263	Identifier	msg		6134252	0					
ANR	6134264	ReturnType	ST_FUNC void		6134252	1					
ANR	6134265	Identifier	expect		6134252	2					
ANR	6134266	ParameterList	const char * msg		6134252	3					
ANR	6134267	Parameter	const char * msg	97:20:3144:3158	6134252	0	True				
ANR	6134268	ParameterType	const char *		6134252	0					
ANR	6134269	Identifier	msg		6134252	1					
ANR	6134270	CFGEntryNode	ENTRY		6134252		True				
ANR	6134271	CFGExitNode	EXIT		6134252		True				
ANR	6134272	Symbol	msg		6134252						
ANR	6134273	Function	cstr_realloc	104:0:3302:3667							
ANR	6134274	FunctionDef	"cstr_realloc (CString * cstr , int new_size)"		6134273	0					
ANR	6134275	CompoundStatement		105:0:3356:3667	6134273	0					
ANR	6134276	IdentifierDeclStatement	int size ;	106:1:3359:3367	6134273	0	True				
ANR	6134277	IdentifierDecl	size		6134273	0					
ANR	6134278	IdentifierDeclType	int		6134273	0					
ANR	6134279	Identifier	size		6134273	1					
ANR	6134280	IdentifierDeclStatement	void * data ;	107:1:3370:3380	6134273	1	True				
ANR	6134281	IdentifierDecl	* data		6134273	0					
ANR	6134282	IdentifierDeclType	void *		6134273	0					
ANR	6134283	Identifier	data		6134273	1					
ANR	6134284	ExpressionStatement	size = cstr -> size_allocated	109:1:3384:3411	6134273	2	True				
ANR	6134285	AssignmentExpression	size = cstr -> size_allocated		6134273	0		=			
ANR	6134286	Identifier	size		6134273	0					
ANR	6134287	PtrMemberAccess	cstr -> size_allocated		6134273	1					
ANR	6134288	Identifier	cstr		6134273	0					
ANR	6134289	Identifier	size_allocated		6134273	1					
ANR	6134290	IfStatement	if ( size == 0 )		6134273	3					
ANR	6134291	Condition	size == 0	110:5:3418:3426	6134273	0	True				
ANR	6134292	EqualityExpression	size == 0		6134273	0		==			
ANR	6134293	Identifier	size		6134273	0					
ANR	6134294	PrimaryExpression	0		6134273	1					
ANR	6134295	CompoundStatement		6:16:72:72	6134273	1					
ANR	6134296	ExpressionStatement	size = 8	111:2:3433:3441	6134273	0	True				
ANR	6134297	AssignmentExpression	size = 8		6134273	0		=			
ANR	6134298	Identifier	size		6134273	0					
ANR	6134299	PrimaryExpression	8		6134273	1					
ANR	6134300	WhileStatement	while ( size < new_size )		6134273	4					
ANR	6134301	Condition	size < new_size	113:8:3505:3519	6134273	0	True				
ANR	6134302	RelationalExpression	size < new_size		6134273	0		<			
ANR	6134303	Identifier	size		6134273	0					
ANR	6134304	Identifier	new_size		6134273	1					
ANR	6134305	ExpressionStatement	size = size * 2	114:2:3524:3539	6134273	1	True				
ANR	6134306	AssignmentExpression	size = size * 2		6134273	0		=			
ANR	6134307	Identifier	size		6134273	0					
ANR	6134308	MultiplicativeExpression	size * 2		6134273	1		*			
ANR	6134309	Identifier	size		6134273	0					
ANR	6134310	PrimaryExpression	2		6134273	1					
ANR	6134311	ExpressionStatement	"data = realloc ( cstr -> data_allocated , size )"	115:1:3542:3585	6134273	5	True				
ANR	6134312	AssignmentExpression	"data = realloc ( cstr -> data_allocated , size )"		6134273	0		=			
ANR	6134313	Identifier	data		6134273	0					
ANR	6134314	CallExpression	"realloc ( cstr -> data_allocated , size )"		6134273	1					
ANR	6134315	Callee	realloc		6134273	0					
ANR	6134316	Identifier	realloc		6134273	0					
ANR	6134317	ArgumentList	cstr -> data_allocated		6134273	1					
ANR	6134318	Argument	cstr -> data_allocated		6134273	0					
ANR	6134319	PtrMemberAccess	cstr -> data_allocated		6134273	0					
ANR	6134320	Identifier	cstr		6134273	0					
ANR	6134321	Identifier	data_allocated		6134273	1					
ANR	6134322	Argument	size		6134273	1					
ANR	6134323	Identifier	size		6134273	0					
ANR	6134324	ExpressionStatement	cstr -> data_allocated = data	116:1:3588:3615	6134273	6	True				
ANR	6134325	AssignmentExpression	cstr -> data_allocated = data		6134273	0		=			
ANR	6134326	PtrMemberAccess	cstr -> data_allocated		6134273	0					
ANR	6134327	Identifier	cstr		6134273	0					
ANR	6134328	Identifier	data_allocated		6134273	1					
ANR	6134329	Identifier	data		6134273	1					
ANR	6134330	ExpressionStatement	cstr -> size_allocated = size	117:1:3618:3645	6134273	7	True				
ANR	6134331	AssignmentExpression	cstr -> size_allocated = size		6134273	0		=			
ANR	6134332	PtrMemberAccess	cstr -> size_allocated		6134273	0					
ANR	6134333	Identifier	cstr		6134273	0					
ANR	6134334	Identifier	size_allocated		6134273	1					
ANR	6134335	Identifier	size		6134273	1					
ANR	6134336	ExpressionStatement	cstr -> data = data	118:1:3648:3665	6134273	8	True				
ANR	6134337	AssignmentExpression	cstr -> data = data		6134273	0		=			
ANR	6134338	PtrMemberAccess	cstr -> data		6134273	0					
ANR	6134339	Identifier	cstr		6134273	0					
ANR	6134340	Identifier	data		6134273	1					
ANR	6134341	Identifier	data		6134273	1					
ANR	6134342	ReturnType	static void		6134273	1					
ANR	6134343	Identifier	cstr_realloc		6134273	2					
ANR	6134344	ParameterList	"CString * cstr , int new_size"		6134273	3					
ANR	6134345	Parameter	CString * cstr	104:25:3327:3339	6134273	0	True				
ANR	6134346	ParameterType	CString *		6134273	0					
ANR	6134347	Identifier	cstr		6134273	1					
ANR	6134348	Parameter	int new_size	104:40:3342:3353	6134273	1	True				
ANR	6134349	ParameterType	int		6134273	0					
ANR	6134350	Identifier	new_size		6134273	1					
ANR	6134351	CFGEntryNode	ENTRY		6134273		True				
ANR	6134352	CFGExitNode	EXIT		6134273		True				
ANR	6134353	Symbol	cstr		6134273						
ANR	6134354	Symbol	cstr -> size_allocated		6134273						
ANR	6134355	Symbol	size		6134273						
ANR	6134356	Symbol	data		6134273						
ANR	6134357	Symbol	new_size		6134273						
ANR	6134358	Symbol	* cstr		6134273						
ANR	6134359	Symbol	realloc		6134273						
ANR	6134360	Symbol	cstr -> data_allocated		6134273						
ANR	6134361	Symbol	cstr -> data		6134273						
ANR	6134362	Function	cstr_ccat	122:0:3687:3906							
ANR	6134363	FunctionDef	"cstr_ccat (CString * cstr , int ch)"		6134362	0					
ANR	6134364	CompoundStatement		123:0:3733:3906	6134362	0					
ANR	6134365	IdentifierDeclStatement	int size ;	124:1:3736:3744	6134362	0	True				
ANR	6134366	IdentifierDecl	size		6134362	0					
ANR	6134367	IdentifierDeclType	int		6134362	0					
ANR	6134368	Identifier	size		6134362	1					
ANR	6134369	ExpressionStatement	size = cstr -> size + 1	125:1:3747:3768	6134362	1	True				
ANR	6134370	AssignmentExpression	size = cstr -> size + 1		6134362	0		=			
ANR	6134371	Identifier	size		6134362	0					
ANR	6134372	AdditiveExpression	cstr -> size + 1		6134362	1		+			
ANR	6134373	PtrMemberAccess	cstr -> size		6134362	0					
ANR	6134374	Identifier	cstr		6134362	0					
ANR	6134375	Identifier	size		6134362	1					
ANR	6134376	PrimaryExpression	1		6134362	1					
ANR	6134377	IfStatement	if ( size > cstr -> size_allocated )		6134362	2					
ANR	6134378	Condition	size > cstr -> size_allocated	126:5:3775:3801	6134362	0	True				
ANR	6134379	RelationalExpression	size > cstr -> size_allocated		6134362	0		>			
ANR	6134380	Identifier	size		6134362	0					
ANR	6134381	PtrMemberAccess	cstr -> size_allocated		6134362	1					
ANR	6134382	Identifier	cstr		6134362	0					
ANR	6134383	Identifier	size_allocated		6134362	1					
ANR	6134384	CompoundStatement		4:34:70:70	6134362	1					
ANR	6134385	ExpressionStatement	"cstr_realloc ( cstr , size )"	127:2:3808:3833	6134362	0	True				
ANR	6134386	CallExpression	"cstr_realloc ( cstr , size )"		6134362	0					
ANR	6134387	Callee	cstr_realloc		6134362	0					
ANR	6134388	Identifier	cstr_realloc		6134362	0					
ANR	6134389	ArgumentList	cstr		6134362	1					
ANR	6134390	Argument	cstr		6134362	0					
ANR	6134391	Identifier	cstr		6134362	0					
ANR	6134392	Argument	size		6134362	1					
ANR	6134393	Identifier	size		6134362	0					
ANR	6134394	ExpressionStatement	( ( unsigned char * ) cstr -> data ) [ size - 1 ] = ch	129:1:3839:3884	6134362	3	True				
ANR	6134395	AssignmentExpression	( ( unsigned char * ) cstr -> data ) [ size - 1 ] = ch		6134362	0		=			
ANR	6134396	ArrayIndexing	( ( unsigned char * ) cstr -> data ) [ size - 1 ]		6134362	0					
ANR	6134397	CastExpression	( unsigned char * ) cstr -> data		6134362	0					
ANR	6134398	CastTarget	unsigned char *		6134362	0					
ANR	6134399	PtrMemberAccess	cstr -> data		6134362	1					
ANR	6134400	Identifier	cstr		6134362	0					
ANR	6134401	Identifier	data		6134362	1					
ANR	6134402	AdditiveExpression	size - 1		6134362	1		-			
ANR	6134403	Identifier	size		6134362	0					
ANR	6134404	PrimaryExpression	1		6134362	1					
ANR	6134405	Identifier	ch		6134362	1					
ANR	6134406	ExpressionStatement	cstr -> size = size	130:1:3887:3904	6134362	4	True				
ANR	6134407	AssignmentExpression	cstr -> size = size		6134362	0		=			
ANR	6134408	PtrMemberAccess	cstr -> size		6134362	0					
ANR	6134409	Identifier	cstr		6134362	0					
ANR	6134410	Identifier	size		6134362	1					
ANR	6134411	Identifier	size		6134362	1					
ANR	6134412	ReturnType	ST_FUNC void		6134362	1					
ANR	6134413	Identifier	cstr_ccat		6134362	2					
ANR	6134414	ParameterList	"CString * cstr , int ch"		6134362	3					
ANR	6134415	Parameter	CString * cstr	122:23:3710:3722	6134362	0	True				
ANR	6134416	ParameterType	CString *		6134362	0					
ANR	6134417	Identifier	cstr		6134362	1					
ANR	6134418	Parameter	int ch	122:38:3725:3730	6134362	1	True				
ANR	6134419	ParameterType	int		6134362	0					
ANR	6134420	Identifier	ch		6134362	1					
ANR	6134421	CFGEntryNode	ENTRY		6134362		True				
ANR	6134422	CFGExitNode	EXIT		6134362		True				
ANR	6134423	Symbol	cstr		6134362						
ANR	6134424	Symbol	cstr -> size_allocated		6134362						
ANR	6134425	Symbol	* size		6134362						
ANR	6134426	Symbol	size		6134362						
ANR	6134427	Symbol	ch		6134362						
ANR	6134428	Symbol	* cstr		6134362						
ANR	6134429	Symbol	cstr -> data		6134362						
ANR	6134430	Symbol	cstr -> size		6134362						
ANR	6134431	Symbol	* cstr -> data		6134362						
ANR	6134432	Symbol	* * cstr		6134362						
ANR	6134433	Function	cstr_cat	133:0:3909:4065							
ANR	6134434	FunctionDef	"cstr_cat (CString * cstr , const char * str)"		6134433	0					
ANR	6134435	CompoundStatement		134:0:3963:4065	6134433	0					
ANR	6134436	IdentifierDeclStatement	int c ;	135:1:3966:3971	6134433	0	True				
ANR	6134437	IdentifierDecl	c		6134433	0					
ANR	6134438	IdentifierDeclType	int		6134433	0					
ANR	6134439	Identifier	c		6134433	1					
ANR	6134440	ForStatement	for ( ; ; )		6134433	1					
ANR	6134441	CompoundStatement		3:10:19:19	6134433	0					
ANR	6134442	ExpressionStatement	c = * str	137:2:3987:3995	6134433	0	True				
ANR	6134443	AssignmentExpression	c = * str		6134433	0		=			
ANR	6134444	Identifier	c		6134433	0					
ANR	6134445	UnaryOperationExpression	* str		6134433	1					
ANR	6134446	UnaryOperator	*		6134433	0					
ANR	6134447	Identifier	str		6134433	1					
ANR	6134448	IfStatement	if ( c == '\\0' )		6134433	1					
ANR	6134449	Condition	c == '\\0'	138:6:4003:4011	6134433	0	True				
ANR	6134450	EqualityExpression	c == '\\0'		6134433	0		==			
ANR	6134451	Identifier	c		6134433	0					
ANR	6134452	PrimaryExpression	'\\0'		6134433	1					
ANR	6134453	CompoundStatement		5:17:50:50	6134433	1					
ANR	6134454	BreakStatement	break ;	139:3:4019:4024	6134433	0	True				
ANR	6134455	ExpressionStatement	"cstr_ccat ( cstr , c )"	141:2:4032:4051	6134433	2	True				
ANR	6134456	CallExpression	"cstr_ccat ( cstr , c )"		6134433	0					
ANR	6134457	Callee	cstr_ccat		6134433	0					
ANR	6134458	Identifier	cstr_ccat		6134433	0					
ANR	6134459	ArgumentList	cstr		6134433	1					
ANR	6134460	Argument	cstr		6134433	0					
ANR	6134461	Identifier	cstr		6134433	0					
ANR	6134462	Argument	c		6134433	1					
ANR	6134463	Identifier	c		6134433	0					
ANR	6134464	ExpressionStatement	str ++	142:2:4055:4060	6134433	3	True				
ANR	6134465	PostIncDecOperationExpression	str ++		6134433	0					
ANR	6134466	Identifier	str		6134433	0					
ANR	6134467	IncDec	++		6134433	1					
ANR	6134468	ReturnType	ST_FUNC void		6134433	1					
ANR	6134469	Identifier	cstr_cat		6134433	2					
ANR	6134470	ParameterList	"CString * cstr , const char * str"		6134433	3					
ANR	6134471	Parameter	CString * cstr	133:22:3931:3943	6134433	0	True				
ANR	6134472	ParameterType	CString *		6134433	0					
ANR	6134473	Identifier	cstr		6134433	1					
ANR	6134474	Parameter	const char * str	133:37:3946:3960	6134433	1	True				
ANR	6134475	ParameterType	const char *		6134433	0					
ANR	6134476	Identifier	str		6134433	1					
ANR	6134477	CFGEntryNode	ENTRY		6134433		True				
ANR	6134478	CFGExitNode	EXIT		6134433		True				
ANR	6134479	InfiniteForNode	true		6134433		True				
ANR	6134480	Symbol	cstr		6134433						
ANR	6134481	Symbol	str		6134433						
ANR	6134482	Symbol	c		6134433						
ANR	6134483	Symbol	* str		6134433						
ANR	6134484	Function	cstr_wccat	147:0:4090:4357							
ANR	6134485	FunctionDef	"cstr_wccat (CString * cstr , int ch)"		6134484	0					
ANR	6134486	CompoundStatement		148:0:4137:4357	6134484	0					
ANR	6134487	IdentifierDeclStatement	int size ;	149:1:4140:4148	6134484	0	True				
ANR	6134488	IdentifierDecl	size		6134484	0					
ANR	6134489	IdentifierDeclType	int		6134484	0					
ANR	6134490	Identifier	size		6134484	1					
ANR	6134491	ExpressionStatement	size = cstr -> size + sizeof ( nwchar_t )	150:1:4151:4187	6134484	1	True				
ANR	6134492	AssignmentExpression	size = cstr -> size + sizeof ( nwchar_t )		6134484	0		=			
ANR	6134493	Identifier	size		6134484	0					
ANR	6134494	AdditiveExpression	cstr -> size + sizeof ( nwchar_t )		6134484	1		+			
ANR	6134495	PtrMemberAccess	cstr -> size		6134484	0					
ANR	6134496	Identifier	cstr		6134484	0					
ANR	6134497	Identifier	size		6134484	1					
ANR	6134498	SizeofExpression	sizeof ( nwchar_t )		6134484	1					
ANR	6134499	Sizeof	sizeof		6134484	0					
ANR	6134500	SizeofOperand	nwchar_t		6134484	1					
ANR	6134501	IfStatement	if ( size > cstr -> size_allocated )		6134484	2					
ANR	6134502	Condition	size > cstr -> size_allocated	151:5:4194:4220	6134484	0	True				
ANR	6134503	RelationalExpression	size > cstr -> size_allocated		6134484	0		>			
ANR	6134504	Identifier	size		6134484	0					
ANR	6134505	PtrMemberAccess	cstr -> size_allocated		6134484	1					
ANR	6134506	Identifier	cstr		6134484	0					
ANR	6134507	Identifier	size_allocated		6134484	1					
ANR	6134508	CompoundStatement		4:34:85:85	6134484	1					
ANR	6134509	ExpressionStatement	"cstr_realloc ( cstr , size )"	152:2:4227:4252	6134484	0	True				
ANR	6134510	CallExpression	"cstr_realloc ( cstr , size )"		6134484	0					
ANR	6134511	Callee	cstr_realloc		6134484	0					
ANR	6134512	Identifier	cstr_realloc		6134484	0					
ANR	6134513	ArgumentList	cstr		6134484	1					
ANR	6134514	Argument	cstr		6134484	0					
ANR	6134515	Identifier	cstr		6134484	0					
ANR	6134516	Argument	size		6134484	1					
ANR	6134517	Identifier	size		6134484	0					
ANR	6134518	ExpressionStatement	* ( nwchar_t * ) ( ( ( unsigned char * ) cstr -> data ) + size - sizeof ( nwchar_t ) ) = ch	154:1:4258:4335	6134484	3	True				
ANR	6134519	AssignmentExpression	* ( nwchar_t * ) ( ( ( unsigned char * ) cstr -> data ) + size - sizeof ( nwchar_t ) ) = ch		6134484	0		=			
ANR	6134520	UnaryOperationExpression	* ( nwchar_t * ) ( ( ( unsigned char * ) cstr -> data ) + size - sizeof ( nwchar_t ) )		6134484	0					
ANR	6134521	UnaryOperator	*		6134484	0					
ANR	6134522	CastExpression	( nwchar_t * ) ( ( ( unsigned char * ) cstr -> data ) + size - sizeof ( nwchar_t ) )		6134484	1					
ANR	6134523	CastTarget	nwchar_t *		6134484	0					
ANR	6134524	AdditiveExpression	( ( unsigned char * ) cstr -> data ) + size - sizeof ( nwchar_t )		6134484	1		+			
ANR	6134525	CastExpression	( unsigned char * ) cstr -> data		6134484	0					
ANR	6134526	CastTarget	unsigned char *		6134484	0					
ANR	6134527	PtrMemberAccess	cstr -> data		6134484	1					
ANR	6134528	Identifier	cstr		6134484	0					
ANR	6134529	Identifier	data		6134484	1					
ANR	6134530	AdditiveExpression	size - sizeof ( nwchar_t )		6134484	1		-			
ANR	6134531	Identifier	size		6134484	0					
ANR	6134532	SizeofExpression	sizeof ( nwchar_t )		6134484	1					
ANR	6134533	Sizeof	sizeof		6134484	0					
ANR	6134534	SizeofOperand	nwchar_t		6134484	1					
ANR	6134535	Identifier	ch		6134484	1					
ANR	6134536	ExpressionStatement	cstr -> size = size	155:1:4338:4355	6134484	4	True				
ANR	6134537	AssignmentExpression	cstr -> size = size		6134484	0		=			
ANR	6134538	PtrMemberAccess	cstr -> size		6134484	0					
ANR	6134539	Identifier	cstr		6134484	0					
ANR	6134540	Identifier	size		6134484	1					
ANR	6134541	Identifier	size		6134484	1					
ANR	6134542	ReturnType	ST_FUNC void		6134484	1					
ANR	6134543	Identifier	cstr_wccat		6134484	2					
ANR	6134544	ParameterList	"CString * cstr , int ch"		6134484	3					
ANR	6134545	Parameter	CString * cstr	147:24:4114:4126	6134484	0	True				
ANR	6134546	ParameterType	CString *		6134484	0					
ANR	6134547	Identifier	cstr		6134484	1					
ANR	6134548	Parameter	int ch	147:39:4129:4134	6134484	1	True				
ANR	6134549	ParameterType	int		6134484	0					
ANR	6134550	Identifier	ch		6134484	1					
ANR	6134551	CFGEntryNode	ENTRY		6134484		True				
ANR	6134552	CFGExitNode	EXIT		6134484		True				
ANR	6134553	Symbol	cstr		6134484						
ANR	6134554	Symbol	cstr -> size_allocated		6134484						
ANR	6134555	Symbol	* size		6134484						
ANR	6134556	Symbol	* ( nwchar_t * ) ( ( ( unsigned char * ) cstr -> data ) + size - sizeof ( nwchar_t ) )		6134484						
ANR	6134557	Symbol	size		6134484						
ANR	6134558	Symbol	ch		6134484						
ANR	6134559	Symbol	* cstr		6134484						
ANR	6134560	Symbol	cstr -> data		6134484						
ANR	6134561	Symbol	cstr -> size		6134484						
ANR	6134562	Symbol	* cstr -> data		6134484						
ANR	6134563	Symbol	* * cstr		6134484						
ANR	6134564	Function	cstr_new	158:0:4360:4435							
ANR	6134565	FunctionDef	cstr_new (CString * cstr)		6134564	0					
ANR	6134566	CompoundStatement		159:0:4397:4435	6134564	0					
ANR	6134567	ExpressionStatement	"memset ( cstr , 0 , sizeof ( CString ) )"	160:1:4400:4433	6134564	0	True				
ANR	6134568	CallExpression	"memset ( cstr , 0 , sizeof ( CString ) )"		6134564	0					
ANR	6134569	Callee	memset		6134564	0					
ANR	6134570	Identifier	memset		6134564	0					
ANR	6134571	ArgumentList	cstr		6134564	1					
ANR	6134572	Argument	cstr		6134564	0					
ANR	6134573	Identifier	cstr		6134564	0					
ANR	6134574	Argument	0		6134564	1					
ANR	6134575	PrimaryExpression	0		6134564	0					
ANR	6134576	Argument	sizeof ( CString )		6134564	2					
ANR	6134577	SizeofExpression	sizeof ( CString )		6134564	0					
ANR	6134578	Sizeof	sizeof		6134564	0					
ANR	6134579	SizeofOperand	CString		6134564	1					
ANR	6134580	ReturnType	ST_FUNC void		6134564	1					
ANR	6134581	Identifier	cstr_new		6134564	2					
ANR	6134582	ParameterList	CString * cstr		6134564	3					
ANR	6134583	Parameter	CString * cstr	158:22:4382:4394	6134564	0	True				
ANR	6134584	ParameterType	CString *		6134564	0					
ANR	6134585	Identifier	cstr		6134564	1					
ANR	6134586	CFGEntryNode	ENTRY		6134564		True				
ANR	6134587	CFGExitNode	EXIT		6134564		True				
ANR	6134588	Symbol	cstr		6134564						
ANR	6134589	Function	cstr_free	164:0:4477:4565							
ANR	6134590	FunctionDef	cstr_free (CString * cstr)		6134589	0					
ANR	6134591	CompoundStatement		165:0:4515:4565	6134589	0					
ANR	6134592	ExpressionStatement	free ( cstr -> data_allocated )	166:1:4518:4545	6134589	0	True				
ANR	6134593	CallExpression	free ( cstr -> data_allocated )		6134589	0					
ANR	6134594	Callee	free		6134589	0					
ANR	6134595	Identifier	free		6134589	0					
ANR	6134596	ArgumentList	cstr -> data_allocated		6134589	1					
ANR	6134597	Argument	cstr -> data_allocated		6134589	0					
ANR	6134598	PtrMemberAccess	cstr -> data_allocated		6134589	0					
ANR	6134599	Identifier	cstr		6134589	0					
ANR	6134600	Identifier	data_allocated		6134589	1					
ANR	6134601	ExpressionStatement	cstr_new ( cstr )	167:1:4548:4563	6134589	1	True				
ANR	6134602	CallExpression	cstr_new ( cstr )		6134589	0					
ANR	6134603	Callee	cstr_new		6134589	0					
ANR	6134604	Identifier	cstr_new		6134589	0					
ANR	6134605	ArgumentList	cstr		6134589	1					
ANR	6134606	Argument	cstr		6134589	0					
ANR	6134607	Identifier	cstr		6134589	0					
ANR	6134608	ReturnType	ST_FUNC void		6134589	1					
ANR	6134609	Identifier	cstr_free		6134589	2					
ANR	6134610	ParameterList	CString * cstr		6134589	3					
ANR	6134611	Parameter	CString * cstr	164:23:4500:4512	6134589	0	True				
ANR	6134612	ParameterType	CString *		6134589	0					
ANR	6134613	Identifier	cstr		6134589	1					
ANR	6134614	CFGEntryNode	ENTRY		6134589		True				
ANR	6134615	CFGExitNode	EXIT		6134589		True				
ANR	6134616	Symbol	cstr		6134589						
ANR	6134617	Symbol	* cstr		6134589						
ANR	6134618	Symbol	cstr -> data_allocated		6134589						
ANR	6134619	Function	cstr_reset	171:0:4596:4654							
ANR	6134620	FunctionDef	cstr_reset (CString * cstr)		6134619	0					
ANR	6134621	CompoundStatement		172:0:4635:4654	6134619	0					
ANR	6134622	ExpressionStatement	cstr -> size = 0	173:1:4638:4652	6134619	0	True				
ANR	6134623	AssignmentExpression	cstr -> size = 0		6134619	0		=			
ANR	6134624	PtrMemberAccess	cstr -> size		6134619	0					
ANR	6134625	Identifier	cstr		6134619	0					
ANR	6134626	Identifier	size		6134619	1					
ANR	6134627	PrimaryExpression	0		6134619	1					
ANR	6134628	ReturnType	ST_FUNC void		6134619	1					
ANR	6134629	Identifier	cstr_reset		6134619	2					
ANR	6134630	ParameterList	CString * cstr		6134619	3					
ANR	6134631	Parameter	CString * cstr	171:24:4620:4632	6134619	0	True				
ANR	6134632	ParameterType	CString *		6134619	0					
ANR	6134633	Identifier	cstr		6134619	1					
ANR	6134634	CFGEntryNode	ENTRY		6134619		True				
ANR	6134635	CFGExitNode	EXIT		6134619		True				
ANR	6134636	Symbol	cstr		6134619						
ANR	6134637	Symbol	* cstr		6134619						
ANR	6134638	Symbol	cstr -> size		6134619						
ANR	6134639	Function	add_char	177:0:4678:5121							
ANR	6134640	FunctionDef	"add_char (CString * cstr , int c)"		6134639	0					
ANR	6134641	CompoundStatement		178:0:4721:5121	6134639	0					
ANR	6134642	IfStatement	"if ( c == '\\'' || c == '\\""' || c == '\\\\' )"		6134639	0					
ANR	6134643	Condition	"c == '\\'' || c == '\\""' || c == '\\\\'"	179:5:4728:4762	6134639	0	True				
ANR	6134644	OrExpression	"c == '\\'' || c == '\\""' || c == '\\\\'"		6134639	0		||			
ANR	6134645	EqualityExpression	c == '\\''		6134639	0		==			
ANR	6134646	Identifier	c		6134639	0					
ANR	6134647	PrimaryExpression	'\\''		6134639	1					
ANR	6134648	OrExpression	"c == '\\""' || c == '\\\\'"		6134639	1		||			
ANR	6134649	EqualityExpression	"c == '\\""'"		6134639	0		==			
ANR	6134650	Identifier	c		6134639	0					
ANR	6134651	PrimaryExpression	"'\\""'"		6134639	1					
ANR	6134652	EqualityExpression	c == '\\\\'		6134639	1		==			
ANR	6134653	Identifier	c		6134639	0					
ANR	6134654	PrimaryExpression	'\\\\'		6134639	1					
ANR	6134655	CompoundStatement		2:42:43:43	6134639	1					
ANR	6134656	ExpressionStatement	"cstr_ccat ( cstr , '\\\\' )"	181:2:4822:4844	6134639	0	True				
ANR	6134657	CallExpression	"cstr_ccat ( cstr , '\\\\' )"		6134639	0					
ANR	6134658	Callee	cstr_ccat		6134639	0					
ANR	6134659	Identifier	cstr_ccat		6134639	0					
ANR	6134660	ArgumentList	cstr		6134639	1					
ANR	6134661	Argument	cstr		6134639	0					
ANR	6134662	Identifier	cstr		6134639	0					
ANR	6134663	Argument	'\\\\'		6134639	1					
ANR	6134664	PrimaryExpression	'\\\\'		6134639	0					
ANR	6134665	IfStatement	if ( c >= 32 && c <= 126 )		6134639	1					
ANR	6134666	Condition	c >= 32 && c <= 126	183:5:4854:4872	6134639	0	True				
ANR	6134667	AndExpression	c >= 32 && c <= 126		6134639	0		&&			
ANR	6134668	RelationalExpression	c >= 32		6134639	0		>=			
ANR	6134669	Identifier	c		6134639	0					
ANR	6134670	PrimaryExpression	32		6134639	1					
ANR	6134671	RelationalExpression	c <= 126		6134639	1		<=			
ANR	6134672	Identifier	c		6134639	0					
ANR	6134673	PrimaryExpression	126		6134639	1					
ANR	6134674	CompoundStatement		6:26:153:153	6134639	1					
ANR	6134675	ExpressionStatement	"cstr_ccat ( cstr , c )"	184:2:4879:4898	6134639	0	True				
ANR	6134676	CallExpression	"cstr_ccat ( cstr , c )"		6134639	0					
ANR	6134677	Callee	cstr_ccat		6134639	0					
ANR	6134678	Identifier	cstr_ccat		6134639	0					
ANR	6134679	ArgumentList	cstr		6134639	1					
ANR	6134680	Argument	cstr		6134639	0					
ANR	6134681	Identifier	cstr		6134639	0					
ANR	6134682	Argument	c		6134639	1					
ANR	6134683	Identifier	c		6134639	0					
ANR	6134684	ElseStatement	else		6134639	0					
ANR	6134685	CompoundStatement		8:8:186:186	6134639	0					
ANR	6134686	ExpressionStatement	"cstr_ccat ( cstr , '\\\\' )"	186:2:4912:4934	6134639	0	True				
ANR	6134687	CallExpression	"cstr_ccat ( cstr , '\\\\' )"		6134639	0					
ANR	6134688	Callee	cstr_ccat		6134639	0					
ANR	6134689	Identifier	cstr_ccat		6134639	0					
ANR	6134690	ArgumentList	cstr		6134639	1					
ANR	6134691	Argument	cstr		6134639	0					
ANR	6134692	Identifier	cstr		6134639	0					
ANR	6134693	Argument	'\\\\'		6134639	1					
ANR	6134694	PrimaryExpression	'\\\\'		6134639	0					
ANR	6134695	IfStatement	if ( c == '\\n' )		6134639	1					
ANR	6134696	Condition	c == '\\n'	187:6:4942:4950	6134639	0	True				
ANR	6134697	EqualityExpression	c == '\\n'		6134639	0		==			
ANR	6134698	Identifier	c		6134639	0					
ANR	6134699	PrimaryExpression	'\\n'		6134639	1					
ANR	6134700	CompoundStatement		10:17:231:231	6134639	1					
ANR	6134701	ExpressionStatement	"cstr_ccat ( cstr , 'n' )"	188:3:4958:4979	6134639	0	True				
ANR	6134702	CallExpression	"cstr_ccat ( cstr , 'n' )"		6134639	0					
ANR	6134703	Callee	cstr_ccat		6134639	0					
ANR	6134704	Identifier	cstr_ccat		6134639	0					
ANR	6134705	ArgumentList	cstr		6134639	1					
ANR	6134706	Argument	cstr		6134639	0					
ANR	6134707	Identifier	cstr		6134639	0					
ANR	6134708	Argument	'n'		6134639	1					
ANR	6134709	PrimaryExpression	'n'		6134639	0					
ANR	6134710	ElseStatement	else		6134639	0					
ANR	6134711	CompoundStatement		12:9:268:268	6134639	0					
ANR	6134712	ExpressionStatement	"cstr_ccat ( cstr , '0' + ( ( c >> 6 ) & 7 ) )"	190:3:4995:5033	6134639	0	True				
ANR	6134713	CallExpression	"cstr_ccat ( cstr , '0' + ( ( c >> 6 ) & 7 ) )"		6134639	0					
ANR	6134714	Callee	cstr_ccat		6134639	0					
ANR	6134715	Identifier	cstr_ccat		6134639	0					
ANR	6134716	ArgumentList	cstr		6134639	1					
ANR	6134717	Argument	cstr		6134639	0					
ANR	6134718	Identifier	cstr		6134639	0					
ANR	6134719	Argument	'0' + ( ( c >> 6 ) & 7 )		6134639	1					
ANR	6134720	AdditiveExpression	'0' + ( ( c >> 6 ) & 7 )		6134639	0		+			
ANR	6134721	PrimaryExpression	'0'		6134639	0					
ANR	6134722	BitAndExpression	( c >> 6 ) & 7		6134639	1		&			
ANR	6134723	ShiftExpression	c >> 6		6134639	0		>>			
ANR	6134724	Identifier	c		6134639	0					
ANR	6134725	PrimaryExpression	6		6134639	1					
ANR	6134726	PrimaryExpression	7		6134639	1					
ANR	6134727	ExpressionStatement	"cstr_ccat ( cstr , '0' + ( ( c >> 3 ) & 7 ) )"	191:3:5038:5076	6134639	1	True				
ANR	6134728	CallExpression	"cstr_ccat ( cstr , '0' + ( ( c >> 3 ) & 7 ) )"		6134639	0					
ANR	6134729	Callee	cstr_ccat		6134639	0					
ANR	6134730	Identifier	cstr_ccat		6134639	0					
ANR	6134731	ArgumentList	cstr		6134639	1					
ANR	6134732	Argument	cstr		6134639	0					
ANR	6134733	Identifier	cstr		6134639	0					
ANR	6134734	Argument	'0' + ( ( c >> 3 ) & 7 )		6134639	1					
ANR	6134735	AdditiveExpression	'0' + ( ( c >> 3 ) & 7 )		6134639	0		+			
ANR	6134736	PrimaryExpression	'0'		6134639	0					
ANR	6134737	BitAndExpression	( c >> 3 ) & 7		6134639	1		&			
ANR	6134738	ShiftExpression	c >> 3		6134639	0		>>			
ANR	6134739	Identifier	c		6134639	0					
ANR	6134740	PrimaryExpression	3		6134639	1					
ANR	6134741	PrimaryExpression	7		6134639	1					
ANR	6134742	ExpressionStatement	"cstr_ccat ( cstr , '0' + ( c & 7 ) )"	192:3:5081:5112	6134639	2	True				
ANR	6134743	CallExpression	"cstr_ccat ( cstr , '0' + ( c & 7 ) )"		6134639	0					
ANR	6134744	Callee	cstr_ccat		6134639	0					
ANR	6134745	Identifier	cstr_ccat		6134639	0					
ANR	6134746	ArgumentList	cstr		6134639	1					
ANR	6134747	Argument	cstr		6134639	0					
ANR	6134748	Identifier	cstr		6134639	0					
ANR	6134749	Argument	'0' + ( c & 7 )		6134639	1					
ANR	6134750	AdditiveExpression	'0' + ( c & 7 )		6134639	0		+			
ANR	6134751	PrimaryExpression	'0'		6134639	0					
ANR	6134752	BitAndExpression	c & 7		6134639	1		&			
ANR	6134753	Identifier	c		6134639	0					
ANR	6134754	PrimaryExpression	7		6134639	1					
ANR	6134755	ReturnType	static void		6134639	1					
ANR	6134756	Identifier	add_char		6134639	2					
ANR	6134757	ParameterList	"CString * cstr , int c"		6134639	3					
ANR	6134758	Parameter	CString * cstr	177:21:4699:4711	6134639	0	True				
ANR	6134759	ParameterType	CString *		6134639	0					
ANR	6134760	Identifier	cstr		6134639	1					
ANR	6134761	Parameter	int c	177:36:4714:4718	6134639	1	True				
ANR	6134762	ParameterType	int		6134639	0					
ANR	6134763	Identifier	c		6134639	1					
ANR	6134764	CFGEntryNode	ENTRY		6134639		True				
ANR	6134765	CFGExitNode	EXIT		6134639		True				
ANR	6134766	Symbol	cstr		6134639						
ANR	6134767	Symbol	c		6134639						
ANR	6134768	Function	tok_alloc_new	199:0:5231:5909							
ANR	6134769	FunctionDef	"tok_alloc_new (TokenSym * * pts , const char * str , int len)"		6134768	0					
ANR	6134770	CompoundStatement		200:0:5304:5909	6134768	0					
ANR	6134771	IdentifierDeclStatement	"TokenSym * ts , * * ptable ;"	201:1:5307:5329	6134768	0	True				
ANR	6134772	IdentifierDecl	* ts		6134768	0					
ANR	6134773	IdentifierDeclType	TokenSym *		6134768	0					
ANR	6134774	Identifier	ts		6134768	1					
ANR	6134775	IdentifierDecl	* * ptable		6134768	1					
ANR	6134776	IdentifierDeclType	TokenSym * *		6134768	0					
ANR	6134777	Identifier	ptable		6134768	1					
ANR	6134778	IdentifierDeclStatement	int i ;	202:1:5332:5337	6134768	1	True				
ANR	6134779	IdentifierDecl	i		6134768	0					
ANR	6134780	IdentifierDeclType	int		6134768	0					
ANR	6134781	Identifier	i		6134768	1					
ANR	6134782	IfStatement	if ( tok_ident >= SYM_FIRST_ANOM )		6134768	2					
ANR	6134783	Condition	tok_ident >= SYM_FIRST_ANOM	204:5:5345:5371	6134768	0	True				
ANR	6134784	RelationalExpression	tok_ident >= SYM_FIRST_ANOM		6134768	0		>=			
ANR	6134785	Identifier	tok_ident		6134768	0					
ANR	6134786	Identifier	SYM_FIRST_ANOM		6134768	1					
ANR	6134787	CompoundStatement		5:34:69:69	6134768	1					
ANR	6134788	ExpressionStatement	"tcc_error ( ""memory full"" )"	205:2:5378:5403	6134768	0	True				
ANR	6134789	CallExpression	"tcc_error ( ""memory full"" )"		6134768	0					
ANR	6134790	Callee	tcc_error		6134768	0					
ANR	6134791	Identifier	tcc_error		6134768	0					
ANR	6134792	ArgumentList	"""memory full"""		6134768	1					
ANR	6134793	Argument	"""memory full"""		6134768	0					
ANR	6134794	PrimaryExpression	"""memory full"""		6134768	0					
ANR	6134795	ExpressionStatement	i = tok_ident - TOK_IDENT	209:1:5446:5471	6134768	3	True				
ANR	6134796	AssignmentExpression	i = tok_ident - TOK_IDENT		6134768	0		=			
ANR	6134797	Identifier	i		6134768	0					
ANR	6134798	AdditiveExpression	tok_ident - TOK_IDENT		6134768	1		-			
ANR	6134799	Identifier	tok_ident		6134768	0					
ANR	6134800	Identifier	TOK_IDENT		6134768	1					
ANR	6134801	IfStatement	if ( ( i % TOK_ALLOC_INCR ) == 0 )		6134768	4					
ANR	6134802	Condition	( i % TOK_ALLOC_INCR ) == 0	210:5:5478:5502	6134768	0	True				
ANR	6134803	EqualityExpression	( i % TOK_ALLOC_INCR ) == 0		6134768	0		==			
ANR	6134804	MultiplicativeExpression	i % TOK_ALLOC_INCR		6134768	0		%			
ANR	6134805	Identifier	i		6134768	0					
ANR	6134806	Identifier	TOK_ALLOC_INCR		6134768	1					
ANR	6134807	PrimaryExpression	0		6134768	1					
ANR	6134808	CompoundStatement		11:32:200:200	6134768	1					
ANR	6134809	ExpressionStatement	"ptable = realloc ( table_ident , ( i + TOK_ALLOC_INCR ) * sizeof ( TokenSym * ) )"	211:2:5509:5582	6134768	0	True				
ANR	6134810	AssignmentExpression	"ptable = realloc ( table_ident , ( i + TOK_ALLOC_INCR ) * sizeof ( TokenSym * ) )"		6134768	0		=			
ANR	6134811	Identifier	ptable		6134768	0					
ANR	6134812	CallExpression	"realloc ( table_ident , ( i + TOK_ALLOC_INCR ) * sizeof ( TokenSym * ) )"		6134768	1					
ANR	6134813	Callee	realloc		6134768	0					
ANR	6134814	Identifier	realloc		6134768	0					
ANR	6134815	ArgumentList	table_ident		6134768	1					
ANR	6134816	Argument	table_ident		6134768	0					
ANR	6134817	Identifier	table_ident		6134768	0					
ANR	6134818	Argument	( i + TOK_ALLOC_INCR ) * sizeof ( TokenSym * )		6134768	1					
ANR	6134819	MultiplicativeExpression	( i + TOK_ALLOC_INCR ) * sizeof ( TokenSym * )		6134768	0		*			
ANR	6134820	AdditiveExpression	i + TOK_ALLOC_INCR		6134768	0		+			
ANR	6134821	Identifier	i		6134768	0					
ANR	6134822	Identifier	TOK_ALLOC_INCR		6134768	1					
ANR	6134823	SizeofExpression	sizeof ( TokenSym * )		6134768	1					
ANR	6134824	Sizeof	sizeof		6134768	0					
ANR	6134825	SizeofOperand	TokenSym *		6134768	1					
ANR	6134826	ExpressionStatement	table_ident = ptable	212:2:5586:5606	6134768	1	True				
ANR	6134827	AssignmentExpression	table_ident = ptable		6134768	0		=			
ANR	6134828	Identifier	table_ident		6134768	0					
ANR	6134829	Identifier	ptable		6134768	1					
ANR	6134830	ExpressionStatement	ts = malloc ( sizeof ( TokenSym ) + len )	214:1:5612:5648	6134768	5	True				
ANR	6134831	AssignmentExpression	ts = malloc ( sizeof ( TokenSym ) + len )		6134768	0		=			
ANR	6134832	Identifier	ts		6134768	0					
ANR	6134833	CallExpression	malloc ( sizeof ( TokenSym ) + len )		6134768	1					
ANR	6134834	Callee	malloc		6134768	0					
ANR	6134835	Identifier	malloc		6134768	0					
ANR	6134836	ArgumentList	sizeof ( TokenSym ) + len		6134768	1					
ANR	6134837	Argument	sizeof ( TokenSym ) + len		6134768	0					
ANR	6134838	AdditiveExpression	sizeof ( TokenSym ) + len		6134768	0		+			
ANR	6134839	SizeofExpression	sizeof ( TokenSym )		6134768	0					
ANR	6134840	Sizeof	sizeof		6134768	0					
ANR	6134841	SizeofOperand	TokenSym		6134768	1					
ANR	6134842	Identifier	len		6134768	1					
ANR	6134843	ExpressionStatement	table_ident [ i ] = ts	215:1:5651:5670	6134768	6	True				
ANR	6134844	AssignmentExpression	table_ident [ i ] = ts		6134768	0		=			
ANR	6134845	ArrayIndexing	table_ident [ i ]		6134768	0					
ANR	6134846	Identifier	table_ident		6134768	0					
ANR	6134847	Identifier	i		6134768	1					
ANR	6134848	Identifier	ts		6134768	1					
ANR	6134849	ExpressionStatement	ts -> tok = tok_ident ++	216:1:5673:5694	6134768	7	True				
ANR	6134850	AssignmentExpression	ts -> tok = tok_ident ++		6134768	0		=			
ANR	6134851	PtrMemberAccess	ts -> tok		6134768	0					
ANR	6134852	Identifier	ts		6134768	0					
ANR	6134853	Identifier	tok		6134768	1					
ANR	6134854	PostIncDecOperationExpression	tok_ident ++		6134768	1					
ANR	6134855	Identifier	tok_ident		6134768	0					
ANR	6134856	IncDec	++		6134768	1					
ANR	6134857	ExpressionStatement	ts -> sym_define = NULL	217:1:5697:5718	6134768	8	True				
ANR	6134858	AssignmentExpression	ts -> sym_define = NULL		6134768	0		=			
ANR	6134859	PtrMemberAccess	ts -> sym_define		6134768	0					
ANR	6134860	Identifier	ts		6134768	0					
ANR	6134861	Identifier	sym_define		6134768	1					
ANR	6134862	Identifier	NULL		6134768	1					
ANR	6134863	ExpressionStatement	ts -> sym_label = NULL	218:1:5721:5741	6134768	9	True				
ANR	6134864	AssignmentExpression	ts -> sym_label = NULL		6134768	0		=			
ANR	6134865	PtrMemberAccess	ts -> sym_label		6134768	0					
ANR	6134866	Identifier	ts		6134768	0					
ANR	6134867	Identifier	sym_label		6134768	1					
ANR	6134868	Identifier	NULL		6134768	1					
ANR	6134869	ExpressionStatement	ts -> sym_struct = NULL	219:1:5744:5765	6134768	10	True				
ANR	6134870	AssignmentExpression	ts -> sym_struct = NULL		6134768	0		=			
ANR	6134871	PtrMemberAccess	ts -> sym_struct		6134768	0					
ANR	6134872	Identifier	ts		6134768	0					
ANR	6134873	Identifier	sym_struct		6134768	1					
ANR	6134874	Identifier	NULL		6134768	1					
ANR	6134875	ExpressionStatement	ts -> sym_identifier = NULL	220:1:5768:5793	6134768	11	True				
ANR	6134876	AssignmentExpression	ts -> sym_identifier = NULL		6134768	0		=			
ANR	6134877	PtrMemberAccess	ts -> sym_identifier		6134768	0					
ANR	6134878	Identifier	ts		6134768	0					
ANR	6134879	Identifier	sym_identifier		6134768	1					
ANR	6134880	Identifier	NULL		6134768	1					
ANR	6134881	ExpressionStatement	ts -> len = len	221:1:5796:5809	6134768	12	True				
ANR	6134882	AssignmentExpression	ts -> len = len		6134768	0		=			
ANR	6134883	PtrMemberAccess	ts -> len		6134768	0					
ANR	6134884	Identifier	ts		6134768	0					
ANR	6134885	Identifier	len		6134768	1					
ANR	6134886	Identifier	len		6134768	1					
ANR	6134887	ExpressionStatement	ts -> hash_next = NULL	222:1:5812:5832	6134768	13	True				
ANR	6134888	AssignmentExpression	ts -> hash_next = NULL		6134768	0		=			
ANR	6134889	PtrMemberAccess	ts -> hash_next		6134768	0					
ANR	6134890	Identifier	ts		6134768	0					
ANR	6134891	Identifier	hash_next		6134768	1					
ANR	6134892	Identifier	NULL		6134768	1					
ANR	6134893	ExpressionStatement	"memcpy ( ts -> str , str , len )"	223:1:5835:5861	6134768	14	True				
ANR	6134894	CallExpression	"memcpy ( ts -> str , str , len )"		6134768	0					
ANR	6134895	Callee	memcpy		6134768	0					
ANR	6134896	Identifier	memcpy		6134768	0					
ANR	6134897	ArgumentList	ts -> str		6134768	1					
ANR	6134898	Argument	ts -> str		6134768	0					
ANR	6134899	PtrMemberAccess	ts -> str		6134768	0					
ANR	6134900	Identifier	ts		6134768	0					
ANR	6134901	Identifier	str		6134768	1					
ANR	6134902	Argument	str		6134768	1					
ANR	6134903	Identifier	str		6134768	0					
ANR	6134904	Argument	len		6134768	2					
ANR	6134905	Identifier	len		6134768	0					
ANR	6134906	ExpressionStatement	ts -> str [ len ] = '\\0'	224:1:5864:5883	6134768	15	True				
ANR	6134907	AssignmentExpression	ts -> str [ len ] = '\\0'		6134768	0		=			
ANR	6134908	ArrayIndexing	ts -> str [ len ]		6134768	0					
ANR	6134909	PtrMemberAccess	ts -> str		6134768	0					
ANR	6134910	Identifier	ts		6134768	0					
ANR	6134911	Identifier	str		6134768	1					
ANR	6134912	Identifier	len		6134768	1					
ANR	6134913	PrimaryExpression	'\\0'		6134768	1					
ANR	6134914	ExpressionStatement	* pts = ts	225:1:5886:5895	6134768	16	True				
ANR	6134915	AssignmentExpression	* pts = ts		6134768	0		=			
ANR	6134916	UnaryOperationExpression	* pts		6134768	0					
ANR	6134917	UnaryOperator	*		6134768	0					
ANR	6134918	Identifier	pts		6134768	1					
ANR	6134919	Identifier	ts		6134768	1					
ANR	6134920	ReturnStatement	return ts ;	226:1:5898:5907	6134768	17	True				
ANR	6134921	Identifier	ts		6134768	0					
ANR	6134922	ReturnType	static TokenSym *		6134768	1					
ANR	6134923	Identifier	tok_alloc_new		6134768	2					
ANR	6134924	ParameterList	"TokenSym * * pts , const char * str , int len"		6134768	3					
ANR	6134925	Parameter	TokenSym * * pts	199:31:5262:5275	6134768	0	True				
ANR	6134926	ParameterType	TokenSym * *		6134768	0					
ANR	6134927	Identifier	pts		6134768	1					
ANR	6134928	Parameter	const char * str	199:47:5278:5292	6134768	1	True				
ANR	6134929	ParameterType	const char *		6134768	0					
ANR	6134930	Identifier	str		6134768	1					
ANR	6134931	Parameter	int len	199:64:5295:5301	6134768	2	True				
ANR	6134932	ParameterType	int		6134768	0					
ANR	6134933	Identifier	len		6134768	1					
ANR	6134934	CFGEntryNode	ENTRY		6134768		True				
ANR	6134935	CFGExitNode	EXIT		6134768		True				
ANR	6134936	Symbol	TOK_ALLOC_INCR		6134768						
ANR	6134937	Symbol	realloc		6134768						
ANR	6134938	Symbol	* table_ident		6134768						
ANR	6134939	Symbol	ts -> len		6134768						
ANR	6134940	Symbol	len		6134768						
ANR	6134941	Symbol	ts -> tok		6134768						
ANR	6134942	Symbol	* pts		6134768						
ANR	6134943	Symbol	ts -> sym_identifier		6134768						
ANR	6134944	Symbol	malloc		6134768						
ANR	6134945	Symbol	SYM_FIRST_ANOM		6134768						
ANR	6134946	Symbol	NULL		6134768						
ANR	6134947	Symbol	TOK_IDENT		6134768						
ANR	6134948	Symbol	* ts -> str		6134768						
ANR	6134949	Symbol	* ts		6134768						
ANR	6134950	Symbol	ts -> sym_label		6134768						
ANR	6134951	Symbol	i		6134768						
ANR	6134952	Symbol	* * ts		6134768						
ANR	6134953	Symbol	pts		6134768						
ANR	6134954	Symbol	str		6134768						
ANR	6134955	Symbol	ts -> sym_define		6134768						
ANR	6134956	Symbol	ptable		6134768						
ANR	6134957	Symbol	table_ident		6134768						
ANR	6134958	Symbol	tok_ident		6134768						
ANR	6134959	Symbol	* i		6134768						
ANR	6134960	Symbol	ts -> str		6134768						
ANR	6134961	Symbol	ts -> sym_struct		6134768						
ANR	6134962	Symbol	ts -> hash_next		6134768						
ANR	6134963	Symbol	ts		6134768						
ANR	6134964	Symbol	* len		6134768						
ANR	6134965	Function	tok_alloc	233:0:6026:6479							
ANR	6134966	FunctionDef	"tok_alloc (const char * str , int len)"		6134965	0					
ANR	6134967	CompoundStatement		234:0:6080:6479	6134965	0					
ANR	6134968	IdentifierDeclStatement	"TokenSym * ts , * * pts ;"	235:1:6083:6102	6134965	0	True				
ANR	6134969	IdentifierDecl	* ts		6134965	0					
ANR	6134970	IdentifierDeclType	TokenSym *		6134965	0					
ANR	6134971	Identifier	ts		6134965	1					
ANR	6134972	IdentifierDecl	* * pts		6134965	1					
ANR	6134973	IdentifierDeclType	TokenSym * *		6134965	0					
ANR	6134974	Identifier	pts		6134965	1					
ANR	6134975	IdentifierDeclStatement	int i ;	236:1:6105:6110	6134965	1	True				
ANR	6134976	IdentifierDecl	i		6134965	0					
ANR	6134977	IdentifierDeclType	int		6134965	0					
ANR	6134978	Identifier	i		6134965	1					
ANR	6134979	IdentifierDeclStatement	unsigned int h ;	237:1:6113:6127	6134965	2	True				
ANR	6134980	IdentifierDecl	h		6134965	0					
ANR	6134981	IdentifierDeclType	unsigned int		6134965	0					
ANR	6134982	Identifier	h		6134965	1					
ANR	6134983	ExpressionStatement	h = TOK_HASH_INIT	239:1:6131:6148	6134965	3	True				
ANR	6134984	AssignmentExpression	h = TOK_HASH_INIT		6134965	0		=			
ANR	6134985	Identifier	h		6134965	0					
ANR	6134986	Identifier	TOK_HASH_INIT		6134965	1					
ANR	6134987	ForStatement	for ( i = 0 ; i < len ; i ++ )		6134965	4					
ANR	6134988	ForInit	i = 0 ;	240:6:6156:6161	6134965	0	True				
ANR	6134989	AssignmentExpression	i = 0		6134965	0		=			
ANR	6134990	Identifier	i		6134965	0					
ANR	6134991	PrimaryExpression	0		6134965	1					
ANR	6134992	Condition	i < len	240:13:6163:6169	6134965	1	True				
ANR	6134993	RelationalExpression	i < len		6134965	0		<			
ANR	6134994	Identifier	i		6134965	0					
ANR	6134995	Identifier	len		6134965	1					
ANR	6134996	PostIncDecOperationExpression	i ++	240:22:6172:6174	6134965	2	True				
ANR	6134997	Identifier	i		6134965	0					
ANR	6134998	IncDec	++		6134965	1					
ANR	6134999	CompoundStatement		7:27:96:96	6134965	3					
ANR	6135000	ExpressionStatement	"h = TOK_HASH_FUNC ( h , ( ( unsigned char * ) str ) [ i ] )"	241:2:6181:6230	6134965	0	True				
ANR	6135001	AssignmentExpression	"h = TOK_HASH_FUNC ( h , ( ( unsigned char * ) str ) [ i ] )"		6134965	0		=			
ANR	6135002	Identifier	h		6134965	0					
ANR	6135003	CallExpression	"TOK_HASH_FUNC ( h , ( ( unsigned char * ) str ) [ i ] )"		6134965	1					
ANR	6135004	Callee	TOK_HASH_FUNC		6134965	0					
ANR	6135005	Identifier	TOK_HASH_FUNC		6134965	0					
ANR	6135006	ArgumentList	h		6134965	1					
ANR	6135007	Argument	h		6134965	0					
ANR	6135008	Identifier	h		6134965	0					
ANR	6135009	Argument	( ( unsigned char * ) str ) [ i ]		6134965	1					
ANR	6135010	ArrayIndexing	( ( unsigned char * ) str ) [ i ]		6134965	0					
ANR	6135011	CastExpression	( unsigned char * ) str		6134965	0					
ANR	6135012	CastTarget	unsigned char *		6134965	0					
ANR	6135013	Identifier	str		6134965	1					
ANR	6135014	Identifier	i		6134965	1					
ANR	6135015	ExpressionStatement	h &= ( TOK_HASH_SIZE - 1 )	243:1:6236:6260	6134965	5	True				
ANR	6135016	AssignmentExpression	h &= ( TOK_HASH_SIZE - 1 )		6134965	0		&=			
ANR	6135017	Identifier	h		6134965	0					
ANR	6135018	AdditiveExpression	TOK_HASH_SIZE - 1		6134965	1		-			
ANR	6135019	Identifier	TOK_HASH_SIZE		6134965	0					
ANR	6135020	PrimaryExpression	1		6134965	1					
ANR	6135021	ExpressionStatement	pts = & hash_ident [ h ]	245:1:6264:6284	6134965	6	True				
ANR	6135022	AssignmentExpression	pts = & hash_ident [ h ]		6134965	0		=			
ANR	6135023	Identifier	pts		6134965	0					
ANR	6135024	UnaryOperationExpression	& hash_ident [ h ]		6134965	1					
ANR	6135025	UnaryOperator	&		6134965	0					
ANR	6135026	ArrayIndexing	hash_ident [ h ]		6134965	1					
ANR	6135027	Identifier	hash_ident		6134965	0					
ANR	6135028	Identifier	h		6134965	1					
ANR	6135029	ForStatement	for ( ; ; )		6134965	7					
ANR	6135030	CompoundStatement		13:10:215:215	6134965	0					
ANR	6135031	ExpressionStatement	ts = * pts	247:2:6300:6309	6134965	0	True				
ANR	6135032	AssignmentExpression	ts = * pts		6134965	0		=			
ANR	6135033	Identifier	ts		6134965	0					
ANR	6135034	UnaryOperationExpression	* pts		6134965	1					
ANR	6135035	UnaryOperator	*		6134965	0					
ANR	6135036	Identifier	pts		6134965	1					
ANR	6135037	IfStatement	if ( ! ts )		6134965	1					
ANR	6135038	Condition	! ts	248:6:6317:6319	6134965	0	True				
ANR	6135039	UnaryOperationExpression	! ts		6134965	0					
ANR	6135040	UnaryOperator	!		6134965	0					
ANR	6135041	Identifier	ts		6134965	1					
ANR	6135042	CompoundStatement		15:11:241:241	6134965	1					
ANR	6135043	BreakStatement	break ;	249:3:6327:6332	6134965	0	True				
ANR	6135044	IfStatement	"if ( ts -> len == len && ! memcmp ( ts -> str , str , len ) )"		6134965	2					
ANR	6135045	Condition	"ts -> len == len && ! memcmp ( ts -> str , str , len )"	251:6:6344:6388	6134965	0	True				
ANR	6135046	AndExpression	"ts -> len == len && ! memcmp ( ts -> str , str , len )"		6134965	0		&&			
ANR	6135047	EqualityExpression	ts -> len == len		6134965	0		==			
ANR	6135048	PtrMemberAccess	ts -> len		6134965	0					
ANR	6135049	Identifier	ts		6134965	0					
ANR	6135050	Identifier	len		6134965	1					
ANR	6135051	Identifier	len		6134965	1					
ANR	6135052	UnaryOperationExpression	"! memcmp ( ts -> str , str , len )"		6134965	1					
ANR	6135053	UnaryOperator	!		6134965	0					
ANR	6135054	CallExpression	"memcmp ( ts -> str , str , len )"		6134965	1					
ANR	6135055	Callee	memcmp		6134965	0					
ANR	6135056	Identifier	memcmp		6134965	0					
ANR	6135057	ArgumentList	ts -> str		6134965	1					
ANR	6135058	Argument	ts -> str		6134965	0					
ANR	6135059	PtrMemberAccess	ts -> str		6134965	0					
ANR	6135060	Identifier	ts		6134965	0					
ANR	6135061	Identifier	str		6134965	1					
ANR	6135062	Argument	str		6134965	1					
ANR	6135063	Identifier	str		6134965	0					
ANR	6135064	Argument	len		6134965	2					
ANR	6135065	Identifier	len		6134965	0					
ANR	6135066	CompoundStatement		18:53:310:310	6134965	1					
ANR	6135067	ReturnStatement	return ts ;	252:3:6396:6405	6134965	0	True				
ANR	6135068	Identifier	ts		6134965	0					
ANR	6135069	ExpressionStatement	pts = & ( ts -> hash_next )	254:2:6413:6435	6134965	3	True				
ANR	6135070	AssignmentExpression	pts = & ( ts -> hash_next )		6134965	0		=			
ANR	6135071	Identifier	pts		6134965	0					
ANR	6135072	UnaryOperationExpression	& ( ts -> hash_next )		6134965	1					
ANR	6135073	UnaryOperator	&		6134965	0					
ANR	6135074	PtrMemberAccess	ts -> hash_next		6134965	1					
ANR	6135075	Identifier	ts		6134965	0					
ANR	6135076	Identifier	hash_next		6134965	1					
ANR	6135077	ReturnStatement	"return tok_alloc_new ( pts , str , len ) ;"	256:1:6441:6477	6134965	8	True				
ANR	6135078	CallExpression	"tok_alloc_new ( pts , str , len )"		6134965	0					
ANR	6135079	Callee	tok_alloc_new		6134965	0					
ANR	6135080	Identifier	tok_alloc_new		6134965	0					
ANR	6135081	ArgumentList	pts		6134965	1					
ANR	6135082	Argument	pts		6134965	0					
ANR	6135083	Identifier	pts		6134965	0					
ANR	6135084	Argument	str		6134965	1					
ANR	6135085	Identifier	str		6134965	0					
ANR	6135086	Argument	len		6134965	2					
ANR	6135087	Identifier	len		6134965	0					
ANR	6135088	ReturnType	ST_FUNC TokenSym *		6134965	1					
ANR	6135089	Identifier	tok_alloc		6134965	2					
ANR	6135090	ParameterList	"const char * str , int len"		6134965	3					
ANR	6135091	Parameter	const char * str	233:28:6054:6068	6134965	0	True				
ANR	6135092	ParameterType	const char *		6134965	0					
ANR	6135093	Identifier	str		6134965	1					
ANR	6135094	Parameter	int len	233:45:6071:6077	6134965	1	True				
ANR	6135095	ParameterType	int		6134965	0					
ANR	6135096	Identifier	len		6134965	1					
ANR	6135097	CFGEntryNode	ENTRY		6134965		True				
ANR	6135098	CFGExitNode	EXIT		6134965		True				
ANR	6135099	InfiniteForNode	true		6134965		True				
ANR	6135100	Symbol	& ts -> hash_next		6134965						
ANR	6135101	Symbol	TOK_HASH_SIZE		6134965						
ANR	6135102	Symbol	* ts		6134965						
ANR	6135103	Symbol	h		6134965						
ANR	6135104	Symbol	i		6134965						
ANR	6135105	Symbol	pts		6134965						
ANR	6135106	Symbol	TOK_HASH_INIT		6134965						
ANR	6135107	Symbol	str		6134965						
ANR	6135108	Symbol	tok_alloc_new		6134965						
ANR	6135109	Symbol	* i		6134965						
ANR	6135110	Symbol	ts -> len		6134965						
ANR	6135111	Symbol	memcmp		6134965						
ANR	6135112	Symbol	len		6134965						
ANR	6135113	Symbol	ts -> str		6134965						
ANR	6135114	Symbol	hash_ident		6134965						
ANR	6135115	Symbol	* pts		6134965						
ANR	6135116	Symbol	* str		6134965						
ANR	6135117	Symbol	TOK_HASH_FUNC		6134965						
ANR	6135118	Symbol	ts		6134965						
ANR	6135119	Function	get_tok_str	261:0:6533:8897							
ANR	6135120	FunctionDef	"get_tok_str (int v , CValue * cv)"		6135119	0					
ANR	6135121	CompoundStatement		262:0:6578:8897	6135119	0					
ANR	6135122	Statement	static	263:1:6581:6586	6135119	0	True				
ANR	6135123	IdentifierDeclStatement	char buf [ STRING_MAX_SIZE + 1 ] ;	263:8:6588:6617	6135119	1	True				
ANR	6135124	IdentifierDecl	buf [ STRING_MAX_SIZE + 1 ]		6135119	0					
ANR	6135125	IdentifierDeclType	char [ STRING_MAX_SIZE + 1 ]		6135119	0					
ANR	6135126	Identifier	buf		6135119	1					
ANR	6135127	AdditiveExpression	STRING_MAX_SIZE + 1		6135119	2		+			
ANR	6135128	Identifier	STRING_MAX_SIZE		6135119	0					
ANR	6135129	PrimaryExpression	1		6135119	1					
ANR	6135130	Statement	static	264:1:6620:6625	6135119	2	True				
ANR	6135131	IdentifierDeclStatement	CString cstr_buf ;	264:8:6627:6643	6135119	3	True				
ANR	6135132	IdentifierDecl	cstr_buf		6135119	0					
ANR	6135133	IdentifierDeclType	CString		6135119	0					
ANR	6135134	Identifier	cstr_buf		6135119	1					
ANR	6135135	IdentifierDeclStatement	CString * cstr ;	265:1:6646:6659	6135119	4	True				
ANR	6135136	IdentifierDecl	* cstr		6135119	0					
ANR	6135137	IdentifierDeclType	CString *		6135119	0					
ANR	6135138	Identifier	cstr		6135119	1					
ANR	6135139	IdentifierDeclStatement	char * p ;	266:1:6662:6669	6135119	5	True				
ANR	6135140	IdentifierDecl	* p		6135119	0					
ANR	6135141	IdentifierDeclType	char *		6135119	0					
ANR	6135142	Identifier	p		6135119	1					
ANR	6135143	IdentifierDeclStatement	"int i , len ;"	267:1:6672:6682	6135119	6	True				
ANR	6135144	IdentifierDecl	i		6135119	0					
ANR	6135145	IdentifierDeclType	int		6135119	0					
ANR	6135146	Identifier	i		6135119	1					
ANR	6135147	IdentifierDecl	len		6135119	1					
ANR	6135148	IdentifierDeclType	int		6135119	0					
ANR	6135149	Identifier	len		6135119	1					
ANR	6135150	ExpressionStatement	cstr_reset ( & cstr_buf )	270:1:6754:6776	6135119	7	True				
ANR	6135151	CallExpression	cstr_reset ( & cstr_buf )		6135119	0					
ANR	6135152	Callee	cstr_reset		6135119	0					
ANR	6135153	Identifier	cstr_reset		6135119	0					
ANR	6135154	ArgumentList	& cstr_buf		6135119	1					
ANR	6135155	Argument	& cstr_buf		6135119	0					
ANR	6135156	UnaryOperationExpression	& cstr_buf		6135119	0					
ANR	6135157	UnaryOperator	&		6135119	0					
ANR	6135158	Identifier	cstr_buf		6135119	1					
ANR	6135159	ExpressionStatement	cstr_buf . data = buf	271:1:6779:6798	6135119	8	True				
ANR	6135160	AssignmentExpression	cstr_buf . data = buf		6135119	0		=			
ANR	6135161	MemberAccess	cstr_buf . data		6135119	0					
ANR	6135162	Identifier	cstr_buf		6135119	0					
ANR	6135163	Identifier	data		6135119	1					
ANR	6135164	Identifier	buf		6135119	1					
ANR	6135165	ExpressionStatement	cstr_buf . size_allocated = sizeof ( buf )	272:1:6801:6838	6135119	9	True				
ANR	6135166	AssignmentExpression	cstr_buf . size_allocated = sizeof ( buf )		6135119	0		=			
ANR	6135167	MemberAccess	cstr_buf . size_allocated		6135119	0					
ANR	6135168	Identifier	cstr_buf		6135119	0					
ANR	6135169	Identifier	size_allocated		6135119	1					
ANR	6135170	SizeofExpression	sizeof ( buf )		6135119	1					
ANR	6135171	Sizeof	sizeof		6135119	0					
ANR	6135172	SizeofOperand	buf		6135119	1					
ANR	6135173	ExpressionStatement	p = buf	273:1:6841:6848	6135119	10	True				
ANR	6135174	AssignmentExpression	p = buf		6135119	0		=			
ANR	6135175	Identifier	p		6135119	0					
ANR	6135176	Identifier	buf		6135119	1					
ANR	6135177	SwitchStatement	switch ( v )		6135119	11					
ANR	6135178	Condition	v	275:9:6860:6860	6135119	0	True				
ANR	6135179	Identifier	v		6135119	0					
ANR	6135180	CompoundStatement		14:12:284:284	6135119	1					
ANR	6135181	Label	case TOK_CINT :	276:1:6866:6879	6135119	0	True				
ANR	6135182	Identifier	TOK_CINT		6135119	0					
ANR	6135183	Label	case TOK_CUINT :	277:1:6882:6896	6135119	1	True				
ANR	6135184	Identifier	TOK_CUINT		6135119	0					
ANR	6135185	IfStatement	if ( cv )		6135119	2					
ANR	6135186	Condition	cv	279:6:6962:6963	6135119	0	True				
ANR	6135187	Identifier	cv		6135119	0					
ANR	6135188	CompoundStatement		18:10:387:387	6135119	1					
ANR	6135189	ExpressionStatement	"sprintf ( p , ""%u"" , cv -> ui )"	280:3:6971:6996	6135119	0	True				
ANR	6135190	CallExpression	"sprintf ( p , ""%u"" , cv -> ui )"		6135119	0					
ANR	6135191	Callee	sprintf		6135119	0					
ANR	6135192	Identifier	sprintf		6135119	0					
ANR	6135193	ArgumentList	p		6135119	1					
ANR	6135194	Argument	p		6135119	0					
ANR	6135195	Identifier	p		6135119	0					
ANR	6135196	Argument	"""%u"""		6135119	1					
ANR	6135197	PrimaryExpression	"""%u"""		6135119	0					
ANR	6135198	Argument	cv -> ui		6135119	2					
ANR	6135199	PtrMemberAccess	cv -> ui		6135119	0					
ANR	6135200	Identifier	cv		6135119	0					
ANR	6135201	Identifier	ui		6135119	1					
ANR	6135202	BreakStatement	break ;	282:2:7004:7009	6135119	3	True				
ANR	6135203	Label	case TOK_CLLONG :	283:1:7012:7027	6135119	4	True				
ANR	6135204	Identifier	TOK_CLLONG		6135119	0					
ANR	6135205	Label	case TOK_CULLONG :	284:1:7030:7046	6135119	5	True				
ANR	6135206	Identifier	TOK_CULLONG		6135119	0					
ANR	6135207	IfStatement	if ( cv )		6135119	6					
ANR	6135208	Condition	cv	286:6:7113:7114	6135119	0	True				
ANR	6135209	Identifier	cv		6135119	0					
ANR	6135210	CompoundStatement		25:10:538:538	6135119	1					
ANR	6135211	Statement	sprintf	287:3:7122:7128	6135119	0	True				
ANR	6135212	Statement	(	287:11:7130:7130	6135119	1	True				
ANR	6135213	Statement	p	287:12:7131:7131	6135119	2	True				
ANR	6135214	Statement	","	287:13:7132:7132	6135119	3	True				
ANR	6135215	Statement	"""%"""	287:15:7134:7136	6135119	4	True				
ANR	6135216	Statement	PFMT64u	287:18:7137:7143	6135119	5	True				
ANR	6135217	Statement	","	287:25:7144:7144	6135119	6	True				
ANR	6135218	Statement	cv	287:27:7146:7147	6135119	7	True				
ANR	6135219	Statement	->	287:29:7148:7149	6135119	8	True				
ANR	6135220	Statement	ull	287:31:7150:7152	6135119	9	True				
ANR	6135221	Statement	)	287:34:7153:7153	6135119	10	True				
ANR	6135222	ExpressionStatement		287:35:7154:7154	6135119	11	True				
ANR	6135223	BreakStatement	break ;	289:2:7162:7167	6135119	7	True				
ANR	6135224	Label	case TOK_LCHAR :	290:1:7170:7184	6135119	8	True				
ANR	6135225	Identifier	TOK_LCHAR		6135119	0					
ANR	6135226	ExpressionStatement	"cstr_ccat ( & cstr_buf , 'L' )"	291:2:7188:7214	6135119	9	True				
ANR	6135227	CallExpression	"cstr_ccat ( & cstr_buf , 'L' )"		6135119	0					
ANR	6135228	Callee	cstr_ccat		6135119	0					
ANR	6135229	Identifier	cstr_ccat		6135119	0					
ANR	6135230	ArgumentList	& cstr_buf		6135119	1					
ANR	6135231	Argument	& cstr_buf		6135119	0					
ANR	6135232	UnaryOperationExpression	& cstr_buf		6135119	0					
ANR	6135233	UnaryOperator	&		6135119	0					
ANR	6135234	Identifier	cstr_buf		6135119	1					
ANR	6135235	Argument	'L'		6135119	1					
ANR	6135236	PrimaryExpression	'L'		6135119	0					
ANR	6135237	Label	case TOK_CCHAR :	292:1:7217:7231	6135119	10	True				
ANR	6135238	Identifier	TOK_CCHAR		6135119	0					
ANR	6135239	ExpressionStatement	"cstr_ccat ( & cstr_buf , '\\'' )"	293:2:7235:7262	6135119	11	True				
ANR	6135240	CallExpression	"cstr_ccat ( & cstr_buf , '\\'' )"		6135119	0					
ANR	6135241	Callee	cstr_ccat		6135119	0					
ANR	6135242	Identifier	cstr_ccat		6135119	0					
ANR	6135243	ArgumentList	& cstr_buf		6135119	1					
ANR	6135244	Argument	& cstr_buf		6135119	0					
ANR	6135245	UnaryOperationExpression	& cstr_buf		6135119	0					
ANR	6135246	UnaryOperator	&		6135119	0					
ANR	6135247	Identifier	cstr_buf		6135119	1					
ANR	6135248	Argument	'\\''		6135119	1					
ANR	6135249	PrimaryExpression	'\\''		6135119	0					
ANR	6135250	IfStatement	if ( cv )		6135119	12					
ANR	6135251	Condition	cv	294:6:7270:7271	6135119	0	True				
ANR	6135252	Identifier	cv		6135119	0					
ANR	6135253	CompoundStatement		33:10:695:695	6135119	1					
ANR	6135254	ExpressionStatement	"add_char ( & cstr_buf , cv -> i )"	295:3:7279:7306	6135119	0	True				
ANR	6135255	CallExpression	"add_char ( & cstr_buf , cv -> i )"		6135119	0					
ANR	6135256	Callee	add_char		6135119	0					
ANR	6135257	Identifier	add_char		6135119	0					
ANR	6135258	ArgumentList	& cstr_buf		6135119	1					
ANR	6135259	Argument	& cstr_buf		6135119	0					
ANR	6135260	UnaryOperationExpression	& cstr_buf		6135119	0					
ANR	6135261	UnaryOperator	&		6135119	0					
ANR	6135262	Identifier	cstr_buf		6135119	1					
ANR	6135263	Argument	cv -> i		6135119	1					
ANR	6135264	PtrMemberAccess	cv -> i		6135119	0					
ANR	6135265	Identifier	cv		6135119	0					
ANR	6135266	Identifier	i		6135119	1					
ANR	6135267	ExpressionStatement	"cstr_ccat ( & cstr_buf , '\\'' )"	297:2:7314:7341	6135119	13	True				
ANR	6135268	CallExpression	"cstr_ccat ( & cstr_buf , '\\'' )"		6135119	0					
ANR	6135269	Callee	cstr_ccat		6135119	0					
ANR	6135270	Identifier	cstr_ccat		6135119	0					
ANR	6135271	ArgumentList	& cstr_buf		6135119	1					
ANR	6135272	Argument	& cstr_buf		6135119	0					
ANR	6135273	UnaryOperationExpression	& cstr_buf		6135119	0					
ANR	6135274	UnaryOperator	&		6135119	0					
ANR	6135275	Identifier	cstr_buf		6135119	1					
ANR	6135276	Argument	'\\''		6135119	1					
ANR	6135277	PrimaryExpression	'\\''		6135119	0					
ANR	6135278	ExpressionStatement	"cstr_ccat ( & cstr_buf , '\\0' )"	298:2:7345:7372	6135119	14	True				
ANR	6135279	CallExpression	"cstr_ccat ( & cstr_buf , '\\0' )"		6135119	0					
ANR	6135280	Callee	cstr_ccat		6135119	0					
ANR	6135281	Identifier	cstr_ccat		6135119	0					
ANR	6135282	ArgumentList	& cstr_buf		6135119	1					
ANR	6135283	Argument	& cstr_buf		6135119	0					
ANR	6135284	UnaryOperationExpression	& cstr_buf		6135119	0					
ANR	6135285	UnaryOperator	&		6135119	0					
ANR	6135286	Identifier	cstr_buf		6135119	1					
ANR	6135287	Argument	'\\0'		6135119	1					
ANR	6135288	PrimaryExpression	'\\0'		6135119	0					
ANR	6135289	BreakStatement	break ;	299:2:7376:7381	6135119	15	True				
ANR	6135290	Label	case TOK_PPNUM :	300:1:7384:7398	6135119	16	True				
ANR	6135291	Identifier	TOK_PPNUM		6135119	0					
ANR	6135292	ExpressionStatement	cstr = cv -> cstr	301:2:7402:7417	6135119	17	True				
ANR	6135293	AssignmentExpression	cstr = cv -> cstr		6135119	0		=			
ANR	6135294	Identifier	cstr		6135119	0					
ANR	6135295	PtrMemberAccess	cv -> cstr		6135119	1					
ANR	6135296	Identifier	cv		6135119	0					
ANR	6135297	Identifier	cstr		6135119	1					
ANR	6135298	ExpressionStatement	len = cstr -> size - 1	302:2:7421:7441	6135119	18	True				
ANR	6135299	AssignmentExpression	len = cstr -> size - 1		6135119	0		=			
ANR	6135300	Identifier	len		6135119	0					
ANR	6135301	AdditiveExpression	cstr -> size - 1		6135119	1		-			
ANR	6135302	PtrMemberAccess	cstr -> size		6135119	0					
ANR	6135303	Identifier	cstr		6135119	0					
ANR	6135304	Identifier	size		6135119	1					
ANR	6135305	PrimaryExpression	1		6135119	1					
ANR	6135306	ForStatement	for ( i = 0 ; i < len ; i ++ )		6135119	19					
ANR	6135307	ForInit	i = 0 ;	303:7:7450:7455	6135119	0	True				
ANR	6135308	AssignmentExpression	i = 0		6135119	0		=			
ANR	6135309	Identifier	i		6135119	0					
ANR	6135310	PrimaryExpression	0		6135119	1					
ANR	6135311	Condition	i < len	303:14:7457:7463	6135119	1	True				
ANR	6135312	RelationalExpression	i < len		6135119	0		<			
ANR	6135313	Identifier	i		6135119	0					
ANR	6135314	Identifier	len		6135119	1					
ANR	6135315	PostIncDecOperationExpression	i ++	303:23:7466:7468	6135119	2	True				
ANR	6135316	Identifier	i		6135119	0					
ANR	6135317	IncDec	++		6135119	1					
ANR	6135318	CompoundStatement		42:28:892:892	6135119	3					
ANR	6135319	ExpressionStatement	"add_char ( & cstr_buf , ( ( unsigned char * ) cstr -> data ) [ i ] )"	304:3:7476:7531	6135119	0	True				
ANR	6135320	CallExpression	"add_char ( & cstr_buf , ( ( unsigned char * ) cstr -> data ) [ i ] )"		6135119	0					
ANR	6135321	Callee	add_char		6135119	0					
ANR	6135322	Identifier	add_char		6135119	0					
ANR	6135323	ArgumentList	& cstr_buf		6135119	1					
ANR	6135324	Argument	& cstr_buf		6135119	0					
ANR	6135325	UnaryOperationExpression	& cstr_buf		6135119	0					
ANR	6135326	UnaryOperator	&		6135119	0					
ANR	6135327	Identifier	cstr_buf		6135119	1					
ANR	6135328	Argument	( ( unsigned char * ) cstr -> data ) [ i ]		6135119	1					
ANR	6135329	ArrayIndexing	( ( unsigned char * ) cstr -> data ) [ i ]		6135119	0					
ANR	6135330	CastExpression	( unsigned char * ) cstr -> data		6135119	0					
ANR	6135331	CastTarget	unsigned char *		6135119	0					
ANR	6135332	PtrMemberAccess	cstr -> data		6135119	1					
ANR	6135333	Identifier	cstr		6135119	0					
ANR	6135334	Identifier	data		6135119	1					
ANR	6135335	Identifier	i		6135119	1					
ANR	6135336	ExpressionStatement	"cstr_ccat ( & cstr_buf , '\\0' )"	306:2:7539:7566	6135119	20	True				
ANR	6135337	CallExpression	"cstr_ccat ( & cstr_buf , '\\0' )"		6135119	0					
ANR	6135338	Callee	cstr_ccat		6135119	0					
ANR	6135339	Identifier	cstr_ccat		6135119	0					
ANR	6135340	ArgumentList	& cstr_buf		6135119	1					
ANR	6135341	Argument	& cstr_buf		6135119	0					
ANR	6135342	UnaryOperationExpression	& cstr_buf		6135119	0					
ANR	6135343	UnaryOperator	&		6135119	0					
ANR	6135344	Identifier	cstr_buf		6135119	1					
ANR	6135345	Argument	'\\0'		6135119	1					
ANR	6135346	PrimaryExpression	'\\0'		6135119	0					
ANR	6135347	BreakStatement	break ;	307:2:7570:7575	6135119	21	True				
ANR	6135348	Label	case TOK_LSTR :	308:1:7578:7591	6135119	22	True				
ANR	6135349	Identifier	TOK_LSTR		6135119	0					
ANR	6135350	ExpressionStatement	"cstr_ccat ( & cstr_buf , 'L' )"	309:2:7595:7621	6135119	23	True				
ANR	6135351	CallExpression	"cstr_ccat ( & cstr_buf , 'L' )"		6135119	0					
ANR	6135352	Callee	cstr_ccat		6135119	0					
ANR	6135353	Identifier	cstr_ccat		6135119	0					
ANR	6135354	ArgumentList	& cstr_buf		6135119	1					
ANR	6135355	Argument	& cstr_buf		6135119	0					
ANR	6135356	UnaryOperationExpression	& cstr_buf		6135119	0					
ANR	6135357	UnaryOperator	&		6135119	0					
ANR	6135358	Identifier	cstr_buf		6135119	1					
ANR	6135359	Argument	'L'		6135119	1					
ANR	6135360	PrimaryExpression	'L'		6135119	0					
ANR	6135361	Label	case TOK_STR :	310:1:7624:7636	6135119	24	True				
ANR	6135362	Identifier	TOK_STR		6135119	0					
ANR	6135363	IfStatement	if ( cv )		6135119	25					
ANR	6135364	Condition	cv	311:6:7644:7645	6135119	0	True				
ANR	6135365	Identifier	cv		6135119	0					
ANR	6135366	CompoundStatement		50:10:1069:1069	6135119	1					
ANR	6135367	ExpressionStatement	cstr = cv -> cstr	312:3:7653:7668	6135119	0	True				
ANR	6135368	AssignmentExpression	cstr = cv -> cstr		6135119	0		=			
ANR	6135369	Identifier	cstr		6135119	0					
ANR	6135370	PtrMemberAccess	cv -> cstr		6135119	1					
ANR	6135371	Identifier	cv		6135119	0					
ANR	6135372	Identifier	cstr		6135119	1					
ANR	6135373	ExpressionStatement	"cstr_ccat ( & cstr_buf , '\\""' )"	313:3:7673:7700	6135119	1	True				
ANR	6135374	CallExpression	"cstr_ccat ( & cstr_buf , '\\""' )"		6135119	0					
ANR	6135375	Callee	cstr_ccat		6135119	0					
ANR	6135376	Identifier	cstr_ccat		6135119	0					
ANR	6135377	ArgumentList	& cstr_buf		6135119	1					
ANR	6135378	Argument	& cstr_buf		6135119	0					
ANR	6135379	UnaryOperationExpression	& cstr_buf		6135119	0					
ANR	6135380	UnaryOperator	&		6135119	0					
ANR	6135381	Identifier	cstr_buf		6135119	1					
ANR	6135382	Argument	"'\\""'"		6135119	1					
ANR	6135383	PrimaryExpression	"'\\""'"		6135119	0					
ANR	6135384	IfStatement	if ( v == TOK_STR )		6135119	2					
ANR	6135385	Condition	v == TOK_STR	314:7:7709:7720	6135119	0	True				
ANR	6135386	EqualityExpression	v == TOK_STR		6135119	0		==			
ANR	6135387	Identifier	v		6135119	0					
ANR	6135388	Identifier	TOK_STR		6135119	1					
ANR	6135389	CompoundStatement		53:21:1144:1144	6135119	1					
ANR	6135390	ExpressionStatement	len = cstr -> size - 1	315:4:7729:7749	6135119	0	True				
ANR	6135391	AssignmentExpression	len = cstr -> size - 1		6135119	0		=			
ANR	6135392	Identifier	len		6135119	0					
ANR	6135393	AdditiveExpression	cstr -> size - 1		6135119	1		-			
ANR	6135394	PtrMemberAccess	cstr -> size		6135119	0					
ANR	6135395	Identifier	cstr		6135119	0					
ANR	6135396	Identifier	size		6135119	1					
ANR	6135397	PrimaryExpression	1		6135119	1					
ANR	6135398	ForStatement	for ( i = 0 ; i < len ; i ++ )		6135119	1					
ANR	6135399	ForInit	i = 0 ;	316:9:7760:7765	6135119	0	True				
ANR	6135400	AssignmentExpression	i = 0		6135119	0		=			
ANR	6135401	Identifier	i		6135119	0					
ANR	6135402	PrimaryExpression	0		6135119	1					
ANR	6135403	Condition	i < len	316:16:7767:7773	6135119	1	True				
ANR	6135404	RelationalExpression	i < len		6135119	0		<			
ANR	6135405	Identifier	i		6135119	0					
ANR	6135406	Identifier	len		6135119	1					
ANR	6135407	PostIncDecOperationExpression	i ++	316:25:7776:7778	6135119	2	True				
ANR	6135408	Identifier	i		6135119	0					
ANR	6135409	IncDec	++		6135119	1					
ANR	6135410	CompoundStatement		55:30:1202:1202	6135119	3					
ANR	6135411	ExpressionStatement	"add_char ( & cstr_buf , ( ( unsigned char * ) cstr -> data ) [ i ] )"	317:5:7788:7843	6135119	0	True				
ANR	6135412	CallExpression	"add_char ( & cstr_buf , ( ( unsigned char * ) cstr -> data ) [ i ] )"		6135119	0					
ANR	6135413	Callee	add_char		6135119	0					
ANR	6135414	Identifier	add_char		6135119	0					
ANR	6135415	ArgumentList	& cstr_buf		6135119	1					
ANR	6135416	Argument	& cstr_buf		6135119	0					
ANR	6135417	UnaryOperationExpression	& cstr_buf		6135119	0					
ANR	6135418	UnaryOperator	&		6135119	0					
ANR	6135419	Identifier	cstr_buf		6135119	1					
ANR	6135420	Argument	( ( unsigned char * ) cstr -> data ) [ i ]		6135119	1					
ANR	6135421	ArrayIndexing	( ( unsigned char * ) cstr -> data ) [ i ]		6135119	0					
ANR	6135422	CastExpression	( unsigned char * ) cstr -> data		6135119	0					
ANR	6135423	CastTarget	unsigned char *		6135119	0					
ANR	6135424	PtrMemberAccess	cstr -> data		6135119	1					
ANR	6135425	Identifier	cstr		6135119	0					
ANR	6135426	Identifier	data		6135119	1					
ANR	6135427	Identifier	i		6135119	1					
ANR	6135428	ElseStatement	else		6135119	0					
ANR	6135429	CompoundStatement		58:10:1282:1282	6135119	0					
ANR	6135430	ExpressionStatement	len = ( cstr -> size / sizeof ( nwchar_t ) ) - 1	320:4:7867:7908	6135119	0	True				
ANR	6135431	AssignmentExpression	len = ( cstr -> size / sizeof ( nwchar_t ) ) - 1		6135119	0		=			
ANR	6135432	Identifier	len		6135119	0					
ANR	6135433	AdditiveExpression	( cstr -> size / sizeof ( nwchar_t ) ) - 1		6135119	1		-			
ANR	6135434	MultiplicativeExpression	cstr -> size / sizeof ( nwchar_t )		6135119	0		/			
ANR	6135435	PtrMemberAccess	cstr -> size		6135119	0					
ANR	6135436	Identifier	cstr		6135119	0					
ANR	6135437	Identifier	size		6135119	1					
ANR	6135438	SizeofExpression	sizeof ( nwchar_t )		6135119	1					
ANR	6135439	Sizeof	sizeof		6135119	0					
ANR	6135440	SizeofOperand	nwchar_t		6135119	1					
ANR	6135441	PrimaryExpression	1		6135119	1					
ANR	6135442	ForStatement	for ( i = 0 ; i < len ; i ++ )		6135119	1					
ANR	6135443	ForInit	i = 0 ;	321:9:7919:7924	6135119	0	True				
ANR	6135444	AssignmentExpression	i = 0		6135119	0		=			
ANR	6135445	Identifier	i		6135119	0					
ANR	6135446	PrimaryExpression	0		6135119	1					
ANR	6135447	Condition	i < len	321:16:7926:7932	6135119	1	True				
ANR	6135448	RelationalExpression	i < len		6135119	0		<			
ANR	6135449	Identifier	i		6135119	0					
ANR	6135450	Identifier	len		6135119	1					
ANR	6135451	PostIncDecOperationExpression	i ++	321:25:7935:7937	6135119	2	True				
ANR	6135452	Identifier	i		6135119	0					
ANR	6135453	IncDec	++		6135119	1					
ANR	6135454	CompoundStatement		60:30:1361:1361	6135119	3					
ANR	6135455	ExpressionStatement	"add_char ( & cstr_buf , ( ( nwchar_t * ) cstr -> data ) [ i ] )"	322:5:7947:7997	6135119	0	True				
ANR	6135456	CallExpression	"add_char ( & cstr_buf , ( ( nwchar_t * ) cstr -> data ) [ i ] )"		6135119	0					
ANR	6135457	Callee	add_char		6135119	0					
ANR	6135458	Identifier	add_char		6135119	0					
ANR	6135459	ArgumentList	& cstr_buf		6135119	1					
ANR	6135460	Argument	& cstr_buf		6135119	0					
ANR	6135461	UnaryOperationExpression	& cstr_buf		6135119	0					
ANR	6135462	UnaryOperator	&		6135119	0					
ANR	6135463	Identifier	cstr_buf		6135119	1					
ANR	6135464	Argument	( ( nwchar_t * ) cstr -> data ) [ i ]		6135119	1					
ANR	6135465	ArrayIndexing	( ( nwchar_t * ) cstr -> data ) [ i ]		6135119	0					
ANR	6135466	CastExpression	( nwchar_t * ) cstr -> data		6135119	0					
ANR	6135467	CastTarget	nwchar_t *		6135119	0					
ANR	6135468	PtrMemberAccess	cstr -> data		6135119	1					
ANR	6135469	Identifier	cstr		6135119	0					
ANR	6135470	Identifier	data		6135119	1					
ANR	6135471	Identifier	i		6135119	1					
ANR	6135472	ExpressionStatement	"cstr_ccat ( & cstr_buf , '\\""' )"	325:3:8013:8040	6135119	3	True				
ANR	6135473	CallExpression	"cstr_ccat ( & cstr_buf , '\\""' )"		6135119	0					
ANR	6135474	Callee	cstr_ccat		6135119	0					
ANR	6135475	Identifier	cstr_ccat		6135119	0					
ANR	6135476	ArgumentList	& cstr_buf		6135119	1					
ANR	6135477	Argument	& cstr_buf		6135119	0					
ANR	6135478	UnaryOperationExpression	& cstr_buf		6135119	0					
ANR	6135479	UnaryOperator	&		6135119	0					
ANR	6135480	Identifier	cstr_buf		6135119	1					
ANR	6135481	Argument	"'\\""'"		6135119	1					
ANR	6135482	PrimaryExpression	"'\\""'"		6135119	0					
ANR	6135483	ExpressionStatement	"cstr_ccat ( & cstr_buf , '\\0' )"	326:3:8045:8072	6135119	4	True				
ANR	6135484	CallExpression	"cstr_ccat ( & cstr_buf , '\\0' )"		6135119	0					
ANR	6135485	Callee	cstr_ccat		6135119	0					
ANR	6135486	Identifier	cstr_ccat		6135119	0					
ANR	6135487	ArgumentList	& cstr_buf		6135119	1					
ANR	6135488	Argument	& cstr_buf		6135119	0					
ANR	6135489	UnaryOperationExpression	& cstr_buf		6135119	0					
ANR	6135490	UnaryOperator	&		6135119	0					
ANR	6135491	Identifier	cstr_buf		6135119	1					
ANR	6135492	Argument	'\\0'		6135119	1					
ANR	6135493	PrimaryExpression	'\\0'		6135119	0					
ANR	6135494	ElseStatement	else		6135119	0					
ANR	6135495	CompoundStatement		66:9:1504:1504	6135119	0					
ANR	6135496	ExpressionStatement	"eprintf ( ""cv = nil\\n"" )"	328:3:8088:8110	6135119	0	True				
ANR	6135497	CallExpression	"eprintf ( ""cv = nil\\n"" )"		6135119	0					
ANR	6135498	Callee	eprintf		6135119	0					
ANR	6135499	Identifier	eprintf		6135119	0					
ANR	6135500	ArgumentList	"""cv = nil\\n"""		6135119	1					
ANR	6135501	Argument	"""cv = nil\\n"""		6135119	0					
ANR	6135502	PrimaryExpression	"""cv = nil\\n"""		6135119	0					
ANR	6135503	BreakStatement	break ;	330:2:8118:8123	6135119	26	True				
ANR	6135504	Label	case TOK_LT :	331:1:8126:8137	6135119	27	True				
ANR	6135505	Identifier	TOK_LT		6135119	0					
ANR	6135506	ExpressionStatement	v = '<'	332:2:8141:8148	6135119	28	True				
ANR	6135507	AssignmentExpression	v = '<'		6135119	0		=			
ANR	6135508	Identifier	v		6135119	0					
ANR	6135509	PrimaryExpression	'<'		6135119	1					
ANR	6135510	GotoStatement	goto addv ;	333:2:8152:8161	6135119	29	True				
ANR	6135511	Identifier	addv		6135119	0					
ANR	6135512	Label	case TOK_GT :	334:1:8164:8175	6135119	30	True				
ANR	6135513	Identifier	TOK_GT		6135119	0					
ANR	6135514	ExpressionStatement	v = '>'	335:2:8179:8186	6135119	31	True				
ANR	6135515	AssignmentExpression	v = '>'		6135119	0		=			
ANR	6135516	Identifier	v		6135119	0					
ANR	6135517	PrimaryExpression	'>'		6135119	1					
ANR	6135518	GotoStatement	goto addv ;	336:2:8190:8199	6135119	32	True				
ANR	6135519	Identifier	addv		6135119	0					
ANR	6135520	Label	case TOK_DOTS :	337:1:8202:8215	6135119	33	True				
ANR	6135521	Identifier	TOK_DOTS		6135119	0					
ANR	6135522	ReturnStatement	"return strcpy ( p , ""..."" ) ;"	338:2:8219:8243	6135119	34	True				
ANR	6135523	CallExpression	"strcpy ( p , ""..."" )"		6135119	0					
ANR	6135524	Callee	strcpy		6135119	0					
ANR	6135525	Identifier	strcpy		6135119	0					
ANR	6135526	ArgumentList	p		6135119	1					
ANR	6135527	Argument	p		6135119	0					
ANR	6135528	Identifier	p		6135119	0					
ANR	6135529	Argument	"""..."""		6135119	1					
ANR	6135530	PrimaryExpression	"""..."""		6135119	0					
ANR	6135531	Label	case TOK_A_SHL :	339:1:8246:8260	6135119	35	True				
ANR	6135532	Identifier	TOK_A_SHL		6135119	0					
ANR	6135533	ReturnStatement	"return strcpy ( p , ""<<="" ) ;"	340:2:8264:8288	6135119	36	True				
ANR	6135534	CallExpression	"strcpy ( p , ""<<="" )"		6135119	0					
ANR	6135535	Callee	strcpy		6135119	0					
ANR	6135536	Identifier	strcpy		6135119	0					
ANR	6135537	ArgumentList	p		6135119	1					
ANR	6135538	Argument	p		6135119	0					
ANR	6135539	Identifier	p		6135119	0					
ANR	6135540	Argument	"""<<="""		6135119	1					
ANR	6135541	PrimaryExpression	"""<<="""		6135119	0					
ANR	6135542	Label	case TOK_A_SAR :	341:1:8291:8305	6135119	37	True				
ANR	6135543	Identifier	TOK_A_SAR		6135119	0					
ANR	6135544	ReturnStatement	"return strcpy ( p , "">>="" ) ;"	342:2:8309:8333	6135119	38	True				
ANR	6135545	CallExpression	"strcpy ( p , "">>="" )"		6135119	0					
ANR	6135546	Callee	strcpy		6135119	0					
ANR	6135547	Identifier	strcpy		6135119	0					
ANR	6135548	ArgumentList	p		6135119	1					
ANR	6135549	Argument	p		6135119	0					
ANR	6135550	Identifier	p		6135119	0					
ANR	6135551	Argument	""">>="""		6135119	1					
ANR	6135552	PrimaryExpression	""">>="""		6135119	0					
ANR	6135553	Label	default :	343:1:8336:8343	6135119	39	True				
ANR	6135554	Identifier	default		6135119	0					
ANR	6135555	IfStatement	if ( v < TOK_IDENT )		6135119	40					
ANR	6135556	Condition	v < TOK_IDENT	344:6:8351:8363	6135119	0	True				
ANR	6135557	RelationalExpression	v < TOK_IDENT		6135119	0		<			
ANR	6135558	Identifier	v		6135119	0					
ANR	6135559	Identifier	TOK_IDENT		6135119	1					
ANR	6135560	CompoundStatement		85:3:1827:1865	6135119	1					
ANR	6135561	IdentifierDeclStatement	const unsigned char * q = tok_two_chars ;	346:3:8406:8444	6135119	0	True				
ANR	6135562	IdentifierDecl	* q = tok_two_chars		6135119	0					
ANR	6135563	IdentifierDeclType	const unsigned char *		6135119	0					
ANR	6135564	Identifier	q		6135119	1					
ANR	6135565	AssignmentExpression	* q = tok_two_chars		6135119	2		=			
ANR	6135566	Identifier	tok_two_chars		6135119	0					
ANR	6135567	Identifier	tok_two_chars		6135119	1					
ANR	6135568	WhileStatement	while ( * q )		6135119	1					
ANR	6135569	Condition	* q	347:10:8456:8457	6135119	0	True				
ANR	6135570	UnaryOperationExpression	* q		6135119	0					
ANR	6135571	UnaryOperator	*		6135119	0					
ANR	6135572	Identifier	q		6135119	1					
ANR	6135573	CompoundStatement		86:14:1881:1881	6135119	1					
ANR	6135574	IfStatement	if ( q [ 2 ] == v )		6135119	0					
ANR	6135575	Condition	q [ 2 ] == v	348:8:8470:8478	6135119	0	True				
ANR	6135576	EqualityExpression	q [ 2 ] == v		6135119	0		==			
ANR	6135577	ArrayIndexing	q [ 2 ]		6135119	0					
ANR	6135578	Identifier	q		6135119	0					
ANR	6135579	PrimaryExpression	2		6135119	1					
ANR	6135580	Identifier	v		6135119	1					
ANR	6135581	CompoundStatement		87:19:1902:1902	6135119	1					
ANR	6135582	ExpressionStatement	* p ++ = q [ 0 ]	349:5:8488:8499	6135119	0	True				
ANR	6135583	AssignmentExpression	* p ++ = q [ 0 ]		6135119	0		=			
ANR	6135584	UnaryOperationExpression	* p ++		6135119	0					
ANR	6135585	UnaryOperator	*		6135119	0					
ANR	6135586	PostIncDecOperationExpression	p ++		6135119	1					
ANR	6135587	Identifier	p		6135119	0					
ANR	6135588	IncDec	++		6135119	1					
ANR	6135589	ArrayIndexing	q [ 0 ]		6135119	1					
ANR	6135590	Identifier	q		6135119	0					
ANR	6135591	PrimaryExpression	0		6135119	1					
ANR	6135592	ExpressionStatement	* p ++ = q [ 1 ]	350:5:8506:8517	6135119	1	True				
ANR	6135593	AssignmentExpression	* p ++ = q [ 1 ]		6135119	0		=			
ANR	6135594	UnaryOperationExpression	* p ++		6135119	0					
ANR	6135595	UnaryOperator	*		6135119	0					
ANR	6135596	PostIncDecOperationExpression	p ++		6135119	1					
ANR	6135597	Identifier	p		6135119	0					
ANR	6135598	IncDec	++		6135119	1					
ANR	6135599	ArrayIndexing	q [ 1 ]		6135119	1					
ANR	6135600	Identifier	q		6135119	0					
ANR	6135601	PrimaryExpression	1		6135119	1					
ANR	6135602	ExpressionStatement	* p = '\\0'	351:5:8524:8533	6135119	2	True				
ANR	6135603	AssignmentExpression	* p = '\\0'		6135119	0		=			
ANR	6135604	UnaryOperationExpression	* p		6135119	0					
ANR	6135605	UnaryOperator	*		6135119	0					
ANR	6135606	Identifier	p		6135119	1					
ANR	6135607	PrimaryExpression	'\\0'		6135119	1					
ANR	6135608	ReturnStatement	return buf ;	352:5:8540:8550	6135119	3	True				
ANR	6135609	Identifier	buf		6135119	0					
ANR	6135610	ExpressionStatement	q += 3	354:4:8562:8568	6135119	1	True				
ANR	6135611	AssignmentExpression	q += 3		6135119	0		+=			
ANR	6135612	Identifier	q		6135119	0					
ANR	6135613	PrimaryExpression	3		6135119	1					
ANR	6135614	Label	addv :	356:0:8575:8579	6135119	2	True				
ANR	6135615	Identifier	addv		6135119	0					
ANR	6135616	ExpressionStatement	* p ++ = v	357:3:8584:8592	6135119	3	True				
ANR	6135617	AssignmentExpression	* p ++ = v		6135119	0		=			
ANR	6135618	UnaryOperationExpression	* p ++		6135119	0					
ANR	6135619	UnaryOperator	*		6135119	0					
ANR	6135620	PostIncDecOperationExpression	p ++		6135119	1					
ANR	6135621	Identifier	p		6135119	0					
ANR	6135622	IncDec	++		6135119	1					
ANR	6135623	Identifier	v		6135119	1					
ANR	6135624	ExpressionStatement	* p = '\\0'	358:3:8597:8606	6135119	4	True				
ANR	6135625	AssignmentExpression	* p = '\\0'		6135119	0		=			
ANR	6135626	UnaryOperationExpression	* p		6135119	0					
ANR	6135627	UnaryOperator	*		6135119	0					
ANR	6135628	Identifier	p		6135119	1					
ANR	6135629	PrimaryExpression	'\\0'		6135119	1					
ANR	6135630	ElseStatement	else		6135119	0					
ANR	6135631	IfStatement	if ( v < tok_ident )		6135119	0					
ANR	6135632	Condition	v < tok_ident	359:13:8621:8633	6135119	0	True				
ANR	6135633	RelationalExpression	v < tok_ident		6135119	0		<			
ANR	6135634	Identifier	v		6135119	0					
ANR	6135635	Identifier	tok_ident		6135119	1					
ANR	6135636	CompoundStatement		98:28:2057:2057	6135119	1					
ANR	6135637	ReturnStatement	return table_ident [ v - TOK_IDENT ] -> str ;	360:3:8641:8679	6135119	0	True				
ANR	6135638	PtrMemberAccess	table_ident [ v - TOK_IDENT ] -> str		6135119	0					
ANR	6135639	ArrayIndexing	table_ident [ v - TOK_IDENT ]		6135119	0					
ANR	6135640	Identifier	table_ident		6135119	0					
ANR	6135641	AdditiveExpression	v - TOK_IDENT		6135119	1		-			
ANR	6135642	Identifier	v		6135119	0					
ANR	6135643	Identifier	TOK_IDENT		6135119	1					
ANR	6135644	Identifier	str		6135119	1					
ANR	6135645	ElseStatement	else		6135119	0					
ANR	6135646	IfStatement	if ( v >= SYM_FIRST_ANOM )		6135119	0					
ANR	6135647	Condition	v >= SYM_FIRST_ANOM	361:13:8694:8712	6135119	0	True				
ANR	6135648	RelationalExpression	v >= SYM_FIRST_ANOM		6135119	0		>=			
ANR	6135649	Identifier	v		6135119	0					
ANR	6135650	Identifier	SYM_FIRST_ANOM		6135119	1					
ANR	6135651	CompoundStatement		100:34:2136:2136	6135119	1					
ANR	6135652	ExpressionStatement	"sprintf ( p , ""%u"" , v - SYM_FIRST_ANOM )"	363:3:8763:8800	6135119	0	True				
ANR	6135653	CallExpression	"sprintf ( p , ""%u"" , v - SYM_FIRST_ANOM )"		6135119	0					
ANR	6135654	Callee	sprintf		6135119	0					
ANR	6135655	Identifier	sprintf		6135119	0					
ANR	6135656	ArgumentList	p		6135119	1					
ANR	6135657	Argument	p		6135119	0					
ANR	6135658	Identifier	p		6135119	0					
ANR	6135659	Argument	"""%u"""		6135119	1					
ANR	6135660	PrimaryExpression	"""%u"""		6135119	0					
ANR	6135661	Argument	v - SYM_FIRST_ANOM		6135119	2					
ANR	6135662	AdditiveExpression	v - SYM_FIRST_ANOM		6135119	0		-			
ANR	6135663	Identifier	v		6135119	0					
ANR	6135664	Identifier	SYM_FIRST_ANOM		6135119	1					
ANR	6135665	ElseStatement	else		6135119	0					
ANR	6135666	CompoundStatement		103:9:2232:2232	6135119	0					
ANR	6135667	ReturnStatement	return NULL ;	366:3:8845:8856	6135119	0	True				
ANR	6135668	Identifier	NULL		6135119	0					
ANR	6135669	BreakStatement	break ;	368:2:8864:8869	6135119	41	True				
ANR	6135670	ReturnStatement	return cstr_buf . data ;	370:1:8875:8895	6135119	12	True				
ANR	6135671	MemberAccess	cstr_buf . data		6135119	0					
ANR	6135672	Identifier	cstr_buf		6135119	0					
ANR	6135673	Identifier	data		6135119	1					
ANR	6135674	ReturnType	ST_FUNC char *		6135119	1					
ANR	6135675	Identifier	get_tok_str		6135119	2					
ANR	6135676	ParameterList	"int v , CValue * cv"		6135119	3					
ANR	6135677	Parameter	int v	261:26:6559:6563	6135119	0	True				
ANR	6135678	ParameterType	int		6135119	0					
ANR	6135679	Identifier	v		6135119	1					
ANR	6135680	Parameter	CValue * cv	261:33:6566:6575	6135119	1	True				
ANR	6135681	ParameterType	CValue *		6135119	0					
ANR	6135682	Identifier	cv		6135119	1					
ANR	6135683	CFGEntryNode	ENTRY		6135119		True				
ANR	6135684	CFGExitNode	EXIT		6135119		True				
ANR	6135685	Symbol	cstr		6135119						
ANR	6135686	Symbol	* v		6135119						
ANR	6135687	Symbol	table_ident [ v - TOK_IDENT ] -> str		6135119						
ANR	6135688	Symbol	cstr_buf		6135119						
ANR	6135689	Symbol	tok_two_chars		6135119						
ANR	6135690	Symbol	& cstr_buf		6135119						
ANR	6135691	Symbol	cstr -> data		6135119						
ANR	6135692	Symbol	* table_ident		6135119						
ANR	6135693	Symbol	cstr -> size		6135119						
ANR	6135694	Symbol	strcpy		6135119						
ANR	6135695	Symbol	* * cstr		6135119						
ANR	6135696	Symbol	* TOK_IDENT		6135119						
ANR	6135697	Symbol	cv -> ui		6135119						
ANR	6135698	Symbol	len		6135119						
ANR	6135699	Symbol	* * v		6135119						
ANR	6135700	Symbol	* * TOK_IDENT		6135119						
ANR	6135701	Symbol	cv -> cstr		6135119						
ANR	6135702	Symbol	cstr_buf . size_allocated		6135119						
ANR	6135703	Symbol	SYM_FIRST_ANOM		6135119						
ANR	6135704	Symbol	NULL		6135119						
ANR	6135705	Symbol	TOK_IDENT		6135119						
ANR	6135706	Symbol	TOK_STR		6135119						
ANR	6135707	Symbol	* p ++		6135119						
ANR	6135708	Symbol	* * table_ident		6135119						
ANR	6135709	Symbol	i		6135119						
ANR	6135710	Symbol	* cstr -> data		6135119						
ANR	6135711	Symbol	p		6135119						
ANR	6135712	Symbol	q		6135119						
ANR	6135713	Symbol	table_ident		6135119						
ANR	6135714	Symbol	buf		6135119						
ANR	6135715	Symbol	cstr_buf . data		6135119						
ANR	6135716	Symbol	cv		6135119						
ANR	6135717	Symbol	* i		6135119						
ANR	6135718	Symbol	tok_ident		6135119						
ANR	6135719	Symbol	v		6135119						
ANR	6135720	Symbol	* cstr		6135119						
ANR	6135721	Symbol	* cv		6135119						
ANR	6135722	Symbol	cv -> i		6135119						
ANR	6135723	Symbol	* p		6135119						
ANR	6135724	Symbol	* q		6135119						
ANR	6135725	Function	tcc_peekc_slow	374:0:8943:9512							
ANR	6135726	FunctionDef	tcc_peekc_slow (BufferedFile * bf)		6135725	0					
ANR	6135727	CompoundStatement		375:0:8987:9512	6135725	0					
ANR	6135728	IdentifierDeclStatement	int len ;	376:1:8990:8997	6135725	0	True				
ANR	6135729	IdentifierDecl	len		6135725	0					
ANR	6135730	IdentifierDeclType	int		6135725	0					
ANR	6135731	Identifier	len		6135725	1					
ANR	6135732	IfStatement	if ( bf -> buf_ptr >= bf -> buf_end )		6135725	1					
ANR	6135733	Condition	bf -> buf_ptr >= bf -> buf_end	378:5:9054:9079	6135725	0	True				
ANR	6135734	RelationalExpression	bf -> buf_ptr >= bf -> buf_end		6135725	0		>=			
ANR	6135735	PtrMemberAccess	bf -> buf_ptr		6135725	0					
ANR	6135736	Identifier	bf		6135725	0					
ANR	6135737	Identifier	buf_ptr		6135725	1					
ANR	6135738	PtrMemberAccess	bf -> buf_end		6135725	1					
ANR	6135739	Identifier	bf		6135725	0					
ANR	6135740	Identifier	buf_end		6135725	1					
ANR	6135741	CompoundStatement		4:33:94:94	6135725	1					
ANR	6135742	IfStatement	if ( bf -> fd != - 1 )		6135725	0					
ANR	6135743	Condition	bf -> fd != - 1	379:6:9090:9101	6135725	0	True				
ANR	6135744	EqualityExpression	bf -> fd != - 1		6135725	0		!=			
ANR	6135745	PtrMemberAccess	bf -> fd		6135725	0					
ANR	6135746	Identifier	bf		6135725	0					
ANR	6135747	Identifier	fd		6135725	1					
ANR	6135748	UnaryOperationExpression	- 1		6135725	1					
ANR	6135749	UnaryOperator	-		6135725	0					
ANR	6135750	PrimaryExpression	1		6135725	1					
ANR	6135751	CompoundStatement		5:20:116:116	6135725	1					
ANR	6135752	ExpressionStatement	len = 8	381:3:9134:9141	6135725	0	True				
ANR	6135753	AssignmentExpression	len = 8		6135725	0		=			
ANR	6135754	Identifier	len		6135725	0					
ANR	6135755	PrimaryExpression	8		6135725	1					
ANR	6135756	ExpressionStatement	"len = read ( bf -> fd , bf -> buffer , len )"	385:3:9181:9217	6135725	1	True				
ANR	6135757	AssignmentExpression	"len = read ( bf -> fd , bf -> buffer , len )"		6135725	0		=			
ANR	6135758	Identifier	len		6135725	0					
ANR	6135759	CallExpression	"read ( bf -> fd , bf -> buffer , len )"		6135725	1					
ANR	6135760	Callee	read		6135725	0					
ANR	6135761	Identifier	read		6135725	0					
ANR	6135762	ArgumentList	bf -> fd		6135725	1					
ANR	6135763	Argument	bf -> fd		6135725	0					
ANR	6135764	PtrMemberAccess	bf -> fd		6135725	0					
ANR	6135765	Identifier	bf		6135725	0					
ANR	6135766	Identifier	fd		6135725	1					
ANR	6135767	Argument	bf -> buffer		6135725	1					
ANR	6135768	PtrMemberAccess	bf -> buffer		6135725	0					
ANR	6135769	Identifier	bf		6135725	0					
ANR	6135770	Identifier	buffer		6135725	1					
ANR	6135771	Argument	len		6135725	2					
ANR	6135772	Identifier	len		6135725	0					
ANR	6135773	IfStatement	if ( len < 0 )		6135725	2					
ANR	6135774	Condition	len < 0	386:7:9226:9232	6135725	0	True				
ANR	6135775	RelationalExpression	len < 0		6135725	0		<			
ANR	6135776	Identifier	len		6135725	0					
ANR	6135777	PrimaryExpression	0		6135725	1					
ANR	6135778	CompoundStatement		12:16:247:247	6135725	1					
ANR	6135779	ExpressionStatement	len = 0	387:4:9241:9248	6135725	0	True				
ANR	6135780	AssignmentExpression	len = 0		6135725	0		=			
ANR	6135781	Identifier	len		6135725	0					
ANR	6135782	PrimaryExpression	0		6135725	1					
ANR	6135783	ElseStatement	else		6135725	0					
ANR	6135784	CompoundStatement		15:9:276:276	6135725	0					
ANR	6135785	ExpressionStatement	len = 0	390:3:9269:9276	6135725	0	True				
ANR	6135786	AssignmentExpression	len = 0		6135725	0		=			
ANR	6135787	Identifier	len		6135725	0					
ANR	6135788	PrimaryExpression	0		6135725	1					
ANR	6135789	ExpressionStatement	total_bytes += len	392:2:9284:9302	6135725	1	True				
ANR	6135790	AssignmentExpression	total_bytes += len		6135725	0		+=			
ANR	6135791	Identifier	total_bytes		6135725	0					
ANR	6135792	Identifier	len		6135725	1					
ANR	6135793	ExpressionStatement	bf -> buf_ptr = bf -> buffer	393:2:9306:9330	6135725	2	True				
ANR	6135794	AssignmentExpression	bf -> buf_ptr = bf -> buffer		6135725	0		=			
ANR	6135795	PtrMemberAccess	bf -> buf_ptr		6135725	0					
ANR	6135796	Identifier	bf		6135725	0					
ANR	6135797	Identifier	buf_ptr		6135725	1					
ANR	6135798	PtrMemberAccess	bf -> buffer		6135725	1					
ANR	6135799	Identifier	bf		6135725	0					
ANR	6135800	Identifier	buffer		6135725	1					
ANR	6135801	ExpressionStatement	bf -> buf_end = bf -> buffer + len	394:2:9334:9364	6135725	3	True				
ANR	6135802	AssignmentExpression	bf -> buf_end = bf -> buffer + len		6135725	0		=			
ANR	6135803	PtrMemberAccess	bf -> buf_end		6135725	0					
ANR	6135804	Identifier	bf		6135725	0					
ANR	6135805	Identifier	buf_end		6135725	1					
ANR	6135806	AdditiveExpression	bf -> buffer + len		6135725	1		+			
ANR	6135807	PtrMemberAccess	bf -> buffer		6135725	0					
ANR	6135808	Identifier	bf		6135725	0					
ANR	6135809	Identifier	buffer		6135725	1					
ANR	6135810	Identifier	len		6135725	1					
ANR	6135811	ExpressionStatement	* bf -> buf_end = CH_EOB	395:2:9368:9389	6135725	4	True				
ANR	6135812	AssignmentExpression	* bf -> buf_end = CH_EOB		6135725	0		=			
ANR	6135813	UnaryOperationExpression	* bf -> buf_end		6135725	0					
ANR	6135814	UnaryOperator	*		6135725	0					
ANR	6135815	PtrMemberAccess	bf -> buf_end		6135725	1					
ANR	6135816	Identifier	bf		6135725	0					
ANR	6135817	Identifier	buf_end		6135725	1					
ANR	6135818	Identifier	CH_EOB		6135725	1					
ANR	6135819	IfStatement	if ( bf -> buf_ptr < bf -> buf_end )		6135725	2					
ANR	6135820	Condition	bf -> buf_ptr < bf -> buf_end	397:5:9399:9423	6135725	0	True				
ANR	6135821	RelationalExpression	bf -> buf_ptr < bf -> buf_end		6135725	0		<			
ANR	6135822	PtrMemberAccess	bf -> buf_ptr		6135725	0					
ANR	6135823	Identifier	bf		6135725	0					
ANR	6135824	Identifier	buf_ptr		6135725	1					
ANR	6135825	PtrMemberAccess	bf -> buf_end		6135725	1					
ANR	6135826	Identifier	bf		6135725	0					
ANR	6135827	Identifier	buf_end		6135725	1					
ANR	6135828	CompoundStatement		23:32:438:438	6135725	1					
ANR	6135829	ReturnStatement	return bf -> buf_ptr [ 0 ] ;	398:2:9430:9451	6135725	0	True				
ANR	6135830	ArrayIndexing	bf -> buf_ptr [ 0 ]		6135725	0					
ANR	6135831	PtrMemberAccess	bf -> buf_ptr		6135725	0					
ANR	6135832	Identifier	bf		6135725	0					
ANR	6135833	Identifier	buf_ptr		6135725	1					
ANR	6135834	PrimaryExpression	0		6135725	1					
ANR	6135835	ElseStatement	else		6135725	0					
ANR	6135836	CompoundStatement		25:8:473:473	6135725	0					
ANR	6135837	ExpressionStatement	bf -> buf_ptr = bf -> buf_end	400:2:9465:9490	6135725	0	True				
ANR	6135838	AssignmentExpression	bf -> buf_ptr = bf -> buf_end		6135725	0		=			
ANR	6135839	PtrMemberAccess	bf -> buf_ptr		6135725	0					
ANR	6135840	Identifier	bf		6135725	0					
ANR	6135841	Identifier	buf_ptr		6135725	1					
ANR	6135842	PtrMemberAccess	bf -> buf_end		6135725	1					
ANR	6135843	Identifier	bf		6135725	0					
ANR	6135844	Identifier	buf_end		6135725	1					
ANR	6135845	ReturnStatement	return CH_EOF ;	401:2:9494:9507	6135725	1	True				
ANR	6135846	Identifier	CH_EOF		6135725	0					
ANR	6135847	ReturnType	static int		6135725	1					
ANR	6135848	Identifier	tcc_peekc_slow		6135725	2					
ANR	6135849	ParameterList	BufferedFile * bf		6135725	3					
ANR	6135850	Parameter	BufferedFile * bf	374:26:8969:8984	6135725	0	True				
ANR	6135851	ParameterType	BufferedFile *		6135725	0					
ANR	6135852	Identifier	bf		6135725	1					
ANR	6135853	CFGEntryNode	ENTRY		6135725		True				
ANR	6135854	CFGExitNode	EXIT		6135725		True				
ANR	6135855	Symbol	read		6135725						
ANR	6135856	Symbol	bf		6135725						
ANR	6135857	Symbol	bf -> buf_end		6135725						
ANR	6135858	Symbol	* bf		6135725						
ANR	6135859	Symbol	CH_EOB		6135725						
ANR	6135860	Symbol	* bf -> buf_ptr		6135725						
ANR	6135861	Symbol	bf -> fd		6135725						
ANR	6135862	Symbol	bf -> buffer		6135725						
ANR	6135863	Symbol	* bf -> buf_end		6135725						
ANR	6135864	Symbol	* * bf		6135725						
ANR	6135865	Symbol	bf -> buf_ptr		6135725						
ANR	6135866	Symbol	len		6135725						
ANR	6135867	Symbol	CH_EOF		6135725						
ANR	6135868	Symbol	total_bytes		6135725						
ANR	6135869	Function	handle_eob	407:0:9605:9667							
ANR	6135870	FunctionDef	handle_eob ()		6135869	0					
ANR	6135871	CompoundStatement		408:0:9634:9667	6135869	0					
ANR	6135872	ReturnStatement	return tcc_peekc_slow ( file ) ;	409:1:9637:9665	6135869	0	True				
ANR	6135873	CallExpression	tcc_peekc_slow ( file )		6135869	0					
ANR	6135874	Callee	tcc_peekc_slow		6135869	0					
ANR	6135875	Identifier	tcc_peekc_slow		6135869	0					
ANR	6135876	ArgumentList	file		6135869	1					
ANR	6135877	Argument	file		6135869	0					
ANR	6135878	Identifier	file		6135869	0					
ANR	6135879	ReturnType	ST_FUNC int		6135869	1					
ANR	6135880	Identifier	handle_eob		6135869	2					
ANR	6135881	ParameterList			6135869	3					
ANR	6135882	CFGEntryNode	ENTRY		6135869		True				
ANR	6135883	CFGExitNode	EXIT		6135869		True				
ANR	6135884	Symbol	file		6135869						
ANR	6135885	Symbol	tcc_peekc_slow		6135869						
ANR	6135886	Function	inp	413:0:9746:9880							
ANR	6135887	FunctionDef	inp ()		6135886	0					
ANR	6135888	CompoundStatement		414:0:9769:9880	6135886	0					
ANR	6135889	ExpressionStatement	ch = * ( ++ ( file -> buf_ptr ) )	415:1:9772:9797	6135886	0	True				
ANR	6135890	AssignmentExpression	ch = * ( ++ ( file -> buf_ptr ) )		6135886	0		=			
ANR	6135891	Identifier	ch		6135886	0					
ANR	6135892	UnaryOperationExpression	* ( ++ ( file -> buf_ptr ) )		6135886	1					
ANR	6135893	UnaryOperator	*		6135886	0					
ANR	6135894	UnaryExpression	++ ( file -> buf_ptr )		6135886	1					
ANR	6135895	IncDec	++		6135886	0					
ANR	6135896	PtrMemberAccess	file -> buf_ptr		6135886	1					
ANR	6135897	Identifier	file		6135886	0					
ANR	6135898	Identifier	buf_ptr		6135886	1					
ANR	6135899	IfStatement	if ( ch == CH_EOB )		6135886	1					
ANR	6135900	Condition	ch == CH_EOB	417:5:9839:9850	6135886	0	True				
ANR	6135901	EqualityExpression	ch == CH_EOB		6135886	0		==			
ANR	6135902	Identifier	ch		6135886	0					
ANR	6135903	Identifier	CH_EOB		6135886	1					
ANR	6135904	CompoundStatement		4:19:83:83	6135886	1					
ANR	6135905	ExpressionStatement	ch = handle_eob ( )	418:2:9857:9875	6135886	0	True				
ANR	6135906	AssignmentExpression	ch = handle_eob ( )		6135886	0		=			
ANR	6135907	Identifier	ch		6135886	0					
ANR	6135908	CallExpression	handle_eob ( )		6135886	1					
ANR	6135909	Callee	handle_eob		6135886	0					
ANR	6135910	Identifier	handle_eob		6135886	0					
ANR	6135911	ArgumentList			6135886	1					
ANR	6135912	ReturnType	ST_INLN void		6135886	1					
ANR	6135913	Identifier	inp		6135886	2					
ANR	6135914	ParameterList			6135886	3					
ANR	6135915	CFGEntryNode	ENTRY		6135886		True				
ANR	6135916	CFGExitNode	EXIT		6135886		True				
ANR	6135917	Symbol	file		6135886						
ANR	6135918	Symbol	ch		6135886						
ANR	6135919	Symbol	* file -> buf_ptr		6135886						
ANR	6135920	Symbol	* ( ++ ( file -> buf_ptr ) )		6135886						
ANR	6135921	Symbol	CH_EOB		6135886						
ANR	6135922	Symbol	handle_eob		6135886						
ANR	6135923	Symbol	file -> buf_ptr		6135886						
ANR	6135924	Symbol	* file		6135886						
ANR	6135925	Symbol	* * file		6135886						
ANR	6135926	Function	handle_stray_noerror	423:0:9906:10189							
ANR	6135927	FunctionDef	handle_stray_noerror ()		6135926	0					
ANR	6135928	CompoundStatement		424:0:9944:10189	6135926	0					
ANR	6135929	WhileStatement	while ( ch == '\\\\' )		6135926	0					
ANR	6135930	Condition	ch == '\\\\'	425:8:9954:9963	6135926	0	True				
ANR	6135931	EqualityExpression	ch == '\\\\'		6135926	0		==			
ANR	6135932	Identifier	ch		6135926	0					
ANR	6135933	PrimaryExpression	'\\\\'		6135926	1					
ANR	6135934	CompoundStatement		2:20:21:21	6135926	1					
ANR	6135935	ExpressionStatement	inp ( )	426:2:9970:9976	6135926	0	True				
ANR	6135936	CallExpression	inp ( )		6135926	0					
ANR	6135937	Callee	inp		6135926	0					
ANR	6135938	Identifier	inp		6135926	0					
ANR	6135939	ArgumentList			6135926	1					
ANR	6135940	IfStatement	if ( ch == '\\n' )		6135926	1					
ANR	6135941	Condition	ch == '\\n'	427:6:9984:9993	6135926	0	True				
ANR	6135942	EqualityExpression	ch == '\\n'		6135926	0		==			
ANR	6135943	Identifier	ch		6135926	0					
ANR	6135944	PrimaryExpression	'\\n'		6135926	1					
ANR	6135945	CompoundStatement		4:18:51:51	6135926	1					
ANR	6135946	ExpressionStatement	file -> line_num ++	428:3:10001:10017	6135926	0	True				
ANR	6135947	PostIncDecOperationExpression	file -> line_num ++		6135926	0					
ANR	6135948	PtrMemberAccess	file -> line_num		6135926	0					
ANR	6135949	Identifier	file		6135926	0					
ANR	6135950	Identifier	line_num		6135926	1					
ANR	6135951	IncDec	++		6135926	1					
ANR	6135952	ExpressionStatement	inp ( )	429:3:10022:10028	6135926	1	True				
ANR	6135953	CallExpression	inp ( )		6135926	0					
ANR	6135954	Callee	inp		6135926	0					
ANR	6135955	Identifier	inp		6135926	0					
ANR	6135956	ArgumentList			6135926	1					
ANR	6135957	ElseStatement	else		6135926	0					
ANR	6135958	IfStatement	if ( ch == '\\r' )		6135926	0					
ANR	6135959	Condition	ch == '\\r'	430:13:10043:10052	6135926	0	True				
ANR	6135960	EqualityExpression	ch == '\\r'		6135926	0		==			
ANR	6135961	Identifier	ch		6135926	0					
ANR	6135962	PrimaryExpression	'\\r'		6135926	1					
ANR	6135963	CompoundStatement		7:25:110:110	6135926	1					
ANR	6135964	ExpressionStatement	inp ( )	431:3:10060:10066	6135926	0	True				
ANR	6135965	CallExpression	inp ( )		6135926	0					
ANR	6135966	Callee	inp		6135926	0					
ANR	6135967	Identifier	inp		6135926	0					
ANR	6135968	ArgumentList			6135926	1					
ANR	6135969	IfStatement	if ( ch != '\\n' )		6135926	1					
ANR	6135970	Condition	ch != '\\n'	432:7:10075:10084	6135926	0	True				
ANR	6135971	EqualityExpression	ch != '\\n'		6135926	0		!=			
ANR	6135972	Identifier	ch		6135926	0					
ANR	6135973	PrimaryExpression	'\\n'		6135926	1					
ANR	6135974	CompoundStatement		9:19:142:142	6135926	1					
ANR	6135975	GotoStatement	goto fail ;	433:4:10093:10102	6135926	0	True				
ANR	6135976	Identifier	fail		6135926	0					
ANR	6135977	ExpressionStatement	file -> line_num ++	435:3:10112:10128	6135926	2	True				
ANR	6135978	PostIncDecOperationExpression	file -> line_num ++		6135926	0					
ANR	6135979	PtrMemberAccess	file -> line_num		6135926	0					
ANR	6135980	Identifier	file		6135926	0					
ANR	6135981	Identifier	line_num		6135926	1					
ANR	6135982	IncDec	++		6135926	1					
ANR	6135983	ExpressionStatement	inp ( )	436:3:10133:10139	6135926	3	True				
ANR	6135984	CallExpression	inp ( )		6135926	0					
ANR	6135985	Callee	inp		6135926	0					
ANR	6135986	Identifier	inp		6135926	0					
ANR	6135987	ArgumentList			6135926	1					
ANR	6135988	ElseStatement	else		6135926	0					
ANR	6135989	CompoundStatement		14:9:205:205	6135926	0					
ANR	6135990	Label	fail :	438:0:10152:10156	6135926	0	True				
ANR	6135991	Identifier	fail		6135926	0					
ANR	6135992	ReturnStatement	return 1 ;	439:3:10161:10169	6135926	1	True				
ANR	6135993	PrimaryExpression	1		6135926	0					
ANR	6135994	ReturnStatement	return 0 ;	442:1:10179:10187	6135926	1	True				
ANR	6135995	PrimaryExpression	0		6135926	0					
ANR	6135996	ReturnType	static int		6135926	1					
ANR	6135997	Identifier	handle_stray_noerror		6135926	2					
ANR	6135998	ParameterList			6135926	3					
ANR	6135999	CFGEntryNode	ENTRY		6135926		True				
ANR	6136000	CFGExitNode	EXIT		6135926		True				
ANR	6136001	Symbol	file		6135926						
ANR	6136002	Symbol	ch		6135926						
ANR	6136003	Symbol	file -> line_num		6135926						
ANR	6136004	Symbol	* file		6135926						
ANR	6136005	Function	handle_stray	445:0:10192:10299							
ANR	6136006	FunctionDef	handle_stray ()		6136005	0					
ANR	6136007	CompoundStatement		446:0:10223:10299	6136005	0					
ANR	6136008	IfStatement	if ( handle_stray_noerror ( ) )		6136005	0					
ANR	6136009	Condition	handle_stray_noerror ( )	447:5:10230:10252	6136005	0	True				
ANR	6136010	CallExpression	handle_stray_noerror ( )		6136005	0					
ANR	6136011	Callee	handle_stray_noerror		6136005	0					
ANR	6136012	Identifier	handle_stray_noerror		6136005	0					
ANR	6136013	ArgumentList			6136005	1					
ANR	6136014	CompoundStatement		2:30:31:31	6136005	1					
ANR	6136015	ExpressionStatement	"tcc_error ( ""stray '\\\\' in program"" )"	448:2:10259:10294	6136005	0	True				
ANR	6136016	CallExpression	"tcc_error ( ""stray '\\\\' in program"" )"		6136005	0					
ANR	6136017	Callee	tcc_error		6136005	0					
ANR	6136018	Identifier	tcc_error		6136005	0					
ANR	6136019	ArgumentList	"""stray '\\\\' in program"""		6136005	1					
ANR	6136020	Argument	"""stray '\\\\' in program"""		6136005	0					
ANR	6136021	PrimaryExpression	"""stray '\\\\' in program"""		6136005	0					
ANR	6136022	ReturnType	static void		6136005	1					
ANR	6136023	Identifier	handle_stray		6136005	2					
ANR	6136024	ParameterList			6136005	3					
ANR	6136025	CFGEntryNode	ENTRY		6136005		True				
ANR	6136026	CFGExitNode	EXIT		6136005		True				
ANR	6136027	Symbol	handle_stray_noerror		6136005						
ANR	6136028	Function	handle_stray1	454:0:10401:10702							
ANR	6136029	FunctionDef	handle_stray1 (uint8_t * p)		6136028	0					
ANR	6136030	CompoundStatement		455:0:10438:10702	6136028	0					
ANR	6136031	IdentifierDeclStatement	int c ;	456:1:10441:10446	6136028	0	True				
ANR	6136032	IdentifierDecl	c		6136028	0					
ANR	6136033	IdentifierDeclType	int		6136028	0					
ANR	6136034	Identifier	c		6136028	1					
ANR	6136035	IfStatement	if ( p >= file -> buf_end )		6136028	1					
ANR	6136036	Condition	p >= file -> buf_end	458:5:10454:10471	6136028	0	True				
ANR	6136037	RelationalExpression	p >= file -> buf_end		6136028	0		>=			
ANR	6136038	Identifier	p		6136028	0					
ANR	6136039	PtrMemberAccess	file -> buf_end		6136028	1					
ANR	6136040	Identifier	file		6136028	0					
ANR	6136041	Identifier	buf_end		6136028	1					
ANR	6136042	CompoundStatement		4:25:35:35	6136028	1					
ANR	6136043	ExpressionStatement	file -> buf_ptr = p	459:2:10478:10495	6136028	0	True				
ANR	6136044	AssignmentExpression	file -> buf_ptr = p		6136028	0		=			
ANR	6136045	PtrMemberAccess	file -> buf_ptr		6136028	0					
ANR	6136046	Identifier	file		6136028	0					
ANR	6136047	Identifier	buf_ptr		6136028	1					
ANR	6136048	Identifier	p		6136028	1					
ANR	6136049	ExpressionStatement	c = handle_eob ( )	460:2:10499:10516	6136028	1	True				
ANR	6136050	AssignmentExpression	c = handle_eob ( )		6136028	0		=			
ANR	6136051	Identifier	c		6136028	0					
ANR	6136052	CallExpression	handle_eob ( )		6136028	1					
ANR	6136053	Callee	handle_eob		6136028	0					
ANR	6136054	Identifier	handle_eob		6136028	0					
ANR	6136055	ArgumentList			6136028	1					
ANR	6136056	ExpressionStatement	p = file -> buf_ptr	461:2:10520:10537	6136028	2	True				
ANR	6136057	AssignmentExpression	p = file -> buf_ptr		6136028	0		=			
ANR	6136058	Identifier	p		6136028	0					
ANR	6136059	PtrMemberAccess	file -> buf_ptr		6136028	1					
ANR	6136060	Identifier	file		6136028	0					
ANR	6136061	Identifier	buf_ptr		6136028	1					
ANR	6136062	IfStatement	if ( c == '\\\\' )		6136028	3					
ANR	6136063	Condition	c == '\\\\'	462:6:10545:10553	6136028	0	True				
ANR	6136064	EqualityExpression	c == '\\\\'		6136028	0		==			
ANR	6136065	Identifier	c		6136028	0					
ANR	6136066	PrimaryExpression	'\\\\'		6136028	1					
ANR	6136067	CompoundStatement		8:17:117:117	6136028	1					
ANR	6136068	GotoStatement	goto parse_stray ;	463:3:10561:10577	6136028	0	True				
ANR	6136069	Identifier	parse_stray		6136028	0					
ANR	6136070	ElseStatement	else		6136028	0					
ANR	6136071	CompoundStatement		11:8:152:152	6136028	0					
ANR	6136072	Label	parse_stray :	466:0:10593:10604	6136028	0	True				
ANR	6136073	Identifier	parse_stray		6136028	0					
ANR	6136074	ExpressionStatement	file -> buf_ptr = p	467:2:10608:10625	6136028	1	True				
ANR	6136075	AssignmentExpression	file -> buf_ptr = p		6136028	0		=			
ANR	6136076	PtrMemberAccess	file -> buf_ptr		6136028	0					
ANR	6136077	Identifier	file		6136028	0					
ANR	6136078	Identifier	buf_ptr		6136028	1					
ANR	6136079	Identifier	p		6136028	1					
ANR	6136080	ExpressionStatement	ch = * p	468:2:10629:10636	6136028	2	True				
ANR	6136081	AssignmentExpression	ch = * p		6136028	0		=			
ANR	6136082	Identifier	ch		6136028	0					
ANR	6136083	UnaryOperationExpression	* p		6136028	1					
ANR	6136084	UnaryOperator	*		6136028	0					
ANR	6136085	Identifier	p		6136028	1					
ANR	6136086	ExpressionStatement	handle_stray ( )	469:2:10640:10655	6136028	3	True				
ANR	6136087	CallExpression	handle_stray ( )		6136028	0					
ANR	6136088	Callee	handle_stray		6136028	0					
ANR	6136089	Identifier	handle_stray		6136028	0					
ANR	6136090	ArgumentList			6136028	1					
ANR	6136091	ExpressionStatement	p = file -> buf_ptr	470:2:10659:10676	6136028	4	True				
ANR	6136092	AssignmentExpression	p = file -> buf_ptr		6136028	0		=			
ANR	6136093	Identifier	p		6136028	0					
ANR	6136094	PtrMemberAccess	file -> buf_ptr		6136028	1					
ANR	6136095	Identifier	file		6136028	0					
ANR	6136096	Identifier	buf_ptr		6136028	1					
ANR	6136097	ExpressionStatement	c = * p	471:2:10680:10686	6136028	5	True				
ANR	6136098	AssignmentExpression	c = * p		6136028	0		=			
ANR	6136099	Identifier	c		6136028	0					
ANR	6136100	UnaryOperationExpression	* p		6136028	1					
ANR	6136101	UnaryOperator	*		6136028	0					
ANR	6136102	Identifier	p		6136028	1					
ANR	6136103	ReturnStatement	return c ;	473:1:10692:10700	6136028	2	True				
ANR	6136104	Identifier	c		6136028	0					
ANR	6136105	ReturnType	static int		6136028	1					
ANR	6136106	Identifier	handle_stray1		6136028	2					
ANR	6136107	ParameterList	uint8_t * p		6136028	3					
ANR	6136108	Parameter	uint8_t * p	454:25:10426:10435	6136028	0	True				
ANR	6136109	ParameterType	uint8_t *		6136028	0					
ANR	6136110	Identifier	p		6136028	1					
ANR	6136111	CFGEntryNode	ENTRY		6136028		True				
ANR	6136112	CFGExitNode	EXIT		6136028		True				
ANR	6136113	Symbol	p		6136028						
ANR	6136114	Symbol	c		6136028						
ANR	6136115	Symbol	file		6136028						
ANR	6136116	Symbol	ch		6136028						
ANR	6136117	Symbol	file -> buf_end		6136028						
ANR	6136118	Symbol	handle_eob		6136028						
ANR	6136119	Symbol	* p		6136028						
ANR	6136120	Symbol	file -> buf_ptr		6136028						
ANR	6136121	Symbol	* file		6136028						
ANR	6136122	Function	minp	502:0:11252:11328							
ANR	6136123	FunctionDef	minp ()		6136122	0					
ANR	6136124	CompoundStatement		503:0:11276:11328	6136122	0					
ANR	6136125	ExpressionStatement	inp ( )	504:1:11279:11285	6136122	0	True				
ANR	6136126	CallExpression	inp ( )		6136122	0					
ANR	6136127	Callee	inp		6136122	0					
ANR	6136128	Identifier	inp		6136122	0					
ANR	6136129	ArgumentList			6136122	1					
ANR	6136130	IfStatement	if ( ch == '\\\\' )		6136122	1					
ANR	6136131	Condition	ch == '\\\\'	505:5:11292:11301	6136122	0	True				
ANR	6136132	EqualityExpression	ch == '\\\\'		6136122	0		==			
ANR	6136133	Identifier	ch		6136122	0					
ANR	6136134	PrimaryExpression	'\\\\'		6136122	1					
ANR	6136135	CompoundStatement		3:17:27:27	6136122	1					
ANR	6136136	ExpressionStatement	handle_stray ( )	506:2:11308:11323	6136122	0	True				
ANR	6136137	CallExpression	handle_stray ( )		6136122	0					
ANR	6136138	Callee	handle_stray		6136122	0					
ANR	6136139	Identifier	handle_stray		6136122	0					
ANR	6136140	ArgumentList			6136122	1					
ANR	6136141	ReturnType	ST_FUNC void		6136122	1					
ANR	6136142	Identifier	minp		6136122	2					
ANR	6136143	ParameterList			6136122	3					
ANR	6136144	CFGEntryNode	ENTRY		6136122		True				
ANR	6136145	CFGExitNode	EXIT		6136122		True				
ANR	6136146	Symbol	ch		6136122						
ANR	6136147	Function	parse_line_comment	512:0:11363:11903							
ANR	6136148	FunctionDef	parse_line_comment (uint8_t * p)		6136147	0					
ANR	6136149	CompoundStatement		513:0:11410:11903	6136147	0					
ANR	6136150	IdentifierDeclStatement	int c ;	514:1:11413:11418	6136147	0	True				
ANR	6136151	IdentifierDecl	c		6136147	0					
ANR	6136152	IdentifierDeclType	int		6136147	0					
ANR	6136153	Identifier	c		6136147	1					
ANR	6136154	ExpressionStatement	p ++	516:1:11422:11425	6136147	1	True				
ANR	6136155	PostIncDecOperationExpression	p ++		6136147	0					
ANR	6136156	Identifier	p		6136147	0					
ANR	6136157	IncDec	++		6136147	1					
ANR	6136158	ForStatement	for ( ; ; )		6136147	2					
ANR	6136159	CompoundStatement		5:10:26:26	6136147	0					
ANR	6136160	ExpressionStatement	c = * p	518:2:11441:11447	6136147	0	True				
ANR	6136161	AssignmentExpression	c = * p		6136147	0		=			
ANR	6136162	Identifier	c		6136147	0					
ANR	6136163	UnaryOperationExpression	* p		6136147	1					
ANR	6136164	UnaryOperator	*		6136147	0					
ANR	6136165	Identifier	p		6136147	1					
ANR	6136166	Label	redo :	519:0:11449:11453	6136147	1	True				
ANR	6136167	Identifier	redo		6136147	0					
ANR	6136168	IfStatement	if ( c == '\\n' || c == CH_EOF )		6136147	2					
ANR	6136169	Condition	c == '\\n' || c == CH_EOF	520:6:11461:11484	6136147	0	True				
ANR	6136170	OrExpression	c == '\\n' || c == CH_EOF		6136147	0		||			
ANR	6136171	EqualityExpression	c == '\\n'		6136147	0		==			
ANR	6136172	Identifier	c		6136147	0					
ANR	6136173	PrimaryExpression	'\\n'		6136147	1					
ANR	6136174	EqualityExpression	c == CH_EOF		6136147	1		==			
ANR	6136175	Identifier	c		6136147	0					
ANR	6136176	Identifier	CH_EOF		6136147	1					
ANR	6136177	CompoundStatement		8:32:76:76	6136147	1					
ANR	6136178	BreakStatement	break ;	521:3:11492:11497	6136147	0	True				
ANR	6136179	ElseStatement	else		6136147	0					
ANR	6136180	IfStatement	if ( c == '\\\\' )		6136147	0					
ANR	6136181	Condition	c == '\\\\'	522:13:11512:11520	6136147	0	True				
ANR	6136182	EqualityExpression	c == '\\\\'		6136147	0		==			
ANR	6136183	Identifier	c		6136147	0					
ANR	6136184	PrimaryExpression	'\\\\'		6136147	1					
ANR	6136185	CompoundStatement		10:24:112:112	6136147	1					
ANR	6136186	ExpressionStatement	file -> buf_ptr = p	523:3:11528:11545	6136147	0	True				
ANR	6136187	AssignmentExpression	file -> buf_ptr = p		6136147	0		=			
ANR	6136188	PtrMemberAccess	file -> buf_ptr		6136147	0					
ANR	6136189	Identifier	file		6136147	0					
ANR	6136190	Identifier	buf_ptr		6136147	1					
ANR	6136191	Identifier	p		6136147	1					
ANR	6136192	ExpressionStatement	c = handle_eob ( )	524:3:11550:11567	6136147	1	True				
ANR	6136193	AssignmentExpression	c = handle_eob ( )		6136147	0		=			
ANR	6136194	Identifier	c		6136147	0					
ANR	6136195	CallExpression	handle_eob ( )		6136147	1					
ANR	6136196	Callee	handle_eob		6136147	0					
ANR	6136197	Identifier	handle_eob		6136147	0					
ANR	6136198	ArgumentList			6136147	1					
ANR	6136199	ExpressionStatement	p = file -> buf_ptr	525:3:11572:11589	6136147	2	True				
ANR	6136200	AssignmentExpression	p = file -> buf_ptr		6136147	0		=			
ANR	6136201	Identifier	p		6136147	0					
ANR	6136202	PtrMemberAccess	file -> buf_ptr		6136147	1					
ANR	6136203	Identifier	file		6136147	0					
ANR	6136204	Identifier	buf_ptr		6136147	1					
ANR	6136205	IfStatement	if ( c == '\\\\' )		6136147	3					
ANR	6136206	Condition	c == '\\\\'	526:7:11598:11606	6136147	0	True				
ANR	6136207	EqualityExpression	c == '\\\\'		6136147	0		==			
ANR	6136208	Identifier	c		6136147	0					
ANR	6136209	PrimaryExpression	'\\\\'		6136147	1					
ANR	6136210	CompoundStatement		14:18:198:198	6136147	1					
ANR	6136211	ExpressionStatement	"PEEKC_EOB ( c , p )"	527:4:11615:11631	6136147	0	True				
ANR	6136212	CallExpression	"PEEKC_EOB ( c , p )"		6136147	0					
ANR	6136213	Callee	PEEKC_EOB		6136147	0					
ANR	6136214	Identifier	PEEKC_EOB		6136147	0					
ANR	6136215	ArgumentList	c		6136147	1					
ANR	6136216	Argument	c		6136147	0					
ANR	6136217	Identifier	c		6136147	0					
ANR	6136218	Argument	p		6136147	1					
ANR	6136219	Identifier	p		6136147	0					
ANR	6136220	IfStatement	if ( c == '\\n' )		6136147	1					
ANR	6136221	Condition	c == '\\n'	528:8:11641:11649	6136147	0	True				
ANR	6136222	EqualityExpression	c == '\\n'		6136147	0		==			
ANR	6136223	Identifier	c		6136147	0					
ANR	6136224	PrimaryExpression	'\\n'		6136147	1					
ANR	6136225	CompoundStatement		16:19:241:241	6136147	1					
ANR	6136226	ExpressionStatement	file -> line_num ++	529:5:11659:11675	6136147	0	True				
ANR	6136227	PostIncDecOperationExpression	file -> line_num ++		6136147	0					
ANR	6136228	PtrMemberAccess	file -> line_num		6136147	0					
ANR	6136229	Identifier	file		6136147	0					
ANR	6136230	Identifier	line_num		6136147	1					
ANR	6136231	IncDec	++		6136147	1					
ANR	6136232	ExpressionStatement	"PEEKC_EOB ( c , p )"	530:5:11682:11698	6136147	1	True				
ANR	6136233	CallExpression	"PEEKC_EOB ( c , p )"		6136147	0					
ANR	6136234	Callee	PEEKC_EOB		6136147	0					
ANR	6136235	Identifier	PEEKC_EOB		6136147	0					
ANR	6136236	ArgumentList	c		6136147	1					
ANR	6136237	Argument	c		6136147	0					
ANR	6136238	Identifier	c		6136147	0					
ANR	6136239	Argument	p		6136147	1					
ANR	6136240	Identifier	p		6136147	0					
ANR	6136241	ElseStatement	else		6136147	0					
ANR	6136242	IfStatement	if ( c == '\\r' )		6136147	0					
ANR	6136243	Condition	c == '\\r'	531:15:11715:11723	6136147	0	True				
ANR	6136244	EqualityExpression	c == '\\r'		6136147	0		==			
ANR	6136245	Identifier	c		6136147	0					
ANR	6136246	PrimaryExpression	'\\r'		6136147	1					
ANR	6136247	CompoundStatement		19:26:315:315	6136147	1					
ANR	6136248	ExpressionStatement	"PEEKC_EOB ( c , p )"	532:5:11733:11749	6136147	0	True				
ANR	6136249	CallExpression	"PEEKC_EOB ( c , p )"		6136147	0					
ANR	6136250	Callee	PEEKC_EOB		6136147	0					
ANR	6136251	Identifier	PEEKC_EOB		6136147	0					
ANR	6136252	ArgumentList	c		6136147	1					
ANR	6136253	Argument	c		6136147	0					
ANR	6136254	Identifier	c		6136147	0					
ANR	6136255	Argument	p		6136147	1					
ANR	6136256	Identifier	p		6136147	0					
ANR	6136257	IfStatement	if ( c == '\\n' )		6136147	1					
ANR	6136258	Condition	c == '\\n'	533:9:11760:11768	6136147	0	True				
ANR	6136259	EqualityExpression	c == '\\n'		6136147	0		==			
ANR	6136260	Identifier	c		6136147	0					
ANR	6136261	PrimaryExpression	'\\n'		6136147	1					
ANR	6136262	CompoundStatement		21:20:360:360	6136147	1					
ANR	6136263	ExpressionStatement	file -> line_num ++	534:6:11779:11795	6136147	0	True				
ANR	6136264	PostIncDecOperationExpression	file -> line_num ++		6136147	0					
ANR	6136265	PtrMemberAccess	file -> line_num		6136147	0					
ANR	6136266	Identifier	file		6136147	0					
ANR	6136267	Identifier	line_num		6136147	1					
ANR	6136268	IncDec	++		6136147	1					
ANR	6136269	ExpressionStatement	"PEEKC_EOB ( c , p )"	535:6:11803:11819	6136147	1	True				
ANR	6136270	CallExpression	"PEEKC_EOB ( c , p )"		6136147	0					
ANR	6136271	Callee	PEEKC_EOB		6136147	0					
ANR	6136272	Identifier	PEEKC_EOB		6136147	0					
ANR	6136273	ArgumentList	c		6136147	1					
ANR	6136274	Argument	c		6136147	0					
ANR	6136275	Identifier	c		6136147	0					
ANR	6136276	Argument	p		6136147	1					
ANR	6136277	Identifier	p		6136147	0					
ANR	6136278	ElseStatement	else		6136147	0					
ANR	6136279	CompoundStatement		26:10:433:433	6136147	0					
ANR	6136280	GotoStatement	goto redo ;	539:4:11850:11859	6136147	0	True				
ANR	6136281	Identifier	redo		6136147	0					
ANR	6136282	ElseStatement	else		6136147	0					
ANR	6136283	CompoundStatement		29:9:464:464	6136147	0					
ANR	6136284	ExpressionStatement	p ++	542:3:11880:11883	6136147	0	True				
ANR	6136285	PostIncDecOperationExpression	p ++		6136147	0					
ANR	6136286	Identifier	p		6136147	0					
ANR	6136287	IncDec	++		6136147	1					
ANR	6136288	ReturnStatement	return p ;	545:1:11893:11901	6136147	3	True				
ANR	6136289	Identifier	p		6136147	0					
ANR	6136290	ReturnType	static uint8_t *		6136147	1					
ANR	6136291	Identifier	parse_line_comment		6136147	2					
ANR	6136292	ParameterList	uint8_t * p		6136147	3					
ANR	6136293	Parameter	uint8_t * p	512:35:11398:11407	6136147	0	True				
ANR	6136294	ParameterType	uint8_t *		6136147	0					
ANR	6136295	Identifier	p		6136147	1					
ANR	6136296	CFGEntryNode	ENTRY		6136147		True				
ANR	6136297	CFGExitNode	EXIT		6136147		True				
ANR	6136298	InfiniteForNode	true		6136147		True				
ANR	6136299	Symbol	p		6136147						
ANR	6136300	Symbol	c		6136147						
ANR	6136301	Symbol	file		6136147						
ANR	6136302	Symbol	CH_EOF		6136147						
ANR	6136303	Symbol	* p		6136147						
ANR	6136304	Symbol	handle_eob		6136147						
ANR	6136305	Symbol	file -> buf_ptr		6136147						
ANR	6136306	Symbol	file -> line_num		6136147						
ANR	6136307	Symbol	* file		6136147						
ANR	6136308	Function	parse_comment	549:0:11923:13256							
ANR	6136309	FunctionDef	parse_comment (uint8_t * p)		6136308	0					
ANR	6136310	CompoundStatement		550:0:11966:13256	6136308	0					
ANR	6136311	IdentifierDeclStatement	int c ;	551:1:11969:11974	6136308	0	True				
ANR	6136312	IdentifierDecl	c		6136308	0					
ANR	6136313	IdentifierDeclType	int		6136308	0					
ANR	6136314	Identifier	c		6136308	1					
ANR	6136315	ExpressionStatement	p ++	553:1:11978:11981	6136308	1	True				
ANR	6136316	PostIncDecOperationExpression	p ++		6136308	0					
ANR	6136317	Identifier	p		6136308	0					
ANR	6136318	IncDec	++		6136308	1					
ANR	6136319	ForStatement	for ( ; ; )		6136308	2					
ANR	6136320	CompoundStatement		5:10:26:26	6136308	0					
ANR	6136321	ForStatement	for ( ; ; )		6136308	0					
ANR	6136322	CompoundStatement		7:11:62:62	6136308	0					
ANR	6136323	ExpressionStatement	c = * p	557:3:12034:12040	6136308	0	True				
ANR	6136324	AssignmentExpression	c = * p		6136308	0		=			
ANR	6136325	Identifier	c		6136308	0					
ANR	6136326	UnaryOperationExpression	* p		6136308	1					
ANR	6136327	UnaryOperator	*		6136308	0					
ANR	6136328	Identifier	p		6136308	1					
ANR	6136329	IfStatement	if ( c == '\\n' || c == '*' || c == '\\\\' )		6136308	1					
ANR	6136330	Condition	c == '\\n' || c == '*' || c == '\\\\'	558:7:12049:12082	6136308	0	True				
ANR	6136331	OrExpression	c == '\\n' || c == '*' || c == '\\\\'		6136308	0		||			
ANR	6136332	EqualityExpression	c == '\\n'		6136308	0		==			
ANR	6136333	Identifier	c		6136308	0					
ANR	6136334	PrimaryExpression	'\\n'		6136308	1					
ANR	6136335	OrExpression	c == '*' || c == '\\\\'		6136308	1		||			
ANR	6136336	EqualityExpression	c == '*'		6136308	0		==			
ANR	6136337	Identifier	c		6136308	0					
ANR	6136338	PrimaryExpression	'*'		6136308	1					
ANR	6136339	EqualityExpression	c == '\\\\'		6136308	1		==			
ANR	6136340	Identifier	c		6136308	0					
ANR	6136341	PrimaryExpression	'\\\\'		6136308	1					
ANR	6136342	CompoundStatement		9:43:118:118	6136308	1					
ANR	6136343	BreakStatement	break ;	559:4:12091:12096	6136308	0	True				
ANR	6136344	ExpressionStatement	p ++	561:3:12106:12109	6136308	2	True				
ANR	6136345	PostIncDecOperationExpression	p ++		6136308	0					
ANR	6136346	Identifier	p		6136308	0					
ANR	6136347	IncDec	++		6136308	1					
ANR	6136348	ExpressionStatement	c = * p	562:3:12114:12120	6136308	3	True				
ANR	6136349	AssignmentExpression	c = * p		6136308	0		=			
ANR	6136350	Identifier	c		6136308	0					
ANR	6136351	UnaryOperationExpression	* p		6136308	1					
ANR	6136352	UnaryOperator	*		6136308	0					
ANR	6136353	Identifier	p		6136308	1					
ANR	6136354	IfStatement	if ( c == '\\n' || c == '*' || c == '\\\\' )		6136308	4					
ANR	6136355	Condition	c == '\\n' || c == '*' || c == '\\\\'	563:7:12129:12162	6136308	0	True				
ANR	6136356	OrExpression	c == '\\n' || c == '*' || c == '\\\\'		6136308	0		||			
ANR	6136357	EqualityExpression	c == '\\n'		6136308	0		==			
ANR	6136358	Identifier	c		6136308	0					
ANR	6136359	PrimaryExpression	'\\n'		6136308	1					
ANR	6136360	OrExpression	c == '*' || c == '\\\\'		6136308	1		||			
ANR	6136361	EqualityExpression	c == '*'		6136308	0		==			
ANR	6136362	Identifier	c		6136308	0					
ANR	6136363	PrimaryExpression	'*'		6136308	1					
ANR	6136364	EqualityExpression	c == '\\\\'		6136308	1		==			
ANR	6136365	Identifier	c		6136308	0					
ANR	6136366	PrimaryExpression	'\\\\'		6136308	1					
ANR	6136367	CompoundStatement		14:43:198:198	6136308	1					
ANR	6136368	BreakStatement	break ;	564:4:12171:12176	6136308	0	True				
ANR	6136369	ExpressionStatement	p ++	566:3:12186:12189	6136308	5	True				
ANR	6136370	PostIncDecOperationExpression	p ++		6136308	0					
ANR	6136371	Identifier	p		6136308	0					
ANR	6136372	IncDec	++		6136308	1					
ANR	6136373	IfStatement	if ( c == '\\n' )		6136308	1					
ANR	6136374	Condition	c == '\\n'	569:6:12241:12249	6136308	0	True				
ANR	6136375	EqualityExpression	c == '\\n'		6136308	0		==			
ANR	6136376	Identifier	c		6136308	0					
ANR	6136377	PrimaryExpression	'\\n'		6136308	1					
ANR	6136378	CompoundStatement		20:17:285:285	6136308	1					
ANR	6136379	ExpressionStatement	file -> line_num ++	570:3:12257:12273	6136308	0	True				
ANR	6136380	PostIncDecOperationExpression	file -> line_num ++		6136308	0					
ANR	6136381	PtrMemberAccess	file -> line_num		6136308	0					
ANR	6136382	Identifier	file		6136308	0					
ANR	6136383	Identifier	line_num		6136308	1					
ANR	6136384	IncDec	++		6136308	1					
ANR	6136385	ExpressionStatement	p ++	571:3:12278:12281	6136308	1	True				
ANR	6136386	PostIncDecOperationExpression	p ++		6136308	0					
ANR	6136387	Identifier	p		6136308	0					
ANR	6136388	IncDec	++		6136308	1					
ANR	6136389	ElseStatement	else		6136308	0					
ANR	6136390	IfStatement	if ( c == '*' )		6136308	0					
ANR	6136391	Condition	c == '*'	572:13:12296:12303	6136308	0	True				
ANR	6136392	EqualityExpression	c == '*'		6136308	0		==			
ANR	6136393	Identifier	c		6136308	0					
ANR	6136394	PrimaryExpression	'*'		6136308	1					
ANR	6136395	CompoundStatement		23:23:339:339	6136308	1					
ANR	6136396	ExpressionStatement	p ++	573:3:12311:12314	6136308	0	True				
ANR	6136397	PostIncDecOperationExpression	p ++		6136308	0					
ANR	6136398	Identifier	p		6136308	0					
ANR	6136399	IncDec	++		6136308	1					
ANR	6136400	ForStatement	for ( ; ; )		6136308	1					
ANR	6136401	CompoundStatement		25:12:361:361	6136308	0					
ANR	6136402	ExpressionStatement	c = * p	575:4:12334:12340	6136308	0	True				
ANR	6136403	AssignmentExpression	c = * p		6136308	0		=			
ANR	6136404	Identifier	c		6136308	0					
ANR	6136405	UnaryOperationExpression	* p		6136308	1					
ANR	6136406	UnaryOperator	*		6136308	0					
ANR	6136407	Identifier	p		6136308	1					
ANR	6136408	IfStatement	if ( c == '*' )		6136308	1					
ANR	6136409	Condition	c == '*'	576:8:12350:12357	6136308	0	True				
ANR	6136410	EqualityExpression	c == '*'		6136308	0		==			
ANR	6136411	Identifier	c		6136308	0					
ANR	6136412	PrimaryExpression	'*'		6136308	1					
ANR	6136413	CompoundStatement		27:18:393:393	6136308	1					
ANR	6136414	ExpressionStatement	p ++	577:5:12367:12370	6136308	0	True				
ANR	6136415	PostIncDecOperationExpression	p ++		6136308	0					
ANR	6136416	Identifier	p		6136308	0					
ANR	6136417	IncDec	++		6136308	1					
ANR	6136418	ElseStatement	else		6136308	0					
ANR	6136419	IfStatement	if ( c == '/' )		6136308	0					
ANR	6136420	Condition	c == '/'	578:15:12387:12394	6136308	0	True				
ANR	6136421	EqualityExpression	c == '/'		6136308	0		==			
ANR	6136422	Identifier	c		6136308	0					
ANR	6136423	PrimaryExpression	'/'		6136308	1					
ANR	6136424	CompoundStatement		29:25:430:430	6136308	1					
ANR	6136425	GotoStatement	goto end_of_comment ;	579:5:12404:12423	6136308	0	True				
ANR	6136426	Identifier	end_of_comment		6136308	0					
ANR	6136427	ElseStatement	else		6136308	0					
ANR	6136428	IfStatement	if ( c == '\\\\' )		6136308	0					
ANR	6136429	Condition	c == '\\\\'	580:15:12440:12448	6136308	0	True				
ANR	6136430	EqualityExpression	c == '\\\\'		6136308	0		==			
ANR	6136431	Identifier	c		6136308	0					
ANR	6136432	PrimaryExpression	'\\\\'		6136308	1					
ANR	6136433	CompoundStatement		31:26:484:484	6136308	1					
ANR	6136434	ExpressionStatement	file -> buf_ptr = p	581:5:12458:12475	6136308	0	True				
ANR	6136435	AssignmentExpression	file -> buf_ptr = p		6136308	0		=			
ANR	6136436	PtrMemberAccess	file -> buf_ptr		6136308	0					
ANR	6136437	Identifier	file		6136308	0					
ANR	6136438	Identifier	buf_ptr		6136308	1					
ANR	6136439	Identifier	p		6136308	1					
ANR	6136440	ExpressionStatement	c = handle_eob ( )	582:5:12482:12499	6136308	1	True				
ANR	6136441	AssignmentExpression	c = handle_eob ( )		6136308	0		=			
ANR	6136442	Identifier	c		6136308	0					
ANR	6136443	CallExpression	handle_eob ( )		6136308	1					
ANR	6136444	Callee	handle_eob		6136308	0					
ANR	6136445	Identifier	handle_eob		6136308	0					
ANR	6136446	ArgumentList			6136308	1					
ANR	6136447	ExpressionStatement	p = file -> buf_ptr	583:5:12506:12523	6136308	2	True				
ANR	6136448	AssignmentExpression	p = file -> buf_ptr		6136308	0		=			
ANR	6136449	Identifier	p		6136308	0					
ANR	6136450	PtrMemberAccess	file -> buf_ptr		6136308	1					
ANR	6136451	Identifier	file		6136308	0					
ANR	6136452	Identifier	buf_ptr		6136308	1					
ANR	6136453	IfStatement	if ( c == '\\\\' )		6136308	3					
ANR	6136454	Condition	c == '\\\\'	584:9:12534:12542	6136308	0	True				
ANR	6136455	EqualityExpression	c == '\\\\'		6136308	0		==			
ANR	6136456	Identifier	c		6136308	0					
ANR	6136457	PrimaryExpression	'\\\\'		6136308	1					
ANR	6136458	CompoundStatement		35:20:578:578	6136308	1					
ANR	6136459	WhileStatement	while ( c == '\\\\' )		6136308	0					
ANR	6136460	Condition	c == '\\\\'	586:13:12618:12626	6136308	0	True				
ANR	6136461	EqualityExpression	c == '\\\\'		6136308	0		==			
ANR	6136462	Identifier	c		6136308	0					
ANR	6136463	PrimaryExpression	'\\\\'		6136308	1					
ANR	6136464	CompoundStatement		37:24:662:662	6136308	1					
ANR	6136465	ExpressionStatement	"PEEKC_EOB ( c , p )"	587:7:12638:12654	6136308	0	True				
ANR	6136466	CallExpression	"PEEKC_EOB ( c , p )"		6136308	0					
ANR	6136467	Callee	PEEKC_EOB		6136308	0					
ANR	6136468	Identifier	PEEKC_EOB		6136308	0					
ANR	6136469	ArgumentList	c		6136308	1					
ANR	6136470	Argument	c		6136308	0					
ANR	6136471	Identifier	c		6136308	0					
ANR	6136472	Argument	p		6136308	1					
ANR	6136473	Identifier	p		6136308	0					
ANR	6136474	IfStatement	if ( c == '\\n' )		6136308	1					
ANR	6136475	Condition	c == '\\n'	588:11:12667:12675	6136308	0	True				
ANR	6136476	EqualityExpression	c == '\\n'		6136308	0		==			
ANR	6136477	Identifier	c		6136308	0					
ANR	6136478	PrimaryExpression	'\\n'		6136308	1					
ANR	6136479	CompoundStatement		39:22:711:711	6136308	1					
ANR	6136480	ExpressionStatement	file -> line_num ++	589:8:12688:12704	6136308	0	True				
ANR	6136481	PostIncDecOperationExpression	file -> line_num ++		6136308	0					
ANR	6136482	PtrMemberAccess	file -> line_num		6136308	0					
ANR	6136483	Identifier	file		6136308	0					
ANR	6136484	Identifier	line_num		6136308	1					
ANR	6136485	IncDec	++		6136308	1					
ANR	6136486	ExpressionStatement	"PEEKC_EOB ( c , p )"	590:8:12714:12730	6136308	1	True				
ANR	6136487	CallExpression	"PEEKC_EOB ( c , p )"		6136308	0					
ANR	6136488	Callee	PEEKC_EOB		6136308	0					
ANR	6136489	Identifier	PEEKC_EOB		6136308	0					
ANR	6136490	ArgumentList	c		6136308	1					
ANR	6136491	Argument	c		6136308	0					
ANR	6136492	Identifier	c		6136308	0					
ANR	6136493	Argument	p		6136308	1					
ANR	6136494	Identifier	p		6136308	0					
ANR	6136495	ElseStatement	else		6136308	0					
ANR	6136496	IfStatement	if ( c == '\\r' )		6136308	0					
ANR	6136497	Condition	c == '\\r'	591:18:12750:12758	6136308	0	True				
ANR	6136498	EqualityExpression	c == '\\r'		6136308	0		==			
ANR	6136499	Identifier	c		6136308	0					
ANR	6136500	PrimaryExpression	'\\r'		6136308	1					
ANR	6136501	CompoundStatement		42:29:794:794	6136308	1					
ANR	6136502	ExpressionStatement	"PEEKC_EOB ( c , p )"	592:8:12771:12787	6136308	0	True				
ANR	6136503	CallExpression	"PEEKC_EOB ( c , p )"		6136308	0					
ANR	6136504	Callee	PEEKC_EOB		6136308	0					
ANR	6136505	Identifier	PEEKC_EOB		6136308	0					
ANR	6136506	ArgumentList	c		6136308	1					
ANR	6136507	Argument	c		6136308	0					
ANR	6136508	Identifier	c		6136308	0					
ANR	6136509	Argument	p		6136308	1					
ANR	6136510	Identifier	p		6136308	0					
ANR	6136511	IfStatement	if ( c == '\\n' )		6136308	1					
ANR	6136512	Condition	c == '\\n'	593:12:12801:12809	6136308	0	True				
ANR	6136513	EqualityExpression	c == '\\n'		6136308	0		==			
ANR	6136514	Identifier	c		6136308	0					
ANR	6136515	PrimaryExpression	'\\n'		6136308	1					
ANR	6136516	CompoundStatement		44:23:845:845	6136308	1					
ANR	6136517	ExpressionStatement	file -> line_num ++	594:9:12823:12839	6136308	0	True				
ANR	6136518	PostIncDecOperationExpression	file -> line_num ++		6136308	0					
ANR	6136519	PtrMemberAccess	file -> line_num		6136308	0					
ANR	6136520	Identifier	file		6136308	0					
ANR	6136521	Identifier	line_num		6136308	1					
ANR	6136522	IncDec	++		6136308	1					
ANR	6136523	ExpressionStatement	"PEEKC_EOB ( c , p )"	595:9:12850:12866	6136308	1	True				
ANR	6136524	CallExpression	"PEEKC_EOB ( c , p )"		6136308	0					
ANR	6136525	Callee	PEEKC_EOB		6136308	0					
ANR	6136526	Identifier	PEEKC_EOB		6136308	0					
ANR	6136527	ArgumentList	c		6136308	1					
ANR	6136528	Argument	c		6136308	0					
ANR	6136529	Identifier	c		6136308	0					
ANR	6136530	Argument	p		6136308	1					
ANR	6136531	Identifier	p		6136308	0					
ANR	6136532	ElseStatement	else		6136308	0					
ANR	6136533	CompoundStatement		48:14:925:925	6136308	0					
ANR	6136534	GotoStatement	goto after_star ;	598:8:12902:12917	6136308	0	True				
ANR	6136535	Identifier	after_star		6136308	0					
ANR	6136536	ElseStatement	else		6136308	0					
ANR	6136537	CompoundStatement		53:11:987:987	6136308	0					
ANR	6136538	BreakStatement	break ;	603:5:12961:12966	6136308	0	True				
ANR	6136539	Label	after_star :	606:0:12979:12989	6136308	2	True				
ANR	6136540	Identifier	after_star		6136308	0					
ANR	6136541	ExpressionStatement		607:3:12994:12994	6136308	3	True				
ANR	6136542	ElseStatement	else		6136308	0					
ANR	6136543	CompoundStatement		59:9:1038:1038	6136308	0					
ANR	6136544	ExpressionStatement	file -> buf_ptr = p	610:3:13037:13054	6136308	0	True				
ANR	6136545	AssignmentExpression	file -> buf_ptr = p		6136308	0		=			
ANR	6136546	PtrMemberAccess	file -> buf_ptr		6136308	0					
ANR	6136547	Identifier	file		6136308	0					
ANR	6136548	Identifier	buf_ptr		6136308	1					
ANR	6136549	Identifier	p		6136308	1					
ANR	6136550	ExpressionStatement	c = handle_eob ( )	611:3:13059:13076	6136308	1	True				
ANR	6136551	AssignmentExpression	c = handle_eob ( )		6136308	0		=			
ANR	6136552	Identifier	c		6136308	0					
ANR	6136553	CallExpression	handle_eob ( )		6136308	1					
ANR	6136554	Callee	handle_eob		6136308	0					
ANR	6136555	Identifier	handle_eob		6136308	0					
ANR	6136556	ArgumentList			6136308	1					
ANR	6136557	ExpressionStatement	p = file -> buf_ptr	612:3:13081:13098	6136308	2	True				
ANR	6136558	AssignmentExpression	p = file -> buf_ptr		6136308	0		=			
ANR	6136559	Identifier	p		6136308	0					
ANR	6136560	PtrMemberAccess	file -> buf_ptr		6136308	1					
ANR	6136561	Identifier	file		6136308	0					
ANR	6136562	Identifier	buf_ptr		6136308	1					
ANR	6136563	IfStatement	if ( c == CH_EOF )		6136308	3					
ANR	6136564	Condition	c == CH_EOF	613:7:13107:13117	6136308	0	True				
ANR	6136565	EqualityExpression	c == CH_EOF		6136308	0		==			
ANR	6136566	Identifier	c		6136308	0					
ANR	6136567	Identifier	CH_EOF		6136308	1					
ANR	6136568	CompoundStatement		64:20:1153:1153	6136308	1					
ANR	6136569	ExpressionStatement	"tcc_error ( ""unexpected end of file in comment"" )"	614:4:13126:13173	6136308	0	True				
ANR	6136570	CallExpression	"tcc_error ( ""unexpected end of file in comment"" )"		6136308	0					
ANR	6136571	Callee	tcc_error		6136308	0					
ANR	6136572	Identifier	tcc_error		6136308	0					
ANR	6136573	ArgumentList	"""unexpected end of file in comment"""		6136308	1					
ANR	6136574	Argument	"""unexpected end of file in comment"""		6136308	0					
ANR	6136575	PrimaryExpression	"""unexpected end of file in comment"""		6136308	0					
ANR	6136576	ElseStatement	else		6136308	0					
ANR	6136577	IfStatement	if ( c == '\\\\' )		6136308	0					
ANR	6136578	Condition	c == '\\\\'	615:14:13189:13197	6136308	0	True				
ANR	6136579	EqualityExpression	c == '\\\\'		6136308	0		==			
ANR	6136580	Identifier	c		6136308	0					
ANR	6136581	PrimaryExpression	'\\\\'		6136308	1					
ANR	6136582	CompoundStatement		66:25:1233:1233	6136308	1					
ANR	6136583	ExpressionStatement	p ++	616:4:13206:13209	6136308	0	True				
ANR	6136584	PostIncDecOperationExpression	p ++		6136308	0					
ANR	6136585	Identifier	p		6136308	0					
ANR	6136586	IncDec	++		6136308	1					
ANR	6136587	Label	end_of_comment :	620:0:13223:13237	6136308	3	True				
ANR	6136588	Identifier	end_of_comment		6136308	0					
ANR	6136589	ExpressionStatement	p ++	621:1:13240:13243	6136308	4	True				
ANR	6136590	PostIncDecOperationExpression	p ++		6136308	0					
ANR	6136591	Identifier	p		6136308	0					
ANR	6136592	IncDec	++		6136308	1					
ANR	6136593	ReturnStatement	return p ;	622:1:13246:13254	6136308	5	True				
ANR	6136594	Identifier	p		6136308	0					
ANR	6136595	ReturnType	ST_FUNC uint8_t *		6136308	1					
ANR	6136596	Identifier	parse_comment		6136308	2					
ANR	6136597	ParameterList	uint8_t * p		6136308	3					
ANR	6136598	Parameter	uint8_t * p	549:31:11954:11963	6136308	0	True				
ANR	6136599	ParameterType	uint8_t *		6136308	0					
ANR	6136600	Identifier	p		6136308	1					
ANR	6136601	CFGEntryNode	ENTRY		6136308		True				
ANR	6136602	CFGExitNode	EXIT		6136308		True				
ANR	6136603	InfiniteForNode	true		6136308		True				
ANR	6136604	InfiniteForNode	true		6136308		True				
ANR	6136605	InfiniteForNode	true		6136308		True				
ANR	6136606	Symbol	p		6136308						
ANR	6136607	Symbol	c		6136308						
ANR	6136608	Symbol	file		6136308						
ANR	6136609	Symbol	CH_EOF		6136308						
ANR	6136610	Symbol	* p		6136308						
ANR	6136611	Symbol	handle_eob		6136308						
ANR	6136612	Symbol	file -> line_num		6136308						
ANR	6136613	Symbol	file -> buf_ptr		6136308						
ANR	6136614	Symbol	* file		6136308						
ANR	6136615	Function	skip_spaces	627:0:13278:13351							
ANR	6136616	FunctionDef	skip_spaces ()		6136615	0					
ANR	6136617	CompoundStatement		628:0:13315:13351	6136615	0					
ANR	6136618	WhileStatement	while ( is_space ( ch ) )		6136615	0					
ANR	6136619	Condition	is_space ( ch )	629:8:13325:13337	6136615	0	True				
ANR	6136620	CallExpression	is_space ( ch )		6136615	0					
ANR	6136621	Callee	is_space		6136615	0					
ANR	6136622	Identifier	is_space		6136615	0					
ANR	6136623	ArgumentList	ch		6136615	1					
ANR	6136624	Argument	ch		6136615	0					
ANR	6136625	Identifier	ch		6136615	0					
ANR	6136626	ExpressionStatement	cinp ( )	630:2:13342:13349	6136615	1	True				
ANR	6136627	CallExpression	cinp ( )		6136615	0					
ANR	6136628	Callee	cinp		6136615	0					
ANR	6136629	Identifier	cinp		6136615	0					
ANR	6136630	ArgumentList			6136615	1					
ANR	6136631	ReturnType	static inline void		6136615	1					
ANR	6136632	Identifier	skip_spaces		6136615	2					
ANR	6136633	ParameterList			6136615	3					
ANR	6136634	CFGEntryNode	ENTRY		6136615		True				
ANR	6136635	CFGExitNode	EXIT		6136615		True				
ANR	6136636	Symbol	ch		6136615						
ANR	6136637	Symbol	is_space		6136615						
ANR	6136638	Function	check_space	633:0:13354:13503							
ANR	6136639	FunctionDef	"check_space (int t , int * spc)"		6136638	0					
ANR	6136640	CompoundStatement		634:0:13401:13503	6136638	0					
ANR	6136641	IfStatement	if ( is_space ( t ) )		6136638	0					
ANR	6136642	Condition	is_space ( t )	635:5:13408:13419	6136638	0	True				
ANR	6136643	CallExpression	is_space ( t )		6136638	0					
ANR	6136644	Callee	is_space		6136638	0					
ANR	6136645	Identifier	is_space		6136638	0					
ANR	6136646	ArgumentList	t		6136638	1					
ANR	6136647	Argument	t		6136638	0					
ANR	6136648	Identifier	t		6136638	0					
ANR	6136649	CompoundStatement		2:19:20:20	6136638	1					
ANR	6136650	IfStatement	if ( * spc )		6136638	0					
ANR	6136651	Condition	* spc	636:6:13430:13433	6136638	0	True				
ANR	6136652	UnaryOperationExpression	* spc		6136638	0					
ANR	6136653	UnaryOperator	*		6136638	0					
ANR	6136654	Identifier	spc		6136638	1					
ANR	6136655	CompoundStatement		3:12:34:34	6136638	1					
ANR	6136656	ReturnStatement	return 1 ;	637:3:13441:13449	6136638	0	True				
ANR	6136657	PrimaryExpression	1		6136638	0					
ANR	6136658	ExpressionStatement	* spc = 1	639:2:13457:13465	6136638	1	True				
ANR	6136659	AssignmentExpression	* spc = 1		6136638	0		=			
ANR	6136660	UnaryOperationExpression	* spc		6136638	0					
ANR	6136661	UnaryOperator	*		6136638	0					
ANR	6136662	Identifier	spc		6136638	1					
ANR	6136663	PrimaryExpression	1		6136638	1					
ANR	6136664	ElseStatement	else		6136638	0					
ANR	6136665	CompoundStatement		7:8:73:73	6136638	0					
ANR	6136666	ExpressionStatement	* spc = 0	641:2:13479:13487	6136638	0	True				
ANR	6136667	AssignmentExpression	* spc = 0		6136638	0		=			
ANR	6136668	UnaryOperationExpression	* spc		6136638	0					
ANR	6136669	UnaryOperator	*		6136638	0					
ANR	6136670	Identifier	spc		6136638	1					
ANR	6136671	PrimaryExpression	0		6136638	1					
ANR	6136672	ReturnStatement	return 0 ;	643:1:13493:13501	6136638	1	True				
ANR	6136673	PrimaryExpression	0		6136638	0					
ANR	6136674	ReturnType	static inline int		6136638	1					
ANR	6136675	Identifier	check_space		6136638	2					
ANR	6136676	ParameterList	"int t , int * spc"		6136638	3					
ANR	6136677	Parameter	int t	633:30:13384:13388	6136638	0	True				
ANR	6136678	ParameterType	int		6136638	0					
ANR	6136679	Identifier	t		6136638	1					
ANR	6136680	Parameter	int * spc	633:37:13391:13398	6136638	1	True				
ANR	6136681	ParameterType	int *		6136638	0					
ANR	6136682	Identifier	spc		6136638	1					
ANR	6136683	CFGEntryNode	ENTRY		6136638		True				
ANR	6136684	CFGExitNode	EXIT		6136638		True				
ANR	6136685	Symbol	* spc		6136638						
ANR	6136686	Symbol	t		6136638						
ANR	6136687	Symbol	spc		6136638						
ANR	6136688	Symbol	is_space		6136638						
ANR	6136689	Function	parse_pp_string	647:0:13556:14787							
ANR	6136690	FunctionDef	"parse_pp_string (uint8_t * p , int sep , CString * str)"		6136689	0					
ANR	6136691	CompoundStatement		649:0:13627:14787	6136689	0					
ANR	6136692	IdentifierDeclStatement	int c ;	650:1:13630:13635	6136689	0	True				
ANR	6136693	IdentifierDecl	c		6136689	0					
ANR	6136694	IdentifierDeclType	int		6136689	0					
ANR	6136695	Identifier	c		6136689	1					
ANR	6136696	ExpressionStatement	p ++	651:1:13638:13641	6136689	1	True				
ANR	6136697	PostIncDecOperationExpression	p ++		6136689	0					
ANR	6136698	Identifier	p		6136689	0					
ANR	6136699	IncDec	++		6136689	1					
ANR	6136700	WhileStatement	while ( tcc_nerr ( ) == 0 )		6136689	2					
ANR	6136701	Condition	tcc_nerr ( ) == 0	652:8:13651:13666	6136689	0	True				
ANR	6136702	EqualityExpression	tcc_nerr ( ) == 0		6136689	0		==			
ANR	6136703	CallExpression	tcc_nerr ( )		6136689	0					
ANR	6136704	Callee	tcc_nerr		6136689	0					
ANR	6136705	Identifier	tcc_nerr		6136689	0					
ANR	6136706	ArgumentList			6136689	1					
ANR	6136707	PrimaryExpression	0		6136689	1					
ANR	6136708	CompoundStatement		4:26:41:41	6136689	1					
ANR	6136709	ExpressionStatement	c = * p	653:2:13673:13679	6136689	0	True				
ANR	6136710	AssignmentExpression	c = * p		6136689	0		=			
ANR	6136711	Identifier	c		6136689	0					
ANR	6136712	UnaryOperationExpression	* p		6136689	1					
ANR	6136713	UnaryOperator	*		6136689	0					
ANR	6136714	Identifier	p		6136689	1					
ANR	6136715	IfStatement	if ( c == sep )		6136689	1					
ANR	6136716	Condition	c == sep	654:6:13687:13694	6136689	0	True				
ANR	6136717	EqualityExpression	c == sep		6136689	0		==			
ANR	6136718	Identifier	c		6136689	0					
ANR	6136719	Identifier	sep		6136689	1					
ANR	6136720	CompoundStatement		6:16:69:69	6136689	1					
ANR	6136721	BreakStatement	break ;	655:3:13702:13707	6136689	0	True				
ANR	6136722	ElseStatement	else		6136689	0					
ANR	6136723	IfStatement	if ( c == '\\\\' )		6136689	0					
ANR	6136724	Condition	c == '\\\\'	656:13:13722:13730	6136689	0	True				
ANR	6136725	EqualityExpression	c == '\\\\'		6136689	0		==			
ANR	6136726	Identifier	c		6136689	0					
ANR	6136727	PrimaryExpression	'\\\\'		6136689	1					
ANR	6136728	CompoundStatement		8:24:105:105	6136689	1					
ANR	6136729	ExpressionStatement	file -> buf_ptr = p	657:3:13738:13755	6136689	0	True				
ANR	6136730	AssignmentExpression	file -> buf_ptr = p		6136689	0		=			
ANR	6136731	PtrMemberAccess	file -> buf_ptr		6136689	0					
ANR	6136732	Identifier	file		6136689	0					
ANR	6136733	Identifier	buf_ptr		6136689	1					
ANR	6136734	Identifier	p		6136689	1					
ANR	6136735	ExpressionStatement	c = handle_eob ( )	658:3:13760:13777	6136689	1	True				
ANR	6136736	AssignmentExpression	c = handle_eob ( )		6136689	0		=			
ANR	6136737	Identifier	c		6136689	0					
ANR	6136738	CallExpression	handle_eob ( )		6136689	1					
ANR	6136739	Callee	handle_eob		6136689	0					
ANR	6136740	Identifier	handle_eob		6136689	0					
ANR	6136741	ArgumentList			6136689	1					
ANR	6136742	ExpressionStatement	p = file -> buf_ptr	659:3:13782:13799	6136689	2	True				
ANR	6136743	AssignmentExpression	p = file -> buf_ptr		6136689	0		=			
ANR	6136744	Identifier	p		6136689	0					
ANR	6136745	PtrMemberAccess	file -> buf_ptr		6136689	1					
ANR	6136746	Identifier	file		6136689	0					
ANR	6136747	Identifier	buf_ptr		6136689	1					
ANR	6136748	IfStatement	if ( c == CH_EOF )		6136689	3					
ANR	6136749	Condition	c == CH_EOF	660:7:13808:13818	6136689	0	True				
ANR	6136750	EqualityExpression	c == CH_EOF		6136689	0		==			
ANR	6136751	Identifier	c		6136689	0					
ANR	6136752	Identifier	CH_EOF		6136689	1					
ANR	6136753	CompoundStatement		12:20:193:193	6136689	1					
ANR	6136754	Label	unterminated_string :	661:0:13823:13842	6136689	0	True				
ANR	6136755	Identifier	unterminated_string		6136689	0					
ANR	6136756	ExpressionStatement	"tcc_error ( ""missing terminating %c character"" , sep )"	663:4:13903:13954	6136689	1	True				
ANR	6136757	CallExpression	"tcc_error ( ""missing terminating %c character"" , sep )"		6136689	0					
ANR	6136758	Callee	tcc_error		6136689	0					
ANR	6136759	Identifier	tcc_error		6136689	0					
ANR	6136760	ArgumentList	"""missing terminating %c character"""		6136689	1					
ANR	6136761	Argument	"""missing terminating %c character"""		6136689	0					
ANR	6136762	PrimaryExpression	"""missing terminating %c character"""		6136689	0					
ANR	6136763	Argument	sep		6136689	1					
ANR	6136764	Identifier	sep		6136689	0					
ANR	6136765	ReturnStatement	return NULL ;	664:4:13960:13971	6136689	2	True				
ANR	6136766	Identifier	NULL		6136689	0					
ANR	6136767	ElseStatement	else		6136689	0					
ANR	6136768	IfStatement	if ( c == '\\\\' )		6136689	0					
ANR	6136769	Condition	c == '\\\\'	665:14:13987:13995	6136689	0	True				
ANR	6136770	EqualityExpression	c == '\\\\'		6136689	0		==			
ANR	6136771	Identifier	c		6136689	0					
ANR	6136772	PrimaryExpression	'\\\\'		6136689	1					
ANR	6136773	CompoundStatement		17:25:370:370	6136689	1					
ANR	6136774	ExpressionStatement	"PEEKC_EOB ( c , p )"	667:4:14041:14057	6136689	0	True				
ANR	6136775	CallExpression	"PEEKC_EOB ( c , p )"		6136689	0					
ANR	6136776	Callee	PEEKC_EOB		6136689	0					
ANR	6136777	Identifier	PEEKC_EOB		6136689	0					
ANR	6136778	ArgumentList	c		6136689	1					
ANR	6136779	Argument	c		6136689	0					
ANR	6136780	Identifier	c		6136689	0					
ANR	6136781	Argument	p		6136689	1					
ANR	6136782	Identifier	p		6136689	0					
ANR	6136783	IfStatement	if ( c == '\\n' )		6136689	1					
ANR	6136784	Condition	c == '\\n'	668:8:14067:14075	6136689	0	True				
ANR	6136785	EqualityExpression	c == '\\n'		6136689	0		==			
ANR	6136786	Identifier	c		6136689	0					
ANR	6136787	PrimaryExpression	'\\n'		6136689	1					
ANR	6136788	CompoundStatement		20:19:450:450	6136689	1					
ANR	6136789	ExpressionStatement	file -> line_num ++	669:5:14085:14101	6136689	0	True				
ANR	6136790	PostIncDecOperationExpression	file -> line_num ++		6136689	0					
ANR	6136791	PtrMemberAccess	file -> line_num		6136689	0					
ANR	6136792	Identifier	file		6136689	0					
ANR	6136793	Identifier	line_num		6136689	1					
ANR	6136794	IncDec	++		6136689	1					
ANR	6136795	ExpressionStatement	p ++	670:5:14108:14111	6136689	1	True				
ANR	6136796	PostIncDecOperationExpression	p ++		6136689	0					
ANR	6136797	Identifier	p		6136689	0					
ANR	6136798	IncDec	++		6136689	1					
ANR	6136799	ElseStatement	else		6136689	0					
ANR	6136800	IfStatement	if ( c == '\\r' )		6136689	0					
ANR	6136801	Condition	c == '\\r'	671:15:14128:14136	6136689	0	True				
ANR	6136802	EqualityExpression	c == '\\r'		6136689	0		==			
ANR	6136803	Identifier	c		6136689	0					
ANR	6136804	PrimaryExpression	'\\r'		6136689	1					
ANR	6136805	CompoundStatement		23:26:511:511	6136689	1					
ANR	6136806	ExpressionStatement	"PEEKC_EOB ( c , p )"	672:5:14146:14162	6136689	0	True				
ANR	6136807	CallExpression	"PEEKC_EOB ( c , p )"		6136689	0					
ANR	6136808	Callee	PEEKC_EOB		6136689	0					
ANR	6136809	Identifier	PEEKC_EOB		6136689	0					
ANR	6136810	ArgumentList	c		6136689	1					
ANR	6136811	Argument	c		6136689	0					
ANR	6136812	Identifier	c		6136689	0					
ANR	6136813	Argument	p		6136689	1					
ANR	6136814	Identifier	p		6136689	0					
ANR	6136815	IfStatement	if ( c != '\\n' )		6136689	1					
ANR	6136816	Condition	c != '\\n'	673:9:14173:14181	6136689	0	True				
ANR	6136817	EqualityExpression	c != '\\n'		6136689	0		!=			
ANR	6136818	Identifier	c		6136689	0					
ANR	6136819	PrimaryExpression	'\\n'		6136689	1					
ANR	6136820	CompoundStatement		25:20:556:556	6136689	1					
ANR	6136821	ExpressionStatement	"expect ( ""'\\n' after '\\r'"" )"	674:6:14192:14218	6136689	0	True				
ANR	6136822	CallExpression	"expect ( ""'\\n' after '\\r'"" )"		6136689	0					
ANR	6136823	Callee	expect		6136689	0					
ANR	6136824	Identifier	expect		6136689	0					
ANR	6136825	ArgumentList	"""'\\n' after '\\r'"""		6136689	1					
ANR	6136826	Argument	"""'\\n' after '\\r'"""		6136689	0					
ANR	6136827	PrimaryExpression	"""'\\n' after '\\r'"""		6136689	0					
ANR	6136828	ReturnStatement	return NULL ;	675:6:14226:14237	6136689	1	True				
ANR	6136829	Identifier	NULL		6136689	0					
ANR	6136830	ExpressionStatement	file -> line_num ++	677:5:14251:14267	6136689	2	True				
ANR	6136831	PostIncDecOperationExpression	file -> line_num ++		6136689	0					
ANR	6136832	PtrMemberAccess	file -> line_num		6136689	0					
ANR	6136833	Identifier	file		6136689	0					
ANR	6136834	Identifier	line_num		6136689	1					
ANR	6136835	IncDec	++		6136689	1					
ANR	6136836	ExpressionStatement	p ++	678:5:14274:14277	6136689	3	True				
ANR	6136837	PostIncDecOperationExpression	p ++		6136689	0					
ANR	6136838	Identifier	p		6136689	0					
ANR	6136839	IncDec	++		6136689	1					
ANR	6136840	ElseStatement	else		6136689	0					
ANR	6136841	IfStatement	if ( c == CH_EOF )		6136689	0					
ANR	6136842	Condition	c == CH_EOF	679:15:14294:14304	6136689	0	True				
ANR	6136843	EqualityExpression	c == CH_EOF		6136689	0		==			
ANR	6136844	Identifier	c		6136689	0					
ANR	6136845	Identifier	CH_EOF		6136689	1					
ANR	6136846	CompoundStatement		31:28:679:679	6136689	1					
ANR	6136847	GotoStatement	goto unterminated_string ;	680:5:14314:14338	6136689	0	True				
ANR	6136848	Identifier	unterminated_string		6136689	0					
ANR	6136849	ElseStatement	else		6136689	0					
ANR	6136850	CompoundStatement		33:11:723:723	6136689	0					
ANR	6136851	IfStatement	if ( str )		6136689	0					
ANR	6136852	Condition	str	682:9:14362:14364	6136689	0	True				
ANR	6136853	Identifier	str		6136689	0					
ANR	6136854	CompoundStatement		34:14:739:739	6136689	1					
ANR	6136855	ExpressionStatement	"cstr_ccat ( str , '\\\\' )"	683:6:14375:14396	6136689	0	True				
ANR	6136856	CallExpression	"cstr_ccat ( str , '\\\\' )"		6136689	0					
ANR	6136857	Callee	cstr_ccat		6136689	0					
ANR	6136858	Identifier	cstr_ccat		6136689	0					
ANR	6136859	ArgumentList	str		6136689	1					
ANR	6136860	Argument	str		6136689	0					
ANR	6136861	Identifier	str		6136689	0					
ANR	6136862	Argument	'\\\\'		6136689	1					
ANR	6136863	PrimaryExpression	'\\\\'		6136689	0					
ANR	6136864	ExpressionStatement	"cstr_ccat ( str , c )"	684:6:14404:14422	6136689	1	True				
ANR	6136865	CallExpression	"cstr_ccat ( str , c )"		6136689	0					
ANR	6136866	Callee	cstr_ccat		6136689	0					
ANR	6136867	Identifier	cstr_ccat		6136689	0					
ANR	6136868	ArgumentList	str		6136689	1					
ANR	6136869	Argument	str		6136689	0					
ANR	6136870	Identifier	str		6136689	0					
ANR	6136871	Argument	c		6136689	1					
ANR	6136872	Identifier	c		6136689	0					
ANR	6136873	ExpressionStatement	p ++	686:5:14436:14439	6136689	1	True				
ANR	6136874	PostIncDecOperationExpression	p ++		6136689	0					
ANR	6136875	Identifier	p		6136689	0					
ANR	6136876	IncDec	++		6136689	1					
ANR	6136877	ElseStatement	else		6136689	0					
ANR	6136878	IfStatement	if ( c == '\\n' )		6136689	0					
ANR	6136879	Condition	c == '\\n'	689:13:14465:14473	6136689	0	True				
ANR	6136880	EqualityExpression	c == '\\n'		6136689	0		==			
ANR	6136881	Identifier	c		6136689	0					
ANR	6136882	PrimaryExpression	'\\n'		6136689	1					
ANR	6136883	CompoundStatement		41:24:848:848	6136689	1					
ANR	6136884	ExpressionStatement	file -> line_num ++	690:3:14481:14497	6136689	0	True				
ANR	6136885	PostIncDecOperationExpression	file -> line_num ++		6136689	0					
ANR	6136886	PtrMemberAccess	file -> line_num		6136689	0					
ANR	6136887	Identifier	file		6136689	0					
ANR	6136888	Identifier	line_num		6136689	1					
ANR	6136889	IncDec	++		6136689	1					
ANR	6136890	GotoStatement	goto add_char ;	691:3:14502:14515	6136689	1	True				
ANR	6136891	Identifier	add_char		6136689	0					
ANR	6136892	ElseStatement	else		6136689	0					
ANR	6136893	IfStatement	if ( c == '\\r' )		6136689	0					
ANR	6136894	Condition	c == '\\r'	692:13:14530:14538	6136689	0	True				
ANR	6136895	EqualityExpression	c == '\\r'		6136689	0		==			
ANR	6136896	Identifier	c		6136689	0					
ANR	6136897	PrimaryExpression	'\\r'		6136689	1					
ANR	6136898	CompoundStatement		44:24:913:913	6136689	1					
ANR	6136899	ExpressionStatement	"PEEKC_EOB ( c , p )"	693:3:14546:14562	6136689	0	True				
ANR	6136900	CallExpression	"PEEKC_EOB ( c , p )"		6136689	0					
ANR	6136901	Callee	PEEKC_EOB		6136689	0					
ANR	6136902	Identifier	PEEKC_EOB		6136689	0					
ANR	6136903	ArgumentList	c		6136689	1					
ANR	6136904	Argument	c		6136689	0					
ANR	6136905	Identifier	c		6136689	0					
ANR	6136906	Argument	p		6136689	1					
ANR	6136907	Identifier	p		6136689	0					
ANR	6136908	IfStatement	if ( c != '\\n' )		6136689	1					
ANR	6136909	Condition	c != '\\n'	694:7:14571:14579	6136689	0	True				
ANR	6136910	EqualityExpression	c != '\\n'		6136689	0		!=			
ANR	6136911	Identifier	c		6136689	0					
ANR	6136912	PrimaryExpression	'\\n'		6136689	1					
ANR	6136913	CompoundStatement		46:18:954:954	6136689	1					
ANR	6136914	IfStatement	if ( str )		6136689	0					
ANR	6136915	Condition	str	695:8:14592:14594	6136689	0	True				
ANR	6136916	Identifier	str		6136689	0					
ANR	6136917	CompoundStatement		47:13:969:969	6136689	1					
ANR	6136918	ExpressionStatement	"cstr_ccat ( str , '\\r' )"	696:5:14604:14625	6136689	0	True				
ANR	6136919	CallExpression	"cstr_ccat ( str , '\\r' )"		6136689	0					
ANR	6136920	Callee	cstr_ccat		6136689	0					
ANR	6136921	Identifier	cstr_ccat		6136689	0					
ANR	6136922	ArgumentList	str		6136689	1					
ANR	6136923	Argument	str		6136689	0					
ANR	6136924	Identifier	str		6136689	0					
ANR	6136925	Argument	'\\r'		6136689	1					
ANR	6136926	PrimaryExpression	'\\r'		6136689	0					
ANR	6136927	ElseStatement	else		6136689	0					
ANR	6136928	CompoundStatement		50:10:1015:1015	6136689	0					
ANR	6136929	ExpressionStatement	file -> line_num ++	699:4:14649:14665	6136689	0	True				
ANR	6136930	PostIncDecOperationExpression	file -> line_num ++		6136689	0					
ANR	6136931	PtrMemberAccess	file -> line_num		6136689	0					
ANR	6136932	Identifier	file		6136689	0					
ANR	6136933	Identifier	line_num		6136689	1					
ANR	6136934	IncDec	++		6136689	1					
ANR	6136935	GotoStatement	goto add_char ;	700:4:14671:14684	6136689	1	True				
ANR	6136936	Identifier	add_char		6136689	0					
ANR	6136937	ElseStatement	else		6136689	0					
ANR	6136938	CompoundStatement		54:9:1072:1072	6136689	0					
ANR	6136939	Label	add_char :	703:0:14702:14710	6136689	0	True				
ANR	6136940	Identifier	add_char		6136689	0					
ANR	6136941	IfStatement	if ( str )		6136689	1					
ANR	6136942	Condition	str	704:7:14719:14721	6136689	0	True				
ANR	6136943	Identifier	str		6136689	0					
ANR	6136944	CompoundStatement		56:12:1096:1096	6136689	1					
ANR	6136945	ExpressionStatement	"cstr_ccat ( str , c )"	705:4:14730:14748	6136689	0	True				
ANR	6136946	CallExpression	"cstr_ccat ( str , c )"		6136689	0					
ANR	6136947	Callee	cstr_ccat		6136689	0					
ANR	6136948	Identifier	cstr_ccat		6136689	0					
ANR	6136949	ArgumentList	str		6136689	1					
ANR	6136950	Argument	str		6136689	0					
ANR	6136951	Identifier	str		6136689	0					
ANR	6136952	Argument	c		6136689	1					
ANR	6136953	Identifier	c		6136689	0					
ANR	6136954	ExpressionStatement	p ++	707:3:14758:14761	6136689	2	True				
ANR	6136955	PostIncDecOperationExpression	p ++		6136689	0					
ANR	6136956	Identifier	p		6136689	0					
ANR	6136957	IncDec	++		6136689	1					
ANR	6136958	ExpressionStatement	p ++	710:1:14771:14774	6136689	3	True				
ANR	6136959	PostIncDecOperationExpression	p ++		6136689	0					
ANR	6136960	Identifier	p		6136689	0					
ANR	6136961	IncDec	++		6136689	1					
ANR	6136962	ReturnStatement	return p ;	711:1:14777:14785	6136689	4	True				
ANR	6136963	Identifier	p		6136689	0					
ANR	6136964	ReturnType	static uint8_t *		6136689	1					
ANR	6136965	Identifier	parse_pp_string		6136689	2					
ANR	6136966	ParameterList	"uint8_t * p , int sep , CString * str"		6136689	3					
ANR	6136967	Parameter	uint8_t * p	647:32:13588:13597	6136689	0	True				
ANR	6136968	ParameterType	uint8_t *		6136689	0					
ANR	6136969	Identifier	p		6136689	1					
ANR	6136970	Parameter	int sep	648:4:13604:13610	6136689	1	True				
ANR	6136971	ParameterType	int		6136689	0					
ANR	6136972	Identifier	sep		6136689	1					
ANR	6136973	Parameter	CString * str	648:13:13613:13624	6136689	2	True				
ANR	6136974	ParameterType	CString *		6136689	0					
ANR	6136975	Identifier	str		6136689	1					
ANR	6136976	CFGEntryNode	ENTRY		6136689		True				
ANR	6136977	CFGExitNode	EXIT		6136689		True				
ANR	6136978	Symbol	c		6136689						
ANR	6136979	Symbol	NULL		6136689						
ANR	6136980	Symbol	* file		6136689						
ANR	6136981	Symbol	tcc_nerr		6136689						
ANR	6136982	Symbol	p		6136689						
ANR	6136983	Symbol	str		6136689						
ANR	6136984	Symbol	file		6136689						
ANR	6136985	Symbol	CH_EOF		6136689						
ANR	6136986	Symbol	* p		6136689						
ANR	6136987	Symbol	handle_eob		6136689						
ANR	6136988	Symbol	file -> buf_ptr		6136689						
ANR	6136989	Symbol	file -> line_num		6136689						
ANR	6136990	Symbol	sep		6136689						
ANR	6136991	Function	preprocess_skip	716:0:14878:16590							
ANR	6136992	FunctionDef	preprocess_skip ()		6136991	0					
ANR	6136993	CompoundStatement		717:0:14912:16590	6136991	0					
ANR	6136994	IdentifierDeclStatement	"int a , start_of_line , c , in_warn_or_error ;"	718:1:14915:14956	6136991	0	True				
ANR	6136995	IdentifierDecl	a		6136991	0					
ANR	6136996	IdentifierDeclType	int		6136991	0					
ANR	6136997	Identifier	a		6136991	1					
ANR	6136998	IdentifierDecl	start_of_line		6136991	1					
ANR	6136999	IdentifierDeclType	int		6136991	0					
ANR	6137000	Identifier	start_of_line		6136991	1					
ANR	6137001	IdentifierDecl	c		6136991	2					
ANR	6137002	IdentifierDeclType	int		6136991	0					
ANR	6137003	Identifier	c		6136991	1					
ANR	6137004	IdentifierDecl	in_warn_or_error		6136991	3					
ANR	6137005	IdentifierDeclType	int		6136991	0					
ANR	6137006	Identifier	in_warn_or_error		6136991	1					
ANR	6137007	IdentifierDeclStatement	uint8_t * p ;	719:1:14959:14969	6136991	1	True				
ANR	6137008	IdentifierDecl	* p		6136991	0					
ANR	6137009	IdentifierDeclType	uint8_t *		6136991	0					
ANR	6137010	Identifier	p		6136991	1					
ANR	6137011	ExpressionStatement	p = file -> buf_ptr	721:1:14973:14990	6136991	2	True				
ANR	6137012	AssignmentExpression	p = file -> buf_ptr		6136991	0		=			
ANR	6137013	Identifier	p		6136991	0					
ANR	6137014	PtrMemberAccess	file -> buf_ptr		6136991	1					
ANR	6137015	Identifier	file		6136991	0					
ANR	6137016	Identifier	buf_ptr		6136991	1					
ANR	6137017	ExpressionStatement	a = 0	722:1:14993:14998	6136991	3	True				
ANR	6137018	AssignmentExpression	a = 0		6136991	0		=			
ANR	6137019	Identifier	a		6136991	0					
ANR	6137020	PrimaryExpression	0		6136991	1					
ANR	6137021	Label	redo_start :	723:0:15000:15010	6136991	4	True				
ANR	6137022	Identifier	redo_start		6136991	0					
ANR	6137023	ExpressionStatement	start_of_line = 1	724:1:15013:15030	6136991	5	True				
ANR	6137024	AssignmentExpression	start_of_line = 1		6136991	0		=			
ANR	6137025	Identifier	start_of_line		6136991	0					
ANR	6137026	PrimaryExpression	1		6136991	1					
ANR	6137027	ExpressionStatement	in_warn_or_error = 0	725:1:15033:15053	6136991	6	True				
ANR	6137028	AssignmentExpression	in_warn_or_error = 0		6136991	0		=			
ANR	6137029	Identifier	in_warn_or_error		6136991	0					
ANR	6137030	PrimaryExpression	0		6136991	1					
ANR	6137031	WhileStatement	while ( tcc_nerr ( ) == 0 )		6136991	7					
ANR	6137032	Condition	tcc_nerr ( ) == 0	726:8:15063:15078	6136991	0	True				
ANR	6137033	EqualityExpression	tcc_nerr ( ) == 0		6136991	0		==			
ANR	6137034	CallExpression	tcc_nerr ( )		6136991	0					
ANR	6137035	Callee	tcc_nerr		6136991	0					
ANR	6137036	Identifier	tcc_nerr		6136991	0					
ANR	6137037	ArgumentList			6136991	1					
ANR	6137038	PrimaryExpression	0		6136991	1					
ANR	6137039	CompoundStatement		10:26:168:168	6136991	1					
ANR	6137040	Label	redo_no_start :	727:0:15083:15096	6136991	0	True				
ANR	6137041	Identifier	redo_no_start		6136991	0					
ANR	6137042	ExpressionStatement	c = * p	728:2:15100:15106	6136991	1	True				
ANR	6137043	AssignmentExpression	c = * p		6136991	0		=			
ANR	6137044	Identifier	c		6136991	0					
ANR	6137045	UnaryOperationExpression	* p		6136991	1					
ANR	6137046	UnaryOperator	*		6136991	0					
ANR	6137047	Identifier	p		6136991	1					
ANR	6137048	SwitchStatement	switch ( c )		6136991	2					
ANR	6137049	Condition	c	729:10:15118:15118	6136991	0	True				
ANR	6137050	Identifier	c		6136991	0					
ANR	6137051	CompoundStatement		13:13:208:208	6136991	1					
ANR	6137052	Label	case ' ' :	730:2:15125:15133	6136991	0	True				
ANR	6137053	Label	case '\\t' :	731:2:15137:15146	6136991	1	True				
ANR	6137054	Label	case '\\f' :	732:2:15150:15159	6136991	2	True				
ANR	6137055	Label	case '\\v' :	733:2:15163:15172	6136991	3	True				
ANR	6137056	Label	case '\\r' :	734:2:15176:15185	6136991	4	True				
ANR	6137057	ExpressionStatement	p ++	735:3:15190:15193	6136991	5	True				
ANR	6137058	PostIncDecOperationExpression	p ++		6136991	0					
ANR	6137059	Identifier	p		6136991	0					
ANR	6137060	IncDec	++		6136991	1					
ANR	6137061	GotoStatement	goto redo_no_start ;	736:3:15198:15216	6136991	6	True				
ANR	6137062	Identifier	redo_no_start		6136991	0					
ANR	6137063	Label	case '\\n' :	737:2:15220:15229	6136991	7	True				
ANR	6137064	ExpressionStatement	file -> line_num ++	738:3:15234:15250	6136991	8	True				
ANR	6137065	PostIncDecOperationExpression	file -> line_num ++		6136991	0					
ANR	6137066	PtrMemberAccess	file -> line_num		6136991	0					
ANR	6137067	Identifier	file		6136991	0					
ANR	6137068	Identifier	line_num		6136991	1					
ANR	6137069	IncDec	++		6136991	1					
ANR	6137070	ExpressionStatement	p ++	739:3:15255:15258	6136991	9	True				
ANR	6137071	PostIncDecOperationExpression	p ++		6136991	0					
ANR	6137072	Identifier	p		6136991	0					
ANR	6137073	IncDec	++		6136991	1					
ANR	6137074	GotoStatement	goto redo_start ;	740:3:15263:15278	6136991	10	True				
ANR	6137075	Identifier	redo_start		6136991	0					
ANR	6137076	Label	case '\\\\' :	741:2:15282:15291	6136991	11	True				
ANR	6137077	ExpressionStatement	file -> buf_ptr = p	742:3:15296:15313	6136991	12	True				
ANR	6137078	AssignmentExpression	file -> buf_ptr = p		6136991	0		=			
ANR	6137079	PtrMemberAccess	file -> buf_ptr		6136991	0					
ANR	6137080	Identifier	file		6136991	0					
ANR	6137081	Identifier	buf_ptr		6136991	1					
ANR	6137082	Identifier	p		6136991	1					
ANR	6137083	ExpressionStatement	c = handle_eob ( )	743:3:15318:15335	6136991	13	True				
ANR	6137084	AssignmentExpression	c = handle_eob ( )		6136991	0		=			
ANR	6137085	Identifier	c		6136991	0					
ANR	6137086	CallExpression	handle_eob ( )		6136991	1					
ANR	6137087	Callee	handle_eob		6136991	0					
ANR	6137088	Identifier	handle_eob		6136991	0					
ANR	6137089	ArgumentList			6136991	1					
ANR	6137090	IfStatement	if ( c == CH_EOF )		6136991	14					
ANR	6137091	Condition	c == CH_EOF	744:7:15344:15354	6136991	0	True				
ANR	6137092	EqualityExpression	c == CH_EOF		6136991	0		==			
ANR	6137093	Identifier	c		6136991	0					
ANR	6137094	Identifier	CH_EOF		6136991	1					
ANR	6137095	CompoundStatement		28:20:444:444	6136991	1					
ANR	6137096	ExpressionStatement	"expect ( ""#endif"" )"	745:4:15363:15380	6136991	0	True				
ANR	6137097	CallExpression	"expect ( ""#endif"" )"		6136991	0					
ANR	6137098	Callee	expect		6136991	0					
ANR	6137099	Identifier	expect		6136991	0					
ANR	6137100	ArgumentList	"""#endif"""		6136991	1					
ANR	6137101	Argument	"""#endif"""		6136991	0					
ANR	6137102	PrimaryExpression	"""#endif"""		6136991	0					
ANR	6137103	ReturnStatement	return ;	746:4:15386:15392	6136991	1	True				
ANR	6137104	ElseStatement	else		6136991	0					
ANR	6137105	IfStatement	if ( c == '\\\\' )		6136991	0					
ANR	6137106	Condition	c == '\\\\'	747:14:15408:15416	6136991	0	True				
ANR	6137107	EqualityExpression	c == '\\\\'		6136991	0		==			
ANR	6137108	Identifier	c		6136991	0					
ANR	6137109	PrimaryExpression	'\\\\'		6136991	1					
ANR	6137110	CompoundStatement		31:25:506:506	6136991	1					
ANR	6137111	ExpressionStatement	ch = file -> buf_ptr [ 0 ]	748:4:15425:15446	6136991	0	True				
ANR	6137112	AssignmentExpression	ch = file -> buf_ptr [ 0 ]		6136991	0		=			
ANR	6137113	Identifier	ch		6136991	0					
ANR	6137114	ArrayIndexing	file -> buf_ptr [ 0 ]		6136991	1					
ANR	6137115	PtrMemberAccess	file -> buf_ptr		6136991	0					
ANR	6137116	Identifier	file		6136991	0					
ANR	6137117	Identifier	buf_ptr		6136991	1					
ANR	6137118	PrimaryExpression	0		6136991	1					
ANR	6137119	ExpressionStatement	handle_stray_noerror ( )	749:4:15452:15475	6136991	1	True				
ANR	6137120	CallExpression	handle_stray_noerror ( )		6136991	0					
ANR	6137121	Callee	handle_stray_noerror		6136991	0					
ANR	6137122	Identifier	handle_stray_noerror		6136991	0					
ANR	6137123	ArgumentList			6136991	1					
ANR	6137124	ExpressionStatement	p = file -> buf_ptr	751:3:15485:15502	6136991	15	True				
ANR	6137125	AssignmentExpression	p = file -> buf_ptr		6136991	0		=			
ANR	6137126	Identifier	p		6136991	0					
ANR	6137127	PtrMemberAccess	file -> buf_ptr		6136991	1					
ANR	6137128	Identifier	file		6136991	0					
ANR	6137129	Identifier	buf_ptr		6136991	1					
ANR	6137130	GotoStatement	goto redo_no_start ;	752:3:15507:15525	6136991	16	True				
ANR	6137131	Identifier	redo_no_start		6136991	0					
ANR	6137132	Label	"case '\\""' :"	754:2:15550:15559	6136991	17	True				
ANR	6137133	Label	case '\\'' :	755:2:15563:15572	6136991	18	True				
ANR	6137134	IfStatement	if ( in_warn_or_error )		6136991	19					
ANR	6137135	Condition	in_warn_or_error	756:7:15581:15596	6136991	0	True				
ANR	6137136	Identifier	in_warn_or_error		6136991	0					
ANR	6137137	CompoundStatement		40:25:686:686	6136991	1					
ANR	6137138	GotoStatement	goto _default ;	757:4:15605:15618	6136991	0	True				
ANR	6137139	Identifier	_default		6136991	0					
ANR	6137140	ExpressionStatement	"p = parse_pp_string ( p , c , NULL )"	759:3:15628:15660	6136991	20	True				
ANR	6137141	AssignmentExpression	"p = parse_pp_string ( p , c , NULL )"		6136991	0		=			
ANR	6137142	Identifier	p		6136991	0					
ANR	6137143	CallExpression	"parse_pp_string ( p , c , NULL )"		6136991	1					
ANR	6137144	Callee	parse_pp_string		6136991	0					
ANR	6137145	Identifier	parse_pp_string		6136991	0					
ANR	6137146	ArgumentList	p		6136991	1					
ANR	6137147	Argument	p		6136991	0					
ANR	6137148	Identifier	p		6136991	0					
ANR	6137149	Argument	c		6136991	1					
ANR	6137150	Identifier	c		6136991	0					
ANR	6137151	Argument	NULL		6136991	2					
ANR	6137152	Identifier	NULL		6136991	0					
ANR	6137153	IfStatement	if ( p == NULL )		6136991	21					
ANR	6137154	Condition	p == NULL	760:7:15669:15677	6136991	0	True				
ANR	6137155	EqualityExpression	p == NULL		6136991	0		==			
ANR	6137156	Identifier	p		6136991	0					
ANR	6137157	Identifier	NULL		6136991	1					
ANR	6137158	CompoundStatement		44:18:767:767	6136991	1					
ANR	6137159	ReturnStatement	return ;	761:4:15686:15692	6136991	0	True				
ANR	6137160	BreakStatement	break ;	763:3:15702:15707	6136991	22	True				
ANR	6137161	Label	case '/' :	765:2:15733:15741	6136991	23	True				
ANR	6137162	IfStatement	if ( in_warn_or_error )		6136991	24					
ANR	6137163	Condition	in_warn_or_error	766:7:15750:15765	6136991	0	True				
ANR	6137164	Identifier	in_warn_or_error		6136991	0					
ANR	6137165	CompoundStatement		50:25:855:855	6136991	1					
ANR	6137166	GotoStatement	goto _default ;	767:4:15774:15787	6136991	0	True				
ANR	6137167	Identifier	_default		6136991	0					
ANR	6137168	ExpressionStatement	file -> buf_ptr = p	769:3:15797:15814	6136991	25	True				
ANR	6137169	AssignmentExpression	file -> buf_ptr = p		6136991	0		=			
ANR	6137170	PtrMemberAccess	file -> buf_ptr		6136991	0					
ANR	6137171	Identifier	file		6136991	0					
ANR	6137172	Identifier	buf_ptr		6136991	1					
ANR	6137173	Identifier	p		6136991	1					
ANR	6137174	ExpressionStatement	ch = * p	770:3:15819:15826	6136991	26	True				
ANR	6137175	AssignmentExpression	ch = * p		6136991	0		=			
ANR	6137176	Identifier	ch		6136991	0					
ANR	6137177	UnaryOperationExpression	* p		6136991	1					
ANR	6137178	UnaryOperator	*		6136991	0					
ANR	6137179	Identifier	p		6136991	1					
ANR	6137180	ExpressionStatement	minp ( )	771:3:15831:15838	6136991	27	True				
ANR	6137181	CallExpression	minp ( )		6136991	0					
ANR	6137182	Callee	minp		6136991	0					
ANR	6137183	Identifier	minp		6136991	0					
ANR	6137184	ArgumentList			6136991	1					
ANR	6137185	ExpressionStatement	p = file -> buf_ptr	772:3:15843:15860	6136991	28	True				
ANR	6137186	AssignmentExpression	p = file -> buf_ptr		6136991	0		=			
ANR	6137187	Identifier	p		6136991	0					
ANR	6137188	PtrMemberAccess	file -> buf_ptr		6136991	1					
ANR	6137189	Identifier	file		6136991	0					
ANR	6137190	Identifier	buf_ptr		6136991	1					
ANR	6137191	IfStatement	if ( ch == '*' )		6136991	29					
ANR	6137192	Condition	ch == '*'	773:7:15869:15877	6136991	0	True				
ANR	6137193	EqualityExpression	ch == '*'		6136991	0		==			
ANR	6137194	Identifier	ch		6136991	0					
ANR	6137195	PrimaryExpression	'*'		6136991	1					
ANR	6137196	CompoundStatement		57:18:967:967	6136991	1					
ANR	6137197	ExpressionStatement	p = parse_comment ( p )	774:4:15886:15907	6136991	0	True				
ANR	6137198	AssignmentExpression	p = parse_comment ( p )		6136991	0		=			
ANR	6137199	Identifier	p		6136991	0					
ANR	6137200	CallExpression	parse_comment ( p )		6136991	1					
ANR	6137201	Callee	parse_comment		6136991	0					
ANR	6137202	Identifier	parse_comment		6136991	0					
ANR	6137203	ArgumentList	p		6136991	1					
ANR	6137204	Argument	p		6136991	0					
ANR	6137205	Identifier	p		6136991	0					
ANR	6137206	ElseStatement	else		6136991	0					
ANR	6137207	IfStatement	if ( ch == '/' )		6136991	0					
ANR	6137208	Condition	ch == '/'	775:14:15923:15931	6136991	0	True				
ANR	6137209	EqualityExpression	ch == '/'		6136991	0		==			
ANR	6137210	Identifier	ch		6136991	0					
ANR	6137211	PrimaryExpression	'/'		6136991	1					
ANR	6137212	CompoundStatement		59:25:1021:1021	6136991	1					
ANR	6137213	ExpressionStatement	p = parse_line_comment ( p )	776:4:15940:15966	6136991	0	True				
ANR	6137214	AssignmentExpression	p = parse_line_comment ( p )		6136991	0		=			
ANR	6137215	Identifier	p		6136991	0					
ANR	6137216	CallExpression	parse_line_comment ( p )		6136991	1					
ANR	6137217	Callee	parse_line_comment		6136991	0					
ANR	6137218	Identifier	parse_line_comment		6136991	0					
ANR	6137219	ArgumentList	p		6136991	1					
ANR	6137220	Argument	p		6136991	0					
ANR	6137221	Identifier	p		6136991	0					
ANR	6137222	BreakStatement	break ;	778:3:15976:15981	6136991	30	True				
ANR	6137223	Label	case '#' :	779:2:15985:15993	6136991	31	True				
ANR	6137224	ExpressionStatement	p ++	780:3:15998:16001	6136991	32	True				
ANR	6137225	PostIncDecOperationExpression	p ++		6136991	0					
ANR	6137226	Identifier	p		6136991	0					
ANR	6137227	IncDec	++		6136991	1					
ANR	6137228	IfStatement	if ( start_of_line )		6136991	33					
ANR	6137229	Condition	start_of_line	781:7:16010:16022	6136991	0	True				
ANR	6137230	Identifier	start_of_line		6136991	0					
ANR	6137231	CompoundStatement		65:22:1112:1112	6136991	1					
ANR	6137232	ExpressionStatement	file -> buf_ptr = p	782:4:16031:16048	6136991	0	True				
ANR	6137233	AssignmentExpression	file -> buf_ptr = p		6136991	0		=			
ANR	6137234	PtrMemberAccess	file -> buf_ptr		6136991	0					
ANR	6137235	Identifier	file		6136991	0					
ANR	6137236	Identifier	buf_ptr		6136991	1					
ANR	6137237	Identifier	p		6136991	1					
ANR	6137238	ExpressionStatement	next_nomacro ( )	783:4:16054:16069	6136991	1	True				
ANR	6137239	CallExpression	next_nomacro ( )		6136991	0					
ANR	6137240	Callee	next_nomacro		6136991	0					
ANR	6137241	Identifier	next_nomacro		6136991	0					
ANR	6137242	ArgumentList			6136991	1					
ANR	6137243	ExpressionStatement	p = file -> buf_ptr	784:4:16075:16092	6136991	2	True				
ANR	6137244	AssignmentExpression	p = file -> buf_ptr		6136991	0		=			
ANR	6137245	Identifier	p		6136991	0					
ANR	6137246	PtrMemberAccess	file -> buf_ptr		6136991	1					
ANR	6137247	Identifier	file		6136991	0					
ANR	6137248	Identifier	buf_ptr		6136991	1					
ANR	6137249	IfStatement	if ( a == 0 && ( tok == TOK_ELSE || tok == TOK_ELIF || tok == TOK_ENDIF ) )		6136991	3					
ANR	6137250	Condition	a == 0 && ( tok == TOK_ELSE || tok == TOK_ELIF || tok == TOK_ENDIF )	785:8:16102:16175	6136991	0	True				
ANR	6137251	AndExpression	a == 0 && ( tok == TOK_ELSE || tok == TOK_ELIF || tok == TOK_ENDIF )		6136991	0		&&			
ANR	6137252	EqualityExpression	a == 0		6136991	0		==			
ANR	6137253	Identifier	a		6136991	0					
ANR	6137254	PrimaryExpression	0		6136991	1					
ANR	6137255	OrExpression	tok == TOK_ELSE || tok == TOK_ELIF || tok == TOK_ENDIF		6136991	1		||			
ANR	6137256	EqualityExpression	tok == TOK_ELSE		6136991	0		==			
ANR	6137257	Identifier	tok		6136991	0					
ANR	6137258	Identifier	TOK_ELSE		6136991	1					
ANR	6137259	OrExpression	tok == TOK_ELIF || tok == TOK_ENDIF		6136991	1		||			
ANR	6137260	EqualityExpression	tok == TOK_ELIF		6136991	0		==			
ANR	6137261	Identifier	tok		6136991	0					
ANR	6137262	Identifier	TOK_ELIF		6136991	1					
ANR	6137263	EqualityExpression	tok == TOK_ENDIF		6136991	1		==			
ANR	6137264	Identifier	tok		6136991	0					
ANR	6137265	Identifier	TOK_ENDIF		6136991	1					
ANR	6137266	CompoundStatement		70:66:1265:1265	6136991	1					
ANR	6137267	GotoStatement	goto the_end ;	787:5:16185:16197	6136991	0	True				
ANR	6137268	Identifier	the_end		6136991	0					
ANR	6137269	IfStatement	if ( tok == TOK_IF || tok == TOK_IFDEF || tok == TOK_IFNDEF )		6136991	4					
ANR	6137270	Condition	tok == TOK_IF || tok == TOK_IFDEF || tok == TOK_IFNDEF	789:8:16213:16266	6136991	0	True				
ANR	6137271	OrExpression	tok == TOK_IF || tok == TOK_IFDEF || tok == TOK_IFNDEF		6136991	0		||			
ANR	6137272	EqualityExpression	tok == TOK_IF		6136991	0		==			
ANR	6137273	Identifier	tok		6136991	0					
ANR	6137274	Identifier	TOK_IF		6136991	1					
ANR	6137275	OrExpression	tok == TOK_IFDEF || tok == TOK_IFNDEF		6136991	1		||			
ANR	6137276	EqualityExpression	tok == TOK_IFDEF		6136991	0		==			
ANR	6137277	Identifier	tok		6136991	0					
ANR	6137278	Identifier	TOK_IFDEF		6136991	1					
ANR	6137279	EqualityExpression	tok == TOK_IFNDEF		6136991	1		==			
ANR	6137280	Identifier	tok		6136991	0					
ANR	6137281	Identifier	TOK_IFNDEF		6136991	1					
ANR	6137282	CompoundStatement		73:64:1356:1356	6136991	1					
ANR	6137283	ExpressionStatement	a ++	790:5:16276:16279	6136991	0	True				
ANR	6137284	PostIncDecOperationExpression	a ++		6136991	0					
ANR	6137285	Identifier	a		6136991	0					
ANR	6137286	IncDec	++		6136991	1					
ANR	6137287	ElseStatement	else		6136991	0					
ANR	6137288	IfStatement	if ( tok == TOK_ENDIF )		6136991	0					
ANR	6137289	Condition	tok == TOK_ENDIF	791:15:16296:16311	6136991	0	True				
ANR	6137290	EqualityExpression	tok == TOK_ENDIF		6136991	0		==			
ANR	6137291	Identifier	tok		6136991	0					
ANR	6137292	Identifier	TOK_ENDIF		6136991	1					
ANR	6137293	CompoundStatement		75:33:1401:1401	6136991	1					
ANR	6137294	ExpressionStatement	a --	792:5:16321:16324	6136991	0	True				
ANR	6137295	PostIncDecOperationExpression	a --		6136991	0					
ANR	6137296	Identifier	a		6136991	0					
ANR	6137297	IncDec	--		6136991	1					
ANR	6137298	ElseStatement	else		6136991	0					
ANR	6137299	IfStatement	if ( tok == TOK_ERROR || tok == TOK_WARNING )		6136991	0					
ANR	6137300	Condition	tok == TOK_ERROR || tok == TOK_WARNING	793:15:16341:16378	6136991	0	True				
ANR	6137301	OrExpression	tok == TOK_ERROR || tok == TOK_WARNING		6136991	0		||			
ANR	6137302	EqualityExpression	tok == TOK_ERROR		6136991	0		==			
ANR	6137303	Identifier	tok		6136991	0					
ANR	6137304	Identifier	TOK_ERROR		6136991	1					
ANR	6137305	EqualityExpression	tok == TOK_WARNING		6136991	1		==			
ANR	6137306	Identifier	tok		6136991	0					
ANR	6137307	Identifier	TOK_WARNING		6136991	1					
ANR	6137308	CompoundStatement		77:55:1468:1468	6136991	1					
ANR	6137309	ExpressionStatement	in_warn_or_error = 1	794:5:16388:16408	6136991	0	True				
ANR	6137310	AssignmentExpression	in_warn_or_error = 1		6136991	0		=			
ANR	6137311	Identifier	in_warn_or_error		6136991	0					
ANR	6137312	PrimaryExpression	1		6136991	1					
ANR	6137313	ElseStatement	else		6136991	0					
ANR	6137314	IfStatement	if ( tok == TOK_LINEFEED )		6136991	0					
ANR	6137315	Condition	tok == TOK_LINEFEED	795:15:16425:16443	6136991	0	True				
ANR	6137316	EqualityExpression	tok == TOK_LINEFEED		6136991	0		==			
ANR	6137317	Identifier	tok		6136991	0					
ANR	6137318	Identifier	TOK_LINEFEED		6136991	1					
ANR	6137319	CompoundStatement		79:36:1533:1533	6136991	1					
ANR	6137320	GotoStatement	goto redo_start ;	796:5:16453:16468	6136991	0	True				
ANR	6137321	Identifier	redo_start		6136991	0					
ANR	6137322	BreakStatement	break ;	799:3:16484:16489	6136991	34	True				
ANR	6137323	Label	_default :	800:0:16491:16499	6136991	35	True				
ANR	6137324	Identifier	_default		6136991	0					
ANR	6137325	Label	default :	801:2:16503:16510	6136991	36	True				
ANR	6137326	Identifier	default		6136991	0					
ANR	6137327	ExpressionStatement	p ++	802:3:16515:16518	6136991	37	True				
ANR	6137328	PostIncDecOperationExpression	p ++		6136991	0					
ANR	6137329	Identifier	p		6136991	0					
ANR	6137330	IncDec	++		6136991	1					
ANR	6137331	BreakStatement	break ;	803:3:16523:16528	6136991	38	True				
ANR	6137332	ExpressionStatement	start_of_line = 0	805:2:16536:16553	6136991	3	True				
ANR	6137333	AssignmentExpression	start_of_line = 0		6136991	0		=			
ANR	6137334	Identifier	start_of_line		6136991	0					
ANR	6137335	PrimaryExpression	0		6136991	1					
ANR	6137336	Label	the_end :	807:0:16558:16565	6136991	8	True				
ANR	6137337	Identifier	the_end		6136991	0					
ANR	6137338	ExpressionStatement		808:1:16568:16568	6136991	9	True				
ANR	6137339	ExpressionStatement	file -> buf_ptr = p	809:1:16571:16588	6136991	10	True				
ANR	6137340	AssignmentExpression	file -> buf_ptr = p		6136991	0		=			
ANR	6137341	PtrMemberAccess	file -> buf_ptr		6136991	0					
ANR	6137342	Identifier	file		6136991	0					
ANR	6137343	Identifier	buf_ptr		6136991	1					
ANR	6137344	Identifier	p		6136991	1					
ANR	6137345	ReturnType	static void		6136991	1					
ANR	6137346	Identifier	preprocess_skip		6136991	2					
ANR	6137347	ParameterList			6136991	3					
ANR	6137348	CFGEntryNode	ENTRY		6136991		True				
ANR	6137349	CFGExitNode	EXIT		6136991		True				
ANR	6137350	Symbol	* file -> buf_ptr		6136991						
ANR	6137351	Symbol	parse_pp_string		6136991						
ANR	6137352	Symbol	TOK_WARNING		6136991						
ANR	6137353	Symbol	TOK_LINEFEED		6136991						
ANR	6137354	Symbol	tok		6136991						
ANR	6137355	Symbol	file		6136991						
ANR	6137356	Symbol	TOK_IFNDEF		6136991						
ANR	6137357	Symbol	handle_eob		6136991						
ANR	6137358	Symbol	file -> buf_ptr		6136991						
ANR	6137359	Symbol	file -> line_num		6136991						
ANR	6137360	Symbol	in_warn_or_error		6136991						
ANR	6137361	Symbol	TOK_IF		6136991						
ANR	6137362	Symbol	a		6136991						
ANR	6137363	Symbol	c		6136991						
ANR	6137364	Symbol	NULL		6136991						
ANR	6137365	Symbol	ch		6136991						
ANR	6137366	Symbol	start_of_line		6136991						
ANR	6137367	Symbol	TOK_ERROR		6136991						
ANR	6137368	Symbol	* file		6136991						
ANR	6137369	Symbol	tcc_nerr		6136991						
ANR	6137370	Symbol	TOK_ELSE		6136991						
ANR	6137371	Symbol	p		6136991						
ANR	6137372	Symbol	CH_EOF		6136991						
ANR	6137373	Symbol	TOK_ELIF		6136991						
ANR	6137374	Symbol	parse_line_comment		6136991						
ANR	6137375	Symbol	TOK_ENDIF		6136991						
ANR	6137376	Symbol	* p		6136991						
ANR	6137377	Symbol	parse_comment		6136991						
ANR	6137378	Symbol	* * file		6136991						
ANR	6137379	Symbol	TOK_IFDEF		6136991						
ANR	6137380	Function	save_parse_state	819:0:16817:16954							
ANR	6137381	FunctionDef	save_parse_state (ParseState * s)		6137380	0					
ANR	6137382	CompoundStatement		820:0:16862:16954	6137380	0					
ANR	6137383	ExpressionStatement	s -> line_num = file -> line_num	821:1:16865:16893	6137380	0	True				
ANR	6137384	AssignmentExpression	s -> line_num = file -> line_num		6137380	0		=			
ANR	6137385	PtrMemberAccess	s -> line_num		6137380	0					
ANR	6137386	Identifier	s		6137380	0					
ANR	6137387	Identifier	line_num		6137380	1					
ANR	6137388	PtrMemberAccess	file -> line_num		6137380	1					
ANR	6137389	Identifier	file		6137380	0					
ANR	6137390	Identifier	line_num		6137380	1					
ANR	6137391	ExpressionStatement	s -> macro_ptr = macro_ptr	822:1:16896:16920	6137380	1	True				
ANR	6137392	AssignmentExpression	s -> macro_ptr = macro_ptr		6137380	0		=			
ANR	6137393	PtrMemberAccess	s -> macro_ptr		6137380	0					
ANR	6137394	Identifier	s		6137380	0					
ANR	6137395	Identifier	macro_ptr		6137380	1					
ANR	6137396	Identifier	macro_ptr		6137380	1					
ANR	6137397	ExpressionStatement	s -> tok = tok	823:1:16923:16935	6137380	2	True				
ANR	6137398	AssignmentExpression	s -> tok = tok		6137380	0		=			
ANR	6137399	PtrMemberAccess	s -> tok		6137380	0					
ANR	6137400	Identifier	s		6137380	0					
ANR	6137401	Identifier	tok		6137380	1					
ANR	6137402	Identifier	tok		6137380	1					
ANR	6137403	ExpressionStatement	s -> tokc = tokc	824:1:16938:16952	6137380	3	True				
ANR	6137404	AssignmentExpression	s -> tokc = tokc		6137380	0		=			
ANR	6137405	PtrMemberAccess	s -> tokc		6137380	0					
ANR	6137406	Identifier	s		6137380	0					
ANR	6137407	Identifier	tokc		6137380	1					
ANR	6137408	Identifier	tokc		6137380	1					
ANR	6137409	ReturnType	ST_FUNC void		6137380	1					
ANR	6137410	Identifier	save_parse_state		6137380	2					
ANR	6137411	ParameterList	ParseState * s		6137380	3					
ANR	6137412	Parameter	ParseState * s	819:30:16847:16859	6137380	0	True				
ANR	6137413	ParameterType	ParseState *		6137380	0					
ANR	6137414	Identifier	s		6137380	1					
ANR	6137415	CFGEntryNode	ENTRY		6137380		True				
ANR	6137416	CFGExitNode	EXIT		6137380		True				
ANR	6137417	Symbol	tok		6137380						
ANR	6137418	Symbol	s		6137380						
ANR	6137419	Symbol	file		6137380						
ANR	6137420	Symbol	s -> line_num		6137380						
ANR	6137421	Symbol	macro_ptr		6137380						
ANR	6137422	Symbol	s -> macro_ptr		6137380						
ANR	6137423	Symbol	s -> tokc		6137380						
ANR	6137424	Symbol	tokc		6137380						
ANR	6137425	Symbol	file -> line_num		6137380						
ANR	6137426	Symbol	* file		6137380						
ANR	6137427	Symbol	s -> tok		6137380						
ANR	6137428	Symbol	* s		6137380						
ANR	6137429	Function	restore_parse_state	828:0:16992:17132							
ANR	6137430	FunctionDef	restore_parse_state (ParseState * s)		6137429	0					
ANR	6137431	CompoundStatement		829:0:17040:17132	6137429	0					
ANR	6137432	ExpressionStatement	file -> line_num = s -> line_num	830:1:17043:17071	6137429	0	True				
ANR	6137433	AssignmentExpression	file -> line_num = s -> line_num		6137429	0		=			
ANR	6137434	PtrMemberAccess	file -> line_num		6137429	0					
ANR	6137435	Identifier	file		6137429	0					
ANR	6137436	Identifier	line_num		6137429	1					
ANR	6137437	PtrMemberAccess	s -> line_num		6137429	1					
ANR	6137438	Identifier	s		6137429	0					
ANR	6137439	Identifier	line_num		6137429	1					
ANR	6137440	ExpressionStatement	macro_ptr = s -> macro_ptr	831:1:17074:17098	6137429	1	True				
ANR	6137441	AssignmentExpression	macro_ptr = s -> macro_ptr		6137429	0		=			
ANR	6137442	Identifier	macro_ptr		6137429	0					
ANR	6137443	PtrMemberAccess	s -> macro_ptr		6137429	1					
ANR	6137444	Identifier	s		6137429	0					
ANR	6137445	Identifier	macro_ptr		6137429	1					
ANR	6137446	ExpressionStatement	tok = s -> tok	832:1:17101:17113	6137429	2	True				
ANR	6137447	AssignmentExpression	tok = s -> tok		6137429	0		=			
ANR	6137448	Identifier	tok		6137429	0					
ANR	6137449	PtrMemberAccess	s -> tok		6137429	1					
ANR	6137450	Identifier	s		6137429	0					
ANR	6137451	Identifier	tok		6137429	1					
ANR	6137452	ExpressionStatement	tokc = s -> tokc	833:1:17116:17130	6137429	3	True				
ANR	6137453	AssignmentExpression	tokc = s -> tokc		6137429	0		=			
ANR	6137454	Identifier	tokc		6137429	0					
ANR	6137455	PtrMemberAccess	s -> tokc		6137429	1					
ANR	6137456	Identifier	s		6137429	0					
ANR	6137457	Identifier	tokc		6137429	1					
ANR	6137458	ReturnType	ST_FUNC void		6137429	1					
ANR	6137459	Identifier	restore_parse_state		6137429	2					
ANR	6137460	ParameterList	ParseState * s		6137429	3					
ANR	6137461	Parameter	ParseState * s	828:33:17025:17037	6137429	0	True				
ANR	6137462	ParameterType	ParseState *		6137429	0					
ANR	6137463	Identifier	s		6137429	1					
ANR	6137464	CFGEntryNode	ENTRY		6137429		True				
ANR	6137465	CFGExitNode	EXIT		6137429		True				
ANR	6137466	Symbol	tok		6137429						
ANR	6137467	Symbol	s		6137429						
ANR	6137468	Symbol	file		6137429						
ANR	6137469	Symbol	s -> line_num		6137429						
ANR	6137470	Symbol	s -> macro_ptr		6137429						
ANR	6137471	Symbol	macro_ptr		6137429						
ANR	6137472	Symbol	s -> tokc		6137429						
ANR	6137473	Symbol	tokc		6137429						
ANR	6137474	Symbol	file -> line_num		6137429						
ANR	6137475	Symbol	* file		6137429						
ANR	6137476	Symbol	s -> tok		6137429						
ANR	6137477	Symbol	* s		6137429						
ANR	6137478	Function	tok_ext_size	838:0:17212:17632							
ANR	6137479	FunctionDef	tok_ext_size (int t)		6137478	0					
ANR	6137480	CompoundStatement		839:0:17250:17632	6137478	0					
ANR	6137481	SwitchStatement	switch ( t )		6137478	0					
ANR	6137482	Condition	t	840:9:17261:17261	6137478	0	True				
ANR	6137483	Identifier	t		6137478	0					
ANR	6137484	CompoundStatement		2:12:13:13	6137478	1					
ANR	6137485	Label	case TOK_CINT :	842:1:17282:17295	6137478	0	True				
ANR	6137486	Identifier	TOK_CINT		6137478	0					
ANR	6137487	Label	case TOK_CUINT :	843:1:17298:17312	6137478	1	True				
ANR	6137488	Identifier	TOK_CUINT		6137478	0					
ANR	6137489	Label	case TOK_CCHAR :	844:1:17315:17329	6137478	2	True				
ANR	6137490	Identifier	TOK_CCHAR		6137478	0					
ANR	6137491	Label	case TOK_LCHAR :	845:1:17332:17346	6137478	3	True				
ANR	6137492	Identifier	TOK_LCHAR		6137478	0					
ANR	6137493	Label	case TOK_CFLOAT :	846:1:17349:17364	6137478	4	True				
ANR	6137494	Identifier	TOK_CFLOAT		6137478	0					
ANR	6137495	Label	case TOK_LINENUM :	847:1:17367:17383	6137478	5	True				
ANR	6137496	Identifier	TOK_LINENUM		6137478	0					
ANR	6137497	ReturnStatement	return 1 ;	848:2:17387:17395	6137478	6	True				
ANR	6137498	PrimaryExpression	1		6137478	0					
ANR	6137499	Label	case TOK_STR :	849:1:17398:17410	6137478	7	True				
ANR	6137500	Identifier	TOK_STR		6137478	0					
ANR	6137501	Label	case TOK_LSTR :	850:1:17413:17426	6137478	8	True				
ANR	6137502	Identifier	TOK_LSTR		6137478	0					
ANR	6137503	Label	case TOK_PPNUM :	851:1:17429:17443	6137478	9	True				
ANR	6137504	Identifier	TOK_PPNUM		6137478	0					
ANR	6137505	ExpressionStatement	"tcc_error ( ""unsupported token"" )"	852:2:17447:17478	6137478	10	True				
ANR	6137506	CallExpression	"tcc_error ( ""unsupported token"" )"		6137478	0					
ANR	6137507	Callee	tcc_error		6137478	0					
ANR	6137508	Identifier	tcc_error		6137478	0					
ANR	6137509	ArgumentList	"""unsupported token"""		6137478	1					
ANR	6137510	Argument	"""unsupported token"""		6137478	0					
ANR	6137511	PrimaryExpression	"""unsupported token"""		6137478	0					
ANR	6137512	ReturnStatement	return 1 ;	853:2:17482:17490	6137478	11	True				
ANR	6137513	PrimaryExpression	1		6137478	0					
ANR	6137514	Label	case TOK_CDOUBLE :	854:1:17493:17509	6137478	12	True				
ANR	6137515	Identifier	TOK_CDOUBLE		6137478	0					
ANR	6137516	Label	case TOK_CLLONG :	855:1:17512:17527	6137478	13	True				
ANR	6137517	Identifier	TOK_CLLONG		6137478	0					
ANR	6137518	Label	case TOK_CULLONG :	856:1:17530:17546	6137478	14	True				
ANR	6137519	Identifier	TOK_CULLONG		6137478	0					
ANR	6137520	ReturnStatement	return 2 ;	857:2:17550:17558	6137478	15	True				
ANR	6137521	PrimaryExpression	2		6137478	0					
ANR	6137522	Label	case TOK_CLDOUBLE :	858:1:17561:17578	6137478	16	True				
ANR	6137523	Identifier	TOK_CLDOUBLE		6137478	0					
ANR	6137524	ReturnStatement	return LDOUBLE_SIZE / 4 ;	859:2:17582:17605	6137478	17	True				
ANR	6137525	MultiplicativeExpression	LDOUBLE_SIZE / 4		6137478	0		/			
ANR	6137526	Identifier	LDOUBLE_SIZE		6137478	0					
ANR	6137527	PrimaryExpression	4		6137478	1					
ANR	6137528	Label	default :	860:1:17608:17615	6137478	18	True				
ANR	6137529	Identifier	default		6137478	0					
ANR	6137530	ReturnStatement	return 0 ;	861:2:17619:17627	6137478	19	True				
ANR	6137531	PrimaryExpression	0		6137478	0					
ANR	6137532	ReturnType	static inline int		6137478	1					
ANR	6137533	Identifier	tok_ext_size		6137478	2					
ANR	6137534	ParameterList	int t		6137478	3					
ANR	6137535	Parameter	int t	838:31:17243:17247	6137478	0	True				
ANR	6137536	ParameterType	int		6137478	0					
ANR	6137537	Identifier	t		6137478	1					
ANR	6137538	CFGEntryNode	ENTRY		6137478		True				
ANR	6137539	CFGExitNode	EXIT		6137478		True				
ANR	6137540	Symbol	t		6137478						
ANR	6137541	Symbol	LDOUBLE_SIZE		6137478						
ANR	6137542	Function	tok_str_new	867:0:17664:17783							
ANR	6137543	FunctionDef	tok_str_new (TokenString * s)		6137542	0					
ANR	6137544	CompoundStatement		868:0:17705:17783	6137542	0					
ANR	6137545	ExpressionStatement	s -> str = NULL	869:1:17708:17721	6137542	0	True				
ANR	6137546	AssignmentExpression	s -> str = NULL		6137542	0		=			
ANR	6137547	PtrMemberAccess	s -> str		6137542	0					
ANR	6137548	Identifier	s		6137542	0					
ANR	6137549	Identifier	str		6137542	1					
ANR	6137550	Identifier	NULL		6137542	1					
ANR	6137551	ExpressionStatement	s -> len = 0	870:1:17724:17734	6137542	1	True				
ANR	6137552	AssignmentExpression	s -> len = 0		6137542	0		=			
ANR	6137553	PtrMemberAccess	s -> len		6137542	0					
ANR	6137554	Identifier	s		6137542	0					
ANR	6137555	Identifier	len		6137542	1					
ANR	6137556	PrimaryExpression	0		6137542	1					
ANR	6137557	ExpressionStatement	s -> allocated_len = 0	871:1:17737:17757	6137542	2	True				
ANR	6137558	AssignmentExpression	s -> allocated_len = 0		6137542	0		=			
ANR	6137559	PtrMemberAccess	s -> allocated_len		6137542	0					
ANR	6137560	Identifier	s		6137542	0					
ANR	6137561	Identifier	allocated_len		6137542	1					
ANR	6137562	PrimaryExpression	0		6137542	1					
ANR	6137563	ExpressionStatement	s -> last_line_num = - 1	872:1:17760:17781	6137542	3	True				
ANR	6137564	AssignmentExpression	s -> last_line_num = - 1		6137542	0		=			
ANR	6137565	PtrMemberAccess	s -> last_line_num		6137542	0					
ANR	6137566	Identifier	s		6137542	0					
ANR	6137567	Identifier	last_line_num		6137542	1					
ANR	6137568	UnaryOperationExpression	- 1		6137542	1					
ANR	6137569	UnaryOperator	-		6137542	0					
ANR	6137570	PrimaryExpression	1		6137542	1					
ANR	6137571	ReturnType	ST_INLN void		6137542	1					
ANR	6137572	Identifier	tok_str_new		6137542	2					
ANR	6137573	ParameterList	TokenString * s		6137542	3					
ANR	6137574	Parameter	TokenString * s	867:25:17689:17702	6137542	0	True				
ANR	6137575	ParameterType	TokenString *		6137542	0					
ANR	6137576	Identifier	s		6137542	1					
ANR	6137577	CFGEntryNode	ENTRY		6137542		True				
ANR	6137578	CFGExitNode	EXIT		6137542		True				
ANR	6137579	Symbol	s -> last_line_num		6137542						
ANR	6137580	Symbol	s -> len		6137542						
ANR	6137581	Symbol	s		6137542						
ANR	6137582	Symbol	NULL		6137542						
ANR	6137583	Symbol	s -> allocated_len		6137542						
ANR	6137584	Symbol	* s		6137542						
ANR	6137585	Symbol	s -> str		6137542						
ANR	6137586	Function	tok_str_free	875:0:17786:17837							
ANR	6137587	FunctionDef	tok_str_free (int * str)		6137586	0					
ANR	6137588	CompoundStatement		876:0:17822:17837	6137586	0					
ANR	6137589	ExpressionStatement	free ( str )	877:1:17825:17835	6137586	0	True				
ANR	6137590	CallExpression	free ( str )		6137586	0					
ANR	6137591	Callee	free		6137586	0					
ANR	6137592	Identifier	free		6137586	0					
ANR	6137593	ArgumentList	str		6137586	1					
ANR	6137594	Argument	str		6137586	0					
ANR	6137595	Identifier	str		6137586	0					
ANR	6137596	ReturnType	ST_FUNC void		6137586	1					
ANR	6137597	Identifier	tok_str_free		6137586	2					
ANR	6137598	ParameterList	int * str		6137586	3					
ANR	6137599	Parameter	int * str	875:26:17812:17819	6137586	0	True				
ANR	6137600	ParameterType	int *		6137586	0					
ANR	6137601	Identifier	str		6137586	1					
ANR	6137602	CFGEntryNode	ENTRY		6137586		True				
ANR	6137603	CFGExitNode	EXIT		6137586		True				
ANR	6137604	Symbol	str		6137586						
ANR	6137605	Function	tok_str_realloc	880:0:17840:18084							
ANR	6137606	FunctionDef	tok_str_realloc (TokenString * s)		6137605	0					
ANR	6137607	CompoundStatement		881:0:17884:18084	6137605	0					
ANR	6137608	IdentifierDeclStatement	"int * str , len ;"	882:1:17887:17900	6137605	0	True				
ANR	6137609	IdentifierDecl	* str		6137605	0					
ANR	6137610	IdentifierDeclType	int *		6137605	0					
ANR	6137611	Identifier	str		6137605	1					
ANR	6137612	IdentifierDecl	len		6137605	1					
ANR	6137613	IdentifierDeclType	int		6137605	0					
ANR	6137614	Identifier	len		6137605	1					
ANR	6137615	IfStatement	if ( s -> allocated_len == 0 )		6137605	1					
ANR	6137616	Condition	s -> allocated_len == 0	884:5:17908:17928	6137605	0	True				
ANR	6137617	EqualityExpression	s -> allocated_len == 0		6137605	0		==			
ANR	6137618	PtrMemberAccess	s -> allocated_len		6137605	0					
ANR	6137619	Identifier	s		6137605	0					
ANR	6137620	Identifier	allocated_len		6137605	1					
ANR	6137621	PrimaryExpression	0		6137605	1					
ANR	6137622	CompoundStatement		4:28:46:46	6137605	1					
ANR	6137623	ExpressionStatement	len = 8	885:2:17935:17942	6137605	0	True				
ANR	6137624	AssignmentExpression	len = 8		6137605	0		=			
ANR	6137625	Identifier	len		6137605	0					
ANR	6137626	PrimaryExpression	8		6137605	1					
ANR	6137627	ElseStatement	else		6137605	0					
ANR	6137628	CompoundStatement		6:8:67:67	6137605	0					
ANR	6137629	ExpressionStatement	len = s -> allocated_len * 2	887:2:17956:17982	6137605	0	True				
ANR	6137630	AssignmentExpression	len = s -> allocated_len * 2		6137605	0		=			
ANR	6137631	Identifier	len		6137605	0					
ANR	6137632	MultiplicativeExpression	s -> allocated_len * 2		6137605	1		*			
ANR	6137633	PtrMemberAccess	s -> allocated_len		6137605	0					
ANR	6137634	Identifier	s		6137605	0					
ANR	6137635	Identifier	allocated_len		6137605	1					
ANR	6137636	PrimaryExpression	2		6137605	1					
ANR	6137637	ExpressionStatement	"str = realloc ( s -> str , len * sizeof ( int ) )"	889:1:17988:18029	6137605	2	True				
ANR	6137638	AssignmentExpression	"str = realloc ( s -> str , len * sizeof ( int ) )"		6137605	0		=			
ANR	6137639	Identifier	str		6137605	0					
ANR	6137640	CallExpression	"realloc ( s -> str , len * sizeof ( int ) )"		6137605	1					
ANR	6137641	Callee	realloc		6137605	0					
ANR	6137642	Identifier	realloc		6137605	0					
ANR	6137643	ArgumentList	s -> str		6137605	1					
ANR	6137644	Argument	s -> str		6137605	0					
ANR	6137645	PtrMemberAccess	s -> str		6137605	0					
ANR	6137646	Identifier	s		6137605	0					
ANR	6137647	Identifier	str		6137605	1					
ANR	6137648	Argument	len * sizeof ( int )		6137605	1					
ANR	6137649	MultiplicativeExpression	len * sizeof ( int )		6137605	0		*			
ANR	6137650	Identifier	len		6137605	0					
ANR	6137651	SizeofExpression	sizeof ( int )		6137605	1					
ANR	6137652	Sizeof	sizeof		6137605	0					
ANR	6137653	SizeofOperand	int		6137605	1					
ANR	6137654	ExpressionStatement	s -> allocated_len = len	890:1:18032:18054	6137605	3	True				
ANR	6137655	AssignmentExpression	s -> allocated_len = len		6137605	0		=			
ANR	6137656	PtrMemberAccess	s -> allocated_len		6137605	0					
ANR	6137657	Identifier	s		6137605	0					
ANR	6137658	Identifier	allocated_len		6137605	1					
ANR	6137659	Identifier	len		6137605	1					
ANR	6137660	ExpressionStatement	s -> str = str	891:1:18057:18069	6137605	4	True				
ANR	6137661	AssignmentExpression	s -> str = str		6137605	0		=			
ANR	6137662	PtrMemberAccess	s -> str		6137605	0					
ANR	6137663	Identifier	s		6137605	0					
ANR	6137664	Identifier	str		6137605	1					
ANR	6137665	Identifier	str		6137605	1					
ANR	6137666	ReturnStatement	return str ;	892:1:18072:18082	6137605	5	True				
ANR	6137667	Identifier	str		6137605	0					
ANR	6137668	ReturnType	static int *		6137605	1					
ANR	6137669	Identifier	tok_str_realloc		6137605	2					
ANR	6137670	ParameterList	TokenString * s		6137605	3					
ANR	6137671	Parameter	TokenString * s	880:28:17868:17881	6137605	0	True				
ANR	6137672	ParameterType	TokenString *		6137605	0					
ANR	6137673	Identifier	s		6137605	1					
ANR	6137674	CFGEntryNode	ENTRY		6137605		True				
ANR	6137675	CFGExitNode	EXIT		6137605		True				
ANR	6137676	Symbol	str		6137605						
ANR	6137677	Symbol	s		6137605						
ANR	6137678	Symbol	len		6137605						
ANR	6137679	Symbol	s -> allocated_len		6137605						
ANR	6137680	Symbol	realloc		6137605						
ANR	6137681	Symbol	* s		6137605						
ANR	6137682	Symbol	s -> str		6137605						
ANR	6137683	Function	tok_str_add	895:0:18087:18280							
ANR	6137684	FunctionDef	"tok_str_add (TokenString * s , int t)"		6137683	0					
ANR	6137685	CompoundStatement		896:0:18135:18280	6137683	0					
ANR	6137686	IdentifierDeclStatement	"int len , * str ;"	897:1:18138:18151	6137683	0	True				
ANR	6137687	IdentifierDecl	len		6137683	0					
ANR	6137688	IdentifierDeclType	int		6137683	0					
ANR	6137689	Identifier	len		6137683	1					
ANR	6137690	IdentifierDecl	* str		6137683	1					
ANR	6137691	IdentifierDeclType	int *		6137683	0					
ANR	6137692	Identifier	str		6137683	1					
ANR	6137693	ExpressionStatement	len = s -> len	899:1:18155:18167	6137683	1	True				
ANR	6137694	AssignmentExpression	len = s -> len		6137683	0		=			
ANR	6137695	Identifier	len		6137683	0					
ANR	6137696	PtrMemberAccess	s -> len		6137683	1					
ANR	6137697	Identifier	s		6137683	0					
ANR	6137698	Identifier	len		6137683	1					
ANR	6137699	ExpressionStatement	str = s -> str	900:1:18170:18182	6137683	2	True				
ANR	6137700	AssignmentExpression	str = s -> str		6137683	0		=			
ANR	6137701	Identifier	str		6137683	0					
ANR	6137702	PtrMemberAccess	s -> str		6137683	1					
ANR	6137703	Identifier	s		6137683	0					
ANR	6137704	Identifier	str		6137683	1					
ANR	6137705	IfStatement	if ( len >= s -> allocated_len )		6137683	3					
ANR	6137706	Condition	len >= s -> allocated_len	901:5:18189:18211	6137683	0	True				
ANR	6137707	RelationalExpression	len >= s -> allocated_len		6137683	0		>=			
ANR	6137708	Identifier	len		6137683	0					
ANR	6137709	PtrMemberAccess	s -> allocated_len		6137683	1					
ANR	6137710	Identifier	s		6137683	0					
ANR	6137711	Identifier	allocated_len		6137683	1					
ANR	6137712	CompoundStatement		6:30:78:78	6137683	1					
ANR	6137713	ExpressionStatement	str = tok_str_realloc ( s )	902:2:18218:18243	6137683	0	True				
ANR	6137714	AssignmentExpression	str = tok_str_realloc ( s )		6137683	0		=			
ANR	6137715	Identifier	str		6137683	0					
ANR	6137716	CallExpression	tok_str_realloc ( s )		6137683	1					
ANR	6137717	Callee	tok_str_realloc		6137683	0					
ANR	6137718	Identifier	tok_str_realloc		6137683	0					
ANR	6137719	ArgumentList	s		6137683	1					
ANR	6137720	Argument	s		6137683	0					
ANR	6137721	Identifier	s		6137683	0					
ANR	6137722	ExpressionStatement	str [ len ++ ] = t	904:1:18249:18263	6137683	4	True				
ANR	6137723	AssignmentExpression	str [ len ++ ] = t		6137683	0		=			
ANR	6137724	ArrayIndexing	str [ len ++ ]		6137683	0					
ANR	6137725	Identifier	str		6137683	0					
ANR	6137726	PostIncDecOperationExpression	len ++		6137683	1					
ANR	6137727	Identifier	len		6137683	0					
ANR	6137728	IncDec	++		6137683	1					
ANR	6137729	Identifier	t		6137683	1					
ANR	6137730	ExpressionStatement	s -> len = len	905:1:18266:18278	6137683	5	True				
ANR	6137731	AssignmentExpression	s -> len = len		6137683	0		=			
ANR	6137732	PtrMemberAccess	s -> len		6137683	0					
ANR	6137733	Identifier	s		6137683	0					
ANR	6137734	Identifier	len		6137683	1					
ANR	6137735	Identifier	len		6137683	1					
ANR	6137736	ReturnType	ST_FUNC void		6137683	1					
ANR	6137737	Identifier	tok_str_add		6137683	2					
ANR	6137738	ParameterList	"TokenString * s , int t"		6137683	3					
ANR	6137739	Parameter	TokenString * s	895:25:18112:18125	6137683	0	True				
ANR	6137740	ParameterType	TokenString *		6137683	0					
ANR	6137741	Identifier	s		6137683	1					
ANR	6137742	Parameter	int t	895:41:18128:18132	6137683	1	True				
ANR	6137743	ParameterType	int		6137683	0					
ANR	6137744	Identifier	t		6137683	1					
ANR	6137745	CFGEntryNode	ENTRY		6137683		True				
ANR	6137746	CFGExitNode	EXIT		6137683		True				
ANR	6137747	Symbol	str		6137683						
ANR	6137748	Symbol	s -> len		6137683						
ANR	6137749	Symbol	s		6137683						
ANR	6137750	Symbol	t		6137683						
ANR	6137751	Symbol	len		6137683						
ANR	6137752	Symbol	s -> allocated_len		6137683						
ANR	6137753	Symbol	tok_str_realloc		6137683						
ANR	6137754	Symbol	* str		6137683						
ANR	6137755	Symbol	* s		6137683						
ANR	6137756	Symbol	s -> str		6137683						
ANR	6137757	Function	tok_str_add2	908:0:18283:19745							
ANR	6137758	FunctionDef	"tok_str_add2 (TokenString * s , int t , CValue * cv)"		6137757	0					
ANR	6137759	CompoundStatement		909:0:18343:19745	6137757	0					
ANR	6137760	IdentifierDeclStatement	"int len , * str ;"	910:1:18346:18359	6137757	0	True				
ANR	6137761	IdentifierDecl	len		6137757	0					
ANR	6137762	IdentifierDeclType	int		6137757	0					
ANR	6137763	Identifier	len		6137757	1					
ANR	6137764	IdentifierDecl	* str		6137757	1					
ANR	6137765	IdentifierDeclType	int *		6137757	0					
ANR	6137766	Identifier	str		6137757	1					
ANR	6137767	ExpressionStatement	len = s -> len	912:1:18363:18375	6137757	1	True				
ANR	6137768	AssignmentExpression	len = s -> len		6137757	0		=			
ANR	6137769	Identifier	len		6137757	0					
ANR	6137770	PtrMemberAccess	s -> len		6137757	1					
ANR	6137771	Identifier	s		6137757	0					
ANR	6137772	Identifier	len		6137757	1					
ANR	6137773	ExpressionStatement	str = s -> str	913:1:18378:18390	6137757	2	True				
ANR	6137774	AssignmentExpression	str = s -> str		6137757	0		=			
ANR	6137775	Identifier	str		6137757	0					
ANR	6137776	PtrMemberAccess	s -> str		6137757	1					
ANR	6137777	Identifier	s		6137757	0					
ANR	6137778	Identifier	str		6137757	1					
ANR	6137779	IfStatement	if ( len + TOK_MAX_SIZE > s -> allocated_len )		6137757	3					
ANR	6137780	Condition	len + TOK_MAX_SIZE > s -> allocated_len	916:5:18435:18471	6137757	0	True				
ANR	6137781	RelationalExpression	len + TOK_MAX_SIZE > s -> allocated_len		6137757	0		>			
ANR	6137782	AdditiveExpression	len + TOK_MAX_SIZE		6137757	0		+			
ANR	6137783	Identifier	len		6137757	0					
ANR	6137784	Identifier	TOK_MAX_SIZE		6137757	1					
ANR	6137785	PtrMemberAccess	s -> allocated_len		6137757	1					
ANR	6137786	Identifier	s		6137757	0					
ANR	6137787	Identifier	allocated_len		6137757	1					
ANR	6137788	CompoundStatement		8:44:130:130	6137757	1					
ANR	6137789	ExpressionStatement	str = tok_str_realloc ( s )	917:2:18478:18503	6137757	0	True				
ANR	6137790	AssignmentExpression	str = tok_str_realloc ( s )		6137757	0		=			
ANR	6137791	Identifier	str		6137757	0					
ANR	6137792	CallExpression	tok_str_realloc ( s )		6137757	1					
ANR	6137793	Callee	tok_str_realloc		6137757	0					
ANR	6137794	Identifier	tok_str_realloc		6137757	0					
ANR	6137795	ArgumentList	s		6137757	1					
ANR	6137796	Argument	s		6137757	0					
ANR	6137797	Identifier	s		6137757	0					
ANR	6137798	ExpressionStatement	str [ len ++ ] = t	919:1:18509:18523	6137757	4	True				
ANR	6137799	AssignmentExpression	str [ len ++ ] = t		6137757	0		=			
ANR	6137800	ArrayIndexing	str [ len ++ ]		6137757	0					
ANR	6137801	Identifier	str		6137757	0					
ANR	6137802	PostIncDecOperationExpression	len ++		6137757	1					
ANR	6137803	Identifier	len		6137757	0					
ANR	6137804	IncDec	++		6137757	1					
ANR	6137805	Identifier	t		6137757	1					
ANR	6137806	SwitchStatement	switch ( t )		6137757	5					
ANR	6137807	Condition	t	920:9:18534:18534	6137757	0	True				
ANR	6137808	Identifier	t		6137757	0					
ANR	6137809	CompoundStatement		12:12:193:193	6137757	1					
ANR	6137810	Label	case TOK_CINT :	921:1:18540:18553	6137757	0	True				
ANR	6137811	Identifier	TOK_CINT		6137757	0					
ANR	6137812	Label	case TOK_CUINT :	922:1:18556:18570	6137757	1	True				
ANR	6137813	Identifier	TOK_CUINT		6137757	0					
ANR	6137814	Label	case TOK_CCHAR :	923:1:18573:18587	6137757	2	True				
ANR	6137815	Identifier	TOK_CCHAR		6137757	0					
ANR	6137816	Label	case TOK_LCHAR :	924:1:18590:18604	6137757	3	True				
ANR	6137817	Identifier	TOK_LCHAR		6137757	0					
ANR	6137818	Label	case TOK_CFLOAT :	925:1:18607:18622	6137757	4	True				
ANR	6137819	Identifier	TOK_CFLOAT		6137757	0					
ANR	6137820	Label	case TOK_LINENUM :	926:1:18625:18641	6137757	5	True				
ANR	6137821	Identifier	TOK_LINENUM		6137757	0					
ANR	6137822	ExpressionStatement	str [ len ++ ] = cv -> tab [ 0 ]	927:2:18645:18668	6137757	6	True				
ANR	6137823	AssignmentExpression	str [ len ++ ] = cv -> tab [ 0 ]		6137757	0		=			
ANR	6137824	ArrayIndexing	str [ len ++ ]		6137757	0					
ANR	6137825	Identifier	str		6137757	0					
ANR	6137826	PostIncDecOperationExpression	len ++		6137757	1					
ANR	6137827	Identifier	len		6137757	0					
ANR	6137828	IncDec	++		6137757	1					
ANR	6137829	ArrayIndexing	cv -> tab [ 0 ]		6137757	1					
ANR	6137830	PtrMemberAccess	cv -> tab		6137757	0					
ANR	6137831	Identifier	cv		6137757	0					
ANR	6137832	Identifier	tab		6137757	1					
ANR	6137833	PrimaryExpression	0		6137757	1					
ANR	6137834	BreakStatement	break ;	928:2:18672:18677	6137757	7	True				
ANR	6137835	Label	case TOK_PPNUM :	929:1:18680:18694	6137757	8	True				
ANR	6137836	Identifier	TOK_PPNUM		6137757	0					
ANR	6137837	Label	case TOK_STR :	930:1:18697:18709	6137757	9	True				
ANR	6137838	Identifier	TOK_STR		6137757	0					
ANR	6137839	Label	case TOK_LSTR :	931:1:18712:18725	6137757	10	True				
ANR	6137840	Identifier	TOK_LSTR		6137757	0					
ANR	6137841	CompoundStatement		37:2:683:709	6137757	11					
ANR	6137842	IdentifierDeclStatement	int nb_words ;	933:2:18732:18744	6137757	0	True				
ANR	6137843	IdentifierDecl	nb_words		6137757	0					
ANR	6137844	IdentifierDeclType	int		6137757	0					
ANR	6137845	Identifier	nb_words		6137757	1					
ANR	6137846	ExpressionStatement	nb_words = ( sizeof ( CString ) + cv -> cstr -> size + 3 ) >> 2	935:2:18749:18803	6137757	1	True				
ANR	6137847	AssignmentExpression	nb_words = ( sizeof ( CString ) + cv -> cstr -> size + 3 ) >> 2		6137757	0		=			
ANR	6137848	Identifier	nb_words		6137757	0					
ANR	6137849	ShiftExpression	( sizeof ( CString ) + cv -> cstr -> size + 3 ) >> 2		6137757	1		>>			
ANR	6137850	AdditiveExpression	sizeof ( CString ) + cv -> cstr -> size + 3		6137757	0		+			
ANR	6137851	SizeofExpression	sizeof ( CString )		6137757	0					
ANR	6137852	Sizeof	sizeof		6137757	0					
ANR	6137853	SizeofOperand	CString		6137757	1					
ANR	6137854	AdditiveExpression	cv -> cstr -> size + 3		6137757	1		+			
ANR	6137855	PtrMemberAccess	cv -> cstr -> size		6137757	0					
ANR	6137856	PtrMemberAccess	cv -> cstr		6137757	0					
ANR	6137857	Identifier	cv		6137757	0					
ANR	6137858	Identifier	cstr		6137757	1					
ANR	6137859	Identifier	size		6137757	1					
ANR	6137860	PrimaryExpression	3		6137757	1					
ANR	6137861	PrimaryExpression	2		6137757	1					
ANR	6137862	WhileStatement	while ( ( len + nb_words ) > s -> allocated_len )		6137757	2					
ANR	6137863	Condition	( len + nb_words ) > s -> allocated_len	936:9:18814:18848	6137757	0	True				
ANR	6137864	RelationalExpression	( len + nb_words ) > s -> allocated_len		6137757	0		>			
ANR	6137865	AdditiveExpression	len + nb_words		6137757	0		+			
ANR	6137866	Identifier	len		6137757	0					
ANR	6137867	Identifier	nb_words		6137757	1					
ANR	6137868	PtrMemberAccess	s -> allocated_len		6137757	1					
ANR	6137869	Identifier	s		6137757	0					
ANR	6137870	Identifier	allocated_len		6137757	1					
ANR	6137871	CompoundStatement		28:46:507:507	6137757	1					
ANR	6137872	ExpressionStatement	str = tok_str_realloc ( s )	937:3:18856:18881	6137757	0	True				
ANR	6137873	AssignmentExpression	str = tok_str_realloc ( s )		6137757	0		=			
ANR	6137874	Identifier	str		6137757	0					
ANR	6137875	CallExpression	tok_str_realloc ( s )		6137757	1					
ANR	6137876	Callee	tok_str_realloc		6137757	0					
ANR	6137877	Identifier	tok_str_realloc		6137757	0					
ANR	6137878	ArgumentList	s		6137757	1					
ANR	6137879	Argument	s		6137757	0					
ANR	6137880	Identifier	s		6137757	0					
ANR	6137881	IdentifierDeclStatement	CString cstr = { 0 } ;	939:2:18889:18907	6137757	3	True				
ANR	6137882	IdentifierDecl	cstr = { 0 }		6137757	0					
ANR	6137883	IdentifierDeclType	CString		6137757	0					
ANR	6137884	Identifier	cstr		6137757	1					
ANR	6137885	AssignmentExpression	cstr = { 0 }		6137757	2		=			
ANR	6137886	Identifier	cstr		6137757	0					
ANR	6137887	InitializerList	0		6137757	1					
ANR	6137888	PrimaryExpression	0		6137757	0					
ANR	6137889	ExpressionStatement	cstr . data = NULL	940:2:18911:18927	6137757	4	True				
ANR	6137890	AssignmentExpression	cstr . data = NULL		6137757	0		=			
ANR	6137891	MemberAccess	cstr . data		6137757	0					
ANR	6137892	Identifier	cstr		6137757	0					
ANR	6137893	Identifier	data		6137757	1					
ANR	6137894	Identifier	NULL		6137757	1					
ANR	6137895	ExpressionStatement	cstr . size = cv -> cstr -> size	941:2:18931:18957	6137757	5	True				
ANR	6137896	AssignmentExpression	cstr . size = cv -> cstr -> size		6137757	0		=			
ANR	6137897	MemberAccess	cstr . size		6137757	0					
ANR	6137898	Identifier	cstr		6137757	0					
ANR	6137899	Identifier	size		6137757	1					
ANR	6137900	PtrMemberAccess	cv -> cstr -> size		6137757	1					
ANR	6137901	PtrMemberAccess	cv -> cstr		6137757	0					
ANR	6137902	Identifier	cv		6137757	0					
ANR	6137903	Identifier	cstr		6137757	1					
ANR	6137904	Identifier	size		6137757	1					
ANR	6137905	ExpressionStatement	cstr . data_allocated = NULL	942:2:18961:18987	6137757	6	True				
ANR	6137906	AssignmentExpression	cstr . data_allocated = NULL		6137757	0		=			
ANR	6137907	MemberAccess	cstr . data_allocated		6137757	0					
ANR	6137908	Identifier	cstr		6137757	0					
ANR	6137909	Identifier	data_allocated		6137757	1					
ANR	6137910	Identifier	NULL		6137757	1					
ANR	6137911	ExpressionStatement	cstr . size_allocated = cstr . size	943:2:18991:19022	6137757	7	True				
ANR	6137912	AssignmentExpression	cstr . size_allocated = cstr . size		6137757	0		=			
ANR	6137913	MemberAccess	cstr . size_allocated		6137757	0					
ANR	6137914	Identifier	cstr		6137757	0					
ANR	6137915	Identifier	size_allocated		6137757	1					
ANR	6137916	MemberAccess	cstr . size		6137757	1					
ANR	6137917	Identifier	cstr		6137757	0					
ANR	6137918	Identifier	size		6137757	1					
ANR	6137919	IdentifierDeclStatement	ut8 * p = ( ut8 * ) ( str + len ) ;	945:2:19027:19053	6137757	8	True				
ANR	6137920	IdentifierDecl	* p = ( ut8 * ) ( str + len )		6137757	0					
ANR	6137921	IdentifierDeclType	ut8 *		6137757	0					
ANR	6137922	Identifier	p		6137757	1					
ANR	6137923	AssignmentExpression	* p = ( ut8 * ) ( str + len )		6137757	2		=			
ANR	6137924	Identifier	p		6137757	0					
ANR	6137925	CastExpression	( ut8 * ) ( str + len )		6137757	1					
ANR	6137926	CastTarget	ut8 *		6137757	0					
ANR	6137927	AdditiveExpression	str + len		6137757	1		+			
ANR	6137928	Identifier	str		6137757	0					
ANR	6137929	Identifier	len		6137757	1					
ANR	6137930	ExpressionStatement	"memcpy ( p , & cstr , sizeof ( CString ) )"	946:2:19057:19092	6137757	9	True				
ANR	6137931	CallExpression	"memcpy ( p , & cstr , sizeof ( CString ) )"		6137757	0					
ANR	6137932	Callee	memcpy		6137757	0					
ANR	6137933	Identifier	memcpy		6137757	0					
ANR	6137934	ArgumentList	p		6137757	1					
ANR	6137935	Argument	p		6137757	0					
ANR	6137936	Identifier	p		6137757	0					
ANR	6137937	Argument	& cstr		6137757	1					
ANR	6137938	UnaryOperationExpression	& cstr		6137757	0					
ANR	6137939	UnaryOperator	&		6137757	0					
ANR	6137940	Identifier	cstr		6137757	1					
ANR	6137941	Argument	sizeof ( CString )		6137757	2					
ANR	6137942	SizeofExpression	sizeof ( CString )		6137757	0					
ANR	6137943	Sizeof	sizeof		6137757	0					
ANR	6137944	SizeofOperand	CString		6137757	1					
ANR	6137945	ExpressionStatement	"memcpy ( p + sizeof ( CString ) , cv -> cstr -> data , cstr . size )"	947:2:19096:19155	6137757	10	True				
ANR	6137946	CallExpression	"memcpy ( p + sizeof ( CString ) , cv -> cstr -> data , cstr . size )"		6137757	0					
ANR	6137947	Callee	memcpy		6137757	0					
ANR	6137948	Identifier	memcpy		6137757	0					
ANR	6137949	ArgumentList	p + sizeof ( CString )		6137757	1					
ANR	6137950	Argument	p + sizeof ( CString )		6137757	0					
ANR	6137951	AdditiveExpression	p + sizeof ( CString )		6137757	0		+			
ANR	6137952	Identifier	p		6137757	0					
ANR	6137953	SizeofExpression	sizeof ( CString )		6137757	1					
ANR	6137954	Sizeof	sizeof		6137757	0					
ANR	6137955	SizeofOperand	CString		6137757	1					
ANR	6137956	Argument	cv -> cstr -> data		6137757	1					
ANR	6137957	PtrMemberAccess	cv -> cstr -> data		6137757	0					
ANR	6137958	PtrMemberAccess	cv -> cstr		6137757	0					
ANR	6137959	Identifier	cv		6137757	0					
ANR	6137960	Identifier	cstr		6137757	1					
ANR	6137961	Identifier	data		6137757	1					
ANR	6137962	Argument	cstr . size		6137757	2					
ANR	6137963	MemberAccess	cstr . size		6137757	0					
ANR	6137964	Identifier	cstr		6137757	0					
ANR	6137965	Identifier	size		6137757	1					
ANR	6137966	ExpressionStatement	len += nb_words	949:2:19159:19174	6137757	11	True				
ANR	6137967	AssignmentExpression	len += nb_words		6137757	0		+=			
ANR	6137968	Identifier	len		6137757	0					
ANR	6137969	Identifier	nb_words		6137757	1					
ANR	6137970	BreakStatement	break ;	951:1:19180:19185	6137757	12	True				
ANR	6137971	Label	case TOK_CDOUBLE :	952:1:19188:19204	6137757	13	True				
ANR	6137972	Identifier	TOK_CDOUBLE		6137757	0					
ANR	6137973	Label	case TOK_CLLONG :	953:1:19207:19222	6137757	14	True				
ANR	6137974	Identifier	TOK_CLLONG		6137757	0					
ANR	6137975	Label	case TOK_CULLONG :	954:1:19225:19241	6137757	15	True				
ANR	6137976	Identifier	TOK_CULLONG		6137757	0					
ANR	6137977	Label	case TOK_CLDOUBLE :	956:1:19266:19283	6137757	16	True				
ANR	6137978	Identifier	TOK_CLDOUBLE		6137757	0					
ANR	6137979	ExpressionStatement	str [ len ++ ] = cv -> tab [ 0 ]	958:2:19294:19317	6137757	17	True				
ANR	6137980	AssignmentExpression	str [ len ++ ] = cv -> tab [ 0 ]		6137757	0		=			
ANR	6137981	ArrayIndexing	str [ len ++ ]		6137757	0					
ANR	6137982	Identifier	str		6137757	0					
ANR	6137983	PostIncDecOperationExpression	len ++		6137757	1					
ANR	6137984	Identifier	len		6137757	0					
ANR	6137985	IncDec	++		6137757	1					
ANR	6137986	ArrayIndexing	cv -> tab [ 0 ]		6137757	1					
ANR	6137987	PtrMemberAccess	cv -> tab		6137757	0					
ANR	6137988	Identifier	cv		6137757	0					
ANR	6137989	Identifier	tab		6137757	1					
ANR	6137990	PrimaryExpression	0		6137757	1					
ANR	6137991	ExpressionStatement	str [ len ++ ] = cv -> tab [ 1 ]	959:2:19321:19344	6137757	18	True				
ANR	6137992	AssignmentExpression	str [ len ++ ] = cv -> tab [ 1 ]		6137757	0		=			
ANR	6137993	ArrayIndexing	str [ len ++ ]		6137757	0					
ANR	6137994	Identifier	str		6137757	0					
ANR	6137995	PostIncDecOperationExpression	len ++		6137757	1					
ANR	6137996	Identifier	len		6137757	0					
ANR	6137997	IncDec	++		6137757	1					
ANR	6137998	ArrayIndexing	cv -> tab [ 1 ]		6137757	1					
ANR	6137999	PtrMemberAccess	cv -> tab		6137757	0					
ANR	6138000	Identifier	cv		6137757	0					
ANR	6138001	Identifier	tab		6137757	1					
ANR	6138002	PrimaryExpression	1		6137757	1					
ANR	6138003	BreakStatement	break ;	960:2:19348:19353	6137757	19	True				
ANR	6138004	Label	case TOK_CLDOUBLE :	962:1:19379:19396	6137757	20	True				
ANR	6138005	Identifier	TOK_CLDOUBLE		6137757	0					
ANR	6138006	ExpressionStatement	str [ len ++ ] = cv -> tab [ 0 ]	963:2:19400:19423	6137757	21	True				
ANR	6138007	AssignmentExpression	str [ len ++ ] = cv -> tab [ 0 ]		6137757	0		=			
ANR	6138008	ArrayIndexing	str [ len ++ ]		6137757	0					
ANR	6138009	Identifier	str		6137757	0					
ANR	6138010	PostIncDecOperationExpression	len ++		6137757	1					
ANR	6138011	Identifier	len		6137757	0					
ANR	6138012	IncDec	++		6137757	1					
ANR	6138013	ArrayIndexing	cv -> tab [ 0 ]		6137757	1					
ANR	6138014	PtrMemberAccess	cv -> tab		6137757	0					
ANR	6138015	Identifier	cv		6137757	0					
ANR	6138016	Identifier	tab		6137757	1					
ANR	6138017	PrimaryExpression	0		6137757	1					
ANR	6138018	ExpressionStatement	str [ len ++ ] = cv -> tab [ 1 ]	964:2:19427:19450	6137757	22	True				
ANR	6138019	AssignmentExpression	str [ len ++ ] = cv -> tab [ 1 ]		6137757	0		=			
ANR	6138020	ArrayIndexing	str [ len ++ ]		6137757	0					
ANR	6138021	Identifier	str		6137757	0					
ANR	6138022	PostIncDecOperationExpression	len ++		6137757	1					
ANR	6138023	Identifier	len		6137757	0					
ANR	6138024	IncDec	++		6137757	1					
ANR	6138025	ArrayIndexing	cv -> tab [ 1 ]		6137757	1					
ANR	6138026	PtrMemberAccess	cv -> tab		6137757	0					
ANR	6138027	Identifier	cv		6137757	0					
ANR	6138028	Identifier	tab		6137757	1					
ANR	6138029	PrimaryExpression	1		6137757	1					
ANR	6138030	ExpressionStatement	str [ len ++ ] = cv -> tab [ 2 ]	965:2:19454:19477	6137757	23	True				
ANR	6138031	AssignmentExpression	str [ len ++ ] = cv -> tab [ 2 ]		6137757	0		=			
ANR	6138032	ArrayIndexing	str [ len ++ ]		6137757	0					
ANR	6138033	Identifier	str		6137757	0					
ANR	6138034	PostIncDecOperationExpression	len ++		6137757	1					
ANR	6138035	Identifier	len		6137757	0					
ANR	6138036	IncDec	++		6137757	1					
ANR	6138037	ArrayIndexing	cv -> tab [ 2 ]		6137757	1					
ANR	6138038	PtrMemberAccess	cv -> tab		6137757	0					
ANR	6138039	Identifier	cv		6137757	0					
ANR	6138040	Identifier	tab		6137757	1					
ANR	6138041	PrimaryExpression	2		6137757	1					
ANR	6138042	BreakStatement	break ;	975:2:19701:19706	6137757	24	True				
ANR	6138043	Label	default :	976:1:19709:19716	6137757	25	True				
ANR	6138044	Identifier	default		6137757	0					
ANR	6138045	BreakStatement	break ;	977:2:19720:19725	6137757	26	True				
ANR	6138046	ExpressionStatement	s -> len = len	979:1:19731:19743	6137757	6	True				
ANR	6138047	AssignmentExpression	s -> len = len		6137757	0		=			
ANR	6138048	PtrMemberAccess	s -> len		6137757	0					
ANR	6138049	Identifier	s		6137757	0					
ANR	6138050	Identifier	len		6137757	1					
ANR	6138051	Identifier	len		6137757	1					
ANR	6138052	ReturnType	static void		6137757	1					
ANR	6138053	Identifier	tok_str_add2		6137757	2					
ANR	6138054	ParameterList	"TokenString * s , int t , CValue * cv"		6137757	3					
ANR	6138055	Parameter	TokenString * s	908:25:18308:18321	6137757	0	True				
ANR	6138056	ParameterType	TokenString *		6137757	0					
ANR	6138057	Identifier	s		6137757	1					
ANR	6138058	Parameter	int t	908:41:18324:18328	6137757	1	True				
ANR	6138059	ParameterType	int		6137757	0					
ANR	6138060	Identifier	t		6137757	1					
ANR	6138061	Parameter	CValue * cv	908:48:18331:18340	6137757	2	True				
ANR	6138062	ParameterType	CValue *		6137757	0					
ANR	6138063	Identifier	cv		6137757	1					
ANR	6138064	CFGEntryNode	ENTRY		6137757		True				
ANR	6138065	CFGExitNode	EXIT		6137757		True				
ANR	6138066	Symbol	cstr		6137757						
ANR	6138067	Symbol	s -> len		6137757						
ANR	6138068	Symbol	cv -> cstr -> data		6137757						
ANR	6138069	Symbol	TOK_MAX_SIZE		6137757						
ANR	6138070	Symbol	* cv -> cstr		6137757						
ANR	6138071	Symbol	cstr . size		6137757						
ANR	6138072	Symbol	len		6137757						
ANR	6138073	Symbol	tok_str_realloc		6137757						
ANR	6138074	Symbol	* str		6137757						
ANR	6138075	Symbol	* * cv		6137757						
ANR	6138076	Symbol	cv -> cstr		6137757						
ANR	6138077	Symbol	nb_words		6137757						
ANR	6138078	Symbol	cstr . data		6137757						
ANR	6138079	Symbol	& cstr		6137757						
ANR	6138080	Symbol	NULL		6137757						
ANR	6138081	Symbol	s -> allocated_len		6137757						
ANR	6138082	Symbol	cstr . size_allocated		6137757						
ANR	6138083	Symbol	cv -> cstr -> size		6137757						
ANR	6138084	Symbol	str		6137757						
ANR	6138085	Symbol	p		6137757						
ANR	6138086	Symbol	s		6137757						
ANR	6138087	Symbol	cv		6137757						
ANR	6138088	Symbol	t		6137757						
ANR	6138089	Symbol	* cv		6137757						
ANR	6138090	Symbol	cstr . data_allocated		6137757						
ANR	6138091	Symbol	* s		6137757						
ANR	6138092	Symbol	s -> str		6137757						
ANR	6138093	Symbol	* cv -> tab		6137757						
ANR	6138094	Symbol	cv -> tab		6137757						
ANR	6138095	Function	tok_str_add_tok	983:0:19802:20076							
ANR	6138096	FunctionDef	tok_str_add_tok (TokenString * s)		6138095	0					
ANR	6138097	CompoundStatement		984:0:19847:20076	6138095	0					
ANR	6138098	IdentifierDeclStatement	CValue cval ;	985:1:19850:19861	6138095	0	True				
ANR	6138099	IdentifierDecl	cval		6138095	0					
ANR	6138100	IdentifierDeclType	CValue		6138095	0					
ANR	6138101	Identifier	cval		6138095	1					
ANR	6138102	IfStatement	if ( file -> line_num != s -> last_line_num )		6138095	1					
ANR	6138103	Condition	file -> line_num != s -> last_line_num	988:5:19898:19931	6138095	0	True				
ANR	6138104	EqualityExpression	file -> line_num != s -> last_line_num		6138095	0		!=			
ANR	6138105	PtrMemberAccess	file -> line_num		6138095	0					
ANR	6138106	Identifier	file		6138095	0					
ANR	6138107	Identifier	line_num		6138095	1					
ANR	6138108	PtrMemberAccess	s -> last_line_num		6138095	1					
ANR	6138109	Identifier	s		6138095	0					
ANR	6138110	Identifier	last_line_num		6138095	1					
ANR	6138111	CompoundStatement		5:41:86:86	6138095	1					
ANR	6138112	ExpressionStatement	s -> last_line_num = file -> line_num	989:2:19938:19971	6138095	0	True				
ANR	6138113	AssignmentExpression	s -> last_line_num = file -> line_num		6138095	0		=			
ANR	6138114	PtrMemberAccess	s -> last_line_num		6138095	0					
ANR	6138115	Identifier	s		6138095	0					
ANR	6138116	Identifier	last_line_num		6138095	1					
ANR	6138117	PtrMemberAccess	file -> line_num		6138095	1					
ANR	6138118	Identifier	file		6138095	0					
ANR	6138119	Identifier	line_num		6138095	1					
ANR	6138120	ExpressionStatement	cval . i = s -> last_line_num	990:2:19975:20000	6138095	1	True				
ANR	6138121	AssignmentExpression	cval . i = s -> last_line_num		6138095	0		=			
ANR	6138122	MemberAccess	cval . i		6138095	0					
ANR	6138123	Identifier	cval		6138095	0					
ANR	6138124	Identifier	i		6138095	1					
ANR	6138125	PtrMemberAccess	s -> last_line_num		6138095	1					
ANR	6138126	Identifier	s		6138095	0					
ANR	6138127	Identifier	last_line_num		6138095	1					
ANR	6138128	ExpressionStatement	"tok_str_add2 ( s , TOK_LINENUM , & cval )"	991:2:20004:20040	6138095	2	True				
ANR	6138129	CallExpression	"tok_str_add2 ( s , TOK_LINENUM , & cval )"		6138095	0					
ANR	6138130	Callee	tok_str_add2		6138095	0					
ANR	6138131	Identifier	tok_str_add2		6138095	0					
ANR	6138132	ArgumentList	s		6138095	1					
ANR	6138133	Argument	s		6138095	0					
ANR	6138134	Identifier	s		6138095	0					
ANR	6138135	Argument	TOK_LINENUM		6138095	1					
ANR	6138136	Identifier	TOK_LINENUM		6138095	0					
ANR	6138137	Argument	& cval		6138095	2					
ANR	6138138	UnaryOperationExpression	& cval		6138095	0					
ANR	6138139	UnaryOperator	&		6138095	0					
ANR	6138140	Identifier	cval		6138095	1					
ANR	6138141	ExpressionStatement	"tok_str_add2 ( s , tok , & tokc )"	993:1:20046:20074	6138095	2	True				
ANR	6138142	CallExpression	"tok_str_add2 ( s , tok , & tokc )"		6138095	0					
ANR	6138143	Callee	tok_str_add2		6138095	0					
ANR	6138144	Identifier	tok_str_add2		6138095	0					
ANR	6138145	ArgumentList	s		6138095	1					
ANR	6138146	Argument	s		6138095	0					
ANR	6138147	Identifier	s		6138095	0					
ANR	6138148	Argument	tok		6138095	1					
ANR	6138149	Identifier	tok		6138095	0					
ANR	6138150	Argument	& tokc		6138095	2					
ANR	6138151	UnaryOperationExpression	& tokc		6138095	0					
ANR	6138152	UnaryOperator	&		6138095	0					
ANR	6138153	Identifier	tokc		6138095	1					
ANR	6138154	ReturnType	ST_FUNC void		6138095	1					
ANR	6138155	Identifier	tok_str_add_tok		6138095	2					
ANR	6138156	ParameterList	TokenString * s		6138095	3					
ANR	6138157	Parameter	TokenString * s	983:29:19831:19844	6138095	0	True				
ANR	6138158	ParameterType	TokenString *		6138095	0					
ANR	6138159	Identifier	s		6138095	1					
ANR	6138160	CFGEntryNode	ENTRY		6138095		True				
ANR	6138161	CFGExitNode	EXIT		6138095		True				
ANR	6138162	Symbol	cval		6138095						
ANR	6138163	Symbol	s -> last_line_num		6138095						
ANR	6138164	Symbol	& cval		6138095						
ANR	6138165	Symbol	tok		6138095						
ANR	6138166	Symbol	s		6138095						
ANR	6138167	Symbol	file		6138095						
ANR	6138168	Symbol	TOK_LINENUM		6138095						
ANR	6138169	Symbol	file -> line_num		6138095						
ANR	6138170	Symbol	* file		6138095						
ANR	6138171	Symbol	& tokc		6138095						
ANR	6138172	Symbol	* s		6138095						
ANR	6138173	Symbol	cval . i		6138095						
ANR	6138174	Function	TOK_GET	998:0:20206:20996							
ANR	6138175	FunctionDef	"TOK_GET (int * t , const int * * pp , CValue * cv)"		6138174	0					
ANR	6138176	CompoundStatement		999:0:20269:20996	6138174	0					
ANR	6138177	IdentifierDeclStatement	const int * p = * pp ;	1000:1:20272:20290	6138174	0	True				
ANR	6138178	IdentifierDecl	* p = * pp		6138174	0					
ANR	6138179	IdentifierDeclType	const int *		6138174	0					
ANR	6138180	Identifier	p		6138174	1					
ANR	6138181	AssignmentExpression	* p = * pp		6138174	2		=			
ANR	6138182	Identifier	p		6138174	0					
ANR	6138183	UnaryOperationExpression	* pp		6138174	1					
ANR	6138184	UnaryOperator	*		6138174	0					
ANR	6138185	Identifier	pp		6138174	1					
ANR	6138186	IdentifierDeclStatement	"int n , * tab ;"	1001:1:20293:20304	6138174	1	True				
ANR	6138187	IdentifierDecl	n		6138174	0					
ANR	6138188	IdentifierDeclType	int		6138174	0					
ANR	6138189	Identifier	n		6138174	1					
ANR	6138190	IdentifierDecl	* tab		6138174	1					
ANR	6138191	IdentifierDeclType	int *		6138174	0					
ANR	6138192	Identifier	tab		6138174	1					
ANR	6138193	ExpressionStatement	tab = cv -> tab	1003:1:20308:20321	6138174	2	True				
ANR	6138194	AssignmentExpression	tab = cv -> tab		6138174	0		=			
ANR	6138195	Identifier	tab		6138174	0					
ANR	6138196	PtrMemberAccess	cv -> tab		6138174	1					
ANR	6138197	Identifier	cv		6138174	0					
ANR	6138198	Identifier	tab		6138174	1					
ANR	6138199	SwitchStatement	switch ( * t = * p ++ )		6138174	3					
ANR	6138200	Condition	* t = * p ++	1004:9:20332:20340	6138174	0	True				
ANR	6138201	AssignmentExpression	* t = * p ++		6138174	0		=			
ANR	6138202	UnaryOperationExpression	* t		6138174	0					
ANR	6138203	UnaryOperator	*		6138174	0					
ANR	6138204	Identifier	t		6138174	1					
ANR	6138205	UnaryOperationExpression	* p ++		6138174	1					
ANR	6138206	UnaryOperator	*		6138174	0					
ANR	6138207	PostIncDecOperationExpression	p ++		6138174	1					
ANR	6138208	Identifier	p		6138174	0					
ANR	6138209	IncDec	++		6138174	1					
ANR	6138210	CompoundStatement		6:20:73:73	6138174	1					
ANR	6138211	Label	case TOK_CINT :	1005:1:20346:20359	6138174	0	True				
ANR	6138212	Identifier	TOK_CINT		6138174	0					
ANR	6138213	Label	case TOK_CUINT :	1006:1:20362:20376	6138174	1	True				
ANR	6138214	Identifier	TOK_CUINT		6138174	0					
ANR	6138215	Label	case TOK_CCHAR :	1007:1:20379:20393	6138174	2	True				
ANR	6138216	Identifier	TOK_CCHAR		6138174	0					
ANR	6138217	Label	case TOK_LCHAR :	1008:1:20396:20410	6138174	3	True				
ANR	6138218	Identifier	TOK_LCHAR		6138174	0					
ANR	6138219	Label	case TOK_CFLOAT :	1009:1:20413:20428	6138174	4	True				
ANR	6138220	Identifier	TOK_CFLOAT		6138174	0					
ANR	6138221	Label	case TOK_LINENUM :	1010:1:20431:20447	6138174	5	True				
ANR	6138222	Identifier	TOK_LINENUM		6138174	0					
ANR	6138223	ExpressionStatement	tab [ 0 ] = * p ++	1011:2:20451:20464	6138174	6	True				
ANR	6138224	AssignmentExpression	tab [ 0 ] = * p ++		6138174	0		=			
ANR	6138225	ArrayIndexing	tab [ 0 ]		6138174	0					
ANR	6138226	Identifier	tab		6138174	0					
ANR	6138227	PrimaryExpression	0		6138174	1					
ANR	6138228	UnaryOperationExpression	* p ++		6138174	1					
ANR	6138229	UnaryOperator	*		6138174	0					
ANR	6138230	PostIncDecOperationExpression	p ++		6138174	1					
ANR	6138231	Identifier	p		6138174	0					
ANR	6138232	IncDec	++		6138174	1					
ANR	6138233	BreakStatement	break ;	1012:2:20468:20473	6138174	7	True				
ANR	6138234	Label	case TOK_STR :	1013:1:20476:20488	6138174	8	True				
ANR	6138235	Identifier	TOK_STR		6138174	0					
ANR	6138236	Label	case TOK_LSTR :	1014:1:20491:20504	6138174	9	True				
ANR	6138237	Identifier	TOK_LSTR		6138174	0					
ANR	6138238	Label	case TOK_PPNUM :	1015:1:20507:20521	6138174	10	True				
ANR	6138239	Identifier	TOK_PPNUM		6138174	0					
ANR	6138240	ExpressionStatement	cv -> cstr = ( CString * ) p	1016:2:20525:20549	6138174	11	True				
ANR	6138241	AssignmentExpression	cv -> cstr = ( CString * ) p		6138174	0		=			
ANR	6138242	PtrMemberAccess	cv -> cstr		6138174	0					
ANR	6138243	Identifier	cv		6138174	0					
ANR	6138244	Identifier	cstr		6138174	1					
ANR	6138245	CastExpression	( CString * ) p		6138174	1					
ANR	6138246	CastTarget	CString *		6138174	0					
ANR	6138247	Identifier	p		6138174	1					
ANR	6138248	ExpressionStatement	cv -> cstr -> data = ( char * ) p + sizeof ( CString )	1017:2:20553:20598	6138174	12	True				
ANR	6138249	AssignmentExpression	cv -> cstr -> data = ( char * ) p + sizeof ( CString )		6138174	0		=			
ANR	6138250	PtrMemberAccess	cv -> cstr -> data		6138174	0					
ANR	6138251	PtrMemberAccess	cv -> cstr		6138174	0					
ANR	6138252	Identifier	cv		6138174	0					
ANR	6138253	Identifier	cstr		6138174	1					
ANR	6138254	Identifier	data		6138174	1					
ANR	6138255	AdditiveExpression	( char * ) p + sizeof ( CString )		6138174	1		+			
ANR	6138256	CastExpression	( char * ) p		6138174	0					
ANR	6138257	CastTarget	char *		6138174	0					
ANR	6138258	Identifier	p		6138174	1					
ANR	6138259	SizeofExpression	sizeof ( CString )		6138174	1					
ANR	6138260	Sizeof	sizeof		6138174	0					
ANR	6138261	SizeofOperand	CString		6138174	1					
ANR	6138262	ExpressionStatement	p += ( sizeof ( CString ) + cv -> cstr -> size + 3 ) >> 2	1018:2:20602:20650	6138174	13	True				
ANR	6138263	AssignmentExpression	p += ( sizeof ( CString ) + cv -> cstr -> size + 3 ) >> 2		6138174	0		+=			
ANR	6138264	Identifier	p		6138174	0					
ANR	6138265	ShiftExpression	( sizeof ( CString ) + cv -> cstr -> size + 3 ) >> 2		6138174	1		>>			
ANR	6138266	AdditiveExpression	sizeof ( CString ) + cv -> cstr -> size + 3		6138174	0		+			
ANR	6138267	SizeofExpression	sizeof ( CString )		6138174	0					
ANR	6138268	Sizeof	sizeof		6138174	0					
ANR	6138269	SizeofOperand	CString		6138174	1					
ANR	6138270	AdditiveExpression	cv -> cstr -> size + 3		6138174	1		+			
ANR	6138271	PtrMemberAccess	cv -> cstr -> size		6138174	0					
ANR	6138272	PtrMemberAccess	cv -> cstr		6138174	0					
ANR	6138273	Identifier	cv		6138174	0					
ANR	6138274	Identifier	cstr		6138174	1					
ANR	6138275	Identifier	size		6138174	1					
ANR	6138276	PrimaryExpression	3		6138174	1					
ANR	6138277	PrimaryExpression	2		6138174	1					
ANR	6138278	BreakStatement	break ;	1019:2:20654:20659	6138174	14	True				
ANR	6138279	Label	case TOK_CDOUBLE :	1020:1:20662:20678	6138174	15	True				
ANR	6138280	Identifier	TOK_CDOUBLE		6138174	0					
ANR	6138281	Label	case TOK_CLLONG :	1021:1:20681:20696	6138174	16	True				
ANR	6138282	Identifier	TOK_CLLONG		6138174	0					
ANR	6138283	Label	case TOK_CULLONG :	1022:1:20699:20715	6138174	17	True				
ANR	6138284	Identifier	TOK_CULLONG		6138174	0					
ANR	6138285	ExpressionStatement	n = 2	1023:2:20719:20724	6138174	18	True				
ANR	6138286	AssignmentExpression	n = 2		6138174	0		=			
ANR	6138287	Identifier	n		6138174	0					
ANR	6138288	PrimaryExpression	2		6138174	1					
ANR	6138289	GotoStatement	goto copy ;	1024:2:20728:20737	6138174	19	True				
ANR	6138290	Identifier	copy		6138174	0					
ANR	6138291	Label	case TOK_CLDOUBLE :	1025:1:20740:20757	6138174	20	True				
ANR	6138292	Identifier	TOK_CLDOUBLE		6138174	0					
ANR	6138293	ExpressionStatement	n = 4	1027:2:20784:20789	6138174	21	True				
ANR	6138294	AssignmentExpression	n = 4		6138174	0		=			
ANR	6138295	Identifier	n		6138174	0					
ANR	6138296	PrimaryExpression	4		6138174	1					
ANR	6138297	Label	copy :	1035:0:20907:20911	6138174	22	True				
ANR	6138298	Identifier	copy		6138174	0					
ANR	6138299	DoStatement	do		6138174	23					
ANR	6138300	CompoundStatement		38:5:648:648	6138174	0					
ANR	6138301	ExpressionStatement	* tab ++ = * p ++	1037:3:20923:20936	6138174	0	True				
ANR	6138302	AssignmentExpression	* tab ++ = * p ++		6138174	0		=			
ANR	6138303	UnaryOperationExpression	* tab ++		6138174	0					
ANR	6138304	UnaryOperator	*		6138174	0					
ANR	6138305	PostIncDecOperationExpression	tab ++		6138174	1					
ANR	6138306	Identifier	tab		6138174	0					
ANR	6138307	IncDec	++		6138174	1					
ANR	6138308	UnaryOperationExpression	* p ++		6138174	1					
ANR	6138309	UnaryOperator	*		6138174	0					
ANR	6138310	PostIncDecOperationExpression	p ++		6138174	1					
ANR	6138311	Identifier	p		6138174	0					
ANR	6138312	IncDec	++		6138174	1					
ANR	6138313	Condition	-- n	1038:11:20949:20951	6138174	1	True				
ANR	6138314	UnaryExpression	-- n		6138174	0					
ANR	6138315	IncDec	--		6138174	0					
ANR	6138316	Identifier	n		6138174	1					
ANR	6138317	BreakStatement	break ;	1039:2:20957:20962	6138174	24	True				
ANR	6138318	Label	default :	1040:1:20965:20972	6138174	25	True				
ANR	6138319	Identifier	default		6138174	0					
ANR	6138320	BreakStatement	break ;	1041:2:20976:20981	6138174	26	True				
ANR	6138321	ExpressionStatement	* pp = p	1043:1:20987:20994	6138174	4	True				
ANR	6138322	AssignmentExpression	* pp = p		6138174	0		=			
ANR	6138323	UnaryOperationExpression	* pp		6138174	0					
ANR	6138324	UnaryOperator	*		6138174	0					
ANR	6138325	Identifier	pp		6138174	1					
ANR	6138326	Identifier	p		6138174	1					
ANR	6138327	ReturnType	static inline void		6138174	1					
ANR	6138328	Identifier	TOK_GET		6138174	2					
ANR	6138329	ParameterList	"int * t , const int * * pp , CValue * cv"		6138174	3					
ANR	6138330	Parameter	int * t	998:27:20233:20238	6138174	0	True				
ANR	6138331	ParameterType	int *		6138174	0					
ANR	6138332	Identifier	t		6138174	1					
ANR	6138333	Parameter	const int * * pp	998:35:20241:20254	6138174	1	True				
ANR	6138334	ParameterType	const int * *		6138174	0					
ANR	6138335	Identifier	pp		6138174	1					
ANR	6138336	Parameter	CValue * cv	998:51:20257:20266	6138174	2	True				
ANR	6138337	ParameterType	CValue *		6138174	0					
ANR	6138338	Identifier	cv		6138174	1					
ANR	6138339	CFGEntryNode	ENTRY		6138174		True				
ANR	6138340	CFGExitNode	EXIT		6138174		True				
ANR	6138341	Symbol	pp		6138174						
ANR	6138342	Symbol	cv -> cstr -> data		6138174						
ANR	6138343	Symbol	* pp		6138174						
ANR	6138344	Symbol	* p ++		6138174						
ANR	6138345	Symbol	n		6138174						
ANR	6138346	Symbol	* cv -> cstr		6138174						
ANR	6138347	Symbol	cv -> cstr -> size		6138174						
ANR	6138348	Symbol	* tab ++		6138174						
ANR	6138349	Symbol	p		6138174						
ANR	6138350	Symbol	cv		6138174						
ANR	6138351	Symbol	t		6138174						
ANR	6138352	Symbol	tab		6138174						
ANR	6138353	Symbol	* cv		6138174						
ANR	6138354	Symbol	* * cv		6138174						
ANR	6138355	Symbol	cv -> tab		6138174						
ANR	6138356	Symbol	* t		6138174						
ANR	6138357	Symbol	cv -> cstr		6138174						
ANR	6138358	Symbol	* tab		6138174						
ANR	6138359	Function	macro_is_equal	1046:0:20999:21313							
ANR	6138360	FunctionDef	"macro_is_equal (const int * a , const int * b)"		6138359	0					
ANR	6138361	CompoundStatement		1047:0:21053:21313	6138359	0					
ANR	6138362	IdentifierDeclStatement	char buf [ STRING_MAX_SIZE + 1 ] ;	1048:1:21056:21085	6138359	0	True				
ANR	6138363	IdentifierDecl	buf [ STRING_MAX_SIZE + 1 ]		6138359	0					
ANR	6138364	IdentifierDeclType	char [ STRING_MAX_SIZE + 1 ]		6138359	0					
ANR	6138365	Identifier	buf		6138359	1					
ANR	6138366	AdditiveExpression	STRING_MAX_SIZE + 1		6138359	2		+			
ANR	6138367	Identifier	STRING_MAX_SIZE		6138359	0					
ANR	6138368	PrimaryExpression	1		6138359	1					
ANR	6138369	IdentifierDeclStatement	CValue cv ;	1049:1:21088:21097	6138359	1	True				
ANR	6138370	IdentifierDecl	cv		6138359	0					
ANR	6138371	IdentifierDeclType	CValue		6138359	0					
ANR	6138372	Identifier	cv		6138359	1					
ANR	6138373	IdentifierDeclStatement	int t ;	1050:1:21100:21105	6138359	2	True				
ANR	6138374	IdentifierDecl	t		6138359	0					
ANR	6138375	IdentifierDeclType	int		6138359	0					
ANR	6138376	Identifier	t		6138359	1					
ANR	6138377	WhileStatement	while ( * a && * b )		6138359	3					
ANR	6138378	Condition	* a && * b	1051:8:21115:21122	6138359	0	True				
ANR	6138379	AndExpression	* a && * b		6138359	0		&&			
ANR	6138380	UnaryOperationExpression	* a		6138359	0					
ANR	6138381	UnaryOperator	*		6138359	0					
ANR	6138382	Identifier	a		6138359	1					
ANR	6138383	UnaryOperationExpression	* b		6138359	1					
ANR	6138384	UnaryOperator	*		6138359	0					
ANR	6138385	Identifier	b		6138359	1					
ANR	6138386	CompoundStatement		5:18:71:71	6138359	1					
ANR	6138387	ExpressionStatement	"TOK_GET ( & t , & a , & cv )"	1052:2:21129:21150	6138359	0	True				
ANR	6138388	CallExpression	"TOK_GET ( & t , & a , & cv )"		6138359	0					
ANR	6138389	Callee	TOK_GET		6138359	0					
ANR	6138390	Identifier	TOK_GET		6138359	0					
ANR	6138391	ArgumentList	& t		6138359	1					
ANR	6138392	Argument	& t		6138359	0					
ANR	6138393	UnaryOperationExpression	& t		6138359	0					
ANR	6138394	UnaryOperator	&		6138359	0					
ANR	6138395	Identifier	t		6138359	1					
ANR	6138396	Argument	& a		6138359	1					
ANR	6138397	UnaryOperationExpression	& a		6138359	0					
ANR	6138398	UnaryOperator	&		6138359	0					
ANR	6138399	Identifier	a		6138359	1					
ANR	6138400	Argument	& cv		6138359	2					
ANR	6138401	UnaryOperationExpression	& cv		6138359	0					
ANR	6138402	UnaryOperator	&		6138359	0					
ANR	6138403	Identifier	cv		6138359	1					
ANR	6138404	ExpressionStatement	"pstrcpy ( buf , sizeof buf , get_tok_str ( t , & cv ) )"	1053:2:21154:21201	6138359	1	True				
ANR	6138405	CallExpression	"pstrcpy ( buf , sizeof buf , get_tok_str ( t , & cv ) )"		6138359	0					
ANR	6138406	Callee	pstrcpy		6138359	0					
ANR	6138407	Identifier	pstrcpy		6138359	0					
ANR	6138408	ArgumentList	buf		6138359	1					
ANR	6138409	Argument	buf		6138359	0					
ANR	6138410	Identifier	buf		6138359	0					
ANR	6138411	Argument	sizeof buf		6138359	1					
ANR	6138412	SizeofExpression	sizeof buf		6138359	0					
ANR	6138413	Sizeof	sizeof		6138359	0					
ANR	6138414	Identifier	buf		6138359	1					
ANR	6138415	Argument	"get_tok_str ( t , & cv )"		6138359	2					
ANR	6138416	CallExpression	"get_tok_str ( t , & cv )"		6138359	0					
ANR	6138417	Callee	get_tok_str		6138359	0					
ANR	6138418	Identifier	get_tok_str		6138359	0					
ANR	6138419	ArgumentList	t		6138359	1					
ANR	6138420	Argument	t		6138359	0					
ANR	6138421	Identifier	t		6138359	0					
ANR	6138422	Argument	& cv		6138359	1					
ANR	6138423	UnaryOperationExpression	& cv		6138359	0					
ANR	6138424	UnaryOperator	&		6138359	0					
ANR	6138425	Identifier	cv		6138359	1					
ANR	6138426	ExpressionStatement	"TOK_GET ( & t , & b , & cv )"	1054:2:21205:21226	6138359	2	True				
ANR	6138427	CallExpression	"TOK_GET ( & t , & b , & cv )"		6138359	0					
ANR	6138428	Callee	TOK_GET		6138359	0					
ANR	6138429	Identifier	TOK_GET		6138359	0					
ANR	6138430	ArgumentList	& t		6138359	1					
ANR	6138431	Argument	& t		6138359	0					
ANR	6138432	UnaryOperationExpression	& t		6138359	0					
ANR	6138433	UnaryOperator	&		6138359	0					
ANR	6138434	Identifier	t		6138359	1					
ANR	6138435	Argument	& b		6138359	1					
ANR	6138436	UnaryOperationExpression	& b		6138359	0					
ANR	6138437	UnaryOperator	&		6138359	0					
ANR	6138438	Identifier	b		6138359	1					
ANR	6138439	Argument	& cv		6138359	2					
ANR	6138440	UnaryOperationExpression	& cv		6138359	0					
ANR	6138441	UnaryOperator	&		6138359	0					
ANR	6138442	Identifier	cv		6138359	1					
ANR	6138443	IfStatement	"if ( strcmp ( buf , get_tok_str ( t , & cv ) ) )"		6138359	3					
ANR	6138444	Condition	"strcmp ( buf , get_tok_str ( t , & cv ) )"	1055:6:21234:21267	6138359	0	True				
ANR	6138445	CallExpression	"strcmp ( buf , get_tok_str ( t , & cv ) )"		6138359	0					
ANR	6138446	Callee	strcmp		6138359	0					
ANR	6138447	Identifier	strcmp		6138359	0					
ANR	6138448	ArgumentList	buf		6138359	1					
ANR	6138449	Argument	buf		6138359	0					
ANR	6138450	Identifier	buf		6138359	0					
ANR	6138451	Argument	"get_tok_str ( t , & cv )"		6138359	1					
ANR	6138452	CallExpression	"get_tok_str ( t , & cv )"		6138359	0					
ANR	6138453	Callee	get_tok_str		6138359	0					
ANR	6138454	Identifier	get_tok_str		6138359	0					
ANR	6138455	ArgumentList	t		6138359	1					
ANR	6138456	Argument	t		6138359	0					
ANR	6138457	Identifier	t		6138359	0					
ANR	6138458	Argument	& cv		6138359	1					
ANR	6138459	UnaryOperationExpression	& cv		6138359	0					
ANR	6138460	UnaryOperator	&		6138359	0					
ANR	6138461	Identifier	cv		6138359	1					
ANR	6138462	CompoundStatement		9:42:216:216	6138359	1					
ANR	6138463	ReturnStatement	return 0 ;	1056:3:21275:21283	6138359	0	True				
ANR	6138464	PrimaryExpression	0		6138359	0					
ANR	6138465	ReturnStatement	return ! ( * a || * b ) ;	1059:1:21293:21311	6138359	4	True				
ANR	6138466	UnaryOperationExpression	! ( * a || * b )		6138359	0					
ANR	6138467	UnaryOperator	!		6138359	0					
ANR	6138468	OrExpression	* a || * b		6138359	1		||			
ANR	6138469	UnaryOperationExpression	* a		6138359	0					
ANR	6138470	UnaryOperator	*		6138359	0					
ANR	6138471	Identifier	a		6138359	1					
ANR	6138472	UnaryOperationExpression	* b		6138359	1					
ANR	6138473	UnaryOperator	*		6138359	0					
ANR	6138474	Identifier	b		6138359	1					
ANR	6138475	ReturnType	static int		6138359	1					
ANR	6138476	Identifier	macro_is_equal		6138359	2					
ANR	6138477	ParameterList	"const int * a , const int * b"		6138359	3					
ANR	6138478	Parameter	const int * a	1046:26:21025:21036	6138359	0	True				
ANR	6138479	ParameterType	const int *		6138359	0					
ANR	6138480	Identifier	a		6138359	1					
ANR	6138481	Parameter	const int * b	1046:40:21039:21050	6138359	1	True				
ANR	6138482	ParameterType	const int *		6138359	0					
ANR	6138483	Identifier	b		6138359	1					
ANR	6138484	CFGEntryNode	ENTRY		6138359		True				
ANR	6138485	CFGExitNode	EXIT		6138359		True				
ANR	6138486	Symbol	strcmp		6138359						
ANR	6138487	Symbol	a		6138359						
ANR	6138488	Symbol	b		6138359						
ANR	6138489	Symbol	get_tok_str		6138359						
ANR	6138490	Symbol	& a		6138359						
ANR	6138491	Symbol	& b		6138359						
ANR	6138492	Symbol	* a		6138359						
ANR	6138493	Symbol	* b		6138359						
ANR	6138494	Symbol	buf		6138359						
ANR	6138495	Symbol	cv		6138359						
ANR	6138496	Symbol	t		6138359						
ANR	6138497	Symbol	& t		6138359						
ANR	6138498	Symbol	& cv		6138359						
ANR	6138499	Function	define_push	1063:0:21339:21728							
ANR	6138500	FunctionDef	"define_push (int v , int macro_type , int * str , Sym * first_arg)"		6138499	0					
ANR	6138501	CompoundStatement		1064:0:21413:21728	6138499	0					
ANR	6138502	IdentifierDeclStatement	Sym * s ;	1065:1:21416:21422	6138499	0	True				
ANR	6138503	IdentifierDecl	* s		6138499	0					
ANR	6138504	IdentifierDeclType	Sym *		6138499	0					
ANR	6138505	Identifier	s		6138499	1					
ANR	6138506	ExpressionStatement	s = define_find ( v )	1067:1:21426:21445	6138499	1	True				
ANR	6138507	AssignmentExpression	s = define_find ( v )		6138499	0		=			
ANR	6138508	Identifier	s		6138499	0					
ANR	6138509	CallExpression	define_find ( v )		6138499	1					
ANR	6138510	Callee	define_find		6138499	0					
ANR	6138511	Identifier	define_find		6138499	0					
ANR	6138512	ArgumentList	v		6138499	1					
ANR	6138513	Argument	v		6138499	0					
ANR	6138514	Identifier	v		6138499	0					
ANR	6138515	IfStatement	"if ( s && ! macro_is_equal ( s -> d , str ) )"		6138499	2					
ANR	6138516	Condition	"s && ! macro_is_equal ( s -> d , str )"	1068:5:21452:21483	6138499	0	True				
ANR	6138517	AndExpression	"s && ! macro_is_equal ( s -> d , str )"		6138499	0		&&			
ANR	6138518	Identifier	s		6138499	0					
ANR	6138519	UnaryOperationExpression	"! macro_is_equal ( s -> d , str )"		6138499	1					
ANR	6138520	UnaryOperator	!		6138499	0					
ANR	6138521	CallExpression	"macro_is_equal ( s -> d , str )"		6138499	1					
ANR	6138522	Callee	macro_is_equal		6138499	0					
ANR	6138523	Identifier	macro_is_equal		6138499	0					
ANR	6138524	ArgumentList	s -> d		6138499	1					
ANR	6138525	Argument	s -> d		6138499	0					
ANR	6138526	PtrMemberAccess	s -> d		6138499	0					
ANR	6138527	Identifier	s		6138499	0					
ANR	6138528	Identifier	d		6138499	1					
ANR	6138529	Argument	str		6138499	1					
ANR	6138530	Identifier	str		6138499	0					
ANR	6138531	CompoundStatement		5:39:72:72	6138499	1					
ANR	6138532	ExpressionStatement	"tcc_warning ( ""%s redefined"" , get_tok_str ( v , NULL ) )"	1069:2:21490:21541	6138499	0	True				
ANR	6138533	CallExpression	"tcc_warning ( ""%s redefined"" , get_tok_str ( v , NULL ) )"		6138499	0					
ANR	6138534	Callee	tcc_warning		6138499	0					
ANR	6138535	Identifier	tcc_warning		6138499	0					
ANR	6138536	ArgumentList	"""%s redefined"""		6138499	1					
ANR	6138537	Argument	"""%s redefined"""		6138499	0					
ANR	6138538	PrimaryExpression	"""%s redefined"""		6138499	0					
ANR	6138539	Argument	"get_tok_str ( v , NULL )"		6138499	1					
ANR	6138540	CallExpression	"get_tok_str ( v , NULL )"		6138499	0					
ANR	6138541	Callee	get_tok_str		6138499	0					
ANR	6138542	Identifier	get_tok_str		6138499	0					
ANR	6138543	ArgumentList	v		6138499	1					
ANR	6138544	Argument	v		6138499	0					
ANR	6138545	Identifier	v		6138499	0					
ANR	6138546	Argument	NULL		6138499	1					
ANR	6138547	Identifier	NULL		6138499	0					
ANR	6138548	ExpressionStatement	"s = sym_push2 ( & define_stack , v , macro_type , 0 )"	1072:1:21548:21595	6138499	3	True				
ANR	6138549	AssignmentExpression	"s = sym_push2 ( & define_stack , v , macro_type , 0 )"		6138499	0		=			
ANR	6138550	Identifier	s		6138499	0					
ANR	6138551	CallExpression	"sym_push2 ( & define_stack , v , macro_type , 0 )"		6138499	1					
ANR	6138552	Callee	sym_push2		6138499	0					
ANR	6138553	Identifier	sym_push2		6138499	0					
ANR	6138554	ArgumentList	& define_stack		6138499	1					
ANR	6138555	Argument	& define_stack		6138499	0					
ANR	6138556	UnaryOperationExpression	& define_stack		6138499	0					
ANR	6138557	UnaryOperator	&		6138499	0					
ANR	6138558	Identifier	define_stack		6138499	1					
ANR	6138559	Argument	v		6138499	1					
ANR	6138560	Identifier	v		6138499	0					
ANR	6138561	Argument	macro_type		6138499	2					
ANR	6138562	Identifier	macro_type		6138499	0					
ANR	6138563	Argument	0		6138499	3					
ANR	6138564	PrimaryExpression	0		6138499	0					
ANR	6138565	IfStatement	if ( ! s )		6138499	4					
ANR	6138566	Condition	! s	1073:5:21602:21603	6138499	0	True				
ANR	6138567	UnaryOperationExpression	! s		6138499	0					
ANR	6138568	UnaryOperator	!		6138499	0					
ANR	6138569	Identifier	s		6138499	1					
ANR	6138570	CompoundStatement		10:9:192:192	6138499	1					
ANR	6138571	ReturnStatement	return ;	1074:2:21610:21616	6138499	0	True				
ANR	6138572	ExpressionStatement	s -> d = str	1076:1:21622:21632	6138499	5	True				
ANR	6138573	AssignmentExpression	s -> d = str		6138499	0		=			
ANR	6138574	PtrMemberAccess	s -> d		6138499	0					
ANR	6138575	Identifier	s		6138499	0					
ANR	6138576	Identifier	d		6138499	1					
ANR	6138577	Identifier	str		6138499	1					
ANR	6138578	ExpressionStatement	s -> next = first_arg	1077:1:21635:21654	6138499	6	True				
ANR	6138579	AssignmentExpression	s -> next = first_arg		6138499	0		=			
ANR	6138580	PtrMemberAccess	s -> next		6138499	0					
ANR	6138581	Identifier	s		6138499	0					
ANR	6138582	Identifier	next		6138499	1					
ANR	6138583	Identifier	first_arg		6138499	1					
ANR	6138584	IfStatement	if ( v >= TOK_IDENT )		6138499	7					
ANR	6138585	Condition	v >= TOK_IDENT	1078:5:21661:21674	6138499	0	True				
ANR	6138586	RelationalExpression	v >= TOK_IDENT		6138499	0		>=			
ANR	6138587	Identifier	v		6138499	0					
ANR	6138588	Identifier	TOK_IDENT		6138499	1					
ANR	6138589	CompoundStatement		15:21:263:263	6138499	1					
ANR	6138590	ExpressionStatement	table_ident [ v - TOK_IDENT ] -> sym_define = s	1079:2:21681:21723	6138499	0	True				
ANR	6138591	AssignmentExpression	table_ident [ v - TOK_IDENT ] -> sym_define = s		6138499	0		=			
ANR	6138592	PtrMemberAccess	table_ident [ v - TOK_IDENT ] -> sym_define		6138499	0					
ANR	6138593	ArrayIndexing	table_ident [ v - TOK_IDENT ]		6138499	0					
ANR	6138594	Identifier	table_ident		6138499	0					
ANR	6138595	AdditiveExpression	v - TOK_IDENT		6138499	1		-			
ANR	6138596	Identifier	v		6138499	0					
ANR	6138597	Identifier	TOK_IDENT		6138499	1					
ANR	6138598	Identifier	sym_define		6138499	1					
ANR	6138599	Identifier	s		6138499	1					
ANR	6138600	ReturnType	ST_INLN void		6138499	1					
ANR	6138601	Identifier	define_push		6138499	2					
ANR	6138602	ParameterList	"int v , int macro_type , int * str , Sym * first_arg"		6138499	3					
ANR	6138603	Parameter	int v	1063:25:21364:21368	6138499	0	True				
ANR	6138604	ParameterType	int		6138499	0					
ANR	6138605	Identifier	v		6138499	1					
ANR	6138606	Parameter	int macro_type	1063:32:21371:21384	6138499	1	True				
ANR	6138607	ParameterType	int		6138499	0					
ANR	6138608	Identifier	macro_type		6138499	1					
ANR	6138609	Parameter	int * str	1063:48:21387:21394	6138499	2	True				
ANR	6138610	ParameterType	int *		6138499	0					
ANR	6138611	Identifier	str		6138499	1					
ANR	6138612	Parameter	Sym * first_arg	1063:58:21397:21410	6138499	3	True				
ANR	6138613	ParameterType	Sym *		6138499	0					
ANR	6138614	Identifier	first_arg		6138499	1					
ANR	6138615	CFGEntryNode	ENTRY		6138499		True				
ANR	6138616	CFGExitNode	EXIT		6138499		True				
ANR	6138617	Symbol	& define_stack		6138499						
ANR	6138618	Symbol	* v		6138499						
ANR	6138619	Symbol	NULL		6138499						
ANR	6138620	Symbol	macro_type		6138499						
ANR	6138621	Symbol	get_tok_str		6138499						
ANR	6138622	Symbol	TOK_IDENT		6138499						
ANR	6138623	Symbol	table_ident [ v - TOK_IDENT ] -> sym_define		6138499						
ANR	6138624	Symbol	* * table_ident		6138499						
ANR	6138625	Symbol	s -> next		6138499						
ANR	6138626	Symbol	* table_ident		6138499						
ANR	6138627	Symbol	str		6138499						
ANR	6138628	Symbol	sym_push2		6138499						
ANR	6138629	Symbol	table_ident		6138499						
ANR	6138630	Symbol	* TOK_IDENT		6138499						
ANR	6138631	Symbol	s		6138499						
ANR	6138632	Symbol	first_arg		6138499						
ANR	6138633	Symbol	* * v		6138499						
ANR	6138634	Symbol	v		6138499						
ANR	6138635	Symbol	macro_is_equal		6138499						
ANR	6138636	Symbol	s -> d		6138499						
ANR	6138637	Symbol	* * TOK_IDENT		6138499						
ANR	6138638	Symbol	define_find		6138499						
ANR	6138639	Symbol	* s		6138499						
ANR	6138640	Function	define_undef	1084:0:21793:21951							
ANR	6138641	FunctionDef	define_undef (Sym * s)		6138640	0					
ANR	6138642	CompoundStatement		1085:0:21827:21951	6138640	0					
ANR	6138643	IdentifierDeclStatement	int v ;	1086:1:21830:21835	6138640	0	True				
ANR	6138644	IdentifierDecl	v		6138640	0					
ANR	6138645	IdentifierDeclType	int		6138640	0					
ANR	6138646	Identifier	v		6138640	1					
ANR	6138647	ExpressionStatement	v = s -> v	1087:1:21838:21846	6138640	1	True				
ANR	6138648	AssignmentExpression	v = s -> v		6138640	0		=			
ANR	6138649	Identifier	v		6138640	0					
ANR	6138650	PtrMemberAccess	s -> v		6138640	1					
ANR	6138651	Identifier	s		6138640	0					
ANR	6138652	Identifier	v		6138640	1					
ANR	6138653	IfStatement	if ( v >= TOK_IDENT && v < tok_ident )		6138640	2					
ANR	6138654	Condition	v >= TOK_IDENT && v < tok_ident	1088:5:21853:21883	6138640	0	True				
ANR	6138655	AndExpression	v >= TOK_IDENT && v < tok_ident		6138640	0		&&			
ANR	6138656	RelationalExpression	v >= TOK_IDENT		6138640	0		>=			
ANR	6138657	Identifier	v		6138640	0					
ANR	6138658	Identifier	TOK_IDENT		6138640	1					
ANR	6138659	RelationalExpression	v < tok_ident		6138640	1		<			
ANR	6138660	Identifier	v		6138640	0					
ANR	6138661	Identifier	tok_ident		6138640	1					
ANR	6138662	CompoundStatement		4:38:58:58	6138640	1					
ANR	6138663	ExpressionStatement	table_ident [ v - TOK_IDENT ] -> sym_define = NULL	1089:2:21890:21935	6138640	0	True				
ANR	6138664	AssignmentExpression	table_ident [ v - TOK_IDENT ] -> sym_define = NULL		6138640	0		=			
ANR	6138665	PtrMemberAccess	table_ident [ v - TOK_IDENT ] -> sym_define		6138640	0					
ANR	6138666	ArrayIndexing	table_ident [ v - TOK_IDENT ]		6138640	0					
ANR	6138667	Identifier	table_ident		6138640	0					
ANR	6138668	AdditiveExpression	v - TOK_IDENT		6138640	1		-			
ANR	6138669	Identifier	v		6138640	0					
ANR	6138670	Identifier	TOK_IDENT		6138640	1					
ANR	6138671	Identifier	sym_define		6138640	1					
ANR	6138672	Identifier	NULL		6138640	1					
ANR	6138673	ExpressionStatement	s -> v = 0	1091:1:21941:21949	6138640	3	True				
ANR	6138674	AssignmentExpression	s -> v = 0		6138640	0		=			
ANR	6138675	PtrMemberAccess	s -> v		6138640	0					
ANR	6138676	Identifier	s		6138640	0					
ANR	6138677	Identifier	v		6138640	1					
ANR	6138678	PrimaryExpression	0		6138640	1					
ANR	6138679	ReturnType	ST_FUNC void		6138640	1					
ANR	6138680	Identifier	define_undef		6138640	2					
ANR	6138681	ParameterList	Sym * s		6138640	3					
ANR	6138682	Parameter	Sym * s	1084:26:21819:21824	6138640	0	True				
ANR	6138683	ParameterType	Sym *		6138640	0					
ANR	6138684	Identifier	s		6138640	1					
ANR	6138685	CFGEntryNode	ENTRY		6138640		True				
ANR	6138686	CFGExitNode	EXIT		6138640		True				
ANR	6138687	Symbol	* v		6138640						
ANR	6138688	Symbol	s -> v		6138640						
ANR	6138689	Symbol	NULL		6138640						
ANR	6138690	Symbol	TOK_IDENT		6138640						
ANR	6138691	Symbol	table_ident [ v - TOK_IDENT ] -> sym_define		6138640						
ANR	6138692	Symbol	* * table_ident		6138640						
ANR	6138693	Symbol	* table_ident		6138640						
ANR	6138694	Symbol	table_ident		6138640						
ANR	6138695	Symbol	* TOK_IDENT		6138640						
ANR	6138696	Symbol	s		6138640						
ANR	6138697	Symbol	tok_ident		6138640						
ANR	6138698	Symbol	* * v		6138640						
ANR	6138699	Symbol	v		6138640						
ANR	6138700	Symbol	* * TOK_IDENT		6138640						
ANR	6138701	Symbol	* s		6138640						
ANR	6138702	Function	define_find	1094:0:21954:22118							
ANR	6138703	FunctionDef	define_find (int v)		6138702	0					
ANR	6138704	CompoundStatement		1095:0:21986:22118	6138702	0					
ANR	6138705	ExpressionStatement	v -= TOK_IDENT	1096:1:21989:22003	6138702	0	True				
ANR	6138706	AssignmentExpression	v -= TOK_IDENT		6138702	0		-=			
ANR	6138707	Identifier	v		6138702	0					
ANR	6138708	Identifier	TOK_IDENT		6138702	1					
ANR	6138709	IfStatement	if ( ( unsigned ) v >= ( unsigned ) ( tok_ident - TOK_IDENT ) )		6138702	1					
ANR	6138710	Condition	( unsigned ) v >= ( unsigned ) ( tok_ident - TOK_IDENT )	1097:5:22010:22059	6138702	0	True				
ANR	6138711	RelationalExpression	( unsigned ) v >= ( unsigned ) ( tok_ident - TOK_IDENT )		6138702	0		>=			
ANR	6138712	CastExpression	( unsigned ) v		6138702	0					
ANR	6138713	CastTarget	unsigned		6138702	0					
ANR	6138714	Identifier	v		6138702	1					
ANR	6138715	CastExpression	( unsigned ) ( tok_ident - TOK_IDENT )		6138702	1					
ANR	6138716	CastTarget	unsigned		6138702	0					
ANR	6138717	AdditiveExpression	tok_ident - TOK_IDENT		6138702	1		-			
ANR	6138718	Identifier	tok_ident		6138702	0					
ANR	6138719	Identifier	TOK_IDENT		6138702	1					
ANR	6138720	CompoundStatement		3:57:75:75	6138702	1					
ANR	6138721	ReturnStatement	return NULL ;	1098:2:22066:22077	6138702	0	True				
ANR	6138722	Identifier	NULL		6138702	0					
ANR	6138723	ReturnStatement	return table_ident [ v ] -> sym_define ;	1100:1:22083:22116	6138702	2	True				
ANR	6138724	PtrMemberAccess	table_ident [ v ] -> sym_define		6138702	0					
ANR	6138725	ArrayIndexing	table_ident [ v ]		6138702	0					
ANR	6138726	Identifier	table_ident		6138702	0					
ANR	6138727	Identifier	v		6138702	1					
ANR	6138728	Identifier	sym_define		6138702	1					
ANR	6138729	ReturnType	ST_INLN Sym *		6138702	1					
ANR	6138730	Identifier	define_find		6138702	2					
ANR	6138731	ParameterList	int v		6138702	3					
ANR	6138732	Parameter	int v	1094:25:21979:21983	6138702	0	True				
ANR	6138733	ParameterType	int		6138702	0					
ANR	6138734	Identifier	v		6138702	1					
ANR	6138735	CFGEntryNode	ENTRY		6138702		True				
ANR	6138736	CFGExitNode	EXIT		6138702		True				
ANR	6138737	Symbol	* v		6138702						
ANR	6138738	Symbol	table_ident		6138702						
ANR	6138739	Symbol	table_ident [ v ] -> sym_define		6138702						
ANR	6138740	Symbol	tok_ident		6138702						
ANR	6138741	Symbol	NULL		6138702						
ANR	6138742	Symbol	TOK_IDENT		6138702						
ANR	6138743	Symbol	* * v		6138702						
ANR	6138744	Symbol	v		6138702						
ANR	6138745	Symbol	* * table_ident		6138702						
ANR	6138746	Symbol	* table_ident		6138702						
ANR	6138747	Function	free_defines	1104:0:22167:22547							
ANR	6138748	FunctionDef	free_defines (Sym * b)		6138747	0					
ANR	6138749	CompoundStatement		1105:0:22201:22547	6138747	0					
ANR	6138750	IdentifierDeclStatement	"Sym * top , * top1 ;"	1106:1:22204:22219	6138747	0	True				
ANR	6138751	IdentifierDecl	* top		6138747	0					
ANR	6138752	IdentifierDeclType	Sym *		6138747	0					
ANR	6138753	Identifier	top		6138747	1					
ANR	6138754	IdentifierDecl	* top1		6138747	1					
ANR	6138755	IdentifierDeclType	Sym *		6138747	0					
ANR	6138756	Identifier	top1		6138747	1					
ANR	6138757	IdentifierDeclStatement	int v ;	1107:1:22222:22227	6138747	1	True				
ANR	6138758	IdentifierDecl	v		6138747	0					
ANR	6138759	IdentifierDeclType	int		6138747	0					
ANR	6138760	Identifier	v		6138747	1					
ANR	6138761	ExpressionStatement	top = define_stack	1109:1:22231:22249	6138747	2	True				
ANR	6138762	AssignmentExpression	top = define_stack		6138747	0		=			
ANR	6138763	Identifier	top		6138747	0					
ANR	6138764	Identifier	define_stack		6138747	1					
ANR	6138765	WhileStatement	while ( top != b )		6138747	3					
ANR	6138766	Condition	top != b	1110:8:22259:22266	6138747	0	True				
ANR	6138767	EqualityExpression	top != b		6138747	0		!=			
ANR	6138768	Identifier	top		6138747	0					
ANR	6138769	Identifier	b		6138747	1					
ANR	6138770	CompoundStatement		6:18:67:67	6138747	1					
ANR	6138771	ExpressionStatement	top1 = top -> prev	1111:2:22273:22289	6138747	0	True				
ANR	6138772	AssignmentExpression	top1 = top -> prev		6138747	0		=			
ANR	6138773	Identifier	top1		6138747	0					
ANR	6138774	PtrMemberAccess	top -> prev		6138747	1					
ANR	6138775	Identifier	top		6138747	0					
ANR	6138776	Identifier	prev		6138747	1					
ANR	6138777	IfStatement	if ( top -> d )		6138747	1					
ANR	6138778	Condition	top -> d	1113:6:22344:22349	6138747	0	True				
ANR	6138779	PtrMemberAccess	top -> d		6138747	0					
ANR	6138780	Identifier	top		6138747	0					
ANR	6138781	Identifier	d		6138747	1					
ANR	6138782	CompoundStatement		9:14:150:150	6138747	1					
ANR	6138783	ExpressionStatement	tok_str_free ( top -> d )	1114:3:22357:22378	6138747	0	True				
ANR	6138784	CallExpression	tok_str_free ( top -> d )		6138747	0					
ANR	6138785	Callee	tok_str_free		6138747	0					
ANR	6138786	Identifier	tok_str_free		6138747	0					
ANR	6138787	ArgumentList	top -> d		6138747	1					
ANR	6138788	Argument	top -> d		6138747	0					
ANR	6138789	PtrMemberAccess	top -> d		6138747	0					
ANR	6138790	Identifier	top		6138747	0					
ANR	6138791	Identifier	d		6138747	1					
ANR	6138792	ExpressionStatement	v = top -> v	1116:2:22386:22396	6138747	2	True				
ANR	6138793	AssignmentExpression	v = top -> v		6138747	0		=			
ANR	6138794	Identifier	v		6138747	0					
ANR	6138795	PtrMemberAccess	top -> v		6138747	1					
ANR	6138796	Identifier	top		6138747	0					
ANR	6138797	Identifier	v		6138747	1					
ANR	6138798	IfStatement	if ( v >= TOK_IDENT && v < tok_ident )		6138747	3					
ANR	6138799	Condition	v >= TOK_IDENT && v < tok_ident	1117:6:22404:22434	6138747	0	True				
ANR	6138800	AndExpression	v >= TOK_IDENT && v < tok_ident		6138747	0		&&			
ANR	6138801	RelationalExpression	v >= TOK_IDENT		6138747	0		>=			
ANR	6138802	Identifier	v		6138747	0					
ANR	6138803	Identifier	TOK_IDENT		6138747	1					
ANR	6138804	RelationalExpression	v < tok_ident		6138747	1		<			
ANR	6138805	Identifier	v		6138747	0					
ANR	6138806	Identifier	tok_ident		6138747	1					
ANR	6138807	CompoundStatement		13:39:235:235	6138747	1					
ANR	6138808	ExpressionStatement	table_ident [ v - TOK_IDENT ] -> sym_define = NULL	1118:3:22442:22487	6138747	0	True				
ANR	6138809	AssignmentExpression	table_ident [ v - TOK_IDENT ] -> sym_define = NULL		6138747	0		=			
ANR	6138810	PtrMemberAccess	table_ident [ v - TOK_IDENT ] -> sym_define		6138747	0					
ANR	6138811	ArrayIndexing	table_ident [ v - TOK_IDENT ]		6138747	0					
ANR	6138812	Identifier	table_ident		6138747	0					
ANR	6138813	AdditiveExpression	v - TOK_IDENT		6138747	1		-			
ANR	6138814	Identifier	v		6138747	0					
ANR	6138815	Identifier	TOK_IDENT		6138747	1					
ANR	6138816	Identifier	sym_define		6138747	1					
ANR	6138817	Identifier	NULL		6138747	1					
ANR	6138818	ExpressionStatement	sym_free ( top )	1120:2:22495:22509	6138747	4	True				
ANR	6138819	CallExpression	sym_free ( top )		6138747	0					
ANR	6138820	Callee	sym_free		6138747	0					
ANR	6138821	Identifier	sym_free		6138747	0					
ANR	6138822	ArgumentList	top		6138747	1					
ANR	6138823	Argument	top		6138747	0					
ANR	6138824	Identifier	top		6138747	0					
ANR	6138825	ExpressionStatement	top = top1	1121:2:22513:22523	6138747	5	True				
ANR	6138826	AssignmentExpression	top = top1		6138747	0		=			
ANR	6138827	Identifier	top		6138747	0					
ANR	6138828	Identifier	top1		6138747	1					
ANR	6138829	ExpressionStatement	define_stack = b	1123:1:22529:22545	6138747	4	True				
ANR	6138830	AssignmentExpression	define_stack = b		6138747	0		=			
ANR	6138831	Identifier	define_stack		6138747	0					
ANR	6138832	Identifier	b		6138747	1					
ANR	6138833	ReturnType	ST_FUNC void		6138747	1					
ANR	6138834	Identifier	free_defines		6138747	2					
ANR	6138835	ParameterList	Sym * b		6138747	3					
ANR	6138836	Parameter	Sym * b	1104:26:22193:22198	6138747	0	True				
ANR	6138837	ParameterType	Sym *		6138747	0					
ANR	6138838	Identifier	b		6138747	1					
ANR	6138839	CFGEntryNode	ENTRY		6138747		True				
ANR	6138840	CFGExitNode	EXIT		6138747		True				
ANR	6138841	Symbol	* v		6138747						
ANR	6138842	Symbol	top -> v		6138747						
ANR	6138843	Symbol	b		6138747						
ANR	6138844	Symbol	NULL		6138747						
ANR	6138845	Symbol	TOK_IDENT		6138747						
ANR	6138846	Symbol	* * table_ident		6138747						
ANR	6138847	Symbol	table_ident [ v - TOK_IDENT ] -> sym_define		6138747						
ANR	6138848	Symbol	top1		6138747						
ANR	6138849	Symbol	* table_ident		6138747						
ANR	6138850	Symbol	table_ident		6138747						
ANR	6138851	Symbol	* TOK_IDENT		6138747						
ANR	6138852	Symbol	top -> d		6138747						
ANR	6138853	Symbol	tok_ident		6138747						
ANR	6138854	Symbol	top		6138747						
ANR	6138855	Symbol	define_stack		6138747						
ANR	6138856	Symbol	* * v		6138747						
ANR	6138857	Symbol	v		6138747						
ANR	6138858	Symbol	* * TOK_IDENT		6138747						
ANR	6138859	Symbol	top -> prev		6138747						
ANR	6138860	Symbol	* top		6138747						
ANR	6138861	Function	label_find	1127:0:22569:22731							
ANR	6138862	FunctionDef	label_find (int v)		6138861	0					
ANR	6138863	CompoundStatement		1128:0:22600:22731	6138861	0					
ANR	6138864	ExpressionStatement	v -= TOK_IDENT	1129:1:22603:22617	6138861	0	True				
ANR	6138865	AssignmentExpression	v -= TOK_IDENT		6138861	0		-=			
ANR	6138866	Identifier	v		6138861	0					
ANR	6138867	Identifier	TOK_IDENT		6138861	1					
ANR	6138868	IfStatement	if ( ( unsigned ) v >= ( unsigned ) ( tok_ident - TOK_IDENT ) )		6138861	1					
ANR	6138869	Condition	( unsigned ) v >= ( unsigned ) ( tok_ident - TOK_IDENT )	1130:5:22624:22673	6138861	0	True				
ANR	6138870	RelationalExpression	( unsigned ) v >= ( unsigned ) ( tok_ident - TOK_IDENT )		6138861	0		>=			
ANR	6138871	CastExpression	( unsigned ) v		6138861	0					
ANR	6138872	CastTarget	unsigned		6138861	0					
ANR	6138873	Identifier	v		6138861	1					
ANR	6138874	CastExpression	( unsigned ) ( tok_ident - TOK_IDENT )		6138861	1					
ANR	6138875	CastTarget	unsigned		6138861	0					
ANR	6138876	AdditiveExpression	tok_ident - TOK_IDENT		6138861	1		-			
ANR	6138877	Identifier	tok_ident		6138861	0					
ANR	6138878	Identifier	TOK_IDENT		6138861	1					
ANR	6138879	CompoundStatement		3:57:75:75	6138861	1					
ANR	6138880	ReturnStatement	return NULL ;	1131:2:22680:22691	6138861	0	True				
ANR	6138881	Identifier	NULL		6138861	0					
ANR	6138882	ReturnStatement	return table_ident [ v ] -> sym_label ;	1133:1:22697:22729	6138861	2	True				
ANR	6138883	PtrMemberAccess	table_ident [ v ] -> sym_label		6138861	0					
ANR	6138884	ArrayIndexing	table_ident [ v ]		6138861	0					
ANR	6138885	Identifier	table_ident		6138861	0					
ANR	6138886	Identifier	v		6138861	1					
ANR	6138887	Identifier	sym_label		6138861	1					
ANR	6138888	ReturnType	ST_FUNC Sym *		6138861	1					
ANR	6138889	Identifier	label_find		6138861	2					
ANR	6138890	ParameterList	int v		6138861	3					
ANR	6138891	Parameter	int v	1127:24:22593:22597	6138861	0	True				
ANR	6138892	ParameterType	int		6138861	0					
ANR	6138893	Identifier	v		6138861	1					
ANR	6138894	CFGEntryNode	ENTRY		6138861		True				
ANR	6138895	CFGExitNode	EXIT		6138861		True				
ANR	6138896	Symbol	* v		6138861						
ANR	6138897	Symbol	table_ident		6138861						
ANR	6138898	Symbol	tok_ident		6138861						
ANR	6138899	Symbol	NULL		6138861						
ANR	6138900	Symbol	TOK_IDENT		6138861						
ANR	6138901	Symbol	table_ident [ v ] -> sym_label		6138861						
ANR	6138902	Symbol	* * v		6138861						
ANR	6138903	Symbol	v		6138861						
ANR	6138904	Symbol	* * table_ident		6138861						
ANR	6138905	Symbol	* table_ident		6138861						
ANR	6138906	Function	label_push	1136:0:22734:23156							
ANR	6138907	FunctionDef	"label_push (Sym * * ptop , int v , int flags)"		6138906	0					
ANR	6138908	CompoundStatement		1137:0:22788:23156	6138906	0					
ANR	6138909	IdentifierDeclStatement	"Sym * s , * * ps ;"	1138:1:22791:22803	6138906	0	True				
ANR	6138910	IdentifierDecl	* s		6138906	0					
ANR	6138911	IdentifierDeclType	Sym *		6138906	0					
ANR	6138912	Identifier	s		6138906	1					
ANR	6138913	IdentifierDecl	* * ps		6138906	1					
ANR	6138914	IdentifierDeclType	Sym * *		6138906	0					
ANR	6138915	Identifier	ps		6138906	1					
ANR	6138916	ExpressionStatement	"s = sym_push2 ( ptop , v , 0 , 0 )"	1139:1:22806:22835	6138906	1	True				
ANR	6138917	AssignmentExpression	"s = sym_push2 ( ptop , v , 0 , 0 )"		6138906	0		=			
ANR	6138918	Identifier	s		6138906	0					
ANR	6138919	CallExpression	"sym_push2 ( ptop , v , 0 , 0 )"		6138906	1					
ANR	6138920	Callee	sym_push2		6138906	0					
ANR	6138921	Identifier	sym_push2		6138906	0					
ANR	6138922	ArgumentList	ptop		6138906	1					
ANR	6138923	Argument	ptop		6138906	0					
ANR	6138924	Identifier	ptop		6138906	0					
ANR	6138925	Argument	v		6138906	1					
ANR	6138926	Identifier	v		6138906	0					
ANR	6138927	Argument	0		6138906	2					
ANR	6138928	PrimaryExpression	0		6138906	0					
ANR	6138929	Argument	0		6138906	3					
ANR	6138930	PrimaryExpression	0		6138906	0					
ANR	6138931	IfStatement	if ( ! s )		6138906	2					
ANR	6138932	Condition	! s	1140:5:22842:22843	6138906	0	True				
ANR	6138933	UnaryOperationExpression	! s		6138906	0					
ANR	6138934	UnaryOperator	!		6138906	0					
ANR	6138935	Identifier	s		6138906	1					
ANR	6138936	CompoundStatement		4:9:57:57	6138906	1					
ANR	6138937	ReturnStatement	return s ;	1141:2:22850:22858	6138906	0	True				
ANR	6138938	Identifier	s		6138906	0					
ANR	6138939	ExpressionStatement	s -> r = flags	1143:1:22864:22876	6138906	3	True				
ANR	6138940	AssignmentExpression	s -> r = flags		6138906	0		=			
ANR	6138941	PtrMemberAccess	s -> r		6138906	0					
ANR	6138942	Identifier	s		6138906	0					
ANR	6138943	Identifier	r		6138906	1					
ANR	6138944	Identifier	flags		6138906	1					
ANR	6138945	ExpressionStatement	ps = & table_ident [ v - TOK_IDENT ] -> sym_label	1144:1:22879:22922	6138906	4	True				
ANR	6138946	AssignmentExpression	ps = & table_ident [ v - TOK_IDENT ] -> sym_label		6138906	0		=			
ANR	6138947	Identifier	ps		6138906	0					
ANR	6138948	UnaryOperationExpression	& table_ident [ v - TOK_IDENT ] -> sym_label		6138906	1					
ANR	6138949	UnaryOperator	&		6138906	0					
ANR	6138950	PtrMemberAccess	table_ident [ v - TOK_IDENT ] -> sym_label		6138906	1					
ANR	6138951	ArrayIndexing	table_ident [ v - TOK_IDENT ]		6138906	0					
ANR	6138952	Identifier	table_ident		6138906	0					
ANR	6138953	AdditiveExpression	v - TOK_IDENT		6138906	1		-			
ANR	6138954	Identifier	v		6138906	0					
ANR	6138955	Identifier	TOK_IDENT		6138906	1					
ANR	6138956	Identifier	sym_label		6138906	1					
ANR	6138957	IfStatement	if ( ptop == & global_label_stack )		6138906	5					
ANR	6138958	Condition	ptop == & global_label_stack	1145:5:22929:22955	6138906	0	True				
ANR	6138959	EqualityExpression	ptop == & global_label_stack		6138906	0		==			
ANR	6138960	Identifier	ptop		6138906	0					
ANR	6138961	UnaryOperationExpression	& global_label_stack		6138906	1					
ANR	6138962	UnaryOperator	&		6138906	0					
ANR	6138963	Identifier	global_label_stack		6138906	1					
ANR	6138964	CompoundStatement		9:34:169:169	6138906	1					
ANR	6138965	WhileStatement	while ( * ps != NULL )		6138906	0					
ANR	6138966	Condition	* ps != NULL	1148:9:23073:23083	6138906	0	True				
ANR	6138967	EqualityExpression	* ps != NULL		6138906	0		!=			
ANR	6138968	UnaryOperationExpression	* ps		6138906	0					
ANR	6138969	UnaryOperator	*		6138906	0					
ANR	6138970	Identifier	ps		6138906	1					
ANR	6138971	Identifier	NULL		6138906	1					
ANR	6138972	ExpressionStatement	ps = & ( * ps ) -> prev_tok	1149:3:23089:23110	6138906	1	True				
ANR	6138973	AssignmentExpression	ps = & ( * ps ) -> prev_tok		6138906	0		=			
ANR	6138974	Identifier	ps		6138906	0					
ANR	6138975	UnaryOperationExpression	& ( * ps ) -> prev_tok		6138906	1					
ANR	6138976	UnaryOperator	&		6138906	0					
ANR	6138977	PtrMemberAccess	( * ps ) -> prev_tok		6138906	1					
ANR	6138978	UnaryOperationExpression	* ps		6138906	0					
ANR	6138979	UnaryOperator	*		6138906	0					
ANR	6138980	Identifier	ps		6138906	1					
ANR	6138981	Identifier	prev_tok		6138906	1					
ANR	6138982	ExpressionStatement	s -> prev_tok = * ps	1151:1:23116:23133	6138906	6	True				
ANR	6138983	AssignmentExpression	s -> prev_tok = * ps		6138906	0		=			
ANR	6138984	PtrMemberAccess	s -> prev_tok		6138906	0					
ANR	6138985	Identifier	s		6138906	0					
ANR	6138986	Identifier	prev_tok		6138906	1					
ANR	6138987	UnaryOperationExpression	* ps		6138906	1					
ANR	6138988	UnaryOperator	*		6138906	0					
ANR	6138989	Identifier	ps		6138906	1					
ANR	6138990	ExpressionStatement	* ps = s	1152:1:23136:23143	6138906	7	True				
ANR	6138991	AssignmentExpression	* ps = s		6138906	0		=			
ANR	6138992	UnaryOperationExpression	* ps		6138906	0					
ANR	6138993	UnaryOperator	*		6138906	0					
ANR	6138994	Identifier	ps		6138906	1					
ANR	6138995	Identifier	s		6138906	1					
ANR	6138996	ReturnStatement	return s ;	1153:1:23146:23154	6138906	8	True				
ANR	6138997	Identifier	s		6138906	0					
ANR	6138998	ReturnType	ST_FUNC Sym *		6138906	1					
ANR	6138999	Identifier	label_push		6138906	2					
ANR	6139000	ParameterList	"Sym * * ptop , int v , int flags"		6138906	3					
ANR	6139001	Parameter	Sym * * ptop	1136:24:22758:22767	6138906	0	True				
ANR	6139002	ParameterType	Sym * *		6138906	0					
ANR	6139003	Identifier	ptop		6138906	1					
ANR	6139004	Parameter	int v	1136:36:22770:22774	6138906	1	True				
ANR	6139005	ParameterType	int		6138906	0					
ANR	6139006	Identifier	v		6138906	1					
ANR	6139007	Parameter	int flags	1136:43:22777:22785	6138906	2	True				
ANR	6139008	ParameterType	int		6138906	0					
ANR	6139009	Identifier	flags		6138906	1					
ANR	6139010	CFGEntryNode	ENTRY		6138906		True				
ANR	6139011	CFGExitNode	EXIT		6138906		True				
ANR	6139012	Symbol	* v		6138906						
ANR	6139013	Symbol	ps		6138906						
ANR	6139014	Symbol	NULL		6138906						
ANR	6139015	Symbol	TOK_IDENT		6138906						
ANR	6139016	Symbol	s -> r		6138906						
ANR	6139017	Symbol	flags		6138906						
ANR	6139018	Symbol	& table_ident [ v - TOK_IDENT ] -> sym_label		6138906						
ANR	6139019	Symbol	* ps		6138906						
ANR	6139020	Symbol	* table_ident		6138906						
ANR	6139021	Symbol	s -> prev_tok		6138906						
ANR	6139022	Symbol	sym_push2		6138906						
ANR	6139023	Symbol	ptop		6138906						
ANR	6139024	Symbol	table_ident		6138906						
ANR	6139025	Symbol	* TOK_IDENT		6138906						
ANR	6139026	Symbol	s		6138906						
ANR	6139027	Symbol	& global_label_stack		6138906						
ANR	6139028	Symbol	v		6138906						
ANR	6139029	Symbol	& ( * ps ) -> prev_tok		6138906						
ANR	6139030	Symbol	* s		6138906						
ANR	6139031	Function	label_pop	1158:0:23282:23747							
ANR	6139032	FunctionDef	"label_pop (Sym * * ptop , Sym * slast)"		6139031	0					
ANR	6139033	CompoundStatement		1159:0:23329:23747	6139031	0					
ANR	6139034	IdentifierDeclStatement	"Sym * s , * s1 ;"	1160:1:23332:23343	6139031	0	True				
ANR	6139035	IdentifierDecl	* s		6139031	0					
ANR	6139036	IdentifierDeclType	Sym *		6139031	0					
ANR	6139037	Identifier	s		6139031	1					
ANR	6139038	IdentifierDecl	* s1		6139031	1					
ANR	6139039	IdentifierDeclType	Sym *		6139031	0					
ANR	6139040	Identifier	s1		6139031	1					
ANR	6139041	ForStatement	for ( s = * ptop ; s != slast ; s = s1 )		6139031	1					
ANR	6139042	ForInit	s = * ptop ;	1161:6:23351:23360	6139031	0	True				
ANR	6139043	AssignmentExpression	s = * ptop		6139031	0		=			
ANR	6139044	Identifier	s		6139031	0					
ANR	6139045	UnaryOperationExpression	* ptop		6139031	1					
ANR	6139046	UnaryOperator	*		6139031	0					
ANR	6139047	Identifier	ptop		6139031	1					
ANR	6139048	Condition	s != slast	1161:17:23362:23371	6139031	1	True				
ANR	6139049	EqualityExpression	s != slast		6139031	0		!=			
ANR	6139050	Identifier	s		6139031	0					
ANR	6139051	Identifier	slast		6139031	1					
ANR	6139052	AssignmentExpression	s = s1	1161:29:23374:23379	6139031	2	True	=			
ANR	6139053	Identifier	s		6139031	0					
ANR	6139054	Identifier	s1		6139031	1					
ANR	6139055	CompoundStatement		3:37:52:52	6139031	3					
ANR	6139056	ExpressionStatement	s1 = s -> prev	1162:2:23386:23398	6139031	0	True				
ANR	6139057	AssignmentExpression	s1 = s -> prev		6139031	0		=			
ANR	6139058	Identifier	s1		6139031	0					
ANR	6139059	PtrMemberAccess	s -> prev		6139031	1					
ANR	6139060	Identifier	s		6139031	0					
ANR	6139061	Identifier	prev		6139031	1					
ANR	6139062	IfStatement	if ( s -> r == LABEL_DECLARED )		6139031	1					
ANR	6139063	Condition	s -> r == LABEL_DECLARED	1163:6:23406:23427	6139031	0	True				
ANR	6139064	EqualityExpression	s -> r == LABEL_DECLARED		6139031	0		==			
ANR	6139065	PtrMemberAccess	s -> r		6139031	0					
ANR	6139066	Identifier	s		6139031	0					
ANR	6139067	Identifier	r		6139031	1					
ANR	6139068	Identifier	LABEL_DECLARED		6139031	1					
ANR	6139069	CompoundStatement		5:30:100:100	6139031	1					
ANR	6139070	ExpressionStatement	"tcc_warning ( ""label '%s' declared but not used"" , get_tok_str ( s -> v , NULL ) )"	1164:3:23435:23509	6139031	0	True				
ANR	6139071	CallExpression	"tcc_warning ( ""label '%s' declared but not used"" , get_tok_str ( s -> v , NULL ) )"		6139031	0					
ANR	6139072	Callee	tcc_warning		6139031	0					
ANR	6139073	Identifier	tcc_warning		6139031	0					
ANR	6139074	ArgumentList	"""label '%s' declared but not used"""		6139031	1					
ANR	6139075	Argument	"""label '%s' declared but not used"""		6139031	0					
ANR	6139076	PrimaryExpression	"""label '%s' declared but not used"""		6139031	0					
ANR	6139077	Argument	"get_tok_str ( s -> v , NULL )"		6139031	1					
ANR	6139078	CallExpression	"get_tok_str ( s -> v , NULL )"		6139031	0					
ANR	6139079	Callee	get_tok_str		6139031	0					
ANR	6139080	Identifier	get_tok_str		6139031	0					
ANR	6139081	ArgumentList	s -> v		6139031	1					
ANR	6139082	Argument	s -> v		6139031	0					
ANR	6139083	PtrMemberAccess	s -> v		6139031	0					
ANR	6139084	Identifier	s		6139031	0					
ANR	6139085	Identifier	v		6139031	1					
ANR	6139086	Argument	NULL		6139031	1					
ANR	6139087	Identifier	NULL		6139031	0					
ANR	6139088	ElseStatement	else		6139031	0					
ANR	6139089	IfStatement	if ( s -> r == LABEL_FORWARD )		6139031	0					
ANR	6139090	Condition	s -> r == LABEL_FORWARD	1165:13:23524:23544	6139031	0	True				
ANR	6139091	EqualityExpression	s -> r == LABEL_FORWARD		6139031	0		==			
ANR	6139092	PtrMemberAccess	s -> r		6139031	0					
ANR	6139093	Identifier	s		6139031	0					
ANR	6139094	Identifier	r		6139031	1					
ANR	6139095	Identifier	LABEL_FORWARD		6139031	1					
ANR	6139096	CompoundStatement		7:36:217:217	6139031	1					
ANR	6139097	ExpressionStatement	"tcc_error ( ""label '%s' used but not defined"" , get_tok_str ( s -> v , NULL ) )"	1166:3:23552:23627	6139031	0	True				
ANR	6139098	CallExpression	"tcc_error ( ""label '%s' used but not defined"" , get_tok_str ( s -> v , NULL ) )"		6139031	0					
ANR	6139099	Callee	tcc_error		6139031	0					
ANR	6139100	Identifier	tcc_error		6139031	0					
ANR	6139101	ArgumentList	"""label '%s' used but not defined"""		6139031	1					
ANR	6139102	Argument	"""label '%s' used but not defined"""		6139031	0					
ANR	6139103	PrimaryExpression	"""label '%s' used but not defined"""		6139031	0					
ANR	6139104	Argument	"get_tok_str ( s -> v , NULL )"		6139031	1					
ANR	6139105	CallExpression	"get_tok_str ( s -> v , NULL )"		6139031	0					
ANR	6139106	Callee	get_tok_str		6139031	0					
ANR	6139107	Identifier	get_tok_str		6139031	0					
ANR	6139108	ArgumentList	s -> v		6139031	1					
ANR	6139109	Argument	s -> v		6139031	0					
ANR	6139110	PtrMemberAccess	s -> v		6139031	0					
ANR	6139111	Identifier	s		6139031	0					
ANR	6139112	Identifier	v		6139031	1					
ANR	6139113	Argument	NULL		6139031	1					
ANR	6139114	Identifier	NULL		6139031	0					
ANR	6139115	ExpressionStatement	table_ident [ s -> v - TOK_IDENT ] -> sym_label = s -> prev_tok	1170:2:23656:23710	6139031	2	True				
ANR	6139116	AssignmentExpression	table_ident [ s -> v - TOK_IDENT ] -> sym_label = s -> prev_tok		6139031	0		=			
ANR	6139117	PtrMemberAccess	table_ident [ s -> v - TOK_IDENT ] -> sym_label		6139031	0					
ANR	6139118	ArrayIndexing	table_ident [ s -> v - TOK_IDENT ]		6139031	0					
ANR	6139119	Identifier	table_ident		6139031	0					
ANR	6139120	AdditiveExpression	s -> v - TOK_IDENT		6139031	1		-			
ANR	6139121	PtrMemberAccess	s -> v		6139031	0					
ANR	6139122	Identifier	s		6139031	0					
ANR	6139123	Identifier	v		6139031	1					
ANR	6139124	Identifier	TOK_IDENT		6139031	1					
ANR	6139125	Identifier	sym_label		6139031	1					
ANR	6139126	PtrMemberAccess	s -> prev_tok		6139031	1					
ANR	6139127	Identifier	s		6139031	0					
ANR	6139128	Identifier	prev_tok		6139031	1					
ANR	6139129	ExpressionStatement	sym_free ( s )	1171:2:23714:23726	6139031	3	True				
ANR	6139130	CallExpression	sym_free ( s )		6139031	0					
ANR	6139131	Callee	sym_free		6139031	0					
ANR	6139132	Identifier	sym_free		6139031	0					
ANR	6139133	ArgumentList	s		6139031	1					
ANR	6139134	Argument	s		6139031	0					
ANR	6139135	Identifier	s		6139031	0					
ANR	6139136	ExpressionStatement	* ptop = slast	1173:1:23732:23745	6139031	2	True				
ANR	6139137	AssignmentExpression	* ptop = slast		6139031	0		=			
ANR	6139138	UnaryOperationExpression	* ptop		6139031	0					
ANR	6139139	UnaryOperator	*		6139031	0					
ANR	6139140	Identifier	ptop		6139031	1					
ANR	6139141	Identifier	slast		6139031	1					
ANR	6139142	ReturnType	ST_FUNC void		6139031	1					
ANR	6139143	Identifier	label_pop		6139031	2					
ANR	6139144	ParameterList	"Sym * * ptop , Sym * slast"		6139031	3					
ANR	6139145	Parameter	Sym * * ptop	1158:23:23305:23314	6139031	0	True				
ANR	6139146	ParameterType	Sym * *		6139031	0					
ANR	6139147	Identifier	ptop		6139031	1					
ANR	6139148	Parameter	Sym * slast	1158:35:23317:23326	6139031	1	True				
ANR	6139149	ParameterType	Sym *		6139031	0					
ANR	6139150	Identifier	slast		6139031	1					
ANR	6139151	CFGEntryNode	ENTRY		6139031		True				
ANR	6139152	CFGExitNode	EXIT		6139031		True				
ANR	6139153	Symbol	s -> v		6139031						
ANR	6139154	Symbol	get_tok_str		6139031						
ANR	6139155	Symbol	* s -> v		6139031						
ANR	6139156	Symbol	LABEL_DECLARED		6139031						
ANR	6139157	Symbol	s -> r		6139031						
ANR	6139158	Symbol	table_ident [ s -> v - TOK_IDENT ] -> sym_label		6139031						
ANR	6139159	Symbol	s -> prev		6139031						
ANR	6139160	Symbol	* table_ident		6139031						
ANR	6139161	Symbol	s -> prev_tok		6139031						
ANR	6139162	Symbol	slast		6139031						
ANR	6139163	Symbol	ptop		6139031						
ANR	6139164	Symbol	* TOK_IDENT		6139031						
ANR	6139165	Symbol	* * s		6139031						
ANR	6139166	Symbol	* * TOK_IDENT		6139031						
ANR	6139167	Symbol	s1		6139031						
ANR	6139168	Symbol	NULL		6139031						
ANR	6139169	Symbol	TOK_IDENT		6139031						
ANR	6139170	Symbol	LABEL_FORWARD		6139031						
ANR	6139171	Symbol	* * table_ident		6139031						
ANR	6139172	Symbol	* * s -> v		6139031						
ANR	6139173	Symbol	* * * s		6139031						
ANR	6139174	Symbol	table_ident		6139031						
ANR	6139175	Symbol	s		6139031						
ANR	6139176	Symbol	* ptop		6139031						
ANR	6139177	Symbol	* s		6139031						
ANR	6139178	Function	expr_preprocess	1177:0:23789:24528							
ANR	6139179	FunctionDef	expr_preprocess ()		6139178	0					
ANR	6139180	CompoundStatement		1178:0:23822:24528	6139178	0					
ANR	6139181	IdentifierDeclStatement	"int c , t ;"	1179:1:23825:23833	6139178	0	True				
ANR	6139182	IdentifierDecl	c		6139178	0					
ANR	6139183	IdentifierDeclType	int		6139178	0					
ANR	6139184	Identifier	c		6139178	1					
ANR	6139185	IdentifierDecl	t		6139178	1					
ANR	6139186	IdentifierDeclType	int		6139178	0					
ANR	6139187	Identifier	t		6139178	1					
ANR	6139188	IdentifierDeclStatement	TokenString str ;	1180:1:23836:23851	6139178	1	True				
ANR	6139189	IdentifierDecl	str		6139178	0					
ANR	6139190	IdentifierDeclType	TokenString		6139178	0					
ANR	6139191	Identifier	str		6139178	1					
ANR	6139192	ExpressionStatement	tok_str_new ( & str )	1182:1:23855:23873	6139178	2	True				
ANR	6139193	CallExpression	tok_str_new ( & str )		6139178	0					
ANR	6139194	Callee	tok_str_new		6139178	0					
ANR	6139195	Identifier	tok_str_new		6139178	0					
ANR	6139196	ArgumentList	& str		6139178	1					
ANR	6139197	Argument	& str		6139178	0					
ANR	6139198	UnaryOperationExpression	& str		6139178	0					
ANR	6139199	UnaryOperator	&		6139178	0					
ANR	6139200	Identifier	str		6139178	1					
ANR	6139201	WhileStatement	while ( tok != TOK_LINEFEED && tok != TOK_EOF )		6139178	3					
ANR	6139202	Condition	tok != TOK_LINEFEED && tok != TOK_EOF	1183:8:23883:23919	6139178	0	True				
ANR	6139203	AndExpression	tok != TOK_LINEFEED && tok != TOK_EOF		6139178	0		&&			
ANR	6139204	EqualityExpression	tok != TOK_LINEFEED		6139178	0		!=			
ANR	6139205	Identifier	tok		6139178	0					
ANR	6139206	Identifier	TOK_LINEFEED		6139178	1					
ANR	6139207	EqualityExpression	tok != TOK_EOF		6139178	1		!=			
ANR	6139208	Identifier	tok		6139178	0					
ANR	6139209	Identifier	TOK_EOF		6139178	1					
ANR	6139210	CompoundStatement		6:47:99:99	6139178	1					
ANR	6139211	ExpressionStatement	next ( )	1184:2:23926:23933	6139178	0	True				
ANR	6139212	CallExpression	next ( )		6139178	0					
ANR	6139213	Callee	next		6139178	0					
ANR	6139214	Identifier	next		6139178	0					
ANR	6139215	ArgumentList			6139178	1					
ANR	6139216	IfStatement	if ( tok == TOK_DEFINED )		6139178	1					
ANR	6139217	Condition	tok == TOK_DEFINED	1185:6:23961:23978	6139178	0	True				
ANR	6139218	EqualityExpression	tok == TOK_DEFINED		6139178	0		==			
ANR	6139219	Identifier	tok		6139178	0					
ANR	6139220	Identifier	TOK_DEFINED		6139178	1					
ANR	6139221	CompoundStatement		8:26:158:158	6139178	1					
ANR	6139222	ExpressionStatement	next_nomacro ( )	1186:3:23986:24001	6139178	0	True				
ANR	6139223	CallExpression	next_nomacro ( )		6139178	0					
ANR	6139224	Callee	next_nomacro		6139178	0					
ANR	6139225	Identifier	next_nomacro		6139178	0					
ANR	6139226	ArgumentList			6139178	1					
ANR	6139227	ExpressionStatement	t = tok	1187:3:24006:24013	6139178	1	True				
ANR	6139228	AssignmentExpression	t = tok		6139178	0		=			
ANR	6139229	Identifier	t		6139178	0					
ANR	6139230	Identifier	tok		6139178	1					
ANR	6139231	IfStatement	if ( t == '(' )		6139178	2					
ANR	6139232	Condition	t == '('	1188:7:24022:24029	6139178	0	True				
ANR	6139233	EqualityExpression	t == '('		6139178	0		==			
ANR	6139234	Identifier	t		6139178	0					
ANR	6139235	PrimaryExpression	'('		6139178	1					
ANR	6139236	CompoundStatement		11:17:209:209	6139178	1					
ANR	6139237	ExpressionStatement	next_nomacro ( )	1189:4:24038:24053	6139178	0	True				
ANR	6139238	CallExpression	next_nomacro ( )		6139178	0					
ANR	6139239	Callee	next_nomacro		6139178	0					
ANR	6139240	Identifier	next_nomacro		6139178	0					
ANR	6139241	ArgumentList			6139178	1					
ANR	6139242	ExpressionStatement	c = define_find ( tok ) != 0	1191:3:24063:24089	6139178	3	True				
ANR	6139243	AssignmentExpression	c = define_find ( tok ) != 0		6139178	0		=			
ANR	6139244	Identifier	c		6139178	0					
ANR	6139245	EqualityExpression	define_find ( tok ) != 0		6139178	1		!=			
ANR	6139246	CallExpression	define_find ( tok )		6139178	0					
ANR	6139247	Callee	define_find		6139178	0					
ANR	6139248	Identifier	define_find		6139178	0					
ANR	6139249	ArgumentList	tok		6139178	1					
ANR	6139250	Argument	tok		6139178	0					
ANR	6139251	Identifier	tok		6139178	0					
ANR	6139252	PrimaryExpression	0		6139178	1					
ANR	6139253	IfStatement	if ( t == '(' )		6139178	4					
ANR	6139254	Condition	t == '('	1192:7:24098:24105	6139178	0	True				
ANR	6139255	EqualityExpression	t == '('		6139178	0		==			
ANR	6139256	Identifier	t		6139178	0					
ANR	6139257	PrimaryExpression	'('		6139178	1					
ANR	6139258	CompoundStatement		15:17:285:285	6139178	1					
ANR	6139259	ExpressionStatement	next_nomacro ( )	1193:4:24114:24129	6139178	0	True				
ANR	6139260	CallExpression	next_nomacro ( )		6139178	0					
ANR	6139261	Callee	next_nomacro		6139178	0					
ANR	6139262	Identifier	next_nomacro		6139178	0					
ANR	6139263	ArgumentList			6139178	1					
ANR	6139264	ExpressionStatement	tok = TOK_CINT	1195:3:24139:24153	6139178	5	True				
ANR	6139265	AssignmentExpression	tok = TOK_CINT		6139178	0		=			
ANR	6139266	Identifier	tok		6139178	0					
ANR	6139267	Identifier	TOK_CINT		6139178	1					
ANR	6139268	ExpressionStatement	tokc . i = c	1196:3:24158:24168	6139178	6	True				
ANR	6139269	AssignmentExpression	tokc . i = c		6139178	0		=			
ANR	6139270	MemberAccess	tokc . i		6139178	0					
ANR	6139271	Identifier	tokc		6139178	0					
ANR	6139272	Identifier	i		6139178	1					
ANR	6139273	Identifier	c		6139178	1					
ANR	6139274	ElseStatement	else		6139178	0					
ANR	6139275	IfStatement	if ( tok >= TOK_IDENT )		6139178	0					
ANR	6139276	Condition	tok >= TOK_IDENT	1197:13:24183:24198	6139178	0	True				
ANR	6139277	RelationalExpression	tok >= TOK_IDENT		6139178	0		>=			
ANR	6139278	Identifier	tok		6139178	0					
ANR	6139279	Identifier	TOK_IDENT		6139178	1					
ANR	6139280	CompoundStatement		20:31:378:378	6139178	1					
ANR	6139281	ExpressionStatement	tok = TOK_CINT	1199:3:24234:24248	6139178	0	True				
ANR	6139282	AssignmentExpression	tok = TOK_CINT		6139178	0		=			
ANR	6139283	Identifier	tok		6139178	0					
ANR	6139284	Identifier	TOK_CINT		6139178	1					
ANR	6139285	ExpressionStatement	tokc . i = 0	1200:3:24253:24263	6139178	1	True				
ANR	6139286	AssignmentExpression	tokc . i = 0		6139178	0		=			
ANR	6139287	MemberAccess	tokc . i		6139178	0					
ANR	6139288	Identifier	tokc		6139178	0					
ANR	6139289	Identifier	i		6139178	1					
ANR	6139290	PrimaryExpression	0		6139178	1					
ANR	6139291	ExpressionStatement	tok_str_add_tok ( & str )	1202:2:24271:24293	6139178	2	True				
ANR	6139292	CallExpression	tok_str_add_tok ( & str )		6139178	0					
ANR	6139293	Callee	tok_str_add_tok		6139178	0					
ANR	6139294	Identifier	tok_str_add_tok		6139178	0					
ANR	6139295	ArgumentList	& str		6139178	1					
ANR	6139296	Argument	& str		6139178	0					
ANR	6139297	UnaryOperationExpression	& str		6139178	0					
ANR	6139298	UnaryOperator	&		6139178	0					
ANR	6139299	Identifier	str		6139178	1					
ANR	6139300	ExpressionStatement	"tok_str_add ( & str , - 1 )"	1204:1:24299:24321	6139178	4	True				
ANR	6139301	CallExpression	"tok_str_add ( & str , - 1 )"		6139178	0					
ANR	6139302	Callee	tok_str_add		6139178	0					
ANR	6139303	Identifier	tok_str_add		6139178	0					
ANR	6139304	ArgumentList	& str		6139178	1					
ANR	6139305	Argument	& str		6139178	0					
ANR	6139306	UnaryOperationExpression	& str		6139178	0					
ANR	6139307	UnaryOperator	&		6139178	0					
ANR	6139308	Identifier	str		6139178	1					
ANR	6139309	Argument	- 1		6139178	1					
ANR	6139310	UnaryOperationExpression	- 1		6139178	0					
ANR	6139311	UnaryOperator	-		6139178	0					
ANR	6139312	PrimaryExpression	1		6139178	1					
ANR	6139313	ExpressionStatement	"tok_str_add ( & str , 0 )"	1205:1:24351:24372	6139178	5	True				
ANR	6139314	CallExpression	"tok_str_add ( & str , 0 )"		6139178	0					
ANR	6139315	Callee	tok_str_add		6139178	0					
ANR	6139316	Identifier	tok_str_add		6139178	0					
ANR	6139317	ArgumentList	& str		6139178	1					
ANR	6139318	Argument	& str		6139178	0					
ANR	6139319	UnaryOperationExpression	& str		6139178	0					
ANR	6139320	UnaryOperator	&		6139178	0					
ANR	6139321	Identifier	str		6139178	1					
ANR	6139322	Argument	0		6139178	1					
ANR	6139323	PrimaryExpression	0		6139178	0					
ANR	6139324	ExpressionStatement	macro_ptr = str . str	1207:1:24417:24436	6139178	6	True				
ANR	6139325	AssignmentExpression	macro_ptr = str . str		6139178	0		=			
ANR	6139326	Identifier	macro_ptr		6139178	0					
ANR	6139327	MemberAccess	str . str		6139178	1					
ANR	6139328	Identifier	str		6139178	0					
ANR	6139329	Identifier	str		6139178	1					
ANR	6139330	ExpressionStatement	next ( )	1208:1:24439:24446	6139178	7	True				
ANR	6139331	CallExpression	next ( )		6139178	0					
ANR	6139332	Callee	next		6139178	0					
ANR	6139333	Identifier	next		6139178	0					
ANR	6139334	ArgumentList			6139178	1					
ANR	6139335	ExpressionStatement	c = expr_const ( )	1209:1:24449:24466	6139178	8	True				
ANR	6139336	AssignmentExpression	c = expr_const ( )		6139178	0		=			
ANR	6139337	Identifier	c		6139178	0					
ANR	6139338	CallExpression	expr_const ( )		6139178	1					
ANR	6139339	Callee	expr_const		6139178	0					
ANR	6139340	Identifier	expr_const		6139178	0					
ANR	6139341	ArgumentList			6139178	1					
ANR	6139342	ExpressionStatement	macro_ptr = NULL	1210:1:24469:24485	6139178	9	True				
ANR	6139343	AssignmentExpression	macro_ptr = NULL		6139178	0		=			
ANR	6139344	Identifier	macro_ptr		6139178	0					
ANR	6139345	Identifier	NULL		6139178	1					
ANR	6139346	ExpressionStatement	tok_str_free ( str . str )	1211:1:24488:24510	6139178	10	True				
ANR	6139347	CallExpression	tok_str_free ( str . str )		6139178	0					
ANR	6139348	Callee	tok_str_free		6139178	0					
ANR	6139349	Identifier	tok_str_free		6139178	0					
ANR	6139350	ArgumentList	str . str		6139178	1					
ANR	6139351	Argument	str . str		6139178	0					
ANR	6139352	MemberAccess	str . str		6139178	0					
ANR	6139353	Identifier	str		6139178	0					
ANR	6139354	Identifier	str		6139178	1					
ANR	6139355	ReturnStatement	return c != 0 ;	1212:1:24513:24526	6139178	11	True				
ANR	6139356	EqualityExpression	c != 0		6139178	0		!=			
ANR	6139357	Identifier	c		6139178	0					
ANR	6139358	PrimaryExpression	0		6139178	1					
ANR	6139359	ReturnType	static int		6139178	1					
ANR	6139360	Identifier	expr_preprocess		6139178	2					
ANR	6139361	ParameterList			6139178	3					
ANR	6139362	CFGEntryNode	ENTRY		6139178		True				
ANR	6139363	CFGExitNode	EXIT		6139178		True				
ANR	6139364	Symbol	expr_const		6139178						
ANR	6139365	Symbol	c		6139178						
ANR	6139366	Symbol	NULL		6139178						
ANR	6139367	Symbol	TOK_IDENT		6139178						
ANR	6139368	Symbol	tokc		6139178						
ANR	6139369	Symbol	TOK_DEFINED		6139178						
ANR	6139370	Symbol	TOK_EOF		6139178						
ANR	6139371	Symbol	TOK_LINEFEED		6139178						
ANR	6139372	Symbol	str		6139178						
ANR	6139373	Symbol	& str		6139178						
ANR	6139374	Symbol	str . str		6139178						
ANR	6139375	Symbol	tok		6139178						
ANR	6139376	Symbol	t		6139178						
ANR	6139377	Symbol	macro_ptr		6139178						
ANR	6139378	Symbol	define_find		6139178						
ANR	6139379	Symbol	tokc . i		6139178						
ANR	6139380	Symbol	TOK_CINT		6139178						
ANR	6139381	Function	tok_print	1216:0:24577:24778							
ANR	6139382	FunctionDef	tok_print (int * str)		6139381	0					
ANR	6139383	CompoundStatement		1217:0:24609:24778	6139381	0					
ANR	6139384	IdentifierDeclStatement	int t ;	1218:1:24612:24617	6139381	0	True				
ANR	6139385	IdentifierDecl	t		6139381	0					
ANR	6139386	IdentifierDeclType	int		6139381	0					
ANR	6139387	Identifier	t		6139381	1					
ANR	6139388	IdentifierDeclStatement	CValue cval ;	1219:1:24620:24631	6139381	1	True				
ANR	6139389	IdentifierDecl	cval		6139381	0					
ANR	6139390	IdentifierDeclType	CValue		6139381	0					
ANR	6139391	Identifier	cval		6139381	1					
ANR	6139392	ExpressionStatement	"printf ( ""<"" )"	1221:1:24635:24647	6139381	2	True				
ANR	6139393	CallExpression	"printf ( ""<"" )"		6139381	0					
ANR	6139394	Callee	printf		6139381	0					
ANR	6139395	Identifier	printf		6139381	0					
ANR	6139396	ArgumentList	"""<"""		6139381	1					
ANR	6139397	Argument	"""<"""		6139381	0					
ANR	6139398	PrimaryExpression	"""<"""		6139381	0					
ANR	6139399	WhileStatement	while ( 1 )		6139381	3					
ANR	6139400	Condition	1	1222:8:24657:24657	6139381	0	True				
ANR	6139401	PrimaryExpression	1		6139381	0					
ANR	6139402	CompoundStatement		6:11:50:50	6139381	1					
ANR	6139403	ExpressionStatement	"TOK_GET ( & t , & str , & cval )"	1223:2:24664:24689	6139381	0	True				
ANR	6139404	CallExpression	"TOK_GET ( & t , & str , & cval )"		6139381	0					
ANR	6139405	Callee	TOK_GET		6139381	0					
ANR	6139406	Identifier	TOK_GET		6139381	0					
ANR	6139407	ArgumentList	& t		6139381	1					
ANR	6139408	Argument	& t		6139381	0					
ANR	6139409	UnaryOperationExpression	& t		6139381	0					
ANR	6139410	UnaryOperator	&		6139381	0					
ANR	6139411	Identifier	t		6139381	1					
ANR	6139412	Argument	& str		6139381	1					
ANR	6139413	UnaryOperationExpression	& str		6139381	0					
ANR	6139414	UnaryOperator	&		6139381	0					
ANR	6139415	Identifier	str		6139381	1					
ANR	6139416	Argument	& cval		6139381	2					
ANR	6139417	UnaryOperationExpression	& cval		6139381	0					
ANR	6139418	UnaryOperator	&		6139381	0					
ANR	6139419	Identifier	cval		6139381	1					
ANR	6139420	IfStatement	if ( ! t )		6139381	1					
ANR	6139421	Condition	! t	1224:6:24697:24698	6139381	0	True				
ANR	6139422	UnaryOperationExpression	! t		6139381	0					
ANR	6139423	UnaryOperator	!		6139381	0					
ANR	6139424	Identifier	t		6139381	1					
ANR	6139425	CompoundStatement		8:10:91:91	6139381	1					
ANR	6139426	BreakStatement	break ;	1225:3:24706:24711	6139381	0	True				
ANR	6139427	ExpressionStatement	"printf ( ""%s"" , get_tok_str ( t , & cval ) )"	1227:2:24719:24756	6139381	2	True				
ANR	6139428	CallExpression	"printf ( ""%s"" , get_tok_str ( t , & cval ) )"		6139381	0					
ANR	6139429	Callee	printf		6139381	0					
ANR	6139430	Identifier	printf		6139381	0					
ANR	6139431	ArgumentList	"""%s"""		6139381	1					
ANR	6139432	Argument	"""%s"""		6139381	0					
ANR	6139433	PrimaryExpression	"""%s"""		6139381	0					
ANR	6139434	Argument	"get_tok_str ( t , & cval )"		6139381	1					
ANR	6139435	CallExpression	"get_tok_str ( t , & cval )"		6139381	0					
ANR	6139436	Callee	get_tok_str		6139381	0					
ANR	6139437	Identifier	get_tok_str		6139381	0					
ANR	6139438	ArgumentList	t		6139381	1					
ANR	6139439	Argument	t		6139381	0					
ANR	6139440	Identifier	t		6139381	0					
ANR	6139441	Argument	& cval		6139381	1					
ANR	6139442	UnaryOperationExpression	& cval		6139381	0					
ANR	6139443	UnaryOperator	&		6139381	0					
ANR	6139444	Identifier	cval		6139381	1					
ANR	6139445	ExpressionStatement	"printf ( "">\\n"" )"	1229:1:24762:24776	6139381	4	True				
ANR	6139446	CallExpression	"printf ( "">\\n"" )"		6139381	0					
ANR	6139447	Callee	printf		6139381	0					
ANR	6139448	Identifier	printf		6139381	0					
ANR	6139449	ArgumentList	""">\\n"""		6139381	1					
ANR	6139450	Argument	""">\\n"""		6139381	0					
ANR	6139451	PrimaryExpression	""">\\n"""		6139381	0					
ANR	6139452	ReturnType	static void		6139381	1					
ANR	6139453	Identifier	tok_print		6139381	2					
ANR	6139454	ParameterList	int * str		6139381	3					
ANR	6139455	Parameter	int * str	1216:22:24599:24606	6139381	0	True				
ANR	6139456	ParameterType	int *		6139381	0					
ANR	6139457	Identifier	str		6139381	1					
ANR	6139458	CFGEntryNode	ENTRY		6139381		True				
ANR	6139459	CFGExitNode	EXIT		6139381		True				
ANR	6139460	Symbol	str		6139381						
ANR	6139461	Symbol	cval		6139381						
ANR	6139462	Symbol	& str		6139381						
ANR	6139463	Symbol	& cval		6139381						
ANR	6139464	Symbol	t		6139381						
ANR	6139465	Symbol	get_tok_str		6139381						
ANR	6139466	Symbol	& t		6139381						
ANR	6139467	Function	parse_define	1234:0:24814:26456							
ANR	6139468	FunctionDef	parse_define ()		6139467	0					
ANR	6139469	CompoundStatement		1235:0:24846:26456	6139467	0					
ANR	6139470	IdentifierDeclStatement	"Sym * s , * first , * * ps ;"	1236:1:24849:24869	6139467	0	True				
ANR	6139471	IdentifierDecl	* s		6139467	0					
ANR	6139472	IdentifierDeclType	Sym *		6139467	0					
ANR	6139473	Identifier	s		6139467	1					
ANR	6139474	IdentifierDecl	* first		6139467	1					
ANR	6139475	IdentifierDeclType	Sym *		6139467	0					
ANR	6139476	Identifier	first		6139467	1					
ANR	6139477	IdentifierDecl	* * ps		6139467	2					
ANR	6139478	IdentifierDeclType	Sym * *		6139467	0					
ANR	6139479	Identifier	ps		6139467	1					
ANR	6139480	IdentifierDeclStatement	"int v , t , varg , is_vaargs , spc ;"	1237:1:24872:24902	6139467	1	True				
ANR	6139481	IdentifierDecl	v		6139467	0					
ANR	6139482	IdentifierDeclType	int		6139467	0					
ANR	6139483	Identifier	v		6139467	1					
ANR	6139484	IdentifierDecl	t		6139467	1					
ANR	6139485	IdentifierDeclType	int		6139467	0					
ANR	6139486	Identifier	t		6139467	1					
ANR	6139487	IdentifierDecl	varg		6139467	2					
ANR	6139488	IdentifierDeclType	int		6139467	0					
ANR	6139489	Identifier	varg		6139467	1					
ANR	6139490	IdentifierDecl	is_vaargs		6139467	3					
ANR	6139491	IdentifierDeclType	int		6139467	0					
ANR	6139492	Identifier	is_vaargs		6139467	1					
ANR	6139493	IdentifierDecl	spc		6139467	4					
ANR	6139494	IdentifierDeclType	int		6139467	0					
ANR	6139495	Identifier	spc		6139467	1					
ANR	6139496	IdentifierDeclStatement	TokenString str ;	1238:1:24905:24920	6139467	2	True				
ANR	6139497	IdentifierDecl	str		6139467	0					
ANR	6139498	IdentifierDeclType	TokenString		6139467	0					
ANR	6139499	Identifier	str		6139467	1					
ANR	6139500	ExpressionStatement	v = tok	1240:1:24924:24931	6139467	3	True				
ANR	6139501	AssignmentExpression	v = tok		6139467	0		=			
ANR	6139502	Identifier	v		6139467	0					
ANR	6139503	Identifier	tok		6139467	1					
ANR	6139504	IfStatement	if ( v < TOK_IDENT )		6139467	4					
ANR	6139505	Condition	v < TOK_IDENT	1241:5:24938:24950	6139467	0	True				
ANR	6139506	RelationalExpression	v < TOK_IDENT		6139467	0		<			
ANR	6139507	Identifier	v		6139467	0					
ANR	6139508	Identifier	TOK_IDENT		6139467	1					
ANR	6139509	CompoundStatement		7:20:106:106	6139467	1					
ANR	6139510	ExpressionStatement	"tcc_error ( ""invalid macro name '%s'"" , get_tok_str ( tok , & tokc ) )"	1242:2:24957:25020	6139467	0	True				
ANR	6139511	CallExpression	"tcc_error ( ""invalid macro name '%s'"" , get_tok_str ( tok , & tokc ) )"		6139467	0					
ANR	6139512	Callee	tcc_error		6139467	0					
ANR	6139513	Identifier	tcc_error		6139467	0					
ANR	6139514	ArgumentList	"""invalid macro name '%s'"""		6139467	1					
ANR	6139515	Argument	"""invalid macro name '%s'"""		6139467	0					
ANR	6139516	PrimaryExpression	"""invalid macro name '%s'"""		6139467	0					
ANR	6139517	Argument	"get_tok_str ( tok , & tokc )"		6139467	1					
ANR	6139518	CallExpression	"get_tok_str ( tok , & tokc )"		6139467	0					
ANR	6139519	Callee	get_tok_str		6139467	0					
ANR	6139520	Identifier	get_tok_str		6139467	0					
ANR	6139521	ArgumentList	tok		6139467	1					
ANR	6139522	Argument	tok		6139467	0					
ANR	6139523	Identifier	tok		6139467	0					
ANR	6139524	Argument	& tokc		6139467	1					
ANR	6139525	UnaryOperationExpression	& tokc		6139467	0					
ANR	6139526	UnaryOperator	&		6139467	0					
ANR	6139527	Identifier	tokc		6139467	1					
ANR	6139528	ExpressionStatement	first = NULL	1245:1:25072:25084	6139467	5	True				
ANR	6139529	AssignmentExpression	first = NULL		6139467	0		=			
ANR	6139530	Identifier	first		6139467	0					
ANR	6139531	Identifier	NULL		6139467	1					
ANR	6139532	ExpressionStatement	t = MACRO_OBJ	1246:1:25087:25100	6139467	6	True				
ANR	6139533	AssignmentExpression	t = MACRO_OBJ		6139467	0		=			
ANR	6139534	Identifier	t		6139467	0					
ANR	6139535	Identifier	MACRO_OBJ		6139467	1					
ANR	6139536	ExpressionStatement	next_nomacro_spc ( )	1248:1:25165:25184	6139467	7	True				
ANR	6139537	CallExpression	next_nomacro_spc ( )		6139467	0					
ANR	6139538	Callee	next_nomacro_spc		6139467	0					
ANR	6139539	Identifier	next_nomacro_spc		6139467	0					
ANR	6139540	ArgumentList			6139467	1					
ANR	6139541	IfStatement	if ( tok == '(' )		6139467	8					
ANR	6139542	Condition	tok == '('	1249:5:25191:25200	6139467	0	True				
ANR	6139543	EqualityExpression	tok == '('		6139467	0		==			
ANR	6139544	Identifier	tok		6139467	0					
ANR	6139545	PrimaryExpression	'('		6139467	1					
ANR	6139546	CompoundStatement		15:17:356:356	6139467	1					
ANR	6139547	ExpressionStatement	next_nomacro ( )	1250:2:25207:25222	6139467	0	True				
ANR	6139548	CallExpression	next_nomacro ( )		6139467	0					
ANR	6139549	Callee	next_nomacro		6139467	0					
ANR	6139550	Identifier	next_nomacro		6139467	0					
ANR	6139551	ArgumentList			6139467	1					
ANR	6139552	ExpressionStatement	ps = & first	1251:2:25226:25237	6139467	1	True				
ANR	6139553	AssignmentExpression	ps = & first		6139467	0		=			
ANR	6139554	Identifier	ps		6139467	0					
ANR	6139555	UnaryOperationExpression	& first		6139467	1					
ANR	6139556	UnaryOperator	&		6139467	0					
ANR	6139557	Identifier	first		6139467	1					
ANR	6139558	WhileStatement	while ( tok != ')' )		6139467	2					
ANR	6139559	Condition	tok != ')'	1252:9:25248:25257	6139467	0	True				
ANR	6139560	EqualityExpression	tok != ')'		6139467	0		!=			
ANR	6139561	Identifier	tok		6139467	0					
ANR	6139562	PrimaryExpression	')'		6139467	1					
ANR	6139563	CompoundStatement		18:21:413:413	6139467	1					
ANR	6139564	ExpressionStatement	varg = tok	1253:3:25265:25275	6139467	0	True				
ANR	6139565	AssignmentExpression	varg = tok		6139467	0		=			
ANR	6139566	Identifier	varg		6139467	0					
ANR	6139567	Identifier	tok		6139467	1					
ANR	6139568	ExpressionStatement	next_nomacro ( )	1254:3:25280:25295	6139467	1	True				
ANR	6139569	CallExpression	next_nomacro ( )		6139467	0					
ANR	6139570	Callee	next_nomacro		6139467	0					
ANR	6139571	Identifier	next_nomacro		6139467	0					
ANR	6139572	ArgumentList			6139467	1					
ANR	6139573	ExpressionStatement	is_vaargs = 0	1255:3:25300:25313	6139467	2	True				
ANR	6139574	AssignmentExpression	is_vaargs = 0		6139467	0		=			
ANR	6139575	Identifier	is_vaargs		6139467	0					
ANR	6139576	PrimaryExpression	0		6139467	1					
ANR	6139577	IfStatement	if ( varg == TOK_DOTS )		6139467	3					
ANR	6139578	Condition	varg == TOK_DOTS	1256:7:25322:25337	6139467	0	True				
ANR	6139579	EqualityExpression	varg == TOK_DOTS		6139467	0		==			
ANR	6139580	Identifier	varg		6139467	0					
ANR	6139581	Identifier	TOK_DOTS		6139467	1					
ANR	6139582	CompoundStatement		22:25:493:493	6139467	1					
ANR	6139583	ExpressionStatement	varg = TOK___VA_ARGS__	1257:4:25346:25368	6139467	0	True				
ANR	6139584	AssignmentExpression	varg = TOK___VA_ARGS__		6139467	0		=			
ANR	6139585	Identifier	varg		6139467	0					
ANR	6139586	Identifier	TOK___VA_ARGS__		6139467	1					
ANR	6139587	ExpressionStatement	is_vaargs = 1	1258:4:25374:25387	6139467	1	True				
ANR	6139588	AssignmentExpression	is_vaargs = 1		6139467	0		=			
ANR	6139589	Identifier	is_vaargs		6139467	0					
ANR	6139590	PrimaryExpression	1		6139467	1					
ANR	6139591	ElseStatement	else		6139467	0					
ANR	6139592	IfStatement	if ( tok == TOK_DOTS && gnu_ext )		6139467	0					
ANR	6139593	Condition	tok == TOK_DOTS && gnu_ext	1259:14:25403:25428	6139467	0	True				
ANR	6139594	AndExpression	tok == TOK_DOTS && gnu_ext		6139467	0		&&			
ANR	6139595	EqualityExpression	tok == TOK_DOTS		6139467	0		==			
ANR	6139596	Identifier	tok		6139467	0					
ANR	6139597	Identifier	TOK_DOTS		6139467	1					
ANR	6139598	Identifier	gnu_ext		6139467	1					
ANR	6139599	CompoundStatement		25:42:584:584	6139467	1					
ANR	6139600	ExpressionStatement	is_vaargs = 1	1260:4:25437:25450	6139467	0	True				
ANR	6139601	AssignmentExpression	is_vaargs = 1		6139467	0		=			
ANR	6139602	Identifier	is_vaargs		6139467	0					
ANR	6139603	PrimaryExpression	1		6139467	1					
ANR	6139604	ExpressionStatement	next_nomacro ( )	1261:4:25456:25471	6139467	1	True				
ANR	6139605	CallExpression	next_nomacro ( )		6139467	0					
ANR	6139606	Callee	next_nomacro		6139467	0					
ANR	6139607	Identifier	next_nomacro		6139467	0					
ANR	6139608	ArgumentList			6139467	1					
ANR	6139609	IfStatement	if ( varg < TOK_IDENT )		6139467	4					
ANR	6139610	Condition	varg < TOK_IDENT	1263:7:25485:25500	6139467	0	True				
ANR	6139611	RelationalExpression	varg < TOK_IDENT		6139467	0		<			
ANR	6139612	Identifier	varg		6139467	0					
ANR	6139613	Identifier	TOK_IDENT		6139467	1					
ANR	6139614	CompoundStatement		29:25:656:656	6139467	1					
ANR	6139615	ExpressionStatement	"tcc_error ( ""badly punctuated parameter list"" )"	1264:4:25509:25554	6139467	0	True				
ANR	6139616	CallExpression	"tcc_error ( ""badly punctuated parameter list"" )"		6139467	0					
ANR	6139617	Callee	tcc_error		6139467	0					
ANR	6139618	Identifier	tcc_error		6139467	0					
ANR	6139619	ArgumentList	"""badly punctuated parameter list"""		6139467	1					
ANR	6139620	Argument	"""badly punctuated parameter list"""		6139467	0					
ANR	6139621	PrimaryExpression	"""badly punctuated parameter list"""		6139467	0					
ANR	6139622	ExpressionStatement	"s = sym_push2 ( & define_stack , varg | SYM_FIELD , is_vaargs , 0 )"	1266:3:25564:25625	6139467	5	True				
ANR	6139623	AssignmentExpression	"s = sym_push2 ( & define_stack , varg | SYM_FIELD , is_vaargs , 0 )"		6139467	0		=			
ANR	6139624	Identifier	s		6139467	0					
ANR	6139625	CallExpression	"sym_push2 ( & define_stack , varg | SYM_FIELD , is_vaargs , 0 )"		6139467	1					
ANR	6139626	Callee	sym_push2		6139467	0					
ANR	6139627	Identifier	sym_push2		6139467	0					
ANR	6139628	ArgumentList	& define_stack		6139467	1					
ANR	6139629	Argument	& define_stack		6139467	0					
ANR	6139630	UnaryOperationExpression	& define_stack		6139467	0					
ANR	6139631	UnaryOperator	&		6139467	0					
ANR	6139632	Identifier	define_stack		6139467	1					
ANR	6139633	Argument	varg | SYM_FIELD		6139467	1					
ANR	6139634	InclusiveOrExpression	varg | SYM_FIELD		6139467	0		|			
ANR	6139635	Identifier	varg		6139467	0					
ANR	6139636	Identifier	SYM_FIELD		6139467	1					
ANR	6139637	Argument	is_vaargs		6139467	2					
ANR	6139638	Identifier	is_vaargs		6139467	0					
ANR	6139639	Argument	0		6139467	3					
ANR	6139640	PrimaryExpression	0		6139467	0					
ANR	6139641	IfStatement	if ( ! s )		6139467	6					
ANR	6139642	Condition	! s	1267:7:25634:25635	6139467	0	True				
ANR	6139643	UnaryOperationExpression	! s		6139467	0					
ANR	6139644	UnaryOperator	!		6139467	0					
ANR	6139645	Identifier	s		6139467	1					
ANR	6139646	CompoundStatement		33:11:791:791	6139467	1					
ANR	6139647	ReturnStatement	return ;	1268:4:25644:25650	6139467	0	True				
ANR	6139648	ExpressionStatement	* ps = s	1270:3:25660:25667	6139467	7	True				
ANR	6139649	AssignmentExpression	* ps = s		6139467	0		=			
ANR	6139650	UnaryOperationExpression	* ps		6139467	0					
ANR	6139651	UnaryOperator	*		6139467	0					
ANR	6139652	Identifier	ps		6139467	1					
ANR	6139653	Identifier	s		6139467	1					
ANR	6139654	ExpressionStatement	ps = & s -> next	1271:3:25672:25685	6139467	8	True				
ANR	6139655	AssignmentExpression	ps = & s -> next		6139467	0		=			
ANR	6139656	Identifier	ps		6139467	0					
ANR	6139657	UnaryOperationExpression	& s -> next		6139467	1					
ANR	6139658	UnaryOperator	&		6139467	0					
ANR	6139659	PtrMemberAccess	s -> next		6139467	1					
ANR	6139660	Identifier	s		6139467	0					
ANR	6139661	Identifier	next		6139467	1					
ANR	6139662	IfStatement	"if ( tok != ',' )"		6139467	9					
ANR	6139663	Condition	"tok != ','"	1272:7:25694:25703	6139467	0	True				
ANR	6139664	EqualityExpression	"tok != ','"		6139467	0		!=			
ANR	6139665	Identifier	tok		6139467	0					
ANR	6139666	PrimaryExpression	"','"		6139467	1					
ANR	6139667	CompoundStatement		38:19:859:859	6139467	1					
ANR	6139668	BreakStatement	break ;	1273:4:25712:25717	6139467	0	True				
ANR	6139669	ExpressionStatement	next_nomacro ( )	1275:3:25727:25742	6139467	10	True				
ANR	6139670	CallExpression	next_nomacro ( )		6139467	0					
ANR	6139671	Callee	next_nomacro		6139467	0					
ANR	6139672	Identifier	next_nomacro		6139467	0					
ANR	6139673	ArgumentList			6139467	1					
ANR	6139674	IfStatement	if ( tok == ')' )		6139467	3					
ANR	6139675	Condition	tok == ')'	1277:6:25754:25763	6139467	0	True				
ANR	6139676	EqualityExpression	tok == ')'		6139467	0		==			
ANR	6139677	Identifier	tok		6139467	0					
ANR	6139678	PrimaryExpression	')'		6139467	1					
ANR	6139679	CompoundStatement		43:18:919:919	6139467	1					
ANR	6139680	ExpressionStatement	next_nomacro_spc ( )	1278:3:25771:25790	6139467	0	True				
ANR	6139681	CallExpression	next_nomacro_spc ( )		6139467	0					
ANR	6139682	Callee	next_nomacro_spc		6139467	0					
ANR	6139683	Identifier	next_nomacro_spc		6139467	0					
ANR	6139684	ArgumentList			6139467	1					
ANR	6139685	ExpressionStatement	t = MACRO_FUNC	1280:2:25798:25812	6139467	4	True				
ANR	6139686	AssignmentExpression	t = MACRO_FUNC		6139467	0		=			
ANR	6139687	Identifier	t		6139467	0					
ANR	6139688	Identifier	MACRO_FUNC		6139467	1					
ANR	6139689	ExpressionStatement	tok_str_new ( & str )	1282:1:25818:25836	6139467	9	True				
ANR	6139690	CallExpression	tok_str_new ( & str )		6139467	0					
ANR	6139691	Callee	tok_str_new		6139467	0					
ANR	6139692	Identifier	tok_str_new		6139467	0					
ANR	6139693	ArgumentList	& str		6139467	1					
ANR	6139694	Argument	& str		6139467	0					
ANR	6139695	UnaryOperationExpression	& str		6139467	0					
ANR	6139696	UnaryOperator	&		6139467	0					
ANR	6139697	Identifier	str		6139467	1					
ANR	6139698	ExpressionStatement	spc = 2	1283:1:25839:25846	6139467	10	True				
ANR	6139699	AssignmentExpression	spc = 2		6139467	0		=			
ANR	6139700	Identifier	spc		6139467	0					
ANR	6139701	PrimaryExpression	2		6139467	1					
ANR	6139702	WhileStatement	while ( tok != TOK_LINEFEED && tok != TOK_EOF )		6139467	11					
ANR	6139703	Condition	tok != TOK_LINEFEED && tok != TOK_EOF	1285:8:25903:25939	6139467	0	True				
ANR	6139704	AndExpression	tok != TOK_LINEFEED && tok != TOK_EOF		6139467	0		&&			
ANR	6139705	EqualityExpression	tok != TOK_LINEFEED		6139467	0		!=			
ANR	6139706	Identifier	tok		6139467	0					
ANR	6139707	Identifier	TOK_LINEFEED		6139467	1					
ANR	6139708	EqualityExpression	tok != TOK_EOF		6139467	1		!=			
ANR	6139709	Identifier	tok		6139467	0					
ANR	6139710	Identifier	TOK_EOF		6139467	1					
ANR	6139711	CompoundStatement		51:47:1095:1095	6139467	1					
ANR	6139712	IfStatement	if ( TOK_TWOSHARPS == tok )		6139467	0					
ANR	6139713	Condition	TOK_TWOSHARPS == tok	1287:6:25996:26015	6139467	0	True				
ANR	6139714	EqualityExpression	TOK_TWOSHARPS == tok		6139467	0		==			
ANR	6139715	Identifier	TOK_TWOSHARPS		6139467	0					
ANR	6139716	Identifier	tok		6139467	1					
ANR	6139717	CompoundStatement		53:28:1171:1171	6139467	1					
ANR	6139718	IfStatement	if ( 1 == spc )		6139467	0					
ANR	6139719	Condition	1 == spc	1288:7:26027:26034	6139467	0	True				
ANR	6139720	EqualityExpression	1 == spc		6139467	0		==			
ANR	6139721	PrimaryExpression	1		6139467	0					
ANR	6139722	Identifier	spc		6139467	1					
ANR	6139723	CompoundStatement		54:17:1190:1190	6139467	1					
ANR	6139724	ExpressionStatement	-- str . len	1289:4:26043:26052	6139467	0	True				
ANR	6139725	UnaryExpression	-- str . len		6139467	0					
ANR	6139726	IncDec	--		6139467	0					
ANR	6139727	MemberAccess	str . len		6139467	1					
ANR	6139728	Identifier	str		6139467	0					
ANR	6139729	Identifier	len		6139467	1					
ANR	6139730	ExpressionStatement	spc = 2	1291:3:26062:26069	6139467	1	True				
ANR	6139731	AssignmentExpression	spc = 2		6139467	0		=			
ANR	6139732	Identifier	spc		6139467	0					
ANR	6139733	PrimaryExpression	2		6139467	1					
ANR	6139734	ElseStatement	else		6139467	0					
ANR	6139735	IfStatement	if ( '#' == tok )		6139467	0					
ANR	6139736	Condition	'#' == tok	1292:13:26084:26093	6139467	0	True				
ANR	6139737	EqualityExpression	'#' == tok		6139467	0		==			
ANR	6139738	PrimaryExpression	'#'		6139467	0					
ANR	6139739	Identifier	tok		6139467	1					
ANR	6139740	CompoundStatement		58:25:1249:1249	6139467	1					
ANR	6139741	ExpressionStatement	spc = 2	1293:3:26101:26108	6139467	0	True				
ANR	6139742	AssignmentExpression	spc = 2		6139467	0		=			
ANR	6139743	Identifier	spc		6139467	0					
ANR	6139744	PrimaryExpression	2		6139467	1					
ANR	6139745	ElseStatement	else		6139467	0					
ANR	6139746	IfStatement	"if ( check_space ( tok , & spc ) )"		6139467	0					
ANR	6139747	Condition	"check_space ( tok , & spc )"	1294:13:26123:26145	6139467	0	True				
ANR	6139748	CallExpression	"check_space ( tok , & spc )"		6139467	0					
ANR	6139749	Callee	check_space		6139467	0					
ANR	6139750	Identifier	check_space		6139467	0					
ANR	6139751	ArgumentList	tok		6139467	1					
ANR	6139752	Argument	tok		6139467	0					
ANR	6139753	Identifier	tok		6139467	0					
ANR	6139754	Argument	& spc		6139467	1					
ANR	6139755	UnaryOperationExpression	& spc		6139467	0					
ANR	6139756	UnaryOperator	&		6139467	0					
ANR	6139757	Identifier	spc		6139467	1					
ANR	6139758	CompoundStatement		60:38:1301:1301	6139467	1					
ANR	6139759	GotoStatement	goto skip ;	1295:3:26153:26162	6139467	0	True				
ANR	6139760	Identifier	skip		6139467	0					
ANR	6139761	ExpressionStatement	"tok_str_add2 ( & str , tok , & tokc )"	1297:2:26170:26201	6139467	1	True				
ANR	6139762	CallExpression	"tok_str_add2 ( & str , tok , & tokc )"		6139467	0					
ANR	6139763	Callee	tok_str_add2		6139467	0					
ANR	6139764	Identifier	tok_str_add2		6139467	0					
ANR	6139765	ArgumentList	& str		6139467	1					
ANR	6139766	Argument	& str		6139467	0					
ANR	6139767	UnaryOperationExpression	& str		6139467	0					
ANR	6139768	UnaryOperator	&		6139467	0					
ANR	6139769	Identifier	str		6139467	1					
ANR	6139770	Argument	tok		6139467	1					
ANR	6139771	Identifier	tok		6139467	0					
ANR	6139772	Argument	& tokc		6139467	2					
ANR	6139773	UnaryOperationExpression	& tokc		6139467	0					
ANR	6139774	UnaryOperator	&		6139467	0					
ANR	6139775	Identifier	tokc		6139467	1					
ANR	6139776	Label	skip :	1298:0:26203:26207	6139467	2	True				
ANR	6139777	Identifier	skip		6139467	0					
ANR	6139778	ExpressionStatement	next_nomacro_spc ( )	1299:2:26211:26230	6139467	3	True				
ANR	6139779	CallExpression	next_nomacro_spc ( )		6139467	0					
ANR	6139780	Callee	next_nomacro_spc		6139467	0					
ANR	6139781	Identifier	next_nomacro_spc		6139467	0					
ANR	6139782	ArgumentList			6139467	1					
ANR	6139783	IfStatement	if ( spc == 1 )		6139467	12					
ANR	6139784	Condition	spc == 1	1301:5:26240:26247	6139467	0	True				
ANR	6139785	EqualityExpression	spc == 1		6139467	0		==			
ANR	6139786	Identifier	spc		6139467	0					
ANR	6139787	PrimaryExpression	1		6139467	1					
ANR	6139788	CompoundStatement		67:15:1403:1403	6139467	1					
ANR	6139789	ExpressionStatement	-- str . len	1302:2:26254:26263	6139467	0	True				
ANR	6139790	UnaryExpression	-- str . len		6139467	0					
ANR	6139791	IncDec	--		6139467	0					
ANR	6139792	MemberAccess	str . len		6139467	1					
ANR	6139793	Identifier	str		6139467	0					
ANR	6139794	Identifier	len		6139467	1					
ANR	6139795	ExpressionStatement	"tok_str_add ( & str , 0 )"	1304:1:26297:26318	6139467	13	True				
ANR	6139796	CallExpression	"tok_str_add ( & str , 0 )"		6139467	0					
ANR	6139797	Callee	tok_str_add		6139467	0					
ANR	6139798	Identifier	tok_str_add		6139467	0					
ANR	6139799	ArgumentList	& str		6139467	1					
ANR	6139800	Argument	& str		6139467	0					
ANR	6139801	UnaryOperationExpression	& str		6139467	0					
ANR	6139802	UnaryOperator	&		6139467	0					
ANR	6139803	Identifier	str		6139467	1					
ANR	6139804	Argument	0		6139467	1					
ANR	6139805	PrimaryExpression	0		6139467	0					
ANR	6139806	ExpressionStatement	"printf ( ""define %s %d: "" , get_tok_str ( v , NULL ) , t )"	1306:1:26337:26388	6139467	14	True				
ANR	6139807	CallExpression	"printf ( ""define %s %d: "" , get_tok_str ( v , NULL ) , t )"		6139467	0					
ANR	6139808	Callee	printf		6139467	0					
ANR	6139809	Identifier	printf		6139467	0					
ANR	6139810	ArgumentList	"""define %s %d: """		6139467	1					
ANR	6139811	Argument	"""define %s %d: """		6139467	0					
ANR	6139812	PrimaryExpression	"""define %s %d: """		6139467	0					
ANR	6139813	Argument	"get_tok_str ( v , NULL )"		6139467	1					
ANR	6139814	CallExpression	"get_tok_str ( v , NULL )"		6139467	0					
ANR	6139815	Callee	get_tok_str		6139467	0					
ANR	6139816	Identifier	get_tok_str		6139467	0					
ANR	6139817	ArgumentList	v		6139467	1					
ANR	6139818	Argument	v		6139467	0					
ANR	6139819	Identifier	v		6139467	0					
ANR	6139820	Argument	NULL		6139467	1					
ANR	6139821	Identifier	NULL		6139467	0					
ANR	6139822	Argument	t		6139467	2					
ANR	6139823	Identifier	t		6139467	0					
ANR	6139824	ExpressionStatement	tok_print ( str . str )	1307:1:26391:26410	6139467	15	True				
ANR	6139825	CallExpression	tok_print ( str . str )		6139467	0					
ANR	6139826	Callee	tok_print		6139467	0					
ANR	6139827	Identifier	tok_print		6139467	0					
ANR	6139828	ArgumentList	str . str		6139467	1					
ANR	6139829	Argument	str . str		6139467	0					
ANR	6139830	MemberAccess	str . str		6139467	0					
ANR	6139831	Identifier	str		6139467	0					
ANR	6139832	Identifier	str		6139467	1					
ANR	6139833	ExpressionStatement	"define_push ( v , t , str . str , first )"	1309:1:26420:26454	6139467	16	True				
ANR	6139834	CallExpression	"define_push ( v , t , str . str , first )"		6139467	0					
ANR	6139835	Callee	define_push		6139467	0					
ANR	6139836	Identifier	define_push		6139467	0					
ANR	6139837	ArgumentList	v		6139467	1					
ANR	6139838	Argument	v		6139467	0					
ANR	6139839	Identifier	v		6139467	0					
ANR	6139840	Argument	t		6139467	1					
ANR	6139841	Identifier	t		6139467	0					
ANR	6139842	Argument	str . str		6139467	2					
ANR	6139843	MemberAccess	str . str		6139467	0					
ANR	6139844	Identifier	str		6139467	0					
ANR	6139845	Identifier	str		6139467	1					
ANR	6139846	Argument	first		6139467	3					
ANR	6139847	Identifier	first		6139467	0					
ANR	6139848	ReturnType	ST_FUNC void		6139467	1					
ANR	6139849	Identifier	parse_define		6139467	2					
ANR	6139850	ParameterList			6139467	3					
ANR	6139851	CFGEntryNode	ENTRY		6139467		True				
ANR	6139852	CFGExitNode	EXIT		6139467		True				
ANR	6139853	Symbol	& define_stack		6139467						
ANR	6139854	Symbol	ps		6139467						
ANR	6139855	Symbol	get_tok_str		6139467						
ANR	6139856	Symbol	& spc		6139467						
ANR	6139857	Symbol	TOK_LINEFEED		6139467						
ANR	6139858	Symbol	sym_push2		6139467						
ANR	6139859	Symbol	& str		6139467						
ANR	6139860	Symbol	str . str		6139467						
ANR	6139861	Symbol	tok		6139467						
ANR	6139862	Symbol	SYM_FIELD		6139467						
ANR	6139863	Symbol	varg		6139467						
ANR	6139864	Symbol	& tokc		6139467						
ANR	6139865	Symbol	& first		6139467						
ANR	6139866	Symbol	NULL		6139467						
ANR	6139867	Symbol	TOK_IDENT		6139467						
ANR	6139868	Symbol	gnu_ext		6139467						
ANR	6139869	Symbol	& s -> next		6139467						
ANR	6139870	Symbol	spc		6139467						
ANR	6139871	Symbol	TOK___VA_ARGS__		6139467						
ANR	6139872	Symbol	* ps		6139467						
ANR	6139873	Symbol	TOK_EOF		6139467						
ANR	6139874	Symbol	str		6139467						
ANR	6139875	Symbol	MACRO_OBJ		6139467						
ANR	6139876	Symbol	s		6139467						
ANR	6139877	Symbol	is_vaargs		6139467						
ANR	6139878	Symbol	t		6139467						
ANR	6139879	Symbol	check_space		6139467						
ANR	6139880	Symbol	v		6139467						
ANR	6139881	Symbol	TOK_TWOSHARPS		6139467						
ANR	6139882	Symbol	MACRO_FUNC		6139467						
ANR	6139883	Symbol	TOK_DOTS		6139467						
ANR	6139884	Symbol	first		6139467						
ANR	6139885	Function	hash_cached_include	1312:0:26459:26726							
ANR	6139886	FunctionDef	hash_cached_include (const char * filename)		6139885	0					
ANR	6139887	CompoundStatement		1313:0:26519:26726	6139885	0					
ANR	6139888	IdentifierDeclStatement	const unsigned char * s ;	1314:1:26522:26544	6139885	0	True				
ANR	6139889	IdentifierDecl	* s		6139885	0					
ANR	6139890	IdentifierDeclType	const unsigned char *		6139885	0					
ANR	6139891	Identifier	s		6139885	1					
ANR	6139892	IdentifierDeclStatement	unsigned int h ;	1315:1:26547:26561	6139885	1	True				
ANR	6139893	IdentifierDecl	h		6139885	0					
ANR	6139894	IdentifierDeclType	unsigned int		6139885	0					
ANR	6139895	Identifier	h		6139885	1					
ANR	6139896	ExpressionStatement	h = TOK_HASH_INIT	1317:1:26565:26582	6139885	2	True				
ANR	6139897	AssignmentExpression	h = TOK_HASH_INIT		6139885	0		=			
ANR	6139898	Identifier	h		6139885	0					
ANR	6139899	Identifier	TOK_HASH_INIT		6139885	1					
ANR	6139900	ExpressionStatement	s = ( const unsigned char * ) filename	1318:1:26585:26621	6139885	3	True				
ANR	6139901	AssignmentExpression	s = ( const unsigned char * ) filename		6139885	0		=			
ANR	6139902	Identifier	s		6139885	0					
ANR	6139903	CastExpression	( const unsigned char * ) filename		6139885	1					
ANR	6139904	CastTarget	const unsigned char *		6139885	0					
ANR	6139905	Identifier	filename		6139885	1					
ANR	6139906	WhileStatement	while ( * s )		6139885	4					
ANR	6139907	Condition	* s	1319:8:26631:26632	6139885	0	True				
ANR	6139908	UnaryOperationExpression	* s		6139885	0					
ANR	6139909	UnaryOperator	*		6139885	0					
ANR	6139910	Identifier	s		6139885	1					
ANR	6139911	CompoundStatement		7:12:115:115	6139885	1					
ANR	6139912	ExpressionStatement	"h = TOK_HASH_FUNC ( h , * s )"	1320:2:26639:26664	6139885	0	True				
ANR	6139913	AssignmentExpression	"h = TOK_HASH_FUNC ( h , * s )"		6139885	0		=			
ANR	6139914	Identifier	h		6139885	0					
ANR	6139915	CallExpression	"TOK_HASH_FUNC ( h , * s )"		6139885	1					
ANR	6139916	Callee	TOK_HASH_FUNC		6139885	0					
ANR	6139917	Identifier	TOK_HASH_FUNC		6139885	0					
ANR	6139918	ArgumentList	h		6139885	1					
ANR	6139919	Argument	h		6139885	0					
ANR	6139920	Identifier	h		6139885	0					
ANR	6139921	Argument	* s		6139885	1					
ANR	6139922	UnaryOperationExpression	* s		6139885	0					
ANR	6139923	UnaryOperator	*		6139885	0					
ANR	6139924	Identifier	s		6139885	1					
ANR	6139925	ExpressionStatement	s ++	1321:2:26668:26671	6139885	1	True				
ANR	6139926	PostIncDecOperationExpression	s ++		6139885	0					
ANR	6139927	Identifier	s		6139885	0					
ANR	6139928	IncDec	++		6139885	1					
ANR	6139929	ExpressionStatement	h &= ( CACHED_INCLUDES_HASH_SIZE - 1 )	1323:1:26677:26713	6139885	5	True				
ANR	6139930	AssignmentExpression	h &= ( CACHED_INCLUDES_HASH_SIZE - 1 )		6139885	0		&=			
ANR	6139931	Identifier	h		6139885	0					
ANR	6139932	AdditiveExpression	CACHED_INCLUDES_HASH_SIZE - 1		6139885	1		-			
ANR	6139933	Identifier	CACHED_INCLUDES_HASH_SIZE		6139885	0					
ANR	6139934	PrimaryExpression	1		6139885	1					
ANR	6139935	ReturnStatement	return h ;	1324:1:26716:26724	6139885	6	True				
ANR	6139936	Identifier	h		6139885	0					
ANR	6139937	ReturnType	static inline int		6139885	1					
ANR	6139938	Identifier	hash_cached_include		6139885	2					
ANR	6139939	ParameterList	const char * filename		6139885	3					
ANR	6139940	Parameter	const char * filename	1312:38:26497:26516	6139885	0	True				
ANR	6139941	ParameterType	const char *		6139885	0					
ANR	6139942	Identifier	filename		6139885	1					
ANR	6139943	CFGEntryNode	ENTRY		6139885		True				
ANR	6139944	CFGExitNode	EXIT		6139885		True				
ANR	6139945	Symbol	filename		6139885						
ANR	6139946	Symbol	s		6139885						
ANR	6139947	Symbol	h		6139885						
ANR	6139948	Symbol	CACHED_INCLUDES_HASH_SIZE		6139885						
ANR	6139949	Symbol	* s		6139885						
ANR	6139950	Symbol	TOK_HASH_FUNC		6139885						
ANR	6139951	Symbol	TOK_HASH_INIT		6139885						
ANR	6139952	Function	search_cached_include	1327:0:26729:27088							
ANR	6139953	FunctionDef	"search_cached_include (TCCState * s1 , const char * filename)"		6139952	0					
ANR	6139954	CompoundStatement		1328:0:26809:27088	6139952	0					
ANR	6139955	IdentifierDeclStatement	CachedInclude * e ;	1329:1:26812:26828	6139952	0	True				
ANR	6139956	IdentifierDecl	* e		6139952	0					
ANR	6139957	IdentifierDeclType	CachedInclude *		6139952	0					
ANR	6139958	Identifier	e		6139952	1					
ANR	6139959	IdentifierDeclStatement	"int i , h ;"	1330:1:26831:26839	6139952	1	True				
ANR	6139960	IdentifierDecl	i		6139952	0					
ANR	6139961	IdentifierDeclType	int		6139952	0					
ANR	6139962	Identifier	i		6139952	1					
ANR	6139963	IdentifierDecl	h		6139952	1					
ANR	6139964	IdentifierDeclType	int		6139952	0					
ANR	6139965	Identifier	h		6139952	1					
ANR	6139966	ExpressionStatement	h = hash_cached_include ( filename )	1331:1:26842:26876	6139952	2	True				
ANR	6139967	AssignmentExpression	h = hash_cached_include ( filename )		6139952	0		=			
ANR	6139968	Identifier	h		6139952	0					
ANR	6139969	CallExpression	hash_cached_include ( filename )		6139952	1					
ANR	6139970	Callee	hash_cached_include		6139952	0					
ANR	6139971	Identifier	hash_cached_include		6139952	0					
ANR	6139972	ArgumentList	filename		6139952	1					
ANR	6139973	Argument	filename		6139952	0					
ANR	6139974	Identifier	filename		6139952	0					
ANR	6139975	ExpressionStatement	i = s1 -> cached_includes_hash [ h ]	1332:1:26879:26910	6139952	3	True				
ANR	6139976	AssignmentExpression	i = s1 -> cached_includes_hash [ h ]		6139952	0		=			
ANR	6139977	Identifier	i		6139952	0					
ANR	6139978	ArrayIndexing	s1 -> cached_includes_hash [ h ]		6139952	1					
ANR	6139979	PtrMemberAccess	s1 -> cached_includes_hash		6139952	0					
ANR	6139980	Identifier	s1		6139952	0					
ANR	6139981	Identifier	cached_includes_hash		6139952	1					
ANR	6139982	Identifier	h		6139952	1					
ANR	6139983	ForStatement	for ( ; ; )		6139952	4					
ANR	6139984	CompoundStatement		6:10:112:112	6139952	0					
ANR	6139985	IfStatement	if ( i == 0 )		6139952	0					
ANR	6139986	Condition	i == 0	1334:6:26930:26935	6139952	0	True				
ANR	6139987	EqualityExpression	i == 0		6139952	0		==			
ANR	6139988	Identifier	i		6139952	0					
ANR	6139989	PrimaryExpression	0		6139952	1					
ANR	6139990	CompoundStatement		7:14:128:128	6139952	1					
ANR	6139991	BreakStatement	break ;	1335:3:26943:26948	6139952	0	True				
ANR	6139992	ExpressionStatement	e = s1 -> cached_includes [ i - 1 ]	1337:2:26956:26986	6139952	1	True				
ANR	6139993	AssignmentExpression	e = s1 -> cached_includes [ i - 1 ]		6139952	0		=			
ANR	6139994	Identifier	e		6139952	0					
ANR	6139995	ArrayIndexing	s1 -> cached_includes [ i - 1 ]		6139952	1					
ANR	6139996	PtrMemberAccess	s1 -> cached_includes		6139952	0					
ANR	6139997	Identifier	s1		6139952	0					
ANR	6139998	Identifier	cached_includes		6139952	1					
ANR	6139999	AdditiveExpression	i - 1		6139952	1		-			
ANR	6140000	Identifier	i		6139952	0					
ANR	6140001	PrimaryExpression	1		6139952	1					
ANR	6140002	IfStatement	"if ( 0 == PATHCMP ( e -> filename , filename ) )"		6139952	2					
ANR	6140003	Condition	"0 == PATHCMP ( e -> filename , filename )"	1338:6:26994:27029	6139952	0	True				
ANR	6140004	EqualityExpression	"0 == PATHCMP ( e -> filename , filename )"		6139952	0		==			
ANR	6140005	PrimaryExpression	0		6139952	0					
ANR	6140006	CallExpression	"PATHCMP ( e -> filename , filename )"		6139952	1					
ANR	6140007	Callee	PATHCMP		6139952	0					
ANR	6140008	Identifier	PATHCMP		6139952	0					
ANR	6140009	ArgumentList	e -> filename		6139952	1					
ANR	6140010	Argument	e -> filename		6139952	0					
ANR	6140011	PtrMemberAccess	e -> filename		6139952	0					
ANR	6140012	Identifier	e		6139952	0					
ANR	6140013	Identifier	filename		6139952	1					
ANR	6140014	Argument	filename		6139952	1					
ANR	6140015	Identifier	filename		6139952	0					
ANR	6140016	CompoundStatement		11:44:222:222	6139952	1					
ANR	6140017	ReturnStatement	return e ;	1339:3:27037:27045	6139952	0	True				
ANR	6140018	Identifier	e		6139952	0					
ANR	6140019	ExpressionStatement	i = e -> hash_next	1341:2:27053:27069	6139952	3	True				
ANR	6140020	AssignmentExpression	i = e -> hash_next		6139952	0		=			
ANR	6140021	Identifier	i		6139952	0					
ANR	6140022	PtrMemberAccess	e -> hash_next		6139952	1					
ANR	6140023	Identifier	e		6139952	0					
ANR	6140024	Identifier	hash_next		6139952	1					
ANR	6140025	ReturnStatement	return NULL ;	1343:1:27075:27086	6139952	5	True				
ANR	6140026	Identifier	NULL		6139952	0					
ANR	6140027	ReturnType	static CachedInclude *		6139952	1					
ANR	6140028	Identifier	search_cached_include		6139952	2					
ANR	6140029	ParameterList	"TCCState * s1 , const char * filename"		6139952	3					
ANR	6140030	Parameter	TCCState * s1	1327:44:26773:26784	6139952	0	True				
ANR	6140031	ParameterType	TCCState *		6139952	0					
ANR	6140032	Identifier	s1		6139952	1					
ANR	6140033	Parameter	const char * filename	1327:58:26787:26806	6139952	1	True				
ANR	6140034	ParameterType	const char *		6139952	0					
ANR	6140035	Identifier	filename		6139952	1					
ANR	6140036	CFGEntryNode	ENTRY		6139952		True				
ANR	6140037	CFGExitNode	EXIT		6139952		True				
ANR	6140038	InfiniteForNode	true		6139952		True				
ANR	6140039	Symbol	* s1 -> cached_includes		6139952						
ANR	6140040	Symbol	NULL		6139952						
ANR	6140041	Symbol	e		6139952						
ANR	6140042	Symbol	* s1		6139952						
ANR	6140043	Symbol	h		6139952						
ANR	6140044	Symbol	* * s1		6139952						
ANR	6140045	Symbol	i		6139952						
ANR	6140046	Symbol	e -> hash_next		6139952						
ANR	6140047	Symbol	* e		6139952						
ANR	6140048	Symbol	* h		6139952						
ANR	6140049	Symbol	filename		6139952						
ANR	6140050	Symbol	hash_cached_include		6139952						
ANR	6140051	Symbol	* i		6139952						
ANR	6140052	Symbol	s1 -> cached_includes_hash		6139952						
ANR	6140053	Symbol	s1 -> cached_includes		6139952						
ANR	6140054	Symbol	* s1 -> cached_includes_hash		6139952						
ANR	6140055	Symbol	s1		6139952						
ANR	6140056	Symbol	e -> filename		6139952						
ANR	6140057	Symbol	PATHCMP		6139952						
ANR	6140058	Function	add_cached_include	1346:0:27091:27738							
ANR	6140059	FunctionDef	"add_cached_include (TCCState * s1 , const char * filename , int ifndef_macro)"		6140058	0					
ANR	6140060	CompoundStatement		1347:0:27183:27738	6140058	0					
ANR	6140061	IdentifierDeclStatement	CachedInclude * e ;	1348:1:27186:27202	6140058	0	True				
ANR	6140062	IdentifierDecl	* e		6140058	0					
ANR	6140063	IdentifierDeclType	CachedInclude *		6140058	0					
ANR	6140064	Identifier	e		6140058	1					
ANR	6140065	IdentifierDeclStatement	int h ;	1349:1:27205:27210	6140058	1	True				
ANR	6140066	IdentifierDecl	h		6140058	0					
ANR	6140067	IdentifierDeclType	int		6140058	0					
ANR	6140068	Identifier	h		6140058	1					
ANR	6140069	IfStatement	"if ( search_cached_include ( s1 , filename ) )"		6140058	2					
ANR	6140070	Condition	"search_cached_include ( s1 , filename )"	1351:5:27218:27253	6140058	0	True				
ANR	6140071	CallExpression	"search_cached_include ( s1 , filename )"		6140058	0					
ANR	6140072	Callee	search_cached_include		6140058	0					
ANR	6140073	Identifier	search_cached_include		6140058	0					
ANR	6140074	ArgumentList	s1		6140058	1					
ANR	6140075	Argument	s1		6140058	0					
ANR	6140076	Identifier	s1		6140058	0					
ANR	6140077	Argument	filename		6140058	1					
ANR	6140078	Identifier	filename		6140058	0					
ANR	6140079	CompoundStatement		5:43:72:72	6140058	1					
ANR	6140080	ReturnStatement	return ;	1352:2:27260:27266	6140058	0	True				
ANR	6140081	ExpressionStatement	"printf ( ""adding cached '%s' %s\\n"" , filename , get_tok_str ( ifndef_macro , NULL ) )"	1355:1:27289:27367	6140058	3	True				
ANR	6140082	CallExpression	"printf ( ""adding cached '%s' %s\\n"" , filename , get_tok_str ( ifndef_macro , NULL ) )"		6140058	0					
ANR	6140083	Callee	printf		6140058	0					
ANR	6140084	Identifier	printf		6140058	0					
ANR	6140085	ArgumentList	"""adding cached '%s' %s\\n"""		6140058	1					
ANR	6140086	Argument	"""adding cached '%s' %s\\n"""		6140058	0					
ANR	6140087	PrimaryExpression	"""adding cached '%s' %s\\n"""		6140058	0					
ANR	6140088	Argument	filename		6140058	1					
ANR	6140089	Identifier	filename		6140058	0					
ANR	6140090	Argument	"get_tok_str ( ifndef_macro , NULL )"		6140058	2					
ANR	6140091	CallExpression	"get_tok_str ( ifndef_macro , NULL )"		6140058	0					
ANR	6140092	Callee	get_tok_str		6140058	0					
ANR	6140093	Identifier	get_tok_str		6140058	0					
ANR	6140094	ArgumentList	ifndef_macro		6140058	1					
ANR	6140095	Argument	ifndef_macro		6140058	0					
ANR	6140096	Identifier	ifndef_macro		6140058	0					
ANR	6140097	Argument	NULL		6140058	1					
ANR	6140098	Identifier	NULL		6140058	0					
ANR	6140099	ExpressionStatement	e = malloc ( sizeof ( CachedInclude ) + strlen ( filename ) )	1357:1:27377:27431	6140058	4	True				
ANR	6140100	AssignmentExpression	e = malloc ( sizeof ( CachedInclude ) + strlen ( filename ) )		6140058	0		=			
ANR	6140101	Identifier	e		6140058	0					
ANR	6140102	CallExpression	malloc ( sizeof ( CachedInclude ) + strlen ( filename ) )		6140058	1					
ANR	6140103	Callee	malloc		6140058	0					
ANR	6140104	Identifier	malloc		6140058	0					
ANR	6140105	ArgumentList	sizeof ( CachedInclude ) + strlen ( filename )		6140058	1					
ANR	6140106	Argument	sizeof ( CachedInclude ) + strlen ( filename )		6140058	0					
ANR	6140107	AdditiveExpression	sizeof ( CachedInclude ) + strlen ( filename )		6140058	0		+			
ANR	6140108	SizeofExpression	sizeof ( CachedInclude )		6140058	0					
ANR	6140109	Sizeof	sizeof		6140058	0					
ANR	6140110	SizeofOperand	CachedInclude		6140058	1					
ANR	6140111	CallExpression	strlen ( filename )		6140058	1					
ANR	6140112	Callee	strlen		6140058	0					
ANR	6140113	Identifier	strlen		6140058	0					
ANR	6140114	ArgumentList	filename		6140058	1					
ANR	6140115	Argument	filename		6140058	0					
ANR	6140116	Identifier	filename		6140058	0					
ANR	6140117	ExpressionStatement	"strcpy ( e -> filename , filename )"	1358:1:27434:27464	6140058	5	True				
ANR	6140118	CallExpression	"strcpy ( e -> filename , filename )"		6140058	0					
ANR	6140119	Callee	strcpy		6140058	0					
ANR	6140120	Identifier	strcpy		6140058	0					
ANR	6140121	ArgumentList	e -> filename		6140058	1					
ANR	6140122	Argument	e -> filename		6140058	0					
ANR	6140123	PtrMemberAccess	e -> filename		6140058	0					
ANR	6140124	Identifier	e		6140058	0					
ANR	6140125	Identifier	filename		6140058	1					
ANR	6140126	Argument	filename		6140058	1					
ANR	6140127	Identifier	filename		6140058	0					
ANR	6140128	ExpressionStatement	e -> ifndef_macro = ifndef_macro	1359:1:27467:27497	6140058	6	True				
ANR	6140129	AssignmentExpression	e -> ifndef_macro = ifndef_macro		6140058	0		=			
ANR	6140130	PtrMemberAccess	e -> ifndef_macro		6140058	0					
ANR	6140131	Identifier	e		6140058	0					
ANR	6140132	Identifier	ifndef_macro		6140058	1					
ANR	6140133	Identifier	ifndef_macro		6140058	1					
ANR	6140134	ExpressionStatement	"dynarray_add ( ( void * * * ) & s1 -> cached_includes , & s1 -> nb_cached_includes , e )"	1360:1:27500:27574	6140058	7	True				
ANR	6140135	CallExpression	"dynarray_add ( ( void * * * ) & s1 -> cached_includes , & s1 -> nb_cached_includes , e )"		6140058	0					
ANR	6140136	Callee	dynarray_add		6140058	0					
ANR	6140137	Identifier	dynarray_add		6140058	0					
ANR	6140138	ArgumentList	( void * * * ) & s1 -> cached_includes		6140058	1					
ANR	6140139	Argument	( void * * * ) & s1 -> cached_includes		6140058	0					
ANR	6140140	CastExpression	( void * * * ) & s1 -> cached_includes		6140058	0					
ANR	6140141	CastTarget	void * * *		6140058	0					
ANR	6140142	UnaryOperationExpression	& s1 -> cached_includes		6140058	1					
ANR	6140143	UnaryOperator	&		6140058	0					
ANR	6140144	PtrMemberAccess	s1 -> cached_includes		6140058	1					
ANR	6140145	Identifier	s1		6140058	0					
ANR	6140146	Identifier	cached_includes		6140058	1					
ANR	6140147	Argument	& s1 -> nb_cached_includes		6140058	1					
ANR	6140148	UnaryOperationExpression	& s1 -> nb_cached_includes		6140058	0					
ANR	6140149	UnaryOperator	&		6140058	0					
ANR	6140150	PtrMemberAccess	s1 -> nb_cached_includes		6140058	1					
ANR	6140151	Identifier	s1		6140058	0					
ANR	6140152	Identifier	nb_cached_includes		6140058	1					
ANR	6140153	Argument	e		6140058	2					
ANR	6140154	Identifier	e		6140058	0					
ANR	6140155	ExpressionStatement	h = hash_cached_include ( filename )	1362:1:27602:27636	6140058	8	True				
ANR	6140156	AssignmentExpression	h = hash_cached_include ( filename )		6140058	0		=			
ANR	6140157	Identifier	h		6140058	0					
ANR	6140158	CallExpression	hash_cached_include ( filename )		6140058	1					
ANR	6140159	Callee	hash_cached_include		6140058	0					
ANR	6140160	Identifier	hash_cached_include		6140058	0					
ANR	6140161	ArgumentList	filename		6140058	1					
ANR	6140162	Argument	filename		6140058	0					
ANR	6140163	Identifier	filename		6140058	0					
ANR	6140164	ExpressionStatement	e -> hash_next = s1 -> cached_includes_hash [ h ]	1363:1:27639:27681	6140058	9	True				
ANR	6140165	AssignmentExpression	e -> hash_next = s1 -> cached_includes_hash [ h ]		6140058	0		=			
ANR	6140166	PtrMemberAccess	e -> hash_next		6140058	0					
ANR	6140167	Identifier	e		6140058	0					
ANR	6140168	Identifier	hash_next		6140058	1					
ANR	6140169	ArrayIndexing	s1 -> cached_includes_hash [ h ]		6140058	1					
ANR	6140170	PtrMemberAccess	s1 -> cached_includes_hash		6140058	0					
ANR	6140171	Identifier	s1		6140058	0					
ANR	6140172	Identifier	cached_includes_hash		6140058	1					
ANR	6140173	Identifier	h		6140058	1					
ANR	6140174	ExpressionStatement	s1 -> cached_includes_hash [ h ] = s1 -> nb_cached_includes	1364:1:27684:27736	6140058	10	True				
ANR	6140175	AssignmentExpression	s1 -> cached_includes_hash [ h ] = s1 -> nb_cached_includes		6140058	0		=			
ANR	6140176	ArrayIndexing	s1 -> cached_includes_hash [ h ]		6140058	0					
ANR	6140177	PtrMemberAccess	s1 -> cached_includes_hash		6140058	0					
ANR	6140178	Identifier	s1		6140058	0					
ANR	6140179	Identifier	cached_includes_hash		6140058	1					
ANR	6140180	Identifier	h		6140058	1					
ANR	6140181	PtrMemberAccess	s1 -> nb_cached_includes		6140058	1					
ANR	6140182	Identifier	s1		6140058	0					
ANR	6140183	Identifier	nb_cached_includes		6140058	1					
ANR	6140184	ReturnType	static inline void		6140058	1					
ANR	6140185	Identifier	add_cached_include		6140058	2					
ANR	6140186	ParameterList	"TCCState * s1 , const char * filename , int ifndef_macro"		6140058	3					
ANR	6140187	Parameter	TCCState * s1	1346:38:27129:27140	6140058	0	True				
ANR	6140188	ParameterType	TCCState *		6140058	0					
ANR	6140189	Identifier	s1		6140058	1					
ANR	6140190	Parameter	const char * filename	1346:52:27143:27162	6140058	1	True				
ANR	6140191	ParameterType	const char *		6140058	0					
ANR	6140192	Identifier	filename		6140058	1					
ANR	6140193	Parameter	int ifndef_macro	1346:74:27165:27180	6140058	2	True				
ANR	6140194	ParameterType	int		6140058	0					
ANR	6140195	Identifier	ifndef_macro		6140058	1					
ANR	6140196	CFGEntryNode	ENTRY		6140058		True				
ANR	6140197	CFGExitNode	EXIT		6140058		True				
ANR	6140198	Symbol	malloc		6140058						
ANR	6140199	Symbol	& s1 -> cached_includes		6140058						
ANR	6140200	Symbol	ifndef_macro		6140058						
ANR	6140201	Symbol	NULL		6140058						
ANR	6140202	Symbol	get_tok_str		6140058						
ANR	6140203	Symbol	e		6140058						
ANR	6140204	Symbol	s1 -> nb_cached_includes		6140058						
ANR	6140205	Symbol	* s1		6140058						
ANR	6140206	Symbol	h		6140058						
ANR	6140207	Symbol	* * s1		6140058						
ANR	6140208	Symbol	search_cached_include		6140058						
ANR	6140209	Symbol	e -> hash_next		6140058						
ANR	6140210	Symbol	* e		6140058						
ANR	6140211	Symbol	strlen		6140058						
ANR	6140212	Symbol	* h		6140058						
ANR	6140213	Symbol	filename		6140058						
ANR	6140214	Symbol	hash_cached_include		6140058						
ANR	6140215	Symbol	s1 -> cached_includes_hash		6140058						
ANR	6140216	Symbol	* s1 -> cached_includes_hash		6140058						
ANR	6140217	Symbol	& s1 -> nb_cached_includes		6140058						
ANR	6140218	Symbol	s1		6140058						
ANR	6140219	Symbol	e -> filename		6140058						
ANR	6140220	Symbol	e -> ifndef_macro		6140058						
ANR	6140221	Function	pragma_parse	1367:0:27741:28688							
ANR	6140222	FunctionDef	pragma_parse (TCCState * s1)		6140221	0					
ANR	6140223	CompoundStatement		1368:0:27780:28688	6140221	0					
ANR	6140224	IdentifierDeclStatement	int val ;	1369:1:27783:27790	6140221	0	True				
ANR	6140225	IdentifierDecl	val		6140221	0					
ANR	6140226	IdentifierDeclType	int		6140221	0					
ANR	6140227	Identifier	val		6140221	1					
ANR	6140228	ExpressionStatement	next ( )	1371:1:27794:27801	6140221	1	True				
ANR	6140229	CallExpression	next ( )		6140221	0					
ANR	6140230	Callee	next		6140221	0					
ANR	6140231	Identifier	next		6140221	0					
ANR	6140232	ArgumentList			6140221	1					
ANR	6140233	IfStatement	if ( tok == TOK_pack )		6140221	2					
ANR	6140234	Condition	tok == TOK_pack	1372:5:27808:27822	6140221	0	True				
ANR	6140235	EqualityExpression	tok == TOK_pack		6140221	0		==			
ANR	6140236	Identifier	tok		6140221	0					
ANR	6140237	Identifier	TOK_pack		6140221	1					
ANR	6140238	CompoundStatement		5:22:44:44	6140221	1					
ANR	6140239	ExpressionStatement	next ( )	1380:2:28003:28010	6140221	0	True				
ANR	6140240	CallExpression	next ( )		6140221	0					
ANR	6140241	Callee	next		6140221	0					
ANR	6140242	Identifier	next		6140221	0					
ANR	6140243	ArgumentList			6140221	1					
ANR	6140244	ExpressionStatement	skip ( '(' )	1381:2:28014:28024	6140221	1	True				
ANR	6140245	CallExpression	skip ( '(' )		6140221	0					
ANR	6140246	Callee	skip		6140221	0					
ANR	6140247	Identifier	skip		6140221	0					
ANR	6140248	ArgumentList	'('		6140221	1					
ANR	6140249	Argument	'('		6140221	0					
ANR	6140250	PrimaryExpression	'('		6140221	0					
ANR	6140251	IfStatement	if ( tok == TOK_ASM_pop )		6140221	2					
ANR	6140252	Condition	tok == TOK_ASM_pop	1382:6:28032:28049	6140221	0	True				
ANR	6140253	EqualityExpression	tok == TOK_ASM_pop		6140221	0		==			
ANR	6140254	Identifier	tok		6140221	0					
ANR	6140255	Identifier	TOK_ASM_pop		6140221	1					
ANR	6140256	CompoundStatement		15:26:271:271	6140221	1					
ANR	6140257	ExpressionStatement	next ( )	1383:3:28057:28064	6140221	0	True				
ANR	6140258	CallExpression	next ( )		6140221	0					
ANR	6140259	Callee	next		6140221	0					
ANR	6140260	Identifier	next		6140221	0					
ANR	6140261	ArgumentList			6140221	1					
ANR	6140262	IfStatement	if ( s1 -> pack_stack_ptr <= s1 -> pack_stack )		6140221	1					
ANR	6140263	Condition	s1 -> pack_stack_ptr <= s1 -> pack_stack	1384:7:28073:28108	6140221	0	True				
ANR	6140264	RelationalExpression	s1 -> pack_stack_ptr <= s1 -> pack_stack		6140221	0		<=			
ANR	6140265	PtrMemberAccess	s1 -> pack_stack_ptr		6140221	0					
ANR	6140266	Identifier	s1		6140221	0					
ANR	6140267	Identifier	pack_stack_ptr		6140221	1					
ANR	6140268	PtrMemberAccess	s1 -> pack_stack		6140221	1					
ANR	6140269	Identifier	s1		6140221	0					
ANR	6140270	Identifier	pack_stack		6140221	1					
ANR	6140271	CompoundStatement		17:45:330:330	6140221	1					
ANR	6140272	Label	stk_error :	1385:0:28113:28122	6140221	0	True				
ANR	6140273	Identifier	stk_error		6140221	0					
ANR	6140274	ExpressionStatement	"tcc_error ( ""out of pack stack"" )"	1386:4:28128:28159	6140221	1	True				
ANR	6140275	CallExpression	"tcc_error ( ""out of pack stack"" )"		6140221	0					
ANR	6140276	Callee	tcc_error		6140221	0					
ANR	6140277	Identifier	tcc_error		6140221	0					
ANR	6140278	ArgumentList	"""out of pack stack"""		6140221	1					
ANR	6140279	Argument	"""out of pack stack"""		6140221	0					
ANR	6140280	PrimaryExpression	"""out of pack stack"""		6140221	0					
ANR	6140281	ExpressionStatement	s1 -> pack_stack_ptr --	1388:3:28169:28189	6140221	2	True				
ANR	6140282	PostIncDecOperationExpression	s1 -> pack_stack_ptr --		6140221	0					
ANR	6140283	PtrMemberAccess	s1 -> pack_stack_ptr		6140221	0					
ANR	6140284	Identifier	s1		6140221	0					
ANR	6140285	Identifier	pack_stack_ptr		6140221	1					
ANR	6140286	IncDec	--		6140221	1					
ANR	6140287	ElseStatement	else		6140221	0					
ANR	6140288	CompoundStatement		22:9:419:419	6140221	0					
ANR	6140289	ExpressionStatement	val = 0	1390:3:28205:28212	6140221	0	True				
ANR	6140290	AssignmentExpression	val = 0		6140221	0		=			
ANR	6140291	Identifier	val		6140221	0					
ANR	6140292	PrimaryExpression	0		6140221	1					
ANR	6140293	IfStatement	if ( tok != ')' )		6140221	1					
ANR	6140294	Condition	tok != ')'	1391:7:28221:28230	6140221	0	True				
ANR	6140295	EqualityExpression	tok != ')'		6140221	0		!=			
ANR	6140296	Identifier	tok		6140221	0					
ANR	6140297	PrimaryExpression	')'		6140221	1					
ANR	6140298	CompoundStatement		24:19:452:452	6140221	1					
ANR	6140299	IfStatement	if ( tok == TOK_ASM_push )		6140221	0					
ANR	6140300	Condition	tok == TOK_ASM_push	1392:8:28243:28261	6140221	0	True				
ANR	6140301	EqualityExpression	tok == TOK_ASM_push		6140221	0		==			
ANR	6140302	Identifier	tok		6140221	0					
ANR	6140303	Identifier	TOK_ASM_push		6140221	1					
ANR	6140304	CompoundStatement		25:29:483:483	6140221	1					
ANR	6140305	ExpressionStatement	next ( )	1393:5:28271:28278	6140221	0	True				
ANR	6140306	CallExpression	next ( )		6140221	0					
ANR	6140307	Callee	next		6140221	0					
ANR	6140308	Identifier	next		6140221	0					
ANR	6140309	ArgumentList			6140221	1					
ANR	6140310	IfStatement	if ( s1 -> pack_stack_ptr >= s1 -> pack_stack + PACK_STACK_SIZE - 1 )		6140221	1					
ANR	6140311	Condition	s1 -> pack_stack_ptr >= s1 -> pack_stack + PACK_STACK_SIZE - 1	1394:9:28289:28346	6140221	0	True				
ANR	6140312	RelationalExpression	s1 -> pack_stack_ptr >= s1 -> pack_stack + PACK_STACK_SIZE - 1		6140221	0		>=			
ANR	6140313	PtrMemberAccess	s1 -> pack_stack_ptr		6140221	0					
ANR	6140314	Identifier	s1		6140221	0					
ANR	6140315	Identifier	pack_stack_ptr		6140221	1					
ANR	6140316	AdditiveExpression	s1 -> pack_stack + PACK_STACK_SIZE - 1		6140221	1		+			
ANR	6140317	PtrMemberAccess	s1 -> pack_stack		6140221	0					
ANR	6140318	Identifier	s1		6140221	0					
ANR	6140319	Identifier	pack_stack		6140221	1					
ANR	6140320	AdditiveExpression	PACK_STACK_SIZE - 1		6140221	1		-			
ANR	6140321	Identifier	PACK_STACK_SIZE		6140221	0					
ANR	6140322	PrimaryExpression	1		6140221	1					
ANR	6140323	CompoundStatement		27:69:568:568	6140221	1					
ANR	6140324	GotoStatement	goto stk_error ;	1395:6:28357:28371	6140221	0	True				
ANR	6140325	Identifier	stk_error		6140221	0					
ANR	6140326	ExpressionStatement	s1 -> pack_stack_ptr ++	1397:5:28385:28405	6140221	2	True				
ANR	6140327	PostIncDecOperationExpression	s1 -> pack_stack_ptr ++		6140221	0					
ANR	6140328	PtrMemberAccess	s1 -> pack_stack_ptr		6140221	0					
ANR	6140329	Identifier	s1		6140221	0					
ANR	6140330	Identifier	pack_stack_ptr		6140221	1					
ANR	6140331	IncDec	++		6140221	1					
ANR	6140332	ExpressionStatement	"skip ( ',' )"	1398:5:28412:28422	6140221	3	True				
ANR	6140333	CallExpression	"skip ( ',' )"		6140221	0					
ANR	6140334	Callee	skip		6140221	0					
ANR	6140335	Identifier	skip		6140221	0					
ANR	6140336	ArgumentList	"','"		6140221	1					
ANR	6140337	Argument	"','"		6140221	0					
ANR	6140338	PrimaryExpression	"','"		6140221	0					
ANR	6140339	IfStatement	if ( tok != TOK_CINT )		6140221	1					
ANR	6140340	Condition	tok != TOK_CINT	1400:8:28438:28452	6140221	0	True				
ANR	6140341	EqualityExpression	tok != TOK_CINT		6140221	0		!=			
ANR	6140342	Identifier	tok		6140221	0					
ANR	6140343	Identifier	TOK_CINT		6140221	1					
ANR	6140344	CompoundStatement		33:25:674:674	6140221	1					
ANR	6140345	Label	pack_error :	1401:0:28457:28467	6140221	0	True				
ANR	6140346	Identifier	pack_error		6140221	0					
ANR	6140347	ExpressionStatement	"tcc_error ( ""invalid pack pragma"" )"	1402:5:28474:28507	6140221	1	True				
ANR	6140348	CallExpression	"tcc_error ( ""invalid pack pragma"" )"		6140221	0					
ANR	6140349	Callee	tcc_error		6140221	0					
ANR	6140350	Identifier	tcc_error		6140221	0					
ANR	6140351	ArgumentList	"""invalid pack pragma"""		6140221	1					
ANR	6140352	Argument	"""invalid pack pragma"""		6140221	0					
ANR	6140353	PrimaryExpression	"""invalid pack pragma"""		6140221	0					
ANR	6140354	ExpressionStatement	val = tokc . i	1404:4:28519:28531	6140221	2	True				
ANR	6140355	AssignmentExpression	val = tokc . i		6140221	0		=			
ANR	6140356	Identifier	val		6140221	0					
ANR	6140357	MemberAccess	tokc . i		6140221	1					
ANR	6140358	Identifier	tokc		6140221	0					
ANR	6140359	Identifier	i		6140221	1					
ANR	6140360	IfStatement	if ( val < 1 || val > 16 || ( val & ( val - 1 ) ) != 0 )		6140221	3					
ANR	6140361	Condition	val < 1 || val > 16 || ( val & ( val - 1 ) ) != 0	1405:8:28541:28585	6140221	0	True				
ANR	6140362	OrExpression	val < 1 || val > 16 || ( val & ( val - 1 ) ) != 0		6140221	0		||			
ANR	6140363	RelationalExpression	val < 1		6140221	0		<			
ANR	6140364	Identifier	val		6140221	0					
ANR	6140365	PrimaryExpression	1		6140221	1					
ANR	6140366	OrExpression	val > 16 || ( val & ( val - 1 ) ) != 0		6140221	1		||			
ANR	6140367	RelationalExpression	val > 16		6140221	0		>			
ANR	6140368	Identifier	val		6140221	0					
ANR	6140369	PrimaryExpression	16		6140221	1					
ANR	6140370	EqualityExpression	( val & ( val - 1 ) ) != 0		6140221	1		!=			
ANR	6140371	BitAndExpression	val & ( val - 1 )		6140221	0		&			
ANR	6140372	Identifier	val		6140221	0					
ANR	6140373	AdditiveExpression	val - 1		6140221	1		-			
ANR	6140374	Identifier	val		6140221	0					
ANR	6140375	PrimaryExpression	1		6140221	1					
ANR	6140376	PrimaryExpression	0		6140221	1					
ANR	6140377	CompoundStatement		38:55:807:807	6140221	1					
ANR	6140378	GotoStatement	goto pack_error ;	1406:5:28595:28610	6140221	0	True				
ANR	6140379	Identifier	pack_error		6140221	0					
ANR	6140380	ExpressionStatement	next ( )	1408:4:28622:28629	6140221	4	True				
ANR	6140381	CallExpression	next ( )		6140221	0					
ANR	6140382	Callee	next		6140221	0					
ANR	6140383	Identifier	next		6140221	0					
ANR	6140384	ArgumentList			6140221	1					
ANR	6140385	ExpressionStatement	* s1 -> pack_stack_ptr = val	1410:3:28639:28664	6140221	2	True				
ANR	6140386	AssignmentExpression	* s1 -> pack_stack_ptr = val		6140221	0		=			
ANR	6140387	UnaryOperationExpression	* s1 -> pack_stack_ptr		6140221	0					
ANR	6140388	UnaryOperator	*		6140221	0					
ANR	6140389	PtrMemberAccess	s1 -> pack_stack_ptr		6140221	1					
ANR	6140390	Identifier	s1		6140221	0					
ANR	6140391	Identifier	pack_stack_ptr		6140221	1					
ANR	6140392	Identifier	val		6140221	1					
ANR	6140393	ExpressionStatement	skip ( ')' )	1411:3:28669:28679	6140221	3	True				
ANR	6140394	CallExpression	skip ( ')' )		6140221	0					
ANR	6140395	Callee	skip		6140221	0					
ANR	6140396	Identifier	skip		6140221	0					
ANR	6140397	ArgumentList	')'		6140221	1					
ANR	6140398	Argument	')'		6140221	0					
ANR	6140399	PrimaryExpression	')'		6140221	0					
ANR	6140400	ReturnType	static void		6140221	1					
ANR	6140401	Identifier	pragma_parse		6140221	2					
ANR	6140402	ParameterList	TCCState * s1		6140221	3					
ANR	6140403	Parameter	TCCState * s1	1367:25:27766:27777	6140221	0	True				
ANR	6140404	ParameterType	TCCState *		6140221	0					
ANR	6140405	Identifier	s1		6140221	1					
ANR	6140406	CFGEntryNode	ENTRY		6140221		True				
ANR	6140407	CFGExitNode	EXIT		6140221		True				
ANR	6140408	Symbol	val		6140221						
ANR	6140409	Symbol	* s1 -> pack_stack_ptr		6140221						
ANR	6140410	Symbol	TOK_ASM_push		6140221						
ANR	6140411	Symbol	tokc		6140221						
ANR	6140412	Symbol	s1 -> pack_stack		6140221						
ANR	6140413	Symbol	* s1		6140221						
ANR	6140414	Symbol	* * s1		6140221						
ANR	6140415	Symbol	TOK_ASM_pop		6140221						
ANR	6140416	Symbol	tok		6140221						
ANR	6140417	Symbol	TOK_pack		6140221						
ANR	6140418	Symbol	s1 -> pack_stack_ptr		6140221						
ANR	6140419	Symbol	PACK_STACK_SIZE		6140221						
ANR	6140420	Symbol	s1		6140221						
ANR	6140421	Symbol	tokc . i		6140221						
ANR	6140422	Symbol	TOK_CINT		6140221						
ANR	6140423	Function	preprocess	1417:0:28758:37489							
ANR	6140424	FunctionDef	preprocess (int is_bof)		6140423	0					
ANR	6140425	CompoundStatement		1418:0:28794:37489	6140423	0					
ANR	6140426	IdentifierDeclStatement	TCCState * s1 = tcc_state ;	1419:1:28797:28821	6140423	0	True				
ANR	6140427	IdentifierDecl	* s1 = tcc_state		6140423	0					
ANR	6140428	IdentifierDeclType	TCCState *		6140423	0					
ANR	6140429	Identifier	s1		6140423	1					
ANR	6140430	AssignmentExpression	* s1 = tcc_state		6140423	2		=			
ANR	6140431	Identifier	tcc_state		6140423	0					
ANR	6140432	Identifier	tcc_state		6140423	1					
ANR	6140433	IdentifierDeclStatement	"int i , c , n , saved_parse_flags ;"	1420:1:28824:28854	6140423	1	True				
ANR	6140434	IdentifierDecl	i		6140423	0					
ANR	6140435	IdentifierDeclType	int		6140423	0					
ANR	6140436	Identifier	i		6140423	1					
ANR	6140437	IdentifierDecl	c		6140423	1					
ANR	6140438	IdentifierDeclType	int		6140423	0					
ANR	6140439	Identifier	c		6140423	1					
ANR	6140440	IdentifierDecl	n		6140423	2					
ANR	6140441	IdentifierDeclType	int		6140423	0					
ANR	6140442	Identifier	n		6140423	1					
ANR	6140443	IdentifierDecl	saved_parse_flags		6140423	3					
ANR	6140444	IdentifierDeclType	int		6140423	0					
ANR	6140445	Identifier	saved_parse_flags		6140423	1					
ANR	6140446	IdentifierDeclStatement	"char buf [ 1024 ] , * q ;"	1421:1:28857:28875	6140423	2	True				
ANR	6140447	IdentifierDecl	buf [ 1024 ]		6140423	0					
ANR	6140448	IdentifierDeclType	char [ 1024 ]		6140423	0					
ANR	6140449	Identifier	buf		6140423	1					
ANR	6140450	PrimaryExpression	1024		6140423	2					
ANR	6140451	IdentifierDecl	* q		6140423	1					
ANR	6140452	IdentifierDeclType	char *		6140423	0					
ANR	6140453	Identifier	q		6140423	1					
ANR	6140454	IdentifierDeclStatement	Sym * s ;	1422:1:28878:28884	6140423	3	True				
ANR	6140455	IdentifierDecl	* s		6140423	0					
ANR	6140456	IdentifierDeclType	Sym *		6140423	0					
ANR	6140457	Identifier	s		6140423	1					
ANR	6140458	ExpressionStatement	saved_parse_flags = parse_flags	1424:1:28888:28919	6140423	4	True				
ANR	6140459	AssignmentExpression	saved_parse_flags = parse_flags		6140423	0		=			
ANR	6140460	Identifier	saved_parse_flags		6140423	0					
ANR	6140461	Identifier	parse_flags		6140423	1					
ANR	6140462	ExpressionStatement	parse_flags = PARSE_FLAG_PREPROCESS | PARSE_FLAG_TOK_NUM | PARSE_FLAG_LINEFEED	1425:1:28922:29008	6140423	5	True				
ANR	6140463	AssignmentExpression	parse_flags = PARSE_FLAG_PREPROCESS | PARSE_FLAG_TOK_NUM | PARSE_FLAG_LINEFEED		6140423	0		=			
ANR	6140464	Identifier	parse_flags		6140423	0					
ANR	6140465	InclusiveOrExpression	PARSE_FLAG_PREPROCESS | PARSE_FLAG_TOK_NUM | PARSE_FLAG_LINEFEED		6140423	1		|			
ANR	6140466	Identifier	PARSE_FLAG_PREPROCESS		6140423	0					
ANR	6140467	InclusiveOrExpression	PARSE_FLAG_TOK_NUM | PARSE_FLAG_LINEFEED		6140423	1		|			
ANR	6140468	Identifier	PARSE_FLAG_TOK_NUM		6140423	0					
ANR	6140469	Identifier	PARSE_FLAG_LINEFEED		6140423	1					
ANR	6140470	ExpressionStatement	next_nomacro ( )	1427:1:29011:29026	6140423	6	True				
ANR	6140471	CallExpression	next_nomacro ( )		6140423	0					
ANR	6140472	Callee	next_nomacro		6140423	0					
ANR	6140473	Identifier	next_nomacro		6140423	0					
ANR	6140474	ArgumentList			6140423	1					
ANR	6140475	Label	redo :	1428:0:29028:29032	6140423	7	True				
ANR	6140476	Identifier	redo		6140423	0					
ANR	6140477	SwitchStatement	switch ( tok )		6140423	8					
ANR	6140478	Condition	tok	1429:9:29043:29045	6140423	0	True				
ANR	6140479	Identifier	tok		6140423	0					
ANR	6140480	CompoundStatement		12:14:253:253	6140423	1					
ANR	6140481	Label	case TOK_DEFINE :	1430:1:29051:29066	6140423	0	True				
ANR	6140482	Identifier	TOK_DEFINE		6140423	0					
ANR	6140483	ExpressionStatement	next_nomacro ( )	1431:2:29070:29085	6140423	1	True				
ANR	6140484	CallExpression	next_nomacro ( )		6140423	0					
ANR	6140485	Callee	next_nomacro		6140423	0					
ANR	6140486	Identifier	next_nomacro		6140423	0					
ANR	6140487	ArgumentList			6140423	1					
ANR	6140488	ExpressionStatement	parse_define ( )	1432:2:29089:29104	6140423	2	True				
ANR	6140489	CallExpression	parse_define ( )		6140423	0					
ANR	6140490	Callee	parse_define		6140423	0					
ANR	6140491	Identifier	parse_define		6140423	0					
ANR	6140492	ArgumentList			6140423	1					
ANR	6140493	BreakStatement	break ;	1433:2:29108:29113	6140423	3	True				
ANR	6140494	Label	case TOK_UNDEF :	1434:1:29116:29130	6140423	4	True				
ANR	6140495	Identifier	TOK_UNDEF		6140423	0					
ANR	6140496	ExpressionStatement	next_nomacro ( )	1435:2:29134:29149	6140423	5	True				
ANR	6140497	CallExpression	next_nomacro ( )		6140423	0					
ANR	6140498	Callee	next_nomacro		6140423	0					
ANR	6140499	Identifier	next_nomacro		6140423	0					
ANR	6140500	ArgumentList			6140423	1					
ANR	6140501	ExpressionStatement	s = define_find ( tok )	1436:2:29153:29174	6140423	6	True				
ANR	6140502	AssignmentExpression	s = define_find ( tok )		6140423	0		=			
ANR	6140503	Identifier	s		6140423	0					
ANR	6140504	CallExpression	define_find ( tok )		6140423	1					
ANR	6140505	Callee	define_find		6140423	0					
ANR	6140506	Identifier	define_find		6140423	0					
ANR	6140507	ArgumentList	tok		6140423	1					
ANR	6140508	Argument	tok		6140423	0					
ANR	6140509	Identifier	tok		6140423	0					
ANR	6140510	IfStatement	if ( s )		6140423	7					
ANR	6140511	Condition	s	1438:6:29233:29233	6140423	0	True				
ANR	6140512	Identifier	s		6140423	0					
ANR	6140513	CompoundStatement		21:9:441:441	6140423	1					
ANR	6140514	ExpressionStatement	define_undef ( s )	1439:3:29241:29257	6140423	0	True				
ANR	6140515	CallExpression	define_undef ( s )		6140423	0					
ANR	6140516	Callee	define_undef		6140423	0					
ANR	6140517	Identifier	define_undef		6140423	0					
ANR	6140518	ArgumentList	s		6140423	1					
ANR	6140519	Argument	s		6140423	0					
ANR	6140520	Identifier	s		6140423	0					
ANR	6140521	BreakStatement	break ;	1441:2:29265:29270	6140423	8	True				
ANR	6140522	Label	case TOK_INCLUDE :	1442:1:29273:29289	6140423	9	True				
ANR	6140523	Identifier	TOK_INCLUDE		6140423	0					
ANR	6140524	Label	case TOK_INCLUDE_NEXT :	1443:1:29292:29313	6140423	10	True				
ANR	6140525	Identifier	TOK_INCLUDE_NEXT		6140423	0					
ANR	6140526	ExpressionStatement	ch = file -> buf_ptr [ 0 ]	1444:2:29317:29338	6140423	11	True				
ANR	6140527	AssignmentExpression	ch = file -> buf_ptr [ 0 ]		6140423	0		=			
ANR	6140528	Identifier	ch		6140423	0					
ANR	6140529	ArrayIndexing	file -> buf_ptr [ 0 ]		6140423	1					
ANR	6140530	PtrMemberAccess	file -> buf_ptr		6140423	0					
ANR	6140531	Identifier	file		6140423	0					
ANR	6140532	Identifier	buf_ptr		6140423	1					
ANR	6140533	PrimaryExpression	0		6140423	1					
ANR	6140534	ExpressionStatement	skip_spaces ( )	1446:2:29416:29430	6140423	12	True				
ANR	6140535	CallExpression	skip_spaces ( )		6140423	0					
ANR	6140536	Callee	skip_spaces		6140423	0					
ANR	6140537	Identifier	skip_spaces		6140423	0					
ANR	6140538	ArgumentList			6140423	1					
ANR	6140539	IfStatement	if ( ch == '<' )		6140423	13					
ANR	6140540	Condition	ch == '<'	1447:6:29438:29446	6140423	0	True				
ANR	6140541	EqualityExpression	ch == '<'		6140423	0		==			
ANR	6140542	Identifier	ch		6140423	0					
ANR	6140543	PrimaryExpression	'<'		6140423	1					
ANR	6140544	CompoundStatement		30:17:654:654	6140423	1					
ANR	6140545	ExpressionStatement	c = '>'	1448:3:29454:29461	6140423	0	True				
ANR	6140546	AssignmentExpression	c = '>'		6140423	0		=			
ANR	6140547	Identifier	c		6140423	0					
ANR	6140548	PrimaryExpression	'>'		6140423	1					
ANR	6140549	GotoStatement	goto read_name ;	1449:3:29466:29480	6140423	1	True				
ANR	6140550	Identifier	read_name		6140423	0					
ANR	6140551	ElseStatement	else		6140423	0					
ANR	6140552	IfStatement	"if ( ch == '\\""' )"		6140423	0					
ANR	6140553	Condition	"ch == '\\""'"	1450:13:29495:29504	6140423	0	True				
ANR	6140554	EqualityExpression	"ch == '\\""'"		6140423	0		==			
ANR	6140555	Identifier	ch		6140423	0					
ANR	6140556	PrimaryExpression	"'\\""'"		6140423	1					
ANR	6140557	CompoundStatement		33:25:712:712	6140423	1					
ANR	6140558	ExpressionStatement	c = ch	1451:3:29512:29518	6140423	0	True				
ANR	6140559	AssignmentExpression	c = ch		6140423	0		=			
ANR	6140560	Identifier	c		6140423	0					
ANR	6140561	Identifier	ch		6140423	1					
ANR	6140562	Label	read_name :	1452:0:29520:29529	6140423	1	True				
ANR	6140563	Identifier	read_name		6140423	0					
ANR	6140564	ExpressionStatement	inp ( )	1453:3:29534:29540	6140423	2	True				
ANR	6140565	CallExpression	inp ( )		6140423	0					
ANR	6140566	Callee	inp		6140423	0					
ANR	6140567	Identifier	inp		6140423	0					
ANR	6140568	ArgumentList			6140423	1					
ANR	6140569	ExpressionStatement	q = buf	1454:3:29545:29552	6140423	3	True				
ANR	6140570	AssignmentExpression	q = buf		6140423	0		=			
ANR	6140571	Identifier	q		6140423	0					
ANR	6140572	Identifier	buf		6140423	1					
ANR	6140573	WhileStatement	while ( ch != c && ch != '\\n' && ch != CH_EOF )		6140423	4					
ANR	6140574	Condition	ch != c && ch != '\\n' && ch != CH_EOF	1455:10:29564:29600	6140423	0	True				
ANR	6140575	AndExpression	ch != c && ch != '\\n' && ch != CH_EOF		6140423	0		&&			
ANR	6140576	EqualityExpression	ch != c		6140423	0		!=			
ANR	6140577	Identifier	ch		6140423	0					
ANR	6140578	Identifier	c		6140423	1					
ANR	6140579	AndExpression	ch != '\\n' && ch != CH_EOF		6140423	1		&&			
ANR	6140580	EqualityExpression	ch != '\\n'		6140423	0		!=			
ANR	6140581	Identifier	ch		6140423	0					
ANR	6140582	PrimaryExpression	'\\n'		6140423	1					
ANR	6140583	EqualityExpression	ch != CH_EOF		6140423	1		!=			
ANR	6140584	Identifier	ch		6140423	0					
ANR	6140585	Identifier	CH_EOF		6140423	1					
ANR	6140586	CompoundStatement		38:49:808:808	6140423	1					
ANR	6140587	IfStatement	if ( ( q - buf ) < sizeof ( buf ) - 1 )		6140423	0					
ANR	6140588	Condition	( q - buf ) < sizeof ( buf ) - 1	1456:8:29613:29639	6140423	0	True				
ANR	6140589	RelationalExpression	( q - buf ) < sizeof ( buf ) - 1		6140423	0		<			
ANR	6140590	AdditiveExpression	q - buf		6140423	0		-			
ANR	6140591	Identifier	q		6140423	0					
ANR	6140592	Identifier	buf		6140423	1					
ANR	6140593	AdditiveExpression	sizeof ( buf ) - 1		6140423	1		-			
ANR	6140594	SizeofExpression	sizeof ( buf )		6140423	0					
ANR	6140595	Sizeof	sizeof		6140423	0					
ANR	6140596	SizeofOperand	buf		6140423	1					
ANR	6140597	PrimaryExpression	1		6140423	1					
ANR	6140598	CompoundStatement		39:37:847:847	6140423	1					
ANR	6140599	ExpressionStatement	* q ++ = ch	1457:5:29649:29658	6140423	0	True				
ANR	6140600	AssignmentExpression	* q ++ = ch		6140423	0		=			
ANR	6140601	UnaryOperationExpression	* q ++		6140423	0					
ANR	6140602	UnaryOperator	*		6140423	0					
ANR	6140603	PostIncDecOperationExpression	q ++		6140423	1					
ANR	6140604	Identifier	q		6140423	0					
ANR	6140605	IncDec	++		6140423	1					
ANR	6140606	Identifier	ch		6140423	1					
ANR	6140607	IfStatement	if ( ch == '\\\\' )		6140423	1					
ANR	6140608	Condition	ch == '\\\\'	1459:8:29674:29683	6140423	0	True				
ANR	6140609	EqualityExpression	ch == '\\\\'		6140423	0		==			
ANR	6140610	Identifier	ch		6140423	0					
ANR	6140611	PrimaryExpression	'\\\\'		6140423	1					
ANR	6140612	CompoundStatement		42:20:891:891	6140423	1					
ANR	6140613	IfStatement	if ( handle_stray_noerror ( ) == 0 )		6140423	0					
ANR	6140614	Condition	handle_stray_noerror ( ) == 0	1460:9:29697:29724	6140423	0	True				
ANR	6140615	EqualityExpression	handle_stray_noerror ( ) == 0		6140423	0		==			
ANR	6140616	CallExpression	handle_stray_noerror ( )		6140423	0					
ANR	6140617	Callee	handle_stray_noerror		6140423	0					
ANR	6140618	Identifier	handle_stray_noerror		6140423	0					
ANR	6140619	ArgumentList			6140423	1					
ANR	6140620	PrimaryExpression	0		6140423	1					
ANR	6140621	CompoundStatement		43:39:932:932	6140423	1					
ANR	6140622	ExpressionStatement	-- q	1461:6:29735:29738	6140423	0	True				
ANR	6140623	UnaryExpression	-- q		6140423	0					
ANR	6140624	IncDec	--		6140423	0					
ANR	6140625	Identifier	q		6140423	1					
ANR	6140626	ElseStatement	else		6140423	0					
ANR	6140627	CompoundStatement		46:11:963:963	6140423	0					
ANR	6140628	ExpressionStatement	inp ( )	1464:5:29765:29771	6140423	0	True				
ANR	6140629	CallExpression	inp ( )		6140423	0					
ANR	6140630	Callee	inp		6140423	0					
ANR	6140631	Identifier	inp		6140423	0					
ANR	6140632	ArgumentList			6140423	1					
ANR	6140633	ExpressionStatement	* q = '\\0'	1467:3:29787:29796	6140423	5	True				
ANR	6140634	AssignmentExpression	* q = '\\0'		6140423	0		=			
ANR	6140635	UnaryOperationExpression	* q		6140423	0					
ANR	6140636	UnaryOperator	*		6140423	0					
ANR	6140637	Identifier	q		6140423	1					
ANR	6140638	PrimaryExpression	'\\0'		6140423	1					
ANR	6140639	ExpressionStatement	minp ( )	1468:3:29801:29808	6140423	6	True				
ANR	6140640	CallExpression	minp ( )		6140423	0					
ANR	6140641	Callee	minp		6140423	0					
ANR	6140642	Identifier	minp		6140423	0					
ANR	6140643	ArgumentList			6140423	1					
ANR	6140644	WhileStatement	while ( ch1 != '\\n' && ch1 != CH_EOF )		6140423	7					
ANR	6140645	Condition	ch1 != '\\n' && ch1 != CH_EOF	1472:10:29910:29937	6140423	0	True				
ANR	6140646	AndExpression	ch1 != '\\n' && ch1 != CH_EOF		6140423	0		&&			
ANR	6140647	EqualityExpression	ch1 != '\\n'		6140423	0		!=			
ANR	6140648	Identifier	ch1		6140423	0					
ANR	6140649	PrimaryExpression	'\\n'		6140423	1					
ANR	6140650	EqualityExpression	ch1 != CH_EOF		6140423	1		!=			
ANR	6140651	Identifier	ch1		6140423	0					
ANR	6140652	Identifier	CH_EOF		6140423	1					
ANR	6140653	ExpressionStatement	inp ( )	1473:4:29944:29950	6140423	1	True				
ANR	6140654	CallExpression	inp ( )		6140423	0					
ANR	6140655	Callee	inp		6140423	0					
ANR	6140656	Identifier	inp		6140423	0					
ANR	6140657	ArgumentList			6140423	1					
ANR	6140658	ElseStatement	else		6140423	0					
ANR	6140659	CompoundStatement		58:9:1173:1173	6140423	0					
ANR	6140660	ExpressionStatement	next ( )	1478:3:30073:30080	6140423	0	True				
ANR	6140661	CallExpression	next ( )		6140423	0					
ANR	6140662	Callee	next		6140423	0					
ANR	6140663	Identifier	next		6140423	0					
ANR	6140664	ArgumentList			6140423	1					
ANR	6140665	ExpressionStatement	buf [ 0 ] = '\\0'	1479:3:30085:30098	6140423	1	True				
ANR	6140666	AssignmentExpression	buf [ 0 ] = '\\0'		6140423	0		=			
ANR	6140667	ArrayIndexing	buf [ 0 ]		6140423	0					
ANR	6140668	Identifier	buf		6140423	0					
ANR	6140669	PrimaryExpression	0		6140423	1					
ANR	6140670	PrimaryExpression	'\\0'		6140423	1					
ANR	6140671	IfStatement	if ( tok == TOK_STR )		6140423	2					
ANR	6140672	Condition	tok == TOK_STR	1480:7:30107:30120	6140423	0	True				
ANR	6140673	EqualityExpression	tok == TOK_STR		6140423	0		==			
ANR	6140674	Identifier	tok		6140423	0					
ANR	6140675	Identifier	TOK_STR		6140423	1					
ANR	6140676	CompoundStatement		63:23:1328:1328	6140423	1					
ANR	6140677	WhileStatement	while ( tok != TOK_LINEFEED )		6140423	0					
ANR	6140678	Condition	tok != TOK_LINEFEED	1481:11:30136:30154	6140423	0	True				
ANR	6140679	EqualityExpression	tok != TOK_LINEFEED		6140423	0		!=			
ANR	6140680	Identifier	tok		6140423	0					
ANR	6140681	Identifier	TOK_LINEFEED		6140423	1					
ANR	6140682	CompoundStatement		64:32:1362:1362	6140423	1					
ANR	6140683	IfStatement	if ( tok != TOK_STR )		6140423	0					
ANR	6140684	Condition	tok != TOK_STR	1482:9:30168:30181	6140423	0	True				
ANR	6140685	EqualityExpression	tok != TOK_STR		6140423	0		!=			
ANR	6140686	Identifier	tok		6140423	0					
ANR	6140687	Identifier	TOK_STR		6140423	1					
ANR	6140688	CompoundStatement		65:25:1389:1389	6140423	1					
ANR	6140689	Label	include_syntax :	1483:0:30186:30200	6140423	0	True				
ANR	6140690	Identifier	include_syntax		6140423	0					
ANR	6140691	ExpressionStatement	"tcc_error ( ""'#include' expects \\""FILENAME\\"" or <FILENAME>"" )"	1484:6:30208:30267	6140423	1	True				
ANR	6140692	CallExpression	"tcc_error ( ""'#include' expects \\""FILENAME\\"" or <FILENAME>"" )"		6140423	0					
ANR	6140693	Callee	tcc_error		6140423	0					
ANR	6140694	Identifier	tcc_error		6140423	0					
ANR	6140695	ArgumentList	"""'#include' expects \\""FILENAME\\"" or <FILENAME>"""		6140423	1					
ANR	6140696	Argument	"""'#include' expects \\""FILENAME\\"" or <FILENAME>"""		6140423	0					
ANR	6140697	PrimaryExpression	"""'#include' expects \\""FILENAME\\"" or <FILENAME>"""		6140423	0					
ANR	6140698	ExpressionStatement	"pstrcat ( buf , sizeof ( buf ) , ( char * ) tokc . cstr -> data )"	1486:5:30281:30333	6140423	1	True				
ANR	6140699	CallExpression	"pstrcat ( buf , sizeof ( buf ) , ( char * ) tokc . cstr -> data )"		6140423	0					
ANR	6140700	Callee	pstrcat		6140423	0					
ANR	6140701	Identifier	pstrcat		6140423	0					
ANR	6140702	ArgumentList	buf		6140423	1					
ANR	6140703	Argument	buf		6140423	0					
ANR	6140704	Identifier	buf		6140423	0					
ANR	6140705	Argument	sizeof ( buf )		6140423	1					
ANR	6140706	SizeofExpression	sizeof ( buf )		6140423	0					
ANR	6140707	Sizeof	sizeof		6140423	0					
ANR	6140708	SizeofOperand	buf		6140423	1					
ANR	6140709	Argument	( char * ) tokc . cstr -> data		6140423	2					
ANR	6140710	CastExpression	( char * ) tokc . cstr -> data		6140423	0					
ANR	6140711	CastTarget	char *		6140423	0					
ANR	6140712	PtrMemberAccess	tokc . cstr -> data		6140423	1					
ANR	6140713	MemberAccess	tokc . cstr		6140423	0					
ANR	6140714	Identifier	tokc		6140423	0					
ANR	6140715	Identifier	cstr		6140423	1					
ANR	6140716	Identifier	data		6140423	1					
ANR	6140717	ExpressionStatement	next ( )	1487:5:30340:30347	6140423	2	True				
ANR	6140718	CallExpression	next ( )		6140423	0					
ANR	6140719	Callee	next		6140423	0					
ANR	6140720	Identifier	next		6140423	0					
ANR	6140721	ArgumentList			6140423	1					
ANR	6140722	ExpressionStatement	"c = '\\""'"	1489:4:30359:30367	6140423	1	True				
ANR	6140723	AssignmentExpression	"c = '\\""'"		6140423	0		=			
ANR	6140724	Identifier	c		6140423	0					
ANR	6140725	PrimaryExpression	"'\\""'"		6140423	1					
ANR	6140726	ElseStatement	else		6140423	0					
ANR	6140727	CompoundStatement		74:4:1590:1597	6140423	0					
ANR	6140728	IdentifierDeclStatement	int len ;	1491:4:30385:30392	6140423	0	True				
ANR	6140729	IdentifierDecl	len		6140423	0					
ANR	6140730	IdentifierDeclType	int		6140423	0					
ANR	6140731	Identifier	len		6140423	1					
ANR	6140732	WhileStatement	while ( tok != TOK_LINEFEED )		6140423	1					
ANR	6140733	Condition	tok != TOK_LINEFEED	1492:11:30405:30423	6140423	0	True				
ANR	6140734	EqualityExpression	tok != TOK_LINEFEED		6140423	0		!=			
ANR	6140735	Identifier	tok		6140423	0					
ANR	6140736	Identifier	TOK_LINEFEED		6140423	1					
ANR	6140737	CompoundStatement		75:32:1631:1631	6140423	1					
ANR	6140738	ExpressionStatement	"pstrcat ( buf , sizeof ( buf ) , get_tok_str ( tok , & tokc ) )"	1493:5:30433:30485	6140423	0	True				
ANR	6140739	CallExpression	"pstrcat ( buf , sizeof ( buf ) , get_tok_str ( tok , & tokc ) )"		6140423	0					
ANR	6140740	Callee	pstrcat		6140423	0					
ANR	6140741	Identifier	pstrcat		6140423	0					
ANR	6140742	ArgumentList	buf		6140423	1					
ANR	6140743	Argument	buf		6140423	0					
ANR	6140744	Identifier	buf		6140423	0					
ANR	6140745	Argument	sizeof ( buf )		6140423	1					
ANR	6140746	SizeofExpression	sizeof ( buf )		6140423	0					
ANR	6140747	Sizeof	sizeof		6140423	0					
ANR	6140748	SizeofOperand	buf		6140423	1					
ANR	6140749	Argument	"get_tok_str ( tok , & tokc )"		6140423	2					
ANR	6140750	CallExpression	"get_tok_str ( tok , & tokc )"		6140423	0					
ANR	6140751	Callee	get_tok_str		6140423	0					
ANR	6140752	Identifier	get_tok_str		6140423	0					
ANR	6140753	ArgumentList	tok		6140423	1					
ANR	6140754	Argument	tok		6140423	0					
ANR	6140755	Identifier	tok		6140423	0					
ANR	6140756	Argument	& tokc		6140423	1					
ANR	6140757	UnaryOperationExpression	& tokc		6140423	0					
ANR	6140758	UnaryOperator	&		6140423	0					
ANR	6140759	Identifier	tokc		6140423	1					
ANR	6140760	ExpressionStatement	next ( )	1494:5:30492:30499	6140423	1	True				
ANR	6140761	CallExpression	next ( )		6140423	0					
ANR	6140762	Callee	next		6140423	0					
ANR	6140763	Identifier	next		6140423	0					
ANR	6140764	ArgumentList			6140423	1					
ANR	6140765	ExpressionStatement	len = strlen ( buf )	1496:4:30511:30529	6140423	2	True				
ANR	6140766	AssignmentExpression	len = strlen ( buf )		6140423	0		=			
ANR	6140767	Identifier	len		6140423	0					
ANR	6140768	CallExpression	strlen ( buf )		6140423	1					
ANR	6140769	Callee	strlen		6140423	0					
ANR	6140770	Identifier	strlen		6140423	0					
ANR	6140771	ArgumentList	buf		6140423	1					
ANR	6140772	Argument	buf		6140423	0					
ANR	6140773	Identifier	buf		6140423	0					
ANR	6140774	IfStatement	if ( len < 2 || buf [ 0 ] != '<' || buf [ len - 1 ] != '>' )		6140423	3					
ANR	6140775	Condition	len < 2 || buf [ 0 ] != '<' || buf [ len - 1 ] != '>'	1498:8:30578:30624	6140423	0	True				
ANR	6140776	OrExpression	len < 2 || buf [ 0 ] != '<' || buf [ len - 1 ] != '>'		6140423	0		||			
ANR	6140777	RelationalExpression	len < 2		6140423	0		<			
ANR	6140778	Identifier	len		6140423	0					
ANR	6140779	PrimaryExpression	2		6140423	1					
ANR	6140780	OrExpression	buf [ 0 ] != '<' || buf [ len - 1 ] != '>'		6140423	1		||			
ANR	6140781	EqualityExpression	buf [ 0 ] != '<'		6140423	0		!=			
ANR	6140782	ArrayIndexing	buf [ 0 ]		6140423	0					
ANR	6140783	Identifier	buf		6140423	0					
ANR	6140784	PrimaryExpression	0		6140423	1					
ANR	6140785	PrimaryExpression	'<'		6140423	1					
ANR	6140786	EqualityExpression	buf [ len - 1 ] != '>'		6140423	1		!=			
ANR	6140787	ArrayIndexing	buf [ len - 1 ]		6140423	0					
ANR	6140788	Identifier	buf		6140423	0					
ANR	6140789	AdditiveExpression	len - 1		6140423	1		-			
ANR	6140790	Identifier	len		6140423	0					
ANR	6140791	PrimaryExpression	1		6140423	1					
ANR	6140792	PrimaryExpression	'>'		6140423	1					
ANR	6140793	CompoundStatement		81:57:1832:1832	6140423	1					
ANR	6140794	GotoStatement	goto include_syntax ;	1499:5:30634:30653	6140423	0	True				
ANR	6140795	Identifier	include_syntax		6140423	0					
ANR	6140796	ExpressionStatement	"memmove ( buf , buf + 1 , len - 2 )"	1501:4:30665:30696	6140423	4	True				
ANR	6140797	CallExpression	"memmove ( buf , buf + 1 , len - 2 )"		6140423	0					
ANR	6140798	Callee	memmove		6140423	0					
ANR	6140799	Identifier	memmove		6140423	0					
ANR	6140800	ArgumentList	buf		6140423	1					
ANR	6140801	Argument	buf		6140423	0					
ANR	6140802	Identifier	buf		6140423	0					
ANR	6140803	Argument	buf + 1		6140423	1					
ANR	6140804	AdditiveExpression	buf + 1		6140423	0		+			
ANR	6140805	Identifier	buf		6140423	0					
ANR	6140806	PrimaryExpression	1		6140423	1					
ANR	6140807	Argument	len - 2		6140423	2					
ANR	6140808	AdditiveExpression	len - 2		6140423	0		-			
ANR	6140809	Identifier	len		6140423	0					
ANR	6140810	PrimaryExpression	2		6140423	1					
ANR	6140811	ExpressionStatement	buf [ len - 2 ] = '\\0'	1502:4:30702:30721	6140423	5	True				
ANR	6140812	AssignmentExpression	buf [ len - 2 ] = '\\0'		6140423	0		=			
ANR	6140813	ArrayIndexing	buf [ len - 2 ]		6140423	0					
ANR	6140814	Identifier	buf		6140423	0					
ANR	6140815	AdditiveExpression	len - 2		6140423	1		-			
ANR	6140816	Identifier	len		6140423	0					
ANR	6140817	PrimaryExpression	2		6140423	1					
ANR	6140818	PrimaryExpression	'\\0'		6140423	1					
ANR	6140819	ExpressionStatement	c = '>'	1503:4:30727:30734	6140423	6	True				
ANR	6140820	AssignmentExpression	c = '>'		6140423	0		=			
ANR	6140821	Identifier	c		6140423	0					
ANR	6140822	PrimaryExpression	'>'		6140423	1					
ANR	6140823	IfStatement	if ( s1 -> include_stack_ptr >= s1 -> include_stack + INCLUDE_STACK_SIZE )		6140423	14					
ANR	6140824	Condition	s1 -> include_stack_ptr >= s1 -> include_stack + INCLUDE_STACK_SIZE	1507:6:30752:30814	6140423	0	True				
ANR	6140825	RelationalExpression	s1 -> include_stack_ptr >= s1 -> include_stack + INCLUDE_STACK_SIZE		6140423	0		>=			
ANR	6140826	PtrMemberAccess	s1 -> include_stack_ptr		6140423	0					
ANR	6140827	Identifier	s1		6140423	0					
ANR	6140828	Identifier	include_stack_ptr		6140423	1					
ANR	6140829	AdditiveExpression	s1 -> include_stack + INCLUDE_STACK_SIZE		6140423	1		+			
ANR	6140830	PtrMemberAccess	s1 -> include_stack		6140423	0					
ANR	6140831	Identifier	s1		6140423	0					
ANR	6140832	Identifier	include_stack		6140423	1					
ANR	6140833	Identifier	INCLUDE_STACK_SIZE		6140423	1					
ANR	6140834	CompoundStatement		90:71:2022:2022	6140423	1					
ANR	6140835	ExpressionStatement	"tcc_error ( ""#include recursion too deep"" )"	1508:3:30822:30863	6140423	0	True				
ANR	6140836	CallExpression	"tcc_error ( ""#include recursion too deep"" )"		6140423	0					
ANR	6140837	Callee	tcc_error		6140423	0					
ANR	6140838	Identifier	tcc_error		6140423	0					
ANR	6140839	ArgumentList	"""#include recursion too deep"""		6140423	1					
ANR	6140840	Argument	"""#include recursion too deep"""		6140423	0					
ANR	6140841	PrimaryExpression	"""#include recursion too deep"""		6140423	0					
ANR	6140842	ExpressionStatement	* s1 -> include_stack_ptr = file	1511:2:30940:30969	6140423	15	True				
ANR	6140843	AssignmentExpression	* s1 -> include_stack_ptr = file		6140423	0		=			
ANR	6140844	UnaryOperationExpression	* s1 -> include_stack_ptr		6140423	0					
ANR	6140845	UnaryOperator	*		6140423	0					
ANR	6140846	PtrMemberAccess	s1 -> include_stack_ptr		6140423	1					
ANR	6140847	Identifier	s1		6140423	0					
ANR	6140848	Identifier	include_stack_ptr		6140423	1					
ANR	6140849	Identifier	file		6140423	1					
ANR	6140850	ExpressionStatement	n = s1 -> nb_include_paths + s1 -> nb_sysinclude_paths	1513:2:30974:31024	6140423	16	True				
ANR	6140851	AssignmentExpression	n = s1 -> nb_include_paths + s1 -> nb_sysinclude_paths		6140423	0		=			
ANR	6140852	Identifier	n		6140423	0					
ANR	6140853	AdditiveExpression	s1 -> nb_include_paths + s1 -> nb_sysinclude_paths		6140423	1		+			
ANR	6140854	PtrMemberAccess	s1 -> nb_include_paths		6140423	0					
ANR	6140855	Identifier	s1		6140423	0					
ANR	6140856	Identifier	nb_include_paths		6140423	1					
ANR	6140857	PtrMemberAccess	s1 -> nb_sysinclude_paths		6140423	1					
ANR	6140858	Identifier	s1		6140423	0					
ANR	6140859	Identifier	nb_sysinclude_paths		6140423	1					
ANR	6140860	ForStatement	for ( i = - 2 ; i < n ; ++ i )		6140423	17					
ANR	6140861	ForInit	i = - 2 ;	1514:7:31033:31039	6140423	0	True				
ANR	6140862	AssignmentExpression	i = - 2		6140423	0		=			
ANR	6140863	Identifier	i		6140423	0					
ANR	6140864	UnaryOperationExpression	- 2		6140423	1					
ANR	6140865	UnaryOperator	-		6140423	0					
ANR	6140866	PrimaryExpression	2		6140423	1					
ANR	6140867	Condition	i < n	1514:15:31041:31045	6140423	1	True				
ANR	6140868	RelationalExpression	i < n		6140423	0		<			
ANR	6140869	Identifier	i		6140423	0					
ANR	6140870	Identifier	n		6140423	1					
ANR	6140871	UnaryExpression	++ i	1514:22:31048:31050	6140423	2	True				
ANR	6140872	IncDec	++		6140423	0					
ANR	6140873	Identifier	i		6140423	1					
ANR	6140874	CompoundStatement		101:3:2342:2358	6140423	3					
ANR	6140875	IdentifierDeclStatement	char buf1 [ sizeof file -> filename ] ;	1515:3:31058:31090	6140423	0	True				
ANR	6140876	IdentifierDecl	buf1 [ sizeof file -> filename ]		6140423	0					
ANR	6140877	IdentifierDeclType	char [ sizeof file -> filename ]		6140423	0					
ANR	6140878	Identifier	buf1		6140423	1					
ANR	6140879	SizeofExpression	sizeof file -> filename		6140423	2					
ANR	6140880	Sizeof	sizeof		6140423	0					
ANR	6140881	PtrMemberAccess	file -> filename		6140423	1					
ANR	6140882	Identifier	file		6140423	0					
ANR	6140883	Identifier	filename		6140423	1					
ANR	6140884	IdentifierDeclStatement	CachedInclude * e ;	1516:3:31095:31111	6140423	1	True				
ANR	6140885	IdentifierDecl	* e		6140423	0					
ANR	6140886	IdentifierDeclType	CachedInclude *		6140423	0					
ANR	6140887	Identifier	e		6140423	1					
ANR	6140888	IdentifierDeclStatement	BufferedFile * * f ;	1517:3:31116:31132	6140423	2	True				
ANR	6140889	IdentifierDecl	* * f		6140423	0					
ANR	6140890	IdentifierDeclType	BufferedFile * *		6140423	0					
ANR	6140891	Identifier	f		6140423	1					
ANR	6140892	IdentifierDeclStatement	const char * path ;	1518:3:31137:31153	6140423	3	True				
ANR	6140893	IdentifierDecl	* path		6140423	0					
ANR	6140894	IdentifierDeclType	const char *		6140423	0					
ANR	6140895	Identifier	path		6140423	1					
ANR	6140896	IfStatement	if ( i == - 2 )		6140423	4					
ANR	6140897	Condition	i == - 2	1520:7:31163:31169	6140423	0	True				
ANR	6140898	EqualityExpression	i == - 2		6140423	0		==			
ANR	6140899	Identifier	i		6140423	0					
ANR	6140900	UnaryOperationExpression	- 2		6140423	1					
ANR	6140901	UnaryOperator	-		6140423	0					
ANR	6140902	PrimaryExpression	2		6140423	1					
ANR	6140903	CompoundStatement		103:16:2377:2377	6140423	1					
ANR	6140904	IfStatement	if ( ! IS_ABSPATH ( buf ) )		6140423	0					
ANR	6140905	Condition	! IS_ABSPATH ( buf )	1522:8:31220:31236	6140423	0	True				
ANR	6140906	UnaryOperationExpression	! IS_ABSPATH ( buf )		6140423	0					
ANR	6140907	UnaryOperator	!		6140423	0					
ANR	6140908	CallExpression	IS_ABSPATH ( buf )		6140423	1					
ANR	6140909	Callee	IS_ABSPATH		6140423	0					
ANR	6140910	Identifier	IS_ABSPATH		6140423	0					
ANR	6140911	ArgumentList	buf		6140423	1					
ANR	6140912	Argument	buf		6140423	0					
ANR	6140913	Identifier	buf		6140423	0					
ANR	6140914	CompoundStatement		105:27:2444:2444	6140423	1					
ANR	6140915	ContinueStatement	continue ;	1523:5:31246:31254	6140423	0	True				
ANR	6140916	ExpressionStatement	buf1 [ 0 ] = 0	1525:4:31266:31277	6140423	1	True				
ANR	6140917	AssignmentExpression	buf1 [ 0 ] = 0		6140423	0		=			
ANR	6140918	ArrayIndexing	buf1 [ 0 ]		6140423	0					
ANR	6140919	Identifier	buf1		6140423	0					
ANR	6140920	PrimaryExpression	0		6140423	1					
ANR	6140921	PrimaryExpression	0		6140423	1					
ANR	6140922	ExpressionStatement	i = n	1526:4:31283:31288	6140423	2	True				
ANR	6140923	AssignmentExpression	i = n		6140423	0		=			
ANR	6140924	Identifier	i		6140423	0					
ANR	6140925	Identifier	n		6140423	1					
ANR	6140926	ElseStatement	else		6140423	0					
ANR	6140927	IfStatement	if ( i == - 1 )		6140423	0					
ANR	6140928	Condition	i == - 1	1528:14:31326:31332	6140423	0	True				
ANR	6140929	EqualityExpression	i == - 1		6140423	0		==			
ANR	6140930	Identifier	i		6140423	0					
ANR	6140931	UnaryOperationExpression	- 1		6140423	1					
ANR	6140932	UnaryOperator	-		6140423	0					
ANR	6140933	PrimaryExpression	1		6140423	1					
ANR	6140934	CompoundStatement		111:23:2540:2540	6140423	1					
ANR	6140935	IfStatement	"if ( c != '\\""' )"		6140423	0					
ANR	6140936	Condition	"c != '\\""'"	1530:8:31391:31399	6140423	0	True				
ANR	6140937	EqualityExpression	"c != '\\""'"		6140423	0		!=			
ANR	6140938	Identifier	c		6140423	0					
ANR	6140939	PrimaryExpression	"'\\""'"		6140423	1					
ANR	6140940	CompoundStatement		113:19:2607:2607	6140423	1					
ANR	6140941	ContinueStatement	continue ;	1531:5:31409:31417	6140423	0	True				
ANR	6140942	ExpressionStatement	path = file -> filename	1533:4:31429:31450	6140423	1	True				
ANR	6140943	AssignmentExpression	path = file -> filename		6140423	0		=			
ANR	6140944	Identifier	path		6140423	0					
ANR	6140945	PtrMemberAccess	file -> filename		6140423	1					
ANR	6140946	Identifier	file		6140423	0					
ANR	6140947	Identifier	filename		6140423	1					
ANR	6140948	ExpressionStatement	"pstrncpy ( buf1 , path , tcc_basename ( path ) - path )"	1534:4:31456:31505	6140423	2	True				
ANR	6140949	CallExpression	"pstrncpy ( buf1 , path , tcc_basename ( path ) - path )"		6140423	0					
ANR	6140950	Callee	pstrncpy		6140423	0					
ANR	6140951	Identifier	pstrncpy		6140423	0					
ANR	6140952	ArgumentList	buf1		6140423	1					
ANR	6140953	Argument	buf1		6140423	0					
ANR	6140954	Identifier	buf1		6140423	0					
ANR	6140955	Argument	path		6140423	1					
ANR	6140956	Identifier	path		6140423	0					
ANR	6140957	Argument	tcc_basename ( path ) - path		6140423	2					
ANR	6140958	AdditiveExpression	tcc_basename ( path ) - path		6140423	0		-			
ANR	6140959	CallExpression	tcc_basename ( path )		6140423	0					
ANR	6140960	Callee	tcc_basename		6140423	0					
ANR	6140961	Identifier	tcc_basename		6140423	0					
ANR	6140962	ArgumentList	path		6140423	1					
ANR	6140963	Argument	path		6140423	0					
ANR	6140964	Identifier	path		6140423	0					
ANR	6140965	Identifier	path		6140423	1					
ANR	6140966	ElseStatement	else		6140423	0					
ANR	6140967	CompoundStatement		119:10:2723:2723	6140423	0					
ANR	6140968	IfStatement	if ( i < s1 -> nb_include_paths )		6140423	0					
ANR	6140969	Condition	i < s1 -> nb_include_paths	1538:8:31570:31593	6140423	0	True				
ANR	6140970	RelationalExpression	i < s1 -> nb_include_paths		6140423	0		<			
ANR	6140971	Identifier	i		6140423	0					
ANR	6140972	PtrMemberAccess	s1 -> nb_include_paths		6140423	1					
ANR	6140973	Identifier	s1		6140423	0					
ANR	6140974	Identifier	nb_include_paths		6140423	1					
ANR	6140975	CompoundStatement		121:34:2801:2801	6140423	1					
ANR	6140976	ExpressionStatement	path = s1 -> include_paths [ i ]	1539:5:31603:31630	6140423	0	True				
ANR	6140977	AssignmentExpression	path = s1 -> include_paths [ i ]		6140423	0		=			
ANR	6140978	Identifier	path		6140423	0					
ANR	6140979	ArrayIndexing	s1 -> include_paths [ i ]		6140423	1					
ANR	6140980	PtrMemberAccess	s1 -> include_paths		6140423	0					
ANR	6140981	Identifier	s1		6140423	0					
ANR	6140982	Identifier	include_paths		6140423	1					
ANR	6140983	Identifier	i		6140423	1					
ANR	6140984	ElseStatement	else		6140423	0					
ANR	6140985	CompoundStatement		123:11:2848:2848	6140423	0					
ANR	6140986	ExpressionStatement	path = s1 -> sysinclude_paths [ i - s1 -> nb_include_paths ]	1541:5:31650:31703	6140423	0	True				
ANR	6140987	AssignmentExpression	path = s1 -> sysinclude_paths [ i - s1 -> nb_include_paths ]		6140423	0		=			
ANR	6140988	Identifier	path		6140423	0					
ANR	6140989	ArrayIndexing	s1 -> sysinclude_paths [ i - s1 -> nb_include_paths ]		6140423	1					
ANR	6140990	PtrMemberAccess	s1 -> sysinclude_paths		6140423	0					
ANR	6140991	Identifier	s1		6140423	0					
ANR	6140992	Identifier	sysinclude_paths		6140423	1					
ANR	6140993	AdditiveExpression	i - s1 -> nb_include_paths		6140423	1		-			
ANR	6140994	Identifier	i		6140423	0					
ANR	6140995	PtrMemberAccess	s1 -> nb_include_paths		6140423	1					
ANR	6140996	Identifier	s1		6140423	0					
ANR	6140997	Identifier	nb_include_paths		6140423	1					
ANR	6140998	ExpressionStatement	"pstrcpy ( buf1 , sizeof ( buf1 ) , path )"	1543:4:31715:31749	6140423	1	True				
ANR	6140999	CallExpression	"pstrcpy ( buf1 , sizeof ( buf1 ) , path )"		6140423	0					
ANR	6141000	Callee	pstrcpy		6140423	0					
ANR	6141001	Identifier	pstrcpy		6140423	0					
ANR	6141002	ArgumentList	buf1		6140423	1					
ANR	6141003	Argument	buf1		6140423	0					
ANR	6141004	Identifier	buf1		6140423	0					
ANR	6141005	Argument	sizeof ( buf1 )		6140423	1					
ANR	6141006	SizeofExpression	sizeof ( buf1 )		6140423	0					
ANR	6141007	Sizeof	sizeof		6140423	0					
ANR	6141008	SizeofOperand	buf1		6140423	1					
ANR	6141009	Argument	path		6140423	2					
ANR	6141010	Identifier	path		6140423	0					
ANR	6141011	ExpressionStatement	"pstrcat ( buf1 , sizeof ( buf1 ) , ""/"" )"	1544:4:31755:31788	6140423	2	True				
ANR	6141012	CallExpression	"pstrcat ( buf1 , sizeof ( buf1 ) , ""/"" )"		6140423	0					
ANR	6141013	Callee	pstrcat		6140423	0					
ANR	6141014	Identifier	pstrcat		6140423	0					
ANR	6141015	ArgumentList	buf1		6140423	1					
ANR	6141016	Argument	buf1		6140423	0					
ANR	6141017	Identifier	buf1		6140423	0					
ANR	6141018	Argument	sizeof ( buf1 )		6140423	1					
ANR	6141019	SizeofExpression	sizeof ( buf1 )		6140423	0					
ANR	6141020	Sizeof	sizeof		6140423	0					
ANR	6141021	SizeofOperand	buf1		6140423	1					
ANR	6141022	Argument	"""/"""		6140423	2					
ANR	6141023	PrimaryExpression	"""/"""		6140423	0					
ANR	6141024	ExpressionStatement	"pstrcat ( buf1 , sizeof ( buf1 ) , buf )"	1547:3:31799:31832	6140423	5	True				
ANR	6141025	CallExpression	"pstrcat ( buf1 , sizeof ( buf1 ) , buf )"		6140423	0					
ANR	6141026	Callee	pstrcat		6140423	0					
ANR	6141027	Identifier	pstrcat		6140423	0					
ANR	6141028	ArgumentList	buf1		6140423	1					
ANR	6141029	Argument	buf1		6140423	0					
ANR	6141030	Identifier	buf1		6140423	0					
ANR	6141031	Argument	sizeof ( buf1 )		6140423	1					
ANR	6141032	SizeofExpression	sizeof ( buf1 )		6140423	0					
ANR	6141033	Sizeof	sizeof		6140423	0					
ANR	6141034	SizeofOperand	buf1		6140423	1					
ANR	6141035	Argument	buf		6140423	2					
ANR	6141036	Identifier	buf		6140423	0					
ANR	6141037	IfStatement	if ( tok == TOK_INCLUDE_NEXT )		6140423	6					
ANR	6141038	Condition	tok == TOK_INCLUDE_NEXT	1549:7:31842:31864	6140423	0	True				
ANR	6141039	EqualityExpression	tok == TOK_INCLUDE_NEXT		6140423	0		==			
ANR	6141040	Identifier	tok		6140423	0					
ANR	6141041	Identifier	TOK_INCLUDE_NEXT		6140423	1					
ANR	6141042	CompoundStatement		132:32:3072:3072	6140423	1					
ANR	6141043	ForStatement	for ( f = s1 -> include_stack_ptr ; f >= s1 -> include_stack ; -- f )		6140423	0					
ANR	6141044	ForInit	f = s1 -> include_stack_ptr ;	1550:9:31878:31903	6140423	0	True				
ANR	6141045	AssignmentExpression	f = s1 -> include_stack_ptr		6140423	0		=			
ANR	6141046	Identifier	f		6140423	0					
ANR	6141047	PtrMemberAccess	s1 -> include_stack_ptr		6140423	1					
ANR	6141048	Identifier	s1		6140423	0					
ANR	6141049	Identifier	include_stack_ptr		6140423	1					
ANR	6141050	Condition	f >= s1 -> include_stack	1550:36:31905:31926	6140423	1	True				
ANR	6141051	RelationalExpression	f >= s1 -> include_stack		6140423	0		>=			
ANR	6141052	Identifier	f		6140423	0					
ANR	6141053	PtrMemberAccess	s1 -> include_stack		6140423	1					
ANR	6141054	Identifier	s1		6140423	0					
ANR	6141055	Identifier	include_stack		6140423	1					
ANR	6141056	UnaryExpression	-- f	1550:60:31929:31931	6140423	2	True				
ANR	6141057	IncDec	--		6140423	0					
ANR	6141058	Identifier	f		6140423	1					
ANR	6141059	CompoundStatement		133:65:3139:3139	6140423	3					
ANR	6141060	IfStatement	"if ( 0 == PATHCMP ( ( * f ) -> filename , buf1 ) )"		6140423	0					
ANR	6141061	Condition	"0 == PATHCMP ( ( * f ) -> filename , buf1 )"	1551:9:31945:31979	6140423	0	True				
ANR	6141062	EqualityExpression	"0 == PATHCMP ( ( * f ) -> filename , buf1 )"		6140423	0		==			
ANR	6141063	PrimaryExpression	0		6140423	0					
ANR	6141064	CallExpression	"PATHCMP ( ( * f ) -> filename , buf1 )"		6140423	1					
ANR	6141065	Callee	PATHCMP		6140423	0					
ANR	6141066	Identifier	PATHCMP		6140423	0					
ANR	6141067	ArgumentList	( * f ) -> filename		6140423	1					
ANR	6141068	Argument	( * f ) -> filename		6140423	0					
ANR	6141069	PtrMemberAccess	( * f ) -> filename		6140423	0					
ANR	6141070	UnaryOperationExpression	* f		6140423	0					
ANR	6141071	UnaryOperator	*		6140423	0					
ANR	6141072	Identifier	f		6140423	1					
ANR	6141073	Identifier	filename		6140423	1					
ANR	6141074	Argument	buf1		6140423	1					
ANR	6141075	Identifier	buf1		6140423	0					
ANR	6141076	CompoundStatement		134:46:3187:3187	6140423	1					
ANR	6141077	ExpressionStatement	"printf ( ""%s: #include_next skipping %s\\n"" , file -> filename , buf1 )"	1553:6:32007:32071	6140423	0	True				
ANR	6141078	CallExpression	"printf ( ""%s: #include_next skipping %s\\n"" , file -> filename , buf1 )"		6140423	0					
ANR	6141079	Callee	printf		6140423	0					
ANR	6141080	Identifier	printf		6140423	0					
ANR	6141081	ArgumentList	"""%s: #include_next skipping %s\\n"""		6140423	1					
ANR	6141082	Argument	"""%s: #include_next skipping %s\\n"""		6140423	0					
ANR	6141083	PrimaryExpression	"""%s: #include_next skipping %s\\n"""		6140423	0					
ANR	6141084	Argument	file -> filename		6140423	1					
ANR	6141085	PtrMemberAccess	file -> filename		6140423	0					
ANR	6141086	Identifier	file		6140423	0					
ANR	6141087	Identifier	filename		6140423	1					
ANR	6141088	Argument	buf1		6140423	2					
ANR	6141089	Identifier	buf1		6140423	0					
ANR	6141090	GotoStatement	goto include_trynext ;	1555:6:32086:32106	6140423	1	True				
ANR	6141091	Identifier	include_trynext		6140423	0					
ANR	6141092	ExpressionStatement	"e = search_cached_include ( s1 , buf1 )"	1560:3:32130:32166	6140423	7	True				
ANR	6141093	AssignmentExpression	"e = search_cached_include ( s1 , buf1 )"		6140423	0		=			
ANR	6141094	Identifier	e		6140423	0					
ANR	6141095	CallExpression	"search_cached_include ( s1 , buf1 )"		6140423	1					
ANR	6141096	Callee	search_cached_include		6140423	0					
ANR	6141097	Identifier	search_cached_include		6140423	0					
ANR	6141098	ArgumentList	s1		6140423	1					
ANR	6141099	Argument	s1		6140423	0					
ANR	6141100	Identifier	s1		6140423	0					
ANR	6141101	Argument	buf1		6140423	1					
ANR	6141102	Identifier	buf1		6140423	0					
ANR	6141103	IfStatement	if ( e && define_find ( e -> ifndef_macro ) )		6140423	8					
ANR	6141104	Condition	e && define_find ( e -> ifndef_macro )	1561:7:32175:32208	6140423	0	True				
ANR	6141105	AndExpression	e && define_find ( e -> ifndef_macro )		6140423	0		&&			
ANR	6141106	Identifier	e		6140423	0					
ANR	6141107	CallExpression	define_find ( e -> ifndef_macro )		6140423	1					
ANR	6141108	Callee	define_find		6140423	0					
ANR	6141109	Identifier	define_find		6140423	0					
ANR	6141110	ArgumentList	e -> ifndef_macro		6140423	1					
ANR	6141111	Argument	e -> ifndef_macro		6140423	0					
ANR	6141112	PtrMemberAccess	e -> ifndef_macro		6140423	0					
ANR	6141113	Identifier	e		6140423	0					
ANR	6141114	Identifier	ifndef_macro		6140423	1					
ANR	6141115	CompoundStatement		144:43:3416:3416	6140423	1					
ANR	6141116	ExpressionStatement	"printf ( ""%s: skipping cached %s\\n"" , file -> filename , buf1 )"	1565:4:32318:32375	6140423	0	True				
ANR	6141117	CallExpression	"printf ( ""%s: skipping cached %s\\n"" , file -> filename , buf1 )"		6140423	0					
ANR	6141118	Callee	printf		6140423	0					
ANR	6141119	Identifier	printf		6140423	0					
ANR	6141120	ArgumentList	"""%s: skipping cached %s\\n"""		6140423	1					
ANR	6141121	Argument	"""%s: skipping cached %s\\n"""		6140423	0					
ANR	6141122	PrimaryExpression	"""%s: skipping cached %s\\n"""		6140423	0					
ANR	6141123	Argument	file -> filename		6140423	1					
ANR	6141124	PtrMemberAccess	file -> filename		6140423	0					
ANR	6141125	Identifier	file		6140423	0					
ANR	6141126	Identifier	filename		6140423	1					
ANR	6141127	Argument	buf1		6140423	2					
ANR	6141128	Identifier	buf1		6140423	0					
ANR	6141129	GotoStatement	goto include_done ;	1567:4:32388:32405	6140423	1	True				
ANR	6141130	Identifier	include_done		6140423	0					
ANR	6141131	IfStatement	"if ( tcc_open ( s1 , buf1 ) < 0 )"		6140423	9					
ANR	6141132	Condition	"tcc_open ( s1 , buf1 ) < 0"	1570:7:32420:32442	6140423	0	True				
ANR	6141133	RelationalExpression	"tcc_open ( s1 , buf1 ) < 0"		6140423	0		<			
ANR	6141134	CallExpression	"tcc_open ( s1 , buf1 )"		6140423	0					
ANR	6141135	Callee	tcc_open		6140423	0					
ANR	6141136	Identifier	tcc_open		6140423	0					
ANR	6141137	ArgumentList	s1		6140423	1					
ANR	6141138	Argument	s1		6140423	0					
ANR	6141139	Identifier	s1		6140423	0					
ANR	6141140	Argument	buf1		6140423	1					
ANR	6141141	Identifier	buf1		6140423	0					
ANR	6141142	PrimaryExpression	0		6140423	1					
ANR	6141143	CompoundStatement		153:32:3650:3650	6140423	1					
ANR	6141144	Label	include_trynext :	1571:0:32447:32462	6140423	0	True				
ANR	6141145	Identifier	include_trynext		6140423	0					
ANR	6141146	ContinueStatement	continue ;	1572:4:32468:32476	6140423	1	True				
ANR	6141147	ExpressionStatement	"fprintf ( stderr , ""#include \\""%s\\""\\n"" , buf1 )"	1574:3:32486:32529	6140423	10	True				
ANR	6141148	CallExpression	"fprintf ( stderr , ""#include \\""%s\\""\\n"" , buf1 )"		6140423	0					
ANR	6141149	Callee	fprintf		6140423	0					
ANR	6141150	Identifier	fprintf		6140423	0					
ANR	6141151	ArgumentList	stderr		6140423	1					
ANR	6141152	Argument	stderr		6140423	0					
ANR	6141153	Identifier	stderr		6140423	0					
ANR	6141154	Argument	"""#include \\""%s\\""\\n"""		6140423	1					
ANR	6141155	PrimaryExpression	"""#include \\""%s\\""\\n"""		6140423	0					
ANR	6141156	Argument	buf1		6140423	2					
ANR	6141157	Identifier	buf1		6140423	0					
ANR	6141158	ExpressionStatement	"fprintf ( stderr , ""%s: including %s\\n"" , file -> prev -> filename , file -> filename )"	1577:3:32552:32628	6140423	11	True				
ANR	6141159	CallExpression	"fprintf ( stderr , ""%s: including %s\\n"" , file -> prev -> filename , file -> filename )"		6140423	0					
ANR	6141160	Callee	fprintf		6140423	0					
ANR	6141161	Identifier	fprintf		6140423	0					
ANR	6141162	ArgumentList	stderr		6140423	1					
ANR	6141163	Argument	stderr		6140423	0					
ANR	6141164	Identifier	stderr		6140423	0					
ANR	6141165	Argument	"""%s: including %s\\n"""		6140423	1					
ANR	6141166	PrimaryExpression	"""%s: including %s\\n"""		6140423	0					
ANR	6141167	Argument	file -> prev -> filename		6140423	2					
ANR	6141168	PtrMemberAccess	file -> prev -> filename		6140423	0					
ANR	6141169	PtrMemberAccess	file -> prev		6140423	0					
ANR	6141170	Identifier	file		6140423	0					
ANR	6141171	Identifier	prev		6140423	1					
ANR	6141172	Identifier	filename		6140423	1					
ANR	6141173	Argument	file -> filename		6140423	3					
ANR	6141174	PtrMemberAccess	file -> filename		6140423	0					
ANR	6141175	Identifier	file		6140423	0					
ANR	6141176	Identifier	filename		6140423	1					
ANR	6141177	ExpressionStatement	"dynarray_add ( ( void * * * ) & s1 -> target_deps , & s1 -> nb_target_deps , strdup ( buf1 ) )"	1580:3:32668:32750	6140423	12	True				
ANR	6141178	CallExpression	"dynarray_add ( ( void * * * ) & s1 -> target_deps , & s1 -> nb_target_deps , strdup ( buf1 ) )"		6140423	0					
ANR	6141179	Callee	dynarray_add		6140423	0					
ANR	6141180	Identifier	dynarray_add		6140423	0					
ANR	6141181	ArgumentList	( void * * * ) & s1 -> target_deps		6140423	1					
ANR	6141182	Argument	( void * * * ) & s1 -> target_deps		6140423	0					
ANR	6141183	CastExpression	( void * * * ) & s1 -> target_deps		6140423	0					
ANR	6141184	CastTarget	void * * *		6140423	0					
ANR	6141185	UnaryOperationExpression	& s1 -> target_deps		6140423	1					
ANR	6141186	UnaryOperator	&		6140423	0					
ANR	6141187	PtrMemberAccess	s1 -> target_deps		6140423	1					
ANR	6141188	Identifier	s1		6140423	0					
ANR	6141189	Identifier	target_deps		6140423	1					
ANR	6141190	Argument	& s1 -> nb_target_deps		6140423	1					
ANR	6141191	UnaryOperationExpression	& s1 -> nb_target_deps		6140423	0					
ANR	6141192	UnaryOperator	&		6140423	0					
ANR	6141193	PtrMemberAccess	s1 -> nb_target_deps		6140423	1					
ANR	6141194	Identifier	s1		6140423	0					
ANR	6141195	Identifier	nb_target_deps		6140423	1					
ANR	6141196	Argument	strdup ( buf1 )		6140423	2					
ANR	6141197	CallExpression	strdup ( buf1 )		6140423	0					
ANR	6141198	Callee	strdup		6140423	0					
ANR	6141199	Identifier	strdup		6140423	0					
ANR	6141200	ArgumentList	buf1		6140423	1					
ANR	6141201	Argument	buf1		6140423	0					
ANR	6141202	Identifier	buf1		6140423	0					
ANR	6141203	ExpressionStatement	++ s1 -> include_stack_ptr	1583:3:32791:32814	6140423	13	True				
ANR	6141204	UnaryExpression	++ s1 -> include_stack_ptr		6140423	0					
ANR	6141205	IncDec	++		6140423	0					
ANR	6141206	PtrMemberAccess	s1 -> include_stack_ptr		6140423	1					
ANR	6141207	Identifier	s1		6140423	0					
ANR	6141208	Identifier	include_stack_ptr		6140423	1					
ANR	6141209	ExpressionStatement	tok_flags |= TOK_FLAG_BOF | TOK_FLAG_BOL	1584:3:32819:32859	6140423	14	True				
ANR	6141210	AssignmentExpression	tok_flags |= TOK_FLAG_BOF | TOK_FLAG_BOL		6140423	0		|=			
ANR	6141211	Identifier	tok_flags		6140423	0					
ANR	6141212	InclusiveOrExpression	TOK_FLAG_BOF | TOK_FLAG_BOL		6140423	1		|			
ANR	6141213	Identifier	TOK_FLAG_BOF		6140423	0					
ANR	6141214	Identifier	TOK_FLAG_BOL		6140423	1					
ANR	6141215	ExpressionStatement	ch = file -> buf_ptr [ 0 ]	1585:3:32864:32885	6140423	15	True				
ANR	6141216	AssignmentExpression	ch = file -> buf_ptr [ 0 ]		6140423	0		=			
ANR	6141217	Identifier	ch		6140423	0					
ANR	6141218	ArrayIndexing	file -> buf_ptr [ 0 ]		6140423	1					
ANR	6141219	PtrMemberAccess	file -> buf_ptr		6140423	0					
ANR	6141220	Identifier	file		6140423	0					
ANR	6141221	Identifier	buf_ptr		6140423	1					
ANR	6141222	PrimaryExpression	0		6140423	1					
ANR	6141223	GotoStatement	goto the_end ;	1586:3:32890:32902	6140423	16	True				
ANR	6141224	Identifier	the_end		6140423	0					
ANR	6141225	CompoundStatement		175:3:4229:4279	6140423	18					
ANR	6141226	IdentifierDeclStatement	char filepath [ 1024 ] ;	1590:3:32979:32998	6140423	0	True				
ANR	6141227	IdentifierDecl	filepath [ 1024 ]		6140423	0					
ANR	6141228	IdentifierDeclType	char [ 1024 ]		6140423	0					
ANR	6141229	Identifier	filepath		6140423	1					
ANR	6141230	PrimaryExpression	1024		6140423	2					
ANR	6141231	IdentifierDeclStatement	int filepath_len ;	1591:3:33003:33019	6140423	1	True				
ANR	6141232	IdentifierDecl	filepath_len		6140423	0					
ANR	6141233	IdentifierDeclType	int		6140423	0					
ANR	6141234	Identifier	filepath_len		6140423	1					
ANR	6141235	IdentifierDeclStatement	char * e = file -> filename + strlen ( file -> filename ) ;	1592:3:33024:33074	6140423	2	True				
ANR	6141236	IdentifierDecl	* e = file -> filename + strlen ( file -> filename )		6140423	0					
ANR	6141237	IdentifierDeclType	char *		6140423	0					
ANR	6141238	Identifier	e		6140423	1					
ANR	6141239	AssignmentExpression	* e = file -> filename + strlen ( file -> filename )		6140423	2		=			
ANR	6141240	Identifier	e		6140423	0					
ANR	6141241	AdditiveExpression	file -> filename + strlen ( file -> filename )		6140423	1		+			
ANR	6141242	PtrMemberAccess	file -> filename		6140423	0					
ANR	6141243	Identifier	file		6140423	0					
ANR	6141244	Identifier	filename		6140423	1					
ANR	6141245	CallExpression	strlen ( file -> filename )		6140423	1					
ANR	6141246	Callee	strlen		6140423	0					
ANR	6141247	Identifier	strlen		6140423	0					
ANR	6141248	ArgumentList	file -> filename		6140423	1					
ANR	6141249	Argument	file -> filename		6140423	0					
ANR	6141250	PtrMemberAccess	file -> filename		6140423	0					
ANR	6141251	Identifier	file		6140423	0					
ANR	6141252	Identifier	filename		6140423	1					
ANR	6141253	WhileStatement	while ( e > file -> filename )		6140423	3					
ANR	6141254	Condition	e > file -> filename	1593:10:33086:33103	6140423	0	True				
ANR	6141255	RelationalExpression	e > file -> filename		6140423	0		>			
ANR	6141256	Identifier	e		6140423	0					
ANR	6141257	PtrMemberAccess	file -> filename		6140423	1					
ANR	6141258	Identifier	file		6140423	0					
ANR	6141259	Identifier	filename		6140423	1					
ANR	6141260	CompoundStatement		176:30:4311:4311	6140423	1					
ANR	6141261	IfStatement	if ( * e == R_SYS_DIR [ 0 ] )		6140423	0					
ANR	6141262	Condition	* e == R_SYS_DIR [ 0 ]	1594:8:33116:33133	6140423	0	True				
ANR	6141263	EqualityExpression	* e == R_SYS_DIR [ 0 ]		6140423	0		==			
ANR	6141264	UnaryOperationExpression	* e		6140423	0					
ANR	6141265	UnaryOperator	*		6140423	0					
ANR	6141266	Identifier	e		6140423	1					
ANR	6141267	ArrayIndexing	R_SYS_DIR [ 0 ]		6140423	1					
ANR	6141268	Identifier	R_SYS_DIR		6140423	0					
ANR	6141269	PrimaryExpression	0		6140423	1					
ANR	6141270	CompoundStatement		177:28:4341:4341	6140423	1					
ANR	6141271	BreakStatement	break ;	1595:5:33143:33148	6140423	0	True				
ANR	6141272	ExpressionStatement	e --	1597:4:33160:33163	6140423	1	True				
ANR	6141273	PostIncDecOperationExpression	e --		6140423	0					
ANR	6141274	Identifier	e		6140423	0					
ANR	6141275	IncDec	--		6140423	1					
ANR	6141276	ExpressionStatement	"filepath_len = R_MIN ( ( size_t ) ( e - file -> filename ) + 1 , sizeof ( filepath ) - 1 )"	1599:3:33173:33252	6140423	4	True				
ANR	6141277	AssignmentExpression	"filepath_len = R_MIN ( ( size_t ) ( e - file -> filename ) + 1 , sizeof ( filepath ) - 1 )"		6140423	0		=			
ANR	6141278	Identifier	filepath_len		6140423	0					
ANR	6141279	CallExpression	"R_MIN ( ( size_t ) ( e - file -> filename ) + 1 , sizeof ( filepath ) - 1 )"		6140423	1					
ANR	6141280	Callee	R_MIN		6140423	0					
ANR	6141281	Identifier	R_MIN		6140423	0					
ANR	6141282	ArgumentList	( size_t ) ( e - file -> filename ) + 1		6140423	1					
ANR	6141283	Argument	( size_t ) ( e - file -> filename ) + 1		6140423	0					
ANR	6141284	AdditiveExpression	( size_t ) ( e - file -> filename ) + 1		6140423	0		+			
ANR	6141285	CastExpression	( size_t ) ( e - file -> filename )		6140423	0					
ANR	6141286	CastTarget	size_t		6140423	0					
ANR	6141287	AdditiveExpression	e - file -> filename		6140423	1		-			
ANR	6141288	Identifier	e		6140423	0					
ANR	6141289	PtrMemberAccess	file -> filename		6140423	1					
ANR	6141290	Identifier	file		6140423	0					
ANR	6141291	Identifier	filename		6140423	1					
ANR	6141292	PrimaryExpression	1		6140423	1					
ANR	6141293	Argument	sizeof ( filepath ) - 1		6140423	1					
ANR	6141294	AdditiveExpression	sizeof ( filepath ) - 1		6140423	0		-			
ANR	6141295	SizeofExpression	sizeof ( filepath )		6140423	0					
ANR	6141296	Sizeof	sizeof		6140423	0					
ANR	6141297	SizeofOperand	filepath		6140423	1					
ANR	6141298	PrimaryExpression	1		6140423	1					
ANR	6141299	ExpressionStatement	"memcpy ( filepath , file -> filename , filepath_len )"	1600:3:33257:33304	6140423	5	True				
ANR	6141300	CallExpression	"memcpy ( filepath , file -> filename , filepath_len )"		6140423	0					
ANR	6141301	Callee	memcpy		6140423	0					
ANR	6141302	Identifier	memcpy		6140423	0					
ANR	6141303	ArgumentList	filepath		6140423	1					
ANR	6141304	Argument	filepath		6140423	0					
ANR	6141305	Identifier	filepath		6140423	0					
ANR	6141306	Argument	file -> filename		6140423	1					
ANR	6141307	PtrMemberAccess	file -> filename		6140423	0					
ANR	6141308	Identifier	file		6140423	0					
ANR	6141309	Identifier	filename		6140423	1					
ANR	6141310	Argument	filepath_len		6140423	2					
ANR	6141311	Identifier	filepath_len		6140423	0					
ANR	6141312	ExpressionStatement	"strcpy ( filepath + filepath_len , buf )"	1601:3:33309:33346	6140423	6	True				
ANR	6141313	CallExpression	"strcpy ( filepath + filepath_len , buf )"		6140423	0					
ANR	6141314	Callee	strcpy		6140423	0					
ANR	6141315	Identifier	strcpy		6140423	0					
ANR	6141316	ArgumentList	filepath + filepath_len		6140423	1					
ANR	6141317	Argument	filepath + filepath_len		6140423	0					
ANR	6141318	AdditiveExpression	filepath + filepath_len		6140423	0		+			
ANR	6141319	Identifier	filepath		6140423	0					
ANR	6141320	Identifier	filepath_len		6140423	1					
ANR	6141321	Argument	buf		6140423	1					
ANR	6141322	Identifier	buf		6140423	0					
ANR	6141323	IfStatement	"if ( tcc_open ( s1 , filepath ) < 0 )"		6140423	7					
ANR	6141324	Condition	"tcc_open ( s1 , filepath ) < 0"	1602:7:33355:33381	6140423	0	True				
ANR	6141325	RelationalExpression	"tcc_open ( s1 , filepath ) < 0"		6140423	0		<			
ANR	6141326	CallExpression	"tcc_open ( s1 , filepath )"		6140423	0					
ANR	6141327	Callee	tcc_open		6140423	0					
ANR	6141328	Identifier	tcc_open		6140423	0					
ANR	6141329	ArgumentList	s1		6140423	1					
ANR	6141330	Argument	s1		6140423	0					
ANR	6141331	Identifier	s1		6140423	0					
ANR	6141332	Argument	filepath		6140423	1					
ANR	6141333	Identifier	filepath		6140423	0					
ANR	6141334	PrimaryExpression	0		6140423	1					
ANR	6141335	CompoundStatement		189:4:4652:4723	6140423	1					
ANR	6141336	IfStatement	if ( ! dirname )		6140423	0					
ANR	6141337	Condition	! dirname	1603:8:33394:33401	6140423	0	True				
ANR	6141338	UnaryOperationExpression	! dirname		6140423	0					
ANR	6141339	UnaryOperator	!		6140423	0					
ANR	6141340	Identifier	dirname		6140423	1					
ANR	6141341	CompoundStatement		186:18:4609:4609	6140423	1					
ANR	6141342	ExpressionStatement	"dirname = ""/usr/include"""	1604:5:33411:33435	6140423	0	True				
ANR	6141343	AssignmentExpression	"dirname = ""/usr/include"""		6140423	0		=			
ANR	6141344	Identifier	dirname		6140423	0					
ANR	6141345	PrimaryExpression	"""/usr/include"""		6140423	1					
ANR	6141346	IdentifierDeclStatement	"int len = snprintf ( filepath , sizeof ( filepath ) , ""%s/%s"" , dirname , buf ) ;"	1606:4:33447:33518	6140423	1	True				
ANR	6141347	IdentifierDecl	"len = snprintf ( filepath , sizeof ( filepath ) , ""%s/%s"" , dirname , buf )"		6140423	0					
ANR	6141348	IdentifierDeclType	int		6140423	0					
ANR	6141349	Identifier	len		6140423	1					
ANR	6141350	AssignmentExpression	"len = snprintf ( filepath , sizeof ( filepath ) , ""%s/%s"" , dirname , buf )"		6140423	2		=			
ANR	6141351	Identifier	len		6140423	0					
ANR	6141352	CallExpression	"snprintf ( filepath , sizeof ( filepath ) , ""%s/%s"" , dirname , buf )"		6140423	1					
ANR	6141353	Callee	snprintf		6140423	0					
ANR	6141354	Identifier	snprintf		6140423	0					
ANR	6141355	ArgumentList	filepath		6140423	1					
ANR	6141356	Argument	filepath		6140423	0					
ANR	6141357	Identifier	filepath		6140423	0					
ANR	6141358	Argument	sizeof ( filepath )		6140423	1					
ANR	6141359	SizeofExpression	sizeof ( filepath )		6140423	0					
ANR	6141360	Sizeof	sizeof		6140423	0					
ANR	6141361	SizeofOperand	filepath		6140423	1					
ANR	6141362	Argument	"""%s/%s"""		6140423	2					
ANR	6141363	PrimaryExpression	"""%s/%s"""		6140423	0					
ANR	6141364	Argument	dirname		6140423	3					
ANR	6141365	Identifier	dirname		6140423	0					
ANR	6141366	Argument	buf		6140423	4					
ANR	6141367	Identifier	buf		6140423	0					
ANR	6141368	IfStatement	"if ( len >= sizeof ( filepath ) || tcc_open ( s1 , filepath ) < 0 )"		6140423	2					
ANR	6141369	Condition	"len >= sizeof ( filepath ) || tcc_open ( s1 , filepath ) < 0"	1607:8:33528:33582	6140423	0	True				
ANR	6141370	OrExpression	"len >= sizeof ( filepath ) || tcc_open ( s1 , filepath ) < 0"		6140423	0		||			
ANR	6141371	RelationalExpression	len >= sizeof ( filepath )		6140423	0		>=			
ANR	6141372	Identifier	len		6140423	0					
ANR	6141373	SizeofExpression	sizeof ( filepath )		6140423	1					
ANR	6141374	Sizeof	sizeof		6140423	0					
ANR	6141375	SizeofOperand	filepath		6140423	1					
ANR	6141376	RelationalExpression	"tcc_open ( s1 , filepath ) < 0"		6140423	1		<			
ANR	6141377	CallExpression	"tcc_open ( s1 , filepath )"		6140423	0					
ANR	6141378	Callee	tcc_open		6140423	0					
ANR	6141379	Identifier	tcc_open		6140423	0					
ANR	6141380	ArgumentList	s1		6140423	1					
ANR	6141381	Argument	s1		6140423	0					
ANR	6141382	Identifier	s1		6140423	0					
ANR	6141383	Argument	filepath		6140423	1					
ANR	6141384	Identifier	filepath		6140423	0					
ANR	6141385	PrimaryExpression	0		6140423	1					
ANR	6141386	CompoundStatement		190:65:4790:4790	6140423	1					
ANR	6141387	ExpressionStatement	"tcc_error ( ""include file '%s' not found"" , filepath )"	1608:5:33592:33643	6140423	0	True				
ANR	6141388	CallExpression	"tcc_error ( ""include file '%s' not found"" , filepath )"		6140423	0					
ANR	6141389	Callee	tcc_error		6140423	0					
ANR	6141390	Identifier	tcc_error		6140423	0					
ANR	6141391	ArgumentList	"""include file '%s' not found"""		6140423	1					
ANR	6141392	Argument	"""include file '%s' not found"""		6140423	0					
ANR	6141393	PrimaryExpression	"""include file '%s' not found"""		6140423	0					
ANR	6141394	Argument	filepath		6140423	1					
ANR	6141395	Identifier	filepath		6140423	0					
ANR	6141396	ElseStatement	else		6140423	0					
ANR	6141397	CompoundStatement		192:11:4861:4861	6140423	0					
ANR	6141398	ExpressionStatement	"fprintf ( stderr , ""#include \\""%s\\""\\n"" , filepath )"	1610:5:33663:33710	6140423	0	True				
ANR	6141399	CallExpression	"fprintf ( stderr , ""#include \\""%s\\""\\n"" , filepath )"		6140423	0					
ANR	6141400	Callee	fprintf		6140423	0					
ANR	6141401	Identifier	fprintf		6140423	0					
ANR	6141402	ArgumentList	stderr		6140423	1					
ANR	6141403	Argument	stderr		6140423	0					
ANR	6141404	Identifier	stderr		6140423	0					
ANR	6141405	Argument	"""#include \\""%s\\""\\n"""		6140423	1					
ANR	6141406	PrimaryExpression	"""#include \\""%s\\""\\n"""		6140423	0					
ANR	6141407	Argument	filepath		6140423	2					
ANR	6141408	Identifier	filepath		6140423	0					
ANR	6141409	ExpressionStatement	++ s1 -> include_stack_ptr	1611:5:33717:33740	6140423	1	True				
ANR	6141410	UnaryExpression	++ s1 -> include_stack_ptr		6140423	0					
ANR	6141411	IncDec	++		6140423	0					
ANR	6141412	PtrMemberAccess	s1 -> include_stack_ptr		6140423	1					
ANR	6141413	Identifier	s1		6140423	0					
ANR	6141414	Identifier	include_stack_ptr		6140423	1					
ANR	6141415	ExpressionStatement	tok_flags |= TOK_FLAG_BOF | TOK_FLAG_BOL	1612:5:33747:33787	6140423	2	True				
ANR	6141416	AssignmentExpression	tok_flags |= TOK_FLAG_BOF | TOK_FLAG_BOL		6140423	0		|=			
ANR	6141417	Identifier	tok_flags		6140423	0					
ANR	6141418	InclusiveOrExpression	TOK_FLAG_BOF | TOK_FLAG_BOL		6140423	1		|			
ANR	6141419	Identifier	TOK_FLAG_BOF		6140423	0					
ANR	6141420	Identifier	TOK_FLAG_BOL		6140423	1					
ANR	6141421	ExpressionStatement	ch = file -> buf_ptr [ 0 ]	1613:5:33794:33815	6140423	3	True				
ANR	6141422	AssignmentExpression	ch = file -> buf_ptr [ 0 ]		6140423	0		=			
ANR	6141423	Identifier	ch		6140423	0					
ANR	6141424	ArrayIndexing	file -> buf_ptr [ 0 ]		6140423	1					
ANR	6141425	PtrMemberAccess	file -> buf_ptr		6140423	0					
ANR	6141426	Identifier	file		6140423	0					
ANR	6141427	Identifier	buf_ptr		6140423	1					
ANR	6141428	PrimaryExpression	0		6140423	1					
ANR	6141429	GotoStatement	goto the_end ;	1614:5:33822:33834	6140423	4	True				
ANR	6141430	Identifier	the_end		6140423	0					
ANR	6141431	ElseStatement	else		6140423	0					
ANR	6141432	CompoundStatement		199:10:5057:5057	6140423	0					
ANR	6141433	ExpressionStatement	"fprintf ( stderr , ""#include \\""%s\\""\\n"" , filepath )"	1617:4:33858:33905	6140423	0	True				
ANR	6141434	CallExpression	"fprintf ( stderr , ""#include \\""%s\\""\\n"" , filepath )"		6140423	0					
ANR	6141435	Callee	fprintf		6140423	0					
ANR	6141436	Identifier	fprintf		6140423	0					
ANR	6141437	ArgumentList	stderr		6140423	1					
ANR	6141438	Argument	stderr		6140423	0					
ANR	6141439	Identifier	stderr		6140423	0					
ANR	6141440	Argument	"""#include \\""%s\\""\\n"""		6140423	1					
ANR	6141441	PrimaryExpression	"""#include \\""%s\\""\\n"""		6140423	0					
ANR	6141442	Argument	filepath		6140423	2					
ANR	6141443	Identifier	filepath		6140423	0					
ANR	6141444	ExpressionStatement	++ s1 -> include_stack_ptr	1618:4:33911:33934	6140423	1	True				
ANR	6141445	UnaryExpression	++ s1 -> include_stack_ptr		6140423	0					
ANR	6141446	IncDec	++		6140423	0					
ANR	6141447	PtrMemberAccess	s1 -> include_stack_ptr		6140423	1					
ANR	6141448	Identifier	s1		6140423	0					
ANR	6141449	Identifier	include_stack_ptr		6140423	1					
ANR	6141450	ExpressionStatement	tok_flags |= TOK_FLAG_BOF | TOK_FLAG_BOL	1619:4:33940:33980	6140423	2	True				
ANR	6141451	AssignmentExpression	tok_flags |= TOK_FLAG_BOF | TOK_FLAG_BOL		6140423	0		|=			
ANR	6141452	Identifier	tok_flags		6140423	0					
ANR	6141453	InclusiveOrExpression	TOK_FLAG_BOF | TOK_FLAG_BOL		6140423	1		|			
ANR	6141454	Identifier	TOK_FLAG_BOF		6140423	0					
ANR	6141455	Identifier	TOK_FLAG_BOL		6140423	1					
ANR	6141456	ExpressionStatement	ch = file -> buf_ptr [ 0 ]	1620:4:33986:34007	6140423	3	True				
ANR	6141457	AssignmentExpression	ch = file -> buf_ptr [ 0 ]		6140423	0		=			
ANR	6141458	Identifier	ch		6140423	0					
ANR	6141459	ArrayIndexing	file -> buf_ptr [ 0 ]		6140423	1					
ANR	6141460	PtrMemberAccess	file -> buf_ptr		6140423	0					
ANR	6141461	Identifier	file		6140423	0					
ANR	6141462	Identifier	buf_ptr		6140423	1					
ANR	6141463	PrimaryExpression	0		6140423	1					
ANR	6141464	GotoStatement	goto the_end ;	1621:4:34013:34025	6140423	4	True				
ANR	6141465	Identifier	the_end		6140423	0					
ANR	6141466	Label	include_done :	1624:0:34036:34048	6140423	19	True				
ANR	6141467	Identifier	include_done		6140423	0					
ANR	6141468	BreakStatement	break ;	1625:2:34052:34057	6140423	20	True				
ANR	6141469	Label	case TOK_IFNDEF :	1626:1:34060:34075	6140423	21	True				
ANR	6141470	Identifier	TOK_IFNDEF		6140423	0					
ANR	6141471	ExpressionStatement	c = 1	1627:2:34079:34084	6140423	22	True				
ANR	6141472	AssignmentExpression	c = 1		6140423	0		=			
ANR	6141473	Identifier	c		6140423	0					
ANR	6141474	PrimaryExpression	1		6140423	1					
ANR	6141475	GotoStatement	goto do_ifdef ;	1628:2:34088:34101	6140423	23	True				
ANR	6141476	Identifier	do_ifdef		6140423	0					
ANR	6141477	Label	case TOK_IF :	1629:1:34104:34115	6140423	24	True				
ANR	6141478	Identifier	TOK_IF		6140423	0					
ANR	6141479	ExpressionStatement	c = expr_preprocess ( )	1630:2:34119:34141	6140423	25	True				
ANR	6141480	AssignmentExpression	c = expr_preprocess ( )		6140423	0		=			
ANR	6141481	Identifier	c		6140423	0					
ANR	6141482	CallExpression	expr_preprocess ( )		6140423	1					
ANR	6141483	Callee	expr_preprocess		6140423	0					
ANR	6141484	Identifier	expr_preprocess		6140423	0					
ANR	6141485	ArgumentList			6140423	1					
ANR	6141486	GotoStatement	goto do_if ;	1631:2:34145:34155	6140423	26	True				
ANR	6141487	Identifier	do_if		6140423	0					
ANR	6141488	Label	case TOK_IFDEF :	1632:1:34158:34172	6140423	27	True				
ANR	6141489	Identifier	TOK_IFDEF		6140423	0					
ANR	6141490	ExpressionStatement	c = 0	1633:2:34176:34181	6140423	28	True				
ANR	6141491	AssignmentExpression	c = 0		6140423	0		=			
ANR	6141492	Identifier	c		6140423	0					
ANR	6141493	PrimaryExpression	0		6140423	1					
ANR	6141494	Label	do_ifdef :	1634:0:34183:34191	6140423	29	True				
ANR	6141495	Identifier	do_ifdef		6140423	0					
ANR	6141496	ExpressionStatement	next_nomacro ( )	1635:2:34195:34210	6140423	30	True				
ANR	6141497	CallExpression	next_nomacro ( )		6140423	0					
ANR	6141498	Callee	next_nomacro		6140423	0					
ANR	6141499	Identifier	next_nomacro		6140423	0					
ANR	6141500	ArgumentList			6140423	1					
ANR	6141501	IfStatement	if ( tok < TOK_IDENT )		6140423	31					
ANR	6141502	Condition	tok < TOK_IDENT	1636:6:34218:34232	6140423	0	True				
ANR	6141503	RelationalExpression	tok < TOK_IDENT		6140423	0		<			
ANR	6141504	Identifier	tok		6140423	0					
ANR	6141505	Identifier	TOK_IDENT		6140423	1					
ANR	6141506	CompoundStatement		219:23:5440:5440	6140423	1					
ANR	6141507	ExpressionStatement	"tcc_error ( ""invalid argument for '#if%sdef'"" , c ? ""n"" : """" )"	1637:3:34240:34297	6140423	0	True				
ANR	6141508	CallExpression	"tcc_error ( ""invalid argument for '#if%sdef'"" , c ? ""n"" : """" )"		6140423	0					
ANR	6141509	Callee	tcc_error		6140423	0					
ANR	6141510	Identifier	tcc_error		6140423	0					
ANR	6141511	ArgumentList	"""invalid argument for '#if%sdef'"""		6140423	1					
ANR	6141512	Argument	"""invalid argument for '#if%sdef'"""		6140423	0					
ANR	6141513	PrimaryExpression	"""invalid argument for '#if%sdef'"""		6140423	0					
ANR	6141514	Argument	"c ? ""n"" : """""		6140423	1					
ANR	6141515	ConditionalExpression	"c ? ""n"" : """""		6140423	0					
ANR	6141516	Condition	c		6140423	0					
ANR	6141517	Identifier	c		6140423	0					
ANR	6141518	PrimaryExpression	"""n"""		6140423	1					
ANR	6141519	PrimaryExpression	""""""		6140423	2					
ANR	6141520	IfStatement	if ( is_bof )		6140423	32					
ANR	6141521	Condition	is_bof	1639:6:34309:34314	6140423	0	True				
ANR	6141522	Identifier	is_bof		6140423	0					
ANR	6141523	CompoundStatement		222:14:5522:5522	6140423	1					
ANR	6141524	IfStatement	if ( c )		6140423	0					
ANR	6141525	Condition	c	1640:7:34326:34326	6140423	0	True				
ANR	6141526	Identifier	c		6140423	0					
ANR	6141527	CompoundStatement		223:10:5534:5534	6140423	1					
ANR	6141528	ExpressionStatement	"printf ( ""#ifndef %s\\n"" , get_tok_str ( tok , NULL ) )"	1642:4:34352:34400	6140423	0	True				
ANR	6141529	CallExpression	"printf ( ""#ifndef %s\\n"" , get_tok_str ( tok , NULL ) )"		6140423	0					
ANR	6141530	Callee	printf		6140423	0					
ANR	6141531	Identifier	printf		6140423	0					
ANR	6141532	ArgumentList	"""#ifndef %s\\n"""		6140423	1					
ANR	6141533	Argument	"""#ifndef %s\\n"""		6140423	0					
ANR	6141534	PrimaryExpression	"""#ifndef %s\\n"""		6140423	0					
ANR	6141535	Argument	"get_tok_str ( tok , NULL )"		6140423	1					
ANR	6141536	CallExpression	"get_tok_str ( tok , NULL )"		6140423	0					
ANR	6141537	Callee	get_tok_str		6140423	0					
ANR	6141538	Identifier	get_tok_str		6140423	0					
ANR	6141539	ArgumentList	tok		6140423	1					
ANR	6141540	Argument	tok		6140423	0					
ANR	6141541	Identifier	tok		6140423	0					
ANR	6141542	Argument	NULL		6140423	1					
ANR	6141543	Identifier	NULL		6140423	0					
ANR	6141544	ExpressionStatement	file -> ifndef_macro = tok	1644:4:34413:34437	6140423	1	True				
ANR	6141545	AssignmentExpression	file -> ifndef_macro = tok		6140423	0		=			
ANR	6141546	PtrMemberAccess	file -> ifndef_macro		6140423	0					
ANR	6141547	Identifier	file		6140423	0					
ANR	6141548	Identifier	ifndef_macro		6140423	1					
ANR	6141549	Identifier	tok		6140423	1					
ANR	6141550	ExpressionStatement	c = ( define_find ( tok ) != 0 ) ^ c	1647:2:34450:34482	6140423	33	True				
ANR	6141551	AssignmentExpression	c = ( define_find ( tok ) != 0 ) ^ c		6140423	0		=			
ANR	6141552	Identifier	c		6140423	0					
ANR	6141553	ExclusiveOrExpression	( define_find ( tok ) != 0 ) ^ c		6140423	1		^			
ANR	6141554	EqualityExpression	define_find ( tok ) != 0		6140423	0		!=			
ANR	6141555	CallExpression	define_find ( tok )		6140423	0					
ANR	6141556	Callee	define_find		6140423	0					
ANR	6141557	Identifier	define_find		6140423	0					
ANR	6141558	ArgumentList	tok		6140423	1					
ANR	6141559	Argument	tok		6140423	0					
ANR	6141560	Identifier	tok		6140423	0					
ANR	6141561	PrimaryExpression	0		6140423	1					
ANR	6141562	Identifier	c		6140423	1					
ANR	6141563	Label	do_if :	1648:0:34484:34489	6140423	34	True				
ANR	6141564	Identifier	do_if		6140423	0					
ANR	6141565	IfStatement	if ( s1 -> ifdef_stack_ptr >= s1 -> ifdef_stack + IFDEF_STACK_SIZE )		6140423	35					
ANR	6141566	Condition	s1 -> ifdef_stack_ptr >= s1 -> ifdef_stack + IFDEF_STACK_SIZE	1649:6:34497:34553	6140423	0	True				
ANR	6141567	RelationalExpression	s1 -> ifdef_stack_ptr >= s1 -> ifdef_stack + IFDEF_STACK_SIZE		6140423	0		>=			
ANR	6141568	PtrMemberAccess	s1 -> ifdef_stack_ptr		6140423	0					
ANR	6141569	Identifier	s1		6140423	0					
ANR	6141570	Identifier	ifdef_stack_ptr		6140423	1					
ANR	6141571	AdditiveExpression	s1 -> ifdef_stack + IFDEF_STACK_SIZE		6140423	1		+			
ANR	6141572	PtrMemberAccess	s1 -> ifdef_stack		6140423	0					
ANR	6141573	Identifier	s1		6140423	0					
ANR	6141574	Identifier	ifdef_stack		6140423	1					
ANR	6141575	Identifier	IFDEF_STACK_SIZE		6140423	1					
ANR	6141576	CompoundStatement		232:65:5761:5761	6140423	1					
ANR	6141577	ExpressionStatement	"tcc_error ( ""memory full"" )"	1650:3:34561:34586	6140423	0	True				
ANR	6141578	CallExpression	"tcc_error ( ""memory full"" )"		6140423	0					
ANR	6141579	Callee	tcc_error		6140423	0					
ANR	6141580	Identifier	tcc_error		6140423	0					
ANR	6141581	ArgumentList	"""memory full"""		6140423	1					
ANR	6141582	Argument	"""memory full"""		6140423	0					
ANR	6141583	PrimaryExpression	"""memory full"""		6140423	0					
ANR	6141584	ExpressionStatement	* s1 -> ifdef_stack_ptr ++ = c	1652:2:34594:34620	6140423	36	True				
ANR	6141585	AssignmentExpression	* s1 -> ifdef_stack_ptr ++ = c		6140423	0		=			
ANR	6141586	UnaryOperationExpression	* s1 -> ifdef_stack_ptr ++		6140423	0					
ANR	6141587	UnaryOperator	*		6140423	0					
ANR	6141588	PostIncDecOperationExpression	s1 -> ifdef_stack_ptr ++		6140423	1					
ANR	6141589	PtrMemberAccess	s1 -> ifdef_stack_ptr		6140423	0					
ANR	6141590	Identifier	s1		6140423	0					
ANR	6141591	Identifier	ifdef_stack_ptr		6140423	1					
ANR	6141592	IncDec	++		6140423	1					
ANR	6141593	Identifier	c		6140423	1					
ANR	6141594	GotoStatement	goto test_skip ;	1653:2:34624:34638	6140423	37	True				
ANR	6141595	Identifier	test_skip		6140423	0					
ANR	6141596	Label	case TOK_ELSE :	1654:1:34641:34654	6140423	38	True				
ANR	6141597	Identifier	TOK_ELSE		6140423	0					
ANR	6141598	IfStatement	if ( s1 -> ifdef_stack_ptr == s1 -> ifdef_stack )		6140423	39					
ANR	6141599	Condition	s1 -> ifdef_stack_ptr == s1 -> ifdef_stack	1655:6:34662:34699	6140423	0	True				
ANR	6141600	EqualityExpression	s1 -> ifdef_stack_ptr == s1 -> ifdef_stack		6140423	0		==			
ANR	6141601	PtrMemberAccess	s1 -> ifdef_stack_ptr		6140423	0					
ANR	6141602	Identifier	s1		6140423	0					
ANR	6141603	Identifier	ifdef_stack_ptr		6140423	1					
ANR	6141604	PtrMemberAccess	s1 -> ifdef_stack		6140423	1					
ANR	6141605	Identifier	s1		6140423	0					
ANR	6141606	Identifier	ifdef_stack		6140423	1					
ANR	6141607	CompoundStatement		238:46:5907:5907	6140423	1					
ANR	6141608	ExpressionStatement	"tcc_error ( ""#else without matching #if"" )"	1656:3:34707:34747	6140423	0	True				
ANR	6141609	CallExpression	"tcc_error ( ""#else without matching #if"" )"		6140423	0					
ANR	6141610	Callee	tcc_error		6140423	0					
ANR	6141611	Identifier	tcc_error		6140423	0					
ANR	6141612	ArgumentList	"""#else without matching #if"""		6140423	1					
ANR	6141613	Argument	"""#else without matching #if"""		6140423	0					
ANR	6141614	PrimaryExpression	"""#else without matching #if"""		6140423	0					
ANR	6141615	IfStatement	if ( s1 -> ifdef_stack_ptr [ - 1 ] & 2 )		6140423	40					
ANR	6141616	Condition	s1 -> ifdef_stack_ptr [ - 1 ] & 2	1658:6:34759:34785	6140423	0	True				
ANR	6141617	BitAndExpression	s1 -> ifdef_stack_ptr [ - 1 ] & 2		6140423	0		&			
ANR	6141618	ArrayIndexing	s1 -> ifdef_stack_ptr [ - 1 ]		6140423	0					
ANR	6141619	PtrMemberAccess	s1 -> ifdef_stack_ptr		6140423	0					
ANR	6141620	Identifier	s1		6140423	0					
ANR	6141621	Identifier	ifdef_stack_ptr		6140423	1					
ANR	6141622	UnaryOperationExpression	- 1		6140423	1					
ANR	6141623	UnaryOperator	-		6140423	0					
ANR	6141624	PrimaryExpression	1		6140423	1					
ANR	6141625	PrimaryExpression	2		6140423	1					
ANR	6141626	CompoundStatement		241:35:5993:5993	6140423	1					
ANR	6141627	ExpressionStatement	"tcc_error ( ""#else after #else"" )"	1659:3:34793:34824	6140423	0	True				
ANR	6141628	CallExpression	"tcc_error ( ""#else after #else"" )"		6140423	0					
ANR	6141629	Callee	tcc_error		6140423	0					
ANR	6141630	Identifier	tcc_error		6140423	0					
ANR	6141631	ArgumentList	"""#else after #else"""		6140423	1					
ANR	6141632	Argument	"""#else after #else"""		6140423	0					
ANR	6141633	PrimaryExpression	"""#else after #else"""		6140423	0					
ANR	6141634	ExpressionStatement	c = ( s1 -> ifdef_stack_ptr [ - 1 ] ^= 3 )	1661:2:34832:34866	6140423	41	True				
ANR	6141635	AssignmentExpression	c = ( s1 -> ifdef_stack_ptr [ - 1 ] ^= 3 )		6140423	0		=			
ANR	6141636	Identifier	c		6140423	0					
ANR	6141637	AssignmentExpression	s1 -> ifdef_stack_ptr [ - 1 ] ^= 3		6140423	1		^=			
ANR	6141638	ArrayIndexing	s1 -> ifdef_stack_ptr [ - 1 ]		6140423	0					
ANR	6141639	PtrMemberAccess	s1 -> ifdef_stack_ptr		6140423	0					
ANR	6141640	Identifier	s1		6140423	0					
ANR	6141641	Identifier	ifdef_stack_ptr		6140423	1					
ANR	6141642	UnaryOperationExpression	- 1		6140423	1					
ANR	6141643	UnaryOperator	-		6140423	0					
ANR	6141644	PrimaryExpression	1		6140423	1					
ANR	6141645	PrimaryExpression	3		6140423	1					
ANR	6141646	GotoStatement	goto test_else ;	1662:2:34870:34884	6140423	42	True				
ANR	6141647	Identifier	test_else		6140423	0					
ANR	6141648	Label	case TOK_ELIF :	1663:1:34887:34900	6140423	43	True				
ANR	6141649	Identifier	TOK_ELIF		6140423	0					
ANR	6141650	IfStatement	if ( s1 -> ifdef_stack_ptr == s1 -> ifdef_stack )		6140423	44					
ANR	6141651	Condition	s1 -> ifdef_stack_ptr == s1 -> ifdef_stack	1664:6:34908:34945	6140423	0	True				
ANR	6141652	EqualityExpression	s1 -> ifdef_stack_ptr == s1 -> ifdef_stack		6140423	0		==			
ANR	6141653	PtrMemberAccess	s1 -> ifdef_stack_ptr		6140423	0					
ANR	6141654	Identifier	s1		6140423	0					
ANR	6141655	Identifier	ifdef_stack_ptr		6140423	1					
ANR	6141656	PtrMemberAccess	s1 -> ifdef_stack		6140423	1					
ANR	6141657	Identifier	s1		6140423	0					
ANR	6141658	Identifier	ifdef_stack		6140423	1					
ANR	6141659	CompoundStatement		247:46:6153:6153	6140423	1					
ANR	6141660	ExpressionStatement	"tcc_error ( ""#elif without matching #if"" )"	1665:3:34953:34993	6140423	0	True				
ANR	6141661	CallExpression	"tcc_error ( ""#elif without matching #if"" )"		6140423	0					
ANR	6141662	Callee	tcc_error		6140423	0					
ANR	6141663	Identifier	tcc_error		6140423	0					
ANR	6141664	ArgumentList	"""#elif without matching #if"""		6140423	1					
ANR	6141665	Argument	"""#elif without matching #if"""		6140423	0					
ANR	6141666	PrimaryExpression	"""#elif without matching #if"""		6140423	0					
ANR	6141667	ExpressionStatement	c = s1 -> ifdef_stack_ptr [ - 1 ]	1667:2:35001:35028	6140423	45	True				
ANR	6141668	AssignmentExpression	c = s1 -> ifdef_stack_ptr [ - 1 ]		6140423	0		=			
ANR	6141669	Identifier	c		6140423	0					
ANR	6141670	ArrayIndexing	s1 -> ifdef_stack_ptr [ - 1 ]		6140423	1					
ANR	6141671	PtrMemberAccess	s1 -> ifdef_stack_ptr		6140423	0					
ANR	6141672	Identifier	s1		6140423	0					
ANR	6141673	Identifier	ifdef_stack_ptr		6140423	1					
ANR	6141674	UnaryOperationExpression	- 1		6140423	1					
ANR	6141675	UnaryOperator	-		6140423	0					
ANR	6141676	PrimaryExpression	1		6140423	1					
ANR	6141677	IfStatement	if ( c > 1 )		6140423	46					
ANR	6141678	Condition	c > 1	1668:6:35036:35040	6140423	0	True				
ANR	6141679	RelationalExpression	c > 1		6140423	0		>			
ANR	6141680	Identifier	c		6140423	0					
ANR	6141681	PrimaryExpression	1		6140423	1					
ANR	6141682	CompoundStatement		251:13:6248:6248	6140423	1					
ANR	6141683	ExpressionStatement	"tcc_error ( ""#elif after #else"" )"	1669:3:35048:35079	6140423	0	True				
ANR	6141684	CallExpression	"tcc_error ( ""#elif after #else"" )"		6140423	0					
ANR	6141685	Callee	tcc_error		6140423	0					
ANR	6141686	Identifier	tcc_error		6140423	0					
ANR	6141687	ArgumentList	"""#elif after #else"""		6140423	1					
ANR	6141688	Argument	"""#elif after #else"""		6140423	0					
ANR	6141689	PrimaryExpression	"""#elif after #else"""		6140423	0					
ANR	6141690	IfStatement	if ( c == 1 )		6140423	47					
ANR	6141691	Condition	c == 1	1672:6:35143:35148	6140423	0	True				
ANR	6141692	EqualityExpression	c == 1		6140423	0		==			
ANR	6141693	Identifier	c		6140423	0					
ANR	6141694	PrimaryExpression	1		6140423	1					
ANR	6141695	CompoundStatement		255:14:6356:6356	6140423	1					
ANR	6141696	GotoStatement	goto skip ;	1673:3:35156:35165	6140423	0	True				
ANR	6141697	Identifier	skip		6140423	0					
ANR	6141698	ExpressionStatement	c = expr_preprocess ( )	1675:2:35173:35195	6140423	48	True				
ANR	6141699	AssignmentExpression	c = expr_preprocess ( )		6140423	0		=			
ANR	6141700	Identifier	c		6140423	0					
ANR	6141701	CallExpression	expr_preprocess ( )		6140423	1					
ANR	6141702	Callee	expr_preprocess		6140423	0					
ANR	6141703	Identifier	expr_preprocess		6140423	0					
ANR	6141704	ArgumentList			6140423	1					
ANR	6141705	ExpressionStatement	s1 -> ifdef_stack_ptr [ - 1 ] = c	1676:2:35199:35226	6140423	49	True				
ANR	6141706	AssignmentExpression	s1 -> ifdef_stack_ptr [ - 1 ] = c		6140423	0		=			
ANR	6141707	ArrayIndexing	s1 -> ifdef_stack_ptr [ - 1 ]		6140423	0					
ANR	6141708	PtrMemberAccess	s1 -> ifdef_stack_ptr		6140423	0					
ANR	6141709	Identifier	s1		6140423	0					
ANR	6141710	Identifier	ifdef_stack_ptr		6140423	1					
ANR	6141711	UnaryOperationExpression	- 1		6140423	1					
ANR	6141712	UnaryOperator	-		6140423	0					
ANR	6141713	PrimaryExpression	1		6140423	1					
ANR	6141714	Identifier	c		6140423	1					
ANR	6141715	Label	test_else :	1677:0:35228:35237	6140423	50	True				
ANR	6141716	Identifier	test_else		6140423	0					
ANR	6141717	IfStatement	if ( s1 -> ifdef_stack_ptr == file -> ifdef_stack_ptr + 1 )		6140423	51					
ANR	6141718	Condition	s1 -> ifdef_stack_ptr == file -> ifdef_stack_ptr + 1	1678:6:35245:35292	6140423	0	True				
ANR	6141719	EqualityExpression	s1 -> ifdef_stack_ptr == file -> ifdef_stack_ptr + 1		6140423	0		==			
ANR	6141720	PtrMemberAccess	s1 -> ifdef_stack_ptr		6140423	0					
ANR	6141721	Identifier	s1		6140423	0					
ANR	6141722	Identifier	ifdef_stack_ptr		6140423	1					
ANR	6141723	AdditiveExpression	file -> ifdef_stack_ptr + 1		6140423	1		+			
ANR	6141724	PtrMemberAccess	file -> ifdef_stack_ptr		6140423	0					
ANR	6141725	Identifier	file		6140423	0					
ANR	6141726	Identifier	ifdef_stack_ptr		6140423	1					
ANR	6141727	PrimaryExpression	1		6140423	1					
ANR	6141728	CompoundStatement		261:56:6500:6500	6140423	1					
ANR	6141729	ExpressionStatement	file -> ifndef_macro = 0	1679:3:35300:35322	6140423	0	True				
ANR	6141730	AssignmentExpression	file -> ifndef_macro = 0		6140423	0		=			
ANR	6141731	PtrMemberAccess	file -> ifndef_macro		6140423	0					
ANR	6141732	Identifier	file		6140423	0					
ANR	6141733	Identifier	ifndef_macro		6140423	1					
ANR	6141734	PrimaryExpression	0		6140423	1					
ANR	6141735	Label	test_skip :	1681:0:35328:35337	6140423	52	True				
ANR	6141736	Identifier	test_skip		6140423	0					
ANR	6141737	IfStatement	if ( ! ( c & 1 ) )		6140423	53					
ANR	6141738	Condition	! ( c & 1 )	1682:6:35345:35352	6140423	0	True				
ANR	6141739	UnaryOperationExpression	! ( c & 1 )		6140423	0					
ANR	6141740	UnaryOperator	!		6140423	0					
ANR	6141741	BitAndExpression	c & 1		6140423	1		&			
ANR	6141742	Identifier	c		6140423	0					
ANR	6141743	PrimaryExpression	1		6140423	1					
ANR	6141744	CompoundStatement		265:16:6560:6560	6140423	1					
ANR	6141745	Label	skip :	1683:0:35357:35361	6140423	0	True				
ANR	6141746	Identifier	skip		6140423	0					
ANR	6141747	ExpressionStatement	preprocess_skip ( )	1684:3:35366:35384	6140423	1	True				
ANR	6141748	CallExpression	preprocess_skip ( )		6140423	0					
ANR	6141749	Callee	preprocess_skip		6140423	0					
ANR	6141750	Identifier	preprocess_skip		6140423	0					
ANR	6141751	ArgumentList			6140423	1					
ANR	6141752	ExpressionStatement	is_bof = 0	1685:3:35389:35399	6140423	2	True				
ANR	6141753	AssignmentExpression	is_bof = 0		6140423	0		=			
ANR	6141754	Identifier	is_bof		6140423	0					
ANR	6141755	PrimaryExpression	0		6140423	1					
ANR	6141756	GotoStatement	goto redo ;	1686:3:35404:35413	6140423	3	True				
ANR	6141757	Identifier	redo		6140423	0					
ANR	6141758	BreakStatement	break ;	1688:2:35421:35426	6140423	54	True				
ANR	6141759	Label	case TOK_ENDIF :	1689:1:35429:35443	6140423	55	True				
ANR	6141760	Identifier	TOK_ENDIF		6140423	0					
ANR	6141761	IfStatement	if ( s1 -> ifdef_stack_ptr <= file -> ifdef_stack_ptr )		6140423	56					
ANR	6141762	Condition	s1 -> ifdef_stack_ptr <= file -> ifdef_stack_ptr	1690:6:35451:35494	6140423	0	True				
ANR	6141763	RelationalExpression	s1 -> ifdef_stack_ptr <= file -> ifdef_stack_ptr		6140423	0		<=			
ANR	6141764	PtrMemberAccess	s1 -> ifdef_stack_ptr		6140423	0					
ANR	6141765	Identifier	s1		6140423	0					
ANR	6141766	Identifier	ifdef_stack_ptr		6140423	1					
ANR	6141767	PtrMemberAccess	file -> ifdef_stack_ptr		6140423	1					
ANR	6141768	Identifier	file		6140423	0					
ANR	6141769	Identifier	ifdef_stack_ptr		6140423	1					
ANR	6141770	CompoundStatement		273:52:6702:6702	6140423	1					
ANR	6141771	ExpressionStatement	"tcc_error ( ""#endif without matching #if"" )"	1691:3:35502:35543	6140423	0	True				
ANR	6141772	CallExpression	"tcc_error ( ""#endif without matching #if"" )"		6140423	0					
ANR	6141773	Callee	tcc_error		6140423	0					
ANR	6141774	Identifier	tcc_error		6140423	0					
ANR	6141775	ArgumentList	"""#endif without matching #if"""		6140423	1					
ANR	6141776	Argument	"""#endif without matching #if"""		6140423	0					
ANR	6141777	PrimaryExpression	"""#endif without matching #if"""		6140423	0					
ANR	6141778	ExpressionStatement	s1 -> ifdef_stack_ptr --	1693:2:35551:35572	6140423	57	True				
ANR	6141779	PostIncDecOperationExpression	s1 -> ifdef_stack_ptr --		6140423	0					
ANR	6141780	PtrMemberAccess	s1 -> ifdef_stack_ptr		6140423	0					
ANR	6141781	Identifier	s1		6140423	0					
ANR	6141782	Identifier	ifdef_stack_ptr		6140423	1					
ANR	6141783	IncDec	--		6140423	1					
ANR	6141784	IfStatement	if ( file -> ifndef_macro && s1 -> ifdef_stack_ptr == file -> ifdef_stack_ptr )		6140423	58					
ANR	6141785	Condition	file -> ifndef_macro && s1 -> ifdef_stack_ptr == file -> ifdef_stack_ptr	1696:6:35693:35764	6140423	0	True				
ANR	6141786	AndExpression	file -> ifndef_macro && s1 -> ifdef_stack_ptr == file -> ifdef_stack_ptr		6140423	0		&&			
ANR	6141787	PtrMemberAccess	file -> ifndef_macro		6140423	0					
ANR	6141788	Identifier	file		6140423	0					
ANR	6141789	Identifier	ifndef_macro		6140423	1					
ANR	6141790	EqualityExpression	s1 -> ifdef_stack_ptr == file -> ifdef_stack_ptr		6140423	1		==			
ANR	6141791	PtrMemberAccess	s1 -> ifdef_stack_ptr		6140423	0					
ANR	6141792	Identifier	s1		6140423	0					
ANR	6141793	Identifier	ifdef_stack_ptr		6140423	1					
ANR	6141794	PtrMemberAccess	file -> ifdef_stack_ptr		6140423	1					
ANR	6141795	Identifier	file		6140423	0					
ANR	6141796	Identifier	ifdef_stack_ptr		6140423	1					
ANR	6141797	CompoundStatement		280:52:6972:6972	6140423	1					
ANR	6141798	ExpressionStatement	file -> ifndef_macro_saved = file -> ifndef_macro	1698:3:35772:35817	6140423	0	True				
ANR	6141799	AssignmentExpression	file -> ifndef_macro_saved = file -> ifndef_macro		6140423	0		=			
ANR	6141800	PtrMemberAccess	file -> ifndef_macro_saved		6140423	0					
ANR	6141801	Identifier	file		6140423	0					
ANR	6141802	Identifier	ifndef_macro_saved		6140423	1					
ANR	6141803	PtrMemberAccess	file -> ifndef_macro		6140423	1					
ANR	6141804	Identifier	file		6140423	0					
ANR	6141805	Identifier	ifndef_macro		6140423	1					
ANR	6141806	ExpressionStatement	file -> ifndef_macro = 0	1701:3:35917:35939	6140423	1	True				
ANR	6141807	AssignmentExpression	file -> ifndef_macro = 0		6140423	0		=			
ANR	6141808	PtrMemberAccess	file -> ifndef_macro		6140423	0					
ANR	6141809	Identifier	file		6140423	0					
ANR	6141810	Identifier	ifndef_macro		6140423	1					
ANR	6141811	PrimaryExpression	0		6140423	1					
ANR	6141812	WhileStatement	while ( tok != TOK_LINEFEED )		6140423	2					
ANR	6141813	Condition	tok != TOK_LINEFEED	1702:10:35951:35969	6140423	0	True				
ANR	6141814	EqualityExpression	tok != TOK_LINEFEED		6140423	0		!=			
ANR	6141815	Identifier	tok		6140423	0					
ANR	6141816	Identifier	TOK_LINEFEED		6140423	1					
ANR	6141817	ExpressionStatement	next_nomacro ( )	1703:4:35976:35991	6140423	1	True				
ANR	6141818	CallExpression	next_nomacro ( )		6140423	0					
ANR	6141819	Callee	next_nomacro		6140423	0					
ANR	6141820	Identifier	next_nomacro		6140423	0					
ANR	6141821	ArgumentList			6140423	1					
ANR	6141822	ExpressionStatement	tok_flags |= TOK_FLAG_ENDIF	1704:3:35996:36023	6140423	3	True				
ANR	6141823	AssignmentExpression	tok_flags |= TOK_FLAG_ENDIF		6140423	0		|=			
ANR	6141824	Identifier	tok_flags		6140423	0					
ANR	6141825	Identifier	TOK_FLAG_ENDIF		6140423	1					
ANR	6141826	GotoStatement	goto the_end ;	1705:3:36028:36040	6140423	4	True				
ANR	6141827	Identifier	the_end		6140423	0					
ANR	6141828	BreakStatement	break ;	1707:2:36048:36053	6140423	59	True				
ANR	6141829	Label	case TOK_LINE :	1708:1:36056:36069	6140423	60	True				
ANR	6141830	Identifier	TOK_LINE		6140423	0					
ANR	6141831	ExpressionStatement	next ( )	1709:2:36073:36080	6140423	61	True				
ANR	6141832	CallExpression	next ( )		6140423	0					
ANR	6141833	Callee	next		6140423	0					
ANR	6141834	Identifier	next		6140423	0					
ANR	6141835	ArgumentList			6140423	1					
ANR	6141836	IfStatement	if ( tok != TOK_CINT )		6140423	62					
ANR	6141837	Condition	tok != TOK_CINT	1710:6:36088:36102	6140423	0	True				
ANR	6141838	EqualityExpression	tok != TOK_CINT		6140423	0		!=			
ANR	6141839	Identifier	tok		6140423	0					
ANR	6141840	Identifier	TOK_CINT		6140423	1					
ANR	6141841	CompoundStatement		293:23:7310:7310	6140423	1					
ANR	6141842	ExpressionStatement	"tcc_error ( ""#line"" )"	1711:3:36110:36129	6140423	0	True				
ANR	6141843	CallExpression	"tcc_error ( ""#line"" )"		6140423	0					
ANR	6141844	Callee	tcc_error		6140423	0					
ANR	6141845	Identifier	tcc_error		6140423	0					
ANR	6141846	ArgumentList	"""#line"""		6140423	1					
ANR	6141847	Argument	"""#line"""		6140423	0					
ANR	6141848	PrimaryExpression	"""#line"""		6140423	0					
ANR	6141849	ExpressionStatement	file -> line_num = tokc . i - 1	1713:2:36137:36164	6140423	63	True				
ANR	6141850	AssignmentExpression	file -> line_num = tokc . i - 1		6140423	0		=			
ANR	6141851	PtrMemberAccess	file -> line_num		6140423	0					
ANR	6141852	Identifier	file		6140423	0					
ANR	6141853	Identifier	line_num		6140423	1					
ANR	6141854	AdditiveExpression	tokc . i - 1		6140423	1		-			
ANR	6141855	MemberAccess	tokc . i		6140423	0					
ANR	6141856	Identifier	tokc		6140423	0					
ANR	6141857	Identifier	i		6140423	1					
ANR	6141858	PrimaryExpression	1		6140423	1					
ANR	6141859	ExpressionStatement	next ( )	1714:2:36216:36223	6140423	64	True				
ANR	6141860	CallExpression	next ( )		6140423	0					
ANR	6141861	Callee	next		6140423	0					
ANR	6141862	Identifier	next		6140423	0					
ANR	6141863	ArgumentList			6140423	1					
ANR	6141864	IfStatement	if ( tok != TOK_LINEFEED )		6140423	65					
ANR	6141865	Condition	tok != TOK_LINEFEED	1715:6:36231:36249	6140423	0	True				
ANR	6141866	EqualityExpression	tok != TOK_LINEFEED		6140423	0		!=			
ANR	6141867	Identifier	tok		6140423	0					
ANR	6141868	Identifier	TOK_LINEFEED		6140423	1					
ANR	6141869	CompoundStatement		298:27:7457:7457	6140423	1					
ANR	6141870	IfStatement	if ( tok != TOK_STR )		6140423	0					
ANR	6141871	Condition	tok != TOK_STR	1716:7:36261:36274	6140423	0	True				
ANR	6141872	EqualityExpression	tok != TOK_STR		6140423	0		!=			
ANR	6141873	Identifier	tok		6140423	0					
ANR	6141874	Identifier	TOK_STR		6140423	1					
ANR	6141875	CompoundStatement		299:23:7482:7482	6140423	1					
ANR	6141876	ExpressionStatement	"tcc_error ( ""#line"" )"	1717:4:36283:36302	6140423	0	True				
ANR	6141877	CallExpression	"tcc_error ( ""#line"" )"		6140423	0					
ANR	6141878	Callee	tcc_error		6140423	0					
ANR	6141879	Identifier	tcc_error		6140423	0					
ANR	6141880	ArgumentList	"""#line"""		6140423	1					
ANR	6141881	Argument	"""#line"""		6140423	0					
ANR	6141882	PrimaryExpression	"""#line"""		6140423	0					
ANR	6141883	ExpressionStatement	"pstrcpy ( file -> filename , sizeof ( file -> filename ) , ( char * ) tokc . cstr -> data )"	1719:3:36312:36390	6140423	1	True				
ANR	6141884	CallExpression	"pstrcpy ( file -> filename , sizeof ( file -> filename ) , ( char * ) tokc . cstr -> data )"		6140423	0					
ANR	6141885	Callee	pstrcpy		6140423	0					
ANR	6141886	Identifier	pstrcpy		6140423	0					
ANR	6141887	ArgumentList	file -> filename		6140423	1					
ANR	6141888	Argument	file -> filename		6140423	0					
ANR	6141889	PtrMemberAccess	file -> filename		6140423	0					
ANR	6141890	Identifier	file		6140423	0					
ANR	6141891	Identifier	filename		6140423	1					
ANR	6141892	Argument	sizeof ( file -> filename )		6140423	1					
ANR	6141893	SizeofExpression	sizeof ( file -> filename )		6140423	0					
ANR	6141894	Sizeof	sizeof		6140423	0					
ANR	6141895	PtrMemberAccess	file -> filename		6140423	1					
ANR	6141896	Identifier	file		6140423	0					
ANR	6141897	Identifier	filename		6140423	1					
ANR	6141898	Argument	( char * ) tokc . cstr -> data		6140423	2					
ANR	6141899	CastExpression	( char * ) tokc . cstr -> data		6140423	0					
ANR	6141900	CastTarget	char *		6140423	0					
ANR	6141901	PtrMemberAccess	tokc . cstr -> data		6140423	1					
ANR	6141902	MemberAccess	tokc . cstr		6140423	0					
ANR	6141903	Identifier	tokc		6140423	0					
ANR	6141904	Identifier	cstr		6140423	1					
ANR	6141905	Identifier	data		6140423	1					
ANR	6141906	BreakStatement	break ;	1722:2:36398:36403	6140423	66	True				
ANR	6141907	Label	case TOK_ERROR :	1723:1:36406:36420	6140423	67	True				
ANR	6141908	Identifier	TOK_ERROR		6140423	0					
ANR	6141909	Label	case TOK_WARNING :	1724:1:36423:36439	6140423	68	True				
ANR	6141910	Identifier	TOK_WARNING		6140423	0					
ANR	6141911	ExpressionStatement	c = tok	1725:2:36443:36450	6140423	69	True				
ANR	6141912	AssignmentExpression	c = tok		6140423	0		=			
ANR	6141913	Identifier	c		6140423	0					
ANR	6141914	Identifier	tok		6140423	1					
ANR	6141915	ExpressionStatement	ch = file -> buf_ptr [ 0 ]	1726:2:36454:36475	6140423	70	True				
ANR	6141916	AssignmentExpression	ch = file -> buf_ptr [ 0 ]		6140423	0		=			
ANR	6141917	Identifier	ch		6140423	0					
ANR	6141918	ArrayIndexing	file -> buf_ptr [ 0 ]		6140423	1					
ANR	6141919	PtrMemberAccess	file -> buf_ptr		6140423	0					
ANR	6141920	Identifier	file		6140423	0					
ANR	6141921	Identifier	buf_ptr		6140423	1					
ANR	6141922	PrimaryExpression	0		6140423	1					
ANR	6141923	ExpressionStatement	skip_spaces ( )	1727:2:36479:36493	6140423	71	True				
ANR	6141924	CallExpression	skip_spaces ( )		6140423	0					
ANR	6141925	Callee	skip_spaces		6140423	0					
ANR	6141926	Identifier	skip_spaces		6140423	0					
ANR	6141927	ArgumentList			6140423	1					
ANR	6141928	ExpressionStatement	q = buf	1728:2:36497:36504	6140423	72	True				
ANR	6141929	AssignmentExpression	q = buf		6140423	0		=			
ANR	6141930	Identifier	q		6140423	0					
ANR	6141931	Identifier	buf		6140423	1					
ANR	6141932	WhileStatement	while ( ch != '\\n' && ch != CH_EOF )		6140423	73					
ANR	6141933	Condition	ch != '\\n' && ch != CH_EOF	1729:9:36515:36540	6140423	0	True				
ANR	6141934	AndExpression	ch != '\\n' && ch != CH_EOF		6140423	0		&&			
ANR	6141935	EqualityExpression	ch != '\\n'		6140423	0		!=			
ANR	6141936	Identifier	ch		6140423	0					
ANR	6141937	PrimaryExpression	'\\n'		6140423	1					
ANR	6141938	EqualityExpression	ch != CH_EOF		6140423	1		!=			
ANR	6141939	Identifier	ch		6140423	0					
ANR	6141940	Identifier	CH_EOF		6140423	1					
ANR	6141941	CompoundStatement		312:37:7748:7748	6140423	1					
ANR	6141942	IfStatement	if ( ( q - buf ) < sizeof ( buf ) - 1 )		6140423	0					
ANR	6141943	Condition	( q - buf ) < sizeof ( buf ) - 1	1730:7:36552:36578	6140423	0	True				
ANR	6141944	RelationalExpression	( q - buf ) < sizeof ( buf ) - 1		6140423	0		<			
ANR	6141945	AdditiveExpression	q - buf		6140423	0		-			
ANR	6141946	Identifier	q		6140423	0					
ANR	6141947	Identifier	buf		6140423	1					
ANR	6141948	AdditiveExpression	sizeof ( buf ) - 1		6140423	1		-			
ANR	6141949	SizeofExpression	sizeof ( buf )		6140423	0					
ANR	6141950	Sizeof	sizeof		6140423	0					
ANR	6141951	SizeofOperand	buf		6140423	1					
ANR	6141952	PrimaryExpression	1		6140423	1					
ANR	6141953	CompoundStatement		313:36:7786:7786	6140423	1					
ANR	6141954	ExpressionStatement	* q ++ = ch	1731:4:36587:36596	6140423	0	True				
ANR	6141955	AssignmentExpression	* q ++ = ch		6140423	0		=			
ANR	6141956	UnaryOperationExpression	* q ++		6140423	0					
ANR	6141957	UnaryOperator	*		6140423	0					
ANR	6141958	PostIncDecOperationExpression	q ++		6140423	1					
ANR	6141959	Identifier	q		6140423	0					
ANR	6141960	IncDec	++		6140423	1					
ANR	6141961	Identifier	ch		6140423	1					
ANR	6141962	IfStatement	if ( ch == '\\\\' )		6140423	1					
ANR	6141963	Condition	ch == '\\\\'	1733:7:36610:36619	6140423	0	True				
ANR	6141964	EqualityExpression	ch == '\\\\'		6140423	0		==			
ANR	6141965	Identifier	ch		6140423	0					
ANR	6141966	PrimaryExpression	'\\\\'		6140423	1					
ANR	6141967	CompoundStatement		316:19:7827:7827	6140423	1					
ANR	6141968	IfStatement	if ( handle_stray_noerror ( ) == 0 )		6140423	0					
ANR	6141969	Condition	handle_stray_noerror ( ) == 0	1734:8:36632:36659	6140423	0	True				
ANR	6141970	EqualityExpression	handle_stray_noerror ( ) == 0		6140423	0		==			
ANR	6141971	CallExpression	handle_stray_noerror ( )		6140423	0					
ANR	6141972	Callee	handle_stray_noerror		6140423	0					
ANR	6141973	Identifier	handle_stray_noerror		6140423	0					
ANR	6141974	ArgumentList			6140423	1					
ANR	6141975	PrimaryExpression	0		6140423	1					
ANR	6141976	CompoundStatement		317:38:7867:7867	6140423	1					
ANR	6141977	ExpressionStatement	-- q	1735:5:36669:36672	6140423	0	True				
ANR	6141978	UnaryExpression	-- q		6140423	0					
ANR	6141979	IncDec	--		6140423	0					
ANR	6141980	Identifier	q		6140423	1					
ANR	6141981	ElseStatement	else		6140423	0					
ANR	6141982	CompoundStatement		320:10:7895:7895	6140423	0					
ANR	6141983	ExpressionStatement	inp ( )	1738:4:36696:36702	6140423	0	True				
ANR	6141984	CallExpression	inp ( )		6140423	0					
ANR	6141985	Callee	inp		6140423	0					
ANR	6141986	Identifier	inp		6140423	0					
ANR	6141987	ArgumentList			6140423	1					
ANR	6141988	ExpressionStatement	* q = '\\0'	1741:2:36715:36724	6140423	74	True				
ANR	6141989	AssignmentExpression	* q = '\\0'		6140423	0		=			
ANR	6141990	UnaryOperationExpression	* q		6140423	0					
ANR	6141991	UnaryOperator	*		6140423	0					
ANR	6141992	Identifier	q		6140423	1					
ANR	6141993	PrimaryExpression	'\\0'		6140423	1					
ANR	6141994	ExpressionStatement	"tcc_warning ( ""#%s %s"" , c == TOK_ERROR ? ""error"" : ""warning"" , buf )"	1742:2:36728:36791	6140423	75	True				
ANR	6141995	CallExpression	"tcc_warning ( ""#%s %s"" , c == TOK_ERROR ? ""error"" : ""warning"" , buf )"		6140423	0					
ANR	6141996	Callee	tcc_warning		6140423	0					
ANR	6141997	Identifier	tcc_warning		6140423	0					
ANR	6141998	ArgumentList	"""#%s %s"""		6140423	1					
ANR	6141999	Argument	"""#%s %s"""		6140423	0					
ANR	6142000	PrimaryExpression	"""#%s %s"""		6140423	0					
ANR	6142001	Argument	"c == TOK_ERROR ? ""error"" : ""warning"""		6140423	1					
ANR	6142002	ConditionalExpression	"c == TOK_ERROR ? ""error"" : ""warning"""		6140423	0					
ANR	6142003	Condition	c == TOK_ERROR		6140423	0					
ANR	6142004	EqualityExpression	c == TOK_ERROR		6140423	0		==			
ANR	6142005	Identifier	c		6140423	0					
ANR	6142006	Identifier	TOK_ERROR		6140423	1					
ANR	6142007	PrimaryExpression	"""error"""		6140423	1					
ANR	6142008	PrimaryExpression	"""warning"""		6140423	2					
ANR	6142009	Argument	buf		6140423	2					
ANR	6142010	Identifier	buf		6140423	0					
ANR	6142011	BreakStatement	break ;	1743:2:36795:36800	6140423	76	True				
ANR	6142012	Label	case TOK_PRAGMA :	1744:1:36803:36818	6140423	77	True				
ANR	6142013	Identifier	TOK_PRAGMA		6140423	0					
ANR	6142014	ExpressionStatement	pragma_parse ( s1 )	1745:2:36822:36839	6140423	78	True				
ANR	6142015	CallExpression	pragma_parse ( s1 )		6140423	0					
ANR	6142016	Callee	pragma_parse		6140423	0					
ANR	6142017	Identifier	pragma_parse		6140423	0					
ANR	6142018	ArgumentList	s1		6140423	1					
ANR	6142019	Argument	s1		6140423	0					
ANR	6142020	Identifier	s1		6140423	0					
ANR	6142021	BreakStatement	break ;	1746:2:36843:36848	6140423	79	True				
ANR	6142022	Label	default :	1747:1:36851:36858	6140423	80	True				
ANR	6142023	Identifier	default		6140423	0					
ANR	6142024	IfStatement	if ( tok == TOK_LINEFEED || tok == '!' || tok == TOK_PPNUM )		6140423	81					
ANR	6142025	Condition	tok == TOK_LINEFEED || tok == '!' || tok == TOK_PPNUM	1748:6:36866:36918	6140423	0	True				
ANR	6142026	OrExpression	tok == TOK_LINEFEED || tok == '!' || tok == TOK_PPNUM		6140423	0		||			
ANR	6142027	EqualityExpression	tok == TOK_LINEFEED		6140423	0		==			
ANR	6142028	Identifier	tok		6140423	0					
ANR	6142029	Identifier	TOK_LINEFEED		6140423	1					
ANR	6142030	OrExpression	tok == '!' || tok == TOK_PPNUM		6140423	1		||			
ANR	6142031	EqualityExpression	tok == '!'		6140423	0		==			
ANR	6142032	Identifier	tok		6140423	0					
ANR	6142033	PrimaryExpression	'!'		6140423	1					
ANR	6142034	EqualityExpression	tok == TOK_PPNUM		6140423	1		==			
ANR	6142035	Identifier	tok		6140423	0					
ANR	6142036	Identifier	TOK_PPNUM		6140423	1					
ANR	6142037	CompoundStatement		331:61:8126:8126	6140423	1					
ANR	6142038	ElseStatement	else		6140423	0					
ANR	6142039	CompoundStatement		334:9:8232:8232	6140423	0					
ANR	6142040	IfStatement	if ( ! ( saved_parse_flags & PARSE_FLAG_ASM_COMMENTS ) )		6140423	0					
ANR	6142041	Condition	! ( saved_parse_flags & PARSE_FLAG_ASM_COMMENTS )	1752:7:37036:37081	6140423	0	True				
ANR	6142042	UnaryOperationExpression	! ( saved_parse_flags & PARSE_FLAG_ASM_COMMENTS )		6140423	0					
ANR	6142043	UnaryOperator	!		6140423	0					
ANR	6142044	BitAndExpression	saved_parse_flags & PARSE_FLAG_ASM_COMMENTS		6140423	1		&			
ANR	6142045	Identifier	saved_parse_flags		6140423	0					
ANR	6142046	Identifier	PARSE_FLAG_ASM_COMMENTS		6140423	1					
ANR	6142047	CompoundStatement		335:55:8289:8289	6140423	1					
ANR	6142048	ExpressionStatement	"tcc_warning ( ""Ignoring unknown preprocessing directive #%s"" , get_tok_str ( tok , & tokc ) )"	1753:4:37090:37176	6140423	0	True				
ANR	6142049	CallExpression	"tcc_warning ( ""Ignoring unknown preprocessing directive #%s"" , get_tok_str ( tok , & tokc ) )"		6140423	0					
ANR	6142050	Callee	tcc_warning		6140423	0					
ANR	6142051	Identifier	tcc_warning		6140423	0					
ANR	6142052	ArgumentList	"""Ignoring unknown preprocessing directive #%s"""		6140423	1					
ANR	6142053	Argument	"""Ignoring unknown preprocessing directive #%s"""		6140423	0					
ANR	6142054	PrimaryExpression	"""Ignoring unknown preprocessing directive #%s"""		6140423	0					
ANR	6142055	Argument	"get_tok_str ( tok , & tokc )"		6140423	1					
ANR	6142056	CallExpression	"get_tok_str ( tok , & tokc )"		6140423	0					
ANR	6142057	Callee	get_tok_str		6140423	0					
ANR	6142058	Identifier	get_tok_str		6140423	0					
ANR	6142059	ArgumentList	tok		6140423	1					
ANR	6142060	Argument	tok		6140423	0					
ANR	6142061	Identifier	tok		6140423	0					
ANR	6142062	Argument	& tokc		6140423	1					
ANR	6142063	UnaryOperationExpression	& tokc		6140423	0					
ANR	6142064	UnaryOperator	&		6140423	0					
ANR	6142065	Identifier	tokc		6140423	1					
ANR	6142066	ElseStatement	else		6140423	0					
ANR	6142067	CompoundStatement		337:10:8393:8393	6140423	0					
ANR	6142068	ExpressionStatement	file -> buf_ptr = parse_line_comment ( file -> buf_ptr )	1756:4:37247:37297	6140423	0	True				
ANR	6142069	AssignmentExpression	file -> buf_ptr = parse_line_comment ( file -> buf_ptr )		6140423	0		=			
ANR	6142070	PtrMemberAccess	file -> buf_ptr		6140423	0					
ANR	6142071	Identifier	file		6140423	0					
ANR	6142072	Identifier	buf_ptr		6140423	1					
ANR	6142073	CallExpression	parse_line_comment ( file -> buf_ptr )		6140423	1					
ANR	6142074	Callee	parse_line_comment		6140423	0					
ANR	6142075	Identifier	parse_line_comment		6140423	0					
ANR	6142076	ArgumentList	file -> buf_ptr		6140423	1					
ANR	6142077	Argument	file -> buf_ptr		6140423	0					
ANR	6142078	PtrMemberAccess	file -> buf_ptr		6140423	0					
ANR	6142079	Identifier	file		6140423	0					
ANR	6142080	Identifier	buf_ptr		6140423	1					
ANR	6142081	GotoStatement	goto the_end ;	1757:4:37303:37315	6140423	1	True				
ANR	6142082	Identifier	the_end		6140423	0					
ANR	6142083	BreakStatement	break ;	1760:2:37328:37333	6140423	82	True				
ANR	6142084	WhileStatement	while ( tok != TOK_LINEFEED )		6140423	9					
ANR	6142085	Condition	tok != TOK_LINEFEED	1763:8:37406:37424	6140423	0	True				
ANR	6142086	EqualityExpression	tok != TOK_LINEFEED		6140423	0		!=			
ANR	6142087	Identifier	tok		6140423	0					
ANR	6142088	Identifier	TOK_LINEFEED		6140423	1					
ANR	6142089	ExpressionStatement	next_nomacro ( )	1764:2:37429:37444	6140423	1	True				
ANR	6142090	CallExpression	next_nomacro ( )		6140423	0					
ANR	6142091	Callee	next_nomacro		6140423	0					
ANR	6142092	Identifier	next_nomacro		6140423	0					
ANR	6142093	ArgumentList			6140423	1					
ANR	6142094	Label	the_end :	1765:0:37446:37453	6140423	10	True				
ANR	6142095	Identifier	the_end		6140423	0					
ANR	6142096	ExpressionStatement	parse_flags = saved_parse_flags	1766:1:37456:37487	6140423	11	True				
ANR	6142097	AssignmentExpression	parse_flags = saved_parse_flags		6140423	0		=			
ANR	6142098	Identifier	parse_flags		6140423	0					
ANR	6142099	Identifier	saved_parse_flags		6140423	1					
ANR	6142100	ReturnType	ST_FUNC void		6140423	1					
ANR	6142101	Identifier	preprocess		6140423	2					
ANR	6142102	ParameterList	int is_bof		6140423	3					
ANR	6142103	Parameter	int is_bof	1417:24:28782:28791	6140423	0	True				
ANR	6142104	ParameterType	int		6140423	0					
ANR	6142105	Identifier	is_bof		6140423	1					
ANR	6142106	CFGEntryNode	ENTRY		6140423		True				
ANR	6142107	CFGExitNode	EXIT		6140423		True				
ANR	6142108	Symbol	PARSE_FLAG_LINEFEED		6140423						
ANR	6142109	Symbol	* s1 -> nb_include_paths		6140423						
ANR	6142110	Symbol	* s1 -> ifdef_stack_ptr ++		6140423						
ANR	6142111	Symbol	* q ++		6140423						
ANR	6142112	Symbol	* R_SYS_DIR		6140423						
ANR	6142113	Symbol	dirname		6140423						
ANR	6142114	Symbol	path		6140423						
ANR	6142115	Symbol	tokc . cstr		6140423						
ANR	6142116	Symbol	s1 -> include_paths		6140423						
ANR	6142117	Symbol	tok_flags		6140423						
ANR	6142118	Symbol	len		6140423						
ANR	6142119	Symbol	& tokc		6140423						
ANR	6142120	Symbol	define_find		6140423						
ANR	6142121	Symbol	s1		6140423						
ANR	6142122	Symbol	IS_ABSPATH		6140423						
ANR	6142123	Symbol	TOK_CINT		6140423						
ANR	6142124	Symbol	* buf		6140423						
ANR	6142125	Symbol	expr_preprocess		6140423						
ANR	6142126	Symbol	TOK_STR		6140423						
ANR	6142127	Symbol	tokc		6140423						
ANR	6142128	Symbol	* file		6140423						
ANR	6142129	Symbol	handle_stray_noerror		6140423						
ANR	6142130	Symbol	buf1		6140423						
ANR	6142131	Symbol	s1 -> ifdef_stack		6140423						
ANR	6142132	Symbol	IFDEF_STACK_SIZE		6140423						
ANR	6142133	Symbol	* * file		6140423						
ANR	6142134	Symbol	* tokc . cstr		6140423						
ANR	6142135	Symbol	* file -> buf_ptr		6140423						
ANR	6142136	Symbol	tok		6140423						
ANR	6142137	Symbol	file		6140423						
ANR	6142138	Symbol	R_SYS_DIR		6140423						
ANR	6142139	Symbol	file -> ifndef_macro		6140423						
ANR	6142140	Symbol	file -> buf_ptr		6140423						
ANR	6142141	Symbol	file -> line_num		6140423						
ANR	6142142	Symbol	* s1 -> sysinclude_paths		6140423						
ANR	6142143	Symbol	filepath_len		6140423						
ANR	6142144	Symbol	* file -> prev		6140423						
ANR	6142145	Symbol	c		6140423						
ANR	6142146	Symbol	INCLUDE_STACK_SIZE		6140423						
ANR	6142147	Symbol	ch		6140423						
ANR	6142148	Symbol	e		6140423						
ANR	6142149	Symbol	f		6140423						
ANR	6142150	Symbol	* s1 -> include_stack_ptr		6140423						
ANR	6142151	Symbol	i		6140423						
ANR	6142152	Symbol	R_MIN		6140423						
ANR	6142153	Symbol	TOK_ERROR		6140423						
ANR	6142154	Symbol	file -> prev		6140423						
ANR	6142155	Symbol	TOK_FLAG_ENDIF		6140423						
ANR	6142156	Symbol	ch1		6140423						
ANR	6142157	Symbol	n		6140423						
ANR	6142158	Symbol	q		6140423						
ANR	6142159	Symbol	buf		6140423						
ANR	6142160	Symbol	s		6140423						
ANR	6142161	Symbol	CH_EOF		6140423						
ANR	6142162	Symbol	parse_line_comment		6140423						
ANR	6142163	Symbol	PARSE_FLAG_TOK_NUM		6140423						
ANR	6142164	Symbol	* len		6140423						
ANR	6142165	Symbol	PATHCMP		6140423						
ANR	6142166	Symbol	get_tok_str		6140423						
ANR	6142167	Symbol	s1 -> include_stack_ptr		6140423						
ANR	6142168	Symbol	* * s1		6140423						
ANR	6142169	Symbol	is_bof		6140423						
ANR	6142170	Symbol	search_cached_include		6140423						
ANR	6142171	Symbol	s1 -> sysinclude_paths		6140423						
ANR	6142172	Symbol	TOK_LINEFEED		6140423						
ANR	6142173	Symbol	file -> ifndef_macro_saved		6140423						
ANR	6142174	Symbol	strlen		6140423						
ANR	6142175	Symbol	PARSE_FLAG_ASM_COMMENTS		6140423						
ANR	6142176	Symbol	filepath		6140423						
ANR	6142177	Symbol	& s1 -> nb_target_deps		6140423						
ANR	6142178	Symbol	TOK_PPNUM		6140423						
ANR	6142179	Symbol	s1 -> nb_sysinclude_paths		6140423						
ANR	6142180	Symbol	e -> ifndef_macro		6140423						
ANR	6142181	Symbol	tokc . i		6140423						
ANR	6142182	Symbol	tcc_state		6140423						
ANR	6142183	Symbol	file -> filename		6140423						
ANR	6142184	Symbol	NULL		6140423						
ANR	6142185	Symbol	TOK_IDENT		6140423						
ANR	6142186	Symbol	* * f		6140423						
ANR	6142187	Symbol	PARSE_FLAG_PREPROCESS		6140423						
ANR	6142188	Symbol	stderr		6140423						
ANR	6142189	Symbol	s1 -> include_stack		6140423						
ANR	6142190	Symbol	tcc_open		6140423						
ANR	6142191	Symbol	* s1 -> ifdef_stack_ptr		6140423						
ANR	6142192	Symbol	parse_flags		6140423						
ANR	6142193	Symbol	* s1 -> include_paths		6140423						
ANR	6142194	Symbol	* s1		6140423						
ANR	6142195	Symbol	TOK_FLAG_BOF		6140423						
ANR	6142196	Symbol	* buf1		6140423						
ANR	6142197	Symbol	TOK_FLAG_BOL		6140423						
ANR	6142198	Symbol	tcc_basename		6140423						
ANR	6142199	Symbol	file -> prev -> filename		6140423						
ANR	6142200	Symbol	s1 -> nb_include_paths		6140423						
ANR	6142201	Symbol	saved_parse_flags		6140423						
ANR	6142202	Symbol	s1 -> ifdef_stack_ptr		6140423						
ANR	6142203	Symbol	& s1 -> target_deps		6140423						
ANR	6142204	Symbol	snprintf		6140423						
ANR	6142205	Symbol	file -> ifdef_stack_ptr		6140423						
ANR	6142206	Symbol	TOK_INCLUDE_NEXT		6140423						
ANR	6142207	Symbol	* tokc		6140423						
ANR	6142208	Symbol	* e		6140423						
ANR	6142209	Symbol	* f		6140423						
ANR	6142210	Symbol	* i		6140423						
ANR	6142211	Symbol	tokc . cstr -> data		6140423						
ANR	6142212	Symbol	* q		6140423						
ANR	6142213	Symbol	strdup		6140423						
ANR	6142214	Symbol	( * f ) -> filename		6140423						
ANR	6142215	Function	parse_escape_string	1770:0:37533:39353							
ANR	6142216	FunctionDef	"parse_escape_string (CString * outstr , const uint8_t * buf , int is_long)"		6142215	0					
ANR	6142217	CompoundStatement		1771:0:37615:39353	6142215	0					
ANR	6142218	IdentifierDeclStatement	"int c , n ;"	1772:1:37618:37626	6142215	0	True				
ANR	6142219	IdentifierDecl	c		6142215	0					
ANR	6142220	IdentifierDeclType	int		6142215	0					
ANR	6142221	Identifier	c		6142215	1					
ANR	6142222	IdentifierDecl	n		6142215	1					
ANR	6142223	IdentifierDeclType	int		6142215	0					
ANR	6142224	Identifier	n		6142215	1					
ANR	6142225	IdentifierDeclStatement	const uint8_t * p ;	1773:1:37629:37645	6142215	1	True				
ANR	6142226	IdentifierDecl	* p		6142215	0					
ANR	6142227	IdentifierDeclType	const uint8_t *		6142215	0					
ANR	6142228	Identifier	p		6142215	1					
ANR	6142229	ExpressionStatement	p = buf	1775:1:37649:37656	6142215	2	True				
ANR	6142230	AssignmentExpression	p = buf		6142215	0		=			
ANR	6142231	Identifier	p		6142215	0					
ANR	6142232	Identifier	buf		6142215	1					
ANR	6142233	ForStatement	for ( ; ; )		6142215	3					
ANR	6142234	CompoundStatement		6:10:52:52	6142215	0					
ANR	6142235	ExpressionStatement	c = * p	1777:2:37672:37678	6142215	0	True				
ANR	6142236	AssignmentExpression	c = * p		6142215	0		=			
ANR	6142237	Identifier	c		6142215	0					
ANR	6142238	UnaryOperationExpression	* p		6142215	1					
ANR	6142239	UnaryOperator	*		6142215	0					
ANR	6142240	Identifier	p		6142215	1					
ANR	6142241	IfStatement	if ( c == '\\0' )		6142215	1					
ANR	6142242	Condition	c == '\\0'	1778:6:37686:37694	6142215	0	True				
ANR	6142243	EqualityExpression	c == '\\0'		6142215	0		==			
ANR	6142244	Identifier	c		6142215	0					
ANR	6142245	PrimaryExpression	'\\0'		6142215	1					
ANR	6142246	CompoundStatement		8:17:81:81	6142215	1					
ANR	6142247	BreakStatement	break ;	1779:3:37702:37707	6142215	0	True				
ANR	6142248	IfStatement	if ( c == '\\\\' )		6142215	2					
ANR	6142249	Condition	c == '\\\\'	1781:6:37719:37727	6142215	0	True				
ANR	6142250	EqualityExpression	c == '\\\\'		6142215	0		==			
ANR	6142251	Identifier	c		6142215	0					
ANR	6142252	PrimaryExpression	'\\\\'		6142215	1					
ANR	6142253	CompoundStatement		11:17:114:114	6142215	1					
ANR	6142254	ExpressionStatement	p ++	1782:3:37735:37738	6142215	0	True				
ANR	6142255	PostIncDecOperationExpression	p ++		6142215	0					
ANR	6142256	Identifier	p		6142215	0					
ANR	6142257	IncDec	++		6142215	1					
ANR	6142258	ExpressionStatement	c = * p	1784:3:37759:37765	6142215	1	True				
ANR	6142259	AssignmentExpression	c = * p		6142215	0		=			
ANR	6142260	Identifier	c		6142215	0					
ANR	6142261	UnaryOperationExpression	* p		6142215	1					
ANR	6142262	UnaryOperator	*		6142215	0					
ANR	6142263	Identifier	p		6142215	1					
ANR	6142264	SwitchStatement	switch ( c )		6142215	2					
ANR	6142265	Condition	c	1785:11:37778:37778	6142215	0	True				
ANR	6142266	Identifier	c		6142215	0					
ANR	6142267	CompoundStatement		15:14:165:165	6142215	1					
ANR	6142268	Label	case '0' :	1786:3:37786:37794	6142215	0	True				
ANR	6142269	Label	case '1' :	1786:13:37796:37804	6142215	1	True				
ANR	6142270	Label	case '2' :	1786:23:37806:37814	6142215	2	True				
ANR	6142271	Label	case '3' :	1786:33:37816:37824	6142215	3	True				
ANR	6142272	Label	case '4' :	1787:3:37829:37837	6142215	4	True				
ANR	6142273	Label	case '5' :	1787:13:37839:37847	6142215	5	True				
ANR	6142274	Label	case '6' :	1787:23:37849:37857	6142215	6	True				
ANR	6142275	Label	case '7' :	1787:33:37859:37867	6142215	7	True				
ANR	6142276	ExpressionStatement	n = c - '0'	1789:4:37910:37921	6142215	8	True				
ANR	6142277	AssignmentExpression	n = c - '0'		6142215	0		=			
ANR	6142278	Identifier	n		6142215	0					
ANR	6142279	AdditiveExpression	c - '0'		6142215	1		-			
ANR	6142280	Identifier	c		6142215	0					
ANR	6142281	PrimaryExpression	'0'		6142215	1					
ANR	6142282	ExpressionStatement	p ++	1790:4:37927:37930	6142215	9	True				
ANR	6142283	PostIncDecOperationExpression	p ++		6142215	0					
ANR	6142284	Identifier	p		6142215	0					
ANR	6142285	IncDec	++		6142215	1					
ANR	6142286	ExpressionStatement	c = * p	1791:4:37936:37942	6142215	10	True				
ANR	6142287	AssignmentExpression	c = * p		6142215	0		=			
ANR	6142288	Identifier	c		6142215	0					
ANR	6142289	UnaryOperationExpression	* p		6142215	1					
ANR	6142290	UnaryOperator	*		6142215	0					
ANR	6142291	Identifier	p		6142215	1					
ANR	6142292	IfStatement	if ( isoct ( c ) )		6142215	11					
ANR	6142293	Condition	isoct ( c )	1792:8:37952:37960	6142215	0	True				
ANR	6142294	CallExpression	isoct ( c )		6142215	0					
ANR	6142295	Callee	isoct		6142215	0					
ANR	6142296	Identifier	isoct		6142215	0					
ANR	6142297	ArgumentList	c		6142215	1					
ANR	6142298	Argument	c		6142215	0					
ANR	6142299	Identifier	c		6142215	0					
ANR	6142300	CompoundStatement		22:19:347:347	6142215	1					
ANR	6142301	ExpressionStatement	n = n * 8 + c - '0'	1793:5:37970:37989	6142215	0	True				
ANR	6142302	AssignmentExpression	n = n * 8 + c - '0'		6142215	0		=			
ANR	6142303	Identifier	n		6142215	0					
ANR	6142304	AdditiveExpression	n * 8 + c - '0'		6142215	1		+			
ANR	6142305	MultiplicativeExpression	n * 8		6142215	0		*			
ANR	6142306	Identifier	n		6142215	0					
ANR	6142307	PrimaryExpression	8		6142215	1					
ANR	6142308	AdditiveExpression	c - '0'		6142215	1		-			
ANR	6142309	Identifier	c		6142215	0					
ANR	6142310	PrimaryExpression	'0'		6142215	1					
ANR	6142311	ExpressionStatement	p ++	1794:5:37996:37999	6142215	1	True				
ANR	6142312	PostIncDecOperationExpression	p ++		6142215	0					
ANR	6142313	Identifier	p		6142215	0					
ANR	6142314	IncDec	++		6142215	1					
ANR	6142315	ExpressionStatement	c = * p	1795:5:38006:38012	6142215	2	True				
ANR	6142316	AssignmentExpression	c = * p		6142215	0		=			
ANR	6142317	Identifier	c		6142215	0					
ANR	6142318	UnaryOperationExpression	* p		6142215	1					
ANR	6142319	UnaryOperator	*		6142215	0					
ANR	6142320	Identifier	p		6142215	1					
ANR	6142321	IfStatement	if ( isoct ( c ) )		6142215	3					
ANR	6142322	Condition	isoct ( c )	1796:9:38023:38031	6142215	0	True				
ANR	6142323	CallExpression	isoct ( c )		6142215	0					
ANR	6142324	Callee	isoct		6142215	0					
ANR	6142325	Identifier	isoct		6142215	0					
ANR	6142326	ArgumentList	c		6142215	1					
ANR	6142327	Argument	c		6142215	0					
ANR	6142328	Identifier	c		6142215	0					
ANR	6142329	CompoundStatement		26:20:418:418	6142215	1					
ANR	6142330	ExpressionStatement	n = n * 8 + c - '0'	1797:6:38042:38061	6142215	0	True				
ANR	6142331	AssignmentExpression	n = n * 8 + c - '0'		6142215	0		=			
ANR	6142332	Identifier	n		6142215	0					
ANR	6142333	AdditiveExpression	n * 8 + c - '0'		6142215	1		+			
ANR	6142334	MultiplicativeExpression	n * 8		6142215	0		*			
ANR	6142335	Identifier	n		6142215	0					
ANR	6142336	PrimaryExpression	8		6142215	1					
ANR	6142337	AdditiveExpression	c - '0'		6142215	1		-			
ANR	6142338	Identifier	c		6142215	0					
ANR	6142339	PrimaryExpression	'0'		6142215	1					
ANR	6142340	ExpressionStatement	p ++	1798:6:38069:38072	6142215	1	True				
ANR	6142341	PostIncDecOperationExpression	p ++		6142215	0					
ANR	6142342	Identifier	p		6142215	0					
ANR	6142343	IncDec	++		6142215	1					
ANR	6142344	ExpressionStatement	c = n	1801:4:38091:38096	6142215	12	True				
ANR	6142345	AssignmentExpression	c = n		6142215	0		=			
ANR	6142346	Identifier	c		6142215	0					
ANR	6142347	Identifier	n		6142215	1					
ANR	6142348	GotoStatement	goto add_char_nonext ;	1802:4:38102:38122	6142215	13	True				
ANR	6142349	Identifier	add_char_nonext		6142215	0					
ANR	6142350	Label	case 'x' :	1803:3:38127:38135	6142215	14	True				
ANR	6142351	Label	case 'u' :	1804:3:38140:38148	6142215	15	True				
ANR	6142352	Label	case 'U' :	1805:3:38153:38161	6142215	16	True				
ANR	6142353	ExpressionStatement	p ++	1806:4:38167:38170	6142215	17	True				
ANR	6142354	PostIncDecOperationExpression	p ++		6142215	0					
ANR	6142355	Identifier	p		6142215	0					
ANR	6142356	IncDec	++		6142215	1					
ANR	6142357	ExpressionStatement	n = 0	1807:4:38176:38181	6142215	18	True				
ANR	6142358	AssignmentExpression	n = 0		6142215	0		=			
ANR	6142359	Identifier	n		6142215	0					
ANR	6142360	PrimaryExpression	0		6142215	1					
ANR	6142361	ForStatement	for ( ; ; )		6142215	19					
ANR	6142362	CompoundStatement		38:13:580:580	6142215	0					
ANR	6142363	ExpressionStatement	c = * p	1809:5:38203:38209	6142215	0	True				
ANR	6142364	AssignmentExpression	c = * p		6142215	0		=			
ANR	6142365	Identifier	c		6142215	0					
ANR	6142366	UnaryOperationExpression	* p		6142215	1					
ANR	6142367	UnaryOperator	*		6142215	0					
ANR	6142368	Identifier	p		6142215	1					
ANR	6142369	IfStatement	if ( c >= 'a' && c <= 'f' )		6142215	1					
ANR	6142370	Condition	c >= 'a' && c <= 'f'	1810:9:38220:38239	6142215	0	True				
ANR	6142371	AndExpression	c >= 'a' && c <= 'f'		6142215	0		&&			
ANR	6142372	RelationalExpression	c >= 'a'		6142215	0		>=			
ANR	6142373	Identifier	c		6142215	0					
ANR	6142374	PrimaryExpression	'a'		6142215	1					
ANR	6142375	RelationalExpression	c <= 'f'		6142215	1		<=			
ANR	6142376	Identifier	c		6142215	0					
ANR	6142377	PrimaryExpression	'f'		6142215	1					
ANR	6142378	CompoundStatement		40:31:626:626	6142215	1					
ANR	6142379	ExpressionStatement	c = c - 'a' + 10	1811:6:38250:38266	6142215	0	True				
ANR	6142380	AssignmentExpression	c = c - 'a' + 10		6142215	0		=			
ANR	6142381	Identifier	c		6142215	0					
ANR	6142382	AdditiveExpression	c - 'a' + 10		6142215	1		-			
ANR	6142383	Identifier	c		6142215	0					
ANR	6142384	AdditiveExpression	'a' + 10		6142215	1		+			
ANR	6142385	PrimaryExpression	'a'		6142215	0					
ANR	6142386	PrimaryExpression	10		6142215	1					
ANR	6142387	ElseStatement	else		6142215	0					
ANR	6142388	IfStatement	if ( c >= 'A' && c <= 'F' )		6142215	0					
ANR	6142389	Condition	c >= 'A' && c <= 'F'	1812:16:38284:38303	6142215	0	True				
ANR	6142390	AndExpression	c >= 'A' && c <= 'F'		6142215	0		&&			
ANR	6142391	RelationalExpression	c >= 'A'		6142215	0		>=			
ANR	6142392	Identifier	c		6142215	0					
ANR	6142393	PrimaryExpression	'A'		6142215	1					
ANR	6142394	RelationalExpression	c <= 'F'		6142215	1		<=			
ANR	6142395	Identifier	c		6142215	0					
ANR	6142396	PrimaryExpression	'F'		6142215	1					
ANR	6142397	CompoundStatement		42:38:690:690	6142215	1					
ANR	6142398	ExpressionStatement	c = c - 'A' + 10	1813:6:38314:38330	6142215	0	True				
ANR	6142399	AssignmentExpression	c = c - 'A' + 10		6142215	0		=			
ANR	6142400	Identifier	c		6142215	0					
ANR	6142401	AdditiveExpression	c - 'A' + 10		6142215	1		-			
ANR	6142402	Identifier	c		6142215	0					
ANR	6142403	AdditiveExpression	'A' + 10		6142215	1		+			
ANR	6142404	PrimaryExpression	'A'		6142215	0					
ANR	6142405	PrimaryExpression	10		6142215	1					
ANR	6142406	ElseStatement	else		6142215	0					
ANR	6142407	IfStatement	if ( isnum ( c ) )		6142215	0					
ANR	6142408	Condition	isnum ( c )	1814:16:38348:38356	6142215	0	True				
ANR	6142409	CallExpression	isnum ( c )		6142215	0					
ANR	6142410	Callee	isnum		6142215	0					
ANR	6142411	Identifier	isnum		6142215	0					
ANR	6142412	ArgumentList	c		6142215	1					
ANR	6142413	Argument	c		6142215	0					
ANR	6142414	Identifier	c		6142215	0					
ANR	6142415	CompoundStatement		44:27:743:743	6142215	1					
ANR	6142416	ExpressionStatement	c = c - '0'	1815:6:38367:38378	6142215	0	True				
ANR	6142417	AssignmentExpression	c = c - '0'		6142215	0		=			
ANR	6142418	Identifier	c		6142215	0					
ANR	6142419	AdditiveExpression	c - '0'		6142215	1		-			
ANR	6142420	Identifier	c		6142215	0					
ANR	6142421	PrimaryExpression	'0'		6142215	1					
ANR	6142422	ElseStatement	else		6142215	0					
ANR	6142423	CompoundStatement		46:12:776:776	6142215	0					
ANR	6142424	BreakStatement	break ;	1817:6:38400:38405	6142215	0	True				
ANR	6142425	ExpressionStatement	n = n * 16 + c	1819:5:38419:38433	6142215	2	True				
ANR	6142426	AssignmentExpression	n = n * 16 + c		6142215	0		=			
ANR	6142427	Identifier	n		6142215	0					
ANR	6142428	AdditiveExpression	n * 16 + c		6142215	1		+			
ANR	6142429	MultiplicativeExpression	n * 16		6142215	0		*			
ANR	6142430	Identifier	n		6142215	0					
ANR	6142431	PrimaryExpression	16		6142215	1					
ANR	6142432	Identifier	c		6142215	1					
ANR	6142433	ExpressionStatement	p ++	1820:5:38440:38443	6142215	3	True				
ANR	6142434	PostIncDecOperationExpression	p ++		6142215	0					
ANR	6142435	Identifier	p		6142215	0					
ANR	6142436	IncDec	++		6142215	1					
ANR	6142437	ExpressionStatement	c = n	1822:4:38455:38460	6142215	20	True				
ANR	6142438	AssignmentExpression	c = n		6142215	0		=			
ANR	6142439	Identifier	c		6142215	0					
ANR	6142440	Identifier	n		6142215	1					
ANR	6142441	GotoStatement	goto add_char_nonext ;	1823:4:38466:38486	6142215	21	True				
ANR	6142442	Identifier	add_char_nonext		6142215	0					
ANR	6142443	Label	case 'a' :	1824:3:38491:38499	6142215	22	True				
ANR	6142444	ExpressionStatement	c = '\\a'	1825:4:38505:38513	6142215	23	True				
ANR	6142445	AssignmentExpression	c = '\\a'		6142215	0		=			
ANR	6142446	Identifier	c		6142215	0					
ANR	6142447	PrimaryExpression	'\\a'		6142215	1					
ANR	6142448	BreakStatement	break ;	1826:4:38519:38524	6142215	24	True				
ANR	6142449	Label	case 'b' :	1827:3:38529:38537	6142215	25	True				
ANR	6142450	ExpressionStatement	c = '\\b'	1828:4:38543:38551	6142215	26	True				
ANR	6142451	AssignmentExpression	c = '\\b'		6142215	0		=			
ANR	6142452	Identifier	c		6142215	0					
ANR	6142453	PrimaryExpression	'\\b'		6142215	1					
ANR	6142454	BreakStatement	break ;	1829:4:38557:38562	6142215	27	True				
ANR	6142455	Label	case 'f' :	1830:3:38567:38575	6142215	28	True				
ANR	6142456	ExpressionStatement	c = '\\f'	1831:4:38581:38589	6142215	29	True				
ANR	6142457	AssignmentExpression	c = '\\f'		6142215	0		=			
ANR	6142458	Identifier	c		6142215	0					
ANR	6142459	PrimaryExpression	'\\f'		6142215	1					
ANR	6142460	BreakStatement	break ;	1832:4:38595:38600	6142215	30	True				
ANR	6142461	Label	case 'n' :	1833:3:38605:38613	6142215	31	True				
ANR	6142462	ExpressionStatement	c = '\\n'	1834:4:38619:38627	6142215	32	True				
ANR	6142463	AssignmentExpression	c = '\\n'		6142215	0		=			
ANR	6142464	Identifier	c		6142215	0					
ANR	6142465	PrimaryExpression	'\\n'		6142215	1					
ANR	6142466	BreakStatement	break ;	1835:4:38633:38638	6142215	33	True				
ANR	6142467	Label	case 'r' :	1836:3:38643:38651	6142215	34	True				
ANR	6142468	ExpressionStatement	c = '\\r'	1837:4:38657:38665	6142215	35	True				
ANR	6142469	AssignmentExpression	c = '\\r'		6142215	0		=			
ANR	6142470	Identifier	c		6142215	0					
ANR	6142471	PrimaryExpression	'\\r'		6142215	1					
ANR	6142472	BreakStatement	break ;	1838:4:38671:38676	6142215	36	True				
ANR	6142473	Label	case 't' :	1839:3:38681:38689	6142215	37	True				
ANR	6142474	ExpressionStatement	c = '\\t'	1840:4:38695:38703	6142215	38	True				
ANR	6142475	AssignmentExpression	c = '\\t'		6142215	0		=			
ANR	6142476	Identifier	c		6142215	0					
ANR	6142477	PrimaryExpression	'\\t'		6142215	1					
ANR	6142478	BreakStatement	break ;	1841:4:38709:38714	6142215	39	True				
ANR	6142479	Label	case 'v' :	1842:3:38719:38727	6142215	40	True				
ANR	6142480	ExpressionStatement	c = '\\v'	1843:4:38733:38741	6142215	41	True				
ANR	6142481	AssignmentExpression	c = '\\v'		6142215	0		=			
ANR	6142482	Identifier	c		6142215	0					
ANR	6142483	PrimaryExpression	'\\v'		6142215	1					
ANR	6142484	BreakStatement	break ;	1844:4:38747:38752	6142215	42	True				
ANR	6142485	Label	case 'e' :	1845:3:38757:38765	6142215	43	True				
ANR	6142486	IfStatement	if ( ! gnu_ext )		6142215	44					
ANR	6142487	Condition	! gnu_ext	1846:8:38775:38782	6142215	0	True				
ANR	6142488	UnaryOperationExpression	! gnu_ext		6142215	0					
ANR	6142489	UnaryOperator	!		6142215	0					
ANR	6142490	Identifier	gnu_ext		6142215	1					
ANR	6142491	CompoundStatement		76:18:1169:1169	6142215	1					
ANR	6142492	GotoStatement	goto invalid_escape ;	1847:5:38792:38811	6142215	0	True				
ANR	6142493	Identifier	invalid_escape		6142215	0					
ANR	6142494	ExpressionStatement	c = 27	1849:4:38823:38829	6142215	45	True				
ANR	6142495	AssignmentExpression	c = 27		6142215	0		=			
ANR	6142496	Identifier	c		6142215	0					
ANR	6142497	PrimaryExpression	27		6142215	1					
ANR	6142498	BreakStatement	break ;	1850:4:38835:38840	6142215	46	True				
ANR	6142499	Label	case '\\'' :	1851:3:38845:38854	6142215	47	True				
ANR	6142500	Label	"case '\\""' :"	1852:3:38859:38868	6142215	48	True				
ANR	6142501	Label	case '\\\\' :	1853:3:38873:38882	6142215	49	True				
ANR	6142502	Label	case '?' :	1854:3:38887:38895	6142215	50	True				
ANR	6142503	BreakStatement	break ;	1855:4:38901:38906	6142215	51	True				
ANR	6142504	Label	default :	1856:3:38911:38918	6142215	52	True				
ANR	6142505	Identifier	default		6142215	0					
ANR	6142506	Label	invalid_escape :	1857:0:38920:38934	6142215	53	True				
ANR	6142507	Identifier	invalid_escape		6142215	0					
ANR	6142508	IfStatement	if ( c >= '!' && c <= '~' )		6142215	54					
ANR	6142509	Condition	c >= '!' && c <= '~'	1858:8:38944:38963	6142215	0	True				
ANR	6142510	AndExpression	c >= '!' && c <= '~'		6142215	0		&&			
ANR	6142511	RelationalExpression	c >= '!'		6142215	0		>=			
ANR	6142512	Identifier	c		6142215	0					
ANR	6142513	PrimaryExpression	'!'		6142215	1					
ANR	6142514	RelationalExpression	c <= '~'		6142215	1		<=			
ANR	6142515	Identifier	c		6142215	0					
ANR	6142516	PrimaryExpression	'~'		6142215	1					
ANR	6142517	CompoundStatement		88:30:1350:1350	6142215	1					
ANR	6142518	ExpressionStatement	"tcc_warning ( ""unknown escape sequence: \\'\\\\%c\\'"" , c )"	1859:5:38973:39025	6142215	0	True				
ANR	6142519	CallExpression	"tcc_warning ( ""unknown escape sequence: \\'\\\\%c\\'"" , c )"		6142215	0					
ANR	6142520	Callee	tcc_warning		6142215	0					
ANR	6142521	Identifier	tcc_warning		6142215	0					
ANR	6142522	ArgumentList	"""unknown escape sequence: \\'\\\\%c\\'"""		6142215	1					
ANR	6142523	Argument	"""unknown escape sequence: \\'\\\\%c\\'"""		6142215	0					
ANR	6142524	PrimaryExpression	"""unknown escape sequence: \\'\\\\%c\\'"""		6142215	0					
ANR	6142525	Argument	c		6142215	1					
ANR	6142526	Identifier	c		6142215	0					
ANR	6142527	ElseStatement	else		6142215	0					
ANR	6142528	CompoundStatement		90:11:1422:1422	6142215	0					
ANR	6142529	ExpressionStatement	"tcc_warning ( ""unknown escape sequence: \\'\\\\x%x\\'"" , c )"	1861:5:39045:39098	6142215	0	True				
ANR	6142530	CallExpression	"tcc_warning ( ""unknown escape sequence: \\'\\\\x%x\\'"" , c )"		6142215	0					
ANR	6142531	Callee	tcc_warning		6142215	0					
ANR	6142532	Identifier	tcc_warning		6142215	0					
ANR	6142533	ArgumentList	"""unknown escape sequence: \\'\\\\x%x\\'"""		6142215	1					
ANR	6142534	Argument	"""unknown escape sequence: \\'\\\\x%x\\'"""		6142215	0					
ANR	6142535	PrimaryExpression	"""unknown escape sequence: \\'\\\\x%x\\'"""		6142215	0					
ANR	6142536	Argument	c		6142215	1					
ANR	6142537	Identifier	c		6142215	0					
ANR	6142538	BreakStatement	break ;	1863:4:39110:39115	6142215	55	True				
ANR	6142539	ExpressionStatement	p ++	1866:2:39128:39131	6142215	3	True				
ANR	6142540	PostIncDecOperationExpression	p ++		6142215	0					
ANR	6142541	Identifier	p		6142215	0					
ANR	6142542	IncDec	++		6142215	1					
ANR	6142543	Label	add_char_nonext :	1867:0:39133:39148	6142215	4	True				
ANR	6142544	Identifier	add_char_nonext		6142215	0					
ANR	6142545	IfStatement	if ( ! is_long )		6142215	5					
ANR	6142546	Condition	! is_long	1868:6:39156:39163	6142215	0	True				
ANR	6142547	UnaryOperationExpression	! is_long		6142215	0					
ANR	6142548	UnaryOperator	!		6142215	0					
ANR	6142549	Identifier	is_long		6142215	1					
ANR	6142550	CompoundStatement		98:16:1550:1550	6142215	1					
ANR	6142551	ExpressionStatement	"cstr_ccat ( outstr , c )"	1869:3:39171:39192	6142215	0	True				
ANR	6142552	CallExpression	"cstr_ccat ( outstr , c )"		6142215	0					
ANR	6142553	Callee	cstr_ccat		6142215	0					
ANR	6142554	Identifier	cstr_ccat		6142215	0					
ANR	6142555	ArgumentList	outstr		6142215	1					
ANR	6142556	Argument	outstr		6142215	0					
ANR	6142557	Identifier	outstr		6142215	0					
ANR	6142558	Argument	c		6142215	1					
ANR	6142559	Identifier	c		6142215	0					
ANR	6142560	ElseStatement	else		6142215	0					
ANR	6142561	CompoundStatement		100:9:1587:1587	6142215	0					
ANR	6142562	ExpressionStatement	"cstr_wccat ( outstr , c )"	1871:3:39208:39230	6142215	0	True				
ANR	6142563	CallExpression	"cstr_wccat ( outstr , c )"		6142215	0					
ANR	6142564	Callee	cstr_wccat		6142215	0					
ANR	6142565	Identifier	cstr_wccat		6142215	0					
ANR	6142566	ArgumentList	outstr		6142215	1					
ANR	6142567	Argument	outstr		6142215	0					
ANR	6142568	Identifier	outstr		6142215	0					
ANR	6142569	Argument	c		6142215	1					
ANR	6142570	Identifier	c		6142215	0					
ANR	6142571	IfStatement	if ( ! is_long )		6142215	4					
ANR	6142572	Condition	! is_long	1875:5:39271:39278	6142215	0	True				
ANR	6142573	UnaryOperationExpression	! is_long		6142215	0					
ANR	6142574	UnaryOperator	!		6142215	0					
ANR	6142575	Identifier	is_long		6142215	1					
ANR	6142576	CompoundStatement		105:15:1665:1665	6142215	1					
ANR	6142577	ExpressionStatement	"cstr_ccat ( outstr , '\\0' )"	1876:2:39285:39309	6142215	0	True				
ANR	6142578	CallExpression	"cstr_ccat ( outstr , '\\0' )"		6142215	0					
ANR	6142579	Callee	cstr_ccat		6142215	0					
ANR	6142580	Identifier	cstr_ccat		6142215	0					
ANR	6142581	ArgumentList	outstr		6142215	1					
ANR	6142582	Argument	outstr		6142215	0					
ANR	6142583	Identifier	outstr		6142215	0					
ANR	6142584	Argument	'\\0'		6142215	1					
ANR	6142585	PrimaryExpression	'\\0'		6142215	0					
ANR	6142586	ElseStatement	else		6142215	0					
ANR	6142587	CompoundStatement		107:8:1703:1703	6142215	0					
ANR	6142588	ExpressionStatement	"cstr_wccat ( outstr , '\\0' )"	1878:2:39323:39348	6142215	0	True				
ANR	6142589	CallExpression	"cstr_wccat ( outstr , '\\0' )"		6142215	0					
ANR	6142590	Callee	cstr_wccat		6142215	0					
ANR	6142591	Identifier	cstr_wccat		6142215	0					
ANR	6142592	ArgumentList	outstr		6142215	1					
ANR	6142593	Argument	outstr		6142215	0					
ANR	6142594	Identifier	outstr		6142215	0					
ANR	6142595	Argument	'\\0'		6142215	1					
ANR	6142596	PrimaryExpression	'\\0'		6142215	0					
ANR	6142597	ReturnType	static void		6142215	1					
ANR	6142598	Identifier	parse_escape_string		6142215	2					
ANR	6142599	ParameterList	"CString * outstr , const uint8_t * buf , int is_long"		6142215	3					
ANR	6142600	Parameter	CString * outstr	1770:32:37565:37579	6142215	0	True				
ANR	6142601	ParameterType	CString *		6142215	0					
ANR	6142602	Identifier	outstr		6142215	1					
ANR	6142603	Parameter	const uint8_t * buf	1770:49:37582:37599	6142215	1	True				
ANR	6142604	ParameterType	const uint8_t *		6142215	0					
ANR	6142605	Identifier	buf		6142215	1					
ANR	6142606	Parameter	int is_long	1770:69:37602:37612	6142215	2	True				
ANR	6142607	ParameterType	int		6142215	0					
ANR	6142608	Identifier	is_long		6142215	1					
ANR	6142609	CFGEntryNode	ENTRY		6142215		True				
ANR	6142610	CFGExitNode	EXIT		6142215		True				
ANR	6142611	InfiniteForNode	true		6142215		True				
ANR	6142612	InfiniteForNode	true		6142215		True				
ANR	6142613	Symbol	p		6142215						
ANR	6142614	Symbol	isnum		6142215						
ANR	6142615	Symbol	outstr		6142215						
ANR	6142616	Symbol	buf		6142215						
ANR	6142617	Symbol	c		6142215						
ANR	6142618	Symbol	gnu_ext		6142215						
ANR	6142619	Symbol	is_long		6142215						
ANR	6142620	Symbol	* p		6142215						
ANR	6142621	Symbol	isoct		6142215						
ANR	6142622	Symbol	n		6142215						
ANR	6142623	Function	bn_lshift	1886:0:39437:39639							
ANR	6142624	FunctionDef	"bn_lshift (unsigned int * bn , int shift , int or_val)"		6142623	0					
ANR	6142625	CompoundStatement		1887:0:39500:39639	6142623	0					
ANR	6142626	IdentifierDeclStatement	int i ;	1888:1:39503:39508	6142623	0	True				
ANR	6142627	IdentifierDecl	i		6142623	0					
ANR	6142628	IdentifierDeclType	int		6142623	0					
ANR	6142629	Identifier	i		6142623	1					
ANR	6142630	IdentifierDeclStatement	unsigned int v ;	1889:1:39511:39525	6142623	1	True				
ANR	6142631	IdentifierDecl	v		6142623	0					
ANR	6142632	IdentifierDeclType	unsigned int		6142623	0					
ANR	6142633	Identifier	v		6142623	1					
ANR	6142634	ForStatement	for ( i = 0 ; i < BN_SIZE ; i ++ )		6142623	2					
ANR	6142635	ForInit	i = 0 ;	1890:6:39533:39538	6142623	0	True				
ANR	6142636	AssignmentExpression	i = 0		6142623	0		=			
ANR	6142637	Identifier	i		6142623	0					
ANR	6142638	PrimaryExpression	0		6142623	1					
ANR	6142639	Condition	i < BN_SIZE	1890:13:39540:39550	6142623	1	True				
ANR	6142640	RelationalExpression	i < BN_SIZE		6142623	0		<			
ANR	6142641	Identifier	i		6142623	0					
ANR	6142642	Identifier	BN_SIZE		6142623	1					
ANR	6142643	PostIncDecOperationExpression	i ++	1890:26:39553:39555	6142623	2	True				
ANR	6142644	Identifier	i		6142623	0					
ANR	6142645	IncDec	++		6142623	1					
ANR	6142646	CompoundStatement		4:31:57:57	6142623	3					
ANR	6142647	ExpressionStatement	v = bn [ i ]	1891:2:39562:39571	6142623	0	True				
ANR	6142648	AssignmentExpression	v = bn [ i ]		6142623	0		=			
ANR	6142649	Identifier	v		6142623	0					
ANR	6142650	ArrayIndexing	bn [ i ]		6142623	1					
ANR	6142651	Identifier	bn		6142623	0					
ANR	6142652	Identifier	i		6142623	1					
ANR	6142653	ExpressionStatement	bn [ i ] = ( v << shift ) | or_val	1892:2:39575:39604	6142623	1	True				
ANR	6142654	AssignmentExpression	bn [ i ] = ( v << shift ) | or_val		6142623	0		=			
ANR	6142655	ArrayIndexing	bn [ i ]		6142623	0					
ANR	6142656	Identifier	bn		6142623	0					
ANR	6142657	Identifier	i		6142623	1					
ANR	6142658	InclusiveOrExpression	( v << shift ) | or_val		6142623	1		|			
ANR	6142659	ShiftExpression	v << shift		6142623	0		<<			
ANR	6142660	Identifier	v		6142623	0					
ANR	6142661	Identifier	shift		6142623	1					
ANR	6142662	Identifier	or_val		6142623	1					
ANR	6142663	ExpressionStatement	or_val = v >> ( 32 - shift )	1893:2:39608:39634	6142623	2	True				
ANR	6142664	AssignmentExpression	or_val = v >> ( 32 - shift )		6142623	0		=			
ANR	6142665	Identifier	or_val		6142623	0					
ANR	6142666	ShiftExpression	v >> ( 32 - shift )		6142623	1		>>			
ANR	6142667	Identifier	v		6142623	0					
ANR	6142668	AdditiveExpression	32 - shift		6142623	1		-			
ANR	6142669	PrimaryExpression	32		6142623	0					
ANR	6142670	Identifier	shift		6142623	1					
ANR	6142671	ReturnType	static void		6142623	1					
ANR	6142672	Identifier	bn_lshift		6142623	2					
ANR	6142673	ParameterList	"unsigned int * bn , int shift , int or_val"		6142623	3					
ANR	6142674	Parameter	unsigned int * bn	1886:22:39459:39474	6142623	0	True				
ANR	6142675	ParameterType	unsigned int *		6142623	0					
ANR	6142676	Identifier	bn		6142623	1					
ANR	6142677	Parameter	int shift	1886:40:39477:39485	6142623	1	True				
ANR	6142678	ParameterType	int		6142623	0					
ANR	6142679	Identifier	shift		6142623	1					
ANR	6142680	Parameter	int or_val	1886:51:39488:39497	6142623	2	True				
ANR	6142681	ParameterType	int		6142623	0					
ANR	6142682	Identifier	or_val		6142623	1					
ANR	6142683	CFGEntryNode	ENTRY		6142623		True				
ANR	6142684	CFGExitNode	EXIT		6142623		True				
ANR	6142685	Symbol	* bn		6142623						
ANR	6142686	Symbol	BN_SIZE		6142623						
ANR	6142687	Symbol	* i		6142623						
ANR	6142688	Symbol	v		6142623						
ANR	6142689	Symbol	shift		6142623						
ANR	6142690	Symbol	or_val		6142623						
ANR	6142691	Symbol	i		6142623						
ANR	6142692	Symbol	bn		6142623						
ANR	6142693	Function	bn_zero	1897:0:39642:39739							
ANR	6142694	FunctionDef	bn_zero (unsigned int * bn)		6142693	0					
ANR	6142695	CompoundStatement		1898:0:39680:39739	6142693	0					
ANR	6142696	IdentifierDeclStatement	int i ;	1899:1:39683:39688	6142693	0	True				
ANR	6142697	IdentifierDecl	i		6142693	0					
ANR	6142698	IdentifierDeclType	int		6142693	0					
ANR	6142699	Identifier	i		6142693	1					
ANR	6142700	ForStatement	for ( i = 0 ; i < BN_SIZE ; i ++ )		6142693	1					
ANR	6142701	ForInit	i = 0 ;	1900:6:39696:39701	6142693	0	True				
ANR	6142702	AssignmentExpression	i = 0		6142693	0		=			
ANR	6142703	Identifier	i		6142693	0					
ANR	6142704	PrimaryExpression	0		6142693	1					
ANR	6142705	Condition	i < BN_SIZE	1900:13:39703:39713	6142693	1	True				
ANR	6142706	RelationalExpression	i < BN_SIZE		6142693	0		<			
ANR	6142707	Identifier	i		6142693	0					
ANR	6142708	Identifier	BN_SIZE		6142693	1					
ANR	6142709	PostIncDecOperationExpression	i ++	1900:26:39716:39718	6142693	2	True				
ANR	6142710	Identifier	i		6142693	0					
ANR	6142711	IncDec	++		6142693	1					
ANR	6142712	CompoundStatement		3:31:40:40	6142693	3					
ANR	6142713	ExpressionStatement	bn [ i ] = 0	1901:2:39725:39734	6142693	0	True				
ANR	6142714	AssignmentExpression	bn [ i ] = 0		6142693	0		=			
ANR	6142715	ArrayIndexing	bn [ i ]		6142693	0					
ANR	6142716	Identifier	bn		6142693	0					
ANR	6142717	Identifier	i		6142693	1					
ANR	6142718	PrimaryExpression	0		6142693	1					
ANR	6142719	ReturnType	static void		6142693	1					
ANR	6142720	Identifier	bn_zero		6142693	2					
ANR	6142721	ParameterList	unsigned int * bn		6142693	3					
ANR	6142722	Parameter	unsigned int * bn	1897:20:39662:39677	6142693	0	True				
ANR	6142723	ParameterType	unsigned int *		6142693	0					
ANR	6142724	Identifier	bn		6142693	1					
ANR	6142725	CFGEntryNode	ENTRY		6142693		True				
ANR	6142726	CFGExitNode	EXIT		6142693		True				
ANR	6142727	Symbol	* bn		6142693						
ANR	6142728	Symbol	BN_SIZE		6142693						
ANR	6142729	Symbol	* i		6142693						
ANR	6142730	Symbol	i		6142693						
ANR	6142731	Symbol	bn		6142693						
ANR	6142732	Function	parse_number	1907:0:39829:45994							
ANR	6142733	FunctionDef	parse_number (const char * p)		6142732	0					
ANR	6142734	CompoundStatement		1908:0:39869:45994	6142732	0					
ANR	6142735	IdentifierDeclStatement	"int b , t , shift , frac_bits , s , exp_val , ch ;"	1909:1:39872:39914	6142732	0	True				
ANR	6142736	IdentifierDecl	b		6142732	0					
ANR	6142737	IdentifierDeclType	int		6142732	0					
ANR	6142738	Identifier	b		6142732	1					
ANR	6142739	IdentifierDecl	t		6142732	1					
ANR	6142740	IdentifierDeclType	int		6142732	0					
ANR	6142741	Identifier	t		6142732	1					
ANR	6142742	IdentifierDecl	shift		6142732	2					
ANR	6142743	IdentifierDeclType	int		6142732	0					
ANR	6142744	Identifier	shift		6142732	1					
ANR	6142745	IdentifierDecl	frac_bits		6142732	3					
ANR	6142746	IdentifierDeclType	int		6142732	0					
ANR	6142747	Identifier	frac_bits		6142732	1					
ANR	6142748	IdentifierDecl	s		6142732	4					
ANR	6142749	IdentifierDeclType	int		6142732	0					
ANR	6142750	Identifier	s		6142732	1					
ANR	6142751	IdentifierDecl	exp_val		6142732	5					
ANR	6142752	IdentifierDeclType	int		6142732	0					
ANR	6142753	Identifier	exp_val		6142732	1					
ANR	6142754	IdentifierDecl	ch		6142732	6					
ANR	6142755	IdentifierDeclType	int		6142732	0					
ANR	6142756	Identifier	ch		6142732	1					
ANR	6142757	IdentifierDeclStatement	char * q ;	1910:1:39917:39924	6142732	1	True				
ANR	6142758	IdentifierDecl	* q		6142732	0					
ANR	6142759	IdentifierDeclType	char *		6142732	0					
ANR	6142760	Identifier	q		6142732	1					
ANR	6142761	IdentifierDeclStatement	unsigned int bn [ BN_SIZE ] ;	1911:1:39927:39951	6142732	2	True				
ANR	6142762	IdentifierDecl	bn [ BN_SIZE ]		6142732	0					
ANR	6142763	IdentifierDeclType	unsigned int [ BN_SIZE ]		6142732	0					
ANR	6142764	Identifier	bn		6142732	1					
ANR	6142765	Identifier	BN_SIZE		6142732	2					
ANR	6142766	IdentifierDeclStatement	double d ;	1912:1:39954:39962	6142732	3	True				
ANR	6142767	IdentifierDecl	d		6142732	0					
ANR	6142768	IdentifierDeclType	double		6142732	0					
ANR	6142769	Identifier	d		6142732	1					
ANR	6142770	ExpressionStatement	q = token_buf	1915:1:39980:39993	6142732	4	True				
ANR	6142771	AssignmentExpression	q = token_buf		6142732	0		=			
ANR	6142772	Identifier	q		6142732	0					
ANR	6142773	Identifier	token_buf		6142732	1					
ANR	6142774	ExpressionStatement	ch = * p ++	1916:1:39996:40005	6142732	5	True				
ANR	6142775	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6142776	Identifier	ch		6142732	0					
ANR	6142777	UnaryOperationExpression	* p ++		6142732	1					
ANR	6142778	UnaryOperator	*		6142732	0					
ANR	6142779	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6142780	Identifier	p		6142732	0					
ANR	6142781	IncDec	++		6142732	1					
ANR	6142782	ExpressionStatement	t = ch	1917:1:40008:40014	6142732	6	True				
ANR	6142783	AssignmentExpression	t = ch		6142732	0		=			
ANR	6142784	Identifier	t		6142732	0					
ANR	6142785	Identifier	ch		6142732	1					
ANR	6142786	ExpressionStatement	ch = * p ++	1918:1:40017:40026	6142732	7	True				
ANR	6142787	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6142788	Identifier	ch		6142732	0					
ANR	6142789	UnaryOperationExpression	* p ++		6142732	1					
ANR	6142790	UnaryOperator	*		6142732	0					
ANR	6142791	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6142792	Identifier	p		6142732	0					
ANR	6142793	IncDec	++		6142732	1					
ANR	6142794	ExpressionStatement	* q ++ = t	1919:1:40029:40037	6142732	8	True				
ANR	6142795	AssignmentExpression	* q ++ = t		6142732	0		=			
ANR	6142796	UnaryOperationExpression	* q ++		6142732	0					
ANR	6142797	UnaryOperator	*		6142732	0					
ANR	6142798	PostIncDecOperationExpression	q ++		6142732	1					
ANR	6142799	Identifier	q		6142732	0					
ANR	6142800	IncDec	++		6142732	1					
ANR	6142801	Identifier	t		6142732	1					
ANR	6142802	ExpressionStatement	b = 10	1920:1:40040:40046	6142732	9	True				
ANR	6142803	AssignmentExpression	b = 10		6142732	0		=			
ANR	6142804	Identifier	b		6142732	0					
ANR	6142805	PrimaryExpression	10		6142732	1					
ANR	6142806	IfStatement	if ( t == '.' )		6142732	10					
ANR	6142807	Condition	t == '.'	1921:5:40053:40060	6142732	0	True				
ANR	6142808	EqualityExpression	t == '.'		6142732	0		==			
ANR	6142809	Identifier	t		6142732	0					
ANR	6142810	PrimaryExpression	'.'		6142732	1					
ANR	6142811	CompoundStatement		14:15:193:193	6142732	1					
ANR	6142812	GotoStatement	goto float_frac_parse ;	1922:2:40067:40088	6142732	0	True				
ANR	6142813	Identifier	float_frac_parse		6142732	0					
ANR	6142814	ElseStatement	else		6142732	0					
ANR	6142815	IfStatement	if ( t == '0' )		6142732	0					
ANR	6142816	Condition	t == '0'	1923:12:40102:40109	6142732	0	True				
ANR	6142817	EqualityExpression	t == '0'		6142732	0		==			
ANR	6142818	Identifier	t		6142732	0					
ANR	6142819	PrimaryExpression	'0'		6142732	1					
ANR	6142820	CompoundStatement		16:22:242:242	6142732	1					
ANR	6142821	IfStatement	if ( ch == 'x' || ch == 'X' )		6142732	0					
ANR	6142822	Condition	ch == 'x' || ch == 'X'	1924:6:40120:40141	6142732	0	True				
ANR	6142823	OrExpression	ch == 'x' || ch == 'X'		6142732	0		||			
ANR	6142824	EqualityExpression	ch == 'x'		6142732	0		==			
ANR	6142825	Identifier	ch		6142732	0					
ANR	6142826	PrimaryExpression	'x'		6142732	1					
ANR	6142827	EqualityExpression	ch == 'X'		6142732	1		==			
ANR	6142828	Identifier	ch		6142732	0					
ANR	6142829	PrimaryExpression	'X'		6142732	1					
ANR	6142830	CompoundStatement		17:30:274:274	6142732	1					
ANR	6142831	ExpressionStatement	q --	1925:3:40149:40152	6142732	0	True				
ANR	6142832	PostIncDecOperationExpression	q --		6142732	0					
ANR	6142833	Identifier	q		6142732	0					
ANR	6142834	IncDec	--		6142732	1					
ANR	6142835	ExpressionStatement	ch = * p ++	1926:3:40157:40166	6142732	1	True				
ANR	6142836	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6142837	Identifier	ch		6142732	0					
ANR	6142838	UnaryOperationExpression	* p ++		6142732	1					
ANR	6142839	UnaryOperator	*		6142732	0					
ANR	6142840	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6142841	Identifier	p		6142732	0					
ANR	6142842	IncDec	++		6142732	1					
ANR	6142843	ExpressionStatement	b = 16	1927:3:40171:40177	6142732	2	True				
ANR	6142844	AssignmentExpression	b = 16		6142732	0		=			
ANR	6142845	Identifier	b		6142732	0					
ANR	6142846	PrimaryExpression	16		6142732	1					
ANR	6142847	ElseStatement	else		6142732	0					
ANR	6142848	IfStatement	if ( tcc_ext && ( ch == 'b' || ch == 'B' ) )		6142732	0					
ANR	6142849	Condition	tcc_ext && ( ch == 'b' || ch == 'B' )	1928:13:40192:40226	6142732	0	True				
ANR	6142850	AndExpression	tcc_ext && ( ch == 'b' || ch == 'B' )		6142732	0		&&			
ANR	6142851	Identifier	tcc_ext		6142732	0					
ANR	6142852	OrExpression	ch == 'b' || ch == 'B'		6142732	1		||			
ANR	6142853	EqualityExpression	ch == 'b'		6142732	0		==			
ANR	6142854	Identifier	ch		6142732	0					
ANR	6142855	PrimaryExpression	'b'		6142732	1					
ANR	6142856	EqualityExpression	ch == 'B'		6142732	1		==			
ANR	6142857	Identifier	ch		6142732	0					
ANR	6142858	PrimaryExpression	'B'		6142732	1					
ANR	6142859	CompoundStatement		21:50:359:359	6142732	1					
ANR	6142860	ExpressionStatement	q --	1929:3:40234:40237	6142732	0	True				
ANR	6142861	PostIncDecOperationExpression	q --		6142732	0					
ANR	6142862	Identifier	q		6142732	0					
ANR	6142863	IncDec	--		6142732	1					
ANR	6142864	ExpressionStatement	ch = * p ++	1930:3:40242:40251	6142732	1	True				
ANR	6142865	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6142866	Identifier	ch		6142732	0					
ANR	6142867	UnaryOperationExpression	* p ++		6142732	1					
ANR	6142868	UnaryOperator	*		6142732	0					
ANR	6142869	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6142870	Identifier	p		6142732	0					
ANR	6142871	IncDec	++		6142732	1					
ANR	6142872	ExpressionStatement	b = 2	1931:3:40256:40261	6142732	2	True				
ANR	6142873	AssignmentExpression	b = 2		6142732	0		=			
ANR	6142874	Identifier	b		6142732	0					
ANR	6142875	PrimaryExpression	2		6142732	1					
ANR	6142876	WhileStatement	while ( 1 )		6142732	11					
ANR	6142877	Condition	1	1936:8:40384:40384	6142732	0	True				
ANR	6142878	PrimaryExpression	1		6142732	0					
ANR	6142879	CompoundStatement		29:11:517:517	6142732	1					
ANR	6142880	IfStatement	if ( ch >= 'a' && ch <= 'f' )		6142732	0					
ANR	6142881	Condition	ch >= 'a' && ch <= 'f'	1937:6:40395:40416	6142732	0	True				
ANR	6142882	AndExpression	ch >= 'a' && ch <= 'f'		6142732	0		&&			
ANR	6142883	RelationalExpression	ch >= 'a'		6142732	0		>=			
ANR	6142884	Identifier	ch		6142732	0					
ANR	6142885	PrimaryExpression	'a'		6142732	1					
ANR	6142886	RelationalExpression	ch <= 'f'		6142732	1		<=			
ANR	6142887	Identifier	ch		6142732	0					
ANR	6142888	PrimaryExpression	'f'		6142732	1					
ANR	6142889	CompoundStatement		30:30:549:549	6142732	1					
ANR	6142890	ExpressionStatement	t = ch - 'a' + 10	1938:3:40424:40441	6142732	0	True				
ANR	6142891	AssignmentExpression	t = ch - 'a' + 10		6142732	0		=			
ANR	6142892	Identifier	t		6142732	0					
ANR	6142893	AdditiveExpression	ch - 'a' + 10		6142732	1		-			
ANR	6142894	Identifier	ch		6142732	0					
ANR	6142895	AdditiveExpression	'a' + 10		6142732	1		+			
ANR	6142896	PrimaryExpression	'a'		6142732	0					
ANR	6142897	PrimaryExpression	10		6142732	1					
ANR	6142898	ElseStatement	else		6142732	0					
ANR	6142899	IfStatement	if ( ch >= 'A' && ch <= 'F' )		6142732	0					
ANR	6142900	Condition	ch >= 'A' && ch <= 'F'	1939:13:40456:40477	6142732	0	True				
ANR	6142901	AndExpression	ch >= 'A' && ch <= 'F'		6142732	0		&&			
ANR	6142902	RelationalExpression	ch >= 'A'		6142732	0		>=			
ANR	6142903	Identifier	ch		6142732	0					
ANR	6142904	PrimaryExpression	'A'		6142732	1					
ANR	6142905	RelationalExpression	ch <= 'F'		6142732	1		<=			
ANR	6142906	Identifier	ch		6142732	0					
ANR	6142907	PrimaryExpression	'F'		6142732	1					
ANR	6142908	CompoundStatement		32:37:610:610	6142732	1					
ANR	6142909	ExpressionStatement	t = ch - 'A' + 10	1940:3:40485:40502	6142732	0	True				
ANR	6142910	AssignmentExpression	t = ch - 'A' + 10		6142732	0		=			
ANR	6142911	Identifier	t		6142732	0					
ANR	6142912	AdditiveExpression	ch - 'A' + 10		6142732	1		-			
ANR	6142913	Identifier	ch		6142732	0					
ANR	6142914	AdditiveExpression	'A' + 10		6142732	1		+			
ANR	6142915	PrimaryExpression	'A'		6142732	0					
ANR	6142916	PrimaryExpression	10		6142732	1					
ANR	6142917	ElseStatement	else		6142732	0					
ANR	6142918	IfStatement	if ( isnum ( ch ) )		6142732	0					
ANR	6142919	Condition	isnum ( ch )	1941:13:40517:40526	6142732	0	True				
ANR	6142920	CallExpression	isnum ( ch )		6142732	0					
ANR	6142921	Callee	isnum		6142732	0					
ANR	6142922	Identifier	isnum		6142732	0					
ANR	6142923	ArgumentList	ch		6142732	1					
ANR	6142924	Argument	ch		6142732	0					
ANR	6142925	Identifier	ch		6142732	0					
ANR	6142926	CompoundStatement		34:25:659:659	6142732	1					
ANR	6142927	ExpressionStatement	t = ch - '0'	1942:3:40534:40546	6142732	0	True				
ANR	6142928	AssignmentExpression	t = ch - '0'		6142732	0		=			
ANR	6142929	Identifier	t		6142732	0					
ANR	6142930	AdditiveExpression	ch - '0'		6142732	1		-			
ANR	6142931	Identifier	ch		6142732	0					
ANR	6142932	PrimaryExpression	'0'		6142732	1					
ANR	6142933	ElseStatement	else		6142732	0					
ANR	6142934	CompoundStatement		36:9:687:687	6142732	0					
ANR	6142935	BreakStatement	break ;	1944:3:40562:40567	6142732	0	True				
ANR	6142936	IfStatement	if ( t >= b )		6142732	1					
ANR	6142937	Condition	t >= b	1946:6:40579:40584	6142732	0	True				
ANR	6142938	RelationalExpression	t >= b		6142732	0		>=			
ANR	6142939	Identifier	t		6142732	0					
ANR	6142940	Identifier	b		6142732	1					
ANR	6142941	CompoundStatement		39:14:717:717	6142732	1					
ANR	6142942	BreakStatement	break ;	1947:3:40592:40597	6142732	0	True				
ANR	6142943	IfStatement	if ( q >= token_buf + STRING_MAX_SIZE )		6142732	2					
ANR	6142944	Condition	q >= token_buf + STRING_MAX_SIZE	1949:6:40609:40640	6142732	0	True				
ANR	6142945	RelationalExpression	q >= token_buf + STRING_MAX_SIZE		6142732	0		>=			
ANR	6142946	Identifier	q		6142732	0					
ANR	6142947	AdditiveExpression	token_buf + STRING_MAX_SIZE		6142732	1		+			
ANR	6142948	Identifier	token_buf		6142732	0					
ANR	6142949	Identifier	STRING_MAX_SIZE		6142732	1					
ANR	6142950	CompoundStatement		42:40:773:773	6142732	1					
ANR	6142951	Label	num_too_long :	1950:0:40645:40657	6142732	0	True				
ANR	6142952	Identifier	num_too_long		6142732	0					
ANR	6142953	ExpressionStatement	"tcc_error ( ""number too long"" )"	1951:3:40662:40691	6142732	1	True				
ANR	6142954	CallExpression	"tcc_error ( ""number too long"" )"		6142732	0					
ANR	6142955	Callee	tcc_error		6142732	0					
ANR	6142956	Identifier	tcc_error		6142732	0					
ANR	6142957	ArgumentList	"""number too long"""		6142732	1					
ANR	6142958	Argument	"""number too long"""		6142732	0					
ANR	6142959	PrimaryExpression	"""number too long"""		6142732	0					
ANR	6142960	ExpressionStatement	* q ++ = ch	1953:2:40699:40708	6142732	3	True				
ANR	6142961	AssignmentExpression	* q ++ = ch		6142732	0		=			
ANR	6142962	UnaryOperationExpression	* q ++		6142732	0					
ANR	6142963	UnaryOperator	*		6142732	0					
ANR	6142964	PostIncDecOperationExpression	q ++		6142732	1					
ANR	6142965	Identifier	q		6142732	0					
ANR	6142966	IncDec	++		6142732	1					
ANR	6142967	Identifier	ch		6142732	1					
ANR	6142968	ExpressionStatement	ch = * p ++	1954:2:40712:40721	6142732	4	True				
ANR	6142969	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6142970	Identifier	ch		6142732	0					
ANR	6142971	UnaryOperationExpression	* p ++		6142732	1					
ANR	6142972	UnaryOperator	*		6142732	0					
ANR	6142973	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6142974	Identifier	p		6142732	0					
ANR	6142975	IncDec	++		6142732	1					
ANR	6142976	IfStatement	if ( ch == '.' || ( ( ch == 'e' || ch == 'E' ) && b == 10 ) || ( ( ch == 'p' || ch == 'P' ) && ( b == 16 || b == 2 ) ) )		6142732	12					
ANR	6142977	Condition	ch == '.' || ( ( ch == 'e' || ch == 'E' ) && b == 10 ) || ( ( ch == 'p' || ch == 'P' ) && ( b == 16 || b == 2 ) )	1956:5:40731:40843	6142732	0	True				
ANR	6142978	OrExpression	ch == '.' || ( ( ch == 'e' || ch == 'E' ) && b == 10 ) || ( ( ch == 'p' || ch == 'P' ) && ( b == 16 || b == 2 ) )		6142732	0		||			
ANR	6142979	EqualityExpression	ch == '.'		6142732	0		==			
ANR	6142980	Identifier	ch		6142732	0					
ANR	6142981	PrimaryExpression	'.'		6142732	1					
ANR	6142982	OrExpression	( ( ch == 'e' || ch == 'E' ) && b == 10 ) || ( ( ch == 'p' || ch == 'P' ) && ( b == 16 || b == 2 ) )		6142732	1		||			
ANR	6142983	AndExpression	( ch == 'e' || ch == 'E' ) && b == 10		6142732	0		&&			
ANR	6142984	OrExpression	ch == 'e' || ch == 'E'		6142732	0		||			
ANR	6142985	EqualityExpression	ch == 'e'		6142732	0		==			
ANR	6142986	Identifier	ch		6142732	0					
ANR	6142987	PrimaryExpression	'e'		6142732	1					
ANR	6142988	EqualityExpression	ch == 'E'		6142732	1		==			
ANR	6142989	Identifier	ch		6142732	0					
ANR	6142990	PrimaryExpression	'E'		6142732	1					
ANR	6142991	EqualityExpression	b == 10		6142732	1		==			
ANR	6142992	Identifier	b		6142732	0					
ANR	6142993	PrimaryExpression	10		6142732	1					
ANR	6142994	AndExpression	( ch == 'p' || ch == 'P' ) && ( b == 16 || b == 2 )		6142732	1		&&			
ANR	6142995	OrExpression	ch == 'p' || ch == 'P'		6142732	0		||			
ANR	6142996	EqualityExpression	ch == 'p'		6142732	0		==			
ANR	6142997	Identifier	ch		6142732	0					
ANR	6142998	PrimaryExpression	'p'		6142732	1					
ANR	6142999	EqualityExpression	ch == 'P'		6142732	1		==			
ANR	6143000	Identifier	ch		6142732	0					
ANR	6143001	PrimaryExpression	'P'		6142732	1					
ANR	6143002	OrExpression	b == 16 || b == 2		6142732	1		||			
ANR	6143003	EqualityExpression	b == 16		6142732	0		==			
ANR	6143004	Identifier	b		6142732	0					
ANR	6143005	PrimaryExpression	16		6142732	1					
ANR	6143006	EqualityExpression	b == 2		6142732	1		==			
ANR	6143007	Identifier	b		6142732	0					
ANR	6143008	PrimaryExpression	2		6142732	1					
ANR	6143009	CompoundStatement		51:56:976:976	6142732	1					
ANR	6143010	IfStatement	if ( b != 10 )		6142732	0					
ANR	6143011	Condition	b != 10	1959:6:40854:40860	6142732	0	True				
ANR	6143012	EqualityExpression	b != 10		6142732	0		!=			
ANR	6143013	Identifier	b		6142732	0					
ANR	6143014	PrimaryExpression	10		6142732	1					
ANR	6143015	CompoundStatement		52:15:993:993	6142732	1					
ANR	6143016	ExpressionStatement	* q = '\\0'	1965:3:41079:41088	6142732	0	True				
ANR	6143017	AssignmentExpression	* q = '\\0'		6142732	0		=			
ANR	6143018	UnaryOperationExpression	* q		6142732	0					
ANR	6143019	UnaryOperator	*		6142732	0					
ANR	6143020	Identifier	q		6142732	1					
ANR	6143021	PrimaryExpression	'\\0'		6142732	1					
ANR	6143022	IfStatement	if ( b == 16 )		6142732	1					
ANR	6143023	Condition	b == 16	1966:7:41097:41103	6142732	0	True				
ANR	6143024	EqualityExpression	b == 16		6142732	0		==			
ANR	6143025	Identifier	b		6142732	0					
ANR	6143026	PrimaryExpression	16		6142732	1					
ANR	6143027	CompoundStatement		59:16:1236:1236	6142732	1					
ANR	6143028	ExpressionStatement	shift = 4	1967:4:41112:41121	6142732	0	True				
ANR	6143029	AssignmentExpression	shift = 4		6142732	0		=			
ANR	6143030	Identifier	shift		6142732	0					
ANR	6143031	PrimaryExpression	4		6142732	1					
ANR	6143032	ElseStatement	else		6142732	0					
ANR	6143033	CompoundStatement		61:10:1263:1263	6142732	0					
ANR	6143034	ExpressionStatement	shift = 2	1969:4:41139:41148	6142732	0	True				
ANR	6143035	AssignmentExpression	shift = 2		6142732	0		=			
ANR	6143036	Identifier	shift		6142732	0					
ANR	6143037	PrimaryExpression	2		6142732	1					
ANR	6143038	ExpressionStatement	bn_zero ( bn )	1971:3:41158:41170	6142732	2	True				
ANR	6143039	CallExpression	bn_zero ( bn )		6142732	0					
ANR	6143040	Callee	bn_zero		6142732	0					
ANR	6143041	Identifier	bn_zero		6142732	0					
ANR	6143042	ArgumentList	bn		6142732	1					
ANR	6143043	Argument	bn		6142732	0					
ANR	6143044	Identifier	bn		6142732	0					
ANR	6143045	ExpressionStatement	q = token_buf	1972:3:41175:41188	6142732	3	True				
ANR	6143046	AssignmentExpression	q = token_buf		6142732	0		=			
ANR	6143047	Identifier	q		6142732	0					
ANR	6143048	Identifier	token_buf		6142732	1					
ANR	6143049	WhileStatement	while ( 1 )		6142732	4					
ANR	6143050	Condition	1	1973:10:41200:41200	6142732	0	True				
ANR	6143051	PrimaryExpression	1		6142732	0					
ANR	6143052	CompoundStatement		66:13:1333:1333	6142732	1					
ANR	6143053	ExpressionStatement	t = * q ++	1974:4:41209:41217	6142732	0	True				
ANR	6143054	AssignmentExpression	t = * q ++		6142732	0		=			
ANR	6143055	Identifier	t		6142732	0					
ANR	6143056	UnaryOperationExpression	* q ++		6142732	1					
ANR	6143057	UnaryOperator	*		6142732	0					
ANR	6143058	PostIncDecOperationExpression	q ++		6142732	1					
ANR	6143059	Identifier	q		6142732	0					
ANR	6143060	IncDec	++		6142732	1					
ANR	6143061	IfStatement	if ( t == '\\0' )		6142732	1					
ANR	6143062	Condition	t == '\\0'	1975:8:41227:41235	6142732	0	True				
ANR	6143063	EqualityExpression	t == '\\0'		6142732	0		==			
ANR	6143064	Identifier	t		6142732	0					
ANR	6143065	PrimaryExpression	'\\0'		6142732	1					
ANR	6143066	CompoundStatement		68:19:1368:1368	6142732	1					
ANR	6143067	BreakStatement	break ;	1976:5:41245:41250	6142732	0	True				
ANR	6143068	ElseStatement	else		6142732	0					
ANR	6143069	IfStatement	if ( t >= 'a' )		6142732	0					
ANR	6143070	Condition	t >= 'a'	1977:15:41267:41274	6142732	0	True				
ANR	6143071	RelationalExpression	t >= 'a'		6142732	0		>=			
ANR	6143072	Identifier	t		6142732	0					
ANR	6143073	PrimaryExpression	'a'		6142732	1					
ANR	6143074	CompoundStatement		70:25:1407:1407	6142732	1					
ANR	6143075	ExpressionStatement	t = t - 'a' + 10	1978:5:41284:41300	6142732	0	True				
ANR	6143076	AssignmentExpression	t = t - 'a' + 10		6142732	0		=			
ANR	6143077	Identifier	t		6142732	0					
ANR	6143078	AdditiveExpression	t - 'a' + 10		6142732	1		-			
ANR	6143079	Identifier	t		6142732	0					
ANR	6143080	AdditiveExpression	'a' + 10		6142732	1		+			
ANR	6143081	PrimaryExpression	'a'		6142732	0					
ANR	6143082	PrimaryExpression	10		6142732	1					
ANR	6143083	ElseStatement	else		6142732	0					
ANR	6143084	IfStatement	if ( t >= 'A' )		6142732	0					
ANR	6143085	Condition	t >= 'A'	1979:15:41317:41324	6142732	0	True				
ANR	6143086	RelationalExpression	t >= 'A'		6142732	0		>=			
ANR	6143087	Identifier	t		6142732	0					
ANR	6143088	PrimaryExpression	'A'		6142732	1					
ANR	6143089	CompoundStatement		72:25:1457:1457	6142732	1					
ANR	6143090	ExpressionStatement	t = t - 'A' + 10	1980:5:41334:41350	6142732	0	True				
ANR	6143091	AssignmentExpression	t = t - 'A' + 10		6142732	0		=			
ANR	6143092	Identifier	t		6142732	0					
ANR	6143093	AdditiveExpression	t - 'A' + 10		6142732	1		-			
ANR	6143094	Identifier	t		6142732	0					
ANR	6143095	AdditiveExpression	'A' + 10		6142732	1		+			
ANR	6143096	PrimaryExpression	'A'		6142732	0					
ANR	6143097	PrimaryExpression	10		6142732	1					
ANR	6143098	ElseStatement	else		6142732	0					
ANR	6143099	CompoundStatement		74:11:1493:1493	6142732	0					
ANR	6143100	ExpressionStatement	t = t - '0'	1982:5:41370:41381	6142732	0	True				
ANR	6143101	AssignmentExpression	t = t - '0'		6142732	0		=			
ANR	6143102	Identifier	t		6142732	0					
ANR	6143103	AdditiveExpression	t - '0'		6142732	1		-			
ANR	6143104	Identifier	t		6142732	0					
ANR	6143105	PrimaryExpression	'0'		6142732	1					
ANR	6143106	ExpressionStatement	"bn_lshift ( bn , shift , t )"	1984:4:41393:41417	6142732	2	True				
ANR	6143107	CallExpression	"bn_lshift ( bn , shift , t )"		6142732	0					
ANR	6143108	Callee	bn_lshift		6142732	0					
ANR	6143109	Identifier	bn_lshift		6142732	0					
ANR	6143110	ArgumentList	bn		6142732	1					
ANR	6143111	Argument	bn		6142732	0					
ANR	6143112	Identifier	bn		6142732	0					
ANR	6143113	Argument	shift		6142732	1					
ANR	6143114	Identifier	shift		6142732	0					
ANR	6143115	Argument	t		6142732	2					
ANR	6143116	Identifier	t		6142732	0					
ANR	6143117	ExpressionStatement	frac_bits = 0	1986:3:41427:41440	6142732	5	True				
ANR	6143118	AssignmentExpression	frac_bits = 0		6142732	0		=			
ANR	6143119	Identifier	frac_bits		6142732	0					
ANR	6143120	PrimaryExpression	0		6142732	1					
ANR	6143121	IfStatement	if ( ch == '.' )		6142732	6					
ANR	6143122	Condition	ch == '.'	1987:7:41449:41457	6142732	0	True				
ANR	6143123	EqualityExpression	ch == '.'		6142732	0		==			
ANR	6143124	Identifier	ch		6142732	0					
ANR	6143125	PrimaryExpression	'.'		6142732	1					
ANR	6143126	CompoundStatement		80:18:1590:1590	6142732	1					
ANR	6143127	ExpressionStatement	ch = * p ++	1988:4:41466:41475	6142732	0	True				
ANR	6143128	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6143129	Identifier	ch		6142732	0					
ANR	6143130	UnaryOperationExpression	* p ++		6142732	1					
ANR	6143131	UnaryOperator	*		6142732	0					
ANR	6143132	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6143133	Identifier	p		6142732	0					
ANR	6143134	IncDec	++		6142732	1					
ANR	6143135	WhileStatement	while ( 1 )		6142732	1					
ANR	6143136	Condition	1	1989:11:41488:41488	6142732	0	True				
ANR	6143137	PrimaryExpression	1		6142732	0					
ANR	6143138	CompoundStatement		82:14:1621:1621	6142732	1					
ANR	6143139	ExpressionStatement	t = ch	1990:5:41498:41504	6142732	0	True				
ANR	6143140	AssignmentExpression	t = ch		6142732	0		=			
ANR	6143141	Identifier	t		6142732	0					
ANR	6143142	Identifier	ch		6142732	1					
ANR	6143143	IfStatement	if ( t >= 'a' && t <= 'f' )		6142732	1					
ANR	6143144	Condition	t >= 'a' && t <= 'f'	1991:9:41515:41534	6142732	0	True				
ANR	6143145	AndExpression	t >= 'a' && t <= 'f'		6142732	0		&&			
ANR	6143146	RelationalExpression	t >= 'a'		6142732	0		>=			
ANR	6143147	Identifier	t		6142732	0					
ANR	6143148	PrimaryExpression	'a'		6142732	1					
ANR	6143149	RelationalExpression	t <= 'f'		6142732	1		<=			
ANR	6143150	Identifier	t		6142732	0					
ANR	6143151	PrimaryExpression	'f'		6142732	1					
ANR	6143152	CompoundStatement		84:31:1667:1667	6142732	1					
ANR	6143153	ExpressionStatement	t = t - 'a' + 10	1992:6:41545:41561	6142732	0	True				
ANR	6143154	AssignmentExpression	t = t - 'a' + 10		6142732	0		=			
ANR	6143155	Identifier	t		6142732	0					
ANR	6143156	AdditiveExpression	t - 'a' + 10		6142732	1		-			
ANR	6143157	Identifier	t		6142732	0					
ANR	6143158	AdditiveExpression	'a' + 10		6142732	1		+			
ANR	6143159	PrimaryExpression	'a'		6142732	0					
ANR	6143160	PrimaryExpression	10		6142732	1					
ANR	6143161	ElseStatement	else		6142732	0					
ANR	6143162	IfStatement	if ( t >= 'A' && t <= 'F' )		6142732	0					
ANR	6143163	Condition	t >= 'A' && t <= 'F'	1993:16:41579:41598	6142732	0	True				
ANR	6143164	AndExpression	t >= 'A' && t <= 'F'		6142732	0		&&			
ANR	6143165	RelationalExpression	t >= 'A'		6142732	0		>=			
ANR	6143166	Identifier	t		6142732	0					
ANR	6143167	PrimaryExpression	'A'		6142732	1					
ANR	6143168	RelationalExpression	t <= 'F'		6142732	1		<=			
ANR	6143169	Identifier	t		6142732	0					
ANR	6143170	PrimaryExpression	'F'		6142732	1					
ANR	6143171	CompoundStatement		86:38:1731:1731	6142732	1					
ANR	6143172	ExpressionStatement	t = t - 'A' + 10	1994:6:41609:41625	6142732	0	True				
ANR	6143173	AssignmentExpression	t = t - 'A' + 10		6142732	0		=			
ANR	6143174	Identifier	t		6142732	0					
ANR	6143175	AdditiveExpression	t - 'A' + 10		6142732	1		-			
ANR	6143176	Identifier	t		6142732	0					
ANR	6143177	AdditiveExpression	'A' + 10		6142732	1		+			
ANR	6143178	PrimaryExpression	'A'		6142732	0					
ANR	6143179	PrimaryExpression	10		6142732	1					
ANR	6143180	ElseStatement	else		6142732	0					
ANR	6143181	IfStatement	if ( t >= '0' && t <= '9' )		6142732	0					
ANR	6143182	Condition	t >= '0' && t <= '9'	1995:16:41643:41662	6142732	0	True				
ANR	6143183	AndExpression	t >= '0' && t <= '9'		6142732	0		&&			
ANR	6143184	RelationalExpression	t >= '0'		6142732	0		>=			
ANR	6143185	Identifier	t		6142732	0					
ANR	6143186	PrimaryExpression	'0'		6142732	1					
ANR	6143187	RelationalExpression	t <= '9'		6142732	1		<=			
ANR	6143188	Identifier	t		6142732	0					
ANR	6143189	PrimaryExpression	'9'		6142732	1					
ANR	6143190	CompoundStatement		88:38:1795:1795	6142732	1					
ANR	6143191	ExpressionStatement	t = t - '0'	1996:6:41673:41684	6142732	0	True				
ANR	6143192	AssignmentExpression	t = t - '0'		6142732	0		=			
ANR	6143193	Identifier	t		6142732	0					
ANR	6143194	AdditiveExpression	t - '0'		6142732	1		-			
ANR	6143195	Identifier	t		6142732	0					
ANR	6143196	PrimaryExpression	'0'		6142732	1					
ANR	6143197	ElseStatement	else		6142732	0					
ANR	6143198	CompoundStatement		90:12:1828:1828	6142732	0					
ANR	6143199	BreakStatement	break ;	1998:6:41706:41711	6142732	0	True				
ANR	6143200	IfStatement	if ( t >= b )		6142732	2					
ANR	6143201	Condition	t >= b	2000:9:41729:41734	6142732	0	True				
ANR	6143202	RelationalExpression	t >= b		6142732	0		>=			
ANR	6143203	Identifier	t		6142732	0					
ANR	6143204	Identifier	b		6142732	1					
ANR	6143205	CompoundStatement		93:17:1867:1867	6142732	1					
ANR	6143206	ExpressionStatement	"tcc_error ( ""invalid digit"" )"	2001:6:41745:41772	6142732	0	True				
ANR	6143207	CallExpression	"tcc_error ( ""invalid digit"" )"		6142732	0					
ANR	6143208	Callee	tcc_error		6142732	0					
ANR	6143209	Identifier	tcc_error		6142732	0					
ANR	6143210	ArgumentList	"""invalid digit"""		6142732	1					
ANR	6143211	Argument	"""invalid digit"""		6142732	0					
ANR	6143212	PrimaryExpression	"""invalid digit"""		6142732	0					
ANR	6143213	ExpressionStatement	"bn_lshift ( bn , shift , t )"	2003:5:41786:41810	6142732	3	True				
ANR	6143214	CallExpression	"bn_lshift ( bn , shift , t )"		6142732	0					
ANR	6143215	Callee	bn_lshift		6142732	0					
ANR	6143216	Identifier	bn_lshift		6142732	0					
ANR	6143217	ArgumentList	bn		6142732	1					
ANR	6143218	Argument	bn		6142732	0					
ANR	6143219	Identifier	bn		6142732	0					
ANR	6143220	Argument	shift		6142732	1					
ANR	6143221	Identifier	shift		6142732	0					
ANR	6143222	Argument	t		6142732	2					
ANR	6143223	Identifier	t		6142732	0					
ANR	6143224	ExpressionStatement	frac_bits += shift	2004:5:41817:41835	6142732	4	True				
ANR	6143225	AssignmentExpression	frac_bits += shift		6142732	0		+=			
ANR	6143226	Identifier	frac_bits		6142732	0					
ANR	6143227	Identifier	shift		6142732	1					
ANR	6143228	ExpressionStatement	ch = * p ++	2005:5:41842:41851	6142732	5	True				
ANR	6143229	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6143230	Identifier	ch		6142732	0					
ANR	6143231	UnaryOperationExpression	* p ++		6142732	1					
ANR	6143232	UnaryOperator	*		6142732	0					
ANR	6143233	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6143234	Identifier	p		6142732	0					
ANR	6143235	IncDec	++		6142732	1					
ANR	6143236	IfStatement	if ( ch != 'p' && ch != 'P' )		6142732	7					
ANR	6143237	Condition	ch != 'p' && ch != 'P'	2008:7:41871:41892	6142732	0	True				
ANR	6143238	AndExpression	ch != 'p' && ch != 'P'		6142732	0		&&			
ANR	6143239	EqualityExpression	ch != 'p'		6142732	0		!=			
ANR	6143240	Identifier	ch		6142732	0					
ANR	6143241	PrimaryExpression	'p'		6142732	1					
ANR	6143242	EqualityExpression	ch != 'P'		6142732	1		!=			
ANR	6143243	Identifier	ch		6142732	0					
ANR	6143244	PrimaryExpression	'P'		6142732	1					
ANR	6143245	CompoundStatement		101:31:2025:2025	6142732	1					
ANR	6143246	ExpressionStatement	"expect ( ""exponent"" )"	2009:4:41901:41920	6142732	0	True				
ANR	6143247	CallExpression	"expect ( ""exponent"" )"		6142732	0					
ANR	6143248	Callee	expect		6142732	0					
ANR	6143249	Identifier	expect		6142732	0					
ANR	6143250	ArgumentList	"""exponent"""		6142732	1					
ANR	6143251	Argument	"""exponent"""		6142732	0					
ANR	6143252	PrimaryExpression	"""exponent"""		6142732	0					
ANR	6143253	ReturnStatement	return ;	2010:4:41926:41932	6142732	1	True				
ANR	6143254	ExpressionStatement	ch = * p ++	2012:3:41942:41951	6142732	8	True				
ANR	6143255	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6143256	Identifier	ch		6142732	0					
ANR	6143257	UnaryOperationExpression	* p ++		6142732	1					
ANR	6143258	UnaryOperator	*		6142732	0					
ANR	6143259	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6143260	Identifier	p		6142732	0					
ANR	6143261	IncDec	++		6142732	1					
ANR	6143262	ExpressionStatement	s = 1	2013:3:41956:41961	6142732	9	True				
ANR	6143263	AssignmentExpression	s = 1		6142732	0		=			
ANR	6143264	Identifier	s		6142732	0					
ANR	6143265	PrimaryExpression	1		6142732	1					
ANR	6143266	ExpressionStatement	exp_val = 0	2014:3:41966:41977	6142732	10	True				
ANR	6143267	AssignmentExpression	exp_val = 0		6142732	0		=			
ANR	6143268	Identifier	exp_val		6142732	0					
ANR	6143269	PrimaryExpression	0		6142732	1					
ANR	6143270	IfStatement	if ( ch == '+' )		6142732	11					
ANR	6143271	Condition	ch == '+'	2015:7:41986:41994	6142732	0	True				
ANR	6143272	EqualityExpression	ch == '+'		6142732	0		==			
ANR	6143273	Identifier	ch		6142732	0					
ANR	6143274	PrimaryExpression	'+'		6142732	1					
ANR	6143275	CompoundStatement		108:18:2127:2127	6142732	1					
ANR	6143276	ExpressionStatement	ch = * p ++	2016:4:42003:42012	6142732	0	True				
ANR	6143277	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6143278	Identifier	ch		6142732	0					
ANR	6143279	UnaryOperationExpression	* p ++		6142732	1					
ANR	6143280	UnaryOperator	*		6142732	0					
ANR	6143281	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6143282	Identifier	p		6142732	0					
ANR	6143283	IncDec	++		6142732	1					
ANR	6143284	ElseStatement	else		6142732	0					
ANR	6143285	IfStatement	if ( ch == '-' )		6142732	0					
ANR	6143286	Condition	ch == '-'	2017:14:42028:42036	6142732	0	True				
ANR	6143287	EqualityExpression	ch == '-'		6142732	0		==			
ANR	6143288	Identifier	ch		6142732	0					
ANR	6143289	PrimaryExpression	'-'		6142732	1					
ANR	6143290	CompoundStatement		110:25:2169:2169	6142732	1					
ANR	6143291	ExpressionStatement	s = - 1	2018:4:42045:42051	6142732	0	True				
ANR	6143292	AssignmentExpression	s = - 1		6142732	0		=			
ANR	6143293	Identifier	s		6142732	0					
ANR	6143294	UnaryOperationExpression	- 1		6142732	1					
ANR	6143295	UnaryOperator	-		6142732	0					
ANR	6143296	PrimaryExpression	1		6142732	1					
ANR	6143297	ExpressionStatement	ch = * p ++	2019:4:42057:42066	6142732	1	True				
ANR	6143298	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6143299	Identifier	ch		6142732	0					
ANR	6143300	UnaryOperationExpression	* p ++		6142732	1					
ANR	6143301	UnaryOperator	*		6142732	0					
ANR	6143302	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6143303	Identifier	p		6142732	0					
ANR	6143304	IncDec	++		6142732	1					
ANR	6143305	IfStatement	if ( ch < '0' || ch > '9' )		6142732	12					
ANR	6143306	Condition	ch < '0' || ch > '9'	2021:7:42080:42099	6142732	0	True				
ANR	6143307	OrExpression	ch < '0' || ch > '9'		6142732	0		||			
ANR	6143308	RelationalExpression	ch < '0'		6142732	0		<			
ANR	6143309	Identifier	ch		6142732	0					
ANR	6143310	PrimaryExpression	'0'		6142732	1					
ANR	6143311	RelationalExpression	ch > '9'		6142732	1		>			
ANR	6143312	Identifier	ch		6142732	0					
ANR	6143313	PrimaryExpression	'9'		6142732	1					
ANR	6143314	CompoundStatement		114:29:2232:2232	6142732	1					
ANR	6143315	ExpressionStatement	"expect ( ""exponent digits"" )"	2022:4:42108:42134	6142732	0	True				
ANR	6143316	CallExpression	"expect ( ""exponent digits"" )"		6142732	0					
ANR	6143317	Callee	expect		6142732	0					
ANR	6143318	Identifier	expect		6142732	0					
ANR	6143319	ArgumentList	"""exponent digits"""		6142732	1					
ANR	6143320	Argument	"""exponent digits"""		6142732	0					
ANR	6143321	PrimaryExpression	"""exponent digits"""		6142732	0					
ANR	6143322	ReturnStatement	return ;	2023:4:42140:42146	6142732	1	True				
ANR	6143323	WhileStatement	while ( ch >= '0' && ch <= '9' )		6142732	13					
ANR	6143324	Condition	ch >= '0' && ch <= '9'	2025:10:42163:42184	6142732	0	True				
ANR	6143325	AndExpression	ch >= '0' && ch <= '9'		6142732	0		&&			
ANR	6143326	RelationalExpression	ch >= '0'		6142732	0		>=			
ANR	6143327	Identifier	ch		6142732	0					
ANR	6143328	PrimaryExpression	'0'		6142732	1					
ANR	6143329	RelationalExpression	ch <= '9'		6142732	1		<=			
ANR	6143330	Identifier	ch		6142732	0					
ANR	6143331	PrimaryExpression	'9'		6142732	1					
ANR	6143332	CompoundStatement		118:34:2317:2317	6142732	1					
ANR	6143333	ExpressionStatement	exp_val = exp_val * 10 + ch - '0'	2026:4:42193:42226	6142732	0	True				
ANR	6143334	AssignmentExpression	exp_val = exp_val * 10 + ch - '0'		6142732	0		=			
ANR	6143335	Identifier	exp_val		6142732	0					
ANR	6143336	AdditiveExpression	exp_val * 10 + ch - '0'		6142732	1		+			
ANR	6143337	MultiplicativeExpression	exp_val * 10		6142732	0		*			
ANR	6143338	Identifier	exp_val		6142732	0					
ANR	6143339	PrimaryExpression	10		6142732	1					
ANR	6143340	AdditiveExpression	ch - '0'		6142732	1		-			
ANR	6143341	Identifier	ch		6142732	0					
ANR	6143342	PrimaryExpression	'0'		6142732	1					
ANR	6143343	ExpressionStatement	ch = * p ++	2027:4:42232:42241	6142732	1	True				
ANR	6143344	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6143345	Identifier	ch		6142732	0					
ANR	6143346	UnaryOperationExpression	* p ++		6142732	1					
ANR	6143347	UnaryOperator	*		6142732	0					
ANR	6143348	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6143349	Identifier	p		6142732	0					
ANR	6143350	IncDec	++		6142732	1					
ANR	6143351	ExpressionStatement	exp_val = exp_val * s	2029:3:42251:42272	6142732	14	True				
ANR	6143352	AssignmentExpression	exp_val = exp_val * s		6142732	0		=			
ANR	6143353	Identifier	exp_val		6142732	0					
ANR	6143354	MultiplicativeExpression	exp_val * s		6142732	1		*			
ANR	6143355	Identifier	exp_val		6142732	0					
ANR	6143356	Identifier	s		6142732	1					
ANR	6143357	ExpressionStatement	d = ( double ) bn [ 1 ] * 4294967296.0 + ( double ) bn [ 0 ]	2033:3:42367:42417	6142732	15	True				
ANR	6143358	AssignmentExpression	d = ( double ) bn [ 1 ] * 4294967296.0 + ( double ) bn [ 0 ]		6142732	0		=			
ANR	6143359	Identifier	d		6142732	0					
ANR	6143360	AdditiveExpression	( double ) bn [ 1 ] * 4294967296.0 + ( double ) bn [ 0 ]		6142732	1		+			
ANR	6143361	MultiplicativeExpression	( double ) bn [ 1 ] * 4294967296.0		6142732	0		*			
ANR	6143362	CastExpression	( double ) bn [ 1 ]		6142732	0					
ANR	6143363	CastTarget	double		6142732	0					
ANR	6143364	ArrayIndexing	bn [ 1 ]		6142732	1					
ANR	6143365	Identifier	bn		6142732	0					
ANR	6143366	PrimaryExpression	1		6142732	1					
ANR	6143367	PrimaryExpression	4294967296.0		6142732	1					
ANR	6143368	CastExpression	( double ) bn [ 0 ]		6142732	1					
ANR	6143369	CastTarget	double		6142732	0					
ANR	6143370	ArrayIndexing	bn [ 0 ]		6142732	1					
ANR	6143371	Identifier	bn		6142732	0					
ANR	6143372	PrimaryExpression	0		6142732	1					
ANR	6143373	ExpressionStatement	"d = ldexp ( d , exp_val - frac_bits )"	2034:3:42422:42456	6142732	16	True				
ANR	6143374	AssignmentExpression	"d = ldexp ( d , exp_val - frac_bits )"		6142732	0		=			
ANR	6143375	Identifier	d		6142732	0					
ANR	6143376	CallExpression	"ldexp ( d , exp_val - frac_bits )"		6142732	1					
ANR	6143377	Callee	ldexp		6142732	0					
ANR	6143378	Identifier	ldexp		6142732	0					
ANR	6143379	ArgumentList	d		6142732	1					
ANR	6143380	Argument	d		6142732	0					
ANR	6143381	Identifier	d		6142732	0					
ANR	6143382	Argument	exp_val - frac_bits		6142732	1					
ANR	6143383	AdditiveExpression	exp_val - frac_bits		6142732	0		-			
ANR	6143384	Identifier	exp_val		6142732	0					
ANR	6143385	Identifier	frac_bits		6142732	1					
ANR	6143386	ExpressionStatement	t = toup ( ch )	2035:3:42461:42474	6142732	17	True				
ANR	6143387	AssignmentExpression	t = toup ( ch )		6142732	0		=			
ANR	6143388	Identifier	t		6142732	0					
ANR	6143389	CallExpression	toup ( ch )		6142732	1					
ANR	6143390	Callee	toup		6142732	0					
ANR	6143391	Identifier	toup		6142732	0					
ANR	6143392	ArgumentList	ch		6142732	1					
ANR	6143393	Argument	ch		6142732	0					
ANR	6143394	Identifier	ch		6142732	0					
ANR	6143395	IfStatement	if ( t == 'F' )		6142732	18					
ANR	6143396	Condition	t == 'F'	2036:7:42483:42490	6142732	0	True				
ANR	6143397	EqualityExpression	t == 'F'		6142732	0		==			
ANR	6143398	Identifier	t		6142732	0					
ANR	6143399	PrimaryExpression	'F'		6142732	1					
ANR	6143400	CompoundStatement		129:17:2623:2623	6142732	1					
ANR	6143401	ExpressionStatement	ch = * p ++	2037:4:42499:42508	6142732	0	True				
ANR	6143402	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6143403	Identifier	ch		6142732	0					
ANR	6143404	UnaryOperationExpression	* p ++		6142732	1					
ANR	6143405	UnaryOperator	*		6142732	0					
ANR	6143406	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6143407	Identifier	p		6142732	0					
ANR	6143408	IncDec	++		6142732	1					
ANR	6143409	ExpressionStatement	tok = TOK_CFLOAT	2038:4:42514:42530	6142732	1	True				
ANR	6143410	AssignmentExpression	tok = TOK_CFLOAT		6142732	0		=			
ANR	6143411	Identifier	tok		6142732	0					
ANR	6143412	Identifier	TOK_CFLOAT		6142732	1					
ANR	6143413	ExpressionStatement	tokc . f = ( float ) d	2040:4:42577:42595	6142732	2	True				
ANR	6143414	AssignmentExpression	tokc . f = ( float ) d		6142732	0		=			
ANR	6143415	MemberAccess	tokc . f		6142732	0					
ANR	6143416	Identifier	tokc		6142732	0					
ANR	6143417	Identifier	f		6142732	1					
ANR	6143418	CastExpression	( float ) d		6142732	1					
ANR	6143419	CastTarget	float		6142732	0					
ANR	6143420	Identifier	d		6142732	1					
ANR	6143421	ElseStatement	else		6142732	0					
ANR	6143422	IfStatement	if ( t == 'L' )		6142732	0					
ANR	6143423	Condition	t == 'L'	2041:14:42611:42618	6142732	0	True				
ANR	6143424	EqualityExpression	t == 'L'		6142732	0		==			
ANR	6143425	Identifier	t		6142732	0					
ANR	6143426	PrimaryExpression	'L'		6142732	1					
ANR	6143427	CompoundStatement		134:24:2751:2751	6142732	1					
ANR	6143428	ExpressionStatement	ch = * p ++	2042:4:42627:42636	6142732	0	True				
ANR	6143429	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6143430	Identifier	ch		6142732	0					
ANR	6143431	UnaryOperationExpression	* p ++		6142732	1					
ANR	6143432	UnaryOperator	*		6142732	0					
ANR	6143433	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6143434	Identifier	p		6142732	0					
ANR	6143435	IncDec	++		6142732	1					
ANR	6143436	ExpressionStatement	tok = TOK_CDOUBLE	2044:4:42663:42680	6142732	1	True				
ANR	6143437	AssignmentExpression	tok = TOK_CDOUBLE		6142732	0		=			
ANR	6143438	Identifier	tok		6142732	0					
ANR	6143439	Identifier	TOK_CDOUBLE		6142732	1					
ANR	6143440	ExpressionStatement	tokc . d = d	2045:4:42686:42696	6142732	2	True				
ANR	6143441	AssignmentExpression	tokc . d = d		6142732	0		=			
ANR	6143442	MemberAccess	tokc . d		6142732	0					
ANR	6143443	Identifier	tokc		6142732	0					
ANR	6143444	Identifier	d		6142732	1					
ANR	6143445	Identifier	d		6142732	1					
ANR	6143446	ElseStatement	else		6142732	0					
ANR	6143447	CompoundStatement		144:10:2938:2938	6142732	0					
ANR	6143448	ExpressionStatement	tok = TOK_CDOUBLE	2052:4:42814:42831	6142732	0	True				
ANR	6143449	AssignmentExpression	tok = TOK_CDOUBLE		6142732	0		=			
ANR	6143450	Identifier	tok		6142732	0					
ANR	6143451	Identifier	TOK_CDOUBLE		6142732	1					
ANR	6143452	ExpressionStatement	tokc . d = d	2053:4:42837:42847	6142732	1	True				
ANR	6143453	AssignmentExpression	tokc . d = d		6142732	0		=			
ANR	6143454	MemberAccess	tokc . d		6142732	0					
ANR	6143455	Identifier	tokc		6142732	0					
ANR	6143456	Identifier	d		6142732	1					
ANR	6143457	Identifier	d		6142732	1					
ANR	6143458	ElseStatement	else		6142732	0					
ANR	6143459	CompoundStatement		148:9:2993:2993	6142732	0					
ANR	6143460	IfStatement	if ( ch == '.' )		6142732	0					
ANR	6143461	Condition	ch == '.'	2057:7:42896:42904	6142732	0	True				
ANR	6143462	EqualityExpression	ch == '.'		6142732	0		==			
ANR	6143463	Identifier	ch		6142732	0					
ANR	6143464	PrimaryExpression	'.'		6142732	1					
ANR	6143465	CompoundStatement		150:18:3037:3037	6142732	1					
ANR	6143466	IfStatement	if ( q >= token_buf + STRING_MAX_SIZE )		6142732	0					
ANR	6143467	Condition	q >= token_buf + STRING_MAX_SIZE	2058:8:42917:42948	6142732	0	True				
ANR	6143468	RelationalExpression	q >= token_buf + STRING_MAX_SIZE		6142732	0		>=			
ANR	6143469	Identifier	q		6142732	0					
ANR	6143470	AdditiveExpression	token_buf + STRING_MAX_SIZE		6142732	1		+			
ANR	6143471	Identifier	token_buf		6142732	0					
ANR	6143472	Identifier	STRING_MAX_SIZE		6142732	1					
ANR	6143473	CompoundStatement		151:42:3081:3081	6142732	1					
ANR	6143474	GotoStatement	goto num_too_long ;	2059:5:42958:42975	6142732	0	True				
ANR	6143475	Identifier	num_too_long		6142732	0					
ANR	6143476	ExpressionStatement	* q ++ = ch	2061:4:42987:42996	6142732	1	True				
ANR	6143477	AssignmentExpression	* q ++ = ch		6142732	0		=			
ANR	6143478	UnaryOperationExpression	* q ++		6142732	0					
ANR	6143479	UnaryOperator	*		6142732	0					
ANR	6143480	PostIncDecOperationExpression	q ++		6142732	1					
ANR	6143481	Identifier	q		6142732	0					
ANR	6143482	IncDec	++		6142732	1					
ANR	6143483	Identifier	ch		6142732	1					
ANR	6143484	ExpressionStatement	ch = * p ++	2062:4:43002:43011	6142732	2	True				
ANR	6143485	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6143486	Identifier	ch		6142732	0					
ANR	6143487	UnaryOperationExpression	* p ++		6142732	1					
ANR	6143488	UnaryOperator	*		6142732	0					
ANR	6143489	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6143490	Identifier	p		6142732	0					
ANR	6143491	IncDec	++		6142732	1					
ANR	6143492	Label	float_frac_parse :	2063:0:43013:43029	6142732	3	True				
ANR	6143493	Identifier	float_frac_parse		6142732	0					
ANR	6143494	WhileStatement	while ( ch >= '0' && ch <= '9' )		6142732	4					
ANR	6143495	Condition	ch >= '0' && ch <= '9'	2064:11:43042:43063	6142732	0	True				
ANR	6143496	AndExpression	ch >= '0' && ch <= '9'		6142732	0		&&			
ANR	6143497	RelationalExpression	ch >= '0'		6142732	0		>=			
ANR	6143498	Identifier	ch		6142732	0					
ANR	6143499	PrimaryExpression	'0'		6142732	1					
ANR	6143500	RelationalExpression	ch <= '9'		6142732	1		<=			
ANR	6143501	Identifier	ch		6142732	0					
ANR	6143502	PrimaryExpression	'9'		6142732	1					
ANR	6143503	CompoundStatement		157:35:3196:3196	6142732	1					
ANR	6143504	IfStatement	if ( q >= token_buf + STRING_MAX_SIZE )		6142732	0					
ANR	6143505	Condition	q >= token_buf + STRING_MAX_SIZE	2065:9:43077:43108	6142732	0	True				
ANR	6143506	RelationalExpression	q >= token_buf + STRING_MAX_SIZE		6142732	0		>=			
ANR	6143507	Identifier	q		6142732	0					
ANR	6143508	AdditiveExpression	token_buf + STRING_MAX_SIZE		6142732	1		+			
ANR	6143509	Identifier	token_buf		6142732	0					
ANR	6143510	Identifier	STRING_MAX_SIZE		6142732	1					
ANR	6143511	CompoundStatement		158:43:3241:3241	6142732	1					
ANR	6143512	GotoStatement	goto num_too_long ;	2066:6:43119:43136	6142732	0	True				
ANR	6143513	Identifier	num_too_long		6142732	0					
ANR	6143514	ExpressionStatement	* q ++ = ch	2068:5:43150:43159	6142732	1	True				
ANR	6143515	AssignmentExpression	* q ++ = ch		6142732	0		=			
ANR	6143516	UnaryOperationExpression	* q ++		6142732	0					
ANR	6143517	UnaryOperator	*		6142732	0					
ANR	6143518	PostIncDecOperationExpression	q ++		6142732	1					
ANR	6143519	Identifier	q		6142732	0					
ANR	6143520	IncDec	++		6142732	1					
ANR	6143521	Identifier	ch		6142732	1					
ANR	6143522	ExpressionStatement	ch = * p ++	2069:5:43166:43175	6142732	2	True				
ANR	6143523	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6143524	Identifier	ch		6142732	0					
ANR	6143525	UnaryOperationExpression	* p ++		6142732	1					
ANR	6143526	UnaryOperator	*		6142732	0					
ANR	6143527	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6143528	Identifier	p		6142732	0					
ANR	6143529	IncDec	++		6142732	1					
ANR	6143530	IfStatement	if ( ch == 'e' || ch == 'E' )		6142732	1					
ANR	6143531	Condition	ch == 'e' || ch == 'E'	2072:7:43195:43216	6142732	0	True				
ANR	6143532	OrExpression	ch == 'e' || ch == 'E'		6142732	0		||			
ANR	6143533	EqualityExpression	ch == 'e'		6142732	0		==			
ANR	6143534	Identifier	ch		6142732	0					
ANR	6143535	PrimaryExpression	'e'		6142732	1					
ANR	6143536	EqualityExpression	ch == 'E'		6142732	1		==			
ANR	6143537	Identifier	ch		6142732	0					
ANR	6143538	PrimaryExpression	'E'		6142732	1					
ANR	6143539	CompoundStatement		165:31:3349:3349	6142732	1					
ANR	6143540	IfStatement	if ( q >= token_buf + STRING_MAX_SIZE )		6142732	0					
ANR	6143541	Condition	q >= token_buf + STRING_MAX_SIZE	2073:8:43229:43260	6142732	0	True				
ANR	6143542	RelationalExpression	q >= token_buf + STRING_MAX_SIZE		6142732	0		>=			
ANR	6143543	Identifier	q		6142732	0					
ANR	6143544	AdditiveExpression	token_buf + STRING_MAX_SIZE		6142732	1		+			
ANR	6143545	Identifier	token_buf		6142732	0					
ANR	6143546	Identifier	STRING_MAX_SIZE		6142732	1					
ANR	6143547	CompoundStatement		166:42:3393:3393	6142732	1					
ANR	6143548	GotoStatement	goto num_too_long ;	2074:5:43270:43287	6142732	0	True				
ANR	6143549	Identifier	num_too_long		6142732	0					
ANR	6143550	ExpressionStatement	* q ++ = ch	2076:4:43299:43308	6142732	1	True				
ANR	6143551	AssignmentExpression	* q ++ = ch		6142732	0		=			
ANR	6143552	UnaryOperationExpression	* q ++		6142732	0					
ANR	6143553	UnaryOperator	*		6142732	0					
ANR	6143554	PostIncDecOperationExpression	q ++		6142732	1					
ANR	6143555	Identifier	q		6142732	0					
ANR	6143556	IncDec	++		6142732	1					
ANR	6143557	Identifier	ch		6142732	1					
ANR	6143558	ExpressionStatement	ch = * p ++	2077:4:43314:43323	6142732	2	True				
ANR	6143559	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6143560	Identifier	ch		6142732	0					
ANR	6143561	UnaryOperationExpression	* p ++		6142732	1					
ANR	6143562	UnaryOperator	*		6142732	0					
ANR	6143563	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6143564	Identifier	p		6142732	0					
ANR	6143565	IncDec	++		6142732	1					
ANR	6143566	IfStatement	if ( ch == '-' || ch == '+' )		6142732	3					
ANR	6143567	Condition	ch == '-' || ch == '+'	2078:8:43333:43354	6142732	0	True				
ANR	6143568	OrExpression	ch == '-' || ch == '+'		6142732	0		||			
ANR	6143569	EqualityExpression	ch == '-'		6142732	0		==			
ANR	6143570	Identifier	ch		6142732	0					
ANR	6143571	PrimaryExpression	'-'		6142732	1					
ANR	6143572	EqualityExpression	ch == '+'		6142732	1		==			
ANR	6143573	Identifier	ch		6142732	0					
ANR	6143574	PrimaryExpression	'+'		6142732	1					
ANR	6143575	CompoundStatement		171:32:3487:3487	6142732	1					
ANR	6143576	IfStatement	if ( q >= token_buf + STRING_MAX_SIZE )		6142732	0					
ANR	6143577	Condition	q >= token_buf + STRING_MAX_SIZE	2079:9:43368:43399	6142732	0	True				
ANR	6143578	RelationalExpression	q >= token_buf + STRING_MAX_SIZE		6142732	0		>=			
ANR	6143579	Identifier	q		6142732	0					
ANR	6143580	AdditiveExpression	token_buf + STRING_MAX_SIZE		6142732	1		+			
ANR	6143581	Identifier	token_buf		6142732	0					
ANR	6143582	Identifier	STRING_MAX_SIZE		6142732	1					
ANR	6143583	CompoundStatement		172:43:3532:3532	6142732	1					
ANR	6143584	GotoStatement	goto num_too_long ;	2080:6:43410:43427	6142732	0	True				
ANR	6143585	Identifier	num_too_long		6142732	0					
ANR	6143586	ExpressionStatement	* q ++ = ch	2082:5:43441:43450	6142732	1	True				
ANR	6143587	AssignmentExpression	* q ++ = ch		6142732	0		=			
ANR	6143588	UnaryOperationExpression	* q ++		6142732	0					
ANR	6143589	UnaryOperator	*		6142732	0					
ANR	6143590	PostIncDecOperationExpression	q ++		6142732	1					
ANR	6143591	Identifier	q		6142732	0					
ANR	6143592	IncDec	++		6142732	1					
ANR	6143593	Identifier	ch		6142732	1					
ANR	6143594	ExpressionStatement	ch = * p ++	2083:5:43457:43466	6142732	2	True				
ANR	6143595	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6143596	Identifier	ch		6142732	0					
ANR	6143597	UnaryOperationExpression	* p ++		6142732	1					
ANR	6143598	UnaryOperator	*		6142732	0					
ANR	6143599	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6143600	Identifier	p		6142732	0					
ANR	6143601	IncDec	++		6142732	1					
ANR	6143602	IfStatement	if ( ch < '0' || ch > '9' )		6142732	4					
ANR	6143603	Condition	ch < '0' || ch > '9'	2085:8:43482:43501	6142732	0	True				
ANR	6143604	OrExpression	ch < '0' || ch > '9'		6142732	0		||			
ANR	6143605	RelationalExpression	ch < '0'		6142732	0		<			
ANR	6143606	Identifier	ch		6142732	0					
ANR	6143607	PrimaryExpression	'0'		6142732	1					
ANR	6143608	RelationalExpression	ch > '9'		6142732	1		>			
ANR	6143609	Identifier	ch		6142732	0					
ANR	6143610	PrimaryExpression	'9'		6142732	1					
ANR	6143611	CompoundStatement		178:30:3634:3634	6142732	1					
ANR	6143612	ExpressionStatement	"expect ( ""exponent digits"" )"	2086:5:43511:43537	6142732	0	True				
ANR	6143613	CallExpression	"expect ( ""exponent digits"" )"		6142732	0					
ANR	6143614	Callee	expect		6142732	0					
ANR	6143615	Identifier	expect		6142732	0					
ANR	6143616	ArgumentList	"""exponent digits"""		6142732	1					
ANR	6143617	Argument	"""exponent digits"""		6142732	0					
ANR	6143618	PrimaryExpression	"""exponent digits"""		6142732	0					
ANR	6143619	ReturnStatement	return ;	2087:5:43544:43550	6142732	1	True				
ANR	6143620	WhileStatement	while ( ch >= '0' && ch <= '9' )		6142732	5					
ANR	6143621	Condition	ch >= '0' && ch <= '9'	2089:11:43569:43590	6142732	0	True				
ANR	6143622	AndExpression	ch >= '0' && ch <= '9'		6142732	0		&&			
ANR	6143623	RelationalExpression	ch >= '0'		6142732	0		>=			
ANR	6143624	Identifier	ch		6142732	0					
ANR	6143625	PrimaryExpression	'0'		6142732	1					
ANR	6143626	RelationalExpression	ch <= '9'		6142732	1		<=			
ANR	6143627	Identifier	ch		6142732	0					
ANR	6143628	PrimaryExpression	'9'		6142732	1					
ANR	6143629	CompoundStatement		182:35:3723:3723	6142732	1					
ANR	6143630	IfStatement	if ( q >= token_buf + STRING_MAX_SIZE )		6142732	0					
ANR	6143631	Condition	q >= token_buf + STRING_MAX_SIZE	2090:9:43604:43635	6142732	0	True				
ANR	6143632	RelationalExpression	q >= token_buf + STRING_MAX_SIZE		6142732	0		>=			
ANR	6143633	Identifier	q		6142732	0					
ANR	6143634	AdditiveExpression	token_buf + STRING_MAX_SIZE		6142732	1		+			
ANR	6143635	Identifier	token_buf		6142732	0					
ANR	6143636	Identifier	STRING_MAX_SIZE		6142732	1					
ANR	6143637	CompoundStatement		183:43:3768:3768	6142732	1					
ANR	6143638	GotoStatement	goto num_too_long ;	2091:6:43646:43663	6142732	0	True				
ANR	6143639	Identifier	num_too_long		6142732	0					
ANR	6143640	ExpressionStatement	* q ++ = ch	2093:5:43677:43686	6142732	1	True				
ANR	6143641	AssignmentExpression	* q ++ = ch		6142732	0		=			
ANR	6143642	UnaryOperationExpression	* q ++		6142732	0					
ANR	6143643	UnaryOperator	*		6142732	0					
ANR	6143644	PostIncDecOperationExpression	q ++		6142732	1					
ANR	6143645	Identifier	q		6142732	0					
ANR	6143646	IncDec	++		6142732	1					
ANR	6143647	Identifier	ch		6142732	1					
ANR	6143648	ExpressionStatement	ch = * p ++	2094:5:43693:43702	6142732	2	True				
ANR	6143649	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6143650	Identifier	ch		6142732	0					
ANR	6143651	UnaryOperationExpression	* p ++		6142732	1					
ANR	6143652	UnaryOperator	*		6142732	0					
ANR	6143653	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6143654	Identifier	p		6142732	0					
ANR	6143655	IncDec	++		6142732	1					
ANR	6143656	ExpressionStatement	* q = '\\0'	2097:3:43718:43727	6142732	2	True				
ANR	6143657	AssignmentExpression	* q = '\\0'		6142732	0		=			
ANR	6143658	UnaryOperationExpression	* q		6142732	0					
ANR	6143659	UnaryOperator	*		6142732	0					
ANR	6143660	Identifier	q		6142732	1					
ANR	6143661	PrimaryExpression	'\\0'		6142732	1					
ANR	6143662	ExpressionStatement	t = toup ( ch )	2098:3:43732:43745	6142732	3	True				
ANR	6143663	AssignmentExpression	t = toup ( ch )		6142732	0		=			
ANR	6143664	Identifier	t		6142732	0					
ANR	6143665	CallExpression	toup ( ch )		6142732	1					
ANR	6143666	Callee	toup		6142732	0					
ANR	6143667	Identifier	toup		6142732	0					
ANR	6143668	ArgumentList	ch		6142732	1					
ANR	6143669	Argument	ch		6142732	0					
ANR	6143670	Identifier	ch		6142732	0					
ANR	6143671	ExpressionStatement	errno = 0	2099:3:43750:43759	6142732	4	True				
ANR	6143672	AssignmentExpression	errno = 0		6142732	0		=			
ANR	6143673	Identifier	errno		6142732	0					
ANR	6143674	PrimaryExpression	0		6142732	1					
ANR	6143675	IfStatement	if ( t == 'F' )		6142732	5					
ANR	6143676	Condition	t == 'F'	2100:7:43768:43775	6142732	0	True				
ANR	6143677	EqualityExpression	t == 'F'		6142732	0		==			
ANR	6143678	Identifier	t		6142732	0					
ANR	6143679	PrimaryExpression	'F'		6142732	1					
ANR	6143680	CompoundStatement		193:17:3908:3908	6142732	1					
ANR	6143681	ExpressionStatement	ch = * p ++	2101:4:43784:43793	6142732	0	True				
ANR	6143682	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6143683	Identifier	ch		6142732	0					
ANR	6143684	UnaryOperationExpression	* p ++		6142732	1					
ANR	6143685	UnaryOperator	*		6142732	0					
ANR	6143686	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6143687	Identifier	p		6142732	0					
ANR	6143688	IncDec	++		6142732	1					
ANR	6143689	ExpressionStatement	tok = TOK_CFLOAT	2102:4:43799:43815	6142732	1	True				
ANR	6143690	AssignmentExpression	tok = TOK_CFLOAT		6142732	0		=			
ANR	6143691	Identifier	tok		6142732	0					
ANR	6143692	Identifier	TOK_CFLOAT		6142732	1					
ANR	6143693	ExpressionStatement	"tokc . f = strtof ( token_buf , NULL )"	2103:4:43821:43854	6142732	2	True				
ANR	6143694	AssignmentExpression	"tokc . f = strtof ( token_buf , NULL )"		6142732	0		=			
ANR	6143695	MemberAccess	tokc . f		6142732	0					
ANR	6143696	Identifier	tokc		6142732	0					
ANR	6143697	Identifier	f		6142732	1					
ANR	6143698	CallExpression	"strtof ( token_buf , NULL )"		6142732	1					
ANR	6143699	Callee	strtof		6142732	0					
ANR	6143700	Identifier	strtof		6142732	0					
ANR	6143701	ArgumentList	token_buf		6142732	1					
ANR	6143702	Argument	token_buf		6142732	0					
ANR	6143703	Identifier	token_buf		6142732	0					
ANR	6143704	Argument	NULL		6142732	1					
ANR	6143705	Identifier	NULL		6142732	0					
ANR	6143706	ElseStatement	else		6142732	0					
ANR	6143707	IfStatement	if ( t == 'L' )		6142732	0					
ANR	6143708	Condition	t == 'L'	2104:14:43870:43877	6142732	0	True				
ANR	6143709	EqualityExpression	t == 'L'		6142732	0		==			
ANR	6143710	Identifier	t		6142732	0					
ANR	6143711	PrimaryExpression	'L'		6142732	1					
ANR	6143712	CompoundStatement		197:24:4010:4010	6142732	1					
ANR	6143713	ExpressionStatement	ch = * p ++	2105:4:43886:43895	6142732	0	True				
ANR	6143714	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6143715	Identifier	ch		6142732	0					
ANR	6143716	UnaryOperationExpression	* p ++		6142732	1					
ANR	6143717	UnaryOperator	*		6142732	0					
ANR	6143718	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6143719	Identifier	p		6142732	0					
ANR	6143720	IncDec	++		6142732	1					
ANR	6143721	ExpressionStatement	tok = TOK_CDOUBLE	2106:4:43901:43918	6142732	1	True				
ANR	6143722	AssignmentExpression	tok = TOK_CDOUBLE		6142732	0		=			
ANR	6143723	Identifier	tok		6142732	0					
ANR	6143724	Identifier	TOK_CDOUBLE		6142732	1					
ANR	6143725	ExpressionStatement	"tokc . d = strtod ( token_buf , NULL )"	2107:4:43924:43957	6142732	2	True				
ANR	6143726	AssignmentExpression	"tokc . d = strtod ( token_buf , NULL )"		6142732	0		=			
ANR	6143727	MemberAccess	tokc . d		6142732	0					
ANR	6143728	Identifier	tokc		6142732	0					
ANR	6143729	Identifier	d		6142732	1					
ANR	6143730	CallExpression	"strtod ( token_buf , NULL )"		6142732	1					
ANR	6143731	Callee	strtod		6142732	0					
ANR	6143732	Identifier	strtod		6142732	0					
ANR	6143733	ArgumentList	token_buf		6142732	1					
ANR	6143734	Argument	token_buf		6142732	0					
ANR	6143735	Identifier	token_buf		6142732	0					
ANR	6143736	Argument	NULL		6142732	1					
ANR	6143737	Identifier	NULL		6142732	0					
ANR	6143738	ExpressionStatement	tok = TOK_CDOUBLE	2110:4:43990:44007	6142732	3	True				
ANR	6143739	AssignmentExpression	tok = TOK_CDOUBLE		6142732	0		=			
ANR	6143740	Identifier	tok		6142732	0					
ANR	6143741	Identifier	TOK_CDOUBLE		6142732	1					
ANR	6143742	ExpressionStatement	"tokc . d = strtod ( token_buf , NULL )"	2111:4:44013:44046	6142732	4	True				
ANR	6143743	AssignmentExpression	"tokc . d = strtod ( token_buf , NULL )"		6142732	0		=			
ANR	6143744	MemberAccess	tokc . d		6142732	0					
ANR	6143745	Identifier	tokc		6142732	0					
ANR	6143746	Identifier	d		6142732	1					
ANR	6143747	CallExpression	"strtod ( token_buf , NULL )"		6142732	1					
ANR	6143748	Callee	strtod		6142732	0					
ANR	6143749	Identifier	strtod		6142732	0					
ANR	6143750	ArgumentList	token_buf		6142732	1					
ANR	6143751	Argument	token_buf		6142732	0					
ANR	6143752	Identifier	token_buf		6142732	0					
ANR	6143753	Argument	NULL		6142732	1					
ANR	6143754	Identifier	NULL		6142732	0					
ANR	6143755	ElseStatement	else		6142732	0					
ANR	6143756	CompoundStatement		210:10:4273:4273	6142732	0					
ANR	6143757	ExpressionStatement	tok = TOK_CDOUBLE	2118:4:44149:44166	6142732	0	True				
ANR	6143758	AssignmentExpression	tok = TOK_CDOUBLE		6142732	0		=			
ANR	6143759	Identifier	tok		6142732	0					
ANR	6143760	Identifier	TOK_CDOUBLE		6142732	1					
ANR	6143761	ExpressionStatement	"tokc . d = strtod ( token_buf , NULL )"	2119:4:44172:44205	6142732	1	True				
ANR	6143762	AssignmentExpression	"tokc . d = strtod ( token_buf , NULL )"		6142732	0		=			
ANR	6143763	MemberAccess	tokc . d		6142732	0					
ANR	6143764	Identifier	tokc		6142732	0					
ANR	6143765	Identifier	d		6142732	1					
ANR	6143766	CallExpression	"strtod ( token_buf , NULL )"		6142732	1					
ANR	6143767	Callee	strtod		6142732	0					
ANR	6143768	Identifier	strtod		6142732	0					
ANR	6143769	ArgumentList	token_buf		6142732	1					
ANR	6143770	Argument	token_buf		6142732	0					
ANR	6143771	Identifier	token_buf		6142732	0					
ANR	6143772	Argument	NULL		6142732	1					
ANR	6143773	Identifier	NULL		6142732	0					
ANR	6143774	ElseStatement	else		6142732	0					
ANR	6143775	CompoundStatement		217:2:4386:4404	6142732	0					
ANR	6143776	IdentifierDeclStatement	"unsigned long long n , n1 ;"	2123:2:44228:44252	6142732	0	True				
ANR	6143777	IdentifierDecl	n		6142732	0					
ANR	6143778	IdentifierDeclType	unsigned long long		6142732	0					
ANR	6143779	Identifier	n		6142732	1					
ANR	6143780	IdentifierDecl	n1		6142732	1					
ANR	6143781	IdentifierDeclType	unsigned long long		6142732	0					
ANR	6143782	Identifier	n1		6142732	1					
ANR	6143783	IdentifierDeclStatement	"int lcount , ucount ;"	2124:2:44256:44274	6142732	1	True				
ANR	6143784	IdentifierDecl	lcount		6142732	0					
ANR	6143785	IdentifierDeclType	int		6142732	0					
ANR	6143786	Identifier	lcount		6142732	1					
ANR	6143787	IdentifierDecl	ucount		6142732	1					
ANR	6143788	IdentifierDeclType	int		6142732	0					
ANR	6143789	Identifier	ucount		6142732	1					
ANR	6143790	ExpressionStatement	* q = '\\0'	2127:2:44302:44311	6142732	2	True				
ANR	6143791	AssignmentExpression	* q = '\\0'		6142732	0		=			
ANR	6143792	UnaryOperationExpression	* q		6142732	0					
ANR	6143793	UnaryOperator	*		6142732	0					
ANR	6143794	Identifier	q		6142732	1					
ANR	6143795	PrimaryExpression	'\\0'		6142732	1					
ANR	6143796	ExpressionStatement	q = token_buf	2128:2:44315:44328	6142732	3	True				
ANR	6143797	AssignmentExpression	q = token_buf		6142732	0		=			
ANR	6143798	Identifier	q		6142732	0					
ANR	6143799	Identifier	token_buf		6142732	1					
ANR	6143800	IfStatement	if ( b == 10 && * q == '0' )		6142732	4					
ANR	6143801	Condition	b == 10 && * q == '0'	2129:6:44336:44355	6142732	0	True				
ANR	6143802	AndExpression	b == 10 && * q == '0'		6142732	0		&&			
ANR	6143803	EqualityExpression	b == 10		6142732	0		==			
ANR	6143804	Identifier	b		6142732	0					
ANR	6143805	PrimaryExpression	10		6142732	1					
ANR	6143806	EqualityExpression	* q == '0'		6142732	1		==			
ANR	6143807	UnaryOperationExpression	* q		6142732	0					
ANR	6143808	UnaryOperator	*		6142732	0					
ANR	6143809	Identifier	q		6142732	1					
ANR	6143810	PrimaryExpression	'0'		6142732	1					
ANR	6143811	CompoundStatement		222:28:4488:4488	6142732	1					
ANR	6143812	ExpressionStatement	b = 8	2130:3:44363:44368	6142732	0	True				
ANR	6143813	AssignmentExpression	b = 8		6142732	0		=			
ANR	6143814	Identifier	b		6142732	0					
ANR	6143815	PrimaryExpression	8		6142732	1					
ANR	6143816	ExpressionStatement	q ++	2131:3:44373:44376	6142732	1	True				
ANR	6143817	PostIncDecOperationExpression	q ++		6142732	0					
ANR	6143818	Identifier	q		6142732	0					
ANR	6143819	IncDec	++		6142732	1					
ANR	6143820	ElseStatement	else		6142732	0					
ANR	6143821	IfStatement	if ( n > 0x7fffffff )		6142732	0					
ANR	6143822	Condition	n > 0x7fffffff	2165:13:45042:45055	6142732	0	True				
ANR	6143823	RelationalExpression	n > 0x7fffffff		6142732	0		>			
ANR	6143824	Identifier	n		6142732	0					
ANR	6143825	PrimaryExpression	0x7fffffff		6142732	1					
ANR	6143826	CompoundStatement		258:29:5188:5188	6142732	1					
ANR	6143827	ExpressionStatement	tok = TOK_CUINT	2166:3:45063:45078	6142732	0	True				
ANR	6143828	AssignmentExpression	tok = TOK_CUINT		6142732	0		=			
ANR	6143829	Identifier	tok		6142732	0					
ANR	6143830	Identifier	TOK_CUINT		6142732	1					
ANR	6143831	ElseStatement	else		6142732	0					
ANR	6143832	CompoundStatement		260:9:5219:5219	6142732	0					
ANR	6143833	ExpressionStatement	tok = TOK_CINT	2168:3:45094:45108	6142732	0	True				
ANR	6143834	AssignmentExpression	tok = TOK_CINT		6142732	0		=			
ANR	6143835	Identifier	tok		6142732	0					
ANR	6143836	Identifier	TOK_CINT		6142732	1					
ANR	6143837	ExpressionStatement	n = 0	2133:2:44384:44389	6142732	5	True				
ANR	6143838	AssignmentExpression	n = 0		6142732	0		=			
ANR	6143839	Identifier	n		6142732	0					
ANR	6143840	PrimaryExpression	0		6142732	1					
ANR	6143841	WhileStatement	while ( 1 )		6142732	6					
ANR	6143842	Condition	1	2134:9:44400:44400	6142732	0	True				
ANR	6143843	PrimaryExpression	1		6142732	0					
ANR	6143844	CompoundStatement		227:12:4533:4533	6142732	1					
ANR	6143845	ExpressionStatement	t = * q ++	2135:3:44408:44416	6142732	0	True				
ANR	6143846	AssignmentExpression	t = * q ++		6142732	0		=			
ANR	6143847	Identifier	t		6142732	0					
ANR	6143848	UnaryOperationExpression	* q ++		6142732	1					
ANR	6143849	UnaryOperator	*		6142732	0					
ANR	6143850	PostIncDecOperationExpression	q ++		6142732	1					
ANR	6143851	Identifier	q		6142732	0					
ANR	6143852	IncDec	++		6142732	1					
ANR	6143853	IfStatement	if ( t == '\\0' )		6142732	1					
ANR	6143854	Condition	t == '\\0'	2137:7:44483:44491	6142732	0	True				
ANR	6143855	EqualityExpression	t == '\\0'		6142732	0		==			
ANR	6143856	Identifier	t		6142732	0					
ANR	6143857	PrimaryExpression	'\\0'		6142732	1					
ANR	6143858	CompoundStatement		230:18:4624:4624	6142732	1					
ANR	6143859	BreakStatement	break ;	2138:4:44500:44505	6142732	0	True				
ANR	6143860	ElseStatement	else		6142732	0					
ANR	6143861	IfStatement	if ( t >= 'a' )		6142732	0					
ANR	6143862	Condition	t >= 'a'	2139:14:44521:44528	6142732	0	True				
ANR	6143863	RelationalExpression	t >= 'a'		6142732	0		>=			
ANR	6143864	Identifier	t		6142732	0					
ANR	6143865	PrimaryExpression	'a'		6142732	1					
ANR	6143866	CompoundStatement		232:24:4661:4661	6142732	1					
ANR	6143867	ExpressionStatement	t = t - 'a' + 10	2140:4:44537:44553	6142732	0	True				
ANR	6143868	AssignmentExpression	t = t - 'a' + 10		6142732	0		=			
ANR	6143869	Identifier	t		6142732	0					
ANR	6143870	AdditiveExpression	t - 'a' + 10		6142732	1		-			
ANR	6143871	Identifier	t		6142732	0					
ANR	6143872	AdditiveExpression	'a' + 10		6142732	1		+			
ANR	6143873	PrimaryExpression	'a'		6142732	0					
ANR	6143874	PrimaryExpression	10		6142732	1					
ANR	6143875	ElseStatement	else		6142732	0					
ANR	6143876	IfStatement	if ( t >= 'A' )		6142732	0					
ANR	6143877	Condition	t >= 'A'	2141:14:44569:44576	6142732	0	True				
ANR	6143878	RelationalExpression	t >= 'A'		6142732	0		>=			
ANR	6143879	Identifier	t		6142732	0					
ANR	6143880	PrimaryExpression	'A'		6142732	1					
ANR	6143881	CompoundStatement		234:24:4709:4709	6142732	1					
ANR	6143882	ExpressionStatement	t = t - 'A' + 10	2142:4:44585:44601	6142732	0	True				
ANR	6143883	AssignmentExpression	t = t - 'A' + 10		6142732	0		=			
ANR	6143884	Identifier	t		6142732	0					
ANR	6143885	AdditiveExpression	t - 'A' + 10		6142732	1		-			
ANR	6143886	Identifier	t		6142732	0					
ANR	6143887	AdditiveExpression	'A' + 10		6142732	1		+			
ANR	6143888	PrimaryExpression	'A'		6142732	0					
ANR	6143889	PrimaryExpression	10		6142732	1					
ANR	6143890	ElseStatement	else		6142732	0					
ANR	6143891	CompoundStatement		236:10:4743:4743	6142732	0					
ANR	6143892	ExpressionStatement	t = t - '0'	2144:4:44619:44630	6142732	0	True				
ANR	6143893	AssignmentExpression	t = t - '0'		6142732	0		=			
ANR	6143894	Identifier	t		6142732	0					
ANR	6143895	AdditiveExpression	t - '0'		6142732	1		-			
ANR	6143896	Identifier	t		6142732	0					
ANR	6143897	PrimaryExpression	'0'		6142732	1					
ANR	6143898	IfStatement	if ( t >= b )		6142732	1					
ANR	6143899	Condition	t >= b	2145:8:44640:44645	6142732	0	True				
ANR	6143900	RelationalExpression	t >= b		6142732	0		>=			
ANR	6143901	Identifier	t		6142732	0					
ANR	6143902	Identifier	b		6142732	1					
ANR	6143903	CompoundStatement		238:16:4778:4778	6142732	1					
ANR	6143904	ExpressionStatement	"tcc_error ( ""invalid digit"" )"	2146:5:44655:44682	6142732	0	True				
ANR	6143905	CallExpression	"tcc_error ( ""invalid digit"" )"		6142732	0					
ANR	6143906	Callee	tcc_error		6142732	0					
ANR	6143907	Identifier	tcc_error		6142732	0					
ANR	6143908	ArgumentList	"""invalid digit"""		6142732	1					
ANR	6143909	Argument	"""invalid digit"""		6142732	0					
ANR	6143910	PrimaryExpression	"""invalid digit"""		6142732	0					
ANR	6143911	ExpressionStatement	n1 = n	2149:3:44698:44704	6142732	2	True				
ANR	6143912	AssignmentExpression	n1 = n		6142732	0		=			
ANR	6143913	Identifier	n1		6142732	0					
ANR	6143914	Identifier	n		6142732	1					
ANR	6143915	ExpressionStatement	n = n * b + t	2150:3:44709:44722	6142732	3	True				
ANR	6143916	AssignmentExpression	n = n * b + t		6142732	0		=			
ANR	6143917	Identifier	n		6142732	0					
ANR	6143918	AdditiveExpression	n * b + t		6142732	1		+			
ANR	6143919	MultiplicativeExpression	n * b		6142732	0		*			
ANR	6143920	Identifier	n		6142732	0					
ANR	6143921	Identifier	b		6142732	1					
ANR	6143922	Identifier	t		6142732	1					
ANR	6143923	IfStatement	if ( n < n1 )		6142732	4					
ANR	6143924	Condition	n < n1	2153:7:44796:44801	6142732	0	True				
ANR	6143925	RelationalExpression	n < n1		6142732	0		<			
ANR	6143926	Identifier	n		6142732	0					
ANR	6143927	Identifier	n1		6142732	1					
ANR	6143928	CompoundStatement		246:15:4934:4934	6142732	1					
ANR	6143929	ExpressionStatement	"tcc_error ( ""integer constant overflow"" )"	2154:4:44810:44849	6142732	0	True				
ANR	6143930	CallExpression	"tcc_error ( ""integer constant overflow"" )"		6142732	0					
ANR	6143931	Callee	tcc_error		6142732	0					
ANR	6143932	Identifier	tcc_error		6142732	0					
ANR	6143933	ArgumentList	"""integer constant overflow"""		6142732	1					
ANR	6143934	Argument	"""integer constant overflow"""		6142732	0					
ANR	6143935	PrimaryExpression	"""integer constant overflow"""		6142732	0					
ANR	6143936	Statement	if	2159:2:44903:44904	6142732	7	True				
ANR	6143937	Statement	(	2159:5:44906:44906	6142732	8	True				
ANR	6143938	Statement	(	2159:6:44907:44907	6142732	9	True				
ANR	6143939	Statement	n	2159:7:44908:44908	6142732	10	True				
ANR	6143940	Statement	&	2159:9:44910:44910	6142732	11	True				
ANR	6143941	Statement	0xffffffff00000000L	2159:11:44912:44930	6142732	12	True				
ANR	6143942	Statement	L	2159:30:44931:44931	6142732	13	True				
ANR	6143943	Statement	)	2159:31:44932:44932	6142732	14	True				
ANR	6143944	Statement	!=	2159:33:44934:44935	6142732	15	True				
ANR	6143945	Statement	0	2159:36:44937:44937	6142732	16	True				
ANR	6143946	Statement	)	2159:37:44938:44938	6142732	17	True				
ANR	6143947	CompoundStatement		252:39:5070:5070	6142732	18					
ANR	6143948	IfStatement	if ( ( n >> 63 ) != 0 )		6142732	0					
ANR	6143949	Condition	( n >> 63 ) != 0	2160:7:44949:44962	6142732	0	True				
ANR	6143950	EqualityExpression	( n >> 63 ) != 0		6142732	0		!=			
ANR	6143951	ShiftExpression	n >> 63		6142732	0		>>			
ANR	6143952	Identifier	n		6142732	0					
ANR	6143953	PrimaryExpression	63		6142732	1					
ANR	6143954	PrimaryExpression	0		6142732	1					
ANR	6143955	CompoundStatement		253:23:5095:5095	6142732	1					
ANR	6143956	ExpressionStatement	tok = TOK_CULLONG	2161:4:44971:44988	6142732	0	True				
ANR	6143957	AssignmentExpression	tok = TOK_CULLONG		6142732	0		=			
ANR	6143958	Identifier	tok		6142732	0					
ANR	6143959	Identifier	TOK_CULLONG		6142732	1					
ANR	6143960	ElseStatement	else		6142732	0					
ANR	6143961	CompoundStatement		255:10:5130:5130	6142732	0					
ANR	6143962	ExpressionStatement	tok = TOK_CLLONG	2163:4:45006:45022	6142732	0	True				
ANR	6143963	AssignmentExpression	tok = TOK_CLLONG		6142732	0		=			
ANR	6143964	Identifier	tok		6142732	0					
ANR	6143965	Identifier	TOK_CLLONG		6142732	1					
ANR	6143966	ExpressionStatement	lcount = 0	2170:2:45116:45126	6142732	19	True				
ANR	6143967	AssignmentExpression	lcount = 0		6142732	0		=			
ANR	6143968	Identifier	lcount		6142732	0					
ANR	6143969	PrimaryExpression	0		6142732	1					
ANR	6143970	ExpressionStatement	ucount = 0	2171:2:45130:45140	6142732	20	True				
ANR	6143971	AssignmentExpression	ucount = 0		6142732	0		=			
ANR	6143972	Identifier	ucount		6142732	0					
ANR	6143973	PrimaryExpression	0		6142732	1					
ANR	6143974	ForStatement	for ( ; ; )		6142732	21					
ANR	6143975	CompoundStatement		265:11:5283:5283	6142732	0					
ANR	6143976	ExpressionStatement	t = toup ( ch )	2173:3:45158:45171	6142732	0	True				
ANR	6143977	AssignmentExpression	t = toup ( ch )		6142732	0		=			
ANR	6143978	Identifier	t		6142732	0					
ANR	6143979	CallExpression	toup ( ch )		6142732	1					
ANR	6143980	Callee	toup		6142732	0					
ANR	6143981	Identifier	toup		6142732	0					
ANR	6143982	ArgumentList	ch		6142732	1					
ANR	6143983	Argument	ch		6142732	0					
ANR	6143984	Identifier	ch		6142732	0					
ANR	6143985	IfStatement	if ( t == 'L' )		6142732	1					
ANR	6143986	Condition	t == 'L'	2174:7:45180:45187	6142732	0	True				
ANR	6143987	EqualityExpression	t == 'L'		6142732	0		==			
ANR	6143988	Identifier	t		6142732	0					
ANR	6143989	PrimaryExpression	'L'		6142732	1					
ANR	6143990	CompoundStatement		267:17:5320:5320	6142732	1					
ANR	6143991	IfStatement	if ( lcount >= 2 )		6142732	0					
ANR	6143992	Condition	lcount >= 2	2175:8:45200:45210	6142732	0	True				
ANR	6143993	RelationalExpression	lcount >= 2		6142732	0		>=			
ANR	6143994	Identifier	lcount		6142732	0					
ANR	6143995	PrimaryExpression	2		6142732	1					
ANR	6143996	CompoundStatement		268:21:5343:5343	6142732	1					
ANR	6143997	ExpressionStatement	"tcc_error ( ""three 'l's in integer constant"" )"	2176:5:45220:45264	6142732	0	True				
ANR	6143998	CallExpression	"tcc_error ( ""three 'l's in integer constant"" )"		6142732	0					
ANR	6143999	Callee	tcc_error		6142732	0					
ANR	6144000	Identifier	tcc_error		6142732	0					
ANR	6144001	ArgumentList	"""three 'l's in integer constant"""		6142732	1					
ANR	6144002	Argument	"""three 'l's in integer constant"""		6142732	0					
ANR	6144003	PrimaryExpression	"""three 'l's in integer constant"""		6142732	0					
ANR	6144004	ExpressionStatement	lcount ++	2178:4:45276:45284	6142732	1	True				
ANR	6144005	PostIncDecOperationExpression	lcount ++		6142732	0					
ANR	6144006	Identifier	lcount		6142732	0					
ANR	6144007	IncDec	++		6142732	1					
ANR	6144008	IfStatement	if ( lcount == 2 )		6142732	2					
ANR	6144009	Condition	lcount == 2	2180:8:45350:45360	6142732	0	True				
ANR	6144010	EqualityExpression	lcount == 2		6142732	0		==			
ANR	6144011	Identifier	lcount		6142732	0					
ANR	6144012	PrimaryExpression	2		6142732	1					
ANR	6144013	CompoundStatement		273:21:5493:5493	6142732	1					
ANR	6144014	IfStatement	if ( tok == TOK_CINT )		6142732	0					
ANR	6144015	Condition	tok == TOK_CINT	2182:8:45380:45394	6142732	0	True				
ANR	6144016	EqualityExpression	tok == TOK_CINT		6142732	0		==			
ANR	6144017	Identifier	tok		6142732	0					
ANR	6144018	Identifier	TOK_CINT		6142732	1					
ANR	6144019	CompoundStatement		275:25:5527:5527	6142732	1					
ANR	6144020	ExpressionStatement	tok = TOK_CLLONG	2183:5:45404:45420	6142732	0	True				
ANR	6144021	AssignmentExpression	tok = TOK_CLLONG		6142732	0		=			
ANR	6144022	Identifier	tok		6142732	0					
ANR	6144023	Identifier	TOK_CLLONG		6142732	1					
ANR	6144024	ElseStatement	else		6142732	0					
ANR	6144025	IfStatement	if ( tok == TOK_CUINT )		6142732	0					
ANR	6144026	Condition	tok == TOK_CUINT	2184:15:45437:45452	6142732	0	True				
ANR	6144027	EqualityExpression	tok == TOK_CUINT		6142732	0		==			
ANR	6144028	Identifier	tok		6142732	0					
ANR	6144029	Identifier	TOK_CUINT		6142732	1					
ANR	6144030	CompoundStatement		277:33:5585:5585	6142732	1					
ANR	6144031	ExpressionStatement	tok = TOK_CULLONG	2185:5:45462:45479	6142732	0	True				
ANR	6144032	AssignmentExpression	tok = TOK_CULLONG		6142732	0		=			
ANR	6144033	Identifier	tok		6142732	0					
ANR	6144034	Identifier	TOK_CULLONG		6142732	1					
ANR	6144035	ExpressionStatement	ch = * p ++	2190:4:45559:45568	6142732	3	True				
ANR	6144036	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6144037	Identifier	ch		6142732	0					
ANR	6144038	UnaryOperationExpression	* p ++		6142732	1					
ANR	6144039	UnaryOperator	*		6142732	0					
ANR	6144040	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6144041	Identifier	p		6142732	0					
ANR	6144042	IncDec	++		6142732	1					
ANR	6144043	ElseStatement	else		6142732	0					
ANR	6144044	IfStatement	if ( t == 'U' )		6142732	0					
ANR	6144045	Condition	t == 'U'	2191:14:45584:45591	6142732	0	True				
ANR	6144046	EqualityExpression	t == 'U'		6142732	0		==			
ANR	6144047	Identifier	t		6142732	0					
ANR	6144048	PrimaryExpression	'U'		6142732	1					
ANR	6144049	CompoundStatement		284:24:5724:5724	6142732	1					
ANR	6144050	IfStatement	if ( ucount >= 1 )		6142732	0					
ANR	6144051	Condition	ucount >= 1	2192:8:45604:45614	6142732	0	True				
ANR	6144052	RelationalExpression	ucount >= 1		6142732	0		>=			
ANR	6144053	Identifier	ucount		6142732	0					
ANR	6144054	PrimaryExpression	1		6142732	1					
ANR	6144055	CompoundStatement		285:21:5747:5747	6142732	1					
ANR	6144056	ExpressionStatement	"tcc_error ( ""two 'u's in integer constant"" )"	2193:5:45624:45666	6142732	0	True				
ANR	6144057	CallExpression	"tcc_error ( ""two 'u's in integer constant"" )"		6142732	0					
ANR	6144058	Callee	tcc_error		6142732	0					
ANR	6144059	Identifier	tcc_error		6142732	0					
ANR	6144060	ArgumentList	"""two 'u's in integer constant"""		6142732	1					
ANR	6144061	Argument	"""two 'u's in integer constant"""		6142732	0					
ANR	6144062	PrimaryExpression	"""two 'u's in integer constant"""		6142732	0					
ANR	6144063	ExpressionStatement	ucount ++	2195:4:45678:45686	6142732	1	True				
ANR	6144064	PostIncDecOperationExpression	ucount ++		6142732	0					
ANR	6144065	Identifier	ucount		6142732	0					
ANR	6144066	IncDec	++		6142732	1					
ANR	6144067	IfStatement	if ( tok == TOK_CINT )		6142732	2					
ANR	6144068	Condition	tok == TOK_CINT	2196:8:45696:45710	6142732	0	True				
ANR	6144069	EqualityExpression	tok == TOK_CINT		6142732	0		==			
ANR	6144070	Identifier	tok		6142732	0					
ANR	6144071	Identifier	TOK_CINT		6142732	1					
ANR	6144072	CompoundStatement		289:25:5843:5843	6142732	1					
ANR	6144073	ExpressionStatement	tok = TOK_CUINT	2197:5:45720:45735	6142732	0	True				
ANR	6144074	AssignmentExpression	tok = TOK_CUINT		6142732	0		=			
ANR	6144075	Identifier	tok		6142732	0					
ANR	6144076	Identifier	TOK_CUINT		6142732	1					
ANR	6144077	ElseStatement	else		6142732	0					
ANR	6144078	IfStatement	if ( tok == TOK_CLLONG )		6142732	0					
ANR	6144079	Condition	tok == TOK_CLLONG	2198:15:45752:45768	6142732	0	True				
ANR	6144080	EqualityExpression	tok == TOK_CLLONG		6142732	0		==			
ANR	6144081	Identifier	tok		6142732	0					
ANR	6144082	Identifier	TOK_CLLONG		6142732	1					
ANR	6144083	CompoundStatement		291:34:5901:5901	6142732	1					
ANR	6144084	ExpressionStatement	tok = TOK_CULLONG	2199:5:45778:45795	6142732	0	True				
ANR	6144085	AssignmentExpression	tok = TOK_CULLONG		6142732	0		=			
ANR	6144086	Identifier	tok		6142732	0					
ANR	6144087	Identifier	TOK_CULLONG		6142732	1					
ANR	6144088	ExpressionStatement	ch = * p ++	2201:4:45807:45816	6142732	3	True				
ANR	6144089	AssignmentExpression	ch = * p ++		6142732	0		=			
ANR	6144090	Identifier	ch		6142732	0					
ANR	6144091	UnaryOperationExpression	* p ++		6142732	1					
ANR	6144092	UnaryOperator	*		6142732	0					
ANR	6144093	PostIncDecOperationExpression	p ++		6142732	1					
ANR	6144094	Identifier	p		6142732	0					
ANR	6144095	IncDec	++		6142732	1					
ANR	6144096	ElseStatement	else		6142732	0					
ANR	6144097	CompoundStatement		295:10:5958:5958	6142732	0					
ANR	6144098	BreakStatement	break ;	2203:4:45834:45839	6142732	0	True				
ANR	6144099	IfStatement	if ( tok == TOK_CINT || tok == TOK_CUINT )		6142732	22					
ANR	6144100	Condition	tok == TOK_CINT || tok == TOK_CUINT	2206:6:45856:45890	6142732	0	True				
ANR	6144101	OrExpression	tok == TOK_CINT || tok == TOK_CUINT		6142732	0		||			
ANR	6144102	EqualityExpression	tok == TOK_CINT		6142732	0		==			
ANR	6144103	Identifier	tok		6142732	0					
ANR	6144104	Identifier	TOK_CINT		6142732	1					
ANR	6144105	EqualityExpression	tok == TOK_CUINT		6142732	1		==			
ANR	6144106	Identifier	tok		6142732	0					
ANR	6144107	Identifier	TOK_CUINT		6142732	1					
ANR	6144108	CompoundStatement		299:43:6023:6023	6142732	1					
ANR	6144109	ExpressionStatement	tokc . ui = n	2207:3:45898:45909	6142732	0	True				
ANR	6144110	AssignmentExpression	tokc . ui = n		6142732	0		=			
ANR	6144111	MemberAccess	tokc . ui		6142732	0					
ANR	6144112	Identifier	tokc		6142732	0					
ANR	6144113	Identifier	ui		6142732	1					
ANR	6144114	Identifier	n		6142732	1					
ANR	6144115	ElseStatement	else		6142732	0					
ANR	6144116	CompoundStatement		301:9:6050:6050	6142732	0					
ANR	6144117	ExpressionStatement	tokc . ull = n	2209:3:45925:45937	6142732	0	True				
ANR	6144118	AssignmentExpression	tokc . ull = n		6142732	0		=			
ANR	6144119	MemberAccess	tokc . ull		6142732	0					
ANR	6144120	Identifier	tokc		6142732	0					
ANR	6144121	Identifier	ull		6142732	1					
ANR	6144122	Identifier	n		6142732	1					
ANR	6144123	IfStatement	if ( ch )		6142732	13					
ANR	6144124	Condition	ch	2212:5:45951:45952	6142732	0	True				
ANR	6144125	Identifier	ch		6142732	0					
ANR	6144126	CompoundStatement		305:9:6085:6085	6142732	1					
ANR	6144127	ExpressionStatement	"tcc_error ( ""invalid number\\n"" )"	2213:2:45959:45989	6142732	0	True				
ANR	6144128	CallExpression	"tcc_error ( ""invalid number\\n"" )"		6142732	0					
ANR	6144129	Callee	tcc_error		6142732	0					
ANR	6144130	Identifier	tcc_error		6142732	0					
ANR	6144131	ArgumentList	"""invalid number\\n"""		6142732	1					
ANR	6144132	Argument	"""invalid number\\n"""		6142732	0					
ANR	6144133	PrimaryExpression	"""invalid number\\n"""		6142732	0					
ANR	6144134	ReturnType	static void		6142732	1					
ANR	6144135	Identifier	parse_number		6142732	2					
ANR	6144136	ParameterList	const char * p		6142732	3					
ANR	6144137	Parameter	const char * p	1907:25:39854:39866	6142732	0	True				
ANR	6144138	ParameterType	const char *		6142732	0					
ANR	6144139	Identifier	p		6142732	1					
ANR	6144140	CFGEntryNode	ENTRY		6142732		True				
ANR	6144141	CFGExitNode	EXIT		6142732		True				
ANR	6144142	InfiniteForNode	true		6142732		True				
ANR	6144143	Symbol	n1		6142732						
ANR	6144144	Symbol	ldexp		6142732						
ANR	6144145	Symbol	shift		6142732						
ANR	6144146	Symbol	* q ++		6142732						
ANR	6144147	Symbol	bn		6142732						
ANR	6144148	Symbol	exp_val		6142732						
ANR	6144149	Symbol	* bn		6142732						
ANR	6144150	Symbol	tok		6142732						
ANR	6144151	Symbol	tokc . d		6142732						
ANR	6144152	Symbol	lcount		6142732						
ANR	6144153	Symbol	TOK_CLLONG		6142732						
ANR	6144154	Symbol	tokc . f		6142732						
ANR	6144155	Symbol	tcc_ext		6142732						
ANR	6144156	Symbol	tokc . ui		6142732						
ANR	6144157	Symbol	TOK_CUINT		6142732						
ANR	6144158	Symbol	TOK_CDOUBLE		6142732						
ANR	6144159	Symbol	token_buf		6142732						
ANR	6144160	Symbol	TOK_CINT		6142732						
ANR	6144161	Symbol	toup		6142732						
ANR	6144162	Symbol	isnum		6142732						
ANR	6144163	Symbol	b		6142732						
ANR	6144164	Symbol	errno		6142732						
ANR	6144165	Symbol	NULL		6142732						
ANR	6144166	Symbol	d		6142732						
ANR	6144167	Symbol	ch		6142732						
ANR	6144168	Symbol	tokc		6142732						
ANR	6144169	Symbol	* p ++		6142732						
ANR	6144170	Symbol	frac_bits		6142732						
ANR	6144171	Symbol	strtod		6142732						
ANR	6144172	Symbol	n		6142732						
ANR	6144173	Symbol	strtof		6142732						
ANR	6144174	Symbol	p		6142732						
ANR	6144175	Symbol	q		6142732						
ANR	6144176	Symbol	s		6142732						
ANR	6144177	Symbol	t		6142732						
ANR	6144178	Symbol	ucount		6142732						
ANR	6144179	Symbol	TOK_CULLONG		6142732						
ANR	6144180	Symbol	TOK_CFLOAT		6142732						
ANR	6144181	Symbol	* q		6142732						
ANR	6144182	Symbol	tokc . ull		6142732						
ANR	6144183	Symbol	STRING_MAX_SIZE		6142732						
ANR	6144184	Function	next_nomacro1	2230:0:46206:54649							
ANR	6144185	FunctionDef	next_nomacro1 ()		6144184	0					
ANR	6144186	CompoundStatement		2231:0:46245:54649	6144184	0					
ANR	6144187	IdentifierDeclStatement	"int t , c , is_long ;"	2232:1:46248:46265	6144184	0	True				
ANR	6144188	IdentifierDecl	t		6144184	0					
ANR	6144189	IdentifierDeclType	int		6144184	0					
ANR	6144190	Identifier	t		6144184	1					
ANR	6144191	IdentifierDecl	c		6144184	1					
ANR	6144192	IdentifierDeclType	int		6144184	0					
ANR	6144193	Identifier	c		6144184	1					
ANR	6144194	IdentifierDecl	is_long		6144184	2					
ANR	6144195	IdentifierDeclType	int		6144184	0					
ANR	6144196	Identifier	is_long		6144184	1					
ANR	6144197	IdentifierDeclStatement	TokenSym * ts ;	2233:1:46268:46280	6144184	1	True				
ANR	6144198	IdentifierDecl	* ts		6144184	0					
ANR	6144199	IdentifierDeclType	TokenSym *		6144184	0					
ANR	6144200	Identifier	ts		6144184	1					
ANR	6144201	IdentifierDeclStatement	"uint8_t * p , * p1 ;"	2234:1:46283:46298	6144184	2	True				
ANR	6144202	IdentifierDecl	* p		6144184	0					
ANR	6144203	IdentifierDeclType	uint8_t *		6144184	0					
ANR	6144204	Identifier	p		6144184	1					
ANR	6144205	IdentifierDecl	* p1		6144184	1					
ANR	6144206	IdentifierDeclType	uint8_t *		6144184	0					
ANR	6144207	Identifier	p1		6144184	1					
ANR	6144208	IdentifierDeclStatement	unsigned int h ;	2235:1:46301:46315	6144184	3	True				
ANR	6144209	IdentifierDecl	h		6144184	0					
ANR	6144210	IdentifierDeclType	unsigned int		6144184	0					
ANR	6144211	Identifier	h		6144184	1					
ANR	6144212	ExpressionStatement	p = file -> buf_ptr	2237:1:46319:46336	6144184	4	True				
ANR	6144213	AssignmentExpression	p = file -> buf_ptr		6144184	0		=			
ANR	6144214	Identifier	p		6144184	0					
ANR	6144215	PtrMemberAccess	file -> buf_ptr		6144184	1					
ANR	6144216	Identifier	file		6144184	0					
ANR	6144217	Identifier	buf_ptr		6144184	1					
ANR	6144218	Label	redo_no_start :	2238:0:46338:46351	6144184	5	True				
ANR	6144219	Identifier	redo_no_start		6144184	0					
ANR	6144220	ExpressionStatement	c = * p	2239:1:46354:46360	6144184	6	True				
ANR	6144221	AssignmentExpression	c = * p		6144184	0		=			
ANR	6144222	Identifier	c		6144184	0					
ANR	6144223	UnaryOperationExpression	* p		6144184	1					
ANR	6144224	UnaryOperator	*		6144184	0					
ANR	6144225	Identifier	p		6144184	1					
ANR	6144226	SwitchStatement	switch ( c )		6144184	7					
ANR	6144227	Condition	c	2240:9:46371:46371	6144184	0	True				
ANR	6144228	Identifier	c		6144184	0					
ANR	6144229	CompoundStatement		10:12:128:128	6144184	1					
ANR	6144230	Label	case ' ' :	2241:1:46377:46385	6144184	0	True				
ANR	6144231	Label	case '\\t' :	2242:1:46388:46397	6144184	1	True				
ANR	6144232	ExpressionStatement	tok = c	2243:2:46401:46408	6144184	2	True				
ANR	6144233	AssignmentExpression	tok = c		6144184	0		=			
ANR	6144234	Identifier	tok		6144184	0					
ANR	6144235	Identifier	c		6144184	1					
ANR	6144236	ExpressionStatement	p ++	2244:2:46412:46415	6144184	3	True				
ANR	6144237	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6144238	Identifier	p		6144184	0					
ANR	6144239	IncDec	++		6144184	1					
ANR	6144240	GotoStatement	goto keep_tok_flags ;	2245:2:46419:46438	6144184	4	True				
ANR	6144241	Identifier	keep_tok_flags		6144184	0					
ANR	6144242	Label	case '\\f' :	2246:1:46441:46450	6144184	5	True				
ANR	6144243	Label	case '\\v' :	2247:1:46453:46462	6144184	6	True				
ANR	6144244	Label	case '\\r' :	2248:1:46465:46474	6144184	7	True				
ANR	6144245	ExpressionStatement	p ++	2249:2:46478:46481	6144184	8	True				
ANR	6144246	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6144247	Identifier	p		6144184	0					
ANR	6144248	IncDec	++		6144184	1					
ANR	6144249	GotoStatement	goto redo_no_start ;	2250:2:46485:46503	6144184	9	True				
ANR	6144250	Identifier	redo_no_start		6144184	0					
ANR	6144251	Label	case '\\\\' :	2251:1:46506:46515	6144184	10	True				
ANR	6144252	IfStatement	if ( p >= file -> buf_end )		6144184	11					
ANR	6144253	Condition	p >= file -> buf_end	2253:6:46576:46593	6144184	0	True				
ANR	6144254	RelationalExpression	p >= file -> buf_end		6144184	0		>=			
ANR	6144255	Identifier	p		6144184	0					
ANR	6144256	PtrMemberAccess	file -> buf_end		6144184	1					
ANR	6144257	Identifier	file		6144184	0					
ANR	6144258	Identifier	buf_end		6144184	1					
ANR	6144259	CompoundStatement		23:26:350:350	6144184	1					
ANR	6144260	ExpressionStatement	file -> buf_ptr = p	2254:3:46601:46618	6144184	0	True				
ANR	6144261	AssignmentExpression	file -> buf_ptr = p		6144184	0		=			
ANR	6144262	PtrMemberAccess	file -> buf_ptr		6144184	0					
ANR	6144263	Identifier	file		6144184	0					
ANR	6144264	Identifier	buf_ptr		6144184	1					
ANR	6144265	Identifier	p		6144184	1					
ANR	6144266	ExpressionStatement	handle_eob ( )	2255:3:46623:46636	6144184	1	True				
ANR	6144267	CallExpression	handle_eob ( )		6144184	0					
ANR	6144268	Callee	handle_eob		6144184	0					
ANR	6144269	Identifier	handle_eob		6144184	0					
ANR	6144270	ArgumentList			6144184	1					
ANR	6144271	ExpressionStatement	p = file -> buf_ptr	2256:3:46641:46658	6144184	2	True				
ANR	6144272	AssignmentExpression	p = file -> buf_ptr		6144184	0		=			
ANR	6144273	Identifier	p		6144184	0					
ANR	6144274	PtrMemberAccess	file -> buf_ptr		6144184	1					
ANR	6144275	Identifier	file		6144184	0					
ANR	6144276	Identifier	buf_ptr		6144184	1					
ANR	6144277	IfStatement	if ( p >= file -> buf_end )		6144184	3					
ANR	6144278	Condition	p >= file -> buf_end	2257:7:46667:46684	6144184	0	True				
ANR	6144279	RelationalExpression	p >= file -> buf_end		6144184	0		>=			
ANR	6144280	Identifier	p		6144184	0					
ANR	6144281	PtrMemberAccess	file -> buf_end		6144184	1					
ANR	6144282	Identifier	file		6144184	0					
ANR	6144283	Identifier	buf_end		6144184	1					
ANR	6144284	CompoundStatement		27:27:441:441	6144184	1					
ANR	6144285	GotoStatement	goto parse_eof ;	2258:4:46693:46707	6144184	0	True				
ANR	6144286	Identifier	parse_eof		6144184	0					
ANR	6144287	ElseStatement	else		6144184	0					
ANR	6144288	CompoundStatement		29:10:473:473	6144184	0					
ANR	6144289	GotoStatement	goto redo_no_start ;	2260:4:46725:46743	6144184	0	True				
ANR	6144290	Identifier	redo_no_start		6144184	0					
ANR	6144291	ElseStatement	else		6144184	0					
ANR	6144292	CompoundStatement		32:9:513:513	6144184	0					
ANR	6144293	ExpressionStatement	file -> buf_ptr = p	2263:3:46764:46781	6144184	0	True				
ANR	6144294	AssignmentExpression	file -> buf_ptr = p		6144184	0		=			
ANR	6144295	PtrMemberAccess	file -> buf_ptr		6144184	0					
ANR	6144296	Identifier	file		6144184	0					
ANR	6144297	Identifier	buf_ptr		6144184	1					
ANR	6144298	Identifier	p		6144184	1					
ANR	6144299	ExpressionStatement	ch = * p	2264:3:46786:46793	6144184	1	True				
ANR	6144300	AssignmentExpression	ch = * p		6144184	0		=			
ANR	6144301	Identifier	ch		6144184	0					
ANR	6144302	UnaryOperationExpression	* p		6144184	1					
ANR	6144303	UnaryOperator	*		6144184	0					
ANR	6144304	Identifier	p		6144184	1					
ANR	6144305	ExpressionStatement	handle_stray ( )	2265:3:46798:46813	6144184	2	True				
ANR	6144306	CallExpression	handle_stray ( )		6144184	0					
ANR	6144307	Callee	handle_stray		6144184	0					
ANR	6144308	Identifier	handle_stray		6144184	0					
ANR	6144309	ArgumentList			6144184	1					
ANR	6144310	ExpressionStatement	p = file -> buf_ptr	2266:3:46818:46835	6144184	3	True				
ANR	6144311	AssignmentExpression	p = file -> buf_ptr		6144184	0		=			
ANR	6144312	Identifier	p		6144184	0					
ANR	6144313	PtrMemberAccess	file -> buf_ptr		6144184	1					
ANR	6144314	Identifier	file		6144184	0					
ANR	6144315	Identifier	buf_ptr		6144184	1					
ANR	6144316	GotoStatement	goto redo_no_start ;	2267:3:46840:46858	6144184	4	True				
ANR	6144317	Identifier	redo_no_start		6144184	0					
ANR	6144318	Label	parse_eof :	2269:0:46864:46873	6144184	12	True				
ANR	6144319	Identifier	parse_eof		6144184	0					
ANR	6144320	CompoundStatement		41:3:636:660	6144184	13					
ANR	6144321	IdentifierDeclStatement	TCCState * s1 = tcc_state ;	2271:3:46882:46906	6144184	0	True				
ANR	6144322	IdentifierDecl	* s1 = tcc_state		6144184	0					
ANR	6144323	IdentifierDeclType	TCCState *		6144184	0					
ANR	6144324	Identifier	s1		6144184	1					
ANR	6144325	AssignmentExpression	* s1 = tcc_state		6144184	2		=			
ANR	6144326	Identifier	tcc_state		6144184	0					
ANR	6144327	Identifier	tcc_state		6144184	1					
ANR	6144328	IfStatement	if ( ( parse_flags & PARSE_FLAG_LINEFEED ) && ! ( tok_flags & TOK_FLAG_EOF ) )		6144184	1					
ANR	6144329	Condition	( parse_flags & PARSE_FLAG_LINEFEED ) && ! ( tok_flags & TOK_FLAG_EOF )	2272:7:46915:46987	6144184	0	True				
ANR	6144330	AndExpression	( parse_flags & PARSE_FLAG_LINEFEED ) && ! ( tok_flags & TOK_FLAG_EOF )		6144184	0		&&			
ANR	6144331	BitAndExpression	parse_flags & PARSE_FLAG_LINEFEED		6144184	0		&			
ANR	6144332	Identifier	parse_flags		6144184	0					
ANR	6144333	Identifier	PARSE_FLAG_LINEFEED		6144184	1					
ANR	6144334	UnaryOperationExpression	! ( tok_flags & TOK_FLAG_EOF )		6144184	1					
ANR	6144335	UnaryOperator	!		6144184	0					
ANR	6144336	BitAndExpression	tok_flags & TOK_FLAG_EOF		6144184	1		&			
ANR	6144337	Identifier	tok_flags		6144184	0					
ANR	6144338	Identifier	TOK_FLAG_EOF		6144184	1					
ANR	6144339	CompoundStatement		43:39:744:744	6144184	1					
ANR	6144340	ExpressionStatement	tok_flags |= TOK_FLAG_EOF	2274:4:46996:47021	6144184	0	True				
ANR	6144341	AssignmentExpression	tok_flags |= TOK_FLAG_EOF		6144184	0		|=			
ANR	6144342	Identifier	tok_flags		6144184	0					
ANR	6144343	Identifier	TOK_FLAG_EOF		6144184	1					
ANR	6144344	ExpressionStatement	tok = TOK_LINEFEED	2275:4:47027:47045	6144184	1	True				
ANR	6144345	AssignmentExpression	tok = TOK_LINEFEED		6144184	0		=			
ANR	6144346	Identifier	tok		6144184	0					
ANR	6144347	Identifier	TOK_LINEFEED		6144184	1					
ANR	6144348	GotoStatement	goto keep_tok_flags ;	2276:4:47051:47070	6144184	2	True				
ANR	6144349	Identifier	keep_tok_flags		6144184	0					
ANR	6144350	ElseStatement	else		6144184	0					
ANR	6144351	IfStatement	if ( ! ( parse_flags & PARSE_FLAG_PREPROCESS ) )		6144184	0					
ANR	6144352	Condition	! ( parse_flags & PARSE_FLAG_PREPROCESS )	2277:14:47086:47123	6144184	0	True				
ANR	6144353	UnaryOperationExpression	! ( parse_flags & PARSE_FLAG_PREPROCESS )		6144184	0					
ANR	6144354	UnaryOperator	!		6144184	0					
ANR	6144355	BitAndExpression	parse_flags & PARSE_FLAG_PREPROCESS		6144184	1		&			
ANR	6144356	Identifier	parse_flags		6144184	0					
ANR	6144357	Identifier	PARSE_FLAG_PREPROCESS		6144184	1					
ANR	6144358	CompoundStatement		47:54:880:880	6144184	1					
ANR	6144359	ExpressionStatement	tok = TOK_EOF	2278:4:47132:47145	6144184	0	True				
ANR	6144360	AssignmentExpression	tok = TOK_EOF		6144184	0		=			
ANR	6144361	Identifier	tok		6144184	0					
ANR	6144362	Identifier	TOK_EOF		6144184	1					
ANR	6144363	ElseStatement	else		6144184	0					
ANR	6144364	IfStatement	if ( s1 -> ifdef_stack_ptr != file -> ifdef_stack_ptr )		6144184	0					
ANR	6144365	Condition	s1 -> ifdef_stack_ptr != file -> ifdef_stack_ptr	2279:14:47161:47204	6144184	0	True				
ANR	6144366	EqualityExpression	s1 -> ifdef_stack_ptr != file -> ifdef_stack_ptr		6144184	0		!=			
ANR	6144367	PtrMemberAccess	s1 -> ifdef_stack_ptr		6144184	0					
ANR	6144368	Identifier	s1		6144184	0					
ANR	6144369	Identifier	ifdef_stack_ptr		6144184	1					
ANR	6144370	PtrMemberAccess	file -> ifdef_stack_ptr		6144184	1					
ANR	6144371	Identifier	file		6144184	0					
ANR	6144372	Identifier	ifdef_stack_ptr		6144184	1					
ANR	6144373	CompoundStatement		49:60:961:961	6144184	1					
ANR	6144374	ExpressionStatement	"tcc_error ( ""missing #endif"" )"	2280:4:47213:47241	6144184	0	True				
ANR	6144375	CallExpression	"tcc_error ( ""missing #endif"" )"		6144184	0					
ANR	6144376	Callee	tcc_error		6144184	0					
ANR	6144377	Identifier	tcc_error		6144184	0					
ANR	6144378	ArgumentList	"""missing #endif"""		6144184	1					
ANR	6144379	Argument	"""missing #endif"""		6144184	0					
ANR	6144380	PrimaryExpression	"""missing #endif"""		6144184	0					
ANR	6144381	ElseStatement	else		6144184	0					
ANR	6144382	IfStatement	if ( s1 -> include_stack_ptr == s1 -> include_stack )		6144184	0					
ANR	6144383	Condition	s1 -> include_stack_ptr == s1 -> include_stack	2281:14:47257:47298	6144184	0	True				
ANR	6144384	EqualityExpression	s1 -> include_stack_ptr == s1 -> include_stack		6144184	0		==			
ANR	6144385	PtrMemberAccess	s1 -> include_stack_ptr		6144184	0					
ANR	6144386	Identifier	s1		6144184	0					
ANR	6144387	Identifier	include_stack_ptr		6144184	1					
ANR	6144388	PtrMemberAccess	s1 -> include_stack		6144184	1					
ANR	6144389	Identifier	s1		6144184	0					
ANR	6144390	Identifier	include_stack		6144184	1					
ANR	6144391	CompoundStatement		51:58:1055:1055	6144184	1					
ANR	6144392	ExpressionStatement	tok = TOK_EOF	2283:4:47348:47361	6144184	0	True				
ANR	6144393	AssignmentExpression	tok = TOK_EOF		6144184	0		=			
ANR	6144394	Identifier	tok		6144184	0					
ANR	6144395	Identifier	TOK_EOF		6144184	1					
ANR	6144396	ElseStatement	else		6144184	0					
ANR	6144397	CompoundStatement		54:10:1127:1127	6144184	0					
ANR	6144398	ExpressionStatement	tok_flags &= ~TOK_FLAG_EOF	2285:4:47379:47405	6144184	0	True				
ANR	6144399	AssignmentExpression	tok_flags &= ~TOK_FLAG_EOF		6144184	0		&=			
ANR	6144400	Identifier	tok_flags		6144184	0					
ANR	6144401	Identifier	~TOK_FLAG_EOF		6144184	1					
ANR	6144402	IfStatement	if ( tok_flags & TOK_FLAG_ENDIF )		6144184	1					
ANR	6144403	Condition	tok_flags & TOK_FLAG_ENDIF	2290:8:47522:47547	6144184	0	True				
ANR	6144404	BitAndExpression	tok_flags & TOK_FLAG_ENDIF		6144184	0		&			
ANR	6144405	Identifier	tok_flags		6144184	0					
ANR	6144406	Identifier	TOK_FLAG_ENDIF		6144184	1					
ANR	6144407	CompoundStatement		60:36:1304:1304	6144184	1					
ANR	6144408	ExpressionStatement	"printf ( ""#endif %s\\n"" , get_tok_str ( file -> ifndef_macro_saved , NULL ) )"	2292:5:47574:47642	6144184	0	True				
ANR	6144409	CallExpression	"printf ( ""#endif %s\\n"" , get_tok_str ( file -> ifndef_macro_saved , NULL ) )"		6144184	0					
ANR	6144410	Callee	printf		6144184	0					
ANR	6144411	Identifier	printf		6144184	0					
ANR	6144412	ArgumentList	"""#endif %s\\n"""		6144184	1					
ANR	6144413	Argument	"""#endif %s\\n"""		6144184	0					
ANR	6144414	PrimaryExpression	"""#endif %s\\n"""		6144184	0					
ANR	6144415	Argument	"get_tok_str ( file -> ifndef_macro_saved , NULL )"		6144184	1					
ANR	6144416	CallExpression	"get_tok_str ( file -> ifndef_macro_saved , NULL )"		6144184	0					
ANR	6144417	Callee	get_tok_str		6144184	0					
ANR	6144418	Identifier	get_tok_str		6144184	0					
ANR	6144419	ArgumentList	file -> ifndef_macro_saved		6144184	1					
ANR	6144420	Argument	file -> ifndef_macro_saved		6144184	0					
ANR	6144421	PtrMemberAccess	file -> ifndef_macro_saved		6144184	0					
ANR	6144422	Identifier	file		6144184	0					
ANR	6144423	Identifier	ifndef_macro_saved		6144184	1					
ANR	6144424	Argument	NULL		6144184	1					
ANR	6144425	Identifier	NULL		6144184	0					
ANR	6144426	ExpressionStatement	"add_cached_include ( s1 , file -> filename , file -> ifndef_macro_saved )"	2294:5:47656:47721	6144184	1	True				
ANR	6144427	CallExpression	"add_cached_include ( s1 , file -> filename , file -> ifndef_macro_saved )"		6144184	0					
ANR	6144428	Callee	add_cached_include		6144184	0					
ANR	6144429	Identifier	add_cached_include		6144184	0					
ANR	6144430	ArgumentList	s1		6144184	1					
ANR	6144431	Argument	s1		6144184	0					
ANR	6144432	Identifier	s1		6144184	0					
ANR	6144433	Argument	file -> filename		6144184	1					
ANR	6144434	PtrMemberAccess	file -> filename		6144184	0					
ANR	6144435	Identifier	file		6144184	0					
ANR	6144436	Identifier	filename		6144184	1					
ANR	6144437	Argument	file -> ifndef_macro_saved		6144184	2					
ANR	6144438	PtrMemberAccess	file -> ifndef_macro_saved		6144184	0					
ANR	6144439	Identifier	file		6144184	0					
ANR	6144440	Identifier	ifndef_macro_saved		6144184	1					
ANR	6144441	ExpressionStatement	tok_flags &= ~TOK_FLAG_ENDIF	2295:5:47728:47756	6144184	2	True				
ANR	6144442	AssignmentExpression	tok_flags &= ~TOK_FLAG_ENDIF		6144184	0		&=			
ANR	6144443	Identifier	tok_flags		6144184	0					
ANR	6144444	Identifier	~TOK_FLAG_ENDIF		6144184	1					
ANR	6144445	ExpressionStatement	tcc_close ( )	2299:4:47797:47809	6144184	2	True				
ANR	6144446	CallExpression	tcc_close ( )		6144184	0					
ANR	6144447	Callee	tcc_close		6144184	0					
ANR	6144448	Identifier	tcc_close		6144184	0					
ANR	6144449	ArgumentList			6144184	1					
ANR	6144450	ExpressionStatement	s1 -> include_stack_ptr --	2300:4:47815:47838	6144184	3	True				
ANR	6144451	PostIncDecOperationExpression	s1 -> include_stack_ptr --		6144184	0					
ANR	6144452	PtrMemberAccess	s1 -> include_stack_ptr		6144184	0					
ANR	6144453	Identifier	s1		6144184	0					
ANR	6144454	Identifier	include_stack_ptr		6144184	1					
ANR	6144455	IncDec	--		6144184	1					
ANR	6144456	ExpressionStatement	p = file -> buf_ptr	2301:4:47844:47861	6144184	4	True				
ANR	6144457	AssignmentExpression	p = file -> buf_ptr		6144184	0		=			
ANR	6144458	Identifier	p		6144184	0					
ANR	6144459	PtrMemberAccess	file -> buf_ptr		6144184	1					
ANR	6144460	Identifier	file		6144184	0					
ANR	6144461	Identifier	buf_ptr		6144184	1					
ANR	6144462	GotoStatement	goto redo_no_start ;	2302:4:47867:47885	6144184	5	True				
ANR	6144463	Identifier	redo_no_start		6144184	0					
ANR	6144464	BreakStatement	break ;	2305:2:47898:47903	6144184	14	True				
ANR	6144465	Label	case '\\n' :	2307:1:47907:47916	6144184	15	True				
ANR	6144466	ExpressionStatement	file -> line_num ++	2308:2:47920:47936	6144184	16	True				
ANR	6144467	PostIncDecOperationExpression	file -> line_num ++		6144184	0					
ANR	6144468	PtrMemberAccess	file -> line_num		6144184	0					
ANR	6144469	Identifier	file		6144184	0					
ANR	6144470	Identifier	line_num		6144184	1					
ANR	6144471	IncDec	++		6144184	1					
ANR	6144472	ExpressionStatement	tok_flags |= TOK_FLAG_BOL	2309:2:47940:47965	6144184	17	True				
ANR	6144473	AssignmentExpression	tok_flags |= TOK_FLAG_BOL		6144184	0		|=			
ANR	6144474	Identifier	tok_flags		6144184	0					
ANR	6144475	Identifier	TOK_FLAG_BOL		6144184	1					
ANR	6144476	ExpressionStatement	p ++	2310:2:47969:47972	6144184	18	True				
ANR	6144477	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6144478	Identifier	p		6144184	0					
ANR	6144479	IncDec	++		6144184	1					
ANR	6144480	Label	maybe_newline :	2311:0:47974:47987	6144184	19	True				
ANR	6144481	Identifier	maybe_newline		6144184	0					
ANR	6144482	IfStatement	if ( 0 == ( parse_flags & PARSE_FLAG_LINEFEED ) )		6144184	20					
ANR	6144483	Condition	0 == ( parse_flags & PARSE_FLAG_LINEFEED )	2312:6:47995:48034	6144184	0	True				
ANR	6144484	EqualityExpression	0 == ( parse_flags & PARSE_FLAG_LINEFEED )		6144184	0		==			
ANR	6144485	PrimaryExpression	0		6144184	0					
ANR	6144486	BitAndExpression	parse_flags & PARSE_FLAG_LINEFEED		6144184	1		&			
ANR	6144487	Identifier	parse_flags		6144184	0					
ANR	6144488	Identifier	PARSE_FLAG_LINEFEED		6144184	1					
ANR	6144489	CompoundStatement		82:48:1791:1791	6144184	1					
ANR	6144490	GotoStatement	goto redo_no_start ;	2313:3:48042:48060	6144184	0	True				
ANR	6144491	Identifier	redo_no_start		6144184	0					
ANR	6144492	ExpressionStatement	tok = TOK_LINEFEED	2315:2:48068:48086	6144184	21	True				
ANR	6144493	AssignmentExpression	tok = TOK_LINEFEED		6144184	0		=			
ANR	6144494	Identifier	tok		6144184	0					
ANR	6144495	Identifier	TOK_LINEFEED		6144184	1					
ANR	6144496	GotoStatement	goto keep_tok_flags ;	2316:2:48090:48109	6144184	22	True				
ANR	6144497	Identifier	keep_tok_flags		6144184	0					
ANR	6144498	Label	case '#' :	2318:1:48113:48121	6144184	23	True				
ANR	6144499	ExpressionStatement	"PEEKC ( c , p )"	2320:2:48147:48159	6144184	24	True				
ANR	6144500	CallExpression	"PEEKC ( c , p )"		6144184	0					
ANR	6144501	Callee	PEEKC		6144184	0					
ANR	6144502	Identifier	PEEKC		6144184	0					
ANR	6144503	ArgumentList	c		6144184	1					
ANR	6144504	Argument	c		6144184	0					
ANR	6144505	Identifier	c		6144184	0					
ANR	6144506	Argument	p		6144184	1					
ANR	6144507	Identifier	p		6144184	0					
ANR	6144508	IfStatement	if ( ( tok_flags & TOK_FLAG_BOL ) && ( parse_flags & PARSE_FLAG_PREPROCESS ) )		6144184	25					
ANR	6144509	Condition	( tok_flags & TOK_FLAG_BOL ) && ( parse_flags & PARSE_FLAG_PREPROCESS )	2321:6:48167:48239	6144184	0	True				
ANR	6144510	AndExpression	( tok_flags & TOK_FLAG_BOL ) && ( parse_flags & PARSE_FLAG_PREPROCESS )		6144184	0		&&			
ANR	6144511	BitAndExpression	tok_flags & TOK_FLAG_BOL		6144184	0		&			
ANR	6144512	Identifier	tok_flags		6144184	0					
ANR	6144513	Identifier	TOK_FLAG_BOL		6144184	1					
ANR	6144514	BitAndExpression	parse_flags & PARSE_FLAG_PREPROCESS		6144184	1		&			
ANR	6144515	Identifier	parse_flags		6144184	0					
ANR	6144516	Identifier	PARSE_FLAG_PREPROCESS		6144184	1					
ANR	6144517	CompoundStatement		92:45:1996:1996	6144184	1					
ANR	6144518	ExpressionStatement	file -> buf_ptr = p	2323:3:48247:48264	6144184	0	True				
ANR	6144519	AssignmentExpression	file -> buf_ptr = p		6144184	0		=			
ANR	6144520	PtrMemberAccess	file -> buf_ptr		6144184	0					
ANR	6144521	Identifier	file		6144184	0					
ANR	6144522	Identifier	buf_ptr		6144184	1					
ANR	6144523	Identifier	p		6144184	1					
ANR	6144524	ExpressionStatement	preprocess ( tok_flags & TOK_FLAG_BOF )	2324:3:48269:48306	6144184	1	True				
ANR	6144525	CallExpression	preprocess ( tok_flags & TOK_FLAG_BOF )		6144184	0					
ANR	6144526	Callee	preprocess		6144184	0					
ANR	6144527	Identifier	preprocess		6144184	0					
ANR	6144528	ArgumentList	tok_flags & TOK_FLAG_BOF		6144184	1					
ANR	6144529	Argument	tok_flags & TOK_FLAG_BOF		6144184	0					
ANR	6144530	BitAndExpression	tok_flags & TOK_FLAG_BOF		6144184	0		&			
ANR	6144531	Identifier	tok_flags		6144184	0					
ANR	6144532	Identifier	TOK_FLAG_BOF		6144184	1					
ANR	6144533	ExpressionStatement	p = file -> buf_ptr	2325:3:48311:48328	6144184	2	True				
ANR	6144534	AssignmentExpression	p = file -> buf_ptr		6144184	0		=			
ANR	6144535	Identifier	p		6144184	0					
ANR	6144536	PtrMemberAccess	file -> buf_ptr		6144184	1					
ANR	6144537	Identifier	file		6144184	0					
ANR	6144538	Identifier	buf_ptr		6144184	1					
ANR	6144539	GotoStatement	goto maybe_newline ;	2326:3:48333:48351	6144184	3	True				
ANR	6144540	Identifier	maybe_newline		6144184	0					
ANR	6144541	ElseStatement	else		6144184	0					
ANR	6144542	CompoundStatement		97:9:2116:2116	6144184	0					
ANR	6144543	IfStatement	if ( c == '#' )		6144184	0					
ANR	6144544	Condition	c == '#'	2328:7:48371:48378	6144184	0	True				
ANR	6144545	EqualityExpression	c == '#'		6144184	0		==			
ANR	6144546	Identifier	c		6144184	0					
ANR	6144547	PrimaryExpression	'#'		6144184	1					
ANR	6144548	CompoundStatement		98:17:2135:2135	6144184	1					
ANR	6144549	ExpressionStatement	p ++	2329:4:48387:48390	6144184	0	True				
ANR	6144550	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6144551	Identifier	p		6144184	0					
ANR	6144552	IncDec	++		6144184	1					
ANR	6144553	ExpressionStatement	tok = TOK_TWOSHARPS	2330:4:48396:48415	6144184	1	True				
ANR	6144554	AssignmentExpression	tok = TOK_TWOSHARPS		6144184	0		=			
ANR	6144555	Identifier	tok		6144184	0					
ANR	6144556	Identifier	TOK_TWOSHARPS		6144184	1					
ANR	6144557	ElseStatement	else		6144184	0					
ANR	6144558	CompoundStatement		101:10:2181:2181	6144184	0					
ANR	6144559	IfStatement	if ( parse_flags & PARSE_FLAG_ASM_COMMENTS )		6144184	0					
ANR	6144560	Condition	parse_flags & PARSE_FLAG_ASM_COMMENTS	2332:8:48437:48473	6144184	0	True				
ANR	6144561	BitAndExpression	parse_flags & PARSE_FLAG_ASM_COMMENTS		6144184	0		&			
ANR	6144562	Identifier	parse_flags		6144184	0					
ANR	6144563	Identifier	PARSE_FLAG_ASM_COMMENTS		6144184	1					
ANR	6144564	CompoundStatement		102:47:2230:2230	6144184	1					
ANR	6144565	ExpressionStatement	p = parse_line_comment ( p - 1 )	2333:5:48483:48513	6144184	0	True				
ANR	6144566	AssignmentExpression	p = parse_line_comment ( p - 1 )		6144184	0		=			
ANR	6144567	Identifier	p		6144184	0					
ANR	6144568	CallExpression	parse_line_comment ( p - 1 )		6144184	1					
ANR	6144569	Callee	parse_line_comment		6144184	0					
ANR	6144570	Identifier	parse_line_comment		6144184	0					
ANR	6144571	ArgumentList	p - 1		6144184	1					
ANR	6144572	Argument	p - 1		6144184	0					
ANR	6144573	AdditiveExpression	p - 1		6144184	0		-			
ANR	6144574	Identifier	p		6144184	0					
ANR	6144575	PrimaryExpression	1		6144184	1					
ANR	6144576	GotoStatement	goto redo_no_start ;	2334:5:48520:48538	6144184	1	True				
ANR	6144577	Identifier	redo_no_start		6144184	0					
ANR	6144578	ElseStatement	else		6144184	0					
ANR	6144579	CompoundStatement		105:11:2305:2305	6144184	0					
ANR	6144580	ExpressionStatement	tok = '#'	2336:5:48558:48567	6144184	0	True				
ANR	6144581	AssignmentExpression	tok = '#'		6144184	0		=			
ANR	6144582	Identifier	tok		6144184	0					
ANR	6144583	PrimaryExpression	'#'		6144184	1					
ANR	6144584	BreakStatement	break ;	2340:2:48586:48591	6144184	26	True				
ANR	6144585	Label	case 'a' :	2342:1:48595:48603	6144184	27	True				
ANR	6144586	Label	case 'b' :	2342:11:48605:48613	6144184	28	True				
ANR	6144587	Label	case 'c' :	2342:21:48615:48623	6144184	29	True				
ANR	6144588	Label	case 'd' :	2342:31:48625:48633	6144184	30	True				
ANR	6144589	Label	case 'e' :	2343:1:48636:48644	6144184	31	True				
ANR	6144590	Label	case 'f' :	2343:11:48646:48654	6144184	32	True				
ANR	6144591	Label	case 'g' :	2343:21:48656:48664	6144184	33	True				
ANR	6144592	Label	case 'h' :	2343:31:48666:48674	6144184	34	True				
ANR	6144593	Label	case 'i' :	2344:1:48677:48685	6144184	35	True				
ANR	6144594	Label	case 'j' :	2344:11:48687:48695	6144184	36	True				
ANR	6144595	Label	case 'k' :	2344:21:48697:48705	6144184	37	True				
ANR	6144596	Label	case 'l' :	2344:31:48707:48715	6144184	38	True				
ANR	6144597	Label	case 'm' :	2345:1:48718:48726	6144184	39	True				
ANR	6144598	Label	case 'n' :	2345:11:48728:48736	6144184	40	True				
ANR	6144599	Label	case 'o' :	2345:21:48738:48746	6144184	41	True				
ANR	6144600	Label	case 'p' :	2345:31:48748:48756	6144184	42	True				
ANR	6144601	Label	case 'q' :	2346:1:48759:48767	6144184	43	True				
ANR	6144602	Label	case 'r' :	2346:11:48769:48777	6144184	44	True				
ANR	6144603	Label	case 's' :	2346:21:48779:48787	6144184	45	True				
ANR	6144604	Label	case 't' :	2346:31:48789:48797	6144184	46	True				
ANR	6144605	Label	case 'u' :	2347:1:48800:48808	6144184	47	True				
ANR	6144606	Label	case 'v' :	2347:11:48810:48818	6144184	48	True				
ANR	6144607	Label	case 'w' :	2347:21:48820:48828	6144184	49	True				
ANR	6144608	Label	case 'x' :	2347:31:48830:48838	6144184	50	True				
ANR	6144609	Label	case 'y' :	2348:1:48841:48849	6144184	51	True				
ANR	6144610	Label	case 'z' :	2348:11:48851:48859	6144184	52	True				
ANR	6144611	Label	case 'A' :	2349:1:48862:48870	6144184	53	True				
ANR	6144612	Label	case 'B' :	2349:11:48872:48880	6144184	54	True				
ANR	6144613	Label	case 'C' :	2349:21:48882:48890	6144184	55	True				
ANR	6144614	Label	case 'D' :	2349:31:48892:48900	6144184	56	True				
ANR	6144615	Label	case 'E' :	2350:1:48903:48911	6144184	57	True				
ANR	6144616	Label	case 'F' :	2350:11:48913:48921	6144184	58	True				
ANR	6144617	Label	case 'G' :	2350:21:48923:48931	6144184	59	True				
ANR	6144618	Label	case 'H' :	2350:31:48933:48941	6144184	60	True				
ANR	6144619	Label	case 'I' :	2351:1:48944:48952	6144184	61	True				
ANR	6144620	Label	case 'J' :	2351:11:48954:48962	6144184	62	True				
ANR	6144621	Label	case 'K' :	2351:21:48964:48972	6144184	63	True				
ANR	6144622	Label	case 'M' :	2352:1:48975:48983	6144184	64	True				
ANR	6144623	Label	case 'N' :	2352:11:48985:48993	6144184	65	True				
ANR	6144624	Label	case 'O' :	2352:21:48995:49003	6144184	66	True				
ANR	6144625	Label	case 'P' :	2352:31:49005:49013	6144184	67	True				
ANR	6144626	Label	case 'Q' :	2353:1:49016:49024	6144184	68	True				
ANR	6144627	Label	case 'R' :	2353:11:49026:49034	6144184	69	True				
ANR	6144628	Label	case 'S' :	2353:21:49036:49044	6144184	70	True				
ANR	6144629	Label	case 'T' :	2353:31:49046:49054	6144184	71	True				
ANR	6144630	Label	case 'U' :	2354:1:49057:49065	6144184	72	True				
ANR	6144631	Label	case 'V' :	2354:11:49067:49075	6144184	73	True				
ANR	6144632	Label	case 'W' :	2354:21:49077:49085	6144184	74	True				
ANR	6144633	Label	case 'X' :	2354:31:49087:49095	6144184	75	True				
ANR	6144634	Label	case 'Y' :	2355:1:49098:49106	6144184	76	True				
ANR	6144635	Label	case 'Z' :	2355:11:49108:49116	6144184	77	True				
ANR	6144636	Label	case '_' :	2356:1:49119:49127	6144184	78	True				
ANR	6144637	Label	parse_ident_fast :	2357:0:49129:49145	6144184	79	True				
ANR	6144638	Identifier	parse_ident_fast		6144184	0					
ANR	6144639	ExpressionStatement	p1 = p	2358:2:49149:49155	6144184	80	True				
ANR	6144640	AssignmentExpression	p1 = p		6144184	0		=			
ANR	6144641	Identifier	p1		6144184	0					
ANR	6144642	Identifier	p		6144184	1					
ANR	6144643	ExpressionStatement	h = TOK_HASH_INIT	2359:2:49159:49176	6144184	81	True				
ANR	6144644	AssignmentExpression	h = TOK_HASH_INIT		6144184	0		=			
ANR	6144645	Identifier	h		6144184	0					
ANR	6144646	Identifier	TOK_HASH_INIT		6144184	1					
ANR	6144647	ExpressionStatement	"h = TOK_HASH_FUNC ( h , c )"	2360:2:49180:49204	6144184	82	True				
ANR	6144648	AssignmentExpression	"h = TOK_HASH_FUNC ( h , c )"		6144184	0		=			
ANR	6144649	Identifier	h		6144184	0					
ANR	6144650	CallExpression	"TOK_HASH_FUNC ( h , c )"		6144184	1					
ANR	6144651	Callee	TOK_HASH_FUNC		6144184	0					
ANR	6144652	Identifier	TOK_HASH_FUNC		6144184	0					
ANR	6144653	ArgumentList	h		6144184	1					
ANR	6144654	Argument	h		6144184	0					
ANR	6144655	Identifier	h		6144184	0					
ANR	6144656	Argument	c		6144184	1					
ANR	6144657	Identifier	c		6144184	0					
ANR	6144658	ExpressionStatement	p ++	2361:2:49208:49211	6144184	83	True				
ANR	6144659	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6144660	Identifier	p		6144184	0					
ANR	6144661	IncDec	++		6144184	1					
ANR	6144662	ForStatement	for ( ; ; )		6144184	84					
ANR	6144663	CompoundStatement		132:11:2978:2978	6144184	0					
ANR	6144664	ExpressionStatement	c = * p	2363:3:49229:49235	6144184	0	True				
ANR	6144665	AssignmentExpression	c = * p		6144184	0		=			
ANR	6144666	Identifier	c		6144184	0					
ANR	6144667	UnaryOperationExpression	* p		6144184	1					
ANR	6144668	UnaryOperator	*		6144184	0					
ANR	6144669	Identifier	p		6144184	1					
ANR	6144670	IfStatement	if ( ! isidnum_table [ c - CH_EOF ] )		6144184	1					
ANR	6144671	Condition	! isidnum_table [ c - CH_EOF ]	2364:7:49244:49269	6144184	0	True				
ANR	6144672	UnaryOperationExpression	! isidnum_table [ c - CH_EOF ]		6144184	0					
ANR	6144673	UnaryOperator	!		6144184	0					
ANR	6144674	ArrayIndexing	isidnum_table [ c - CH_EOF ]		6144184	1					
ANR	6144675	Identifier	isidnum_table		6144184	0					
ANR	6144676	AdditiveExpression	c - CH_EOF		6144184	1		-			
ANR	6144677	Identifier	c		6144184	0					
ANR	6144678	Identifier	CH_EOF		6144184	1					
ANR	6144679	CompoundStatement		134:35:3026:3026	6144184	1					
ANR	6144680	BreakStatement	break ;	2365:4:49278:49283	6144184	0	True				
ANR	6144681	ExpressionStatement	"h = TOK_HASH_FUNC ( h , c )"	2367:3:49293:49317	6144184	2	True				
ANR	6144682	AssignmentExpression	"h = TOK_HASH_FUNC ( h , c )"		6144184	0		=			
ANR	6144683	Identifier	h		6144184	0					
ANR	6144684	CallExpression	"TOK_HASH_FUNC ( h , c )"		6144184	1					
ANR	6144685	Callee	TOK_HASH_FUNC		6144184	0					
ANR	6144686	Identifier	TOK_HASH_FUNC		6144184	0					
ANR	6144687	ArgumentList	h		6144184	1					
ANR	6144688	Argument	h		6144184	0					
ANR	6144689	Identifier	h		6144184	0					
ANR	6144690	Argument	c		6144184	1					
ANR	6144691	Identifier	c		6144184	0					
ANR	6144692	ExpressionStatement	p ++	2368:3:49322:49325	6144184	3	True				
ANR	6144693	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6144694	Identifier	p		6144184	0					
ANR	6144695	IncDec	++		6144184	1					
ANR	6144696	IfStatement	if ( c != '\\\\' )		6144184	85					
ANR	6144697	Condition	c != '\\\\'	2370:6:49337:49345	6144184	0	True				
ANR	6144698	EqualityExpression	c != '\\\\'		6144184	0		!=			
ANR	6144699	Identifier	c		6144184	0					
ANR	6144700	PrimaryExpression	'\\\\'		6144184	1					
ANR	6144701	CompoundStatement		142:3:3126:3133	6144184	1					
ANR	6144702	IdentifierDeclStatement	TokenSym * * pts ;	2371:3:49353:49367	6144184	0	True				
ANR	6144703	IdentifierDecl	* * pts		6144184	0					
ANR	6144704	IdentifierDeclType	TokenSym * *		6144184	0					
ANR	6144705	Identifier	pts		6144184	1					
ANR	6144706	IdentifierDeclStatement	int len ;	2372:3:49372:49379	6144184	1	True				
ANR	6144707	IdentifierDecl	len		6144184	0					
ANR	6144708	IdentifierDeclType	int		6144184	0					
ANR	6144709	Identifier	len		6144184	1					
ANR	6144710	ExpressionStatement	len = p - p1	2376:3:49484:49496	6144184	2	True				
ANR	6144711	AssignmentExpression	len = p - p1		6144184	0		=			
ANR	6144712	Identifier	len		6144184	0					
ANR	6144713	AdditiveExpression	p - p1		6144184	1		-			
ANR	6144714	Identifier	p		6144184	0					
ANR	6144715	Identifier	p1		6144184	1					
ANR	6144716	ExpressionStatement	h &= ( TOK_HASH_SIZE - 1 )	2377:3:49501:49525	6144184	3	True				
ANR	6144717	AssignmentExpression	h &= ( TOK_HASH_SIZE - 1 )		6144184	0		&=			
ANR	6144718	Identifier	h		6144184	0					
ANR	6144719	AdditiveExpression	TOK_HASH_SIZE - 1		6144184	1		-			
ANR	6144720	Identifier	TOK_HASH_SIZE		6144184	0					
ANR	6144721	PrimaryExpression	1		6144184	1					
ANR	6144722	ExpressionStatement	pts = & hash_ident [ h ]	2378:3:49530:49550	6144184	4	True				
ANR	6144723	AssignmentExpression	pts = & hash_ident [ h ]		6144184	0		=			
ANR	6144724	Identifier	pts		6144184	0					
ANR	6144725	UnaryOperationExpression	& hash_ident [ h ]		6144184	1					
ANR	6144726	UnaryOperator	&		6144184	0					
ANR	6144727	ArrayIndexing	hash_ident [ h ]		6144184	1					
ANR	6144728	Identifier	hash_ident		6144184	0					
ANR	6144729	Identifier	h		6144184	1					
ANR	6144730	ForStatement	for ( ; ; )		6144184	5					
ANR	6144731	CompoundStatement		149:12:3318:3318	6144184	0					
ANR	6144732	ExpressionStatement	ts = * pts	2380:4:49570:49579	6144184	0	True				
ANR	6144733	AssignmentExpression	ts = * pts		6144184	0		=			
ANR	6144734	Identifier	ts		6144184	0					
ANR	6144735	UnaryOperationExpression	* pts		6144184	1					
ANR	6144736	UnaryOperator	*		6144184	0					
ANR	6144737	Identifier	pts		6144184	1					
ANR	6144738	IfStatement	if ( ! ts )		6144184	1					
ANR	6144739	Condition	! ts	2381:8:49589:49591	6144184	0	True				
ANR	6144740	UnaryOperationExpression	! ts		6144184	0					
ANR	6144741	UnaryOperator	!		6144184	0					
ANR	6144742	Identifier	ts		6144184	1					
ANR	6144743	CompoundStatement		151:13:3348:3348	6144184	1					
ANR	6144744	BreakStatement	break ;	2382:5:49601:49606	6144184	0	True				
ANR	6144745	IfStatement	"if ( ts -> len == len && ! memcmp ( ts -> str , p1 , len ) )"		6144184	2					
ANR	6144746	Condition	"ts -> len == len && ! memcmp ( ts -> str , p1 , len )"	2384:8:49622:49665	6144184	0	True				
ANR	6144747	AndExpression	"ts -> len == len && ! memcmp ( ts -> str , p1 , len )"		6144184	0		&&			
ANR	6144748	EqualityExpression	ts -> len == len		6144184	0		==			
ANR	6144749	PtrMemberAccess	ts -> len		6144184	0					
ANR	6144750	Identifier	ts		6144184	0					
ANR	6144751	Identifier	len		6144184	1					
ANR	6144752	Identifier	len		6144184	1					
ANR	6144753	UnaryOperationExpression	"! memcmp ( ts -> str , p1 , len )"		6144184	1					
ANR	6144754	UnaryOperator	!		6144184	0					
ANR	6144755	CallExpression	"memcmp ( ts -> str , p1 , len )"		6144184	1					
ANR	6144756	Callee	memcmp		6144184	0					
ANR	6144757	Identifier	memcmp		6144184	0					
ANR	6144758	ArgumentList	ts -> str		6144184	1					
ANR	6144759	Argument	ts -> str		6144184	0					
ANR	6144760	PtrMemberAccess	ts -> str		6144184	0					
ANR	6144761	Identifier	ts		6144184	0					
ANR	6144762	Identifier	str		6144184	1					
ANR	6144763	Argument	p1		6144184	1					
ANR	6144764	Identifier	p1		6144184	0					
ANR	6144765	Argument	len		6144184	2					
ANR	6144766	Identifier	len		6144184	0					
ANR	6144767	CompoundStatement		154:54:3422:3422	6144184	1					
ANR	6144768	GotoStatement	goto token_found ;	2385:5:49675:49691	6144184	0	True				
ANR	6144769	Identifier	token_found		6144184	0					
ANR	6144770	ExpressionStatement	pts = & ( ts -> hash_next )	2387:4:49703:49725	6144184	3	True				
ANR	6144771	AssignmentExpression	pts = & ( ts -> hash_next )		6144184	0		=			
ANR	6144772	Identifier	pts		6144184	0					
ANR	6144773	UnaryOperationExpression	& ( ts -> hash_next )		6144184	1					
ANR	6144774	UnaryOperator	&		6144184	0					
ANR	6144775	PtrMemberAccess	ts -> hash_next		6144184	1					
ANR	6144776	Identifier	ts		6144184	0					
ANR	6144777	Identifier	hash_next		6144184	1					
ANR	6144778	ExpressionStatement	"ts = tok_alloc_new ( pts , ( const char * ) p1 , len )"	2389:3:49735:49783	6144184	6	True				
ANR	6144779	AssignmentExpression	"ts = tok_alloc_new ( pts , ( const char * ) p1 , len )"		6144184	0		=			
ANR	6144780	Identifier	ts		6144184	0					
ANR	6144781	CallExpression	"tok_alloc_new ( pts , ( const char * ) p1 , len )"		6144184	1					
ANR	6144782	Callee	tok_alloc_new		6144184	0					
ANR	6144783	Identifier	tok_alloc_new		6144184	0					
ANR	6144784	ArgumentList	pts		6144184	1					
ANR	6144785	Argument	pts		6144184	0					
ANR	6144786	Identifier	pts		6144184	0					
ANR	6144787	Argument	( const char * ) p1		6144184	1					
ANR	6144788	CastExpression	( const char * ) p1		6144184	0					
ANR	6144789	CastTarget	const char *		6144184	0					
ANR	6144790	Identifier	p1		6144184	1					
ANR	6144791	Argument	len		6144184	2					
ANR	6144792	Identifier	len		6144184	0					
ANR	6144793	Label	token_found :	2390:0:49785:49796	6144184	7	True				
ANR	6144794	Identifier	token_found		6144184	0					
ANR	6144795	ExpressionStatement		2391:3:49801:49801	6144184	8	True				
ANR	6144796	ElseStatement	else		6144184	0					
ANR	6144797	CompoundStatement		162:9:3566:3566	6144184	0					
ANR	6144798	ExpressionStatement	cstr_reset ( & tokcstr )	2394:3:49838:49859	6144184	0	True				
ANR	6144799	CallExpression	cstr_reset ( & tokcstr )		6144184	0					
ANR	6144800	Callee	cstr_reset		6144184	0					
ANR	6144801	Identifier	cstr_reset		6144184	0					
ANR	6144802	ArgumentList	& tokcstr		6144184	1					
ANR	6144803	Argument	& tokcstr		6144184	0					
ANR	6144804	UnaryOperationExpression	& tokcstr		6144184	0					
ANR	6144805	UnaryOperator	&		6144184	0					
ANR	6144806	Identifier	tokcstr		6144184	1					
ANR	6144807	WhileStatement	while ( p1 < p )		6144184	1					
ANR	6144808	Condition	p1 < p	2396:10:49872:49877	6144184	0	True				
ANR	6144809	RelationalExpression	p1 < p		6144184	0		<			
ANR	6144810	Identifier	p1		6144184	0					
ANR	6144811	Identifier	p		6144184	1					
ANR	6144812	CompoundStatement		166:18:3634:3634	6144184	1					
ANR	6144813	ExpressionStatement	"cstr_ccat ( & tokcstr , * p1 )"	2397:4:49886:49911	6144184	0	True				
ANR	6144814	CallExpression	"cstr_ccat ( & tokcstr , * p1 )"		6144184	0					
ANR	6144815	Callee	cstr_ccat		6144184	0					
ANR	6144816	Identifier	cstr_ccat		6144184	0					
ANR	6144817	ArgumentList	& tokcstr		6144184	1					
ANR	6144818	Argument	& tokcstr		6144184	0					
ANR	6144819	UnaryOperationExpression	& tokcstr		6144184	0					
ANR	6144820	UnaryOperator	&		6144184	0					
ANR	6144821	Identifier	tokcstr		6144184	1					
ANR	6144822	Argument	* p1		6144184	1					
ANR	6144823	UnaryOperationExpression	* p1		6144184	0					
ANR	6144824	UnaryOperator	*		6144184	0					
ANR	6144825	Identifier	p1		6144184	1					
ANR	6144826	ExpressionStatement	p1 ++	2398:4:49917:49921	6144184	1	True				
ANR	6144827	PostIncDecOperationExpression	p1 ++		6144184	0					
ANR	6144828	Identifier	p1		6144184	0					
ANR	6144829	IncDec	++		6144184	1					
ANR	6144830	ExpressionStatement	p --	2400:3:49931:49934	6144184	2	True				
ANR	6144831	PostIncDecOperationExpression	p --		6144184	0					
ANR	6144832	Identifier	p		6144184	0					
ANR	6144833	IncDec	--		6144184	1					
ANR	6144834	ExpressionStatement	"PEEKC ( c , p )"	2401:3:49939:49951	6144184	3	True				
ANR	6144835	CallExpression	"PEEKC ( c , p )"		6144184	0					
ANR	6144836	Callee	PEEKC		6144184	0					
ANR	6144837	Identifier	PEEKC		6144184	0					
ANR	6144838	ArgumentList	c		6144184	1					
ANR	6144839	Argument	c		6144184	0					
ANR	6144840	Identifier	c		6144184	0					
ANR	6144841	Argument	p		6144184	1					
ANR	6144842	Identifier	p		6144184	0					
ANR	6144843	Label	parse_ident_slow :	2402:0:49953:49969	6144184	4	True				
ANR	6144844	Identifier	parse_ident_slow		6144184	0					
ANR	6144845	WhileStatement	while ( isidnum_table [ ( ( c > 255 ) ? 255 : c ) - CH_EOF ] )		6144184	5					
ANR	6144846	Condition	isidnum_table [ ( ( c > 255 ) ? 255 : c ) - CH_EOF ]	2403:10:49981:50023	6144184	0	True				
ANR	6144847	ArrayIndexing	isidnum_table [ ( ( c > 255 ) ? 255 : c ) - CH_EOF ]		6144184	0					
ANR	6144848	Identifier	isidnum_table		6144184	0					
ANR	6144849	AdditiveExpression	( ( c > 255 ) ? 255 : c ) - CH_EOF		6144184	1		-			
ANR	6144850	ConditionalExpression	( c > 255 ) ? 255 : c		6144184	0					
ANR	6144851	Condition	c > 255		6144184	0					
ANR	6144852	RelationalExpression	c > 255		6144184	0		>			
ANR	6144853	Identifier	c		6144184	0					
ANR	6144854	PrimaryExpression	255		6144184	1					
ANR	6144855	PrimaryExpression	255		6144184	1					
ANR	6144856	Identifier	c		6144184	2					
ANR	6144857	Identifier	CH_EOF		6144184	1					
ANR	6144858	CompoundStatement		173:55:3780:3780	6144184	1					
ANR	6144859	ExpressionStatement	"cstr_ccat ( & tokcstr , c )"	2404:4:50032:50055	6144184	0	True				
ANR	6144860	CallExpression	"cstr_ccat ( & tokcstr , c )"		6144184	0					
ANR	6144861	Callee	cstr_ccat		6144184	0					
ANR	6144862	Identifier	cstr_ccat		6144184	0					
ANR	6144863	ArgumentList	& tokcstr		6144184	1					
ANR	6144864	Argument	& tokcstr		6144184	0					
ANR	6144865	UnaryOperationExpression	& tokcstr		6144184	0					
ANR	6144866	UnaryOperator	&		6144184	0					
ANR	6144867	Identifier	tokcstr		6144184	1					
ANR	6144868	Argument	c		6144184	1					
ANR	6144869	Identifier	c		6144184	0					
ANR	6144870	ExpressionStatement	"PEEKC ( c , p )"	2405:4:50061:50073	6144184	1	True				
ANR	6144871	CallExpression	"PEEKC ( c , p )"		6144184	0					
ANR	6144872	Callee	PEEKC		6144184	0					
ANR	6144873	Identifier	PEEKC		6144184	0					
ANR	6144874	ArgumentList	c		6144184	1					
ANR	6144875	Argument	c		6144184	0					
ANR	6144876	Identifier	c		6144184	0					
ANR	6144877	Argument	p		6144184	1					
ANR	6144878	Identifier	p		6144184	0					
ANR	6144879	ExpressionStatement	"ts = tok_alloc ( tokcstr . data , tokcstr . size )"	2407:3:50083:50126	6144184	6	True				
ANR	6144880	AssignmentExpression	"ts = tok_alloc ( tokcstr . data , tokcstr . size )"		6144184	0		=			
ANR	6144881	Identifier	ts		6144184	0					
ANR	6144882	CallExpression	"tok_alloc ( tokcstr . data , tokcstr . size )"		6144184	1					
ANR	6144883	Callee	tok_alloc		6144184	0					
ANR	6144884	Identifier	tok_alloc		6144184	0					
ANR	6144885	ArgumentList	tokcstr . data		6144184	1					
ANR	6144886	Argument	tokcstr . data		6144184	0					
ANR	6144887	MemberAccess	tokcstr . data		6144184	0					
ANR	6144888	Identifier	tokcstr		6144184	0					
ANR	6144889	Identifier	data		6144184	1					
ANR	6144890	Argument	tokcstr . size		6144184	1					
ANR	6144891	MemberAccess	tokcstr . size		6144184	0					
ANR	6144892	Identifier	tokcstr		6144184	0					
ANR	6144893	Identifier	size		6144184	1					
ANR	6144894	ExpressionStatement	tok = ts -> tok	2409:2:50134:50147	6144184	86	True				
ANR	6144895	AssignmentExpression	tok = ts -> tok		6144184	0		=			
ANR	6144896	Identifier	tok		6144184	0					
ANR	6144897	PtrMemberAccess	ts -> tok		6144184	1					
ANR	6144898	Identifier	ts		6144184	0					
ANR	6144899	Identifier	tok		6144184	1					
ANR	6144900	BreakStatement	break ;	2410:2:50151:50156	6144184	87	True				
ANR	6144901	Label	case 'L' :	2411:1:50159:50167	6144184	88	True				
ANR	6144902	ExpressionStatement	t = p [ 1 ]	2412:2:50171:50179	6144184	89	True				
ANR	6144903	AssignmentExpression	t = p [ 1 ]		6144184	0		=			
ANR	6144904	Identifier	t		6144184	0					
ANR	6144905	ArrayIndexing	p [ 1 ]		6144184	1					
ANR	6144906	Identifier	p		6144184	0					
ANR	6144907	PrimaryExpression	1		6144184	1					
ANR	6144908	IfStatement	"if ( t != '\\\\' && t != '\\'' && t != '\\""' )"		6144184	90					
ANR	6144909	Condition	"t != '\\\\' && t != '\\'' && t != '\\""'"	2413:6:50187:50221	6144184	0	True				
ANR	6144910	AndExpression	"t != '\\\\' && t != '\\'' && t != '\\""'"		6144184	0		&&			
ANR	6144911	EqualityExpression	t != '\\\\'		6144184	0		!=			
ANR	6144912	Identifier	t		6144184	0					
ANR	6144913	PrimaryExpression	'\\\\'		6144184	1					
ANR	6144914	AndExpression	"t != '\\'' && t != '\\""'"		6144184	1		&&			
ANR	6144915	EqualityExpression	t != '\\''		6144184	0		!=			
ANR	6144916	Identifier	t		6144184	0					
ANR	6144917	PrimaryExpression	'\\''		6144184	1					
ANR	6144918	EqualityExpression	"t != '\\""'"		6144184	1		!=			
ANR	6144919	Identifier	t		6144184	0					
ANR	6144920	PrimaryExpression	"'\\""'"		6144184	1					
ANR	6144921	CompoundStatement		183:43:3978:3978	6144184	1					
ANR	6144922	GotoStatement	goto parse_ident_fast ;	2415:3:50248:50269	6144184	0	True				
ANR	6144923	Identifier	parse_ident_fast		6144184	0					
ANR	6144924	ElseStatement	else		6144184	0					
ANR	6144925	CompoundStatement		186:9:4034:4034	6144184	0					
ANR	6144926	ExpressionStatement	"PEEKC ( c , p )"	2417:3:50285:50297	6144184	0	True				
ANR	6144927	CallExpression	"PEEKC ( c , p )"		6144184	0					
ANR	6144928	Callee	PEEKC		6144184	0					
ANR	6144929	Identifier	PEEKC		6144184	0					
ANR	6144930	ArgumentList	c		6144184	1					
ANR	6144931	Argument	c		6144184	0					
ANR	6144932	Identifier	c		6144184	0					
ANR	6144933	Argument	p		6144184	1					
ANR	6144934	Identifier	p		6144184	0					
ANR	6144935	IfStatement	"if ( c == '\\'' || c == '\\""' )"		6144184	1					
ANR	6144936	Condition	"c == '\\'' || c == '\\""'"	2418:7:50306:50327	6144184	0	True				
ANR	6144937	OrExpression	"c == '\\'' || c == '\\""'"		6144184	0		||			
ANR	6144938	EqualityExpression	c == '\\''		6144184	0		==			
ANR	6144939	Identifier	c		6144184	0					
ANR	6144940	PrimaryExpression	'\\''		6144184	1					
ANR	6144941	EqualityExpression	"c == '\\""'"		6144184	1		==			
ANR	6144942	Identifier	c		6144184	0					
ANR	6144943	PrimaryExpression	"'\\""'"		6144184	1					
ANR	6144944	CompoundStatement		188:31:4084:4084	6144184	1					
ANR	6144945	ExpressionStatement	is_long = 1	2419:4:50336:50347	6144184	0	True				
ANR	6144946	AssignmentExpression	is_long = 1		6144184	0		=			
ANR	6144947	Identifier	is_long		6144184	0					
ANR	6144948	PrimaryExpression	1		6144184	1					
ANR	6144949	GotoStatement	goto str_const ;	2420:4:50353:50367	6144184	1	True				
ANR	6144950	Identifier	str_const		6144184	0					
ANR	6144951	ElseStatement	else		6144184	0					
ANR	6144952	CompoundStatement		191:10:4133:4133	6144184	0					
ANR	6144953	ExpressionStatement	cstr_reset ( & tokcstr )	2422:4:50385:50406	6144184	0	True				
ANR	6144954	CallExpression	cstr_reset ( & tokcstr )		6144184	0					
ANR	6144955	Callee	cstr_reset		6144184	0					
ANR	6144956	Identifier	cstr_reset		6144184	0					
ANR	6144957	ArgumentList	& tokcstr		6144184	1					
ANR	6144958	Argument	& tokcstr		6144184	0					
ANR	6144959	UnaryOperationExpression	& tokcstr		6144184	0					
ANR	6144960	UnaryOperator	&		6144184	0					
ANR	6144961	Identifier	tokcstr		6144184	1					
ANR	6144962	ExpressionStatement	"cstr_ccat ( & tokcstr , 'L' )"	2423:4:50412:50437	6144184	1	True				
ANR	6144963	CallExpression	"cstr_ccat ( & tokcstr , 'L' )"		6144184	0					
ANR	6144964	Callee	cstr_ccat		6144184	0					
ANR	6144965	Identifier	cstr_ccat		6144184	0					
ANR	6144966	ArgumentList	& tokcstr		6144184	1					
ANR	6144967	Argument	& tokcstr		6144184	0					
ANR	6144968	UnaryOperationExpression	& tokcstr		6144184	0					
ANR	6144969	UnaryOperator	&		6144184	0					
ANR	6144970	Identifier	tokcstr		6144184	1					
ANR	6144971	Argument	'L'		6144184	1					
ANR	6144972	PrimaryExpression	'L'		6144184	0					
ANR	6144973	GotoStatement	goto parse_ident_slow ;	2424:4:50443:50464	6144184	2	True				
ANR	6144974	Identifier	parse_ident_slow		6144184	0					
ANR	6144975	BreakStatement	break ;	2427:2:50477:50482	6144184	91	True				
ANR	6144976	Label	case '0' :	2428:1:50485:50493	6144184	92	True				
ANR	6144977	Label	case '1' :	2428:11:50495:50503	6144184	93	True				
ANR	6144978	Label	case '2' :	2428:21:50505:50513	6144184	94	True				
ANR	6144979	Label	case '3' :	2428:31:50515:50523	6144184	95	True				
ANR	6144980	Label	case '4' :	2429:1:50526:50534	6144184	96	True				
ANR	6144981	Label	case '5' :	2429:11:50536:50544	6144184	97	True				
ANR	6144982	Label	case '6' :	2429:21:50546:50554	6144184	98	True				
ANR	6144983	Label	case '7' :	2429:31:50556:50564	6144184	99	True				
ANR	6144984	Label	case '8' :	2430:1:50567:50575	6144184	100	True				
ANR	6144985	Label	case '9' :	2430:11:50577:50585	6144184	101	True				
ANR	6144986	ExpressionStatement	cstr_reset ( & tokcstr )	2432:2:50590:50611	6144184	102	True				
ANR	6144987	CallExpression	cstr_reset ( & tokcstr )		6144184	0					
ANR	6144988	Callee	cstr_reset		6144184	0					
ANR	6144989	Identifier	cstr_reset		6144184	0					
ANR	6144990	ArgumentList	& tokcstr		6144184	1					
ANR	6144991	Argument	& tokcstr		6144184	0					
ANR	6144992	UnaryOperationExpression	& tokcstr		6144184	0					
ANR	6144993	UnaryOperator	&		6144184	0					
ANR	6144994	Identifier	tokcstr		6144184	1					
ANR	6144995	Label	parse_num :	2435:0:50705:50714	6144184	103	True				
ANR	6144996	Identifier	parse_num		6144184	0					
ANR	6144997	ForStatement	for ( ; ; )		6144184	104					
ANR	6144998	CompoundStatement		206:11:4481:4481	6144184	0					
ANR	6144999	ExpressionStatement	t = c	2437:3:50732:50737	6144184	0	True				
ANR	6145000	AssignmentExpression	t = c		6144184	0		=			
ANR	6145001	Identifier	t		6144184	0					
ANR	6145002	Identifier	c		6144184	1					
ANR	6145003	ExpressionStatement	"cstr_ccat ( & tokcstr , c )"	2438:3:50742:50765	6144184	1	True				
ANR	6145004	CallExpression	"cstr_ccat ( & tokcstr , c )"		6144184	0					
ANR	6145005	Callee	cstr_ccat		6144184	0					
ANR	6145006	Identifier	cstr_ccat		6144184	0					
ANR	6145007	ArgumentList	& tokcstr		6144184	1					
ANR	6145008	Argument	& tokcstr		6144184	0					
ANR	6145009	UnaryOperationExpression	& tokcstr		6144184	0					
ANR	6145010	UnaryOperator	&		6144184	0					
ANR	6145011	Identifier	tokcstr		6144184	1					
ANR	6145012	Argument	c		6144184	1					
ANR	6145013	Identifier	c		6144184	0					
ANR	6145014	ExpressionStatement	"PEEKC ( c , p )"	2439:3:50770:50782	6144184	2	True				
ANR	6145015	CallExpression	"PEEKC ( c , p )"		6144184	0					
ANR	6145016	Callee	PEEKC		6144184	0					
ANR	6145017	Identifier	PEEKC		6144184	0					
ANR	6145018	ArgumentList	c		6144184	1					
ANR	6145019	Argument	c		6144184	0					
ANR	6145020	Identifier	c		6144184	0					
ANR	6145021	Argument	p		6144184	1					
ANR	6145022	Identifier	p		6144184	0					
ANR	6145023	IfStatement	if ( ! ( isnum ( c ) || isid ( c ) || c == '.' || ( ( c == '+' || c == '-' ) && ( t == 'e' || t == 'E' || t == 'p' || t == 'P' ) ) ) )		6144184	3					
ANR	6145024	Condition	! ( isnum ( c ) || isid ( c ) || c == '.' || ( ( c == '+' || c == '-' ) && ( t == 'e' || t == 'E' || t == 'p' || t == 'P' ) ) )	2440:7:50791:50923	6144184	0	True				
ANR	6145025	UnaryOperationExpression	! ( isnum ( c ) || isid ( c ) || c == '.' || ( ( c == '+' || c == '-' ) && ( t == 'e' || t == 'E' || t == 'p' || t == 'P' ) ) )		6144184	0					
ANR	6145026	UnaryOperator	!		6144184	0					
ANR	6145027	OrExpression	isnum ( c ) || isid ( c ) || c == '.' || ( ( c == '+' || c == '-' ) && ( t == 'e' || t == 'E' || t == 'p' || t == 'P' ) )		6144184	1		||			
ANR	6145028	CallExpression	isnum ( c )		6144184	0					
ANR	6145029	Callee	isnum		6144184	0					
ANR	6145030	Identifier	isnum		6144184	0					
ANR	6145031	ArgumentList	c		6144184	1					
ANR	6145032	Argument	c		6144184	0					
ANR	6145033	Identifier	c		6144184	0					
ANR	6145034	OrExpression	isid ( c ) || c == '.' || ( ( c == '+' || c == '-' ) && ( t == 'e' || t == 'E' || t == 'p' || t == 'P' ) )		6144184	1		||			
ANR	6145035	CallExpression	isid ( c )		6144184	0					
ANR	6145036	Callee	isid		6144184	0					
ANR	6145037	Identifier	isid		6144184	0					
ANR	6145038	ArgumentList	c		6144184	1					
ANR	6145039	Argument	c		6144184	0					
ANR	6145040	Identifier	c		6144184	0					
ANR	6145041	OrExpression	c == '.' || ( ( c == '+' || c == '-' ) && ( t == 'e' || t == 'E' || t == 'p' || t == 'P' ) )		6144184	1		||			
ANR	6145042	EqualityExpression	c == '.'		6144184	0		==			
ANR	6145043	Identifier	c		6144184	0					
ANR	6145044	PrimaryExpression	'.'		6144184	1					
ANR	6145045	AndExpression	( c == '+' || c == '-' ) && ( t == 'e' || t == 'E' || t == 'p' || t == 'P' )		6144184	1		&&			
ANR	6145046	OrExpression	c == '+' || c == '-'		6144184	0		||			
ANR	6145047	EqualityExpression	c == '+'		6144184	0		==			
ANR	6145048	Identifier	c		6144184	0					
ANR	6145049	PrimaryExpression	'+'		6144184	1					
ANR	6145050	EqualityExpression	c == '-'		6144184	1		==			
ANR	6145051	Identifier	c		6144184	0					
ANR	6145052	PrimaryExpression	'-'		6144184	1					
ANR	6145053	OrExpression	t == 'e' || t == 'E' || t == 'p' || t == 'P'		6144184	1		||			
ANR	6145054	EqualityExpression	t == 'e'		6144184	0		==			
ANR	6145055	Identifier	t		6144184	0					
ANR	6145056	PrimaryExpression	'e'		6144184	1					
ANR	6145057	OrExpression	t == 'E' || t == 'p' || t == 'P'		6144184	1		||			
ANR	6145058	EqualityExpression	t == 'E'		6144184	0		==			
ANR	6145059	Identifier	t		6144184	0					
ANR	6145060	PrimaryExpression	'E'		6144184	1					
ANR	6145061	OrExpression	t == 'p' || t == 'P'		6144184	1		||			
ANR	6145062	EqualityExpression	t == 'p'		6144184	0		==			
ANR	6145063	Identifier	t		6144184	0					
ANR	6145064	PrimaryExpression	'p'		6144184	1					
ANR	6145065	EqualityExpression	t == 'P'		6144184	1		==			
ANR	6145066	Identifier	t		6144184	0					
ANR	6145067	PrimaryExpression	'P'		6144184	1					
ANR	6145068	CompoundStatement		212:60:4680:4680	6144184	1					
ANR	6145069	BreakStatement	break ;	2443:4:50932:50937	6144184	0	True				
ANR	6145070	ExpressionStatement	"cstr_ccat ( & tokcstr , '\\0' )"	2447:2:50997:51023	6144184	105	True				
ANR	6145071	CallExpression	"cstr_ccat ( & tokcstr , '\\0' )"		6144184	0					
ANR	6145072	Callee	cstr_ccat		6144184	0					
ANR	6145073	Identifier	cstr_ccat		6144184	0					
ANR	6145074	ArgumentList	& tokcstr		6144184	1					
ANR	6145075	Argument	& tokcstr		6144184	0					
ANR	6145076	UnaryOperationExpression	& tokcstr		6144184	0					
ANR	6145077	UnaryOperator	&		6144184	0					
ANR	6145078	Identifier	tokcstr		6144184	1					
ANR	6145079	Argument	'\\0'		6144184	1					
ANR	6145080	PrimaryExpression	'\\0'		6144184	0					
ANR	6145081	ExpressionStatement	tokc . cstr = & tokcstr	2448:2:51027:51047	6144184	106	True				
ANR	6145082	AssignmentExpression	tokc . cstr = & tokcstr		6144184	0		=			
ANR	6145083	MemberAccess	tokc . cstr		6144184	0					
ANR	6145084	Identifier	tokc		6144184	0					
ANR	6145085	Identifier	cstr		6144184	1					
ANR	6145086	UnaryOperationExpression	& tokcstr		6144184	1					
ANR	6145087	UnaryOperator	&		6144184	0					
ANR	6145088	Identifier	tokcstr		6144184	1					
ANR	6145089	ExpressionStatement	tok = TOK_PPNUM	2449:2:51051:51066	6144184	107	True				
ANR	6145090	AssignmentExpression	tok = TOK_PPNUM		6144184	0		=			
ANR	6145091	Identifier	tok		6144184	0					
ANR	6145092	Identifier	TOK_PPNUM		6144184	1					
ANR	6145093	BreakStatement	break ;	2450:2:51070:51075	6144184	108	True				
ANR	6145094	Label	case '.' :	2451:1:51078:51086	6144184	109	True				
ANR	6145095	ExpressionStatement	"PEEKC ( c , p )"	2453:2:51154:51166	6144184	110	True				
ANR	6145096	CallExpression	"PEEKC ( c , p )"		6144184	0					
ANR	6145097	Callee	PEEKC		6144184	0					
ANR	6145098	Identifier	PEEKC		6144184	0					
ANR	6145099	ArgumentList	c		6144184	1					
ANR	6145100	Argument	c		6144184	0					
ANR	6145101	Identifier	c		6144184	0					
ANR	6145102	Argument	p		6144184	1					
ANR	6145103	Identifier	p		6144184	0					
ANR	6145104	IfStatement	if ( isnum ( c ) )		6144184	111					
ANR	6145105	Condition	isnum ( c )	2454:6:51174:51182	6144184	0	True				
ANR	6145106	CallExpression	isnum ( c )		6144184	0					
ANR	6145107	Callee	isnum		6144184	0					
ANR	6145108	Identifier	isnum		6144184	0					
ANR	6145109	ArgumentList	c		6144184	1					
ANR	6145110	Argument	c		6144184	0					
ANR	6145111	Identifier	c		6144184	0					
ANR	6145112	CompoundStatement		224:17:4939:4939	6144184	1					
ANR	6145113	ExpressionStatement	cstr_reset ( & tokcstr )	2455:3:51190:51211	6144184	0	True				
ANR	6145114	CallExpression	cstr_reset ( & tokcstr )		6144184	0					
ANR	6145115	Callee	cstr_reset		6144184	0					
ANR	6145116	Identifier	cstr_reset		6144184	0					
ANR	6145117	ArgumentList	& tokcstr		6144184	1					
ANR	6145118	Argument	& tokcstr		6144184	0					
ANR	6145119	UnaryOperationExpression	& tokcstr		6144184	0					
ANR	6145120	UnaryOperator	&		6144184	0					
ANR	6145121	Identifier	tokcstr		6144184	1					
ANR	6145122	ExpressionStatement	"cstr_ccat ( & tokcstr , '.' )"	2456:3:51216:51241	6144184	1	True				
ANR	6145123	CallExpression	"cstr_ccat ( & tokcstr , '.' )"		6144184	0					
ANR	6145124	Callee	cstr_ccat		6144184	0					
ANR	6145125	Identifier	cstr_ccat		6144184	0					
ANR	6145126	ArgumentList	& tokcstr		6144184	1					
ANR	6145127	Argument	& tokcstr		6144184	0					
ANR	6145128	UnaryOperationExpression	& tokcstr		6144184	0					
ANR	6145129	UnaryOperator	&		6144184	0					
ANR	6145130	Identifier	tokcstr		6144184	1					
ANR	6145131	Argument	'.'		6144184	1					
ANR	6145132	PrimaryExpression	'.'		6144184	0					
ANR	6145133	GotoStatement	goto parse_num ;	2457:3:51246:51260	6144184	2	True				
ANR	6145134	Identifier	parse_num		6144184	0					
ANR	6145135	ElseStatement	else		6144184	0					
ANR	6145136	IfStatement	if ( c == '.' )		6144184	0					
ANR	6145137	Condition	c == '.'	2458:13:51275:51282	6144184	0	True				
ANR	6145138	EqualityExpression	c == '.'		6144184	0		==			
ANR	6145139	Identifier	c		6144184	0					
ANR	6145140	PrimaryExpression	'.'		6144184	1					
ANR	6145141	CompoundStatement		228:23:5039:5039	6144184	1					
ANR	6145142	ExpressionStatement	"PEEKC ( c , p )"	2459:3:51290:51302	6144184	0	True				
ANR	6145143	CallExpression	"PEEKC ( c , p )"		6144184	0					
ANR	6145144	Callee	PEEKC		6144184	0					
ANR	6145145	Identifier	PEEKC		6144184	0					
ANR	6145146	ArgumentList	c		6144184	1					
ANR	6145147	Argument	c		6144184	0					
ANR	6145148	Identifier	c		6144184	0					
ANR	6145149	Argument	p		6144184	1					
ANR	6145150	Identifier	p		6144184	0					
ANR	6145151	IfStatement	if ( c != '.' )		6144184	1					
ANR	6145152	Condition	c != '.'	2460:7:51311:51318	6144184	0	True				
ANR	6145153	EqualityExpression	c != '.'		6144184	0		!=			
ANR	6145154	Identifier	c		6144184	0					
ANR	6145155	PrimaryExpression	'.'		6144184	1					
ANR	6145156	CompoundStatement		230:17:5075:5075	6144184	1					
ANR	6145157	ExpressionStatement	"expect ( ""'.'"" )"	2461:4:51327:51341	6144184	0	True				
ANR	6145158	CallExpression	"expect ( ""'.'"" )"		6144184	0					
ANR	6145159	Callee	expect		6144184	0					
ANR	6145160	Identifier	expect		6144184	0					
ANR	6145161	ArgumentList	"""'.'"""		6144184	1					
ANR	6145162	Argument	"""'.'"""		6144184	0					
ANR	6145163	PrimaryExpression	"""'.'"""		6144184	0					
ANR	6145164	ReturnStatement	return ;	2462:4:51347:51353	6144184	1	True				
ANR	6145165	ExpressionStatement	"PEEKC ( c , p )"	2464:3:51363:51375	6144184	2	True				
ANR	6145166	CallExpression	"PEEKC ( c , p )"		6144184	0					
ANR	6145167	Callee	PEEKC		6144184	0					
ANR	6145168	Identifier	PEEKC		6144184	0					
ANR	6145169	ArgumentList	c		6144184	1					
ANR	6145170	Argument	c		6144184	0					
ANR	6145171	Identifier	c		6144184	0					
ANR	6145172	Argument	p		6144184	1					
ANR	6145173	Identifier	p		6144184	0					
ANR	6145174	ExpressionStatement	tok = TOK_DOTS	2465:3:51380:51394	6144184	3	True				
ANR	6145175	AssignmentExpression	tok = TOK_DOTS		6144184	0		=			
ANR	6145176	Identifier	tok		6144184	0					
ANR	6145177	Identifier	TOK_DOTS		6144184	1					
ANR	6145178	ElseStatement	else		6144184	0					
ANR	6145179	CompoundStatement		236:9:5159:5159	6144184	0					
ANR	6145180	ExpressionStatement	tok = '.'	2467:3:51410:51419	6144184	0	True				
ANR	6145181	AssignmentExpression	tok = '.'		6144184	0		=			
ANR	6145182	Identifier	tok		6144184	0					
ANR	6145183	PrimaryExpression	'.'		6144184	1					
ANR	6145184	BreakStatement	break ;	2469:2:51427:51432	6144184	112	True				
ANR	6145185	Label	case '\\'' :	2470:1:51435:51444	6144184	113	True				
ANR	6145186	Label	"case '\\""' :"	2471:1:51447:51456	6144184	114	True				
ANR	6145187	ExpressionStatement	is_long = 0	2472:2:51460:51471	6144184	115	True				
ANR	6145188	AssignmentExpression	is_long = 0		6144184	0		=			
ANR	6145189	Identifier	is_long		6144184	0					
ANR	6145190	PrimaryExpression	0		6144184	1					
ANR	6145191	Label	str_const :	2473:0:51473:51482	6144184	116	True				
ANR	6145192	Identifier	str_const		6144184	0					
ANR	6145193	CompoundStatement		246:3:5261:5268	6144184	117					
ANR	6145194	IdentifierDeclStatement	CString str ;	2475:3:51491:51502	6144184	0	True				
ANR	6145195	IdentifierDecl	str		6144184	0					
ANR	6145196	IdentifierDeclType	CString		6144184	0					
ANR	6145197	Identifier	str		6144184	1					
ANR	6145198	IdentifierDeclStatement	int sep ;	2476:3:51507:51514	6144184	1	True				
ANR	6145199	IdentifierDecl	sep		6144184	0					
ANR	6145200	IdentifierDeclType	int		6144184	0					
ANR	6145201	Identifier	sep		6144184	1					
ANR	6145202	ExpressionStatement	sep = c	2478:3:51520:51527	6144184	2	True				
ANR	6145203	AssignmentExpression	sep = c		6144184	0		=			
ANR	6145204	Identifier	sep		6144184	0					
ANR	6145205	Identifier	c		6144184	1					
ANR	6145206	ExpressionStatement	cstr_new ( & str )	2481:3:51559:51574	6144184	3	True				
ANR	6145207	CallExpression	cstr_new ( & str )		6144184	0					
ANR	6145208	Callee	cstr_new		6144184	0					
ANR	6145209	Identifier	cstr_new		6144184	0					
ANR	6145210	ArgumentList	& str		6144184	1					
ANR	6145211	Argument	& str		6144184	0					
ANR	6145212	UnaryOperationExpression	& str		6144184	0					
ANR	6145213	UnaryOperator	&		6144184	0					
ANR	6145214	Identifier	str		6144184	1					
ANR	6145215	ExpressionStatement	"p = parse_pp_string ( p , sep , & str )"	2482:3:51579:51613	6144184	4	True				
ANR	6145216	AssignmentExpression	"p = parse_pp_string ( p , sep , & str )"		6144184	0		=			
ANR	6145217	Identifier	p		6144184	0					
ANR	6145218	CallExpression	"parse_pp_string ( p , sep , & str )"		6144184	1					
ANR	6145219	Callee	parse_pp_string		6144184	0					
ANR	6145220	Identifier	parse_pp_string		6144184	0					
ANR	6145221	ArgumentList	p		6144184	1					
ANR	6145222	Argument	p		6144184	0					
ANR	6145223	Identifier	p		6144184	0					
ANR	6145224	Argument	sep		6144184	1					
ANR	6145225	Identifier	sep		6144184	0					
ANR	6145226	Argument	& str		6144184	2					
ANR	6145227	UnaryOperationExpression	& str		6144184	0					
ANR	6145228	UnaryOperator	&		6144184	0					
ANR	6145229	Identifier	str		6144184	1					
ANR	6145230	IfStatement	if ( ! p )		6144184	5					
ANR	6145231	Condition	! p	2483:7:51622:51623	6144184	0	True				
ANR	6145232	UnaryOperationExpression	! p		6144184	0					
ANR	6145233	UnaryOperator	!		6144184	0					
ANR	6145234	Identifier	p		6144184	1					
ANR	6145235	CompoundStatement		253:11:5380:5380	6144184	1					
ANR	6145236	ReturnStatement	return ;	2484:4:51632:51638	6144184	0	True				
ANR	6145237	ExpressionStatement	"cstr_ccat ( & str , '\\0' )"	2486:3:51648:51670	6144184	6	True				
ANR	6145238	CallExpression	"cstr_ccat ( & str , '\\0' )"		6144184	0					
ANR	6145239	Callee	cstr_ccat		6144184	0					
ANR	6145240	Identifier	cstr_ccat		6144184	0					
ANR	6145241	ArgumentList	& str		6144184	1					
ANR	6145242	Argument	& str		6144184	0					
ANR	6145243	UnaryOperationExpression	& str		6144184	0					
ANR	6145244	UnaryOperator	&		6144184	0					
ANR	6145245	Identifier	str		6144184	1					
ANR	6145246	Argument	'\\0'		6144184	1					
ANR	6145247	PrimaryExpression	'\\0'		6144184	0					
ANR	6145248	ExpressionStatement	cstr_reset ( & tokcstr )	2489:3:51731:51752	6144184	7	True				
ANR	6145249	CallExpression	cstr_reset ( & tokcstr )		6144184	0					
ANR	6145250	Callee	cstr_reset		6144184	0					
ANR	6145251	Identifier	cstr_reset		6144184	0					
ANR	6145252	ArgumentList	& tokcstr		6144184	1					
ANR	6145253	Argument	& tokcstr		6144184	0					
ANR	6145254	UnaryOperationExpression	& tokcstr		6144184	0					
ANR	6145255	UnaryOperator	&		6144184	0					
ANR	6145256	Identifier	tokcstr		6144184	1					
ANR	6145257	ExpressionStatement	"parse_escape_string ( & tokcstr , str . data , is_long )"	2490:3:51757:51806	6144184	8	True				
ANR	6145258	CallExpression	"parse_escape_string ( & tokcstr , str . data , is_long )"		6144184	0					
ANR	6145259	Callee	parse_escape_string		6144184	0					
ANR	6145260	Identifier	parse_escape_string		6144184	0					
ANR	6145261	ArgumentList	& tokcstr		6144184	1					
ANR	6145262	Argument	& tokcstr		6144184	0					
ANR	6145263	UnaryOperationExpression	& tokcstr		6144184	0					
ANR	6145264	UnaryOperator	&		6144184	0					
ANR	6145265	Identifier	tokcstr		6144184	1					
ANR	6145266	Argument	str . data		6144184	1					
ANR	6145267	MemberAccess	str . data		6144184	0					
ANR	6145268	Identifier	str		6144184	0					
ANR	6145269	Identifier	data		6144184	1					
ANR	6145270	Argument	is_long		6144184	2					
ANR	6145271	Identifier	is_long		6144184	0					
ANR	6145272	ExpressionStatement	cstr_free ( & str )	2491:3:51811:51827	6144184	9	True				
ANR	6145273	CallExpression	cstr_free ( & str )		6144184	0					
ANR	6145274	Callee	cstr_free		6144184	0					
ANR	6145275	Identifier	cstr_free		6144184	0					
ANR	6145276	ArgumentList	& str		6144184	1					
ANR	6145277	Argument	& str		6144184	0					
ANR	6145278	UnaryOperationExpression	& str		6144184	0					
ANR	6145279	UnaryOperator	&		6144184	0					
ANR	6145280	Identifier	str		6144184	1					
ANR	6145281	IfStatement	if ( sep == '\\'' )		6144184	10					
ANR	6145282	Condition	sep == '\\''	2493:7:51837:51847	6144184	0	True				
ANR	6145283	EqualityExpression	sep == '\\''		6144184	0		==			
ANR	6145284	Identifier	sep		6144184	0					
ANR	6145285	PrimaryExpression	'\\''		6144184	1					
ANR	6145286	CompoundStatement		264:4:5610:5623	6144184	1					
ANR	6145287	IdentifierDeclStatement	int char_size ;	2494:4:51856:51869	6144184	0	True				
ANR	6145288	IdentifierDecl	char_size		6144184	0					
ANR	6145289	IdentifierDeclType	int		6144184	0					
ANR	6145290	Identifier	char_size		6144184	1					
ANR	6145291	IfStatement	if ( ! is_long )		6144184	1					
ANR	6145292	Condition	! is_long	2496:8:51911:51918	6144184	0	True				
ANR	6145293	UnaryOperationExpression	! is_long		6144184	0					
ANR	6145294	UnaryOperator	!		6144184	0					
ANR	6145295	Identifier	is_long		6144184	1					
ANR	6145296	CompoundStatement		266:18:5675:5675	6144184	1					
ANR	6145297	ExpressionStatement	char_size = 1	2497:5:51928:51941	6144184	0	True				
ANR	6145298	AssignmentExpression	char_size = 1		6144184	0		=			
ANR	6145299	Identifier	char_size		6144184	0					
ANR	6145300	PrimaryExpression	1		6144184	1					
ANR	6145301	ElseStatement	else		6144184	0					
ANR	6145302	CompoundStatement		268:11:5708:5708	6144184	0					
ANR	6145303	ExpressionStatement	char_size = sizeof ( nwchar_t )	2499:5:51961:51989	6144184	0	True				
ANR	6145304	AssignmentExpression	char_size = sizeof ( nwchar_t )		6144184	0		=			
ANR	6145305	Identifier	char_size		6144184	0					
ANR	6145306	SizeofExpression	sizeof ( nwchar_t )		6144184	1					
ANR	6145307	Sizeof	sizeof		6144184	0					
ANR	6145308	SizeofOperand	nwchar_t		6144184	1					
ANR	6145309	IfStatement	if ( tokcstr . size <= char_size )		6144184	2					
ANR	6145310	Condition	tokcstr . size <= char_size	2501:8:52005:52029	6144184	0	True				
ANR	6145311	RelationalExpression	tokcstr . size <= char_size		6144184	0		<=			
ANR	6145312	MemberAccess	tokcstr . size		6144184	0					
ANR	6145313	Identifier	tokcstr		6144184	0					
ANR	6145314	Identifier	size		6144184	1					
ANR	6145315	Identifier	char_size		6144184	1					
ANR	6145316	CompoundStatement		271:35:5786:5786	6144184	1					
ANR	6145317	ExpressionStatement	"tcc_error ( ""empty character constant"" )"	2502:5:52039:52077	6144184	0	True				
ANR	6145318	CallExpression	"tcc_error ( ""empty character constant"" )"		6144184	0					
ANR	6145319	Callee	tcc_error		6144184	0					
ANR	6145320	Identifier	tcc_error		6144184	0					
ANR	6145321	ArgumentList	"""empty character constant"""		6144184	1					
ANR	6145322	Argument	"""empty character constant"""		6144184	0					
ANR	6145323	PrimaryExpression	"""empty character constant"""		6144184	0					
ANR	6145324	IfStatement	if ( tokcstr . size > 2 * char_size )		6144184	3					
ANR	6145325	Condition	tokcstr . size > 2 * char_size	2504:8:52093:52120	6144184	0	True				
ANR	6145326	RelationalExpression	tokcstr . size > 2 * char_size		6144184	0		>			
ANR	6145327	MemberAccess	tokcstr . size		6144184	0					
ANR	6145328	Identifier	tokcstr		6144184	0					
ANR	6145329	Identifier	size		6144184	1					
ANR	6145330	MultiplicativeExpression	2 * char_size		6144184	1		*			
ANR	6145331	PrimaryExpression	2		6144184	0					
ANR	6145332	Identifier	char_size		6144184	1					
ANR	6145333	CompoundStatement		274:38:5877:5877	6144184	1					
ANR	6145334	ExpressionStatement	"tcc_warning ( ""multi-character character constant"" )"	2505:5:52130:52180	6144184	0	True				
ANR	6145335	CallExpression	"tcc_warning ( ""multi-character character constant"" )"		6144184	0					
ANR	6145336	Callee	tcc_warning		6144184	0					
ANR	6145337	Identifier	tcc_warning		6144184	0					
ANR	6145338	ArgumentList	"""multi-character character constant"""		6144184	1					
ANR	6145339	Argument	"""multi-character character constant"""		6144184	0					
ANR	6145340	PrimaryExpression	"""multi-character character constant"""		6144184	0					
ANR	6145341	IfStatement	if ( ! is_long )		6144184	4					
ANR	6145342	Condition	! is_long	2507:8:52196:52203	6144184	0	True				
ANR	6145343	UnaryOperationExpression	! is_long		6144184	0					
ANR	6145344	UnaryOperator	!		6144184	0					
ANR	6145345	Identifier	is_long		6144184	1					
ANR	6145346	CompoundStatement		277:18:5960:5960	6144184	1					
ANR	6145347	ExpressionStatement	tokc . i = * ( int8_t * ) tokcstr . data	2508:5:52213:52246	6144184	0	True				
ANR	6145348	AssignmentExpression	tokc . i = * ( int8_t * ) tokcstr . data		6144184	0		=			
ANR	6145349	MemberAccess	tokc . i		6144184	0					
ANR	6145350	Identifier	tokc		6144184	0					
ANR	6145351	Identifier	i		6144184	1					
ANR	6145352	UnaryOperationExpression	* ( int8_t * ) tokcstr . data		6144184	1					
ANR	6145353	UnaryOperator	*		6144184	0					
ANR	6145354	CastExpression	( int8_t * ) tokcstr . data		6144184	1					
ANR	6145355	CastTarget	int8_t *		6144184	0					
ANR	6145356	MemberAccess	tokcstr . data		6144184	1					
ANR	6145357	Identifier	tokcstr		6144184	0					
ANR	6145358	Identifier	data		6144184	1					
ANR	6145359	ExpressionStatement	tok = TOK_CCHAR	2509:5:52253:52268	6144184	1	True				
ANR	6145360	AssignmentExpression	tok = TOK_CCHAR		6144184	0		=			
ANR	6145361	Identifier	tok		6144184	0					
ANR	6145362	Identifier	TOK_CCHAR		6144184	1					
ANR	6145363	ElseStatement	else		6144184	0					
ANR	6145364	CompoundStatement		280:11:6035:6035	6144184	0					
ANR	6145365	ExpressionStatement	tokc . i = * ( nwchar_t * ) tokcstr . data	2511:5:52288:52323	6144184	0	True				
ANR	6145366	AssignmentExpression	tokc . i = * ( nwchar_t * ) tokcstr . data		6144184	0		=			
ANR	6145367	MemberAccess	tokc . i		6144184	0					
ANR	6145368	Identifier	tokc		6144184	0					
ANR	6145369	Identifier	i		6144184	1					
ANR	6145370	UnaryOperationExpression	* ( nwchar_t * ) tokcstr . data		6144184	1					
ANR	6145371	UnaryOperator	*		6144184	0					
ANR	6145372	CastExpression	( nwchar_t * ) tokcstr . data		6144184	1					
ANR	6145373	CastTarget	nwchar_t *		6144184	0					
ANR	6145374	MemberAccess	tokcstr . data		6144184	1					
ANR	6145375	Identifier	tokcstr		6144184	0					
ANR	6145376	Identifier	data		6144184	1					
ANR	6145377	ExpressionStatement	tok = TOK_LCHAR	2512:5:52330:52345	6144184	1	True				
ANR	6145378	AssignmentExpression	tok = TOK_LCHAR		6144184	0		=			
ANR	6145379	Identifier	tok		6144184	0					
ANR	6145380	Identifier	TOK_LCHAR		6144184	1					
ANR	6145381	ElseStatement	else		6144184	0					
ANR	6145382	CompoundStatement		284:10:6117:6117	6144184	0					
ANR	6145383	ExpressionStatement	tokc . cstr = & tokcstr	2515:4:52369:52389	6144184	0	True				
ANR	6145384	AssignmentExpression	tokc . cstr = & tokcstr		6144184	0		=			
ANR	6145385	MemberAccess	tokc . cstr		6144184	0					
ANR	6145386	Identifier	tokc		6144184	0					
ANR	6145387	Identifier	cstr		6144184	1					
ANR	6145388	UnaryOperationExpression	& tokcstr		6144184	1					
ANR	6145389	UnaryOperator	&		6144184	0					
ANR	6145390	Identifier	tokcstr		6144184	1					
ANR	6145391	IfStatement	if ( ! is_long )		6144184	1					
ANR	6145392	Condition	! is_long	2516:8:52399:52406	6144184	0	True				
ANR	6145393	UnaryOperationExpression	! is_long		6144184	0					
ANR	6145394	UnaryOperator	!		6144184	0					
ANR	6145395	Identifier	is_long		6144184	1					
ANR	6145396	CompoundStatement		286:18:6163:6163	6144184	1					
ANR	6145397	ExpressionStatement	tok = TOK_STR	2517:5:52416:52429	6144184	0	True				
ANR	6145398	AssignmentExpression	tok = TOK_STR		6144184	0		=			
ANR	6145399	Identifier	tok		6144184	0					
ANR	6145400	Identifier	TOK_STR		6144184	1					
ANR	6145401	ElseStatement	else		6144184	0					
ANR	6145402	CompoundStatement		288:11:6196:6196	6144184	0					
ANR	6145403	ExpressionStatement	tok = TOK_LSTR	2519:5:52449:52463	6144184	0	True				
ANR	6145404	AssignmentExpression	tok = TOK_LSTR		6144184	0		=			
ANR	6145405	Identifier	tok		6144184	0					
ANR	6145406	Identifier	TOK_LSTR		6144184	1					
ANR	6145407	BreakStatement	break ;	2523:2:52482:52487	6144184	118	True				
ANR	6145408	Label	case '<' :	2525:1:52491:52499	6144184	119	True				
ANR	6145409	ExpressionStatement	"PEEKC ( c , p )"	2526:2:52503:52515	6144184	120	True				
ANR	6145410	CallExpression	"PEEKC ( c , p )"		6144184	0					
ANR	6145411	Callee	PEEKC		6144184	0					
ANR	6145412	Identifier	PEEKC		6144184	0					
ANR	6145413	ArgumentList	c		6144184	1					
ANR	6145414	Argument	c		6144184	0					
ANR	6145415	Identifier	c		6144184	0					
ANR	6145416	Argument	p		6144184	1					
ANR	6145417	Identifier	p		6144184	0					
ANR	6145418	IfStatement	if ( c == '=' )		6144184	121					
ANR	6145419	Condition	c == '='	2527:6:52523:52530	6144184	0	True				
ANR	6145420	EqualityExpression	c == '='		6144184	0		==			
ANR	6145421	Identifier	c		6144184	0					
ANR	6145422	PrimaryExpression	'='		6144184	1					
ANR	6145423	CompoundStatement		297:16:6287:6287	6144184	1					
ANR	6145424	ExpressionStatement	p ++	2528:3:52538:52541	6144184	0	True				
ANR	6145425	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6145426	Identifier	p		6144184	0					
ANR	6145427	IncDec	++		6144184	1					
ANR	6145428	ExpressionStatement	tok = TOK_LE	2529:3:52546:52558	6144184	1	True				
ANR	6145429	AssignmentExpression	tok = TOK_LE		6144184	0		=			
ANR	6145430	Identifier	tok		6144184	0					
ANR	6145431	Identifier	TOK_LE		6144184	1					
ANR	6145432	ElseStatement	else		6144184	0					
ANR	6145433	IfStatement	if ( c == '<' )		6144184	0					
ANR	6145434	Condition	c == '<'	2530:13:52573:52580	6144184	0	True				
ANR	6145435	EqualityExpression	c == '<'		6144184	0		==			
ANR	6145436	Identifier	c		6144184	0					
ANR	6145437	PrimaryExpression	'<'		6144184	1					
ANR	6145438	CompoundStatement		300:23:6337:6337	6144184	1					
ANR	6145439	ExpressionStatement	"PEEKC ( c , p )"	2531:3:52588:52600	6144184	0	True				
ANR	6145440	CallExpression	"PEEKC ( c , p )"		6144184	0					
ANR	6145441	Callee	PEEKC		6144184	0					
ANR	6145442	Identifier	PEEKC		6144184	0					
ANR	6145443	ArgumentList	c		6144184	1					
ANR	6145444	Argument	c		6144184	0					
ANR	6145445	Identifier	c		6144184	0					
ANR	6145446	Argument	p		6144184	1					
ANR	6145447	Identifier	p		6144184	0					
ANR	6145448	IfStatement	if ( c == '=' )		6144184	1					
ANR	6145449	Condition	c == '='	2532:7:52609:52616	6144184	0	True				
ANR	6145450	EqualityExpression	c == '='		6144184	0		==			
ANR	6145451	Identifier	c		6144184	0					
ANR	6145452	PrimaryExpression	'='		6144184	1					
ANR	6145453	CompoundStatement		302:17:6373:6373	6144184	1					
ANR	6145454	ExpressionStatement	p ++	2533:4:52625:52628	6144184	0	True				
ANR	6145455	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6145456	Identifier	p		6144184	0					
ANR	6145457	IncDec	++		6144184	1					
ANR	6145458	ExpressionStatement	tok = TOK_A_SHL	2534:4:52634:52649	6144184	1	True				
ANR	6145459	AssignmentExpression	tok = TOK_A_SHL		6144184	0		=			
ANR	6145460	Identifier	tok		6144184	0					
ANR	6145461	Identifier	TOK_A_SHL		6144184	1					
ANR	6145462	ElseStatement	else		6144184	0					
ANR	6145463	CompoundStatement		305:10:6415:6415	6144184	0					
ANR	6145464	ExpressionStatement	tok = TOK_SHL	2536:4:52667:52680	6144184	0	True				
ANR	6145465	AssignmentExpression	tok = TOK_SHL		6144184	0		=			
ANR	6145466	Identifier	tok		6144184	0					
ANR	6145467	Identifier	TOK_SHL		6144184	1					
ANR	6145468	ElseStatement	else		6144184	0					
ANR	6145469	CompoundStatement		308:9:6450:6450	6144184	0					
ANR	6145470	ExpressionStatement	tok = TOK_LT	2539:3:52701:52713	6144184	0	True				
ANR	6145471	AssignmentExpression	tok = TOK_LT		6144184	0		=			
ANR	6145472	Identifier	tok		6144184	0					
ANR	6145473	Identifier	TOK_LT		6144184	1					
ANR	6145474	BreakStatement	break ;	2541:2:52721:52726	6144184	122	True				
ANR	6145475	Label	case '>' :	2543:1:52730:52738	6144184	123	True				
ANR	6145476	ExpressionStatement	"PEEKC ( c , p )"	2544:2:52742:52754	6144184	124	True				
ANR	6145477	CallExpression	"PEEKC ( c , p )"		6144184	0					
ANR	6145478	Callee	PEEKC		6144184	0					
ANR	6145479	Identifier	PEEKC		6144184	0					
ANR	6145480	ArgumentList	c		6144184	1					
ANR	6145481	Argument	c		6144184	0					
ANR	6145482	Identifier	c		6144184	0					
ANR	6145483	Argument	p		6144184	1					
ANR	6145484	Identifier	p		6144184	0					
ANR	6145485	IfStatement	if ( c == '=' )		6144184	125					
ANR	6145486	Condition	c == '='	2545:6:52762:52769	6144184	0	True				
ANR	6145487	EqualityExpression	c == '='		6144184	0		==			
ANR	6145488	Identifier	c		6144184	0					
ANR	6145489	PrimaryExpression	'='		6144184	1					
ANR	6145490	CompoundStatement		315:16:6526:6526	6144184	1					
ANR	6145491	ExpressionStatement	p ++	2546:3:52777:52780	6144184	0	True				
ANR	6145492	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6145493	Identifier	p		6144184	0					
ANR	6145494	IncDec	++		6144184	1					
ANR	6145495	ExpressionStatement	tok = TOK_GE	2547:3:52785:52797	6144184	1	True				
ANR	6145496	AssignmentExpression	tok = TOK_GE		6144184	0		=			
ANR	6145497	Identifier	tok		6144184	0					
ANR	6145498	Identifier	TOK_GE		6144184	1					
ANR	6145499	ElseStatement	else		6144184	0					
ANR	6145500	IfStatement	if ( c == '>' )		6144184	0					
ANR	6145501	Condition	c == '>'	2548:13:52812:52819	6144184	0	True				
ANR	6145502	EqualityExpression	c == '>'		6144184	0		==			
ANR	6145503	Identifier	c		6144184	0					
ANR	6145504	PrimaryExpression	'>'		6144184	1					
ANR	6145505	CompoundStatement		318:23:6576:6576	6144184	1					
ANR	6145506	ExpressionStatement	"PEEKC ( c , p )"	2549:3:52827:52839	6144184	0	True				
ANR	6145507	CallExpression	"PEEKC ( c , p )"		6144184	0					
ANR	6145508	Callee	PEEKC		6144184	0					
ANR	6145509	Identifier	PEEKC		6144184	0					
ANR	6145510	ArgumentList	c		6144184	1					
ANR	6145511	Argument	c		6144184	0					
ANR	6145512	Identifier	c		6144184	0					
ANR	6145513	Argument	p		6144184	1					
ANR	6145514	Identifier	p		6144184	0					
ANR	6145515	IfStatement	if ( c == '=' )		6144184	1					
ANR	6145516	Condition	c == '='	2550:7:52848:52855	6144184	0	True				
ANR	6145517	EqualityExpression	c == '='		6144184	0		==			
ANR	6145518	Identifier	c		6144184	0					
ANR	6145519	PrimaryExpression	'='		6144184	1					
ANR	6145520	CompoundStatement		320:17:6612:6612	6144184	1					
ANR	6145521	ExpressionStatement	p ++	2551:4:52864:52867	6144184	0	True				
ANR	6145522	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6145523	Identifier	p		6144184	0					
ANR	6145524	IncDec	++		6144184	1					
ANR	6145525	ExpressionStatement	tok = TOK_A_SAR	2552:4:52873:52888	6144184	1	True				
ANR	6145526	AssignmentExpression	tok = TOK_A_SAR		6144184	0		=			
ANR	6145527	Identifier	tok		6144184	0					
ANR	6145528	Identifier	TOK_A_SAR		6144184	1					
ANR	6145529	ElseStatement	else		6144184	0					
ANR	6145530	CompoundStatement		323:10:6654:6654	6144184	0					
ANR	6145531	ExpressionStatement	tok = TOK_SAR	2554:4:52906:52919	6144184	0	True				
ANR	6145532	AssignmentExpression	tok = TOK_SAR		6144184	0		=			
ANR	6145533	Identifier	tok		6144184	0					
ANR	6145534	Identifier	TOK_SAR		6144184	1					
ANR	6145535	ElseStatement	else		6144184	0					
ANR	6145536	CompoundStatement		326:9:6689:6689	6144184	0					
ANR	6145537	ExpressionStatement	tok = TOK_GT	2557:3:52940:52952	6144184	0	True				
ANR	6145538	AssignmentExpression	tok = TOK_GT		6144184	0		=			
ANR	6145539	Identifier	tok		6144184	0					
ANR	6145540	Identifier	TOK_GT		6144184	1					
ANR	6145541	BreakStatement	break ;	2559:2:52960:52965	6144184	126	True				
ANR	6145542	Label	case '&' :	2561:1:52969:52977	6144184	127	True				
ANR	6145543	ExpressionStatement	"PEEKC ( c , p )"	2562:2:52981:52993	6144184	128	True				
ANR	6145544	CallExpression	"PEEKC ( c , p )"		6144184	0					
ANR	6145545	Callee	PEEKC		6144184	0					
ANR	6145546	Identifier	PEEKC		6144184	0					
ANR	6145547	ArgumentList	c		6144184	1					
ANR	6145548	Argument	c		6144184	0					
ANR	6145549	Identifier	c		6144184	0					
ANR	6145550	Argument	p		6144184	1					
ANR	6145551	Identifier	p		6144184	0					
ANR	6145552	IfStatement	if ( c == '&' )		6144184	129					
ANR	6145553	Condition	c == '&'	2563:6:53001:53008	6144184	0	True				
ANR	6145554	EqualityExpression	c == '&'		6144184	0		==			
ANR	6145555	Identifier	c		6144184	0					
ANR	6145556	PrimaryExpression	'&'		6144184	1					
ANR	6145557	CompoundStatement		333:16:6765:6765	6144184	1					
ANR	6145558	ExpressionStatement	p ++	2564:3:53016:53019	6144184	0	True				
ANR	6145559	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6145560	Identifier	p		6144184	0					
ANR	6145561	IncDec	++		6144184	1					
ANR	6145562	ExpressionStatement	tok = TOK_LAND	2565:3:53024:53038	6144184	1	True				
ANR	6145563	AssignmentExpression	tok = TOK_LAND		6144184	0		=			
ANR	6145564	Identifier	tok		6144184	0					
ANR	6145565	Identifier	TOK_LAND		6144184	1					
ANR	6145566	ElseStatement	else		6144184	0					
ANR	6145567	IfStatement	if ( c == '=' )		6144184	0					
ANR	6145568	Condition	c == '='	2566:13:53053:53060	6144184	0	True				
ANR	6145569	EqualityExpression	c == '='		6144184	0		==			
ANR	6145570	Identifier	c		6144184	0					
ANR	6145571	PrimaryExpression	'='		6144184	1					
ANR	6145572	CompoundStatement		336:23:6817:6817	6144184	1					
ANR	6145573	ExpressionStatement	p ++	2567:3:53068:53071	6144184	0	True				
ANR	6145574	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6145575	Identifier	p		6144184	0					
ANR	6145576	IncDec	++		6144184	1					
ANR	6145577	ExpressionStatement	tok = TOK_A_AND	2568:3:53076:53091	6144184	1	True				
ANR	6145578	AssignmentExpression	tok = TOK_A_AND		6144184	0		=			
ANR	6145579	Identifier	tok		6144184	0					
ANR	6145580	Identifier	TOK_A_AND		6144184	1					
ANR	6145581	ElseStatement	else		6144184	0					
ANR	6145582	CompoundStatement		339:9:6856:6856	6144184	0					
ANR	6145583	ExpressionStatement	tok = '&'	2570:3:53107:53116	6144184	0	True				
ANR	6145584	AssignmentExpression	tok = '&'		6144184	0		=			
ANR	6145585	Identifier	tok		6144184	0					
ANR	6145586	PrimaryExpression	'&'		6144184	1					
ANR	6145587	BreakStatement	break ;	2572:2:53124:53129	6144184	130	True				
ANR	6145588	Label	case '|' :	2574:1:53133:53141	6144184	131	True				
ANR	6145589	ExpressionStatement	"PEEKC ( c , p )"	2575:2:53145:53157	6144184	132	True				
ANR	6145590	CallExpression	"PEEKC ( c , p )"		6144184	0					
ANR	6145591	Callee	PEEKC		6144184	0					
ANR	6145592	Identifier	PEEKC		6144184	0					
ANR	6145593	ArgumentList	c		6144184	1					
ANR	6145594	Argument	c		6144184	0					
ANR	6145595	Identifier	c		6144184	0					
ANR	6145596	Argument	p		6144184	1					
ANR	6145597	Identifier	p		6144184	0					
ANR	6145598	IfStatement	if ( c == '|' )		6144184	133					
ANR	6145599	Condition	c == '|'	2576:6:53165:53172	6144184	0	True				
ANR	6145600	EqualityExpression	c == '|'		6144184	0		==			
ANR	6145601	Identifier	c		6144184	0					
ANR	6145602	PrimaryExpression	'|'		6144184	1					
ANR	6145603	CompoundStatement		346:16:6929:6929	6144184	1					
ANR	6145604	ExpressionStatement	p ++	2577:3:53180:53183	6144184	0	True				
ANR	6145605	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6145606	Identifier	p		6144184	0					
ANR	6145607	IncDec	++		6144184	1					
ANR	6145608	ExpressionStatement	tok = TOK_LOR	2578:3:53188:53201	6144184	1	True				
ANR	6145609	AssignmentExpression	tok = TOK_LOR		6144184	0		=			
ANR	6145610	Identifier	tok		6144184	0					
ANR	6145611	Identifier	TOK_LOR		6144184	1					
ANR	6145612	ElseStatement	else		6144184	0					
ANR	6145613	IfStatement	if ( c == '=' )		6144184	0					
ANR	6145614	Condition	c == '='	2579:13:53216:53223	6144184	0	True				
ANR	6145615	EqualityExpression	c == '='		6144184	0		==			
ANR	6145616	Identifier	c		6144184	0					
ANR	6145617	PrimaryExpression	'='		6144184	1					
ANR	6145618	CompoundStatement		349:23:6980:6980	6144184	1					
ANR	6145619	ExpressionStatement	p ++	2580:3:53231:53234	6144184	0	True				
ANR	6145620	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6145621	Identifier	p		6144184	0					
ANR	6145622	IncDec	++		6144184	1					
ANR	6145623	ExpressionStatement	tok = TOK_A_OR	2581:3:53239:53253	6144184	1	True				
ANR	6145624	AssignmentExpression	tok = TOK_A_OR		6144184	0		=			
ANR	6145625	Identifier	tok		6144184	0					
ANR	6145626	Identifier	TOK_A_OR		6144184	1					
ANR	6145627	ElseStatement	else		6144184	0					
ANR	6145628	CompoundStatement		352:9:7018:7018	6144184	0					
ANR	6145629	ExpressionStatement	tok = '|'	2583:3:53269:53278	6144184	0	True				
ANR	6145630	AssignmentExpression	tok = '|'		6144184	0		=			
ANR	6145631	Identifier	tok		6144184	0					
ANR	6145632	PrimaryExpression	'|'		6144184	1					
ANR	6145633	BreakStatement	break ;	2585:2:53286:53291	6144184	134	True				
ANR	6145634	Label	case '+' :	2587:1:53295:53303	6144184	135	True				
ANR	6145635	ExpressionStatement	"PEEKC ( c , p )"	2588:2:53307:53319	6144184	136	True				
ANR	6145636	CallExpression	"PEEKC ( c , p )"		6144184	0					
ANR	6145637	Callee	PEEKC		6144184	0					
ANR	6145638	Identifier	PEEKC		6144184	0					
ANR	6145639	ArgumentList	c		6144184	1					
ANR	6145640	Argument	c		6144184	0					
ANR	6145641	Identifier	c		6144184	0					
ANR	6145642	Argument	p		6144184	1					
ANR	6145643	Identifier	p		6144184	0					
ANR	6145644	IfStatement	if ( c == '+' )		6144184	137					
ANR	6145645	Condition	c == '+'	2589:6:53327:53334	6144184	0	True				
ANR	6145646	EqualityExpression	c == '+'		6144184	0		==			
ANR	6145647	Identifier	c		6144184	0					
ANR	6145648	PrimaryExpression	'+'		6144184	1					
ANR	6145649	CompoundStatement		359:16:7091:7091	6144184	1					
ANR	6145650	ExpressionStatement	p ++	2590:3:53342:53345	6144184	0	True				
ANR	6145651	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6145652	Identifier	p		6144184	0					
ANR	6145653	IncDec	++		6144184	1					
ANR	6145654	ExpressionStatement	tok = TOK_INC	2591:3:53350:53363	6144184	1	True				
ANR	6145655	AssignmentExpression	tok = TOK_INC		6144184	0		=			
ANR	6145656	Identifier	tok		6144184	0					
ANR	6145657	Identifier	TOK_INC		6144184	1					
ANR	6145658	ElseStatement	else		6144184	0					
ANR	6145659	IfStatement	if ( c == '=' )		6144184	0					
ANR	6145660	Condition	c == '='	2592:13:53378:53385	6144184	0	True				
ANR	6145661	EqualityExpression	c == '='		6144184	0		==			
ANR	6145662	Identifier	c		6144184	0					
ANR	6145663	PrimaryExpression	'='		6144184	1					
ANR	6145664	CompoundStatement		362:23:7142:7142	6144184	1					
ANR	6145665	ExpressionStatement	p ++	2593:3:53393:53396	6144184	0	True				
ANR	6145666	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6145667	Identifier	p		6144184	0					
ANR	6145668	IncDec	++		6144184	1					
ANR	6145669	ExpressionStatement	tok = TOK_A_ADD	2594:3:53401:53416	6144184	1	True				
ANR	6145670	AssignmentExpression	tok = TOK_A_ADD		6144184	0		=			
ANR	6145671	Identifier	tok		6144184	0					
ANR	6145672	Identifier	TOK_A_ADD		6144184	1					
ANR	6145673	ElseStatement	else		6144184	0					
ANR	6145674	CompoundStatement		365:9:7181:7181	6144184	0					
ANR	6145675	ExpressionStatement	tok = '+'	2596:3:53432:53441	6144184	0	True				
ANR	6145676	AssignmentExpression	tok = '+'		6144184	0		=			
ANR	6145677	Identifier	tok		6144184	0					
ANR	6145678	PrimaryExpression	'+'		6144184	1					
ANR	6145679	BreakStatement	break ;	2598:2:53449:53454	6144184	138	True				
ANR	6145680	Label	case '-' :	2600:1:53458:53466	6144184	139	True				
ANR	6145681	ExpressionStatement	"PEEKC ( c , p )"	2601:2:53470:53482	6144184	140	True				
ANR	6145682	CallExpression	"PEEKC ( c , p )"		6144184	0					
ANR	6145683	Callee	PEEKC		6144184	0					
ANR	6145684	Identifier	PEEKC		6144184	0					
ANR	6145685	ArgumentList	c		6144184	1					
ANR	6145686	Argument	c		6144184	0					
ANR	6145687	Identifier	c		6144184	0					
ANR	6145688	Argument	p		6144184	1					
ANR	6145689	Identifier	p		6144184	0					
ANR	6145690	IfStatement	if ( c == '-' )		6144184	141					
ANR	6145691	Condition	c == '-'	2602:6:53490:53497	6144184	0	True				
ANR	6145692	EqualityExpression	c == '-'		6144184	0		==			
ANR	6145693	Identifier	c		6144184	0					
ANR	6145694	PrimaryExpression	'-'		6144184	1					
ANR	6145695	CompoundStatement		372:16:7254:7254	6144184	1					
ANR	6145696	ExpressionStatement	p ++	2603:3:53505:53508	6144184	0	True				
ANR	6145697	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6145698	Identifier	p		6144184	0					
ANR	6145699	IncDec	++		6144184	1					
ANR	6145700	ExpressionStatement	tok = TOK_DEC	2604:3:53513:53526	6144184	1	True				
ANR	6145701	AssignmentExpression	tok = TOK_DEC		6144184	0		=			
ANR	6145702	Identifier	tok		6144184	0					
ANR	6145703	Identifier	TOK_DEC		6144184	1					
ANR	6145704	ElseStatement	else		6144184	0					
ANR	6145705	IfStatement	if ( c == '=' )		6144184	0					
ANR	6145706	Condition	c == '='	2605:13:53541:53548	6144184	0	True				
ANR	6145707	EqualityExpression	c == '='		6144184	0		==			
ANR	6145708	Identifier	c		6144184	0					
ANR	6145709	PrimaryExpression	'='		6144184	1					
ANR	6145710	CompoundStatement		375:23:7305:7305	6144184	1					
ANR	6145711	ExpressionStatement	p ++	2606:3:53556:53559	6144184	0	True				
ANR	6145712	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6145713	Identifier	p		6144184	0					
ANR	6145714	IncDec	++		6144184	1					
ANR	6145715	ExpressionStatement	tok = TOK_A_SUB	2607:3:53564:53579	6144184	1	True				
ANR	6145716	AssignmentExpression	tok = TOK_A_SUB		6144184	0		=			
ANR	6145717	Identifier	tok		6144184	0					
ANR	6145718	Identifier	TOK_A_SUB		6144184	1					
ANR	6145719	ElseStatement	else		6144184	0					
ANR	6145720	IfStatement	if ( c == '>' )		6144184	0					
ANR	6145721	Condition	c == '>'	2608:13:53594:53601	6144184	0	True				
ANR	6145722	EqualityExpression	c == '>'		6144184	0		==			
ANR	6145723	Identifier	c		6144184	0					
ANR	6145724	PrimaryExpression	'>'		6144184	1					
ANR	6145725	CompoundStatement		378:23:7358:7358	6144184	1					
ANR	6145726	ExpressionStatement	p ++	2609:3:53609:53612	6144184	0	True				
ANR	6145727	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6145728	Identifier	p		6144184	0					
ANR	6145729	IncDec	++		6144184	1					
ANR	6145730	ExpressionStatement	tok = TOK_ARROW	2610:3:53617:53632	6144184	1	True				
ANR	6145731	AssignmentExpression	tok = TOK_ARROW		6144184	0		=			
ANR	6145732	Identifier	tok		6144184	0					
ANR	6145733	Identifier	TOK_ARROW		6144184	1					
ANR	6145734	ElseStatement	else		6144184	0					
ANR	6145735	CompoundStatement		381:9:7397:7397	6144184	0					
ANR	6145736	ExpressionStatement	tok = '-'	2612:3:53648:53657	6144184	0	True				
ANR	6145737	AssignmentExpression	tok = '-'		6144184	0		=			
ANR	6145738	Identifier	tok		6144184	0					
ANR	6145739	PrimaryExpression	'-'		6144184	1					
ANR	6145740	BreakStatement	break ;	2614:2:53665:53670	6144184	142	True				
ANR	6145741	Statement	PARSE2	2616:2:53675:53680	6144184	143	True				
ANR	6145742	Statement	(	2616:9:53682:53682	6144184	144	True				
ANR	6145743	Statement	'!'	2616:10:53683:53685	6144184	145	True				
ANR	6145744	Statement	","	2616:13:53686:53686	6144184	146	True				
ANR	6145745	Statement	'!'	2616:15:53688:53690	6144184	147	True				
ANR	6145746	Statement	","	2616:18:53691:53691	6144184	148	True				
ANR	6145747	Statement	'='	2616:20:53693:53695	6144184	149	True				
ANR	6145748	Statement	","	2616:23:53696:53696	6144184	150	True				
ANR	6145749	Statement	TOK_NE	2616:25:53698:53703	6144184	151	True				
ANR	6145750	Statement	)	2616:31:53704:53704	6144184	152	True				
ANR	6145751	Statement	PARSE2	2617:2:53708:53713	6144184	153	True				
ANR	6145752	Statement	(	2617:9:53715:53715	6144184	154	True				
ANR	6145753	Statement	'='	2617:10:53716:53718	6144184	155	True				
ANR	6145754	Statement	","	2617:13:53719:53719	6144184	156	True				
ANR	6145755	Statement	'='	2617:15:53721:53723	6144184	157	True				
ANR	6145756	Statement	","	2617:18:53724:53724	6144184	158	True				
ANR	6145757	Statement	'='	2617:20:53726:53728	6144184	159	True				
ANR	6145758	Statement	","	2617:23:53729:53729	6144184	160	True				
ANR	6145759	Statement	TOK_EQ	2617:25:53731:53736	6144184	161	True				
ANR	6145760	Statement	)	2617:31:53737:53737	6144184	162	True				
ANR	6145761	Statement	PARSE2	2618:2:53741:53746	6144184	163	True				
ANR	6145762	Statement	(	2618:9:53748:53748	6144184	164	True				
ANR	6145763	Statement	'*'	2618:10:53749:53751	6144184	165	True				
ANR	6145764	Statement	","	2618:13:53752:53752	6144184	166	True				
ANR	6145765	Statement	'*'	2618:15:53754:53756	6144184	167	True				
ANR	6145766	Statement	","	2618:18:53757:53757	6144184	168	True				
ANR	6145767	Statement	'='	2618:20:53759:53761	6144184	169	True				
ANR	6145768	Statement	","	2618:23:53762:53762	6144184	170	True				
ANR	6145769	Statement	TOK_A_MUL	2618:25:53764:53772	6144184	171	True				
ANR	6145770	Statement	)	2618:34:53773:53773	6144184	172	True				
ANR	6145771	Statement	PARSE2	2619:2:53777:53782	6144184	173	True				
ANR	6145772	Statement	(	2619:9:53784:53784	6144184	174	True				
ANR	6145773	Statement	'%'	2619:10:53785:53787	6144184	175	True				
ANR	6145774	Statement	","	2619:13:53788:53788	6144184	176	True				
ANR	6145775	Statement	'%'	2619:15:53790:53792	6144184	177	True				
ANR	6145776	Statement	","	2619:18:53793:53793	6144184	178	True				
ANR	6145777	Statement	'='	2619:20:53795:53797	6144184	179	True				
ANR	6145778	Statement	","	2619:23:53798:53798	6144184	180	True				
ANR	6145779	Statement	TOK_A_MOD	2619:25:53800:53808	6144184	181	True				
ANR	6145780	Statement	)	2619:34:53809:53809	6144184	182	True				
ANR	6145781	Statement	PARSE2	2620:2:53813:53818	6144184	183	True				
ANR	6145782	Statement	(	2620:9:53820:53820	6144184	184	True				
ANR	6145783	Statement	'^'	2620:10:53821:53823	6144184	185	True				
ANR	6145784	Statement	","	2620:13:53824:53824	6144184	186	True				
ANR	6145785	Statement	'^'	2620:15:53826:53828	6144184	187	True				
ANR	6145786	Statement	","	2620:18:53829:53829	6144184	188	True				
ANR	6145787	Statement	'='	2620:20:53831:53833	6144184	189	True				
ANR	6145788	Statement	","	2620:23:53834:53834	6144184	190	True				
ANR	6145789	Statement	TOK_A_XOR	2620:25:53836:53844	6144184	191	True				
ANR	6145790	Statement	)	2620:34:53845:53845	6144184	192	True				
ANR	6145791	Label	case '/' :	2623:1:53877:53885	6144184	193	True				
ANR	6145792	ExpressionStatement	"PEEKC ( c , p )"	2624:2:53889:53901	6144184	194	True				
ANR	6145793	CallExpression	"PEEKC ( c , p )"		6144184	0					
ANR	6145794	Callee	PEEKC		6144184	0					
ANR	6145795	Identifier	PEEKC		6144184	0					
ANR	6145796	ArgumentList	c		6144184	1					
ANR	6145797	Argument	c		6144184	0					
ANR	6145798	Identifier	c		6144184	0					
ANR	6145799	Argument	p		6144184	1					
ANR	6145800	Identifier	p		6144184	0					
ANR	6145801	IfStatement	if ( c == '*' )		6144184	195					
ANR	6145802	Condition	c == '*'	2625:6:53909:53916	6144184	0	True				
ANR	6145803	EqualityExpression	c == '*'		6144184	0		==			
ANR	6145804	Identifier	c		6144184	0					
ANR	6145805	PrimaryExpression	'*'		6144184	1					
ANR	6145806	CompoundStatement		395:16:7673:7673	6144184	1					
ANR	6145807	ExpressionStatement	p = parse_comment ( p )	2626:3:53924:53945	6144184	0	True				
ANR	6145808	AssignmentExpression	p = parse_comment ( p )		6144184	0		=			
ANR	6145809	Identifier	p		6144184	0					
ANR	6145810	CallExpression	parse_comment ( p )		6144184	1					
ANR	6145811	Callee	parse_comment		6144184	0					
ANR	6145812	Identifier	parse_comment		6144184	0					
ANR	6145813	ArgumentList	p		6144184	1					
ANR	6145814	Argument	p		6144184	0					
ANR	6145815	Identifier	p		6144184	0					
ANR	6145816	ExpressionStatement	tok = ' '	2628:3:53988:53997	6144184	1	True				
ANR	6145817	AssignmentExpression	tok = ' '		6144184	0		=			
ANR	6145818	Identifier	tok		6144184	0					
ANR	6145819	PrimaryExpression	' '		6144184	1					
ANR	6145820	GotoStatement	goto keep_tok_flags ;	2629:3:54002:54021	6144184	2	True				
ANR	6145821	Identifier	keep_tok_flags		6144184	0					
ANR	6145822	ElseStatement	else		6144184	0					
ANR	6145823	IfStatement	if ( c == '/' )		6144184	0					
ANR	6145824	Condition	c == '/'	2630:13:54036:54043	6144184	0	True				
ANR	6145825	EqualityExpression	c == '/'		6144184	0		==			
ANR	6145826	Identifier	c		6144184	0					
ANR	6145827	PrimaryExpression	'/'		6144184	1					
ANR	6145828	CompoundStatement		400:23:7800:7800	6144184	1					
ANR	6145829	ExpressionStatement	p = parse_line_comment ( p )	2631:3:54051:54077	6144184	0	True				
ANR	6145830	AssignmentExpression	p = parse_line_comment ( p )		6144184	0		=			
ANR	6145831	Identifier	p		6144184	0					
ANR	6145832	CallExpression	parse_line_comment ( p )		6144184	1					
ANR	6145833	Callee	parse_line_comment		6144184	0					
ANR	6145834	Identifier	parse_line_comment		6144184	0					
ANR	6145835	ArgumentList	p		6144184	1					
ANR	6145836	Argument	p		6144184	0					
ANR	6145837	Identifier	p		6144184	0					
ANR	6145838	ExpressionStatement	tok = ' '	2632:3:54082:54091	6144184	1	True				
ANR	6145839	AssignmentExpression	tok = ' '		6144184	0		=			
ANR	6145840	Identifier	tok		6144184	0					
ANR	6145841	PrimaryExpression	' '		6144184	1					
ANR	6145842	GotoStatement	goto keep_tok_flags ;	2633:3:54096:54115	6144184	2	True				
ANR	6145843	Identifier	keep_tok_flags		6144184	0					
ANR	6145844	ElseStatement	else		6144184	0					
ANR	6145845	IfStatement	if ( c == '=' )		6144184	0					
ANR	6145846	Condition	c == '='	2634:13:54130:54137	6144184	0	True				
ANR	6145847	EqualityExpression	c == '='		6144184	0		==			
ANR	6145848	Identifier	c		6144184	0					
ANR	6145849	PrimaryExpression	'='		6144184	1					
ANR	6145850	CompoundStatement		404:23:7894:7894	6144184	1					
ANR	6145851	ExpressionStatement	p ++	2635:3:54145:54148	6144184	0	True				
ANR	6145852	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6145853	Identifier	p		6144184	0					
ANR	6145854	IncDec	++		6144184	1					
ANR	6145855	ExpressionStatement	tok = TOK_A_DIV	2636:3:54153:54168	6144184	1	True				
ANR	6145856	AssignmentExpression	tok = TOK_A_DIV		6144184	0		=			
ANR	6145857	Identifier	tok		6144184	0					
ANR	6145858	Identifier	TOK_A_DIV		6144184	1					
ANR	6145859	ElseStatement	else		6144184	0					
ANR	6145860	CompoundStatement		407:9:7933:7933	6144184	0					
ANR	6145861	ExpressionStatement	tok = '/'	2638:3:54184:54193	6144184	0	True				
ANR	6145862	AssignmentExpression	tok = '/'		6144184	0		=			
ANR	6145863	Identifier	tok		6144184	0					
ANR	6145864	PrimaryExpression	'/'		6144184	1					
ANR	6145865	BreakStatement	break ;	2640:2:54201:54206	6144184	196	True				
ANR	6145866	Label	case '(' :	2643:1:54231:54239	6144184	197	True				
ANR	6145867	Label	case ')' :	2644:1:54242:54250	6144184	198	True				
ANR	6145868	Label	case '[' :	2645:1:54253:54261	6144184	199	True				
ANR	6145869	Label	case ']' :	2646:1:54264:54272	6144184	200	True				
ANR	6145870	Label	case '{' :	2647:1:54275:54283	6144184	201	True				
ANR	6145871	Label	case '}' :	2648:1:54286:54294	6144184	202	True				
ANR	6145872	Label	"case ',' :"	2649:1:54297:54305	6144184	203	True				
ANR	6145873	Label	case ';' :	2650:1:54308:54316	6144184	204	True				
ANR	6145874	Label	case ':' :	2651:1:54319:54327	6144184	205	True				
ANR	6145875	Label	case '?' :	2652:1:54330:54338	6144184	206	True				
ANR	6145876	Label	case '~' :	2653:1:54341:54349	6144184	207	True				
ANR	6145877	Label	case '$' :	2654:1:54352:54360	6144184	208	True				
ANR	6145878	Label	case '@' :	2655:1:54392:54400	6144184	209	True				
ANR	6145879	ExpressionStatement	tok = c	2656:2:54415:54422	6144184	210	True				
ANR	6145880	AssignmentExpression	tok = c		6144184	0		=			
ANR	6145881	Identifier	tok		6144184	0					
ANR	6145882	Identifier	c		6144184	1					
ANR	6145883	ExpressionStatement	p ++	2657:2:54426:54429	6144184	211	True				
ANR	6145884	PostIncDecOperationExpression	p ++		6144184	0					
ANR	6145885	Identifier	p		6144184	0					
ANR	6145886	IncDec	++		6144184	1					
ANR	6145887	BreakStatement	break ;	2658:2:54433:54438	6144184	212	True				
ANR	6145888	Label	default :	2659:1:54441:54448	6144184	213	True				
ANR	6145889	Identifier	default		6144184	0					
ANR	6145890	ExpressionStatement	"tcc_error ( ""unrecognized character \\\\x%02x"" , c )"	2660:2:54452:54499	6144184	214	True				
ANR	6145891	CallExpression	"tcc_error ( ""unrecognized character \\\\x%02x"" , c )"		6144184	0					
ANR	6145892	Callee	tcc_error		6144184	0					
ANR	6145893	Identifier	tcc_error		6144184	0					
ANR	6145894	ArgumentList	"""unrecognized character \\\\x%02x"""		6144184	1					
ANR	6145895	Argument	"""unrecognized character \\\\x%02x"""		6144184	0					
ANR	6145896	PrimaryExpression	"""unrecognized character \\\\x%02x"""		6144184	0					
ANR	6145897	Argument	c		6144184	1					
ANR	6145898	Identifier	c		6144184	0					
ANR	6145899	BreakStatement	break ;	2661:2:54503:54508	6144184	215	True				
ANR	6145900	ExpressionStatement	tok_flags = 0	2663:1:54514:54527	6144184	8	True				
ANR	6145901	AssignmentExpression	tok_flags = 0		6144184	0		=			
ANR	6145902	Identifier	tok_flags		6144184	0					
ANR	6145903	PrimaryExpression	0		6144184	1					
ANR	6145904	Label	keep_tok_flags :	2664:0:54529:54543	6144184	9	True				
ANR	6145905	Identifier	keep_tok_flags		6144184	0					
ANR	6145906	ExpressionStatement	file -> buf_ptr = p	2665:1:54546:54563	6144184	10	True				
ANR	6145907	AssignmentExpression	file -> buf_ptr = p		6144184	0		=			
ANR	6145908	PtrMemberAccess	file -> buf_ptr		6144184	0					
ANR	6145909	Identifier	file		6144184	0					
ANR	6145910	Identifier	buf_ptr		6144184	1					
ANR	6145911	Identifier	p		6144184	1					
ANR	6145912	ExpressionStatement	"printf ( ""token = %s\\n"" , get_tok_str ( tok , & tokc ) )"	2667:1:54591:54640	6144184	11	True				
ANR	6145913	CallExpression	"printf ( ""token = %s\\n"" , get_tok_str ( tok , & tokc ) )"		6144184	0					
ANR	6145914	Callee	printf		6144184	0					
ANR	6145915	Identifier	printf		6144184	0					
ANR	6145916	ArgumentList	"""token = %s\\n"""		6144184	1					
ANR	6145917	Argument	"""token = %s\\n"""		6144184	0					
ANR	6145918	PrimaryExpression	"""token = %s\\n"""		6144184	0					
ANR	6145919	Argument	"get_tok_str ( tok , & tokc )"		6144184	1					
ANR	6145920	CallExpression	"get_tok_str ( tok , & tokc )"		6144184	0					
ANR	6145921	Callee	get_tok_str		6144184	0					
ANR	6145922	Identifier	get_tok_str		6144184	0					
ANR	6145923	ArgumentList	tok		6144184	1					
ANR	6145924	Argument	tok		6144184	0					
ANR	6145925	Identifier	tok		6144184	0					
ANR	6145926	Argument	& tokc		6144184	1					
ANR	6145927	UnaryOperationExpression	& tokc		6144184	0					
ANR	6145928	UnaryOperator	&		6144184	0					
ANR	6145929	Identifier	tokc		6144184	1					
ANR	6145930	ReturnType	static inline void		6144184	1					
ANR	6145931	Identifier	next_nomacro1		6144184	2					
ANR	6145932	ParameterList			6144184	3					
ANR	6145933	CFGEntryNode	ENTRY		6144184		True				
ANR	6145934	CFGExitNode	EXIT		6144184		True				
ANR	6145935	InfiniteForNode	true		6144184		True				
ANR	6145936	InfiniteForNode	true		6144184		True				
ANR	6145937	InfiniteForNode	true		6144184		True				
ANR	6145938	Symbol	tokcstr . data		6144184						
ANR	6145939	Symbol	* ( int8_t * ) tokcstr . data		6144184						
ANR	6145940	Symbol	PARSE_FLAG_LINEFEED		6144184						
ANR	6145941	Symbol	tok_alloc		6144184						
ANR	6145942	Symbol	TOK_LOR		6144184						
ANR	6145943	Symbol	TOK_FLAG_EOF		6144184						
ANR	6145944	Symbol	TOK_HASH_INIT		6144184						
ANR	6145945	Symbol	& str		6144184						
ANR	6145946	Symbol	tokc . cstr		6144184						
ANR	6145947	Symbol	TOK_A_SUB		6144184						
ANR	6145948	Symbol	tok_flags		6144184						
ANR	6145949	Symbol	len		6144184						
ANR	6145950	Symbol	TOK_A_OR		6144184						
ANR	6145951	Symbol	ts -> tok		6144184						
ANR	6145952	Symbol	~TOK_FLAG_EOF		6144184						
ANR	6145953	Symbol	TOK_CCHAR		6144184						
ANR	6145954	Symbol	TOK_LCHAR		6144184						
ANR	6145955	Symbol	& tokc		6144184						
ANR	6145956	Symbol	s1		6144184						
ANR	6145957	Symbol	TOK_ARROW		6144184						
ANR	6145958	Symbol	TOK_HASH_SIZE		6144184						
ANR	6145959	Symbol	TOK_LT		6144184						
ANR	6145960	Symbol	tokc		6144184						
ANR	6145961	Symbol	TOK_STR		6144184						
ANR	6145962	Symbol	* ts		6144184						
ANR	6145963	Symbol	* file		6144184						
ANR	6145964	Symbol	str		6144184						
ANR	6145965	Symbol	tok_alloc_new		6144184						
ANR	6145966	Symbol	ts -> str		6144184						
ANR	6145967	Symbol	TOK_LE		6144184						
ANR	6145968	Symbol	file -> buf_end		6144184						
ANR	6145969	Symbol	tokcstr . size		6144184						
ANR	6145970	Symbol	tok		6144184						
ANR	6145971	Symbol	file		6144184						
ANR	6145972	Symbol	* ( nwchar_t * ) tokcstr . data		6144184						
ANR	6145973	Symbol	str . data		6144184						
ANR	6145974	Symbol	& tokcstr		6144184						
ANR	6145975	Symbol	file -> buf_ptr		6144184						
ANR	6145976	Symbol	file -> line_num		6144184						
ANR	6145977	Symbol	TOK_HASH_FUNC		6144184						
ANR	6145978	Symbol	sep		6144184						
ANR	6145979	Symbol	c		6144184						
ANR	6145980	Symbol	* p1		6144184						
ANR	6145981	Symbol	ch		6144184						
ANR	6145982	Symbol	~TOK_FLAG_ENDIF		6144184						
ANR	6145983	Symbol	* tokcstr		6144184						
ANR	6145984	Symbol	is_long		6144184						
ANR	6145985	Symbol	h		6144184						
ANR	6145986	Symbol	TOK_FLAG_ENDIF		6144184						
ANR	6145987	Symbol	char_size		6144184						
ANR	6145988	Symbol	p		6144184						
ANR	6145989	Symbol	t		6144184						
ANR	6145990	Symbol	CH_EOF		6144184						
ANR	6145991	Symbol	TOK_TWOSHARPS		6144184						
ANR	6145992	Symbol	parse_line_comment		6144184						
ANR	6145993	Symbol	parse_comment		6144184						
ANR	6145994	Symbol	ts		6144184						
ANR	6145995	Symbol	get_tok_str		6144184						
ANR	6145996	Symbol	s1 -> include_stack_ptr		6144184						
ANR	6145997	Symbol	* CH_EOF		6144184						
ANR	6145998	Symbol	TOK_INC		6144184						
ANR	6145999	Symbol	TOK_A_SHL		6144184						
ANR	6146000	Symbol	TOK_LINEFEED		6144184						
ANR	6146001	Symbol	TOK_GT		6144184						
ANR	6146002	Symbol	file -> ifndef_macro_saved		6144184						
ANR	6146003	Symbol	PARSE_FLAG_ASM_COMMENTS		6144184						
ANR	6146004	Symbol	TOK_SAR		6144184						
ANR	6146005	Symbol	memcmp		6144184						
ANR	6146006	Symbol	* pts		6144184						
ANR	6146007	Symbol	TOK_PPNUM		6144184						
ANR	6146008	Symbol	tokc . i		6144184						
ANR	6146009	Symbol	TOK_GE		6144184						
ANR	6146010	Symbol	tcc_state		6144184						
ANR	6146011	Symbol	file -> filename		6144184						
ANR	6146012	Symbol	NULL		6144184						
ANR	6146013	Symbol	PARSE_FLAG_PREPROCESS		6144184						
ANR	6146014	Symbol	TOK_A_AND		6144184						
ANR	6146015	Symbol	s1 -> include_stack		6144184						
ANR	6146016	Symbol	TOK_SHL		6144184						
ANR	6146017	Symbol	TOK_A_SAR		6144184						
ANR	6146018	Symbol	TOK_DOTS		6144184						
ANR	6146019	Symbol	TOK_LSTR		6144184						
ANR	6146020	Symbol	isidnum_table		6144184						
ANR	6146021	Symbol	parse_flags		6144184						
ANR	6146022	Symbol	p1		6144184						
ANR	6146023	Symbol	& ts -> hash_next		6144184						
ANR	6146024	Symbol	* s1		6144184						
ANR	6146025	Symbol	TOK_FLAG_BOF		6144184						
ANR	6146026	Symbol	parse_pp_string		6144184						
ANR	6146027	Symbol	TOK_FLAG_BOL		6144184						
ANR	6146028	Symbol	TOK_LAND		6144184						
ANR	6146029	Symbol	ts -> len		6144184						
ANR	6146030	Symbol	s1 -> ifdef_stack_ptr		6144184						
ANR	6146031	Symbol	isnum		6144184						
ANR	6146032	Symbol	TOK_A_DIV		6144184						
ANR	6146033	Symbol	file -> ifdef_stack_ptr		6144184						
ANR	6146034	Symbol	TOK_EOF		6144184						
ANR	6146035	Symbol	* c		6144184						
ANR	6146036	Symbol	pts		6144184						
ANR	6146037	Symbol	* tokcstr . data		6144184						
ANR	6146038	Symbol	tokcstr		6144184						
ANR	6146039	Symbol	isid		6144184						
ANR	6146040	Symbol	TOK_DEC		6144184						
ANR	6146041	Symbol	TOK_A_ADD		6144184						
ANR	6146042	Symbol	hash_ident		6144184						
ANR	6146043	Symbol	* p		6144184						
ANR	6146044	Symbol	* isidnum_table		6144184						
ANR	6146045	Function	next_nomacro_spc	2673:0:54744:54991							
ANR	6146046	FunctionDef	next_nomacro_spc ()		6146045	0					
ANR	6146047	CompoundStatement		2674:0:54779:54991	6146045	0					
ANR	6146048	IfStatement	if ( macro_ptr )		6146045	0					
ANR	6146049	Condition	macro_ptr	2675:5:54786:54794	6146045	0	True				
ANR	6146050	Identifier	macro_ptr		6146045	0					
ANR	6146051	CompoundStatement		2:16:17:17	6146045	1					
ANR	6146052	Label	redo :	2676:0:54799:54803	6146045	0	True				
ANR	6146053	Identifier	redo		6146045	0					
ANR	6146054	ExpressionStatement	tok = * macro_ptr	2677:2:54807:54823	6146045	1	True				
ANR	6146055	AssignmentExpression	tok = * macro_ptr		6146045	0		=			
ANR	6146056	Identifier	tok		6146045	0					
ANR	6146057	UnaryOperationExpression	* macro_ptr		6146045	1					
ANR	6146058	UnaryOperator	*		6146045	0					
ANR	6146059	Identifier	macro_ptr		6146045	1					
ANR	6146060	IfStatement	if ( tok )		6146045	2					
ANR	6146061	Condition	tok	2678:6:54831:54833	6146045	0	True				
ANR	6146062	Identifier	tok		6146045	0					
ANR	6146063	CompoundStatement		5:11:56:56	6146045	1					
ANR	6146064	ExpressionStatement	"TOK_GET ( & tok , & macro_ptr , & tokc )"	2679:3:54841:54874	6146045	0	True				
ANR	6146065	CallExpression	"TOK_GET ( & tok , & macro_ptr , & tokc )"		6146045	0					
ANR	6146066	Callee	TOK_GET		6146045	0					
ANR	6146067	Identifier	TOK_GET		6146045	0					
ANR	6146068	ArgumentList	& tok		6146045	1					
ANR	6146069	Argument	& tok		6146045	0					
ANR	6146070	UnaryOperationExpression	& tok		6146045	0					
ANR	6146071	UnaryOperator	&		6146045	0					
ANR	6146072	Identifier	tok		6146045	1					
ANR	6146073	Argument	& macro_ptr		6146045	1					
ANR	6146074	UnaryOperationExpression	& macro_ptr		6146045	0					
ANR	6146075	UnaryOperator	&		6146045	0					
ANR	6146076	Identifier	macro_ptr		6146045	1					
ANR	6146077	Argument	& tokc		6146045	2					
ANR	6146078	UnaryOperationExpression	& tokc		6146045	0					
ANR	6146079	UnaryOperator	&		6146045	0					
ANR	6146080	Identifier	tokc		6146045	1					
ANR	6146081	IfStatement	if ( tok == TOK_LINENUM )		6146045	1					
ANR	6146082	Condition	tok == TOK_LINENUM	2680:7:54883:54900	6146045	0	True				
ANR	6146083	EqualityExpression	tok == TOK_LINENUM		6146045	0		==			
ANR	6146084	Identifier	tok		6146045	0					
ANR	6146085	Identifier	TOK_LINENUM		6146045	1					
ANR	6146086	CompoundStatement		7:27:123:123	6146045	1					
ANR	6146087	ExpressionStatement	file -> line_num = tokc . i	2681:4:54909:54932	6146045	0	True				
ANR	6146088	AssignmentExpression	file -> line_num = tokc . i		6146045	0		=			
ANR	6146089	PtrMemberAccess	file -> line_num		6146045	0					
ANR	6146090	Identifier	file		6146045	0					
ANR	6146091	Identifier	line_num		6146045	1					
ANR	6146092	MemberAccess	tokc . i		6146045	1					
ANR	6146093	Identifier	tokc		6146045	0					
ANR	6146094	Identifier	i		6146045	1					
ANR	6146095	GotoStatement	goto redo ;	2682:4:54938:54947	6146045	1	True				
ANR	6146096	Identifier	redo		6146045	0					
ANR	6146097	ElseStatement	else		6146045	0					
ANR	6146098	CompoundStatement		12:8:186:186	6146045	0					
ANR	6146099	ExpressionStatement	next_nomacro1 ( )	2686:2:54970:54986	6146045	0	True				
ANR	6146100	CallExpression	next_nomacro1 ( )		6146045	0					
ANR	6146101	Callee	next_nomacro1		6146045	0					
ANR	6146102	Identifier	next_nomacro1		6146045	0					
ANR	6146103	ArgumentList			6146045	1					
ANR	6146104	ReturnType	static void		6146045	1					
ANR	6146105	Identifier	next_nomacro_spc		6146045	2					
ANR	6146106	ParameterList			6146045	3					
ANR	6146107	CFGEntryNode	ENTRY		6146045		True				
ANR	6146108	CFGExitNode	EXIT		6146045		True				
ANR	6146109	Symbol	tok		6146045						
ANR	6146110	Symbol	& macro_ptr		6146045						
ANR	6146111	Symbol	& tok		6146045						
ANR	6146112	Symbol	file		6146045						
ANR	6146113	Symbol	macro_ptr		6146045						
ANR	6146114	Symbol	TOK_LINENUM		6146045						
ANR	6146115	Symbol	tokc		6146045						
ANR	6146116	Symbol	* macro_ptr		6146045						
ANR	6146117	Symbol	file -> line_num		6146045						
ANR	6146118	Symbol	& tokc		6146045						
ANR	6146119	Symbol	* file		6146045						
ANR	6146120	Symbol	tokc . i		6146045						
ANR	6146121	Function	next_nomacro	2690:0:54994:55104							
ANR	6146122	FunctionDef	next_nomacro ()		6146121	0					
ANR	6146123	CompoundStatement		2691:0:55026:55104	6146121	0					
ANR	6146124	DoStatement	do		6146121	0					
ANR	6146125	CompoundStatement		2:4:5:5	6146121	0					
ANR	6146126	ExpressionStatement	next_nomacro_spc ( )	2693:2:55036:55055	6146121	0	True				
ANR	6146127	CallExpression	next_nomacro_spc ( )		6146121	0					
ANR	6146128	Callee	next_nomacro_spc		6146121	0					
ANR	6146129	Identifier	next_nomacro_spc		6146121	0					
ANR	6146130	ArgumentList			6146121	1					
ANR	6146131	Condition	tcc_nerr ( ) == 0 && is_space ( tok )	2694:10:55067:55100	6146121	1	True				
ANR	6146132	AndExpression	tcc_nerr ( ) == 0 && is_space ( tok )		6146121	0		&&			
ANR	6146133	EqualityExpression	tcc_nerr ( ) == 0		6146121	0		==			
ANR	6146134	CallExpression	tcc_nerr ( )		6146121	0					
ANR	6146135	Callee	tcc_nerr		6146121	0					
ANR	6146136	Identifier	tcc_nerr		6146121	0					
ANR	6146137	ArgumentList			6146121	1					
ANR	6146138	PrimaryExpression	0		6146121	1					
ANR	6146139	CallExpression	is_space ( tok )		6146121	1					
ANR	6146140	Callee	is_space		6146121	0					
ANR	6146141	Identifier	is_space		6146121	0					
ANR	6146142	ArgumentList	tok		6146121	1					
ANR	6146143	Argument	tok		6146121	0					
ANR	6146144	Identifier	tok		6146121	0					
ANR	6146145	ReturnType	ST_FUNC void		6146121	1					
ANR	6146146	Identifier	next_nomacro		6146121	2					
ANR	6146147	ParameterList			6146121	3					
ANR	6146148	CFGEntryNode	ENTRY		6146121		True				
ANR	6146149	CFGExitNode	EXIT		6146121		True				
ANR	6146150	Symbol	tok		6146121						
ANR	6146151	Symbol	is_space		6146121						
ANR	6146152	Symbol	tcc_nerr		6146121						
ANR	6146153	Function	macro_arg_subst	2698:0:55170:57320							
ANR	6146154	FunctionDef	"macro_arg_subst (Sym * * nested_list , const int * macro_str , Sym * args)"		6146153	0					
ANR	6146155	CompoundStatement		2699:0:55250:57320	6146153	0					
ANR	6146156	IdentifierDeclStatement	"int last_tok , t , spc ;"	2700:1:55253:55273	6146153	0	True				
ANR	6146157	IdentifierDecl	last_tok		6146153	0					
ANR	6146158	IdentifierDeclType	int		6146153	0					
ANR	6146159	Identifier	last_tok		6146153	1					
ANR	6146160	IdentifierDecl	t		6146153	1					
ANR	6146161	IdentifierDeclType	int		6146153	0					
ANR	6146162	Identifier	t		6146153	1					
ANR	6146163	IdentifierDecl	spc		6146153	2					
ANR	6146164	IdentifierDeclType	int		6146153	0					
ANR	6146165	Identifier	spc		6146153	1					
ANR	6146166	IdentifierDeclStatement	const int * st ;	2701:1:55276:55289	6146153	1	True				
ANR	6146167	IdentifierDecl	* st		6146153	0					
ANR	6146168	IdentifierDeclType	const int *		6146153	0					
ANR	6146169	Identifier	st		6146153	1					
ANR	6146170	IdentifierDeclStatement	Sym * s ;	2702:1:55292:55298	6146153	2	True				
ANR	6146171	IdentifierDecl	* s		6146153	0					
ANR	6146172	IdentifierDeclType	Sym *		6146153	0					
ANR	6146173	Identifier	s		6146153	1					
ANR	6146174	IdentifierDeclStatement	CValue cval ;	2703:1:55301:55312	6146153	3	True				
ANR	6146175	IdentifierDecl	cval		6146153	0					
ANR	6146176	IdentifierDeclType	CValue		6146153	0					
ANR	6146177	Identifier	cval		6146153	1					
ANR	6146178	IdentifierDeclStatement	TokenString str ;	2704:1:55315:55330	6146153	4	True				
ANR	6146179	IdentifierDecl	str		6146153	0					
ANR	6146180	IdentifierDeclType	TokenString		6146153	0					
ANR	6146181	Identifier	str		6146153	1					
ANR	6146182	IdentifierDeclStatement	CString cstr ;	2705:1:55333:55345	6146153	5	True				
ANR	6146183	IdentifierDecl	cstr		6146153	0					
ANR	6146184	IdentifierDeclType	CString		6146153	0					
ANR	6146185	Identifier	cstr		6146153	1					
ANR	6146186	ExpressionStatement	tok_str_new ( & str )	2707:1:55349:55367	6146153	6	True				
ANR	6146187	CallExpression	tok_str_new ( & str )		6146153	0					
ANR	6146188	Callee	tok_str_new		6146153	0					
ANR	6146189	Identifier	tok_str_new		6146153	0					
ANR	6146190	ArgumentList	& str		6146153	1					
ANR	6146191	Argument	& str		6146153	0					
ANR	6146192	UnaryOperationExpression	& str		6146153	0					
ANR	6146193	UnaryOperator	&		6146153	0					
ANR	6146194	Identifier	str		6146153	1					
ANR	6146195	ExpressionStatement	last_tok = 0	2708:1:55370:55382	6146153	7	True				
ANR	6146196	AssignmentExpression	last_tok = 0		6146153	0		=			
ANR	6146197	Identifier	last_tok		6146153	0					
ANR	6146198	PrimaryExpression	0		6146153	1					
ANR	6146199	WhileStatement	while ( tcc_nerr ( ) == 0 )		6146153	8					
ANR	6146200	Condition	tcc_nerr ( ) == 0	2709:8:55392:55407	6146153	0	True				
ANR	6146201	EqualityExpression	tcc_nerr ( ) == 0		6146153	0		==			
ANR	6146202	CallExpression	tcc_nerr ( )		6146153	0					
ANR	6146203	Callee	tcc_nerr		6146153	0					
ANR	6146204	Identifier	tcc_nerr		6146153	0					
ANR	6146205	ArgumentList			6146153	1					
ANR	6146206	PrimaryExpression	0		6146153	1					
ANR	6146207	CompoundStatement		11:26:159:159	6146153	1					
ANR	6146208	ExpressionStatement	"TOK_GET ( & t , & macro_str , & cval )"	2710:2:55414:55445	6146153	0	True				
ANR	6146209	CallExpression	"TOK_GET ( & t , & macro_str , & cval )"		6146153	0					
ANR	6146210	Callee	TOK_GET		6146153	0					
ANR	6146211	Identifier	TOK_GET		6146153	0					
ANR	6146212	ArgumentList	& t		6146153	1					
ANR	6146213	Argument	& t		6146153	0					
ANR	6146214	UnaryOperationExpression	& t		6146153	0					
ANR	6146215	UnaryOperator	&		6146153	0					
ANR	6146216	Identifier	t		6146153	1					
ANR	6146217	Argument	& macro_str		6146153	1					
ANR	6146218	UnaryOperationExpression	& macro_str		6146153	0					
ANR	6146219	UnaryOperator	&		6146153	0					
ANR	6146220	Identifier	macro_str		6146153	1					
ANR	6146221	Argument	& cval		6146153	2					
ANR	6146222	UnaryOperationExpression	& cval		6146153	0					
ANR	6146223	UnaryOperator	&		6146153	0					
ANR	6146224	Identifier	cval		6146153	1					
ANR	6146225	IfStatement	if ( ! t )		6146153	1					
ANR	6146226	Condition	! t	2711:6:55453:55454	6146153	0	True				
ANR	6146227	UnaryOperationExpression	! t		6146153	0					
ANR	6146228	UnaryOperator	!		6146153	0					
ANR	6146229	Identifier	t		6146153	1					
ANR	6146230	CompoundStatement		13:10:206:206	6146153	1					
ANR	6146231	BreakStatement	break ;	2712:3:55462:55467	6146153	0	True				
ANR	6146232	IfStatement	if ( t == '#' )		6146153	2					
ANR	6146233	Condition	t == '#'	2714:6:55479:55486	6146153	0	True				
ANR	6146234	EqualityExpression	t == '#'		6146153	0		==			
ANR	6146235	Identifier	t		6146153	0					
ANR	6146236	PrimaryExpression	'#'		6146153	1					
ANR	6146237	CompoundStatement		16:16:238:238	6146153	1					
ANR	6146238	ExpressionStatement	"TOK_GET ( & t , & macro_str , & cval )"	2716:3:55513:55544	6146153	0	True				
ANR	6146239	CallExpression	"TOK_GET ( & t , & macro_str , & cval )"		6146153	0					
ANR	6146240	Callee	TOK_GET		6146153	0					
ANR	6146241	Identifier	TOK_GET		6146153	0					
ANR	6146242	ArgumentList	& t		6146153	1					
ANR	6146243	Argument	& t		6146153	0					
ANR	6146244	UnaryOperationExpression	& t		6146153	0					
ANR	6146245	UnaryOperator	&		6146153	0					
ANR	6146246	Identifier	t		6146153	1					
ANR	6146247	Argument	& macro_str		6146153	1					
ANR	6146248	UnaryOperationExpression	& macro_str		6146153	0					
ANR	6146249	UnaryOperator	&		6146153	0					
ANR	6146250	Identifier	macro_str		6146153	1					
ANR	6146251	Argument	& cval		6146153	2					
ANR	6146252	UnaryOperationExpression	& cval		6146153	0					
ANR	6146253	UnaryOperator	&		6146153	0					
ANR	6146254	Identifier	cval		6146153	1					
ANR	6146255	IfStatement	if ( ! t )		6146153	1					
ANR	6146256	Condition	! t	2717:7:55553:55554	6146153	0	True				
ANR	6146257	UnaryOperationExpression	! t		6146153	0					
ANR	6146258	UnaryOperator	!		6146153	0					
ANR	6146259	Identifier	t		6146153	1					
ANR	6146260	CompoundStatement		19:11:306:306	6146153	1					
ANR	6146261	BreakStatement	break ;	2718:4:55563:55568	6146153	0	True				
ANR	6146262	ExpressionStatement	"s = sym_find2 ( args , t )"	2720:3:55578:55601	6146153	2	True				
ANR	6146263	AssignmentExpression	"s = sym_find2 ( args , t )"		6146153	0		=			
ANR	6146264	Identifier	s		6146153	0					
ANR	6146265	CallExpression	"sym_find2 ( args , t )"		6146153	1					
ANR	6146266	Callee	sym_find2		6146153	0					
ANR	6146267	Identifier	sym_find2		6146153	0					
ANR	6146268	ArgumentList	args		6146153	1					
ANR	6146269	Argument	args		6146153	0					
ANR	6146270	Identifier	args		6146153	0					
ANR	6146271	Argument	t		6146153	1					
ANR	6146272	Identifier	t		6146153	0					
ANR	6146273	IfStatement	if ( s )		6146153	3					
ANR	6146274	Condition	s	2721:7:55610:55610	6146153	0	True				
ANR	6146275	Identifier	s		6146153	0					
ANR	6146276	CompoundStatement		23:10:362:362	6146153	1					
ANR	6146277	ExpressionStatement	cstr_new ( & cstr )	2722:4:55619:55635	6146153	0	True				
ANR	6146278	CallExpression	cstr_new ( & cstr )		6146153	0					
ANR	6146279	Callee	cstr_new		6146153	0					
ANR	6146280	Identifier	cstr_new		6146153	0					
ANR	6146281	ArgumentList	& cstr		6146153	1					
ANR	6146282	Argument	& cstr		6146153	0					
ANR	6146283	UnaryOperationExpression	& cstr		6146153	0					
ANR	6146284	UnaryOperator	&		6146153	0					
ANR	6146285	Identifier	cstr		6146153	1					
ANR	6146286	ExpressionStatement	st = s -> d	2723:4:55641:55650	6146153	1	True				
ANR	6146287	AssignmentExpression	st = s -> d		6146153	0		=			
ANR	6146288	Identifier	st		6146153	0					
ANR	6146289	PtrMemberAccess	s -> d		6146153	1					
ANR	6146290	Identifier	s		6146153	0					
ANR	6146291	Identifier	d		6146153	1					
ANR	6146292	ExpressionStatement	spc = 0	2724:4:55656:55663	6146153	2	True				
ANR	6146293	AssignmentExpression	spc = 0		6146153	0		=			
ANR	6146294	Identifier	spc		6146153	0					
ANR	6146295	PrimaryExpression	0		6146153	1					
ANR	6146296	WhileStatement	while ( * st )		6146153	3					
ANR	6146297	Condition	* st	2725:11:55676:55678	6146153	0	True				
ANR	6146298	UnaryOperationExpression	* st		6146153	0					
ANR	6146299	UnaryOperator	*		6146153	0					
ANR	6146300	Identifier	st		6146153	1					
ANR	6146301	CompoundStatement		27:16:430:430	6146153	1					
ANR	6146302	ExpressionStatement	"TOK_GET ( & t , & st , & cval )"	2726:5:55688:55712	6146153	0	True				
ANR	6146303	CallExpression	"TOK_GET ( & t , & st , & cval )"		6146153	0					
ANR	6146304	Callee	TOK_GET		6146153	0					
ANR	6146305	Identifier	TOK_GET		6146153	0					
ANR	6146306	ArgumentList	& t		6146153	1					
ANR	6146307	Argument	& t		6146153	0					
ANR	6146308	UnaryOperationExpression	& t		6146153	0					
ANR	6146309	UnaryOperator	&		6146153	0					
ANR	6146310	Identifier	t		6146153	1					
ANR	6146311	Argument	& st		6146153	1					
ANR	6146312	UnaryOperationExpression	& st		6146153	0					
ANR	6146313	UnaryOperator	&		6146153	0					
ANR	6146314	Identifier	st		6146153	1					
ANR	6146315	Argument	& cval		6146153	2					
ANR	6146316	UnaryOperationExpression	& cval		6146153	0					
ANR	6146317	UnaryOperator	&		6146153	0					
ANR	6146318	Identifier	cval		6146153	1					
ANR	6146319	IfStatement	"if ( ! check_space ( t , & spc ) )"		6146153	1					
ANR	6146320	Condition	"! check_space ( t , & spc )"	2727:9:55723:55744	6146153	0	True				
ANR	6146321	UnaryOperationExpression	"! check_space ( t , & spc )"		6146153	0					
ANR	6146322	UnaryOperator	!		6146153	0					
ANR	6146323	CallExpression	"check_space ( t , & spc )"		6146153	1					
ANR	6146324	Callee	check_space		6146153	0					
ANR	6146325	Identifier	check_space		6146153	0					
ANR	6146326	ArgumentList	t		6146153	1					
ANR	6146327	Argument	t		6146153	0					
ANR	6146328	Identifier	t		6146153	0					
ANR	6146329	Argument	& spc		6146153	1					
ANR	6146330	UnaryOperationExpression	& spc		6146153	0					
ANR	6146331	UnaryOperator	&		6146153	0					
ANR	6146332	Identifier	spc		6146153	1					
ANR	6146333	CompoundStatement		29:33:496:496	6146153	1					
ANR	6146334	ExpressionStatement	"cstr_cat ( & cstr , get_tok_str ( t , & cval ) )"	2728:6:55755:55795	6146153	0	True				
ANR	6146335	CallExpression	"cstr_cat ( & cstr , get_tok_str ( t , & cval ) )"		6146153	0					
ANR	6146336	Callee	cstr_cat		6146153	0					
ANR	6146337	Identifier	cstr_cat		6146153	0					
ANR	6146338	ArgumentList	& cstr		6146153	1					
ANR	6146339	Argument	& cstr		6146153	0					
ANR	6146340	UnaryOperationExpression	& cstr		6146153	0					
ANR	6146341	UnaryOperator	&		6146153	0					
ANR	6146342	Identifier	cstr		6146153	1					
ANR	6146343	Argument	"get_tok_str ( t , & cval )"		6146153	1					
ANR	6146344	CallExpression	"get_tok_str ( t , & cval )"		6146153	0					
ANR	6146345	Callee	get_tok_str		6146153	0					
ANR	6146346	Identifier	get_tok_str		6146153	0					
ANR	6146347	ArgumentList	t		6146153	1					
ANR	6146348	Argument	t		6146153	0					
ANR	6146349	Identifier	t		6146153	0					
ANR	6146350	Argument	& cval		6146153	1					
ANR	6146351	UnaryOperationExpression	& cval		6146153	0					
ANR	6146352	UnaryOperator	&		6146153	0					
ANR	6146353	Identifier	cval		6146153	1					
ANR	6146354	ExpressionStatement	cstr . size -= spc	2731:4:55814:55830	6146153	4	True				
ANR	6146355	AssignmentExpression	cstr . size -= spc		6146153	0		-=			
ANR	6146356	MemberAccess	cstr . size		6146153	0					
ANR	6146357	Identifier	cstr		6146153	0					
ANR	6146358	Identifier	size		6146153	1					
ANR	6146359	Identifier	spc		6146153	1					
ANR	6146360	ExpressionStatement	"cstr_ccat ( & cstr , '\\0' )"	2732:4:55836:55859	6146153	5	True				
ANR	6146361	CallExpression	"cstr_ccat ( & cstr , '\\0' )"		6146153	0					
ANR	6146362	Callee	cstr_ccat		6146153	0					
ANR	6146363	Identifier	cstr_ccat		6146153	0					
ANR	6146364	ArgumentList	& cstr		6146153	1					
ANR	6146365	Argument	& cstr		6146153	0					
ANR	6146366	UnaryOperationExpression	& cstr		6146153	0					
ANR	6146367	UnaryOperator	&		6146153	0					
ANR	6146368	Identifier	cstr		6146153	1					
ANR	6146369	Argument	'\\0'		6146153	1					
ANR	6146370	PrimaryExpression	'\\0'		6146153	0					
ANR	6146371	ExpressionStatement	"printf ( ""stringize: %s\\n"" , ( char * ) cstr . data )"	2734:4:55881:55927	6146153	6	True				
ANR	6146372	CallExpression	"printf ( ""stringize: %s\\n"" , ( char * ) cstr . data )"		6146153	0					
ANR	6146373	Callee	printf		6146153	0					
ANR	6146374	Identifier	printf		6146153	0					
ANR	6146375	ArgumentList	"""stringize: %s\\n"""		6146153	1					
ANR	6146376	Argument	"""stringize: %s\\n"""		6146153	0					
ANR	6146377	PrimaryExpression	"""stringize: %s\\n"""		6146153	0					
ANR	6146378	Argument	( char * ) cstr . data		6146153	1					
ANR	6146379	CastExpression	( char * ) cstr . data		6146153	0					
ANR	6146380	CastTarget	char *		6146153	0					
ANR	6146381	MemberAccess	cstr . data		6146153	1					
ANR	6146382	Identifier	cstr		6146153	0					
ANR	6146383	Identifier	data		6146153	1					
ANR	6146384	ExpressionStatement	cval . cstr = & cstr	2737:4:55961:55978	6146153	7	True				
ANR	6146385	AssignmentExpression	cval . cstr = & cstr		6146153	0		=			
ANR	6146386	MemberAccess	cval . cstr		6146153	0					
ANR	6146387	Identifier	cval		6146153	0					
ANR	6146388	Identifier	cstr		6146153	1					
ANR	6146389	UnaryOperationExpression	& cstr		6146153	1					
ANR	6146390	UnaryOperator	&		6146153	0					
ANR	6146391	Identifier	cstr		6146153	1					
ANR	6146392	ExpressionStatement	"tok_str_add2 ( & str , TOK_STR , & cval )"	2738:4:55984:56019	6146153	8	True				
ANR	6146393	CallExpression	"tok_str_add2 ( & str , TOK_STR , & cval )"		6146153	0					
ANR	6146394	Callee	tok_str_add2		6146153	0					
ANR	6146395	Identifier	tok_str_add2		6146153	0					
ANR	6146396	ArgumentList	& str		6146153	1					
ANR	6146397	Argument	& str		6146153	0					
ANR	6146398	UnaryOperationExpression	& str		6146153	0					
ANR	6146399	UnaryOperator	&		6146153	0					
ANR	6146400	Identifier	str		6146153	1					
ANR	6146401	Argument	TOK_STR		6146153	1					
ANR	6146402	Identifier	TOK_STR		6146153	0					
ANR	6146403	Argument	& cval		6146153	2					
ANR	6146404	UnaryOperationExpression	& cval		6146153	0					
ANR	6146405	UnaryOperator	&		6146153	0					
ANR	6146406	Identifier	cval		6146153	1					
ANR	6146407	ExpressionStatement	cstr_free ( & cstr )	2739:4:56025:56042	6146153	9	True				
ANR	6146408	CallExpression	cstr_free ( & cstr )		6146153	0					
ANR	6146409	Callee	cstr_free		6146153	0					
ANR	6146410	Identifier	cstr_free		6146153	0					
ANR	6146411	ArgumentList	& cstr		6146153	1					
ANR	6146412	Argument	& cstr		6146153	0					
ANR	6146413	UnaryOperationExpression	& cstr		6146153	0					
ANR	6146414	UnaryOperator	&		6146153	0					
ANR	6146415	Identifier	cstr		6146153	1					
ANR	6146416	ElseStatement	else		6146153	0					
ANR	6146417	CompoundStatement		42:10:803:803	6146153	0					
ANR	6146418	ExpressionStatement	"tok_str_add2 ( & str , t , & cval )"	2741:4:56060:56089	6146153	0	True				
ANR	6146419	CallExpression	"tok_str_add2 ( & str , t , & cval )"		6146153	0					
ANR	6146420	Callee	tok_str_add2		6146153	0					
ANR	6146421	Identifier	tok_str_add2		6146153	0					
ANR	6146422	ArgumentList	& str		6146153	1					
ANR	6146423	Argument	& str		6146153	0					
ANR	6146424	UnaryOperationExpression	& str		6146153	0					
ANR	6146425	UnaryOperator	&		6146153	0					
ANR	6146426	Identifier	str		6146153	1					
ANR	6146427	Argument	t		6146153	1					
ANR	6146428	Identifier	t		6146153	0					
ANR	6146429	Argument	& cval		6146153	2					
ANR	6146430	UnaryOperationExpression	& cval		6146153	0					
ANR	6146431	UnaryOperator	&		6146153	0					
ANR	6146432	Identifier	cval		6146153	1					
ANR	6146433	ElseStatement	else		6146153	0					
ANR	6146434	IfStatement	if ( t >= TOK_IDENT )		6146153	0					
ANR	6146435	Condition	t >= TOK_IDENT	2743:13:56109:56122	6146153	0	True				
ANR	6146436	RelationalExpression	t >= TOK_IDENT		6146153	0		>=			
ANR	6146437	Identifier	t		6146153	0					
ANR	6146438	Identifier	TOK_IDENT		6146153	1					
ANR	6146439	CompoundStatement		45:29:874:874	6146153	1					
ANR	6146440	ExpressionStatement	"s = sym_find2 ( args , t )"	2744:3:56130:56153	6146153	0	True				
ANR	6146441	AssignmentExpression	"s = sym_find2 ( args , t )"		6146153	0		=			
ANR	6146442	Identifier	s		6146153	0					
ANR	6146443	CallExpression	"sym_find2 ( args , t )"		6146153	1					
ANR	6146444	Callee	sym_find2		6146153	0					
ANR	6146445	Identifier	sym_find2		6146153	0					
ANR	6146446	ArgumentList	args		6146153	1					
ANR	6146447	Argument	args		6146153	0					
ANR	6146448	Identifier	args		6146153	0					
ANR	6146449	Argument	t		6146153	1					
ANR	6146450	Identifier	t		6146153	0					
ANR	6146451	IfStatement	if ( s )		6146153	1					
ANR	6146452	Condition	s	2745:7:56162:56162	6146153	0	True				
ANR	6146453	Identifier	s		6146153	0					
ANR	6146454	CompoundStatement		47:10:914:914	6146153	1					
ANR	6146455	ExpressionStatement	st = s -> d	2746:4:56171:56180	6146153	0	True				
ANR	6146456	AssignmentExpression	st = s -> d		6146153	0		=			
ANR	6146457	Identifier	st		6146153	0					
ANR	6146458	PtrMemberAccess	s -> d		6146153	1					
ANR	6146459	Identifier	s		6146153	0					
ANR	6146460	Identifier	d		6146153	1					
ANR	6146461	IfStatement	if ( * macro_str == TOK_TWOSHARPS || last_tok == TOK_TWOSHARPS )		6146153	1					
ANR	6146462	Condition	* macro_str == TOK_TWOSHARPS || last_tok == TOK_TWOSHARPS	2748:8:56256:56311	6146153	0	True				
ANR	6146463	OrExpression	* macro_str == TOK_TWOSHARPS || last_tok == TOK_TWOSHARPS		6146153	0		||			
ANR	6146464	EqualityExpression	* macro_str == TOK_TWOSHARPS		6146153	0		==			
ANR	6146465	UnaryOperationExpression	* macro_str		6146153	0					
ANR	6146466	UnaryOperator	*		6146153	0					
ANR	6146467	Identifier	macro_str		6146153	1					
ANR	6146468	Identifier	TOK_TWOSHARPS		6146153	1					
ANR	6146469	EqualityExpression	last_tok == TOK_TWOSHARPS		6146153	1		==			
ANR	6146470	Identifier	last_tok		6146153	0					
ANR	6146471	Identifier	TOK_TWOSHARPS		6146153	1					
ANR	6146472	CompoundStatement		50:66:1063:1063	6146153	1					
ANR	6146473	IfStatement	"if ( gnu_ext && s -> type . t && last_tok == TOK_TWOSHARPS && str . len >= 2 && str . str [ str . len - 2 ] == ',' )"		6146153	0					
ANR	6146474	Condition	"gnu_ext && s -> type . t && last_tok == TOK_TWOSHARPS && str . len >= 2 && str . str [ str . len - 2 ] == ','"	2754:9:56532:56645	6146153	0	True				
ANR	6146475	AndExpression	"gnu_ext && s -> type . t && last_tok == TOK_TWOSHARPS && str . len >= 2 && str . str [ str . len - 2 ] == ','"		6146153	0		&&			
ANR	6146476	Identifier	gnu_ext		6146153	0					
ANR	6146477	AndExpression	"s -> type . t && last_tok == TOK_TWOSHARPS && str . len >= 2 && str . str [ str . len - 2 ] == ','"		6146153	1		&&			
ANR	6146478	MemberAccess	s -> type . t		6146153	0					
ANR	6146479	PtrMemberAccess	s -> type		6146153	0					
ANR	6146480	Identifier	s		6146153	0					
ANR	6146481	Identifier	type		6146153	1					
ANR	6146482	Identifier	t		6146153	1					
ANR	6146483	AndExpression	"last_tok == TOK_TWOSHARPS && str . len >= 2 && str . str [ str . len - 2 ] == ','"		6146153	1		&&			
ANR	6146484	EqualityExpression	last_tok == TOK_TWOSHARPS		6146153	0		==			
ANR	6146485	Identifier	last_tok		6146153	0					
ANR	6146486	Identifier	TOK_TWOSHARPS		6146153	1					
ANR	6146487	AndExpression	"str . len >= 2 && str . str [ str . len - 2 ] == ','"		6146153	1		&&			
ANR	6146488	RelationalExpression	str . len >= 2		6146153	0		>=			
ANR	6146489	MemberAccess	str . len		6146153	0					
ANR	6146490	Identifier	str		6146153	0					
ANR	6146491	Identifier	len		6146153	1					
ANR	6146492	PrimaryExpression	2		6146153	1					
ANR	6146493	EqualityExpression	"str . str [ str . len - 2 ] == ','"		6146153	1		==			
ANR	6146494	ArrayIndexing	str . str [ str . len - 2 ]		6146153	0					
ANR	6146495	MemberAccess	str . str		6146153	0					
ANR	6146496	Identifier	str		6146153	0					
ANR	6146497	Identifier	str		6146153	1					
ANR	6146498	AdditiveExpression	str . len - 2		6146153	1		-			
ANR	6146499	MemberAccess	str . len		6146153	0					
ANR	6146500	Identifier	str		6146153	0					
ANR	6146501	Identifier	len		6146153	1					
ANR	6146502	PrimaryExpression	2		6146153	1					
ANR	6146503	PrimaryExpression	"','"		6146153	1					
ANR	6146504	CompoundStatement		58:54:1397:1397	6146153	1					
ANR	6146505	IfStatement	if ( * st == 0 )		6146153	0					
ANR	6146506	Condition	* st == 0	2757:10:56660:56667	6146153	0	True				
ANR	6146507	EqualityExpression	* st == 0		6146153	0		==			
ANR	6146508	UnaryOperationExpression	* st		6146153	0					
ANR	6146509	UnaryOperator	*		6146153	0					
ANR	6146510	Identifier	st		6146153	1					
ANR	6146511	PrimaryExpression	0		6146153	1					
ANR	6146512	CompoundStatement		59:20:1419:1419	6146153	1					
ANR	6146513	ExpressionStatement	str . len -= 2	2759:7:56710:56722	6146153	0	True				
ANR	6146514	AssignmentExpression	str . len -= 2		6146153	0		-=			
ANR	6146515	MemberAccess	str . len		6146153	0					
ANR	6146516	Identifier	str		6146153	0					
ANR	6146517	Identifier	len		6146153	1					
ANR	6146518	PrimaryExpression	2		6146153	1					
ANR	6146519	ElseStatement	else		6146153	0					
ANR	6146520	CompoundStatement		62:13:1486:1486	6146153	0					
ANR	6146521	ExpressionStatement	str . len --	2762:7:56790:56799	6146153	0	True				
ANR	6146522	PostIncDecOperationExpression	str . len --		6146153	0					
ANR	6146523	MemberAccess	str . len		6146153	0					
ANR	6146524	Identifier	str		6146153	0					
ANR	6146525	Identifier	len		6146153	1					
ANR	6146526	IncDec	--		6146153	1					
ANR	6146527	GotoStatement	goto add_var ;	2763:7:56808:56820	6146153	1	True				
ANR	6146528	Identifier	add_var		6146153	0					
ANR	6146529	ElseStatement	else		6146153	0					
ANR	6146530	CompoundStatement		68:6:1599:1605	6146153	0					
ANR	6146531	IdentifierDeclStatement	int t1 ;	2766:6:56850:56856	6146153	0	True				
ANR	6146532	IdentifierDecl	t1		6146153	0					
ANR	6146533	IdentifierDeclType	int		6146153	0					
ANR	6146534	Identifier	t1		6146153	1					
ANR	6146535	Label	add_var :	2767:0:56858:56865	6146153	1	True				
ANR	6146536	Identifier	add_var		6146153	0					
ANR	6146537	ForStatement	for ( ; ; )		6146153	2					
ANR	6146538	CompoundStatement		70:15:1631:1631	6146153	0					
ANR	6146539	ExpressionStatement	"TOK_GET ( & t1 , & st , & cval )"	2769:7:56891:56916	6146153	0	True				
ANR	6146540	CallExpression	"TOK_GET ( & t1 , & st , & cval )"		6146153	0					
ANR	6146541	Callee	TOK_GET		6146153	0					
ANR	6146542	Identifier	TOK_GET		6146153	0					
ANR	6146543	ArgumentList	& t1		6146153	1					
ANR	6146544	Argument	& t1		6146153	0					
ANR	6146545	UnaryOperationExpression	& t1		6146153	0					
ANR	6146546	UnaryOperator	&		6146153	0					
ANR	6146547	Identifier	t1		6146153	1					
ANR	6146548	Argument	& st		6146153	1					
ANR	6146549	UnaryOperationExpression	& st		6146153	0					
ANR	6146550	UnaryOperator	&		6146153	0					
ANR	6146551	Identifier	st		6146153	1					
ANR	6146552	Argument	& cval		6146153	2					
ANR	6146553	UnaryOperationExpression	& cval		6146153	0					
ANR	6146554	UnaryOperator	&		6146153	0					
ANR	6146555	Identifier	cval		6146153	1					
ANR	6146556	IfStatement	if ( ! t1 )		6146153	1					
ANR	6146557	Condition	! t1	2770:11:56929:56931	6146153	0	True				
ANR	6146558	UnaryOperationExpression	! t1		6146153	0					
ANR	6146559	UnaryOperator	!		6146153	0					
ANR	6146560	Identifier	t1		6146153	1					
ANR	6146561	CompoundStatement		72:16:1683:1683	6146153	1					
ANR	6146562	BreakStatement	break ;	2771:8:56944:56949	6146153	0	True				
ANR	6146563	ExpressionStatement	"tok_str_add2 ( & str , t1 , & cval )"	2773:7:56967:56997	6146153	2	True				
ANR	6146564	CallExpression	"tok_str_add2 ( & str , t1 , & cval )"		6146153	0					
ANR	6146565	Callee	tok_str_add2		6146153	0					
ANR	6146566	Identifier	tok_str_add2		6146153	0					
ANR	6146567	ArgumentList	& str		6146153	1					
ANR	6146568	Argument	& str		6146153	0					
ANR	6146569	UnaryOperationExpression	& str		6146153	0					
ANR	6146570	UnaryOperator	&		6146153	0					
ANR	6146571	Identifier	str		6146153	1					
ANR	6146572	Argument	t1		6146153	1					
ANR	6146573	Identifier	t1		6146153	0					
ANR	6146574	Argument	& cval		6146153	2					
ANR	6146575	UnaryOperationExpression	& cval		6146153	0					
ANR	6146576	UnaryOperator	&		6146153	0					
ANR	6146577	Identifier	cval		6146153	1					
ANR	6146578	ElseStatement	else		6146153	0					
ANR	6146579	CompoundStatement		78:11:1774:1774	6146153	0					
ANR	6146580	ExpressionStatement	"macro_subst ( & str , nested_list , st , NULL )"	2779:5:57118:57159	6146153	0	True				
ANR	6146581	CallExpression	"macro_subst ( & str , nested_list , st , NULL )"		6146153	0					
ANR	6146582	Callee	macro_subst		6146153	0					
ANR	6146583	Identifier	macro_subst		6146153	0					
ANR	6146584	ArgumentList	& str		6146153	1					
ANR	6146585	Argument	& str		6146153	0					
ANR	6146586	UnaryOperationExpression	& str		6146153	0					
ANR	6146587	UnaryOperator	&		6146153	0					
ANR	6146588	Identifier	str		6146153	1					
ANR	6146589	Argument	nested_list		6146153	1					
ANR	6146590	Identifier	nested_list		6146153	0					
ANR	6146591	Argument	st		6146153	2					
ANR	6146592	Identifier	st		6146153	0					
ANR	6146593	Argument	NULL		6146153	3					
ANR	6146594	Identifier	NULL		6146153	0					
ANR	6146595	ElseStatement	else		6146153	0					
ANR	6146596	CompoundStatement		83:10:1926:1926	6146153	0					
ANR	6146597	ExpressionStatement	"tok_str_add ( & str , t )"	2782:4:57183:57204	6146153	0	True				
ANR	6146598	CallExpression	"tok_str_add ( & str , t )"		6146153	0					
ANR	6146599	Callee	tok_str_add		6146153	0					
ANR	6146600	Identifier	tok_str_add		6146153	0					
ANR	6146601	ArgumentList	& str		6146153	1					
ANR	6146602	Argument	& str		6146153	0					
ANR	6146603	UnaryOperationExpression	& str		6146153	0					
ANR	6146604	UnaryOperator	&		6146153	0					
ANR	6146605	Identifier	str		6146153	1					
ANR	6146606	Argument	t		6146153	1					
ANR	6146607	Identifier	t		6146153	0					
ANR	6146608	ElseStatement	else		6146153	0					
ANR	6146609	CompoundStatement		86:9:1969:1969	6146153	0					
ANR	6146610	ExpressionStatement	"tok_str_add2 ( & str , t , & cval )"	2785:3:57225:57254	6146153	0	True				
ANR	6146611	CallExpression	"tok_str_add2 ( & str , t , & cval )"		6146153	0					
ANR	6146612	Callee	tok_str_add2		6146153	0					
ANR	6146613	Identifier	tok_str_add2		6146153	0					
ANR	6146614	ArgumentList	& str		6146153	1					
ANR	6146615	Argument	& str		6146153	0					
ANR	6146616	UnaryOperationExpression	& str		6146153	0					
ANR	6146617	UnaryOperator	&		6146153	0					
ANR	6146618	Identifier	str		6146153	1					
ANR	6146619	Argument	t		6146153	1					
ANR	6146620	Identifier	t		6146153	0					
ANR	6146621	Argument	& cval		6146153	2					
ANR	6146622	UnaryOperationExpression	& cval		6146153	0					
ANR	6146623	UnaryOperator	&		6146153	0					
ANR	6146624	Identifier	cval		6146153	1					
ANR	6146625	ExpressionStatement	last_tok = t	2787:2:57262:57274	6146153	3	True				
ANR	6146626	AssignmentExpression	last_tok = t		6146153	0		=			
ANR	6146627	Identifier	last_tok		6146153	0					
ANR	6146628	Identifier	t		6146153	1					
ANR	6146629	ExpressionStatement	"tok_str_add ( & str , 0 )"	2789:1:57280:57301	6146153	9	True				
ANR	6146630	CallExpression	"tok_str_add ( & str , 0 )"		6146153	0					
ANR	6146631	Callee	tok_str_add		6146153	0					
ANR	6146632	Identifier	tok_str_add		6146153	0					
ANR	6146633	ArgumentList	& str		6146153	1					
ANR	6146634	Argument	& str		6146153	0					
ANR	6146635	UnaryOperationExpression	& str		6146153	0					
ANR	6146636	UnaryOperator	&		6146153	0					
ANR	6146637	Identifier	str		6146153	1					
ANR	6146638	Argument	0		6146153	1					
ANR	6146639	PrimaryExpression	0		6146153	0					
ANR	6146640	ReturnStatement	return str . str ;	2790:1:57304:57318	6146153	10	True				
ANR	6146641	MemberAccess	str . str		6146153	0					
ANR	6146642	Identifier	str		6146153	0					
ANR	6146643	Identifier	str		6146153	1					
ANR	6146644	ReturnType	static int *		6146153	1					
ANR	6146645	Identifier	macro_arg_subst		6146153	2					
ANR	6146646	ParameterList	"Sym * * nested_list , const int * macro_str , Sym * args"		6146153	3					
ANR	6146647	Parameter	Sym * * nested_list	2698:28:55198:55214	6146153	0	True				
ANR	6146648	ParameterType	Sym * *		6146153	0					
ANR	6146649	Identifier	nested_list		6146153	1					
ANR	6146650	Parameter	const int * macro_str	2698:47:55217:55236	6146153	1	True				
ANR	6146651	ParameterType	const int *		6146153	0					
ANR	6146652	Identifier	macro_str		6146153	1					
ANR	6146653	Parameter	Sym * args	2698:69:55239:55247	6146153	2	True				
ANR	6146654	ParameterType	Sym *		6146153	0					
ANR	6146655	Identifier	args		6146153	1					
ANR	6146656	CFGEntryNode	ENTRY		6146153		True				
ANR	6146657	CFGExitNode	EXIT		6146153		True				
ANR	6146658	InfiniteForNode	true		6146153		True				
ANR	6146659	Symbol	cstr		6146153						
ANR	6146660	Symbol	* st		6146153						
ANR	6146661	Symbol	get_tok_str		6146153						
ANR	6146662	Symbol	nested_list		6146153						
ANR	6146663	Symbol	& st		6146153						
ANR	6146664	Symbol	& spc		6146153						
ANR	6146665	Symbol	* macro_str		6146153						
ANR	6146666	Symbol	s -> type . t		6146153						
ANR	6146667	Symbol	* str . len		6146153						
ANR	6146668	Symbol	& str		6146153						
ANR	6146669	Symbol	str . str		6146153						
ANR	6146670	Symbol	& cval		6146153						
ANR	6146671	Symbol	cval . cstr		6146153						
ANR	6146672	Symbol	cstr . size		6146153						
ANR	6146673	Symbol	s -> d		6146153						
ANR	6146674	Symbol	* str		6146153						
ANR	6146675	Symbol	st		6146153						
ANR	6146676	Symbol	& cstr		6146153						
ANR	6146677	Symbol	cstr . data		6146153						
ANR	6146678	Symbol	NULL		6146153						
ANR	6146679	Symbol	TOK_IDENT		6146153						
ANR	6146680	Symbol	gnu_ext		6146153						
ANR	6146681	Symbol	TOK_STR		6146153						
ANR	6146682	Symbol	& t1		6146153						
ANR	6146683	Symbol	spc		6146153						
ANR	6146684	Symbol	* str . str		6146153						
ANR	6146685	Symbol	tcc_nerr		6146153						
ANR	6146686	Symbol	last_tok		6146153						
ANR	6146687	Symbol	args		6146153						
ANR	6146688	Symbol	cval		6146153						
ANR	6146689	Symbol	str		6146153						
ANR	6146690	Symbol	macro_str		6146153						
ANR	6146691	Symbol	s		6146153						
ANR	6146692	Symbol	t		6146153						
ANR	6146693	Symbol	& macro_str		6146153						
ANR	6146694	Symbol	check_space		6146153						
ANR	6146695	Symbol	str . len		6146153						
ANR	6146696	Symbol	TOK_TWOSHARPS		6146153						
ANR	6146697	Symbol	& t		6146153						
ANR	6146698	Symbol	* s		6146153						
ANR	6146699	Symbol	s -> type		6146153						
ANR	6146700	Symbol	t1		6146153						
ANR	6146701	Symbol	sym_find2		6146153						
ANR	6146702	Function	macro_subst_tok	2803:0:57687:62035							
ANR	6146703	FunctionDef	"macro_subst_tok (TokenString * tok_str , Sym * * nested_list , Sym * s , struct macro_level * * can_read_stream)"		6146702	0					
ANR	6146704	CompoundStatement		2805:0:57807:62035	6146702	0					
ANR	6146705	IdentifierDeclStatement	"Sym * args , * sa , * sa1 ;"	2806:1:57810:57830	6146702	0	True				
ANR	6146706	IdentifierDecl	* args		6146702	0					
ANR	6146707	IdentifierDeclType	Sym *		6146702	0					
ANR	6146708	Identifier	args		6146702	1					
ANR	6146709	IdentifierDecl	* sa		6146702	1					
ANR	6146710	IdentifierDeclType	Sym *		6146702	0					
ANR	6146711	Identifier	sa		6146702	1					
ANR	6146712	IdentifierDecl	* sa1		6146702	2					
ANR	6146713	IdentifierDeclType	Sym *		6146702	0					
ANR	6146714	Identifier	sa1		6146702	1					
ANR	6146715	IdentifierDeclStatement	"int mstr_allocated , parlevel , * mstr , t , t1 , spc ;"	2807:1:57833:57880	6146702	1	True				
ANR	6146716	IdentifierDecl	mstr_allocated		6146702	0					
ANR	6146717	IdentifierDeclType	int		6146702	0					
ANR	6146718	Identifier	mstr_allocated		6146702	1					
ANR	6146719	IdentifierDecl	parlevel		6146702	1					
ANR	6146720	IdentifierDeclType	int		6146702	0					
ANR	6146721	Identifier	parlevel		6146702	1					
ANR	6146722	IdentifierDecl	* mstr		6146702	2					
ANR	6146723	IdentifierDeclType	int *		6146702	0					
ANR	6146724	Identifier	mstr		6146702	1					
ANR	6146725	IdentifierDecl	t		6146702	3					
ANR	6146726	IdentifierDeclType	int		6146702	0					
ANR	6146727	Identifier	t		6146702	1					
ANR	6146728	IdentifierDecl	t1		6146702	4					
ANR	6146729	IdentifierDeclType	int		6146702	0					
ANR	6146730	Identifier	t1		6146702	1					
ANR	6146731	IdentifierDecl	spc		6146702	5					
ANR	6146732	IdentifierDeclType	int		6146702	0					
ANR	6146733	Identifier	spc		6146702	1					
ANR	6146734	IdentifierDeclStatement	const int * p ;	2808:1:57883:57895	6146702	2	True				
ANR	6146735	IdentifierDecl	* p		6146702	0					
ANR	6146736	IdentifierDeclType	const int *		6146702	0					
ANR	6146737	Identifier	p		6146702	1					
ANR	6146738	IdentifierDeclStatement	TokenString str ;	2809:1:57898:57913	6146702	3	True				
ANR	6146739	IdentifierDecl	str		6146702	0					
ANR	6146740	IdentifierDeclType	TokenString		6146702	0					
ANR	6146741	Identifier	str		6146702	1					
ANR	6146742	IdentifierDeclStatement	char * cstrval ;	2810:1:57916:57929	6146702	4	True				
ANR	6146743	IdentifierDecl	* cstrval		6146702	0					
ANR	6146744	IdentifierDeclType	char *		6146702	0					
ANR	6146745	Identifier	cstrval		6146702	1					
ANR	6146746	IdentifierDeclStatement	CValue cval ;	2811:1:57932:57943	6146702	5	True				
ANR	6146747	IdentifierDecl	cval		6146702	0					
ANR	6146748	IdentifierDeclType	CValue		6146702	0					
ANR	6146749	Identifier	cval		6146702	1					
ANR	6146750	IdentifierDeclStatement	CString cstr ;	2812:1:57946:57958	6146702	6	True				
ANR	6146751	IdentifierDecl	cstr		6146702	0					
ANR	6146752	IdentifierDeclType	CString		6146702	0					
ANR	6146753	Identifier	cstr		6146702	1					
ANR	6146754	IdentifierDeclStatement	char buf [ 32 ] ;	2813:1:57961:57973	6146702	7	True				
ANR	6146755	IdentifierDecl	buf [ 32 ]		6146702	0					
ANR	6146756	IdentifierDeclType	char [ 32 ]		6146702	0					
ANR	6146757	Identifier	buf		6146702	1					
ANR	6146758	PrimaryExpression	32		6146702	2					
ANR	6146759	IfStatement	if ( tok == TOK___LINE__ )		6146702	8					
ANR	6146760	Condition	tok == TOK___LINE__	2817:5:58053:58071	6146702	0	True				
ANR	6146761	EqualityExpression	tok == TOK___LINE__		6146702	0		==			
ANR	6146762	Identifier	tok		6146702	0					
ANR	6146763	Identifier	TOK___LINE__		6146702	1					
ANR	6146764	CompoundStatement		13:26:266:266	6146702	1					
ANR	6146765	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""%d"" , file -> line_num )"	2818:2:58078:58127	6146702	0	True				
ANR	6146766	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%d"" , file -> line_num )"		6146702	0					
ANR	6146767	Callee	snprintf		6146702	0					
ANR	6146768	Identifier	snprintf		6146702	0					
ANR	6146769	ArgumentList	buf		6146702	1					
ANR	6146770	Argument	buf		6146702	0					
ANR	6146771	Identifier	buf		6146702	0					
ANR	6146772	Argument	sizeof ( buf )		6146702	1					
ANR	6146773	SizeofExpression	sizeof ( buf )		6146702	0					
ANR	6146774	Sizeof	sizeof		6146702	0					
ANR	6146775	SizeofOperand	buf		6146702	1					
ANR	6146776	Argument	"""%d"""		6146702	2					
ANR	6146777	PrimaryExpression	"""%d"""		6146702	0					
ANR	6146778	Argument	file -> line_num		6146702	3					
ANR	6146779	PtrMemberAccess	file -> line_num		6146702	0					
ANR	6146780	Identifier	file		6146702	0					
ANR	6146781	Identifier	line_num		6146702	1					
ANR	6146782	ExpressionStatement	cstrval = buf	2819:2:58131:58144	6146702	1	True				
ANR	6146783	AssignmentExpression	cstrval = buf		6146702	0		=			
ANR	6146784	Identifier	cstrval		6146702	0					
ANR	6146785	Identifier	buf		6146702	1					
ANR	6146786	ExpressionStatement	t1 = TOK_PPNUM	2820:2:58148:58162	6146702	2	True				
ANR	6146787	AssignmentExpression	t1 = TOK_PPNUM		6146702	0		=			
ANR	6146788	Identifier	t1		6146702	0					
ANR	6146789	Identifier	TOK_PPNUM		6146702	1					
ANR	6146790	GotoStatement	goto add_cstr1 ;	2821:2:58166:58180	6146702	3	True				
ANR	6146791	Identifier	add_cstr1		6146702	0					
ANR	6146792	ElseStatement	else		6146702	0					
ANR	6146793	IfStatement	if ( tok == TOK___FILE__ )		6146702	0					
ANR	6146794	Condition	tok == TOK___FILE__	2822:12:58194:58212	6146702	0	True				
ANR	6146795	EqualityExpression	tok == TOK___FILE__		6146702	0		==			
ANR	6146796	Identifier	tok		6146702	0					
ANR	6146797	Identifier	TOK___FILE__		6146702	1					
ANR	6146798	CompoundStatement		18:33:407:407	6146702	1					
ANR	6146799	ExpressionStatement	cstrval = file -> filename	2823:2:58219:58243	6146702	0	True				
ANR	6146800	AssignmentExpression	cstrval = file -> filename		6146702	0		=			
ANR	6146801	Identifier	cstrval		6146702	0					
ANR	6146802	PtrMemberAccess	file -> filename		6146702	1					
ANR	6146803	Identifier	file		6146702	0					
ANR	6146804	Identifier	filename		6146702	1					
ANR	6146805	GotoStatement	goto add_cstr ;	2824:2:58247:58260	6146702	1	True				
ANR	6146806	Identifier	add_cstr		6146702	0					
ANR	6146807	ElseStatement	else		6146702	0					
ANR	6146808	IfStatement	if ( tok == TOK___DATE__ || tok == TOK___TIME__ )		6146702	0					
ANR	6146809	Condition	tok == TOK___DATE__ || tok == TOK___TIME__	2825:12:58274:58315	6146702	0	True				
ANR	6146810	OrExpression	tok == TOK___DATE__ || tok == TOK___TIME__		6146702	0		||			
ANR	6146811	EqualityExpression	tok == TOK___DATE__		6146702	0		==			
ANR	6146812	Identifier	tok		6146702	0					
ANR	6146813	Identifier	TOK___DATE__		6146702	1					
ANR	6146814	EqualityExpression	tok == TOK___TIME__		6146702	1		==			
ANR	6146815	Identifier	tok		6146702	0					
ANR	6146816	Identifier	TOK___TIME__		6146702	1					
ANR	6146817	CompoundStatement		23:2:527:540	6146702	1					
ANR	6146818	IdentifierDeclStatement	time_t ti ;	2826:2:58322:58331	6146702	0	True				
ANR	6146819	IdentifierDecl	ti		6146702	0					
ANR	6146820	IdentifierDeclType	time_t		6146702	0					
ANR	6146821	Identifier	ti		6146702	1					
ANR	6146822	IdentifierDeclStatement	struct tm * tm ;	2827:2:58335:58348	6146702	1	True				
ANR	6146823	IdentifierDecl	* tm		6146702	0					
ANR	6146824	IdentifierDeclType	struct tm *		6146702	0					
ANR	6146825	Identifier	tm		6146702	1					
ANR	6146826	ExpressionStatement	time ( & ti )	2829:2:58353:58363	6146702	2	True				
ANR	6146827	CallExpression	time ( & ti )		6146702	0					
ANR	6146828	Callee	time		6146702	0					
ANR	6146829	Identifier	time		6146702	0					
ANR	6146830	ArgumentList	& ti		6146702	1					
ANR	6146831	Argument	& ti		6146702	0					
ANR	6146832	UnaryOperationExpression	& ti		6146702	0					
ANR	6146833	UnaryOperator	&		6146702	0					
ANR	6146834	Identifier	ti		6146702	1					
ANR	6146835	ExpressionStatement	tm = localtime ( & ti )	2830:2:58367:58387	6146702	3	True				
ANR	6146836	AssignmentExpression	tm = localtime ( & ti )		6146702	0		=			
ANR	6146837	Identifier	tm		6146702	0					
ANR	6146838	CallExpression	localtime ( & ti )		6146702	1					
ANR	6146839	Callee	localtime		6146702	0					
ANR	6146840	Identifier	localtime		6146702	0					
ANR	6146841	ArgumentList	& ti		6146702	1					
ANR	6146842	Argument	& ti		6146702	0					
ANR	6146843	UnaryOperationExpression	& ti		6146702	0					
ANR	6146844	UnaryOperator	&		6146702	0					
ANR	6146845	Identifier	ti		6146702	1					
ANR	6146846	IfStatement	if ( tok == TOK___DATE__ )		6146702	4					
ANR	6146847	Condition	tok == TOK___DATE__	2831:6:58395:58413	6146702	0	True				
ANR	6146848	EqualityExpression	tok == TOK___DATE__		6146702	0		==			
ANR	6146849	Identifier	tok		6146702	0					
ANR	6146850	Identifier	TOK___DATE__		6146702	1					
ANR	6146851	CompoundStatement		27:27:608:608	6146702	1					
ANR	6146852	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""%s %2d %d"" , ab_month_name [ tm -> tm_mon ] , tm -> tm_mday , tm -> tm_year + 1900 )"	2832:3:58421:58525	6146702	0	True				
ANR	6146853	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%s %2d %d"" , ab_month_name [ tm -> tm_mon ] , tm -> tm_mday , tm -> tm_year + 1900 )"		6146702	0					
ANR	6146854	Callee	snprintf		6146702	0					
ANR	6146855	Identifier	snprintf		6146702	0					
ANR	6146856	ArgumentList	buf		6146702	1					
ANR	6146857	Argument	buf		6146702	0					
ANR	6146858	Identifier	buf		6146702	0					
ANR	6146859	Argument	sizeof ( buf )		6146702	1					
ANR	6146860	SizeofExpression	sizeof ( buf )		6146702	0					
ANR	6146861	Sizeof	sizeof		6146702	0					
ANR	6146862	SizeofOperand	buf		6146702	1					
ANR	6146863	Argument	"""%s %2d %d"""		6146702	2					
ANR	6146864	PrimaryExpression	"""%s %2d %d"""		6146702	0					
ANR	6146865	Argument	ab_month_name [ tm -> tm_mon ]		6146702	3					
ANR	6146866	ArrayIndexing	ab_month_name [ tm -> tm_mon ]		6146702	0					
ANR	6146867	Identifier	ab_month_name		6146702	0					
ANR	6146868	PtrMemberAccess	tm -> tm_mon		6146702	1					
ANR	6146869	Identifier	tm		6146702	0					
ANR	6146870	Identifier	tm_mon		6146702	1					
ANR	6146871	Argument	tm -> tm_mday		6146702	4					
ANR	6146872	PtrMemberAccess	tm -> tm_mday		6146702	0					
ANR	6146873	Identifier	tm		6146702	0					
ANR	6146874	Identifier	tm_mday		6146702	1					
ANR	6146875	Argument	tm -> tm_year + 1900		6146702	5					
ANR	6146876	AdditiveExpression	tm -> tm_year + 1900		6146702	0		+			
ANR	6146877	PtrMemberAccess	tm -> tm_year		6146702	0					
ANR	6146878	Identifier	tm		6146702	0					
ANR	6146879	Identifier	tm_year		6146702	1					
ANR	6146880	PrimaryExpression	1900		6146702	1					
ANR	6146881	ElseStatement	else		6146702	0					
ANR	6146882	CompoundStatement		30:9:728:728	6146702	0					
ANR	6146883	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""%02d:%02d:%02d"" , tm -> tm_hour , tm -> tm_min , tm -> tm_sec )"	2835:3:58541:58627	6146702	0	True				
ANR	6146884	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%02d:%02d:%02d"" , tm -> tm_hour , tm -> tm_min , tm -> tm_sec )"		6146702	0					
ANR	6146885	Callee	snprintf		6146702	0					
ANR	6146886	Identifier	snprintf		6146702	0					
ANR	6146887	ArgumentList	buf		6146702	1					
ANR	6146888	Argument	buf		6146702	0					
ANR	6146889	Identifier	buf		6146702	0					
ANR	6146890	Argument	sizeof ( buf )		6146702	1					
ANR	6146891	SizeofExpression	sizeof ( buf )		6146702	0					
ANR	6146892	Sizeof	sizeof		6146702	0					
ANR	6146893	SizeofOperand	buf		6146702	1					
ANR	6146894	Argument	"""%02d:%02d:%02d"""		6146702	2					
ANR	6146895	PrimaryExpression	"""%02d:%02d:%02d"""		6146702	0					
ANR	6146896	Argument	tm -> tm_hour		6146702	3					
ANR	6146897	PtrMemberAccess	tm -> tm_hour		6146702	0					
ANR	6146898	Identifier	tm		6146702	0					
ANR	6146899	Identifier	tm_hour		6146702	1					
ANR	6146900	Argument	tm -> tm_min		6146702	4					
ANR	6146901	PtrMemberAccess	tm -> tm_min		6146702	0					
ANR	6146902	Identifier	tm		6146702	0					
ANR	6146903	Identifier	tm_min		6146702	1					
ANR	6146904	Argument	tm -> tm_sec		6146702	5					
ANR	6146905	PtrMemberAccess	tm -> tm_sec		6146702	0					
ANR	6146906	Identifier	tm		6146702	0					
ANR	6146907	Identifier	tm_sec		6146702	1					
ANR	6146908	ExpressionStatement	cstrval = buf	2838:2:58635:58648	6146702	5	True				
ANR	6146909	AssignmentExpression	cstrval = buf		6146702	0		=			
ANR	6146910	Identifier	cstrval		6146702	0					
ANR	6146911	Identifier	buf		6146702	1					
ANR	6146912	Label	add_cstr :	2839:0:58650:58658	6146702	6	True				
ANR	6146913	Identifier	add_cstr		6146702	0					
ANR	6146914	ExpressionStatement	t1 = TOK_STR	2840:2:58662:58674	6146702	7	True				
ANR	6146915	AssignmentExpression	t1 = TOK_STR		6146702	0		=			
ANR	6146916	Identifier	t1		6146702	0					
ANR	6146917	Identifier	TOK_STR		6146702	1					
ANR	6146918	Label	add_cstr1 :	2841:0:58676:58685	6146702	8	True				
ANR	6146919	Identifier	add_cstr1		6146702	0					
ANR	6146920	ExpressionStatement	cstr_new ( & cstr )	2842:2:58689:58705	6146702	9	True				
ANR	6146921	CallExpression	cstr_new ( & cstr )		6146702	0					
ANR	6146922	Callee	cstr_new		6146702	0					
ANR	6146923	Identifier	cstr_new		6146702	0					
ANR	6146924	ArgumentList	& cstr		6146702	1					
ANR	6146925	Argument	& cstr		6146702	0					
ANR	6146926	UnaryOperationExpression	& cstr		6146702	0					
ANR	6146927	UnaryOperator	&		6146702	0					
ANR	6146928	Identifier	cstr		6146702	1					
ANR	6146929	ExpressionStatement	"cstr_cat ( & cstr , cstrval )"	2843:2:58709:58734	6146702	10	True				
ANR	6146930	CallExpression	"cstr_cat ( & cstr , cstrval )"		6146702	0					
ANR	6146931	Callee	cstr_cat		6146702	0					
ANR	6146932	Identifier	cstr_cat		6146702	0					
ANR	6146933	ArgumentList	& cstr		6146702	1					
ANR	6146934	Argument	& cstr		6146702	0					
ANR	6146935	UnaryOperationExpression	& cstr		6146702	0					
ANR	6146936	UnaryOperator	&		6146702	0					
ANR	6146937	Identifier	cstr		6146702	1					
ANR	6146938	Argument	cstrval		6146702	1					
ANR	6146939	Identifier	cstrval		6146702	0					
ANR	6146940	ExpressionStatement	"cstr_ccat ( & cstr , '\\0' )"	2844:2:58738:58761	6146702	11	True				
ANR	6146941	CallExpression	"cstr_ccat ( & cstr , '\\0' )"		6146702	0					
ANR	6146942	Callee	cstr_ccat		6146702	0					
ANR	6146943	Identifier	cstr_ccat		6146702	0					
ANR	6146944	ArgumentList	& cstr		6146702	1					
ANR	6146945	Argument	& cstr		6146702	0					
ANR	6146946	UnaryOperationExpression	& cstr		6146702	0					
ANR	6146947	UnaryOperator	&		6146702	0					
ANR	6146948	Identifier	cstr		6146702	1					
ANR	6146949	Argument	'\\0'		6146702	1					
ANR	6146950	PrimaryExpression	'\\0'		6146702	0					
ANR	6146951	ExpressionStatement	cval . cstr = & cstr	2845:2:58765:58782	6146702	12	True				
ANR	6146952	AssignmentExpression	cval . cstr = & cstr		6146702	0		=			
ANR	6146953	MemberAccess	cval . cstr		6146702	0					
ANR	6146954	Identifier	cval		6146702	0					
ANR	6146955	Identifier	cstr		6146702	1					
ANR	6146956	UnaryOperationExpression	& cstr		6146702	1					
ANR	6146957	UnaryOperator	&		6146702	0					
ANR	6146958	Identifier	cstr		6146702	1					
ANR	6146959	ExpressionStatement	"tok_str_add2 ( tok_str , t1 , & cval )"	2846:2:58786:58819	6146702	13	True				
ANR	6146960	CallExpression	"tok_str_add2 ( tok_str , t1 , & cval )"		6146702	0					
ANR	6146961	Callee	tok_str_add2		6146702	0					
ANR	6146962	Identifier	tok_str_add2		6146702	0					
ANR	6146963	ArgumentList	tok_str		6146702	1					
ANR	6146964	Argument	tok_str		6146702	0					
ANR	6146965	Identifier	tok_str		6146702	0					
ANR	6146966	Argument	t1		6146702	1					
ANR	6146967	Identifier	t1		6146702	0					
ANR	6146968	Argument	& cval		6146702	2					
ANR	6146969	UnaryOperationExpression	& cval		6146702	0					
ANR	6146970	UnaryOperator	&		6146702	0					
ANR	6146971	Identifier	cval		6146702	1					
ANR	6146972	ExpressionStatement	cstr_free ( & cstr )	2847:2:58823:58840	6146702	14	True				
ANR	6146973	CallExpression	cstr_free ( & cstr )		6146702	0					
ANR	6146974	Callee	cstr_free		6146702	0					
ANR	6146975	Identifier	cstr_free		6146702	0					
ANR	6146976	ArgumentList	& cstr		6146702	1					
ANR	6146977	Argument	& cstr		6146702	0					
ANR	6146978	UnaryOperationExpression	& cstr		6146702	0					
ANR	6146979	UnaryOperator	&		6146702	0					
ANR	6146980	Identifier	cstr		6146702	1					
ANR	6146981	ElseStatement	else		6146702	0					
ANR	6146982	CompoundStatement		44:8:1042:1042	6146702	0					
ANR	6146983	ExpressionStatement	mstr = s -> d	2849:2:58854:58865	6146702	0	True				
ANR	6146984	AssignmentExpression	mstr = s -> d		6146702	0		=			
ANR	6146985	Identifier	mstr		6146702	0					
ANR	6146986	PtrMemberAccess	s -> d		6146702	1					
ANR	6146987	Identifier	s		6146702	0					
ANR	6146988	Identifier	d		6146702	1					
ANR	6146989	ExpressionStatement	mstr_allocated = 0	2850:2:58869:58887	6146702	1	True				
ANR	6146990	AssignmentExpression	mstr_allocated = 0		6146702	0		=			
ANR	6146991	Identifier	mstr_allocated		6146702	0					
ANR	6146992	PrimaryExpression	0		6146702	1					
ANR	6146993	IfStatement	if ( s -> type . t == MACRO_FUNC )		6146702	2					
ANR	6146994	Condition	s -> type . t == MACRO_FUNC	2851:6:58895:58917	6146702	0	True				
ANR	6146995	EqualityExpression	s -> type . t == MACRO_FUNC		6146702	0		==			
ANR	6146996	MemberAccess	s -> type . t		6146702	0					
ANR	6146997	PtrMemberAccess	s -> type		6146702	0					
ANR	6146998	Identifier	s		6146702	0					
ANR	6146999	Identifier	type		6146702	1					
ANR	6147000	Identifier	t		6146702	1					
ANR	6147001	Identifier	MACRO_FUNC		6146702	1					
ANR	6147002	CompoundStatement		47:31:1112:1112	6146702	1					
ANR	6147003	Label	redo :	2854:0:59028:59032	6146702	0	True				
ANR	6147004	Identifier	redo		6146702	0					
ANR	6147005	IfStatement	if ( macro_ptr )		6146702	1					
ANR	6147006	Condition	macro_ptr	2855:7:59041:59049	6146702	0	True				
ANR	6147007	Identifier	macro_ptr		6146702	0					
ANR	6147008	CompoundStatement		51:18:1244:1244	6146702	1					
ANR	6147009	ExpressionStatement	p = macro_ptr	2856:4:59058:59071	6146702	0	True				
ANR	6147010	AssignmentExpression	p = macro_ptr		6146702	0		=			
ANR	6147011	Identifier	p		6146702	0					
ANR	6147012	Identifier	macro_ptr		6146702	1					
ANR	6147013	WhileStatement	while ( is_space ( t = * p ) || TOK_LINEFEED == t )		6146702	1					
ANR	6147014	Condition	is_space ( t = * p ) || TOK_LINEFEED == t	2857:11:59084:59121	6146702	0	True				
ANR	6147015	OrExpression	is_space ( t = * p ) || TOK_LINEFEED == t		6146702	0		||			
ANR	6147016	CallExpression	is_space ( t = * p )		6146702	0					
ANR	6147017	Callee	is_space		6146702	0					
ANR	6147018	Identifier	is_space		6146702	0					
ANR	6147019	ArgumentList	t = * p		6146702	1					
ANR	6147020	Argument	t = * p		6146702	0					
ANR	6147021	AssignmentExpression	t = * p		6146702	0		=			
ANR	6147022	Identifier	t		6146702	0					
ANR	6147023	UnaryOperationExpression	* p		6146702	1					
ANR	6147024	UnaryOperator	*		6146702	0					
ANR	6147025	Identifier	p		6146702	1					
ANR	6147026	EqualityExpression	TOK_LINEFEED == t		6146702	1		==			
ANR	6147027	Identifier	TOK_LINEFEED		6146702	0					
ANR	6147028	Identifier	t		6146702	1					
ANR	6147029	ExpressionStatement	++ p	2858:5:59129:59132	6146702	1	True				
ANR	6147030	UnaryExpression	++ p		6146702	0					
ANR	6147031	IncDec	++		6146702	0					
ANR	6147032	Identifier	p		6146702	1					
ANR	6147033	IfStatement	if ( t == 0 && can_read_stream )		6146702	2					
ANR	6147034	Condition	t == 0 && can_read_stream	2859:8:59142:59166	6146702	0	True				
ANR	6147035	AndExpression	t == 0 && can_read_stream		6146702	0		&&			
ANR	6147036	EqualityExpression	t == 0		6146702	0		==			
ANR	6147037	Identifier	t		6146702	0					
ANR	6147038	PrimaryExpression	0		6146702	1					
ANR	6147039	Identifier	can_read_stream		6146702	1					
ANR	6147040	CompoundStatement		58:5:1452:1493	6146702	1					
ANR	6147041	IdentifierDeclStatement	struct macro_level * ml = * can_read_stream ;	2862:5:59260:59301	6146702	0	True				
ANR	6147042	IdentifierDecl	* ml = * can_read_stream		6146702	0					
ANR	6147043	IdentifierDeclType	struct macro_level *		6146702	0					
ANR	6147044	Identifier	ml		6146702	1					
ANR	6147045	AssignmentExpression	* ml = * can_read_stream		6146702	2		=			
ANR	6147046	Identifier	ml		6146702	0					
ANR	6147047	UnaryOperationExpression	* can_read_stream		6146702	1					
ANR	6147048	UnaryOperator	*		6146702	0					
ANR	6147049	Identifier	can_read_stream		6146702	1					
ANR	6147050	ExpressionStatement	macro_ptr = NULL	2863:5:59308:59324	6146702	1	True				
ANR	6147051	AssignmentExpression	macro_ptr = NULL		6146702	0		=			
ANR	6147052	Identifier	macro_ptr		6146702	0					
ANR	6147053	Identifier	NULL		6146702	1					
ANR	6147054	IfStatement	if ( ml )		6146702	2					
ANR	6147055	Condition	ml	2864:9:59335:59336	6146702	0	True				
ANR	6147056	Identifier	ml		6146702	0					
ANR	6147057	CompoundStatement		60:13:1531:1531	6146702	1					
ANR	6147058	ExpressionStatement	macro_ptr = ml -> p	2865:6:59347:59364	6146702	0	True				
ANR	6147059	AssignmentExpression	macro_ptr = ml -> p		6146702	0		=			
ANR	6147060	Identifier	macro_ptr		6146702	0					
ANR	6147061	PtrMemberAccess	ml -> p		6146702	1					
ANR	6147062	Identifier	ml		6146702	0					
ANR	6147063	Identifier	p		6146702	1					
ANR	6147064	ExpressionStatement	ml -> p = NULL	2866:6:59372:59384	6146702	1	True				
ANR	6147065	AssignmentExpression	ml -> p = NULL		6146702	0		=			
ANR	6147066	PtrMemberAccess	ml -> p		6146702	0					
ANR	6147067	Identifier	ml		6146702	0					
ANR	6147068	Identifier	p		6146702	1					
ANR	6147069	Identifier	NULL		6146702	1					
ANR	6147070	ExpressionStatement	* can_read_stream = ml -> prev	2867:6:59392:59419	6146702	2	True				
ANR	6147071	AssignmentExpression	* can_read_stream = ml -> prev		6146702	0		=			
ANR	6147072	UnaryOperationExpression	* can_read_stream		6146702	0					
ANR	6147073	UnaryOperator	*		6146702	0					
ANR	6147074	Identifier	can_read_stream		6146702	1					
ANR	6147075	PtrMemberAccess	ml -> prev		6146702	1					
ANR	6147076	Identifier	ml		6146702	0					
ANR	6147077	Identifier	prev		6146702	1					
ANR	6147078	ExpressionStatement	( * nested_list ) -> v = - 1	2870:5:59489:59511	6146702	3	True				
ANR	6147079	AssignmentExpression	( * nested_list ) -> v = - 1		6146702	0		=			
ANR	6147080	PtrMemberAccess	( * nested_list ) -> v		6146702	0					
ANR	6147081	UnaryOperationExpression	* nested_list		6146702	0					
ANR	6147082	UnaryOperator	*		6146702	0					
ANR	6147083	Identifier	nested_list		6146702	1					
ANR	6147084	Identifier	v		6146702	1					
ANR	6147085	UnaryOperationExpression	- 1		6146702	1					
ANR	6147086	UnaryOperator	-		6146702	0					
ANR	6147087	PrimaryExpression	1		6146702	1					
ANR	6147088	GotoStatement	goto redo ;	2871:5:59518:59527	6146702	4	True				
ANR	6147089	Identifier	redo		6146702	0					
ANR	6147090	ElseStatement	else		6146702	0					
ANR	6147091	CompoundStatement		69:10:1737:1737	6146702	0					
ANR	6147092	ExpressionStatement	ch = file -> buf_ptr [ 0 ]	2874:4:59551:59572	6146702	0	True				
ANR	6147093	AssignmentExpression	ch = file -> buf_ptr [ 0 ]		6146702	0		=			
ANR	6147094	Identifier	ch		6146702	0					
ANR	6147095	ArrayIndexing	file -> buf_ptr [ 0 ]		6146702	1					
ANR	6147096	PtrMemberAccess	file -> buf_ptr		6146702	0					
ANR	6147097	Identifier	file		6146702	0					
ANR	6147098	Identifier	buf_ptr		6146702	1					
ANR	6147099	PrimaryExpression	0		6146702	1					
ANR	6147100	WhileStatement	while ( is_space ( ch ) || ch == '\\n' || ch == '/' )		6146702	1					
ANR	6147101	Condition	is_space ( ch ) || ch == '\\n' || ch == '/'	2875:11:59585:59624	6146702	0	True				
ANR	6147102	OrExpression	is_space ( ch ) || ch == '\\n' || ch == '/'		6146702	0		||			
ANR	6147103	CallExpression	is_space ( ch )		6146702	0					
ANR	6147104	Callee	is_space		6146702	0					
ANR	6147105	Identifier	is_space		6146702	0					
ANR	6147106	ArgumentList	ch		6146702	1					
ANR	6147107	Argument	ch		6146702	0					
ANR	6147108	Identifier	ch		6146702	0					
ANR	6147109	OrExpression	ch == '\\n' || ch == '/'		6146702	1		||			
ANR	6147110	EqualityExpression	ch == '\\n'		6146702	0		==			
ANR	6147111	Identifier	ch		6146702	0					
ANR	6147112	PrimaryExpression	'\\n'		6146702	1					
ANR	6147113	EqualityExpression	ch == '/'		6146702	1		==			
ANR	6147114	Identifier	ch		6146702	0					
ANR	6147115	PrimaryExpression	'/'		6146702	1					
ANR	6147116	CompoundStatement		71:53:1819:1819	6146702	1					
ANR	6147117	IfStatement	if ( ch == '/' )		6146702	0					
ANR	6147118	Condition	ch == '/'	2876:9:59638:59646	6146702	0	True				
ANR	6147119	EqualityExpression	ch == '/'		6146702	0		==			
ANR	6147120	Identifier	ch		6146702	0					
ANR	6147121	PrimaryExpression	'/'		6146702	1					
ANR	6147122	CompoundStatement		74:6:1862:1888	6146702	1					
ANR	6147123	IdentifierDeclStatement	int c ;	2877:6:59657:59662	6146702	0	True				
ANR	6147124	IdentifierDecl	c		6146702	0					
ANR	6147125	IdentifierDeclType	int		6146702	0					
ANR	6147126	Identifier	c		6146702	1					
ANR	6147127	IdentifierDeclStatement	uint8_t * p = file -> buf_ptr ;	2878:6:59670:59696	6146702	1	True				
ANR	6147128	IdentifierDecl	* p = file -> buf_ptr		6146702	0					
ANR	6147129	IdentifierDeclType	uint8_t *		6146702	0					
ANR	6147130	Identifier	p		6146702	1					
ANR	6147131	AssignmentExpression	* p = file -> buf_ptr		6146702	2		=			
ANR	6147132	Identifier	p		6146702	0					
ANR	6147133	PtrMemberAccess	file -> buf_ptr		6146702	1					
ANR	6147134	Identifier	file		6146702	0					
ANR	6147135	Identifier	buf_ptr		6146702	1					
ANR	6147136	ExpressionStatement	"PEEKC ( c , p )"	2879:6:59704:59716	6146702	2	True				
ANR	6147137	CallExpression	"PEEKC ( c , p )"		6146702	0					
ANR	6147138	Callee	PEEKC		6146702	0					
ANR	6147139	Identifier	PEEKC		6146702	0					
ANR	6147140	ArgumentList	c		6146702	1					
ANR	6147141	Argument	c		6146702	0					
ANR	6147142	Identifier	c		6146702	0					
ANR	6147143	Argument	p		6146702	1					
ANR	6147144	Identifier	p		6146702	0					
ANR	6147145	IfStatement	if ( c == '*' )		6146702	3					
ANR	6147146	Condition	c == '*'	2880:10:59728:59735	6146702	0	True				
ANR	6147147	EqualityExpression	c == '*'		6146702	0		==			
ANR	6147148	Identifier	c		6146702	0					
ANR	6147149	PrimaryExpression	'*'		6146702	1					
ANR	6147150	CompoundStatement		76:20:1930:1930	6146702	1					
ANR	6147151	ExpressionStatement	p = parse_comment ( p )	2881:7:59747:59768	6146702	0	True				
ANR	6147152	AssignmentExpression	p = parse_comment ( p )		6146702	0		=			
ANR	6147153	Identifier	p		6146702	0					
ANR	6147154	CallExpression	parse_comment ( p )		6146702	1					
ANR	6147155	Callee	parse_comment		6146702	0					
ANR	6147156	Identifier	parse_comment		6146702	0					
ANR	6147157	ArgumentList	p		6146702	1					
ANR	6147158	Argument	p		6146702	0					
ANR	6147159	Identifier	p		6146702	0					
ANR	6147160	ExpressionStatement	file -> buf_ptr = p - 1	2882:7:59777:59798	6146702	1	True				
ANR	6147161	AssignmentExpression	file -> buf_ptr = p - 1		6146702	0		=			
ANR	6147162	PtrMemberAccess	file -> buf_ptr		6146702	0					
ANR	6147163	Identifier	file		6146702	0					
ANR	6147164	Identifier	buf_ptr		6146702	1					
ANR	6147165	AdditiveExpression	p - 1		6146702	1		-			
ANR	6147166	Identifier	p		6146702	0					
ANR	6147167	PrimaryExpression	1		6146702	1					
ANR	6147168	ElseStatement	else		6146702	0					
ANR	6147169	IfStatement	if ( c == '/' )		6146702	0					
ANR	6147170	Condition	c == '/'	2883:17:59817:59824	6146702	0	True				
ANR	6147171	EqualityExpression	c == '/'		6146702	0		==			
ANR	6147172	Identifier	c		6146702	0					
ANR	6147173	PrimaryExpression	'/'		6146702	1					
ANR	6147174	CompoundStatement		79:27:2019:2019	6146702	1					
ANR	6147175	ExpressionStatement	p = parse_line_comment ( p )	2884:7:59836:59862	6146702	0	True				
ANR	6147176	AssignmentExpression	p = parse_line_comment ( p )		6146702	0		=			
ANR	6147177	Identifier	p		6146702	0					
ANR	6147178	CallExpression	parse_line_comment ( p )		6146702	1					
ANR	6147179	Callee	parse_line_comment		6146702	0					
ANR	6147180	Identifier	parse_line_comment		6146702	0					
ANR	6147181	ArgumentList	p		6146702	1					
ANR	6147182	Argument	p		6146702	0					
ANR	6147183	Identifier	p		6146702	0					
ANR	6147184	ExpressionStatement	file -> buf_ptr = p - 1	2885:7:59871:59892	6146702	1	True				
ANR	6147185	AssignmentExpression	file -> buf_ptr = p - 1		6146702	0		=			
ANR	6147186	PtrMemberAccess	file -> buf_ptr		6146702	0					
ANR	6147187	Identifier	file		6146702	0					
ANR	6147188	Identifier	buf_ptr		6146702	1					
ANR	6147189	AdditiveExpression	p - 1		6146702	1		-			
ANR	6147190	Identifier	p		6146702	0					
ANR	6147191	PrimaryExpression	1		6146702	1					
ANR	6147192	ElseStatement	else		6146702	0					
ANR	6147193	CompoundStatement		82:13:2099:2099	6146702	0					
ANR	6147194	BreakStatement	break ;	2887:7:59916:59921	6146702	0	True				
ANR	6147195	ExpressionStatement	cinp ( )	2890:5:59943:59950	6146702	1	True				
ANR	6147196	CallExpression	cinp ( )		6146702	0					
ANR	6147197	Callee	cinp		6146702	0					
ANR	6147198	Identifier	cinp		6146702	0					
ANR	6147199	ArgumentList			6146702	1					
ANR	6147200	ExpressionStatement	t = ch	2892:4:59962:59968	6146702	2	True				
ANR	6147201	AssignmentExpression	t = ch		6146702	0		=			
ANR	6147202	Identifier	t		6146702	0					
ANR	6147203	Identifier	ch		6146702	1					
ANR	6147204	IfStatement	if ( t != '(' )		6146702	2					
ANR	6147205	Condition	t != '('	2894:7:59982:59989	6146702	0	True				
ANR	6147206	EqualityExpression	t != '('		6146702	0		!=			
ANR	6147207	Identifier	t		6146702	0					
ANR	6147208	PrimaryExpression	'('		6146702	1					
ANR	6147209	CompoundStatement		90:17:2184:2184	6146702	1					
ANR	6147210	ReturnStatement	return - 1 ;	2895:4:60019:60028	6146702	0	True				
ANR	6147211	UnaryOperationExpression	- 1		6146702	0					
ANR	6147212	UnaryOperator	-		6146702	0					
ANR	6147213	PrimaryExpression	1		6146702	1					
ANR	6147214	ExpressionStatement	next_nomacro ( )	2899:3:60063:60078	6146702	3	True				
ANR	6147215	CallExpression	next_nomacro ( )		6146702	0					
ANR	6147216	Callee	next_nomacro		6146702	0					
ANR	6147217	Identifier	next_nomacro		6146702	0					
ANR	6147218	ArgumentList			6146702	1					
ANR	6147219	ExpressionStatement	next_nomacro ( )	2900:3:60083:60098	6146702	4	True				
ANR	6147220	CallExpression	next_nomacro ( )		6146702	0					
ANR	6147221	Callee	next_nomacro		6146702	0					
ANR	6147222	Identifier	next_nomacro		6146702	0					
ANR	6147223	ArgumentList			6146702	1					
ANR	6147224	ExpressionStatement	args = NULL	2901:3:60103:60114	6146702	5	True				
ANR	6147225	AssignmentExpression	args = NULL		6146702	0		=			
ANR	6147226	Identifier	args		6146702	0					
ANR	6147227	Identifier	NULL		6146702	1					
ANR	6147228	ExpressionStatement	sa = s -> next	2902:3:60119:60131	6146702	6	True				
ANR	6147229	AssignmentExpression	sa = s -> next		6146702	0		=			
ANR	6147230	Identifier	sa		6146702	0					
ANR	6147231	PtrMemberAccess	s -> next		6146702	1					
ANR	6147232	Identifier	s		6146702	0					
ANR	6147233	Identifier	next		6146702	1					
ANR	6147234	WhileStatement	while ( tcc_nerr ( ) == 0 )		6146702	7					
ANR	6147235	Condition	tcc_nerr ( ) == 0	2904:10:60200:60215	6146702	0	True				
ANR	6147236	EqualityExpression	tcc_nerr ( ) == 0		6146702	0		==			
ANR	6147237	CallExpression	tcc_nerr ( )		6146702	0					
ANR	6147238	Callee	tcc_nerr		6146702	0					
ANR	6147239	Identifier	tcc_nerr		6146702	0					
ANR	6147240	ArgumentList			6146702	1					
ANR	6147241	PrimaryExpression	0		6146702	1					
ANR	6147242	CompoundStatement		100:28:2410:2410	6146702	1					
ANR	6147243	IfStatement	if ( ! args && ! sa && tok == ')' )		6146702	0					
ANR	6147244	Condition	! args && ! sa && tok == ')'	2906:8:60255:60280	6146702	0	True				
ANR	6147245	AndExpression	! args && ! sa && tok == ')'		6146702	0		&&			
ANR	6147246	UnaryOperationExpression	! args		6146702	0					
ANR	6147247	UnaryOperator	!		6146702	0					
ANR	6147248	Identifier	args		6146702	1					
ANR	6147249	AndExpression	! sa && tok == ')'		6146702	1		&&			
ANR	6147250	UnaryOperationExpression	! sa		6146702	0					
ANR	6147251	UnaryOperator	!		6146702	0					
ANR	6147252	Identifier	sa		6146702	1					
ANR	6147253	EqualityExpression	tok == ')'		6146702	1		==			
ANR	6147254	Identifier	tok		6146702	0					
ANR	6147255	PrimaryExpression	')'		6146702	1					
ANR	6147256	CompoundStatement		102:36:2475:2475	6146702	1					
ANR	6147257	BreakStatement	break ;	2907:5:60290:60295	6146702	0	True				
ANR	6147258	IfStatement	if ( ! sa )		6146702	1					
ANR	6147259	Condition	! sa	2909:8:60311:60313	6146702	0	True				
ANR	6147260	UnaryOperationExpression	! sa		6146702	0					
ANR	6147261	UnaryOperator	!		6146702	0					
ANR	6147262	Identifier	sa		6146702	1					
ANR	6147263	CompoundStatement		105:13:2508:2508	6146702	1					
ANR	6147264	ExpressionStatement	"tcc_error ( ""macro '%s' used with too many args"" , get_tok_str ( s -> v , 0 ) )"	2910:5:60323:60400	6146702	0	True				
ANR	6147265	CallExpression	"tcc_error ( ""macro '%s' used with too many args"" , get_tok_str ( s -> v , 0 ) )"		6146702	0					
ANR	6147266	Callee	tcc_error		6146702	0					
ANR	6147267	Identifier	tcc_error		6146702	0					
ANR	6147268	ArgumentList	"""macro '%s' used with too many args"""		6146702	1					
ANR	6147269	Argument	"""macro '%s' used with too many args"""		6146702	0					
ANR	6147270	PrimaryExpression	"""macro '%s' used with too many args"""		6146702	0					
ANR	6147271	Argument	"get_tok_str ( s -> v , 0 )"		6146702	1					
ANR	6147272	CallExpression	"get_tok_str ( s -> v , 0 )"		6146702	0					
ANR	6147273	Callee	get_tok_str		6146702	0					
ANR	6147274	Identifier	get_tok_str		6146702	0					
ANR	6147275	ArgumentList	s -> v		6146702	1					
ANR	6147276	Argument	s -> v		6146702	0					
ANR	6147277	PtrMemberAccess	s -> v		6146702	0					
ANR	6147278	Identifier	s		6146702	0					
ANR	6147279	Identifier	v		6146702	1					
ANR	6147280	Argument	0		6146702	1					
ANR	6147281	PrimaryExpression	0		6146702	0					
ANR	6147282	ExpressionStatement	tok_str_new ( & str )	2913:4:60412:60430	6146702	2	True				
ANR	6147283	CallExpression	tok_str_new ( & str )		6146702	0					
ANR	6147284	Callee	tok_str_new		6146702	0					
ANR	6147285	Identifier	tok_str_new		6146702	0					
ANR	6147286	ArgumentList	& str		6146702	1					
ANR	6147287	Argument	& str		6146702	0					
ANR	6147288	UnaryOperationExpression	& str		6146702	0					
ANR	6147289	UnaryOperator	&		6146702	0					
ANR	6147290	Identifier	str		6146702	1					
ANR	6147291	ExpressionStatement	parlevel = spc = 0	2914:4:60436:60454	6146702	3	True				
ANR	6147292	AssignmentExpression	parlevel = spc = 0		6146702	0		=			
ANR	6147293	Identifier	parlevel		6146702	0					
ANR	6147294	AssignmentExpression	spc = 0		6146702	1		=			
ANR	6147295	Identifier	spc		6146702	0					
ANR	6147296	PrimaryExpression	0		6146702	1					
ANR	6147297	WhileStatement	"while ( ( parlevel > 0 || ( tok != ')' && ( tok != ',' || ( sa && sa -> type . t ) ) ) ) && tok != - 1 )"		6146702	4					
ANR	6147298	Condition	"( parlevel > 0 || ( tok != ')' && ( tok != ',' || ( sa && sa -> type . t ) ) ) ) && tok != - 1"	2916:11:60516:60618	6146702	0	True				
ANR	6147299	AndExpression	"( parlevel > 0 || ( tok != ')' && ( tok != ',' || ( sa && sa -> type . t ) ) ) ) && tok != - 1"		6146702	0		&&			
ANR	6147300	OrExpression	"parlevel > 0 || ( tok != ')' && ( tok != ',' || ( sa && sa -> type . t ) ) )"		6146702	0		||			
ANR	6147301	RelationalExpression	parlevel > 0		6146702	0		>			
ANR	6147302	Identifier	parlevel		6146702	0					
ANR	6147303	PrimaryExpression	0		6146702	1					
ANR	6147304	AndExpression	"tok != ')' && ( tok != ',' || ( sa && sa -> type . t ) )"		6146702	1		&&			
ANR	6147305	EqualityExpression	tok != ')'		6146702	0		!=			
ANR	6147306	Identifier	tok		6146702	0					
ANR	6147307	PrimaryExpression	')'		6146702	1					
ANR	6147308	OrExpression	"tok != ',' || ( sa && sa -> type . t )"		6146702	1		||			
ANR	6147309	EqualityExpression	"tok != ','"		6146702	0		!=			
ANR	6147310	Identifier	tok		6146702	0					
ANR	6147311	PrimaryExpression	"','"		6146702	1					
ANR	6147312	AndExpression	sa && sa -> type . t		6146702	1		&&			
ANR	6147313	Identifier	sa		6146702	0					
ANR	6147314	MemberAccess	sa -> type . t		6146702	1					
ANR	6147315	PtrMemberAccess	sa -> type		6146702	0					
ANR	6147316	Identifier	sa		6146702	0					
ANR	6147317	Identifier	type		6146702	1					
ANR	6147318	Identifier	t		6146702	1					
ANR	6147319	EqualityExpression	tok != - 1		6146702	1		!=			
ANR	6147320	Identifier	tok		6146702	0					
ANR	6147321	UnaryOperationExpression	- 1		6146702	1					
ANR	6147322	UnaryOperator	-		6146702	0					
ANR	6147323	PrimaryExpression	1		6146702	1					
ANR	6147324	CompoundStatement		115:22:2813:2813	6146702	1					
ANR	6147325	IfStatement	if ( tok == '(' )		6146702	0					
ANR	6147326	Condition	tok == '('	2920:9:60632:60641	6146702	0	True				
ANR	6147327	EqualityExpression	tok == '('		6146702	0		==			
ANR	6147328	Identifier	tok		6146702	0					
ANR	6147329	PrimaryExpression	'('		6146702	1					
ANR	6147330	CompoundStatement		116:21:2836:2836	6146702	1					
ANR	6147331	ExpressionStatement	parlevel ++	2921:6:60652:60662	6146702	0	True				
ANR	6147332	PostIncDecOperationExpression	parlevel ++		6146702	0					
ANR	6147333	Identifier	parlevel		6146702	0					
ANR	6147334	IncDec	++		6146702	1					
ANR	6147335	ElseStatement	else		6146702	0					
ANR	6147336	IfStatement	if ( tok == ')' )		6146702	0					
ANR	6147337	Condition	tok == ')'	2922:16:60680:60689	6146702	0	True				
ANR	6147338	EqualityExpression	tok == ')'		6146702	0		==			
ANR	6147339	Identifier	tok		6146702	0					
ANR	6147340	PrimaryExpression	')'		6146702	1					
ANR	6147341	CompoundStatement		118:28:2884:2884	6146702	1					
ANR	6147342	ExpressionStatement	parlevel --	2923:6:60700:60710	6146702	0	True				
ANR	6147343	PostIncDecOperationExpression	parlevel --		6146702	0					
ANR	6147344	Identifier	parlevel		6146702	0					
ANR	6147345	IncDec	--		6146702	1					
ANR	6147346	IfStatement	if ( tok == TOK_LINEFEED )		6146702	1					
ANR	6147347	Condition	tok == TOK_LINEFEED	2925:9:60728:60746	6146702	0	True				
ANR	6147348	EqualityExpression	tok == TOK_LINEFEED		6146702	0		==			
ANR	6147349	Identifier	tok		6146702	0					
ANR	6147350	Identifier	TOK_LINEFEED		6146702	1					
ANR	6147351	CompoundStatement		121:30:2941:2941	6146702	1					
ANR	6147352	ExpressionStatement	tok = ' '	2926:6:60757:60766	6146702	0	True				
ANR	6147353	AssignmentExpression	tok = ' '		6146702	0		=			
ANR	6147354	Identifier	tok		6146702	0					
ANR	6147355	PrimaryExpression	' '		6146702	1					
ANR	6147356	IfStatement	"if ( ! check_space ( tok , & spc ) )"		6146702	2					
ANR	6147357	Condition	"! check_space ( tok , & spc )"	2928:9:60784:60807	6146702	0	True				
ANR	6147358	UnaryOperationExpression	"! check_space ( tok , & spc )"		6146702	0					
ANR	6147359	UnaryOperator	!		6146702	0					
ANR	6147360	CallExpression	"check_space ( tok , & spc )"		6146702	1					
ANR	6147361	Callee	check_space		6146702	0					
ANR	6147362	Identifier	check_space		6146702	0					
ANR	6147363	ArgumentList	tok		6146702	1					
ANR	6147364	Argument	tok		6146702	0					
ANR	6147365	Identifier	tok		6146702	0					
ANR	6147366	Argument	& spc		6146702	1					
ANR	6147367	UnaryOperationExpression	& spc		6146702	0					
ANR	6147368	UnaryOperator	&		6146702	0					
ANR	6147369	Identifier	spc		6146702	1					
ANR	6147370	CompoundStatement		124:35:3002:3002	6146702	1					
ANR	6147371	ExpressionStatement	"tok_str_add2 ( & str , tok , & tokc )"	2929:6:60818:60849	6146702	0	True				
ANR	6147372	CallExpression	"tok_str_add2 ( & str , tok , & tokc )"		6146702	0					
ANR	6147373	Callee	tok_str_add2		6146702	0					
ANR	6147374	Identifier	tok_str_add2		6146702	0					
ANR	6147375	ArgumentList	& str		6146702	1					
ANR	6147376	Argument	& str		6146702	0					
ANR	6147377	UnaryOperationExpression	& str		6146702	0					
ANR	6147378	UnaryOperator	&		6146702	0					
ANR	6147379	Identifier	str		6146702	1					
ANR	6147380	Argument	tok		6146702	1					
ANR	6147381	Identifier	tok		6146702	0					
ANR	6147382	Argument	& tokc		6146702	2					
ANR	6147383	UnaryOperationExpression	& tokc		6146702	0					
ANR	6147384	UnaryOperator	&		6146702	0					
ANR	6147385	Identifier	tokc		6146702	1					
ANR	6147386	ExpressionStatement	next_nomacro_spc ( )	2931:5:60863:60882	6146702	3	True				
ANR	6147387	CallExpression	next_nomacro_spc ( )		6146702	0					
ANR	6147388	Callee	next_nomacro_spc		6146702	0					
ANR	6147389	Identifier	next_nomacro_spc		6146702	0					
ANR	6147390	ArgumentList			6146702	1					
ANR	6147391	ExpressionStatement	str . len -= spc	2933:4:60894:60908	6146702	5	True				
ANR	6147392	AssignmentExpression	str . len -= spc		6146702	0		-=			
ANR	6147393	MemberAccess	str . len		6146702	0					
ANR	6147394	Identifier	str		6146702	0					
ANR	6147395	Identifier	len		6146702	1					
ANR	6147396	Identifier	spc		6146702	1					
ANR	6147397	ExpressionStatement	"tok_str_add ( & str , 0 )"	2934:4:60914:60935	6146702	6	True				
ANR	6147398	CallExpression	"tok_str_add ( & str , 0 )"		6146702	0					
ANR	6147399	Callee	tok_str_add		6146702	0					
ANR	6147400	Identifier	tok_str_add		6146702	0					
ANR	6147401	ArgumentList	& str		6146702	1					
ANR	6147402	Argument	& str		6146702	0					
ANR	6147403	UnaryOperationExpression	& str		6146702	0					
ANR	6147404	UnaryOperator	&		6146702	0					
ANR	6147405	Identifier	str		6146702	1					
ANR	6147406	Argument	0		6146702	1					
ANR	6147407	PrimaryExpression	0		6146702	0					
ANR	6147408	ExpressionStatement	"sa1 = sa ? sym_push2 ( & args , sa -> v & ~SYM_FIELD , sa -> type . t , 0 ) : NULL"	2935:4:60941:61011	6146702	7	True				
ANR	6147409	AssignmentExpression	"sa1 = sa ? sym_push2 ( & args , sa -> v & ~SYM_FIELD , sa -> type . t , 0 ) : NULL"		6146702	0		=			
ANR	6147410	Identifier	sa1		6146702	0					
ANR	6147411	ConditionalExpression	"sa ? sym_push2 ( & args , sa -> v & ~SYM_FIELD , sa -> type . t , 0 ) : NULL"		6146702	1					
ANR	6147412	Condition	sa		6146702	0					
ANR	6147413	Identifier	sa		6146702	0					
ANR	6147414	CallExpression	"sym_push2 ( & args , sa -> v & ~SYM_FIELD , sa -> type . t , 0 )"		6146702	1					
ANR	6147415	Callee	sym_push2		6146702	0					
ANR	6147416	Identifier	sym_push2		6146702	0					
ANR	6147417	ArgumentList	& args		6146702	1					
ANR	6147418	Argument	& args		6146702	0					
ANR	6147419	UnaryOperationExpression	& args		6146702	0					
ANR	6147420	UnaryOperator	&		6146702	0					
ANR	6147421	Identifier	args		6146702	1					
ANR	6147422	Argument	sa -> v & ~SYM_FIELD		6146702	1					
ANR	6147423	BitAndExpression	sa -> v & ~SYM_FIELD		6146702	0		&			
ANR	6147424	PtrMemberAccess	sa -> v		6146702	0					
ANR	6147425	Identifier	sa		6146702	0					
ANR	6147426	Identifier	v		6146702	1					
ANR	6147427	Identifier	~SYM_FIELD		6146702	1					
ANR	6147428	Argument	sa -> type . t		6146702	2					
ANR	6147429	MemberAccess	sa -> type . t		6146702	0					
ANR	6147430	PtrMemberAccess	sa -> type		6146702	0					
ANR	6147431	Identifier	sa		6146702	0					
ANR	6147432	Identifier	type		6146702	1					
ANR	6147433	Identifier	t		6146702	1					
ANR	6147434	Argument	0		6146702	3					
ANR	6147435	PrimaryExpression	0		6146702	0					
ANR	6147436	Identifier	NULL		6146702	2					
ANR	6147437	IfStatement	if ( ! sa1 )		6146702	8					
ANR	6147438	Condition	! sa1	2936:8:61021:61024	6146702	0	True				
ANR	6147439	UnaryOperationExpression	! sa1		6146702	0					
ANR	6147440	UnaryOperator	!		6146702	0					
ANR	6147441	Identifier	sa1		6146702	1					
ANR	6147442	CompoundStatement		132:14:3219:3219	6146702	1					
ANR	6147443	ReturnStatement	return - 1 ;	2937:5:61034:61043	6146702	0	True				
ANR	6147444	UnaryOperationExpression	- 1		6146702	0					
ANR	6147445	UnaryOperator	-		6146702	0					
ANR	6147446	PrimaryExpression	1		6146702	1					
ANR	6147447	ExpressionStatement	sa1 -> d = str . str	2939:4:61055:61071	6146702	9	True				
ANR	6147448	AssignmentExpression	sa1 -> d = str . str		6146702	0		=			
ANR	6147449	PtrMemberAccess	sa1 -> d		6146702	0					
ANR	6147450	Identifier	sa1		6146702	0					
ANR	6147451	Identifier	d		6146702	1					
ANR	6147452	MemberAccess	str . str		6146702	1					
ANR	6147453	Identifier	str		6146702	0					
ANR	6147454	Identifier	str		6146702	1					
ANR	6147455	ExpressionStatement	sa = sa -> next	2940:4:61077:61090	6146702	10	True				
ANR	6147456	AssignmentExpression	sa = sa -> next		6146702	0		=			
ANR	6147457	Identifier	sa		6146702	0					
ANR	6147458	PtrMemberAccess	sa -> next		6146702	1					
ANR	6147459	Identifier	sa		6146702	0					
ANR	6147460	Identifier	next		6146702	1					
ANR	6147461	IfStatement	if ( tok == ')' )		6146702	11					
ANR	6147462	Condition	tok == ')'	2941:8:61100:61109	6146702	0	True				
ANR	6147463	EqualityExpression	tok == ')'		6146702	0		==			
ANR	6147464	Identifier	tok		6146702	0					
ANR	6147465	PrimaryExpression	')'		6146702	1					
ANR	6147466	CompoundStatement		137:20:3304:3304	6146702	1					
ANR	6147467	IfStatement	if ( sa && sa -> type . t && gnu_ext )		6146702	0					
ANR	6147468	Condition	sa && sa -> type . t && gnu_ext	2944:9:61220:61246	6146702	0	True				
ANR	6147469	AndExpression	sa && sa -> type . t && gnu_ext		6146702	0		&&			
ANR	6147470	Identifier	sa		6146702	0					
ANR	6147471	AndExpression	sa -> type . t && gnu_ext		6146702	1		&&			
ANR	6147472	MemberAccess	sa -> type . t		6146702	0					
ANR	6147473	PtrMemberAccess	sa -> type		6146702	0					
ANR	6147474	Identifier	sa		6146702	0					
ANR	6147475	Identifier	type		6146702	1					
ANR	6147476	Identifier	t		6146702	1					
ANR	6147477	Identifier	gnu_ext		6146702	1					
ANR	6147478	CompoundStatement		140:38:3441:3441	6146702	1					
ANR	6147479	ContinueStatement	continue ;	2945:6:61257:61265	6146702	0	True				
ANR	6147480	ElseStatement	else		6146702	0					
ANR	6147481	CompoundStatement		142:12:3471:3471	6146702	0					
ANR	6147482	BreakStatement	break ;	2947:6:61287:61292	6146702	0	True				
ANR	6147483	IfStatement	"if ( tok != ',' )"		6146702	12					
ANR	6147484	Condition	"tok != ','"	2950:8:61315:61324	6146702	0	True				
ANR	6147485	EqualityExpression	"tok != ','"		6146702	0		!=			
ANR	6147486	Identifier	tok		6146702	0					
ANR	6147487	PrimaryExpression	"','"		6146702	1					
ANR	6147488	CompoundStatement		146:20:3519:3519	6146702	1					
ANR	6147489	ExpressionStatement	"expect ( "","" )"	2951:5:61334:61346	6146702	0	True				
ANR	6147490	CallExpression	"expect ( "","" )"		6146702	0					
ANR	6147491	Callee	expect		6146702	0					
ANR	6147492	Identifier	expect		6146702	0					
ANR	6147493	ArgumentList	""","""		6146702	1					
ANR	6147494	Argument	""","""		6146702	0					
ANR	6147495	PrimaryExpression	""","""		6146702	0					
ANR	6147496	ReturnStatement	return 1 ;	2952:5:61353:61361	6146702	1	True				
ANR	6147497	PrimaryExpression	1		6146702	0					
ANR	6147498	ExpressionStatement	next_nomacro ( )	2954:4:61373:61388	6146702	13	True				
ANR	6147499	CallExpression	next_nomacro ( )		6146702	0					
ANR	6147500	Callee	next_nomacro		6146702	0					
ANR	6147501	Identifier	next_nomacro		6146702	0					
ANR	6147502	ArgumentList			6146702	1					
ANR	6147503	IfStatement	if ( sa )		6146702	8					
ANR	6147504	Condition	sa	2956:7:61402:61403	6146702	0	True				
ANR	6147505	Identifier	sa		6146702	0					
ANR	6147506	CompoundStatement		152:11:3598:3598	6146702	1					
ANR	6147507	ExpressionStatement	"tcc_error ( ""macro '%s' used with too few args"" , get_tok_str ( s -> v , 0 ) )"	2957:4:61412:61487	6146702	0	True				
ANR	6147508	CallExpression	"tcc_error ( ""macro '%s' used with too few args"" , get_tok_str ( s -> v , 0 ) )"		6146702	0					
ANR	6147509	Callee	tcc_error		6146702	0					
ANR	6147510	Identifier	tcc_error		6146702	0					
ANR	6147511	ArgumentList	"""macro '%s' used with too few args"""		6146702	1					
ANR	6147512	Argument	"""macro '%s' used with too few args"""		6146702	0					
ANR	6147513	PrimaryExpression	"""macro '%s' used with too few args"""		6146702	0					
ANR	6147514	Argument	"get_tok_str ( s -> v , 0 )"		6146702	1					
ANR	6147515	CallExpression	"get_tok_str ( s -> v , 0 )"		6146702	0					
ANR	6147516	Callee	get_tok_str		6146702	0					
ANR	6147517	Identifier	get_tok_str		6146702	0					
ANR	6147518	ArgumentList	s -> v		6146702	1					
ANR	6147519	Argument	s -> v		6146702	0					
ANR	6147520	PtrMemberAccess	s -> v		6146702	0					
ANR	6147521	Identifier	s		6146702	0					
ANR	6147522	Identifier	v		6146702	1					
ANR	6147523	Argument	0		6146702	1					
ANR	6147524	PrimaryExpression	0		6146702	0					
ANR	6147525	ExpressionStatement	"mstr = macro_arg_subst ( nested_list , mstr , args )"	2962:3:61526:61574	6146702	9	True				
ANR	6147526	AssignmentExpression	"mstr = macro_arg_subst ( nested_list , mstr , args )"		6146702	0		=			
ANR	6147527	Identifier	mstr		6146702	0					
ANR	6147528	CallExpression	"macro_arg_subst ( nested_list , mstr , args )"		6146702	1					
ANR	6147529	Callee	macro_arg_subst		6146702	0					
ANR	6147530	Identifier	macro_arg_subst		6146702	0					
ANR	6147531	ArgumentList	nested_list		6146702	1					
ANR	6147532	Argument	nested_list		6146702	0					
ANR	6147533	Identifier	nested_list		6146702	0					
ANR	6147534	Argument	mstr		6146702	1					
ANR	6147535	Identifier	mstr		6146702	0					
ANR	6147536	Argument	args		6146702	2					
ANR	6147537	Identifier	args		6146702	0					
ANR	6147538	ExpressionStatement	sa = args	2964:3:61600:61609	6146702	10	True				
ANR	6147539	AssignmentExpression	sa = args		6146702	0		=			
ANR	6147540	Identifier	sa		6146702	0					
ANR	6147541	Identifier	args		6146702	1					
ANR	6147542	WhileStatement	while ( sa )		6146702	11					
ANR	6147543	Condition	sa	2965:10:61621:61622	6146702	0	True				
ANR	6147544	Identifier	sa		6146702	0					
ANR	6147545	CompoundStatement		161:14:3817:3817	6146702	1					
ANR	6147546	ExpressionStatement	sa1 = sa -> prev	2966:4:61631:61645	6146702	0	True				
ANR	6147547	AssignmentExpression	sa1 = sa -> prev		6146702	0		=			
ANR	6147548	Identifier	sa1		6146702	0					
ANR	6147549	PtrMemberAccess	sa -> prev		6146702	1					
ANR	6147550	Identifier	sa		6146702	0					
ANR	6147551	Identifier	prev		6146702	1					
ANR	6147552	ExpressionStatement	tok_str_free ( sa -> d )	2967:4:61651:61671	6146702	1	True				
ANR	6147553	CallExpression	tok_str_free ( sa -> d )		6146702	0					
ANR	6147554	Callee	tok_str_free		6146702	0					
ANR	6147555	Identifier	tok_str_free		6146702	0					
ANR	6147556	ArgumentList	sa -> d		6146702	1					
ANR	6147557	Argument	sa -> d		6146702	0					
ANR	6147558	PtrMemberAccess	sa -> d		6146702	0					
ANR	6147559	Identifier	sa		6146702	0					
ANR	6147560	Identifier	d		6146702	1					
ANR	6147561	ExpressionStatement	sym_free ( sa )	2968:4:61677:61690	6146702	2	True				
ANR	6147562	CallExpression	sym_free ( sa )		6146702	0					
ANR	6147563	Callee	sym_free		6146702	0					
ANR	6147564	Identifier	sym_free		6146702	0					
ANR	6147565	ArgumentList	sa		6146702	1					
ANR	6147566	Argument	sa		6146702	0					
ANR	6147567	Identifier	sa		6146702	0					
ANR	6147568	ExpressionStatement	sa = sa1	2969:4:61696:61704	6146702	3	True				
ANR	6147569	AssignmentExpression	sa = sa1		6146702	0		=			
ANR	6147570	Identifier	sa		6146702	0					
ANR	6147571	Identifier	sa1		6146702	1					
ANR	6147572	ExpressionStatement	mstr_allocated = 1	2971:3:61714:61732	6146702	12	True				
ANR	6147573	AssignmentExpression	mstr_allocated = 1		6146702	0		=			
ANR	6147574	Identifier	mstr_allocated		6146702	0					
ANR	6147575	PrimaryExpression	1		6146702	1					
ANR	6147576	IfStatement	"if ( sym_push2 ( nested_list , s -> v , 0 , 0 ) == 0 )"		6146702	3					
ANR	6147577	Condition	"sym_push2 ( nested_list , s -> v , 0 , 0 ) == 0"	2973:6:61744:61783	6146702	0	True				
ANR	6147578	EqualityExpression	"sym_push2 ( nested_list , s -> v , 0 , 0 ) == 0"		6146702	0		==			
ANR	6147579	CallExpression	"sym_push2 ( nested_list , s -> v , 0 , 0 )"		6146702	0					
ANR	6147580	Callee	sym_push2		6146702	0					
ANR	6147581	Identifier	sym_push2		6146702	0					
ANR	6147582	ArgumentList	nested_list		6146702	1					
ANR	6147583	Argument	nested_list		6146702	0					
ANR	6147584	Identifier	nested_list		6146702	0					
ANR	6147585	Argument	s -> v		6146702	1					
ANR	6147586	PtrMemberAccess	s -> v		6146702	0					
ANR	6147587	Identifier	s		6146702	0					
ANR	6147588	Identifier	v		6146702	1					
ANR	6147589	Argument	0		6146702	2					
ANR	6147590	PrimaryExpression	0		6146702	0					
ANR	6147591	Argument	0		6146702	3					
ANR	6147592	PrimaryExpression	0		6146702	0					
ANR	6147593	PrimaryExpression	0		6146702	1					
ANR	6147594	CompoundStatement		169:48:3978:3978	6146702	1					
ANR	6147595	ReturnStatement	return - 1 ;	2974:3:61791:61800	6146702	0	True				
ANR	6147596	UnaryOperationExpression	- 1		6146702	0					
ANR	6147597	UnaryOperator	-		6146702	0					
ANR	6147598	PrimaryExpression	1		6146702	1					
ANR	6147599	ExpressionStatement	"macro_subst ( tok_str , nested_list , mstr , can_read_stream )"	2976:2:61808:61865	6146702	4	True				
ANR	6147600	CallExpression	"macro_subst ( tok_str , nested_list , mstr , can_read_stream )"		6146702	0					
ANR	6147601	Callee	macro_subst		6146702	0					
ANR	6147602	Identifier	macro_subst		6146702	0					
ANR	6147603	ArgumentList	tok_str		6146702	1					
ANR	6147604	Argument	tok_str		6146702	0					
ANR	6147605	Identifier	tok_str		6146702	0					
ANR	6147606	Argument	nested_list		6146702	1					
ANR	6147607	Identifier	nested_list		6146702	0					
ANR	6147608	Argument	mstr		6146702	2					
ANR	6147609	Identifier	mstr		6146702	0					
ANR	6147610	Argument	can_read_stream		6146702	3					
ANR	6147611	Identifier	can_read_stream		6146702	0					
ANR	6147612	ExpressionStatement	sa1 = * nested_list	2978:2:61903:61921	6146702	5	True				
ANR	6147613	AssignmentExpression	sa1 = * nested_list		6146702	0		=			
ANR	6147614	Identifier	sa1		6146702	0					
ANR	6147615	UnaryOperationExpression	* nested_list		6146702	1					
ANR	6147616	UnaryOperator	*		6146702	0					
ANR	6147617	Identifier	nested_list		6146702	1					
ANR	6147618	ExpressionStatement	* nested_list = sa1 -> prev	2979:2:61925:61949	6146702	6	True				
ANR	6147619	AssignmentExpression	* nested_list = sa1 -> prev		6146702	0		=			
ANR	6147620	UnaryOperationExpression	* nested_list		6146702	0					
ANR	6147621	UnaryOperator	*		6146702	0					
ANR	6147622	Identifier	nested_list		6146702	1					
ANR	6147623	PtrMemberAccess	sa1 -> prev		6146702	1					
ANR	6147624	Identifier	sa1		6146702	0					
ANR	6147625	Identifier	prev		6146702	1					
ANR	6147626	ExpressionStatement	sym_free ( sa1 )	2980:2:61953:61967	6146702	7	True				
ANR	6147627	CallExpression	sym_free ( sa1 )		6146702	0					
ANR	6147628	Callee	sym_free		6146702	0					
ANR	6147629	Identifier	sym_free		6146702	0					
ANR	6147630	ArgumentList	sa1		6146702	1					
ANR	6147631	Argument	sa1		6146702	0					
ANR	6147632	Identifier	sa1		6146702	0					
ANR	6147633	IfStatement	if ( mstr_allocated )		6146702	8					
ANR	6147634	Condition	mstr_allocated	2981:6:61975:61988	6146702	0	True				
ANR	6147635	Identifier	mstr_allocated		6146702	0					
ANR	6147636	CompoundStatement		177:22:4183:4183	6146702	1					
ANR	6147637	ExpressionStatement	tok_str_free ( mstr )	2982:3:61996:62015	6146702	0	True				
ANR	6147638	CallExpression	tok_str_free ( mstr )		6146702	0					
ANR	6147639	Callee	tok_str_free		6146702	0					
ANR	6147640	Identifier	tok_str_free		6146702	0					
ANR	6147641	ArgumentList	mstr		6146702	1					
ANR	6147642	Argument	mstr		6146702	0					
ANR	6147643	Identifier	mstr		6146702	0					
ANR	6147644	ReturnStatement	return 0 ;	2985:1:62025:62033	6146702	9	True				
ANR	6147645	PrimaryExpression	0		6146702	0					
ANR	6147646	ReturnType	static int		6146702	1					
ANR	6147647	Identifier	macro_subst_tok		6146702	2					
ANR	6147648	ParameterList	"TokenString * tok_str , Sym * * nested_list , Sym * s , struct macro_level * * can_read_stream"		6146702	3					
ANR	6147649	Parameter	TokenString * tok_str	2803:27:57714:57733	6146702	0	True				
ANR	6147650	ParameterType	TokenString *		6146702	0					
ANR	6147651	Identifier	tok_str		6146702	1					
ANR	6147652	Parameter	Sym * * nested_list	2804:6:57742:57758	6146702	1	True				
ANR	6147653	ParameterType	Sym * *		6146702	0					
ANR	6147654	Identifier	nested_list		6146702	1					
ANR	6147655	Parameter	Sym * s	2804:25:57761:57766	6146702	2	True				
ANR	6147656	ParameterType	Sym *		6146702	0					
ANR	6147657	Identifier	s		6146702	1					
ANR	6147658	Parameter	struct macro_level * * can_read_stream	2804:33:57769:57804	6146702	3	True				
ANR	6147659	ParameterType	struct macro_level * *		6146702	0					
ANR	6147660	Identifier	can_read_stream		6146702	1					
ANR	6147661	CFGEntryNode	ENTRY		6146702		True				
ANR	6147662	CFGExitNode	EXIT		6146702		True				
ANR	6147663	Symbol	nested_list		6146702						
ANR	6147664	Symbol	TOK___FILE__		6146702						
ANR	6147665	Symbol	tok_str		6146702						
ANR	6147666	Symbol	& str		6146702						
ANR	6147667	Symbol	str . str		6146702						
ANR	6147668	Symbol	mstr_allocated		6146702						
ANR	6147669	Symbol	* sa		6146702						
ANR	6147670	Symbol	& tokc		6146702						
ANR	6147671	Symbol	* * nested_list		6146702						
ANR	6147672	Symbol	gnu_ext		6146702						
ANR	6147673	Symbol	TOK_STR		6146702						
ANR	6147674	Symbol	* file		6146702						
ANR	6147675	Symbol	tm -> tm_mon		6146702						
ANR	6147676	Symbol	str		6146702						
ANR	6147677	Symbol	check_space		6146702						
ANR	6147678	Symbol	MACRO_FUNC		6146702						
ANR	6147679	Symbol	sa -> type		6146702						
ANR	6147680	Symbol	TOK___TIME__		6146702						
ANR	6147681	Symbol	* tm		6146702						
ANR	6147682	Symbol	t1		6146702						
ANR	6147683	Symbol	sa -> prev		6146702						
ANR	6147684	Symbol	* * file		6146702						
ANR	6147685	Symbol	s -> v		6146702						
ANR	6147686	Symbol	* ml		6146702						
ANR	6147687	Symbol	ml -> prev		6146702						
ANR	6147688	Symbol	* file -> buf_ptr		6146702						
ANR	6147689	Symbol	sa -> type . t		6146702						
ANR	6147690	Symbol	s -> next		6146702						
ANR	6147691	Symbol	can_read_stream		6146702						
ANR	6147692	Symbol	s -> type . t		6146702						
ANR	6147693	Symbol	sa		6146702						
ANR	6147694	Symbol	sym_push2		6146702						
ANR	6147695	Symbol	tok		6146702						
ANR	6147696	Symbol	& cval		6146702						
ANR	6147697	Symbol	cval . cstr		6146702						
ANR	6147698	Symbol	file		6146702						
ANR	6147699	Symbol	* can_read_stream		6146702						
ANR	6147700	Symbol	tm -> tm_mday		6146702						
ANR	6147701	Symbol	s -> d		6146702						
ANR	6147702	Symbol	file -> line_num		6146702						
ANR	6147703	Symbol	file -> buf_ptr		6146702						
ANR	6147704	Symbol	& args		6146702						
ANR	6147705	Symbol	& cstr		6146702						
ANR	6147706	Symbol	c		6146702						
ANR	6147707	Symbol	ch		6146702						
ANR	6147708	Symbol	* nested_list		6146702						
ANR	6147709	Symbol	p		6146702						
ANR	6147710	Symbol	buf		6146702						
ANR	6147711	Symbol	s		6146702						
ANR	6147712	Symbol	~SYM_FIELD		6146702						
ANR	6147713	Symbol	t		6146702						
ANR	6147714	Symbol	ti		6146702						
ANR	6147715	Symbol	tm -> tm_min		6146702						
ANR	6147716	Symbol	tm -> tm_sec		6146702						
ANR	6147717	Symbol	parse_line_comment		6146702						
ANR	6147718	Symbol	tm		6146702						
ANR	6147719	Symbol	tm -> tm_hour		6146702						
ANR	6147720	Symbol	* ab_month_name		6146702						
ANR	6147721	Symbol	TOK___LINE__		6146702						
ANR	6147722	Symbol	sa -> next		6146702						
ANR	6147723	Symbol	parse_comment		6146702						
ANR	6147724	Symbol	localtime		6146702						
ANR	6147725	Symbol	get_tok_str		6146702						
ANR	6147726	Symbol	ml -> p		6146702						
ANR	6147727	Symbol	& spc		6146702						
ANR	6147728	Symbol	sa -> d		6146702						
ANR	6147729	Symbol	TOK_LINEFEED		6146702						
ANR	6147730	Symbol	( * nested_list ) -> v		6146702						
ANR	6147731	Symbol	sa -> v		6146702						
ANR	6147732	Symbol	TOK___DATE__		6146702						
ANR	6147733	Symbol	mstr		6146702						
ANR	6147734	Symbol	TOK_PPNUM		6146702						
ANR	6147735	Symbol	ml		6146702						
ANR	6147736	Symbol	file -> filename		6146702						
ANR	6147737	Symbol	sa1		6146702						
ANR	6147738	Symbol	* tm -> tm_mon		6146702						
ANR	6147739	Symbol	NULL		6146702						
ANR	6147740	Symbol	spc		6146702						
ANR	6147741	Symbol	cstrval		6146702						
ANR	6147742	Symbol	tcc_nerr		6146702						
ANR	6147743	Symbol	macro_ptr		6146702						
ANR	6147744	Symbol	ab_month_name		6146702						
ANR	6147745	Symbol	s -> type		6146702						
ANR	6147746	Symbol	& ti		6146702						
ANR	6147747	Symbol	cstr		6146702						
ANR	6147748	Symbol	sa1 -> d		6146702						
ANR	6147749	Symbol	* sa1		6146702						
ANR	6147750	Symbol	sa1 -> prev		6146702						
ANR	6147751	Symbol	tm -> tm_year		6146702						
ANR	6147752	Symbol	is_space		6146702						
ANR	6147753	Symbol	macro_arg_subst		6146702						
ANR	6147754	Symbol	* * tm		6146702						
ANR	6147755	Symbol	parlevel		6146702						
ANR	6147756	Symbol	args		6146702						
ANR	6147757	Symbol	cval		6146702						
ANR	6147758	Symbol	str . len		6146702						
ANR	6147759	Symbol	* p		6146702						
ANR	6147760	Symbol	* s		6146702						
ANR	6147761	Function	macro_twosharps	2990:0:62163:64098							
ANR	6147762	FunctionDef	macro_twosharps (const int * macro_str)		6147761	0					
ANR	6147763	CompoundStatement		2991:0:62220:64098	6147761	0					
ANR	6147764	IdentifierDeclStatement	const int * ptr ;	2992:1:62223:62237	6147761	0	True				
ANR	6147765	IdentifierDecl	* ptr		6147761	0					
ANR	6147766	IdentifierDeclType	const int *		6147761	0					
ANR	6147767	Identifier	ptr		6147761	1					
ANR	6147768	IdentifierDeclStatement	int t ;	2993:1:62240:62245	6147761	1	True				
ANR	6147769	IdentifierDecl	t		6147761	0					
ANR	6147770	IdentifierDeclType	int		6147761	0					
ANR	6147771	Identifier	t		6147761	1					
ANR	6147772	IdentifierDeclStatement	TokenString macro_str1 ;	2994:1:62248:62270	6147761	2	True				
ANR	6147773	IdentifierDecl	macro_str1		6147761	0					
ANR	6147774	IdentifierDeclType	TokenString		6147761	0					
ANR	6147775	Identifier	macro_str1		6147761	1					
ANR	6147776	IdentifierDeclStatement	CString cstr ;	2995:1:62273:62285	6147761	3	True				
ANR	6147777	IdentifierDecl	cstr		6147761	0					
ANR	6147778	IdentifierDeclType	CString		6147761	0					
ANR	6147779	Identifier	cstr		6147761	1					
ANR	6147780	IdentifierDeclStatement	"int n , start_of_nosubsts ;"	2996:1:62288:62312	6147761	4	True				
ANR	6147781	IdentifierDecl	n		6147761	0					
ANR	6147782	IdentifierDeclType	int		6147761	0					
ANR	6147783	Identifier	n		6147761	1					
ANR	6147784	IdentifierDecl	start_of_nosubsts		6147761	1					
ANR	6147785	IdentifierDeclType	int		6147761	0					
ANR	6147786	Identifier	start_of_nosubsts		6147761	1					
ANR	6147787	ForStatement	for ( ptr = macro_str ; ; )		6147761	5					
ANR	6147788	ForInit	ptr = macro_str ;	2999:6:62353:62368	6147761	0	True				
ANR	6147789	AssignmentExpression	ptr = macro_str		6147761	0		=			
ANR	6147790	Identifier	ptr		6147761	0					
ANR	6147791	Identifier	macro_str		6147761	1					
ANR	6147792	CompoundStatement		10:2:155:166	6147761	1					
ANR	6147793	IdentifierDeclStatement	CValue cval ;	3000:2:62376:62387	6147761	0	True				
ANR	6147794	IdentifierDecl	cval		6147761	0					
ANR	6147795	IdentifierDeclType	CValue		6147761	0					
ANR	6147796	Identifier	cval		6147761	1					
ANR	6147797	ExpressionStatement	"TOK_GET ( & t , & ptr , & cval )"	3001:2:62391:62416	6147761	1	True				
ANR	6147798	CallExpression	"TOK_GET ( & t , & ptr , & cval )"		6147761	0					
ANR	6147799	Callee	TOK_GET		6147761	0					
ANR	6147800	Identifier	TOK_GET		6147761	0					
ANR	6147801	ArgumentList	& t		6147761	1					
ANR	6147802	Argument	& t		6147761	0					
ANR	6147803	UnaryOperationExpression	& t		6147761	0					
ANR	6147804	UnaryOperator	&		6147761	0					
ANR	6147805	Identifier	t		6147761	1					
ANR	6147806	Argument	& ptr		6147761	1					
ANR	6147807	UnaryOperationExpression	& ptr		6147761	0					
ANR	6147808	UnaryOperator	&		6147761	0					
ANR	6147809	Identifier	ptr		6147761	1					
ANR	6147810	Argument	& cval		6147761	2					
ANR	6147811	UnaryOperationExpression	& cval		6147761	0					
ANR	6147812	UnaryOperator	&		6147761	0					
ANR	6147813	Identifier	cval		6147761	1					
ANR	6147814	IfStatement	if ( t == TOK_TWOSHARPS )		6147761	2					
ANR	6147815	Condition	t == TOK_TWOSHARPS	3002:6:62424:62441	6147761	0	True				
ANR	6147816	EqualityExpression	t == TOK_TWOSHARPS		6147761	0		==			
ANR	6147817	Identifier	t		6147761	0					
ANR	6147818	Identifier	TOK_TWOSHARPS		6147761	1					
ANR	6147819	CompoundStatement		12:26:223:223	6147761	1					
ANR	6147820	BreakStatement	break ;	3003:3:62449:62454	6147761	0	True				
ANR	6147821	IfStatement	if ( t == 0 )		6147761	3					
ANR	6147822	Condition	t == 0	3006:6:62510:62515	6147761	0	True				
ANR	6147823	EqualityExpression	t == 0		6147761	0		==			
ANR	6147824	Identifier	t		6147761	0					
ANR	6147825	PrimaryExpression	0		6147761	1					
ANR	6147826	CompoundStatement		16:14:297:297	6147761	1					
ANR	6147827	ReturnStatement	return NULL ;	3007:3:62523:62534	6147761	0	True				
ANR	6147828	Identifier	NULL		6147761	0					
ANR	6147829	ExpressionStatement	start_of_nosubsts = - 1	3012:1:62605:62627	6147761	6	True				
ANR	6147830	AssignmentExpression	start_of_nosubsts = - 1		6147761	0		=			
ANR	6147831	Identifier	start_of_nosubsts		6147761	0					
ANR	6147832	UnaryOperationExpression	- 1		6147761	1					
ANR	6147833	UnaryOperator	-		6147761	0					
ANR	6147834	PrimaryExpression	1		6147761	1					
ANR	6147835	ExpressionStatement	tok_str_new ( & macro_str1 )	3013:1:62630:62655	6147761	7	True				
ANR	6147836	CallExpression	tok_str_new ( & macro_str1 )		6147761	0					
ANR	6147837	Callee	tok_str_new		6147761	0					
ANR	6147838	Identifier	tok_str_new		6147761	0					
ANR	6147839	ArgumentList	& macro_str1		6147761	1					
ANR	6147840	Argument	& macro_str1		6147761	0					
ANR	6147841	UnaryOperationExpression	& macro_str1		6147761	0					
ANR	6147842	UnaryOperator	&		6147761	0					
ANR	6147843	Identifier	macro_str1		6147761	1					
ANR	6147844	ForStatement	for ( ptr = macro_str ; ; )		6147761	8					
ANR	6147845	ForInit	ptr = macro_str ;	3014:6:62663:62678	6147761	0	True				
ANR	6147846	AssignmentExpression	ptr = macro_str		6147761	0		=			
ANR	6147847	Identifier	ptr		6147761	0					
ANR	6147848	Identifier	macro_str		6147761	1					
ANR	6147849	CompoundStatement		24:25:461:461	6147761	1					
ANR	6147850	ExpressionStatement	"TOK_GET ( & tok , & ptr , & tokc )"	3015:2:62686:62713	6147761	0	True				
ANR	6147851	CallExpression	"TOK_GET ( & tok , & ptr , & tokc )"		6147761	0					
ANR	6147852	Callee	TOK_GET		6147761	0					
ANR	6147853	Identifier	TOK_GET		6147761	0					
ANR	6147854	ArgumentList	& tok		6147761	1					
ANR	6147855	Argument	& tok		6147761	0					
ANR	6147856	UnaryOperationExpression	& tok		6147761	0					
ANR	6147857	UnaryOperator	&		6147761	0					
ANR	6147858	Identifier	tok		6147761	1					
ANR	6147859	Argument	& ptr		6147761	1					
ANR	6147860	UnaryOperationExpression	& ptr		6147761	0					
ANR	6147861	UnaryOperator	&		6147761	0					
ANR	6147862	Identifier	ptr		6147761	1					
ANR	6147863	Argument	& tokc		6147761	2					
ANR	6147864	UnaryOperationExpression	& tokc		6147761	0					
ANR	6147865	UnaryOperator	&		6147761	0					
ANR	6147866	Identifier	tokc		6147761	1					
ANR	6147867	IfStatement	if ( tok == 0 )		6147761	1					
ANR	6147868	Condition	tok == 0	3016:6:62721:62728	6147761	0	True				
ANR	6147869	EqualityExpression	tok == 0		6147761	0		==			
ANR	6147870	Identifier	tok		6147761	0					
ANR	6147871	PrimaryExpression	0		6147761	1					
ANR	6147872	CompoundStatement		26:16:510:510	6147761	1					
ANR	6147873	BreakStatement	break ;	3017:3:62736:62741	6147761	0	True				
ANR	6147874	IfStatement	if ( tok == TOK_TWOSHARPS )		6147761	2					
ANR	6147875	Condition	tok == TOK_TWOSHARPS	3019:6:62753:62772	6147761	0	True				
ANR	6147876	EqualityExpression	tok == TOK_TWOSHARPS		6147761	0		==			
ANR	6147877	Identifier	tok		6147761	0					
ANR	6147878	Identifier	TOK_TWOSHARPS		6147761	1					
ANR	6147879	CompoundStatement		29:28:554:554	6147761	1					
ANR	6147880	ContinueStatement	continue ;	3020:3:62780:62788	6147761	0	True				
ANR	6147881	IfStatement	if ( tok == TOK_NOSUBST && start_of_nosubsts < 0 )		6147761	3					
ANR	6147882	Condition	tok == TOK_NOSUBST && start_of_nosubsts < 0	3022:6:62800:62842	6147761	0	True				
ANR	6147883	AndExpression	tok == TOK_NOSUBST && start_of_nosubsts < 0		6147761	0		&&			
ANR	6147884	EqualityExpression	tok == TOK_NOSUBST		6147761	0		==			
ANR	6147885	Identifier	tok		6147761	0					
ANR	6147886	Identifier	TOK_NOSUBST		6147761	1					
ANR	6147887	RelationalExpression	start_of_nosubsts < 0		6147761	1		<			
ANR	6147888	Identifier	start_of_nosubsts		6147761	0					
ANR	6147889	PrimaryExpression	0		6147761	1					
ANR	6147890	CompoundStatement		32:51:624:624	6147761	1					
ANR	6147891	ExpressionStatement	start_of_nosubsts = macro_str1 . len	3023:3:62850:62884	6147761	0	True				
ANR	6147892	AssignmentExpression	start_of_nosubsts = macro_str1 . len		6147761	0		=			
ANR	6147893	Identifier	start_of_nosubsts		6147761	0					
ANR	6147894	MemberAccess	macro_str1 . len		6147761	1					
ANR	6147895	Identifier	macro_str1		6147761	0					
ANR	6147896	Identifier	len		6147761	1					
ANR	6147897	WhileStatement	while ( * ptr == TOK_TWOSHARPS )		6147761	4					
ANR	6147898	Condition	* ptr == TOK_TWOSHARPS	3025:9:62899:62919	6147761	0	True				
ANR	6147899	EqualityExpression	* ptr == TOK_TWOSHARPS		6147761	0		==			
ANR	6147900	UnaryOperationExpression	* ptr		6147761	0					
ANR	6147901	UnaryOperator	*		6147761	0					
ANR	6147902	Identifier	ptr		6147761	1					
ANR	6147903	Identifier	TOK_TWOSHARPS		6147761	1					
ANR	6147904	CompoundStatement		35:32:701:701	6147761	1					
ANR	6147905	IfStatement	if ( start_of_nosubsts >= 0 )		6147761	0					
ANR	6147906	Condition	start_of_nosubsts >= 0	3027:7:62984:63005	6147761	0	True				
ANR	6147907	RelationalExpression	start_of_nosubsts >= 0		6147761	0		>=			
ANR	6147908	Identifier	start_of_nosubsts		6147761	0					
ANR	6147909	PrimaryExpression	0		6147761	1					
ANR	6147910	CompoundStatement		37:31:787:787	6147761	1					
ANR	6147911	ExpressionStatement	macro_str1 . len = start_of_nosubsts	3028:4:63014:63048	6147761	0	True				
ANR	6147912	AssignmentExpression	macro_str1 . len = start_of_nosubsts		6147761	0		=			
ANR	6147913	MemberAccess	macro_str1 . len		6147761	0					
ANR	6147914	Identifier	macro_str1		6147761	0					
ANR	6147915	Identifier	len		6147761	1					
ANR	6147916	Identifier	start_of_nosubsts		6147761	1					
ANR	6147917	ExpressionStatement	t = * ++ ptr	3031:3:63091:63101	6147761	1	True				
ANR	6147918	AssignmentExpression	t = * ++ ptr		6147761	0		=			
ANR	6147919	Identifier	t		6147761	0					
ANR	6147920	UnaryOperationExpression	* ++ ptr		6147761	1					
ANR	6147921	UnaryOperator	*		6147761	0					
ANR	6147922	UnaryExpression	++ ptr		6147761	1					
ANR	6147923	IncDec	++		6147761	0					
ANR	6147924	Identifier	ptr		6147761	1					
ANR	6147925	WhileStatement	while ( t == TOK_NOSUBST )		6147761	2					
ANR	6147926	Condition	t == TOK_NOSUBST	3033:10:63166:63181	6147761	0	True				
ANR	6147927	EqualityExpression	t == TOK_NOSUBST		6147761	0		==			
ANR	6147928	Identifier	t		6147761	0					
ANR	6147929	Identifier	TOK_NOSUBST		6147761	1					
ANR	6147930	ExpressionStatement	t = * ++ ptr	3034:4:63188:63198	6147761	1	True				
ANR	6147931	AssignmentExpression	t = * ++ ptr		6147761	0		=			
ANR	6147932	Identifier	t		6147761	0					
ANR	6147933	UnaryOperationExpression	* ++ ptr		6147761	1					
ANR	6147934	UnaryOperator	*		6147761	0					
ANR	6147935	UnaryExpression	++ ptr		6147761	1					
ANR	6147936	IncDec	++		6147761	0					
ANR	6147937	Identifier	ptr		6147761	1					
ANR	6147938	IfStatement	if ( t && t != TOK_TWOSHARPS )		6147761	3					
ANR	6147939	Condition	t && t != TOK_TWOSHARPS	3035:7:63207:63229	6147761	0	True				
ANR	6147940	AndExpression	t && t != TOK_TWOSHARPS		6147761	0		&&			
ANR	6147941	Identifier	t		6147761	0					
ANR	6147942	EqualityExpression	t != TOK_TWOSHARPS		6147761	1		!=			
ANR	6147943	Identifier	t		6147761	0					
ANR	6147944	Identifier	TOK_TWOSHARPS		6147761	1					
ANR	6147945	CompoundStatement		46:4:1017:1028	6147761	1					
ANR	6147946	IdentifierDeclStatement	CValue cval ;	3036:4:63238:63249	6147761	0	True				
ANR	6147947	IdentifierDecl	cval		6147761	0					
ANR	6147948	IdentifierDeclType	CValue		6147761	0					
ANR	6147949	Identifier	cval		6147761	1					
ANR	6147950	ExpressionStatement	"TOK_GET ( & t , & ptr , & cval )"	3037:4:63255:63280	6147761	1	True				
ANR	6147951	CallExpression	"TOK_GET ( & t , & ptr , & cval )"		6147761	0					
ANR	6147952	Callee	TOK_GET		6147761	0					
ANR	6147953	Identifier	TOK_GET		6147761	0					
ANR	6147954	ArgumentList	& t		6147761	1					
ANR	6147955	Argument	& t		6147761	0					
ANR	6147956	UnaryOperationExpression	& t		6147761	0					
ANR	6147957	UnaryOperator	&		6147761	0					
ANR	6147958	Identifier	t		6147761	1					
ANR	6147959	Argument	& ptr		6147761	1					
ANR	6147960	UnaryOperationExpression	& ptr		6147761	0					
ANR	6147961	UnaryOperator	&		6147761	0					
ANR	6147962	Identifier	ptr		6147761	1					
ANR	6147963	Argument	& cval		6147761	2					
ANR	6147964	UnaryOperationExpression	& cval		6147761	0					
ANR	6147965	UnaryOperator	&		6147761	0					
ANR	6147966	Identifier	cval		6147761	1					
ANR	6147967	ExpressionStatement	cstr_new ( & cstr )	3039:4:63326:63342	6147761	2	True				
ANR	6147968	CallExpression	cstr_new ( & cstr )		6147761	0					
ANR	6147969	Callee	cstr_new		6147761	0					
ANR	6147970	Identifier	cstr_new		6147761	0					
ANR	6147971	ArgumentList	& cstr		6147761	1					
ANR	6147972	Argument	& cstr		6147761	0					
ANR	6147973	UnaryOperationExpression	& cstr		6147761	0					
ANR	6147974	UnaryOperator	&		6147761	0					
ANR	6147975	Identifier	cstr		6147761	1					
ANR	6147976	ExpressionStatement	"cstr_cat ( & cstr , get_tok_str ( tok , & tokc ) )"	3040:4:63348:63390	6147761	3	True				
ANR	6147977	CallExpression	"cstr_cat ( & cstr , get_tok_str ( tok , & tokc ) )"		6147761	0					
ANR	6147978	Callee	cstr_cat		6147761	0					
ANR	6147979	Identifier	cstr_cat		6147761	0					
ANR	6147980	ArgumentList	& cstr		6147761	1					
ANR	6147981	Argument	& cstr		6147761	0					
ANR	6147982	UnaryOperationExpression	& cstr		6147761	0					
ANR	6147983	UnaryOperator	&		6147761	0					
ANR	6147984	Identifier	cstr		6147761	1					
ANR	6147985	Argument	"get_tok_str ( tok , & tokc )"		6147761	1					
ANR	6147986	CallExpression	"get_tok_str ( tok , & tokc )"		6147761	0					
ANR	6147987	Callee	get_tok_str		6147761	0					
ANR	6147988	Identifier	get_tok_str		6147761	0					
ANR	6147989	ArgumentList	tok		6147761	1					
ANR	6147990	Argument	tok		6147761	0					
ANR	6147991	Identifier	tok		6147761	0					
ANR	6147992	Argument	& tokc		6147761	1					
ANR	6147993	UnaryOperationExpression	& tokc		6147761	0					
ANR	6147994	UnaryOperator	&		6147761	0					
ANR	6147995	Identifier	tokc		6147761	1					
ANR	6147996	ExpressionStatement	n = cstr . size	3041:4:63396:63409	6147761	4	True				
ANR	6147997	AssignmentExpression	n = cstr . size		6147761	0		=			
ANR	6147998	Identifier	n		6147761	0					
ANR	6147999	MemberAccess	cstr . size		6147761	1					
ANR	6148000	Identifier	cstr		6147761	0					
ANR	6148001	Identifier	size		6147761	1					
ANR	6148002	ExpressionStatement	"cstr_cat ( & cstr , get_tok_str ( t , & cval ) )"	3042:4:63415:63455	6147761	5	True				
ANR	6148003	CallExpression	"cstr_cat ( & cstr , get_tok_str ( t , & cval ) )"		6147761	0					
ANR	6148004	Callee	cstr_cat		6147761	0					
ANR	6148005	Identifier	cstr_cat		6147761	0					
ANR	6148006	ArgumentList	& cstr		6147761	1					
ANR	6148007	Argument	& cstr		6147761	0					
ANR	6148008	UnaryOperationExpression	& cstr		6147761	0					
ANR	6148009	UnaryOperator	&		6147761	0					
ANR	6148010	Identifier	cstr		6147761	1					
ANR	6148011	Argument	"get_tok_str ( t , & cval )"		6147761	1					
ANR	6148012	CallExpression	"get_tok_str ( t , & cval )"		6147761	0					
ANR	6148013	Callee	get_tok_str		6147761	0					
ANR	6148014	Identifier	get_tok_str		6147761	0					
ANR	6148015	ArgumentList	t		6147761	1					
ANR	6148016	Argument	t		6147761	0					
ANR	6148017	Identifier	t		6147761	0					
ANR	6148018	Argument	& cval		6147761	1					
ANR	6148019	UnaryOperationExpression	& cval		6147761	0					
ANR	6148020	UnaryOperator	&		6147761	0					
ANR	6148021	Identifier	cval		6147761	1					
ANR	6148022	ExpressionStatement	"cstr_ccat ( & cstr , '\\0' )"	3043:4:63461:63484	6147761	6	True				
ANR	6148023	CallExpression	"cstr_ccat ( & cstr , '\\0' )"		6147761	0					
ANR	6148024	Callee	cstr_ccat		6147761	0					
ANR	6148025	Identifier	cstr_ccat		6147761	0					
ANR	6148026	ArgumentList	& cstr		6147761	1					
ANR	6148027	Argument	& cstr		6147761	0					
ANR	6148028	UnaryOperationExpression	& cstr		6147761	0					
ANR	6148029	UnaryOperator	&		6147761	0					
ANR	6148030	Identifier	cstr		6147761	1					
ANR	6148031	Argument	'\\0'		6147761	1					
ANR	6148032	PrimaryExpression	'\\0'		6147761	0					
ANR	6148033	ExpressionStatement	"tcc_open_bf ( tcc_state , "":paste:"" , cstr . size )"	3045:4:63491:63536	6147761	7	True				
ANR	6148034	CallExpression	"tcc_open_bf ( tcc_state , "":paste:"" , cstr . size )"		6147761	0					
ANR	6148035	Callee	tcc_open_bf		6147761	0					
ANR	6148036	Identifier	tcc_open_bf		6147761	0					
ANR	6148037	ArgumentList	tcc_state		6147761	1					
ANR	6148038	Argument	tcc_state		6147761	0					
ANR	6148039	Identifier	tcc_state		6147761	0					
ANR	6148040	Argument	""":paste:"""		6147761	1					
ANR	6148041	PrimaryExpression	""":paste:"""		6147761	0					
ANR	6148042	Argument	cstr . size		6147761	2					
ANR	6148043	MemberAccess	cstr . size		6147761	0					
ANR	6148044	Identifier	cstr		6147761	0					
ANR	6148045	Identifier	size		6147761	1					
ANR	6148046	ExpressionStatement	"memcpy ( file -> buffer , cstr . data , cstr . size )"	3046:4:63542:63585	6147761	8	True				
ANR	6148047	CallExpression	"memcpy ( file -> buffer , cstr . data , cstr . size )"		6147761	0					
ANR	6148048	Callee	memcpy		6147761	0					
ANR	6148049	Identifier	memcpy		6147761	0					
ANR	6148050	ArgumentList	file -> buffer		6147761	1					
ANR	6148051	Argument	file -> buffer		6147761	0					
ANR	6148052	PtrMemberAccess	file -> buffer		6147761	0					
ANR	6148053	Identifier	file		6147761	0					
ANR	6148054	Identifier	buffer		6147761	1					
ANR	6148055	Argument	cstr . data		6147761	1					
ANR	6148056	MemberAccess	cstr . data		6147761	0					
ANR	6148057	Identifier	cstr		6147761	0					
ANR	6148058	Identifier	data		6147761	1					
ANR	6148059	Argument	cstr . size		6147761	2					
ANR	6148060	MemberAccess	cstr . size		6147761	0					
ANR	6148061	Identifier	cstr		6147761	0					
ANR	6148062	Identifier	size		6147761	1					
ANR	6148063	WhileStatement	while ( tcc_nerr ( ) == 0 )		6147761	9					
ANR	6148064	Condition	tcc_nerr ( ) == 0	3047:11:63598:63613	6147761	0	True				
ANR	6148065	EqualityExpression	tcc_nerr ( ) == 0		6147761	0		==			
ANR	6148066	CallExpression	tcc_nerr ( )		6147761	0					
ANR	6148067	Callee	tcc_nerr		6147761	0					
ANR	6148068	Identifier	tcc_nerr		6147761	0					
ANR	6148069	ArgumentList			6147761	1					
ANR	6148070	PrimaryExpression	0		6147761	1					
ANR	6148071	CompoundStatement		57:29:1395:1395	6147761	1					
ANR	6148072	ExpressionStatement	next_nomacro1 ( )	3048:5:63623:63639	6147761	0	True				
ANR	6148073	CallExpression	next_nomacro1 ( )		6147761	0					
ANR	6148074	Callee	next_nomacro1		6147761	0					
ANR	6148075	Identifier	next_nomacro1		6147761	0					
ANR	6148076	ArgumentList			6147761	1					
ANR	6148077	IfStatement	if ( 0 == * file -> buf_ptr )		6147761	1					
ANR	6148078	Condition	0 == * file -> buf_ptr	3049:9:63650:63668	6147761	0	True				
ANR	6148079	EqualityExpression	0 == * file -> buf_ptr		6147761	0		==			
ANR	6148080	PrimaryExpression	0		6147761	0					
ANR	6148081	UnaryOperationExpression	* file -> buf_ptr		6147761	1					
ANR	6148082	UnaryOperator	*		6147761	0					
ANR	6148083	PtrMemberAccess	file -> buf_ptr		6147761	1					
ANR	6148084	Identifier	file		6147761	0					
ANR	6148085	Identifier	buf_ptr		6147761	1					
ANR	6148086	CompoundStatement		59:30:1450:1450	6147761	1					
ANR	6148087	BreakStatement	break ;	3050:6:63679:63684	6147761	0	True				
ANR	6148088	ExpressionStatement	"tok_str_add2 ( & macro_str1 , tok , & tokc )"	3052:5:63698:63736	6147761	2	True				
ANR	6148089	CallExpression	"tok_str_add2 ( & macro_str1 , tok , & tokc )"		6147761	0					
ANR	6148090	Callee	tok_str_add2		6147761	0					
ANR	6148091	Identifier	tok_str_add2		6147761	0					
ANR	6148092	ArgumentList	& macro_str1		6147761	1					
ANR	6148093	Argument	& macro_str1		6147761	0					
ANR	6148094	UnaryOperationExpression	& macro_str1		6147761	0					
ANR	6148095	UnaryOperator	&		6147761	0					
ANR	6148096	Identifier	macro_str1		6147761	1					
ANR	6148097	Argument	tok		6147761	1					
ANR	6148098	Identifier	tok		6147761	0					
ANR	6148099	Argument	& tokc		6147761	2					
ANR	6148100	UnaryOperationExpression	& tokc		6147761	0					
ANR	6148101	UnaryOperator	&		6147761	0					
ANR	6148102	Identifier	tokc		6147761	1					
ANR	6148103	ExpressionStatement	"tcc_warning ( ""pasting \\""%.*s\\"" and \\""%s\\"" does not give a valid preprocessing token"" , n , ( char * ) cstr . data , ( char * ) cstr . data + n )"	3053:5:63743:63881	6147761	3	True				
ANR	6148104	CallExpression	"tcc_warning ( ""pasting \\""%.*s\\"" and \\""%s\\"" does not give a valid preprocessing token"" , n , ( char * ) cstr . data , ( char * ) cstr . data + n )"		6147761	0					
ANR	6148105	Callee	tcc_warning		6147761	0					
ANR	6148106	Identifier	tcc_warning		6147761	0					
ANR	6148107	ArgumentList	"""pasting \\""%.*s\\"" and \\""%s\\"" does not give a valid preprocessing token"""		6147761	1					
ANR	6148108	Argument	"""pasting \\""%.*s\\"" and \\""%s\\"" does not give a valid preprocessing token"""		6147761	0					
ANR	6148109	PrimaryExpression	"""pasting \\""%.*s\\"" and \\""%s\\"" does not give a valid preprocessing token"""		6147761	0					
ANR	6148110	Argument	n		6147761	1					
ANR	6148111	Identifier	n		6147761	0					
ANR	6148112	Argument	( char * ) cstr . data		6147761	2					
ANR	6148113	CastExpression	( char * ) cstr . data		6147761	0					
ANR	6148114	CastTarget	char *		6147761	0					
ANR	6148115	MemberAccess	cstr . data		6147761	1					
ANR	6148116	Identifier	cstr		6147761	0					
ANR	6148117	Identifier	data		6147761	1					
ANR	6148118	Argument	( char * ) cstr . data + n		6147761	3					
ANR	6148119	AdditiveExpression	( char * ) cstr . data + n		6147761	0		+			
ANR	6148120	CastExpression	( char * ) cstr . data		6147761	0					
ANR	6148121	CastTarget	char *		6147761	0					
ANR	6148122	MemberAccess	cstr . data		6147761	1					
ANR	6148123	Identifier	cstr		6147761	0					
ANR	6148124	Identifier	data		6147761	1					
ANR	6148125	Identifier	n		6147761	1					
ANR	6148126	ExpressionStatement	tcc_close ( )	3056:4:63893:63905	6147761	10	True				
ANR	6148127	CallExpression	tcc_close ( )		6147761	0					
ANR	6148128	Callee	tcc_close		6147761	0					
ANR	6148129	Identifier	tcc_close		6147761	0					
ANR	6148130	ArgumentList			6147761	1					
ANR	6148131	ExpressionStatement	cstr_free ( & cstr )	3057:4:63911:63928	6147761	11	True				
ANR	6148132	CallExpression	cstr_free ( & cstr )		6147761	0					
ANR	6148133	Callee	cstr_free		6147761	0					
ANR	6148134	Identifier	cstr_free		6147761	0					
ANR	6148135	ArgumentList	& cstr		6147761	1					
ANR	6148136	Argument	& cstr		6147761	0					
ANR	6148137	UnaryOperationExpression	& cstr		6147761	0					
ANR	6148138	UnaryOperator	&		6147761	0					
ANR	6148139	Identifier	cstr		6147761	1					
ANR	6148140	IfStatement	if ( tok != TOK_NOSUBST )		6147761	5					
ANR	6148141	Condition	tok != TOK_NOSUBST	3060:6:63945:63962	6147761	0	True				
ANR	6148142	EqualityExpression	tok != TOK_NOSUBST		6147761	0		!=			
ANR	6148143	Identifier	tok		6147761	0					
ANR	6148144	Identifier	TOK_NOSUBST		6147761	1					
ANR	6148145	CompoundStatement		70:26:1744:1744	6147761	1					
ANR	6148146	ExpressionStatement	start_of_nosubsts = - 1	3061:3:63970:63992	6147761	0	True				
ANR	6148147	AssignmentExpression	start_of_nosubsts = - 1		6147761	0		=			
ANR	6148148	Identifier	start_of_nosubsts		6147761	0					
ANR	6148149	UnaryOperationExpression	- 1		6147761	1					
ANR	6148150	UnaryOperator	-		6147761	0					
ANR	6148151	PrimaryExpression	1		6147761	1					
ANR	6148152	ExpressionStatement	"tok_str_add2 ( & macro_str1 , tok , & tokc )"	3063:2:64000:64038	6147761	6	True				
ANR	6148153	CallExpression	"tok_str_add2 ( & macro_str1 , tok , & tokc )"		6147761	0					
ANR	6148154	Callee	tok_str_add2		6147761	0					
ANR	6148155	Identifier	tok_str_add2		6147761	0					
ANR	6148156	ArgumentList	& macro_str1		6147761	1					
ANR	6148157	Argument	& macro_str1		6147761	0					
ANR	6148158	UnaryOperationExpression	& macro_str1		6147761	0					
ANR	6148159	UnaryOperator	&		6147761	0					
ANR	6148160	Identifier	macro_str1		6147761	1					
ANR	6148161	Argument	tok		6147761	1					
ANR	6148162	Identifier	tok		6147761	0					
ANR	6148163	Argument	& tokc		6147761	2					
ANR	6148164	UnaryOperationExpression	& tokc		6147761	0					
ANR	6148165	UnaryOperator	&		6147761	0					
ANR	6148166	Identifier	tokc		6147761	1					
ANR	6148167	ExpressionStatement	"tok_str_add ( & macro_str1 , 0 )"	3065:1:64044:64072	6147761	9	True				
ANR	6148168	CallExpression	"tok_str_add ( & macro_str1 , 0 )"		6147761	0					
ANR	6148169	Callee	tok_str_add		6147761	0					
ANR	6148170	Identifier	tok_str_add		6147761	0					
ANR	6148171	ArgumentList	& macro_str1		6147761	1					
ANR	6148172	Argument	& macro_str1		6147761	0					
ANR	6148173	UnaryOperationExpression	& macro_str1		6147761	0					
ANR	6148174	UnaryOperator	&		6147761	0					
ANR	6148175	Identifier	macro_str1		6147761	1					
ANR	6148176	Argument	0		6147761	1					
ANR	6148177	PrimaryExpression	0		6147761	0					
ANR	6148178	ReturnStatement	return macro_str1 . str ;	3066:1:64075:64096	6147761	10	True				
ANR	6148179	MemberAccess	macro_str1 . str		6147761	0					
ANR	6148180	Identifier	macro_str1		6147761	0					
ANR	6148181	Identifier	str		6147761	1					
ANR	6148182	ReturnType	static inline int *		6147761	1					
ANR	6148183	Identifier	macro_twosharps		6147761	2					
ANR	6148184	ParameterList	const int * macro_str		6147761	3					
ANR	6148185	Parameter	const int * macro_str	2990:35:62198:62217	6147761	0	True				
ANR	6148186	ParameterType	const int *		6147761	0					
ANR	6148187	Identifier	macro_str		6147761	1					
ANR	6148188	CFGEntryNode	ENTRY		6147761		True				
ANR	6148189	CFGExitNode	EXIT		6147761		True				
ANR	6148190	InfiniteForNode	true		6147761		True				
ANR	6148191	InfiniteForNode	true		6147761		True				
ANR	6148192	Symbol	cstr		6147761						
ANR	6148193	Symbol	file -> buffer		6147761						
ANR	6148194	Symbol	get_tok_str		6147761						
ANR	6148195	Symbol	* file -> buf_ptr		6147761						
ANR	6148196	Symbol	& cval		6147761						
ANR	6148197	Symbol	tok		6147761						
ANR	6148198	Symbol	& ptr		6147761						
ANR	6148199	Symbol	cstr . size		6147761						
ANR	6148200	Symbol	file		6147761						
ANR	6148201	Symbol	* ptr		6147761						
ANR	6148202	Symbol	macro_str1		6147761						
ANR	6148203	Symbol	file -> buf_ptr		6147761						
ANR	6148204	Symbol	& tokc		6147761						
ANR	6148205	Symbol	macro_str1 . str		6147761						
ANR	6148206	Symbol	tcc_state		6147761						
ANR	6148207	Symbol	& cstr		6147761						
ANR	6148208	Symbol	cstr . data		6147761						
ANR	6148209	Symbol	start_of_nosubsts		6147761						
ANR	6148210	Symbol	NULL		6147761						
ANR	6148211	Symbol	* ++ ptr		6147761						
ANR	6148212	Symbol	* file		6147761						
ANR	6148213	Symbol	tcc_nerr		6147761						
ANR	6148214	Symbol	n		6147761						
ANR	6148215	Symbol	ptr		6147761						
ANR	6148216	Symbol	TOK_NOSUBST		6147761						
ANR	6148217	Symbol	cval		6147761						
ANR	6148218	Symbol	& macro_str1		6147761						
ANR	6148219	Symbol	macro_str		6147761						
ANR	6148220	Symbol	& tok		6147761						
ANR	6148221	Symbol	t		6147761						
ANR	6148222	Symbol	TOK_TWOSHARPS		6147761						
ANR	6148223	Symbol	& t		6147761						
ANR	6148224	Symbol	macro_str1 . len		6147761						
ANR	6148225	Symbol	* * file		6147761						
ANR	6148226	Function	macro_subst	3073:0:64260:66086							
ANR	6148227	FunctionDef	"macro_subst (TokenString * tok_str , Sym * * nested_list , const int * macro_str , struct macro_level * * can_read_stream)"		6148226	0					
ANR	6148228	CompoundStatement		3075:0:64388:66086	6148226	0					
ANR	6148229	IdentifierDeclStatement	Sym * s ;	3076:1:64391:64397	6148226	0	True				
ANR	6148230	IdentifierDecl	* s		6148226	0					
ANR	6148231	IdentifierDeclType	Sym *		6148226	0					
ANR	6148232	Identifier	s		6148226	1					
ANR	6148233	IdentifierDeclStatement	int * macro_str1 ;	3077:1:64400:64415	6148226	1	True				
ANR	6148234	IdentifierDecl	* macro_str1		6148226	0					
ANR	6148235	IdentifierDeclType	int *		6148226	0					
ANR	6148236	Identifier	macro_str1		6148226	1					
ANR	6148237	IdentifierDeclStatement	const int * ptr ;	3078:1:64418:64432	6148226	2	True				
ANR	6148238	IdentifierDecl	* ptr		6148226	0					
ANR	6148239	IdentifierDeclType	const int *		6148226	0					
ANR	6148240	Identifier	ptr		6148226	1					
ANR	6148241	IdentifierDeclStatement	"int t , ret , spc ;"	3079:1:64435:64450	6148226	3	True				
ANR	6148242	IdentifierDecl	t		6148226	0					
ANR	6148243	IdentifierDeclType	int		6148226	0					
ANR	6148244	Identifier	t		6148226	1					
ANR	6148245	IdentifierDecl	ret		6148226	1					
ANR	6148246	IdentifierDeclType	int		6148226	0					
ANR	6148247	Identifier	ret		6148226	1					
ANR	6148248	IdentifierDecl	spc		6148226	2					
ANR	6148249	IdentifierDeclType	int		6148226	0					
ANR	6148250	Identifier	spc		6148226	1					
ANR	6148251	IdentifierDeclStatement	CValue cval ;	3080:1:64453:64464	6148226	4	True				
ANR	6148252	IdentifierDecl	cval		6148226	0					
ANR	6148253	IdentifierDeclType	CValue		6148226	0					
ANR	6148254	Identifier	cval		6148226	1					
ANR	6148255	IdentifierDeclStatement	struct macro_level ml ;	3081:1:64467:64488	6148226	5	True				
ANR	6148256	IdentifierDecl	ml		6148226	0					
ANR	6148257	IdentifierDeclType	struct macro_level		6148226	0					
ANR	6148258	Identifier	ml		6148226	1					
ANR	6148259	IdentifierDeclStatement	int force_blank ;	3082:1:64491:64506	6148226	6	True				
ANR	6148260	IdentifierDecl	force_blank		6148226	0					
ANR	6148261	IdentifierDeclType	int		6148226	0					
ANR	6148262	Identifier	force_blank		6148226	1					
ANR	6148263	ExpressionStatement	ptr = macro_str	3085:1:64555:64570	6148226	7	True				
ANR	6148264	AssignmentExpression	ptr = macro_str		6148226	0		=			
ANR	6148265	Identifier	ptr		6148226	0					
ANR	6148266	Identifier	macro_str		6148226	1					
ANR	6148267	ExpressionStatement	macro_str1 = macro_twosharps ( ptr )	3086:1:64573:64607	6148226	8	True				
ANR	6148268	AssignmentExpression	macro_str1 = macro_twosharps ( ptr )		6148226	0		=			
ANR	6148269	Identifier	macro_str1		6148226	0					
ANR	6148270	CallExpression	macro_twosharps ( ptr )		6148226	1					
ANR	6148271	Callee	macro_twosharps		6148226	0					
ANR	6148272	Identifier	macro_twosharps		6148226	0					
ANR	6148273	ArgumentList	ptr		6148226	1					
ANR	6148274	Argument	ptr		6148226	0					
ANR	6148275	Identifier	ptr		6148226	0					
ANR	6148276	IfStatement	if ( macro_str1 )		6148226	9					
ANR	6148277	Condition	macro_str1	3088:5:64615:64624	6148226	0	True				
ANR	6148278	Identifier	macro_str1		6148226	0					
ANR	6148279	CompoundStatement		14:17:238:238	6148226	1					
ANR	6148280	ExpressionStatement	ptr = macro_str1	3089:2:64631:64647	6148226	0	True				
ANR	6148281	AssignmentExpression	ptr = macro_str1		6148226	0		=			
ANR	6148282	Identifier	ptr		6148226	0					
ANR	6148283	Identifier	macro_str1		6148226	1					
ANR	6148284	ExpressionStatement	spc = 0	3091:1:64653:64660	6148226	10	True				
ANR	6148285	AssignmentExpression	spc = 0		6148226	0		=			
ANR	6148286	Identifier	spc		6148226	0					
ANR	6148287	PrimaryExpression	0		6148226	1					
ANR	6148288	ExpressionStatement	force_blank = 0	3092:1:64663:64678	6148226	11	True				
ANR	6148289	AssignmentExpression	force_blank = 0		6148226	0		=			
ANR	6148290	Identifier	force_blank		6148226	0					
ANR	6148291	PrimaryExpression	0		6148226	1					
ANR	6148292	WhileStatement	while ( tcc_nerr ( ) == 0 )		6148226	12					
ANR	6148293	Condition	tcc_nerr ( ) == 0	3094:8:64689:64704	6148226	0	True				
ANR	6148294	EqualityExpression	tcc_nerr ( ) == 0		6148226	0		==			
ANR	6148295	CallExpression	tcc_nerr ( )		6148226	0					
ANR	6148296	Callee	tcc_nerr		6148226	0					
ANR	6148297	Identifier	tcc_nerr		6148226	0					
ANR	6148298	ArgumentList			6148226	1					
ANR	6148299	PrimaryExpression	0		6148226	1					
ANR	6148300	CompoundStatement		20:26:318:318	6148226	1					
ANR	6148301	IfStatement	if ( ptr == NULL )		6148226	0					
ANR	6148302	Condition	ptr == NULL	3097:6:64827:64837	6148226	0	True				
ANR	6148303	EqualityExpression	ptr == NULL		6148226	0		==			
ANR	6148304	Identifier	ptr		6148226	0					
ANR	6148305	Identifier	NULL		6148226	1					
ANR	6148306	CompoundStatement		23:19:451:451	6148226	1					
ANR	6148307	BreakStatement	break ;	3098:3:64845:64850	6148226	0	True				
ANR	6148308	ExpressionStatement	"TOK_GET ( & t , & ptr , & cval )"	3100:2:64858:64883	6148226	1	True				
ANR	6148309	CallExpression	"TOK_GET ( & t , & ptr , & cval )"		6148226	0					
ANR	6148310	Callee	TOK_GET		6148226	0					
ANR	6148311	Identifier	TOK_GET		6148226	0					
ANR	6148312	ArgumentList	& t		6148226	1					
ANR	6148313	Argument	& t		6148226	0					
ANR	6148314	UnaryOperationExpression	& t		6148226	0					
ANR	6148315	UnaryOperator	&		6148226	0					
ANR	6148316	Identifier	t		6148226	1					
ANR	6148317	Argument	& ptr		6148226	1					
ANR	6148318	UnaryOperationExpression	& ptr		6148226	0					
ANR	6148319	UnaryOperator	&		6148226	0					
ANR	6148320	Identifier	ptr		6148226	1					
ANR	6148321	Argument	& cval		6148226	2					
ANR	6148322	UnaryOperationExpression	& cval		6148226	0					
ANR	6148323	UnaryOperator	&		6148226	0					
ANR	6148324	Identifier	cval		6148226	1					
ANR	6148325	IfStatement	if ( t == 0 )		6148226	2					
ANR	6148326	Condition	t == 0	3101:6:64891:64896	6148226	0	True				
ANR	6148327	EqualityExpression	t == 0		6148226	0		==			
ANR	6148328	Identifier	t		6148226	0					
ANR	6148329	PrimaryExpression	0		6148226	1					
ANR	6148330	CompoundStatement		27:14:510:510	6148226	1					
ANR	6148331	BreakStatement	break ;	3102:3:64904:64909	6148226	0	True				
ANR	6148332	IfStatement	if ( t == TOK_NOSUBST )		6148226	3					
ANR	6148333	Condition	t == TOK_NOSUBST	3104:6:64921:64936	6148226	0	True				
ANR	6148334	EqualityExpression	t == TOK_NOSUBST		6148226	0		==			
ANR	6148335	Identifier	t		6148226	0					
ANR	6148336	Identifier	TOK_NOSUBST		6148226	1					
ANR	6148337	CompoundStatement		30:24:550:550	6148226	1					
ANR	6148338	ExpressionStatement	"tok_str_add2 ( tok_str , TOK_NOSUBST , NULL )"	3106:3:65011:65052	6148226	0	True				
ANR	6148339	CallExpression	"tok_str_add2 ( tok_str , TOK_NOSUBST , NULL )"		6148226	0					
ANR	6148340	Callee	tok_str_add2		6148226	0					
ANR	6148341	Identifier	tok_str_add2		6148226	0					
ANR	6148342	ArgumentList	tok_str		6148226	1					
ANR	6148343	Argument	tok_str		6148226	0					
ANR	6148344	Identifier	tok_str		6148226	0					
ANR	6148345	Argument	TOK_NOSUBST		6148226	1					
ANR	6148346	Identifier	TOK_NOSUBST		6148226	0					
ANR	6148347	Argument	NULL		6148226	2					
ANR	6148348	Identifier	NULL		6148226	0					
ANR	6148349	ExpressionStatement	"TOK_GET ( & t , & ptr , & cval )"	3107:3:65057:65082	6148226	1	True				
ANR	6148350	CallExpression	"TOK_GET ( & t , & ptr , & cval )"		6148226	0					
ANR	6148351	Callee	TOK_GET		6148226	0					
ANR	6148352	Identifier	TOK_GET		6148226	0					
ANR	6148353	ArgumentList	& t		6148226	1					
ANR	6148354	Argument	& t		6148226	0					
ANR	6148355	UnaryOperationExpression	& t		6148226	0					
ANR	6148356	UnaryOperator	&		6148226	0					
ANR	6148357	Identifier	t		6148226	1					
ANR	6148358	Argument	& ptr		6148226	1					
ANR	6148359	UnaryOperationExpression	& ptr		6148226	0					
ANR	6148360	UnaryOperator	&		6148226	0					
ANR	6148361	Identifier	ptr		6148226	1					
ANR	6148362	Argument	& cval		6148226	2					
ANR	6148363	UnaryOperationExpression	& cval		6148226	0					
ANR	6148364	UnaryOperator	&		6148226	0					
ANR	6148365	Identifier	cval		6148226	1					
ANR	6148366	GotoStatement	goto no_subst ;	3108:3:65087:65100	6148226	2	True				
ANR	6148367	Identifier	no_subst		6148226	0					
ANR	6148368	ExpressionStatement	s = define_find ( t )	3110:2:65108:65127	6148226	4	True				
ANR	6148369	AssignmentExpression	s = define_find ( t )		6148226	0		=			
ANR	6148370	Identifier	s		6148226	0					
ANR	6148371	CallExpression	define_find ( t )		6148226	1					
ANR	6148372	Callee	define_find		6148226	0					
ANR	6148373	Identifier	define_find		6148226	0					
ANR	6148374	ArgumentList	t		6148226	1					
ANR	6148375	Argument	t		6148226	0					
ANR	6148376	Identifier	t		6148226	0					
ANR	6148377	IfStatement	if ( s != NULL )		6148226	5					
ANR	6148378	Condition	s != NULL	3111:6:65135:65143	6148226	0	True				
ANR	6148379	EqualityExpression	s != NULL		6148226	0		!=			
ANR	6148380	Identifier	s		6148226	0					
ANR	6148381	Identifier	NULL		6148226	1					
ANR	6148382	CompoundStatement		37:17:757:757	6148226	1					
ANR	6148383	IfStatement	"if ( sym_find2 ( * nested_list , t ) )"		6148226	0					
ANR	6148384	Condition	"sym_find2 ( * nested_list , t )"	3113:7:65199:65225	6148226	0	True				
ANR	6148385	CallExpression	"sym_find2 ( * nested_list , t )"		6148226	0					
ANR	6148386	Callee	sym_find2		6148226	0					
ANR	6148387	Identifier	sym_find2		6148226	0					
ANR	6148388	ArgumentList	* nested_list		6148226	1					
ANR	6148389	Argument	* nested_list		6148226	0					
ANR	6148390	UnaryOperationExpression	* nested_list		6148226	0					
ANR	6148391	UnaryOperator	*		6148226	0					
ANR	6148392	Identifier	nested_list		6148226	1					
ANR	6148393	Argument	t		6148226	1					
ANR	6148394	Identifier	t		6148226	0					
ANR	6148395	CompoundStatement		39:36:839:839	6148226	1					
ANR	6148396	ExpressionStatement	"tok_str_add2 ( tok_str , TOK_NOSUBST , NULL )"	3115:4:65304:65345	6148226	0	True				
ANR	6148397	CallExpression	"tok_str_add2 ( tok_str , TOK_NOSUBST , NULL )"		6148226	0					
ANR	6148398	Callee	tok_str_add2		6148226	0					
ANR	6148399	Identifier	tok_str_add2		6148226	0					
ANR	6148400	ArgumentList	tok_str		6148226	1					
ANR	6148401	Argument	tok_str		6148226	0					
ANR	6148402	Identifier	tok_str		6148226	0					
ANR	6148403	Argument	TOK_NOSUBST		6148226	1					
ANR	6148404	Identifier	TOK_NOSUBST		6148226	0					
ANR	6148405	Argument	NULL		6148226	2					
ANR	6148406	Identifier	NULL		6148226	0					
ANR	6148407	GotoStatement	goto no_subst ;	3116:4:65351:65364	6148226	1	True				
ANR	6148408	Identifier	no_subst		6148226	0					
ANR	6148409	ExpressionStatement	ml . p = macro_ptr	3118:3:65374:65390	6148226	1	True				
ANR	6148410	AssignmentExpression	ml . p = macro_ptr		6148226	0		=			
ANR	6148411	MemberAccess	ml . p		6148226	0					
ANR	6148412	Identifier	ml		6148226	0					
ANR	6148413	Identifier	p		6148226	1					
ANR	6148414	Identifier	macro_ptr		6148226	1					
ANR	6148415	IfStatement	if ( can_read_stream )		6148226	2					
ANR	6148416	Condition	can_read_stream	3119:7:65399:65413	6148226	0	True				
ANR	6148417	Identifier	can_read_stream		6148226	0					
ANR	6148418	CompoundStatement		45:24:1027:1027	6148226	1					
ANR	6148419	ExpressionStatement	"ml . prev = * can_read_stream , * can_read_stream = & ml"	3120:4:65422:65472	6148226	0	True				
ANR	6148420	Expression	"ml . prev = * can_read_stream , * can_read_stream = & ml"		6148226	0					
ANR	6148421	AssignmentExpression	ml . prev = * can_read_stream		6148226	0		=			
ANR	6148422	MemberAccess	ml . prev		6148226	0					
ANR	6148423	Identifier	ml		6148226	0					
ANR	6148424	Identifier	prev		6148226	1					
ANR	6148425	UnaryOperationExpression	* can_read_stream		6148226	1					
ANR	6148426	UnaryOperator	*		6148226	0					
ANR	6148427	Identifier	can_read_stream		6148226	1					
ANR	6148428	AssignmentExpression	* can_read_stream = & ml		6148226	1		=			
ANR	6148429	UnaryOperationExpression	* can_read_stream		6148226	0					
ANR	6148430	UnaryOperator	*		6148226	0					
ANR	6148431	Identifier	can_read_stream		6148226	1					
ANR	6148432	UnaryOperationExpression	& ml		6148226	1					
ANR	6148433	UnaryOperator	&		6148226	0					
ANR	6148434	Identifier	ml		6148226	1					
ANR	6148435	ExpressionStatement	macro_ptr = ( int * ) ptr	3122:3:65482:65505	6148226	3	True				
ANR	6148436	AssignmentExpression	macro_ptr = ( int * ) ptr		6148226	0		=			
ANR	6148437	Identifier	macro_ptr		6148226	0					
ANR	6148438	CastExpression	( int * ) ptr		6148226	1					
ANR	6148439	CastTarget	int *		6148226	0					
ANR	6148440	Identifier	ptr		6148226	1					
ANR	6148441	ExpressionStatement	tok = t	3123:3:65510:65517	6148226	4	True				
ANR	6148442	AssignmentExpression	tok = t		6148226	0		=			
ANR	6148443	Identifier	tok		6148226	0					
ANR	6148444	Identifier	t		6148226	1					
ANR	6148445	ExpressionStatement	"ret = macro_subst_tok ( tok_str , nested_list , s , can_read_stream )"	3124:3:65522:65586	6148226	5	True				
ANR	6148446	AssignmentExpression	"ret = macro_subst_tok ( tok_str , nested_list , s , can_read_stream )"		6148226	0		=			
ANR	6148447	Identifier	ret		6148226	0					
ANR	6148448	CallExpression	"macro_subst_tok ( tok_str , nested_list , s , can_read_stream )"		6148226	1					
ANR	6148449	Callee	macro_subst_tok		6148226	0					
ANR	6148450	Identifier	macro_subst_tok		6148226	0					
ANR	6148451	ArgumentList	tok_str		6148226	1					
ANR	6148452	Argument	tok_str		6148226	0					
ANR	6148453	Identifier	tok_str		6148226	0					
ANR	6148454	Argument	nested_list		6148226	1					
ANR	6148455	Identifier	nested_list		6148226	0					
ANR	6148456	Argument	s		6148226	2					
ANR	6148457	Identifier	s		6148226	0					
ANR	6148458	Argument	can_read_stream		6148226	3					
ANR	6148459	Identifier	can_read_stream		6148226	0					
ANR	6148460	ExpressionStatement	ptr = ( int * ) macro_ptr	3125:3:65591:65614	6148226	6	True				
ANR	6148461	AssignmentExpression	ptr = ( int * ) macro_ptr		6148226	0		=			
ANR	6148462	Identifier	ptr		6148226	0					
ANR	6148463	CastExpression	( int * ) macro_ptr		6148226	1					
ANR	6148464	CastTarget	int *		6148226	0					
ANR	6148465	Identifier	macro_ptr		6148226	1					
ANR	6148466	ExpressionStatement	macro_ptr = ml . p	3126:3:65619:65635	6148226	7	True				
ANR	6148467	AssignmentExpression	macro_ptr = ml . p		6148226	0		=			
ANR	6148468	Identifier	macro_ptr		6148226	0					
ANR	6148469	MemberAccess	ml . p		6148226	1					
ANR	6148470	Identifier	ml		6148226	0					
ANR	6148471	Identifier	p		6148226	1					
ANR	6148472	IfStatement	if ( can_read_stream && * can_read_stream == & ml )		6148226	8					
ANR	6148473	Condition	can_read_stream && * can_read_stream == & ml	3127:7:65644:65685	6148226	0	True				
ANR	6148474	AndExpression	can_read_stream && * can_read_stream == & ml		6148226	0		&&			
ANR	6148475	Identifier	can_read_stream		6148226	0					
ANR	6148476	EqualityExpression	* can_read_stream == & ml		6148226	1		==			
ANR	6148477	UnaryOperationExpression	* can_read_stream		6148226	0					
ANR	6148478	UnaryOperator	*		6148226	0					
ANR	6148479	Identifier	can_read_stream		6148226	1					
ANR	6148480	UnaryOperationExpression	& ml		6148226	1					
ANR	6148481	UnaryOperator	&		6148226	0					
ANR	6148482	Identifier	ml		6148226	1					
ANR	6148483	CompoundStatement		53:51:1299:1299	6148226	1					
ANR	6148484	ExpressionStatement	* can_read_stream = ml . prev	3128:4:65694:65720	6148226	0	True				
ANR	6148485	AssignmentExpression	* can_read_stream = ml . prev		6148226	0		=			
ANR	6148486	UnaryOperationExpression	* can_read_stream		6148226	0					
ANR	6148487	UnaryOperator	*		6148226	0					
ANR	6148488	Identifier	can_read_stream		6148226	1					
ANR	6148489	MemberAccess	ml . prev		6148226	1					
ANR	6148490	Identifier	ml		6148226	0					
ANR	6148491	Identifier	prev		6148226	1					
ANR	6148492	IfStatement	if ( ret != 0 )		6148226	9					
ANR	6148493	Condition	ret != 0	3130:7:65734:65741	6148226	0	True				
ANR	6148494	EqualityExpression	ret != 0		6148226	0		!=			
ANR	6148495	Identifier	ret		6148226	0					
ANR	6148496	PrimaryExpression	0		6148226	1					
ANR	6148497	CompoundStatement		56:17:1355:1355	6148226	1					
ANR	6148498	GotoStatement	goto no_subst ;	3131:4:65750:65763	6148226	0	True				
ANR	6148499	Identifier	no_subst		6148226	0					
ANR	6148500	IfStatement	if ( parse_flags & PARSE_FLAG_SPACES )		6148226	10					
ANR	6148501	Condition	parse_flags & PARSE_FLAG_SPACES	3133:7:65777:65807	6148226	0	True				
ANR	6148502	BitAndExpression	parse_flags & PARSE_FLAG_SPACES		6148226	0		&			
ANR	6148503	Identifier	parse_flags		6148226	0					
ANR	6148504	Identifier	PARSE_FLAG_SPACES		6148226	1					
ANR	6148505	CompoundStatement		59:40:1421:1421	6148226	1					
ANR	6148506	ExpressionStatement	force_blank = 1	3134:4:65816:65831	6148226	0	True				
ANR	6148507	AssignmentExpression	force_blank = 1		6148226	0		=			
ANR	6148508	Identifier	force_blank		6148226	0					
ANR	6148509	PrimaryExpression	1		6148226	1					
ANR	6148510	ElseStatement	else		6148226	0					
ANR	6148511	CompoundStatement		62:9:1458:1458	6148226	0					
ANR	6148512	Label	no_subst :	3137:0:65849:65857	6148226	0	True				
ANR	6148513	Identifier	no_subst		6148226	0					
ANR	6148514	IfStatement	if ( force_blank )		6148226	1					
ANR	6148515	Condition	force_blank	3138:7:65866:65876	6148226	0	True				
ANR	6148516	Identifier	force_blank		6148226	0					
ANR	6148517	CompoundStatement		64:20:1490:1490	6148226	1					
ANR	6148518	ExpressionStatement	"tok_str_add ( tok_str , ' ' )"	3139:4:65885:65911	6148226	0	True				
ANR	6148519	CallExpression	"tok_str_add ( tok_str , ' ' )"		6148226	0					
ANR	6148520	Callee	tok_str_add		6148226	0					
ANR	6148521	Identifier	tok_str_add		6148226	0					
ANR	6148522	ArgumentList	tok_str		6148226	1					
ANR	6148523	Argument	tok_str		6148226	0					
ANR	6148524	Identifier	tok_str		6148226	0					
ANR	6148525	Argument	' '		6148226	1					
ANR	6148526	PrimaryExpression	' '		6148226	0					
ANR	6148527	ExpressionStatement	spc = 1	3140:4:65917:65924	6148226	1	True				
ANR	6148528	AssignmentExpression	spc = 1		6148226	0		=			
ANR	6148529	Identifier	spc		6148226	0					
ANR	6148530	PrimaryExpression	1		6148226	1					
ANR	6148531	ExpressionStatement	force_blank = 0	3141:4:65930:65945	6148226	2	True				
ANR	6148532	AssignmentExpression	force_blank = 0		6148226	0		=			
ANR	6148533	Identifier	force_blank		6148226	0					
ANR	6148534	PrimaryExpression	0		6148226	1					
ANR	6148535	IfStatement	"if ( ! check_space ( t , & spc ) )"		6148226	2					
ANR	6148536	Condition	"! check_space ( t , & spc )"	3143:7:65959:65980	6148226	0	True				
ANR	6148537	UnaryOperationExpression	"! check_space ( t , & spc )"		6148226	0					
ANR	6148538	UnaryOperator	!		6148226	0					
ANR	6148539	CallExpression	"check_space ( t , & spc )"		6148226	1					
ANR	6148540	Callee	check_space		6148226	0					
ANR	6148541	Identifier	check_space		6148226	0					
ANR	6148542	ArgumentList	t		6148226	1					
ANR	6148543	Argument	t		6148226	0					
ANR	6148544	Identifier	t		6148226	0					
ANR	6148545	Argument	& spc		6148226	1					
ANR	6148546	UnaryOperationExpression	& spc		6148226	0					
ANR	6148547	UnaryOperator	&		6148226	0					
ANR	6148548	Identifier	spc		6148226	1					
ANR	6148549	CompoundStatement		69:31:1594:1594	6148226	1					
ANR	6148550	ExpressionStatement	"tok_str_add2 ( tok_str , t , & cval )"	3144:4:65989:66021	6148226	0	True				
ANR	6148551	CallExpression	"tok_str_add2 ( tok_str , t , & cval )"		6148226	0					
ANR	6148552	Callee	tok_str_add2		6148226	0					
ANR	6148553	Identifier	tok_str_add2		6148226	0					
ANR	6148554	ArgumentList	tok_str		6148226	1					
ANR	6148555	Argument	tok_str		6148226	0					
ANR	6148556	Identifier	tok_str		6148226	0					
ANR	6148557	Argument	t		6148226	1					
ANR	6148558	Identifier	t		6148226	0					
ANR	6148559	Argument	& cval		6148226	2					
ANR	6148560	UnaryOperationExpression	& cval		6148226	0					
ANR	6148561	UnaryOperator	&		6148226	0					
ANR	6148562	Identifier	cval		6148226	1					
ANR	6148563	IfStatement	if ( macro_str1 )		6148226	13					
ANR	6148564	Condition	macro_str1	3148:5:66040:66049	6148226	0	True				
ANR	6148565	Identifier	macro_str1		6148226	0					
ANR	6148566	CompoundStatement		74:17:1663:1663	6148226	1					
ANR	6148567	ExpressionStatement	tok_str_free ( macro_str1 )	3149:2:66056:66081	6148226	0	True				
ANR	6148568	CallExpression	tok_str_free ( macro_str1 )		6148226	0					
ANR	6148569	Callee	tok_str_free		6148226	0					
ANR	6148570	Identifier	tok_str_free		6148226	0					
ANR	6148571	ArgumentList	macro_str1		6148226	1					
ANR	6148572	Argument	macro_str1		6148226	0					
ANR	6148573	Identifier	macro_str1		6148226	0					
ANR	6148574	ReturnType	static void		6148226	1					
ANR	6148575	Identifier	macro_subst		6148226	2					
ANR	6148576	ParameterList	"TokenString * tok_str , Sym * * nested_list , const int * macro_str , struct macro_level * * can_read_stream"		6148226	3					
ANR	6148577	Parameter	TokenString * tok_str	3073:24:64284:64303	6148226	0	True				
ANR	6148578	ParameterType	TokenString *		6148226	0					
ANR	6148579	Identifier	tok_str		6148226	1					
ANR	6148580	Parameter	Sym * * nested_list	3073:46:64306:64322	6148226	1	True				
ANR	6148581	ParameterType	Sym * *		6148226	0					
ANR	6148582	Identifier	nested_list		6148226	1					
ANR	6148583	Parameter	const int * macro_str	3074:3:64328:64347	6148226	2	True				
ANR	6148584	ParameterType	const int *		6148226	0					
ANR	6148585	Identifier	macro_str		6148226	1					
ANR	6148586	Parameter	struct macro_level * * can_read_stream	3074:25:64350:64385	6148226	3	True				
ANR	6148587	ParameterType	struct macro_level * *		6148226	0					
ANR	6148588	Identifier	can_read_stream		6148226	1					
ANR	6148589	CFGEntryNode	ENTRY		6148226		True				
ANR	6148590	CFGExitNode	EXIT		6148226		True				
ANR	6148591	Symbol	macro_subst_tok		6148226						
ANR	6148592	Symbol	& ml		6148226						
ANR	6148593	Symbol	nested_list		6148226						
ANR	6148594	Symbol	& spc		6148226						
ANR	6148595	Symbol	can_read_stream		6148226						
ANR	6148596	Symbol	force_blank		6148226						
ANR	6148597	Symbol	tok_str		6148226						
ANR	6148598	Symbol	& cval		6148226						
ANR	6148599	Symbol	tok		6148226						
ANR	6148600	Symbol	& ptr		6148226						
ANR	6148601	Symbol	* can_read_stream		6148226						
ANR	6148602	Symbol	macro_str1		6148226						
ANR	6148603	Symbol	define_find		6148226						
ANR	6148604	Symbol	ml		6148226						
ANR	6148605	Symbol	ret		6148226						
ANR	6148606	Symbol	NULL		6148226						
ANR	6148607	Symbol	ml . prev		6148226						
ANR	6148608	Symbol	spc		6148226						
ANR	6148609	Symbol	tcc_nerr		6148226						
ANR	6148610	Symbol	ptr		6148226						
ANR	6148611	Symbol	macro_twosharps		6148226						
ANR	6148612	Symbol	TOK_NOSUBST		6148226						
ANR	6148613	Symbol	* nested_list		6148226						
ANR	6148614	Symbol	cval		6148226						
ANR	6148615	Symbol	macro_str		6148226						
ANR	6148616	Symbol	s		6148226						
ANR	6148617	Symbol	t		6148226						
ANR	6148618	Symbol	macro_ptr		6148226						
ANR	6148619	Symbol	check_space		6148226						
ANR	6148620	Symbol	& t		6148226						
ANR	6148621	Symbol	PARSE_FLAG_SPACES		6148226						
ANR	6148622	Symbol	ml . p		6148226						
ANR	6148623	Symbol	sym_find2		6148226						
ANR	6148624	Symbol	parse_flags		6148226						
ANR	6148625	Function	next	3154:0:66137:67496							
ANR	6148626	FunctionDef	next ()		6148625	0					
ANR	6148627	CompoundStatement		3155:0:66161:67496	6148625	0					
ANR	6148628	IdentifierDeclStatement	"Sym * nested_list , * s ;"	3156:1:66164:66184	6148625	0	True				
ANR	6148629	IdentifierDecl	* nested_list		6148625	0					
ANR	6148630	IdentifierDeclType	Sym *		6148625	0					
ANR	6148631	Identifier	nested_list		6148625	1					
ANR	6148632	IdentifierDecl	* s		6148625	1					
ANR	6148633	IdentifierDeclType	Sym *		6148625	0					
ANR	6148634	Identifier	s		6148625	1					
ANR	6148635	IdentifierDeclStatement	TokenString str ;	3157:1:66187:66202	6148625	1	True				
ANR	6148636	IdentifierDecl	str		6148625	0					
ANR	6148637	IdentifierDeclType	TokenString		6148625	0					
ANR	6148638	Identifier	str		6148625	1					
ANR	6148639	IdentifierDeclStatement	struct macro_level * ml ;	3158:1:66205:66227	6148625	2	True				
ANR	6148640	IdentifierDecl	* ml		6148625	0					
ANR	6148641	IdentifierDeclType	struct macro_level *		6148625	0					
ANR	6148642	Identifier	ml		6148625	1					
ANR	6148643	Label	redo :	3160:0:66230:66234	6148625	3	True				
ANR	6148644	Identifier	redo		6148625	0					
ANR	6148645	IfStatement	if ( parse_flags & PARSE_FLAG_SPACES )		6148625	4					
ANR	6148646	Condition	parse_flags & PARSE_FLAG_SPACES	3161:5:66241:66271	6148625	0	True				
ANR	6148647	BitAndExpression	parse_flags & PARSE_FLAG_SPACES		6148625	0		&			
ANR	6148648	Identifier	parse_flags		6148625	0					
ANR	6148649	Identifier	PARSE_FLAG_SPACES		6148625	1					
ANR	6148650	CompoundStatement		7:38:112:112	6148625	1					
ANR	6148651	ExpressionStatement	next_nomacro_spc ( )	3162:2:66278:66297	6148625	0	True				
ANR	6148652	CallExpression	next_nomacro_spc ( )		6148625	0					
ANR	6148653	Callee	next_nomacro_spc		6148625	0					
ANR	6148654	Identifier	next_nomacro_spc		6148625	0					
ANR	6148655	ArgumentList			6148625	1					
ANR	6148656	ElseStatement	else		6148625	0					
ANR	6148657	CompoundStatement		9:8:145:145	6148625	0					
ANR	6148658	ExpressionStatement	next_nomacro ( )	3164:2:66311:66326	6148625	0	True				
ANR	6148659	CallExpression	next_nomacro ( )		6148625	0					
ANR	6148660	Callee	next_nomacro		6148625	0					
ANR	6148661	Identifier	next_nomacro		6148625	0					
ANR	6148662	ArgumentList			6148625	1					
ANR	6148663	IfStatement	if ( ! macro_ptr )		6148625	5					
ANR	6148664	Condition	! macro_ptr	3166:5:66336:66345	6148625	0	True				
ANR	6148665	UnaryOperationExpression	! macro_ptr		6148625	0					
ANR	6148666	UnaryOperator	!		6148625	0					
ANR	6148667	Identifier	macro_ptr		6148625	1					
ANR	6148668	CompoundStatement		12:17:186:186	6148625	1					
ANR	6148669	IfStatement	if ( tok >= TOK_IDENT && ( parse_flags & PARSE_FLAG_PREPROCESS ) )		6148625	0					
ANR	6148670	Condition	tok >= TOK_IDENT && ( parse_flags & PARSE_FLAG_PREPROCESS )	3169:6:66445:66507	6148625	0	True				
ANR	6148671	AndExpression	tok >= TOK_IDENT && ( parse_flags & PARSE_FLAG_PREPROCESS )		6148625	0		&&			
ANR	6148672	RelationalExpression	tok >= TOK_IDENT		6148625	0		>=			
ANR	6148673	Identifier	tok		6148625	0					
ANR	6148674	Identifier	TOK_IDENT		6148625	1					
ANR	6148675	BitAndExpression	parse_flags & PARSE_FLAG_PREPROCESS		6148625	1		&			
ANR	6148676	Identifier	parse_flags		6148625	0					
ANR	6148677	Identifier	PARSE_FLAG_PREPROCESS		6148625	1					
ANR	6148678	CompoundStatement		16:45:348:348	6148625	1					
ANR	6148679	ExpressionStatement	s = define_find ( tok )	3171:3:66515:66536	6148625	0	True				
ANR	6148680	AssignmentExpression	s = define_find ( tok )		6148625	0		=			
ANR	6148681	Identifier	s		6148625	0					
ANR	6148682	CallExpression	define_find ( tok )		6148625	1					
ANR	6148683	Callee	define_find		6148625	0					
ANR	6148684	Identifier	define_find		6148625	0					
ANR	6148685	ArgumentList	tok		6148625	1					
ANR	6148686	Argument	tok		6148625	0					
ANR	6148687	Identifier	tok		6148625	0					
ANR	6148688	IfStatement	if ( s )		6148625	1					
ANR	6148689	Condition	s	3172:7:66545:66545	6148625	0	True				
ANR	6148690	Identifier	s		6148625	0					
ANR	6148691	CompoundStatement		18:10:386:386	6148625	1					
ANR	6148692	ExpressionStatement	tok_str_new ( & str )	3174:4:66602:66620	6148625	0	True				
ANR	6148693	CallExpression	tok_str_new ( & str )		6148625	0					
ANR	6148694	Callee	tok_str_new		6148625	0					
ANR	6148695	Identifier	tok_str_new		6148625	0					
ANR	6148696	ArgumentList	& str		6148625	1					
ANR	6148697	Argument	& str		6148625	0					
ANR	6148698	UnaryOperationExpression	& str		6148625	0					
ANR	6148699	UnaryOperator	&		6148625	0					
ANR	6148700	Identifier	str		6148625	1					
ANR	6148701	ExpressionStatement	nested_list = NULL	3175:4:66626:66644	6148625	1	True				
ANR	6148702	AssignmentExpression	nested_list = NULL		6148625	0		=			
ANR	6148703	Identifier	nested_list		6148625	0					
ANR	6148704	Identifier	NULL		6148625	1					
ANR	6148705	ExpressionStatement	ml = NULL	3176:4:66650:66659	6148625	2	True				
ANR	6148706	AssignmentExpression	ml = NULL		6148625	0		=			
ANR	6148707	Identifier	ml		6148625	0					
ANR	6148708	Identifier	NULL		6148625	1					
ANR	6148709	IfStatement	"if ( macro_subst_tok ( & str , & nested_list , s , & ml ) == 0 )"		6148625	3					
ANR	6148710	Condition	"macro_subst_tok ( & str , & nested_list , s , & ml ) == 0"	3177:8:66669:66717	6148625	0	True				
ANR	6148711	EqualityExpression	"macro_subst_tok ( & str , & nested_list , s , & ml ) == 0"		6148625	0		==			
ANR	6148712	CallExpression	"macro_subst_tok ( & str , & nested_list , s , & ml )"		6148625	0					
ANR	6148713	Callee	macro_subst_tok		6148625	0					
ANR	6148714	Identifier	macro_subst_tok		6148625	0					
ANR	6148715	ArgumentList	& str		6148625	1					
ANR	6148716	Argument	& str		6148625	0					
ANR	6148717	UnaryOperationExpression	& str		6148625	0					
ANR	6148718	UnaryOperator	&		6148625	0					
ANR	6148719	Identifier	str		6148625	1					
ANR	6148720	Argument	& nested_list		6148625	1					
ANR	6148721	UnaryOperationExpression	& nested_list		6148625	0					
ANR	6148722	UnaryOperator	&		6148625	0					
ANR	6148723	Identifier	nested_list		6148625	1					
ANR	6148724	Argument	s		6148625	2					
ANR	6148725	Identifier	s		6148625	0					
ANR	6148726	Argument	& ml		6148625	3					
ANR	6148727	UnaryOperationExpression	& ml		6148625	0					
ANR	6148728	UnaryOperator	&		6148625	0					
ANR	6148729	Identifier	ml		6148625	1					
ANR	6148730	PrimaryExpression	0		6148625	1					
ANR	6148731	CompoundStatement		23:59:558:558	6148625	1					
ANR	6148732	ExpressionStatement	"tok_str_add ( & str , 0 )"	3179:5:66775:66796	6148625	0	True				
ANR	6148733	CallExpression	"tok_str_add ( & str , 0 )"		6148625	0					
ANR	6148734	Callee	tok_str_add		6148625	0					
ANR	6148735	Identifier	tok_str_add		6148625	0					
ANR	6148736	ArgumentList	& str		6148625	1					
ANR	6148737	Argument	& str		6148625	0					
ANR	6148738	UnaryOperationExpression	& str		6148625	0					
ANR	6148739	UnaryOperator	&		6148625	0					
ANR	6148740	Identifier	str		6148625	1					
ANR	6148741	Argument	0		6148625	1					
ANR	6148742	PrimaryExpression	0		6148625	0					
ANR	6148743	ExpressionStatement	macro_ptr = str . str	3180:5:66803:66822	6148625	1	True				
ANR	6148744	AssignmentExpression	macro_ptr = str . str		6148625	0		=			
ANR	6148745	Identifier	macro_ptr		6148625	0					
ANR	6148746	MemberAccess	str . str		6148625	1					
ANR	6148747	Identifier	str		6148625	0					
ANR	6148748	Identifier	str		6148625	1					
ANR	6148749	ExpressionStatement	macro_ptr_allocated = str . str	3181:5:66829:66858	6148625	2	True				
ANR	6148750	AssignmentExpression	macro_ptr_allocated = str . str		6148625	0		=			
ANR	6148751	Identifier	macro_ptr_allocated		6148625	0					
ANR	6148752	MemberAccess	str . str		6148625	1					
ANR	6148753	Identifier	str		6148625	0					
ANR	6148754	Identifier	str		6148625	1					
ANR	6148755	GotoStatement	goto redo ;	3182:5:66865:66874	6148625	3	True				
ANR	6148756	Identifier	redo		6148625	0					
ANR	6148757	ElseStatement	else		6148625	0					
ANR	6148758	CompoundStatement		32:8:737:737	6148625	0					
ANR	6148759	IfStatement	if ( tok == 0 )		6148625	0					
ANR	6148760	Condition	tok == 0	3187:6:66907:66914	6148625	0	True				
ANR	6148761	EqualityExpression	tok == 0		6148625	0		==			
ANR	6148762	Identifier	tok		6148625	0					
ANR	6148763	PrimaryExpression	0		6148625	1					
ANR	6148764	CompoundStatement		33:16:755:755	6148625	1					
ANR	6148765	IfStatement	if ( unget_buffer_enabled )		6148625	0					
ANR	6148766	Condition	unget_buffer_enabled	3189:7:66971:66990	6148625	0	True				
ANR	6148767	Identifier	unget_buffer_enabled		6148625	0					
ANR	6148768	CompoundStatement		35:29:831:831	6148625	1					
ANR	6148769	ExpressionStatement	macro_ptr = unget_saved_macro_ptr	3190:4:66999:67032	6148625	0	True				
ANR	6148770	AssignmentExpression	macro_ptr = unget_saved_macro_ptr		6148625	0		=			
ANR	6148771	Identifier	macro_ptr		6148625	0					
ANR	6148772	Identifier	unget_saved_macro_ptr		6148625	1					
ANR	6148773	ExpressionStatement	unget_buffer_enabled = 0	3191:4:67038:67062	6148625	1	True				
ANR	6148774	AssignmentExpression	unget_buffer_enabled = 0		6148625	0		=			
ANR	6148775	Identifier	unget_buffer_enabled		6148625	0					
ANR	6148776	PrimaryExpression	0		6148625	1					
ANR	6148777	ElseStatement	else		6148625	0					
ANR	6148778	CompoundStatement		38:10:912:912	6148625	0					
ANR	6148779	ExpressionStatement	tok_str_free ( macro_ptr_allocated )	3194:4:67119:67153	6148625	0	True				
ANR	6148780	CallExpression	tok_str_free ( macro_ptr_allocated )		6148625	0					
ANR	6148781	Callee	tok_str_free		6148625	0					
ANR	6148782	Identifier	tok_str_free		6148625	0					
ANR	6148783	ArgumentList	macro_ptr_allocated		6148625	1					
ANR	6148784	Argument	macro_ptr_allocated		6148625	0					
ANR	6148785	Identifier	macro_ptr_allocated		6148625	0					
ANR	6148786	ExpressionStatement	macro_ptr_allocated = NULL	3195:4:67159:67185	6148625	1	True				
ANR	6148787	AssignmentExpression	macro_ptr_allocated = NULL		6148625	0		=			
ANR	6148788	Identifier	macro_ptr_allocated		6148625	0					
ANR	6148789	Identifier	NULL		6148625	1					
ANR	6148790	ExpressionStatement	macro_ptr = NULL	3196:4:67191:67207	6148625	2	True				
ANR	6148791	AssignmentExpression	macro_ptr = NULL		6148625	0		=			
ANR	6148792	Identifier	macro_ptr		6148625	0					
ANR	6148793	Identifier	NULL		6148625	1					
ANR	6148794	GotoStatement	goto redo ;	3198:3:67217:67226	6148625	1	True				
ANR	6148795	Identifier	redo		6148625	0					
ANR	6148796	ElseStatement	else		6148625	0					
ANR	6148797	IfStatement	if ( tok == TOK_NOSUBST )		6148625	0					
ANR	6148798	Condition	tok == TOK_NOSUBST	3199:13:67241:67258	6148625	0	True				
ANR	6148799	EqualityExpression	tok == TOK_NOSUBST		6148625	0		==			
ANR	6148800	Identifier	tok		6148625	0					
ANR	6148801	Identifier	TOK_NOSUBST		6148625	1					
ANR	6148802	CompoundStatement		45:33:1099:1099	6148625	1					
ANR	6148803	GotoStatement	goto redo ;	3201:3:67314:67323	6148625	0	True				
ANR	6148804	Identifier	redo		6148625	0					
ANR	6148805	IfStatement	if ( tok == TOK_PPNUM && ( parse_flags & PARSE_FLAG_TOK_NUM ) )		6148625	6					
ANR	6148806	Condition	tok == TOK_PPNUM && ( parse_flags & PARSE_FLAG_TOK_NUM )	3206:5:67387:67445	6148625	0	True				
ANR	6148807	AndExpression	tok == TOK_PPNUM && ( parse_flags & PARSE_FLAG_TOK_NUM )		6148625	0		&&			
ANR	6148808	EqualityExpression	tok == TOK_PPNUM		6148625	0		==			
ANR	6148809	Identifier	tok		6148625	0					
ANR	6148810	Identifier	TOK_PPNUM		6148625	1					
ANR	6148811	BitAndExpression	parse_flags & PARSE_FLAG_TOK_NUM		6148625	1		&			
ANR	6148812	Identifier	parse_flags		6148625	0					
ANR	6148813	Identifier	PARSE_FLAG_TOK_NUM		6148625	1					
ANR	6148814	CompoundStatement		53:41:1286:1286	6148625	1					
ANR	6148815	ExpressionStatement	parse_number ( ( char * ) tokc . cstr -> data )	3208:2:67452:67491	6148625	0	True				
ANR	6148816	CallExpression	parse_number ( ( char * ) tokc . cstr -> data )		6148625	0					
ANR	6148817	Callee	parse_number		6148625	0					
ANR	6148818	Identifier	parse_number		6148625	0					
ANR	6148819	ArgumentList	( char * ) tokc . cstr -> data		6148625	1					
ANR	6148820	Argument	( char * ) tokc . cstr -> data		6148625	0					
ANR	6148821	CastExpression	( char * ) tokc . cstr -> data		6148625	0					
ANR	6148822	CastTarget	char *		6148625	0					
ANR	6148823	PtrMemberAccess	tokc . cstr -> data		6148625	1					
ANR	6148824	MemberAccess	tokc . cstr		6148625	0					
ANR	6148825	Identifier	tokc		6148625	0					
ANR	6148826	Identifier	cstr		6148625	1					
ANR	6148827	Identifier	data		6148625	1					
ANR	6148828	ReturnType	ST_FUNC void		6148625	1					
ANR	6148829	Identifier	next		6148625	2					
ANR	6148830	ParameterList			6148625	3					
ANR	6148831	CFGEntryNode	ENTRY		6148625		True				
ANR	6148832	CFGExitNode	EXIT		6148625		True				
ANR	6148833	Symbol	macro_subst_tok		6148625						
ANR	6148834	Symbol	unget_saved_macro_ptr		6148625						
ANR	6148835	Symbol	* tokc . cstr		6148625						
ANR	6148836	Symbol	& ml		6148625						
ANR	6148837	Symbol	nested_list		6148625						
ANR	6148838	Symbol	unget_buffer_enabled		6148625						
ANR	6148839	Symbol	& str		6148625						
ANR	6148840	Symbol	str . str		6148625						
ANR	6148841	Symbol	tok		6148625						
ANR	6148842	Symbol	tokc . cstr		6148625						
ANR	6148843	Symbol	TOK_PPNUM		6148625						
ANR	6148844	Symbol	define_find		6148625						
ANR	6148845	Symbol	ml		6148625						
ANR	6148846	Symbol	NULL		6148625						
ANR	6148847	Symbol	TOK_IDENT		6148625						
ANR	6148848	Symbol	tokc		6148625						
ANR	6148849	Symbol	PARSE_FLAG_PREPROCESS		6148625						
ANR	6148850	Symbol	* tokc		6148625						
ANR	6148851	Symbol	macro_ptr_allocated		6148625						
ANR	6148852	Symbol	TOK_NOSUBST		6148625						
ANR	6148853	Symbol	str		6148625						
ANR	6148854	Symbol	s		6148625						
ANR	6148855	Symbol	macro_ptr		6148625						
ANR	6148856	Symbol	tokc . cstr -> data		6148625						
ANR	6148857	Symbol	PARSE_FLAG_SPACES		6148625						
ANR	6148858	Symbol	PARSE_FLAG_TOK_NUM		6148625						
ANR	6148859	Symbol	parse_flags		6148625						
ANR	6148860	Symbol	& nested_list		6148625						
ANR	6148861	Function	unget_tok	3214:0:67610:68047							
ANR	6148862	FunctionDef	unget_tok (int last_tok)		6148861	0					
ANR	6148863	CompoundStatement		3215:0:67647:68047	6148861	0					
ANR	6148864	IdentifierDeclStatement	"int i , n ;"	3216:1:67650:67658	6148861	0	True				
ANR	6148865	IdentifierDecl	i		6148861	0					
ANR	6148866	IdentifierDeclType	int		6148861	0					
ANR	6148867	Identifier	i		6148861	1					
ANR	6148868	IdentifierDecl	n		6148861	1					
ANR	6148869	IdentifierDeclType	int		6148861	0					
ANR	6148870	Identifier	n		6148861	1					
ANR	6148871	IdentifierDeclStatement	int * q ;	3217:1:67661:67667	6148861	1	True				
ANR	6148872	IdentifierDecl	* q		6148861	0					
ANR	6148873	IdentifierDeclType	int *		6148861	0					
ANR	6148874	Identifier	q		6148861	1					
ANR	6148875	IfStatement	if ( unget_buffer_enabled )		6148861	2					
ANR	6148876	Condition	unget_buffer_enabled	3218:5:67674:67693	6148861	0	True				
ANR	6148877	Identifier	unget_buffer_enabled		6148861	0					
ANR	6148878	CompoundStatement		4:27:48:48	6148861	1					
ANR	6148879	ElseStatement	else		6148861	0					
ANR	6148880	CompoundStatement		7:8:142:142	6148861	0					
ANR	6148881	ExpressionStatement	unget_saved_macro_ptr = macro_ptr	3222:2:67794:67827	6148861	0	True				
ANR	6148882	AssignmentExpression	unget_saved_macro_ptr = macro_ptr		6148861	0		=			
ANR	6148883	Identifier	unget_saved_macro_ptr		6148861	0					
ANR	6148884	Identifier	macro_ptr		6148861	1					
ANR	6148885	ExpressionStatement	unget_buffer_enabled = 1	3223:2:67831:67855	6148861	1	True				
ANR	6148886	AssignmentExpression	unget_buffer_enabled = 1		6148861	0		=			
ANR	6148887	Identifier	unget_buffer_enabled		6148861	0					
ANR	6148888	PrimaryExpression	1		6148861	1					
ANR	6148889	ExpressionStatement	q = unget_saved_buffer	3225:1:67861:67883	6148861	3	True				
ANR	6148890	AssignmentExpression	q = unget_saved_buffer		6148861	0		=			
ANR	6148891	Identifier	q		6148861	0					
ANR	6148892	Identifier	unget_saved_buffer		6148861	1					
ANR	6148893	ExpressionStatement	macro_ptr = q	3226:1:67886:67899	6148861	4	True				
ANR	6148894	AssignmentExpression	macro_ptr = q		6148861	0		=			
ANR	6148895	Identifier	macro_ptr		6148861	0					
ANR	6148896	Identifier	q		6148861	1					
ANR	6148897	ExpressionStatement	* q ++ = tok	3227:1:67902:67912	6148861	5	True				
ANR	6148898	AssignmentExpression	* q ++ = tok		6148861	0		=			
ANR	6148899	UnaryOperationExpression	* q ++		6148861	0					
ANR	6148900	UnaryOperator	*		6148861	0					
ANR	6148901	PostIncDecOperationExpression	q ++		6148861	1					
ANR	6148902	Identifier	q		6148861	0					
ANR	6148903	IncDec	++		6148861	1					
ANR	6148904	Identifier	tok		6148861	1					
ANR	6148905	ExpressionStatement	n = tok_ext_size ( tok ) - 1	3228:1:67915:67941	6148861	6	True				
ANR	6148906	AssignmentExpression	n = tok_ext_size ( tok ) - 1		6148861	0		=			
ANR	6148907	Identifier	n		6148861	0					
ANR	6148908	AdditiveExpression	tok_ext_size ( tok ) - 1		6148861	1		-			
ANR	6148909	CallExpression	tok_ext_size ( tok )		6148861	0					
ANR	6148910	Callee	tok_ext_size		6148861	0					
ANR	6148911	Identifier	tok_ext_size		6148861	0					
ANR	6148912	ArgumentList	tok		6148861	1					
ANR	6148913	Argument	tok		6148861	0					
ANR	6148914	Identifier	tok		6148861	0					
ANR	6148915	PrimaryExpression	1		6148861	1					
ANR	6148916	ForStatement	for ( i = 0 ; i < n ; i ++ )		6148861	7					
ANR	6148917	ForInit	i = 0 ;	3229:6:67949:67954	6148861	0	True				
ANR	6148918	AssignmentExpression	i = 0		6148861	0		=			
ANR	6148919	Identifier	i		6148861	0					
ANR	6148920	PrimaryExpression	0		6148861	1					
ANR	6148921	Condition	i < n	3229:13:67956:67960	6148861	1	True				
ANR	6148922	RelationalExpression	i < n		6148861	0		<			
ANR	6148923	Identifier	i		6148861	0					
ANR	6148924	Identifier	n		6148861	1					
ANR	6148925	PostIncDecOperationExpression	i ++	3229:20:67963:67965	6148861	2	True				
ANR	6148926	Identifier	i		6148861	0					
ANR	6148927	IncDec	++		6148861	1					
ANR	6148928	CompoundStatement		15:25:320:320	6148861	3					
ANR	6148929	ExpressionStatement	* q ++ = tokc . tab [ i ]	3230:2:67972:67990	6148861	0	True				
ANR	6148930	AssignmentExpression	* q ++ = tokc . tab [ i ]		6148861	0		=			
ANR	6148931	UnaryOperationExpression	* q ++		6148861	0					
ANR	6148932	UnaryOperator	*		6148861	0					
ANR	6148933	PostIncDecOperationExpression	q ++		6148861	1					
ANR	6148934	Identifier	q		6148861	0					
ANR	6148935	IncDec	++		6148861	1					
ANR	6148936	ArrayIndexing	tokc . tab [ i ]		6148861	1					
ANR	6148937	MemberAccess	tokc . tab		6148861	0					
ANR	6148938	Identifier	tokc		6148861	0					
ANR	6148939	Identifier	tab		6148861	1					
ANR	6148940	Identifier	i		6148861	1					
ANR	6148941	ExpressionStatement	* q = 0	3232:1:67996:68002	6148861	8	True				
ANR	6148942	AssignmentExpression	* q = 0		6148861	0		=			
ANR	6148943	UnaryOperationExpression	* q		6148861	0					
ANR	6148944	UnaryOperator	*		6148861	0					
ANR	6148945	Identifier	q		6148861	1					
ANR	6148946	PrimaryExpression	0		6148861	1					
ANR	6148947	ExpressionStatement	tok = last_tok	3233:1:68031:68045	6148861	9	True				
ANR	6148948	AssignmentExpression	tok = last_tok		6148861	0		=			
ANR	6148949	Identifier	tok		6148861	0					
ANR	6148950	Identifier	last_tok		6148861	1					
ANR	6148951	ReturnType	ST_INLN void		6148861	1					
ANR	6148952	Identifier	unget_tok		6148861	2					
ANR	6148953	ParameterList	int last_tok		6148861	3					
ANR	6148954	Parameter	int last_tok	3214:23:67633:67644	6148861	0	True				
ANR	6148955	ParameterType	int		6148861	0					
ANR	6148956	Identifier	last_tok		6148861	1					
ANR	6148957	CFGEntryNode	ENTRY		6148861		True				
ANR	6148958	CFGExitNode	EXIT		6148861		True				
ANR	6148959	Symbol	unget_saved_macro_ptr		6148861						
ANR	6148960	Symbol	unget_saved_buffer		6148861						
ANR	6148961	Symbol	tokc		6148861						
ANR	6148962	Symbol	* tokc . tab		6148861						
ANR	6148963	Symbol	* q ++		6148861						
ANR	6148964	Symbol	i		6148861						
ANR	6148965	Symbol	tok_ext_size		6148861						
ANR	6148966	Symbol	* tokc		6148861						
ANR	6148967	Symbol	n		6148861						
ANR	6148968	Symbol	last_tok		6148861						
ANR	6148969	Symbol	unget_buffer_enabled		6148861						
ANR	6148970	Symbol	q		6148861						
ANR	6148971	Symbol	tok		6148861						
ANR	6148972	Symbol	* i		6148861						
ANR	6148973	Symbol	macro_ptr		6148861						
ANR	6148974	Symbol	tokc . tab		6148861						
ANR	6148975	Symbol	* q		6148861						
ANR	6148976	Function	preprocess_init	3239:0:68137:68482							
ANR	6148977	FunctionDef	preprocess_init (TCCState * s1)		6148976	0					
ANR	6148978	CompoundStatement		3240:0:68180:68482	6148976	0					
ANR	6148979	ExpressionStatement	s1 -> include_stack_ptr = s1 -> include_stack	3241:1:68183:68224	6148976	0	True				
ANR	6148980	AssignmentExpression	s1 -> include_stack_ptr = s1 -> include_stack		6148976	0		=			
ANR	6148981	PtrMemberAccess	s1 -> include_stack_ptr		6148976	0					
ANR	6148982	Identifier	s1		6148976	0					
ANR	6148983	Identifier	include_stack_ptr		6148976	1					
ANR	6148984	PtrMemberAccess	s1 -> include_stack		6148976	1					
ANR	6148985	Identifier	s1		6148976	0					
ANR	6148986	Identifier	include_stack		6148976	1					
ANR	6148987	ExpressionStatement	s1 -> ifdef_stack_ptr = s1 -> ifdef_stack	3244:1:68314:68351	6148976	1	True				
ANR	6148988	AssignmentExpression	s1 -> ifdef_stack_ptr = s1 -> ifdef_stack		6148976	0		=			
ANR	6148989	PtrMemberAccess	s1 -> ifdef_stack_ptr		6148976	0					
ANR	6148990	Identifier	s1		6148976	0					
ANR	6148991	Identifier	ifdef_stack_ptr		6148976	1					
ANR	6148992	PtrMemberAccess	s1 -> ifdef_stack		6148976	1					
ANR	6148993	Identifier	s1		6148976	0					
ANR	6148994	Identifier	ifdef_stack		6148976	1					
ANR	6148995	ExpressionStatement	file -> ifdef_stack_ptr = s1 -> ifdef_stack_ptr	3245:1:68354:68397	6148976	2	True				
ANR	6148996	AssignmentExpression	file -> ifdef_stack_ptr = s1 -> ifdef_stack_ptr		6148976	0		=			
ANR	6148997	PtrMemberAccess	file -> ifdef_stack_ptr		6148976	0					
ANR	6148998	Identifier	file		6148976	0					
ANR	6148999	Identifier	ifdef_stack_ptr		6148976	1					
ANR	6149000	PtrMemberAccess	s1 -> ifdef_stack_ptr		6148976	1					
ANR	6149001	Identifier	s1		6148976	0					
ANR	6149002	Identifier	ifdef_stack_ptr		6148976	1					
ANR	6149003	ExpressionStatement	vtop = vstack - 1	3247:1:68401:68418	6148976	3	True				
ANR	6149004	AssignmentExpression	vtop = vstack - 1		6148976	0		=			
ANR	6149005	Identifier	vtop		6148976	0					
ANR	6149006	AdditiveExpression	vstack - 1		6148976	1		-			
ANR	6149007	Identifier	vstack		6148976	0					
ANR	6149008	PrimaryExpression	1		6148976	1					
ANR	6149009	ExpressionStatement	s1 -> pack_stack [ 0 ] = 0	3248:1:68421:68442	6148976	4	True				
ANR	6149010	AssignmentExpression	s1 -> pack_stack [ 0 ] = 0		6148976	0		=			
ANR	6149011	ArrayIndexing	s1 -> pack_stack [ 0 ]		6148976	0					
ANR	6149012	PtrMemberAccess	s1 -> pack_stack		6148976	0					
ANR	6149013	Identifier	s1		6148976	0					
ANR	6149014	Identifier	pack_stack		6148976	1					
ANR	6149015	PrimaryExpression	0		6148976	1					
ANR	6149016	PrimaryExpression	0		6148976	1					
ANR	6149017	ExpressionStatement	s1 -> pack_stack_ptr = s1 -> pack_stack	3249:1:68445:68480	6148976	5	True				
ANR	6149018	AssignmentExpression	s1 -> pack_stack_ptr = s1 -> pack_stack		6148976	0		=			
ANR	6149019	PtrMemberAccess	s1 -> pack_stack_ptr		6148976	0					
ANR	6149020	Identifier	s1		6148976	0					
ANR	6149021	Identifier	pack_stack_ptr		6148976	1					
ANR	6149022	PtrMemberAccess	s1 -> pack_stack		6148976	1					
ANR	6149023	Identifier	s1		6148976	0					
ANR	6149024	Identifier	pack_stack		6148976	1					
ANR	6149025	ReturnType	ST_FUNC void		6148976	1					
ANR	6149026	Identifier	preprocess_init		6148976	2					
ANR	6149027	ParameterList	TCCState * s1		6148976	3					
ANR	6149028	Parameter	TCCState * s1	3239:29:68166:68177	6148976	0	True				
ANR	6149029	ParameterType	TCCState *		6148976	0					
ANR	6149030	Identifier	s1		6148976	1					
ANR	6149031	CFGEntryNode	ENTRY		6148976		True				
ANR	6149032	CFGExitNode	EXIT		6148976		True				
ANR	6149033	Symbol	file -> ifdef_stack_ptr		6148976						
ANR	6149034	Symbol	s1 -> pack_stack		6148976						
ANR	6149035	Symbol	* s1		6148976						
ANR	6149036	Symbol	s1 -> include_stack_ptr		6148976						
ANR	6149037	Symbol	vtop		6148976						
ANR	6149038	Symbol	* * s1		6148976						
ANR	6149039	Symbol	* file		6148976						
ANR	6149040	Symbol	s1 -> include_stack		6148976						
ANR	6149041	Symbol	* s1 -> pack_stack		6148976						
ANR	6149042	Symbol	file		6148976						
ANR	6149043	Symbol	vstack		6148976						
ANR	6149044	Symbol	s1 -> ifdef_stack_ptr		6148976						
ANR	6149045	Symbol	s1 -> pack_stack_ptr		6148976						
ANR	6149046	Symbol	s1 -> ifdef_stack		6148976						
ANR	6149047	Symbol	s1		6148976						
ANR	6149048	Function	preprocess_new	3252:0:68485:68944							
ANR	6149049	FunctionDef	preprocess_new ()		6149048	0					
ANR	6149050	CompoundStatement		3253:0:68519:68944	6149048	0					
ANR	6149051	IdentifierDeclStatement	"int i , c ;"	3254:1:68522:68530	6149048	0	True				
ANR	6149052	IdentifierDecl	i		6149048	0					
ANR	6149053	IdentifierDeclType	int		6149048	0					
ANR	6149054	Identifier	i		6149048	1					
ANR	6149055	IdentifierDecl	c		6149048	1					
ANR	6149056	IdentifierDeclType	int		6149048	0					
ANR	6149057	Identifier	c		6149048	1					
ANR	6149058	IdentifierDeclStatement	"const char * p , * r ;"	3255:1:68533:68550	6149048	1	True				
ANR	6149059	IdentifierDecl	* p		6149048	0					
ANR	6149060	IdentifierDeclType	const char *		6149048	0					
ANR	6149061	Identifier	p		6149048	1					
ANR	6149062	IdentifierDecl	* r		6149048	1					
ANR	6149063	IdentifierDeclType	const char *		6149048	0					
ANR	6149064	Identifier	r		6149048	1					
ANR	6149065	ForStatement	for ( i = CH_EOF ; i < 256 ; i ++ )		6149048	2					
ANR	6149066	ForInit	i = CH_EOF ;	3258:6:68582:68592	6149048	0	True				
ANR	6149067	AssignmentExpression	i = CH_EOF		6149048	0		=			
ANR	6149068	Identifier	i		6149048	0					
ANR	6149069	Identifier	CH_EOF		6149048	1					
ANR	6149070	Condition	i < 256	3258:18:68594:68600	6149048	1	True				
ANR	6149071	RelationalExpression	i < 256		6149048	0		<			
ANR	6149072	Identifier	i		6149048	0					
ANR	6149073	PrimaryExpression	256		6149048	1					
ANR	6149074	PostIncDecOperationExpression	i ++	3258:27:68603:68605	6149048	2	True				
ANR	6149075	Identifier	i		6149048	0					
ANR	6149076	IncDec	++		6149048	1					
ANR	6149077	CompoundStatement		6:32:88:88	6149048	3					
ANR	6149078	ExpressionStatement	isidnum_table [ i - CH_EOF ] = isid ( i ) || isnum ( i )	3259:2:68612:68661	6149048	0	True				
ANR	6149079	AssignmentExpression	isidnum_table [ i - CH_EOF ] = isid ( i ) || isnum ( i )		6149048	0		=			
ANR	6149080	ArrayIndexing	isidnum_table [ i - CH_EOF ]		6149048	0					
ANR	6149081	Identifier	isidnum_table		6149048	0					
ANR	6149082	AdditiveExpression	i - CH_EOF		6149048	1		-			
ANR	6149083	Identifier	i		6149048	0					
ANR	6149084	Identifier	CH_EOF		6149048	1					
ANR	6149085	OrExpression	isid ( i ) || isnum ( i )		6149048	1		||			
ANR	6149086	CallExpression	isid ( i )		6149048	0					
ANR	6149087	Callee	isid		6149048	0					
ANR	6149088	Identifier	isid		6149048	0					
ANR	6149089	ArgumentList	i		6149048	1					
ANR	6149090	Argument	i		6149048	0					
ANR	6149091	Identifier	i		6149048	0					
ANR	6149092	CallExpression	isnum ( i )		6149048	1					
ANR	6149093	Callee	isnum		6149048	0					
ANR	6149094	Identifier	isnum		6149048	0					
ANR	6149095	ArgumentList	i		6149048	1					
ANR	6149096	Argument	i		6149048	0					
ANR	6149097	Identifier	i		6149048	0					
ANR	6149098	ExpressionStatement	table_ident = NULL	3263:1:68690:68708	6149048	3	True				
ANR	6149099	AssignmentExpression	table_ident = NULL		6149048	0		=			
ANR	6149100	Identifier	table_ident		6149048	0					
ANR	6149101	Identifier	NULL		6149048	1					
ANR	6149102	ExpressionStatement	"memset ( hash_ident , 0 , TOK_HASH_SIZE * sizeof ( TokenSym * ) )"	3264:1:68711:68769	6149048	4	True				
ANR	6149103	CallExpression	"memset ( hash_ident , 0 , TOK_HASH_SIZE * sizeof ( TokenSym * ) )"		6149048	0					
ANR	6149104	Callee	memset		6149048	0					
ANR	6149105	Identifier	memset		6149048	0					
ANR	6149106	ArgumentList	hash_ident		6149048	1					
ANR	6149107	Argument	hash_ident		6149048	0					
ANR	6149108	Identifier	hash_ident		6149048	0					
ANR	6149109	Argument	0		6149048	1					
ANR	6149110	PrimaryExpression	0		6149048	0					
ANR	6149111	Argument	TOK_HASH_SIZE * sizeof ( TokenSym * )		6149048	2					
ANR	6149112	MultiplicativeExpression	TOK_HASH_SIZE * sizeof ( TokenSym * )		6149048	0		*			
ANR	6149113	Identifier	TOK_HASH_SIZE		6149048	0					
ANR	6149114	SizeofExpression	sizeof ( TokenSym * )		6149048	1					
ANR	6149115	Sizeof	sizeof		6149048	0					
ANR	6149116	SizeofOperand	TokenSym *		6149048	1					
ANR	6149117	ExpressionStatement	tok_ident = TOK_IDENT	3266:1:68773:68794	6149048	5	True				
ANR	6149118	AssignmentExpression	tok_ident = TOK_IDENT		6149048	0		=			
ANR	6149119	Identifier	tok_ident		6149048	0					
ANR	6149120	Identifier	TOK_IDENT		6149048	1					
ANR	6149121	ExpressionStatement	p = tcc_keywords	3267:1:68797:68813	6149048	6	True				
ANR	6149122	AssignmentExpression	p = tcc_keywords		6149048	0		=			
ANR	6149123	Identifier	p		6149048	0					
ANR	6149124	Identifier	tcc_keywords		6149048	1					
ANR	6149125	WhileStatement	while ( * p )		6149048	7					
ANR	6149126	Condition	* p	3268:8:68823:68824	6149048	0	True				
ANR	6149127	UnaryOperationExpression	* p		6149048	0					
ANR	6149128	UnaryOperator	*		6149048	0					
ANR	6149129	Identifier	p		6149048	1					
ANR	6149130	CompoundStatement		16:12:307:307	6149048	1					
ANR	6149131	ExpressionStatement	r = p	3269:2:68831:68836	6149048	0	True				
ANR	6149132	AssignmentExpression	r = p		6149048	0		=			
ANR	6149133	Identifier	r		6149048	0					
ANR	6149134	Identifier	p		6149048	1					
ANR	6149135	ForStatement	for ( ; ; )		6149048	1					
ANR	6149136	CompoundStatement		18:11:329:329	6149048	0					
ANR	6149137	ExpressionStatement	c = * r ++	3271:3:68854:68862	6149048	0	True				
ANR	6149138	AssignmentExpression	c = * r ++		6149048	0		=			
ANR	6149139	Identifier	c		6149048	0					
ANR	6149140	UnaryOperationExpression	* r ++		6149048	1					
ANR	6149141	UnaryOperator	*		6149048	0					
ANR	6149142	PostIncDecOperationExpression	r ++		6149048	1					
ANR	6149143	Identifier	r		6149048	0					
ANR	6149144	IncDec	++		6149048	1					
ANR	6149145	IfStatement	if ( c == '\\0' )		6149048	1					
ANR	6149146	Condition	c == '\\0'	3272:7:68871:68879	6149048	0	True				
ANR	6149147	EqualityExpression	c == '\\0'		6149048	0		==			
ANR	6149148	Identifier	c		6149048	0					
ANR	6149149	PrimaryExpression	'\\0'		6149048	1					
ANR	6149150	CompoundStatement		20:18:362:362	6149048	1					
ANR	6149151	BreakStatement	break ;	3273:4:68888:68893	6149048	0	True				
ANR	6149152	ExpressionStatement	"tok_alloc ( p , r - p - 1 )"	3276:2:68906:68930	6149048	2	True				
ANR	6149153	CallExpression	"tok_alloc ( p , r - p - 1 )"		6149048	0					
ANR	6149154	Callee	tok_alloc		6149048	0					
ANR	6149155	Identifier	tok_alloc		6149048	0					
ANR	6149156	ArgumentList	p		6149048	1					
ANR	6149157	Argument	p		6149048	0					
ANR	6149158	Identifier	p		6149048	0					
ANR	6149159	Argument	r - p - 1		6149048	1					
ANR	6149160	AdditiveExpression	r - p - 1		6149048	0		-			
ANR	6149161	Identifier	r		6149048	0					
ANR	6149162	AdditiveExpression	p - 1		6149048	1		-			
ANR	6149163	Identifier	p		6149048	0					
ANR	6149164	PrimaryExpression	1		6149048	1					
ANR	6149165	ExpressionStatement	p = r	3277:2:68934:68939	6149048	3	True				
ANR	6149166	AssignmentExpression	p = r		6149048	0		=			
ANR	6149167	Identifier	p		6149048	0					
ANR	6149168	Identifier	r		6149048	1					
ANR	6149169	ReturnType	ST_FUNC void		6149048	1					
ANR	6149170	Identifier	preprocess_new		6149048	2					
ANR	6149171	ParameterList			6149048	3					
ANR	6149172	CFGEntryNode	ENTRY		6149048		True				
ANR	6149173	CFGExitNode	EXIT		6149048		True				
ANR	6149174	InfiniteForNode	true		6149048		True				
ANR	6149175	Symbol	isnum		6149048						
ANR	6149176	Symbol	c		6149048						
ANR	6149177	Symbol	NULL		6149048						
ANR	6149178	Symbol	TOK_HASH_SIZE		6149048						
ANR	6149179	Symbol	TOK_IDENT		6149048						
ANR	6149180	Symbol	* r ++		6149048						
ANR	6149181	Symbol	* CH_EOF		6149048						
ANR	6149182	Symbol	i		6149048						
ANR	6149183	Symbol	p		6149048						
ANR	6149184	Symbol	table_ident		6149048						
ANR	6149185	Symbol	r		6149048						
ANR	6149186	Symbol	* i		6149048						
ANR	6149187	Symbol	tok_ident		6149048						
ANR	6149188	Symbol	isid		6149048						
ANR	6149189	Symbol	CH_EOF		6149048						
ANR	6149190	Symbol	hash_ident		6149048						
ANR	6149191	Symbol	* p		6149048						
ANR	6149192	Symbol	* isidnum_table		6149048						
ANR	6149193	Symbol	isidnum_table		6149048						
ANR	6149194	Symbol	tcc_keywords		6149048						
ANR	6149195	Function	tcc_preprocess	3282:0:68981:70352							
ANR	6149196	FunctionDef	tcc_preprocess (TCCState * s1)		6149195	0					
ANR	6149197	CompoundStatement		3283:0:69022:70352	6149195	0					
ANR	6149198	IdentifierDeclStatement	Sym * define_start ;	3284:1:69025:69042	6149195	0	True				
ANR	6149199	IdentifierDecl	* define_start		6149195	0					
ANR	6149200	IdentifierDeclType	Sym *		6149195	0					
ANR	6149201	Identifier	define_start		6149195	1					
ANR	6149202	IdentifierDeclStatement	"BufferedFile * file_ref , * * iptr , * * iptr_new ;"	3286:1:69046:69088	6149195	1	True				
ANR	6149203	IdentifierDecl	* file_ref		6149195	0					
ANR	6149204	IdentifierDeclType	BufferedFile *		6149195	0					
ANR	6149205	Identifier	file_ref		6149195	1					
ANR	6149206	IdentifierDecl	* * iptr		6149195	1					
ANR	6149207	IdentifierDeclType	BufferedFile * *		6149195	0					
ANR	6149208	Identifier	iptr		6149195	1					
ANR	6149209	IdentifierDecl	* * iptr_new		6149195	2					
ANR	6149210	IdentifierDeclType	BufferedFile * *		6149195	0					
ANR	6149211	Identifier	iptr_new		6149195	1					
ANR	6149212	IdentifierDeclStatement	"int token_seen , line_ref , d ;"	3287:1:69091:69118	6149195	2	True				
ANR	6149213	IdentifierDecl	token_seen		6149195	0					
ANR	6149214	IdentifierDeclType	int		6149195	0					
ANR	6149215	Identifier	token_seen		6149195	1					
ANR	6149216	IdentifierDecl	line_ref		6149195	1					
ANR	6149217	IdentifierDeclType	int		6149195	0					
ANR	6149218	Identifier	line_ref		6149195	1					
ANR	6149219	IdentifierDecl	d		6149195	2					
ANR	6149220	IdentifierDeclType	int		6149195	0					
ANR	6149221	Identifier	d		6149195	1					
ANR	6149222	IdentifierDeclStatement	const char * s ;	3288:1:69121:69134	6149195	3	True				
ANR	6149223	IdentifierDecl	* s		6149195	0					
ANR	6149224	IdentifierDeclType	const char *		6149195	0					
ANR	6149225	Identifier	s		6149195	1					
ANR	6149226	ExpressionStatement	preprocess_init ( s1 )	3290:1:69138:69158	6149195	4	True				
ANR	6149227	CallExpression	preprocess_init ( s1 )		6149195	0					
ANR	6149228	Callee	preprocess_init		6149195	0					
ANR	6149229	Identifier	preprocess_init		6149195	0					
ANR	6149230	ArgumentList	s1		6149195	1					
ANR	6149231	Argument	s1		6149195	0					
ANR	6149232	Identifier	s1		6149195	0					
ANR	6149233	ExpressionStatement	define_start = define_stack	3291:1:69161:69188	6149195	5	True				
ANR	6149234	AssignmentExpression	define_start = define_stack		6149195	0		=			
ANR	6149235	Identifier	define_start		6149195	0					
ANR	6149236	Identifier	define_stack		6149195	1					
ANR	6149237	ExpressionStatement	ch = file -> buf_ptr [ 0 ]	3292:1:69191:69212	6149195	6	True				
ANR	6149238	AssignmentExpression	ch = file -> buf_ptr [ 0 ]		6149195	0		=			
ANR	6149239	Identifier	ch		6149195	0					
ANR	6149240	ArrayIndexing	file -> buf_ptr [ 0 ]		6149195	1					
ANR	6149241	PtrMemberAccess	file -> buf_ptr		6149195	0					
ANR	6149242	Identifier	file		6149195	0					
ANR	6149243	Identifier	buf_ptr		6149195	1					
ANR	6149244	PrimaryExpression	0		6149195	1					
ANR	6149245	ExpressionStatement	tok_flags = TOK_FLAG_BOL | TOK_FLAG_BOF	3293:1:69215:69254	6149195	7	True				
ANR	6149246	AssignmentExpression	tok_flags = TOK_FLAG_BOL | TOK_FLAG_BOF		6149195	0		=			
ANR	6149247	Identifier	tok_flags		6149195	0					
ANR	6149248	InclusiveOrExpression	TOK_FLAG_BOL | TOK_FLAG_BOF		6149195	1		|			
ANR	6149249	Identifier	TOK_FLAG_BOL		6149195	0					
ANR	6149250	Identifier	TOK_FLAG_BOF		6149195	1					
ANR	6149251	ExpressionStatement	parse_flags = PARSE_FLAG_ASM_COMMENTS | PARSE_FLAG_PREPROCESS | PARSE_FLAG_LINEFEED | PARSE_FLAG_SPACES	3294:1:69257:69368	6149195	8	True				
ANR	6149252	AssignmentExpression	parse_flags = PARSE_FLAG_ASM_COMMENTS | PARSE_FLAG_PREPROCESS | PARSE_FLAG_LINEFEED | PARSE_FLAG_SPACES		6149195	0		=			
ANR	6149253	Identifier	parse_flags		6149195	0					
ANR	6149254	InclusiveOrExpression	PARSE_FLAG_ASM_COMMENTS | PARSE_FLAG_PREPROCESS | PARSE_FLAG_LINEFEED | PARSE_FLAG_SPACES		6149195	1		|			
ANR	6149255	Identifier	PARSE_FLAG_ASM_COMMENTS		6149195	0					
ANR	6149256	InclusiveOrExpression	PARSE_FLAG_PREPROCESS | PARSE_FLAG_LINEFEED | PARSE_FLAG_SPACES		6149195	1		|			
ANR	6149257	Identifier	PARSE_FLAG_PREPROCESS		6149195	0					
ANR	6149258	InclusiveOrExpression	PARSE_FLAG_LINEFEED | PARSE_FLAG_SPACES		6149195	1		|			
ANR	6149259	Identifier	PARSE_FLAG_LINEFEED		6149195	0					
ANR	6149260	Identifier	PARSE_FLAG_SPACES		6149195	1					
ANR	6149261	ExpressionStatement	token_seen = 0	3296:1:69371:69385	6149195	9	True				
ANR	6149262	AssignmentExpression	token_seen = 0		6149195	0		=			
ANR	6149263	Identifier	token_seen		6149195	0					
ANR	6149264	PrimaryExpression	0		6149195	1					
ANR	6149265	ExpressionStatement	line_ref = 0	3297:1:69388:69400	6149195	10	True				
ANR	6149266	AssignmentExpression	line_ref = 0		6149195	0		=			
ANR	6149267	Identifier	line_ref		6149195	0					
ANR	6149268	PrimaryExpression	0		6149195	1					
ANR	6149269	ExpressionStatement	file_ref = NULL	3298:1:69403:69418	6149195	11	True				
ANR	6149270	AssignmentExpression	file_ref = NULL		6149195	0		=			
ANR	6149271	Identifier	file_ref		6149195	0					
ANR	6149272	Identifier	NULL		6149195	1					
ANR	6149273	ExpressionStatement	iptr = s1 -> include_stack_ptr	3299:1:69421:69449	6149195	12	True				
ANR	6149274	AssignmentExpression	iptr = s1 -> include_stack_ptr		6149195	0		=			
ANR	6149275	Identifier	iptr		6149195	0					
ANR	6149276	PtrMemberAccess	s1 -> include_stack_ptr		6149195	1					
ANR	6149277	Identifier	s1		6149195	0					
ANR	6149278	Identifier	include_stack_ptr		6149195	1					
ANR	6149279	WhileStatement	while ( tcc_nerr ( ) == 0 )		6149195	13					
ANR	6149280	Condition	tcc_nerr ( ) == 0	3301:8:69460:69475	6149195	0	True				
ANR	6149281	EqualityExpression	tcc_nerr ( ) == 0		6149195	0		==			
ANR	6149282	CallExpression	tcc_nerr ( )		6149195	0					
ANR	6149283	Callee	tcc_nerr		6149195	0					
ANR	6149284	Identifier	tcc_nerr		6149195	0					
ANR	6149285	ArgumentList			6149195	1					
ANR	6149286	PrimaryExpression	0		6149195	1					
ANR	6149287	CompoundStatement		19:26:455:455	6149195	1					
ANR	6149288	ExpressionStatement	next ( )	3302:2:69482:69489	6149195	0	True				
ANR	6149289	CallExpression	next ( )		6149195	0					
ANR	6149290	Callee	next		6149195	0					
ANR	6149291	Identifier	next		6149195	0					
ANR	6149292	ArgumentList			6149195	1					
ANR	6149293	IfStatement	if ( tok == TOK_EOF )		6149195	1					
ANR	6149294	Condition	tok == TOK_EOF	3303:6:69497:69510	6149195	0	True				
ANR	6149295	EqualityExpression	tok == TOK_EOF		6149195	0		==			
ANR	6149296	Identifier	tok		6149195	0					
ANR	6149297	Identifier	TOK_EOF		6149195	1					
ANR	6149298	CompoundStatement		21:22:490:490	6149195	1					
ANR	6149299	BreakStatement	break ;	3304:3:69518:69523	6149195	0	True				
ANR	6149300	ElseStatement	else		6149195	0					
ANR	6149301	IfStatement	if ( file != file_ref )		6149195	0					
ANR	6149302	Condition	file != file_ref	3305:13:69538:69553	6149195	0	True				
ANR	6149303	EqualityExpression	file != file_ref		6149195	0		!=			
ANR	6149304	Identifier	file		6149195	0					
ANR	6149305	Identifier	file_ref		6149195	1					
ANR	6149306	CompoundStatement		23:31:533:533	6149195	1					
ANR	6149307	GotoStatement	goto print_line ;	3306:3:69561:69576	6149195	0	True				
ANR	6149308	Identifier	print_line		6149195	0					
ANR	6149309	ElseStatement	else		6149195	0					
ANR	6149310	IfStatement	if ( tok == TOK_LINEFEED )		6149195	0					
ANR	6149311	Condition	tok == TOK_LINEFEED	3307:13:69591:69609	6149195	0	True				
ANR	6149312	EqualityExpression	tok == TOK_LINEFEED		6149195	0		==			
ANR	6149313	Identifier	tok		6149195	0					
ANR	6149314	Identifier	TOK_LINEFEED		6149195	1					
ANR	6149315	CompoundStatement		25:34:589:589	6149195	1					
ANR	6149316	IfStatement	if ( ! token_seen )		6149195	0					
ANR	6149317	Condition	! token_seen	3308:7:69621:69631	6149195	0	True				
ANR	6149318	UnaryOperationExpression	! token_seen		6149195	0					
ANR	6149319	UnaryOperator	!		6149195	0					
ANR	6149320	Identifier	token_seen		6149195	1					
ANR	6149321	CompoundStatement		26:20:611:611	6149195	1					
ANR	6149322	ContinueStatement	continue ;	3309:4:69640:69648	6149195	0	True				
ANR	6149323	ExpressionStatement	++ line_ref	3311:3:69658:69668	6149195	1	True				
ANR	6149324	UnaryExpression	++ line_ref		6149195	0					
ANR	6149325	IncDec	++		6149195	0					
ANR	6149326	Identifier	line_ref		6149195	1					
ANR	6149327	ExpressionStatement	token_seen = 0	3312:3:69673:69687	6149195	2	True				
ANR	6149328	AssignmentExpression	token_seen = 0		6149195	0		=			
ANR	6149329	Identifier	token_seen		6149195	0					
ANR	6149330	PrimaryExpression	0		6149195	1					
ANR	6149331	ElseStatement	else		6149195	0					
ANR	6149332	IfStatement	if ( ! token_seen )		6149195	0					
ANR	6149333	Condition	! token_seen	3313:13:69702:69712	6149195	0	True				
ANR	6149334	UnaryOperationExpression	! token_seen		6149195	0					
ANR	6149335	UnaryOperator	!		6149195	0					
ANR	6149336	Identifier	token_seen		6149195	1					
ANR	6149337	CompoundStatement		31:26:692:692	6149195	1					
ANR	6149338	ExpressionStatement	d = file -> line_num - line_ref	3314:3:69720:69749	6149195	0	True				
ANR	6149339	AssignmentExpression	d = file -> line_num - line_ref		6149195	0		=			
ANR	6149340	Identifier	d		6149195	0					
ANR	6149341	AdditiveExpression	file -> line_num - line_ref		6149195	1		-			
ANR	6149342	PtrMemberAccess	file -> line_num		6149195	0					
ANR	6149343	Identifier	file		6149195	0					
ANR	6149344	Identifier	line_num		6149195	1					
ANR	6149345	Identifier	line_ref		6149195	1					
ANR	6149346	IfStatement	if ( file != file_ref || d < 0 || d >= 8 )		6149195	1					
ANR	6149347	Condition	file != file_ref || d < 0 || d >= 8	3315:7:69758:69792	6149195	0	True				
ANR	6149348	OrExpression	file != file_ref || d < 0 || d >= 8		6149195	0		||			
ANR	6149349	EqualityExpression	file != file_ref		6149195	0		!=			
ANR	6149350	Identifier	file		6149195	0					
ANR	6149351	Identifier	file_ref		6149195	1					
ANR	6149352	OrExpression	d < 0 || d >= 8		6149195	1		||			
ANR	6149353	RelationalExpression	d < 0		6149195	0		<			
ANR	6149354	Identifier	d		6149195	0					
ANR	6149355	PrimaryExpression	0		6149195	1					
ANR	6149356	RelationalExpression	d >= 8		6149195	1		>=			
ANR	6149357	Identifier	d		6149195	0					
ANR	6149358	PrimaryExpression	8		6149195	1					
ANR	6149359	CompoundStatement		33:44:772:772	6149195	1					
ANR	6149360	Label	print_line :	3316:0:69797:69807	6149195	0	True				
ANR	6149361	Identifier	print_line		6149195	0					
ANR	6149362	ExpressionStatement	iptr_new = s1 -> include_stack_ptr	3317:4:69813:69845	6149195	1	True				
ANR	6149363	AssignmentExpression	iptr_new = s1 -> include_stack_ptr		6149195	0		=			
ANR	6149364	Identifier	iptr_new		6149195	0					
ANR	6149365	PtrMemberAccess	s1 -> include_stack_ptr		6149195	1					
ANR	6149366	Identifier	s1		6149195	0					
ANR	6149367	Identifier	include_stack_ptr		6149195	1					
ANR	6149368	ExpressionStatement	"s = iptr_new > iptr ? "" 1"" : iptr_new < iptr ? "" 2"" : iptr_new > s1 -> include_stack ? "" 3"" : """""	3318:4:69851:69971	6149195	2	True				
ANR	6149369	AssignmentExpression	"s = iptr_new > iptr ? "" 1"" : iptr_new < iptr ? "" 2"" : iptr_new > s1 -> include_stack ? "" 3"" : """""		6149195	0		=			
ANR	6149370	Identifier	s		6149195	0					
ANR	6149371	ConditionalExpression	"iptr_new > iptr ? "" 1"" : iptr_new < iptr ? "" 2"" : iptr_new > s1 -> include_stack ? "" 3"" : """""		6149195	1					
ANR	6149372	Condition	iptr_new > iptr		6149195	0					
ANR	6149373	RelationalExpression	iptr_new > iptr		6149195	0		>			
ANR	6149374	Identifier	iptr_new		6149195	0					
ANR	6149375	Identifier	iptr		6149195	1					
ANR	6149376	PrimaryExpression	""" 1"""		6149195	1					
ANR	6149377	ConditionalExpression	"iptr_new < iptr ? "" 2"" : iptr_new > s1 -> include_stack ? "" 3"" : """""		6149195	2					
ANR	6149378	Condition	iptr_new < iptr		6149195	0					
ANR	6149379	RelationalExpression	iptr_new < iptr		6149195	0		<			
ANR	6149380	Identifier	iptr_new		6149195	0					
ANR	6149381	Identifier	iptr		6149195	1					
ANR	6149382	PrimaryExpression	""" 2"""		6149195	1					
ANR	6149383	ConditionalExpression	"iptr_new > s1 -> include_stack ? "" 3"" : """""		6149195	2					
ANR	6149384	Condition	iptr_new > s1 -> include_stack		6149195	0					
ANR	6149385	RelationalExpression	iptr_new > s1 -> include_stack		6149195	0		>			
ANR	6149386	Identifier	iptr_new		6149195	0					
ANR	6149387	PtrMemberAccess	s1 -> include_stack		6149195	1					
ANR	6149388	Identifier	s1		6149195	0					
ANR	6149389	Identifier	include_stack		6149195	1					
ANR	6149390	PrimaryExpression	""" 3"""		6149195	1					
ANR	6149391	PrimaryExpression	""""""		6149195	2					
ANR	6149392	ExpressionStatement	iptr = iptr_new	3323:4:69977:69992	6149195	3	True				
ANR	6149393	AssignmentExpression	iptr = iptr_new		6149195	0		=			
ANR	6149394	Identifier	iptr		6149195	0					
ANR	6149395	Identifier	iptr_new		6149195	1					
ANR	6149396	ExpressionStatement	"fprintf ( s1 -> ppfp , ""# %d \\""%s\\""%s\\n"" , file -> line_num , file -> filename , s )"	3324:4:69998:70070	6149195	4	True				
ANR	6149397	CallExpression	"fprintf ( s1 -> ppfp , ""# %d \\""%s\\""%s\\n"" , file -> line_num , file -> filename , s )"		6149195	0					
ANR	6149398	Callee	fprintf		6149195	0					
ANR	6149399	Identifier	fprintf		6149195	0					
ANR	6149400	ArgumentList	s1 -> ppfp		6149195	1					
ANR	6149401	Argument	s1 -> ppfp		6149195	0					
ANR	6149402	PtrMemberAccess	s1 -> ppfp		6149195	0					
ANR	6149403	Identifier	s1		6149195	0					
ANR	6149404	Identifier	ppfp		6149195	1					
ANR	6149405	Argument	"""# %d \\""%s\\""%s\\n"""		6149195	1					
ANR	6149406	PrimaryExpression	"""# %d \\""%s\\""%s\\n"""		6149195	0					
ANR	6149407	Argument	file -> line_num		6149195	2					
ANR	6149408	PtrMemberAccess	file -> line_num		6149195	0					
ANR	6149409	Identifier	file		6149195	0					
ANR	6149410	Identifier	line_num		6149195	1					
ANR	6149411	Argument	file -> filename		6149195	3					
ANR	6149412	PtrMemberAccess	file -> filename		6149195	0					
ANR	6149413	Identifier	file		6149195	0					
ANR	6149414	Identifier	filename		6149195	1					
ANR	6149415	Argument	s		6149195	4					
ANR	6149416	Identifier	s		6149195	0					
ANR	6149417	ElseStatement	else		6149195	0					
ANR	6149418	CompoundStatement		43:10:1059:1059	6149195	0					
ANR	6149419	WhileStatement	while ( d )		6149195	0					
ANR	6149420	Condition	d	3326:11:70095:70095	6149195	0	True				
ANR	6149421	Identifier	d		6149195	0					
ANR	6149422	ExpressionStatement	"fputs ( ""\\n"" , s1 -> ppfp ) , -- d"	3327:5:70103:70130	6149195	1	True				
ANR	6149423	Expression	"fputs ( ""\\n"" , s1 -> ppfp ) , -- d"		6149195	0					
ANR	6149424	CallExpression	"fputs ( ""\\n"" , s1 -> ppfp )"		6149195	0					
ANR	6149425	Callee	fputs		6149195	0					
ANR	6149426	Identifier	fputs		6149195	0					
ANR	6149427	ArgumentList	"""\\n"""		6149195	1					
ANR	6149428	Argument	"""\\n"""		6149195	0					
ANR	6149429	PrimaryExpression	"""\\n"""		6149195	0					
ANR	6149430	Argument	s1 -> ppfp		6149195	1					
ANR	6149431	PtrMemberAccess	s1 -> ppfp		6149195	0					
ANR	6149432	Identifier	s1		6149195	0					
ANR	6149433	Identifier	ppfp		6149195	1					
ANR	6149434	UnaryExpression	-- d		6149195	1					
ANR	6149435	IncDec	--		6149195	0					
ANR	6149436	Identifier	d		6149195	1					
ANR	6149437	ExpressionStatement	line_ref = ( file_ref = file ) -> line_num	3329:3:70140:70178	6149195	2	True				
ANR	6149438	AssignmentExpression	line_ref = ( file_ref = file ) -> line_num		6149195	0		=			
ANR	6149439	Identifier	line_ref		6149195	0					
ANR	6149440	PtrMemberAccess	( file_ref = file ) -> line_num		6149195	1					
ANR	6149441	AssignmentExpression	file_ref = file		6149195	0		=			
ANR	6149442	Identifier	file_ref		6149195	0					
ANR	6149443	Identifier	file		6149195	1					
ANR	6149444	Identifier	line_num		6149195	1					
ANR	6149445	ExpressionStatement	token_seen = tok != TOK_LINEFEED	3330:3:70183:70215	6149195	3	True				
ANR	6149446	AssignmentExpression	token_seen = tok != TOK_LINEFEED		6149195	0		=			
ANR	6149447	Identifier	token_seen		6149195	0					
ANR	6149448	EqualityExpression	tok != TOK_LINEFEED		6149195	1		!=			
ANR	6149449	Identifier	tok		6149195	0					
ANR	6149450	Identifier	TOK_LINEFEED		6149195	1					
ANR	6149451	IfStatement	if ( ! token_seen )		6149195	4					
ANR	6149452	Condition	! token_seen	3331:7:70224:70234	6149195	0	True				
ANR	6149453	UnaryOperationExpression	! token_seen		6149195	0					
ANR	6149454	UnaryOperator	!		6149195	0					
ANR	6149455	Identifier	token_seen		6149195	1					
ANR	6149456	CompoundStatement		49:20:1214:1214	6149195	1					
ANR	6149457	ContinueStatement	continue ;	3332:4:70243:70251	6149195	0	True				
ANR	6149458	ExpressionStatement	"fputs ( get_tok_str ( tok , & tokc ) , s1 -> ppfp )"	3335:2:70264:70306	6149195	2	True				
ANR	6149459	CallExpression	"fputs ( get_tok_str ( tok , & tokc ) , s1 -> ppfp )"		6149195	0					
ANR	6149460	Callee	fputs		6149195	0					
ANR	6149461	Identifier	fputs		6149195	0					
ANR	6149462	ArgumentList	"get_tok_str ( tok , & tokc )"		6149195	1					
ANR	6149463	Argument	"get_tok_str ( tok , & tokc )"		6149195	0					
ANR	6149464	CallExpression	"get_tok_str ( tok , & tokc )"		6149195	0					
ANR	6149465	Callee	get_tok_str		6149195	0					
ANR	6149466	Identifier	get_tok_str		6149195	0					
ANR	6149467	ArgumentList	tok		6149195	1					
ANR	6149468	Argument	tok		6149195	0					
ANR	6149469	Identifier	tok		6149195	0					
ANR	6149470	Argument	& tokc		6149195	1					
ANR	6149471	UnaryOperationExpression	& tokc		6149195	0					
ANR	6149472	UnaryOperator	&		6149195	0					
ANR	6149473	Identifier	tokc		6149195	1					
ANR	6149474	Argument	s1 -> ppfp		6149195	1					
ANR	6149475	PtrMemberAccess	s1 -> ppfp		6149195	0					
ANR	6149476	Identifier	s1		6149195	0					
ANR	6149477	Identifier	ppfp		6149195	1					
ANR	6149478	ExpressionStatement	free_defines ( define_start )	3337:1:70312:70339	6149195	14	True				
ANR	6149479	CallExpression	free_defines ( define_start )		6149195	0					
ANR	6149480	Callee	free_defines		6149195	0					
ANR	6149481	Identifier	free_defines		6149195	0					
ANR	6149482	ArgumentList	define_start		6149195	1					
ANR	6149483	Argument	define_start		6149195	0					
ANR	6149484	Identifier	define_start		6149195	0					
ANR	6149485	ReturnStatement	return 0 ;	3338:1:70342:70350	6149195	15	True				
ANR	6149486	PrimaryExpression	0		6149195	0					
ANR	6149487	ReturnType	ST_FUNC int		6149195	1					
ANR	6149488	Identifier	tcc_preprocess		6149195	2					
ANR	6149489	ParameterList	TCCState * s1		6149195	3					
ANR	6149490	Parameter	TCCState * s1	3282:27:69008:69019	6149195	0	True				
ANR	6149491	ParameterType	TCCState *		6149195	0					
ANR	6149492	Identifier	s1		6149195	1					
ANR	6149493	CFGEntryNode	ENTRY		6149195		True				
ANR	6149494	CFGExitNode	EXIT		6149195		True				
ANR	6149495	Symbol	PARSE_FLAG_LINEFEED		6149195						
ANR	6149496	Symbol	get_tok_str		6149195						
ANR	6149497	Symbol	* file -> buf_ptr		6149195						
ANR	6149498	Symbol	TOK_FLAG_BOF		6149195						
ANR	6149499	Symbol	* s1		6149195						
ANR	6149500	Symbol	s1 -> include_stack_ptr		6149195						
ANR	6149501	Symbol	TOK_FLAG_BOL		6149195						
ANR	6149502	Symbol	token_seen		6149195						
ANR	6149503	Symbol	TOK_LINEFEED		6149195						
ANR	6149504	Symbol	PARSE_FLAG_ASM_COMMENTS		6149195						
ANR	6149505	Symbol	tok		6149195						
ANR	6149506	Symbol	file		6149195						
ANR	6149507	Symbol	tok_flags		6149195						
ANR	6149508	Symbol	iptr		6149195						
ANR	6149509	Symbol	line_ref		6149195						
ANR	6149510	Symbol	file -> buf_ptr		6149195						
ANR	6149511	Symbol	file -> line_num		6149195						
ANR	6149512	Symbol	& tokc		6149195						
ANR	6149513	Symbol	s1		6149195						
ANR	6149514	Symbol	file -> filename		6149195						
ANR	6149515	Symbol	NULL		6149195						
ANR	6149516	Symbol	d		6149195						
ANR	6149517	Symbol	ch		6149195						
ANR	6149518	Symbol	PARSE_FLAG_PREPROCESS		6149195						
ANR	6149519	Symbol	( file_ref = file ) -> line_num		6149195						
ANR	6149520	Symbol	TOK_EOF		6149195						
ANR	6149521	Symbol	* file		6149195						
ANR	6149522	Symbol	tcc_nerr		6149195						
ANR	6149523	Symbol	s1 -> ppfp		6149195						
ANR	6149524	Symbol	define_start		6149195						
ANR	6149525	Symbol	s1 -> include_stack		6149195						
ANR	6149526	Symbol	s		6149195						
ANR	6149527	Symbol	define_stack		6149195						
ANR	6149528	Symbol	PARSE_FLAG_SPACES		6149195						
ANR	6149529	Symbol	iptr_new		6149195						
ANR	6149530	Symbol	file_ref		6149195						
ANR	6149531	Symbol	* * file		6149195						
ANR	6149532	Symbol	parse_flags		6149195						
