command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6652202	File	data/converged/CVE-2019-16718~_radare2/zutil.c								
ANR	6652203	Function	zlibVersion	27:13:990:1039							
ANR	6652204	FunctionDef	zlibVersion ()		6652203	0					
ANR	6652205	CompoundStatement		28:0:1012:1039	6652203	0					
ANR	6652206	ReturnStatement	return ZLIB_VERSION ;	29:4:1018:1037	6652203	0	True				
ANR	6652207	Identifier	ZLIB_VERSION		6652203	0					
ANR	6652208	ReturnType	ZEXPORT		6652203	1					
ANR	6652209	Identifier	zlibVersion		6652203	2					
ANR	6652210	ParameterList			6652203	3					
ANR	6652211	CFGEntryNode	ENTRY		6652203		True				
ANR	6652212	CFGExitNode	EXIT		6652203		True				
ANR	6652213	Symbol	ZLIB_VERSION		6652203						
ANR	6652214	Function	zlibCompileFlags	32:0:1042:2793							
ANR	6652215	FunctionDef	zlibCompileFlags ()		6652214	0					
ANR	6652216	CompoundStatement		33:0:1075:2793	6652214	0					
ANR	6652217	IdentifierDeclStatement	uLong flags ;	34:4:1081:1092	6652214	0	True				
ANR	6652218	IdentifierDecl	flags		6652214	0					
ANR	6652219	IdentifierDeclType	uLong		6652214	0					
ANR	6652220	Identifier	flags		6652214	1					
ANR	6652221	ExpressionStatement	flags = 0	36:4:1099:1108	6652214	1	True				
ANR	6652222	AssignmentExpression	flags = 0		6652214	0		=			
ANR	6652223	Identifier	flags		6652214	0					
ANR	6652224	PrimaryExpression	0		6652214	1					
ANR	6652225	SwitchStatement	switch ( ( int ) ( sizeof ( uInt ) ) )		6652214	2					
ANR	6652226	Condition	( int ) ( sizeof ( uInt ) )	37:12:1122:1140	6652214	0	True				
ANR	6652227	CastExpression	( int ) ( sizeof ( uInt ) )		6652214	0					
ANR	6652228	CastTarget	int		6652214	0					
ANR	6652229	SizeofExpression	sizeof ( uInt )		6652214	1					
ANR	6652230	Sizeof	sizeof		6652214	0					
ANR	6652231	SizeofOperand	uInt		6652214	1					
ANR	6652232	CompoundStatement		5:33:67:67	6652214	1					
ANR	6652233	Label	case 2 :	38:4:1149:1155	6652214	0	True				
ANR	6652234	BreakStatement	break ;	38:16:1161:1166	6652214	1	True				
ANR	6652235	Label	case 4 :	39:4:1172:1178	6652214	2	True				
ANR	6652236	ExpressionStatement	flags += 1	39:16:1184:1194	6652214	3	True				
ANR	6652237	AssignmentExpression	flags += 1		6652214	0		+=			
ANR	6652238	Identifier	flags		6652214	0					
ANR	6652239	PrimaryExpression	1		6652214	1					
ANR	6652240	BreakStatement	break ;	39:32:1200:1205	6652214	4	True				
ANR	6652241	Label	case 8 :	40:4:1211:1217	6652214	5	True				
ANR	6652242	ExpressionStatement	flags += 2	40:16:1223:1233	6652214	6	True				
ANR	6652243	AssignmentExpression	flags += 2		6652214	0		+=			
ANR	6652244	Identifier	flags		6652214	0					
ANR	6652245	PrimaryExpression	2		6652214	1					
ANR	6652246	BreakStatement	break ;	40:32:1239:1244	6652214	7	True				
ANR	6652247	Label	default :	41:4:1250:1257	6652214	8	True				
ANR	6652248	Identifier	default		6652214	0					
ANR	6652249	ExpressionStatement	flags += 3	41:16:1262:1272	6652214	9	True				
ANR	6652250	AssignmentExpression	flags += 3		6652214	0		+=			
ANR	6652251	Identifier	flags		6652214	0					
ANR	6652252	PrimaryExpression	3		6652214	1					
ANR	6652253	SwitchStatement	switch ( ( int ) ( sizeof ( uLong ) ) )		6652214	3					
ANR	6652254	Condition	( int ) ( sizeof ( uLong ) )	43:12:1292:1311	6652214	0	True				
ANR	6652255	CastExpression	( int ) ( sizeof ( uLong ) )		6652214	0					
ANR	6652256	CastTarget	int		6652214	0					
ANR	6652257	SizeofExpression	sizeof ( uLong )		6652214	1					
ANR	6652258	Sizeof	sizeof		6652214	0					
ANR	6652259	SizeofOperand	uLong		6652214	1					
ANR	6652260	CompoundStatement		11:34:238:238	6652214	1					
ANR	6652261	Label	case 2 :	44:4:1320:1326	6652214	0	True				
ANR	6652262	BreakStatement	break ;	44:16:1332:1337	6652214	1	True				
ANR	6652263	Label	case 4 :	45:4:1343:1349	6652214	2	True				
ANR	6652264	ExpressionStatement	flags += 1 << 2	45:16:1355:1370	6652214	3	True				
ANR	6652265	AssignmentExpression	flags += 1 << 2		6652214	0		+=			
ANR	6652266	Identifier	flags		6652214	0					
ANR	6652267	ShiftExpression	1 << 2		6652214	1		<<			
ANR	6652268	PrimaryExpression	1		6652214	0					
ANR	6652269	PrimaryExpression	2		6652214	1					
ANR	6652270	BreakStatement	break ;	45:40:1379:1384	6652214	4	True				
ANR	6652271	Label	case 8 :	46:4:1390:1396	6652214	5	True				
ANR	6652272	ExpressionStatement	flags += 2 << 2	46:16:1402:1417	6652214	6	True				
ANR	6652273	AssignmentExpression	flags += 2 << 2		6652214	0		+=			
ANR	6652274	Identifier	flags		6652214	0					
ANR	6652275	ShiftExpression	2 << 2		6652214	1		<<			
ANR	6652276	PrimaryExpression	2		6652214	0					
ANR	6652277	PrimaryExpression	2		6652214	1					
ANR	6652278	BreakStatement	break ;	46:40:1426:1431	6652214	7	True				
ANR	6652279	Label	default :	47:4:1437:1444	6652214	8	True				
ANR	6652280	Identifier	default		6652214	0					
ANR	6652281	ExpressionStatement	flags += 3 << 2	47:16:1449:1464	6652214	9	True				
ANR	6652282	AssignmentExpression	flags += 3 << 2		6652214	0		+=			
ANR	6652283	Identifier	flags		6652214	0					
ANR	6652284	ShiftExpression	3 << 2		6652214	1		<<			
ANR	6652285	PrimaryExpression	3		6652214	0					
ANR	6652286	PrimaryExpression	2		6652214	1					
ANR	6652287	SwitchStatement	switch ( ( int ) ( sizeof ( voidpf ) ) )		6652214	4					
ANR	6652288	Condition	( int ) ( sizeof ( voidpf ) )	49:12:1484:1504	6652214	0	True				
ANR	6652289	CastExpression	( int ) ( sizeof ( voidpf ) )		6652214	0					
ANR	6652290	CastTarget	int		6652214	0					
ANR	6652291	SizeofExpression	sizeof ( voidpf )		6652214	1					
ANR	6652292	Sizeof	sizeof		6652214	0					
ANR	6652293	SizeofOperand	voidpf		6652214	1					
ANR	6652294	CompoundStatement		17:35:431:431	6652214	1					
ANR	6652295	Label	case 2 :	50:4:1513:1519	6652214	0	True				
ANR	6652296	BreakStatement	break ;	50:16:1525:1530	6652214	1	True				
ANR	6652297	Label	case 4 :	51:4:1536:1542	6652214	2	True				
ANR	6652298	ExpressionStatement	flags += 1 << 4	51:16:1548:1563	6652214	3	True				
ANR	6652299	AssignmentExpression	flags += 1 << 4		6652214	0		+=			
ANR	6652300	Identifier	flags		6652214	0					
ANR	6652301	ShiftExpression	1 << 4		6652214	1		<<			
ANR	6652302	PrimaryExpression	1		6652214	0					
ANR	6652303	PrimaryExpression	4		6652214	1					
ANR	6652304	BreakStatement	break ;	51:40:1572:1577	6652214	4	True				
ANR	6652305	Label	case 8 :	52:4:1583:1589	6652214	5	True				
ANR	6652306	ExpressionStatement	flags += 2 << 4	52:16:1595:1610	6652214	6	True				
ANR	6652307	AssignmentExpression	flags += 2 << 4		6652214	0		+=			
ANR	6652308	Identifier	flags		6652214	0					
ANR	6652309	ShiftExpression	2 << 4		6652214	1		<<			
ANR	6652310	PrimaryExpression	2		6652214	0					
ANR	6652311	PrimaryExpression	4		6652214	1					
ANR	6652312	BreakStatement	break ;	52:40:1619:1624	6652214	7	True				
ANR	6652313	Label	default :	53:4:1630:1637	6652214	8	True				
ANR	6652314	Identifier	default		6652214	0					
ANR	6652315	ExpressionStatement	flags += 3 << 4	53:16:1642:1657	6652214	9	True				
ANR	6652316	AssignmentExpression	flags += 3 << 4		6652214	0		+=			
ANR	6652317	Identifier	flags		6652214	0					
ANR	6652318	ShiftExpression	3 << 4		6652214	1		<<			
ANR	6652319	PrimaryExpression	3		6652214	0					
ANR	6652320	PrimaryExpression	4		6652214	1					
ANR	6652321	SwitchStatement	switch ( ( int ) ( sizeof ( z_off_t ) ) )		6652214	5					
ANR	6652322	Condition	( int ) ( sizeof ( z_off_t ) )	55:12:1677:1698	6652214	0	True				
ANR	6652323	CastExpression	( int ) ( sizeof ( z_off_t ) )		6652214	0					
ANR	6652324	CastTarget	int		6652214	0					
ANR	6652325	SizeofExpression	sizeof ( z_off_t )		6652214	1					
ANR	6652326	Sizeof	sizeof		6652214	0					
ANR	6652327	SizeofOperand	z_off_t		6652214	1					
ANR	6652328	CompoundStatement		23:36:625:625	6652214	1					
ANR	6652329	Label	case 2 :	56:4:1707:1713	6652214	0	True				
ANR	6652330	BreakStatement	break ;	56:16:1719:1724	6652214	1	True				
ANR	6652331	Label	case 4 :	57:4:1730:1736	6652214	2	True				
ANR	6652332	ExpressionStatement	flags += 1 << 6	57:16:1742:1757	6652214	3	True				
ANR	6652333	AssignmentExpression	flags += 1 << 6		6652214	0		+=			
ANR	6652334	Identifier	flags		6652214	0					
ANR	6652335	ShiftExpression	1 << 6		6652214	1		<<			
ANR	6652336	PrimaryExpression	1		6652214	0					
ANR	6652337	PrimaryExpression	6		6652214	1					
ANR	6652338	BreakStatement	break ;	57:40:1766:1771	6652214	4	True				
ANR	6652339	Label	case 8 :	58:4:1777:1783	6652214	5	True				
ANR	6652340	ExpressionStatement	flags += 2 << 6	58:16:1789:1804	6652214	6	True				
ANR	6652341	AssignmentExpression	flags += 2 << 6		6652214	0		+=			
ANR	6652342	Identifier	flags		6652214	0					
ANR	6652343	ShiftExpression	2 << 6		6652214	1		<<			
ANR	6652344	PrimaryExpression	2		6652214	0					
ANR	6652345	PrimaryExpression	6		6652214	1					
ANR	6652346	BreakStatement	break ;	58:40:1813:1818	6652214	7	True				
ANR	6652347	Label	default :	59:4:1824:1831	6652214	8	True				
ANR	6652348	Identifier	default		6652214	0					
ANR	6652349	ExpressionStatement	flags += 3 << 6	59:16:1836:1851	6652214	9	True				
ANR	6652350	AssignmentExpression	flags += 3 << 6		6652214	0		+=			
ANR	6652351	Identifier	flags		6652214	0					
ANR	6652352	ShiftExpression	3 << 6		6652214	1		<<			
ANR	6652353	PrimaryExpression	3		6652214	0					
ANR	6652354	PrimaryExpression	6		6652214	1					
ANR	6652355	ExpressionStatement	flags += 1 << 8	62:4:1881:1896	6652214	6	True				
ANR	6652356	AssignmentExpression	flags += 1 << 8		6652214	0		+=			
ANR	6652357	Identifier	flags		6652214	0					
ANR	6652358	ShiftExpression	1 << 8		6652214	1		<<			
ANR	6652359	PrimaryExpression	1		6652214	0					
ANR	6652360	PrimaryExpression	8		6652214	1					
ANR	6652361	ExpressionStatement	flags += 1 << 9	65:4:1946:1961	6652214	7	True				
ANR	6652362	AssignmentExpression	flags += 1 << 9		6652214	0		+=			
ANR	6652363	Identifier	flags		6652214	0					
ANR	6652364	ShiftExpression	1 << 9		6652214	1		<<			
ANR	6652365	PrimaryExpression	1		6652214	0					
ANR	6652366	PrimaryExpression	9		6652214	1					
ANR	6652367	ExpressionStatement	flags += 1 << 10	68:4:1993:2009	6652214	8	True				
ANR	6652368	AssignmentExpression	flags += 1 << 10		6652214	0		+=			
ANR	6652369	Identifier	flags		6652214	0					
ANR	6652370	ShiftExpression	1 << 10		6652214	1		<<			
ANR	6652371	PrimaryExpression	1		6652214	0					
ANR	6652372	PrimaryExpression	10		6652214	1					
ANR	6652373	ExpressionStatement	flags += 1 << 12	71:4:2040:2056	6652214	9	True				
ANR	6652374	AssignmentExpression	flags += 1 << 12		6652214	0		+=			
ANR	6652375	Identifier	flags		6652214	0					
ANR	6652376	ShiftExpression	1 << 12		6652214	1		<<			
ANR	6652377	PrimaryExpression	1		6652214	0					
ANR	6652378	PrimaryExpression	12		6652214	1					
ANR	6652379	ExpressionStatement	flags += 1 << 13	74:4:2094:2110	6652214	10	True				
ANR	6652380	AssignmentExpression	flags += 1 << 13		6652214	0		+=			
ANR	6652381	Identifier	flags		6652214	0					
ANR	6652382	ShiftExpression	1 << 13		6652214	1		<<			
ANR	6652383	PrimaryExpression	1		6652214	0					
ANR	6652384	PrimaryExpression	13		6652214	1					
ANR	6652385	ExpressionStatement	flags += 1L << 16	77:4:2144:2161	6652214	11	True				
ANR	6652386	AssignmentExpression	flags += 1L << 16		6652214	0		+=			
ANR	6652387	Identifier	flags		6652214	0					
ANR	6652388	ShiftExpression	1L << 16		6652214	1		<<			
ANR	6652389	PrimaryExpression	1L		6652214	0					
ANR	6652390	PrimaryExpression	16		6652214	1					
ANR	6652391	ExpressionStatement	flags += 1L << 17	80:4:2189:2206	6652214	12	True				
ANR	6652392	AssignmentExpression	flags += 1L << 17		6652214	0		+=			
ANR	6652393	Identifier	flags		6652214	0					
ANR	6652394	ShiftExpression	1L << 17		6652214	1		<<			
ANR	6652395	PrimaryExpression	1L		6652214	0					
ANR	6652396	PrimaryExpression	17		6652214	1					
ANR	6652397	ExpressionStatement	flags += 1L << 20	83:4:2247:2264	6652214	13	True				
ANR	6652398	AssignmentExpression	flags += 1L << 20		6652214	0		+=			
ANR	6652399	Identifier	flags		6652214	0					
ANR	6652400	ShiftExpression	1L << 20		6652214	1		<<			
ANR	6652401	PrimaryExpression	1L		6652214	0					
ANR	6652402	PrimaryExpression	20		6652214	1					
ANR	6652403	ExpressionStatement	flags += 1L << 21	86:4:2292:2309	6652214	14	True				
ANR	6652404	AssignmentExpression	flags += 1L << 21		6652214	0		+=			
ANR	6652405	Identifier	flags		6652214	0					
ANR	6652406	ShiftExpression	1L << 21		6652214	1		<<			
ANR	6652407	PrimaryExpression	1L		6652214	0					
ANR	6652408	PrimaryExpression	21		6652214	1					
ANR	6652409	Statement	ifdef	89:3:2367:2371	6652214	15	True				
ANR	6652410	Statement	NO_vsnprintf	89:9:2373:2384	6652214	16	True				
ANR	6652411	ExpressionStatement	flags += 1L << 25	90:4:2390:2407	6652214	17	True				
ANR	6652412	AssignmentExpression	flags += 1L << 25		6652214	0		+=			
ANR	6652413	Identifier	flags		6652214	0					
ANR	6652414	ShiftExpression	1L << 25		6652214	1		<<			
ANR	6652415	PrimaryExpression	1L		6652214	0					
ANR	6652416	PrimaryExpression	25		6652214	1					
ANR	6652417	Statement	ifdef	91:5:2414:2418	6652214	18	True				
ANR	6652418	Statement	HAS_vsprintf_void	91:11:2420:2436	6652214	19	True				
ANR	6652419	ExpressionStatement	flags += 1L << 26	92:4:2442:2459	6652214	20	True				
ANR	6652420	AssignmentExpression	flags += 1L << 26		6652214	0		+=			
ANR	6652421	Identifier	flags		6652214	0					
ANR	6652422	ShiftExpression	1L << 26		6652214	1		<<			
ANR	6652423	PrimaryExpression	1L		6652214	0					
ANR	6652424	PrimaryExpression	26		6652214	1					
ANR	6652425	Statement	endif	93:5:2466:2470	6652214	21	True				
ANR	6652426	ReturnType	uLong ZEXPORT		6652214	1					
ANR	6652427	Identifier	zlibCompileFlags		6652214	2					
ANR	6652428	ParameterList			6652214	3					
ANR	6652429	CFGEntryNode	ENTRY		6652214		True				
ANR	6652430	CFGExitNode	EXIT		6652214		True				
ANR	6652431	Symbol	flags		6652214						
ANR	6652432	DeclStmt									
ANR	6652433	Decl							endif int ZLIB_INTERNAL	endif int ZLIB_INTERNAL	z_verbose
ANR	6652434	DeclStmt									
ANR	6652435	Decl							char	char *	m
ANR	6652436	DeclStmt									
ANR	6652437	Decl							int	int	err
ANR	6652438	DeclStmt									
ANR	6652439	Decl							int	int	errno
ANR	6652440	DeclStmt									
ANR	6652441	Decl							Bytef	Bytef *	dest
ANR	6652442	DeclStmt									
ANR	6652443	Decl							const Bytef	const Bytef *	source
ANR	6652444	DeclStmt									
ANR	6652445	Decl							uInt	uInt	len
ANR	6652446	DeclStmt									
ANR	6652447	Decl							const Bytef	const Bytef *	s1
ANR	6652448	DeclStmt									
ANR	6652449	Decl							const Bytef	const Bytef *	s2
ANR	6652450	DeclStmt									
ANR	6652451	Decl							uInt	uInt	len
ANR	6652452	DeclStmt									
ANR	6652453	Decl							uInt	uInt	j
ANR	6652454	DeclStmt									
ANR	6652455	Decl							Bytef	Bytef *	dest
ANR	6652456	DeclStmt									
ANR	6652457	Decl							uInt	uInt	len
ANR	6652458	DeclStmt									
ANR	6652459	Decl							local int	local int	next_ptr
ANR	6652460	ClassDef	ptr_table_s	204:8:4539:4611							
ANR	6652461	DeclStmt									
ANR	6652462	Decl							voidpf	voidpf	org_ptr
ANR	6652463	DeclStmt									
ANR	6652464	Decl							voidpf	voidpf	new_ptr
ANR	6652465	DeclStmt									
ANR	6652466	Decl							ptr_table_s	ptr_table_s	ptr_table
ANR	6652467	DeclStmt									
ANR	6652468	Decl							local ptr_table	local ptr_table [ MAX_PTR ]	table
ANR	6652469	Function	zcalloc	217:0:4989:5707							
ANR	6652470	FunctionDef	"zcalloc (voidpf opaque , unsigned items , unsigned size)"		6652469	0					
ANR	6652471	CompoundStatement		218:0:5065:5707	6652469	0					
ANR	6652472	IdentifierDeclStatement	voidpf buf ;	219:4:5071:5081	6652469	0	True				
ANR	6652473	IdentifierDecl	buf		6652469	0					
ANR	6652474	IdentifierDeclType	voidpf		6652469	0					
ANR	6652475	Identifier	buf		6652469	1					
ANR	6652476	IdentifierDeclStatement	ulg bsize = ( ulg ) items * size ;	220:4:5087:5114	6652469	1	True				
ANR	6652477	IdentifierDecl	bsize = ( ulg ) items * size		6652469	0					
ANR	6652478	IdentifierDeclType	ulg		6652469	0					
ANR	6652479	Identifier	bsize		6652469	1					
ANR	6652480	AssignmentExpression	bsize = ( ulg ) items * size		6652469	2		=			
ANR	6652481	Identifier	bsize		6652469	0					
ANR	6652482	MultiplicativeExpression	( ulg ) items * size		6652469	1		*			
ANR	6652483	CastExpression	( ulg ) items		6652469	0					
ANR	6652484	CastTarget	ulg		6652469	0					
ANR	6652485	Identifier	items		6652469	1					
ANR	6652486	Identifier	size		6652469	1					
ANR	6652487	ExpressionStatement	( void ) opaque	222:4:5121:5133	6652469	2	True				
ANR	6652488	CastExpression	( void ) opaque		6652469	0					
ANR	6652489	CastTarget	void		6652469	0					
ANR	6652490	Identifier	opaque		6652469	1					
ANR	6652491	IfStatement	if ( bsize < 65520L )		6652469	3					
ANR	6652492	Condition	bsize < 65520L	227:8:5295:5308	6652469	0	True				
ANR	6652493	RelationalExpression	bsize < 65520L		6652469	0		<			
ANR	6652494	Identifier	bsize		6652469	0					
ANR	6652495	PrimaryExpression	65520L		6652469	1					
ANR	6652496	CompoundStatement		10:24:245:245	6652469	1					
ANR	6652497	ExpressionStatement	buf = farmalloc ( bsize )	228:8:5321:5343	6652469	0	True				
ANR	6652498	AssignmentExpression	buf = farmalloc ( bsize )		6652469	0		=			
ANR	6652499	Identifier	buf		6652469	0					
ANR	6652500	CallExpression	farmalloc ( bsize )		6652469	1					
ANR	6652501	Callee	farmalloc		6652469	0					
ANR	6652502	Identifier	farmalloc		6652469	0					
ANR	6652503	ArgumentList	bsize		6652469	1					
ANR	6652504	Argument	bsize		6652469	0					
ANR	6652505	Identifier	bsize		6652469	0					
ANR	6652506	IfStatement	if ( * ( ush * ) & buf != 0 )		6652469	1					
ANR	6652507	Condition	* ( ush * ) & buf != 0	229:12:5357:5372	6652469	0	True				
ANR	6652508	EqualityExpression	* ( ush * ) & buf != 0		6652469	0		!=			
ANR	6652509	UnaryOperationExpression	* ( ush * ) & buf		6652469	0					
ANR	6652510	UnaryOperator	*		6652469	0					
ANR	6652511	CastExpression	( ush * ) & buf		6652469	1					
ANR	6652512	CastTarget	ush *		6652469	0					
ANR	6652513	UnaryOperationExpression	& buf		6652469	1					
ANR	6652514	UnaryOperator	&		6652469	0					
ANR	6652515	Identifier	buf		6652469	1					
ANR	6652516	PrimaryExpression	0		6652469	1					
ANR	6652517	ReturnStatement	return buf ;	229:30:5375:5385	6652469	1	True				
ANR	6652518	Identifier	buf		6652469	0					
ANR	6652519	ElseStatement	else		6652469	0					
ANR	6652520	CompoundStatement		13:11:332:332	6652469	0					
ANR	6652521	ExpressionStatement	buf = farmalloc ( bsize + 16L )	231:8:5408:5436	6652469	0	True				
ANR	6652522	AssignmentExpression	buf = farmalloc ( bsize + 16L )		6652469	0		=			
ANR	6652523	Identifier	buf		6652469	0					
ANR	6652524	CallExpression	farmalloc ( bsize + 16L )		6652469	1					
ANR	6652525	Callee	farmalloc		6652469	0					
ANR	6652526	Identifier	farmalloc		6652469	0					
ANR	6652527	ArgumentList	bsize + 16L		6652469	1					
ANR	6652528	Argument	bsize + 16L		6652469	0					
ANR	6652529	AdditiveExpression	bsize + 16L		6652469	0		+			
ANR	6652530	Identifier	bsize		6652469	0					
ANR	6652531	PrimaryExpression	16L		6652469	1					
ANR	6652532	IfStatement	if ( buf == NULL || next_ptr >= MAX_PTR )		6652469	4					
ANR	6652533	Condition	buf == NULL || next_ptr >= MAX_PTR	233:8:5452:5485	6652469	0	True				
ANR	6652534	OrExpression	buf == NULL || next_ptr >= MAX_PTR		6652469	0		||			
ANR	6652535	EqualityExpression	buf == NULL		6652469	0		==			
ANR	6652536	Identifier	buf		6652469	0					
ANR	6652537	Identifier	NULL		6652469	1					
ANR	6652538	RelationalExpression	next_ptr >= MAX_PTR		6652469	1		>=			
ANR	6652539	Identifier	next_ptr		6652469	0					
ANR	6652540	Identifier	MAX_PTR		6652469	1					
ANR	6652541	ReturnStatement	return NULL ;	233:44:5488:5499	6652469	1	True				
ANR	6652542	Identifier	NULL		6652469	0					
ANR	6652543	ExpressionStatement	table [ next_ptr ] . org_ptr = buf	234:4:5505:5534	6652469	5	True				
ANR	6652544	AssignmentExpression	table [ next_ptr ] . org_ptr = buf		6652469	0		=			
ANR	6652545	MemberAccess	table [ next_ptr ] . org_ptr		6652469	0					
ANR	6652546	ArrayIndexing	table [ next_ptr ]		6652469	0					
ANR	6652547	Identifier	table		6652469	0					
ANR	6652548	Identifier	next_ptr		6652469	1					
ANR	6652549	Identifier	org_ptr		6652469	1					
ANR	6652550	Identifier	buf		6652469	1					
ANR	6652551	ExpressionStatement	* ( ( ush * ) & buf + 1 ) += ( ( ush ) ( ( uch * ) buf - 0 ) + 15 ) >> 4	237:4:5582:5631	6652469	6	True				
ANR	6652552	AssignmentExpression	* ( ( ush * ) & buf + 1 ) += ( ( ush ) ( ( uch * ) buf - 0 ) + 15 ) >> 4		6652469	0		+=			
ANR	6652553	UnaryOperationExpression	* ( ( ush * ) & buf + 1 )		6652469	0					
ANR	6652554	UnaryOperator	*		6652469	0					
ANR	6652555	AdditiveExpression	( ush * ) & buf + 1		6652469	1		+			
ANR	6652556	CastExpression	( ush * ) & buf		6652469	0					
ANR	6652557	CastTarget	ush *		6652469	0					
ANR	6652558	UnaryOperationExpression	& buf		6652469	1					
ANR	6652559	UnaryOperator	&		6652469	0					
ANR	6652560	Identifier	buf		6652469	1					
ANR	6652561	PrimaryExpression	1		6652469	1					
ANR	6652562	ShiftExpression	( ( ush ) ( ( uch * ) buf - 0 ) + 15 ) >> 4		6652469	1		>>			
ANR	6652563	AdditiveExpression	( ush ) ( ( uch * ) buf - 0 ) + 15		6652469	0		+			
ANR	6652564	CastExpression	( ush ) ( ( uch * ) buf - 0 )		6652469	0					
ANR	6652565	CastTarget	ush		6652469	0					
ANR	6652566	AdditiveExpression	( uch * ) buf - 0		6652469	1		-			
ANR	6652567	CastExpression	( uch * ) buf		6652469	0					
ANR	6652568	CastTarget	uch *		6652469	0					
ANR	6652569	Identifier	buf		6652469	1					
ANR	6652570	PrimaryExpression	0		6652469	1					
ANR	6652571	PrimaryExpression	15		6652469	1					
ANR	6652572	PrimaryExpression	4		6652469	1					
ANR	6652573	ExpressionStatement	* ( ush * ) & buf = 0	238:4:5637:5652	6652469	7	True				
ANR	6652574	AssignmentExpression	* ( ush * ) & buf = 0		6652469	0		=			
ANR	6652575	UnaryOperationExpression	* ( ush * ) & buf		6652469	0					
ANR	6652576	UnaryOperator	*		6652469	0					
ANR	6652577	CastExpression	( ush * ) & buf		6652469	1					
ANR	6652578	CastTarget	ush *		6652469	0					
ANR	6652579	UnaryOperationExpression	& buf		6652469	1					
ANR	6652580	UnaryOperator	&		6652469	0					
ANR	6652581	Identifier	buf		6652469	1					
ANR	6652582	PrimaryExpression	0		6652469	1					
ANR	6652583	ExpressionStatement	table [ next_ptr ++ ] . new_ptr = buf	239:4:5658:5689	6652469	8	True				
ANR	6652584	AssignmentExpression	table [ next_ptr ++ ] . new_ptr = buf		6652469	0		=			
ANR	6652585	MemberAccess	table [ next_ptr ++ ] . new_ptr		6652469	0					
ANR	6652586	ArrayIndexing	table [ next_ptr ++ ]		6652469	0					
ANR	6652587	Identifier	table		6652469	0					
ANR	6652588	PostIncDecOperationExpression	next_ptr ++		6652469	1					
ANR	6652589	Identifier	next_ptr		6652469	0					
ANR	6652590	IncDec	++		6652469	1					
ANR	6652591	Identifier	new_ptr		6652469	1					
ANR	6652592	Identifier	buf		6652469	1					
ANR	6652593	ReturnStatement	return buf ;	240:4:5695:5705	6652469	9	True				
ANR	6652594	Identifier	buf		6652469	0					
ANR	6652595	ReturnType	voidpf ZLIB_INTERNAL		6652469	1					
ANR	6652596	Identifier	zcalloc		6652469	2					
ANR	6652597	ParameterList	"voidpf opaque , unsigned items , unsigned size"		6652469	3					
ANR	6652598	Parameter	voidpf opaque	217:30:5019:5031	6652469	0	True				
ANR	6652599	ParameterType	voidpf		6652469	0					
ANR	6652600	Identifier	opaque		6652469	1					
ANR	6652601	Parameter	unsigned items	217:45:5034:5047	6652469	1	True				
ANR	6652602	ParameterType	unsigned		6652469	0					
ANR	6652603	Identifier	items		6652469	1					
ANR	6652604	Parameter	unsigned size	217:61:5050:5062	6652469	2	True				
ANR	6652605	ParameterType	unsigned		6652469	0					
ANR	6652606	Identifier	size		6652469	1					
ANR	6652607	CFGEntryNode	ENTRY		6652469		True				
ANR	6652608	CFGExitNode	EXIT		6652469		True				
ANR	6652609	Symbol	opaque		6652469						
ANR	6652610	Symbol	NULL		6652469						
ANR	6652611	Symbol	next_ptr		6652469						
ANR	6652612	Symbol	* table		6652469						
ANR	6652613	Symbol	* ( ush * ) & buf		6652469						
ANR	6652614	Symbol	buf		6652469						
ANR	6652615	Symbol	* ( ( ush * ) & buf + 1 )		6652469						
ANR	6652616	Symbol	size		6652469						
ANR	6652617	Symbol	bsize		6652469						
ANR	6652618	Symbol	farmalloc		6652469						
ANR	6652619	Symbol	table [ next_ptr ] . org_ptr		6652469						
ANR	6652620	Symbol	MAX_PTR		6652469						
ANR	6652621	Symbol	items		6652469						
ANR	6652622	Symbol	& buf		6652469						
ANR	6652623	Symbol	* next_ptr		6652469						
ANR	6652624	Symbol	table		6652469						
ANR	6652625	Symbol	table [ next_ptr ++ ] . new_ptr		6652469						
ANR	6652626	Function	zcfree	243:0:5710:6204							
ANR	6652627	FunctionDef	"zcfree (voidpf opaque , voidpf ptr)"		6652626	0					
ANR	6652628	CompoundStatement		244:0:5764:6204	6652626	0					
ANR	6652629	IdentifierDeclStatement	int n ;	245:4:5770:5775	6652626	0	True				
ANR	6652630	IdentifierDecl	n		6652626	0					
ANR	6652631	IdentifierDeclType	int		6652626	0					
ANR	6652632	Identifier	n		6652626	1					
ANR	6652633	ExpressionStatement	( void ) opaque	247:4:5782:5794	6652626	1	True				
ANR	6652634	CastExpression	( void ) opaque		6652626	0					
ANR	6652635	CastTarget	void		6652626	0					
ANR	6652636	Identifier	opaque		6652626	1					
ANR	6652637	IfStatement	if ( * ( ush * ) & ptr != 0 )		6652626	2					
ANR	6652638	Condition	* ( ush * ) & ptr != 0	249:8:5805:5820	6652626	0	True				
ANR	6652639	EqualityExpression	* ( ush * ) & ptr != 0		6652626	0		!=			
ANR	6652640	UnaryOperationExpression	* ( ush * ) & ptr		6652626	0					
ANR	6652641	UnaryOperator	*		6652626	0					
ANR	6652642	CastExpression	( ush * ) & ptr		6652626	1					
ANR	6652643	CastTarget	ush *		6652626	0					
ANR	6652644	UnaryOperationExpression	& ptr		6652626	1					
ANR	6652645	UnaryOperator	&		6652626	0					
ANR	6652646	Identifier	ptr		6652626	1					
ANR	6652647	PrimaryExpression	0		6652626	1					
ANR	6652648	CompoundStatement		6:26:58:58	6652626	1					
ANR	6652649	ExpressionStatement	farfree ( ptr )	250:8:5852:5864	6652626	0	True				
ANR	6652650	CallExpression	farfree ( ptr )		6652626	0					
ANR	6652651	Callee	farfree		6652626	0					
ANR	6652652	Identifier	farfree		6652626	0					
ANR	6652653	ArgumentList	ptr		6652626	1					
ANR	6652654	Argument	ptr		6652626	0					
ANR	6652655	Identifier	ptr		6652626	0					
ANR	6652656	ReturnStatement	return ;	251:8:5874:5880	6652626	1	True				
ANR	6652657	ForStatement	for ( n = 0 ; n < next_ptr ; n ++ )		6652626	3					
ANR	6652658	ForInit	n = 0 ;	254:9:5933:5938	6652626	0	True				
ANR	6652659	AssignmentExpression	n = 0		6652626	0		=			
ANR	6652660	Identifier	n		6652626	0					
ANR	6652661	PrimaryExpression	0		6652626	1					
ANR	6652662	Condition	n < next_ptr	254:16:5940:5951	6652626	1	True				
ANR	6652663	RelationalExpression	n < next_ptr		6652626	0		<			
ANR	6652664	Identifier	n		6652626	0					
ANR	6652665	Identifier	next_ptr		6652626	1					
ANR	6652666	PostIncDecOperationExpression	n ++	254:30:5954:5956	6652626	2	True				
ANR	6652667	Identifier	n		6652626	0					
ANR	6652668	IncDec	++		6652626	1					
ANR	6652669	CompoundStatement		11:35:194:194	6652626	3					
ANR	6652670	IfStatement	if ( ptr != table [ n ] . new_ptr )		6652626	0					
ANR	6652671	Condition	ptr != table [ n ] . new_ptr	255:12:5973:5995	6652626	0	True				
ANR	6652672	EqualityExpression	ptr != table [ n ] . new_ptr		6652626	0		!=			
ANR	6652673	Identifier	ptr		6652626	0					
ANR	6652674	MemberAccess	table [ n ] . new_ptr		6652626	1					
ANR	6652675	ArrayIndexing	table [ n ]		6652626	0					
ANR	6652676	Identifier	table		6652626	0					
ANR	6652677	Identifier	n		6652626	1					
ANR	6652678	Identifier	new_ptr		6652626	1					
ANR	6652679	ContinueStatement	continue ;	255:37:5998:6006	6652626	1	True				
ANR	6652680	ExpressionStatement	farfree ( table [ n ] . org_ptr )	257:8:6017:6042	6652626	1	True				
ANR	6652681	CallExpression	farfree ( table [ n ] . org_ptr )		6652626	0					
ANR	6652682	Callee	farfree		6652626	0					
ANR	6652683	Identifier	farfree		6652626	0					
ANR	6652684	ArgumentList	table [ n ] . org_ptr		6652626	1					
ANR	6652685	Argument	table [ n ] . org_ptr		6652626	0					
ANR	6652686	MemberAccess	table [ n ] . org_ptr		6652626	0					
ANR	6652687	ArrayIndexing	table [ n ]		6652626	0					
ANR	6652688	Identifier	table		6652626	0					
ANR	6652689	Identifier	n		6652626	1					
ANR	6652690	Identifier	org_ptr		6652626	1					
ANR	6652691	WhileStatement	while ( ++ n < next_ptr )		6652626	2					
ANR	6652692	Condition	++ n < next_ptr	258:15:6059:6072	6652626	0	True				
ANR	6652693	RelationalExpression	++ n < next_ptr		6652626	0		<			
ANR	6652694	UnaryExpression	++ n		6652626	0					
ANR	6652695	IncDec	++		6652626	0					
ANR	6652696	Identifier	n		6652626	1					
ANR	6652697	Identifier	next_ptr		6652626	1					
ANR	6652698	CompoundStatement		15:31:310:310	6652626	1					
ANR	6652699	ExpressionStatement	table [ n - 1 ] = table [ n ]	259:12:6089:6110	6652626	0	True				
ANR	6652700	AssignmentExpression	table [ n - 1 ] = table [ n ]		6652626	0		=			
ANR	6652701	ArrayIndexing	table [ n - 1 ]		6652626	0					
ANR	6652702	Identifier	table		6652626	0					
ANR	6652703	AdditiveExpression	n - 1		6652626	1		-			
ANR	6652704	Identifier	n		6652626	0					
ANR	6652705	PrimaryExpression	1		6652626	1					
ANR	6652706	ArrayIndexing	table [ n ]		6652626	1					
ANR	6652707	Identifier	table		6652626	0					
ANR	6652708	Identifier	n		6652626	1					
ANR	6652709	ExpressionStatement	next_ptr --	261:8:6130:6140	6652626	3	True				
ANR	6652710	PostIncDecOperationExpression	next_ptr --		6652626	0					
ANR	6652711	Identifier	next_ptr		6652626	0					
ANR	6652712	IncDec	--		6652626	1					
ANR	6652713	ReturnStatement	return ;	262:8:6150:6156	6652626	4	True				
ANR	6652714	ExpressionStatement	"Assert ( 0 , ""zcfree: ptr not found"" )"	264:4:6168:6202	6652626	4	True				
ANR	6652715	CallExpression	"Assert ( 0 , ""zcfree: ptr not found"" )"		6652626	0					
ANR	6652716	Callee	Assert		6652626	0					
ANR	6652717	Identifier	Assert		6652626	0					
ANR	6652718	ArgumentList	0		6652626	1					
ANR	6652719	Argument	0		6652626	0					
ANR	6652720	PrimaryExpression	0		6652626	0					
ANR	6652721	Argument	"""zcfree: ptr not found"""		6652626	1					
ANR	6652722	PrimaryExpression	"""zcfree: ptr not found"""		6652626	0					
ANR	6652723	ReturnType	void ZLIB_INTERNAL		6652626	1					
ANR	6652724	Identifier	zcfree		6652626	2					
ANR	6652725	ParameterList	"voidpf opaque , voidpf ptr"		6652626	3					
ANR	6652726	Parameter	voidpf opaque	243:27:5737:5749	6652626	0	True				
ANR	6652727	ParameterType	voidpf		6652626	0					
ANR	6652728	Identifier	opaque		6652626	1					
ANR	6652729	Parameter	voidpf ptr	243:42:5752:5761	6652626	1	True				
ANR	6652730	ParameterType	voidpf		6652626	0					
ANR	6652731	Identifier	ptr		6652626	1					
ANR	6652732	CFGEntryNode	ENTRY		6652626		True				
ANR	6652733	CFGExitNode	EXIT		6652626		True				
ANR	6652734	Symbol	opaque		6652626						
ANR	6652735	Symbol	& ptr		6652626						
ANR	6652736	Symbol	table [ n ] . new_ptr		6652626						
ANR	6652737	Symbol	* ( ush * ) & ptr		6652626						
ANR	6652738	Symbol	* n		6652626						
ANR	6652739	Symbol	next_ptr		6652626						
ANR	6652740	Symbol	* table		6652626						
ANR	6652741	Symbol	table [ n ] . org_ptr		6652626						
ANR	6652742	Symbol	n		6652626						
ANR	6652743	Symbol	table		6652626						
ANR	6652744	Symbol	ptr		6652626						
ANR	6652745	Function	zcalloc	280:0:6407:6534							
ANR	6652746	FunctionDef	"zcalloc (voidpf opaque , uInt items , uInt size)"		6652745	0					
ANR	6652747	CompoundStatement		281:0:6475:6534	6652745	0					
ANR	6652748	ExpressionStatement	( void ) opaque	282:4:6481:6493	6652745	0	True				
ANR	6652749	CastExpression	( void ) opaque		6652745	0					
ANR	6652750	CastTarget	void		6652745	0					
ANR	6652751	Identifier	opaque		6652745	1					
ANR	6652752	ReturnStatement	"return _halloc ( ( long ) items , size ) ;"	283:4:6499:6532	6652745	1	True				
ANR	6652753	CallExpression	"_halloc ( ( long ) items , size )"		6652745	0					
ANR	6652754	Callee	_halloc		6652745	0					
ANR	6652755	Identifier	_halloc		6652745	0					
ANR	6652756	ArgumentList	( long ) items		6652745	1					
ANR	6652757	Argument	( long ) items		6652745	0					
ANR	6652758	CastExpression	( long ) items		6652745	0					
ANR	6652759	CastTarget	long		6652745	0					
ANR	6652760	Identifier	items		6652745	1					
ANR	6652761	Argument	size		6652745	1					
ANR	6652762	Identifier	size		6652745	0					
ANR	6652763	ReturnType	voidpf ZLIB_INTERNAL		6652745	1					
ANR	6652764	Identifier	zcalloc		6652745	2					
ANR	6652765	ParameterList	"voidpf opaque , uInt items , uInt size"		6652745	3					
ANR	6652766	Parameter	voidpf opaque	280:30:6437:6449	6652745	0	True				
ANR	6652767	ParameterType	voidpf		6652745	0					
ANR	6652768	Identifier	opaque		6652745	1					
ANR	6652769	Parameter	uInt items	280:45:6452:6461	6652745	1	True				
ANR	6652770	ParameterType	uInt		6652745	0					
ANR	6652771	Identifier	items		6652745	1					
ANR	6652772	Parameter	uInt size	280:57:6464:6472	6652745	2	True				
ANR	6652773	ParameterType	uInt		6652745	0					
ANR	6652774	Identifier	size		6652745	1					
ANR	6652775	CFGEntryNode	ENTRY		6652745		True				
ANR	6652776	CFGExitNode	EXIT		6652745		True				
ANR	6652777	Symbol	opaque		6652745						
ANR	6652778	Symbol	size		6652745						
ANR	6652779	Symbol	items		6652745						
ANR	6652780	Symbol	_halloc		6652745						
ANR	6652781	Function	zcfree	286:0:6537:6628							
ANR	6652782	FunctionDef	"zcfree (voidpf opaque , voidpf ptr)"		6652781	0					
ANR	6652783	CompoundStatement		287:0:6591:6628	6652781	0					
ANR	6652784	ExpressionStatement	( void ) opaque	288:4:6597:6609	6652781	0	True				
ANR	6652785	CastExpression	( void ) opaque		6652781	0					
ANR	6652786	CastTarget	void		6652781	0					
ANR	6652787	Identifier	opaque		6652781	1					
ANR	6652788	ExpressionStatement	_hfree ( ptr )	289:4:6615:6626	6652781	1	True				
ANR	6652789	CallExpression	_hfree ( ptr )		6652781	0					
ANR	6652790	Callee	_hfree		6652781	0					
ANR	6652791	Identifier	_hfree		6652781	0					
ANR	6652792	ArgumentList	ptr		6652781	1					
ANR	6652793	Argument	ptr		6652781	0					
ANR	6652794	Identifier	ptr		6652781	0					
ANR	6652795	ReturnType	void ZLIB_INTERNAL		6652781	1					
ANR	6652796	Identifier	zcfree		6652781	2					
ANR	6652797	ParameterList	"voidpf opaque , voidpf ptr"		6652781	3					
ANR	6652798	Parameter	voidpf opaque	286:27:6564:6576	6652781	0	True				
ANR	6652799	ParameterType	voidpf		6652781	0					
ANR	6652800	Identifier	opaque		6652781	1					
ANR	6652801	Parameter	voidpf ptr	286:42:6579:6588	6652781	1	True				
ANR	6652802	ParameterType	voidpf		6652781	0					
ANR	6652803	Identifier	ptr		6652781	1					
ANR	6652804	CFGEntryNode	ENTRY		6652781		True				
ANR	6652805	CFGExitNode	EXIT		6652781		True				
ANR	6652806	Symbol	opaque		6652781						
ANR	6652807	Symbol	ptr		6652781						
ANR	6652808	DeclStmt									
ANR	6652809	Decl							voidpf	voidpf	opaque
ANR	6652810	DeclStmt									
ANR	6652811	Decl							unsigned	unsigned	items
ANR	6652812	DeclStmt									
ANR	6652813	Decl							unsigned	unsigned	size
ANR	6652814	DeclStmt									
ANR	6652815	Decl							voidpf	voidpf	opaque
ANR	6652816	DeclStmt									
ANR	6652817	Decl							voidpf	voidpf	ptr
